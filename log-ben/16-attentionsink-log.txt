Threshold: 0.1
Enable layer loss: False
MAX LEARNING RATE: 0.0006
Experiment name: 16-attentionsink
MLPSCALE: 4
Experiment description: Transformer, max LR 6e-4
Setting:
========
self.compiler = BenCompilerNoOp(config)
self.execute = VanillaExecute(config)
y = self.ln_1(x)
attn, resx, scores = self.attn(y, y)
program = self.compiler(y)
machineOutput = self.execute(program, attn)
x = x + machineOutput
======== 
VALUEMATRIX=True
REUSE_WEIGHTS=False
MLP_SCALE=4
MEASURE_SELF_CONTRIBUTION=False
NEW_ALL_LAYER_LOSS=False
MATRIX_NUM_PARAMS=4096
MLPMAT_INNER_SIZE=64
DELETE_SELF_CONTRIBUTION=False
EXTRACT_SELF_CONTRIBUTION=False
ATTENTION_SINK=True

Warmup steps: 100
total desired batch size: 131072
Mini-batch size: 8*1024
=> calculated gradient accumulation steps: 16
=> calculated gradient accumulation steps: 16
Training max steps: 300001Num GPUs: 1{'block_size': 1024, 'vocab_size': 50304, 'n_layer': 12, 'n_head': 12, 'n_embd': 768}
num decayed parameter tensors: 50, with 124,354,560 parameters
num non-decayed parameter tensors: 86, with 112,128 parameters
@ 0 train 10.9828 , allloss: 10.9828, dt: 2888.01ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:13.7824, tok/sec: 45384.89, flops:39.75, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6445, 0.3555, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3457, 0.2891, 0.3652, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2812, 0.2227, 0.2334, 0.2637, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2100, 0.2383, 0.1475, 0.2285, 0.1768, 0.0000, 0.0000, 0.0000],
        [0.1592, 0.2236, 0.1699, 0.1504, 0.1338, 0.1641, 0.0000, 0.0000],
        [0.1406, 0.1406, 0.1621, 0.0723, 0.1729, 0.1650, 0.1475, 0.0000],
        [0.1338, 0.0938, 0.1426, 0.1211, 0.1992, 0.0889, 0.1094, 0.1108]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.0000,      0.0000,     -0.0000,      0.0000,      0.0000,     -0.0000,     -0.0000],
        [    -0.0000,     -0.5938,     -0.3203,     -0.0481,     -0.4336,     -0.0579,      0.2139,      0.1172],
        [    -0.0000,     -0.1816,      0.0496,      0.3828,      0.1709,      0.0271,      0.4824,     -0.2314],
        [     0.0000,     -0.2305,     -0.1826,     -0.0625,      0.1650,      0.4180,     -0.1445,      0.4004],
        [     0.0000,      0.1279,     -0.3516,      0.0859,     -0.1709,     -0.2334,     -0.2207,      0.0457],
        [    -0.0000,      0.3438,      0.0688,     -0.0571,     -0.1689,      0.0308,      0.1787,      0.0986],
        [    -0.0000,      0.0025,      0.1436,     -0.6602,      0.2070,      0.1621,      0.0500,      0.3145],
        [     0.0000,     -0.3535,      0.0684,     -0.0947,      0.4023,     -0.4043,     -0.1963,     -0.1846]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [ 5.9297],
        [ 3.6426],
        [ 2.8350],
        [ 2.4014],
        [ 2.0195],
        [ 1.6123],
        [ 1.4526],
        [ 1.2563],
        [ 1.2354],
        [ 1.0303],
        [ 0.9868],
        [ 0.9409],
        [ 0.8423],
        [ 0.7852]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5312, 0.4688, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3496, 0.3145, 0.3379, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2441, 0.2285, 0.2949, 0.2324, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2275, 0.1455, 0.2734, 0.1494, 0.2031, 0.0000, 0.0000, 0.0000],
        [0.1504, 0.1167, 0.1846, 0.1377, 0.1660, 0.2441, 0.0000, 0.0000],
        [0.1240, 0.0952, 0.1113, 0.2246, 0.1680, 0.1484, 0.1289, 0.0000],
        [0.1064, 0.1216, 0.1367, 0.1201, 0.1816, 0.1240, 0.1030, 0.1069]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.0000,      0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000],
        [     0.0000,     -0.1279,      0.1289,     -0.0625,     -0.2734,     -0.0405,      0.1875,      0.2471],
        [     0.0000,     -0.1064,     -0.0332,      0.4902,      0.1748,     -0.0654,      0.3262,      0.2012],
        [     0.0000,     -0.0659,      0.1875,     -0.0483,      0.2930,      0.2754,      0.4258,      0.3984],
        [     0.0000,     -0.4473,      0.1846,     -0.4238,     -0.1143,     -0.0569,      0.0845,     -0.1167],
        [     0.0000,     -0.2539,      0.2061,     -0.0894,      0.1006,      0.4824,      0.1523,     -0.2168],
        [    -0.0000,     -0.2637,     -0.1060,      0.5938,      0.3027,      0.1787,      0.0364,      0.4824],
        [     0.0000,      0.1338,      0.2490,      0.1216,      0.5391,      0.1562,     -0.0309,      0.0080]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [ 6.4707],
        [ 3.7832],
        [ 3.0527],
        [ 2.2363],
        [ 2.0093],
        [ 1.6523],
        [ 1.4663],
        [ 1.2856],
        [ 1.1606],
        [ 1.0532],
        [ 0.9973],
        [ 0.8950],
        [ 0.8103],
        [ 0.8340]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5234, 0.4766, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4043, 0.2988, 0.2969, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3105, 0.1768, 0.2715, 0.2412, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2334, 0.1914, 0.2656, 0.1436, 0.1650, 0.0000, 0.0000, 0.0000],
        [0.1504, 0.1040, 0.2061, 0.1758, 0.2383, 0.1260, 0.0000, 0.0000],
        [0.1689, 0.0679, 0.2129, 0.1206, 0.1289, 0.1631, 0.1377, 0.0000],
        [0.1465, 0.1025, 0.1904, 0.0981, 0.1191, 0.1060, 0.0737, 0.1641]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,     -0.0000,     -0.0000,      0.0000],
        [    -0.0000,     -0.0933,      0.1514,     -0.2539,     -0.0596,      0.3418,      0.2061,     -0.2168],
        [    -0.0000,     -0.3047,     -0.3105,      0.0427,      0.2012,      0.2285,      0.0525,      0.3789],
        [    -0.0000,     -0.5625,     -0.1309,     -0.2520,      0.0713,      0.3691,      0.1367,      0.1699],
        [     0.0000,     -0.1973,      0.1328,     -0.4883,     -0.3438,     -0.3438,     -0.1748,     -0.0303],
        [     0.0000,     -0.3652,      0.3164,      0.1582,      0.4609,     -0.1748,      0.1108,     -0.0698],
        [     0.0000,     -0.9141,      0.2295,     -0.3379,     -0.2715,     -0.0371,     -0.2031,     -0.1250],
        [     0.0000,     -0.3555,      0.2637,     -0.3965,     -0.2061,     -0.3203,     -0.6797,      0.1167]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [ 5.9805],
        [ 4.1543],
        [ 3.0977],
        [ 2.5664],
        [ 1.8975],
        [ 1.7339],
        [ 1.5708],
        [ 1.2915],
        [ 1.1968],
        [ 1.0889],
        [ 0.9553],
        [ 0.9192],
        [ 0.8921],
        [ 0.7959]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5039, 0.4980, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2637, 0.2344, 0.5039, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2246, 0.2168, 0.3027, 0.2559, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1758, 0.2295, 0.2500, 0.1719, 0.1719, 0.0000, 0.0000, 0.0000],
        [0.1338, 0.1641, 0.2715, 0.1709, 0.1387, 0.1206, 0.0000, 0.0000],
        [0.1562, 0.1318, 0.1641, 0.1113, 0.1167, 0.1611, 0.1582, 0.0000],
        [0.1128, 0.1157, 0.2109, 0.1172, 0.1416, 0.1060, 0.0559, 0.1396]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,      0.0000,     -0.0000],
        [     0.0000,     -0.0110,      0.5508,      0.1226,     -0.2197,      0.0713,     -0.3047,      0.4043],
        [     0.0000,     -0.1147,      0.6484,      0.0923,      0.1187,     -0.0747,      0.0491,      0.6719],
        [     0.0000,     -0.0325,      0.3027,      0.1279,      0.2812,      0.1250,      0.1787,      0.2041],
        [     0.0000,      0.2656,      0.3516,     -0.0234,     -0.0248,     -0.5703,      0.2344,      0.1816],
        [    -0.0000,      0.2061,      0.7109,      0.2471,      0.0352,     -0.1045,      0.2539,     -0.0068],
        [     0.0000,     -0.1699,      0.0476,     -0.3379,     -0.2930,      0.0312,      0.0114,     -0.2812],
        [     0.0000,      0.0223,      0.6250,      0.0359,      0.2246,     -0.0654,     -0.7031,      0.2119]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [ 5.7285],
        [ 3.6982],
        [ 3.0654],
        [ 2.3672],
        [ 1.9287],
        [ 1.6816],
        [ 1.4600],
        [ 1.2573],
        [ 1.2686],
        [ 1.0923],
        [ 0.9333],
        [ 0.9048],
        [ 0.8545],
        [ 0.7603]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4160, 0.5820, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3164, 0.3516, 0.3320, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2227, 0.2188, 0.1904, 0.3672, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1924, 0.1973, 0.2188, 0.1416, 0.2490, 0.0000, 0.0000, 0.0000],
        [0.1455, 0.1562, 0.0967, 0.2256, 0.1426, 0.2334, 0.0000, 0.0000],
        [0.0957, 0.1787, 0.1230, 0.1602, 0.1289, 0.1826, 0.1309, 0.0000],
        [0.1289, 0.1118, 0.1289, 0.1084, 0.1201, 0.1152, 0.1367, 0.1504]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,     -0.0000,      0.0000,     -0.0000,     -0.0000,      0.0000,     -0.0000,     -0.0000],
        [     0.0000,      0.3359,     -0.0508,     -0.0371,     -0.0253,      0.2051,      0.3594,      0.2754],
        [    -0.0000,      0.1021,      0.0452,      0.1846,      0.1826,      0.2285,      0.2832,      0.2910],
        [     0.0000,     -0.0194,     -0.1543,      0.5000,      0.2539,      0.2207,      0.0535,     -0.2471],
        [    -0.0000,      0.0254,      0.1270,     -0.3066,      0.2578,      0.2139,      0.2354,     -0.1138],
        [     0.0000,      0.0723,     -0.4062,      0.4395,     -0.0161,      0.4746,     -0.1934,      0.0684],
        [     0.0000,      0.6250,      0.2500,      0.5156,      0.2930,      0.6445,      0.3105,      0.4941],
        [     0.0000,     -0.1436,     -0.0054,     -0.1768,     -0.0718,     -0.1123,      0.0576,      0.1494]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [ 6.0332],
        [ 3.7363],
        [ 2.7627],
        [ 2.3047],
        [ 1.9556],
        [ 1.6538],
        [ 1.4980],
        [ 1.2197],
        [ 1.1196],
        [ 1.1040],
        [ 0.9023],
        [ 0.9834],
        [ 0.8796],
        [ 0.8003]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3809, 0.6211, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2754, 0.4609, 0.2637, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2334, 0.3320, 0.2363, 0.1992, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2070, 0.2461, 0.2520, 0.1416, 0.1523, 0.0000, 0.0000, 0.0000],
        [0.1543, 0.2119, 0.1855, 0.1387, 0.1934, 0.1157, 0.0000, 0.0000],
        [0.1348, 0.1885, 0.1855, 0.1172, 0.1299, 0.1138, 0.1299, 0.0000],
        [0.1030, 0.1514, 0.1055, 0.1016, 0.1895, 0.0776, 0.1504, 0.1221]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0000,      0.0000,     -0.0000,     -0.0000,      0.0000,     -0.0000,      0.0000],
        [     0.0000,      0.4863,     -0.0869,     -0.1660,     -0.0447,     -0.1475,      0.0209,     -0.0962],
        [     0.0000,      0.5117,     -0.0427,      0.0752,     -0.1074,     -0.2949,     -0.1680,     -0.6172],
        [     0.0000,      0.3516,      0.0136,     -0.1562,      0.0991,     -0.1260,     -0.0493,     -0.1689],
        [     0.0000,      0.1699,      0.1973,     -0.3809,     -0.3086,      0.2090,     -0.1084,     -0.2598],
        [     0.0000,      0.3164,      0.1826,     -0.1064,      0.2217,     -0.2891,     -0.2490,     -0.3594],
        [     0.0000,      0.3379,      0.3203,     -0.1377,     -0.0327,     -0.1689,     -0.0364,      0.1611],
        [     0.0000,      0.3789,      0.0194,     -0.0171,      0.6055,     -0.2852,      0.3750,      0.1680]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [ 5.9766],
        [ 3.8965],
        [ 2.9326],
        [ 2.4473],
        [ 1.8838],
        [ 1.7114],
        [ 1.5210],
        [ 1.3223],
        [ 1.1748],
        [ 1.0635],
        [ 0.9976],
        [ 0.8965],
        [ 0.8320],
        [ 0.8110]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5000, 0.5000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3945, 0.2832, 0.3242, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2812, 0.2656, 0.2402, 0.2119, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1865, 0.2451, 0.2188, 0.1611, 0.1885, 0.0000, 0.0000, 0.0000],
        [0.1338, 0.1377, 0.1934, 0.1865, 0.1484, 0.2002, 0.0000, 0.0000],
        [0.1357, 0.1177, 0.1562, 0.1943, 0.1367, 0.1729, 0.0864, 0.0000],
        [0.1543, 0.1138, 0.1377, 0.1299, 0.1328, 0.1172, 0.1074, 0.1069]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000],
        [    -0.0000,      0.0020,      0.0291,     -0.0659,     -0.3730,      0.0845,     -0.4512,     -0.2266],
        [    -0.0000,     -0.3320,     -0.1953,     -0.3438,     -0.0221,     -0.3086,     -0.2617,     -0.4707],
        [    -0.0000,     -0.0562,     -0.1592,     -0.2852,     -0.2109,     -0.0869,     -0.0947,     -0.0645],
        [    -0.0000,      0.2773,      0.1611,     -0.1426,      0.0106,      0.4902,     -0.0947,     -0.0308],
        [    -0.0000,      0.0289,      0.3633,      0.3281,      0.1006,      0.3984,      0.0303,      0.3730],
        [    -0.0000,     -0.1436,      0.1426,      0.3574,      0.0099,      0.2393,     -0.4512,      0.0408],
        [    -0.0000,     -0.3066,     -0.1162,     -0.1738,     -0.1475,     -0.2754,     -0.3613,     -0.3672]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [ 5.7422],
        [ 3.7949],
        [ 2.7783],
        [ 2.3076],
        [ 1.6680],
        [ 1.7075],
        [ 1.4287],
        [ 1.4331],
        [ 1.1484],
        [ 1.0234],
        [ 0.9722],
        [ 0.8325],
        [ 0.8105],
        [ 0.7856]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3320, 0.6680, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2715, 0.4023, 0.3242, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2441, 0.3027, 0.2578, 0.1953, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2041, 0.3281, 0.1641, 0.1396, 0.1650, 0.0000, 0.0000, 0.0000],
        [0.1670, 0.2041, 0.1465, 0.1201, 0.1406, 0.2207, 0.0000, 0.0000],
        [0.1523, 0.1602, 0.1416, 0.1240, 0.1416, 0.1562, 0.1240, 0.0000],
        [0.1357, 0.1235, 0.1230, 0.0659, 0.1177, 0.1621, 0.1055, 0.1670]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,     -0.0000,      0.0000,      0.0000,     -0.0000,     -0.0000,      0.0000],
        [     0.0000,      0.6992,      0.6445,      0.1660,     -0.1416,      0.8125,      0.5664,      0.3184],
        [     0.0000,      0.3906,      0.1768,     -0.3516,      0.1738,      0.3887,      0.3594,      0.1621],
        [     0.0000,      0.2188,      0.0540,     -0.2217,     -0.2041,      0.2246,     -0.3418,     -0.0422],
        [     0.0000,      0.4727,     -0.2158,     -0.3770,     -0.2100,      0.2041,     -0.0684,     -0.3105],
        [     0.0000,      0.1982,     -0.1309,     -0.3301,     -0.1719,      0.2793,     -0.2637,     -0.2266],
        [     0.0000,      0.0466,     -0.0723,     -0.2070,     -0.0771,      0.0221,     -0.2090,     -0.3242],
        [     0.0000,     -0.0923,     -0.0967,     -0.7188,     -0.1406,      0.1777,     -0.2480,      0.2100]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [ 5.6250],
        [ 4.0244],
        [ 3.1211],
        [ 2.2441],
        [ 1.9497],
        [ 1.5547],
        [ 1.3574],
        [ 1.3140],
        [ 1.2183],
        [ 1.0117],
        [ 0.9500],
        [ 0.9280],
        [ 0.8127],
        [ 0.6604]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4727, 0.5273, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3477, 0.3555, 0.2969, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2344, 0.2500, 0.2324, 0.2832, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2168, 0.1641, 0.2197, 0.1709, 0.2295, 0.0000, 0.0000, 0.0000],
        [0.1904, 0.1318, 0.1602, 0.1816, 0.1680, 0.1680, 0.0000, 0.0000],
        [0.1514, 0.1387, 0.1504, 0.1133, 0.1406, 0.1650, 0.1406, 0.0000],
        [0.1396, 0.1221, 0.1357, 0.1162, 0.1191, 0.1152, 0.1338, 0.1177]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,      0.0000,     -0.0000],
        [    -0.0000,      0.1074,      0.0593,     -0.0000,     -0.0674,      0.4551,     -0.0168,     -0.2178],
        [    -0.0000,      0.0175,     -0.1611,     -0.4980,     -0.2090,     -0.3711,     -0.2451,      0.1416],
        [    -0.0000,      0.0649,     -0.0052,      0.1904,      0.1108,     -0.1133,     -0.1396,      0.1914],
        [    -0.0000,     -0.2773,      0.0132,     -0.2363,      0.0583,      0.0364,     -0.2354,     -0.2754],
        [    -0.0000,     -0.3711,     -0.1758,     -0.0471,     -0.1299,     -0.1279,      0.1045,      0.0078],
        [    -0.0000,     -0.0869,     -0.0059,     -0.2871,     -0.0674,      0.0908,     -0.0679,     -0.0009],
        [    -0.0000,     -0.1367,     -0.0303,     -0.1875,     -0.1592,     -0.1953,     -0.0417,     -0.1748]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [ 5.7188],
        [ 4.0332],
        [ 3.0654],
        [ 2.5264],
        [ 2.1318],
        [ 1.7432],
        [ 1.5303],
        [ 1.4014],
        [ 1.2686],
        [ 1.1401],
        [ 1.0635],
        [ 1.0259],
        [ 0.8159],
        [ 0.8220]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6523, 0.3477, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4336, 0.2266, 0.3379, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3066, 0.0967, 0.2637, 0.3320, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2334, 0.0991, 0.2490, 0.2695, 0.1484, 0.0000, 0.0000, 0.0000],
        [0.1934, 0.1108, 0.1865, 0.2080, 0.1426, 0.1572, 0.0000, 0.0000],
        [0.1367, 0.1455, 0.1631, 0.1582, 0.1377, 0.1309, 0.1279, 0.0000],
        [0.2002, 0.0991, 0.1240, 0.1167, 0.0947, 0.0933, 0.1172, 0.1553]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,     -0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,     -0.0000],
        [    -0.0000,     -0.6289,     -0.1650,      0.3086,     -0.1895,     -0.2314,     -0.4434,      0.0300],
        [    -0.0000,     -0.6484,     -0.2490,      0.2949,     -0.3301,     -0.4824,     -0.3301,      0.0300],
        [     0.0000,     -1.1562,     -0.1494,      0.0815,     -0.5586,     -0.7344,     -0.2812,     -0.3027],
        [    -0.0000,     -0.8555,      0.0659,      0.1436,     -0.4570,     -0.3105,     -0.2197,     -0.2002],
        [     0.0000,     -0.5586,     -0.0366,      0.0708,     -0.3047,     -0.2070,     -0.4277,      0.0108],
        [     0.0000,      0.0654,      0.1777,      0.1494,      0.0106,     -0.0388,     -0.0679,     -0.1494],
        [     0.0000,     -0.7031,     -0.4785,     -0.5391,     -0.7461,     -0.7617,     -0.5352,     -0.2539]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [ 5.8887],
        [ 4.3145],
        [ 3.0127],
        [ 2.3887],
        [ 1.8447],
        [ 1.5723],
        [ 1.4956],
        [ 1.4092],
        [ 1.2271],
        [ 1.1675],
        [ 1.0347],
        [ 0.8196],
        [ 0.8557],
        [ 0.7578]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5742, 0.4258, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3047, 0.3340, 0.3613, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2793, 0.2344, 0.2275, 0.2578, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2520, 0.2100, 0.1592, 0.1846, 0.1943, 0.0000, 0.0000, 0.0000],
        [0.1855, 0.1787, 0.1069, 0.1729, 0.1973, 0.1602, 0.0000, 0.0000],
        [0.1641, 0.1543, 0.1543, 0.1436, 0.1416, 0.1206, 0.1216, 0.0000],
        [0.1133, 0.1187, 0.1514, 0.1611, 0.1660, 0.1143, 0.0947, 0.0815]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000],
        [     0.0000,     -0.3008,      0.0250,     -0.2148,      0.1260,     -0.3535,     -0.1348,     -0.4453],
        [     0.0000,      0.0957,      0.1719,      0.3086,      0.2324,     -0.0713,      0.0452,      0.0072],
        [    -0.0000,     -0.1797,     -0.2051,     -0.0815,     -0.0525,     -0.3203,     -0.1924,     -0.2637],
        [    -0.0000,     -0.1777,     -0.4551,     -0.3066,     -0.2559,     -0.3926,     -0.1221,     -0.2988],
        [     0.0000,     -0.0361,     -0.5508,     -0.0718,      0.0635,     -0.1484,     -0.2793,      0.0186],
        [     0.0000,     -0.0588,     -0.0588,     -0.1289,     -0.1465,     -0.3047,     -0.2969,     -0.3730],
        [     0.0000,      0.0461,      0.2891,      0.3516,      0.3828,      0.0081,     -0.1758,     -0.3281]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [ 5.7461],
        [ 4.0918],
        [ 2.9160],
        [ 2.4502],
        [ 2.0488],
        [ 1.8027],
        [ 1.5425],
        [ 1.2559],
        [ 1.2036],
        [ 1.1182],
        [ 0.9524],
        [ 0.9153],
        [ 0.8542],
        [ 0.8059]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5625, 0.4375, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3535, 0.2412, 0.4062, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2656, 0.2051, 0.2471, 0.2812, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2393, 0.1641, 0.1650, 0.2520, 0.1807, 0.0000, 0.0000, 0.0000],
        [0.1689, 0.1406, 0.1348, 0.1953, 0.1504, 0.2100, 0.0000, 0.0000],
        [0.1484, 0.0781, 0.1494, 0.1973, 0.1348, 0.1445, 0.1475, 0.0000],
        [0.1279, 0.1074, 0.1191, 0.1553, 0.0894, 0.1201, 0.1201, 0.1602]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000],
        [    -0.0000,     -0.2539,      0.2061,      0.4902,     -0.0864,     -0.0781,      0.3555,      0.3926],
        [     0.0000,     -0.3848,      0.1367,      0.2617,      0.1943,     -0.0055,     -0.0693,      0.3242],
        [     0.0000,     -0.2617,     -0.0747,      0.0574,     -0.1118,     -0.0806,      0.0825,      0.1226],
        [     0.0000,     -0.3750,     -0.3711,      0.0520,     -0.2793,     -0.1768,     -0.1787,      0.1562],
        [     0.0000,     -0.1807,     -0.2217,      0.1445,     -0.1177,      0.2168,      0.3438,      0.3340],
        [     0.0000,     -0.6445,      0.0070,      0.2832,     -0.0977,     -0.0310,     -0.0063,      0.2314],
        [    -0.0000,     -0.1777,     -0.0737,      0.1904,     -0.3594,     -0.0679,     -0.0664,      0.2207]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [ 6.4336],
        [ 4.0586],
        [ 3.1504],
        [ 2.4248],
        [ 2.0210],
        [ 1.8745],
        [ 1.5508],
        [ 1.3740],
        [ 1.2690],
        [ 1.2188],
        [ 1.0732],
        [ 0.9524],
        [ 0.7974],
        [ 0.7866]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( hay:0.0001 Further:0.0002 dign:0.0002,:0.0003 Sabb:0.0002 inciner:0.0001 undead:0.0002Neigh:0.0002)
Neigh
------
		( Further:0.0002 dign:0.0002,:0.0003 Sabb:0.0002 inciner:0.0001 undead:0.0002Neigh:0.0002Neigh:0.0003)
NeighNeighNeighNeighNeighNeighNeighNeigh sweet sweet sweet sweet sweet sweet sweet
@ 1 train 10.6559 , allloss: 10.6559, dt: 2184.22ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:12.1163, tok/sec: 60008.49, flops:52.56, batch-reuse:1
@ 2 train 10.2723 , allloss: 10.2723, dt: 1554.91ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:7.4834, tok/sec: 84295.52, flops:73.83, batch-reuse:1
@ 3 train 10.0047 , allloss: 10.0047, dt: 1553.85ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:5.2522, tok/sec: 84352.92, flops:73.88, batch-reuse:1
@ 4 train 9.8233 , allloss: 9.8233, dt: 1554.95ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:3.6484, tok/sec: 84293.36, flops:73.83, batch-reuse:1
@ 5 train 9.7361 , allloss: 9.7361, dt: 1559.48ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:2.7570, tok/sec: 84048.44, flops:73.61, batch-reuse:1
@ 6 train 9.5748 , allloss: 9.5748, dt: 1559.50ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:2.5152, tok/sec: 84047.44, flops:73.61, batch-reuse:1
@ 7 train 9.5302 , allloss: 9.5302, dt: 1560.04ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:2.3507, tok/sec: 84018.18, flops:73.59, batch-reuse:1
@ 8 train 9.4945 , allloss: 9.4945, dt: 1559.81ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:2.2845, tok/sec: 84030.87, flops:73.60, batch-reuse:1
@ 9 train 9.4278 , allloss: 9.4278, dt: 1559.93ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:2.3033, tok/sec: 84024.54, flops:73.59, batch-reuse:1
@ 10 train 9.3666 , allloss: 9.3666, dt: 1560.17ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:2.1465, tok/sec: 84011.10, flops:73.58, batch-reuse:1
@ 11 train 9.3440 , allloss: 9.3440, dt: 1559.34ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:1.9920, tok/sec: 84056.15, flops:73.62, batch-reuse:1
@ 12 train 9.2336 , allloss: 9.2336, dt: 1560.19ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:2.0228, tok/sec: 84010.35, flops:73.58, batch-reuse:1
@ 13 train 9.1693 , allloss: 9.1693, dt: 1559.29ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:1.9616, tok/sec: 84058.66, flops:73.62, batch-reuse:1
@ 14 train 9.0762 , allloss: 9.0762, dt: 1559.24ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:1.8700, tok/sec: 84061.55, flops:73.63, batch-reuse:1
@ 15 train 9.0032 , allloss: 9.0032, dt: 1559.73ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:1.6849, tok/sec: 84034.85, flops:73.60, batch-reuse:1
@ 16 train 8.9271 , allloss: 8.9271, dt: 1559.19ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:1.7114, tok/sec: 84063.97, flops:73.63, batch-reuse:1
@ 17 train 8.8611 , allloss: 8.8611, dt: 1560.57ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:1.7492, tok/sec: 83989.76, flops:73.56, batch-reuse:1
@ 18 train 8.7740 , allloss: 8.7740, dt: 1560.28ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:1.6676, tok/sec: 84005.49, flops:73.58, batch-reuse:1
@ 19 train 8.6282 , allloss: 8.6282, dt: 1560.11ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:1.7998, tok/sec: 84014.67, flops:73.58, batch-reuse:1
@ 20 train 8.5854 , allloss: 8.5854, dt: 1560.27ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:1.9633, tok/sec: 84006.10, flops:73.58, batch-reuse:1
@ 21 train 8.4816 , allloss: 8.4816, dt: 1559.11ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:1.8208, tok/sec: 84068.44, flops:73.63, batch-reuse:1
@ 22 train 8.3918 , allloss: 8.3918, dt: 1558.99ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:1.5098, tok/sec: 84075.01, flops:73.64, batch-reuse:1
@ 23 train 8.4128 , allloss: 8.4128, dt: 1558.69ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:1.3223, tok/sec: 84091.20, flops:73.65, batch-reuse:1
@ 24 train 8.3517 , allloss: 8.3517, dt: 1559.11ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:1.2613, tok/sec: 84068.26, flops:73.63, batch-reuse:1
@ 25 train 8.0815 , allloss: 8.0815, dt: 1559.03ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:1.3126, tok/sec: 84072.84, flops:73.64, batch-reuse:1
@ 26 train 8.0892 , allloss: 8.0892, dt: 1558.76ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:1.1625, tok/sec: 84087.33, flops:73.65, batch-reuse:1
@ 27 train 8.0018 , allloss: 8.0018, dt: 1558.70ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:1.0769, tok/sec: 84090.38, flops:73.65, batch-reuse:1
@ 28 train 7.9247 , allloss: 7.9247, dt: 1558.93ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.9345, tok/sec: 84077.94, flops:73.64, batch-reuse:1
@ 29 train 7.9234 , allloss: 7.9234, dt: 1558.70ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.9161, tok/sec: 84090.73, flops:73.65, batch-reuse:1
@ 30 train 7.7531 , allloss: 7.7531, dt: 1558.81ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.8343, tok/sec: 84084.82, flops:73.65, batch-reuse:1
@ 31 train 7.7462 , allloss: 7.7462, dt: 1558.96ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.7590, tok/sec: 84076.35, flops:73.64, batch-reuse:1
@ 32 train 7.6781 , allloss: 7.6781, dt: 1558.82ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.8633, tok/sec: 84084.37, flops:73.65, batch-reuse:1
@ 33 train 7.5760 , allloss: 7.5760, dt: 1558.77ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.7199, tok/sec: 84086.87, flops:73.65, batch-reuse:1
@ 34 train 7.5592 , allloss: 7.5592, dt: 1560.20ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.6258, tok/sec: 84009.53, flops:73.58, batch-reuse:1
@ 35 train 7.5106 , allloss: 7.5106, dt: 1560.36ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.7428, tok/sec: 84001.09, flops:73.57, batch-reuse:1
@ 36 train 7.4153 , allloss: 7.4153, dt: 1559.29ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.7453, tok/sec: 84058.90, flops:73.62, batch-reuse:1
@ 37 train 7.4218 , allloss: 7.4218, dt: 1560.06ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4836, tok/sec: 84017.27, flops:73.59, batch-reuse:1
@ 38 train 7.3544 , allloss: 7.3544, dt: 1559.74ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.7498, tok/sec: 84034.50, flops:73.60, batch-reuse:1
@ 39 train 7.3781 , allloss: 7.3781, dt: 1559.88ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5719, tok/sec: 84026.91, flops:73.60, batch-reuse:1
@ 40 train 7.3854 , allloss: 7.3854, dt: 1561.80ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.6012, tok/sec: 83923.70, flops:73.51, batch-reuse:1
@ 41 train 7.3226 , allloss: 7.3226, dt: 1559.97ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5300, tok/sec: 84022.26, flops:73.59, batch-reuse:1
@ 42 train 7.2799 , allloss: 7.2799, dt: 1562.14ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5925, tok/sec: 83905.22, flops:73.49, batch-reuse:1
@ 43 train 7.2662 , allloss: 7.2662, dt: 1559.37ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3867, tok/sec: 84054.44, flops:73.62, batch-reuse:1
@ 44 train 7.2752 , allloss: 7.2752, dt: 1558.87ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5143, tok/sec: 84081.23, flops:73.64, batch-reuse:1
@ 45 train 7.1701 , allloss: 7.1701, dt: 1559.14ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5011, tok/sec: 84066.92, flops:73.63, batch-reuse:1
@ 46 train 7.2106 , allloss: 7.2106, dt: 1558.78ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.8412, tok/sec: 84086.19, flops:73.65, batch-reuse:1
@ 47 train 7.1527 , allloss: 7.1527, dt: 1558.17ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:1.0830, tok/sec: 84119.35, flops:73.68, batch-reuse:1
@ 48 train 7.1260 , allloss: 7.1260, dt: 1557.73ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.8147, tok/sec: 84142.92, flops:73.70, batch-reuse:1
@ 49 train 7.1269 , allloss: 7.1269, dt: 1557.17ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.6693, tok/sec: 84173.05, flops:73.72, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7031, 0.2969, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3535, 0.2324, 0.4141, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2910, 0.2139, 0.2090, 0.2871, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2295, 0.2051, 0.1309, 0.2412, 0.1943, 0.0000, 0.0000, 0.0000],
        [0.1699, 0.2100, 0.1699, 0.1660, 0.1196, 0.1641, 0.0000, 0.0000],
        [0.1465, 0.1621, 0.1631, 0.0820, 0.1523, 0.1416, 0.1514, 0.0000],
        [0.1299, 0.1055, 0.1221, 0.1191, 0.2139, 0.0908, 0.1133, 0.1060]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.0008,      0.0005,      0.0001,     -0.0003,      0.0001,     -0.0011,      0.0001],
        [     0.0000,     -0.8594,     -0.4824,     -0.0327,     -0.4180,     -0.0669,      0.3027,      0.1826],
        [     0.0000,     -0.4199,      0.1592,      0.2988,      0.1602,      0.0214,      0.4492,     -0.1768],
        [     0.0000,     -0.3066,     -0.3320,     -0.0142,      0.1426,      0.3633,     -0.1562,      0.3809],
        [     0.0000,     -0.1157,     -0.5664,      0.0479,     -0.1689,     -0.2305,     -0.2598,      0.0425],
        [    -0.0000,      0.2090,     -0.0027,     -0.0244,     -0.3516,     -0.0337,      0.0649,      0.1572],
        [    -0.0000,      0.1035,      0.1099,     -0.5781,      0.0422,     -0.0330,      0.0366,      0.3516],
        [    -0.0000,     -0.2061,     -0.0591,     -0.0840,      0.5000,     -0.3555,     -0.1367,     -0.2012]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [ 6.3223],
        [ 3.9043],
        [ 3.0322],
        [ 2.6025],
        [ 2.1250],
        [ 1.6616],
        [ 1.4585],
        [ 1.2769],
        [ 1.2632],
        [ 1.0659],
        [ 0.9673],
        [ 0.9136],
        [ 0.8706],
        [ 0.8149]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4414, 0.5586, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5039, 0.2852, 0.2119, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4180, 0.2676, 0.1357, 0.1787, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2891, 0.2520, 0.1484, 0.0957, 0.2148, 0.0000, 0.0000, 0.0000],
        [0.2021, 0.1562, 0.1338, 0.1113, 0.1963, 0.2002, 0.0000, 0.0000],
        [0.1045, 0.1484, 0.1582, 0.2344, 0.1416, 0.1221, 0.0908, 0.0000],
        [0.1592, 0.0840, 0.0635, 0.0820, 0.2451, 0.2061, 0.1147, 0.0464]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.0004,     -0.0022,     -0.0019,     -0.0005,     -0.0012,      0.0008,     -0.0023],
        [     0.0000,      0.2314,     -0.2598,     -0.1133,     -0.6367,     -0.4453,      0.2793,     -0.0603],
        [     0.0000,     -0.5703,     -0.8672,     -0.6914,      0.1543,     -0.0131,     -0.0359,     -1.4297],
        [     0.0000,     -0.4434,     -1.1172,     -0.8477,     -0.0288,     -0.0864,      0.2617,     -1.2969],
        [     0.0000,     -0.1387,     -0.6680,     -1.1094,     -0.2949,     -0.4863,      0.4082,     -1.0000],
        [     0.0000,     -0.2598,     -0.4121,     -0.5977,     -0.0327,     -0.0104,      0.2451,     -0.9844],
        [    -0.0000,      0.3535,      0.4160,      0.8047,      0.3008,      0.1553,     -0.1416,      0.7070],
        [     0.0000,     -0.6406,     -0.9180,     -0.6641,      0.4297,      0.2578,     -0.3281,     -1.2344]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [ 7.6035],
        [ 6.8789],
        [ 6.0293],
        [ 2.3389],
        [ 2.7910],
        [ 1.3853],
        [ 2.3857],
        [ 1.4609],
        [ 1.7158],
        [ 1.1147],
        [ 1.4297],
        [ 1.4775],
        [ 0.8713],
        [ 0.6626]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6992, 0.2988, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7383, 0.2158, 0.0447, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5898, 0.2832, 0.0618, 0.0635, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2207, 0.2256, 0.1973, 0.1934, 0.1621, 0.0000, 0.0000, 0.0000],
        [0.1914, 0.0510, 0.0179, 0.0178, 0.6406, 0.0820, 0.0000, 0.0000],
        [0.0850, 0.0859, 0.2500, 0.2520, 0.0635, 0.2334, 0.0308, 0.0000],
        [0.1914, 0.0781, 0.0215, 0.0228, 0.2891, 0.0674, 0.3105, 0.0187]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.0017,     -0.0036,     -0.0033,      0.0008,     -0.0008,      0.0013,     -0.0037],
        [     0.0000,     -0.8516,     -1.4219,     -1.5156,      0.9062,     -0.2451,     -0.2832,     -1.8281],
        [     0.0000,     -1.2344,     -2.8125,     -2.8125,      1.2109,     -1.1641,      0.3691,     -3.2344],
        [     0.0000,     -0.7344,     -2.2656,     -2.2344,      0.3262,     -1.0078,      0.8555,     -2.3906],
        [     0.0000,      0.0242,     -0.1104,     -0.1318,     -0.3066,     -0.1011,      0.1030,     -0.0962],
        [     0.0000,     -1.3203,     -2.3750,     -2.3750,      1.2031,     -0.8477,      0.6406,     -2.8438],
        [    -0.0000,      0.0128,      1.0781,      1.0859,     -0.2910,      1.0078,     -1.0156,      1.3047],
        [     0.0000,     -0.8984,     -2.1875,     -2.1250,      0.4102,     -1.0469,      0.4863,     -2.3281]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [ 7.6367],
        [ 7.3066],
        [ 6.6992],
        [ 2.2637],
        [ 2.7305],
        [ 1.1260],
        [ 1.9639],
        [ 1.3884],
        [ 1.6006],
        [ 1.1399],
        [ 1.3489],
        [ 1.3022],
        [ 0.8506],
        [ 0.5951]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7188, 0.2812, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6719, 0.2832, 0.0437, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4824, 0.2246, 0.1040, 0.1885, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2285, 0.3223, 0.1416, 0.1113, 0.1963, 0.0000, 0.0000, 0.0000],
        [0.3359, 0.2949, 0.0698, 0.0996, 0.1162, 0.0835, 0.0000, 0.0000],
        [0.1299, 0.0903, 0.1406, 0.1201, 0.2734, 0.1328, 0.1128, 0.0000],
        [0.2227, 0.1045, 0.0537, 0.1016, 0.1553, 0.0762, 0.1992, 0.0869]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.0012,     -0.0057,     -0.0052,     -0.0010,     -0.0033,      0.0031,     -0.0053],
        [     0.0000,     -0.9375,     -2.7188,     -2.1719,     -0.7383,     -1.5625,      1.4141,     -2.2969],
        [     0.0000,     -0.8672,     -2.7344,     -2.1719,     -0.6758,     -1.8750,      0.8906,     -2.2344],
        [     0.0000,     -0.7656,     -1.5391,     -0.9375,     -0.3711,     -1.0859,     -0.0334,     -1.1016],
        [    -0.0000,      0.3457,     -0.4805,     -0.7188,     -0.1543,     -0.2500,      0.3164,     -0.5938],
        [     0.0000,     -0.1348,     -1.5781,     -1.2188,     -1.0625,     -1.3984,      1.2422,     -1.1797],
        [     0.0000,     -0.3633,      0.0801,     -0.0747,      0.7500,      0.0264,     -0.1406,     -0.0693],
        [     0.0000,     -0.7578,     -1.4219,     -0.7891,     -0.3633,     -1.0781,     -0.1128,     -0.9414]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [ 7.6855],
        [ 6.9727],
        [ 6.0791],
        [ 2.3945],
        [ 2.8687],
        [ 1.4302],
        [ 1.9526],
        [ 1.4031],
        [ 1.5881],
        [ 1.1226],
        [ 1.2266],
        [ 1.1196],
        [ 0.9136],
        [ 0.6768]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7773, 0.2207, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7930, 0.1504, 0.0574, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6211, 0.1260, 0.1162, 0.1367, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2520, 0.3906, 0.1025, 0.1084, 0.1465, 0.0000, 0.0000, 0.0000],
        [0.4082, 0.1445, 0.0410, 0.0767, 0.2637, 0.0640, 0.0000, 0.0000],
        [0.1245, 0.1006, 0.1611, 0.1484, 0.1709, 0.2168, 0.0786, 0.0000],
        [0.1836, 0.0427, 0.0430, 0.0493, 0.4180, 0.1201, 0.0918, 0.0503]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.0012,     -0.0037,     -0.0030,     -0.0012,     -0.0030,      0.0041,     -0.0028],
        [     0.0000,     -1.2578,     -2.5469,     -2.1250,     -0.0216,     -1.1406,      1.4141,     -2.1250],
        [     0.0000,     -1.6562,     -2.6250,     -2.2969,      0.5039,     -1.3047,      0.7383,     -2.2812],
        [     0.0000,     -1.5938,     -1.6719,     -1.5078,      0.8242,     -0.5156,     -0.4766,     -1.4766],
        [     0.0000,      0.4355,     -0.9023,     -0.8477,     -0.5469,     -1.0312,      2.1875,     -0.6211],
        [    -0.0000,     -1.0391,     -2.2969,     -1.6719,     -0.4375,     -1.8516,      1.5469,     -1.7500],
        [    -0.0000,     -0.2119,      0.2578,      0.1758,      0.3203,      0.5547,     -0.4570,      0.1533],
        [     0.0000,     -1.4609,     -1.4531,     -1.3125,      0.8242,     -0.4277,     -0.6992,     -1.2969]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [ 7.9883],
        [ 7.9551],
        [ 6.9180],
        [ 2.3545],
        [ 3.0879],
        [ 1.7227],
        [ 2.1865],
        [ 1.3457],
        [ 1.8335],
        [ 1.0977],
        [ 1.5093],
        [ 1.4639],
        [ 0.8276],
        [ 0.9028]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6211, 0.3770, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5547, 0.4023, 0.0427, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5195, 0.3359, 0.0623, 0.0815, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2158, 0.3125, 0.1768, 0.1514, 0.1436, 0.0000, 0.0000, 0.0000],
        [0.3418, 0.1826, 0.0422, 0.0576, 0.2295, 0.1465, 0.0000, 0.0000],
        [0.1377, 0.0757, 0.1377, 0.1553, 0.2256, 0.2041, 0.0645, 0.0000],
        [0.1924, 0.1191, 0.0240, 0.0320, 0.1895, 0.0503, 0.3594, 0.0344]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0002,     -0.0015,     -0.0012,     -0.0009,     -0.0010,      0.0022,     -0.0011],
        [    -0.0000,     -0.5000,     -2.0938,     -1.6875,     -0.0850,     -1.9531,      0.6172,     -1.5781],
        [     0.0000,     -0.3223,     -2.5625,     -2.2031,     -0.2812,     -1.6406,      0.8633,     -2.1250],
        [     0.0000,     -0.4375,     -2.1250,     -1.8594,      0.0879,     -1.3828,      0.6211,     -1.7969],
        [     0.0000,      0.3711,     -0.1973,     -0.3555,     -0.4043,      0.1465,      0.3438,     -0.4512],
        [     0.0000,     -0.6250,     -2.0938,     -1.7812,     -0.4004,     -0.8516,      0.9531,     -1.7422],
        [    -0.0000,     -0.5977,     -0.0042,      0.1147,      0.4902,      0.3926,     -0.7656,      0.1240],
        [     0.0000,     -0.4785,     -2.0781,     -1.7891,     -0.0121,     -1.3438,      0.6250,     -1.7188]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [ 7.3008],
        [ 7.5977],
        [ 6.6133],
        [ 3.1514],
        [ 3.8154],
        [ 1.5444],
        [ 2.4463],
        [ 1.6509],
        [ 2.1172],
        [ 1.2769],
        [ 1.8462],
        [ 1.7080],
        [ 1.0066],
        [ 0.7921]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5352, 0.4668, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7656, 0.2139, 0.0223, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6875, 0.2441, 0.0289, 0.0381, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3945, 0.2266, 0.1060, 0.1387, 0.1338, 0.0000, 0.0000, 0.0000],
        [0.3633, 0.1592, 0.0554, 0.0596, 0.2617, 0.1006, 0.0000, 0.0000],
        [0.1426, 0.2285, 0.1650, 0.1846, 0.0518, 0.0884, 0.1396, 0.0000],
        [0.2578, 0.1099, 0.0165, 0.0214, 0.1455, 0.0437, 0.3828, 0.0214]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.0004,     -0.0017,     -0.0013,     -0.0011,     -0.0015,      0.0019,     -0.0013],
        [    -0.0000,     -0.1357,     -1.2812,     -1.1641,     -0.6484,     -1.1406,     -0.0114,     -1.1719],
        [    -0.0000,     -1.2734,     -3.5312,     -3.1562,     -0.8594,     -2.3906,      0.7812,     -3.1562],
        [    -0.0000,     -1.0391,     -3.1719,     -2.8906,     -0.6172,     -2.1094,      0.6133,     -2.9062],
        [     0.0000,     -0.5547,     -1.3125,     -1.0469,     -1.0781,     -1.0391,      1.2891,     -1.0469],
        [    -0.0000,     -0.8242,     -1.8828,     -1.8047,     -0.3262,     -1.2812,      0.8672,     -1.8359],
        [    -0.0000,      0.4727,      0.1523,      0.2598,     -1.0078,     -0.4727,     -0.0199,      0.3965],
        [    -0.0000,     -0.8516,     -2.7500,     -2.5000,     -0.5742,     -1.7734,      0.3965,     -2.4844]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [ 8.1172],
        [ 8.3945],
        [ 7.6719],
        [ 2.8115],
        [ 3.9834],
        [ 1.5464],
        [ 2.7617],
        [ 1.3962],
        [ 2.3198],
        [ 1.3374],
        [ 2.0796],
        [ 2.0083],
        [ 0.9092],
        [ 0.8635]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8008, 0.1973, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9141, 0.0781, 0.0085, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8281, 0.1191, 0.0184, 0.0325, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4922, 0.1621, 0.0439, 0.0571, 0.2451, 0.0000, 0.0000, 0.0000],
        [0.4980, 0.0674, 0.0161, 0.0199, 0.3125, 0.0850, 0.0000, 0.0000],
        [0.1108, 0.1348, 0.1934, 0.2012, 0.1299, 0.0957, 0.1338, 0.0000],
        [0.3945, 0.0625, 0.0112, 0.0190, 0.1279, 0.0400, 0.3242, 0.0210]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.0015,     -0.0028,     -0.0021,     -0.0014,     -0.0019,      0.0000,     -0.0021],
        [     0.0000,     -1.3984,     -2.2812,     -1.8125,     -0.9688,     -1.5938,      0.1611,     -1.7344],
        [     0.0000,     -2.4531,     -4.6875,     -4.0312,     -1.3750,     -2.8438,     -0.4727,     -3.9219],
        [     0.0000,     -1.9375,     -3.8125,     -3.2344,     -1.1484,     -2.4688,     -0.2471,     -3.1406],
        [    -0.0000,     -1.1094,     -2.4219,     -2.1562,     -0.6953,     -1.4844,     -0.5234,     -2.1250],
        [    -0.0000,     -2.0000,     -3.4375,     -3.2188,     -0.4668,     -1.7734,     -1.2500,     -3.1250],
        [     0.0000,      0.1943,      0.5586,      0.5977,      0.1611,     -0.1465,      0.1895,      0.6172],
        [     0.0000,     -1.8438,     -3.5625,     -3.0312,     -1.1328,     -2.2969,     -0.2012,     -2.9375]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [ 7.5645],
        [ 7.8984],
        [ 7.1426],
        [ 3.5049],
        [ 4.2842],
        [ 1.6973],
        [ 2.7710],
        [ 1.6992],
        [ 2.3760],
        [ 1.3984],
        [ 2.1138],
        [ 1.9312],
        [ 1.0527],
        [ 0.8889]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3926, 0.6094, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5352, 0.3633, 0.1001, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4180, 0.3281, 0.1289, 0.1250, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4258, 0.2354, 0.0723, 0.0854, 0.1816, 0.0000, 0.0000, 0.0000],
        [0.3281, 0.1719, 0.0693, 0.0684, 0.1504, 0.2119, 0.0000, 0.0000],
        [0.1426, 0.2930, 0.1191, 0.1445, 0.0386, 0.0718, 0.1904, 0.0000],
        [0.2100, 0.1611, 0.0747, 0.0718, 0.1099, 0.1748, 0.1167, 0.0811]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.0003,     -0.0005,     -0.0004,     -0.0003,      0.0001,      0.0002,     -0.0003],
        [    -0.0000,      0.4395,     -0.3887,     -0.3418,     -0.8203,     -0.4980,      0.4219,     -0.2432],
        [    -0.0000,     -0.3867,     -1.6797,     -1.6562,     -0.8906,     -0.8047,     -0.2266,     -1.5625],
        [    -0.0000,     -0.2471,     -1.1797,     -1.2109,     -0.7812,     -0.3066,     -0.5078,     -1.0781],
        [    -0.0000,     -0.5898,     -1.7734,     -1.6094,     -0.8477,     -1.3984,      0.4453,     -1.6016],
        [    -0.0000,     -0.6445,     -1.5547,     -1.5703,     -0.7812,     -0.4395,     -0.2988,     -1.5391],
        [    -0.0000,      0.7227,     -0.1768,      0.0170,     -1.3047,     -0.6875,      0.2949,      0.1113],
        [    -0.0000,     -0.2676,     -1.0312,     -1.0781,     -0.6484,     -0.1846,     -0.5898,     -0.9531]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [ 7.0176],
        [ 7.8887],
        [ 7.2119],
        [ 3.3994],
        [ 4.2812],
        [ 1.9482],
        [ 3.1987],
        [ 1.8594],
        [ 2.7129],
        [ 1.8584],
        [ 2.5635],
        [ 2.3809],
        [ 1.1631],
        [ 1.0640]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6211, 0.3770, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7344, 0.1621, 0.1035, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5781, 0.1641, 0.1289, 0.1318, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3906, 0.1689, 0.1035, 0.1543, 0.1826, 0.0000, 0.0000, 0.0000],
        [0.3047, 0.0391, 0.0310, 0.0337, 0.4785, 0.1138, 0.0000, 0.0000],
        [0.1230, 0.1221, 0.1475, 0.1582, 0.0923, 0.1021, 0.2539, 0.0000],
        [0.2275, 0.0708, 0.0557, 0.0549, 0.2578, 0.1196, 0.1572, 0.0559]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0010,      0.0010,      0.0011,     -0.0005,     -0.0002,      0.0014,      0.0011],
        [    -0.0000,     -0.5000,     -0.5391,     -0.4766,      0.0913,     -0.4355,      0.0623,     -0.5312],
        [    -0.0000,     -1.5156,     -1.9609,     -1.8438,     -0.1104,     -1.0469,     -0.1611,     -1.8125],
        [    -0.0000,     -1.2578,     -1.5000,     -1.4766,      0.0776,     -0.7617,     -0.2637,     -1.4609],
        [     0.0000,     -0.8359,     -1.3281,     -0.9297,     -0.7617,     -1.1328,      1.0859,     -0.9375],
        [     0.0000,     -2.0469,     -2.2812,     -2.2031,      0.4551,     -0.9844,      0.2051,     -2.2031],
        [    -0.0000,     -0.0087,      0.1826,      0.2539,     -0.2871,     -0.1885,      0.7266,      0.1709],
        [    -0.0000,     -1.1641,     -1.4062,     -1.4219,      0.1230,     -0.6445,     -0.3672,     -1.4062]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [ 7.0996],
        [ 7.5488],
        [ 6.4941],
        [ 3.5283],
        [ 4.1377],
        [ 1.7358],
        [ 3.1104],
        [ 2.2256],
        [ 2.6938],
        [ 1.7881],
        [ 2.6074],
        [ 2.2974],
        [ 1.4045],
        [ 0.9164]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7188, 0.2793, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6836, 0.1543, 0.1602, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6094, 0.1309, 0.1367, 0.1230, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1982, 0.1982, 0.2383, 0.2490, 0.1172, 0.0000, 0.0000, 0.0000],
        [0.2021, 0.1123, 0.1621, 0.1826, 0.1836, 0.1572, 0.0000, 0.0000],
        [0.1475, 0.1069, 0.1582, 0.1475, 0.1807, 0.1416, 0.1182, 0.0000],
        [0.2676, 0.0579, 0.0615, 0.0554, 0.2402, 0.1455, 0.1147, 0.0571]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0014,      0.0025,      0.0025,      0.0014,      0.0009,      0.0008,      0.0025],
        [     0.0000,     -0.9453,     -0.8281,     -0.8164,     -0.0579,     -0.4414,     -0.1797,     -0.7773],
        [     0.0000,     -1.4922,     -1.4531,     -1.4922,     -0.3203,     -0.7422,     -0.7773,     -1.4531],
        [     0.0000,     -1.5391,     -1.5000,     -1.6016,     -0.0977,     -0.6211,     -0.8320,     -1.5703],
        [     0.0000,     -0.0021,      0.1836,      0.2266,     -0.5234,     -0.0403,     -0.3301,      0.2432],
        [     0.0000,     -0.5898,     -0.2217,     -0.1001,     -0.0986,     -0.2480,      0.0918,     -0.0898],
        [    -0.0000,     -0.3184,      0.0723,      0.0040,      0.2041,     -0.0344,     -0.2197,      0.0095],
        [     0.0000,     -1.5312,     -1.4688,     -1.5703,     -0.1030,     -0.6055,     -0.8438,     -1.5391]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [ 6.4980],
        [ 6.5088],
        [ 5.4985],
        [ 3.7495],
        [ 3.4253],
        [ 1.7180],
        [ 2.6978],
        [ 2.2900],
        [ 2.1820],
        [ 1.9238],
        [ 2.1389],
        [ 1.8214],
        [ 1.4702],
        [ 0.8914]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4844, 0.5156, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5352, 0.2969, 0.1670, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4023, 0.2480, 0.1426, 0.2070, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3438, 0.1436, 0.1494, 0.1699, 0.1934, 0.0000, 0.0000, 0.0000],
        [0.3750, 0.1514, 0.1035, 0.1357, 0.1206, 0.1138, 0.0000, 0.0000],
        [0.1216, 0.1758, 0.1816, 0.2598, 0.0549, 0.1338, 0.0723, 0.0000],
        [0.2559, 0.1475, 0.0869, 0.1270, 0.0747, 0.0728, 0.1011, 0.1338]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,     -0.0003,      0.0003,      0.0006,     -0.0001,      0.0006,      0.0005,      0.0006],
        [    -0.0000,      0.0615,     -0.2520,      0.1338,     -0.9414,     -0.8164,     -0.4277,      0.1660],
        [    -0.0000,     -0.5938,     -1.1719,     -0.8125,     -1.2422,     -1.3750,     -0.9961,     -0.7656],
        [    -0.0000,     -0.4863,     -1.0391,     -0.6680,     -1.1875,     -1.3047,     -0.9141,     -0.6250],
        [     0.0000,     -0.8789,     -0.8359,     -0.7070,     -0.5781,     -0.7266,     -1.1875,     -0.7070],
        [     0.0000,     -0.9102,     -1.2891,     -1.0156,     -1.1328,     -1.1953,     -0.9062,     -0.9453],
        [    -0.0000,      0.3691,      0.4043,      0.7578,     -0.7969,      0.0938,     -0.5195,      0.7852],
        [    -0.0000,     -0.5508,     -1.0781,     -0.7031,     -1.2344,     -1.2578,     -0.9297,     -0.6484]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [ 6.5898],
        [ 7.0312],
        [ 5.8877],
        [ 3.7012],
        [ 3.9443],
        [ 1.5620],
        [ 2.5654],
        [ 2.3247],
        [ 2.1199],
        [ 1.7766],
        [ 2.0972],
        [ 1.7915],
        [ 1.4509],
        [ 0.8146]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(.:0.1187 a:0.0432.:0.1338 and:0.0767.:0.0996.:0.1250 not:0.0320
:0.3105)


------
		( a:0.0444.:0.1338 and:0.0767.:0.0996.:0.1250 not:0.0320
:0.3105The:0.0618)
The first first.
The first the first the first the first the first
@ 50 train 7.2319 , allloss: 7.2319, dt: 2677.23ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.8387, tok/sec: 48958.01, flops:42.88, batch-reuse:1
@ 51 train 7.2914 , allloss: 7.2914, dt: 1559.91ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:1.2017, tok/sec: 84025.36, flops:73.59, batch-reuse:1
@ 52 train 7.0857 , allloss: 7.0857, dt: 1560.05ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.7404, tok/sec: 84017.76, flops:73.59, batch-reuse:1
@ 53 train 7.0324 , allloss: 7.0324, dt: 1559.38ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.7993, tok/sec: 84053.75, flops:73.62, batch-reuse:1
@ 54 train 7.1333 , allloss: 7.1333, dt: 1560.67ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4755, tok/sec: 83984.37, flops:73.56, batch-reuse:1
@ 55 train 7.2056 , allloss: 7.2056, dt: 1561.19ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.8187, tok/sec: 83956.68, flops:73.53, batch-reuse:1
@ 56 train 6.9855 , allloss: 6.9855, dt: 1560.23ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5782, tok/sec: 84008.14, flops:73.58, batch-reuse:1
@ 57 train 6.9158 , allloss: 6.9158, dt: 1559.68ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.8738, tok/sec: 84037.62, flops:73.60, batch-reuse:1
@ 58 train 6.9554 , allloss: 6.9554, dt: 1559.17ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5711, tok/sec: 84065.41, flops:73.63, batch-reuse:1
@ 59 train 6.7564 , allloss: 6.7564, dt: 1559.32ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.8551, tok/sec: 84057.17, flops:73.62, batch-reuse:1
@ 60 train 6.9462 , allloss: 6.9462, dt: 1560.00ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.7184, tok/sec: 84020.53, flops:73.59, batch-reuse:1
@ 61 train 6.8712 , allloss: 6.8712, dt: 1559.30ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5936, tok/sec: 84058.08, flops:73.62, batch-reuse:1
@ 62 train 6.9318 , allloss: 6.9318, dt: 1562.05ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.9611, tok/sec: 83910.07, flops:73.49, batch-reuse:1
@ 63 train 6.8907 , allloss: 6.8907, dt: 1561.33ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:1.0301, tok/sec: 83948.82, flops:73.53, batch-reuse:1
@ 64 train 6.8624 , allloss: 6.8624, dt: 1560.50ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.9273, tok/sec: 83993.33, flops:73.57, batch-reuse:1
@ 65 train 6.9713 , allloss: 6.9713, dt: 1559.78ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:1.0307, tok/sec: 84032.38, flops:73.60, batch-reuse:1
@ 66 train 6.9965 , allloss: 6.9965, dt: 1559.70ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:1.1354, tok/sec: 84036.52, flops:73.60, batch-reuse:1
@ 67 train 6.8994 , allloss: 6.8994, dt: 1559.57ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.9986, tok/sec: 84043.60, flops:73.61, batch-reuse:1
@ 68 train 6.9233 , allloss: 6.9233, dt: 1559.91ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.9707, tok/sec: 84025.23, flops:73.59, batch-reuse:1
@ 69 train 6.7921 , allloss: 6.7921, dt: 1559.69ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.7248, tok/sec: 84037.43, flops:73.60, batch-reuse:1
@ 70 train 6.7890 , allloss: 6.7890, dt: 1559.59ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.6881, tok/sec: 84042.76, flops:73.61, batch-reuse:1
@ 71 train 6.7495 , allloss: 6.7495, dt: 1559.82ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.7796, tok/sec: 84030.16, flops:73.60, batch-reuse:1
@ 72 train 6.8004 , allloss: 6.8004, dt: 1559.63ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5466, tok/sec: 84040.66, flops:73.61, batch-reuse:1
@ 73 train 6.9167 , allloss: 6.9167, dt: 1560.08ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.7498, tok/sec: 84016.45, flops:73.59, batch-reuse:1
@ 74 train 6.8122 , allloss: 6.8122, dt: 1559.80ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.7064, tok/sec: 84031.15, flops:73.60, batch-reuse:1
@ 75 train 7.4530 , allloss: 7.4530, dt: 1559.91ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.7243, tok/sec: 84025.23, flops:73.59, batch-reuse:1
@ 76 train 6.7844 , allloss: 6.7844, dt: 1560.02ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.7946, tok/sec: 84019.46, flops:73.59, batch-reuse:1
@ 77 train 7.5344 , allloss: 7.5344, dt: 1560.04ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:1.5210, tok/sec: 84018.11, flops:73.59, batch-reuse:1
@ 78 train 7.0129 , allloss: 7.0129, dt: 1559.92ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.9609, tok/sec: 84025.04, flops:73.59, batch-reuse:1
@ 79 train 6.7164 , allloss: 6.7164, dt: 1560.27ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.6800, tok/sec: 84006.21, flops:73.58, batch-reuse:1
@ 80 train 6.7680 , allloss: 6.7680, dt: 1561.87ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.9635, tok/sec: 83919.86, flops:73.50, batch-reuse:1
@ 81 train 6.7881 , allloss: 6.7881, dt: 1560.57ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.6419, tok/sec: 83990.03, flops:73.56, batch-reuse:1
@ 82 train 6.7426 , allloss: 6.7426, dt: 1563.25ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.6005, tok/sec: 83845.80, flops:73.44, batch-reuse:1
@ 83 train 6.7259 , allloss: 6.7259, dt: 1559.62ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5956, tok/sec: 84040.94, flops:73.61, batch-reuse:1
@ 84 train 6.7480 , allloss: 6.7480, dt: 1559.62ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4306, tok/sec: 84041.11, flops:73.61, batch-reuse:1
@ 85 train 6.6994 , allloss: 6.6994, dt: 1559.06ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4905, tok/sec: 84071.22, flops:73.63, batch-reuse:1
@ 86 train 6.6473 , allloss: 6.6473, dt: 1559.00ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4842, tok/sec: 84074.68, flops:73.64, batch-reuse:1
@ 87 train 6.7217 , allloss: 6.7217, dt: 1558.72ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5281, tok/sec: 84089.30, flops:73.65, batch-reuse:1
@ 88 train 6.6723 , allloss: 6.6723, dt: 1558.92ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4303, tok/sec: 84078.60, flops:73.64, batch-reuse:1
@ 89 train 6.6189 , allloss: 6.6189, dt: 1558.90ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4504, tok/sec: 84079.87, flops:73.64, batch-reuse:1
@ 90 train 6.6438 , allloss: 6.6438, dt: 1558.77ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5455, tok/sec: 84086.88, flops:73.65, batch-reuse:1
@ 91 train 6.6067 , allloss: 6.6067, dt: 1558.83ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5024, tok/sec: 84083.77, flops:73.65, batch-reuse:1
@ 92 train 6.5880 , allloss: 6.5880, dt: 1558.88ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4899, tok/sec: 84080.99, flops:73.64, batch-reuse:1
@ 93 train 6.5694 , allloss: 6.5694, dt: 1559.25ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3651, tok/sec: 84060.83, flops:73.63, batch-reuse:1
@ 94 train 6.8414 , allloss: 6.8414, dt: 1558.71ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.7776, tok/sec: 84090.30, flops:73.65, batch-reuse:1
@ 95 train 6.5888 , allloss: 6.5888, dt: 1559.00ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5821, tok/sec: 84074.33, flops:73.64, batch-reuse:1
@ 96 train 6.4665 , allloss: 6.4665, dt: 1559.03ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4588, tok/sec: 84072.75, flops:73.64, batch-reuse:1
@ 97 train 6.5359 , allloss: 6.5359, dt: 1559.31ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5348, tok/sec: 84057.59, flops:73.62, batch-reuse:1
@ 98 train 6.5948 , allloss: 6.5948, dt: 1559.21ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5159, tok/sec: 84063.12, flops:73.63, batch-reuse:1
@ 99 train 6.5019 , allloss: 6.5019, dt: 1559.08ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5569, tok/sec: 84069.96, flops:73.63, batch-reuse:1
@ 100 train 6.5305 , allloss: 6.5305, dt: 1559.16ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5087, tok/sec: 84065.54, flops:73.63, batch-reuse:1
@ 101 train 6.3695 , allloss: 6.3695, dt: 1559.10ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4667, tok/sec: 84068.80, flops:73.63, batch-reuse:1
@ 102 train 6.4626 , allloss: 6.4626, dt: 1558.99ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4739, tok/sec: 84074.89, flops:73.64, batch-reuse:1
@ 103 train 6.4509 , allloss: 6.4509, dt: 1559.30ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4254, tok/sec: 84057.96, flops:73.62, batch-reuse:1
@ 104 train 6.5387 , allloss: 6.5387, dt: 1559.35ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4292, tok/sec: 84055.51, flops:73.62, batch-reuse:1
@ 105 train 6.5091 , allloss: 6.5091, dt: 1559.11ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3790, tok/sec: 84068.35, flops:73.63, batch-reuse:1
@ 106 train 6.3981 , allloss: 6.3981, dt: 1559.06ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4135, tok/sec: 84070.91, flops:73.63, batch-reuse:1
@ 107 train 6.4194 , allloss: 6.4194, dt: 1558.89ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3267, tok/sec: 84080.32, flops:73.64, batch-reuse:1
@ 108 train 6.3986 , allloss: 6.3986, dt: 1559.05ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4159, tok/sec: 84071.81, flops:73.63, batch-reuse:1
@ 109 train 6.3871 , allloss: 6.3871, dt: 1559.01ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4438, tok/sec: 84073.96, flops:73.64, batch-reuse:1
@ 110 train 6.3972 , allloss: 6.3972, dt: 1559.43ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4827, tok/sec: 84051.47, flops:73.62, batch-reuse:1
@ 111 train 6.4086 , allloss: 6.4086, dt: 1559.24ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4610, tok/sec: 84061.23, flops:73.63, batch-reuse:1
@ 112 train 6.4235 , allloss: 6.4235, dt: 1559.45ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3823, tok/sec: 84050.23, flops:73.62, batch-reuse:1
@ 113 train 6.3884 , allloss: 6.3884, dt: 1559.40ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3597, tok/sec: 84052.79, flops:73.62, batch-reuse:1
@ 114 train 6.3825 , allloss: 6.3825, dt: 1559.05ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3842, tok/sec: 84071.77, flops:73.63, batch-reuse:1
@ 115 train 6.3183 , allloss: 6.3183, dt: 1559.29ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4438, tok/sec: 84058.95, flops:73.62, batch-reuse:1
@ 116 train 6.3011 , allloss: 6.3011, dt: 1559.19ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3696, tok/sec: 84064.25, flops:73.63, batch-reuse:1
@ 117 train 6.3315 , allloss: 6.3315, dt: 1559.18ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3666, tok/sec: 84064.71, flops:73.63, batch-reuse:1
@ 118 train 6.3415 , allloss: 6.3415, dt: 1559.53ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4725, tok/sec: 84045.97, flops:73.61, batch-reuse:1
@ 119 train 6.2818 , allloss: 6.2818, dt: 1558.73ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5261, tok/sec: 84089.08, flops:73.65, batch-reuse:1
@ 120 train 6.4266 , allloss: 6.4266, dt: 1559.49ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3632, tok/sec: 84047.89, flops:73.61, batch-reuse:1
@ 121 train 6.4878 , allloss: 6.4878, dt: 1559.42ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4559, tok/sec: 84051.90, flops:73.62, batch-reuse:1
@ 122 train 6.4547 , allloss: 6.4547, dt: 1559.21ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4121, tok/sec: 84063.30, flops:73.63, batch-reuse:1
@ 123 train 6.3275 , allloss: 6.3275, dt: 1559.23ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3377, tok/sec: 84061.88, flops:73.63, batch-reuse:1
@ 124 train 6.3667 , allloss: 6.3667, dt: 1558.82ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4878, tok/sec: 84084.29, flops:73.65, batch-reuse:1
@ 125 train 6.3911 , allloss: 6.3911, dt: 1559.02ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4302, tok/sec: 84073.42, flops:73.64, batch-reuse:1
@ 126 train 6.3889 , allloss: 6.3889, dt: 1559.51ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4551, tok/sec: 84047.11, flops:73.61, batch-reuse:1
@ 127 train 6.3058 , allloss: 6.3058, dt: 1559.20ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4761, tok/sec: 84063.65, flops:73.63, batch-reuse:1
@ 128 train 6.2805 , allloss: 6.2805, dt: 1559.31ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3777, tok/sec: 84057.94, flops:73.62, batch-reuse:1
@ 129 train 6.3857 , allloss: 6.3857, dt: 1559.62ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4839, tok/sec: 84040.90, flops:73.61, batch-reuse:1
@ 130 train 6.3889 , allloss: 6.3889, dt: 1559.14ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3995, tok/sec: 84066.79, flops:73.63, batch-reuse:1
@ 131 train 6.3954 , allloss: 6.3954, dt: 1559.58ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3804, tok/sec: 84043.28, flops:73.61, batch-reuse:1
@ 132 train 6.4342 , allloss: 6.4342, dt: 1559.36ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5222, tok/sec: 84055.01, flops:73.62, batch-reuse:1
@ 133 train 6.3559 , allloss: 6.3559, dt: 1559.25ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.6199, tok/sec: 84060.97, flops:73.63, batch-reuse:1
@ 134 train 6.4152 , allloss: 6.4152, dt: 1559.42ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5153, tok/sec: 84051.94, flops:73.62, batch-reuse:1
@ 135 train 6.2811 , allloss: 6.2811, dt: 1559.48ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4243, tok/sec: 84048.67, flops:73.61, batch-reuse:1
@ 136 train 6.3198 , allloss: 6.3198, dt: 1559.30ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4117, tok/sec: 84058.05, flops:73.62, batch-reuse:1
@ 137 train 6.2097 , allloss: 6.2097, dt: 1559.05ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4279, tok/sec: 84071.67, flops:73.63, batch-reuse:1
@ 138 train 6.2244 , allloss: 6.2244, dt: 1558.98ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5140, tok/sec: 84075.38, flops:73.64, batch-reuse:1
@ 139 train 6.2031 , allloss: 6.2031, dt: 1559.52ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3950, tok/sec: 84046.49, flops:73.61, batch-reuse:1
@ 140 train 6.2179 , allloss: 6.2179, dt: 1559.32ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.7882, tok/sec: 84057.33, flops:73.62, batch-reuse:1
@ 141 train 6.1915 , allloss: 6.1915, dt: 1559.33ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4330, tok/sec: 84056.68, flops:73.62, batch-reuse:1
@ 142 train 6.2849 , allloss: 6.2849, dt: 1559.32ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4459, tok/sec: 84056.91, flops:73.62, batch-reuse:1
@ 143 train 6.2192 , allloss: 6.2192, dt: 1559.82ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3444, tok/sec: 84029.98, flops:73.60, batch-reuse:1
@ 144 train 6.2056 , allloss: 6.2056, dt: 1559.40ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3881, tok/sec: 84052.58, flops:73.62, batch-reuse:1
@ 145 train 6.2021 , allloss: 6.2021, dt: 1559.38ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3261, tok/sec: 84054.12, flops:73.62, batch-reuse:1
@ 146 train 6.3639 , allloss: 6.3639, dt: 1559.58ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3595, tok/sec: 84043.30, flops:73.61, batch-reuse:1
@ 147 train 6.2228 , allloss: 6.2228, dt: 1558.95ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4102, tok/sec: 84076.86, flops:73.64, batch-reuse:1
@ 148 train 6.1732 , allloss: 6.1732, dt: 1559.35ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4335, tok/sec: 84055.55, flops:73.62, batch-reuse:1
@ 149 train 6.0514 , allloss: 6.0514, dt: 1559.83ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3226, tok/sec: 84029.70, flops:73.60, batch-reuse:1
@ 150 train 6.2912 , allloss: 6.2912, dt: 1559.45ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3844, tok/sec: 84050.15, flops:73.62, batch-reuse:1
@ 151 train 6.0872 , allloss: 6.0872, dt: 1559.26ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4269, tok/sec: 84060.16, flops:73.62, batch-reuse:1
@ 152 train 6.1203 , allloss: 6.1203, dt: 1559.03ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4560, tok/sec: 84072.90, flops:73.64, batch-reuse:1
@ 153 train 6.0732 , allloss: 6.0732, dt: 1559.43ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.6269, tok/sec: 84051.42, flops:73.62, batch-reuse:1
@ 154 train 6.1691 , allloss: 6.1691, dt: 1559.29ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3864, tok/sec: 84058.79, flops:73.62, batch-reuse:1
@ 155 train 6.3250 , allloss: 6.3250, dt: 1559.22ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4021, tok/sec: 84062.45, flops:73.63, batch-reuse:1
@ 156 train 6.1308 , allloss: 6.1308, dt: 1559.49ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3632, tok/sec: 84047.80, flops:73.61, batch-reuse:1
@ 157 train 6.2408 , allloss: 6.2408, dt: 1558.97ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4388, tok/sec: 84075.77, flops:73.64, batch-reuse:1
@ 158 train 6.1967 , allloss: 6.1967, dt: 1559.26ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3987, tok/sec: 84060.35, flops:73.62, batch-reuse:1
@ 159 train 6.2489 , allloss: 6.2489, dt: 1559.33ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4704, tok/sec: 84056.36, flops:73.62, batch-reuse:1
@ 160 train 6.1275 , allloss: 6.1275, dt: 1559.03ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3915, tok/sec: 84072.80, flops:73.64, batch-reuse:1
@ 161 train 6.1055 , allloss: 6.1055, dt: 1559.25ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3559, tok/sec: 84061.04, flops:73.63, batch-reuse:1
@ 162 train 6.2610 , allloss: 6.2610, dt: 1559.02ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3657, tok/sec: 84073.15, flops:73.64, batch-reuse:1
@ 163 train 6.1518 , allloss: 6.1518, dt: 1559.24ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3632, tok/sec: 84061.36, flops:73.63, batch-reuse:1
@ 164 train 6.0752 , allloss: 6.0752, dt: 1559.68ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4454, tok/sec: 84037.69, flops:73.60, batch-reuse:1
@ 165 train 6.1836 , allloss: 6.1836, dt: 1558.93ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3326, tok/sec: 84077.92, flops:73.64, batch-reuse:1
@ 166 train 6.1581 , allloss: 6.1581, dt: 1559.63ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4386, tok/sec: 84040.64, flops:73.61, batch-reuse:1
@ 167 train 6.2156 , allloss: 6.2156, dt: 1559.42ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5617, tok/sec: 84051.67, flops:73.62, batch-reuse:1
@ 168 train 6.0794 , allloss: 6.0794, dt: 1558.99ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5154, tok/sec: 84075.16, flops:73.64, batch-reuse:1
@ 169 train 6.1175 , allloss: 6.1175, dt: 1559.32ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4774, tok/sec: 84057.01, flops:73.62, batch-reuse:1
@ 170 train 6.1050 , allloss: 6.1050, dt: 1560.07ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4982, tok/sec: 84016.72, flops:73.59, batch-reuse:1
@ 171 train 6.0829 , allloss: 6.0829, dt: 1560.76ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4266, tok/sec: 83979.55, flops:73.55, batch-reuse:1
@ 172 train 6.1327 , allloss: 6.1327, dt: 1560.29ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4593, tok/sec: 84004.72, flops:73.58, batch-reuse:1
@ 173 train 6.1035 , allloss: 6.1035, dt: 1559.95ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4636, tok/sec: 84023.11, flops:73.59, batch-reuse:1
@ 174 train 6.2619 , allloss: 6.2619, dt: 1560.45ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4582, tok/sec: 83996.27, flops:73.57, batch-reuse:1
@ 175 train 6.1099 , allloss: 6.1099, dt: 1560.23ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:1.3036, tok/sec: 84008.05, flops:73.58, batch-reuse:1
@ 176 train 6.2127 , allloss: 6.2127, dt: 1560.71ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5921, tok/sec: 83982.29, flops:73.56, batch-reuse:1
@ 177 train 6.1662 , allloss: 6.1662, dt: 1560.76ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.6289, tok/sec: 83979.53, flops:73.55, batch-reuse:1
@ 178 train 6.1907 , allloss: 6.1907, dt: 1560.62ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5797, tok/sec: 83987.31, flops:73.56, batch-reuse:1
@ 179 train 6.0555 , allloss: 6.0555, dt: 1560.44ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4906, tok/sec: 83996.72, flops:73.57, batch-reuse:1
@ 180 train 6.1718 , allloss: 6.1718, dt: 1560.81ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5988, tok/sec: 83977.01, flops:73.55, batch-reuse:1
@ 181 train 6.0585 , allloss: 6.0585, dt: 1560.76ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4711, tok/sec: 83979.68, flops:73.55, batch-reuse:1
@ 182 train 6.1695 , allloss: 6.1695, dt: 1560.24ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4067, tok/sec: 84007.57, flops:73.58, batch-reuse:1
@ 183 train 6.1086 , allloss: 6.1086, dt: 1560.71ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3477, tok/sec: 83982.47, flops:73.56, batch-reuse:1
@ 184 train 6.0013 , allloss: 6.0013, dt: 1560.79ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3355, tok/sec: 83978.06, flops:73.55, batch-reuse:1
@ 185 train 6.0283 , allloss: 6.0283, dt: 1561.20ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3754, tok/sec: 83955.82, flops:73.53, batch-reuse:1
@ 186 train 6.1782 , allloss: 6.1782, dt: 1560.71ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3177, tok/sec: 83982.10, flops:73.56, batch-reuse:1
@ 187 train 6.3232 , allloss: 6.3232, dt: 1560.40ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4313, tok/sec: 83998.88, flops:73.57, batch-reuse:1
@ 188 train 6.1621 , allloss: 6.1621, dt: 1560.58ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4236, tok/sec: 83989.34, flops:73.56, batch-reuse:1
@ 189 train 6.2819 , allloss: 6.2819, dt: 1560.75ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3611, tok/sec: 83980.36, flops:73.55, batch-reuse:1
@ 190 train 6.2474 , allloss: 6.2474, dt: 1560.54ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5084, tok/sec: 83991.58, flops:73.56, batch-reuse:1
@ 191 train 6.2064 , allloss: 6.2064, dt: 1560.39ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3768, tok/sec: 83999.56, flops:73.57, batch-reuse:1
@ 192 train 6.2757 , allloss: 6.2757, dt: 1560.09ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3955, tok/sec: 84015.61, flops:73.59, batch-reuse:1
@ 193 train 6.1490 , allloss: 6.1490, dt: 1560.72ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4663, tok/sec: 83981.59, flops:73.56, batch-reuse:1
@ 194 train 6.2752 , allloss: 6.2752, dt: 1560.68ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4055, tok/sec: 83983.86, flops:73.56, batch-reuse:1
@ 195 train 6.2336 , allloss: 6.2336, dt: 1560.35ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3327, tok/sec: 84001.87, flops:73.57, batch-reuse:1
@ 196 train 6.1270 , allloss: 6.1270, dt: 1560.40ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3712, tok/sec: 83999.21, flops:73.57, batch-reuse:1
@ 197 train 6.1499 , allloss: 6.1499, dt: 1560.34ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4000, tok/sec: 84002.08, flops:73.57, batch-reuse:1
@ 198 train 6.1205 , allloss: 6.1205, dt: 1560.46ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3721, tok/sec: 83995.84, flops:73.57, batch-reuse:1
@ 199 train 6.2281 , allloss: 6.2281, dt: 1560.37ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4535, tok/sec: 84000.60, flops:73.57, batch-reuse:1
@ 200 train 6.2261 , allloss: 6.2261, dt: 1560.33ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3540, tok/sec: 84002.84, flops:73.57, batch-reuse:1
@ 201 train 6.1306 , allloss: 6.1306, dt: 1560.86ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3845, tok/sec: 83974.04, flops:73.55, batch-reuse:1
@ 202 train 6.2336 , allloss: 6.2336, dt: 1560.57ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3641, tok/sec: 83990.07, flops:73.56, batch-reuse:1
@ 203 train 6.1881 , allloss: 6.1881, dt: 1560.04ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4335, tok/sec: 84018.35, flops:73.59, batch-reuse:1
@ 204 train 6.1703 , allloss: 6.1703, dt: 1560.15ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3412, tok/sec: 84012.50, flops:73.58, batch-reuse:1
@ 205 train 6.1582 , allloss: 6.1582, dt: 1559.79ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3380, tok/sec: 84031.60, flops:73.60, batch-reuse:1
@ 206 train 6.1785 , allloss: 6.1785, dt: 1560.87ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.2870, tok/sec: 83973.61, flops:73.55, batch-reuse:1
@ 207 train 6.0923 , allloss: 6.0923, dt: 1560.08ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3408, tok/sec: 84015.98, flops:73.59, batch-reuse:1
@ 208 train 6.1376 , allloss: 6.1376, dt: 1559.70ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3568, tok/sec: 84036.58, flops:73.60, batch-reuse:1
@ 209 train 6.2150 , allloss: 6.2150, dt: 1560.30ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4557, tok/sec: 84004.21, flops:73.58, batch-reuse:1
@ 210 train 6.1694 , allloss: 6.1694, dt: 1559.96ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4211, tok/sec: 84022.43, flops:73.59, batch-reuse:1
@ 211 train 6.0832 , allloss: 6.0832, dt: 1560.39ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4504, tok/sec: 83999.32, flops:73.57, batch-reuse:1
@ 212 train 6.1340 , allloss: 6.1340, dt: 1559.86ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3209, tok/sec: 84028.30, flops:73.60, batch-reuse:1
@ 213 train 6.0804 , allloss: 6.0804, dt: 1560.48ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4286, tok/sec: 83994.91, flops:73.57, batch-reuse:1
@ 214 train 6.0921 , allloss: 6.0921, dt: 1560.00ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3228, tok/sec: 84020.73, flops:73.59, batch-reuse:1
@ 215 train 6.0054 , allloss: 6.0054, dt: 1560.67ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4589, tok/sec: 83984.69, flops:73.56, batch-reuse:1
@ 216 train 5.9970 , allloss: 5.9970, dt: 1560.98ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3538, tok/sec: 83967.63, flops:73.54, batch-reuse:1
@ 217 train 6.0774 , allloss: 6.0774, dt: 1560.91ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3381, tok/sec: 83971.56, flops:73.55, batch-reuse:1
@ 218 train 5.9874 , allloss: 5.9874, dt: 1560.32ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3579, tok/sec: 84003.17, flops:73.57, batch-reuse:1
@ 219 train 6.2099 , allloss: 6.2099, dt: 1560.17ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3541, tok/sec: 84011.26, flops:73.58, batch-reuse:1
@ 220 train 6.1245 , allloss: 6.1245, dt: 1560.15ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3517, tok/sec: 84012.66, flops:73.58, batch-reuse:1
@ 221 train 6.0298 , allloss: 6.0298, dt: 1559.94ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4852, tok/sec: 84023.52, flops:73.59, batch-reuse:1
@ 222 train 6.0556 , allloss: 6.0556, dt: 1560.83ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4559, tok/sec: 83975.58, flops:73.55, batch-reuse:1
@ 223 train 6.0747 , allloss: 6.0747, dt: 1560.19ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3731, tok/sec: 84010.27, flops:73.58, batch-reuse:1
@ 224 train 5.9949 , allloss: 5.9949, dt: 1559.94ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4018, tok/sec: 84023.75, flops:73.59, batch-reuse:1
@ 225 train 6.0716 , allloss: 6.0716, dt: 1560.15ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3766, tok/sec: 84012.25, flops:73.58, batch-reuse:1
@ 226 train 6.0958 , allloss: 6.0958, dt: 1560.12ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4038, tok/sec: 84014.22, flops:73.58, batch-reuse:1
@ 227 train 6.0759 , allloss: 6.0759, dt: 1559.46ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3534, tok/sec: 84049.56, flops:73.62, batch-reuse:1
@ 228 train 6.0609 , allloss: 6.0609, dt: 1560.48ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3191, tok/sec: 83994.66, flops:73.57, batch-reuse:1
@ 229 train 6.0906 , allloss: 6.0906, dt: 1560.05ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3680, tok/sec: 84017.99, flops:73.59, batch-reuse:1
@ 230 train 6.0649 , allloss: 6.0649, dt: 1560.44ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3531, tok/sec: 83996.79, flops:73.57, batch-reuse:1
@ 231 train 6.0131 , allloss: 6.0131, dt: 1560.82ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3740, tok/sec: 83976.28, flops:73.55, batch-reuse:1
@ 232 train 5.9650 , allloss: 5.9650, dt: 1560.47ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3407, tok/sec: 83995.24, flops:73.57, batch-reuse:1
@ 233 train 6.0455 , allloss: 6.0455, dt: 1560.51ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3565, tok/sec: 83993.25, flops:73.57, batch-reuse:1
@ 234 train 5.9027 , allloss: 5.9027, dt: 1560.42ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3686, tok/sec: 83998.00, flops:73.57, batch-reuse:1
@ 235 train 6.0300 , allloss: 6.0300, dt: 1560.05ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4914, tok/sec: 84018.02, flops:73.59, batch-reuse:1
@ 236 train 5.9666 , allloss: 5.9666, dt: 1559.64ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.6152, tok/sec: 84039.87, flops:73.61, batch-reuse:1
@ 237 train 6.0337 , allloss: 6.0337, dt: 1560.39ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4690, tok/sec: 83999.40, flops:73.57, batch-reuse:1
@ 238 train 5.9897 , allloss: 5.9897, dt: 1560.22ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4585, tok/sec: 84008.90, flops:73.58, batch-reuse:1
@ 239 train 5.9816 , allloss: 5.9816, dt: 1560.71ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4159, tok/sec: 83982.45, flops:73.56, batch-reuse:1
@ 240 train 6.0372 , allloss: 6.0372, dt: 1560.42ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3906, tok/sec: 83998.13, flops:73.57, batch-reuse:1
@ 241 train 6.0093 , allloss: 6.0093, dt: 1559.87ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3555, tok/sec: 84027.73, flops:73.60, batch-reuse:1
@ 242 train 5.9762 , allloss: 5.9762, dt: 1559.90ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3402, tok/sec: 84026.00, flops:73.59, batch-reuse:1
@ 243 train 5.8998 , allloss: 5.8998, dt: 1561.32ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3540, tok/sec: 83949.64, flops:73.53, batch-reuse:1
@ 244 train 6.0041 , allloss: 6.0041, dt: 1560.08ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.2925, tok/sec: 84016.02, flops:73.59, batch-reuse:1
@ 245 train 5.7974 , allloss: 5.7974, dt: 1560.48ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3882, tok/sec: 83994.60, flops:73.57, batch-reuse:1
@ 246 train 6.0612 , allloss: 6.0612, dt: 1560.81ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4142, tok/sec: 83976.85, flops:73.55, batch-reuse:1
@ 247 train 5.9684 , allloss: 5.9684, dt: 1560.13ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4334, tok/sec: 84013.71, flops:73.58, batch-reuse:1
@ 248 train 5.9048 , allloss: 5.9048, dt: 1560.37ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3186, tok/sec: 84000.60, flops:73.57, batch-reuse:1
@ 249 train 5.8902 , allloss: 5.8902, dt: 1560.42ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4678, tok/sec: 83997.68, flops:73.57, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9844, 0.0164, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4121, 0.5039, 0.0835, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4629, 0.1191, 0.1943, 0.2236, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5312, 0.0081, 0.4102, 0.0262, 0.0248, 0.0000, 0.0000, 0.0000],
        [0.3574, 0.0479, 0.2305, 0.0466, 0.1641, 0.1533, 0.0000, 0.0000],
        [0.1001, 0.2812, 0.0942, 0.0491, 0.1592, 0.0874, 0.2295, 0.0000],
        [0.0262, 0.2559, 0.0264, 0.1357, 0.2656, 0.1050, 0.1670, 0.0161]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.0776,     -0.0135,     -0.0388,     -0.0752,     -0.0815,     -0.0520,      0.0206],
        [     0.0014,     -4.0938,     -0.7656,     -0.6758,     -1.7734,     -1.9141,     -0.8086,      0.1328],
        [    -0.0007,      0.2061,     -1.5938,      2.0625,      0.2031,     -2.3281,      0.8047,      0.2793],
        [     0.0007,     -1.3594,     -0.8633,     -0.7227,     -1.5312,     -1.1328,     -0.7773,      1.2188],
        [    -0.0005,     -4.1875,     -0.2578,     -3.0000,     -3.0625,     -2.0625,     -2.6094,      0.3809],
        [     0.0004,     -2.0156,     -0.4375,     -2.0312,     -0.7773,     -0.8477,     -0.3340,     -0.1133],
        [     0.0001,      1.0391,     -0.0564,     -0.7109,      0.4629,     -0.1357,      0.8320,      0.4180],
        [     0.0023,      2.2812,      0.0078,      1.6406,      2.3125,      1.3906,      1.8516,     -0.4863]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [ 9.0215],
        [ 5.3896],
        [ 5.4180],
        [ 8.3008],
        [ 5.5820],
        [ 2.9829],
        [ 0.5378],
        [ 2.9180],
        [ 1.3633],
        [ 3.6445],
        [ 0.6207],
        [ 0.3940],
        [ 1.8315],
        [ 0.8193]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6328, 0.3672, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4414, 0.2520, 0.3086, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3633, 0.1904, 0.2471, 0.1992, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2041, 0.3359, 0.1865, 0.1289, 0.1436, 0.0000, 0.0000, 0.0000],
        [0.2676, 0.0801, 0.1865, 0.1016, 0.0767, 0.2871, 0.0000, 0.0000],
        [0.1816, 0.0874, 0.1270, 0.0835, 0.0408, 0.2148, 0.2656, 0.0000],
        [0.1211, 0.0583, 0.1084, 0.0884, 0.0508, 0.0825, 0.2773, 0.2119]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.0173,     -0.0096,     -0.0164,     -0.0209,      0.0044,      0.0033,     -0.0021],
        [     0.0005,     -0.5469,     -0.4824,     -1.0625,     -0.6680,      0.3477,     -0.2363,     -0.4062],
        [     0.0005,     -0.5625,     -0.3574,     -0.5312,     -1.2031,     -0.1416,      0.1348,      0.5234],
        [     0.0002,     -0.6484,     -0.3848,     -0.6016,     -0.8477,     -0.2520,      0.1719,      0.2139],
        [     0.0003,      0.5000,     -0.0923,     -0.4629,     -0.3516,     -0.1660,     -0.9883,     -0.2393],
        [     0.0011,     -1.2031,     -0.3555,     -0.9648,     -1.2422,      0.0781,      0.9570,      0.4629],
        [     0.0003,     -0.7305,     -0.3555,     -0.7773,     -1.4922,      0.1699,      0.3789,      0.5039],
        [     0.0005,     -0.7305,     -0.1118,     -0.3184,     -0.8672,     -0.3848,      0.8320,      0.5586]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [ 5.6309],
        [ 3.5898],
        [ 2.8525],
        [ 2.2474],
        [ 2.7031],
        [ 1.6929],
        [ 1.9482],
        [ 1.2578],
        [ 0.8224],
        [ 1.2144],
        [ 0.8713],
        [ 0.7593],
        [ 0.7357],
        [ 0.7417]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0008,     0.0048,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0002,     0.0019,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0002,     0.0028,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0003,     0.0000,     0.0000,     0.0002,     0.0000,     0.0000],
        [    0.9961,     0.0001,     0.0009,     0.0000,     0.0000,     0.0014,     0.0021,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0003,     0.0001]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,     -0.0684,     -0.0496,     -0.0723,     -0.0801,     -0.0483,     -0.0439,     -0.0483],
        [    -0.0003,    -10.6250,     -7.8750,    -11.5625,    -12.5000,     -7.3750,     -6.9375,     -7.7500],
        [    -0.0005,     -7.0938,     -5.3438,     -7.7812,     -8.5000,     -4.9375,     -5.2188,     -5.3438],
        [    -0.0007,     -8.7500,     -6.2500,     -9.3750,    -10.4375,     -6.1250,     -5.9062,     -6.3750],
        [    -0.0004,     -8.6875,     -5.8750,     -8.9375,    -10.5625,     -6.4688,     -5.6875,     -6.0938],
        [    -0.0013,    -11.8750,     -8.1250,    -12.1875,    -14.4375,     -8.7500,     -7.3125,     -8.0625],
        [    -0.0004,     -9.3750,     -6.9688,    -10.2500,    -11.3125,     -6.5938,     -6.1875,     -6.7812],
        [    -0.0007,    -13.1875,    -10.0000,    -14.5000,    -15.6250,     -9.0000,     -8.1250,     -9.8125]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [11.0762],
        [ 7.6053],
        [ 8.2726],
        [ 9.9717],
        [ 8.9121],
        [ 6.9702],
        [ 5.7212],
        [ 6.8970],
        [ 5.7104],
        [ 6.7832],
        [ 3.7205],
        [ 3.5344],
        [ 4.2747],
        [ 2.7842]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0002,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0004,     0.0002,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0005,     0.0004,     0.0002,     0.0001,     0.0000,     0.0000,     0.0000],
        [    0.9844,     0.0002,     0.0002,     0.0001,     0.0000,     0.0132,     0.0000,     0.0000],
        [    0.9844,     0.0002,     0.0003,     0.0001,     0.0001,     0.0135,     0.0020,     0.0000],
        [    0.9922,     0.0003,     0.0002,     0.0001,     0.0001,     0.0058,     0.0009,     0.0003]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.0588,     -0.0537,     -0.0610,     -0.0693,     -0.0288,     -0.0391,     -0.0439],
        [     0.0005,     -9.2500,     -9.7500,    -10.8750,    -10.4375,     -5.3750,     -7.4688,     -8.9375],
        [     0.0007,     -8.5000,     -8.7500,     -9.7500,     -9.3750,     -5.1250,     -6.6875,     -8.0000],
        [     0.0005,     -7.8438,     -8.5625,     -9.4375,     -8.8750,     -5.1562,     -6.6250,     -8.0000],
        [     0.0008,     -7.5625,     -7.7188,     -8.7500,     -9.0000,     -4.0938,     -5.8750,     -6.7500],
        [     0.0007,     -8.6250,     -8.6875,     -9.8750,    -10.1875,     -4.3125,     -6.0625,     -7.1562],
        [     0.0010,     -8.3125,     -8.0000,     -9.1250,     -9.5625,     -4.2812,     -6.1562,     -7.0938],
        [     0.0005,     -8.1875,     -8.5625,     -9.5000,     -9.2500,     -5.1562,     -6.9688,     -8.2500]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [11.8438],
        [11.0117],
        [11.4609],
        [11.7539],
        [ 9.0688],
        [ 8.1179],
        [ 7.5957],
        [ 8.5663],
        [ 9.0615],
        [ 8.4639],
        [ 6.9929],
        [ 6.3872],
        [ 7.9742],
        [ 5.7387]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0012,     0.0004,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0010,     0.0002,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0049,     0.0004,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8945,     0.0000,     0.0000,     0.0000,     0.0000,     0.1050,     0.0000,     0.0000],
        [    0.6406,     0.0009,     0.0007,     0.0001,     0.0000,     0.3145,     0.0422,     0.0000],
        [    0.6523,     0.0003,     0.0001,     0.0000,     0.0000,     0.2559,     0.0126,     0.0776]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,     -0.0703,     -0.0811,     -0.0913,     -0.1045,     -0.0190,     -0.0474,     -0.0308],
        [    -0.0054,     -8.1875,     -9.6875,    -11.0000,    -14.4375,     -2.1094,     -5.7188,     -2.7188],
        [    -0.0027,     -6.7812,     -7.7500,     -8.6250,    -11.5625,     -1.1562,     -4.1562,     -1.8047],
        [    -0.0038,     -6.9375,     -8.4375,     -9.3750,    -12.3125,     -1.0312,     -4.5625,     -1.9766],
        [    -0.0084,     -5.3125,     -7.8125,     -9.0625,    -11.1875,     -0.0214,     -4.2500,     -2.0781],
        [    -0.0057,    -10.0000,    -11.1875,    -13.0625,    -16.0000,     -2.1562,     -5.8125,     -4.0625],
        [    -0.0017,     -6.5312,     -6.7812,     -8.4375,    -10.7500,     -0.7188,     -2.7188,     -1.6875],
        [    -0.0040,     -7.6562,     -8.5000,     -9.8750,    -12.1250,     -0.9453,     -3.9531,     -2.1250]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [11.8906],
        [10.3838],
        [11.0820],
        [10.3657],
        [10.6387],
        [ 8.9226],
        [ 9.8364],
        [ 9.6211],
        [10.1797],
        [ 9.5315],
        [ 6.4421],
        [ 8.5201],
        [ 8.8813],
        [ 7.9246]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0025,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8594,     0.0549,     0.0850,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9766,     0.0072,     0.0114,     0.0042,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9805,     0.0063,     0.0100,     0.0022,     0.0018,     0.0000,     0.0000,     0.0000],
        [    0.9258,     0.0010,     0.0008,     0.0002,     0.0002,     0.0718,     0.0000,     0.0000],
        [    0.4609,     0.0143,     0.0083,     0.0037,     0.0064,     0.4180,     0.0879,     0.0000],
        [    0.5117,     0.0038,     0.0032,     0.0012,     0.0024,     0.2656,     0.0591,     0.1523]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,     -0.0554,     -0.0530,     -0.0640,     -0.0579,     -0.0259,     -0.0284,     -0.0166],
        [    -0.0005,     -6.0000,     -5.2812,     -6.7188,     -5.7812,     -2.8594,     -3.0781,     -1.7109],
        [     0.0004,     -2.7500,     -2.3125,     -2.8281,     -2.1250,     -0.4062,     -0.6641,     -0.3203],
        [     0.0002,     -4.9062,     -4.4688,     -5.4688,     -4.6875,     -1.3281,     -1.8594,     -0.8555],
        [     0.0000,     -5.0625,     -4.5938,     -6.0625,     -6.2812,     -1.7891,     -2.8125,     -0.7305],
        [    -0.0003,     -6.8750,     -7.0000,     -8.6875,     -8.5625,     -2.5625,     -4.0625,     -2.1094],
        [    -0.0006,     -3.4688,     -4.0312,     -4.8125,     -4.2812,     -0.1001,     -1.6562,     -0.9453],
        [    -0.0004,     -4.9062,     -5.0938,     -6.0312,     -5.3438,     -0.6602,     -2.1562,     -1.2188]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [11.6172],
        [ 9.1875],
        [10.6172],
        [11.0137],
        [10.4902],
        [ 8.9275],
        [ 8.4917],
        [ 9.2681],
        [ 7.5366],
        [ 9.6445],
        [ 5.0443],
        [ 8.5054],
        [ 9.0190],
        [ 7.4734]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.1299,     -0.1191,     -0.1279,     -0.1465,     -0.1147,     -0.1240,     -0.1187],
        [     0.0015,    -14.1875,    -13.3750,    -14.4375,    -17.1250,    -12.8750,    -14.9375,    -13.7500],
        [    -0.0013,     -9.5625,     -9.0625,     -9.6250,    -11.3750,     -7.7812,     -8.5000,     -8.0000],
        [    -0.0002,    -12.3125,    -11.5625,    -12.2500,    -14.1250,    -10.1875,    -11.3125,    -10.7500],
        [     0.0019,    -12.2500,    -12.0000,    -13.0000,    -14.5000,    -11.4375,    -12.3125,    -11.8125],
        [     0.0011,    -14.4375,    -14.4375,    -15.0625,    -17.2500,    -13.2500,    -14.6875,    -14.1250],
        [     0.0014,    -14.3750,    -14.3750,    -15.5000,    -17.5000,    -12.9375,    -14.0625,    -13.3750],
        [    -0.0004,    -11.9375,    -11.8125,    -12.5000,    -14.6250,    -11.1875,    -12.0625,    -11.2500]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [11.2969],
        [ 9.4006],
        [10.7617],
        [11.2031],
        [10.5645],
        [ 8.9004],
        [ 9.1406],
        [ 8.7090],
        [ 7.4844],
        [ 9.5166],
        [ 5.2140],
        [ 8.4248],
        [ 7.8511],
        [ 6.6519]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0006,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0009,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0005,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0048,     0.0034,     0.0003,     0.0002,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0014,     0.0013,     0.0000,     0.0000,     0.0060,     0.0000,     0.0000],
        [    0.8906,     0.0030,     0.0021,     0.0002,     0.0002,     0.0488,     0.0569,     0.0000],
        [    0.9766,     0.0007,     0.0004,     0.0000,     0.0000,     0.0098,     0.0103,     0.0006]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,     -0.0454,     -0.0498,     -0.0698,     -0.0713,     -0.0354,     -0.0337,     -0.0459],
        [    -0.0072,     -7.3750,     -7.4375,    -10.5625,    -10.5000,     -4.9375,     -5.0000,     -7.3438],
        [    -0.0082,     -7.0312,     -7.5938,    -10.8750,    -10.5625,     -5.0938,     -4.8125,     -7.3438],
        [    -0.0083,     -7.6875,     -8.5000,    -12.1875,    -11.9375,     -5.6562,     -5.0625,     -7.9062],
        [    -0.0081,     -5.3438,     -5.6562,     -8.1250,     -8.3125,     -3.7031,     -3.1094,     -4.9688],
        [    -0.0048,     -6.5625,     -6.6562,    -10.1250,    -10.8125,     -5.0938,     -4.5938,     -6.8750],
        [    -0.0051,     -5.7188,     -6.0625,     -8.6250,     -8.3750,     -2.9062,     -2.7500,     -5.1875],
        [    -0.0072,     -7.2500,     -7.8750,    -11.3125,    -11.0000,     -4.6250,     -4.5625,     -7.4688]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [11.7305],
        [ 9.9746],
        [10.8359],
        [ 9.5898],
        [ 9.6094],
        [ 7.8545],
        [ 7.2839],
        [ 5.1872],
        [ 4.5716],
        [ 7.3596],
        [ 3.7493],
        [ 6.0879],
        [ 4.4299],
        [ 5.2412]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9609, 0.0391, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6641, 0.2021, 0.1328, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8477, 0.1021, 0.0294, 0.0198, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9492, 0.0408, 0.0044, 0.0020, 0.0022, 0.0000, 0.0000, 0.0000],
        [0.8359, 0.0811, 0.0035, 0.0017, 0.0014, 0.0752, 0.0000, 0.0000],
        [0.4805, 0.1216, 0.0117, 0.0119, 0.0063, 0.1611, 0.2080, 0.0000],
        [0.5430, 0.0713, 0.0036, 0.0026, 0.0014, 0.0864, 0.0491, 0.2422]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.0256,     -0.0396,     -0.0457,     -0.0435,     -0.0187,     -0.0166,     -0.0118],
        [     0.0038,     -3.2031,     -5.6562,     -6.6562,     -6.2500,     -2.8281,     -2.5625,     -1.7344],
        [     0.0024,     -1.1875,     -1.6094,     -1.8828,     -2.2188,     -1.3125,     -0.1543,     -0.2656],
        [     0.0021,     -2.1250,     -3.3594,     -3.7656,     -3.7188,     -2.0312,     -1.1953,     -1.2656],
        [     0.0020,     -3.1406,     -5.3750,     -6.1875,     -6.0625,     -2.6719,     -2.9688,     -2.3906],
        [     0.0049,     -2.3281,     -5.4688,     -6.2188,     -6.4375,     -2.4062,     -3.7188,     -2.4375],
        [     0.0013,     -1.3750,     -3.7188,     -3.6875,     -4.3125,     -1.0938,     -0.8359,      0.2480],
        [     0.0030,     -2.0312,     -5.0312,     -5.3438,     -5.9688,     -1.8359,     -2.4062,     -0.8047]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [10.8164],
        [ 8.9941],
        [10.3672],
        [10.4492],
        [ 7.7467],
        [ 6.6268],
        [ 5.7170],
        [ 3.6083],
        [ 3.6055],
        [ 6.0006],
        [ 2.4255],
        [ 4.8006],
        [ 2.8791],
        [ 3.3624]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7930, 0.2080, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5234, 0.1562, 0.3203, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4551, 0.0713, 0.2256, 0.2490, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3105, 0.1084, 0.2158, 0.1299, 0.2354, 0.0000, 0.0000, 0.0000],
        [0.1777, 0.0102, 0.0732, 0.0476, 0.2227, 0.4688, 0.0000, 0.0000],
        [0.0243, 0.0027, 0.0072, 0.0049, 0.0238, 0.1216, 0.8164, 0.0000],
        [0.0378, 0.0095, 0.0172, 0.0139, 0.0469, 0.1387, 0.5625, 0.1729]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,     -0.0039,      0.0001,     -0.0014,     -0.0022,     -0.0043,     -0.0004,     -0.0001],
        [     0.0003,     -1.3359,     -0.3809,     -0.4238,      0.2148,      0.5625,      0.4805,     -0.1924],
        [     0.0004,     -1.2109,     -0.4902,     -0.2793,      0.2754,      1.3047,      0.8398,      0.1680],
        [     0.0004,     -1.8516,     -0.6992,     -0.6016,      0.2676,      1.5938,      1.1641,     -0.0586],
        [    -0.0002,     -1.0547,     -0.3594,     -0.8672,     -0.2754,     -0.5195,      0.6914,     -0.0255],
        [     0.0002,     -2.8594,     -0.8867,     -1.3125,      0.2266,      0.9688,      2.5000,      0.8594],
        [     0.0011,     -2.2031,     -1.2188,     -1.6094,     -0.0178,      1.6094,      3.5156,      1.5859],
        [     0.0007,     -1.3750,     -0.7852,     -1.0078,      0.2158,      1.3047,      2.7031,      1.5156]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [ 9.7695],
        [ 7.0928],
        [ 7.4106],
        [ 6.0859],
        [ 4.9668],
        [ 3.2849],
        [ 2.5950],
        [ 2.9531],
        [ 2.1091],
        [ 3.1296],
        [ 1.6832],
        [ 2.2551],
        [ 2.1415],
        [ 1.9437]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6602, 0.3379, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5273, 0.1260, 0.3438, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3379, 0.0718, 0.2217, 0.3672, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2676, 0.1582, 0.1865, 0.1455, 0.2432, 0.0000, 0.0000, 0.0000],
        [0.1836, 0.0908, 0.1348, 0.1240, 0.3047, 0.1621, 0.0000, 0.0000],
        [0.0493, 0.0186, 0.0161, 0.0123, 0.0216, 0.1680, 0.7148, 0.0000],
        [0.0491, 0.0197, 0.0289, 0.0327, 0.0515, 0.0796, 0.4785, 0.2598]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.0048,     -0.0027,     -0.0018,     -0.0006,     -0.0031,      0.0010,      0.0036],
        [     0.0001,     -0.6719,      0.0059,      0.2314,     -0.1436,     -0.8359,     -0.1445,      1.3516],
        [     0.0000,     -1.4375,     -0.4277,      0.1167,      0.3379,     -0.8320,      0.9531,      1.6641],
        [     0.0001,     -1.5469,     -0.4219,      0.0845,      0.3945,     -0.9570,      0.6602,      1.5625],
        [    -0.0000,     -0.5273,     -0.3652,     -0.6133,     -0.0991,      0.1289,      0.7695,      0.4629],
        [     0.0000,     -0.7031,     -0.3086,     -0.3906,      0.5078,     -0.1260,      0.5898,      0.9570],
        [    -0.0000,     -0.9766,     -1.1172,     -1.3906,     -0.8281,      1.2266,      2.6719,      1.2188],
        [     0.0000,     -0.9141,     -0.5273,     -0.4023,      0.0466,      0.4824,      2.2812,      1.6719]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [ 9.0020],
        [ 5.3643],
        [ 5.1094],
        [ 5.1992],
        [ 3.0483],
        [ 1.9216],
        [ 1.5842],
        [ 2.0013],
        [ 1.7849],
        [ 1.8467],
        [ 1.0916],
        [ 1.2967],
        [ 1.4606],
        [ 1.1877]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4961, 0.5039, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3887, 0.3008, 0.3105, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3613, 0.2637, 0.2363, 0.1387, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2852, 0.3652, 0.1533, 0.0586, 0.1367, 0.0000, 0.0000, 0.0000],
        [0.2256, 0.4160, 0.2109, 0.0781, 0.0153, 0.0547, 0.0000, 0.0000],
        [0.1787, 0.2314, 0.1187, 0.0737, 0.0535, 0.0422, 0.3027, 0.0000],
        [0.1357, 0.2227, 0.1338, 0.0659, 0.0242, 0.0500, 0.1777, 0.1904]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0043,     -0.0015,     -0.0057,     -0.0133,     -0.0055,     -0.0022,     -0.0023],
        [    -0.0011,      0.0120,      0.0615,     -0.4590,     -2.1562,     -1.0938,     -0.6523,     -0.5820],
        [    -0.0011,     -0.2578,     -0.2275,     -0.5781,     -1.6094,     -0.7812,     -0.9180,     -0.8398],
        [    -0.0010,     -0.3203,     -0.4258,     -0.9648,     -1.7422,     -0.8672,     -0.8438,     -1.0156],
        [    -0.0006,      0.2471,     -0.6211,     -1.5859,     -0.7422,     -1.2969,     -0.1768,     -0.6836],
        [    -0.0001,      0.6094,     -0.0674,     -1.0625,     -2.6875,     -1.4219,     -0.2119,     -0.1846],
        [     0.0001,      0.2539,     -0.4141,     -0.8867,     -1.2109,     -1.4453,      0.5234,      0.4141],
        [     0.0004,      0.4961,     -0.0099,     -0.7227,     -1.7266,     -0.9922,      0.2715,      0.3418]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [ 7.3984],
        [ 4.8184],
        [ 4.0581],
        [ 3.8330],
        [ 2.9004],
        [ 1.6221],
        [ 1.4358],
        [ 2.3977],
        [ 1.8557],
        [ 1.6707],
        [ 1.3273],
        [ 1.1819],
        [ 1.7761],
        [ 0.6127]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.0771 the:0.0674,:0.0393 and:0.0679,:0.0287,:0.1904 the:0.0439
:0.0320)


------
		( the:0.0674,:0.0393 and:0.0679,:0.0287,:0.1904 the:0.0439
:0.0320The:0.0491)
The first time, the first time, the first time, the first time
@ 250 train 5.9556 , allloss: 5.9556, dt: 2000.89ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3840, tok/sec: 65506.69, flops:57.37, batch-reuse:1
@ 251 train 5.8791 , allloss: 5.8791, dt: 1559.92ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3397, tok/sec: 84024.78, flops:73.59, batch-reuse:1
@ 252 train 6.0122 , allloss: 6.0122, dt: 1560.05ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3815, tok/sec: 84017.72, flops:73.59, batch-reuse:1
@ 253 train 5.8983 , allloss: 5.8983, dt: 1560.79ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3860, tok/sec: 83978.17, flops:73.55, batch-reuse:1
@ 254 train 5.8248 , allloss: 5.8248, dt: 1560.73ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.2872, tok/sec: 83981.04, flops:73.56, batch-reuse:1
@ 255 train 5.8332 , allloss: 5.8332, dt: 1560.15ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3487, tok/sec: 84012.53, flops:73.58, batch-reuse:1
@ 256 train 5.8967 , allloss: 5.8967, dt: 1560.26ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3177, tok/sec: 84006.42, flops:73.58, batch-reuse:1
@ 257 train 5.8854 , allloss: 5.8854, dt: 1560.12ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3355, tok/sec: 84013.93, flops:73.58, batch-reuse:1
@ 258 train 5.8282 , allloss: 5.8282, dt: 1560.33ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3641, tok/sec: 84002.57, flops:73.57, batch-reuse:1
@ 259 train 5.8735 , allloss: 5.8735, dt: 1560.66ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3283, tok/sec: 83984.86, flops:73.56, batch-reuse:1
@ 260 train 5.9184 , allloss: 5.9184, dt: 1560.49ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3568, tok/sec: 83993.96, flops:73.57, batch-reuse:1
@ 261 train 5.8954 , allloss: 5.8954, dt: 1561.22ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3634, tok/sec: 83955.00, flops:73.53, batch-reuse:1
@ 262 train 5.9806 , allloss: 5.9806, dt: 1560.25ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4889, tok/sec: 84007.11, flops:73.58, batch-reuse:1
@ 263 train 5.9144 , allloss: 5.9144, dt: 1560.73ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4703, tok/sec: 83981.01, flops:73.56, batch-reuse:1
@ 264 train 5.8599 , allloss: 5.8599, dt: 1560.65ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3517, tok/sec: 83985.59, flops:73.56, batch-reuse:1
@ 265 train 5.8731 , allloss: 5.8731, dt: 1560.58ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4106, tok/sec: 83989.20, flops:73.56, batch-reuse:1
@ 266 train 5.8129 , allloss: 5.8129, dt: 1560.76ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3888, tok/sec: 83979.75, flops:73.55, batch-reuse:1
@ 267 train 5.8634 , allloss: 5.8634, dt: 1560.18ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4112, tok/sec: 84011.08, flops:73.58, batch-reuse:1
@ 268 train 5.9363 , allloss: 5.9363, dt: 1560.48ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4108, tok/sec: 83994.50, flops:73.57, batch-reuse:1
@ 269 train 5.8898 , allloss: 5.8898, dt: 1560.37ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3889, tok/sec: 84000.35, flops:73.57, batch-reuse:1
@ 270 train 5.9746 , allloss: 5.9746, dt: 1561.15ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4421, tok/sec: 83958.82, flops:73.54, batch-reuse:1
@ 271 train 5.8538 , allloss: 5.8538, dt: 1560.80ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5204, tok/sec: 83977.65, flops:73.55, batch-reuse:1
@ 272 train 5.8679 , allloss: 5.8679, dt: 1560.68ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5071, tok/sec: 83983.79, flops:73.56, batch-reuse:1
@ 273 train 5.9052 , allloss: 5.9052, dt: 1559.98ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4879, tok/sec: 84021.57, flops:73.59, batch-reuse:1
@ 274 train 5.8575 , allloss: 5.8575, dt: 1560.47ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3058, tok/sec: 83995.47, flops:73.57, batch-reuse:1
@ 275 train 5.8464 , allloss: 5.8464, dt: 1560.64ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3672, tok/sec: 83986.17, flops:73.56, batch-reuse:1
@ 276 train 5.8147 , allloss: 5.8147, dt: 1560.45ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3641, tok/sec: 83996.05, flops:73.57, batch-reuse:1
@ 277 train 5.6649 , allloss: 5.6649, dt: 1560.32ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.2926, tok/sec: 84003.03, flops:73.57, batch-reuse:1
@ 278 train 5.8149 , allloss: 5.8149, dt: 1560.33ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3562, tok/sec: 84002.59, flops:73.57, batch-reuse:1
@ 279 train 5.7129 , allloss: 5.7129, dt: 1560.30ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3111, tok/sec: 84004.35, flops:73.58, batch-reuse:1
@ 280 train 5.8469 , allloss: 5.8469, dt: 1560.22ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3987, tok/sec: 84008.81, flops:73.58, batch-reuse:1
@ 281 train 5.7625 , allloss: 5.7625, dt: 1560.80ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3609, tok/sec: 83977.47, flops:73.55, batch-reuse:1
@ 282 train 5.7423 , allloss: 5.7423, dt: 1560.21ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5144, tok/sec: 84009.13, flops:73.58, batch-reuse:1
@ 283 train 5.6973 , allloss: 5.6973, dt: 1560.58ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4402, tok/sec: 83989.54, flops:73.56, batch-reuse:1
@ 284 train 5.7669 , allloss: 5.7669, dt: 1561.58ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3386, tok/sec: 83935.76, flops:73.52, batch-reuse:1
@ 285 train 5.7835 , allloss: 5.7835, dt: 1560.29ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3208, tok/sec: 84005.02, flops:73.58, batch-reuse:1
@ 286 train 5.7478 , allloss: 5.7478, dt: 1561.01ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3349, tok/sec: 83965.90, flops:73.54, batch-reuse:1
@ 287 train 5.7887 , allloss: 5.7887, dt: 1561.10ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3008, tok/sec: 83961.39, flops:73.54, batch-reuse:1
@ 288 train 5.7292 , allloss: 5.7292, dt: 1560.22ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3803, tok/sec: 84008.61, flops:73.58, batch-reuse:1
@ 289 train 5.7443 , allloss: 5.7443, dt: 1560.66ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3609, tok/sec: 83984.83, flops:73.56, batch-reuse:1
@ 290 train 5.7657 , allloss: 5.7657, dt: 1560.86ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3794, tok/sec: 83974.07, flops:73.55, batch-reuse:1
@ 291 train 5.6649 , allloss: 5.6649, dt: 1561.46ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4707, tok/sec: 83942.19, flops:73.52, batch-reuse:1
@ 292 train 5.6736 , allloss: 5.6736, dt: 1561.19ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3135, tok/sec: 83956.59, flops:73.53, batch-reuse:1
@ 293 train 5.7469 , allloss: 5.7469, dt: 1560.04ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3605, tok/sec: 84018.17, flops:73.59, batch-reuse:1
@ 294 train 5.7456 , allloss: 5.7456, dt: 1560.38ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3334, tok/sec: 83999.80, flops:73.57, batch-reuse:1
@ 295 train 5.7504 , allloss: 5.7504, dt: 1560.98ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3834, tok/sec: 83968.00, flops:73.54, batch-reuse:1
@ 296 train 5.6549 , allloss: 5.6549, dt: 1560.35ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3805, tok/sec: 84001.40, flops:73.57, batch-reuse:1
@ 297 train 5.6293 , allloss: 5.6293, dt: 1560.08ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3771, tok/sec: 84016.28, flops:73.59, batch-reuse:1
@ 298 train 5.6831 , allloss: 5.6831, dt: 1560.68ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3736, tok/sec: 83984.14, flops:73.56, batch-reuse:1
@ 299 train 5.6670 , allloss: 5.6670, dt: 1561.14ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3159, tok/sec: 83959.07, flops:73.54, batch-reuse:1
@ 300 train 5.6793 , allloss: 5.6793, dt: 1561.03ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3063, tok/sec: 83965.02, flops:73.54, batch-reuse:1
@ 301 train 5.7767 , allloss: 5.7767, dt: 1560.54ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3350, tok/sec: 83991.35, flops:73.56, batch-reuse:1
@ 302 train 5.6452 , allloss: 5.6452, dt: 1560.37ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3963, tok/sec: 84000.66, flops:73.57, batch-reuse:1
@ 303 train 5.6761 , allloss: 5.6761, dt: 1560.37ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3770, tok/sec: 84000.72, flops:73.57, batch-reuse:1
@ 304 train 5.6115 , allloss: 5.6115, dt: 1560.76ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4459, tok/sec: 83979.78, flops:73.55, batch-reuse:1
@ 305 train 5.6173 , allloss: 5.6173, dt: 1560.50ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4534, tok/sec: 83993.57, flops:73.57, batch-reuse:1
@ 306 train 5.6354 , allloss: 5.6354, dt: 1559.89ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3582, tok/sec: 84026.50, flops:73.60, batch-reuse:1
@ 307 train 5.7531 , allloss: 5.7531, dt: 1560.40ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5289, tok/sec: 83999.14, flops:73.57, batch-reuse:1
@ 308 train 5.6124 , allloss: 5.6124, dt: 1560.30ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.2904, tok/sec: 84004.48, flops:73.58, batch-reuse:1
@ 309 train 5.6507 , allloss: 5.6507, dt: 1560.09ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3749, tok/sec: 84015.79, flops:73.59, batch-reuse:1
@ 310 train 5.6948 , allloss: 5.6948, dt: 1560.95ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4007, tok/sec: 83969.61, flops:73.55, batch-reuse:1
@ 311 train 5.7468 , allloss: 5.7468, dt: 1560.44ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3591, tok/sec: 83997.06, flops:73.57, batch-reuse:1
@ 312 train 5.7504 , allloss: 5.7504, dt: 1560.94ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3991, tok/sec: 83969.82, flops:73.55, batch-reuse:1
@ 313 train 5.6291 , allloss: 5.6291, dt: 1560.73ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3512, tok/sec: 83981.46, flops:73.56, batch-reuse:1
@ 314 train 5.6202 , allloss: 5.6202, dt: 1561.31ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3832, tok/sec: 83950.06, flops:73.53, batch-reuse:1
@ 315 train 5.6066 , allloss: 5.6066, dt: 1561.12ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4165, tok/sec: 83960.35, flops:73.54, batch-reuse:1
@ 316 train 5.6376 , allloss: 5.6376, dt: 1560.88ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3995, tok/sec: 83973.22, flops:73.55, batch-reuse:1
@ 317 train 5.7006 , allloss: 5.7006, dt: 1561.17ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3755, tok/sec: 83957.39, flops:73.53, batch-reuse:1
@ 318 train 5.5697 , allloss: 5.5697, dt: 1560.44ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3476, tok/sec: 83996.84, flops:73.57, batch-reuse:1
@ 319 train 5.5193 , allloss: 5.5193, dt: 1561.19ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3414, tok/sec: 83956.42, flops:73.53, batch-reuse:1
@ 320 train 5.6106 , allloss: 5.6106, dt: 1560.89ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3295, tok/sec: 83972.80, flops:73.55, batch-reuse:1
@ 321 train 5.6524 , allloss: 5.6524, dt: 1560.90ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3889, tok/sec: 83972.30, flops:73.55, batch-reuse:1
@ 322 train 5.5514 , allloss: 5.5514, dt: 1560.23ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4151, tok/sec: 84007.88, flops:73.58, batch-reuse:1
@ 323 train 5.6278 , allloss: 5.6278, dt: 1560.54ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3998, tok/sec: 83991.61, flops:73.56, batch-reuse:1
@ 324 train 5.5113 , allloss: 5.5113, dt: 1560.89ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4438, tok/sec: 83972.42, flops:73.55, batch-reuse:1
@ 325 train 5.5282 , allloss: 5.5282, dt: 1561.28ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4100, tok/sec: 83951.59, flops:73.53, batch-reuse:1
@ 326 train 5.6132 , allloss: 5.6132, dt: 1561.52ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3433, tok/sec: 83938.61, flops:73.52, batch-reuse:1
@ 327 train 5.6355 , allloss: 5.6355, dt: 1561.60ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3415, tok/sec: 83934.35, flops:73.51, batch-reuse:1
@ 328 train 5.6067 , allloss: 5.6067, dt: 1561.20ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3278, tok/sec: 83956.03, flops:73.53, batch-reuse:1
@ 329 train 5.5329 , allloss: 5.5329, dt: 1561.38ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3612, tok/sec: 83946.31, flops:73.52, batch-reuse:1
@ 330 train 5.5338 , allloss: 5.5338, dt: 1561.54ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3274, tok/sec: 83937.44, flops:73.52, batch-reuse:1
@ 331 train 5.5378 , allloss: 5.5378, dt: 1560.95ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4233, tok/sec: 83969.61, flops:73.55, batch-reuse:1
@ 332 train 5.4574 , allloss: 5.4574, dt: 1561.31ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4087, tok/sec: 83950.12, flops:73.53, batch-reuse:1
@ 333 train 5.5524 , allloss: 5.5524, dt: 1560.99ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3485, tok/sec: 83967.07, flops:73.54, batch-reuse:1
@ 334 train 5.4681 , allloss: 5.4681, dt: 1561.35ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3983, tok/sec: 83948.03, flops:73.53, batch-reuse:1
@ 335 train 5.4362 , allloss: 5.4362, dt: 1561.79ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3540, tok/sec: 83924.42, flops:73.51, batch-reuse:1
@ 336 train 5.5205 , allloss: 5.5205, dt: 1561.39ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3957, tok/sec: 83945.48, flops:73.52, batch-reuse:1
@ 337 train 5.4664 , allloss: 5.4664, dt: 1561.58ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3496, tok/sec: 83935.56, flops:73.52, batch-reuse:1
@ 338 train 5.4628 , allloss: 5.4628, dt: 1561.64ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3494, tok/sec: 83932.08, flops:73.51, batch-reuse:1
@ 339 train 5.5428 , allloss: 5.5428, dt: 1561.24ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3318, tok/sec: 83953.72, flops:73.53, batch-reuse:1
@ 340 train 5.4968 , allloss: 5.4968, dt: 1561.36ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3468, tok/sec: 83947.32, flops:73.53, batch-reuse:1
@ 341 train 5.4497 , allloss: 5.4497, dt: 1561.46ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3391, tok/sec: 83941.75, flops:73.52, batch-reuse:1
@ 342 train 5.3875 , allloss: 5.3875, dt: 1561.96ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3549, tok/sec: 83915.21, flops:73.50, batch-reuse:1
@ 343 train 5.4724 , allloss: 5.4724, dt: 1561.79ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3341, tok/sec: 83924.29, flops:73.51, batch-reuse:1
@ 344 train 5.4312 , allloss: 5.4312, dt: 1561.66ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3573, tok/sec: 83931.16, flops:73.51, batch-reuse:1
@ 345 train 5.3999 , allloss: 5.3999, dt: 1561.46ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3711, tok/sec: 83941.94, flops:73.52, batch-reuse:1
@ 346 train 5.4657 , allloss: 5.4657, dt: 1561.75ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4228, tok/sec: 83926.21, flops:73.51, batch-reuse:1
@ 347 train 5.4553 , allloss: 5.4553, dt: 1561.58ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3844, tok/sec: 83935.45, flops:73.52, batch-reuse:1
@ 348 train 5.4704 , allloss: 5.4704, dt: 1562.13ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3881, tok/sec: 83905.98, flops:73.49, batch-reuse:1
@ 349 train 5.5155 , allloss: 5.5155, dt: 1562.00ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4317, tok/sec: 83912.74, flops:73.50, batch-reuse:1
@ 350 train 5.4840 , allloss: 5.4840, dt: 1561.81ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3666, tok/sec: 83923.09, flops:73.50, batch-reuse:1
@ 351 train 5.4960 , allloss: 5.4960, dt: 1562.28ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3682, tok/sec: 83897.78, flops:73.48, batch-reuse:1
@ 352 train 5.4772 , allloss: 5.4772, dt: 1562.60ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3771, tok/sec: 83880.56, flops:73.47, batch-reuse:1
@ 353 train 5.4552 , allloss: 5.4552, dt: 1563.27ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3904, tok/sec: 83844.60, flops:73.44, batch-reuse:1
@ 354 train 5.4534 , allloss: 5.4534, dt: 1562.15ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4656, tok/sec: 83904.70, flops:73.49, batch-reuse:1
@ 355 train 5.4651 , allloss: 5.4651, dt: 1562.05ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5378, tok/sec: 83910.27, flops:73.49, batch-reuse:1
@ 356 train 5.4636 , allloss: 5.4636, dt: 1562.13ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4401, tok/sec: 83905.72, flops:73.49, batch-reuse:1
@ 357 train 5.4798 , allloss: 5.4798, dt: 1561.46ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4524, tok/sec: 83942.01, flops:73.52, batch-reuse:1
@ 358 train 5.4277 , allloss: 5.4277, dt: 1561.58ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4298, tok/sec: 83935.48, flops:73.52, batch-reuse:1
@ 359 train 5.5610 , allloss: 5.5610, dt: 1562.21ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5181, tok/sec: 83901.62, flops:73.49, batch-reuse:1
@ 360 train 5.4550 , allloss: 5.4550, dt: 1562.21ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5643, tok/sec: 83901.92, flops:73.49, batch-reuse:1
@ 361 train 5.4894 , allloss: 5.4894, dt: 1562.26ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.6836, tok/sec: 83898.91, flops:73.48, batch-reuse:1
@ 362 train 5.4206 , allloss: 5.4206, dt: 1562.34ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5115, tok/sec: 83894.59, flops:73.48, batch-reuse:1
@ 363 train 5.4630 , allloss: 5.4630, dt: 1561.31ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4846, tok/sec: 83949.89, flops:73.53, batch-reuse:1
@ 364 train 5.4348 , allloss: 5.4348, dt: 1562.53ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4700, tok/sec: 83884.29, flops:73.47, batch-reuse:1
@ 365 train 5.4233 , allloss: 5.4233, dt: 1561.98ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3554, tok/sec: 83914.15, flops:73.50, batch-reuse:1
@ 366 train 5.5281 , allloss: 5.5281, dt: 1562.47ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3824, tok/sec: 83887.54, flops:73.47, batch-reuse:1
@ 367 train 5.3886 , allloss: 5.3886, dt: 1562.61ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4405, tok/sec: 83880.00, flops:73.47, batch-reuse:1
@ 368 train 5.4964 , allloss: 5.4964, dt: 1562.45ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3660, tok/sec: 83888.86, flops:73.47, batch-reuse:1
@ 369 train 5.3719 , allloss: 5.3719, dt: 1562.64ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3992, tok/sec: 83878.75, flops:73.47, batch-reuse:1
@ 370 train 5.5370 , allloss: 5.5370, dt: 1561.91ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3339, tok/sec: 83917.94, flops:73.50, batch-reuse:1
@ 371 train 5.5190 , allloss: 5.5190, dt: 1562.62ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4016, tok/sec: 83879.49, flops:73.47, batch-reuse:1
@ 372 train 5.5595 , allloss: 5.5595, dt: 1561.93ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3302, tok/sec: 83916.95, flops:73.50, batch-reuse:1
@ 373 train 5.4737 , allloss: 5.4737, dt: 1562.46ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3601, tok/sec: 83888.37, flops:73.47, batch-reuse:1
@ 374 train 5.5228 , allloss: 5.5228, dt: 1562.07ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3425, tok/sec: 83909.19, flops:73.49, batch-reuse:1
@ 375 train 5.6202 , allloss: 5.6202, dt: 1562.30ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3255, tok/sec: 83896.67, flops:73.48, batch-reuse:1
@ 376 train 5.6733 , allloss: 5.6733, dt: 1562.33ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4372, tok/sec: 83895.45, flops:73.48, batch-reuse:1
@ 377 train 5.5321 , allloss: 5.5321, dt: 1562.14ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4035, tok/sec: 83905.19, flops:73.49, batch-reuse:1
@ 378 train 5.5083 , allloss: 5.5083, dt: 1562.01ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4683, tok/sec: 83912.28, flops:73.50, batch-reuse:1
@ 379 train 5.6241 , allloss: 5.6241, dt: 1562.45ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4218, tok/sec: 83888.58, flops:73.47, batch-reuse:1
@ 380 train 5.6171 , allloss: 5.6171, dt: 1562.61ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3754, tok/sec: 83880.15, flops:73.47, batch-reuse:1
@ 381 train 5.5461 , allloss: 5.5461, dt: 1562.90ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3573, tok/sec: 83864.49, flops:73.45, batch-reuse:1
@ 382 train 5.5011 , allloss: 5.5011, dt: 1562.81ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3257, tok/sec: 83869.55, flops:73.46, batch-reuse:1
@ 383 train 5.5271 , allloss: 5.5271, dt: 1562.69ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3403, tok/sec: 83876.10, flops:73.46, batch-reuse:1
@ 384 train 5.4636 , allloss: 5.4636, dt: 1562.90ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3548, tok/sec: 83864.82, flops:73.45, batch-reuse:1
@ 385 train 5.4735 , allloss: 5.4735, dt: 1563.05ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3417, tok/sec: 83856.74, flops:73.45, batch-reuse:1
@ 386 train 5.5745 , allloss: 5.5745, dt: 1562.93ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3855, tok/sec: 83862.88, flops:73.45, batch-reuse:1
@ 387 train 5.5066 , allloss: 5.5066, dt: 1562.83ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3790, tok/sec: 83868.18, flops:73.46, batch-reuse:1
@ 388 train 5.3853 , allloss: 5.3853, dt: 1562.79ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4200, tok/sec: 83870.33, flops:73.46, batch-reuse:1
@ 389 train 5.4591 , allloss: 5.4591, dt: 1562.66ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3926, tok/sec: 83877.58, flops:73.46, batch-reuse:1
@ 390 train 5.5179 , allloss: 5.5179, dt: 1562.48ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3988, tok/sec: 83887.00, flops:73.47, batch-reuse:1
@ 391 train 5.4267 , allloss: 5.4267, dt: 1563.39ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3790, tok/sec: 83838.22, flops:73.43, batch-reuse:1
@ 392 train 5.5376 , allloss: 5.5376, dt: 1563.11ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4670, tok/sec: 83853.20, flops:73.44, batch-reuse:1
@ 393 train 5.4976 , allloss: 5.4976, dt: 1563.34ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5189, tok/sec: 83840.98, flops:73.43, batch-reuse:1
@ 394 train 5.4295 , allloss: 5.4295, dt: 1563.15ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4204, tok/sec: 83850.98, flops:73.44, batch-reuse:1
@ 395 train 5.4826 , allloss: 5.4826, dt: 1562.38ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5027, tok/sec: 83892.74, flops:73.48, batch-reuse:1
@ 396 train 5.4091 , allloss: 5.4091, dt: 1562.58ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4744, tok/sec: 83881.79, flops:73.47, batch-reuse:1
@ 397 train 5.5388 , allloss: 5.5388, dt: 1563.31ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5059, tok/sec: 83842.68, flops:73.43, batch-reuse:1
@ 398 train 5.4945 , allloss: 5.4945, dt: 1563.09ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4177, tok/sec: 83854.60, flops:73.44, batch-reuse:1
@ 399 train 5.4965 , allloss: 5.4965, dt: 1563.13ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3770, tok/sec: 83852.29, flops:73.44, batch-reuse:1
@ 400 train 5.5353 , allloss: 5.5353, dt: 1563.28ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4069, tok/sec: 83844.31, flops:73.44, batch-reuse:1
@ 401 train 5.4295 , allloss: 5.4295, dt: 1562.98ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4087, tok/sec: 83860.10, flops:73.45, batch-reuse:1
@ 402 train 5.4474 , allloss: 5.4474, dt: 1562.29ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3941, tok/sec: 83897.22, flops:73.48, batch-reuse:1
@ 403 train 5.5132 , allloss: 5.5132, dt: 1563.08ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4114, tok/sec: 83854.81, flops:73.44, batch-reuse:1
@ 404 train 5.3960 , allloss: 5.3960, dt: 1563.23ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3844, tok/sec: 83846.78, flops:73.44, batch-reuse:1
@ 405 train 5.4592 , allloss: 5.4592, dt: 1563.39ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4824, tok/sec: 83838.22, flops:73.43, batch-reuse:1
@ 406 train 5.4501 , allloss: 5.4501, dt: 1563.27ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4883, tok/sec: 83845.01, flops:73.44, batch-reuse:1
@ 407 train 5.4376 , allloss: 5.4376, dt: 1562.93ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4290, tok/sec: 83862.80, flops:73.45, batch-reuse:1
@ 408 train 5.4118 , allloss: 5.4118, dt: 1563.16ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3612, tok/sec: 83850.45, flops:73.44, batch-reuse:1
@ 409 train 5.3637 , allloss: 5.3637, dt: 1562.92ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3899, tok/sec: 83863.42, flops:73.45, batch-reuse:1
@ 410 train 5.4283 , allloss: 5.4283, dt: 1563.61ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3972, tok/sec: 83826.74, flops:73.42, batch-reuse:1
@ 411 train 5.4899 , allloss: 5.4899, dt: 1562.68ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4573, tok/sec: 83876.43, flops:73.46, batch-reuse:1
@ 412 train 5.4643 , allloss: 5.4643, dt: 1563.13ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4275, tok/sec: 83852.14, flops:73.44, batch-reuse:1
@ 413 train 5.1231 , allloss: 5.1231, dt: 1562.74ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5832, tok/sec: 83873.17, flops:73.46, batch-reuse:1
@ 414 train 5.4236 , allloss: 5.4236, dt: 1562.59ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.6717, tok/sec: 83881.11, flops:73.47, batch-reuse:1
@ 415 train 5.3903 , allloss: 5.3903, dt: 1562.83ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.6394, tok/sec: 83868.52, flops:73.46, batch-reuse:1
@ 416 train 5.4846 , allloss: 5.4846, dt: 1563.27ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4093, tok/sec: 83845.00, flops:73.44, batch-reuse:1
@ 417 train 5.3846 , allloss: 5.3846, dt: 1563.46ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4849, tok/sec: 83834.35, flops:73.43, batch-reuse:1
@ 418 train 5.4615 , allloss: 5.4615, dt: 1563.87ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4170, tok/sec: 83812.40, flops:73.41, batch-reuse:1
@ 419 train 5.3833 , allloss: 5.3833, dt: 1564.13ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3804, tok/sec: 83798.71, flops:73.40, batch-reuse:1
@ 420 train 5.3654 , allloss: 5.3654, dt: 1562.66ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3651, tok/sec: 83877.30, flops:73.46, batch-reuse:1
@ 421 train 5.4355 , allloss: 5.4355, dt: 1563.11ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3605, tok/sec: 83853.34, flops:73.44, batch-reuse:1
@ 422 train 5.3772 , allloss: 5.3772, dt: 1563.10ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4018, tok/sec: 83854.08, flops:73.44, batch-reuse:1
@ 423 train 5.3051 , allloss: 5.3051, dt: 1562.44ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3803, tok/sec: 83889.55, flops:73.48, batch-reuse:1
@ 424 train 5.3955 , allloss: 5.3955, dt: 1563.47ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3298, tok/sec: 83834.11, flops:73.43, batch-reuse:1
@ 425 train 5.4130 , allloss: 5.4130, dt: 1564.11ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3643, tok/sec: 83799.58, flops:73.40, batch-reuse:1
@ 426 train 5.2729 , allloss: 5.2729, dt: 1563.36ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3836, tok/sec: 83840.10, flops:73.43, batch-reuse:1
@ 427 train 5.3462 , allloss: 5.3462, dt: 1563.26ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4069, tok/sec: 83845.45, flops:73.44, batch-reuse:1
@ 428 train 5.2850 , allloss: 5.2850, dt: 1562.88ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3762, tok/sec: 83865.60, flops:73.45, batch-reuse:1
@ 429 train 5.2730 , allloss: 5.2730, dt: 1563.02ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3966, tok/sec: 83857.93, flops:73.45, batch-reuse:1
@ 430 train 5.3413 , allloss: 5.3413, dt: 1563.48ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3649, tok/sec: 83833.52, flops:73.43, batch-reuse:1
@ 431 train 5.3208 , allloss: 5.3208, dt: 1563.40ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3453, tok/sec: 83838.01, flops:73.43, batch-reuse:1
@ 432 train 5.3994 , allloss: 5.3994, dt: 1563.02ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3644, tok/sec: 83857.92, flops:73.45, batch-reuse:1
@ 433 train 5.3310 , allloss: 5.3310, dt: 1563.00ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3481, tok/sec: 83859.48, flops:73.45, batch-reuse:1
@ 434 train 5.3588 , allloss: 5.3588, dt: 1562.84ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3578, tok/sec: 83867.73, flops:73.46, batch-reuse:1
@ 435 train 5.2189 , allloss: 5.2189, dt: 1562.30ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3349, tok/sec: 83896.85, flops:73.48, batch-reuse:1
@ 436 train 5.4154 , allloss: 5.4154, dt: 1562.98ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3460, tok/sec: 83860.30, flops:73.45, batch-reuse:1
@ 437 train 5.2650 , allloss: 5.2650, dt: 1563.38ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3927, tok/sec: 83839.03, flops:73.43, batch-reuse:1
@ 438 train 5.2903 , allloss: 5.2903, dt: 1563.08ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4793, tok/sec: 83854.78, flops:73.44, batch-reuse:1
@ 439 train 5.2412 , allloss: 5.2412, dt: 1562.96ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3893, tok/sec: 83861.43, flops:73.45, batch-reuse:1
@ 440 train 5.2284 , allloss: 5.2284, dt: 1562.86ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5149, tok/sec: 83867.01, flops:73.46, batch-reuse:1
@ 441 train 5.3362 , allloss: 5.3362, dt: 1563.21ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4455, tok/sec: 83847.80, flops:73.44, batch-reuse:1
@ 442 train 5.3500 , allloss: 5.3500, dt: 1563.23ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3551, tok/sec: 83847.17, flops:73.44, batch-reuse:1
@ 443 train 5.3058 , allloss: 5.3058, dt: 1562.90ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3887, tok/sec: 83864.72, flops:73.45, batch-reuse:1
@ 444 train 5.2966 , allloss: 5.2966, dt: 1563.30ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3519, tok/sec: 83843.26, flops:73.43, batch-reuse:1
@ 445 train 5.2725 , allloss: 5.2725, dt: 1563.65ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3792, tok/sec: 83824.48, flops:73.42, batch-reuse:1
@ 446 train 5.2142 , allloss: 5.2142, dt: 1563.41ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3613, tok/sec: 83837.46, flops:73.43, batch-reuse:1
@ 447 train 5.2767 , allloss: 5.2767, dt: 1563.81ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3529, tok/sec: 83815.94, flops:73.41, batch-reuse:1
@ 448 train 5.2243 , allloss: 5.2243, dt: 1563.57ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3671, tok/sec: 83828.94, flops:73.42, batch-reuse:1
@ 449 train 5.2687 , allloss: 5.2687, dt: 1563.29ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3945, tok/sec: 83843.71, flops:73.43, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0012, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7266, 0.1396, 0.1338, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4570, 0.0457, 0.3906, 0.1060, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3574, 0.0131, 0.6094, 0.0042, 0.0170, 0.0000, 0.0000, 0.0000],
        [0.1069, 0.1816, 0.2402, 0.0181, 0.3672, 0.0854, 0.0000, 0.0000],
        [0.0283, 0.5469, 0.0796, 0.0029, 0.1846, 0.0903, 0.0679, 0.0000],
        [0.0461, 0.1133, 0.1138, 0.1177, 0.2656, 0.0859, 0.1963, 0.0608]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0004,     -0.1787,     -0.0386,     -0.1699,     -0.2314,     -0.2295,     -0.1846,     -0.0286],
        [     0.0071,     -6.7500,     -1.1484,     -1.7266,     -2.7969,     -2.1719,     -2.2344,     -1.4141],
        [     0.0018,     -1.6484,     -1.6953,      3.0312,     -0.7305,     -2.3906,      0.6602,      0.2236],
        [    -0.0006,     -2.2969,     -0.1562,     -1.4609,     -3.1562,     -2.7969,     -2.4375,      0.8750],
        [     0.0094,     -3.2969,      0.5391,     -4.4375,     -3.0312,     -1.9141,     -2.8281,     -0.5586],
        [     0.0034,      0.5312,      0.8086,     -1.7812,      1.2344,     -0.2246,      1.5938,      0.4082],
        [     0.0024,      2.9688,      1.0391,     -2.2812,      1.8750,      1.1641,      0.8750,      0.9102],
        [    -0.0022,      0.8945,      0.9023,      0.9336,      1.7500,      0.6211,      1.4453,      0.2715]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [ 8.6500],
        [ 5.8388],
        [ 5.7393],
        [ 6.9961],
        [ 4.7686],
        [ 2.6787],
        [ 0.5078],
        [ 4.3228],
        [ 0.9922],
        [ 3.9690],
        [ 0.6262],
        [ 0.5508],
        [ 2.3540],
        [ 0.4561]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5820, 0.4199, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3711, 0.4062, 0.2227, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3379, 0.3086, 0.1963, 0.1582, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2070, 0.2188, 0.1338, 0.1504, 0.2891, 0.0000, 0.0000, 0.0000],
        [0.2061, 0.2070, 0.1465, 0.1270, 0.1777, 0.1357, 0.0000, 0.0000],
        [0.1592, 0.1631, 0.1069, 0.0933, 0.1396, 0.1602, 0.1777, 0.0000],
        [0.1436, 0.1445, 0.1104, 0.0918, 0.1416, 0.0967, 0.1426, 0.1289]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.0012,      0.0020,      0.0003,      0.0007,      0.0033,      0.0118,      0.0007],
        [     0.0001,     -0.3242,     -0.9102,     -1.0547,      0.4844,     -0.2236,     -0.3574,     -0.3613],
        [     0.0000,      0.0879,     -0.5117,     -0.5664,      0.0200,     -0.1846,     -0.1016,     -0.0437],
        [    -0.0005,     -0.0918,     -0.5430,     -0.7578,      0.2520,     -0.1836,     -0.0114,      0.0483],
        [     0.0003,      0.0574,     -0.4375,     -0.3184,      0.3359,     -0.0654,     -0.2256,     -0.3340],
        [     0.0004,      0.0022,     -0.3438,     -0.4883,     -0.1484,     -0.4180,     -0.2373,     -0.3633],
        [     0.0008,      0.0258,     -0.3965,     -0.5352,     -0.1260,      0.0112,      0.1113,     -0.0864],
        [     0.0002,      0.0036,     -0.2656,     -0.4473,     -0.0197,     -0.3965,     -0.0128,     -0.1089]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [ 6.9882],
        [ 4.5879],
        [ 4.0739],
        [ 2.8954],
        [ 2.9506],
        [ 1.9811],
        [ 1.8533],
        [ 1.3363],
        [ 1.3322],
        [ 1.2046],
        [ 1.1215],
        [ 0.9098],
        [ 0.8453],
        [ 0.8246]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0025,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0029,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0043,     0.0008,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0056,     0.0006,     0.0005,     0.0004,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0016,     0.0002,     0.0001,     0.0000,     0.0011,     0.0000,     0.0000],
        [    0.9805,     0.0056,     0.0006,     0.0004,     0.0003,     0.0049,     0.0075,     0.0000],
        [    0.9961,     0.0012,     0.0001,     0.0000,     0.0000,     0.0008,     0.0020,     0.0002]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.0806,     -0.1069,     -0.1123,     -0.1235,     -0.0918,     -0.0825,     -0.1001],
        [     0.0028,     -6.0000,     -8.6875,     -8.8125,     -8.9375,     -5.7812,     -5.4375,     -7.5312],
        [     0.0070,     -5.8125,     -8.3125,     -9.0625,     -9.1875,     -6.3438,     -6.2812,     -7.5000],
        [     0.0042,     -5.4375,     -7.0938,     -7.5625,     -7.9688,     -5.3750,     -5.3750,     -6.5000],
        [     0.0019,     -5.1875,     -7.4062,     -7.5000,     -7.7188,     -4.8125,     -4.5000,     -6.4375],
        [     0.0036,     -6.4375,     -8.7500,     -9.3125,     -9.9375,     -6.8438,     -6.2500,     -7.9688],
        [     0.0023,     -5.1562,     -7.3750,     -7.8750,     -8.2500,     -5.2812,     -4.8750,     -6.8125],
        [     0.0048,     -6.7188,     -9.4375,    -10.4375,    -10.5625,     -7.1250,     -6.2188,     -8.8125]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [11.6602],
        [10.6680],
        [10.6484],
        [11.3438],
        [11.1836],
        [10.7227],
        [10.5742],
        [10.0820],
        [ 9.9648],
        [ 9.4209],
        [ 8.4072],
        [ 9.1152],
        [ 8.6211],
        [ 7.6763]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0031,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0044,     0.0006,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0036,     0.0003,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0021,     0.0002,     0.0001,     0.0001,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0029,     0.0004,     0.0002,     0.0002,     0.0009,     0.0000,     0.0000],
        [    0.9961,     0.0026,     0.0003,     0.0001,     0.0002,     0.0008,     0.0004,     0.0000],
        [    0.9961,     0.0020,     0.0002,     0.0001,     0.0001,     0.0006,     0.0004,     0.0005]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.1133,     -0.1245,     -0.1216,     -0.1406,     -0.1108,     -0.1191,     -0.1108],
        [    -0.0090,     -5.7812,     -7.9688,     -8.1250,     -8.1250,     -6.5938,     -7.1875,     -6.9375],
        [    -0.0072,     -5.4375,     -7.4062,     -7.6250,     -7.5312,     -5.9688,     -6.5312,     -6.3125],
        [    -0.0090,     -5.6250,     -8.0000,     -8.1875,     -7.7500,     -6.5625,     -7.0000,     -6.8125],
        [    -0.0128,     -6.1562,     -8.8125,     -9.3125,     -9.0625,     -7.5625,     -8.1250,     -7.7812],
        [    -0.0130,     -5.8750,     -7.9375,     -8.5625,     -8.3750,     -7.0312,     -7.3750,     -7.0000],
        [    -0.0140,     -5.9688,     -8.3125,     -8.8750,     -8.5625,     -7.1875,     -7.7188,     -7.3438],
        [    -0.0117,     -6.2188,     -8.5000,     -9.0625,     -8.8125,     -7.5000,     -7.8750,     -7.5625]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [10.8932],
        [10.5327],
        [10.4292],
        [10.0133],
        [10.0471],
        [ 9.0756],
        [ 8.9545],
        [ 8.3189],
        [ 7.9308],
        [ 8.1980],
        [ 7.5388],
        [ 8.0679],
        [ 7.6932],
        [ 7.9917]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8555,     0.1436,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7734,     0.0640,     0.1621,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6562,     0.0654,     0.1934,     0.0840,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3789,     0.1328,     0.3828,     0.1001,     0.0050,     0.0000,     0.0000,     0.0000],
        [    0.3867,     0.0320,     0.1455,     0.0361,     0.0019,     0.3984,     0.0000,     0.0000],
        [    0.1846,     0.0879,     0.1768,     0.0483,     0.0055,     0.3887,     0.1074,     0.0000],
        [    0.1001,     0.0079,     0.0354,     0.0085,     0.0004,     0.1138,     0.0172,     0.7148]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0001,     -0.0752,     -0.0493,     -0.0640,     -0.1162,     -0.0493,     -0.0732,     -0.0305],
        [    -0.0096,     -1.7969,     -0.4434,     -1.7656,     -5.5000,      0.3340,     -1.0781,      2.5000],
        [    -0.0024,     -2.5000,     -1.5703,     -2.3125,     -5.6562,     -1.3750,     -2.4688,      0.1992],
        [    -0.0079,     -2.3125,     -1.2266,     -2.0625,     -6.1562,      0.0334,     -1.8047,      1.8047],
        [    -0.0137,     -1.0625,      0.0001,     -1.3438,     -4.3438,      1.6094,     -0.3438,      3.3281],
        [    -0.0098,     -2.5000,     -0.9805,     -2.3750,     -5.3125,      0.0215,     -1.4141,      2.0781],
        [    -0.0054,     -0.7500,     -0.0515,     -1.3516,     -3.5156,      0.7383,     -0.5469,      2.2812],
        [    -0.0139,     -2.5625,     -1.0469,     -2.4844,     -5.6562,      0.1182,     -1.7734,      1.9609]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [ 9.0199],
        [ 7.2806],
        [ 7.1592],
        [ 5.0731],
        [ 5.7749],
        [ 4.0344],
        [ 5.7408],
        [ 3.6847],
        [ 5.2110],
        [ 3.7466],
        [ 3.2330],
        [ 5.1982],
        [ 3.1759],
        [ 3.6442]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0129,     0.9883,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0007,     0.9570,     0.0427,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0005,     0.9531,     0.0356,     0.0091,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.7969,     0.0270,     0.0081,     0.1680,     0.0000,     0.0000,     0.0000],
        [    0.0023,     0.7500,     0.0220,     0.0042,     0.0679,     0.1514,     0.0000,     0.0000],
        [    0.0003,     0.6289,     0.0087,     0.0022,     0.0583,     0.1152,     0.1875,     0.0000],
        [    0.0112,     0.5977,     0.0111,     0.0013,     0.0283,     0.0781,     0.1279,     0.1455]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0002,     -0.2852,     -0.2637,     -0.3027,     -0.3340,     -0.3066,     -0.3203,     -0.3066],
        [    -0.0072,      4.3438,      1.5625,     -0.2354,      1.9062,      2.8125,      3.0312,      3.7031],
        [    -0.0053,      7.1562,      4.0625,      3.0156,      5.8750,      6.4688,      6.8750,      6.7812],
        [    -0.0022,      7.5938,      4.3125,      2.9531,      5.8750,      6.4688,      6.9375,      7.0312],
        [    -0.0092,      9.6875,      6.3125,      5.0938,      8.1250,      8.8750,      9.3750,      9.5000],
        [    -0.0033,      5.7812,      2.2500,      0.5859,      3.3750,      4.1875,      4.6875,      4.9688],
        [    -0.0054,      7.7188,      3.4219,      2.0625,      5.3125,      6.0000,      6.5000,      6.7188],
        [    -0.0031,      3.9688,     -0.0104,     -2.1406,      0.9258,      1.9375,      2.4375,      2.5625]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [ 8.1186],
        [ 4.0642],
        [ 4.3537],
        [ 3.3984],
        [ 4.3013],
        [ 2.7430],
        [ 3.0123],
        [ 2.7249],
        [ 1.4066],
        [ 1.8108],
        [ 1.8896],
        [ 2.2196],
        [ 1.8214],
        [ 2.3108]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9336, 0.0645, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6484, 0.0952, 0.2578, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2539, 0.0830, 0.6055, 0.0576, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0131, 0.4121, 0.1924, 0.0957, 0.2871, 0.0000, 0.0000, 0.0000],
        [0.0243, 0.3887, 0.2344, 0.0869, 0.2100, 0.0554, 0.0000, 0.0000],
        [0.0069, 0.3516, 0.1182, 0.0659, 0.3066, 0.0732, 0.0786, 0.0000],
        [0.0111, 0.2539, 0.2012, 0.0786, 0.2256, 0.0532, 0.0737, 0.1030]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0001,     -0.2832,     -0.2109,     -0.2578,     -0.3242,     -0.3203,     -0.3223,     -0.3145],
        [     0.0147,     -2.6562,     -1.1641,     -3.3438,     -4.8125,     -5.6875,     -6.0938,     -5.3438],
        [     0.0148,     -1.8984,     -0.9062,     -2.5781,     -2.8438,     -4.0625,     -3.4531,     -3.1562],
        [     0.0178,     -1.1016,      0.8867,     -1.4688,     -3.0781,     -4.3125,     -4.5312,     -3.8750],
        [     0.0156,      3.4688,      2.7031,      2.0000,      3.1094,      1.4688,      1.6094,      2.0469],
        [     0.0171,      2.7812,      2.2812,      1.2891,      2.1719,      0.8398,      0.6484,      0.9766],
        [     0.0142,      3.9531,      2.8594,      2.2812,      3.8125,      2.3750,      2.4531,      2.8594],
        [     0.0129,      3.1406,      2.9062,      1.9688,      3.0312,      1.5781,      1.9062,      2.2344]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [ 6.8540],
        [ 4.0770],
        [ 4.2299],
        [ 0.9105],
        [ 1.0944],
        [ 1.5373],
        [ 2.2479],
        [ 1.2142],
        [ 1.2447],
        [ 0.6311],
        [ 1.3692],
        [ 2.1300],
        [ 0.7935],
        [ 1.1338]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0002,     0.0013,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9492,     0.0093,     0.0286,     0.0025,     0.0102,     0.0000,     0.0000,     0.0000],
        [    0.9766,     0.0034,     0.0100,     0.0008,     0.0025,     0.0082,     0.0000,     0.0000],
        [    0.0986,     0.0055,     0.0172,     0.0021,     0.0287,     0.0444,     0.8047,     0.0000],
        [    0.9688,     0.0006,     0.0026,     0.0001,     0.0005,     0.0012,     0.0237,     0.0004]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0002,     -0.1318,     -0.1143,     -0.1406,     -0.1572,     -0.1436,     -0.1279,     -0.1455],
        [    -0.0140,    -10.0000,     -7.8438,    -11.1250,    -10.5000,     -9.5625,     -6.8125,    -10.6875],
        [    -0.0089,     -8.5000,     -6.6250,     -9.2500,     -8.9375,     -8.3125,     -6.2812,     -9.3125],
        [    -0.0110,     -9.3750,     -7.6250,    -10.4375,    -10.1250,     -9.3125,     -7.1875,    -10.2500],
        [    -0.0099,     -4.6250,     -3.5156,     -5.9375,     -4.5312,     -3.6562,     -1.2656,     -4.7188],
        [    -0.0100,     -5.6875,     -4.5938,     -7.1250,     -6.0000,     -4.7812,     -2.7188,     -6.0938],
        [    -0.0047,     -2.8906,     -1.7578,     -3.8750,     -1.2422,     -0.8008,      2.0938,     -2.2656],
        [    -0.0133,     -7.4062,     -5.9062,     -8.8125,     -7.5000,     -6.6875,     -3.7188,     -7.7500]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [ 8.8545],
        [ 7.3916],
        [ 8.0983],
        [ 2.3146],
        [ 6.3426],
        [ 1.3518],
        [ 2.3887],
        [ 2.3440],
        [ 4.7553],
        [ 2.3177],
        [ 3.1386],
        [ 3.1663],
        [ 1.7697],
        [ 2.0982]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7422, 0.2578, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1562, 0.3223, 0.5234, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7500, 0.0947, 0.1060, 0.0488, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2598, 0.2256, 0.2002, 0.1758, 0.1377, 0.0000, 0.0000, 0.0000],
        [0.8711, 0.0500, 0.0449, 0.0148, 0.0060, 0.0125, 0.0000, 0.0000],
        [0.3926, 0.0571, 0.0464, 0.0178, 0.0444, 0.0295, 0.4121, 0.0000],
        [0.4238, 0.0217, 0.0160, 0.0067, 0.0077, 0.0036, 0.2363, 0.2852]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,     -0.0515,     -0.0479,     -0.0620,     -0.0693,     -0.0688,     -0.0610,     -0.0554],
        [    -0.0016,     -1.0625,     -1.1875,     -1.9844,     -3.2500,     -4.3750,     -1.5469,     -2.5000],
        [    -0.0025,      0.7188,      1.2031,      0.8203,     -0.2539,     -0.5078,      0.8672,      0.5000],
        [    -0.0041,     -2.0781,     -1.9609,     -2.7344,     -3.9219,     -4.4062,     -2.8906,     -2.8906],
        [    -0.0138,     -0.1553,     -0.2754,     -0.4023,     -0.6484,     -0.5195,     -0.1138,     -0.0334],
        [    -0.0014,     -2.8594,     -2.9688,     -4.0938,     -4.9688,     -4.2500,     -3.5156,     -2.7500],
        [     0.0063,     -1.9219,     -2.1250,     -3.0938,     -2.1719,     -2.5781,      0.0515,     -0.0913],
        [     0.0029,     -2.9688,     -3.2656,     -4.1562,     -4.0000,     -4.7500,     -0.5820,     -0.3965]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [ 7.2273],
        [ 3.7565],
        [ 6.5544],
        [ 4.7131],
        [ 6.0927],
        [ 4.9737],
        [ 3.7864],
        [ 2.8552],
        [ 4.3982],
        [ 4.9831],
        [ 2.4174],
        [ 4.8902],
        [ 3.1430],
        [ 3.8590]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0020,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9414,     0.0195,     0.0383,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0018,     0.0042,     0.0043,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9180,     0.0171,     0.0225,     0.0075,     0.0339,     0.0000,     0.0000,     0.0000],
        [    0.9805,     0.0000,     0.0001,     0.0000,     0.0076,     0.0127,     0.0000,     0.0000],
        [    0.9844,     0.0000,     0.0001,     0.0000,     0.0084,     0.0007,     0.0049,     0.0000],
        [    0.8789,     0.0000,     0.0001,     0.0000,     0.0483,     0.0052,     0.0425,     0.0245]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,     -0.0537,     -0.0479,     -0.0537,     -0.0403,     -0.0513,     -0.0488,     -0.0442],
        [    -0.0004,     -6.2188,     -6.0312,     -6.2500,     -4.4062,     -4.9062,     -4.9062,     -4.7500],
        [     0.0016,     -3.8750,     -3.2031,     -3.7969,     -1.9062,     -2.7969,     -2.1875,     -2.0000],
        [     0.0009,     -6.3125,     -5.4688,     -5.4375,     -3.3906,     -4.5312,     -4.0312,     -3.9531],
        [     0.0022,     -3.9844,     -3.7031,     -4.8125,     -3.2969,     -4.7188,     -3.5781,     -4.1250],
        [     0.0001,    -11.1250,     -9.8125,    -10.5000,     -4.8438,     -4.3438,     -4.0938,     -5.0000],
        [     0.0004,    -10.8750,     -9.7500,    -11.0000,     -4.7500,     -7.2812,     -5.3125,     -5.7188],
        [     0.0009,    -10.8750,     -9.2500,    -10.6875,     -2.8906,     -5.1250,     -3.0312,     -3.5781]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [11.0195],
        [ 7.6855],
        [ 9.9082],
        [ 8.2991],
        [ 9.2725],
        [ 9.9531],
        [ 6.8032],
        [ 8.4800],
        [ 7.0408],
        [ 8.3564],
        [ 5.1007],
        [ 7.3828],
        [ 7.4009],
        [ 7.8613]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1318,     0.8672,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2754,     0.2832,     0.4434,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5742,     0.2139,     0.1504,     0.0598,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6172,     0.0374,     0.1602,     0.0095,     0.1777,     0.0000,     0.0000,     0.0000],
        [    0.3145,     0.0128,     0.0330,     0.0033,     0.0708,     0.5664,     0.0000,     0.0000],
        [    0.1299,     0.0053,     0.0020,     0.0003,     0.0903,     0.2412,     0.5312,     0.0000],
        [    0.0337,     0.0010,     0.0013,     0.0003,     0.0356,     0.0564,     0.1377,     0.7344]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,     -0.0144,     -0.0186,     -0.0258,     -0.0286,     -0.0264,     -0.0312,     -0.0129],
        [    -0.0030,      1.8828,      2.1094,      2.1562,     -3.4844,     -4.6562,     -6.4688,     -4.6250],
        [    -0.0022,      0.0270,      0.4766,      0.3691,     -1.0234,     -2.2656,     -2.6562,     -0.6680],
        [    -0.0040,     -0.9922,     -1.3438,     -2.2656,     -2.6562,     -2.6562,     -3.7344,     -1.6172],
        [    -0.0020,     -2.7969,     -1.3516,     -4.1875,     -1.2422,     -0.2773,     -0.4180,      0.5117],
        [    -0.0021,     -3.2031,     -2.2500,     -4.5625,     -1.4922,      0.5820,     -0.2002,      0.4102],
        [     0.0025,     -3.2031,     -4.1562,     -6.1875,     -0.3613,      0.6211,      1.4141,      3.1562],
        [    -0.0005,     -3.5469,     -3.2969,     -4.7500,      0.0549,      0.5117,      1.4062,      3.0781]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [ 5.5498],
        [ 3.2540],
        [ 4.6547],
        [ 6.8486],
        [ 5.4707],
        [ 4.2551],
        [ 2.2410],
        [ 4.6011],
        [ 4.0033],
        [ 3.7344],
        [ 1.9752],
        [ 2.9330],
        [ 3.0629],
        [ 2.4873]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4707, 0.5273, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1494, 0.0603, 0.7891, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1357, 0.0618, 0.4766, 0.3262, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1572, 0.4805, 0.0850, 0.0287, 0.2480, 0.0000, 0.0000, 0.0000],
        [0.1235, 0.3379, 0.3770, 0.1123, 0.0190, 0.0306, 0.0000, 0.0000],
        [0.1504, 0.4980, 0.1050, 0.0366, 0.0669, 0.0141, 0.1279, 0.0000],
        [0.0757, 0.0476, 0.1016, 0.1206, 0.1113, 0.1006, 0.1797, 0.2637]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0131,      0.0019,     -0.0031,     -0.0118,     -0.0121,     -0.0066,     -0.0102],
        [    -0.0016,      0.1147,      0.7812,      0.6680,     -1.1094,     -0.3887,     -0.0986,     -0.4570],
        [    -0.0020,     -0.9062,      1.6641,      1.0703,     -0.0530,     -0.4023,     -0.0815,      0.1211],
        [    -0.0028,     -0.7930,      1.2500,      0.8711,     -0.5781,     -0.4941,     -0.2295,      0.0610],
        [     0.0025,      1.1250,     -0.6133,     -1.7031,      0.4590,     -2.0781,     -0.2871,     -1.7031],
        [     0.0007,      1.0000,      1.1172,     -0.0952,     -1.8750,     -1.3906,      0.3457,     -0.6211],
        [     0.0024,      1.2031,     -0.3594,     -1.4062,     -0.8125,     -2.3594,     -0.1572,     -1.0234],
        [     0.0018,     -0.4629,      0.2988,      0.4707,      0.3906,      0.2910,      0.8672,      1.2500]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [ 4.7451],
        [ 2.5529],
        [ 2.5671],
        [ 3.1816],
        [ 2.8584],
        [ 2.2018],
        [ 0.9032],
        [ 2.3755],
        [ 1.9900],
        [ 2.1313],
        [ 0.5843],
        [ 1.4034],
        [ 1.8478],
        [ 1.0403]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( are:0.0801 the:0.0854,:0.1309 and:0.1309ies:0.1660,:0.4492 a:0.0583
:0.0737)


------
		( the:0.0854,:0.1309 and:0.1309ies:0.1660,:0.4531 a:0.0586
:0.0737-:0.1191)
- The most common types of the most common types of the most common types
@ 450 train 5.2583 , allloss: 5.2583, dt: 2003.42ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4040, tok/sec: 65424.28, flops:57.30, batch-reuse:1
@ 451 train 5.2366 , allloss: 5.2366, dt: 1563.53ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3810, tok/sec: 83830.82, flops:73.42, batch-reuse:1
@ 452 train 5.1917 , allloss: 5.1917, dt: 1563.13ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3960, tok/sec: 83852.34, flops:73.44, batch-reuse:1
@ 453 train 5.2227 , allloss: 5.2227, dt: 1563.46ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3807, tok/sec: 83834.48, flops:73.43, batch-reuse:1
@ 454 train 5.2727 , allloss: 5.2727, dt: 1563.45ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3953, tok/sec: 83834.98, flops:73.43, batch-reuse:1
@ 455 train 5.2306 , allloss: 5.2306, dt: 1563.05ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4453, tok/sec: 83856.65, flops:73.45, batch-reuse:1
@ 456 train 5.3139 , allloss: 5.3139, dt: 1563.33ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4368, tok/sec: 83841.71, flops:73.43, batch-reuse:1
@ 457 train 5.3204 , allloss: 5.3204, dt: 1562.89ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4555, tok/sec: 83865.26, flops:73.45, batch-reuse:1
@ 458 train 5.3152 , allloss: 5.3152, dt: 1563.27ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4574, tok/sec: 83844.55, flops:73.44, batch-reuse:1
@ 459 train 5.2373 , allloss: 5.2373, dt: 1563.14ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3922, tok/sec: 83851.60, flops:73.44, batch-reuse:1
@ 460 train 5.2525 , allloss: 5.2525, dt: 1563.45ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4289, tok/sec: 83835.04, flops:73.43, batch-reuse:1
@ 461 train 5.2256 , allloss: 5.2256, dt: 1562.56ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4690, tok/sec: 83882.61, flops:73.47, batch-reuse:1
@ 462 train 5.3559 , allloss: 5.3559, dt: 1563.22ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4853, tok/sec: 83847.40, flops:73.44, batch-reuse:1
@ 463 train 5.2933 , allloss: 5.2933, dt: 1563.01ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4537, tok/sec: 83858.95, flops:73.45, batch-reuse:1
@ 464 train 5.2555 , allloss: 5.2555, dt: 1563.20ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4102, tok/sec: 83848.31, flops:73.44, batch-reuse:1
@ 465 train 5.1890 , allloss: 5.1890, dt: 1563.27ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3510, tok/sec: 83844.83, flops:73.44, batch-reuse:1
@ 466 train 5.2990 , allloss: 5.2990, dt: 1563.58ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.6788, tok/sec: 83828.01, flops:73.42, batch-reuse:1
@ 467 train 5.1819 , allloss: 5.1819, dt: 1563.13ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4364, tok/sec: 83852.01, flops:73.44, batch-reuse:1
@ 468 train 5.1727 , allloss: 5.1727, dt: 1563.24ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4352, tok/sec: 83846.41, flops:73.44, batch-reuse:1
@ 469 train 5.1636 , allloss: 5.1636, dt: 1563.93ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4465, tok/sec: 83809.24, flops:73.40, batch-reuse:1
@ 470 train 5.2355 , allloss: 5.2355, dt: 1563.91ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4103, tok/sec: 83810.72, flops:73.41, batch-reuse:1
@ 471 train 5.1708 , allloss: 5.1708, dt: 1563.37ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3879, tok/sec: 83839.55, flops:73.43, batch-reuse:1
@ 472 train 5.2550 , allloss: 5.2550, dt: 1563.68ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3854, tok/sec: 83822.64, flops:73.42, batch-reuse:1
@ 473 train 5.1931 , allloss: 5.1931, dt: 1563.89ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4384, tok/sec: 83811.42, flops:73.41, batch-reuse:1
@ 474 train 5.1306 , allloss: 5.1306, dt: 1563.95ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4276, tok/sec: 83808.33, flops:73.40, batch-reuse:1
@ 475 train 5.1492 , allloss: 5.1492, dt: 1563.97ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3988, tok/sec: 83807.17, flops:73.40, batch-reuse:1
@ 476 train 5.1613 , allloss: 5.1613, dt: 1563.90ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3883, tok/sec: 83811.16, flops:73.41, batch-reuse:1
@ 477 train 5.2274 , allloss: 5.2274, dt: 1563.09ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3946, tok/sec: 83854.35, flops:73.44, batch-reuse:1
@ 478 train 5.1258 , allloss: 5.1258, dt: 1562.97ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3406, tok/sec: 83860.82, flops:73.45, batch-reuse:1
@ 479 train 5.2091 , allloss: 5.2091, dt: 1563.32ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3898, tok/sec: 83842.24, flops:73.43, batch-reuse:1
@ 480 train 5.0825 , allloss: 5.0825, dt: 1563.37ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3524, tok/sec: 83839.60, flops:73.43, batch-reuse:1
@ 481 train 5.1573 , allloss: 5.1573, dt: 1563.95ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3997, tok/sec: 83808.55, flops:73.40, batch-reuse:1
@ 482 train 5.1391 , allloss: 5.1391, dt: 1564.52ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3830, tok/sec: 83777.88, flops:73.38, batch-reuse:1
@ 483 train 5.2514 , allloss: 5.2514, dt: 1562.32ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3743, tok/sec: 83895.54, flops:73.48, batch-reuse:1
@ 484 train 5.0622 , allloss: 5.0622, dt: 1563.59ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4668, tok/sec: 83827.70, flops:73.42, batch-reuse:1
@ 485 train 5.0342 , allloss: 5.0342, dt: 1563.44ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4834, tok/sec: 83835.63, flops:73.43, batch-reuse:1
@ 486 train 5.2081 , allloss: 5.2081, dt: 1563.30ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4938, tok/sec: 83843.09, flops:73.43, batch-reuse:1
@ 487 train 5.1039 , allloss: 5.1039, dt: 1563.49ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4819, tok/sec: 83832.84, flops:73.43, batch-reuse:1
@ 488 train 5.0566 , allloss: 5.0566, dt: 1563.60ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3660, tok/sec: 83826.88, flops:73.42, batch-reuse:1
@ 489 train 5.0893 , allloss: 5.0893, dt: 1563.87ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3961, tok/sec: 83812.34, flops:73.41, batch-reuse:1
@ 490 train 5.2206 , allloss: 5.2206, dt: 1563.72ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3685, tok/sec: 83820.47, flops:73.41, batch-reuse:1
@ 491 train 5.1846 , allloss: 5.1846, dt: 1564.00ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4045, tok/sec: 83805.65, flops:73.40, batch-reuse:1
@ 492 train 5.2048 , allloss: 5.2048, dt: 1563.31ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5742, tok/sec: 83842.76, flops:73.43, batch-reuse:1
@ 493 train 5.1291 , allloss: 5.1291, dt: 1564.08ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4096, tok/sec: 83801.35, flops:73.40, batch-reuse:1
@ 494 train 5.1212 , allloss: 5.1212, dt: 1563.99ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4092, tok/sec: 83806.41, flops:73.40, batch-reuse:1
@ 495 train 5.0215 , allloss: 5.0215, dt: 1563.60ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3367, tok/sec: 83827.08, flops:73.42, batch-reuse:1
@ 496 train 5.1166 , allloss: 5.1166, dt: 1564.19ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3536, tok/sec: 83795.26, flops:73.39, batch-reuse:1
@ 497 train 5.0586 , allloss: 5.0586, dt: 1564.23ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3600, tok/sec: 83793.11, flops:73.39, batch-reuse:1
@ 498 train 5.1765 , allloss: 5.1765, dt: 1563.83ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3775, tok/sec: 83814.74, flops:73.41, batch-reuse:1
@ 499 train 5.1401 , allloss: 5.1401, dt: 1563.92ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3956, tok/sec: 83809.80, flops:73.41, batch-reuse:1
@ 500 train 5.0303 , allloss: 5.0303, dt: 1563.96ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3868, tok/sec: 83807.96, flops:73.40, batch-reuse:1
@ 501 train 5.1698 , allloss: 5.1698, dt: 1563.30ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3496, tok/sec: 83843.06, flops:73.43, batch-reuse:1
@ 502 train 5.1406 , allloss: 5.1406, dt: 1563.17ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3304, tok/sec: 83850.15, flops:73.44, batch-reuse:1
@ 503 train 5.0841 , allloss: 5.0841, dt: 1562.57ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3664, tok/sec: 83882.53, flops:73.47, batch-reuse:1
@ 504 train 5.1140 , allloss: 5.1140, dt: 1563.50ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3719, tok/sec: 83832.42, flops:73.43, batch-reuse:1
@ 505 train 5.0486 , allloss: 5.0486, dt: 1563.71ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3535, tok/sec: 83821.35, flops:73.42, batch-reuse:1
@ 506 train 5.1223 , allloss: 5.1223, dt: 1563.63ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3651, tok/sec: 83825.21, flops:73.42, batch-reuse:1
@ 507 train 5.0613 , allloss: 5.0613, dt: 1563.79ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3799, tok/sec: 83816.83, flops:73.41, batch-reuse:1
@ 508 train 4.9778 , allloss: 4.9778, dt: 1563.50ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3595, tok/sec: 83832.52, flops:73.43, batch-reuse:1
@ 509 train 5.0914 , allloss: 5.0914, dt: 1564.47ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3465, tok/sec: 83780.36, flops:73.38, batch-reuse:1
@ 510 train 5.0329 , allloss: 5.0329, dt: 1563.90ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3405, tok/sec: 83810.96, flops:73.41, batch-reuse:1
@ 511 train 5.1118 , allloss: 5.1118, dt: 1564.00ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3672, tok/sec: 83805.71, flops:73.40, batch-reuse:1
@ 512 train 5.0019 , allloss: 5.0019, dt: 1564.05ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3400, tok/sec: 83803.21, flops:73.40, batch-reuse:1
@ 513 train 4.9895 , allloss: 4.9895, dt: 1563.51ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3380, tok/sec: 83831.75, flops:73.42, batch-reuse:1
@ 514 train 5.0012 , allloss: 5.0012, dt: 1563.21ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3646, tok/sec: 83847.93, flops:73.44, batch-reuse:1
@ 515 train 4.9211 , allloss: 4.9211, dt: 1563.19ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3797, tok/sec: 83848.80, flops:73.44, batch-reuse:1
@ 516 train 4.9328 , allloss: 4.9328, dt: 1563.14ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3745, tok/sec: 83851.55, flops:73.44, batch-reuse:1
@ 517 train 4.9300 , allloss: 4.9300, dt: 1563.70ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4344, tok/sec: 83821.53, flops:73.42, batch-reuse:1
@ 518 train 4.9946 , allloss: 4.9946, dt: 1563.83ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4448, tok/sec: 83814.69, flops:73.41, batch-reuse:1
@ 519 train 4.9672 , allloss: 4.9672, dt: 1563.74ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4746, tok/sec: 83819.79, flops:73.41, batch-reuse:1
@ 520 train 5.0062 , allloss: 5.0062, dt: 1563.97ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3830, tok/sec: 83807.31, flops:73.40, batch-reuse:1
@ 521 train 5.1093 , allloss: 5.1093, dt: 1563.36ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4097, tok/sec: 83840.13, flops:73.43, batch-reuse:1
@ 522 train 4.9431 , allloss: 4.9431, dt: 1564.18ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4276, tok/sec: 83795.99, flops:73.39, batch-reuse:1
@ 523 train 5.0023 , allloss: 5.0023, dt: 1563.99ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4255, tok/sec: 83806.07, flops:73.40, batch-reuse:1
@ 524 train 4.8768 , allloss: 4.8768, dt: 1563.95ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4034, tok/sec: 83808.39, flops:73.40, batch-reuse:1
@ 525 train 4.9679 , allloss: 4.9679, dt: 1563.80ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4392, tok/sec: 83816.10, flops:73.41, batch-reuse:1
@ 526 train 4.9909 , allloss: 4.9909, dt: 1563.23ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4450, tok/sec: 83847.13, flops:73.44, batch-reuse:1
@ 527 train 4.9882 , allloss: 4.9882, dt: 1563.37ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4446, tok/sec: 83839.44, flops:73.43, batch-reuse:1
@ 528 train 4.9056 , allloss: 4.9056, dt: 1563.55ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4707, tok/sec: 83829.87, flops:73.42, batch-reuse:1
@ 529 train 4.9709 , allloss: 4.9709, dt: 1563.38ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4684, tok/sec: 83838.68, flops:73.43, batch-reuse:1
@ 530 train 5.0023 , allloss: 5.0023, dt: 1563.88ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4691, tok/sec: 83811.93, flops:73.41, batch-reuse:1
@ 531 train 5.2063 , allloss: 5.2063, dt: 1563.33ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4182, tok/sec: 83841.47, flops:73.43, batch-reuse:1
@ 532 train 4.8609 , allloss: 4.8609, dt: 1563.07ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5092, tok/sec: 83855.32, flops:73.45, batch-reuse:1
@ 533 train 4.9462 , allloss: 4.9462, dt: 1563.30ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4926, tok/sec: 83843.12, flops:73.43, batch-reuse:1
@ 534 train 4.8861 , allloss: 4.8861, dt: 1563.54ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4244, tok/sec: 83830.08, flops:73.42, batch-reuse:1
@ 535 train 5.0589 , allloss: 5.0589, dt: 1563.60ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4335, tok/sec: 83827.23, flops:73.42, batch-reuse:1
@ 536 train 4.9345 , allloss: 4.9345, dt: 1563.17ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5710, tok/sec: 83849.86, flops:73.44, batch-reuse:1
@ 537 train 4.9224 , allloss: 4.9224, dt: 1563.32ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5130, tok/sec: 83841.88, flops:73.43, batch-reuse:1
@ 538 train 5.0757 , allloss: 5.0757, dt: 1563.57ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5304, tok/sec: 83828.79, flops:73.42, batch-reuse:1
@ 539 train 4.9771 , allloss: 4.9771, dt: 1564.18ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5960, tok/sec: 83796.18, flops:73.39, batch-reuse:1
@ 540 train 4.9932 , allloss: 4.9932, dt: 1563.53ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4969, tok/sec: 83830.99, flops:73.42, batch-reuse:1
@ 541 train 5.0102 , allloss: 5.0102, dt: 1563.14ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4510, tok/sec: 83851.80, flops:73.44, batch-reuse:1
@ 542 train 4.9458 , allloss: 4.9458, dt: 1563.39ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4179, tok/sec: 83838.55, flops:73.43, batch-reuse:1
@ 543 train 5.0033 , allloss: 5.0033, dt: 1563.89ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4376, tok/sec: 83811.66, flops:73.41, batch-reuse:1
@ 544 train 4.9281 , allloss: 4.9281, dt: 1563.56ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3872, tok/sec: 83829.36, flops:73.42, batch-reuse:1
@ 545 train 4.9455 , allloss: 4.9455, dt: 1563.73ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3288, tok/sec: 83819.99, flops:73.41, batch-reuse:1
@ 546 train 4.8173 , allloss: 4.8173, dt: 1563.58ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3552, tok/sec: 83828.07, flops:73.42, batch-reuse:1
@ 547 train 4.9849 , allloss: 4.9849, dt: 1563.49ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3946, tok/sec: 83832.71, flops:73.43, batch-reuse:1
@ 548 train 4.9521 , allloss: 4.9521, dt: 1563.74ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4054, tok/sec: 83819.36, flops:73.41, batch-reuse:1
@ 549 train 4.8665 , allloss: 4.8665, dt: 1563.86ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3809, tok/sec: 83813.26, flops:73.41, batch-reuse:1
@ 550 train 4.9199 , allloss: 4.9199, dt: 1564.90ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3825, tok/sec: 83757.28, flops:73.36, batch-reuse:1
@ 551 train 5.0219 , allloss: 5.0219, dt: 1563.40ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4069, tok/sec: 83837.72, flops:73.43, batch-reuse:1
@ 552 train 4.8477 , allloss: 4.8477, dt: 1563.87ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4136, tok/sec: 83812.46, flops:73.41, batch-reuse:1
@ 553 train 5.0241 , allloss: 5.0241, dt: 1563.70ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3822, tok/sec: 83821.60, flops:73.42, batch-reuse:1
@ 554 train 4.8564 , allloss: 4.8564, dt: 1563.92ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4042, tok/sec: 83809.89, flops:73.41, batch-reuse:1
@ 555 train 4.9610 , allloss: 4.9610, dt: 1564.85ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4483, tok/sec: 83760.09, flops:73.36, batch-reuse:1
@ 556 train 4.8400 , allloss: 4.8400, dt: 1563.66ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3842, tok/sec: 83823.68, flops:73.42, batch-reuse:1
@ 557 train 4.9438 , allloss: 4.9438, dt: 1563.51ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3678, tok/sec: 83831.66, flops:73.42, batch-reuse:1
@ 558 train 5.1033 , allloss: 5.1033, dt: 1563.50ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3650, tok/sec: 83832.43, flops:73.43, batch-reuse:1
@ 559 train 5.1977 , allloss: 5.1977, dt: 1563.38ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5121, tok/sec: 83838.63, flops:73.43, batch-reuse:1
@ 560 train 5.0993 , allloss: 5.0993, dt: 1563.31ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4323, tok/sec: 83842.45, flops:73.43, batch-reuse:1
@ 561 train 5.1906 , allloss: 5.1906, dt: 1563.18ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5194, tok/sec: 83849.62, flops:73.44, batch-reuse:1
@ 562 train 5.1191 , allloss: 5.1191, dt: 1563.42ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4804, tok/sec: 83836.82, flops:73.43, batch-reuse:1
@ 563 train 5.1996 , allloss: 5.1996, dt: 1563.83ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5118, tok/sec: 83814.63, flops:73.41, batch-reuse:1
@ 564 train 5.0077 , allloss: 5.0077, dt: 1563.20ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4314, tok/sec: 83848.53, flops:73.44, batch-reuse:1
@ 565 train 5.0204 , allloss: 5.0204, dt: 1563.29ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4788, tok/sec: 83843.82, flops:73.44, batch-reuse:1
@ 566 train 5.1077 , allloss: 5.1077, dt: 1563.38ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5112, tok/sec: 83838.70, flops:73.43, batch-reuse:1
@ 567 train 5.1364 , allloss: 5.1364, dt: 1563.68ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4221, tok/sec: 83822.70, flops:73.42, batch-reuse:1
@ 568 train 5.1750 , allloss: 5.1750, dt: 1563.83ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4113, tok/sec: 83814.92, flops:73.41, batch-reuse:1
@ 569 train 5.1083 , allloss: 5.1083, dt: 1563.87ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4158, tok/sec: 83812.72, flops:73.41, batch-reuse:1
@ 570 train 5.0474 , allloss: 5.0474, dt: 1563.53ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3614, tok/sec: 83830.76, flops:73.42, batch-reuse:1
@ 571 train 4.9930 , allloss: 4.9930, dt: 1563.50ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4031, tok/sec: 83832.65, flops:73.43, batch-reuse:1
@ 572 train 4.9802 , allloss: 4.9802, dt: 1563.87ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3655, tok/sec: 83812.49, flops:73.41, batch-reuse:1
@ 573 train 5.0575 , allloss: 5.0575, dt: 1563.56ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3765, tok/sec: 83829.17, flops:73.42, batch-reuse:1
@ 574 train 5.0556 , allloss: 5.0556, dt: 1563.46ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3958, tok/sec: 83834.81, flops:73.43, batch-reuse:1
@ 575 train 5.0090 , allloss: 5.0090, dt: 1563.85ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3586, tok/sec: 83813.84, flops:73.41, batch-reuse:1
@ 576 train 5.0074 , allloss: 5.0074, dt: 1563.89ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3548, tok/sec: 83811.75, flops:73.41, batch-reuse:1
@ 577 train 5.0296 , allloss: 5.0296, dt: 1563.27ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3864, tok/sec: 83844.96, flops:73.44, batch-reuse:1
@ 578 train 5.0111 , allloss: 5.0111, dt: 1564.10ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3806, tok/sec: 83800.36, flops:73.40, batch-reuse:1
@ 579 train 4.9839 , allloss: 4.9839, dt: 1563.90ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3931, tok/sec: 83810.77, flops:73.41, batch-reuse:1
@ 580 train 4.9896 , allloss: 4.9896, dt: 1563.60ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4212, tok/sec: 83826.86, flops:73.42, batch-reuse:1
@ 581 train 4.9938 , allloss: 4.9938, dt: 1563.78ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3804, tok/sec: 83817.30, flops:73.41, batch-reuse:1
@ 582 train 4.9458 , allloss: 4.9458, dt: 1563.41ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4506, tok/sec: 83837.40, flops:73.43, batch-reuse:1
@ 583 train 4.9182 , allloss: 4.9182, dt: 1563.36ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4655, tok/sec: 83839.95, flops:73.43, batch-reuse:1
@ 584 train 5.0222 , allloss: 5.0222, dt: 1563.56ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3941, tok/sec: 83829.17, flops:73.42, batch-reuse:1
@ 585 train 4.9550 , allloss: 4.9550, dt: 1563.86ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3643, tok/sec: 83813.22, flops:73.41, batch-reuse:1
@ 586 train 4.9742 , allloss: 4.9742, dt: 1563.28ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3407, tok/sec: 83844.04, flops:73.44, batch-reuse:1
@ 587 train 5.0064 , allloss: 5.0064, dt: 1563.73ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3588, tok/sec: 83820.26, flops:73.41, batch-reuse:1
@ 588 train 5.0500 , allloss: 5.0500, dt: 1563.42ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3212, tok/sec: 83836.88, flops:73.43, batch-reuse:1
@ 589 train 5.0059 , allloss: 5.0059, dt: 1563.52ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3834, tok/sec: 83831.56, flops:73.42, batch-reuse:1
@ 590 train 5.0163 , allloss: 5.0163, dt: 1564.04ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4018, tok/sec: 83803.74, flops:73.40, batch-reuse:1
@ 591 train 4.9288 , allloss: 4.9288, dt: 1563.31ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3691, tok/sec: 83842.53, flops:73.43, batch-reuse:1
@ 592 train 5.0089 , allloss: 5.0089, dt: 1563.06ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3283, tok/sec: 83856.19, flops:73.45, batch-reuse:1
@ 593 train 4.9880 , allloss: 4.9880, dt: 1564.00ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3514, tok/sec: 83805.62, flops:73.40, batch-reuse:1
@ 594 train 5.2324 , allloss: 5.2324, dt: 1564.44ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4057, tok/sec: 83782.30, flops:73.38, batch-reuse:1
@ 595 train 4.9043 , allloss: 4.9043, dt: 1563.52ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4698, tok/sec: 83831.13, flops:73.42, batch-reuse:1
@ 596 train 4.9686 , allloss: 4.9686, dt: 1563.74ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4785, tok/sec: 83819.41, flops:73.41, batch-reuse:1
@ 597 train 4.9979 , allloss: 4.9979, dt: 1563.98ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3566, tok/sec: 83806.51, flops:73.40, batch-reuse:1
@ 598 train 4.9886 , allloss: 4.9886, dt: 1563.35ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3865, tok/sec: 83840.65, flops:73.43, batch-reuse:1
@ 599 train 4.9222 , allloss: 4.9222, dt: 1563.23ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5010, tok/sec: 83846.92, flops:73.44, batch-reuse:1
@ 600 train 4.9327 , allloss: 4.9327, dt: 1563.58ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3864, tok/sec: 83828.03, flops:73.42, batch-reuse:1
@ 601 train 4.9894 , allloss: 4.9894, dt: 1563.58ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3760, tok/sec: 83828.23, flops:73.42, batch-reuse:1
@ 602 train 5.0035 , allloss: 5.0035, dt: 1563.12ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4214, tok/sec: 83852.60, flops:73.44, batch-reuse:1
@ 603 train 4.9157 , allloss: 4.9157, dt: 1562.93ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3943, tok/sec: 83862.76, flops:73.45, batch-reuse:1
@ 604 train 4.8593 , allloss: 4.8593, dt: 1563.28ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4348, tok/sec: 83844.36, flops:73.44, batch-reuse:1
@ 605 train 4.8418 , allloss: 4.8418, dt: 1563.15ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4118, tok/sec: 83851.04, flops:73.44, batch-reuse:1
@ 606 train 4.9087 , allloss: 4.9087, dt: 1564.11ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4010, tok/sec: 83799.65, flops:73.40, batch-reuse:1
@ 607 train 4.8921 , allloss: 4.8921, dt: 1563.52ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4292, tok/sec: 83831.34, flops:73.42, batch-reuse:1
@ 608 train 4.8416 , allloss: 4.8416, dt: 1563.89ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4101, tok/sec: 83811.50, flops:73.41, batch-reuse:1
@ 609 train 4.8811 , allloss: 4.8811, dt: 1563.94ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3445, tok/sec: 83808.90, flops:73.40, batch-reuse:1
@ 610 train 5.0424 , allloss: 5.0424, dt: 1563.45ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4187, tok/sec: 83834.85, flops:73.43, batch-reuse:1
@ 611 train 4.9018 , allloss: 4.9018, dt: 1563.41ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3946, tok/sec: 83837.26, flops:73.43, batch-reuse:1
@ 612 train 4.8967 , allloss: 4.8967, dt: 1563.45ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3901, tok/sec: 83835.31, flops:73.43, batch-reuse:1
@ 613 train 4.9593 , allloss: 4.9593, dt: 1563.81ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4705, tok/sec: 83815.89, flops:73.41, batch-reuse:1
@ 614 train 4.9444 , allloss: 4.9444, dt: 1564.69ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4490, tok/sec: 83768.52, flops:73.37, batch-reuse:1
@ 615 train 4.9684 , allloss: 4.9684, dt: 1564.09ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4782, tok/sec: 83800.55, flops:73.40, batch-reuse:1
@ 616 train 4.9175 , allloss: 4.9175, dt: 1563.51ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4686, tok/sec: 83831.74, flops:73.42, batch-reuse:1
@ 617 train 4.7932 , allloss: 4.7932, dt: 1563.77ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4063, tok/sec: 83817.91, flops:73.41, batch-reuse:1
@ 618 train 4.8549 , allloss: 4.8549, dt: 1563.94ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3997, tok/sec: 83808.99, flops:73.40, batch-reuse:1
@ 619 train 4.8607 , allloss: 4.8607, dt: 1563.29ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4096, tok/sec: 83843.90, flops:73.44, batch-reuse:1
@ 620 train 4.8808 , allloss: 4.8808, dt: 1564.25ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3811, tok/sec: 83792.17, flops:73.39, batch-reuse:1
@ 621 train 4.9345 , allloss: 4.9345, dt: 1564.04ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3797, tok/sec: 83803.37, flops:73.40, batch-reuse:1
@ 622 train 4.8706 , allloss: 4.8706, dt: 1563.94ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3631, tok/sec: 83808.61, flops:73.40, batch-reuse:1
@ 623 train 4.7805 , allloss: 4.7805, dt: 1563.65ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3608, tok/sec: 83824.25, flops:73.42, batch-reuse:1
@ 624 train 4.8512 , allloss: 4.8512, dt: 1563.72ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3711, tok/sec: 83820.81, flops:73.41, batch-reuse:1
@ 625 train 4.8683 , allloss: 4.8683, dt: 1563.68ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4421, tok/sec: 83822.83, flops:73.42, batch-reuse:1
@ 626 train 4.8368 , allloss: 4.8368, dt: 1563.34ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3591, tok/sec: 83841.09, flops:73.43, batch-reuse:1
@ 627 train 4.7807 , allloss: 4.7807, dt: 1563.62ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4796, tok/sec: 83826.14, flops:73.42, batch-reuse:1
@ 628 train 4.9566 , allloss: 4.9566, dt: 1563.51ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3958, tok/sec: 83831.72, flops:73.42, batch-reuse:1
@ 629 train 5.0021 , allloss: 5.0021, dt: 1562.99ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3991, tok/sec: 83859.76, flops:73.45, batch-reuse:1
@ 630 train 4.9036 , allloss: 4.9036, dt: 1564.08ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4580, tok/sec: 83801.51, flops:73.40, batch-reuse:1
@ 631 train 4.8890 , allloss: 4.8890, dt: 1563.41ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4121, tok/sec: 83837.39, flops:73.43, batch-reuse:1
@ 632 train 5.1960 , allloss: 5.1960, dt: 1563.36ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5192, tok/sec: 83839.86, flops:73.43, batch-reuse:1
@ 633 train 4.9023 , allloss: 4.9023, dt: 1563.94ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4707, tok/sec: 83808.71, flops:73.40, batch-reuse:1
@ 634 train 4.9126 , allloss: 4.9126, dt: 1563.49ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4219, tok/sec: 83833.02, flops:73.43, batch-reuse:1
@ 635 train 4.8595 , allloss: 4.8595, dt: 1563.52ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4353, tok/sec: 83831.42, flops:73.42, batch-reuse:1
@ 636 train 4.9539 , allloss: 4.9539, dt: 1563.49ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4588, tok/sec: 83832.96, flops:73.43, batch-reuse:1
@ 637 train 4.8297 , allloss: 4.8297, dt: 1563.58ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4078, tok/sec: 83828.01, flops:73.42, batch-reuse:1
@ 638 train 4.8306 , allloss: 4.8306, dt: 1563.13ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3987, tok/sec: 83852.52, flops:73.44, batch-reuse:1
@ 639 train 4.8659 , allloss: 4.8659, dt: 1563.73ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3855, tok/sec: 83820.01, flops:73.41, batch-reuse:1
@ 640 train 4.7860 , allloss: 4.7860, dt: 1564.08ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3886, tok/sec: 83801.43, flops:73.40, batch-reuse:1
@ 641 train 4.7397 , allloss: 4.7397, dt: 1563.62ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4196, tok/sec: 83826.13, flops:73.42, batch-reuse:1
@ 642 train 4.7533 , allloss: 4.7533, dt: 1564.59ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3703, tok/sec: 83773.82, flops:73.37, batch-reuse:1
@ 643 train 4.8708 , allloss: 4.8708, dt: 1564.82ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3975, tok/sec: 83761.76, flops:73.36, batch-reuse:1
@ 644 train 4.9308 , allloss: 4.9308, dt: 1563.64ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4304, tok/sec: 83824.79, flops:73.42, batch-reuse:1
@ 645 train 4.8627 , allloss: 4.8627, dt: 1564.36ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4488, tok/sec: 83786.35, flops:73.38, batch-reuse:1
@ 646 train 4.8582 , allloss: 4.8582, dt: 1563.50ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4148, tok/sec: 83832.60, flops:73.43, batch-reuse:1
@ 647 train 4.8676 , allloss: 4.8676, dt: 1563.18ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4045, tok/sec: 83849.32, flops:73.44, batch-reuse:1
@ 648 train 4.8498 , allloss: 4.8498, dt: 1563.71ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4791, tok/sec: 83821.14, flops:73.42, batch-reuse:1
@ 649 train 4.8532 , allloss: 4.8532, dt: 1563.79ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4162, tok/sec: 83816.85, flops:73.41, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0018, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3457, 0.5469, 0.1060, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2617, 0.0095, 0.6914, 0.0364, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3398, 0.0024, 0.6523, 0.0024, 0.0023, 0.0000, 0.0000, 0.0000],
        [0.3184, 0.0732, 0.5156, 0.0181, 0.0649, 0.0105, 0.0000, 0.0000],
        [0.0732, 0.3418, 0.2656, 0.0162, 0.1689, 0.0542, 0.0786, 0.0000],
        [0.1592, 0.0703, 0.3125, 0.0542, 0.1562, 0.0378, 0.1455, 0.0654]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0005,     -0.2637,     -0.0859,     -0.2832,     -0.2852,     -0.3242,     -0.1846,     -0.1367],
        [     0.0065,     -6.2812,     -0.1201,     -2.0156,     -3.3281,     -1.7578,     -1.9219,     -1.0625],
        [    -0.0039,      0.4531,     -1.1875,      3.6406,      0.5859,     -1.1406,      2.1562,      0.2285],
        [    -0.0076,     -3.3281,      0.9688,     -1.9766,     -3.0781,     -3.2812,     -2.2812,     -1.2500],
        [     0.0081,     -4.9375,      0.6602,     -4.9375,     -5.0000,     -4.0625,     -3.5781,     -0.9102],
        [     0.0074,     -1.4609,      0.4883,     -2.8594,     -1.5859,     -3.4062,      0.4062,      0.2334],
        [    -0.0040,      1.5391,      1.2812,     -1.5078,      0.8359,     -0.3027,      0.0698,      0.9102],
        [     0.0006,     -0.8203,      0.6758,     -1.0781,     -0.0189,     -1.4375,     -0.0918,     -0.8867]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [ 8.8871],
        [ 6.0654],
        [ 6.4670],
        [ 8.1755],
        [ 6.9617],
        [ 5.5420],
        [ 1.7278],
        [ 6.6909],
        [ 1.7288],
        [ 6.0300],
        [ 1.0024],
        [ 1.1703],
        [ 5.0847],
        [ 1.0866]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5078, 0.4922, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3242, 0.4277, 0.2480, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2988, 0.2676, 0.1885, 0.2451, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1670, 0.1855, 0.1211, 0.2227, 0.3027, 0.0000, 0.0000, 0.0000],
        [0.1523, 0.1445, 0.1670, 0.1504, 0.2148, 0.1699, 0.0000, 0.0000],
        [0.1226, 0.1553, 0.0967, 0.1279, 0.2500, 0.1260, 0.1211, 0.0000],
        [0.1196, 0.1196, 0.1040, 0.1108, 0.1660, 0.1289, 0.1182, 0.1328]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0047,      0.0062,      0.0012,      0.0140,     -0.0005,      0.0062,     -0.0070],
        [    -0.0006,     -0.0339,     -0.7500,      0.0938,      0.5117,     -0.0114,     -0.5781,      0.1611],
        [    -0.0002,      0.2734,     -0.2715,     -0.1357,      0.3691,     -0.0771,     -0.2490,      0.0703],
        [    -0.0001,     -0.1143,     -0.4609,     -0.1992,      0.2637,     -0.0864,     -0.2734,      0.0728],
        [     0.0008,      0.1089,     -0.3184,      0.2910,      0.6016,      0.0192,     -0.2109,      0.1729],
        [     0.0001,     -0.0530,      0.0913,     -0.0171,      0.3438,      0.1064,      0.1924,      0.1875],
        [    -0.0002,      0.2344,     -0.2354,      0.0457,      0.7188,      0.0253,     -0.0092,     -0.0383],
        [    -0.0003,      0.0021,     -0.1387,     -0.0747,      0.3281,      0.0728,     -0.0124,      0.1045]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [ 7.2065],
        [ 4.6318],
        [ 3.8142],
        [ 2.8334],
        [ 3.1182],
        [ 2.5720],
        [ 2.2252],
        [ 1.4894],
        [ 1.4667],
        [ 1.3403],
        [ 1.1331],
        [ 1.0806],
        [ 0.9207],
        [ 1.0070]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0054,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9805,     0.0136,     0.0046,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9727,     0.0112,     0.0097,     0.0052,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9844,     0.0092,     0.0039,     0.0022,     0.0011,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0041,     0.0010,     0.0004,     0.0001,     0.0015,     0.0000,     0.0000],
        [    0.9766,     0.0079,     0.0034,     0.0012,     0.0007,     0.0044,     0.0060,     0.0000],
        [    0.9961,     0.0013,     0.0005,     0.0001,     0.0001,     0.0006,     0.0015,     0.0005]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0001,     -0.0913,     -0.1177,     -0.1338,     -0.1494,     -0.1138,     -0.1040,     -0.1143],
        [    -0.0002,     -5.2188,     -5.9688,     -7.0000,     -7.8750,     -5.7812,     -5.0625,     -5.7812],
        [     0.0078,     -4.2812,     -5.3438,     -5.9688,     -6.8750,     -4.8125,     -4.7812,     -5.1250],
        [     0.0014,     -4.4688,     -4.6250,     -5.2188,     -6.2812,     -4.5312,     -4.1875,     -4.5625],
        [     0.0041,     -4.6562,     -5.5312,     -6.0938,     -6.8438,     -4.7812,     -4.5625,     -5.3438],
        [     0.0021,     -5.5000,     -6.8750,     -7.7812,     -8.9375,     -6.4688,     -5.8125,     -6.5000],
        [     0.0043,     -4.8125,     -5.6562,     -6.6875,     -7.1875,     -5.4062,     -5.0938,     -5.8125],
        [     0.0025,     -6.6562,     -7.5938,     -9.1250,     -9.8750,     -7.5000,     -6.4688,     -7.6875]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [11.5938],
        [10.3418],
        [11.0547],
        [11.1289],
        [10.8164],
        [10.1787],
        [10.2393],
        [10.0859],
        [10.2324],
        [10.5039],
        [ 8.7393],
        [ 9.5459],
        [ 9.0664],
        [ 8.6953]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9531, 0.0466, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9492, 0.0369, 0.0157, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9453, 0.0292, 0.0095, 0.0143, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9531, 0.0215, 0.0063, 0.0094, 0.0089, 0.0000, 0.0000, 0.0000],
        [0.9453, 0.0168, 0.0057, 0.0075, 0.0067, 0.0176, 0.0000, 0.0000],
        [0.9375, 0.0142, 0.0052, 0.0067, 0.0059, 0.0157, 0.0154, 0.0000],
        [0.9297, 0.0145, 0.0045, 0.0061, 0.0052, 0.0152, 0.0145, 0.0117]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0005,     -0.1201,     -0.1289,     -0.1396,     -0.1416,     -0.1191,     -0.1021,     -0.1113],
        [    -0.0217,     -3.0312,     -3.9375,     -3.6094,     -3.7812,     -2.8594,     -3.0469,     -3.1875],
        [    -0.0221,     -3.2656,     -4.1250,     -3.8750,     -4.0625,     -3.1719,     -3.3594,     -3.4844],
        [    -0.0209,     -3.5000,     -4.6250,     -4.2188,     -4.3125,     -3.4844,     -3.6094,     -3.7031],
        [    -0.0228,     -3.8125,     -5.0312,     -4.6562,     -4.6875,     -3.7969,     -3.9844,     -4.1875],
        [    -0.0264,     -4.0625,     -5.1250,     -4.8750,     -4.9688,     -4.0000,     -4.0312,     -4.2188],
        [    -0.0260,     -4.2188,     -5.2188,     -4.9688,     -5.0938,     -4.1250,     -4.1250,     -4.3438],
        [    -0.0265,     -4.1875,     -5.3438,     -5.0625,     -5.2188,     -4.1250,     -4.1875,     -4.4062]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [10.2358],
        [ 9.4973],
        [ 9.3136],
        [ 9.0116],
        [ 8.7225],
        [ 8.1029],
        [ 8.0659],
        [ 6.8860],
        [ 7.1100],
        [ 6.8241],
        [ 6.1469],
        [ 6.2552],
        [ 5.8194],
        [ 6.2699]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8789,     0.1191,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3262,     0.0259,     0.6484,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1650,     0.0211,     0.7891,     0.0242,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1064,     0.0261,     0.8438,     0.0220,     0.0013,     0.0000,     0.0000,     0.0000],
        [    0.0894,     0.0190,     0.7500,     0.0160,     0.0019,     0.1226,     0.0000,     0.0000],
        [    0.0928,     0.0354,     0.6445,     0.0145,     0.0017,     0.0864,     0.1260,     0.0000],
        [    0.0042,     0.0005,     0.0254,     0.0004,     0.0000,     0.0034,     0.0045,     0.9609]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0001,     -0.0684,     -0.0408,     -0.0776,     -0.1162,     -0.0613,     -0.0625,     -0.0036],
        [    -0.0151,     -2.0156,      1.2734,     -2.4531,     -5.1562,     -0.5195,     -0.1621,      4.4375],
        [    -0.0067,     -2.5469,      0.6797,     -2.7344,     -5.4688,     -1.4141,     -0.5078,      3.7188],
        [    -0.0112,     -2.0625,      1.5547,     -1.9297,     -5.1562,     -0.2852,      0.2383,      5.1875],
        [    -0.0145,     -1.4141,      2.0625,     -1.5859,     -4.4375,      0.1777,      0.4258,      5.3750],
        [    -0.0115,     -1.5625,      2.1094,     -1.7344,     -3.8594,      0.3008,      0.8828,      5.5312],
        [    -0.0059,     -0.9688,      1.9297,     -1.8594,     -4.0312,     -0.0732,      0.2969,      4.6875],
        [    -0.0134,     -2.1562,      1.7969,     -2.3594,     -5.1562,     -0.2158,      0.0630,      5.4375]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [ 9.1727],
        [ 7.8580],
        [ 5.6274],
        [ 4.8655],
        [ 4.9263],
        [ 4.5366],
        [ 4.3612],
        [ 2.8331],
        [ 3.4586],
        [ 3.6086],
        [ 4.1963],
        [ 3.2106],
        [ 2.2633],
        [ 3.6328]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0591, 0.9414, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0022, 0.9141, 0.0835, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0018, 0.8594, 0.1025, 0.0352, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0113, 0.6758, 0.1240, 0.0177, 0.1709, 0.0000, 0.0000, 0.0000],
        [0.0015, 0.4082, 0.0796, 0.0140, 0.1611, 0.3359, 0.0000, 0.0000],
        [0.0022, 0.4648, 0.0540, 0.0128, 0.0952, 0.2520, 0.1201, 0.0000],
        [0.0019, 0.2637, 0.0272, 0.0058, 0.0603, 0.2012, 0.1582, 0.2812]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,     -0.2539,     -0.2617,     -0.2969,     -0.3086,     -0.2949,     -0.2949,     -0.2930],
        [    -0.0266,      2.7344,      1.2656,     -0.4844,      1.1641,      2.2969,      1.6406,      2.6250],
        [    -0.0223,      6.0000,      3.5938,      2.7969,      4.7812,      5.8125,      5.4688,      6.1562],
        [    -0.0232,      6.1562,      4.0312,      2.9531,      4.9375,      5.9062,      5.4375,      6.3125],
        [    -0.0330,      4.0625,      2.3594,      0.4121,      2.6875,      3.7812,      3.4688,      4.2188],
        [    -0.0332,      5.5625,      3.9219,      2.1719,      4.6250,      5.3438,      5.0000,      5.7188],
        [    -0.0269,      5.3125,      3.1406,      1.7109,      3.7188,      4.6875,      3.9531,      5.5000],
        [    -0.0354,      4.8750,      2.6250,      1.0625,      3.4062,      4.6250,      4.3750,      4.9688]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [ 7.2765],
        [ 5.4001],
        [ 3.0213],
        [ 2.3565],
        [ 2.1588],
        [ 1.2333],
        [ 1.3478],
        [ 1.1868],
        [ 1.2562],
        [ 0.8924],
        [ 1.2258],
        [ 0.8774],
        [ 0.7540],
        [ 0.9624]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7070,     0.2910,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0698,     0.0996,     0.8320,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.0098,     0.9766,     0.0118,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0018,     0.0630,     0.5078,     0.1235,     0.3027,     0.0000,     0.0000,     0.0000],
        [    0.0150,     0.0347,     0.2578,     0.0342,     0.5234,     0.1348,     0.0000,     0.0000],
        [    0.0043,     0.0198,     0.4844,     0.0403,     0.1030,     0.0767,     0.2715,     0.0000],
        [    0.0016,     0.0077,     0.2100,     0.0164,     0.0410,     0.0159,     0.1787,     0.5273]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0002,     -0.3086,     -0.2617,     -0.3125,     -0.3457,     -0.3633,     -0.3477,     -0.3477],
        [     0.0566,     -0.8281,      3.6406,     -0.4277,     -0.5742,     -0.8320,      0.3262,      1.6797],
        [     0.0635,      0.4160,      2.5312,     -0.0128,      0.8320,      0.1523,      2.1719,      3.0000],
        [     0.0679,      3.8906,      8.5000,      4.0625,      4.5000,      3.8281,      4.1562,      5.5938],
        [     0.0581,      3.5938,      5.6875,      4.2500,      5.1562,      4.9688,      5.0000,      6.5625],
        [     0.0649,      0.9062,      2.9062,      0.8906,      3.6250,      2.2656,      2.6250,      3.5469],
        [     0.0571,      1.5781,      4.7812,      2.2969,      3.2188,      2.9375,      4.1875,      5.6562],
        [     0.0608,      1.6328,      4.9375,      2.3906,      3.2969,      2.3594,      4.7812,      5.8750]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [ 9.5457],
        [ 4.6165],
        [ 3.3330],
        [ 3.6858],
        [ 2.1834],
        [ 3.6833],
        [ 4.1908],
        [ 3.5927],
        [ 2.1700],
        [ 2.3163],
        [ 1.9781],
        [ 2.7598],
        [ 3.3864],
        [ 1.7346]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0017,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9492,     0.0194,     0.0299,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9336,     0.0361,     0.0287,     0.0015,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0065,     0.0054,     0.0001,     0.0010,     0.0000,     0.0000,     0.0000],
        [    0.8203,     0.0732,     0.0292,     0.0017,     0.0162,     0.0581,     0.0000,     0.0000],
        [    0.6719,     0.0398,     0.0625,     0.0009,     0.0193,     0.0718,     0.1328,     0.0000],
        [    0.9922,     0.0026,     0.0021,     0.0000,     0.0002,     0.0008,     0.0016,     0.0004]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0003,     -0.1079,     -0.1133,     -0.1514,     -0.1504,     -0.1318,     -0.1260,     -0.1357],
        [    -0.0138,     -6.3750,     -6.5312,    -11.1875,     -9.5000,     -7.7188,     -7.2188,     -8.5625],
        [    -0.0034,     -3.8906,     -3.4688,     -6.6875,     -5.2500,     -3.8281,     -3.7812,     -4.4375],
        [    -0.0101,     -3.2656,     -3.5000,     -6.4375,     -4.5938,     -3.5156,     -3.4688,     -4.0938],
        [    -0.0125,     -5.0312,     -5.2188,     -8.8750,     -6.9375,     -5.4375,     -4.6875,     -6.2812],
        [    -0.0076,     -2.4219,     -3.3438,     -6.2188,     -3.9375,     -2.6562,     -2.3281,     -3.8750],
        [    -0.0112,     -2.8438,     -2.3906,     -6.6562,     -3.5625,     -2.2500,     -1.6328,     -3.8281],
        [    -0.0204,     -5.9375,     -6.1562,    -10.8125,     -8.6875,     -7.1250,     -6.4688,     -7.9375]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [ 7.3555],
        [ 3.8233],
        [ 2.5033],
        [ 4.5093],
        [ 2.5724],
        [ 2.0981],
        [ 2.2172],
        [ 2.9439],
        [ 3.6676],
        [ 4.3403],
        [ 3.0283],
        [ 2.8184],
        [ 2.4572],
        [ 2.3878]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7617, 0.2363, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1514, 0.2637, 0.5859, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5156, 0.1709, 0.3008, 0.0118, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7500, 0.0693, 0.1621, 0.0085, 0.0092, 0.0000, 0.0000, 0.0000],
        [0.4609, 0.0625, 0.0815, 0.0108, 0.0113, 0.3730, 0.0000, 0.0000],
        [0.3652, 0.1089, 0.0437, 0.0036, 0.0101, 0.2480, 0.2207, 0.0000],
        [0.1377, 0.0947, 0.0118, 0.0017, 0.0034, 0.0723, 0.1338, 0.5430]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.0654,     -0.0552,     -0.0850,     -0.0830,     -0.0728,     -0.0811,     -0.0713],
        [    -0.0056,     -1.1797,     -1.3906,     -5.0938,     -4.9062,     -3.6719,     -3.2656,     -3.7031],
        [    -0.0125,      0.5430,      1.3438,     -0.4961,     -0.7344,      0.0569,      0.2539,      0.3477],
        [    -0.0078,     -1.1172,     -0.5508,     -3.7812,     -3.1562,     -2.0938,     -1.8203,     -1.3125],
        [    -0.0099,     -2.3906,     -1.5391,     -4.5000,     -4.4062,     -1.8047,     -2.7969,     -2.0469],
        [    -0.0109,     -2.0000,     -1.7422,     -3.7656,     -3.7188,     -0.2236,     -1.3125,     -0.4395],
        [    -0.0050,     -1.2188,     -2.1250,     -4.6250,     -3.5938,     -0.3926,     -0.5078,      0.5781],
        [    -0.0053,     -0.3789,     -2.4531,     -4.3750,     -3.7031,     -0.6445,     -0.0315,      1.3750]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [ 7.2952],
        [ 3.7254],
        [ 4.6954],
        [ 5.5615],
        [ 4.7684],
        [ 3.6904],
        [ 2.8104],
        [ 1.8942],
        [ 3.1340],
        [ 3.1046],
        [ 3.8262],
        [ 3.0374],
        [ 2.0554],
        [ 2.2427]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0004,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0029,     0.0025,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9727,     0.0098,     0.0112,     0.0073,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9688,     0.0021,     0.0031,     0.0005,     0.0267,     0.0000,     0.0000,     0.0000],
        [    0.9336,     0.0000,     0.0000,     0.0000,     0.0028,     0.0635,     0.0000,     0.0000],
        [    0.8320,     0.0002,     0.0002,     0.0000,     0.0327,     0.0322,     0.1030,     0.0000],
        [    0.8203,     0.0001,     0.0002,     0.0000,     0.1406,     0.0178,     0.0199,     0.0013]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.0464,     -0.0452,     -0.0452,     -0.0381,     -0.0457,     -0.0552,     -0.0698],
        [     0.0035,     -7.7188,     -6.5625,     -8.0000,     -4.0000,     -4.2812,     -4.4688,     -8.3125],
        [     0.0015,     -5.8438,     -5.9688,     -5.6875,     -4.3125,     -4.7500,     -5.3438,     -7.7500],
        [     0.0044,     -4.5938,     -4.4688,     -4.8750,     -0.7773,     -2.9062,     -2.7031,     -5.3438],
        [    -0.0013,     -6.1250,     -5.7188,     -7.5625,     -3.5938,     -2.5000,     -1.7656,     -4.7500],
        [     0.0014,    -11.4375,    -10.0625,    -12.0000,     -5.8125,     -2.6875,     -3.2188,     -8.8125],
        [    -0.0046,     -8.5625,     -8.5625,    -10.4375,     -3.2344,     -3.2656,     -2.0938,     -6.5312],
        [    -0.0023,     -9.2500,     -8.1875,    -10.1875,     -1.7656,     -3.8281,     -3.7188,     -6.5000]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [11.5820],
        [10.6641],
        [10.5840],
        [ 9.9414],
        [10.8008],
        [ 9.9443],
        [10.0215],
        [10.4824],
        [10.1262],
        [ 9.4541],
        [ 9.1323],
        [ 9.3843],
        [ 9.4487],
        [ 9.0728]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2539,     0.7461,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2432,     0.4336,     0.3242,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0048,     0.1001,     0.0289,     0.8672,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1641,     0.0134,     0.7695,     0.0001,     0.0544,     0.0000,     0.0000,     0.0000],
        [    0.0101,     0.0025,     0.0149,     0.0001,     0.0417,     0.9297,     0.0000,     0.0000],
        [    0.0012,     0.0105,     0.0057,     0.0004,     0.0287,     0.0684,     0.8867,     0.0000],
        [    0.0019,     0.0018,     0.0001,     0.0001,     0.0135,     0.0859,     0.1299,     0.7656]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.0063,     -0.0020,     -0.0334,     -0.0183,     -0.0225,     -0.0193,     -0.0206],
        [    -0.0048,      1.0703,      7.3750,      1.4141,     -1.2109,     -2.5156,     -2.6562,     -5.6250],
        [    -0.0043,      0.5703,      0.2812,      4.1250,      2.4844,     -1.9141,     -0.0928,     -3.6875],
        [    -0.0093,      3.0312,      1.7812,      5.1875,      7.5312,     -0.6133,      3.3750,     -0.5430],
        [     0.0090,     -2.5000,      1.5469,     -7.3125,     -1.0938,      0.6719,     -2.5000,     -2.8125],
        [     0.0025,     -1.3906,      0.3926,     -4.2500,      1.4219,      4.5312,      2.7188,      1.9453],
        [    -0.0026,      2.1406,      1.5391,     -1.2188,      3.1406,      4.0000,      6.5625,      6.6875],
        [     0.0084,     -0.0248,     -3.0469,     -3.2969,      1.9688,      3.8125,      4.2188,      6.0000]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [ 7.7314],
        [ 6.2266],
        [ 4.8896],
        [ 7.1164],
        [ 6.0973],
        [ 4.3130],
        [ 4.7220],
        [ 5.0463],
        [ 4.0592],
        [ 4.7678],
        [ 5.5054],
        [ 3.6188],
        [ 3.9538],
        [ 3.6747]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5898, 0.4102, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2832, 0.1738, 0.5430, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0850, 0.0898, 0.2559, 0.5703, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3672, 0.3535, 0.1108, 0.0240, 0.1436, 0.0000, 0.0000, 0.0000],
        [0.3125, 0.0850, 0.3438, 0.0894, 0.0417, 0.1289, 0.0000, 0.0000],
        [0.1709, 0.0903, 0.2461, 0.1426, 0.1152, 0.0962, 0.1377, 0.0000],
        [0.0981, 0.0376, 0.1631, 0.2793, 0.0459, 0.0522, 0.1377, 0.1855]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0001,      0.0096,     -0.0037,     -0.0115,     -0.0216,     -0.0295,     -0.0182,     -0.0259],
        [    -0.0018,     -0.3672,      0.1245,     -0.0747,      0.0640,     -0.2754,      0.4336,     -1.0547],
        [    -0.0004,     -0.4922,      0.6484,      1.5000,     -0.2354,     -0.8438,     -0.5547,     -0.3652],
        [    -0.0027,      0.0518,      1.0938,      1.8984,     -0.4297,     -0.6523,     -0.1074,     -0.4492],
        [    -0.0015,     -0.0403,     -1.2031,     -2.7344,     -0.9414,     -1.9141,     -2.1250,     -2.7500],
        [     0.0002,     -1.3047,      0.0947,     -1.2500,     -2.0156,     -0.8828,     -1.3672,     -1.2734],
        [     0.0028,     -0.6367,      0.3691,     -0.1748,     -0.3926,     -0.5703,     -0.2100,     -0.3027],
        [    -0.0016,     -0.9609,      0.5039,      1.0469,     -0.7617,     -0.6367,      0.3340,      0.6328]], device='cuda:0', dtype=torch.bfloat16)
========
torch.Size([1, 15, 1])
RESW: tensor([[12.0000],
        [ 5.6770],
        [ 3.5643],
        [ 3.2816],
        [ 3.6265],
        [ 2.5422],
        [ 2.1391],
        [ 1.6241],
        [ 3.0168],
        [ 2.2629],
        [ 2.2915],
        [ 1.3726],
        [ 1.7268],
        [ 2.1853],
        [ 1.0706]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.1875 a:0.0952,:0.1992 white:0.1221ets:0.0820,:0.3965 a:0.0791ery:0.0913)
ery
------
		( a:0.0952,:0.2090 white:0.1226ets:0.0820,:0.4023 a:0.0786ery:0.0913,:0.1138)
, and are the most common type of bread.
The most common type
@ 650 train 4.7578 , allloss: 4.7578, dt: 2001.10ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4074, tok/sec: 65500.12, flops:57.37, batch-reuse:1
@ 651 train 4.7888 , allloss: 4.7888, dt: 1563.82ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3838, tok/sec: 83815.33, flops:73.41, batch-reuse:1
@ 652 train 4.7698 , allloss: 4.7698, dt: 1563.30ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4024, tok/sec: 83843.29, flops:73.43, batch-reuse:1
@ 653 train 4.7531 , allloss: 4.7531, dt: 1564.06ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4017, tok/sec: 83802.32, flops:73.40, batch-reuse:1
@ 654 train 4.7604 , allloss: 4.7604, dt: 1566.19ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3934, tok/sec: 83688.49, flops:73.30, batch-reuse:1
@ 655 train 4.7996 , allloss: 4.7996, dt: 1563.95ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4223, tok/sec: 83808.42, flops:73.40, batch-reuse:1
@ 656 train 4.5987 , allloss: 4.5987, dt: 1563.77ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4072, tok/sec: 83818.15, flops:73.41, batch-reuse:1
@ 657 train 4.7043 , allloss: 4.7043, dt: 1563.80ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4254, tok/sec: 83816.60, flops:73.41, batch-reuse:1
@ 658 train 4.7742 , allloss: 4.7742, dt: 1563.64ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4205, tok/sec: 83825.04, flops:73.42, batch-reuse:1
@ 659 train 4.7981 , allloss: 4.7981, dt: 1563.63ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4055, tok/sec: 83825.66, flops:73.42, batch-reuse:1
@ 660 train 4.7887 , allloss: 4.7887, dt: 1563.61ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4226, tok/sec: 83826.77, flops:73.42, batch-reuse:1
@ 661 train 4.6980 , allloss: 4.6980, dt: 1563.70ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4120, tok/sec: 83821.91, flops:73.42, batch-reuse:1
@ 662 train 4.8522 , allloss: 4.8522, dt: 1563.69ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4485, tok/sec: 83822.44, flops:73.42, batch-reuse:1
@ 663 train 4.7526 , allloss: 4.7526, dt: 1563.52ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4582, tok/sec: 83831.57, flops:73.42, batch-reuse:1
@ 664 train 4.7059 , allloss: 4.7059, dt: 1563.43ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4071, tok/sec: 83836.19, flops:73.43, batch-reuse:1
@ 665 train 4.7467 , allloss: 4.7467, dt: 1563.64ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4136, tok/sec: 83824.71, flops:73.42, batch-reuse:1
@ 666 train 4.6818 , allloss: 4.6818, dt: 1562.95ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4779, tok/sec: 83861.84, flops:73.45, batch-reuse:1
@ 667 train 4.6412 , allloss: 4.6412, dt: 1563.43ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5893, tok/sec: 83836.18, flops:73.43, batch-reuse:1
@ 668 train 4.7888 , allloss: 4.7888, dt: 1563.78ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4550, tok/sec: 83817.49, flops:73.41, batch-reuse:1
@ 669 train 4.6964 , allloss: 4.6964, dt: 1563.32ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4542, tok/sec: 83842.30, flops:73.43, batch-reuse:1
@ 670 train 4.8032 , allloss: 4.8032, dt: 1563.56ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3795, tok/sec: 83829.36, flops:73.42, batch-reuse:1
@ 671 train 4.7121 , allloss: 4.7121, dt: 1563.72ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4305, tok/sec: 83820.53, flops:73.41, batch-reuse:1
@ 672 train 4.7752 , allloss: 4.7752, dt: 1563.54ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3783, tok/sec: 83830.13, flops:73.42, batch-reuse:1
@ 673 train 4.8081 , allloss: 4.8081, dt: 1563.21ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3954, tok/sec: 83847.91, flops:73.44, batch-reuse:1
@ 674 train 4.7727 , allloss: 4.7727, dt: 1564.04ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4262, tok/sec: 83803.60, flops:73.40, batch-reuse:1
@ 675 train 4.6807 , allloss: 4.6807, dt: 1563.56ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4582, tok/sec: 83829.45, flops:73.42, batch-reuse:1
@ 676 train 4.6490 , allloss: 4.6490, dt: 1564.40ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3979, tok/sec: 83784.19, flops:73.38, batch-reuse:1
@ 677 train 4.8003 , allloss: 4.8003, dt: 1563.66ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.5158, tok/sec: 83823.71, flops:73.42, batch-reuse:1
@ 678 train 4.6669 , allloss: 4.6669, dt: 1563.32ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4290, tok/sec: 83842.22, flops:73.43, batch-reuse:1
@ 679 train 4.6607 , allloss: 4.6607, dt: 1563.08ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4103, tok/sec: 83855.19, flops:73.45, batch-reuse:1
@ 680 train 4.6625 , allloss: 4.6625, dt: 1563.30ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4155, tok/sec: 83843.09, flops:73.43, batch-reuse:1
@ 681 train 4.7182 , allloss: 4.7182, dt: 1563.82ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4344, tok/sec: 83815.28, flops:73.41, batch-reuse:1
@ 682 train 4.7181 , allloss: 4.7181, dt: 1563.77ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4453, tok/sec: 83818.12, flops:73.41, batch-reuse:1
@ 683 train 4.6256 , allloss: 4.6256, dt: 1563.66ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4266, tok/sec: 83823.93, flops:73.42, batch-reuse:1
@ 684 train 4.6239 , allloss: 4.6239, dt: 1563.94ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3910, tok/sec: 83808.92, flops:73.40, batch-reuse:1
@ 685 train 4.6977 , allloss: 4.6977, dt: 1564.05ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4111, tok/sec: 83802.85, flops:73.40, batch-reuse:1
@ 686 train 4.7333 , allloss: 4.7333, dt: 1564.05ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3763, tok/sec: 83802.73, flops:73.40, batch-reuse:1
@ 687 train 4.7393 , allloss: 4.7393, dt: 1564.03ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4089, tok/sec: 83804.21, flops:73.40, batch-reuse:1
@ 688 train 4.6096 , allloss: 4.6096, dt: 1563.70ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4376, tok/sec: 83821.67, flops:73.42, batch-reuse:1
@ 689 train 4.6248 , allloss: 4.6248, dt: 1562.96ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4518, tok/sec: 83861.50, flops:73.45, batch-reuse:1
@ 690 train 4.6013 , allloss: 4.6013, dt: 1562.93ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4963, tok/sec: 83862.89, flops:73.45, batch-reuse:1
@ 691 train 4.7231 , allloss: 4.7231, dt: 1563.29ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4499, tok/sec: 83843.81, flops:73.44, batch-reuse:1
@ 692 train 4.6685 , allloss: 4.6685, dt: 1563.86ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4068, tok/sec: 83813.34, flops:73.41, batch-reuse:1
@ 693 train 4.7150 , allloss: 4.7150, dt: 1563.42ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4027, tok/sec: 83836.64, flops:73.43, batch-reuse:1
@ 694 train 4.5827 , allloss: 4.5827, dt: 1563.91ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4012, tok/sec: 83810.42, flops:73.41, batch-reuse:1
@ 695 train 4.6178 , allloss: 4.6178, dt: 1563.69ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4249, tok/sec: 83822.38, flops:73.42, batch-reuse:1
@ 696 train 4.5289 , allloss: 4.5289, dt: 1564.26ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4178, tok/sec: 83791.77, flops:73.39, batch-reuse:1
@ 697 train 4.5300 , allloss: 4.5300, dt: 1563.11ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3993, tok/sec: 83853.53, flops:73.44, batch-reuse:1
@ 698 train 4.6630 , allloss: 4.6630, dt: 1563.12ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.3871, tok/sec: 83852.79, flops:73.44, batch-reuse:1
@ 699 train 4.5960 , allloss: 4.5960, dt: 1563.47ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4580, tok/sec: 83833.99, flops:73.43, batch-reuse:1
@ 700 train 4.5662 , allloss: 4.5662, dt: 1564.14ms, perc(<0.5): 0.0000, perc(<5): 0.0000, perc(>5): 0.0000, norm:0.4522, tok/sec: 83798.35, flops:73.40, batch-reuse:1
