Threshold: 0.1
Enable layer loss: False
MAX LEARNING RATE: 0.0006
Experiment name: 17-yes-1minus-mlpconcat-noln-faster-2
MLPSCALE: 4
Experiment description: Transformer, max LR 6e-4
Setting:
========
self.compiler = BenCompilerNoOp(config)
self.execute = BenExecute(config) 
========
y = self.ln_1(x)
attn, xWeights, scores = self.attn(y, y, print_weights=print_weights)
program = self.compiler(y)
machineOutput = self.execute(program, attn)
x = xWeights * x + (1-xWeights)*machineOutput
======== 
VALUEMATRIX=True
REUSE_WEIGHTS=False
MLP_SCALE=4
MEASURE_SELF_CONTRIBUTION=False
NEW_ALL_LAYER_LOSS=False
MATRIX_NUM_PARAMS=4096
MLPMAT_INNER_SIZE=64
DELETE_SELF_CONTRIBUTION=False
EXTRACT_SELF_CONTRIBUTION=False
ATTENTION_SINK=True
IDENTITY_LOSS=True

Warmup steps: 1000
total desired batch size: 131072
Mini-batch size: 8*1024
=> calculated gradient accumulation steps: 16
=> calculated gradient accumulation steps: 16
Training max steps: 300001Num GPUs: 1{'block_size': 1024, 'vocab_size': 50304, 'n_layer': 12, 'n_head': 12, 'n_embd': 768}
num decayed parameter tensors: 50, with 152,666,112 parameters
num non-decayed parameter tensors: 74, with 84,480 parameters
@ 0 train 10.9631 , allloss: 449.0872, dt: 2955.70ms, fracRes: 0.0062, norm(attn): 0.0327, norm(output): 0.9997, norm(x): 0.9937, norm(y): 1.0001, norm:228.4504, tok/sec: 44345.54, flops:46.55, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5898, 0.4121, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2559, 0.4453, 0.3008, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2236, 0.2695, 0.3145, 0.1934, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2148, 0.2041, 0.1855, 0.2266, 0.1689, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1758, 0.1216, 0.2324, 0.1123, 0.1592, 0.1992, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1279, 0.1377, 0.1572, 0.1982, 0.0996, 0.0972, 0.1816, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1152, 0.1250, 0.0942, 0.1738, 0.0977, 0.2266, 0.0908, 0.0757, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1216, 0.1040, 0.0830, 0.1416, 0.0771, 0.1221, 0.1357, 0.1230, 0.0923, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0845, 0.1084, 0.1245, 0.0815, 0.1099, 0.0991, 0.0781, 0.1309, 0.1270, 0.0557, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1064, 0.0801, 0.0630, 0.0869, 0.0693, 0.1138, 0.0928, 0.1030, 0.0967, 0.0762, 0.1123, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0894, 0.0669, 0.0703, 0.0684, 0.0718, 0.1152, 0.0571, 0.0603, 0.1050, 0.0874, 0.1123, 0.0957, 0.0000, 0.0000, 0.0000],
        [0.0825, 0.0742, 0.0859, 0.0620, 0.0840, 0.0835, 0.0664, 0.0522, 0.0654, 0.0825, 0.1069, 0.0894, 0.0645, 0.0000, 0.0000],
        [0.0708, 0.0664, 0.0684, 0.0574, 0.0825, 0.0723, 0.0830, 0.0542, 0.0723, 0.0598, 0.0532, 0.1113, 0.0684, 0.0806, 0.0000],
        [0.0688, 0.0664, 0.0762, 0.0718, 0.0544, 0.0601, 0.0664, 0.0684, 0.0713, 0.0732, 0.0806, 0.0476, 0.0684, 0.0457, 0.0806]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0252,  0.0002, -0.0268,  ..., -0.0187,  0.0131,  0.0002],
        [-0.0031,  0.0340,  0.0036,  ..., -0.0285,  0.0174,  0.0175],
        [-0.0378,  0.0015,  0.0170,  ..., -0.0232, -0.0119,  0.0134],
        ...,
        [ 0.0330,  0.0041,  0.0092,  ..., -0.0118,  0.0203,  0.0188],
        [-0.0109,  0.0112,  0.0200,  ..., -0.0298,  0.0158,  0.0168],
        [ 0.0225,  0.0107,  0.0146,  ..., -0.0058,  0.0007, -0.0097]], device='cuda:0', requires_grad=True)
K: tensor([ 0.2734,  0.6172, -0.2480,  0.2695, -0.2539, -0.7305, -0.1108, -0.7461, -0.3398,  0.2217, -0.0554,  0.0432,  0.2539,  0.5469,  0.3633,  0.6680, -0.5898,  0.6172,  0.3457,  1.3516,  0.4043,  0.6484,  0.8086, -0.5938,  1.2969, -0.3164,  0.6055, -0.3398,  0.4062, -0.5352, -0.1650,  0.3711,
         0.5586, -0.1367,  1.0156,  0.2852, -1.0000,  1.2891, -0.0035, -0.2793,  0.0488, -0.1104, -0.1299, -0.2656,  0.6523, -0.4121, -0.2832, -0.2080,  0.4941,  0.8594,  0.0325, -0.6797,  0.2256, -0.4102, -0.1699, -0.6719, -0.2451,  0.9023, -0.0549, -0.8359, -0.3418,  0.8125,  0.1328,  0.1934],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0127,  0.0013,  0.0257,  ..., -0.0013,  0.0114, -0.0068],
        [-0.0014, -0.0094,  0.0055,  ...,  0.0508,  0.0130,  0.0349],
        [-0.0136, -0.0162, -0.0016,  ..., -0.0324, -0.0409,  0.0225],
        ...,
        [ 0.0179,  0.0258,  0.0063,  ..., -0.0170, -0.0061,  0.0058],
        [ 0.0034,  0.0044, -0.0185,  ...,  0.0325,  0.0054,  0.0362],
        [ 0.0095,  0.0044,  0.0148,  ...,  0.0080, -0.0132,  0.0060]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.2676,  0.3223, -0.4902, -0.3711,  0.3379, -0.2656,  0.0884, -0.8203, -0.8125,  0.1680,  0.2930, -0.4863, -1.1172, -0.0569,  0.1973,  0.0967,  0.8086,  0.0505, -0.4629,  0.6250, -0.4590, -0.1797, -0.8125, -0.4277,  0.1738, -0.5820,  0.4590,  1.3828,  0.2969, -1.0859,  0.0408,  0.5508,
         0.5664, -0.2275,  0.1289,  0.2197, -0.2285, -0.5469,  0.1108, -0.2002, -0.3496, -0.3242, -0.2139,  0.3066, -0.2393, -0.6328,  0.0050, -0.7617,  0.4355,  0.0608, -0.8672,  0.0767, -0.3867, -0.7031,  0.4004, -0.7617,  0.0576, -0.2695,  0.0635,  1.5391,  0.6445, -0.1201,  0.2041,  0.8672],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.3555, -0.2305,  0.3691, -0.4375,  0.2793,  0.2949,  0.1099, -0.0601,  0.0505, -0.3906, -0.0593, -0.1021, -0.2812,  0.0376],
        [ 0.0000,  0.5508,  0.1592, -0.1201,  0.1426, -0.1533, -0.0317, -0.0310,  0.4844,  0.0613, -0.0036,  0.1523,  0.2168,  0.1670, -0.2754],
        [ 0.0000,  0.1846,  0.3398, -0.1436, -0.2246,  0.2949,  0.2246, -0.0095,  0.4922,  0.2754,  0.3203,  0.0845,  0.2285,  0.4766,  0.2988],
        [ 0.0000, -0.0535, -0.1455,  0.0518, -0.2412, -0.4258,  0.3672,  0.1855, -0.0366,  0.0869, -0.0874, -0.2793,  0.1104, -0.5938, -0.5820],
        [ 0.0000, -0.3672,  0.2793, -0.4473, -0.0996,  0.1250, -0.1357, -0.1768, -0.4336,  0.2441,  0.1582,  0.1250, -0.0198, -0.2051, -0.2412],
        [ 0.0000,  0.0767,  0.2109,  0.4434, -0.2451, -0.2695,  0.3535, -0.0444,  0.5234,  0.3379, -0.1196, -0.0977, -0.0981, -0.0718, -0.2041],
        [ 0.0000,  0.0850, -0.1973,  0.4141, -0.1621,  0.6797, -0.2373, -0.4160, -0.1699,  0.1123, -0.4277,  0.2578,  0.2246, -0.0308, -0.0299],
        [ 0.0000, -0.1572, -0.3848,  0.1484, -0.4551,  0.0042,  0.1055,  0.0089, -0.2773, -0.5547, -0.7969,  0.2324,  0.0052, -0.2021,  0.1206],
        [ 0.0000,  0.2490,  0.3887, -0.0378,  0.2617,  0.1592, -0.0776,  0.4355,  0.4062, -0.4180,  0.1680, -0.3750, -0.4434,  0.2578, -0.4863],
        [ 0.0000, -0.2812, -0.5234, -0.2021, -0.4258,  0.0669, -0.1357, -0.0312, -0.0962, -0.3340,  0.0540, -0.2129,  0.0030, -0.2676, -0.3750],
        [ 0.0000, -0.2852, -0.2334, -0.2617, -0.2148,  0.2559, -0.4434, -0.3906,  0.1631, -0.0212,  0.2314,  0.0728, -0.0806,  0.0791,  0.0036],
        [ 0.0000, -0.1045,  0.0408, -0.2852,  0.0167,  0.0125, -0.2148, -0.4590, -0.2295, -0.0018,  0.2578,  0.0796, -0.2461, -0.1758, -0.0928],
        [ 0.0000, -0.0679, -0.0359, -0.2148,  0.1484,  0.0155,  0.1553, -0.2676,  0.0148, -0.1719, -0.2871,  0.4492, -0.0354,  0.1260, -0.1953],
        [ 0.0000, -0.0325,  0.1016,  0.0442, -0.2334, -0.1357, -0.0337, -0.0066,  0.0356,  0.0623,  0.1582, -0.3691, -0.0069, -0.4082,  0.1572]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5047],
        [0.3155],
        [0.2598],
        [0.1968],
        [0.1683],
        [0.1453],
        [0.1189],
        [0.1070],
        [0.1027],
        [0.0925],
        [0.0795],
        [0.0728],
        [0.0667],
        [0.0647]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4355, 0.5625, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2383, 0.3906, 0.3711, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2773, 0.3008, 0.2148, 0.2080, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2578, 0.1895, 0.1865, 0.1953, 0.1709, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1475, 0.1514, 0.1494, 0.1680, 0.1348, 0.2490, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1416, 0.2217, 0.0742, 0.1465, 0.1582, 0.1406, 0.1162, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1050, 0.2285, 0.0679, 0.1680, 0.1387, 0.0962, 0.0918, 0.1050, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1367, 0.1133, 0.0535, 0.1758, 0.1504, 0.0947, 0.1011, 0.0684, 0.1064, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0864, 0.1777, 0.1167, 0.1216, 0.0962, 0.1011, 0.0669, 0.0554, 0.1152, 0.0625, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0864, 0.0669, 0.0796, 0.0962, 0.0645, 0.1138, 0.0815, 0.0757, 0.1221, 0.0610, 0.1533, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0762, 0.0908, 0.1099, 0.0752, 0.0583, 0.1123, 0.0625, 0.0723, 0.0708, 0.0854, 0.1128, 0.0737, 0.0000, 0.0000, 0.0000],
        [0.0645, 0.0564, 0.0913, 0.0693, 0.0532, 0.0732, 0.1147, 0.0649, 0.0708, 0.0884, 0.0767, 0.0830, 0.0933, 0.0000, 0.0000],
        [0.0718, 0.0688, 0.0579, 0.0854, 0.0903, 0.0752, 0.0654, 0.0464, 0.0620, 0.1055, 0.0535, 0.0718, 0.0791, 0.0669, 0.0000],
        [0.0669, 0.1069, 0.0605, 0.0913, 0.0884, 0.0593, 0.0593, 0.0288, 0.0549, 0.0442, 0.0688, 0.0845, 0.0601, 0.0557, 0.0698]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0178,  0.0327, -0.0034,  ..., -0.0027, -0.0052,  0.0259],
        [ 0.0174,  0.0107,  0.0507,  ..., -0.0305,  0.0063,  0.0467],
        [-0.0126,  0.0221, -0.0072,  ...,  0.0044,  0.0019,  0.0052],
        ...,
        [ 0.0486, -0.0065,  0.0018,  ..., -0.0078, -0.0003, -0.0013],
        [-0.0140,  0.0265,  0.0083,  ..., -0.0091, -0.0128,  0.0118],
        [-0.0018, -0.0068,  0.0156,  ..., -0.0047, -0.0081,  0.0265]], device='cuda:0', requires_grad=True)
K: tensor([ 0.3125, -0.4180, -0.1216,  0.1836,  0.0144,  0.0498,  0.5859,  0.6523, -0.2070, -0.1689,  1.2656,  0.0251,  0.1309,  0.0361,  1.0547, -1.3047, -0.7344, -0.8828, -0.0208, -0.5273,  0.6953, -0.5391,  0.0033,  0.5820,  0.2422, -0.8945,  0.6641, -0.2930, -0.5352,  0.1670, -0.4863, -0.7852,
        -0.2578,  0.2773, -0.0586,  0.0295, -0.2412,  0.2295,  0.5781, -1.4297, -0.2637, -0.3262, -0.4199,  0.4160, -0.8594, -1.5078,  0.2314,  0.8672,  0.6133, -0.3301,  0.3984,  0.3105,  0.6484, -0.3145, -0.3281,  0.7344, -0.6445, -1.3047,  0.7969,  0.6406, -0.2773,  0.8516, -0.5703,  0.8086],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0157,  0.0295, -0.0267,  ...,  0.0234,  0.0130, -0.0230],
        [-0.0004,  0.0056,  0.0308,  ..., -0.0030, -0.0012,  0.0204],
        [-0.0248, -0.0132,  0.0036,  ..., -0.0356,  0.0212,  0.0229],
        ...,
        [-0.0328,  0.0164, -0.0080,  ..., -0.0028,  0.0061,  0.0374],
        [ 0.0084, -0.0162, -0.0177,  ...,  0.0136,  0.0212, -0.0054],
        [-0.0354,  0.0018, -0.0135,  ...,  0.0311, -0.0216,  0.0229]], device='cuda:0', requires_grad=True)
Q: tensor([ 1.0000,  0.0830,  0.8125,  0.1719,  1.0234, -0.2910, -0.8086, -0.2578,  0.9141,  0.2988,  0.2061, -0.3457, -0.8008,  0.2021, -0.6758,  0.5508,  0.3711, -0.4258, -0.2773,  0.8867,  0.6953, -0.3242, -0.1982,  0.3047,  0.7109, -0.1191, -0.1279,  0.5586,  0.9609, -0.4668,  0.7461, -0.9492,
        -1.1484, -0.0762,  0.0654,  0.5117,  0.4316,  0.7734,  0.4805, -0.1270, -0.1177,  0.9297, -1.0312, -0.5234, -0.2139,  0.6367, -0.0182, -0.2500,  0.7422, -0.3887,  0.5039,  0.2334, -0.1904,  0.4941, -0.8086,  1.1328, -0.3887, -0.4316, -0.4121, -0.8945, -0.3887, -0.3594, -0.7812,  0.5078],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.2598,     -0.4980,      0.1611,      0.7148,      0.0967,      0.5117,     -0.3398,     -0.1943,     -0.3906,      0.6250,      0.3828,      0.1357,     -0.7148,      0.4590],
        [     0.0000,      0.4961,      0.4395,      0.2617,     -0.2402,      0.1680,     -0.1123,     -0.4434,     -0.1533,     -0.2715,     -0.4512,     -0.1650,     -0.3164,     -0.3203,      0.2188],
        [     0.0000,      0.0845,     -0.2520,     -0.2871,      0.1089,      0.6133,      0.2715,      0.5703,      0.7344,      0.2061,      0.3164,      0.3535,      0.2373,      0.7852,      0.5664],
        [     0.0000,     -0.3086,     -0.3223,     -0.2793,     -0.4102,     -0.6406,      0.1572,      0.1162,     -0.5781,     -0.1973,      0.1621,      0.1846,      0.2910,     -0.4648,     -0.5586],
        [     0.0000,      0.0247,      0.0154,      0.1289,     -0.0928,      0.5234,      0.1631,     -0.2793,     -0.3281,      0.0830,     -0.3906,     -0.3516,     -0.5195,     -0.3105,     -0.2988],
        [     0.0000,      0.4473,     -0.6484,      0.0302,      0.1104,     -0.0070,     -0.2002,      0.0859,      0.1006,     -0.3125,     -0.0801,     -0.0208,      0.2080,     -0.1406,     -0.2559],
        [     0.0000,      0.7773,     -0.4316,      0.4707,      0.2773,     -0.0854,     -0.1348,     -0.0011,      0.5508,     -0.4414,      0.1279,      0.0762,      0.3848,     -0.4531,      0.1138],
        [     0.0000,     -0.1875,     -0.9336,      0.2559,      0.0991,     -0.3652,     -0.3008,     -0.6914,     -0.2471,      0.0278,      0.1123,      0.4199,     -0.7188,     -0.4199,     -0.1035],
        [     0.0000,      0.7227,      0.3008,      0.3438,      0.1079,      0.1572,     -0.2559,     -0.4453,      0.2891,     -0.3203,     -0.0304,     -0.2393,     -0.1934,     -0.1367,      0.2676],
        [     0.0000,     -0.2598,     -0.0815,      0.1055,     -0.2969,      0.2734,     -0.0562,     -0.1357,      0.3438,     -0.3496,      0.5703,      0.2314,      0.0933,      0.2451,     -0.0156],
        [     0.0000,      0.1738,      0.3652,     -0.0141,     -0.2676,      0.3887,     -0.1963,     -0.0522,     -0.0752,      0.1147,      0.3906,     -0.0366,      0.1973,     -0.2676,      0.1836],
        [     0.0000,     -0.1387,      0.3438,      0.0659,     -0.1973,      0.1216,      0.5742,      0.0056,      0.0923,      0.3105,      0.1709,      0.2500,      0.3672,      0.0781,      0.0391],
        [     0.0000,     -0.0432,     -0.2158,      0.1738,      0.2305,      0.0452,     -0.0894,     -0.4375,     -0.1475,      0.3848,     -0.2969,      0.0003,      0.0981,     -0.0728,      0.2480],
        [     0.0000,      0.4688,     -0.0977,      0.3105,      0.2773,     -0.1196,     -0.1216,     -0.8398,     -0.1963,     -0.4141,      0.0320,      0.2354,     -0.1060,     -0.1836,      0.0449]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5256],
        [0.3260],
        [0.2459],
        [0.2084],
        [0.1738],
        [0.1455],
        [0.1213],
        [0.1093],
        [0.0958],
        [0.0864],
        [0.0782],
        [0.0776],
        [0.0685],
        [0.0691]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5938, 0.4062, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2852, 0.4082, 0.3047, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2334, 0.2793, 0.2891, 0.1982, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2578, 0.1572, 0.1826, 0.2090, 0.1943, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1670, 0.1104, 0.1670, 0.1748, 0.1768, 0.2041, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1465, 0.1553, 0.1338, 0.1436, 0.1279, 0.1445, 0.1484, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0977, 0.1099, 0.1270, 0.0801, 0.1426, 0.1436, 0.1226, 0.1758, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0962, 0.1152, 0.0801, 0.0928, 0.1152, 0.1035, 0.1064, 0.1309, 0.1602, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0830, 0.1079, 0.0908, 0.0850, 0.0830, 0.1006, 0.0869, 0.1572, 0.0894, 0.1157, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0889, 0.0977, 0.0620, 0.0796, 0.0593, 0.1206, 0.0879, 0.1157, 0.0825, 0.0669, 0.1387, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0850, 0.1025, 0.0874, 0.0830, 0.0593, 0.0830, 0.0938, 0.0864, 0.0801, 0.1079, 0.0688, 0.0620, 0.0000, 0.0000, 0.0000],
        [0.0791, 0.0718, 0.0776, 0.0422, 0.0718, 0.0654, 0.0771, 0.0811, 0.0708, 0.1260, 0.0703, 0.1050, 0.0625, 0.0000, 0.0000],
        [0.0640, 0.0635, 0.0439, 0.0850, 0.0630, 0.0569, 0.0645, 0.0967, 0.0728, 0.1060, 0.0574, 0.0581, 0.1006, 0.0674, 0.0000],
        [0.0669, 0.0625, 0.0576, 0.0403, 0.0396, 0.0918, 0.0574, 0.0552, 0.0981, 0.0806, 0.0640, 0.0459, 0.0474, 0.1016, 0.0908]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0205,  0.0106,  0.0181,  ..., -0.0243, -0.0125,  0.0115],
        [-0.0150, -0.0142,  0.0152,  ..., -0.0072, -0.0208, -0.0062],
        [ 0.0366,  0.0188,  0.0054,  ...,  0.0062,  0.0695,  0.0057],
        ...,
        [ 0.0205, -0.0217, -0.0082,  ...,  0.0286,  0.0078, -0.0163],
        [-0.0305, -0.0338,  0.0150,  ...,  0.0229, -0.0200, -0.0148],
        [ 0.0232, -0.0176, -0.0446,  ...,  0.0416, -0.0040, -0.0078]], device='cuda:0', requires_grad=True)
K: tensor([-0.3516,  0.6758,  0.4688, -0.1562, -0.0030, -0.4297,  0.3203, -0.5430,  0.1299,  0.2461,  0.1289, -0.3691, -0.2354, -0.8633,  0.0064,  0.3047, -0.7031,  0.7031,  0.1895,  0.4824,  0.4453,  0.1348, -0.7734, -0.8477, -0.2578, -0.3750,  0.5781, -0.5195,  0.8438,  0.4434, -0.8672, -0.6836,
         0.1729, -0.0991, -0.2637, -1.0391,  0.1436,  0.0508, -0.4043, -0.6133, -0.6758, -0.6367, -0.4336, -0.0752,  0.3574,  0.2236, -0.3887, -0.6211, -0.9727, -0.7500, -0.0630, -0.0659,  0.9688, -0.0918, -0.1602, -0.0376,  0.7227, -0.4453,  0.3027, -0.8008, -0.9570,  1.3203,  1.2969, -0.1035],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0079, -0.0011,  0.0216,  ...,  0.0272,  0.0056,  0.0202],
        [ 0.0124,  0.0029,  0.0007,  ...,  0.0013, -0.0067, -0.0121],
        [-0.0102, -0.0276,  0.0108,  ..., -0.0065,  0.0428, -0.0011],
        ...,
        [-0.0362, -0.0118, -0.0356,  ..., -0.0003,  0.0389,  0.0054],
        [ 0.0080, -0.0048, -0.0354,  ...,  0.0220, -0.0142,  0.0077],
        [-0.0226, -0.0090,  0.0144,  ..., -0.0096, -0.0153,  0.0129]], device='cuda:0', requires_grad=True)
Q: tensor([ 1.0156, -0.1689, -0.1924, -1.0703,  0.2480, -0.0284,  0.6172,  0.9922, -0.1904,  0.1777, -0.1885, -0.2002, -0.5742, -0.0510,  0.7773,  0.4707, -0.4902,  0.3281, -0.5039, -0.5195, -1.2500, -0.2324, -0.5391, -1.3828,  0.3984,  0.3535,  0.6914, -0.3965, -0.4492,  0.2559, -0.6523,  0.0850,
        -1.1562,  0.1807, -0.7695,  0.0913,  0.9375,  0.6250,  0.6992,  1.1172, -1.3047, -0.2002, -0.0190, -0.5977, -0.0835, -0.6367, -0.2617, -0.4941,  0.3984, -1.3984, -0.9531, -0.6445, -0.5391, -0.0391,  0.8867, -0.0280,  0.2256, -0.1021,  0.8555, -0.1689,  0.2158,  0.0334, -0.0205, -0.3438],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.3770, -0.3984, -0.0630,  0.0332,  0.2969, -0.1299, -0.0154, -0.0283,  0.1924, -0.3418,  0.2041,  0.1660,  0.3457, -0.0879],
        [ 0.0000,  0.3594,  0.0679, -0.5312, -0.1108,  0.0060,  0.4121,  0.1514,  0.2480, -0.1494,  0.1738,  0.2461, -0.0297,  0.3652, -0.1621],
        [ 0.0000,  0.1777,  0.2168, -0.1650,  0.3516,  0.2402,  0.6016, -0.0703,  0.3418,  0.7188,  0.3887,  0.2891,  0.1069,  0.5391,  0.3066],
        [ 0.0000, -0.4941, -0.3438, -0.2080, -0.2812, -0.0051, -0.1523, -0.2061, -0.0566,  0.2812, -0.1445,  0.2832,  0.2637, -0.1025, -0.0359],
        [ 0.0000, -0.4141, -0.0036,  0.0425,  0.0527,  0.2002, -0.1089, -0.5312, -0.4160,  0.2852,  0.4727,  0.1641, -0.1543,  0.2275,  0.4590],
        [ 0.0000,  0.0571, -0.0913, -0.0208, -0.1406, -0.0176,  0.0123,  0.4062,  0.0698,  0.2012,  0.0280,  0.7344,  0.4863,  0.4277,  0.4961],
        [ 0.0000,  0.1143,  0.2637, -0.1992,  0.3789,  0.3848,  0.2256,  0.5859, -0.1553,  0.0718,  0.2451,  0.6406, -0.0330,  0.3301,  0.7070],
        [ 0.0000,  0.1807, -0.1797, -0.0339,  0.1816,  0.0762,  0.1011,  0.3086,  0.5156,  0.5547, -0.0952,  0.3887,  0.2471,  0.2559,  0.3086],
        [ 0.0000,  0.2637,  0.0947,  0.0260,  0.0008,  0.1953,  0.0476,  0.6445,  0.0786,  0.3340, -0.0928,  0.5625,  0.2158,  0.4160,  0.1328],
        [ 0.0000,  0.0918, -0.3594, -0.1099, -0.4043,  0.3027, -0.0104,  0.2656, -0.0718, -0.2812,  0.4453, -0.2676,  0.0103,  0.1309, -0.1123],
        [ 0.0000,  0.1875,  0.0272, -0.0216, -0.3574, -0.0220,  0.0952,  0.0177, -0.0579,  0.2402, -0.2100, -0.3164,  0.0110,  0.2070,  0.0349],
        [ 0.0000, -0.0991, -0.0209, -0.6289, -0.0981, -0.1885, -0.0280,  0.0214, -0.1118,  0.4609, -0.1177,  0.2812, -0.2363, -0.2441, -0.1138],
        [ 0.0000, -0.0047, -0.3770,  0.2812, -0.0170, -0.1191,  0.0069,  0.4141,  0.1279,  0.5039, -0.1069, -0.0942,  0.4531,  0.0540,  0.4512],
        [ 0.0000, -0.0669, -0.1484, -0.5039, -0.5273,  0.3184, -0.1553, -0.1924,  0.3828,  0.1855, -0.0420, -0.3789, -0.3438,  0.4160,  0.3066]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5342],
        [0.3356],
        [0.2428],
        [0.1886],
        [0.1743],
        [0.1345],
        [0.1213],
        [0.1061],
        [0.0948],
        [0.0936],
        [0.0797],
        [0.0754],
        [0.0704],
        [0.0644]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4336, 0.5664, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3613, 0.4004, 0.2383, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2520, 0.2832, 0.1787, 0.2871, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2295, 0.2852, 0.1138, 0.1992, 0.1729, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1680, 0.1807, 0.1553, 0.1729, 0.1787, 0.1445, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1240, 0.1484, 0.1455, 0.1172, 0.1143, 0.1426, 0.2080, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1201, 0.1196, 0.1069, 0.1523, 0.1177, 0.1855, 0.1084, 0.0894, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1260, 0.1396, 0.0835, 0.1016, 0.0908, 0.1226, 0.1396, 0.1167, 0.0786, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1079, 0.0869, 0.0811, 0.1260, 0.0693, 0.1079, 0.1226, 0.1147, 0.1016, 0.0820, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1050, 0.1079, 0.0737, 0.1006, 0.0806, 0.0908, 0.0742, 0.0898, 0.0796, 0.0742, 0.1235, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1069, 0.0908, 0.0674, 0.0884, 0.0645, 0.1016, 0.1108, 0.0718, 0.0562, 0.0649, 0.1016, 0.0762, 0.0000, 0.0000, 0.0000],
        [0.0825, 0.0898, 0.0591, 0.0879, 0.0952, 0.0613, 0.0933, 0.0674, 0.0869, 0.0603, 0.0801, 0.0520, 0.0840, 0.0000, 0.0000],
        [0.0918, 0.0742, 0.0625, 0.0703, 0.0811, 0.0669, 0.0845, 0.0737, 0.0762, 0.0532, 0.0801, 0.0525, 0.0688, 0.0640, 0.0000],
        [0.0830, 0.0732, 0.0605, 0.0620, 0.0469, 0.0771, 0.0933, 0.0688, 0.0532, 0.0742, 0.0703, 0.0527, 0.0742, 0.0544, 0.0564]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0363,  0.0164,  0.0146,  ...,  0.0157, -0.0287, -0.0328],
        [-0.0004,  0.0137,  0.0182,  ...,  0.0217, -0.0075,  0.0324],
        [ 0.0266,  0.0075, -0.0148,  ...,  0.0015,  0.0221, -0.0022],
        ...,
        [-0.0218, -0.0176, -0.0133,  ...,  0.0100, -0.0076,  0.0281],
        [-0.0019,  0.0142, -0.0021,  ..., -0.0069, -0.0196, -0.0296],
        [ 0.0190, -0.0112, -0.0087,  ...,  0.0148, -0.0053,  0.0009]], device='cuda:0', requires_grad=True)
K: tensor([ 0.2090,  0.5430,  0.7617,  0.1191,  0.7109,  0.6133, -1.2188, -1.3672, -0.4199, -0.5117,  0.6641,  0.9922,  0.2969, -0.6602,  0.3438,  0.5078,  0.4473, -0.1187,  0.2168,  0.9336, -0.1001,  0.1147, -0.5508, -0.5820,  0.0018, -1.0312,  0.3125,  0.0273,  0.5508, -0.1475,  1.0078,  0.1152,
         0.6523, -0.4141, -0.3965,  1.6562, -0.1118, -0.2617,  0.7930,  0.0179,  0.9180, -0.6562, -0.3242,  0.1191,  0.5039,  0.2539, -0.1504,  0.2041,  0.3086, -0.0613,  0.2402, -0.2490, -0.3184, -0.0732,  0.0549,  0.1709,  0.1963,  0.2578, -0.1338,  0.3125, -0.0179, -0.0486, -0.3594,  0.1865],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0307,  0.0259,  0.0033,  ...,  0.0132, -0.0103, -0.0189],
        [-0.0041,  0.0027,  0.0173,  ...,  0.0215, -0.0098,  0.0054],
        [-0.0006,  0.0206,  0.0177,  ..., -0.0101,  0.0482,  0.0105],
        ...,
        [-0.0268,  0.0122, -0.0233,  ..., -0.0030,  0.0062, -0.0087],
        [-0.0464,  0.0159, -0.0134,  ..., -0.0077, -0.0158, -0.0376],
        [ 0.0009, -0.0159, -0.0387,  ..., -0.0089,  0.0185,  0.0295]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.9336,  0.2344, -0.0540,  0.1602, -1.4453,  0.0182,  0.7109,  0.3125,  0.0688, -0.3633,  0.1406,  0.1133, -0.7930,  0.0479,  0.0381,  0.5586, -0.0635,  0.0732,  0.5156, -0.1172, -0.7383,  0.4668, -0.1133, -0.1533, -0.8281,  0.3516, -0.2773,  0.2051, -0.6992,  0.0476,  0.1133, -0.4316,
        -1.1719,  0.5039,  0.0928, -0.6484, -0.8438,  0.3105,  0.8281, -0.0454,  0.2256, -0.5352, -0.7734, -0.5430, -0.1641, -0.2070, -0.1021,  0.1016, -0.2031, -0.7383, -0.7070,  0.1660,  0.1592,  0.1104, -0.2197,  0.3047, -0.6602,  0.6367, -0.0752,  0.5469,  0.2188, -0.2852,  0.5000,  0.2158],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.2637,     -0.5781,      0.0165,      0.1084,     -0.2559,     -0.3125,      0.1021,      0.4004,     -0.0811,      0.0403,     -0.2930,     -0.1670,      0.0361,     -0.0498],
        [     0.0000,      0.0996,     -0.4180,      0.0001,     -0.1094,     -0.0378,     -0.1201,     -0.1367,     -0.5078,     -0.3516,     -0.0830,     -0.5234,     -0.3027,     -0.1738,     -0.4785],
        [     0.0000,      0.1187,     -0.3438,      0.1289,     -0.0986,      0.2930,     -0.0334,     -0.1318,     -0.1592,     -0.0889,      0.4023,     -0.0574,      0.0229,      0.0417,     -0.2432],
        [     0.0000,      0.2207,     -0.6992,     -0.1406,     -0.2852,     -0.2930,     -0.6914,     -0.0757,     -0.1758,     -0.4375,     -0.1992,     -0.6172,     -0.7266,      0.0903,     -0.2812],
        [     0.0000,      0.0708,     -0.0771,      0.0312,      0.0630,     -0.1523,      0.0688,      0.3789,     -0.1836,     -0.0981,      0.6523,     -0.1357,      0.3555,      0.0908,     -0.4688],
        [     0.0000,      0.1787,      0.1582,     -0.0569,     -0.0820,      0.1377,      0.5156,     -0.3008,      0.1226,     -0.0291,      0.1377,     -0.3438,     -0.0640,      0.0864,     -0.4141],
        [     0.0000,     -0.0026,     -0.1143,      0.2393,     -0.0204,      0.4375,     -0.0996,     -0.2910,     -0.1895,     -0.0903,      0.0259,     -0.2373,     -0.1260,      0.0036,      0.0620],
        [     0.0000,      0.1021,     -0.4121,     -0.2148,     -0.3262,     -0.0308,      0.1025,     -0.0767,     -0.4727,     -0.0623,     -0.0610,     -0.0752,      0.3945,     -0.6914,     -0.5039],
        [     0.0000,     -0.2139,     -0.2852,      0.1582,     -0.4395,      0.0024,      0.1279,      0.0623,     -0.0583,     -0.2754,      0.0508,     -0.6719,      0.1543,     -0.2656,     -0.2734],
        [     0.0000,      0.0315,     -0.3535,     -0.0403,     -0.2617,     -0.1416,     -0.3477,     -0.1533,     -0.2754,     -0.3418,      0.1631,     -0.4629,      0.0603,      0.1118,     -0.3457],
        [     0.0000,     -0.1650,     -0.4648,     -0.1924,     -0.5078,     -0.0540,      0.0356,     -0.3965,     -0.6445,     -0.5000,     -0.0540,     -0.3418,     -0.1201,     -0.0381,     -0.5898],
        [     0.0000,      0.0879,     -0.3301,      0.0674,      0.1436,     -0.2930,      0.1260,     -0.2031,      0.0530,     -0.3105,     -0.0253,     -0.4629,      0.0176,      0.0532,     -0.0371],
        [     0.0000,     -0.2109,     -0.3848,     -0.2676,     -0.1221,     -0.3145,     -0.0791,     -0.2148,     -0.1826,     -0.5430,     -0.1367,     -0.5586,     -0.2871,     -0.3574,     -0.2949],
        [     0.0000,     -0.1260,     -0.3145,     -0.2910,     -0.5703,     -0.0732,      0.1157,     -0.1846,     -0.4434,     -0.1084,     -0.1680,     -0.4512,     -0.1099,     -0.4199,     -0.3848]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4788],
        [0.3442],
        [0.2541],
        [0.2020],
        [0.1604],
        [0.1413],
        [0.1339],
        [0.1099],
        [0.0959],
        [0.0923],
        [0.0844],
        [0.0710],
        [0.0712],
        [0.0656]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5312, 0.4688, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3301, 0.3203, 0.3477, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2500, 0.2266, 0.2227, 0.2988, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1807, 0.1699, 0.2295, 0.2910, 0.1279, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1621, 0.1777, 0.1807, 0.2041, 0.1079, 0.1670, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1377, 0.1240, 0.1011, 0.2139, 0.1289, 0.1157, 0.1777, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1426, 0.0923, 0.1162, 0.1426, 0.1416, 0.0820, 0.1797, 0.1035, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1523, 0.0879, 0.0815, 0.1367, 0.1143, 0.0618, 0.1260, 0.1064, 0.1318, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1001, 0.0894, 0.0967, 0.0947, 0.0928, 0.0684, 0.1187, 0.1396, 0.1016, 0.0981, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0923, 0.0635, 0.0630, 0.1035, 0.0608, 0.0962, 0.0918, 0.1240, 0.1094, 0.0840, 0.1104, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1035, 0.0889, 0.0845, 0.0850, 0.0840, 0.0535, 0.0850, 0.0996, 0.0579, 0.0698, 0.0923, 0.0962, 0.0000, 0.0000, 0.0000],
        [0.1030, 0.0742, 0.0591, 0.0996, 0.0859, 0.0564, 0.0840, 0.0967, 0.0552, 0.0508, 0.0874, 0.0815, 0.0659, 0.0000, 0.0000],
        [0.0767, 0.0442, 0.0752, 0.0674, 0.0549, 0.0562, 0.0933, 0.0518, 0.0654, 0.0684, 0.1157, 0.0947, 0.0869, 0.0496, 0.0000],
        [0.0903, 0.0449, 0.0610, 0.0491, 0.0815, 0.0496, 0.0771, 0.0503, 0.0664, 0.0466, 0.0840, 0.0762, 0.0991, 0.0540, 0.0693]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0135,  0.0297,  0.0284,  ...,  0.0255, -0.0266, -0.0019],
        [ 0.0085, -0.0017,  0.0084,  ..., -0.0082, -0.0050,  0.0453],
        [ 0.0130,  0.0095, -0.0278,  ...,  0.0104,  0.0133,  0.0025],
        ...,
        [-0.0140,  0.0179, -0.0151,  ..., -0.0388,  0.0054, -0.0297],
        [ 0.0477, -0.0049, -0.0541,  ...,  0.0049, -0.0127,  0.0216],
        [ 0.0016, -0.0109, -0.0042,  ..., -0.0392, -0.0092, -0.0119]], device='cuda:0', requires_grad=True)
K: tensor([ 0.4004, -0.2500, -0.3145,  0.2373, -0.1572, -0.3047, -0.3359, -0.0231,  0.2031,  0.1680,  0.0728,  0.4238, -0.1572,  0.2637, -0.2988, -0.1436, -0.5781,  0.1885, -0.6172,  0.3555,  0.0613, -0.5938,  0.0500,  0.1025,  0.5586, -0.2949,  0.7930,  0.4609,  0.4805,  0.2051, -0.2480, -0.1387,
         0.7891,  0.0349, -0.6133, -0.9766, -0.2617,  0.1562, -0.1562, -0.1406,  0.4961,  0.5391,  0.0532,  0.4004, -0.7812, -0.0986,  0.4727,  0.3848,  0.8164,  0.6055, -0.0378, -1.0078,  0.1914,  0.0325, -1.0703,  1.1641,  0.2197, -0.4980,  0.0540,  0.1689,  1.7812, -0.9141, -0.2969,  0.6367],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0270, -0.0196, -0.0092,  ...,  0.0032,  0.0210, -0.0228],
        [-0.0063, -0.0209, -0.0217,  ..., -0.0410, -0.0355,  0.0030],
        [-0.0049, -0.0112, -0.0032,  ..., -0.0008, -0.0057, -0.0021],
        ...,
        [ 0.0071, -0.0180,  0.0140,  ..., -0.0275, -0.0205,  0.0285],
        [ 0.0111,  0.0003, -0.0229,  ..., -0.0067,  0.0042,  0.0065],
        [-0.0032, -0.0013, -0.0397,  ...,  0.0257,  0.0355, -0.0079]], device='cuda:0', requires_grad=True)
Q: tensor([-0.2734,  0.1475, -0.3652,  0.0884,  0.7891, -0.3555, -0.0405,  0.0118,  0.5859, -0.6016, -1.4531,  0.0835, -0.2441,  0.2441,  0.5820,  0.3809,  0.3691,  0.3984, -0.0254, -0.6562, -0.6953, -0.4961, -0.5977, -0.5547,  0.5586, -0.0097,  0.2295,  0.1416,  0.3789,  0.3906,  0.2734,  0.0845,
        -0.5508,  0.7227,  0.8438, -0.0586,  0.4785, -0.7031, -0.0693,  0.1719, -0.3398,  0.4473,  0.0425, -1.0312,  1.2500,  0.0432,  0.8047, -0.7578, -0.2715,  0.1621,  0.5273, -0.6055, -0.8242, -0.2314, -0.4160, -0.0101, -0.0349,  0.6172, -0.3418,  0.6094, -0.2383, -0.2061,  0.5508, -0.3906],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.1250,  0.1631,  0.3027, -0.0874,  0.2412,  0.2227,  0.0845, -0.3965,  0.2461,  0.1719,  0.1240,  0.1416, -0.0688, -0.1826],
        [ 0.0000, -0.0303,  0.0518, -0.0228, -0.0767, -0.1143,  0.3848,  0.2988, -0.2256, -0.0361,  0.0806, -0.2891,  0.1934, -0.0352, -0.3809],
        [ 0.0000, -0.1016, -0.1187,  0.1768, -0.0334, -0.1406,  0.3105,  0.1885, -0.1064, -0.1494, -0.1611,  0.0159,  0.1797, -0.3496, -0.3477],
        [ 0.0000, -0.0608,  0.2383,  0.4727, -0.3438, -0.1245,  0.2441, -0.1035, -0.0640,  0.0762,  0.5898, -0.0806,  0.3066,  0.1050, -0.0332],
        [ 0.0000,  0.0908,  0.1084,  0.2256, -0.4102,  0.0266, -0.1196,  0.0713,  0.1250,  0.0942,  0.0332, -0.3789, -0.1426,  0.0203, -0.2188],
        [ 0.0000, -0.1064, -0.3086,  0.4414, -0.0654, -0.1729,  0.2578,  0.1309, -0.3906,  0.2383,  0.2314,  0.2578, -0.0527, -0.3574, -0.2715],
        [ 0.0000, -0.4297, -0.2021,  0.0023, -0.0063, -0.5469,  0.2344, -0.3145, -0.1406, -0.1992, -0.0442, -0.0349,  0.4766, -0.2734, -0.1001],
        [ 0.0000, -0.5508, -0.6250, -0.1060, -0.2891, -0.9023, -0.1875, -0.3574, -0.1426, -0.6211,  0.1631, -0.3809, -0.1104, -0.4121, -0.6055],
        [ 0.0000, -0.1133, -0.0361, -0.0552, -0.0737, -0.3789,  0.1709,  0.3340,  0.0165, -0.0190, -0.2910, -0.1147,  0.1299, -0.0142, -0.0967],
        [ 0.0000, -0.3730, -0.3789,  0.1157, -0.4160,  0.0403, -0.0044,  0.2949,  0.1670, -0.0957,  0.1797, -0.4473,  0.0189, -0.1953, -0.2656],
        [ 0.0000, -0.1523, -0.2041, -0.1982, -0.2070, -0.6602, -0.1943, -0.0381, -0.5820, -0.3926, -0.1138, -0.0742, -0.1235, -0.4570, -0.4355],
        [ 0.0000, -0.3281, -0.5547, -0.0339, -0.1807, -0.6016, -0.2012, -0.0635, -0.6211, -0.7070, -0.1631, -0.2334, -0.4434, -0.5156, -0.6328],
        [ 0.0000, -0.5547, -0.0231, -0.1328, -0.3340, -0.3105,  0.1924, -0.3945, -0.1582, -0.1152,  0.4121,  0.2080,  0.1230, -0.4375, -0.1641],
        [ 0.0000, -0.6992, -0.3926, -0.6094, -0.1001, -0.6016, -0.1611, -0.5898, -0.3086, -0.6602, -0.0718, -0.1719,  0.0942, -0.5156, -0.2656]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5037],
        [0.3199],
        [0.2376],
        [0.1858],
        [0.1584],
        [0.1400],
        [0.1215],
        [0.1108],
        [0.0962],
        [0.0863],
        [0.0840],
        [0.0759],
        [0.0663],
        [0.0671]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(uled:0.0002uled:0.0002 Ward:0.0002 enlisted:0.0002 Notably:0.0002 CST:0.0002 ultimately:0.0002CL:0.0002)
CL
------
		(uled:0.0002 Ward:0.0002 enlisted:0.0002 Notably:0.0002 CST:0.0002 ultimately:0.0002CL:0.0002 calendar:0.0002)
 calendar Drive executionsapultsteen ultimately function fanbase stained Lodlarge ultimatelybugvenientatibility
@ 1 train 10.9556 , allloss: 448.5587, dt: 1910.78ms, fracRes: 0.0062, norm(attn): 0.0330, norm(output): 0.9997, norm(x): 0.9937, norm(y): 1.0001, norm:230.1725, tok/sec: 68596.15, flops:72.00, batch-reuse:1
@ 2 train 10.9340 , allloss: 447.5144, dt: 1266.62ms, fracRes: 0.0062, norm(attn): 0.0332, norm(output): 0.9997, norm(x): 0.9937, norm(y): 1.0001, norm:233.3764, tok/sec: 103481.95, flops:108.62, batch-reuse:1
@ 3 train 10.9063 , allloss: 445.8511, dt: 1243.54ms, fracRes: 0.0062, norm(attn): 0.0332, norm(output): 0.9997, norm(x): 0.9937, norm(y): 1.0001, norm:238.5301, tok/sec: 105402.17, flops:110.63, batch-reuse:1
@ 4 train 10.8737 , allloss: 443.5738, dt: 1246.32ms, fracRes: 0.0062, norm(attn): 0.0342, norm(output): 0.9997, norm(x): 0.9937, norm(y): 1.0001, norm:246.0100, tok/sec: 105167.01, flops:110.39, batch-reuse:1
@ 5 train 10.8266 , allloss: 440.5759, dt: 1257.15ms, fracRes: 0.0062, norm(attn): 0.0349, norm(output): 0.9997, norm(x): 0.9937, norm(y): 1.0001, norm:256.1199, tok/sec: 104261.47, flops:109.44, batch-reuse:1
@ 6 train 10.7649 , allloss: 436.7653, dt: 1259.37ms, fracRes: 0.0062, norm(attn): 0.0354, norm(output): 0.9997, norm(x): 0.9937, norm(y): 1.0001, norm:269.5406, tok/sec: 104077.31, flops:109.24, batch-reuse:1
@ 7 train 10.7082 , allloss: 432.2468, dt: 1257.14ms, fracRes: 0.0062, norm(attn): 0.0366, norm(output): 0.9997, norm(x): 0.9937, norm(y): 1.0001, norm:285.7583, tok/sec: 104261.67, flops:109.44, batch-reuse:1
@ 8 train 10.6485 , allloss: 426.7489, dt: 1255.16ms, fracRes: 0.0062, norm(attn): 0.0376, norm(output): 0.9998, norm(x): 0.9937, norm(y): 1.0001, norm:304.7744, tok/sec: 104426.24, flops:109.61, batch-reuse:1
@ 9 train 10.5783 , allloss: 420.2532, dt: 1248.77ms, fracRes: 0.0063, norm(attn): 0.0391, norm(output): 0.9998, norm(x): 0.9938, norm(y): 1.0001, norm:326.0736, tok/sec: 104961.20, flops:110.17, batch-reuse:1
@ 10 train 10.5124 , allloss: 412.7121, dt: 1262.13ms, fracRes: 0.0063, norm(attn): 0.0396, norm(output): 0.9998, norm(x): 0.9938, norm(y): 1.0001, norm:348.3549, tok/sec: 103849.76, flops:109.00, batch-reuse:1
@ 11 train 10.4738 , allloss: 404.0670, dt: 1280.10ms, fracRes: 0.0063, norm(attn): 0.0415, norm(output): 0.9998, norm(x): 0.9938, norm(y): 1.0001, norm:370.0382, tok/sec: 102392.34, flops:107.47, batch-reuse:1
@ 12 train 10.3928 , allloss: 394.1958, dt: 1260.30ms, fracRes: 0.0063, norm(attn): 0.0427, norm(output): 0.9998, norm(x): 0.9938, norm(y): 1.0001, norm:390.3436, tok/sec: 104000.48, flops:109.16, batch-reuse:1
@ 13 train 10.3471 , allloss: 383.2122, dt: 1256.27ms, fracRes: 0.0063, norm(attn): 0.0437, norm(output): 0.9998, norm(x): 0.9938, norm(y): 1.0002, norm:407.8104, tok/sec: 104334.48, flops:109.51, batch-reuse:1
@ 14 train 10.2907 , allloss: 371.0555, dt: 1246.24ms, fracRes: 0.0063, norm(attn): 0.0454, norm(output): 0.9999, norm(x): 0.9938, norm(y): 1.0002, norm:422.5738, tok/sec: 105174.13, flops:110.39, batch-reuse:1
@ 15 train 10.2534 , allloss: 357.9175, dt: 1265.58ms, fracRes: 0.0063, norm(attn): 0.0466, norm(output): 0.9999, norm(x): 0.9938, norm(y): 1.0002, norm:433.7756, tok/sec: 103567.14, flops:108.71, batch-reuse:1
@ 16 train 10.2056 , allloss: 344.0707, dt: 1282.98ms, fracRes: 0.0063, norm(attn): 0.0471, norm(output): 0.9999, norm(x): 0.9938, norm(y): 1.0002, norm:441.4341, tok/sec: 102161.87, flops:107.23, batch-reuse:1
@ 17 train 10.1595 , allloss: 329.5034, dt: 1265.19ms, fracRes: 0.0063, norm(attn): 0.0471, norm(output): 0.9999, norm(x): 0.9938, norm(y): 1.0002, norm:446.0281, tok/sec: 103598.62, flops:108.74, batch-reuse:1
@ 18 train 10.1260 , allloss: 314.6294, dt: 1280.40ms, fracRes: 0.0064, norm(attn): 0.0483, norm(output): 0.9999, norm(x): 0.9938, norm(y): 1.0002, norm:447.4455, tok/sec: 102367.84, flops:107.45, batch-reuse:1
@ 19 train 10.0774 , allloss: 299.4399, dt: 1294.09ms, fracRes: 0.0064, norm(attn): 0.0498, norm(output): 0.9999, norm(x): 0.9938, norm(y): 1.0002, norm:446.0691, tok/sec: 101285.11, flops:106.31, batch-reuse:1
@ 20 train 10.0214 , allloss: 284.1850, dt: 1277.92ms, fracRes: 0.0064, norm(attn): 0.0505, norm(output): 0.9999, norm(x): 0.9938, norm(y): 1.0002, norm:442.4510, tok/sec: 102567.03, flops:107.66, batch-reuse:1
@ 21 train 9.9825 , allloss: 269.0432, dt: 1298.27ms, fracRes: 0.0064, norm(attn): 0.0505, norm(output): 1.0000, norm(x): 0.9938, norm(y): 1.0002, norm:436.6902, tok/sec: 100959.23, flops:105.97, batch-reuse:1
@ 22 train 9.9646 , allloss: 254.0746, dt: 1298.13ms, fracRes: 0.0064, norm(attn): 0.0510, norm(output): 1.0000, norm(x): 0.9938, norm(y): 1.0002, norm:429.4803, tok/sec: 100969.65, flops:105.98, batch-reuse:1
@ 23 train 9.9551 , allloss: 239.4536, dt: 1254.22ms, fracRes: 0.0064, norm(attn): 0.0510, norm(output): 1.0000, norm(x): 0.9938, norm(y): 1.0002, norm:420.9881, tok/sec: 104504.81, flops:109.69, batch-reuse:1
@ 24 train 9.9471 , allloss: 225.2906, dt: 1271.65ms, fracRes: 0.0064, norm(attn): 0.0518, norm(output): 1.0000, norm(x): 0.9938, norm(y): 1.0002, norm:411.5970, tok/sec: 103072.15, flops:108.19, batch-reuse:1
@ 25 train 9.8341 , allloss: 211.4137, dt: 1275.14ms, fracRes: 0.0064, norm(attn): 0.0522, norm(output): 1.0000, norm(x): 0.9938, norm(y): 1.0002, norm:401.5812, tok/sec: 102790.05, flops:107.89, batch-reuse:1
@ 26 train 9.8483 , allloss: 198.3563, dt: 1272.78ms, fracRes: 0.0065, norm(attn): 0.0537, norm(output): 1.0000, norm(x): 0.9938, norm(y): 1.0002, norm:390.8394, tok/sec: 102980.92, flops:108.09, batch-reuse:1
@ 27 train 9.8226 , allloss: 185.7440, dt: 1282.78ms, fracRes: 0.0065, norm(attn): 0.0537, norm(output): 1.0000, norm(x): 0.9938, norm(y): 1.0002, norm:379.9647, tok/sec: 102178.07, flops:107.25, batch-reuse:1
@ 28 train 9.8005 , allloss: 173.9076, dt: 1295.26ms, fracRes: 0.0065, norm(attn): 0.0537, norm(output): 1.0000, norm(x): 0.9938, norm(y): 1.0002, norm:368.8631, tok/sec: 101193.92, flops:106.22, batch-reuse:1
@ 29 train 9.7815 , allloss: 162.9060, dt: 1308.92ms, fracRes: 0.0065, norm(attn): 0.0542, norm(output): 1.0000, norm(x): 0.9938, norm(y): 1.0002, norm:357.6652, tok/sec: 100137.87, flops:105.11, batch-reuse:1
@ 30 train 9.7324 , allloss: 152.7348, dt: 1292.09ms, fracRes: 0.0065, norm(attn): 0.0544, norm(output): 1.0001, norm(x): 0.9938, norm(y): 1.0002, norm:346.5820, tok/sec: 101441.89, flops:106.48, batch-reuse:1
@ 31 train 9.7336 , allloss: 143.4904, dt: 1269.11ms, fracRes: 0.0065, norm(attn): 0.0544, norm(output): 1.0001, norm(x): 0.9938, norm(y): 1.0002, norm:335.8512, tok/sec: 103278.64, flops:108.40, batch-reuse:1
@ 32 train 9.6994 , allloss: 135.2751, dt: 1283.73ms, fracRes: 0.0066, norm(attn): 0.0547, norm(output): 1.0001, norm(x): 0.9938, norm(y): 1.0002, norm:325.4689, tok/sec: 102102.46, flops:107.17, batch-reuse:1
@ 33 train 9.6342 , allloss: 128.0327, dt: 1309.22ms, fracRes: 0.0066, norm(attn): 0.0549, norm(output): 1.0001, norm(x): 0.9938, norm(y): 1.0002, norm:315.7974, tok/sec: 100114.35, flops:105.08, batch-reuse:1
@ 34 train 9.6437 , allloss: 121.8281, dt: 1275.91ms, fracRes: 0.0066, norm(attn): 0.0549, norm(output): 1.0001, norm(x): 0.9938, norm(y): 1.0003, norm:306.6697, tok/sec: 102727.93, flops:107.83, batch-reuse:1
@ 35 train 9.6418 , allloss: 116.5346, dt: 1269.34ms, fracRes: 0.0066, norm(attn): 0.0549, norm(output): 1.0001, norm(x): 0.9938, norm(y): 1.0003, norm:298.5096, tok/sec: 103259.80, flops:108.38, batch-reuse:1
@ 36 train 9.6063 , allloss: 112.1293, dt: 1297.28ms, fracRes: 0.0066, norm(attn): 0.0549, norm(output): 1.0001, norm(x): 0.9938, norm(y): 1.0003, norm:290.6594, tok/sec: 101036.34, flops:106.05, batch-reuse:1
@ 37 train 9.5973 , allloss: 108.4873, dt: 1279.83ms, fracRes: 0.0067, norm(attn): 0.0549, norm(output): 1.0001, norm(x): 0.9938, norm(y): 1.0003, norm:283.3616, tok/sec: 102413.79, flops:107.50, batch-reuse:1
@ 38 train 9.5725 , allloss: 105.4147, dt: 1286.61ms, fracRes: 0.0067, norm(attn): 0.0557, norm(output): 1.0001, norm(x): 0.9938, norm(y): 1.0003, norm:276.4417, tok/sec: 101874.08, flops:106.93, batch-reuse:1
@ 39 train 9.5616 , allloss: 102.8589, dt: 1271.72ms, fracRes: 0.0067, norm(attn): 0.0557, norm(output): 1.0001, norm(x): 0.9937, norm(y): 1.0003, norm:269.6840, tok/sec: 103066.76, flops:108.18, batch-reuse:1
@ 40 train 9.5141 , allloss: 100.6557, dt: 1263.55ms, fracRes: 0.0067, norm(attn): 0.0557, norm(output): 1.0001, norm(x): 0.9937, norm(y): 1.0003, norm:263.0054, tok/sec: 103733.11, flops:108.88, batch-reuse:1
@ 41 train 9.5007 , allloss: 98.7982, dt: 1290.41ms, fracRes: 0.0068, norm(attn): 0.0557, norm(output): 1.0001, norm(x): 0.9937, norm(y): 1.0003, norm:256.4979, tok/sec: 101574.25, flops:106.62, batch-reuse:1
@ 42 train 9.4971 , allloss: 97.0827, dt: 1276.45ms, fracRes: 0.0068, norm(attn): 0.0557, norm(output): 1.0001, norm(x): 0.9937, norm(y): 1.0003, norm:250.0989, tok/sec: 102685.18, flops:107.78, batch-reuse:1
@ 43 train 9.4956 , allloss: 95.5894, dt: 1277.84ms, fracRes: 0.0068, norm(attn): 0.0562, norm(output): 1.0001, norm(x): 0.9937, norm(y): 1.0003, norm:243.7776, tok/sec: 102573.04, flops:107.66, batch-reuse:1
@ 44 train 9.4960 , allloss: 94.1568, dt: 1264.99ms, fracRes: 0.0068, norm(attn): 0.0576, norm(output): 1.0001, norm(x): 0.9937, norm(y): 1.0003, norm:237.5608, tok/sec: 103614.69, flops:108.76, batch-reuse:1
@ 45 train 9.4640 , allloss: 92.7510, dt: 1265.84ms, fracRes: 0.0069, norm(attn): 0.0576, norm(output): 1.0001, norm(x): 0.9937, norm(y): 1.0003, norm:231.5215, tok/sec: 103545.64, flops:108.68, batch-reuse:1
@ 46 train 9.4447 , allloss: 91.3288, dt: 1295.39ms, fracRes: 0.0069, norm(attn): 0.0576, norm(output): 1.0001, norm(x): 0.9937, norm(y): 1.0003, norm:225.6141, tok/sec: 101183.36, flops:106.21, batch-reuse:1
@ 47 train 9.4029 , allloss: 89.9618, dt: 1286.04ms, fracRes: 0.0069, norm(attn): 0.0576, norm(output): 1.0001, norm(x): 0.9937, norm(y): 1.0003, norm:219.8577, tok/sec: 101918.78, flops:106.98, batch-reuse:1
@ 48 train 9.3987 , allloss: 88.6192, dt: 1279.36ms, fracRes: 0.0069, norm(attn): 0.0583, norm(output): 1.0001, norm(x): 0.9937, norm(y): 1.0003, norm:214.2617, tok/sec: 102451.32, flops:107.54, batch-reuse:1
@ 49 train 9.3972 , allloss: 87.3210, dt: 1295.08ms, fracRes: 0.0069, norm(attn): 0.0583, norm(output): 1.0001, norm(x): 0.9937, norm(y): 1.0003, norm:208.8971, tok/sec: 101207.80, flops:106.23, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5938, 0.4062, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2578, 0.4453, 0.2988, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2236, 0.2676, 0.3145, 0.1934, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2168, 0.2031, 0.1846, 0.2275, 0.1680, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1768, 0.1211, 0.2314, 0.1128, 0.1592, 0.1982, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1279, 0.1367, 0.1611, 0.1963, 0.1006, 0.0986, 0.1777, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1162, 0.1260, 0.0938, 0.1768, 0.0967, 0.2227, 0.0928, 0.0752, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1226, 0.1035, 0.0825, 0.1436, 0.0767, 0.1216, 0.1367, 0.1216, 0.0913, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0840, 0.1079, 0.1250, 0.0801, 0.1104, 0.1006, 0.0767, 0.1318, 0.1279, 0.0552, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1064, 0.0791, 0.0635, 0.0850, 0.0703, 0.1157, 0.0923, 0.1030, 0.0962, 0.0767, 0.1118, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0898, 0.0674, 0.0698, 0.0698, 0.0718, 0.1133, 0.0576, 0.0605, 0.1050, 0.0864, 0.1128, 0.0957, 0.0000, 0.0000, 0.0000],
        [0.0825, 0.0752, 0.0859, 0.0623, 0.0840, 0.0835, 0.0664, 0.0520, 0.0654, 0.0830, 0.1060, 0.0894, 0.0645, 0.0000, 0.0000],
        [0.0713, 0.0664, 0.0684, 0.0581, 0.0830, 0.0728, 0.0840, 0.0532, 0.0718, 0.0598, 0.0554, 0.1084, 0.0679, 0.0801, 0.0000],
        [0.0688, 0.0659, 0.0771, 0.0713, 0.0544, 0.0598, 0.0654, 0.0693, 0.0713, 0.0728, 0.0806, 0.0483, 0.0688, 0.0457, 0.0796]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0251,  0.0008, -0.0269,  ..., -0.0187,  0.0129,  0.0003],
        [-0.0027,  0.0334,  0.0032,  ..., -0.0289,  0.0167,  0.0182],
        [-0.0386,  0.0019,  0.0178,  ..., -0.0224, -0.0111,  0.0126],
        ...,
        [ 0.0337,  0.0037,  0.0085,  ..., -0.0125,  0.0195,  0.0195],
        [-0.0117,  0.0111,  0.0208,  ..., -0.0290,  0.0165,  0.0160],
        [ 0.0217,  0.0106,  0.0154,  ..., -0.0050,  0.0014, -0.0105]], device='cuda:0', requires_grad=True)
K: tensor([ 0.2559,  0.6016, -0.2412,  0.2695, -0.2559, -0.7461, -0.1045, -0.7461, -0.3281,  0.2109, -0.0476,  0.0444,  0.2617,  0.5352,  0.3477,  0.6562, -0.5898,  0.6289,  0.3398,  1.3594,  0.4102,  0.6328,  0.8047, -0.5977,  1.3047, -0.3066,  0.6211, -0.3340,  0.4199, -0.5234, -0.1602,  0.3691,
         0.5586, -0.1279,  1.0000,  0.2852, -1.0156,  1.2812,  0.0049, -0.2617,  0.0422, -0.1289, -0.1162, -0.2852,  0.6328, -0.4141, -0.2793, -0.2158,  0.4902,  0.8633,  0.0400, -0.6719,  0.2354, -0.4102, -0.1699, -0.6680, -0.2432,  0.8750, -0.0688, -0.8594, -0.3457,  0.8125,  0.1660,  0.1768],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0127,  0.0019,  0.0257,  ..., -0.0013,  0.0114, -0.0068],
        [-0.0022, -0.0092,  0.0063,  ...,  0.0516,  0.0138,  0.0341],
        [-0.0128, -0.0163, -0.0024,  ..., -0.0332, -0.0417,  0.0233],
        ...,
        [ 0.0171,  0.0259,  0.0071,  ..., -0.0162, -0.0053,  0.0050],
        [ 0.0043,  0.0041, -0.0193,  ...,  0.0317,  0.0045,  0.0370],
        [ 0.0087,  0.0044,  0.0156,  ...,  0.0088, -0.0124,  0.0052]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.2637,  0.3105, -0.4727, -0.3730,  0.3281, -0.2832,  0.0947, -0.8203, -0.8086,  0.1592,  0.3184, -0.4824, -1.1094, -0.0518,  0.1953,  0.1074,  0.8242,  0.0452, -0.4492,  0.6172, -0.4570, -0.1934, -0.8320, -0.4355,  0.1758, -0.5781,  0.4414,  1.3750,  0.3008, -1.0781,  0.0535,  0.5586,
         0.5820, -0.2402,  0.1143,  0.2236, -0.2324, -0.5547,  0.0918, -0.2158, -0.3398, -0.3203, -0.1924,  0.3242, -0.2520, -0.6211,  0.0182, -0.7734,  0.4395,  0.0669, -0.8750,  0.0762, -0.3965, -0.6875,  0.3867, -0.7656,  0.0542, -0.2578,  0.0518,  1.5391,  0.6367, -0.1216,  0.2002,  0.8594],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.3770, -0.2246,  0.3594, -0.4434,  0.2812,  0.2754,  0.1240, -0.0613,  0.0359, -0.3887, -0.0576, -0.1030, -0.2949,  0.0211],
        [ 0.0000,  0.5469,  0.1455, -0.1221,  0.1279, -0.1670, -0.0393, -0.0354,  0.4727,  0.0498,  0.0055,  0.1377,  0.2119,  0.1475, -0.2832],
        [ 0.0000,  0.1768,  0.3438, -0.1436, -0.2246,  0.3047,  0.2129,  0.0016,  0.5039,  0.2656,  0.3203,  0.0942,  0.2207,  0.4707,  0.2930],
        [ 0.0000, -0.0645, -0.1602,  0.0488, -0.2559, -0.4395,  0.3633,  0.1787, -0.0554,  0.0737, -0.0557, -0.3047,  0.1040, -0.6133, -0.5977],
        [ 0.0000, -0.3770,  0.2715, -0.4473, -0.1055,  0.1172, -0.1377, -0.1875, -0.4434,  0.2383,  0.1709,  0.1143, -0.0187, -0.2227, -0.2578],
        [ 0.0000,  0.0625,  0.2275,  0.4258, -0.2422, -0.2617,  0.3223, -0.0139,  0.5234,  0.3262, -0.1455, -0.0767, -0.0884, -0.0742, -0.2168],
        [ 0.0000,  0.0840, -0.2148,  0.4238, -0.1807,  0.6523, -0.2217, -0.4375, -0.1885,  0.1021, -0.4180,  0.2354,  0.2295, -0.0400, -0.0447],
        [ 0.0000, -0.1719, -0.3984,  0.1523, -0.4688, -0.0085,  0.1060, -0.0086, -0.2949, -0.5625, -0.7656,  0.2021, -0.0021, -0.2246,  0.1025],
        [ 0.0000,  0.2520,  0.3984, -0.0437,  0.2754,  0.1807, -0.0894,  0.4512,  0.4238, -0.4180,  0.1611, -0.3574, -0.4551,  0.2637, -0.4883],
        [ 0.0000, -0.2910, -0.5156, -0.2207, -0.4141,  0.0879, -0.1387, -0.0322, -0.1001, -0.3242,  0.0493, -0.2021,  0.0101, -0.2734, -0.3555],
        [ 0.0000, -0.2871, -0.2471, -0.2480, -0.2236,  0.2354, -0.4414, -0.3945,  0.1602, -0.0391,  0.2314,  0.0659, -0.0845,  0.0747, -0.0126],
        [ 0.0000, -0.0908,  0.0403, -0.2793,  0.0205,  0.0151, -0.2129, -0.4609, -0.2295,  0.0076,  0.2500,  0.0820, -0.2471, -0.1689, -0.0825],
        [ 0.0000, -0.0669, -0.0420, -0.2031,  0.1543,  0.0206,  0.1650, -0.2891,  0.0120, -0.1709, -0.2500,  0.4238, -0.0483,  0.1211, -0.1963],
        [ 0.0000, -0.0486,  0.1118,  0.0289, -0.2373, -0.1436, -0.0530,  0.0063,  0.0317,  0.0547,  0.1533, -0.3574, -0.0033, -0.4141,  0.1445]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5055],
        [0.3168],
        [0.2598],
        [0.1974],
        [0.1687],
        [0.1453],
        [0.1191],
        [0.1070],
        [0.1025],
        [0.0924],
        [0.0797],
        [0.0729],
        [0.0669],
        [0.0648]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4199, 0.5781, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2734, 0.4414, 0.2832, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2041, 0.3125, 0.2041, 0.2793, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2871, 0.1904, 0.1465, 0.2021, 0.1729, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1289, 0.1885, 0.1191, 0.1758, 0.1484, 0.2393, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1523, 0.1963, 0.0742, 0.1611, 0.1475, 0.1621, 0.1069, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1123, 0.1885, 0.0684, 0.1621, 0.1484, 0.1270, 0.0933, 0.0996, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1279, 0.1250, 0.0547, 0.1475, 0.1367, 0.1191, 0.0923, 0.0781, 0.1187, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0845, 0.1631, 0.0845, 0.1299, 0.1040, 0.1211, 0.0732, 0.0610, 0.1138, 0.0649, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0835, 0.0889, 0.0635, 0.1050, 0.0786, 0.1226, 0.0820, 0.0718, 0.1128, 0.0618, 0.1299, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0688, 0.0942, 0.0781, 0.0894, 0.0669, 0.1211, 0.0669, 0.0654, 0.0806, 0.0742, 0.1133, 0.0811, 0.0000, 0.0000, 0.0000],
        [0.0603, 0.0723, 0.0623, 0.0815, 0.0664, 0.1025, 0.0889, 0.0615, 0.0786, 0.0693, 0.0938, 0.0825, 0.0806, 0.0000, 0.0000],
        [0.0674, 0.0835, 0.0461, 0.0879, 0.0874, 0.0859, 0.0598, 0.0505, 0.0688, 0.0767, 0.0688, 0.0752, 0.0747, 0.0674, 0.0000],
        [0.0557, 0.0962, 0.0474, 0.0889, 0.0806, 0.0742, 0.0596, 0.0383, 0.0588, 0.0483, 0.0781, 0.0811, 0.0659, 0.0630, 0.0649]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0182,  0.0333, -0.0029,  ..., -0.0022, -0.0048,  0.0264],
        [ 0.0167,  0.0115,  0.0515,  ..., -0.0297,  0.0071,  0.0475],
        [-0.0122,  0.0218, -0.0075,  ...,  0.0040,  0.0016,  0.0046],
        ...,
        [ 0.0478, -0.0057,  0.0026,  ..., -0.0070,  0.0005, -0.0006],
        [-0.0132,  0.0256,  0.0075,  ..., -0.0099, -0.0136,  0.0111],
        [-0.0010, -0.0076,  0.0148,  ..., -0.0055, -0.0089,  0.0258]], device='cuda:0', requires_grad=True)
K: tensor([     0.0796,     -0.9609,      0.0481,      0.0513,     -0.2158,     -0.2500,      0.7617,      0.4297,     -0.0001,      0.0806,      1.3594,     -0.1318,      0.0099,      0.5547,      1.7266,     -0.9570,     -0.2949,     -0.8633,      0.2324,     -0.8828,      1.1250,     -0.6680,
            -0.0776,      0.1973,     -0.0757,     -0.8242,      0.9961,     -0.2988,     -0.1064,      0.6328,     -0.6719,     -1.1250,     -0.5391,      0.0815,      0.1299,      0.0374,     -0.3086,      0.5352,      0.6875,     -0.8555,      0.0889,     -0.8516,     -0.2236,      0.0064,
            -0.5508,     -1.2344,      0.1318,      1.0938,      0.4258,     -0.6172,      0.8828,      0.1045,      0.7734,     -0.3105,     -0.4414,      1.0312,     -0.6602,     -0.7852,      0.8711,      0.4531,     -0.2471,      0.9727,     -0.2793,      1.0234], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[-0.0156,  0.0294, -0.0268,  ...,  0.0232,  0.0129, -0.0233],
        [-0.0012,  0.0064,  0.0316,  ..., -0.0022, -0.0004,  0.0210],
        [-0.0253, -0.0127,  0.0042,  ..., -0.0351,  0.0217,  0.0235],
        ...,
        [-0.0325,  0.0161, -0.0083,  ..., -0.0031,  0.0057,  0.0368],
        [ 0.0076, -0.0154, -0.0169,  ...,  0.0144,  0.0220, -0.0046],
        [-0.0362,  0.0026, -0.0127,  ...,  0.0319, -0.0208,  0.0237]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.9844, -0.0918,  0.8945,  0.7031,  1.1094, -0.4082, -0.3965, -0.4805,  0.9102,  0.5273,  0.1572,  0.1406, -0.8906,  0.1953, -0.8711,  0.5273,  0.5664, -0.4258,  0.2490,  0.7344,  0.6172, -0.5391, -0.5742,  0.2949,  0.5508, -0.6602, -0.3945,  0.4258,  1.3125, -0.3965,  0.8828, -0.8633,
        -0.7812, -0.8125, -0.4531,  0.5430,  1.0703,  1.0000,  0.3574,  0.6016, -0.1377,  0.8867, -1.1875, -0.8750, -0.3789,  0.5430,  0.6875, -0.3984,  1.0625, -0.6406,  0.4336, -0.1196, -0.2754,  0.3359, -0.4863,  0.9883, -0.5039, -0.7617, -0.0620, -0.8750, -0.8555, -0.1895, -0.7305,  0.7500],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.3203,     -0.4453,      0.3340,      0.5469,      0.2812,      0.2676,     -0.1465,      0.0562,     -0.2422,      0.5156,      0.3398,      0.1572,     -0.2432,      0.2676],
        [     0.0000,      0.4766,      0.0344,      0.3184,     -0.1011,      0.3184,     -0.1406,     -0.3086,      0.0217,     -0.2773,     -0.0009,      0.0278,     -0.1748,     -0.1089,      0.1016],
        [     0.0000,      0.4258,     -0.0023,      0.3105,      0.3281,      0.8008,      0.3594,      0.4902,      0.8008,      0.2422,      0.6602,      0.5156,      0.4082,      0.8125,      0.5586],
        [     0.0000,     -0.4160,     -0.6719,     -0.3555,     -0.5078,     -0.4902,     -0.2598,     -0.2949,     -0.6133,     -0.5312,     -0.2002,     -0.1748,     -0.1533,     -0.5117,     -0.6875],
        [     0.0000,      0.3828,     -0.0762,      0.3086,      0.1416,      0.6211,      0.1309,     -0.1562,     -0.0280,     -0.0359,      0.0262,      0.0058,     -0.1533,      0.0118,     -0.1084],
        [     0.0000,      0.2539,     -0.7188,      0.0557,     -0.0305,      0.0654,     -0.3496,     -0.2109,     -0.0466,     -0.4473,     -0.0496,     -0.0659,      0.0030,     -0.1465,     -0.3262],
        [     0.0000,      0.5156,     -0.4980,      0.3672,      0.2793,      0.1250,     -0.1846,     -0.1221,      0.3262,     -0.3945,      0.1572,      0.0160,      0.2158,     -0.2227,      0.0028],
        [     0.0000,     -0.0194,     -0.8438,      0.1455,      0.0732,     -0.0679,     -0.3223,     -0.4922,     -0.0723,     -0.1904,      0.1553,      0.2363,     -0.4277,     -0.2637,     -0.1602],
        [     0.0000,      0.6562,     -0.0007,      0.4297,      0.2080,      0.3613,     -0.1406,     -0.3242,      0.2988,     -0.2656,      0.2695,      0.0566,      0.0437,      0.0757,      0.1807],
        [     0.0000,      0.0659,     -0.2695,      0.2305,     -0.0608,      0.3848,     -0.0179,     -0.1475,      0.3027,     -0.3008,      0.4473,      0.2188,      0.0623,      0.2539,     -0.0586],
        [     0.0000,      0.3145,      0.1289,      0.2598,     -0.0282,      0.5664,     -0.0248,     -0.0464,      0.1562,      0.0776,      0.5000,      0.1670,      0.2754,      0.0198,      0.2441],
        [     0.0000,      0.1807,      0.0310,      0.3008,      0.0986,      0.5312,      0.3867,      0.0210,      0.2676,      0.1377,      0.4434,      0.3105,      0.2871,      0.2490,      0.1543],
        [     0.0000,      0.2139,     -0.3770,      0.2637,      0.2598,      0.2432,     -0.1196,     -0.2891,      0.0176,      0.1289,      0.0204,      0.1089,      0.1011,      0.0010,      0.1445],
        [     0.0000,      0.5469,     -0.1611,      0.4668,      0.3711,      0.2852,      0.0698,     -0.3750,      0.0547,     -0.1387,      0.3418,      0.3730,      0.1670,      0.1279,      0.1523]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5174],
        [0.3620],
        [0.2599],
        [0.2280],
        [0.1899],
        [0.1640],
        [0.1366],
        [0.1229],
        [0.1085],
        [0.0983],
        [0.0842],
        [0.0872],
        [0.0754],
        [0.0771]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5586, 0.4414, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3047, 0.3711, 0.3242, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2217, 0.2734, 0.2559, 0.2490, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2295, 0.1748, 0.1875, 0.2129, 0.1953, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1621, 0.1377, 0.1543, 0.1602, 0.1504, 0.2354, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1152, 0.1357, 0.1426, 0.1396, 0.1191, 0.1855, 0.1621, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1064, 0.1201, 0.1177, 0.1064, 0.1084, 0.1719, 0.1367, 0.1318, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0815, 0.1128, 0.0957, 0.1108, 0.1001, 0.1328, 0.1240, 0.1025, 0.1396, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0811, 0.0957, 0.0938, 0.0928, 0.0854, 0.1279, 0.1006, 0.1050, 0.1035, 0.1147, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0796, 0.0820, 0.0757, 0.0884, 0.0684, 0.1187, 0.0981, 0.0864, 0.0981, 0.1025, 0.1016, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0801, 0.0884, 0.0811, 0.0840, 0.0645, 0.1021, 0.0879, 0.0771, 0.0850, 0.0938, 0.0786, 0.0781, 0.0000, 0.0000, 0.0000],
        [0.0664, 0.0747, 0.0757, 0.0674, 0.0598, 0.0933, 0.0840, 0.0747, 0.0801, 0.1021, 0.0664, 0.0859, 0.0693, 0.0000, 0.0000],
        [0.0571, 0.0659, 0.0576, 0.0791, 0.0603, 0.0791, 0.0762, 0.0679, 0.0771, 0.0913, 0.0625, 0.0732, 0.0786, 0.0737, 0.0000],
        [0.0562, 0.0576, 0.0608, 0.0576, 0.0486, 0.0908, 0.0679, 0.0583, 0.0767, 0.0791, 0.0625, 0.0654, 0.0588, 0.0747, 0.0845]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0206,  0.0107,  0.0180,  ..., -0.0244, -0.0124,  0.0117],
        [-0.0158, -0.0134,  0.0144,  ..., -0.0080, -0.0214, -0.0054],
        [ 0.0374,  0.0180,  0.0061,  ...,  0.0070,  0.0702,  0.0048],
        ...,
        [ 0.0208, -0.0219, -0.0079,  ...,  0.0289,  0.0080, -0.0166],
        [-0.0296, -0.0346,  0.0158,  ...,  0.0237, -0.0193, -0.0156],
        [ 0.0240, -0.0184, -0.0438,  ...,  0.0424, -0.0033, -0.0086]], device='cuda:0', requires_grad=True)
K: tensor([-0.1416,  1.2578,  0.6562, -0.1533,  0.3262,  0.5469,  0.1533,  0.6953,  0.2773, -0.0815, -0.6094,  0.4727,  0.2275, -0.9414,  0.1934,  0.6367, -0.5352,  0.4199, -0.3477,  0.8477, -0.0732, -0.3418, -0.4023, -0.1074, -0.2324,  0.1758,  0.4277, -0.3438,  0.6641,  0.6367,  0.4238,  0.8047,
         1.0234,  0.2412, -0.3418, -1.1406, -0.9336,  0.1523, -0.1592,  0.2656,  0.1904, -0.4629, -0.2520, -0.0471,  0.0918, -0.8125, -0.0664, -0.2451, -1.2500, -1.3125, -0.0737, -0.7539,  0.5195, -0.4707,  0.1982,  0.0703,  0.2520, -0.9961,  0.0894, -0.8750, -0.4863,  0.3887,  0.6172, -0.1113],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0084, -0.0007,  0.0210,  ...,  0.0267,  0.0052,  0.0206],
        [ 0.0132,  0.0021,  0.0015,  ...,  0.0021, -0.0061, -0.0129],
        [-0.0110, -0.0268,  0.0101,  ..., -0.0073,  0.0421, -0.0003],
        ...,
        [-0.0356, -0.0126, -0.0351,  ...,  0.0004,  0.0394,  0.0047],
        [ 0.0088, -0.0056, -0.0347,  ...,  0.0228, -0.0135,  0.0069],
        [-0.0234, -0.0083,  0.0136,  ..., -0.0103, -0.0159,  0.0136]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.3945,  0.6523, -0.2676, -0.0552,  0.1357, -0.1982,  0.1982,  0.1572,  0.0786,  0.4590, -0.1992, -0.3027, -0.3672,  0.4043,  0.4863,  0.2734, -0.1943,  0.3184, -0.2949,  0.2100, -0.7266, -0.4883, -0.7812, -1.1719,  0.4160,  0.5547,  0.7734, -0.3340,  0.0464, -0.2812, -0.7812, -0.2197,
        -0.3301, -0.4629, -0.7773,  0.1758,  0.7891,  0.1064,  0.7578,  0.8828, -0.7578, -0.9805,  0.1406, -0.8828, -0.2891,  0.0908, -0.4844, -0.7500, -0.1348, -1.1641,  0.1807, -0.2266, -0.1250, -0.6562,  0.5977,  0.6016,  0.2598, -0.3398,  1.3125, -0.0292,  0.4961, -0.1172, -0.1787, -0.0933],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -0.2383,     -0.2910,     -0.0120,     -0.1514,      0.2422,     -0.0884,     -0.1338,      0.0574,      0.0693,     -0.1865,      0.0320,      0.0247,      0.1963,     -0.0147],
        [     0.0000,      0.1943,      0.0598,     -0.0601,     -0.0630,      0.3223,      0.1885,     -0.0047,      0.2168,      0.1377,      0.1201,      0.0654,      0.0598,      0.1797,      0.0854],
        [     0.0000,      0.2100,      0.1426,      0.1138,      0.2295,      0.5352,      0.4199,      0.1572,      0.4219,      0.4980,      0.2812,      0.2754,      0.2520,      0.4590,      0.3809],
        [     0.0000,     -0.2754,     -0.2041,     -0.0767,     -0.1650,      0.1553,     -0.0138,     -0.1016,      0.0908,      0.1982,     -0.0679,      0.2090,      0.0757,      0.0562,      0.0613],
        [     0.0000,     -0.1680,     -0.0513,     -0.0118,     -0.0767,      0.3711,      0.0830,     -0.1602,     -0.0708,      0.2266,      0.1147,      0.0825,      0.0047,      0.1069,      0.2139],
        [     0.0000,      0.1660,      0.2119,      0.1914,      0.0361,      0.4805,      0.3457,      0.3301,      0.2949,      0.3984,      0.2578,      0.4551,      0.3926,      0.3984,      0.3809],
        [     0.0000,      0.1191,      0.0996,     -0.0029,      0.0155,      0.4785,      0.2471,      0.2129,      0.0569,      0.2773,      0.1099,      0.2969,      0.1650,      0.1816,      0.3340],
        [     0.0000,      0.3203,      0.1592,      0.3027,      0.2021,      0.4824,      0.4180,      0.2246,      0.5391,      0.5469,      0.1992,      0.4531,      0.3906,      0.3965,      0.4570],
        [     0.0000,      0.1650,      0.1494,      0.1357,      0.0535,      0.4551,      0.2158,      0.2598,      0.2471,      0.3477,      0.1108,      0.3496,      0.2305,      0.2812,      0.3496],
        [     0.0000,      0.0277,     -0.0508,      0.1060,     -0.1514,      0.3965,      0.2070,      0.0815,      0.2090,      0.2539,      0.2432,      0.1182,      0.1699,      0.1875,      0.2520],
        [     0.0000,      0.1006,      0.0099,      0.0459,     -0.2148,      0.2412,      0.0928,     -0.0359,      0.0583,      0.1562,     -0.0200,     -0.0258,      0.0776,      0.1064,      0.1758],
        [     0.0000,      0.1182,      0.1299,      0.0100,     -0.1069,      0.3359,      0.2334,      0.1143,      0.1826,      0.4258,      0.0001,      0.2578,      0.0408,      0.0500,      0.2285],
        [     0.0000,      0.1426,      0.0060,      0.3262,      0.0503,      0.3262,      0.2871,      0.1709,      0.2969,      0.4648,      0.0874,      0.2490,      0.3203,      0.2500,      0.3691],
        [     0.0000,      0.0251,      0.0791,      0.0261,     -0.1436,      0.4805,      0.1895,      0.0374,      0.3066,      0.3438,      0.1079,      0.1514,      0.0471,      0.2832,      0.4082]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4959],
        [0.3197],
        [0.2365],
        [0.1831],
        [0.1599],
        [0.1236],
        [0.1174],
        [0.0981],
        [0.0908],
        [0.0809],
        [0.0746],
        [0.0677],
        [0.0661],
        [0.0602]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5195, 0.4805, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3477, 0.3477, 0.3047, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2637, 0.2734, 0.2363, 0.2275, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2148, 0.2266, 0.1924, 0.1846, 0.1816, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1816, 0.1943, 0.1641, 0.1562, 0.1543, 0.1494, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1582, 0.1709, 0.1436, 0.1357, 0.1338, 0.1299, 0.1279, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1396, 0.1514, 0.1270, 0.1206, 0.1187, 0.1152, 0.1138, 0.1133, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1270, 0.1377, 0.1143, 0.1079, 0.1060, 0.1030, 0.1021, 0.1011, 0.1011, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1152, 0.1260, 0.1040, 0.0981, 0.0962, 0.0938, 0.0923, 0.0918, 0.0918, 0.0913, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1050, 0.1152, 0.0952, 0.0898, 0.0884, 0.0859, 0.0850, 0.0840, 0.0845, 0.0835, 0.0835, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0972, 0.1069, 0.0884, 0.0830, 0.0815, 0.0791, 0.0781, 0.0776, 0.0776, 0.0771, 0.0767, 0.0767, 0.0000, 0.0000, 0.0000],
        [0.0898, 0.0996, 0.0820, 0.0771, 0.0757, 0.0732, 0.0728, 0.0723, 0.0723, 0.0718, 0.0713, 0.0713, 0.0713, 0.0000, 0.0000],
        [0.0840, 0.0933, 0.0767, 0.0723, 0.0708, 0.0684, 0.0679, 0.0674, 0.0674, 0.0669, 0.0664, 0.0664, 0.0664, 0.0664, 0.0000],
        [0.0791, 0.0874, 0.0718, 0.0674, 0.0664, 0.0645, 0.0635, 0.0630, 0.0630, 0.0625, 0.0625, 0.0625, 0.0625, 0.0623, 0.0620]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0357,  0.0171,  0.0139,  ...,  0.0163, -0.0287, -0.0335],
        [-0.0012,  0.0145,  0.0176,  ...,  0.0223, -0.0077,  0.0317],
        [ 0.0259,  0.0082, -0.0156,  ...,  0.0022,  0.0221, -0.0029],
        ...,
        [-0.0210, -0.0183, -0.0125,  ...,  0.0093, -0.0074,  0.0289],
        [-0.0012,  0.0134, -0.0013,  ..., -0.0076, -0.0195, -0.0288],
        [ 0.0183, -0.0105, -0.0094,  ...,  0.0154, -0.0054,  0.0002]], device='cuda:0', requires_grad=True)
K: tensor([-0.4883,  0.1245, -0.2949,  0.1416,  0.2305, -0.0265, -1.0000, -0.6016, -1.3438,  0.2461,  1.2422,  0.3926,  0.4609,  0.8086,  0.7734,  0.8555,  1.0391,  0.1494, -0.0864,  0.5312,  0.0134, -0.4980, -0.2500,  0.3770, -0.0454, -0.4492,  0.1211, -1.3828,  1.0078, -0.4531,  0.0957, -1.1719,
        -0.5078,  0.1001, -0.3926,  0.3555, -0.4395, -0.5547,  0.8828, -0.0221,  0.9766,  0.3164,  0.3457,  0.0339,  0.8320, -0.0347, -0.0361, -0.2949,  0.5586, -0.1084,  0.1240,  0.4336,  0.0053, -0.2500, -0.0879,  1.0469,  0.4668,  0.4180,  0.6211,  0.3301, -0.1924, -0.4258, -0.4492, -0.1318],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0314,  0.0252,  0.0041,  ...,  0.0125, -0.0101, -0.0182],
        [-0.0034,  0.0020,  0.0181,  ...,  0.0209, -0.0097,  0.0062],
        [ 0.0002,  0.0198,  0.0184,  ..., -0.0109,  0.0482,  0.0113],
        ...,
        [-0.0262,  0.0116, -0.0226,  ..., -0.0037,  0.0065, -0.0081],
        [-0.0471,  0.0165, -0.0141,  ..., -0.0071, -0.0158, -0.0383],
        [ 0.0016, -0.0167, -0.0380,  ..., -0.0096,  0.0184,  0.0303]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.2520,  0.1670, -0.3398, -0.0674, -0.8945, -0.0574,  0.5312,  0.7773,  0.2695, -0.1650,  0.6055, -0.1250, -0.6719,  0.2676, -0.3965,  0.8867, -0.4297,  0.8984,  0.8789, -0.5469, -0.2832,  0.4531,  0.1885, -1.1172, -0.5508, -0.2520, -0.4473, -0.1826,  0.4688, -1.2109, -0.2715,  0.4004,
        -0.6211, -0.7812,  0.1562,  0.5117, -0.6719,  0.5586, -0.6406,  0.0737, -0.0118, -0.1367, -0.5664, -0.3652, -0.6445, -0.2656,  0.3496,  0.8906, -0.5898, -0.6875, -0.2617,  0.4355, -0.1699,  0.3730, -0.4355,  0.1621, -0.9727,  0.1816,  0.2490,  0.4863, -0.4941, -0.2109, -0.3789, -0.8516],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.0767, -0.1445, -0.1416, -0.1465, -0.1533, -0.1582, -0.1641, -0.1582, -0.1660, -0.1680, -0.1719, -0.1680, -0.1719, -0.1777],
        [ 0.0000,  0.0007, -0.1279, -0.1533, -0.1631, -0.1846, -0.1943, -0.2012, -0.1992, -0.2080, -0.2100, -0.2119, -0.2109, -0.2148, -0.2207],
        [ 0.0000,  0.0383, -0.1089, -0.1465, -0.1592, -0.1855, -0.1973, -0.2041, -0.2031, -0.2119, -0.2148, -0.2158, -0.2158, -0.2188, -0.2256],
        [ 0.0000,  0.0554, -0.1069, -0.1514, -0.1660, -0.1934, -0.2051, -0.2119, -0.2109, -0.2197, -0.2217, -0.2227, -0.2227, -0.2256, -0.2324],
        [ 0.0000,  0.0674, -0.1006, -0.1484, -0.1631, -0.1924, -0.2041, -0.2109, -0.2100, -0.2178, -0.2207, -0.2207, -0.2207, -0.2236, -0.2305],
        [ 0.0000,  0.0786, -0.0972, -0.1484, -0.1660, -0.1953, -0.2070, -0.2148, -0.2139, -0.2217, -0.2246, -0.2256, -0.2256, -0.2285, -0.2344],
        [ 0.0000,  0.0835, -0.0942, -0.1465, -0.1631, -0.1924, -0.2041, -0.2109, -0.2100, -0.2178, -0.2207, -0.2207, -0.2207, -0.2236, -0.2295],
        [ 0.0000,  0.0835, -0.1030, -0.1582, -0.1758, -0.2061, -0.2178, -0.2246, -0.2246, -0.2314, -0.2344, -0.2344, -0.2344, -0.2373, -0.2432],
        [ 0.0000,  0.0859, -0.1030, -0.1592, -0.1777, -0.2080, -0.2207, -0.2275, -0.2266, -0.2344, -0.2373, -0.2373, -0.2373, -0.2402, -0.2461],
        [ 0.0000,  0.0898, -0.0991, -0.1562, -0.1738, -0.2041, -0.2168, -0.2227, -0.2227, -0.2295, -0.2324, -0.2324, -0.2324, -0.2354, -0.2412],
        [ 0.0000,  0.0972, -0.0972, -0.1562, -0.1758, -0.2061, -0.2188, -0.2256, -0.2246, -0.2324, -0.2354, -0.2354, -0.2354, -0.2373, -0.2432],
        [ 0.0000,  0.0986, -0.0957, -0.1543, -0.1738, -0.2041, -0.2168, -0.2227, -0.2227, -0.2295, -0.2324, -0.2324, -0.2324, -0.2354, -0.2412],
        [ 0.0000,  0.1055, -0.0923, -0.1523, -0.1729, -0.2031, -0.2158, -0.2227, -0.2217, -0.2295, -0.2324, -0.2324, -0.2324, -0.2344, -0.2402],
        [ 0.0000,  0.1040, -0.0942, -0.1553, -0.1748, -0.2061, -0.2178, -0.2246, -0.2236, -0.2314, -0.2344, -0.2344, -0.2344, -0.2363, -0.2422]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4868],
        [0.3197],
        [0.2401],
        [0.1926],
        [0.1617],
        [0.1391],
        [0.1224],
        [0.1091],
        [0.0987],
        [0.0899],
        [0.0825],
        [0.0764],
        [0.0712],
        [0.0664]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5000, 0.5000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3281, 0.3164, 0.3574, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2422, 0.2295, 0.2559, 0.2734, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1904, 0.1807, 0.1982, 0.2109, 0.2207, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1562, 0.1484, 0.1611, 0.1719, 0.1797, 0.1826, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1328, 0.1260, 0.1367, 0.1445, 0.1504, 0.1533, 0.1562, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1157, 0.1094, 0.1182, 0.1245, 0.1299, 0.1318, 0.1348, 0.1357, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1021, 0.0972, 0.1040, 0.1099, 0.1143, 0.1162, 0.1182, 0.1187, 0.1201, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0913, 0.0869, 0.0928, 0.0977, 0.1021, 0.1035, 0.1050, 0.1060, 0.1069, 0.1074, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0825, 0.0786, 0.0840, 0.0884, 0.0918, 0.0933, 0.0947, 0.0952, 0.0962, 0.0967, 0.0981, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0757, 0.0718, 0.0767, 0.0806, 0.0835, 0.0850, 0.0859, 0.0869, 0.0874, 0.0879, 0.0894, 0.0894, 0.0000, 0.0000, 0.0000],
        [0.0698, 0.0659, 0.0703, 0.0737, 0.0767, 0.0776, 0.0791, 0.0796, 0.0806, 0.0806, 0.0820, 0.0820, 0.0825, 0.0000, 0.0000],
        [0.0645, 0.0610, 0.0649, 0.0684, 0.0708, 0.0718, 0.0732, 0.0732, 0.0742, 0.0747, 0.0757, 0.0757, 0.0762, 0.0762, 0.0000],
        [0.0601, 0.0569, 0.0603, 0.0635, 0.0659, 0.0669, 0.0679, 0.0684, 0.0688, 0.0693, 0.0703, 0.0703, 0.0708, 0.0708, 0.0708]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0133,  0.0293,  0.0286,  ...,  0.0250, -0.0271, -0.0025],
        [ 0.0078, -0.0019,  0.0089,  ..., -0.0081, -0.0050,  0.0456],
        [ 0.0127,  0.0091, -0.0276,  ...,  0.0108,  0.0139,  0.0032],
        ...,
        [-0.0147,  0.0178, -0.0147,  ..., -0.0389,  0.0051, -0.0299],
        [ 0.0477, -0.0043, -0.0544,  ...,  0.0053, -0.0126,  0.0217],
        [ 0.0024, -0.0106, -0.0047,  ..., -0.0392, -0.0092, -0.0121]], device='cuda:0', requires_grad=True)
K: tensor([-0.0630, -0.2637,  0.6797, -0.3535,  0.1748, -0.0089, -0.1797,  0.1885,  0.1367,  0.5312,  0.0447,  0.1982, -0.3594,  0.2490, -0.1807, -0.2656,  1.0547,  0.2676, -1.1641,  0.4766,  0.3594,  0.3027, -0.3965,  0.5703, -0.0952, -0.1885, -0.2334,  0.7227, -0.2236,  0.1660, -0.0272, -0.4844,
         0.8203,  0.3145, -0.4102,  0.1289,  0.8242, -0.1709, -0.1021, -0.8594,  0.1582,  0.2432,  0.3652, -0.1289,  0.5000,  0.2852, -0.9688,  1.0703,  0.5078,  0.6484, -0.0540, -0.5469,  0.2559,  0.9531, -0.4824,  0.2480,  0.8438,  0.1201,  0.4590,  0.4297,  0.1260,  0.2969, -0.2910,  1.6484],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0277, -0.0196, -0.0088,  ...,  0.0034,  0.0209, -0.0225],
        [-0.0056, -0.0211, -0.0221,  ..., -0.0410, -0.0353,  0.0029],
        [-0.0048, -0.0117, -0.0031,  ..., -0.0013, -0.0060, -0.0025],
        ...,
        [ 0.0067, -0.0177,  0.0141,  ..., -0.0272, -0.0203,  0.0290],
        [ 0.0117,  0.0001, -0.0232,  ..., -0.0068,  0.0043,  0.0067],
        [-0.0040, -0.0010, -0.0392,  ...,  0.0257,  0.0354, -0.0079]], device='cuda:0', requires_grad=True)
Q: tensor([-0.6250,  0.0091, -0.2451,  0.0535,  1.1016, -0.4121,  0.8516, -0.3262, -0.2910, -0.0099,  0.2188,  0.0031, -0.0879, -0.2412,  0.8320, -1.4922,  0.2129,  0.3164,  0.3457,  0.1357, -0.3828,  0.5820, -0.8984, -0.8242, -0.3477,  0.0850,  0.8789, -0.3516, -0.2148,  0.2812,  0.4941, -0.0237,
         0.5742, -0.2480, -0.0801, -0.8164, -0.0334, -0.3594, -0.3672,  0.5664, -0.6172,  0.6602,  0.5391,  0.1777,  0.3457,  0.5820, -0.4453,  0.5508,  0.6289,  0.2793,  0.7695, -0.6133, -0.1064, -0.3047, -0.3535, -0.6211, -0.0884,  0.8125,  0.0889, -0.1270, -0.1211,  0.8008,  0.2539, -0.2471],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.0036,  0.1299,  0.2012,  0.2432,  0.2559,  0.2676,  0.2734,  0.2812,  0.2852,  0.2969,  0.2930,  0.2988,  0.2969,  0.2988],
        [ 0.0000, -0.0369,  0.0874,  0.1621,  0.2109,  0.2295,  0.2461,  0.2539,  0.2637,  0.2695,  0.2832,  0.2832,  0.2891,  0.2891,  0.2910],
        [ 0.0000, -0.0508,  0.0542,  0.1226,  0.1709,  0.1895,  0.2061,  0.2139,  0.2256,  0.2314,  0.2451,  0.2451,  0.2520,  0.2520,  0.2539],
        [ 0.0000, -0.0527,  0.0396,  0.1025,  0.1484,  0.1660,  0.1836,  0.1914,  0.2021,  0.2080,  0.2217,  0.2217,  0.2275,  0.2295,  0.2305],
        [ 0.0000, -0.0535,  0.0315,  0.0913,  0.1367,  0.1533,  0.1699,  0.1777,  0.1895,  0.1943,  0.2080,  0.2090,  0.2148,  0.2168,  0.2178],
        [ 0.0000, -0.0520,  0.0264,  0.0830,  0.1260,  0.1426,  0.1592,  0.1660,  0.1777,  0.1826,  0.1963,  0.1963,  0.2021,  0.2041,  0.2051],
        [ 0.0000, -0.0535,  0.0222,  0.0771,  0.1196,  0.1357,  0.1523,  0.1592,  0.1699,  0.1748,  0.1885,  0.1895,  0.1953,  0.1973,  0.1973],
        [ 0.0000, -0.0532,  0.0175,  0.0703,  0.1108,  0.1270,  0.1426,  0.1494,  0.1602,  0.1650,  0.1787,  0.1787,  0.1846,  0.1865,  0.1875],
        [ 0.0000, -0.0525,  0.0160,  0.0674,  0.1079,  0.1235,  0.1396,  0.1465,  0.1562,  0.1611,  0.1748,  0.1758,  0.1807,  0.1826,  0.1836],
        [ 0.0000, -0.0518,  0.0148,  0.0649,  0.1050,  0.1201,  0.1357,  0.1426,  0.1533,  0.1572,  0.1709,  0.1719,  0.1768,  0.1787,  0.1797],
        [ 0.0000, -0.0535,  0.0096,  0.0588,  0.0981,  0.1133,  0.1289,  0.1357,  0.1455,  0.1504,  0.1641,  0.1641,  0.1699,  0.1719,  0.1719],
        [ 0.0000, -0.0522,  0.0099,  0.0581,  0.0967,  0.1113,  0.1270,  0.1328,  0.1436,  0.1475,  0.1611,  0.1611,  0.1670,  0.1689,  0.1689],
        [ 0.0000, -0.0525,  0.0088,  0.0566,  0.0947,  0.1094,  0.1250,  0.1309,  0.1416,  0.1455,  0.1592,  0.1592,  0.1650,  0.1670,  0.1670],
        [ 0.0000, -0.0544,  0.0057,  0.0530,  0.0908,  0.1060,  0.1211,  0.1279,  0.1377,  0.1416,  0.1553,  0.1562,  0.1611,  0.1631,  0.1631]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5049],
        [0.3411],
        [0.2562],
        [0.2053],
        [0.1709],
        [0.1464],
        [0.1280],
        [0.1140],
        [0.1025],
        [0.0931],
        [0.0853],
        [0.0789],
        [0.0733],
        [0.0684]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(.:0.0100.:0.0100.:0.0100.:0.0100.:0.0100.:0.0100.:0.0100.:0.0100)
.
------
		(.:0.0100.:0.0100.:0.0100.:0.0100.:0.0100.:0.0100.:0.0100.:0.0100)
...............
@ 50 train 9.3713 , allloss: 86.1361, dt: 1715.13ms, fracRes: 0.0070, norm(attn): 0.0583, norm(output): 1.0001, norm(x): 0.9937, norm(y): 1.0004, norm:203.5818, tok/sec: 76420.83, flops:80.21, batch-reuse:1
@ 51 train 9.3953 , allloss: 85.1599, dt: 1282.78ms, fracRes: 0.0070, norm(attn): 0.0583, norm(output): 1.0001, norm(x): 0.9936, norm(y): 1.0004, norm:198.4696, tok/sec: 102178.28, flops:107.25, batch-reuse:1
@ 52 train 9.3122 , allloss: 84.1308, dt: 1318.79ms, fracRes: 0.0070, norm(attn): 0.0583, norm(output): 1.0001, norm(x): 0.9936, norm(y): 1.0004, norm:193.3584, tok/sec: 99388.08, flops:104.32, batch-reuse:1
@ 53 train 9.3154 , allloss: 83.2793, dt: 1320.94ms, fracRes: 0.0070, norm(attn): 0.0586, norm(output): 1.0001, norm(x): 0.9936, norm(y): 1.0004, norm:188.3693, tok/sec: 99226.49, flops:104.15, batch-reuse:1
@ 54 train 9.3026 , allloss: 82.5680, dt: 1294.72ms, fracRes: 0.0070, norm(attn): 0.0586, norm(output): 1.0001, norm(x): 0.9936, norm(y): 1.0004, norm:183.2443, tok/sec: 101236.02, flops:106.26, batch-reuse:1
@ 55 train 9.3309 , allloss: 81.8429, dt: 1295.82ms, fracRes: 0.0071, norm(attn): 0.0586, norm(output): 1.0001, norm(x): 0.9936, norm(y): 1.0004, norm:178.2974, tok/sec: 101150.19, flops:106.17, batch-reuse:1
@ 56 train 9.2334 , allloss: 80.9609, dt: 1318.49ms, fracRes: 0.0071, norm(attn): 0.0588, norm(output): 1.0001, norm(x): 0.9936, norm(y): 1.0004, norm:173.2619, tok/sec: 99410.72, flops:104.34, batch-reuse:1
@ 57 train 9.1846 , allloss: 80.0427, dt: 1302.24ms, fracRes: 0.0071, norm(attn): 0.0588, norm(output): 1.0001, norm(x): 0.9936, norm(y): 1.0004, norm:168.2118, tok/sec: 100651.34, flops:105.65, batch-reuse:1
@ 58 train 9.2163 , allloss: 79.1648, dt: 1324.24ms, fracRes: 0.0071, norm(attn): 0.0588, norm(output): 1.0001, norm(x): 0.9936, norm(y): 1.0005, norm:163.1741, tok/sec: 98979.38, flops:103.89, batch-reuse:1
@ 59 train 9.1118 , allloss: 77.9159, dt: 1327.55ms, fracRes: 0.0071, norm(attn): 0.0588, norm(output): 1.0001, norm(x): 0.9936, norm(y): 1.0005, norm:158.0767, tok/sec: 98732.54, flops:103.63, batch-reuse:1
@ 60 train 9.1425 , allloss: 76.7264, dt: 1303.93ms, fracRes: 0.0071, norm(attn): 0.0588, norm(output): 1.0001, norm(x): 0.9936, norm(y): 1.0005, norm:152.9753, tok/sec: 100520.55, flops:105.51, batch-reuse:1
@ 61 train 9.1227 , allloss: 75.4239, dt: 1295.22ms, fracRes: 0.0071, norm(attn): 0.0588, norm(output): 1.0001, norm(x): 0.9936, norm(y): 1.0005, norm:147.7928, tok/sec: 101196.34, flops:106.22, batch-reuse:1
@ 62 train 9.0868 , allloss: 73.8430, dt: 1314.07ms, fracRes: 0.0071, norm(attn): 0.0588, norm(output): 1.0001, norm(x): 0.9936, norm(y): 1.0005, norm:142.5941, tok/sec: 99744.80, flops:104.70, batch-reuse:1
@ 63 train 9.0879 , allloss: 72.8424, dt: 1289.17ms, fracRes: 0.0071, norm(attn): 0.0593, norm(output): 1.0001, norm(x): 0.9936, norm(y): 1.0006, norm:137.1440, tok/sec: 101671.77, flops:106.72, batch-reuse:1
@ 64 train 9.0649 , allloss: 71.6673, dt: 1293.95ms, fracRes: 0.0071, norm(attn): 0.0593, norm(output): 1.0001, norm(x): 0.9936, norm(y): 1.0006, norm:131.6326, tok/sec: 101296.38, flops:106.32, batch-reuse:1
@ 65 train 9.0671 , allloss: 70.6922, dt: 1270.33ms, fracRes: 0.0071, norm(attn): 0.0593, norm(output): 1.0001, norm(x): 0.9936, norm(y): 1.0006, norm:126.0269, tok/sec: 103179.47, flops:108.30, batch-reuse:1
@ 66 train 9.0350 , allloss: 69.9986, dt: 1282.20ms, fracRes: 0.0071, norm(attn): 0.0596, norm(output): 1.0001, norm(x): 0.9936, norm(y): 1.0006, norm:120.3317, tok/sec: 102224.35, flops:107.30, batch-reuse:1
@ 67 train 8.9393 , allloss: 69.3650, dt: 1275.00ms, fracRes: 0.0071, norm(attn): 0.0596, norm(output): 1.0001, norm(x): 0.9936, norm(y): 1.0007, norm:114.5200, tok/sec: 102801.46, flops:107.90, batch-reuse:1
@ 68 train 8.9744 , allloss: 69.2616, dt: 1288.78ms, fracRes: 0.0071, norm(attn): 0.0596, norm(output): 1.0001, norm(x): 0.9936, norm(y): 1.0007, norm:108.6589, tok/sec: 101702.22, flops:106.75, batch-reuse:1
@ 69 train 8.9141 , allloss: 69.1374, dt: 1293.72ms, fracRes: 0.0071, norm(attn): 0.0596, norm(output): 1.0001, norm(x): 0.9936, norm(y): 1.0007, norm:102.9467, tok/sec: 101313.76, flops:106.34, batch-reuse:1
@ 70 train 8.8909 , allloss: 69.0855, dt: 1300.73ms, fracRes: 0.0071, norm(attn): 0.0605, norm(output): 1.0001, norm(x): 0.9936, norm(y): 1.0007, norm:97.5443, tok/sec: 100768.38, flops:105.77, batch-reuse:1
@ 71 train 8.8598 , allloss: 68.9163, dt: 1299.55ms, fracRes: 0.0071, norm(attn): 0.0615, norm(output): 1.0001, norm(x): 0.9936, norm(y): 1.0008, norm:92.7829, tok/sec: 100859.49, flops:105.87, batch-reuse:1
@ 72 train 8.8287 , allloss: 68.7793, dt: 1312.86ms, fracRes: 0.0072, norm(attn): 0.0615, norm(output): 1.0001, norm(x): 0.9935, norm(y): 1.0008, norm:88.8461, tok/sec: 99837.38, flops:104.79, batch-reuse:1
@ 73 train 8.8428 , allloss: 68.9126, dt: 1331.48ms, fracRes: 0.0072, norm(attn): 0.0615, norm(output): 1.0001, norm(x): 0.9935, norm(y): 1.0008, norm:86.0573, tok/sec: 98441.17, flops:103.33, batch-reuse:1
@ 74 train 8.7917 , allloss: 68.5101, dt: 1338.39ms, fracRes: 0.0072, norm(attn): 0.0615, norm(output): 1.0001, norm(x): 0.9935, norm(y): 1.0008, norm:84.5627, tok/sec: 97932.46, flops:102.79, batch-reuse:1
@ 75 train 9.0529 , allloss: 68.8525, dt: 1331.60ms, fracRes: 0.0072, norm(attn): 0.0618, norm(output): 1.0001, norm(x): 0.9935, norm(y): 1.0009, norm:84.5210, tok/sec: 98431.88, flops:103.32, batch-reuse:1
@ 76 train 8.7169 , allloss: 68.6271, dt: 1321.04ms, fracRes: 0.0073, norm(attn): 0.0618, norm(output): 1.0001, norm(x): 0.9935, norm(y): 1.0009, norm:86.3290, tok/sec: 99218.91, flops:104.14, batch-reuse:1
@ 77 train 9.0510 , allloss: 68.8424, dt: 1292.93ms, fracRes: 0.0073, norm(attn): 0.0618, norm(output): 1.0001, norm(x): 0.9934, norm(y): 1.0009, norm:89.1358, tok/sec: 101376.07, flops:106.41, batch-reuse:1
@ 78 train 8.8087 , allloss: 69.1052, dt: 1296.34ms, fracRes: 0.0073, norm(attn): 0.0615, norm(output): 1.0001, norm(x): 0.9934, norm(y): 1.0009, norm:93.3514, tok/sec: 101109.09, flops:106.13, batch-reuse:1
@ 79 train 8.5800 , allloss: 69.2013, dt: 1282.72ms, fracRes: 0.0073, norm(attn): 0.0615, norm(output): 1.0001, norm(x): 0.9934, norm(y): 1.0010, norm:98.1108, tok/sec: 102182.93, flops:107.25, batch-reuse:1
@ 80 train 8.5808 , allloss: 68.9770, dt: 1313.30ms, fracRes: 0.0073, norm(attn): 0.0615, norm(output): 1.0000, norm(x): 0.9934, norm(y): 1.0010, norm:102.3390, tok/sec: 99803.57, flops:104.76, batch-reuse:1
@ 81 train 8.5520 , allloss: 67.7329, dt: 1331.81ms, fracRes: 0.0073, norm(attn): 0.0618, norm(output): 1.0000, norm(x): 0.9934, norm(y): 1.0010, norm:104.9638, tok/sec: 98416.69, flops:103.30, batch-reuse:1
@ 82 train 8.4788 , allloss: 65.9745, dt: 1335.62ms, fracRes: 0.0072, norm(attn): 0.0618, norm(output): 1.0000, norm(x): 0.9934, norm(y): 1.0010, norm:106.1021, tok/sec: 98135.98, flops:103.01, batch-reuse:1
@ 83 train 8.4683 , allloss: 63.9126, dt: 1304.28ms, fracRes: 0.0072, norm(attn): 0.0615, norm(output): 1.0000, norm(x): 0.9934, norm(y): 1.0011, norm:106.8565, tok/sec: 100493.41, flops:105.48, batch-reuse:1
@ 84 train 8.4643 , allloss: 61.4341, dt: 1280.45ms, fracRes: 0.0072, norm(attn): 0.0623, norm(output): 1.0000, norm(x): 0.9934, norm(y): 1.0011, norm:105.9063, tok/sec: 102364.08, flops:107.44, batch-reuse:1
@ 85 train 8.4016 , allloss: 58.4698, dt: 1290.87ms, fracRes: 0.0072, norm(attn): 0.0615, norm(output): 1.0000, norm(x): 0.9934, norm(y): 1.0011, norm:103.1199, tok/sec: 101537.75, flops:106.58, batch-reuse:1
@ 86 train 8.3445 , allloss: 55.4130, dt: 1346.24ms, fracRes: 0.0072, norm(attn): 0.0618, norm(output): 1.0000, norm(x): 0.9934, norm(y): 1.0011, norm:98.4586, tok/sec: 97361.33, flops:102.19, batch-reuse:1
@ 87 train 8.3706 , allloss: 52.3942, dt: 1340.54ms, fracRes: 0.0073, norm(attn): 0.0618, norm(output): 1.0000, norm(x): 0.9934, norm(y): 1.0012, norm:92.9649, tok/sec: 97775.63, flops:102.63, batch-reuse:1
@ 88 train 8.3401 , allloss: 48.9446, dt: 1332.14ms, fracRes: 0.0073, norm(attn): 0.0623, norm(output): 1.0000, norm(x): 0.9933, norm(y): 1.0012, norm:86.4370, tok/sec: 98392.42, flops:103.28, batch-reuse:1
@ 89 train 8.2654 , allloss: 45.5857, dt: 1293.95ms, fracRes: 0.0073, norm(attn): 0.0623, norm(output): 1.0000, norm(x): 0.9933, norm(y): 1.0012, norm:79.3289, tok/sec: 101296.14, flops:106.32, batch-reuse:1
@ 90 train 8.2670 , allloss: 42.5853, dt: 1305.94ms, fracRes: 0.0073, norm(attn): 0.0623, norm(output): 1.0000, norm(x): 0.9933, norm(y): 1.0012, norm:72.6921, tok/sec: 100366.26, flops:105.35, batch-reuse:1
@ 91 train 8.2411 , allloss: 39.9821, dt: 1327.07ms, fracRes: 0.0074, norm(attn): 0.0623, norm(output): 1.0000, norm(x): 0.9933, norm(y): 1.0013, norm:67.1032, tok/sec: 98768.00, flops:103.67, batch-reuse:1
@ 92 train 8.2051 , allloss: 37.7522, dt: 1307.21ms, fracRes: 0.0074, norm(attn): 0.0623, norm(output): 1.0000, norm(x): 0.9933, norm(y): 1.0013, norm:62.9753, tok/sec: 100268.59, flops:105.25, batch-reuse:1
@ 93 train 8.1845 , allloss: 35.7524, dt: 1299.90ms, fracRes: 0.0074, norm(attn): 0.0623, norm(output): 1.0000, norm(x): 0.9932, norm(y): 1.0013, norm:59.8720, tok/sec: 100832.50, flops:105.84, batch-reuse:1
@ 94 train 8.3001 , allloss: 34.1600, dt: 1312.46ms, fracRes: 0.0074, norm(attn): 0.0625, norm(output): 1.0000, norm(x): 0.9932, norm(y): 1.0013, norm:57.3748, tok/sec: 99867.77, flops:104.82, batch-reuse:1
@ 95 train 8.1421 , allloss: 32.1629, dt: 1336.12ms, fracRes: 0.0074, norm(attn): 0.0625, norm(output): 1.0000, norm(x): 0.9932, norm(y): 1.0014, norm:55.1604, tok/sec: 98098.70, flops:102.97, batch-reuse:1
@ 96 train 8.0542 , allloss: 30.3690, dt: 1310.80ms, fracRes: 0.0074, norm(attn): 0.0625, norm(output): 1.0000, norm(x): 0.9932, norm(y): 1.0014, norm:52.7653, tok/sec: 99993.69, flops:104.96, batch-reuse:1
@ 97 train 8.0545 , allloss: 28.7637, dt: 1288.72ms, fracRes: 0.0074, norm(attn): 0.0625, norm(output): 1.0000, norm(x): 0.9932, norm(y): 1.0014, norm:50.1185, tok/sec: 101706.81, flops:106.75, batch-reuse:1
@ 98 train 8.0447 , allloss: 27.2551, dt: 1281.26ms, fracRes: 0.0074, norm(attn): 0.0630, norm(output): 1.0000, norm(x): 0.9932, norm(y): 1.0014, norm:47.5534, tok/sec: 102298.96, flops:107.38, batch-reuse:1
@ 99 train 8.0246 , allloss: 25.8895, dt: 1322.37ms, fracRes: 0.0074, norm(attn): 0.0630, norm(output): 1.0000, norm(x): 0.9932, norm(y): 1.0014, norm:45.3006, tok/sec: 99118.66, flops:104.04, batch-reuse:1
@ 100 train 7.9867 , allloss: 24.7234, dt: 1318.72ms, fracRes: 0.0074, norm(attn): 0.0630, norm(output): 1.0000, norm(x): 0.9932, norm(y): 1.0015, norm:43.3228, tok/sec: 99393.49, flops:104.33, batch-reuse:1
@ 101 train 7.9078 , allloss: 23.5825, dt: 1303.43ms, fracRes: 0.0074, norm(attn): 0.0630, norm(output): 1.0000, norm(x): 0.9932, norm(y): 1.0015, norm:41.5791, tok/sec: 100559.03, flops:105.55, batch-reuse:1
@ 102 train 7.9385 , allloss: 22.6903, dt: 1314.38ms, fracRes: 0.0074, norm(attn): 0.0630, norm(output): 1.0000, norm(x): 0.9932, norm(y): 1.0015, norm:40.0797, tok/sec: 99721.71, flops:104.67, batch-reuse:1
@ 103 train 7.9396 , allloss: 21.7462, dt: 1322.59ms, fracRes: 0.0074, norm(attn): 0.0630, norm(output): 1.0000, norm(x): 0.9932, norm(y): 1.0015, norm:38.7683, tok/sec: 99102.74, flops:104.02, batch-reuse:1
@ 104 train 7.9468 , allloss: 20.8657, dt: 1312.75ms, fracRes: 0.0074, norm(attn): 0.0630, norm(output): 1.0000, norm(x): 0.9932, norm(y): 1.0015, norm:37.6516, tok/sec: 99845.26, flops:104.80, batch-reuse:1
@ 105 train 7.9182 , allloss: 19.9777, dt: 1331.92ms, fracRes: 0.0074, norm(attn): 0.0630, norm(output): 1.0000, norm(x): 0.9932, norm(y): 1.0016, norm:36.6766, tok/sec: 98408.28, flops:103.29, batch-reuse:1
@ 106 train 7.8883 , allloss: 19.1438, dt: 1306.86ms, fracRes: 0.0074, norm(attn): 0.0630, norm(output): 1.0000, norm(x): 0.9932, norm(y): 1.0016, norm:35.8860, tok/sec: 100295.02, flops:105.27, batch-reuse:1
@ 107 train 7.8493 , allloss: 18.2041, dt: 1302.63ms, fracRes: 0.0074, norm(attn): 0.0630, norm(output): 1.0000, norm(x): 0.9933, norm(y): 1.0016, norm:35.1685, tok/sec: 100621.07, flops:105.62, batch-reuse:1
@ 108 train 7.8329 , allloss: 17.3238, dt: 1301.65ms, fracRes: 0.0074, norm(attn): 0.0630, norm(output): 1.0000, norm(x): 0.9933, norm(y): 1.0016, norm:34.4195, tok/sec: 100696.51, flops:105.69, batch-reuse:1
@ 109 train 7.7612 , allloss: 16.4043, dt: 1311.59ms, fracRes: 0.0074, norm(attn): 0.0630, norm(output): 1.0000, norm(x): 0.9933, norm(y): 1.0016, norm:33.6346, tok/sec: 99933.38, flops:104.89, batch-reuse:1
@ 110 train 7.8192 , allloss: 15.6363, dt: 1292.62ms, fracRes: 0.0074, norm(attn): 0.0635, norm(output): 1.0000, norm(x): 0.9933, norm(y): 1.0016, norm:32.5357, tok/sec: 101400.35, flops:106.43, batch-reuse:1
@ 111 train 7.7791 , allloss: 14.7125, dt: 1301.73ms, fracRes: 0.0074, norm(attn): 0.0635, norm(output): 1.0000, norm(x): 0.9933, norm(y): 1.0017, norm:30.9120, tok/sec: 100690.96, flops:105.69, batch-reuse:1
@ 112 train 7.7871 , allloss: 13.8523, dt: 1317.09ms, fracRes: 0.0074, norm(attn): 0.0635, norm(output): 1.0000, norm(x): 0.9933, norm(y): 1.0017, norm:28.3074, tok/sec: 99516.36, flops:104.46, batch-reuse:1
@ 113 train 7.7381 , allloss: 12.9219, dt: 1332.29ms, fracRes: 0.0074, norm(attn): 0.0635, norm(output): 1.0000, norm(x): 0.9933, norm(y): 1.0017, norm:24.6781, tok/sec: 98380.85, flops:103.26, batch-reuse:1
@ 114 train 7.7406 , allloss: 12.1797, dt: 1351.30ms, fracRes: 0.0074, norm(attn): 0.0635, norm(output): 1.0000, norm(x): 0.9933, norm(y): 1.0017, norm:20.8790, tok/sec: 96997.12, flops:101.81, batch-reuse:1
@ 115 train 7.7073 , allloss: 11.5605, dt: 1343.24ms, fracRes: 0.0074, norm(attn): 0.0635, norm(output): 1.0000, norm(x): 0.9932, norm(y): 1.0017, norm:17.7918, tok/sec: 97579.35, flops:102.42, batch-reuse:1
@ 116 train 7.6683 , allloss: 11.0748, dt: 1337.02ms, fracRes: 0.0074, norm(attn): 0.0635, norm(output): 1.0000, norm(x): 0.9932, norm(y): 1.0017, norm:15.4614, tok/sec: 98033.19, flops:102.90, batch-reuse:1
@ 117 train 7.6673 , allloss: 10.7051, dt: 1319.04ms, fracRes: 0.0074, norm(attn): 0.0654, norm(output): 1.0000, norm(x): 0.9932, norm(y): 1.0017, norm:13.4983, tok/sec: 99368.96, flops:104.30, batch-reuse:1
@ 118 train 7.6796 , allloss: 10.4318, dt: 1350.08ms, fracRes: 0.0074, norm(attn): 0.0654, norm(output): 1.0000, norm(x): 0.9932, norm(y): 1.0018, norm:11.9622, tok/sec: 97084.67, flops:101.90, batch-reuse:1
@ 119 train 7.6528 , allloss: 10.1132, dt: 1328.40ms, fracRes: 0.0075, norm(attn): 0.0654, norm(output): 1.0000, norm(x): 0.9932, norm(y): 1.0018, norm:10.7685, tok/sec: 98669.01, flops:103.57, batch-reuse:1
@ 120 train 7.7781 , allloss: 10.0063, dt: 1298.32ms, fracRes: 0.0075, norm(attn): 0.0635, norm(output): 1.0000, norm(x): 0.9932, norm(y): 1.0018, norm:9.8697, tok/sec: 100955.02, flops:105.97, batch-reuse:1
@ 121 train 7.8239 , allloss: 9.9110, dt: 1282.66ms, fracRes: 0.0075, norm(attn): 0.0635, norm(output): 1.0000, norm(x): 0.9932, norm(y): 1.0018, norm:9.3266, tok/sec: 102187.51, flops:107.26, batch-reuse:1
@ 122 train 7.7849 , allloss: 9.7263, dt: 1291.92ms, fracRes: 0.0075, norm(attn): 0.0645, norm(output): 1.0000, norm(x): 0.9932, norm(y): 1.0018, norm:8.9202, tok/sec: 101455.02, flops:106.49, batch-reuse:1
@ 123 train 7.6737 , allloss: 9.5811, dt: 1294.05ms, fracRes: 0.0075, norm(attn): 0.0645, norm(output): 1.0000, norm(x): 0.9932, norm(y): 1.0018, norm:8.7908, tok/sec: 101287.93, flops:106.32, batch-reuse:1
@ 124 train 7.6841 , allloss: 9.5555, dt: 1313.41ms, fracRes: 0.0075, norm(attn): 0.0654, norm(output): 1.0000, norm(x): 0.9931, norm(y): 1.0018, norm:8.6768, tok/sec: 99795.13, flops:104.75, batch-reuse:1
@ 125 train 7.6850 , allloss: 9.5014, dt: 1297.02ms, fracRes: 0.0075, norm(attn): 0.0659, norm(output): 1.0000, norm(x): 0.9931, norm(y): 1.0018, norm:8.4403, tok/sec: 101055.94, flops:106.07, batch-reuse:1
@ 126 train 7.7114 , allloss: 9.4274, dt: 1287.80ms, fracRes: 0.0076, norm(attn): 0.0659, norm(output): 1.0000, norm(x): 0.9931, norm(y): 1.0018, norm:7.9990, tok/sec: 101779.59, flops:106.83, batch-reuse:1
@ 127 train 7.6214 , allloss: 9.1330, dt: 1296.73ms, fracRes: 0.0076, norm(attn): 0.0664, norm(output): 1.0000, norm(x): 0.9931, norm(y): 1.0018, norm:7.3088, tok/sec: 101078.98, flops:106.10, batch-reuse:1
@ 128 train 7.5957 , allloss: 8.9233, dt: 1300.61ms, fracRes: 0.0076, norm(attn): 0.0664, norm(output): 1.0000, norm(x): 0.9930, norm(y): 1.0019, norm:6.6290, tok/sec: 100777.30, flops:105.78, batch-reuse:1
@ 129 train 7.7745 , allloss: 8.9973, dt: 1308.47ms, fracRes: 0.0076, norm(attn): 0.0664, norm(output): 1.0000, norm(x): 0.9930, norm(y): 1.0019, norm:6.1628, tok/sec: 100171.92, flops:105.14, batch-reuse:1
@ 130 train 7.7028 , allloss: 8.8723, dt: 1338.39ms, fracRes: 0.0076, norm(attn): 0.0659, norm(output): 1.0000, norm(x): 0.9930, norm(y): 1.0019, norm:5.8638, tok/sec: 97932.77, flops:102.79, batch-reuse:1
@ 131 train 7.6775 , allloss: 8.8700, dt: 1336.60ms, fracRes: 0.0076, norm(attn): 0.0664, norm(output): 1.0000, norm(x): 0.9930, norm(y): 1.0019, norm:5.8380, tok/sec: 98064.04, flops:102.93, batch-reuse:1
@ 132 train 7.7055 , allloss: 8.9666, dt: 1328.33ms, fracRes: 0.0076, norm(attn): 0.0664, norm(output): 1.0000, norm(x): 0.9930, norm(y): 1.0019, norm:5.9769, tok/sec: 98674.40, flops:103.57, batch-reuse:1
@ 133 train 7.6522 , allloss: 8.9658, dt: 1305.33ms, fracRes: 0.0077, norm(attn): 0.0669, norm(output): 1.0000, norm(x): 0.9930, norm(y): 1.0019, norm:6.0765, tok/sec: 100413.30, flops:105.40, batch-reuse:1
@ 134 train 7.6971 , allloss: 9.0844, dt: 1326.12ms, fracRes: 0.0077, norm(attn): 0.0669, norm(output): 0.9999, norm(x): 0.9929, norm(y): 1.0019, norm:6.2497, tok/sec: 98838.80, flops:103.74, batch-reuse:1
@ 135 train 7.6088 , allloss: 9.0289, dt: 1284.74ms, fracRes: 0.0078, norm(attn): 0.0674, norm(output): 0.9999, norm(x): 0.9929, norm(y): 1.0019, norm:6.3429, tok/sec: 102022.11, flops:107.09, batch-reuse:1
@ 136 train 7.6525 , allloss: 9.1275, dt: 1308.37ms, fracRes: 0.0078, norm(attn): 0.0693, norm(output): 0.9999, norm(x): 0.9929, norm(y): 1.0019, norm:6.5225, tok/sec: 100179.49, flops:105.15, batch-reuse:1
@ 137 train 7.5728 , allloss: 9.0163, dt: 1298.57ms, fracRes: 0.0078, norm(attn): 0.0693, norm(output): 0.9999, norm(x): 0.9928, norm(y): 1.0019, norm:6.4364, tok/sec: 100935.39, flops:105.95, batch-reuse:1
@ 138 train 7.5623 , allloss: 8.9427, dt: 1290.26ms, fracRes: 0.0079, norm(attn): 0.0693, norm(output): 0.9999, norm(x): 0.9928, norm(y): 1.0019, norm:6.1997, tok/sec: 101585.74, flops:106.63, batch-reuse:1
@ 139 train 7.5419 , allloss: 8.8378, dt: 1294.86ms, fracRes: 0.0080, norm(attn): 0.0698, norm(output): 0.9999, norm(x): 0.9927, norm(y): 1.0019, norm:5.9160, tok/sec: 101224.89, flops:106.25, batch-reuse:1
@ 140 train 7.5640 , allloss: 8.8196, dt: 1310.35ms, fracRes: 0.0081, norm(attn): 0.0698, norm(output): 0.9999, norm(x): 0.9926, norm(y): 1.0019, norm:5.6216, tok/sec: 100028.53, flops:104.99, batch-reuse:1
@ 141 train 7.5773 , allloss: 8.8518, dt: 1314.54ms, fracRes: 0.0082, norm(attn): 0.0703, norm(output): 0.9999, norm(x): 0.9925, norm(y): 1.0020, norm:5.4479, tok/sec: 99709.66, flops:104.66, batch-reuse:1
@ 142 train 7.6710 , allloss: 9.0120, dt: 1313.96ms, fracRes: 0.0083, norm(attn): 0.0703, norm(output): 0.9999, norm(x): 0.9925, norm(y): 1.0020, norm:5.3821, tok/sec: 99753.27, flops:104.70, batch-reuse:1
@ 143 train 7.6402 , allloss: 9.1137, dt: 1337.43ms, fracRes: 0.0084, norm(attn): 0.0708, norm(output): 0.9999, norm(x): 0.9924, norm(y): 1.0020, norm:5.4390, tok/sec: 98002.59, flops:102.87, batch-reuse:1
@ 144 train 7.6124 , allloss: 9.3618, dt: 1335.96ms, fracRes: 0.0084, norm(attn): 0.0708, norm(output): 0.9999, norm(x): 0.9923, norm(y): 1.0020, norm:5.7745, tok/sec: 98111.04, flops:102.98, batch-reuse:1
@ 145 train 7.6319 , allloss: 9.7199, dt: 1335.56ms, fracRes: 0.0085, norm(attn): 0.0708, norm(output): 0.9999, norm(x): 0.9922, norm(y): 1.0020, norm:6.0721, tok/sec: 98140.10, flops:103.01, batch-reuse:1
@ 146 train 7.7479 , allloss: 10.1978, dt: 1343.81ms, fracRes: 0.0087, norm(attn): 0.0708, norm(output): 0.9999, norm(x): 0.9922, norm(y): 1.0020, norm:6.3367, tok/sec: 97537.87, flops:102.38, batch-reuse:1
@ 147 train 7.6148 , allloss: 10.2285, dt: 1339.60ms, fracRes: 0.0088, norm(attn): 0.0713, norm(output): 0.9999, norm(x): 0.9921, norm(y): 1.0020, norm:6.4021, tok/sec: 97843.81, flops:102.70, batch-reuse:1
@ 148 train 7.6090 , allloss: 10.4050, dt: 1336.14ms, fracRes: 0.0089, norm(attn): 0.0713, norm(output): 0.9999, norm(x): 0.9920, norm(y): 1.0020, norm:6.5760, tok/sec: 98097.27, flops:102.97, batch-reuse:1
@ 149 train 7.5044 , allloss: 10.6082, dt: 1336.80ms, fracRes: 0.0090, norm(attn): 0.0713, norm(output): 0.9999, norm(x): 0.9919, norm(y): 1.0020, norm:6.9165, tok/sec: 98049.36, flops:102.92, batch-reuse:1
@ 150 train 7.7027 , allloss: 11.3002, dt: 1300.27ms, fracRes: 0.0090, norm(attn): 0.0718, norm(output): 0.9999, norm(x): 0.9919, norm(y): 1.0020, norm:7.3684, tok/sec: 100803.54, flops:105.81, batch-reuse:1
@ 151 train 7.5277 , allloss: 11.7152, dt: 1312.75ms, fracRes: 0.0091, norm(attn): 0.0728, norm(output): 0.9999, norm(x): 0.9918, norm(y): 1.0020, norm:8.0350, tok/sec: 99845.41, flops:104.80, batch-reuse:1
@ 152 train 7.4920 , allloss: 12.3797, dt: 1294.37ms, fracRes: 0.0091, norm(attn): 0.0732, norm(output): 0.9999, norm(x): 0.9918, norm(y): 1.0020, norm:8.6278, tok/sec: 101263.06, flops:106.29, batch-reuse:1
@ 153 train 7.5478 , allloss: 13.0236, dt: 1291.43ms, fracRes: 0.0092, norm(attn): 0.0732, norm(output): 0.9999, norm(x): 0.9917, norm(y): 1.0020, norm:8.6444, tok/sec: 101493.54, flops:106.53, batch-reuse:1
@ 154 train 7.5965 , allloss: 13.4228, dt: 1318.94ms, fracRes: 0.0093, norm(attn): 0.0732, norm(output): 0.9999, norm(x): 0.9917, norm(y): 1.0020, norm:8.5725, tok/sec: 99377.07, flops:104.31, batch-reuse:1
@ 155 train 7.7111 , allloss: 13.7676, dt: 1312.76ms, fracRes: 0.0094, norm(attn): 0.0732, norm(output): 0.9999, norm(x): 0.9916, norm(y): 1.0020, norm:8.8258, tok/sec: 99844.38, flops:104.80, batch-reuse:1
@ 156 train 7.5902 , allloss: 13.7670, dt: 1306.76ms, fracRes: 0.0095, norm(attn): 0.0742, norm(output): 0.9999, norm(x): 0.9915, norm(y): 1.0020, norm:8.7492, tok/sec: 100303.24, flops:105.28, batch-reuse:1
@ 157 train 7.6894 , allloss: 13.9486, dt: 1337.65ms, fracRes: 0.0096, norm(attn): 0.0742, norm(output): 0.9998, norm(x): 0.9914, norm(y): 1.0020, norm:8.4021, tok/sec: 97986.94, flops:102.85, batch-reuse:1
@ 158 train 7.6750 , allloss: 13.8326, dt: 1343.68ms, fracRes: 0.0097, norm(attn): 0.0752, norm(output): 0.9998, norm(x): 0.9914, norm(y): 1.0020, norm:8.0660, tok/sec: 97547.32, flops:102.39, batch-reuse:1
@ 159 train 7.6990 , allloss: 13.7387, dt: 1328.61ms, fracRes: 0.0098, norm(attn): 0.0752, norm(output): 0.9998, norm(x): 0.9913, norm(y): 1.0021, norm:8.0765, tok/sec: 98653.68, flops:103.55, batch-reuse:1
@ 160 train 7.6010 , allloss: 13.5357, dt: 1291.13ms, fracRes: 0.0099, norm(attn): 0.0752, norm(output): 0.9998, norm(x): 0.9912, norm(y): 1.0021, norm:8.0427, tok/sec: 101517.55, flops:106.56, batch-reuse:1
@ 161 train 7.6153 , allloss: 13.6197, dt: 1306.30ms, fracRes: 0.0100, norm(attn): 0.0757, norm(output): 0.9998, norm(x): 0.9911, norm(y): 1.0021, norm:7.9069, tok/sec: 100338.05, flops:105.32, batch-reuse:1
@ 162 train 7.7144 , allloss: 13.7592, dt: 1305.29ms, fracRes: 0.0102, norm(attn): 0.0752, norm(output): 0.9998, norm(x): 0.9910, norm(y): 1.0021, norm:8.7553, tok/sec: 100415.67, flops:105.40, batch-reuse:1
@ 163 train 7.6278 , allloss: 13.5702, dt: 1287.81ms, fracRes: 0.0103, norm(attn): 0.0757, norm(output): 0.9998, norm(x): 0.9909, norm(y): 1.0021, norm:9.5458, tok/sec: 101779.30, flops:106.83, batch-reuse:1
@ 164 train 7.5510 , allloss: 13.3998, dt: 1312.84ms, fracRes: 0.0104, norm(attn): 0.0757, norm(output): 0.9998, norm(x): 0.9908, norm(y): 1.0021, norm:9.8225, tok/sec: 99838.23, flops:104.79, batch-reuse:1
@ 165 train 7.6525 , allloss: 13.5555, dt: 1349.04ms, fracRes: 0.0106, norm(attn): 0.0752, norm(output): 0.9998, norm(x): 0.9907, norm(y): 1.0021, norm:8.9317, tok/sec: 97159.27, flops:101.98, batch-reuse:1
@ 166 train 7.5710 , allloss: 13.5366, dt: 1297.40ms, fracRes: 0.0107, norm(attn): 0.0752, norm(output): 0.9998, norm(x): 0.9906, norm(y): 1.0021, norm:8.1818, tok/sec: 101026.52, flops:106.04, batch-reuse:1
@ 167 train 7.5965 , allloss: 13.6339, dt: 1311.97ms, fracRes: 0.0109, norm(attn): 0.0752, norm(output): 0.9998, norm(x): 0.9905, norm(y): 1.0021, norm:7.6138, tok/sec: 99904.71, flops:104.86, batch-reuse:1
@ 168 train 7.5490 , allloss: 13.5971, dt: 1327.84ms, fracRes: 0.0110, norm(attn): 0.0752, norm(output): 0.9997, norm(x): 0.9904, norm(y): 1.0021, norm:7.7504, tok/sec: 98710.38, flops:103.61, batch-reuse:1
@ 169 train 7.6082 , allloss: 13.6507, dt: 1330.02ms, fracRes: 0.0112, norm(attn): 0.0752, norm(output): 0.9997, norm(x): 0.9903, norm(y): 1.0021, norm:7.8892, tok/sec: 98549.09, flops:103.44, batch-reuse:1
@ 170 train 7.5986 , allloss: 13.5951, dt: 1339.04ms, fracRes: 0.0115, norm(attn): 0.0742, norm(output): 0.9997, norm(x): 0.9901, norm(y): 1.0021, norm:8.3515, tok/sec: 97885.41, flops:102.74, batch-reuse:1
@ 171 train 7.5607 , allloss: 13.3228, dt: 1288.59ms, fracRes: 0.0119, norm(attn): 0.0732, norm(output): 0.9997, norm(x): 0.9898, norm(y): 1.0021, norm:8.3425, tok/sec: 101717.06, flops:106.77, batch-reuse:1
@ 172 train 7.6048 , allloss: 13.0022, dt: 1299.17ms, fracRes: 0.0124, norm(attn): 0.0732, norm(output): 0.9997, norm(x): 0.9894, norm(y): 1.0021, norm:8.1018, tok/sec: 100888.68, flops:105.90, batch-reuse:1
@ 173 train 7.5892 , allloss: 12.7907, dt: 1321.31ms, fracRes: 0.0122, norm(attn): 0.0742, norm(output): 0.9997, norm(x): 0.9895, norm(y): 1.0021, norm:7.8267, tok/sec: 99198.30, flops:104.12, batch-reuse:1
@ 174 train 7.7279 , allloss: 12.9696, dt: 1305.92ms, fracRes: 0.0118, norm(attn): 0.0752, norm(output): 0.9997, norm(x): 0.9897, norm(y): 1.0021, norm:7.7982, tok/sec: 100367.29, flops:105.35, batch-reuse:1
@ 175 train 7.6085 , allloss: 12.7354, dt: 1308.39ms, fracRes: 0.0116, norm(attn): 0.0767, norm(output): 0.9997, norm(x): 0.9899, norm(y): 1.0021, norm:8.1429, tok/sec: 100177.87, flops:105.15, batch-reuse:1
@ 176 train 7.6449 , allloss: 12.7346, dt: 1318.35ms, fracRes: 0.0117, norm(attn): 0.0771, norm(output): 0.9997, norm(x): 0.9898, norm(y): 1.0021, norm:7.8995, tok/sec: 99420.88, flops:104.36, batch-reuse:1
@ 177 train 7.6136 , allloss: 12.7535, dt: 1286.42ms, fracRes: 0.0118, norm(attn): 0.0771, norm(output): 0.9997, norm(x): 0.9897, norm(y): 1.0021, norm:7.5450, tok/sec: 101889.35, flops:106.95, batch-reuse:1
@ 178 train 7.6693 , allloss: 12.9158, dt: 1312.63ms, fracRes: 0.0119, norm(attn): 0.0776, norm(output): 0.9997, norm(x): 0.9897, norm(y): 1.0021, norm:7.3386, tok/sec: 99854.53, flops:104.81, batch-reuse:1
@ 179 train 7.5443 , allloss: 12.7846, dt: 1306.02ms, fracRes: 0.0120, norm(attn): 0.0776, norm(output): 0.9997, norm(x): 0.9896, norm(y): 1.0021, norm:7.6084, tok/sec: 100359.87, flops:105.34, batch-reuse:1
@ 180 train 7.6729 , allloss: 12.9409, dt: 1309.00ms, fracRes: 0.0122, norm(attn): 0.0776, norm(output): 0.9997, norm(x): 0.9894, norm(y): 1.0021, norm:7.5204, tok/sec: 100131.67, flops:105.10, batch-reuse:1
@ 181 train 7.6373 , allloss: 12.9706, dt: 1290.35ms, fracRes: 0.0124, norm(attn): 0.0776, norm(output): 0.9996, norm(x): 0.9893, norm(y): 1.0022, norm:7.3172, tok/sec: 101578.91, flops:106.62, batch-reuse:1
@ 182 train 7.6590 , allloss: 13.1269, dt: 1292.89ms, fracRes: 0.0125, norm(attn): 0.0776, norm(output): 0.9996, norm(x): 0.9892, norm(y): 1.0022, norm:6.8047, tok/sec: 101378.76, flops:106.41, batch-reuse:1
@ 183 train 7.6240 , allloss: 13.2376, dt: 1306.67ms, fracRes: 0.0127, norm(attn): 0.0776, norm(output): 0.9996, norm(x): 0.9890, norm(y): 1.0022, norm:7.3751, tok/sec: 100310.30, flops:105.29, batch-reuse:1
@ 184 train 7.5091 , allloss: 13.1387, dt: 1344.30ms, fracRes: 0.0130, norm(attn): 0.0771, norm(output): 0.9996, norm(x): 0.9888, norm(y): 1.0022, norm:7.3599, tok/sec: 97502.01, flops:102.34, batch-reuse:1
@ 185 train 7.5621 , allloss: 13.1991, dt: 1336.66ms, fracRes: 0.0137, norm(attn): 0.0771, norm(output): 0.9996, norm(x): 0.9884, norm(y): 1.0022, norm:7.1799, tok/sec: 98059.47, flops:102.93, batch-reuse:1
@ 186 train 7.7316 , allloss: 13.3856, dt: 1346.50ms, fracRes: 0.0148, norm(attn): 0.0757, norm(output): 0.9996, norm(x): 0.9877, norm(y): 1.0022, norm:6.8897, tok/sec: 97342.38, flops:102.17, batch-reuse:1
@ 187 train 7.7721 , allloss: 13.4357, dt: 1327.97ms, fracRes: 0.0158, norm(attn): 0.0752, norm(output): 0.9996, norm(x): 0.9872, norm(y): 1.0022, norm:6.8664, tok/sec: 98701.25, flops:103.60, batch-reuse:1
@ 188 train 7.6157 , allloss: 13.3630, dt: 1324.05ms, fracRes: 0.0171, norm(attn): 0.0752, norm(output): 0.9996, norm(x): 0.9864, norm(y): 1.0022, norm:7.3390, tok/sec: 98993.49, flops:103.91, batch-reuse:1
@ 189 train 7.7324 , allloss: 13.7557, dt: 1336.32ms, fracRes: 0.0181, norm(attn): 0.0752, norm(output): 0.9996, norm(x): 0.9859, norm(y): 1.0022, norm:10.4697, tok/sec: 98084.47, flops:102.95, batch-reuse:1
@ 190 train 7.7134 , allloss: 14.3394, dt: 1327.70ms, fracRes: 0.0186, norm(attn): 0.0762, norm(output): 0.9996, norm(x): 0.9855, norm(y): 1.0022, norm:19.8294, tok/sec: 98720.87, flops:103.62, batch-reuse:1
@ 191 train 7.6817 , allloss: 15.7132, dt: 1312.62ms, fracRes: 0.0185, norm(attn): 0.0771, norm(output): 0.9996, norm(x): 0.9855, norm(y): 1.0022, norm:30.5309, tok/sec: 99855.40, flops:104.81, batch-reuse:1
@ 192 train 7.7236 , allloss: 17.9265, dt: 1331.00ms, fracRes: 0.0182, norm(attn): 0.0781, norm(output): 0.9996, norm(x): 0.9855, norm(y): 1.0022, norm:43.0488, tok/sec: 98476.01, flops:103.36, batch-reuse:1
@ 193 train 7.6285 , allloss: 19.3849, dt: 1336.04ms, fracRes: 0.0179, norm(attn): 0.0791, norm(output): 0.9996, norm(x): 0.9856, norm(y): 1.0022, norm:58.8341, tok/sec: 98104.60, flops:102.97, batch-reuse:1
@ 194 train 7.7475 , allloss: 18.8722, dt: 1325.62ms, fracRes: 0.0176, norm(attn): 0.0801, norm(output): 0.9996, norm(x): 0.9857, norm(y): 1.0022, norm:69.1939, tok/sec: 98875.68, flops:103.78, batch-reuse:1
@ 195 train 7.7323 , allloss: 15.9231, dt: 1339.79ms, fracRes: 0.0175, norm(attn): 0.0815, norm(output): 0.9996, norm(x): 0.9857, norm(y): 1.0022, norm:54.4872, tok/sec: 97830.58, flops:102.69, batch-reuse:1
@ 196 train 7.6376 , allloss: 13.6600, dt: 1292.18ms, fracRes: 0.0174, norm(attn): 0.0840, norm(output): 0.9996, norm(x): 0.9857, norm(y): 1.0022, norm:31.5636, tok/sec: 101434.82, flops:106.47, batch-reuse:1
@ 197 train 7.6555 , allloss: 13.4057, dt: 1296.38ms, fracRes: 0.0175, norm(attn): 0.0854, norm(output): 0.9996, norm(x): 0.9857, norm(y): 1.0022, norm:28.2738, tok/sec: 101105.87, flops:106.12, batch-reuse:1
@ 198 train 7.6335 , allloss: 13.3125, dt: 1317.52ms, fracRes: 0.0177, norm(attn): 0.0859, norm(output): 0.9996, norm(x): 0.9855, norm(y): 1.0022, norm:23.4809, tok/sec: 99484.12, flops:104.42, batch-reuse:1
@ 199 train 7.6904 , allloss: 13.0619, dt: 1298.10ms, fracRes: 0.0181, norm(attn): 0.0864, norm(output): 0.9996, norm(x): 0.9853, norm(y): 1.0022, norm:20.8079, tok/sec: 100972.39, flops:105.98, batch-reuse:1
@ 200 train 7.7137 , allloss: 12.7731, dt: 1311.51ms, fracRes: 0.0182, norm(attn): 0.0864, norm(output): 0.9996, norm(x): 0.9851, norm(y): 1.0022, norm:19.9477, tok/sec: 99939.92, flops:104.90, batch-reuse:1
@ 201 train 7.7285 , allloss: 12.1221, dt: 1307.28ms, fracRes: 0.0183, norm(attn): 0.0859, norm(output): 0.9996, norm(x): 0.9850, norm(y): 1.0022, norm:19.2625, tok/sec: 100263.36, flops:105.24, batch-reuse:1
@ 202 train 7.7703 , allloss: 11.2055, dt: 1303.08ms, fracRes: 0.0185, norm(attn): 0.0864, norm(output): 0.9996, norm(x): 0.9848, norm(y): 1.0022, norm:17.5226, tok/sec: 100586.63, flops:105.58, batch-reuse:1
@ 203 train 7.7084 , allloss: 9.8101, dt: 1303.49ms, fracRes: 0.0189, norm(attn): 0.0864, norm(output): 0.9996, norm(x): 0.9845, norm(y): 1.0022, norm:13.3192, tok/sec: 100554.95, flops:105.55, batch-reuse:1
@ 204 train 7.7065 , allloss: 8.8426, dt: 1301.60ms, fracRes: 0.0193, norm(attn): 0.0874, norm(output): 0.9996, norm(x): 0.9842, norm(y): 1.0022, norm:8.5400, tok/sec: 100700.68, flops:105.70, batch-reuse:1
@ 205 train 7.6778 , allloss: 8.2220, dt: 1304.06ms, fracRes: 0.0199, norm(attn): 0.0874, norm(output): 0.9996, norm(x): 0.9838, norm(y): 1.0022, norm:5.1189, tok/sec: 100511.03, flops:105.50, batch-reuse:1
@ 206 train 7.7150 , allloss: 7.9665, dt: 1315.61ms, fracRes: 0.0209, norm(attn): 0.0884, norm(output): 0.9996, norm(x): 0.9831, norm(y): 1.0022, norm:3.2801, tok/sec: 99628.66, flops:104.57, batch-reuse:1
@ 207 train 7.5957 , allloss: 7.7142, dt: 1305.29ms, fracRes: 0.0225, norm(attn): 0.0908, norm(output): 0.9996, norm(x): 0.9823, norm(y): 1.0022, norm:1.9176, tok/sec: 100416.17, flops:105.40, batch-reuse:1
@ 208 train 7.7042 , allloss: 7.9912, dt: 1289.64ms, fracRes: 0.0249, norm(attn): 0.0884, norm(output): 0.9995, norm(x): 0.9808, norm(y): 1.0022, norm:1.8965, tok/sec: 101634.55, flops:106.68, batch-reuse:1
@ 209 train 7.7378 , allloss: 8.9171, dt: 1310.33ms, fracRes: 0.0245, norm(attn): 0.0908, norm(output): 0.9995, norm(x): 0.9807, norm(y): 1.0022, norm:6.4828, tok/sec: 100029.44, flops:104.99, batch-reuse:1
@ 210 train 7.7059 , allloss: 15.8718, dt: 1324.41ms, fracRes: 0.0252, norm(attn): 0.0933, norm(output): 0.9995, norm(x): 0.9799, norm(y): 1.0022, norm:26.3334, tok/sec: 98966.60, flops:103.88, batch-reuse:1
@ 211 train 7.6530 , allloss: 23.8651, dt: 1339.65ms, fracRes: 0.0268, norm(attn): 0.0938, norm(output): 0.9994, norm(x): 0.9788, norm(y): 1.0022, norm:33.9880, tok/sec: 97840.28, flops:102.70, batch-reuse:1
@ 212 train 7.7290 , allloss: 27.2482, dt: 1320.34ms, fracRes: 0.0286, norm(attn): 0.0942, norm(output): 0.9994, norm(x): 0.9775, norm(y): 1.0022, norm:44.6298, tok/sec: 99271.59, flops:104.20, batch-reuse:1
@ 213 train 7.6562 , allloss: 32.0394, dt: 1331.11ms, fracRes: 0.0306, norm(attn): 0.0957, norm(output): 0.9993, norm(x): 0.9763, norm(y): 1.0022, norm:56.5698, tok/sec: 98468.41, flops:103.36, batch-reuse:1
@ 214 train 7.6910 , allloss: 34.6812, dt: 1346.86ms, fracRes: 0.0324, norm(attn): 0.0967, norm(output): 0.9993, norm(x): 0.9752, norm(y): 1.0022, norm:60.0356, tok/sec: 97316.55, flops:102.15, batch-reuse:1
@ 215 train 7.6356 , allloss: 36.7647, dt: 1294.81ms, fracRes: 0.0339, norm(attn): 0.1011, norm(output): 0.9993, norm(x): 0.9743, norm(y): 1.0022, norm:74.2717, tok/sec: 101229.14, flops:106.25, batch-reuse:1
@ 216 train 7.6468 , allloss: 34.4692, dt: 1297.96ms, fracRes: 0.0351, norm(attn): 0.1016, norm(output): 0.9992, norm(x): 0.9737, norm(y): 1.0022, norm:75.7460, tok/sec: 100983.11, flops:106.00, batch-reuse:1
@ 217 train 7.7345 , allloss: 29.5444, dt: 1289.11ms, fracRes: 0.0362, norm(attn): 0.1021, norm(output): 0.9993, norm(x): 0.9731, norm(y): 1.0022, norm:65.7946, tok/sec: 101676.47, flops:106.72, batch-reuse:1
@ 218 train 7.7208 , allloss: 26.3551, dt: 1329.26ms, fracRes: 0.0373, norm(attn): 0.1025, norm(output): 0.9993, norm(x): 0.9724, norm(y): 1.0022, norm:61.0769, tok/sec: 98605.58, flops:103.50, batch-reuse:1
@ 219 train 7.8103 , allloss: 26.1638, dt: 1284.74ms, fracRes: 0.0390, norm(attn): 0.1030, norm(output): 0.9993, norm(x): 0.9716, norm(y): 1.0023, norm:62.4558, tok/sec: 102022.03, flops:107.09, batch-reuse:1
@ 220 train 7.7352 , allloss: 26.1360, dt: 1295.29ms, fracRes: 0.0414, norm(attn): 0.1030, norm(output): 0.9992, norm(x): 0.9704, norm(y): 1.0023, norm:65.5301, tok/sec: 101190.92, flops:106.21, batch-reuse:1
@ 221 train 7.7327 , allloss: 25.8209, dt: 1305.84ms, fracRes: 0.0446, norm(attn): 0.1035, norm(output): 0.9992, norm(x): 0.9689, norm(y): 1.0023, norm:68.5291, tok/sec: 100374.05, flops:105.36, batch-reuse:1
@ 222 train 7.7017 , allloss: 25.3924, dt: 1301.82ms, fracRes: 0.0476, norm(attn): 0.1035, norm(output): 0.9992, norm(x): 0.9677, norm(y): 1.0023, norm:75.4261, tok/sec: 100683.77, flops:105.68, batch-reuse:1
@ 223 train 7.7450 , allloss: 23.2546, dt: 1312.02ms, fracRes: 0.0505, norm(attn): 0.1025, norm(output): 0.9992, norm(x): 0.9668, norm(y): 1.0023, norm:68.1581, tok/sec: 99900.60, flops:104.86, batch-reuse:1
@ 224 train 7.6788 , allloss: 22.6268, dt: 1302.98ms, fracRes: 0.0528, norm(attn): 0.1021, norm(output): 0.9993, norm(x): 0.9662, norm(y): 1.0023, norm:62.0587, tok/sec: 100594.06, flops:105.59, batch-reuse:1
@ 225 train 7.7080 , allloss: 22.1269, dt: 1323.37ms, fracRes: 0.0534, norm(attn): 0.1021, norm(output): 0.9993, norm(x): 0.9658, norm(y): 1.0023, norm:57.6269, tok/sec: 99044.11, flops:103.96, batch-reuse:1
@ 226 train 7.7439 , allloss: 20.8958, dt: 1293.80ms, fracRes: 0.0506, norm(attn): 0.1045, norm(output): 0.9993, norm(x): 0.9667, norm(y): 1.0023, norm:51.8556, tok/sec: 101307.86, flops:106.34, batch-reuse:1
@ 227 train 7.7525 , allloss: 19.7375, dt: 1307.81ms, fracRes: 0.0477, norm(attn): 0.1050, norm(output): 0.9994, norm(x): 0.9696, norm(y): 1.0023, norm:47.9025, tok/sec: 100222.18, flops:105.20, batch-reuse:1
@ 228 train 7.7238 , allloss: 18.7433, dt: 1315.75ms, fracRes: 0.0494, norm(attn): 0.1035, norm(output): 0.9994, norm(x): 0.9736, norm(y): 1.0023, norm:45.4775, tok/sec: 99617.59, flops:104.56, batch-reuse:1
@ 229 train 7.7598 , allloss: 17.9146, dt: 1307.87ms, fracRes: 0.0588, norm(attn): 0.1011, norm(output): 0.9994, norm(x): 0.9778, norm(y): 1.0023, norm:43.8775, tok/sec: 100217.63, flops:105.19, batch-reuse:1
@ 230 train 7.7559 , allloss: 17.0903, dt: 1315.56ms, fracRes: 0.0735, norm(attn): 0.0986, norm(output): 0.9994, norm(x): 0.9830, norm(y): 1.0023, norm:42.2110, tok/sec: 99632.27, flops:104.58, batch-reuse:1
@ 231 train 7.6930 , allloss: 16.1975, dt: 1297.35ms, fracRes: 0.0848, norm(attn): 0.0947, norm(output): 0.9994, norm(x): 0.9879, norm(y): 1.0023, norm:40.3906, tok/sec: 101030.25, flops:106.04, batch-reuse:1
@ 232 train 7.6837 , allloss: 14.9393, dt: 1293.64ms, fracRes: 0.0899, norm(attn): 0.0942, norm(output): 0.9994, norm(x): 0.9901, norm(y): 1.0023, norm:37.3493, tok/sec: 101320.37, flops:106.35, batch-reuse:1
@ 233 train 7.7519 , allloss: 13.7729, dt: 1294.23ms, fracRes: 0.0914, norm(attn): 0.0938, norm(output): 0.9993, norm(x): 0.9906, norm(y): 1.0023, norm:34.5547, tok/sec: 101274.45, flops:106.30, batch-reuse:1
@ 234 train 7.6186 , allloss: 12.7998, dt: 1306.30ms, fracRes: 0.0918, norm(attn): 0.0938, norm(output): 0.9993, norm(x): 0.9906, norm(y): 1.0023, norm:32.5540, tok/sec: 100338.07, flops:105.32, batch-reuse:1
@ 235 train 7.7202 , allloss: 12.3361, dt: 1299.64ms, fracRes: 0.0920, norm(attn): 0.0913, norm(output): 0.9993, norm(x): 0.9904, norm(y): 1.0023, norm:31.3652, tok/sec: 100852.23, flops:105.86, batch-reuse:1
@ 236 train 7.6268 , allloss: 11.5469, dt: 1324.62ms, fracRes: 0.0920, norm(attn): 0.0933, norm(output): 0.9993, norm(x): 0.9904, norm(y): 1.0023, norm:29.5940, tok/sec: 98950.64, flops:103.86, batch-reuse:1
@ 237 train 7.7336 , allloss: 10.7093, dt: 1294.19ms, fracRes: 0.0920, norm(attn): 0.0938, norm(output): 0.9994, norm(x): 0.9904, norm(y): 1.0024, norm:25.6780, tok/sec: 101277.49, flops:106.30, batch-reuse:1
@ 238 train 7.6903 , allloss: 9.9228, dt: 1319.18ms, fracRes: 0.0921, norm(attn): 0.0942, norm(output): 0.9994, norm(x): 0.9905, norm(y): 1.0024, norm:22.3178, tok/sec: 99358.51, flops:104.29, batch-reuse:1
@ 239 train 7.6965 , allloss: 9.5943, dt: 1318.99ms, fracRes: 0.0922, norm(attn): 0.0972, norm(output): 0.9994, norm(x): 0.9906, norm(y): 1.0024, norm:19.4896, tok/sec: 99373.33, flops:104.31, batch-reuse:1
@ 240 train 7.7533 , allloss: 10.2015, dt: 1294.36ms, fracRes: 0.0924, norm(attn): 0.1001, norm(output): 0.9994, norm(x): 0.9905, norm(y): 1.0025, norm:21.8673, tok/sec: 101264.25, flops:106.29, batch-reuse:1
@ 241 train 7.7079 , allloss: 12.3983, dt: 1311.65ms, fracRes: 0.0927, norm(attn): 0.1016, norm(output): 0.9994, norm(x): 0.9904, norm(y): 1.0025, norm:34.2961, tok/sec: 99929.37, flops:104.89, batch-reuse:1
@ 242 train 7.7370 , allloss: 13.8037, dt: 1338.43ms, fracRes: 0.0930, norm(attn): 0.1021, norm(output): 0.9994, norm(x): 0.9902, norm(y): 1.0025, norm:42.0080, tok/sec: 97929.60, flops:102.79, batch-reuse:1
@ 243 train 7.6012 , allloss: 12.4690, dt: 1325.35ms, fracRes: 0.0935, norm(attn): 0.1035, norm(output): 0.9994, norm(x): 0.9899, norm(y): 1.0026, norm:39.9105, tok/sec: 98896.03, flops:103.80, batch-reuse:1
@ 244 train 7.7567 , allloss: 10.0106, dt: 1341.69ms, fracRes: 0.0941, norm(attn): 0.1055, norm(output): 0.9994, norm(x): 0.9894, norm(y): 1.0026, norm:21.6109, tok/sec: 97691.78, flops:102.54, batch-reuse:1
@ 245 train 7.6235 , allloss: 8.9682, dt: 1335.03ms, fracRes: 0.0955, norm(attn): 0.1084, norm(output): 0.9994, norm(x): 0.9884, norm(y): 1.0026, norm:14.1855, tok/sec: 98178.80, flops:103.05, batch-reuse:1
@ 246 train 7.8078 , allloss: 8.7295, dt: 1292.44ms, fracRes: 0.0982, norm(attn): 0.1084, norm(output): 0.9994, norm(x): 0.9865, norm(y): 1.0027, norm:10.7203, tok/sec: 101414.14, flops:106.45, batch-reuse:1
@ 247 train 7.7224 , allloss: 8.2862, dt: 1346.47ms, fracRes: 0.0997, norm(attn): 0.1094, norm(output): 0.9994, norm(x): 0.9854, norm(y): 1.0027, norm:7.5766, tok/sec: 97345.25, flops:102.18, batch-reuse:1
@ 248 train 7.6776 , allloss: 8.1106, dt: 1322.61ms, fracRes: 0.1001, norm(attn): 0.1108, norm(output): 0.9994, norm(x): 0.9849, norm(y): 1.0027, norm:7.1707, tok/sec: 99101.03, flops:104.02, batch-reuse:1
@ 249 train 7.6398 , allloss: 8.0160, dt: 1291.12ms, fracRes: 0.1034, norm(attn): 0.1113, norm(output): 0.9994, norm(x): 0.9826, norm(y): 1.0028, norm:6.7180, tok/sec: 101517.78, flops:106.56, batch-reuse:1
@ 250 train 7.6945 , allloss: 8.0153, dt: 1295.70ms, fracRes: 0.1144, norm(attn): 0.1084, norm(output): 0.9994, norm(x): 0.9771, norm(y): 1.0028, norm:5.0859, tok/sec: 101159.44, flops:106.18, batch-reuse:1
@ 251 train 7.6180 , allloss: 7.7661, dt: 1287.17ms, fracRes: 0.1278, norm(attn): 0.1152, norm(output): 0.9995, norm(x): 0.9737, norm(y): 1.0028, norm:2.4960, tok/sec: 101829.94, flops:106.88, batch-reuse:1
@ 252 train 7.7721 , allloss: 7.8733, dt: 1291.50ms, fracRes: 0.1094, norm(attn): 0.1172, norm(output): 0.9995, norm(x): 0.9802, norm(y): 1.0029, norm:2.0932, tok/sec: 101487.85, flops:106.52, batch-reuse:1
@ 253 train 7.6479 , allloss: 7.7259, dt: 1298.28ms, fracRes: 0.1058, norm(attn): 0.1172, norm(output): 0.9995, norm(x): 0.9827, norm(y): 1.0029, norm:1.7024, tok/sec: 100958.26, flops:105.97, batch-reuse:1
@ 254 train 7.6021 , allloss: 7.6734, dt: 1335.18ms, fracRes: 0.1116, norm(attn): 0.1123, norm(output): 0.9995, norm(x): 0.9798, norm(y): 1.0029, norm:1.1428, tok/sec: 98168.03, flops:103.04, batch-reuse:1
@ 255 train 7.6198 , allloss: 9.5962, dt: 1305.12ms, fracRes: 0.1067, norm(attn): 0.1206, norm(output): 0.9994, norm(x): 0.9794, norm(y): 1.0029, norm:27.4093, tok/sec: 100428.69, flops:105.41, batch-reuse:1
@ 256 train 7.6473 , allloss: 28.5760, dt: 1325.45ms, fracRes: 0.1163, norm(attn): 0.1230, norm(output): 0.9993, norm(x): 0.9723, norm(y): 1.0029, norm:85.6646, tok/sec: 98888.93, flops:103.80, batch-reuse:1
@ 257 train 7.7223 , allloss: 30.9503, dt: 1316.48ms, fracRes: 0.1272, norm(attn): 0.1221, norm(output): 0.9991, norm(x): 0.9686, norm(y): 1.0029, norm:74.1801, tok/sec: 99562.42, flops:104.50, batch-reuse:1
@ 258 train 7.6918 , allloss: 57.4264, dt: 1305.16ms, fracRes: 0.1325, norm(attn): 0.1250, norm(output): 0.9990, norm(x): 0.9684, norm(y): 1.0029, norm:91.6508, tok/sec: 100426.11, flops:105.41, batch-reuse:1
@ 259 train 7.7137 , allloss: 57.8432, dt: 1305.09ms, fracRes: 0.1346, norm(attn): 0.1299, norm(output): 0.9989, norm(x): 0.9691, norm(y): 1.0029, norm:65.3957, tok/sec: 100431.26, flops:105.42, batch-reuse:1
@ 260 train 7.8016 , allloss: 35.4640, dt: 1325.27ms, fracRes: 0.1354, norm(attn): 0.1328, norm(output): 0.9988, norm(x): 0.9702, norm(y): 1.0030, norm:69.5949, tok/sec: 98902.40, flops:103.81, batch-reuse:1
@ 261 train 7.7448 , allloss: 25.1374, dt: 1346.88ms, fracRes: 0.1360, norm(attn): 0.1338, norm(output): 0.9988, norm(x): 0.9716, norm(y): 1.0030, norm:58.0623, tok/sec: 97315.18, flops:102.15, batch-reuse:1
@ 262 train 7.7657 , allloss: 20.3175, dt: 1349.40ms, fracRes: 0.1354, norm(attn): 0.1367, norm(output): 0.9988, norm(x): 0.9741, norm(y): 1.0030, norm:44.3588, tok/sec: 97133.76, flops:101.95, batch-reuse:1
@ 263 train 7.7380 , allloss: 18.0613, dt: 1321.12ms, fracRes: 0.1349, norm(attn): 0.1396, norm(output): 0.9988, norm(x): 0.9796, norm(y): 1.0030, norm:38.5456, tok/sec: 99212.81, flops:104.14, batch-reuse:1
@ 264 train 7.7108 , allloss: 19.9188, dt: 1309.10ms, fracRes: 0.1471, norm(attn): 0.1377, norm(output): 0.9988, norm(x): 0.9856, norm(y): 1.0029, norm:50.1284, tok/sec: 100123.79, flops:105.09, batch-reuse:1
@ 265 train 7.7108 , allloss: 21.0083, dt: 1332.68ms, fracRes: 0.0954, norm(attn): 0.1504, norm(output): 0.9987, norm(x): 0.9844, norm(y): 1.0028, norm:86.0650, tok/sec: 98352.25, flops:103.23, batch-reuse:1
@ 266 train 7.7053 , allloss: 22.1030, dt: 1325.94ms, fracRes: 0.0981, norm(attn): 0.1406, norm(output): 0.9986, norm(x): 0.9876, norm(y): 1.0029, norm:100.8822, tok/sec: 98852.18, flops:103.76, batch-reuse:1
@ 267 train 7.6811 , allloss: 14.5242, dt: 1274.05ms, fracRes: 0.1020, norm(attn): 0.1504, norm(output): 0.9987, norm(x): 0.9869, norm(y): 1.0029, norm:73.4794, tok/sec: 102878.17, flops:107.98, batch-reuse:1
@ 268 train 7.7753 , allloss: 13.1604, dt: 1318.29ms, fracRes: 0.1216, norm(attn): 0.1533, norm(output): 0.9988, norm(x): 0.9813, norm(y): 1.0029, norm:56.0056, tok/sec: 99425.59, flops:104.36, batch-reuse:1
@ 269 train 7.7064 , allloss: 12.8326, dt: 1308.86ms, fracRes: 0.1061, norm(attn): 0.1572, norm(output): 0.9988, norm(x): 0.9859, norm(y): 1.0029, norm:56.7540, tok/sec: 100142.40, flops:105.11, batch-reuse:1
@ 270 train 7.7875 , allloss: 11.6843, dt: 1338.84ms, fracRes: 0.0970, norm(attn): 0.1504, norm(output): 0.9987, norm(x): 0.9888, norm(y): 1.0029, norm:56.0437, tok/sec: 97899.69, flops:102.76, batch-reuse:1
@ 271 train 7.6981 , allloss: 26.8940, dt: 1324.69ms, fracRes: 0.0945, norm(attn): 0.1348, norm(output): 0.9987, norm(x): 0.9900, norm(y): 1.0029, norm:76.9789, tok/sec: 98945.35, flops:103.86, batch-reuse:1
@ 272 train 7.6945 , allloss: 22.8216, dt: 1283.56ms, fracRes: 0.0934, norm(attn): 0.1289, norm(output): 0.9987, norm(x): 0.9907, norm(y): 1.0029, norm:66.9136, tok/sec: 102116.23, flops:107.18, batch-reuse:1
@ 273 train 7.8607 , allloss: 16.3939, dt: 1285.54ms, fracRes: 0.0930, norm(attn): 0.1279, norm(output): 0.9987, norm(x): 0.9908, norm(y): 1.0028, norm:45.6971, tok/sec: 101958.74, flops:107.02, batch-reuse:1
@ 274 train 7.7392 , allloss: 41.5193, dt: 1346.77ms, fracRes: 0.0932, norm(attn): 0.1211, norm(output): 0.9986, norm(x): 0.9907, norm(y): 1.0027, norm:90.4504, tok/sec: 97323.46, flops:102.15, batch-reuse:1
@ 275 train 7.7078 , allloss: 14.0263, dt: 1327.95ms, fracRes: 0.0940, norm(attn): 0.1396, norm(output): 0.9988, norm(x): 0.9907, norm(y): 1.0029, norm:40.5381, tok/sec: 98702.64, flops:103.60, batch-reuse:1
@ 276 train 7.6982 , allloss: 15.3363, dt: 1317.94ms, fracRes: 0.0974, norm(attn): 0.1426, norm(output): 0.9989, norm(x): 0.9895, norm(y): 1.0030, norm:40.7670, tok/sec: 99452.10, flops:104.39, batch-reuse:1
@ 277 train 7.6000 , allloss: 15.7360, dt: 1282.72ms, fracRes: 0.1041, norm(attn): 0.1504, norm(output): 0.9989, norm(x): 0.9873, norm(y): 1.0031, norm:38.3939, tok/sec: 102182.51, flops:107.25, batch-reuse:1
@ 278 train 7.6954 , allloss: 13.9121, dt: 1320.62ms, fracRes: 0.1173, norm(attn): 0.1582, norm(output): 0.9989, norm(x): 0.9840, norm(y): 1.0032, norm:34.0024, tok/sec: 99250.06, flops:104.18, batch-reuse:1
@ 279 train 7.6480 , allloss: 10.5498, dt: 1326.16ms, fracRes: 0.1436, norm(attn): 0.1670, norm(output): 0.9990, norm(x): 0.9796, norm(y): 1.0032, norm:23.5612, tok/sec: 98835.92, flops:103.74, batch-reuse:1
@ 280 train 7.7383 , allloss: 10.9847, dt: 1314.51ms, fracRes: 0.1809, norm(attn): 0.1670, norm(output): 0.9990, norm(x): 0.9785, norm(y): 1.0033, norm:21.3144, tok/sec: 99711.54, flops:104.66, batch-reuse:1
@ 281 train 7.6687 , allloss: 11.0131, dt: 1328.03ms, fracRes: 0.2046, norm(attn): 0.1670, norm(output): 0.9990, norm(x): 0.9781, norm(y): 1.0033, norm:18.9424, tok/sec: 98696.93, flops:103.60, batch-reuse:1
@ 282 train 7.6279 , allloss: 10.5648, dt: 1272.56ms, fracRes: 0.2228, norm(attn): 0.1660, norm(output): 0.9990, norm(x): 0.9756, norm(y): 1.0034, norm:18.7973, tok/sec: 102998.57, flops:108.11, batch-reuse:1
@ 283 train 7.5818 , allloss: 9.8788, dt: 1304.30ms, fracRes: 0.2444, norm(attn): 0.1621, norm(output): 0.9991, norm(x): 0.9731, norm(y): 1.0034, norm:18.8133, tok/sec: 100492.19, flops:105.48, batch-reuse:1
@ 284 train 7.6899 , allloss: 9.2641, dt: 1308.82ms, fracRes: 0.2658, norm(attn): 0.1592, norm(output): 0.9991, norm(x): 0.9715, norm(y): 1.0034, norm:16.1379, tok/sec: 100145.11, flops:105.12, batch-reuse:1
@ 285 train 7.6904 , allloss: 8.5637, dt: 1287.86ms, fracRes: 0.2774, norm(attn): 0.1592, norm(output): 0.9991, norm(x): 0.9717, norm(y): 1.0035, norm:11.1813, tok/sec: 101775.08, flops:106.83, batch-reuse:1
@ 286 train 7.7005 , allloss: 8.0652, dt: 1323.75ms, fracRes: 0.2789, norm(attn): 0.1660, norm(output): 0.9991, norm(x): 0.9729, norm(y): 1.0035, norm:5.9562, tok/sec: 99015.51, flops:103.93, batch-reuse:1
@ 287 train 7.6880 , allloss: 7.8265, dt: 1309.13ms, fracRes: 0.2719, norm(attn): 0.1729, norm(output): 0.9991, norm(x): 0.9757, norm(y): 1.0035, norm:2.5151, tok/sec: 100121.29, flops:105.09, batch-reuse:1
@ 288 train 7.7049 , allloss: 7.7684, dt: 1284.13ms, fracRes: 0.2668, norm(attn): 0.1826, norm(output): 0.9991, norm(x): 0.9769, norm(y): 1.0035, norm:1.0133, tok/sec: 102070.37, flops:107.14, batch-reuse:1
@ 289 train 7.6708 , allloss: 7.7986, dt: 1293.85ms, fracRes: 0.2677, norm(attn): 0.1846, norm(output): 0.9991, norm(x): 0.9737, norm(y): 1.0035, norm:1.5947, tok/sec: 101303.62, flops:106.33, batch-reuse:1
@ 290 train 7.6384 , allloss: 7.6856, dt: 1293.15ms, fracRes: 0.2700, norm(attn): 0.1816, norm(output): 0.9991, norm(x): 0.9655, norm(y): 1.0035, norm:0.4609, tok/sec: 101358.40, flops:106.39, batch-reuse:1
@ 291 train 7.5772 , allloss: 7.6520, dt: 1331.74ms, fracRes: 0.2760, norm(attn): 0.1797, norm(output): 0.9991, norm(x): 0.9559, norm(y): 1.0035, norm:0.6418, tok/sec: 98421.83, flops:103.31, batch-reuse:1
@ 292 train 7.6045 , allloss: 7.7257, dt: 1301.15ms, fracRes: 0.2880, norm(attn): 0.1719, norm(output): 0.9991, norm(x): 0.9424, norm(y): 1.0036, norm:1.0485, tok/sec: 100735.44, flops:105.74, batch-reuse:1
@ 293 train 7.6839 , allloss: 7.9126, dt: 1324.68ms, fracRes: 0.2929, norm(attn): 0.1719, norm(output): 0.9991, norm(x): 0.9440, norm(y): 1.0036, norm:1.7903, tok/sec: 98946.05, flops:103.86, batch-reuse:1
@ 294 train 7.6498 , allloss: 8.0922, dt: 1275.61ms, fracRes: 0.2998, norm(attn): 0.1699, norm(output): 0.9991, norm(x): 0.9481, norm(y): 1.0036, norm:3.3041, tok/sec: 102752.24, flops:107.85, batch-reuse:1
@ 295 train 7.6697 , allloss: 8.4821, dt: 1315.52ms, fracRes: 0.3077, norm(attn): 0.1621, norm(output): 0.9990, norm(x): 0.9551, norm(y): 1.0036, norm:5.9958, tok/sec: 99635.36, flops:104.58, batch-reuse:1
@ 296 train 7.5886 , allloss: 8.6606, dt: 1286.07ms, fracRes: 0.3123, norm(attn): 0.1562, norm(output): 0.9989, norm(x): 0.9646, norm(y): 1.0036, norm:8.3326, tok/sec: 101916.91, flops:106.98, batch-reuse:1
@ 297 train 7.5548 , allloss: 8.7091, dt: 1308.42ms, fracRes: 0.3149, norm(attn): 0.1514, norm(output): 0.9988, norm(x): 0.9692, norm(y): 1.0036, norm:9.5654, tok/sec: 100175.79, flops:105.15, batch-reuse:1
@ 298 train 7.6654 , allloss: 9.0935, dt: 1281.56ms, fracRes: 0.3214, norm(attn): 0.1484, norm(output): 0.9988, norm(x): 0.9693, norm(y): 1.0036, norm:13.6189, tok/sec: 102275.74, flops:107.35, batch-reuse:1
@ 299 train 7.6673 , allloss: 8.5119, dt: 1295.89ms, fracRes: 0.3360, norm(attn): 0.1465, norm(output): 0.9988, norm(x): 0.9817, norm(y): 1.0036, norm:7.2513, tok/sec: 101144.31, flops:106.16, batch-reuse:1
@ 300 train 7.6509 , allloss: 8.1340, dt: 1307.95ms, fracRes: 0.3430, norm(attn): 0.1465, norm(output): 0.9988, norm(x): 0.9871, norm(y): 1.0036, norm:5.3156, tok/sec: 100211.98, flops:105.19, batch-reuse:1
@ 301 train 7.8016 , allloss: 8.0450, dt: 1318.62ms, fracRes: 0.3460, norm(attn): 0.1465, norm(output): 0.9988, norm(x): 0.9878, norm(y): 1.0036, norm:3.8851, tok/sec: 99401.00, flops:104.33, batch-reuse:1
@ 302 train 7.6317 , allloss: 7.7820, dt: 1284.12ms, fracRes: 0.3488, norm(attn): 0.1484, norm(output): 0.9988, norm(x): 0.9868, norm(y): 1.0037, norm:3.1504, tok/sec: 102071.51, flops:107.14, batch-reuse:1
@ 303 train 7.6634 , allloss: 7.8201, dt: 1292.02ms, fracRes: 0.3527, norm(attn): 0.1514, norm(output): 0.9988, norm(x): 0.9852, norm(y): 1.0037, norm:2.5342, tok/sec: 101447.04, flops:106.48, batch-reuse:1
@ 304 train 7.6240 , allloss: 7.8020, dt: 1293.68ms, fracRes: 0.3560, norm(attn): 0.1553, norm(output): 0.9988, norm(x): 0.9842, norm(y): 1.0038, norm:2.5840, tok/sec: 101317.36, flops:106.35, batch-reuse:1
@ 305 train 7.5663 , allloss: 7.6917, dt: 1307.64ms, fracRes: 0.3648, norm(attn): 0.1562, norm(output): 0.9988, norm(x): 0.9820, norm(y): 1.0038, norm:1.2923, tok/sec: 100235.35, flops:105.21, batch-reuse:1
@ 306 train 7.5731 , allloss: 7.7901, dt: 1295.78ms, fracRes: 0.3809, norm(attn): 0.1553, norm(output): 0.9989, norm(x): 0.9805, norm(y): 1.0038, norm:2.7543, tok/sec: 101153.26, flops:106.17, batch-reuse:1
@ 307 train 7.7683 , allloss: 8.2617, dt: 1287.89ms, fracRes: 0.3995, norm(attn): 0.1484, norm(output): 0.9989, norm(x): 0.9829, norm(y): 1.0039, norm:6.9372, tok/sec: 101772.86, flops:106.82, batch-reuse:1
@ 308 train 7.6245 , allloss: 8.4040, dt: 1291.58ms, fracRes: 0.4128, norm(attn): 0.1406, norm(output): 0.9990, norm(x): 0.9874, norm(y): 1.0039, norm:11.2711, tok/sec: 101481.65, flops:106.52, batch-reuse:1
@ 309 train 7.6560 , allloss: 8.2404, dt: 1280.93ms, fracRes: 0.4194, norm(attn): 0.1387, norm(output): 0.9990, norm(x): 0.9900, norm(y): 1.0040, norm:8.9054, tok/sec: 102325.46, flops:107.40, batch-reuse:1
@ 310 train 7.6928 , allloss: 7.9217, dt: 1284.62ms, fracRes: 0.4221, norm(attn): 0.1396, norm(output): 0.9990, norm(x): 0.9907, norm(y): 1.0040, norm:3.7509, tok/sec: 102031.44, flops:107.10, batch-reuse:1
@ 311 train 7.7011 , allloss: 7.7601, dt: 1323.64ms, fracRes: 0.4233, norm(attn): 0.1406, norm(output): 0.9990, norm(x): 0.9905, norm(y): 1.0041, norm:1.0976, tok/sec: 99024.04, flops:103.94, batch-reuse:1
@ 312 train 7.7929 , allloss: 7.8033, dt: 1286.35ms, fracRes: 0.4238, norm(attn): 0.1445, norm(output): 0.9990, norm(x): 0.9902, norm(y): 1.0042, norm:0.5637, tok/sec: 101894.17, flops:106.95, batch-reuse:1
@ 313 train 7.5991 , allloss: 7.6427, dt: 1301.99ms, fracRes: 0.4245, norm(attn): 0.1562, norm(output): 0.9990, norm(x): 0.9896, norm(y): 1.0043, norm:1.1577, tok/sec: 100670.69, flops:105.67, batch-reuse:1
@ 314 train 7.6052 , allloss: 17.7337, dt: 1281.56ms, fracRes: 0.4257, norm(attn): 0.1582, norm(output): 0.9989, norm(x): 0.9888, norm(y): 1.0044, norm:52.4193, tok/sec: 102275.17, flops:107.35, batch-reuse:1
@ 315 train 7.6578 , allloss: 22.6397, dt: 1293.88ms, fracRes: 0.4258, norm(attn): 0.1582, norm(output): 0.9989, norm(x): 0.9884, norm(y): 1.0044, norm:33.4489, tok/sec: 101301.62, flops:106.33, batch-reuse:1
@ 316 train 7.6772 , allloss: 21.5553, dt: 1308.33ms, fracRes: 0.4245, norm(attn): 0.1582, norm(output): 0.9989, norm(x): 0.9872, norm(y): 1.0045, norm:27.5078, tok/sec: 100182.65, flops:105.15, batch-reuse:1
@ 317 train 7.7111 , allloss: 19.0357, dt: 1337.55ms, fracRes: 0.4188, norm(attn): 0.1611, norm(output): 0.9989, norm(x): 0.9810, norm(y): 1.0045, norm:27.7481, tok/sec: 97994.38, flops:102.86, batch-reuse:1
@ 318 train 7.6257 , allloss: 16.7216, dt: 1302.06ms, fracRes: 0.4025, norm(attn): 0.1621, norm(output): 0.9988, norm(x): 0.9673, norm(y): 1.0044, norm:29.3737, tok/sec: 100665.37, flops:105.66, batch-reuse:1
@ 319 train 7.5980 , allloss: 15.2112, dt: 1280.28ms, fracRes: 0.3811, norm(attn): 0.1602, norm(output): 0.9987, norm(x): 0.9599, norm(y): 1.0042, norm:33.2824, tok/sec: 102377.60, flops:107.46, batch-reuse:1
@ 320 train 7.6649 , allloss: 13.5075, dt: 1290.90ms, fracRes: 0.3700, norm(attn): 0.1631, norm(output): 0.9987, norm(x): 0.9622, norm(y): 1.0041, norm:32.9916, tok/sec: 101535.08, flops:106.57, batch-reuse:1
@ 321 train 7.7125 , allloss: 11.3500, dt: 1305.96ms, fracRes: 0.3788, norm(attn): 0.1719, norm(output): 0.9988, norm(x): 0.9568, norm(y): 1.0042, norm:26.1211, tok/sec: 100364.62, flops:105.35, batch-reuse:1
@ 322 train 7.6362 , allloss: 9.4217, dt: 1318.01ms, fracRes: 0.4084, norm(attn): 0.1885, norm(output): 0.9989, norm(x): 0.9614, norm(y): 1.0046, norm:14.7717, tok/sec: 99447.14, flops:104.38, batch-reuse:1
@ 323 train 7.7162 , allloss: 8.2524, dt: 1307.58ms, fracRes: 0.4317, norm(attn): 0.2021, norm(output): 0.9990, norm(x): 0.9797, norm(y): 1.0048, norm:5.7974, tok/sec: 100240.32, flops:105.22, batch-reuse:1
@ 324 train 7.6329 , allloss: 7.6957, dt: 1290.85ms, fracRes: 0.4402, norm(attn): 0.2041, norm(output): 0.9990, norm(x): 0.9808, norm(y): 1.0048, norm:1.0686, tok/sec: 101539.47, flops:106.58, batch-reuse:1
@ 325 train 7.6551 , allloss: 7.6997, dt: 1320.67ms, fracRes: 0.4467, norm(attn): 0.2070, norm(output): 0.9991, norm(x): 0.9779, norm(y): 1.0048, norm:0.6123, tok/sec: 99246.37, flops:104.17, batch-reuse:1
@ 326 train 7.6779 , allloss: 7.6861, dt: 1327.04ms, fracRes: 0.4392, norm(attn): 0.2197, norm(output): 0.9991, norm(x): 0.9804, norm(y): 1.0048, norm:0.4340, tok/sec: 98770.07, flops:103.67, batch-reuse:1
@ 327 train 7.7430 , allloss: 7.7482, dt: 1313.70ms, fracRes: 0.4404, norm(attn): 0.2305, norm(output): 0.9991, norm(x): 0.9790, norm(y): 1.0048, norm:0.5614, tok/sec: 99772.80, flops:104.72, batch-reuse:1
@ 328 train 7.6361 , allloss: 7.6441, dt: 1291.90ms, fracRes: 0.4427, norm(attn): 0.2344, norm(output): 0.9991, norm(x): 0.9766, norm(y): 1.0048, norm:0.4503, tok/sec: 101456.40, flops:106.49, batch-reuse:1
@ 329 train 7.6616 , allloss: 7.6751, dt: 1278.13ms, fracRes: 0.4457, norm(attn): 0.2373, norm(output): 0.9991, norm(x): 0.9736, norm(y): 1.0048, norm:0.6125, tok/sec: 102549.91, flops:107.64, batch-reuse:1
@ 330 train 7.6455 , allloss: 7.6697, dt: 1284.50ms, fracRes: 0.4504, norm(attn): 0.2402, norm(output): 0.9991, norm(x): 0.9694, norm(y): 1.0048, norm:0.5448, tok/sec: 102041.55, flops:107.11, batch-reuse:1
@ 331 train 7.5965 , allloss: 7.6406, dt: 1292.95ms, fracRes: 0.4590, norm(attn): 0.2354, norm(output): 0.9991, norm(x): 0.9626, norm(y): 1.0048, norm:0.5295, tok/sec: 101374.63, flops:106.41, batch-reuse:1
@ 332 train 7.5939 , allloss: 7.6860, dt: 1293.83ms, fracRes: 0.4756, norm(attn): 0.2334, norm(output): 0.9991, norm(x): 0.9507, norm(y): 1.0047, norm:0.9127, tok/sec: 101305.71, flops:106.33, batch-reuse:1
@ 333 train 7.6508 , allloss: 7.8149, dt: 1294.90ms, fracRes: 0.4982, norm(attn): 0.2188, norm(output): 0.9991, norm(x): 0.9357, norm(y): 1.0047, norm:1.4771, tok/sec: 101221.94, flops:106.25, batch-reuse:1
@ 334 train 7.5946 , allloss: 7.8077, dt: 1307.41ms, fracRes: 0.5130, norm(attn): 0.2061, norm(output): 0.9991, norm(x): 0.9301, norm(y): 1.0047, norm:2.0029, tok/sec: 100253.32, flops:105.23, batch-reuse:1
@ 335 train 7.5947 , allloss: 7.8473, dt: 1291.40ms, fracRes: 0.5230, norm(attn): 0.1973, norm(output): 0.9991, norm(x): 0.9318, norm(y): 1.0047, norm:2.6191, tok/sec: 101496.04, flops:106.53, batch-reuse:1
@ 336 train 7.6099 , allloss: 7.9321, dt: 1316.52ms, fracRes: 0.5273, norm(attn): 0.1875, norm(output): 0.9990, norm(x): 0.9397, norm(y): 1.0047, norm:3.7905, tok/sec: 99559.37, flops:104.50, batch-reuse:1
@ 337 train 7.6299 , allloss: 8.0314, dt: 1302.51ms, fracRes: 0.5397, norm(attn): 0.1758, norm(output): 0.9990, norm(x): 0.9373, norm(y): 1.0047, norm:4.9593, tok/sec: 100630.14, flops:105.62, batch-reuse:1
@ 338 train 7.5963 , allloss: 7.7956, dt: 1285.08ms, fracRes: 0.5556, norm(attn): 0.1641, norm(output): 0.9990, norm(x): 0.9235, norm(y): 1.0047, norm:1.7584, tok/sec: 101995.25, flops:107.06, batch-reuse:1
@ 339 train 7.6668 , allloss: 7.9853, dt: 1311.55ms, fracRes: 0.6487, norm(attn): 0.1157, norm(output): 0.9988, norm(x): 0.8474, norm(y): 1.0046, norm:2.1980, tok/sec: 99936.83, flops:104.90, batch-reuse:1
@ 340 train 7.6805 , allloss: 8.1234, dt: 1318.64ms, fracRes: 0.7118, norm(attn): 0.0864, norm(output): 0.9989, norm(x): 0.8915, norm(y): 1.0048, norm:4.4339, tok/sec: 99399.72, flops:104.33, batch-reuse:1
@ 341 train 7.6132 , allloss: 8.4116, dt: 1302.86ms, fracRes: 0.7400, norm(attn): 0.0698, norm(output): 0.9988, norm(x): 0.9702, norm(y): 1.0049, norm:8.8082, tok/sec: 100603.21, flops:105.60, batch-reuse:1
@ 342 train 7.5511 , allloss: 8.0794, dt: 1323.21ms, fracRes: 0.7436, norm(attn): 0.0640, norm(output): 0.9987, norm(x): 0.9794, norm(y): 1.0050, norm:5.9207, tok/sec: 99055.94, flops:103.97, batch-reuse:1
@ 343 train 7.5966 , allloss: 8.2020, dt: 1356.28ms, fracRes: 0.7411, norm(attn): 0.0625, norm(output): 0.9986, norm(x): 0.9654, norm(y): 1.0049, norm:7.3497, tok/sec: 96640.57, flops:101.44, batch-reuse:1
@ 344 train 7.5678 , allloss: 8.1516, dt: 1348.58ms, fracRes: 0.7431, norm(attn): 0.0603, norm(output): 0.9985, norm(x): 0.9662, norm(y): 1.0050, norm:7.0136, tok/sec: 97192.53, flops:102.02, batch-reuse:1
@ 345 train 7.5917 , allloss: 7.7795, dt: 1301.44ms, fracRes: 0.7484, norm(attn): 0.0630, norm(output): 0.9985, norm(x): 0.9763, norm(y): 1.0050, norm:2.1664, tok/sec: 100713.43, flops:105.71, batch-reuse:1
@ 346 train 7.6326 , allloss: 7.7022, dt: 1314.81ms, fracRes: 0.7505, norm(attn): 0.0630, norm(output): 0.9985, norm(x): 0.9839, norm(y): 1.0051, norm:0.9575, tok/sec: 99688.71, flops:104.64, batch-reuse:1
@ 347 train 7.6529 , allloss: 11.6858, dt: 1340.77ms, fracRes: 0.6829, norm(attn): 0.0625, norm(output): 0.9983, norm(x): 0.8996, norm(y): 1.0049, norm:13.1635, tok/sec: 97758.99, flops:102.61, batch-reuse:1
@ 348 train 8.2903 , allloss: 34.9798, dt: 1306.96ms, fracRes: 0.7473, norm(attn): 0.0447, norm(output): 0.9980, norm(x): 0.9841, norm(y): 1.0049, norm:64.2197, tok/sec: 100287.85, flops:105.27, batch-reuse:1
@ 349 train 7.6195 , allloss: 7.6803, dt: 1296.42ms, fracRes: 0.7583, norm(attn): 0.0466, norm(output): 0.9984, norm(x): 0.9187, norm(y): 1.0052, norm:0.8082, tok/sec: 101103.23, flops:106.12, batch-reuse:1
@ 350 train 7.6357 , allloss: 7.6560, dt: 1308.55ms, fracRes: 0.7649, norm(attn): 0.0500, norm(output): 0.9984, norm(x): 0.9070, norm(y): 1.0053, norm:0.4503, tok/sec: 100165.91, flops:105.14, batch-reuse:1
@ 351 train 7.6416 , allloss: 7.6992, dt: 1310.54ms, fracRes: 0.7747, norm(attn): 0.0449, norm(output): 0.9984, norm(x): 0.8674, norm(y): 1.0052, norm:0.7829, tok/sec: 100013.63, flops:104.98, batch-reuse:1
@ 352 train 7.6682 , allloss: 8.0517, dt: 1286.07ms, fracRes: 0.7884, norm(attn): 0.0354, norm(output): 0.9983, norm(x): 0.8257, norm(y): 1.0049, norm:2.9751, tok/sec: 101916.80, flops:106.98, batch-reuse:1
@ 353 train 7.5930 , allloss: 7.7820, dt: 1283.32ms, fracRes: 0.7796, norm(attn): 0.0405, norm(output): 0.9983, norm(x): 0.8680, norm(y): 1.0053, norm:1.1213, tok/sec: 102135.39, flops:107.20, batch-reuse:1
@ 354 train 7.5372 , allloss: 8.0714, dt: 1296.04ms, fracRes: 0.7953, norm(attn): 0.0305, norm(output): 0.9982, norm(x): 0.8489, norm(y): 1.0050, norm:3.1401, tok/sec: 101132.70, flops:106.15, batch-reuse:1
@ 355 train 7.5304 , allloss: 8.3930, dt: 1305.20ms, fracRes: 0.7974, norm(attn): 0.0293, norm(output): 0.9981, norm(x): 0.8514, norm(y): 1.0049, norm:3.4187, tok/sec: 100422.84, flops:105.41, batch-reuse:1
@ 356 train 7.6178 , allloss: 9.5214, dt: 1307.23ms, fracRes: 0.7926, norm(attn): 0.0330, norm(output): 0.9981, norm(x): 0.8682, norm(y): 1.0052, norm:3.3279, tok/sec: 100267.34, flops:105.24, batch-reuse:1
@ 357 train 7.5660 , allloss: 9.3380, dt: 1309.71ms, fracRes: 0.7933, norm(attn): 0.0342, norm(output): 0.9980, norm(x): 0.8752, norm(y): 1.0052, norm:6.8157, tok/sec: 100077.44, flops:105.04, batch-reuse:1
@ 358 train 7.4964 , allloss: 11.8574, dt: 1325.26ms, fracRes: 0.7996, norm(attn): 0.0322, norm(output): 0.9979, norm(x): 0.8819, norm(y): 1.0051, norm:9.4001, tok/sec: 98902.49, flops:103.81, batch-reuse:1
@ 359 train 7.6981 , allloss: 10.8936, dt: 1299.42ms, fracRes: 0.8050, norm(attn): 0.0295, norm(output): 0.9978, norm(x): 0.9000, norm(y): 1.0051, norm:8.1325, tok/sec: 100869.35, flops:105.88, batch-reuse:1
@ 360 train 7.5821 , allloss: 10.5860, dt: 1313.96ms, fracRes: 0.8086, norm(attn): 0.0291, norm(output): 0.9978, norm(x): 0.9066, norm(y): 1.0051, norm:8.1674, tok/sec: 99753.43, flops:104.70, batch-reuse:1
@ 361 train 7.5536 , allloss: 9.2753, dt: 1303.53ms, fracRes: 0.8034, norm(attn): 0.0327, norm(output): 0.9977, norm(x): 0.8945, norm(y): 1.0053, norm:4.7424, tok/sec: 100551.75, flops:105.54, batch-reuse:1
@ 362 train 7.4192 , allloss: 9.3451, dt: 1302.38ms, fracRes: 0.8094, norm(attn): 0.0300, norm(output): 0.9976, norm(x): 0.9087, norm(y): 1.0052, norm:3.6056, tok/sec: 100639.99, flops:105.63, batch-reuse:1
@ 363 train 7.4748 , allloss: 8.4233, dt: 1295.45ms, fracRes: 0.8194, norm(attn): 0.0254, norm(output): 0.9975, norm(x): 0.9314, norm(y): 1.0051, norm:3.9060, tok/sec: 101178.84, flops:106.20, batch-reuse:1
@ 364 train 7.4706 , allloss: 8.2330, dt: 1284.39ms, fracRes: 0.8221, norm(attn): 0.0234, norm(output): 0.9974, norm(x): 0.9401, norm(y): 1.0051, norm:3.1860, tok/sec: 102049.68, flops:107.11, batch-reuse:1
@ 365 train 7.4558 , allloss: 8.0931, dt: 1296.37ms, fracRes: 0.8228, norm(attn): 0.0226, norm(output): 0.9973, norm(x): 0.9414, norm(y): 1.0052, norm:2.8111, tok/sec: 101106.62, flops:106.12, batch-reuse:1
@ 366 train 7.4478 , allloss: 7.9609, dt: 1293.79ms, fracRes: 0.8233, norm(attn): 0.0216, norm(output): 0.9972, norm(x): 0.9435, norm(y): 1.0053, norm:2.2446, tok/sec: 101308.77, flops:106.34, batch-reuse:1
@ 367 train 7.3568 , allloss: 8.0021, dt: 1320.55ms, fracRes: 0.8264, norm(attn): 0.0193, norm(output): 0.9970, norm(x): 0.9584, norm(y): 1.0052, norm:2.2287, tok/sec: 99255.38, flops:104.18, batch-reuse:1
@ 368 train 7.4295 , allloss: 7.8569, dt: 1288.57ms, fracRes: 0.8288, norm(attn): 0.0178, norm(output): 0.9969, norm(x): 0.9703, norm(y): 1.0053, norm:1.5829, tok/sec: 101718.61, flops:106.77, batch-reuse:1
@ 369 train 7.3469 , allloss: 7.6359, dt: 1291.59ms, fracRes: 0.8307, norm(attn): 0.0175, norm(output): 0.9967, norm(x): 0.9760, norm(y): 1.0054, norm:1.1158, tok/sec: 101481.42, flops:106.52, batch-reuse:1
@ 370 train 7.4314 , allloss: 7.7232, dt: 1312.80ms, fracRes: 0.8316, norm(attn): 0.0166, norm(output): 0.9965, norm(x): 0.9789, norm(y): 1.0055, norm:1.3735, tok/sec: 99841.47, flops:104.80, batch-reuse:1
@ 371 train 7.3366 , allloss: 7.5502, dt: 1324.60ms, fracRes: 0.8324, norm(attn): 0.0161, norm(output): 0.9964, norm(x): 0.9811, norm(y): 1.0056, norm:1.0595, tok/sec: 98952.26, flops:103.86, batch-reuse:1
@ 372 train 7.4117 , allloss: 7.6978, dt: 1302.07ms, fracRes: 0.8325, norm(attn): 0.0154, norm(output): 0.9962, norm(x): 0.9819, norm(y): 1.0056, norm:1.3923, tok/sec: 100664.32, flops:105.66, batch-reuse:1
@ 373 train 7.3983 , allloss: 7.5199, dt: 1321.24ms, fracRes: 0.8333, norm(attn): 0.0156, norm(output): 0.9962, norm(x): 0.9834, norm(y): 1.0058, norm:0.7807, tok/sec: 99203.64, flops:104.13, batch-reuse:1
@ 374 train 7.3614 , allloss: 7.4397, dt: 1288.58ms, fracRes: 0.8336, norm(attn): 0.0159, norm(output): 0.9961, norm(x): 0.9839, norm(y): 1.0059, norm:0.6088, tok/sec: 101718.02, flops:106.77, batch-reuse:1
@ 375 train 7.4285 , allloss: 7.5020, dt: 1290.40ms, fracRes: 0.8336, norm(attn): 0.0155, norm(output): 0.9960, norm(x): 0.9837, norm(y): 1.0060, norm:0.6556, tok/sec: 101574.72, flops:106.62, batch-reuse:1
@ 376 train 7.4530 , allloss: 7.5268, dt: 1306.54ms, fracRes: 0.8336, norm(attn): 0.0157, norm(output): 0.9959, norm(x): 0.9835, norm(y): 1.0060, norm:0.5843, tok/sec: 100320.13, flops:105.30, batch-reuse:1
@ 377 train 7.3221 , allloss: 7.3802, dt: 1272.23ms, fracRes: 0.8336, norm(attn): 0.0159, norm(output): 0.9958, norm(x): 0.9833, norm(y): 1.0061, norm:0.7414, tok/sec: 103025.42, flops:108.14, batch-reuse:1
@ 378 train 7.2414 , allloss: 7.4508, dt: 1305.43ms, fracRes: 0.8335, norm(attn): 0.0153, norm(output): 0.9957, norm(x): 0.9830, norm(y): 1.0062, norm:0.6964, tok/sec: 100404.89, flops:105.39, batch-reuse:1
@ 379 train 7.3221 , allloss: 7.8068, dt: 1320.74ms, fracRes: 0.8335, norm(attn): 0.0149, norm(output): 0.9957, norm(x): 0.9827, norm(y): 1.0063, norm:1.2510, tok/sec: 99241.19, flops:104.17, batch-reuse:1
@ 380 train 7.3798 , allloss: 7.7976, dt: 1292.03ms, fracRes: 0.8333, norm(attn): 0.0148, norm(output): 0.9956, norm(x): 0.9817, norm(y): 1.0063, norm:0.8024, tok/sec: 101446.70, flops:106.48, batch-reuse:1
@ 381 train 7.2918 , allloss: 7.5679, dt: 1310.27ms, fracRes: 0.8334, norm(attn): 0.0145, norm(output): 0.9955, norm(x): 0.9821, norm(y): 1.0064, norm:0.6791, tok/sec: 100034.01, flops:105.00, batch-reuse:1
@ 382 train 7.2148 , allloss: 7.3866, dt: 1309.15ms, fracRes: 0.8333, norm(attn): 0.0145, norm(output): 0.9954, norm(x): 0.9820, norm(y): 1.0064, norm:0.6984, tok/sec: 100120.20, flops:105.09, batch-reuse:1
@ 383 train 7.2059 , allloss: 7.4202, dt: 1309.54ms, fracRes: 0.8331, norm(attn): 0.0141, norm(output): 0.9953, norm(x): 0.9816, norm(y): 1.0065, norm:0.8595, tok/sec: 100090.14, flops:105.06, batch-reuse:1
@ 384 train 7.1978 , allloss: 7.3338, dt: 1316.06ms, fracRes: 0.8334, norm(attn): 0.0144, norm(output): 0.9953, norm(x): 0.9826, norm(y): 1.0066, norm:0.6472, tok/sec: 99594.45, flops:104.54, batch-reuse:1
@ 385 train 7.1239 , allloss: 7.2864, dt: 1281.80ms, fracRes: 0.8333, norm(attn): 0.0139, norm(output): 0.9952, norm(x): 0.9822, norm(y): 1.0066, norm:0.7242, tok/sec: 102256.09, flops:107.33, batch-reuse:1
@ 386 train 7.2043 , allloss: 7.3788, dt: 1310.59ms, fracRes: 0.8333, norm(attn): 0.0138, norm(output): 0.9951, norm(x): 0.9820, norm(y): 1.0066, norm:0.7310, tok/sec: 100009.83, flops:104.97, batch-reuse:1
@ 387 train 7.1439 , allloss: 7.2844, dt: 1278.61ms, fracRes: 0.8335, norm(attn): 0.0137, norm(output): 0.9950, norm(x): 0.9825, norm(y): 1.0068, norm:0.7707, tok/sec: 102511.05, flops:107.60, batch-reuse:1
@ 388 train 7.0341 , allloss: 7.2495, dt: 1298.80ms, fracRes: 0.8332, norm(attn): 0.0131, norm(output): 0.9949, norm(x): 0.9816, norm(y): 1.0067, norm:0.7312, tok/sec: 100917.94, flops:105.93, batch-reuse:1
@ 389 train 7.0850 , allloss: 7.3693, dt: 1297.71ms, fracRes: 0.8328, norm(attn): 0.0129, norm(output): 0.9948, norm(x): 0.9808, norm(y): 1.0068, norm:0.9900, tok/sec: 101002.71, flops:106.02, batch-reuse:1
@ 390 train 7.1295 , allloss: 7.3575, dt: 1301.94ms, fracRes: 0.8332, norm(attn): 0.0128, norm(output): 0.9947, norm(x): 0.9813, norm(y): 1.0069, norm:0.7604, tok/sec: 100674.69, flops:105.67, batch-reuse:1
@ 391 train 7.0299 , allloss: 7.4143, dt: 1304.88ms, fracRes: 0.8324, norm(attn): 0.0123, norm(output): 0.9946, norm(x): 0.9794, norm(y): 1.0070, norm:1.1269, tok/sec: 100447.43, flops:105.43, batch-reuse:1
@ 392 train 7.1270 , allloss: 7.6430, dt: 1292.32ms, fracRes: 0.8318, norm(attn): 0.0126, norm(output): 0.9945, norm(x): 0.9783, norm(y): 1.0070, norm:1.6563, tok/sec: 101424.00, flops:106.46, batch-reuse:1
@ 393 train 7.0287 , allloss: 7.3992, dt: 1296.56ms, fracRes: 0.8327, norm(attn): 0.0129, norm(output): 0.9944, norm(x): 0.9799, norm(y): 1.0072, norm:1.1650, tok/sec: 101092.14, flops:106.11, batch-reuse:1
@ 394 train 6.9989 , allloss: 7.4346, dt: 1313.09ms, fracRes: 0.8323, norm(attn): 0.0126, norm(output): 0.9943, norm(x): 0.9794, norm(y): 1.0072, norm:1.1735, tok/sec: 99819.14, flops:104.77, batch-reuse:1
@ 395 train 7.1485 , allloss: 8.0703, dt: 1312.81ms, fracRes: 0.8313, norm(attn): 0.0120, norm(output): 0.9942, norm(x): 0.9765, norm(y): 1.0072, norm:2.1960, tok/sec: 99840.44, flops:104.80, batch-reuse:1
@ 396 train 6.8796 , allloss: 7.7640, dt: 1314.17ms, fracRes: 0.8311, norm(attn): 0.0122, norm(output): 0.9941, norm(x): 0.9770, norm(y): 1.0073, norm:2.4138, tok/sec: 99737.21, flops:104.69, batch-reuse:1
@ 397 train 7.0042 , allloss: 8.4358, dt: 1317.78ms, fracRes: 0.8312, norm(attn): 0.0124, norm(output): 0.9940, norm(x): 0.9766, norm(y): 1.0074, norm:5.3231, tok/sec: 99464.29, flops:104.40, batch-reuse:1
@ 398 train 7.0071 , allloss: 9.1521, dt: 1311.80ms, fracRes: 0.8313, norm(attn): 0.0128, norm(output): 0.9939, norm(x): 0.9768, norm(y): 1.0076, norm:8.1551, tok/sec: 99917.43, flops:104.88, batch-reuse:1
@ 399 train 6.9785 , allloss: 9.9807, dt: 1305.02ms, fracRes: 0.8310, norm(attn): 0.0125, norm(output): 0.9938, norm(x): 0.9762, norm(y): 1.0077, norm:10.2167, tok/sec: 100436.95, flops:105.42, batch-reuse:1
@ 400 train 7.0200 , allloss: 10.7584, dt: 1319.36ms, fracRes: 0.8291, norm(attn): 0.0124, norm(output): 0.9937, norm(x): 0.9715, norm(y): 1.0077, norm:8.7329, tok/sec: 99345.08, flops:104.28, batch-reuse:1
@ 401 train 7.0592 , allloss: 11.4475, dt: 1294.05ms, fracRes: 0.8260, norm(attn): 0.0129, norm(output): 0.9936, norm(x): 0.9637, norm(y): 1.0077, norm:8.4650, tok/sec: 101287.81, flops:106.31, batch-reuse:1
@ 402 train 6.9920 , allloss: 10.1365, dt: 1309.92ms, fracRes: 0.8277, norm(attn): 0.0118, norm(output): 0.9935, norm(x): 0.9687, norm(y): 1.0077, norm:6.8964, tok/sec: 100061.45, flops:105.03, batch-reuse:1
@ 403 train 7.0100 , allloss: 9.9521, dt: 1336.83ms, fracRes: 0.8282, norm(attn): 0.0116, norm(output): 0.9934, norm(x): 0.9694, norm(y): 1.0078, norm:6.1685, tok/sec: 98046.90, flops:102.91, batch-reuse:1
@ 404 train 6.9223 , allloss: 10.1913, dt: 1341.14ms, fracRes: 0.8285, norm(attn): 0.0110, norm(output): 0.9933, norm(x): 0.9679, norm(y): 1.0078, norm:7.0097, tok/sec: 97731.69, flops:102.58, batch-reuse:1
@ 405 train 6.9277 , allloss: 10.0701, dt: 1346.36ms, fracRes: 0.8299, norm(attn): 0.0108, norm(output): 0.9932, norm(x): 0.9703, norm(y): 1.0080, norm:6.9688, tok/sec: 97352.93, flops:102.18, batch-reuse:1
@ 406 train 6.9243 , allloss: 10.1323, dt: 1335.28ms, fracRes: 0.8305, norm(attn): 0.0107, norm(output): 0.9931, norm(x): 0.9707, norm(y): 1.0081, norm:6.3637, tok/sec: 98160.94, flops:103.03, batch-reuse:1
@ 407 train 6.9125 , allloss: 10.4158, dt: 1295.96ms, fracRes: 0.8293, norm(attn): 0.0106, norm(output): 0.9930, norm(x): 0.9651, norm(y): 1.0081, norm:6.1061, tok/sec: 101138.98, flops:106.16, batch-reuse:1
@ 408 train 6.9455 , allloss: 11.2583, dt: 1293.15ms, fracRes: 0.8240, norm(attn): 0.0112, norm(output): 0.9929, norm(x): 0.9444, norm(y): 1.0084, norm:5.5657, tok/sec: 101358.72, flops:106.39, batch-reuse:1
@ 409 train 6.8625 , allloss: 10.9488, dt: 1312.95ms, fracRes: 0.8273, norm(attn): 0.0106, norm(output): 0.9927, norm(x): 0.9554, norm(y): 1.0083, norm:5.5777, tok/sec: 99830.11, flops:104.78, batch-reuse:1
@ 410 train 6.8889 , allloss: 10.7427, dt: 1317.47ms, fracRes: 0.8280, norm(attn): 0.0101, norm(output): 0.9926, norm(x): 0.9590, norm(y): 1.0083, norm:5.0132, tok/sec: 99487.65, flops:104.43, batch-reuse:1
@ 411 train 6.8940 , allloss: 10.5796, dt: 1308.78ms, fracRes: 0.8283, norm(attn): 0.0100, norm(output): 0.9925, norm(x): 0.9599, norm(y): 1.0083, norm:5.3925, tok/sec: 100147.94, flops:105.12, batch-reuse:1
@ 412 train 6.8920 , allloss: 10.0378, dt: 1322.81ms, fracRes: 0.8291, norm(attn): 0.0099, norm(output): 0.9924, norm(x): 0.9634, norm(y): 1.0084, norm:5.0323, tok/sec: 99085.95, flops:104.00, batch-reuse:1
@ 413 train 6.5721 , allloss: 9.5240, dt: 1302.83ms, fracRes: 0.8299, norm(attn): 0.0100, norm(output): 0.9923, norm(x): 0.9647, norm(y): 1.0085, norm:5.4879, tok/sec: 100605.53, flops:105.60, batch-reuse:1
@ 414 train 6.8502 , allloss: 9.7352, dt: 1279.75ms, fracRes: 0.8296, norm(attn): 0.0099, norm(output): 0.9921, norm(x): 0.9621, norm(y): 1.0086, norm:5.3123, tok/sec: 102419.65, flops:107.50, batch-reuse:1
@ 415 train 6.7656 , allloss: 9.3064, dt: 1287.71ms, fracRes: 0.8302, norm(attn): 0.0098, norm(output): 0.9920, norm(x): 0.9641, norm(y): 1.0087, norm:4.9130, tok/sec: 101786.54, flops:106.84, batch-reuse:1
@ 416 train 6.9163 , allloss: 9.2450, dt: 1294.92ms, fracRes: 0.8302, norm(attn): 0.0098, norm(output): 0.9919, norm(x): 0.9638, norm(y): 1.0087, norm:4.9900, tok/sec: 101220.19, flops:106.24, batch-reuse:1
@ 417 train 6.8019 , allloss: 8.9707, dt: 1284.13ms, fracRes: 0.8303, norm(attn): 0.0096, norm(output): 0.9918, norm(x): 0.9634, norm(y): 1.0088, norm:4.4401, tok/sec: 102070.52, flops:107.14, batch-reuse:1
@ 418 train 6.8838 , allloss: 9.2423, dt: 1309.58ms, fracRes: 0.8299, norm(attn): 0.0099, norm(output): 0.9916, norm(x): 0.9613, norm(y): 1.0089, norm:4.3134, tok/sec: 100086.88, flops:105.05, batch-reuse:1
@ 419 train 6.7979 , allloss: 8.9866, dt: 1343.03ms, fracRes: 0.8302, norm(attn): 0.0101, norm(output): 0.9915, norm(x): 0.9620, norm(y): 1.0090, norm:3.9760, tok/sec: 97594.07, flops:102.44, batch-reuse:1
@ 420 train 6.7562 , allloss: 9.2815, dt: 1346.31ms, fracRes: 0.8301, norm(attn): 0.0100, norm(output): 0.9914, norm(x): 0.9609, norm(y): 1.0090, norm:4.2089, tok/sec: 97356.62, flops:102.19, batch-reuse:1
@ 421 train 6.9305 , allloss: 9.4581, dt: 1321.87ms, fracRes: 0.8296, norm(attn): 0.0109, norm(output): 0.9913, norm(x): 0.9588, norm(y): 1.0091, norm:4.7763, tok/sec: 99156.83, flops:104.08, batch-reuse:1
@ 422 train 6.8288 , allloss: 8.6901, dt: 1337.68ms, fracRes: 0.8306, norm(attn): 0.0109, norm(output): 0.9911, norm(x): 0.9625, norm(y): 1.0092, norm:3.9588, tok/sec: 97984.88, flops:102.85, batch-reuse:1
@ 423 train 6.8559 , allloss: 9.1630, dt: 1314.70ms, fracRes: 0.8300, norm(attn): 0.0117, norm(output): 0.9910, norm(x): 0.9591, norm(y): 1.0093, norm:4.3143, tok/sec: 99697.57, flops:104.65, batch-reuse:1
@ 424 train 6.7719 , allloss: 8.7033, dt: 1296.53ms, fracRes: 0.8299, norm(attn): 0.0113, norm(output): 0.9908, norm(x): 0.9584, norm(y): 1.0094, norm:4.2368, tok/sec: 101094.72, flops:106.11, batch-reuse:1
@ 425 train 6.8507 , allloss: 8.9605, dt: 1288.44ms, fracRes: 0.8296, norm(attn): 0.0115, norm(output): 0.9907, norm(x): 0.9568, norm(y): 1.0095, norm:4.4230, tok/sec: 101729.45, flops:106.78, batch-reuse:1
@ 426 train 6.6867 , allloss: 8.6737, dt: 1282.51ms, fracRes: 0.8302, norm(attn): 0.0114, norm(output): 0.9906, norm(x): 0.9584, norm(y): 1.0096, norm:4.5428, tok/sec: 102199.59, flops:107.27, batch-reuse:1
@ 427 train 6.7622 , allloss: 8.6768, dt: 1324.24ms, fracRes: 0.8305, norm(attn): 0.0116, norm(output): 0.9904, norm(x): 0.9602, norm(y): 1.0097, norm:4.2631, tok/sec: 98978.74, flops:103.89, batch-reuse:1
@ 428 train 6.7044 , allloss: 8.1634, dt: 1287.22ms, fracRes: 0.8308, norm(attn): 0.0118, norm(output): 0.9903, norm(x): 0.9614, norm(y): 1.0097, norm:3.3208, tok/sec: 101825.41, flops:106.88, batch-reuse:1
@ 429 train 6.6373 , allloss: 7.9974, dt: 1304.66ms, fracRes: 0.8303, norm(attn): 0.0118, norm(output): 0.9902, norm(x): 0.9581, norm(y): 1.0099, norm:3.4347, tok/sec: 100464.52, flops:105.45, batch-reuse:1
@ 430 train 6.7198 , allloss: 7.7680, dt: 1328.78ms, fracRes: 0.8310, norm(attn): 0.0116, norm(output): 0.9900, norm(x): 0.9611, norm(y): 1.0100, norm:2.9463, tok/sec: 98641.13, flops:103.54, batch-reuse:1
@ 431 train 6.7033 , allloss: 8.1871, dt: 1334.68ms, fracRes: 0.8299, norm(attn): 0.0117, norm(output): 0.9899, norm(x): 0.9550, norm(y): 1.0101, norm:4.6998, tok/sec: 98205.18, flops:103.08, batch-reuse:1
@ 432 train 6.7551 , allloss: 7.7207, dt: 1301.80ms, fracRes: 0.8314, norm(attn): 0.0114, norm(output): 0.9898, norm(x): 0.9633, norm(y): 1.0102, norm:3.1755, tok/sec: 100685.37, flops:105.68, batch-reuse:1
@ 433 train 6.7493 , allloss: 7.7649, dt: 1279.40ms, fracRes: 0.8306, norm(attn): 0.0118, norm(output): 0.9896, norm(x): 0.9589, norm(y): 1.0102, norm:2.9239, tok/sec: 102448.36, flops:107.53, batch-reuse:1
@ 434 train 6.7707 , allloss: 7.8342, dt: 1302.78ms, fracRes: 0.8302, norm(attn): 0.0118, norm(output): 0.9895, norm(x): 0.9563, norm(y): 1.0103, norm:3.0614, tok/sec: 100609.16, flops:105.60, batch-reuse:1
@ 435 train 6.6779 , allloss: 7.6468, dt: 1307.42ms, fracRes: 0.8308, norm(attn): 0.0116, norm(output): 0.9894, norm(x): 0.9592, norm(y): 1.0104, norm:2.4401, tok/sec: 100252.53, flops:105.23, batch-reuse:1
@ 436 train 6.8215 , allloss: 7.7509, dt: 1316.63ms, fracRes: 0.8308, norm(attn): 0.0116, norm(output): 0.9892, norm(x): 0.9593, norm(y): 1.0105, norm:2.6048, tok/sec: 99550.79, flops:104.49, batch-reuse:1
@ 437 train 6.7122 , allloss: 7.4811, dt: 1322.14ms, fracRes: 0.8313, norm(attn): 0.0114, norm(output): 0.9891, norm(x): 0.9619, norm(y): 1.0106, norm:2.4880, tok/sec: 99136.45, flops:104.06, batch-reuse:1
@ 438 train 6.8227 , allloss: 7.5982, dt: 1297.89ms, fracRes: 0.8303, norm(attn): 0.0114, norm(output): 0.9889, norm(x): 0.9564, norm(y): 1.0106, norm:3.4037, tok/sec: 100988.72, flops:106.00, batch-reuse:1
@ 439 train 6.5934 , allloss: 7.1589, dt: 1319.68ms, fracRes: 0.8314, norm(attn): 0.0111, norm(output): 0.9888, norm(x): 0.9619, norm(y): 1.0108, norm:1.8586, tok/sec: 99320.82, flops:104.25, batch-reuse:1
@ 440 train 6.5697 , allloss: 7.1058, dt: 1327.20ms, fracRes: 0.8314, norm(attn): 0.0110, norm(output): 0.9887, norm(x): 0.9620, norm(y): 1.0108, norm:1.5466, tok/sec: 98758.15, flops:103.66, batch-reuse:1
@ 441 train 6.6285 , allloss: 6.9704, dt: 1306.44ms, fracRes: 0.8324, norm(attn): 0.0104, norm(output): 0.9885, norm(x): 0.9664, norm(y): 1.0110, norm:1.0587, tok/sec: 100327.27, flops:105.31, batch-reuse:1
@ 442 train 6.7006 , allloss: 7.1771, dt: 1301.24ms, fracRes: 0.8312, norm(attn): 0.0109, norm(output): 0.9883, norm(x): 0.9601, norm(y): 1.0110, norm:1.9687, tok/sec: 100728.54, flops:105.73, batch-reuse:1
@ 443 train 6.7166 , allloss: 7.0787, dt: 1300.55ms, fracRes: 0.8323, norm(attn): 0.0109, norm(output): 0.9882, norm(x): 0.9651, norm(y): 1.0112, norm:1.6516, tok/sec: 100782.31, flops:105.78, batch-reuse:1
@ 444 train 6.6812 , allloss: 7.0473, dt: 1297.23ms, fracRes: 0.8320, norm(attn): 0.0107, norm(output): 0.9880, norm(x): 0.9631, norm(y): 1.0113, norm:1.3493, tok/sec: 101039.68, flops:106.05, batch-reuse:1
@ 445 train 6.5670 , allloss: 6.8391, dt: 1294.27ms, fracRes: 0.8327, norm(attn): 0.0110, norm(output): 0.9879, norm(x): 0.9665, norm(y): 1.0115, norm:0.9075, tok/sec: 101270.63, flops:106.30, batch-reuse:1
@ 446 train 6.5990 , allloss: 6.9393, dt: 1311.11ms, fracRes: 0.8324, norm(attn): 0.0115, norm(output): 0.9877, norm(x): 0.9651, norm(y): 1.0115, norm:1.0654, tok/sec: 99970.27, flops:104.93, batch-reuse:1
@ 447 train 6.6121 , allloss: 6.9290, dt: 1302.94ms, fracRes: 0.8317, norm(attn): 0.0120, norm(output): 0.9875, norm(x): 0.9616, norm(y): 1.0117, norm:1.3852, tok/sec: 100597.40, flops:105.59, batch-reuse:1
@ 448 train 6.5651 , allloss: 6.7634, dt: 1312.77ms, fracRes: 0.8331, norm(attn): 0.0123, norm(output): 0.9874, norm(x): 0.9686, norm(y): 1.0118, norm:0.7101, tok/sec: 99843.81, flops:104.80, batch-reuse:1
@ 449 train 6.5265 , allloss: 6.7170, dt: 1297.86ms, fracRes: 0.8333, norm(attn): 0.0121, norm(output): 0.9872, norm(x): 0.9692, norm(y): 1.0120, norm:0.8075, tok/sec: 100990.54, flops:106.00, batch-reuse:1
@ 450 train 6.5888 , allloss: 6.7340, dt: 1291.80ms, fracRes: 0.8335, norm(attn): 0.0126, norm(output): 0.9870, norm(x): 0.9700, norm(y): 1.0122, norm:0.6424, tok/sec: 101465.00, flops:106.50, batch-reuse:1
@ 451 train 6.5722 , allloss: 6.7608, dt: 1293.91ms, fracRes: 0.8332, norm(attn): 0.0127, norm(output): 0.9869, norm(x): 0.9690, norm(y): 1.0123, norm:0.7320, tok/sec: 101299.52, flops:106.33, batch-reuse:1
@ 452 train 6.5795 , allloss: 6.8140, dt: 1292.95ms, fracRes: 0.8331, norm(attn): 0.0126, norm(output): 0.9867, norm(x): 0.9681, norm(y): 1.0124, norm:0.7655, tok/sec: 101374.31, flops:106.41, batch-reuse:1
@ 453 train 6.5865 , allloss: 6.7781, dt: 1295.24ms, fracRes: 0.8334, norm(attn): 0.0131, norm(output): 0.9865, norm(x): 0.9696, norm(y): 1.0126, norm:0.8982, tok/sec: 101195.30, flops:106.22, batch-reuse:1
@ 454 train 6.5740 , allloss: 6.7520, dt: 1278.98ms, fracRes: 0.8332, norm(attn): 0.0124, norm(output): 0.9864, norm(x): 0.9684, norm(y): 1.0127, norm:1.2488, tok/sec: 102481.66, flops:107.57, batch-reuse:1
@ 455 train 6.6330 , allloss: 6.8781, dt: 1298.96ms, fracRes: 0.8325, norm(attn): 0.0132, norm(output): 0.9862, norm(x): 0.9650, norm(y): 1.0129, norm:1.3735, tok/sec: 100904.97, flops:105.91, batch-reuse:1
@ 456 train 6.5721 , allloss: 6.8360, dt: 1280.46ms, fracRes: 0.8324, norm(attn): 0.0138, norm(output): 0.9860, norm(x): 0.9660, norm(y): 1.0131, norm:2.4977, tok/sec: 102363.47, flops:107.44, batch-reuse:1
@ 457 train 6.6676 , allloss: 6.8237, dt: 1281.82ms, fracRes: 0.8333, norm(attn): 0.0140, norm(output): 0.9859, norm(x): 0.9686, norm(y): 1.0132, norm:0.9127, tok/sec: 102254.41, flops:107.33, batch-reuse:1
@ 458 train 6.6474 , allloss: 6.7845, dt: 1300.06ms, fracRes: 0.8331, norm(attn): 0.0145, norm(output): 0.9857, norm(x): 0.9675, norm(y): 1.0134, norm:0.9576, tok/sec: 100820.26, flops:105.82, batch-reuse:1
@ 459 train 6.5336 , allloss: 6.6041, dt: 1310.35ms, fracRes: 0.8337, norm(attn): 0.0145, norm(output): 0.9856, norm(x): 0.9698, norm(y): 1.0136, norm:0.7427, tok/sec: 100027.97, flops:104.99, batch-reuse:1
@ 460 train 6.5081 , allloss: 6.6082, dt: 1327.70ms, fracRes: 0.8333, norm(attn): 0.0153, norm(output): 0.9854, norm(x): 0.9675, norm(y): 1.0138, norm:3.7175, tok/sec: 98721.21, flops:103.62, batch-reuse:1
@ 461 train 6.5354 , allloss: 6.5838, dt: 1321.14ms, fracRes: 0.8340, norm(attn): 0.0151, norm(output): 0.9853, norm(x): 0.9708, norm(y): 1.0140, norm:0.9039, tok/sec: 99210.98, flops:104.14, batch-reuse:1
@ 462 train 6.6027 , allloss: 6.6404, dt: 1300.16ms, fracRes: 0.8341, norm(attn): 0.0143, norm(output): 0.9852, norm(x): 0.9709, norm(y): 1.0144, norm:0.9263, tok/sec: 100811.95, flops:105.82, batch-reuse:1
@ 463 train 6.5624 , allloss: 6.6109, dt: 1295.07ms, fracRes: 0.8340, norm(attn): 0.0153, norm(output): 0.9850, norm(x): 0.9706, norm(y): 1.0147, norm:0.6784, tok/sec: 101208.47, flops:106.23, batch-reuse:1
@ 464 train 6.4928 , allloss: 6.7122, dt: 1301.59ms, fracRes: 0.8334, norm(attn): 0.0157, norm(output): 0.9849, norm(x): 0.9703, norm(y): 1.0148, norm:1.9396, tok/sec: 100701.60, flops:105.70, batch-reuse:1
@ 465 train 8.0019 , allloss: 105.7357, dt: 1304.30ms, fracRes: 0.4775, norm(attn): 0.1230, norm(output): 0.9854, norm(x): 0.9677, norm(y): 1.0151, norm:1775.7732, tok/sec: 100492.29, flops:105.48, batch-reuse:1
@ 466 train 7.9667 , allloss: 123.4195, dt: 1308.77ms, fracRes: 0.3764, norm(attn): 0.1562, norm(output): 0.9854, norm(x): 0.9707, norm(y): 1.0161, norm:745.9644, tok/sec: 100148.71, flops:105.12, batch-reuse:1
@ 467 train 7.5539 , allloss: 101.4616, dt: 1318.13ms, fracRes: 0.3560, norm(attn): 0.1514, norm(output): 0.9852, norm(x): 0.9698, norm(y): 1.0169, norm:274.9026, tok/sec: 99437.82, flops:104.37, batch-reuse:1
@ 468 train 7.7579 , allloss: 75.1316, dt: 1272.27ms, fracRes: 0.3392, norm(attn): 0.1406, norm(output): 0.9848, norm(x): 0.9736, norm(y): 1.0171, norm:904.8301, tok/sec: 103021.79, flops:108.13, batch-reuse:1
@ 469 train 7.6788 , allloss: 68.6584, dt: 1282.67ms, fracRes: 0.3380, norm(attn): 0.1396, norm(output): 0.9846, norm(x): 0.9744, norm(y): 1.0176, norm:71.4613, tok/sec: 102186.88, flops:107.26, batch-reuse:1
@ 470 train 7.5118 , allloss: 55.5122, dt: 1295.04ms, fracRes: 0.3771, norm(attn): 0.1309, norm(output): 0.9842, norm(x): 0.9732, norm(y): 1.0198, norm:189.3777, tok/sec: 101210.54, flops:106.23, batch-reuse:1
@ 471 train 7.4072 , allloss: 50.8465, dt: 1304.61ms, fracRes: 0.3516, norm(attn): 0.1318, norm(output): 0.9841, norm(x): 0.9748, norm(y): 1.0209, norm:57.1619, tok/sec: 100468.36, flops:105.45, batch-reuse:1
@ 472 train 7.4824 , allloss: 56.2271, dt: 1307.63ms, fracRes: 0.2253, norm(attn): 0.1484, norm(output): 0.9842, norm(x): 0.9773, norm(y): 1.0209, norm:48.4837, tok/sec: 100236.08, flops:105.21, batch-reuse:1
@ 473 train 7.4313 , allloss: 63.4995, dt: 1313.40ms, fracRes: 0.0998, norm(attn): 0.1816, norm(output): 0.9842, norm(x): 0.9790, norm(y): 1.0198, norm:50.6967, tok/sec: 99795.68, flops:104.75, batch-reuse:1
@ 474 train 7.4194 , allloss: 57.1957, dt: 1290.18ms, fracRes: 0.0992, norm(attn): 0.1885, norm(output): 0.9841, norm(x): 0.9796, norm(y): 1.0197, norm:46.7461, tok/sec: 101592.25, flops:106.63, batch-reuse:1
@ 475 train 7.4768 , allloss: 53.0478, dt: 1304.01ms, fracRes: 0.1187, norm(attn): 0.1826, norm(output): 0.9841, norm(x): 0.9798, norm(y): 1.0194, norm:44.4661, tok/sec: 100514.81, flops:105.50, batch-reuse:1
@ 476 train 7.4060 , allloss: 48.9721, dt: 1302.90ms, fracRes: 0.1752, norm(attn): 0.1719, norm(output): 0.9840, norm(x): 0.9794, norm(y): 1.0195, norm:35.2832, tok/sec: 100600.19, flops:105.59, batch-reuse:1
@ 477 train 7.4403 , allloss: 39.6317, dt: 1279.43ms, fracRes: 0.3244, norm(attn): 0.1494, norm(output): 0.9840, norm(x): 0.9791, norm(y): 1.0190, norm:27.1082, tok/sec: 102445.61, flops:107.53, batch-reuse:1
@ 478 train 7.2721 , allloss: 36.9072, dt: 1309.00ms, fracRes: 0.3256, norm(attn): 0.1426, norm(output): 0.9841, norm(x): 0.9790, norm(y): 1.0193, norm:24.7364, tok/sec: 100131.03, flops:105.10, batch-reuse:1
@ 479 train 7.3629 , allloss: 33.6736, dt: 1279.63ms, fracRes: 0.3394, norm(attn): 0.1406, norm(output): 0.9841, norm(x): 0.9783, norm(y): 1.0200, norm:25.7424, tok/sec: 102429.88, flops:107.51, batch-reuse:1
@ 480 train 7.1600 , allloss: 33.9867, dt: 1297.57ms, fracRes: 0.3261, norm(attn): 0.1475, norm(output): 0.9842, norm(x): 0.9786, norm(y): 1.0204, norm:28.1256, tok/sec: 101013.49, flops:106.03, batch-reuse:1
@ 481 train 7.2355 , allloss: 31.5870, dt: 1296.47ms, fracRes: 0.3438, norm(attn): 0.1426, norm(output): 0.9841, norm(x): 0.9784, norm(y): 1.0208, norm:27.2473, tok/sec: 101098.90, flops:106.12, batch-reuse:1
@ 482 train 7.1429 , allloss: 31.4923, dt: 1285.16ms, fracRes: 0.3423, norm(attn): 0.1455, norm(output): 0.9842, norm(x): 0.9784, norm(y): 1.0208, norm:29.4140, tok/sec: 101988.97, flops:107.05, batch-reuse:1
@ 483 train 7.1812 , allloss: 32.4147, dt: 1337.88ms, fracRes: 0.3291, norm(attn): 0.1465, norm(output): 0.9842, norm(x): 0.9787, norm(y): 1.0203, norm:29.6345, tok/sec: 97969.69, flops:102.83, batch-reuse:1
@ 484 train 7.0688 , allloss: 30.1451, dt: 1304.83ms, fracRes: 0.3454, norm(attn): 0.1426, norm(output): 0.9843, norm(x): 0.9781, norm(y): 1.0199, norm:29.7245, tok/sec: 100451.14, flops:105.44, batch-reuse:1
@ 485 train 7.0321 , allloss: 33.9251, dt: 1301.80ms, fracRes: 0.3534, norm(attn): 0.1309, norm(output): 0.9843, norm(x): 0.9771, norm(y): 1.0199, norm:29.8761, tok/sec: 100685.31, flops:105.68, batch-reuse:1
@ 486 train 7.1280 , allloss: 40.5604, dt: 1291.52ms, fracRes: 0.4080, norm(attn): 0.1099, norm(output): 0.9842, norm(x): 0.9767, norm(y): 1.0202, norm:27.8536, tok/sec: 101486.29, flops:106.52, batch-reuse:1
@ 487 train 7.0984 , allloss: 38.9316, dt: 1308.08ms, fracRes: 0.4209, norm(attn): 0.1084, norm(output): 0.9842, norm(x): 0.9763, norm(y): 1.0203, norm:25.0036, tok/sec: 100201.81, flops:105.18, batch-reuse:1
@ 488 train 6.9456 , allloss: 31.9504, dt: 1324.38ms, fracRes: 0.4344, norm(attn): 0.1089, norm(output): 0.9843, norm(x): 0.9737, norm(y): 1.0201, norm:27.2240, tok/sec: 98968.90, flops:103.88, batch-reuse:1
@ 489 train 6.9822 , allloss: 35.0587, dt: 1309.72ms, fracRes: 0.4238, norm(attn): 0.1113, norm(output): 0.9842, norm(x): 0.9759, norm(y): 1.0203, norm:24.2585, tok/sec: 100076.44, flops:105.04, batch-reuse:1
@ 490 train 6.9841 , allloss: 34.2824, dt: 1288.16ms, fracRes: 0.4204, norm(attn): 0.1113, norm(output): 0.9842, norm(x): 0.9767, norm(y): 1.0203, norm:25.8902, tok/sec: 101751.69, flops:106.80, batch-reuse:1
@ 491 train 7.0578 , allloss: 29.9859, dt: 1309.78ms, fracRes: 0.4234, norm(attn): 0.1094, norm(output): 0.9841, norm(x): 0.9762, norm(y): 1.0203, norm:27.9247, tok/sec: 100071.58, flops:105.04, batch-reuse:1
@ 492 train 7.0251 , allloss: 23.5152, dt: 1326.30ms, fracRes: 0.4219, norm(attn): 0.1089, norm(output): 0.9841, norm(x): 0.9764, norm(y): 1.0200, norm:23.0096, tok/sec: 98825.56, flops:103.73, batch-reuse:1
@ 493 train 6.9391 , allloss: 22.3158, dt: 1293.03ms, fracRes: 0.4243, norm(attn): 0.1084, norm(output): 0.9841, norm(x): 0.9760, norm(y): 1.0204, norm:24.5261, tok/sec: 101368.18, flops:106.40, batch-reuse:1
@ 494 train 6.9099 , allloss: 22.1156, dt: 1345.23ms, fracRes: 0.4201, norm(attn): 0.1089, norm(output): 0.9841, norm(x): 0.9776, norm(y): 1.0201, norm:24.0059, tok/sec: 97434.98, flops:102.27, batch-reuse:1
@ 495 train 6.8274 , allloss: 21.3319, dt: 1348.67ms, fracRes: 0.4203, norm(attn): 0.1074, norm(output): 0.9840, norm(x): 0.9777, norm(y): 1.0202, norm:18.3091, tok/sec: 97186.12, flops:102.01, batch-reuse:1
@ 496 train 6.9084 , allloss: 21.2101, dt: 1290.30ms, fracRes: 0.4189, norm(attn): 0.1074, norm(output): 0.9839, norm(x): 0.9777, norm(y): 1.0205, norm:20.2288, tok/sec: 101582.59, flops:106.62, batch-reuse:1
@ 497 train 6.7762 , allloss: 21.0363, dt: 1296.76ms, fracRes: 0.4214, norm(attn): 0.1045, norm(output): 0.9839, norm(x): 0.9775, norm(y): 1.0204, norm:21.0533, tok/sec: 101076.30, flops:106.09, batch-reuse:1
@ 498 train 6.9393 , allloss: 21.7935, dt: 1314.93ms, fracRes: 0.4195, norm(attn): 0.1055, norm(output): 0.9838, norm(x): 0.9778, norm(y): 1.0203, norm:19.5589, tok/sec: 99679.96, flops:104.63, batch-reuse:1
@ 499 train 6.9696 , allloss: 22.9227, dt: 1306.93ms, fracRes: 0.4148, norm(attn): 0.1079, norm(output): 0.9838, norm(x): 0.9777, norm(y): 1.0201, norm:20.9674, tok/sec: 100290.13, flops:105.27, batch-reuse:1
@ 500 train 6.8645 , allloss: 21.1483, dt: 1308.94ms, fracRes: 0.4193, norm(attn): 0.1050, norm(output): 0.9838, norm(x): 0.9775, norm(y): 1.0202, norm:18.8588, tok/sec: 100136.36, flops:105.11, batch-reuse:1
@ 501 train 6.8466 , allloss: 20.8497, dt: 1317.26ms, fracRes: 0.4219, norm(attn): 0.1011, norm(output): 0.9837, norm(x): 0.9768, norm(y): 1.0201, norm:18.1730, tok/sec: 99503.82, flops:104.44, batch-reuse:1
@ 502 train 6.8886 , allloss: 20.4040, dt: 1307.59ms, fracRes: 0.4200, norm(attn): 0.0952, norm(output): 0.9837, norm(x): 0.9772, norm(y): 1.0202, norm:19.6645, tok/sec: 100239.01, flops:105.21, batch-reuse:1
@ 503 train 6.8382 , allloss: 20.1559, dt: 1275.86ms, fracRes: 0.4214, norm(attn): 0.0879, norm(output): 0.9837, norm(x): 0.9768, norm(y): 1.0198, norm:17.3695, tok/sec: 102732.00, flops:107.83, batch-reuse:1
@ 504 train 6.8750 , allloss: 20.0795, dt: 1305.76ms, fracRes: 0.4200, norm(attn): 0.0801, norm(output): 0.9836, norm(x): 0.9774, norm(y): 1.0197, norm:19.0430, tok/sec: 100380.14, flops:105.36, batch-reuse:1
@ 505 train 6.7786 , allloss: 19.9921, dt: 1277.72ms, fracRes: 0.4204, norm(attn): 0.0747, norm(output): 0.9837, norm(x): 0.9776, norm(y): 1.0195, norm:17.8412, tok/sec: 102582.63, flops:107.67, batch-reuse:1
@ 506 train 6.7801 , allloss: 19.6674, dt: 1321.11ms, fracRes: 0.4209, norm(attn): 0.0718, norm(output): 0.9836, norm(x): 0.9775, norm(y): 1.0195, norm:17.6579, tok/sec: 99213.23, flops:104.14, batch-reuse:1
@ 507 train 6.8111 , allloss: 19.6021, dt: 1323.25ms, fracRes: 0.4217, norm(attn): 0.0708, norm(output): 0.9836, norm(x): 0.9774, norm(y): 1.0195, norm:15.9761, tok/sec: 99052.98, flops:103.97, batch-reuse:1
@ 508 train 6.7290 , allloss: 19.3287, dt: 1291.63ms, fracRes: 0.4217, norm(attn): 0.0703, norm(output): 0.9836, norm(x): 0.9779, norm(y): 1.0195, norm:17.5423, tok/sec: 101478.12, flops:106.51, batch-reuse:1
@ 509 train 6.7549 , allloss: 19.3282, dt: 1305.91ms, fracRes: 0.4203, norm(attn): 0.0713, norm(output): 0.9836, norm(x): 0.9784, norm(y): 1.0193, norm:16.7234, tok/sec: 100368.68, flops:105.35, batch-reuse:1
@ 510 train 6.7048 , allloss: 19.2585, dt: 1303.39ms, fracRes: 0.4206, norm(attn): 0.0728, norm(output): 0.9835, norm(x): 0.9782, norm(y): 1.0194, norm:16.8876, tok/sec: 100562.19, flops:105.55, batch-reuse:1
@ 511 train 6.7891 , allloss: 19.5113, dt: 1308.51ms, fracRes: 0.4201, norm(attn): 0.0737, norm(output): 0.9835, norm(x): 0.9783, norm(y): 1.0194, norm:18.2598, tok/sec: 100168.73, flops:105.14, batch-reuse:1
@ 512 train 6.7098 , allloss: 19.0617, dt: 1310.71ms, fracRes: 0.4192, norm(attn): 0.0737, norm(output): 0.9834, norm(x): 0.9782, norm(y): 1.0195, norm:16.5322, tok/sec: 100000.62, flops:104.96, batch-reuse:1
@ 513 train 6.7072 , allloss: 19.2696, dt: 1293.35ms, fracRes: 0.4166, norm(attn): 0.0732, norm(output): 0.9833, norm(x): 0.9783, norm(y): 1.0194, norm:17.4292, tok/sec: 101342.75, flops:106.37, batch-reuse:1
@ 514 train 6.6658 , allloss: 18.5277, dt: 1297.22ms, fracRes: 0.4208, norm(attn): 0.0703, norm(output): 0.9833, norm(x): 0.9779, norm(y): 1.0196, norm:18.0041, tok/sec: 101040.72, flops:106.06, batch-reuse:1
@ 515 train 6.6490 , allloss: 18.6017, dt: 1293.57ms, fracRes: 0.4194, norm(attn): 0.0698, norm(output): 0.9833, norm(x): 0.9782, norm(y): 1.0192, norm:17.9786, tok/sec: 101325.52, flops:106.35, batch-reuse:1
@ 516 train 6.6358 , allloss: 18.3694, dt: 1289.60ms, fracRes: 0.4198, norm(attn): 0.0688, norm(output): 0.9832, norm(x): 0.9780, norm(y): 1.0193, norm:18.4221, tok/sec: 101637.59, flops:106.68, batch-reuse:1
@ 517 train 6.6149 , allloss: 18.2980, dt: 1294.04ms, fracRes: 0.4199, norm(attn): 0.0674, norm(output): 0.9832, norm(x): 0.9781, norm(y): 1.0191, norm:19.5234, tok/sec: 101288.90, flops:106.32, batch-reuse:1
@ 518 train 6.7187 , allloss: 18.2205, dt: 1314.71ms, fracRes: 0.4207, norm(attn): 0.0674, norm(output): 0.9831, norm(x): 0.9778, norm(y): 1.0191, norm:18.7555, tok/sec: 99696.48, flops:104.64, batch-reuse:1
@ 519 train 6.6288 , allloss: 18.1213, dt: 1319.16ms, fracRes: 0.4202, norm(attn): 0.0669, norm(output): 0.9831, norm(x): 0.9779, norm(y): 1.0188, norm:18.3817, tok/sec: 99360.56, flops:104.29, batch-reuse:1
@ 520 train 6.6892 , allloss: 17.9626, dt: 1299.81ms, fracRes: 0.4205, norm(attn): 0.0664, norm(output): 0.9830, norm(x): 0.9777, norm(y): 1.0189, norm:18.5574, tok/sec: 100839.34, flops:105.84, batch-reuse:1
@ 521 train 6.7491 , allloss: 18.1000, dt: 1307.48ms, fracRes: 0.4203, norm(attn): 0.0664, norm(output): 0.9830, norm(x): 0.9777, norm(y): 1.0188, norm:17.8202, tok/sec: 100248.09, flops:105.22, batch-reuse:1
@ 522 train 6.6015 , allloss: 17.9140, dt: 1323.66ms, fracRes: 0.4165, norm(attn): 0.0674, norm(output): 0.9830, norm(x): 0.9777, norm(y): 1.0187, norm:18.3691, tok/sec: 99022.58, flops:103.94, batch-reuse:1
@ 523 train 6.6842 , allloss: 17.8733, dt: 1300.19ms, fracRes: 0.4205, norm(attn): 0.0649, norm(output): 0.9829, norm(x): 0.9775, norm(y): 1.0186, norm:19.2676, tok/sec: 100809.57, flops:105.81, batch-reuse:1
@ 524 train 6.6124 , allloss: 17.7379, dt: 1320.16ms, fracRes: 0.4199, norm(attn): 0.0654, norm(output): 0.9828, norm(x): 0.9775, norm(y): 1.0186, norm:18.8606, tok/sec: 99285.21, flops:104.21, batch-reuse:1
@ 525 train 6.6297 , allloss: 17.6665, dt: 1301.67ms, fracRes: 0.4197, norm(attn): 0.0654, norm(output): 0.9828, norm(x): 0.9775, norm(y): 1.0186, norm:21.5020, tok/sec: 100695.38, flops:105.69, batch-reuse:1
@ 526 train 6.6332 , allloss: 17.4773, dt: 1308.09ms, fracRes: 0.4194, norm(attn): 0.0664, norm(output): 0.9827, norm(x): 0.9772, norm(y): 1.0186, norm:19.4720, tok/sec: 100201.31, flops:105.17, batch-reuse:1
@ 527 train 6.6484 , allloss: 17.6211, dt: 1334.72ms, fracRes: 0.4191, norm(attn): 0.0669, norm(output): 0.9827, norm(x): 0.9774, norm(y): 1.0184, norm:22.8167, tok/sec: 98201.84, flops:103.08, batch-reuse:1
@ 528 train 6.6014 , allloss: 17.4175, dt: 1332.06ms, fracRes: 0.4188, norm(attn): 0.0654, norm(output): 0.9826, norm(x): 0.9774, norm(y): 1.0185, norm:23.8083, tok/sec: 98398.00, flops:103.28, batch-reuse:1
@ 529 train 6.5496 , allloss: 17.4663, dt: 1331.66ms, fracRes: 0.4195, norm(attn): 0.0649, norm(output): 0.9826, norm(x): 0.9775, norm(y): 1.0183, norm:24.1647, tok/sec: 98427.47, flops:103.31, batch-reuse:1
@ 530 train 6.6561 , allloss: 17.5044, dt: 1306.60ms, fracRes: 0.4199, norm(attn): 0.0645, norm(output): 0.9825, norm(x): 0.9771, norm(y): 1.0185, norm:23.2472, tok/sec: 100315.66, flops:105.29, batch-reuse:1
@ 531 train 6.6854 , allloss: 17.6469, dt: 1305.52ms, fracRes: 0.4191, norm(attn): 0.0664, norm(output): 0.9825, norm(x): 0.9772, norm(y): 1.0180, norm:23.2565, tok/sec: 100398.56, flops:105.38, batch-reuse:1
@ 532 train 6.4946 , allloss: 17.1856, dt: 1288.29ms, fracRes: 0.4201, norm(attn): 0.0669, norm(output): 0.9824, norm(x): 0.9774, norm(y): 1.0183, norm:24.6355, tok/sec: 101741.42, flops:106.79, batch-reuse:1
@ 533 train 6.5640 , allloss: 17.4391, dt: 1288.68ms, fracRes: 0.4192, norm(attn): 0.0669, norm(output): 0.9824, norm(x): 0.9773, norm(y): 1.0182, norm:26.0642, tok/sec: 101709.97, flops:106.76, batch-reuse:1
@ 534 train 6.4822 , allloss: 17.2706, dt: 1295.30ms, fracRes: 0.4198, norm(attn): 0.0684, norm(output): 0.9823, norm(x): 0.9772, norm(y): 1.0182, norm:26.6121, tok/sec: 101190.49, flops:106.21, batch-reuse:1
@ 535 train 6.5831 , allloss: 17.4341, dt: 1284.71ms, fracRes: 0.4190, norm(attn): 0.0693, norm(output): 0.9823, norm(x): 0.9775, norm(y): 1.0180, norm:27.9475, tok/sec: 102024.45, flops:107.09, batch-reuse:1
@ 536 train 6.5495 , allloss: 17.2789, dt: 1316.98ms, fracRes: 0.4195, norm(attn): 0.0698, norm(output): 0.9823, norm(x): 0.9774, norm(y): 1.0181, norm:26.4745, tok/sec: 99524.59, flops:104.46, batch-reuse:1
@ 537 train 6.5300 , allloss: 17.3603, dt: 1347.30ms, fracRes: 0.4199, norm(attn): 0.0698, norm(output): 0.9822, norm(x): 0.9773, norm(y): 1.0181, norm:28.7862, tok/sec: 97284.61, flops:102.11, batch-reuse:1
@ 538 train 6.4669 , allloss: 17.0590, dt: 1336.40ms, fracRes: 0.4196, norm(attn): 0.0718, norm(output): 0.9822, norm(x): 0.9774, norm(y): 1.0179, norm:25.0623, tok/sec: 98078.63, flops:102.95, batch-reuse:1
@ 539 train 6.5284 , allloss: 17.3057, dt: 1303.39ms, fracRes: 0.4201, norm(attn): 0.0698, norm(output): 0.9821, norm(x): 0.9770, norm(y): 1.0179, norm:28.0621, tok/sec: 100562.75, flops:105.55, batch-reuse:1
@ 540 train 6.5868 , allloss: 17.2846, dt: 1277.48ms, fracRes: 0.4199, norm(attn): 0.0703, norm(output): 0.9821, norm(x): 0.9771, norm(y): 1.0179, norm:24.4750, tok/sec: 102601.89, flops:107.69, batch-reuse:1
@ 541 train 6.4993 , allloss: 17.1734, dt: 1306.97ms, fracRes: 0.4198, norm(attn): 0.0713, norm(output): 0.9820, norm(x): 0.9771, norm(y): 1.0180, norm:29.6109, tok/sec: 100287.10, flops:105.26, batch-reuse:1
@ 542 train 6.5846 , allloss: 17.2931, dt: 1295.61ms, fracRes: 0.4199, norm(attn): 0.0708, norm(output): 0.9820, norm(x): 0.9768, norm(y): 1.0180, norm:28.0777, tok/sec: 101166.12, flops:106.19, batch-reuse:1
@ 543 train 6.6609 , allloss: 17.5515, dt: 1293.14ms, fracRes: 0.4202, norm(attn): 0.0703, norm(output): 0.9819, norm(x): 0.9768, norm(y): 1.0176, norm:30.2016, tok/sec: 101359.39, flops:106.39, batch-reuse:1
@ 544 train 6.5331 , allloss: 17.2809, dt: 1306.18ms, fracRes: 0.4203, norm(attn): 0.0703, norm(output): 0.9819, norm(x): 0.9766, norm(y): 1.0177, norm:31.4701, tok/sec: 100347.89, flops:105.33, batch-reuse:1
@ 545 train 6.5396 , allloss: 17.2023, dt: 1336.46ms, fracRes: 0.4199, norm(attn): 0.0713, norm(output): 0.9818, norm(x): 0.9768, norm(y): 1.0177, norm:29.4034, tok/sec: 98074.15, flops:102.94, batch-reuse:1
@ 546 train 6.4830 , allloss: 17.2287, dt: 1315.52ms, fracRes: 0.4204, norm(attn): 0.0698, norm(output): 0.9818, norm(x): 0.9764, norm(y): 1.0178, norm:35.1851, tok/sec: 99634.76, flops:104.58, batch-reuse:1
@ 547 train 6.6146 , allloss: 17.4846, dt: 1292.14ms, fracRes: 0.4201, norm(attn): 0.0703, norm(output): 0.9817, norm(x): 0.9765, norm(y): 1.0177, norm:29.8087, tok/sec: 101438.02, flops:106.47, batch-reuse:1
@ 548 train 6.6134 , allloss: 17.3366, dt: 1264.22ms, fracRes: 0.4201, norm(attn): 0.0693, norm(output): 0.9817, norm(x): 0.9766, norm(y): 1.0176, norm:33.6862, tok/sec: 103678.12, flops:108.82, batch-reuse:1
@ 549 train 6.5531 , allloss: 17.2777, dt: 1301.04ms, fracRes: 0.4200, norm(attn): 0.0708, norm(output): 0.9817, norm(x): 0.9765, norm(y): 1.0175, norm:30.7580, tok/sec: 100744.28, flops:105.74, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6797,     0.3223,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3613,     0.6094,     0.0276,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5781,     0.4102,     0.0118,     0.0004,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4043,     0.2832,     0.1138,     0.0398,     0.1602,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3516,     0.2305,     0.0903,     0.0173,     0.1738,     0.1367,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1040,     0.1216,     0.1670,     0.3105,     0.0762,     0.0869,     0.1328,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1650,     0.2109,     0.0378,     0.0332,     0.0918,     0.1279,     0.2891,     0.0452,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1982,     0.1123,     0.0291,     0.0135,     0.0623,     0.0669,     0.3789,     0.0952,     0.0452,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1826,     0.2334,     0.0122,     0.0014,     0.0664,     0.0272,     0.3730,     0.0408,     0.0410,     0.0220,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0198,     0.0181,     0.0947,     0.5117,     0.0342,     0.1021,     0.0068,     0.0664,     0.0840,     0.0562,     0.0066,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1016,     0.1035,     0.0110,     0.0054,     0.0444,     0.0288,     0.1021,     0.0142,     0.0359,     0.0291,     0.4609,     0.0635,     0.0000,     0.0000,     0.0000],
        [    0.0947,     0.1040,     0.0273,     0.0117,     0.0723,     0.0444,     0.1377,     0.0262,     0.0396,     0.0466,     0.2471,     0.0884,     0.0605,     0.0000,     0.0000],
        [    0.0024,     0.0032,     0.0684,     0.8320,     0.0105,     0.0215,     0.0007,     0.0109,     0.0287,     0.0151,     0.0003,     0.0037,     0.0021,     0.0001,     0.0000],
        [    0.0192,     0.0187,     0.0002,     0.0000,     0.0021,     0.0007,     0.0903,     0.0012,     0.0008,     0.0012,     0.2988,     0.0103,     0.0208,     0.5352,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0002,  0.0147, -0.0003,  ...,  0.0091,  0.0393, -0.0073],
        [-0.0212,  0.0235, -0.0233,  ..., -0.0567, -0.0095,  0.0201],
        [-0.0191,  0.0112,  0.0402,  ...,  0.0012,  0.0109,  0.0079],
        ...,
        [ 0.0446,  0.0199,  0.0221,  ..., -0.0072,  0.0328,  0.0182],
        [ 0.0103,  0.0244,  0.0460,  ..., -0.0025,  0.0408,  0.0080],
        [ 0.0484,  0.0310,  0.0457,  ...,  0.0275,  0.0312, -0.0230]], device='cuda:0', requires_grad=True)
K: tensor([ 1.1250, -0.6719,  0.6992, -0.7852, -1.2734, -1.7734, -1.0469, -1.7500, -1.1953, -0.8984, -1.0234, -1.0781, -0.8203,  1.5547,  0.0168,  1.3281,  0.3516,  1.8984,  1.3594,  0.4414, -0.7422,  1.3828, -0.2021, -1.8281,  2.1875,  0.5312, -0.6094, -1.1016, -0.5430, -1.6562,  0.8477, -0.2520,
         1.4141,  0.9062,  0.2520, -0.6562, -0.0623,  0.3320,  1.1641, -1.0234,  1.0625,  1.0703,  0.8125,  0.8594, -0.1318,  0.7305, -0.7266, -1.4141, -0.5586,  0.0265, -0.7383, -1.6797, -0.7656,  0.6953,  0.6602, -1.6172,  0.7539,  1.7344, -0.9219, -1.7891, -1.2188,  0.3184, -0.6523, -0.6602],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0254, -0.0041,  0.0045,  ..., -0.0103, -0.0086, -0.0042],
        [ 0.0094, -0.0056,  0.0276,  ...,  0.0619,  0.0311,  0.0324],
        [-0.0234, -0.0204, -0.0217,  ..., -0.0435, -0.0591,  0.0245],
        ...,
        [ 0.0258,  0.0166, -0.0061,  ..., -0.0016, -0.0265, -0.0068],
        [-0.0081, -0.0033, -0.0417,  ...,  0.0219, -0.0140,  0.0379],
        [-0.0049, -0.0018, -0.0045,  ...,  0.0017, -0.0295,  0.0033]], device='cuda:0', requires_grad=True)
Q: tensor([-0.6523,  1.6719, -1.7891,  1.0391,  1.4609,  1.2891,  1.4766,  0.1992,  0.3496,  1.3594,  1.3125,  1.1172,  0.2158, -1.2344,  0.9062, -0.6367, -0.5508, -1.3203, -1.7656,  1.8516,  0.7891, -0.8906, -0.0059,  1.0469, -0.8672, -1.8828,  1.5469,  2.7031,  1.4297,  0.2041, -1.1094,  1.1328,
        -0.8555, -1.5781,  1.1094,  1.3359, -1.6328,  0.6250, -0.7383,  0.2715, -1.2344, -1.5547, -1.7344, -1.0391,  0.8906, -1.5625,  0.7773,  0.3262,  1.8047,  1.4766,  0.5859,  1.0781,  0.6445, -1.7109, -0.6797,  0.6719, -1.0547, -0.9961,  1.2969,  3.0156,  1.9609,  0.1445,  1.6406,  2.1875],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -0.7461,     -0.7188,     -1.1719,     -0.6484,     -0.1289,      0.5547,     -0.0009,     -0.7383,     -0.4180,     -0.0674,      0.2754,     -0.0454,      0.2266,     -1.0625],
        [     0.0000,      0.5234,     -2.5781,     -3.7656,     -0.9062,     -1.8672,      0.6211,     -1.7500,     -1.2578,     -1.5391,      1.4609,     -0.4844,      0.0259,      2.0000,     -4.5938],
        [     0.0000,     -0.3418,     -3.8906,     -7.3750,     -1.9375,     -2.5000,      1.7734,     -2.1875,     -2.5781,     -2.2812,      2.4375,     -0.0124,      0.3770,      4.0312,     -7.3125],
        [     0.0000,     -0.3574,     -1.2656,     -2.3125,     -0.9297,     -1.1562,      0.5977,     -0.2461,     -0.9727,     -0.6992,      0.5469,     -0.1621,      0.1592,      0.3730,     -2.6875],
        [     0.0000,     -0.4199,     -1.3594,     -3.0156,     -0.7070,     -0.9453,      0.4238,     -1.1172,     -1.4688,     -0.8008,      1.1641,      0.0532,      0.0081,      1.0234,     -3.1094],
        [     0.0000,      0.1562,      0.4727,      1.0938,     -0.3125,     -0.1826,      0.2471,      0.3145,      0.3750,      0.4473,     -0.4199,     -0.0060,     -0.0113,     -0.4121,      0.3164],
        [     0.0000,      0.2461,     -1.4766,     -1.6094,     -0.5859,     -0.2578,      0.5586,     -1.2969,     -0.9766,     -0.8750,      0.5547,     -0.0096,     -0.0525,      1.2891,     -2.4688],
        [     0.0000,     -0.5664,     -1.9219,     -2.6875,     -1.1562,     -1.0859,      0.6484,     -0.7305,     -1.4766,     -1.6797,      0.1455,      0.2236,      0.1104,      1.1094,     -2.8281],
        [     0.0000,      0.2451,     -2.7031,     -4.8438,     -1.0078,     -1.9062,      0.7148,     -1.5000,     -1.4922,     -2.1250,      1.7812,     -0.5586,     -0.4512,      2.8125,     -5.6875],
        [     0.0000,     -0.0879,      1.5703,      3.2500,      0.5508,      1.6406,     -1.0703,      1.2109,      1.4453,      1.0469,     -1.0938,      0.0115,     -0.3438,     -2.0000,      3.4844],
        [     0.0000,      0.0178,     -2.2188,     -2.9375,     -0.8281,     -1.2578,      0.0047,     -1.9688,     -1.0469,     -1.2500,      1.5078,     -0.4688,     -0.3613,      1.3906,     -3.2656],
        [     0.0000,      0.0952,     -1.2422,     -2.0938,     -0.2715,     -0.7539,      0.3730,     -1.2812,     -0.8711,     -0.7070,      0.9570,     -0.0703,     -0.4453,      1.0703,     -2.1406],
        [     0.0000,      0.2715,      3.3438,      5.8438,      1.4766,      2.1875,     -1.2109,      1.5078,      2.4844,      1.8359,     -2.0156,      0.4316,     -0.1445,     -2.9219,      6.1562],
        [     0.0000,     -0.0266,     -4.6562,     -7.5312,     -2.2031,     -3.3125,      1.5547,     -2.7969,     -3.1562,     -2.8125,      2.7500,     -0.6211,      0.0771,      3.3281,     -8.3125]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5894],
        [0.5991],
        [0.7891],
        [0.3599],
        [0.3675],
        [0.1141],
        [0.1800],
        [0.1761],
        [0.1845],
        [0.0110],
        [0.0945],
        [0.0944],
        [0.0025],
        [0.0164]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0037,     0.9961,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0128,     0.0000,     0.0000,     0.9648,     0.0000,     0.0005,     0.0000,     0.0228,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0305,     0.0000,     0.1260,     0.7070,     0.0000,     0.0043,     0.0001,     0.0027,     0.0000,     0.0009,     0.0003,     0.0015,     0.1240,     0.0041,     0.0000],
        [    0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0352,  0.0297, -0.0237,  ..., -0.0118, -0.0174,  0.0300],
        [ 0.0330,  0.0294,  0.0743,  ..., -0.0158,  0.0329,  0.0527],
        [-0.0306,  0.0059, -0.0303,  ..., -0.0094, -0.0258,  0.0004],
        ...,
        [ 0.0662,  0.0075,  0.0296,  ...,  0.0059,  0.0278,  0.0021],
        [-0.0306,  0.0159, -0.0194,  ..., -0.0217, -0.0403,  0.0081],
        [-0.0172, -0.0162, -0.0108,  ..., -0.0149, -0.0329,  0.0185]], device='cuda:0', requires_grad=True)
K: tensor([-2.4219, -1.6328, -2.0312,  1.1641, -1.4609,  1.0859, -0.6133,  0.7070, -1.9219, -1.4922,  1.3750, -1.6250,  0.6523, -0.9805, -2.2969,  1.3438, -1.7656,  0.9102, -1.1250, -1.6328,  1.8906,  0.8516, -1.9297,  1.5078, -1.5000,  1.8047,  1.2891,  0.8242,  0.0298, -0.8203, -2.0156, -1.5703,
        -1.0703,  1.5391, -0.9688, -1.0938, -1.6797,  1.3984,  1.2812,  1.5156, -0.4004,  2.2969, -1.7188,  1.4844, -2.0938,  1.9844,  0.4512,  0.5312,  1.6406,  1.1797,  1.1953, -0.6719,  2.2812, -2.2656, -0.7305, -2.2656, -1.2891,  0.7734,  1.3359, -1.4688, -1.9844, -1.4141,  1.3984,  1.3750],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0004,  0.0271, -0.0026,  ...,  0.0259,  0.0247, -0.0253],
        [-0.0094, -0.0068,  0.0062,  ..., -0.0097, -0.0231,  0.0132],
        [-0.0102, -0.0024,  0.0326,  ..., -0.0262,  0.0470,  0.0240],
        ...,
        [-0.0446,  0.0022, -0.0405,  ..., -0.0084, -0.0255,  0.0316],
        [ 0.0209, -0.0053,  0.0146,  ...,  0.0196,  0.0470, -0.0009],
        [-0.0228,  0.0128,  0.0203,  ...,  0.0396,  0.0063,  0.0256]], device='cuda:0', requires_grad=True)
Q: tensor([ 1.6406,  3.0000,  1.6641, -1.9141,  2.5469, -2.2344,  1.4219, -2.4219,  1.4531,  2.1719, -1.3203,  1.7109, -2.5156,  1.6875,  2.2344, -1.7891,  2.1875, -2.9531,  1.4141,  1.9609, -2.1875, -2.2344,  2.7031, -0.7422,  2.3594, -1.6016, -2.7656, -1.3359, -0.6875,  1.5312,  1.6719,  1.9766,
         1.1328, -0.9258,  2.1406,  1.5156,  2.5938, -1.2656, -1.0312, -1.8359,  1.1094, -1.7266,  1.2109, -2.4688,  2.0312, -1.3203, -0.8633, -1.1875, -0.8086, -0.7070, -1.0312,  2.4062, -1.2656,  1.1875,  1.0469,  2.3594,  2.1094, -2.1094, -2.5000,  1.0547,  1.6953,  2.0781, -2.3438, -1.5781],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[   0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000],
        [   0.0000, -138.0000,   25.3750,   53.7500, -169.0000,  -37.5000, -113.0000,  -47.2500, -143.0000,  -59.7500,  -81.5000,  -64.5000,   16.7500,  -34.0000,  -46.2500],
        [   0.0000,   25.6250,   -5.6250,  -10.3750,   31.8750,    7.0000,   21.2500,    8.4375,   27.5000,   10.7500,   16.0000,   11.6875,   -3.2344,    6.4375,    9.0000],
        [   0.0000,   61.7500,  -12.1875,  -24.8750,   75.5000,   17.0000,   50.7500,   20.8750,   64.5000,   26.1250,   37.2500,   28.1250,   -7.1562,   14.5000,   21.2500],
        [   0.0000, -167.0000,   31.3750,   65.5000, -205.0000,  -45.2500, -137.0000,  -56.7500, -174.0000,  -72.0000,  -99.5000,  -78.0000,   20.2500,  -41.2500,  -56.2500],
        [   0.0000,  -30.5000,    6.5625,   12.1250,  -37.2500,   -8.2500,  -25.3750,  -10.6875,  -31.7500,  -13.0000,  -18.2500,  -13.5000,    3.7656,   -7.2812,   -9.8125],
        [   0.0000, -116.0000,   22.3750,   45.7500, -142.0000,  -31.2500,  -95.5000,  -39.2500, -121.5000,  -50.0000,  -69.0000,  -54.0000,   13.9375,  -29.0000,  -38.2500],
        [   0.0000,  -50.5000,    9.6250,   19.8750,  -61.2500,  -13.7500,  -41.7500,  -17.5000,  -52.2500,  -22.0000,  -30.1250,  -23.3750,    5.5000,  -12.5000,  -16.3750],
        [   0.0000, -128.0000,   24.2500,   51.0000, -157.0000,  -34.7500, -105.0000,  -44.0000, -134.0000,  -55.2500,  -76.5000,  -59.5000,   16.2500,  -32.0000,  -42.5000],
        [   0.0000,  -67.5000,   12.4375,   25.7500,  -82.5000,  -17.3750,  -54.7500,  -22.6250,  -70.0000,  -28.8750,  -40.0000,  -32.0000,    7.5625,  -16.7500,  -22.2500],
        [   0.0000,  -93.5000,   17.6250,   37.2500, -114.5000,  -25.6250,  -76.5000,  -31.8750,  -97.0000,  -39.7500,  -56.2500,  -43.2500,   10.8125,  -23.5000,  -31.6250],
        [   0.0000,  -74.5000,   13.3750,   29.3750,  -91.5000,  -20.5000,  -61.0000,  -25.6250,  -77.5000,  -32.7500,  -44.0000,  -35.0000,    8.8750,  -18.5000,  -24.3750],
        [   0.0000,   16.6250,   -3.7031,   -7.0312,   21.0000,    4.5625,   13.3750,    5.4375,   17.2500,    6.9688,   10.1875,    7.4062,   -1.8672,    3.7344,    5.7812],
        [   0.0000,   -7.4062,    1.4141,    3.1406,   -9.6875,   -1.9609,   -6.1250,   -2.4062,   -8.0000,   -3.4688,   -4.5625,   -3.0156,    1.4062,   -2.0156,   -2.1719],
        [   0.0000,  -58.7500,   11.8125,   23.2500,  -72.5000,  -16.3750,  -48.2500,  -19.6250,  -61.5000,  -25.0000,  -34.7500,  -27.8750,    7.0312,  -14.8125,  -20.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    1.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0520],
        [    0.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9766,     0.0007,     0.0000,     0.0212,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.7031,     0.0000,     0.2949,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0306,  0.0039, -0.0132,  ..., -0.0446, -0.0351,  0.0075],
        [-0.0240, -0.0193,  0.0154,  ..., -0.0069, -0.0247, -0.0013],
        [ 0.0585,  0.0241,  0.0189,  ...,  0.0118,  0.0868, -0.0071],
        ...,
        [ 0.0293, -0.0150,  0.0200,  ...,  0.0450,  0.0279, -0.0058],
        [-0.0174, -0.0250,  0.0442,  ...,  0.0428,  0.0038, -0.0111],
        [ 0.0131, -0.0289, -0.0738,  ...,  0.0220, -0.0244, -0.0200]], device='cuda:0', requires_grad=True)
K: tensor([ 4.7812,  5.0000, -4.9375, -4.6875, -4.5625, -4.2812, -4.4375, -4.2500,  5.0000,  4.9688,  3.6719,  3.3750,  3.6094, -4.1875,  5.0000,  5.2812,  4.6562,  4.2500, -5.3125,  4.9688,  1.3906, -3.9531,  3.5781, -5.1562, -4.5000, -6.4062, -4.4062,  4.7188,  5.5938,  3.5469,  4.2500,  4.7188,
        -4.3125,  4.9688, -4.3750, -5.5625, -4.8750, -5.4375, -4.0938, -3.5312, -4.3750,  4.8125,  3.4844, -4.0938, -3.1719, -4.0312, -4.0312,  3.5938,  3.5000, -4.3438, -3.9062,  4.9375,  4.2500,  5.0625, -4.9688,  3.5938, -3.5469,  4.9062,  4.7500, -5.3438,  3.4531, -4.5625, -4.9062,  4.6875],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[    -0.0012,      0.0022,      0.0495,  ...,      0.0381,      0.0260,      0.0226],
        [     0.0220,      0.0062,     -0.0012,  ...,     -0.0035,     -0.0012,     -0.0188],
        [    -0.0320,     -0.0345,     -0.0063,  ...,     -0.0080,      0.0218,      0.0137],
        ...,
        [    -0.0399,     -0.0175,     -0.0684,  ...,     -0.0085,      0.0145,     -0.0000],
        [     0.0042,     -0.0095,     -0.0657,  ...,      0.0118,     -0.0334,      0.0013],
        [    -0.0188,     -0.0041,      0.0445,  ...,      0.0011,      0.0082,      0.0177]], device='cuda:0', requires_grad=True)
Q: tensor([-5.0312, -5.3750,  6.6875,  4.9375,  3.6250,  5.1875,  6.0625,  6.8438, -5.4062, -6.0938, -5.3125, -6.4062, -2.6406,  3.9844, -5.6250, -6.1562, -6.1250, -3.8438,  5.6875, -7.1250, -1.6719,  5.9688, -3.7812,  6.1875,  6.0312,  4.7188,  6.8750, -4.0625, -6.6250, -5.1562, -4.8750, -6.9375,
         7.2500, -6.2812,  5.5938,  6.0938,  5.9062,  6.0312,  6.5625,  5.3438,  4.1562, -6.7500, -6.3125,  6.6562,  3.0781,  5.3750,  6.5938, -3.5781, -4.4062,  5.2500,  5.3125, -6.2188, -6.7188, -6.9375,  6.0625, -3.5625,  3.4375, -7.1562, -6.3750,  6.4688, -4.5625,  5.6250,  5.9062, -6.7812],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[   0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000],
        [   0.0000, -123.5000,  -52.0000,  112.5000,  -76.0000,    7.6250, -138.0000, -149.0000,  -82.5000, -175.0000, -120.0000, -174.0000,  -28.8750,   43.5000, -154.0000],
        [   0.0000,  -57.7500,  -25.7500,   52.2500,  -35.2500,    3.1250,  -65.5000,  -71.5000,  -38.7500,  -84.0000,  -58.0000,  -83.0000,  -14.6875,   21.0000,  -73.0000],
        [   0.0000,  116.0000,   48.0000, -105.0000,   70.5000,   -7.5312,  129.0000,  139.0000,   76.5000,  164.0000,  112.5000,  162.0000,   27.0000,  -41.5000,  144.0000],
        [   0.0000,  -65.5000,  -26.5000,   58.7500,  -41.0000,    3.5938,  -73.0000,  -77.5000,  -44.5000,  -91.5000,  -62.2500,  -90.5000,  -14.9375,   21.7500,  -80.5000],
        [   0.0000,   10.6250,    3.4219,   -9.8750,    6.8125,   -1.2344,   11.3750,   11.5625,    6.3750,   12.8750,    8.7500,   13.3750,    1.6172,   -3.9844,   12.6875],
        [   0.0000, -141.0000,  -59.0000,  129.0000,  -88.0000,    8.2500, -160.0000, -171.0000,  -95.0000, -202.0000, -138.0000, -199.0000,  -33.5000,   50.0000, -176.0000],
        [   0.0000, -152.0000,  -65.0000,  139.0000,  -93.5000,    9.0625, -172.0000, -185.0000, -101.5000, -219.0000, -150.0000, -216.0000,  -36.7500,   55.0000, -190.0000],
        [   0.0000,  -82.5000,  -34.7500,   74.5000,  -50.7500,    5.1562,  -92.5000,  -99.0000,  -55.2500, -117.5000,  -80.0000, -116.5000,  -19.2500,   29.1250, -103.0000],
        [   0.0000, -178.0000,  -76.0000,  162.0000, -110.0000,    9.8750, -201.0000, -217.0000, -119.5000, -256.0000, -176.0000, -253.0000,  -43.2500,   63.7500, -223.0000],
        [   0.0000, -113.0000,  -48.5000,  103.5000,  -70.5000,    6.3438, -128.0000, -138.0000,  -76.0000, -164.0000, -113.0000, -161.0000,  -27.3750,   40.7500, -142.0000],
        [   0.0000, -180.0000,  -77.0000,  164.0000, -111.0000,   10.3125, -203.0000, -219.0000, -120.5000, -260.0000, -178.0000, -256.0000,  -43.7500,   64.5000, -226.0000],
        [   0.0000,  -35.0000,  -15.4375,   31.7500,  -21.3750,    1.9688,  -39.7500,  -43.2500,  -23.2500,  -51.2500,  -35.5000,  -50.2500,   -8.9375,   12.9375,  -44.0000],
        [   0.0000,   50.7500,   21.3750,  -46.7500,   31.3750,   -2.9844,   57.5000,   61.7500,   33.5000,   72.5000,   50.2500,   71.5000,   12.2500,  -18.5000,   63.2500],
        [   0.0000, -160.0000,  -67.5000,  146.0000,  -98.5000,    9.2500, -180.0000, -194.0000, -107.0000, -228.0000, -156.0000, -226.0000,  -38.2500,   56.7500, -199.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    1.0000],
        [    1.0000],
        [    0.0000],
        [    0.0000],
        [    0.0023],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0457,  0.0328,  0.0297,  ...,  0.0337, -0.0080, -0.0373],
        [ 0.0124,  0.0309,  0.0335,  ...,  0.0417,  0.0110,  0.0272],
        [ 0.0420,  0.0255,  0.0059,  ...,  0.0223,  0.0450, -0.0033],
        ...,
        [-0.0286, -0.0318, -0.0245,  ..., -0.0064, -0.0233,  0.0322],
        [-0.0159, -0.0028, -0.0170,  ..., -0.0251, -0.0386, -0.0254],
        [ 0.0277,  0.0057,  0.0060,  ...,  0.0326,  0.0132, -0.0034]], device='cuda:0', requires_grad=True)
K: tensor([-3.2969, -4.5625, -4.5000,  4.1250, -3.2188, -3.9062, -3.4062,  4.2188, -4.6250, -3.3438,  4.3438,  2.5156, -4.0938, -4.2812,  3.5625,  4.4062,  3.9062, -4.3750, -3.5156,  3.4688,  4.2500, -3.4531, -4.3125,  3.8125, -3.1562,  3.9062, -4.7812, -3.7500,  2.9688, -4.3750,  2.6250, -5.0312,
        -4.4688, -3.4375,  3.2188, -4.9375, -3.0781, -4.6250,  4.1562,  4.4375, -4.7188, -3.7969, -4.7188, -4.0938,  4.5938,  4.7812, -3.4375, -4.2812, -3.6562,  4.8125,  2.4062,  4.7812,  4.4375, -4.7500, -3.4375, -4.5625,  3.4375,  3.2031, -4.0312, -2.6562, -4.7188,  3.1094,  3.7500, -4.5312],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0225,  0.0064, -0.0064,  ..., -0.0063, -0.0268, -0.0196],
        [-0.0173, -0.0161,  0.0047,  ...,  0.0015, -0.0264,  0.0053],
        [-0.0171, -0.0023,  0.0003,  ..., -0.0331,  0.0239,  0.0086],
        ...,
        [-0.0165,  0.0268, -0.0078,  ...,  0.0131,  0.0230, -0.0073],
        [-0.0349,  0.0315,  0.0009,  ...,  0.0101,  0.0031, -0.0378],
        [-0.0081, -0.0324, -0.0496,  ..., -0.0271,  0.0024,  0.0296]], device='cuda:0', requires_grad=True)
Q: tensor([ 4.7188,  3.2031,  4.5625, -4.9688,  3.8281,  3.7656,  3.8438, -4.3125,  4.1250,  2.9688, -5.0000, -4.7812,  3.9844,  3.0469, -3.6719, -4.7188, -3.6094,  2.9062,  4.5625, -3.5156, -3.5156,  4.0625,  4.4062, -3.8281,  3.5156, -3.5781,  3.9688,  4.2188, -4.4062,  5.5938, -3.5938,  3.5469,
         4.0000,  4.5312, -4.3750,  4.9375,  4.0625,  3.5625, -4.1250, -4.1562,  4.1562,  4.5312,  4.5938,  3.6094, -4.6562, -4.2812,  3.0625,  4.7188,  3.8281, -4.0000, -2.7812, -4.6250, -4.0312,  4.0000,  3.3125,  3.7188, -4.0938, -3.0312,  4.3438,  3.0781,  3.6875, -2.4688, -4.1562,  4.0000],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[   0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000],
        [   0.0000, -134.0000,  -69.5000,  -45.5000,  -45.2500,  -57.2500,  -58.0000, -124.5000, -118.5000, -211.0000,  -94.5000, -186.0000, -122.5000, -107.5000, -130.0000],
        [   0.0000,  -61.2500,  -32.2500,  -20.5000,  -20.7500,  -25.8750,  -25.8750,  -56.7500,  -54.0000,  -97.5000,  -43.7500,  -85.5000,  -56.0000,  -49.0000,  -59.5000],
        [   0.0000,  -50.2500,  -26.0000,  -17.2500,  -16.7500,  -21.1250,  -21.3750,  -46.5000,  -44.0000,  -79.0000,  -35.0000,  -69.5000,  -45.5000,  -39.7500,  -48.2500],
        [   0.0000,  -52.0000,  -27.0000,  -17.6250,  -18.1250,  -22.7500,  -22.7500,  -48.7500,  -46.7500,  -83.5000,  -37.7500,  -73.5000,  -48.5000,  -42.5000,  -51.0000],
        [   0.0000,  -65.5000,  -34.2500,  -22.5000,  -23.1250,  -28.8750,  -29.0000,  -61.7500,  -59.0000, -104.5000,  -47.2500,  -92.0000,  -61.0000,  -53.5000,  -64.0000],
        [   0.0000,  -70.0000,  -36.0000,  -23.6250,  -24.0000,  -30.3750,  -30.7500,  -65.0000,  -62.5000, -110.5000,  -49.5000,  -97.0000,  -64.5000,  -56.7500,  -67.5000],
        [   0.0000, -135.0000,  -70.5000,  -46.2500,  -45.5000,  -57.5000,  -58.0000, -126.0000, -119.0000, -214.0000,  -95.5000, -188.0000, -124.0000, -108.0000, -131.0000],
        [   0.0000, -126.5000,  -66.5000,  -43.0000,  -43.7500,  -54.7500,  -55.0000, -118.5000, -113.0000, -202.0000,  -91.0000, -178.0000, -117.0000, -102.5000, -124.0000],
        [   0.0000, -210.0000, -110.0000,  -71.5000,  -71.5000,  -89.5000,  -90.0000, -196.0000, -186.0000, -336.0000, -150.0000, -296.0000, -193.0000, -168.0000, -206.0000],
        [   0.0000, -105.0000,  -55.0000,  -35.7500,  -36.2500,  -45.0000,  -45.5000,  -98.5000,  -93.5000, -168.0000,  -76.0000, -148.0000,  -97.0000,  -85.0000, -103.0000],
        [   0.0000, -177.0000,  -93.0000,  -60.5000,  -60.5000,  -75.5000,  -76.0000, -166.0000, -157.0000, -284.0000, -127.0000, -249.0000, -164.0000, -142.0000, -174.0000],
        [   0.0000, -140.0000,  -73.0000,  -47.7500,  -48.0000,  -60.2500,  -60.7500, -131.0000, -124.5000, -222.0000, -100.0000, -196.0000, -129.0000, -112.5000, -136.0000],
        [   0.0000, -109.0000,  -57.5000,  -37.2500,  -37.7500,  -47.5000,  -47.7500, -102.5000,  -98.0000, -175.0000,  -79.0000, -154.0000, -101.5000,  -88.5000, -107.5000],
        [   0.0000, -130.0000,  -68.0000,  -44.2500,  -44.2500,  -55.2500,  -55.7500, -121.5000, -114.5000, -207.0000,  -93.0000, -182.0000, -119.5000, -104.0000, -127.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1445,     0.8555,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0413,     0.8633,     0.0159,     0.0791,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2373,     0.0121,     0.4980,     0.1177,     0.1357,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1338,     0.2256,     0.1152,     0.1025,     0.2363,     0.1865,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1074,     0.1709,     0.1562,     0.0869,     0.1689,     0.1865,     0.1230,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0698,     0.4141,     0.1426,     0.1030,     0.0913,     0.0820,     0.0225,     0.0742,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0835,     0.0728,     0.2246,     0.0747,     0.0625,     0.2256,     0.0923,     0.0469,     0.1177,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0811,     0.0030,     0.3438,     0.0227,     0.0400,     0.2617,     0.2119,     0.0089,     0.0260,     0.0023,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1113,     0.0413,     0.2236,     0.1113,     0.0776,     0.1914,     0.0518,     0.0415,     0.0879,     0.0344,     0.0273,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1050,     0.0107,     0.2578,     0.0317,     0.0835,     0.2041,     0.1973,     0.0161,     0.0496,     0.0073,     0.0186,     0.0175,     0.0000,     0.0000,     0.0000],
        [    0.0221,     0.3516,     0.0388,     0.0287,     0.0522,     0.0275,     0.0074,     0.0305,     0.1211,     0.1631,     0.0219,     0.1133,     0.0209,     0.0000,     0.0000],
        [    0.0322,     0.1748,     0.0757,     0.0593,     0.0294,     0.0566,     0.0189,     0.0525,     0.0732,     0.1167,     0.0216,     0.1572,     0.0640,     0.0688,     0.0000],
        [    0.0608,     0.0952,     0.0952,     0.0400,     0.0903,     0.0752,     0.0588,     0.0400,     0.0996,     0.0571,     0.0403,     0.0564,     0.0410,     0.1079,     0.0422]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[    -0.0061,      0.0243,      0.0319,  ...,      0.0179,     -0.0389,     -0.0153],
        [     0.0075,      0.0021,      0.0083,  ...,     -0.0071,      0.0016,      0.0470],
        [     0.0136,      0.0164,     -0.0256,  ...,      0.0132,      0.0206,      0.0031],
        ...,
        [    -0.0114,      0.0170,     -0.0108,  ...,     -0.0391,      0.0019,     -0.0317],
        [     0.0461,      0.0018,     -0.0570,  ...,      0.0127,     -0.0032,      0.0294],
        [     0.0001,     -0.0118,     -0.0001,  ...,     -0.0413,     -0.0170,     -0.0197]], device='cuda:0', requires_grad=True)
K: tensor([-0.3730,  0.7773,  0.1846, -0.2217, -0.6797, -0.5039,  1.2891,  1.0469,  0.8047,  0.9414, -0.7148,  0.4512,  0.9297,  0.3086, -2.1406, -0.5195,  0.8203, -0.6250,  0.6953, -0.9766,  0.5469,  1.1016,  1.0781, -0.3340,  0.1631,  0.0204, -0.7383,  1.0625,  0.5781,  0.4414,  0.4668, -0.7109,
        -0.2676, -0.0776,  0.4844,  1.2188, -0.0559,  1.3047, -0.9219, -0.2217,  0.8945,  0.5742,  0.4023, -0.9922,  0.4707,  1.1719, -1.1719,  1.3438,  0.2178,  0.0430,  0.7734,  0.4004,  0.4395,  0.4531,  1.8906, -0.0121,  0.6172,  0.4824, -0.1245, -0.1533,  0.8008,  0.5078, -0.6836,  0.7422],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[    -0.0213,     -0.0124,     -0.0083,  ...,      0.0093,      0.0265,     -0.0159],
        [    -0.0083,     -0.0231,     -0.0186,  ...,     -0.0438,     -0.0399,     -0.0043],
        [    -0.0077,     -0.0117,      0.0023,  ...,     -0.0039,     -0.0088,     -0.0111],
        ...,
        [     0.0122,     -0.0139,      0.0148,  ...,     -0.0262,     -0.0173,      0.0327],
        [     0.0048,     -0.0072,     -0.0220,  ...,     -0.0142,     -0.0014,      0.0000],
        [     0.0020,      0.0067,     -0.0386,  ...,      0.0318,      0.0409,     -0.0004]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.2539, -0.0125,  0.6367,  0.4785,  0.2715, -0.2246,  0.7812,  0.0344,  0.5430, -0.3535, -0.3145, -0.2676, -0.7461, -0.2227, -0.2012, -0.5156, -1.9531, -0.1040,  0.7109,  0.5938,  0.6719,  0.4102,  0.1396, -0.7812,  0.1514, -0.3965,  0.5664,  0.0498, -0.6445, -0.0393, -0.1641, -0.8828,
         1.1172,  0.2041,  0.1553, -1.5391, -1.2891, -0.0752, -0.3281,  0.6758,  0.1855,  0.0077,  0.2295,  0.4551, -0.5430,  0.6055,  0.0669,  0.1758, -0.5078,  0.0400, -0.3711, -0.1484,  0.4102, -0.0635, -0.7969,  1.0625,  0.8945, -0.1235, -0.4316, -0.1436, -0.1377, -0.1426, -0.0442, -0.4941],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      1.7812,      0.6641,      0.0967,      0.1045,      0.8984,      1.0859,      0.8398,      1.5547,      0.9062,      0.0635,      0.7148,      1.4609,      1.5391,      0.6836],
        [     0.0000,     11.9375,     -1.9688,      4.6250,      1.1797,     -2.2969,     -4.4062,      6.4375,      4.0625,     11.3125,      3.6250,      8.6250,      3.3281,      1.6016,      6.7500],
        [     0.0000,      3.0469,     -0.9531,      0.6523,      0.6211,     -0.8125,     -1.6484,      0.9570,      1.3203,      2.7500,      0.7227,      1.8125,     -0.0344,      0.6562,      0.9961],
        [     0.0000,     -2.9688,      0.7422,     -0.6992,     -0.5586,      0.9961,      0.6328,     -1.7266,     -0.8320,     -2.6406,     -1.5391,     -1.6562,     -0.7617,     -0.2178,     -1.1875],
        [     0.0000,      0.5273,     -0.1465,     -0.2637,      0.5703,      0.3379,     -0.2637,     -0.4688,      0.7266,      0.4727,     -0.1494,      0.3262,     -0.3398,      0.5234,     -0.0347],
        [     0.0000,      0.4629,      0.3730,     -0.2109,      0.4531,      0.5508,      0.1338,     -0.4004,      0.5977,      0.0011,     -0.4395,      0.0762,     -0.1865,      0.4863,     -0.1533],
        [     0.0000,      1.7812,      0.7070,      0.3867,      0.2676,      0.1611,     -1.1328,      0.0591,      0.9492,      0.9531,     -0.5703,      0.9844,     -0.2314,      0.7812,      0.4902],
        [     0.0000,     -0.1348,      0.9883,     -0.1094,     -0.2852,      0.9961,      0.1001,     -0.5781,      0.3438,     -0.3828,     -1.0391,      0.3047,      0.2148,      0.6406,      0.3359],
        [     0.0000,     -3.2812,      1.4453,     -1.2734,     -0.7070,      1.1719,      0.9648,     -2.2188,     -1.1328,     -3.5625,     -2.4531,     -2.0938,     -1.0391,     -0.1348,     -1.6484],
        [     0.0000,     -0.9961,      0.6953,     -0.0021,     -0.3633,      0.5391,     -0.7695,     -0.9883,     -0.2402,     -1.1797,     -1.4062,     -0.3516,     -0.9336,      0.0791,     -0.5273],
        [     0.0000,     -2.2812,      0.9023,     -1.1953,     -0.2295,      0.6641,      0.6328,     -1.8750,     -0.7500,     -2.6562,     -1.7266,     -1.7969,     -1.1562,     -0.1016,     -1.5859],
        [     0.0000,      2.7656,      0.5625,      0.2598,      0.8594,      0.2148,     -1.0859,      0.3203,      1.6953,      2.0000,     -0.0136,      1.6328,     -0.0559,      1.2812,      0.7930],
        [     0.0000,      1.6953,      0.8594,      0.6094,     -0.0869,      0.5664,     -0.5312,      0.4902,      0.8203,      1.2891,     -0.3965,      1.5859,      0.6875,      0.7578,      1.3125],
        [     0.0000,      0.4512,      0.4512,     -0.4141,      0.3984,      0.2109,     -0.0309,     -0.4160,      0.4941,     -0.0610,     -0.4141,     -0.0732,     -0.3945,      0.5742,     -0.3613]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0254],
        [    0.0000],
        [    0.0130],
        [    0.2281],
        [    0.1353],
        [    0.1159],
        [    0.0217],
        [    0.0491],
        [    0.0701],
        [    0.0921],
        [    0.0683],
        [    0.0194],
        [    0.0120],
        [    0.0399]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.1387 a:0.0723,:0.0386 and:0.0889,:0.0391,:0.1445 a:0.0505,:0.0273)
,
------
		( a:0.0723,:0.0386 and:0.0889,:0.0391,:0.1445 a:0.0505,:0.0273 and:0.0864)
 and the same, and the same of the same of the same, and
@ 550 train 6.5180 , allloss: 17.1207, dt: 1721.65ms, fracRes: 0.4211, norm(attn): 0.0703, norm(output): 0.9816, norm(x): 0.9759, norm(y): 1.0178, norm:34.3503, tok/sec: 76131.54, flops:79.91, batch-reuse:1
@ 551 train 6.5559 , allloss: 17.2941, dt: 1298.62ms, fracRes: 0.4203, norm(attn): 0.0708, norm(output): 0.9816, norm(x): 0.9762, norm(y): 1.0175, norm:31.5979, tok/sec: 100931.41, flops:105.94, batch-reuse:1
@ 552 train 6.4069 , allloss: 17.0745, dt: 1272.79ms, fracRes: 0.4208, norm(attn): 0.0703, norm(output): 0.9815, norm(x): 0.9761, norm(y): 1.0176, norm:38.4094, tok/sec: 102979.99, flops:108.09, batch-reuse:1
@ 553 train 6.5559 , allloss: 17.3735, dt: 1285.90ms, fracRes: 0.4201, norm(attn): 0.0693, norm(output): 0.9815, norm(x): 0.9763, norm(y): 1.0173, norm:34.6891, tok/sec: 101929.80, flops:106.99, batch-reuse:1
@ 554 train 6.5085 , allloss: 17.2084, dt: 1308.64ms, fracRes: 0.4204, norm(attn): 0.0713, norm(output): 0.9814, norm(x): 0.9760, norm(y): 1.0176, norm:34.3798, tok/sec: 100158.96, flops:105.13, batch-reuse:1
@ 555 train 6.4731 , allloss: 17.2398, dt: 1325.37ms, fracRes: 0.4202, norm(attn): 0.0713, norm(output): 0.9814, norm(x): 0.9763, norm(y): 1.0174, norm:32.8153, tok/sec: 98894.45, flops:103.80, batch-reuse:1
@ 556 train 6.4235 , allloss: 16.9495, dt: 1348.19ms, fracRes: 0.4206, norm(attn): 0.0728, norm(output): 0.9813, norm(x): 0.9760, norm(y): 1.0176, norm:33.8688, tok/sec: 97221.06, flops:102.05, batch-reuse:1
@ 557 train 6.5192 , allloss: 17.2412, dt: 1301.72ms, fracRes: 0.4207, norm(attn): 0.0698, norm(output): 0.9813, norm(x): 0.9759, norm(y): 1.0174, norm:31.0161, tok/sec: 100691.16, flops:105.69, batch-reuse:1
@ 558 train 6.6263 , allloss: 17.4535, dt: 1288.49ms, fracRes: 0.4214, norm(attn): 0.0698, norm(output): 0.9812, norm(x): 0.9757, norm(y): 1.0173, norm:32.3424, tok/sec: 101725.50, flops:106.77, batch-reuse:1
@ 559 train 6.7659 , allloss: 17.5932, dt: 1268.70ms, fracRes: 0.4203, norm(attn): 0.0688, norm(output): 0.9812, norm(x): 0.9759, norm(y): 1.0174, norm:31.2258, tok/sec: 103311.81, flops:108.44, batch-reuse:1
@ 560 train 6.6616 , allloss: 17.3718, dt: 1283.22ms, fracRes: 0.4206, norm(attn): 0.0703, norm(output): 0.9811, norm(x): 0.9759, norm(y): 1.0173, norm:32.1617, tok/sec: 102143.38, flops:107.21, batch-reuse:1
@ 561 train 6.7318 , allloss: 17.4460, dt: 1295.37ms, fracRes: 0.4202, norm(attn): 0.0688, norm(output): 0.9811, norm(x): 0.9760, norm(y): 1.0172, norm:31.8752, tok/sec: 101184.98, flops:106.21, batch-reuse:1
@ 562 train 6.6238 , allloss: 17.4397, dt: 1306.76ms, fracRes: 0.4202, norm(attn): 0.0688, norm(output): 0.9810, norm(x): 0.9759, norm(y): 1.0172, norm:34.3390, tok/sec: 100303.22, flops:105.28, batch-reuse:1
@ 563 train 6.7239 , allloss: 17.5605, dt: 1338.71ms, fracRes: 0.4203, norm(attn): 0.0703, norm(output): 0.9810, norm(x): 0.9758, norm(y): 1.0173, norm:35.0438, tok/sec: 97909.33, flops:102.77, batch-reuse:1
@ 564 train 6.5661 , allloss: 17.2467, dt: 1310.89ms, fracRes: 0.4202, norm(attn): 0.0703, norm(output): 0.9809, norm(x): 0.9756, norm(y): 1.0174, norm:34.2971, tok/sec: 99986.65, flops:104.95, batch-reuse:1
@ 565 train 6.4489 , allloss: 17.0697, dt: 1284.06ms, fracRes: 0.4204, norm(attn): 0.0708, norm(output): 0.9809, norm(x): 0.9758, norm(y): 1.0172, norm:41.5888, tok/sec: 102076.28, flops:107.14, batch-reuse:1
@ 566 train 6.6355 , allloss: 17.3479, dt: 1304.03ms, fracRes: 0.4201, norm(attn): 0.0684, norm(output): 0.9808, norm(x): 0.9757, norm(y): 1.0172, norm:33.9124, tok/sec: 100513.25, flops:105.50, batch-reuse:1
@ 567 train 6.6438 , allloss: 17.5986, dt: 1312.76ms, fracRes: 0.4210, norm(attn): 0.0698, norm(output): 0.9808, norm(x): 0.9750, norm(y): 1.0175, norm:42.2887, tok/sec: 99844.68, flops:104.80, batch-reuse:1
@ 568 train 6.6867 , allloss: 17.4070, dt: 1318.30ms, fracRes: 0.4200, norm(attn): 0.0713, norm(output): 0.9808, norm(x): 0.9757, norm(y): 1.0171, norm:29.8051, tok/sec: 99425.30, flops:104.36, batch-reuse:1
@ 569 train 6.6133 , allloss: 17.5341, dt: 1275.80ms, fracRes: 0.4208, norm(attn): 0.0703, norm(output): 0.9807, norm(x): 0.9753, norm(y): 1.0172, norm:42.0448, tok/sec: 102737.28, flops:107.84, batch-reuse:1
@ 570 train 6.5994 , allloss: 17.2847, dt: 1298.69ms, fracRes: 0.4208, norm(attn): 0.0698, norm(output): 0.9807, norm(x): 0.9751, norm(y): 1.0171, norm:31.6432, tok/sec: 100926.37, flops:105.94, batch-reuse:1
@ 571 train 6.5612 , allloss: 17.4307, dt: 1285.99ms, fracRes: 0.4210, norm(attn): 0.0698, norm(output): 0.9806, norm(x): 0.9753, norm(y): 1.0172, norm:39.5699, tok/sec: 101922.77, flops:106.98, batch-reuse:1
@ 572 train 6.5485 , allloss: 17.2798, dt: 1302.40ms, fracRes: 0.4202, norm(attn): 0.0723, norm(output): 0.9806, norm(x): 0.9755, norm(y): 1.0173, norm:34.5280, tok/sec: 100639.18, flops:105.63, batch-reuse:1
@ 573 train 6.5613 , allloss: 17.2351, dt: 1288.88ms, fracRes: 0.4207, norm(attn): 0.0703, norm(output): 0.9805, norm(x): 0.9753, norm(y): 1.0173, norm:33.7351, tok/sec: 101694.69, flops:106.74, batch-reuse:1
@ 574 train 6.5790 , allloss: 17.3176, dt: 1295.10ms, fracRes: 0.4202, norm(attn): 0.0698, norm(output): 0.9805, norm(x): 0.9752, norm(y): 1.0170, norm:35.4666, tok/sec: 101206.27, flops:106.23, batch-reuse:1
@ 575 train 6.5218 , allloss: 17.0642, dt: 1315.77ms, fracRes: 0.4200, norm(attn): 0.0698, norm(output): 0.9804, norm(x): 0.9754, norm(y): 1.0170, norm:32.2503, tok/sec: 99616.56, flops:104.56, batch-reuse:1
@ 576 train 6.4924 , allloss: 17.0786, dt: 1297.02ms, fracRes: 0.4204, norm(attn): 0.0718, norm(output): 0.9804, norm(x): 0.9752, norm(y): 1.0171, norm:34.4088, tok/sec: 101055.95, flops:106.07, batch-reuse:1
@ 577 train 6.6055 , allloss: 17.2914, dt: 1304.83ms, fracRes: 0.4204, norm(attn): 0.0688, norm(output): 0.9803, norm(x): 0.9750, norm(y): 1.0172, norm:36.6527, tok/sec: 100451.69, flops:105.44, batch-reuse:1
@ 578 train 6.5372 , allloss: 17.0994, dt: 1287.81ms, fracRes: 0.4200, norm(attn): 0.0708, norm(output): 0.9803, norm(x): 0.9755, norm(y): 1.0170, norm:31.9051, tok/sec: 101778.91, flops:106.83, batch-reuse:1
@ 579 train 6.5408 , allloss: 17.3187, dt: 1300.76ms, fracRes: 0.4202, norm(attn): 0.0688, norm(output): 0.9802, norm(x): 0.9751, norm(y): 1.0170, norm:40.6300, tok/sec: 100765.85, flops:105.77, batch-reuse:1
@ 580 train 6.6114 , allloss: 17.2366, dt: 1291.21ms, fracRes: 0.4204, norm(attn): 0.0703, norm(output): 0.9802, norm(x): 0.9750, norm(y): 1.0169, norm:32.8662, tok/sec: 101510.65, flops:106.55, batch-reuse:1
@ 581 train 6.5243 , allloss: 17.0540, dt: 1306.60ms, fracRes: 0.4203, norm(attn): 0.0684, norm(output): 0.9802, norm(x): 0.9751, norm(y): 1.0169, norm:36.5360, tok/sec: 100315.55, flops:105.29, batch-reuse:1
@ 582 train 6.5438 , allloss: 17.1388, dt: 1286.92ms, fracRes: 0.4207, norm(attn): 0.0703, norm(output): 0.9801, norm(x): 0.9747, norm(y): 1.0168, norm:33.4685, tok/sec: 101849.60, flops:106.90, batch-reuse:1
@ 583 train 6.4804 , allloss: 16.9186, dt: 1316.19ms, fracRes: 0.4200, norm(attn): 0.0713, norm(output): 0.9801, norm(x): 0.9749, norm(y): 1.0168, norm:34.4822, tok/sec: 99584.44, flops:104.53, batch-reuse:1
@ 584 train 6.5741 , allloss: 17.1942, dt: 1340.49ms, fracRes: 0.4201, norm(attn): 0.0713, norm(output): 0.9800, norm(x): 0.9750, norm(y): 1.0167, norm:38.0946, tok/sec: 97779.16, flops:102.63, batch-reuse:1
@ 585 train 6.5206 , allloss: 16.8996, dt: 1338.56ms, fracRes: 0.4205, norm(attn): 0.0718, norm(output): 0.9799, norm(x): 0.9747, norm(y): 1.0170, norm:33.7886, tok/sec: 97920.08, flops:102.78, batch-reuse:1
@ 586 train 6.5469 , allloss: 17.0633, dt: 1319.07ms, fracRes: 0.4205, norm(attn): 0.0718, norm(output): 0.9799, norm(x): 0.9748, norm(y): 1.0169, norm:40.4792, tok/sec: 99366.90, flops:104.30, batch-reuse:1
@ 587 train 6.5575 , allloss: 16.9074, dt: 1316.92ms, fracRes: 0.4200, norm(attn): 0.0698, norm(output): 0.9799, norm(x): 0.9748, norm(y): 1.0168, norm:34.6530, tok/sec: 99528.91, flops:104.47, batch-reuse:1
@ 588 train 6.5594 , allloss: 17.1995, dt: 1310.25ms, fracRes: 0.4200, norm(attn): 0.0728, norm(output): 0.9799, norm(x): 0.9748, norm(y): 1.0164, norm:40.3096, tok/sec: 100035.67, flops:105.00, batch-reuse:1
@ 589 train 6.5623 , allloss: 16.8685, dt: 1310.24ms, fracRes: 0.4206, norm(attn): 0.0723, norm(output): 0.9797, norm(x): 0.9746, norm(y): 1.0169, norm:35.7623, tok/sec: 100036.43, flops:105.00, batch-reuse:1
@ 590 train 6.5482 , allloss: 17.2476, dt: 1300.59ms, fracRes: 0.4186, norm(attn): 0.0723, norm(output): 0.9798, norm(x): 0.9750, norm(y): 1.0165, norm:129.4167, tok/sec: 100778.91, flops:105.78, batch-reuse:1
@ 591 train 6.4982 , allloss: 17.4533, dt: 1299.86ms, fracRes: 0.4202, norm(attn): 0.0713, norm(output): 0.9797, norm(x): 0.9745, norm(y): 1.0168, norm:52.1660, tok/sec: 100835.84, flops:105.84, batch-reuse:1
@ 592 train 6.5190 , allloss: 16.7112, dt: 1352.80ms, fracRes: 0.4210, norm(attn): 0.0723, norm(output): 0.9796, norm(x): 0.9741, norm(y): 1.0170, norm:40.2582, tok/sec: 96889.37, flops:101.70, batch-reuse:1
@ 593 train 6.5006 , allloss: 17.4530, dt: 1337.01ms, fracRes: 0.4203, norm(attn): 0.0732, norm(output): 0.9797, norm(x): 0.9743, norm(y): 1.0164, norm:38.8436, tok/sec: 98033.78, flops:102.90, batch-reuse:1
@ 594 train 6.6876 , allloss: 17.1978, dt: 1297.30ms, fracRes: 0.4209, norm(attn): 0.0718, norm(output): 0.9795, norm(x): 0.9740, norm(y): 1.0167, norm:33.6853, tok/sec: 101034.63, flops:106.05, batch-reuse:1
@ 595 train 6.4803 , allloss: 16.6095, dt: 1308.40ms, fracRes: 0.4215, norm(attn): 0.0737, norm(output): 0.9795, norm(x): 0.9738, norm(y): 1.0171, norm:35.5407, tok/sec: 100177.12, flops:105.15, batch-reuse:1
@ 596 train 6.5089 , allloss: 16.9682, dt: 1289.72ms, fracRes: 0.4211, norm(attn): 0.0703, norm(output): 0.9794, norm(x): 0.9737, norm(y): 1.0168, norm:34.6627, tok/sec: 101628.48, flops:106.67, batch-reuse:1
@ 597 train 6.4900 , allloss: 16.3799, dt: 1288.31ms, fracRes: 0.4217, norm(attn): 0.0742, norm(output): 0.9794, norm(x): 0.9736, norm(y): 1.0170, norm:29.3853, tok/sec: 101739.41, flops:106.79, batch-reuse:1
@ 598 train 6.5725 , allloss: 16.8001, dt: 1312.62ms, fracRes: 0.4215, norm(attn): 0.0698, norm(output): 0.9793, norm(x): 0.9733, norm(y): 1.0167, norm:29.4689, tok/sec: 99855.51, flops:104.81, batch-reuse:1
@ 599 train 6.5866 , allloss: 16.5677, dt: 1280.35ms, fracRes: 0.4216, norm(attn): 0.0723, norm(output): 0.9793, norm(x): 0.9732, norm(y): 1.0169, norm:30.8175, tok/sec: 102371.74, flops:107.45, batch-reuse:1
@ 600 train 6.5157 , allloss: 16.5374, dt: 1283.18ms, fracRes: 0.4192, norm(attn): 0.0688, norm(output): 0.9792, norm(x): 0.9740, norm(y): 1.0166, norm:31.1389, tok/sec: 102145.85, flops:107.22, batch-reuse:1
@ 601 train 6.5798 , allloss: 16.3709, dt: 1298.30ms, fracRes: 0.4199, norm(attn): 0.0713, norm(output): 0.9792, norm(x): 0.9740, norm(y): 1.0168, norm:32.2398, tok/sec: 100956.56, flops:105.97, batch-reuse:1
@ 602 train 6.5622 , allloss: 16.1442, dt: 1320.11ms, fracRes: 0.4193, norm(attn): 0.0693, norm(output): 0.9791, norm(x): 0.9742, norm(y): 1.0169, norm:30.9740, tok/sec: 99289.05, flops:104.22, batch-reuse:1
@ 603 train 6.4989 , allloss: 16.0478, dt: 1327.84ms, fracRes: 0.4190, norm(attn): 0.0732, norm(output): 0.9791, norm(x): 0.9744, norm(y): 1.0169, norm:31.3552, tok/sec: 98710.42, flops:103.61, batch-reuse:1
@ 604 train 6.4074 , allloss: 15.7866, dt: 1344.33ms, fracRes: 0.4190, norm(attn): 0.0713, norm(output): 0.9791, norm(x): 0.9744, norm(y): 1.0167, norm:33.8451, tok/sec: 97499.69, flops:102.34, batch-reuse:1
@ 605 train 6.4544 , allloss: 15.7680, dt: 1353.85ms, fracRes: 0.4190, norm(attn): 0.0688, norm(output): 0.9791, norm(x): 0.9744, norm(y): 1.0166, norm:33.6295, tok/sec: 96814.09, flops:101.62, batch-reuse:1
@ 606 train 6.4693 , allloss: 15.5970, dt: 1311.92ms, fracRes: 0.4188, norm(attn): 0.0674, norm(output): 0.9790, norm(x): 0.9744, norm(y): 1.0165, norm:30.3853, tok/sec: 99908.85, flops:104.87, batch-reuse:1
@ 607 train 6.4556 , allloss: 15.2811, dt: 1327.87ms, fracRes: 0.4188, norm(attn): 0.0698, norm(output): 0.9790, norm(x): 0.9744, norm(y): 1.0165, norm:37.3355, tok/sec: 98708.41, flops:103.61, batch-reuse:1
@ 608 train 6.3747 , allloss: 14.3899, dt: 1336.43ms, fracRes: 0.4188, norm(attn): 0.0728, norm(output): 0.9789, norm(x): 0.9743, norm(y): 1.0167, norm:35.1445, tok/sec: 98076.51, flops:102.94, batch-reuse:1
@ 609 train 6.4413 , allloss: 14.6455, dt: 1314.14ms, fracRes: 0.4186, norm(attn): 0.0703, norm(output): 0.9789, norm(x): 0.9745, norm(y): 1.0162, norm:40.9710, tok/sec: 99739.40, flops:104.69, batch-reuse:1
@ 610 train 6.5869 , allloss: 14.5026, dt: 1312.32ms, fracRes: 0.4187, norm(attn): 0.0659, norm(output): 0.9788, norm(x): 0.9742, norm(y): 1.0163, norm:36.7388, tok/sec: 99878.19, flops:104.84, batch-reuse:1
@ 611 train 6.4908 , allloss: 14.2476, dt: 1324.39ms, fracRes: 0.4186, norm(attn): 0.0654, norm(output): 0.9788, norm(x): 0.9742, norm(y): 1.0165, norm:40.0600, tok/sec: 98967.48, flops:103.88, batch-reuse:1
@ 612 train 6.5219 , allloss: 14.1959, dt: 1304.79ms, fracRes: 0.4187, norm(attn): 0.0659, norm(output): 0.9787, norm(x): 0.9742, norm(y): 1.0166, norm:40.2371, tok/sec: 100454.26, flops:105.44, batch-reuse:1
@ 613 train 6.5811 , allloss: 14.2085, dt: 1303.56ms, fracRes: 0.4187, norm(attn): 0.0659, norm(output): 0.9787, norm(x): 0.9741, norm(y): 1.0162, norm:41.0671, tok/sec: 100549.52, flops:105.54, batch-reuse:1
@ 614 train 6.5178 , allloss: 13.8255, dt: 1300.81ms, fracRes: 0.4187, norm(attn): 0.0645, norm(output): 0.9786, norm(x): 0.9741, norm(y): 1.0164, norm:40.0777, tok/sec: 100762.21, flops:105.76, batch-reuse:1
@ 615 train 6.5039 , allloss: 13.7269, dt: 1338.01ms, fracRes: 0.4186, norm(attn): 0.0649, norm(output): 0.9786, norm(x): 0.9741, norm(y): 1.0163, norm:35.3018, tok/sec: 97960.71, flops:102.82, batch-reuse:1
@ 616 train 6.5132 , allloss: 13.5642, dt: 1338.40ms, fracRes: 0.4186, norm(attn): 0.0640, norm(output): 0.9785, norm(x): 0.9741, norm(y): 1.0165, norm:41.3234, tok/sec: 97932.13, flops:102.79, batch-reuse:1
@ 617 train 6.3290 , allloss: 13.1405, dt: 1279.00ms, fracRes: 0.4187, norm(attn): 0.0654, norm(output): 0.9785, norm(x): 0.9740, norm(y): 1.0165, norm:39.2243, tok/sec: 102479.89, flops:107.57, batch-reuse:1
@ 618 train 6.4743 , allloss: 13.2098, dt: 1326.55ms, fracRes: 0.4187, norm(attn): 0.0684, norm(output): 0.9785, norm(x): 0.9740, norm(y): 1.0165, norm:44.1079, tok/sec: 98806.34, flops:103.71, batch-reuse:1
@ 619 train 6.4158 , allloss: 13.0542, dt: 1336.25ms, fracRes: 0.4186, norm(attn): 0.0654, norm(output): 0.9784, norm(x): 0.9740, norm(y): 1.0162, norm:35.2565, tok/sec: 98089.69, flops:102.96, batch-reuse:1
@ 620 train 6.4348 , allloss: 13.0997, dt: 1287.61ms, fracRes: 0.4186, norm(attn): 0.0684, norm(output): 0.9784, norm(x): 0.9741, norm(y): 1.0162, norm:41.1998, tok/sec: 101794.51, flops:106.85, batch-reuse:1
@ 621 train 6.4434 , allloss: 12.9605, dt: 1321.31ms, fracRes: 0.4185, norm(attn): 0.0645, norm(output): 0.9783, norm(x): 0.9740, norm(y): 1.0161, norm:35.2513, tok/sec: 99198.54, flops:104.12, batch-reuse:1
@ 622 train 6.3842 , allloss: 13.0387, dt: 1313.34ms, fracRes: 0.4186, norm(attn): 0.0703, norm(output): 0.9783, norm(x): 0.9740, norm(y): 1.0163, norm:43.5761, tok/sec: 99800.35, flops:104.75, batch-reuse:1
@ 623 train 6.3709 , allloss: 12.6971, dt: 1312.08ms, fracRes: 0.4186, norm(attn): 0.0669, norm(output): 0.9782, norm(x): 0.9738, norm(y): 1.0165, norm:36.5381, tok/sec: 99896.48, flops:104.85, batch-reuse:1
@ 624 train 6.4600 , allloss: 13.1251, dt: 1305.26ms, fracRes: 0.4186, norm(attn): 0.0635, norm(output): 0.9782, norm(x): 0.9739, norm(y): 1.0159, norm:42.5813, tok/sec: 100418.59, flops:105.40, batch-reuse:1
@ 625 train 6.5090 , allloss: 12.8940, dt: 1292.40ms, fracRes: 0.4185, norm(attn): 0.0635, norm(output): 0.9782, norm(x): 0.9738, norm(y): 1.0161, norm:33.5505, tok/sec: 101417.86, flops:106.45, batch-reuse:1
@ 626 train 6.4247 , allloss: 13.0412, dt: 1300.24ms, fracRes: 0.4185, norm(attn): 0.0654, norm(output): 0.9781, norm(x): 0.9739, norm(y): 1.0162, norm:41.5330, tok/sec: 100806.15, flops:105.81, batch-reuse:1
@ 627 train 6.4147 , allloss: 12.6588, dt: 1282.14ms, fracRes: 0.4186, norm(attn): 0.0674, norm(output): 0.9781, norm(x): 0.9737, norm(y): 1.0164, norm:37.9881, tok/sec: 102228.78, flops:107.30, batch-reuse:1
@ 628 train 6.4714 , allloss: 12.7870, dt: 1294.85ms, fracRes: 0.4186, norm(attn): 0.0640, norm(output): 0.9780, norm(x): 0.9736, norm(y): 1.0162, norm:34.9065, tok/sec: 101225.62, flops:106.25, batch-reuse:1
@ 629 train 6.4903 , allloss: 12.8363, dt: 1289.58ms, fracRes: 0.4186, norm(attn): 0.0645, norm(output): 0.9780, norm(x): 0.9735, norm(y): 1.0162, norm:38.0744, tok/sec: 101639.27, flops:106.68, batch-reuse:1
@ 630 train 6.5588 , allloss: 12.7340, dt: 1308.48ms, fracRes: 0.4185, norm(attn): 0.0654, norm(output): 0.9780, norm(x): 0.9736, norm(y): 1.0161, norm:29.6045, tok/sec: 100171.41, flops:105.14, batch-reuse:1
@ 631 train 6.4823 , allloss: 12.7101, dt: 1317.56ms, fracRes: 0.4185, norm(attn): 0.0640, norm(output): 0.9779, norm(x): 0.9737, norm(y): 1.0162, norm:36.1590, tok/sec: 99480.75, flops:104.42, batch-reuse:1
@ 632 train 6.6231 , allloss: 12.8547, dt: 1327.60ms, fracRes: 0.4185, norm(attn): 0.0649, norm(output): 0.9779, norm(x): 0.9736, norm(y): 1.0162, norm:37.4547, tok/sec: 98728.53, flops:103.63, batch-reuse:1
@ 633 train 6.5334 , allloss: 12.6105, dt: 1317.08ms, fracRes: 0.4185, norm(attn): 0.0635, norm(output): 0.9779, norm(x): 0.9736, norm(y): 1.0160, norm:35.0436, tok/sec: 99516.95, flops:104.46, batch-reuse:1
@ 634 train 6.3747 , allloss: 12.5098, dt: 1300.21ms, fracRes: 0.4185, norm(attn): 0.0679, norm(output): 0.9779, norm(x): 0.9736, norm(y): 1.0160, norm:42.8014, tok/sec: 100808.52, flops:105.81, batch-reuse:1
@ 635 train 6.4824 , allloss: 12.4904, dt: 1309.38ms, fracRes: 0.4184, norm(attn): 0.0640, norm(output): 0.9778, norm(x): 0.9736, norm(y): 1.0159, norm:34.4412, tok/sec: 100102.66, flops:105.07, batch-reuse:1
@ 636 train 6.5175 , allloss: 12.6546, dt: 1332.26ms, fracRes: 0.4184, norm(attn): 0.0684, norm(output): 0.9778, norm(x): 0.9735, norm(y): 1.0160, norm:42.5888, tok/sec: 98382.84, flops:103.27, batch-reuse:1
@ 637 train 6.3635 , allloss: 12.3942, dt: 1319.98ms, fracRes: 0.4184, norm(attn): 0.0664, norm(output): 0.9777, norm(x): 0.9735, norm(y): 1.0163, norm:38.8691, tok/sec: 99298.61, flops:104.23, batch-reuse:1
@ 638 train 6.3513 , allloss: 12.3558, dt: 1317.47ms, fracRes: 0.4184, norm(attn): 0.0659, norm(output): 0.9777, norm(x): 0.9735, norm(y): 1.0160, norm:42.1975, tok/sec: 99487.85, flops:104.43, batch-reuse:1
@ 639 train 6.4390 , allloss: 12.4157, dt: 1290.17ms, fracRes: 0.4185, norm(attn): 0.0640, norm(output): 0.9776, norm(x): 0.9733, norm(y): 1.0161, norm:42.0904, tok/sec: 101593.08, flops:106.64, batch-reuse:1
@ 640 train 6.3726 , allloss: 12.4014, dt: 1293.64ms, fracRes: 0.4184, norm(attn): 0.0688, norm(output): 0.9776, norm(x): 0.9735, norm(y): 1.0158, norm:38.5413, tok/sec: 101320.13, flops:106.35, batch-reuse:1
@ 641 train 6.4427 , allloss: 12.4237, dt: 1294.63ms, fracRes: 0.4186, norm(attn): 0.0630, norm(output): 0.9775, norm(x): 0.9731, norm(y): 1.0159, norm:38.0764, tok/sec: 101243.05, flops:106.27, batch-reuse:1
@ 642 train 6.3478 , allloss: 12.3498, dt: 1308.89ms, fracRes: 0.4187, norm(attn): 0.0713, norm(output): 0.9776, norm(x): 0.9732, norm(y): 1.0161, norm:41.5164, tok/sec: 100139.77, flops:105.11, batch-reuse:1
@ 643 train 6.3557 , allloss: 12.1745, dt: 1290.29ms, fracRes: 0.4186, norm(attn): 0.0659, norm(output): 0.9775, norm(x): 0.9731, norm(y): 1.0161, norm:36.3413, tok/sec: 101583.62, flops:106.63, batch-reuse:1
@ 644 train 6.5322 , allloss: 12.4853, dt: 1300.65ms, fracRes: 0.4186, norm(attn): 0.0659, norm(output): 0.9774, norm(x): 0.9730, norm(y): 1.0159, norm:39.6382, tok/sec: 100774.53, flops:105.78, batch-reuse:1
@ 645 train 6.4787 , allloss: 12.2809, dt: 1301.80ms, fracRes: 0.4186, norm(attn): 0.0645, norm(output): 0.9774, norm(x): 0.9731, norm(y): 1.0158, norm:36.1243, tok/sec: 100685.06, flops:105.68, batch-reuse:1
@ 646 train 6.3676 , allloss: 12.1314, dt: 1292.57ms, fracRes: 0.4185, norm(attn): 0.0659, norm(output): 0.9774, norm(x): 0.9732, norm(y): 1.0160, norm:37.0338, tok/sec: 101404.13, flops:106.44, batch-reuse:1
@ 647 train 6.4128 , allloss: 12.1587, dt: 1290.24ms, fracRes: 0.4186, norm(attn): 0.0654, norm(output): 0.9774, norm(x): 0.9730, norm(y): 1.0161, norm:37.7158, tok/sec: 101587.26, flops:106.63, batch-reuse:1
@ 648 train 6.3220 , allloss: 12.0133, dt: 1313.11ms, fracRes: 0.4185, norm(attn): 0.0664, norm(output): 0.9773, norm(x): 0.9730, norm(y): 1.0160, norm:40.2555, tok/sec: 99818.14, flops:104.77, batch-reuse:1
@ 649 train 6.4178 , allloss: 12.1303, dt: 1331.29ms, fracRes: 0.4186, norm(attn): 0.0640, norm(output): 0.9773, norm(x): 0.9729, norm(y): 1.0159, norm:43.9741, tok/sec: 98455.06, flops:103.34, batch-reuse:1
@ 650 train 6.3052 , allloss: 11.9082, dt: 1337.23ms, fracRes: 0.4186, norm(attn): 0.0630, norm(output): 0.9772, norm(x): 0.9729, norm(y): 1.0158, norm:38.9206, tok/sec: 98017.88, flops:102.88, batch-reuse:1
@ 651 train 6.3943 , allloss: 12.0036, dt: 1332.53ms, fracRes: 0.4185, norm(attn): 0.0640, norm(output): 0.9772, norm(x): 0.9730, norm(y): 1.0160, norm:40.6664, tok/sec: 98363.39, flops:103.25, batch-reuse:1
@ 652 train 6.2709 , allloss: 11.8681, dt: 1313.16ms, fracRes: 0.4185, norm(attn): 0.0630, norm(output): 0.9772, norm(x): 0.9730, norm(y): 1.0158, norm:38.9842, tok/sec: 99813.90, flops:104.77, batch-reuse:1
@ 653 train 6.2824 , allloss: 11.7639, dt: 1297.80ms, fracRes: 0.4186, norm(attn): 0.0615, norm(output): 0.9772, norm(x): 0.9728, norm(y): 1.0158, norm:40.5457, tok/sec: 100995.49, flops:106.01, batch-reuse:1
@ 654 train 6.3388 , allloss: 11.8639, dt: 1301.88ms, fracRes: 0.4186, norm(attn): 0.0635, norm(output): 0.9771, norm(x): 0.9729, norm(y): 1.0157, norm:39.6560, tok/sec: 100679.30, flops:105.68, batch-reuse:1
@ 655 train 6.3494 , allloss: 11.8354, dt: 1306.57ms, fracRes: 0.4185, norm(attn): 0.0630, norm(output): 0.9771, norm(x): 0.9728, norm(y): 1.0157, norm:39.1536, tok/sec: 100318.01, flops:105.30, batch-reuse:1
@ 656 train 6.2680 , allloss: 11.6224, dt: 1300.17ms, fracRes: 0.4186, norm(attn): 0.0649, norm(output): 0.9770, norm(x): 0.9727, norm(y): 1.0160, norm:38.7249, tok/sec: 100811.60, flops:105.82, batch-reuse:1
@ 657 train 6.3001 , allloss: 11.7230, dt: 1323.55ms, fracRes: 0.4186, norm(attn): 0.0601, norm(output): 0.9769, norm(x): 0.9726, norm(y): 1.0161, norm:39.0010, tok/sec: 99030.35, flops:103.95, batch-reuse:1
@ 658 train 6.3943 , allloss: 11.7014, dt: 1332.00ms, fracRes: 0.4187, norm(attn): 0.0630, norm(output): 0.9769, norm(x): 0.9725, norm(y): 1.0160, norm:37.7049, tok/sec: 98402.47, flops:103.29, batch-reuse:1
@ 659 train 6.3684 , allloss: 11.6658, dt: 1334.09ms, fracRes: 0.4186, norm(attn): 0.0583, norm(output): 0.9769, norm(x): 0.9726, norm(y): 1.0157, norm:41.1345, tok/sec: 98248.53, flops:103.12, batch-reuse:1
@ 660 train 6.3798 , allloss: 11.5816, dt: 1306.37ms, fracRes: 0.4187, norm(attn): 0.0620, norm(output): 0.9768, norm(x): 0.9724, norm(y): 1.0158, norm:38.3158, tok/sec: 100332.74, flops:105.31, batch-reuse:1
@ 661 train 6.3310 , allloss: 11.5553, dt: 1294.05ms, fracRes: 0.4188, norm(attn): 0.0618, norm(output): 0.9768, norm(x): 0.9723, norm(y): 1.0157, norm:41.8991, tok/sec: 101287.94, flops:106.32, batch-reuse:1
@ 662 train 6.3833 , allloss: 11.4917, dt: 1287.52ms, fracRes: 0.4188, norm(attn): 0.0618, norm(output): 0.9768, norm(x): 0.9723, norm(y): 1.0157, norm:38.1311, tok/sec: 101802.09, flops:106.85, batch-reuse:1
@ 663 train 6.3518 , allloss: 11.4913, dt: 1317.41ms, fracRes: 0.4189, norm(attn): 0.0593, norm(output): 0.9768, norm(x): 0.9721, norm(y): 1.0158, norm:39.8013, tok/sec: 99492.44, flops:104.43, batch-reuse:1
@ 664 train 6.2856 , allloss: 11.2251, dt: 1314.00ms, fracRes: 0.4188, norm(attn): 0.0608, norm(output): 0.9767, norm(x): 0.9723, norm(y): 1.0159, norm:37.2903, tok/sec: 99750.52, flops:104.70, batch-reuse:1
@ 665 train 6.3347 , allloss: 11.3345, dt: 1338.21ms, fracRes: 0.4191, norm(attn): 0.0640, norm(output): 0.9766, norm(x): 0.9720, norm(y): 1.0161, norm:42.6412, tok/sec: 97945.65, flops:102.81, batch-reuse:1
@ 666 train 6.1716 , allloss: 10.9305, dt: 1322.55ms, fracRes: 0.4189, norm(attn): 0.0598, norm(output): 0.9767, norm(x): 0.9723, norm(y): 1.0154, norm:34.8159, tok/sec: 99105.62, flops:104.02, batch-reuse:1
@ 667 train 6.1315 , allloss: 11.0677, dt: 1311.19ms, fracRes: 0.4189, norm(attn): 0.0625, norm(output): 0.9766, norm(x): 0.9722, norm(y): 1.0157, norm:42.9758, tok/sec: 99963.78, flops:104.93, batch-reuse:1
@ 668 train 6.3653 , allloss: 11.1224, dt: 1312.03ms, fracRes: 0.4188, norm(attn): 0.0601, norm(output): 0.9766, norm(x): 0.9722, norm(y): 1.0156, norm:34.2222, tok/sec: 99900.26, flops:104.86, batch-reuse:1
@ 669 train 6.2877 , allloss: 11.0735, dt: 1296.18ms, fracRes: 0.4193, norm(attn): 0.0603, norm(output): 0.9765, norm(x): 0.9719, norm(y): 1.0158, norm:40.6078, tok/sec: 101121.57, flops:106.14, batch-reuse:1
@ 670 train 6.3939 , allloss: 11.0692, dt: 1295.74ms, fracRes: 0.4193, norm(attn): 0.0596, norm(output): 0.9765, norm(x): 0.9718, norm(y): 1.0157, norm:38.1042, tok/sec: 101156.35, flops:106.18, batch-reuse:1
@ 671 train 6.2716 , allloss: 10.8149, dt: 1313.56ms, fracRes: 0.4191, norm(attn): 0.0615, norm(output): 0.9764, norm(x): 0.9720, norm(y): 1.0157, norm:34.2564, tok/sec: 99783.59, flops:104.74, batch-reuse:1
@ 672 train 6.2929 , allloss: 10.8319, dt: 1289.81ms, fracRes: 0.4192, norm(attn): 0.0588, norm(output): 0.9764, norm(x): 0.9720, norm(y): 1.0155, norm:35.0824, tok/sec: 101621.06, flops:106.66, batch-reuse:1
@ 673 train 6.3254 , allloss: 10.7179, dt: 1311.40ms, fracRes: 0.4194, norm(attn): 0.0618, norm(output): 0.9764, norm(x): 0.9718, norm(y): 1.0156, norm:33.5157, tok/sec: 99948.44, flops:104.91, batch-reuse:1
@ 674 train 6.3132 , allloss: 10.7133, dt: 1303.68ms, fracRes: 0.4195, norm(attn): 0.0613, norm(output): 0.9763, norm(x): 0.9715, norm(y): 1.0159, norm:38.6656, tok/sec: 100539.76, flops:105.53, batch-reuse:1
@ 675 train 6.2032 , allloss: 10.4334, dt: 1301.77ms, fracRes: 0.4194, norm(attn): 0.0640, norm(output): 0.9763, norm(x): 0.9718, norm(y): 1.0156, norm:36.7730, tok/sec: 100687.58, flops:105.68, batch-reuse:1
@ 676 train 6.2627 , allloss: 10.5040, dt: 1313.44ms, fracRes: 0.4197, norm(attn): 0.0598, norm(output): 0.9762, norm(x): 0.9715, norm(y): 1.0157, norm:40.9990, tok/sec: 99792.89, flops:104.75, batch-reuse:1
@ 677 train 6.4102 , allloss: 10.5846, dt: 1303.37ms, fracRes: 0.4196, norm(attn): 0.0610, norm(output): 0.9762, norm(x): 0.9716, norm(y): 1.0154, norm:39.1002, tok/sec: 100564.27, flops:105.56, batch-reuse:1
@ 678 train 6.2352 , allloss: 10.2716, dt: 1308.79ms, fracRes: 0.4198, norm(attn): 0.0605, norm(output): 0.9761, norm(x): 0.9714, norm(y): 1.0158, norm:41.1595, tok/sec: 100147.16, flops:105.12, batch-reuse:1
@ 679 train 6.2880 , allloss: 10.3490, dt: 1315.35ms, fracRes: 0.4199, norm(attn): 0.0620, norm(output): 0.9761, norm(x): 0.9713, norm(y): 1.0157, norm:43.1477, tok/sec: 99648.29, flops:104.59, batch-reuse:1
@ 680 train 6.2765 , allloss: 10.1744, dt: 1307.35ms, fracRes: 0.4199, norm(attn): 0.0571, norm(output): 0.9760, norm(x): 0.9712, norm(y): 1.0159, norm:38.7044, tok/sec: 100257.94, flops:105.23, batch-reuse:1
@ 681 train 6.2885 , allloss: 10.2670, dt: 1293.69ms, fracRes: 0.4200, norm(attn): 0.0640, norm(output): 0.9760, norm(x): 0.9712, norm(y): 1.0158, norm:41.0382, tok/sec: 101316.30, flops:106.34, batch-reuse:1
@ 682 train 6.3019 , allloss: 10.1440, dt: 1330.86ms, fracRes: 0.4201, norm(attn): 0.0591, norm(output): 0.9760, norm(x): 0.9712, norm(y): 1.0158, norm:35.2667, tok/sec: 98486.77, flops:103.37, batch-reuse:1
@ 683 train 6.2556 , allloss: 10.1426, dt: 1336.36ms, fracRes: 0.4201, norm(attn): 0.0593, norm(output): 0.9759, norm(x): 0.9711, norm(y): 1.0159, norm:36.8164, tok/sec: 98081.37, flops:102.95, batch-reuse:1
@ 684 train 6.2191 , allloss: 10.0088, dt: 1337.28ms, fracRes: 0.4200, norm(attn): 0.0588, norm(output): 0.9758, norm(x): 0.9710, norm(y): 1.0160, norm:38.9405, tok/sec: 98013.56, flops:102.88, batch-reuse:1
@ 685 train 6.3086 , allloss: 9.9583, dt: 1282.87ms, fracRes: 0.4204, norm(attn): 0.0623, norm(output): 0.9758, norm(x): 0.9709, norm(y): 1.0159, norm:37.2967, tok/sec: 102171.31, flops:107.24, batch-reuse:1
@ 686 train 6.3766 , allloss: 10.2922, dt: 1318.40ms, fracRes: 0.4201, norm(attn): 0.0552, norm(output): 0.9758, norm(x): 0.9709, norm(y): 1.0156, norm:42.0616, tok/sec: 99417.45, flops:104.35, batch-reuse:1
@ 687 train 6.3009 , allloss: 9.8335, dt: 1327.76ms, fracRes: 0.4201, norm(attn): 0.0591, norm(output): 0.9758, norm(x): 0.9710, norm(y): 1.0158, norm:36.9276, tok/sec: 98716.50, flops:103.62, batch-reuse:1
@ 688 train 6.3035 , allloss: 10.0303, dt: 1306.04ms, fracRes: 0.4198, norm(attn): 0.0574, norm(output): 0.9757, norm(x): 0.9710, norm(y): 1.0158, norm:41.4011, tok/sec: 100358.17, flops:105.34, batch-reuse:1
@ 689 train 6.2891 , allloss: 9.7815, dt: 1293.58ms, fracRes: 0.4200, norm(attn): 0.0596, norm(output): 0.9756, norm(x): 0.9708, norm(y): 1.0159, norm:35.3887, tok/sec: 101325.24, flops:106.35, batch-reuse:1
@ 690 train 6.2536 , allloss: 9.9638, dt: 1306.81ms, fracRes: 0.4201, norm(attn): 0.0608, norm(output): 0.9757, norm(x): 0.9708, norm(y): 1.0158, norm:43.3091, tok/sec: 100299.28, flops:105.28, batch-reuse:1
@ 691 train 6.2667 , allloss: 9.6913, dt: 1297.52ms, fracRes: 0.4202, norm(attn): 0.0583, norm(output): 0.9756, norm(x): 0.9708, norm(y): 1.0155, norm:31.4617, tok/sec: 101017.18, flops:106.03, batch-reuse:1
@ 692 train 6.2260 , allloss: 9.8839, dt: 1325.80ms, fracRes: 0.4198, norm(attn): 0.0620, norm(output): 0.9756, norm(x): 0.9709, norm(y): 1.0158, norm:40.9098, tok/sec: 98862.40, flops:103.77, batch-reuse:1
@ 693 train 6.2715 , allloss: 9.6154, dt: 1308.26ms, fracRes: 0.4196, norm(attn): 0.0601, norm(output): 0.9755, norm(x): 0.9709, norm(y): 1.0158, norm:31.5096, tok/sec: 100188.17, flops:105.16, batch-reuse:1
@ 694 train 6.1791 , allloss: 9.8125, dt: 1317.85ms, fracRes: 0.4201, norm(attn): 0.0588, norm(output): 0.9755, norm(x): 0.9708, norm(y): 1.0154, norm:41.2050, tok/sec: 99459.26, flops:104.40, batch-reuse:1
@ 695 train 6.2666 , allloss: 9.6636, dt: 1324.80ms, fracRes: 0.4198, norm(attn): 0.0645, norm(output): 0.9755, norm(x): 0.9708, norm(y): 1.0156, norm:33.9224, tok/sec: 98937.48, flops:103.85, batch-reuse:1
@ 696 train 6.1454 , allloss: 9.6875, dt: 1306.78ms, fracRes: 0.4196, norm(attn): 0.0576, norm(output): 0.9755, norm(x): 0.9709, norm(y): 1.0154, norm:34.7100, tok/sec: 100301.61, flops:105.28, batch-reuse:1
@ 697 train 6.1868 , allloss: 9.6053, dt: 1320.96ms, fracRes: 0.4197, norm(attn): 0.0674, norm(output): 0.9754, norm(x): 0.9708, norm(y): 1.0157, norm:36.0345, tok/sec: 99224.86, flops:104.15, batch-reuse:1
@ 698 train 6.2623 , allloss: 9.4998, dt: 1341.29ms, fracRes: 0.4199, norm(attn): 0.0596, norm(output): 0.9754, norm(x): 0.9707, norm(y): 1.0154, norm:33.0725, tok/sec: 97721.13, flops:102.57, batch-reuse:1
@ 699 train 6.2467 , allloss: 9.6980, dt: 1318.85ms, fracRes: 0.4204, norm(attn): 0.0601, norm(output): 0.9753, norm(x): 0.9704, norm(y): 1.0156, norm:38.6145, tok/sec: 99383.84, flops:104.32, batch-reuse:1
@ 700 train 6.2205 , allloss: 9.5264, dt: 1307.38ms, fracRes: 0.4200, norm(attn): 0.0608, norm(output): 0.9753, norm(x): 0.9707, norm(y): 1.0155, norm:32.8705, tok/sec: 100255.66, flops:105.23, batch-reuse:1
@ 701 train 6.2929 , allloss: 9.5757, dt: 1310.95ms, fracRes: 0.4198, norm(attn): 0.0635, norm(output): 0.9753, norm(x): 0.9707, norm(y): 1.0153, norm:35.5930, tok/sec: 99982.53, flops:104.94, batch-reuse:1
@ 702 train 6.2839 , allloss: 9.5993, dt: 1315.87ms, fracRes: 0.4196, norm(attn): 0.0623, norm(output): 0.9752, norm(x): 0.9706, norm(y): 1.0154, norm:37.2870, tok/sec: 99608.42, flops:104.55, batch-reuse:1
@ 703 train 6.2336 , allloss: 9.3717, dt: 1283.05ms, fracRes: 0.4198, norm(attn): 0.0601, norm(output): 0.9752, norm(x): 0.9706, norm(y): 1.0154, norm:34.9496, tok/sec: 102156.61, flops:107.23, batch-reuse:1
@ 704 train 6.1657 , allloss: 9.4148, dt: 1290.08ms, fracRes: 0.4200, norm(attn): 0.0603, norm(output): 0.9751, norm(x): 0.9704, norm(y): 1.0156, norm:39.8521, tok/sec: 101599.84, flops:106.64, batch-reuse:1
@ 705 train 6.2246 , allloss: 9.4037, dt: 1308.37ms, fracRes: 0.4199, norm(attn): 0.0603, norm(output): 0.9751, norm(x): 0.9706, norm(y): 1.0153, norm:36.4782, tok/sec: 100179.88, flops:105.15, batch-reuse:1
@ 706 train 6.2052 , allloss: 9.2659, dt: 1293.58ms, fracRes: 0.4199, norm(attn): 0.0635, norm(output): 0.9750, norm(x): 0.9704, norm(y): 1.0156, norm:34.2130, tok/sec: 101325.21, flops:106.35, batch-reuse:1
@ 707 train 6.2197 , allloss: 9.4786, dt: 1311.59ms, fracRes: 0.4201, norm(attn): 0.0613, norm(output): 0.9750, norm(x): 0.9704, norm(y): 1.0153, norm:39.9701, tok/sec: 99933.74, flops:104.89, batch-reuse:1
@ 708 train 6.2193 , allloss: 9.3023, dt: 1322.57ms, fracRes: 0.4206, norm(attn): 0.0608, norm(output): 0.9750, norm(x): 0.9701, norm(y): 1.0155, norm:36.0767, tok/sec: 99103.92, flops:104.02, batch-reuse:1
@ 709 train 6.2192 , allloss: 9.3340, dt: 1299.25ms, fracRes: 0.4197, norm(attn): 0.0615, norm(output): 0.9750, norm(x): 0.9702, norm(y): 1.0154, norm:35.4499, tok/sec: 100883.10, flops:105.89, batch-reuse:1
@ 710 train 6.3425 , allloss: 9.4593, dt: 1303.40ms, fracRes: 0.4208, norm(attn): 0.0593, norm(output): 0.9749, norm(x): 0.9697, norm(y): 1.0159, norm:35.8471, tok/sec: 100561.33, flops:105.55, batch-reuse:1
@ 711 train 6.3244 , allloss: 9.3929, dt: 1293.98ms, fracRes: 0.4202, norm(attn): 0.0574, norm(output): 0.9749, norm(x): 0.9701, norm(y): 1.0154, norm:35.3326, tok/sec: 101293.82, flops:106.32, batch-reuse:1
@ 712 train 6.2034 , allloss: 9.2865, dt: 1319.93ms, fracRes: 0.4214, norm(attn): 0.0684, norm(output): 0.9748, norm(x): 0.9695, norm(y): 1.0159, norm:40.4756, tok/sec: 99302.18, flops:104.23, batch-reuse:1
@ 713 train 6.2513 , allloss: 9.3217, dt: 1341.67ms, fracRes: 0.4205, norm(attn): 0.0664, norm(output): 0.9748, norm(x): 0.9700, norm(y): 1.0155, norm:36.7029, tok/sec: 97693.05, flops:102.54, batch-reuse:1
@ 714 train 6.1264 , allloss: 9.1285, dt: 1317.20ms, fracRes: 0.4215, norm(attn): 0.0605, norm(output): 0.9748, norm(x): 0.9696, norm(y): 1.0156, norm:35.8669, tok/sec: 99508.05, flops:104.45, batch-reuse:1
@ 715 train 6.1737 , allloss: 9.1230, dt: 1319.93ms, fracRes: 0.4208, norm(attn): 0.0576, norm(output): 0.9748, norm(x): 0.9700, norm(y): 1.0155, norm:35.6788, tok/sec: 99302.45, flops:104.23, batch-reuse:1
@ 716 train 6.2122 , allloss: 9.2623, dt: 1303.55ms, fracRes: 0.4207, norm(attn): 0.0596, norm(output): 0.9748, norm(x): 0.9699, norm(y): 1.0155, norm:37.8260, tok/sec: 100549.93, flops:105.54, batch-reuse:1
@ 717 train 6.0542 , allloss: 8.9128, dt: 1314.69ms, fracRes: 0.4212, norm(attn): 0.0645, norm(output): 0.9748, norm(x): 0.9697, norm(y): 1.0154, norm:32.7306, tok/sec: 99698.25, flops:104.65, batch-reuse:1
@ 718 train 6.2453 , allloss: 9.3051, dt: 1343.15ms, fracRes: 0.4212, norm(attn): 0.0610, norm(output): 0.9746, norm(x): 0.9694, norm(y): 1.0159, norm:41.5948, tok/sec: 97585.66, flops:102.43, batch-reuse:1
@ 719 train 6.1781 , allloss: 8.9770, dt: 1339.22ms, fracRes: 0.4213, norm(attn): 0.0608, norm(output): 0.9747, norm(x): 0.9696, norm(y): 1.0154, norm:34.7311, tok/sec: 97872.07, flops:102.73, batch-reuse:1
@ 720 train 6.1402 , allloss: 9.2421, dt: 1308.58ms, fracRes: 0.4212, norm(attn): 0.0623, norm(output): 0.9746, norm(x): 0.9696, norm(y): 1.0156, norm:42.0618, tok/sec: 100163.82, flops:105.14, batch-reuse:1
@ 721 train 6.0951 , allloss: 8.8423, dt: 1291.37ms, fracRes: 0.4219, norm(attn): 0.0640, norm(output): 0.9746, norm(x): 0.9693, norm(y): 1.0156, norm:31.4985, tok/sec: 101498.43, flops:106.54, batch-reuse:1
@ 722 train 6.1615 , allloss: 9.4304, dt: 1337.04ms, fracRes: 0.4221, norm(attn): 0.0645, norm(output): 0.9745, norm(x): 0.9690, norm(y): 1.0159, norm:41.1583, tok/sec: 98031.11, flops:102.90, batch-reuse:1
@ 723 train 6.2312 , allloss: 9.0887, dt: 1279.87ms, fracRes: 0.4214, norm(attn): 0.0645, norm(output): 0.9745, norm(x): 0.9692, norm(y): 1.0159, norm:32.8336, tok/sec: 102410.49, flops:107.49, batch-reuse:1
@ 724 train 6.1970 , allloss: 9.1982, dt: 1306.28ms, fracRes: 0.4213, norm(attn): 0.0645, norm(output): 0.9745, norm(x): 0.9693, norm(y): 1.0157, norm:35.9457, tok/sec: 100339.63, flops:105.32, batch-reuse:1
@ 725 train 6.1689 , allloss: 9.1141, dt: 1322.53ms, fracRes: 0.4219, norm(attn): 0.0635, norm(output): 0.9745, norm(x): 0.9690, norm(y): 1.0157, norm:30.7131, tok/sec: 99106.85, flops:104.03, batch-reuse:1
@ 726 train 6.1721 , allloss: 9.0266, dt: 1301.08ms, fracRes: 0.4226, norm(attn): 0.0615, norm(output): 0.9744, norm(x): 0.9687, norm(y): 1.0157, norm:26.2475, tok/sec: 100741.07, flops:105.74, batch-reuse:1
@ 727 train 6.1842 , allloss: 9.1360, dt: 1320.92ms, fracRes: 0.4217, norm(attn): 0.0605, norm(output): 0.9744, norm(x): 0.9690, norm(y): 1.0158, norm:32.6467, tok/sec: 99227.88, flops:104.15, batch-reuse:1
@ 728 train 6.2047 , allloss: 9.0458, dt: 1297.27ms, fracRes: 0.4217, norm(attn): 0.0645, norm(output): 0.9744, norm(x): 0.9690, norm(y): 1.0157, norm:34.3104, tok/sec: 101036.44, flops:106.05, batch-reuse:1
@ 729 train 6.1438 , allloss: 9.0081, dt: 1300.72ms, fracRes: 0.4228, norm(attn): 0.0654, norm(output): 0.9744, norm(x): 0.9685, norm(y): 1.0158, norm:38.3718, tok/sec: 100769.14, flops:105.77, batch-reuse:1
@ 730 train 6.1578 , allloss: 9.1218, dt: 1301.75ms, fracRes: 0.4228, norm(attn): 0.0603, norm(output): 0.9743, norm(x): 0.9684, norm(y): 1.0158, norm:40.6665, tok/sec: 100689.10, flops:105.69, batch-reuse:1
@ 731 train 6.1856 , allloss: 8.9196, dt: 1311.44ms, fracRes: 0.4228, norm(attn): 0.0593, norm(output): 0.9743, norm(x): 0.9682, norm(y): 1.0158, norm:34.9773, tok/sec: 99944.72, flops:104.91, batch-reuse:1
@ 732 train 6.1309 , allloss: 9.1178, dt: 1303.20ms, fracRes: 0.4229, norm(attn): 0.0645, norm(output): 0.9743, norm(x): 0.9677, norm(y): 1.0158, norm:40.8860, tok/sec: 100576.67, flops:105.57, batch-reuse:1
@ 733 train 6.1690 , allloss: 9.0014, dt: 1325.12ms, fracRes: 0.4234, norm(attn): 0.0645, norm(output): 0.9743, norm(x): 0.9675, norm(y): 1.0156, norm:36.4900, tok/sec: 98913.15, flops:103.82, batch-reuse:1
@ 734 train 6.1757 , allloss: 8.9756, dt: 1341.05ms, fracRes: 0.4236, norm(attn): 0.0593, norm(output): 0.9742, norm(x): 0.9678, norm(y): 1.0157, norm:35.2172, tok/sec: 97738.57, flops:102.59, batch-reuse:1
@ 735 train 6.1797 , allloss: 9.0618, dt: 1310.75ms, fracRes: 0.4243, norm(attn): 0.0610, norm(output): 0.9742, norm(x): 0.9674, norm(y): 1.0158, norm:34.5586, tok/sec: 99997.82, flops:104.96, batch-reuse:1
@ 736 train 6.2314 , allloss: 9.0668, dt: 1309.10ms, fracRes: 0.4236, norm(attn): 0.0586, norm(output): 0.9742, norm(x): 0.9677, norm(y): 1.0157, norm:33.8400, tok/sec: 100123.52, flops:105.09, batch-reuse:1
@ 737 train 6.1693 , allloss: 8.9410, dt: 1313.18ms, fracRes: 0.4236, norm(attn): 0.0625, norm(output): 0.9742, norm(x): 0.9678, norm(y): 1.0156, norm:32.0136, tok/sec: 99812.58, flops:104.77, batch-reuse:1
@ 738 train 6.2131 , allloss: 9.2117, dt: 1318.44ms, fracRes: 0.4235, norm(attn): 0.0559, norm(output): 0.9741, norm(x): 0.9678, norm(y): 1.0157, norm:38.0694, tok/sec: 99414.26, flops:104.35, batch-reuse:1
@ 739 train 6.1927 , allloss: 8.9663, dt: 1342.81ms, fracRes: 0.4247, norm(attn): 0.0605, norm(output): 0.9741, norm(x): 0.9672, norm(y): 1.0158, norm:33.8705, tok/sec: 97610.47, flops:102.46, batch-reuse:1
@ 740 train 6.1411 , allloss: 9.1202, dt: 1297.05ms, fracRes: 0.4249, norm(attn): 0.0603, norm(output): 0.9741, norm(x): 0.9673, norm(y): 1.0157, norm:40.1013, tok/sec: 101053.71, flops:106.07, batch-reuse:1
@ 741 train 6.2641 , allloss: 9.0801, dt: 1301.55ms, fracRes: 0.4244, norm(attn): 0.0591, norm(output): 0.9741, norm(x): 0.9672, norm(y): 1.0155, norm:31.2536, tok/sec: 100704.68, flops:105.70, batch-reuse:1
@ 742 train 6.3153 , allloss: 9.3471, dt: 1318.26ms, fracRes: 0.4252, norm(attn): 0.0583, norm(output): 0.9740, norm(x): 0.9668, norm(y): 1.0158, norm:36.1383, tok/sec: 99427.91, flops:104.36, batch-reuse:1
@ 743 train 6.2757 , allloss: 9.0258, dt: 1293.23ms, fracRes: 0.4253, norm(attn): 0.0615, norm(output): 0.9740, norm(x): 0.9667, norm(y): 1.0159, norm:28.0355, tok/sec: 101352.16, flops:106.38, batch-reuse:1
@ 744 train 6.2695 , allloss: 9.2445, dt: 1315.42ms, fracRes: 0.4258, norm(attn): 0.0618, norm(output): 0.9740, norm(x): 0.9665, norm(y): 1.0155, norm:36.9478, tok/sec: 99642.51, flops:104.59, batch-reuse:1
@ 745 train 6.2568 , allloss: 9.0530, dt: 1281.74ms, fracRes: 0.4274, norm(attn): 0.0625, norm(output): 0.9740, norm(x): 0.9661, norm(y): 1.0155, norm:33.1823, tok/sec: 102260.84, flops:107.34, batch-reuse:1
@ 746 train 6.2936 , allloss: 9.1589, dt: 1304.26ms, fracRes: 0.4286, norm(attn): 0.0593, norm(output): 0.9739, norm(x): 0.9652, norm(y): 1.0155, norm:33.0735, tok/sec: 100495.37, flops:105.48, batch-reuse:1
@ 747 train 6.2954 , allloss: 9.0885, dt: 1308.82ms, fracRes: 0.4309, norm(attn): 0.0613, norm(output): 0.9739, norm(x): 0.9640, norm(y): 1.0159, norm:33.1920, tok/sec: 100145.33, flops:105.12, batch-reuse:1
@ 748 train 6.3304 , allloss: 9.2162, dt: 1288.48ms, fracRes: 0.4345, norm(attn): 0.0571, norm(output): 0.9739, norm(x): 0.9639, norm(y): 1.0155, norm:36.8825, tok/sec: 101726.16, flops:106.78, batch-reuse:1
@ 749 train 6.3999 , allloss: 9.2244, dt: 1298.98ms, fracRes: 0.4454, norm(attn): 0.0630, norm(output): 0.9739, norm(x): 0.9619, norm(y): 1.0157, norm:32.1897, tok/sec: 100903.47, flops:105.91, batch-reuse:1
@ 750 train 6.3724 , allloss: 9.3109, dt: 1310.58ms, fracRes: 0.4473, norm(attn): 0.0596, norm(output): 0.9738, norm(x): 0.9613, norm(y): 1.0155, norm:38.2751, tok/sec: 100010.84, flops:104.97, batch-reuse:1
@ 751 train 6.2561 , allloss: 8.9586, dt: 1280.79ms, fracRes: 0.4328, norm(attn): 0.0618, norm(output): 0.9738, norm(x): 0.9631, norm(y): 1.0155, norm:33.6931, tok/sec: 102336.64, flops:107.42, batch-reuse:1
@ 752 train 6.2572 , allloss: 9.2079, dt: 1319.21ms, fracRes: 0.4296, norm(attn): 0.0591, norm(output): 0.9738, norm(x): 0.9643, norm(y): 1.0155, norm:36.2947, tok/sec: 99356.46, flops:104.29, batch-reuse:1
@ 753 train 6.2664 , allloss: 8.9923, dt: 1334.95ms, fracRes: 0.4281, norm(attn): 0.0581, norm(output): 0.9738, norm(x): 0.9646, norm(y): 1.0151, norm:28.7709, tok/sec: 98185.15, flops:103.06, batch-reuse:1
@ 754 train 6.2457 , allloss: 9.1828, dt: 1338.22ms, fracRes: 0.4275, norm(attn): 0.0620, norm(output): 0.9738, norm(x): 0.9649, norm(y): 1.0155, norm:35.1857, tok/sec: 97944.92, flops:102.81, batch-reuse:1
@ 755 train 6.3639 , allloss: 9.1700, dt: 1340.87ms, fracRes: 0.4285, norm(attn): 0.0654, norm(output): 0.9737, norm(x): 0.9633, norm(y): 1.0155, norm:31.3032, tok/sec: 97751.55, flops:102.60, batch-reuse:1
@ 756 train 6.2344 , allloss: 9.0369, dt: 1333.15ms, fracRes: 0.4279, norm(attn): 0.0608, norm(output): 0.9737, norm(x): 0.9642, norm(y): 1.0156, norm:31.4598, tok/sec: 98317.16, flops:103.20, batch-reuse:1
@ 757 train 6.2736 , allloss: 9.1437, dt: 1339.22ms, fracRes: 0.4300, norm(attn): 0.0588, norm(output): 0.9737, norm(x): 0.9628, norm(y): 1.0153, norm:33.1024, tok/sec: 97872.22, flops:102.73, batch-reuse:1
@ 758 train 6.2105 , allloss: 8.9832, dt: 1330.06ms, fracRes: 0.4315, norm(attn): 0.0598, norm(output): 0.9737, norm(x): 0.9620, norm(y): 1.0152, norm:28.9416, tok/sec: 98546.00, flops:103.44, batch-reuse:1
@ 759 train 6.2780 , allloss: 9.1376, dt: 1300.66ms, fracRes: 0.4379, norm(attn): 0.0645, norm(output): 0.9736, norm(x): 0.9580, norm(y): 1.0155, norm:35.3726, tok/sec: 100773.26, flops:105.77, batch-reuse:1
@ 760 train 6.2873 , allloss: 9.1161, dt: 1327.96ms, fracRes: 0.4418, norm(attn): 0.0654, norm(output): 0.9736, norm(x): 0.9544, norm(y): 1.0156, norm:35.1037, tok/sec: 98701.96, flops:103.60, batch-reuse:1
@ 761 train 6.2811 , allloss: 9.1200, dt: 1285.39ms, fracRes: 0.4445, norm(attn): 0.0645, norm(output): 0.9736, norm(x): 0.9524, norm(y): 1.0156, norm:35.3760, tok/sec: 101970.28, flops:107.03, batch-reuse:1
@ 762 train 6.2644 , allloss: 9.1125, dt: 1353.12ms, fracRes: 0.4463, norm(attn): 0.0630, norm(output): 0.9736, norm(x): 0.9548, norm(y): 1.0155, norm:31.6963, tok/sec: 96866.41, flops:101.67, batch-reuse:1
@ 763 train 6.2952 , allloss: 9.1130, dt: 1330.13ms, fracRes: 0.4485, norm(attn): 0.0649, norm(output): 0.9736, norm(x): 0.9567, norm(y): 1.0153, norm:31.5858, tok/sec: 98541.05, flops:103.43, batch-reuse:1
@ 764 train 6.2682 , allloss: 9.0303, dt: 1290.97ms, fracRes: 0.4589, norm(attn): 0.0679, norm(output): 0.9735, norm(x): 0.9515, norm(y): 1.0156, norm:32.0068, tok/sec: 101529.94, flops:106.57, batch-reuse:1
@ 765 train 6.2573 , allloss: 9.0014, dt: 1299.29ms, fracRes: 0.4594, norm(attn): 0.0635, norm(output): 0.9734, norm(x): 0.9428, norm(y): 1.0155, norm:33.4286, tok/sec: 100879.48, flops:105.89, batch-reuse:1
@ 766 train 6.1782 , allloss: 8.9520, dt: 1323.31ms, fracRes: 0.4508, norm(attn): 0.0635, norm(output): 0.9734, norm(x): 0.9431, norm(y): 1.0157, norm:34.7492, tok/sec: 99048.96, flops:103.96, batch-reuse:1
@ 767 train 6.2903 , allloss: 9.0234, dt: 1339.86ms, fracRes: 0.4401, norm(attn): 0.0659, norm(output): 0.9735, norm(x): 0.9520, norm(y): 1.0153, norm:34.1665, tok/sec: 97825.20, flops:102.68, batch-reuse:1
@ 768 train 6.3658 , allloss: 9.1466, dt: 1345.44ms, fracRes: 0.4339, norm(attn): 0.0640, norm(output): 0.9734, norm(x): 0.9595, norm(y): 1.0155, norm:36.6777, tok/sec: 97419.40, flops:102.25, batch-reuse:1
@ 769 train 6.2325 , allloss: 9.0858, dt: 1342.60ms, fracRes: 0.4318, norm(attn): 0.0693, norm(output): 0.9734, norm(x): 0.9626, norm(y): 1.0155, norm:35.9276, tok/sec: 97625.51, flops:102.47, batch-reuse:1
@ 770 train 6.2013 , allloss: 9.3990, dt: 1343.09ms, fracRes: 0.4268, norm(attn): 0.0718, norm(output): 0.9733, norm(x): 0.9638, norm(y): 1.0158, norm:32.9330, tok/sec: 97590.18, flops:102.43, batch-reuse:1
@ 771 train 6.1871 , allloss: 8.9632, dt: 1297.16ms, fracRes: 0.4417, norm(attn): 0.0645, norm(output): 0.9733, norm(x): 0.9505, norm(y): 1.0154, norm:37.8165, tok/sec: 101045.07, flops:106.06, batch-reuse:1
@ 772 train 6.2436 , allloss: 8.8867, dt: 1313.25ms, fracRes: 0.4542, norm(attn): 0.0664, norm(output): 0.9733, norm(x): 0.9377, norm(y): 1.0155, norm:33.9289, tok/sec: 99807.33, flops:104.76, batch-reuse:1
@ 773 train 6.3152 , allloss: 9.1922, dt: 1316.42ms, fracRes: 0.4610, norm(attn): 0.0708, norm(output): 0.9733, norm(x): 0.9337, norm(y): 1.0151, norm:39.5062, tok/sec: 99567.09, flops:104.51, batch-reuse:1
@ 774 train 6.1805 , allloss: 8.8406, dt: 1308.18ms, fracRes: 0.4644, norm(attn): 0.0708, norm(output): 0.9732, norm(x): 0.9337, norm(y): 1.0154, norm:31.9018, tok/sec: 100194.37, flops:105.17, batch-reuse:1
@ 775 train 6.3033 , allloss: 9.1820, dt: 1301.55ms, fracRes: 0.4612, norm(attn): 0.0703, norm(output): 0.9731, norm(x): 0.9374, norm(y): 1.0157, norm:37.2725, tok/sec: 100704.33, flops:105.70, batch-reuse:1
@ 776 train 6.1205 , allloss: 8.7138, dt: 1314.35ms, fracRes: 0.4645, norm(attn): 0.0664, norm(output): 0.9731, norm(x): 0.9396, norm(y): 1.0154, norm:30.6326, tok/sec: 99724.01, flops:104.67, batch-reuse:1
@ 777 train 6.1922 , allloss: 9.1109, dt: 1320.76ms, fracRes: 0.4787, norm(attn): 0.0654, norm(output): 0.9731, norm(x): 0.9394, norm(y): 1.0155, norm:39.5568, tok/sec: 99239.49, flops:104.16, batch-reuse:1
@ 778 train 6.2037 , allloss: 8.8210, dt: 1290.15ms, fracRes: 0.4956, norm(attn): 0.0615, norm(output): 0.9730, norm(x): 0.9426, norm(y): 1.0157, norm:28.9314, tok/sec: 101594.36, flops:106.64, batch-reuse:1
@ 779 train 6.2414 , allloss: 9.1669, dt: 1308.82ms, fracRes: 0.4726, norm(attn): 0.0679, norm(output): 0.9730, norm(x): 0.9431, norm(y): 1.0157, norm:37.6300, tok/sec: 100144.82, flops:105.12, batch-reuse:1
@ 780 train 6.2234 , allloss: 8.8761, dt: 1308.28ms, fracRes: 0.4639, norm(attn): 0.0723, norm(output): 0.9729, norm(x): 0.9472, norm(y): 1.0162, norm:32.2864, tok/sec: 100186.34, flops:105.16, batch-reuse:1
@ 781 train 6.1949 , allloss: 8.9953, dt: 1298.00ms, fracRes: 0.4613, norm(attn): 0.0684, norm(output): 0.9730, norm(x): 0.9506, norm(y): 1.0158, norm:36.1633, tok/sec: 100979.70, flops:105.99, batch-reuse:1
@ 782 train 6.1897 , allloss: 8.9862, dt: 1307.81ms, fracRes: 0.4584, norm(attn): 0.0693, norm(output): 0.9730, norm(x): 0.9514, norm(y): 1.0158, norm:35.5024, tok/sec: 100222.54, flops:105.20, batch-reuse:1
@ 783 train 6.1789 , allloss: 8.8239, dt: 1311.62ms, fracRes: 0.4658, norm(attn): 0.0698, norm(output): 0.9730, norm(x): 0.9512, norm(y): 1.0153, norm:27.4903, tok/sec: 99931.42, flops:104.89, batch-reuse:1
@ 784 train 6.2188 , allloss: 9.1691, dt: 1313.44ms, fracRes: 0.4975, norm(attn): 0.0728, norm(output): 0.9729, norm(x): 0.9518, norm(y): 1.0161, norm:34.8410, tok/sec: 99793.08, flops:104.75, batch-reuse:1
@ 785 train 6.2032 , allloss: 8.9765, dt: 1303.30ms, fracRes: 0.4770, norm(attn): 0.0693, norm(output): 0.9728, norm(x): 0.9496, norm(y): 1.0160, norm:30.6461, tok/sec: 100569.46, flops:105.56, batch-reuse:1
@ 786 train 6.1571 , allloss: 8.9630, dt: 1323.01ms, fracRes: 0.4397, norm(attn): 0.0728, norm(output): 0.9729, norm(x): 0.9511, norm(y): 1.0159, norm:31.7410, tok/sec: 99071.02, flops:103.99, batch-reuse:1
@ 787 train 6.1954 , allloss: 9.0944, dt: 1293.89ms, fracRes: 0.4324, norm(attn): 0.0723, norm(output): 0.9728, norm(x): 0.9553, norm(y): 1.0159, norm:31.0267, tok/sec: 101301.01, flops:106.33, batch-reuse:1
@ 788 train 6.2513 , allloss: 9.2944, dt: 1301.02ms, fracRes: 0.4294, norm(attn): 0.0703, norm(output): 0.9729, norm(x): 0.9572, norm(y): 1.0156, norm:27.9680, tok/sec: 100745.58, flops:105.75, batch-reuse:1
@ 789 train 6.1708 , allloss: 9.1866, dt: 1297.87ms, fracRes: 0.4302, norm(attn): 0.0757, norm(output): 0.9728, norm(x): 0.9562, norm(y): 1.0160, norm:30.8821, tok/sec: 100990.28, flops:106.00, batch-reuse:1
@ 790 train 6.1652 , allloss: 9.1469, dt: 1305.34ms, fracRes: 0.4300, norm(attn): 0.0708, norm(output): 0.9727, norm(x): 0.9561, norm(y): 1.0158, norm:31.5329, tok/sec: 100412.30, flops:105.40, batch-reuse:1
@ 791 train 6.2777 , allloss: 9.2941, dt: 1297.52ms, fracRes: 0.4313, norm(attn): 0.0688, norm(output): 0.9727, norm(x): 0.9551, norm(y): 1.0159, norm:32.0732, tok/sec: 101017.57, flops:106.03, batch-reuse:1
@ 792 train 6.2282 , allloss: 9.3873, dt: 1280.39ms, fracRes: 0.4328, norm(attn): 0.0708, norm(output): 0.9727, norm(x): 0.9543, norm(y): 1.0157, norm:35.1082, tok/sec: 102368.58, flops:107.45, batch-reuse:1
@ 793 train 6.2218 , allloss: 9.3091, dt: 1301.89ms, fracRes: 0.4342, norm(attn): 0.0693, norm(output): 0.9727, norm(x): 0.9531, norm(y): 1.0157, norm:33.1010, tok/sec: 100677.87, flops:105.67, batch-reuse:1
@ 794 train 6.2633 , allloss: 9.2420, dt: 1328.12ms, fracRes: 0.4365, norm(attn): 0.0713, norm(output): 0.9726, norm(x): 0.9515, norm(y): 1.0157, norm:31.6042, tok/sec: 98690.20, flops:103.59, batch-reuse:1
@ 795 train 6.1382 , allloss: 8.9584, dt: 1299.21ms, fracRes: 0.4378, norm(attn): 0.0713, norm(output): 0.9726, norm(x): 0.9512, norm(y): 1.0157, norm:31.6183, tok/sec: 100885.77, flops:105.89, batch-reuse:1
@ 796 train 6.0701 , allloss: 8.7345, dt: 1314.05ms, fracRes: 0.4413, norm(attn): 0.0737, norm(output): 0.9726, norm(x): 0.9493, norm(y): 1.0156, norm:27.7481, tok/sec: 99746.23, flops:104.70, batch-reuse:1
@ 797 train 6.2020 , allloss: 9.1301, dt: 1298.32ms, fracRes: 0.4520, norm(attn): 0.0669, norm(output): 0.9725, norm(x): 0.9439, norm(y): 1.0155, norm:35.1636, tok/sec: 100955.00, flops:105.97, batch-reuse:1
@ 798 train 6.2012 , allloss: 8.9265, dt: 1302.39ms, fracRes: 0.4576, norm(attn): 0.0649, norm(output): 0.9725, norm(x): 0.9394, norm(y): 1.0153, norm:27.4685, tok/sec: 100639.92, flops:105.63, batch-reuse:1
@ 799 train 6.2112 , allloss: 9.5149, dt: 1285.79ms, fracRes: 0.4430, norm(attn): 0.0698, norm(output): 0.9725, norm(x): 0.9487, norm(y): 1.0153, norm:38.2731, tok/sec: 101938.98, flops:107.00, batch-reuse:1
@ 800 train 6.1403 , allloss: 9.2084, dt: 1320.80ms, fracRes: 0.4396, norm(attn): 0.0742, norm(output): 0.9724, norm(x): 0.9511, norm(y): 1.0155, norm:29.3428, tok/sec: 99236.82, flops:104.16, batch-reuse:1
@ 801 train 6.1616 , allloss: 9.5674, dt: 1325.56ms, fracRes: 0.4389, norm(attn): 0.0747, norm(output): 0.9724, norm(x): 0.9519, norm(y): 1.0155, norm:36.4590, tok/sec: 98880.63, flops:103.79, batch-reuse:1
@ 802 train 6.1798 , allloss: 9.1486, dt: 1323.50ms, fracRes: 0.4399, norm(attn): 0.0757, norm(output): 0.9723, norm(x): 0.9500, norm(y): 1.0155, norm:27.0923, tok/sec: 99034.42, flops:103.95, batch-reuse:1
@ 803 train 6.2268 , allloss: 9.1675, dt: 1310.54ms, fracRes: 0.4453, norm(attn): 0.0742, norm(output): 0.9722, norm(x): 0.9490, norm(y): 1.0156, norm:32.7232, tok/sec: 100013.50, flops:104.98, batch-reuse:1
@ 804 train 6.1317 , allloss: 8.8232, dt: 1284.52ms, fracRes: 0.4491, norm(attn): 0.0693, norm(output): 0.9723, norm(x): 0.9454, norm(y): 1.0152, norm:28.5335, tok/sec: 102039.49, flops:107.10, batch-reuse:1
@ 805 train 6.2130 , allloss: 8.9747, dt: 1282.15ms, fracRes: 0.4487, norm(attn): 0.0674, norm(output): 0.9722, norm(x): 0.9440, norm(y): 1.0153, norm:32.0722, tok/sec: 102228.10, flops:107.30, batch-reuse:1
@ 806 train 6.0995 , allloss: 8.7895, dt: 1308.61ms, fracRes: 0.4543, norm(attn): 0.0669, norm(output): 0.9722, norm(x): 0.9423, norm(y): 1.0152, norm:30.0805, tok/sec: 100161.55, flops:105.13, batch-reuse:1
@ 807 train 6.1458 , allloss: 8.8442, dt: 1332.48ms, fracRes: 0.4603, norm(attn): 0.0664, norm(output): 0.9721, norm(x): 0.9395, norm(y): 1.0154, norm:30.6560, tok/sec: 98366.80, flops:103.25, batch-reuse:1
@ 808 train 6.1584 , allloss: 8.8822, dt: 1301.28ms, fracRes: 0.4607, norm(attn): 0.0708, norm(output): 0.9721, norm(x): 0.9392, norm(y): 1.0154, norm:32.6702, tok/sec: 100725.49, flops:105.72, batch-reuse:1
@ 809 train 6.1511 , allloss: 8.8829, dt: 1298.16ms, fracRes: 0.4635, norm(attn): 0.0688, norm(output): 0.9721, norm(x): 0.9386, norm(y): 1.0151, norm:35.0756, tok/sec: 100967.37, flops:105.98, batch-reuse:1
@ 810 train 6.1631 , allloss: 8.8457, dt: 1296.38ms, fracRes: 0.4693, norm(attn): 0.0684, norm(output): 0.9720, norm(x): 0.9375, norm(y): 1.0152, norm:33.0881, tok/sec: 101106.47, flops:106.12, batch-reuse:1
@ 811 train 6.1672 , allloss: 8.9345, dt: 1309.06ms, fracRes: 0.4616, norm(attn): 0.0737, norm(output): 0.9719, norm(x): 0.9393, norm(y): 1.0154, norm:34.2209, tok/sec: 100126.49, flops:105.10, batch-reuse:1
@ 812 train 6.0455 , allloss: 8.6727, dt: 1288.39ms, fracRes: 0.4569, norm(attn): 0.0786, norm(output): 0.9719, norm(x): 0.9412, norm(y): 1.0156, norm:30.2273, tok/sec: 101733.05, flops:106.78, batch-reuse:1
@ 813 train 6.2204 , allloss: 8.9957, dt: 1291.44ms, fracRes: 0.4565, norm(attn): 0.0791, norm(output): 0.9719, norm(x): 0.9442, norm(y): 1.0154, norm:32.2768, tok/sec: 101493.15, flops:106.53, batch-reuse:1
@ 814 train 6.2067 , allloss: 8.8601, dt: 1296.78ms, fracRes: 0.4857, norm(attn): 0.0723, norm(output): 0.9718, norm(x): 0.9350, norm(y): 1.0153, norm:29.3190, tok/sec: 101075.17, flops:106.09, batch-reuse:1
@ 815 train 6.0749 , allloss: 8.7564, dt: 1300.41ms, fracRes: 0.4978, norm(attn): 0.0688, norm(output): 0.9718, norm(x): 0.9331, norm(y): 1.0152, norm:31.9114, tok/sec: 100792.79, flops:105.80, batch-reuse:1
@ 816 train 6.1413 , allloss: 8.7622, dt: 1288.83ms, fracRes: 0.4812, norm(attn): 0.0762, norm(output): 0.9718, norm(x): 0.9385, norm(y): 1.0155, norm:31.2510, tok/sec: 101698.10, flops:106.75, batch-reuse:1
@ 817 train 6.0773 , allloss: 8.7719, dt: 1335.18ms, fracRes: 0.4921, norm(attn): 0.0776, norm(output): 0.9717, norm(x): 0.9367, norm(y): 1.0155, norm:32.6528, tok/sec: 98167.88, flops:103.04, batch-reuse:1
@ 818 train 6.1018 , allloss: 8.6977, dt: 1302.99ms, fracRes: 0.5180, norm(attn): 0.0669, norm(output): 0.9717, norm(x): 0.9311, norm(y): 1.0149, norm:30.9822, tok/sec: 100593.55, flops:105.59, batch-reuse:1
@ 819 train 6.2057 , allloss: 8.9721, dt: 1305.81ms, fracRes: 0.5165, norm(attn): 0.0684, norm(output): 0.9717, norm(x): 0.9303, norm(y): 1.0148, norm:36.1192, tok/sec: 100375.87, flops:105.36, batch-reuse:1
@ 820 train 6.2506 , allloss: 8.9007, dt: 1309.10ms, fracRes: 0.4674, norm(attn): 0.0806, norm(output): 0.9716, norm(x): 0.9401, norm(y): 1.0154, norm:33.4079, tok/sec: 100124.03, flops:105.09, batch-reuse:1
@ 821 train 6.1734 , allloss: 8.9809, dt: 1326.91ms, fracRes: 0.4510, norm(attn): 0.0850, norm(output): 0.9716, norm(x): 0.9487, norm(y): 1.0155, norm:35.2438, tok/sec: 98779.52, flops:103.68, batch-reuse:1
@ 822 train 6.1534 , allloss: 8.8495, dt: 1321.64ms, fracRes: 0.4568, norm(attn): 0.0791, norm(output): 0.9717, norm(x): 0.9432, norm(y): 1.0148, norm:29.8120, tok/sec: 99173.91, flops:104.10, batch-reuse:1
@ 823 train 6.0737 , allloss: 8.8953, dt: 1292.93ms, fracRes: 0.4507, norm(attn): 0.0781, norm(output): 0.9715, norm(x): 0.9441, norm(y): 1.0154, norm:30.8465, tok/sec: 101375.93, flops:106.41, batch-reuse:1
@ 824 train 6.1959 , allloss: 8.9130, dt: 1310.87ms, fracRes: 0.4646, norm(attn): 0.0762, norm(output): 0.9716, norm(x): 0.9404, norm(y): 1.0149, norm:26.5614, tok/sec: 99988.44, flops:104.95, batch-reuse:1
@ 825 train 6.1420 , allloss: 8.9735, dt: 1281.05ms, fracRes: 0.4807, norm(attn): 0.0698, norm(output): 0.9715, norm(x): 0.9333, norm(y): 1.0151, norm:33.0637, tok/sec: 102315.82, flops:107.39, batch-reuse:1
@ 826 train 6.1176 , allloss: 8.7410, dt: 1283.22ms, fracRes: 0.4873, norm(attn): 0.0718, norm(output): 0.9715, norm(x): 0.9328, norm(y): 1.0149, norm:26.5980, tok/sec: 102143.10, flops:107.21, batch-reuse:1
@ 827 train 6.1737 , allloss: 9.0234, dt: 1291.26ms, fracRes: 0.4807, norm(attn): 0.0723, norm(output): 0.9714, norm(x): 0.9350, norm(y): 1.0151, norm:33.3111, tok/sec: 101506.79, flops:106.54, batch-reuse:1
@ 828 train 6.1272 , allloss: 8.6836, dt: 1292.27ms, fracRes: 0.4955, norm(attn): 0.0703, norm(output): 0.9714, norm(x): 0.9339, norm(y): 1.0149, norm:28.1403, tok/sec: 101428.10, flops:106.46, batch-reuse:1
@ 829 train 6.1771 , allloss: 8.9450, dt: 1295.57ms, fracRes: 0.4919, norm(attn): 0.0737, norm(output): 0.9714, norm(x): 0.9358, norm(y): 1.0150, norm:35.4522, tok/sec: 101169.66, flops:106.19, batch-reuse:1
@ 830 train 6.1536 , allloss: 8.8037, dt: 1307.70ms, fracRes: 0.5013, norm(attn): 0.0723, norm(output): 0.9713, norm(x): 0.9337, norm(y): 1.0152, norm:31.5695, tok/sec: 100231.22, flops:105.21, batch-reuse:1
@ 831 train 6.1526 , allloss: 8.8262, dt: 1323.33ms, fracRes: 0.4988, norm(attn): 0.0742, norm(output): 0.9713, norm(x): 0.9332, norm(y): 1.0150, norm:29.4464, tok/sec: 99046.89, flops:103.96, batch-reuse:1
@ 832 train 6.1941 , allloss: 8.8516, dt: 1330.93ms, fracRes: 0.5047, norm(attn): 0.0767, norm(output): 0.9712, norm(x): 0.9340, norm(y): 1.0151, norm:29.3911, tok/sec: 98481.44, flops:103.37, batch-reuse:1
@ 833 train 6.0644 , allloss: 8.6466, dt: 1336.15ms, fracRes: 0.4956, norm(attn): 0.0801, norm(output): 0.9712, norm(x): 0.9336, norm(y): 1.0150, norm:26.6933, tok/sec: 98097.00, flops:102.97, batch-reuse:1
@ 834 train 6.0987 , allloss: 8.7678, dt: 1312.64ms, fracRes: 0.5020, norm(attn): 0.0781, norm(output): 0.9712, norm(x): 0.9314, norm(y): 1.0149, norm:28.8016, tok/sec: 99853.84, flops:104.81, batch-reuse:1
@ 835 train 6.0250 , allloss: 8.5686, dt: 1313.15ms, fracRes: 0.5034, norm(attn): 0.0771, norm(output): 0.9711, norm(x): 0.9322, norm(y): 1.0149, norm:26.3663, tok/sec: 99814.95, flops:104.77, batch-reuse:1
@ 836 train 6.0715 , allloss: 8.7739, dt: 1277.34ms, fracRes: 0.4908, norm(attn): 0.0889, norm(output): 0.9710, norm(x): 0.9345, norm(y): 1.0156, norm:31.8727, tok/sec: 102613.06, flops:107.71, batch-reuse:1
@ 837 train 6.0784 , allloss: 8.6537, dt: 1287.28ms, fracRes: 0.4986, norm(attn): 0.0815, norm(output): 0.9710, norm(x): 0.9351, norm(y): 1.0152, norm:31.1445, tok/sec: 101820.72, flops:106.87, batch-reuse:1
@ 838 train 6.0574 , allloss: 8.7185, dt: 1309.11ms, fracRes: 0.5235, norm(attn): 0.0732, norm(output): 0.9710, norm(x): 0.9312, norm(y): 1.0148, norm:31.7361, tok/sec: 100122.77, flops:105.09, batch-reuse:1
@ 839 train 5.9314 , allloss: 8.5042, dt: 1325.65ms, fracRes: 0.5010, norm(attn): 0.0781, norm(output): 0.9710, norm(x): 0.9349, norm(y): 1.0148, norm:29.1462, tok/sec: 98873.92, flops:103.78, batch-reuse:1
@ 840 train 6.0589 , allloss: 8.5786, dt: 1317.39ms, fracRes: 0.4944, norm(attn): 0.0820, norm(output): 0.9710, norm(x): 0.9361, norm(y): 1.0152, norm:28.3341, tok/sec: 99493.91, flops:104.43, batch-reuse:1
@ 841 train 5.9827 , allloss: 8.6388, dt: 1288.39ms, fracRes: 0.4883, norm(attn): 0.0830, norm(output): 0.9709, norm(x): 0.9352, norm(y): 1.0154, norm:31.3458, tok/sec: 101733.05, flops:106.78, batch-reuse:1
@ 842 train 6.0905 , allloss: 8.7644, dt: 1301.88ms, fracRes: 0.4845, norm(attn): 0.0830, norm(output): 0.9708, norm(x): 0.9343, norm(y): 1.0152, norm:27.7570, tok/sec: 100679.21, flops:105.68, batch-reuse:1
@ 843 train 6.0981 , allloss: 9.0796, dt: 1293.06ms, fracRes: 0.4865, norm(attn): 0.0796, norm(output): 0.9709, norm(x): 0.9340, norm(y): 1.0149, norm:33.0284, tok/sec: 101365.97, flops:106.40, batch-reuse:1
@ 844 train 6.1376 , allloss: 9.1518, dt: 1302.67ms, fracRes: 0.4892, norm(attn): 0.0767, norm(output): 0.9708, norm(x): 0.9327, norm(y): 1.0147, norm:29.0893, tok/sec: 100617.85, flops:105.61, batch-reuse:1
@ 845 train 6.0819 , allloss: 9.2380, dt: 1314.00ms, fracRes: 0.5013, norm(attn): 0.0771, norm(output): 0.9708, norm(x): 0.9294, norm(y): 1.0147, norm:32.8131, tok/sec: 99750.17, flops:104.70, batch-reuse:1
@ 846 train 6.0746 , allloss: 9.0491, dt: 1312.52ms, fracRes: 0.4853, norm(attn): 0.0811, norm(output): 0.9707, norm(x): 0.9328, norm(y): 1.0152, norm:29.4028, tok/sec: 99863.09, flops:104.82, batch-reuse:1
@ 847 train 6.1157 , allloss: 8.9568, dt: 1304.57ms, fracRes: 0.4827, norm(attn): 0.0830, norm(output): 0.9707, norm(x): 0.9342, norm(y): 1.0149, norm:32.4467, tok/sec: 100471.24, flops:105.46, batch-reuse:1
@ 848 train 6.0796 , allloss: 8.7437, dt: 1289.07ms, fracRes: 0.4801, norm(attn): 0.0845, norm(output): 0.9706, norm(x): 0.9342, norm(y): 1.0151, norm:29.5131, tok/sec: 101679.23, flops:106.73, batch-reuse:1
@ 849 train 6.0457 , allloss: 8.7452, dt: 1313.90ms, fracRes: 0.4877, norm(attn): 0.0801, norm(output): 0.9706, norm(x): 0.9316, norm(y): 1.0148, norm:33.2540, tok/sec: 99757.95, flops:104.71, batch-reuse:1
@ 850 train 6.0170 , allloss: 8.6050, dt: 1296.35ms, fracRes: 0.4989, norm(attn): 0.0811, norm(output): 0.9705, norm(x): 0.9287, norm(y): 1.0150, norm:30.1190, tok/sec: 101108.22, flops:106.13, batch-reuse:1
@ 851 train 6.2388 , allloss: 8.9318, dt: 1318.66ms, fracRes: 0.4937, norm(attn): 0.0796, norm(output): 0.9705, norm(x): 0.9300, norm(y): 1.0149, norm:30.9488, tok/sec: 99398.16, flops:104.33, batch-reuse:1
@ 852 train 6.1449 , allloss: 8.7973, dt: 1307.64ms, fracRes: 0.4964, norm(attn): 0.0791, norm(output): 0.9705, norm(x): 0.9317, norm(y): 1.0150, norm:30.4304, tok/sec: 100235.22, flops:105.21, batch-reuse:1
@ 853 train 6.1207 , allloss: 8.8780, dt: 1322.92ms, fracRes: 0.4911, norm(attn): 0.0859, norm(output): 0.9704, norm(x): 0.9322, norm(y): 1.0153, norm:33.7213, tok/sec: 99077.51, flops:103.99, batch-reuse:1
@ 854 train 6.0841 , allloss: 8.7015, dt: 1308.71ms, fracRes: 0.4938, norm(attn): 0.0830, norm(output): 0.9704, norm(x): 0.9301, norm(y): 1.0152, norm:31.8814, tok/sec: 100153.58, flops:105.12, batch-reuse:1
@ 855 train 6.1077 , allloss: 8.7970, dt: 1297.93ms, fracRes: 0.5099, norm(attn): 0.0781, norm(output): 0.9704, norm(x): 0.9288, norm(y): 1.0150, norm:32.7192, tok/sec: 100985.51, flops:106.00, batch-reuse:1
@ 856 train 6.1035 , allloss: 8.5871, dt: 1280.02ms, fracRes: 0.5021, norm(attn): 0.0820, norm(output): 0.9703, norm(x): 0.9289, norm(y): 1.0149, norm:26.8832, tok/sec: 102398.36, flops:107.48, batch-reuse:1
@ 857 train 6.1075 , allloss: 8.7879, dt: 1310.61ms, fracRes: 0.5353, norm(attn): 0.0781, norm(output): 0.9703, norm(x): 0.9275, norm(y): 1.0149, norm:31.8472, tok/sec: 100008.43, flops:104.97, batch-reuse:1
@ 858 train 6.1458 , allloss: 8.6047, dt: 1327.26ms, fracRes: 0.5293, norm(attn): 0.0757, norm(output): 0.9703, norm(x): 0.9294, norm(y): 1.0147, norm:26.1854, tok/sec: 98754.14, flops:103.66, batch-reuse:1
@ 859 train 6.0671 , allloss: 8.7842, dt: 1306.16ms, fracRes: 0.5176, norm(attn): 0.0791, norm(output): 0.9703, norm(x): 0.9316, norm(y): 1.0149, norm:33.9392, tok/sec: 100349.41, flops:105.33, batch-reuse:1
@ 860 train 6.0991 , allloss: 8.5644, dt: 1298.83ms, fracRes: 0.5101, norm(attn): 0.0776, norm(output): 0.9702, norm(x): 0.9310, norm(y): 1.0148, norm:27.3140, tok/sec: 100915.49, flops:105.92, batch-reuse:1
@ 861 train 6.0803 , allloss: 8.7884, dt: 1313.58ms, fracRes: 0.5071, norm(attn): 0.0801, norm(output): 0.9702, norm(x): 0.9315, norm(y): 1.0150, norm:33.2525, tok/sec: 99781.93, flops:104.73, batch-reuse:1
@ 862 train 6.1227 , allloss: 8.6169, dt: 1326.88ms, fracRes: 0.5045, norm(attn): 0.0864, norm(output): 0.9701, norm(x): 0.9331, norm(y): 1.0151, norm:27.0902, tok/sec: 98782.09, flops:103.68, batch-reuse:1
@ 863 train 6.0759 , allloss: 8.7267, dt: 1310.78ms, fracRes: 0.5068, norm(attn): 0.0850, norm(output): 0.9701, norm(x): 0.9349, norm(y): 1.0150, norm:30.0419, tok/sec: 99995.58, flops:104.96, batch-reuse:1
@ 864 train 6.0886 , allloss: 8.6334, dt: 1334.77ms, fracRes: 0.5083, norm(attn): 0.0859, norm(output): 0.9701, norm(x): 0.9368, norm(y): 1.0151, norm:25.2030, tok/sec: 98197.91, flops:103.07, batch-reuse:1
@ 865 train 6.0047 , allloss: 8.5330, dt: 1292.98ms, fracRes: 0.5122, norm(attn): 0.0840, norm(output): 0.9700, norm(x): 0.9349, norm(y): 1.0151, norm:26.4782, tok/sec: 101371.82, flops:106.40, batch-reuse:1
@ 866 train 5.9857 , allloss: 8.5640, dt: 1272.09ms, fracRes: 0.5094, norm(attn): 0.0864, norm(output): 0.9700, norm(x): 0.9340, norm(y): 1.0154, norm:26.9816, tok/sec: 103036.49, flops:108.15, batch-reuse:1
@ 867 train 6.0332 , allloss: 8.5391, dt: 1310.82ms, fracRes: 0.5134, norm(attn): 0.0830, norm(output): 0.9700, norm(x): 0.9328, norm(y): 1.0152, norm:26.4614, tok/sec: 99992.15, flops:104.95, batch-reuse:1
@ 868 train 6.0136 , allloss: 8.6525, dt: 1329.39ms, fracRes: 0.5123, norm(attn): 0.0811, norm(output): 0.9700, norm(x): 0.9336, norm(y): 1.0151, norm:32.0592, tok/sec: 98595.86, flops:103.49, batch-reuse:1
@ 869 train 6.0513 , allloss: 8.5778, dt: 1316.53ms, fracRes: 0.5035, norm(attn): 0.0830, norm(output): 0.9699, norm(x): 0.9361, norm(y): 1.0152, norm:29.7194, tok/sec: 99558.76, flops:104.50, batch-reuse:1
@ 870 train 6.0247 , allloss: 8.6133, dt: 1273.75ms, fracRes: 0.5126, norm(attn): 0.0830, norm(output): 0.9699, norm(x): 0.9330, norm(y): 1.0151, norm:30.5690, tok/sec: 102902.06, flops:108.01, batch-reuse:1
@ 871 train 6.0428 , allloss: 8.6218, dt: 1278.26ms, fracRes: 0.5197, norm(attn): 0.0815, norm(output): 0.9698, norm(x): 0.9306, norm(y): 1.0152, norm:29.6894, tok/sec: 102539.29, flops:107.63, batch-reuse:1
@ 872 train 5.9871 , allloss: 8.6116, dt: 1292.85ms, fracRes: 0.5120, norm(attn): 0.0845, norm(output): 0.9698, norm(x): 0.9311, norm(y): 1.0153, norm:31.3915, tok/sec: 101382.59, flops:106.41, batch-reuse:1
@ 873 train 6.0373 , allloss: 8.5634, dt: 1288.57ms, fracRes: 0.5222, norm(attn): 0.0835, norm(output): 0.9697, norm(x): 0.9292, norm(y): 1.0155, norm:29.0377, tok/sec: 101719.25, flops:106.77, batch-reuse:1
@ 874 train 5.9533 , allloss: 8.5941, dt: 1290.13ms, fracRes: 0.5252, norm(attn): 0.0801, norm(output): 0.9698, norm(x): 0.9295, norm(y): 1.0154, norm:30.9967, tok/sec: 101596.29, flops:106.64, batch-reuse:1
@ 875 train 5.9793 , allloss: 8.5489, dt: 1296.63ms, fracRes: 0.5243, norm(attn): 0.0835, norm(output): 0.9697, norm(x): 0.9300, norm(y): 1.0157, norm:28.4695, tok/sec: 101086.87, flops:106.10, batch-reuse:1
@ 876 train 5.9971 , allloss: 8.6019, dt: 1305.00ms, fracRes: 0.5187, norm(attn): 0.0811, norm(output): 0.9698, norm(x): 0.9315, norm(y): 1.0152, norm:28.4424, tok/sec: 100438.42, flops:105.42, batch-reuse:1
@ 877 train 6.0376 , allloss: 8.6432, dt: 1289.63ms, fracRes: 0.4970, norm(attn): 0.0884, norm(output): 0.9696, norm(x): 0.9317, norm(y): 1.0159, norm:28.4556, tok/sec: 101635.71, flops:106.68, batch-reuse:1
@ 878 train 6.0491 , allloss: 8.6301, dt: 1318.61ms, fracRes: 0.5309, norm(attn): 0.0806, norm(output): 0.9697, norm(x): 0.9275, norm(y): 1.0145, norm:28.9966, tok/sec: 99401.48, flops:104.33, batch-reuse:1
@ 879 train 6.0305 , allloss: 8.6773, dt: 1313.24ms, fracRes: 0.5458, norm(attn): 0.0845, norm(output): 0.9696, norm(x): 0.9276, norm(y): 1.0150, norm:31.4458, tok/sec: 99808.38, flops:104.76, batch-reuse:1
@ 880 train 6.0738 , allloss: 8.6628, dt: 1315.35ms, fracRes: 0.5281, norm(attn): 0.0776, norm(output): 0.9696, norm(x): 0.9290, norm(y): 1.0149, norm:28.6280, tok/sec: 99647.98, flops:104.59, batch-reuse:1
@ 881 train 5.9774 , allloss: 8.5570, dt: 1310.02ms, fracRes: 0.5233, norm(attn): 0.0786, norm(output): 0.9695, norm(x): 0.9312, norm(y): 1.0157, norm:26.5822, tok/sec: 100053.53, flops:105.02, batch-reuse:1
@ 882 train 5.9748 , allloss: 8.5219, dt: 1312.92ms, fracRes: 0.5222, norm(attn): 0.0801, norm(output): 0.9694, norm(x): 0.9346, norm(y): 1.0158, norm:27.7706, tok/sec: 99832.14, flops:104.79, batch-reuse:1
@ 883 train 5.9519 , allloss: 8.4853, dt: 1296.30ms, fracRes: 0.5234, norm(attn): 0.0806, norm(output): 0.9695, norm(x): 0.9352, norm(y): 1.0157, norm:27.8533, tok/sec: 101112.07, flops:106.13, batch-reuse:1
@ 884 train 5.9610 , allloss: 8.4841, dt: 1304.70ms, fracRes: 0.5272, norm(attn): 0.0815, norm(output): 0.9694, norm(x): 0.9318, norm(y): 1.0161, norm:28.3824, tok/sec: 100461.09, flops:105.45, batch-reuse:1
@ 885 train 5.9826 , allloss: 8.5441, dt: 1300.97ms, fracRes: 0.5298, norm(attn): 0.0825, norm(output): 0.9694, norm(x): 0.9296, norm(y): 1.0158, norm:31.8288, tok/sec: 100749.58, flops:105.75, batch-reuse:1
@ 886 train 6.0512 , allloss: 8.5453, dt: 1314.96ms, fracRes: 0.5327, norm(attn): 0.0825, norm(output): 0.9694, norm(x): 0.9271, norm(y): 1.0157, norm:29.2175, tok/sec: 99677.41, flops:104.62, batch-reuse:1
@ 887 train 5.9872 , allloss: 8.5738, dt: 1305.44ms, fracRes: 0.5328, norm(attn): 0.0801, norm(output): 0.9694, norm(x): 0.9289, norm(y): 1.0153, norm:30.6432, tok/sec: 100404.59, flops:105.39, batch-reuse:1
@ 888 train 5.9788 , allloss: 8.4045, dt: 1286.37ms, fracRes: 0.5326, norm(attn): 0.0801, norm(output): 0.9693, norm(x): 0.9302, norm(y): 1.0154, norm:26.1482, tok/sec: 101893.17, flops:106.95, batch-reuse:1
@ 889 train 6.0090 , allloss: 8.6044, dt: 1273.05ms, fracRes: 0.5313, norm(attn): 0.0825, norm(output): 0.9693, norm(x): 0.9312, norm(y): 1.0154, norm:28.8854, tok/sec: 102959.28, flops:108.07, batch-reuse:1
@ 890 train 6.0368 , allloss: 8.4580, dt: 1306.53ms, fracRes: 0.5290, norm(attn): 0.0859, norm(output): 0.9693, norm(x): 0.9321, norm(y): 1.0154, norm:25.6475, tok/sec: 100320.72, flops:105.30, batch-reuse:1
@ 891 train 5.9686 , allloss: 8.7090, dt: 1299.20ms, fracRes: 0.5294, norm(attn): 0.0840, norm(output): 0.9692, norm(x): 0.9323, norm(y): 1.0154, norm:31.9667, tok/sec: 100887.08, flops:105.89, batch-reuse:1
@ 892 train 5.9237 , allloss: 8.3440, dt: 1324.66ms, fracRes: 0.5289, norm(attn): 0.0830, norm(output): 0.9692, norm(x): 0.9311, norm(y): 1.0155, norm:26.2115, tok/sec: 98947.88, flops:103.86, batch-reuse:1
@ 893 train 5.8492 , allloss: 8.5864, dt: 1308.01ms, fracRes: 0.5299, norm(attn): 0.0811, norm(output): 0.9692, norm(x): 0.9302, norm(y): 1.0154, norm:33.5425, tok/sec: 100206.99, flops:105.18, batch-reuse:1
@ 894 train 5.9691 , allloss: 8.4154, dt: 1293.28ms, fracRes: 0.5265, norm(attn): 0.0835, norm(output): 0.9692, norm(x): 0.9325, norm(y): 1.0158, norm:29.2533, tok/sec: 101348.22, flops:106.38, batch-reuse:1
@ 895 train 5.9447 , allloss: 8.6049, dt: 1341.61ms, fracRes: 0.5222, norm(attn): 0.0850, norm(output): 0.9691, norm(x): 0.9367, norm(y): 1.0160, norm:28.9254, tok/sec: 97697.51, flops:102.55, batch-reuse:1
@ 896 train 5.8492 , allloss: 8.2994, dt: 1346.02ms, fracRes: 0.5241, norm(attn): 0.0791, norm(output): 0.9691, norm(x): 0.9351, norm(y): 1.0154, norm:24.9753, tok/sec: 97377.35, flops:102.21, batch-reuse:1
@ 897 train 5.9676 , allloss: 8.5668, dt: 1302.41ms, fracRes: 0.5278, norm(attn): 0.0796, norm(output): 0.9690, norm(x): 0.9315, norm(y): 1.0157, norm:29.3515, tok/sec: 100638.11, flops:105.63, batch-reuse:1
@ 898 train 5.9768 , allloss: 8.4583, dt: 1309.73ms, fracRes: 0.5279, norm(attn): 0.0806, norm(output): 0.9690, norm(x): 0.9326, norm(y): 1.0152, norm:25.5703, tok/sec: 100075.66, flops:105.04, batch-reuse:1
@ 899 train 5.9273 , allloss: 8.5586, dt: 1306.13ms, fracRes: 0.5267, norm(attn): 0.0845, norm(output): 0.9690, norm(x): 0.9318, norm(y): 1.0156, norm:28.8611, tok/sec: 100351.11, flops:105.33, batch-reuse:1
@ 900 train 5.9995 , allloss: 8.5254, dt: 1304.60ms, fracRes: 0.5286, norm(attn): 0.0859, norm(output): 0.9690, norm(x): 0.9316, norm(y): 1.0153, norm:27.3354, tok/sec: 100468.91, flops:105.46, batch-reuse:1
@ 901 train 5.9238 , allloss: 8.4940, dt: 1296.67ms, fracRes: 0.5314, norm(attn): 0.0864, norm(output): 0.9689, norm(x): 0.9297, norm(y): 1.0153, norm:29.7714, tok/sec: 101083.38, flops:106.10, batch-reuse:1
@ 902 train 5.9048 , allloss: 8.4134, dt: 1297.29ms, fracRes: 0.5345, norm(attn): 0.0859, norm(output): 0.9690, norm(x): 0.9287, norm(y): 1.0151, norm:25.9480, tok/sec: 101035.25, flops:106.05, batch-reuse:1
@ 903 train 5.9063 , allloss: 8.5011, dt: 1312.83ms, fracRes: 0.5377, norm(attn): 0.0835, norm(output): 0.9689, norm(x): 0.9274, norm(y): 1.0150, norm:29.7369, tok/sec: 99839.01, flops:104.79, batch-reuse:1
@ 904 train 5.8534 , allloss: 8.3787, dt: 1340.00ms, fracRes: 0.5346, norm(attn): 0.0859, norm(output): 0.9689, norm(x): 0.9276, norm(y): 1.0154, norm:26.1312, tok/sec: 97814.88, flops:102.67, batch-reuse:1
@ 905 train 5.9406 , allloss: 8.5728, dt: 1339.13ms, fracRes: 0.5312, norm(attn): 0.0864, norm(output): 0.9688, norm(x): 0.9284, norm(y): 1.0154, norm:29.6848, tok/sec: 97878.15, flops:102.74, batch-reuse:1
@ 906 train 5.9494 , allloss: 8.4590, dt: 1340.86ms, fracRes: 0.5286, norm(attn): 0.0850, norm(output): 0.9688, norm(x): 0.9292, norm(y): 1.0157, norm:26.0645, tok/sec: 97751.92, flops:102.60, batch-reuse:1
@ 907 train 5.8007 , allloss: 8.4076, dt: 1347.07ms, fracRes: 0.5252, norm(attn): 0.0898, norm(output): 0.9688, norm(x): 0.9314, norm(y): 1.0156, norm:30.2121, tok/sec: 97301.26, flops:102.13, batch-reuse:1
@ 908 train 5.9324 , allloss: 8.4279, dt: 1306.59ms, fracRes: 0.5268, norm(attn): 0.0835, norm(output): 0.9687, norm(x): 0.9319, norm(y): 1.0155, norm:26.1581, tok/sec: 100316.05, flops:105.29, batch-reuse:1
@ 909 train 6.1239 , allloss: 8.8323, dt: 1349.98ms, fracRes: 0.5274, norm(attn): 0.0850, norm(output): 0.9687, norm(x): 0.9340, norm(y): 1.0151, norm:28.9595, tok/sec: 97091.73, flops:101.91, batch-reuse:1
@ 910 train 6.0193 , allloss: 8.4355, dt: 1344.85ms, fracRes: 0.5279, norm(attn): 0.0845, norm(output): 0.9686, norm(x): 0.9337, norm(y): 1.0153, norm:27.7093, tok/sec: 97462.03, flops:102.30, batch-reuse:1
@ 911 train 6.0977 , allloss: 8.9298, dt: 1319.46ms, fracRes: 0.5297, norm(attn): 0.0894, norm(output): 0.9686, norm(x): 0.9302, norm(y): 1.0160, norm:37.8823, tok/sec: 99337.65, flops:104.27, batch-reuse:1
@ 912 train 5.9547 , allloss: 8.5252, dt: 1299.64ms, fracRes: 0.5343, norm(attn): 0.0820, norm(output): 0.9686, norm(x): 0.9273, norm(y): 1.0151, norm:24.6817, tok/sec: 100852.68, flops:105.86, batch-reuse:1
@ 913 train 5.9153 , allloss: 8.7084, dt: 1313.83ms, fracRes: 0.5368, norm(attn): 0.0815, norm(output): 0.9685, norm(x): 0.9264, norm(y): 1.0155, norm:28.3301, tok/sec: 99763.37, flops:104.71, batch-reuse:1
@ 914 train 5.9872 , allloss: 8.5497, dt: 1314.24ms, fracRes: 0.5343, norm(attn): 0.0874, norm(output): 0.9685, norm(x): 0.9253, norm(y): 1.0154, norm:20.4113, tok/sec: 99731.93, flops:104.68, batch-reuse:1
@ 915 train 5.9863 , allloss: 8.5833, dt: 1323.32ms, fracRes: 0.5361, norm(attn): 0.0859, norm(output): 0.9685, norm(x): 0.9262, norm(y): 1.0153, norm:21.5787, tok/sec: 99047.55, flops:103.96, batch-reuse:1
@ 916 train 5.9022 , allloss: 8.5090, dt: 1297.75ms, fracRes: 0.5373, norm(attn): 0.0835, norm(output): 0.9685, norm(x): 0.9268, norm(y): 1.0150, norm:24.0123, tok/sec: 100999.33, flops:106.01, batch-reuse:1
@ 917 train 5.9362 , allloss: 8.4289, dt: 1297.67ms, fracRes: 0.5450, norm(attn): 0.0791, norm(output): 0.9684, norm(x): 0.9246, norm(y): 1.0147, norm:23.4131, tok/sec: 101005.56, flops:106.02, batch-reuse:1
@ 918 train 5.9671 , allloss: 8.5715, dt: 1333.08ms, fracRes: 0.5456, norm(attn): 0.0791, norm(output): 0.9685, norm(x): 0.9237, norm(y): 1.0145, norm:27.3522, tok/sec: 98322.69, flops:103.20, batch-reuse:1
@ 919 train 5.9181 , allloss: 8.4988, dt: 1302.18ms, fracRes: 0.5402, norm(attn): 0.0879, norm(output): 0.9684, norm(x): 0.9216, norm(y): 1.0150, norm:27.8795, tok/sec: 100656.02, flops:105.65, batch-reuse:1
@ 920 train 5.9659 , allloss: 8.4858, dt: 1293.62ms, fracRes: 0.5377, norm(attn): 0.0898, norm(output): 0.9684, norm(x): 0.9215, norm(y): 1.0151, norm:26.3311, tok/sec: 101322.14, flops:106.35, batch-reuse:1
@ 921 train 5.9409 , allloss: 8.5557, dt: 1339.98ms, fracRes: 0.5321, norm(attn): 0.0913, norm(output): 0.9683, norm(x): 0.9252, norm(y): 1.0154, norm:29.6218, tok/sec: 97816.59, flops:102.67, batch-reuse:1
@ 922 train 5.9659 , allloss: 8.4620, dt: 1298.18ms, fracRes: 0.5313, norm(attn): 0.0928, norm(output): 0.9683, norm(x): 0.9266, norm(y): 1.0157, norm:27.0998, tok/sec: 100965.64, flops:105.98, batch-reuse:1
@ 923 train 5.9198 , allloss: 8.5883, dt: 1282.18ms, fracRes: 0.5291, norm(attn): 0.0889, norm(output): 0.9683, norm(x): 0.9289, norm(y): 1.0156, norm:32.5317, tok/sec: 102225.70, flops:107.30, batch-reuse:1
@ 924 train 5.9022 , allloss: 8.3587, dt: 1293.42ms, fracRes: 0.5285, norm(attn): 0.0864, norm(output): 0.9682, norm(x): 0.9296, norm(y): 1.0157, norm:22.2195, tok/sec: 101337.70, flops:106.37, batch-reuse:1
@ 925 train 5.9408 , allloss: 8.5859, dt: 1290.41ms, fracRes: 0.5291, norm(attn): 0.0835, norm(output): 0.9682, norm(x): 0.9309, norm(y): 1.0152, norm:25.2802, tok/sec: 101573.86, flops:106.62, batch-reuse:1
@ 926 train 5.9052 , allloss: 8.3431, dt: 1284.88ms, fracRes: 0.5290, norm(attn): 0.0869, norm(output): 0.9682, norm(x): 0.9304, norm(y): 1.0154, norm:19.9356, tok/sec: 102011.15, flops:107.07, batch-reuse:1
@ 927 train 5.8592 , allloss: 8.4886, dt: 1297.78ms, fracRes: 0.5303, norm(attn): 0.0903, norm(output): 0.9682, norm(x): 0.9274, norm(y): 1.0153, norm:26.4218, tok/sec: 100997.47, flops:106.01, batch-reuse:1
@ 928 train 6.1082 , allloss: 8.5734, dt: 1314.85ms, fracRes: 0.5308, norm(attn): 0.0933, norm(output): 0.9682, norm(x): 0.9268, norm(y): 1.0150, norm:25.7132, tok/sec: 99685.87, flops:104.63, batch-reuse:1
@ 929 train 6.1153 , allloss: 8.8358, dt: 1315.14ms, fracRes: 0.5382, norm(attn): 0.0879, norm(output): 0.9682, norm(x): 0.9240, norm(y): 1.0147, norm:31.0351, tok/sec: 99663.59, flops:104.61, batch-reuse:1
@ 930 train 6.0351 , allloss: 8.5697, dt: 1304.50ms, fracRes: 0.5392, norm(attn): 0.0884, norm(output): 0.9681, norm(x): 0.9221, norm(y): 1.0146, norm:27.9768, tok/sec: 100476.89, flops:105.46, batch-reuse:1
@ 931 train 6.1678 , allloss: 8.7979, dt: 1318.62ms, fracRes: 0.5408, norm(attn): 0.0869, norm(output): 0.9680, norm(x): 0.9228, norm(y): 1.0152, norm:26.9512, tok/sec: 99401.00, flops:104.33, batch-reuse:1
@ 932 train 6.0921 , allloss: 8.6111, dt: 1331.40ms, fracRes: 0.5404, norm(attn): 0.0869, norm(output): 0.9680, norm(x): 0.9221, norm(y): 1.0152, norm:22.6646, tok/sec: 98446.97, flops:103.33, batch-reuse:1
@ 933 train 6.1042 , allloss: 8.6766, dt: 1294.02ms, fracRes: 0.5420, norm(attn): 0.0854, norm(output): 0.9680, norm(x): 0.9209, norm(y): 1.0150, norm:23.1646, tok/sec: 101290.54, flops:106.32, batch-reuse:1
@ 934 train 6.0921 , allloss: 8.6370, dt: 1316.01ms, fracRes: 0.5395, norm(attn): 0.0854, norm(output): 0.9680, norm(x): 0.9206, norm(y): 1.0152, norm:20.2329, tok/sec: 99597.94, flops:104.54, batch-reuse:1
@ 935 train 6.0555 , allloss: 8.6219, dt: 1322.40ms, fracRes: 0.5393, norm(attn): 0.0850, norm(output): 0.9680, norm(x): 0.9214, norm(y): 1.0147, norm:23.8013, tok/sec: 99116.77, flops:104.04, batch-reuse:1
@ 936 train 6.0931 , allloss: 8.6039, dt: 1337.53ms, fracRes: 0.5399, norm(attn): 0.0864, norm(output): 0.9679, norm(x): 0.9205, norm(y): 1.0153, norm:26.7430, tok/sec: 97995.76, flops:102.86, batch-reuse:1
@ 937 train 6.1374 , allloss: 8.8798, dt: 1306.62ms, fracRes: 0.5389, norm(attn): 0.0859, norm(output): 0.9679, norm(x): 0.9217, norm(y): 1.0144, norm:30.6755, tok/sec: 100314.14, flops:105.29, batch-reuse:1
@ 938 train 6.0398 , allloss: 8.5074, dt: 1310.56ms, fracRes: 0.5389, norm(attn): 0.0889, norm(output): 0.9678, norm(x): 0.9198, norm(y): 1.0155, norm:27.4028, tok/sec: 100012.14, flops:104.98, batch-reuse:1
@ 939 train 6.1074 , allloss: 8.7803, dt: 1278.18ms, fracRes: 0.5383, norm(attn): 0.0894, norm(output): 0.9679, norm(x): 0.9196, norm(y): 1.0150, norm:29.6758, tok/sec: 102546.16, flops:107.64, batch-reuse:1
@ 940 train 6.1056 , allloss: 8.5884, dt: 1285.69ms, fracRes: 0.5373, norm(attn): 0.0923, norm(output): 0.9678, norm(x): 0.9195, norm(y): 1.0154, norm:23.4569, tok/sec: 101946.70, flops:107.01, batch-reuse:1
@ 941 train 6.0757 , allloss: 8.7165, dt: 1281.27ms, fracRes: 0.5363, norm(attn): 0.0894, norm(output): 0.9678, norm(x): 0.9210, norm(y): 1.0153, norm:24.8297, tok/sec: 102298.67, flops:107.38, batch-reuse:1
@ 942 train 6.0941 , allloss: 8.5648, dt: 1295.66ms, fracRes: 0.5361, norm(attn): 0.0854, norm(output): 0.9677, norm(x): 0.9221, norm(y): 1.0153, norm:20.0961, tok/sec: 101162.55, flops:106.18, batch-reuse:1
@ 943 train 6.0269 , allloss: 8.6196, dt: 1298.84ms, fracRes: 0.5373, norm(attn): 0.0854, norm(output): 0.9677, norm(x): 0.9218, norm(y): 1.0153, norm:22.0946, tok/sec: 100914.58, flops:105.92, batch-reuse:1
@ 944 train 6.0494 , allloss: 8.5494, dt: 1299.62ms, fracRes: 0.5372, norm(attn): 0.0859, norm(output): 0.9677, norm(x): 0.9215, norm(y): 1.0153, norm:19.7257, tok/sec: 100854.07, flops:105.86, batch-reuse:1
@ 945 train 6.1553 , allloss: 8.6937, dt: 1312.87ms, fracRes: 0.5409, norm(attn): 0.0854, norm(output): 0.9676, norm(x): 0.9219, norm(y): 1.0152, norm:25.5142, tok/sec: 99836.58, flops:104.79, batch-reuse:1
@ 946 train 6.0546 , allloss: 8.6172, dt: 1316.75ms, fracRes: 0.5382, norm(attn): 0.0879, norm(output): 0.9676, norm(x): 0.9214, norm(y): 1.0149, norm:29.5527, tok/sec: 99541.96, flops:104.48, batch-reuse:1
@ 947 train 6.0534 , allloss: 8.5711, dt: 1321.34ms, fracRes: 0.5410, norm(attn): 0.0859, norm(output): 0.9676, norm(x): 0.9204, norm(y): 1.0152, norm:30.2840, tok/sec: 99195.96, flops:104.12, batch-reuse:1
@ 948 train 6.0494 , allloss: 8.6596, dt: 1290.05ms, fracRes: 0.5374, norm(attn): 0.0884, norm(output): 0.9675, norm(x): 0.9206, norm(y): 1.0151, norm:32.8107, tok/sec: 101602.56, flops:106.65, batch-reuse:1
@ 949 train 6.0883 , allloss: 8.7208, dt: 1308.16ms, fracRes: 0.5373, norm(attn): 0.0869, norm(output): 0.9675, norm(x): 0.9205, norm(y): 1.0152, norm:33.3490, tok/sec: 100195.95, flops:105.17, batch-reuse:1
@ 950 train 6.0299 , allloss: 8.5883, dt: 1303.32ms, fracRes: 0.5352, norm(attn): 0.0879, norm(output): 0.9675, norm(x): 0.9214, norm(y): 1.0153, norm:25.8194, tok/sec: 100567.90, flops:105.56, batch-reuse:1
@ 951 train 6.0932 , allloss: 8.7774, dt: 1313.03ms, fracRes: 0.5352, norm(attn): 0.0918, norm(output): 0.9674, norm(x): 0.9197, norm(y): 1.0155, norm:23.0543, tok/sec: 99823.71, flops:104.78, batch-reuse:1
@ 952 train 6.0171 , allloss: 8.6159, dt: 1314.30ms, fracRes: 0.5359, norm(attn): 0.0942, norm(output): 0.9674, norm(x): 0.9196, norm(y): 1.0156, norm:18.0184, tok/sec: 99727.73, flops:104.68, batch-reuse:1
@ 953 train 6.0608 , allloss: 8.6921, dt: 1299.89ms, fracRes: 0.5358, norm(attn): 0.0938, norm(output): 0.9674, norm(x): 0.9189, norm(y): 1.0157, norm:19.6184, tok/sec: 100832.79, flops:105.84, batch-reuse:1
@ 954 train 6.0232 , allloss: 8.6478, dt: 1291.89ms, fracRes: 0.5387, norm(attn): 0.0864, norm(output): 0.9674, norm(x): 0.9227, norm(y): 1.0149, norm:19.4861, tok/sec: 101457.32, flops:106.49, batch-reuse:1
@ 955 train 6.0834 , allloss: 8.7616, dt: 1305.60ms, fracRes: 0.5379, norm(attn): 0.0894, norm(output): 0.9673, norm(x): 0.9203, norm(y): 1.0154, norm:25.0300, tok/sec: 100391.96, flops:105.37, batch-reuse:1
@ 956 train 6.0197 , allloss: 8.5915, dt: 1306.18ms, fracRes: 0.5388, norm(attn): 0.0889, norm(output): 0.9673, norm(x): 0.9192, norm(y): 1.0150, norm:24.4781, tok/sec: 100347.32, flops:105.33, batch-reuse:1
@ 957 train 6.0519 , allloss: 8.7476, dt: 1274.64ms, fracRes: 0.5401, norm(attn): 0.0908, norm(output): 0.9672, norm(x): 0.9163, norm(y): 1.0155, norm:27.7201, tok/sec: 102830.60, flops:107.93, batch-reuse:1
@ 958 train 6.0618 , allloss: 8.5883, dt: 1310.84ms, fracRes: 0.5423, norm(attn): 0.0933, norm(output): 0.9673, norm(x): 0.9134, norm(y): 1.0153, norm:23.3790, tok/sec: 99990.71, flops:104.95, batch-reuse:1
@ 959 train 5.9480 , allloss: 8.6895, dt: 1303.94ms, fracRes: 0.5461, norm(attn): 0.0957, norm(output): 0.9671, norm(x): 0.9113, norm(y): 1.0156, norm:25.7901, tok/sec: 100519.66, flops:105.51, batch-reuse:1
@ 960 train 6.0911 , allloss: 8.6524, dt: 1285.34ms, fracRes: 0.5449, norm(attn): 0.0913, norm(output): 0.9672, norm(x): 0.9143, norm(y): 1.0153, norm:20.5497, tok/sec: 101974.61, flops:107.04, batch-reuse:1
@ 961 train 6.0542 , allloss: 8.8795, dt: 1291.66ms, fracRes: 0.5462, norm(attn): 0.0903, norm(output): 0.9670, norm(x): 0.9159, norm(y): 1.0156, norm:27.6821, tok/sec: 101475.76, flops:106.51, batch-reuse:1
@ 962 train 6.0352 , allloss: 8.5825, dt: 1297.36ms, fracRes: 0.5494, norm(attn): 0.0869, norm(output): 0.9671, norm(x): 0.9167, norm(y): 1.0148, norm:20.8384, tok/sec: 101029.92, flops:106.04, batch-reuse:1
@ 963 train 6.0570 , allloss: 8.8228, dt: 1287.97ms, fracRes: 0.5465, norm(attn): 0.0908, norm(output): 0.9671, norm(x): 0.9174, norm(y): 1.0149, norm:23.1280, tok/sec: 101766.47, flops:106.82, batch-reuse:1
@ 964 train 6.0519 , allloss: 8.6169, dt: 1293.95ms, fracRes: 0.5503, norm(attn): 0.0923, norm(output): 0.9671, norm(x): 0.9164, norm(y): 1.0149, norm:17.8178, tok/sec: 101296.01, flops:106.32, batch-reuse:1
@ 965 train 6.0711 , allloss: 8.6561, dt: 1300.83ms, fracRes: 0.5488, norm(attn): 0.0918, norm(output): 0.9670, norm(x): 0.9179, norm(y): 1.0150, norm:19.3215, tok/sec: 100759.92, flops:105.76, batch-reuse:1
@ 966 train 6.0382 , allloss: 8.6153, dt: 1298.54ms, fracRes: 0.5471, norm(attn): 0.0923, norm(output): 0.9669, norm(x): 0.9177, norm(y): 1.0153, norm:18.1735, tok/sec: 100937.89, flops:105.95, batch-reuse:1
@ 967 train 6.0160 , allloss: 8.6387, dt: 1282.61ms, fracRes: 0.5507, norm(attn): 0.0967, norm(output): 0.9669, norm(x): 0.9177, norm(y): 1.0150, norm:18.8070, tok/sec: 102191.42, flops:107.26, batch-reuse:1
@ 968 train 6.1892 , allloss: 8.7764, dt: 1313.93ms, fracRes: 0.5553, norm(attn): 0.0903, norm(output): 0.9669, norm(x): 0.9130, norm(y): 1.0155, norm:23.6744, tok/sec: 99755.47, flops:104.71, batch-reuse:1
@ 969 train 6.0303 , allloss: 8.5291, dt: 1337.98ms, fracRes: 0.5618, norm(attn): 0.0952, norm(output): 0.9668, norm(x): 0.9103, norm(y): 1.0152, norm:20.8128, tok/sec: 97962.93, flops:102.83, batch-reuse:1
@ 970 train 6.0456 , allloss: 8.7580, dt: 1335.09ms, fracRes: 0.5637, norm(attn): 0.0962, norm(output): 0.9668, norm(x): 0.9072, norm(y): 1.0156, norm:23.7298, tok/sec: 98174.43, flops:103.05, batch-reuse:1
@ 971 train 6.0839 , allloss: 8.5279, dt: 1307.06ms, fracRes: 0.5672, norm(attn): 0.0972, norm(output): 0.9668, norm(x): 0.9067, norm(y): 1.0153, norm:20.0320, tok/sec: 100280.33, flops:105.26, batch-reuse:1
@ 972 train 6.0777 , allloss: 8.7739, dt: 1313.18ms, fracRes: 0.5629, norm(attn): 0.0957, norm(output): 0.9668, norm(x): 0.9076, norm(y): 1.0153, norm:27.2120, tok/sec: 99812.85, flops:104.77, batch-reuse:1
@ 973 train 6.0642 , allloss: 8.4540, dt: 1305.12ms, fracRes: 0.5643, norm(attn): 0.0923, norm(output): 0.9667, norm(x): 0.9080, norm(y): 1.0153, norm:21.0498, tok/sec: 100429.26, flops:105.41, batch-reuse:1
@ 974 train 6.0533 , allloss: 8.7428, dt: 1338.47ms, fracRes: 0.5688, norm(attn): 0.0923, norm(output): 0.9667, norm(x): 0.9096, norm(y): 1.0152, norm:24.5939, tok/sec: 97926.79, flops:102.79, batch-reuse:1
@ 975 train 6.1037 , allloss: 8.5966, dt: 1278.13ms, fracRes: 0.5690, norm(attn): 0.0918, norm(output): 0.9666, norm(x): 0.9114, norm(y): 1.0153, norm:17.2541, tok/sec: 102549.43, flops:107.64, batch-reuse:1
@ 976 train 6.0032 , allloss: 8.6038, dt: 1283.58ms, fracRes: 0.5749, norm(attn): 0.0933, norm(output): 0.9666, norm(x): 0.9117, norm(y): 1.0157, norm:20.4749, tok/sec: 102114.26, flops:107.18, batch-reuse:1
@ 977 train 5.9909 , allloss: 8.4738, dt: 1272.27ms, fracRes: 0.5653, norm(attn): 0.0952, norm(output): 0.9665, norm(x): 0.9119, norm(y): 1.0158, norm:18.8777, tok/sec: 103022.26, flops:108.14, batch-reuse:1
@ 978 train 6.0186 , allloss: 8.5004, dt: 1303.40ms, fracRes: 0.5650, norm(attn): 0.0894, norm(output): 0.9665, norm(x): 0.9122, norm(y): 1.0161, norm:20.0723, tok/sec: 100561.97, flops:105.55, batch-reuse:1
@ 979 train 5.9627 , allloss: 8.5121, dt: 1302.17ms, fracRes: 0.5598, norm(attn): 0.0889, norm(output): 0.9665, norm(x): 0.9131, norm(y): 1.0156, norm:18.7159, tok/sec: 100656.72, flops:105.65, batch-reuse:1
@ 980 train 5.9033 , allloss: 8.3129, dt: 1332.47ms, fracRes: 0.5619, norm(attn): 0.0908, norm(output): 0.9665, norm(x): 0.9133, norm(y): 1.0158, norm:17.6663, tok/sec: 98367.94, flops:103.25, batch-reuse:1
@ 981 train 5.9023 , allloss: 8.3125, dt: 1313.20ms, fracRes: 0.5594, norm(attn): 0.0923, norm(output): 0.9665, norm(x): 0.9136, norm(y): 1.0153, norm:17.1011, tok/sec: 99811.26, flops:104.77, batch-reuse:1
@ 982 train 5.9414 , allloss: 8.3857, dt: 1314.10ms, fracRes: 0.5619, norm(attn): 0.0942, norm(output): 0.9664, norm(x): 0.9126, norm(y): 1.0159, norm:20.3933, tok/sec: 99742.86, flops:104.69, batch-reuse:1
@ 983 train 6.0254 , allloss: 8.3683, dt: 1340.34ms, fracRes: 0.5634, norm(attn): 0.0962, norm(output): 0.9664, norm(x): 0.9130, norm(y): 1.0155, norm:18.0852, tok/sec: 97790.17, flops:102.64, batch-reuse:1
@ 984 train 5.9555 , allloss: 8.4524, dt: 1326.05ms, fracRes: 0.5592, norm(attn): 0.0957, norm(output): 0.9663, norm(x): 0.9134, norm(y): 1.0162, norm:22.4231, tok/sec: 98844.15, flops:103.75, batch-reuse:1
@ 985 train 5.9529 , allloss: 8.1960, dt: 1330.86ms, fracRes: 0.5555, norm(attn): 0.0942, norm(output): 0.9664, norm(x): 0.9145, norm(y): 1.0158, norm:17.8580, tok/sec: 98486.86, flops:103.37, batch-reuse:1
@ 986 train 6.0250 , allloss: 8.5379, dt: 1263.28ms, fracRes: 0.5547, norm(attn): 0.0952, norm(output): 0.9663, norm(x): 0.9153, norm(y): 1.0161, norm:24.0973, tok/sec: 103755.62, flops:108.91, batch-reuse:1
@ 987 train 5.9165 , allloss: 8.1904, dt: 1279.84ms, fracRes: 0.5525, norm(attn): 0.0947, norm(output): 0.9663, norm(x): 0.9143, norm(y): 1.0160, norm:17.8338, tok/sec: 102412.99, flops:107.50, batch-reuse:1
@ 988 train 6.0561 , allloss: 8.4497, dt: 1306.43ms, fracRes: 0.5526, norm(attn): 0.0918, norm(output): 0.9662, norm(x): 0.9128, norm(y): 1.0165, norm:19.4851, tok/sec: 100328.35, flops:105.31, batch-reuse:1
@ 989 train 6.0645 , allloss: 8.4089, dt: 1271.81ms, fracRes: 0.5590, norm(attn): 0.0918, norm(output): 0.9661, norm(x): 0.9101, norm(y): 1.0164, norm:13.5974, tok/sec: 103059.43, flops:108.17, batch-reuse:1
@ 990 train 5.9474 , allloss: 8.2925, dt: 1300.66ms, fracRes: 0.5646, norm(attn): 0.0928, norm(output): 0.9661, norm(x): 0.9076, norm(y): 1.0165, norm:15.0418, tok/sec: 100773.72, flops:105.78, batch-reuse:1
@ 991 train 5.9405 , allloss: 8.1792, dt: 1337.52ms, fracRes: 0.5678, norm(attn): 0.0898, norm(output): 0.9661, norm(x): 0.9109, norm(y): 1.0162, norm:16.2504, tok/sec: 97995.99, flops:102.86, batch-reuse:1
@ 992 train 6.0317 , allloss: 8.3364, dt: 1314.57ms, fracRes: 0.5760, norm(attn): 0.0879, norm(output): 0.9661, norm(x): 0.9117, norm(y): 1.0160, norm:21.5433, tok/sec: 99706.92, flops:104.66, batch-reuse:1
@ 993 train 5.8891 , allloss: 8.2667, dt: 1312.87ms, fracRes: 0.5890, norm(attn): 0.0859, norm(output): 0.9661, norm(x): 0.9115, norm(y): 1.0159, norm:22.5810, tok/sec: 99836.42, flops:104.79, batch-reuse:1
@ 994 train 5.9741 , allloss: 8.1951, dt: 1337.15ms, fracRes: 0.6005, norm(attn): 0.0889, norm(output): 0.9660, norm(x): 0.9094, norm(y): 1.0160, norm:20.6181, tok/sec: 98023.66, flops:102.89, batch-reuse:1
@ 995 train 5.9278 , allloss: 8.2095, dt: 1332.16ms, fracRes: 0.6055, norm(attn): 0.0918, norm(output): 0.9660, norm(x): 0.9087, norm(y): 1.0162, norm:19.3878, tok/sec: 98390.74, flops:103.27, batch-reuse:1
@ 996 train 5.8329 , allloss: 8.0561, dt: 1301.52ms, fracRes: 0.6045, norm(attn): 0.0938, norm(output): 0.9659, norm(x): 0.9083, norm(y): 1.0164, norm:17.6100, tok/sec: 100706.95, flops:105.71, batch-reuse:1
@ 997 train 5.9029 , allloss: 8.1617, dt: 1307.33ms, fracRes: 0.6054, norm(attn): 0.0908, norm(output): 0.9659, norm(x): 0.9073, norm(y): 1.0164, norm:19.1133, tok/sec: 100259.35, flops:105.24, batch-reuse:1
@ 998 train 6.0789 , allloss: 8.2595, dt: 1319.67ms, fracRes: 0.6057, norm(attn): 0.0908, norm(output): 0.9659, norm(x): 0.9068, norm(y): 1.0165, norm:16.7817, tok/sec: 99322.09, flops:104.25, batch-reuse:1
@ 999 train 5.9019 , allloss: 8.2315, dt: 1327.30ms, fracRes: 0.5911, norm(attn): 0.0933, norm(output): 0.9659, norm(x): 0.9072, norm(y): 1.0166, norm:19.9851, tok/sec: 98750.54, flops:103.65, batch-reuse:1
@ 1000 train 5.9514 , allloss: 8.2251, dt: 1277.91ms, fracRes: 0.5819, norm(attn): 0.0938, norm(output): 0.9658, norm(x): 0.9089, norm(y): 1.0166, norm:16.5524, tok/sec: 102567.19, flops:107.66, batch-reuse:1
@ 1001 train 6.0018 , allloss: 8.3373, dt: 1297.33ms, fracRes: 0.5777, norm(attn): 0.0898, norm(output): 0.9658, norm(x): 0.9116, norm(y): 1.0162, norm:18.0573, tok/sec: 101031.94, flops:106.05, batch-reuse:1
@ 1002 train 5.8739 , allloss: 8.1063, dt: 1291.92ms, fracRes: 0.5773, norm(attn): 0.0933, norm(output): 0.9658, norm(x): 0.9108, norm(y): 1.0162, norm:15.2373, tok/sec: 101455.13, flops:106.49, batch-reuse:1
@ 1003 train 6.0069 , allloss: 8.2630, dt: 1291.32ms, fracRes: 0.5731, norm(attn): 0.0938, norm(output): 0.9658, norm(x): 0.9117, norm(y): 1.0165, norm:13.9330, tok/sec: 101502.09, flops:106.54, batch-reuse:1
@ 1004 train 5.8488 , allloss: 8.0424, dt: 1315.35ms, fracRes: 0.5747, norm(attn): 0.0957, norm(output): 0.9657, norm(x): 0.9095, norm(y): 1.0166, norm:14.1976, tok/sec: 99647.85, flops:104.59, batch-reuse:1
@ 1005 train 5.9646 , allloss: 8.2465, dt: 1339.08ms, fracRes: 0.5800, norm(attn): 0.0938, norm(output): 0.9658, norm(x): 0.9076, norm(y): 1.0163, norm:15.5307, tok/sec: 97881.81, flops:102.74, batch-reuse:1
@ 1006 train 5.9485 , allloss: 8.2585, dt: 1336.11ms, fracRes: 0.5944, norm(attn): 0.0898, norm(output): 0.9656, norm(x): 0.9069, norm(y): 1.0167, norm:19.4876, tok/sec: 98099.73, flops:102.97, batch-reuse:1
@ 1007 train 5.9231 , allloss: 8.1354, dt: 1294.77ms, fracRes: 0.6017, norm(attn): 0.0879, norm(output): 0.9656, norm(x): 0.9053, norm(y): 1.0165, norm:17.5337, tok/sec: 101231.54, flops:106.26, batch-reuse:1
@ 1008 train 5.9280 , allloss: 8.2026, dt: 1295.86ms, fracRes: 0.6108, norm(attn): 0.0894, norm(output): 0.9655, norm(x): 0.9061, norm(y): 1.0168, norm:16.9269, tok/sec: 101146.65, flops:106.17, batch-reuse:1
@ 1009 train 5.9555 , allloss: 8.2474, dt: 1286.09ms, fracRes: 0.6079, norm(attn): 0.0923, norm(output): 0.9656, norm(x): 0.9079, norm(y): 1.0165, norm:18.3572, tok/sec: 101915.10, flops:106.97, batch-reuse:1
@ 1010 train 6.0340 , allloss: 8.3217, dt: 1297.84ms, fracRes: 0.5973, norm(attn): 0.0952, norm(output): 0.9655, norm(x): 0.9065, norm(y): 1.0168, norm:14.7348, tok/sec: 100992.13, flops:106.00, batch-reuse:1
@ 1011 train 5.9125 , allloss: 8.2739, dt: 1300.10ms, fracRes: 0.6059, norm(attn): 0.0933, norm(output): 0.9655, norm(x): 0.9056, norm(y): 1.0166, norm:12.3932, tok/sec: 100817.13, flops:105.82, batch-reuse:1
@ 1012 train 5.9887 , allloss: 8.4370, dt: 1296.31ms, fracRes: 0.6179, norm(attn): 0.0884, norm(output): 0.9654, norm(x): 0.9058, norm(y): 1.0163, norm:13.3085, tok/sec: 101111.86, flops:106.13, batch-reuse:1
@ 1013 train 5.9731 , allloss: 8.2603, dt: 1290.91ms, fracRes: 0.6202, norm(attn): 0.0894, norm(output): 0.9654, norm(x): 0.9045, norm(y): 1.0164, norm:8.7434, tok/sec: 101534.56, flops:106.57, batch-reuse:1
@ 1014 train 5.9012 , allloss: 8.2368, dt: 1287.25ms, fracRes: 0.6059, norm(attn): 0.0947, norm(output): 0.9654, norm(x): 0.9003, norm(y): 1.0166, norm:11.0759, tok/sec: 101822.94, flops:106.88, batch-reuse:1
@ 1015 train 5.9915 , allloss: 8.3333, dt: 1312.06ms, fracRes: 0.6173, norm(attn): 0.0972, norm(output): 0.9653, norm(x): 0.8974, norm(y): 1.0170, norm:12.9084, tok/sec: 99897.77, flops:104.86, batch-reuse:1
@ 1016 train 6.0506 , allloss: 8.2995, dt: 1288.55ms, fracRes: 0.6087, norm(attn): 0.0962, norm(output): 0.9652, norm(x): 0.8973, norm(y): 1.0170, norm:14.6401, tok/sec: 101720.66, flops:106.77, batch-reuse:1
@ 1017 train 5.8973 , allloss: 8.1754, dt: 1296.98ms, fracRes: 0.6154, norm(attn): 0.0938, norm(output): 0.9653, norm(x): 0.8988, norm(y): 1.0167, norm:17.9466, tok/sec: 101059.19, flops:106.07, batch-reuse:1
@ 1018 train 5.9865 , allloss: 8.2152, dt: 1320.42ms, fracRes: 0.6104, norm(attn): 0.0889, norm(output): 0.9652, norm(x): 0.9045, norm(y): 1.0165, norm:16.5939, tok/sec: 99265.49, flops:104.19, batch-reuse:1
@ 1019 train 5.9720 , allloss: 8.1925, dt: 1289.56ms, fracRes: 0.6223, norm(attn): 0.0869, norm(output): 0.9652, norm(x): 0.9074, norm(y): 1.0162, norm:15.3947, tok/sec: 101641.13, flops:106.69, batch-reuse:1
@ 1020 train 5.8891 , allloss: 8.0665, dt: 1291.09ms, fracRes: 0.6321, norm(attn): 0.0889, norm(output): 0.9651, norm(x): 0.9076, norm(y): 1.0165, norm:10.2234, tok/sec: 101520.38, flops:106.56, batch-reuse:1
@ 1021 train 5.8755 , allloss: 8.0536, dt: 1308.81ms, fracRes: 0.6347, norm(attn): 0.0908, norm(output): 0.9651, norm(x): 0.9062, norm(y): 1.0167, norm:12.0166, tok/sec: 100146.10, flops:105.12, batch-reuse:1
@ 1022 train 5.8070 , allloss: 7.9455, dt: 1298.91ms, fracRes: 0.6342, norm(attn): 0.0942, norm(output): 0.9650, norm(x): 0.9048, norm(y): 1.0173, norm:14.7222, tok/sec: 100909.53, flops:105.92, batch-reuse:1
@ 1023 train 5.8589 , allloss: 8.1090, dt: 1313.98ms, fracRes: 0.6328, norm(attn): 0.0947, norm(output): 0.9650, norm(x): 0.9041, norm(y): 1.0173, norm:19.3413, tok/sec: 99751.85, flops:104.70, batch-reuse:1
@ 1024 train 5.8365 , allloss: 8.0186, dt: 1289.23ms, fracRes: 0.6315, norm(attn): 0.0947, norm(output): 0.9649, norm(x): 0.9027, norm(y): 1.0178, norm:18.9538, tok/sec: 101666.77, flops:106.71, batch-reuse:1
@ 1025 train 5.9196 , allloss: 8.1286, dt: 1285.56ms, fracRes: 0.6307, norm(attn): 0.0942, norm(output): 0.9649, norm(x): 0.9017, norm(y): 1.0176, norm:18.9877, tok/sec: 101957.43, flops:107.02, batch-reuse:1
@ 1026 train 5.9306 , allloss: 8.0828, dt: 1286.67ms, fracRes: 0.6310, norm(attn): 0.0942, norm(output): 0.9648, norm(x): 0.9006, norm(y): 1.0183, norm:17.3853, tok/sec: 101869.45, flops:106.93, batch-reuse:1
@ 1027 train 5.9152 , allloss: 8.0952, dt: 1291.57ms, fracRes: 0.6313, norm(attn): 0.0938, norm(output): 0.9648, norm(x): 0.9005, norm(y): 1.0176, norm:16.0939, tok/sec: 101483.07, flops:106.52, batch-reuse:1
@ 1028 train 5.8391 , allloss: 7.9387, dt: 1323.42ms, fracRes: 0.6329, norm(attn): 0.0928, norm(output): 0.9647, norm(x): 0.9001, norm(y): 1.0182, norm:14.3868, tok/sec: 99040.36, flops:103.96, batch-reuse:1
@ 1029 train 5.8539 , allloss: 7.9160, dt: 1279.24ms, fracRes: 0.6335, norm(attn): 0.0908, norm(output): 0.9648, norm(x): 0.9024, norm(y): 1.0175, norm:13.1847, tok/sec: 102460.62, flops:107.55, batch-reuse:1
@ 1030 train 5.8773 , allloss: 7.9826, dt: 1302.58ms, fracRes: 0.6350, norm(attn): 0.0908, norm(output): 0.9647, norm(x): 0.9046, norm(y): 1.0176, norm:15.0242, tok/sec: 100625.16, flops:105.62, batch-reuse:1
@ 1031 train 5.9165 , allloss: 7.9914, dt: 1287.98ms, fracRes: 0.6334, norm(attn): 0.0923, norm(output): 0.9647, norm(x): 0.9048, norm(y): 1.0175, norm:16.5723, tok/sec: 101765.55, flops:106.82, batch-reuse:1
@ 1032 train 5.8290 , allloss: 7.8813, dt: 1273.71ms, fracRes: 0.6342, norm(attn): 0.0938, norm(output): 0.9647, norm(x): 0.9039, norm(y): 1.0178, norm:18.8920, tok/sec: 102905.51, flops:108.01, batch-reuse:1
@ 1033 train 5.8547 , allloss: 7.8676, dt: 1328.53ms, fracRes: 0.6328, norm(attn): 0.0918, norm(output): 0.9647, norm(x): 0.9044, norm(y): 1.0177, norm:17.2881, tok/sec: 98659.47, flops:103.56, batch-reuse:1
@ 1034 train 5.8091 , allloss: 7.8309, dt: 1308.86ms, fracRes: 0.6320, norm(attn): 0.0957, norm(output): 0.9646, norm(x): 0.9029, norm(y): 1.0179, norm:16.9360, tok/sec: 100142.12, flops:105.11, batch-reuse:1
@ 1035 train 5.8562 , allloss: 7.8034, dt: 1300.92ms, fracRes: 0.6325, norm(attn): 0.0938, norm(output): 0.9646, norm(x): 0.9013, norm(y): 1.0182, norm:13.5567, tok/sec: 100753.59, flops:105.75, batch-reuse:1
@ 1036 train 5.9091 , allloss: 7.9994, dt: 1299.92ms, fracRes: 0.6328, norm(attn): 0.0947, norm(output): 0.9646, norm(x): 0.9000, norm(y): 1.0181, norm:17.1012, tok/sec: 100830.83, flops:105.84, batch-reuse:1
@ 1037 train 5.8794 , allloss: 7.8137, dt: 1310.69ms, fracRes: 0.6332, norm(attn): 0.0923, norm(output): 0.9646, norm(x): 0.9003, norm(y): 1.0180, norm:13.6388, tok/sec: 100002.24, flops:104.97, batch-reuse:1
@ 1038 train 5.7996 , allloss: 7.8497, dt: 1305.95ms, fracRes: 0.6330, norm(attn): 0.0947, norm(output): 0.9645, norm(x): 0.8996, norm(y): 1.0183, norm:15.7080, tok/sec: 100365.48, flops:105.35, batch-reuse:1
@ 1039 train 5.8175 , allloss: 7.7399, dt: 1292.29ms, fracRes: 0.6336, norm(attn): 0.0957, norm(output): 0.9645, norm(x): 0.8989, norm(y): 1.0181, norm:12.8387, tok/sec: 101426.53, flops:106.46, batch-reuse:1
@ 1040 train 5.7614 , allloss: 7.7223, dt: 1296.40ms, fracRes: 0.6326, norm(attn): 0.0952, norm(output): 0.9645, norm(x): 0.8993, norm(y): 1.0181, norm:15.7439, tok/sec: 101104.29, flops:106.12, batch-reuse:1
@ 1041 train 5.8141 , allloss: 7.7384, dt: 1295.60ms, fracRes: 0.6318, norm(attn): 0.0947, norm(output): 0.9645, norm(x): 0.9015, norm(y): 1.0181, norm:15.6808, tok/sec: 101166.90, flops:106.19, batch-reuse:1
@ 1042 train 5.7817 , allloss: 7.7072, dt: 1310.42ms, fracRes: 0.6319, norm(attn): 0.0942, norm(output): 0.9644, norm(x): 0.9016, norm(y): 1.0182, norm:17.0797, tok/sec: 100023.00, flops:104.99, batch-reuse:1
@ 1043 train 5.8704 , allloss: 7.8456, dt: 1296.00ms, fracRes: 0.6325, norm(attn): 0.0918, norm(output): 0.9644, norm(x): 0.9029, norm(y): 1.0178, norm:16.5039, tok/sec: 101135.82, flops:106.16, batch-reuse:1
@ 1044 train 5.8656 , allloss: 7.8377, dt: 1290.83ms, fracRes: 0.6331, norm(attn): 0.0913, norm(output): 0.9644, norm(x): 0.9023, norm(y): 1.0180, norm:15.3636, tok/sec: 101540.76, flops:106.58, batch-reuse:1
@ 1045 train 5.8750 , allloss: 7.8137, dt: 1303.10ms, fracRes: 0.6323, norm(attn): 0.0942, norm(output): 0.9644, norm(x): 0.9011, norm(y): 1.0182, norm:15.2707, tok/sec: 100584.97, flops:105.58, batch-reuse:1
@ 1046 train 5.8223 , allloss: 7.7705, dt: 1310.59ms, fracRes: 0.6313, norm(attn): 0.0972, norm(output): 0.9644, norm(x): 0.8998, norm(y): 1.0184, norm:14.3627, tok/sec: 100010.24, flops:104.97, batch-reuse:1
@ 1047 train 5.7799 , allloss: 7.6704, dt: 1302.45ms, fracRes: 0.6331, norm(attn): 0.0981, norm(output): 0.9643, norm(x): 0.8990, norm(y): 1.0183, norm:14.1941, tok/sec: 100634.57, flops:105.63, batch-reuse:1
@ 1048 train 5.8013 , allloss: 7.7152, dt: 1289.34ms, fracRes: 0.6340, norm(attn): 0.0933, norm(output): 0.9643, norm(x): 0.9006, norm(y): 1.0179, norm:15.9768, tok/sec: 101658.36, flops:106.70, batch-reuse:1
@ 1049 train 5.7633 , allloss: 7.6259, dt: 1293.36ms, fracRes: 0.6341, norm(attn): 0.0918, norm(output): 0.9643, norm(x): 0.9012, norm(y): 1.0179, norm:15.8459, tok/sec: 101342.17, flops:106.37, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0320,     0.9688,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0024, -0.0132,  0.0044,  ...,  0.0052,  0.0218,  0.0313],
        [ 0.0039, -0.0046, -0.0203,  ..., -0.0604, -0.0162,  0.0302],
        [-0.0350, -0.0384,  0.0475,  ...,  0.0159,  0.0132,  0.0437],
        ...,
        [ 0.0386,  0.0208,  0.0336,  ...,  0.0140,  0.0330,  0.0338],
        [-0.0187,  0.0030,  0.0270,  ..., -0.0362,  0.0262,  0.0209],
        [ 0.0275,  0.0279,  0.0415,  ...,  0.0201,  0.0307, -0.0085]], device='cuda:0', requires_grad=True)
K: tensor([ 1.8359, -1.1172,  0.3281,  0.6914, -2.0312,  1.0781, -0.8594,  2.3281, -2.4688, -1.0625, -1.5000, -1.5859,  2.2188, -1.9609,  0.6055,  1.1719, -1.3203, -1.2578,  3.2031, -2.5938,  2.4375,  1.9531, -3.1094, -1.4219, -0.1406, -1.9141,  1.0781, -1.6562, -1.7656, -0.6094,  2.5781, -0.3516,
         0.6836,  2.1094, -0.3340, -1.5000, -0.0601,  2.1094, -0.7969, -2.4531,  2.0781, -0.7695, -0.1982, -0.9727, -0.7852, -1.2344, -0.7422,  0.9531,  0.3770,  1.4844,  1.1875, -1.4219, -2.1250,  2.1406,  1.5000, -1.8203,  1.5703,  2.3438, -0.5078, -0.1426, -0.7969, -0.3750, -0.3770,  0.5234],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0375,  0.0262, -0.0071,  ..., -0.0290,  0.0151, -0.0151],
        [-0.0161,  0.0314,  0.0003,  ...,  0.0304,  0.0478,  0.0228],
        [-0.0205,  0.0213, -0.0221,  ..., -0.0628, -0.0314,  0.0132],
        ...,
        [ 0.0434,  0.0304, -0.0232,  ..., -0.0126, -0.0195, -0.0268],
        [-0.0018, -0.0031, -0.0272,  ...,  0.0149,  0.0018,  0.0397],
        [ 0.0126,  0.0176, -0.0013,  ...,  0.0005, -0.0242, -0.0295]], device='cuda:0', requires_grad=True)
Q: tensor([-2.4844,  3.2500, -0.7695, -2.6562,  3.5938, -1.4766,  1.9141, -4.5625,  2.2656,  0.1396,  2.6250,  4.5625, -4.0625,  2.8125, -0.0154, -1.2266,  0.5820,  2.5781, -5.5625,  6.9375, -3.0625, -1.4766,  3.6562,  2.0781,  1.4844, -0.0496,  0.3594,  3.5000,  2.9688,  0.6680, -5.1250,  0.7266,
        -1.3828, -3.6875,  2.9688,  3.1875, -0.9297, -2.0625,  0.9062,  3.1094, -2.5625,  0.8516, -0.8164,  1.2500,  3.1562,  1.9688,  0.2520, -1.0391,  1.5938, -1.5469, -1.5391,  1.6953,  4.2812, -4.5000, -3.5000,  1.8125, -3.3438, -2.0156,  1.5781,  2.8281,  2.0781,  0.5664,  2.1562,  0.8672],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000,   3.4062,  18.2500,  31.1250,  39.7500,  24.6250,  36.0000,  31.0000,  31.1250,  32.2500,  28.6250,  33.2500,  30.6250,  30.1250,  17.8750],
        [  0.0000, -11.1250, -19.8750, -24.6250, -25.7500, -19.5000, -21.0000, -27.1250, -21.8750, -25.7500, -17.7500, -28.6250, -23.8750, -21.5000, -15.8750],
        [  0.0000, -16.1250, -34.2500, -51.0000, -52.7500, -38.0000, -45.0000, -54.0000, -44.0000, -51.5000, -35.5000, -56.7500, -48.7500, -42.5000, -30.5000],
        [  0.0000, -18.8750, -37.7500, -56.2500, -58.2500, -44.2500, -52.2500, -60.2500, -47.5000, -55.2500, -37.7500, -63.0000, -55.5000, -46.5000, -34.2500],
        [  0.0000, -17.5000, -34.5000, -51.0000, -55.5000, -41.0000, -50.0000, -55.5000, -45.0000, -50.7500, -37.0000, -56.5000, -51.7500, -43.7500, -30.5000],
        [  0.0000, -15.5625, -30.2500, -43.2500, -46.0000, -35.0000, -41.5000, -48.0000, -37.2500, -43.7500, -30.5000, -50.0000, -44.7500, -37.2500, -26.3750],
        [  0.0000, -21.0000, -40.2500, -56.2500, -62.5000, -45.0000, -55.2500, -63.7500, -52.5000, -59.2500, -43.5000, -65.0000, -58.2500, -51.0000, -35.2500],
        [  0.0000, -18.6250, -34.2500, -51.7500, -54.5000, -40.7500, -50.5000, -56.7500, -45.2500, -52.0000, -37.0000, -57.7500, -51.5000, -43.5000, -30.6250],
        [  0.0000, -20.3750, -41.2500, -60.0000, -64.5000, -47.5000, -56.2500, -65.0000, -54.0000, -62.0000, -43.7500, -68.0000, -59.5000, -51.7500, -36.7500],
        [  0.0000, -14.3750, -30.3750, -44.5000, -45.0000, -34.2500, -41.7500, -48.2500, -37.7500, -44.2500, -30.8750, -50.2500, -43.2500, -36.0000, -27.6250],
        [  0.0000, -18.8750, -38.0000, -54.5000, -58.0000, -44.0000, -49.7500, -60.5000, -50.5000, -57.5000, -40.5000, -63.7500, -54.2500, -48.7500, -34.5000],
        [  0.0000, -20.1250, -36.7500, -52.0000, -56.7500, -40.7500, -51.0000, -58.2500, -47.2500, -54.0000, -39.2500, -59.7500, -54.2500, -46.0000, -31.8750],
        [  0.0000, -19.1250, -34.0000, -50.5000, -54.7500, -40.0000, -50.7500, -56.2500, -45.0000, -51.5000, -38.0000, -57.7500, -52.0000, -44.2500, -30.8750],
        [  0.0000, -15.8750, -33.2500, -46.7500, -51.5000, -37.7500, -44.2500, -51.5000, -43.7500, -49.0000, -35.7500, -54.5000, -47.5000, -43.0000, -30.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5500],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7852,     0.1191,     0.0947,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0005,     0.0065,     0.9922,     0.0006,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7188,     0.0004,     0.0261,     0.1943,     0.0618,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7773,     0.0000,     0.0029,     0.1836,     0.0219,     0.0143,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0005,     0.5625,     0.4258,     0.0010,     0.0025,     0.0061,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2734,     0.0000,     0.0042,     0.2734,     0.0649,     0.1035,     0.2793,     0.0010,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2656,     0.0000,     0.0933,     0.2773,     0.0177,     0.0062,     0.3398,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2656,     0.0000,     0.0000,     0.0244,     0.0004,     0.0008,     0.7070,     0.0000,     0.0006,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3086,     0.0000,     0.0001,     0.0591,     0.0017,     0.0009,     0.6250,     0.0000,     0.0000,     0.0000,     0.0050,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2461,     0.0002,     0.0166,     0.1973,     0.0240,     0.0757,     0.3809,     0.0009,     0.0082,     0.0008,     0.0430,     0.0061,     0.0000,     0.0000,     0.0000],
        [    0.2100,     0.0000,     0.0000,     0.0530,     0.0067,     0.0056,     0.5977,     0.0000,     0.0030,     0.0000,     0.1230,     0.0002,     0.0000,     0.0000,     0.0000],
        [    0.0479,     0.0001,     0.8672,     0.0449,     0.0050,     0.0025,     0.0320,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000],
        [    0.0337,     0.0016,     0.9062,     0.0107,     0.0067,     0.0039,     0.0364,     0.0004,     0.0000,     0.0001,     0.0001,     0.0005,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0131,  0.0344,  0.0124,  ...,  0.0008, -0.0017,  0.0249],
        [ 0.0011,  0.0066,  0.0815,  ...,  0.0153,  0.0107,  0.0663],
        [ 0.0050,  0.0331, -0.0251,  ..., -0.0340,  0.0002, -0.0106],
        ...,
        [ 0.0267, -0.0159,  0.0163,  ...,  0.0434,  0.0157, -0.0079],
        [-0.0037,  0.0368, -0.0193,  ..., -0.0370, -0.0081,  0.0062],
        [ 0.0031, -0.0137,  0.0240,  ...,  0.0064, -0.0043,  0.0110]], device='cuda:0', requires_grad=True)
K: tensor([-2.4219, -1.9062, -1.9688,  0.8867, -1.7188,  0.7344, -1.2734, -0.3066, -1.5625, -0.9531,  1.2266, -1.5703,  0.3926,  0.7031, -1.8828,  0.5547, -0.3496,  0.5938, -0.9180, -1.4531,  1.8516,  0.7656, -1.7109,  1.2188, -0.5938,  1.8828, -0.4062,  0.7539,  1.0000, -0.3281, -1.1719,  0.2559,
        -1.1250,  1.0938, -0.9023, -1.3359, -1.2422,  0.4629,  1.1328, -0.4941, -0.4395,  2.3750, -1.0234,  1.4062, -2.2344,  0.6523,  0.2461, -1.0078,  0.3574,  1.0781, -0.4160,  0.8711,  0.2188, -0.4844, -0.8125, -1.9141, -1.2109,  1.3750,  0.0061, -1.6875, -0.4160, -0.9609,  1.1406, -0.3008],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0139,  0.0228, -0.0068,  ..., -0.0114,  0.0352, -0.0269],
        [ 0.0050, -0.0065, -0.0050,  ..., -0.0272, -0.0069,  0.0270],
        [-0.0329, -0.0032,  0.0388,  ..., -0.0132,  0.0323,  0.0152],
        ...,
        [-0.0241,  0.0076, -0.0346,  ..., -0.0094, -0.0102,  0.0448],
        [ 0.0074, -0.0066,  0.0252,  ...,  0.0278,  0.0336, -0.0122],
        [-0.0402,  0.0024,  0.0128,  ...,  0.0003,  0.0099,  0.0232]], device='cuda:0', requires_grad=True)
Q: tensor([ 1.2344,  2.3438,  2.0469, -1.6641,  2.6562, -1.5234,  1.0234, -1.7031,  0.3223,  1.0078, -1.4922,  1.0938, -1.6953,  1.7578,  1.2422, -1.3828,  1.0625, -1.6953,  1.5234,  2.5938, -2.0156, -1.4141,  1.4453,  0.8750,  1.6719,  0.1250, -1.9141, -1.3281, -1.0078,  0.2334,  1.1953,  1.7344,
         0.9219, -0.3008,  1.5625,  0.5781,  3.0000, -0.6445, -1.1953, -1.0391,  0.3633, -1.4844,  0.1621, -1.1016,  1.7891, -1.0703, -0.6133, -1.5078, -0.0850, -1.6172,  0.1216,  1.2031, -0.9727,  0.0869,  0.9375,  1.3828,  1.4844, -1.4766, -1.3281,  0.4043,  1.2266,  1.0859, -1.8047, -0.3496],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,    -21.5000,    -13.3125,     -0.9609,     -2.1875,     -3.0625,      1.0625,    -11.3750,      0.3906,     -6.2500,      4.3125,     -5.7812,    -12.5625,     -2.2656,     -1.6875],
        [     0.0000,     -1.8906,     -2.1094,     -0.4355,     -0.1562,      0.3867,      0.2539,      0.8320,      2.8906,      1.8047,      2.0312,      1.5156,      0.9648,      2.5000,      2.6406],
        [     0.0000,      2.5469,      7.5625,      0.1289,      0.3008,      0.2383,     -0.2598,      1.0078,     -7.2812,     -2.1250,     -5.3125,     -1.0781,     -1.4375,     -9.8125,     -5.8438],
        [     0.0000,     -7.4062,     -3.3125,     -1.3047,     -2.4531,     -2.5625,     -0.0151,     -6.4375,     -5.0312,     -6.3125,     -2.4375,     -4.4688,     -8.1875,     -7.4688,     -7.0312],
        [     0.0000,    -10.1875,     -5.5938,     -1.4375,     -3.5625,     -3.9844,      0.2480,     -9.5000,     -5.2500,     -8.3125,     -2.0312,     -5.9688,    -10.4375,     -7.6250,     -6.3750],
        [     0.0000,      7.0312,      6.7500,      0.6875,      1.6328,      2.5156,     -1.3984,      6.8438,     -0.2832,      4.8125,     -1.9844,      3.6250,      6.6562,      1.3516,      1.7891],
        [     0.0000,     -8.8750,     -4.1875,     -0.0040,     -1.4453,     -0.9727,      0.0233,     -5.5625,     -1.7422,     -3.8281,     -0.0055,     -2.8438,     -6.9062,     -3.8906,     -2.1406],
        [     0.0000,     -9.0625,     -1.0469,      0.0479,     -2.7031,     -3.7656,      0.2520,     -9.1250,     -9.6250,    -10.0625,     -5.6562,     -6.6562,    -11.6875,    -13.1875,    -10.4375],
        [     0.0000,    -19.0000,    -12.6250,     -2.3906,     -6.4375,     -5.8125,      0.9844,    -17.1250,     -6.1562,    -14.0625,     -1.7031,    -11.0625,    -18.7500,    -11.3750,    -10.1250],
        [     0.0000,    -12.3750,     -7.9062,     -1.6562,     -5.1875,     -5.8750,      0.7070,    -15.3750,     -9.5625,    -13.3750,     -4.1250,    -10.5000,    -17.3750,    -13.7500,    -12.5000],
        [     0.0000,     -7.1562,     -2.7031,     -0.2217,     -2.3281,     -1.1797,      0.4336,     -5.6250,     -3.4062,     -5.7812,     -1.7500,     -3.7031,     -6.6250,     -5.7812,     -3.9531],
        [     0.0000,    -13.6250,     -8.3750,     -1.3750,     -3.4531,     -3.6406,      1.0469,    -10.8750,     -4.2500,     -8.6250,     -0.5352,     -7.0000,    -13.0000,     -8.0000,     -5.9062],
        [     0.0000,     -6.1562,      2.8906,     -0.0640,     -2.2656,     -2.9531,     -0.4023,     -7.6562,    -12.6875,    -10.5000,     -7.7188,     -6.5938,    -11.3750,    -16.7500,    -12.3750],
        [     0.0000,     -3.0781,      3.2969,     -1.1406,     -1.6094,     -2.1562,      0.0752,     -4.4375,     -8.9375,     -5.8438,     -5.9375,     -4.2188,     -7.7500,    -12.3750,     -9.0625]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [1.0000],
        [0.8434],
        [0.0860],
        [0.4345],
        [0.7656],
        [0.0129],
        [0.2175],
        [0.1299],
        [0.1053],
        [0.1343],
        [0.1766],
        [0.1104],
        [0.1072],
        [0.1116]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0367, -0.0076,  0.0116,  ...,  0.0127, -0.0802, -0.0241],
        [-0.0474, -0.0303,  0.0101,  ...,  0.0304, -0.0732, -0.0309],
        [ 0.0243,  0.0143, -0.0137,  ...,  0.0445,  0.0179, -0.0140],
        ...,
        [-0.0087, -0.0234, -0.0082,  ...,  0.0605, -0.0345, -0.0120],
        [-0.0229, -0.0189,  0.0217,  ...,  0.0132,  0.0109,  0.0020],
        [ 0.0137, -0.0420, -0.0301,  ...,  0.0621, -0.0341, -0.0682]], device='cuda:0', requires_grad=True)
K: tensor([ 3.5781, -3.9844, -3.9844, -4.3125,  6.0625, -4.0000,  4.4062,  2.6562,  2.1406, -4.9688,  1.5469, -3.9531, -4.4375,  4.1875,  3.6406, -3.0000,  1.9141,  3.9219, -2.7969, -5.4062,  5.2188,  5.7500,  3.2344, -3.0625, -3.5312,  5.7188, -3.1094, -5.9375, -2.9531,  0.9062, -3.9844,  2.5469,
         2.7188, -2.1719, -2.1562,  0.4941,  0.4082, -3.7500,  3.3125, -3.7656, -3.7812,  2.1406,  2.2500, -2.2031, -3.5156,  3.8438, -3.1406,  2.7969, -6.0625, -3.4531, -3.6562,  2.6406,  2.9062,  3.3750,  1.1641, -5.5312, -2.7812,  3.2188, -1.1953, -1.6562,  1.9766,  3.4219, -2.1875,  1.5781],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0028,  0.0162,  0.0169,  ...,  0.0068,  0.0341,  0.0525],
        [ 0.0411,  0.0284, -0.0177,  ..., -0.0343,  0.0171,  0.0179],
        [-0.0098, -0.0203,  0.0023,  ..., -0.0212,  0.0668,  0.0413],
        ...,
        [-0.0188, -0.0031, -0.0588,  ..., -0.0005,  0.0589,  0.0153],
        [ 0.0254,  0.0012, -0.0291,  ...,  0.0272, -0.0361, -0.0246],
        [-0.0135,  0.0079,  0.0018,  ..., -0.0195,  0.0023,  0.0613]], device='cuda:0', requires_grad=True)
Q: tensor([-2.1250,  4.4375,  5.6875,  4.0938, -3.0938,  4.0312, -3.7656, -4.7500, -2.6875,  4.9688, -2.0625,  5.1875,  4.1875, -4.1250, -4.1250,  5.2812, -1.0078, -5.1562,  2.7812,  7.0625, -4.8750, -3.7344, -3.8281,  1.9922,  4.1875, -5.7812,  2.8438,  3.7812,  5.3125, -1.7656,  3.9688, -3.0781,
        -4.5000,  1.6875,  2.7969, -2.7188, -2.1094,  4.1875, -5.6875,  1.9766,  3.5938, -0.1973, -2.7812,  2.7188,  1.8359, -4.2500,  3.1250, -1.9219,  5.0625,  4.1250,  5.0000, -3.5469, -2.1250, -2.9688, -2.7656,  3.2969,  4.6562, -1.1328,  1.4766,  2.0312, -1.5312, -5.0312,  1.7422, -1.0000],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[   0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000],
        [   0.0000,  -42.0000,  -67.0000,  -53.5000,  -72.0000,  -55.5000,  -69.5000,  -80.0000,  -40.2500,  -57.2500,  -63.7500,  -54.7500,  -70.5000,  -44.0000,  -57.2500],
        [   0.0000,  -90.5000, -154.0000, -129.0000, -163.0000, -125.0000, -157.0000, -189.0000,  -90.0000, -136.0000, -145.0000, -128.0000, -163.0000,  -97.5000, -131.0000],
        [   0.0000,  -75.5000, -128.0000, -110.0000, -133.0000, -100.5000, -127.5000, -157.0000,  -74.5000, -115.0000, -120.0000, -109.0000, -135.0000,  -80.0000, -107.0000],
        [   0.0000, -108.0000, -174.0000, -144.0000, -186.0000, -140.0000, -177.0000, -210.0000, -106.5000, -155.0000, -165.0000, -147.0000, -184.0000, -115.0000, -146.0000],
        [   0.0000,  -83.5000, -137.0000, -112.5000, -146.0000, -112.0000, -140.0000, -165.0000,  -83.5000, -120.5000, -130.0000, -114.5000, -144.0000,  -90.0000, -116.0000],
        [   0.0000, -104.0000, -170.0000, -140.0000, -182.0000, -139.0000, -174.0000, -206.0000, -103.0000, -150.0000, -162.0000, -143.0000, -179.0000, -111.5000, -144.0000],
        [   0.0000, -116.0000, -197.0000, -166.0000, -207.0000, -158.0000, -199.0000, -241.0000, -115.5000, -175.0000, -185.0000, -166.0000, -208.0000, -124.5000, -166.0000],
        [   0.0000,  -59.5000,  -98.5000,  -80.5000, -107.5000,  -80.5000, -101.5000, -119.0000,  -62.0000,  -87.5000,  -95.0000,  -83.5000, -105.0000,  -67.0000,  -84.0000],
        [   0.0000,  -81.5000, -137.0000, -116.0000, -144.0000, -109.5000, -138.0000, -168.0000,  -81.0000, -123.0000, -129.0000, -116.5000, -145.0000,  -87.5000, -115.5000],
        [   0.0000,  -91.0000, -149.0000, -122.5000, -159.0000, -119.5000, -151.0000, -179.0000,  -90.5000, -132.0000, -142.0000, -125.5000, -157.0000,  -98.0000, -125.5000],
        [   0.0000,  -70.0000, -121.0000, -103.5000, -127.0000,  -96.5000, -122.0000, -150.0000,  -70.5000, -109.0000, -114.0000, -103.0000, -129.0000,  -76.0000, -102.5000],
        [   0.0000, -101.0000, -168.0000, -138.0000, -179.0000, -136.0000, -171.0000, -203.0000, -101.5000, -147.0000, -159.0000, -140.0000, -177.0000, -109.5000, -142.0000],
        [   0.0000,  -64.5000, -107.0000,  -88.0000, -117.0000,  -88.0000, -110.5000, -130.0000,  -67.0000,  -95.0000, -103.5000,  -90.5000, -114.0000,  -72.5000,  -91.5000],
        [   0.0000,  -68.0000, -115.5000,  -95.0000, -122.5000,  -93.5000, -118.5000, -141.0000,  -69.5000, -102.0000, -110.0000,  -97.0000, -123.0000,  -74.5000,  -99.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0485,  0.0322,  0.0339,  ...,  0.0309, -0.0049, -0.0278],
        [ 0.0114,  0.0293,  0.0304,  ...,  0.0404,  0.0099,  0.0260],
        [ 0.0433,  0.0246,  0.0081,  ...,  0.0217,  0.0449,  0.0027],
        ...,
        [-0.0312, -0.0284, -0.0286,  ..., -0.0052, -0.0237,  0.0160],
        [-0.0175, -0.0003, -0.0177,  ..., -0.0219, -0.0386, -0.0242],
        [ 0.0277,  0.0051,  0.0083,  ...,  0.0329,  0.0131,  0.0076]], device='cuda:0', requires_grad=True)
K: tensor([-1.4141, -2.1250, -3.0625, -1.1953, -2.4844, -5.0312, -2.8594,  2.6562, -1.4141, -1.0547,  1.4453,  1.3984, -1.8672, -3.8750,  3.3906,  3.0000,  2.1562, -3.4844, -1.6953,  1.5078,  2.2031, -2.6250, -2.9219,  4.3750, -1.5938,  3.5469, -1.1953, -3.0000,  1.7578, -3.3906,  1.2500, -3.2812,
        -4.5938, -1.9141,  3.2812, -3.8125, -2.5469, -2.3281,  1.9375,  3.1250, -1.8359, -1.8203,  0.0674, -3.1562,  2.8750,  3.4531, -1.9062, -2.3594, -1.5391,  2.9219,  2.1562,  3.6562,  2.1094, -3.0469, -2.0781, -1.8750,  2.7188,  1.2891, -3.0000, -5.1250, -0.9531,  3.5625,  0.8750, -1.8125],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0170,  0.0062, -0.0127,  ..., -0.0028, -0.0297, -0.0255],
        [-0.0179, -0.0156,  0.0043,  ...,  0.0022, -0.0264,  0.0040],
        [-0.0207, -0.0011, -0.0044,  ..., -0.0298,  0.0206,  0.0024],
        ...,
        [-0.0110,  0.0269, -0.0022,  ...,  0.0097,  0.0261,  0.0069],
        [-0.0358,  0.0317,  0.0009,  ...,  0.0098,  0.0045, -0.0347],
        [-0.0148, -0.0334, -0.0538,  ..., -0.0217, -0.0029,  0.0242]], device='cuda:0', requires_grad=True)
Q: tensor([ 2.2656,  1.4531,  4.0312,  1.3203,  2.1406,  4.9062,  2.5156, -3.4844,  2.2969,  0.8320, -1.4766, -1.3047,  1.9375,  3.4375, -3.1875, -2.7344, -2.3906,  3.2812,  0.7852, -1.9766, -2.3906,  2.9062,  2.9219, -3.6719,  1.8672, -2.4531,  1.2969,  3.3281, -1.7578,  3.4062, -1.3750,  3.1250,
         4.3750,  2.0781, -3.0000,  4.0312,  1.8125,  1.2656, -1.9141, -3.2344,  1.7500,  1.5547, -0.0364,  3.2656, -3.1719, -3.0312,  1.7109,  2.7344,  0.8281, -1.9141, -1.8672, -3.1875, -2.0625,  3.8281,  2.0156,  2.0000, -3.4688, -1.8594,  2.2031,  4.6250,  0.9219, -3.5156,  0.6406,  1.8906],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[   0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000],
        [   0.0000,  -22.3750,  -37.7500,  -40.7500,  -38.5000,  -27.1250,  -28.2500,  -38.2500,  -46.5000,  -60.5000,  -26.8750,  -40.7500,  -33.5000,  -50.5000,  -34.0000],
        [   0.0000,  -30.7500,  -56.0000,  -59.2500,  -53.5000,  -37.5000,  -37.7500,  -53.7500,  -65.5000,  -86.5000,  -35.5000,  -59.7500,  -46.2500,  -71.5000,  -46.5000],
        [   0.0000,  -35.0000,  -61.7500,  -69.5000,  -62.0000,  -43.7500,  -45.0000,  -63.5000,  -76.5000,  -99.0000,  -45.7500,  -69.5000,  -55.0000,  -83.0000,  -57.2500],
        [   0.0000,  -34.5000,  -60.2500,  -67.5000,  -65.0000,  -47.5000,  -49.0000,  -63.5000,  -78.0000,  -98.5000,  -48.2500,  -68.0000,  -57.2500,  -84.5000,  -58.7500],
        [   0.0000,  -25.7500,  -44.7500,  -50.2500,  -49.7500,  -38.5000,  -39.2500,  -49.7500,  -59.2500,  -72.5000,  -37.5000,  -50.2500,  -45.7500,  -64.0000,  -46.5000],
        [   0.0000,  -26.3750,  -44.2500,  -50.5000,  -50.5000,  -38.5000,  -40.7500,  -50.2500,  -59.7500,  -74.0000,  -39.0000,  -50.2500,  -46.2500,  -64.5000,  -47.5000],
        [   0.0000,  -34.5000,  -59.2500,  -66.5000,  -62.0000,  -45.5000,  -47.0000,  -64.0000,  -75.0000,  -95.5000,  -46.0000,  -66.5000,  -56.7500,  -81.5000,  -58.0000],
        [   0.0000,  -39.5000,  -69.0000,  -77.0000,  -71.5000,  -51.5000,  -53.0000,  -71.5000,  -87.5000, -111.5000,  -53.5000,  -77.5000,  -63.7500,  -95.0000,  -65.5000],
        [   0.0000,  -54.0000,  -95.0000, -104.5000,  -96.0000,  -66.5000,  -69.0000,  -95.0000, -116.5000, -154.0000,  -68.0000, -105.5000,  -82.5000, -127.0000,  -85.0000],
        [   0.0000,  -23.6250,  -38.7500,  -48.5000,  -45.5000,  -34.2500,  -36.2500,  -46.5000,  -55.7500,  -68.0000,  -40.2500,  -48.0000,  -42.2500,  -60.0000,  -45.7500],
        [   0.0000,  -35.5000,  -63.5000,  -71.0000,  -63.0000,  -44.2500,  -45.0000,  -64.0000,  -78.0000, -101.5000,  -46.0000,  -71.5000,  -55.5000,  -85.0000,  -57.7500],
        [   0.0000,  -31.0000,  -53.0000,  -60.0000,  -57.5000,  -43.2500,  -44.7500,  -58.7500,  -69.5000,  -86.5000,  -43.7500,  -60.0000,  -53.0000,  -75.0000,  -54.2500],
        [   0.0000,  -43.0000,  -75.0000,  -83.5000,  -77.5000,  -55.7500,  -57.2500,  -77.5000,  -95.0000, -121.5000,  -57.5000,  -84.0000,  -69.0000, -103.0000,  -70.5000],
        [   0.0000,  -29.6250,  -49.7500,  -59.5000,  -55.0000,  -42.0000,  -43.7500,  -57.2500,  -67.5000,  -83.0000,  -45.5000,  -59.0000,  -51.7500,  -73.0000,  -55.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0098,     0.9883,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0410,     0.7617,     0.0130,     0.0027,     0.1826,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0640,     0.5430,     0.0006,     0.0000,     0.0618,     0.3320,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0284,     0.1973,     0.0002,     0.0000,     0.0070,     0.0967,     0.6680,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0022,     0.2930,     0.0000,     0.0000,     0.0027,     0.0334,     0.6680,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0065,     0.0040,     0.0002,     0.0000,     0.0131,     0.2695,     0.7070,     0.0003,     0.0013,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0153,     0.2520,     0.0003,     0.0000,     0.0067,     0.0835,     0.6406,     0.0002,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0143,     0.1982,     0.0001,     0.0000,     0.0083,     0.0981,     0.6758,     0.0003,     0.0001,     0.0000,     0.0043,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0056,     0.0608,     0.0004,     0.0000,     0.0188,     0.0879,     0.8047,     0.0009,     0.0009,     0.0000,     0.0195,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0039,     0.2471,     0.0000,     0.0000,     0.0081,     0.0466,     0.6914,     0.0000,     0.0000,     0.0000,     0.0013,     0.0000,     0.0008,     0.0000,     0.0000],
        [    0.0095,     0.0084,     0.0002,     0.0000,     0.0121,     0.2637,     0.6875,     0.0003,     0.0010,     0.0000,     0.0093,     0.0000,     0.0063,     0.0011,     0.0000],
        [    0.0117,     0.2168,     0.0001,     0.0000,     0.0040,     0.0469,     0.4473,     0.0002,     0.0001,     0.0000,     0.0020,     0.0000,     0.0017,     0.0001,     0.2695]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0108,  0.0189,  0.0398,  ...,  0.0188, -0.0366, -0.0127],
        [ 0.0021,  0.0095,  0.0019,  ..., -0.0091,  0.0100,  0.0513],
        [ 0.0136,  0.0184, -0.0286,  ...,  0.0125,  0.0252,  0.0052],
        ...,
        [ 0.0217,  0.0170,  0.0033,  ..., -0.0393,  0.0095, -0.0341],
        [ 0.0489,  0.0047, -0.0645,  ...,  0.0180, -0.0070,  0.0347],
        [ 0.0193, -0.0079,  0.0220,  ..., -0.0354, -0.0097, -0.0176]], device='cuda:0', requires_grad=True)
K: tensor([-1.4844,  0.5273,  0.2969,  1.0391, -0.8633, -1.3906, -0.0237,  0.8711,  1.2266,  1.4297,  0.3457,  0.6680, -1.3359, -0.3828,  0.5703,  0.4785, -0.2080,  0.3887,  0.1064,  0.3164, -0.7070,  0.1045, -0.8984, -1.0859, -0.0771,  0.9766, -0.2246, -1.0234,  1.0625,  0.6133, -1.0312,  1.3750,
         2.7969, -0.0327,  0.4141,  0.4746,  0.4551, -0.6875,  0.4062,  1.5859,  0.7188, -0.7891, -1.9609,  0.0981, -1.1719,  0.0723,  0.1641, -0.3145, -2.0469,  0.5469,  0.0315,  0.7266, -0.7461,  0.8359, -0.2070, -0.4492, -1.1094, -0.5508, -0.4023,  0.5781,  0.8047, -0.5039, -2.6719, -0.0410],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0113, -0.0070, -0.0159,  ...,  0.0103,  0.0281, -0.0147],
        [-0.0059, -0.0221, -0.0078,  ..., -0.0403, -0.0410, -0.0070],
        [-0.0053, -0.0138,  0.0089,  ..., -0.0014, -0.0147, -0.0137],
        ...,
        [ 0.0209, -0.0114,  0.0076,  ..., -0.0194, -0.0266,  0.0247],
        [ 0.0002, -0.0027, -0.0231,  ...,  0.0017, -0.0200, -0.0085],
        [ 0.0125,  0.0087, -0.0422,  ...,  0.0279,  0.0439, -0.0019]], device='cuda:0', requires_grad=True)
Q: tensor([-1.0781,  0.2578,  0.8867,  0.9297,  0.1099, -1.5781,  1.4531,  1.0000, -0.1216,  0.9023, -1.6172,  0.9688, -0.7383, -1.5781,  0.6289, -1.9297, -0.5977,  0.4824, -0.8398,  1.8672,  2.1719, -0.5039, -0.8984, -0.1377,  1.8125,  1.6328,  0.1533,  0.3105, -1.8125, -0.3379, -1.3984,  0.3223,
         1.0391,  0.9805,  1.0547, -1.3672, -2.2812, -0.9414, -1.1094,  1.0703,  1.8516,  1.8047, -1.7109,  1.3828, -1.0547, -0.0239,  1.2500,  1.2422, -1.7500,  0.5508, -0.4102,  1.6406,  0.2793,  1.8125, -1.4375, -0.6133,  0.2754,  0.3086, -0.8008,  0.9531, -0.2002,  2.3750, -0.7539,  1.5312],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000,  10.7500,   1.0078,  -0.7812,  -0.9609,  -1.4062,  -0.6562,   0.7891,  -4.6875,   1.4688,  -3.3750,   0.2812,  -1.2812,  -3.0781,  -1.3203],
        [  0.0000,  11.2500,   1.6562,  -0.5547,   2.0156,   1.1484,   3.0312,   1.8750,  -2.9219,   1.8516,  -0.8398,   1.0938,   0.7539,  -1.3438,   3.0938],
        [  0.0000,   4.6250,  -4.0000,  -8.8750,   0.2676,   2.8594,   5.4375,  -4.0312,  -4.8750,  -8.8750,  -1.2812, -10.0625,  -1.1016,  -4.0312,   4.5000],
        [  0.0000,   2.9219,  -1.1484,  -2.7188,   1.4922,   3.2031,   4.6562,  -1.2891,  -1.5781,  -2.5312,   1.0391,  -3.7344,   0.5625,  -1.3047,   3.2344],
        [  0.0000,   2.1406,  -4.6250,  -7.8125,  -0.0361,   1.6406,   3.4219,  -4.5312,  -4.5312,  -8.7500,  -1.8438,  -9.6250,  -2.0469,  -4.0938,   2.2656],
        [  0.0000,   1.9375,  -4.7500,  -8.3125,  -1.3984,   1.2188,   3.1562,  -5.0000,  -5.9375, -10.0000,  -2.8438, -10.3750,  -2.6875,  -5.4375,   2.3906],
        [  0.0000,   4.9062,  -5.7188, -11.4375,   0.2422,   2.7500,   5.7500,  -5.2500,  -6.0000, -11.9375,  -1.7734, -12.7500,  -1.7891,  -4.9688,   5.4688],
        [  0.0000,  -0.4941,  -3.3594,  -5.6562,   0.7031,   3.7188,   4.6875,  -3.2031,  -1.5859,  -7.1250,   0.4355,  -7.8125,   0.0259,  -1.6016,   3.4688],
        [  0.0000,   2.7969,  -4.0312,  -7.1250,  -0.8203,   1.6953,   3.7344,  -4.2500,  -4.7500,  -7.7188,  -1.4609,  -9.0000,  -1.9141,  -4.1875,   2.2656],
        [  0.0000,   2.6250,  -4.6562,  -7.2500,  -0.5469,   1.9219,   3.8594,  -4.0000,  -4.6250,  -8.1875,  -1.2109,  -9.1250,  -1.6250,  -4.1562,   2.6406],
        [  0.0000,   2.3906,  -2.5938,  -4.8438,   1.2188,   2.7500,   4.9688,  -1.8125,  -1.8125,  -4.8438,   1.2500,  -5.7500,   0.3047,  -1.5156,   4.3125],
        [  0.0000,   4.1562,  -5.4062,  -9.6875,   0.7266,   2.4844,   5.1875,  -4.5938,  -5.0000, -10.1875,  -1.1328, -11.0625,  -1.5938,  -4.2188,   4.5625],
        [  0.0000,  -0.1211,  -3.7031,  -6.0625,   0.2451,   3.3281,   4.2812,  -3.5312,  -2.2031,  -7.5312,  -0.0232,  -8.3125,  -0.4180,  -2.1250,   2.9688],
        [  0.0000,   2.9219,  -4.7812,  -8.2500,  -1.0859,   1.3906,   3.6406,  -4.1875,  -5.3438,  -9.3750,  -1.7422,  -9.7500,  -1.9531,  -4.7500,   3.1406]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0006],
        [    0.0019],
        [    0.0744],
        [    0.1252],
        [    0.1148],
        [    0.1062],
        [    0.0726],
        [    0.0890],
        [    0.0521],
        [    0.0647],
        [    0.0405],
        [    0.0550],
        [    0.0691],
        [    0.0498]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.1514 a:0.0552-:0.0635 you:0.0874in:0.0413,:0.1387 a:0.0403�:0.1079)
�
------
		( a:0.0552-:0.0635 you:0.0874in:0.0413,:0.1387 a:0.0403�:0.1079�:0.8906)
�s a lot of the most of the most of the most of the
@ 1050 train 5.8002 , allloss: 7.7496, dt: 1725.48ms, fracRes: 0.6323, norm(attn): 0.0908, norm(output): 0.9643, norm(x): 0.9021, norm(y): 1.0179, norm:18.4953, tok/sec: 75962.52, flops:79.73, batch-reuse:1
@ 1051 train 5.7718 , allloss: 7.5945, dt: 1295.54ms, fracRes: 0.6315, norm(attn): 0.0928, norm(output): 0.9642, norm(x): 0.9017, norm(y): 1.0180, norm:14.6731, tok/sec: 101171.95, flops:106.19, batch-reuse:1
@ 1052 train 5.7744 , allloss: 7.6877, dt: 1326.52ms, fracRes: 0.6317, norm(attn): 0.0898, norm(output): 0.9642, norm(x): 0.8995, norm(y): 1.0180, norm:16.5428, tok/sec: 98809.27, flops:103.71, batch-reuse:1
@ 1053 train 5.7884 , allloss: 7.6286, dt: 1286.26ms, fracRes: 0.6323, norm(attn): 0.0938, norm(output): 0.9642, norm(x): 0.8964, norm(y): 1.0184, norm:13.0395, tok/sec: 101901.51, flops:106.96, batch-reuse:1
@ 1054 train 5.7758 , allloss: 7.7015, dt: 1303.38ms, fracRes: 0.6314, norm(attn): 0.0981, norm(output): 0.9641, norm(x): 0.8968, norm(y): 1.0187, norm:16.9420, tok/sec: 100563.11, flops:105.55, batch-reuse:1
@ 1055 train 5.7907 , allloss: 7.6215, dt: 1293.81ms, fracRes: 0.6316, norm(attn): 0.0996, norm(output): 0.9641, norm(x): 0.8977, norm(y): 1.0187, norm:15.2525, tok/sec: 101306.83, flops:106.33, batch-reuse:1
@ 1056 train 5.7952 , allloss: 7.7537, dt: 1282.58ms, fracRes: 0.6349, norm(attn): 0.0938, norm(output): 0.9641, norm(x): 0.9004, norm(y): 1.0183, norm:19.6350, tok/sec: 102193.72, flops:107.27, batch-reuse:1
@ 1057 train 5.8083 , allloss: 7.6617, dt: 1305.64ms, fracRes: 0.6376, norm(attn): 0.0913, norm(output): 0.9641, norm(x): 0.9022, norm(y): 1.0175, norm:16.2704, tok/sec: 100389.43, flops:105.37, batch-reuse:1
@ 1058 train 5.8305 , allloss: 7.7297, dt: 1329.92ms, fracRes: 0.6383, norm(attn): 0.0923, norm(output): 0.9641, norm(x): 0.9025, norm(y): 1.0174, norm:15.1496, tok/sec: 98556.14, flops:103.45, batch-reuse:1
@ 1059 train 5.7852 , allloss: 7.6645, dt: 1328.43ms, fracRes: 0.6360, norm(attn): 0.0933, norm(output): 0.9641, norm(x): 0.9022, norm(y): 1.0174, norm:13.2674, tok/sec: 98666.59, flops:103.56, batch-reuse:1
@ 1060 train 5.8238 , allloss: 7.6886, dt: 1288.16ms, fracRes: 0.6338, norm(attn): 0.0947, norm(output): 0.9640, norm(x): 0.9009, norm(y): 1.0178, norm:14.3628, tok/sec: 101751.37, flops:106.80, batch-reuse:1
@ 1061 train 5.8265 , allloss: 7.7107, dt: 1309.14ms, fracRes: 0.6317, norm(attn): 0.0967, norm(output): 0.9640, norm(x): 0.9014, norm(y): 1.0183, norm:15.2640, tok/sec: 100120.31, flops:105.09, batch-reuse:1
@ 1062 train 5.7580 , allloss: 7.6086, dt: 1281.34ms, fracRes: 0.6295, norm(attn): 0.0981, norm(output): 0.9639, norm(x): 0.9010, norm(y): 1.0187, norm:15.8135, tok/sec: 102292.60, flops:107.37, batch-reuse:1
@ 1063 train 5.7448 , allloss: 7.6363, dt: 1333.47ms, fracRes: 0.6309, norm(attn): 0.0967, norm(output): 0.9639, norm(x): 0.8997, norm(y): 1.0188, norm:17.6798, tok/sec: 98294.25, flops:103.17, batch-reuse:1
@ 1064 train 5.8496 , allloss: 7.6582, dt: 1315.15ms, fracRes: 0.6317, norm(attn): 0.0933, norm(output): 0.9639, norm(x): 0.8979, norm(y): 1.0188, norm:14.7656, tok/sec: 99663.08, flops:104.61, batch-reuse:1
@ 1065 train 5.8671 , allloss: 7.7635, dt: 1303.32ms, fracRes: 0.6332, norm(attn): 0.0928, norm(output): 0.9638, norm(x): 0.8972, norm(y): 1.0187, norm:14.7007, tok/sec: 100567.91, flops:105.56, batch-reuse:1
@ 1066 train 5.8491 , allloss: 7.7362, dt: 1302.02ms, fracRes: 0.6336, norm(attn): 0.0928, norm(output): 0.9639, norm(x): 0.8986, norm(y): 1.0184, norm:15.0980, tok/sec: 100668.44, flops:105.66, batch-reuse:1
@ 1067 train 5.8043 , allloss: 7.6373, dt: 1307.67ms, fracRes: 0.6366, norm(attn): 0.0957, norm(output): 0.9638, norm(x): 0.8985, norm(y): 1.0185, norm:14.7018, tok/sec: 100233.45, flops:105.21, batch-reuse:1
@ 1068 train 5.8031 , allloss: 7.7517, dt: 1291.24ms, fracRes: 0.6371, norm(attn): 0.0947, norm(output): 0.9638, norm(x): 0.8984, norm(y): 1.0183, norm:16.1634, tok/sec: 101508.72, flops:106.55, batch-reuse:1
@ 1069 train 5.7338 , allloss: 7.6081, dt: 1294.30ms, fracRes: 0.6369, norm(attn): 0.0957, norm(output): 0.9637, norm(x): 0.8975, norm(y): 1.0183, norm:15.0017, tok/sec: 101268.50, flops:106.29, batch-reuse:1
@ 1070 train 5.7740 , allloss: 7.6819, dt: 1312.54ms, fracRes: 0.6370, norm(attn): 0.0967, norm(output): 0.9637, norm(x): 0.8975, norm(y): 1.0181, norm:12.6283, tok/sec: 99861.66, flops:104.82, batch-reuse:1
@ 1071 train 5.6699 , allloss: 7.5180, dt: 1295.15ms, fracRes: 0.6367, norm(attn): 0.0977, norm(output): 0.9637, norm(x): 0.8973, norm(y): 1.0181, norm:10.8410, tok/sec: 101202.19, flops:106.23, batch-reuse:1
@ 1072 train 5.7675 , allloss: 7.6670, dt: 1278.99ms, fracRes: 0.6380, norm(attn): 0.0967, norm(output): 0.9637, norm(x): 0.8968, norm(y): 1.0183, norm:14.7493, tok/sec: 102480.61, flops:107.57, batch-reuse:1
@ 1073 train 5.7006 , allloss: 7.5172, dt: 1310.92ms, fracRes: 0.6368, norm(attn): 0.0967, norm(output): 0.9636, norm(x): 0.8961, norm(y): 1.0183, norm:14.6890, tok/sec: 99984.85, flops:104.95, batch-reuse:1
@ 1074 train 5.6998 , allloss: 7.5532, dt: 1293.53ms, fracRes: 0.6359, norm(attn): 0.0986, norm(output): 0.9636, norm(x): 0.8958, norm(y): 1.0187, norm:15.9119, tok/sec: 101328.59, flops:106.36, batch-reuse:1
@ 1075 train 5.7468 , allloss: 7.5510, dt: 1297.20ms, fracRes: 0.6333, norm(attn): 0.1016, norm(output): 0.9636, norm(x): 0.8962, norm(y): 1.0187, norm:13.8900, tok/sec: 101042.17, flops:106.06, batch-reuse:1
@ 1076 train 5.8030 , allloss: 7.5912, dt: 1289.80ms, fracRes: 0.6343, norm(attn): 0.1016, norm(output): 0.9635, norm(x): 0.8957, norm(y): 1.0188, norm:13.7480, tok/sec: 101621.81, flops:106.67, batch-reuse:1
@ 1077 train 5.7058 , allloss: 7.4338, dt: 1299.16ms, fracRes: 0.6338, norm(attn): 0.1006, norm(output): 0.9635, norm(x): 0.8959, norm(y): 1.0187, norm:13.1256, tok/sec: 100889.66, flops:105.90, batch-reuse:1
@ 1078 train 5.9879 , allloss: 7.7469, dt: 1284.00ms, fracRes: 0.6366, norm(attn): 0.0986, norm(output): 0.9635, norm(x): 0.8970, norm(y): 1.0186, norm:14.0025, tok/sec: 102081.21, flops:107.15, batch-reuse:1
@ 1079 train 5.6743 , allloss: 7.4055, dt: 1303.48ms, fracRes: 0.6372, norm(attn): 0.0967, norm(output): 0.9635, norm(x): 0.8962, norm(y): 1.0184, norm:14.4686, tok/sec: 100555.50, flops:105.55, batch-reuse:1
@ 1080 train 5.7731 , allloss: 7.4795, dt: 1275.42ms, fracRes: 0.6371, norm(attn): 0.0957, norm(output): 0.9635, norm(x): 0.8968, norm(y): 1.0181, norm:14.0585, tok/sec: 102767.82, flops:107.87, batch-reuse:1
@ 1081 train 5.7368 , allloss: 7.4915, dt: 1302.62ms, fracRes: 0.6368, norm(attn): 0.0991, norm(output): 0.9634, norm(x): 0.8980, norm(y): 1.0182, norm:15.0500, tok/sec: 100621.57, flops:105.62, batch-reuse:1
@ 1082 train 5.9220 , allloss: 7.6295, dt: 1291.74ms, fracRes: 0.6387, norm(attn): 0.0981, norm(output): 0.9634, norm(x): 0.8971, norm(y): 1.0181, norm:14.4465, tok/sec: 101469.66, flops:106.51, batch-reuse:1
@ 1083 train 5.7469 , allloss: 7.4798, dt: 1331.27ms, fracRes: 0.6364, norm(attn): 0.0996, norm(output): 0.9634, norm(x): 0.8950, norm(y): 1.0185, norm:15.2420, tok/sec: 98456.50, flops:103.34, batch-reuse:1
@ 1084 train 5.6672 , allloss: 7.3539, dt: 1302.53ms, fracRes: 0.6350, norm(attn): 0.0996, norm(output): 0.9634, norm(x): 0.8941, norm(y): 1.0185, norm:13.5203, tok/sec: 100628.66, flops:105.62, batch-reuse:1
@ 1085 train 5.8187 , allloss: 7.5841, dt: 1324.19ms, fracRes: 0.6365, norm(attn): 0.1006, norm(output): 0.9633, norm(x): 0.8933, norm(y): 1.0186, norm:14.5287, tok/sec: 98982.67, flops:103.90, batch-reuse:1
@ 1086 train 5.7620 , allloss: 7.4291, dt: 1318.45ms, fracRes: 0.6334, norm(attn): 0.0981, norm(output): 0.9633, norm(x): 0.8930, norm(y): 1.0187, norm:14.2686, tok/sec: 99413.37, flops:104.35, batch-reuse:1
@ 1087 train 5.7152 , allloss: 7.4680, dt: 1328.51ms, fracRes: 0.6337, norm(attn): 0.1006, norm(output): 0.9633, norm(x): 0.8935, norm(y): 1.0187, norm:15.7038, tok/sec: 98660.97, flops:103.56, batch-reuse:1
@ 1088 train 5.8201 , allloss: 7.5113, dt: 1329.09ms, fracRes: 0.6342, norm(attn): 0.1021, norm(output): 0.9632, norm(x): 0.8955, norm(y): 1.0190, norm:14.8907, tok/sec: 98618.14, flops:103.51, batch-reuse:1
@ 1089 train 5.7181 , allloss: 7.4674, dt: 1332.65ms, fracRes: 0.6363, norm(attn): 0.1011, norm(output): 0.9632, norm(x): 0.8959, norm(y): 1.0186, norm:16.0509, tok/sec: 98354.50, flops:103.24, batch-reuse:1
@ 1090 train 5.7123 , allloss: 7.3846, dt: 1331.07ms, fracRes: 0.6395, norm(attn): 0.1001, norm(output): 0.9632, norm(x): 0.8969, norm(y): 1.0182, norm:11.9108, tok/sec: 98470.82, flops:103.36, batch-reuse:1
@ 1091 train 5.7551 , allloss: 7.5087, dt: 1326.55ms, fracRes: 0.6403, norm(attn): 0.0977, norm(output): 0.9633, norm(x): 0.8982, norm(y): 1.0176, norm:12.3044, tok/sec: 98806.86, flops:103.71, batch-reuse:1
@ 1092 train 5.9006 , allloss: 7.7170, dt: 1306.71ms, fracRes: 0.6395, norm(attn): 0.0996, norm(output): 0.9632, norm(x): 0.8991, norm(y): 1.0178, norm:13.8390, tok/sec: 100307.17, flops:105.29, batch-reuse:1
@ 1093 train 5.7120 , allloss: 7.3549, dt: 1329.51ms, fracRes: 0.6393, norm(attn): 0.1001, norm(output): 0.9632, norm(x): 0.8973, norm(y): 1.0176, norm:12.9187, tok/sec: 98586.82, flops:103.48, batch-reuse:1
@ 1094 train 5.6877 , allloss: 7.4918, dt: 1333.59ms, fracRes: 0.6407, norm(attn): 0.1030, norm(output): 0.9631, norm(x): 0.8953, norm(y): 1.0181, norm:15.1856, tok/sec: 98284.81, flops:103.16, batch-reuse:1
@ 1095 train 5.6892 , allloss: 7.4318, dt: 1297.71ms, fracRes: 0.6401, norm(attn): 0.1016, norm(output): 0.9631, norm(x): 0.8925, norm(y): 1.0183, norm:16.3642, tok/sec: 101002.45, flops:106.02, batch-reuse:1
@ 1096 train 5.7421 , allloss: 7.5069, dt: 1298.54ms, fracRes: 0.6389, norm(attn): 0.0996, norm(output): 0.9630, norm(x): 0.8894, norm(y): 1.0191, norm:12.4611, tok/sec: 100937.76, flops:105.95, batch-reuse:1
@ 1097 train 5.6672 , allloss: 7.4547, dt: 1301.93ms, fracRes: 0.6386, norm(attn): 0.1021, norm(output): 0.9630, norm(x): 0.8872, norm(y): 1.0192, norm:8.1394, tok/sec: 100674.92, flops:105.67, batch-reuse:1
@ 1098 train 5.6804 , allloss: 7.4815, dt: 1286.17ms, fracRes: 0.6381, norm(attn): 0.1040, norm(output): 0.9630, norm(x): 0.8873, norm(y): 1.0195, norm:8.6955, tok/sec: 101908.75, flops:106.97, batch-reuse:1
@ 1099 train 5.7044 , allloss: 7.3769, dt: 1288.64ms, fracRes: 0.6399, norm(attn): 0.0986, norm(output): 0.9630, norm(x): 0.8904, norm(y): 1.0190, norm:8.6667, tok/sec: 101713.53, flops:106.76, batch-reuse:1
@ 1100 train 5.6997 , allloss: 7.4308, dt: 1308.95ms, fracRes: 0.6421, norm(attn): 0.0986, norm(output): 0.9630, norm(x): 0.8915, norm(y): 1.0187, norm:11.2408, tok/sec: 100135.54, flops:105.11, batch-reuse:1
@ 1101 train 5.8168 , allloss: 7.6103, dt: 1308.09ms, fracRes: 0.6421, norm(attn): 0.0977, norm(output): 0.9629, norm(x): 0.8922, norm(y): 1.0186, norm:11.3691, tok/sec: 100200.91, flops:105.17, batch-reuse:1
@ 1102 train 5.7412 , allloss: 7.8030, dt: 1304.57ms, fracRes: 0.6421, norm(attn): 0.1006, norm(output): 0.9629, norm(x): 0.8903, norm(y): 1.0188, norm:16.4776, tok/sec: 100471.15, flops:105.46, batch-reuse:1
@ 1103 train 5.8076 , allloss: 7.7394, dt: 1319.82ms, fracRes: 0.6422, norm(attn): 0.1006, norm(output): 0.9629, norm(x): 0.8885, norm(y): 1.0188, norm:13.2226, tok/sec: 99310.73, flops:104.24, batch-reuse:1
@ 1104 train 5.8516 , allloss: 7.7497, dt: 1293.39ms, fracRes: 0.6448, norm(attn): 0.1021, norm(output): 0.9629, norm(x): 0.8886, norm(y): 1.0185, norm:10.6585, tok/sec: 101339.53, flops:106.37, batch-reuse:1
@ 1105 train 5.7550 , allloss: 7.4753, dt: 1293.40ms, fracRes: 0.6432, norm(attn): 0.1001, norm(output): 0.9629, norm(x): 0.8864, norm(y): 1.0191, norm:5.3022, tok/sec: 101339.38, flops:106.37, batch-reuse:1
@ 1106 train 5.8088 , allloss: 7.6053, dt: 1300.09ms, fracRes: 0.6437, norm(attn): 0.1025, norm(output): 0.9628, norm(x): 0.8855, norm(y): 1.0188, norm:7.3460, tok/sec: 100817.59, flops:105.82, batch-reuse:1
@ 1107 train 5.9589 , allloss: 7.7246, dt: 1292.97ms, fracRes: 0.6460, norm(attn): 0.1025, norm(output): 0.9628, norm(x): 0.8861, norm(y): 1.0181, norm:7.3296, tok/sec: 101372.53, flops:106.40, batch-reuse:1
@ 1108 train 5.7696 , allloss: 7.4547, dt: 1299.88ms, fracRes: 0.6500, norm(attn): 0.0996, norm(output): 0.9628, norm(x): 0.8886, norm(y): 1.0177, norm:7.8068, tok/sec: 100834.05, flops:105.84, batch-reuse:1
@ 1109 train 5.7850 , allloss: 7.4252, dt: 1291.60ms, fracRes: 0.6530, norm(attn): 0.0996, norm(output): 0.9628, norm(x): 0.8897, norm(y): 1.0173, norm:7.9117, tok/sec: 101480.34, flops:106.52, batch-reuse:1
@ 1110 train 5.8118 , allloss: 7.3872, dt: 1319.09ms, fracRes: 0.6524, norm(attn): 0.0986, norm(output): 0.9628, norm(x): 0.8881, norm(y): 1.0174, norm:10.7191, tok/sec: 99365.26, flops:104.30, batch-reuse:1
@ 1111 train 5.7820 , allloss: 7.3499, dt: 1349.68ms, fracRes: 0.6499, norm(attn): 0.1006, norm(output): 0.9627, norm(x): 0.8852, norm(y): 1.0181, norm:12.7022, tok/sec: 97113.14, flops:101.93, batch-reuse:1
@ 1112 train 5.9144 , allloss: 7.5103, dt: 1302.37ms, fracRes: 0.6472, norm(attn): 0.1001, norm(output): 0.9627, norm(x): 0.8847, norm(y): 1.0183, norm:9.7003, tok/sec: 100641.50, flops:105.64, batch-reuse:1
@ 1113 train 5.9094 , allloss: 7.5987, dt: 1321.01ms, fracRes: 0.6449, norm(attn): 0.1001, norm(output): 0.9626, norm(x): 0.8840, norm(y): 1.0186, norm:8.6264, tok/sec: 99221.33, flops:104.15, batch-reuse:1
@ 1114 train 6.0295 , allloss: 7.6558, dt: 1288.18ms, fracRes: 0.6436, norm(attn): 0.1016, norm(output): 0.9626, norm(x): 0.8835, norm(y): 1.0184, norm:7.1521, tok/sec: 101750.12, flops:106.80, batch-reuse:1
@ 1115 train 5.9560 , allloss: 7.5311, dt: 1296.96ms, fracRes: 0.6425, norm(attn): 0.0996, norm(output): 0.9626, norm(x): 0.8857, norm(y): 1.0187, norm:8.7902, tok/sec: 101061.19, flops:106.08, batch-reuse:1
@ 1116 train 5.8451 , allloss: 7.3052, dt: 1281.29ms, fracRes: 0.6423, norm(attn): 0.1011, norm(output): 0.9625, norm(x): 0.8840, norm(y): 1.0190, norm:8.5109, tok/sec: 102297.24, flops:107.37, batch-reuse:1
@ 1117 train 5.8355 , allloss: 7.3777, dt: 1287.27ms, fracRes: 0.6423, norm(attn): 0.1021, norm(output): 0.9625, norm(x): 0.8829, norm(y): 1.0188, norm:10.7865, tok/sec: 101821.47, flops:106.88, batch-reuse:1
@ 1118 train 5.9504 , allloss: 7.4399, dt: 1306.26ms, fracRes: 0.6436, norm(attn): 0.1006, norm(output): 0.9625, norm(x): 0.8832, norm(y): 1.0186, norm:9.8437, tok/sec: 100341.70, flops:105.32, batch-reuse:1
@ 1119 train 5.9107 , allloss: 7.3584, dt: 1285.82ms, fracRes: 0.6447, norm(attn): 0.1011, norm(output): 0.9625, norm(x): 0.8834, norm(y): 1.0186, norm:10.6715, tok/sec: 101936.30, flops:107.00, batch-reuse:1
@ 1120 train 5.9026 , allloss: 7.4025, dt: 1290.82ms, fracRes: 0.6475, norm(attn): 0.0981, norm(output): 0.9624, norm(x): 0.8847, norm(y): 1.0184, norm:14.2660, tok/sec: 101541.36, flops:106.58, batch-reuse:1
@ 1121 train 5.9474 , allloss: 7.3767, dt: 1289.21ms, fracRes: 0.6503, norm(attn): 0.0986, norm(output): 0.9624, norm(x): 0.8853, norm(y): 1.0181, norm:10.7530, tok/sec: 101668.33, flops:106.71, batch-reuse:1
@ 1122 train 5.9272 , allloss: 7.5342, dt: 1285.74ms, fracRes: 0.6513, norm(attn): 0.0981, norm(output): 0.9624, norm(x): 0.8856, norm(y): 1.0178, norm:11.4562, tok/sec: 101942.88, flops:107.00, batch-reuse:1
@ 1123 train 5.8932 , allloss: 7.3297, dt: 1298.71ms, fracRes: 0.6524, norm(attn): 0.0986, norm(output): 0.9624, norm(x): 0.8860, norm(y): 1.0175, norm:8.1012, tok/sec: 100924.59, flops:105.93, batch-reuse:1
@ 1124 train 5.9036 , allloss: 7.3487, dt: 1292.00ms, fracRes: 0.6506, norm(attn): 0.0986, norm(output): 0.9624, norm(x): 0.8856, norm(y): 1.0176, norm:9.0528, tok/sec: 101448.56, flops:106.48, batch-reuse:1
@ 1125 train 5.8982 , allloss: 7.2825, dt: 1302.77ms, fracRes: 0.6492, norm(attn): 0.0967, norm(output): 0.9623, norm(x): 0.8838, norm(y): 1.0181, norm:8.4031, tok/sec: 100610.17, flops:105.60, batch-reuse:1
@ 1126 train 5.8824 , allloss: 7.2738, dt: 1323.22ms, fracRes: 0.6481, norm(attn): 0.0996, norm(output): 0.9623, norm(x): 0.8812, norm(y): 1.0180, norm:9.5322, tok/sec: 99055.46, flops:103.97, batch-reuse:1
@ 1127 train 5.8537 , allloss: 7.2109, dt: 1307.50ms, fracRes: 0.6472, norm(attn): 0.1011, norm(output): 0.9623, norm(x): 0.8794, norm(y): 1.0185, norm:10.8857, tok/sec: 100245.91, flops:105.22, batch-reuse:1
@ 1128 train 5.8350 , allloss: 7.2644, dt: 1305.65ms, fracRes: 0.6464, norm(attn): 0.1040, norm(output): 0.9622, norm(x): 0.8788, norm(y): 1.0188, norm:11.1816, tok/sec: 100388.37, flops:105.37, batch-reuse:1
@ 1129 train 5.8595 , allloss: 7.2764, dt: 1297.62ms, fracRes: 0.6452, norm(attn): 0.1025, norm(output): 0.9622, norm(x): 0.8790, norm(y): 1.0188, norm:8.2055, tok/sec: 101009.74, flops:106.02, batch-reuse:1
@ 1130 train 5.8185 , allloss: 7.2345, dt: 1280.48ms, fracRes: 0.6464, norm(attn): 0.1011, norm(output): 0.9622, norm(x): 0.8802, norm(y): 1.0187, norm:8.9240, tok/sec: 102361.55, flops:107.44, batch-reuse:1
@ 1131 train 5.8762 , allloss: 7.1720, dt: 1306.83ms, fracRes: 0.6475, norm(attn): 0.0972, norm(output): 0.9622, norm(x): 0.8821, norm(y): 1.0184, norm:7.1001, tok/sec: 100298.04, flops:105.28, batch-reuse:1
@ 1132 train 5.8673 , allloss: 7.1759, dt: 1305.87ms, fracRes: 0.6481, norm(attn): 0.0972, norm(output): 0.9621, norm(x): 0.8833, norm(y): 1.0183, norm:7.0950, tok/sec: 100371.10, flops:105.35, batch-reuse:1
@ 1133 train 5.8723 , allloss: 7.1806, dt: 1299.00ms, fracRes: 0.6495, norm(attn): 0.0957, norm(output): 0.9621, norm(x): 0.8835, norm(y): 1.0180, norm:7.4514, tok/sec: 100902.19, flops:105.91, batch-reuse:1
@ 1134 train 5.8186 , allloss: 7.1054, dt: 1300.88ms, fracRes: 0.6519, norm(attn): 0.0991, norm(output): 0.9620, norm(x): 0.8819, norm(y): 1.0183, norm:9.1246, tok/sec: 100756.03, flops:105.76, batch-reuse:1
@ 1135 train 5.8422 , allloss: 7.0846, dt: 1332.53ms, fracRes: 0.6522, norm(attn): 0.0996, norm(output): 0.9621, norm(x): 0.8805, norm(y): 1.0180, norm:9.0215, tok/sec: 98363.44, flops:103.25, batch-reuse:1
@ 1136 train 5.8737 , allloss: 7.1462, dt: 1312.25ms, fracRes: 0.6513, norm(attn): 0.1016, norm(output): 0.9620, norm(x): 0.8793, norm(y): 1.0184, norm:12.3802, tok/sec: 99883.32, flops:104.84, batch-reuse:1
@ 1137 train 5.8575 , allloss: 6.9819, dt: 1291.80ms, fracRes: 0.6505, norm(attn): 0.0991, norm(output): 0.9620, norm(x): 0.8781, norm(y): 1.0185, norm:12.1996, tok/sec: 101464.62, flops:106.50, batch-reuse:1
@ 1138 train 6.0114 , allloss: 7.1983, dt: 1318.18ms, fracRes: 0.6489, norm(attn): 0.1006, norm(output): 0.9619, norm(x): 0.8789, norm(y): 1.0186, norm:11.1638, tok/sec: 99434.28, flops:104.37, batch-reuse:1
@ 1139 train 5.8071 , allloss: 7.0055, dt: 1347.39ms, fracRes: 0.6498, norm(attn): 0.0972, norm(output): 0.9619, norm(x): 0.8787, norm(y): 1.0186, norm:7.5213, tok/sec: 97278.76, flops:102.11, batch-reuse:1
@ 1140 train 5.8554 , allloss: 7.1229, dt: 1340.21ms, fracRes: 0.6507, norm(attn): 0.0967, norm(output): 0.9619, norm(x): 0.8783, norm(y): 1.0184, norm:7.1378, tok/sec: 97799.38, flops:102.65, batch-reuse:1
@ 1141 train 5.7410 , allloss: 6.9194, dt: 1335.54ms, fracRes: 0.6521, norm(attn): 0.1001, norm(output): 0.9618, norm(x): 0.8772, norm(y): 1.0184, norm:5.7100, tok/sec: 98141.41, flops:103.01, batch-reuse:1
@ 1142 train 5.8162 , allloss: 7.0393, dt: 1296.81ms, fracRes: 0.6513, norm(attn): 0.1001, norm(output): 0.9619, norm(x): 0.8771, norm(y): 1.0184, norm:7.0795, tok/sec: 101072.29, flops:106.09, batch-reuse:1
@ 1143 train 5.8525 , allloss: 7.0449, dt: 1323.14ms, fracRes: 0.6551, norm(attn): 0.0952, norm(output): 0.9619, norm(x): 0.8797, norm(y): 1.0176, norm:6.8425, tok/sec: 99061.30, flops:103.98, batch-reuse:1
@ 1144 train 5.9064 , allloss: 7.0398, dt: 1321.37ms, fracRes: 0.6548, norm(attn): 0.0957, norm(output): 0.9618, norm(x): 0.8780, norm(y): 1.0176, norm:9.0337, tok/sec: 99193.88, flops:104.12, batch-reuse:1
@ 1145 train 5.8981 , allloss: 7.0050, dt: 1294.27ms, fracRes: 0.6558, norm(attn): 0.0942, norm(output): 0.9618, norm(x): 0.8796, norm(y): 1.0175, norm:8.5581, tok/sec: 101271.17, flops:106.30, batch-reuse:1
@ 1146 train 5.8746 , allloss: 7.0421, dt: 1309.60ms, fracRes: 0.6555, norm(attn): 0.0952, norm(output): 0.9617, norm(x): 0.8796, norm(y): 1.0176, norm:10.3648, tok/sec: 100085.22, flops:105.05, batch-reuse:1
@ 1147 train 5.8522 , allloss: 6.9264, dt: 1323.64ms, fracRes: 0.6552, norm(attn): 0.0977, norm(output): 0.9617, norm(x): 0.8787, norm(y): 1.0179, norm:9.0542, tok/sec: 99023.56, flops:103.94, batch-reuse:1
@ 1148 train 5.8015 , allloss: 6.9367, dt: 1277.28ms, fracRes: 0.6545, norm(attn): 0.1025, norm(output): 0.9617, norm(x): 0.8758, norm(y): 1.0182, norm:10.0914, tok/sec: 102617.77, flops:107.71, batch-reuse:1
@ 1149 train 5.8319 , allloss: 6.9340, dt: 1285.37ms, fracRes: 0.6540, norm(attn): 0.1064, norm(output): 0.9617, norm(x): 0.8737, norm(y): 1.0185, norm:8.4823, tok/sec: 101972.20, flops:107.03, batch-reuse:1
@ 1150 train 5.8568 , allloss: 6.9683, dt: 1288.02ms, fracRes: 0.6532, norm(attn): 0.1055, norm(output): 0.9617, norm(x): 0.8733, norm(y): 1.0184, norm:7.2457, tok/sec: 101762.63, flops:106.81, batch-reuse:1
@ 1151 train 5.9016 , allloss: 7.0379, dt: 1310.84ms, fracRes: 0.6535, norm(attn): 0.1060, norm(output): 0.9616, norm(x): 0.8733, norm(y): 1.0189, norm:6.7561, tok/sec: 99990.47, flops:104.95, batch-reuse:1
@ 1152 train 5.7980 , allloss: 6.9166, dt: 1325.89ms, fracRes: 0.6545, norm(attn): 0.1006, norm(output): 0.9616, norm(x): 0.8753, norm(y): 1.0186, norm:8.2261, tok/sec: 98855.82, flops:103.76, batch-reuse:1
@ 1153 train 5.7992 , allloss: 6.8861, dt: 1292.16ms, fracRes: 0.6556, norm(attn): 0.0977, norm(output): 0.9616, norm(x): 0.8769, norm(y): 1.0186, norm:8.7994, tok/sec: 101436.33, flops:106.47, batch-reuse:1
@ 1154 train 5.8016 , allloss: 7.0132, dt: 1291.71ms, fracRes: 0.6566, norm(attn): 0.0957, norm(output): 0.9616, norm(x): 0.8777, norm(y): 1.0182, norm:8.3344, tok/sec: 101471.40, flops:106.51, batch-reuse:1
@ 1155 train 5.7633 , allloss: 6.8163, dt: 1318.09ms, fracRes: 0.6576, norm(attn): 0.0957, norm(output): 0.9615, norm(x): 0.8780, norm(y): 1.0180, norm:9.0823, tok/sec: 99441.11, flops:104.38, batch-reuse:1
@ 1156 train 5.8304 , allloss: 6.9733, dt: 1280.95ms, fracRes: 0.6592, norm(attn): 0.0977, norm(output): 0.9615, norm(x): 0.8780, norm(y): 1.0179, norm:10.9595, tok/sec: 102324.41, flops:107.40, batch-reuse:1
@ 1157 train 5.7902 , allloss: 6.8647, dt: 1290.82ms, fracRes: 0.6587, norm(attn): 0.1006, norm(output): 0.9615, norm(x): 0.8775, norm(y): 1.0180, norm:9.9322, tok/sec: 101541.55, flops:106.58, batch-reuse:1
@ 1158 train 5.7886 , allloss: 6.9405, dt: 1285.60ms, fracRes: 0.6580, norm(attn): 0.1021, norm(output): 0.9615, norm(x): 0.8769, norm(y): 1.0179, norm:9.5412, tok/sec: 101953.84, flops:107.01, batch-reuse:1
@ 1159 train 5.8230 , allloss: 6.9029, dt: 1283.37ms, fracRes: 0.6596, norm(attn): 0.1011, norm(output): 0.9615, norm(x): 0.8758, norm(y): 1.0180, norm:6.8559, tok/sec: 102131.05, flops:107.20, batch-reuse:1
@ 1160 train 5.8391 , allloss: 6.9785, dt: 1286.70ms, fracRes: 0.6580, norm(attn): 0.1006, norm(output): 0.9615, norm(x): 0.8726, norm(y): 1.0183, norm:8.2829, tok/sec: 101866.71, flops:106.92, batch-reuse:1
@ 1161 train 5.7002 , allloss: 6.7411, dt: 1326.81ms, fracRes: 0.6574, norm(attn): 0.1006, norm(output): 0.9614, norm(x): 0.8714, norm(y): 1.0184, norm:6.8236, tok/sec: 98787.38, flops:103.69, batch-reuse:1
@ 1162 train 5.6692 , allloss: 6.7667, dt: 1287.25ms, fracRes: 0.6576, norm(attn): 0.1001, norm(output): 0.9614, norm(x): 0.8708, norm(y): 1.0185, norm:9.2412, tok/sec: 101823.57, flops:106.88, batch-reuse:1
@ 1163 train 5.8017 , allloss: 6.8344, dt: 1279.05ms, fracRes: 0.6589, norm(attn): 0.0996, norm(output): 0.9613, norm(x): 0.8709, norm(y): 1.0186, norm:7.8862, tok/sec: 102476.14, flops:107.56, batch-reuse:1
@ 1164 train 5.7620 , allloss: 6.8068, dt: 1287.67ms, fracRes: 0.6597, norm(attn): 0.1006, norm(output): 0.9613, norm(x): 0.8712, norm(y): 1.0184, norm:9.1061, tok/sec: 101790.40, flops:106.84, batch-reuse:1
@ 1165 train 5.7870 , allloss: 6.8156, dt: 1295.77ms, fracRes: 0.6600, norm(attn): 0.1011, norm(output): 0.9613, norm(x): 0.8736, norm(y): 1.0183, norm:8.4345, tok/sec: 101154.06, flops:106.17, batch-reuse:1
@ 1166 train 5.7576 , allloss: 6.7534, dt: 1305.48ms, fracRes: 0.6599, norm(attn): 0.0996, norm(output): 0.9613, norm(x): 0.8747, norm(y): 1.0182, norm:8.3416, tok/sec: 100401.40, flops:105.38, batch-reuse:1
@ 1167 train 5.7131 , allloss: 6.7611, dt: 1296.76ms, fracRes: 0.6586, norm(attn): 0.1045, norm(output): 0.9613, norm(x): 0.8740, norm(y): 1.0183, norm:9.3948, tok/sec: 101076.26, flops:106.09, batch-reuse:1
@ 1168 train 5.6335 , allloss: 6.5937, dt: 1273.42ms, fracRes: 0.6583, norm(attn): 0.1045, norm(output): 0.9612, norm(x): 0.8738, norm(y): 1.0182, norm:7.3305, tok/sec: 102928.98, flops:108.04, batch-reuse:1
@ 1169 train 5.7454 , allloss: 6.8098, dt: 1300.62ms, fracRes: 0.6590, norm(attn): 0.1045, norm(output): 0.9612, norm(x): 0.8726, norm(y): 1.0183, norm:8.6508, tok/sec: 100776.92, flops:105.78, batch-reuse:1
@ 1170 train 5.7206 , allloss: 6.7270, dt: 1296.57ms, fracRes: 0.6584, norm(attn): 0.1011, norm(output): 0.9612, norm(x): 0.8720, norm(y): 1.0184, norm:7.4486, tok/sec: 101091.28, flops:106.11, batch-reuse:1
@ 1171 train 5.6939 , allloss: 6.6672, dt: 1317.35ms, fracRes: 0.6580, norm(attn): 0.1025, norm(output): 0.9612, norm(x): 0.8715, norm(y): 1.0184, norm:7.2878, tok/sec: 99496.56, flops:104.43, batch-reuse:1
@ 1172 train 5.8035 , allloss: 6.7961, dt: 1284.74ms, fracRes: 0.6573, norm(attn): 0.1025, norm(output): 0.9611, norm(x): 0.8707, norm(y): 1.0187, norm:7.5106, tok/sec: 102022.28, flops:107.09, batch-reuse:1
@ 1173 train 5.7253 , allloss: 6.6665, dt: 1284.25ms, fracRes: 0.6580, norm(attn): 0.1025, norm(output): 0.9611, norm(x): 0.8700, norm(y): 1.0188, norm:6.8532, tok/sec: 102060.88, flops:107.13, batch-reuse:1
@ 1174 train 5.6643 , allloss: 6.6041, dt: 1304.22ms, fracRes: 0.6595, norm(attn): 0.1006, norm(output): 0.9611, norm(x): 0.8706, norm(y): 1.0184, norm:6.9611, tok/sec: 100498.29, flops:105.49, batch-reuse:1
@ 1175 train 5.8094 , allloss: 6.7780, dt: 1310.62ms, fracRes: 0.6612, norm(attn): 0.1016, norm(output): 0.9610, norm(x): 0.8716, norm(y): 1.0186, norm:8.1857, tok/sec: 100007.79, flops:104.97, batch-reuse:1
@ 1176 train 5.7661 , allloss: 6.7158, dt: 1318.43ms, fracRes: 0.6619, norm(attn): 0.1021, norm(output): 0.9610, norm(x): 0.8729, norm(y): 1.0183, norm:7.4091, tok/sec: 99415.02, flops:104.35, batch-reuse:1
@ 1177 train 5.7628 , allloss: 6.6558, dt: 1287.52ms, fracRes: 0.6607, norm(attn): 0.0991, norm(output): 0.9610, norm(x): 0.8733, norm(y): 1.0182, norm:6.6929, tok/sec: 101801.81, flops:106.85, batch-reuse:1
@ 1178 train 5.8839 , allloss: 6.8469, dt: 1286.28ms, fracRes: 0.6600, norm(attn): 0.0996, norm(output): 0.9610, norm(x): 0.8724, norm(y): 1.0181, norm:7.8610, tok/sec: 101900.19, flops:106.96, batch-reuse:1
@ 1179 train 5.7692 , allloss: 6.6365, dt: 1295.70ms, fracRes: 0.6598, norm(attn): 0.1016, norm(output): 0.9610, norm(x): 0.8704, norm(y): 1.0184, norm:6.5572, tok/sec: 101159.47, flops:106.18, batch-reuse:1
@ 1180 train 5.7668 , allloss: 6.7417, dt: 1311.61ms, fracRes: 0.6593, norm(attn): 0.1040, norm(output): 0.9609, norm(x): 0.8693, norm(y): 1.0186, norm:8.1562, tok/sec: 99932.51, flops:104.89, batch-reuse:1
@ 1181 train 5.7064 , allloss: 6.5839, dt: 1333.82ms, fracRes: 0.6587, norm(attn): 0.1074, norm(output): 0.9609, norm(x): 0.8686, norm(y): 1.0187, norm:6.3730, tok/sec: 98268.46, flops:103.15, batch-reuse:1
@ 1182 train 5.7465 , allloss: 6.6924, dt: 1302.91ms, fracRes: 0.6594, norm(attn): 0.1064, norm(output): 0.9609, norm(x): 0.8682, norm(y): 1.0187, norm:7.0881, tok/sec: 100599.66, flops:105.59, batch-reuse:1
@ 1183 train 5.7483 , allloss: 6.6334, dt: 1318.75ms, fracRes: 0.6584, norm(attn): 0.1055, norm(output): 0.9608, norm(x): 0.8669, norm(y): 1.0189, norm:5.8756, tok/sec: 99390.97, flops:104.32, batch-reuse:1
@ 1184 train 5.7206 , allloss: 6.6373, dt: 1296.34ms, fracRes: 0.6589, norm(attn): 0.1030, norm(output): 0.9608, norm(x): 0.8681, norm(y): 1.0188, norm:6.7894, tok/sec: 101109.56, flops:106.13, batch-reuse:1
@ 1185 train 5.7557 , allloss: 6.6093, dt: 1322.63ms, fracRes: 0.6601, norm(attn): 0.1016, norm(output): 0.9608, norm(x): 0.8687, norm(y): 1.0187, norm:5.4967, tok/sec: 99099.33, flops:104.02, batch-reuse:1
@ 1186 train 5.7666 , allloss: 6.6852, dt: 1325.14ms, fracRes: 0.6604, norm(attn): 0.1025, norm(output): 0.9608, norm(x): 0.8698, norm(y): 1.0187, norm:7.2276, tok/sec: 98911.46, flops:103.82, batch-reuse:1
@ 1187 train 5.7516 , allloss: 6.6241, dt: 1298.67ms, fracRes: 0.6604, norm(attn): 0.1050, norm(output): 0.9608, norm(x): 0.8704, norm(y): 1.0184, norm:6.5979, tok/sec: 100928.18, flops:105.94, batch-reuse:1
@ 1188 train 5.6617 , allloss: 6.5172, dt: 1340.60ms, fracRes: 0.6608, norm(attn): 0.1079, norm(output): 0.9607, norm(x): 0.8703, norm(y): 1.0183, norm:6.2976, tok/sec: 97770.92, flops:102.62, batch-reuse:1
@ 1189 train 5.6795 , allloss: 6.5528, dt: 1324.89ms, fracRes: 0.6622, norm(attn): 0.1074, norm(output): 0.9607, norm(x): 0.8697, norm(y): 1.0181, norm:6.8132, tok/sec: 98930.40, flops:103.84, batch-reuse:1
@ 1190 train 5.7849 , allloss: 6.6224, dt: 1337.97ms, fracRes: 0.6629, norm(attn): 0.1040, norm(output): 0.9607, norm(x): 0.8688, norm(y): 1.0183, norm:5.6671, tok/sec: 97963.44, flops:102.83, batch-reuse:1
@ 1191 train 5.8584 , allloss: 6.7432, dt: 1328.51ms, fracRes: 0.6617, norm(attn): 0.1006, norm(output): 0.9607, norm(x): 0.8678, norm(y): 1.0185, norm:6.3939, tok/sec: 98661.08, flops:103.56, batch-reuse:1
@ 1192 train 5.7108 , allloss: 6.5565, dt: 1337.76ms, fracRes: 0.6593, norm(attn): 0.1011, norm(output): 0.9607, norm(x): 0.8671, norm(y): 1.0185, norm:5.4826, tok/sec: 97978.56, flops:102.84, batch-reuse:1
@ 1193 train 5.7598 , allloss: 6.6384, dt: 1337.57ms, fracRes: 0.6596, norm(attn): 0.1025, norm(output): 0.9606, norm(x): 0.8653, norm(y): 1.0190, norm:6.8185, tok/sec: 97992.82, flops:102.86, batch-reuse:1
@ 1194 train 5.7588 , allloss: 6.6128, dt: 1325.44ms, fracRes: 0.6595, norm(attn): 0.1025, norm(output): 0.9605, norm(x): 0.8668, norm(y): 1.0190, norm:6.1028, tok/sec: 98889.68, flops:103.80, batch-reuse:1
@ 1195 train 5.7307 , allloss: 6.5611, dt: 1314.92ms, fracRes: 0.6577, norm(attn): 0.1045, norm(output): 0.9605, norm(x): 0.8685, norm(y): 1.0190, norm:6.3442, tok/sec: 99680.36, flops:104.63, batch-reuse:1
@ 1196 train 5.7253 , allloss: 6.5445, dt: 1314.33ms, fracRes: 0.6567, norm(attn): 0.1055, norm(output): 0.9605, norm(x): 0.8701, norm(y): 1.0192, norm:5.5450, tok/sec: 99725.58, flops:104.68, batch-reuse:1
@ 1197 train 5.6759 , allloss: 6.5713, dt: 1294.77ms, fracRes: 0.6573, norm(attn): 0.1064, norm(output): 0.9605, norm(x): 0.8708, norm(y): 1.0188, norm:6.2419, tok/sec: 101232.10, flops:106.26, batch-reuse:1
@ 1198 train 5.6925 , allloss: 6.5043, dt: 1297.96ms, fracRes: 0.6578, norm(attn): 0.1030, norm(output): 0.9604, norm(x): 0.8700, norm(y): 1.0189, norm:5.7693, tok/sec: 100983.02, flops:106.00, batch-reuse:1
@ 1199 train 5.7382 , allloss: 6.5635, dt: 1327.91ms, fracRes: 0.6586, norm(attn): 0.1035, norm(output): 0.9604, norm(x): 0.8699, norm(y): 1.0188, norm:5.8958, tok/sec: 98705.31, flops:103.60, batch-reuse:1
@ 1200 train 5.7030 , allloss: 6.5165, dt: 1296.82ms, fracRes: 0.6593, norm(attn): 0.1055, norm(output): 0.9604, norm(x): 0.8675, norm(y): 1.0189, norm:5.3748, tok/sec: 101072.04, flops:106.09, batch-reuse:1
@ 1201 train 5.7191 , allloss: 6.5591, dt: 1282.42ms, fracRes: 0.6602, norm(attn): 0.1035, norm(output): 0.9603, norm(x): 0.8660, norm(y): 1.0190, norm:5.4030, tok/sec: 102207.06, flops:107.28, batch-reuse:1
@ 1202 train 5.7219 , allloss: 6.5284, dt: 1298.51ms, fracRes: 0.6619, norm(attn): 0.1040, norm(output): 0.9603, norm(x): 0.8655, norm(y): 1.0189, norm:4.9414, tok/sec: 100940.41, flops:105.95, batch-reuse:1
@ 1203 train 6.0915 , allloss: 6.9402, dt: 1291.70ms, fracRes: 0.6614, norm(attn): 0.1025, norm(output): 0.9603, norm(x): 0.8667, norm(y): 1.0187, norm:6.1865, tok/sec: 101472.28, flops:106.51, batch-reuse:1
@ 1204 train 5.7054 , allloss: 6.5252, dt: 1304.51ms, fracRes: 0.6600, norm(attn): 0.1035, norm(output): 0.9603, norm(x): 0.8681, norm(y): 1.0189, norm:5.8255, tok/sec: 100475.85, flops:105.46, batch-reuse:1
@ 1205 train 5.6558 , allloss: 6.4875, dt: 1325.86ms, fracRes: 0.6597, norm(attn): 0.1030, norm(output): 0.9602, norm(x): 0.8688, norm(y): 1.0187, norm:6.1197, tok/sec: 98857.87, flops:103.76, batch-reuse:1
@ 1206 train 5.6813 , allloss: 6.5039, dt: 1341.18ms, fracRes: 0.6587, norm(attn): 0.1055, norm(output): 0.9602, norm(x): 0.8694, norm(y): 1.0186, norm:5.6156, tok/sec: 97729.09, flops:102.58, batch-reuse:1
@ 1207 train 5.6729 , allloss: 6.5042, dt: 1338.76ms, fracRes: 0.6589, norm(attn): 0.1040, norm(output): 0.9602, norm(x): 0.8697, norm(y): 1.0186, norm:5.2431, tok/sec: 97905.27, flops:102.76, batch-reuse:1
@ 1208 train 5.6323 , allloss: 6.4599, dt: 1320.60ms, fracRes: 0.6588, norm(attn): 0.1060, norm(output): 0.9601, norm(x): 0.8695, norm(y): 1.0188, norm:5.4421, tok/sec: 99251.66, flops:104.18, batch-reuse:1
@ 1209 train 5.7190 , allloss: 6.5259, dt: 1315.33ms, fracRes: 0.6589, norm(attn): 0.1069, norm(output): 0.9601, norm(x): 0.8691, norm(y): 1.0187, norm:5.7351, tok/sec: 99649.57, flops:104.60, batch-reuse:1
@ 1210 train 5.6471 , allloss: 6.5141, dt: 1323.11ms, fracRes: 0.6596, norm(attn): 0.1089, norm(output): 0.9601, norm(x): 0.8678, norm(y): 1.0189, norm:6.1562, tok/sec: 99063.44, flops:103.98, batch-reuse:1
@ 1211 train 5.7097 , allloss: 6.5568, dt: 1323.29ms, fracRes: 0.6595, norm(attn): 0.1079, norm(output): 0.9601, norm(x): 0.8652, norm(y): 1.0190, norm:6.1915, tok/sec: 99050.39, flops:103.97, batch-reuse:1
@ 1212 train 5.7765 , allloss: 6.5771, dt: 1304.41ms, fracRes: 0.6584, norm(attn): 0.1040, norm(output): 0.9600, norm(x): 0.8647, norm(y): 1.0194, norm:6.3282, tok/sec: 100483.67, flops:105.47, batch-reuse:1
@ 1213 train 5.6291 , allloss: 6.4553, dt: 1303.69ms, fracRes: 0.6569, norm(attn): 0.1064, norm(output): 0.9600, norm(x): 0.8651, norm(y): 1.0195, norm:5.9395, tok/sec: 100538.87, flops:105.53, batch-reuse:1
@ 1214 train 5.6752 , allloss: 6.4811, dt: 1322.83ms, fracRes: 0.6581, norm(attn): 0.1025, norm(output): 0.9600, norm(x): 0.8668, norm(y): 1.0192, norm:5.4338, tok/sec: 99084.79, flops:104.00, batch-reuse:1
@ 1215 train 5.6910 , allloss: 6.4849, dt: 1333.05ms, fracRes: 0.6598, norm(attn): 0.1030, norm(output): 0.9600, norm(x): 0.8677, norm(y): 1.0189, norm:5.6035, tok/sec: 98325.23, flops:103.21, batch-reuse:1
@ 1216 train 5.6657 , allloss: 6.4406, dt: 1333.38ms, fracRes: 0.6598, norm(attn): 0.1050, norm(output): 0.9599, norm(x): 0.8682, norm(y): 1.0187, norm:5.2688, tok/sec: 98300.42, flops:103.18, batch-reuse:1
@ 1217 train 5.6973 , allloss: 6.4658, dt: 1306.43ms, fracRes: 0.6590, norm(attn): 0.1045, norm(output): 0.9599, norm(x): 0.8694, norm(y): 1.0186, norm:5.8337, tok/sec: 100328.13, flops:105.31, batch-reuse:1
@ 1218 train 5.6068 , allloss: 6.3643, dt: 1282.71ms, fracRes: 0.6590, norm(attn): 0.1089, norm(output): 0.9600, norm(x): 0.8699, norm(y): 1.0182, norm:5.1023, tok/sec: 102183.63, flops:107.26, batch-reuse:1
@ 1219 train 5.6123 , allloss: 6.4404, dt: 1297.47ms, fracRes: 0.6578, norm(attn): 0.1089, norm(output): 0.9599, norm(x): 0.8688, norm(y): 1.0187, norm:6.6980, tok/sec: 101020.84, flops:106.03, batch-reuse:1
@ 1220 train 5.6675 , allloss: 6.4145, dt: 1317.81ms, fracRes: 0.6578, norm(attn): 0.1084, norm(output): 0.9598, norm(x): 0.8670, norm(y): 1.0188, norm:5.2675, tok/sec: 99462.31, flops:104.40, batch-reuse:1
@ 1221 train 5.6323 , allloss: 6.4438, dt: 1331.98ms, fracRes: 0.6585, norm(attn): 0.1089, norm(output): 0.9598, norm(x): 0.8651, norm(y): 1.0188, norm:7.0138, tok/sec: 98404.16, flops:103.29, batch-reuse:1
@ 1222 train 5.6265 , allloss: 6.3649, dt: 1330.04ms, fracRes: 0.6585, norm(attn): 0.1084, norm(output): 0.9597, norm(x): 0.8645, norm(y): 1.0191, norm:5.0154, tok/sec: 98547.17, flops:103.44, batch-reuse:1
@ 1223 train 5.6154 , allloss: 6.4298, dt: 1314.72ms, fracRes: 0.6591, norm(attn): 0.1055, norm(output): 0.9598, norm(x): 0.8650, norm(y): 1.0191, norm:6.3184, tok/sec: 99695.78, flops:104.64, batch-reuse:1
@ 1224 train 5.5960 , allloss: 6.3607, dt: 1298.88ms, fracRes: 0.6584, norm(attn): 0.1045, norm(output): 0.9597, norm(x): 0.8657, norm(y): 1.0192, norm:5.3097, tok/sec: 100911.88, flops:105.92, batch-reuse:1
@ 1225 train 5.6293 , allloss: 6.4142, dt: 1307.33ms, fracRes: 0.6588, norm(attn): 0.1045, norm(output): 0.9597, norm(x): 0.8673, norm(y): 1.0190, norm:6.0009, tok/sec: 100259.15, flops:105.24, batch-reuse:1
@ 1226 train 5.7393 , allloss: 6.5186, dt: 1280.48ms, fracRes: 0.6592, norm(attn): 0.1025, norm(output): 0.9597, norm(x): 0.8664, norm(y): 1.0188, norm:6.1891, tok/sec: 102361.34, flops:107.44, batch-reuse:1
@ 1227 train 5.6434 , allloss: 6.4301, dt: 1300.29ms, fracRes: 0.6598, norm(attn): 0.1089, norm(output): 0.9597, norm(x): 0.8653, norm(y): 1.0187, norm:6.0263, tok/sec: 100802.23, flops:105.81, batch-reuse:1
@ 1228 train 5.5972 , allloss: 6.3733, dt: 1289.03ms, fracRes: 0.6602, norm(attn): 0.1104, norm(output): 0.9596, norm(x): 0.8652, norm(y): 1.0185, norm:5.5875, tok/sec: 101682.62, flops:106.73, batch-reuse:1
@ 1229 train 5.6308 , allloss: 6.4103, dt: 1304.44ms, fracRes: 0.6606, norm(attn): 0.1108, norm(output): 0.9596, norm(x): 0.8645, norm(y): 1.0187, norm:5.0005, tok/sec: 100481.58, flops:105.47, batch-reuse:1
@ 1230 train 5.6486 , allloss: 6.4398, dt: 1304.75ms, fracRes: 0.6600, norm(attn): 0.1099, norm(output): 0.9596, norm(x): 0.8648, norm(y): 1.0187, norm:4.7368, tok/sec: 100457.82, flops:105.44, batch-reuse:1
@ 1231 train 5.6134 , allloss: 6.3975, dt: 1335.14ms, fracRes: 0.6592, norm(attn): 0.1104, norm(output): 0.9595, norm(x): 0.8658, norm(y): 1.0188, norm:4.9844, tok/sec: 98170.84, flops:103.04, batch-reuse:1
@ 1232 train 5.5988 , allloss: 6.3789, dt: 1330.91ms, fracRes: 0.6588, norm(attn): 0.1084, norm(output): 0.9595, norm(x): 0.8666, norm(y): 1.0189, norm:5.1737, tok/sec: 98483.28, flops:103.37, batch-reuse:1
@ 1233 train 5.5960 , allloss: 6.3633, dt: 1316.71ms, fracRes: 0.6593, norm(attn): 0.1069, norm(output): 0.9595, norm(x): 0.8666, norm(y): 1.0187, norm:4.7422, tok/sec: 99544.88, flops:104.49, batch-reuse:1
@ 1234 train 5.6393 , allloss: 6.4386, dt: 1307.27ms, fracRes: 0.6596, norm(attn): 0.1060, norm(output): 0.9595, norm(x): 0.8660, norm(y): 1.0187, norm:5.5660, tok/sec: 100263.81, flops:105.24, batch-reuse:1
@ 1235 train 5.6778 , allloss: 6.4393, dt: 1318.84ms, fracRes: 0.6594, norm(attn): 0.1050, norm(output): 0.9594, norm(x): 0.8661, norm(y): 1.0188, norm:5.4659, tok/sec: 99384.65, flops:104.32, batch-reuse:1
@ 1236 train 5.6101 , allloss: 6.3907, dt: 1310.24ms, fracRes: 0.6592, norm(attn): 0.1084, norm(output): 0.9594, norm(x): 0.8648, norm(y): 1.0192, norm:5.6903, tok/sec: 100036.98, flops:105.00, batch-reuse:1
@ 1237 train 5.6419 , allloss: 6.4111, dt: 1306.17ms, fracRes: 0.6587, norm(attn): 0.1084, norm(output): 0.9593, norm(x): 0.8645, norm(y): 1.0192, norm:5.4019, tok/sec: 100348.02, flops:105.33, batch-reuse:1
@ 1238 train 5.6109 , allloss: 6.3625, dt: 1299.18ms, fracRes: 0.6582, norm(attn): 0.1094, norm(output): 0.9593, norm(x): 0.8639, norm(y): 1.0189, norm:5.5854, tok/sec: 100887.88, flops:105.90, batch-reuse:1
@ 1239 train 5.5462 , allloss: 6.3034, dt: 1291.37ms, fracRes: 0.6582, norm(attn): 0.1138, norm(output): 0.9593, norm(x): 0.8631, norm(y): 1.0190, norm:5.8783, tok/sec: 101498.45, flops:106.54, batch-reuse:1
@ 1240 train 5.5628 , allloss: 6.3273, dt: 1303.94ms, fracRes: 0.6588, norm(attn): 0.1104, norm(output): 0.9592, norm(x): 0.8643, norm(y): 1.0191, norm:6.2096, tok/sec: 100519.99, flops:105.51, batch-reuse:1
@ 1241 train 5.5784 , allloss: 6.3253, dt: 1329.83ms, fracRes: 0.6589, norm(attn): 0.1094, norm(output): 0.9592, norm(x): 0.8655, norm(y): 1.0189, norm:6.4203, tok/sec: 98563.05, flops:103.45, batch-reuse:1
@ 1242 train 5.6224 , allloss: 6.3662, dt: 1320.31ms, fracRes: 0.6595, norm(attn): 0.1074, norm(output): 0.9592, norm(x): 0.8671, norm(y): 1.0188, norm:6.2499, tok/sec: 99273.83, flops:104.20, batch-reuse:1
@ 1243 train 5.6098 , allloss: 6.3487, dt: 1296.49ms, fracRes: 0.6599, norm(attn): 0.1064, norm(output): 0.9591, norm(x): 0.8671, norm(y): 1.0188, norm:5.7434, tok/sec: 101097.88, flops:106.12, batch-reuse:1
@ 1244 train 5.6187 , allloss: 6.4104, dt: 1301.26ms, fracRes: 0.6596, norm(attn): 0.1089, norm(output): 0.9591, norm(x): 0.8682, norm(y): 1.0187, norm:5.0984, tok/sec: 100726.69, flops:105.73, batch-reuse:1
@ 1245 train 5.6111 , allloss: 6.3841, dt: 1316.85ms, fracRes: 0.6592, norm(attn): 0.1099, norm(output): 0.9591, norm(x): 0.8671, norm(y): 1.0187, norm:5.7520, tok/sec: 99534.43, flops:104.47, batch-reuse:1
@ 1246 train 5.6259 , allloss: 6.3822, dt: 1282.94ms, fracRes: 0.6585, norm(attn): 0.1143, norm(output): 0.9590, norm(x): 0.8657, norm(y): 1.0189, norm:6.2176, tok/sec: 102165.61, flops:107.24, batch-reuse:1
@ 1247 train 5.5343 , allloss: 6.2980, dt: 1313.38ms, fracRes: 0.6570, norm(attn): 0.1157, norm(output): 0.9590, norm(x): 0.8642, norm(y): 1.0191, norm:6.1621, tok/sec: 99797.83, flops:104.75, batch-reuse:1
@ 1248 train 5.6245 , allloss: 6.3808, dt: 1330.41ms, fracRes: 0.6564, norm(attn): 0.1147, norm(output): 0.9590, norm(x): 0.8636, norm(y): 1.0192, norm:5.0640, tok/sec: 98519.83, flops:103.41, batch-reuse:1
@ 1249 train 5.5220 , allloss: 6.3082, dt: 1338.19ms, fracRes: 0.6576, norm(attn): 0.1084, norm(output): 0.9590, norm(x): 0.8639, norm(y): 1.0192, norm:5.1282, tok/sec: 97947.20, flops:102.81, batch-reuse:1
@ 1250 train 5.6225 , allloss: 6.3581, dt: 1327.73ms, fracRes: 0.6598, norm(attn): 0.1069, norm(output): 0.9589, norm(x): 0.8639, norm(y): 1.0191, norm:5.0787, tok/sec: 98718.80, flops:103.62, batch-reuse:1
@ 1251 train 5.5832 , allloss: 6.3516, dt: 1333.96ms, fracRes: 0.6613, norm(attn): 0.1074, norm(output): 0.9589, norm(x): 0.8655, norm(y): 1.0187, norm:6.3066, tok/sec: 98257.60, flops:103.13, batch-reuse:1
@ 1252 train 5.6061 , allloss: 6.3728, dt: 1329.92ms, fracRes: 0.6629, norm(attn): 0.1089, norm(output): 0.9589, norm(x): 0.8657, norm(y): 1.0187, norm:7.0980, tok/sec: 98556.32, flops:103.45, batch-reuse:1
@ 1253 train 5.5052 , allloss: 6.2827, dt: 1328.90ms, fracRes: 0.6625, norm(attn): 0.1089, norm(output): 0.9589, norm(x): 0.8657, norm(y): 1.0182, norm:6.3664, tok/sec: 98631.98, flops:103.53, batch-reuse:1
@ 1254 train 5.5657 , allloss: 6.3049, dt: 1310.79ms, fracRes: 0.6616, norm(attn): 0.1099, norm(output): 0.9588, norm(x): 0.8644, norm(y): 1.0187, norm:5.9604, tok/sec: 99994.73, flops:104.96, batch-reuse:1
@ 1255 train 5.6030 , allloss: 6.3620, dt: 1294.09ms, fracRes: 0.6600, norm(attn): 0.1113, norm(output): 0.9588, norm(x): 0.8650, norm(y): 1.0189, norm:6.3380, tok/sec: 101284.87, flops:106.31, batch-reuse:1
@ 1256 train 5.5344 , allloss: 6.2432, dt: 1302.62ms, fracRes: 0.6596, norm(attn): 0.1133, norm(output): 0.9588, norm(x): 0.8636, norm(y): 1.0192, norm:5.2218, tok/sec: 100621.99, flops:105.62, batch-reuse:1
@ 1257 train 5.5778 , allloss: 6.3246, dt: 1312.79ms, fracRes: 0.6599, norm(attn): 0.1104, norm(output): 0.9587, norm(x): 0.8629, norm(y): 1.0190, norm:5.7171, tok/sec: 99842.09, flops:104.80, batch-reuse:1
@ 1258 train 5.5410 , allloss: 6.2478, dt: 1315.43ms, fracRes: 0.6596, norm(attn): 0.1113, norm(output): 0.9587, norm(x): 0.8636, norm(y): 1.0188, norm:4.8343, tok/sec: 99642.20, flops:104.59, batch-reuse:1
@ 1259 train 5.5827 , allloss: 6.3391, dt: 1305.97ms, fracRes: 0.6590, norm(attn): 0.1157, norm(output): 0.9587, norm(x): 0.8637, norm(y): 1.0189, norm:5.9528, tok/sec: 100363.68, flops:105.34, batch-reuse:1
@ 1260 train 5.5133 , allloss: 6.2068, dt: 1302.36ms, fracRes: 0.6585, norm(attn): 0.1167, norm(output): 0.9587, norm(x): 0.8641, norm(y): 1.0189, norm:4.9238, tok/sec: 100642.17, flops:105.64, batch-reuse:1
@ 1261 train 5.5275 , allloss: 6.2977, dt: 1314.72ms, fracRes: 0.6584, norm(attn): 0.1157, norm(output): 0.9586, norm(x): 0.8645, norm(y): 1.0190, norm:6.5490, tok/sec: 99695.96, flops:104.64, batch-reuse:1
@ 1262 train 5.5047 , allloss: 6.1958, dt: 1301.87ms, fracRes: 0.6584, norm(attn): 0.1113, norm(output): 0.9586, norm(x): 0.8663, norm(y): 1.0188, norm:4.7885, tok/sec: 100680.04, flops:105.68, batch-reuse:1
@ 1263 train 5.5200 , allloss: 6.2972, dt: 1318.57ms, fracRes: 0.6585, norm(attn): 0.1104, norm(output): 0.9586, norm(x): 0.8668, norm(y): 1.0188, norm:6.5434, tok/sec: 99404.36, flops:104.34, batch-reuse:1
@ 1264 train 5.6332 , allloss: 6.3710, dt: 1347.25ms, fracRes: 0.6599, norm(attn): 0.1104, norm(output): 0.9585, norm(x): 0.8663, norm(y): 1.0188, norm:5.0223, tok/sec: 97288.28, flops:102.12, batch-reuse:1
@ 1265 train 5.5443 , allloss: 6.2770, dt: 1342.23ms, fracRes: 0.6600, norm(attn): 0.1133, norm(output): 0.9585, norm(x): 0.8652, norm(y): 1.0188, norm:5.4777, tok/sec: 97652.37, flops:102.50, batch-reuse:1
@ 1266 train 5.5556 , allloss: 6.2896, dt: 1333.48ms, fracRes: 0.6598, norm(attn): 0.1162, norm(output): 0.9585, norm(x): 0.8642, norm(y): 1.0188, norm:5.0918, tok/sec: 98293.20, flops:103.17, batch-reuse:1
@ 1267 train 5.5902 , allloss: 6.3223, dt: 1315.85ms, fracRes: 0.6596, norm(attn): 0.1147, norm(output): 0.9585, norm(x): 0.8634, norm(y): 1.0188, norm:5.0117, tok/sec: 99610.10, flops:104.55, batch-reuse:1
@ 1268 train 5.5857 , allloss: 6.3379, dt: 1280.72ms, fracRes: 0.6587, norm(attn): 0.1138, norm(output): 0.9584, norm(x): 0.8638, norm(y): 1.0189, norm:5.7662, tok/sec: 102342.79, flops:107.42, batch-reuse:1
@ 1269 train 5.5597 , allloss: 6.3254, dt: 1290.76ms, fracRes: 0.6586, norm(attn): 0.1104, norm(output): 0.9584, norm(x): 0.8644, norm(y): 1.0191, norm:5.7975, tok/sec: 101546.75, flops:106.59, batch-reuse:1
@ 1270 train 5.4647 , allloss: 6.2100, dt: 1328.44ms, fracRes: 0.6583, norm(attn): 0.1104, norm(output): 0.9584, norm(x): 0.8651, norm(y): 1.0189, norm:5.5017, tok/sec: 98666.23, flops:103.56, batch-reuse:1
@ 1271 train 5.4938 , allloss: 6.2398, dt: 1309.70ms, fracRes: 0.6590, norm(attn): 0.1123, norm(output): 0.9583, norm(x): 0.8640, norm(y): 1.0190, norm:5.4344, tok/sec: 100077.53, flops:105.04, batch-reuse:1
@ 1272 train 5.4955 , allloss: 6.1941, dt: 1325.13ms, fracRes: 0.6595, norm(attn): 0.1128, norm(output): 0.9583, norm(x): 0.8639, norm(y): 1.0189, norm:5.0406, tok/sec: 98912.54, flops:103.82, batch-reuse:1
@ 1273 train 5.6202 , allloss: 6.3519, dt: 1319.94ms, fracRes: 0.6598, norm(attn): 0.1133, norm(output): 0.9583, norm(x): 0.8634, norm(y): 1.0186, norm:5.7192, tok/sec: 99301.17, flops:104.23, batch-reuse:1
@ 1274 train 5.5216 , allloss: 6.2519, dt: 1292.94ms, fracRes: 0.6605, norm(attn): 0.1147, norm(output): 0.9582, norm(x): 0.8645, norm(y): 1.0188, norm:5.5190, tok/sec: 101375.50, flops:106.41, batch-reuse:1
@ 1275 train 5.6707 , allloss: 6.4241, dt: 1305.75ms, fracRes: 0.6601, norm(attn): 0.1123, norm(output): 0.9582, norm(x): 0.8649, norm(y): 1.0189, norm:6.2417, tok/sec: 100380.47, flops:105.36, batch-reuse:1
@ 1276 train 5.4756 , allloss: 6.2016, dt: 1300.63ms, fracRes: 0.6596, norm(attn): 0.1113, norm(output): 0.9582, norm(x): 0.8639, norm(y): 1.0190, norm:5.7284, tok/sec: 100775.96, flops:105.78, batch-reuse:1
@ 1277 train 5.4579 , allloss: 6.1872, dt: 1323.23ms, fracRes: 0.6594, norm(attn): 0.1133, norm(output): 0.9582, norm(x): 0.8635, norm(y): 1.0189, norm:5.2509, tok/sec: 99054.24, flops:103.97, batch-reuse:1
@ 1278 train 5.5622 , allloss: 6.3246, dt: 1305.52ms, fracRes: 0.6588, norm(attn): 0.1162, norm(output): 0.9582, norm(x): 0.8628, norm(y): 1.0190, norm:4.8325, tok/sec: 100398.60, flops:105.38, batch-reuse:1
@ 1279 train 5.6790 , allloss: 6.4273, dt: 1314.48ms, fracRes: 0.6598, norm(attn): 0.1147, norm(output): 0.9582, norm(x): 0.8640, norm(y): 1.0189, norm:4.6596, tok/sec: 99714.19, flops:104.66, batch-reuse:1
@ 1280 train 5.4526 , allloss: 6.1648, dt: 1339.03ms, fracRes: 0.6582, norm(attn): 0.1172, norm(output): 0.9581, norm(x): 0.8628, norm(y): 1.0192, norm:5.2473, tok/sec: 97885.94, flops:102.74, batch-reuse:1
@ 1281 train 5.4655 , allloss: 6.1907, dt: 1328.36ms, fracRes: 0.6589, norm(attn): 0.1157, norm(output): 0.9580, norm(x): 0.8616, norm(y): 1.0192, norm:5.1156, tok/sec: 98672.08, flops:103.57, batch-reuse:1
@ 1282 train 5.4836 , allloss: 6.2330, dt: 1346.14ms, fracRes: 0.6596, norm(attn): 0.1152, norm(output): 0.9580, norm(x): 0.8607, norm(y): 1.0190, norm:6.0554, tok/sec: 97368.80, flops:102.20, batch-reuse:1
@ 1283 train 5.5502 , allloss: 6.2814, dt: 1295.58ms, fracRes: 0.6606, norm(attn): 0.1172, norm(output): 0.9580, norm(x): 0.8603, norm(y): 1.0190, norm:5.5842, tok/sec: 101168.87, flops:106.19, batch-reuse:1
@ 1284 train 5.5330 , allloss: 6.2683, dt: 1314.58ms, fracRes: 0.6613, norm(attn): 0.1157, norm(output): 0.9580, norm(x): 0.8617, norm(y): 1.0188, norm:6.2674, tok/sec: 99706.30, flops:104.65, batch-reuse:1
@ 1285 train 5.4390 , allloss: 6.1828, dt: 1319.33ms, fracRes: 0.6618, norm(attn): 0.1157, norm(output): 0.9579, norm(x): 0.8628, norm(y): 1.0188, norm:6.0569, tok/sec: 99347.47, flops:104.28, batch-reuse:1
@ 1286 train 5.6672 , allloss: 6.4289, dt: 1297.49ms, fracRes: 0.6621, norm(attn): 0.1113, norm(output): 0.9579, norm(x): 0.8662, norm(y): 1.0185, norm:5.7916, tok/sec: 101019.73, flops:106.03, batch-reuse:1
@ 1287 train 5.5789 , allloss: 6.2929, dt: 1314.69ms, fracRes: 0.6617, norm(attn): 0.1123, norm(output): 0.9579, norm(x): 0.8666, norm(y): 1.0185, norm:5.3657, tok/sec: 99697.98, flops:104.65, batch-reuse:1
@ 1288 train 5.5396 , allloss: 6.2597, dt: 1303.74ms, fracRes: 0.6611, norm(attn): 0.1157, norm(output): 0.9579, norm(x): 0.8664, norm(y): 1.0186, norm:5.2714, tok/sec: 100535.71, flops:105.53, batch-reuse:1
@ 1289 train 5.4679 , allloss: 6.1855, dt: 1312.82ms, fracRes: 0.6606, norm(attn): 0.1191, norm(output): 0.9578, norm(x): 0.8633, norm(y): 1.0189, norm:5.3199, tok/sec: 99839.82, flops:104.80, batch-reuse:1
@ 1290 train 5.4740 , allloss: 6.1756, dt: 1314.50ms, fracRes: 0.6598, norm(attn): 0.1230, norm(output): 0.9578, norm(x): 0.8613, norm(y): 1.0191, norm:4.9340, tok/sec: 99712.54, flops:104.66, batch-reuse:1
@ 1291 train 5.5358 , allloss: 6.2594, dt: 1299.26ms, fracRes: 0.6585, norm(attn): 0.1226, norm(output): 0.9577, norm(x): 0.8618, norm(y): 1.0193, norm:5.2968, tok/sec: 100881.83, flops:105.89, batch-reuse:1
@ 1292 train 5.4842 , allloss: 6.1600, dt: 1279.51ms, fracRes: 0.6594, norm(attn): 0.1191, norm(output): 0.9577, norm(x): 0.8614, norm(y): 1.0192, norm:4.7236, tok/sec: 102438.98, flops:107.52, batch-reuse:1
@ 1293 train 5.5139 , allloss: 6.2500, dt: 1313.13ms, fracRes: 0.6602, norm(attn): 0.1172, norm(output): 0.9577, norm(x): 0.8604, norm(y): 1.0194, norm:5.7359, tok/sec: 99816.17, flops:104.77, batch-reuse:1
@ 1294 train 5.4397 , allloss: 6.1198, dt: 1312.64ms, fracRes: 0.6602, norm(attn): 0.1162, norm(output): 0.9577, norm(x): 0.8608, norm(y): 1.0194, norm:4.8694, tok/sec: 99853.81, flops:104.81, batch-reuse:1
@ 1295 train 5.6019 , allloss: 6.3377, dt: 1289.70ms, fracRes: 0.6604, norm(attn): 0.1157, norm(output): 0.9576, norm(x): 0.8608, norm(y): 1.0193, norm:6.1632, tok/sec: 101630.12, flops:106.67, batch-reuse:1
@ 1296 train 5.5584 , allloss: 6.2572, dt: 1304.49ms, fracRes: 0.6600, norm(attn): 0.1167, norm(output): 0.9576, norm(x): 0.8611, norm(y): 1.0193, norm:4.7143, tok/sec: 100477.61, flops:105.46, batch-reuse:1
@ 1297 train 5.6343 , allloss: 6.3795, dt: 1332.04ms, fracRes: 0.6598, norm(attn): 0.1182, norm(output): 0.9576, norm(x): 0.8604, norm(y): 1.0193, norm:5.5369, tok/sec: 98399.71, flops:103.28, batch-reuse:1
@ 1298 train 5.7318 , allloss: 6.4303, dt: 1314.78ms, fracRes: 0.6605, norm(attn): 0.1201, norm(output): 0.9576, norm(x): 0.8615, norm(y): 1.0191, norm:4.5357, tok/sec: 99691.37, flops:104.64, batch-reuse:1
@ 1299 train 5.7132 , allloss: 6.5031, dt: 1319.44ms, fracRes: 0.6613, norm(attn): 0.1201, norm(output): 0.9575, norm(x): 0.8597, norm(y): 1.0191, norm:5.4239, tok/sec: 99339.36, flops:104.27, batch-reuse:1
@ 1300 train 5.6383 , allloss: 6.3760, dt: 1296.55ms, fracRes: 0.6607, norm(attn): 0.1177, norm(output): 0.9575, norm(x): 0.8598, norm(y): 1.0190, norm:5.2057, tok/sec: 101092.71, flops:106.11, batch-reuse:1
@ 1301 train 5.7603 , allloss: 6.4766, dt: 1300.57ms, fracRes: 0.6610, norm(attn): 0.1182, norm(output): 0.9575, norm(x): 0.8590, norm(y): 1.0189, norm:4.6779, tok/sec: 100780.52, flops:105.78, batch-reuse:1
@ 1302 train 5.6940 , allloss: 6.4602, dt: 1284.35ms, fracRes: 0.6612, norm(attn): 0.1177, norm(output): 0.9575, norm(x): 0.8597, norm(y): 1.0191, norm:5.2102, tok/sec: 102053.17, flops:107.12, batch-reuse:1
@ 1303 train 5.7603 , allloss: 6.5242, dt: 1325.08ms, fracRes: 0.6617, norm(attn): 0.1172, norm(output): 0.9574, norm(x): 0.8606, norm(y): 1.0193, norm:4.4956, tok/sec: 98916.07, flops:103.83, batch-reuse:1
@ 1304 train 5.7345 , allloss: 6.5488, dt: 1326.84ms, fracRes: 0.6614, norm(attn): 0.1182, norm(output): 0.9574, norm(x): 0.8621, norm(y): 1.0190, norm:5.7397, tok/sec: 98785.34, flops:103.69, batch-reuse:1
@ 1305 train 5.6716 , allloss: 6.4351, dt: 1280.95ms, fracRes: 0.6607, norm(attn): 0.1206, norm(output): 0.9574, norm(x): 0.8628, norm(y): 1.0188, norm:4.9421, tok/sec: 102324.32, flops:107.40, batch-reuse:1
@ 1306 train 5.5930 , allloss: 6.3441, dt: 1313.21ms, fracRes: 0.6611, norm(attn): 0.1230, norm(output): 0.9573, norm(x): 0.8637, norm(y): 1.0186, norm:5.2422, tok/sec: 99810.06, flops:104.76, batch-reuse:1
@ 1307 train 5.7449 , allloss: 6.5060, dt: 1345.45ms, fracRes: 0.6619, norm(attn): 0.1172, norm(output): 0.9573, norm(x): 0.8642, norm(y): 1.0184, norm:5.3931, tok/sec: 97419.01, flops:102.25, batch-reuse:1
@ 1308 train 5.7398 , allloss: 6.4908, dt: 1351.71ms, fracRes: 0.6617, norm(attn): 0.1167, norm(output): 0.9573, norm(x): 0.8639, norm(y): 1.0185, norm:4.8447, tok/sec: 96967.69, flops:101.78, batch-reuse:1
@ 1309 train 5.6946 , allloss: 6.4334, dt: 1326.75ms, fracRes: 0.6612, norm(attn): 0.1162, norm(output): 0.9573, norm(x): 0.8616, norm(y): 1.0187, norm:5.0743, tok/sec: 98791.64, flops:103.69, batch-reuse:1
@ 1310 train 5.6801 , allloss: 6.4108, dt: 1309.00ms, fracRes: 0.6599, norm(attn): 0.1162, norm(output): 0.9572, norm(x): 0.8608, norm(y): 1.0191, norm:4.7470, tok/sec: 100131.23, flops:105.10, batch-reuse:1
@ 1311 train 5.6912 , allloss: 6.4260, dt: 1319.36ms, fracRes: 0.6594, norm(attn): 0.1201, norm(output): 0.9571, norm(x): 0.8598, norm(y): 1.0193, norm:5.1910, tok/sec: 99345.21, flops:104.28, batch-reuse:1
@ 1312 train 5.6907 , allloss: 6.4126, dt: 1291.88ms, fracRes: 0.6588, norm(attn): 0.1221, norm(output): 0.9571, norm(x): 0.8584, norm(y): 1.0193, norm:5.5672, tok/sec: 101458.12, flops:106.49, batch-reuse:1
@ 1313 train 5.7357 , allloss: 6.4766, dt: 1295.83ms, fracRes: 0.6596, norm(attn): 0.1240, norm(output): 0.9571, norm(x): 0.8584, norm(y): 1.0193, norm:5.6190, tok/sec: 101148.77, flops:106.17, batch-reuse:1
@ 1314 train 5.6932 , allloss: 6.4282, dt: 1306.41ms, fracRes: 0.6593, norm(attn): 0.1240, norm(output): 0.9570, norm(x): 0.8597, norm(y): 1.0193, norm:5.4288, tok/sec: 100330.16, flops:105.31, batch-reuse:1
@ 1315 train 5.6526 , allloss: 6.3702, dt: 1313.11ms, fracRes: 0.6598, norm(attn): 0.1191, norm(output): 0.9570, norm(x): 0.8608, norm(y): 1.0191, norm:5.6495, tok/sec: 99818.05, flops:104.77, batch-reuse:1
@ 1316 train 5.5918 , allloss: 6.2816, dt: 1279.51ms, fracRes: 0.6603, norm(attn): 0.1201, norm(output): 0.9570, norm(x): 0.8617, norm(y): 1.0190, norm:5.6189, tok/sec: 102438.91, flops:107.52, batch-reuse:1
@ 1317 train 5.7084 , allloss: 6.4335, dt: 1295.01ms, fracRes: 0.6612, norm(attn): 0.1187, norm(output): 0.9569, norm(x): 0.8628, norm(y): 1.0189, norm:5.7021, tok/sec: 101213.30, flops:106.24, batch-reuse:1
@ 1318 train 5.6001 , allloss: 6.2941, dt: 1312.27ms, fracRes: 0.6611, norm(attn): 0.1187, norm(output): 0.9569, norm(x): 0.8632, norm(y): 1.0188, norm:5.2099, tok/sec: 99881.51, flops:104.84, batch-reuse:1
@ 1319 train 5.7002 , allloss: 6.4084, dt: 1316.82ms, fracRes: 0.6610, norm(attn): 0.1196, norm(output): 0.9569, norm(x): 0.8631, norm(y): 1.0188, norm:5.6244, tok/sec: 99536.70, flops:104.48, batch-reuse:1
@ 1320 train 5.7335 , allloss: 6.4026, dt: 1304.12ms, fracRes: 0.6612, norm(attn): 0.1182, norm(output): 0.9568, norm(x): 0.8616, norm(y): 1.0188, norm:4.9871, tok/sec: 100506.10, flops:105.49, batch-reuse:1
@ 1321 train 5.6900 , allloss: 6.4100, dt: 1326.51ms, fracRes: 0.6596, norm(attn): 0.1216, norm(output): 0.9568, norm(x): 0.8605, norm(y): 1.0193, norm:6.0354, tok/sec: 98810.00, flops:103.71, batch-reuse:1
@ 1322 train 5.6671 , allloss: 6.3349, dt: 1298.23ms, fracRes: 0.6597, norm(attn): 0.1221, norm(output): 0.9567, norm(x): 0.8593, norm(y): 1.0193, norm:5.3235, tok/sec: 100962.29, flops:105.97, batch-reuse:1
@ 1323 train 5.6702 , allloss: 6.4053, dt: 1287.93ms, fracRes: 0.6599, norm(attn): 0.1250, norm(output): 0.9567, norm(x): 0.8581, norm(y): 1.0194, norm:6.4148, tok/sec: 101769.62, flops:106.82, batch-reuse:1
@ 1324 train 5.6917 , allloss: 6.3463, dt: 1306.73ms, fracRes: 0.6599, norm(attn): 0.1250, norm(output): 0.9566, norm(x): 0.8579, norm(y): 1.0194, norm:4.5429, tok/sec: 100305.30, flops:105.28, batch-reuse:1
@ 1325 train 5.6175 , allloss: 6.3743, dt: 1334.03ms, fracRes: 0.6595, norm(attn): 0.1260, norm(output): 0.9566, norm(x): 0.8580, norm(y): 1.0194, norm:6.2053, tok/sec: 98252.77, flops:103.13, batch-reuse:1
@ 1326 train 5.5868 , allloss: 6.2702, dt: 1296.13ms, fracRes: 0.6596, norm(attn): 0.1240, norm(output): 0.9566, norm(x): 0.8587, norm(y): 1.0193, norm:4.4985, tok/sec: 101125.57, flops:106.14, batch-reuse:1
@ 1327 train 5.7129 , allloss: 6.4783, dt: 1304.13ms, fracRes: 0.6600, norm(attn): 0.1230, norm(output): 0.9566, norm(x): 0.8597, norm(y): 1.0195, norm:5.5835, tok/sec: 100505.05, flops:105.49, batch-reuse:1
@ 1328 train 5.6424 , allloss: 6.3913, dt: 1339.70ms, fracRes: 0.6592, norm(attn): 0.1221, norm(output): 0.9566, norm(x): 0.8602, norm(y): 1.0196, norm:4.5675, tok/sec: 97836.93, flops:102.69, batch-reuse:1
@ 1329 train 5.6654 , allloss: 6.4154, dt: 1329.59ms, fracRes: 0.6590, norm(attn): 0.1221, norm(output): 0.9565, norm(x): 0.8609, norm(y): 1.0195, norm:4.2402, tok/sec: 98580.92, flops:103.47, batch-reuse:1
@ 1330 train 5.7425 , allloss: 6.5351, dt: 1330.49ms, fracRes: 0.6603, norm(attn): 0.1230, norm(output): 0.9565, norm(x): 0.8595, norm(y): 1.0195, norm:4.4371, tok/sec: 98514.36, flops:103.40, batch-reuse:1
@ 1331 train 5.7114 , allloss: 6.5031, dt: 1327.60ms, fracRes: 0.6611, norm(attn): 0.1318, norm(output): 0.9564, norm(x): 0.8573, norm(y): 1.0195, norm:4.2862, tok/sec: 98728.78, flops:103.63, batch-reuse:1
@ 1332 train 5.6176 , allloss: 6.3773, dt: 1280.79ms, fracRes: 0.6624, norm(attn): 0.1260, norm(output): 0.9564, norm(x): 0.8572, norm(y): 1.0193, norm:4.3541, tok/sec: 102337.06, flops:107.42, batch-reuse:1
@ 1333 train 5.6343 , allloss: 6.4378, dt: 1319.41ms, fracRes: 0.6629, norm(attn): 0.1245, norm(output): 0.9564, norm(x): 0.8579, norm(y): 1.0191, norm:4.8127, tok/sec: 99341.67, flops:104.27, batch-reuse:1
@ 1334 train 5.6339 , allloss: 6.5554, dt: 1290.43ms, fracRes: 0.6625, norm(attn): 0.1196, norm(output): 0.9564, norm(x): 0.8592, norm(y): 1.0190, norm:4.7624, tok/sec: 101572.58, flops:106.61, batch-reuse:1
@ 1335 train 5.6493 , allloss: 6.4256, dt: 1310.76ms, fracRes: 0.6626, norm(attn): 0.1172, norm(output): 0.9563, norm(x): 0.8594, norm(y): 1.0192, norm:4.6678, tok/sec: 99997.00, flops:104.96, batch-reuse:1
@ 1336 train 5.6800 , allloss: 6.5122, dt: 1310.46ms, fracRes: 0.6633, norm(attn): 0.1172, norm(output): 0.9563, norm(x): 0.8612, norm(y): 1.0192, norm:5.0320, tok/sec: 100020.02, flops:104.98, batch-reuse:1
@ 1337 train 5.6643 , allloss: 6.4273, dt: 1312.53ms, fracRes: 0.6623, norm(attn): 0.1196, norm(output): 0.9562, norm(x): 0.8612, norm(y): 1.0191, norm:4.0694, tok/sec: 99861.91, flops:104.82, batch-reuse:1
@ 1338 train 5.7058 , allloss: 6.4994, dt: 1316.71ms, fracRes: 0.6620, norm(attn): 0.1240, norm(output): 0.9562, norm(x): 0.8594, norm(y): 1.0191, norm:5.1166, tok/sec: 99544.95, flops:104.49, batch-reuse:1
@ 1339 train 5.6581 , allloss: 6.4289, dt: 1303.46ms, fracRes: 0.6621, norm(attn): 0.1270, norm(output): 0.9561, norm(x): 0.8576, norm(y): 1.0189, norm:4.3739, tok/sec: 100557.36, flops:105.55, batch-reuse:1
@ 1340 train 5.6467 , allloss: 6.4341, dt: 1289.45ms, fracRes: 0.6609, norm(attn): 0.1299, norm(output): 0.9560, norm(x): 0.8550, norm(y): 1.0192, norm:5.1699, tok/sec: 101649.58, flops:106.69, batch-reuse:1
@ 1341 train 5.6964 , allloss: 6.4581, dt: 1310.00ms, fracRes: 0.6605, norm(attn): 0.1299, norm(output): 0.9560, norm(x): 0.8531, norm(y): 1.0193, norm:4.1954, tok/sec: 100054.77, flops:105.02, batch-reuse:1
@ 1342 train 5.7627 , allloss: 6.5302, dt: 1305.24ms, fracRes: 0.6604, norm(attn): 0.1279, norm(output): 0.9559, norm(x): 0.8531, norm(y): 1.0197, norm:4.4739, tok/sec: 100419.96, flops:105.40, batch-reuse:1
@ 1343 train 5.6047 , allloss: 6.3253, dt: 1318.40ms, fracRes: 0.6598, norm(attn): 0.1260, norm(output): 0.9559, norm(x): 0.8527, norm(y): 1.0199, norm:4.4038, tok/sec: 99417.54, flops:104.35, batch-reuse:1
@ 1344 train 5.6174 , allloss: 6.3777, dt: 1303.62ms, fracRes: 0.6605, norm(attn): 0.1245, norm(output): 0.9558, norm(x): 0.8531, norm(y): 1.0199, norm:5.1102, tok/sec: 100544.26, flops:105.53, batch-reuse:1
@ 1345 train 5.5314 , allloss: 6.2506, dt: 1278.57ms, fracRes: 0.6608, norm(attn): 0.1221, norm(output): 0.9557, norm(x): 0.8537, norm(y): 1.0198, norm:4.9705, tok/sec: 102514.92, flops:107.60, batch-reuse:1
@ 1346 train 5.5922 , allloss: 6.3551, dt: 1290.99ms, fracRes: 0.6617, norm(attn): 0.1191, norm(output): 0.9557, norm(x): 0.8562, norm(y): 1.0194, norm:5.0693, tok/sec: 101528.33, flops:106.57, batch-reuse:1
@ 1347 train 5.5649 , allloss: 6.3119, dt: 1283.01ms, fracRes: 0.6621, norm(attn): 0.1221, norm(output): 0.9556, norm(x): 0.8574, norm(y): 1.0191, norm:4.1760, tok/sec: 102159.67, flops:107.23, batch-reuse:1
@ 1348 train 5.6122 , allloss: 6.3761, dt: 1291.24ms, fracRes: 0.6620, norm(attn): 0.1221, norm(output): 0.9556, norm(x): 0.8583, norm(y): 1.0191, norm:4.7220, tok/sec: 101508.87, flops:106.55, batch-reuse:1
@ 1349 train 5.6434 , allloss: 6.3637, dt: 1305.06ms, fracRes: 0.6608, norm(attn): 0.1230, norm(output): 0.9555, norm(x): 0.8578, norm(y): 1.0192, norm:4.1580, tok/sec: 100433.87, flops:105.42, batch-reuse:1
@ 1350 train 5.5381 , allloss: 6.3090, dt: 1304.45ms, fracRes: 0.6613, norm(attn): 0.1245, norm(output): 0.9555, norm(x): 0.8567, norm(y): 1.0195, norm:4.6048, tok/sec: 100480.29, flops:105.47, batch-reuse:1
@ 1351 train 5.6139 , allloss: 6.3574, dt: 1281.72ms, fracRes: 0.6607, norm(attn): 0.1260, norm(output): 0.9553, norm(x): 0.8564, norm(y): 1.0197, norm:4.8313, tok/sec: 102262.93, flops:107.34, batch-reuse:1
@ 1352 train 5.7008 , allloss: 6.4790, dt: 1308.07ms, fracRes: 0.6611, norm(attn): 0.1260, norm(output): 0.9553, norm(x): 0.8556, norm(y): 1.0195, norm:5.3459, tok/sec: 100202.41, flops:105.18, batch-reuse:1
@ 1353 train 5.6154 , allloss: 6.3610, dt: 1304.81ms, fracRes: 0.6607, norm(attn): 0.1270, norm(output): 0.9552, norm(x): 0.8553, norm(y): 1.0198, norm:5.1017, tok/sec: 100452.72, flops:105.44, batch-reuse:1
@ 1354 train 5.6429 , allloss: 6.3694, dt: 1325.89ms, fracRes: 0.6612, norm(attn): 0.1270, norm(output): 0.9552, norm(x): 0.8561, norm(y): 1.0196, norm:4.8490, tok/sec: 98855.86, flops:103.76, batch-reuse:1
@ 1355 train 5.6233 , allloss: 6.3464, dt: 1329.20ms, fracRes: 0.6616, norm(attn): 0.1270, norm(output): 0.9552, norm(x): 0.8557, norm(y): 1.0193, norm:4.8173, tok/sec: 98609.44, flops:103.50, batch-reuse:1
@ 1356 train 5.6624 , allloss: 6.4198, dt: 1296.87ms, fracRes: 0.6630, norm(attn): 0.1260, norm(output): 0.9551, norm(x): 0.8555, norm(y): 1.0193, norm:4.8422, tok/sec: 101067.92, flops:106.08, batch-reuse:1
@ 1357 train 5.6185 , allloss: 6.3499, dt: 1318.42ms, fracRes: 0.6626, norm(attn): 0.1260, norm(output): 0.9551, norm(x): 0.8547, norm(y): 1.0191, norm:4.7354, tok/sec: 99415.70, flops:104.35, batch-reuse:1
@ 1358 train 5.5768 , allloss: 6.2903, dt: 1330.68ms, fracRes: 0.6621, norm(attn): 0.1260, norm(output): 0.9550, norm(x): 0.8547, norm(y): 1.0192, norm:4.9072, tok/sec: 98500.31, flops:103.39, batch-reuse:1
@ 1359 train 5.5189 , allloss: 6.2997, dt: 1322.52ms, fracRes: 0.6618, norm(attn): 0.1260, norm(output): 0.9549, norm(x): 0.8544, norm(y): 1.0195, norm:5.2565, tok/sec: 99107.41, flops:104.03, batch-reuse:1
@ 1360 train 5.5483 , allloss: 6.2657, dt: 1306.01ms, fracRes: 0.6612, norm(attn): 0.1250, norm(output): 0.9549, norm(x): 0.8545, norm(y): 1.0197, norm:4.4978, tok/sec: 100360.51, flops:105.34, batch-reuse:1
@ 1361 train 5.5836 , allloss: 6.3478, dt: 1293.71ms, fracRes: 0.6617, norm(attn): 0.1260, norm(output): 0.9548, norm(x): 0.8550, norm(y): 1.0196, norm:4.3865, tok/sec: 101314.77, flops:106.34, batch-reuse:1
@ 1362 train 5.6620 , allloss: 6.3694, dt: 1299.49ms, fracRes: 0.6622, norm(attn): 0.1270, norm(output): 0.9548, norm(x): 0.8562, norm(y): 1.0192, norm:3.8936, tok/sec: 100864.34, flops:105.87, batch-reuse:1
@ 1363 train 5.5888 , allloss: 6.3294, dt: 1294.40ms, fracRes: 0.6619, norm(attn): 0.1260, norm(output): 0.9547, norm(x): 0.8583, norm(y): 1.0186, norm:5.1327, tok/sec: 101261.12, flops:106.29, batch-reuse:1
@ 1364 train 5.5229 , allloss: 6.2399, dt: 1301.63ms, fracRes: 0.6626, norm(attn): 0.1270, norm(output): 0.9547, norm(x): 0.8576, norm(y): 1.0188, norm:3.8897, tok/sec: 100698.13, flops:105.70, batch-reuse:1
@ 1365 train 5.6441 , allloss: 6.4634, dt: 1322.87ms, fracRes: 0.6632, norm(attn): 0.1289, norm(output): 0.9546, norm(x): 0.8564, norm(y): 1.0190, norm:5.9972, tok/sec: 99081.24, flops:104.00, batch-reuse:1
@ 1366 train 5.5690 , allloss: 6.3451, dt: 1313.88ms, fracRes: 0.6629, norm(attn): 0.1299, norm(output): 0.9545, norm(x): 0.8545, norm(y): 1.0193, norm:4.4041, tok/sec: 99759.29, flops:104.71, batch-reuse:1
@ 1367 train 5.5629 , allloss: 6.4182, dt: 1299.45ms, fracRes: 0.6634, norm(attn): 0.1279, norm(output): 0.9545, norm(x): 0.8524, norm(y): 1.0195, norm:5.7172, tok/sec: 100867.20, flops:105.87, batch-reuse:1
@ 1368 train 5.6776 , allloss: 6.4994, dt: 1292.29ms, fracRes: 0.6637, norm(attn): 0.1270, norm(output): 0.9544, norm(x): 0.8511, norm(y): 1.0196, norm:4.5454, tok/sec: 101425.83, flops:106.46, batch-reuse:1
@ 1369 train 5.6461 , allloss: 6.5141, dt: 1298.52ms, fracRes: 0.6641, norm(attn): 0.1289, norm(output): 0.9543, norm(x): 0.8514, norm(y): 1.0197, norm:3.9077, tok/sec: 100939.38, flops:105.95, batch-reuse:1
@ 1370 train 5.5509 , allloss: 6.4311, dt: 1297.20ms, fracRes: 0.6634, norm(attn): 0.1328, norm(output): 0.9542, norm(x): 0.8517, norm(y): 1.0199, norm:3.8724, tok/sec: 101042.23, flops:106.06, batch-reuse:1
@ 1371 train 5.6751 , allloss: 6.5772, dt: 1311.09ms, fracRes: 0.6620, norm(attn): 0.1309, norm(output): 0.9542, norm(x): 0.8528, norm(y): 1.0197, norm:3.7938, tok/sec: 99972.05, flops:104.93, batch-reuse:1
@ 1372 train 5.5693 , allloss: 6.3938, dt: 1277.17ms, fracRes: 0.6629, norm(attn): 0.1299, norm(output): 0.9541, norm(x): 0.8534, norm(y): 1.0195, norm:3.4950, tok/sec: 102627.14, flops:107.72, batch-reuse:1
@ 1373 train 5.5743 , allloss: 6.4461, dt: 1312.37ms, fracRes: 0.6636, norm(attn): 0.1357, norm(output): 0.9540, norm(x): 0.8551, norm(y): 1.0193, norm:3.5858, tok/sec: 99874.49, flops:104.83, batch-reuse:1
@ 1374 train 5.5569 , allloss: 6.3622, dt: 1315.66ms, fracRes: 0.6631, norm(attn): 0.1348, norm(output): 0.9540, norm(x): 0.8571, norm(y): 1.0189, norm:3.3679, tok/sec: 99624.81, flops:104.57, batch-reuse:1
@ 1375 train 5.5337 , allloss: 6.3645, dt: 1319.53ms, fracRes: 0.6636, norm(attn): 0.1367, norm(output): 0.9539, norm(x): 0.8560, norm(y): 1.0189, norm:3.3540, tok/sec: 99332.03, flops:104.26, batch-reuse:1
@ 1376 train 5.5056 , allloss: 6.3097, dt: 1298.69ms, fracRes: 0.6629, norm(attn): 0.1367, norm(output): 0.9539, norm(x): 0.8549, norm(y): 1.0192, norm:3.8324, tok/sec: 100925.98, flops:105.94, batch-reuse:1
@ 1377 train 5.5276 , allloss: 6.3410, dt: 1291.90ms, fracRes: 0.6637, norm(attn): 0.1338, norm(output): 0.9538, norm(x): 0.8535, norm(y): 1.0197, norm:3.3854, tok/sec: 101457.09, flops:106.49, batch-reuse:1
@ 1378 train 5.6379 , allloss: 6.5336, dt: 1287.55ms, fracRes: 0.6636, norm(attn): 0.1348, norm(output): 0.9537, norm(x): 0.8542, norm(y): 1.0196, norm:4.2087, tok/sec: 101799.62, flops:106.85, batch-reuse:1
@ 1379 train 5.5988 , allloss: 6.5029, dt: 1283.79ms, fracRes: 0.6632, norm(attn): 0.1318, norm(output): 0.9537, norm(x): 0.8532, norm(y): 1.0193, norm:4.4838, tok/sec: 102097.48, flops:107.16, batch-reuse:1
@ 1380 train 5.4815 , allloss: 6.3870, dt: 1294.35ms, fracRes: 0.6633, norm(attn): 0.1318, norm(output): 0.9536, norm(x): 0.8514, norm(y): 1.0194, norm:5.2450, tok/sec: 101264.75, flops:106.29, batch-reuse:1
@ 1381 train 5.5574 , allloss: 6.4150, dt: 1293.88ms, fracRes: 0.6638, norm(attn): 0.1328, norm(output): 0.9535, norm(x): 0.8506, norm(y): 1.0194, norm:5.0445, tok/sec: 101301.55, flops:106.33, batch-reuse:1
@ 1382 train 5.5478 , allloss: 6.3545, dt: 1283.93ms, fracRes: 0.6642, norm(attn): 0.1309, norm(output): 0.9535, norm(x): 0.8497, norm(y): 1.0196, norm:4.7956, tok/sec: 102086.56, flops:107.15, batch-reuse:1
@ 1383 train 5.6222 , allloss: 6.4015, dt: 1295.51ms, fracRes: 0.6649, norm(attn): 0.1328, norm(output): 0.9534, norm(x): 0.8493, norm(y): 1.0197, norm:3.3218, tok/sec: 101173.99, flops:106.20, batch-reuse:1
@ 1384 train 5.4856 , allloss: 6.3013, dt: 1315.06ms, fracRes: 0.6641, norm(attn): 0.1348, norm(output): 0.9534, norm(x): 0.8494, norm(y): 1.0196, norm:3.6912, tok/sec: 99669.79, flops:104.62, batch-reuse:1
@ 1385 train 5.5746 , allloss: 6.3644, dt: 1297.29ms, fracRes: 0.6645, norm(attn): 0.1348, norm(output): 0.9533, norm(x): 0.8504, norm(y): 1.0194, norm:3.7298, tok/sec: 101035.19, flops:106.05, batch-reuse:1
@ 1386 train 5.5441 , allloss: 6.3759, dt: 1303.65ms, fracRes: 0.6652, norm(attn): 0.1377, norm(output): 0.9533, norm(x): 0.8520, norm(y): 1.0188, norm:3.6932, tok/sec: 100542.24, flops:105.53, batch-reuse:1
@ 1387 train 5.5224 , allloss: 6.3393, dt: 1296.53ms, fracRes: 0.6655, norm(attn): 0.1387, norm(output): 0.9532, norm(x): 0.8510, norm(y): 1.0189, norm:3.5262, tok/sec: 101094.16, flops:106.11, batch-reuse:1
@ 1388 train 5.5960 , allloss: 6.4018, dt: 1289.73ms, fracRes: 0.6651, norm(attn): 0.1357, norm(output): 0.9531, norm(x): 0.8510, norm(y): 1.0191, norm:4.3404, tok/sec: 101627.43, flops:106.67, batch-reuse:1
@ 1389 train 5.4223 , allloss: 6.1679, dt: 1315.90ms, fracRes: 0.6647, norm(attn): 0.1387, norm(output): 0.9530, norm(x): 0.8512, norm(y): 1.0193, norm:3.3243, tok/sec: 99606.02, flops:104.55, batch-reuse:1
@ 1390 train 5.6863 , allloss: 6.5029, dt: 1319.10ms, fracRes: 0.6640, norm(attn): 0.1367, norm(output): 0.9529, norm(x): 0.8532, norm(y): 1.0193, norm:4.6080, tok/sec: 99365.07, flops:104.30, batch-reuse:1
@ 1391 train 5.5919 , allloss: 6.3377, dt: 1293.12ms, fracRes: 0.6623, norm(attn): 0.1367, norm(output): 0.9528, norm(x): 0.8522, norm(y): 1.0195, norm:3.2972, tok/sec: 101361.21, flops:106.39, batch-reuse:1
@ 1392 train 5.5273 , allloss: 6.3424, dt: 1307.54ms, fracRes: 0.6626, norm(attn): 0.1396, norm(output): 0.9527, norm(x): 0.8501, norm(y): 1.0197, norm:4.1825, tok/sec: 100243.37, flops:105.22, batch-reuse:1
@ 1393 train 5.4939 , allloss: 6.2822, dt: 1311.70ms, fracRes: 0.6643, norm(attn): 0.1377, norm(output): 0.9527, norm(x): 0.8484, norm(y): 1.0197, norm:2.9467, tok/sec: 99925.17, flops:104.88, batch-reuse:1
@ 1394 train 5.4779 , allloss: 6.3054, dt: 1329.23ms, fracRes: 0.6649, norm(attn): 0.1357, norm(output): 0.9526, norm(x): 0.8473, norm(y): 1.0199, norm:3.6348, tok/sec: 98607.34, flops:103.50, batch-reuse:1
@ 1395 train 5.4912 , allloss: 6.3265, dt: 1308.94ms, fracRes: 0.6646, norm(attn): 0.1328, norm(output): 0.9525, norm(x): 0.8484, norm(y): 1.0200, norm:3.0359, tok/sec: 100135.77, flops:105.11, batch-reuse:1
@ 1396 train 5.4951 , allloss: 6.3717, dt: 1297.23ms, fracRes: 0.6655, norm(attn): 0.1328, norm(output): 0.9525, norm(x): 0.8488, norm(y): 1.0201, norm:3.0847, tok/sec: 101039.57, flops:106.05, batch-reuse:1
@ 1397 train 5.5290 , allloss: 6.4064, dt: 1292.91ms, fracRes: 0.6660, norm(attn): 0.1309, norm(output): 0.9525, norm(x): 0.8509, norm(y): 1.0198, norm:3.2615, tok/sec: 101377.34, flops:106.41, batch-reuse:1
@ 1398 train 5.5265 , allloss: 6.3786, dt: 1313.28ms, fracRes: 0.6654, norm(attn): 0.1338, norm(output): 0.9524, norm(x): 0.8514, norm(y): 1.0198, norm:3.3381, tok/sec: 99805.02, flops:104.76, batch-reuse:1
@ 1399 train 5.4578 , allloss: 6.2983, dt: 1317.93ms, fracRes: 0.6652, norm(attn): 0.1348, norm(output): 0.9523, norm(x): 0.8514, norm(y): 1.0197, norm:3.1804, tok/sec: 99453.20, flops:104.39, batch-reuse:1
@ 1400 train 5.5998 , allloss: 6.4754, dt: 1285.11ms, fracRes: 0.6652, norm(attn): 0.1367, norm(output): 0.9522, norm(x): 0.8502, norm(y): 1.0200, norm:3.1846, tok/sec: 101992.71, flops:107.05, batch-reuse:1
@ 1401 train 5.4725 , allloss: 6.2853, dt: 1304.41ms, fracRes: 0.6643, norm(attn): 0.1367, norm(output): 0.9522, norm(x): 0.8499, norm(y): 1.0199, norm:3.1305, tok/sec: 100483.87, flops:105.47, batch-reuse:1
@ 1402 train 5.4196 , allloss: 6.1763, dt: 1282.99ms, fracRes: 0.6641, norm(attn): 0.1387, norm(output): 0.9521, norm(x): 0.8501, norm(y): 1.0200, norm:2.9773, tok/sec: 102161.23, flops:107.23, batch-reuse:1
@ 1403 train 5.5764 , allloss: 6.3220, dt: 1321.54ms, fracRes: 0.6636, norm(attn): 0.1406, norm(output): 0.9520, norm(x): 0.8497, norm(y): 1.0199, norm:3.0785, tok/sec: 99181.43, flops:104.10, batch-reuse:1
@ 1404 train 5.4848 , allloss: 6.2067, dt: 1297.10ms, fracRes: 0.6639, norm(attn): 0.1396, norm(output): 0.9520, norm(x): 0.8508, norm(y): 1.0197, norm:3.0570, tok/sec: 101050.14, flops:106.07, batch-reuse:1
@ 1405 train 5.5032 , allloss: 6.2433, dt: 1333.54ms, fracRes: 0.6642, norm(attn): 0.1406, norm(output): 0.9519, norm(x): 0.8495, norm(y): 1.0198, norm:3.0015, tok/sec: 98288.94, flops:103.17, batch-reuse:1
@ 1406 train 5.6156 , allloss: 6.3625, dt: 1333.10ms, fracRes: 0.6650, norm(attn): 0.1416, norm(output): 0.9519, norm(x): 0.8489, norm(y): 1.0198, norm:2.9092, tok/sec: 98321.02, flops:103.20, batch-reuse:1
@ 1407 train 5.4924 , allloss: 6.2790, dt: 1322.31ms, fracRes: 0.6659, norm(attn): 0.1396, norm(output): 0.9518, norm(x): 0.8476, norm(y): 1.0200, norm:2.4313, tok/sec: 99123.60, flops:104.04, batch-reuse:1
@ 1408 train 5.4981 , allloss: 6.3518, dt: 1293.20ms, fracRes: 0.6663, norm(attn): 0.1377, norm(output): 0.9518, norm(x): 0.8468, norm(y): 1.0200, norm:3.0270, tok/sec: 101355.08, flops:106.39, batch-reuse:1
@ 1409 train 5.4958 , allloss: 6.3205, dt: 1297.97ms, fracRes: 0.6666, norm(attn): 0.1387, norm(output): 0.9517, norm(x): 0.8470, norm(y): 1.0197, norm:2.5670, tok/sec: 100981.93, flops:105.99, batch-reuse:1
@ 1410 train 5.4690 , allloss: 6.3205, dt: 1335.55ms, fracRes: 0.6669, norm(attn): 0.1396, norm(output): 0.9517, norm(x): 0.8470, norm(y): 1.0194, norm:2.9458, tok/sec: 98140.57, flops:103.01, batch-reuse:1
@ 1411 train 5.4690 , allloss: 6.2922, dt: 1313.33ms, fracRes: 0.6669, norm(attn): 0.1396, norm(output): 0.9516, norm(x): 0.8466, norm(y): 1.0195, norm:2.3923, tok/sec: 99801.00, flops:104.75, batch-reuse:1
@ 1412 train 5.4438 , allloss: 6.3408, dt: 1311.80ms, fracRes: 0.6679, norm(attn): 0.1377, norm(output): 0.9516, norm(x): 0.8474, norm(y): 1.0195, norm:2.9164, tok/sec: 99917.51, flops:104.88, batch-reuse:1
@ 1413 train 5.4489 , allloss: 6.3559, dt: 1313.61ms, fracRes: 0.6682, norm(attn): 0.1396, norm(output): 0.9515, norm(x): 0.8480, norm(y): 1.0191, norm:2.1058, tok/sec: 99779.68, flops:104.73, batch-reuse:1
@ 1414 train 5.4572 , allloss: 6.3571, dt: 1305.39ms, fracRes: 0.6678, norm(attn): 0.1387, norm(output): 0.9514, norm(x): 0.8481, norm(y): 1.0193, norm:2.7835, tok/sec: 100408.13, flops:105.39, batch-reuse:1
@ 1415 train 5.5467 , allloss: 6.4621, dt: 1315.40ms, fracRes: 0.6683, norm(attn): 0.1367, norm(output): 0.9514, norm(x): 0.8467, norm(y): 1.0192, norm:2.2192, tok/sec: 99644.04, flops:104.59, batch-reuse:1
@ 1416 train 5.5629 , allloss: 6.5406, dt: 1316.00ms, fracRes: 0.6698, norm(attn): 0.1406, norm(output): 0.9513, norm(x): 0.8447, norm(y): 1.0193, norm:2.7791, tok/sec: 99598.48, flops:104.54, batch-reuse:1
@ 1417 train 5.4827 , allloss: 6.4263, dt: 1329.20ms, fracRes: 0.6690, norm(attn): 0.1406, norm(output): 0.9513, norm(x): 0.8434, norm(y): 1.0193, norm:2.3327, tok/sec: 98609.71, flops:103.50, batch-reuse:1
@ 1418 train 5.4881 , allloss: 6.4815, dt: 1292.02ms, fracRes: 0.6687, norm(attn): 0.1396, norm(output): 0.9512, norm(x): 0.8425, norm(y): 1.0199, norm:2.1226, tok/sec: 101447.58, flops:106.48, batch-reuse:1
@ 1419 train 5.5762 , allloss: 6.5918, dt: 1292.37ms, fracRes: 0.6674, norm(attn): 0.1406, norm(output): 0.9511, norm(x): 0.8426, norm(y): 1.0201, norm:2.3221, tok/sec: 101419.83, flops:106.45, batch-reuse:1
@ 1420 train 5.5642 , allloss: 6.5423, dt: 1316.42ms, fracRes: 0.6681, norm(attn): 0.1396, norm(output): 0.9511, norm(x): 0.8448, norm(y): 1.0198, norm:2.4093, tok/sec: 99567.22, flops:104.51, batch-reuse:1
@ 1421 train 5.5160 , allloss: 6.4611, dt: 1300.22ms, fracRes: 0.6694, norm(attn): 0.1396, norm(output): 0.9511, norm(x): 0.8460, norm(y): 1.0196, norm:2.4572, tok/sec: 100807.48, flops:105.81, batch-reuse:1
@ 1422 train 5.4724 , allloss: 6.4353, dt: 1307.05ms, fracRes: 0.6710, norm(attn): 0.1377, norm(output): 0.9511, norm(x): 0.8466, norm(y): 1.0192, norm:2.1199, tok/sec: 100280.71, flops:105.26, batch-reuse:1
@ 1423 train 5.4860 , allloss: 6.4147, dt: 1289.15ms, fracRes: 0.6711, norm(attn): 0.1416, norm(output): 0.9510, norm(x): 0.8479, norm(y): 1.0188, norm:2.2799, tok/sec: 101673.16, flops:106.72, batch-reuse:1
@ 1424 train 5.4746 , allloss: 6.3662, dt: 1288.72ms, fracRes: 0.6715, norm(attn): 0.1445, norm(output): 0.9509, norm(x): 0.8470, norm(y): 1.0185, norm:2.2482, tok/sec: 101707.19, flops:106.76, batch-reuse:1
@ 1425 train 5.4549 , allloss: 6.3585, dt: 1316.84ms, fracRes: 0.6704, norm(attn): 0.1436, norm(output): 0.9508, norm(x): 0.8438, norm(y): 1.0189, norm:2.2730, tok/sec: 99535.22, flops:104.48, batch-reuse:1
@ 1426 train 5.3577 , allloss: 6.1942, dt: 1335.96ms, fracRes: 0.6694, norm(attn): 0.1406, norm(output): 0.9507, norm(x): 0.8431, norm(y): 1.0195, norm:2.5790, tok/sec: 98110.92, flops:102.98, batch-reuse:1
@ 1427 train 5.4402 , allloss: 6.2761, dt: 1340.31ms, fracRes: 0.6690, norm(attn): 0.1396, norm(output): 0.9507, norm(x): 0.8419, norm(y): 1.0199, norm:2.3073, tok/sec: 97792.28, flops:102.65, batch-reuse:1
@ 1428 train 5.4300 , allloss: 6.2970, dt: 1283.77ms, fracRes: 0.6684, norm(attn): 0.1406, norm(output): 0.9506, norm(x): 0.8426, norm(y): 1.0200, norm:2.5700, tok/sec: 102099.22, flops:107.17, batch-reuse:1
@ 1429 train 5.4270 , allloss: 6.3167, dt: 1313.26ms, fracRes: 0.6683, norm(attn): 0.1426, norm(output): 0.9506, norm(x): 0.8433, norm(y): 1.0198, norm:2.4115, tok/sec: 99806.67, flops:104.76, batch-reuse:1
@ 1430 train 5.4785 , allloss: 6.4547, dt: 1316.58ms, fracRes: 0.6691, norm(attn): 0.1416, norm(output): 0.9505, norm(x): 0.8430, norm(y): 1.0198, norm:2.4257, tok/sec: 99554.67, flops:104.50, batch-reuse:1
@ 1431 train 5.4410 , allloss: 6.3731, dt: 1297.39ms, fracRes: 0.6697, norm(attn): 0.1416, norm(output): 0.9504, norm(x): 0.8426, norm(y): 1.0197, norm:2.3010, tok/sec: 101027.32, flops:106.04, batch-reuse:1
@ 1432 train 5.4073 , allloss: 6.3842, dt: 1310.67ms, fracRes: 0.6708, norm(attn): 0.1445, norm(output): 0.9503, norm(x): 0.8431, norm(y): 1.0193, norm:2.4317, tok/sec: 100003.97, flops:104.97, batch-reuse:1
@ 1433 train 5.5142 , allloss: 6.5065, dt: 1311.37ms, fracRes: 0.6713, norm(attn): 0.1475, norm(output): 0.9502, norm(x): 0.8422, norm(y): 1.0193, norm:2.8692, tok/sec: 99950.51, flops:104.91, batch-reuse:1
@ 1434 train 5.5263 , allloss: 6.4618, dt: 1337.09ms, fracRes: 0.6721, norm(attn): 0.1494, norm(output): 0.9502, norm(x): 0.8432, norm(y): 1.0189, norm:2.2353, tok/sec: 98028.09, flops:102.89, batch-reuse:1
@ 1435 train 5.4535 , allloss: 6.4241, dt: 1305.89ms, fracRes: 0.6718, norm(attn): 0.1445, norm(output): 0.9501, norm(x): 0.8441, norm(y): 1.0186, norm:2.8625, tok/sec: 100370.20, flops:105.35, batch-reuse:1
@ 1436 train 5.4380 , allloss: 6.3477, dt: 1320.32ms, fracRes: 0.6721, norm(attn): 0.1455, norm(output): 0.9501, norm(x): 0.8451, norm(y): 1.0184, norm:2.3900, tok/sec: 99272.62, flops:104.20, batch-reuse:1
@ 1437 train 5.4462 , allloss: 6.3512, dt: 1325.17ms, fracRes: 0.6711, norm(attn): 0.1475, norm(output): 0.9500, norm(x): 0.8459, norm(y): 1.0184, norm:2.8508, tok/sec: 98909.66, flops:103.82, batch-reuse:1
@ 1438 train 5.3638 , allloss: 6.2934, dt: 1300.23ms, fracRes: 0.6712, norm(attn): 0.1494, norm(output): 0.9499, norm(x): 0.8450, norm(y): 1.0185, norm:2.2439, tok/sec: 100806.46, flops:105.81, batch-reuse:1
@ 1439 train 5.3937 , allloss: 6.4133, dt: 1307.92ms, fracRes: 0.6718, norm(attn): 0.1475, norm(output): 0.9499, norm(x): 0.8443, norm(y): 1.0186, norm:2.7122, tok/sec: 100213.72, flops:105.19, batch-reuse:1
@ 1440 train 5.4240 , allloss: 6.4600, dt: 1324.35ms, fracRes: 0.6721, norm(attn): 0.1455, norm(output): 0.9498, norm(x): 0.8428, norm(y): 1.0190, norm:2.1094, tok/sec: 98970.75, flops:103.88, batch-reuse:1
@ 1441 train 5.4041 , allloss: 6.4670, dt: 1325.14ms, fracRes: 0.6725, norm(attn): 0.1455, norm(output): 0.9497, norm(x): 0.8408, norm(y): 1.0192, norm:2.1313, tok/sec: 98911.64, flops:103.82, batch-reuse:1
@ 1442 train 5.4084 , allloss: 6.4479, dt: 1311.81ms, fracRes: 0.6728, norm(attn): 0.1475, norm(output): 0.9497, norm(x): 0.8409, norm(y): 1.0191, norm:2.1245, tok/sec: 99916.58, flops:104.88, batch-reuse:1
@ 1443 train 5.3859 , allloss: 6.4253, dt: 1321.64ms, fracRes: 0.6722, norm(attn): 0.1504, norm(output): 0.9496, norm(x): 0.8403, norm(y): 1.0191, norm:2.2815, tok/sec: 99173.43, flops:104.10, batch-reuse:1
@ 1444 train 5.4177 , allloss: 6.4562, dt: 1317.57ms, fracRes: 0.6733, norm(attn): 0.1436, norm(output): 0.9495, norm(x): 0.8397, norm(y): 1.0191, norm:2.5590, tok/sec: 99479.73, flops:104.42, batch-reuse:1
@ 1445 train 5.5068 , allloss: 6.4266, dt: 1289.00ms, fracRes: 0.6727, norm(attn): 0.1455, norm(output): 0.9494, norm(x): 0.8402, norm(y): 1.0192, norm:2.4127, tok/sec: 101685.29, flops:106.73, batch-reuse:1
@ 1446 train 5.4593 , allloss: 6.3337, dt: 1306.37ms, fracRes: 0.6724, norm(attn): 0.1494, norm(output): 0.9494, norm(x): 0.8407, norm(y): 1.0187, norm:2.1864, tok/sec: 100332.65, flops:105.31, batch-reuse:1
@ 1447 train 5.4307 , allloss: 6.3072, dt: 1301.88ms, fracRes: 0.6715, norm(attn): 0.1504, norm(output): 0.9493, norm(x): 0.8426, norm(y): 1.0185, norm:2.5100, tok/sec: 100678.79, flops:105.68, batch-reuse:1
@ 1448 train 5.3935 , allloss: 6.1566, dt: 1295.44ms, fracRes: 0.6692, norm(attn): 0.1494, norm(output): 0.9493, norm(x): 0.8441, norm(y): 1.0184, norm:2.1598, tok/sec: 101179.19, flops:106.20, batch-reuse:1
@ 1449 train 5.4863 , allloss: 6.2069, dt: 1298.38ms, fracRes: 0.6693, norm(attn): 0.1504, norm(output): 0.9493, norm(x): 0.8441, norm(y): 1.0183, norm:2.3472, tok/sec: 100950.27, flops:105.96, batch-reuse:1
@ 1450 train 5.4716 , allloss: 6.2456, dt: 1300.98ms, fracRes: 0.6697, norm(attn): 0.1484, norm(output): 0.9493, norm(x): 0.8428, norm(y): 1.0184, norm:2.4788, tok/sec: 100748.62, flops:105.75, batch-reuse:1
@ 1451 train 5.4829 , allloss: 6.2469, dt: 1329.07ms, fracRes: 0.6703, norm(attn): 0.1543, norm(output): 0.9492, norm(x): 0.8430, norm(y): 1.0186, norm:2.4001, tok/sec: 98619.17, flops:103.51, batch-reuse:1
@ 1452 train 5.3664 , allloss: 6.1992, dt: 1331.97ms, fracRes: 0.6708, norm(attn): 0.1504, norm(output): 0.9491, norm(x): 0.8420, norm(y): 1.0189, norm:2.6609, tok/sec: 98404.27, flops:103.29, batch-reuse:1
@ 1453 train 5.4366 , allloss: 6.2783, dt: 1291.98ms, fracRes: 0.6714, norm(attn): 0.1504, norm(output): 0.9490, norm(x): 0.8406, norm(y): 1.0190, norm:2.7674, tok/sec: 101450.41, flops:106.49, batch-reuse:1
@ 1454 train 5.4360 , allloss: 6.2551, dt: 1309.66ms, fracRes: 0.6722, norm(attn): 0.1465, norm(output): 0.9490, norm(x): 0.8399, norm(y): 1.0192, norm:2.7921, tok/sec: 100080.96, flops:105.05, batch-reuse:1
@ 1455 train 5.3538 , allloss: 6.1379, dt: 1306.38ms, fracRes: 0.6712, norm(attn): 0.1465, norm(output): 0.9489, norm(x): 0.8400, norm(y): 1.0191, norm:2.6742, tok/sec: 100332.29, flops:105.31, batch-reuse:1
@ 1456 train 5.3748 , allloss: 6.1390, dt: 1297.74ms, fracRes: 0.6714, norm(attn): 0.1494, norm(output): 0.9488, norm(x): 0.8393, norm(y): 1.0190, norm:2.0534, tok/sec: 100999.90, flops:106.01, batch-reuse:1
@ 1457 train 5.4174 , allloss: 6.1741, dt: 1299.32ms, fracRes: 0.6707, norm(attn): 0.1504, norm(output): 0.9488, norm(x): 0.8399, norm(y): 1.0189, norm:2.5415, tok/sec: 100877.18, flops:105.88, batch-reuse:1
@ 1458 train 5.4335 , allloss: 6.1962, dt: 1298.79ms, fracRes: 0.6703, norm(attn): 0.1523, norm(output): 0.9488, norm(x): 0.8401, norm(y): 1.0189, norm:1.8608, tok/sec: 100918.79, flops:105.93, batch-reuse:1
@ 1459 train 5.4824 , allloss: 6.1847, dt: 1329.19ms, fracRes: 0.6723, norm(attn): 0.1543, norm(output): 0.9487, norm(x): 0.8409, norm(y): 1.0185, norm:1.9610, tok/sec: 98610.43, flops:103.50, batch-reuse:1
@ 1460 train 5.3861 , allloss: 6.0528, dt: 1293.03ms, fracRes: 0.6720, norm(attn): 0.1484, norm(output): 0.9486, norm(x): 0.8402, norm(y): 1.0184, norm:1.7211, tok/sec: 101368.33, flops:106.40, batch-reuse:1
@ 1461 train 5.3292 , allloss: 6.0058, dt: 1305.50ms, fracRes: 0.6712, norm(attn): 0.1504, norm(output): 0.9486, norm(x): 0.8413, norm(y): 1.0182, norm:1.8636, tok/sec: 100400.08, flops:105.38, batch-reuse:1
@ 1462 train 5.3992 , allloss: 6.0945, dt: 1341.13ms, fracRes: 0.6708, norm(attn): 0.1523, norm(output): 0.9485, norm(x): 0.8405, norm(y): 1.0187, norm:1.9413, tok/sec: 97732.56, flops:102.58, batch-reuse:1
@ 1463 train 5.3822 , allloss: 6.0576, dt: 1331.36ms, fracRes: 0.6698, norm(attn): 0.1572, norm(output): 0.9484, norm(x): 0.8387, norm(y): 1.0189, norm:2.1710, tok/sec: 98449.59, flops:103.34, batch-reuse:1
@ 1464 train 5.4008 , allloss: 6.0522, dt: 1264.39ms, fracRes: 0.6697, norm(attn): 0.1562, norm(output): 0.9484, norm(x): 0.8363, norm(y): 1.0193, norm:2.0688, tok/sec: 103664.61, flops:108.81, batch-reuse:1
@ 1465 train 5.2953 , allloss: 5.9413, dt: 1303.36ms, fracRes: 0.6699, norm(attn): 0.1533, norm(output): 0.9483, norm(x): 0.8373, norm(y): 1.0196, norm:2.3386, tok/sec: 100564.93, flops:105.56, batch-reuse:1
@ 1466 train 5.2874 , allloss: 5.9540, dt: 1333.55ms, fracRes: 0.6695, norm(attn): 0.1533, norm(output): 0.9483, norm(x): 0.8386, norm(y): 1.0194, norm:2.3455, tok/sec: 98287.99, flops:103.17, batch-reuse:1
@ 1467 train 5.3835 , allloss: 6.0139, dt: 1291.90ms, fracRes: 0.6705, norm(attn): 0.1514, norm(output): 0.9482, norm(x): 0.8388, norm(y): 1.0194, norm:2.2459, tok/sec: 101456.94, flops:106.49, batch-reuse:1
@ 1468 train 5.4298 , allloss: 6.0443, dt: 1296.86ms, fracRes: 0.6712, norm(attn): 0.1504, norm(output): 0.9482, norm(x): 0.8397, norm(y): 1.0191, norm:2.1404, tok/sec: 101068.64, flops:106.08, batch-reuse:1
@ 1469 train 5.5091 , allloss: 6.1339, dt: 1299.06ms, fracRes: 0.6720, norm(attn): 0.1504, norm(output): 0.9482, norm(x): 0.8409, norm(y): 1.0187, norm:2.0220, tok/sec: 100897.38, flops:105.91, batch-reuse:1
@ 1470 train 5.3862 , allloss: 5.9993, dt: 1301.43ms, fracRes: 0.6711, norm(attn): 0.1504, norm(output): 0.9482, norm(x): 0.8431, norm(y): 1.0183, norm:1.7092, tok/sec: 100713.90, flops:105.71, batch-reuse:1
@ 1471 train 5.3188 , allloss: 5.9461, dt: 1319.46ms, fracRes: 0.6716, norm(attn): 0.1562, norm(output): 0.9480, norm(x): 0.8417, norm(y): 1.0182, norm:1.7192, tok/sec: 99337.45, flops:104.27, batch-reuse:1
@ 1472 train 5.3542 , allloss: 5.9085, dt: 1312.91ms, fracRes: 0.6721, norm(attn): 0.1543, norm(output): 0.9480, norm(x): 0.8392, norm(y): 1.0186, norm:1.4229, tok/sec: 99833.53, flops:104.79, batch-reuse:1
@ 1473 train 5.4034 , allloss: 6.0173, dt: 1344.64ms, fracRes: 0.6730, norm(attn): 0.1494, norm(output): 0.9479, norm(x): 0.8385, norm(y): 1.0185, norm:1.7791, tok/sec: 97477.56, flops:102.32, batch-reuse:1
@ 1474 train 5.5446 , allloss: 6.1736, dt: 1298.51ms, fracRes: 0.6731, norm(attn): 0.1553, norm(output): 0.9478, norm(x): 0.8365, norm(y): 1.0187, norm:1.6332, tok/sec: 100940.19, flops:105.95, batch-reuse:1
@ 1475 train 5.3961 , allloss: 6.1700, dt: 1283.53ms, fracRes: 0.6750, norm(attn): 0.1504, norm(output): 0.9478, norm(x): 0.8348, norm(y): 1.0190, norm:1.9543, tok/sec: 102118.02, flops:107.19, batch-reuse:1
@ 1476 train 5.3363 , allloss: 6.0030, dt: 1302.79ms, fracRes: 0.6762, norm(attn): 0.1475, norm(output): 0.9478, norm(x): 0.8346, norm(y): 1.0187, norm:1.4956, tok/sec: 100608.96, flops:105.60, batch-reuse:1
@ 1477 train 5.3562 , allloss: 6.0583, dt: 1294.44ms, fracRes: 0.6774, norm(attn): 0.1523, norm(output): 0.9476, norm(x): 0.8348, norm(y): 1.0182, norm:1.5353, tok/sec: 101257.40, flops:106.28, batch-reuse:1
@ 1478 train 5.3313 , allloss: 5.9934, dt: 1306.53ms, fracRes: 0.6764, norm(attn): 0.1514, norm(output): 0.9476, norm(x): 0.8353, norm(y): 1.0183, norm:1.2790, tok/sec: 100320.59, flops:105.30, batch-reuse:1
@ 1479 train 5.3692 , allloss: 6.0850, dt: 1298.53ms, fracRes: 0.6782, norm(attn): 0.1475, norm(output): 0.9477, norm(x): 0.8349, norm(y): 1.0184, norm:1.5410, tok/sec: 100939.01, flops:105.95, batch-reuse:1
@ 1480 train 5.3899 , allloss: 6.0801, dt: 1277.70ms, fracRes: 0.6771, norm(attn): 0.1533, norm(output): 0.9476, norm(x): 0.8356, norm(y): 1.0181, norm:1.5566, tok/sec: 102584.18, flops:107.68, batch-reuse:1
@ 1481 train 5.4034 , allloss: 6.0639, dt: 1311.08ms, fracRes: 0.6765, norm(attn): 0.1621, norm(output): 0.9474, norm(x): 0.8391, norm(y): 1.0176, norm:1.6067, tok/sec: 99972.51, flops:104.93, batch-reuse:1
@ 1482 train 5.4324 , allloss: 6.0891, dt: 1311.66ms, fracRes: 0.6773, norm(attn): 0.1699, norm(output): 0.9474, norm(x): 0.8381, norm(y): 1.0176, norm:1.2981, tok/sec: 99928.37, flops:104.89, batch-reuse:1
@ 1483 train 5.4699 , allloss: 6.2143, dt: 1313.80ms, fracRes: 0.6815, norm(attn): 0.1553, norm(output): 0.9474, norm(x): 0.8347, norm(y): 1.0179, norm:1.4044, tok/sec: 99765.67, flops:104.72, batch-reuse:1
@ 1484 train 5.5240 , allloss: 6.3306, dt: 1301.92ms, fracRes: 0.6846, norm(attn): 0.1484, norm(output): 0.9473, norm(x): 0.8334, norm(y): 1.0184, norm:1.3130, tok/sec: 100675.63, flops:105.67, batch-reuse:1
@ 1485 train 5.5900 , allloss: 6.3767, dt: 1289.14ms, fracRes: 0.6850, norm(attn): 0.1484, norm(output): 0.9472, norm(x): 0.8311, norm(y): 1.0188, norm:1.3081, tok/sec: 101674.06, flops:106.72, batch-reuse:1
@ 1486 train 5.5728 , allloss: 6.3642, dt: 1287.59ms, fracRes: 0.6865, norm(attn): 0.1504, norm(output): 0.9471, norm(x): 0.8291, norm(y): 1.0190, norm:1.1878, tok/sec: 101796.77, flops:106.85, batch-reuse:1
@ 1487 train 5.5339 , allloss: 6.3724, dt: 1295.59ms, fracRes: 0.6882, norm(attn): 0.1523, norm(output): 0.9470, norm(x): 0.8269, norm(y): 1.0188, norm:1.0172, tok/sec: 101167.89, flops:106.19, batch-reuse:1
@ 1488 train 5.5048 , allloss: 6.4368, dt: 1285.42ms, fracRes: 0.6923, norm(attn): 0.1553, norm(output): 0.9470, norm(x): 0.8239, norm(y): 1.0185, norm:1.1546, tok/sec: 101968.16, flops:107.03, batch-reuse:1
@ 1489 train 5.6545 , allloss: 6.5908, dt: 1301.28ms, fracRes: 0.6932, norm(attn): 0.1504, norm(output): 0.9469, norm(x): 0.8254, norm(y): 1.0184, norm:0.9309, tok/sec: 100725.14, flops:105.72, batch-reuse:1
@ 1490 train 5.6820 , allloss: 6.5979, dt: 1300.10ms, fracRes: 0.6941, norm(attn): 0.1455, norm(output): 0.9468, norm(x): 0.8252, norm(y): 1.0186, norm:1.0355, tok/sec: 100817.02, flops:105.82, batch-reuse:1
@ 1491 train 5.6727 , allloss: 6.5769, dt: 1287.58ms, fracRes: 0.6941, norm(attn): 0.1475, norm(output): 0.9467, norm(x): 0.8262, norm(y): 1.0185, norm:1.1556, tok/sec: 101797.09, flops:106.85, batch-reuse:1
@ 1492 train 5.5313 , allloss: 6.4110, dt: 1297.21ms, fracRes: 0.6945, norm(attn): 0.1445, norm(output): 0.9466, norm(x): 0.8264, norm(y): 1.0183, norm:0.8928, tok/sec: 101041.60, flops:106.06, batch-reuse:1
@ 1493 train 5.4922 , allloss: 6.3417, dt: 1297.99ms, fracRes: 0.6939, norm(attn): 0.1465, norm(output): 0.9464, norm(x): 0.8265, norm(y): 1.0184, norm:0.9137, tok/sec: 100980.93, flops:105.99, batch-reuse:1
@ 1494 train 5.5209 , allloss: 6.3976, dt: 1301.20ms, fracRes: 0.6949, norm(attn): 0.1553, norm(output): 0.9463, norm(x): 0.8245, norm(y): 1.0181, norm:0.7917, tok/sec: 100731.86, flops:105.73, batch-reuse:1
@ 1495 train 5.4839 , allloss: 6.3602, dt: 1326.43ms, fracRes: 0.6963, norm(attn): 0.1602, norm(output): 0.9462, norm(x): 0.8212, norm(y): 1.0180, norm:0.6732, tok/sec: 98815.63, flops:103.72, batch-reuse:1
@ 1496 train 5.5059 , allloss: 6.3672, dt: 1321.56ms, fracRes: 0.6963, norm(attn): 0.1602, norm(output): 0.9460, norm(x): 0.8209, norm(y): 1.0182, norm:0.6376, tok/sec: 99179.67, flops:104.10, batch-reuse:1
@ 1497 train 5.3898 , allloss: 6.2179, dt: 1317.50ms, fracRes: 0.6970, norm(attn): 0.1582, norm(output): 0.9460, norm(x): 0.8210, norm(y): 1.0183, norm:0.8647, tok/sec: 99485.27, flops:104.42, batch-reuse:1
@ 1498 train 5.5865 , allloss: 6.4059, dt: 1341.76ms, fracRes: 0.6973, norm(attn): 0.1523, norm(output): 0.9459, norm(x): 0.8217, norm(y): 1.0188, norm:0.9963, tok/sec: 97686.90, flops:102.54, batch-reuse:1
@ 1499 train 5.5788 , allloss: 6.3809, dt: 1337.22ms, fracRes: 0.6966, norm(attn): 0.1533, norm(output): 0.9458, norm(x): 0.8228, norm(y): 1.0187, norm:1.3218, tok/sec: 98018.18, flops:102.88, batch-reuse:1
@ 1500 train 5.6098 , allloss: 6.3783, dt: 1317.48ms, fracRes: 0.6964, norm(attn): 0.1562, norm(output): 0.9456, norm(x): 0.8210, norm(y): 1.0185, norm:0.9431, tok/sec: 99487.13, flops:104.42, batch-reuse:1
@ 1501 train 5.4993 , allloss: 6.2176, dt: 1273.93ms, fracRes: 0.6975, norm(attn): 0.1592, norm(output): 0.9455, norm(x): 0.8192, norm(y): 1.0183, norm:1.0777, tok/sec: 102887.97, flops:107.99, batch-reuse:1
@ 1502 train 5.5263 , allloss: 6.2400, dt: 1295.13ms, fracRes: 0.6984, norm(attn): 0.1621, norm(output): 0.9454, norm(x): 0.8190, norm(y): 1.0180, norm:1.1965, tok/sec: 101203.61, flops:106.23, batch-reuse:1
@ 1503 train 5.5910 , allloss: 6.2897, dt: 1321.42ms, fracRes: 0.6985, norm(attn): 0.1562, norm(output): 0.9455, norm(x): 0.8199, norm(y): 1.0177, norm:1.1656, tok/sec: 99190.04, flops:104.11, batch-reuse:1
@ 1504 train 5.5784 , allloss: 6.2639, dt: 1321.41ms, fracRes: 0.6985, norm(attn): 0.1533, norm(output): 0.9454, norm(x): 0.8212, norm(y): 1.0176, norm:0.7439, tok/sec: 99191.00, flops:104.11, batch-reuse:1
@ 1505 train 5.5261 , allloss: 6.2016, dt: 1303.16ms, fracRes: 0.6987, norm(attn): 0.1523, norm(output): 0.9453, norm(x): 0.8222, norm(y): 1.0176, norm:0.8414, tok/sec: 100580.32, flops:105.57, batch-reuse:1
@ 1506 train 5.5705 , allloss: 6.2385, dt: 1311.10ms, fracRes: 0.6988, norm(attn): 0.1533, norm(output): 0.9453, norm(x): 0.8229, norm(y): 1.0174, norm:0.7128, tok/sec: 99971.07, flops:104.93, batch-reuse:1
@ 1507 train 5.5731 , allloss: 6.2388, dt: 1324.01ms, fracRes: 0.6982, norm(attn): 0.1562, norm(output): 0.9451, norm(x): 0.8214, norm(y): 1.0176, norm:0.8632, tok/sec: 98996.60, flops:103.91, batch-reuse:1
@ 1508 train 5.5383 , allloss: 6.1818, dt: 1318.77ms, fracRes: 0.6984, norm(attn): 0.1611, norm(output): 0.9450, norm(x): 0.8200, norm(y): 1.0174, norm:0.6271, tok/sec: 99389.84, flops:104.32, batch-reuse:1
@ 1509 train 5.4917 , allloss: 6.1177, dt: 1304.21ms, fracRes: 0.6989, norm(attn): 0.1602, norm(output): 0.9449, norm(x): 0.8194, norm(y): 1.0175, norm:0.6360, tok/sec: 100498.81, flops:105.49, batch-reuse:1
@ 1510 train 5.5272 , allloss: 6.1414, dt: 1307.86ms, fracRes: 0.6990, norm(attn): 0.1553, norm(output): 0.9448, norm(x): 0.8190, norm(y): 1.0179, norm:0.6347, tok/sec: 100218.48, flops:105.19, batch-reuse:1
@ 1511 train 5.5819 , allloss: 6.1815, dt: 1308.60ms, fracRes: 0.6985, norm(attn): 0.1523, norm(output): 0.9446, norm(x): 0.8169, norm(y): 1.0185, norm:1.0436, tok/sec: 100161.74, flops:105.13, batch-reuse:1
@ 1512 train 5.6373 , allloss: 6.2267, dt: 1327.25ms, fracRes: 0.6985, norm(attn): 0.1572, norm(output): 0.9445, norm(x): 0.8182, norm(y): 1.0181, norm:1.3431, tok/sec: 98754.23, flops:103.66, batch-reuse:1
@ 1513 train 5.5349 , allloss: 6.1192, dt: 1278.26ms, fracRes: 0.6989, norm(attn): 0.1611, norm(output): 0.9443, norm(x): 0.8184, norm(y): 1.0176, norm:0.9022, tok/sec: 102539.39, flops:107.63, batch-reuse:1
@ 1514 train 5.6633 , allloss: 6.2469, dt: 1292.55ms, fracRes: 0.6996, norm(attn): 0.1592, norm(output): 0.9443, norm(x): 0.8205, norm(y): 1.0173, norm:0.9998, tok/sec: 101405.98, flops:106.44, batch-reuse:1
@ 1515 train 5.5300 , allloss: 6.1131, dt: 1297.29ms, fracRes: 0.6998, norm(attn): 0.1562, norm(output): 0.9442, norm(x): 0.8222, norm(y): 1.0172, norm:0.7391, tok/sec: 101034.91, flops:106.05, batch-reuse:1
@ 1516 train 5.4169 , allloss: 5.9971, dt: 1300.82ms, fracRes: 0.6996, norm(attn): 0.1553, norm(output): 0.9441, norm(x): 0.8206, norm(y): 1.0175, norm:0.6964, tok/sec: 100760.75, flops:105.76, batch-reuse:1
@ 1517 train 5.4831 , allloss: 6.0700, dt: 1298.67ms, fracRes: 0.6997, norm(attn): 0.1543, norm(output): 0.9440, norm(x): 0.8198, norm(y): 1.0176, norm:1.0402, tok/sec: 100927.79, flops:105.94, batch-reuse:1
@ 1518 train 5.4727 , allloss: 6.0525, dt: 1321.87ms, fracRes: 0.6992, norm(attn): 0.1572, norm(output): 0.9438, norm(x): 0.8184, norm(y): 1.0177, norm:0.6891, tok/sec: 99156.29, flops:104.08, batch-reuse:1
@ 1519 train 5.4783 , allloss: 6.0562, dt: 1299.34ms, fracRes: 0.6995, norm(attn): 0.1582, norm(output): 0.9437, norm(x): 0.8170, norm(y): 1.0177, norm:0.6170, tok/sec: 100876.16, flops:105.88, batch-reuse:1
@ 1520 train 5.4937 , allloss: 6.0710, dt: 1310.69ms, fracRes: 0.6993, norm(attn): 0.1572, norm(output): 0.9436, norm(x): 0.8160, norm(y): 1.0181, norm:0.7153, tok/sec: 100002.11, flops:104.97, batch-reuse:1
@ 1521 train 5.4717 , allloss: 6.0463, dt: 1305.11ms, fracRes: 0.6992, norm(attn): 0.1572, norm(output): 0.9434, norm(x): 0.8161, norm(y): 1.0183, norm:0.6022, tok/sec: 100430.07, flops:105.41, batch-reuse:1
@ 1522 train 5.4847 , allloss: 6.0571, dt: 1287.90ms, fracRes: 0.6989, norm(attn): 0.1562, norm(output): 0.9432, norm(x): 0.8164, norm(y): 1.0185, norm:0.6319, tok/sec: 101771.73, flops:106.82, batch-reuse:1
@ 1523 train 5.5339 , allloss: 6.1047, dt: 1302.99ms, fracRes: 0.6984, norm(attn): 0.1572, norm(output): 0.9431, norm(x): 0.8161, norm(y): 1.0184, norm:0.8088, tok/sec: 100593.40, flops:105.59, batch-reuse:1
@ 1524 train 5.4755 , allloss: 6.0441, dt: 1300.46ms, fracRes: 0.6989, norm(attn): 0.1562, norm(output): 0.9430, norm(x): 0.8167, norm(y): 1.0183, norm:0.8235, tok/sec: 100788.61, flops:105.79, batch-reuse:1
@ 1525 train 5.4495 , allloss: 6.0158, dt: 1349.96ms, fracRes: 0.6996, norm(attn): 0.1572, norm(output): 0.9429, norm(x): 0.8160, norm(y): 1.0179, norm:0.6826, tok/sec: 97093.40, flops:101.91, batch-reuse:1
@ 1526 train 5.5449 , allloss: 6.1107, dt: 1328.50ms, fracRes: 0.6994, norm(attn): 0.1572, norm(output): 0.9427, norm(x): 0.8160, norm(y): 1.0177, norm:0.8148, tok/sec: 98662.02, flops:103.56, batch-reuse:1
@ 1527 train 5.4577 , allloss: 6.0205, dt: 1303.69ms, fracRes: 0.6987, norm(attn): 0.1562, norm(output): 0.9427, norm(x): 0.8170, norm(y): 1.0177, norm:0.9517, tok/sec: 100539.21, flops:105.53, batch-reuse:1
@ 1528 train 5.4923 , allloss: 6.0535, dt: 1308.93ms, fracRes: 0.6984, norm(attn): 0.1543, norm(output): 0.9426, norm(x): 0.8169, norm(y): 1.0180, norm:0.9333, tok/sec: 100136.67, flops:105.11, batch-reuse:1
@ 1529 train 5.4326 , allloss: 5.9920, dt: 1297.31ms, fracRes: 0.6985, norm(attn): 0.1562, norm(output): 0.9424, norm(x): 0.8160, norm(y): 1.0182, norm:0.8830, tok/sec: 101033.46, flops:106.05, batch-reuse:1
@ 1530 train 5.4565 , allloss: 6.0153, dt: 1289.53ms, fracRes: 0.6987, norm(attn): 0.1572, norm(output): 0.9423, norm(x): 0.8148, norm(y): 1.0181, norm:1.0390, tok/sec: 101643.17, flops:106.69, batch-reuse:1
@ 1531 train 5.3658 , allloss: 5.9227, dt: 1309.64ms, fracRes: 0.6987, norm(attn): 0.1611, norm(output): 0.9422, norm(x): 0.8134, norm(y): 1.0179, norm:1.0147, tok/sec: 100082.60, flops:105.05, batch-reuse:1
@ 1532 train 5.4465 , allloss: 6.0028, dt: 1288.91ms, fracRes: 0.6988, norm(attn): 0.1572, norm(output): 0.9421, norm(x): 0.8136, norm(y): 1.0180, norm:0.9727, tok/sec: 101691.74, flops:106.74, batch-reuse:1
@ 1533 train 5.3974 , allloss: 5.9530, dt: 1317.27ms, fracRes: 0.6991, norm(attn): 0.1562, norm(output): 0.9420, norm(x): 0.8132, norm(y): 1.0182, norm:1.0441, tok/sec: 99502.88, flops:104.44, batch-reuse:1
@ 1534 train 5.4629 , allloss: 6.0209, dt: 1334.58ms, fracRes: 0.6990, norm(attn): 0.1572, norm(output): 0.9420, norm(x): 0.8123, norm(y): 1.0181, norm:0.9959, tok/sec: 98212.09, flops:103.09, batch-reuse:1
@ 1535 train 5.4788 , allloss: 6.0328, dt: 1296.81ms, fracRes: 0.6984, norm(attn): 0.1641, norm(output): 0.9418, norm(x): 0.8097, norm(y): 1.0182, norm:1.1599, tok/sec: 101072.45, flops:106.09, batch-reuse:1
@ 1536 train 5.4495 , allloss: 6.0026, dt: 1284.96ms, fracRes: 0.6984, norm(attn): 0.1602, norm(output): 0.9418, norm(x): 0.8097, norm(y): 1.0181, norm:1.2036, tok/sec: 102005.11, flops:107.07, batch-reuse:1
@ 1537 train 5.4298 , allloss: 5.9818, dt: 1280.49ms, fracRes: 0.6986, norm(attn): 0.1543, norm(output): 0.9418, norm(x): 0.8098, norm(y): 1.0184, norm:0.9567, tok/sec: 102360.94, flops:107.44, batch-reuse:1
@ 1538 train 5.3523 , allloss: 5.9031, dt: 1290.38ms, fracRes: 0.6988, norm(attn): 0.1543, norm(output): 0.9417, norm(x): 0.8101, norm(y): 1.0184, norm:0.8726, tok/sec: 101575.94, flops:106.62, batch-reuse:1
@ 1539 train 5.4331 , allloss: 5.9847, dt: 1290.59ms, fracRes: 0.6991, norm(attn): 0.1562, norm(output): 0.9416, norm(x): 0.8101, norm(y): 1.0181, norm:0.9555, tok/sec: 101559.90, flops:106.60, batch-reuse:1
@ 1540 train 5.4140 , allloss: 5.9627, dt: 1285.90ms, fracRes: 0.6989, norm(attn): 0.1641, norm(output): 0.9414, norm(x): 0.8100, norm(y): 1.0178, norm:1.0949, tok/sec: 101930.33, flops:106.99, batch-reuse:1
@ 1541 train 5.3786 , allloss: 5.9259, dt: 1308.58ms, fracRes: 0.6990, norm(attn): 0.1592, norm(output): 0.9413, norm(x): 0.8111, norm(y): 1.0177, norm:0.9525, tok/sec: 100163.51, flops:105.13, batch-reuse:1
@ 1542 train 5.4318 , allloss: 5.9780, dt: 1276.27ms, fracRes: 0.6989, norm(attn): 0.1572, norm(output): 0.9413, norm(x): 0.8125, norm(y): 1.0177, norm:0.9741, tok/sec: 102699.20, flops:107.80, batch-reuse:1
@ 1543 train 5.7308 , allloss: 6.2781, dt: 1291.48ms, fracRes: 0.6990, norm(attn): 0.1553, norm(output): 0.9413, norm(x): 0.8126, norm(y): 1.0178, norm:1.1865, tok/sec: 101489.59, flops:106.53, batch-reuse:1
@ 1544 train 5.3084 , allloss: 5.8530, dt: 1291.98ms, fracRes: 0.6986, norm(attn): 0.1533, norm(output): 0.9411, norm(x): 0.8121, norm(y): 1.0180, norm:1.1501, tok/sec: 101450.62, flops:106.49, batch-reuse:1
@ 1545 train 5.4222 , allloss: 5.9642, dt: 1312.32ms, fracRes: 0.6989, norm(attn): 0.1553, norm(output): 0.9410, norm(x): 0.8118, norm(y): 1.0177, norm:1.3234, tok/sec: 99877.73, flops:104.83, batch-reuse:1
@ 1546 train 5.9118 , allloss: 6.4530, dt: 1274.41ms, fracRes: 0.6989, norm(attn): 0.1611, norm(output): 0.9408, norm(x): 0.8108, norm(y): 1.0171, norm:1.7169, tok/sec: 102849.24, flops:107.95, batch-reuse:1
@ 1547 train 5.4657 , allloss: 6.0046, dt: 1282.27ms, fracRes: 0.6997, norm(attn): 0.1699, norm(output): 0.9406, norm(x): 0.8102, norm(y): 1.0167, norm:1.1379, tok/sec: 102218.71, flops:107.29, batch-reuse:1
@ 1548 train 5.5538 , allloss: 6.0916, dt: 1333.54ms, fracRes: 0.7002, norm(attn): 0.1602, norm(output): 0.9407, norm(x): 0.8116, norm(y): 1.0170, norm:1.0776, tok/sec: 98289.10, flops:103.17, batch-reuse:1
@ 1549 train 5.4830 , allloss: 6.0252, dt: 1308.12ms, fracRes: 0.6989, norm(attn): 0.1553, norm(output): 0.9407, norm(x): 0.8117, norm(y): 1.0175, norm:1.0199, tok/sec: 100198.59, flops:105.17, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0060, -0.0410, -0.0157,  ..., -0.0099, -0.0119,  0.0521],
        [-0.0030, -0.0364, -0.0283,  ..., -0.0535, -0.0232,  0.0496],
        [-0.0101, -0.0570,  0.0135,  ...,  0.0033, -0.0026,  0.0657],
        ...,
        [ 0.0181,  0.0878, -0.0210,  ...,  0.0024, -0.0034, -0.0091],
        [-0.0162, -0.0111,  0.0438,  ...,  0.0182,  0.0322,  0.0464],
        [ 0.0219, -0.0361,  0.0299,  ..., -0.0123,  0.0385,  0.0146]], device='cuda:0', requires_grad=True)
K: tensor([ 4.6562, -3.7812,  0.2871,  3.4844, -4.5312,  3.7188, -1.9453,  5.6250, -5.4375, -0.4824, -3.3125, -4.2812,  5.3125, -4.7188, -0.1973,  0.2441, -0.9062, -4.2188,  6.4688, -6.4688,  5.8750,  3.5312, -6.7812, -0.3496, -2.7031, -2.1094,  2.9688, -3.5938, -4.9375, -2.4062,  6.1562, -0.0938,
         2.6719,  4.7500, -3.0781, -4.2188,  1.9844,  3.8281, -2.4844, -5.1250,  4.6250, -2.6250, -0.5273, -2.9375, -3.7031, -2.7812, -1.0703,  3.3281, -0.0986,  3.2031,  3.5312, -4.1250, -5.4688,  5.2500,  3.4688, -3.0938,  4.6875,  4.6562, -2.0156, -1.8594, -2.9375, -1.2578, -1.7734, -0.5000],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0932,  0.0946,  0.0036,  ..., -0.0377, -0.0428, -0.0228],
        [-0.0662,  0.0949,  0.0104,  ...,  0.0178, -0.0103,  0.0157],
        [-0.0750,  0.0884, -0.0069,  ..., -0.0734, -0.0852, -0.0004],
        ...,
        [ 0.0404,  0.0047,  0.0116,  ...,  0.0044, -0.0123, -0.0225],
        [-0.0182,  0.0116, -0.0272,  ...,  0.0290, -0.0077,  0.0198],
        [-0.0114,  0.0339, -0.0033,  ...,  0.0185, -0.0326, -0.0375]], device='cuda:0', requires_grad=True)
Q: tensor([ -2.1250,   7.1875, -11.7500,  -6.6562,   5.2188,  -4.8125,  -3.4062,  -6.0625,   5.8125,  -9.2500,   1.8516,   5.6562,  -9.2500,   5.3125,  -8.4375,   7.4062,   7.5938,   7.0625,  -6.1875,   8.7500,  -6.0312,  -7.5000,   6.6562,  -7.0625,  -2.9531,  -8.1875,  -9.0000,   4.9375,   5.2188,
         10.3750,  -5.9062,  -6.6250,  -8.9375,  -5.0312,  -3.4219,   2.0938, -11.5625,  -7.1562,   6.8750,   3.6719,  -3.2812,   1.2812,   7.8438,  -0.0781,   6.8125,   5.0625,  -8.2500,  -8.6875,  10.5000,   0.4062,  -4.1562,   6.5312,   5.0938,  -8.1875,  -3.1875,  -0.1963,  -3.8281,   3.4531,
         -0.4707,  12.5625,   3.8125,  -6.0625,   8.0625,   9.6875], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[   0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000],
        [   0.0000,   19.2500,   40.5000,   41.5000,   41.5000,   36.2500,   33.0000,   33.2500,   42.0000,   33.2500,   40.2500,   34.7500,   32.2500,   39.2500,   34.7500],
        [   0.0000,  -61.0000, -120.5000, -116.5000, -102.5000,  -95.0000,  -75.5000, -100.5000, -106.0000,  -88.5000,  -99.5000,  -90.0000,  -97.0000,  -97.0000,  -97.5000],
        [   0.0000,  -73.0000, -146.0000, -144.0000, -126.5000, -116.5000,  -94.0000, -123.5000, -130.0000, -108.5000, -122.0000, -112.5000, -118.5000, -120.0000, -118.0000],
        [   0.0000,  -81.5000, -171.0000, -169.0000, -154.0000, -141.0000, -113.0000, -146.0000, -157.0000, -128.0000, -146.0000, -132.0000, -143.0000, -145.0000, -139.0000],
        [   0.0000,  -72.5000, -157.0000, -155.0000, -143.0000, -132.0000, -105.5000, -134.0000, -146.0000, -120.0000, -134.0000, -121.0000, -134.0000, -134.0000, -128.0000],
        [   0.0000,  -72.0000, -147.0000, -144.0000, -129.0000, -120.0000,  -95.0000, -125.0000, -132.0000, -108.0000, -122.5000, -111.5000, -121.5000, -122.0000, -118.5000],
        [   0.0000,  -78.5000, -151.0000, -147.0000, -131.0000, -121.0000,  -98.5000, -127.5000, -135.0000, -111.0000, -127.5000, -115.5000, -121.5000, -124.0000, -123.0000],
        [   0.0000,  -76.5000, -157.0000, -154.0000, -140.0000, -129.0000, -103.0000, -134.0000, -144.0000, -117.0000, -133.0000, -119.5000, -132.0000, -132.0000, -126.5000],
        [   0.0000,  -75.0000, -148.0000, -144.0000, -127.5000, -118.5000,  -94.5000, -124.5000, -132.0000, -108.5000, -123.5000, -112.5000, -119.5000, -121.0000, -118.5000],
        [   0.0000,  -72.5000, -149.0000, -146.0000, -131.0000, -120.5000,  -97.0000, -127.0000, -136.0000, -110.0000, -126.0000, -113.5000, -124.0000, -124.5000, -120.0000],
        [   0.0000,  -82.0000, -157.0000, -154.0000, -134.0000, -125.0000, -100.0000, -133.0000, -140.0000, -115.5000, -132.0000, -119.5000, -126.0000, -129.0000, -128.0000],
        [   0.0000,  -76.0000, -150.0000, -146.0000, -130.0000, -120.5000,  -96.5000, -126.5000, -134.0000, -112.0000, -126.0000, -114.0000, -123.5000, -123.5000, -121.5000],
        [   0.0000,  -70.0000, -142.0000, -136.0000, -123.0000, -113.0000,  -90.0000, -119.5000, -127.0000, -103.0000, -116.5000, -105.0000, -118.5000, -116.5000, -111.0000],
        [   0.0000,  -80.5000, -155.0000, -150.0000, -133.0000, -122.5000,  -99.0000, -130.0000, -137.0000, -111.5000, -129.0000, -117.0000, -124.0000, -127.0000, -123.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7555],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     1.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4277,     0.0000,     0.0020,     0.0154,     0.5547,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2412,     0.0000,     0.7539,     0.0041,     0.0002,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     1.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0708,     0.0001,     0.0000,     0.0000,     0.0000,     0.9297,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0120,     0.0000,     0.9883,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0013,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0075,     0.0000,     0.9922,     0.0000,     0.0000,     0.0000,     0.0004,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0515,     0.0000,     0.0562,     0.0198,     0.0002,     0.0175,     0.0557,     0.1914,     0.0001,     0.4805,     0.0011,     0.1260,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0024,     0.0000,     0.0004,     0.0000,     0.0123,     0.0001,     0.9844,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.6094,     0.0000,     0.0000,     0.0000,     0.0000,     0.3535,     0.0000,     0.0001,     0.0000,     0.0001,     0.0381,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0010,  0.0561,  0.0130,  ...,  0.0070, -0.0006,  0.0145],
        [-0.0141,  0.0150,  0.0775,  ...,  0.0087,  0.0115,  0.0595],
        [ 0.0102,  0.0233, -0.0266,  ..., -0.0343,  0.0046,  0.0037],
        ...,
        [ 0.0273, -0.0037,  0.0540,  ...,  0.0341,  0.0314, -0.0232],
        [-0.0285,  0.0466, -0.0244,  ..., -0.0462,  0.0137,  0.0289],
        [-0.0178,  0.0006,  0.0371,  ..., -0.0010,  0.0134,  0.0193]], device='cuda:0', requires_grad=True)
K: tensor([-1.4766, -0.5352, -0.2695,  0.1299, -2.2812, -0.3164, -0.6562,  0.3789, -1.2031, -1.6641,  0.2178, -0.4238,  0.2188,  1.4453, -0.7188,  0.0044,  0.2432,  0.3203,  0.0035, -0.2002,  0.1348,  0.6133, -0.8398,  0.3164, -1.1328,  1.3828, -0.6094, -0.3516,  0.8828,  0.1582,  0.0398,  0.7461,
        -1.2188,  0.5859, -1.2422, -0.1289, -1.7500,  0.1387,  0.8594,  0.7070, -0.5312,  3.1094, -1.1641,  0.8477, -1.9297, -0.6562, -0.3828, -0.3008,  0.1729, -0.2480, -0.3652,  0.4707,  0.5547, -0.1904, -0.3262, -1.0312, -0.0625,  1.9766,  0.4121, -0.5977, -0.2344, -0.4883,  0.9961, -0.9453],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0068,  0.0187,  0.0002,  ..., -0.0362,  0.0251, -0.0344],
        [-0.0054, -0.0132, -0.0231,  ..., -0.0296, -0.0154,  0.0404],
        [-0.0199,  0.0051,  0.0450,  ..., -0.0029,  0.0378,  0.0037],
        ...,
        [-0.0312,  0.0054, -0.0247,  ..., -0.0007, -0.0026,  0.0577],
        [ 0.0063, -0.0102, -0.0108,  ...,  0.0394,  0.0326, -0.0191],
        [-0.0459, -0.0040,  0.0312,  ..., -0.0098,  0.0273,  0.0403]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.5938,  2.3281,  1.8984, -2.1875,  2.1719, -1.3359,  0.2363, -3.5469, -0.9258,  1.7266, -0.0153, -0.6797, -0.3965,  2.6094,  1.5234, -2.1719,  1.2344, -1.7578,  1.2422,  3.3594, -0.5586, -0.7344,  0.6133,  0.9844,  1.6875,  1.7656, -2.7188,  1.1953,  1.1953, -1.6562,  0.3145,  2.0000,
         0.3730,  0.2559,  2.3438, -0.9297,  1.4453, -1.2422, -0.5195, -2.4375, -0.8047, -1.9844, -1.0312, -0.1846, -0.1602,  0.0889, -0.3340, -3.7656, -0.8984, -1.0000,  0.1299,  2.3594, -1.9297,  0.8477, -1.1250,  0.4180,  1.8516, -0.0903, -2.7031, -1.7266,  1.9141, -1.4219, -1.5938, -1.6094],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     14.8750,     39.0000,     24.0000,    -23.6250,      9.0000,    -18.3750,     54.7500,    -10.0000,     43.2500,    -29.0000,     26.8750,     53.5000,    -18.3750,      4.4375],
        [     0.0000,     24.2500,     12.7500,      7.8125,     -8.9375,      2.0781,     -8.7500,     20.3750,     -1.0938,     14.7500,     -7.2500,     10.0000,     20.7500,     -0.6172,     -0.9102],
        [     0.0000,     -5.0312,     11.8125,      2.7500,     -8.4375,     -1.7109,     -1.3359,      8.9375,    -10.3750,      5.7812,    -12.6875,      5.4062,      5.6250,    -15.8125,     -1.0000],
        [     0.0000,    -16.1250,     -5.3750,     -3.3281,      0.2578,     -1.0469,      3.4688,     -5.2188,     -2.3281,     -4.3125,      0.0378,     -2.3438,     -6.3750,     -2.8125,      0.5469],
        [     0.0000,     -8.5000,      1.1406,     -4.0625,     -7.2188,     -7.4375,      2.0781,     -1.5156,    -11.6250,     -4.6250,     -9.8750,     -1.1016,     -5.3125,    -14.3750,     -3.7812],
        [     0.0000,      3.8125,     18.6250,      9.6875,     -9.1875,      3.6094,     -6.2812,     22.2500,     -4.5000,     16.3750,    -13.8125,     11.7500,     22.6250,     -7.5625,      2.0781],
        [     0.0000,     -7.4375,      7.9688,      0.9648,    -14.8750,     -4.0312,     -3.9219,     10.5625,    -17.2500,      9.2500,    -16.3750,      4.8125,      4.2188,    -23.8750,     -2.8594],
        [     0.0000,    -26.8750,    -14.3125,    -11.1875,      6.0312,     -5.8125,     10.4375,    -23.3750,     -3.9219,    -18.7500,      3.9531,    -11.4375,    -26.7500,     -5.6250,     -1.7109],
        [     0.0000,    -20.2500,    -14.2500,    -11.7500,     -2.7031,     -9.4375,      6.6562,    -18.3750,    -11.4375,    -15.3750,     -2.0781,    -10.7500,    -24.3750,    -14.6875,     -5.4062],
        [     0.0000,    -30.3750,    -21.6250,    -15.5625,      8.8125,     -9.6875,     13.6875,    -33.2500,     -3.8125,    -28.3750,      5.9688,    -16.7500,    -37.0000,     -5.0625,     -4.1875],
        [     0.0000,     -7.3438,      0.0874,     -0.9570,     -5.3438,     -1.0781,      0.0786,      1.3203,     -6.3750,      2.2344,     -3.8281,      0.8945,     -1.5469,     -8.8125,     -0.3066],
        [     0.0000,    -28.6250,    -21.5000,    -17.5000,     -3.3438,    -12.3750,      8.5625,    -27.1250,    -17.6250,    -18.7500,     -0.7461,    -15.3750,    -37.2500,    -22.3750,     -6.8750],
        [     0.0000,    -17.6250,     -1.8594,     -4.4688,      1.6484,     -3.7969,      6.0312,    -10.1250,     -4.2812,    -10.2500,     -3.2812,     -4.9688,    -12.5625,     -7.9062,     -1.6641],
        [     0.0000,      6.8750,     18.0000,      5.9688,    -10.2500,     -1.7812,     -3.8281,     17.3750,     -7.7188,      9.3750,    -16.1250,      9.1875,     15.1875,    -11.7500,     -2.1094]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6691],
        [0.1693],
        [0.3030],
        [0.1498],
        [0.1697],
        [0.0050],
        [0.1877],
        [0.0087],
        [0.1996],
        [0.0119],
        [0.1236],
        [0.1910],
        [0.0045],
        [0.0065]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0340, -0.0046,  0.0094,  ...,  0.0110, -0.0806, -0.0212],
        [-0.0532, -0.0303,  0.0089,  ...,  0.0310, -0.0742, -0.0343],
        [ 0.0203,  0.0139, -0.0103,  ...,  0.0404,  0.0201, -0.0177],
        ...,
        [-0.0110, -0.0216, -0.0093,  ...,  0.0605, -0.0328, -0.0181],
        [-0.0265, -0.0195,  0.0180,  ...,  0.0216,  0.0061, -0.0002],
        [ 0.0105, -0.0448, -0.0317,  ...,  0.0593, -0.0363, -0.0645]], device='cuda:0', requires_grad=True)
K: tensor([     3.3281,     -4.3125,     -3.4688,     -4.1562,      5.3125,     -4.3125,      4.4688,      2.9062,      3.9531,     -4.6562,      3.2969,     -4.1562,     -4.5000,      3.8594,      3.0938,     -2.9844,      1.3047,      5.9375,     -2.2656,     -4.7500,      6.0625,      5.3750,
             4.4688,     -3.0000,     -4.4375,      5.9688,     -3.6094,     -5.1562,     -2.3750,      3.0000,     -3.7188,      3.8906,      2.6406,     -2.2344,     -3.0781,     -0.1738,      0.0043,     -4.0938,      3.3750,     -3.8594,     -5.1562,      2.1719,      2.7812,     -3.0000,
            -4.0625,      4.0938,     -4.5312,      4.0312,     -5.0312,     -4.3750,     -4.2188,      4.0938,      3.5938,      3.8594,      1.7344,     -4.7500,     -3.7656,      2.7188,     -0.7383,     -2.9688,      3.3594,      3.1406,     -1.8203,      3.0000], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[ 0.0119,  0.0133,  0.0147,  ...,  0.0064,  0.0240,  0.0552],
        [ 0.0485,  0.0279, -0.0206,  ..., -0.0321,  0.0076,  0.0197],
        [-0.0002, -0.0240, -0.0020,  ..., -0.0199,  0.0551,  0.0461],
        ...,
        [-0.0123, -0.0043, -0.0594,  ..., -0.0014,  0.0519,  0.0192],
        [ 0.0199,  0.0009, -0.0223,  ...,  0.0219, -0.0298, -0.0245],
        [-0.0044,  0.0049,  0.0052,  ..., -0.0192,  0.0035,  0.0644]], device='cuda:0', requires_grad=True)
Q: tensor([-2.5625,  4.5312,  5.5000,  4.2500, -3.7656,  4.2500, -2.9688, -4.9062, -4.4688,  4.7812, -4.0938,  4.8438,  3.8281, -3.9688, -4.4062,  4.1250, -0.8438, -7.6875,  2.3281,  6.3125, -5.7188, -3.8438, -5.4062,  1.9531,  5.5000, -6.7188,  3.2188,  3.0156,  4.3125, -4.0312,  3.4688, -4.8125,
        -4.5000,  1.9844,  3.7812, -1.4141, -1.1406,  3.3750, -5.2812,  1.5469,  6.3438, -0.3301, -3.5625,  3.9062,  3.4062, -4.8125,  4.6250, -3.0312,  4.2188,  5.7500,  6.1875, -5.0312, -3.3594, -3.6719, -2.0156,  3.7031,  5.1562, -1.0625,  0.7930,  3.2031, -3.7031, -5.5312,  1.5547, -2.5000],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[   0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000],
        [   0.0000,  -66.5000,  -66.5000,  -77.0000, -101.5000,  -89.5000,  -93.0000,  -87.0000,  -82.5000,  -65.0000,  -84.0000,  -76.0000,  -76.5000,  -82.0000,  -86.0000],
        [   0.0000,  -83.5000,  -87.5000, -101.5000, -133.0000, -116.5000, -122.0000, -115.5000, -107.0000,  -86.5000, -109.5000,  -98.5000, -102.0000, -106.0000, -112.0000],
        [   0.0000,  -83.0000,  -88.5000, -108.0000, -141.0000, -120.5000, -126.5000, -120.0000, -110.5000,  -92.0000, -114.5000, -101.5000, -104.0000, -109.0000, -114.0000],
        [   0.0000, -108.5000, -115.5000, -139.0000, -185.0000, -158.0000, -166.0000, -156.0000, -145.0000, -118.5000, -150.0000, -133.0000, -136.0000, -144.0000, -149.0000],
        [   0.0000,  -97.5000, -104.0000, -122.0000, -163.0000, -140.0000, -147.0000, -137.0000, -128.0000, -104.5000, -133.0000, -117.5000, -121.0000, -127.0000, -133.0000],
        [   0.0000, -104.0000, -111.0000, -131.0000, -174.0000, -150.0000, -158.0000, -148.0000, -137.0000, -112.0000, -142.0000, -126.0000, -130.0000, -136.0000, -143.0000],
        [   0.0000, -103.0000, -111.5000, -132.0000, -173.0000, -149.0000, -157.0000, -152.0000, -136.0000, -113.0000, -140.0000, -126.0000, -132.0000, -134.0000, -143.0000],
        [   0.0000,  -87.0000,  -93.0000, -110.0000, -146.0000, -126.0000, -132.0000, -123.5000, -116.0000,  -94.0000, -119.0000, -106.0000, -108.5000, -114.5000, -119.0000],
        [   0.0000,  -77.5000,  -84.0000, -100.0000, -131.0000, -113.5000, -119.0000, -113.0000, -103.5000,  -85.5000, -107.0000,  -95.0000,  -98.5000, -102.5000, -107.5000],
        [   0.0000,  -90.5000,  -96.5000, -115.0000, -154.0000, -132.0000, -139.0000, -128.0000, -121.0000,  -98.0000, -125.5000, -110.5000, -112.5000, -120.0000, -124.5000],
        [   0.0000,  -82.5000,  -89.0000, -105.0000, -138.0000, -119.0000, -125.0000, -119.0000, -109.5000,  -90.0000, -112.5000, -101.0000, -104.0000, -108.0000, -113.5000],
        [   0.0000,  -92.5000, -100.0000, -115.5000, -153.0000, -132.0000, -140.0000, -133.0000, -120.5000,  -99.0000, -124.5000, -111.5000, -117.5000, -119.5000, -127.0000],
        [   0.0000,  -86.5000,  -92.5000, -108.5000, -145.0000, -125.0000, -131.0000, -122.0000, -115.0000,  -93.0000, -118.5000, -105.0000, -108.0000, -114.0000, -118.5000],
        [   0.0000,  -88.0000,  -95.5000, -111.0000, -148.0000, -127.5000, -135.0000, -127.0000, -117.0000,  -95.5000, -120.5000, -108.0000, -112.0000, -115.5000, -122.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0426,  0.0229,  0.0380,  ...,  0.0188,  0.0006, -0.0205],
        [ 0.0027,  0.0228,  0.0244,  ...,  0.0380,  0.0059,  0.0287],
        [ 0.0364,  0.0103,  0.0099,  ...,  0.0051,  0.0465,  0.0087],
        ...,
        [-0.0293, -0.0227, -0.0314,  ...,  0.0086, -0.0312,  0.0105],
        [-0.0138,  0.0023, -0.0156,  ..., -0.0247, -0.0287, -0.0252],
        [ 0.0237, -0.0020,  0.0099,  ...,  0.0195,  0.0186,  0.0117]], device='cuda:0', requires_grad=True)
K: tensor([-1.0312,  1.0703, -3.3281, -0.4648, -1.0234, -5.1875, -1.1172,  2.2812, -0.0386,  0.6406,  0.6094, -0.4258, -1.6406, -3.6875,  2.7969,  2.2344,  2.0625, -3.5625, -1.2344,  1.5156,  1.8594, -1.6484, -3.7344,  6.0312, -1.3906,  3.1094,  0.1465, -2.0938,  0.3398, -1.7109, -0.3711, -2.3594,
        -1.7656, -2.2500,  3.1562, -3.2969, -2.9844,  0.6094,  2.9062,  1.9609, -2.9844,  0.8828,  1.8281, -2.9844,  3.1406,  4.1875,  0.7461, -1.3359, -0.9102,  1.3906,  1.4453,  0.9766, -0.7031, -2.5625, -0.6445, -1.4609,  2.3594,  1.8594, -2.0000, -4.8125, -0.4727,  2.4531, -3.3906, -2.3281],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0205,  0.0116, -0.0189,  ...,  0.0072, -0.0318, -0.0324],
        [-0.0170, -0.0136,  0.0037,  ...,  0.0065, -0.0229, -0.0012],
        [-0.0122,  0.0064, -0.0147,  ..., -0.0174,  0.0127, -0.0079],
        ...,
        [-0.0155,  0.0178,  0.0051,  ..., -0.0008,  0.0334,  0.0132],
        [-0.0357,  0.0320,  0.0008,  ...,  0.0098,  0.0038, -0.0337],
        [-0.0096, -0.0231, -0.0597,  ..., -0.0111, -0.0095,  0.0161]], device='cuda:0', requires_grad=True)
Q: tensor([ 1.1641, -2.0312,  2.7969,  1.7969,  0.4551,  3.2969,  1.0547, -2.1562, -0.1118, -0.8438,  0.1904,  1.8438,  0.2852,  3.6406, -2.3594, -2.3594, -2.0625,  2.8438,  0.0557, -1.1562, -1.8125,  2.1406,  3.9219, -3.8281,  0.8633, -2.5469, -0.8125,  1.7734,  0.6914,  0.9766,  1.4219,  3.0156,
         1.1406,  2.0938, -2.6875,  2.7969,  2.5000, -1.7656, -2.7656, -1.5859,  2.8906, -1.6250, -3.1562,  2.7344, -2.6406, -2.5156, -1.7031,  0.6914,  0.0566, -0.5469, -1.5391, -0.2178,  1.7109,  2.9531,  0.5195,  1.6953, -1.7031, -0.9375,  1.2422,  4.0938,  0.1836, -2.5312,  4.6250,  1.5312],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000, -52.2500, -42.7500, -25.7500, -39.2500, -36.5000, -34.5000, -40.5000, -61.7500, -52.2500, -37.0000, -36.0000, -44.2500, -63.7500, -39.2500],
        [  0.0000, -43.0000, -36.0000, -22.3750, -33.2500, -31.2500, -29.3750, -33.7500, -51.5000, -43.2500, -31.3750, -30.5000, -37.2500, -53.0000, -33.5000],
        [  0.0000, -28.0000, -24.0000, -19.8750, -24.7500, -24.2500, -24.2500, -24.0000, -33.0000, -27.3750, -25.6250, -23.6250, -26.3750, -33.7500, -27.5000],
        [  0.0000, -44.7500, -38.0000, -28.8750, -38.5000, -37.5000, -36.7500, -37.2500, -52.7500, -43.5000, -39.0000, -35.5000, -41.5000, -54.2500, -41.0000],
        [  0.0000, -40.0000, -34.0000, -25.1250, -33.7500, -33.5000, -32.7500, -33.5000, -47.0000, -38.7500, -34.2500, -31.2500, -37.2500, -48.2500, -36.5000],
        [  0.0000, -35.0000, -29.8750, -23.5000, -30.5000, -30.3750, -30.5000, -29.8750, -40.7500, -33.5000, -31.8750, -28.2500, -33.2500, -41.7500, -33.7500],
        [  0.0000, -45.5000, -38.2500, -26.6250, -37.5000, -35.7500, -35.2500, -38.5000, -54.5000, -45.7500, -37.2500, -35.0000, -42.0000, -56.0000, -40.0000],
        [  0.0000, -64.0000, -53.7500, -36.2500, -51.2500, -49.0000, -47.0000, -52.5000, -77.0000, -65.0000, -50.5000, -48.0000, -57.5000, -79.5000, -53.7500],
        [  0.0000, -62.5000, -52.0000, -34.2500, -49.5000, -46.2500, -44.7500, -50.7500, -75.5000, -64.5000, -48.0000, -46.7500, -55.5000, -77.5000, -51.5000],
        [  0.0000, -37.5000, -31.6250, -25.5000, -32.2500, -32.0000, -32.0000, -32.0000, -44.0000, -36.2500, -34.2500, -30.6250, -35.2500, -45.0000, -36.2500],
        [  0.0000, -42.2500, -36.0000, -27.0000, -35.5000, -34.0000, -33.2500, -35.7500, -51.0000, -43.0000, -35.7500, -34.2500, -39.0000, -52.5000, -38.5000],
        [  0.0000, -50.2500, -42.2500, -29.2500, -41.2500, -40.0000, -38.7500, -42.0000, -60.0000, -50.2500, -40.7500, -38.2500, -46.2500, -61.7500, -44.0000],
        [  0.0000, -66.0000, -55.2500, -37.0000, -52.5000, -50.2500, -48.2500, -54.0000, -79.5000, -67.0000, -51.7500, -49.2500, -59.0000, -82.0000, -55.2500],
        [  0.0000, -39.7500, -33.7500, -26.3750, -33.7500, -33.5000, -33.2500, -34.2500, -47.0000, -39.2500, -35.2500, -32.5000, -37.7500, -48.2500, -38.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0036,     0.9961,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0012,     0.9922,     0.0050,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.9219,     0.0771,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.8008,     0.0532,     0.0007,     0.1465,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.6797,     0.0349,     0.0001,     0.1279,     0.1592,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0464,     0.0041,     0.0000,     0.0104,     0.0354,     0.9023,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0003,     0.0454,     0.0043,     0.0000,     0.0110,     0.0295,     0.9102,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0052,     0.0049,     0.0002,     0.0330,     0.0361,     0.9180,     0.0001,     0.0012,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0061,     0.1543,     0.0254,     0.0001,     0.0559,     0.0349,     0.7109,     0.0006,     0.0126,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0859,     0.0048,     0.0000,     0.0198,     0.0219,     0.7656,     0.0001,     0.0010,     0.0000,     0.1011,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.1001,     0.0104,     0.0003,     0.0393,     0.0503,     0.4492,     0.0018,     0.0232,     0.0004,     0.3242,     0.0005,     0.0000,     0.0000,     0.0000],
        [    0.0003,     0.0233,     0.0049,     0.0000,     0.0092,     0.0200,     0.8711,     0.0000,     0.0008,     0.0000,     0.0703,     0.0000,     0.0014,     0.0000,     0.0000],
        [    0.0000,     0.0042,     0.0051,     0.0001,     0.0271,     0.0302,     0.8203,     0.0001,     0.0009,     0.0000,     0.1069,     0.0000,     0.0022,     0.0048,     0.0000],
        [    0.0000,     0.0334,     0.0021,     0.0000,     0.0173,     0.0186,     0.7305,     0.0000,     0.0014,     0.0000,     0.0981,     0.0000,     0.0020,     0.0051,     0.0923]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0039,  0.0103,  0.0399,  ...,  0.0096, -0.0316, -0.0108],
        [ 0.0023,  0.0066,  0.0012,  ..., -0.0122,  0.0104,  0.0548],
        [ 0.0109,  0.0170, -0.0212,  ...,  0.0036,  0.0248,  0.0032],
        ...,
        [ 0.0254,  0.0163,  0.0070,  ..., -0.0468,  0.0159, -0.0228],
        [ 0.0304,  0.0048, -0.0673,  ...,  0.0217, -0.0163,  0.0601],
        [ 0.0354,  0.0003,  0.0219,  ..., -0.0266, -0.0046, -0.0117]], device='cuda:0', requires_grad=True)
K: tensor([-3.8594,  0.8047, -4.4375,  0.7969, -1.3672, -0.7656, -4.5625,  3.6562,  3.1875, -0.4883,  4.3125, -2.1719, -5.0938,  0.7461,  2.6094,  3.4844,  1.5312, -0.8750, -0.3887, -2.6406, -5.0938,  0.1309, -1.7422, -3.1875, -4.3438, -1.9922, -1.9766, -4.6875,  3.7812,  0.7227,  0.6289, -0.0068,
         2.0156, -3.7969, -0.8555,  2.0938,  4.4688, -0.1406,  3.7812, -0.9062, -1.2031, -4.5625, -1.7109, -3.6406, -0.7383,  0.1846,  0.6875, -4.2500,  0.5859, -0.2129, -0.2031, -3.0469, -3.7188, -3.4688,  0.4961, -2.8281, -2.7344,  1.5078, -0.0211,  0.1689,  1.9141, -4.2500, -0.5703, -4.5312],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0170, -0.0130, -0.0085,  ...,  0.0090,  0.0319, -0.0107],
        [-0.0062, -0.0155, -0.0061,  ..., -0.0450, -0.0370, -0.0130],
        [-0.0083, -0.0093,  0.0103,  ..., -0.0024, -0.0168, -0.0194],
        ...,
        [ 0.0259, -0.0109,  0.0070,  ..., -0.0179, -0.0313,  0.0208],
        [ 0.0033,  0.0069, -0.0207,  ..., -0.0054, -0.0350, -0.0112],
        [ 0.0198,  0.0102, -0.0439,  ...,  0.0277,  0.0402, -0.0098]], device='cuda:0', requires_grad=True)
Q: tensor([-2.9062,  0.6172,  0.0217,  2.8438,  0.0127, -2.7656, -2.4688,  0.1309,  2.2344,  2.7656,  2.9531,  0.7148, -2.7969, -1.4219,  1.9688, -2.4531,  0.0938,  0.4512, -0.6094,  1.7188, -1.3125, -0.1328, -2.4375, -3.9844,  0.5039,  1.7422, -0.3223, -2.9531, -1.7891,  0.8438, -1.1172,  1.7109,
         3.9375, -1.0234, -0.1289, -0.8008,  0.1504, -1.8047, -0.1914,  1.8047,  0.6797,  0.9609, -1.8594,  0.5781, -2.4531, -0.3125,  1.5000, -0.7539, -2.7031,  0.1206,  0.0698,  0.7812, -0.3848,  2.6875, -1.3984, -0.7656, -2.8281, -0.3613, -2.9688, -0.0232,  1.1250, -0.3750, -3.1250, -2.4375],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      5.6250,      0.9609,     -4.8750,     -0.4941,      0.3398,      0.5938,     -3.8750,     -0.3555,     -3.9688,      0.3789,     -5.1875,     -1.4609,     -0.3945,     -0.8438],
        [     0.0000,      6.7500,      1.4688,     -4.7500,      0.4434,      0.4512,      0.2930,     -2.7031,      0.9688,     -1.8359,      0.8984,     -3.0781,     -0.3984,      0.9102,     -0.5586],
        [     0.0000,      9.8125,      7.3125,      1.8906,      7.4375,      8.6250,     10.8750,      2.9844,      6.9375,      2.6719,      9.5625,      1.9141,      7.0625,      8.0625,      9.3125],
        [     0.0000,     10.6875,      7.9688,      3.6094,      9.0000,      9.4375,     12.1250,      3.9531,      7.2188,      2.8281,     10.3125,      2.6406,      7.4375,      8.1875,     10.0625],
        [     0.0000,      8.1250,      5.1875,     -0.5938,      6.4688,      6.6875,     10.1250,      0.3203,      3.1250,     -1.5547,      7.7500,     -1.7188,      3.8594,      4.2812,      7.3750],
        [     0.0000,      9.9375,      7.5000,      3.0781,      8.4375,      9.6875,     12.9375,      2.5781,      6.1875,      0.0043,     10.2500,      0.2178,      6.7500,      7.3750,     10.7500],
        [     0.0000,      4.8750,      2.5156,     -3.9844,      3.4688,      4.4375,      7.8750,     -1.9844,      1.6328,     -4.2500,      5.8125,     -4.2500,      1.7812,      3.0469,      6.1875],
        [     0.0000,      8.4375,      8.3750,      5.0000,     10.3125,     10.3750,     13.6250,      4.0938,      7.0000,      3.1406,     11.6250,      3.4375,      7.8125,      8.5625,     11.1875],
        [     0.0000,      3.2344,      1.4297,     -4.3125,      2.2188,      1.7422,      4.7500,     -2.3125,      0.7305,     -4.0000,      3.7656,     -3.8906,      0.8828,      1.8047,      3.2656],
        [     0.0000,      9.4375,      6.5938,      1.8047,      8.0000,      8.1250,     11.6250,      2.5156,      5.0312,     -0.0142,      9.6250,      0.1611,      6.2188,      6.1250,      9.3750],
        [     0.0000,      6.9062,      4.6562,      0.9453,      5.9688,      6.2188,      8.4375,      2.8906,      5.4688,      1.4844,      8.0625,      1.5781,      5.9688,      6.4062,      7.8125],
        [     0.0000,      4.5000,      2.9375,     -3.1875,      3.5625,      4.3438,      8.1250,     -1.9922,      1.1016,     -4.6875,      5.5938,     -4.3750,      1.6719,      2.5938,      6.2188],
        [     0.0000,      7.5000,      7.7188,      4.0625,      9.3750,      9.5000,     12.8125,      3.1406,      6.0000,      2.2344,     10.7500,      2.4844,      6.8438,      7.6562,     10.3125],
        [     0.0000,     11.4375,      8.6875,      3.6562,     10.7500,     10.8125,     14.5000,      4.4688,      8.2500,      2.4219,     12.5000,      2.8750,      8.6250,      9.5625,     12.4375]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2458],
        [0.1567],
        [0.1351],
        [0.1728],
        [0.0898],
        [0.0884],
        [0.0536],
        [0.1006],
        [0.0288],
        [0.0352],
        [0.0239],
        [0.0101],
        [0.0577],
        [0.0122]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.1699 a:0.0493,:0.1367 and:0.0972atoes:0.0713,:0.3301 a:0.0525
:0.1260)


------
		( a:0.0493,:0.1367 and:0.0972atoes:0.0713,:0.3301 a:0.0525
:0.1260The:0.1030)
The first time is a very popular, but it is a very popular,
@ 1550 train 5.4666 , allloss: 6.0177, dt: 1726.69ms, fracRes: 0.6983, norm(attn): 0.1543, norm(output): 0.9406, norm(x): 0.8103, norm(y): 1.0177, norm:1.7324, tok/sec: 75909.28, flops:79.68, batch-reuse:1
@ 1551 train 5.4192 , allloss: 5.9486, dt: 1317.48ms, fracRes: 0.6984, norm(attn): 0.1533, norm(output): 0.9405, norm(x): 0.8093, norm(y): 1.0178, norm:1.0544, tok/sec: 99486.55, flops:104.42, batch-reuse:1
@ 1552 train 5.2978 , allloss: 5.8354, dt: 1305.38ms, fracRes: 0.6986, norm(attn): 0.1562, norm(output): 0.9402, norm(x): 0.8083, norm(y): 1.0177, norm:1.1499, tok/sec: 100408.72, flops:105.39, batch-reuse:1
@ 1553 train 5.4208 , allloss: 5.9458, dt: 1322.51ms, fracRes: 0.6990, norm(attn): 0.1572, norm(output): 0.9401, norm(x): 0.8077, norm(y): 1.0175, norm:1.3423, tok/sec: 99108.46, flops:104.03, batch-reuse:1
@ 1554 train 5.4160 , allloss: 5.9357, dt: 1313.81ms, fracRes: 0.6999, norm(attn): 0.1621, norm(output): 0.9400, norm(x): 0.8085, norm(y): 1.0172, norm:1.2640, tok/sec: 99765.02, flops:104.72, batch-reuse:1
@ 1555 train 5.4292 , allloss: 5.9423, dt: 1316.38ms, fracRes: 0.7006, norm(attn): 0.1592, norm(output): 0.9400, norm(x): 0.8099, norm(y): 1.0166, norm:0.9535, tok/sec: 99570.21, flops:104.51, batch-reuse:1
@ 1556 train 5.5112 , allloss: 5.9984, dt: 1318.87ms, fracRes: 0.7002, norm(attn): 0.1562, norm(output): 0.9399, norm(x): 0.8100, norm(y): 1.0167, norm:1.1090, tok/sec: 99381.99, flops:104.31, batch-reuse:1
@ 1557 train 5.4219 , allloss: 5.8630, dt: 1304.60ms, fracRes: 0.6997, norm(attn): 0.1562, norm(output): 0.9397, norm(x): 0.8108, norm(y): 1.0171, norm:1.0506, tok/sec: 100469.48, flops:105.46, batch-reuse:1
@ 1558 train 5.3451 , allloss: 5.7611, dt: 1286.62ms, fracRes: 0.6986, norm(attn): 0.1562, norm(output): 0.9397, norm(x): 0.8116, norm(y): 1.0174, norm:1.0989, tok/sec: 101873.13, flops:106.93, batch-reuse:1
@ 1559 train 5.4079 , allloss: 5.7821, dt: 1295.55ms, fracRes: 0.6979, norm(attn): 0.1592, norm(output): 0.9396, norm(x): 0.8108, norm(y): 1.0175, norm:1.1195, tok/sec: 101170.57, flops:106.19, batch-reuse:1
@ 1560 train 5.4665 , allloss: 5.8340, dt: 1298.43ms, fracRes: 0.6978, norm(attn): 0.1611, norm(output): 0.9395, norm(x): 0.8091, norm(y): 1.0177, norm:1.3434, tok/sec: 100946.23, flops:105.96, batch-reuse:1
@ 1561 train 5.4282 , allloss: 5.7372, dt: 1323.54ms, fracRes: 0.6984, norm(attn): 0.1611, norm(output): 0.9393, norm(x): 0.8094, norm(y): 1.0172, norm:0.9235, tok/sec: 99031.66, flops:103.95, batch-reuse:1
@ 1562 train 5.3973 , allloss: 5.6830, dt: 1311.44ms, fracRes: 0.6988, norm(attn): 0.1621, norm(output): 0.9393, norm(x): 0.8091, norm(y): 1.0171, norm:1.0846, tok/sec: 99945.39, flops:104.91, batch-reuse:1
@ 1563 train 5.3706 , allloss: 5.5322, dt: 1338.42ms, fracRes: 0.6992, norm(attn): 0.1602, norm(output): 0.9392, norm(x): 0.8083, norm(y): 1.0174, norm:0.9112, tok/sec: 97930.66, flops:102.79, batch-reuse:1
@ 1564 train 5.3866 , allloss: 5.4548, dt: 1326.79ms, fracRes: 0.6992, norm(attn): 0.1611, norm(output): 0.9391, norm(x): 0.8073, norm(y): 1.0179, norm:0.9944, tok/sec: 98788.92, flops:103.69, batch-reuse:1
@ 1565 train 5.4401 , allloss: 5.4660, dt: 1318.77ms, fracRes: 0.6987, norm(attn): 0.1602, norm(output): 0.9391, norm(x): 0.8067, norm(y): 1.0179, norm:0.7867, tok/sec: 99389.26, flops:104.32, batch-reuse:1
@ 1566 train 5.4081 , allloss: 5.4142, dt: 1284.24ms, fracRes: 0.6988, norm(attn): 0.1621, norm(output): 0.9389, norm(x): 0.8076, norm(y): 1.0177, norm:0.7801, tok/sec: 102062.15, flops:107.13, batch-reuse:1
@ 1567 train 5.3696 , allloss: 5.3774, dt: 1307.34ms, fracRes: 0.6987, norm(attn): 0.1621, norm(output): 0.9389, norm(x): 0.8070, norm(y): 1.0175, norm:0.7502, tok/sec: 100258.42, flops:105.23, batch-reuse:1
@ 1568 train 5.3563 , allloss: 5.3606, dt: 1317.85ms, fracRes: 0.6989, norm(attn): 0.1631, norm(output): 0.9388, norm(x): 0.8062, norm(y): 1.0178, norm:0.9886, tok/sec: 99459.12, flops:104.40, batch-reuse:1
@ 1569 train 5.2648 , allloss: 5.2706, dt: 1281.16ms, fracRes: 0.7002, norm(attn): 0.1602, norm(output): 0.9388, norm(x): 0.8067, norm(y): 1.0175, norm:0.8941, tok/sec: 102307.22, flops:107.38, batch-reuse:1
@ 1570 train 5.3600 , allloss: 5.3681, dt: 1299.57ms, fracRes: 0.7015, norm(attn): 0.1572, norm(output): 0.9387, norm(x): 0.8076, norm(y): 1.0171, norm:0.8024, tok/sec: 100857.66, flops:105.86, batch-reuse:1
@ 1571 train 5.3742 , allloss: 5.3829, dt: 1297.23ms, fracRes: 0.7020, norm(attn): 0.1592, norm(output): 0.9386, norm(x): 0.8075, norm(y): 1.0170, norm:0.6858, tok/sec: 101040.13, flops:106.05, batch-reuse:1
@ 1572 train 5.3549 , allloss: 5.3614, dt: 1292.33ms, fracRes: 0.7019, norm(attn): 0.1621, norm(output): 0.9385, norm(x): 0.8072, norm(y): 1.0172, norm:0.7705, tok/sec: 101422.67, flops:106.46, batch-reuse:1
@ 1573 train 5.4343 , allloss: 5.4399, dt: 1292.82ms, fracRes: 0.7017, norm(attn): 0.1641, norm(output): 0.9385, norm(x): 0.8069, norm(y): 1.0173, norm:0.9831, tok/sec: 101384.27, flops:106.42, batch-reuse:1
@ 1574 train 5.3699 , allloss: 5.3741, dt: 1301.67ms, fracRes: 0.7018, norm(attn): 0.1631, norm(output): 0.9384, norm(x): 0.8060, norm(y): 1.0172, norm:1.0202, tok/sec: 100695.27, flops:105.69, batch-reuse:1
@ 1575 train 5.3475 , allloss: 5.3518, dt: 1309.44ms, fracRes: 0.7016, norm(attn): 0.1650, norm(output): 0.9383, norm(x): 0.8032, norm(y): 1.0176, norm:0.6426, tok/sec: 100097.89, flops:105.07, batch-reuse:1
@ 1576 train 5.3860 , allloss: 5.3980, dt: 1325.36ms, fracRes: 0.7011, norm(attn): 0.1602, norm(output): 0.9382, norm(x): 0.8023, norm(y): 1.0179, norm:0.7196, tok/sec: 98895.50, flops:103.80, batch-reuse:1
@ 1577 train 5.2694 , allloss: 5.2736, dt: 1345.28ms, fracRes: 0.7006, norm(attn): 0.1602, norm(output): 0.9382, norm(x): 0.7999, norm(y): 1.0182, norm:0.5608, tok/sec: 97431.04, flops:102.27, batch-reuse:1
@ 1578 train 5.3515 , allloss: 5.3632, dt: 1328.49ms, fracRes: 0.7005, norm(attn): 0.1611, norm(output): 0.9381, norm(x): 0.8001, norm(y): 1.0186, norm:0.9083, tok/sec: 98662.32, flops:103.56, batch-reuse:1
@ 1579 train 5.2340 , allloss: 5.2382, dt: 1317.73ms, fracRes: 0.7007, norm(attn): 0.1621, norm(output): 0.9381, norm(x): 0.8000, norm(y): 1.0186, norm:0.8975, tok/sec: 99468.14, flops:104.40, batch-reuse:1
@ 1580 train 5.2818 , allloss: 5.2861, dt: 1340.91ms, fracRes: 0.7011, norm(attn): 0.1621, norm(output): 0.9380, norm(x): 0.7997, norm(y): 1.0183, norm:0.9329, tok/sec: 97748.67, flops:102.60, batch-reuse:1
@ 1581 train 5.2190 , allloss: 5.2242, dt: 1344.51ms, fracRes: 0.7016, norm(attn): 0.1621, norm(output): 0.9380, norm(x): 0.7998, norm(y): 1.0179, norm:0.8627, tok/sec: 97487.09, flops:102.33, batch-reuse:1
@ 1582 train 5.2970 , allloss: 5.3012, dt: 1302.46ms, fracRes: 0.7021, norm(attn): 0.1611, norm(output): 0.9379, norm(x): 0.8004, norm(y): 1.0177, norm:1.0516, tok/sec: 100634.39, flops:105.63, batch-reuse:1
@ 1583 train 5.2718 , allloss: 5.2756, dt: 1301.19ms, fracRes: 0.7023, norm(attn): 0.1562, norm(output): 0.9380, norm(x): 0.8033, norm(y): 1.0174, norm:1.1468, tok/sec: 100732.78, flops:105.73, batch-reuse:1
@ 1584 train 5.3010 , allloss: 5.3052, dt: 1304.19ms, fracRes: 0.7026, norm(attn): 0.1592, norm(output): 0.9380, norm(x): 0.8027, norm(y): 1.0171, norm:0.7831, tok/sec: 100501.05, flops:105.49, batch-reuse:1
@ 1585 train 5.3019 , allloss: 5.3317, dt: 1324.88ms, fracRes: 0.7021, norm(attn): 0.1621, norm(output): 0.9379, norm(x): 0.8021, norm(y): 1.0172, norm:0.8555, tok/sec: 98931.41, flops:103.84, batch-reuse:1
@ 1586 train 5.2882 , allloss: 5.2924, dt: 1306.90ms, fracRes: 0.7022, norm(attn): 0.1611, norm(output): 0.9378, norm(x): 0.8028, norm(y): 1.0171, norm:0.6689, tok/sec: 100292.37, flops:105.27, batch-reuse:1
@ 1587 train 5.3306 , allloss: 5.3341, dt: 1309.64ms, fracRes: 0.7023, norm(attn): 0.1592, norm(output): 0.9379, norm(x): 0.8048, norm(y): 1.0169, norm:0.8416, tok/sec: 100082.76, flops:105.05, batch-reuse:1
@ 1588 train 5.3557 , allloss: 5.3619, dt: 1338.40ms, fracRes: 0.7020, norm(attn): 0.1572, norm(output): 0.9378, norm(x): 0.8046, norm(y): 1.0170, norm:0.7889, tok/sec: 97931.92, flops:102.79, batch-reuse:1
@ 1589 train 5.2639 , allloss: 5.2698, dt: 1298.34ms, fracRes: 0.7013, norm(attn): 0.1572, norm(output): 0.9377, norm(x): 0.8025, norm(y): 1.0173, norm:0.9078, tok/sec: 100953.39, flops:105.96, batch-reuse:1
@ 1590 train 5.3676 , allloss: 5.3707, dt: 1297.56ms, fracRes: 0.7011, norm(attn): 0.1621, norm(output): 0.9376, norm(x): 0.7995, norm(y): 1.0175, norm:1.2454, tok/sec: 101013.84, flops:106.03, batch-reuse:1
@ 1591 train 5.2515 , allloss: 5.2552, dt: 1288.26ms, fracRes: 0.7009, norm(attn): 0.1641, norm(output): 0.9375, norm(x): 0.7983, norm(y): 1.0174, norm:1.0102, tok/sec: 101743.59, flops:106.79, batch-reuse:1
@ 1592 train 5.3191 , allloss: 5.3213, dt: 1299.41ms, fracRes: 0.7012, norm(attn): 0.1641, norm(output): 0.9374, norm(x): 0.7989, norm(y): 1.0175, norm:0.7673, tok/sec: 100870.07, flops:105.88, batch-reuse:1
@ 1593 train 5.3017 , allloss: 5.3042, dt: 1326.55ms, fracRes: 0.7012, norm(attn): 0.1621, norm(output): 0.9374, norm(x): 0.7995, norm(y): 1.0175, norm:0.7587, tok/sec: 98806.94, flops:103.71, batch-reuse:1
@ 1594 train 5.1845 , allloss: 5.1866, dt: 1288.30ms, fracRes: 0.7010, norm(attn): 0.1582, norm(output): 0.9374, norm(x): 0.8005, norm(y): 1.0174, norm:0.7940, tok/sec: 101740.26, flops:106.79, batch-reuse:1
@ 1595 train 5.3410 , allloss: 5.3441, dt: 1307.52ms, fracRes: 0.7014, norm(attn): 0.1572, norm(output): 0.9375, norm(x): 0.8010, norm(y): 1.0170, norm:0.7701, tok/sec: 100244.78, flops:105.22, batch-reuse:1
@ 1596 train 5.2498 , allloss: 5.2592, dt: 1294.57ms, fracRes: 0.7012, norm(attn): 0.1602, norm(output): 0.9375, norm(x): 0.8005, norm(y): 1.0169, norm:0.7878, tok/sec: 101247.15, flops:106.27, batch-reuse:1
@ 1597 train 5.3181 , allloss: 5.3199, dt: 1302.13ms, fracRes: 0.7014, norm(attn): 0.1621, norm(output): 0.9375, norm(x): 0.8002, norm(y): 1.0168, norm:0.7072, tok/sec: 100659.87, flops:105.66, batch-reuse:1
@ 1598 train 5.2713 , allloss: 5.2773, dt: 1312.27ms, fracRes: 0.7017, norm(attn): 0.1592, norm(output): 0.9375, norm(x): 0.8016, norm(y): 1.0167, norm:0.8438, tok/sec: 99882.16, flops:104.84, batch-reuse:1
@ 1599 train 5.3459 , allloss: 5.3476, dt: 1324.84ms, fracRes: 0.7019, norm(attn): 0.1582, norm(output): 0.9373, norm(x): 0.8017, norm(y): 1.0169, norm:0.6836, tok/sec: 98934.46, flops:103.84, batch-reuse:1
@ 1600 train 5.2498 , allloss: 5.2512, dt: 1309.38ms, fracRes: 0.7016, norm(attn): 0.1602, norm(output): 0.9372, norm(x): 0.7994, norm(y): 1.0171, norm:0.5946, tok/sec: 100102.28, flops:105.07, batch-reuse:1
@ 1601 train 5.3557 , allloss: 5.3596, dt: 1302.71ms, fracRes: 0.7013, norm(attn): 0.1592, norm(output): 0.9371, norm(x): 0.7976, norm(y): 1.0174, norm:0.5504, tok/sec: 100614.68, flops:105.61, batch-reuse:1
@ 1602 train 5.2543 , allloss: 5.2558, dt: 1307.67ms, fracRes: 0.7009, norm(attn): 0.1602, norm(output): 0.9369, norm(x): 0.7973, norm(y): 1.0176, norm:0.7326, tok/sec: 100233.23, flops:105.21, batch-reuse:1
@ 1603 train 5.2016 , allloss: 5.2029, dt: 1310.19ms, fracRes: 0.7008, norm(attn): 0.1572, norm(output): 0.9368, norm(x): 0.7978, norm(y): 1.0176, norm:0.7757, tok/sec: 100040.13, flops:105.01, batch-reuse:1
@ 1604 train 5.2681 , allloss: 5.2695, dt: 1289.32ms, fracRes: 0.7008, norm(attn): 0.1572, norm(output): 0.9368, norm(x): 0.7987, norm(y): 1.0176, norm:1.4060, tok/sec: 101659.77, flops:106.71, batch-reuse:1
@ 1605 train 5.2950 , allloss: 5.2983, dt: 1300.58ms, fracRes: 0.7012, norm(attn): 0.1631, norm(output): 0.9368, norm(x): 0.7989, norm(y): 1.0169, norm:0.8381, tok/sec: 100779.52, flops:105.78, batch-reuse:1
@ 1606 train 5.2957 , allloss: 5.2974, dt: 1289.41ms, fracRes: 0.7016, norm(attn): 0.1631, norm(output): 0.9369, norm(x): 0.8001, norm(y): 1.0160, norm:0.7839, tok/sec: 101652.61, flops:106.70, batch-reuse:1
@ 1607 train 5.2903 , allloss: 5.2920, dt: 1317.37ms, fracRes: 0.7016, norm(attn): 0.1650, norm(output): 0.9368, norm(x): 0.7996, norm(y): 1.0163, norm:0.9844, tok/sec: 99495.27, flops:104.43, batch-reuse:1
@ 1608 train 5.3347 , allloss: 5.3365, dt: 1320.68ms, fracRes: 0.7015, norm(attn): 0.1631, norm(output): 0.9367, norm(x): 0.7985, norm(y): 1.0168, norm:1.0191, tok/sec: 99245.90, flops:104.17, batch-reuse:1
@ 1609 train 5.2749 , allloss: 5.2762, dt: 1301.21ms, fracRes: 0.7015, norm(attn): 0.1611, norm(output): 0.9367, norm(x): 0.7975, norm(y): 1.0167, norm:0.7487, tok/sec: 100730.79, flops:105.73, batch-reuse:1
@ 1610 train 5.2474 , allloss: 5.2489, dt: 1324.06ms, fracRes: 0.7013, norm(attn): 0.1621, norm(output): 0.9366, norm(x): 0.7977, norm(y): 1.0167, norm:0.7784, tok/sec: 98992.73, flops:103.91, batch-reuse:1
@ 1611 train 5.1994 , allloss: 5.2013, dt: 1324.38ms, fracRes: 0.7010, norm(attn): 0.1621, norm(output): 0.9366, norm(x): 0.7977, norm(y): 1.0169, norm:0.6990, tok/sec: 98968.72, flops:103.88, batch-reuse:1
@ 1612 train 5.2582 , allloss: 5.2599, dt: 1298.91ms, fracRes: 0.7010, norm(attn): 0.1592, norm(output): 0.9366, norm(x): 0.7977, norm(y): 1.0171, norm:0.7368, tok/sec: 100908.95, flops:105.92, batch-reuse:1
@ 1613 train 5.2521 , allloss: 5.2544, dt: 1324.76ms, fracRes: 0.7013, norm(attn): 0.1572, norm(output): 0.9366, norm(x): 0.7976, norm(y): 1.0170, norm:0.6842, tok/sec: 98940.33, flops:103.85, batch-reuse:1
@ 1614 train 5.3154 , allloss: 5.3188, dt: 1340.52ms, fracRes: 0.7020, norm(attn): 0.1572, norm(output): 0.9366, norm(x): 0.7973, norm(y): 1.0166, norm:0.6678, tok/sec: 97776.69, flops:102.63, batch-reuse:1
@ 1615 train 5.2521 , allloss: 5.2604, dt: 1319.26ms, fracRes: 0.7022, norm(attn): 0.1582, norm(output): 0.9367, norm(x): 0.7973, norm(y): 1.0165, norm:0.8293, tok/sec: 99352.95, flops:104.28, batch-reuse:1
@ 1616 train 5.3396 , allloss: 5.4253, dt: 1294.45ms, fracRes: 0.7020, norm(attn): 0.1602, norm(output): 0.9366, norm(x): 0.7965, norm(y): 1.0164, norm:1.1618, tok/sec: 101256.66, flops:106.28, batch-reuse:1
@ 1617 train 5.2629 , allloss: 5.2676, dt: 1308.31ms, fracRes: 0.7016, norm(attn): 0.1621, norm(output): 0.9366, norm(x): 0.7955, norm(y): 1.0164, norm:0.8686, tok/sec: 100183.88, flops:105.16, batch-reuse:1
@ 1618 train 5.2737 , allloss: 5.2783, dt: 1316.29ms, fracRes: 0.7010, norm(attn): 0.1650, norm(output): 0.9366, norm(x): 0.7944, norm(y): 1.0167, norm:0.8488, tok/sec: 99577.08, flops:104.52, batch-reuse:1
@ 1619 train 5.2006 , allloss: 5.2072, dt: 1313.27ms, fracRes: 0.7004, norm(attn): 0.1660, norm(output): 0.9366, norm(x): 0.7951, norm(y): 1.0172, norm:1.1974, tok/sec: 99805.97, flops:104.76, batch-reuse:1
@ 1620 train 5.2142 , allloss: 5.2187, dt: 1334.78ms, fracRes: 0.7005, norm(attn): 0.1621, norm(output): 0.9365, norm(x): 0.7965, norm(y): 1.0171, norm:1.2296, tok/sec: 98197.23, flops:103.07, batch-reuse:1
@ 1621 train 5.3123 , allloss: 5.3223, dt: 1285.88ms, fracRes: 0.7011, norm(attn): 0.1621, norm(output): 0.9366, norm(x): 0.7971, norm(y): 1.0167, norm:1.1271, tok/sec: 101931.38, flops:106.99, batch-reuse:1
@ 1622 train 5.2776 , allloss: 5.2806, dt: 1327.45ms, fracRes: 0.7014, norm(attn): 0.1592, norm(output): 0.9366, norm(x): 0.7985, norm(y): 1.0165, norm:0.8642, tok/sec: 98740.04, flops:103.64, batch-reuse:1
@ 1623 train 5.1875 , allloss: 5.1910, dt: 1320.15ms, fracRes: 0.7016, norm(attn): 0.1602, norm(output): 0.9366, norm(x): 0.7977, norm(y): 1.0165, norm:1.1399, tok/sec: 99285.41, flops:104.21, batch-reuse:1
@ 1624 train 5.1400 , allloss: 5.1730, dt: 1310.92ms, fracRes: 0.7018, norm(attn): 0.1670, norm(output): 0.9366, norm(x): 0.7960, norm(y): 1.0163, norm:1.0973, tok/sec: 99984.60, flops:104.95, batch-reuse:1
@ 1625 train 5.2329 , allloss: 5.5677, dt: 1348.98ms, fracRes: 0.7020, norm(attn): 0.1689, norm(output): 0.9366, norm(x): 0.7964, norm(y): 1.0157, norm:1.0822, tok/sec: 97163.92, flops:101.99, batch-reuse:1
@ 1626 train 5.2129 , allloss: 5.2191, dt: 1336.44ms, fracRes: 0.7017, norm(attn): 0.1660, norm(output): 0.9366, norm(x): 0.7969, norm(y): 1.0157, norm:0.7777, tok/sec: 98075.72, flops:102.94, batch-reuse:1
@ 1627 train 5.1403 , allloss: 5.1451, dt: 1279.58ms, fracRes: 0.7014, norm(attn): 0.1660, norm(output): 0.9365, norm(x): 0.7962, norm(y): 1.0164, norm:1.0842, tok/sec: 102433.37, flops:107.52, batch-reuse:1
@ 1628 train 5.1311 , allloss: 5.1357, dt: 1286.55ms, fracRes: 0.7014, norm(attn): 0.1641, norm(output): 0.9364, norm(x): 0.7952, norm(y): 1.0166, norm:0.8376, tok/sec: 101878.93, flops:106.94, batch-reuse:1
@ 1629 train 5.1474 , allloss: 5.1511, dt: 1302.13ms, fracRes: 0.7015, norm(attn): 0.1660, norm(output): 0.9364, norm(x): 0.7940, norm(y): 1.0164, norm:0.7381, tok/sec: 100659.56, flops:105.66, batch-reuse:1
@ 1630 train 5.1939 , allloss: 5.1966, dt: 1318.71ms, fracRes: 0.7012, norm(attn): 0.1699, norm(output): 0.9364, norm(x): 0.7934, norm(y): 1.0167, norm:0.7815, tok/sec: 99394.40, flops:104.33, batch-reuse:1
@ 1631 train 5.1084 , allloss: 5.1110, dt: 1317.26ms, fracRes: 0.7011, norm(attn): 0.1689, norm(output): 0.9363, norm(x): 0.7945, norm(y): 1.0168, norm:0.8625, tok/sec: 99503.75, flops:104.44, batch-reuse:1
@ 1632 train 5.2117 , allloss: 5.2132, dt: 1313.17ms, fracRes: 0.7011, norm(attn): 0.1660, norm(output): 0.9364, norm(x): 0.7955, norm(y): 1.0168, norm:0.8017, tok/sec: 99813.61, flops:104.77, batch-reuse:1
@ 1633 train 5.1886 , allloss: 5.1904, dt: 1323.90ms, fracRes: 0.7009, norm(attn): 0.1621, norm(output): 0.9364, norm(x): 0.7952, norm(y): 1.0170, norm:0.8787, tok/sec: 99004.26, flops:103.92, batch-reuse:1
@ 1634 train 5.2089 , allloss: 5.2121, dt: 1314.12ms, fracRes: 0.7007, norm(attn): 0.1650, norm(output): 0.9363, norm(x): 0.7937, norm(y): 1.0171, norm:0.9324, tok/sec: 99741.34, flops:104.69, batch-reuse:1
@ 1635 train 5.1433 , allloss: 5.1463, dt: 1318.08ms, fracRes: 0.7010, norm(attn): 0.1660, norm(output): 0.9363, norm(x): 0.7939, norm(y): 1.0169, norm:0.9883, tok/sec: 99441.65, flops:104.38, batch-reuse:1
@ 1636 train 5.1376 , allloss: 5.1385, dt: 1308.79ms, fracRes: 0.7013, norm(attn): 0.1641, norm(output): 0.9364, norm(x): 0.7953, norm(y): 1.0165, norm:1.2392, tok/sec: 100147.23, flops:105.12, batch-reuse:1
@ 1637 train 5.2236 , allloss: 5.2260, dt: 1289.89ms, fracRes: 0.7016, norm(attn): 0.1621, norm(output): 0.9364, norm(x): 0.7971, norm(y): 1.0162, norm:0.9214, tok/sec: 101614.75, flops:106.66, batch-reuse:1
@ 1638 train 5.2748 , allloss: 5.2768, dt: 1345.85ms, fracRes: 0.7020, norm(attn): 0.1641, norm(output): 0.9365, norm(x): 0.7975, norm(y): 1.0158, norm:1.1450, tok/sec: 97390.01, flops:102.22, batch-reuse:1
@ 1639 train 5.1583 , allloss: 5.1595, dt: 1331.11ms, fracRes: 0.7024, norm(attn): 0.1660, norm(output): 0.9365, norm(x): 0.7956, norm(y): 1.0156, norm:1.1517, tok/sec: 98468.20, flops:103.36, batch-reuse:1
@ 1640 train 5.2100 , allloss: 5.2104, dt: 1304.75ms, fracRes: 0.7023, norm(attn): 0.1699, norm(output): 0.9364, norm(x): 0.7939, norm(y): 1.0158, norm:1.5690, tok/sec: 100457.34, flops:105.44, batch-reuse:1
@ 1641 train 5.1858 , allloss: 5.1867, dt: 1312.82ms, fracRes: 0.7021, norm(attn): 0.1689, norm(output): 0.9364, norm(x): 0.7926, norm(y): 1.0159, norm:0.9311, tok/sec: 99840.13, flops:104.80, batch-reuse:1
@ 1642 train 5.1831 , allloss: 5.1849, dt: 1316.84ms, fracRes: 0.7019, norm(attn): 0.1660, norm(output): 0.9364, norm(x): 0.7928, norm(y): 1.0162, norm:1.0366, tok/sec: 99535.44, flops:104.48, batch-reuse:1
@ 1643 train 5.2009 , allloss: 5.2015, dt: 1340.72ms, fracRes: 0.7018, norm(attn): 0.1650, norm(output): 0.9365, norm(x): 0.7944, norm(y): 1.0161, norm:0.9465, tok/sec: 97762.28, flops:102.61, batch-reuse:1
@ 1644 train 5.2525 , allloss: 5.2534, dt: 1301.64ms, fracRes: 0.7018, norm(attn): 0.1660, norm(output): 0.9364, norm(x): 0.7938, norm(y): 1.0162, norm:0.8513, tok/sec: 100697.56, flops:105.70, batch-reuse:1
@ 1645 train 5.1855 , allloss: 5.1862, dt: 1288.51ms, fracRes: 0.7016, norm(attn): 0.1680, norm(output): 0.9364, norm(x): 0.7945, norm(y): 1.0164, norm:0.7929, tok/sec: 101723.93, flops:106.77, batch-reuse:1
@ 1646 train 5.1980 , allloss: 5.1991, dt: 1315.74ms, fracRes: 0.7014, norm(attn): 0.1660, norm(output): 0.9364, norm(x): 0.7955, norm(y): 1.0164, norm:0.8136, tok/sec: 99618.76, flops:104.56, batch-reuse:1
@ 1647 train 5.2453 , allloss: 5.2467, dt: 1303.29ms, fracRes: 0.7015, norm(attn): 0.1650, norm(output): 0.9364, norm(x): 0.7949, norm(y): 1.0163, norm:0.7952, tok/sec: 100570.12, flops:105.56, batch-reuse:1
@ 1648 train 5.1949 , allloss: 5.1968, dt: 1317.78ms, fracRes: 0.7015, norm(attn): 0.1670, norm(output): 0.9364, norm(x): 0.7939, norm(y): 1.0163, norm:0.8736, tok/sec: 99463.89, flops:104.40, batch-reuse:1
@ 1649 train 5.1626 , allloss: 5.1637, dt: 1317.88ms, fracRes: 0.7013, norm(attn): 0.1660, norm(output): 0.9364, norm(x): 0.7935, norm(y): 1.0163, norm:1.0076, tok/sec: 99456.91, flops:104.39, batch-reuse:1
@ 1650 train 5.1937 , allloss: 5.1945, dt: 1335.70ms, fracRes: 0.7013, norm(attn): 0.1631, norm(output): 0.9364, norm(x): 0.7940, norm(y): 1.0164, norm:1.0839, tok/sec: 98129.47, flops:103.00, batch-reuse:1
@ 1651 train 5.2811 , allloss: 5.2893, dt: 1302.17ms, fracRes: 0.7014, norm(attn): 0.1650, norm(output): 0.9363, norm(x): 0.7943, norm(y): 1.0164, norm:1.0017, tok/sec: 100656.61, flops:105.65, batch-reuse:1
@ 1652 train 5.3176 , allloss: 5.3189, dt: 1307.83ms, fracRes: 0.7016, norm(attn): 0.1670, norm(output): 0.9362, norm(x): 0.7933, norm(y): 1.0164, norm:1.2481, tok/sec: 100220.84, flops:105.19, batch-reuse:1
@ 1653 train 5.2578 , allloss: 5.2599, dt: 1339.73ms, fracRes: 0.7019, norm(attn): 0.1680, norm(output): 0.9362, norm(x): 0.7929, norm(y): 1.0159, norm:1.3272, tok/sec: 97835.00, flops:102.69, batch-reuse:1
@ 1654 train 5.1919 , allloss: 5.4261, dt: 1331.95ms, fracRes: 0.7022, norm(attn): 0.1689, norm(output): 0.9362, norm(x): 0.7934, norm(y): 1.0155, norm:1.0559, tok/sec: 98406.12, flops:103.29, batch-reuse:1
@ 1655 train 5.1181 , allloss: 5.1225, dt: 1335.15ms, fracRes: 0.7020, norm(attn): 0.1689, norm(output): 0.9362, norm(x): 0.7940, norm(y): 1.0156, norm:0.9316, tok/sec: 98169.98, flops:103.04, batch-reuse:1
@ 1656 train 5.1529 , allloss: 5.1558, dt: 1301.17ms, fracRes: 0.7017, norm(attn): 0.1689, norm(output): 0.9361, norm(x): 0.7932, norm(y): 1.0160, norm:0.9198, tok/sec: 100733.82, flops:105.73, batch-reuse:1
@ 1657 train 5.2425 , allloss: 5.2440, dt: 1307.19ms, fracRes: 0.7012, norm(attn): 0.1660, norm(output): 0.9360, norm(x): 0.7910, norm(y): 1.0163, norm:0.8877, tok/sec: 100269.79, flops:105.25, batch-reuse:1
@ 1658 train 5.2498 , allloss: 5.2516, dt: 1316.80ms, fracRes: 0.7008, norm(attn): 0.1660, norm(output): 0.9360, norm(x): 0.7905, norm(y): 1.0163, norm:0.9049, tok/sec: 99538.00, flops:104.48, batch-reuse:1
@ 1659 train 5.1935 , allloss: 5.1944, dt: 1301.78ms, fracRes: 0.7008, norm(attn): 0.1680, norm(output): 0.9359, norm(x): 0.7901, norm(y): 1.0163, norm:1.1009, tok/sec: 100686.49, flops:105.68, batch-reuse:1
@ 1660 train 5.1658 , allloss: 5.1740, dt: 1292.39ms, fracRes: 0.7011, norm(attn): 0.1670, norm(output): 0.9359, norm(x): 0.7921, norm(y): 1.0161, norm:1.2353, tok/sec: 101418.18, flops:106.45, batch-reuse:1
@ 1661 train 5.2482 , allloss: 5.2488, dt: 1292.42ms, fracRes: 0.7015, norm(attn): 0.1641, norm(output): 0.9359, norm(x): 0.7919, norm(y): 1.0160, norm:0.9601, tok/sec: 101415.73, flops:106.45, batch-reuse:1
@ 1662 train 5.2241 , allloss: 5.2246, dt: 1284.39ms, fracRes: 0.7014, norm(attn): 0.1631, norm(output): 0.9358, norm(x): 0.7892, norm(y): 1.0161, norm:0.8386, tok/sec: 102049.72, flops:107.11, batch-reuse:1
@ 1663 train 5.2163 , allloss: 5.2170, dt: 1308.50ms, fracRes: 0.7013, norm(attn): 0.1621, norm(output): 0.9357, norm(x): 0.7879, norm(y): 1.0162, norm:0.9126, tok/sec: 100170.02, flops:105.14, batch-reuse:1
@ 1664 train 5.1800 , allloss: 5.1808, dt: 1321.29ms, fracRes: 0.7014, norm(attn): 0.1660, norm(output): 0.9356, norm(x): 0.7876, norm(y): 1.0161, norm:1.1424, tok/sec: 99199.72, flops:104.12, batch-reuse:1
@ 1665 train 5.2027 , allloss: 5.2030, dt: 1293.01ms, fracRes: 0.7014, norm(attn): 0.1660, norm(output): 0.9356, norm(x): 0.7901, norm(y): 1.0159, norm:0.9007, tok/sec: 101369.54, flops:106.40, batch-reuse:1
@ 1666 train 5.2917 , allloss: 5.2924, dt: 1303.44ms, fracRes: 0.7014, norm(attn): 0.1680, norm(output): 0.9356, norm(x): 0.7916, norm(y): 1.0159, norm:0.9185, tok/sec: 100558.40, flops:105.55, batch-reuse:1
@ 1667 train 5.4124 , allloss: 5.4136, dt: 1270.85ms, fracRes: 0.7012, norm(attn): 0.1670, norm(output): 0.9357, norm(x): 0.7907, norm(y): 1.0160, norm:0.8978, tok/sec: 103137.06, flops:108.26, batch-reuse:1
@ 1668 train 5.3674 , allloss: 5.3700, dt: 1311.67ms, fracRes: 0.7012, norm(attn): 0.1660, norm(output): 0.9357, norm(x): 0.7905, norm(y): 1.0161, norm:1.0853, tok/sec: 99927.39, flops:104.89, batch-reuse:1
@ 1669 train 5.4067 , allloss: 5.4779, dt: 1288.51ms, fracRes: 0.7010, norm(attn): 0.1621, norm(output): 0.9357, norm(x): 0.7914, norm(y): 1.0164, norm:1.1984, tok/sec: 101723.73, flops:106.77, batch-reuse:1
@ 1670 train 5.4981 , allloss: 5.5038, dt: 1281.38ms, fracRes: 0.7014, norm(attn): 0.1621, norm(output): 0.9357, norm(x): 0.7912, norm(y): 1.0161, norm:0.9847, tok/sec: 102289.48, flops:107.37, batch-reuse:1
@ 1671 train 5.3946 , allloss: 5.3958, dt: 1303.10ms, fracRes: 0.7017, norm(attn): 0.1621, norm(output): 0.9357, norm(x): 0.7933, norm(y): 1.0159, norm:0.7934, tok/sec: 100584.44, flops:105.58, batch-reuse:1
@ 1672 train 5.4307 , allloss: 5.4357, dt: 1288.40ms, fracRes: 0.7020, norm(attn): 0.1631, norm(output): 0.9358, norm(x): 0.7932, norm(y): 1.0153, norm:0.9274, tok/sec: 101732.20, flops:106.78, batch-reuse:1
@ 1673 train 5.3074 , allloss: 5.3092, dt: 1274.64ms, fracRes: 0.7017, norm(attn): 0.1641, norm(output): 0.9356, norm(x): 0.7928, norm(y): 1.0155, norm:0.8623, tok/sec: 102830.63, flops:107.93, batch-reuse:1
@ 1674 train 5.3492 , allloss: 5.3505, dt: 1280.22ms, fracRes: 0.7011, norm(attn): 0.1641, norm(output): 0.9356, norm(x): 0.7910, norm(y): 1.0163, norm:0.8234, tok/sec: 102382.40, flops:107.46, batch-reuse:1
@ 1675 train 5.4411 , allloss: 5.4423, dt: 1317.56ms, fracRes: 0.7006, norm(attn): 0.1650, norm(output): 0.9356, norm(x): 0.7896, norm(y): 1.0166, norm:0.8917, tok/sec: 99481.06, flops:104.42, batch-reuse:1
@ 1676 train 5.4586 , allloss: 5.4593, dt: 1335.20ms, fracRes: 0.7002, norm(attn): 0.1641, norm(output): 0.9354, norm(x): 0.7876, norm(y): 1.0169, norm:1.1794, tok/sec: 98166.91, flops:103.04, batch-reuse:1
@ 1677 train 5.3891 , allloss: 5.3899, dt: 1334.07ms, fracRes: 0.7004, norm(attn): 0.1641, norm(output): 0.9354, norm(x): 0.7881, norm(y): 1.0167, norm:1.0697, tok/sec: 98249.40, flops:103.13, batch-reuse:1
@ 1678 train 5.3257 , allloss: 5.3297, dt: 1336.94ms, fracRes: 0.7012, norm(attn): 0.1650, norm(output): 0.9355, norm(x): 0.7898, norm(y): 1.0159, norm:0.9134, tok/sec: 98038.64, flops:102.90, batch-reuse:1
@ 1679 train 5.4345 , allloss: 5.4377, dt: 1311.92ms, fracRes: 0.7019, norm(attn): 0.1631, norm(output): 0.9357, norm(x): 0.7911, norm(y): 1.0153, norm:0.8650, tok/sec: 99908.86, flops:104.87, batch-reuse:1
@ 1680 train 5.3282 , allloss: 5.3287, dt: 1294.34ms, fracRes: 0.7016, norm(attn): 0.1602, norm(output): 0.9355, norm(x): 0.7904, norm(y): 1.0155, norm:0.8163, tok/sec: 101265.26, flops:106.29, batch-reuse:1
@ 1681 train 5.3571 , allloss: 5.3577, dt: 1314.62ms, fracRes: 0.7017, norm(attn): 0.1592, norm(output): 0.9353, norm(x): 0.7895, norm(y): 1.0158, norm:1.0148, tok/sec: 99703.14, flops:104.65, batch-reuse:1
@ 1682 train 5.3476 , allloss: 5.3479, dt: 1316.55ms, fracRes: 0.7015, norm(attn): 0.1582, norm(output): 0.9351, norm(x): 0.7892, norm(y): 1.0158, norm:0.9616, tok/sec: 99557.37, flops:104.50, batch-reuse:1
@ 1683 train 5.2869 , allloss: 5.2875, dt: 1311.91ms, fracRes: 0.7014, norm(attn): 0.1611, norm(output): 0.9350, norm(x): 0.7896, norm(y): 1.0159, norm:0.7888, tok/sec: 99908.99, flops:104.87, batch-reuse:1
@ 1684 train 5.3022 , allloss: 5.3439, dt: 1319.60ms, fracRes: 0.7013, norm(attn): 0.1641, norm(output): 0.9349, norm(x): 0.7891, norm(y): 1.0156, norm:0.8270, tok/sec: 99327.26, flops:104.26, batch-reuse:1
@ 1685 train 5.3769 , allloss: 5.3771, dt: 1313.22ms, fracRes: 0.7005, norm(attn): 0.1660, norm(output): 0.9348, norm(x): 0.7900, norm(y): 1.0156, norm:0.8121, tok/sec: 99809.68, flops:104.76, batch-reuse:1
@ 1686 train 5.3736 , allloss: 5.3739, dt: 1304.98ms, fracRes: 0.7004, norm(attn): 0.1660, norm(output): 0.9347, norm(x): 0.7883, norm(y): 1.0159, norm:0.8415, tok/sec: 100439.92, flops:105.42, batch-reuse:1
@ 1687 train 5.3479 , allloss: 5.3483, dt: 1316.93ms, fracRes: 0.7008, norm(attn): 0.1641, norm(output): 0.9347, norm(x): 0.7885, norm(y): 1.0157, norm:0.7646, tok/sec: 99528.73, flops:104.47, batch-reuse:1
@ 1688 train 5.4035 , allloss: 5.4059, dt: 1289.60ms, fracRes: 0.7010, norm(attn): 0.1621, norm(output): 0.9347, norm(x): 0.7880, norm(y): 1.0157, norm:0.8300, tok/sec: 101637.97, flops:106.68, batch-reuse:1
@ 1689 train 5.3245 , allloss: 5.3251, dt: 1311.33ms, fracRes: 0.7011, norm(attn): 0.1660, norm(output): 0.9346, norm(x): 0.7884, norm(y): 1.0157, norm:0.6978, tok/sec: 99953.57, flops:104.91, batch-reuse:1
@ 1690 train 5.3011 , allloss: 5.3017, dt: 1287.66ms, fracRes: 0.7010, norm(attn): 0.1670, norm(output): 0.9345, norm(x): 0.7878, norm(y): 1.0158, norm:0.7251, tok/sec: 101791.02, flops:106.84, batch-reuse:1
@ 1691 train 5.2626 , allloss: 5.2630, dt: 1308.29ms, fracRes: 0.7010, norm(attn): 0.1689, norm(output): 0.9345, norm(x): 0.7888, norm(y): 1.0154, norm:0.7800, tok/sec: 100185.54, flops:105.16, batch-reuse:1
@ 1692 train 5.2248 , allloss: 5.2252, dt: 1336.25ms, fracRes: 0.7011, norm(attn): 0.1660, norm(output): 0.9345, norm(x): 0.7895, norm(y): 1.0153, norm:0.8087, tok/sec: 98089.25, flops:102.96, batch-reuse:1
@ 1693 train 5.5165 , allloss: 5.5167, dt: 1294.48ms, fracRes: 0.7007, norm(attn): 0.1621, norm(output): 0.9345, norm(x): 0.7909, norm(y): 1.0160, norm:1.1801, tok/sec: 101254.53, flops:106.28, batch-reuse:1
@ 1694 train 5.5110 , allloss: 5.5126, dt: 1310.03ms, fracRes: 0.7009, norm(attn): 0.1641, norm(output): 0.9344, norm(x): 0.7905, norm(y): 1.0160, norm:1.0938, tok/sec: 100052.42, flops:105.02, batch-reuse:1
@ 1695 train 5.3536 , allloss: 5.3540, dt: 1333.22ms, fracRes: 0.7012, norm(attn): 0.1660, norm(output): 0.9344, norm(x): 0.7899, norm(y): 1.0155, norm:1.0520, tok/sec: 98312.41, flops:103.19, batch-reuse:1
@ 1696 train 5.3225 , allloss: 5.3226, dt: 1337.62ms, fracRes: 0.7014, norm(attn): 0.1660, norm(output): 0.9343, norm(x): 0.7885, norm(y): 1.0153, norm:0.8213, tok/sec: 97989.23, flops:102.85, batch-reuse:1
@ 1697 train 5.3753 , allloss: 5.3756, dt: 1312.28ms, fracRes: 0.7010, norm(attn): 0.1660, norm(output): 0.9342, norm(x): 0.7879, norm(y): 1.0159, norm:1.0710, tok/sec: 99881.22, flops:104.84, batch-reuse:1
@ 1698 train 5.3069 , allloss: 5.3075, dt: 1308.32ms, fracRes: 0.7008, norm(attn): 0.1641, norm(output): 0.9342, norm(x): 0.7875, norm(y): 1.0160, norm:1.1532, tok/sec: 100183.62, flops:105.16, batch-reuse:1
@ 1699 train 5.3453 , allloss: 5.3456, dt: 1298.25ms, fracRes: 0.7009, norm(attn): 0.1660, norm(output): 0.9342, norm(x): 0.7883, norm(y): 1.0157, norm:1.1864, tok/sec: 100960.88, flops:105.97, batch-reuse:1
@ 1700 train 5.3367 , allloss: 5.3370, dt: 1299.41ms, fracRes: 0.7014, norm(attn): 0.1689, norm(output): 0.9342, norm(x): 0.7875, norm(y): 1.0152, norm:0.8739, tok/sec: 100870.18, flops:105.88, batch-reuse:1
@ 1701 train 5.3078 , allloss: 5.3080, dt: 1281.78ms, fracRes: 0.7014, norm(attn): 0.1670, norm(output): 0.9343, norm(x): 0.7874, norm(y): 1.0150, norm:0.9730, tok/sec: 102257.63, flops:107.33, batch-reuse:1
@ 1702 train 5.3246 , allloss: 5.3250, dt: 1285.75ms, fracRes: 0.7012, norm(attn): 0.1650, norm(output): 0.9342, norm(x): 0.7875, norm(y): 1.0156, norm:1.2873, tok/sec: 101941.88, flops:107.00, batch-reuse:1
@ 1703 train 5.3139 , allloss: 5.3145, dt: 1293.31ms, fracRes: 0.7011, norm(attn): 0.1660, norm(output): 0.9342, norm(x): 0.7879, norm(y): 1.0156, norm:0.8444, tok/sec: 101345.87, flops:106.38, batch-reuse:1
@ 1704 train 5.2863 , allloss: 5.2867, dt: 1319.58ms, fracRes: 0.7010, norm(attn): 0.1670, norm(output): 0.9342, norm(x): 0.7878, norm(y): 1.0155, norm:0.9053, tok/sec: 99328.48, flops:104.26, batch-reuse:1
@ 1705 train 5.3071 , allloss: 5.3075, dt: 1298.89ms, fracRes: 0.7013, norm(attn): 0.1670, norm(output): 0.9341, norm(x): 0.7892, norm(y): 1.0152, norm:1.0316, tok/sec: 100911.16, flops:105.92, batch-reuse:1
@ 1706 train 5.2652 , allloss: 5.2659, dt: 1290.73ms, fracRes: 0.7013, norm(attn): 0.1660, norm(output): 0.9342, norm(x): 0.7891, norm(y): 1.0149, norm:1.0485, tok/sec: 101548.59, flops:106.59, batch-reuse:1
@ 1707 train 5.2708 , allloss: 5.2712, dt: 1307.61ms, fracRes: 0.7008, norm(attn): 0.1670, norm(output): 0.9341, norm(x): 0.7887, norm(y): 1.0156, norm:1.2175, tok/sec: 100237.51, flops:105.21, batch-reuse:1
@ 1708 train 5.2392 , allloss: 5.2409, dt: 1282.88ms, fracRes: 0.7010, norm(attn): 0.1670, norm(output): 0.9341, norm(x): 0.7878, norm(y): 1.0155, norm:1.1924, tok/sec: 102170.04, flops:107.24, batch-reuse:1
@ 1709 train 5.3309 , allloss: 5.3333, dt: 1303.67ms, fracRes: 0.7015, norm(attn): 0.1670, norm(output): 0.9341, norm(x): 0.7875, norm(y): 1.0149, norm:0.9696, tok/sec: 100540.82, flops:105.53, batch-reuse:1
@ 1710 train 5.2680 , allloss: 5.2685, dt: 1295.80ms, fracRes: 0.7014, norm(attn): 0.1689, norm(output): 0.9340, norm(x): 0.7868, norm(y): 1.0150, norm:0.9136, tok/sec: 101151.06, flops:106.17, batch-reuse:1
@ 1711 train 5.2824 , allloss: 5.2829, dt: 1301.22ms, fracRes: 0.7011, norm(attn): 0.1670, norm(output): 0.9341, norm(x): 0.7875, norm(y): 1.0155, norm:0.8413, tok/sec: 100730.44, flops:105.73, batch-reuse:1
@ 1712 train 5.3832 , allloss: 5.3835, dt: 1302.57ms, fracRes: 0.7009, norm(attn): 0.1660, norm(output): 0.9341, norm(x): 0.7875, norm(y): 1.0157, norm:0.7514, tok/sec: 100625.38, flops:105.62, batch-reuse:1
@ 1713 train 5.1404 , allloss: 5.1410, dt: 1307.23ms, fracRes: 0.7009, norm(attn): 0.1660, norm(output): 0.9341, norm(x): 0.7879, norm(y): 1.0157, norm:0.8271, tok/sec: 100267.20, flops:105.24, batch-reuse:1
@ 1714 train 5.2900 , allloss: 5.2905, dt: 1287.42ms, fracRes: 0.7012, norm(attn): 0.1660, norm(output): 0.9342, norm(x): 0.7890, norm(y): 1.0150, norm:0.8434, tok/sec: 101810.14, flops:106.86, batch-reuse:1
@ 1715 train 5.2913 , allloss: 5.2918, dt: 1315.17ms, fracRes: 0.7011, norm(attn): 0.1670, norm(output): 0.9341, norm(x): 0.7881, norm(y): 1.0150, norm:0.9640, tok/sec: 99661.28, flops:104.61, batch-reuse:1
@ 1716 train 5.3342 , allloss: 5.3345, dt: 1315.04ms, fracRes: 0.7011, norm(attn): 0.1680, norm(output): 0.9341, norm(x): 0.7868, norm(y): 1.0151, norm:1.0057, tok/sec: 99671.86, flops:104.62, batch-reuse:1
@ 1717 train 5.4885 , allloss: 5.4890, dt: 1304.93ms, fracRes: 0.7014, norm(attn): 0.1660, norm(output): 0.9342, norm(x): 0.7869, norm(y): 1.0152, norm:0.9607, tok/sec: 100443.34, flops:105.43, batch-reuse:1
@ 1718 train 5.2808 , allloss: 5.2810, dt: 1304.88ms, fracRes: 0.7018, norm(attn): 0.1709, norm(output): 0.9342, norm(x): 0.7857, norm(y): 1.0149, norm:0.8789, tok/sec: 100447.74, flops:105.43, batch-reuse:1
@ 1719 train 5.4080 , allloss: 5.4083, dt: 1316.58ms, fracRes: 0.7020, norm(attn): 0.1689, norm(output): 0.9342, norm(x): 0.7864, norm(y): 1.0147, norm:1.0603, tok/sec: 99554.67, flops:104.50, batch-reuse:1
@ 1720 train 5.3018 , allloss: 5.3021, dt: 1326.52ms, fracRes: 0.7022, norm(attn): 0.1709, norm(output): 0.9343, norm(x): 0.7860, norm(y): 1.0142, norm:0.9498, tok/sec: 98808.61, flops:103.71, batch-reuse:1
@ 1721 train 5.3253 , allloss: 5.3255, dt: 1330.21ms, fracRes: 0.7019, norm(attn): 0.1709, norm(output): 0.9343, norm(x): 0.7852, norm(y): 1.0143, norm:0.7794, tok/sec: 98535.03, flops:103.43, batch-reuse:1
@ 1722 train 5.4115 , allloss: 5.4117, dt: 1311.49ms, fracRes: 0.7014, norm(attn): 0.1699, norm(output): 0.9342, norm(x): 0.7847, norm(y): 1.0151, norm:0.8363, tok/sec: 99941.45, flops:104.90, batch-reuse:1
@ 1723 train 5.3176 , allloss: 5.3178, dt: 1352.37ms, fracRes: 0.7013, norm(attn): 0.1670, norm(output): 0.9342, norm(x): 0.7839, norm(y): 1.0153, norm:0.8195, tok/sec: 96920.29, flops:101.73, batch-reuse:1
@ 1724 train 5.2418 , allloss: 5.2421, dt: 1339.27ms, fracRes: 0.7015, norm(attn): 0.1670, norm(output): 0.9342, norm(x): 0.7860, norm(y): 1.0151, norm:0.8426, tok/sec: 97868.29, flops:102.73, batch-reuse:1
@ 1725 train 5.2870 , allloss: 5.2871, dt: 1335.80ms, fracRes: 0.7016, norm(attn): 0.1670, norm(output): 0.9343, norm(x): 0.7875, norm(y): 1.0147, norm:1.1070, tok/sec: 98122.15, flops:102.99, batch-reuse:1
@ 1726 train 5.2753 , allloss: 5.2757, dt: 1328.84ms, fracRes: 0.7017, norm(attn): 0.1689, norm(output): 0.9343, norm(x): 0.7874, norm(y): 1.0146, norm:1.0110, tok/sec: 98636.46, flops:103.53, batch-reuse:1
@ 1727 train 5.2227 , allloss: 5.2230, dt: 1322.14ms, fracRes: 0.7015, norm(attn): 0.1709, norm(output): 0.9343, norm(x): 0.7872, norm(y): 1.0146, norm:1.1675, tok/sec: 99136.61, flops:104.06, batch-reuse:1
@ 1728 train 5.3395 , allloss: 5.3400, dt: 1329.49ms, fracRes: 0.7013, norm(attn): 0.1709, norm(output): 0.9343, norm(x): 0.7869, norm(y): 1.0143, norm:0.7953, tok/sec: 98587.81, flops:103.48, batch-reuse:1
@ 1729 train 5.4624 , allloss: 5.4626, dt: 1337.23ms, fracRes: 0.7012, norm(attn): 0.1680, norm(output): 0.9343, norm(x): 0.7869, norm(y): 1.0141, norm:0.8273, tok/sec: 98017.63, flops:102.88, batch-reuse:1
@ 1730 train 5.3329 , allloss: 5.3332, dt: 1324.60ms, fracRes: 0.7010, norm(attn): 0.1689, norm(output): 0.9342, norm(x): 0.7863, norm(y): 1.0147, norm:1.0113, tok/sec: 98951.82, flops:103.86, batch-reuse:1
@ 1731 train 5.2679 , allloss: 5.2682, dt: 1320.35ms, fracRes: 0.7012, norm(attn): 0.1709, norm(output): 0.9342, norm(x): 0.7852, norm(y): 1.0149, norm:0.9046, tok/sec: 99270.38, flops:104.20, batch-reuse:1
@ 1732 train 5.2430 , allloss: 5.2433, dt: 1322.91ms, fracRes: 0.7014, norm(attn): 0.1709, norm(output): 0.9342, norm(x): 0.7850, norm(y): 1.0148, norm:0.6873, tok/sec: 99078.29, flops:104.00, batch-reuse:1
@ 1733 train 5.2556 , allloss: 5.2558, dt: 1297.77ms, fracRes: 0.7015, norm(attn): 0.1670, norm(output): 0.9342, norm(x): 0.7851, norm(y): 1.0147, norm:0.7777, tok/sec: 100997.72, flops:106.01, batch-reuse:1
@ 1734 train 5.6157 , allloss: 5.6159, dt: 1302.00ms, fracRes: 0.7016, norm(attn): 0.1650, norm(output): 0.9342, norm(x): 0.7851, norm(y): 1.0144, norm:0.8594, tok/sec: 100669.90, flops:105.67, batch-reuse:1
@ 1735 train 5.2635 , allloss: 5.2636, dt: 1324.71ms, fracRes: 0.7014, norm(attn): 0.1699, norm(output): 0.9342, norm(x): 0.7857, norm(y): 1.0146, norm:0.8488, tok/sec: 98943.61, flops:103.85, batch-reuse:1
@ 1736 train 5.2601 , allloss: 5.2603, dt: 1319.75ms, fracRes: 0.7012, norm(attn): 0.1709, norm(output): 0.9341, norm(x): 0.7852, norm(y): 1.0149, norm:1.1969, tok/sec: 99315.94, flops:104.25, batch-reuse:1
@ 1737 train 5.2055 , allloss: 5.2056, dt: 1311.83ms, fracRes: 0.7012, norm(attn): 0.1709, norm(output): 0.9341, norm(x): 0.7857, norm(y): 1.0150, norm:0.8376, tok/sec: 99915.31, flops:104.87, batch-reuse:1
@ 1738 train 5.1771 , allloss: 5.1773, dt: 1309.50ms, fracRes: 0.7011, norm(attn): 0.1709, norm(output): 0.9341, norm(x): 0.7850, norm(y): 1.0149, norm:0.7755, tok/sec: 100093.46, flops:105.06, batch-reuse:1
@ 1739 train 5.2637 , allloss: 5.2640, dt: 1309.06ms, fracRes: 0.7010, norm(attn): 0.1719, norm(output): 0.9341, norm(x): 0.7847, norm(y): 1.0149, norm:0.7580, tok/sec: 100126.73, flops:105.10, batch-reuse:1
@ 1740 train 5.1677 , allloss: 5.1678, dt: 1288.65ms, fracRes: 0.7010, norm(attn): 0.1709, norm(output): 0.9342, norm(x): 0.7857, norm(y): 1.0148, norm:0.7454, tok/sec: 101712.72, flops:106.76, batch-reuse:1
@ 1741 train 5.2650 , allloss: 5.2651, dt: 1296.58ms, fracRes: 0.7013, norm(attn): 0.1709, norm(output): 0.9342, norm(x): 0.7854, norm(y): 1.0148, norm:0.6615, tok/sec: 101090.44, flops:106.11, batch-reuse:1
@ 1742 train 5.2324 , allloss: 5.2327, dt: 1307.93ms, fracRes: 0.7013, norm(attn): 0.1699, norm(output): 0.9341, norm(x): 0.7849, norm(y): 1.0149, norm:0.6906, tok/sec: 100213.30, flops:105.19, batch-reuse:1
@ 1743 train 5.3174 , allloss: 5.3176, dt: 1316.72ms, fracRes: 0.7014, norm(attn): 0.1709, norm(output): 0.9341, norm(x): 0.7840, norm(y): 1.0149, norm:0.6985, tok/sec: 99544.45, flops:104.49, batch-reuse:1
@ 1744 train 5.1614 , allloss: 5.1616, dt: 1300.40ms, fracRes: 0.7014, norm(attn): 0.1709, norm(output): 0.9342, norm(x): 0.7840, norm(y): 1.0148, norm:0.6911, tok/sec: 100793.23, flops:105.80, batch-reuse:1
@ 1745 train 5.1726 , allloss: 5.1729, dt: 1272.75ms, fracRes: 0.7013, norm(attn): 0.1709, norm(output): 0.9341, norm(x): 0.7845, norm(y): 1.0149, norm:0.7140, tok/sec: 102983.10, flops:108.09, batch-reuse:1
@ 1746 train 5.2685 , allloss: 5.2697, dt: 1310.38ms, fracRes: 0.7013, norm(attn): 0.1689, norm(output): 0.9341, norm(x): 0.7844, norm(y): 1.0149, norm:0.8364, tok/sec: 100026.31, flops:104.99, batch-reuse:1
@ 1747 train 5.1341 , allloss: 5.1343, dt: 1322.34ms, fracRes: 0.7011, norm(attn): 0.1680, norm(output): 0.9340, norm(x): 0.7844, norm(y): 1.0151, norm:1.0424, tok/sec: 99120.97, flops:104.04, batch-reuse:1
@ 1748 train 5.1905 , allloss: 5.1921, dt: 1336.97ms, fracRes: 0.7012, norm(attn): 0.1689, norm(output): 0.9341, norm(x): 0.7828, norm(y): 1.0149, norm:0.9816, tok/sec: 98036.37, flops:102.90, batch-reuse:1
@ 1749 train 5.2756 , allloss: 5.2758, dt: 1313.14ms, fracRes: 0.7016, norm(attn): 0.1709, norm(output): 0.9342, norm(x): 0.7824, norm(y): 1.0147, norm:0.8959, tok/sec: 99815.93, flops:104.77, batch-reuse:1
@ 1750 train 5.2629 , allloss: 5.2635, dt: 1305.02ms, fracRes: 0.7018, norm(attn): 0.1709, norm(output): 0.9342, norm(x): 0.7839, norm(y): 1.0142, norm:0.7236, tok/sec: 100436.55, flops:105.42, batch-reuse:1
@ 1751 train 5.4737 , allloss: 5.4741, dt: 1322.32ms, fracRes: 0.7021, norm(attn): 0.1689, norm(output): 0.9344, norm(x): 0.7847, norm(y): 1.0138, norm:0.9293, tok/sec: 99122.99, flops:104.04, batch-reuse:1
@ 1752 train 5.4954 , allloss: 5.4962, dt: 1313.42ms, fracRes: 0.7022, norm(attn): 0.1699, norm(output): 0.9343, norm(x): 0.7850, norm(y): 1.0139, norm:1.2895, tok/sec: 99794.06, flops:104.75, batch-reuse:1
@ 1753 train 5.2944 , allloss: 5.2947, dt: 1277.06ms, fracRes: 0.7015, norm(attn): 0.1699, norm(output): 0.9343, norm(x): 0.7858, norm(y): 1.0143, norm:1.2137, tok/sec: 102635.91, flops:107.73, batch-reuse:1
@ 1754 train 5.2688 , allloss: 5.2691, dt: 1280.43ms, fracRes: 0.7011, norm(attn): 0.1699, norm(output): 0.9342, norm(x): 0.7847, norm(y): 1.0145, norm:0.9078, tok/sec: 102365.22, flops:107.45, batch-reuse:1
@ 1755 train 5.2714 , allloss: 5.2723, dt: 1310.79ms, fracRes: 0.7009, norm(attn): 0.1699, norm(output): 0.9340, norm(x): 0.7827, norm(y): 1.0150, norm:1.1015, tok/sec: 99994.76, flops:104.96, batch-reuse:1
@ 1756 train 5.2575 , allloss: 5.2582, dt: 1337.57ms, fracRes: 0.7009, norm(attn): 0.1719, norm(output): 0.9341, norm(x): 0.7819, norm(y): 1.0150, norm:0.6937, tok/sec: 97992.96, flops:102.86, batch-reuse:1
@ 1757 train 5.3161 , allloss: 5.3168, dt: 1337.02ms, fracRes: 0.7006, norm(attn): 0.1709, norm(output): 0.9341, norm(x): 0.7812, norm(y): 1.0155, norm:0.9420, tok/sec: 98032.63, flops:102.90, batch-reuse:1
@ 1758 train 5.3320 , allloss: 5.3339, dt: 1317.66ms, fracRes: 0.7006, norm(attn): 0.1729, norm(output): 0.9341, norm(x): 0.7809, norm(y): 1.0151, norm:0.9213, tok/sec: 99473.21, flops:104.41, batch-reuse:1
@ 1759 train 5.2834 , allloss: 5.2844, dt: 1349.49ms, fracRes: 0.7006, norm(attn): 0.1738, norm(output): 0.9341, norm(x): 0.7814, norm(y): 1.0149, norm:1.1290, tok/sec: 97127.41, flops:101.95, batch-reuse:1
@ 1760 train 5.1876 , allloss: 5.1889, dt: 1309.49ms, fracRes: 0.7009, norm(attn): 0.1748, norm(output): 0.9341, norm(x): 0.7821, norm(y): 1.0145, norm:1.1617, tok/sec: 100093.64, flops:105.06, batch-reuse:1
@ 1761 train 5.1309 , allloss: 5.1323, dt: 1319.37ms, fracRes: 0.7011, norm(attn): 0.1719, norm(output): 0.9342, norm(x): 0.7845, norm(y): 1.0142, norm:0.8979, tok/sec: 99344.02, flops:104.27, batch-reuse:1
@ 1762 train 5.0546 , allloss: 5.0560, dt: 1310.53ms, fracRes: 0.7014, norm(attn): 0.1719, norm(output): 0.9341, norm(x): 0.7834, norm(y): 1.0144, norm:1.5140, tok/sec: 100014.87, flops:104.98, batch-reuse:1
@ 1763 train 5.1771 , allloss: 5.1804, dt: 1316.07ms, fracRes: 0.7015, norm(attn): 0.1719, norm(output): 0.9341, norm(x): 0.7827, norm(y): 1.0143, norm:0.9434, tok/sec: 99593.21, flops:104.54, batch-reuse:1
@ 1764 train 5.2014 , allloss: 5.2018, dt: 1307.42ms, fracRes: 0.7020, norm(attn): 0.1699, norm(output): 0.9341, norm(x): 0.7819, norm(y): 1.0141, norm:1.1413, tok/sec: 100252.68, flops:105.23, batch-reuse:1
@ 1765 train 5.1904 , allloss: 5.1907, dt: 1298.61ms, fracRes: 0.7019, norm(attn): 0.1709, norm(output): 0.9342, norm(x): 0.7834, norm(y): 1.0140, norm:0.9519, tok/sec: 100932.89, flops:105.94, batch-reuse:1
@ 1766 train 5.1124 , allloss: 5.1130, dt: 1307.06ms, fracRes: 0.7017, norm(attn): 0.1709, norm(output): 0.9341, norm(x): 0.7827, norm(y): 1.0144, norm:0.8572, tok/sec: 100279.96, flops:105.26, batch-reuse:1
@ 1767 train 5.2152 , allloss: 5.2155, dt: 1313.78ms, fracRes: 0.7019, norm(attn): 0.1709, norm(output): 0.9341, norm(x): 0.7826, norm(y): 1.0140, norm:0.9909, tok/sec: 99766.92, flops:104.72, batch-reuse:1
@ 1768 train 5.2611 , allloss: 5.2626, dt: 1314.23ms, fracRes: 0.7021, norm(attn): 0.1699, norm(output): 0.9341, norm(x): 0.7822, norm(y): 1.0141, norm:0.7982, tok/sec: 99732.60, flops:104.68, batch-reuse:1
@ 1769 train 5.1557 , allloss: 5.1562, dt: 1292.56ms, fracRes: 0.7016, norm(attn): 0.1699, norm(output): 0.9340, norm(x): 0.7806, norm(y): 1.0145, norm:1.0953, tok/sec: 101405.26, flops:106.44, batch-reuse:1
@ 1770 train 5.1361 , allloss: 5.1367, dt: 1301.32ms, fracRes: 0.7014, norm(attn): 0.1719, norm(output): 0.9338, norm(x): 0.7788, norm(y): 1.0146, norm:0.9049, tok/sec: 100722.12, flops:105.72, batch-reuse:1
@ 1771 train 5.1325 , allloss: 5.1343, dt: 1302.81ms, fracRes: 0.7012, norm(attn): 0.1758, norm(output): 0.9338, norm(x): 0.7789, norm(y): 1.0145, norm:0.9363, tok/sec: 100607.43, flops:105.60, batch-reuse:1
@ 1772 train 5.1703 , allloss: 5.1707, dt: 1311.42ms, fracRes: 0.7014, norm(attn): 0.1729, norm(output): 0.9339, norm(x): 0.7812, norm(y): 1.0143, norm:0.9982, tok/sec: 99946.44, flops:104.91, batch-reuse:1
@ 1773 train 5.0620 , allloss: 5.0627, dt: 1286.41ms, fracRes: 0.7015, norm(attn): 0.1729, norm(output): 0.9339, norm(x): 0.7820, norm(y): 1.0140, norm:0.9418, tok/sec: 101889.77, flops:106.95, batch-reuse:1
@ 1774 train 5.2082 , allloss: 5.2087, dt: 1288.53ms, fracRes: 0.7018, norm(attn): 0.1719, norm(output): 0.9339, norm(x): 0.7822, norm(y): 1.0139, norm:0.7587, tok/sec: 101722.50, flops:106.77, batch-reuse:1
@ 1775 train 5.1436 , allloss: 5.1439, dt: 1313.99ms, fracRes: 0.7017, norm(attn): 0.1748, norm(output): 0.9339, norm(x): 0.7820, norm(y): 1.0141, norm:0.7478, tok/sec: 99751.02, flops:104.70, batch-reuse:1
@ 1776 train 5.1096 , allloss: 5.1100, dt: 1294.06ms, fracRes: 0.7016, norm(attn): 0.1738, norm(output): 0.9337, norm(x): 0.7812, norm(y): 1.0142, norm:0.7894, tok/sec: 101287.51, flops:106.31, batch-reuse:1
@ 1777 train 5.0737 , allloss: 5.0742, dt: 1295.40ms, fracRes: 0.7015, norm(attn): 0.1738, norm(output): 0.9337, norm(x): 0.7810, norm(y): 1.0146, norm:0.6970, tok/sec: 101182.56, flops:106.20, batch-reuse:1
@ 1778 train 5.4508 , allloss: 5.4522, dt: 1295.17ms, fracRes: 0.7017, norm(attn): 0.1719, norm(output): 0.9338, norm(x): 0.7811, norm(y): 1.0145, norm:0.9124, tok/sec: 101200.63, flops:106.22, batch-reuse:1
@ 1779 train 5.0881 , allloss: 5.0884, dt: 1283.81ms, fracRes: 0.7017, norm(attn): 0.1719, norm(output): 0.9337, norm(x): 0.7811, norm(y): 1.0145, norm:0.7961, tok/sec: 102096.42, flops:107.16, batch-reuse:1
@ 1780 train 5.1788 , allloss: 5.1790, dt: 1297.70ms, fracRes: 0.7021, norm(attn): 0.1738, norm(output): 0.9337, norm(x): 0.7811, norm(y): 1.0141, norm:0.8366, tok/sec: 101003.69, flops:106.02, batch-reuse:1
@ 1781 train 5.1822 , allloss: 5.1831, dt: 1297.45ms, fracRes: 0.7019, norm(attn): 0.1729, norm(output): 0.9337, norm(x): 0.7805, norm(y): 1.0141, norm:0.8508, tok/sec: 101022.70, flops:106.04, batch-reuse:1
@ 1782 train 5.1991 , allloss: 5.1997, dt: 1299.15ms, fracRes: 0.7013, norm(attn): 0.1719, norm(output): 0.9337, norm(x): 0.7802, norm(y): 1.0144, norm:0.8130, tok/sec: 100890.79, flops:105.90, batch-reuse:1
@ 1783 train 5.1621 , allloss: 5.1625, dt: 1300.23ms, fracRes: 0.7009, norm(attn): 0.1719, norm(output): 0.9336, norm(x): 0.7793, norm(y): 1.0149, norm:1.1202, tok/sec: 100806.94, flops:105.81, batch-reuse:1
@ 1784 train 5.1254 , allloss: 5.1258, dt: 1310.46ms, fracRes: 0.7009, norm(attn): 0.1738, norm(output): 0.9335, norm(x): 0.7803, norm(y): 1.0149, norm:0.9001, tok/sec: 100019.63, flops:104.98, batch-reuse:1
@ 1785 train 5.1543 , allloss: 5.1545, dt: 1289.99ms, fracRes: 0.7009, norm(attn): 0.1729, norm(output): 0.9337, norm(x): 0.7820, norm(y): 1.0147, norm:0.7284, tok/sec: 101607.11, flops:106.65, batch-reuse:1
@ 1786 train 5.1904 , allloss: 5.1907, dt: 1308.32ms, fracRes: 0.7010, norm(attn): 0.1719, norm(output): 0.9337, norm(x): 0.7811, norm(y): 1.0145, norm:0.7586, tok/sec: 100183.69, flops:105.16, batch-reuse:1
@ 1787 train 5.1437 , allloss: 5.1438, dt: 1300.32ms, fracRes: 0.7012, norm(attn): 0.1719, norm(output): 0.9336, norm(x): 0.7791, norm(y): 1.0146, norm:0.7669, tok/sec: 100799.99, flops:105.80, batch-reuse:1
@ 1788 train 5.1737 , allloss: 5.1738, dt: 1283.89ms, fracRes: 0.7014, norm(attn): 0.1699, norm(output): 0.9336, norm(x): 0.7794, norm(y): 1.0146, norm:0.7464, tok/sec: 102089.51, flops:107.16, batch-reuse:1
@ 1789 train 5.2130 , allloss: 5.2131, dt: 1299.04ms, fracRes: 0.7014, norm(attn): 0.1709, norm(output): 0.9338, norm(x): 0.7796, norm(y): 1.0145, norm:0.8467, tok/sec: 100899.25, flops:105.91, batch-reuse:1
@ 1790 train 5.2481 , allloss: 5.2486, dt: 1309.68ms, fracRes: 0.7015, norm(attn): 0.1709, norm(output): 0.9337, norm(x): 0.7796, norm(y): 1.0144, norm:0.7938, tok/sec: 100079.72, flops:105.05, batch-reuse:1
@ 1791 train 5.1606 , allloss: 5.1609, dt: 1292.69ms, fracRes: 0.7016, norm(attn): 0.1719, norm(output): 0.9337, norm(x): 0.7792, norm(y): 1.0142, norm:0.6764, tok/sec: 101394.84, flops:106.43, batch-reuse:1
@ 1792 train 5.2329 , allloss: 5.2331, dt: 1304.75ms, fracRes: 0.7016, norm(attn): 0.1719, norm(output): 0.9337, norm(x): 0.7788, norm(y): 1.0142, norm:0.7965, tok/sec: 100457.25, flops:105.44, batch-reuse:1
@ 1793 train 5.1958 , allloss: 5.1960, dt: 1317.40ms, fracRes: 0.7014, norm(attn): 0.1719, norm(output): 0.9338, norm(x): 0.7793, norm(y): 1.0141, norm:0.8661, tok/sec: 99492.82, flops:104.43, batch-reuse:1
@ 1794 train 5.1838 , allloss: 5.1840, dt: 1341.68ms, fracRes: 0.7013, norm(attn): 0.1719, norm(output): 0.9337, norm(x): 0.7797, norm(y): 1.0144, norm:0.8767, tok/sec: 97692.49, flops:102.54, batch-reuse:1
@ 1795 train 5.1894 , allloss: 5.1897, dt: 1312.39ms, fracRes: 0.7013, norm(attn): 0.1719, norm(output): 0.9337, norm(x): 0.7789, norm(y): 1.0145, norm:0.9408, tok/sec: 99873.07, flops:104.83, batch-reuse:1
@ 1796 train 5.0899 , allloss: 5.0901, dt: 1291.19ms, fracRes: 0.7015, norm(attn): 0.1709, norm(output): 0.9337, norm(x): 0.7789, norm(y): 1.0143, norm:0.9168, tok/sec: 101512.75, flops:106.55, batch-reuse:1
@ 1797 train 5.1493 , allloss: 5.1497, dt: 1292.51ms, fracRes: 0.7013, norm(attn): 0.1709, norm(output): 0.9337, norm(x): 0.7803, norm(y): 1.0144, norm:0.9766, tok/sec: 101408.64, flops:106.44, batch-reuse:1
@ 1798 train 5.1363 , allloss: 5.1366, dt: 1308.52ms, fracRes: 0.7012, norm(attn): 0.1719, norm(output): 0.9338, norm(x): 0.7806, norm(y): 1.0143, norm:0.9281, tok/sec: 100168.01, flops:105.14, batch-reuse:1
@ 1799 train 5.1945 , allloss: 5.1947, dt: 1314.85ms, fracRes: 0.7012, norm(attn): 0.1729, norm(output): 0.9338, norm(x): 0.7802, norm(y): 1.0139, norm:0.8621, tok/sec: 99685.56, flops:104.63, batch-reuse:1
@ 1800 train 5.1114 , allloss: 5.1115, dt: 1313.13ms, fracRes: 0.7010, norm(attn): 0.1719, norm(output): 0.9337, norm(x): 0.7789, norm(y): 1.0144, norm:0.7915, tok/sec: 99816.73, flops:104.77, batch-reuse:1
@ 1801 train 5.0966 , allloss: 5.0968, dt: 1320.84ms, fracRes: 0.7011, norm(attn): 0.1709, norm(output): 0.9337, norm(x): 0.7800, norm(y): 1.0144, norm:0.8312, tok/sec: 99233.99, flops:104.16, batch-reuse:1
@ 1802 train 5.2265 , allloss: 5.2266, dt: 1289.07ms, fracRes: 0.7015, norm(attn): 0.1699, norm(output): 0.9338, norm(x): 0.7789, norm(y): 1.0140, norm:0.8359, tok/sec: 101679.65, flops:106.73, batch-reuse:1
@ 1803 train 5.1681 , allloss: 5.1682, dt: 1306.15ms, fracRes: 0.7017, norm(attn): 0.1719, norm(output): 0.9338, norm(x): 0.7785, norm(y): 1.0139, norm:1.0491, tok/sec: 100349.79, flops:105.33, batch-reuse:1
@ 1804 train 5.1203 , allloss: 5.1204, dt: 1314.54ms, fracRes: 0.7015, norm(attn): 0.1748, norm(output): 0.9340, norm(x): 0.7777, norm(y): 1.0137, norm:1.0637, tok/sec: 99709.18, flops:104.66, batch-reuse:1
@ 1805 train 5.2143 , allloss: 5.2145, dt: 1328.22ms, fracRes: 0.7015, norm(attn): 0.1768, norm(output): 0.9337, norm(x): 0.7781, norm(y): 1.0139, norm:1.1030, tok/sec: 98682.76, flops:103.58, batch-reuse:1
@ 1806 train 5.1653 , allloss: 5.1655, dt: 1300.33ms, fracRes: 0.7014, norm(attn): 0.1738, norm(output): 0.9338, norm(x): 0.7785, norm(y): 1.0139, norm:0.9127, tok/sec: 100799.39, flops:105.80, batch-reuse:1
@ 1807 train 5.2070 , allloss: 5.2072, dt: 1313.53ms, fracRes: 0.7012, norm(attn): 0.1719, norm(output): 0.9337, norm(x): 0.7784, norm(y): 1.0146, norm:0.8002, tok/sec: 99786.40, flops:104.74, batch-reuse:1
@ 1808 train 5.1006 , allloss: 5.1009, dt: 1322.89ms, fracRes: 0.7013, norm(attn): 0.1729, norm(output): 0.9335, norm(x): 0.7776, norm(y): 1.0148, norm:0.9266, tok/sec: 99080.34, flops:104.00, batch-reuse:1
@ 1809 train 5.0613 , allloss: 5.0615, dt: 1339.20ms, fracRes: 0.7010, norm(attn): 0.1738, norm(output): 0.9337, norm(x): 0.7785, norm(y): 1.0144, norm:0.8821, tok/sec: 97873.36, flops:102.73, batch-reuse:1
@ 1810 train 5.0068 , allloss: 5.0075, dt: 1300.64ms, fracRes: 0.7011, norm(attn): 0.1748, norm(output): 0.9337, norm(x): 0.7789, norm(y): 1.0139, norm:1.1721, tok/sec: 100774.85, flops:105.78, batch-reuse:1
@ 1811 train 5.0621 , allloss: 5.0631, dt: 1337.52ms, fracRes: 0.7012, norm(attn): 0.1738, norm(output): 0.9337, norm(x): 0.7787, norm(y): 1.0140, norm:0.9567, tok/sec: 97996.65, flops:102.86, batch-reuse:1
@ 1812 train 5.1058 , allloss: 5.1061, dt: 1330.17ms, fracRes: 0.7012, norm(attn): 0.1729, norm(output): 0.9337, norm(x): 0.7779, norm(y): 1.0142, norm:0.9749, tok/sec: 98537.68, flops:103.43, batch-reuse:1
@ 1813 train 5.0640 , allloss: 5.0646, dt: 1333.32ms, fracRes: 0.7015, norm(attn): 0.1709, norm(output): 0.9337, norm(x): 0.7769, norm(y): 1.0141, norm:1.2199, tok/sec: 98304.88, flops:103.18, batch-reuse:1
@ 1814 train 5.1638 , allloss: 5.1644, dt: 1322.47ms, fracRes: 0.7017, norm(attn): 0.1709, norm(output): 0.9338, norm(x): 0.7776, norm(y): 1.0137, norm:1.1800, tok/sec: 99111.76, flops:104.03, batch-reuse:1
@ 1815 train 5.0504 , allloss: 5.0509, dt: 1346.89ms, fracRes: 0.7017, norm(attn): 0.1709, norm(output): 0.9338, norm(x): 0.7775, norm(y): 1.0138, norm:0.9486, tok/sec: 97314.68, flops:102.14, batch-reuse:1
@ 1816 train 5.0929 , allloss: 5.0932, dt: 1352.18ms, fracRes: 0.7014, norm(attn): 0.1709, norm(output): 0.9337, norm(x): 0.7781, norm(y): 1.0143, norm:1.0275, tok/sec: 96933.55, flops:101.74, batch-reuse:1
@ 1817 train 5.0943 , allloss: 5.0947, dt: 1294.43ms, fracRes: 0.7012, norm(attn): 0.1719, norm(output): 0.9336, norm(x): 0.7785, norm(y): 1.0146, norm:0.9754, tok/sec: 101258.65, flops:106.28, batch-reuse:1
@ 1818 train 5.0523 , allloss: 5.0525, dt: 1300.88ms, fracRes: 0.7010, norm(attn): 0.1729, norm(output): 0.9337, norm(x): 0.7799, norm(y): 1.0145, norm:0.9526, tok/sec: 100756.27, flops:105.76, batch-reuse:1
@ 1819 train 5.1717 , allloss: 5.1719, dt: 1296.98ms, fracRes: 0.7009, norm(attn): 0.1748, norm(output): 0.9338, norm(x): 0.7795, norm(y): 1.0143, norm:0.9139, tok/sec: 101059.61, flops:106.08, batch-reuse:1
@ 1820 train 5.0809 , allloss: 5.0811, dt: 1286.18ms, fracRes: 0.7008, norm(attn): 0.1768, norm(output): 0.9338, norm(x): 0.7779, norm(y): 1.0144, norm:0.9671, tok/sec: 101908.28, flops:106.97, batch-reuse:1
@ 1821 train 4.9834 , allloss: 4.9836, dt: 1310.97ms, fracRes: 0.7011, norm(attn): 0.1729, norm(output): 0.9336, norm(x): 0.7772, norm(y): 1.0145, norm:0.8119, tok/sec: 99981.25, flops:104.94, batch-reuse:1
@ 1822 train 4.9754 , allloss: 4.9758, dt: 1297.82ms, fracRes: 0.7014, norm(attn): 0.1748, norm(output): 0.9337, norm(x): 0.7780, norm(y): 1.0140, norm:0.8074, tok/sec: 100994.28, flops:106.01, batch-reuse:1
@ 1823 train 4.9962 , allloss: 4.9964, dt: 1316.15ms, fracRes: 0.7015, norm(attn): 0.1748, norm(output): 0.9339, norm(x): 0.7790, norm(y): 1.0139, norm:0.7692, tok/sec: 99587.17, flops:104.53, batch-reuse:1
@ 1824 train 5.0551 , allloss: 5.0555, dt: 1325.08ms, fracRes: 0.7017, norm(attn): 0.1738, norm(output): 0.9338, norm(x): 0.7784, norm(y): 1.0141, norm:0.8871, tok/sec: 98916.14, flops:103.83, batch-reuse:1
@ 1825 train 5.0952 , allloss: 5.0957, dt: 1348.22ms, fracRes: 0.7017, norm(attn): 0.1738, norm(output): 0.9338, norm(x): 0.7771, norm(y): 1.0142, norm:0.7701, tok/sec: 97218.41, flops:102.04, batch-reuse:1
@ 1826 train 5.0859 , allloss: 5.0862, dt: 1310.75ms, fracRes: 0.7019, norm(attn): 0.1738, norm(output): 0.9338, norm(x): 0.7768, norm(y): 1.0139, norm:0.7175, tok/sec: 99998.04, flops:104.96, batch-reuse:1
@ 1827 train 5.1401 , allloss: 5.1404, dt: 1307.88ms, fracRes: 0.7021, norm(attn): 0.1748, norm(output): 0.9338, norm(x): 0.7776, norm(y): 1.0139, norm:0.8792, tok/sec: 100217.28, flops:105.19, batch-reuse:1
@ 1828 train 5.0816 , allloss: 5.0821, dt: 1303.84ms, fracRes: 0.7016, norm(attn): 0.1729, norm(output): 0.9338, norm(x): 0.7780, norm(y): 1.0141, norm:0.9323, tok/sec: 100527.42, flops:105.52, batch-reuse:1
@ 1829 train 5.1349 , allloss: 5.1355, dt: 1314.17ms, fracRes: 0.7012, norm(attn): 0.1719, norm(output): 0.9338, norm(x): 0.7777, norm(y): 1.0143, norm:0.9232, tok/sec: 99737.18, flops:104.69, batch-reuse:1
@ 1830 train 4.9662 , allloss: 4.9664, dt: 1311.80ms, fracRes: 0.7012, norm(attn): 0.1719, norm(output): 0.9339, norm(x): 0.7767, norm(y): 1.0142, norm:0.8966, tok/sec: 99917.34, flops:104.88, batch-reuse:1
@ 1831 train 5.0345 , allloss: 5.0351, dt: 1343.37ms, fracRes: 0.7016, norm(attn): 0.1719, norm(output): 0.9338, norm(x): 0.7760, norm(y): 1.0139, norm:0.5684, tok/sec: 97569.88, flops:102.41, batch-reuse:1
@ 1832 train 5.0659 , allloss: 5.0663, dt: 1342.56ms, fracRes: 0.7014, norm(attn): 0.1729, norm(output): 0.9338, norm(x): 0.7763, norm(y): 1.0141, norm:0.7675, tok/sec: 97628.39, flops:102.47, batch-reuse:1
@ 1833 train 5.1717 , allloss: 5.1719, dt: 1340.35ms, fracRes: 0.7013, norm(attn): 0.1748, norm(output): 0.9338, norm(x): 0.7767, norm(y): 1.0143, norm:0.7997, tok/sec: 97789.35, flops:102.64, batch-reuse:1
@ 1834 train 5.0730 , allloss: 5.0731, dt: 1313.33ms, fracRes: 0.7012, norm(attn): 0.1768, norm(output): 0.9338, norm(x): 0.7767, norm(y): 1.0144, norm:1.0635, tok/sec: 99801.04, flops:104.75, batch-reuse:1
@ 1835 train 4.9734 , allloss: 4.9737, dt: 1339.46ms, fracRes: 0.7014, norm(attn): 0.1729, norm(output): 0.9338, norm(x): 0.7771, norm(y): 1.0140, norm:0.9110, tok/sec: 97854.09, flops:102.71, batch-reuse:1
@ 1836 train 5.1116 , allloss: 5.1127, dt: 1325.79ms, fracRes: 0.7017, norm(attn): 0.1729, norm(output): 0.9339, norm(x): 0.7772, norm(y): 1.0137, norm:0.8481, tok/sec: 98863.15, flops:103.77, batch-reuse:1
@ 1837 train 5.1779 , allloss: 5.1783, dt: 1327.53ms, fracRes: 0.7015, norm(attn): 0.1729, norm(output): 0.9339, norm(x): 0.7764, norm(y): 1.0141, norm:1.0532, tok/sec: 98733.59, flops:103.63, batch-reuse:1
@ 1838 train 5.0997 , allloss: 5.0999, dt: 1336.32ms, fracRes: 0.7013, norm(attn): 0.1719, norm(output): 0.9339, norm(x): 0.7777, norm(y): 1.0143, norm:1.0098, tok/sec: 98084.31, flops:102.95, batch-reuse:1
@ 1839 train 5.0041 , allloss: 5.0047, dt: 1329.60ms, fracRes: 0.7012, norm(attn): 0.1709, norm(output): 0.9340, norm(x): 0.7779, norm(y): 1.0141, norm:0.7825, tok/sec: 98579.68, flops:103.47, batch-reuse:1
@ 1840 train 5.0176 , allloss: 5.0179, dt: 1321.87ms, fracRes: 0.7012, norm(attn): 0.1709, norm(output): 0.9340, norm(x): 0.7768, norm(y): 1.0140, norm:0.8006, tok/sec: 99156.71, flops:104.08, batch-reuse:1
@ 1841 train 5.1101 , allloss: 5.1103, dt: 1305.59ms, fracRes: 0.7012, norm(attn): 0.1719, norm(output): 0.9340, norm(x): 0.7769, norm(y): 1.0140, norm:0.9241, tok/sec: 100393.19, flops:105.38, batch-reuse:1
@ 1842 train 5.0329 , allloss: 5.0331, dt: 1299.81ms, fracRes: 0.7012, norm(attn): 0.1748, norm(output): 0.9340, norm(x): 0.7764, norm(y): 1.0139, norm:1.0454, tok/sec: 100839.40, flops:105.84, batch-reuse:1
@ 1843 train 5.0472 , allloss: 5.0545, dt: 1342.76ms, fracRes: 0.7015, norm(attn): 0.1738, norm(output): 0.9340, norm(x): 0.7769, norm(y): 1.0135, norm:1.2258, tok/sec: 97613.59, flops:102.46, batch-reuse:1
@ 1844 train 5.0491 , allloss: 5.0501, dt: 1316.67ms, fracRes: 0.7016, norm(attn): 0.1738, norm(output): 0.9341, norm(x): 0.7767, norm(y): 1.0136, norm:0.9195, tok/sec: 99548.00, flops:104.49, batch-reuse:1
@ 1845 train 5.0269 , allloss: 5.0273, dt: 1305.09ms, fracRes: 0.7016, norm(attn): 0.1719, norm(output): 0.9340, norm(x): 0.7761, norm(y): 1.0141, norm:0.9325, tok/sec: 100431.39, flops:105.42, batch-reuse:1
@ 1846 train 5.0779 , allloss: 5.0781, dt: 1294.96ms, fracRes: 0.7017, norm(attn): 0.1719, norm(output): 0.9340, norm(x): 0.7751, norm(y): 1.0142, norm:1.0136, tok/sec: 101217.14, flops:106.24, batch-reuse:1
@ 1847 train 5.0065 , allloss: 5.0067, dt: 1319.45ms, fracRes: 0.7014, norm(attn): 0.1719, norm(output): 0.9340, norm(x): 0.7756, norm(y): 1.0139, norm:1.1048, tok/sec: 99338.64, flops:104.27, batch-reuse:1
@ 1848 train 4.9032 , allloss: 4.9036, dt: 1306.81ms, fracRes: 0.7012, norm(attn): 0.1738, norm(output): 0.9341, norm(x): 0.7775, norm(y): 1.0138, norm:1.2405, tok/sec: 100298.99, flops:105.28, batch-reuse:1
@ 1849 train 5.0869 , allloss: 5.0873, dt: 1305.24ms, fracRes: 0.7010, norm(attn): 0.1768, norm(output): 0.9342, norm(x): 0.7776, norm(y): 1.0139, norm:0.6918, tok/sec: 100419.49, flops:105.40, batch-reuse:1
@ 1850 train 4.9347 , allloss: 4.9364, dt: 1277.49ms, fracRes: 0.7009, norm(attn): 0.1777, norm(output): 0.9342, norm(x): 0.7770, norm(y): 1.0140, norm:1.1017, tok/sec: 102601.13, flops:107.69, batch-reuse:1
@ 1851 train 4.9435 , allloss: 4.9443, dt: 1300.59ms, fracRes: 0.7011, norm(attn): 0.1777, norm(output): 0.9341, norm(x): 0.7770, norm(y): 1.0138, norm:1.1804, tok/sec: 100778.69, flops:105.78, batch-reuse:1
@ 1852 train 5.0307 , allloss: 5.0310, dt: 1293.36ms, fracRes: 0.7017, norm(attn): 0.1816, norm(output): 0.9342, norm(x): 0.7768, norm(y): 1.0134, norm:0.9360, tok/sec: 101342.39, flops:106.37, batch-reuse:1
@ 1853 train 5.0235 , allloss: 5.0238, dt: 1318.55ms, fracRes: 0.7018, norm(attn): 0.1777, norm(output): 0.9341, norm(x): 0.7765, norm(y): 1.0135, norm:0.8933, tok/sec: 99406.46, flops:104.34, batch-reuse:1
@ 1854 train 5.1101 , allloss: 5.1104, dt: 1335.40ms, fracRes: 0.7018, norm(attn): 0.1758, norm(output): 0.9341, norm(x): 0.7761, norm(y): 1.0136, norm:0.9141, tok/sec: 98152.10, flops:103.02, batch-reuse:1
@ 1855 train 5.2356 , allloss: 5.2362, dt: 1341.56ms, fracRes: 0.7016, norm(attn): 0.1777, norm(output): 0.9342, norm(x): 0.7759, norm(y): 1.0136, norm:1.1836, tok/sec: 97701.09, flops:102.55, batch-reuse:1
@ 1856 train 5.1092 , allloss: 5.1097, dt: 1334.06ms, fracRes: 0.7015, norm(attn): 0.1787, norm(output): 0.9341, norm(x): 0.7754, norm(y): 1.0137, norm:0.8976, tok/sec: 98250.09, flops:103.13, batch-reuse:1
@ 1857 train 5.1133 , allloss: 5.1140, dt: 1295.67ms, fracRes: 0.7015, norm(attn): 0.1797, norm(output): 0.9341, norm(x): 0.7750, norm(y): 1.0138, norm:1.0396, tok/sec: 101161.43, flops:106.18, batch-reuse:1
@ 1858 train 5.2348 , allloss: 5.2350, dt: 1334.63ms, fracRes: 0.7016, norm(attn): 0.1758, norm(output): 0.9342, norm(x): 0.7745, norm(y): 1.0136, norm:1.0880, tok/sec: 98208.30, flops:103.08, batch-reuse:1
@ 1859 train 5.2700 , allloss: 5.2702, dt: 1306.16ms, fracRes: 0.7014, norm(attn): 0.1777, norm(output): 0.9341, norm(x): 0.7759, norm(y): 1.0138, norm:1.6644, tok/sec: 100349.45, flops:105.33, batch-reuse:1
@ 1860 train 5.2561 , allloss: 5.2572, dt: 1315.08ms, fracRes: 0.7017, norm(attn): 0.1758, norm(output): 0.9341, norm(x): 0.7760, norm(y): 1.0133, norm:1.0850, tok/sec: 99668.32, flops:104.62, batch-reuse:1
@ 1861 train 5.1721 , allloss: 5.1727, dt: 1316.36ms, fracRes: 0.7018, norm(attn): 0.1787, norm(output): 0.9340, norm(x): 0.7754, norm(y): 1.0130, norm:1.1085, tok/sec: 99571.87, flops:104.51, batch-reuse:1
@ 1862 train 5.2243 , allloss: 5.2247, dt: 1332.55ms, fracRes: 0.7016, norm(attn): 0.1807, norm(output): 0.9340, norm(x): 0.7745, norm(y): 1.0133, norm:0.9419, tok/sec: 98361.47, flops:103.24, batch-reuse:1
@ 1863 train 5.2173 , allloss: 5.2177, dt: 1311.00ms, fracRes: 0.7016, norm(attn): 0.1768, norm(output): 0.9340, norm(x): 0.7753, norm(y): 1.0136, norm:0.7601, tok/sec: 99978.89, flops:104.94, batch-reuse:1
@ 1864 train 5.1691 , allloss: 5.1695, dt: 1302.76ms, fracRes: 0.7011, norm(attn): 0.1738, norm(output): 0.9339, norm(x): 0.7759, norm(y): 1.0140, norm:0.8650, tok/sec: 100611.19, flops:105.60, batch-reuse:1
@ 1865 train 5.1561 , allloss: 5.1563, dt: 1316.01ms, fracRes: 0.7009, norm(attn): 0.1729, norm(output): 0.9339, norm(x): 0.7749, norm(y): 1.0143, norm:0.7558, tok/sec: 99598.26, flops:104.54, batch-reuse:1
@ 1866 train 5.5423 , allloss: 5.5425, dt: 1306.45ms, fracRes: 0.7010, norm(attn): 0.1729, norm(output): 0.9338, norm(x): 0.7736, norm(y): 1.0140, norm:0.9795, tok/sec: 100326.94, flops:105.31, batch-reuse:1
@ 1867 train 5.2345 , allloss: 5.2346, dt: 1291.76ms, fracRes: 0.7009, norm(attn): 0.1777, norm(output): 0.9340, norm(x): 0.7731, norm(y): 1.0140, norm:1.2952, tok/sec: 101468.12, flops:106.50, batch-reuse:1
@ 1868 train 5.2620 , allloss: 5.2630, dt: 1305.51ms, fracRes: 0.7014, norm(attn): 0.1777, norm(output): 0.9341, norm(x): 0.7733, norm(y): 1.0136, norm:0.8301, tok/sec: 100399.31, flops:105.38, batch-reuse:1
@ 1869 train 5.2116 , allloss: 5.2124, dt: 1314.48ms, fracRes: 0.7016, norm(attn): 0.1768, norm(output): 0.9341, norm(x): 0.7740, norm(y): 1.0133, norm:1.0936, tok/sec: 99713.86, flops:104.66, batch-reuse:1
@ 1870 train 5.1759 , allloss: 5.1767, dt: 1326.29ms, fracRes: 0.7020, norm(attn): 0.1748, norm(output): 0.9341, norm(x): 0.7747, norm(y): 1.0129, norm:0.9211, tok/sec: 98826.25, flops:103.73, batch-reuse:1
@ 1871 train 5.1636 , allloss: 5.1650, dt: 1303.60ms, fracRes: 0.7019, norm(attn): 0.1758, norm(output): 0.9341, norm(x): 0.7746, norm(y): 1.0131, norm:0.8471, tok/sec: 100546.05, flops:105.54, batch-reuse:1
@ 1872 train 5.2538 , allloss: 5.2549, dt: 1307.18ms, fracRes: 0.7013, norm(attn): 0.1748, norm(output): 0.9340, norm(x): 0.7749, norm(y): 1.0137, norm:0.7006, tok/sec: 100270.67, flops:105.25, batch-reuse:1
@ 1873 train 5.2717 , allloss: 5.2740, dt: 1307.01ms, fracRes: 0.7008, norm(attn): 0.1768, norm(output): 0.9340, norm(x): 0.7747, norm(y): 1.0142, norm:0.7916, tok/sec: 100283.57, flops:105.26, batch-reuse:1
@ 1874 train 5.1103 , allloss: 5.1107, dt: 1278.35ms, fracRes: 0.7006, norm(attn): 0.1787, norm(output): 0.9339, norm(x): 0.7743, norm(y): 1.0143, norm:0.7430, tok/sec: 102532.16, flops:107.62, batch-reuse:1
@ 1875 train 5.1593 , allloss: 5.1594, dt: 1310.43ms, fracRes: 0.7007, norm(attn): 0.1797, norm(output): 0.9340, norm(x): 0.7741, norm(y): 1.0141, norm:0.8563, tok/sec: 100022.00, flops:104.99, batch-reuse:1
@ 1876 train 5.2673 , allloss: 5.2675, dt: 1333.95ms, fracRes: 0.7011, norm(attn): 0.1777, norm(output): 0.9340, norm(x): 0.7750, norm(y): 1.0138, norm:0.8503, tok/sec: 98258.50, flops:103.14, batch-reuse:1
@ 1877 train 5.2114 , allloss: 5.2116, dt: 1311.58ms, fracRes: 0.7015, norm(attn): 0.1758, norm(output): 0.9341, norm(x): 0.7750, norm(y): 1.0137, norm:0.7987, tok/sec: 99934.22, flops:104.89, batch-reuse:1
@ 1878 train 5.1763 , allloss: 5.1765, dt: 1305.21ms, fracRes: 0.7016, norm(attn): 0.1748, norm(output): 0.9341, norm(x): 0.7744, norm(y): 1.0138, norm:0.8852, tok/sec: 100421.78, flops:105.41, batch-reuse:1
@ 1879 train 5.1959 , allloss: 5.1961, dt: 1292.41ms, fracRes: 0.7019, norm(attn): 0.1729, norm(output): 0.9342, norm(x): 0.7742, norm(y): 1.0135, norm:0.7926, tok/sec: 101416.85, flops:106.45, batch-reuse:1
@ 1880 train 5.2085 , allloss: 5.2087, dt: 1314.76ms, fracRes: 0.7018, norm(attn): 0.1729, norm(output): 0.9343, norm(x): 0.7753, norm(y): 1.0133, norm:0.8513, tok/sec: 99692.49, flops:104.64, batch-reuse:1
@ 1881 train 5.1172 , allloss: 5.1175, dt: 1283.77ms, fracRes: 0.7016, norm(attn): 0.1748, norm(output): 0.9341, norm(x): 0.7740, norm(y): 1.0135, norm:0.7162, tok/sec: 102099.54, flops:107.17, batch-reuse:1
@ 1882 train 5.2062 , allloss: 5.2065, dt: 1292.65ms, fracRes: 0.7013, norm(attn): 0.1768, norm(output): 0.9341, norm(x): 0.7730, norm(y): 1.0138, norm:0.7989, tok/sec: 101397.68, flops:106.43, batch-reuse:1
@ 1883 train 5.1045 , allloss: 5.1051, dt: 1297.64ms, fracRes: 0.7011, norm(attn): 0.1758, norm(output): 0.9339, norm(x): 0.7730, norm(y): 1.0142, norm:0.7763, tok/sec: 101008.18, flops:106.02, batch-reuse:1
@ 1884 train 5.0741 , allloss: 5.0744, dt: 1294.69ms, fracRes: 0.7008, norm(attn): 0.1729, norm(output): 0.9340, norm(x): 0.7739, norm(y): 1.0143, norm:0.8515, tok/sec: 101238.35, flops:106.26, batch-reuse:1
@ 1885 train 5.1609 , allloss: 5.1615, dt: 1287.46ms, fracRes: 0.7010, norm(attn): 0.1748, norm(output): 0.9341, norm(x): 0.7740, norm(y): 1.0139, norm:0.8565, tok/sec: 101806.95, flops:106.86, batch-reuse:1
@ 1886 train 5.1206 , allloss: 5.1215, dt: 1308.09ms, fracRes: 0.7014, norm(attn): 0.1758, norm(output): 0.9341, norm(x): 0.7745, norm(y): 1.0137, norm:0.7941, tok/sec: 100200.77, flops:105.17, batch-reuse:1
@ 1887 train 5.0749 , allloss: 5.0752, dt: 1336.32ms, fracRes: 0.7015, norm(attn): 0.1729, norm(output): 0.9341, norm(x): 0.7738, norm(y): 1.0135, norm:0.8355, tok/sec: 98084.47, flops:102.95, batch-reuse:1
@ 1888 train 5.2755 , allloss: 5.2756, dt: 1293.23ms, fracRes: 0.7016, norm(attn): 0.1719, norm(output): 0.9342, norm(x): 0.7731, norm(y): 1.0137, norm:1.0310, tok/sec: 101352.61, flops:106.38, batch-reuse:1
@ 1889 train 5.0999 , allloss: 5.1001, dt: 1338.96ms, fracRes: 0.7012, norm(attn): 0.1758, norm(output): 0.9341, norm(x): 0.7748, norm(y): 1.0140, norm:1.2786, tok/sec: 97891.24, flops:102.75, batch-reuse:1
@ 1890 train 5.2754 , allloss: 5.2776, dt: 1332.49ms, fracRes: 0.7013, norm(attn): 0.1768, norm(output): 0.9343, norm(x): 0.7761, norm(y): 1.0135, norm:0.8602, tok/sec: 98366.32, flops:103.25, batch-reuse:1
@ 1891 train 5.1810 , allloss: 5.1812, dt: 1322.46ms, fracRes: 0.7011, norm(attn): 0.1777, norm(output): 0.9343, norm(x): 0.7752, norm(y): 1.0133, norm:0.8363, tok/sec: 99112.02, flops:104.03, batch-reuse:1
@ 1892 train 5.1068 , allloss: 5.1070, dt: 1300.78ms, fracRes: 0.7011, norm(attn): 0.1748, norm(output): 0.9341, norm(x): 0.7739, norm(y): 1.0138, norm:1.1424, tok/sec: 100764.32, flops:105.77, batch-reuse:1
@ 1893 train 5.2319 , allloss: 5.2322, dt: 1294.80ms, fracRes: 0.7011, norm(attn): 0.1777, norm(output): 0.9342, norm(x): 0.7742, norm(y): 1.0139, norm:1.1543, tok/sec: 101229.92, flops:106.25, batch-reuse:1
@ 1894 train 5.0864 , allloss: 5.0875, dt: 1291.79ms, fracRes: 0.7017, norm(attn): 0.1797, norm(output): 0.9342, norm(x): 0.7743, norm(y): 1.0131, norm:0.8384, tok/sec: 101465.33, flops:106.50, batch-reuse:1
@ 1895 train 5.2789 , allloss: 5.2832, dt: 1283.92ms, fracRes: 0.7020, norm(attn): 0.1816, norm(output): 0.9343, norm(x): 0.7736, norm(y): 1.0126, norm:0.9849, tok/sec: 102087.54, flops:107.15, batch-reuse:1
@ 1896 train 5.3143 , allloss: 5.3147, dt: 1301.84ms, fracRes: 0.7017, norm(attn): 0.1816, norm(output): 0.9343, norm(x): 0.7727, norm(y): 1.0128, norm:1.3904, tok/sec: 100682.16, flops:105.68, batch-reuse:1
@ 1897 train 5.2449 , allloss: 5.2453, dt: 1321.63ms, fracRes: 0.7014, norm(attn): 0.1797, norm(output): 0.9342, norm(x): 0.7726, norm(y): 1.0139, norm:1.0392, tok/sec: 99174.33, flops:104.10, batch-reuse:1
@ 1898 train 5.2325 , allloss: 5.2329, dt: 1335.58ms, fracRes: 0.7018, norm(attn): 0.1787, norm(output): 0.9342, norm(x): 0.7725, norm(y): 1.0137, norm:1.0311, tok/sec: 98138.68, flops:103.01, batch-reuse:1
@ 1899 train 5.1990 , allloss: 5.2005, dt: 1344.51ms, fracRes: 0.7020, norm(attn): 0.1816, norm(output): 0.9341, norm(x): 0.7723, norm(y): 1.0133, norm:0.8822, tok/sec: 97486.91, flops:102.33, batch-reuse:1
@ 1900 train 5.1572 , allloss: 5.1579, dt: 1341.28ms, fracRes: 0.7019, norm(attn): 0.1855, norm(output): 0.9341, norm(x): 0.7720, norm(y): 1.0130, norm:1.0121, tok/sec: 97721.75, flops:102.57, batch-reuse:1
@ 1901 train 5.2210 , allloss: 5.2215, dt: 1329.96ms, fracRes: 0.7016, norm(attn): 0.1816, norm(output): 0.9340, norm(x): 0.7720, norm(y): 1.0137, norm:0.8220, tok/sec: 98553.24, flops:103.44, batch-reuse:1
@ 1902 train 5.1825 , allloss: 5.1833, dt: 1298.52ms, fracRes: 0.7012, norm(attn): 0.1807, norm(output): 0.9338, norm(x): 0.7723, norm(y): 1.0143, norm:0.8298, tok/sec: 100939.23, flops:105.95, batch-reuse:1
@ 1903 train 5.1967 , allloss: 5.1985, dt: 1307.07ms, fracRes: 0.7010, norm(attn): 0.1826, norm(output): 0.9339, norm(x): 0.7723, norm(y): 1.0143, norm:0.8633, tok/sec: 100279.03, flops:105.26, batch-reuse:1
@ 1904 train 5.1491 , allloss: 5.1497, dt: 1299.48ms, fracRes: 0.7010, norm(attn): 0.1816, norm(output): 0.9339, norm(x): 0.7721, norm(y): 1.0141, norm:0.7876, tok/sec: 100864.78, flops:105.87, batch-reuse:1
@ 1905 train 5.0838 , allloss: 5.0840, dt: 1319.89ms, fracRes: 0.7011, norm(attn): 0.1816, norm(output): 0.9339, norm(x): 0.7727, norm(y): 1.0137, norm:0.8218, tok/sec: 99305.12, flops:104.23, batch-reuse:1
@ 1906 train 5.0753 , allloss: 5.0756, dt: 1331.03ms, fracRes: 0.7013, norm(attn): 0.1807, norm(output): 0.9341, norm(x): 0.7730, norm(y): 1.0134, norm:0.6448, tok/sec: 98473.77, flops:103.36, batch-reuse:1
@ 1907 train 5.1268 , allloss: 5.1271, dt: 1286.97ms, fracRes: 0.7013, norm(attn): 0.1816, norm(output): 0.9340, norm(x): 0.7728, norm(y): 1.0135, norm:0.7294, tok/sec: 101845.14, flops:106.90, batch-reuse:1
@ 1908 train 5.1365 , allloss: 5.1367, dt: 1290.56ms, fracRes: 0.7012, norm(attn): 0.1797, norm(output): 0.9339, norm(x): 0.7727, norm(y): 1.0137, norm:0.8218, tok/sec: 101561.98, flops:106.60, batch-reuse:1
@ 1909 train 5.2884 , allloss: 5.2889, dt: 1310.88ms, fracRes: 0.7011, norm(attn): 0.1768, norm(output): 0.9340, norm(x): 0.7724, norm(y): 1.0135, norm:0.8940, tok/sec: 99987.65, flops:104.95, batch-reuse:1
@ 1910 train 5.2097 , allloss: 5.2101, dt: 1332.35ms, fracRes: 0.7011, norm(attn): 0.1758, norm(output): 0.9339, norm(x): 0.7726, norm(y): 1.0137, norm:0.7685, tok/sec: 98376.75, flops:103.26, batch-reuse:1
@ 1911 train 5.1579 , allloss: 5.1583, dt: 1298.04ms, fracRes: 0.7011, norm(attn): 0.1797, norm(output): 0.9339, norm(x): 0.7720, norm(y): 1.0137, norm:0.9022, tok/sec: 100976.68, flops:105.99, batch-reuse:1
@ 1912 train 5.1567 , allloss: 5.1569, dt: 1318.41ms, fracRes: 0.7013, norm(attn): 0.1816, norm(output): 0.9339, norm(x): 0.7717, norm(y): 1.0135, norm:1.0749, tok/sec: 99416.93, flops:104.35, batch-reuse:1
@ 1913 train 5.1447 , allloss: 5.1449, dt: 1338.88ms, fracRes: 0.7014, norm(attn): 0.1797, norm(output): 0.9339, norm(x): 0.7720, norm(y): 1.0132, norm:0.7701, tok/sec: 97896.73, flops:102.76, batch-reuse:1
@ 1914 train 5.1414 , allloss: 5.1415, dt: 1326.60ms, fracRes: 0.7014, norm(attn): 0.1748, norm(output): 0.9340, norm(x): 0.7727, norm(y): 1.0132, norm:0.8739, tok/sec: 98803.25, flops:103.71, batch-reuse:1
@ 1915 train 5.1283 , allloss: 5.1287, dt: 1299.01ms, fracRes: 0.7016, norm(attn): 0.1738, norm(output): 0.9338, norm(x): 0.7717, norm(y): 1.0132, norm:0.8909, tok/sec: 100901.36, flops:105.91, batch-reuse:1
@ 1916 train 5.3264 , allloss: 5.3265, dt: 1335.02ms, fracRes: 0.7016, norm(attn): 0.1777, norm(output): 0.9337, norm(x): 0.7715, norm(y): 1.0132, norm:0.7931, tok/sec: 98179.60, flops:103.05, batch-reuse:1
@ 1917 train 5.1754 , allloss: 5.1756, dt: 1328.79ms, fracRes: 0.7014, norm(attn): 0.1787, norm(output): 0.9337, norm(x): 0.7721, norm(y): 1.0132, norm:0.9207, tok/sec: 98640.37, flops:103.54, batch-reuse:1
@ 1918 train 5.1955 , allloss: 5.1956, dt: 1321.74ms, fracRes: 0.7015, norm(attn): 0.1826, norm(output): 0.9337, norm(x): 0.7725, norm(y): 1.0133, norm:0.7463, tok/sec: 99166.29, flops:104.09, batch-reuse:1
@ 1919 train 5.1363 , allloss: 5.1364, dt: 1301.00ms, fracRes: 0.7015, norm(attn): 0.1816, norm(output): 0.9334, norm(x): 0.7706, norm(y): 1.0136, norm:0.9726, tok/sec: 100746.76, flops:105.75, batch-reuse:1
@ 1920 train 5.1165 , allloss: 5.1166, dt: 1309.15ms, fracRes: 0.7012, norm(attn): 0.1777, norm(output): 0.9334, norm(x): 0.7705, norm(y): 1.0137, norm:0.7302, tok/sec: 100119.93, flops:105.09, batch-reuse:1
@ 1921 train 5.1667 , allloss: 5.1668, dt: 1308.08ms, fracRes: 0.7011, norm(attn): 0.1777, norm(output): 0.9333, norm(x): 0.7705, norm(y): 1.0141, norm:0.8598, tok/sec: 100201.73, flops:105.17, batch-reuse:1
@ 1922 train 5.0834 , allloss: 5.0835, dt: 1295.65ms, fracRes: 0.7010, norm(attn): 0.1768, norm(output): 0.9333, norm(x): 0.7710, norm(y): 1.0141, norm:0.8751, tok/sec: 101163.44, flops:106.18, batch-reuse:1
@ 1923 train 5.1583 , allloss: 5.1585, dt: 1311.50ms, fracRes: 0.7012, norm(attn): 0.1787, norm(output): 0.9333, norm(x): 0.7713, norm(y): 1.0136, norm:0.6776, tok/sec: 99940.27, flops:104.90, batch-reuse:1
@ 1924 train 5.1698 , allloss: 5.1701, dt: 1321.15ms, fracRes: 0.7013, norm(attn): 0.1807, norm(output): 0.9334, norm(x): 0.7712, norm(y): 1.0134, norm:0.7769, tok/sec: 99210.75, flops:104.13, batch-reuse:1
@ 1925 train 5.1744 , allloss: 5.1746, dt: 1301.96ms, fracRes: 0.7013, norm(attn): 0.1816, norm(output): 0.9334, norm(x): 0.7716, norm(y): 1.0133, norm:0.9571, tok/sec: 100672.91, flops:105.67, batch-reuse:1
@ 1926 train 5.1846 , allloss: 5.1847, dt: 1314.91ms, fracRes: 0.7014, norm(attn): 0.1816, norm(output): 0.9335, norm(x): 0.7711, norm(y): 1.0133, norm:0.8125, tok/sec: 99681.04, flops:104.63, batch-reuse:1
@ 1927 train 5.1912 , allloss: 5.1914, dt: 1299.05ms, fracRes: 0.7016, norm(attn): 0.1768, norm(output): 0.9334, norm(x): 0.7713, norm(y): 1.0131, norm:0.8588, tok/sec: 100898.01, flops:105.91, batch-reuse:1
@ 1928 train 5.1092 , allloss: 5.1094, dt: 1322.89ms, fracRes: 0.7017, norm(attn): 0.1748, norm(output): 0.9335, norm(x): 0.7711, norm(y): 1.0129, norm:0.8441, tok/sec: 99079.95, flops:104.00, batch-reuse:1
@ 1929 train 5.1228 , allloss: 5.1232, dt: 1297.56ms, fracRes: 0.7013, norm(attn): 0.1758, norm(output): 0.9334, norm(x): 0.7708, norm(y): 1.0135, norm:0.7015, tok/sec: 101014.49, flops:106.03, batch-reuse:1
@ 1930 train 5.0538 , allloss: 5.0539, dt: 1315.42ms, fracRes: 0.7011, norm(attn): 0.1777, norm(output): 0.9333, norm(x): 0.7704, norm(y): 1.0138, norm:0.8360, tok/sec: 99642.76, flops:104.59, batch-reuse:1
@ 1931 train 5.2433 , allloss: 5.2440, dt: 1321.58ms, fracRes: 0.7012, norm(attn): 0.1777, norm(output): 0.9333, norm(x): 0.7696, norm(y): 1.0134, norm:0.9033, tok/sec: 99178.23, flops:104.10, batch-reuse:1
@ 1932 train 5.2054 , allloss: 5.2055, dt: 1286.18ms, fracRes: 0.7011, norm(attn): 0.1816, norm(output): 0.9332, norm(x): 0.7691, norm(y): 1.0134, norm:0.9606, tok/sec: 101907.79, flops:106.97, batch-reuse:1
@ 1933 train 5.2111 , allloss: 5.2112, dt: 1303.85ms, fracRes: 0.7009, norm(attn): 0.1807, norm(output): 0.9332, norm(x): 0.7693, norm(y): 1.0139, norm:1.2558, tok/sec: 100527.16, flops:105.52, batch-reuse:1
@ 1934 train 5.2742 , allloss: 5.2744, dt: 1313.49ms, fracRes: 0.7012, norm(attn): 0.1797, norm(output): 0.9332, norm(x): 0.7702, norm(y): 1.0137, norm:1.0465, tok/sec: 99789.21, flops:104.74, batch-reuse:1
@ 1935 train 5.0983 , allloss: 5.0987, dt: 1335.73ms, fracRes: 0.7014, norm(attn): 0.1797, norm(output): 0.9332, norm(x): 0.7709, norm(y): 1.0133, norm:0.9626, tok/sec: 98127.31, flops:103.00, batch-reuse:1
@ 1936 train 5.1319 , allloss: 5.1321, dt: 1341.04ms, fracRes: 0.7013, norm(attn): 0.1826, norm(output): 0.9333, norm(x): 0.7708, norm(y): 1.0131, norm:1.0061, tok/sec: 97738.75, flops:102.59, batch-reuse:1
@ 1937 train 5.0861 , allloss: 5.0867, dt: 1337.03ms, fracRes: 0.7012, norm(attn): 0.1865, norm(output): 0.9333, norm(x): 0.7707, norm(y): 1.0131, norm:0.8819, tok/sec: 98032.42, flops:102.90, batch-reuse:1
@ 1938 train 5.1549 , allloss: 5.1551, dt: 1337.13ms, fracRes: 0.7013, norm(attn): 0.1865, norm(output): 0.9332, norm(x): 0.7699, norm(y): 1.0133, norm:0.7537, tok/sec: 98024.83, flops:102.89, batch-reuse:1
@ 1939 train 5.1253 , allloss: 5.1258, dt: 1332.68ms, fracRes: 0.7013, norm(attn): 0.1826, norm(output): 0.9331, norm(x): 0.7697, norm(y): 1.0136, norm:0.8620, tok/sec: 98352.09, flops:103.23, batch-reuse:1
@ 1940 train 5.3058 , allloss: 5.3062, dt: 1310.85ms, fracRes: 0.7015, norm(attn): 0.1797, norm(output): 0.9331, norm(x): 0.7690, norm(y): 1.0136, norm:1.0314, tok/sec: 99990.34, flops:104.95, batch-reuse:1
@ 1941 train 5.1789 , allloss: 5.1790, dt: 1307.66ms, fracRes: 0.7014, norm(attn): 0.1836, norm(output): 0.9332, norm(x): 0.7698, norm(y): 1.0132, norm:0.9008, tok/sec: 100233.91, flops:105.21, batch-reuse:1
@ 1942 train 5.1019 , allloss: 5.1019, dt: 1293.56ms, fracRes: 0.7014, norm(attn): 0.1855, norm(output): 0.9333, norm(x): 0.7702, norm(y): 1.0133, norm:1.0748, tok/sec: 101326.76, flops:106.36, batch-reuse:1
@ 1943 train 5.1299 , allloss: 5.1301, dt: 1336.32ms, fracRes: 0.7016, norm(attn): 0.1836, norm(output): 0.9333, norm(x): 0.7701, norm(y): 1.0131, norm:0.8604, tok/sec: 98084.59, flops:102.95, batch-reuse:1
@ 1944 train 5.1256 , allloss: 5.1256, dt: 1311.66ms, fracRes: 0.7016, norm(attn): 0.1816, norm(output): 0.9333, norm(x): 0.7703, norm(y): 1.0131, norm:0.8484, tok/sec: 99928.24, flops:104.89, batch-reuse:1
@ 1945 train 5.0506 , allloss: 5.0507, dt: 1277.90ms, fracRes: 0.7015, norm(attn): 0.1816, norm(output): 0.9333, norm(x): 0.7703, norm(y): 1.0133, norm:0.9742, tok/sec: 102568.60, flops:107.66, batch-reuse:1
@ 1946 train 5.0674 , allloss: 5.0675, dt: 1306.69ms, fracRes: 0.7015, norm(attn): 0.1816, norm(output): 0.9333, norm(x): 0.7708, norm(y): 1.0135, norm:0.9923, tok/sec: 100308.51, flops:105.29, batch-reuse:1
@ 1947 train 5.2117 , allloss: 5.2118, dt: 1302.12ms, fracRes: 0.7015, norm(attn): 0.1816, norm(output): 0.9333, norm(x): 0.7701, norm(y): 1.0134, norm:0.7974, tok/sec: 100660.08, flops:105.66, batch-reuse:1
@ 1948 train 5.0621 , allloss: 5.0622, dt: 1287.18ms, fracRes: 0.7013, norm(attn): 0.1836, norm(output): 0.9332, norm(x): 0.7696, norm(y): 1.0134, norm:0.9865, tok/sec: 101828.98, flops:106.88, batch-reuse:1
@ 1949 train 5.1254 , allloss: 5.1255, dt: 1311.57ms, fracRes: 0.7014, norm(attn): 0.1836, norm(output): 0.9333, norm(x): 0.7694, norm(y): 1.0133, norm:0.8901, tok/sec: 99935.51, flops:104.90, batch-reuse:1
@ 1950 train 5.2414 , allloss: 5.2415, dt: 1316.32ms, fracRes: 0.7015, norm(attn): 0.1836, norm(output): 0.9334, norm(x): 0.7698, norm(y): 1.0133, norm:0.8033, tok/sec: 99574.94, flops:104.52, batch-reuse:1
@ 1951 train 5.1066 , allloss: 5.1067, dt: 1322.01ms, fracRes: 0.7015, norm(attn): 0.1855, norm(output): 0.9333, norm(x): 0.7705, norm(y): 1.0132, norm:0.8692, tok/sec: 99146.14, flops:104.07, batch-reuse:1
@ 1952 train 5.0792 , allloss: 5.0792, dt: 1317.86ms, fracRes: 0.7016, norm(attn): 0.1846, norm(output): 0.9334, norm(x): 0.7697, norm(y): 1.0131, norm:0.9130, tok/sec: 99458.13, flops:104.39, batch-reuse:1
@ 1953 train 5.0720 , allloss: 5.0721, dt: 1286.10ms, fracRes: 0.7017, norm(attn): 0.1826, norm(output): 0.9333, norm(x): 0.7690, norm(y): 1.0130, norm:0.6739, tok/sec: 101914.49, flops:106.97, batch-reuse:1
@ 1954 train 5.0551 , allloss: 5.0552, dt: 1291.97ms, fracRes: 0.7016, norm(attn): 0.1826, norm(output): 0.9333, norm(x): 0.7686, norm(y): 1.0131, norm:0.8309, tok/sec: 101451.20, flops:106.49, batch-reuse:1
@ 1955 train 5.0727 , allloss: 5.0728, dt: 1304.72ms, fracRes: 0.7014, norm(attn): 0.1836, norm(output): 0.9333, norm(x): 0.7693, norm(y): 1.0134, norm:0.7834, tok/sec: 100460.24, flops:105.45, batch-reuse:1
@ 1956 train 4.9436 , allloss: 4.9437, dt: 1310.84ms, fracRes: 0.7015, norm(attn): 0.1836, norm(output): 0.9333, norm(x): 0.7698, norm(y): 1.0132, norm:0.8407, tok/sec: 99991.02, flops:104.95, batch-reuse:1
@ 1957 train 5.0803 , allloss: 5.0803, dt: 1307.52ms, fracRes: 0.7016, norm(attn): 0.1826, norm(output): 0.9334, norm(x): 0.7698, norm(y): 1.0129, norm:0.7620, tok/sec: 100244.74, flops:105.22, batch-reuse:1
@ 1958 train 5.0584 , allloss: 5.0612, dt: 1289.42ms, fracRes: 0.7014, norm(attn): 0.1836, norm(output): 0.9333, norm(x): 0.7697, norm(y): 1.0130, norm:0.7408, tok/sec: 101651.90, flops:106.70, batch-reuse:1
@ 1959 train 4.9966 , allloss: 4.9967, dt: 1308.50ms, fracRes: 0.7012, norm(attn): 0.1846, norm(output): 0.9333, norm(x): 0.7702, norm(y): 1.0133, norm:0.7077, tok/sec: 100169.53, flops:105.14, batch-reuse:1
@ 1960 train 4.9714 , allloss: 4.9715, dt: 1311.90ms, fracRes: 0.7010, norm(attn): 0.1855, norm(output): 0.9332, norm(x): 0.7703, norm(y): 1.0137, norm:0.8063, tok/sec: 99909.73, flops:104.87, batch-reuse:1
@ 1961 train 5.1082 , allloss: 5.1082, dt: 1297.46ms, fracRes: 0.7013, norm(attn): 0.1846, norm(output): 0.9331, norm(x): 0.7701, norm(y): 1.0134, norm:0.6539, tok/sec: 101021.81, flops:106.04, batch-reuse:1
@ 1962 train 5.0015 , allloss: 5.0019, dt: 1285.20ms, fracRes: 0.7012, norm(attn): 0.1826, norm(output): 0.9332, norm(x): 0.7697, norm(y): 1.0133, norm:0.7013, tok/sec: 101985.43, flops:107.05, batch-reuse:1
@ 1963 train 5.1629 , allloss: 5.1631, dt: 1280.60ms, fracRes: 0.7013, norm(attn): 0.1826, norm(output): 0.9331, norm(x): 0.7692, norm(y): 1.0136, norm:0.7735, tok/sec: 102352.15, flops:107.43, batch-reuse:1
@ 1964 train 5.0801 , allloss: 5.0802, dt: 1289.59ms, fracRes: 0.7015, norm(attn): 0.1816, norm(output): 0.9330, norm(x): 0.7687, norm(y): 1.0135, norm:0.8347, tok/sec: 101638.36, flops:106.68, batch-reuse:1
@ 1965 train 5.0570 , allloss: 5.0573, dt: 1296.18ms, fracRes: 0.7016, norm(attn): 0.1816, norm(output): 0.9332, norm(x): 0.7694, norm(y): 1.0131, norm:1.0598, tok/sec: 101121.91, flops:106.14, batch-reuse:1
@ 1966 train 5.0744 , allloss: 5.0746, dt: 1282.94ms, fracRes: 0.7018, norm(attn): 0.1846, norm(output): 0.9332, norm(x): 0.7695, norm(y): 1.0130, norm:1.1976, tok/sec: 102165.25, flops:107.24, batch-reuse:1
@ 1967 train 5.0228 , allloss: 5.0230, dt: 1298.56ms, fracRes: 0.7016, norm(attn): 0.1836, norm(output): 0.9332, norm(x): 0.7694, norm(y): 1.0133, norm:0.8245, tok/sec: 100936.26, flops:105.95, batch-reuse:1
@ 1968 train 5.0461 , allloss: 5.0461, dt: 1293.77ms, fracRes: 0.7016, norm(attn): 0.1807, norm(output): 0.9332, norm(x): 0.7693, norm(y): 1.0133, norm:1.0007, tok/sec: 101310.25, flops:106.34, batch-reuse:1
@ 1969 train 5.1072 , allloss: 5.1073, dt: 1288.36ms, fracRes: 0.7014, norm(attn): 0.1816, norm(output): 0.9331, norm(x): 0.7687, norm(y): 1.0134, norm:1.1358, tok/sec: 101735.53, flops:106.78, batch-reuse:1
@ 1970 train 5.0394 , allloss: 5.0397, dt: 1281.58ms, fracRes: 0.7013, norm(attn): 0.1816, norm(output): 0.9332, norm(x): 0.7686, norm(y): 1.0134, norm:0.8147, tok/sec: 102273.95, flops:107.35, batch-reuse:1
@ 1971 train 5.1407 , allloss: 5.1408, dt: 1300.12ms, fracRes: 0.7012, norm(attn): 0.1816, norm(output): 0.9333, norm(x): 0.7689, norm(y): 1.0134, norm:1.1021, tok/sec: 100815.41, flops:105.82, batch-reuse:1
@ 1972 train 5.0591 , allloss: 5.0593, dt: 1312.84ms, fracRes: 0.7015, norm(attn): 0.1816, norm(output): 0.9332, norm(x): 0.7695, norm(y): 1.0132, norm:0.8116, tok/sec: 99838.52, flops:104.79, batch-reuse:1
@ 1973 train 5.0520 , allloss: 5.0524, dt: 1332.31ms, fracRes: 0.7016, norm(attn): 0.1816, norm(output): 0.9332, norm(x): 0.7688, norm(y): 1.0130, norm:0.8891, tok/sec: 98379.58, flops:103.26, batch-reuse:1
@ 1974 train 5.0834 , allloss: 5.0836, dt: 1305.60ms, fracRes: 0.7017, norm(attn): 0.1816, norm(output): 0.9332, norm(x): 0.7685, norm(y): 1.0131, norm:0.9651, tok/sec: 100392.02, flops:105.37, batch-reuse:1
@ 1975 train 4.9242 , allloss: 4.9243, dt: 1291.77ms, fracRes: 0.7016, norm(attn): 0.1855, norm(output): 0.9331, norm(x): 0.7676, norm(y): 1.0131, norm:0.8894, tok/sec: 101466.66, flops:106.50, batch-reuse:1
@ 1976 train 5.1303 , allloss: 5.1308, dt: 1310.78ms, fracRes: 0.7020, norm(attn): 0.1836, norm(output): 0.9332, norm(x): 0.7675, norm(y): 1.0128, norm:0.8878, tok/sec: 99995.06, flops:104.96, batch-reuse:1
@ 1977 train 4.9712 , allloss: 4.9717, dt: 1345.97ms, fracRes: 0.7019, norm(attn): 0.1816, norm(output): 0.9331, norm(x): 0.7682, norm(y): 1.0129, norm:0.8583, tok/sec: 97380.85, flops:102.21, batch-reuse:1
@ 1978 train 5.1233 , allloss: 5.1235, dt: 1341.60ms, fracRes: 0.7016, norm(attn): 0.1797, norm(output): 0.9332, norm(x): 0.7691, norm(y): 1.0132, norm:0.8776, tok/sec: 97698.48, flops:102.55, batch-reuse:1
@ 1979 train 5.0991 , allloss: 5.0995, dt: 1305.56ms, fracRes: 0.7014, norm(attn): 0.1816, norm(output): 0.9332, norm(x): 0.7694, norm(y): 1.0131, norm:0.8851, tok/sec: 100394.99, flops:105.38, batch-reuse:1
@ 1980 train 5.0524 , allloss: 5.0526, dt: 1294.51ms, fracRes: 0.7011, norm(attn): 0.1855, norm(output): 0.9332, norm(x): 0.7698, norm(y): 1.0133, norm:0.8932, tok/sec: 101252.28, flops:106.28, batch-reuse:1
@ 1981 train 5.0615 , allloss: 5.0616, dt: 1312.38ms, fracRes: 0.7012, norm(attn): 0.1875, norm(output): 0.9332, norm(x): 0.7690, norm(y): 1.0131, norm:0.8537, tok/sec: 99873.40, flops:104.83, batch-reuse:1
@ 1982 train 4.9851 , allloss: 4.9852, dt: 1318.10ms, fracRes: 0.7013, norm(attn): 0.1865, norm(output): 0.9331, norm(x): 0.7682, norm(y): 1.0128, norm:0.8497, tok/sec: 99440.07, flops:104.38, batch-reuse:1
@ 1983 train 5.0731 , allloss: 5.0732, dt: 1321.63ms, fracRes: 0.7012, norm(attn): 0.1855, norm(output): 0.9332, norm(x): 0.7680, norm(y): 1.0131, norm:0.9316, tok/sec: 99174.54, flops:104.10, batch-reuse:1
@ 1984 train 5.0326 , allloss: 5.0327, dt: 1347.82ms, fracRes: 0.7012, norm(attn): 0.1816, norm(output): 0.9332, norm(x): 0.7682, norm(y): 1.0135, norm:1.0172, tok/sec: 97247.33, flops:102.07, batch-reuse:1
@ 1985 train 5.0384 , allloss: 5.0386, dt: 1309.08ms, fracRes: 0.7014, norm(attn): 0.1846, norm(output): 0.9332, norm(x): 0.7679, norm(y): 1.0131, norm:0.8177, tok/sec: 100125.45, flops:105.09, batch-reuse:1
@ 1986 train 5.1157 , allloss: 5.1158, dt: 1312.96ms, fracRes: 0.7017, norm(attn): 0.1846, norm(output): 0.9333, norm(x): 0.7683, norm(y): 1.0127, norm:0.9121, tok/sec: 99829.02, flops:104.78, batch-reuse:1
@ 1987 train 5.1013 , allloss: 5.1015, dt: 1325.47ms, fracRes: 0.7017, norm(attn): 0.1846, norm(output): 0.9332, norm(x): 0.7680, norm(y): 1.0129, norm:0.9562, tok/sec: 98886.82, flops:103.79, batch-reuse:1
@ 1988 train 5.0412 , allloss: 5.0413, dt: 1324.15ms, fracRes: 0.7014, norm(attn): 0.1855, norm(output): 0.9331, norm(x): 0.7681, norm(y): 1.0138, norm:1.6245, tok/sec: 98985.60, flops:103.90, batch-reuse:1
@ 1989 train 5.0632 , allloss: 5.0644, dt: 1304.59ms, fracRes: 0.7014, norm(attn): 0.1875, norm(output): 0.9331, norm(x): 0.7678, norm(y): 1.0138, norm:1.3206, tok/sec: 100470.10, flops:105.46, batch-reuse:1
@ 1990 train 5.1009 , allloss: 5.1012, dt: 1308.02ms, fracRes: 0.7018, norm(attn): 0.1865, norm(output): 0.9332, norm(x): 0.7675, norm(y): 1.0131, norm:0.8195, tok/sec: 100206.45, flops:105.18, batch-reuse:1
@ 1991 train 4.9924 , allloss: 4.9984, dt: 1341.39ms, fracRes: 0.7021, norm(attn): 0.1875, norm(output): 0.9333, norm(x): 0.7677, norm(y): 1.0127, norm:1.3815, tok/sec: 97713.85, flops:102.56, batch-reuse:1
@ 1992 train 5.0682 , allloss: 5.0687, dt: 1330.05ms, fracRes: 0.7019, norm(attn): 0.1904, norm(output): 0.9334, norm(x): 0.7671, norm(y): 1.0123, norm:1.0372, tok/sec: 98546.57, flops:103.44, batch-reuse:1
@ 1993 train 4.9714 , allloss: 4.9723, dt: 1338.44ms, fracRes: 0.7016, norm(attn): 0.1885, norm(output): 0.9332, norm(x): 0.7668, norm(y): 1.0131, norm:1.0993, tok/sec: 97929.02, flops:102.79, batch-reuse:1
@ 1994 train 5.0062 , allloss: 5.0163, dt: 1326.91ms, fracRes: 0.7013, norm(attn): 0.1875, norm(output): 0.9330, norm(x): 0.7671, norm(y): 1.0137, norm:0.9922, tok/sec: 98779.87, flops:103.68, batch-reuse:1
@ 1995 train 5.0084 , allloss: 5.0147, dt: 1294.52ms, fracRes: 0.7011, norm(attn): 0.1875, norm(output): 0.9331, norm(x): 0.7673, norm(y): 1.0137, norm:1.0283, tok/sec: 101251.77, flops:106.28, batch-reuse:1
@ 1996 train 5.0606 , allloss: 5.0615, dt: 1283.32ms, fracRes: 0.7011, norm(attn): 0.1895, norm(output): 0.9331, norm(x): 0.7673, norm(y): 1.0137, norm:1.0627, tok/sec: 102135.39, flops:107.20, batch-reuse:1
@ 1997 train 4.9488 , allloss: 4.9492, dt: 1302.55ms, fracRes: 0.7012, norm(attn): 0.1895, norm(output): 0.9332, norm(x): 0.7680, norm(y): 1.0133, norm:0.7913, tok/sec: 100627.52, flops:105.62, batch-reuse:1
@ 1998 train 4.9614 , allloss: 4.9616, dt: 1311.97ms, fracRes: 0.7015, norm(attn): 0.1885, norm(output): 0.9333, norm(x): 0.7687, norm(y): 1.0132, norm:0.7499, tok/sec: 99904.42, flops:104.86, batch-reuse:1
@ 1999 train 4.8807 , allloss: 4.8809, dt: 1316.69ms, fracRes: 0.7018, norm(attn): 0.1885, norm(output): 0.9333, norm(x): 0.7694, norm(y): 1.0130, norm:0.8893, tok/sec: 99546.66, flops:104.49, batch-reuse:1
@ 2000 val 5.0975
@ 2000 train 4.9791 , allloss: 4.9794, dt: 1927.34ms, fracRes: 0.7019, norm(attn): 0.1875, norm(output): 0.9333, norm(x): 0.7693, norm(y): 1.0129, norm:0.8235, tok/sec: 68006.72, flops:71.38, batch-reuse:1
@ 2001 train 5.0326 , allloss: 5.0332, dt: 1330.13ms, fracRes: 0.7021, norm(attn): 0.1875, norm(output): 0.9333, norm(x): 0.7686, norm(y): 1.0125, norm:0.6547, tok/sec: 98540.38, flops:103.43, batch-reuse:1
@ 2002 train 5.0310 , allloss: 5.0317, dt: 1279.51ms, fracRes: 0.7021, norm(attn): 0.1885, norm(output): 0.9333, norm(x): 0.7677, norm(y): 1.0126, norm:0.7099, tok/sec: 102439.50, flops:107.52, batch-reuse:1
@ 2003 train 5.0330 , allloss: 5.0331, dt: 1275.84ms, fracRes: 0.7021, norm(attn): 0.1865, norm(output): 0.9333, norm(x): 0.7679, norm(y): 1.0128, norm:0.7362, tok/sec: 102733.80, flops:107.83, batch-reuse:1
@ 2004 train 5.0479 , allloss: 5.0491, dt: 1290.19ms, fracRes: 0.7022, norm(attn): 0.1865, norm(output): 0.9333, norm(x): 0.7667, norm(y): 1.0127, norm:0.7612, tok/sec: 101591.26, flops:106.63, batch-reuse:1
@ 2005 train 4.8913 , allloss: 4.8916, dt: 1297.88ms, fracRes: 0.7020, norm(attn): 0.1875, norm(output): 0.9332, norm(x): 0.7653, norm(y): 1.0130, norm:0.7187, tok/sec: 100989.63, flops:106.00, batch-reuse:1
@ 2006 train 5.0593 , allloss: 5.0593, dt: 1294.90ms, fracRes: 0.7020, norm(attn): 0.1865, norm(output): 0.9333, norm(x): 0.7656, norm(y): 1.0130, norm:0.8575, tok/sec: 101221.44, flops:106.25, batch-reuse:1
@ 2007 train 4.9142 , allloss: 4.9143, dt: 1310.33ms, fracRes: 0.7016, norm(attn): 0.1865, norm(output): 0.9332, norm(x): 0.7663, norm(y): 1.0131, norm:0.9086, tok/sec: 100030.04, flops:104.99, batch-reuse:1
@ 2008 train 4.9478 , allloss: 4.9479, dt: 1302.12ms, fracRes: 0.7016, norm(attn): 0.1865, norm(output): 0.9333, norm(x): 0.7661, norm(y): 1.0132, norm:1.1009, tok/sec: 100660.61, flops:105.66, batch-reuse:1
@ 2009 train 4.9401 , allloss: 4.9404, dt: 1286.58ms, fracRes: 0.7015, norm(attn): 0.1865, norm(output): 0.9333, norm(x): 0.7659, norm(y): 1.0130, norm:0.8705, tok/sec: 101875.95, flops:106.93, batch-reuse:1
@ 2010 train 5.0214 , allloss: 5.0215, dt: 1317.03ms, fracRes: 0.7016, norm(attn): 0.1836, norm(output): 0.9334, norm(x): 0.7662, norm(y): 1.0130, norm:0.7266, tok/sec: 99521.08, flops:104.46, batch-reuse:1
@ 2011 train 4.9239 , allloss: 4.9240, dt: 1314.86ms, fracRes: 0.7016, norm(attn): 0.1846, norm(output): 0.9333, norm(x): 0.7667, norm(y): 1.0133, norm:0.8011, tok/sec: 99685.18, flops:104.63, batch-reuse:1
@ 2012 train 4.9111 , allloss: 4.9112, dt: 1320.98ms, fracRes: 0.7014, norm(attn): 0.1846, norm(output): 0.9333, norm(x): 0.7662, norm(y): 1.0133, norm:0.8657, tok/sec: 99223.16, flops:104.15, batch-reuse:1
@ 2013 train 4.9455 , allloss: 4.9456, dt: 1296.75ms, fracRes: 0.7015, norm(attn): 0.1855, norm(output): 0.9332, norm(x): 0.7650, norm(y): 1.0132, norm:0.8808, tok/sec: 101077.45, flops:106.09, batch-reuse:1
@ 2014 train 4.9751 , allloss: 4.9754, dt: 1287.49ms, fracRes: 0.7016, norm(attn): 0.1865, norm(output): 0.9332, norm(x): 0.7646, norm(y): 1.0131, norm:0.8365, tok/sec: 101804.67, flops:106.86, batch-reuse:1
@ 2015 train 4.8852 , allloss: 4.8853, dt: 1279.83ms, fracRes: 0.7016, norm(attn): 0.1865, norm(output): 0.9333, norm(x): 0.7649, norm(y): 1.0128, norm:0.8644, tok/sec: 102413.51, flops:107.50, batch-reuse:1
@ 2016 train 4.9620 , allloss: 4.9621, dt: 1273.81ms, fracRes: 0.7015, norm(attn): 0.1855, norm(output): 0.9333, norm(x): 0.7653, norm(y): 1.0129, norm:0.8543, tok/sec: 102897.71, flops:108.00, batch-reuse:1
@ 2017 train 4.9597 , allloss: 4.9598, dt: 1333.38ms, fracRes: 0.7016, norm(attn): 0.1865, norm(output): 0.9333, norm(x): 0.7650, norm(y): 1.0127, norm:0.7457, tok/sec: 98300.49, flops:103.18, batch-reuse:1
@ 2018 train 5.0282 , allloss: 5.0283, dt: 1278.83ms, fracRes: 0.7015, norm(attn): 0.1865, norm(output): 0.9333, norm(x): 0.7650, norm(y): 1.0127, norm:0.7514, tok/sec: 102493.55, flops:107.58, batch-reuse:1
@ 2019 train 5.0319 , allloss: 5.0320, dt: 1303.09ms, fracRes: 0.7013, norm(attn): 0.1875, norm(output): 0.9333, norm(x): 0.7644, norm(y): 1.0131, norm:0.8653, tok/sec: 100585.17, flops:105.58, batch-reuse:1
@ 2020 train 4.9099 , allloss: 4.9102, dt: 1307.93ms, fracRes: 0.7011, norm(attn): 0.1865, norm(output): 0.9334, norm(x): 0.7649, norm(y): 1.0129, norm:0.8063, tok/sec: 100213.11, flops:105.19, batch-reuse:1
@ 2021 train 4.9236 , allloss: 4.9238, dt: 1344.08ms, fracRes: 0.7013, norm(attn): 0.1865, norm(output): 0.9333, norm(x): 0.7650, norm(y): 1.0130, norm:0.7380, tok/sec: 97517.97, flops:102.36, batch-reuse:1
@ 2022 train 4.9857 , allloss: 4.9858, dt: 1346.27ms, fracRes: 0.7015, norm(attn): 0.1855, norm(output): 0.9333, norm(x): 0.7644, norm(y): 1.0129, norm:0.7510, tok/sec: 97359.61, flops:102.19, batch-reuse:1
@ 2023 train 4.9988 , allloss: 4.9990, dt: 1344.36ms, fracRes: 0.7017, norm(attn): 0.1855, norm(output): 0.9334, norm(x): 0.7646, norm(y): 1.0126, norm:0.8421, tok/sec: 97497.82, flops:102.34, batch-reuse:1
@ 2024 train 4.8781 , allloss: 4.8783, dt: 1296.83ms, fracRes: 0.7016, norm(attn): 0.1865, norm(output): 0.9334, norm(x): 0.7650, norm(y): 1.0127, norm:0.8611, tok/sec: 101071.19, flops:106.09, batch-reuse:1
@ 2025 train 5.0130 , allloss: 5.0131, dt: 1309.12ms, fracRes: 0.7016, norm(attn): 0.1865, norm(output): 0.9334, norm(x): 0.7648, norm(y): 1.0125, norm:0.7503, tok/sec: 100121.91, flops:105.09, batch-reuse:1
@ 2026 train 4.9434 , allloss: 4.9438, dt: 1333.74ms, fracRes: 0.7016, norm(attn): 0.1865, norm(output): 0.9333, norm(x): 0.7651, norm(y): 1.0127, norm:0.8749, tok/sec: 98273.97, flops:103.15, batch-reuse:1
@ 2027 train 4.9729 , allloss: 4.9729, dt: 1298.63ms, fracRes: 0.7016, norm(attn): 0.1855, norm(output): 0.9334, norm(x): 0.7651, norm(y): 1.0128, norm:1.0148, tok/sec: 100931.28, flops:105.94, batch-reuse:1
@ 2028 train 5.3039 , allloss: 5.3041, dt: 1315.20ms, fracRes: 0.7018, norm(attn): 0.1855, norm(output): 0.9334, norm(x): 0.7654, norm(y): 1.0128, norm:0.8941, tok/sec: 99659.60, flops:104.61, batch-reuse:1
@ 2029 train 5.0697 , allloss: 5.0699, dt: 1290.94ms, fracRes: 0.7016, norm(attn): 0.1865, norm(output): 0.9334, norm(x): 0.7650, norm(y): 1.0128, norm:1.1909, tok/sec: 101532.08, flops:106.57, batch-reuse:1
@ 2030 train 4.8017 , allloss: 4.8025, dt: 1302.73ms, fracRes: 0.7015, norm(attn): 0.1855, norm(output): 0.9334, norm(x): 0.7647, norm(y): 1.0124, norm:0.9315, tok/sec: 100613.03, flops:105.61, batch-reuse:1
@ 2031 train 4.8850 , allloss: 4.8855, dt: 1303.48ms, fracRes: 0.7015, norm(attn): 0.1855, norm(output): 0.9333, norm(x): 0.7641, norm(y): 1.0126, norm:1.0301, tok/sec: 100555.22, flops:105.55, batch-reuse:1
@ 2032 train 4.8783 , allloss: 4.8794, dt: 1338.82ms, fracRes: 0.7016, norm(attn): 0.1875, norm(output): 0.9333, norm(x): 0.7636, norm(y): 1.0130, norm:0.9036, tok/sec: 97901.14, flops:102.76, batch-reuse:1
@ 2033 train 4.9025 , allloss: 4.9028, dt: 1309.15ms, fracRes: 0.7016, norm(attn): 0.1875, norm(output): 0.9333, norm(x): 0.7638, norm(y): 1.0130, norm:0.9935, tok/sec: 100119.94, flops:105.09, batch-reuse:1
@ 2034 train 4.8915 , allloss: 4.8925, dt: 1289.52ms, fracRes: 0.7017, norm(attn): 0.1846, norm(output): 0.9333, norm(x): 0.7630, norm(y): 1.0127, norm:0.8264, tok/sec: 101644.32, flops:106.69, batch-reuse:1
@ 2035 train 4.8852 , allloss: 4.8869, dt: 1312.87ms, fracRes: 0.7015, norm(attn): 0.1855, norm(output): 0.9332, norm(x): 0.7629, norm(y): 1.0129, norm:0.7319, tok/sec: 99835.93, flops:104.79, batch-reuse:1
@ 2036 train 4.8994 , allloss: 4.9016, dt: 1306.78ms, fracRes: 0.7014, norm(attn): 0.1875, norm(output): 0.9334, norm(x): 0.7638, norm(y): 1.0128, norm:0.7930, tok/sec: 100301.81, flops:105.28, batch-reuse:1
@ 2037 train 4.9437 , allloss: 4.9446, dt: 1310.40ms, fracRes: 0.7017, norm(attn): 0.1885, norm(output): 0.9334, norm(x): 0.7644, norm(y): 1.0124, norm:0.8558, tok/sec: 100024.77, flops:104.99, batch-reuse:1
@ 2038 train 4.9096 , allloss: 4.9111, dt: 1273.18ms, fracRes: 0.7018, norm(attn): 0.1875, norm(output): 0.9334, norm(x): 0.7642, norm(y): 1.0125, norm:0.8130, tok/sec: 102948.43, flops:108.06, batch-reuse:1
@ 2039 train 5.0205 , allloss: 5.0246, dt: 1292.51ms, fracRes: 0.7018, norm(attn): 0.1855, norm(output): 0.9333, norm(x): 0.7637, norm(y): 1.0126, norm:0.8604, tok/sec: 101408.96, flops:106.44, batch-reuse:1
@ 2040 train 5.0787 , allloss: 5.0798, dt: 1333.74ms, fracRes: 0.7018, norm(attn): 0.1836, norm(output): 0.9334, norm(x): 0.7631, norm(y): 1.0126, norm:0.6451, tok/sec: 98273.97, flops:103.15, batch-reuse:1
@ 2041 train 5.0413 , allloss: 5.0421, dt: 1336.48ms, fracRes: 0.7016, norm(attn): 0.1855, norm(output): 0.9334, norm(x): 0.7633, norm(y): 1.0128, norm:0.8772, tok/sec: 98072.89, flops:102.94, batch-reuse:1
@ 2042 train 5.1820 , allloss: 5.1823, dt: 1339.81ms, fracRes: 0.7017, norm(attn): 0.1846, norm(output): 0.9335, norm(x): 0.7635, norm(y): 1.0124, norm:0.8601, tok/sec: 97828.49, flops:102.68, batch-reuse:1
@ 2043 train 5.1042 , allloss: 5.1045, dt: 1334.61ms, fracRes: 0.7016, norm(attn): 0.1875, norm(output): 0.9335, norm(x): 0.7635, norm(y): 1.0127, norm:0.8881, tok/sec: 98209.86, flops:103.08, batch-reuse:1
@ 2044 train 5.1964 , allloss: 5.1965, dt: 1338.55ms, fracRes: 0.7014, norm(attn): 0.1855, norm(output): 0.9334, norm(x): 0.7635, norm(y): 1.0132, norm:0.9708, tok/sec: 97920.72, flops:102.78, batch-reuse:1
@ 2045 train 5.0953 , allloss: 5.0955, dt: 1334.00ms, fracRes: 0.7016, norm(attn): 0.1816, norm(output): 0.9334, norm(x): 0.7632, norm(y): 1.0127, norm:1.1162, tok/sec: 98254.88, flops:103.13, batch-reuse:1
@ 2046 train 5.1996 , allloss: 5.1997, dt: 1330.49ms, fracRes: 0.7019, norm(attn): 0.1855, norm(output): 0.9335, norm(x): 0.7623, norm(y): 1.0122, norm:1.0762, tok/sec: 98513.91, flops:103.40, batch-reuse:1
@ 2047 train 5.0962 , allloss: 5.0964, dt: 1330.87ms, fracRes: 0.7020, norm(attn): 0.1865, norm(output): 0.9334, norm(x): 0.7633, norm(y): 1.0123, norm:0.9269, tok/sec: 98486.21, flops:103.37, batch-reuse:1
@ 2048 train 5.0907 , allloss: 5.0909, dt: 1275.88ms, fracRes: 0.7018, norm(attn): 0.1875, norm(output): 0.9335, norm(x): 0.7640, norm(y): 1.0126, norm:0.9951, tok/sec: 102730.77, flops:107.83, batch-reuse:1
@ 2049 train 5.1393 , allloss: 5.1397, dt: 1302.16ms, fracRes: 0.7017, norm(attn): 0.1865, norm(output): 0.9334, norm(x): 0.7627, norm(y): 1.0127, norm:0.8938, tok/sec: 100657.31, flops:105.65, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0151, -0.0505, -0.0151,  ..., -0.0038, -0.0035,  0.0446],
        [ 0.0093, -0.0441, -0.0279,  ..., -0.0532, -0.0112,  0.0423],
        [ 0.0037, -0.0635,  0.0138,  ...,  0.0068,  0.0081,  0.0595],
        ...,
        [ 0.0150,  0.0821, -0.0178,  ...,  0.0028, -0.0195, -0.0086],
        [-0.0070, -0.0189,  0.0705,  ...,  0.0245,  0.0388,  0.0438],
        [ 0.0233, -0.0316,  0.0547,  ..., -0.0057,  0.0407,  0.0054]], device='cuda:0', requires_grad=True)
K: tensor([ 5.0000, -3.8125,  0.5898,  3.7656, -5.0938,  4.0625, -1.2656,  6.3125, -5.7500, -0.4961, -3.2969, -4.7812,  5.8438, -5.2188, -0.2314,  0.2256, -1.1406, -4.8750,  6.6562, -6.8438,  6.3125,  3.7188, -7.0312,  0.0466, -2.3281, -2.0781,  3.2344, -3.7031, -5.4688, -2.8906,  6.7500,  0.1826,
         2.7656,  5.1875, -2.3906, -4.1875,  2.0938,  3.7031, -3.0156, -5.0312,  4.7812, -2.5156, -0.8711, -2.2812, -4.4375, -3.0312, -0.7969,  3.7344, -0.2695,  2.7500,  3.8906, -4.5625, -5.9688,  5.7500,  3.8281, -2.3438,  5.0312,  3.9375, -1.1016, -1.8984, -2.8594, -0.9531, -1.8359, -0.9062],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0841,  0.1003,  0.0014,  ..., -0.0316, -0.0469, -0.0202],
        [-0.0583,  0.1030,  0.0077,  ...,  0.0177, -0.0172,  0.0161],
        [-0.0672,  0.0944, -0.0095,  ..., -0.0691, -0.0876, -0.0026],
        ...,
        [ 0.0420,  0.0023,  0.0061,  ...,  0.0166, -0.0197, -0.0187],
        [-0.0177,  0.0111, -0.0381,  ...,  0.0308, -0.0106,  0.0314],
        [-0.0163,  0.0388,  0.0047,  ...,  0.0099, -0.0202, -0.0352]], device='cuda:0', requires_grad=True)
Q: tensor([ -2.0312,   7.1250, -11.0625,  -6.0625,   4.9062,  -5.3438,  -2.9688,  -5.9062,   6.0000,  -9.0000,   2.1719,   5.7500,  -9.0000,   5.5000,  -8.5000,   7.1875,   6.5625,   7.1875,  -5.9062,   8.7500,  -5.8438,  -6.4688,   6.5312,  -6.6562,  -3.2031,  -8.0000,  -8.3125,   4.0625,   4.9062,
          9.7500,  -6.1562,  -6.9688,  -8.8750,  -4.9375,  -3.3906,   2.5938, -11.0625,  -6.2812,   7.0625,   3.7812,  -3.2500,   1.4141,   8.1875,  -0.9531,   6.4688,   4.5312,  -8.1875,  -8.1875,   9.6875,   0.5117,  -4.1250,   7.0000,   5.4375,  -7.5312,  -3.6094,  -0.1748,  -4.1250,   3.6406,
         -0.5312,  11.3750,   3.3125,  -5.7188,   7.7188,   9.1250], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[   0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000],
        [   0.0000,   80.5000,  112.5000,   84.0000,   72.5000,   74.5000,   63.5000,   93.5000,   80.5000,   68.5000,   78.0000,   93.0000,   73.0000,   74.5000,   76.5000],
        [   0.0000,  -97.0000, -156.0000, -125.0000, -117.0000, -118.5000,  -88.0000, -125.0000, -128.0000, -104.5000, -129.0000, -122.0000,  -99.0000, -112.5000, -118.0000],
        [   0.0000, -113.0000, -178.0000, -141.0000, -128.0000, -129.0000,  -98.5000, -143.0000, -141.0000, -116.0000, -141.0000, -140.0000, -112.5000, -125.0000, -130.0000],
        [   0.0000, -139.0000, -213.0000, -166.0000, -154.0000, -156.0000, -115.5000, -171.0000, -170.0000, -137.0000, -170.0000, -164.0000, -134.0000, -149.0000, -154.0000],
        [   0.0000, -135.0000, -208.0000, -163.0000, -152.0000, -155.0000, -116.0000, -169.0000, -167.0000, -136.0000, -166.0000, -163.0000, -135.0000, -147.0000, -152.0000],
        [   0.0000, -107.5000, -167.0000, -130.0000, -119.0000, -122.0000,  -90.0000, -133.0000, -132.0000, -106.0000, -132.0000, -128.0000, -104.0000, -116.0000, -120.5000],
        [   0.0000, -126.0000, -201.0000, -162.0000, -151.0000, -153.0000, -117.5000, -164.0000, -164.0000, -135.0000, -166.0000, -163.0000, -130.0000, -147.0000, -153.0000],
        [   0.0000, -122.5000, -185.0000, -143.0000, -131.0000, -134.0000,  -99.0000, -149.0000, -147.0000, -117.5000, -146.0000, -141.0000, -117.0000, -128.0000, -132.0000],
        [   0.0000, -126.5000, -196.0000, -155.0000, -140.0000, -143.0000, -108.0000, -159.0000, -155.0000, -126.5000, -155.0000, -154.0000, -124.0000, -137.0000, -143.0000],
        [   0.0000, -114.0000, -171.0000, -130.0000, -117.0000, -120.0000,  -87.5000, -135.0000, -133.0000, -105.0000, -133.0000, -127.0000, -103.5000, -115.0000, -119.5000],
        [   0.0000, -131.0000, -204.0000, -163.0000, -149.0000, -153.0000, -114.0000, -166.0000, -165.0000, -134.0000, -166.0000, -161.0000, -129.0000, -145.0000, -153.0000],
        [   0.0000, -122.0000, -192.0000, -154.0000, -144.0000, -146.0000, -111.0000, -156.0000, -157.0000, -129.0000, -158.0000, -154.0000, -125.0000, -140.0000, -145.0000],
        [   0.0000, -112.5000, -167.0000, -126.5000, -115.0000, -118.0000,  -86.0000, -133.0000, -130.0000, -103.0000, -129.0000, -124.5000, -104.0000, -113.0000, -116.5000],
        [   0.0000, -125.0000, -189.0000, -146.0000, -130.0000, -134.0000, -101.0000, -152.0000, -146.0000, -118.0000, -145.0000, -146.0000, -117.5000, -128.0000, -135.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9167],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0007,     0.0000,     0.9336,     0.0645,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1943,     0.0000,     0.7148,     0.0591,     0.0317,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9297,     0.0000,     0.0535,     0.0033,     0.0124,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0161,     0.0001,     0.9531,     0.0260,     0.0000,     0.0001,     0.0030,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0086,     0.0009,     0.4883,     0.0908,     0.0000,     0.0000,     0.0004,     0.4102,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0029,     0.0000,     0.9766,     0.0024,     0.0060,     0.0001,     0.0123,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0781,     0.0000,     0.1138,     0.1123,     0.0028,     0.0004,     0.0618,     0.0086,     0.0001,     0.6211,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0840,     0.0000,     0.2598,     0.0083,     0.5273,     0.0002,     0.0679,     0.0000,     0.0002,     0.0498,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0089,     0.0000,     0.3105,     0.1523,     0.0003,     0.0010,     0.0118,     0.0128,     0.0002,     0.4863,     0.0002,     0.0162,     0.0000,     0.0000,     0.0000],
        [    0.8789,     0.0000,     0.0005,     0.0005,     0.0806,     0.0000,     0.0206,     0.0000,     0.0000,     0.0039,     0.0151,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0069,     0.0000,     0.5977,     0.0033,     0.3203,     0.0003,     0.0659,     0.0000,     0.0003,     0.0054,     0.0004,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.1040,     0.0103,     0.0000,     0.0001,     0.0005,     0.3926,     0.0000,     0.2793,     0.0000,     0.0554,     0.1572,     0.0000,     0.0003]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0056,  0.0426,  0.0172,  ...,  0.0162, -0.0073,  0.0090],
        [-0.0221,  0.0044,  0.0606,  ..., -0.0062,  0.0193,  0.0521],
        [ 0.0054,  0.0520, -0.0169,  ..., -0.0251,  0.0114, -0.0040],
        ...,
        [ 0.0335, -0.0047,  0.0735,  ...,  0.0068,  0.0354, -0.0353],
        [-0.0170,  0.0317, -0.0312,  ..., -0.0250,  0.0196,  0.0265],
        [-0.0143, -0.0120,  0.0309,  ..., -0.0067,  0.0035,  0.0264]], device='cuda:0', requires_grad=True)
K: tensor([-2.4219, -0.4004, -1.2188,  0.5742, -2.8438, -0.0698, -1.5781,  0.9961, -1.9141, -1.8438,  1.1406,  0.2520,  1.5391,  1.7812, -1.3359, -0.3887, -0.5625,  0.9102,  0.2070, -1.3125, -0.1118,  1.1094, -0.8320,  0.9531, -0.4395,  2.0312, -0.6016, -0.4902,  2.5781,  0.7852, -0.4062,  1.4297,
        -2.1562,  1.3047, -0.8828, -0.5781, -1.6016, -0.2969,  1.0625,  0.9375, -1.0156,  2.5625, -1.2031,  2.4375, -2.7188, -2.6250, -2.0938, -0.4062,  0.2305, -0.8750,  0.3496, -0.3887,  0.1855, -1.2656, -0.6250, -1.8516, -0.5195,  1.6953,  0.6484, -1.6016,  0.0859, -1.5078,  2.6250, -0.4824],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0102,  0.0264,  0.0006,  ..., -0.0298,  0.0183, -0.0377],
        [-0.0087,  0.0153, -0.0166,  ..., -0.0291, -0.0153,  0.0446],
        [-0.0145, -0.0189,  0.0454,  ..., -0.0181,  0.0382, -0.0011],
        ...,
        [-0.0223,  0.0119, -0.0398,  ...,  0.0309, -0.0087,  0.0616],
        [ 0.0103, -0.0059, -0.0160,  ...,  0.0457,  0.0187, -0.0101],
        [-0.0422,  0.0144,  0.0322,  ...,  0.0128,  0.0003,  0.0337]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.5430,  3.0469,  2.9688, -2.5469,  1.1250, -1.9141,  0.8281, -1.8359, -2.2188, -0.7461, -0.1514, -1.4375, -0.0933,  2.1250,  1.4297, -1.4844,  0.5508, -2.1250,  2.7500,  3.7969, -0.2871, -0.0532,  2.9219,  0.8711, -0.3320,  2.0781, -3.2188,  1.5938,  3.6875, -1.4375,  1.2109,  0.3984,
        -0.5000, -0.9336,  1.1250, -1.1953,  0.4570, -0.1992, -0.0625, -1.8047, -2.6875, -1.0859, -2.1250,  0.3770, -1.6172, -0.5547, -1.2812, -4.2188,  0.3262, -1.3125,  0.1025,  0.9648, -1.3125, -1.0703, -2.3125,  0.1602,  3.9844,  1.2656, -2.9375, -2.4844, -0.4512, -1.9297, -0.9102, -2.4688],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000,  30.1250,  13.6875,  14.1875, -25.2500,   6.2812,  -1.8594,  42.2500,  -7.8125,  12.3750, -21.3750,  29.0000,  47.7500,  -1.8281,   5.2500],
        [  0.0000,  21.3750,   7.1562,   9.8750,  -3.3281,  13.0000,   4.4062,  25.5000,  12.0000,   9.2500,   3.7969,  22.7500,  28.6250,  18.8750,  11.1875],
        [  0.0000,  -3.2656,   7.1250,   4.4688,  -3.4219,  -1.6484,   0.1621,   2.4531,  -4.8438,   6.3125,  -4.9688,   3.5938,   2.3906,  -8.6875,   2.2031],
        [  0.0000, -10.0625,   1.3047,  -1.1875,  -1.8047,  -4.9375,  -0.8672,  -4.6250,  -7.3125,   1.2578,  -5.9062,  -5.7188,  -6.8125, -11.6875,  -4.1562],
        [  0.0000, -10.6250,  -2.8594,  -5.6250,  -4.3125, -11.1875,  -2.0000,  -9.9375, -14.5000,  -2.5938,  -9.2500, -10.1875, -11.6875, -18.0000,  -7.6875],
        [  0.0000,  -5.0000,   4.0938,   0.4805,  -6.1875,  -5.1562,  -1.6641,  -0.3145, -10.6875,   3.0156, -10.1875,  -1.3828,  -1.0859, -14.5625,  -3.8594],
        [  0.0000,  -2.2344,   4.0312,   2.3594, -12.2500,  -6.8750,  -3.0312,   3.8750, -13.7500,   4.2812, -13.8750,   2.1094,   4.5625, -17.3750,  -1.1484],
        [  0.0000,  -7.1562,   5.8125,  -0.1680,   0.7305,  -4.0000,   1.4531,  -3.7969,  -6.0000,   0.1108,  -6.4375,  -3.3906,  -6.6562, -10.6250,  -4.6250],
        [  0.0000,  -8.6875,   0.3770,   0.3633,  -3.3281,  -5.2812,  -0.2324,  -2.2031,  -7.3438,   2.0781,  -6.1875,  -3.8281,  -2.6250, -11.0000,  -1.4688],
        [  0.0000, -12.9375,   1.1328,  -2.3125,   1.8359,  -5.8750,  -0.2109,  -8.1250,  -5.9062,  -0.5234,  -5.0625,  -7.5938, -11.3125, -10.8125,  -5.5000],
        [  0.0000,  -6.1250,   3.5625,   2.8438,  -3.3438,  -2.1406,   0.2852,   0.3633,  -3.7812,   4.0000,  -4.0312,   0.6016,   0.2031,  -7.4688,   2.4375],
        [  0.0000, -16.2500,  -7.4375,  -7.5000,  -2.3906, -12.4375,  -3.7500, -19.3750, -11.5625,  -5.4062,  -4.0625, -15.5000, -21.0000, -16.8750,  -5.8125],
        [  0.0000, -10.5625,   4.4688,  -0.7422,   3.8438,  -3.1094,   2.2500,  -7.1875,  -3.2969,  -0.2539,  -2.9219,  -5.5625, -10.1875,  -8.4375,  -4.0938],
        [  0.0000,  -1.5625,   7.8125,   5.5312,  -4.3438,   0.3008,   2.5625,   9.1875,  -3.8438,   8.8125,  -6.7188,   7.1875,   8.2500,  -6.1875,   2.1250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7500],
        [0.2188],
        [0.3104],
        [0.1771],
        [0.3670],
        [0.0966],
        [0.2997],
        [0.0267],
        [0.2293],
        [0.0632],
        [0.2103],
        [0.4210],
        [0.0252],
        [0.0013]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0282, -0.0098,  0.0055,  ...,  0.0151, -0.0743, -0.0156],
        [-0.0496, -0.0310,  0.0054,  ...,  0.0320, -0.0703, -0.0311],
        [ 0.0243,  0.0084, -0.0138,  ...,  0.0434,  0.0238, -0.0125],
        ...,
        [-0.0115, -0.0206, -0.0066,  ...,  0.0581, -0.0333, -0.0187],
        [-0.0276, -0.0176,  0.0188,  ...,  0.0192,  0.0035, -0.0018],
        [ 0.0075, -0.0409, -0.0312,  ...,  0.0569, -0.0373, -0.0641]], device='cuda:0', requires_grad=True)
K: tensor([ 3.4531, -4.2500, -3.0469, -3.9062,  5.3125, -4.0000,  4.8750,  3.0156,  3.9531, -5.0625,  3.7500, -4.3438, -4.6250,  4.5000,  2.8906, -2.7031,  1.5391,  5.5938, -1.7656, -4.6250,  5.5625,  5.9375,  4.0938, -2.4688, -4.0625,  5.4375, -3.6719, -5.5000, -2.5469,  3.3438, -4.1875,  3.7500,
         2.7344, -2.5156, -3.3125,  0.1660,  0.5703, -3.9531,  3.4219, -3.7812, -4.6250,  2.0312,  2.9062, -3.1719, -3.7969,  3.9375, -4.3438,  4.3125, -5.1250, -3.9531, -3.8906,  3.8594,  3.4219,  3.8125,  1.9219, -4.8438, -4.1250,  2.7031, -1.0234, -2.4062,  3.7031,  3.2812, -1.9688,  3.0469],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0111,  0.0133,  0.0147,  ..., -0.0008,  0.0179,  0.0468],
        [ 0.0466,  0.0275, -0.0190,  ..., -0.0383,  0.0021,  0.0119],
        [-0.0004, -0.0231, -0.0016,  ..., -0.0262,  0.0478,  0.0381],
        ...,
        [-0.0135, -0.0050, -0.0553,  ..., -0.0097,  0.0458,  0.0122],
        [ 0.0202,  0.0010, -0.0236,  ...,  0.0266, -0.0258, -0.0186],
        [-0.0052,  0.0050,  0.0068,  ..., -0.0242, -0.0005,  0.0569]], device='cuda:0', requires_grad=True)
Q: tensor([-2.2969,  4.9688,  5.2812,  4.0625, -3.6562,  4.3750, -3.2500, -5.1250, -3.6406,  4.9688, -4.0938,  5.3125,  3.4375, -4.1875, -4.3125,  4.2812, -1.1641, -6.9062,  1.4922,  6.4062, -5.5312, -4.0312, -5.1562,  1.8594,  5.5938, -5.8750,  3.5781,  3.1250,  4.8125, -4.0312,  3.7656, -4.5000,
        -4.8125,  2.4062,  3.8125, -2.2500, -1.5859,  2.6562, -5.9688,  1.5391,  5.7812, -0.1963, -3.7188,  4.0625,  3.3438, -5.2812,  3.9531, -3.3750,  4.1250,  5.3750,  5.9375, -4.8750, -2.7031, -3.5938, -2.5625,  3.8281,  5.1562, -1.2344,  1.7109,  3.1250, -3.4844, -5.8125,  1.2969, -2.6719],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[   0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000],
        [   0.0000,  -37.5000,  -48.0000,  -62.5000,  -72.0000,  -64.0000,  -65.5000,  -78.5000,  -62.2500,  -55.7500,  -64.0000,  -61.7500,  -60.5000,  -60.7500,  -68.5000],
        [   0.0000,  -56.0000,  -78.0000, -100.5000, -111.5000,  -98.0000, -102.5000, -125.5000,  -93.5000,  -91.5000,  -98.5000,  -96.0000,  -96.0000,  -91.0000, -105.5000],
        [   0.0000,  -61.0000,  -88.0000, -116.5000, -128.0000, -110.0000, -117.0000, -143.0000, -104.0000, -106.5000, -111.5000, -108.0000, -108.5000, -100.5000, -118.0000],
        [   0.0000,  -67.5000,  -95.5000, -125.0000, -141.0000, -121.5000, -128.0000, -156.0000, -116.5000, -114.5000, -123.0000, -119.5000, -119.5000, -113.0000, -130.0000],
        [   0.0000,  -58.7500,  -80.5000, -104.0000, -117.5000, -103.5000, -108.0000, -130.0000,  -99.0000,  -94.5000, -104.0000, -100.0000, -100.5000,  -96.0000, -110.5000],
        [   0.0000,  -65.5000,  -92.5000, -120.0000, -135.0000, -117.5000, -124.0000, -150.0000, -112.0000, -110.0000, -118.5000, -115.0000, -115.5000, -109.0000, -126.0000],
        [   0.0000,  -79.0000, -112.0000, -145.0000, -162.0000, -140.0000, -148.0000, -182.0000, -133.0000, -133.0000, -141.0000, -137.0000, -140.0000, -129.0000, -151.0000],
        [   0.0000,  -51.5000,  -72.5000,  -94.5000, -106.5000,  -93.0000,  -97.0000, -118.0000,  -89.5000,  -86.5000,  -93.5000,  -91.0000,  -91.0000,  -87.0000,  -99.0000],
        [   0.0000,  -58.0000,  -84.5000, -111.0000, -122.0000, -105.0000, -111.5000, -137.0000,  -99.0000, -102.0000, -106.0000, -103.0000, -104.5000,  -96.0000, -112.5000],
        [   0.0000,  -61.0000,  -87.0000, -115.0000, -130.0000, -111.5000, -118.0000, -143.0000, -107.0000, -105.5000, -113.0000, -109.5000, -109.5000, -104.0000, -118.5000],
        [   0.0000,  -57.0000,  -83.0000, -108.5000, -120.0000, -103.0000, -109.5000, -134.0000,  -98.0000,  -99.5000, -104.0000, -102.0000, -103.0000,  -95.0000, -111.0000],
        [   0.0000,  -62.2500,  -87.5000, -112.5000, -125.0000, -109.0000, -115.0000, -142.0000, -103.5000, -102.5000, -110.0000, -106.5000, -109.0000, -100.5000, -117.5000],
        [   0.0000,  -50.2500,  -70.5000,  -92.0000, -104.0000,  -91.0000,  -95.0000, -115.5000,  -87.5000,  -84.0000,  -91.5000,  -89.0000,  -89.0000,  -85.0000,  -96.5000],
        [   0.0000,  -60.7500,  -87.5000, -115.0000, -130.0000, -112.0000, -118.5000, -144.0000, -106.0000, -105.5000, -112.5000, -109.5000, -110.5000, -103.0000, -119.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0405,  0.0190,  0.0218,  ...,  0.0080, -0.0017, -0.0247],
        [-0.0009,  0.0221,  0.0244,  ...,  0.0298,  0.0089,  0.0288],
        [ 0.0311,  0.0048, -0.0018,  ...,  0.0005,  0.0407,  0.0051],
        ...,
        [-0.0245, -0.0304, -0.0168,  ...,  0.0138, -0.0288,  0.0107],
        [-0.0086,  0.0069, -0.0220,  ..., -0.0192, -0.0306, -0.0261],
        [ 0.0272, -0.0012, -0.0030,  ...,  0.0156,  0.0154,  0.0086]], device='cuda:0', requires_grad=True)
K: tensor([-3.8594,  0.3027, -4.3438,  2.0781, -2.5938, -5.0625, -2.6562,  4.1875, -0.8555, -1.4531,  2.4375,  1.4609, -3.6406, -5.0625,  4.0625,  4.2500,  4.8438, -5.0000, -3.6094,  3.6406,  3.7188, -3.8125, -5.8750,  6.0312, -3.9062,  4.5312, -1.3516, -3.1406,  1.3672, -3.2031,  0.9062, -3.7656,
        -2.9531, -4.2812,  4.3438, -4.7188, -4.8750, -0.2021,  4.7812,  3.3906, -4.5312, -0.5547,  0.2578, -4.3125,  4.2188,  5.2188, -0.3730, -3.1875, -2.9219,  3.6562,  3.8125,  2.2500,  0.9492, -4.0312, -2.5938, -3.6875,  4.1875,  4.0625, -3.6562, -4.8438, -2.3438,  4.2812, -1.3359, -4.8125],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[     0.0293,      0.0154,     -0.0046,  ...,      0.0225,     -0.0270,     -0.0218],
        [    -0.0127,     -0.0094,      0.0094,  ...,      0.0106,     -0.0205,     -0.0015],
        [     0.0005,      0.0121,     -0.0011,  ...,      0.0013,      0.0151,      0.0022],
        ...,
        [    -0.0262,      0.0062,     -0.0090,  ...,     -0.0135,      0.0294,      0.0114],
        [    -0.0379,      0.0337,     -0.0076,  ...,      0.0041,     -0.0000,     -0.0311],
        [     0.0020,     -0.0117,     -0.0435,  ...,      0.0022,     -0.0057,      0.0163]], device='cuda:0', requires_grad=True)
Q: tensor([ 4.3125, -2.5000,  2.2656, -0.9023,  1.0391,  2.2031,  3.2188, -5.0312, -1.0000, -0.5898, -1.3750,  1.9922,  0.9023,  2.1094, -2.1406, -4.3750, -3.9062,  3.0625,  2.2188, -3.5625, -4.3125,  5.4062,  3.2500, -2.2500,  4.0938, -2.9531, -0.4570,  3.3438,  0.9219,  1.3906,  1.1328,  2.6562,
         0.4121,  1.8750, -2.9688,  2.4062,  2.6250, -1.9844, -3.4375, -4.7188,  3.0312, -2.4062, -3.1562,  2.5000, -3.0312, -1.7734, -2.8594,  2.0781,  3.1875, -2.7812, -2.6406,  0.0087,  2.7344,  3.6406,  1.1562,  4.2500, -2.6250, -1.7734,  1.7891,  3.3906,  2.4062, -4.0938,  4.2188,  1.6250],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000, -25.6250, -19.7500, -21.1250, -26.3750, -27.2500, -28.8750, -28.0000, -31.3750, -29.1250, -32.0000, -29.0000, -30.8750, -34.7500, -34.0000],
        [  0.0000, -19.1250, -15.0625, -15.0625, -18.7500, -19.0000, -20.5000, -19.7500, -22.1250, -20.6250, -22.6250, -20.5000, -21.7500, -24.3750, -24.0000],
        [  0.0000, -29.7500, -23.8750, -28.5000, -35.7500, -37.0000, -39.5000, -38.0000, -42.5000, -39.0000, -43.0000, -39.7500, -41.5000, -46.7500, -46.2500],
        [  0.0000, -33.0000, -26.1250, -31.2500, -40.0000, -41.7500, -44.2500, -42.5000, -48.0000, -43.5000, -48.2500, -44.2500, -47.0000, -52.7500, -51.7500],
        [  0.0000, -32.0000, -25.2500, -30.7500, -39.0000, -41.5000, -43.7500, -42.5000, -47.2500, -43.0000, -47.7500, -43.7500, -46.7500, -52.2500, -51.2500],
        [  0.0000, -34.0000, -26.6250, -32.7500, -41.5000, -44.0000, -46.5000, -45.0000, -50.2500, -45.7500, -50.7500, -46.5000, -49.7500, -55.5000, -54.7500],
        [  0.0000, -33.5000, -26.0000, -33.7500, -43.5000, -46.0000, -48.5000, -47.2500, -53.0000, -47.7500, -53.0000, -48.7500, -52.0000, -58.2500, -57.2500],
        [  0.0000, -37.2500, -29.1250, -36.2500, -45.5000, -48.5000, -51.0000, -49.5000, -55.7500, -50.7500, -56.2500, -51.7500, -54.7500, -61.5000, -60.5000],
        [  0.0000, -38.2500, -29.7500, -42.0000, -53.0000, -56.0000, -59.2500, -57.2500, -65.0000, -59.2500, -65.0000, -60.2500, -63.5000, -72.0000, -71.0000],
        [  0.0000, -37.0000, -28.6250, -36.7500, -46.5000, -49.5000, -52.2500, -50.7500, -57.0000, -51.7500, -57.7500, -52.7500, -56.0000, -63.0000, -62.2500],
        [  0.0000, -36.0000, -28.0000, -37.2500, -47.0000, -49.7500, -52.5000, -51.0000, -57.7500, -52.2500, -58.0000, -53.5000, -56.2500, -63.7500, -63.0000],
        [  0.0000, -35.5000, -27.5000, -37.2500, -47.7500, -50.7500, -53.2500, -51.7500, -58.5000, -52.5000, -58.5000, -53.5000, -57.2500, -64.5000, -63.5000],
        [  0.0000, -40.5000, -31.5000, -41.0000, -52.0000, -55.5000, -58.2500, -56.7500, -64.0000, -58.0000, -64.5000, -59.2500, -62.7500, -70.5000, -69.5000],
        [  0.0000, -40.0000, -31.1250, -41.0000, -51.5000, -55.0000, -58.0000, -56.5000, -63.2500, -57.7500, -64.0000, -59.0000, -62.5000, -70.0000, -69.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.6094,     0.3906,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0003,     0.6602,     0.3301,     0.0078,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.5898,     0.0469,     0.0023,     0.3613,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0005,     0.5508,     0.0452,     0.0007,     0.1865,     0.2168,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1631,     0.0088,     0.0003,     0.0515,     0.0413,     0.7344,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0028,     0.1187,     0.0090,     0.0001,     0.0127,     0.0427,     0.8125,     0.0014,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1079,     0.0045,     0.0003,     0.0811,     0.0723,     0.6758,     0.0039,     0.0535,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0085,     0.1582,     0.0559,     0.0007,     0.0918,     0.0396,     0.3125,     0.0378,     0.2930,     0.0020,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1104,     0.0038,     0.0002,     0.0251,     0.0273,     0.5469,     0.0030,     0.0488,     0.0001,     0.2363,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0014,     0.0542,     0.0220,     0.0013,     0.0620,     0.0476,     0.2012,     0.0250,     0.2139,     0.0012,     0.3633,     0.0060,     0.0000,     0.0000,     0.0000],
        [    0.0012,     0.1240,     0.0086,     0.0001,     0.0116,     0.0284,     0.6016,     0.0011,     0.1060,     0.0000,     0.1089,     0.0001,     0.0093,     0.0000,     0.0000],
        [    0.0000,     0.0889,     0.0034,     0.0002,     0.0527,     0.0457,     0.4727,     0.0023,     0.0349,     0.0004,     0.1875,     0.0005,     0.0182,     0.0918,     0.0000],
        [    0.0000,     0.0654,     0.0032,     0.0000,     0.0236,     0.0121,     0.2051,     0.0014,     0.0547,     0.0000,     0.1289,     0.0002,     0.0150,     0.2158,     0.2754]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0068,  0.0116,  0.0390,  ...,  0.0086, -0.0220, -0.0085],
        [-0.0010,  0.0069,  0.0010,  ..., -0.0087,  0.0039,  0.0637],
        [ 0.0063,  0.0107, -0.0175,  ...,  0.0011,  0.0179,  0.0060],
        ...,
        [ 0.0211,  0.0183,  0.0056,  ..., -0.0459,  0.0248, -0.0112],
        [ 0.0189,  0.0021, -0.0668,  ...,  0.0184, -0.0145,  0.0783],
        [ 0.0352,  0.0131,  0.0247,  ..., -0.0296,  0.0064, -0.0143]], device='cuda:0', requires_grad=True)
K: tensor([-3.7031, -2.1094, -5.0000,  1.3828, -0.8867,  0.6055, -4.4688,  3.6406,  1.9609, -1.8906,  4.3438, -3.6875, -4.7812,  0.9492,  4.1875,  3.7031,  0.2852, -1.2422,  0.7539, -3.6406, -4.1562, -1.5469, -1.5234, -3.0000, -4.3438, -1.7031, -2.3750, -4.4688,  3.1250, -1.1719,  0.9023, -0.7695,
        -0.4297, -4.4062, -1.6016,  1.8594,  4.3438, -0.1113,  4.7500, -2.5156, -1.5156, -3.7812, -1.0469, -4.1250, -0.3047, -0.9961,  2.4688, -4.2500,  1.8828,  0.5156, -1.1484, -4.5938, -4.0625, -5.1250,  0.3750, -2.9844, -2.8438,  2.4844, -1.7891, -1.6953,  0.9258, -3.4062,  0.7812, -5.1250],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0197, -0.0165, -0.0036,  ...,  0.0047,  0.0326, -0.0113],
        [-0.0053, -0.0106, -0.0012,  ..., -0.0495, -0.0303, -0.0184],
        [-0.0106, -0.0048,  0.0155,  ..., -0.0067, -0.0158, -0.0251],
        ...,
        [ 0.0284, -0.0143,  0.0113,  ..., -0.0166, -0.0312,  0.0167],
        [ 0.0102,  0.0105, -0.0248,  ..., -0.0132, -0.0353, -0.0155],
        [ 0.0231,  0.0072, -0.0382,  ...,  0.0318,  0.0393, -0.0091]], device='cuda:0', requires_grad=True)
Q: tensor([-3.2812, -0.5625, -1.2578,  1.8984,  0.4941, -2.9375, -2.9062,  0.3691,  3.0938,  1.5938,  3.0000,  0.9414, -1.3281, -1.3203,  2.3594, -0.7031,  1.1484, -1.1250, -1.8984,  2.0625, -1.7422,  0.1201, -1.7812, -3.5156,  1.2891,  0.5391,  0.4395, -0.7148, -1.8984,  0.7109,  0.3887,  0.5430,
         1.1406, -0.9336, -0.2500,  0.8633, -0.3691, -2.1562,  0.0757,  1.0078, -0.1079,  1.0625, -0.5664,  0.5234, -1.9766, -1.3047,  1.6797, -0.8359, -1.8906, -2.5938,  0.2520, -0.6328, -2.0469,  0.5547, -2.1562,  0.1885, -1.1953, -0.1650, -2.5000, -0.4355,  1.3672, -0.5391, -0.3750, -2.7656],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, 13.7500, 12.4375,  9.6875, 13.4375, 12.1250, 12.5625, 13.5000, 14.5000, 14.1250, 16.1250, 14.9375, 16.3750, 16.8750, 15.5625],
        [ 0.0000, 11.1250, 10.6875,  7.6875, 10.7500,  9.5000,  9.1875, 11.6250, 12.3750, 13.0625, 13.3125, 14.0625, 14.4375, 15.0000, 13.5000],
        [ 0.0000,  7.8438,  7.1562,  3.3906,  6.6562,  6.5938,  8.3750,  6.0000,  8.4375,  4.0625,  8.0000,  5.5000,  8.3125,  9.6250,  9.9375],
        [ 0.0000,  7.7812,  5.2500,  2.2344,  7.2812,  7.0000,  9.4375,  5.3125,  7.4062,  2.7500,  8.1875,  3.5156,  6.7188,  8.1875,  8.8125],
        [ 0.0000,  6.9688,  4.4688,  0.3633,  5.8750,  6.0312,  8.7500,  3.4531,  6.4062,  1.0391,  7.5938,  1.7266,  5.0312,  7.3438,  8.3125],
        [ 0.0000, 13.6875, 10.8125,  7.4688, 12.5625, 12.3125, 15.1875,  9.6875, 13.5000,  5.5938, 13.8750,  8.1875, 11.7500, 14.3750, 16.5000],
        [ 0.0000,  3.7656,  1.1797, -3.9688,  1.5234,  2.7344,  5.6875, -0.6992,  4.2188, -4.8750,  3.9531, -3.6406,  1.4375,  5.3438,  6.5938],
        [ 0.0000, 11.3125,  8.1250,  5.5938, 11.0625, 10.9375, 13.1250,  8.0000, 10.6250,  6.2812, 12.2500,  6.6562,  9.9375, 11.5000, 11.8750],
        [ 0.0000,  2.9219,  1.8750, -2.4375,  2.3750,  1.5312,  3.5938,  1.4844,  3.5312, -1.4609,  4.2500,  0.3496,  3.6406,  5.1250,  5.3125],
        [ 0.0000, 10.8125,  7.4375,  4.6562,  9.3125,  9.4375, 12.4375,  7.2188, 10.0000,  3.6562, 11.5625,  4.9688,  9.0625, 10.9375, 12.5000],
        [ 0.0000,  3.6562,  2.7500, -0.0737,  3.7969,  3.5312,  4.9688,  2.8906,  5.0312, -0.1846,  5.5625,  1.4609,  5.0938,  6.2500,  6.3125],
        [ 0.0000,  4.6250,  1.9609, -3.0312,  2.2656,  3.1562,  6.2188, -0.1445,  4.4688, -4.0625,  4.5000, -2.8750,  2.0312,  5.6562,  7.0625],
        [ 0.0000, 11.1875,  7.9062,  5.1875, 10.6875, 10.5000, 12.8750,  7.5000, 10.2500,  5.6562, 11.9375,  6.0625,  9.6250, 11.2500, 11.6250],
        [ 0.0000, 10.3750,  7.3438,  2.7969,  9.3750,  8.6875, 11.5000,  6.5000, 10.1875,  3.0938, 11.0625,  4.7812,  8.8750, 11.5625, 11.8125]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3130],
        [0.2280],
        [0.1648],
        [0.2042],
        [0.1665],
        [0.1265],
        [0.1245],
        [0.0968],
        [0.1208],
        [0.0759],
        [0.0842],
        [0.0732],
        [0.0611],
        [0.0850]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.1250 a:0.0728iscovered:0.3223 and:0.1309atoes:0.2354,:0.5664 a:0.1006
:0.1650)


------
		( a:0.0728iscovered:0.3223 and:0.1309atoes:0.2354,:0.5664 a:0.1006
:0.1650The:0.0312)
The best way to do this, but you can also have to be able
@ 2050 train 5.0848 , allloss: 5.0888, dt: 1700.63ms, fracRes: 0.7017, norm(attn): 0.1875, norm(output): 0.9333, norm(x): 0.7608, norm(y): 1.0126, norm:0.9904, tok/sec: 77072.70, flops:80.90, batch-reuse:1
@ 2051 train 5.1971 , allloss: 5.1975, dt: 1297.38ms, fracRes: 0.7017, norm(attn): 0.1865, norm(output): 0.9334, norm(x): 0.7621, norm(y): 1.0123, norm:1.0996, tok/sec: 101028.54, flops:106.04, batch-reuse:1
@ 2052 train 5.1077 , allloss: 5.1079, dt: 1289.35ms, fracRes: 0.7018, norm(attn): 0.1865, norm(output): 0.9335, norm(x): 0.7635, norm(y): 1.0122, norm:0.9200, tok/sec: 101657.08, flops:106.70, batch-reuse:1
@ 2053 train 5.1179 , allloss: 5.1181, dt: 1294.57ms, fracRes: 0.7021, norm(attn): 0.1865, norm(output): 0.9336, norm(x): 0.7633, norm(y): 1.0122, norm:0.8359, tok/sec: 101247.65, flops:106.27, batch-reuse:1
@ 2054 train 5.0778 , allloss: 5.0781, dt: 1311.32ms, fracRes: 0.7020, norm(attn): 0.1865, norm(output): 0.9336, norm(x): 0.7626, norm(y): 1.0120, norm:0.8878, tok/sec: 99954.28, flops:104.92, batch-reuse:1
@ 2055 train 5.1332 , allloss: 5.1335, dt: 1315.53ms, fracRes: 0.7019, norm(attn): 0.1875, norm(output): 0.9335, norm(x): 0.7623, norm(y): 1.0119, norm:0.7306, tok/sec: 99634.25, flops:104.58, batch-reuse:1
@ 2056 train 5.1381 , allloss: 5.1383, dt: 1316.02ms, fracRes: 0.7016, norm(attn): 0.1875, norm(output): 0.9334, norm(x): 0.7625, norm(y): 1.0124, norm:0.8132, tok/sec: 99596.94, flops:104.54, batch-reuse:1
@ 2057 train 5.2086 , allloss: 5.2094, dt: 1290.33ms, fracRes: 0.7016, norm(attn): 0.1875, norm(output): 0.9335, norm(x): 0.7632, norm(y): 1.0128, norm:0.9426, tok/sec: 101580.09, flops:106.62, batch-reuse:1
@ 2058 train 5.1581 , allloss: 5.1622, dt: 1311.16ms, fracRes: 0.7019, norm(attn): 0.1865, norm(output): 0.9335, norm(x): 0.7635, norm(y): 1.0124, norm:1.0025, tok/sec: 99966.74, flops:104.93, batch-reuse:1
@ 2059 train 5.0439 , allloss: 5.0442, dt: 1332.02ms, fracRes: 0.7016, norm(attn): 0.1875, norm(output): 0.9335, norm(x): 0.7636, norm(y): 1.0123, norm:0.8716, tok/sec: 98400.94, flops:103.28, batch-reuse:1
@ 2060 train 5.0827 , allloss: 5.0830, dt: 1313.53ms, fracRes: 0.7014, norm(attn): 0.1865, norm(output): 0.9336, norm(x): 0.7633, norm(y): 1.0122, norm:0.9369, tok/sec: 99786.44, flops:104.74, batch-reuse:1
@ 2061 train 5.1372 , allloss: 5.1375, dt: 1326.89ms, fracRes: 0.7017, norm(attn): 0.1855, norm(output): 0.9335, norm(x): 0.7627, norm(y): 1.0121, norm:0.8688, tok/sec: 98781.68, flops:103.68, batch-reuse:1
@ 2062 train 5.0599 , allloss: 5.0603, dt: 1295.11ms, fracRes: 0.7016, norm(attn): 0.1855, norm(output): 0.9335, norm(x): 0.7624, norm(y): 1.0120, norm:0.9677, tok/sec: 101205.62, flops:106.23, batch-reuse:1
@ 2063 train 5.1530 , allloss: 5.1534, dt: 1288.07ms, fracRes: 0.7016, norm(attn): 0.1855, norm(output): 0.9335, norm(x): 0.7622, norm(y): 1.0124, norm:1.0204, tok/sec: 101758.67, flops:106.81, batch-reuse:1
@ 2064 train 5.0589 , allloss: 5.0594, dt: 1317.52ms, fracRes: 0.7017, norm(attn): 0.1865, norm(output): 0.9336, norm(x): 0.7629, norm(y): 1.0124, norm:0.9992, tok/sec: 99483.92, flops:104.42, batch-reuse:1
@ 2065 train 5.7793 , allloss: 5.7795, dt: 1293.89ms, fracRes: 0.7018, norm(attn): 0.1875, norm(output): 0.9337, norm(x): 0.7622, norm(y): 1.0118, norm:1.6169, tok/sec: 101301.01, flops:106.33, batch-reuse:1
@ 2066 train 5.1704 , allloss: 5.1714, dt: 1320.05ms, fracRes: 0.7021, norm(attn): 0.1875, norm(output): 0.9337, norm(x): 0.7621, norm(y): 1.0114, norm:1.2506, tok/sec: 99292.90, flops:104.22, batch-reuse:1
@ 2067 train 5.1040 , allloss: 5.1044, dt: 1312.21ms, fracRes: 0.7020, norm(attn): 0.1875, norm(output): 0.9336, norm(x): 0.7616, norm(y): 1.0120, norm:0.8818, tok/sec: 99886.32, flops:104.84, batch-reuse:1
@ 2068 train 5.1913 , allloss: 5.1916, dt: 1309.63ms, fracRes: 0.7018, norm(attn): 0.1885, norm(output): 0.9335, norm(x): 0.7618, norm(y): 1.0127, norm:1.0948, tok/sec: 100083.25, flops:105.05, batch-reuse:1
@ 2069 train 5.1985 , allloss: 5.1987, dt: 1287.60ms, fracRes: 0.7022, norm(attn): 0.1865, norm(output): 0.9334, norm(x): 0.7613, norm(y): 1.0125, norm:1.0027, tok/sec: 101795.25, flops:106.85, batch-reuse:1
@ 2070 train 5.2676 , allloss: 5.2698, dt: 1288.95ms, fracRes: 0.7022, norm(attn): 0.1855, norm(output): 0.9335, norm(x): 0.7614, norm(y): 1.0123, norm:0.9311, tok/sec: 101688.64, flops:106.74, batch-reuse:1
@ 2071 train 5.1537 , allloss: 5.1540, dt: 1303.13ms, fracRes: 0.7022, norm(attn): 0.1846, norm(output): 0.9336, norm(x): 0.7616, norm(y): 1.0123, norm:0.9730, tok/sec: 100582.71, flops:105.57, batch-reuse:1
@ 2072 train 5.1308 , allloss: 5.1310, dt: 1311.61ms, fracRes: 0.7023, norm(attn): 0.1846, norm(output): 0.9336, norm(x): 0.7620, norm(y): 1.0120, norm:0.8842, tok/sec: 99932.31, flops:104.89, batch-reuse:1
@ 2073 train 5.0912 , allloss: 5.0913, dt: 1303.67ms, fracRes: 0.7020, norm(attn): 0.1846, norm(output): 0.9336, norm(x): 0.7625, norm(y): 1.0122, norm:0.7584, tok/sec: 100540.58, flops:105.53, batch-reuse:1
@ 2074 train 5.1364 , allloss: 5.1365, dt: 1330.75ms, fracRes: 0.7018, norm(attn): 0.1875, norm(output): 0.9335, norm(x): 0.7627, norm(y): 1.0125, norm:0.8427, tok/sec: 98495.17, flops:103.38, batch-reuse:1
@ 2075 train 5.0715 , allloss: 5.0716, dt: 1284.19ms, fracRes: 0.7020, norm(attn): 0.1875, norm(output): 0.9336, norm(x): 0.7622, norm(y): 1.0121, norm:0.8044, tok/sec: 102065.71, flops:107.13, batch-reuse:1
@ 2076 train 5.0457 , allloss: 5.0459, dt: 1312.57ms, fracRes: 0.7021, norm(attn): 0.1885, norm(output): 0.9336, norm(x): 0.7623, norm(y): 1.0118, norm:0.7778, tok/sec: 99859.17, flops:104.82, batch-reuse:1
@ 2077 train 5.1088 , allloss: 5.1088, dt: 1324.61ms, fracRes: 0.7020, norm(attn): 0.1885, norm(output): 0.9336, norm(x): 0.7623, norm(y): 1.0118, norm:0.8313, tok/sec: 98951.09, flops:103.86, batch-reuse:1
@ 2078 train 5.2844 , allloss: 5.2846, dt: 1300.77ms, fracRes: 0.7019, norm(attn): 0.1865, norm(output): 0.9336, norm(x): 0.7616, norm(y): 1.0122, norm:0.9356, tok/sec: 100764.71, flops:105.77, batch-reuse:1
@ 2079 train 5.1884 , allloss: 5.1886, dt: 1299.39ms, fracRes: 0.7015, norm(attn): 0.1855, norm(output): 0.9336, norm(x): 0.7625, norm(y): 1.0126, norm:1.5014, tok/sec: 100871.68, flops:105.88, batch-reuse:1
@ 2080 train 5.1856 , allloss: 5.1865, dt: 1300.61ms, fracRes: 0.7016, norm(attn): 0.1855, norm(output): 0.9333, norm(x): 0.7620, norm(y): 1.0124, norm:0.8901, tok/sec: 100777.21, flops:105.78, batch-reuse:1
@ 2081 train 5.1822 , allloss: 5.1826, dt: 1302.38ms, fracRes: 0.7017, norm(attn): 0.1875, norm(output): 0.9334, norm(x): 0.7606, norm(y): 1.0124, norm:0.9270, tok/sec: 100640.73, flops:105.64, batch-reuse:1
@ 2082 train 5.1122 , allloss: 5.1124, dt: 1304.28ms, fracRes: 0.7016, norm(attn): 0.1885, norm(output): 0.9335, norm(x): 0.7605, norm(y): 1.0125, norm:0.9036, tok/sec: 100493.63, flops:105.48, batch-reuse:1
@ 2083 train 5.0825 , allloss: 5.0827, dt: 1283.02ms, fracRes: 0.7017, norm(attn): 0.1875, norm(output): 0.9334, norm(x): 0.7607, norm(y): 1.0127, norm:0.9442, tok/sec: 102158.59, flops:107.23, batch-reuse:1
@ 2084 train 5.2073 , allloss: 5.2075, dt: 1295.90ms, fracRes: 0.7019, norm(attn): 0.1846, norm(output): 0.9336, norm(x): 0.7606, norm(y): 1.0124, norm:0.9373, tok/sec: 101143.38, flops:106.16, batch-reuse:1
@ 2085 train 5.1698 , allloss: 5.1699, dt: 1314.48ms, fracRes: 0.7023, norm(attn): 0.1855, norm(output): 0.9335, norm(x): 0.7607, norm(y): 1.0120, norm:0.8998, tok/sec: 99713.84, flops:104.66, batch-reuse:1
@ 2086 train 5.0400 , allloss: 5.0402, dt: 1308.68ms, fracRes: 0.7023, norm(attn): 0.1855, norm(output): 0.9336, norm(x): 0.7616, norm(y): 1.0119, norm:0.8193, tok/sec: 100155.60, flops:105.13, batch-reuse:1
@ 2087 train 5.0652 , allloss: 5.0659, dt: 1303.28ms, fracRes: 0.7022, norm(attn): 0.1855, norm(output): 0.9337, norm(x): 0.7623, norm(y): 1.0120, norm:0.8141, tok/sec: 100570.62, flops:105.56, batch-reuse:1
@ 2088 train 5.1559 , allloss: 5.1561, dt: 1276.55ms, fracRes: 0.7024, norm(attn): 0.1855, norm(output): 0.9335, norm(x): 0.7617, norm(y): 1.0120, norm:0.9706, tok/sec: 102676.97, flops:107.77, batch-reuse:1
@ 2089 train 5.0813 , allloss: 5.0816, dt: 1305.49ms, fracRes: 0.7021, norm(attn): 0.1836, norm(output): 0.9335, norm(x): 0.7610, norm(y): 1.0121, norm:0.9994, tok/sec: 100400.36, flops:105.38, batch-reuse:1
@ 2090 train 5.1041 , allloss: 5.1042, dt: 1334.81ms, fracRes: 0.7020, norm(attn): 0.1855, norm(output): 0.9335, norm(x): 0.7604, norm(y): 1.0121, norm:0.9666, tok/sec: 98195.62, flops:103.07, batch-reuse:1
@ 2091 train 5.0908 , allloss: 5.0909, dt: 1283.59ms, fracRes: 0.7019, norm(attn): 0.1846, norm(output): 0.9336, norm(x): 0.7616, norm(y): 1.0123, norm:0.8234, tok/sec: 102113.50, flops:107.18, batch-reuse:1
@ 2092 train 5.1263 , allloss: 5.1264, dt: 1313.43ms, fracRes: 0.7019, norm(attn): 0.1865, norm(output): 0.9336, norm(x): 0.7622, norm(y): 1.0125, norm:1.0700, tok/sec: 99793.77, flops:104.75, batch-reuse:1
@ 2093 train 5.0489 , allloss: 5.0490, dt: 1322.27ms, fracRes: 0.7020, norm(attn): 0.1865, norm(output): 0.9337, norm(x): 0.7621, norm(y): 1.0122, norm:0.8891, tok/sec: 99126.17, flops:104.05, batch-reuse:1
@ 2094 train 5.0781 , allloss: 5.0785, dt: 1287.58ms, fracRes: 0.7021, norm(attn): 0.1865, norm(output): 0.9336, norm(x): 0.7612, norm(y): 1.0121, norm:0.8243, tok/sec: 101797.15, flops:106.85, batch-reuse:1
@ 2095 train 4.9849 , allloss: 4.9850, dt: 1311.65ms, fracRes: 0.7018, norm(attn): 0.1875, norm(output): 0.9336, norm(x): 0.7609, norm(y): 1.0123, norm:0.9785, tok/sec: 99928.80, flops:104.89, batch-reuse:1
@ 2096 train 5.1552 , allloss: 5.1553, dt: 1329.87ms, fracRes: 0.7017, norm(attn): 0.1875, norm(output): 0.9336, norm(x): 0.7603, norm(y): 1.0125, norm:0.7278, tok/sec: 98559.89, flops:103.45, batch-reuse:1
@ 2097 train 5.0269 , allloss: 5.0270, dt: 1298.32ms, fracRes: 0.7016, norm(attn): 0.1875, norm(output): 0.9335, norm(x): 0.7610, norm(y): 1.0125, norm:0.6966, tok/sec: 100954.72, flops:105.97, batch-reuse:1
@ 2098 train 4.9804 , allloss: 4.9805, dt: 1292.97ms, fracRes: 0.7017, norm(attn): 0.1875, norm(output): 0.9337, norm(x): 0.7623, norm(y): 1.0121, norm:0.8028, tok/sec: 101372.83, flops:106.40, batch-reuse:1
@ 2099 train 5.0750 , allloss: 5.0752, dt: 1301.18ms, fracRes: 0.7018, norm(attn): 0.1875, norm(output): 0.9337, norm(x): 0.7625, norm(y): 1.0120, norm:0.7500, tok/sec: 100733.23, flops:105.73, batch-reuse:1
@ 2100 train 5.0674 , allloss: 5.0681, dt: 1307.11ms, fracRes: 0.7018, norm(attn): 0.1846, norm(output): 0.9336, norm(x): 0.7619, norm(y): 1.0121, norm:0.8157, tok/sec: 100276.40, flops:105.25, batch-reuse:1
@ 2101 train 4.9940 , allloss: 4.9946, dt: 1303.44ms, fracRes: 0.7019, norm(attn): 0.1865, norm(output): 0.9337, norm(x): 0.7617, norm(y): 1.0121, norm:0.7426, tok/sec: 100558.44, flops:105.55, batch-reuse:1
@ 2102 train 5.0557 , allloss: 5.0562, dt: 1290.37ms, fracRes: 0.7019, norm(attn): 0.1875, norm(output): 0.9335, norm(x): 0.7613, norm(y): 1.0122, norm:1.0048, tok/sec: 101577.20, flops:106.62, batch-reuse:1
@ 2103 train 5.0044 , allloss: 5.0044, dt: 1284.99ms, fracRes: 0.7020, norm(attn): 0.1885, norm(output): 0.9336, norm(x): 0.7605, norm(y): 1.0121, norm:0.8814, tok/sec: 102002.16, flops:107.06, batch-reuse:1
@ 2104 train 5.0394 , allloss: 5.0395, dt: 1290.25ms, fracRes: 0.7021, norm(attn): 0.1875, norm(output): 0.9336, norm(x): 0.7604, norm(y): 1.0121, norm:0.7555, tok/sec: 101586.40, flops:106.63, batch-reuse:1
@ 2105 train 5.1093 , allloss: 5.1093, dt: 1303.18ms, fracRes: 0.7023, norm(attn): 0.1875, norm(output): 0.9337, norm(x): 0.7609, norm(y): 1.0119, norm:0.8105, tok/sec: 100578.66, flops:105.57, batch-reuse:1
@ 2106 train 5.0329 , allloss: 5.0331, dt: 1311.46ms, fracRes: 0.7022, norm(attn): 0.1875, norm(output): 0.9337, norm(x): 0.7614, norm(y): 1.0120, norm:0.7448, tok/sec: 99943.77, flops:104.90, batch-reuse:1
@ 2107 train 5.0566 , allloss: 5.0567, dt: 1303.56ms, fracRes: 0.7018, norm(attn): 0.1865, norm(output): 0.9337, norm(x): 0.7611, norm(y): 1.0124, norm:0.9246, tok/sec: 100549.12, flops:105.54, batch-reuse:1
@ 2108 train 5.1864 , allloss: 5.1865, dt: 1325.07ms, fracRes: 0.7020, norm(attn): 0.1875, norm(output): 0.9337, norm(x): 0.7603, norm(y): 1.0122, norm:0.8560, tok/sec: 98917.31, flops:103.83, batch-reuse:1
@ 2109 train 5.0992 , allloss: 5.0992, dt: 1316.30ms, fracRes: 0.7020, norm(attn): 0.1914, norm(output): 0.9336, norm(x): 0.7604, norm(y): 1.0119, norm:0.8892, tok/sec: 99576.45, flops:104.52, batch-reuse:1
@ 2110 train 5.0135 , allloss: 5.0136, dt: 1319.37ms, fracRes: 0.7020, norm(attn): 0.1885, norm(output): 0.9337, norm(x): 0.7606, norm(y): 1.0118, norm:0.7784, tok/sec: 99344.69, flops:104.28, batch-reuse:1
@ 2111 train 4.9848 , allloss: 4.9849, dt: 1339.71ms, fracRes: 0.7022, norm(attn): 0.1875, norm(output): 0.9336, norm(x): 0.7604, norm(y): 1.0119, norm:0.8168, tok/sec: 97836.03, flops:102.69, batch-reuse:1
@ 2112 train 5.0294 , allloss: 5.0294, dt: 1299.98ms, fracRes: 0.7020, norm(attn): 0.1875, norm(output): 0.9336, norm(x): 0.7600, norm(y): 1.0123, norm:0.8766, tok/sec: 100826.45, flops:105.83, batch-reuse:1
@ 2113 train 5.0318 , allloss: 5.0319, dt: 1330.29ms, fracRes: 0.7021, norm(attn): 0.1875, norm(output): 0.9336, norm(x): 0.7598, norm(y): 1.0119, norm:0.9137, tok/sec: 98529.17, flops:103.42, batch-reuse:1
@ 2114 train 5.0830 , allloss: 5.0831, dt: 1329.07ms, fracRes: 0.7020, norm(attn): 0.1865, norm(output): 0.9337, norm(x): 0.7610, norm(y): 1.0118, norm:0.8942, tok/sec: 98619.03, flops:103.51, batch-reuse:1
@ 2115 train 5.0641 , allloss: 5.0642, dt: 1336.75ms, fracRes: 0.7019, norm(attn): 0.1875, norm(output): 0.9337, norm(x): 0.7610, norm(y): 1.0120, norm:0.8937, tok/sec: 98052.60, flops:102.92, batch-reuse:1
@ 2116 train 5.0860 , allloss: 5.0861, dt: 1325.69ms, fracRes: 0.7019, norm(attn): 0.1875, norm(output): 0.9336, norm(x): 0.7600, norm(y): 1.0122, norm:0.8682, tok/sec: 98870.70, flops:103.78, batch-reuse:1
@ 2117 train 5.0223 , allloss: 5.0224, dt: 1332.72ms, fracRes: 0.7019, norm(attn): 0.1895, norm(output): 0.9335, norm(x): 0.7598, norm(y): 1.0123, norm:0.7475, tok/sec: 98349.08, flops:103.23, batch-reuse:1
@ 2118 train 5.0307 , allloss: 5.0309, dt: 1297.14ms, fracRes: 0.7021, norm(attn): 0.1885, norm(output): 0.9335, norm(x): 0.7600, norm(y): 1.0120, norm:0.9573, tok/sec: 101046.59, flops:106.06, batch-reuse:1
@ 2119 train 5.1001 , allloss: 5.1002, dt: 1289.87ms, fracRes: 0.7023, norm(attn): 0.1895, norm(output): 0.9337, norm(x): 0.7605, norm(y): 1.0117, norm:0.7529, tok/sec: 101616.31, flops:106.66, batch-reuse:1
@ 2120 train 5.0252 , allloss: 5.0252, dt: 1274.50ms, fracRes: 0.7021, norm(attn): 0.1895, norm(output): 0.9337, norm(x): 0.7603, norm(y): 1.0121, norm:0.7336, tok/sec: 102841.70, flops:107.95, batch-reuse:1
@ 2121 train 5.1339 , allloss: 5.3545, dt: 1307.29ms, fracRes: 0.7020, norm(attn): 0.1885, norm(output): 0.9337, norm(x): 0.7600, norm(y): 1.0121, norm:1.0215, tok/sec: 100262.55, flops:105.24, batch-reuse:1
@ 2122 train 5.0191 , allloss: 5.0192, dt: 1334.92ms, fracRes: 0.7017, norm(attn): 0.1885, norm(output): 0.9336, norm(x): 0.7606, norm(y): 1.0123, norm:0.8949, tok/sec: 98187.27, flops:103.06, batch-reuse:1
@ 2123 train 5.0768 , allloss: 5.0769, dt: 1306.27ms, fracRes: 0.7019, norm(attn): 0.1865, norm(output): 0.9337, norm(x): 0.7614, norm(y): 1.0120, norm:0.8713, tok/sec: 100340.87, flops:105.32, batch-reuse:1
@ 2124 train 5.0046 , allloss: 5.0046, dt: 1310.74ms, fracRes: 0.7020, norm(attn): 0.1865, norm(output): 0.9336, norm(x): 0.7611, norm(y): 1.0119, norm:0.8807, tok/sec: 99998.73, flops:104.96, batch-reuse:1
@ 2125 train 5.0732 , allloss: 5.0733, dt: 1330.20ms, fracRes: 0.7020, norm(attn): 0.1865, norm(output): 0.9336, norm(x): 0.7607, norm(y): 1.0120, norm:0.8224, tok/sec: 98535.74, flops:103.43, batch-reuse:1
@ 2126 train 5.0220 , allloss: 5.0221, dt: 1287.36ms, fracRes: 0.7016, norm(attn): 0.1865, norm(output): 0.9337, norm(x): 0.7612, norm(y): 1.0123, norm:0.8579, tok/sec: 101814.38, flops:106.87, batch-reuse:1
@ 2127 train 5.0571 , allloss: 5.0572, dt: 1296.08ms, fracRes: 0.7017, norm(attn): 0.1875, norm(output): 0.9337, norm(x): 0.7603, norm(y): 1.0121, norm:0.8893, tok/sec: 101129.22, flops:106.15, batch-reuse:1
@ 2128 train 4.9670 , allloss: 4.9672, dt: 1308.53ms, fracRes: 0.7018, norm(attn): 0.1885, norm(output): 0.9336, norm(x): 0.7605, norm(y): 1.0122, norm:0.8356, tok/sec: 100167.34, flops:105.14, batch-reuse:1
@ 2129 train 5.0084 , allloss: 5.0084, dt: 1300.12ms, fracRes: 0.7020, norm(attn): 0.1875, norm(output): 0.9337, norm(x): 0.7609, norm(y): 1.0120, norm:0.8412, tok/sec: 100815.61, flops:105.82, batch-reuse:1
@ 2130 train 4.9603 , allloss: 4.9604, dt: 1297.86ms, fracRes: 0.7022, norm(attn): 0.1865, norm(output): 0.9336, norm(x): 0.7607, norm(y): 1.0119, norm:0.8951, tok/sec: 100990.63, flops:106.00, batch-reuse:1
@ 2131 train 5.0645 , allloss: 5.0646, dt: 1303.79ms, fracRes: 0.7024, norm(attn): 0.1846, norm(output): 0.9337, norm(x): 0.7605, norm(y): 1.0116, norm:0.8361, tok/sec: 100531.69, flops:105.52, batch-reuse:1
@ 2132 train 5.1272 , allloss: 5.1272, dt: 1307.94ms, fracRes: 0.7025, norm(attn): 0.1875, norm(output): 0.9337, norm(x): 0.7600, norm(y): 1.0115, norm:0.7734, tok/sec: 100212.18, flops:105.19, batch-reuse:1
@ 2133 train 5.0573 , allloss: 5.0574, dt: 1303.56ms, fracRes: 0.7021, norm(attn): 0.1885, norm(output): 0.9337, norm(x): 0.7596, norm(y): 1.0120, norm:0.9710, tok/sec: 100549.26, flops:105.54, batch-reuse:1
@ 2134 train 4.9988 , allloss: 4.9991, dt: 1298.46ms, fracRes: 0.7019, norm(attn): 0.1904, norm(output): 0.9336, norm(x): 0.7595, norm(y): 1.0121, norm:1.0454, tok/sec: 100944.19, flops:105.95, batch-reuse:1
@ 2135 train 5.0628 , allloss: 5.0629, dt: 1306.97ms, fracRes: 0.7020, norm(attn): 0.1885, norm(output): 0.9336, norm(x): 0.7584, norm(y): 1.0119, norm:0.9149, tok/sec: 100286.68, flops:105.26, batch-reuse:1
@ 2136 train 4.9718 , allloss: 4.9719, dt: 1327.94ms, fracRes: 0.7022, norm(attn): 0.1875, norm(output): 0.9335, norm(x): 0.7579, norm(y): 1.0119, norm:0.8780, tok/sec: 98702.94, flops:103.60, batch-reuse:1
@ 2137 train 4.9497 , allloss: 4.9522, dt: 1307.18ms, fracRes: 0.7021, norm(attn): 0.1875, norm(output): 0.9336, norm(x): 0.7587, norm(y): 1.0120, norm:0.8802, tok/sec: 100270.73, flops:105.25, batch-reuse:1
@ 2138 train 4.9825 , allloss: 4.9861, dt: 1308.34ms, fracRes: 0.7020, norm(attn): 0.1875, norm(output): 0.9336, norm(x): 0.7602, norm(y): 1.0119, norm:0.9093, tok/sec: 100181.74, flops:105.15, batch-reuse:1
@ 2139 train 5.0532 , allloss: 5.0537, dt: 1343.34ms, fracRes: 0.7022, norm(attn): 0.1885, norm(output): 0.9336, norm(x): 0.7605, norm(y): 1.0116, norm:1.0035, tok/sec: 97571.96, flops:102.41, batch-reuse:1
@ 2140 train 5.0298 , allloss: 5.0300, dt: 1316.24ms, fracRes: 0.7020, norm(attn): 0.1885, norm(output): 0.9336, norm(x): 0.7614, norm(y): 1.0121, norm:1.0643, tok/sec: 99580.92, flops:104.52, batch-reuse:1
@ 2141 train 4.9919 , allloss: 4.9921, dt: 1300.34ms, fracRes: 0.7019, norm(attn): 0.1895, norm(output): 0.9336, norm(x): 0.7610, norm(y): 1.0124, norm:0.8175, tok/sec: 100798.29, flops:105.80, batch-reuse:1
@ 2142 train 4.9497 , allloss: 4.9499, dt: 1288.24ms, fracRes: 0.7019, norm(attn): 0.1885, norm(output): 0.9336, norm(x): 0.7607, norm(y): 1.0121, norm:0.8856, tok/sec: 101745.02, flops:106.79, batch-reuse:1
@ 2143 train 5.0874 , allloss: 5.0875, dt: 1282.78ms, fracRes: 0.7022, norm(attn): 0.1914, norm(output): 0.9337, norm(x): 0.7604, norm(y): 1.0117, norm:1.5541, tok/sec: 102177.88, flops:107.25, batch-reuse:1
@ 2144 train 4.9947 , allloss: 4.9948, dt: 1303.86ms, fracRes: 0.7022, norm(attn): 0.1992, norm(output): 0.9337, norm(x): 0.7601, norm(y): 1.0116, norm:0.7983, tok/sec: 100526.02, flops:105.52, batch-reuse:1
@ 2145 train 5.0359 , allloss: 5.0362, dt: 1331.87ms, fracRes: 0.7023, norm(attn): 0.1973, norm(output): 0.9336, norm(x): 0.7597, norm(y): 1.0118, norm:0.8769, tok/sec: 98412.02, flops:103.30, batch-reuse:1
@ 2146 train 5.3823 , allloss: 5.3825, dt: 1328.90ms, fracRes: 0.7025, norm(attn): 0.1904, norm(output): 0.9337, norm(x): 0.7595, norm(y): 1.0120, norm:0.9664, tok/sec: 98632.12, flops:103.53, batch-reuse:1
@ 2147 train 4.9577 , allloss: 4.9581, dt: 1330.97ms, fracRes: 0.7023, norm(attn): 0.1904, norm(output): 0.9337, norm(x): 0.7594, norm(y): 1.0123, norm:1.3184, tok/sec: 98478.62, flops:103.37, batch-reuse:1
@ 2148 train 4.9830 , allloss: 4.9836, dt: 1330.78ms, fracRes: 0.7025, norm(attn): 0.1904, norm(output): 0.9337, norm(x): 0.7598, norm(y): 1.0122, norm:1.0309, tok/sec: 98492.63, flops:103.38, batch-reuse:1
@ 2149 train 4.9809 , allloss: 4.9812, dt: 1291.31ms, fracRes: 0.7027, norm(attn): 0.1924, norm(output): 0.9337, norm(x): 0.7602, norm(y): 1.0117, norm:0.9756, tok/sec: 101503.12, flops:106.54, batch-reuse:1
@ 2150 train 4.9930 , allloss: 4.9933, dt: 1304.28ms, fracRes: 0.7028, norm(attn): 0.1924, norm(output): 0.9336, norm(x): 0.7599, norm(y): 1.0113, norm:0.8689, tok/sec: 100493.39, flops:105.48, batch-reuse:1
@ 2151 train 4.9471 , allloss: 4.9474, dt: 1301.32ms, fracRes: 0.7025, norm(attn): 0.1934, norm(output): 0.9336, norm(x): 0.7597, norm(y): 1.0118, norm:0.8968, tok/sec: 100722.69, flops:105.72, batch-reuse:1
@ 2152 train 5.0044 , allloss: 5.0046, dt: 1291.11ms, fracRes: 0.7021, norm(attn): 0.1934, norm(output): 0.9336, norm(x): 0.7595, norm(y): 1.0122, norm:0.8241, tok/sec: 101518.94, flops:106.56, batch-reuse:1
@ 2153 train 4.9849 , allloss: 4.9850, dt: 1315.93ms, fracRes: 0.7020, norm(attn): 0.1914, norm(output): 0.9336, norm(x): 0.7595, norm(y): 1.0123, norm:0.9243, tok/sec: 99604.20, flops:104.55, batch-reuse:1
@ 2154 train 5.0199 , allloss: 5.0202, dt: 1307.75ms, fracRes: 0.7020, norm(attn): 0.1924, norm(output): 0.9336, norm(x): 0.7595, norm(y): 1.0121, norm:0.8255, tok/sec: 100226.91, flops:105.20, batch-reuse:1
@ 2155 train 4.9976 , allloss: 4.9979, dt: 1340.27ms, fracRes: 0.7020, norm(attn): 0.1904, norm(output): 0.9336, norm(x): 0.7604, norm(y): 1.0120, norm:0.7919, tok/sec: 97795.11, flops:102.65, batch-reuse:1
@ 2156 train 4.9708 , allloss: 4.9708, dt: 1277.17ms, fracRes: 0.7020, norm(attn): 0.1914, norm(output): 0.9336, norm(x): 0.7608, norm(y): 1.0118, norm:0.8277, tok/sec: 102627.23, flops:107.72, batch-reuse:1
@ 2157 train 5.0553 , allloss: 5.0554, dt: 1294.88ms, fracRes: 0.7021, norm(attn): 0.1914, norm(output): 0.9336, norm(x): 0.7604, norm(y): 1.0116, norm:0.7424, tok/sec: 101223.10, flops:106.25, batch-reuse:1
@ 2158 train 5.0224 , allloss: 5.0225, dt: 1281.93ms, fracRes: 0.7020, norm(attn): 0.1904, norm(output): 0.9335, norm(x): 0.7596, norm(y): 1.0120, norm:0.8252, tok/sec: 102246.22, flops:107.32, batch-reuse:1
@ 2159 train 4.9483 , allloss: 4.9484, dt: 1324.24ms, fracRes: 0.7019, norm(attn): 0.1875, norm(output): 0.9335, norm(x): 0.7590, norm(y): 1.0123, norm:0.9069, tok/sec: 98978.72, flops:103.89, batch-reuse:1
@ 2160 train 5.0063 , allloss: 5.0064, dt: 1310.52ms, fracRes: 0.7020, norm(attn): 0.1865, norm(output): 0.9335, norm(x): 0.7589, norm(y): 1.0121, norm:0.9517, tok/sec: 100015.61, flops:104.98, batch-reuse:1
@ 2161 train 5.0110 , allloss: 5.0111, dt: 1291.96ms, fracRes: 0.7022, norm(attn): 0.1885, norm(output): 0.9334, norm(x): 0.7590, norm(y): 1.0120, norm:0.9543, tok/sec: 101452.21, flops:106.49, batch-reuse:1
@ 2162 train 4.9178 , allloss: 4.9180, dt: 1291.51ms, fracRes: 0.7022, norm(attn): 0.1875, norm(output): 0.9336, norm(x): 0.7597, norm(y): 1.0115, norm:0.8067, tok/sec: 101487.08, flops:106.52, batch-reuse:1
@ 2163 train 5.0182 , allloss: 5.0185, dt: 1297.07ms, fracRes: 0.7025, norm(attn): 0.1895, norm(output): 0.9336, norm(x): 0.7591, norm(y): 1.0113, norm:0.7293, tok/sec: 101052.74, flops:106.07, batch-reuse:1
@ 2164 train 4.8853 , allloss: 4.8854, dt: 1309.54ms, fracRes: 0.7023, norm(attn): 0.1914, norm(output): 0.9335, norm(x): 0.7584, norm(y): 1.0114, norm:0.7907, tok/sec: 100089.94, flops:105.06, batch-reuse:1
@ 2165 train 4.8699 , allloss: 4.8700, dt: 1304.13ms, fracRes: 0.7020, norm(attn): 0.1885, norm(output): 0.9335, norm(x): 0.7588, norm(y): 1.0118, norm:0.7752, tok/sec: 100505.66, flops:105.49, batch-reuse:1
@ 2166 train 4.9645 , allloss: 4.9647, dt: 1292.21ms, fracRes: 0.7018, norm(attn): 0.1885, norm(output): 0.9335, norm(x): 0.7590, norm(y): 1.0121, norm:0.8379, tok/sec: 101432.25, flops:106.47, batch-reuse:1
@ 2167 train 4.9939 , allloss: 4.9943, dt: 1317.19ms, fracRes: 0.7020, norm(attn): 0.1875, norm(output): 0.9336, norm(x): 0.7586, norm(y): 1.0119, norm:0.8635, tok/sec: 99508.90, flops:104.45, batch-reuse:1
@ 2168 train 4.9836 , allloss: 4.9838, dt: 1272.88ms, fracRes: 0.7021, norm(attn): 0.1875, norm(output): 0.9336, norm(x): 0.7590, norm(y): 1.0117, norm:0.7285, tok/sec: 102972.95, flops:108.08, batch-reuse:1
@ 2169 train 4.9967 , allloss: 4.9970, dt: 1286.34ms, fracRes: 0.7021, norm(attn): 0.1885, norm(output): 0.9336, norm(x): 0.7595, norm(y): 1.0117, norm:0.7169, tok/sec: 101895.00, flops:106.95, batch-reuse:1
@ 2170 train 4.9878 , allloss: 4.9897, dt: 1291.92ms, fracRes: 0.7022, norm(attn): 0.1885, norm(output): 0.9336, norm(x): 0.7597, norm(y): 1.0117, norm:0.8290, tok/sec: 101455.43, flops:106.49, batch-reuse:1
@ 2171 train 5.0114 , allloss: 5.0115, dt: 1295.65ms, fracRes: 0.7023, norm(attn): 0.1875, norm(output): 0.9336, norm(x): 0.7597, norm(y): 1.0115, norm:0.8059, tok/sec: 101163.09, flops:106.18, batch-reuse:1
@ 2172 train 5.0273 , allloss: 5.0279, dt: 1308.20ms, fracRes: 0.7022, norm(attn): 0.1865, norm(output): 0.9336, norm(x): 0.7589, norm(y): 1.0117, norm:0.8706, tok/sec: 100192.46, flops:105.17, batch-reuse:1
@ 2173 train 4.9418 , allloss: 4.9421, dt: 1342.99ms, fracRes: 0.7022, norm(attn): 0.1875, norm(output): 0.9336, norm(x): 0.7587, norm(y): 1.0119, norm:0.8262, tok/sec: 97597.49, flops:102.44, batch-reuse:1
@ 2174 train 5.0079 , allloss: 5.0119, dt: 1339.22ms, fracRes: 0.7021, norm(attn): 0.1885, norm(output): 0.9336, norm(x): 0.7593, norm(y): 1.0121, norm:0.7299, tok/sec: 97871.54, flops:102.73, batch-reuse:1
@ 2175 train 4.9435 , allloss: 4.9436, dt: 1338.99ms, fracRes: 0.7020, norm(attn): 0.1895, norm(output): 0.9335, norm(x): 0.7594, norm(y): 1.0120, norm:0.7111, tok/sec: 97889.01, flops:102.75, batch-reuse:1
@ 2176 train 4.9363 , allloss: 4.9365, dt: 1336.99ms, fracRes: 0.7020, norm(attn): 0.1904, norm(output): 0.9335, norm(x): 0.7591, norm(y): 1.0119, norm:0.6689, tok/sec: 98035.11, flops:102.90, batch-reuse:1
@ 2177 train 4.9411 , allloss: 4.9413, dt: 1346.95ms, fracRes: 0.7021, norm(attn): 0.1895, norm(output): 0.9335, norm(x): 0.7587, norm(y): 1.0121, norm:0.7448, tok/sec: 97310.13, flops:102.14, batch-reuse:1
@ 2178 train 4.9924 , allloss: 4.9925, dt: 1309.59ms, fracRes: 0.7021, norm(attn): 0.1895, norm(output): 0.9335, norm(x): 0.7588, norm(y): 1.0121, norm:0.6759, tok/sec: 100086.42, flops:105.05, batch-reuse:1
@ 2179 train 4.9937 , allloss: 4.9939, dt: 1290.23ms, fracRes: 0.7020, norm(attn): 0.1895, norm(output): 0.9335, norm(x): 0.7588, norm(y): 1.0120, norm:0.7354, tok/sec: 101587.86, flops:106.63, batch-reuse:1
@ 2180 train 4.8941 , allloss: 4.8942, dt: 1297.12ms, fracRes: 0.7018, norm(attn): 0.1885, norm(output): 0.9334, norm(x): 0.7586, norm(y): 1.0121, norm:0.7304, tok/sec: 101048.58, flops:106.06, batch-reuse:1
@ 2181 train 4.9269 , allloss: 4.9269, dt: 1282.00ms, fracRes: 0.7016, norm(attn): 0.1885, norm(output): 0.9335, norm(x): 0.7586, norm(y): 1.0122, norm:0.9100, tok/sec: 102239.88, flops:107.31, batch-reuse:1
@ 2182 train 5.0009 , allloss: 5.0012, dt: 1296.16ms, fracRes: 0.7019, norm(attn): 0.1875, norm(output): 0.9335, norm(x): 0.7591, norm(y): 1.0120, norm:0.6735, tok/sec: 101123.67, flops:106.14, batch-reuse:1
@ 2183 train 4.8155 , allloss: 4.8156, dt: 1314.61ms, fracRes: 0.7019, norm(attn): 0.1885, norm(output): 0.9335, norm(x): 0.7595, norm(y): 1.0119, norm:0.7897, tok/sec: 99704.00, flops:104.65, batch-reuse:1
@ 2184 train 4.8061 , allloss: 4.8062, dt: 1334.97ms, fracRes: 0.7020, norm(attn): 0.1895, norm(output): 0.9335, norm(x): 0.7590, norm(y): 1.0118, norm:1.0246, tok/sec: 98183.48, flops:103.06, batch-reuse:1
@ 2185 train 4.9596 , allloss: 4.9597, dt: 1309.95ms, fracRes: 0.7022, norm(attn): 0.1885, norm(output): 0.9334, norm(x): 0.7582, norm(y): 1.0117, norm:0.9043, tok/sec: 100058.57, flops:105.02, batch-reuse:1
@ 2186 train 4.8635 , allloss: 4.8636, dt: 1309.54ms, fracRes: 0.7021, norm(attn): 0.1875, norm(output): 0.9334, norm(x): 0.7582, norm(y): 1.0117, norm:1.0190, tok/sec: 100090.05, flops:105.06, batch-reuse:1
@ 2187 train 4.8507 , allloss: 4.8507, dt: 1287.46ms, fracRes: 0.7022, norm(attn): 0.1895, norm(output): 0.9335, norm(x): 0.7588, norm(y): 1.0117, norm:0.8611, tok/sec: 101806.61, flops:106.86, batch-reuse:1
@ 2188 train 4.8160 , allloss: 4.8160, dt: 1303.78ms, fracRes: 0.7022, norm(attn): 0.1904, norm(output): 0.9335, norm(x): 0.7584, norm(y): 1.0117, norm:0.8613, tok/sec: 100532.00, flops:105.52, batch-reuse:1
@ 2189 train 4.8813 , allloss: 4.8815, dt: 1281.55ms, fracRes: 0.7024, norm(attn): 0.1885, norm(output): 0.9336, norm(x): 0.7582, norm(y): 1.0113, norm:0.8728, tok/sec: 102276.31, flops:107.35, batch-reuse:1
@ 2190 train 4.7806 , allloss: 4.7807, dt: 1292.81ms, fracRes: 0.7024, norm(attn): 0.1895, norm(output): 0.9335, norm(x): 0.7587, norm(y): 1.0112, norm:0.9024, tok/sec: 101385.45, flops:106.42, batch-reuse:1
@ 2191 train 4.8949 , allloss: 4.8950, dt: 1297.83ms, fracRes: 0.7026, norm(attn): 0.1885, norm(output): 0.9335, norm(x): 0.7583, norm(y): 1.0115, norm:0.7999, tok/sec: 100993.47, flops:106.01, batch-reuse:1
@ 2192 train 4.8628 , allloss: 4.8628, dt: 1311.98ms, fracRes: 0.7025, norm(attn): 0.1885, norm(output): 0.9335, norm(x): 0.7578, norm(y): 1.0115, norm:0.7204, tok/sec: 99904.14, flops:104.86, batch-reuse:1
@ 2193 train 4.8319 , allloss: 4.8320, dt: 1331.83ms, fracRes: 0.7023, norm(attn): 0.1943, norm(output): 0.9335, norm(x): 0.7576, norm(y): 1.0116, norm:0.7494, tok/sec: 98415.00, flops:103.30, batch-reuse:1
@ 2194 train 4.9290 , allloss: 4.9297, dt: 1302.88ms, fracRes: 0.7021, norm(attn): 0.1904, norm(output): 0.9335, norm(x): 0.7576, norm(y): 1.0114, norm:0.6014, tok/sec: 100601.87, flops:105.59, batch-reuse:1
@ 2195 train 4.9451 , allloss: 4.9452, dt: 1327.77ms, fracRes: 0.7019, norm(attn): 0.1895, norm(output): 0.9334, norm(x): 0.7572, norm(y): 1.0117, norm:0.9068, tok/sec: 98716.09, flops:103.62, batch-reuse:1
@ 2196 train 4.9481 , allloss: 4.9482, dt: 1330.43ms, fracRes: 0.7016, norm(attn): 0.1885, norm(output): 0.9334, norm(x): 0.7576, norm(y): 1.0122, norm:0.8504, tok/sec: 98518.70, flops:103.41, batch-reuse:1
@ 2197 train 4.8263 , allloss: 4.8265, dt: 1291.21ms, fracRes: 0.7019, norm(attn): 0.1885, norm(output): 0.9334, norm(x): 0.7582, norm(y): 1.0117, norm:0.9249, tok/sec: 101511.25, flops:106.55, batch-reuse:1
@ 2198 train 4.8983 , allloss: 4.8986, dt: 1299.38ms, fracRes: 0.7024, norm(attn): 0.1875, norm(output): 0.9335, norm(x): 0.7578, norm(y): 1.0111, norm:0.8932, tok/sec: 100872.68, flops:105.88, batch-reuse:1
@ 2199 train 4.9139 , allloss: 4.9140, dt: 1332.44ms, fracRes: 0.7020, norm(attn): 0.1885, norm(output): 0.9336, norm(x): 0.7580, norm(y): 1.0117, norm:0.7363, tok/sec: 98369.58, flops:103.25, batch-reuse:1
@ 2200 train 4.8790 , allloss: 4.8792, dt: 1345.88ms, fracRes: 0.7021, norm(attn): 0.1875, norm(output): 0.9335, norm(x): 0.7584, norm(y): 1.0121, norm:0.8689, tok/sec: 97387.51, flops:102.22, batch-reuse:1
@ 2201 train 4.8873 , allloss: 4.8881, dt: 1331.83ms, fracRes: 0.7023, norm(attn): 0.1875, norm(output): 0.9335, norm(x): 0.7579, norm(y): 1.0116, norm:0.7788, tok/sec: 98415.31, flops:103.30, batch-reuse:1
@ 2202 train 4.9735 , allloss: 4.9736, dt: 1321.03ms, fracRes: 0.7025, norm(attn): 0.1895, norm(output): 0.9336, norm(x): 0.7578, norm(y): 1.0111, norm:0.7393, tok/sec: 99219.73, flops:104.14, batch-reuse:1
@ 2203 train 4.9095 , allloss: 4.9096, dt: 1335.41ms, fracRes: 0.7023, norm(attn): 0.1914, norm(output): 0.9337, norm(x): 0.7584, norm(y): 1.0111, norm:0.8254, tok/sec: 98151.45, flops:103.02, batch-reuse:1
@ 2204 train 4.9112 , allloss: 4.9113, dt: 1324.59ms, fracRes: 0.7021, norm(attn): 0.1934, norm(output): 0.9337, norm(x): 0.7585, norm(y): 1.0116, norm:0.8437, tok/sec: 98953.17, flops:103.86, batch-reuse:1
@ 2205 train 4.9277 , allloss: 4.9278, dt: 1294.76ms, fracRes: 0.7023, norm(attn): 0.1904, norm(output): 0.9336, norm(x): 0.7588, norm(y): 1.0117, norm:1.0396, tok/sec: 101232.38, flops:106.26, batch-reuse:1
@ 2206 train 4.8349 , allloss: 4.8350, dt: 1308.30ms, fracRes: 0.7026, norm(attn): 0.1875, norm(output): 0.9336, norm(x): 0.7583, norm(y): 1.0111, norm:0.9349, tok/sec: 100184.73, flops:105.16, batch-reuse:1
@ 2207 train 4.8408 , allloss: 4.8410, dt: 1292.54ms, fracRes: 0.7022, norm(attn): 0.1895, norm(output): 0.9335, norm(x): 0.7578, norm(y): 1.0116, norm:0.9225, tok/sec: 101406.90, flops:106.44, batch-reuse:1
@ 2208 train 4.9574 , allloss: 4.9575, dt: 1304.78ms, fracRes: 0.7019, norm(attn): 0.1895, norm(output): 0.9334, norm(x): 0.7580, norm(y): 1.0121, norm:1.0220, tok/sec: 100455.54, flops:105.44, batch-reuse:1
@ 2209 train 4.8052 , allloss: 4.8053, dt: 1296.00ms, fracRes: 0.7018, norm(attn): 0.1904, norm(output): 0.9335, norm(x): 0.7578, norm(y): 1.0121, norm:0.9346, tok/sec: 101135.56, flops:106.16, batch-reuse:1
@ 2210 train 4.7547 , allloss: 4.7547, dt: 1281.37ms, fracRes: 0.7021, norm(attn): 0.1904, norm(output): 0.9334, norm(x): 0.7580, norm(y): 1.0118, norm:0.9806, tok/sec: 102290.39, flops:107.37, batch-reuse:1
@ 2211 train 4.8926 , allloss: 4.8927, dt: 1280.86ms, fracRes: 0.7024, norm(attn): 0.1885, norm(output): 0.9336, norm(x): 0.7577, norm(y): 1.0114, norm:0.9205, tok/sec: 102331.44, flops:107.41, batch-reuse:1
@ 2212 train 4.7568 , allloss: 4.7570, dt: 1295.97ms, fracRes: 0.7022, norm(attn): 0.1895, norm(output): 0.9336, norm(x): 0.7584, norm(y): 1.0116, norm:0.8451, tok/sec: 101138.44, flops:106.16, batch-reuse:1
@ 2213 train 5.1528 , allloss: 5.1530, dt: 1311.17ms, fracRes: 0.7025, norm(attn): 0.1914, norm(output): 0.9335, norm(x): 0.7583, norm(y): 1.0117, norm:1.1496, tok/sec: 99965.38, flops:104.93, batch-reuse:1
@ 2214 train 5.0014 , allloss: 5.0058, dt: 1303.20ms, fracRes: 0.7023, norm(attn): 0.1895, norm(output): 0.9335, norm(x): 0.7579, norm(y): 1.0119, norm:1.1795, tok/sec: 100577.34, flops:105.57, batch-reuse:1
@ 2215 train 4.9003 , allloss: 4.9005, dt: 1342.51ms, fracRes: 0.7027, norm(attn): 0.1885, norm(output): 0.9335, norm(x): 0.7567, norm(y): 1.0113, norm:0.8804, tok/sec: 97632.20, flops:102.48, batch-reuse:1
@ 2216 train 4.9547 , allloss: 4.9549, dt: 1320.10ms, fracRes: 0.7028, norm(attn): 0.1914, norm(output): 0.9334, norm(x): 0.7560, norm(y): 1.0112, norm:1.0676, tok/sec: 99289.53, flops:104.22, batch-reuse:1
@ 2217 train 4.8482 , allloss: 4.8484, dt: 1312.40ms, fracRes: 0.7025, norm(attn): 0.1914, norm(output): 0.9334, norm(x): 0.7562, norm(y): 1.0114, norm:0.9293, tok/sec: 99871.98, flops:104.83, batch-reuse:1
@ 2218 train 4.8274 , allloss: 4.8275, dt: 1327.85ms, fracRes: 0.7022, norm(attn): 0.1904, norm(output): 0.9335, norm(x): 0.7572, norm(y): 1.0118, norm:0.8438, tok/sec: 98710.03, flops:103.61, batch-reuse:1
@ 2219 train 4.9264 , allloss: 4.9265, dt: 1337.92ms, fracRes: 0.7023, norm(attn): 0.1875, norm(output): 0.9336, norm(x): 0.7580, norm(y): 1.0117, norm:0.8299, tok/sec: 97967.14, flops:102.83, batch-reuse:1
@ 2220 train 4.9048 , allloss: 4.9050, dt: 1338.59ms, fracRes: 0.7025, norm(attn): 0.1875, norm(output): 0.9337, norm(x): 0.7579, norm(y): 1.0115, norm:0.8043, tok/sec: 97918.09, flops:102.78, batch-reuse:1
@ 2221 train 4.7591 , allloss: 4.7596, dt: 1339.87ms, fracRes: 0.7025, norm(attn): 0.1885, norm(output): 0.9336, norm(x): 0.7581, norm(y): 1.0114, norm:0.7926, tok/sec: 97824.75, flops:102.68, batch-reuse:1
@ 2222 train 4.9325 , allloss: 4.9327, dt: 1299.52ms, fracRes: 0.7025, norm(attn): 0.1875, norm(output): 0.9338, norm(x): 0.7588, norm(y): 1.0112, norm:0.8172, tok/sec: 100862.04, flops:105.87, batch-reuse:1
@ 2223 train 4.8307 , allloss: 4.8308, dt: 1296.79ms, fracRes: 0.7023, norm(attn): 0.1885, norm(output): 0.9337, norm(x): 0.7590, norm(y): 1.0113, norm:0.8710, tok/sec: 101074.07, flops:106.09, batch-reuse:1
@ 2224 train 4.9337 , allloss: 4.9338, dt: 1325.08ms, fracRes: 0.7022, norm(attn): 0.1895, norm(output): 0.9334, norm(x): 0.7580, norm(y): 1.0117, norm:0.9321, tok/sec: 98916.62, flops:103.83, batch-reuse:1
@ 2225 train 4.9602 , allloss: 4.9604, dt: 1283.91ms, fracRes: 0.7022, norm(attn): 0.1885, norm(output): 0.9335, norm(x): 0.7572, norm(y): 1.0117, norm:1.2226, tok/sec: 102088.07, flops:107.15, batch-reuse:1
@ 2226 train 4.9076 , allloss: 4.9077, dt: 1296.91ms, fracRes: 0.7023, norm(attn): 0.1885, norm(output): 0.9335, norm(x): 0.7573, norm(y): 1.0117, norm:0.7796, tok/sec: 101065.00, flops:106.08, batch-reuse:1
@ 2227 train 4.8623 , allloss: 4.8624, dt: 1302.02ms, fracRes: 0.7025, norm(attn): 0.1885, norm(output): 0.9336, norm(x): 0.7578, norm(y): 1.0114, norm:1.0679, tok/sec: 100668.41, flops:105.66, batch-reuse:1
@ 2228 train 4.8956 , allloss: 4.8958, dt: 1302.86ms, fracRes: 0.7027, norm(attn): 0.1865, norm(output): 0.9336, norm(x): 0.7577, norm(y): 1.0111, norm:1.0242, tok/sec: 100603.43, flops:105.60, batch-reuse:1
@ 2229 train 5.0488 , allloss: 5.0490, dt: 1332.55ms, fracRes: 0.7026, norm(attn): 0.1885, norm(output): 0.9336, norm(x): 0.7574, norm(y): 1.0111, norm:0.8463, tok/sec: 98361.94, flops:103.24, batch-reuse:1
@ 2230 train 5.0531 , allloss: 5.0532, dt: 1283.30ms, fracRes: 0.7027, norm(attn): 0.1904, norm(output): 0.9336, norm(x): 0.7570, norm(y): 1.0111, norm:0.8712, tok/sec: 102137.03, flops:107.21, batch-reuse:1
@ 2231 train 5.1309 , allloss: 5.1311, dt: 1298.53ms, fracRes: 0.7027, norm(attn): 0.1914, norm(output): 0.9337, norm(x): 0.7572, norm(y): 1.0109, norm:0.8713, tok/sec: 100938.86, flops:105.95, batch-reuse:1
@ 2232 train 5.0405 , allloss: 5.0407, dt: 1300.53ms, fracRes: 0.7027, norm(attn): 0.1914, norm(output): 0.9337, norm(x): 0.7577, norm(y): 1.0110, norm:0.7738, tok/sec: 100783.55, flops:105.79, batch-reuse:1
@ 2233 train 4.9988 , allloss: 4.9988, dt: 1334.52ms, fracRes: 0.7026, norm(attn): 0.1914, norm(output): 0.9338, norm(x): 0.7584, norm(y): 1.0110, norm:0.8836, tok/sec: 98216.46, flops:103.09, batch-reuse:1
@ 2234 train 5.1745 , allloss: 5.1746, dt: 1322.31ms, fracRes: 0.7028, norm(attn): 0.1885, norm(output): 0.9337, norm(x): 0.7575, norm(y): 1.0111, norm:0.9265, tok/sec: 99123.51, flops:104.04, batch-reuse:1
@ 2235 train 5.0349 , allloss: 5.0350, dt: 1295.86ms, fracRes: 0.7024, norm(attn): 0.1885, norm(output): 0.9336, norm(x): 0.7567, norm(y): 1.0115, norm:0.8936, tok/sec: 101147.10, flops:106.17, batch-reuse:1
@ 2236 train 5.0306 , allloss: 5.0307, dt: 1323.27ms, fracRes: 0.7024, norm(attn): 0.1904, norm(output): 0.9335, norm(x): 0.7565, norm(y): 1.0116, norm:0.8601, tok/sec: 99051.59, flops:103.97, batch-reuse:1
@ 2237 train 5.0920 , allloss: 5.0922, dt: 1296.42ms, fracRes: 0.7024, norm(attn): 0.1885, norm(output): 0.9335, norm(x): 0.7569, norm(y): 1.0115, norm:0.8559, tok/sec: 101103.07, flops:106.12, batch-reuse:1
@ 2238 train 4.9724 , allloss: 4.9729, dt: 1319.53ms, fracRes: 0.7020, norm(attn): 0.1885, norm(output): 0.9335, norm(x): 0.7574, norm(y): 1.0117, norm:0.7976, tok/sec: 99332.46, flops:104.26, batch-reuse:1
@ 2239 train 4.9486 , allloss: 4.9489, dt: 1338.92ms, fracRes: 0.7018, norm(attn): 0.1904, norm(output): 0.9335, norm(x): 0.7578, norm(y): 1.0120, norm:0.7838, tok/sec: 97894.15, flops:102.75, batch-reuse:1
@ 2240 train 5.0548 , allloss: 5.0549, dt: 1346.51ms, fracRes: 0.7019, norm(attn): 0.1914, norm(output): 0.9337, norm(x): 0.7576, norm(y): 1.0118, norm:0.7285, tok/sec: 97342.37, flops:102.17, batch-reuse:1
@ 2241 train 5.0833 , allloss: 5.0836, dt: 1331.89ms, fracRes: 0.7023, norm(attn): 0.1914, norm(output): 0.9336, norm(x): 0.7570, norm(y): 1.0116, norm:0.8291, tok/sec: 98410.73, flops:103.30, batch-reuse:1
@ 2242 train 5.0103 , allloss: 5.0105, dt: 1329.75ms, fracRes: 0.7023, norm(attn): 0.1885, norm(output): 0.9336, norm(x): 0.7569, norm(y): 1.0113, norm:0.9334, tok/sec: 98569.02, flops:103.46, batch-reuse:1
@ 2243 train 5.0557 , allloss: 5.0558, dt: 1326.77ms, fracRes: 0.7025, norm(attn): 0.1875, norm(output): 0.9336, norm(x): 0.7570, norm(y): 1.0113, norm:0.9480, tok/sec: 98790.59, flops:103.69, batch-reuse:1
@ 2244 train 5.0656 , allloss: 5.0661, dt: 1299.09ms, fracRes: 0.7025, norm(attn): 0.1885, norm(output): 0.9336, norm(x): 0.7570, norm(y): 1.0113, norm:0.8723, tok/sec: 100895.55, flops:105.90, batch-reuse:1
@ 2245 train 4.9863 , allloss: 4.9865, dt: 1306.30ms, fracRes: 0.7026, norm(attn): 0.1885, norm(output): 0.9336, norm(x): 0.7571, norm(y): 1.0114, norm:0.8940, tok/sec: 100338.11, flops:105.32, batch-reuse:1
@ 2246 train 4.9649 , allloss: 4.9651, dt: 1313.36ms, fracRes: 0.7026, norm(attn): 0.1875, norm(output): 0.9336, norm(x): 0.7567, norm(y): 1.0113, norm:0.8569, tok/sec: 99798.88, flops:104.75, batch-reuse:1
@ 2247 train 5.0198 , allloss: 5.0212, dt: 1300.11ms, fracRes: 0.7024, norm(attn): 0.1875, norm(output): 0.9337, norm(x): 0.7567, norm(y): 1.0114, norm:0.7739, tok/sec: 100816.10, flops:105.82, batch-reuse:1
@ 2248 train 5.0760 , allloss: 5.0764, dt: 1296.38ms, fracRes: 0.7024, norm(attn): 0.1914, norm(output): 0.9336, norm(x): 0.7563, norm(y): 1.0117, norm:0.7906, tok/sec: 101106.51, flops:106.12, batch-reuse:1
@ 2249 train 4.9009 , allloss: 4.9012, dt: 1290.78ms, fracRes: 0.7021, norm(attn): 0.1934, norm(output): 0.9337, norm(x): 0.7566, norm(y): 1.0117, norm:0.7492, tok/sec: 101545.10, flops:106.58, batch-reuse:1
@ 2250 train 5.1072 , allloss: 5.1083, dt: 1315.86ms, fracRes: 0.7023, norm(attn): 0.1914, norm(output): 0.9336, norm(x): 0.7568, norm(y): 1.0112, norm:0.7531, tok/sec: 99609.16, flops:104.55, batch-reuse:1
@ 2251 train 4.9690 , allloss: 4.9691, dt: 1293.51ms, fracRes: 0.7024, norm(attn): 0.1904, norm(output): 0.9337, norm(x): 0.7567, norm(y): 1.0111, norm:1.1190, tok/sec: 101330.62, flops:106.36, batch-reuse:1
@ 2252 train 4.9763 , allloss: 4.9763, dt: 1302.76ms, fracRes: 0.7023, norm(attn): 0.1904, norm(output): 0.9336, norm(x): 0.7565, norm(y): 1.0115, norm:1.0527, tok/sec: 100610.65, flops:105.60, batch-reuse:1
@ 2253 train 4.9592 , allloss: 4.9594, dt: 1347.14ms, fracRes: 0.7025, norm(attn): 0.1895, norm(output): 0.9336, norm(x): 0.7562, norm(y): 1.0115, norm:0.8990, tok/sec: 97296.20, flops:102.13, batch-reuse:1
@ 2254 train 5.0345 , allloss: 5.0347, dt: 1340.24ms, fracRes: 0.7026, norm(attn): 0.1885, norm(output): 0.9337, norm(x): 0.7564, norm(y): 1.0112, norm:0.8696, tok/sec: 97797.74, flops:102.65, batch-reuse:1
@ 2255 train 5.0041 , allloss: 5.0049, dt: 1339.93ms, fracRes: 0.7027, norm(attn): 0.1885, norm(output): 0.9336, norm(x): 0.7568, norm(y): 1.0112, norm:0.9059, tok/sec: 97819.74, flops:102.67, batch-reuse:1
@ 2256 train 5.1354 , allloss: 5.1356, dt: 1338.98ms, fracRes: 0.7026, norm(attn): 0.1885, norm(output): 0.9335, norm(x): 0.7569, norm(y): 1.0113, norm:0.8409, tok/sec: 97889.65, flops:102.75, batch-reuse:1
@ 2257 train 5.0456 , allloss: 5.0459, dt: 1335.55ms, fracRes: 0.7022, norm(attn): 0.1895, norm(output): 0.9335, norm(x): 0.7570, norm(y): 1.0117, norm:0.9700, tok/sec: 98140.99, flops:103.01, batch-reuse:1
@ 2258 train 4.9658 , allloss: 4.9659, dt: 1334.43ms, fracRes: 0.7022, norm(attn): 0.1904, norm(output): 0.9335, norm(x): 0.7571, norm(y): 1.0116, norm:0.9226, tok/sec: 98223.27, flops:103.10, batch-reuse:1
@ 2259 train 5.1134 , allloss: 5.1135, dt: 1330.95ms, fracRes: 0.7025, norm(attn): 0.1885, norm(output): 0.9337, norm(x): 0.7570, norm(y): 1.0111, norm:0.9440, tok/sec: 98480.12, flops:103.37, batch-reuse:1
@ 2260 train 4.9789 , allloss: 4.9790, dt: 1301.93ms, fracRes: 0.7024, norm(attn): 0.1895, norm(output): 0.9336, norm(x): 0.7575, norm(y): 1.0113, norm:0.9135, tok/sec: 100675.51, flops:105.67, batch-reuse:1
@ 2261 train 5.0136 , allloss: 5.0137, dt: 1293.88ms, fracRes: 0.7024, norm(attn): 0.1904, norm(output): 0.9335, norm(x): 0.7572, norm(y): 1.0113, norm:0.6871, tok/sec: 101301.31, flops:106.33, batch-reuse:1
@ 2262 train 5.0249 , allloss: 5.0252, dt: 1317.18ms, fracRes: 0.7024, norm(attn): 0.1934, norm(output): 0.9334, norm(x): 0.7564, norm(y): 1.0112, norm:0.8182, tok/sec: 99509.71, flops:104.45, batch-reuse:1
@ 2263 train 5.0851 , allloss: 5.0853, dt: 1330.69ms, fracRes: 0.7027, norm(attn): 0.1914, norm(output): 0.9335, norm(x): 0.7559, norm(y): 1.0111, norm:1.0303, tok/sec: 98499.62, flops:103.39, batch-reuse:1
@ 2264 train 5.0464 , allloss: 5.0466, dt: 1325.54ms, fracRes: 0.7029, norm(attn): 0.1943, norm(output): 0.9335, norm(x): 0.7565, norm(y): 1.0109, norm:1.3005, tok/sec: 98882.07, flops:103.79, batch-reuse:1
@ 2265 train 4.9856 , allloss: 4.9858, dt: 1329.16ms, fracRes: 0.7028, norm(attn): 0.1934, norm(output): 0.9335, norm(x): 0.7565, norm(y): 1.0111, norm:0.7829, tok/sec: 98612.82, flops:103.51, batch-reuse:1
@ 2266 train 4.9136 , allloss: 4.9138, dt: 1332.42ms, fracRes: 0.7026, norm(attn): 0.1914, norm(output): 0.9335, norm(x): 0.7563, norm(y): 1.0111, norm:1.0422, tok/sec: 98371.38, flops:103.25, batch-reuse:1
@ 2267 train 5.0376 , allloss: 5.0377, dt: 1299.37ms, fracRes: 0.7026, norm(attn): 0.1914, norm(output): 0.9335, norm(x): 0.7556, norm(y): 1.0110, norm:0.9842, tok/sec: 100873.48, flops:105.88, batch-reuse:1
@ 2268 train 5.0634 , allloss: 5.0635, dt: 1291.04ms, fracRes: 0.7024, norm(attn): 0.1914, norm(output): 0.9333, norm(x): 0.7554, norm(y): 1.0113, norm:0.8414, tok/sec: 101523.98, flops:106.56, batch-reuse:1
@ 2269 train 5.0639 , allloss: 5.0641, dt: 1316.83ms, fracRes: 0.7024, norm(attn): 0.1973, norm(output): 0.9334, norm(x): 0.7558, norm(y): 1.0113, norm:0.6499, tok/sec: 99535.71, flops:104.48, batch-reuse:1
@ 2270 train 5.1145 , allloss: 5.1146, dt: 1322.84ms, fracRes: 0.7025, norm(attn): 0.1992, norm(output): 0.9335, norm(x): 0.7563, norm(y): 1.0115, norm:0.8682, tok/sec: 99083.88, flops:104.00, batch-reuse:1
@ 2271 train 5.0132 , allloss: 5.0137, dt: 1292.61ms, fracRes: 0.7026, norm(attn): 0.1963, norm(output): 0.9334, norm(x): 0.7567, norm(y): 1.0111, norm:0.6445, tok/sec: 101401.01, flops:106.43, batch-reuse:1
@ 2272 train 4.9237 , allloss: 4.9237, dt: 1304.39ms, fracRes: 0.7025, norm(attn): 0.1914, norm(output): 0.9335, norm(x): 0.7570, norm(y): 1.0111, norm:0.8271, tok/sec: 100485.36, flops:105.47, batch-reuse:1
@ 2273 train 5.0554 , allloss: 5.0555, dt: 1297.03ms, fracRes: 0.7025, norm(attn): 0.1934, norm(output): 0.9335, norm(x): 0.7571, norm(y): 1.0111, norm:0.9523, tok/sec: 101055.30, flops:106.07, batch-reuse:1
@ 2274 train 4.9810 , allloss: 4.9810, dt: 1293.48ms, fracRes: 0.7023, norm(attn): 0.1924, norm(output): 0.9334, norm(x): 0.7574, norm(y): 1.0113, norm:1.0827, tok/sec: 101333.05, flops:106.36, batch-reuse:1
@ 2275 train 5.0132 , allloss: 5.0133, dt: 1309.67ms, fracRes: 0.7024, norm(attn): 0.1963, norm(output): 0.9335, norm(x): 0.7570, norm(y): 1.0111, norm:0.8358, tok/sec: 100080.08, flops:105.05, batch-reuse:1
@ 2276 train 5.0321 , allloss: 5.0322, dt: 1331.22ms, fracRes: 0.7027, norm(attn): 0.1953, norm(output): 0.9337, norm(x): 0.7567, norm(y): 1.0106, norm:0.7653, tok/sec: 98460.00, flops:103.35, batch-reuse:1
@ 2277 train 5.0007 , allloss: 5.0008, dt: 1290.56ms, fracRes: 0.7028, norm(attn): 0.1943, norm(output): 0.9337, norm(x): 0.7567, norm(y): 1.0108, norm:0.7532, tok/sec: 101561.77, flops:106.60, batch-reuse:1
@ 2278 train 5.1227 , allloss: 5.1228, dt: 1287.66ms, fracRes: 0.7025, norm(attn): 0.1914, norm(output): 0.9335, norm(x): 0.7566, norm(y): 1.0114, norm:0.8670, tok/sec: 101790.93, flops:106.84, batch-reuse:1
@ 2279 train 4.9618 , allloss: 4.9619, dt: 1311.12ms, fracRes: 0.7024, norm(attn): 0.1934, norm(output): 0.9334, norm(x): 0.7561, norm(y): 1.0114, norm:0.7701, tok/sec: 99969.74, flops:104.93, batch-reuse:1
@ 2280 train 4.9475 , allloss: 4.9475, dt: 1282.72ms, fracRes: 0.7024, norm(attn): 0.1953, norm(output): 0.9335, norm(x): 0.7560, norm(y): 1.0111, norm:0.6954, tok/sec: 102182.82, flops:107.25, batch-reuse:1
@ 2281 train 4.9026 , allloss: 4.9031, dt: 1313.65ms, fracRes: 0.7025, norm(attn): 0.1953, norm(output): 0.9334, norm(x): 0.7563, norm(y): 1.0110, norm:0.8705, tok/sec: 99777.33, flops:104.73, batch-reuse:1
@ 2282 train 5.1010 , allloss: 5.1011, dt: 1306.39ms, fracRes: 0.7027, norm(attn): 0.1914, norm(output): 0.9336, norm(x): 0.7565, norm(y): 1.0108, norm:0.8726, tok/sec: 100331.37, flops:105.31, batch-reuse:1
@ 2283 train 4.9547 , allloss: 4.9548, dt: 1295.74ms, fracRes: 0.7025, norm(attn): 0.1924, norm(output): 0.9335, norm(x): 0.7570, norm(y): 1.0108, norm:0.7969, tok/sec: 101156.44, flops:106.18, batch-reuse:1
@ 2284 train 4.9299 , allloss: 4.9300, dt: 1311.83ms, fracRes: 0.7024, norm(attn): 0.1934, norm(output): 0.9335, norm(x): 0.7570, norm(y): 1.0110, norm:0.8338, tok/sec: 99915.33, flops:104.87, batch-reuse:1
@ 2285 train 4.9443 , allloss: 4.9443, dt: 1288.97ms, fracRes: 0.7023, norm(attn): 0.1914, norm(output): 0.9335, norm(x): 0.7568, norm(y): 1.0109, norm:0.7958, tok/sec: 101687.34, flops:106.73, batch-reuse:1
@ 2286 train 4.9842 , allloss: 4.9843, dt: 1294.66ms, fracRes: 0.7024, norm(attn): 0.1914, norm(output): 0.9335, norm(x): 0.7566, norm(y): 1.0107, norm:0.6698, tok/sec: 101240.29, flops:106.27, batch-reuse:1
@ 2287 train 4.9818 , allloss: 4.9820, dt: 1307.50ms, fracRes: 0.7025, norm(attn): 0.1914, norm(output): 0.9336, norm(x): 0.7564, norm(y): 1.0108, norm:0.6631, tok/sec: 100246.02, flops:105.22, batch-reuse:1
@ 2288 train 5.0406 , allloss: 5.0409, dt: 1354.04ms, fracRes: 0.7025, norm(attn): 0.1904, norm(output): 0.9337, norm(x): 0.7563, norm(y): 1.0106, norm:0.8568, tok/sec: 96800.37, flops:101.60, batch-reuse:1
@ 2289 train 4.9356 , allloss: 4.9357, dt: 1314.88ms, fracRes: 0.7026, norm(attn): 0.1963, norm(output): 0.9336, norm(x): 0.7557, norm(y): 1.0106, norm:0.9473, tok/sec: 99683.79, flops:104.63, batch-reuse:1
@ 2290 train 4.8881 , allloss: 4.8882, dt: 1326.81ms, fracRes: 0.7026, norm(attn): 0.1953, norm(output): 0.9335, norm(x): 0.7551, norm(y): 1.0107, norm:0.7954, tok/sec: 98787.33, flops:103.69, batch-reuse:1
@ 2291 train 5.0589 , allloss: 5.0592, dt: 1322.92ms, fracRes: 0.7026, norm(attn): 0.1924, norm(output): 0.9335, norm(x): 0.7550, norm(y): 1.0107, norm:0.7496, tok/sec: 99078.02, flops:104.00, batch-reuse:1
@ 2292 train 4.9610 , allloss: 4.9611, dt: 1284.85ms, fracRes: 0.7026, norm(attn): 0.1914, norm(output): 0.9334, norm(x): 0.7559, norm(y): 1.0108, norm:0.7967, tok/sec: 102013.76, flops:107.08, batch-reuse:1
@ 2293 train 5.0470 , allloss: 5.0471, dt: 1298.38ms, fracRes: 0.7026, norm(attn): 0.1914, norm(output): 0.9335, norm(x): 0.7567, norm(y): 1.0108, norm:0.8460, tok/sec: 100950.24, flops:105.96, batch-reuse:1
@ 2294 train 5.0057 , allloss: 5.0057, dt: 1295.09ms, fracRes: 0.7024, norm(attn): 0.1914, norm(output): 0.9335, norm(x): 0.7564, norm(y): 1.0109, norm:0.7111, tok/sec: 101206.55, flops:106.23, batch-reuse:1
@ 2295 train 4.9344 , allloss: 4.9345, dt: 1290.69ms, fracRes: 0.7025, norm(attn): 0.1914, norm(output): 0.9334, norm(x): 0.7558, norm(y): 1.0111, norm:0.7516, tok/sec: 101551.89, flops:106.59, batch-reuse:1
@ 2296 train 4.9246 , allloss: 4.9247, dt: 1338.85ms, fracRes: 0.7024, norm(attn): 0.1914, norm(output): 0.9334, norm(x): 0.7561, norm(y): 1.0112, norm:0.6725, tok/sec: 97899.27, flops:102.76, batch-reuse:1
@ 2297 train 4.9377 , allloss: 4.9378, dt: 1331.18ms, fracRes: 0.7023, norm(attn): 0.1924, norm(output): 0.9335, norm(x): 0.7562, norm(y): 1.0111, norm:0.7524, tok/sec: 98463.36, flops:103.35, batch-reuse:1
@ 2298 train 4.9718 , allloss: 4.9719, dt: 1296.87ms, fracRes: 0.7025, norm(attn): 0.1914, norm(output): 0.9335, norm(x): 0.7564, norm(y): 1.0108, norm:0.7710, tok/sec: 101067.84, flops:106.08, batch-reuse:1
@ 2299 train 4.9638 , allloss: 4.9639, dt: 1306.16ms, fracRes: 0.7026, norm(attn): 0.1904, norm(output): 0.9335, norm(x): 0.7560, norm(y): 1.0107, norm:0.6831, tok/sec: 100349.36, flops:105.33, batch-reuse:1
@ 2300 train 4.9224 , allloss: 4.9225, dt: 1288.26ms, fracRes: 0.7027, norm(attn): 0.1914, norm(output): 0.9334, norm(x): 0.7559, norm(y): 1.0109, norm:0.6896, tok/sec: 101743.38, flops:106.79, batch-reuse:1
@ 2301 train 4.9554 , allloss: 4.9555, dt: 1314.49ms, fracRes: 0.7027, norm(attn): 0.1885, norm(output): 0.9335, norm(x): 0.7562, norm(y): 1.0110, norm:0.7128, tok/sec: 99713.55, flops:104.66, batch-reuse:1
@ 2302 train 4.9333 , allloss: 4.9334, dt: 1306.30ms, fracRes: 0.7026, norm(attn): 0.1885, norm(output): 0.9335, norm(x): 0.7571, norm(y): 1.0110, norm:0.8691, tok/sec: 100338.57, flops:105.32, batch-reuse:1
@ 2303 train 4.9723 , allloss: 4.9729, dt: 1298.40ms, fracRes: 0.7027, norm(attn): 0.1895, norm(output): 0.9337, norm(x): 0.7564, norm(y): 1.0106, norm:0.9172, tok/sec: 100948.92, flops:105.96, batch-reuse:1
@ 2304 train 4.9983 , allloss: 4.9984, dt: 1294.17ms, fracRes: 0.7026, norm(attn): 0.1904, norm(output): 0.9335, norm(x): 0.7562, norm(y): 1.0109, norm:0.9907, tok/sec: 101279.17, flops:106.31, batch-reuse:1
@ 2305 train 4.9235 , allloss: 4.9237, dt: 1302.39ms, fracRes: 0.7023, norm(attn): 0.1895, norm(output): 0.9335, norm(x): 0.7567, norm(y): 1.0114, norm:1.0236, tok/sec: 100639.94, flops:105.63, batch-reuse:1
@ 2306 train 5.0092 , allloss: 5.0093, dt: 1332.81ms, fracRes: 0.7028, norm(attn): 0.1895, norm(output): 0.9335, norm(x): 0.7569, norm(y): 1.0106, norm:0.7687, tok/sec: 98342.38, flops:103.22, batch-reuse:1
@ 2307 train 5.0175 , allloss: 5.0176, dt: 1332.87ms, fracRes: 0.7028, norm(attn): 0.1914, norm(output): 0.9336, norm(x): 0.7562, norm(y): 1.0105, norm:0.7373, tok/sec: 98338.21, flops:103.22, batch-reuse:1
@ 2308 train 4.9702 , allloss: 4.9704, dt: 1299.44ms, fracRes: 0.7026, norm(attn): 0.1953, norm(output): 0.9335, norm(x): 0.7558, norm(y): 1.0109, norm:0.9391, tok/sec: 100868.02, flops:105.87, batch-reuse:1
@ 2309 train 4.8992 , allloss: 4.8993, dt: 1306.42ms, fracRes: 0.7026, norm(attn): 0.2002, norm(output): 0.9336, norm(x): 0.7552, norm(y): 1.0111, norm:1.0296, tok/sec: 100328.99, flops:105.31, batch-reuse:1
@ 2310 train 5.0542 , allloss: 5.0544, dt: 1293.98ms, fracRes: 0.7029, norm(attn): 0.1953, norm(output): 0.9336, norm(x): 0.7554, norm(y): 1.0109, norm:0.9968, tok/sec: 101294.01, flops:106.32, batch-reuse:1
@ 2311 train 5.0079 , allloss: 5.0081, dt: 1320.44ms, fracRes: 0.7030, norm(attn): 0.1953, norm(output): 0.9336, norm(x): 0.7563, norm(y): 1.0105, norm:0.9767, tok/sec: 99263.64, flops:104.19, batch-reuse:1
@ 2312 train 4.9820 , allloss: 4.9820, dt: 1276.24ms, fracRes: 0.7029, norm(attn): 0.1973, norm(output): 0.9336, norm(x): 0.7569, norm(y): 1.0102, norm:1.0448, tok/sec: 102701.45, flops:107.80, batch-reuse:1
@ 2313 train 5.0074 , allloss: 5.0075, dt: 1309.92ms, fracRes: 0.7028, norm(attn): 0.1992, norm(output): 0.9336, norm(x): 0.7567, norm(y): 1.0103, norm:0.9667, tok/sec: 100061.25, flops:105.03, batch-reuse:1
@ 2314 train 4.9727 , allloss: 4.9728, dt: 1285.38ms, fracRes: 0.7029, norm(attn): 0.1982, norm(output): 0.9336, norm(x): 0.7565, norm(y): 1.0105, norm:0.7924, tok/sec: 101971.51, flops:107.03, batch-reuse:1
@ 2315 train 4.9270 , allloss: 4.9272, dt: 1266.64ms, fracRes: 0.7028, norm(attn): 0.1982, norm(output): 0.9335, norm(x): 0.7560, norm(y): 1.0104, norm:0.9124, tok/sec: 103480.23, flops:108.62, batch-reuse:1
@ 2316 train 4.9640 , allloss: 4.9641, dt: 1315.27ms, fracRes: 0.7029, norm(attn): 0.2002, norm(output): 0.9339, norm(x): 0.7554, norm(y): 1.0100, norm:0.7121, tok/sec: 99654.36, flops:104.60, batch-reuse:1
@ 2317 train 4.9114 , allloss: 4.9116, dt: 1341.31ms, fracRes: 0.7028, norm(attn): 0.2012, norm(output): 0.9337, norm(x): 0.7555, norm(y): 1.0102, norm:1.0326, tok/sec: 97719.06, flops:102.57, batch-reuse:1
@ 2318 train 4.9607 , allloss: 4.9608, dt: 1341.02ms, fracRes: 0.7028, norm(attn): 0.2002, norm(output): 0.9336, norm(x): 0.7549, norm(y): 1.0106, norm:0.8608, tok/sec: 97740.26, flops:102.59, batch-reuse:1
@ 2319 train 4.9765 , allloss: 4.9766, dt: 1305.47ms, fracRes: 0.7029, norm(attn): 0.1953, norm(output): 0.9336, norm(x): 0.7549, norm(y): 1.0106, norm:0.8962, tok/sec: 100402.52, flops:105.39, batch-reuse:1
@ 2320 train 4.9143 , allloss: 4.9144, dt: 1335.63ms, fracRes: 0.7032, norm(attn): 0.1934, norm(output): 0.9335, norm(x): 0.7546, norm(y): 1.0101, norm:0.7824, tok/sec: 98135.21, flops:103.01, batch-reuse:1
@ 2321 train 4.9144 , allloss: 4.9146, dt: 1331.42ms, fracRes: 0.7032, norm(attn): 0.1934, norm(output): 0.9336, norm(x): 0.7549, norm(y): 1.0102, norm:0.8755, tok/sec: 98445.08, flops:103.33, batch-reuse:1
@ 2322 train 4.9519 , allloss: 4.9520, dt: 1299.85ms, fracRes: 0.7029, norm(attn): 0.1992, norm(output): 0.9336, norm(x): 0.7551, norm(y): 1.0105, norm:0.7605, tok/sec: 100835.90, flops:105.84, batch-reuse:1
@ 2323 train 4.8185 , allloss: 4.8186, dt: 1318.01ms, fracRes: 0.7028, norm(attn): 0.2002, norm(output): 0.9335, norm(x): 0.7553, norm(y): 1.0105, norm:0.7851, tok/sec: 99446.76, flops:104.38, batch-reuse:1
@ 2324 train 4.9600 , allloss: 4.9601, dt: 1332.71ms, fracRes: 0.7027, norm(attn): 0.1982, norm(output): 0.9336, norm(x): 0.7549, norm(y): 1.0103, norm:0.6937, tok/sec: 98349.85, flops:103.23, batch-reuse:1
@ 2325 train 5.0033 , allloss: 5.0034, dt: 1330.25ms, fracRes: 0.7026, norm(attn): 0.1973, norm(output): 0.9336, norm(x): 0.7554, norm(y): 1.0106, norm:0.7975, tok/sec: 98531.82, flops:103.42, batch-reuse:1
@ 2326 train 4.8729 , allloss: 4.8736, dt: 1306.40ms, fracRes: 0.7025, norm(attn): 0.1973, norm(output): 0.9335, norm(x): 0.7556, norm(y): 1.0106, norm:0.7209, tok/sec: 100330.53, flops:105.31, batch-reuse:1
@ 2327 train 4.8974 , allloss: 4.8977, dt: 1285.85ms, fracRes: 0.7025, norm(attn): 0.1973, norm(output): 0.9337, norm(x): 0.7556, norm(y): 1.0105, norm:0.6945, tok/sec: 101933.75, flops:106.99, batch-reuse:1
@ 2328 train 4.8366 , allloss: 4.8370, dt: 1303.16ms, fracRes: 0.7025, norm(attn): 0.1973, norm(output): 0.9336, norm(x): 0.7551, norm(y): 1.0106, norm:0.7017, tok/sec: 100580.06, flops:105.57, batch-reuse:1
@ 2329 train 4.5843 , allloss: 4.5861, dt: 1328.45ms, fracRes: 0.7030, norm(attn): 0.1973, norm(output): 0.9334, norm(x): 0.7554, norm(y): 1.0100, norm:1.6100, tok/sec: 98664.99, flops:103.56, batch-reuse:1
@ 2330 train 4.9912 , allloss: 4.9914, dt: 1322.38ms, fracRes: 0.7027, norm(attn): 0.1973, norm(output): 0.9336, norm(x): 0.7540, norm(y): 1.0106, norm:0.9803, tok/sec: 99118.05, flops:104.04, batch-reuse:1
@ 2331 train 4.7884 , allloss: 4.7888, dt: 1330.95ms, fracRes: 0.7028, norm(attn): 0.1992, norm(output): 0.9334, norm(x): 0.7538, norm(y): 1.0107, norm:0.8166, tok/sec: 98479.80, flops:103.37, batch-reuse:1
@ 2332 train 4.9862 , allloss: 4.9863, dt: 1325.24ms, fracRes: 0.7028, norm(attn): 0.1982, norm(output): 0.9336, norm(x): 0.7546, norm(y): 1.0106, norm:0.8867, tok/sec: 98904.45, flops:103.81, batch-reuse:1
@ 2333 train 4.7927 , allloss: 4.7934, dt: 1323.40ms, fracRes: 0.7028, norm(attn): 0.1934, norm(output): 0.9336, norm(x): 0.7554, norm(y): 1.0105, norm:0.8433, tok/sec: 99041.54, flops:103.96, batch-reuse:1
@ 2334 train 4.8258 , allloss: 4.8259, dt: 1325.36ms, fracRes: 0.7024, norm(attn): 0.1914, norm(output): 0.9336, norm(x): 0.7557, norm(y): 1.0106, norm:0.9832, tok/sec: 98895.50, flops:103.80, batch-reuse:1
@ 2335 train 4.9537 , allloss: 4.9538, dt: 1305.91ms, fracRes: 0.7024, norm(attn): 0.1924, norm(output): 0.9336, norm(x): 0.7551, norm(y): 1.0107, norm:0.9305, tok/sec: 100368.10, flops:105.35, batch-reuse:1
@ 2336 train 5.0190 , allloss: 5.0193, dt: 1306.53ms, fracRes: 0.7026, norm(attn): 0.1943, norm(output): 0.9336, norm(x): 0.7545, norm(y): 1.0107, norm:0.7048, tok/sec: 100320.40, flops:105.30, batch-reuse:1
@ 2337 train 4.8644 , allloss: 4.8647, dt: 1346.86ms, fracRes: 0.7025, norm(attn): 0.1943, norm(output): 0.9336, norm(x): 0.7543, norm(y): 1.0107, norm:0.7744, tok/sec: 97316.90, flops:102.15, batch-reuse:1
@ 2338 train 4.9052 , allloss: 4.9054, dt: 1315.41ms, fracRes: 0.7024, norm(attn): 0.1982, norm(output): 0.9336, norm(x): 0.7546, norm(y): 1.0108, norm:1.0481, tok/sec: 99643.36, flops:104.59, batch-reuse:1
@ 2339 train 4.8554 , allloss: 4.8556, dt: 1333.83ms, fracRes: 0.7026, norm(attn): 0.1963, norm(output): 0.9336, norm(x): 0.7545, norm(y): 1.0106, norm:0.9297, tok/sec: 98267.49, flops:103.14, batch-reuse:1
@ 2340 train 4.8901 , allloss: 4.8903, dt: 1338.40ms, fracRes: 0.7027, norm(attn): 0.1973, norm(output): 0.9337, norm(x): 0.7546, norm(y): 1.0101, norm:0.6885, tok/sec: 97932.01, flops:102.79, batch-reuse:1
@ 2341 train 4.9001 , allloss: 4.9002, dt: 1309.63ms, fracRes: 0.7027, norm(attn): 0.1934, norm(output): 0.9336, norm(x): 0.7547, norm(y): 1.0102, norm:0.8751, tok/sec: 100082.94, flops:105.05, batch-reuse:1
@ 2342 train 4.7962 , allloss: 4.7971, dt: 1285.29ms, fracRes: 0.7026, norm(attn): 0.1953, norm(output): 0.9336, norm(x): 0.7548, norm(y): 1.0103, norm:0.7643, tok/sec: 101978.18, flops:107.04, batch-reuse:1
@ 2343 train 4.8906 , allloss: 4.8907, dt: 1303.55ms, fracRes: 0.7024, norm(attn): 0.1953, norm(output): 0.9336, norm(x): 0.7553, norm(y): 1.0106, norm:0.8325, tok/sec: 100549.80, flops:105.54, batch-reuse:1
@ 2344 train 4.9979 , allloss: 4.9980, dt: 1291.86ms, fracRes: 0.7026, norm(attn): 0.1934, norm(output): 0.9337, norm(x): 0.7556, norm(y): 1.0105, norm:0.9278, tok/sec: 101459.58, flops:106.50, batch-reuse:1
@ 2345 train 4.8309 , allloss: 4.8310, dt: 1317.29ms, fracRes: 0.7027, norm(attn): 0.1924, norm(output): 0.9338, norm(x): 0.7556, norm(y): 1.0099, norm:0.7248, tok/sec: 99501.51, flops:104.44, batch-reuse:1
@ 2346 train 4.9345 , allloss: 4.9347, dt: 1338.28ms, fracRes: 0.7027, norm(attn): 0.1963, norm(output): 0.9337, norm(x): 0.7554, norm(y): 1.0100, norm:0.8155, tok/sec: 97940.33, flops:102.80, batch-reuse:1
@ 2347 train 4.8127 , allloss: 4.8128, dt: 1325.60ms, fracRes: 0.7022, norm(attn): 0.1973, norm(output): 0.9336, norm(x): 0.7552, norm(y): 1.0104, norm:0.9327, tok/sec: 98877.23, flops:103.78, batch-reuse:1
@ 2348 train 4.9366 , allloss: 4.9368, dt: 1311.53ms, fracRes: 0.7021, norm(attn): 0.1953, norm(output): 0.9336, norm(x): 0.7554, norm(y): 1.0108, norm:0.9606, tok/sec: 99938.10, flops:104.90, batch-reuse:1
@ 2349 train 4.9332 , allloss: 4.9334, dt: 1329.78ms, fracRes: 0.7026, norm(attn): 0.1904, norm(output): 0.9338, norm(x): 0.7548, norm(y): 1.0102, norm:0.7050, tok/sec: 98566.57, flops:103.46, batch-reuse:1
@ 2350 train 4.8137 , allloss: 4.8140, dt: 1325.52ms, fracRes: 0.7030, norm(attn): 0.1914, norm(output): 0.9337, norm(x): 0.7542, norm(y): 1.0100, norm:0.7277, tok/sec: 98883.49, flops:103.79, batch-reuse:1
@ 2351 train 4.9956 , allloss: 4.9961, dt: 1336.84ms, fracRes: 0.7031, norm(attn): 0.1914, norm(output): 0.9337, norm(x): 0.7543, norm(y): 1.0101, norm:0.6773, tok/sec: 98045.92, flops:102.91, batch-reuse:1
@ 2352 train 4.9221 , allloss: 4.9224, dt: 1334.54ms, fracRes: 0.7028, norm(attn): 0.1914, norm(output): 0.9337, norm(x): 0.7544, norm(y): 1.0106, norm:0.7567, tok/sec: 98215.46, flops:103.09, batch-reuse:1
@ 2353 train 4.8995 , allloss: 4.8996, dt: 1329.20ms, fracRes: 0.7027, norm(attn): 0.1904, norm(output): 0.9336, norm(x): 0.7539, norm(y): 1.0106, norm:0.7088, tok/sec: 98609.83, flops:103.50, batch-reuse:1
@ 2354 train 4.9349 , allloss: 4.9349, dt: 1313.42ms, fracRes: 0.7027, norm(attn): 0.1924, norm(output): 0.9337, norm(x): 0.7539, norm(y): 1.0105, norm:0.6653, tok/sec: 99794.32, flops:104.75, batch-reuse:1
@ 2355 train 4.8712 , allloss: 4.8713, dt: 1321.51ms, fracRes: 0.7024, norm(attn): 0.1914, norm(output): 0.9336, norm(x): 0.7545, norm(y): 1.0104, norm:0.6895, tok/sec: 99183.25, flops:104.11, batch-reuse:1
@ 2356 train 4.9781 , allloss: 4.9782, dt: 1302.05ms, fracRes: 0.7025, norm(attn): 0.1934, norm(output): 0.9337, norm(x): 0.7544, norm(y): 1.0103, norm:0.7230, tok/sec: 100665.64, flops:105.66, batch-reuse:1
@ 2357 train 4.9494 , allloss: 4.9494, dt: 1333.20ms, fracRes: 0.7023, norm(attn): 0.1953, norm(output): 0.9335, norm(x): 0.7541, norm(y): 1.0107, norm:0.7358, tok/sec: 98314.17, flops:103.19, batch-reuse:1
@ 2358 train 4.9495 , allloss: 4.9495, dt: 1326.43ms, fracRes: 0.7026, norm(attn): 0.1914, norm(output): 0.9336, norm(x): 0.7541, norm(y): 1.0105, norm:0.8139, tok/sec: 98815.51, flops:103.72, batch-reuse:1
@ 2359 train 4.9063 , allloss: 4.9064, dt: 1305.00ms, fracRes: 0.7028, norm(attn): 0.1895, norm(output): 0.9336, norm(x): 0.7543, norm(y): 1.0103, norm:0.8406, tok/sec: 100438.47, flops:105.42, batch-reuse:1
@ 2360 train 4.8993 , allloss: 4.8994, dt: 1310.27ms, fracRes: 0.7028, norm(attn): 0.1904, norm(output): 0.9338, norm(x): 0.7549, norm(y): 1.0104, norm:0.7152, tok/sec: 100034.36, flops:105.00, batch-reuse:1
@ 2361 train 4.9097 , allloss: 4.9099, dt: 1297.09ms, fracRes: 0.7026, norm(attn): 0.1934, norm(output): 0.9337, norm(x): 0.7546, norm(y): 1.0105, norm:0.7506, tok/sec: 101051.20, flops:106.07, batch-reuse:1
@ 2362 train 4.8947 , allloss: 4.8948, dt: 1292.00ms, fracRes: 0.7025, norm(attn): 0.1963, norm(output): 0.9337, norm(x): 0.7542, norm(y): 1.0105, norm:0.6605, tok/sec: 101449.02, flops:106.48, batch-reuse:1
@ 2363 train 4.9572 , allloss: 4.9573, dt: 1312.13ms, fracRes: 0.7026, norm(attn): 0.1953, norm(output): 0.9336, norm(x): 0.7537, norm(y): 1.0106, norm:0.6726, tok/sec: 99892.20, flops:104.85, batch-reuse:1
@ 2364 train 4.9863 , allloss: 4.9864, dt: 1297.94ms, fracRes: 0.7025, norm(attn): 0.1943, norm(output): 0.9334, norm(x): 0.7536, norm(y): 1.0109, norm:0.8389, tok/sec: 100984.84, flops:106.00, batch-reuse:1
@ 2365 train 4.9288 , allloss: 4.9289, dt: 1312.74ms, fracRes: 0.7024, norm(attn): 0.1934, norm(output): 0.9335, norm(x): 0.7542, norm(y): 1.0109, norm:0.9654, tok/sec: 99846.35, flops:104.80, batch-reuse:1
@ 2366 train 4.9313 , allloss: 4.9315, dt: 1313.18ms, fracRes: 0.7023, norm(attn): 0.1904, norm(output): 0.9335, norm(x): 0.7542, norm(y): 1.0107, norm:0.8954, tok/sec: 99812.29, flops:104.77, batch-reuse:1
@ 2367 train 4.8186 , allloss: 4.8186, dt: 1299.83ms, fracRes: 0.7023, norm(attn): 0.1943, norm(output): 0.9336, norm(x): 0.7539, norm(y): 1.0107, norm:0.6635, tok/sec: 100837.68, flops:105.84, batch-reuse:1
@ 2368 train 4.7694 , allloss: 4.7694, dt: 1310.38ms, fracRes: 0.7025, norm(attn): 0.1953, norm(output): 0.9336, norm(x): 0.7537, norm(y): 1.0106, norm:0.7423, tok/sec: 100025.93, flops:104.99, batch-reuse:1
@ 2369 train 4.8159 , allloss: 4.8160, dt: 1303.70ms, fracRes: 0.7026, norm(attn): 0.1914, norm(output): 0.9336, norm(x): 0.7541, norm(y): 1.0104, norm:0.7090, tok/sec: 100538.45, flops:105.53, batch-reuse:1
@ 2370 train 4.8318 , allloss: 4.8319, dt: 1307.14ms, fracRes: 0.7027, norm(attn): 0.1895, norm(output): 0.9337, norm(x): 0.7547, norm(y): 1.0105, norm:0.7657, tok/sec: 100273.96, flops:105.25, batch-reuse:1
@ 2371 train 4.6875 , allloss: 4.6876, dt: 1338.24ms, fracRes: 0.7025, norm(attn): 0.1895, norm(output): 0.9336, norm(x): 0.7549, norm(y): 1.0106, norm:0.8679, tok/sec: 97943.66, flops:102.80, batch-reuse:1
@ 2372 train 4.7468 , allloss: 4.7469, dt: 1339.41ms, fracRes: 0.7027, norm(attn): 0.1885, norm(output): 0.9338, norm(x): 0.7552, norm(y): 1.0102, norm:0.9626, tok/sec: 97857.66, flops:102.71, batch-reuse:1
@ 2373 train 4.7872 , allloss: 4.7874, dt: 1330.47ms, fracRes: 0.7029, norm(attn): 0.1895, norm(output): 0.9338, norm(x): 0.7551, norm(y): 1.0102, norm:0.9409, tok/sec: 98515.70, flops:103.41, batch-reuse:1
@ 2374 train 4.7607 , allloss: 4.7609, dt: 1330.59ms, fracRes: 0.7026, norm(attn): 0.1904, norm(output): 0.9337, norm(x): 0.7555, norm(y): 1.0106, norm:0.7822, tok/sec: 98506.52, flops:103.40, batch-reuse:1
@ 2375 train 4.7961 , allloss: 4.7962, dt: 1313.30ms, fracRes: 0.7028, norm(attn): 0.1895, norm(output): 0.9336, norm(x): 0.7546, norm(y): 1.0105, norm:0.8211, tok/sec: 99803.43, flops:104.76, batch-reuse:1
@ 2376 train 4.8252 , allloss: 4.8253, dt: 1293.85ms, fracRes: 0.7030, norm(attn): 0.1924, norm(output): 0.9336, norm(x): 0.7537, norm(y): 1.0104, norm:0.7483, tok/sec: 101304.00, flops:106.33, batch-reuse:1
@ 2377 train 4.8124 , allloss: 4.8130, dt: 1305.92ms, fracRes: 0.7027, norm(attn): 0.1943, norm(output): 0.9335, norm(x): 0.7537, norm(y): 1.0105, norm:0.8854, tok/sec: 100367.24, flops:105.35, batch-reuse:1
@ 2378 train 4.7793 , allloss: 4.7797, dt: 1306.60ms, fracRes: 0.7026, norm(attn): 0.1973, norm(output): 0.9335, norm(x): 0.7539, norm(y): 1.0105, norm:0.8935, tok/sec: 100315.24, flops:105.29, batch-reuse:1
@ 2379 train 4.7155 , allloss: 4.7157, dt: 1349.72ms, fracRes: 0.7025, norm(attn): 0.1953, norm(output): 0.9335, norm(x): 0.7538, norm(y): 1.0106, norm:0.6764, tok/sec: 97110.43, flops:101.93, batch-reuse:1
@ 2380 train 5.0004 , allloss: 5.0006, dt: 1311.80ms, fracRes: 0.7028, norm(attn): 0.1904, norm(output): 0.9336, norm(x): 0.7543, norm(y): 1.0107, norm:1.0075, tok/sec: 99917.74, flops:104.88, batch-reuse:1
@ 2381 train 4.8589 , allloss: 4.8589, dt: 1283.14ms, fracRes: 0.7027, norm(attn): 0.1953, norm(output): 0.9337, norm(x): 0.7547, norm(y): 1.0105, norm:0.7451, tok/sec: 102149.36, flops:107.22, batch-reuse:1
@ 2382 train 4.8121 , allloss: 4.8122, dt: 1303.31ms, fracRes: 0.7026, norm(attn): 0.1934, norm(output): 0.9337, norm(x): 0.7542, norm(y): 1.0107, norm:0.7934, tok/sec: 100568.87, flops:105.56, batch-reuse:1
@ 2383 train 4.8028 , allloss: 4.8031, dt: 1320.07ms, fracRes: 0.7025, norm(attn): 0.1943, norm(output): 0.9336, norm(x): 0.7543, norm(y): 1.0103, norm:0.8794, tok/sec: 99291.42, flops:104.22, batch-reuse:1
@ 2384 train 4.8254 , allloss: 4.8255, dt: 1340.59ms, fracRes: 0.7028, norm(attn): 0.1914, norm(output): 0.9336, norm(x): 0.7537, norm(y): 1.0102, norm:0.8558, tok/sec: 97771.88, flops:102.62, batch-reuse:1
@ 2385 train 4.8009 , allloss: 4.8013, dt: 1287.24ms, fracRes: 0.7028, norm(attn): 0.1914, norm(output): 0.9336, norm(x): 0.7537, norm(y): 1.0104, norm:0.7928, tok/sec: 101824.17, flops:106.88, batch-reuse:1
@ 2386 train 4.7354 , allloss: 4.7362, dt: 1309.21ms, fracRes: 0.7027, norm(attn): 0.1963, norm(output): 0.9336, norm(x): 0.7540, norm(y): 1.0106, norm:0.7801, tok/sec: 100115.00, flops:105.08, batch-reuse:1
@ 2387 train 4.7894 , allloss: 4.7895, dt: 1334.30ms, fracRes: 0.7026, norm(attn): 0.1934, norm(output): 0.9337, norm(x): 0.7543, norm(y): 1.0105, norm:0.7918, tok/sec: 98232.62, flops:103.11, batch-reuse:1
@ 2388 train 4.8263 , allloss: 4.8265, dt: 1316.74ms, fracRes: 0.7028, norm(attn): 0.1904, norm(output): 0.9337, norm(x): 0.7540, norm(y): 1.0103, norm:0.8415, tok/sec: 99542.48, flops:104.48, batch-reuse:1
@ 2389 train 4.7542 , allloss: 4.7543, dt: 1285.28ms, fracRes: 0.7028, norm(attn): 0.1914, norm(output): 0.9337, norm(x): 0.7539, norm(y): 1.0100, norm:0.8720, tok/sec: 101978.96, flops:107.04, batch-reuse:1
@ 2390 train 4.8299 , allloss: 4.8300, dt: 1306.58ms, fracRes: 0.7029, norm(attn): 0.1924, norm(output): 0.9335, norm(x): 0.7539, norm(y): 1.0102, norm:0.8265, tok/sec: 100316.69, flops:105.30, batch-reuse:1
@ 2391 train 4.8842 , allloss: 4.8844, dt: 1311.25ms, fracRes: 0.7028, norm(attn): 0.1924, norm(output): 0.9335, norm(x): 0.7540, norm(y): 1.0103, norm:0.8565, tok/sec: 99959.64, flops:104.92, batch-reuse:1
@ 2392 train 4.8198 , allloss: 4.8201, dt: 1307.06ms, fracRes: 0.7027, norm(attn): 0.1914, norm(output): 0.9336, norm(x): 0.7537, norm(y): 1.0103, norm:0.6650, tok/sec: 100280.00, flops:105.26, batch-reuse:1
@ 2393 train 4.9556 , allloss: 4.9557, dt: 1281.91ms, fracRes: 0.7030, norm(attn): 0.1904, norm(output): 0.9336, norm(x): 0.7536, norm(y): 1.0102, norm:0.8224, tok/sec: 102247.68, flops:107.32, batch-reuse:1
@ 2394 train 4.8326 , allloss: 4.8327, dt: 1296.78ms, fracRes: 0.7027, norm(attn): 0.1904, norm(output): 0.9337, norm(x): 0.7538, norm(y): 1.0102, norm:0.7120, tok/sec: 101074.83, flops:106.09, batch-reuse:1
@ 2395 train 4.7942 , allloss: 4.7945, dt: 1278.37ms, fracRes: 0.7028, norm(attn): 0.1934, norm(output): 0.9335, norm(x): 0.7534, norm(y): 1.0103, norm:0.8410, tok/sec: 102530.50, flops:107.62, batch-reuse:1
@ 2396 train 4.7903 , allloss: 4.7905, dt: 1286.98ms, fracRes: 0.7024, norm(attn): 0.1943, norm(output): 0.9336, norm(x): 0.7539, norm(y): 1.0104, norm:0.8720, tok/sec: 101844.77, flops:106.90, batch-reuse:1
@ 2397 train 4.7368 , allloss: 4.7373, dt: 1297.64ms, fracRes: 0.7023, norm(attn): 0.1973, norm(output): 0.9336, norm(x): 0.7535, norm(y): 1.0105, norm:0.7271, tok/sec: 101007.81, flops:106.02, batch-reuse:1
@ 2398 train 4.8478 , allloss: 4.8496, dt: 1318.48ms, fracRes: 0.7023, norm(attn): 0.1963, norm(output): 0.9334, norm(x): 0.7529, norm(y): 1.0106, norm:0.7766, tok/sec: 99411.82, flops:104.35, batch-reuse:1
@ 2399 train 4.7594 , allloss: 4.7594, dt: 1295.54ms, fracRes: 0.7023, norm(attn): 0.1982, norm(output): 0.9335, norm(x): 0.7528, norm(y): 1.0105, norm:0.7389, tok/sec: 101171.82, flops:106.19, batch-reuse:1
@ 2400 train 4.7526 , allloss: 4.7530, dt: 1315.71ms, fracRes: 0.7025, norm(attn): 0.1934, norm(output): 0.9335, norm(x): 0.7535, norm(y): 1.0103, norm:0.7482, tok/sec: 99621.02, flops:104.57, batch-reuse:1
@ 2401 train 4.8563 , allloss: 4.8564, dt: 1341.61ms, fracRes: 0.7025, norm(attn): 0.1895, norm(output): 0.9337, norm(x): 0.7541, norm(y): 1.0104, norm:0.8630, tok/sec: 97697.55, flops:102.55, batch-reuse:1
@ 2402 train 4.8418 , allloss: 4.8419, dt: 1336.62ms, fracRes: 0.7027, norm(attn): 0.1885, norm(output): 0.9336, norm(x): 0.7540, norm(y): 1.0104, norm:0.7827, tok/sec: 98062.43, flops:102.93, batch-reuse:1
@ 2403 train 4.6990 , allloss: 4.7010, dt: 1308.36ms, fracRes: 0.7028, norm(attn): 0.1914, norm(output): 0.9336, norm(x): 0.7540, norm(y): 1.0103, norm:0.7177, tok/sec: 100180.72, flops:105.15, batch-reuse:1
@ 2404 train 4.7251 , allloss: 4.7252, dt: 1307.52ms, fracRes: 0.7027, norm(attn): 0.1914, norm(output): 0.9337, norm(x): 0.7548, norm(y): 1.0100, norm:0.7275, tok/sec: 100244.71, flops:105.22, batch-reuse:1
@ 2405 train 4.8095 , allloss: 4.8097, dt: 1325.78ms, fracRes: 0.7027, norm(attn): 0.1885, norm(output): 0.9337, norm(x): 0.7549, norm(y): 1.0100, norm:0.7156, tok/sec: 98864.20, flops:103.77, batch-reuse:1
@ 2406 train 4.7447 , allloss: 4.7453, dt: 1314.43ms, fracRes: 0.7027, norm(attn): 0.1895, norm(output): 0.9337, norm(x): 0.7549, norm(y): 1.0102, norm:0.7285, tok/sec: 99717.77, flops:104.67, batch-reuse:1
@ 2407 train 4.7411 , allloss: 4.7412, dt: 1292.44ms, fracRes: 0.7026, norm(attn): 0.1885, norm(output): 0.9337, norm(x): 0.7548, norm(y): 1.0103, norm:0.8044, tok/sec: 101414.10, flops:106.45, batch-reuse:1
@ 2408 train 4.7676 , allloss: 4.7683, dt: 1312.86ms, fracRes: 0.7027, norm(attn): 0.1885, norm(output): 0.9337, norm(x): 0.7543, norm(y): 1.0104, norm:0.7174, tok/sec: 99837.21, flops:104.79, batch-reuse:1
@ 2409 train 4.7803 , allloss: 4.7803, dt: 1295.56ms, fracRes: 0.7027, norm(attn): 0.1904, norm(output): 0.9337, norm(x): 0.7536, norm(y): 1.0103, norm:0.8085, tok/sec: 101169.84, flops:106.19, batch-reuse:1
@ 2410 train 4.7481 , allloss: 4.7481, dt: 1299.47ms, fracRes: 0.7028, norm(attn): 0.1914, norm(output): 0.9337, norm(x): 0.7542, norm(y): 1.0099, norm:0.7428, tok/sec: 100865.87, flops:105.87, batch-reuse:1
@ 2411 train 4.7652 , allloss: 4.7653, dt: 1313.58ms, fracRes: 0.7027, norm(attn): 0.1934, norm(output): 0.9338, norm(x): 0.7542, norm(y): 1.0101, norm:0.9767, tok/sec: 99782.53, flops:104.73, batch-reuse:1
@ 2412 train 4.8539 , allloss: 4.8541, dt: 1302.86ms, fracRes: 0.7028, norm(attn): 0.1924, norm(output): 0.9337, norm(x): 0.7537, norm(y): 1.0101, norm:0.9458, tok/sec: 100603.56, flops:105.60, batch-reuse:1
@ 2413 train 4.8673 , allloss: 4.8679, dt: 1284.60ms, fracRes: 0.7027, norm(attn): 0.1914, norm(output): 0.9335, norm(x): 0.7533, norm(y): 1.0105, norm:0.9607, tok/sec: 102033.43, flops:107.10, batch-reuse:1
@ 2414 train 4.8588 , allloss: 4.8589, dt: 1310.62ms, fracRes: 0.7026, norm(attn): 0.1914, norm(output): 0.9335, norm(x): 0.7538, norm(y): 1.0105, norm:0.8522, tok/sec: 100007.99, flops:104.97, batch-reuse:1
@ 2415 train 4.9570 , allloss: 4.9571, dt: 1333.64ms, fracRes: 0.7026, norm(attn): 0.1924, norm(output): 0.9338, norm(x): 0.7540, norm(y): 1.0102, norm:0.8998, tok/sec: 98281.32, flops:103.16, batch-reuse:1
@ 2416 train 4.9068 , allloss: 4.9070, dt: 1317.66ms, fracRes: 0.7026, norm(attn): 0.1982, norm(output): 0.9338, norm(x): 0.7541, norm(y): 1.0102, norm:0.9277, tok/sec: 99473.14, flops:104.41, batch-reuse:1
@ 2417 train 4.9235 , allloss: 4.9236, dt: 1326.93ms, fracRes: 0.7029, norm(attn): 0.1982, norm(output): 0.9339, norm(x): 0.7543, norm(y): 1.0102, norm:0.8889, tok/sec: 98778.20, flops:103.68, batch-reuse:1
@ 2418 train 5.0249 , allloss: 5.0250, dt: 1308.53ms, fracRes: 0.7029, norm(attn): 0.1934, norm(output): 0.9337, norm(x): 0.7541, norm(y): 1.0103, norm:1.0641, tok/sec: 100167.28, flops:105.14, batch-reuse:1
@ 2419 train 5.0364 , allloss: 5.0365, dt: 1341.33ms, fracRes: 0.7028, norm(attn): 0.1934, norm(output): 0.9337, norm(x): 0.7532, norm(y): 1.0102, norm:0.7597, tok/sec: 97717.64, flops:102.57, batch-reuse:1
@ 2420 train 4.9669 , allloss: 4.9670, dt: 1332.08ms, fracRes: 0.7027, norm(attn): 0.1943, norm(output): 0.9337, norm(x): 0.7533, norm(y): 1.0103, norm:0.8302, tok/sec: 98396.24, flops:103.28, batch-reuse:1
@ 2421 train 4.9389 , allloss: 4.9390, dt: 1273.99ms, fracRes: 0.7028, norm(attn): 0.1953, norm(output): 0.9337, norm(x): 0.7539, norm(y): 1.0101, norm:0.6045, tok/sec: 102883.44, flops:107.99, batch-reuse:1
@ 2422 train 5.0229 , allloss: 5.0230, dt: 1309.65ms, fracRes: 0.7030, norm(attn): 0.1973, norm(output): 0.9336, norm(x): 0.7539, norm(y): 1.0101, norm:0.7213, tok/sec: 100081.54, flops:105.05, batch-reuse:1
@ 2423 train 5.0544 , allloss: 5.0545, dt: 1340.59ms, fracRes: 0.7028, norm(attn): 0.1943, norm(output): 0.9336, norm(x): 0.7531, norm(y): 1.0102, norm:0.7707, tok/sec: 97771.70, flops:102.62, batch-reuse:1
@ 2424 train 4.9466 , allloss: 4.9468, dt: 1309.33ms, fracRes: 0.7025, norm(attn): 0.1963, norm(output): 0.9336, norm(x): 0.7529, norm(y): 1.0105, norm:0.8553, tok/sec: 100106.07, flops:105.07, batch-reuse:1
@ 2425 train 4.8664 , allloss: 4.8667, dt: 1295.01ms, fracRes: 0.7026, norm(attn): 0.1963, norm(output): 0.9336, norm(x): 0.7534, norm(y): 1.0103, norm:0.7522, tok/sec: 101212.83, flops:106.24, batch-reuse:1
@ 2426 train 4.9383 , allloss: 4.9386, dt: 1308.83ms, fracRes: 0.7025, norm(attn): 0.1924, norm(output): 0.9337, norm(x): 0.7539, norm(y): 1.0102, norm:0.8668, tok/sec: 100144.27, flops:105.11, batch-reuse:1
@ 2427 train 5.0265 , allloss: 5.0266, dt: 1293.39ms, fracRes: 0.7025, norm(attn): 0.1914, norm(output): 0.9338, norm(x): 0.7540, norm(y): 1.0102, norm:0.8553, tok/sec: 101340.06, flops:106.37, batch-reuse:1
@ 2428 train 4.9489 , allloss: 4.9490, dt: 1304.72ms, fracRes: 0.7023, norm(attn): 0.1914, norm(output): 0.9337, norm(x): 0.7539, norm(y): 1.0107, norm:0.6823, tok/sec: 100459.82, flops:105.45, batch-reuse:1
@ 2429 train 4.9200 , allloss: 4.9202, dt: 1301.87ms, fracRes: 0.7024, norm(attn): 0.1914, norm(output): 0.9337, norm(x): 0.7538, norm(y): 1.0107, norm:0.8930, tok/sec: 100679.49, flops:105.68, batch-reuse:1
@ 2430 train 4.9492 , allloss: 4.9492, dt: 1303.29ms, fracRes: 0.7025, norm(attn): 0.1914, norm(output): 0.9337, norm(x): 0.7536, norm(y): 1.0106, norm:0.8181, tok/sec: 100569.75, flops:105.56, batch-reuse:1
@ 2431 train 4.9538 , allloss: 4.9539, dt: 1288.80ms, fracRes: 0.7026, norm(attn): 0.1943, norm(output): 0.9337, norm(x): 0.7539, norm(y): 1.0104, norm:0.9891, tok/sec: 101701.16, flops:106.75, batch-reuse:1
@ 2432 train 4.8271 , allloss: 4.8273, dt: 1301.01ms, fracRes: 0.7026, norm(attn): 0.1953, norm(output): 0.9337, norm(x): 0.7548, norm(y): 1.0103, norm:0.9738, tok/sec: 100746.24, flops:105.75, batch-reuse:1
@ 2433 train 4.9294 , allloss: 4.9295, dt: 1314.01ms, fracRes: 0.7027, norm(attn): 0.1924, norm(output): 0.9337, norm(x): 0.7542, norm(y): 1.0103, norm:0.8599, tok/sec: 99749.88, flops:104.70, batch-reuse:1
@ 2434 train 4.9866 , allloss: 4.9867, dt: 1305.75ms, fracRes: 0.7030, norm(attn): 0.1914, norm(output): 0.9336, norm(x): 0.7538, norm(y): 1.0102, norm:0.6372, tok/sec: 100380.91, flops:105.36, batch-reuse:1
@ 2435 train 4.9633 , allloss: 4.9635, dt: 1309.31ms, fracRes: 0.7030, norm(attn): 0.1904, norm(output): 0.9337, norm(x): 0.7536, norm(y): 1.0102, norm:0.8317, tok/sec: 100107.51, flops:105.08, batch-reuse:1
@ 2436 train 4.9529 , allloss: 4.9530, dt: 1328.74ms, fracRes: 0.7028, norm(attn): 0.1914, norm(output): 0.9337, norm(x): 0.7537, norm(y): 1.0104, norm:1.0231, tok/sec: 98644.19, flops:103.54, batch-reuse:1
@ 2437 train 4.9029 , allloss: 4.9030, dt: 1293.01ms, fracRes: 0.7028, norm(attn): 0.1934, norm(output): 0.9337, norm(x): 0.7534, norm(y): 1.0100, norm:1.0570, tok/sec: 101369.56, flops:106.40, batch-reuse:1
@ 2438 train 4.9132 , allloss: 4.9133, dt: 1309.85ms, fracRes: 0.7028, norm(attn): 0.1934, norm(output): 0.9338, norm(x): 0.7535, norm(y): 1.0102, norm:0.7228, tok/sec: 100066.31, flops:105.03, batch-reuse:1
@ 2439 train 4.9476 , allloss: 4.9477, dt: 1329.08ms, fracRes: 0.7026, norm(attn): 0.1914, norm(output): 0.9338, norm(x): 0.7538, norm(y): 1.0106, norm:0.8699, tok/sec: 98618.60, flops:103.51, batch-reuse:1
@ 2440 train 5.0481 , allloss: 5.0482, dt: 1294.07ms, fracRes: 0.7029, norm(attn): 0.1973, norm(output): 0.9335, norm(x): 0.7534, norm(y): 1.0104, norm:1.0696, tok/sec: 101286.66, flops:106.31, batch-reuse:1
@ 2441 train 4.8848 , allloss: 4.8849, dt: 1308.77ms, fracRes: 0.7028, norm(attn): 0.1953, norm(output): 0.9336, norm(x): 0.7535, norm(y): 1.0100, norm:0.9231, tok/sec: 100148.87, flops:105.12, batch-reuse:1
@ 2442 train 4.9025 , allloss: 4.9029, dt: 1313.32ms, fracRes: 0.7027, norm(attn): 0.2012, norm(output): 0.9336, norm(x): 0.7531, norm(y): 1.0102, norm:0.7740, tok/sec: 99801.94, flops:104.76, batch-reuse:1
@ 2443 train 5.0142 , allloss: 5.0143, dt: 1289.99ms, fracRes: 0.7027, norm(attn): 0.2002, norm(output): 0.9337, norm(x): 0.7529, norm(y): 1.0103, norm:0.7928, tok/sec: 101607.22, flops:106.65, batch-reuse:1
@ 2444 train 4.8868 , allloss: 4.8869, dt: 1310.43ms, fracRes: 0.7025, norm(attn): 0.1973, norm(output): 0.9336, norm(x): 0.7529, norm(y): 1.0106, norm:0.8095, tok/sec: 100021.85, flops:104.99, batch-reuse:1
@ 2445 train 4.8554 , allloss: 4.8556, dt: 1295.63ms, fracRes: 0.7024, norm(attn): 0.1973, norm(output): 0.9336, norm(x): 0.7530, norm(y): 1.0104, norm:0.6833, tok/sec: 101164.89, flops:106.19, batch-reuse:1
@ 2446 train 5.0751 , allloss: 5.0752, dt: 1291.07ms, fracRes: 0.7025, norm(attn): 0.1943, norm(output): 0.9338, norm(x): 0.7536, norm(y): 1.0101, norm:0.8004, tok/sec: 101522.16, flops:106.56, batch-reuse:1
@ 2447 train 5.0070 , allloss: 5.0071, dt: 1288.57ms, fracRes: 0.7026, norm(attn): 0.1953, norm(output): 0.9338, norm(x): 0.7537, norm(y): 1.0100, norm:0.9777, tok/sec: 101718.65, flops:106.77, batch-reuse:1
@ 2448 train 4.9371 , allloss: 4.9372, dt: 1328.97ms, fracRes: 0.7028, norm(attn): 0.1943, norm(output): 0.9338, norm(x): 0.7537, norm(y): 1.0100, norm:1.1378, tok/sec: 98626.92, flops:103.52, batch-reuse:1
@ 2449 train 4.9313 , allloss: 4.9313, dt: 1362.65ms, fracRes: 0.7032, norm(attn): 0.1953, norm(output): 0.9339, norm(x): 0.7533, norm(y): 1.0097, norm:0.7910, tok/sec: 96189.20, flops:100.96, batch-reuse:1
@ 2450 train 4.9047 , allloss: 4.9048, dt: 1304.13ms, fracRes: 0.7031, norm(attn): 0.1934, norm(output): 0.9338, norm(x): 0.7535, norm(y): 1.0101, norm:0.9661, tok/sec: 100505.05, flops:105.49, batch-reuse:1
@ 2451 train 5.0427 , allloss: 5.0432, dt: 1288.68ms, fracRes: 0.7031, norm(attn): 0.1934, norm(output): 0.9338, norm(x): 0.7539, norm(y): 1.0099, norm:1.0105, tok/sec: 101710.55, flops:106.76, batch-reuse:1
@ 2452 train 4.9277 , allloss: 4.9277, dt: 1336.69ms, fracRes: 0.7027, norm(attn): 0.1934, norm(output): 0.9337, norm(x): 0.7542, norm(y): 1.0102, norm:1.1064, tok/sec: 98057.35, flops:102.92, batch-reuse:1
@ 2453 train 4.8789 , allloss: 4.8789, dt: 1322.05ms, fracRes: 0.7025, norm(attn): 0.1934, norm(output): 0.9338, norm(x): 0.7547, norm(y): 1.0100, norm:0.8615, tok/sec: 99143.29, flops:104.06, batch-reuse:1
@ 2454 train 4.8680 , allloss: 4.8681, dt: 1319.57ms, fracRes: 0.7024, norm(attn): 0.1943, norm(output): 0.9337, norm(x): 0.7544, norm(y): 1.0101, norm:0.9145, tok/sec: 99329.52, flops:104.26, batch-reuse:1
@ 2455 train 5.0066 , allloss: 5.0067, dt: 1319.39ms, fracRes: 0.7024, norm(attn): 0.1904, norm(output): 0.9338, norm(x): 0.7546, norm(y): 1.0102, norm:0.9086, tok/sec: 99342.64, flops:104.27, batch-reuse:1
@ 2456 train 4.9289 , allloss: 4.9290, dt: 1281.38ms, fracRes: 0.7028, norm(attn): 0.1914, norm(output): 0.9340, norm(x): 0.7539, norm(y): 1.0101, norm:0.8506, tok/sec: 102289.53, flops:107.37, batch-reuse:1
@ 2457 train 5.1017 , allloss: 5.1017, dt: 1310.37ms, fracRes: 0.7031, norm(attn): 0.1914, norm(output): 0.9340, norm(x): 0.7537, norm(y): 1.0100, norm:0.8077, tok/sec: 100026.71, flops:104.99, batch-reuse:1
@ 2458 train 4.8196 , allloss: 4.8201, dt: 1319.50ms, fracRes: 0.7031, norm(attn): 0.1924, norm(output): 0.9338, norm(x): 0.7538, norm(y): 1.0099, norm:0.8008, tok/sec: 99334.31, flops:104.26, batch-reuse:1
@ 2459 train 4.9369 , allloss: 4.9375, dt: 1293.45ms, fracRes: 0.7032, norm(attn): 0.1914, norm(output): 0.9338, norm(x): 0.7537, norm(y): 1.0097, norm:0.6936, tok/sec: 101335.22, flops:106.36, batch-reuse:1
@ 2460 train 5.0881 , allloss: 5.0884, dt: 1287.44ms, fracRes: 0.7034, norm(attn): 0.1934, norm(output): 0.9339, norm(x): 0.7534, norm(y): 1.0096, norm:0.7034, tok/sec: 101808.33, flops:106.86, batch-reuse:1
@ 2461 train 4.8903 , allloss: 4.8911, dt: 1284.38ms, fracRes: 0.7030, norm(attn): 0.1914, norm(output): 0.9337, norm(x): 0.7536, norm(y): 1.0097, norm:0.8955, tok/sec: 102050.46, flops:107.12, batch-reuse:1
@ 2462 train 4.9549 , allloss: 4.9565, dt: 1290.51ms, fracRes: 0.7027, norm(attn): 0.1934, norm(output): 0.9337, norm(x): 0.7535, norm(y): 1.0100, norm:0.8460, tok/sec: 101566.43, flops:106.61, batch-reuse:1
@ 2463 train 4.9879 , allloss: 4.9880, dt: 1325.23ms, fracRes: 0.7025, norm(attn): 0.1953, norm(output): 0.9337, norm(x): 0.7534, norm(y): 1.0101, norm:0.8223, tok/sec: 98904.82, flops:103.81, batch-reuse:1
@ 2464 train 4.9243 , allloss: 4.9245, dt: 1329.12ms, fracRes: 0.7026, norm(attn): 0.1924, norm(output): 0.9338, norm(x): 0.7534, norm(y): 1.0099, norm:0.6310, tok/sec: 98615.49, flops:103.51, batch-reuse:1
@ 2465 train 4.7953 , allloss: 4.7957, dt: 1322.88ms, fracRes: 0.7026, norm(attn): 0.1924, norm(output): 0.9339, norm(x): 0.7533, norm(y): 1.0098, norm:0.8107, tok/sec: 99080.99, flops:104.00, batch-reuse:1
@ 2466 train 4.9947 , allloss: 4.9953, dt: 1343.87ms, fracRes: 0.7027, norm(attn): 0.1934, norm(output): 0.9339, norm(x): 0.7533, norm(y): 1.0099, norm:0.7882, tok/sec: 97533.21, flops:102.37, batch-reuse:1
@ 2467 train 4.8570 , allloss: 4.8575, dt: 1280.87ms, fracRes: 0.7027, norm(attn): 0.1934, norm(output): 0.9340, norm(x): 0.7537, norm(y): 1.0099, norm:0.7483, tok/sec: 102330.45, flops:107.41, batch-reuse:1
@ 2468 train 4.9235 , allloss: 4.9239, dt: 1303.90ms, fracRes: 0.7028, norm(attn): 0.1914, norm(output): 0.9340, norm(x): 0.7534, norm(y): 1.0099, norm:0.6241, tok/sec: 100523.27, flops:105.51, batch-reuse:1
@ 2469 train 5.0372 , allloss: 5.0374, dt: 1299.84ms, fracRes: 0.7030, norm(attn): 0.1904, norm(output): 0.9340, norm(x): 0.7532, norm(y): 1.0097, norm:0.7206, tok/sec: 100837.36, flops:105.84, batch-reuse:1
@ 2470 train 4.8619 , allloss: 4.8619, dt: 1305.87ms, fracRes: 0.7030, norm(attn): 0.1904, norm(output): 0.9340, norm(x): 0.7530, norm(y): 1.0098, norm:0.8052, tok/sec: 100371.36, flops:105.35, batch-reuse:1
@ 2471 train 4.8494 , allloss: 4.8495, dt: 1331.19ms, fracRes: 0.7027, norm(attn): 0.1924, norm(output): 0.9340, norm(x): 0.7534, norm(y): 1.0099, norm:0.7354, tok/sec: 98461.92, flops:103.35, batch-reuse:1
@ 2472 train 4.9311 , allloss: 4.9317, dt: 1294.79ms, fracRes: 0.7026, norm(attn): 0.1904, norm(output): 0.9340, norm(x): 0.7539, norm(y): 1.0100, norm:0.9333, tok/sec: 101230.26, flops:106.25, batch-reuse:1
@ 2473 train 4.8183 , allloss: 4.8185, dt: 1302.69ms, fracRes: 0.7026, norm(attn): 0.1914, norm(output): 0.9339, norm(x): 0.7535, norm(y): 1.0096, norm:0.7425, tok/sec: 100616.18, flops:105.61, batch-reuse:1
@ 2474 train 4.8523 , allloss: 4.8524, dt: 1280.33ms, fracRes: 0.7029, norm(attn): 0.1914, norm(output): 0.9338, norm(x): 0.7526, norm(y): 1.0096, norm:0.6752, tok/sec: 102373.71, flops:107.45, batch-reuse:1
@ 2475 train 4.9510 , allloss: 4.9512, dt: 1294.74ms, fracRes: 0.7030, norm(attn): 0.1934, norm(output): 0.9339, norm(x): 0.7521, norm(y): 1.0097, norm:0.7058, tok/sec: 101233.85, flops:106.26, batch-reuse:1
@ 2476 train 4.9371 , allloss: 4.9372, dt: 1300.22ms, fracRes: 0.7030, norm(attn): 0.1934, norm(output): 0.9338, norm(x): 0.7524, norm(y): 1.0098, norm:0.7426, tok/sec: 100807.59, flops:105.81, batch-reuse:1
@ 2477 train 4.8982 , allloss: 4.8983, dt: 1302.06ms, fracRes: 0.7028, norm(attn): 0.1914, norm(output): 0.9339, norm(x): 0.7529, norm(y): 1.0098, norm:0.7345, tok/sec: 100664.96, flops:105.66, batch-reuse:1
@ 2478 train 4.8467 , allloss: 4.8469, dt: 1333.97ms, fracRes: 0.7028, norm(attn): 0.1934, norm(output): 0.9339, norm(x): 0.7534, norm(y): 1.0095, norm:0.6500, tok/sec: 98256.80, flops:103.13, batch-reuse:1
@ 2479 train 4.8321 , allloss: 4.8322, dt: 1343.76ms, fracRes: 0.7028, norm(attn): 0.1943, norm(output): 0.9340, norm(x): 0.7538, norm(y): 1.0095, norm:0.6427, tok/sec: 97541.14, flops:102.38, batch-reuse:1
@ 2480 train 4.9345 , allloss: 4.9351, dt: 1302.82ms, fracRes: 0.7029, norm(attn): 0.1953, norm(output): 0.9340, norm(x): 0.7541, norm(y): 1.0094, norm:0.5660, tok/sec: 100606.40, flops:105.60, batch-reuse:1
@ 2481 train 4.8868 , allloss: 4.8870, dt: 1298.21ms, fracRes: 0.7027, norm(attn): 0.1953, norm(output): 0.9338, norm(x): 0.7539, norm(y): 1.0094, norm:0.6662, tok/sec: 100963.27, flops:105.97, batch-reuse:1
@ 2482 train 4.9986 , allloss: 4.9988, dt: 1296.01ms, fracRes: 0.7025, norm(attn): 0.1914, norm(output): 0.9339, norm(x): 0.7535, norm(y): 1.0098, norm:0.6389, tok/sec: 101135.15, flops:106.15, batch-reuse:1
@ 2483 train 4.9657 , allloss: 4.9658, dt: 1306.41ms, fracRes: 0.7025, norm(attn): 0.1934, norm(output): 0.9338, norm(x): 0.7533, norm(y): 1.0101, norm:0.7856, tok/sec: 100329.87, flops:105.31, batch-reuse:1
@ 2484 train 4.9258 , allloss: 4.9260, dt: 1322.61ms, fracRes: 0.7026, norm(attn): 0.1973, norm(output): 0.9338, norm(x): 0.7534, norm(y): 1.0100, norm:0.6490, tok/sec: 99100.65, flops:104.02, batch-reuse:1
@ 2485 train 4.8099 , allloss: 4.8102, dt: 1330.57ms, fracRes: 0.7026, norm(attn): 0.1924, norm(output): 0.9338, norm(x): 0.7534, norm(y): 1.0098, norm:0.8803, tok/sec: 98508.19, flops:103.40, batch-reuse:1
@ 2486 train 4.8597 , allloss: 4.8599, dt: 1293.68ms, fracRes: 0.7028, norm(attn): 0.1914, norm(output): 0.9338, norm(x): 0.7531, norm(y): 1.0096, norm:0.8255, tok/sec: 101317.38, flops:106.35, batch-reuse:1
@ 2487 train 4.9604 , allloss: 4.9607, dt: 1321.13ms, fracRes: 0.7027, norm(attn): 0.1914, norm(output): 0.9338, norm(x): 0.7536, norm(y): 1.0098, norm:0.8326, tok/sec: 99211.68, flops:104.14, batch-reuse:1
@ 2488 train 4.9253 , allloss: 4.9255, dt: 1328.82ms, fracRes: 0.7026, norm(attn): 0.1973, norm(output): 0.9339, norm(x): 0.7543, norm(y): 1.0097, norm:1.0020, tok/sec: 98637.85, flops:103.53, batch-reuse:1
@ 2489 train 4.8895 , allloss: 4.8897, dt: 1310.28ms, fracRes: 0.7026, norm(attn): 0.1963, norm(output): 0.9339, norm(x): 0.7538, norm(y): 1.0098, norm:1.2301, tok/sec: 100033.68, flops:105.00, batch-reuse:1
@ 2490 train 4.8728 , allloss: 4.8731, dt: 1290.25ms, fracRes: 0.7029, norm(attn): 0.1982, norm(output): 0.9340, norm(x): 0.7531, norm(y): 1.0097, norm:0.9516, tok/sec: 101586.42, flops:106.63, batch-reuse:1
@ 2491 train 4.9900 , allloss: 4.9902, dt: 1291.98ms, fracRes: 0.7032, norm(attn): 0.1914, norm(output): 0.9340, norm(x): 0.7530, norm(y): 1.0096, norm:0.9108, tok/sec: 101450.77, flops:106.49, batch-reuse:1
@ 2492 train 4.9791 , allloss: 4.9794, dt: 1313.20ms, fracRes: 0.7033, norm(attn): 0.1943, norm(output): 0.9341, norm(x): 0.7541, norm(y): 1.0095, norm:1.1060, tok/sec: 99811.24, flops:104.77, batch-reuse:1
@ 2493 train 4.9126 , allloss: 4.9127, dt: 1306.97ms, fracRes: 0.7032, norm(attn): 0.1973, norm(output): 0.9340, norm(x): 0.7539, norm(y): 1.0098, norm:0.7944, tok/sec: 100287.24, flops:105.26, batch-reuse:1
@ 2494 train 4.8710 , allloss: 4.8712, dt: 1299.48ms, fracRes: 0.7030, norm(attn): 0.1992, norm(output): 0.9340, norm(x): 0.7537, norm(y): 1.0099, norm:0.7545, tok/sec: 100864.61, flops:105.87, batch-reuse:1
@ 2495 train 4.8797 , allloss: 4.8798, dt: 1314.83ms, fracRes: 0.7030, norm(attn): 0.1992, norm(output): 0.9339, norm(x): 0.7534, norm(y): 1.0097, norm:0.7376, tok/sec: 99687.48, flops:104.64, batch-reuse:1
@ 2496 train 4.8106 , allloss: 4.8108, dt: 1301.49ms, fracRes: 0.7026, norm(attn): 0.2002, norm(output): 0.9339, norm(x): 0.7540, norm(y): 1.0098, norm:0.8878, tok/sec: 100708.85, flops:105.71, batch-reuse:1
@ 2497 train 4.9042 , allloss: 4.9044, dt: 1290.69ms, fracRes: 0.7029, norm(attn): 0.2021, norm(output): 0.9340, norm(x): 0.7547, norm(y): 1.0096, norm:1.0658, tok/sec: 101551.49, flops:106.59, batch-reuse:1
@ 2498 train 4.9237 , allloss: 4.9238, dt: 1291.76ms, fracRes: 0.7030, norm(attn): 0.2021, norm(output): 0.9340, norm(x): 0.7547, norm(y): 1.0098, norm:0.9697, tok/sec: 101467.51, flops:106.50, batch-reuse:1
@ 2499 train 4.8914 , allloss: 4.8916, dt: 1311.08ms, fracRes: 0.7031, norm(attn): 0.2031, norm(output): 0.9341, norm(x): 0.7542, norm(y): 1.0097, norm:0.7018, tok/sec: 99972.33, flops:104.93, batch-reuse:1
@ 2500 train 4.8990 , allloss: 4.9000, dt: 1286.82ms, fracRes: 0.7032, norm(attn): 0.2031, norm(output): 0.9340, norm(x): 0.7541, norm(y): 1.0096, norm:0.8827, tok/sec: 101856.92, flops:106.91, batch-reuse:1
@ 2501 train 4.8677 , allloss: 4.8679, dt: 1278.90ms, fracRes: 0.7030, norm(attn): 0.2031, norm(output): 0.9339, norm(x): 0.7535, norm(y): 1.0098, norm:0.8978, tok/sec: 102488.14, flops:107.57, batch-reuse:1
@ 2502 train 5.0189 , allloss: 5.0191, dt: 1289.85ms, fracRes: 0.7028, norm(attn): 0.2002, norm(output): 0.9340, norm(x): 0.7540, norm(y): 1.0100, norm:1.8465, tok/sec: 101617.91, flops:106.66, batch-reuse:1
@ 2503 train 4.9137 , allloss: 4.9139, dt: 1310.61ms, fracRes: 0.7029, norm(attn): 0.2051, norm(output): 0.9340, norm(x): 0.7536, norm(y): 1.0098, norm:1.0424, tok/sec: 100008.44, flops:104.97, batch-reuse:1
@ 2504 train 4.9524 , allloss: 4.9528, dt: 1333.36ms, fracRes: 0.7030, norm(attn): 0.2100, norm(output): 0.9340, norm(x): 0.7529, norm(y): 1.0093, norm:0.9492, tok/sec: 98302.32, flops:103.18, batch-reuse:1
@ 2505 train 4.9394 , allloss: 4.9398, dt: 1340.95ms, fracRes: 0.7032, norm(attn): 0.2129, norm(output): 0.9338, norm(x): 0.7519, norm(y): 1.0091, norm:1.0097, tok/sec: 97745.82, flops:102.60, batch-reuse:1
@ 2506 train 4.9773 , allloss: 4.9774, dt: 1312.13ms, fracRes: 0.7032, norm(attn): 0.2129, norm(output): 0.9340, norm(x): 0.7522, norm(y): 1.0090, norm:0.9027, tok/sec: 99892.91, flops:104.85, batch-reuse:1
@ 2507 train 5.0212 , allloss: 5.0213, dt: 1315.24ms, fracRes: 0.7034, norm(attn): 0.2148, norm(output): 0.9339, norm(x): 0.7527, norm(y): 1.0089, norm:1.0276, tok/sec: 99656.09, flops:104.60, batch-reuse:1
@ 2508 train 4.8482 , allloss: 4.8484, dt: 1325.56ms, fracRes: 0.7032, norm(attn): 0.2148, norm(output): 0.9340, norm(x): 0.7530, norm(y): 1.0093, norm:0.7520, tok/sec: 98880.45, flops:103.79, batch-reuse:1
@ 2509 train 4.7708 , allloss: 4.7708, dt: 1310.28ms, fracRes: 0.7029, norm(attn): 0.2090, norm(output): 0.9339, norm(x): 0.7529, norm(y): 1.0096, norm:0.7914, tok/sec: 100033.83, flops:105.00, batch-reuse:1
@ 2510 train 4.8773 , allloss: 4.8774, dt: 1316.03ms, fracRes: 0.7027, norm(attn): 0.2061, norm(output): 0.9341, norm(x): 0.7533, norm(y): 1.0093, norm:0.6412, tok/sec: 99596.71, flops:104.54, batch-reuse:1
@ 2511 train 4.8341 , allloss: 4.8342, dt: 1321.58ms, fracRes: 0.7026, norm(attn): 0.2041, norm(output): 0.9341, norm(x): 0.7544, norm(y): 1.0092, norm:0.7347, tok/sec: 99178.51, flops:104.10, batch-reuse:1
@ 2512 train 4.8384 , allloss: 4.8386, dt: 1324.31ms, fracRes: 0.7025, norm(attn): 0.2051, norm(output): 0.9341, norm(x): 0.7544, norm(y): 1.0092, norm:0.6133, tok/sec: 98974.01, flops:103.89, batch-reuse:1
@ 2513 train 4.8963 , allloss: 4.8963, dt: 1283.02ms, fracRes: 0.7025, norm(attn): 0.2041, norm(output): 0.9340, norm(x): 0.7543, norm(y): 1.0093, norm:0.7350, tok/sec: 102159.23, flops:107.23, batch-reuse:1
@ 2514 train 4.9944 , allloss: 4.9945, dt: 1305.58ms, fracRes: 0.7026, norm(attn): 0.2041, norm(output): 0.9340, norm(x): 0.7539, norm(y): 1.0096, norm:0.7028, tok/sec: 100393.63, flops:105.38, batch-reuse:1
@ 2515 train 4.7894 , allloss: 4.7894, dt: 1282.98ms, fracRes: 0.7024, norm(attn): 0.2031, norm(output): 0.9341, norm(x): 0.7535, norm(y): 1.0098, norm:0.6633, tok/sec: 102162.31, flops:107.23, batch-reuse:1
@ 2516 train 4.7114 , allloss: 4.7114, dt: 1305.81ms, fracRes: 0.7026, norm(attn): 0.2041, norm(output): 0.9340, norm(x): 0.7532, norm(y): 1.0095, norm:0.6257, tok/sec: 100375.78, flops:105.36, batch-reuse:1
@ 2517 train 4.7861 , allloss: 4.7861, dt: 1298.92ms, fracRes: 0.7028, norm(attn): 0.2012, norm(output): 0.9341, norm(x): 0.7529, norm(y): 1.0093, norm:0.6799, tok/sec: 100908.79, flops:105.92, batch-reuse:1
@ 2518 train 4.8786 , allloss: 4.8787, dt: 1286.86ms, fracRes: 0.7028, norm(attn): 0.2021, norm(output): 0.9340, norm(x): 0.7529, norm(y): 1.0094, norm:0.6745, tok/sec: 101853.77, flops:106.91, batch-reuse:1
@ 2519 train 4.8860 , allloss: 4.8861, dt: 1284.02ms, fracRes: 0.7027, norm(attn): 0.2021, norm(output): 0.9342, norm(x): 0.7528, norm(y): 1.0097, norm:0.7066, tok/sec: 102079.77, flops:107.15, batch-reuse:1
@ 2520 train 4.8943 , allloss: 4.8944, dt: 1299.08ms, fracRes: 0.7029, norm(attn): 0.2031, norm(output): 0.9341, norm(x): 0.7522, norm(y): 1.0096, norm:0.7017, tok/sec: 100895.82, flops:105.90, batch-reuse:1
@ 2521 train 4.8106 , allloss: 4.8106, dt: 1290.68ms, fracRes: 0.7027, norm(attn): 0.2031, norm(output): 0.9341, norm(x): 0.7523, norm(y): 1.0095, norm:0.6796, tok/sec: 101552.47, flops:106.59, batch-reuse:1
@ 2522 train 4.9352 , allloss: 4.9359, dt: 1295.19ms, fracRes: 0.7029, norm(attn): 0.2021, norm(output): 0.9341, norm(x): 0.7519, norm(y): 1.0095, norm:0.7184, tok/sec: 101199.17, flops:106.22, batch-reuse:1
@ 2523 train 4.8489 , allloss: 4.8490, dt: 1291.49ms, fracRes: 0.7028, norm(attn): 0.2021, norm(output): 0.9340, norm(x): 0.7518, norm(y): 1.0096, norm:0.7688, tok/sec: 101488.84, flops:106.53, batch-reuse:1
@ 2524 train 4.7774 , allloss: 4.7775, dt: 1310.24ms, fracRes: 0.7027, norm(attn): 0.1992, norm(output): 0.9340, norm(x): 0.7523, norm(y): 1.0094, norm:0.6491, tok/sec: 100037.00, flops:105.00, batch-reuse:1
@ 2525 train 4.8204 , allloss: 4.8205, dt: 1323.55ms, fracRes: 0.7029, norm(attn): 0.1992, norm(output): 0.9341, norm(x): 0.7527, norm(y): 1.0091, norm:0.7495, tok/sec: 99030.35, flops:103.95, batch-reuse:1
@ 2526 train 4.9516 , allloss: 4.9520, dt: 1311.70ms, fracRes: 0.7028, norm(attn): 0.1953, norm(output): 0.9342, norm(x): 0.7531, norm(y): 1.0092, norm:0.7236, tok/sec: 99924.92, flops:104.88, batch-reuse:1
@ 2527 train 4.8289 , allloss: 4.8290, dt: 1305.74ms, fracRes: 0.7026, norm(attn): 0.1992, norm(output): 0.9342, norm(x): 0.7532, norm(y): 1.0095, norm:0.8380, tok/sec: 100381.05, flops:105.36, batch-reuse:1
@ 2528 train 4.8483 , allloss: 4.8485, dt: 1304.13ms, fracRes: 0.7027, norm(attn): 0.1973, norm(output): 0.9341, norm(x): 0.7524, norm(y): 1.0095, norm:0.6249, tok/sec: 100505.22, flops:105.49, batch-reuse:1
@ 2529 train 4.8301 , allloss: 4.8302, dt: 1327.77ms, fracRes: 0.7029, norm(attn): 0.1982, norm(output): 0.9340, norm(x): 0.7516, norm(y): 1.0095, norm:0.6966, tok/sec: 98715.59, flops:103.62, batch-reuse:1
@ 2530 train 4.8066 , allloss: 4.8067, dt: 1318.21ms, fracRes: 0.7028, norm(attn): 0.1973, norm(output): 0.9339, norm(x): 0.7515, norm(y): 1.0097, norm:0.7085, tok/sec: 99431.85, flops:104.37, batch-reuse:1
@ 2531 train 4.7579 , allloss: 4.7580, dt: 1332.66ms, fracRes: 0.7026, norm(attn): 0.1973, norm(output): 0.9340, norm(x): 0.7516, norm(y): 1.0098, norm:0.6925, tok/sec: 98353.58, flops:103.24, batch-reuse:1
@ 2532 train 4.8718 , allloss: 4.8718, dt: 1326.67ms, fracRes: 0.7027, norm(attn): 0.1953, norm(output): 0.9341, norm(x): 0.7523, norm(y): 1.0096, norm:0.6182, tok/sec: 98797.94, flops:103.70, batch-reuse:1
@ 2533 train 4.9165 , allloss: 4.9169, dt: 1324.77ms, fracRes: 0.7027, norm(attn): 0.1934, norm(output): 0.9340, norm(x): 0.7527, norm(y): 1.0096, norm:0.9635, tok/sec: 98939.55, flops:103.85, batch-reuse:1
@ 2534 train 4.9243 , allloss: 4.9245, dt: 1310.86ms, fracRes: 0.7030, norm(attn): 0.1934, norm(output): 0.9341, norm(x): 0.7528, norm(y): 1.0091, norm:0.7817, tok/sec: 99989.24, flops:104.95, batch-reuse:1
@ 2535 train 4.7572 , allloss: 4.7572, dt: 1325.84ms, fracRes: 0.7027, norm(attn): 0.1973, norm(output): 0.9340, norm(x): 0.7529, norm(y): 1.0093, norm:0.6543, tok/sec: 98859.25, flops:103.77, batch-reuse:1
@ 2536 train 4.8475 , allloss: 4.8477, dt: 1327.70ms, fracRes: 0.7025, norm(attn): 0.1992, norm(output): 0.9341, norm(x): 0.7529, norm(y): 1.0096, norm:0.7772, tok/sec: 98720.82, flops:103.62, batch-reuse:1
@ 2537 train 4.8437 , allloss: 4.8439, dt: 1330.70ms, fracRes: 0.7025, norm(attn): 0.1973, norm(output): 0.9341, norm(x): 0.7526, norm(y): 1.0097, norm:0.8298, tok/sec: 98498.79, flops:103.39, batch-reuse:1
@ 2538 train 4.9150 , allloss: 4.9152, dt: 1294.33ms, fracRes: 0.7026, norm(attn): 0.1982, norm(output): 0.9340, norm(x): 0.7520, norm(y): 1.0096, norm:0.7753, tok/sec: 101266.04, flops:106.29, batch-reuse:1
@ 2539 train 4.8559 , allloss: 4.8560, dt: 1293.92ms, fracRes: 0.7026, norm(attn): 0.2002, norm(output): 0.9339, norm(x): 0.7515, norm(y): 1.0097, norm:0.6464, tok/sec: 101298.06, flops:106.33, batch-reuse:1
@ 2540 train 4.9398 , allloss: 4.9399, dt: 1313.82ms, fracRes: 0.7024, norm(attn): 0.1992, norm(output): 0.9339, norm(x): 0.7512, norm(y): 1.0100, norm:0.6853, tok/sec: 99764.27, flops:104.72, batch-reuse:1
@ 2541 train 4.8267 , allloss: 4.8269, dt: 1295.93ms, fracRes: 0.7026, norm(attn): 0.1982, norm(output): 0.9339, norm(x): 0.7511, norm(y): 1.0097, norm:0.6838, tok/sec: 101140.97, flops:106.16, batch-reuse:1
@ 2542 train 4.9725 , allloss: 4.9727, dt: 1340.14ms, fracRes: 0.7027, norm(attn): 0.1982, norm(output): 0.9340, norm(x): 0.7519, norm(y): 1.0097, norm:1.0533, tok/sec: 97804.98, flops:102.66, batch-reuse:1
@ 2543 train 4.8007 , allloss: 4.8010, dt: 1326.01ms, fracRes: 0.7027, norm(attn): 0.1943, norm(output): 0.9340, norm(x): 0.7524, norm(y): 1.0096, norm:0.9147, tok/sec: 98846.83, flops:103.75, batch-reuse:1
@ 2544 train 4.9776 , allloss: 4.9779, dt: 1321.79ms, fracRes: 0.7030, norm(attn): 0.1953, norm(output): 0.9340, norm(x): 0.7528, norm(y): 1.0093, norm:0.9873, tok/sec: 99162.77, flops:104.08, batch-reuse:1
@ 2545 train 4.9016 , allloss: 4.9021, dt: 1302.19ms, fracRes: 0.7030, norm(attn): 0.1973, norm(output): 0.9341, norm(x): 0.7536, norm(y): 1.0091, norm:0.8664, tok/sec: 100655.32, flops:105.65, batch-reuse:1
@ 2546 train 4.8812 , allloss: 4.8814, dt: 1317.41ms, fracRes: 0.7026, norm(attn): 0.1992, norm(output): 0.9342, norm(x): 0.7536, norm(y): 1.0093, norm:0.9311, tok/sec: 99491.88, flops:104.43, batch-reuse:1
@ 2547 train 4.8863 , allloss: 4.8865, dt: 1288.93ms, fracRes: 0.7027, norm(attn): 0.2002, norm(output): 0.9342, norm(x): 0.7528, norm(y): 1.0093, norm:0.7181, tok/sec: 101690.37, flops:106.74, batch-reuse:1
@ 2548 train 5.0865 , allloss: 5.0867, dt: 1286.59ms, fracRes: 0.7031, norm(attn): 0.1982, norm(output): 0.9339, norm(x): 0.7519, norm(y): 1.0090, norm:1.0530, tok/sec: 101875.45, flops:106.93, batch-reuse:1
@ 2549 train 4.9921 , allloss: 4.9923, dt: 1279.82ms, fracRes: 0.7030, norm(attn): 0.2012, norm(output): 0.9340, norm(x): 0.7510, norm(y): 1.0089, norm:0.7065, tok/sec: 102414.65, flops:107.50, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0140, -0.0478, -0.0088,  ..., -0.0070, -0.0052,  0.0423],
        [ 0.0076, -0.0404, -0.0210,  ..., -0.0562, -0.0122,  0.0391],
        [ 0.0011, -0.0599,  0.0189,  ...,  0.0027,  0.0075,  0.0602],
        ...,
        [ 0.0166,  0.0759, -0.0116,  ...,  0.0022, -0.0209, -0.0033],
        [-0.0065, -0.0148,  0.0609,  ...,  0.0184,  0.0434,  0.0397],
        [ 0.0230, -0.0261,  0.0448,  ..., -0.0101,  0.0467,  0.0025]], device='cuda:0', requires_grad=True)
K: tensor([ 4.8438, -3.6719,  0.7109,  3.5469, -4.3750,  3.9375, -1.5234,  5.8125, -5.0938, -0.6367, -3.0000, -4.2812,  5.3438, -4.6250, -0.0126,  0.0334, -0.9219, -4.3438,  5.8750, -6.0312,  5.7188,  3.7812, -6.4688, -0.1299, -2.5312, -1.9609,  3.0625, -3.7344, -4.9062, -2.6250,  6.0312,  0.3477,
         2.9375,  4.7812, -2.4844, -3.5156,  1.9688,  3.3438, -2.5625, -4.5625,  4.6875, -2.0625, -0.4160, -2.1250, -3.6875, -3.0625, -0.6016,  3.6562, -0.4043,  2.6875,  3.3906, -4.2812, -5.5625,  5.5938,  3.2812, -2.5156,  4.5938,  4.0938, -1.4062, -1.6953, -2.6875, -0.8828, -1.9141, -0.7812],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0874,  0.0960, -0.0039,  ..., -0.0244, -0.0406, -0.0167],
        [-0.0618,  0.0988,  0.0015,  ...,  0.0248, -0.0116,  0.0198],
        [-0.0706,  0.0898, -0.0147,  ..., -0.0605, -0.0793,  0.0013],
        ...,
        [ 0.0535, -0.0098,  0.0048,  ...,  0.0035, -0.0267, -0.0175],
        [-0.0223,  0.0180, -0.0362,  ...,  0.0307, -0.0095,  0.0306],
        [-0.0221,  0.0465,  0.0074,  ...,  0.0191, -0.0143, -0.0351]], device='cuda:0', requires_grad=True)
Q: tensor([ -1.7500,   6.6875, -10.5625,  -5.8438,   4.6250,  -5.0625,  -2.8125,  -5.6875,   5.6250,  -8.3125,   1.8906,   5.3125,  -8.4375,   5.1875,  -7.8438,   6.6875,   6.2500,   6.6562,  -5.3750,   8.1250,  -5.4375,  -6.0938,   6.0312,  -6.1250,  -2.8906,  -7.5000,  -7.4688,   3.8281,   4.5000,
          9.1250,  -5.6875,  -6.4688,  -8.0000,  -4.6250,  -3.2344,   2.4062, -10.4375,  -5.8750,   6.5625,   3.5000,  -3.0312,   1.2266,   7.3750,  -0.9453,   5.9375,   4.1875,  -7.6250,  -7.6875,   9.0625,   0.1631,  -3.9844,   6.5312,   4.9688,  -7.0938,  -3.3750,   0.0381,  -3.9219,   3.2188,
         -0.9414,  10.6250,   3.2031,  -5.2500,   7.3438,   8.6250], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[   0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000],
        [   0.0000,  112.0000,  169.0000,  116.5000,   84.5000,   96.5000,   82.0000,  145.0000,   93.0000,   89.0000,   88.5000,  120.5000,  100.0000,   99.0000,   96.0000],
        [   0.0000,  -80.5000, -144.0000, -102.0000,  -81.0000,  -89.0000,  -67.0000, -120.0000,  -82.5000,  -78.5000,  -83.5000,  -96.5000,  -83.5000,  -85.5000,  -83.5000],
        [   0.0000, -118.5000, -201.0000, -142.0000, -108.5000, -120.0000,  -94.0000, -169.0000, -113.5000, -108.0000, -113.0000, -137.0000, -117.0000, -118.5000, -115.0000],
        [   0.0000, -156.0000, -258.0000, -175.0000, -131.0000, -149.0000, -114.0000, -218.0000, -139.0000, -134.0000, -134.0000, -172.0000, -153.0000, -145.0000, -141.0000],
        [   0.0000, -134.0000, -225.0000, -154.0000, -118.0000, -133.0000, -102.5000, -191.0000, -123.5000, -119.5000, -119.0000, -153.0000, -135.0000, -129.0000, -125.0000],
        [   0.0000, -103.5000, -173.0000, -116.5000,  -87.0000, -100.5000,  -76.0000, -146.0000,  -92.5000,  -88.5000,  -89.0000, -114.0000, -101.5000,  -96.5000,  -93.5000],
        [   0.0000,  -98.5000, -173.0000, -127.0000, -105.0000, -112.5000,  -88.0000, -144.0000, -107.0000,  -97.5000, -110.0000, -120.5000,  -99.5000, -111.0000, -106.0000],
        [   0.0000, -125.5000, -207.0000, -137.0000, -100.0000, -116.0000,  -88.0000, -175.0000, -107.5000, -104.5000, -102.5000, -136.0000, -122.5000, -112.0000, -109.0000],
        [   0.0000, -131.0000, -220.0000, -154.0000, -117.5000, -131.0000, -102.5000, -185.0000, -124.0000, -117.0000, -123.0000, -149.0000, -127.0000, -129.0000, -125.0000],
        [   0.0000, -145.0000, -235.0000, -155.0000, -110.5000, -129.0000,  -98.5000, -199.0000, -120.0000, -116.5000, -115.0000, -153.0000, -137.0000, -125.0000, -122.5000],
        [   0.0000, -120.0000, -205.0000, -147.0000, -114.5000, -126.5000,  -97.5000, -172.0000, -119.0000, -111.0000, -120.0000, -140.0000, -117.5000, -124.0000, -120.5000],
        [   0.0000,  -95.5000, -166.0000, -120.0000,  -97.5000, -105.0000,  -82.0000, -139.0000,  -99.5000,  -93.0000, -101.5000, -115.0000,  -97.0000, -104.0000,  -99.5000],
        [   0.0000, -129.0000, -211.0000, -138.0000,  -99.5000, -116.0000,  -87.5000, -179.0000, -107.5000, -104.5000, -102.0000, -137.0000, -124.5000, -112.0000, -109.0000],
        [   0.0000, -127.0000, -209.0000, -143.0000, -105.5000, -120.0000,  -94.0000, -175.0000, -113.0000, -107.0000, -110.5000, -139.0000, -119.5000, -118.0000, -115.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9167],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.9844,     0.0141,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0129,     0.0028,     0.9805,     0.0044,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8398,     0.0002,     0.0069,     0.1533,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8555,     0.0013,     0.0068,     0.1211,     0.0150,     0.0014,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5234,     0.0092,     0.4160,     0.0226,     0.0001,     0.0092,     0.0172,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0154,     0.0003,     0.9648,     0.0042,     0.0000,     0.0001,     0.0010,     0.0147,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2031,     0.0028,     0.0718,     0.5547,     0.0045,     0.0078,     0.1406,     0.0123,     0.0006,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6094,     0.0015,     0.0859,     0.0557,     0.0000,     0.0002,     0.0199,     0.2188,     0.0000,     0.0088,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4297,     0.0020,     0.0396,     0.3398,     0.0016,     0.0098,     0.1001,     0.0486,     0.0003,     0.0291,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0339,     0.0019,     0.5547,     0.0194,     0.0000,     0.0003,     0.0018,     0.3789,     0.0000,     0.0023,     0.0000,     0.0048,     0.0000,     0.0000,     0.0000],
        [    0.2910,     0.0016,     0.0378,     0.3008,     0.0162,     0.0019,     0.2334,     0.0038,     0.0014,     0.0378,     0.0216,     0.0216,     0.0299,     0.0000,     0.0000],
        [    0.3672,     0.0008,     0.0542,     0.3633,     0.0049,     0.0070,     0.1641,     0.0060,     0.0007,     0.0170,     0.0025,     0.0031,     0.0075,     0.0003,     0.0000],
        [    0.0374,     0.0006,     0.0679,     0.0107,     0.0000,     0.0056,     0.0123,     0.0688,     0.0001,     0.0217,     0.0001,     0.0074,     0.7539,     0.0001,     0.0132]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0023,  0.0393,  0.0127,  ...,  0.0102, -0.0028,  0.0117],
        [-0.0237,  0.0049,  0.0486,  ...,  0.0027,  0.0072,  0.0461],
        [-0.0053,  0.0368, -0.0009,  ..., -0.0414,  0.0181,  0.0010],
        ...,
        [ 0.0447, -0.0038,  0.0561,  ...,  0.0059,  0.0373, -0.0347],
        [-0.0116,  0.0275, -0.0282,  ..., -0.0248,  0.0138,  0.0318],
        [-0.0290, -0.0269,  0.0146,  ..., -0.0088,  0.0049,  0.0387]], device='cuda:0', requires_grad=True)
K: tensor([-2.7031, -0.7930, -2.1719,  0.8008, -3.3438, -0.5742, -1.9141,  1.6484, -1.5938, -1.7812,  0.7578,  0.6914,  2.4375,  1.5859, -1.4609, -1.1094, -1.4219,  0.8086, -0.0962, -2.0312,  0.1445,  0.4746, -0.7578,  1.3203, -0.3730,  1.4609, -0.1729, -1.4766,  2.7500,  1.5312, -0.3438,  1.4922,
        -2.6406,  1.7422, -0.9258, -0.5234, -1.1719, -1.0391,  1.5859,  1.3672, -0.4648,  2.7500, -1.1641,  2.9688, -2.6562, -3.0781, -2.6875,  0.4863,  0.5898, -1.0781,  0.4629, -0.8242, -0.1914, -1.3203,  0.2793, -1.4141, -0.3809,  1.0391,  0.7109, -1.9297, -0.8125, -0.7812,  3.4531,  0.6758],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0159,  0.0259, -0.0010,  ..., -0.0372,  0.0055, -0.0443],
        [-0.0138,  0.0121, -0.0103,  ..., -0.0286, -0.0274,  0.0460],
        [-0.0034, -0.0312,  0.0528,  ..., -0.0208,  0.0354, -0.0049],
        ...,
        [-0.0212,  0.0114, -0.0471,  ...,  0.0160, -0.0109,  0.0603],
        [ 0.0146,  0.0054, -0.0131,  ...,  0.0436,  0.0226, -0.0037],
        [-0.0495,  0.0197,  0.0236,  ...,  0.0079, -0.0187,  0.0327]], device='cuda:0', requires_grad=True)
Q: tensor([     0.7422,      1.8359,      1.8281,     -3.1562,      1.1797,     -1.3438,      0.5312,     -1.7500,     -1.7344,     -0.8008,     -0.0015,     -0.8438,      0.1885,      1.8594,      2.3281,     -0.7422,      0.5859,     -2.3750,      2.0781,      3.0312,      1.0547,     -0.5977,
             2.0469,      0.6680,     -0.1260,      0.9766,     -1.4922,      1.2109,      3.1875,     -1.4766,      0.4375,      0.0933,     -0.1021,     -1.1016,      1.0469,     -1.4141,      0.3652,      0.2451,     -0.2520,     -0.7734,     -1.5938,     -1.3906,     -2.8750,      0.6641,
            -0.3340,     -0.4805,     -0.9102,     -3.1094,      1.0469,     -0.9336,      0.3359,      1.4062,     -0.8633,     -1.7891,     -2.0781,     -0.8008,      2.8438,      1.1094,     -2.5156,     -2.6719,     -0.8789,     -1.2578,     -0.5977,     -0.7734], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     11.8750,      8.6250,     -9.6875,    -13.7500,      0.0129,     -8.8125,     11.0000,     -8.8750,     -1.0312,    -15.3750,      1.7344,     10.8125,     -4.9688,     -1.2812],
        [     0.0000,      9.0625,      4.8125,     -3.7344,     -3.4688,      2.0312,     -2.7344,      8.1875,      0.4219,      1.2891,     -2.5312,      5.5312,      7.7500,      2.5625,      4.5625],
        [     0.0000,     -1.5312,      4.3438,     -1.0703,     -7.4688,     -2.8438,     -3.4844,      0.2910,     -6.3750,     -0.4160,     -5.8438,     -0.7891,      2.5625,     -6.7812,     -0.7383],
        [     0.0000,     -8.1875,     -4.8125,     -1.7031,     -8.0625,     -5.9375,     -2.8281,     -3.7656,    -10.8125,     -4.0625,     -7.7500,     -6.5938,     -2.8750,    -11.3750,     -7.6250],
        [     0.0000,     -6.5312,     -4.8438,     -1.9531,     -4.0312,     -6.4375,     -1.1562,     -5.5938,     -8.6250,     -3.1875,     -4.9375,     -4.1562,     -4.4688,     -8.6250,     -6.2188],
        [     0.0000,     -4.0625,     -0.2305,     -3.1406,     -8.4375,     -4.0312,     -3.4219,     -2.6562,     -9.3125,     -2.5000,     -8.3125,     -4.2812,     -0.6055,     -9.0625,     -5.5000],
        [     0.0000,     -3.7969,      4.1250,     -1.3125,     -9.2500,     -5.1875,     -2.7500,     -0.0425,    -10.9375,     -2.2969,    -10.5000,     -2.6875,      3.4844,    -12.2500,     -4.8750],
        [     0.0000,     -4.2812,     -1.0391,      1.0078,     -3.7969,     -3.2656,     -0.3711,     -2.8125,     -5.8125,     -2.3594,     -4.8438,     -3.0000,     -2.9375,     -5.9688,     -5.8438],
        [     0.0000,     -6.0312,     -1.9609,     -2.3906,     -9.8750,     -8.3125,     -3.4219,     -1.0234,    -13.9375,     -4.2500,    -11.4375,     -4.8125,      1.5391,    -15.1875,     -6.5938],
        [     0.0000,     -5.3750,     -2.3906,     -0.2324,     -5.5625,     -3.7812,     -1.4609,     -2.1719,     -7.1250,     -2.6875,     -6.6875,     -3.2188,     -0.8555,     -7.0625,     -6.4062],
        [     0.0000,     -2.9062,      2.7969,     -0.5586,     -8.8125,     -4.8125,     -2.9219,      2.4062,    -11.1875,     -2.7031,     -9.5625,     -1.9609,      4.9375,    -12.0000,     -2.7188],
        [     0.0000,     -5.1875,     -2.0312,      0.0356,     -2.8906,     -5.0000,     -0.2207,     -4.3438,     -5.3438,     -2.0312,     -2.6094,     -2.5938,     -2.2812,     -6.6250,     -1.8203],
        [     0.0000,     -6.1562,     -1.9141,     -0.0123,     -4.3125,     -3.9531,     -0.8047,     -4.1250,     -6.2812,     -3.0781,     -5.0000,     -4.7812,     -3.8906,     -7.2812,     -5.7188],
        [     0.0000,     -4.0938,      0.5938,     -1.2500,     -6.8438,     -1.8984,     -1.1094,      0.6094,     -6.4688,     -0.5430,     -6.1875,     -1.6172,      3.0000,     -6.2188,     -1.0391]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7503],
        [0.4846],
        [0.2118],
        [0.4594],
        [0.5206],
        [0.2013],
        [0.3206],
        [0.1150],
        [0.3765],
        [0.1870],
        [0.1771],
        [0.2757],
        [0.1302],
        [0.0155]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0284, -0.0101,  0.0049,  ...,  0.0152, -0.0718, -0.0149],
        [-0.0491, -0.0304,  0.0050,  ...,  0.0313, -0.0682, -0.0305],
        [ 0.0227,  0.0078, -0.0137,  ...,  0.0428,  0.0235, -0.0121],
        ...,
        [-0.0125, -0.0199, -0.0066,  ...,  0.0570, -0.0315, -0.0191],
        [-0.0262, -0.0170,  0.0184,  ...,  0.0184,  0.0032, -0.0015],
        [ 0.0064, -0.0398, -0.0306,  ...,  0.0561, -0.0353, -0.0627]], device='cuda:0', requires_grad=True)
K: tensor([ 3.3438, -3.7656, -2.5469, -3.0625,  4.9688, -3.2500,  4.5000,  2.6562,  3.5156, -4.5938,  3.1250, -4.0000, -4.1875,  4.2500,  2.3750, -2.2969,  1.4375,  4.7812, -1.0625, -3.7656,  4.9375,  5.4375,  3.4219, -2.1562, -3.3906,  4.9375, -3.3438, -4.8438, -1.8047,  3.1250, -3.9375,  3.1875,
         2.0625, -2.1719, -3.0312, -0.1245,  0.1885, -3.5156,  2.8594, -3.5156, -3.8906,  1.8516,  2.3594, -2.7031, -3.2812,  3.1406, -3.7812,  3.5781, -4.5625, -3.2500, -3.3125,  3.4531,  2.8125,  3.4688,  1.5078, -4.6562, -3.5469,  2.6094, -0.6953, -1.9375,  3.3281,  2.6406, -1.6484,  2.7344],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0097,  0.0119,  0.0145,  ..., -0.0021,  0.0162,  0.0458],
        [ 0.0446,  0.0253, -0.0179,  ..., -0.0384,  0.0009,  0.0116],
        [-0.0012, -0.0235, -0.0012,  ..., -0.0268,  0.0452,  0.0373],
        ...,
        [-0.0128, -0.0048, -0.0536,  ..., -0.0099,  0.0438,  0.0119],
        [ 0.0197,  0.0008, -0.0229,  ...,  0.0260, -0.0246, -0.0182],
        [-0.0048,  0.0048,  0.0067,  ..., -0.0239, -0.0011,  0.0555]], device='cuda:0', requires_grad=True)
Q: tensor([-1.8906,  4.0938,  4.5938,  3.3906, -2.9844,  3.5625, -2.7188, -4.7500, -3.4531,  4.2188, -3.6094,  4.5938,  3.3281, -3.5000, -3.7969,  3.5156, -1.4062, -6.0000,  0.9531,  5.5312, -4.6250, -3.5625, -4.5312,  1.5859,  5.1250, -5.2188,  3.2500,  2.8906,  4.0938, -3.7188,  3.0781, -3.9531,
        -4.0625,  1.7891,  3.6250, -2.0000, -1.1250,  2.6406, -5.1562,  1.3516,  5.1250, -0.3184, -3.3594,  3.9375,  2.7812, -4.2812,  3.4375, -2.9375,  3.4219,  4.8438,  5.2500, -4.4688, -2.3125, -3.3125, -1.9219,  3.4844,  4.7500, -1.4219,  1.2109,  2.6562, -3.1094, -5.0938,  1.2188, -2.5000],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[   0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000],
        [   0.0000,  -43.7500,  -49.5000,  -76.5000,  -82.0000,  -70.0000,  -76.5000,  -86.0000,  -67.0000,  -66.5000,  -75.0000,  -69.0000,  -75.0000,  -66.0000,  -66.0000],
        [   0.0000,  -55.5000,  -67.0000, -102.5000, -106.0000,  -90.0000,  -99.5000, -114.5000,  -85.0000,  -90.0000,  -96.5000,  -90.5000,  -99.5000,  -84.0000,  -86.0000],
        [   0.0000,  -72.0000,  -88.5000, -139.0000, -141.0000, -118.5000, -133.0000, -152.0000, -110.5000, -122.0000, -128.0000, -119.0000, -133.0000, -108.5000, -112.0000],
        [   0.0000,  -72.0000,  -85.5000, -134.0000, -139.0000, -118.0000, -131.0000, -149.0000, -111.0000, -117.5000, -127.0000, -118.0000, -131.0000, -109.5000, -111.5000],
        [   0.0000,  -63.7500,  -74.5000, -114.5000, -120.0000, -103.5000, -113.0000, -128.0000,  -96.5000, -100.0000, -110.0000, -101.5000, -112.5000,  -95.5000,  -97.0000],
        [   0.0000,  -73.0000,  -87.5000, -135.0000, -141.0000, -120.0000, -133.0000, -151.0000, -112.0000, -119.0000, -128.0000, -119.0000, -133.0000, -110.5000, -113.0000],
        [   0.0000,  -87.0000, -105.0000, -162.0000, -167.0000, -141.0000, -157.0000, -181.0000, -131.0000, -142.0000, -151.0000, -141.0000, -158.0000, -129.0000, -134.0000],
        [   0.0000,  -55.0000,  -65.5000, -101.0000, -105.5000,  -90.5000,  -99.0000, -113.0000,  -85.0000,  -89.0000,  -96.0000,  -90.0000, -100.0000,  -83.5000,  -84.5000],
        [   0.0000,  -64.5000,  -80.0000, -124.5000, -126.5000, -106.5000, -119.5000, -137.0000,  -98.5000, -110.0000, -114.0000, -107.0000, -120.5000,  -97.0000, -100.5000],
        [   0.0000,  -67.0000,  -80.0000, -126.0000, -132.0000, -111.0000, -123.0000, -139.0000, -104.0000, -110.5000, -119.0000, -110.5000, -123.0000, -102.5000, -103.5000],
        [   0.0000,  -65.0000,  -80.5000, -125.5000, -127.0000, -107.0000, -120.0000, -138.0000, -100.0000, -110.0000, -115.0000, -108.5000, -121.5000,  -98.5000, -101.5000],
        [   0.0000,  -82.5000,  -99.0000, -152.0000, -156.0000, -132.0000, -147.0000, -170.0000, -123.0000, -133.0000, -142.0000, -132.0000, -150.0000, -121.5000, -126.0000],
        [   0.0000,  -54.7500,  -65.0000, -101.0000, -105.5000,  -90.0000,  -99.0000, -112.5000,  -84.5000,  -88.5000,  -96.0000,  -89.5000,  -99.5000,  -83.5000,  -84.5000],
        [   0.0000,  -57.7500,  -70.0000, -109.5000, -114.5000,  -96.5000, -107.5000, -122.5000,  -90.0000,  -96.5000, -103.0000,  -96.0000, -107.5000,  -88.5000,  -90.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[     0.0418,      0.0184,      0.0219,  ...,      0.0065,     -0.0009,     -0.0253],
        [    -0.0040,      0.0200,      0.0223,  ...,      0.0312,      0.0064,      0.0298],
        [     0.0333,      0.0047,     -0.0005,  ...,     -0.0008,      0.0405,      0.0031],
        ...,
        [    -0.0230,     -0.0300,     -0.0153,  ...,      0.0139,     -0.0276,      0.0111],
        [    -0.0088,      0.0071,     -0.0224,  ...,     -0.0191,     -0.0298,     -0.0259],
        [     0.0250,     -0.0000,     -0.0048,  ...,      0.0141,      0.0143,      0.0069]], device='cuda:0', requires_grad=True)
K: tensor([-3.5469,  0.9336, -2.4844,  2.0156, -1.3203, -3.0156, -1.4531,  3.5000,  0.1680, -0.6836,  1.3047,  0.8125, -2.4375, -3.5156,  3.1562,  3.2500,  4.1562, -3.3438, -2.9375,  2.6406,  2.5000, -3.1094, -4.3750,  3.7969, -3.1094,  3.4844, -0.3027, -1.7109,  0.4531, -1.9688,  0.2266, -2.6875,
        -1.7578, -3.0781,  2.6094, -3.5156, -3.7812,  0.2715,  3.3438,  2.6250, -2.9219,  0.2832,  0.9336, -2.9375,  2.5781,  3.5781,  0.1748, -2.0781, -2.4062,  3.1094,  2.7656,  1.2188,  0.3203, -2.9062, -1.5000, -2.8594,  3.4062,  3.0938, -3.0156, -2.9219, -1.6797,  3.6562, -1.3828, -4.0938],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0306,  0.0145, -0.0063,  ...,  0.0191, -0.0233, -0.0209],
        [-0.0110, -0.0098,  0.0081,  ...,  0.0090, -0.0180, -0.0016],
        [ 0.0021,  0.0118, -0.0025,  ..., -0.0014,  0.0172,  0.0025],
        ...,
        [-0.0263,  0.0066, -0.0097,  ..., -0.0135,  0.0281,  0.0103],
        [-0.0352,  0.0316, -0.0053,  ...,  0.0050,  0.0008, -0.0286],
        [ 0.0025, -0.0117, -0.0417,  ...,  0.0023, -0.0053,  0.0162]], device='cuda:0', requires_grad=True)
Q: tensor([ 3.8281, -2.9219,  1.2266, -0.6445,  0.0378,  1.7812,  2.0938, -4.0312, -1.6172, -1.0781, -0.4668,  2.1094,  1.0625,  2.0781, -2.4531, -3.4219, -3.5469,  2.6094,  2.0781, -2.6719, -2.6719,  4.6562,  2.9375, -1.8594,  2.9531, -2.9375, -1.0234,  1.6484,  1.4297,  0.5977,  1.0156,  2.2500,
        -0.0097,  1.7656, -1.8750,  2.5781,  2.4219, -2.1406, -3.0156, -4.3125,  2.6250, -2.9531, -3.2344,  2.4219, -2.1719, -1.5078, -3.4375,  1.2422,  2.5000, -2.2656, -1.8125,  0.6133,  3.2812,  3.7812,  0.1650,  3.4688, -2.5938, -1.7422,  2.3125,  2.6719,  1.8750, -4.0000,  4.0000,  1.7734],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000, -26.1250, -22.2500, -22.3750, -24.6250, -25.1250, -24.8750, -24.6250, -27.2500, -26.5000, -26.8750, -27.7500, -27.7500, -29.3750, -31.2500],
        [  0.0000, -23.1250, -20.1250, -20.0000, -21.8750, -22.1250, -22.0000, -21.8750, -24.1250, -23.5000, -23.7500, -24.6250, -24.5000, -26.0000, -27.6250],
        [  0.0000, -29.0000, -25.7500, -27.0000, -29.6250, -30.1250, -30.2500, -29.8750, -32.5000, -31.5000, -32.0000, -33.2500, -32.7500, -34.5000, -36.7500],
        [  0.0000, -28.7500, -25.2500, -25.8750, -28.8750, -29.3750, -29.3750, -29.0000, -31.5000, -30.3750, -31.0000, -32.2500, -32.0000, -33.7500, -35.7500],
        [  0.0000, -27.6250, -24.2500, -24.5000, -27.1250, -28.0000, -28.0000, -27.7500, -29.8750, -29.0000, -29.3750, -30.5000, -30.3750, -31.8750, -33.7500],
        [  0.0000, -26.5000, -23.2500, -23.0000, -25.3750, -26.0000, -26.3750, -26.0000, -27.7500, -27.1250, -27.5000, -28.5000, -28.3750, -29.6250, -31.3750],
        [  0.0000, -26.6250, -23.2500, -24.0000, -26.7500, -27.3750, -27.5000, -27.2500, -29.3750, -28.3750, -28.8750, -29.8750, -29.7500, -31.2500, -33.0000],
        [  0.0000, -28.6250, -25.1250, -25.6250, -28.0000, -28.7500, -28.8750, -28.6250, -31.0000, -30.1250, -30.5000, -31.7500, -31.3750, -33.0000, -35.0000],
        [  0.0000, -31.7500, -27.7500, -30.7500, -34.0000, -35.0000, -34.7500, -34.5000, -37.7500, -36.7500, -37.2500, -38.7500, -38.2500, -40.5000, -43.7500],
        [  0.0000, -28.0000, -24.3750, -24.7500, -27.1250, -28.0000, -28.0000, -27.7500, -30.0000, -29.2500, -29.7500, -30.8750, -30.6250, -32.2500, -34.5000],
        [  0.0000, -31.7500, -27.7500, -30.3750, -33.5000, -34.5000, -34.2500, -34.0000, -37.0000, -36.0000, -36.5000, -38.0000, -37.7500, -39.7500, -42.7500],
        [  0.0000, -28.7500, -25.1250, -26.7500, -29.7500, -30.6250, -30.5000, -30.2500, -33.0000, -31.8750, -32.2500, -33.5000, -33.5000, -35.2500, -37.7500],
        [  0.0000, -30.0000, -26.2500, -27.2500, -29.8750, -30.8750, -30.7500, -30.5000, -33.2500, -32.2500, -32.7500, -34.0000, -33.7500, -35.5000, -38.0000],
        [  0.0000, -33.5000, -29.0000, -31.2500, -34.5000, -35.7500, -35.5000, -35.2500, -38.2500, -37.2500, -38.0000, -39.5000, -39.2500, -41.2500, -44.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.3887,     0.6094,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.5977,     0.3574,     0.0461,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0014,     0.5508,     0.0815,     0.0026,     0.3633,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0011,     0.5469,     0.0723,     0.0028,     0.2578,     0.1187,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2178,     0.0189,     0.0002,     0.0986,     0.0354,     0.6289,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0017,     0.1807,     0.0299,     0.0004,     0.0486,     0.0474,     0.6719,     0.0203,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1406,     0.0118,     0.0004,     0.0908,     0.0452,     0.5742,     0.0128,     0.1240,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0029,     0.1089,     0.0649,     0.0033,     0.1367,     0.0542,     0.3301,     0.0444,     0.2500,     0.0042,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1094,     0.0045,     0.0002,     0.0315,     0.0183,     0.3105,     0.0111,     0.3320,     0.0009,     0.1816,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0004,     0.0366,     0.0220,     0.0013,     0.0898,     0.0420,     0.2227,     0.0244,     0.3867,     0.0020,     0.1660,     0.0068,     0.0000,     0.0000,     0.0000],
        [    0.0005,     0.1108,     0.0151,     0.0002,     0.0267,     0.0271,     0.4902,     0.0126,     0.2148,     0.0004,     0.0791,     0.0005,     0.0216,     0.0000,     0.0000],
        [    0.0000,     0.0991,     0.0075,     0.0003,     0.0576,     0.0286,     0.4102,     0.0079,     0.0859,     0.0016,     0.1152,     0.0011,     0.0149,     0.1689,     0.0000],
        [    0.0000,     0.0879,     0.0082,     0.0001,     0.0393,     0.0103,     0.1543,     0.0026,     0.1494,     0.0002,     0.0498,     0.0003,     0.0073,     0.3066,     0.1826]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0113,  0.0142,  0.0377,  ...,  0.0061, -0.0135,  0.0010],
        [-0.0029,  0.0084, -0.0027,  ..., -0.0088,  0.0033,  0.0595],
        [ 0.0035,  0.0097, -0.0179,  ..., -0.0027,  0.0194,  0.0019],
        ...,
        [ 0.0206,  0.0218,  0.0092,  ..., -0.0464,  0.0239, -0.0213],
        [ 0.0159,  0.0011, -0.0700,  ...,  0.0225, -0.0110,  0.1089],
        [ 0.0336,  0.0115,  0.0234,  ..., -0.0341,  0.0083, -0.0217]], device='cuda:0', requires_grad=True)
K: tensor([-3.3438, -2.4219, -5.3438,  1.1328, -1.6562,  1.5703, -4.1562,  3.9844,  1.0469, -2.2500,  3.7812, -4.3438, -4.1562,  0.9141,  3.7969,  3.8125,  0.7773, -1.3125,  0.4219, -3.4219, -3.2344, -2.3906, -0.1406, -1.6172, -3.9062, -1.2734, -0.8398, -3.4531,  2.9062, -1.4375,  1.5703, -1.6172,
        -2.6406, -4.3438, -1.1875,  2.5312,  3.5781,  0.5391,  4.0312, -3.5625, -0.8164, -3.3281, -0.2832, -3.5312,  0.3555, -2.1094,  2.3750, -4.0312,  2.5469,  0.0515, -0.8086, -5.0938, -4.5000, -5.4062,  0.6328, -1.7734, -1.8906,  2.3438, -1.7422, -2.3438,  0.0654, -2.6562,  1.7969, -5.2500],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0183, -0.0222, -0.0007,  ...,  0.0021,  0.0273, -0.0076],
        [-0.0065, -0.0102, -0.0028,  ..., -0.0520, -0.0272, -0.0228],
        [-0.0126, -0.0095,  0.0144,  ..., -0.0112, -0.0158, -0.0248],
        ...,
        [ 0.0295, -0.0165,  0.0179,  ..., -0.0163, -0.0314,  0.0118],
        [ 0.0135,  0.0115, -0.0208,  ..., -0.0157, -0.0355, -0.0264],
        [ 0.0239,  0.0068, -0.0414,  ...,  0.0338,  0.0462, -0.0047]], device='cuda:0', requires_grad=True)
Q: tensor([-2.7344, -1.3516, -0.1992,  1.5469,  0.6289, -2.8125, -2.6562,  0.6133,  3.6250,  0.4043,  2.5312,  1.0312, -0.9219, -1.4922,  2.7812, -1.0078,  0.9805, -0.8516, -1.4375,  1.6641, -1.5547,  0.0815, -1.7578, -2.9531,  1.4219, -0.4980, -0.1826, -0.6836, -2.0000,  0.3203,  1.3750, -0.1064,
         0.9609, -1.1250, -1.2031,  1.1875, -0.5039, -1.9688,  0.2061,  1.3594,  0.2656,  1.6172,  0.2393,  0.0942, -1.9453, -0.7148,  1.9688, -0.2617, -1.5781, -2.9688,  0.2305, -1.4453, -2.0156,  0.1484, -1.9922,  0.0383, -0.9414, -0.0283, -2.7031, -1.0000,  1.1875, -0.0386, -0.4336, -1.9922],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, 11.9375, 10.9375, 10.5625, 12.8750, 11.2500, 12.1250, 10.6875, 13.0000, 10.6875, 13.2500, 11.5000, 12.8750, 14.2500, 14.5625],
        [ 0.0000,  7.4688,  7.9062,  7.8125,  8.8750,  7.2812,  7.0938,  6.6250,  8.2500,  8.1250,  8.7500,  9.5625,  9.3750,  9.8125, 10.7500],
        [ 0.0000,  7.8125,  7.3125,  5.2500,  8.1875,  7.0625,  8.8125,  6.7500,  8.1250,  4.3125,  7.4688,  5.4062,  7.2500,  8.3125,  8.6875],
        [ 0.0000,  6.0000,  4.0938,  0.6641,  5.5938,  4.6875,  6.9375,  4.1250,  5.8438,  2.1094,  5.5000,  2.1562,  4.5000,  6.3125,  6.4062],
        [ 0.0000,  6.2188,  4.2188,  0.9609,  5.4688,  4.6875,  7.2812,  3.9062,  6.2812,  1.7891,  6.0938,  2.1875,  4.3750,  6.9688,  7.3125],
        [ 0.0000, 14.8125, 12.3750,  8.0625, 14.0625, 13.0000, 15.8750, 12.1250, 15.3750,  8.3750, 14.3125,  9.3750, 12.5000, 15.6875, 16.6250],
        [ 0.0000,  4.6875,  2.8906, -1.5156,  3.3750,  3.3438,  6.0000,  2.5000,  5.4688, -0.6211,  4.4375, -0.3555,  3.1094,  6.1875,  6.4688],
        [ 0.0000,  8.6250,  6.1562,  2.8906,  8.1875,  7.5000, 10.0625,  6.2500,  8.5000,  4.7500,  8.7500,  4.3125,  6.8125,  9.1250,  8.8750],
        [ 0.0000,  3.6406,  3.1250,  0.1514,  3.8594,  2.9375,  4.7500,  2.7344,  4.4688,  0.3906,  4.1250,  1.6094,  3.8438,  5.4688,  6.1875],
        [ 0.0000, 13.1875, 10.0000,  7.0938, 11.9375, 11.4375, 14.2500, 10.9375, 14.3125,  8.3750, 13.7500,  8.2500, 11.3750, 14.8125, 14.7500],
        [ 0.0000,  4.5312,  4.0312,  1.2031,  5.4375,  4.6875,  6.3438,  4.1250,  6.9062,  1.6250,  6.0625,  2.8594,  5.3125,  7.7188,  8.1250],
        [ 0.0000,  5.4688,  3.4688, -0.8750,  4.0312,  4.0625,  6.9688,  3.2969,  6.1250, -0.2119,  5.1250,  0.0208,  3.8281,  6.8438,  7.2188],
        [ 0.0000,  8.8750,  6.3125,  2.9531,  8.3125,  7.6562, 10.3125,  6.3438,  8.7500,  4.7500,  9.0625,  4.3438,  7.0000,  9.4375,  9.3125],
        [ 0.0000,  7.8438,  5.4688,  1.0781,  7.0312,  5.6875,  8.3750,  4.3125,  8.3750,  1.7031,  7.2500,  2.0469,  5.3438,  9.0625,  8.5625]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3633],
        [0.2440],
        [0.2028],
        [0.2252],
        [0.1665],
        [0.1368],
        [0.1139],
        [0.1006],
        [0.0970],
        [0.0909],
        [0.1076],
        [0.0859],
        [0.0690],
        [0.0787]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.1328 the:0.1001,:0.1611 and:0.0840tery:0.1387,:0.5703 a:0.1064iced:0.2949)
iced
------
		( the:0.1001,:0.1611 and:0.0840tery:0.1387,:0.5703 a:0.1064iced:0.2949 with:0.1045)
 with a variety of dishes.
The first thing to do is to be
@ 2550 train 4.8981 , allloss: 4.8984, dt: 1706.90ms, fracRes: 0.7029, norm(attn): 0.2012, norm(output): 0.9341, norm(x): 0.7511, norm(y): 1.0093, norm:0.7219, tok/sec: 76789.43, flops:80.60, batch-reuse:1
@ 2551 train 5.7959 , allloss: 5.7962, dt: 1279.52ms, fracRes: 0.7033, norm(attn): 0.1934, norm(output): 0.9341, norm(x): 0.7514, norm(y): 1.0095, norm:2.0496, tok/sec: 102438.51, flops:107.52, batch-reuse:1
@ 2552 train 4.9075 , allloss: 4.9081, dt: 1302.61ms, fracRes: 0.7028, norm(attn): 0.1934, norm(output): 0.9341, norm(x): 0.7529, norm(y): 1.0095, norm:1.2832, tok/sec: 100622.42, flops:105.62, batch-reuse:1
@ 2553 train 4.9159 , allloss: 4.9162, dt: 1310.50ms, fracRes: 0.7028, norm(attn): 0.1914, norm(output): 0.9342, norm(x): 0.7530, norm(y): 1.0091, norm:0.8288, tok/sec: 100017.09, flops:104.98, batch-reuse:1
@ 2554 train 4.8429 , allloss: 4.8431, dt: 1300.88ms, fracRes: 0.7027, norm(attn): 0.1943, norm(output): 0.9342, norm(x): 0.7528, norm(y): 1.0089, norm:0.9501, tok/sec: 100756.54, flops:105.76, batch-reuse:1
@ 2555 train 4.6940 , allloss: 4.6943, dt: 1307.65ms, fracRes: 0.7025, norm(attn): 0.1963, norm(output): 0.9340, norm(x): 0.7526, norm(y): 1.0093, norm:0.7871, tok/sec: 100234.73, flops:105.21, batch-reuse:1
@ 2556 train 4.8371 , allloss: 4.8373, dt: 1334.22ms, fracRes: 0.7027, norm(attn): 0.1953, norm(output): 0.9340, norm(x): 0.7523, norm(y): 1.0094, norm:0.7525, tok/sec: 98238.48, flops:103.11, batch-reuse:1
@ 2557 train 4.7853 , allloss: 4.7855, dt: 1337.50ms, fracRes: 0.7024, norm(attn): 0.1992, norm(output): 0.9339, norm(x): 0.7520, norm(y): 1.0096, norm:0.6882, tok/sec: 97998.06, flops:102.86, batch-reuse:1
@ 2558 train 4.8348 , allloss: 4.8350, dt: 1320.31ms, fracRes: 0.7025, norm(attn): 0.1992, norm(output): 0.9340, norm(x): 0.7519, norm(y): 1.0094, norm:0.6634, tok/sec: 99273.83, flops:104.20, batch-reuse:1
@ 2559 train 4.8521 , allloss: 4.8523, dt: 1337.95ms, fracRes: 0.7026, norm(attn): 0.1992, norm(output): 0.9340, norm(x): 0.7518, norm(y): 1.0095, norm:0.7352, tok/sec: 97965.09, flops:102.83, batch-reuse:1
@ 2560 train 4.6519 , allloss: 4.6523, dt: 1334.67ms, fracRes: 0.7029, norm(attn): 0.1992, norm(output): 0.9340, norm(x): 0.7519, norm(y): 1.0091, norm:0.7826, tok/sec: 98205.68, flops:103.08, batch-reuse:1
@ 2561 train 4.6813 , allloss: 4.6814, dt: 1330.88ms, fracRes: 0.7030, norm(attn): 0.1992, norm(output): 0.9341, norm(x): 0.7524, norm(y): 1.0091, norm:0.9755, tok/sec: 98484.95, flops:103.37, batch-reuse:1
@ 2562 train 4.7169 , allloss: 4.7170, dt: 1309.86ms, fracRes: 0.7030, norm(attn): 0.1982, norm(output): 0.9340, norm(x): 0.7521, norm(y): 1.0089, norm:1.2205, tok/sec: 100065.44, flops:105.03, batch-reuse:1
@ 2563 train 4.6903 , allloss: 4.6905, dt: 1288.05ms, fracRes: 0.7030, norm(attn): 0.1982, norm(output): 0.9340, norm(x): 0.7514, norm(y): 1.0086, norm:1.0067, tok/sec: 101760.41, flops:106.81, batch-reuse:1
@ 2564 train 4.6636 , allloss: 4.6638, dt: 1296.84ms, fracRes: 0.7030, norm(attn): 0.1992, norm(output): 0.9340, norm(x): 0.7521, norm(y): 1.0089, norm:0.8831, tok/sec: 101070.09, flops:106.09, batch-reuse:1
@ 2565 train 4.8771 , allloss: 4.8772, dt: 1299.64ms, fracRes: 0.7029, norm(attn): 0.2012, norm(output): 0.9342, norm(x): 0.7530, norm(y): 1.0090, norm:1.1252, tok/sec: 100852.64, flops:105.86, batch-reuse:1
@ 2566 train 4.8041 , allloss: 4.8044, dt: 1305.57ms, fracRes: 0.7029, norm(attn): 0.2002, norm(output): 0.9341, norm(x): 0.7532, norm(y): 1.0092, norm:0.8154, tok/sec: 100394.49, flops:105.38, batch-reuse:1
@ 2567 train 4.8355 , allloss: 4.8359, dt: 1320.79ms, fracRes: 0.7031, norm(attn): 0.2002, norm(output): 0.9342, norm(x): 0.7526, norm(y): 1.0089, norm:0.9278, tok/sec: 99237.45, flops:104.16, batch-reuse:1
@ 2568 train 4.8236 , allloss: 4.8238, dt: 1310.57ms, fracRes: 0.7032, norm(attn): 0.2012, norm(output): 0.9341, norm(x): 0.7527, norm(y): 1.0088, norm:0.8659, tok/sec: 100011.10, flops:104.97, batch-reuse:1
@ 2569 train 4.8514 , allloss: 4.8517, dt: 1281.73ms, fracRes: 0.7030, norm(attn): 0.2021, norm(output): 0.9341, norm(x): 0.7524, norm(y): 1.0091, norm:0.7076, tok/sec: 102262.13, flops:107.34, batch-reuse:1
@ 2570 train 4.7456 , allloss: 4.7458, dt: 1289.63ms, fracRes: 0.7027, norm(attn): 0.2012, norm(output): 0.9340, norm(x): 0.7526, norm(y): 1.0096, norm:0.8611, tok/sec: 101635.55, flops:106.68, batch-reuse:1
@ 2571 train 4.7753 , allloss: 4.7754, dt: 1272.30ms, fracRes: 0.7028, norm(attn): 0.1982, norm(output): 0.9341, norm(x): 0.7524, norm(y): 1.0092, norm:0.7587, tok/sec: 103019.46, flops:108.13, batch-reuse:1
@ 2572 train 4.8517 , allloss: 4.8518, dt: 1307.88ms, fracRes: 0.7028, norm(attn): 0.1934, norm(output): 0.9342, norm(x): 0.7523, norm(y): 1.0090, norm:0.6602, tok/sec: 100216.97, flops:105.19, batch-reuse:1
@ 2573 train 4.8053 , allloss: 4.8054, dt: 1298.21ms, fracRes: 0.7025, norm(attn): 0.1953, norm(output): 0.9342, norm(x): 0.7525, norm(y): 1.0093, norm:0.8843, tok/sec: 100963.83, flops:105.97, batch-reuse:1
@ 2574 train 4.7394 , allloss: 4.7396, dt: 1306.61ms, fracRes: 0.7025, norm(attn): 0.1992, norm(output): 0.9340, norm(x): 0.7531, norm(y): 1.0096, norm:0.9212, tok/sec: 100314.64, flops:105.29, batch-reuse:1
@ 2575 train 4.7975 , allloss: 4.7977, dt: 1327.47ms, fracRes: 0.7028, norm(attn): 0.1992, norm(output): 0.9341, norm(x): 0.7530, norm(y): 1.0092, norm:0.6235, tok/sec: 98738.23, flops:103.64, batch-reuse:1
@ 2576 train 4.7262 , allloss: 4.7263, dt: 1321.69ms, fracRes: 0.7031, norm(attn): 0.1992, norm(output): 0.9343, norm(x): 0.7529, norm(y): 1.0088, norm:0.7165, tok/sec: 99170.05, flops:104.09, batch-reuse:1
@ 2577 train 4.8299 , allloss: 4.8301, dt: 1306.06ms, fracRes: 0.7034, norm(attn): 0.2002, norm(output): 0.9344, norm(x): 0.7529, norm(y): 1.0085, norm:0.6130, tok/sec: 100356.92, flops:105.34, batch-reuse:1
@ 2578 train 4.6386 , allloss: 4.6387, dt: 1301.15ms, fracRes: 0.7033, norm(attn): 0.2012, norm(output): 0.9341, norm(x): 0.7528, norm(y): 1.0088, norm:0.6496, tok/sec: 100735.53, flops:105.74, batch-reuse:1
@ 2579 train 4.8125 , allloss: 4.8126, dt: 1312.48ms, fracRes: 0.7031, norm(attn): 0.2012, norm(output): 0.9341, norm(x): 0.7524, norm(y): 1.0091, norm:0.6660, tok/sec: 99866.16, flops:104.82, batch-reuse:1
@ 2580 train 4.7378 , allloss: 4.7379, dt: 1324.04ms, fracRes: 0.7028, norm(attn): 0.2021, norm(output): 0.9342, norm(x): 0.7524, norm(y): 1.0091, norm:0.6095, tok/sec: 98994.22, flops:103.91, batch-reuse:1
@ 2581 train 4.7179 , allloss: 4.7182, dt: 1314.59ms, fracRes: 0.7027, norm(attn): 0.2031, norm(output): 0.9341, norm(x): 0.7525, norm(y): 1.0091, norm:0.6458, tok/sec: 99705.60, flops:104.65, batch-reuse:1
@ 2582 train 4.6896 , allloss: 4.6897, dt: 1321.43ms, fracRes: 0.7026, norm(attn): 0.2021, norm(output): 0.9340, norm(x): 0.7528, norm(y): 1.0093, norm:0.6045, tok/sec: 99189.86, flops:104.11, batch-reuse:1
@ 2583 train 4.6846 , allloss: 4.6848, dt: 1319.92ms, fracRes: 0.7025, norm(attn): 0.2002, norm(output): 0.9340, norm(x): 0.7530, norm(y): 1.0093, norm:0.6394, tok/sec: 99302.68, flops:104.23, batch-reuse:1
@ 2584 train 4.7282 , allloss: 4.7285, dt: 1301.56ms, fracRes: 0.7025, norm(attn): 0.1992, norm(output): 0.9340, norm(x): 0.7531, norm(y): 1.0093, norm:0.6659, tok/sec: 100703.87, flops:105.70, batch-reuse:1
@ 2585 train 4.7638 , allloss: 4.7640, dt: 1289.44ms, fracRes: 0.7026, norm(attn): 0.2002, norm(output): 0.9340, norm(x): 0.7524, norm(y): 1.0095, norm:0.6477, tok/sec: 101650.26, flops:106.70, batch-reuse:1
@ 2586 train 4.6624 , allloss: 4.6626, dt: 1317.86ms, fracRes: 0.7029, norm(attn): 0.2012, norm(output): 0.9340, norm(x): 0.7525, norm(y): 1.0093, norm:0.7377, tok/sec: 99458.45, flops:104.39, batch-reuse:1
@ 2587 train 4.8073 , allloss: 4.8074, dt: 1314.72ms, fracRes: 0.7030, norm(attn): 0.2002, norm(output): 0.9344, norm(x): 0.7529, norm(y): 1.0086, norm:0.7270, tok/sec: 99695.98, flops:104.64, batch-reuse:1
@ 2588 train 4.6801 , allloss: 4.6802, dt: 1299.66ms, fracRes: 0.7028, norm(attn): 0.1982, norm(output): 0.9342, norm(x): 0.7532, norm(y): 1.0087, norm:0.6733, tok/sec: 100851.01, flops:105.86, batch-reuse:1
@ 2589 train 4.7399 , allloss: 4.7401, dt: 1295.76ms, fracRes: 0.7027, norm(attn): 0.2002, norm(output): 0.9343, norm(x): 0.7532, norm(y): 1.0090, norm:0.7930, tok/sec: 101154.73, flops:106.18, batch-reuse:1
@ 2590 train 4.7261 , allloss: 4.7263, dt: 1329.49ms, fracRes: 0.7028, norm(attn): 0.1973, norm(output): 0.9342, norm(x): 0.7524, norm(y): 1.0090, norm:0.8246, tok/sec: 98588.26, flops:103.48, batch-reuse:1
@ 2591 train 4.7921 , allloss: 4.7923, dt: 1332.13ms, fracRes: 0.7028, norm(attn): 0.1973, norm(output): 0.9342, norm(x): 0.7517, norm(y): 1.0092, norm:0.7219, tok/sec: 98392.56, flops:103.28, batch-reuse:1
@ 2592 train 4.8133 , allloss: 4.8134, dt: 1339.61ms, fracRes: 0.7028, norm(attn): 0.1992, norm(output): 0.9342, norm(x): 0.7511, norm(y): 1.0092, norm:0.7083, tok/sec: 97843.26, flops:102.70, batch-reuse:1
@ 2593 train 4.8104 , allloss: 4.8104, dt: 1325.65ms, fracRes: 0.7028, norm(attn): 0.2012, norm(output): 0.9342, norm(x): 0.7511, norm(y): 1.0092, norm:0.7186, tok/sec: 98873.82, flops:103.78, batch-reuse:1
@ 2594 train 4.7086 , allloss: 4.7087, dt: 1296.56ms, fracRes: 0.7028, norm(attn): 0.2021, norm(output): 0.9342, norm(x): 0.7515, norm(y): 1.0093, norm:0.7334, tok/sec: 101092.04, flops:106.11, batch-reuse:1
@ 2595 train 4.7227 , allloss: 4.7228, dt: 1302.08ms, fracRes: 0.7030, norm(attn): 0.2002, norm(output): 0.9343, norm(x): 0.7526, norm(y): 1.0089, norm:0.6741, tok/sec: 100663.62, flops:105.66, batch-reuse:1
@ 2596 train 4.8610 , allloss: 4.8611, dt: 1308.32ms, fracRes: 0.7033, norm(attn): 0.1992, norm(output): 0.9344, norm(x): 0.7525, norm(y): 1.0086, norm:0.6828, tok/sec: 100183.46, flops:105.16, batch-reuse:1
@ 2597 train 4.7490 , allloss: 4.7491, dt: 1285.62ms, fracRes: 0.7031, norm(attn): 0.1992, norm(output): 0.9344, norm(x): 0.7526, norm(y): 1.0088, norm:0.6907, tok/sec: 101952.22, flops:107.01, batch-reuse:1
@ 2598 train 4.6776 , allloss: 4.6777, dt: 1297.00ms, fracRes: 0.7030, norm(attn): 0.1992, norm(output): 0.9344, norm(x): 0.7523, norm(y): 1.0090, norm:0.6918, tok/sec: 101058.18, flops:106.07, batch-reuse:1
@ 2599 train 4.6558 , allloss: 4.6559, dt: 1319.82ms, fracRes: 0.7028, norm(attn): 0.1963, norm(output): 0.9343, norm(x): 0.7519, norm(y): 1.0093, norm:0.6811, tok/sec: 99310.23, flops:104.24, batch-reuse:1
@ 2600 train 4.6608 , allloss: 4.6619, dt: 1304.67ms, fracRes: 0.7027, norm(attn): 0.1943, norm(output): 0.9343, norm(x): 0.7521, norm(y): 1.0094, norm:0.7362, tok/sec: 100463.42, flops:105.45, batch-reuse:1
@ 2601 train 4.8337 , allloss: 4.8339, dt: 1288.48ms, fracRes: 0.7028, norm(attn): 0.1943, norm(output): 0.9344, norm(x): 0.7523, norm(y): 1.0092, norm:0.8131, tok/sec: 101726.06, flops:106.77, batch-reuse:1
@ 2602 train 4.8442 , allloss: 4.8443, dt: 1332.44ms, fracRes: 0.7029, norm(attn): 0.1973, norm(output): 0.9344, norm(x): 0.7523, norm(y): 1.0091, norm:0.7506, tok/sec: 98370.02, flops:103.25, batch-reuse:1
@ 2603 train 4.9592 , allloss: 4.9592, dt: 1308.92ms, fracRes: 0.7030, norm(attn): 0.2002, norm(output): 0.9345, norm(x): 0.7514, norm(y): 1.0091, norm:0.6642, tok/sec: 100137.69, flops:105.11, batch-reuse:1
@ 2604 train 4.9203 , allloss: 4.9204, dt: 1310.99ms, fracRes: 0.7029, norm(attn): 0.2002, norm(output): 0.9345, norm(x): 0.7512, norm(y): 1.0094, norm:0.7688, tok/sec: 99979.03, flops:104.94, batch-reuse:1
@ 2605 train 4.8722 , allloss: 4.8723, dt: 1301.98ms, fracRes: 0.7030, norm(attn): 0.2021, norm(output): 0.9344, norm(x): 0.7512, norm(y): 1.0090, norm:0.7087, tok/sec: 100671.34, flops:105.67, batch-reuse:1
@ 2606 train 4.9260 , allloss: 4.9261, dt: 1324.10ms, fracRes: 0.7030, norm(attn): 0.2012, norm(output): 0.9345, norm(x): 0.7516, norm(y): 1.0091, norm:0.7567, tok/sec: 98989.82, flops:103.90, batch-reuse:1
@ 2607 train 4.8927 , allloss: 4.8929, dt: 1276.68ms, fracRes: 0.7032, norm(attn): 0.2002, norm(output): 0.9344, norm(x): 0.7523, norm(y): 1.0091, norm:0.7975, tok/sec: 102666.12, flops:107.76, batch-reuse:1
@ 2608 train 4.8950 , allloss: 4.8952, dt: 1290.86ms, fracRes: 0.7030, norm(attn): 0.1982, norm(output): 0.9345, norm(x): 0.7522, norm(y): 1.0093, norm:0.6307, tok/sec: 101538.25, flops:106.58, batch-reuse:1
@ 2609 train 5.0569 , allloss: 5.0570, dt: 1305.84ms, fracRes: 0.7030, norm(attn): 0.1982, norm(output): 0.9345, norm(x): 0.7516, norm(y): 1.0092, norm:0.6883, tok/sec: 100374.03, flops:105.36, batch-reuse:1
@ 2610 train 5.0501 , allloss: 5.0511, dt: 1316.98ms, fracRes: 0.7028, norm(attn): 0.1982, norm(output): 0.9343, norm(x): 0.7519, norm(y): 1.0094, norm:0.7253, tok/sec: 99524.93, flops:104.46, batch-reuse:1
@ 2611 train 4.9372 , allloss: 4.9373, dt: 1296.31ms, fracRes: 0.7026, norm(attn): 0.2002, norm(output): 0.9344, norm(x): 0.7520, norm(y): 1.0095, norm:0.8500, tok/sec: 101111.49, flops:106.13, batch-reuse:1
@ 2612 train 4.9159 , allloss: 4.9161, dt: 1311.18ms, fracRes: 0.7026, norm(attn): 0.2021, norm(output): 0.9345, norm(x): 0.7518, norm(y): 1.0094, norm:0.9734, tok/sec: 99964.67, flops:104.93, batch-reuse:1
@ 2613 train 4.8215 , allloss: 4.8219, dt: 1330.37ms, fracRes: 0.7026, norm(attn): 0.2021, norm(output): 0.9344, norm(x): 0.7522, norm(y): 1.0093, norm:0.8966, tok/sec: 98523.22, flops:103.41, batch-reuse:1
@ 2614 train 4.9181 , allloss: 4.9183, dt: 1342.28ms, fracRes: 0.7027, norm(attn): 0.2002, norm(output): 0.9346, norm(x): 0.7522, norm(y): 1.0090, norm:0.6981, tok/sec: 97648.97, flops:102.50, batch-reuse:1
@ 2615 train 4.9559 , allloss: 4.9561, dt: 1339.43ms, fracRes: 0.7029, norm(attn): 0.1992, norm(output): 0.9347, norm(x): 0.7519, norm(y): 1.0091, norm:0.8321, tok/sec: 97856.47, flops:102.71, batch-reuse:1
@ 2616 train 4.9598 , allloss: 4.9602, dt: 1326.72ms, fracRes: 0.7028, norm(attn): 0.1973, norm(output): 0.9346, norm(x): 0.7522, norm(y): 1.0093, norm:0.7439, tok/sec: 98793.79, flops:103.70, batch-reuse:1
@ 2617 train 4.8371 , allloss: 4.8375, dt: 1324.83ms, fracRes: 0.7027, norm(attn): 0.1973, norm(output): 0.9344, norm(x): 0.7521, norm(y): 1.0093, norm:0.7166, tok/sec: 98934.83, flops:103.85, batch-reuse:1
@ 2618 train 4.8202 , allloss: 4.8204, dt: 1338.40ms, fracRes: 0.7027, norm(attn): 0.1943, norm(output): 0.9344, norm(x): 0.7518, norm(y): 1.0093, norm:0.6489, tok/sec: 97932.01, flops:102.79, batch-reuse:1
@ 2619 train 4.8863 , allloss: 4.8868, dt: 1337.38ms, fracRes: 0.7027, norm(attn): 0.1924, norm(output): 0.9345, norm(x): 0.7518, norm(y): 1.0094, norm:0.7947, tok/sec: 98006.64, flops:102.87, batch-reuse:1
@ 2620 train 4.9447 , allloss: 4.9449, dt: 1306.99ms, fracRes: 0.7027, norm(attn): 0.1904, norm(output): 0.9345, norm(x): 0.7523, norm(y): 1.0095, norm:0.8776, tok/sec: 100285.14, flops:105.26, batch-reuse:1
@ 2621 train 4.9252 , allloss: 4.9255, dt: 1308.11ms, fracRes: 0.7028, norm(attn): 0.1934, norm(output): 0.9345, norm(x): 0.7528, norm(y): 1.0092, norm:0.7380, tok/sec: 100199.89, flops:105.17, batch-reuse:1
@ 2622 train 4.8912 , allloss: 4.8914, dt: 1296.35ms, fracRes: 0.7027, norm(attn): 0.1934, norm(output): 0.9346, norm(x): 0.7533, norm(y): 1.0093, norm:0.6831, tok/sec: 101108.78, flops:106.13, batch-reuse:1
@ 2623 train 4.9746 , allloss: 4.9748, dt: 1289.36ms, fracRes: 0.7029, norm(attn): 0.1963, norm(output): 0.9346, norm(x): 0.7534, norm(y): 1.0092, norm:0.8696, tok/sec: 101656.43, flops:106.70, batch-reuse:1
@ 2624 train 4.9983 , allloss: 4.9984, dt: 1275.20ms, fracRes: 0.7032, norm(attn): 0.1953, norm(output): 0.9346, norm(x): 0.7532, norm(y): 1.0088, norm:0.7946, tok/sec: 102785.26, flops:107.89, batch-reuse:1
@ 2625 train 4.9059 , allloss: 4.9060, dt: 1288.57ms, fracRes: 0.7029, norm(attn): 0.1992, norm(output): 0.9346, norm(x): 0.7530, norm(y): 1.0089, norm:0.7316, tok/sec: 101719.27, flops:106.77, batch-reuse:1
@ 2626 train 4.8850 , allloss: 4.8851, dt: 1317.85ms, fracRes: 0.7027, norm(attn): 0.1992, norm(output): 0.9346, norm(x): 0.7521, norm(y): 1.0093, norm:0.7905, tok/sec: 99458.87, flops:104.40, batch-reuse:1
@ 2627 train 4.9272 , allloss: 4.9272, dt: 1318.29ms, fracRes: 0.7030, norm(attn): 0.1992, norm(output): 0.9345, norm(x): 0.7514, norm(y): 1.0091, norm:0.7294, tok/sec: 99426.13, flops:104.36, batch-reuse:1
@ 2628 train 4.8472 , allloss: 4.8473, dt: 1300.24ms, fracRes: 0.7031, norm(attn): 0.1943, norm(output): 0.9344, norm(x): 0.7514, norm(y): 1.0091, norm:0.7537, tok/sec: 100805.69, flops:105.81, batch-reuse:1
@ 2629 train 4.8508 , allloss: 4.8509, dt: 1342.96ms, fracRes: 0.7028, norm(attn): 0.1934, norm(output): 0.9345, norm(x): 0.7522, norm(y): 1.0094, norm:0.7853, tok/sec: 97599.31, flops:102.44, batch-reuse:1
@ 2630 train 4.9395 , allloss: 4.9396, dt: 1300.62ms, fracRes: 0.7029, norm(attn): 0.1934, norm(output): 0.9346, norm(x): 0.7524, norm(y): 1.0091, norm:0.7324, tok/sec: 100776.73, flops:105.78, batch-reuse:1
@ 2631 train 4.8313 , allloss: 4.8315, dt: 1294.45ms, fracRes: 0.7029, norm(attn): 0.1943, norm(output): 0.9346, norm(x): 0.7526, norm(y): 1.0091, norm:0.8320, tok/sec: 101257.01, flops:106.28, batch-reuse:1
@ 2632 train 4.8776 , allloss: 4.8777, dt: 1300.16ms, fracRes: 0.7030, norm(attn): 0.1934, norm(output): 0.9346, norm(x): 0.7527, norm(y): 1.0091, norm:0.7290, tok/sec: 100812.43, flops:105.82, batch-reuse:1
@ 2633 train 4.8676 , allloss: 4.8677, dt: 1296.83ms, fracRes: 0.7030, norm(attn): 0.1953, norm(output): 0.9346, norm(x): 0.7524, norm(y): 1.0090, norm:0.6781, tok/sec: 101071.13, flops:106.09, batch-reuse:1
@ 2634 train 4.8380 , allloss: 4.8382, dt: 1285.14ms, fracRes: 0.7030, norm(attn): 0.1973, norm(output): 0.9346, norm(x): 0.7519, norm(y): 1.0091, norm:0.7280, tok/sec: 101990.67, flops:107.05, batch-reuse:1
@ 2635 train 4.8458 , allloss: 4.8459, dt: 1313.15ms, fracRes: 0.7029, norm(attn): 0.1992, norm(output): 0.9346, norm(x): 0.7523, norm(y): 1.0091, norm:0.7434, tok/sec: 99814.79, flops:104.77, batch-reuse:1
@ 2636 train 4.8970 , allloss: 4.8971, dt: 1317.64ms, fracRes: 0.7029, norm(attn): 0.1943, norm(output): 0.9347, norm(x): 0.7522, norm(y): 1.0089, norm:0.7677, tok/sec: 99475.07, flops:104.41, batch-reuse:1
@ 2637 train 4.8457 , allloss: 4.8459, dt: 1334.86ms, fracRes: 0.7030, norm(attn): 0.1914, norm(output): 0.9345, norm(x): 0.7517, norm(y): 1.0090, norm:0.6798, tok/sec: 98191.93, flops:103.07, batch-reuse:1
@ 2638 train 4.9082 , allloss: 4.9126, dt: 1316.08ms, fracRes: 0.7031, norm(attn): 0.1914, norm(output): 0.9345, norm(x): 0.7517, norm(y): 1.0091, norm:0.8160, tok/sec: 99592.81, flops:104.54, batch-reuse:1
@ 2639 train 5.0587 , allloss: 5.0590, dt: 1347.06ms, fracRes: 0.7034, norm(attn): 0.1914, norm(output): 0.9345, norm(x): 0.7522, norm(y): 1.0091, norm:0.7125, tok/sec: 97302.22, flops:102.13, batch-reuse:1
@ 2640 train 4.8572 , allloss: 4.8573, dt: 1302.43ms, fracRes: 0.7031, norm(attn): 0.1953, norm(output): 0.9347, norm(x): 0.7521, norm(y): 1.0091, norm:0.8524, tok/sec: 100636.27, flops:105.63, batch-reuse:1
@ 2641 train 4.9657 , allloss: 4.9658, dt: 1298.87ms, fracRes: 0.7032, norm(attn): 0.1973, norm(output): 0.9345, norm(x): 0.7521, norm(y): 1.0088, norm:1.0926, tok/sec: 100912.40, flops:105.92, batch-reuse:1
@ 2642 train 4.8886 , allloss: 4.8890, dt: 1291.17ms, fracRes: 0.7032, norm(attn): 0.1953, norm(output): 0.9346, norm(x): 0.7518, norm(y): 1.0087, norm:0.8108, tok/sec: 101514.05, flops:106.55, batch-reuse:1
@ 2643 train 4.7961 , allloss: 4.7962, dt: 1313.24ms, fracRes: 0.7031, norm(attn): 0.1963, norm(output): 0.9346, norm(x): 0.7526, norm(y): 1.0089, norm:0.7482, tok/sec: 99807.76, flops:104.76, batch-reuse:1
@ 2644 train 4.8316 , allloss: 4.8316, dt: 1329.77ms, fracRes: 0.7031, norm(attn): 0.1982, norm(output): 0.9348, norm(x): 0.7530, norm(y): 1.0090, norm:0.7233, tok/sec: 98567.73, flops:103.46, batch-reuse:1
@ 2645 train 4.8911 , allloss: 4.8913, dt: 1294.79ms, fracRes: 0.7031, norm(attn): 0.1982, norm(output): 0.9346, norm(x): 0.7522, norm(y): 1.0091, norm:0.8475, tok/sec: 101230.31, flops:106.25, batch-reuse:1
@ 2646 train 4.8969 , allloss: 4.8972, dt: 1317.80ms, fracRes: 0.7032, norm(attn): 0.1963, norm(output): 0.9347, norm(x): 0.7519, norm(y): 1.0089, norm:0.7962, tok/sec: 99462.49, flops:104.40, batch-reuse:1
@ 2647 train 4.8651 , allloss: 4.8653, dt: 1320.89ms, fracRes: 0.7030, norm(attn): 0.1934, norm(output): 0.9349, norm(x): 0.7519, norm(y): 1.0091, norm:0.7242, tok/sec: 99230.27, flops:104.16, batch-reuse:1
@ 2648 train 4.8064 , allloss: 4.8064, dt: 1331.29ms, fracRes: 0.7029, norm(attn): 0.1943, norm(output): 0.9347, norm(x): 0.7522, norm(y): 1.0091, norm:0.7079, tok/sec: 98454.90, flops:103.34, batch-reuse:1
@ 2649 train 4.8583 , allloss: 4.8584, dt: 1278.97ms, fracRes: 0.7030, norm(attn): 0.1943, norm(output): 0.9346, norm(x): 0.7522, norm(y): 1.0090, norm:0.7437, tok/sec: 102482.29, flops:107.57, batch-reuse:1
@ 2650 train 4.8013 , allloss: 4.8015, dt: 1298.05ms, fracRes: 0.7028, norm(attn): 0.1963, norm(output): 0.9346, norm(x): 0.7520, norm(y): 1.0092, norm:0.8480, tok/sec: 100976.09, flops:105.99, batch-reuse:1
@ 2651 train 4.8125 , allloss: 4.8127, dt: 1285.97ms, fracRes: 0.7030, norm(attn): 0.1953, norm(output): 0.9346, norm(x): 0.7515, norm(y): 1.0092, norm:0.7185, tok/sec: 101924.66, flops:106.98, batch-reuse:1
@ 2652 train 4.8411 , allloss: 4.8412, dt: 1313.43ms, fracRes: 0.7031, norm(attn): 0.1982, norm(output): 0.9345, norm(x): 0.7513, norm(y): 1.0089, norm:0.9419, tok/sec: 99793.61, flops:104.75, batch-reuse:1
@ 2653 train 4.8498 , allloss: 4.8500, dt: 1318.85ms, fracRes: 0.7032, norm(attn): 0.1963, norm(output): 0.9346, norm(x): 0.7515, norm(y): 1.0090, norm:0.8223, tok/sec: 99383.73, flops:104.32, batch-reuse:1
@ 2654 train 4.8295 , allloss: 4.8296, dt: 1314.30ms, fracRes: 0.7035, norm(attn): 0.1963, norm(output): 0.9347, norm(x): 0.7510, norm(y): 1.0087, norm:0.6571, tok/sec: 99727.97, flops:104.68, batch-reuse:1
@ 2655 train 4.8046 , allloss: 4.8047, dt: 1307.44ms, fracRes: 0.7034, norm(attn): 0.1982, norm(output): 0.9346, norm(x): 0.7516, norm(y): 1.0087, norm:0.7038, tok/sec: 100250.87, flops:105.23, batch-reuse:1
@ 2656 train 4.8825 , allloss: 4.8827, dt: 1287.24ms, fracRes: 0.7031, norm(attn): 0.1953, norm(output): 0.9347, norm(x): 0.7517, norm(y): 1.0088, norm:0.6853, tok/sec: 101823.77, flops:106.88, batch-reuse:1
@ 2657 train 4.7552 , allloss: 4.7554, dt: 1288.01ms, fracRes: 0.7029, norm(attn): 0.1963, norm(output): 0.9348, norm(x): 0.7517, norm(y): 1.0088, norm:0.6599, tok/sec: 101763.38, flops:106.81, batch-reuse:1
@ 2658 train 4.8396 , allloss: 4.8398, dt: 1284.04ms, fracRes: 0.7032, norm(attn): 0.1973, norm(output): 0.9346, norm(x): 0.7512, norm(y): 1.0087, norm:0.7995, tok/sec: 102077.88, flops:107.14, batch-reuse:1
@ 2659 train 4.8273 , allloss: 4.8274, dt: 1350.81ms, fracRes: 0.7032, norm(attn): 0.1953, norm(output): 0.9348, norm(x): 0.7515, norm(y): 1.0087, norm:0.8511, tok/sec: 97032.46, flops:101.85, batch-reuse:1
@ 2660 train 4.8802 , allloss: 4.8804, dt: 1332.48ms, fracRes: 0.7035, norm(attn): 0.1953, norm(output): 0.9345, norm(x): 0.7519, norm(y): 1.0087, norm:0.6969, tok/sec: 98366.84, flops:103.25, batch-reuse:1
@ 2661 train 4.8194 , allloss: 4.8195, dt: 1287.53ms, fracRes: 0.7031, norm(attn): 0.1982, norm(output): 0.9347, norm(x): 0.7522, norm(y): 1.0089, norm:0.8330, tok/sec: 101800.75, flops:106.85, batch-reuse:1
@ 2662 train 4.7811 , allloss: 4.7813, dt: 1279.15ms, fracRes: 0.7029, norm(attn): 0.1934, norm(output): 0.9344, norm(x): 0.7517, norm(y): 1.0092, norm:1.0406, tok/sec: 102467.70, flops:107.55, batch-reuse:1
@ 2663 train 4.8091 , allloss: 4.8092, dt: 1302.09ms, fracRes: 0.7029, norm(attn): 0.1914, norm(output): 0.9344, norm(x): 0.7504, norm(y): 1.0094, norm:0.7683, tok/sec: 100662.62, flops:105.66, batch-reuse:1
@ 2664 train 4.8620 , allloss: 4.8621, dt: 1275.59ms, fracRes: 0.7030, norm(attn): 0.1943, norm(output): 0.9346, norm(x): 0.7502, norm(y): 1.0092, norm:0.7515, tok/sec: 102753.74, flops:107.85, batch-reuse:1
@ 2665 train 4.7996 , allloss: 4.7997, dt: 1306.08ms, fracRes: 0.7031, norm(attn): 0.1992, norm(output): 0.9346, norm(x): 0.7505, norm(y): 1.0092, norm:0.7215, tok/sec: 100355.58, flops:105.34, batch-reuse:1
@ 2666 train 4.9112 , allloss: 4.9114, dt: 1324.55ms, fracRes: 0.7033, norm(attn): 0.1963, norm(output): 0.9346, norm(x): 0.7502, norm(y): 1.0089, norm:0.7133, tok/sec: 98956.07, flops:103.87, batch-reuse:1
@ 2667 train 4.8788 , allloss: 4.8790, dt: 1303.90ms, fracRes: 0.7032, norm(attn): 0.1953, norm(output): 0.9346, norm(x): 0.7503, norm(y): 1.0089, norm:0.6211, tok/sec: 100523.23, flops:105.51, batch-reuse:1
@ 2668 train 4.8501 , allloss: 4.8502, dt: 1328.78ms, fracRes: 0.7028, norm(attn): 0.1953, norm(output): 0.9345, norm(x): 0.7505, norm(y): 1.0091, norm:0.6894, tok/sec: 98640.86, flops:103.54, batch-reuse:1
@ 2669 train 4.7908 , allloss: 4.7909, dt: 1276.64ms, fracRes: 0.7025, norm(attn): 0.1992, norm(output): 0.9347, norm(x): 0.7513, norm(y): 1.0093, norm:0.6449, tok/sec: 102669.21, flops:107.76, batch-reuse:1
@ 2670 train 4.7820 , allloss: 4.7821, dt: 1297.91ms, fracRes: 0.7026, norm(attn): 0.1963, norm(output): 0.9347, norm(x): 0.7521, norm(y): 1.0091, norm:0.6737, tok/sec: 100986.94, flops:106.00, batch-reuse:1
@ 2671 train 4.8226 , allloss: 4.8228, dt: 1287.45ms, fracRes: 0.7031, norm(attn): 0.1934, norm(output): 0.9347, norm(x): 0.7523, norm(y): 1.0085, norm:0.7205, tok/sec: 101807.16, flops:106.86, batch-reuse:1
@ 2672 train 4.8096 , allloss: 4.8097, dt: 1296.66ms, fracRes: 0.7033, norm(attn): 0.1963, norm(output): 0.9347, norm(x): 0.7520, norm(y): 1.0085, norm:0.6641, tok/sec: 101084.24, flops:106.10, batch-reuse:1
@ 2673 train 4.7151 , allloss: 4.7152, dt: 1286.31ms, fracRes: 0.7035, norm(attn): 0.1982, norm(output): 0.9347, norm(x): 0.7515, norm(y): 1.0086, norm:0.7094, tok/sec: 101897.42, flops:106.95, batch-reuse:1
@ 2674 train 4.9276 , allloss: 4.9276, dt: 1281.16ms, fracRes: 0.7036, norm(attn): 0.1982, norm(output): 0.9349, norm(x): 0.7508, norm(y): 1.0085, norm:0.8896, tok/sec: 102307.47, flops:107.39, batch-reuse:1
@ 2675 train 4.8411 , allloss: 4.8413, dt: 1298.56ms, fracRes: 0.7033, norm(attn): 0.1992, norm(output): 0.9347, norm(x): 0.7512, norm(y): 1.0086, norm:0.8229, tok/sec: 100936.52, flops:105.95, batch-reuse:1
@ 2676 train 4.7971 , allloss: 4.7973, dt: 1305.08ms, fracRes: 0.7032, norm(attn): 0.1992, norm(output): 0.9348, norm(x): 0.7512, norm(y): 1.0086, norm:0.8204, tok/sec: 100432.46, flops:105.42, batch-reuse:1
@ 2677 train 4.7844 , allloss: 4.7845, dt: 1317.48ms, fracRes: 0.7033, norm(attn): 0.1973, norm(output): 0.9348, norm(x): 0.7515, norm(y): 1.0087, norm:0.7803, tok/sec: 99487.20, flops:104.42, batch-reuse:1
@ 2678 train 4.9077 , allloss: 4.9091, dt: 1326.13ms, fracRes: 0.7035, norm(attn): 0.2012, norm(output): 0.9348, norm(x): 0.7514, norm(y): 1.0087, norm:0.8392, tok/sec: 98838.33, flops:103.74, batch-reuse:1
@ 2679 train 4.8425 , allloss: 4.8433, dt: 1326.51ms, fracRes: 0.7035, norm(attn): 0.1973, norm(output): 0.9348, norm(x): 0.7519, norm(y): 1.0084, norm:0.9090, tok/sec: 98809.45, flops:103.71, batch-reuse:1
@ 2680 train 4.7329 , allloss: 4.7329, dt: 1334.47ms, fracRes: 0.7035, norm(attn): 0.1982, norm(output): 0.9348, norm(x): 0.7521, norm(y): 1.0083, norm:0.8264, tok/sec: 98220.05, flops:103.09, batch-reuse:1
@ 2681 train 4.8178 , allloss: 4.8180, dt: 1338.13ms, fracRes: 0.7035, norm(attn): 0.1934, norm(output): 0.9348, norm(x): 0.7522, norm(y): 1.0084, norm:0.7053, tok/sec: 97951.43, flops:102.81, batch-reuse:1
@ 2682 train 4.6983 , allloss: 4.6985, dt: 1305.27ms, fracRes: 0.7031, norm(attn): 0.1973, norm(output): 0.9348, norm(x): 0.7514, norm(y): 1.0087, norm:0.8323, tok/sec: 100417.49, flops:105.40, batch-reuse:1
@ 2683 train 4.7661 , allloss: 4.7661, dt: 1317.50ms, fracRes: 0.7030, norm(attn): 0.1953, norm(output): 0.9347, norm(x): 0.7514, norm(y): 1.0090, norm:0.7475, tok/sec: 99485.54, flops:104.42, batch-reuse:1
@ 2684 train 4.8179 , allloss: 4.8179, dt: 1306.39ms, fracRes: 0.7028, norm(attn): 0.1934, norm(output): 0.9346, norm(x): 0.7511, norm(y): 1.0090, norm:0.6393, tok/sec: 100331.21, flops:105.31, batch-reuse:1
@ 2685 train 4.8171 , allloss: 4.8172, dt: 1325.74ms, fracRes: 0.7028, norm(attn): 0.1992, norm(output): 0.9347, norm(x): 0.7517, norm(y): 1.0089, norm:0.8338, tok/sec: 98866.83, flops:103.77, batch-reuse:1
@ 2686 train 4.8659 , allloss: 4.8660, dt: 1315.61ms, fracRes: 0.7031, norm(attn): 0.2021, norm(output): 0.9348, norm(x): 0.7522, norm(y): 1.0087, norm:0.6665, tok/sec: 99628.60, flops:104.57, batch-reuse:1
@ 2687 train 4.8123 , allloss: 4.8124, dt: 1308.76ms, fracRes: 0.7034, norm(attn): 0.2031, norm(output): 0.9347, norm(x): 0.7526, norm(y): 1.0083, norm:0.8741, tok/sec: 100149.88, flops:105.12, batch-reuse:1
@ 2688 train 4.7663 , allloss: 4.7664, dt: 1276.35ms, fracRes: 0.7034, norm(attn): 0.2021, norm(output): 0.9348, norm(x): 0.7525, norm(y): 1.0082, norm:0.9700, tok/sec: 102692.72, flops:107.79, batch-reuse:1
@ 2689 train 4.8946 , allloss: 4.8947, dt: 1296.61ms, fracRes: 0.7032, norm(attn): 0.2002, norm(output): 0.9347, norm(x): 0.7521, norm(y): 1.0087, norm:0.8580, tok/sec: 101088.19, flops:106.11, batch-reuse:1
@ 2690 train 4.8255 , allloss: 4.8256, dt: 1311.13ms, fracRes: 0.7030, norm(attn): 0.1992, norm(output): 0.9347, norm(x): 0.7515, norm(y): 1.0090, norm:0.8663, tok/sec: 99968.42, flops:104.93, batch-reuse:1
@ 2691 train 4.8131 , allloss: 4.8134, dt: 1332.43ms, fracRes: 0.7030, norm(attn): 0.1992, norm(output): 0.9347, norm(x): 0.7504, norm(y): 1.0089, norm:0.9364, tok/sec: 98370.57, flops:103.25, batch-reuse:1
@ 2692 train 4.6987 , allloss: 4.6990, dt: 1328.43ms, fracRes: 0.7033, norm(attn): 0.2002, norm(output): 0.9345, norm(x): 0.7500, norm(y): 1.0087, norm:0.7804, tok/sec: 98667.14, flops:103.56, batch-reuse:1
@ 2693 train 4.8910 , allloss: 4.8912, dt: 1311.17ms, fracRes: 0.7034, norm(attn): 0.1982, norm(output): 0.9346, norm(x): 0.7511, norm(y): 1.0087, norm:0.8349, tok/sec: 99965.73, flops:104.93, batch-reuse:1
@ 2694 train 4.8217 , allloss: 4.8219, dt: 1290.13ms, fracRes: 0.7033, norm(attn): 0.1973, norm(output): 0.9347, norm(x): 0.7515, norm(y): 1.0087, norm:0.7500, tok/sec: 101596.12, flops:106.64, batch-reuse:1
@ 2695 train 4.8381 , allloss: 4.8384, dt: 1308.22ms, fracRes: 0.7031, norm(attn): 0.1963, norm(output): 0.9346, norm(x): 0.7517, norm(y): 1.0088, norm:1.0146, tok/sec: 100190.98, flops:105.16, batch-reuse:1
@ 2696 train 4.7772 , allloss: 4.7773, dt: 1310.81ms, fracRes: 0.7028, norm(attn): 0.1982, norm(output): 0.9347, norm(x): 0.7518, norm(y): 1.0089, norm:0.8418, tok/sec: 99993.20, flops:104.96, batch-reuse:1
@ 2697 train 4.7354 , allloss: 4.7378, dt: 1305.32ms, fracRes: 0.7029, norm(attn): 0.2002, norm(output): 0.9347, norm(x): 0.7520, norm(y): 1.0089, norm:0.8256, tok/sec: 100413.43, flops:105.40, batch-reuse:1
@ 2698 train 4.7459 , allloss: 4.7460, dt: 1308.85ms, fracRes: 0.7029, norm(attn): 0.2021, norm(output): 0.9347, norm(x): 0.7516, norm(y): 1.0088, norm:0.6676, tok/sec: 100143.25, flops:105.11, batch-reuse:1
@ 2699 train 4.8178 , allloss: 4.8179, dt: 1282.02ms, fracRes: 0.7028, norm(attn): 0.2002, norm(output): 0.9347, norm(x): 0.7511, norm(y): 1.0089, norm:0.8000, tok/sec: 102238.80, flops:107.31, batch-reuse:1
@ 2700 train 4.7440 , allloss: 4.7442, dt: 1320.81ms, fracRes: 0.7030, norm(attn): 0.1992, norm(output): 0.9345, norm(x): 0.7508, norm(y): 1.0089, norm:0.7653, tok/sec: 99236.34, flops:104.16, batch-reuse:1
@ 2701 train 4.6765 , allloss: 4.6766, dt: 1321.55ms, fracRes: 0.7032, norm(attn): 0.1943, norm(output): 0.9345, norm(x): 0.7506, norm(y): 1.0088, norm:0.6336, tok/sec: 99180.80, flops:104.10, batch-reuse:1
@ 2702 train 4.8319 , allloss: 4.8320, dt: 1313.59ms, fracRes: 0.7032, norm(attn): 0.1934, norm(output): 0.9346, norm(x): 0.7512, norm(y): 1.0089, norm:0.8143, tok/sec: 99781.53, flops:104.73, batch-reuse:1
@ 2703 train 4.8054 , allloss: 4.8055, dt: 1303.29ms, fracRes: 0.7032, norm(attn): 0.1934, norm(output): 0.9348, norm(x): 0.7521, norm(y): 1.0086, norm:0.7555, tok/sec: 100570.44, flops:105.56, batch-reuse:1
@ 2704 train 4.9122 , allloss: 4.9124, dt: 1328.85ms, fracRes: 0.7032, norm(attn): 0.1943, norm(output): 0.9346, norm(x): 0.7523, norm(y): 1.0085, norm:0.5935, tok/sec: 98635.47, flops:103.53, batch-reuse:1
@ 2705 train 4.7589 , allloss: 4.7591, dt: 1322.72ms, fracRes: 0.7031, norm(attn): 0.1943, norm(output): 0.9347, norm(x): 0.7526, norm(y): 1.0086, norm:0.8696, tok/sec: 99093.15, flops:104.01, batch-reuse:1
@ 2706 train 4.7122 , allloss: 4.7123, dt: 1328.94ms, fracRes: 0.7030, norm(attn): 0.1934, norm(output): 0.9347, norm(x): 0.7523, norm(y): 1.0086, norm:0.6411, tok/sec: 98629.08, flops:103.52, batch-reuse:1
@ 2707 train 4.7746 , allloss: 4.7747, dt: 1316.38ms, fracRes: 0.7030, norm(attn): 0.1934, norm(output): 0.9347, norm(x): 0.7514, norm(y): 1.0088, norm:0.6281, tok/sec: 99570.19, flops:104.51, batch-reuse:1
@ 2708 train 4.7394 , allloss: 4.7394, dt: 1324.71ms, fracRes: 0.7029, norm(attn): 0.1973, norm(output): 0.9346, norm(x): 0.7515, norm(y): 1.0089, norm:0.7161, tok/sec: 98943.86, flops:103.85, batch-reuse:1
@ 2709 train 4.7467 , allloss: 4.7468, dt: 1334.85ms, fracRes: 0.7028, norm(attn): 0.1982, norm(output): 0.9346, norm(x): 0.7518, norm(y): 1.0089, norm:0.7073, tok/sec: 98192.11, flops:103.07, batch-reuse:1
@ 2710 train 4.8996 , allloss: 4.8997, dt: 1331.99ms, fracRes: 0.7029, norm(attn): 0.1934, norm(output): 0.9346, norm(x): 0.7515, norm(y): 1.0087, norm:0.6449, tok/sec: 98403.32, flops:103.29, batch-reuse:1
@ 2711 train 4.8816 , allloss: 4.8818, dt: 1343.29ms, fracRes: 0.7029, norm(attn): 0.1982, norm(output): 0.9348, norm(x): 0.7517, norm(y): 1.0087, norm:0.7755, tok/sec: 97575.59, flops:102.42, batch-reuse:1
@ 2712 train 4.8009 , allloss: 4.8009, dt: 1290.76ms, fracRes: 0.7030, norm(attn): 0.1973, norm(output): 0.9346, norm(x): 0.7518, norm(y): 1.0088, norm:0.9410, tok/sec: 101546.34, flops:106.59, batch-reuse:1
@ 2713 train 4.8209 , allloss: 4.8210, dt: 1288.33ms, fracRes: 0.7029, norm(attn): 0.2012, norm(output): 0.9346, norm(x): 0.7522, norm(y): 1.0089, norm:0.8864, tok/sec: 101737.75, flops:106.79, batch-reuse:1
@ 2714 train 4.8767 , allloss: 4.8767, dt: 1281.39ms, fracRes: 0.7030, norm(attn): 0.1992, norm(output): 0.9347, norm(x): 0.7521, norm(y): 1.0088, norm:0.7372, tok/sec: 102289.25, flops:107.37, batch-reuse:1
@ 2715 train 4.7456 , allloss: 4.7458, dt: 1314.43ms, fracRes: 0.7031, norm(attn): 0.2002, norm(output): 0.9346, norm(x): 0.7522, norm(y): 1.0085, norm:0.8427, tok/sec: 99717.98, flops:104.67, batch-reuse:1
@ 2716 train 4.7436 , allloss: 4.7438, dt: 1340.04ms, fracRes: 0.7032, norm(attn): 0.2002, norm(output): 0.9347, norm(x): 0.7523, norm(y): 1.0084, norm:0.8843, tok/sec: 97812.15, flops:102.67, batch-reuse:1
@ 2717 train 4.7968 , allloss: 4.7971, dt: 1285.02ms, fracRes: 0.7031, norm(attn): 0.1992, norm(output): 0.9347, norm(x): 0.7528, norm(y): 1.0086, norm:0.8259, tok/sec: 101999.62, flops:107.06, batch-reuse:1
@ 2718 train 4.6884 , allloss: 4.6885, dt: 1309.08ms, fracRes: 0.7030, norm(attn): 0.1963, norm(output): 0.9348, norm(x): 0.7522, norm(y): 1.0089, norm:0.7091, tok/sec: 100125.47, flops:105.09, batch-reuse:1
@ 2719 train 4.8512 , allloss: 4.8513, dt: 1346.76ms, fracRes: 0.7029, norm(attn): 0.1953, norm(output): 0.9347, norm(x): 0.7516, norm(y): 1.0089, norm:0.7434, tok/sec: 97323.76, flops:102.15, batch-reuse:1
@ 2720 train 4.7999 , allloss: 4.8000, dt: 1331.61ms, fracRes: 0.7027, norm(attn): 0.1982, norm(output): 0.9346, norm(x): 0.7516, norm(y): 1.0088, norm:0.6621, tok/sec: 98431.12, flops:103.32, batch-reuse:1
@ 2721 train 4.7318 , allloss: 4.7319, dt: 1305.12ms, fracRes: 0.7025, norm(attn): 0.1973, norm(output): 0.9347, norm(x): 0.7522, norm(y): 1.0091, norm:0.7150, tok/sec: 100428.71, flops:105.41, batch-reuse:1
@ 2722 train 4.7520 , allloss: 4.7522, dt: 1312.47ms, fracRes: 0.7025, norm(attn): 0.1943, norm(output): 0.9347, norm(x): 0.7524, norm(y): 1.0092, norm:0.7184, tok/sec: 99866.59, flops:104.82, batch-reuse:1
@ 2723 train 4.8307 , allloss: 4.8308, dt: 1298.02ms, fracRes: 0.7028, norm(attn): 0.1953, norm(output): 0.9348, norm(x): 0.7521, norm(y): 1.0090, norm:0.6646, tok/sec: 100978.40, flops:105.99, batch-reuse:1
@ 2724 train 4.7157 , allloss: 4.7191, dt: 1312.26ms, fracRes: 0.7028, norm(attn): 0.1934, norm(output): 0.9347, norm(x): 0.7526, norm(y): 1.0087, norm:0.7302, tok/sec: 99882.40, flops:104.84, batch-reuse:1
@ 2725 train 4.7447 , allloss: 4.7448, dt: 1324.13ms, fracRes: 0.7029, norm(attn): 0.1963, norm(output): 0.9348, norm(x): 0.7531, norm(y): 1.0085, norm:0.6940, tok/sec: 98987.61, flops:103.90, batch-reuse:1
@ 2726 train 4.7456 , allloss: 4.7457, dt: 1309.77ms, fracRes: 0.7030, norm(attn): 0.1973, norm(output): 0.9348, norm(x): 0.7530, norm(y): 1.0087, norm:0.7820, tok/sec: 100072.65, flops:105.04, batch-reuse:1
@ 2727 train 4.8197 , allloss: 4.8293, dt: 1332.84ms, fracRes: 0.7030, norm(attn): 0.1982, norm(output): 0.9347, norm(x): 0.7528, norm(y): 1.0088, norm:0.5966, tok/sec: 98340.67, flops:103.22, batch-reuse:1
@ 2728 train 4.8264 , allloss: 4.8265, dt: 1326.44ms, fracRes: 0.7029, norm(attn): 0.1973, norm(output): 0.9347, norm(x): 0.7529, norm(y): 1.0090, norm:0.6924, tok/sec: 98815.01, flops:103.72, batch-reuse:1
@ 2729 train 4.7998 , allloss: 4.8001, dt: 1311.97ms, fracRes: 0.7032, norm(attn): 0.1953, norm(output): 0.9347, norm(x): 0.7528, norm(y): 1.0087, norm:0.5652, tok/sec: 99904.72, flops:104.86, batch-reuse:1
@ 2730 train 4.8010 , allloss: 4.8011, dt: 1287.58ms, fracRes: 0.7030, norm(attn): 0.1973, norm(output): 0.9347, norm(x): 0.7530, norm(y): 1.0086, norm:0.7557, tok/sec: 101797.41, flops:106.85, batch-reuse:1
@ 2731 train 4.7400 , allloss: 4.7402, dt: 1314.93ms, fracRes: 0.7030, norm(attn): 0.2002, norm(output): 0.9347, norm(x): 0.7523, norm(y): 1.0086, norm:0.8483, tok/sec: 99679.91, flops:104.63, batch-reuse:1
@ 2732 train 4.7730 , allloss: 4.7732, dt: 1300.14ms, fracRes: 0.7029, norm(attn): 0.1982, norm(output): 0.9347, norm(x): 0.7521, norm(y): 1.0086, norm:0.8394, tok/sec: 100813.69, flops:105.82, batch-reuse:1
@ 2733 train 4.7961 , allloss: 4.7964, dt: 1280.17ms, fracRes: 0.7030, norm(attn): 0.1982, norm(output): 0.9346, norm(x): 0.7514, norm(y): 1.0086, norm:0.7405, tok/sec: 102386.60, flops:107.47, batch-reuse:1
@ 2734 train 4.7220 , allloss: 4.7223, dt: 1279.96ms, fracRes: 0.7028, norm(attn): 0.1982, norm(output): 0.9345, norm(x): 0.7511, norm(y): 1.0090, norm:0.7511, tok/sec: 102402.96, flops:107.49, batch-reuse:1
@ 2735 train 4.8081 , allloss: 4.8085, dt: 1295.05ms, fracRes: 0.7027, norm(attn): 0.1982, norm(output): 0.9347, norm(x): 0.7515, norm(y): 1.0090, norm:0.7043, tok/sec: 101210.07, flops:106.23, batch-reuse:1
@ 2736 train 4.8442 , allloss: 4.8443, dt: 1294.11ms, fracRes: 0.7027, norm(attn): 0.1982, norm(output): 0.9348, norm(x): 0.7522, norm(y): 1.0087, norm:0.7149, tok/sec: 101283.60, flops:106.31, batch-reuse:1
@ 2737 train 4.7868 , allloss: 4.7869, dt: 1282.76ms, fracRes: 0.7029, norm(attn): 0.1953, norm(output): 0.9349, norm(x): 0.7525, norm(y): 1.0084, norm:0.7162, tok/sec: 102179.30, flops:107.25, batch-reuse:1
@ 2738 train 4.7104 , allloss: 4.7110, dt: 1308.10ms, fracRes: 0.7033, norm(attn): 0.1953, norm(output): 0.9346, norm(x): 0.7521, norm(y): 1.0085, norm:0.9125, tok/sec: 100200.62, flops:105.17, batch-reuse:1
@ 2739 train 4.7870 , allloss: 4.7873, dt: 1316.76ms, fracRes: 0.7032, norm(attn): 0.1934, norm(output): 0.9347, norm(x): 0.7527, norm(y): 1.0085, norm:0.8464, tok/sec: 99541.01, flops:104.48, batch-reuse:1
@ 2740 train 4.6330 , allloss: 4.6333, dt: 1279.23ms, fracRes: 0.7030, norm(attn): 0.1953, norm(output): 0.9347, norm(x): 0.7524, norm(y): 1.0087, norm:0.9589, tok/sec: 102461.26, flops:107.55, batch-reuse:1
@ 2741 train 4.7083 , allloss: 4.7084, dt: 1296.06ms, fracRes: 0.7028, norm(attn): 0.1924, norm(output): 0.9347, norm(x): 0.7521, norm(y): 1.0087, norm:0.8909, tok/sec: 101131.21, flops:106.15, batch-reuse:1
@ 2742 train 4.7262 , allloss: 4.7266, dt: 1294.67ms, fracRes: 0.7028, norm(attn): 0.1914, norm(output): 0.9345, norm(x): 0.7521, norm(y): 1.0087, norm:0.7909, tok/sec: 101239.45, flops:106.26, batch-reuse:1
@ 2743 train 4.6749 , allloss: 4.6751, dt: 1298.44ms, fracRes: 0.7029, norm(attn): 0.1924, norm(output): 0.9345, norm(x): 0.7517, norm(y): 1.0086, norm:0.7553, tok/sec: 100946.07, flops:105.96, batch-reuse:1
@ 2744 train 4.7231 , allloss: 4.7233, dt: 1324.34ms, fracRes: 0.7031, norm(attn): 0.1973, norm(output): 0.9346, norm(x): 0.7519, norm(y): 1.0086, norm:0.7338, tok/sec: 98971.89, flops:103.88, batch-reuse:1
@ 2745 train 4.6875 , allloss: 4.6878, dt: 1291.15ms, fracRes: 0.7031, norm(attn): 0.2002, norm(output): 0.9346, norm(x): 0.7522, norm(y): 1.0084, norm:0.8943, tok/sec: 101515.66, flops:106.55, batch-reuse:1
@ 2746 train 4.6584 , allloss: 4.6589, dt: 1287.03ms, fracRes: 0.7030, norm(attn): 0.2002, norm(output): 0.9346, norm(x): 0.7519, norm(y): 1.0081, norm:0.6342, tok/sec: 101840.33, flops:106.89, batch-reuse:1
@ 2747 train 4.7074 , allloss: 4.7079, dt: 1301.49ms, fracRes: 0.7030, norm(attn): 0.1943, norm(output): 0.9346, norm(x): 0.7515, norm(y): 1.0083, norm:0.7018, tok/sec: 100709.50, flops:105.71, batch-reuse:1
@ 2748 train 4.7440 , allloss: 4.7443, dt: 1307.14ms, fracRes: 0.7029, norm(attn): 0.1953, norm(output): 0.9348, norm(x): 0.7510, norm(y): 1.0085, norm:0.7765, tok/sec: 100273.63, flops:105.25, batch-reuse:1
@ 2749 train 4.6836 , allloss: 4.6837, dt: 1307.89ms, fracRes: 0.7031, norm(attn): 0.1973, norm(output): 0.9346, norm(x): 0.7513, norm(y): 1.0085, norm:0.8760, tok/sec: 100216.44, flops:105.19, batch-reuse:1
@ 2750 train 4.7185 , allloss: 4.7188, dt: 1297.48ms, fracRes: 0.7029, norm(attn): 0.1982, norm(output): 0.9344, norm(x): 0.7514, norm(y): 1.0085, norm:0.9117, tok/sec: 101020.39, flops:106.03, batch-reuse:1
@ 2751 train 4.7537 , allloss: 4.7539, dt: 1285.12ms, fracRes: 0.7029, norm(attn): 0.1934, norm(output): 0.9345, norm(x): 0.7510, norm(y): 1.0082, norm:0.7290, tok/sec: 101992.11, flops:107.05, batch-reuse:1
@ 2752 train 4.6947 , allloss: 4.6948, dt: 1297.14ms, fracRes: 0.7029, norm(attn): 0.1963, norm(output): 0.9346, norm(x): 0.7509, norm(y): 1.0084, norm:0.7625, tok/sec: 101047.22, flops:106.06, batch-reuse:1
@ 2753 train 4.7399 , allloss: 4.7401, dt: 1296.90ms, fracRes: 0.7028, norm(attn): 0.1963, norm(output): 0.9347, norm(x): 0.7518, norm(y): 1.0087, norm:0.7459, tok/sec: 101065.62, flops:106.08, batch-reuse:1
@ 2754 train 4.7122 , allloss: 4.7125, dt: 1298.31ms, fracRes: 0.7030, norm(attn): 0.1963, norm(output): 0.9348, norm(x): 0.7522, norm(y): 1.0083, norm:0.7648, tok/sec: 100955.89, flops:105.97, batch-reuse:1
@ 2755 train 4.7050 , allloss: 4.7052, dt: 1311.90ms, fracRes: 0.7033, norm(attn): 0.1973, norm(output): 0.9349, norm(x): 0.7522, norm(y): 1.0081, norm:0.7933, tok/sec: 99910.03, flops:104.87, batch-reuse:1
@ 2756 train 4.6416 , allloss: 4.6418, dt: 1301.60ms, fracRes: 0.7032, norm(attn): 0.1953, norm(output): 0.9347, norm(x): 0.7517, norm(y): 1.0086, norm:0.7760, tok/sec: 100701.03, flops:105.70, batch-reuse:1
@ 2757 train 4.7153 , allloss: 4.7154, dt: 1275.12ms, fracRes: 0.7030, norm(attn): 0.1953, norm(output): 0.9347, norm(x): 0.7510, norm(y): 1.0086, norm:0.7191, tok/sec: 102791.70, flops:107.89, batch-reuse:1
@ 2758 train 4.6948 , allloss: 4.6950, dt: 1287.78ms, fracRes: 0.7028, norm(attn): 0.1982, norm(output): 0.9346, norm(x): 0.7513, norm(y): 1.0086, norm:0.6423, tok/sec: 101781.75, flops:106.83, batch-reuse:1
@ 2759 train 4.6919 , allloss: 4.6920, dt: 1305.38ms, fracRes: 0.7026, norm(attn): 0.1992, norm(output): 0.9347, norm(x): 0.7521, norm(y): 1.0086, norm:0.6924, tok/sec: 100408.98, flops:105.39, batch-reuse:1
@ 2760 train 4.6030 , allloss: 4.6031, dt: 1322.38ms, fracRes: 0.7026, norm(attn): 0.2021, norm(output): 0.9347, norm(x): 0.7523, norm(y): 1.0084, norm:0.7985, tok/sec: 99118.63, flops:104.04, batch-reuse:1
@ 2761 train 4.7465 , allloss: 4.7466, dt: 1296.24ms, fracRes: 0.7029, norm(attn): 0.1982, norm(output): 0.9347, norm(x): 0.7521, norm(y): 1.0082, norm:0.6754, tok/sec: 101117.46, flops:106.14, batch-reuse:1
@ 2762 train 4.7324 , allloss: 4.7325, dt: 1318.54ms, fracRes: 0.7031, norm(attn): 0.1992, norm(output): 0.9347, norm(x): 0.7523, norm(y): 1.0085, norm:0.6395, tok/sec: 99407.06, flops:104.34, batch-reuse:1
@ 2763 train 4.7325 , allloss: 4.7326, dt: 1312.53ms, fracRes: 0.7033, norm(attn): 0.1982, norm(output): 0.9346, norm(x): 0.7520, norm(y): 1.0086, norm:0.7484, tok/sec: 99862.10, flops:104.82, batch-reuse:1
@ 2764 train 4.6710 , allloss: 4.6711, dt: 1290.04ms, fracRes: 0.7032, norm(attn): 0.1973, norm(output): 0.9347, norm(x): 0.7515, norm(y): 1.0085, norm:0.7359, tok/sec: 101603.14, flops:106.65, batch-reuse:1
@ 2765 train 4.7506 , allloss: 4.7508, dt: 1310.87ms, fracRes: 0.7032, norm(attn): 0.1982, norm(output): 0.9347, norm(x): 0.7517, norm(y): 1.0086, norm:0.7735, tok/sec: 99988.67, flops:104.95, batch-reuse:1
@ 2766 train 4.7139 , allloss: 4.7144, dt: 1286.44ms, fracRes: 0.7031, norm(attn): 0.2012, norm(output): 0.9348, norm(x): 0.7525, norm(y): 1.0082, norm:0.7418, tok/sec: 101887.03, flops:106.94, batch-reuse:1
@ 2767 train 4.7031 , allloss: 4.7032, dt: 1299.45ms, fracRes: 0.7032, norm(attn): 0.2002, norm(output): 0.9347, norm(x): 0.7524, norm(y): 1.0082, norm:0.7288, tok/sec: 100867.15, flops:105.87, batch-reuse:1
@ 2768 train 4.6854 , allloss: 4.6857, dt: 1314.00ms, fracRes: 0.7033, norm(attn): 0.1992, norm(output): 0.9347, norm(x): 0.7514, norm(y): 1.0084, norm:0.7347, tok/sec: 99750.44, flops:104.70, batch-reuse:1
@ 2769 train 4.7172 , allloss: 4.7173, dt: 1315.43ms, fracRes: 0.7033, norm(attn): 0.1992, norm(output): 0.9347, norm(x): 0.7513, norm(y): 1.0085, norm:0.6543, tok/sec: 99641.84, flops:104.59, batch-reuse:1
@ 2770 train 4.6768 , allloss: 4.6770, dt: 1299.45ms, fracRes: 0.7031, norm(attn): 0.2002, norm(output): 0.9347, norm(x): 0.7515, norm(y): 1.0086, norm:0.5859, tok/sec: 100867.30, flops:105.87, batch-reuse:1
@ 2771 train 4.8032 , allloss: 4.8033, dt: 1279.27ms, fracRes: 0.7030, norm(attn): 0.2002, norm(output): 0.9348, norm(x): 0.7516, norm(y): 1.0089, norm:0.7382, tok/sec: 102458.52, flops:107.54, batch-reuse:1
@ 2772 train 4.6049 , allloss: 4.6051, dt: 1291.60ms, fracRes: 0.7026, norm(attn): 0.1973, norm(output): 0.9347, norm(x): 0.7517, norm(y): 1.0088, norm:0.6374, tok/sec: 101480.52, flops:106.52, batch-reuse:1
@ 2773 train 4.6946 , allloss: 4.6949, dt: 1306.85ms, fracRes: 0.7027, norm(attn): 0.1943, norm(output): 0.9347, norm(x): 0.7523, norm(y): 1.0084, norm:0.7314, tok/sec: 100296.43, flops:105.27, batch-reuse:1
@ 2774 train 4.6268 , allloss: 4.6272, dt: 1294.09ms, fracRes: 0.7031, norm(attn): 0.1934, norm(output): 0.9347, norm(x): 0.7528, norm(y): 1.0083, norm:0.8925, tok/sec: 101284.81, flops:106.31, batch-reuse:1
@ 2775 train 4.6959 , allloss: 4.6960, dt: 1321.77ms, fracRes: 0.7033, norm(attn): 0.1953, norm(output): 0.9348, norm(x): 0.7530, norm(y): 1.0084, norm:0.8958, tok/sec: 99163.99, flops:104.09, batch-reuse:1
@ 2776 train 4.8254 , allloss: 4.8255, dt: 1314.23ms, fracRes: 0.7034, norm(attn): 0.1992, norm(output): 0.9348, norm(x): 0.7530, norm(y): 1.0083, norm:0.7796, tok/sec: 99732.69, flops:104.68, batch-reuse:1
@ 2777 train 4.7048 , allloss: 4.7049, dt: 1277.88ms, fracRes: 0.7033, norm(attn): 0.2031, norm(output): 0.9348, norm(x): 0.7525, norm(y): 1.0083, norm:0.7380, tok/sec: 102570.02, flops:107.66, batch-reuse:1
@ 2778 train 4.8095 , allloss: 4.8096, dt: 1283.00ms, fracRes: 0.7031, norm(attn): 0.2012, norm(output): 0.9348, norm(x): 0.7522, norm(y): 1.0083, norm:0.7970, tok/sec: 102160.81, flops:107.23, batch-reuse:1
@ 2779 train 4.6654 , allloss: 4.6656, dt: 1305.86ms, fracRes: 0.7028, norm(attn): 0.2021, norm(output): 0.9347, norm(x): 0.7517, norm(y): 1.0085, norm:0.7926, tok/sec: 100372.00, flops:105.35, batch-reuse:1
@ 2780 train 4.5652 , allloss: 4.5654, dt: 1341.66ms, fracRes: 0.7029, norm(attn): 0.2002, norm(output): 0.9346, norm(x): 0.7515, norm(y): 1.0085, norm:0.8592, tok/sec: 97693.99, flops:102.54, batch-reuse:1
@ 2781 train 4.5234 , allloss: 4.5235, dt: 1295.32ms, fracRes: 0.7032, norm(attn): 0.2012, norm(output): 0.9347, norm(x): 0.7515, norm(y): 1.0083, norm:0.6936, tok/sec: 101188.76, flops:106.21, batch-reuse:1
@ 2782 train 4.7246 , allloss: 4.7249, dt: 1291.70ms, fracRes: 0.7034, norm(attn): 0.1973, norm(output): 0.9348, norm(x): 0.7523, norm(y): 1.0082, norm:0.6197, tok/sec: 101472.11, flops:106.51, batch-reuse:1
@ 2783 train 4.6583 , allloss: 4.6584, dt: 1326.12ms, fracRes: 0.7033, norm(attn): 0.1963, norm(output): 0.9349, norm(x): 0.7526, norm(y): 1.0079, norm:0.7143, tok/sec: 98838.80, flops:103.74, batch-reuse:1
@ 2784 train 4.7369 , allloss: 4.7369, dt: 1332.15ms, fracRes: 0.7033, norm(attn): 0.1973, norm(output): 0.9349, norm(x): 0.7531, norm(y): 1.0083, norm:0.9221, tok/sec: 98391.01, flops:103.27, batch-reuse:1
@ 2785 train 4.8274 , allloss: 4.8275, dt: 1317.36ms, fracRes: 0.7035, norm(attn): 0.1943, norm(output): 0.9349, norm(x): 0.7522, norm(y): 1.0084, norm:0.8153, tok/sec: 99495.99, flops:104.43, batch-reuse:1
@ 2786 train 4.7462 , allloss: 4.7464, dt: 1340.29ms, fracRes: 0.7031, norm(attn): 0.2002, norm(output): 0.9349, norm(x): 0.7521, norm(y): 1.0082, norm:0.7024, tok/sec: 97793.88, flops:102.65, batch-reuse:1
@ 2787 train 4.8434 , allloss: 4.8435, dt: 1305.44ms, fracRes: 0.7029, norm(attn): 0.2002, norm(output): 0.9349, norm(x): 0.7521, norm(y): 1.0083, norm:0.6900, tok/sec: 100404.76, flops:105.39, batch-reuse:1
@ 2788 train 4.8384 , allloss: 4.8385, dt: 1316.39ms, fracRes: 0.7028, norm(attn): 0.2002, norm(output): 0.9349, norm(x): 0.7518, norm(y): 1.0085, norm:0.7547, tok/sec: 99569.26, flops:104.51, batch-reuse:1
@ 2789 train 4.8438 , allloss: 4.8439, dt: 1309.83ms, fracRes: 0.7028, norm(attn): 0.2002, norm(output): 0.9348, norm(x): 0.7521, norm(y): 1.0084, norm:0.7433, tok/sec: 100067.90, flops:105.03, batch-reuse:1
@ 2790 train 4.9340 , allloss: 4.9343, dt: 1333.18ms, fracRes: 0.7029, norm(attn): 0.2012, norm(output): 0.9347, norm(x): 0.7517, norm(y): 1.0084, norm:0.7514, tok/sec: 98315.15, flops:103.19, batch-reuse:1
@ 2791 train 4.7968 , allloss: 4.7972, dt: 1320.22ms, fracRes: 0.7029, norm(attn): 0.2031, norm(output): 0.9347, norm(x): 0.7519, norm(y): 1.0083, norm:0.6319, tok/sec: 99280.67, flops:104.21, batch-reuse:1
@ 2792 train 5.5156 , allloss: 5.5157, dt: 1300.38ms, fracRes: 0.7033, norm(attn): 0.1992, norm(output): 0.9350, norm(x): 0.7519, norm(y): 1.0083, norm:0.9720, tok/sec: 100795.41, flops:105.80, batch-reuse:1
@ 2793 train 4.9071 , allloss: 4.9645, dt: 1320.85ms, fracRes: 0.7030, norm(attn): 0.2031, norm(output): 0.9350, norm(x): 0.7515, norm(y): 1.0084, norm:0.9735, tok/sec: 99232.79, flops:104.16, batch-reuse:1
@ 2794 train 4.7998 , allloss: 4.7998, dt: 1340.01ms, fracRes: 0.7032, norm(attn): 0.2031, norm(output): 0.9348, norm(x): 0.7511, norm(y): 1.0081, norm:0.7433, tok/sec: 97814.37, flops:102.67, batch-reuse:1
@ 2795 train 4.8063 , allloss: 4.8064, dt: 1334.60ms, fracRes: 0.7030, norm(attn): 0.2031, norm(output): 0.9348, norm(x): 0.7515, norm(y): 1.0081, norm:0.7098, tok/sec: 98210.35, flops:103.08, batch-reuse:1
@ 2796 train 4.9043 , allloss: 4.9045, dt: 1305.41ms, fracRes: 0.7029, norm(attn): 0.2021, norm(output): 0.9348, norm(x): 0.7519, norm(y): 1.0084, norm:0.7308, tok/sec: 100406.65, flops:105.39, batch-reuse:1
@ 2797 train 4.8358 , allloss: 4.8359, dt: 1297.39ms, fracRes: 0.7028, norm(attn): 0.2021, norm(output): 0.9347, norm(x): 0.7521, norm(y): 1.0085, norm:0.7536, tok/sec: 101027.63, flops:106.04, batch-reuse:1
@ 2798 train 4.8273 , allloss: 4.8274, dt: 1300.78ms, fracRes: 0.7028, norm(attn): 0.1992, norm(output): 0.9348, norm(x): 0.7520, norm(y): 1.0086, norm:0.7937, tok/sec: 100763.95, flops:105.77, batch-reuse:1
@ 2799 train 4.8658 , allloss: 4.8659, dt: 1338.15ms, fracRes: 0.7031, norm(attn): 0.1973, norm(output): 0.9348, norm(x): 0.7517, norm(y): 1.0084, norm:0.8619, tok/sec: 97950.52, flops:102.81, batch-reuse:1
@ 2800 train 5.0507 , allloss: 5.0508, dt: 1290.85ms, fracRes: 0.7034, norm(attn): 0.1953, norm(output): 0.9349, norm(x): 0.7516, norm(y): 1.0082, norm:0.7978, tok/sec: 101538.98, flops:106.58, batch-reuse:1
@ 2801 train 4.8917 , allloss: 4.8921, dt: 1310.90ms, fracRes: 0.7034, norm(attn): 0.2002, norm(output): 0.9347, norm(x): 0.7511, norm(y): 1.0082, norm:1.1939, tok/sec: 99985.93, flops:104.95, batch-reuse:1
@ 2802 train 4.8023 , allloss: 4.8026, dt: 1294.63ms, fracRes: 0.7031, norm(attn): 0.2012, norm(output): 0.9347, norm(x): 0.7512, norm(y): 1.0087, norm:0.9135, tok/sec: 101242.95, flops:106.27, batch-reuse:1
@ 2803 train 4.7939 , allloss: 4.7951, dt: 1299.45ms, fracRes: 0.7029, norm(attn): 0.2012, norm(output): 0.9346, norm(x): 0.7516, norm(y): 1.0088, norm:0.8421, tok/sec: 100867.11, flops:105.87, batch-reuse:1
@ 2804 train 4.9420 , allloss: 5.1750, dt: 1332.20ms, fracRes: 0.7029, norm(attn): 0.1992, norm(output): 0.9348, norm(x): 0.7526, norm(y): 1.0085, norm:1.0027, tok/sec: 98387.27, flops:103.27, batch-reuse:1
@ 2805 train 4.8152 , allloss: 4.8175, dt: 1334.92ms, fracRes: 0.7028, norm(attn): 0.2002, norm(output): 0.9348, norm(x): 0.7530, norm(y): 1.0082, norm:1.1551, tok/sec: 98187.04, flops:103.06, batch-reuse:1
@ 2806 train 4.7669 , allloss: 4.7674, dt: 1320.01ms, fracRes: 0.7031, norm(attn): 0.1992, norm(output): 0.9349, norm(x): 0.7525, norm(y): 1.0080, norm:0.8550, tok/sec: 99296.45, flops:104.22, batch-reuse:1
@ 2807 train 5.0335 , allloss: 5.0338, dt: 1311.15ms, fracRes: 0.7034, norm(attn): 0.1982, norm(output): 0.9349, norm(x): 0.7523, norm(y): 1.0080, norm:0.9175, tok/sec: 99966.87, flops:104.93, batch-reuse:1
@ 2808 train 4.8228 , allloss: 4.8236, dt: 1321.14ms, fracRes: 0.7031, norm(attn): 0.1963, norm(output): 0.9349, norm(x): 0.7520, norm(y): 1.0086, norm:1.0253, tok/sec: 99211.03, flops:104.14, batch-reuse:1
@ 2809 train 4.7932 , allloss: 4.7935, dt: 1319.48ms, fracRes: 0.7031, norm(attn): 0.1982, norm(output): 0.9350, norm(x): 0.7516, norm(y): 1.0084, norm:0.6472, tok/sec: 99336.18, flops:104.27, batch-reuse:1
@ 2810 train 4.7532 , allloss: 4.7533, dt: 1298.83ms, fracRes: 0.7030, norm(attn): 0.2012, norm(output): 0.9349, norm(x): 0.7514, norm(y): 1.0080, norm:0.9013, tok/sec: 100915.25, flops:105.92, batch-reuse:1
@ 2811 train 4.8397 , allloss: 4.8424, dt: 1282.58ms, fracRes: 0.7029, norm(attn): 0.1992, norm(output): 0.9349, norm(x): 0.7517, norm(y): 1.0080, norm:0.8916, tok/sec: 102193.89, flops:107.27, batch-reuse:1
@ 2812 train 4.8661 , allloss: 4.8664, dt: 1275.09ms, fracRes: 0.7031, norm(attn): 0.2012, norm(output): 0.9348, norm(x): 0.7520, norm(y): 1.0082, norm:0.7277, tok/sec: 102794.47, flops:107.90, batch-reuse:1
@ 2813 train 4.9398 , allloss: 4.9404, dt: 1310.28ms, fracRes: 0.7032, norm(attn): 0.2012, norm(output): 0.9349, norm(x): 0.7528, norm(y): 1.0085, norm:0.7278, tok/sec: 100033.41, flops:105.00, batch-reuse:1
@ 2814 train 4.8691 , allloss: 4.8704, dt: 1297.27ms, fracRes: 0.7030, norm(attn): 0.2021, norm(output): 0.9350, norm(x): 0.7532, norm(y): 1.0083, norm:0.8046, tok/sec: 101036.94, flops:106.05, batch-reuse:1
@ 2815 train 4.9135 , allloss: 4.9136, dt: 1319.04ms, fracRes: 0.7030, norm(attn): 0.2012, norm(output): 0.9351, norm(x): 0.7534, norm(y): 1.0081, norm:0.8142, tok/sec: 99369.02, flops:104.30, batch-reuse:1
@ 2816 train 4.8172 , allloss: 4.8177, dt: 1291.70ms, fracRes: 0.7030, norm(attn): 0.2021, norm(output): 0.9348, norm(x): 0.7531, norm(y): 1.0083, norm:0.8878, tok/sec: 101472.82, flops:106.51, batch-reuse:1
@ 2817 train 4.8778 , allloss: 4.8780, dt: 1277.73ms, fracRes: 0.7032, norm(attn): 0.2002, norm(output): 0.9351, norm(x): 0.7525, norm(y): 1.0081, norm:0.7852, tok/sec: 102581.58, flops:107.67, batch-reuse:1
@ 2818 train 4.8697 , allloss: 4.8699, dt: 1308.78ms, fracRes: 0.7033, norm(attn): 0.1982, norm(output): 0.9350, norm(x): 0.7527, norm(y): 1.0081, norm:0.7044, tok/sec: 100147.90, flops:105.12, batch-reuse:1
@ 2819 train 4.8518 , allloss: 4.8520, dt: 1349.06ms, fracRes: 0.7033, norm(attn): 0.1992, norm(output): 0.9350, norm(x): 0.7531, norm(y): 1.0081, norm:0.7138, tok/sec: 97158.31, flops:101.98, batch-reuse:1
@ 2820 train 4.8436 , allloss: 4.8436, dt: 1321.16ms, fracRes: 0.7034, norm(attn): 0.1992, norm(output): 0.9350, norm(x): 0.7529, norm(y): 1.0080, norm:0.7365, tok/sec: 99209.42, flops:104.13, batch-reuse:1
@ 2821 train 4.8127 , allloss: 4.8128, dt: 1285.46ms, fracRes: 0.7033, norm(attn): 0.2002, norm(output): 0.9349, norm(x): 0.7531, norm(y): 1.0080, norm:0.6665, tok/sec: 101965.07, flops:107.03, batch-reuse:1
@ 2822 train 4.7469 , allloss: 4.7470, dt: 1328.44ms, fracRes: 0.7031, norm(attn): 0.2021, norm(output): 0.9350, norm(x): 0.7536, norm(y): 1.0081, norm:0.7256, tok/sec: 98666.39, flops:103.56, batch-reuse:1
@ 2823 train 4.8041 , allloss: 4.8043, dt: 1331.14ms, fracRes: 0.7029, norm(attn): 0.2021, norm(output): 0.9351, norm(x): 0.7542, norm(y): 1.0080, norm:0.7069, tok/sec: 98466.22, flops:103.35, batch-reuse:1
@ 2824 train 4.7758 , allloss: 4.7759, dt: 1300.12ms, fracRes: 0.7029, norm(attn): 0.2012, norm(output): 0.9350, norm(x): 0.7533, norm(y): 1.0080, norm:0.6045, tok/sec: 100815.56, flops:105.82, batch-reuse:1
@ 2825 train 4.7880 , allloss: 4.7881, dt: 1313.48ms, fracRes: 0.7030, norm(attn): 0.1973, norm(output): 0.9349, norm(x): 0.7522, norm(y): 1.0081, norm:0.5888, tok/sec: 99790.15, flops:104.74, batch-reuse:1
@ 2826 train 4.8455 , allloss: 4.8455, dt: 1329.44ms, fracRes: 0.7031, norm(attn): 0.1963, norm(output): 0.9349, norm(x): 0.7525, norm(y): 1.0083, norm:0.6009, tok/sec: 98591.53, flops:103.48, batch-reuse:1
@ 2827 train 4.8811 , allloss: 4.8812, dt: 1323.20ms, fracRes: 0.7030, norm(attn): 0.2012, norm(output): 0.9350, norm(x): 0.7535, norm(y): 1.0083, norm:0.7334, tok/sec: 99056.60, flops:103.97, batch-reuse:1
@ 2828 train 4.8600 , allloss: 4.8601, dt: 1326.79ms, fracRes: 0.7033, norm(attn): 0.2031, norm(output): 0.9349, norm(x): 0.7533, norm(y): 1.0078, norm:0.6537, tok/sec: 98788.48, flops:103.69, batch-reuse:1
@ 2829 train 4.7983 , allloss: 4.7983, dt: 1323.01ms, fracRes: 0.7033, norm(attn): 0.2031, norm(output): 0.9350, norm(x): 0.7524, norm(y): 1.0078, norm:0.7493, tok/sec: 99071.17, flops:103.99, batch-reuse:1
@ 2830 train 4.9731 , allloss: 4.9731, dt: 1300.08ms, fracRes: 0.7034, norm(attn): 0.2031, norm(output): 0.9347, norm(x): 0.7516, norm(y): 1.0082, norm:0.9193, tok/sec: 100818.20, flops:105.82, batch-reuse:1
@ 2831 train 4.8733 , allloss: 4.8734, dt: 1274.54ms, fracRes: 0.7032, norm(attn): 0.2021, norm(output): 0.9349, norm(x): 0.7522, norm(y): 1.0081, norm:0.7430, tok/sec: 102838.66, flops:107.94, batch-reuse:1
@ 2832 train 4.7556 , allloss: 4.7557, dt: 1298.26ms, fracRes: 0.7028, norm(attn): 0.2002, norm(output): 0.9348, norm(x): 0.7528, norm(y): 1.0082, norm:0.6229, tok/sec: 100959.64, flops:105.97, batch-reuse:1
@ 2833 train 4.8374 , allloss: 4.8381, dt: 1305.62ms, fracRes: 0.7026, norm(attn): 0.2002, norm(output): 0.9350, norm(x): 0.7536, norm(y): 1.0081, norm:0.7278, tok/sec: 100390.88, flops:105.37, batch-reuse:1
@ 2834 train 4.8467 , allloss: 4.8469, dt: 1275.96ms, fracRes: 0.7026, norm(attn): 0.2021, norm(output): 0.9350, norm(x): 0.7539, norm(y): 1.0081, norm:0.7506, tok/sec: 102724.51, flops:107.82, batch-reuse:1
@ 2835 train 4.9287 , allloss: 4.9287, dt: 1295.35ms, fracRes: 0.7029, norm(attn): 0.1992, norm(output): 0.9350, norm(x): 0.7531, norm(y): 1.0081, norm:0.7423, tok/sec: 101186.19, flops:106.21, batch-reuse:1
@ 2836 train 4.8287 , allloss: 4.8287, dt: 1302.48ms, fracRes: 0.7030, norm(attn): 0.2021, norm(output): 0.9349, norm(x): 0.7523, norm(y): 1.0084, norm:0.9420, tok/sec: 100632.35, flops:105.63, batch-reuse:1
@ 2837 train 4.8960 , allloss: 4.8961, dt: 1298.85ms, fracRes: 0.7033, norm(attn): 0.2012, norm(output): 0.9348, norm(x): 0.7521, norm(y): 1.0082, norm:1.0356, tok/sec: 100913.83, flops:105.92, batch-reuse:1
@ 2838 train 4.9367 , allloss: 4.9367, dt: 1307.79ms, fracRes: 0.7033, norm(attn): 0.2021, norm(output): 0.9350, norm(x): 0.7527, norm(y): 1.0079, norm:0.7234, tok/sec: 100223.98, flops:105.20, batch-reuse:1
@ 2839 train 4.8096 , allloss: 4.8097, dt: 1297.52ms, fracRes: 0.7031, norm(attn): 0.2021, norm(output): 0.9350, norm(x): 0.7535, norm(y): 1.0081, norm:0.7001, tok/sec: 101017.22, flops:106.03, batch-reuse:1
@ 2840 train 4.8312 , allloss: 4.8313, dt: 1307.87ms, fracRes: 0.7030, norm(attn): 0.2021, norm(output): 0.9351, norm(x): 0.7535, norm(y): 1.0082, norm:0.7083, tok/sec: 100217.57, flops:105.19, batch-reuse:1
@ 2841 train 4.8179 , allloss: 4.8181, dt: 1300.13ms, fracRes: 0.7030, norm(attn): 0.2021, norm(output): 0.9351, norm(x): 0.7532, norm(y): 1.0079, norm:0.6572, tok/sec: 100814.80, flops:105.82, batch-reuse:1
@ 2842 train 4.8243 , allloss: 4.8244, dt: 1319.96ms, fracRes: 0.7032, norm(attn): 0.2012, norm(output): 0.9351, norm(x): 0.7528, norm(y): 1.0077, norm:0.6381, tok/sec: 99299.90, flops:104.23, batch-reuse:1
@ 2843 train 4.7664 , allloss: 4.7665, dt: 1313.63ms, fracRes: 0.7031, norm(attn): 0.2002, norm(output): 0.9350, norm(x): 0.7525, norm(y): 1.0080, norm:0.6050, tok/sec: 99778.27, flops:104.73, batch-reuse:1
@ 2844 train 4.7705 , allloss: 4.7706, dt: 1299.79ms, fracRes: 0.7034, norm(attn): 0.2021, norm(output): 0.9349, norm(x): 0.7519, norm(y): 1.0080, norm:0.6996, tok/sec: 100840.82, flops:105.85, batch-reuse:1
@ 2845 train 4.8108 , allloss: 4.8108, dt: 1338.79ms, fracRes: 0.7034, norm(attn): 0.2031, norm(output): 0.9349, norm(x): 0.7526, norm(y): 1.0079, norm:0.6387, tok/sec: 97903.40, flops:102.76, batch-reuse:1
@ 2846 train 4.8460 , allloss: 4.8460, dt: 1328.66ms, fracRes: 0.7033, norm(attn): 0.2031, norm(output): 0.9350, norm(x): 0.7531, norm(y): 1.0077, norm:0.7131, tok/sec: 98649.70, flops:103.55, batch-reuse:1
@ 2847 train 4.8565 , allloss: 4.8566, dt: 1299.86ms, fracRes: 0.7033, norm(attn): 0.2002, norm(output): 0.9351, norm(x): 0.7533, norm(y): 1.0078, norm:0.6161, tok/sec: 100835.40, flops:105.84, batch-reuse:1
@ 2848 train 4.7929 , allloss: 4.7930, dt: 1274.99ms, fracRes: 0.7031, norm(attn): 0.2021, norm(output): 0.9352, norm(x): 0.7530, norm(y): 1.0080, norm:0.6046, tok/sec: 102802.68, flops:107.90, batch-reuse:1
@ 2849 train 4.7621 , allloss: 4.7624, dt: 1296.68ms, fracRes: 0.7030, norm(attn): 0.2021, norm(output): 0.9350, norm(x): 0.7532, norm(y): 1.0081, norm:0.6052, tok/sec: 101082.66, flops:106.10, batch-reuse:1
@ 2850 train 4.7452 , allloss: 4.7453, dt: 1289.61ms, fracRes: 0.7029, norm(attn): 0.2031, norm(output): 0.9349, norm(x): 0.7532, norm(y): 1.0081, norm:0.6728, tok/sec: 101636.84, flops:106.68, batch-reuse:1
@ 2851 train 4.7333 , allloss: 4.7334, dt: 1304.46ms, fracRes: 0.7029, norm(attn): 0.2021, norm(output): 0.9350, norm(x): 0.7536, norm(y): 1.0081, norm:0.6352, tok/sec: 100480.22, flops:105.47, batch-reuse:1
@ 2852 train 4.7176 , allloss: 4.7177, dt: 1305.39ms, fracRes: 0.7031, norm(attn): 0.2021, norm(output): 0.9349, norm(x): 0.7534, norm(y): 1.0082, norm:0.7140, tok/sec: 100408.30, flops:105.39, batch-reuse:1
@ 2853 train 4.8454 , allloss: 4.8454, dt: 1287.01ms, fracRes: 0.7033, norm(attn): 0.1992, norm(output): 0.9349, norm(x): 0.7532, norm(y): 1.0082, norm:0.7418, tok/sec: 101842.35, flops:106.90, batch-reuse:1
@ 2854 train 4.7869 , allloss: 4.7869, dt: 1289.61ms, fracRes: 0.7034, norm(attn): 0.2002, norm(output): 0.9348, norm(x): 0.7528, norm(y): 1.0082, norm:0.8432, tok/sec: 101637.14, flops:106.68, batch-reuse:1
@ 2855 train 4.7728 , allloss: 4.7728, dt: 1297.49ms, fracRes: 0.7031, norm(attn): 0.1973, norm(output): 0.9349, norm(x): 0.7530, norm(y): 1.0082, norm:0.8383, tok/sec: 101019.74, flops:106.03, batch-reuse:1
@ 2856 train 4.8008 , allloss: 4.8008, dt: 1289.25ms, fracRes: 0.7030, norm(attn): 0.1973, norm(output): 0.9350, norm(x): 0.7523, norm(y): 1.0081, norm:1.1450, tok/sec: 101665.62, flops:106.71, batch-reuse:1
@ 2857 train 4.7317 , allloss: 4.7318, dt: 1307.55ms, fracRes: 0.7029, norm(attn): 0.2012, norm(output): 0.9349, norm(x): 0.7517, norm(y): 1.0079, norm:0.8804, tok/sec: 100242.75, flops:105.22, batch-reuse:1
@ 2858 train 4.7207 , allloss: 4.7208, dt: 1325.66ms, fracRes: 0.7028, norm(attn): 0.2031, norm(output): 0.9348, norm(x): 0.7519, norm(y): 1.0081, norm:0.7973, tok/sec: 98872.87, flops:103.78, batch-reuse:1
@ 2859 train 4.7124 , allloss: 4.7125, dt: 1291.37ms, fracRes: 0.7030, norm(attn): 0.2041, norm(output): 0.9349, norm(x): 0.7522, norm(y): 1.0078, norm:1.2159, tok/sec: 101498.51, flops:106.54, batch-reuse:1
@ 2860 train 4.8771 , allloss: 4.8771, dt: 1296.20ms, fracRes: 0.7031, norm(attn): 0.2031, norm(output): 0.9350, norm(x): 0.7522, norm(y): 1.0078, norm:1.0252, tok/sec: 101120.40, flops:106.14, batch-reuse:1
@ 2861 train 4.8458 , allloss: 4.8458, dt: 1304.23ms, fracRes: 0.7035, norm(attn): 0.2021, norm(output): 0.9355, norm(x): 0.7526, norm(y): 1.0074, norm:0.8694, tok/sec: 100497.76, flops:105.49, batch-reuse:1
@ 2862 train 4.8756 , allloss: 4.8757, dt: 1311.19ms, fracRes: 0.7035, norm(attn): 0.2002, norm(output): 0.9349, norm(x): 0.7518, norm(y): 1.0076, norm:1.2273, tok/sec: 99964.53, flops:104.93, batch-reuse:1
@ 2863 train 4.8823 , allloss: 4.8825, dt: 1325.34ms, fracRes: 0.7033, norm(attn): 0.1992, norm(output): 0.9350, norm(x): 0.7526, norm(y): 1.0075, norm:0.9624, tok/sec: 98896.69, flops:103.81, batch-reuse:1
@ 2864 train 4.7103 , allloss: 4.7105, dt: 1324.17ms, fracRes: 0.7030, norm(attn): 0.2002, norm(output): 0.9350, norm(x): 0.7533, norm(y): 1.0077, norm:0.7491, tok/sec: 98984.51, flops:103.90, batch-reuse:1
@ 2865 train 4.7994 , allloss: 4.7995, dt: 1330.60ms, fracRes: 0.7030, norm(attn): 0.2002, norm(output): 0.9352, norm(x): 0.7539, norm(y): 1.0078, norm:0.8116, tok/sec: 98506.06, flops:103.40, batch-reuse:1
@ 2866 train 4.8605 , allloss: 4.8606, dt: 1318.61ms, fracRes: 0.7030, norm(attn): 0.2012, norm(output): 0.9351, norm(x): 0.7538, norm(y): 1.0078, norm:0.6998, tok/sec: 99401.36, flops:104.33, batch-reuse:1
@ 2867 train 4.7679 , allloss: 4.7680, dt: 1298.92ms, fracRes: 0.7030, norm(attn): 0.2021, norm(output): 0.9352, norm(x): 0.7533, norm(y): 1.0075, norm:0.9584, tok/sec: 100908.10, flops:105.92, batch-reuse:1
@ 2868 train 4.8641 , allloss: 4.8642, dt: 1323.72ms, fracRes: 0.7031, norm(attn): 0.2021, norm(output): 0.9351, norm(x): 0.7528, norm(y): 1.0076, norm:0.7855, tok/sec: 99017.99, flops:103.93, batch-reuse:1
@ 2869 train 4.8178 , allloss: 4.8179, dt: 1343.71ms, fracRes: 0.7032, norm(attn): 0.2012, norm(output): 0.9352, norm(x): 0.7528, norm(y): 1.0078, norm:0.6897, tok/sec: 97545.17, flops:102.39, batch-reuse:1
@ 2870 train 4.8373 , allloss: 4.8374, dt: 1285.41ms, fracRes: 0.7031, norm(attn): 0.2002, norm(output): 0.9350, norm(x): 0.7530, norm(y): 1.0082, norm:0.6999, tok/sec: 101969.24, flops:107.03, batch-reuse:1
@ 2871 train 4.7571 , allloss: 4.7573, dt: 1292.86ms, fracRes: 0.7034, norm(attn): 0.1992, norm(output): 0.9351, norm(x): 0.7532, norm(y): 1.0080, norm:0.6361, tok/sec: 101381.51, flops:106.41, batch-reuse:1
@ 2872 train 4.8402 , allloss: 4.8403, dt: 1292.23ms, fracRes: 0.7033, norm(attn): 0.2002, norm(output): 0.9351, norm(x): 0.7531, norm(y): 1.0076, norm:0.7775, tok/sec: 101431.24, flops:106.47, batch-reuse:1
@ 2873 train 4.9586 , allloss: 4.9587, dt: 1273.31ms, fracRes: 0.7034, norm(attn): 0.2002, norm(output): 0.9351, norm(x): 0.7528, norm(y): 1.0075, norm:0.9718, tok/sec: 102938.13, flops:108.05, batch-reuse:1
@ 2874 train 4.7789 , allloss: 4.7790, dt: 1289.63ms, fracRes: 0.7031, norm(attn): 0.2012, norm(output): 0.9350, norm(x): 0.7528, norm(y): 1.0077, norm:0.9958, tok/sec: 101634.96, flops:106.68, batch-reuse:1
@ 2875 train 4.8972 , allloss: 4.8972, dt: 1318.72ms, fracRes: 0.7032, norm(attn): 0.2012, norm(output): 0.9352, norm(x): 0.7532, norm(y): 1.0077, norm:0.7358, tok/sec: 99393.72, flops:104.33, batch-reuse:1
@ 2876 train 4.8109 , allloss: 4.8109, dt: 1313.98ms, fracRes: 0.7035, norm(attn): 0.2021, norm(output): 0.9350, norm(x): 0.7529, norm(y): 1.0074, norm:0.7421, tok/sec: 99751.66, flops:104.70, batch-reuse:1
@ 2877 train 4.8820 , allloss: 4.8820, dt: 1314.02ms, fracRes: 0.7036, norm(attn): 0.2012, norm(output): 0.9350, norm(x): 0.7523, norm(y): 1.0075, norm:0.8374, tok/sec: 99749.19, flops:104.70, batch-reuse:1
@ 2878 train 4.7967 , allloss: 4.7968, dt: 1277.97ms, fracRes: 0.7032, norm(attn): 0.2021, norm(output): 0.9351, norm(x): 0.7525, norm(y): 1.0076, norm:0.6729, tok/sec: 102562.50, flops:107.65, batch-reuse:1
@ 2879 train 4.7645 , allloss: 4.7646, dt: 1295.92ms, fracRes: 0.7031, norm(attn): 0.2012, norm(output): 0.9351, norm(x): 0.7536, norm(y): 1.0078, norm:0.6714, tok/sec: 101142.35, flops:106.16, batch-reuse:1
@ 2880 train 4.7928 , allloss: 4.7930, dt: 1296.48ms, fracRes: 0.7031, norm(attn): 0.1992, norm(output): 0.9352, norm(x): 0.7540, norm(y): 1.0077, norm:0.7785, tok/sec: 101098.34, flops:106.12, batch-reuse:1
@ 2881 train 4.7786 , allloss: 4.7788, dt: 1289.18ms, fracRes: 0.7033, norm(attn): 0.2002, norm(output): 0.9352, norm(x): 0.7530, norm(y): 1.0076, norm:0.6616, tok/sec: 101670.68, flops:106.72, batch-reuse:1
@ 2882 train 4.7545 , allloss: 4.7546, dt: 1300.76ms, fracRes: 0.7033, norm(attn): 0.1992, norm(output): 0.9352, norm(x): 0.7524, norm(y): 1.0077, norm:0.6494, tok/sec: 100765.70, flops:105.77, batch-reuse:1
@ 2883 train 4.8049 , allloss: 4.8050, dt: 1290.79ms, fracRes: 0.7030, norm(attn): 0.2021, norm(output): 0.9351, norm(x): 0.7521, norm(y): 1.0080, norm:0.6091, tok/sec: 101544.05, flops:106.58, batch-reuse:1
@ 2884 train 4.6692 , allloss: 4.6692, dt: 1298.60ms, fracRes: 0.7029, norm(attn): 0.2031, norm(output): 0.9349, norm(x): 0.7516, norm(y): 1.0080, norm:0.6698, tok/sec: 100933.11, flops:105.94, batch-reuse:1
@ 2885 train 4.6686 , allloss: 4.6686, dt: 1325.26ms, fracRes: 0.7028, norm(attn): 0.2021, norm(output): 0.9349, norm(x): 0.7519, norm(y): 1.0079, norm:0.5944, tok/sec: 98903.11, flops:103.81, batch-reuse:1
@ 2886 train 4.7135 , allloss: 4.7135, dt: 1333.09ms, fracRes: 0.7029, norm(attn): 0.2012, norm(output): 0.9348, norm(x): 0.7524, norm(y): 1.0082, norm:0.5459, tok/sec: 98321.66, flops:103.20, batch-reuse:1
@ 2887 train 4.7542 , allloss: 4.7543, dt: 1298.90ms, fracRes: 0.7030, norm(attn): 0.2002, norm(output): 0.9350, norm(x): 0.7535, norm(y): 1.0083, norm:0.6559, tok/sec: 100909.62, flops:105.92, batch-reuse:1
@ 2888 train 4.7011 , allloss: 4.7012, dt: 1295.98ms, fracRes: 0.7029, norm(attn): 0.2002, norm(output): 0.9352, norm(x): 0.7544, norm(y): 1.0079, norm:0.6614, tok/sec: 101137.40, flops:106.16, batch-reuse:1
@ 2889 train 4.7007 , allloss: 4.7009, dt: 1292.75ms, fracRes: 0.7030, norm(attn): 0.2002, norm(output): 0.9351, norm(x): 0.7541, norm(y): 1.0075, norm:0.6505, tok/sec: 101390.16, flops:106.42, batch-reuse:1
@ 2890 train 4.7850 , allloss: 4.7851, dt: 1280.34ms, fracRes: 0.7032, norm(attn): 0.1992, norm(output): 0.9352, norm(x): 0.7539, norm(y): 1.0076, norm:0.6513, tok/sec: 102372.66, flops:107.45, batch-reuse:1
@ 2891 train 4.7207 , allloss: 4.7207, dt: 1294.76ms, fracRes: 0.7033, norm(attn): 0.1982, norm(output): 0.9350, norm(x): 0.7527, norm(y): 1.0079, norm:0.6922, tok/sec: 101233.03, flops:106.26, batch-reuse:1
@ 2892 train 4.6866 , allloss: 4.6867, dt: 1286.52ms, fracRes: 0.7032, norm(attn): 0.1992, norm(output): 0.9350, norm(x): 0.7526, norm(y): 1.0081, norm:0.5881, tok/sec: 101881.12, flops:106.94, batch-reuse:1
@ 2893 train 4.6803 , allloss: 4.6806, dt: 1286.47ms, fracRes: 0.7032, norm(attn): 0.2012, norm(output): 0.9349, norm(x): 0.7523, norm(y): 1.0081, norm:0.6368, tok/sec: 101885.08, flops:106.94, batch-reuse:1
@ 2894 train 4.7028 , allloss: 4.7032, dt: 1292.72ms, fracRes: 0.7032, norm(attn): 0.2002, norm(output): 0.9349, norm(x): 0.7519, norm(y): 1.0078, norm:0.7448, tok/sec: 101392.13, flops:106.42, batch-reuse:1
@ 2895 train 4.8239 , allloss: 4.8240, dt: 1335.55ms, fracRes: 0.7031, norm(attn): 0.2002, norm(output): 0.9350, norm(x): 0.7523, norm(y): 1.0080, norm:0.6405, tok/sec: 98140.92, flops:103.01, batch-reuse:1
@ 2896 train 4.8076 , allloss: 4.8076, dt: 1292.03ms, fracRes: 0.7030, norm(attn): 0.2012, norm(output): 0.9350, norm(x): 0.7525, norm(y): 1.0080, norm:0.7160, tok/sec: 101446.67, flops:106.48, batch-reuse:1
@ 2897 train 4.7257 , allloss: 4.7259, dt: 1287.48ms, fracRes: 0.7030, norm(attn): 0.2012, norm(output): 0.9350, norm(x): 0.7526, norm(y): 1.0078, norm:0.8917, tok/sec: 101805.18, flops:106.86, batch-reuse:1
@ 2898 train 4.7406 , allloss: 4.7406, dt: 1297.58ms, fracRes: 0.7033, norm(attn): 0.2021, norm(output): 0.9350, norm(x): 0.7521, norm(y): 1.0076, norm:0.8022, tok/sec: 101012.49, flops:106.03, batch-reuse:1
@ 2899 train 4.7529 , allloss: 4.7531, dt: 1306.48ms, fracRes: 0.7035, norm(attn): 0.2021, norm(output): 0.9350, norm(x): 0.7516, norm(y): 1.0076, norm:0.5584, tok/sec: 100324.50, flops:105.30, batch-reuse:1
@ 2900 train 4.7140 , allloss: 4.7141, dt: 1314.42ms, fracRes: 0.7035, norm(attn): 0.2021, norm(output): 0.9349, norm(x): 0.7514, norm(y): 1.0077, norm:0.6467, tok/sec: 99718.42, flops:104.67, batch-reuse:1
@ 2901 train 4.6727 , allloss: 4.6728, dt: 1331.31ms, fracRes: 0.7031, norm(attn): 0.2031, norm(output): 0.9350, norm(x): 0.7521, norm(y): 1.0081, norm:0.6318, tok/sec: 98453.51, flops:103.34, batch-reuse:1
@ 2902 train 4.7430 , allloss: 4.7431, dt: 1327.71ms, fracRes: 0.7032, norm(attn): 0.2021, norm(output): 0.9349, norm(x): 0.7526, norm(y): 1.0080, norm:0.7812, tok/sec: 98720.18, flops:103.62, batch-reuse:1
@ 2903 train 4.8852 , allloss: 4.8853, dt: 1309.96ms, fracRes: 0.7032, norm(attn): 0.2012, norm(output): 0.9349, norm(x): 0.7529, norm(y): 1.0078, norm:0.7940, tok/sec: 100057.92, flops:105.02, batch-reuse:1
@ 2904 train 4.7102 , allloss: 4.7103, dt: 1327.28ms, fracRes: 0.7035, norm(attn): 0.2012, norm(output): 0.9351, norm(x): 0.7527, norm(y): 1.0076, norm:0.7425, tok/sec: 98752.67, flops:103.65, batch-reuse:1
@ 2905 train 5.0058 , allloss: 5.0059, dt: 1327.09ms, fracRes: 0.7036, norm(attn): 0.1992, norm(output): 0.9350, norm(x): 0.7530, norm(y): 1.0076, norm:0.8739, tok/sec: 98766.47, flops:103.67, batch-reuse:1
@ 2906 train 4.7025 , allloss: 4.7026, dt: 1321.01ms, fracRes: 0.7033, norm(attn): 0.1953, norm(output): 0.9351, norm(x): 0.7531, norm(y): 1.0075, norm:0.8044, tok/sec: 99220.72, flops:104.15, batch-reuse:1
@ 2907 train 4.8086 , allloss: 4.8088, dt: 1312.88ms, fracRes: 0.7034, norm(attn): 0.1982, norm(output): 0.9349, norm(x): 0.7522, norm(y): 1.0078, norm:0.7630, tok/sec: 99835.69, flops:104.79, batch-reuse:1
@ 2908 train 4.6890 , allloss: 4.6891, dt: 1336.97ms, fracRes: 0.7033, norm(attn): 0.2012, norm(output): 0.9350, norm(x): 0.7526, norm(y): 1.0079, norm:0.8047, tok/sec: 98036.86, flops:102.90, batch-reuse:1
@ 2909 train 4.7559 , allloss: 4.7562, dt: 1287.73ms, fracRes: 0.7033, norm(attn): 0.2021, norm(output): 0.9348, norm(x): 0.7525, norm(y): 1.0079, norm:0.9125, tok/sec: 101785.67, flops:106.84, batch-reuse:1
@ 2910 train 4.7710 , allloss: 4.7712, dt: 1284.72ms, fracRes: 0.7032, norm(attn): 0.2041, norm(output): 0.9348, norm(x): 0.7515, norm(y): 1.0077, norm:0.8456, tok/sec: 102023.83, flops:107.09, batch-reuse:1
@ 2911 train 4.7368 , allloss: 4.7369, dt: 1291.18ms, fracRes: 0.7033, norm(attn): 0.2031, norm(output): 0.9352, norm(x): 0.7525, norm(y): 1.0073, norm:0.9902, tok/sec: 101513.54, flops:106.55, batch-reuse:1
@ 2912 train 4.7928 , allloss: 4.7932, dt: 1272.00ms, fracRes: 0.7036, norm(attn): 0.2021, norm(output): 0.9351, norm(x): 0.7530, norm(y): 1.0075, norm:0.9677, tok/sec: 103043.98, flops:108.16, batch-reuse:1
@ 2913 train 4.7287 , allloss: 4.7289, dt: 1296.00ms, fracRes: 0.7036, norm(attn): 0.2002, norm(output): 0.9352, norm(x): 0.7533, norm(y): 1.0074, norm:0.7882, tok/sec: 101135.45, flops:106.15, batch-reuse:1
@ 2914 train 4.6754 , allloss: 4.6757, dt: 1305.44ms, fracRes: 0.7036, norm(attn): 0.1992, norm(output): 0.9352, norm(x): 0.7532, norm(y): 1.0074, norm:0.7120, tok/sec: 100404.41, flops:105.39, batch-reuse:1
@ 2915 train 4.6792 , allloss: 4.6793, dt: 1279.81ms, fracRes: 0.7033, norm(attn): 0.2021, norm(output): 0.9351, norm(x): 0.7536, norm(y): 1.0075, norm:0.6050, tok/sec: 102414.86, flops:107.50, batch-reuse:1
@ 2916 train 4.6659 , allloss: 4.6661, dt: 1308.87ms, fracRes: 0.7032, norm(attn): 0.2031, norm(output): 0.9349, norm(x): 0.7536, norm(y): 1.0076, norm:0.8270, tok/sec: 100141.47, flops:105.11, batch-reuse:1
@ 2917 train 4.7412 , allloss: 4.7414, dt: 1339.14ms, fracRes: 0.7031, norm(attn): 0.2031, norm(output): 0.9349, norm(x): 0.7537, norm(y): 1.0076, norm:0.7014, tok/sec: 97878.10, flops:102.74, batch-reuse:1
@ 2918 train 4.8257 , allloss: 4.8259, dt: 1327.49ms, fracRes: 0.7032, norm(attn): 0.2012, norm(output): 0.9350, norm(x): 0.7535, norm(y): 1.0079, norm:0.6251, tok/sec: 98736.97, flops:103.64, batch-reuse:1
@ 2919 train 4.6971 , allloss: 4.6973, dt: 1334.80ms, fracRes: 0.7033, norm(attn): 0.2021, norm(output): 0.9350, norm(x): 0.7533, norm(y): 1.0080, norm:0.8096, tok/sec: 98196.07, flops:103.07, batch-reuse:1
@ 2920 train 4.8339 , allloss: 4.8342, dt: 1325.42ms, fracRes: 0.7033, norm(attn): 0.2021, norm(output): 0.9351, norm(x): 0.7534, norm(y): 1.0077, norm:0.6323, tok/sec: 98890.59, flops:103.80, batch-reuse:1
@ 2921 train 4.7311 , allloss: 4.7313, dt: 1280.48ms, fracRes: 0.7033, norm(attn): 0.2012, norm(output): 0.9352, norm(x): 0.7542, norm(y): 1.0074, norm:0.5736, tok/sec: 102361.70, flops:107.44, batch-reuse:1
@ 2922 train 4.6970 , allloss: 4.6983, dt: 1304.28ms, fracRes: 0.7032, norm(attn): 0.2002, norm(output): 0.9352, norm(x): 0.7543, norm(y): 1.0074, norm:0.6387, tok/sec: 100493.66, flops:105.48, batch-reuse:1
@ 2923 train 4.6893 , allloss: 4.6895, dt: 1292.18ms, fracRes: 0.7032, norm(attn): 0.2021, norm(output): 0.9351, norm(x): 0.7539, norm(y): 1.0076, norm:0.6171, tok/sec: 101434.52, flops:106.47, batch-reuse:1
@ 2924 train 4.7593 , allloss: 4.7595, dt: 1300.53ms, fracRes: 0.7031, norm(attn): 0.2031, norm(output): 0.9350, norm(x): 0.7533, norm(y): 1.0076, norm:0.6823, tok/sec: 100783.51, flops:105.79, batch-reuse:1
@ 2925 train 4.9465 , allloss: 4.9466, dt: 1286.97ms, fracRes: 0.7035, norm(attn): 0.2031, norm(output): 0.9350, norm(x): 0.7527, norm(y): 1.0077, norm:0.8549, tok/sec: 101845.26, flops:106.90, batch-reuse:1
@ 2926 train 4.7358 , allloss: 4.7359, dt: 1310.01ms, fracRes: 0.7033, norm(attn): 0.2021, norm(output): 0.9352, norm(x): 0.7534, norm(y): 1.0077, norm:0.8003, tok/sec: 100054.16, flops:105.02, batch-reuse:1
@ 2927 train 4.6320 , allloss: 4.6321, dt: 1328.14ms, fracRes: 0.7037, norm(attn): 0.2021, norm(output): 0.9351, norm(x): 0.7527, norm(y): 1.0075, norm:0.6831, tok/sec: 98688.48, flops:103.59, batch-reuse:1
@ 2928 train 4.6871 , allloss: 4.6873, dt: 1292.73ms, fracRes: 0.7036, norm(attn): 0.2012, norm(output): 0.9350, norm(x): 0.7525, norm(y): 1.0076, norm:0.6050, tok/sec: 101391.73, flops:106.42, batch-reuse:1
@ 2929 train 4.6731 , allloss: 4.6734, dt: 1308.54ms, fracRes: 0.7033, norm(attn): 0.2012, norm(output): 0.9350, norm(x): 0.7529, norm(y): 1.0078, norm:0.6546, tok/sec: 100166.30, flops:105.14, batch-reuse:1
@ 2930 train 4.6438 , allloss: 4.6439, dt: 1309.09ms, fracRes: 0.7031, norm(attn): 0.2002, norm(output): 0.9349, norm(x): 0.7532, norm(y): 1.0079, norm:0.8020, tok/sec: 100124.89, flops:105.09, batch-reuse:1
@ 2931 train 4.6653 , allloss: 4.6654, dt: 1281.06ms, fracRes: 0.7033, norm(attn): 0.2021, norm(output): 0.9349, norm(x): 0.7531, norm(y): 1.0077, norm:0.8033, tok/sec: 102315.52, flops:107.39, batch-reuse:1
@ 2932 train 4.5789 , allloss: 4.5792, dt: 1301.93ms, fracRes: 0.7030, norm(attn): 0.2021, norm(output): 0.9350, norm(x): 0.7537, norm(y): 1.0076, norm:1.0129, tok/sec: 100675.38, flops:105.67, batch-reuse:1
@ 2933 train 4.7038 , allloss: 4.7040, dt: 1302.74ms, fracRes: 0.7033, norm(attn): 0.2031, norm(output): 0.9351, norm(x): 0.7533, norm(y): 1.0074, norm:0.7470, tok/sec: 100612.27, flops:105.61, batch-reuse:1
@ 2934 train 4.7288 , allloss: 4.7289, dt: 1328.25ms, fracRes: 0.7033, norm(attn): 0.2021, norm(output): 0.9350, norm(x): 0.7534, norm(y): 1.0074, norm:0.8452, tok/sec: 98680.44, flops:103.58, batch-reuse:1
@ 2935 train 4.6567 , allloss: 4.6569, dt: 1292.39ms, fracRes: 0.7032, norm(attn): 0.2012, norm(output): 0.9350, norm(x): 0.7541, norm(y): 1.0076, norm:1.1175, tok/sec: 101418.57, flops:106.45, batch-reuse:1
@ 2936 train 4.5318 , allloss: 4.5318, dt: 1298.85ms, fracRes: 0.7032, norm(attn): 0.2031, norm(output): 0.9350, norm(x): 0.7538, norm(y): 1.0076, norm:0.7133, tok/sec: 100914.08, flops:105.92, batch-reuse:1
@ 2937 train 4.6101 , allloss: 4.6102, dt: 1295.48ms, fracRes: 0.7035, norm(attn): 0.2021, norm(output): 0.9351, norm(x): 0.7535, norm(y): 1.0074, norm:0.7199, tok/sec: 101176.71, flops:106.20, batch-reuse:1
@ 2938 train 4.6500 , allloss: 4.6502, dt: 1285.74ms, fracRes: 0.7036, norm(attn): 0.2031, norm(output): 0.9350, norm(x): 0.7530, norm(y): 1.0074, norm:0.7254, tok/sec: 101943.22, flops:107.00, batch-reuse:1
@ 2939 train 4.6595 , allloss: 4.6596, dt: 1290.39ms, fracRes: 0.7034, norm(attn): 0.2031, norm(output): 0.9350, norm(x): 0.7535, norm(y): 1.0073, norm:0.6131, tok/sec: 101575.60, flops:106.62, batch-reuse:1
@ 2940 train 4.6377 , allloss: 4.6378, dt: 1309.43ms, fracRes: 0.7032, norm(attn): 0.2021, norm(output): 0.9351, norm(x): 0.7542, norm(y): 1.0075, norm:0.7265, tok/sec: 100098.45, flops:105.07, batch-reuse:1
@ 2941 train 4.5320 , allloss: 4.5321, dt: 1306.22ms, fracRes: 0.7030, norm(attn): 0.2031, norm(output): 0.9350, norm(x): 0.7538, norm(y): 1.0077, norm:0.6693, tok/sec: 100344.74, flops:105.33, batch-reuse:1
@ 2942 train 4.6622 , allloss: 4.6623, dt: 1309.07ms, fracRes: 0.7029, norm(attn): 0.2031, norm(output): 0.9351, norm(x): 0.7537, norm(y): 1.0077, norm:0.6908, tok/sec: 100126.35, flops:105.10, batch-reuse:1
@ 2943 train 4.6404 , allloss: 4.6406, dt: 1295.78ms, fracRes: 0.7029, norm(attn): 0.2021, norm(output): 0.9350, norm(x): 0.7539, norm(y): 1.0077, norm:0.6749, tok/sec: 101152.61, flops:106.17, batch-reuse:1
@ 2944 train 4.6840 , allloss: 4.6841, dt: 1310.78ms, fracRes: 0.7030, norm(attn): 0.2012, norm(output): 0.9352, norm(x): 0.7540, norm(y): 1.0075, norm:0.6538, tok/sec: 99995.58, flops:104.96, batch-reuse:1
@ 2945 train 4.6602 , allloss: 4.6603, dt: 1328.00ms, fracRes: 0.7033, norm(attn): 0.2012, norm(output): 0.9352, norm(x): 0.7544, norm(y): 1.0072, norm:0.6687, tok/sec: 98698.86, flops:103.60, batch-reuse:1
@ 2946 train 4.5848 , allloss: 4.5850, dt: 1315.30ms, fracRes: 0.7033, norm(attn): 0.2021, norm(output): 0.9352, norm(x): 0.7546, norm(y): 1.0073, norm:0.6551, tok/sec: 99651.41, flops:104.60, batch-reuse:1
@ 2947 train 4.6415 , allloss: 4.6416, dt: 1341.39ms, fracRes: 0.7034, norm(attn): 0.2002, norm(output): 0.9351, norm(x): 0.7544, norm(y): 1.0075, norm:0.7599, tok/sec: 97713.82, flops:102.56, batch-reuse:1
@ 2948 train 4.5394 , allloss: 4.5395, dt: 1316.16ms, fracRes: 0.7035, norm(attn): 0.1973, norm(output): 0.9351, norm(x): 0.7534, norm(y): 1.0072, norm:0.6612, tok/sec: 99586.66, flops:104.53, batch-reuse:1
@ 2949 train 4.5825 , allloss: 4.5826, dt: 1319.61ms, fracRes: 0.7033, norm(attn): 0.1973, norm(output): 0.9351, norm(x): 0.7531, norm(y): 1.0074, norm:0.7336, tok/sec: 99326.65, flops:104.26, batch-reuse:1
@ 2950 train 4.7741 , allloss: 4.7743, dt: 1299.87ms, fracRes: 0.7031, norm(attn): 0.2002, norm(output): 0.9350, norm(x): 0.7538, norm(y): 1.0076, norm:0.7321, tok/sec: 100834.70, flops:105.84, batch-reuse:1
@ 2951 train 4.5728 , allloss: 4.5729, dt: 1287.01ms, fracRes: 0.7029, norm(attn): 0.2021, norm(output): 0.9352, norm(x): 0.7544, norm(y): 1.0076, norm:0.6917, tok/sec: 101842.41, flops:106.90, batch-reuse:1
@ 2952 train 4.7098 , allloss: 4.7099, dt: 1297.28ms, fracRes: 0.7030, norm(attn): 0.2012, norm(output): 0.9352, norm(x): 0.7536, norm(y): 1.0076, norm:0.8886, tok/sec: 101036.40, flops:106.05, batch-reuse:1
@ 2953 train 4.7062 , allloss: 4.7064, dt: 1319.64ms, fracRes: 0.7030, norm(attn): 0.2002, norm(output): 0.9351, norm(x): 0.7538, norm(y): 1.0077, norm:0.8598, tok/sec: 99323.78, flops:104.25, batch-reuse:1
@ 2954 train 4.6874 , allloss: 4.6876, dt: 1297.91ms, fracRes: 0.7033, norm(attn): 0.2012, norm(output): 0.9352, norm(x): 0.7536, norm(y): 1.0075, norm:0.7190, tok/sec: 100987.07, flops:106.00, batch-reuse:1
@ 2955 train 4.6537 , allloss: 4.6537, dt: 1300.80ms, fracRes: 0.7034, norm(attn): 0.2021, norm(output): 0.9351, norm(x): 0.7531, norm(y): 1.0075, norm:0.7466, tok/sec: 100762.93, flops:105.76, batch-reuse:1
@ 2956 train 4.5769 , allloss: 4.5771, dt: 1308.75ms, fracRes: 0.7035, norm(attn): 0.2012, norm(output): 0.9352, norm(x): 0.7531, norm(y): 1.0073, norm:0.7309, tok/sec: 100150.68, flops:105.12, batch-reuse:1
@ 2957 train 4.6372 , allloss: 4.6374, dt: 1325.52ms, fracRes: 0.7032, norm(attn): 0.2002, norm(output): 0.9352, norm(x): 0.7535, norm(y): 1.0074, norm:0.7008, tok/sec: 98883.28, flops:103.79, batch-reuse:1
@ 2958 train 4.6380 , allloss: 4.6381, dt: 1299.54ms, fracRes: 0.7029, norm(attn): 0.2002, norm(output): 0.9351, norm(x): 0.7537, norm(y): 1.0077, norm:0.7205, tok/sec: 100860.10, flops:105.87, batch-reuse:1
@ 2959 train 4.6368 , allloss: 4.6369, dt: 1314.91ms, fracRes: 0.7031, norm(attn): 0.2002, norm(output): 0.9351, norm(x): 0.7531, norm(y): 1.0074, norm:0.6120, tok/sec: 99681.59, flops:104.63, batch-reuse:1
@ 2960 train 4.6071 , allloss: 4.6072, dt: 1274.21ms, fracRes: 0.7031, norm(attn): 0.1992, norm(output): 0.9351, norm(x): 0.7529, norm(y): 1.0075, norm:0.6959, tok/sec: 102865.67, flops:107.97, batch-reuse:1
@ 2961 train 4.5653 , allloss: 4.5656, dt: 1324.21ms, fracRes: 0.7030, norm(attn): 0.1992, norm(output): 0.9350, norm(x): 0.7539, norm(y): 1.0077, norm:0.6813, tok/sec: 98981.14, flops:103.89, batch-reuse:1
@ 2962 train 4.5612 , allloss: 4.5613, dt: 1315.98ms, fracRes: 0.7028, norm(attn): 0.1982, norm(output): 0.9353, norm(x): 0.7547, norm(y): 1.0076, norm:0.6495, tok/sec: 99600.23, flops:104.54, batch-reuse:1
@ 2963 train 4.6271 , allloss: 4.6271, dt: 1339.25ms, fracRes: 0.7030, norm(attn): 0.1992, norm(output): 0.9352, norm(x): 0.7542, norm(y): 1.0074, norm:0.6439, tok/sec: 97869.68, flops:102.73, batch-reuse:1
@ 2964 train 4.7037 , allloss: 4.7038, dt: 1311.00ms, fracRes: 0.7033, norm(attn): 0.2012, norm(output): 0.9353, norm(x): 0.7542, norm(y): 1.0069, norm:0.7743, tok/sec: 99978.51, flops:104.94, batch-reuse:1
@ 2965 train 4.6750 , allloss: 4.6751, dt: 1343.21ms, fracRes: 0.7031, norm(attn): 0.2012, norm(output): 0.9352, norm(x): 0.7541, norm(y): 1.0071, norm:0.7198, tok/sec: 97580.86, flops:102.42, batch-reuse:1
@ 2966 train 4.5600 , allloss: 4.5601, dt: 1332.30ms, fracRes: 0.7031, norm(attn): 0.2012, norm(output): 0.9351, norm(x): 0.7530, norm(y): 1.0075, norm:0.7266, tok/sec: 98380.02, flops:103.26, batch-reuse:1
@ 2967 train 4.6191 , allloss: 4.6193, dt: 1312.03ms, fracRes: 0.7033, norm(attn): 0.2012, norm(output): 0.9351, norm(x): 0.7519, norm(y): 1.0074, norm:0.7424, tok/sec: 99900.11, flops:104.86, batch-reuse:1
@ 2968 train 4.6382 , allloss: 4.6384, dt: 1310.37ms, fracRes: 0.7035, norm(attn): 0.2021, norm(output): 0.9349, norm(x): 0.7519, norm(y): 1.0073, norm:0.7583, tok/sec: 100026.64, flops:104.99, batch-reuse:1
@ 2969 train 4.5741 , allloss: 4.5743, dt: 1313.17ms, fracRes: 0.7035, norm(attn): 0.2012, norm(output): 0.9351, norm(x): 0.7536, norm(y): 1.0073, norm:0.6703, tok/sec: 99813.63, flops:104.77, batch-reuse:1
@ 2970 train 4.5868 , allloss: 4.5868, dt: 1309.55ms, fracRes: 0.7031, norm(attn): 0.2021, norm(output): 0.9352, norm(x): 0.7550, norm(y): 1.0074, norm:0.7153, tok/sec: 100089.60, flops:105.06, batch-reuse:1
@ 2971 train 4.6090 , allloss: 4.6091, dt: 1323.15ms, fracRes: 0.7032, norm(attn): 0.2021, norm(output): 0.9351, norm(x): 0.7544, norm(y): 1.0075, norm:0.7647, tok/sec: 99060.33, flops:103.98, batch-reuse:1
@ 2972 train 4.5087 , allloss: 4.5088, dt: 1323.00ms, fracRes: 0.7032, norm(attn): 0.2021, norm(output): 0.9351, norm(x): 0.7535, norm(y): 1.0074, norm:0.7537, tok/sec: 99071.97, flops:103.99, batch-reuse:1
@ 2973 train 4.6508 , allloss: 4.6509, dt: 1291.45ms, fracRes: 0.7034, norm(attn): 0.2021, norm(output): 0.9351, norm(x): 0.7528, norm(y): 1.0075, norm:0.8299, tok/sec: 101492.18, flops:106.53, batch-reuse:1
@ 2974 train 4.5596 , allloss: 4.5597, dt: 1304.89ms, fracRes: 0.7033, norm(attn): 0.2031, norm(output): 0.9351, norm(x): 0.7526, norm(y): 1.0076, norm:0.7333, tok/sec: 100446.62, flops:105.43, batch-reuse:1
@ 2975 train 4.6999 , allloss: 4.7000, dt: 1328.75ms, fracRes: 0.7032, norm(attn): 0.2031, norm(output): 0.9352, norm(x): 0.7537, norm(y): 1.0074, norm:0.6429, tok/sec: 98643.45, flops:103.54, batch-reuse:1
@ 2976 train 4.7974 , allloss: 4.7976, dt: 1295.99ms, fracRes: 0.7035, norm(attn): 0.2031, norm(output): 0.9352, norm(x): 0.7543, norm(y): 1.0071, norm:0.7868, tok/sec: 101136.75, flops:106.16, batch-reuse:1
@ 2977 train 4.7762 , allloss: 4.7764, dt: 1318.28ms, fracRes: 0.7037, norm(attn): 0.1992, norm(output): 0.9354, norm(x): 0.7542, norm(y): 1.0068, norm:0.7352, tok/sec: 99426.72, flops:104.36, batch-reuse:1
@ 2978 train 4.7838 , allloss: 4.7839, dt: 1294.06ms, fracRes: 0.7037, norm(attn): 0.2012, norm(output): 0.9352, norm(x): 0.7540, norm(y): 1.0069, norm:0.7876, tok/sec: 101287.16, flops:106.31, batch-reuse:1
@ 2979 train 4.8890 , allloss: 4.8891, dt: 1333.61ms, fracRes: 0.7033, norm(attn): 0.2021, norm(output): 0.9355, norm(x): 0.7546, norm(y): 1.0071, norm:0.8224, tok/sec: 98283.43, flops:103.16, batch-reuse:1
@ 2980 train 4.7035 , allloss: 4.7037, dt: 1288.81ms, fracRes: 0.7032, norm(attn): 0.2031, norm(output): 0.9352, norm(x): 0.7541, norm(y): 1.0075, norm:0.9995, tok/sec: 101699.87, flops:106.75, batch-reuse:1
@ 2981 train 4.7616 , allloss: 4.7617, dt: 1293.16ms, fracRes: 0.7033, norm(attn): 0.2031, norm(output): 0.9353, norm(x): 0.7540, norm(y): 1.0073, norm:1.4390, tok/sec: 101357.69, flops:106.39, batch-reuse:1
@ 2982 train 4.8815 , allloss: 4.8818, dt: 1314.06ms, fracRes: 0.7034, norm(attn): 0.2021, norm(output): 0.9352, norm(x): 0.7542, norm(y): 1.0070, norm:0.8610, tok/sec: 99745.95, flops:104.70, batch-reuse:1
@ 2983 train 4.7886 , allloss: 4.7903, dt: 1296.93ms, fracRes: 0.7035, norm(attn): 0.2021, norm(output): 0.9352, norm(x): 0.7543, norm(y): 1.0071, norm:0.9859, tok/sec: 101063.24, flops:106.08, batch-reuse:1
@ 2984 train 4.7835 , allloss: 4.7836, dt: 1305.02ms, fracRes: 0.7034, norm(attn): 0.2021, norm(output): 0.9354, norm(x): 0.7548, norm(y): 1.0071, norm:0.9966, tok/sec: 100436.62, flops:105.42, batch-reuse:1
@ 2985 train 4.8324 , allloss: 4.8325, dt: 1313.81ms, fracRes: 0.7038, norm(attn): 0.2031, norm(output): 0.9354, norm(x): 0.7543, norm(y): 1.0066, norm:0.7239, tok/sec: 99764.62, flops:104.72, batch-reuse:1
@ 2986 train 4.7374 , allloss: 4.7375, dt: 1312.10ms, fracRes: 0.7037, norm(attn): 0.2021, norm(output): 0.9355, norm(x): 0.7548, norm(y): 1.0067, norm:0.6891, tok/sec: 99895.18, flops:104.85, batch-reuse:1
@ 2987 train 4.8004 , allloss: 4.8005, dt: 1307.76ms, fracRes: 0.7034, norm(attn): 0.2021, norm(output): 0.9354, norm(x): 0.7544, norm(y): 1.0073, norm:0.6747, tok/sec: 100226.32, flops:105.20, batch-reuse:1
@ 2988 train 4.9399 , allloss: 4.9400, dt: 1286.22ms, fracRes: 0.7033, norm(attn): 0.2041, norm(output): 0.9353, norm(x): 0.7537, norm(y): 1.0077, norm:0.6894, tok/sec: 101905.18, flops:106.96, batch-reuse:1
@ 2989 train 4.8223 , allloss: 4.8224, dt: 1319.52ms, fracRes: 0.7033, norm(attn): 0.2031, norm(output): 0.9352, norm(x): 0.7531, norm(y): 1.0076, norm:0.6366, tok/sec: 99333.23, flops:104.26, batch-reuse:1
@ 2990 train 4.8510 , allloss: 4.8511, dt: 1330.15ms, fracRes: 0.7034, norm(attn): 0.2031, norm(output): 0.9351, norm(x): 0.7528, norm(y): 1.0073, norm:0.8230, tok/sec: 98539.15, flops:103.43, batch-reuse:1
@ 2991 train 4.7508 , allloss: 4.7509, dt: 1326.66ms, fracRes: 0.7035, norm(attn): 0.2021, norm(output): 0.9352, norm(x): 0.7535, norm(y): 1.0074, norm:0.7600, tok/sec: 98798.69, flops:103.70, batch-reuse:1
@ 2992 train 4.7905 , allloss: 4.7906, dt: 1337.08ms, fracRes: 0.7034, norm(attn): 0.2012, norm(output): 0.9352, norm(x): 0.7542, norm(y): 1.0076, norm:0.6167, tok/sec: 98028.56, flops:102.89, batch-reuse:1
@ 2993 train 4.8540 , allloss: 4.8541, dt: 1325.80ms, fracRes: 0.7035, norm(attn): 0.2021, norm(output): 0.9352, norm(x): 0.7542, norm(y): 1.0075, norm:0.7207, tok/sec: 98862.74, flops:103.77, batch-reuse:1
@ 2994 train 4.8272 , allloss: 4.8272, dt: 1280.79ms, fracRes: 0.7035, norm(attn): 0.2021, norm(output): 0.9353, norm(x): 0.7541, norm(y): 1.0072, norm:0.6419, tok/sec: 102336.81, flops:107.42, batch-reuse:1
@ 2995 train 4.7025 , allloss: 4.7025, dt: 1305.84ms, fracRes: 0.7034, norm(attn): 0.2021, norm(output): 0.9354, norm(x): 0.7544, norm(y): 1.0070, norm:0.5656, tok/sec: 100373.87, flops:105.36, batch-reuse:1
@ 2996 train 4.7516 , allloss: 4.7517, dt: 1334.31ms, fracRes: 0.7032, norm(attn): 0.2021, norm(output): 0.9354, norm(x): 0.7546, norm(y): 1.0072, norm:0.7215, tok/sec: 98232.29, flops:103.11, batch-reuse:1
@ 2997 train 4.7894 , allloss: 4.7895, dt: 1313.02ms, fracRes: 0.7030, norm(attn): 0.2012, norm(output): 0.9353, norm(x): 0.7546, norm(y): 1.0076, norm:0.7610, tok/sec: 99824.47, flops:104.78, batch-reuse:1
@ 2998 train 4.7847 , allloss: 4.7848, dt: 1310.53ms, fracRes: 0.7031, norm(attn): 0.2012, norm(output): 0.9352, norm(x): 0.7544, norm(y): 1.0073, norm:0.6576, tok/sec: 100014.48, flops:104.98, batch-reuse:1
@ 2999 train 4.7001 , allloss: 4.7002, dt: 1311.34ms, fracRes: 0.7033, norm(attn): 0.2021, norm(output): 0.9353, norm(x): 0.7538, norm(y): 1.0071, norm:0.8308, tok/sec: 99952.44, flops:104.91, batch-reuse:1
@ 3000 train 4.8826 , allloss: 4.8896, dt: 1319.77ms, fracRes: 0.7033, norm(attn): 0.2021, norm(output): 0.9353, norm(x): 0.7532, norm(y): 1.0072, norm:0.8221, tok/sec: 99314.43, flops:104.24, batch-reuse:1
@ 3001 train 4.8743 , allloss: 4.8743, dt: 1288.99ms, fracRes: 0.7032, norm(attn): 0.2021, norm(output): 0.9354, norm(x): 0.7538, norm(y): 1.0073, norm:0.6853, tok/sec: 101686.21, flops:106.73, batch-reuse:1
@ 3002 train 4.7612 , allloss: 4.7613, dt: 1299.36ms, fracRes: 0.7035, norm(attn): 0.2021, norm(output): 0.9352, norm(x): 0.7531, norm(y): 1.0073, norm:0.6787, tok/sec: 100874.13, flops:105.88, batch-reuse:1
@ 3003 train 4.7808 , allloss: 4.7809, dt: 1287.95ms, fracRes: 0.7034, norm(attn): 0.2002, norm(output): 0.9353, norm(x): 0.7529, norm(y): 1.0073, norm:0.6495, tok/sec: 101768.00, flops:106.82, batch-reuse:1
@ 3004 train 4.8497 , allloss: 4.8499, dt: 1294.94ms, fracRes: 0.7035, norm(attn): 0.2012, norm(output): 0.9353, norm(x): 0.7531, norm(y): 1.0073, norm:0.7682, tok/sec: 101218.63, flops:106.24, batch-reuse:1
@ 3005 train 5.0581 , allloss: 5.0582, dt: 1300.31ms, fracRes: 0.7035, norm(attn): 0.2021, norm(output): 0.9353, norm(x): 0.7538, norm(y): 1.0070, norm:1.0594, tok/sec: 100800.92, flops:105.80, batch-reuse:1
@ 3006 train 4.7749 , allloss: 4.7750, dt: 1286.65ms, fracRes: 0.7031, norm(attn): 0.2002, norm(output): 0.9353, norm(x): 0.7542, norm(y): 1.0071, norm:0.9403, tok/sec: 101870.83, flops:106.93, batch-reuse:1
@ 3007 train 4.8351 , allloss: 4.8352, dt: 1301.20ms, fracRes: 0.7030, norm(attn): 0.1992, norm(output): 0.9355, norm(x): 0.7544, norm(y): 1.0071, norm:0.7553, tok/sec: 100731.58, flops:105.73, batch-reuse:1
@ 3008 train 4.7774 , allloss: 4.7775, dt: 1300.17ms, fracRes: 0.7030, norm(attn): 0.1992, norm(output): 0.9354, norm(x): 0.7542, norm(y): 1.0071, norm:0.6915, tok/sec: 100811.62, flops:105.82, batch-reuse:1
@ 3009 train 4.7113 , allloss: 4.7115, dt: 1302.53ms, fracRes: 0.7031, norm(attn): 0.2012, norm(output): 0.9352, norm(x): 0.7537, norm(y): 1.0072, norm:0.7295, tok/sec: 100629.14, flops:105.62, batch-reuse:1
@ 3010 train 4.8397 , allloss: 4.8401, dt: 1300.61ms, fracRes: 0.7031, norm(attn): 0.2021, norm(output): 0.9353, norm(x): 0.7538, norm(y): 1.0073, norm:0.8131, tok/sec: 100777.66, flops:105.78, batch-reuse:1
@ 3011 train 4.7874 , allloss: 4.7875, dt: 1292.24ms, fracRes: 0.7033, norm(attn): 0.2021, norm(output): 0.9353, norm(x): 0.7535, norm(y): 1.0072, norm:0.5857, tok/sec: 101430.44, flops:106.46, batch-reuse:1
@ 3012 train 4.9194 , allloss: 4.9197, dt: 1295.36ms, fracRes: 0.7034, norm(attn): 0.2021, norm(output): 0.9352, norm(x): 0.7533, norm(y): 1.0071, norm:0.7267, tok/sec: 101185.84, flops:106.21, batch-reuse:1
@ 3013 train 4.9113 , allloss: 4.9114, dt: 1271.17ms, fracRes: 0.7031, norm(attn): 0.2012, norm(output): 0.9354, norm(x): 0.7539, norm(y): 1.0072, norm:0.8709, tok/sec: 103111.20, flops:108.23, batch-reuse:1
@ 3014 train 4.7765 , allloss: 4.7768, dt: 1311.49ms, fracRes: 0.7030, norm(attn): 0.2002, norm(output): 0.9354, norm(x): 0.7545, norm(y): 1.0072, norm:0.6576, tok/sec: 99941.39, flops:104.90, batch-reuse:1
@ 3015 train 4.7753 , allloss: 4.7755, dt: 1302.79ms, fracRes: 0.7030, norm(attn): 0.1973, norm(output): 0.9353, norm(x): 0.7543, norm(y): 1.0072, norm:0.6458, tok/sec: 100608.52, flops:105.60, batch-reuse:1
@ 3016 train 4.7141 , allloss: 4.7143, dt: 1289.58ms, fracRes: 0.7032, norm(attn): 0.1992, norm(output): 0.9353, norm(x): 0.7543, norm(y): 1.0072, norm:0.6043, tok/sec: 101639.32, flops:106.68, batch-reuse:1
@ 3017 train 4.7440 , allloss: 4.7441, dt: 1298.77ms, fracRes: 0.7033, norm(attn): 0.2002, norm(output): 0.9354, norm(x): 0.7545, norm(y): 1.0072, norm:0.6452, tok/sec: 100920.14, flops:105.93, batch-reuse:1
@ 3018 train 4.7678 , allloss: 4.7679, dt: 1339.30ms, fracRes: 0.7031, norm(attn): 0.2031, norm(output): 0.9355, norm(x): 0.7541, norm(y): 1.0073, norm:0.6974, tok/sec: 97866.19, flops:102.72, batch-reuse:1
@ 3019 train 4.9686 , allloss: 4.9689, dt: 1325.56ms, fracRes: 0.7031, norm(attn): 0.2012, norm(output): 0.9354, norm(x): 0.7535, norm(y): 1.0072, norm:0.7382, tok/sec: 98880.73, flops:103.79, batch-reuse:1
@ 3020 train 4.7006 , allloss: 4.7006, dt: 1343.74ms, fracRes: 0.7029, norm(attn): 0.2012, norm(output): 0.9353, norm(x): 0.7538, norm(y): 1.0074, norm:1.0111, tok/sec: 97542.40, flops:102.38, batch-reuse:1
@ 3021 train 4.7229 , allloss: 4.7230, dt: 1343.53ms, fracRes: 0.7028, norm(attn): 0.2021, norm(output): 0.9353, norm(x): 0.7542, norm(y): 1.0072, norm:0.8165, tok/sec: 97557.64, flops:102.40, batch-reuse:1
@ 3022 train 4.8277 , allloss: 4.8279, dt: 1342.84ms, fracRes: 0.7032, norm(attn): 0.2031, norm(output): 0.9352, norm(x): 0.7538, norm(y): 1.0070, norm:0.6809, tok/sec: 97608.08, flops:102.45, batch-reuse:1
@ 3023 train 4.8548 , allloss: 4.8549, dt: 1346.04ms, fracRes: 0.7033, norm(attn): 0.2031, norm(output): 0.9355, norm(x): 0.7543, norm(y): 1.0068, norm:0.7962, tok/sec: 97376.14, flops:102.21, batch-reuse:1
@ 3024 train 4.7472 , allloss: 4.7473, dt: 1349.35ms, fracRes: 0.7031, norm(attn): 0.2021, norm(output): 0.9353, norm(x): 0.7545, norm(y): 1.0070, norm:0.6831, tok/sec: 97136.90, flops:101.96, batch-reuse:1
@ 3025 train 4.7545 , allloss: 4.7549, dt: 1299.22ms, fracRes: 0.7029, norm(attn): 0.2012, norm(output): 0.9354, norm(x): 0.7547, norm(y): 1.0073, norm:0.6268, tok/sec: 100885.34, flops:105.89, batch-reuse:1
@ 3026 train 4.8538 , allloss: 4.8540, dt: 1273.06ms, fracRes: 0.7030, norm(attn): 0.2002, norm(output): 0.9354, norm(x): 0.7545, norm(y): 1.0074, norm:0.8313, tok/sec: 102957.87, flops:108.07, batch-reuse:1
@ 3027 train 4.8611 , allloss: 4.8612, dt: 1289.84ms, fracRes: 0.7032, norm(attn): 0.2021, norm(output): 0.9354, norm(x): 0.7537, norm(y): 1.0073, norm:0.8292, tok/sec: 101618.98, flops:106.66, batch-reuse:1
@ 3028 train 4.7788 , allloss: 4.7789, dt: 1299.30ms, fracRes: 0.7031, norm(attn): 0.2021, norm(output): 0.9354, norm(x): 0.7532, norm(y): 1.0071, norm:0.6525, tok/sec: 100878.98, flops:105.89, batch-reuse:1
@ 3029 train 4.6554 , allloss: 4.6554, dt: 1315.80ms, fracRes: 0.7032, norm(attn): 0.2012, norm(output): 0.9353, norm(x): 0.7530, norm(y): 1.0070, norm:0.6058, tok/sec: 99614.13, flops:104.56, batch-reuse:1
@ 3030 train 4.7047 , allloss: 4.7049, dt: 1320.98ms, fracRes: 0.7032, norm(attn): 0.1992, norm(output): 0.9353, norm(x): 0.7536, norm(y): 1.0071, norm:0.6278, tok/sec: 99223.60, flops:104.15, batch-reuse:1
@ 3031 train 4.7375 , allloss: 4.7376, dt: 1310.64ms, fracRes: 0.7029, norm(attn): 0.1992, norm(output): 0.9353, norm(x): 0.7546, norm(y): 1.0072, norm:0.7141, tok/sec: 100006.11, flops:104.97, batch-reuse:1
@ 3032 train 4.7385 , allloss: 4.7387, dt: 1325.17ms, fracRes: 0.7030, norm(attn): 0.2002, norm(output): 0.9354, norm(x): 0.7547, norm(y): 1.0070, norm:0.5625, tok/sec: 98909.45, flops:103.82, batch-reuse:1
@ 3033 train 4.7249 , allloss: 4.7250, dt: 1301.25ms, fracRes: 0.7032, norm(attn): 0.2021, norm(output): 0.9355, norm(x): 0.7550, norm(y): 1.0068, norm:0.6785, tok/sec: 100727.54, flops:105.73, batch-reuse:1
@ 3034 train 4.7779 , allloss: 4.7780, dt: 1289.35ms, fracRes: 0.7033, norm(attn): 0.2021, norm(output): 0.9355, norm(x): 0.7552, norm(y): 1.0068, norm:0.5310, tok/sec: 101657.48, flops:106.70, batch-reuse:1
@ 3035 train 4.8177 , allloss: 4.8191, dt: 1290.17ms, fracRes: 0.7032, norm(attn): 0.2021, norm(output): 0.9354, norm(x): 0.7550, norm(y): 1.0070, norm:0.6740, tok/sec: 101592.65, flops:106.63, batch-reuse:1
@ 3036 train 4.7128 , allloss: 4.7129, dt: 1315.35ms, fracRes: 0.7031, norm(attn): 0.2021, norm(output): 0.9353, norm(x): 0.7546, norm(y): 1.0069, norm:0.6293, tok/sec: 99648.07, flops:104.59, batch-reuse:1
@ 3037 train 4.8068 , allloss: 4.8070, dt: 1291.85ms, fracRes: 0.7031, norm(attn): 0.2012, norm(output): 0.9353, norm(x): 0.7536, norm(y): 1.0071, norm:0.6046, tok/sec: 101460.56, flops:106.50, batch-reuse:1
@ 3038 train 4.7275 , allloss: 4.7276, dt: 1305.55ms, fracRes: 0.7030, norm(attn): 0.2012, norm(output): 0.9353, norm(x): 0.7532, norm(y): 1.0073, norm:0.6880, tok/sec: 100395.77, flops:105.38, batch-reuse:1
@ 3039 train 4.9054 , allloss: 4.9055, dt: 1288.12ms, fracRes: 0.7027, norm(attn): 0.2021, norm(output): 0.9355, norm(x): 0.7538, norm(y): 1.0073, norm:1.1117, tok/sec: 101754.77, flops:106.81, batch-reuse:1
@ 3040 train 4.7875 , allloss: 4.7876, dt: 1310.70ms, fracRes: 0.7030, norm(attn): 0.2021, norm(output): 0.9353, norm(x): 0.7535, norm(y): 1.0071, norm:1.1200, tok/sec: 100001.73, flops:104.97, batch-reuse:1
@ 3041 train 4.8183 , allloss: 4.8184, dt: 1333.66ms, fracRes: 0.7032, norm(attn): 0.2021, norm(output): 0.9352, norm(x): 0.7533, norm(y): 1.0070, norm:0.8081, tok/sec: 98280.18, flops:103.16, batch-reuse:1
@ 3042 train 4.6691 , allloss: 4.6692, dt: 1331.32ms, fracRes: 0.7031, norm(attn): 0.2041, norm(output): 0.9351, norm(x): 0.7534, norm(y): 1.0074, norm:0.9332, tok/sec: 98452.71, flops:103.34, batch-reuse:1
@ 3043 train 4.7016 , allloss: 4.7016, dt: 1343.11ms, fracRes: 0.7030, norm(attn): 0.2031, norm(output): 0.9353, norm(x): 0.7540, norm(y): 1.0074, norm:0.8427, tok/sec: 97588.50, flops:102.43, batch-reuse:1
@ 3044 train 4.7571 , allloss: 4.7573, dt: 1345.04ms, fracRes: 0.7030, norm(attn): 0.2031, norm(output): 0.9353, norm(x): 0.7542, norm(y): 1.0073, norm:0.8083, tok/sec: 97448.14, flops:102.28, batch-reuse:1
@ 3045 train 4.9325 , allloss: 4.9326, dt: 1335.23ms, fracRes: 0.7032, norm(attn): 0.2012, norm(output): 0.9354, norm(x): 0.7541, norm(y): 1.0070, norm:1.0946, tok/sec: 98164.65, flops:103.04, batch-reuse:1
@ 3046 train 4.7624 , allloss: 4.7625, dt: 1292.58ms, fracRes: 0.7033, norm(attn): 0.2031, norm(output): 0.9354, norm(x): 0.7537, norm(y): 1.0071, norm:1.0674, tok/sec: 101403.37, flops:106.44, batch-reuse:1
@ 3047 train 4.8563 , allloss: 4.8564, dt: 1293.81ms, fracRes: 0.7035, norm(attn): 0.2021, norm(output): 0.9352, norm(x): 0.7525, norm(y): 1.0073, norm:0.8893, tok/sec: 101307.34, flops:106.34, batch-reuse:1
@ 3048 train 4.7167 , allloss: 4.7168, dt: 1317.81ms, fracRes: 0.7035, norm(attn): 0.2021, norm(output): 0.9353, norm(x): 0.7526, norm(y): 1.0069, norm:0.8227, tok/sec: 99461.95, flops:104.40, batch-reuse:1
@ 3049 train 4.8998 , allloss: 4.8999, dt: 1298.36ms, fracRes: 0.7035, norm(attn): 0.2012, norm(output): 0.9356, norm(x): 0.7530, norm(y): 1.0067, norm:0.6948, tok/sec: 100952.31, flops:105.96, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0117, -0.0455, -0.0119,  ..., -0.0111, -0.0029,  0.0336],
        [ 0.0057, -0.0392, -0.0243,  ..., -0.0596, -0.0100,  0.0302],
        [-0.0012, -0.0574,  0.0145,  ..., -0.0023,  0.0093,  0.0505],
        ...,
        [ 0.0175,  0.0724, -0.0181,  ...,  0.0093, -0.0224,  0.0020],
        [-0.0064, -0.0130,  0.0687,  ...,  0.0094,  0.0420,  0.0311],
        [ 0.0220, -0.0243,  0.0513,  ..., -0.0182,  0.0480, -0.0050]], device='cuda:0', requires_grad=True)
K: tensor([ 5.2812, -3.8438,  1.2891,  3.6562, -4.8438,  3.7344, -1.1172,  6.0312, -5.0312, -0.2832, -3.4375, -4.1562,  5.3750, -4.4688,  0.5352, -0.2598, -1.0625, -4.4688,  5.7500, -6.3750,  5.7812,  3.7812, -6.7500, -0.0277, -2.6562, -1.2891,  3.0312, -4.0000, -5.1875, -3.0469,  6.0625,  1.1016,
         3.2969,  5.0000, -2.2656, -4.1875,  2.5000,  3.3438, -2.5312, -4.5625,  4.9062, -2.1094, -0.5781, -2.4688, -4.1562, -3.2031,  0.1147,  3.7031, -1.0156,  2.2500,  3.5625, -4.2812, -5.7500,  5.7500,  3.3125, -2.9219,  4.9375,  3.8594, -1.8047, -2.6406, -2.9844,  0.2246, -2.1875, -1.2891],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0866,  0.0902, -0.0028,  ..., -0.0253, -0.0381, -0.0169],
        [-0.0650,  0.0943,  0.0046,  ...,  0.0221, -0.0085,  0.0156],
        [-0.0684,  0.0844, -0.0146,  ..., -0.0599, -0.0771,  0.0004],
        ...,
        [ 0.0401, -0.0096,  0.0001,  ...,  0.0198, -0.0132,  0.0004],
        [-0.0267,  0.0168, -0.0323,  ...,  0.0325, -0.0089,  0.0318],
        [-0.0164,  0.0429,  0.0105,  ...,  0.0086, -0.0190, -0.0396]], device='cuda:0', requires_grad=True)
Q: tensor([-1.4609,  6.5000, -9.5625, -5.3125,  4.1250, -4.5625, -2.4688, -5.5000,  5.2188, -7.5625,  1.6875,  4.9688, -7.8438,  4.8125, -7.4062,  5.7812,  6.5000,  6.2812, -4.7500,  7.4062, -4.9688, -5.5625,  5.5938, -5.5625, -3.2031, -6.5312, -6.9062,  3.2188,  4.0938,  8.8125, -5.2812, -6.4062,
        -7.5000, -4.1250, -3.5000,  2.3750, -9.8750, -5.2188,  6.0312,  3.0156, -2.5625,  1.0234,  7.0312, -1.1562,  5.2812,  3.7500, -7.3438, -7.1562,  8.1250, -0.0605, -3.8438,  6.0312,  4.5000, -6.5625, -2.9531, -0.3164, -3.5312,  3.2188, -1.4766, 10.0625,  2.7656, -5.1250,  6.5938,  7.8750],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[   0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000],
        [   0.0000,  118.0000,  175.0000,  134.0000,   85.0000,   94.5000,   79.5000,  148.0000,  102.5000,   98.5000,   86.5000,  123.5000,   96.0000,  103.0000,  114.0000],
        [   0.0000,  -66.5000, -116.0000,  -93.0000,  -67.0000,  -68.5000,  -50.7500,  -92.0000,  -75.0000,  -70.0000,  -68.5000,  -77.0000,  -58.2500,  -72.5000,  -78.5000],
        [   0.0000, -110.0000, -181.0000, -145.0000, -100.5000, -104.5000,  -81.0000, -148.0000, -115.0000, -108.5000, -103.0000, -124.5000,  -93.5000, -113.0000, -122.5000],
        [   0.0000, -126.5000, -205.0000, -162.0000, -112.0000, -117.0000,  -88.5000, -165.0000, -129.0000, -121.0000, -114.0000, -136.0000, -104.5000, -125.0000, -135.0000],
        [   0.0000, -106.0000, -173.0000, -138.0000,  -97.0000, -102.0000,  -77.5000, -141.0000, -110.5000, -103.5000,  -98.0000, -117.5000,  -91.0000, -107.5000, -115.5000],
        [   0.0000,  -77.5000, -127.5000, -100.0000,  -68.5000,  -73.0000,  -53.7500, -102.0000,  -80.0000,  -74.5000,  -70.0000,  -84.0000,  -64.0000,  -77.0000,  -83.5000],
        [   0.0000,  -86.5000, -146.0000, -118.5000,  -86.0000,  -88.5000,  -69.0000, -119.0000,  -96.5000,  -90.0000,  -88.0000, -102.5000,  -76.0000,  -95.0000, -101.5000],
        [   0.0000, -104.0000, -168.0000, -132.0000,  -90.0000,  -95.0000,  -71.0000, -136.0000, -105.0000,  -98.5000,  -92.0000, -110.5000,  -85.5000, -101.5000, -109.5000],
        [   0.0000, -115.0000, -188.0000, -150.0000, -104.0000, -109.0000,  -84.0000, -152.0000, -120.0000, -112.0000, -107.5000, -128.0000,  -95.5000, -117.5000, -127.0000],
        [   0.0000, -117.0000, -186.0000, -144.0000,  -96.0000, -101.0000,  -76.5000, -149.0000, -113.0000, -106.5000,  -99.5000, -120.5000,  -92.5000, -109.0000, -119.5000],
        [   0.0000, -107.0000, -177.0000, -143.0000, -100.0000, -104.0000,  -79.5000, -144.0000, -113.5000, -106.0000, -103.0000, -121.5000,  -89.5000, -111.5000, -121.0000],
        [   0.0000,  -77.5000, -131.0000, -106.5000,  -77.0000,  -79.0000,  -61.7500, -106.5000,  -86.0000,  -80.5000,  -78.5000,  -91.5000,  -68.5000,  -85.0000,  -90.5000],
        [   0.0000, -113.0000, -180.0000, -140.0000,  -95.0000, -100.0000,  -74.5000, -145.0000, -111.0000, -104.0000,  -97.5000, -117.5000,  -91.0000, -107.5000, -116.0000],
        [   0.0000, -110.5000, -176.0000, -138.0000,  -93.0000,  -98.5000,  -76.0000, -142.0000, -109.0000, -102.0000,  -96.0000, -117.5000,  -88.5000, -106.5000, -116.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9167],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0003,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6992,     0.0098,     0.2812,     0.0101,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9375,     0.0042,     0.0256,     0.0293,     0.0022,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8594,     0.0053,     0.0535,     0.0408,     0.0410,     0.0013,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8203,     0.0250,     0.0845,     0.0118,     0.0021,     0.0117,     0.0444,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3125,     0.0123,     0.4570,     0.0442,     0.0016,     0.0087,     0.0544,     0.1094,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6680,     0.0270,     0.1504,     0.0571,     0.0026,     0.0098,     0.0608,     0.0206,     0.0027,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4414,     0.0065,     0.2363,     0.0659,     0.0007,     0.0009,     0.0459,     0.1768,     0.0000,     0.0260,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6758,     0.0097,     0.0938,     0.0337,     0.0166,     0.0071,     0.1177,     0.0087,     0.0052,     0.0253,     0.0056,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0659,     0.0038,     0.0942,     0.0156,     0.0000,     0.0009,     0.0045,     0.7578,     0.0000,     0.0021,     0.0001,     0.0552,     0.0000,     0.0000,     0.0000],
        [    0.2734,     0.0103,     0.1016,     0.1250,     0.0283,     0.0107,     0.0972,     0.0179,     0.0143,     0.0728,     0.0903,     0.1260,     0.0312,     0.0000,     0.0000],
        [    0.6914,     0.0063,     0.1523,     0.0579,     0.0031,     0.0041,     0.0576,     0.0063,     0.0023,     0.0081,     0.0021,     0.0036,     0.0055,     0.0006,     0.0000],
        [    0.2676,     0.0199,     0.1201,     0.0047,     0.0003,     0.0137,     0.0205,     0.2471,     0.0010,     0.0074,     0.0016,     0.0356,     0.2559,     0.0006,     0.0050]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0166,  0.0493,  0.0083,  ...,  0.0173,  0.0197,  0.0127],
        [-0.0127,  0.0043,  0.0559,  ..., -0.0123, -0.0038,  0.0434],
        [-0.0100,  0.0226, -0.0019,  ..., -0.0266,  0.0274,  0.0083],
        ...,
        [ 0.0494, -0.0020,  0.0448,  ...,  0.0094,  0.0324, -0.0434],
        [-0.0071,  0.0250, -0.0214,  ..., -0.0271,  0.0209,  0.0312],
        [-0.0230, -0.0308,  0.0135,  ..., -0.0129,  0.0084,  0.0438]], device='cuda:0', requires_grad=True)
K: tensor([-2.3438, -1.1562, -1.1328,  1.2109, -3.1094, -1.2109, -0.4219,  1.4609, -1.5234, -1.2656,  0.0107,  1.1250,  1.8672,  0.6680, -0.8594, -1.4141, -1.7266,  1.2578, -0.4395, -2.1406, -0.4629,  0.5625, -0.2285,  0.9180, -0.1904,  0.5977, -0.3359, -1.9375,  2.1094,  2.4375, -0.0342,  1.2500,
        -2.6719,  1.0703, -0.5664,  1.2109, -0.5508, -0.2207,  0.5781,  0.5547, -0.6953,  2.6094, -0.2197,  2.9062, -2.2031, -3.2812, -3.3281,  0.2871, -0.0070, -0.9961,  0.5781, -0.6250, -0.2852, -0.1387,  0.6055, -0.4844,  0.6680,  0.5977,  1.1719, -0.8516, -1.1094,  0.2305,  3.2656,  0.1523],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[    -0.0087,      0.0176,     -0.0144,  ...,     -0.0289,      0.0024,     -0.0394],
        [    -0.0185,      0.0190,     -0.0055,  ...,     -0.0265,     -0.0238,      0.0460],
        [    -0.0001,     -0.0353,      0.0552,  ...,     -0.0265,      0.0177,      0.0054],
        ...,
        [    -0.0052,      0.0060,     -0.0293,  ...,      0.0088,     -0.0043,      0.0523],
        [     0.0177,      0.0024,     -0.0106,  ...,      0.0404,      0.0209,     -0.0055],
        [    -0.0453,      0.0362,      0.0310,  ...,      0.0126,     -0.0043,      0.0339]], device='cuda:0', requires_grad=True)
Q: tensor([ 1.6875,  0.6250,  0.4102, -2.7188,  0.8477, -0.3223,  0.6133, -1.9766, -1.0469, -0.2715,  0.4473,  0.3926,  0.5117,  2.5938,  2.8125, -1.3906,  2.2031, -1.8359,  0.1309,  2.2656,  0.3926, -0.7383,  0.5938,  1.4453,  1.4219,  0.2891, -1.1172,  0.3887,  2.1875, -2.2188,  0.5938,  1.3047,
        -0.4043, -0.2988,  1.7578, -1.4141,  0.0708,  1.6016, -0.4590, -0.8984, -1.0078, -2.9531, -1.9375,  0.9336,  1.4062, -0.9336,  1.1094, -1.8359,  1.7891, -0.7539,  0.7070,  1.6719, -0.6328, -1.7031, -1.7969, -1.1016,  1.4219, -0.7422, -1.8594, -1.9844,  0.4316, -0.3262, -0.2275, -0.0410],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000,   9.8125,  -1.5781,  -6.5938,  -6.5000,   3.2500,  -2.3281,   5.9375,  -2.8125,  -2.4062,  -6.2500,   0.4668,   5.0938,  -1.0859,  -3.1719],
        [  0.0000,   7.9688,  -2.2969,  -4.0938,  -2.6719,   3.2812,  -1.7266,   7.9688,   0.0728,  -1.2734,  -1.8359,   3.9219,   5.4688,   2.0938,   0.0474],
        [  0.0000,  -4.2812,  -0.9062,  -4.2188,  -8.7500,  -4.4375,  -4.4688,  -0.8828,  -7.5938,  -4.2500,  -6.3750,  -3.0000,  -0.9023,  -8.0625,  -3.8125],
        [  0.0000,  -5.4062,  -3.5938,  -3.4688,  -6.0312,  -5.1562,  -3.7500,  -4.3438,  -6.6562,  -5.0312,  -5.3125,  -6.3125,  -4.1562,  -7.0000,  -6.0938],
        [  0.0000,  -5.0625,  -2.7812,  -3.0469,  -3.0469,  -6.5000,  -2.1094,  -6.0000,  -5.6875,  -3.4688,  -3.9375,  -3.7969,  -5.3438,  -6.3438,  -4.1562],
        [  0.0000,  -3.4844,  -2.2812,  -4.2500,  -5.9688,  -4.2500,  -2.9219,  -4.0312,  -5.0938,  -3.8906,  -4.5000,  -4.4375,  -3.0469,  -5.6250,  -4.0938],
        [  0.0000,  -3.2344,   0.3809,  -1.9531,  -5.2812,  -3.5781,  -1.7500,  -1.0469,  -6.4062,  -2.6719,  -4.2812,  -2.0156,  -0.9062,  -7.3125,  -2.9062],
        [  0.0000,  -3.2188,  -1.4922,  -2.4688,  -5.5625,  -4.2188,  -2.3906,  -3.4844,  -5.5312,  -4.1250,  -6.1875,  -4.6250,  -4.3125,  -5.9062,  -6.3125],
        [  0.0000,  -4.2188,  -0.6250,  -1.8984,  -6.4688,  -6.2188,  -2.2656,  -0.9141,  -9.6250,  -2.8281,  -7.5000,  -1.6406,   0.1631, -10.8750,  -6.3125],
        [  0.0000,  -4.2500,  -1.9766,  -3.0000,  -3.7031,  -4.5625,  -1.7500,  -4.3750,  -4.8438,  -3.2812,  -4.7812,  -4.3438,  -3.2344,  -5.5312,  -6.6562],
        [  0.0000,  -2.8594,   0.3574,  -1.4375,  -7.5000,  -4.2500,  -2.6719,   2.4375,  -9.6875,  -3.4688,  -6.8750,  -0.1777,   2.2656, -10.3750,  -4.6875],
        [  0.0000,  -3.2969,  -0.9961,  -0.7852,  -2.2656,  -3.2500,  -1.0391,  -2.7344,  -2.9531,  -1.3281,  -1.1094,  -0.7773,  -2.1719,  -3.5469,   0.5547],
        [  0.0000,  -4.6875,  -1.5156,  -2.4844,  -5.4062,  -5.1250,  -2.4844,  -4.6875,  -5.7188,  -4.4375,  -5.8125,  -5.2812,  -4.8438,  -7.0000,  -5.9062],
        [  0.0000,  -2.5938,  -0.7969,  -4.0312,  -6.8750,  -2.9688,  -2.5625,  -0.0757,  -5.6250,  -3.5781,  -5.1250,  -2.0156,  -0.0420,  -6.0312,  -3.9844]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7725],
        [0.5421],
        [0.3688],
        [0.3922],
        [0.6068],
        [0.3528],
        [0.3495],
        [0.1845],
        [0.2869],
        [0.2214],
        [0.1922],
        [0.2070],
        [0.1763],
        [0.0354]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0290, -0.0097,  0.0055,  ...,  0.0136, -0.0704, -0.0151],
        [-0.0485, -0.0294,  0.0049,  ...,  0.0302, -0.0673, -0.0308],
        [ 0.0205,  0.0079, -0.0126,  ...,  0.0403,  0.0223, -0.0127],
        ...,
        [-0.0135, -0.0195, -0.0055,  ...,  0.0542, -0.0311, -0.0189],
        [-0.0250, -0.0163,  0.0174,  ...,  0.0183,  0.0031, -0.0016],
        [ 0.0057, -0.0392, -0.0290,  ...,  0.0540, -0.0345, -0.0610]], device='cuda:0', requires_grad=True)
K: tensor([ 3.0938, -3.6250, -2.2969, -2.9844,  4.5000, -3.1250,  4.4688,  2.8125,  3.5469, -4.5000,  3.1406, -3.9844, -4.4062,  4.2812,  2.1719, -2.1562,  1.4375,  4.6562, -0.8438, -3.6250,  4.3750,  5.2812,  3.3594, -1.8516, -3.2031,  4.6250, -3.3750, -4.8438, -1.9219,  3.3438, -3.9219,  3.0312,
         2.1250, -2.4531, -3.0312, -0.0068,  0.4355, -3.3594,  2.8438, -3.4219, -3.6875,  1.8359,  2.2500, -3.0000, -2.9375,  3.1562, -3.7031,  3.6406, -4.3125, -3.1719, -3.0938,  3.4062,  2.6562,  3.3125,  1.6328, -4.4062, -3.4375,  2.6875, -0.7227, -1.9609,  3.3281,  2.8281, -1.3438,  2.7344],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0111,  0.0106,  0.0133,  ..., -0.0007,  0.0158,  0.0441],
        [ 0.0430,  0.0249, -0.0171,  ..., -0.0380,  0.0014,  0.0110],
        [ 0.0005, -0.0237, -0.0020,  ..., -0.0246,  0.0439,  0.0358],
        ...,
        [-0.0116, -0.0048, -0.0523,  ..., -0.0094,  0.0429,  0.0109],
        [ 0.0192,  0.0006, -0.0219,  ...,  0.0248, -0.0236, -0.0173],
        [-0.0041,  0.0045,  0.0062,  ..., -0.0230, -0.0008,  0.0535]], device='cuda:0', requires_grad=True)
Q: tensor([-1.8828,  4.0625,  4.2500,  3.3906, -3.1562,  3.5625, -2.7969, -4.8750, -3.4219,  4.0938, -3.7500,  4.7500,  3.5469, -3.6250, -3.6094,  3.3125, -1.2969, -5.8125,  0.5117,  5.3438, -4.5625, -3.7500, -4.6250,  1.3047,  5.2188, -5.0312,  3.2031,  3.0625,  3.8438, -3.9844,  3.1719, -4.0000,
        -4.0625,  2.1250,  3.7188, -1.9219, -1.0391,  2.4531, -5.0000,  1.5312,  4.9375, -0.6016, -3.3281,  3.9375,  2.7031, -4.3438,  3.4531, -3.0469,  3.4688,  4.7812,  5.1875, -4.5312, -2.4688, -3.3906, -2.0625,  3.6875,  4.5625, -1.4297,  1.4531,  2.7969, -3.2188, -5.0625,  0.9727, -2.6250],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[   0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000],
        [   0.0000,  -45.5000,  -48.5000,  -87.5000,  -84.0000,  -71.5000,  -75.5000,  -89.5000,  -67.5000,  -76.0000,  -78.5000,  -77.5000,  -82.5000,  -68.5000,  -68.0000],
        [   0.0000,  -52.5000,  -58.7500, -106.5000,  -99.0000,  -84.0000,  -89.5000, -108.5000,  -78.0000,  -92.5000,  -92.0000,  -92.5000,  -99.5000,  -80.0000,  -80.5000],
        [   0.0000,  -83.5000,  -95.0000, -177.0000, -161.0000, -135.0000, -144.0000, -176.0000, -123.0000, -153.0000, -148.0000, -150.0000, -162.0000, -126.0000, -127.5000],
        [   0.0000,  -71.5000,  -79.0000, -145.0000, -136.0000, -114.5000, -122.5000, -147.0000, -106.0000, -127.0000, -125.5000, -126.5000, -136.0000, -108.5000, -108.5000],
        [   0.0000,  -63.2500,  -69.0000, -125.5000, -118.5000, -101.5000, -107.0000, -128.0000,  -93.5000, -109.5000, -110.0000, -110.0000, -118.0000,  -95.5000,  -95.5000],
        [   0.0000,  -67.0000,  -74.0000, -135.0000, -127.5000, -108.0000, -115.0000, -138.0000,  -99.5000, -118.5000, -117.5000, -118.5000, -127.5000, -102.0000, -102.5000],
        [   0.0000,  -88.5000,  -99.5000, -182.0000, -167.0000, -141.0000, -151.0000, -184.0000, -130.0000, -158.0000, -155.0000, -157.0000, -170.0000, -133.0000, -135.0000],
        [   0.0000,  -52.5000,  -58.0000, -106.0000,  -99.5000,  -85.0000,  -90.0000, -108.5000,  -79.0000,  -93.0000,  -92.0000,  -93.5000, -100.5000,  -80.5000,  -80.0000],
        [   0.0000,  -72.0000,  -82.0000, -152.0000, -138.0000, -116.0000, -124.0000, -152.0000, -105.5000, -132.0000, -126.5000, -129.0000, -141.0000, -108.0000, -110.0000],
        [   0.0000,  -68.0000,  -75.0000, -140.0000, -131.0000, -110.0000, -117.5000, -141.0000, -101.5000, -122.0000, -120.5000, -121.5000, -131.0000, -104.0000, -103.5000],
        [   0.0000,  -74.0000,  -84.5000, -155.0000, -141.0000, -118.5000, -127.0000, -156.0000, -108.5000, -135.0000, -130.0000, -133.0000, -145.0000, -111.0000, -113.0000],
        [   0.0000,  -82.0000,  -92.0000, -168.0000, -154.0000, -130.0000, -139.0000, -170.0000, -119.0000, -146.0000, -142.0000, -145.0000, -158.0000, -121.5000, -124.0000],
        [   0.0000,  -54.0000,  -59.7500, -109.0000, -102.5000,  -87.5000,  -92.5000, -111.5000,  -81.0000,  -95.5000,  -94.5000,  -96.0000, -103.5000,  -82.5000,  -82.0000],
        [   0.0000,  -57.5000,  -64.5000, -119.5000, -112.0000,  -94.5000, -100.5000, -122.0000,  -87.0000, -104.5000, -102.5000, -104.0000, -112.0000,  -88.5000,  -89.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[     0.0405,      0.0179,      0.0211,  ...,      0.0063,     -0.0010,     -0.0247],
        [    -0.0039,      0.0194,      0.0218,  ...,      0.0303,      0.0063,      0.0289],
        [     0.0322,      0.0047,     -0.0007,  ...,     -0.0008,      0.0392,      0.0029],
        ...,
        [    -0.0223,     -0.0291,     -0.0148,  ...,      0.0135,     -0.0268,      0.0108],
        [    -0.0085,      0.0069,     -0.0217,  ...,     -0.0185,     -0.0289,     -0.0252],
        [     0.0242,      0.0000,     -0.0047,  ...,      0.0137,      0.0139,      0.0067]], device='cuda:0', requires_grad=True)
K: tensor([-2.9062,  0.9492, -2.1094,  1.7812, -1.0469, -2.3750, -0.9570,  2.9375,  0.0554, -0.4648,  0.9922,  0.8008, -1.8906, -3.0000,  2.4844,  2.4219,  3.4219, -2.5312, -2.3281,  2.0156,  1.8672, -2.6094, -3.3750,  3.0312, -2.4844,  2.8438, -0.4316, -1.2656,  0.3496, -1.6953,  0.1279, -2.3594,
        -1.4141, -2.5625,  1.8750, -2.9531, -2.9531,  0.2207,  2.7188,  2.1562, -2.4062,  0.1670,  0.8203, -2.4688,  1.8594,  2.9688,  0.0571, -1.5781, -1.9844,  2.5625,  2.4219,  0.8438,  0.2949, -2.3438, -1.1484, -2.1875,  2.8438,  2.4688, -2.5000, -1.9922, -1.4297,  3.2031, -1.0234, -3.4844],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0297,  0.0141, -0.0061,  ...,  0.0186, -0.0226, -0.0202],
        [-0.0107, -0.0094,  0.0078,  ...,  0.0088, -0.0175, -0.0016],
        [ 0.0022,  0.0114, -0.0023,  ..., -0.0013,  0.0168,  0.0025],
        ...,
        [-0.0255,  0.0064, -0.0094,  ..., -0.0131,  0.0273,  0.0100],
        [-0.0341,  0.0306, -0.0051,  ...,  0.0048,  0.0008, -0.0278],
        [ 0.0024, -0.0113, -0.0405,  ...,  0.0022, -0.0051,  0.0157]], device='cuda:0', requires_grad=True)
Q: tensor([ 3.2969, -2.6875,  0.9766, -0.3848, -0.0342,  1.9375,  1.4375, -3.6875, -1.6406, -1.0781,  0.0170,  1.6562,  1.2109,  1.7656, -2.1875, -2.5000, -3.1875,  2.3906,  1.7891, -2.7031, -1.8672,  3.7812,  2.9219, -2.0000,  2.5000, -3.0156, -0.6953,  1.1250,  1.2422,  0.3574,  0.8242,  1.9531,
        -0.1504,  1.8672, -1.5156,  2.5781,  2.4219, -1.8906, -2.8906, -3.5781,  2.6719, -2.8438, -2.8906,  2.4062, -1.8984, -1.6172, -3.2344,  0.7930,  1.8906, -2.0000, -1.5625,  0.8633,  3.0625,  3.3438,  0.0801,  3.0156, -2.6562, -1.7109,  2.3438,  2.2344,  1.4141, -3.7969,  3.5469,  1.7734],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000, -25.1250, -22.6250, -24.0000, -22.7500, -23.0000, -23.1250, -22.6250, -24.1250, -23.7500, -24.8750, -25.3750, -26.0000, -26.7500, -27.2500],
        [  0.0000, -24.0000, -21.8750, -23.0000, -21.7500, -21.8750, -22.0000, -21.6250, -23.0000, -22.6250, -23.7500, -24.3750, -24.7500, -25.5000, -26.1250],
        [  0.0000, -29.5000, -27.6250, -30.1250, -29.0000, -29.2500, -29.7500, -29.1250, -30.6250, -30.1250, -31.7500, -32.2500, -32.7500, -33.7500, -34.7500],
        [  0.0000, -26.1250, -24.2500, -25.5000, -24.7500, -24.8750, -25.3750, -24.7500, -26.1250, -25.5000, -26.8750, -27.3750, -27.7500, -28.6250, -29.1250],
        [  0.0000, -25.1250, -23.3750, -24.2500, -23.3750, -23.7500, -24.2500, -23.7500, -24.7500, -24.3750, -25.5000, -26.1250, -26.5000, -27.1250, -27.6250],
        [  0.0000, -25.0000, -23.1250, -23.8750, -23.1250, -23.5000, -24.0000, -23.3750, -24.5000, -24.1250, -25.2500, -25.7500, -26.1250, -26.7500, -27.2500],
        [  0.0000, -24.8750, -23.1250, -24.1250, -23.3750, -23.7500, -24.2500, -23.7500, -24.7500, -24.3750, -25.5000, -26.0000, -26.5000, -27.1250, -27.6250],
        [  0.0000, -25.0000, -23.2500, -24.0000, -23.0000, -23.3750, -23.8750, -23.3750, -24.5000, -24.1250, -25.2500, -25.8750, -26.1250, -26.8750, -27.3750],
        [  0.0000, -28.6250, -26.6250, -29.5000, -28.2500, -28.6250, -29.1250, -28.3750, -30.0000, -29.6250, -31.1250, -31.6250, -32.2500, -33.0000, -34.0000],
        [  0.0000, -26.0000, -24.0000, -25.2500, -24.1250, -24.6250, -25.0000, -24.5000, -25.6250, -25.2500, -26.6250, -27.1250, -27.6250, -28.2500, -29.0000],
        [  0.0000, -27.6250, -25.7500, -28.2500, -26.8750, -27.3750, -27.6250, -27.1250, -28.6250, -28.1250, -29.6250, -30.3750, -30.6250, -31.6250, -32.5000],
        [  0.0000, -26.6250, -24.7500, -26.7500, -25.6250, -26.1250, -26.5000, -26.0000, -27.2500, -26.7500, -28.1250, -28.7500, -29.3750, -30.1250, -30.7500],
        [  0.0000, -26.7500, -24.7500, -26.3750, -25.1250, -25.6250, -26.0000, -25.5000, -26.8750, -26.3750, -27.7500, -28.3750, -28.7500, -29.5000, -30.2500],
        [  0.0000, -28.2500, -26.2500, -28.1250, -26.7500, -27.3750, -27.7500, -27.2500, -28.5000, -28.2500, -29.6250, -30.2500, -30.7500, -31.5000, -32.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.4062,     0.5938,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0054,     0.5000,     0.4453,     0.0491,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0077,     0.5273,     0.1396,     0.0038,     0.3242,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0008,     0.6133,     0.1011,     0.0052,     0.1641,     0.1162,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1543,     0.0165,     0.0003,     0.1177,     0.0354,     0.6758,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0021,     0.1328,     0.0228,     0.0002,     0.0292,     0.0371,     0.7031,     0.0713,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1177,     0.0308,     0.0005,     0.0447,     0.0608,     0.4355,     0.0591,     0.2500,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0006,     0.0574,     0.0344,     0.0032,     0.0991,     0.0442,     0.3477,     0.1260,     0.2793,     0.0090,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0830,     0.0116,     0.0002,     0.0204,     0.0126,     0.2119,     0.0270,     0.3711,     0.0019,     0.2617,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.0254,     0.0192,     0.0021,     0.0967,     0.0347,     0.2256,     0.0977,     0.2910,     0.0052,     0.1953,     0.0079,     0.0000,     0.0000,     0.0000],
        [    0.0050,     0.0737,     0.0128,     0.0001,     0.0159,     0.0234,     0.4258,     0.0491,     0.2471,     0.0009,     0.1270,     0.0003,     0.0189,     0.0000,     0.0000],
        [    0.0000,     0.0579,     0.0149,     0.0002,     0.0215,     0.0303,     0.2334,     0.0293,     0.1348,     0.0034,     0.1196,     0.0013,     0.0200,     0.3340,     0.0000],
        [    0.0001,     0.0320,     0.0125,     0.0003,     0.0369,     0.0125,     0.1338,     0.0211,     0.1553,     0.0012,     0.0625,     0.0011,     0.0233,     0.4082,     0.0986]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0133,  0.0155,  0.0403,  ...,  0.0088, -0.0111,  0.0011],
        [-0.0032,  0.0053, -0.0049,  ..., -0.0100,  0.0052,  0.0663],
        [ 0.0020,  0.0141, -0.0147,  ..., -0.0113,  0.0253,  0.0052],
        ...,
        [ 0.0220,  0.0257,  0.0131,  ..., -0.0426,  0.0240, -0.0219],
        [ 0.0190,  0.0081, -0.0704,  ...,  0.0236, -0.0120,  0.1102],
        [ 0.0332,  0.0191,  0.0262,  ..., -0.0340,  0.0178, -0.0249]], device='cuda:0', requires_grad=True)
K: tensor([-3.6406, -1.8906, -5.9375,  1.3516, -0.9844,  1.5781, -4.5312,  4.5312,  1.2500, -2.6406,  4.0312, -4.9375, -4.1562, -0.0349,  3.5312,  3.9844,  1.2031, -1.4453, -0.4707, -3.7812, -3.7031, -2.2500,  0.3066, -1.2266, -4.2500, -1.5000, -0.6016, -3.6250,  3.1406, -1.5000,  1.9766, -1.7188,
        -3.0625, -5.0938, -1.3125,  3.8594,  3.7969,  1.0938,  3.6719, -3.9219, -0.3711, -3.7969,  0.4082, -3.8125,  0.6953, -2.4062,  2.0781, -4.3750,  3.4531,  0.2344, -0.6406, -5.8750, -4.7812, -5.6562,  1.0938, -1.5078, -1.4141,  2.9219, -1.8750, -2.2969, -0.2910, -3.1719,  1.3828, -5.6250],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0158, -0.0280,  0.0099,  ...,  0.0036,  0.0268, -0.0070],
        [-0.0067, -0.0093, -0.0153,  ..., -0.0537, -0.0208, -0.0252],
        [-0.0151, -0.0073,  0.0173,  ..., -0.0136, -0.0197, -0.0287],
        ...,
        [ 0.0317, -0.0182,  0.0244,  ..., -0.0155, -0.0303,  0.0057],
        [ 0.0208,  0.0116, -0.0161,  ..., -0.0190, -0.0265, -0.0310],
        [ 0.0257,  0.0066, -0.0424,  ...,  0.0350,  0.0485, -0.0091]], device='cuda:0', requires_grad=True)
Q: tensor([-2.2656, -0.5195, -0.4570,  0.7891,  1.1797, -2.6094, -1.3516,  0.4395,  3.6094,  0.4668,  2.5469,  0.4688, -0.7773, -1.5000,  2.2969, -0.5039,  1.0781, -0.6719, -0.8750,  1.7344, -1.5234,  0.2334, -2.1719, -2.3906,  1.0234, -0.5625, -0.1133, -1.2500, -1.9922,  0.4922,  1.3984,  0.0107,
         1.2188, -1.3516, -0.8906,  2.1719, -0.2695, -1.9531, -0.1191,  1.2578, -0.0320,  1.8281,  0.5352,  0.3223, -2.3438, -0.1060,  1.3359, -0.1357, -1.4922, -2.5938,  0.3945, -1.3516, -1.2344,  0.0498, -1.1875, -0.3320, -0.1729,  0.1279, -2.0625,  0.0272,  1.0625,  0.0510, -0.5859, -1.4531],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, 10.8125, 10.3750,  8.7500, 12.5000, 11.3750, 12.4375, 11.2500, 13.0000,  9.6875, 13.0000, 10.5000, 12.8125, 14.2500, 14.3125],
        [ 0.0000,  9.3750,  9.7500,  9.2500, 12.1875, 10.8125, 10.9375, 10.3750, 11.4375,  9.7500, 11.6875, 11.1875, 12.5625, 12.7500, 13.5625],
        [ 0.0000,  4.5312,  4.4062,  2.2031,  6.2500,  4.7812,  6.4062,  5.2500,  6.2812,  2.3438,  5.6875,  2.7812,  5.2188,  6.7500,  7.0625],
        [ 0.0000,  4.2188,  2.8906, -0.7109,  3.7344,  3.3906,  5.4062,  3.7188,  5.0000,  1.0312,  4.4688,  0.4395,  3.2812,  5.5938,  4.7188],
        [ 0.0000,  6.6875,  4.8750,  1.9141,  5.3438,  5.0000,  7.8125,  5.9375,  7.3438,  2.6719,  6.5625,  2.2812,  4.7188,  7.8750,  6.7500],
        [ 0.0000, 12.9375, 10.6875,  6.7500, 12.6875, 11.5000, 14.4375, 12.3125, 14.3750,  7.2812, 13.1875,  7.0312, 10.8125, 14.5625, 14.6250],
        [ 0.0000,  4.1562,  2.3906, -2.2969,  2.6406,  2.8750,  5.8125,  3.5312,  5.5312, -0.4082,  4.7500, -1.4141,  2.4844,  6.3125,  5.4688],
        [ 0.0000,  7.8750,  6.5312,  2.3906,  6.9062,  7.2188,  9.1875,  7.1875,  8.6250,  5.1250,  8.4375,  4.1250,  6.7188,  9.3750,  8.7500],
        [ 0.0000,  4.4688,  3.9688,  1.6016,  5.0312,  4.2188,  6.2812,  5.2812,  6.0625,  2.6406,  5.6875,  2.9688,  5.3750,  7.0938,  6.7812],
        [ 0.0000,  8.3125,  6.3438,  2.4375,  6.9062,  6.4375,  9.2500,  7.1875,  9.8125,  4.5312,  9.4375,  3.8125,  6.6562, 10.5625,  9.3125],
        [ 0.0000,  5.2188,  4.9375,  2.7188,  6.5625,  5.5312,  7.4062,  6.5625,  7.6562,  3.6562,  7.2812,  4.0625,  6.6875,  8.6250,  8.5000],
        [ 0.0000,  2.6875,  0.9375, -3.5781,  1.1562,  1.5469,  4.4375,  2.2812,  3.9062, -1.7656,  3.2344, -2.6562,  1.3359,  4.9062,  3.9844],
        [ 0.0000,  7.6562,  6.3125,  2.0469,  6.6562,  7.0000,  9.0625,  6.9688,  8.5000,  4.8125,  8.3750,  3.8594,  6.5938,  9.4375,  8.8125],
        [ 0.0000,  5.5000,  4.5625,  0.9883,  5.6562,  4.5625,  6.9375,  5.0938,  7.0938,  2.2188,  6.1875,  2.1094,  5.1875,  8.0625,  6.6250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3583],
        [0.2362],
        [0.2391],
        [0.2557],
        [0.2075],
        [0.1566],
        [0.1353],
        [0.1470],
        [0.1322],
        [0.1092],
        [0.1042],
        [0.1072],
        [0.1011],
        [0.0775]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.0879 the:0.0732,:0.1172 yellow:0.0977atoes:0.2871,:0.4316 the:0.0486
:0.0986)


------
		( the:0.0732,:0.1172 yellow:0.0977atoes:0.2871,:0.4316 the:0.0486
:0.0986The:0.0298)
The most common name for the
The name is the name of the

@ 3050 train 4.8796 , allloss: 4.8798, dt: 1733.50ms, fracRes: 0.7032, norm(attn): 0.2031, norm(output): 0.9354, norm(x): 0.7534, norm(y): 1.0069, norm:0.9222, tok/sec: 75611.06, flops:79.36, batch-reuse:1
@ 3051 train 4.7551 , allloss: 4.7553, dt: 1344.24ms, fracRes: 0.7030, norm(attn): 0.2031, norm(output): 0.9355, norm(x): 0.7539, norm(y): 1.0070, norm:0.7428, tok/sec: 97506.06, flops:102.35, batch-reuse:1
@ 3052 train 4.7447 , allloss: 4.7449, dt: 1309.85ms, fracRes: 0.7031, norm(attn): 0.2041, norm(output): 0.9356, norm(x): 0.7538, norm(y): 1.0069, norm:0.7740, tok/sec: 100066.35, flops:105.03, batch-reuse:1
@ 3053 train 4.7890 , allloss: 4.7893, dt: 1305.31ms, fracRes: 0.7034, norm(attn): 0.2031, norm(output): 0.9354, norm(x): 0.7536, norm(y): 1.0068, norm:0.7124, tok/sec: 100414.37, flops:105.40, batch-reuse:1
@ 3054 train 4.7867 , allloss: 4.7869, dt: 1312.49ms, fracRes: 0.7034, norm(attn): 0.2002, norm(output): 0.9355, norm(x): 0.7541, norm(y): 1.0069, norm:0.7373, tok/sec: 99864.83, flops:104.82, batch-reuse:1
@ 3055 train 4.7248 , allloss: 4.7250, dt: 1321.73ms, fracRes: 0.7033, norm(attn): 0.2002, norm(output): 0.9356, norm(x): 0.7548, norm(y): 1.0069, norm:0.7207, tok/sec: 99166.70, flops:104.09, batch-reuse:1
@ 3056 train 4.8347 , allloss: 4.8349, dt: 1343.05ms, fracRes: 0.7033, norm(attn): 0.2012, norm(output): 0.9355, norm(x): 0.7549, norm(y): 1.0071, norm:0.7095, tok/sec: 97593.05, flops:102.44, batch-reuse:1
@ 3057 train 4.8176 , allloss: 4.8179, dt: 1341.07ms, fracRes: 0.7033, norm(attn): 0.1992, norm(output): 0.9355, norm(x): 0.7553, norm(y): 1.0071, norm:0.7484, tok/sec: 97736.85, flops:102.59, batch-reuse:1
@ 3058 train 4.7663 , allloss: 4.7665, dt: 1342.77ms, fracRes: 0.7032, norm(attn): 0.2002, norm(output): 0.9356, norm(x): 0.7554, norm(y): 1.0068, norm:0.6447, tok/sec: 97613.17, flops:102.46, batch-reuse:1
@ 3059 train 4.7338 , allloss: 4.7340, dt: 1313.41ms, fracRes: 0.7032, norm(attn): 0.2021, norm(output): 0.9357, norm(x): 0.7553, norm(y): 1.0067, norm:0.6170, tok/sec: 99795.01, flops:104.75, batch-reuse:1
@ 3060 train 4.9120 , allloss: 4.9123, dt: 1325.10ms, fracRes: 0.7032, norm(attn): 0.2021, norm(output): 0.9356, norm(x): 0.7546, norm(y): 1.0070, norm:0.6609, tok/sec: 98914.52, flops:103.82, batch-reuse:1
@ 3061 train 4.7121 , allloss: 4.7123, dt: 1338.71ms, fracRes: 0.7036, norm(attn): 0.2041, norm(output): 0.9353, norm(x): 0.7531, norm(y): 1.0068, norm:1.7900, tok/sec: 97909.28, flops:102.77, batch-reuse:1
@ 3062 train 4.7373 , allloss: 4.7375, dt: 1313.05ms, fracRes: 0.7035, norm(attn): 0.2031, norm(output): 0.9354, norm(x): 0.7536, norm(y): 1.0068, norm:0.8337, tok/sec: 99822.20, flops:104.78, batch-reuse:1
@ 3063 train 4.6979 , allloss: 4.6979, dt: 1325.19ms, fracRes: 0.7032, norm(attn): 0.2031, norm(output): 0.9355, norm(x): 0.7545, norm(y): 1.0068, norm:0.7112, tok/sec: 98908.15, flops:103.82, batch-reuse:1
@ 3064 train 4.7130 , allloss: 4.7132, dt: 1307.40ms, fracRes: 0.7029, norm(attn): 0.2041, norm(output): 0.9355, norm(x): 0.7554, norm(y): 1.0069, norm:0.8757, tok/sec: 100254.05, flops:105.23, batch-reuse:1
@ 3065 train 4.7869 , allloss: 4.7871, dt: 1337.72ms, fracRes: 0.7031, norm(attn): 0.2041, norm(output): 0.9356, norm(x): 0.7546, norm(y): 1.0068, norm:0.7031, tok/sec: 97981.54, flops:102.84, batch-reuse:1
@ 3066 train 4.8119 , allloss: 4.8120, dt: 1291.85ms, fracRes: 0.7035, norm(attn): 0.2031, norm(output): 0.9355, norm(x): 0.7536, norm(y): 1.0064, norm:0.6841, tok/sec: 101460.80, flops:106.50, batch-reuse:1
@ 3067 train 4.8339 , allloss: 4.8339, dt: 1303.27ms, fracRes: 0.7035, norm(attn): 0.2021, norm(output): 0.9355, norm(x): 0.7530, norm(y): 1.0066, norm:0.6610, tok/sec: 100571.83, flops:105.56, batch-reuse:1
@ 3068 train 4.7358 , allloss: 4.7360, dt: 1279.86ms, fracRes: 0.7035, norm(attn): 0.2021, norm(output): 0.9353, norm(x): 0.7536, norm(y): 1.0069, norm:0.6494, tok/sec: 102410.86, flops:107.49, batch-reuse:1
@ 3069 train 4.7645 , allloss: 4.7646, dt: 1298.07ms, fracRes: 0.7031, norm(attn): 0.2021, norm(output): 0.9355, norm(x): 0.7546, norm(y): 1.0071, norm:0.6917, tok/sec: 100974.81, flops:105.99, batch-reuse:1
@ 3070 train 4.7410 , allloss: 4.7411, dt: 1296.13ms, fracRes: 0.7028, norm(attn): 0.2031, norm(output): 0.9353, norm(x): 0.7549, norm(y): 1.0073, norm:0.7340, tok/sec: 101125.27, flops:106.14, batch-reuse:1
@ 3071 train 4.7584 , allloss: 4.7584, dt: 1317.12ms, fracRes: 0.7026, norm(attn): 0.2031, norm(output): 0.9352, norm(x): 0.7548, norm(y): 1.0073, norm:0.7027, tok/sec: 99514.16, flops:104.45, batch-reuse:1
@ 3072 train 4.7482 , allloss: 4.7483, dt: 1301.24ms, fracRes: 0.7027, norm(attn): 0.2031, norm(output): 0.9354, norm(x): 0.7541, norm(y): 1.0071, norm:0.6796, tok/sec: 100728.67, flops:105.73, batch-reuse:1
@ 3073 train 4.6699 , allloss: 4.6701, dt: 1279.81ms, fracRes: 0.7028, norm(attn): 0.2031, norm(output): 0.9353, norm(x): 0.7540, norm(y): 1.0071, norm:0.7011, tok/sec: 102414.92, flops:107.50, batch-reuse:1
@ 3074 train 4.6938 , allloss: 4.6940, dt: 1301.43ms, fracRes: 0.7031, norm(attn): 0.2031, norm(output): 0.9354, norm(x): 0.7547, norm(y): 1.0068, norm:0.5920, tok/sec: 100713.81, flops:105.71, batch-reuse:1
@ 3075 train 4.7279 , allloss: 4.7280, dt: 1317.00ms, fracRes: 0.7032, norm(attn): 0.2031, norm(output): 0.9354, norm(x): 0.7543, norm(y): 1.0068, norm:0.6300, tok/sec: 99522.86, flops:104.46, batch-reuse:1
@ 3076 train 4.7182 , allloss: 4.7183, dt: 1341.95ms, fracRes: 0.7031, norm(attn): 0.2021, norm(output): 0.9356, norm(x): 0.7546, norm(y): 1.0069, norm:0.9107, tok/sec: 97672.85, flops:102.52, batch-reuse:1
@ 3077 train 4.6808 , allloss: 4.6811, dt: 1341.99ms, fracRes: 0.7032, norm(attn): 0.2002, norm(output): 0.9355, norm(x): 0.7547, norm(y): 1.0067, norm:0.6470, tok/sec: 97670.03, flops:102.52, batch-reuse:1
@ 3078 train 4.6692 , allloss: 4.6693, dt: 1314.56ms, fracRes: 0.7035, norm(attn): 0.2002, norm(output): 0.9354, norm(x): 0.7540, norm(y): 1.0066, norm:0.6429, tok/sec: 99708.04, flops:104.66, batch-reuse:1
@ 3079 train 4.6334 , allloss: 4.6334, dt: 1295.61ms, fracRes: 0.7034, norm(attn): 0.2021, norm(output): 0.9355, norm(x): 0.7542, norm(y): 1.0067, norm:0.5912, tok/sec: 101166.40, flops:106.19, batch-reuse:1
@ 3080 train 4.7856 , allloss: 4.7858, dt: 1313.07ms, fracRes: 0.7034, norm(attn): 0.2021, norm(output): 0.9354, norm(x): 0.7533, norm(y): 1.0068, norm:0.7502, tok/sec: 99821.30, flops:104.78, batch-reuse:1
@ 3081 train 4.7446 , allloss: 4.7446, dt: 1280.61ms, fracRes: 0.7035, norm(attn): 0.2021, norm(output): 0.9355, norm(x): 0.7537, norm(y): 1.0066, norm:0.7864, tok/sec: 102350.84, flops:107.43, batch-reuse:1
@ 3082 train 4.7808 , allloss: 4.7810, dt: 1300.98ms, fracRes: 0.7034, norm(attn): 0.2021, norm(output): 0.9355, norm(x): 0.7544, norm(y): 1.0064, norm:0.6665, tok/sec: 100748.99, flops:105.75, batch-reuse:1
@ 3083 train 4.6510 , allloss: 4.6511, dt: 1317.38ms, fracRes: 0.7034, norm(attn): 0.2021, norm(output): 0.9354, norm(x): 0.7542, norm(y): 1.0067, norm:0.6314, tok/sec: 99494.36, flops:104.43, batch-reuse:1
@ 3084 train 4.6492 , allloss: 4.6493, dt: 1305.01ms, fracRes: 0.7032, norm(attn): 0.2021, norm(output): 0.9355, norm(x): 0.7545, norm(y): 1.0069, norm:0.8069, tok/sec: 100437.56, flops:105.42, batch-reuse:1
@ 3085 train 4.7998 , allloss: 4.8000, dt: 1331.99ms, fracRes: 0.7032, norm(attn): 0.1982, norm(output): 0.9354, norm(x): 0.7545, norm(y): 1.0069, norm:0.6537, tok/sec: 98402.98, flops:103.29, batch-reuse:1
@ 3086 train 4.6626 , allloss: 4.6627, dt: 1308.44ms, fracRes: 0.7031, norm(attn): 0.1982, norm(output): 0.9354, norm(x): 0.7542, norm(y): 1.0071, norm:0.8069, tok/sec: 100173.93, flops:105.15, batch-reuse:1
@ 3087 train 4.7156 , allloss: 4.7156, dt: 1312.37ms, fracRes: 0.7032, norm(attn): 0.2002, norm(output): 0.9354, norm(x): 0.7539, norm(y): 1.0071, norm:0.8766, tok/sec: 99874.32, flops:104.83, batch-reuse:1
@ 3088 train 4.7049 , allloss: 4.7050, dt: 1281.24ms, fracRes: 0.7030, norm(attn): 0.2021, norm(output): 0.9355, norm(x): 0.7543, norm(y): 1.0070, norm:0.6638, tok/sec: 102300.61, flops:107.38, batch-reuse:1
@ 3089 train 4.7077 , allloss: 4.7080, dt: 1299.03ms, fracRes: 0.7030, norm(attn): 0.2021, norm(output): 0.9354, norm(x): 0.7541, norm(y): 1.0069, norm:0.7966, tok/sec: 100899.71, flops:105.91, batch-reuse:1
@ 3090 train 4.6418 , allloss: 4.6419, dt: 1305.21ms, fracRes: 0.7029, norm(attn): 0.2012, norm(output): 0.9355, norm(x): 0.7547, norm(y): 1.0070, norm:0.7126, tok/sec: 100422.16, flops:105.41, batch-reuse:1
@ 3091 train 4.8680 , allloss: 4.8683, dt: 1287.93ms, fracRes: 0.7033, norm(attn): 0.2021, norm(output): 0.9356, norm(x): 0.7539, norm(y): 1.0068, norm:0.6149, tok/sec: 101769.49, flops:106.82, batch-reuse:1
@ 3092 train 4.7005 , allloss: 4.7006, dt: 1309.18ms, fracRes: 0.7034, norm(attn): 0.2031, norm(output): 0.9355, norm(x): 0.7534, norm(y): 1.0067, norm:0.6984, tok/sec: 100117.76, flops:105.09, batch-reuse:1
@ 3093 train 4.7171 , allloss: 4.7174, dt: 1284.93ms, fracRes: 0.7032, norm(attn): 0.2041, norm(output): 0.9355, norm(x): 0.7538, norm(y): 1.0067, norm:0.8260, tok/sec: 102007.45, flops:107.07, batch-reuse:1
@ 3094 train 4.6947 , allloss: 4.6950, dt: 1303.24ms, fracRes: 0.7033, norm(attn): 0.2031, norm(output): 0.9356, norm(x): 0.7537, norm(y): 1.0066, norm:0.6554, tok/sec: 100573.75, flops:105.57, batch-reuse:1
@ 3095 train 4.6981 , allloss: 4.6983, dt: 1305.22ms, fracRes: 0.7034, norm(attn): 0.2031, norm(output): 0.9355, norm(x): 0.7528, norm(y): 1.0066, norm:0.7446, tok/sec: 100421.21, flops:105.41, batch-reuse:1
@ 3096 train 4.8260 , allloss: 4.8261, dt: 1302.40ms, fracRes: 0.7032, norm(attn): 0.2021, norm(output): 0.9354, norm(x): 0.7527, norm(y): 1.0069, norm:0.6915, tok/sec: 100638.68, flops:105.63, batch-reuse:1
@ 3097 train 4.7376 , allloss: 4.7377, dt: 1281.81ms, fracRes: 0.7032, norm(attn): 0.2021, norm(output): 0.9354, norm(x): 0.7534, norm(y): 1.0068, norm:0.6627, tok/sec: 102255.10, flops:107.33, batch-reuse:1
@ 3098 train 4.6821 , allloss: 4.6822, dt: 1320.30ms, fracRes: 0.7031, norm(attn): 0.2012, norm(output): 0.9355, norm(x): 0.7541, norm(y): 1.0068, norm:0.7319, tok/sec: 99274.24, flops:104.20, batch-reuse:1
@ 3099 train 4.7363 , allloss: 4.7368, dt: 1282.04ms, fracRes: 0.7030, norm(attn): 0.2021, norm(output): 0.9355, norm(x): 0.7544, norm(y): 1.0069, norm:0.8148, tok/sec: 102236.82, flops:107.31, batch-reuse:1
@ 3100 train 4.6328 , allloss: 4.6329, dt: 1312.30ms, fracRes: 0.7030, norm(attn): 0.2012, norm(output): 0.9355, norm(x): 0.7548, norm(y): 1.0069, norm:0.8190, tok/sec: 99879.93, flops:104.84, batch-reuse:1
@ 3101 train 4.6933 , allloss: 4.6934, dt: 1307.71ms, fracRes: 0.7031, norm(attn): 0.1992, norm(output): 0.9355, norm(x): 0.7548, norm(y): 1.0069, norm:0.6353, tok/sec: 100229.79, flops:105.20, batch-reuse:1
@ 3102 train 4.7293 , allloss: 4.7294, dt: 1278.38ms, fracRes: 0.7032, norm(attn): 0.1982, norm(output): 0.9355, norm(x): 0.7547, norm(y): 1.0071, norm:0.7159, tok/sec: 102529.68, flops:107.62, batch-reuse:1
@ 3103 train 4.7178 , allloss: 4.7178, dt: 1277.28ms, fracRes: 0.7032, norm(attn): 0.2002, norm(output): 0.9355, norm(x): 0.7549, norm(y): 1.0071, norm:0.6706, tok/sec: 102617.71, flops:107.71, batch-reuse:1
@ 3104 train 4.5957 , allloss: 4.5958, dt: 1280.09ms, fracRes: 0.7034, norm(attn): 0.2012, norm(output): 0.9356, norm(x): 0.7550, norm(y): 1.0067, norm:0.6257, tok/sec: 102393.06, flops:107.48, batch-reuse:1
@ 3105 train 4.8298 , allloss: 4.8299, dt: 1300.48ms, fracRes: 0.7036, norm(attn): 0.2021, norm(output): 0.9357, norm(x): 0.7557, norm(y): 1.0064, norm:0.8112, tok/sec: 100787.35, flops:105.79, batch-reuse:1
@ 3106 train 4.6273 , allloss: 4.6274, dt: 1296.77ms, fracRes: 0.7035, norm(attn): 0.2021, norm(output): 0.9356, norm(x): 0.7550, norm(y): 1.0067, norm:0.6550, tok/sec: 101075.44, flops:106.09, batch-reuse:1
@ 3107 train 4.6315 , allloss: 4.6315, dt: 1281.60ms, fracRes: 0.7034, norm(attn): 0.2012, norm(output): 0.9356, norm(x): 0.7544, norm(y): 1.0068, norm:0.6843, tok/sec: 102272.12, flops:107.35, batch-reuse:1
@ 3108 train 4.6781 , allloss: 4.6783, dt: 1296.97ms, fracRes: 0.7034, norm(attn): 0.2021, norm(output): 0.9355, norm(x): 0.7542, norm(y): 1.0070, norm:0.7152, tok/sec: 101060.17, flops:106.08, batch-reuse:1
@ 3109 train 4.6347 , allloss: 4.6347, dt: 1290.17ms, fracRes: 0.7035, norm(attn): 0.2021, norm(output): 0.9354, norm(x): 0.7538, norm(y): 1.0069, norm:0.7593, tok/sec: 101592.80, flops:106.64, batch-reuse:1
@ 3110 train 4.6257 , allloss: 4.6258, dt: 1304.93ms, fracRes: 0.7033, norm(attn): 0.2031, norm(output): 0.9354, norm(x): 0.7539, norm(y): 1.0069, norm:0.7117, tok/sec: 100443.41, flops:105.43, batch-reuse:1
@ 3111 train 4.7646 , allloss: 4.7646, dt: 1314.07ms, fracRes: 0.7032, norm(attn): 0.2021, norm(output): 0.9356, norm(x): 0.7543, norm(y): 1.0069, norm:0.7142, tok/sec: 99745.16, flops:104.70, batch-reuse:1
@ 3112 train 4.5894 , allloss: 4.5895, dt: 1282.28ms, fracRes: 0.7032, norm(attn): 0.2012, norm(output): 0.9355, norm(x): 0.7539, norm(y): 1.0070, norm:0.7880, tok/sec: 102218.12, flops:107.29, batch-reuse:1
@ 3113 train 4.6439 , allloss: 4.6440, dt: 1285.21ms, fracRes: 0.7033, norm(attn): 0.2002, norm(output): 0.9355, norm(x): 0.7531, norm(y): 1.0069, norm:0.7577, tok/sec: 101985.09, flops:107.05, batch-reuse:1
@ 3114 train 4.6750 , allloss: 4.6751, dt: 1304.55ms, fracRes: 0.7033, norm(attn): 0.2002, norm(output): 0.9355, norm(x): 0.7541, norm(y): 1.0068, norm:0.5975, tok/sec: 100472.87, flops:105.46, batch-reuse:1
@ 3115 train 4.6403 , allloss: 4.6405, dt: 1312.47ms, fracRes: 0.7032, norm(attn): 0.2012, norm(output): 0.9356, norm(x): 0.7552, norm(y): 1.0067, norm:0.8045, tok/sec: 99866.61, flops:104.82, batch-reuse:1
@ 3116 train 4.6155 , allloss: 4.6156, dt: 1312.36ms, fracRes: 0.7033, norm(attn): 0.2031, norm(output): 0.9355, norm(x): 0.7550, norm(y): 1.0066, norm:0.8904, tok/sec: 99875.10, flops:104.83, batch-reuse:1
@ 3117 train 4.6342 , allloss: 4.6344, dt: 1312.57ms, fracRes: 0.7035, norm(attn): 0.2021, norm(output): 0.9355, norm(x): 0.7543, norm(y): 1.0067, norm:0.7958, tok/sec: 99859.19, flops:104.82, batch-reuse:1
@ 3118 train 4.5609 , allloss: 4.5611, dt: 1333.52ms, fracRes: 0.7034, norm(attn): 0.2021, norm(output): 0.9356, norm(x): 0.7540, norm(y): 1.0071, norm:0.7193, tok/sec: 98289.95, flops:103.17, batch-reuse:1
@ 3119 train 4.8939 , allloss: 4.8940, dt: 1341.09ms, fracRes: 0.7038, norm(attn): 0.2021, norm(output): 0.9358, norm(x): 0.7536, norm(y): 1.0068, norm:0.8894, tok/sec: 97735.51, flops:102.59, batch-reuse:1
@ 3120 train 4.6563 , allloss: 4.6564, dt: 1312.07ms, fracRes: 0.7036, norm(attn): 0.2012, norm(output): 0.9356, norm(x): 0.7546, norm(y): 1.0069, norm:1.0633, tok/sec: 99897.19, flops:104.86, batch-reuse:1
@ 3121 train 4.4942 , allloss: 4.4942, dt: 1303.43ms, fracRes: 0.7037, norm(attn): 0.2031, norm(output): 0.9355, norm(x): 0.7542, norm(y): 1.0066, norm:0.9498, tok/sec: 100559.21, flops:105.55, batch-reuse:1
@ 3122 train 4.5759 , allloss: 4.5760, dt: 1281.97ms, fracRes: 0.7038, norm(attn): 0.2021, norm(output): 0.9353, norm(x): 0.7540, norm(y): 1.0064, norm:0.8613, tok/sec: 102243.04, flops:107.32, batch-reuse:1
@ 3123 train 4.8287 , allloss: 4.8289, dt: 1302.25ms, fracRes: 0.7035, norm(attn): 0.2021, norm(output): 0.9353, norm(x): 0.7546, norm(y): 1.0068, norm:0.9211, tok/sec: 100650.53, flops:105.65, batch-reuse:1
@ 3124 train 4.7197 , allloss: 4.7198, dt: 1314.47ms, fracRes: 0.7029, norm(attn): 0.2041, norm(output): 0.9357, norm(x): 0.7561, norm(y): 1.0070, norm:0.9800, tok/sec: 99714.58, flops:104.66, batch-reuse:1
@ 3125 train 4.6727 , allloss: 4.6729, dt: 1340.32ms, fracRes: 0.7029, norm(attn): 0.2031, norm(output): 0.9356, norm(x): 0.7563, norm(y): 1.0068, norm:0.9424, tok/sec: 97791.76, flops:102.65, batch-reuse:1
@ 3126 train 4.5363 , allloss: 4.5367, dt: 1333.50ms, fracRes: 0.7032, norm(attn): 0.2041, norm(output): 0.9355, norm(x): 0.7552, norm(y): 1.0064, norm:1.0004, tok/sec: 98291.58, flops:103.17, batch-reuse:1
@ 3127 train 4.6301 , allloss: 4.6302, dt: 1328.17ms, fracRes: 0.7036, norm(attn): 0.2041, norm(output): 0.9355, norm(x): 0.7537, norm(y): 1.0064, norm:0.7977, tok/sec: 98685.93, flops:103.58, batch-reuse:1
@ 3128 train 4.6626 , allloss: 4.6627, dt: 1297.98ms, fracRes: 0.7036, norm(attn): 0.2031, norm(output): 0.9356, norm(x): 0.7533, norm(y): 1.0068, norm:0.7988, tok/sec: 100981.76, flops:105.99, batch-reuse:1
@ 3129 train 4.5137 , allloss: 4.5138, dt: 1308.40ms, fracRes: 0.7036, norm(attn): 0.2031, norm(output): 0.9355, norm(x): 0.7538, norm(y): 1.0069, norm:0.7902, tok/sec: 100176.99, flops:105.15, batch-reuse:1
@ 3130 train 4.6208 , allloss: 4.6209, dt: 1282.16ms, fracRes: 0.7039, norm(attn): 0.2031, norm(output): 0.9354, norm(x): 0.7533, norm(y): 1.0065, norm:0.6854, tok/sec: 102227.60, flops:107.30, batch-reuse:1
@ 3131 train 4.4857 , allloss: 4.4858, dt: 1302.79ms, fracRes: 0.7038, norm(attn): 0.2041, norm(output): 0.9356, norm(x): 0.7539, norm(y): 1.0063, norm:0.6943, tok/sec: 100608.42, flops:105.60, batch-reuse:1
@ 3132 train 4.5480 , allloss: 4.5480, dt: 1295.39ms, fracRes: 0.7035, norm(attn): 0.2031, norm(output): 0.9358, norm(x): 0.7544, norm(y): 1.0064, norm:0.5642, tok/sec: 101183.34, flops:106.21, batch-reuse:1
@ 3133 train 4.5853 , allloss: 4.5854, dt: 1282.55ms, fracRes: 0.7032, norm(attn): 0.2041, norm(output): 0.9356, norm(x): 0.7544, norm(y): 1.0068, norm:0.6983, tok/sec: 102196.45, flops:107.27, batch-reuse:1
@ 3134 train 4.5639 , allloss: 4.5640, dt: 1297.80ms, fracRes: 0.7030, norm(attn): 0.2031, norm(output): 0.9355, norm(x): 0.7545, norm(y): 1.0069, norm:0.6041, tok/sec: 100995.90, flops:106.01, batch-reuse:1
@ 3135 train 4.5601 , allloss: 4.5603, dt: 1301.09ms, fracRes: 0.7031, norm(attn): 0.2002, norm(output): 0.9354, norm(x): 0.7539, norm(y): 1.0068, norm:0.6259, tok/sec: 100740.09, flops:105.74, batch-reuse:1
@ 3136 train 4.6030 , allloss: 4.6032, dt: 1298.55ms, fracRes: 0.7034, norm(attn): 0.2012, norm(output): 0.9355, norm(x): 0.7538, norm(y): 1.0065, norm:0.6791, tok/sec: 100936.99, flops:105.95, batch-reuse:1
@ 3137 train 4.6048 , allloss: 4.6049, dt: 1286.09ms, fracRes: 0.7034, norm(attn): 0.2012, norm(output): 0.9355, norm(x): 0.7542, norm(y): 1.0065, norm:0.6293, tok/sec: 101914.89, flops:106.97, batch-reuse:1
@ 3138 train 4.6563 , allloss: 4.6564, dt: 1300.13ms, fracRes: 0.7035, norm(attn): 0.2012, norm(output): 0.9356, norm(x): 0.7541, norm(y): 1.0064, norm:0.6326, tok/sec: 100814.39, flops:105.82, batch-reuse:1
@ 3139 train 4.5658 , allloss: 4.5659, dt: 1298.13ms, fracRes: 0.7035, norm(attn): 0.2031, norm(output): 0.9356, norm(x): 0.7548, norm(y): 1.0066, norm:0.5845, tok/sec: 100969.67, flops:105.98, batch-reuse:1
@ 3140 train 4.6370 , allloss: 4.6371, dt: 1297.45ms, fracRes: 0.7035, norm(attn): 0.2021, norm(output): 0.9356, norm(x): 0.7556, norm(y): 1.0066, norm:0.6748, tok/sec: 101022.66, flops:106.04, batch-reuse:1
@ 3141 train 4.6197 , allloss: 4.6198, dt: 1315.23ms, fracRes: 0.7036, norm(attn): 0.2021, norm(output): 0.9357, norm(x): 0.7555, norm(y): 1.0064, norm:0.5472, tok/sec: 99657.26, flops:104.60, batch-reuse:1
@ 3142 train 4.5356 , allloss: 4.5356, dt: 1322.91ms, fracRes: 0.7035, norm(attn): 0.2031, norm(output): 0.9357, norm(x): 0.7553, norm(y): 1.0064, norm:0.6216, tok/sec: 99078.65, flops:104.00, batch-reuse:1
@ 3143 train 4.9098 , allloss: 4.9099, dt: 1312.87ms, fracRes: 0.7037, norm(attn): 0.1982, norm(output): 0.9358, norm(x): 0.7554, norm(y): 1.0063, norm:0.9676, tok/sec: 99836.18, flops:104.79, batch-reuse:1
@ 3144 train 4.6300 , allloss: 4.6301, dt: 1329.98ms, fracRes: 0.7031, norm(attn): 0.2012, norm(output): 0.9358, norm(x): 0.7563, norm(y): 1.0066, norm:0.8672, tok/sec: 98552.06, flops:103.44, batch-reuse:1
@ 3145 train 4.5933 , allloss: 4.5935, dt: 1329.01ms, fracRes: 0.7032, norm(attn): 0.2031, norm(output): 0.9356, norm(x): 0.7557, norm(y): 1.0065, norm:0.7356, tok/sec: 98624.16, flops:103.52, batch-reuse:1
@ 3146 train 4.5473 , allloss: 4.5475, dt: 1318.35ms, fracRes: 0.7034, norm(attn): 0.2031, norm(output): 0.9355, norm(x): 0.7547, norm(y): 1.0065, norm:0.6361, tok/sec: 99421.04, flops:104.36, batch-reuse:1
@ 3147 train 4.5530 , allloss: 4.5531, dt: 1301.38ms, fracRes: 0.7034, norm(attn): 0.2031, norm(output): 0.9354, norm(x): 0.7537, norm(y): 1.0067, norm:0.7998, tok/sec: 100718.07, flops:105.72, batch-reuse:1
@ 3148 train 4.6198 , allloss: 4.6199, dt: 1304.34ms, fracRes: 0.7034, norm(attn): 0.2031, norm(output): 0.9356, norm(x): 0.7536, norm(y): 1.0067, norm:0.6398, tok/sec: 100489.44, flops:105.48, batch-reuse:1
@ 3149 train 4.6557 , allloss: 4.6559, dt: 1294.08ms, fracRes: 0.7030, norm(attn): 0.2031, norm(output): 0.9356, norm(x): 0.7542, norm(y): 1.0068, norm:0.7157, tok/sec: 101286.25, flops:106.31, batch-reuse:1
@ 3150 train 4.6187 , allloss: 4.6188, dt: 1275.93ms, fracRes: 0.7030, norm(attn): 0.2041, norm(output): 0.9357, norm(x): 0.7554, norm(y): 1.0066, norm:0.6538, tok/sec: 102726.63, flops:107.83, batch-reuse:1
@ 3151 train 4.6005 , allloss: 4.6006, dt: 1299.34ms, fracRes: 0.7032, norm(attn): 0.2031, norm(output): 0.9357, norm(x): 0.7556, norm(y): 1.0064, norm:0.6877, tok/sec: 100875.57, flops:105.88, batch-reuse:1
@ 3152 train 4.6053 , allloss: 4.6055, dt: 1291.43ms, fracRes: 0.7035, norm(attn): 0.2021, norm(output): 0.9356, norm(x): 0.7551, norm(y): 1.0063, norm:0.6819, tok/sec: 101493.49, flops:106.53, batch-reuse:1
@ 3153 train 4.5757 , allloss: 4.5757, dt: 1313.06ms, fracRes: 0.7037, norm(attn): 0.2031, norm(output): 0.9357, norm(x): 0.7551, norm(y): 1.0062, norm:0.7280, tok/sec: 99822.04, flops:104.78, batch-reuse:1
@ 3154 train 4.6507 , allloss: 4.6509, dt: 1304.02ms, fracRes: 0.7038, norm(attn): 0.2031, norm(output): 0.9356, norm(x): 0.7549, norm(y): 1.0063, norm:0.5754, tok/sec: 100513.49, flops:105.50, batch-reuse:1
@ 3155 train 4.5160 , allloss: 4.5162, dt: 1286.80ms, fracRes: 0.7035, norm(attn): 0.2031, norm(output): 0.9355, norm(x): 0.7547, norm(y): 1.0065, norm:0.8077, tok/sec: 101858.81, flops:106.91, batch-reuse:1
@ 3156 train 4.5694 , allloss: 4.5695, dt: 1307.60ms, fracRes: 0.7032, norm(attn): 0.2021, norm(output): 0.9356, norm(x): 0.7551, norm(y): 1.0065, norm:0.7319, tok/sec: 100238.27, flops:105.21, batch-reuse:1
@ 3157 train 4.6452 , allloss: 4.6454, dt: 1321.13ms, fracRes: 0.7032, norm(attn): 0.1992, norm(output): 0.9356, norm(x): 0.7548, norm(y): 1.0066, norm:0.6369, tok/sec: 99211.68, flops:104.14, batch-reuse:1
@ 3158 train 4.5830 , allloss: 4.5832, dt: 1318.59ms, fracRes: 0.7032, norm(attn): 0.2002, norm(output): 0.9357, norm(x): 0.7552, norm(y): 1.0067, norm:0.6294, tok/sec: 99402.92, flops:104.34, batch-reuse:1
@ 3159 train 4.5244 , allloss: 4.5247, dt: 1323.09ms, fracRes: 0.7034, norm(attn): 0.2031, norm(output): 0.9356, norm(x): 0.7546, norm(y): 1.0066, norm:0.6655, tok/sec: 99065.12, flops:103.98, batch-reuse:1
@ 3160 train 4.7712 , allloss: 4.7714, dt: 1296.59ms, fracRes: 0.7035, norm(attn): 0.2031, norm(output): 0.9356, norm(x): 0.7546, norm(y): 1.0066, norm:0.6551, tok/sec: 101089.48, flops:106.11, batch-reuse:1
@ 3161 train 4.7564 , allloss: 4.7564, dt: 1317.88ms, fracRes: 0.7033, norm(attn): 0.2031, norm(output): 0.9356, norm(x): 0.7556, norm(y): 1.0067, norm:0.6599, tok/sec: 99456.96, flops:104.39, batch-reuse:1
@ 3162 train 4.6722 , allloss: 4.6723, dt: 1335.28ms, fracRes: 0.7033, norm(attn): 0.2021, norm(output): 0.9358, norm(x): 0.7555, norm(y): 1.0065, norm:0.6352, tok/sec: 98160.69, flops:103.03, batch-reuse:1
@ 3163 train 4.7709 , allloss: 4.7710, dt: 1333.22ms, fracRes: 0.7032, norm(attn): 0.2021, norm(output): 0.9357, norm(x): 0.7554, norm(y): 1.0065, norm:0.6768, tok/sec: 98312.00, flops:103.19, batch-reuse:1
@ 3164 train 4.7440 , allloss: 4.7444, dt: 1269.89ms, fracRes: 0.7031, norm(attn): 0.2031, norm(output): 0.9356, norm(x): 0.7552, norm(y): 1.0066, norm:0.6423, tok/sec: 103215.23, flops:108.34, batch-reuse:1
@ 3165 train 4.7346 , allloss: 4.7351, dt: 1279.06ms, fracRes: 0.7033, norm(attn): 0.2031, norm(output): 0.9356, norm(x): 0.7546, norm(y): 1.0066, norm:0.7091, tok/sec: 102475.04, flops:107.56, batch-reuse:1
@ 3166 train 4.8977 , allloss: 4.8978, dt: 1287.42ms, fracRes: 0.7036, norm(attn): 0.2021, norm(output): 0.9359, norm(x): 0.7538, norm(y): 1.0067, norm:0.8317, tok/sec: 101809.48, flops:106.86, batch-reuse:1
@ 3167 train 4.6697 , allloss: 4.6699, dt: 1305.12ms, fracRes: 0.7035, norm(attn): 0.2021, norm(output): 0.9355, norm(x): 0.7539, norm(y): 1.0068, norm:0.6682, tok/sec: 100428.97, flops:105.41, batch-reuse:1
@ 3168 train 4.7296 , allloss: 4.7297, dt: 1298.20ms, fracRes: 0.7034, norm(attn): 0.2021, norm(output): 0.9356, norm(x): 0.7542, norm(y): 1.0065, norm:0.6276, tok/sec: 100964.20, flops:105.98, batch-reuse:1
@ 3169 train 4.8161 , allloss: 4.8164, dt: 1296.28ms, fracRes: 0.7033, norm(attn): 0.2031, norm(output): 0.9355, norm(x): 0.7547, norm(y): 1.0066, norm:0.7467, tok/sec: 101113.70, flops:106.13, batch-reuse:1
@ 3170 train 4.7317 , allloss: 4.7321, dt: 1282.33ms, fracRes: 0.7032, norm(attn): 0.2031, norm(output): 0.9356, norm(x): 0.7547, norm(y): 1.0066, norm:0.6646, tok/sec: 102213.73, flops:107.29, batch-reuse:1
@ 3171 train 4.7516 , allloss: 4.7519, dt: 1306.19ms, fracRes: 0.7032, norm(attn): 0.2031, norm(output): 0.9356, norm(x): 0.7545, norm(y): 1.0066, norm:0.5948, tok/sec: 100346.55, flops:105.33, batch-reuse:1
@ 3172 train 4.7590 , allloss: 4.7592, dt: 1314.72ms, fracRes: 0.7035, norm(attn): 0.2031, norm(output): 0.9355, norm(x): 0.7538, norm(y): 1.0066, norm:0.6242, tok/sec: 99696.12, flops:104.64, batch-reuse:1
@ 3173 train 4.7520 , allloss: 4.7521, dt: 1305.56ms, fracRes: 0.7035, norm(attn): 0.2031, norm(output): 0.9356, norm(x): 0.7539, norm(y): 1.0065, norm:0.7322, tok/sec: 100395.10, flops:105.38, batch-reuse:1
@ 3174 train 4.7993 , allloss: 4.7995, dt: 1299.30ms, fracRes: 0.7035, norm(attn): 0.2021, norm(output): 0.9357, norm(x): 0.7547, norm(y): 1.0065, norm:0.6846, tok/sec: 100878.99, flops:105.89, batch-reuse:1
@ 3175 train 4.7804 , allloss: 4.7805, dt: 1318.28ms, fracRes: 0.7034, norm(attn): 0.2021, norm(output): 0.9357, norm(x): 0.7552, norm(y): 1.0064, norm:0.7996, tok/sec: 99426.45, flops:104.36, batch-reuse:1
@ 3176 train 4.7557 , allloss: 4.7558, dt: 1296.99ms, fracRes: 0.7036, norm(attn): 0.2021, norm(output): 0.9357, norm(x): 0.7552, norm(y): 1.0063, norm:0.7085, tok/sec: 101058.69, flops:106.07, batch-reuse:1
@ 3177 train 4.6692 , allloss: 4.6694, dt: 1290.53ms, fracRes: 0.7036, norm(attn): 0.2031, norm(output): 0.9357, norm(x): 0.7551, norm(y): 1.0065, norm:0.6905, tok/sec: 101564.25, flops:106.61, batch-reuse:1
@ 3178 train 4.8625 , allloss: 4.8626, dt: 1286.64ms, fracRes: 0.7036, norm(attn): 0.2031, norm(output): 0.9357, norm(x): 0.7552, norm(y): 1.0063, norm:0.8476, tok/sec: 101871.58, flops:106.93, batch-reuse:1
@ 3179 train 4.6979 , allloss: 4.7688, dt: 1309.39ms, fracRes: 0.7037, norm(attn): 0.2031, norm(output): 0.9357, norm(x): 0.7552, norm(y): 1.0061, norm:0.8066, tok/sec: 100101.59, flops:105.07, batch-reuse:1
@ 3180 train 4.7516 , allloss: 4.7517, dt: 1317.54ms, fracRes: 0.7039, norm(attn): 0.2031, norm(output): 0.9358, norm(x): 0.7551, norm(y): 1.0061, norm:0.7530, tok/sec: 99482.52, flops:104.42, batch-reuse:1
@ 3181 train 4.7681 , allloss: 4.7683, dt: 1415.41ms, fracRes: 0.7038, norm(attn): 0.2021, norm(output): 0.9358, norm(x): 0.7551, norm(y): 1.0063, norm:0.8305, tok/sec: 92603.68, flops:97.20, batch-reuse:1
@ 3182 train 4.7281 , allloss: 4.7292, dt: 1312.18ms, fracRes: 0.7037, norm(attn): 0.2031, norm(output): 0.9355, norm(x): 0.7546, norm(y): 1.0064, norm:1.2246, tok/sec: 99888.39, flops:104.85, batch-reuse:1
@ 3183 train 4.7997 , allloss: 4.7998, dt: 1309.66ms, fracRes: 0.7035, norm(attn): 0.2021, norm(output): 0.9358, norm(x): 0.7553, norm(y): 1.0064, norm:0.8460, tok/sec: 100080.85, flops:105.05, batch-reuse:1
@ 3184 train 4.8355 , allloss: 4.8356, dt: 1287.43ms, fracRes: 0.7035, norm(attn): 0.2021, norm(output): 0.9357, norm(x): 0.7551, norm(y): 1.0064, norm:0.7351, tok/sec: 101808.99, flops:106.86, batch-reuse:1
@ 3185 train 4.8627 , allloss: 4.8628, dt: 1277.75ms, fracRes: 0.7034, norm(attn): 0.2041, norm(output): 0.9357, norm(x): 0.7548, norm(y): 1.0063, norm:0.7171, tok/sec: 102580.14, flops:107.67, batch-reuse:1
@ 3186 train 4.8015 , allloss: 4.8016, dt: 1318.55ms, fracRes: 0.7034, norm(attn): 0.2041, norm(output): 0.9357, norm(x): 0.7547, norm(y): 1.0063, norm:0.7145, tok/sec: 99406.52, flops:104.34, batch-reuse:1
@ 3187 train 4.7064 , allloss: 4.7066, dt: 1297.64ms, fracRes: 0.7036, norm(attn): 0.2031, norm(output): 0.9358, norm(x): 0.7546, norm(y): 1.0064, norm:0.7233, tok/sec: 101008.09, flops:106.02, batch-reuse:1
@ 3188 train 4.6427 , allloss: 4.6428, dt: 1284.23ms, fracRes: 0.7036, norm(attn): 0.2031, norm(output): 0.9357, norm(x): 0.7548, norm(y): 1.0065, norm:0.8079, tok/sec: 102062.72, flops:107.13, batch-reuse:1
@ 3189 train 4.6920 , allloss: 4.6921, dt: 1298.22ms, fracRes: 0.7037, norm(attn): 0.2031, norm(output): 0.9357, norm(x): 0.7546, norm(y): 1.0067, norm:0.6577, tok/sec: 100962.57, flops:105.97, batch-reuse:1
@ 3190 train 4.7762 , allloss: 4.7763, dt: 1309.53ms, fracRes: 0.7037, norm(attn): 0.2031, norm(output): 0.9360, norm(x): 0.7545, norm(y): 1.0065, norm:0.7918, tok/sec: 100090.94, flops:105.06, batch-reuse:1
@ 3191 train 4.6773 , allloss: 4.6774, dt: 1325.48ms, fracRes: 0.7040, norm(attn): 0.2031, norm(output): 0.9359, norm(x): 0.7536, norm(y): 1.0060, norm:0.6907, tok/sec: 98886.42, flops:103.79, batch-reuse:1
@ 3192 train 4.7087 , allloss: 4.7089, dt: 1305.94ms, fracRes: 0.7039, norm(attn): 0.2031, norm(output): 0.9357, norm(x): 0.7527, norm(y): 1.0063, norm:0.6088, tok/sec: 100365.66, flops:105.35, batch-reuse:1
@ 3193 train 4.7245 , allloss: 4.7248, dt: 1312.85ms, fracRes: 0.7036, norm(attn): 0.2041, norm(output): 0.9358, norm(x): 0.7536, norm(y): 1.0064, norm:0.6552, tok/sec: 99837.76, flops:104.79, batch-reuse:1
@ 3194 train 4.7149 , allloss: 4.7151, dt: 1317.55ms, fracRes: 0.7037, norm(attn): 0.2031, norm(output): 0.9358, norm(x): 0.7542, norm(y): 1.0062, norm:0.7002, tok/sec: 99481.31, flops:104.42, batch-reuse:1
@ 3195 train 4.7449 , allloss: 4.7450, dt: 1309.82ms, fracRes: 0.7037, norm(attn): 0.2051, norm(output): 0.9359, norm(x): 0.7550, norm(y): 1.0062, norm:0.8238, tok/sec: 100068.63, flops:105.04, batch-reuse:1
@ 3196 train 4.7334 , allloss: 4.7336, dt: 1291.72ms, fracRes: 0.7035, norm(attn): 0.2041, norm(output): 0.9358, norm(x): 0.7554, norm(y): 1.0063, norm:0.6855, tok/sec: 101470.52, flops:106.51, batch-reuse:1
@ 3197 train 4.7012 , allloss: 4.7015, dt: 1307.83ms, fracRes: 0.7036, norm(attn): 0.2041, norm(output): 0.9357, norm(x): 0.7548, norm(y): 1.0062, norm:0.6506, tok/sec: 100220.62, flops:105.19, batch-reuse:1
@ 3198 train 4.6546 , allloss: 4.6547, dt: 1332.34ms, fracRes: 0.7039, norm(attn): 0.2021, norm(output): 0.9359, norm(x): 0.7544, norm(y): 1.0063, norm:0.5980, tok/sec: 98377.43, flops:103.26, batch-reuse:1
@ 3199 train 4.6889 , allloss: 4.6890, dt: 1326.79ms, fracRes: 0.7036, norm(attn): 0.2021, norm(output): 0.9358, norm(x): 0.7543, norm(y): 1.0063, norm:0.6144, tok/sec: 98788.92, flops:103.69, batch-reuse:1
@ 3200 train 4.7296 , allloss: 4.7298, dt: 1304.97ms, fracRes: 0.7037, norm(attn): 0.2002, norm(output): 0.9357, norm(x): 0.7546, norm(y): 1.0062, norm:0.8473, tok/sec: 100440.35, flops:105.43, batch-reuse:1
@ 3201 train 4.7605 , allloss: 4.7606, dt: 1299.96ms, fracRes: 0.7035, norm(attn): 0.1992, norm(output): 0.9359, norm(x): 0.7551, norm(y): 1.0064, norm:0.7681, tok/sec: 100828.08, flops:105.83, batch-reuse:1
@ 3202 train 4.7663 , allloss: 4.7669, dt: 1310.52ms, fracRes: 0.7039, norm(attn): 0.2002, norm(output): 0.9357, norm(x): 0.7546, norm(y): 1.0061, norm:0.6142, tok/sec: 100015.59, flops:104.98, batch-reuse:1
@ 3203 train 4.8026 , allloss: 4.8028, dt: 1272.18ms, fracRes: 0.7039, norm(attn): 0.2012, norm(output): 0.9357, norm(x): 0.7547, norm(y): 1.0061, norm:0.6210, tok/sec: 103029.11, flops:108.14, batch-reuse:1
@ 3204 train 4.6678 , allloss: 4.6680, dt: 1287.09ms, fracRes: 0.7036, norm(attn): 0.2021, norm(output): 0.9357, norm(x): 0.7552, norm(y): 1.0067, norm:0.8592, tok/sec: 101836.30, flops:106.89, batch-reuse:1
@ 3205 train 4.7046 , allloss: 4.7047, dt: 1298.46ms, fracRes: 0.7037, norm(attn): 0.2041, norm(output): 0.9357, norm(x): 0.7544, norm(y): 1.0066, norm:0.7796, tok/sec: 100944.32, flops:105.95, batch-reuse:1
@ 3206 train 4.5953 , allloss: 4.5955, dt: 1303.07ms, fracRes: 0.7038, norm(attn): 0.2070, norm(output): 0.9356, norm(x): 0.7542, norm(y): 1.0060, norm:0.9175, tok/sec: 100586.96, flops:105.58, batch-reuse:1
@ 3207 train 4.8157 , allloss: 4.8159, dt: 1285.78ms, fracRes: 0.7039, norm(attn): 0.2041, norm(output): 0.9358, norm(x): 0.7544, norm(y): 1.0059, norm:0.7588, tok/sec: 101939.85, flops:107.00, batch-reuse:1
@ 3208 train 4.7805 , allloss: 4.7806, dt: 1314.17ms, fracRes: 0.7037, norm(attn): 0.2031, norm(output): 0.9358, norm(x): 0.7547, norm(y): 1.0061, norm:0.7641, tok/sec: 99737.76, flops:104.69, batch-reuse:1
@ 3209 train 4.8033 , allloss: 4.8036, dt: 1281.24ms, fracRes: 0.7034, norm(attn): 0.2041, norm(output): 0.9359, norm(x): 0.7549, norm(y): 1.0064, norm:0.9634, tok/sec: 102300.71, flops:107.38, batch-reuse:1
@ 3210 train 4.6859 , allloss: 4.6860, dt: 1325.47ms, fracRes: 0.7037, norm(attn): 0.2031, norm(output): 0.9358, norm(x): 0.7545, norm(y): 1.0062, norm:0.7536, tok/sec: 98887.42, flops:103.80, batch-reuse:1
@ 3211 train 4.7021 , allloss: 4.7021, dt: 1308.41ms, fracRes: 0.7037, norm(attn): 0.2021, norm(output): 0.9359, norm(x): 0.7550, norm(y): 1.0061, norm:0.8090, tok/sec: 100176.72, flops:105.15, batch-reuse:1
@ 3212 train 4.8430 , allloss: 4.8430, dt: 1310.61ms, fracRes: 0.7039, norm(attn): 0.2051, norm(output): 0.9359, norm(x): 0.7546, norm(y): 1.0059, norm:0.9070, tok/sec: 100008.15, flops:104.97, batch-reuse:1
@ 3213 train 4.7536 , allloss: 4.7537, dt: 1346.36ms, fracRes: 0.7039, norm(attn): 0.2021, norm(output): 0.9358, norm(x): 0.7551, norm(y): 1.0061, norm:0.8089, tok/sec: 97352.86, flops:102.18, batch-reuse:1
@ 3214 train 4.8258 , allloss: 4.8259, dt: 1345.23ms, fracRes: 0.7040, norm(attn): 0.2002, norm(output): 0.9358, norm(x): 0.7551, norm(y): 1.0061, norm:0.7525, tok/sec: 97434.82, flops:102.27, batch-reuse:1
@ 3215 train 4.7385 , allloss: 4.7387, dt: 1307.04ms, fracRes: 0.7039, norm(attn): 0.2021, norm(output): 0.9358, norm(x): 0.7549, norm(y): 1.0062, norm:0.7092, tok/sec: 100281.22, flops:105.26, batch-reuse:1
@ 3216 train 4.7290 , allloss: 4.7292, dt: 1346.39ms, fracRes: 0.7038, norm(attn): 0.2031, norm(output): 0.9359, norm(x): 0.7546, norm(y): 1.0060, norm:0.6729, tok/sec: 97350.52, flops:102.18, batch-reuse:1
@ 3217 train 4.7037 , allloss: 4.7039, dt: 1321.35ms, fracRes: 0.7039, norm(attn): 0.2031, norm(output): 0.9359, norm(x): 0.7544, norm(y): 1.0060, norm:0.6505, tok/sec: 99195.82, flops:104.12, batch-reuse:1
@ 3218 train 4.7753 , allloss: 4.7753, dt: 1279.21ms, fracRes: 0.7037, norm(attn): 0.2031, norm(output): 0.9361, norm(x): 0.7553, norm(y): 1.0060, norm:0.8528, tok/sec: 102463.19, flops:107.55, batch-reuse:1
@ 3219 train 4.8095 , allloss: 4.8097, dt: 1294.21ms, fracRes: 0.7037, norm(attn): 0.2021, norm(output): 0.9360, norm(x): 0.7548, norm(y): 1.0061, norm:0.7950, tok/sec: 101275.87, flops:106.30, batch-reuse:1
@ 3220 train 4.7479 , allloss: 4.7480, dt: 1282.34ms, fracRes: 0.7037, norm(attn): 0.2012, norm(output): 0.9360, norm(x): 0.7552, norm(y): 1.0061, norm:0.7339, tok/sec: 102213.54, flops:107.29, batch-reuse:1
@ 3221 train 4.6636 , allloss: 4.6637, dt: 1309.28ms, fracRes: 0.7038, norm(attn): 0.2031, norm(output): 0.9361, norm(x): 0.7552, norm(y): 1.0060, norm:0.7196, tok/sec: 100109.68, flops:105.08, batch-reuse:1
@ 3222 train 4.7301 , allloss: 4.7303, dt: 1303.75ms, fracRes: 0.7039, norm(attn): 0.2041, norm(output): 0.9359, norm(x): 0.7544, norm(y): 1.0060, norm:0.6719, tok/sec: 100534.76, flops:105.52, batch-reuse:1
@ 3223 train 4.7171 , allloss: 4.7172, dt: 1274.22ms, fracRes: 0.7038, norm(attn): 0.2031, norm(output): 0.9359, norm(x): 0.7546, norm(y): 1.0059, norm:0.7107, tok/sec: 102864.75, flops:107.97, batch-reuse:1
@ 3224 train 4.7438 , allloss: 4.7439, dt: 1302.33ms, fracRes: 0.7038, norm(attn): 0.2031, norm(output): 0.9358, norm(x): 0.7547, norm(y): 1.0061, norm:0.5862, tok/sec: 100644.32, flops:105.64, batch-reuse:1
@ 3225 train 4.7746 , allloss: 4.7748, dt: 1332.71ms, fracRes: 0.7037, norm(attn): 0.2031, norm(output): 0.9359, norm(x): 0.7550, norm(y): 1.0064, norm:0.7555, tok/sec: 98349.73, flops:103.23, batch-reuse:1
@ 3226 train 4.6766 , allloss: 4.6767, dt: 1321.89ms, fracRes: 0.7036, norm(attn): 0.2041, norm(output): 0.9358, norm(x): 0.7552, norm(y): 1.0062, norm:0.6153, tok/sec: 99154.99, flops:104.08, batch-reuse:1
@ 3227 train 4.6533 , allloss: 4.6534, dt: 1315.57ms, fracRes: 0.7035, norm(attn): 0.2070, norm(output): 0.9360, norm(x): 0.7550, norm(y): 1.0060, norm:0.6873, tok/sec: 99631.49, flops:104.58, batch-reuse:1
@ 3228 train 4.6073 , allloss: 4.6080, dt: 1297.90ms, fracRes: 0.7035, norm(attn): 0.2041, norm(output): 0.9357, norm(x): 0.7551, norm(y): 1.0060, norm:0.6701, tok/sec: 100987.38, flops:106.00, batch-reuse:1
@ 3229 train 4.7369 , allloss: 4.7370, dt: 1299.39ms, fracRes: 0.7035, norm(attn): 0.2031, norm(output): 0.9357, norm(x): 0.7547, norm(y): 1.0061, norm:0.6918, tok/sec: 100871.83, flops:105.88, batch-reuse:1
@ 3230 train 4.8559 , allloss: 4.8560, dt: 1309.67ms, fracRes: 0.7037, norm(attn): 0.2031, norm(output): 0.9359, norm(x): 0.7550, norm(y): 1.0062, norm:0.6667, tok/sec: 100080.54, flops:105.05, batch-reuse:1
@ 3231 train 4.6387 , allloss: 4.6390, dt: 1310.95ms, fracRes: 0.7036, norm(attn): 0.2031, norm(output): 0.9359, norm(x): 0.7551, norm(y): 1.0062, norm:0.6335, tok/sec: 99982.73, flops:104.95, batch-reuse:1
@ 3232 train 4.6681 , allloss: 4.6683, dt: 1302.84ms, fracRes: 0.7038, norm(attn): 0.2041, norm(output): 0.9359, norm(x): 0.7547, norm(y): 1.0061, norm:0.5695, tok/sec: 100605.07, flops:105.60, batch-reuse:1
@ 3233 train 4.7052 , allloss: 4.7053, dt: 1284.96ms, fracRes: 0.7039, norm(attn): 0.2031, norm(output): 0.9358, norm(x): 0.7548, norm(y): 1.0058, norm:0.6490, tok/sec: 102004.75, flops:107.07, batch-reuse:1
@ 3234 train 4.8944 , allloss: 4.8945, dt: 1288.52ms, fracRes: 0.7039, norm(attn): 0.2031, norm(output): 0.9359, norm(x): 0.7557, norm(y): 1.0059, norm:0.9859, tok/sec: 101722.94, flops:106.77, batch-reuse:1
@ 3235 train 4.7217 , allloss: 4.7218, dt: 1294.31ms, fracRes: 0.7034, norm(attn): 0.2031, norm(output): 0.9358, norm(x): 0.7556, norm(y): 1.0062, norm:0.8105, tok/sec: 101267.87, flops:106.29, batch-reuse:1
@ 3236 train 4.7777 , allloss: 4.7779, dt: 1302.75ms, fracRes: 0.7035, norm(attn): 0.2031, norm(output): 0.9360, norm(x): 0.7555, norm(y): 1.0061, norm:0.8991, tok/sec: 100611.77, flops:105.61, batch-reuse:1
@ 3237 train 4.6705 , allloss: 4.6706, dt: 1278.31ms, fracRes: 0.7036, norm(attn): 0.2021, norm(output): 0.9359, norm(x): 0.7548, norm(y): 1.0062, norm:1.2135, tok/sec: 102535.66, flops:107.62, batch-reuse:1
@ 3238 train 4.7016 , allloss: 4.7017, dt: 1289.06ms, fracRes: 0.7036, norm(attn): 0.2021, norm(output): 0.9359, norm(x): 0.7544, norm(y): 1.0062, norm:0.8497, tok/sec: 101680.36, flops:106.73, batch-reuse:1
@ 3239 train 4.7674 , allloss: 4.7678, dt: 1299.50ms, fracRes: 0.7034, norm(attn): 0.2021, norm(output): 0.9359, norm(x): 0.7553, norm(y): 1.0062, norm:1.1190, tok/sec: 100863.06, flops:105.87, batch-reuse:1
@ 3240 train 4.7931 , allloss: 4.7933, dt: 1296.20ms, fracRes: 0.7035, norm(attn): 0.2031, norm(output): 0.9358, norm(x): 0.7555, norm(y): 1.0063, norm:0.8074, tok/sec: 101119.86, flops:106.14, batch-reuse:1
@ 3241 train 4.7411 , allloss: 4.7411, dt: 1302.04ms, fracRes: 0.7036, norm(attn): 0.2031, norm(output): 0.9359, norm(x): 0.7556, norm(y): 1.0063, norm:0.8921, tok/sec: 100666.47, flops:105.66, batch-reuse:1
@ 3242 train 4.7354 , allloss: 4.7356, dt: 1308.98ms, fracRes: 0.7038, norm(attn): 0.2031, norm(output): 0.9358, norm(x): 0.7553, norm(y): 1.0061, norm:0.6559, tok/sec: 100133.02, flops:105.10, batch-reuse:1
@ 3243 train 4.7203 , allloss: 4.7204, dt: 1334.93ms, fracRes: 0.7037, norm(attn): 0.2012, norm(output): 0.9357, norm(x): 0.7553, norm(y): 1.0062, norm:0.7387, tok/sec: 98186.71, flops:103.06, batch-reuse:1
@ 3244 train 4.6783 , allloss: 4.6784, dt: 1333.13ms, fracRes: 0.7037, norm(attn): 0.2002, norm(output): 0.9359, norm(x): 0.7564, norm(y): 1.0062, norm:0.6326, tok/sec: 98319.07, flops:103.20, batch-reuse:1
@ 3245 train 4.6576 , allloss: 4.6577, dt: 1342.56ms, fracRes: 0.7035, norm(attn): 0.2031, norm(output): 0.9359, norm(x): 0.7564, norm(y): 1.0062, norm:0.7545, tok/sec: 97628.49, flops:102.47, batch-reuse:1
@ 3246 train 4.6354 , allloss: 4.6355, dt: 1318.66ms, fracRes: 0.7037, norm(attn): 0.2031, norm(output): 0.9358, norm(x): 0.7552, norm(y): 1.0061, norm:0.7061, tok/sec: 99398.18, flops:104.33, batch-reuse:1
@ 3247 train 4.6701 , allloss: 4.6702, dt: 1326.39ms, fracRes: 0.7038, norm(attn): 0.2031, norm(output): 0.9359, norm(x): 0.7554, norm(y): 1.0060, norm:0.7458, tok/sec: 98818.45, flops:103.72, batch-reuse:1
@ 3248 train 4.7876 , allloss: 4.7877, dt: 1317.13ms, fracRes: 0.7038, norm(attn): 0.2031, norm(output): 0.9361, norm(x): 0.7560, norm(y): 1.0059, norm:0.6505, tok/sec: 99513.60, flops:104.45, batch-reuse:1
@ 3249 train 4.6621 , allloss: 4.6622, dt: 1327.67ms, fracRes: 0.7036, norm(attn): 0.2031, norm(output): 0.9360, norm(x): 0.7559, norm(y): 1.0059, norm:0.6515, tok/sec: 98723.20, flops:103.62, batch-reuse:1
@ 3250 train 4.6511 , allloss: 4.6512, dt: 1324.60ms, fracRes: 0.7036, norm(attn): 0.2031, norm(output): 0.9360, norm(x): 0.7559, norm(y): 1.0060, norm:0.5980, tok/sec: 98951.76, flops:103.86, batch-reuse:1
@ 3251 train 4.6445 , allloss: 4.6446, dt: 1312.74ms, fracRes: 0.7036, norm(attn): 0.2031, norm(output): 0.9359, norm(x): 0.7560, norm(y): 1.0058, norm:0.6467, tok/sec: 99845.79, flops:104.80, batch-reuse:1
@ 3252 train 4.6264 , allloss: 4.6266, dt: 1283.40ms, fracRes: 0.7037, norm(attn): 0.2031, norm(output): 0.9358, norm(x): 0.7550, norm(y): 1.0059, norm:0.5750, tok/sec: 102128.98, flops:107.20, batch-reuse:1
@ 3253 train 4.7715 , allloss: 4.7717, dt: 1325.27ms, fracRes: 0.7037, norm(attn): 0.2041, norm(output): 0.9357, norm(x): 0.7546, norm(y): 1.0062, norm:0.5840, tok/sec: 98902.24, flops:103.81, batch-reuse:1
@ 3254 train 4.5820 , allloss: 4.5822, dt: 1345.45ms, fracRes: 0.7034, norm(attn): 0.2051, norm(output): 0.9357, norm(x): 0.7546, norm(y): 1.0065, norm:0.6133, tok/sec: 97419.06, flops:102.25, batch-reuse:1
@ 3255 train 4.6779 , allloss: 4.6780, dt: 1349.13ms, fracRes: 0.7035, norm(attn): 0.2051, norm(output): 0.9358, norm(x): 0.7540, norm(y): 1.0064, norm:0.6559, tok/sec: 97152.80, flops:101.97, batch-reuse:1
@ 3256 train 4.7260 , allloss: 4.7261, dt: 1339.97ms, fracRes: 0.7036, norm(attn): 0.2051, norm(output): 0.9358, norm(x): 0.7540, norm(y): 1.0062, norm:0.5775, tok/sec: 97817.21, flops:102.67, batch-reuse:1
@ 3257 train 4.6753 , allloss: 4.6756, dt: 1343.41ms, fracRes: 0.7036, norm(attn): 0.2041, norm(output): 0.9359, norm(x): 0.7550, norm(y): 1.0061, norm:0.6065, tok/sec: 97566.62, flops:102.41, batch-reuse:1
@ 3258 train 4.6465 , allloss: 4.6467, dt: 1327.21ms, fracRes: 0.7035, norm(attn): 0.2031, norm(output): 0.9361, norm(x): 0.7560, norm(y): 1.0062, norm:0.8136, tok/sec: 98757.32, flops:103.66, batch-reuse:1
@ 3259 train 4.6774 , allloss: 4.6776, dt: 1285.50ms, fracRes: 0.7037, norm(attn): 0.2021, norm(output): 0.9359, norm(x): 0.7553, norm(y): 1.0063, norm:0.9920, tok/sec: 101961.95, flops:107.02, batch-reuse:1
@ 3260 train 4.6547 , allloss: 4.6548, dt: 1333.91ms, fracRes: 0.7038, norm(attn): 0.2031, norm(output): 0.9359, norm(x): 0.7549, norm(y): 1.0059, norm:0.7040, tok/sec: 98261.13, flops:103.14, batch-reuse:1
@ 3261 train 4.6843 , allloss: 4.6844, dt: 1338.65ms, fracRes: 0.7040, norm(attn): 0.2031, norm(output): 0.9357, norm(x): 0.7544, norm(y): 1.0058, norm:0.6631, tok/sec: 97913.55, flops:102.77, batch-reuse:1
@ 3262 train 4.6165 , allloss: 4.6169, dt: 1292.17ms, fracRes: 0.7041, norm(attn): 0.2041, norm(output): 0.9359, norm(x): 0.7547, norm(y): 1.0058, norm:0.7837, tok/sec: 101435.27, flops:106.47, batch-reuse:1
@ 3263 train 4.6474 , allloss: 4.6477, dt: 1299.86ms, fracRes: 0.7040, norm(attn): 0.2051, norm(output): 0.9359, norm(x): 0.7552, norm(y): 1.0061, norm:0.9713, tok/sec: 100835.16, flops:105.84, batch-reuse:1
@ 3264 train 4.7165 , allloss: 4.7166, dt: 1331.52ms, fracRes: 0.7038, norm(attn): 0.2041, norm(output): 0.9358, norm(x): 0.7558, norm(y): 1.0058, norm:0.7146, tok/sec: 98438.10, flops:103.32, batch-reuse:1
@ 3265 train 4.6092 , allloss: 4.6093, dt: 1315.36ms, fracRes: 0.7035, norm(attn): 0.2051, norm(output): 0.9360, norm(x): 0.7560, norm(y): 1.0056, norm:0.7405, tok/sec: 99647.40, flops:104.59, batch-reuse:1
@ 3266 train 4.6243 , allloss: 4.6244, dt: 1302.35ms, fracRes: 0.7036, norm(attn): 0.2061, norm(output): 0.9360, norm(x): 0.7558, norm(y): 1.0058, norm:0.7440, tok/sec: 100642.53, flops:105.64, batch-reuse:1
@ 3267 train 4.5903 , allloss: 4.5904, dt: 1309.41ms, fracRes: 0.7035, norm(attn): 0.2031, norm(output): 0.9361, norm(x): 0.7556, norm(y): 1.0060, norm:0.6826, tok/sec: 100100.22, flops:105.07, batch-reuse:1
@ 3268 train 4.6350 , allloss: 4.6352, dt: 1279.01ms, fracRes: 0.7036, norm(attn): 0.2031, norm(output): 0.9358, norm(x): 0.7547, norm(y): 1.0064, norm:0.7190, tok/sec: 102479.29, flops:107.57, batch-reuse:1
@ 3269 train 4.6221 , allloss: 4.6221, dt: 1297.87ms, fracRes: 0.7036, norm(attn): 0.2031, norm(output): 0.9358, norm(x): 0.7542, norm(y): 1.0063, norm:0.6582, tok/sec: 100989.83, flops:106.00, batch-reuse:1
@ 3270 train 4.6427 , allloss: 4.6428, dt: 1288.17ms, fracRes: 0.7037, norm(attn): 0.2041, norm(output): 0.9358, norm(x): 0.7546, norm(y): 1.0060, norm:0.5908, tok/sec: 101750.58, flops:106.80, batch-reuse:1
@ 3271 train 4.5804 , allloss: 4.5804, dt: 1279.37ms, fracRes: 0.7038, norm(attn): 0.2031, norm(output): 0.9359, norm(x): 0.7550, norm(y): 1.0057, norm:0.5705, tok/sec: 102450.29, flops:107.54, batch-reuse:1
@ 3272 train 4.6385 , allloss: 4.6386, dt: 1292.33ms, fracRes: 0.7038, norm(attn): 0.2031, norm(output): 0.9359, norm(x): 0.7555, norm(y): 1.0059, norm:0.6188, tok/sec: 101423.20, flops:106.46, batch-reuse:1
@ 3273 train 4.6565 , allloss: 4.6566, dt: 1291.41ms, fracRes: 0.7037, norm(attn): 0.2031, norm(output): 0.9359, norm(x): 0.7557, norm(y): 1.0058, norm:0.5671, tok/sec: 101495.08, flops:106.53, batch-reuse:1
@ 3274 train 4.6135 , allloss: 4.6137, dt: 1310.22ms, fracRes: 0.7037, norm(attn): 0.2031, norm(output): 0.9359, norm(x): 0.7554, norm(y): 1.0060, norm:0.6213, tok/sec: 100037.94, flops:105.00, batch-reuse:1
@ 3275 train 4.6105 , allloss: 4.6106, dt: 1331.62ms, fracRes: 0.7034, norm(attn): 0.2031, norm(output): 0.9358, norm(x): 0.7553, norm(y): 1.0061, norm:0.5532, tok/sec: 98430.34, flops:103.32, batch-reuse:1
@ 3276 train 4.6429 , allloss: 4.6430, dt: 1295.26ms, fracRes: 0.7032, norm(attn): 0.2031, norm(output): 0.9359, norm(x): 0.7555, norm(y): 1.0061, norm:0.6539, tok/sec: 101193.34, flops:106.22, batch-reuse:1
@ 3277 train 4.6504 , allloss: 4.6504, dt: 1295.14ms, fracRes: 0.7032, norm(attn): 0.2031, norm(output): 0.9359, norm(x): 0.7562, norm(y): 1.0062, norm:0.6597, tok/sec: 101203.03, flops:106.23, batch-reuse:1
@ 3278 train 4.6410 , allloss: 4.6411, dt: 1321.00ms, fracRes: 0.7034, norm(attn): 0.2031, norm(output): 0.9359, norm(x): 0.7562, norm(y): 1.0062, norm:0.6117, tok/sec: 99221.60, flops:104.15, batch-reuse:1
@ 3279 train 4.6926 , allloss: 4.6927, dt: 1308.37ms, fracRes: 0.7035, norm(attn): 0.2021, norm(output): 0.9359, norm(x): 0.7561, norm(y): 1.0062, norm:0.6416, tok/sec: 100179.44, flops:105.15, batch-reuse:1
@ 3280 train 4.6077 , allloss: 4.6078, dt: 1324.60ms, fracRes: 0.7037, norm(attn): 0.2021, norm(output): 0.9358, norm(x): 0.7562, norm(y): 1.0062, norm:0.6914, tok/sec: 98952.30, flops:103.86, batch-reuse:1
@ 3281 train 4.6099 , allloss: 4.6099, dt: 1311.19ms, fracRes: 0.7038, norm(attn): 0.2021, norm(output): 0.9360, norm(x): 0.7560, norm(y): 1.0058, norm:0.6339, tok/sec: 99964.05, flops:104.93, batch-reuse:1
@ 3282 train 4.5865 , allloss: 4.5867, dt: 1306.61ms, fracRes: 0.7037, norm(attn): 0.2031, norm(output): 0.9359, norm(x): 0.7556, norm(y): 1.0058, norm:0.6064, tok/sec: 100314.49, flops:105.29, batch-reuse:1
@ 3283 train 4.6542 , allloss: 4.6542, dt: 1308.10ms, fracRes: 0.7035, norm(attn): 0.2031, norm(output): 0.9359, norm(x): 0.7554, norm(y): 1.0059, norm:0.7293, tok/sec: 100200.51, flops:105.17, batch-reuse:1
@ 3284 train 4.6413 , allloss: 4.6413, dt: 1279.83ms, fracRes: 0.7035, norm(attn): 0.2031, norm(output): 0.9359, norm(x): 0.7557, norm(y): 1.0061, norm:0.8796, tok/sec: 102413.66, flops:107.50, batch-reuse:1
@ 3285 train 4.6092 , allloss: 4.6093, dt: 1300.90ms, fracRes: 0.7036, norm(attn): 0.2021, norm(output): 0.9358, norm(x): 0.7553, norm(y): 1.0062, norm:0.8474, tok/sec: 100754.72, flops:105.76, batch-reuse:1
@ 3286 train 4.6616 , allloss: 4.6617, dt: 1291.65ms, fracRes: 0.7037, norm(attn): 0.2012, norm(output): 0.9359, norm(x): 0.7558, norm(y): 1.0060, norm:0.6485, tok/sec: 101476.14, flops:106.51, batch-reuse:1
@ 3287 train 4.5674 , allloss: 4.5675, dt: 1289.78ms, fracRes: 0.7035, norm(attn): 0.2021, norm(output): 0.9361, norm(x): 0.7560, norm(y): 1.0059, norm:0.6759, tok/sec: 101623.26, flops:106.67, batch-reuse:1
@ 3288 train 4.8399 , allloss: 4.8399, dt: 1300.55ms, fracRes: 0.7037, norm(attn): 0.2021, norm(output): 0.9359, norm(x): 0.7559, norm(y): 1.0060, norm:0.7317, tok/sec: 100782.20, flops:105.78, batch-reuse:1
@ 3289 train 4.7908 , allloss: 4.7908, dt: 1349.73ms, fracRes: 0.7037, norm(attn): 0.2021, norm(output): 0.9361, norm(x): 0.7563, norm(y): 1.0063, norm:0.8676, tok/sec: 97109.45, flops:101.93, batch-reuse:1
@ 3290 train 4.6840 , allloss: 4.6841, dt: 1331.19ms, fracRes: 0.7034, norm(attn): 0.2021, norm(output): 0.9362, norm(x): 0.7564, norm(y): 1.0060, norm:0.7127, tok/sec: 98462.02, flops:103.35, batch-reuse:1
@ 3291 train 4.5466 , allloss: 4.5468, dt: 1286.46ms, fracRes: 0.7032, norm(attn): 0.2021, norm(output): 0.9358, norm(x): 0.7559, norm(y): 1.0058, norm:0.6610, tok/sec: 101885.95, flops:106.94, batch-reuse:1
@ 3292 train 4.7782 , allloss: 4.7782, dt: 1293.76ms, fracRes: 0.7034, norm(attn): 0.2012, norm(output): 0.9360, norm(x): 0.7556, norm(y): 1.0059, norm:0.7192, tok/sec: 101311.30, flops:106.34, batch-reuse:1
@ 3293 train 4.7405 , allloss: 4.7405, dt: 1296.43ms, fracRes: 0.7033, norm(attn): 0.2021, norm(output): 0.9360, norm(x): 0.7561, norm(y): 1.0062, norm:0.7107, tok/sec: 101102.44, flops:106.12, batch-reuse:1
@ 3294 train 4.6804 , allloss: 4.6807, dt: 1309.92ms, fracRes: 0.7036, norm(attn): 0.2012, norm(output): 0.9360, norm(x): 0.7555, norm(y): 1.0061, norm:0.6552, tok/sec: 100060.72, flops:105.03, batch-reuse:1
@ 3295 train 4.5026 , allloss: 4.5028, dt: 1308.25ms, fracRes: 0.7036, norm(attn): 0.2031, norm(output): 0.9358, norm(x): 0.7546, norm(y): 1.0059, norm:0.7650, tok/sec: 100188.70, flops:105.16, batch-reuse:1
@ 3296 train 4.5771 , allloss: 4.5773, dt: 1305.44ms, fracRes: 0.7036, norm(attn): 0.2021, norm(output): 0.9358, norm(x): 0.7546, norm(y): 1.0060, norm:0.7222, tok/sec: 100404.23, flops:105.39, batch-reuse:1
@ 3297 train 4.4576 , allloss: 4.4577, dt: 1306.42ms, fracRes: 0.7034, norm(attn): 0.2031, norm(output): 0.9358, norm(x): 0.7548, norm(y): 1.0062, norm:0.5926, tok/sec: 100329.47, flops:105.31, batch-reuse:1
@ 3298 train 4.5373 , allloss: 4.5373, dt: 1317.72ms, fracRes: 0.7033, norm(attn): 0.2021, norm(output): 0.9358, norm(x): 0.7547, norm(y): 1.0063, norm:0.6319, tok/sec: 99468.48, flops:104.41, batch-reuse:1
@ 3299 train 4.4934 , allloss: 4.4935, dt: 1302.68ms, fracRes: 0.7034, norm(attn): 0.2031, norm(output): 0.9357, norm(x): 0.7544, norm(y): 1.0061, norm:0.7679, tok/sec: 100617.46, flops:105.61, batch-reuse:1
@ 3300 train 4.5289 , allloss: 4.5290, dt: 1293.88ms, fracRes: 0.7036, norm(attn): 0.2031, norm(output): 0.9357, norm(x): 0.7546, norm(y): 1.0061, norm:0.7551, tok/sec: 101301.61, flops:106.33, batch-reuse:1
@ 3301 train 4.5480 , allloss: 4.5481, dt: 1287.75ms, fracRes: 0.7035, norm(attn): 0.2031, norm(output): 0.9359, norm(x): 0.7552, norm(y): 1.0060, norm:0.7325, tok/sec: 101783.69, flops:106.84, batch-reuse:1
@ 3302 train 4.5484 , allloss: 4.5486, dt: 1302.74ms, fracRes: 0.7035, norm(attn): 0.2031, norm(output): 0.9359, norm(x): 0.7555, norm(y): 1.0060, norm:0.6447, tok/sec: 100612.38, flops:105.61, batch-reuse:1
@ 3303 train 4.4777 , allloss: 4.4778, dt: 1285.87ms, fracRes: 0.7035, norm(attn): 0.2031, norm(output): 0.9358, norm(x): 0.7554, norm(y): 1.0060, norm:0.6778, tok/sec: 101932.90, flops:106.99, batch-reuse:1
@ 3304 train 4.5904 , allloss: 4.5906, dt: 1299.30ms, fracRes: 0.7034, norm(attn): 0.2021, norm(output): 0.9358, norm(x): 0.7558, norm(y): 1.0060, norm:0.6665, tok/sec: 100878.83, flops:105.89, batch-reuse:1
@ 3305 train 4.6191 , allloss: 4.6192, dt: 1287.13ms, fracRes: 0.7034, norm(attn): 0.2012, norm(output): 0.9359, norm(x): 0.7559, norm(y): 1.0061, norm:0.6044, tok/sec: 101832.86, flops:106.89, batch-reuse:1
@ 3306 train 4.4824 , allloss: 4.4826, dt: 1316.11ms, fracRes: 0.7035, norm(attn): 0.2031, norm(output): 0.9358, norm(x): 0.7560, norm(y): 1.0060, norm:0.7717, tok/sec: 99590.25, flops:104.53, batch-reuse:1
@ 3307 train 4.5222 , allloss: 4.5223, dt: 1326.50ms, fracRes: 0.7037, norm(attn): 0.2031, norm(output): 0.9359, norm(x): 0.7556, norm(y): 1.0060, norm:0.7377, tok/sec: 98810.12, flops:103.71, batch-reuse:1
@ 3308 train 4.5875 , allloss: 4.5875, dt: 1322.20ms, fracRes: 0.7037, norm(attn): 0.2031, norm(output): 0.9358, norm(x): 0.7552, norm(y): 1.0059, norm:0.6685, tok/sec: 99131.73, flops:104.05, batch-reuse:1
@ 3309 train 4.5284 , allloss: 4.5286, dt: 1319.70ms, fracRes: 0.7036, norm(attn): 0.2031, norm(output): 0.9359, norm(x): 0.7557, norm(y): 1.0059, norm:0.6500, tok/sec: 99319.79, flops:104.25, batch-reuse:1
@ 3310 train 4.5904 , allloss: 4.5906, dt: 1294.22ms, fracRes: 0.7035, norm(attn): 0.2031, norm(output): 0.9360, norm(x): 0.7564, norm(y): 1.0059, norm:0.7155, tok/sec: 101275.01, flops:106.30, batch-reuse:1
@ 3311 train 4.6751 , allloss: 4.6752, dt: 1296.41ms, fracRes: 0.7034, norm(attn): 0.2021, norm(output): 0.9359, norm(x): 0.7568, norm(y): 1.0060, norm:0.9869, tok/sec: 101104.18, flops:106.12, batch-reuse:1
@ 3312 train 4.5809 , allloss: 4.5810, dt: 1308.40ms, fracRes: 0.7034, norm(attn): 0.2031, norm(output): 0.9359, norm(x): 0.7570, norm(y): 1.0060, norm:0.7280, tok/sec: 100177.07, flops:105.15, batch-reuse:1
@ 3313 train 4.5648 , allloss: 4.5649, dt: 1330.10ms, fracRes: 0.7034, norm(attn): 0.2012, norm(output): 0.9360, norm(x): 0.7569, norm(y): 1.0058, norm:0.7663, tok/sec: 98542.98, flops:103.43, batch-reuse:1
@ 3314 train 4.5252 , allloss: 4.5253, dt: 1310.71ms, fracRes: 0.7034, norm(attn): 0.2021, norm(output): 0.9358, norm(x): 0.7567, norm(y): 1.0060, norm:0.7501, tok/sec: 100000.95, flops:104.96, batch-reuse:1
@ 3315 train 4.6551 , allloss: 4.6553, dt: 1308.13ms, fracRes: 0.7034, norm(attn): 0.2021, norm(output): 0.9361, norm(x): 0.7570, norm(y): 1.0061, norm:0.6645, tok/sec: 100197.90, flops:105.17, batch-reuse:1
@ 3316 train 4.5979 , allloss: 4.5981, dt: 1323.34ms, fracRes: 0.7034, norm(attn): 0.2031, norm(output): 0.9359, norm(x): 0.7567, norm(y): 1.0061, norm:0.7208, tok/sec: 99046.20, flops:103.96, batch-reuse:1
@ 3317 train 4.5713 , allloss: 4.5715, dt: 1278.31ms, fracRes: 0.7036, norm(attn): 0.2031, norm(output): 0.9358, norm(x): 0.7562, norm(y): 1.0059, norm:0.6426, tok/sec: 102535.35, flops:107.62, batch-reuse:1
@ 3318 train 4.3349 , allloss: 4.3351, dt: 1339.21ms, fracRes: 0.7037, norm(attn): 0.2031, norm(output): 0.9357, norm(x): 0.7554, norm(y): 1.0060, norm:0.7079, tok/sec: 97872.97, flops:102.73, batch-reuse:1
@ 3319 train 4.6025 , allloss: 4.6026, dt: 1305.12ms, fracRes: 0.7036, norm(attn): 0.2021, norm(output): 0.9359, norm(x): 0.7557, norm(y): 1.0060, norm:0.6685, tok/sec: 100429.06, flops:105.41, batch-reuse:1
@ 3320 train 4.6714 , allloss: 4.6715, dt: 1283.47ms, fracRes: 0.7036, norm(attn): 0.2012, norm(output): 0.9360, norm(x): 0.7562, norm(y): 1.0061, norm:0.6534, tok/sec: 102123.02, flops:107.19, batch-reuse:1
@ 3321 train 4.5623 , allloss: 4.5624, dt: 1290.58ms, fracRes: 0.7035, norm(attn): 0.2012, norm(output): 0.9362, norm(x): 0.7562, norm(y): 1.0059, norm:0.6381, tok/sec: 101560.76, flops:106.60, batch-reuse:1
@ 3322 train 4.4855 , allloss: 4.4856, dt: 1274.75ms, fracRes: 0.7036, norm(attn): 0.2021, norm(output): 0.9360, norm(x): 0.7563, norm(y): 1.0058, norm:0.6599, tok/sec: 102821.94, flops:107.93, batch-reuse:1
@ 3323 train 4.3977 , allloss: 4.3978, dt: 1318.95ms, fracRes: 0.7037, norm(attn): 0.2031, norm(output): 0.9359, norm(x): 0.7565, norm(y): 1.0059, norm:0.6889, tok/sec: 99376.08, flops:104.31, batch-reuse:1
@ 3324 train 4.5223 , allloss: 4.5224, dt: 1289.63ms, fracRes: 0.7037, norm(attn): 0.2021, norm(output): 0.9361, norm(x): 0.7563, norm(y): 1.0059, norm:0.7209, tok/sec: 101635.71, flops:106.68, batch-reuse:1
@ 3325 train 4.5994 , allloss: 4.5996, dt: 1307.77ms, fracRes: 0.7037, norm(attn): 0.2002, norm(output): 0.9361, norm(x): 0.7566, norm(y): 1.0060, norm:0.7659, tok/sec: 100225.59, flops:105.20, batch-reuse:1
@ 3326 train 4.5003 , allloss: 4.5011, dt: 1308.42ms, fracRes: 0.7037, norm(attn): 0.2012, norm(output): 0.9358, norm(x): 0.7563, norm(y): 1.0061, norm:0.6665, tok/sec: 100175.50, flops:105.15, batch-reuse:1
@ 3327 train 4.5304 , allloss: 4.5364, dt: 1298.68ms, fracRes: 0.7038, norm(attn): 0.1982, norm(output): 0.9359, norm(x): 0.7557, norm(y): 1.0060, norm:0.6430, tok/sec: 100927.33, flops:105.94, batch-reuse:1
@ 3328 train 4.4552 , allloss: 4.4553, dt: 1307.79ms, fracRes: 0.7036, norm(attn): 0.2012, norm(output): 0.9360, norm(x): 0.7561, norm(y): 1.0062, norm:0.7742, tok/sec: 100223.75, flops:105.20, batch-reuse:1
@ 3329 train 4.4699 , allloss: 4.4700, dt: 1294.33ms, fracRes: 0.7035, norm(attn): 0.2021, norm(output): 0.9360, norm(x): 0.7561, norm(y): 1.0060, norm:0.7548, tok/sec: 101266.17, flops:106.29, batch-reuse:1
@ 3330 train 4.4963 , allloss: 4.4964, dt: 1302.06ms, fracRes: 0.7037, norm(attn): 0.2012, norm(output): 0.9360, norm(x): 0.7556, norm(y): 1.0061, norm:0.7641, tok/sec: 100664.81, flops:105.66, batch-reuse:1
@ 3331 train 4.2871 , allloss: 4.2872, dt: 1330.95ms, fracRes: 0.7039, norm(attn): 0.2002, norm(output): 0.9356, norm(x): 0.7551, norm(y): 1.0063, norm:0.6589, tok/sec: 98480.15, flops:103.37, batch-reuse:1
@ 3332 train 4.5091 , allloss: 4.5093, dt: 1322.36ms, fracRes: 0.7042, norm(attn): 0.1992, norm(output): 0.9360, norm(x): 0.7550, norm(y): 1.0060, norm:0.7302, tok/sec: 99119.72, flops:104.04, batch-reuse:1
@ 3333 train 4.4891 , allloss: 4.4893, dt: 1302.80ms, fracRes: 0.7040, norm(attn): 0.2031, norm(output): 0.9359, norm(x): 0.7551, norm(y): 1.0057, norm:0.7636, tok/sec: 100607.63, flops:105.60, batch-reuse:1
@ 3334 train 4.5251 , allloss: 4.5253, dt: 1288.69ms, fracRes: 0.7040, norm(attn): 0.2031, norm(output): 0.9359, norm(x): 0.7555, norm(y): 1.0057, norm:0.6168, tok/sec: 101709.48, flops:106.76, batch-reuse:1
@ 3335 train 4.5084 , allloss: 4.5087, dt: 1282.29ms, fracRes: 0.7038, norm(attn): 0.2031, norm(output): 0.9359, norm(x): 0.7556, norm(y): 1.0058, norm:0.7655, tok/sec: 102217.20, flops:107.29, batch-reuse:1
@ 3336 train 4.5989 , allloss: 4.5990, dt: 1280.34ms, fracRes: 0.7037, norm(attn): 0.2031, norm(output): 0.9360, norm(x): 0.7556, norm(y): 1.0060, norm:0.6583, tok/sec: 102372.47, flops:107.45, batch-reuse:1
@ 3337 train 4.5056 , allloss: 4.5058, dt: 1283.31ms, fracRes: 0.7038, norm(attn): 0.2031, norm(output): 0.9361, norm(x): 0.7554, norm(y): 1.0059, norm:0.8386, tok/sec: 102135.57, flops:107.20, batch-reuse:1
@ 3338 train 4.4955 , allloss: 4.4958, dt: 1334.22ms, fracRes: 0.7038, norm(attn): 0.2031, norm(output): 0.9359, norm(x): 0.7551, norm(y): 1.0060, norm:0.8703, tok/sec: 98238.73, flops:103.11, batch-reuse:1
@ 3339 train 4.5109 , allloss: 4.5115, dt: 1309.82ms, fracRes: 0.7041, norm(attn): 0.2031, norm(output): 0.9360, norm(x): 0.7547, norm(y): 1.0059, norm:0.6704, tok/sec: 100068.99, flops:105.04, batch-reuse:1
@ 3340 train 4.4166 , allloss: 4.4168, dt: 1338.68ms, fracRes: 0.7042, norm(attn): 0.2031, norm(output): 0.9358, norm(x): 0.7545, norm(y): 1.0059, norm:0.6720, tok/sec: 97911.30, flops:102.77, batch-reuse:1
@ 3341 train 4.7215 , allloss: 4.7220, dt: 1314.02ms, fracRes: 0.7042, norm(attn): 0.2031, norm(output): 0.9364, norm(x): 0.7557, norm(y): 1.0056, norm:0.7495, tok/sec: 99748.74, flops:104.70, batch-reuse:1
@ 3342 train 4.6713 , allloss: 4.6719, dt: 1284.40ms, fracRes: 0.7041, norm(attn): 0.2031, norm(output): 0.9363, norm(x): 0.7557, norm(y): 1.0056, norm:1.1974, tok/sec: 102048.81, flops:107.11, batch-reuse:1
@ 3343 train 4.7404 , allloss: 4.7421, dt: 1302.47ms, fracRes: 0.7036, norm(attn): 0.2021, norm(output): 0.9360, norm(x): 0.7561, norm(y): 1.0058, norm:1.0160, tok/sec: 100633.27, flops:105.63, batch-reuse:1
@ 3344 train 4.7441 , allloss: 4.7444, dt: 1319.92ms, fracRes: 0.7034, norm(attn): 0.2021, norm(output): 0.9361, norm(x): 0.7573, norm(y): 1.0057, norm:0.7814, tok/sec: 99303.36, flops:104.23, batch-reuse:1
@ 3345 train 4.6729 , allloss: 4.6731, dt: 1297.59ms, fracRes: 0.7035, norm(attn): 0.2031, norm(output): 0.9362, norm(x): 0.7577, norm(y): 1.0057, norm:0.8179, tok/sec: 101011.80, flops:106.03, batch-reuse:1
@ 3346 train 4.6520 , allloss: 4.6528, dt: 1316.98ms, fracRes: 0.7038, norm(attn): 0.2031, norm(output): 0.9361, norm(x): 0.7575, norm(y): 1.0059, norm:0.9104, tok/sec: 99524.46, flops:104.46, batch-reuse:1
@ 3347 train 4.6937 , allloss: 4.6939, dt: 1275.70ms, fracRes: 0.7038, norm(attn): 0.2021, norm(output): 0.9362, norm(x): 0.7575, norm(y): 1.0059, norm:0.7219, tok/sec: 102744.90, flops:107.84, batch-reuse:1
@ 3348 train 4.7045 , allloss: 4.7048, dt: 1277.92ms, fracRes: 0.7039, norm(attn): 0.2021, norm(output): 0.9362, norm(x): 0.7575, norm(y): 1.0057, norm:0.7080, tok/sec: 102566.46, flops:107.66, batch-reuse:1
@ 3349 train 4.6213 , allloss: 4.6215, dt: 1293.55ms, fracRes: 0.7039, norm(attn): 0.2031, norm(output): 0.9360, norm(x): 0.7571, norm(y): 1.0058, norm:0.7104, tok/sec: 101327.65, flops:106.36, batch-reuse:1
@ 3350 train 4.7106 , allloss: 4.7108, dt: 1320.59ms, fracRes: 0.7039, norm(attn): 0.2031, norm(output): 0.9361, norm(x): 0.7563, norm(y): 1.0060, norm:0.7371, tok/sec: 99252.30, flops:104.18, batch-reuse:1
@ 3351 train 4.7987 , allloss: 4.7988, dt: 1312.29ms, fracRes: 0.7037, norm(attn): 0.2021, norm(output): 0.9362, norm(x): 0.7563, norm(y): 1.0063, norm:0.6358, tok/sec: 99880.35, flops:104.84, batch-reuse:1
@ 3352 train 4.6853 , allloss: 4.6855, dt: 1293.48ms, fracRes: 0.7034, norm(attn): 0.2021, norm(output): 0.9363, norm(x): 0.7572, norm(y): 1.0062, norm:0.8967, tok/sec: 101332.99, flops:106.36, batch-reuse:1
@ 3353 train 4.7090 , allloss: 4.7092, dt: 1326.44ms, fracRes: 0.7034, norm(attn): 0.2031, norm(output): 0.9363, norm(x): 0.7573, norm(y): 1.0060, norm:0.8847, tok/sec: 98814.55, flops:103.72, batch-reuse:1
@ 3354 train 4.7163 , allloss: 4.7165, dt: 1328.97ms, fracRes: 0.7038, norm(attn): 0.2031, norm(output): 0.9361, norm(x): 0.7562, norm(y): 1.0060, norm:0.6939, tok/sec: 98626.79, flops:103.52, batch-reuse:1
@ 3355 train 4.7486 , allloss: 4.7488, dt: 1303.72ms, fracRes: 0.7038, norm(attn): 0.2031, norm(output): 0.9361, norm(x): 0.7563, norm(y): 1.0059, norm:0.7844, tok/sec: 100536.87, flops:105.53, batch-reuse:1
@ 3356 train 4.7234 , allloss: 4.7236, dt: 1290.83ms, fracRes: 0.7038, norm(attn): 0.2051, norm(output): 0.9361, norm(x): 0.7564, norm(y): 1.0059, norm:0.7452, tok/sec: 101541.03, flops:106.58, batch-reuse:1
@ 3357 train 4.6908 , allloss: 4.6910, dt: 1297.15ms, fracRes: 0.7038, norm(attn): 0.2041, norm(output): 0.9361, norm(x): 0.7566, norm(y): 1.0059, norm:0.6289, tok/sec: 101046.02, flops:106.06, batch-reuse:1
@ 3358 train 4.7535 , allloss: 4.7536, dt: 1319.23ms, fracRes: 0.7039, norm(attn): 0.2031, norm(output): 0.9361, norm(x): 0.7566, norm(y): 1.0059, norm:0.7055, tok/sec: 99355.06, flops:104.29, batch-reuse:1
@ 3359 train 4.6738 , allloss: 4.6739, dt: 1318.12ms, fracRes: 0.7039, norm(attn): 0.2012, norm(output): 0.9362, norm(x): 0.7564, norm(y): 1.0059, norm:0.5832, tok/sec: 99438.77, flops:104.37, batch-reuse:1
@ 3360 train 4.6731 , allloss: 4.6732, dt: 1320.58ms, fracRes: 0.7040, norm(attn): 0.1992, norm(output): 0.9363, norm(x): 0.7557, norm(y): 1.0060, norm:0.6572, tok/sec: 99253.47, flops:104.18, batch-reuse:1
@ 3361 train 4.7136 , allloss: 4.7138, dt: 1300.76ms, fracRes: 0.7041, norm(attn): 0.2002, norm(output): 0.9362, norm(x): 0.7561, norm(y): 1.0059, norm:0.5942, tok/sec: 100765.76, flops:105.77, batch-reuse:1
@ 3362 train 4.6146 , allloss: 4.6147, dt: 1289.30ms, fracRes: 0.7041, norm(attn): 0.2021, norm(output): 0.9362, norm(x): 0.7566, norm(y): 1.0059, norm:0.5711, tok/sec: 101661.01, flops:106.71, batch-reuse:1
@ 3363 train 4.6654 , allloss: 4.6655, dt: 1307.50ms, fracRes: 0.7040, norm(attn): 0.2021, norm(output): 0.9362, norm(x): 0.7567, norm(y): 1.0058, norm:0.6230, tok/sec: 100245.99, flops:105.22, batch-reuse:1
@ 3364 train 4.7106 , allloss: 4.7107, dt: 1280.33ms, fracRes: 0.7038, norm(attn): 0.2021, norm(output): 0.9362, norm(x): 0.7572, norm(y): 1.0059, norm:0.6035, tok/sec: 102373.31, flops:107.45, batch-reuse:1
@ 3365 train 4.6946 , allloss: 4.6948, dt: 1298.72ms, fracRes: 0.7037, norm(attn): 0.2021, norm(output): 0.9361, norm(x): 0.7574, norm(y): 1.0061, norm:0.6572, tok/sec: 100924.27, flops:105.93, batch-reuse:1
@ 3366 train 4.8106 , allloss: 4.8109, dt: 1283.67ms, fracRes: 0.7040, norm(attn): 0.2021, norm(output): 0.9362, norm(x): 0.7566, norm(y): 1.0059, norm:0.7005, tok/sec: 102107.32, flops:107.18, batch-reuse:1
@ 3367 train 4.7269 , allloss: 4.7270, dt: 1290.58ms, fracRes: 0.7038, norm(attn): 0.2031, norm(output): 0.9361, norm(x): 0.7565, norm(y): 1.0061, norm:0.7201, tok/sec: 101560.27, flops:106.60, batch-reuse:1
@ 3368 train 4.7609 , allloss: 4.7610, dt: 1289.03ms, fracRes: 0.7037, norm(attn): 0.2031, norm(output): 0.9361, norm(x): 0.7565, norm(y): 1.0060, norm:0.5597, tok/sec: 101683.03, flops:106.73, batch-reuse:1
@ 3369 train 4.7158 , allloss: 4.7159, dt: 1283.79ms, fracRes: 0.7036, norm(attn): 0.2031, norm(output): 0.9361, norm(x): 0.7560, norm(y): 1.0060, norm:0.6883, tok/sec: 102097.46, flops:107.16, batch-reuse:1
@ 3370 train 4.7123 , allloss: 4.7124, dt: 1296.03ms, fracRes: 0.7035, norm(attn): 0.2031, norm(output): 0.9360, norm(x): 0.7563, norm(y): 1.0061, norm:0.6526, tok/sec: 101133.33, flops:106.15, batch-reuse:1
@ 3371 train 4.6386 , allloss: 4.6411, dt: 1303.27ms, fracRes: 0.7035, norm(attn): 0.2031, norm(output): 0.9361, norm(x): 0.7567, norm(y): 1.0061, norm:0.6743, tok/sec: 100571.52, flops:105.56, batch-reuse:1
@ 3372 train 4.6555 , allloss: 4.6556, dt: 1292.54ms, fracRes: 0.7038, norm(attn): 0.2031, norm(output): 0.9361, norm(x): 0.7564, norm(y): 1.0061, norm:0.6297, tok/sec: 101406.45, flops:106.44, batch-reuse:1
@ 3373 train 4.7218 , allloss: 4.7219, dt: 1271.70ms, fracRes: 0.7039, norm(attn): 0.2031, norm(output): 0.9363, norm(x): 0.7568, norm(y): 1.0058, norm:0.7152, tok/sec: 103068.34, flops:108.18, batch-reuse:1
@ 3374 train 4.6474 , allloss: 4.6475, dt: 1299.98ms, fracRes: 0.7038, norm(attn): 0.2021, norm(output): 0.9362, norm(x): 0.7570, norm(y): 1.0057, norm:0.7319, tok/sec: 100825.93, flops:105.83, batch-reuse:1
@ 3375 train 4.5972 , allloss: 4.5973, dt: 1295.41ms, fracRes: 0.7038, norm(attn): 0.2031, norm(output): 0.9362, norm(x): 0.7572, norm(y): 1.0057, norm:0.7125, tok/sec: 101181.56, flops:106.20, batch-reuse:1
@ 3376 train 4.8403 , allloss: 4.8403, dt: 1346.52ms, fracRes: 0.7040, norm(attn): 0.2031, norm(output): 0.9361, norm(x): 0.7563, norm(y): 1.0057, norm:0.6203, tok/sec: 97341.44, flops:102.17, batch-reuse:1
@ 3377 train 4.8591 , allloss: 4.8592, dt: 1299.11ms, fracRes: 0.7043, norm(attn): 0.2031, norm(output): 0.9359, norm(x): 0.7555, norm(y): 1.0058, norm:1.2402, tok/sec: 100893.88, flops:105.90, batch-reuse:1
@ 3378 train 4.7793 , allloss: 4.7794, dt: 1285.30ms, fracRes: 0.7041, norm(attn): 0.2031, norm(output): 0.9361, norm(x): 0.7553, norm(y): 1.0059, norm:1.0606, tok/sec: 101977.99, flops:107.04, batch-reuse:1
@ 3379 train 4.6153 , allloss: 4.6155, dt: 1278.82ms, fracRes: 0.7038, norm(attn): 0.2031, norm(output): 0.9359, norm(x): 0.7551, norm(y): 1.0056, norm:0.7458, tok/sec: 102494.68, flops:107.58, batch-reuse:1
@ 3380 train 4.7116 , allloss: 4.7117, dt: 1299.62ms, fracRes: 0.7038, norm(attn): 0.2041, norm(output): 0.9361, norm(x): 0.7557, norm(y): 1.0058, norm:0.7615, tok/sec: 100854.20, flops:105.86, batch-reuse:1
@ 3381 train 4.6736 , allloss: 4.6738, dt: 1294.32ms, fracRes: 0.7038, norm(attn): 0.2031, norm(output): 0.9361, norm(x): 0.7563, norm(y): 1.0059, norm:0.7928, tok/sec: 101267.42, flops:106.29, batch-reuse:1
@ 3382 train 4.7441 , allloss: 4.7442, dt: 1281.51ms, fracRes: 0.7037, norm(attn): 0.2031, norm(output): 0.9360, norm(x): 0.7566, norm(y): 1.0061, norm:0.8535, tok/sec: 102279.30, flops:107.36, batch-reuse:1
@ 3383 train 4.7208 , allloss: 4.7210, dt: 1271.62ms, fracRes: 0.7036, norm(attn): 0.2021, norm(output): 0.9360, norm(x): 0.7571, norm(y): 1.0060, norm:0.6514, tok/sec: 103075.09, flops:108.19, batch-reuse:1
@ 3384 train 4.6802 , allloss: 4.6803, dt: 1292.59ms, fracRes: 0.7037, norm(attn): 0.2031, norm(output): 0.9361, norm(x): 0.7571, norm(y): 1.0058, norm:0.7279, tok/sec: 101402.36, flops:106.44, batch-reuse:1
@ 3385 train 4.6349 , allloss: 4.6351, dt: 1267.90ms, fracRes: 0.7039, norm(attn): 0.2021, norm(output): 0.9360, norm(x): 0.7570, norm(y): 1.0056, norm:0.6718, tok/sec: 103376.93, flops:108.51, batch-reuse:1
@ 3386 train 4.9503 , allloss: 4.9505, dt: 1284.71ms, fracRes: 0.7041, norm(attn): 0.2031, norm(output): 0.9360, norm(x): 0.7565, norm(y): 1.0057, norm:0.9357, tok/sec: 102024.21, flops:107.09, batch-reuse:1
@ 3387 train 4.7108 , allloss: 4.7110, dt: 1293.66ms, fracRes: 0.7040, norm(attn): 0.2021, norm(output): 0.9362, norm(x): 0.7569, norm(y): 1.0060, norm:0.8457, tok/sec: 101319.01, flops:106.35, batch-reuse:1
@ 3388 train 4.5856 , allloss: 4.5857, dt: 1282.03ms, fracRes: 0.7041, norm(attn): 0.2031, norm(output): 0.9362, norm(x): 0.7566, norm(y): 1.0059, norm:0.7347, tok/sec: 102237.54, flops:107.31, batch-reuse:1
@ 3389 train 4.6387 , allloss: 4.6388, dt: 1297.64ms, fracRes: 0.7043, norm(attn): 0.2031, norm(output): 0.9361, norm(x): 0.7562, norm(y): 1.0055, norm:0.6803, tok/sec: 101007.61, flops:106.02, batch-reuse:1
@ 3390 train 4.7673 , allloss: 4.7675, dt: 1285.71ms, fracRes: 0.7042, norm(attn): 0.2031, norm(output): 0.9363, norm(x): 0.7564, norm(y): 1.0054, norm:0.9067, tok/sec: 101945.47, flops:107.01, batch-reuse:1
@ 3391 train 4.7534 , allloss: 4.7536, dt: 1301.39ms, fracRes: 0.7042, norm(attn): 0.2031, norm(output): 0.9362, norm(x): 0.7560, norm(y): 1.0057, norm:1.0525, tok/sec: 100717.28, flops:105.72, batch-reuse:1
@ 3392 train 4.6493 , allloss: 4.6495, dt: 1277.39ms, fracRes: 0.7042, norm(attn): 0.2031, norm(output): 0.9362, norm(x): 0.7563, norm(y): 1.0057, norm:0.7189, tok/sec: 102609.51, flops:107.70, batch-reuse:1
@ 3393 train 4.7855 , allloss: 4.7858, dt: 1294.86ms, fracRes: 0.7043, norm(attn): 0.2031, norm(output): 0.9362, norm(x): 0.7559, norm(y): 1.0057, norm:0.7648, tok/sec: 101224.83, flops:106.25, batch-reuse:1
@ 3394 train 4.7006 , allloss: 4.7007, dt: 1288.36ms, fracRes: 0.7043, norm(attn): 0.2031, norm(output): 0.9362, norm(x): 0.7553, norm(y): 1.0058, norm:0.7480, tok/sec: 101735.68, flops:106.79, batch-reuse:1
@ 3395 train 4.6903 , allloss: 4.6904, dt: 1297.14ms, fracRes: 0.7042, norm(attn): 0.2031, norm(output): 0.9362, norm(x): 0.7557, norm(y): 1.0057, norm:0.6701, tok/sec: 101047.28, flops:106.06, batch-reuse:1
@ 3396 train 4.6808 , allloss: 4.6809, dt: 1286.83ms, fracRes: 0.7040, norm(attn): 0.2031, norm(output): 0.9362, norm(x): 0.7564, norm(y): 1.0058, norm:0.6614, tok/sec: 101856.26, flops:106.91, batch-reuse:1
@ 3397 train 4.6618 , allloss: 4.6619, dt: 1288.24ms, fracRes: 0.7040, norm(attn): 0.2051, norm(output): 0.9362, norm(x): 0.7568, norm(y): 1.0058, norm:0.6621, tok/sec: 101744.83, flops:106.79, batch-reuse:1
@ 3398 train 4.7412 , allloss: 4.7414, dt: 1282.77ms, fracRes: 0.7040, norm(attn): 0.2031, norm(output): 0.9363, norm(x): 0.7573, norm(y): 1.0057, norm:0.6297, tok/sec: 102178.92, flops:107.25, batch-reuse:1
@ 3399 train 4.6511 , allloss: 4.6513, dt: 1328.17ms, fracRes: 0.7040, norm(attn): 0.2031, norm(output): 0.9363, norm(x): 0.7571, norm(y): 1.0055, norm:0.6748, tok/sec: 98685.84, flops:103.58, batch-reuse:1
@ 3400 train 4.6818 , allloss: 4.6820, dt: 1291.26ms, fracRes: 0.7041, norm(attn): 0.2031, norm(output): 0.9363, norm(x): 0.7562, norm(y): 1.0055, norm:0.6100, tok/sec: 101506.75, flops:106.54, batch-reuse:1
@ 3401 train 4.6679 , allloss: 4.6680, dt: 1293.05ms, fracRes: 0.7041, norm(attn): 0.2021, norm(output): 0.9362, norm(x): 0.7560, norm(y): 1.0058, norm:0.5980, tok/sec: 101366.23, flops:106.40, batch-reuse:1
@ 3402 train 4.7317 , allloss: 4.7318, dt: 1281.89ms, fracRes: 0.7042, norm(attn): 0.2041, norm(output): 0.9361, norm(x): 0.7567, norm(y): 1.0060, norm:0.7534, tok/sec: 102248.97, flops:107.32, batch-reuse:1
@ 3403 train 4.6540 , allloss: 4.6540, dt: 1293.99ms, fracRes: 0.7040, norm(attn): 0.2031, norm(output): 0.9361, norm(x): 0.7566, norm(y): 1.0059, norm:0.5754, tok/sec: 101292.87, flops:106.32, batch-reuse:1
@ 3404 train 4.6044 , allloss: 4.6045, dt: 1285.85ms, fracRes: 0.7042, norm(attn): 0.2031, norm(output): 0.9362, norm(x): 0.7558, norm(y): 1.0057, norm:0.6039, tok/sec: 101933.80, flops:106.99, batch-reuse:1
@ 3405 train 4.6537 , allloss: 4.6537, dt: 1300.69ms, fracRes: 0.7043, norm(attn): 0.2031, norm(output): 0.9361, norm(x): 0.7558, norm(y): 1.0056, norm:0.6048, tok/sec: 100771.15, flops:105.77, batch-reuse:1
@ 3406 train 4.6214 , allloss: 4.6215, dt: 1278.63ms, fracRes: 0.7040, norm(attn): 0.2021, norm(output): 0.9362, norm(x): 0.7567, norm(y): 1.0057, norm:0.5429, tok/sec: 102510.00, flops:107.60, batch-reuse:1
@ 3407 train 4.6295 , allloss: 4.6296, dt: 1310.65ms, fracRes: 0.7039, norm(attn): 0.2021, norm(output): 0.9363, norm(x): 0.7571, norm(y): 1.0057, norm:0.6108, tok/sec: 100005.33, flops:104.97, batch-reuse:1
@ 3408 train 4.6328 , allloss: 4.6329, dt: 1286.94ms, fracRes: 0.7038, norm(attn): 0.2021, norm(output): 0.9364, norm(x): 0.7573, norm(y): 1.0058, norm:0.5785, tok/sec: 101847.52, flops:106.90, batch-reuse:1
@ 3409 train 4.7497 , allloss: 4.7498, dt: 1271.38ms, fracRes: 0.7039, norm(attn): 0.2021, norm(output): 0.9364, norm(x): 0.7568, norm(y): 1.0059, norm:0.6325, tok/sec: 103094.53, flops:108.21, batch-reuse:1
@ 3410 train 4.7508 , allloss: 4.9140, dt: 1285.34ms, fracRes: 0.7040, norm(attn): 0.2012, norm(output): 0.9363, norm(x): 0.7566, norm(y): 1.0058, norm:0.7824, tok/sec: 101974.38, flops:107.04, batch-reuse:1
@ 3411 train 4.6835 , allloss: 4.6836, dt: 1273.81ms, fracRes: 0.7040, norm(attn): 0.2031, norm(output): 0.9361, norm(x): 0.7557, norm(y): 1.0057, norm:0.6773, tok/sec: 102897.23, flops:108.00, batch-reuse:1
@ 3412 train 4.7134 , allloss: 4.7135, dt: 1301.04ms, fracRes: 0.7040, norm(attn): 0.2031, norm(output): 0.9362, norm(x): 0.7560, norm(y): 1.0059, norm:0.6497, tok/sec: 100743.80, flops:105.74, batch-reuse:1
@ 3413 train 4.7608 , allloss: 4.7609, dt: 1295.90ms, fracRes: 0.7039, norm(attn): 0.2021, norm(output): 0.9363, norm(x): 0.7571, norm(y): 1.0061, norm:0.6573, tok/sec: 101143.73, flops:106.16, batch-reuse:1
@ 3414 train 4.6403 , allloss: 4.6405, dt: 1287.16ms, fracRes: 0.7038, norm(attn): 0.2002, norm(output): 0.9365, norm(x): 0.7581, norm(y): 1.0059, norm:0.8896, tok/sec: 101830.28, flops:106.88, batch-reuse:1
@ 3415 train 4.6149 , allloss: 4.6150, dt: 1292.60ms, fracRes: 0.7036, norm(attn): 0.2031, norm(output): 0.9364, norm(x): 0.7582, norm(y): 1.0057, norm:0.7114, tok/sec: 101401.78, flops:106.43, batch-reuse:1
@ 3416 train 4.6968 , allloss: 4.6970, dt: 1284.41ms, fracRes: 0.7039, norm(attn): 0.2021, norm(output): 0.9363, norm(x): 0.7574, norm(y): 1.0057, norm:0.6476, tok/sec: 102048.64, flops:107.11, batch-reuse:1
@ 3417 train 4.6748 , allloss: 4.6749, dt: 1280.92ms, fracRes: 0.7041, norm(attn): 0.2031, norm(output): 0.9362, norm(x): 0.7567, norm(y): 1.0055, norm:0.7581, tok/sec: 102326.74, flops:107.41, batch-reuse:1
@ 3418 train 4.5978 , allloss: 4.5979, dt: 1289.98ms, fracRes: 0.7040, norm(attn): 0.2041, norm(output): 0.9361, norm(x): 0.7566, norm(y): 1.0056, norm:0.6849, tok/sec: 101607.63, flops:106.65, batch-reuse:1
@ 3419 train 4.6464 , allloss: 4.6465, dt: 1279.12ms, fracRes: 0.7040, norm(attn): 0.2041, norm(output): 0.9363, norm(x): 0.7562, norm(y): 1.0058, norm:0.5848, tok/sec: 102470.55, flops:107.56, batch-reuse:1
@ 3420 train 4.6153 , allloss: 4.6153, dt: 1294.04ms, fracRes: 0.7039, norm(attn): 0.2051, norm(output): 0.9363, norm(x): 0.7552, norm(y): 1.0057, norm:0.5759, tok/sec: 101288.80, flops:106.32, batch-reuse:1
@ 3421 train 4.6779 , allloss: 4.6780, dt: 1291.62ms, fracRes: 0.7039, norm(attn): 0.2041, norm(output): 0.9362, norm(x): 0.7547, norm(y): 1.0056, norm:0.5951, tok/sec: 101478.82, flops:106.52, batch-reuse:1
@ 3422 train 4.6779 , allloss: 4.6782, dt: 1278.91ms, fracRes: 0.7040, norm(attn): 0.2031, norm(output): 0.9362, norm(x): 0.7557, norm(y): 1.0056, norm:0.6212, tok/sec: 102487.03, flops:107.57, batch-reuse:1
@ 3423 train 4.6260 , allloss: 4.6261, dt: 1285.02ms, fracRes: 0.7039, norm(attn): 0.2031, norm(output): 0.9362, norm(x): 0.7568, norm(y): 1.0054, norm:0.5749, tok/sec: 101999.77, flops:107.06, batch-reuse:1
@ 3424 train 4.6568 , allloss: 4.6570, dt: 1274.78ms, fracRes: 0.7039, norm(attn): 0.2031, norm(output): 0.9362, norm(x): 0.7575, norm(y): 1.0053, norm:0.5565, tok/sec: 102819.50, flops:107.92, batch-reuse:1
@ 3425 train 4.6864 , allloss: 4.6865, dt: 1302.38ms, fracRes: 0.7039, norm(attn): 0.2021, norm(output): 0.9362, norm(x): 0.7577, norm(y): 1.0054, norm:0.6026, tok/sec: 100639.99, flops:105.63, batch-reuse:1
@ 3426 train 4.6180 , allloss: 4.6183, dt: 1285.72ms, fracRes: 0.7039, norm(attn): 0.2031, norm(output): 0.9363, norm(x): 0.7573, norm(y): 1.0054, norm:0.5460, tok/sec: 101944.79, flops:107.00, batch-reuse:1
@ 3427 train 4.6505 , allloss: 4.6507, dt: 1290.03ms, fracRes: 0.7040, norm(attn): 0.2021, norm(output): 0.9363, norm(x): 0.7560, norm(y): 1.0056, norm:0.5838, tok/sec: 101603.50, flops:106.65, batch-reuse:1
@ 3428 train 4.5633 , allloss: 4.5635, dt: 1274.33ms, fracRes: 0.7039, norm(attn): 0.2012, norm(output): 0.9362, norm(x): 0.7562, norm(y): 1.0058, norm:0.5749, tok/sec: 102855.24, flops:107.96, batch-reuse:1
@ 3429 train 4.6090 , allloss: 4.6090, dt: 1278.37ms, fracRes: 0.7037, norm(attn): 0.2021, norm(output): 0.9364, norm(x): 0.7572, norm(y): 1.0059, norm:0.7818, tok/sec: 102530.86, flops:107.62, batch-reuse:1
@ 3430 train 4.7805 , allloss: 4.7807, dt: 1294.13ms, fracRes: 0.7040, norm(attn): 0.1992, norm(output): 0.9367, norm(x): 0.7576, norm(y): 1.0055, norm:0.9167, tok/sec: 101282.08, flops:106.31, batch-reuse:1
@ 3431 train 4.7715 , allloss: 4.7715, dt: 1280.12ms, fracRes: 0.7042, norm(attn): 0.2031, norm(output): 0.9365, norm(x): 0.7579, norm(y): 1.0054, norm:1.8646, tok/sec: 102390.45, flops:107.47, batch-reuse:1
@ 3432 train 4.7260 , allloss: 4.7262, dt: 1276.90ms, fracRes: 0.7045, norm(attn): 0.2031, norm(output): 0.9367, norm(x): 0.7581, norm(y): 1.0053, norm:1.0743, tok/sec: 102648.96, flops:107.74, batch-reuse:1
@ 3433 train 4.6789 , allloss: 4.6792, dt: 1308.28ms, fracRes: 0.7048, norm(attn): 0.2021, norm(output): 0.9364, norm(x): 0.7557, norm(y): 1.0056, norm:1.1167, tok/sec: 100186.29, flops:105.16, batch-reuse:1
@ 3434 train 4.6520 , allloss: 4.6523, dt: 1279.95ms, fracRes: 0.7047, norm(attn): 0.2031, norm(output): 0.9361, norm(x): 0.7546, norm(y): 1.0057, norm:0.8970, tok/sec: 102403.95, flops:107.49, batch-reuse:1
@ 3435 train 4.6173 , allloss: 4.6185, dt: 1295.40ms, fracRes: 0.7042, norm(attn): 0.2031, norm(output): 0.9361, norm(x): 0.7552, norm(y): 1.0057, norm:0.9011, tok/sec: 101182.95, flops:106.20, batch-reuse:1
@ 3436 train 4.6487 , allloss: 4.6490, dt: 1291.37ms, fracRes: 0.7042, norm(attn): 0.2021, norm(output): 0.9364, norm(x): 0.7558, norm(y): 1.0057, norm:0.7733, tok/sec: 101498.43, flops:106.54, batch-reuse:1
@ 3437 train 4.5948 , allloss: 4.5952, dt: 1274.42ms, fracRes: 0.7041, norm(attn): 0.2031, norm(output): 0.9363, norm(x): 0.7561, norm(y): 1.0057, norm:0.7220, tok/sec: 102848.47, flops:107.95, batch-reuse:1
@ 3438 train 4.6795 , allloss: 4.6800, dt: 1287.01ms, fracRes: 0.7043, norm(attn): 0.2041, norm(output): 0.9364, norm(x): 0.7558, norm(y): 1.0054, norm:0.6739, tok/sec: 101842.50, flops:106.90, batch-reuse:1
@ 3439 train 4.5872 , allloss: 4.5874, dt: 1304.36ms, fracRes: 0.7043, norm(attn): 0.2041, norm(output): 0.9362, norm(x): 0.7553, norm(y): 1.0054, norm:0.6365, tok/sec: 100487.44, flops:105.47, batch-reuse:1
@ 3440 train 4.5241 , allloss: 4.5243, dt: 1345.59ms, fracRes: 0.7045, norm(attn): 0.2041, norm(output): 0.9363, norm(x): 0.7551, norm(y): 1.0053, norm:0.6021, tok/sec: 97408.87, flops:102.24, batch-reuse:1
@ 3441 train 4.6597 , allloss: 4.6599, dt: 1309.00ms, fracRes: 0.7043, norm(attn): 0.2041, norm(output): 0.9363, norm(x): 0.7560, norm(y): 1.0054, norm:0.5633, tok/sec: 100131.05, flops:105.10, batch-reuse:1
@ 3442 train 4.6552 , allloss: 4.6553, dt: 1289.64ms, fracRes: 0.7040, norm(attn): 0.2041, norm(output): 0.9362, norm(x): 0.7569, norm(y): 1.0055, norm:0.6511, tok/sec: 101634.55, flops:106.68, batch-reuse:1
@ 3443 train 4.6289 , allloss: 4.6291, dt: 1326.88ms, fracRes: 0.7040, norm(attn): 0.2021, norm(output): 0.9362, norm(x): 0.7570, norm(y): 1.0055, norm:0.5529, tok/sec: 98782.20, flops:103.68, batch-reuse:1
@ 3444 train 4.5643 , allloss: 4.5646, dt: 1304.87ms, fracRes: 0.7040, norm(attn): 0.2031, norm(output): 0.9362, norm(x): 0.7567, norm(y): 1.0055, norm:0.6353, tok/sec: 100448.49, flops:105.43, batch-reuse:1
@ 3445 train 4.6348 , allloss: 4.6350, dt: 1292.06ms, fracRes: 0.7039, norm(attn): 0.2021, norm(output): 0.9365, norm(x): 0.7572, norm(y): 1.0057, norm:0.5823, tok/sec: 101444.31, flops:106.48, batch-reuse:1
@ 3446 train 4.6097 , allloss: 4.6100, dt: 1278.19ms, fracRes: 0.7041, norm(attn): 0.2021, norm(output): 0.9364, norm(x): 0.7571, norm(y): 1.0057, norm:0.7038, tok/sec: 102544.96, flops:107.63, batch-reuse:1
@ 3447 train 4.6270 , allloss: 4.6273, dt: 1297.37ms, fracRes: 0.7041, norm(attn): 0.2012, norm(output): 0.9364, norm(x): 0.7574, norm(y): 1.0055, norm:0.5580, tok/sec: 101029.10, flops:106.04, batch-reuse:1
@ 3448 train 4.5862 , allloss: 4.5865, dt: 1290.67ms, fracRes: 0.7041, norm(attn): 0.2021, norm(output): 0.9362, norm(x): 0.7576, norm(y): 1.0054, norm:0.5998, tok/sec: 101553.63, flops:106.59, batch-reuse:1
@ 3449 train 4.6277 , allloss: 4.6278, dt: 1292.80ms, fracRes: 0.7040, norm(attn): 0.2021, norm(output): 0.9364, norm(x): 0.7574, norm(y): 1.0053, norm:0.6230, tok/sec: 101385.82, flops:106.42, batch-reuse:1
@ 3450 train 4.5609 , allloss: 4.5610, dt: 1283.73ms, fracRes: 0.7038, norm(attn): 0.2031, norm(output): 0.9364, norm(x): 0.7571, norm(y): 1.0055, norm:0.5410, tok/sec: 102102.58, flops:107.17, batch-reuse:1
@ 3451 train 4.6592 , allloss: 4.6594, dt: 1284.39ms, fracRes: 0.7038, norm(attn): 0.2051, norm(output): 0.9365, norm(x): 0.7572, norm(y): 1.0058, norm:0.6262, tok/sec: 102049.98, flops:107.11, batch-reuse:1
@ 3452 train 4.6439 , allloss: 4.6440, dt: 1289.64ms, fracRes: 0.7039, norm(attn): 0.2031, norm(output): 0.9365, norm(x): 0.7575, norm(y): 1.0057, norm:0.8690, tok/sec: 101634.74, flops:106.68, batch-reuse:1
@ 3453 train 4.6518 , allloss: 4.6522, dt: 1285.37ms, fracRes: 0.7040, norm(attn): 0.2031, norm(output): 0.9361, norm(x): 0.7574, norm(y): 1.0057, norm:0.9408, tok/sec: 101972.30, flops:107.03, batch-reuse:1
@ 3454 train 4.6017 , allloss: 4.6018, dt: 1292.48ms, fracRes: 0.7043, norm(attn): 0.2021, norm(output): 0.9366, norm(x): 0.7570, norm(y): 1.0052, norm:0.8196, tok/sec: 101411.45, flops:106.44, batch-reuse:1
@ 3455 train 4.6434 , allloss: 4.6436, dt: 1337.32ms, fracRes: 0.7041, norm(attn): 0.2021, norm(output): 0.9364, norm(x): 0.7577, norm(y): 1.0056, norm:1.0400, tok/sec: 98011.20, flops:102.88, batch-reuse:1
@ 3456 train 4.5497 , allloss: 4.5498, dt: 1305.60ms, fracRes: 0.7041, norm(attn): 0.2031, norm(output): 0.9365, norm(x): 0.7571, norm(y): 1.0055, norm:0.8165, tok/sec: 100392.11, flops:105.37, batch-reuse:1
@ 3457 train 4.5898 , allloss: 4.5899, dt: 1300.55ms, fracRes: 0.7043, norm(attn): 0.2041, norm(output): 0.9363, norm(x): 0.7573, norm(y): 1.0052, norm:0.8354, tok/sec: 100782.20, flops:105.78, batch-reuse:1
@ 3458 train 4.5282 , allloss: 4.5283, dt: 1324.62ms, fracRes: 0.7046, norm(attn): 0.2041, norm(output): 0.9363, norm(x): 0.7564, norm(y): 1.0050, norm:0.6861, tok/sec: 98950.87, flops:103.86, batch-reuse:1
@ 3459 train 4.5943 , allloss: 4.5945, dt: 1312.01ms, fracRes: 0.7047, norm(attn): 0.2041, norm(output): 0.9362, norm(x): 0.7555, norm(y): 1.0050, norm:0.6816, tok/sec: 99901.89, flops:104.86, batch-reuse:1
@ 3460 train 4.6848 , allloss: 4.6849, dt: 1297.91ms, fracRes: 0.7046, norm(attn): 0.2041, norm(output): 0.9364, norm(x): 0.7555, norm(y): 1.0052, norm:0.7002, tok/sec: 100986.88, flops:106.00, batch-reuse:1
@ 3461 train 4.5612 , allloss: 4.5613, dt: 1280.26ms, fracRes: 0.7040, norm(attn): 0.2041, norm(output): 0.9363, norm(x): 0.7564, norm(y): 1.0055, norm:0.7451, tok/sec: 102378.84, flops:107.46, batch-reuse:1
@ 3462 train 4.5862 , allloss: 4.5863, dt: 1312.90ms, fracRes: 0.7039, norm(attn): 0.2031, norm(output): 0.9362, norm(x): 0.7565, norm(y): 1.0055, norm:0.6353, tok/sec: 99834.31, flops:104.79, batch-reuse:1
@ 3463 train 4.6426 , allloss: 4.6428, dt: 1297.20ms, fracRes: 0.7040, norm(attn): 0.2031, norm(output): 0.9362, norm(x): 0.7573, norm(y): 1.0056, norm:0.6353, tok/sec: 101042.01, flops:106.06, batch-reuse:1
@ 3464 train 4.4360 , allloss: 4.4361, dt: 1333.67ms, fracRes: 0.7040, norm(attn): 0.2031, norm(output): 0.9362, norm(x): 0.7578, norm(y): 1.0055, norm:0.6825, tok/sec: 98279.31, flops:103.16, batch-reuse:1
@ 3465 train 4.6297 , allloss: 4.6299, dt: 1291.92ms, fracRes: 0.7042, norm(attn): 0.2031, norm(output): 0.9363, norm(x): 0.7580, norm(y): 1.0054, norm:0.6717, tok/sec: 101454.81, flops:106.49, batch-reuse:1
@ 3466 train 4.5752 , allloss: 4.5756, dt: 1306.60ms, fracRes: 0.7043, norm(attn): 0.2031, norm(output): 0.9364, norm(x): 0.7578, norm(y): 1.0054, norm:0.6545, tok/sec: 100315.04, flops:105.29, batch-reuse:1
@ 3467 train 4.6074 , allloss: 4.6075, dt: 1316.65ms, fracRes: 0.7042, norm(attn): 0.2031, norm(output): 0.9364, norm(x): 0.7579, norm(y): 1.0056, norm:0.7567, tok/sec: 99549.93, flops:104.49, batch-reuse:1
@ 3468 train 4.4947 , allloss: 4.4948, dt: 1281.73ms, fracRes: 0.7042, norm(attn): 0.2031, norm(output): 0.9365, norm(x): 0.7579, norm(y): 1.0055, norm:0.6239, tok/sec: 102261.89, flops:107.34, batch-reuse:1
@ 3469 train 4.5798 , allloss: 4.5798, dt: 1288.71ms, fracRes: 0.7040, norm(attn): 0.2021, norm(output): 0.9363, norm(x): 0.7576, norm(y): 1.0056, norm:0.6364, tok/sec: 101707.98, flops:106.76, batch-reuse:1
@ 3470 train 4.6878 , allloss: 4.6879, dt: 1307.98ms, fracRes: 0.7040, norm(attn): 0.2021, norm(output): 0.9364, norm(x): 0.7575, norm(y): 1.0055, norm:0.6005, tok/sec: 100209.44, flops:105.18, batch-reuse:1
@ 3471 train 4.5903 , allloss: 4.5904, dt: 1297.43ms, fracRes: 0.7040, norm(attn): 0.2031, norm(output): 0.9363, norm(x): 0.7577, norm(y): 1.0055, norm:0.6398, tok/sec: 101024.63, flops:106.04, batch-reuse:1
@ 3472 train 4.5982 , allloss: 4.5983, dt: 1317.39ms, fracRes: 0.7040, norm(attn): 0.2031, norm(output): 0.9365, norm(x): 0.7581, norm(y): 1.0053, norm:0.5966, tok/sec: 99493.54, flops:104.43, batch-reuse:1
@ 3473 train 4.5172 , allloss: 4.5173, dt: 1293.18ms, fracRes: 0.7042, norm(attn): 0.2031, norm(output): 0.9363, norm(x): 0.7577, norm(y): 1.0053, norm:0.6492, tok/sec: 101356.35, flops:106.39, batch-reuse:1
@ 3474 train 4.5659 , allloss: 4.5661, dt: 1289.21ms, fracRes: 0.7043, norm(attn): 0.2012, norm(output): 0.9363, norm(x): 0.7571, norm(y): 1.0054, norm:0.5530, tok/sec: 101668.14, flops:106.71, batch-reuse:1
@ 3475 train 4.4159 , allloss: 4.4160, dt: 1290.61ms, fracRes: 0.7045, norm(attn): 0.2021, norm(output): 0.9362, norm(x): 0.7566, norm(y): 1.0054, norm:0.6836, tok/sec: 101558.47, flops:106.60, batch-reuse:1
@ 3476 train 4.5255 , allloss: 4.5257, dt: 1286.45ms, fracRes: 0.7043, norm(attn): 0.2031, norm(output): 0.9363, norm(x): 0.7568, norm(y): 1.0056, norm:0.6258, tok/sec: 101886.97, flops:106.94, batch-reuse:1
@ 3477 train 4.4259 , allloss: 4.4260, dt: 1296.05ms, fracRes: 0.7040, norm(attn): 0.2041, norm(output): 0.9362, norm(x): 0.7567, norm(y): 1.0056, norm:0.5491, tok/sec: 101131.58, flops:106.15, batch-reuse:1
@ 3478 train 4.4996 , allloss: 4.4997, dt: 1289.24ms, fracRes: 0.7041, norm(attn): 0.2031, norm(output): 0.9361, norm(x): 0.7565, norm(y): 1.0055, norm:0.5349, tok/sec: 101665.84, flops:106.71, batch-reuse:1
@ 3479 train 4.4023 , allloss: 4.4024, dt: 1307.78ms, fracRes: 0.7039, norm(attn): 0.2031, norm(output): 0.9362, norm(x): 0.7571, norm(y): 1.0056, norm:0.5327, tok/sec: 100225.04, flops:105.20, batch-reuse:1
@ 3480 train 4.5328 , allloss: 4.5329, dt: 1313.73ms, fracRes: 0.7040, norm(attn): 0.2031, norm(output): 0.9363, norm(x): 0.7569, norm(y): 1.0057, norm:0.5974, tok/sec: 99770.86, flops:104.72, batch-reuse:1
@ 3481 train 4.5980 , allloss: 4.5981, dt: 1275.04ms, fracRes: 0.7039, norm(attn): 0.2031, norm(output): 0.9361, norm(x): 0.7569, norm(y): 1.0059, norm:0.6198, tok/sec: 102798.14, flops:107.90, batch-reuse:1
@ 3482 train 4.4917 , allloss: 4.4918, dt: 1321.64ms, fracRes: 0.7040, norm(attn): 0.2041, norm(output): 0.9361, norm(x): 0.7565, norm(y): 1.0058, norm:0.7613, tok/sec: 99174.06, flops:104.10, batch-reuse:1
@ 3483 train 4.4904 , allloss: 4.4906, dt: 1289.53ms, fracRes: 0.7040, norm(attn): 0.2031, norm(output): 0.9363, norm(x): 0.7567, norm(y): 1.0054, norm:0.6621, tok/sec: 101643.14, flops:106.69, batch-reuse:1
@ 3484 train 4.5110 , allloss: 4.5110, dt: 1319.17ms, fracRes: 0.7040, norm(attn): 0.2041, norm(output): 0.9363, norm(x): 0.7568, norm(y): 1.0054, norm:0.6109, tok/sec: 99359.72, flops:104.29, batch-reuse:1
@ 3485 train 4.4666 , allloss: 4.4668, dt: 1321.68ms, fracRes: 0.7039, norm(attn): 0.2041, norm(output): 0.9361, norm(x): 0.7570, norm(y): 1.0055, norm:0.5960, tok/sec: 99170.50, flops:104.09, batch-reuse:1
@ 3486 train 4.5217 , allloss: 4.5219, dt: 1297.47ms, fracRes: 0.7039, norm(attn): 0.2031, norm(output): 0.9362, norm(x): 0.7572, norm(y): 1.0054, norm:0.6940, tok/sec: 101020.86, flops:106.03, batch-reuse:1
@ 3487 train 4.3895 , allloss: 4.3896, dt: 1309.55ms, fracRes: 0.7039, norm(attn): 0.2021, norm(output): 0.9362, norm(x): 0.7568, norm(y): 1.0053, norm:0.7082, tok/sec: 100089.41, flops:105.06, batch-reuse:1
@ 3488 train 4.5076 , allloss: 4.5076, dt: 1324.43ms, fracRes: 0.7041, norm(attn): 0.2012, norm(output): 0.9362, norm(x): 0.7563, norm(y): 1.0055, norm:0.5792, tok/sec: 98965.11, flops:103.88, batch-reuse:1
@ 3489 train 4.5273 , allloss: 4.5274, dt: 1302.51ms, fracRes: 0.7043, norm(attn): 0.2021, norm(output): 0.9361, norm(x): 0.7567, norm(y): 1.0055, norm:0.6434, tok/sec: 100630.15, flops:105.62, batch-reuse:1
@ 3490 train 4.4595 , allloss: 4.4596, dt: 1329.30ms, fracRes: 0.7042, norm(attn): 0.2031, norm(output): 0.9363, norm(x): 0.7575, norm(y): 1.0053, norm:0.5881, tok/sec: 98602.19, flops:103.50, batch-reuse:1
@ 3491 train 4.4544 , allloss: 4.4545, dt: 1302.21ms, fracRes: 0.7042, norm(attn): 0.2031, norm(output): 0.9363, norm(x): 0.7574, norm(y): 1.0054, norm:0.5960, tok/sec: 100653.74, flops:105.65, batch-reuse:1
@ 3492 train 4.5028 , allloss: 4.5028, dt: 1323.06ms, fracRes: 0.7042, norm(attn): 0.2031, norm(output): 0.9363, norm(x): 0.7573, norm(y): 1.0053, norm:0.6092, tok/sec: 99067.42, flops:103.98, batch-reuse:1
@ 3493 train 4.4907 , allloss: 4.4908, dt: 1305.82ms, fracRes: 0.7041, norm(attn): 0.2031, norm(output): 0.9362, norm(x): 0.7574, norm(y): 1.0054, norm:0.6224, tok/sec: 100375.48, flops:105.36, batch-reuse:1
@ 3494 train 4.4911 , allloss: 4.4912, dt: 1301.82ms, fracRes: 0.7040, norm(attn): 0.2041, norm(output): 0.9363, norm(x): 0.7578, norm(y): 1.0054, norm:0.6561, tok/sec: 100683.62, flops:105.68, batch-reuse:1
@ 3495 train 4.4965 , allloss: 4.4967, dt: 1286.27ms, fracRes: 0.7041, norm(attn): 0.2021, norm(output): 0.9363, norm(x): 0.7583, norm(y): 1.0054, norm:0.5856, tok/sec: 101900.51, flops:106.96, batch-reuse:1
@ 3496 train 4.4993 , allloss: 4.4994, dt: 1285.07ms, fracRes: 0.7040, norm(attn): 0.2031, norm(output): 0.9364, norm(x): 0.7587, norm(y): 1.0053, norm:0.6742, tok/sec: 101996.04, flops:107.06, batch-reuse:1
@ 3497 train 4.4565 , allloss: 4.4566, dt: 1288.97ms, fracRes: 0.7039, norm(attn): 0.2021, norm(output): 0.9363, norm(x): 0.7589, norm(y): 1.0054, norm:0.7026, tok/sec: 101687.68, flops:106.73, batch-reuse:1
@ 3498 train 4.4690 , allloss: 4.4691, dt: 1301.51ms, fracRes: 0.7040, norm(attn): 0.2021, norm(output): 0.9362, norm(x): 0.7585, norm(y): 1.0052, norm:0.6170, tok/sec: 100707.54, flops:105.71, batch-reuse:1
@ 3499 train 4.4851 , allloss: 4.4852, dt: 1303.74ms, fracRes: 0.7040, norm(attn): 0.2012, norm(output): 0.9364, norm(x): 0.7585, norm(y): 1.0052, norm:0.6783, tok/sec: 100535.12, flops:105.52, batch-reuse:1
@ 3500 train 4.4358 , allloss: 4.4359, dt: 1320.72ms, fracRes: 0.7040, norm(attn): 0.2021, norm(output): 0.9360, norm(x): 0.7584, norm(y): 1.0054, norm:0.7415, tok/sec: 99243.02, flops:104.17, batch-reuse:1
@ 3501 train 4.3963 , allloss: 4.3964, dt: 1316.54ms, fracRes: 0.7039, norm(attn): 0.2031, norm(output): 0.9361, norm(x): 0.7570, norm(y): 1.0058, norm:0.7197, tok/sec: 99557.88, flops:104.50, batch-reuse:1
@ 3502 train 4.4585 , allloss: 4.4586, dt: 1336.47ms, fracRes: 0.7042, norm(attn): 0.2021, norm(output): 0.9361, norm(x): 0.7568, norm(y): 1.0057, norm:0.6786, tok/sec: 98073.38, flops:102.94, batch-reuse:1
@ 3503 train 4.4397 , allloss: 4.4398, dt: 1336.87ms, fracRes: 0.7038, norm(attn): 0.2031, norm(output): 0.9364, norm(x): 0.7590, norm(y): 1.0053, norm:0.6591, tok/sec: 98044.13, flops:102.91, batch-reuse:1
@ 3504 train 4.4212 , allloss: 4.4212, dt: 1306.72ms, fracRes: 0.7036, norm(attn): 0.2031, norm(output): 0.9363, norm(x): 0.7599, norm(y): 1.0052, norm:0.6556, tok/sec: 100306.04, flops:105.28, batch-reuse:1
@ 3505 train 4.3840 , allloss: 4.3841, dt: 1340.47ms, fracRes: 0.7039, norm(attn): 0.2041, norm(output): 0.9361, norm(x): 0.7590, norm(y): 1.0051, norm:0.6296, tok/sec: 97780.38, flops:102.63, batch-reuse:1
@ 3506 train 4.3753 , allloss: 4.3754, dt: 1338.62ms, fracRes: 0.7042, norm(attn): 0.2061, norm(output): 0.9360, norm(x): 0.7579, norm(y): 1.0054, norm:0.7411, tok/sec: 97915.63, flops:102.78, batch-reuse:1
@ 3507 train 4.4623 , allloss: 4.4624, dt: 1342.77ms, fracRes: 0.7040, norm(attn): 0.2051, norm(output): 0.9362, norm(x): 0.7574, norm(y): 1.0055, norm:0.7007, tok/sec: 97613.08, flops:102.46, batch-reuse:1
@ 3508 train 4.5361 , allloss: 4.5362, dt: 1302.10ms, fracRes: 0.7037, norm(attn): 0.2041, norm(output): 0.9363, norm(x): 0.7584, norm(y): 1.0052, norm:0.7196, tok/sec: 100662.33, flops:105.66, batch-reuse:1
@ 3509 train 4.5144 , allloss: 4.5145, dt: 1302.33ms, fracRes: 0.7034, norm(attn): 0.2051, norm(output): 0.9362, norm(x): 0.7587, norm(y): 1.0054, norm:0.7162, tok/sec: 100644.28, flops:105.64, batch-reuse:1
@ 3510 train 4.4425 , allloss: 4.4427, dt: 1298.49ms, fracRes: 0.7033, norm(attn): 0.2031, norm(output): 0.9362, norm(x): 0.7585, norm(y): 1.0053, norm:0.6419, tok/sec: 100942.16, flops:105.95, batch-reuse:1
@ 3511 train 4.5221 , allloss: 4.5223, dt: 1282.34ms, fracRes: 0.7036, norm(attn): 0.2021, norm(output): 0.9362, norm(x): 0.7580, norm(y): 1.0054, norm:0.6049, tok/sec: 102213.04, flops:107.29, batch-reuse:1
@ 3512 train 4.5065 , allloss: 4.5070, dt: 1300.48ms, fracRes: 0.7037, norm(attn): 0.2021, norm(output): 0.9361, norm(x): 0.7584, norm(y): 1.0056, norm:0.7363, tok/sec: 100787.71, flops:105.79, batch-reuse:1
@ 3513 train 4.4659 , allloss: 4.4672, dt: 1309.44ms, fracRes: 0.7036, norm(attn): 0.2021, norm(output): 0.9363, norm(x): 0.7590, norm(y): 1.0055, norm:0.7210, tok/sec: 100097.81, flops:105.07, batch-reuse:1
@ 3514 train 4.6114 , allloss: 4.6118, dt: 1307.37ms, fracRes: 0.7036, norm(attn): 0.2012, norm(output): 0.9364, norm(x): 0.7598, norm(y): 1.0052, norm:0.6444, tok/sec: 100256.54, flops:105.23, batch-reuse:1
@ 3515 train 4.4423 , allloss: 4.4425, dt: 1288.79ms, fracRes: 0.7035, norm(attn): 0.2021, norm(output): 0.9364, norm(x): 0.7603, norm(y): 1.0051, norm:0.6502, tok/sec: 101701.48, flops:106.75, batch-reuse:1
@ 3516 train 4.5773 , allloss: 4.5774, dt: 1306.81ms, fracRes: 0.7037, norm(attn): 0.2031, norm(output): 0.9366, norm(x): 0.7601, norm(y): 1.0053, norm:0.7265, tok/sec: 100299.14, flops:105.28, batch-reuse:1
@ 3517 train 4.4936 , allloss: 4.4938, dt: 1282.42ms, fracRes: 0.7038, norm(attn): 0.2041, norm(output): 0.9365, norm(x): 0.7594, norm(y): 1.0053, norm:0.8226, tok/sec: 102206.73, flops:107.28, batch-reuse:1
@ 3518 train 4.5891 , allloss: 4.5893, dt: 1307.29ms, fracRes: 0.7039, norm(attn): 0.2041, norm(output): 0.9364, norm(x): 0.7585, norm(y): 1.0053, norm:0.8790, tok/sec: 100262.66, flops:105.24, batch-reuse:1
@ 3519 train 4.4099 , allloss: 4.4101, dt: 1282.94ms, fracRes: 0.7038, norm(attn): 0.2031, norm(output): 0.9363, norm(x): 0.7582, norm(y): 1.0051, norm:0.7103, tok/sec: 102165.31, flops:107.24, batch-reuse:1
@ 3520 train 4.4333 , allloss: 4.4333, dt: 1279.33ms, fracRes: 0.7038, norm(attn): 0.2031, norm(output): 0.9363, norm(x): 0.7577, norm(y): 1.0052, norm:0.6929, tok/sec: 102454.03, flops:107.54, batch-reuse:1
@ 3521 train 4.4655 , allloss: 4.4657, dt: 1301.06ms, fracRes: 0.7037, norm(attn): 0.2041, norm(output): 0.9362, norm(x): 0.7578, norm(y): 1.0051, norm:0.6723, tok/sec: 100742.73, flops:105.74, batch-reuse:1
@ 3522 train 4.5325 , allloss: 4.5326, dt: 1301.57ms, fracRes: 0.7037, norm(attn): 0.2031, norm(output): 0.9371, norm(x): 0.7594, norm(y): 1.0046, norm:1.1191, tok/sec: 100702.67, flops:105.70, batch-reuse:1
@ 3523 train 4.4980 , allloss: 4.4981, dt: 1307.64ms, fracRes: 0.7037, norm(attn): 0.2021, norm(output): 0.9367, norm(x): 0.7601, norm(y): 1.0049, norm:1.0804, tok/sec: 100235.86, flops:105.21, batch-reuse:1
@ 3524 train 4.5338 , allloss: 4.5342, dt: 1313.13ms, fracRes: 0.7038, norm(attn): 0.2021, norm(output): 0.9365, norm(x): 0.7600, norm(y): 1.0050, norm:0.7746, tok/sec: 99816.77, flops:104.77, batch-reuse:1
@ 3525 train 4.5082 , allloss: 4.5085, dt: 1319.91ms, fracRes: 0.7036, norm(attn): 0.2031, norm(output): 0.9364, norm(x): 0.7603, norm(y): 1.0049, norm:0.6811, tok/sec: 99303.90, flops:104.23, batch-reuse:1
@ 3526 train 4.6454 , allloss: 4.6456, dt: 1313.73ms, fracRes: 0.7035, norm(attn): 0.2041, norm(output): 0.9366, norm(x): 0.7609, norm(y): 1.0053, norm:0.7114, tok/sec: 99770.52, flops:104.72, batch-reuse:1
@ 3527 train 4.6664 , allloss: 4.6665, dt: 1335.10ms, fracRes: 0.7034, norm(attn): 0.2041, norm(output): 0.9368, norm(x): 0.7607, norm(y): 1.0054, norm:0.7217, tok/sec: 98174.17, flops:103.05, batch-reuse:1
@ 3528 train 4.6806 , allloss: 4.6806, dt: 1330.85ms, fracRes: 0.7036, norm(attn): 0.2031, norm(output): 0.9367, norm(x): 0.7595, norm(y): 1.0053, norm:0.6677, tok/sec: 98487.25, flops:103.38, batch-reuse:1
@ 3529 train 4.7168 , allloss: 4.7168, dt: 1337.83ms, fracRes: 0.7037, norm(attn): 0.2031, norm(output): 0.9366, norm(x): 0.7584, norm(y): 1.0053, norm:0.6538, tok/sec: 97973.23, flops:102.84, batch-reuse:1
@ 3530 train 4.7080 , allloss: 4.7082, dt: 1328.51ms, fracRes: 0.7036, norm(attn): 0.2031, norm(output): 0.9365, norm(x): 0.7585, norm(y): 1.0054, norm:0.7517, tok/sec: 98660.85, flops:103.56, batch-reuse:1
@ 3531 train 4.7853 , allloss: 4.7853, dt: 1305.85ms, fracRes: 0.7035, norm(attn): 0.2021, norm(output): 0.9367, norm(x): 0.7594, norm(y): 1.0053, norm:0.7759, tok/sec: 100372.73, flops:105.35, batch-reuse:1
@ 3532 train 4.6836 , allloss: 4.6837, dt: 1330.65ms, fracRes: 0.7035, norm(attn): 0.2021, norm(output): 0.9365, norm(x): 0.7597, norm(y): 1.0052, norm:0.7620, tok/sec: 98502.12, flops:103.39, batch-reuse:1
@ 3533 train 4.7784 , allloss: 4.7785, dt: 1318.99ms, fracRes: 0.7037, norm(attn): 0.1992, norm(output): 0.9366, norm(x): 0.7594, norm(y): 1.0052, norm:0.6730, tok/sec: 99373.06, flops:104.31, batch-reuse:1
@ 3534 train 4.6361 , allloss: 4.6363, dt: 1286.10ms, fracRes: 0.7038, norm(attn): 0.2031, norm(output): 0.9365, norm(x): 0.7591, norm(y): 1.0052, norm:0.6348, tok/sec: 101914.23, flops:106.97, batch-reuse:1
@ 3535 train 4.8287 , allloss: 4.8289, dt: 1306.33ms, fracRes: 0.7039, norm(attn): 0.2070, norm(output): 0.9364, norm(x): 0.7589, norm(y): 1.0053, norm:0.9462, tok/sec: 100336.41, flops:105.32, batch-reuse:1
@ 3536 train 4.6564 , allloss: 4.6566, dt: 1336.67ms, fracRes: 0.7036, norm(attn): 0.2041, norm(output): 0.9366, norm(x): 0.7600, norm(y): 1.0053, norm:1.1865, tok/sec: 98058.68, flops:102.93, batch-reuse:1
@ 3537 train 4.7328 , allloss: 4.7329, dt: 1321.74ms, fracRes: 0.7036, norm(attn): 0.2031, norm(output): 0.9368, norm(x): 0.7603, norm(y): 1.0050, norm:0.7967, tok/sec: 99166.10, flops:104.09, batch-reuse:1
@ 3538 train 4.6348 , allloss: 4.6349, dt: 1290.83ms, fracRes: 0.7035, norm(attn): 0.2031, norm(output): 0.9366, norm(x): 0.7595, norm(y): 1.0048, norm:0.8022, tok/sec: 101540.80, flops:106.58, batch-reuse:1
@ 3539 train 4.6428 , allloss: 4.6429, dt: 1297.07ms, fracRes: 0.7034, norm(attn): 0.2031, norm(output): 0.9365, norm(x): 0.7592, norm(y): 1.0052, norm:0.7005, tok/sec: 101052.05, flops:106.07, batch-reuse:1
@ 3540 train 4.6745 , allloss: 4.6747, dt: 1315.48ms, fracRes: 0.7035, norm(attn): 0.2031, norm(output): 0.9364, norm(x): 0.7587, norm(y): 1.0055, norm:0.7185, tok/sec: 99638.03, flops:104.58, batch-reuse:1
@ 3541 train 4.6820 , allloss: 4.6821, dt: 1301.51ms, fracRes: 0.7037, norm(attn): 0.2031, norm(output): 0.9365, norm(x): 0.7585, norm(y): 1.0053, norm:0.6958, tok/sec: 100707.28, flops:105.71, batch-reuse:1
@ 3542 train 4.6718 , allloss: 4.6719, dt: 1310.55ms, fracRes: 0.7037, norm(attn): 0.2041, norm(output): 0.9365, norm(x): 0.7589, norm(y): 1.0052, norm:0.6028, tok/sec: 100013.12, flops:104.98, batch-reuse:1
@ 3543 train 4.7625 , allloss: 4.7627, dt: 1347.68ms, fracRes: 0.7037, norm(attn): 0.2041, norm(output): 0.9367, norm(x): 0.7597, norm(y): 1.0049, norm:0.7392, tok/sec: 97257.36, flops:102.08, batch-reuse:1
@ 3544 train 4.6047 , allloss: 4.6048, dt: 1306.93ms, fracRes: 0.7036, norm(attn): 0.2041, norm(output): 0.9366, norm(x): 0.7602, norm(y): 1.0050, norm:0.7370, tok/sec: 100289.71, flops:105.27, batch-reuse:1
@ 3545 train 4.6514 , allloss: 4.6515, dt: 1299.00ms, fracRes: 0.7038, norm(attn): 0.2031, norm(output): 0.9367, norm(x): 0.7602, norm(y): 1.0051, norm:0.5703, tok/sec: 100902.18, flops:105.91, batch-reuse:1
@ 3546 train 4.5907 , allloss: 4.5908, dt: 1290.90ms, fracRes: 0.7038, norm(attn): 0.2021, norm(output): 0.9364, norm(x): 0.7595, norm(y): 1.0053, norm:0.6610, tok/sec: 101535.66, flops:106.58, batch-reuse:1
@ 3547 train 4.6101 , allloss: 4.6102, dt: 1283.30ms, fracRes: 0.7038, norm(attn): 0.2002, norm(output): 0.9365, norm(x): 0.7595, norm(y): 1.0054, norm:0.6823, tok/sec: 102136.78, flops:107.21, batch-reuse:1
@ 3548 train 4.6181 , allloss: 4.6182, dt: 1317.91ms, fracRes: 0.7040, norm(attn): 0.2002, norm(output): 0.9367, norm(x): 0.7596, norm(y): 1.0052, norm:0.5922, tok/sec: 99454.08, flops:104.39, batch-reuse:1
@ 3549 train 4.6177 , allloss: 4.6179, dt: 1324.82ms, fracRes: 0.7040, norm(attn): 0.2002, norm(output): 0.9367, norm(x): 0.7597, norm(y): 1.0051, norm:0.5984, tok/sec: 98935.72, flops:103.85, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0107, -0.0488, -0.0090,  ..., -0.0146, -0.0005,  0.0348],
        [ 0.0061, -0.0441, -0.0210,  ..., -0.0629, -0.0083,  0.0305],
        [-0.0023, -0.0597,  0.0169,  ..., -0.0058,  0.0118,  0.0515],
        ...,
        [ 0.0171,  0.0719, -0.0179,  ...,  0.0129, -0.0254,  0.0046],
        [-0.0068, -0.0136,  0.0671,  ...,  0.0061,  0.0447,  0.0279],
        [ 0.0207, -0.0247,  0.0500,  ..., -0.0208,  0.0507, -0.0074]], device='cuda:0', requires_grad=True)
K: tensor([ 5.3125, -3.8438,  1.4375,  4.0000, -4.8125,  3.6406, -1.0391,  5.7500, -4.7500, -0.0280, -3.1719, -3.9219,  5.1562, -4.4062,  1.0078, -0.5391, -1.1250, -4.1562,  5.3438, -6.3750,  5.5312,  3.8438, -6.5312,  0.1221, -2.5938, -0.8516,  3.0000, -3.8125, -4.8125, -3.0781,  5.6875,  1.0781,
         3.4219,  5.0625, -2.3281, -3.9531,  2.6719,  3.1406, -2.4375, -4.3750,  4.8125, -2.0000, -0.5078, -2.3906, -4.0625, -3.3438,  0.3027,  3.4062, -1.4609,  2.1875,  3.3125, -3.9062, -5.4062,  5.5625,  3.0156, -3.0469,  4.6562,  3.7500, -2.0312, -2.8125, -2.9375, -0.0767, -2.5156, -1.4375],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0831,  0.0861, -0.0022,  ..., -0.0263, -0.0375, -0.0187],
        [-0.0683,  0.0941,  0.0011,  ...,  0.0254, -0.0045,  0.0176],
        [-0.0683,  0.0835, -0.0165,  ..., -0.0567, -0.0740,  0.0011],
        ...,
        [ 0.0396, -0.0101,  0.0007,  ...,  0.0175, -0.0117, -0.0013],
        [-0.0256,  0.0152, -0.0307,  ...,  0.0296, -0.0072,  0.0287],
        [-0.0160,  0.0413,  0.0104,  ...,  0.0080, -0.0183, -0.0387]], device='cuda:0', requires_grad=True)
Q: tensor([-1.5156,  6.0938, -9.0625, -5.1250,  4.0625, -4.6250, -2.4688, -5.5312,  5.1875, -6.8125,  1.4922,  4.7500, -7.6562,  4.8125, -7.3125,  5.0938,  5.8750,  5.9688, -4.4062,  7.2188, -4.7812, -5.0625,  5.6875, -5.1562, -3.0000, -5.6875, -6.4688,  2.9844,  4.0312,  8.2500, -5.1250, -6.1875,
        -7.1562, -4.2500, -3.5625,  2.3438, -9.2500, -4.6875,  5.6875,  2.9219, -2.7344,  0.8477,  6.7500, -1.4375,  5.0625,  3.3594, -7.0625, -6.9688,  7.4688,  0.1592, -3.6250,  5.9062,  4.5312, -6.1250, -2.6094, -0.4355, -3.5781,  2.9531, -1.7734,  9.2500,  2.1562, -5.0312,  6.0312,  7.3125],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[   0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000],
        [   0.0000,   99.0000,  145.0000,  114.5000,   78.0000,   83.0000,   63.7500,  130.0000,   91.0000,   76.5000,   80.5000,  103.0000,   77.0000,   89.5000,  100.0000],
        [   0.0000,  -65.0000, -109.5000,  -92.5000,  -68.5000,  -68.5000,  -46.2500,  -94.5000,  -75.0000,  -62.2500,  -70.0000,  -73.5000,  -53.2500,  -72.0000,  -77.0000],
        [   0.0000, -107.0000, -172.0000, -145.0000, -105.5000, -106.5000,  -75.0000, -151.0000, -117.5000,  -97.5000, -109.5000, -119.0000,  -85.0000, -113.5000, -123.0000],
        [   0.0000, -112.5000, -179.0000, -148.0000, -107.5000, -109.0000,  -73.5000, -154.0000, -120.5000,  -99.0000, -111.5000, -118.0000,  -86.0000, -115.5000, -123.5000],
        [   0.0000,  -94.0000, -151.0000, -125.5000,  -92.0000,  -94.0000,  -65.0000, -132.0000, -102.5000,  -85.0000,  -94.5000, -102.5000,  -76.0000,  -98.5000, -105.0000],
        [   0.0000,  -71.0000, -113.0000,  -93.0000,  -67.0000,  -69.0000,  -45.7500,  -97.0000,  -75.5000,  -62.0000,  -69.0000,  -74.0000,  -54.0000,  -72.0000,  -77.5000],
        [   0.0000,  -84.5000, -139.0000, -117.5000,  -87.5000,  -88.0000,  -62.0000, -122.5000,  -96.5000,  -81.0000,  -90.0000,  -97.5000,  -71.0000,  -93.0000, -100.5000],
        [   0.0000,  -94.0000, -149.0000, -123.0000,  -88.5000,  -90.0000,  -60.7500, -129.0000, -100.0000,  -82.0000,  -91.5000,  -97.5000,  -72.0000,  -95.5000, -101.5000],
        [   0.0000, -101.5000, -161.0000, -134.0000,  -98.0000,  -99.5000,  -69.5000, -139.0000, -110.0000,  -90.0000, -102.5000, -109.5000,  -77.0000, -106.0000, -114.5000],
        [   0.0000, -103.5000, -162.0000, -132.0000,  -93.5000,  -95.5000,  -64.0000, -138.0000, -107.0000,  -87.5000,  -98.5000, -104.0000,  -75.0000, -101.5000, -110.0000],
        [   0.0000,  -96.0000, -154.0000, -130.0000,  -95.0000,  -96.5000,  -67.0000, -134.0000, -106.0000,  -87.0000,  -99.0000, -106.0000,  -74.5000, -102.0000, -111.0000],
        [   0.0000,  -78.5000, -129.0000, -110.0000,  -82.5000,  -82.5000,  -59.0000, -113.5000,  -90.5000,  -75.0000,  -85.0000,  -91.5000,  -66.0000,  -88.0000,  -94.0000],
        [   0.0000, -104.0000, -162.0000, -133.0000,  -94.0000,  -96.5000,  -64.5000, -141.0000, -107.0000,  -88.0000,  -98.0000, -105.5000,  -77.5000, -102.5000, -110.0000],
        [   0.0000, -100.0000, -158.0000, -130.0000,  -94.0000,  -96.0000,  -66.5000, -136.0000, -106.5000,  -87.0000,  -98.5000, -106.0000,  -75.0000, -102.0000, -111.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9167],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0309,     0.9531,     0.0178,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8828,     0.0042,     0.1035,     0.0085,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9180,     0.0317,     0.0065,     0.0391,     0.0063,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9375,     0.0194,     0.0208,     0.0145,     0.0070,     0.0015,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8086,     0.0508,     0.0957,     0.0031,     0.0011,     0.0214,     0.0186,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4180,     0.0138,     0.4453,     0.0111,     0.0007,     0.0066,     0.0236,     0.0811,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8750,     0.0170,     0.0219,     0.0270,     0.0019,     0.0029,     0.0320,     0.0176,     0.0037,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6367,     0.0067,     0.0835,     0.0388,     0.0040,     0.0031,     0.0322,     0.1079,     0.0008,     0.0850,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7656,     0.0515,     0.0405,     0.0081,     0.0085,     0.0126,     0.0327,     0.0559,     0.0076,     0.0131,     0.0032,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2168,     0.0055,     0.0728,     0.0053,     0.0004,     0.0054,     0.0094,     0.6289,     0.0001,     0.0024,     0.0005,     0.0527,     0.0000,     0.0000,     0.0000],
        [    0.2539,     0.0037,     0.0304,     0.0962,     0.0356,     0.0107,     0.1377,     0.0131,     0.0209,     0.0579,     0.2246,     0.0986,     0.0171,     0.0000,     0.0000],
        [    0.8711,     0.0097,     0.0108,     0.0337,     0.0027,     0.0029,     0.0299,     0.0100,     0.0052,     0.0044,     0.0035,     0.0100,     0.0057,     0.0018,     0.0000],
        [    0.1660,     0.0103,     0.0302,     0.0004,     0.0000,     0.0037,     0.0015,     0.1943,     0.0003,     0.0023,     0.0002,     0.0276,     0.5586,     0.0002,     0.0035]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0317,  0.0258,  0.0106,  ...,  0.0032,  0.0153,  0.0109],
        [ 0.0013,  0.0051,  0.0539,  ..., -0.0113, -0.0009,  0.0358],
        [-0.0022,  0.0127,  0.0050,  ..., -0.0236,  0.0247,  0.0152],
        ...,
        [ 0.0462,  0.0024,  0.0484,  ...,  0.0152,  0.0295, -0.0464],
        [-0.0089,  0.0386, -0.0182,  ..., -0.0212,  0.0239,  0.0301],
        [-0.0203, -0.0312,  0.0162,  ..., -0.0109, -0.0012,  0.0423]], device='cuda:0', requires_grad=True)
K: tensor([-2.6250, -1.6328, -0.9297,  1.5469, -2.9375, -1.1094, -1.0000,  0.2080, -1.5234, -0.9219,  0.1299,  0.7695,  1.5469,  0.4902, -0.6562, -1.8281, -1.5469,  1.1562, -0.2236, -2.2812, -0.1104,  0.0649, -0.2266,  0.9688,  0.8516,  0.5000, -1.5078, -0.7383,  1.8750,  1.7891, -0.5977,  0.7461,
        -2.7656,  0.2207, -0.2285,  1.0078, -0.3789, -0.8320,  0.3828,  0.3867, -1.4766,  2.6562,  0.3867,  3.2344, -2.7812, -2.5156, -3.0625, -1.0391, -0.4648, -0.3418,  0.4102,  0.1963, -1.7344,  0.9531, -0.3223, -0.6133,  0.4609,  1.3906,  0.5508, -0.9961, -1.2734, -0.4688,  3.4375, -0.9180],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0089,  0.0074, -0.0233,  ..., -0.0090, -0.0031, -0.0390],
        [-0.0080,  0.0088, -0.0048,  ..., -0.0326, -0.0282,  0.0402],
        [ 0.0039, -0.0208,  0.0603,  ..., -0.0175,  0.0183,  0.0050],
        ...,
        [-0.0079, -0.0023, -0.0351,  ...,  0.0057,  0.0162,  0.0500],
        [ 0.0174,  0.0022, -0.0107,  ...,  0.0413,  0.0143, -0.0134],
        [-0.0329,  0.0296,  0.0250,  ...,  0.0021,  0.0026,  0.0440]], device='cuda:0', requires_grad=True)
Q: tensor([     1.8594,     -0.1240,     -0.1001,     -3.0000,      1.1641,      0.0659,      1.0859,     -1.1016,     -1.3984,      0.1338,      0.8281,      0.7930,      0.3711,      2.4219,      2.5469,     -0.8750,      2.8906,     -2.1406,     -1.0000,      2.4375,      0.4453,     -0.2539,
             0.4316,      2.8125,      1.7344,      0.3672,     -0.6289,      0.0017,      1.9453,     -3.0312,      0.5039,      0.6055,     -0.5859,     -0.3066,      1.9844,     -1.5078,      0.0781,      2.4688,     -0.5273,     -0.3379,     -1.4922,     -2.9531,     -2.0156,      1.4766,
             1.2734,      0.0640,      1.3984,     -1.5859,      2.0312,     -0.7734,      0.7812,      1.0078,     -0.3438,     -1.4688,     -2.2969,     -0.8789,      0.4805,     -0.5898,     -1.1797,     -2.5000,      0.0977,     -0.5156,     -0.9961,      0.0327], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  8.3125,  4.0312, -3.9844, -2.3750,  2.2812,  0.3281,  2.7188,  1.0781, -1.8594, -4.2812,  1.7656,  5.5312,  0.6523,  0.3789],
        [ 0.0000,  3.4219, -0.5547, -4.1250, -2.2344, -0.0635, -1.0625,  2.8438, -1.7422, -1.7031, -1.9453,  1.5859,  4.3125, -1.2578, -1.0000],
        [ 0.0000, -5.3750, -2.1406, -4.6562, -7.6875, -4.9062, -5.8438, -2.5156, -6.1875, -5.5000, -6.0938, -2.7969, -2.2031, -6.5312, -3.7344],
        [ 0.0000, -3.3594, -4.9688, -3.1562, -4.9688, -3.9219, -3.3594, -3.4219, -4.7500, -4.9375, -3.7031, -4.7500, -4.0625, -5.2188, -5.2812],
        [ 0.0000, -3.8750, -3.8125, -4.1875, -4.9062, -6.4375, -3.3281, -4.1250, -5.0625, -4.3438, -5.7500, -3.9062, -4.4062, -5.4375, -5.2188],
        [ 0.0000, -2.7656, -2.1406, -5.5625, -6.6250, -3.6406, -3.7812, -3.0938, -4.5625, -4.7188, -4.7500, -3.0781, -2.2031, -5.2188, -3.6719],
        [ 0.0000, -3.4062,  0.0640, -3.6250, -6.4062, -4.1562, -2.8750, -1.6406, -6.6875, -4.3125, -5.4062, -3.1406, -0.4219, -7.9062, -3.9062],
        [ 0.0000, -3.9375, -3.6875, -3.4844, -6.1250, -5.7188, -3.3125, -3.9062, -5.4688, -5.2812, -6.7812, -4.3438, -4.9062, -5.9062, -7.0312],
        [ 0.0000, -4.5625, -2.0312, -2.7969, -5.0938, -5.3125, -2.9844, -1.7734, -6.6875, -2.0156, -6.2188, -1.7422, -0.8867, -7.8438, -5.1562],
        [ 0.0000, -2.7031, -2.9375, -4.5625, -4.5000, -4.0938, -3.1562, -2.6250, -4.6250, -4.0625, -5.5000, -3.2031, -3.0469, -5.1562, -6.5312],
        [ 0.0000, -3.6719, -1.0938, -3.7188, -6.4375, -3.6875, -3.1406,  1.0625, -7.7812, -4.5000, -6.0312, -1.4141,  2.5312, -8.8125, -3.5781],
        [ 0.0000, -4.2188, -2.1250, -0.9688, -1.9609, -3.1719, -0.6133, -2.9688, -2.5000, -1.4766, -0.1245, -0.9453, -2.7031, -3.0938, -0.2852],
        [ 0.0000, -4.5000, -4.4062, -3.2500, -5.7500, -5.6875, -3.3750, -4.4688, -5.1250, -5.2812, -5.5000, -4.4688, -5.0312, -6.1562, -6.4062],
        [ 0.0000, -2.7812, -1.7109, -6.1250, -8.6875, -3.8125, -4.6875,  0.1572, -6.4688, -4.2812, -6.8438, -1.7969,  1.2109, -6.6250, -3.8750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7886],
        [0.5865],
        [0.3958],
        [0.5434],
        [0.6296],
        [0.2975],
        [0.4285],
        [0.3541],
        [0.3128],
        [0.2551],
        [0.2567],
        [0.3170],
        [0.3044],
        [0.0891]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0285, -0.0073,  0.0050,  ...,  0.0158, -0.0663, -0.0124],
        [-0.0478, -0.0274,  0.0053,  ...,  0.0317, -0.0639, -0.0283],
        [ 0.0192,  0.0103, -0.0130,  ...,  0.0417,  0.0238, -0.0101],
        ...,
        [-0.0129, -0.0180, -0.0058,  ...,  0.0537, -0.0290, -0.0168],
        [-0.0243, -0.0157,  0.0167,  ...,  0.0178,  0.0026, -0.0019],
        [ 0.0056, -0.0373, -0.0284,  ...,  0.0529, -0.0330, -0.0587]], device='cuda:0', requires_grad=True)
K: tensor([ 3.1094, -4.0000, -2.5312, -3.0312,  4.5938, -3.4375,  4.7500,  3.2344,  3.5469, -4.7812,  3.0625, -4.4688, -4.9062,  4.2812,  2.4062, -2.4375,  1.4609,  4.5312, -1.2031, -4.0938,  4.4688,  5.6562,  3.2969, -2.3594, -3.5625,  4.8125, -3.4219, -5.1250, -2.3594,  3.3281, -4.1250,  2.9219,
         2.5469, -2.8750, -3.2500,  0.3320,  0.8711, -3.6875,  3.0938, -3.6094, -3.6406,  1.9062,  2.4062, -2.9531, -3.1094,  3.3750, -3.6406,  3.4062, -4.8125, -3.2656, -3.3438,  3.2969,  2.5781,  3.5312,  2.0000, -4.9688, -3.4375,  2.7969, -0.9102, -2.2188,  3.1562,  3.1719, -1.3281,  2.7500],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0100,  0.0097,  0.0133,  ..., -0.0017,  0.0163,  0.0427],
        [ 0.0412,  0.0237, -0.0171,  ..., -0.0384,  0.0006,  0.0095],
        [-0.0002, -0.0246, -0.0019,  ..., -0.0263,  0.0412,  0.0330],
        ...,
        [-0.0115, -0.0060, -0.0502,  ..., -0.0106,  0.0407,  0.0089],
        [ 0.0189,  0.0008, -0.0212,  ...,  0.0242, -0.0223, -0.0159],
        [-0.0041,  0.0036,  0.0063,  ..., -0.0226, -0.0011,  0.0515]], device='cuda:0', requires_grad=True)
Q: tensor([-1.8828,  4.1250,  4.5312,  3.7344, -3.5312,  4.1875, -3.4531, -5.1562, -3.7656,  4.3125, -3.8125,  5.3438,  4.3750, -3.8125, -3.7812,  3.8594, -1.3984, -5.9062,  0.7344,  5.7500, -4.8438, -4.3438, -4.5938,  1.5938,  5.5000, -5.4688,  3.0938,  4.1250,  3.9844, -3.8125,  3.4062, -3.7969,
        -4.3125,  2.5781,  4.0625, -2.2188, -1.2266,  3.0156, -5.2500,  1.9766,  4.6875, -0.9023, -3.3281,  3.8125,  2.7031, -4.6250,  3.5938, -3.0312,  3.9688,  5.0000,  5.1875, -4.6562, -2.7656, -3.8906, -2.5625,  4.5312,  4.6875, -1.6719,  1.7734,  2.9688, -3.0156, -5.2188,  1.0234, -2.4062],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[   0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000],
        [   0.0000,  -51.2500,  -54.5000,  -98.5000,  -93.5000,  -79.0000,  -82.5000, -120.0000,  -79.5000,  -94.0000,  -81.5000,  -88.5000, -104.5000,  -76.0000,  -76.5000],
        [   0.0000,  -57.2500,  -63.2500, -115.5000, -106.5000,  -90.0000,  -94.0000, -140.0000,  -90.0000, -111.0000,  -93.0000, -102.0000, -121.5000,  -86.0000,  -88.0000],
        [   0.0000,  -92.5000, -103.5000, -192.0000, -174.0000, -146.0000, -152.0000, -228.0000, -144.0000, -184.0000, -151.0000, -166.0000, -199.0000, -137.0000, -141.0000],
        [   0.0000,  -79.5000,  -86.5000, -159.0000, -148.0000, -124.5000, -130.0000, -192.0000, -123.5000, -153.0000, -128.0000, -141.0000, -168.0000, -118.5000, -120.0000],
        [   0.0000,  -71.5000,  -77.5000, -143.0000, -132.0000, -112.5000, -117.0000, -172.0000, -111.5000, -137.0000, -115.0000, -125.5000, -150.0000, -106.5000, -108.0000],
        [   0.0000,  -71.0000,  -77.5000, -142.0000, -133.0000, -112.0000, -117.5000, -173.0000, -111.5000, -137.0000, -115.5000, -126.5000, -150.0000, -106.5000, -108.5000],
        [   0.0000, -114.5000, -127.0000, -233.0000, -213.0000, -180.0000, -188.0000, -282.0000, -178.0000, -224.0000, -185.0000, -204.0000, -245.0000, -170.0000, -175.0000],
        [   0.0000,  -63.5000,  -69.5000, -127.5000, -118.0000, -100.0000, -104.0000, -154.0000,  -99.5000, -122.5000, -102.5000, -113.0000, -135.0000,  -95.5000,  -96.0000],
        [   0.0000,  -88.0000,  -98.5000, -183.0000, -165.0000, -139.0000, -144.0000, -218.0000, -136.0000, -176.0000, -142.0000, -158.0000, -190.0000, -129.0000, -134.0000],
        [   0.0000,  -69.5000,  -76.5000, -142.0000, -132.0000, -110.5000, -115.5000, -170.0000, -110.0000, -136.0000, -114.0000, -125.0000, -149.0000, -105.0000, -106.0000],
        [   0.0000,  -81.0000,  -91.0000, -167.0000, -152.0000, -127.5000, -133.0000, -200.0000, -125.0000, -161.0000, -131.0000, -146.0000, -175.0000, -119.5000, -123.5000],
        [   0.0000,  -98.5000, -109.5000, -201.0000, -183.0000, -155.0000, -161.0000, -242.0000, -152.0000, -193.0000, -158.0000, -176.0000, -211.0000, -145.0000, -150.0000],
        [   0.0000,  -60.5000,  -66.0000, -121.5000, -112.5000,  -95.5000,  -99.5000, -147.0000,  -95.0000, -116.5000,  -97.5000, -107.5000, -128.0000,  -91.0000,  -91.5000],
        [   0.0000,  -65.5000,  -72.5000, -135.0000, -124.5000, -104.5000, -109.5000, -164.0000, -103.5000, -130.0000, -107.0000, -119.0000, -142.0000,  -99.0000, -101.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[     0.0392,      0.0175,      0.0202,  ...,      0.0061,     -0.0011,     -0.0240],
        [    -0.0037,      0.0188,      0.0212,  ...,      0.0294,      0.0062,      0.0281],
        [     0.0312,      0.0046,     -0.0009,  ...,     -0.0009,      0.0379,      0.0027],
        ...,
        [    -0.0217,     -0.0283,     -0.0143,  ...,      0.0131,     -0.0259,      0.0105],
        [    -0.0083,      0.0067,     -0.0211,  ...,     -0.0180,     -0.0282,     -0.0244],
        [     0.0235,      0.0000,     -0.0047,  ...,      0.0133,      0.0133,      0.0064]], device='cuda:0', requires_grad=True)
K: tensor([-2.5938,  0.8594, -2.0625,  1.5078, -1.0078, -2.0312, -0.9141,  2.5781,  0.1475, -0.3086,  0.7852,  0.7734, -1.6406, -2.8750,  1.9297,  1.9141,  3.0469, -2.0312, -2.1250,  1.5078,  1.5156, -2.3438, -2.8750,  2.7969, -2.1406,  2.5469, -0.5508, -1.2734,  0.2891, -1.4297,  0.0378, -2.2031,
        -1.4297, -2.2656,  1.6172, -2.6250, -2.5938,  0.2168,  2.3750,  1.8594, -2.0625,  0.1021,  0.9102, -2.1875,  1.5234,  2.7188,  0.0253, -1.4453, -1.9062,  2.2188,  2.2969,  0.7969,  0.1289, -2.0625, -1.1016, -1.9297,  2.4688,  2.1250, -2.1406, -1.6875, -1.2109,  3.0000, -0.9219, -3.0625],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0289,  0.0136, -0.0057,  ...,  0.0180, -0.0218, -0.0196],
        [-0.0105, -0.0091,  0.0074,  ...,  0.0085, -0.0171, -0.0016],
        [ 0.0022,  0.0110, -0.0019,  ..., -0.0013,  0.0165,  0.0025],
        ...,
        [-0.0248,  0.0062, -0.0093,  ..., -0.0127,  0.0263,  0.0096],
        [-0.0330,  0.0297, -0.0048,  ...,  0.0046,  0.0010, -0.0269],
        [ 0.0024, -0.0110, -0.0392,  ...,  0.0022, -0.0049,  0.0153]], device='cuda:0', requires_grad=True)
Q: tensor([     2.9375,     -2.3281,      1.0000,     -0.3047,     -0.0021,      2.1406,      1.1719,     -3.5938,     -1.4531,     -0.9414,      0.1758,      1.2734,      1.2656,      1.7188,     -2.1250,     -2.0781,     -3.2031,      2.2500,      1.7109,     -2.8125,     -1.6094,      3.4531,
             3.0625,     -2.1562,      2.4062,     -2.9844,     -0.4141,      0.8398,      1.0234,      0.3438,      0.7266,      1.7500,     -0.2139,      1.9375,     -1.4219,      2.4531,      2.2812,     -1.6641,     -2.7969,     -3.0938,      2.7188,     -2.4531,     -2.6406,      2.3438,
            -1.6172,     -1.6016,     -2.9688,      0.7617,      1.6172,     -1.9219,     -1.7031,      0.8086,      2.6875,      2.9844,      0.1875,      2.8750,     -2.7188,     -1.8281,      2.2500,      1.9375,      1.1172,     -3.6875,      3.1719,      1.6797], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000, -19.8750, -17.6250, -20.3750, -18.3750, -19.0000, -18.6250, -19.0000, -19.2500, -18.8750, -19.6250, -20.0000, -20.2500, -20.5000, -21.3750],
        [  0.0000, -18.5000, -16.6250, -19.0000, -17.1250, -17.5000, -17.3750, -17.6250, -17.7500, -17.5000, -18.2500, -18.6250, -18.7500, -19.0000, -19.8750],
        [  0.0000, -25.6250, -23.5000, -28.7500, -26.2500, -27.2500, -26.7500, -27.2500, -27.3750, -26.7500, -28.0000, -28.3750, -28.8750, -29.3750, -30.7500],
        [  0.0000, -21.6250, -19.7500, -23.1250, -21.3750, -22.0000, -21.8750, -22.0000, -22.1250, -21.6250, -22.6250, -22.8750, -23.3750, -23.6250, -24.6250],
        [  0.0000, -21.7500, -19.8750, -23.1250, -21.2500, -22.0000, -21.7500, -22.0000, -22.0000, -21.6250, -22.5000, -22.8750, -23.3750, -23.5000, -24.5000],
        [  0.0000, -20.8750, -19.0000, -21.8750, -20.1250, -20.8750, -20.7500, -20.8750, -21.0000, -20.5000, -21.3750, -21.7500, -22.1250, -22.2500, -23.2500],
        [  0.0000, -22.1250, -20.2500, -23.7500, -21.8750, -22.6250, -22.5000, -22.7500, -22.7500, -22.2500, -23.2500, -23.5000, -24.0000, -24.2500, -25.3750],
        [  0.0000, -20.6250, -18.8750, -21.6250, -19.8750, -20.5000, -20.3750, -20.6250, -20.7500, -20.2500, -21.2500, -21.5000, -21.7500, -22.1250, -23.0000],
        [  0.0000, -23.2500, -21.3750, -26.2500, -24.0000, -24.7500, -24.5000, -24.8750, -25.0000, -24.6250, -25.6250, -25.8750, -26.3750, -26.7500, -28.0000],
        [  0.0000, -21.2500, -19.2500, -22.6250, -20.6250, -21.5000, -21.1250, -21.5000, -21.5000, -21.1250, -22.1250, -22.3750, -22.7500, -23.0000, -24.0000],
        [  0.0000, -22.5000, -20.6250, -24.7500, -22.5000, -23.2500, -23.0000, -23.3750, -23.5000, -23.0000, -24.1250, -24.5000, -24.7500, -25.1250, -26.3750],
        [  0.0000, -22.1250, -20.2500, -24.1250, -22.1250, -23.0000, -22.7500, -23.1250, -23.1250, -22.5000, -23.6250, -23.8750, -24.5000, -24.7500, -25.7500],
        [  0.0000, -21.6250, -19.7500, -23.2500, -21.1250, -22.0000, -21.7500, -22.0000, -22.1250, -21.6250, -22.6250, -23.0000, -23.3750, -23.6250, -24.7500],
        [  0.0000, -23.6250, -21.5000, -25.6250, -23.2500, -24.3750, -24.0000, -24.3750, -24.3750, -23.8750, -25.1250, -25.3750, -25.8750, -26.1250, -27.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.5117,     0.4863,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0048,     0.6562,     0.3262,     0.0126,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0022,     0.6094,     0.1157,     0.0038,     0.2695,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0008,     0.7305,     0.0991,     0.0050,     0.1113,     0.0527,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3652,     0.0330,     0.0003,     0.0554,     0.0187,     0.5273,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0126,     0.1826,     0.0227,     0.0002,     0.0366,     0.0295,     0.6680,     0.0479,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1465,     0.0248,     0.0003,     0.0344,     0.0215,     0.3652,     0.0339,     0.3730,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0009,     0.1187,     0.0277,     0.0012,     0.0486,     0.0201,     0.3711,     0.0708,     0.3301,     0.0117,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.0986,     0.0109,     0.0002,     0.0142,     0.0064,     0.1787,     0.0192,     0.5234,     0.0014,     0.1455,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.0728,     0.0249,     0.0013,     0.0544,     0.0193,     0.2559,     0.0718,     0.3516,     0.0089,     0.1338,     0.0051,     0.0000,     0.0000,     0.0000],
        [    0.0139,     0.0679,     0.0085,     0.0001,     0.0147,     0.0132,     0.2930,     0.0222,     0.4590,     0.0017,     0.0918,     0.0005,     0.0131,     0.0000,     0.0000],
        [    0.0000,     0.0752,     0.0111,     0.0001,     0.0183,     0.0115,     0.2305,     0.0201,     0.2432,     0.0025,     0.0723,     0.0011,     0.0117,     0.3027,     0.0000],
        [    0.0000,     0.0464,     0.0107,     0.0003,     0.0237,     0.0066,     0.1377,     0.0188,     0.2598,     0.0021,     0.0413,     0.0014,     0.0187,     0.3438,     0.0894]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[     0.0155,      0.0136,      0.0425,  ...,      0.0086,     -0.0078,     -0.0010],
        [    -0.0037,     -0.0001,     -0.0040,  ...,     -0.0119,      0.0132,      0.0686],
        [    -0.0010,      0.0119,     -0.0123,  ...,     -0.0181,      0.0323,      0.0033],
        ...,
        [     0.0229,      0.0287,      0.0113,  ...,     -0.0439,      0.0207,     -0.0226],
        [     0.0231,      0.0142,     -0.0825,  ...,      0.0245,     -0.0117,      0.1207],
        [     0.0327,      0.0326,      0.0288,  ...,     -0.0370,      0.0143,     -0.0306]], device='cuda:0', requires_grad=True)
K: tensor([-3.8906, -1.7969, -6.6562,  1.5469, -0.4434,  1.2969, -5.0000,  5.2500,  1.7266, -2.8906,  4.3750, -5.1250, -4.6562, -0.2656,  3.5156,  4.4688,  1.5938, -1.7188, -1.2031, -3.8906, -4.3750, -1.9531,  0.1904, -1.1094, -4.3438, -1.6641, -0.0825, -3.8594,  3.3125, -1.2891,  2.1094, -1.8281,
        -2.8750, -5.8750, -1.5312,  4.5312,  4.2812,  1.2266,  3.7344, -4.0312, -0.4805, -4.1562,  0.9727, -3.7031, -0.0119, -2.5938,  2.0938, -5.1250,  3.6562,  0.2295, -0.4629, -6.1875, -5.4375, -5.7188,  1.0859, -1.3672, -1.1875,  3.3594, -1.9766, -2.4375, -0.6445, -3.3750,  1.1797, -6.1250],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0152, -0.0241,  0.0037,  ...,  0.0014,  0.0263, -0.0067],
        [-0.0109,  0.0032, -0.0338,  ..., -0.0530, -0.0141, -0.0331],
        [-0.0158, -0.0021,  0.0071,  ..., -0.0149, -0.0280, -0.0281],
        ...,
        [ 0.0325, -0.0190,  0.0285,  ..., -0.0154, -0.0303,  0.0026],
        [ 0.0223,  0.0167, -0.0092,  ..., -0.0212, -0.0193, -0.0320],
        [ 0.0278,  0.0025, -0.0433,  ...,  0.0368,  0.0410, -0.0114]], device='cuda:0', requires_grad=True)
Q: tensor([-1.5312, -0.7305, -0.3672,  0.7578,  1.1797, -1.8906, -0.9844,  0.5820,  3.1406,  0.5703,  2.1094, -0.0211, -0.8828, -1.3750,  2.3438, -1.1172,  1.4375, -0.8477, -0.8047,  2.0000, -1.1094,  0.3672, -1.8750, -2.7812,  1.0859, -0.7188, -0.4180, -1.5234, -2.1406,  0.4199,  1.1797,  0.0718,
         1.3594, -1.3750, -1.6094,  2.3906, -0.2520, -2.0000,  0.2578,  0.6797, -0.0239,  2.1719,  1.0234,  0.0332, -2.3438, -0.2891,  1.5781, -0.3262, -0.9414, -2.3281, -0.0439, -1.5859, -1.1797,  0.0273, -0.6758, -1.1406,  0.3477,  0.5273, -2.5312,  0.2949,  0.7109,  0.3516, -0.7305, -1.6562],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, 14.6250, 13.5625, 11.8750, 15.1250, 13.9375, 16.1250, 15.3750, 16.3750, 13.5000, 15.8125, 13.7500, 16.1250, 17.2500, 17.5000],
        [ 0.0000, 13.4375, 13.4375, 12.8750, 15.1875, 13.7500, 14.9375, 15.0625, 14.8125, 14.2500, 14.8750, 14.8750, 16.5000, 16.1250, 17.2500],
        [ 0.0000,  4.9062,  4.2188,  0.9648,  4.6250,  3.4375,  5.5625,  4.3750,  5.7500,  2.7500,  4.6250,  2.0938,  4.3438,  5.8438,  5.7188],
        [ 0.0000,  5.6250,  3.9688,  0.5352,  4.8125,  4.0312,  6.5000,  4.5000,  6.8750,  2.5156,  5.5312,  1.9062,  4.2500,  6.8750,  5.8750],
        [ 0.0000,  6.7812,  4.7812,  1.8047,  4.9062,  4.1562,  7.4062,  5.2188,  7.5000,  3.2344,  6.2500,  2.8594,  4.4062,  7.5312,  6.5000],
        [ 0.0000, 12.5000, 10.1250,  5.3750, 10.6250,  9.5625, 12.8750, 10.5000, 13.8125,  6.9688, 11.5625,  6.6250,  9.5000, 13.3125, 12.8750],
        [ 0.0000,  2.6719,  0.5898, -4.1250,  1.0703,  0.8516,  3.9688,  1.3359,  4.5000, -1.1875,  2.7031, -2.5312,  0.8047,  4.5625,  3.5938],
        [ 0.0000,  8.3125,  6.5000,  2.0469,  6.8438,  6.3750,  9.1875,  6.8125,  9.2500,  4.8750,  7.9688,  4.0000,  6.2812,  9.3750,  8.8750],
        [ 0.0000,  4.9375,  3.4844,  0.3164,  4.0312,  3.1562,  6.0625,  4.4375,  5.9688,  2.6094,  4.7812,  1.7656,  4.1875,  6.2500,  5.5625],
        [ 0.0000,  6.3438,  4.1562,  0.1113,  4.4062,  3.6094,  6.9375,  4.7188,  8.0000,  2.0625,  6.7500,  1.6484,  4.0938,  8.0000,  6.7812],
        [ 0.0000,  6.7188,  5.6562,  2.6562,  6.4375,  5.4062,  7.9688,  6.7188,  8.3125,  4.6250,  7.3438,  4.0625,  6.6250,  8.6250,  8.4375],
        [ 0.0000,  1.5859, -0.4863, -5.0312,  0.0571, -0.0466,  3.0469,  0.4688,  3.5000, -2.1250,  1.8906, -3.3125, -0.0588,  3.7188,  2.8438],
        [ 0.0000,  9.0000,  7.0938,  2.7031,  7.5938,  7.1250, 10.1250,  7.6875, 10.1875,  5.5938,  8.9375,  4.8125,  7.1562, 10.3750, 10.0000],
        [ 0.0000,  8.5625,  7.0938,  3.3750,  7.8750,  6.5938,  9.6250,  7.6562, 10.2500,  5.4688,  8.4375,  5.0625,  7.6250, 10.5625,  9.1875]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3684],
        [0.2678],
        [0.2276],
        [0.2628],
        [0.2187],
        [0.1641],
        [0.1390],
        [0.1426],
        [0.1574],
        [0.1083],
        [0.1093],
        [0.1153],
        [0.0964],
        [0.0648]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.1445 the:0.0757,:0.1865 and:0.0913atoes:0.1973,:0.4609 the:0.0645iced:0.0928)
iced
------
		( the:0.0757,:0.1865 and:0.0913atoes:0.1973,:0.4609 the:0.0645iced:0.0928 with:0.2168)
 with a few of the most common varieties of the plant.
The plant
@ 3550 train 4.6486 , allloss: 4.6487, dt: 1754.45ms, fracRes: 0.7038, norm(attn): 0.2021, norm(output): 0.9367, norm(x): 0.7599, norm(y): 1.0051, norm:0.5925, tok/sec: 74708.16, flops:78.42, batch-reuse:1
@ 3551 train 4.7721 , allloss: 4.7722, dt: 1319.80ms, fracRes: 0.7038, norm(attn): 0.2021, norm(output): 0.9368, norm(x): 0.7598, norm(y): 1.0050, norm:0.5509, tok/sec: 99311.76, flops:104.24, batch-reuse:1
@ 3552 train 4.6536 , allloss: 4.6538, dt: 1331.76ms, fracRes: 0.7037, norm(attn): 0.2031, norm(output): 0.9366, norm(x): 0.7602, norm(y): 1.0050, norm:0.7718, tok/sec: 98420.44, flops:103.31, batch-reuse:1
@ 3553 train 4.6403 , allloss: 4.6405, dt: 1317.51ms, fracRes: 0.7040, norm(attn): 0.2021, norm(output): 0.9367, norm(x): 0.7591, norm(y): 1.0048, norm:0.6801, tok/sec: 99485.00, flops:104.42, batch-reuse:1
@ 3554 train 4.6256 , allloss: 4.6257, dt: 1286.37ms, fracRes: 0.7042, norm(attn): 0.2021, norm(output): 0.9366, norm(x): 0.7592, norm(y): 1.0047, norm:0.6287, tok/sec: 101892.73, flops:106.95, batch-reuse:1
@ 3555 train 4.7022 , allloss: 4.7029, dt: 1304.70ms, fracRes: 0.7041, norm(attn): 0.2031, norm(output): 0.9367, norm(x): 0.7603, norm(y): 1.0050, norm:0.6461, tok/sec: 100461.49, flops:105.45, batch-reuse:1
@ 3556 train 4.6158 , allloss: 4.6160, dt: 1316.96ms, fracRes: 0.7038, norm(attn): 0.2031, norm(output): 0.9366, norm(x): 0.7601, norm(y): 1.0050, norm:0.6115, tok/sec: 99526.55, flops:104.47, batch-reuse:1
@ 3557 train 4.7964 , allloss: 4.7965, dt: 1285.04ms, fracRes: 0.7039, norm(attn): 0.2041, norm(output): 0.9366, norm(x): 0.7593, norm(y): 1.0051, norm:0.8649, tok/sec: 101998.45, flops:107.06, batch-reuse:1
@ 3558 train 4.5148 , allloss: 4.5150, dt: 1292.55ms, fracRes: 0.7039, norm(attn): 0.2012, norm(output): 0.9367, norm(x): 0.7591, norm(y): 1.0049, norm:0.6867, tok/sec: 101405.82, flops:106.44, batch-reuse:1
@ 3559 train 4.6665 , allloss: 4.6677, dt: 1290.64ms, fracRes: 0.7041, norm(attn): 0.2002, norm(output): 0.9364, norm(x): 0.7593, norm(y): 1.0050, norm:0.6480, tok/sec: 101555.86, flops:106.60, batch-reuse:1
@ 3560 train 4.6029 , allloss: 4.6035, dt: 1293.34ms, fracRes: 0.7040, norm(attn): 0.2021, norm(output): 0.9363, norm(x): 0.7596, norm(y): 1.0051, norm:0.7038, tok/sec: 101343.49, flops:106.37, batch-reuse:1
@ 3561 train 4.6554 , allloss: 4.6555, dt: 1314.06ms, fracRes: 0.7043, norm(attn): 0.2021, norm(output): 0.9364, norm(x): 0.7589, norm(y): 1.0050, norm:0.6856, tok/sec: 99745.90, flops:104.70, batch-reuse:1
@ 3562 train 4.6568 , allloss: 4.6569, dt: 1349.84ms, fracRes: 0.7047, norm(attn): 0.2021, norm(output): 0.9364, norm(x): 0.7576, norm(y): 1.0047, norm:0.6971, tok/sec: 97101.99, flops:101.92, batch-reuse:1
@ 3563 train 4.6566 , allloss: 4.6567, dt: 1342.84ms, fracRes: 0.7046, norm(attn): 0.2031, norm(output): 0.9364, norm(x): 0.7577, norm(y): 1.0048, norm:0.6084, tok/sec: 97608.25, flops:102.45, batch-reuse:1
@ 3564 train 4.5862 , allloss: 4.5862, dt: 1329.68ms, fracRes: 0.7043, norm(attn): 0.2041, norm(output): 0.9364, norm(x): 0.7586, norm(y): 1.0050, norm:0.6391, tok/sec: 98574.31, flops:103.47, batch-reuse:1
@ 3565 train 4.6553 , allloss: 4.6554, dt: 1292.26ms, fracRes: 0.7043, norm(attn): 0.2031, norm(output): 0.9365, norm(x): 0.7588, norm(y): 1.0052, norm:0.6097, tok/sec: 101428.81, flops:106.46, batch-reuse:1
@ 3566 train 4.6486 , allloss: 4.6487, dt: 1309.41ms, fracRes: 0.7044, norm(attn): 0.2031, norm(output): 0.9362, norm(x): 0.7580, norm(y): 1.0051, norm:0.5852, tok/sec: 100100.24, flops:105.07, batch-reuse:1
@ 3567 train 4.6761 , allloss: 4.6763, dt: 1316.72ms, fracRes: 0.7044, norm(attn): 0.2012, norm(output): 0.9362, norm(x): 0.7573, norm(y): 1.0052, norm:0.6535, tok/sec: 99544.41, flops:104.48, batch-reuse:1
@ 3568 train 4.5879 , allloss: 4.5880, dt: 1304.90ms, fracRes: 0.7043, norm(attn): 0.2031, norm(output): 0.9362, norm(x): 0.7579, norm(y): 1.0053, norm:0.6854, tok/sec: 100446.27, flops:105.43, batch-reuse:1
@ 3569 train 4.6901 , allloss: 4.6902, dt: 1309.70ms, fracRes: 0.7043, norm(attn): 0.2012, norm(output): 0.9364, norm(x): 0.7587, norm(y): 1.0052, norm:0.6290, tok/sec: 100078.23, flops:105.05, batch-reuse:1
@ 3570 train 4.6846 , allloss: 4.6848, dt: 1318.46ms, fracRes: 0.7044, norm(attn): 0.2021, norm(output): 0.9363, norm(x): 0.7591, norm(y): 1.0050, norm:0.7518, tok/sec: 99412.95, flops:104.35, batch-reuse:1
@ 3571 train 4.6248 , allloss: 4.6248, dt: 1292.37ms, fracRes: 0.7045, norm(attn): 0.2021, norm(output): 0.9366, norm(x): 0.7592, norm(y): 1.0048, norm:0.6937, tok/sec: 101419.83, flops:106.45, batch-reuse:1
@ 3572 train 4.6156 , allloss: 4.6157, dt: 1306.99ms, fracRes: 0.7046, norm(attn): 0.2031, norm(output): 0.9364, norm(x): 0.7585, norm(y): 1.0050, norm:0.6074, tok/sec: 100285.36, flops:105.26, batch-reuse:1
@ 3573 train 4.6939 , allloss: 4.6940, dt: 1299.28ms, fracRes: 0.7046, norm(attn): 0.2031, norm(output): 0.9363, norm(x): 0.7577, norm(y): 1.0051, norm:0.6375, tok/sec: 100880.12, flops:105.89, batch-reuse:1
@ 3574 train 4.5533 , allloss: 4.5534, dt: 1306.11ms, fracRes: 0.7044, norm(attn): 0.2031, norm(output): 0.9361, norm(x): 0.7577, norm(y): 1.0050, norm:0.6064, tok/sec: 100352.80, flops:105.33, batch-reuse:1
@ 3575 train 4.5891 , allloss: 4.5892, dt: 1338.45ms, fracRes: 0.7043, norm(attn): 0.2031, norm(output): 0.9362, norm(x): 0.7580, norm(y): 1.0049, norm:0.5818, tok/sec: 97928.55, flops:102.79, batch-reuse:1
@ 3576 train 4.5193 , allloss: 4.5193, dt: 1330.62ms, fracRes: 0.7043, norm(attn): 0.2031, norm(output): 0.9363, norm(x): 0.7587, norm(y): 1.0050, norm:0.6027, tok/sec: 98504.56, flops:103.39, batch-reuse:1
@ 3577 train 4.7777 , allloss: 4.7778, dt: 1304.76ms, fracRes: 0.7042, norm(attn): 0.2031, norm(output): 0.9362, norm(x): 0.7587, norm(y): 1.0050, norm:0.6237, tok/sec: 100456.70, flops:105.44, batch-reuse:1
@ 3578 train 4.6158 , allloss: 4.6159, dt: 1318.45ms, fracRes: 0.7042, norm(attn): 0.2031, norm(output): 0.9361, norm(x): 0.7589, norm(y): 1.0049, norm:0.7406, tok/sec: 99413.80, flops:104.35, batch-reuse:1
@ 3579 train 4.5850 , allloss: 4.5851, dt: 1325.01ms, fracRes: 0.7042, norm(attn): 0.2031, norm(output): 0.9361, norm(x): 0.7589, norm(y): 1.0050, norm:0.8897, tok/sec: 98921.62, flops:103.83, batch-reuse:1
@ 3580 train 4.6351 , allloss: 4.6352, dt: 1279.47ms, fracRes: 0.7044, norm(attn): 0.2021, norm(output): 0.9362, norm(x): 0.7586, norm(y): 1.0048, norm:0.7323, tok/sec: 102442.50, flops:107.53, batch-reuse:1
@ 3581 train 4.5547 , allloss: 4.5549, dt: 1287.72ms, fracRes: 0.7045, norm(attn): 0.2031, norm(output): 0.9362, norm(x): 0.7587, norm(y): 1.0047, norm:0.7503, tok/sec: 101785.78, flops:106.84, batch-reuse:1
@ 3582 train 4.5940 , allloss: 4.5941, dt: 1311.86ms, fracRes: 0.7044, norm(attn): 0.2021, norm(output): 0.9362, norm(x): 0.7588, norm(y): 1.0048, norm:0.8573, tok/sec: 99913.38, flops:104.87, batch-reuse:1
@ 3583 train 4.6793 , allloss: 4.6794, dt: 1294.40ms, fracRes: 0.7041, norm(attn): 0.2021, norm(output): 0.9362, norm(x): 0.7590, norm(y): 1.0051, norm:0.6721, tok/sec: 101261.04, flops:106.29, batch-reuse:1
@ 3584 train 4.5894 , allloss: 4.5896, dt: 1302.69ms, fracRes: 0.7040, norm(attn): 0.2031, norm(output): 0.9362, norm(x): 0.7588, norm(y): 1.0051, norm:0.5431, tok/sec: 100616.75, flops:105.61, batch-reuse:1
@ 3585 train 4.5977 , allloss: 4.5978, dt: 1330.19ms, fracRes: 0.7041, norm(attn): 0.2041, norm(output): 0.9361, norm(x): 0.7582, norm(y): 1.0049, norm:0.6592, tok/sec: 98536.62, flops:103.43, batch-reuse:1
@ 3586 train 4.4889 , allloss: 4.4890, dt: 1332.91ms, fracRes: 0.7040, norm(attn): 0.2041, norm(output): 0.9362, norm(x): 0.7587, norm(y): 1.0049, norm:0.5603, tok/sec: 98335.02, flops:103.22, batch-reuse:1
@ 3587 train 4.6354 , allloss: 4.6355, dt: 1316.83ms, fracRes: 0.7041, norm(attn): 0.2021, norm(output): 0.9362, norm(x): 0.7592, norm(y): 1.0051, norm:0.6579, tok/sec: 99536.25, flops:104.48, batch-reuse:1
@ 3588 train 4.5762 , allloss: 4.5763, dt: 1291.58ms, fracRes: 0.7041, norm(attn): 0.2012, norm(output): 0.9363, norm(x): 0.7594, norm(y): 1.0050, norm:0.5955, tok/sec: 101481.63, flops:106.52, batch-reuse:1
@ 3589 train 4.6760 , allloss: 4.6761, dt: 1317.15ms, fracRes: 0.7042, norm(attn): 0.2002, norm(output): 0.9363, norm(x): 0.7590, norm(y): 1.0049, norm:0.7047, tok/sec: 99511.71, flops:104.45, batch-reuse:1
@ 3590 train 4.4934 , allloss: 4.4935, dt: 1330.02ms, fracRes: 0.7041, norm(attn): 0.2021, norm(output): 0.9362, norm(x): 0.7599, norm(y): 1.0049, norm:0.5320, tok/sec: 98549.06, flops:103.44, batch-reuse:1
@ 3591 train 4.6114 , allloss: 4.6114, dt: 1299.46ms, fracRes: 0.7040, norm(attn): 0.2012, norm(output): 0.9362, norm(x): 0.7602, norm(y): 1.0049, norm:0.5956, tok/sec: 100866.65, flops:105.87, batch-reuse:1
@ 3592 train 4.4682 , allloss: 4.4683, dt: 1312.25ms, fracRes: 0.7040, norm(attn): 0.2021, norm(output): 0.9363, norm(x): 0.7600, norm(y): 1.0049, norm:0.5291, tok/sec: 99883.54, flops:104.84, batch-reuse:1
@ 3593 train 4.6375 , allloss: 4.6376, dt: 1300.37ms, fracRes: 0.7041, norm(attn): 0.2021, norm(output): 0.9363, norm(x): 0.7602, norm(y): 1.0050, norm:0.6000, tok/sec: 100795.76, flops:105.80, batch-reuse:1
@ 3594 train 4.5683 , allloss: 4.5684, dt: 1331.65ms, fracRes: 0.7041, norm(attn): 0.2021, norm(output): 0.9361, norm(x): 0.7600, norm(y): 1.0050, norm:0.6002, tok/sec: 98428.09, flops:103.31, batch-reuse:1
@ 3595 train 4.6443 , allloss: 4.6443, dt: 1339.46ms, fracRes: 0.7041, norm(attn): 0.2021, norm(output): 0.9362, norm(x): 0.7597, norm(y): 1.0049, norm:0.6848, tok/sec: 97854.72, flops:102.71, batch-reuse:1
@ 3596 train 4.5890 , allloss: 4.5890, dt: 1331.86ms, fracRes: 0.7041, norm(attn): 0.2021, norm(output): 0.9364, norm(x): 0.7602, norm(y): 1.0049, norm:0.5259, tok/sec: 98412.83, flops:103.30, batch-reuse:1
@ 3597 train 4.5756 , allloss: 4.5756, dt: 1333.51ms, fracRes: 0.7043, norm(attn): 0.2021, norm(output): 0.9363, norm(x): 0.7594, norm(y): 1.0048, norm:0.5990, tok/sec: 98290.68, flops:103.17, batch-reuse:1
@ 3598 train 4.6122 , allloss: 4.6122, dt: 1324.91ms, fracRes: 0.7043, norm(attn): 0.2021, norm(output): 0.9363, norm(x): 0.7595, norm(y): 1.0048, norm:0.6030, tok/sec: 98928.95, flops:103.84, batch-reuse:1
@ 3599 train 4.5901 , allloss: 4.5902, dt: 1352.78ms, fracRes: 0.7043, norm(attn): 0.2021, norm(output): 0.9363, norm(x): 0.7601, norm(y): 1.0050, norm:0.6213, tok/sec: 96891.08, flops:101.70, batch-reuse:1
@ 3600 train 4.5099 , allloss: 4.5099, dt: 1343.14ms, fracRes: 0.7039, norm(attn): 0.2012, norm(output): 0.9363, norm(x): 0.7608, norm(y): 1.0051, norm:0.6813, tok/sec: 97586.50, flops:102.43, batch-reuse:1
@ 3601 train 4.5972 , allloss: 4.5972, dt: 1347.42ms, fracRes: 0.7037, norm(attn): 0.1992, norm(output): 0.9364, norm(x): 0.7606, norm(y): 1.0051, norm:0.7513, tok/sec: 97276.28, flops:102.10, batch-reuse:1
@ 3602 train 4.6635 , allloss: 4.6637, dt: 1325.07ms, fracRes: 0.7039, norm(attn): 0.2002, norm(output): 0.9363, norm(x): 0.7596, norm(y): 1.0050, norm:0.6189, tok/sec: 98917.35, flops:103.83, batch-reuse:1
@ 3603 train 4.5990 , allloss: 4.5990, dt: 1314.10ms, fracRes: 0.7041, norm(attn): 0.2021, norm(output): 0.9363, norm(x): 0.7599, norm(y): 1.0050, norm:0.7028, tok/sec: 99742.55, flops:104.69, batch-reuse:1
@ 3604 train 4.5861 , allloss: 4.5862, dt: 1336.71ms, fracRes: 0.7041, norm(attn): 0.2021, norm(output): 0.9363, norm(x): 0.7597, norm(y): 1.0049, norm:0.6525, tok/sec: 98055.71, flops:102.92, batch-reuse:1
@ 3605 train 4.5841 , allloss: 4.5841, dt: 1340.94ms, fracRes: 0.7041, norm(attn): 0.2021, norm(output): 0.9362, norm(x): 0.7593, norm(y): 1.0048, norm:0.6369, tok/sec: 97746.24, flops:102.60, batch-reuse:1
@ 3606 train 4.5278 , allloss: 4.5278, dt: 1335.56ms, fracRes: 0.7039, norm(attn): 0.2012, norm(output): 0.9364, norm(x): 0.7597, norm(y): 1.0049, norm:0.6193, tok/sec: 98139.91, flops:103.01, batch-reuse:1
@ 3607 train 4.5727 , allloss: 4.5728, dt: 1334.36ms, fracRes: 0.7036, norm(attn): 0.2021, norm(output): 0.9363, norm(x): 0.7605, norm(y): 1.0050, norm:0.6269, tok/sec: 98228.50, flops:103.10, batch-reuse:1
@ 3608 train 4.6372 , allloss: 4.6372, dt: 1337.59ms, fracRes: 0.7038, norm(attn): 0.2021, norm(output): 0.9363, norm(x): 0.7606, norm(y): 1.0050, norm:0.7649, tok/sec: 97991.50, flops:102.86, batch-reuse:1
@ 3609 train 4.6506 , allloss: 4.6506, dt: 1324.89ms, fracRes: 0.7041, norm(attn): 0.2021, norm(output): 0.9364, norm(x): 0.7596, norm(y): 1.0047, norm:0.7539, tok/sec: 98930.29, flops:103.84, batch-reuse:1
@ 3610 train 4.6137 , allloss: 4.6137, dt: 1306.92ms, fracRes: 0.7042, norm(attn): 0.2012, norm(output): 0.9362, norm(x): 0.7597, norm(y): 1.0047, norm:0.6885, tok/sec: 100290.50, flops:105.27, batch-reuse:1
@ 3611 train 4.5957 , allloss: 4.5957, dt: 1300.50ms, fracRes: 0.7039, norm(attn): 0.1992, norm(output): 0.9365, norm(x): 0.7609, norm(y): 1.0049, norm:0.8095, tok/sec: 100785.67, flops:105.79, batch-reuse:1
@ 3612 train 4.6056 , allloss: 4.6057, dt: 1294.16ms, fracRes: 0.7038, norm(attn): 0.2002, norm(output): 0.9363, norm(x): 0.7604, norm(y): 1.0050, norm:0.6296, tok/sec: 101279.34, flops:106.31, batch-reuse:1
@ 3613 train 4.5622 , allloss: 4.5623, dt: 1285.71ms, fracRes: 0.7039, norm(attn): 0.2002, norm(output): 0.9361, norm(x): 0.7598, norm(y): 1.0051, norm:0.6945, tok/sec: 101945.22, flops:107.00, batch-reuse:1
@ 3614 train 4.5891 , allloss: 4.5892, dt: 1287.30ms, fracRes: 0.7040, norm(attn): 0.2002, norm(output): 0.9363, norm(x): 0.7599, norm(y): 1.0050, norm:0.6079, tok/sec: 101819.66, flops:106.87, batch-reuse:1
@ 3615 train 4.5544 , allloss: 4.5544, dt: 1322.45ms, fracRes: 0.7041, norm(attn): 0.2012, norm(output): 0.9364, norm(x): 0.7602, norm(y): 1.0047, norm:0.5829, tok/sec: 99113.07, flops:104.03, batch-reuse:1
@ 3616 train 4.5083 , allloss: 4.5084, dt: 1352.52ms, fracRes: 0.7041, norm(attn): 0.2021, norm(output): 0.9362, norm(x): 0.7602, norm(y): 1.0049, norm:0.7039, tok/sec: 96909.58, flops:101.72, batch-reuse:1
@ 3617 train 4.5120 , allloss: 4.5121, dt: 1347.49ms, fracRes: 0.7039, norm(attn): 0.2012, norm(output): 0.9363, norm(x): 0.7606, norm(y): 1.0051, norm:0.6475, tok/sec: 97271.01, flops:102.10, batch-reuse:1
@ 3618 train 4.4483 , allloss: 4.4484, dt: 1311.71ms, fracRes: 0.7038, norm(attn): 0.2002, norm(output): 0.9362, norm(x): 0.7609, norm(y): 1.0050, norm:0.6130, tok/sec: 99924.54, flops:104.88, batch-reuse:1
@ 3619 train 4.5268 , allloss: 4.5269, dt: 1295.73ms, fracRes: 0.7040, norm(attn): 0.2002, norm(output): 0.9363, norm(x): 0.7605, norm(y): 1.0050, norm:0.6418, tok/sec: 101157.13, flops:106.18, batch-reuse:1
@ 3620 train 4.5899 , allloss: 4.5900, dt: 1296.30ms, fracRes: 0.7043, norm(attn): 0.2021, norm(output): 0.9363, norm(x): 0.7597, norm(y): 1.0049, norm:0.5628, tok/sec: 101112.40, flops:106.13, batch-reuse:1
@ 3621 train 4.5206 , allloss: 4.5206, dt: 1279.34ms, fracRes: 0.7043, norm(attn): 0.2021, norm(output): 0.9365, norm(x): 0.7603, norm(y): 1.0047, norm:0.7202, tok/sec: 102452.98, flops:107.54, batch-reuse:1
@ 3622 train 4.5806 , allloss: 4.5806, dt: 1302.43ms, fracRes: 0.7042, norm(attn): 0.2021, norm(output): 0.9364, norm(x): 0.7598, norm(y): 1.0045, norm:0.6994, tok/sec: 100636.84, flops:105.63, batch-reuse:1
@ 3623 train 4.6143 , allloss: 4.6146, dt: 1329.02ms, fracRes: 0.7042, norm(attn): 0.1992, norm(output): 0.9363, norm(x): 0.7598, norm(y): 1.0048, norm:0.6417, tok/sec: 98623.24, flops:103.52, batch-reuse:1
@ 3624 train 4.4647 , allloss: 4.4648, dt: 1324.15ms, fracRes: 0.7043, norm(attn): 0.2021, norm(output): 0.9361, norm(x): 0.7596, norm(y): 1.0048, norm:0.5727, tok/sec: 98985.74, flops:103.90, batch-reuse:1
@ 3625 train 4.5763 , allloss: 4.5765, dt: 1330.94ms, fracRes: 0.7043, norm(attn): 0.2031, norm(output): 0.9363, norm(x): 0.7601, norm(y): 1.0048, norm:0.5793, tok/sec: 98480.98, flops:103.37, batch-reuse:1
@ 3626 train 4.4886 , allloss: 4.4887, dt: 1317.29ms, fracRes: 0.7040, norm(attn): 0.2021, norm(output): 0.9364, norm(x): 0.7602, norm(y): 1.0048, norm:0.5710, tok/sec: 99501.28, flops:104.44, batch-reuse:1
@ 3627 train 4.6040 , allloss: 4.6041, dt: 1314.19ms, fracRes: 0.7041, norm(attn): 0.2012, norm(output): 0.9364, norm(x): 0.7605, norm(y): 1.0047, norm:0.6117, tok/sec: 99736.09, flops:104.69, batch-reuse:1
@ 3628 train 4.6091 , allloss: 4.6091, dt: 1316.99ms, fracRes: 0.7041, norm(attn): 0.1992, norm(output): 0.9365, norm(x): 0.7607, norm(y): 1.0048, norm:0.5604, tok/sec: 99523.63, flops:104.46, batch-reuse:1
@ 3629 train 4.5370 , allloss: 4.5371, dt: 1339.16ms, fracRes: 0.7040, norm(attn): 0.2012, norm(output): 0.9364, norm(x): 0.7610, norm(y): 1.0048, norm:0.6602, tok/sec: 97876.32, flops:102.73, batch-reuse:1
@ 3630 train 4.5333 , allloss: 4.5334, dt: 1301.01ms, fracRes: 0.7040, norm(attn): 0.2021, norm(output): 0.9362, norm(x): 0.7610, norm(y): 1.0048, norm:0.6537, tok/sec: 100746.33, flops:105.75, batch-reuse:1
@ 3631 train 4.5172 , allloss: 4.5173, dt: 1307.02ms, fracRes: 0.7039, norm(attn): 0.2012, norm(output): 0.9363, norm(x): 0.7605, norm(y): 1.0045, norm:0.5810, tok/sec: 100283.46, flops:105.26, batch-reuse:1
@ 3632 train 4.5492 , allloss: 4.5493, dt: 1309.02ms, fracRes: 0.7044, norm(attn): 0.2012, norm(output): 0.9363, norm(x): 0.7597, norm(y): 1.0046, norm:0.6585, tok/sec: 100130.03, flops:105.10, batch-reuse:1
@ 3633 train 4.6066 , allloss: 4.6067, dt: 1312.53ms, fracRes: 0.7043, norm(attn): 0.2012, norm(output): 0.9364, norm(x): 0.7601, norm(y): 1.0048, norm:0.6273, tok/sec: 99861.93, flops:104.82, batch-reuse:1
@ 3634 train 4.4607 , allloss: 4.4608, dt: 1337.50ms, fracRes: 0.7041, norm(attn): 0.2031, norm(output): 0.9363, norm(x): 0.7594, norm(y): 1.0047, norm:0.6680, tok/sec: 97997.87, flops:102.86, batch-reuse:1
@ 3635 train 4.5722 , allloss: 4.5723, dt: 1337.63ms, fracRes: 0.7043, norm(attn): 0.2031, norm(output): 0.9363, norm(x): 0.7582, norm(y): 1.0046, norm:0.6795, tok/sec: 97988.21, flops:102.85, batch-reuse:1
@ 3636 train 4.4743 , allloss: 4.4744, dt: 1316.50ms, fracRes: 0.7043, norm(attn): 0.2021, norm(output): 0.9364, norm(x): 0.7583, norm(y): 1.0045, norm:0.6502, tok/sec: 99560.91, flops:104.50, batch-reuse:1
@ 3637 train 4.5865 , allloss: 4.5865, dt: 1296.39ms, fracRes: 0.7043, norm(attn): 0.1992, norm(output): 0.9364, norm(x): 0.7583, norm(y): 1.0047, norm:0.7432, tok/sec: 101105.71, flops:106.12, batch-reuse:1
@ 3638 train 4.5283 , allloss: 4.5284, dt: 1313.92ms, fracRes: 0.7044, norm(attn): 0.2002, norm(output): 0.9363, norm(x): 0.7587, norm(y): 1.0047, norm:0.6295, tok/sec: 99756.14, flops:104.71, batch-reuse:1
@ 3639 train 4.5430 , allloss: 4.5431, dt: 1308.58ms, fracRes: 0.7043, norm(attn): 0.2012, norm(output): 0.9365, norm(x): 0.7602, norm(y): 1.0046, norm:0.6053, tok/sec: 100163.43, flops:105.13, batch-reuse:1
@ 3640 train 4.4884 , allloss: 4.4885, dt: 1310.16ms, fracRes: 0.7043, norm(attn): 0.2021, norm(output): 0.9366, norm(x): 0.7614, norm(y): 1.0045, norm:0.5617, tok/sec: 100042.84, flops:105.01, batch-reuse:1
@ 3641 train 4.5708 , allloss: 4.5708, dt: 1324.85ms, fracRes: 0.7044, norm(attn): 0.2021, norm(output): 0.9366, norm(x): 0.7615, norm(y): 1.0045, norm:0.5970, tok/sec: 98933.81, flops:103.84, batch-reuse:1
@ 3642 train 4.6974 , allloss: 4.6978, dt: 1320.33ms, fracRes: 0.7044, norm(attn): 0.2002, norm(output): 0.9365, norm(x): 0.7611, norm(y): 1.0047, norm:0.6866, tok/sec: 99272.02, flops:104.20, batch-reuse:1
@ 3643 train 4.5158 , allloss: 4.5159, dt: 1347.15ms, fracRes: 0.7046, norm(attn): 0.1992, norm(output): 0.9367, norm(x): 0.7609, norm(y): 1.0046, norm:0.6370, tok/sec: 97295.96, flops:102.12, batch-reuse:1
@ 3644 train 4.6033 , allloss: 4.6034, dt: 1316.16ms, fracRes: 0.7047, norm(attn): 0.1973, norm(output): 0.9366, norm(x): 0.7606, norm(y): 1.0045, norm:0.6193, tok/sec: 99586.66, flops:104.53, batch-reuse:1
@ 3645 train 4.5208 , allloss: 4.5209, dt: 1294.96ms, fracRes: 0.7046, norm(attn): 0.1982, norm(output): 0.9364, norm(x): 0.7598, norm(y): 1.0046, norm:0.6816, tok/sec: 101217.19, flops:106.24, batch-reuse:1
@ 3646 train 4.5692 , allloss: 4.5693, dt: 1310.50ms, fracRes: 0.7046, norm(attn): 0.1992, norm(output): 0.9365, norm(x): 0.7601, norm(y): 1.0046, norm:0.7517, tok/sec: 100016.78, flops:104.98, batch-reuse:1
@ 3647 train 4.5477 , allloss: 4.5478, dt: 1296.43ms, fracRes: 0.7048, norm(attn): 0.2012, norm(output): 0.9366, norm(x): 0.7596, norm(y): 1.0045, norm:0.5857, tok/sec: 101101.88, flops:106.12, batch-reuse:1
@ 3648 train 4.5738 , allloss: 4.5739, dt: 1290.12ms, fracRes: 0.7047, norm(attn): 0.2012, norm(output): 0.9366, norm(x): 0.7602, norm(y): 1.0048, norm:0.6318, tok/sec: 101596.91, flops:106.64, batch-reuse:1
@ 3649 train 4.6078 , allloss: 4.6079, dt: 1300.93ms, fracRes: 0.7044, norm(attn): 0.2031, norm(output): 0.9367, norm(x): 0.7608, norm(y): 1.0046, norm:0.6398, tok/sec: 100752.24, flops:105.75, batch-reuse:1
@ 3650 train 4.6194 , allloss: 4.6196, dt: 1304.37ms, fracRes: 0.7042, norm(attn): 0.2021, norm(output): 0.9365, norm(x): 0.7604, norm(y): 1.0046, norm:0.5803, tok/sec: 100487.12, flops:105.47, batch-reuse:1
@ 3651 train 4.5604 , allloss: 4.5606, dt: 1324.80ms, fracRes: 0.7041, norm(attn): 0.2031, norm(output): 0.9364, norm(x): 0.7598, norm(y): 1.0049, norm:0.6290, tok/sec: 98936.86, flops:103.85, batch-reuse:1
@ 3652 train 4.4743 , allloss: 4.4744, dt: 1314.56ms, fracRes: 0.7043, norm(attn): 0.2031, norm(output): 0.9365, norm(x): 0.7592, norm(y): 1.0051, norm:0.6922, tok/sec: 99707.86, flops:104.66, batch-reuse:1
@ 3653 train 4.5055 , allloss: 4.5057, dt: 1349.62ms, fracRes: 0.7044, norm(attn): 0.2031, norm(output): 0.9364, norm(x): 0.7592, norm(y): 1.0048, norm:0.6600, tok/sec: 97117.73, flops:101.94, batch-reuse:1
@ 3654 train 4.6266 , allloss: 4.6268, dt: 1339.51ms, fracRes: 0.7044, norm(attn): 0.2012, norm(output): 0.9365, norm(x): 0.7593, norm(y): 1.0045, norm:0.6143, tok/sec: 97850.62, flops:102.71, batch-reuse:1
@ 3655 train 4.6768 , allloss: 4.6768, dt: 1329.76ms, fracRes: 0.7043, norm(attn): 0.2021, norm(output): 0.9365, norm(x): 0.7600, norm(y): 1.0045, norm:0.6263, tok/sec: 98568.46, flops:103.46, batch-reuse:1
@ 3656 train 4.6065 , allloss: 4.6066, dt: 1294.81ms, fracRes: 0.7041, norm(attn): 0.2031, norm(output): 0.9367, norm(x): 0.7611, norm(y): 1.0047, norm:0.7672, tok/sec: 101228.82, flops:106.25, batch-reuse:1
@ 3657 train 4.5894 , allloss: 4.5895, dt: 1336.29ms, fracRes: 0.7042, norm(attn): 0.2031, norm(output): 0.9366, norm(x): 0.7603, norm(y): 1.0049, norm:0.8504, tok/sec: 98086.73, flops:102.95, batch-reuse:1
@ 3658 train 4.4846 , allloss: 4.4847, dt: 1316.84ms, fracRes: 0.7045, norm(attn): 0.2002, norm(output): 0.9365, norm(x): 0.7594, norm(y): 1.0049, norm:0.5703, tok/sec: 99534.95, flops:104.48, batch-reuse:1
@ 3659 train 4.5577 , allloss: 4.5578, dt: 1291.79ms, fracRes: 0.7045, norm(attn): 0.2021, norm(output): 0.9364, norm(x): 0.7591, norm(y): 1.0047, norm:0.6287, tok/sec: 101465.63, flops:106.50, batch-reuse:1
@ 3660 train 4.4353 , allloss: 4.4354, dt: 1315.20ms, fracRes: 0.7044, norm(attn): 0.2021, norm(output): 0.9364, norm(x): 0.7597, norm(y): 1.0046, norm:0.6467, tok/sec: 99659.36, flops:104.61, batch-reuse:1
@ 3661 train 4.4580 , allloss: 4.4580, dt: 1313.58ms, fracRes: 0.7042, norm(attn): 0.2002, norm(output): 0.9365, norm(x): 0.7602, norm(y): 1.0047, norm:0.6507, tok/sec: 99782.40, flops:104.73, batch-reuse:1
@ 3662 train 4.3012 , allloss: 4.3013, dt: 1294.32ms, fracRes: 0.7041, norm(attn): 0.2002, norm(output): 0.9363, norm(x): 0.7602, norm(y): 1.0047, norm:0.6610, tok/sec: 101267.38, flops:106.29, batch-reuse:1
@ 3663 train 4.3810 , allloss: 4.3811, dt: 1343.49ms, fracRes: 0.7039, norm(attn): 0.2021, norm(output): 0.9362, norm(x): 0.7606, norm(y): 1.0048, norm:0.6225, tok/sec: 97560.63, flops:102.40, batch-reuse:1
@ 3664 train 4.4495 , allloss: 4.4495, dt: 1322.72ms, fracRes: 0.7040, norm(attn): 0.2021, norm(output): 0.9364, norm(x): 0.7610, norm(y): 1.0048, norm:0.5789, tok/sec: 99092.47, flops:104.01, batch-reuse:1
@ 3665 train 4.4669 , allloss: 4.4669, dt: 1300.08ms, fracRes: 0.7040, norm(attn): 0.2012, norm(output): 0.9364, norm(x): 0.7612, norm(y): 1.0049, norm:0.6755, tok/sec: 100818.52, flops:105.82, batch-reuse:1
@ 3666 train 4.3510 , allloss: 4.3511, dt: 1336.37ms, fracRes: 0.7043, norm(attn): 0.2021, norm(output): 0.9363, norm(x): 0.7604, norm(y): 1.0048, norm:0.6917, tok/sec: 98080.31, flops:102.95, batch-reuse:1
@ 3667 train 4.4807 , allloss: 4.4808, dt: 1276.87ms, fracRes: 0.7045, norm(attn): 0.2012, norm(output): 0.9362, norm(x): 0.7601, norm(y): 1.0048, norm:0.6503, tok/sec: 102650.90, flops:107.75, batch-reuse:1
@ 3668 train 4.4576 , allloss: 4.4577, dt: 1299.53ms, fracRes: 0.7044, norm(attn): 0.2012, norm(output): 0.9362, norm(x): 0.7603, norm(y): 1.0047, norm:0.7597, tok/sec: 100861.47, flops:105.87, batch-reuse:1
@ 3669 train 4.5646 , allloss: 4.5647, dt: 1291.05ms, fracRes: 0.7043, norm(attn): 0.2021, norm(output): 0.9362, norm(x): 0.7600, norm(y): 1.0048, norm:1.1167, tok/sec: 101523.68, flops:106.56, batch-reuse:1
@ 3670 train 4.5368 , allloss: 4.5369, dt: 1307.20ms, fracRes: 0.7042, norm(attn): 0.2021, norm(output): 0.9364, norm(x): 0.7597, norm(y): 1.0047, norm:0.8901, tok/sec: 100269.03, flops:105.25, batch-reuse:1
@ 3671 train 4.3857 , allloss: 4.3858, dt: 1309.99ms, fracRes: 0.7042, norm(attn): 0.2012, norm(output): 0.9364, norm(x): 0.7592, norm(y): 1.0046, norm:0.6927, tok/sec: 100055.88, flops:105.02, batch-reuse:1
@ 3672 train 4.4219 , allloss: 4.4220, dt: 1306.62ms, fracRes: 0.7042, norm(attn): 0.2031, norm(output): 0.9363, norm(x): 0.7594, norm(y): 1.0044, norm:0.6698, tok/sec: 100313.58, flops:105.29, batch-reuse:1
@ 3673 train 4.4334 , allloss: 4.4335, dt: 1305.39ms, fracRes: 0.7041, norm(attn): 0.2031, norm(output): 0.9364, norm(x): 0.7603, norm(y): 1.0044, norm:0.6260, tok/sec: 100408.39, flops:105.39, batch-reuse:1
@ 3674 train 4.4204 , allloss: 4.4205, dt: 1302.01ms, fracRes: 0.7040, norm(attn): 0.2031, norm(output): 0.9363, norm(x): 0.7608, norm(y): 1.0046, norm:0.6004, tok/sec: 100669.09, flops:105.67, batch-reuse:1
@ 3675 train 4.4540 , allloss: 4.4540, dt: 1293.66ms, fracRes: 0.7040, norm(attn): 0.2031, norm(output): 0.9363, norm(x): 0.7609, norm(y): 1.0047, norm:0.6585, tok/sec: 101318.89, flops:106.35, batch-reuse:1
@ 3676 train 4.4960 , allloss: 4.4961, dt: 1318.28ms, fracRes: 0.7040, norm(attn): 0.2021, norm(output): 0.9364, norm(x): 0.7609, norm(y): 1.0046, norm:0.6694, tok/sec: 99426.19, flops:104.36, batch-reuse:1
@ 3677 train 4.4469 , allloss: 4.4470, dt: 1314.22ms, fracRes: 0.7040, norm(attn): 0.2002, norm(output): 0.9363, norm(x): 0.7606, norm(y): 1.0046, norm:0.6270, tok/sec: 99733.83, flops:104.68, batch-reuse:1
@ 3678 train 4.4540 , allloss: 4.4540, dt: 1293.34ms, fracRes: 0.7040, norm(attn): 0.1982, norm(output): 0.9363, norm(x): 0.7603, norm(y): 1.0048, norm:0.6254, tok/sec: 101343.94, flops:106.37, batch-reuse:1
@ 3679 train 4.3930 , allloss: 4.3930, dt: 1304.73ms, fracRes: 0.7042, norm(attn): 0.1992, norm(output): 0.9362, norm(x): 0.7599, norm(y): 1.0050, norm:0.7724, tok/sec: 100459.40, flops:105.45, batch-reuse:1
@ 3680 train 4.3085 , allloss: 4.3086, dt: 1315.91ms, fracRes: 0.7043, norm(attn): 0.1982, norm(output): 0.9364, norm(x): 0.7605, norm(y): 1.0048, norm:0.5678, tok/sec: 99605.52, flops:104.55, batch-reuse:1
@ 3681 train 4.3842 , allloss: 4.3842, dt: 1310.90ms, fracRes: 0.7044, norm(attn): 0.1973, norm(output): 0.9365, norm(x): 0.7605, norm(y): 1.0047, norm:0.9211, tok/sec: 99986.62, flops:104.95, batch-reuse:1
@ 3682 train 4.3743 , allloss: 4.3744, dt: 1338.21ms, fracRes: 0.7046, norm(attn): 0.1982, norm(output): 0.9364, norm(x): 0.7603, norm(y): 1.0046, norm:0.8793, tok/sec: 97946.00, flops:102.81, batch-reuse:1
@ 3683 train 4.4658 , allloss: 4.4659, dt: 1291.70ms, fracRes: 0.7045, norm(attn): 0.2021, norm(output): 0.9365, norm(x): 0.7609, norm(y): 1.0046, norm:0.5736, tok/sec: 101472.67, flops:106.51, batch-reuse:1
@ 3684 train 4.4884 , allloss: 4.4885, dt: 1285.35ms, fracRes: 0.7042, norm(attn): 0.2021, norm(output): 0.9367, norm(x): 0.7613, norm(y): 1.0046, norm:0.8668, tok/sec: 101974.08, flops:107.04, batch-reuse:1
@ 3685 train 4.3614 , allloss: 4.3615, dt: 1313.93ms, fracRes: 0.7041, norm(attn): 0.2021, norm(output): 0.9365, norm(x): 0.7605, norm(y): 1.0045, norm:0.7149, tok/sec: 99755.82, flops:104.71, batch-reuse:1
@ 3686 train 4.3897 , allloss: 4.3899, dt: 1327.68ms, fracRes: 0.7042, norm(attn): 0.2002, norm(output): 0.9363, norm(x): 0.7598, norm(y): 1.0045, norm:0.6514, tok/sec: 98722.74, flops:103.62, batch-reuse:1
@ 3687 train 4.4250 , allloss: 4.4250, dt: 1331.59ms, fracRes: 0.7040, norm(attn): 0.2002, norm(output): 0.9365, norm(x): 0.7603, norm(y): 1.0048, norm:0.7478, tok/sec: 98432.51, flops:103.32, batch-reuse:1
@ 3688 train 4.4892 , allloss: 4.4893, dt: 1332.96ms, fracRes: 0.7042, norm(attn): 0.2002, norm(output): 0.9366, norm(x): 0.7609, norm(y): 1.0046, norm:0.6720, tok/sec: 98331.77, flops:103.21, batch-reuse:1
@ 3689 train 4.4814 , allloss: 4.4815, dt: 1325.74ms, fracRes: 0.7045, norm(attn): 0.2012, norm(output): 0.9367, norm(x): 0.7608, norm(y): 1.0045, norm:0.7049, tok/sec: 98867.31, flops:103.77, batch-reuse:1
@ 3690 train 4.3410 , allloss: 4.3411, dt: 1279.24ms, fracRes: 0.7044, norm(attn): 0.2021, norm(output): 0.9364, norm(x): 0.7607, norm(y): 1.0044, norm:0.6690, tok/sec: 102460.96, flops:107.55, batch-reuse:1
@ 3691 train 4.4520 , allloss: 4.4521, dt: 1305.08ms, fracRes: 0.7042, norm(attn): 0.2012, norm(output): 0.9364, norm(x): 0.7610, norm(y): 1.0047, norm:0.6116, tok/sec: 100431.92, flops:105.42, batch-reuse:1
@ 3692 train 4.4694 , allloss: 4.4696, dt: 1337.81ms, fracRes: 0.7041, norm(attn): 0.2021, norm(output): 0.9362, norm(x): 0.7603, norm(y): 1.0049, norm:0.6961, tok/sec: 97974.70, flops:102.84, batch-reuse:1
@ 3693 train 4.4376 , allloss: 4.4376, dt: 1335.47ms, fracRes: 0.7038, norm(attn): 0.2012, norm(output): 0.9364, norm(x): 0.7612, norm(y): 1.0047, norm:0.6268, tok/sec: 98146.41, flops:103.02, batch-reuse:1
@ 3694 train 4.4303 , allloss: 4.4304, dt: 1298.61ms, fracRes: 0.7038, norm(attn): 0.1992, norm(output): 0.9365, norm(x): 0.7618, norm(y): 1.0047, norm:0.6150, tok/sec: 100932.43, flops:105.94, batch-reuse:1
@ 3695 train 4.4327 , allloss: 4.4328, dt: 1330.11ms, fracRes: 0.7039, norm(attn): 0.1982, norm(output): 0.9366, norm(x): 0.7620, norm(y): 1.0047, norm:0.6713, tok/sec: 98542.36, flops:103.43, batch-reuse:1
@ 3696 train 4.4475 , allloss: 4.4476, dt: 1303.97ms, fracRes: 0.7042, norm(attn): 0.1953, norm(output): 0.9365, norm(x): 0.7615, norm(y): 1.0046, norm:0.6154, tok/sec: 100517.44, flops:105.51, batch-reuse:1
@ 3697 train 4.3969 , allloss: 4.3971, dt: 1294.15ms, fracRes: 0.7043, norm(attn): 0.1973, norm(output): 0.9366, norm(x): 0.7610, norm(y): 1.0045, norm:0.6187, tok/sec: 101280.11, flops:106.31, batch-reuse:1
@ 3698 train 4.5149 , allloss: 4.5150, dt: 1314.45ms, fracRes: 0.7044, norm(attn): 0.1982, norm(output): 0.9365, norm(x): 0.7604, norm(y): 1.0045, norm:0.5507, tok/sec: 99716.08, flops:104.67, batch-reuse:1
@ 3699 train 4.2997 , allloss: 4.2998, dt: 1300.21ms, fracRes: 0.7042, norm(attn): 0.2002, norm(output): 0.9363, norm(x): 0.7608, norm(y): 1.0045, norm:0.6329, tok/sec: 100808.16, flops:105.81, batch-reuse:1
@ 3700 train 4.4716 , allloss: 4.4716, dt: 1301.63ms, fracRes: 0.7040, norm(attn): 0.1992, norm(output): 0.9364, norm(x): 0.7614, norm(y): 1.0046, norm:0.6972, tok/sec: 100698.46, flops:105.70, batch-reuse:1
@ 3701 train 4.5076 , allloss: 4.5083, dt: 1280.13ms, fracRes: 0.7039, norm(attn): 0.1992, norm(output): 0.9366, norm(x): 0.7620, norm(y): 1.0045, norm:0.6799, tok/sec: 102389.23, flops:107.47, batch-reuse:1
@ 3702 train 4.4026 , allloss: 4.4028, dt: 1302.40ms, fracRes: 0.7039, norm(attn): 0.2012, norm(output): 0.9367, norm(x): 0.7618, norm(y): 1.0044, norm:0.7099, tok/sec: 100638.74, flops:105.63, batch-reuse:1
@ 3703 train 4.3418 , allloss: 4.3420, dt: 1310.84ms, fracRes: 0.7039, norm(attn): 0.2012, norm(output): 0.9365, norm(x): 0.7609, norm(y): 1.0046, norm:0.5760, tok/sec: 99990.76, flops:104.95, batch-reuse:1
@ 3704 train 4.3936 , allloss: 4.3937, dt: 1332.11ms, fracRes: 0.7039, norm(attn): 0.2002, norm(output): 0.9364, norm(x): 0.7612, norm(y): 1.0047, norm:0.7515, tok/sec: 98394.49, flops:103.28, batch-reuse:1
@ 3705 train 4.4557 , allloss: 4.4558, dt: 1337.57ms, fracRes: 0.7039, norm(attn): 0.1992, norm(output): 0.9367, norm(x): 0.7625, norm(y): 1.0047, norm:0.8514, tok/sec: 97992.42, flops:102.86, batch-reuse:1
@ 3706 train 4.3970 , allloss: 4.3978, dt: 1289.66ms, fracRes: 0.7038, norm(attn): 0.1992, norm(output): 0.9364, norm(x): 0.7623, norm(y): 1.0047, norm:0.7105, tok/sec: 101632.67, flops:106.68, batch-reuse:1
@ 3707 train 4.6069 , allloss: 4.6073, dt: 1291.14ms, fracRes: 0.7039, norm(attn): 0.1982, norm(output): 0.9365, norm(x): 0.7624, norm(y): 1.0046, norm:0.7334, tok/sec: 101516.46, flops:106.55, batch-reuse:1
@ 3708 train 4.6124 , allloss: 4.6126, dt: 1314.29ms, fracRes: 0.7040, norm(attn): 0.1992, norm(output): 0.9366, norm(x): 0.7625, norm(y): 1.0044, norm:0.7309, tok/sec: 99728.58, flops:104.68, batch-reuse:1
@ 3709 train 4.5960 , allloss: 4.5961, dt: 1333.08ms, fracRes: 0.7038, norm(attn): 0.1982, norm(output): 0.9366, norm(x): 0.7633, norm(y): 1.0045, norm:0.6964, tok/sec: 98322.50, flops:103.20, batch-reuse:1
@ 3710 train 4.6644 , allloss: 4.6666, dt: 1305.20ms, fracRes: 0.7040, norm(attn): 0.2002, norm(output): 0.9365, norm(x): 0.7626, norm(y): 1.0045, norm:0.6759, tok/sec: 100422.73, flops:105.41, batch-reuse:1
@ 3711 train 4.7105 , allloss: 4.7105, dt: 1304.11ms, fracRes: 0.7043, norm(attn): 0.2012, norm(output): 0.9367, norm(x): 0.7622, norm(y): 1.0044, norm:0.6246, tok/sec: 100506.60, flops:105.49, batch-reuse:1
@ 3712 train 4.6501 , allloss: 4.6502, dt: 1316.87ms, fracRes: 0.7044, norm(attn): 0.2012, norm(output): 0.9366, norm(x): 0.7622, norm(y): 1.0043, norm:0.7156, tok/sec: 99532.95, flops:104.47, batch-reuse:1
@ 3713 train 4.7543 , allloss: 4.7544, dt: 1298.61ms, fracRes: 0.7042, norm(attn): 0.1992, norm(output): 0.9365, norm(x): 0.7619, norm(y): 1.0045, norm:0.6600, tok/sec: 100932.17, flops:105.94, batch-reuse:1
@ 3714 train 4.7137 , allloss: 4.7139, dt: 1305.02ms, fracRes: 0.7040, norm(attn): 0.1982, norm(output): 0.9365, norm(x): 0.7624, norm(y): 1.0047, norm:0.9033, tok/sec: 100436.49, flops:105.42, batch-reuse:1
@ 3715 train 4.6360 , allloss: 4.6360, dt: 1289.65ms, fracRes: 0.7041, norm(attn): 0.1973, norm(output): 0.9365, norm(x): 0.7627, norm(y): 1.0044, norm:0.6243, tok/sec: 101633.61, flops:106.68, batch-reuse:1
@ 3716 train 4.6177 , allloss: 4.6178, dt: 1306.05ms, fracRes: 0.7043, norm(attn): 0.2002, norm(output): 0.9366, norm(x): 0.7625, norm(y): 1.0044, norm:0.7091, tok/sec: 100357.47, flops:105.34, batch-reuse:1
@ 3717 train 4.5913 , allloss: 4.5913, dt: 1331.26ms, fracRes: 0.7045, norm(attn): 0.2021, norm(output): 0.9367, norm(x): 0.7618, norm(y): 1.0043, norm:0.5788, tok/sec: 98457.02, flops:103.34, batch-reuse:1
@ 3718 train 4.5582 , allloss: 4.5583, dt: 1298.40ms, fracRes: 0.7045, norm(attn): 0.2031, norm(output): 0.9366, norm(x): 0.7619, norm(y): 1.0043, norm:0.6855, tok/sec: 100949.11, flops:105.96, batch-reuse:1
@ 3719 train 4.6011 , allloss: 4.6011, dt: 1288.39ms, fracRes: 0.7046, norm(attn): 0.2021, norm(output): 0.9367, norm(x): 0.7614, norm(y): 1.0041, norm:0.7040, tok/sec: 101732.84, flops:106.78, batch-reuse:1
@ 3720 train 4.5541 , allloss: 4.5542, dt: 1276.97ms, fracRes: 0.7044, norm(attn): 0.2031, norm(output): 0.9366, norm(x): 0.7615, norm(y): 1.0042, norm:0.6915, tok/sec: 102642.87, flops:107.74, batch-reuse:1
@ 3721 train 4.5615 , allloss: 4.5616, dt: 1294.84ms, fracRes: 0.7042, norm(attn): 0.2012, norm(output): 0.9366, norm(x): 0.7616, norm(y): 1.0044, norm:0.5937, tok/sec: 101226.12, flops:106.25, batch-reuse:1
@ 3722 train 4.5195 , allloss: 4.5195, dt: 1304.10ms, fracRes: 0.7042, norm(attn): 0.1992, norm(output): 0.9365, norm(x): 0.7608, norm(y): 1.0046, norm:0.6682, tok/sec: 100507.55, flops:105.50, batch-reuse:1
@ 3723 train 4.5735 , allloss: 4.5737, dt: 1319.14ms, fracRes: 0.7043, norm(attn): 0.1963, norm(output): 0.9364, norm(x): 0.7603, norm(y): 1.0044, norm:0.5624, tok/sec: 99362.00, flops:104.29, batch-reuse:1
@ 3724 train 4.6500 , allloss: 4.6502, dt: 1288.36ms, fracRes: 0.7042, norm(attn): 0.1973, norm(output): 0.9365, norm(x): 0.7609, norm(y): 1.0045, norm:0.5939, tok/sec: 101735.59, flops:106.78, batch-reuse:1
@ 3725 train 4.6365 , allloss: 4.6366, dt: 1297.84ms, fracRes: 0.7042, norm(attn): 0.2002, norm(output): 0.9365, norm(x): 0.7610, norm(y): 1.0047, norm:0.6108, tok/sec: 100992.74, flops:106.01, batch-reuse:1
@ 3726 train 4.6576 , allloss: 4.6577, dt: 1314.75ms, fracRes: 0.7043, norm(attn): 0.2012, norm(output): 0.9366, norm(x): 0.7611, norm(y): 1.0044, norm:0.5964, tok/sec: 99693.17, flops:104.64, batch-reuse:1
@ 3727 train 4.6141 , allloss: 4.6142, dt: 1340.50ms, fracRes: 0.7042, norm(attn): 0.2012, norm(output): 0.9366, norm(x): 0.7617, norm(y): 1.0043, norm:0.6981, tok/sec: 97778.42, flops:102.63, batch-reuse:1
@ 3728 train 4.5950 , allloss: 4.5952, dt: 1339.49ms, fracRes: 0.7041, norm(attn): 0.1982, norm(output): 0.9366, norm(x): 0.7617, norm(y): 1.0044, norm:0.7514, tok/sec: 97852.05, flops:102.71, batch-reuse:1
@ 3729 train 4.6149 , allloss: 4.6150, dt: 1341.46ms, fracRes: 0.7040, norm(attn): 0.1963, norm(output): 0.9366, norm(x): 0.7614, norm(y): 1.0046, norm:0.7834, tok/sec: 97708.35, flops:102.56, batch-reuse:1
@ 3730 train 4.6227 , allloss: 4.6228, dt: 1346.96ms, fracRes: 0.7041, norm(attn): 0.1953, norm(output): 0.9364, norm(x): 0.7608, norm(y): 1.0047, norm:0.6528, tok/sec: 97309.16, flops:102.14, batch-reuse:1
@ 3731 train 4.6050 , allloss: 4.6052, dt: 1347.25ms, fracRes: 0.7044, norm(attn): 0.1914, norm(output): 0.9365, norm(x): 0.7606, norm(y): 1.0046, norm:0.6989, tok/sec: 97288.78, flops:102.12, batch-reuse:1
@ 3732 train 4.6402 , allloss: 4.6403, dt: 1338.46ms, fracRes: 0.7043, norm(attn): 0.1914, norm(output): 0.9366, norm(x): 0.7608, norm(y): 1.0045, norm:0.6166, tok/sec: 97927.14, flops:102.79, batch-reuse:1
@ 3733 train 4.6483 , allloss: 4.6484, dt: 1304.61ms, fracRes: 0.7041, norm(attn): 0.1973, norm(output): 0.9367, norm(x): 0.7618, norm(y): 1.0044, norm:0.6920, tok/sec: 100468.10, flops:105.45, batch-reuse:1
@ 3734 train 4.5894 , allloss: 4.5895, dt: 1279.68ms, fracRes: 0.7042, norm(attn): 0.2012, norm(output): 0.9369, norm(x): 0.7619, norm(y): 1.0043, norm:0.7643, tok/sec: 102425.74, flops:107.51, batch-reuse:1
@ 3735 train 4.7120 , allloss: 4.7121, dt: 1288.61ms, fracRes: 0.7041, norm(attn): 0.2012, norm(output): 0.9366, norm(x): 0.7611, norm(y): 1.0043, norm:0.6702, tok/sec: 101715.86, flops:106.76, batch-reuse:1
@ 3736 train 4.6805 , allloss: 4.6808, dt: 1294.89ms, fracRes: 0.7042, norm(attn): 0.2021, norm(output): 0.9366, norm(x): 0.7602, norm(y): 1.0043, norm:0.6385, tok/sec: 101222.41, flops:106.25, batch-reuse:1
@ 3737 train 4.5597 , allloss: 4.5598, dt: 1306.95ms, fracRes: 0.7042, norm(attn): 0.2012, norm(output): 0.9364, norm(x): 0.7595, norm(y): 1.0046, norm:0.6116, tok/sec: 100288.38, flops:105.27, batch-reuse:1
@ 3738 train 4.5769 , allloss: 4.5771, dt: 1281.09ms, fracRes: 0.7041, norm(attn): 0.2012, norm(output): 0.9363, norm(x): 0.7599, norm(y): 1.0047, norm:0.6606, tok/sec: 102312.95, flops:107.39, batch-reuse:1
@ 3739 train 4.5464 , allloss: 4.5466, dt: 1305.17ms, fracRes: 0.7039, norm(attn): 0.1982, norm(output): 0.9366, norm(x): 0.7610, norm(y): 1.0045, norm:0.5903, tok/sec: 100425.32, flops:105.41, batch-reuse:1
@ 3740 train 4.6397 , allloss: 4.6398, dt: 1311.38ms, fracRes: 0.7038, norm(attn): 0.1963, norm(output): 0.9368, norm(x): 0.7616, norm(y): 1.0045, norm:0.6984, tok/sec: 99949.66, flops:104.91, batch-reuse:1
@ 3741 train 4.8359 , allloss: 4.8360, dt: 1280.46ms, fracRes: 0.7039, norm(attn): 0.1953, norm(output): 0.9366, norm(x): 0.7612, norm(y): 1.0047, norm:0.9160, tok/sec: 102363.57, flops:107.44, batch-reuse:1
@ 3742 train 4.5335 , allloss: 4.5336, dt: 1297.29ms, fracRes: 0.7041, norm(attn): 0.1982, norm(output): 0.9367, norm(x): 0.7614, norm(y): 1.0047, norm:0.7863, tok/sec: 101035.60, flops:106.05, batch-reuse:1
@ 3743 train 4.6181 , allloss: 4.6182, dt: 1294.45ms, fracRes: 0.7043, norm(attn): 0.1982, norm(output): 0.9367, norm(x): 0.7614, norm(y): 1.0045, norm:0.8090, tok/sec: 101257.05, flops:106.28, batch-reuse:1
@ 3744 train 4.8113 , allloss: 4.8114, dt: 1294.11ms, fracRes: 0.7047, norm(attn): 0.1934, norm(output): 0.9369, norm(x): 0.7607, norm(y): 1.0043, norm:0.7028, tok/sec: 101283.13, flops:106.31, batch-reuse:1
@ 3745 train 4.6701 , allloss: 4.6702, dt: 1298.48ms, fracRes: 0.7045, norm(attn): 0.1982, norm(output): 0.9368, norm(x): 0.7616, norm(y): 1.0044, norm:0.8943, tok/sec: 100943.01, flops:105.95, batch-reuse:1
@ 3746 train 4.5908 , allloss: 4.5910, dt: 1286.79ms, fracRes: 0.7041, norm(attn): 0.1973, norm(output): 0.9365, norm(x): 0.7618, norm(y): 1.0045, norm:0.8769, tok/sec: 101859.77, flops:106.92, batch-reuse:1
@ 3747 train 4.5712 , allloss: 4.5715, dt: 1307.57ms, fracRes: 0.7041, norm(attn): 0.1982, norm(output): 0.9365, norm(x): 0.7615, norm(y): 1.0044, norm:0.6910, tok/sec: 100241.24, flops:105.22, batch-reuse:1
@ 3748 train 4.5873 , allloss: 4.5874, dt: 1338.79ms, fracRes: 0.7042, norm(attn): 0.1973, norm(output): 0.9365, norm(x): 0.7613, norm(y): 1.0044, norm:0.6605, tok/sec: 97903.06, flops:102.76, batch-reuse:1
@ 3749 train 4.6004 , allloss: 4.6005, dt: 1309.96ms, fracRes: 0.7043, norm(attn): 0.1982, norm(output): 0.9367, norm(x): 0.7615, norm(y): 1.0045, norm:0.8480, tok/sec: 100057.75, flops:105.02, batch-reuse:1
@ 3750 train 4.6338 , allloss: 4.6339, dt: 1291.70ms, fracRes: 0.7043, norm(attn): 0.1982, norm(output): 0.9369, norm(x): 0.7618, norm(y): 1.0042, norm:0.7289, tok/sec: 101472.36, flops:106.51, batch-reuse:1
@ 3751 train 4.5941 , allloss: 4.5942, dt: 1290.29ms, fracRes: 0.7046, norm(attn): 0.1963, norm(output): 0.9367, norm(x): 0.7604, norm(y): 1.0040, norm:0.5730, tok/sec: 101583.58, flops:106.63, batch-reuse:1
@ 3752 train 4.5886 , allloss: 4.5887, dt: 1312.94ms, fracRes: 0.7047, norm(attn): 0.1973, norm(output): 0.9367, norm(x): 0.7608, norm(y): 1.0038, norm:0.7642, tok/sec: 99830.85, flops:104.79, batch-reuse:1
@ 3753 train 4.6052 , allloss: 4.6054, dt: 1327.09ms, fracRes: 0.7041, norm(attn): 0.1982, norm(output): 0.9368, norm(x): 0.7624, norm(y): 1.0038, norm:0.7675, tok/sec: 98766.69, flops:103.67, batch-reuse:1
@ 3754 train 4.5337 , allloss: 4.5337, dt: 1345.11ms, fracRes: 0.7041, norm(attn): 0.1973, norm(output): 0.9370, norm(x): 0.7625, norm(y): 1.0042, norm:0.7692, tok/sec: 97443.66, flops:102.28, batch-reuse:1
@ 3755 train 4.5781 , allloss: 4.5782, dt: 1281.39ms, fracRes: 0.7041, norm(attn): 0.2002, norm(output): 0.9369, norm(x): 0.7617, norm(y): 1.0042, norm:0.7888, tok/sec: 102288.87, flops:107.37, batch-reuse:1
@ 3756 train 4.6683 , allloss: 4.6684, dt: 1303.16ms, fracRes: 0.7039, norm(attn): 0.1982, norm(output): 0.9371, norm(x): 0.7619, norm(y): 1.0042, norm:0.6865, tok/sec: 100580.39, flops:105.57, batch-reuse:1
@ 3757 train 4.6084 , allloss: 4.6085, dt: 1326.11ms, fracRes: 0.7039, norm(attn): 0.1982, norm(output): 0.9370, norm(x): 0.7617, norm(y): 1.0041, norm:0.7095, tok/sec: 98839.42, flops:103.75, batch-reuse:1
@ 3758 train 4.5406 , allloss: 4.5410, dt: 1338.27ms, fracRes: 0.7040, norm(attn): 0.1982, norm(output): 0.9368, norm(x): 0.7617, norm(y): 1.0042, norm:0.6101, tok/sec: 97941.50, flops:102.80, batch-reuse:1
@ 3759 train 4.5800 , allloss: 4.5802, dt: 1310.83ms, fracRes: 0.7040, norm(attn): 0.2002, norm(output): 0.9367, norm(x): 0.7619, norm(y): 1.0044, norm:0.7089, tok/sec: 99991.60, flops:104.95, batch-reuse:1
@ 3760 train 4.6110 , allloss: 4.6112, dt: 1324.23ms, fracRes: 0.7043, norm(attn): 0.2002, norm(output): 0.9368, norm(x): 0.7618, norm(y): 1.0041, norm:0.5806, tok/sec: 98979.56, flops:103.89, batch-reuse:1
@ 3761 train 4.7127 , allloss: 4.7130, dt: 1333.36ms, fracRes: 0.7045, norm(attn): 0.2021, norm(output): 0.9367, norm(x): 0.7610, norm(y): 1.0041, norm:0.6735, tok/sec: 98302.14, flops:103.18, batch-reuse:1
@ 3762 train 4.5003 , allloss: 4.5004, dt: 1333.30ms, fracRes: 0.7045, norm(attn): 0.2031, norm(output): 0.9367, norm(x): 0.7613, norm(y): 1.0043, norm:0.7943, tok/sec: 98306.47, flops:103.19, batch-reuse:1
@ 3763 train 4.6647 , allloss: 4.6648, dt: 1330.72ms, fracRes: 0.7044, norm(attn): 0.2012, norm(output): 0.9367, norm(x): 0.7617, norm(y): 1.0043, norm:0.6447, tok/sec: 98497.25, flops:103.39, batch-reuse:1
@ 3764 train 4.5594 , allloss: 4.5595, dt: 1337.87ms, fracRes: 0.7041, norm(attn): 0.1973, norm(output): 0.9369, norm(x): 0.7621, norm(y): 1.0043, norm:0.6100, tok/sec: 97970.72, flops:102.83, batch-reuse:1
@ 3765 train 4.5412 , allloss: 4.5413, dt: 1351.97ms, fracRes: 0.7042, norm(attn): 0.1934, norm(output): 0.9368, norm(x): 0.7614, norm(y): 1.0043, norm:0.6011, tok/sec: 96949.24, flops:101.76, batch-reuse:1
@ 3766 train 4.5498 , allloss: 4.5499, dt: 1349.24ms, fracRes: 0.7045, norm(attn): 0.1934, norm(output): 0.9367, norm(x): 0.7609, norm(y): 1.0043, norm:0.5716, tok/sec: 97145.28, flops:101.97, batch-reuse:1
@ 3767 train 4.5676 , allloss: 4.5677, dt: 1300.62ms, fracRes: 0.7045, norm(attn): 0.1934, norm(output): 0.9369, norm(x): 0.7614, norm(y): 1.0044, norm:0.6250, tok/sec: 100776.40, flops:105.78, batch-reuse:1
@ 3768 train 4.5529 , allloss: 4.5530, dt: 1294.21ms, fracRes: 0.7045, norm(attn): 0.1963, norm(output): 0.9370, norm(x): 0.7620, norm(y): 1.0043, norm:0.6293, tok/sec: 101275.33, flops:106.30, batch-reuse:1
@ 3769 train 4.7524 , allloss: 4.7527, dt: 1305.28ms, fracRes: 0.7045, norm(attn): 0.1963, norm(output): 0.9371, norm(x): 0.7628, norm(y): 1.0042, norm:0.5818, tok/sec: 100416.53, flops:105.40, batch-reuse:1
@ 3770 train 4.5977 , allloss: 4.5978, dt: 1335.51ms, fracRes: 0.7045, norm(attn): 0.1992, norm(output): 0.9370, norm(x): 0.7626, norm(y): 1.0042, norm:0.5897, tok/sec: 98144.15, flops:103.02, batch-reuse:1
@ 3771 train 4.5963 , allloss: 4.5964, dt: 1335.18ms, fracRes: 0.7045, norm(attn): 0.1992, norm(output): 0.9369, norm(x): 0.7629, norm(y): 1.0042, norm:0.6333, tok/sec: 98167.68, flops:103.04, batch-reuse:1
@ 3772 train 4.5792 , allloss: 4.5793, dt: 1336.48ms, fracRes: 0.7045, norm(attn): 0.1982, norm(output): 0.9370, norm(x): 0.7628, norm(y): 1.0041, norm:0.5256, tok/sec: 98072.33, flops:102.94, batch-reuse:1
@ 3773 train 4.5781 , allloss: 4.5782, dt: 1315.90ms, fracRes: 0.7043, norm(attn): 0.1963, norm(output): 0.9369, norm(x): 0.7631, norm(y): 1.0041, norm:0.6157, tok/sec: 99606.65, flops:104.55, batch-reuse:1
@ 3774 train 4.5741 , allloss: 4.5742, dt: 1322.10ms, fracRes: 0.7040, norm(attn): 0.1973, norm(output): 0.9371, norm(x): 0.7637, norm(y): 1.0041, norm:0.6331, tok/sec: 99139.58, flops:104.06, batch-reuse:1
@ 3775 train 4.6581 , allloss: 4.6582, dt: 1293.92ms, fracRes: 0.7041, norm(attn): 0.1924, norm(output): 0.9369, norm(x): 0.7636, norm(y): 1.0041, norm:0.7702, tok/sec: 101298.38, flops:106.33, batch-reuse:1
@ 3776 train 4.6594 , allloss: 4.6595, dt: 1292.66ms, fracRes: 0.7044, norm(attn): 0.1943, norm(output): 0.9368, norm(x): 0.7627, norm(y): 1.0041, norm:0.8295, tok/sec: 101397.29, flops:106.43, batch-reuse:1
@ 3777 train 4.5902 , allloss: 4.5903, dt: 1301.67ms, fracRes: 0.7047, norm(attn): 0.1934, norm(output): 0.9370, norm(x): 0.7626, norm(y): 1.0040, norm:0.6790, tok/sec: 100695.18, flops:105.69, batch-reuse:1
@ 3778 train 4.5364 , allloss: 4.5364, dt: 1299.77ms, fracRes: 0.7046, norm(attn): 0.1953, norm(output): 0.9369, norm(x): 0.7621, norm(y): 1.0041, norm:0.7224, tok/sec: 100842.24, flops:105.85, batch-reuse:1
@ 3779 train 4.4864 , allloss: 4.4865, dt: 1321.42ms, fracRes: 0.7046, norm(attn): 0.1992, norm(output): 0.9368, norm(x): 0.7615, norm(y): 1.0041, norm:0.6057, tok/sec: 99190.36, flops:104.11, batch-reuse:1
@ 3780 train 4.5637 , allloss: 4.5638, dt: 1352.85ms, fracRes: 0.7046, norm(attn): 0.2012, norm(output): 0.9369, norm(x): 0.7618, norm(y): 1.0040, norm:0.6820, tok/sec: 96886.04, flops:101.69, batch-reuse:1
@ 3781 train 4.4942 , allloss: 4.4942, dt: 1335.18ms, fracRes: 0.7043, norm(attn): 0.2021, norm(output): 0.9369, norm(x): 0.7626, norm(y): 1.0040, norm:0.6444, tok/sec: 98167.82, flops:103.04, batch-reuse:1
@ 3782 train 4.8099 , allloss: 4.8103, dt: 1286.29ms, fracRes: 0.7045, norm(attn): 0.2002, norm(output): 0.9370, norm(x): 0.7623, norm(y): 1.0041, norm:0.8429, tok/sec: 101899.42, flops:106.96, batch-reuse:1
@ 3783 train 4.5016 , allloss: 4.5017, dt: 1311.65ms, fracRes: 0.7044, norm(attn): 0.1943, norm(output): 0.9370, norm(x): 0.7624, norm(y): 1.0043, norm:0.7446, tok/sec: 99929.44, flops:104.89, batch-reuse:1
@ 3784 train 4.5372 , allloss: 4.5372, dt: 1306.35ms, fracRes: 0.7042, norm(attn): 0.1934, norm(output): 0.9371, norm(x): 0.7633, norm(y): 1.0042, norm:0.5979, tok/sec: 100334.43, flops:105.31, batch-reuse:1
@ 3785 train 4.5318 , allloss: 4.5319, dt: 1303.00ms, fracRes: 0.7041, norm(attn): 0.1953, norm(output): 0.9370, norm(x): 0.7629, norm(y): 1.0042, norm:0.6421, tok/sec: 100592.20, flops:105.58, batch-reuse:1
@ 3786 train 4.5772 , allloss: 4.5773, dt: 1301.98ms, fracRes: 0.7042, norm(attn): 0.1992, norm(output): 0.9368, norm(x): 0.7620, norm(y): 1.0039, norm:0.6059, tok/sec: 100671.30, flops:105.67, batch-reuse:1
@ 3787 train 4.5868 , allloss: 4.5870, dt: 1338.65ms, fracRes: 0.7043, norm(attn): 0.1973, norm(output): 0.9368, norm(x): 0.7617, norm(y): 1.0041, norm:0.6422, tok/sec: 97913.71, flops:102.77, batch-reuse:1
@ 3788 train 4.5153 , allloss: 4.5155, dt: 1337.10ms, fracRes: 0.7043, norm(attn): 0.1992, norm(output): 0.9369, norm(x): 0.7622, norm(y): 1.0041, norm:0.6617, tok/sec: 98027.37, flops:102.89, batch-reuse:1
@ 3789 train 4.5659 , allloss: 4.5661, dt: 1322.09ms, fracRes: 0.7043, norm(attn): 0.1982, norm(output): 0.9369, norm(x): 0.7624, norm(y): 1.0042, norm:0.5887, tok/sec: 99139.65, flops:104.06, batch-reuse:1
@ 3790 train 4.6409 , allloss: 4.6411, dt: 1318.73ms, fracRes: 0.7039, norm(attn): 0.2002, norm(output): 0.9370, norm(x): 0.7628, norm(y): 1.0043, norm:0.5785, tok/sec: 99392.77, flops:104.33, batch-reuse:1
@ 3791 train 4.5793 , allloss: 4.5794, dt: 1314.47ms, fracRes: 0.7040, norm(attn): 0.2002, norm(output): 0.9369, norm(x): 0.7633, norm(y): 1.0040, norm:0.6858, tok/sec: 99715.00, flops:104.66, batch-reuse:1
@ 3792 train 4.6713 , allloss: 4.6714, dt: 1304.09ms, fracRes: 0.7040, norm(attn): 0.1963, norm(output): 0.9370, norm(x): 0.7634, norm(y): 1.0041, norm:0.7674, tok/sec: 100508.25, flops:105.50, batch-reuse:1
@ 3793 train 4.5915 , allloss: 4.5918, dt: 1330.16ms, fracRes: 0.7041, norm(attn): 0.1934, norm(output): 0.9369, norm(x): 0.7634, norm(y): 1.0044, norm:0.7981, tok/sec: 98538.76, flops:103.43, batch-reuse:1
@ 3794 train 4.5274 , allloss: 4.5275, dt: 1324.68ms, fracRes: 0.7041, norm(attn): 0.1934, norm(output): 0.9371, norm(x): 0.7641, norm(y): 1.0040, norm:0.6534, tok/sec: 98946.01, flops:103.86, batch-reuse:1
@ 3795 train 4.5038 , allloss: 4.5038, dt: 1332.66ms, fracRes: 0.7042, norm(attn): 0.1924, norm(output): 0.9369, norm(x): 0.7644, norm(y): 1.0040, norm:0.6341, tok/sec: 98353.39, flops:103.23, batch-reuse:1
@ 3796 train 4.6068 , allloss: 4.6069, dt: 1308.94ms, fracRes: 0.7041, norm(attn): 0.1943, norm(output): 0.9371, norm(x): 0.7643, norm(y): 1.0040, norm:0.6062, tok/sec: 100135.92, flops:105.11, batch-reuse:1
@ 3797 train 4.6823 , allloss: 4.6824, dt: 1332.34ms, fracRes: 0.7045, norm(attn): 0.1914, norm(output): 0.9369, norm(x): 0.7633, norm(y): 1.0042, norm:0.7418, tok/sec: 98377.31, flops:103.26, batch-reuse:1
@ 3798 train 4.5498 , allloss: 4.5499, dt: 1299.52ms, fracRes: 0.7045, norm(attn): 0.1914, norm(output): 0.9368, norm(x): 0.7625, norm(y): 1.0042, norm:0.6017, tok/sec: 100861.87, flops:105.87, batch-reuse:1
@ 3799 train 4.5594 , allloss: 4.5597, dt: 1288.09ms, fracRes: 0.7044, norm(attn): 0.1924, norm(output): 0.9370, norm(x): 0.7630, norm(y): 1.0043, norm:0.5759, tok/sec: 101757.15, flops:106.81, batch-reuse:1
@ 3800 train 4.5391 , allloss: 4.5391, dt: 1314.18ms, fracRes: 0.7042, norm(attn): 0.1924, norm(output): 0.9370, norm(x): 0.7637, norm(y): 1.0043, norm:0.6013, tok/sec: 99736.58, flops:104.69, batch-reuse:1
@ 3801 train 4.5070 , allloss: 4.5070, dt: 1308.52ms, fracRes: 0.7042, norm(attn): 0.1934, norm(output): 0.9370, norm(x): 0.7642, norm(y): 1.0041, norm:0.5673, tok/sec: 100168.12, flops:105.14, batch-reuse:1
@ 3802 train 4.5072 , allloss: 4.5072, dt: 1280.31ms, fracRes: 0.7041, norm(attn): 0.1934, norm(output): 0.9371, norm(x): 0.7647, norm(y): 1.0041, norm:0.5324, tok/sec: 102375.14, flops:107.46, batch-reuse:1
@ 3803 train 4.5296 , allloss: 4.5296, dt: 1284.98ms, fracRes: 0.7040, norm(attn): 0.1934, norm(output): 0.9369, norm(x): 0.7642, norm(y): 1.0041, norm:0.5205, tok/sec: 102003.06, flops:107.07, batch-reuse:1
@ 3804 train 4.5168 , allloss: 4.5169, dt: 1315.33ms, fracRes: 0.7041, norm(attn): 0.1982, norm(output): 0.9368, norm(x): 0.7638, norm(y): 1.0042, norm:0.6087, tok/sec: 99649.17, flops:104.59, batch-reuse:1
@ 3805 train 4.5946 , allloss: 4.5947, dt: 1293.75ms, fracRes: 0.7042, norm(attn): 0.1943, norm(output): 0.9369, norm(x): 0.7637, norm(y): 1.0042, norm:0.5561, tok/sec: 101311.71, flops:106.34, batch-reuse:1
@ 3806 train 4.5402 , allloss: 4.5402, dt: 1321.71ms, fracRes: 0.7041, norm(attn): 0.1963, norm(output): 0.9370, norm(x): 0.7640, norm(y): 1.0042, norm:0.6267, tok/sec: 99168.44, flops:104.09, batch-reuse:1
@ 3807 train 4.4765 , allloss: 4.4765, dt: 1315.50ms, fracRes: 0.7040, norm(attn): 0.1963, norm(output): 0.9371, norm(x): 0.7636, norm(y): 1.0040, norm:0.6480, tok/sec: 99636.44, flops:104.58, batch-reuse:1
@ 3808 train 4.5113 , allloss: 4.5114, dt: 1297.50ms, fracRes: 0.7043, norm(attn): 0.1963, norm(output): 0.9369, norm(x): 0.7631, norm(y): 1.0040, norm:0.5737, tok/sec: 101018.91, flops:106.03, batch-reuse:1
@ 3809 train 4.4801 , allloss: 4.4802, dt: 1293.26ms, fracRes: 0.7044, norm(attn): 0.1953, norm(output): 0.9370, norm(x): 0.7627, norm(y): 1.0042, norm:0.5560, tok/sec: 101350.11, flops:106.38, batch-reuse:1
@ 3810 train 4.4920 , allloss: 4.4922, dt: 1292.53ms, fracRes: 0.7043, norm(attn): 0.1963, norm(output): 0.9369, norm(x): 0.7634, norm(y): 1.0044, norm:0.6673, tok/sec: 101407.28, flops:106.44, batch-reuse:1
@ 3811 train 4.4457 , allloss: 4.4457, dt: 1325.63ms, fracRes: 0.7042, norm(attn): 0.1973, norm(output): 0.9368, norm(x): 0.7630, norm(y): 1.0042, norm:0.6295, tok/sec: 98875.33, flops:103.78, batch-reuse:1
@ 3812 train 4.4479 , allloss: 4.4480, dt: 1280.45ms, fracRes: 0.7042, norm(attn): 0.1953, norm(output): 0.9368, norm(x): 0.7621, norm(y): 1.0040, norm:0.6002, tok/sec: 102364.16, flops:107.44, batch-reuse:1
@ 3813 train 4.3326 , allloss: 4.3327, dt: 1307.34ms, fracRes: 0.7042, norm(attn): 0.1973, norm(output): 0.9367, norm(x): 0.7617, norm(y): 1.0040, norm:0.5817, tok/sec: 100258.46, flops:105.23, batch-reuse:1
@ 3814 train 4.5071 , allloss: 4.5072, dt: 1395.88ms, fracRes: 0.7040, norm(attn): 0.1963, norm(output): 0.9370, norm(x): 0.7635, norm(y): 1.0041, norm:0.5891, tok/sec: 93899.17, flops:98.56, batch-reuse:1
@ 3815 train 4.5583 , allloss: 4.5584, dt: 1343.40ms, fracRes: 0.7042, norm(attn): 0.1992, norm(output): 0.9368, norm(x): 0.7641, norm(y): 1.0042, norm:0.6436, tok/sec: 97567.66, flops:102.41, batch-reuse:1
@ 3816 train 4.5101 , allloss: 4.5102, dt: 1334.36ms, fracRes: 0.7043, norm(attn): 0.1982, norm(output): 0.9370, norm(x): 0.7635, norm(y): 1.0041, norm:0.6223, tok/sec: 98228.02, flops:103.10, batch-reuse:1
@ 3817 train 4.4728 , allloss: 4.4729, dt: 1312.97ms, fracRes: 0.7045, norm(attn): 0.1943, norm(output): 0.9371, norm(x): 0.7632, norm(y): 1.0040, norm:0.6206, tok/sec: 99828.82, flops:104.78, batch-reuse:1
@ 3818 train 4.5068 , allloss: 4.5070, dt: 1294.74ms, fracRes: 0.7044, norm(attn): 0.1914, norm(output): 0.9370, norm(x): 0.7636, norm(y): 1.0041, norm:0.6753, tok/sec: 101234.21, flops:106.26, batch-reuse:1
@ 3819 train 4.4983 , allloss: 4.4984, dt: 1303.92ms, fracRes: 0.7044, norm(attn): 0.1914, norm(output): 0.9369, norm(x): 0.7631, norm(y): 1.0043, norm:0.6437, tok/sec: 100521.39, flops:105.51, batch-reuse:1
@ 3820 train 4.5476 , allloss: 4.5478, dt: 1296.96ms, fracRes: 0.7042, norm(attn): 0.1914, norm(output): 0.9370, norm(x): 0.7633, norm(y): 1.0043, norm:0.5702, tok/sec: 101060.62, flops:106.08, batch-reuse:1
@ 3821 train 4.5555 , allloss: 4.5557, dt: 1327.26ms, fracRes: 0.7042, norm(attn): 0.1914, norm(output): 0.9370, norm(x): 0.7636, norm(y): 1.0043, norm:0.6080, tok/sec: 98754.05, flops:103.66, batch-reuse:1
@ 3822 train 4.4410 , allloss: 4.4411, dt: 1320.12ms, fracRes: 0.7043, norm(attn): 0.1895, norm(output): 0.9370, norm(x): 0.7639, norm(y): 1.0041, norm:0.5798, tok/sec: 99287.58, flops:104.22, batch-reuse:1
@ 3823 train 4.5050 , allloss: 4.5051, dt: 1311.03ms, fracRes: 0.7043, norm(attn): 0.1885, norm(output): 0.9370, norm(x): 0.7639, norm(y): 1.0040, norm:0.7186, tok/sec: 99976.54, flops:104.94, batch-reuse:1
@ 3824 train 4.4346 , allloss: 4.4347, dt: 1317.82ms, fracRes: 0.7043, norm(attn): 0.1904, norm(output): 0.9371, norm(x): 0.7637, norm(y): 1.0040, norm:0.5343, tok/sec: 99461.35, flops:104.40, batch-reuse:1
@ 3825 train 4.4967 , allloss: 4.4967, dt: 1326.03ms, fracRes: 0.7044, norm(attn): 0.1934, norm(output): 0.9371, norm(x): 0.7634, norm(y): 1.0041, norm:0.5667, tok/sec: 98845.51, flops:103.75, batch-reuse:1
@ 3826 train 4.5146 , allloss: 4.5147, dt: 1289.12ms, fracRes: 0.7044, norm(attn): 0.1953, norm(output): 0.9371, norm(x): 0.7630, norm(y): 1.0040, norm:0.5490, tok/sec: 101675.68, flops:106.72, batch-reuse:1
@ 3827 train 4.4879 , allloss: 4.4880, dt: 1303.42ms, fracRes: 0.7044, norm(attn): 0.1953, norm(output): 0.9370, norm(x): 0.7629, norm(y): 1.0042, norm:0.6888, tok/sec: 100560.02, flops:105.55, batch-reuse:1
@ 3828 train 4.4361 , allloss: 4.4361, dt: 1307.93ms, fracRes: 0.7043, norm(attn): 0.1934, norm(output): 0.9370, norm(x): 0.7639, norm(y): 1.0042, norm:0.5818, tok/sec: 100213.24, flops:105.19, batch-reuse:1
@ 3829 train 4.4866 , allloss: 4.4866, dt: 1292.18ms, fracRes: 0.7043, norm(attn): 0.1914, norm(output): 0.9370, norm(x): 0.7641, norm(y): 1.0042, norm:0.7684, tok/sec: 101435.00, flops:106.47, batch-reuse:1
@ 3830 train 4.5979 , allloss: 4.5981, dt: 1316.92ms, fracRes: 0.7045, norm(attn): 0.1914, norm(output): 0.9369, norm(x): 0.7635, norm(y): 1.0042, norm:0.8102, tok/sec: 99529.24, flops:104.47, batch-reuse:1
@ 3831 train 4.4085 , allloss: 4.4086, dt: 1290.49ms, fracRes: 0.7044, norm(attn): 0.1934, norm(output): 0.9371, norm(x): 0.7636, norm(y): 1.0041, norm:0.6377, tok/sec: 101567.52, flops:106.61, batch-reuse:1
@ 3832 train 4.5011 , allloss: 4.5012, dt: 1305.02ms, fracRes: 0.7046, norm(attn): 0.1943, norm(output): 0.9370, norm(x): 0.7635, norm(y): 1.0041, norm:0.9646, tok/sec: 100436.51, flops:105.42, batch-reuse:1
@ 3833 train 4.4486 , allloss: 4.4486, dt: 1327.21ms, fracRes: 0.7045, norm(attn): 0.1934, norm(output): 0.9370, norm(x): 0.7636, norm(y): 1.0041, norm:0.6562, tok/sec: 98757.64, flops:103.66, batch-reuse:1
@ 3834 train 4.4843 , allloss: 4.4845, dt: 1322.50ms, fracRes: 0.7043, norm(attn): 0.1934, norm(output): 0.9370, norm(x): 0.7642, norm(y): 1.0041, norm:0.8177, tok/sec: 99109.23, flops:104.03, batch-reuse:1
@ 3835 train 4.4274 , allloss: 4.4275, dt: 1344.67ms, fracRes: 0.7044, norm(attn): 0.1943, norm(output): 0.9368, norm(x): 0.7637, norm(y): 1.0044, norm:1.0272, tok/sec: 97475.32, flops:102.31, batch-reuse:1
@ 3836 train 4.4760 , allloss: 4.4761, dt: 1308.19ms, fracRes: 0.7045, norm(attn): 0.1924, norm(output): 0.9369, norm(x): 0.7638, norm(y): 1.0040, norm:0.6690, tok/sec: 100193.08, flops:105.17, batch-reuse:1
@ 3837 train 4.5654 , allloss: 4.5655, dt: 1356.92ms, fracRes: 0.7048, norm(attn): 0.1914, norm(output): 0.9371, norm(x): 0.7633, norm(y): 1.0039, norm:0.7734, tok/sec: 96595.04, flops:101.39, batch-reuse:1
@ 3838 train 4.4704 , allloss: 4.4706, dt: 1331.45ms, fracRes: 0.7050, norm(attn): 0.1934, norm(output): 0.9372, norm(x): 0.7625, norm(y): 1.0040, norm:0.8322, tok/sec: 98442.82, flops:103.33, batch-reuse:1
@ 3839 train 4.4324 , allloss: 4.4325, dt: 1321.30ms, fracRes: 0.7046, norm(attn): 0.1973, norm(output): 0.9369, norm(x): 0.7630, norm(y): 1.0041, norm:0.6451, tok/sec: 99199.00, flops:104.12, batch-reuse:1
@ 3840 train 4.5818 , allloss: 4.5819, dt: 1293.19ms, fracRes: 0.7046, norm(attn): 0.1953, norm(output): 0.9370, norm(x): 0.7633, norm(y): 1.0042, norm:0.6884, tok/sec: 101355.21, flops:106.39, batch-reuse:1
@ 3841 train 4.4606 , allloss: 4.4607, dt: 1276.89ms, fracRes: 0.7046, norm(attn): 0.1963, norm(output): 0.9373, norm(x): 0.7631, norm(y): 1.0040, norm:0.6771, tok/sec: 102649.56, flops:107.74, batch-reuse:1
@ 3842 train 4.3786 , allloss: 4.3787, dt: 1299.67ms, fracRes: 0.7047, norm(attn): 0.1924, norm(output): 0.9376, norm(x): 0.7625, norm(y): 1.0035, norm:0.7110, tok/sec: 100849.98, flops:105.86, batch-reuse:1
@ 3843 train 4.4844 , allloss: 4.4845, dt: 1297.50ms, fracRes: 0.7048, norm(attn): 0.1904, norm(output): 0.9372, norm(x): 0.7631, norm(y): 1.0037, norm:0.6667, tok/sec: 101019.06, flops:106.03, batch-reuse:1
@ 3844 train 4.4575 , allloss: 4.4577, dt: 1275.52ms, fracRes: 0.7045, norm(attn): 0.1963, norm(output): 0.9371, norm(x): 0.7639, norm(y): 1.0038, norm:0.7346, tok/sec: 102759.34, flops:107.86, batch-reuse:1
@ 3845 train 4.4530 , allloss: 4.4531, dt: 1273.20ms, fracRes: 0.7046, norm(attn): 0.1973, norm(output): 0.9372, norm(x): 0.7637, norm(y): 1.0040, norm:0.6806, tok/sec: 102946.77, flops:108.06, batch-reuse:1
@ 3846 train 4.3086 , allloss: 4.3087, dt: 1287.49ms, fracRes: 0.7046, norm(attn): 0.1953, norm(output): 0.9370, norm(x): 0.7630, norm(y): 1.0041, norm:0.7963, tok/sec: 101804.18, flops:106.86, batch-reuse:1
@ 3847 train 4.5429 , allloss: 4.5429, dt: 1290.28ms, fracRes: 0.7047, norm(attn): 0.1904, norm(output): 0.9371, norm(x): 0.7627, norm(y): 1.0040, norm:0.5808, tok/sec: 101584.16, flops:106.63, batch-reuse:1
@ 3848 train 4.4280 , allloss: 4.4281, dt: 1291.00ms, fracRes: 0.7047, norm(attn): 0.1914, norm(output): 0.9369, norm(x): 0.7623, norm(y): 1.0041, norm:0.6293, tok/sec: 101527.60, flops:106.57, batch-reuse:1
@ 3849 train 4.3484 , allloss: 4.3485, dt: 1293.78ms, fracRes: 0.7047, norm(attn): 0.1953, norm(output): 0.9369, norm(x): 0.7626, norm(y): 1.0042, norm:0.5951, tok/sec: 101309.09, flops:106.34, batch-reuse:1
@ 3850 train 4.4471 , allloss: 4.4471, dt: 1302.58ms, fracRes: 0.7046, norm(attn): 0.1953, norm(output): 0.9369, norm(x): 0.7636, norm(y): 1.0041, norm:0.6457, tok/sec: 100625.16, flops:105.62, batch-reuse:1
@ 3851 train 4.4055 , allloss: 4.4056, dt: 1290.03ms, fracRes: 0.7047, norm(attn): 0.1943, norm(output): 0.9371, norm(x): 0.7638, norm(y): 1.0039, norm:0.5369, tok/sec: 101603.91, flops:106.65, batch-reuse:1
@ 3852 train 4.3817 , allloss: 4.3818, dt: 1300.28ms, fracRes: 0.7047, norm(attn): 0.1934, norm(output): 0.9370, norm(x): 0.7635, norm(y): 1.0040, norm:0.6218, tok/sec: 100803.01, flops:105.81, batch-reuse:1
@ 3853 train 4.4216 , allloss: 4.4217, dt: 1297.08ms, fracRes: 0.7048, norm(attn): 0.1934, norm(output): 0.9370, norm(x): 0.7631, norm(y): 1.0042, norm:0.5774, tok/sec: 101051.57, flops:106.07, batch-reuse:1
@ 3854 train 4.3950 , allloss: 4.3952, dt: 1278.60ms, fracRes: 0.7047, norm(attn): 0.1934, norm(output): 0.9371, norm(x): 0.7635, norm(y): 1.0042, norm:0.6598, tok/sec: 102511.84, flops:107.60, batch-reuse:1
@ 3855 train 4.2972 , allloss: 4.2973, dt: 1299.75ms, fracRes: 0.7046, norm(attn): 0.1943, norm(output): 0.9370, norm(x): 0.7635, norm(y): 1.0041, norm:0.5431, tok/sec: 100843.93, flops:105.85, batch-reuse:1
@ 3856 train 4.3366 , allloss: 4.3366, dt: 1295.20ms, fracRes: 0.7045, norm(attn): 0.1924, norm(output): 0.9371, norm(x): 0.7639, norm(y): 1.0039, norm:0.6245, tok/sec: 101198.49, flops:106.22, batch-reuse:1
@ 3857 train 4.3235 , allloss: 4.3236, dt: 1285.32ms, fracRes: 0.7046, norm(attn): 0.1943, norm(output): 0.9372, norm(x): 0.7632, norm(y): 1.0037, norm:0.6514, tok/sec: 101976.14, flops:107.04, batch-reuse:1
@ 3858 train 4.3425 , allloss: 4.3426, dt: 1290.81ms, fracRes: 0.7047, norm(attn): 0.1963, norm(output): 0.9370, norm(x): 0.7627, norm(y): 1.0041, norm:0.7015, tok/sec: 101542.10, flops:106.58, batch-reuse:1
@ 3859 train 4.3044 , allloss: 4.3045, dt: 1308.40ms, fracRes: 0.7047, norm(attn): 0.1973, norm(output): 0.9372, norm(x): 0.7631, norm(y): 1.0042, norm:0.5907, tok/sec: 100177.08, flops:105.15, batch-reuse:1
@ 3860 train 4.4913 , allloss: 4.4916, dt: 1306.99ms, fracRes: 0.7050, norm(attn): 0.1924, norm(output): 0.9367, norm(x): 0.7627, norm(y): 1.0043, norm:0.8276, tok/sec: 100285.65, flops:105.26, batch-reuse:1
@ 3861 train 4.4351 , allloss: 4.4351, dt: 1340.79ms, fracRes: 0.7051, norm(attn): 0.1953, norm(output): 0.9370, norm(x): 0.7618, norm(y): 1.0037, norm:0.7513, tok/sec: 97757.39, flops:102.61, batch-reuse:1
@ 3862 train 4.4172 , allloss: 4.4174, dt: 1320.67ms, fracRes: 0.7050, norm(attn): 0.1982, norm(output): 0.9370, norm(x): 0.7619, norm(y): 1.0038, norm:0.7052, tok/sec: 99246.46, flops:104.17, batch-reuse:1
@ 3863 train 4.4258 , allloss: 4.4259, dt: 1293.70ms, fracRes: 0.7049, norm(attn): 0.1992, norm(output): 0.9371, norm(x): 0.7620, norm(y): 1.0040, norm:0.7773, tok/sec: 101315.66, flops:106.34, batch-reuse:1
@ 3864 train 4.4000 , allloss: 4.4000, dt: 1319.42ms, fracRes: 0.7048, norm(attn): 0.1953, norm(output): 0.9372, norm(x): 0.7624, norm(y): 1.0041, norm:0.6218, tok/sec: 99340.76, flops:104.27, batch-reuse:1
@ 3865 train 4.4431 , allloss: 4.4432, dt: 1344.07ms, fracRes: 0.7048, norm(attn): 0.1934, norm(output): 0.9372, norm(x): 0.7627, norm(y): 1.0040, norm:0.6354, tok/sec: 97518.79, flops:102.36, batch-reuse:1
@ 3866 train 4.3189 , allloss: 4.3190, dt: 1321.10ms, fracRes: 0.7050, norm(attn): 0.1914, norm(output): 0.9369, norm(x): 0.7617, norm(y): 1.0038, norm:0.6266, tok/sec: 99214.36, flops:104.14, batch-reuse:1
@ 3867 train 4.3876 , allloss: 4.3877, dt: 1331.32ms, fracRes: 0.7051, norm(attn): 0.1914, norm(output): 0.9370, norm(x): 0.7611, norm(y): 1.0038, norm:0.6247, tok/sec: 98452.89, flops:103.34, batch-reuse:1
@ 3868 train 4.2913 , allloss: 4.2914, dt: 1307.68ms, fracRes: 0.7048, norm(attn): 0.1934, norm(output): 0.9369, norm(x): 0.7616, norm(y): 1.0041, norm:0.6152, tok/sec: 100232.39, flops:105.21, batch-reuse:1
@ 3869 train 4.3261 , allloss: 4.3262, dt: 1308.36ms, fracRes: 0.7049, norm(attn): 0.1934, norm(output): 0.9369, norm(x): 0.7617, norm(y): 1.0045, norm:0.5987, tok/sec: 100180.21, flops:105.15, batch-reuse:1
@ 3870 train 4.3687 , allloss: 4.3689, dt: 1319.44ms, fracRes: 0.7049, norm(attn): 0.1943, norm(output): 0.9370, norm(x): 0.7608, norm(y): 1.0043, norm:0.8125, tok/sec: 99339.32, flops:104.27, batch-reuse:1
@ 3871 train 4.4345 , allloss: 4.4346, dt: 1309.35ms, fracRes: 0.7049, norm(attn): 0.1924, norm(output): 0.9370, norm(x): 0.7607, norm(y): 1.0039, norm:0.8771, tok/sec: 100104.41, flops:105.07, batch-reuse:1
@ 3872 train 4.4407 , allloss: 4.4412, dt: 1316.71ms, fracRes: 0.7047, norm(attn): 0.1924, norm(output): 0.9369, norm(x): 0.7618, norm(y): 1.0040, norm:0.7825, tok/sec: 99545.35, flops:104.49, batch-reuse:1
@ 3873 train 4.3532 , allloss: 4.3533, dt: 1299.32ms, fracRes: 0.7047, norm(attn): 0.1943, norm(output): 0.9372, norm(x): 0.7632, norm(y): 1.0040, norm:0.7236, tok/sec: 100877.09, flops:105.88, batch-reuse:1
@ 3874 train 4.3683 , allloss: 4.3684, dt: 1329.25ms, fracRes: 0.7049, norm(attn): 0.1934, norm(output): 0.9371, norm(x): 0.7628, norm(y): 1.0038, norm:0.5814, tok/sec: 98606.10, flops:103.50, batch-reuse:1
@ 3875 train 4.3183 , allloss: 4.3184, dt: 1355.42ms, fracRes: 0.7049, norm(attn): 0.1934, norm(output): 0.9371, norm(x): 0.7623, norm(y): 1.0038, norm:0.5632, tok/sec: 96702.34, flops:101.50, batch-reuse:1
@ 3876 train 4.4080 , allloss: 4.4081, dt: 1341.00ms, fracRes: 0.7049, norm(attn): 0.1934, norm(output): 0.9370, norm(x): 0.7622, norm(y): 1.0039, norm:0.7061, tok/sec: 97742.17, flops:102.59, batch-reuse:1
@ 3877 train 4.4234 , allloss: 4.4237, dt: 1318.02ms, fracRes: 0.7049, norm(attn): 0.1914, norm(output): 0.9370, norm(x): 0.7620, norm(y): 1.0041, norm:0.5927, tok/sec: 99446.02, flops:104.38, batch-reuse:1
@ 3878 train 4.3367 , allloss: 4.3368, dt: 1306.70ms, fracRes: 0.7047, norm(attn): 0.1953, norm(output): 0.9371, norm(x): 0.7617, norm(y): 1.0042, norm:0.6300, tok/sec: 100307.68, flops:105.29, batch-reuse:1
@ 3879 train 4.3632 , allloss: 4.3633, dt: 1312.55ms, fracRes: 0.7049, norm(attn): 0.1953, norm(output): 0.9371, norm(x): 0.7617, norm(y): 1.0040, norm:0.6516, tok/sec: 99860.95, flops:104.82, batch-reuse:1
@ 3880 train 4.5039 , allloss: 4.5043, dt: 1294.71ms, fracRes: 0.7051, norm(attn): 0.1973, norm(output): 0.9371, norm(x): 0.7620, norm(y): 1.0038, norm:0.8789, tok/sec: 101236.86, flops:106.26, batch-reuse:1
@ 3881 train 4.4168 , allloss: 4.4169, dt: 1316.50ms, fracRes: 0.7051, norm(attn): 0.1973, norm(output): 0.9373, norm(x): 0.7623, norm(y): 1.0037, norm:0.7671, tok/sec: 99560.87, flops:104.50, batch-reuse:1
@ 3882 train 4.3819 , allloss: 4.3820, dt: 1317.51ms, fracRes: 0.7051, norm(attn): 0.1934, norm(output): 0.9372, norm(x): 0.7622, norm(y): 1.0039, norm:0.6618, tok/sec: 99484.44, flops:104.42, batch-reuse:1
@ 3883 train 4.2905 , allloss: 4.2907, dt: 1294.61ms, fracRes: 0.7051, norm(attn): 0.1943, norm(output): 0.9371, norm(x): 0.7621, norm(y): 1.0039, norm:0.6652, tok/sec: 101244.57, flops:106.27, batch-reuse:1
@ 3884 train 4.3752 , allloss: 4.3753, dt: 1298.03ms, fracRes: 0.7051, norm(attn): 0.1924, norm(output): 0.9375, norm(x): 0.7626, norm(y): 1.0040, norm:0.5634, tok/sec: 100977.79, flops:105.99, batch-reuse:1
@ 3885 train 4.4376 , allloss: 4.4377, dt: 1301.12ms, fracRes: 0.7049, norm(attn): 0.1934, norm(output): 0.9376, norm(x): 0.7628, norm(y): 1.0041, norm:0.6907, tok/sec: 100737.82, flops:105.74, batch-reuse:1
@ 3886 train 4.3456 , allloss: 4.3457, dt: 1291.57ms, fracRes: 0.7051, norm(attn): 0.1914, norm(output): 0.9375, norm(x): 0.7619, norm(y): 1.0039, norm:0.6456, tok/sec: 101482.47, flops:106.52, batch-reuse:1
@ 3887 train 4.3355 , allloss: 4.3360, dt: 1298.54ms, fracRes: 0.7052, norm(attn): 0.1953, norm(output): 0.9374, norm(x): 0.7615, norm(y): 1.0037, norm:0.6226, tok/sec: 100937.97, flops:105.95, batch-reuse:1
@ 3888 train 4.4227 , allloss: 4.4229, dt: 1287.80ms, fracRes: 0.7052, norm(attn): 0.1963, norm(output): 0.9377, norm(x): 0.7620, norm(y): 1.0038, norm:0.5793, tok/sec: 101779.66, flops:106.83, batch-reuse:1
@ 3889 train 4.4138 , allloss: 4.4140, dt: 1301.69ms, fracRes: 0.7050, norm(attn): 0.1924, norm(output): 0.9376, norm(x): 0.7625, norm(y): 1.0039, norm:0.6305, tok/sec: 100693.71, flops:105.69, batch-reuse:1
@ 3890 train 4.4381 , allloss: 4.4383, dt: 1286.61ms, fracRes: 0.7051, norm(attn): 0.1934, norm(output): 0.9372, norm(x): 0.7620, norm(y): 1.0042, norm:0.6366, tok/sec: 101873.96, flops:106.93, batch-reuse:1
@ 3891 train 4.2799 , allloss: 4.2801, dt: 1306.27ms, fracRes: 0.7047, norm(attn): 0.1914, norm(output): 0.9376, norm(x): 0.7630, norm(y): 1.0040, norm:0.6068, tok/sec: 100340.86, flops:105.32, batch-reuse:1
@ 3892 train 4.3958 , allloss: 4.3962, dt: 1325.80ms, fracRes: 0.7047, norm(attn): 0.1904, norm(output): 0.9375, norm(x): 0.7628, norm(y): 1.0039, norm:0.6807, tok/sec: 98862.92, flops:103.77, batch-reuse:1
@ 3893 train 4.4213 , allloss: 4.4216, dt: 1303.61ms, fracRes: 0.7049, norm(attn): 0.1934, norm(output): 0.9378, norm(x): 0.7627, norm(y): 1.0039, norm:0.6509, tok/sec: 100545.05, flops:105.54, batch-reuse:1
@ 3894 train 4.6125 , allloss: 4.6136, dt: 1285.21ms, fracRes: 0.7053, norm(attn): 0.1953, norm(output): 0.9379, norm(x): 0.7623, norm(y): 1.0039, norm:0.7200, tok/sec: 101985.05, flops:107.05, batch-reuse:1
@ 3895 train 4.5483 , allloss: 4.5485, dt: 1316.86ms, fracRes: 0.7056, norm(attn): 0.1953, norm(output): 0.9380, norm(x): 0.7615, norm(y): 1.0037, norm:0.7015, tok/sec: 99534.10, flops:104.47, batch-reuse:1
@ 3896 train 4.4919 , allloss: 4.4921, dt: 1307.34ms, fracRes: 0.7059, norm(attn): 0.1914, norm(output): 0.9378, norm(x): 0.7602, norm(y): 1.0037, norm:0.6271, tok/sec: 100258.84, flops:105.23, batch-reuse:1
@ 3897 train 4.4747 , allloss: 4.4748, dt: 1325.17ms, fracRes: 0.7056, norm(attn): 0.1914, norm(output): 0.9377, norm(x): 0.7612, norm(y): 1.0038, norm:0.6279, tok/sec: 98909.52, flops:103.82, batch-reuse:1
@ 3898 train 4.6707 , allloss: 4.6710, dt: 1331.04ms, fracRes: 0.7052, norm(attn): 0.1934, norm(output): 0.9378, norm(x): 0.7624, norm(y): 1.0041, norm:0.6663, tok/sec: 98473.31, flops:103.36, batch-reuse:1
@ 3899 train 4.5334 , allloss: 4.5335, dt: 1333.05ms, fracRes: 0.7049, norm(attn): 0.1953, norm(output): 0.9380, norm(x): 0.7626, norm(y): 1.0039, norm:0.6502, tok/sec: 98324.82, flops:103.20, batch-reuse:1
@ 3900 train 4.4801 , allloss: 4.4804, dt: 1334.43ms, fracRes: 0.7051, norm(attn): 0.1914, norm(output): 0.9376, norm(x): 0.7618, norm(y): 1.0038, norm:0.5927, tok/sec: 98223.21, flops:103.10, batch-reuse:1
@ 3901 train 4.5496 , allloss: 4.5498, dt: 1340.92ms, fracRes: 0.7054, norm(attn): 0.1914, norm(output): 0.9376, norm(x): 0.7609, norm(y): 1.0038, norm:0.6358, tok/sec: 97747.71, flops:102.60, batch-reuse:1
@ 3902 train 4.4452 , allloss: 4.4456, dt: 1296.63ms, fracRes: 0.7054, norm(attn): 0.1895, norm(output): 0.9378, norm(x): 0.7615, norm(y): 1.0040, norm:0.6499, tok/sec: 101087.04, flops:106.10, batch-reuse:1
@ 3903 train 4.5035 , allloss: 4.5038, dt: 1315.25ms, fracRes: 0.7053, norm(attn): 0.1885, norm(output): 0.9377, norm(x): 0.7618, norm(y): 1.0039, norm:0.7608, tok/sec: 99655.39, flops:104.60, batch-reuse:1
@ 3904 train 4.6177 , allloss: 4.6178, dt: 1327.16ms, fracRes: 0.7052, norm(attn): 0.1895, norm(output): 0.9377, norm(x): 0.7613, norm(y): 1.0040, norm:0.6579, tok/sec: 98761.03, flops:103.66, batch-reuse:1
@ 3905 train 4.5662 , allloss: 4.5663, dt: 1309.56ms, fracRes: 0.7051, norm(attn): 0.1914, norm(output): 0.9377, norm(x): 0.7615, norm(y): 1.0039, norm:0.6347, tok/sec: 100088.56, flops:105.06, batch-reuse:1
@ 3906 train 4.6008 , allloss: 4.6009, dt: 1296.20ms, fracRes: 0.7050, norm(attn): 0.1904, norm(output): 0.9381, norm(x): 0.7623, norm(y): 1.0039, norm:0.6047, tok/sec: 101120.47, flops:106.14, batch-reuse:1
@ 3907 train 4.5342 , allloss: 4.5343, dt: 1313.75ms, fracRes: 0.7051, norm(attn): 0.1924, norm(output): 0.9379, norm(x): 0.7619, norm(y): 1.0039, norm:0.5914, tok/sec: 99769.61, flops:104.72, batch-reuse:1
@ 3908 train 4.5013 , allloss: 4.5014, dt: 1298.00ms, fracRes: 0.7053, norm(attn): 0.1943, norm(output): 0.9380, norm(x): 0.7610, norm(y): 1.0039, norm:0.6541, tok/sec: 100980.15, flops:105.99, batch-reuse:1
@ 3909 train 4.4892 , allloss: 4.4893, dt: 1285.44ms, fracRes: 0.7053, norm(attn): 0.1914, norm(output): 0.9380, norm(x): 0.7610, norm(y): 1.0038, norm:0.8021, tok/sec: 101966.83, flops:107.03, batch-reuse:1
@ 3910 train 4.5829 , allloss: 4.5832, dt: 1306.82ms, fracRes: 0.7051, norm(attn): 0.1914, norm(output): 0.9378, norm(x): 0.7618, norm(y): 1.0038, norm:0.7583, tok/sec: 100298.39, flops:105.28, batch-reuse:1
@ 3911 train 4.5468 , allloss: 4.5470, dt: 1296.23ms, fracRes: 0.7051, norm(attn): 0.1914, norm(output): 0.9378, norm(x): 0.7621, norm(y): 1.0038, norm:0.8018, tok/sec: 101118.17, flops:106.14, batch-reuse:1
@ 3912 train 4.4772 , allloss: 4.4773, dt: 1302.22ms, fracRes: 0.7051, norm(attn): 0.1943, norm(output): 0.9380, norm(x): 0.7621, norm(y): 1.0037, norm:0.6629, tok/sec: 100652.50, flops:105.65, batch-reuse:1
@ 3913 train 4.5865 , allloss: 4.5866, dt: 1305.43ms, fracRes: 0.7052, norm(attn): 0.1934, norm(output): 0.9378, norm(x): 0.7615, norm(y): 1.0037, norm:0.9886, tok/sec: 100405.38, flops:105.39, batch-reuse:1
@ 3914 train 4.6018 , allloss: 4.6020, dt: 1315.56ms, fracRes: 0.7054, norm(attn): 0.1904, norm(output): 0.9378, norm(x): 0.7611, norm(y): 1.0038, norm:0.7860, tok/sec: 99632.32, flops:104.58, batch-reuse:1
@ 3915 train 4.5583 , allloss: 4.5584, dt: 1314.57ms, fracRes: 0.7054, norm(attn): 0.1924, norm(output): 0.9379, norm(x): 0.7613, norm(y): 1.0040, norm:0.6364, tok/sec: 99706.86, flops:104.66, batch-reuse:1
@ 3916 train 4.5959 , allloss: 4.5960, dt: 1285.33ms, fracRes: 0.7052, norm(attn): 0.1914, norm(output): 0.9380, norm(x): 0.7614, norm(y): 1.0040, norm:0.8579, tok/sec: 101975.04, flops:107.04, batch-reuse:1
@ 3917 train 4.6694 , allloss: 4.6698, dt: 1334.43ms, fracRes: 0.7051, norm(attn): 0.1914, norm(output): 0.9379, norm(x): 0.7622, norm(y): 1.0038, norm:0.6932, tok/sec: 98222.86, flops:103.10, batch-reuse:1
@ 3918 train 4.5412 , allloss: 4.5415, dt: 1297.16ms, fracRes: 0.7053, norm(attn): 0.1914, norm(output): 0.9379, norm(x): 0.7627, norm(y): 1.0036, norm:0.7875, tok/sec: 101045.63, flops:106.06, batch-reuse:1
@ 3919 train 4.5460 , allloss: 4.5464, dt: 1315.72ms, fracRes: 0.7053, norm(attn): 0.1934, norm(output): 0.9381, norm(x): 0.7623, norm(y): 1.0035, norm:0.7411, tok/sec: 99619.88, flops:104.56, batch-reuse:1
@ 3920 train 4.5075 , allloss: 4.5076, dt: 1329.87ms, fracRes: 0.7053, norm(attn): 0.1943, norm(output): 0.9380, norm(x): 0.7620, norm(y): 1.0036, norm:0.6600, tok/sec: 98559.87, flops:103.45, batch-reuse:1
@ 3921 train 4.6425 , allloss: 4.6426, dt: 1331.00ms, fracRes: 0.7051, norm(attn): 0.1914, norm(output): 0.9379, norm(x): 0.7628, norm(y): 1.0041, norm:0.6531, tok/sec: 98476.61, flops:103.36, batch-reuse:1
@ 3922 train 4.5543 , allloss: 4.5544, dt: 1323.72ms, fracRes: 0.7051, norm(attn): 0.1914, norm(output): 0.9379, norm(x): 0.7628, norm(y): 1.0040, norm:0.6627, tok/sec: 99017.97, flops:103.93, batch-reuse:1
@ 3923 train 4.5090 , allloss: 4.5091, dt: 1327.00ms, fracRes: 0.7050, norm(attn): 0.1895, norm(output): 0.9381, norm(x): 0.7633, norm(y): 1.0038, norm:0.6297, tok/sec: 98773.09, flops:103.68, batch-reuse:1
@ 3924 train 4.5663 , allloss: 4.5664, dt: 1320.61ms, fracRes: 0.7051, norm(attn): 0.1895, norm(output): 0.9380, norm(x): 0.7628, norm(y): 1.0039, norm:0.5891, tok/sec: 99250.87, flops:104.18, batch-reuse:1
@ 3925 train 4.6171 , allloss: 4.6172, dt: 1308.01ms, fracRes: 0.7054, norm(attn): 0.1895, norm(output): 0.9381, norm(x): 0.7626, norm(y): 1.0040, norm:0.5303, tok/sec: 100207.05, flops:105.18, batch-reuse:1
@ 3926 train 4.5358 , allloss: 4.5359, dt: 1298.15ms, fracRes: 0.7054, norm(attn): 0.1895, norm(output): 0.9382, norm(x): 0.7624, norm(y): 1.0038, norm:0.6108, tok/sec: 100968.37, flops:105.98, batch-reuse:1
@ 3927 train 4.4780 , allloss: 4.4782, dt: 1282.72ms, fracRes: 0.7055, norm(attn): 0.1904, norm(output): 0.9379, norm(x): 0.7617, norm(y): 1.0038, norm:0.5708, tok/sec: 102182.53, flops:107.25, batch-reuse:1
@ 3928 train 4.5072 , allloss: 4.5073, dt: 1285.36ms, fracRes: 0.7055, norm(attn): 0.1895, norm(output): 0.9380, norm(x): 0.7617, norm(y): 1.0038, norm:0.6038, tok/sec: 101973.02, flops:107.03, batch-reuse:1
@ 3929 train 4.5245 , allloss: 4.5247, dt: 1310.40ms, fracRes: 0.7054, norm(attn): 0.1924, norm(output): 0.9377, norm(x): 0.7616, norm(y): 1.0040, norm:0.5971, tok/sec: 100024.47, flops:104.99, batch-reuse:1
@ 3930 train 4.5503 , allloss: 4.5506, dt: 1311.18ms, fracRes: 0.7054, norm(attn): 0.1934, norm(output): 0.9378, norm(x): 0.7614, norm(y): 1.0040, norm:0.7009, tok/sec: 99965.16, flops:104.93, batch-reuse:1
@ 3931 train 4.4280 , allloss: 4.4280, dt: 1318.59ms, fracRes: 0.7053, norm(attn): 0.1934, norm(output): 0.9379, norm(x): 0.7615, norm(y): 1.0037, norm:0.6528, tok/sec: 99403.32, flops:104.34, batch-reuse:1
@ 3932 train 4.4891 , allloss: 4.4892, dt: 1311.20ms, fracRes: 0.7054, norm(attn): 0.1934, norm(output): 0.9380, norm(x): 0.7618, norm(y): 1.0037, norm:0.6269, tok/sec: 99963.29, flops:104.92, batch-reuse:1
@ 3933 train 4.5261 , allloss: 4.5261, dt: 1314.41ms, fracRes: 0.7053, norm(attn): 0.1943, norm(output): 0.9379, norm(x): 0.7631, norm(y): 1.0038, norm:0.6155, tok/sec: 99719.23, flops:104.67, batch-reuse:1
@ 3934 train 4.5575 , allloss: 4.5576, dt: 1315.72ms, fracRes: 0.7051, norm(attn): 0.1953, norm(output): 0.9383, norm(x): 0.7641, norm(y): 1.0039, norm:0.6133, tok/sec: 99620.35, flops:104.56, batch-reuse:1
@ 3935 train 4.5432 , allloss: 4.5433, dt: 1316.05ms, fracRes: 0.7054, norm(attn): 0.1953, norm(output): 0.9381, norm(x): 0.7635, norm(y): 1.0038, norm:0.5882, tok/sec: 99594.80, flops:104.54, batch-reuse:1
@ 3936 train 4.5049 , allloss: 4.5269, dt: 1310.73ms, fracRes: 0.7056, norm(attn): 0.1914, norm(output): 0.9380, norm(x): 0.7623, norm(y): 1.0037, norm:0.6073, tok/sec: 99999.09, flops:104.96, batch-reuse:1
@ 3937 train 4.5432 , allloss: 4.5435, dt: 1341.13ms, fracRes: 0.7058, norm(attn): 0.1904, norm(output): 0.9379, norm(x): 0.7619, norm(y): 1.0038, norm:0.6178, tok/sec: 97732.75, flops:102.58, batch-reuse:1
@ 3938 train 4.4719 , allloss: 4.4720, dt: 1329.92ms, fracRes: 0.7057, norm(attn): 0.1885, norm(output): 0.9380, norm(x): 0.7619, norm(y): 1.0039, norm:0.5980, tok/sec: 98556.07, flops:103.45, batch-reuse:1
@ 3939 train 4.5595 , allloss: 4.5596, dt: 1298.26ms, fracRes: 0.7055, norm(attn): 0.1875, norm(output): 0.9379, norm(x): 0.7630, norm(y): 1.0040, norm:0.6345, tok/sec: 100959.77, flops:105.97, batch-reuse:1
@ 3940 train 4.4834 , allloss: 4.4836, dt: 1313.65ms, fracRes: 0.7052, norm(attn): 0.1904, norm(output): 0.9382, norm(x): 0.7634, norm(y): 1.0038, norm:0.7018, tok/sec: 99777.06, flops:104.73, batch-reuse:1
@ 3941 train 4.4877 , allloss: 4.4878, dt: 1333.43ms, fracRes: 0.7054, norm(attn): 0.1904, norm(output): 0.9380, norm(x): 0.7629, norm(y): 1.0039, norm:0.6039, tok/sec: 98296.61, flops:103.18, batch-reuse:1
@ 3942 train 4.4463 , allloss: 4.4465, dt: 1342.68ms, fracRes: 0.7054, norm(attn): 0.1914, norm(output): 0.9381, norm(x): 0.7630, norm(y): 1.0038, norm:0.6031, tok/sec: 97619.58, flops:102.46, batch-reuse:1
@ 3943 train 4.5246 , allloss: 4.5247, dt: 1303.37ms, fracRes: 0.7055, norm(attn): 0.1904, norm(output): 0.9381, norm(x): 0.7629, norm(y): 1.0036, norm:0.6307, tok/sec: 100563.79, flops:105.55, batch-reuse:1
@ 3944 train 4.4450 , allloss: 4.4450, dt: 1334.95ms, fracRes: 0.7056, norm(attn): 0.1895, norm(output): 0.9382, norm(x): 0.7632, norm(y): 1.0035, norm:0.6147, tok/sec: 98184.72, flops:103.06, batch-reuse:1
@ 3945 train 4.6151 , allloss: 4.6152, dt: 1304.41ms, fracRes: 0.7057, norm(attn): 0.1895, norm(output): 0.9383, norm(x): 0.7628, norm(y): 1.0035, norm:0.6332, tok/sec: 100483.58, flops:105.47, batch-reuse:1
@ 3946 train 4.4699 , allloss: 4.4699, dt: 1313.39ms, fracRes: 0.7057, norm(attn): 0.1914, norm(output): 0.9381, norm(x): 0.7630, norm(y): 1.0037, norm:0.6134, tok/sec: 99796.83, flops:104.75, batch-reuse:1
@ 3947 train 4.4865 , allloss: 4.4866, dt: 1342.44ms, fracRes: 0.7054, norm(attn): 0.1914, norm(output): 0.9382, norm(x): 0.7636, norm(y): 1.0038, norm:0.5984, tok/sec: 97637.44, flops:102.48, batch-reuse:1
@ 3948 train 4.4800 , allloss: 4.4800, dt: 1323.96ms, fracRes: 0.7052, norm(attn): 0.1895, norm(output): 0.9381, norm(x): 0.7637, norm(y): 1.0037, norm:0.6029, tok/sec: 99000.32, flops:103.91, batch-reuse:1
@ 3949 train 4.4959 , allloss: 4.4961, dt: 1305.72ms, fracRes: 0.7051, norm(attn): 0.1895, norm(output): 0.9382, norm(x): 0.7637, norm(y): 1.0039, norm:0.6288, tok/sec: 100382.81, flops:105.37, batch-reuse:1
@ 3950 train 4.5181 , allloss: 4.5182, dt: 1294.54ms, fracRes: 0.7050, norm(attn): 0.1895, norm(output): 0.9383, norm(x): 0.7641, norm(y): 1.0041, norm:0.6284, tok/sec: 101250.17, flops:106.28, batch-reuse:1
@ 3951 train 4.4674 , allloss: 4.4675, dt: 1293.78ms, fracRes: 0.7049, norm(attn): 0.1895, norm(output): 0.9381, norm(x): 0.7640, norm(y): 1.0039, norm:0.7067, tok/sec: 101309.65, flops:106.34, batch-reuse:1
@ 3952 train 4.5285 , allloss: 4.5286, dt: 1305.09ms, fracRes: 0.7052, norm(attn): 0.1885, norm(output): 0.9380, norm(x): 0.7633, norm(y): 1.0036, norm:0.6011, tok/sec: 100431.76, flops:105.42, batch-reuse:1
@ 3953 train 4.6264 , allloss: 4.6267, dt: 1309.06ms, fracRes: 0.7053, norm(attn): 0.1885, norm(output): 0.9380, norm(x): 0.7633, norm(y): 1.0036, norm:0.7851, tok/sec: 100127.00, flops:105.10, batch-reuse:1
@ 3954 train 4.5203 , allloss: 4.5204, dt: 1300.50ms, fracRes: 0.7051, norm(attn): 0.1885, norm(output): 0.9381, norm(x): 0.7642, norm(y): 1.0039, norm:0.8370, tok/sec: 100786.23, flops:105.79, batch-reuse:1
@ 3955 train 4.4732 , allloss: 4.4732, dt: 1294.63ms, fracRes: 0.7052, norm(attn): 0.1904, norm(output): 0.9381, norm(x): 0.7645, norm(y): 1.0041, norm:0.6935, tok/sec: 101243.05, flops:106.27, batch-reuse:1
@ 3956 train 4.5263 , allloss: 4.5264, dt: 1303.35ms, fracRes: 0.7055, norm(attn): 0.1914, norm(output): 0.9380, norm(x): 0.7638, norm(y): 1.0039, norm:0.7746, tok/sec: 100565.08, flops:105.56, batch-reuse:1
@ 3957 train 4.5304 , allloss: 4.5307, dt: 1295.17ms, fracRes: 0.7053, norm(attn): 0.1885, norm(output): 0.9381, norm(x): 0.7637, norm(y): 1.0036, norm:0.7296, tok/sec: 101200.68, flops:106.22, batch-reuse:1
@ 3958 train 4.4840 , allloss: 4.4842, dt: 1309.40ms, fracRes: 0.7054, norm(attn): 0.1885, norm(output): 0.9382, norm(x): 0.7639, norm(y): 1.0034, norm:0.5663, tok/sec: 100100.99, flops:105.07, batch-reuse:1
@ 3959 train 4.5593 , allloss: 4.5594, dt: 1318.75ms, fracRes: 0.7056, norm(attn): 0.1875, norm(output): 0.9382, norm(x): 0.7641, norm(y): 1.0035, norm:0.7095, tok/sec: 99391.15, flops:104.32, batch-reuse:1
@ 3960 train 4.4701 , allloss: 4.4703, dt: 1297.23ms, fracRes: 0.7053, norm(attn): 0.1895, norm(output): 0.9383, norm(x): 0.7641, norm(y): 1.0034, norm:0.6503, tok/sec: 101039.76, flops:106.05, batch-reuse:1
@ 3961 train 4.4504 , allloss: 4.4505, dt: 1311.26ms, fracRes: 0.7053, norm(attn): 0.1904, norm(output): 0.9382, norm(x): 0.7631, norm(y): 1.0036, norm:0.6194, tok/sec: 99959.04, flops:104.92, batch-reuse:1
@ 3962 train 4.5485 , allloss: 4.5487, dt: 1310.77ms, fracRes: 0.7052, norm(attn): 0.1895, norm(output): 0.9380, norm(x): 0.7621, norm(y): 1.0039, norm:0.6769, tok/sec: 99996.38, flops:104.96, batch-reuse:1
@ 3963 train 4.4585 , allloss: 4.4593, dt: 1342.14ms, fracRes: 0.7050, norm(attn): 0.1904, norm(output): 0.9379, norm(x): 0.7627, norm(y): 1.0041, norm:0.6644, tok/sec: 97659.31, flops:102.51, batch-reuse:1
@ 3964 train 4.4539 , allloss: 4.4541, dt: 1334.18ms, fracRes: 0.7049, norm(attn): 0.1885, norm(output): 0.9380, norm(x): 0.7636, norm(y): 1.0040, norm:0.7998, tok/sec: 98241.98, flops:103.12, batch-reuse:1
@ 3965 train 4.4991 , allloss: 4.4995, dt: 1333.34ms, fracRes: 0.7052, norm(attn): 0.1885, norm(output): 0.9378, norm(x): 0.7629, norm(y): 1.0038, norm:0.7053, tok/sec: 98303.32, flops:103.18, batch-reuse:1
@ 3966 train 4.5445 , allloss: 4.5454, dt: 1331.48ms, fracRes: 0.7053, norm(attn): 0.1895, norm(output): 0.9381, norm(x): 0.7637, norm(y): 1.0036, norm:0.7303, tok/sec: 98441.20, flops:103.33, batch-reuse:1
@ 3967 train 4.5623 , allloss: 4.5626, dt: 1318.67ms, fracRes: 0.7054, norm(attn): 0.1895, norm(output): 0.9383, norm(x): 0.7643, norm(y): 1.0036, norm:0.8519, tok/sec: 99396.76, flops:104.33, batch-reuse:1
@ 3968 train 4.5051 , allloss: 4.5054, dt: 1302.21ms, fracRes: 0.7055, norm(attn): 0.1885, norm(output): 0.9383, norm(x): 0.7638, norm(y): 1.0034, norm:0.6449, tok/sec: 100653.57, flops:105.65, batch-reuse:1
@ 3969 train 4.5577 , allloss: 4.5578, dt: 1319.28ms, fracRes: 0.7056, norm(attn): 0.1885, norm(output): 0.9380, norm(x): 0.7631, norm(y): 1.0035, norm:0.6083, tok/sec: 99351.37, flops:104.28, batch-reuse:1
@ 3970 train 4.4655 , allloss: 4.4655, dt: 1321.29ms, fracRes: 0.7053, norm(attn): 0.1885, norm(output): 0.9382, norm(x): 0.7633, norm(y): 1.0036, norm:0.6562, tok/sec: 99200.17, flops:104.12, batch-reuse:1
@ 3971 train 4.4679 , allloss: 4.4680, dt: 1317.63ms, fracRes: 0.7052, norm(attn): 0.1885, norm(output): 0.9384, norm(x): 0.7639, norm(y): 1.0036, norm:0.6057, tok/sec: 99475.61, flops:104.41, batch-reuse:1
@ 3972 train 4.5659 , allloss: 4.5662, dt: 1310.16ms, fracRes: 0.7053, norm(attn): 0.1885, norm(output): 0.9380, norm(x): 0.7638, norm(y): 1.0036, norm:0.7373, tok/sec: 100042.95, flops:105.01, batch-reuse:1
@ 3973 train 4.4280 , allloss: 4.4281, dt: 1307.67ms, fracRes: 0.7053, norm(attn): 0.1895, norm(output): 0.9380, norm(x): 0.7636, norm(y): 1.0035, norm:0.8767, tok/sec: 100233.12, flops:105.21, batch-reuse:1
@ 3974 train 4.5376 , allloss: 4.5377, dt: 1308.42ms, fracRes: 0.7055, norm(attn): 0.1895, norm(output): 0.9381, norm(x): 0.7630, norm(y): 1.0033, norm:0.7697, tok/sec: 100175.48, flops:105.15, batch-reuse:1
@ 3975 train 4.4359 , allloss: 4.4360, dt: 1315.72ms, fracRes: 0.7053, norm(attn): 0.1914, norm(output): 0.9383, norm(x): 0.7644, norm(y): 1.0033, norm:0.6762, tok/sec: 99620.08, flops:104.56, batch-reuse:1
@ 3976 train 4.5106 , allloss: 4.5108, dt: 1306.52ms, fracRes: 0.7052, norm(attn): 0.1895, norm(output): 0.9382, norm(x): 0.7652, norm(y): 1.0036, norm:0.7619, tok/sec: 100321.26, flops:105.30, batch-reuse:1
@ 3977 train 4.2029 , allloss: 4.2029, dt: 1319.97ms, fracRes: 0.7054, norm(attn): 0.1914, norm(output): 0.9377, norm(x): 0.7634, norm(y): 1.0034, norm:0.6987, tok/sec: 99299.36, flops:104.23, batch-reuse:1
@ 3978 train 4.4539 , allloss: 4.4541, dt: 1314.82ms, fracRes: 0.7053, norm(attn): 0.1904, norm(output): 0.9380, norm(x): 0.7628, norm(y): 1.0035, norm:0.6987, tok/sec: 99687.91, flops:104.64, batch-reuse:1
@ 3979 train 4.5112 , allloss: 4.5118, dt: 1344.45ms, fracRes: 0.7054, norm(attn): 0.1904, norm(output): 0.9380, norm(x): 0.7626, norm(y): 1.0036, norm:0.7290, tok/sec: 97491.29, flops:102.33, batch-reuse:1
@ 3980 train 4.4591 , allloss: 4.4592, dt: 1344.85ms, fracRes: 0.7055, norm(attn): 0.1885, norm(output): 0.9381, norm(x): 0.7631, norm(y): 1.0037, norm:0.7637, tok/sec: 97461.99, flops:102.30, batch-reuse:1
@ 3981 train 4.4950 , allloss: 4.4950, dt: 1327.35ms, fracRes: 0.7053, norm(attn): 0.1875, norm(output): 0.9382, norm(x): 0.7638, norm(y): 1.0038, norm:0.7387, tok/sec: 98747.44, flops:103.65, batch-reuse:1
@ 3982 train 4.4806 , allloss: 4.4808, dt: 1304.02ms, fracRes: 0.7052, norm(attn): 0.1885, norm(output): 0.9380, norm(x): 0.7639, norm(y): 1.0037, norm:0.7536, tok/sec: 100513.42, flops:105.50, batch-reuse:1
@ 3983 train 4.5141 , allloss: 4.5144, dt: 1318.62ms, fracRes: 0.7053, norm(attn): 0.1895, norm(output): 0.9382, norm(x): 0.7645, norm(y): 1.0035, norm:0.5753, tok/sec: 99400.73, flops:104.33, batch-reuse:1
@ 3984 train 4.4678 , allloss: 4.4679, dt: 1300.25ms, fracRes: 0.7053, norm(attn): 0.1895, norm(output): 0.9383, norm(x): 0.7644, norm(y): 1.0036, norm:0.7629, tok/sec: 100804.87, flops:105.81, batch-reuse:1
@ 3985 train 4.5121 , allloss: 4.5122, dt: 1305.17ms, fracRes: 0.7053, norm(attn): 0.1904, norm(output): 0.9384, norm(x): 0.7640, norm(y): 1.0036, norm:0.5744, tok/sec: 100425.19, flops:105.41, batch-reuse:1
@ 3986 train 4.4224 , allloss: 4.4224, dt: 1298.37ms, fracRes: 0.7055, norm(attn): 0.1904, norm(output): 0.9382, norm(x): 0.7634, norm(y): 1.0037, norm:0.6245, tok/sec: 100951.35, flops:105.96, batch-reuse:1
@ 3987 train 4.3089 , allloss: 4.3090, dt: 1297.36ms, fracRes: 0.7051, norm(attn): 0.1904, norm(output): 0.9382, norm(x): 0.7636, norm(y): 1.0036, norm:0.7175, tok/sec: 101030.03, flops:106.04, batch-reuse:1
@ 3988 train 4.3909 , allloss: 4.3910, dt: 1304.15ms, fracRes: 0.7050, norm(attn): 0.1885, norm(output): 0.9381, norm(x): 0.7640, norm(y): 1.0037, norm:0.6564, tok/sec: 100503.66, flops:105.49, batch-reuse:1
@ 3989 train 4.4702 , allloss: 4.4702, dt: 1311.23ms, fracRes: 0.7051, norm(attn): 0.1895, norm(output): 0.9381, norm(x): 0.7638, norm(y): 1.0037, norm:0.6218, tok/sec: 99961.25, flops:104.92, batch-reuse:1
@ 3990 train 4.4227 , allloss: 4.4228, dt: 1312.00ms, fracRes: 0.7051, norm(attn): 0.1885, norm(output): 0.9381, norm(x): 0.7645, norm(y): 1.0036, norm:0.6297, tok/sec: 99902.36, flops:104.86, batch-reuse:1
@ 3991 train 4.4506 , allloss: 4.4507, dt: 1333.68ms, fracRes: 0.7052, norm(attn): 0.1885, norm(output): 0.9382, norm(x): 0.7643, norm(y): 1.0034, norm:0.5312, tok/sec: 98278.12, flops:103.16, batch-reuse:1
@ 3992 train 4.4629 , allloss: 4.4630, dt: 1315.26ms, fracRes: 0.7054, norm(attn): 0.1895, norm(output): 0.9384, norm(x): 0.7641, norm(y): 1.0036, norm:0.5998, tok/sec: 99654.79, flops:104.60, batch-reuse:1
@ 3993 train 4.4222 , allloss: 4.4225, dt: 1313.60ms, fracRes: 0.7055, norm(attn): 0.1895, norm(output): 0.9382, norm(x): 0.7636, norm(y): 1.0038, norm:0.6561, tok/sec: 99780.73, flops:104.73, batch-reuse:1
@ 3994 train 4.4267 , allloss: 4.4267, dt: 1335.06ms, fracRes: 0.7053, norm(attn): 0.1904, norm(output): 0.9381, norm(x): 0.7639, norm(y): 1.0038, norm:0.6189, tok/sec: 98176.90, flops:103.05, batch-reuse:1
@ 3995 train 4.4232 , allloss: 4.4233, dt: 1315.53ms, fracRes: 0.7052, norm(attn): 0.1904, norm(output): 0.9383, norm(x): 0.7650, norm(y): 1.0038, norm:0.5692, tok/sec: 99634.20, flops:104.58, batch-reuse:1
@ 3996 train 4.4633 , allloss: 4.4634, dt: 1288.31ms, fracRes: 0.7052, norm(attn): 0.1885, norm(output): 0.9381, norm(x): 0.7646, norm(y): 1.0039, norm:0.5769, tok/sec: 101739.52, flops:106.79, batch-reuse:1
@ 3997 train 4.4200 , allloss: 4.4200, dt: 1301.62ms, fracRes: 0.7051, norm(attn): 0.1875, norm(output): 0.9383, norm(x): 0.7644, norm(y): 1.0038, norm:0.6027, tok/sec: 100698.83, flops:105.70, batch-reuse:1
@ 3998 train 4.4091 , allloss: 4.4092, dt: 1306.76ms, fracRes: 0.7055, norm(attn): 0.1875, norm(output): 0.9381, norm(x): 0.7639, norm(y): 1.0037, norm:0.5906, tok/sec: 100303.03, flops:105.28, batch-reuse:1
@ 3999 train 4.4725 , allloss: 4.4728, dt: 1325.87ms, fracRes: 0.7058, norm(attn): 0.1875, norm(output): 0.9382, norm(x): 0.7642, norm(y): 1.0035, norm:0.7057, tok/sec: 98857.69, flops:103.76, batch-reuse:1
@ 4000 val 4.4442
@ 4000 train 4.4440 , allloss: 4.4443, dt: 1944.78ms, fracRes: 0.7056, norm(attn): 0.1875, norm(output): 0.9385, norm(x): 0.7654, norm(y): 1.0035, norm:0.6698, tok/sec: 67396.76, flops:70.74, batch-reuse:1
@ 4001 train 4.3584 , allloss: 4.3584, dt: 1335.79ms, fracRes: 0.7054, norm(attn): 0.1895, norm(output): 0.9383, norm(x): 0.7660, norm(y): 1.0039, norm:0.7468, tok/sec: 98122.93, flops:102.99, batch-reuse:1
@ 4002 train 4.3997 , allloss: 4.3997, dt: 1332.44ms, fracRes: 0.7052, norm(attn): 0.1885, norm(output): 0.9381, norm(x): 0.7654, norm(y): 1.0038, norm:0.8390, tok/sec: 98369.76, flops:103.25, batch-reuse:1
@ 4003 train 4.5216 , allloss: 4.5217, dt: 1303.04ms, fracRes: 0.7056, norm(attn): 0.1885, norm(output): 0.9381, norm(x): 0.7636, norm(y): 1.0036, norm:0.7123, tok/sec: 100589.04, flops:105.58, batch-reuse:1
@ 4004 train 4.3773 , allloss: 4.3775, dt: 1330.66ms, fracRes: 0.7058, norm(attn): 0.1885, norm(output): 0.9380, norm(x): 0.7629, norm(y): 1.0038, norm:0.7098, tok/sec: 98501.70, flops:103.39, batch-reuse:1
@ 4005 train 4.7787 , allloss: 4.7788, dt: 1333.12ms, fracRes: 0.7059, norm(attn): 0.1875, norm(output): 0.9378, norm(x): 0.7627, norm(y): 1.0036, norm:1.0128, tok/sec: 98319.51, flops:103.20, batch-reuse:1
@ 4006 train 4.4947 , allloss: 4.4949, dt: 1292.03ms, fracRes: 0.7053, norm(attn): 0.1875, norm(output): 0.9384, norm(x): 0.7656, norm(y): 1.0034, norm:0.9526, tok/sec: 101446.67, flops:106.48, batch-reuse:1
@ 4007 train 4.4763 , allloss: 4.4763, dt: 1322.72ms, fracRes: 0.7053, norm(attn): 0.1875, norm(output): 0.9385, norm(x): 0.7661, norm(y): 1.0035, norm:1.0051, tok/sec: 99092.95, flops:104.01, batch-reuse:1
@ 4008 train 4.4809 , allloss: 4.4810, dt: 1296.37ms, fracRes: 0.7056, norm(attn): 0.1904, norm(output): 0.9383, norm(x): 0.7647, norm(y): 1.0036, norm:0.8506, tok/sec: 101106.71, flops:106.12, batch-reuse:1
@ 4009 train 4.4262 , allloss: 4.4262, dt: 1283.00ms, fracRes: 0.7056, norm(attn): 0.1934, norm(output): 0.9382, norm(x): 0.7638, norm(y): 1.0037, norm:0.6767, tok/sec: 102160.58, flops:107.23, batch-reuse:1
@ 4010 train 4.4953 , allloss: 4.4953, dt: 1278.25ms, fracRes: 0.7056, norm(attn): 0.1914, norm(output): 0.9381, norm(x): 0.7636, norm(y): 1.0039, norm:1.2897, tok/sec: 102539.94, flops:107.63, batch-reuse:1
@ 4011 train 4.4593 , allloss: 4.4594, dt: 1299.45ms, fracRes: 0.7052, norm(attn): 0.1885, norm(output): 0.9382, norm(x): 0.7642, norm(y): 1.0038, norm:0.8513, tok/sec: 100867.19, flops:105.87, batch-reuse:1
@ 4012 train 4.4793 , allloss: 4.4794, dt: 1300.71ms, fracRes: 0.7049, norm(attn): 0.1895, norm(output): 0.9382, norm(x): 0.7648, norm(y): 1.0037, norm:0.6656, tok/sec: 100769.84, flops:105.77, batch-reuse:1
@ 4013 train 4.5019 , allloss: 4.5020, dt: 1299.61ms, fracRes: 0.7050, norm(attn): 0.1895, norm(output): 0.9385, norm(x): 0.7653, norm(y): 1.0037, norm:0.7178, tok/sec: 100854.64, flops:105.86, batch-reuse:1
@ 4014 train 4.5747 , allloss: 4.5747, dt: 1303.17ms, fracRes: 0.7053, norm(attn): 0.1895, norm(output): 0.9383, norm(x): 0.7646, norm(y): 1.0037, norm:0.7491, tok/sec: 100579.25, flops:105.57, batch-reuse:1
@ 4015 train 4.4686 , allloss: 4.4686, dt: 1324.77ms, fracRes: 0.7055, norm(attn): 0.1885, norm(output): 0.9382, norm(x): 0.7641, norm(y): 1.0036, norm:0.6658, tok/sec: 98939.10, flops:103.85, batch-reuse:1
@ 4016 train 4.4824 , allloss: 4.4825, dt: 1313.92ms, fracRes: 0.7058, norm(attn): 0.1904, norm(output): 0.9381, norm(x): 0.7628, norm(y): 1.0034, norm:0.6589, tok/sec: 99756.47, flops:104.71, batch-reuse:1
@ 4017 train 4.4222 , allloss: 4.4225, dt: 1324.37ms, fracRes: 0.7056, norm(attn): 0.1914, norm(output): 0.9382, norm(x): 0.7627, norm(y): 1.0035, norm:0.6067, tok/sec: 98969.33, flops:103.88, batch-reuse:1
@ 4018 train 4.4207 , allloss: 4.4208, dt: 1318.57ms, fracRes: 0.7052, norm(attn): 0.1914, norm(output): 0.9383, norm(x): 0.7637, norm(y): 1.0037, norm:0.6325, tok/sec: 99404.72, flops:104.34, batch-reuse:1
@ 4019 train 4.5813 , allloss: 4.5814, dt: 1295.63ms, fracRes: 0.7051, norm(attn): 0.1904, norm(output): 0.9383, norm(x): 0.7643, norm(y): 1.0037, norm:0.6650, tok/sec: 101164.89, flops:106.19, batch-reuse:1
@ 4020 train 4.4333 , allloss: 4.4335, dt: 1284.78ms, fracRes: 0.7051, norm(attn): 0.1914, norm(output): 0.9383, norm(x): 0.7641, norm(y): 1.0037, norm:0.6651, tok/sec: 102019.34, flops:107.08, batch-reuse:1
@ 4021 train 4.4355 , allloss: 4.4356, dt: 1290.56ms, fracRes: 0.7054, norm(attn): 0.1904, norm(output): 0.9383, norm(x): 0.7636, norm(y): 1.0038, norm:0.5882, tok/sec: 101562.47, flops:106.60, batch-reuse:1
@ 4022 train 4.2894 , allloss: 4.2895, dt: 1299.82ms, fracRes: 0.7055, norm(attn): 0.1924, norm(output): 0.9381, norm(x): 0.7629, norm(y): 1.0038, norm:0.6853, tok/sec: 100838.75, flops:105.84, batch-reuse:1
@ 4023 train 4.5479 , allloss: 4.5480, dt: 1317.15ms, fracRes: 0.7054, norm(attn): 0.1885, norm(output): 0.9382, norm(x): 0.7638, norm(y): 1.0037, norm:0.6138, tok/sec: 99511.89, flops:104.45, batch-reuse:1
@ 4024 train 4.4907 , allloss: 4.4908, dt: 1304.14ms, fracRes: 0.7053, norm(attn): 0.1875, norm(output): 0.9382, norm(x): 0.7645, norm(y): 1.0039, norm:0.6040, tok/sec: 100504.21, flops:105.49, batch-reuse:1
@ 4025 train 4.4160 , allloss: 4.4160, dt: 1311.71ms, fracRes: 0.7052, norm(attn): 0.1895, norm(output): 0.9385, norm(x): 0.7650, norm(y): 1.0039, norm:0.6715, tok/sec: 99924.43, flops:104.88, batch-reuse:1
@ 4026 train 4.3302 , allloss: 4.3302, dt: 1289.10ms, fracRes: 0.7055, norm(attn): 0.1904, norm(output): 0.9382, norm(x): 0.7645, norm(y): 1.0038, norm:0.5532, tok/sec: 101676.75, flops:106.72, batch-reuse:1
@ 4027 train 4.4313 , allloss: 4.4321, dt: 1317.51ms, fracRes: 0.7058, norm(attn): 0.1885, norm(output): 0.9382, norm(x): 0.7639, norm(y): 1.0035, norm:0.5983, tok/sec: 99484.89, flops:104.42, batch-reuse:1
@ 4028 train 4.4386 , allloss: 4.4388, dt: 1315.04ms, fracRes: 0.7059, norm(attn): 0.1904, norm(output): 0.9382, norm(x): 0.7637, norm(y): 1.0034, norm:0.5746, tok/sec: 99671.81, flops:104.62, batch-reuse:1
@ 4029 train 4.4363 , allloss: 4.4363, dt: 1315.86ms, fracRes: 0.7057, norm(attn): 0.1885, norm(output): 0.9383, norm(x): 0.7641, norm(y): 1.0035, norm:0.5770, tok/sec: 99609.52, flops:104.55, batch-reuse:1
@ 4030 train 4.3191 , allloss: 4.3192, dt: 1317.03ms, fracRes: 0.7056, norm(attn): 0.1875, norm(output): 0.9384, norm(x): 0.7644, norm(y): 1.0038, norm:0.6412, tok/sec: 99520.81, flops:104.46, batch-reuse:1
@ 4031 train 4.3202 , allloss: 4.3204, dt: 1310.88ms, fracRes: 0.7056, norm(attn): 0.1885, norm(output): 0.9381, norm(x): 0.7638, norm(y): 1.0038, norm:0.6384, tok/sec: 99987.93, flops:104.95, batch-reuse:1
@ 4032 train 4.3242 , allloss: 4.3244, dt: 1293.49ms, fracRes: 0.7056, norm(attn): 0.1875, norm(output): 0.9383, norm(x): 0.7640, norm(y): 1.0038, norm:0.5851, tok/sec: 101332.17, flops:106.36, batch-reuse:1
@ 4033 train 4.3687 , allloss: 4.3689, dt: 1291.52ms, fracRes: 0.7056, norm(attn): 0.1885, norm(output): 0.9382, norm(x): 0.7636, norm(y): 1.0038, norm:0.5796, tok/sec: 101486.89, flops:106.52, batch-reuse:1
@ 4034 train 4.3785 , allloss: 4.3785, dt: 1274.86ms, fracRes: 0.7058, norm(attn): 0.1895, norm(output): 0.9382, norm(x): 0.7636, norm(y): 1.0037, norm:0.5960, tok/sec: 102812.56, flops:107.92, batch-reuse:1
@ 4035 train 4.3364 , allloss: 4.3368, dt: 1319.09ms, fracRes: 0.7057, norm(attn): 0.1885, norm(output): 0.9383, norm(x): 0.7643, norm(y): 1.0037, norm:0.5893, tok/sec: 99365.41, flops:104.30, batch-reuse:1
@ 4036 train 4.2503 , allloss: 4.2504, dt: 1303.04ms, fracRes: 0.7057, norm(attn): 0.1904, norm(output): 0.9383, norm(x): 0.7647, norm(y): 1.0037, norm:0.6033, tok/sec: 100589.65, flops:105.58, batch-reuse:1
@ 4037 train 4.2831 , allloss: 4.2833, dt: 1297.45ms, fracRes: 0.7056, norm(attn): 0.1895, norm(output): 0.9382, norm(x): 0.7643, norm(y): 1.0035, norm:0.5084, tok/sec: 101022.58, flops:106.04, batch-reuse:1
@ 4038 train 4.2951 , allloss: 4.2952, dt: 1296.06ms, fracRes: 0.7056, norm(attn): 0.1885, norm(output): 0.9383, norm(x): 0.7645, norm(y): 1.0037, norm:0.6014, tok/sec: 101131.23, flops:106.15, batch-reuse:1
@ 4039 train 4.2633 , allloss: 4.2637, dt: 1320.26ms, fracRes: 0.7056, norm(attn): 0.1885, norm(output): 0.9384, norm(x): 0.7646, norm(y): 1.0036, norm:0.7156, tok/sec: 99277.41, flops:104.20, batch-reuse:1
@ 4040 train 4.3235 , allloss: 4.3237, dt: 1330.36ms, fracRes: 0.7055, norm(attn): 0.1895, norm(output): 0.9382, norm(x): 0.7649, norm(y): 1.0039, norm:0.7363, tok/sec: 98523.52, flops:103.41, batch-reuse:1
@ 4041 train 4.2012 , allloss: 4.2015, dt: 1339.19ms, fracRes: 0.7055, norm(attn): 0.1895, norm(output): 0.9380, norm(x): 0.7643, norm(y): 1.0037, norm:0.5375, tok/sec: 97873.91, flops:102.73, batch-reuse:1
@ 4042 train 4.3216 , allloss: 4.3227, dt: 1333.80ms, fracRes: 0.7056, norm(attn): 0.1885, norm(output): 0.9381, norm(x): 0.7645, norm(y): 1.0035, norm:0.6065, tok/sec: 98269.78, flops:103.15, batch-reuse:1
@ 4043 train 4.3457 , allloss: 4.3458, dt: 1283.90ms, fracRes: 0.7053, norm(attn): 0.1895, norm(output): 0.9383, norm(x): 0.7644, norm(y): 1.0035, norm:0.6757, tok/sec: 102088.95, flops:107.16, batch-reuse:1
@ 4044 train 4.3578 , allloss: 4.3579, dt: 1309.29ms, fracRes: 0.7054, norm(attn): 0.1885, norm(output): 0.9381, norm(x): 0.7642, norm(y): 1.0036, norm:0.7280, tok/sec: 100108.97, flops:105.08, batch-reuse:1
@ 4045 train 4.2967 , allloss: 4.2968, dt: 1340.69ms, fracRes: 0.7054, norm(attn): 0.1875, norm(output): 0.9382, norm(x): 0.7646, norm(y): 1.0036, norm:0.6685, tok/sec: 97764.24, flops:102.62, batch-reuse:1
@ 4046 train 4.3568 , allloss: 4.3568, dt: 1333.43ms, fracRes: 0.7056, norm(attn): 0.1875, norm(output): 0.9383, norm(x): 0.7640, norm(y): 1.0037, norm:0.5884, tok/sec: 98297.20, flops:103.18, batch-reuse:1
@ 4047 train 4.4192 , allloss: 4.4193, dt: 1323.07ms, fracRes: 0.7055, norm(attn): 0.1875, norm(output): 0.9382, norm(x): 0.7639, norm(y): 1.0038, norm:0.6231, tok/sec: 99066.56, flops:103.98, batch-reuse:1
@ 4048 train 4.3470 , allloss: 4.3473, dt: 1281.95ms, fracRes: 0.7054, norm(attn): 0.1885, norm(output): 0.9381, norm(x): 0.7646, norm(y): 1.0038, norm:0.6325, tok/sec: 102243.97, flops:107.32, batch-reuse:1
@ 4049 train 4.2612 , allloss: 4.2613, dt: 1305.80ms, fracRes: 0.7053, norm(attn): 0.1895, norm(output): 0.9382, norm(x): 0.7650, norm(y): 1.0038, norm:0.7492, tok/sec: 100376.67, flops:105.36, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0109, -0.0464, -0.0090,  ..., -0.0152, -0.0003,  0.0322],
        [ 0.0067, -0.0419, -0.0205,  ..., -0.0619, -0.0079,  0.0278],
        [-0.0018, -0.0569,  0.0160,  ..., -0.0068,  0.0117,  0.0482],
        ...,
        [ 0.0184,  0.0702, -0.0175,  ...,  0.0134, -0.0317,  0.0046],
        [-0.0081, -0.0140,  0.0637,  ...,  0.0050,  0.0512,  0.0275],
        [ 0.0183, -0.0250,  0.0471,  ..., -0.0214,  0.0572, -0.0071]], device='cuda:0', requires_grad=True)
K: tensor([ 4.9688, -3.2031,  1.8438,  3.4531, -4.5625,  3.4375, -1.0000,  5.7812, -4.7188, -0.3047, -2.7656, -3.8438,  4.9375, -4.2500,  0.9766, -0.2578, -1.2188, -4.3750,  5.2188, -5.9375,  5.4062,  3.1562, -6.3125, -0.1729, -1.5938, -0.9023,  3.3594, -3.4531, -4.6250, -2.7500,  5.5938,  1.0547,
         2.8906,  4.5312, -1.5859, -3.6562,  2.1719,  3.0312, -2.5000, -4.1562,  4.4375, -1.8281, -0.6328, -1.5859, -4.0625, -2.7188,  0.5195,  3.4375, -0.9531,  1.8047,  3.2969, -3.8438, -5.0938,  5.2812,  3.0156, -2.2031,  4.4688,  3.4531, -1.5469, -2.6719, -2.4062,  0.5781, -1.9531, -1.1719],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0823,  0.0834, -0.0016,  ..., -0.0241, -0.0344, -0.0170],
        [-0.0676,  0.0904,  0.0017,  ...,  0.0261, -0.0027,  0.0180],
        [-0.0682,  0.0808, -0.0155,  ..., -0.0536, -0.0696,  0.0024],
        ...,
        [ 0.0394, -0.0116,  0.0040,  ...,  0.0128, -0.0181, -0.0002],
        [-0.0285,  0.0187, -0.0314,  ...,  0.0308,  0.0009,  0.0308],
        [-0.0185,  0.0435,  0.0073,  ...,  0.0111, -0.0087, -0.0342]], device='cuda:0', requires_grad=True)
Q: tensor([-1.5469,  5.8750, -8.6250, -5.0938,  4.1250, -4.7812, -2.8750, -5.8125,  5.0938, -6.3750,  1.5938,  4.6562, -7.5000,  5.0938, -7.2812,  4.5938,  5.3438,  5.8750, -4.3750,  7.0938, -4.8125, -4.9062,  5.5938, -4.8750, -2.6875, -5.0625, -6.4062,  2.8594,  4.1562,  7.9062, -5.0312, -6.0000,
        -7.0625, -4.0312, -3.0938,  2.3125, -8.5625, -4.6562,  5.2812,  2.7344, -2.6094,  1.4219,  6.3125, -1.0391,  4.9688,  3.4219, -6.6875, -6.9688,  6.9062,  0.3613, -3.8594,  5.6250,  4.2500, -6.2188, -2.4531, -0.2832, -3.2500,  3.0781, -2.0469,  9.1250,  1.9922, -5.0938,  5.4688,  6.7500],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[   0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000],
        [   0.0000,   99.5000,  120.5000,  106.5000,   76.0000,   78.5000,   56.2500,  105.5000,   85.0000,   67.0000,   81.0000,   86.5000,   57.7500,   80.5000,   84.0000],
        [   0.0000,  -57.2500,  -77.5000,  -77.5000,  -62.2500,  -59.5000,  -38.7500,  -61.5000,  -65.0000,  -50.0000,  -67.0000,  -51.0000,  -27.0000,  -59.2500,  -61.0000],
        [   0.0000, -112.5000, -146.0000, -141.0000, -110.0000, -107.5000,  -72.5000, -120.5000, -117.5000,  -91.0000, -119.5000, -101.0000,  -57.0000, -109.5000, -111.5000],
        [   0.0000, -126.0000, -161.0000, -154.0000, -118.5000, -116.5000,  -77.0000, -132.0000, -127.0000,  -99.0000, -129.0000, -107.0000,  -62.0000, -117.0000, -120.0000],
        [   0.0000, -101.0000, -130.0000, -125.5000,  -97.5000,  -96.0000,  -65.0000, -107.5000, -104.5000,  -81.5000, -105.0000,  -88.0000,  -52.0000,  -96.0000,  -98.0000],
        [   0.0000,  -86.5000, -110.0000, -104.5000,  -79.5000,  -79.5000,  -51.7500,  -90.0000,  -86.0000,  -66.5000,  -87.0000,  -72.5000,  -41.7500,  -79.5000,  -81.0000],
        [   0.0000,  -77.0000, -101.0000, -100.0000,  -80.5000,  -77.5000,  -52.5000,  -83.0000,  -85.0000,  -66.0000,  -86.5000,  -70.0000,  -38.7500,  -78.5000,  -80.0000],
        [   0.0000, -105.0000, -133.0000, -128.0000,  -98.0000,  -97.0000,  -64.0000, -109.5000, -106.0000,  -82.0000, -107.0000,  -87.5000,  -50.5000,  -97.0000,  -99.0000],
        [   0.0000, -108.0000, -138.0000, -132.0000, -102.0000, -100.5000,  -67.0000, -113.5000, -109.5000,  -84.5000, -111.0000,  -94.0000,  -52.7500, -102.0000, -104.5000],
        [   0.0000, -119.5000, -150.0000, -142.0000, -106.5000, -106.0000,  -69.5000, -123.0000, -116.0000,  -90.0000, -117.0000,  -98.0000,  -56.7500, -106.5000, -110.0000],
        [   0.0000, -101.0000, -129.0000, -124.5000,  -97.0000,  -95.5000,  -63.2500, -106.0000, -103.5000,  -79.5000, -105.5000,  -88.0000,  -48.5000,  -96.0000,  -99.0000],
        [   0.0000,  -68.0000,  -90.0000,  -89.5000,  -73.0000,  -69.5000,  -47.7500,  -73.5000,  -76.0000,  -58.7500,  -78.5000,  -63.2500,  -34.5000,  -71.0000,  -72.0000],
        [   0.0000, -109.0000, -136.0000, -129.0000,  -96.5000,  -96.5000,  -62.5000, -112.5000, -105.0000,  -81.0000, -105.5000,  -88.5000,  -51.5000,  -96.5000,  -99.5000],
        [   0.0000, -108.5000, -138.0000, -132.0000, -101.5000, -100.0000,  -67.0000, -113.5000, -109.5000,  -84.5000, -111.0000,  -93.0000,  -52.5000, -101.0000, -104.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9167],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0009,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1514,     0.8281,     0.0187,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8477,     0.0182,     0.1309,     0.0041,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8750,     0.1016,     0.0167,     0.0027,     0.0046,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8281,     0.1104,     0.0383,     0.0033,     0.0167,     0.0032,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7500,     0.1191,     0.1152,     0.0010,     0.0014,     0.0047,     0.0102,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6406,     0.0141,     0.2324,     0.0195,     0.0002,     0.0018,     0.0203,     0.0708,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8242,     0.0742,     0.0105,     0.0022,     0.0059,     0.0052,     0.0417,     0.0242,     0.0137,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5469,     0.0125,     0.0135,     0.0099,     0.0003,     0.0010,     0.0052,     0.3008,     0.0002,     0.1084,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5703,     0.1914,     0.0474,     0.0024,     0.0256,     0.0124,     0.0317,     0.0615,     0.0201,     0.0232,     0.0124,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1611,     0.0058,     0.0156,     0.0081,     0.0002,     0.0024,     0.0022,     0.4629,     0.0002,     0.0184,     0.0012,     0.3223,     0.0000,     0.0000,     0.0000],
        [    0.3379,     0.0126,     0.0184,     0.0162,     0.0056,     0.0017,     0.0918,     0.0229,     0.0039,     0.0500,     0.0859,     0.2852,     0.0679,     0.0000,     0.0000],
        [    0.7695,     0.0659,     0.0168,     0.0029,     0.0050,     0.0104,     0.0369,     0.0222,     0.0166,     0.0070,     0.0063,     0.0212,     0.0142,     0.0044,     0.0000],
        [    0.5039,     0.0820,     0.0173,     0.0029,     0.0004,     0.0080,     0.0067,     0.1572,     0.0043,     0.0231,     0.0072,     0.0552,     0.1050,     0.0018,     0.0266]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0311,  0.0302,  0.0051,  ...,  0.0035,  0.0098, -0.0036],
        [ 0.0095, -0.0003,  0.0487,  ..., -0.0076, -0.0097,  0.0356],
        [-0.0138,  0.0227, -0.0103,  ..., -0.0303,  0.0203,  0.0189],
        ...,
        [ 0.0565,  0.0065,  0.0493,  ...,  0.0120,  0.0257, -0.0350],
        [-0.0105,  0.0396, -0.0207,  ..., -0.0245,  0.0101,  0.0344],
        [-0.0089, -0.0545,  0.0266,  ..., -0.0101,  0.0036,  0.0456]], device='cuda:0', requires_grad=True)
K: tensor([-2.4688, -1.3516, -0.1177,  1.5547, -3.0781, -1.5234, -1.3438, -0.0635, -1.0703, -1.6328,  0.3672,  1.2422,  1.2109,  0.6836, -0.3301, -1.8125, -1.2500,  2.0625, -0.1758, -2.0312, -1.0703, -0.1699,  0.1235,  1.2891,  0.5312,  0.5938, -1.9375, -0.6055,  1.6719,  1.5938,  0.3594,  0.2451,
        -1.8203, -0.2031, -0.1260,  0.3691, -0.2578, -0.0923,  1.1406,  0.2197, -2.2031,  3.0469,  0.8867,  3.4375, -2.8906, -3.0156, -2.8906, -1.6406, -0.5391, -1.2891,  0.6367,  0.0781, -0.9648,  0.8672, -0.6562, -1.2578,  0.8672,  1.5156,  0.8594, -1.3594, -1.8750, -0.9219,  3.7344, -1.2578],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0132,  0.0055, -0.0223,  ..., -0.0175,  0.0107, -0.0269],
        [-0.0092,  0.0176, -0.0006,  ..., -0.0281, -0.0233,  0.0422],
        [-0.0021, -0.0193,  0.0443,  ..., -0.0044,  0.0059,  0.0091],
        ...,
        [-0.0034, -0.0160, -0.0170,  ..., -0.0013,  0.0218,  0.0448],
        [ 0.0185,  0.0048, -0.0165,  ...,  0.0358,  0.0159, -0.0082],
        [-0.0353,  0.0321,  0.0139,  ..., -0.0075,  0.0053,  0.0483]], device='cuda:0', requires_grad=True)
Q: tensor([ 1.3750,  0.5000,  0.0051, -2.4688,  1.4766,  0.5195,  1.1484, -0.9297, -1.2109, -0.1079,  0.0859,  0.9844, -0.1118,  0.7773,  1.2578, -0.4629,  2.4688, -1.6719, -0.4277,  2.0000,  0.0039, -0.1040,  1.3984,  2.7031,  1.8125,  0.7109,  0.2598, -0.1611,  1.5781, -2.4219,  0.9062,  0.4102,
        -0.9180,  0.4707,  1.0078, -1.8516, -0.0220,  3.2344, -0.2617, -0.3398, -1.6250, -1.6094, -1.6875,  0.7812,  1.6797, -0.5078,  1.4766, -0.8984,  2.8125, -1.4922,  0.5195,  1.5469, -0.2383, -1.4297, -2.0156, -1.2188, -0.1299, -1.3750, -0.6055, -2.5312, -1.0859, -0.1543, -1.3281,  0.1260],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  6.9688,  4.5938, -0.6836,  0.5078,  3.1562,  1.2344,  1.0312,  4.2188, -0.1289, -0.0114,  1.6406,  2.4531,  2.5625,  1.0234],
        [ 0.0000,  1.7031, -2.0938, -2.6250, -1.7031, -2.1562, -1.1562,  0.9922, -1.9609, -0.9375, -1.8984,  0.3535,  1.7500, -2.5312, -2.1094],
        [ 0.0000, -3.8438, -1.8672, -5.3125, -6.6875, -4.8438, -5.8125, -2.9531, -6.2500, -4.5625, -5.4375, -2.2656, -1.8906, -7.1562, -4.0625],
        [ 0.0000, -2.1562, -3.9531, -5.7812, -5.2500, -4.5000, -3.9688, -2.6719, -4.5938, -4.5938, -4.6250, -3.9062, -3.2188, -5.2812, -5.3438],
        [ 0.0000, -2.0156, -3.0781, -5.5312, -3.9062, -5.5625, -3.3750, -3.1562, -4.0938, -3.3438, -4.4688, -3.3281, -3.3594, -4.3125, -4.4062],
        [ 0.0000, -1.8359, -1.8672, -6.5938, -6.2500, -5.0625, -4.3125, -3.7344, -4.9062, -4.5000, -4.1875, -3.1250, -3.1562, -6.0312, -4.6875],
        [ 0.0000, -3.8125, -1.0156, -3.4844, -8.0000, -5.9062, -3.4531, -2.2031, -8.3125, -3.8438, -4.9375, -2.6562, -1.1406, -9.0000, -4.9375],
        [ 0.0000, -2.4062, -4.3750, -5.9062, -4.9375, -5.0625, -2.9844, -3.5312, -4.0938, -5.0625, -5.6562, -3.9531, -4.9375, -4.5625, -5.7500],
        [ 0.0000, -3.7812, -3.7031, -4.0000, -7.3750, -6.2500, -4.6562, -0.5977, -7.6875, -1.6172, -6.3125, -0.7109,  0.1030, -7.9688, -5.9375],
        [ 0.0000, -1.0938, -2.5000, -5.5000, -3.1094, -3.8281, -2.8906, -2.2344, -3.3438, -3.2031, -3.8281, -1.8359, -2.9688, -4.3750, -5.4062],
        [ 0.0000, -3.3281, -2.3281, -3.0000, -6.8438, -4.1875, -4.2812,  1.0625, -6.9375, -2.1719, -4.9062,  0.6953,  2.7188, -7.5625, -4.1562],
        [ 0.0000, -3.2812, -2.9062, -3.0312, -4.0938, -5.2500, -1.3047, -2.6875, -4.4688, -1.9141, -1.3672, -0.1738, -1.6094, -4.1562, -1.5312],
        [ 0.0000, -2.4531, -3.8281, -5.5625, -5.0312, -4.3125, -3.0312, -3.5469, -3.8281, -4.6875, -4.8125, -3.5938, -3.9844, -5.1562, -4.5312],
        [ 0.0000, -1.8125, -3.3750, -5.1562, -7.1562, -4.1562, -4.3125, -1.1562, -4.7812, -3.0781, -4.2500, -2.2031, -1.5625, -5.6562, -2.9375]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7919],
        [0.6181],
        [0.4990],
        [0.5832],
        [0.5845],
        [0.3590],
        [0.3836],
        [0.4330],
        [0.3311],
        [0.3007],
        [0.2349],
        [0.3059],
        [0.3206],
        [0.1710]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0272, -0.0071,  0.0052,  ...,  0.0164, -0.0646, -0.0113],
        [-0.0459, -0.0272,  0.0064,  ...,  0.0319, -0.0619, -0.0273],
        [ 0.0190,  0.0102, -0.0124,  ...,  0.0414,  0.0229, -0.0089],
        ...,
        [-0.0123, -0.0165, -0.0063,  ...,  0.0529, -0.0287, -0.0149],
        [-0.0241, -0.0151,  0.0153,  ...,  0.0160,  0.0029, -0.0031],
        [ 0.0051, -0.0351, -0.0292,  ...,  0.0510, -0.0321, -0.0563]], device='cuda:0', requires_grad=True)
K: tensor([ 3.2344, -3.6719, -2.9531, -3.5469,  5.0312, -3.5938,  4.8125,  3.2969,  3.0156, -4.9688,  3.2656, -4.5000, -5.0625,  4.5312,  2.5156, -2.4688,  1.6250,  4.2812, -0.5469, -4.0625,  4.6562,  5.2500,  3.6406, -1.9609, -3.7969,  4.6562, -3.4531, -4.7812, -2.8906,  3.4688, -4.1875,  3.0000,
         2.8906, -3.2656, -3.5938,  0.9453,  1.2578, -3.7500,  3.5156, -3.6875, -3.6562,  1.9688,  2.6406, -3.0312, -2.7031,  3.3906, -3.8750,  3.4531, -4.8438, -3.8438, -3.9062,  3.1562,  2.6562,  3.6875,  2.6562, -4.6875, -3.6406,  2.9531, -0.8789, -2.2344,  3.5156,  3.5469, -1.4375,  2.6719],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0098,  0.0091,  0.0134,  ..., -0.0018,  0.0157,  0.0410],
        [ 0.0396,  0.0232, -0.0172,  ..., -0.0385,  0.0007,  0.0087],
        [-0.0006, -0.0241, -0.0023,  ..., -0.0262,  0.0401,  0.0313],
        ...,
        [-0.0128, -0.0058, -0.0499,  ..., -0.0120,  0.0398,  0.0069],
        [ 0.0192,  0.0009, -0.0200,  ...,  0.0241, -0.0217, -0.0147],
        [-0.0049,  0.0032,  0.0061,  ..., -0.0223, -0.0013,  0.0496]], device='cuda:0', requires_grad=True)
Q: tensor([-2.2188,  3.8750,  4.5312,  3.7500, -3.9531,  4.1562, -3.8594, -4.8438, -3.6719,  4.2188, -4.0000,  5.5000,  4.6250, -4.0000, -3.6875,  3.7188, -2.0312, -5.4375,  0.6055,  5.6875, -5.0938, -4.6250, -5.0938,  1.2969,  5.0312, -5.1562,  3.3750,  4.2812,  3.4688, -4.1250,  3.3438, -3.7188,
        -3.9688,  2.2188,  4.3438, -2.2188, -0.8750,  2.9688, -5.5938,  2.2031,  4.6562, -1.1875, -3.3750,  4.0938,  2.8750, -4.5312,  3.6406, -3.2031,  4.0938,  5.1875,  5.2500, -5.0000, -2.9844, -3.8750, -2.5469,  4.5938,  4.4062, -2.1094,  1.7188,  2.9531, -3.2812, -4.9688,  1.5625, -2.5469],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[   0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000],
        [   0.0000,  -57.2500,  -65.5000,  -98.0000,  -94.0000,  -87.0000,  -91.5000, -112.5000,  -88.0000, -104.5000,  -79.5000,  -92.0000,  -91.0000,  -81.0000,  -82.5000],
        [   0.0000,  -68.0000,  -80.5000, -122.0000, -113.5000, -105.5000, -111.5000, -139.0000, -105.5000, -130.0000,  -97.0000, -112.0000, -113.0000,  -97.5000, -101.0000],
        [   0.0000,  -95.5000, -115.5000, -179.0000, -163.0000, -150.0000, -160.0000, -200.0000, -150.0000, -190.0000, -140.0000, -159.0000, -163.0000, -138.0000, -144.0000],
        [   0.0000,  -79.5000,  -93.5000, -142.0000, -134.0000, -123.5000, -131.0000, -162.0000, -123.5000, -152.0000, -113.5000, -131.0000, -132.0000, -114.5000, -117.0000],
        [   0.0000,  -81.5000,  -95.0000, -146.0000, -136.0000, -127.5000, -134.0000, -167.0000, -126.5000, -156.0000, -115.5000, -134.0000, -135.0000, -117.0000, -120.0000],
        [   0.0000,  -81.0000,  -95.5000, -146.0000, -137.0000, -127.0000, -134.0000, -167.0000, -126.5000, -156.0000, -116.0000, -134.0000, -135.0000, -117.0000, -120.5000],
        [   0.0000, -110.5000, -131.0000, -202.0000, -186.0000, -174.0000, -183.0000, -231.0000, -172.0000, -215.0000, -158.0000, -184.0000, -187.0000, -159.0000, -165.0000],
        [   0.0000,  -72.0000,  -84.5000, -129.0000, -120.5000, -112.5000, -118.0000, -148.0000, -112.5000, -138.0000, -102.5000, -119.0000, -120.0000, -104.0000, -106.0000],
        [   0.0000, -100.0000, -120.0000, -184.0000, -168.0000, -156.0000, -165.0000, -208.0000, -154.0000, -198.0000, -142.0000, -166.0000, -170.0000, -142.0000, -148.0000],
        [   0.0000,  -70.0000,  -83.0000, -128.0000, -119.0000, -109.5000, -116.5000, -144.0000, -110.0000, -136.0000, -101.5000, -116.5000, -117.5000, -102.0000, -104.5000],
        [   0.0000,  -86.0000, -102.0000, -155.0000, -142.0000, -133.0000, -140.0000, -176.0000, -131.0000, -166.0000, -120.5000, -142.0000, -144.0000, -120.5000, -125.5000],
        [   0.0000,  -88.5000, -106.0000, -163.0000, -149.0000, -138.0000, -146.0000, -185.0000, -137.0000, -173.0000, -126.5000, -147.0000, -151.0000, -126.5000, -132.0000],
        [   0.0000,  -65.5000,  -77.0000, -117.5000, -110.0000, -102.0000, -108.0000, -134.0000, -102.5000, -125.5000,  -93.5000, -108.5000, -109.5000,  -95.0000,  -96.5000],
        [   0.0000,  -71.0000,  -84.5000, -130.0000, -120.5000, -112.0000, -118.0000, -148.0000, -111.5000, -139.0000, -102.0000, -119.5000, -120.0000, -102.5000, -106.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[     0.0380,      0.0169,      0.0196,  ...,      0.0059,     -0.0011,     -0.0232],
        [    -0.0036,      0.0182,      0.0206,  ...,      0.0286,      0.0060,      0.0273],
        [     0.0303,      0.0045,     -0.0009,  ...,     -0.0008,      0.0367,      0.0027],
        ...,
        [    -0.0210,     -0.0275,     -0.0138,  ...,      0.0127,     -0.0251,      0.0102],
        [    -0.0081,      0.0065,     -0.0205,  ...,     -0.0175,     -0.0274,     -0.0237],
        [     0.0227,      0.0000,     -0.0046,  ...,      0.0129,      0.0129,      0.0062]], device='cuda:0', requires_grad=True)
K: tensor([-2.3750,  0.4980, -2.4219,  1.3906, -1.3047, -2.3594, -1.0312,  2.4688, -0.1216, -0.2656,  0.8438,  0.8203, -1.4531, -2.9688,  1.8828,  1.6875,  2.6719, -2.1719, -2.0938,  1.3906,  1.5391, -2.0312, -2.6875,  2.9219, -1.8359,  2.5938, -1.0078, -1.6719,  0.6641, -1.4375,  0.1084, -2.1719,
        -1.5781, -2.1875,  1.8438, -2.6094, -2.4062, -0.0942,  2.5469,  1.8125, -2.1250, -0.4082,  0.9453, -2.2344,  1.7031,  2.7656, -0.1377, -1.6562, -1.9531,  2.1406,  2.5000,  0.8789,  0.1660, -2.0000, -1.1797, -1.9297,  2.2969,  1.9609, -2.0469, -1.7188, -1.1406,  2.9531, -0.6680, -2.8594],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0281,  0.0132, -0.0056,  ...,  0.0175, -0.0212, -0.0190],
        [-0.0102, -0.0089,  0.0072,  ...,  0.0082, -0.0166, -0.0016],
        [ 0.0021,  0.0107, -0.0019,  ..., -0.0012,  0.0160,  0.0024],
        ...,
        [-0.0241,  0.0060, -0.0090,  ..., -0.0123,  0.0255,  0.0094],
        [-0.0320,  0.0288, -0.0046,  ...,  0.0045,  0.0010, -0.0261],
        [ 0.0023, -0.0107, -0.0381,  ...,  0.0021, -0.0048,  0.0149]], device='cuda:0', requires_grad=True)
Q: tensor([ 2.8281, -1.9297,  1.5547, -0.4434,  0.4980,  2.5469,  1.3750, -3.4688, -0.9922, -0.6836,  0.1270,  0.8320,  1.4688,  1.8594, -2.2969, -1.7812, -3.1719,  2.5469,  1.5859, -2.8750, -1.7422,  3.1406,  3.2031, -2.4375,  2.2812, -3.0625, -0.0204,  1.1875,  0.7070,  0.6328,  0.5352,  1.7734,
         0.0084,  1.9922, -1.6484,  2.4062,  2.4062, -1.3438, -2.7656, -2.9219,  3.1250, -1.8984, -2.1719,  2.5156, -1.7969, -1.8516, -2.5156,  0.8867,  1.3438, -2.0781, -1.9844,  0.6953,  2.1719,  2.9219,  0.4629,  2.9062, -2.9375, -1.9844,  2.2969,  2.0156,  1.0703, -3.6406,  2.9531,  1.7109],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000, -20.3750, -20.2500, -23.2500, -20.0000, -20.8750, -19.6250, -20.7500, -20.3750, -20.6250, -21.2500, -21.6250, -22.8750, -22.0000, -22.7500],
        [  0.0000, -20.8750, -21.0000, -24.3750, -21.0000, -21.7500, -20.5000, -21.6250, -21.2500, -21.5000, -22.2500, -22.6250, -23.8750, -23.0000, -23.7500],
        [  0.0000, -26.3750, -27.0000, -32.7500, -28.5000, -29.7500, -27.8750, -29.3750, -28.7500, -29.0000, -30.0000, -30.3750, -32.2500, -31.0000, -32.2500],
        [  0.0000, -22.2500, -22.5000, -26.2500, -23.2500, -24.1250, -22.7500, -23.8750, -23.5000, -23.5000, -24.3750, -24.7500, -26.1250, -25.1250, -25.8750],
        [  0.0000, -22.1250, -22.2500, -25.7500, -22.7500, -23.7500, -22.5000, -23.6250, -23.0000, -23.1250, -24.0000, -24.3750, -25.7500, -24.6250, -25.5000],
        [  0.0000, -20.6250, -20.6250, -23.3750, -20.7500, -21.6250, -20.6250, -21.5000, -21.0000, -21.1250, -21.8750, -22.1250, -23.3750, -22.5000, -23.1250],
        [  0.0000, -22.8750, -23.0000, -26.7500, -23.7500, -24.6250, -23.3750, -24.6250, -24.0000, -24.1250, -25.0000, -25.2500, -26.8750, -25.6250, -26.5000],
        [  0.0000, -20.6250, -20.7500, -23.8750, -21.0000, -21.8750, -20.7500, -21.7500, -21.3750, -21.5000, -22.2500, -22.5000, -23.7500, -22.8750, -23.5000],
        [  0.0000, -23.5000, -24.0000, -28.6250, -25.0000, -26.0000, -24.5000, -25.8750, -25.3750, -25.6250, -26.3750, -26.8750, -28.3750, -27.2500, -28.2500],
        [  0.0000, -21.0000, -21.1250, -24.5000, -21.3750, -22.3750, -21.1250, -22.2500, -21.7500, -21.8750, -22.7500, -23.1250, -24.3750, -23.3750, -24.2500],
        [  0.0000, -22.8750, -23.2500, -27.3750, -23.8750, -24.8750, -23.5000, -24.7500, -24.2500, -24.3750, -25.2500, -25.7500, -27.1250, -26.0000, -27.1250],
        [  0.0000, -22.3750, -22.7500, -26.7500, -23.5000, -24.5000, -23.1250, -24.3750, -23.7500, -23.8750, -24.7500, -25.1250, -26.6250, -25.5000, -26.3750],
        [  0.0000, -21.6250, -21.8750, -25.6250, -22.3750, -23.3750, -22.0000, -23.1250, -22.7500, -22.8750, -23.6250, -24.1250, -25.3750, -24.3750, -25.2500],
        [  0.0000, -23.5000, -23.7500, -28.0000, -24.3750, -25.6250, -24.0000, -25.3750, -24.7500, -25.0000, -25.8750, -26.3750, -27.7500, -26.6250, -27.7500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.6094,     0.3887,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0023,     0.7422,     0.2520,     0.0027,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0330,     0.5430,     0.1289,     0.0011,     0.2930,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0017,     0.6914,     0.1060,     0.0011,     0.1357,     0.0623,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3398,     0.0586,     0.0001,     0.0391,     0.0347,     0.5273,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0039,     0.1523,     0.0325,     0.0000,     0.0356,     0.0342,     0.6250,     0.1162,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0003,     0.1377,     0.0259,     0.0002,     0.0503,     0.0278,     0.3574,     0.0601,     0.3398,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0007,     0.1245,     0.0311,     0.0004,     0.0361,     0.0204,     0.3340,     0.1250,     0.3066,     0.0206,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0118,     0.0747,     0.0221,     0.0001,     0.0260,     0.0105,     0.2207,     0.0525,     0.4102,     0.0056,     0.1641,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.0425,     0.0206,     0.0002,     0.0801,     0.0266,     0.2598,     0.1245,     0.3086,     0.0123,     0.1177,     0.0079,     0.0000,     0.0000,     0.0000],
        [    0.0295,     0.0410,     0.0093,     0.0000,     0.0141,     0.0135,     0.2617,     0.0566,     0.4746,     0.0056,     0.0850,     0.0015,     0.0083,     0.0000,     0.0000],
        [    0.0002,     0.0742,     0.0106,     0.0001,     0.0245,     0.0137,     0.2158,     0.0359,     0.2061,     0.0071,     0.0762,     0.0039,     0.0131,     0.3184,     0.0000],
        [    0.0000,     0.0483,     0.0106,     0.0002,     0.0188,     0.0092,     0.1387,     0.0486,     0.2178,     0.0050,     0.0474,     0.0033,     0.0186,     0.3379,     0.0957]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0187,  0.0041,  0.0499,  ...,  0.0143, -0.0104, -0.0032],
        [-0.0013,  0.0206, -0.0127,  ..., -0.0139,  0.0112,  0.0972],
        [-0.0019,  0.0164, -0.0108,  ..., -0.0190,  0.0316,  0.0099],
        ...,
        [ 0.0251,  0.0229,  0.0138,  ..., -0.0379,  0.0174, -0.0173],
        [ 0.0255,  0.0326, -0.0811,  ...,  0.0304, -0.0018,  0.1343],
        [ 0.0310,  0.0343,  0.0241,  ..., -0.0411,  0.0063, -0.0198]], device='cuda:0', requires_grad=True)
K: tensor([-4.2500, -1.1094, -6.7188,  0.9883, -0.1611, -0.2617, -5.0938,  6.5000,  3.7031, -2.3906,  4.6562, -5.1562, -4.6562, -0.2930,  2.9531,  4.8750,  2.7969, -3.0938, -2.8750, -4.9062, -5.0312, -0.6211,  0.3848, -1.0781, -4.3438, -2.4531, -1.4609, -4.0312,  3.8438, -0.4004,  2.9688, -2.7188,
        -2.4688, -6.4062, -0.6133,  6.2500,  4.6250,  1.4609,  2.9688, -3.2188, -0.0776, -4.7188, -0.1084, -4.2188,  0.1514, -2.5312,  1.3672, -5.1250,  2.9375, -0.0089,  0.4336, -6.4375, -6.9375, -6.0000,  1.5391, -0.9180, -0.8086,  2.8750, -1.9219, -2.1562,  0.2266, -3.7500,  0.6094, -6.3125],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0149, -0.0268, -0.0115,  ...,  0.0015,  0.0253, -0.0097],
        [-0.0043, -0.0071, -0.0668,  ..., -0.0520, -0.0056, -0.0430],
        [-0.0149,  0.0014,  0.0054,  ..., -0.0155, -0.0323, -0.0309],
        ...,
        [ 0.0318, -0.0165,  0.0290,  ..., -0.0159, -0.0310, -0.0010],
        [ 0.0217,  0.0122, -0.0032,  ..., -0.0195, -0.0161, -0.0390],
        [ 0.0292,  0.0033, -0.0419,  ...,  0.0335,  0.0410, -0.0126]], device='cuda:0', requires_grad=True)
Q: tensor([-1.1719, -0.1777, -1.1641,  0.5547,  1.7500, -1.2109, -1.3906,  0.7383,  3.0156,  0.7500,  1.9766, -0.1611, -1.3828, -1.5078,  1.9688, -0.9258,  1.4062, -0.4355, -0.5391,  2.2812, -1.1406,  0.0623, -1.8906, -3.2812,  0.4414, -0.0933,  0.0698, -1.7266, -2.3438,  1.2891,  0.3262,  0.2451,
         1.5703, -2.3125, -1.2578,  2.8438,  0.3809, -1.8281,  0.3320,  0.2812,  0.2070,  2.4531,  0.5312, -0.1035, -2.4062, -0.0192,  1.5156, -0.2734, -0.7109, -1.2188,  0.1465, -1.2422, -0.4062,  0.3301, -0.6953, -0.9727,  0.8633, -0.0913, -1.5859,  0.3008,  0.7930,  0.7383, -0.0796, -2.1719],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, 14.8125, 13.6250,  9.4375, 15.1875, 14.5000, 16.7500, 15.6250, 17.3750, 13.8125, 16.3750, 13.6875, 16.3750, 18.5000, 18.0000],
        [ 0.0000, 19.2500, 18.7500, 16.6250, 21.2500, 20.1250, 21.1250, 21.0000, 21.5000, 20.0000, 21.2500, 20.7500, 22.8750, 23.0000, 23.6250],
        [ 0.0000,  5.7812,  4.6875,  0.1641,  4.8438,  4.3125,  6.4688,  5.4688,  6.4375,  3.0625,  5.0625,  1.9922,  3.9688,  6.2188,  6.3125],
        [ 0.0000,  2.7969,  1.3672, -3.4219,  2.1875,  1.5156,  3.7344,  2.2500,  4.0938, -0.0292,  2.6719, -0.8906,  0.9180,  4.0625,  3.1250],
        [ 0.0000,  5.9688,  4.0938, -0.4707,  4.3438,  3.5781,  6.6875,  5.0625,  6.9062,  3.3125,  5.5312,  2.5469,  3.3281,  7.0000,  5.9375],
        [ 0.0000, 11.3750,  9.6250,  2.9688,  9.2500,  9.1250, 11.8125, 10.2500, 12.2500,  6.6250,  9.7500,  5.5000,  7.7812, 11.8125, 11.1250],
        [ 0.0000,  3.6719,  2.1250, -4.5938,  2.2188,  2.1875,  5.0938,  3.4062,  5.6562,  0.5469,  3.5938, -1.1094,  1.5000,  5.8438,  4.8750],
        [ 0.0000,  6.0938,  4.4375, -0.6680,  5.0938,  4.5000,  7.0625,  5.2500,  7.0000,  3.7656,  6.0625,  2.9531,  4.4688,  7.3750,  7.1562],
        [ 0.0000,  5.1562,  3.7812, -0.5078,  3.9375,  3.3594,  6.1562,  5.1562,  6.0625,  3.3750,  5.0000,  2.5312,  3.9062,  6.5312,  5.9688],
        [ 0.0000,  1.8516,  0.6289, -4.5938,  0.7891, -0.1143,  2.9375,  1.4922,  3.5469, -0.7461,  2.6406, -1.2500,  0.2832,  3.9688,  3.0469],
        [ 0.0000,  6.6250,  5.9062,  1.5078,  7.2812,  6.1562,  8.4375,  7.7188,  8.6250,  5.4062,  7.6562,  4.9688,  7.0312,  9.1875,  8.8750],
        [ 0.0000,  0.3320, -1.1484, -7.1562, -0.7383, -0.7812,  2.1875,  0.6523,  2.7812, -1.6641,  1.0547, -2.9688, -1.2656,  3.2656,  2.3281],
        [ 0.0000,  5.8125,  3.8594, -1.0234,  4.6875,  4.1250,  6.8750,  5.0938,  6.8125,  3.4531,  5.8438,  2.8594,  4.0625,  7.2500,  7.0312],
        [ 0.0000, 10.9375,  9.4375,  5.3125, 10.0000,  9.2500, 12.0000, 10.9375, 12.4375,  8.6875, 10.9375,  8.2500, 10.0000, 12.8750, 11.6250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3981],
        [0.2972],
        [0.2453],
        [0.2743],
        [0.2160],
        [0.1594],
        [0.1146],
        [0.1483],
        [0.1837],
        [0.0994],
        [0.1043],
        [0.1179],
        [0.1086],
        [0.0411]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(!:0.1299 great:0.0962 and:0.1553 and:0.1187,:0.1289,:0.5742 a:0.0879iced:0.7148)
iced
------
		( great:0.0962 and:0.1553 and:0.1187,:0.1289,:0.5742 a:0.0879iced:0.7148,:0.1523)
, and they are also used to make a delicious snack.
The best
@ 4050 train 4.3028 , allloss: 4.3030, dt: 1704.93ms, fracRes: 0.7053, norm(attn): 0.1885, norm(output): 0.9384, norm(x): 0.7647, norm(y): 1.0037, norm:0.7340, tok/sec: 76878.14, flops:80.69, batch-reuse:1
@ 4051 train 4.2724 , allloss: 4.2724, dt: 1291.09ms, fracRes: 0.7055, norm(attn): 0.1895, norm(output): 0.9382, norm(x): 0.7634, norm(y): 1.0036, norm:0.6089, tok/sec: 101520.51, flops:106.56, batch-reuse:1
@ 4052 train 4.2427 , allloss: 4.2428, dt: 1293.95ms, fracRes: 0.7056, norm(attn): 0.1904, norm(output): 0.9382, norm(x): 0.7635, norm(y): 1.0036, norm:0.6814, tok/sec: 101295.78, flops:106.32, batch-reuse:1
@ 4053 train 4.2286 , allloss: 4.2287, dt: 1300.30ms, fracRes: 0.7056, norm(attn): 0.1885, norm(output): 0.9382, norm(x): 0.7641, norm(y): 1.0037, norm:0.5722, tok/sec: 100801.25, flops:105.80, batch-reuse:1
@ 4054 train 4.3674 , allloss: 4.3675, dt: 1295.07ms, fracRes: 0.7056, norm(attn): 0.1875, norm(output): 0.9386, norm(x): 0.7647, norm(y): 1.0038, norm:0.6650, tok/sec: 101208.43, flops:106.23, batch-reuse:1
@ 4055 train 4.4157 , allloss: 4.4161, dt: 1286.70ms, fracRes: 0.7054, norm(attn): 0.1875, norm(output): 0.9384, norm(x): 0.7649, norm(y): 1.0036, norm:0.5956, tok/sec: 101867.17, flops:106.92, batch-reuse:1
@ 4056 train 4.4203 , allloss: 4.4205, dt: 1299.09ms, fracRes: 0.7054, norm(attn): 0.1865, norm(output): 0.9384, norm(x): 0.7648, norm(y): 1.0034, norm:0.6581, tok/sec: 100894.99, flops:105.90, batch-reuse:1
@ 4057 train 4.2312 , allloss: 4.2319, dt: 1307.74ms, fracRes: 0.7054, norm(attn): 0.1895, norm(output): 0.9384, norm(x): 0.7652, norm(y): 1.0035, norm:0.6882, tok/sec: 100227.71, flops:105.20, batch-reuse:1
@ 4058 train 4.4089 , allloss: 4.4089, dt: 1290.36ms, fracRes: 0.7054, norm(attn): 0.1885, norm(output): 0.9384, norm(x): 0.7652, norm(y): 1.0036, norm:0.6136, tok/sec: 101577.48, flops:106.62, batch-reuse:1
@ 4059 train 4.2608 , allloss: 4.2609, dt: 1309.62ms, fracRes: 0.7053, norm(attn): 0.1875, norm(output): 0.9383, norm(x): 0.7647, norm(y): 1.0038, norm:0.6134, tok/sec: 100083.78, flops:105.05, batch-reuse:1
@ 4060 train 4.2284 , allloss: 4.2285, dt: 1329.95ms, fracRes: 0.7053, norm(attn): 0.1875, norm(output): 0.9381, norm(x): 0.7644, norm(y): 1.0038, norm:0.6003, tok/sec: 98553.81, flops:103.45, batch-reuse:1
@ 4061 train 4.3593 , allloss: 4.3597, dt: 1342.10ms, fracRes: 0.7054, norm(attn): 0.1885, norm(output): 0.9381, norm(x): 0.7652, norm(y): 1.0038, norm:0.6029, tok/sec: 97661.57, flops:102.51, batch-reuse:1
@ 4062 train 4.3225 , allloss: 4.3294, dt: 1309.47ms, fracRes: 0.7054, norm(attn): 0.1885, norm(output): 0.9385, norm(x): 0.7661, norm(y): 1.0037, norm:0.6484, tok/sec: 100095.72, flops:105.06, batch-reuse:1
@ 4063 train 4.2515 , allloss: 4.2518, dt: 1327.03ms, fracRes: 0.7054, norm(attn): 0.1885, norm(output): 0.9384, norm(x): 0.7659, norm(y): 1.0036, norm:0.6636, tok/sec: 98770.75, flops:103.67, batch-reuse:1
@ 4064 train 4.3207 , allloss: 4.3209, dt: 1302.80ms, fracRes: 0.7056, norm(attn): 0.1875, norm(output): 0.9383, norm(x): 0.7648, norm(y): 1.0035, norm:0.6215, tok/sec: 100607.71, flops:105.60, batch-reuse:1
@ 4065 train 4.3190 , allloss: 4.3192, dt: 1299.67ms, fracRes: 0.7057, norm(attn): 0.1865, norm(output): 0.9385, norm(x): 0.7654, norm(y): 1.0037, norm:0.5194, tok/sec: 100850.03, flops:105.86, batch-reuse:1
@ 4066 train 4.2107 , allloss: 4.2108, dt: 1312.92ms, fracRes: 0.7056, norm(attn): 0.1875, norm(output): 0.9384, norm(x): 0.7659, norm(y): 1.0038, norm:0.7160, tok/sec: 99832.12, flops:104.79, batch-reuse:1
@ 4067 train 4.3729 , allloss: 4.3731, dt: 1329.16ms, fracRes: 0.7056, norm(attn): 0.1885, norm(output): 0.9381, norm(x): 0.7649, norm(y): 1.0040, norm:0.7096, tok/sec: 98612.54, flops:103.51, batch-reuse:1
@ 4068 train 4.2544 , allloss: 4.2551, dt: 1331.40ms, fracRes: 0.7057, norm(attn): 0.1885, norm(output): 0.9379, norm(x): 0.7639, norm(y): 1.0038, norm:0.6882, tok/sec: 98447.04, flops:103.33, batch-reuse:1
@ 4069 train 4.3894 , allloss: 4.3908, dt: 1341.36ms, fracRes: 0.7057, norm(attn): 0.1885, norm(output): 0.9381, norm(x): 0.7635, norm(y): 1.0036, norm:0.6678, tok/sec: 97715.67, flops:102.57, batch-reuse:1
@ 4070 train 4.3573 , allloss: 4.3575, dt: 1332.44ms, fracRes: 0.7055, norm(attn): 0.1904, norm(output): 0.9384, norm(x): 0.7648, norm(y): 1.0035, norm:0.5961, tok/sec: 98370.21, flops:103.25, batch-reuse:1
@ 4071 train 4.2683 , allloss: 4.2684, dt: 1288.25ms, fracRes: 0.7051, norm(attn): 0.1904, norm(output): 0.9387, norm(x): 0.7662, norm(y): 1.0036, norm:0.6909, tok/sec: 101744.25, flops:106.79, batch-reuse:1
@ 4072 train 4.2802 , allloss: 4.2803, dt: 1299.04ms, fracRes: 0.7055, norm(attn): 0.1885, norm(output): 0.9384, norm(x): 0.7652, norm(y): 1.0035, norm:0.6246, tok/sec: 100899.29, flops:105.91, batch-reuse:1
@ 4073 train 4.2824 , allloss: 4.2825, dt: 1297.62ms, fracRes: 0.7056, norm(attn): 0.1885, norm(output): 0.9382, norm(x): 0.7646, norm(y): 1.0037, norm:0.6379, tok/sec: 101009.46, flops:106.02, batch-reuse:1
@ 4074 train 4.3703 , allloss: 4.3706, dt: 1282.81ms, fracRes: 0.7055, norm(attn): 0.1885, norm(output): 0.9383, norm(x): 0.7646, norm(y): 1.0037, norm:0.6835, tok/sec: 102175.79, flops:107.25, batch-reuse:1
@ 4075 train 4.2692 , allloss: 4.2693, dt: 1299.56ms, fracRes: 0.7055, norm(attn): 0.1885, norm(output): 0.9384, norm(x): 0.7643, norm(y): 1.0036, norm:0.6216, tok/sec: 100858.82, flops:105.86, batch-reuse:1
@ 4076 train 4.5133 , allloss: 4.5135, dt: 1313.59ms, fracRes: 0.7059, norm(attn): 0.1885, norm(output): 0.9383, norm(x): 0.7639, norm(y): 1.0036, norm:0.7668, tok/sec: 99781.75, flops:104.73, batch-reuse:1
@ 4077 train 4.4699 , allloss: 4.4709, dt: 1301.76ms, fracRes: 0.7058, norm(attn): 0.1885, norm(output): 0.9382, norm(x): 0.7636, norm(y): 1.0037, norm:0.8382, tok/sec: 100688.50, flops:105.69, batch-reuse:1
@ 4078 train 4.4478 , allloss: 4.4497, dt: 1292.80ms, fracRes: 0.7057, norm(attn): 0.1875, norm(output): 0.9385, norm(x): 0.7644, norm(y): 1.0037, norm:0.7845, tok/sec: 101386.24, flops:106.42, batch-reuse:1
@ 4079 train 4.4667 , allloss: 4.4669, dt: 1304.80ms, fracRes: 0.7057, norm(attn): 0.1875, norm(output): 0.9385, norm(x): 0.7651, norm(y): 1.0035, norm:0.6303, tok/sec: 100453.91, flops:105.44, batch-reuse:1
@ 4080 train 4.6464 , allloss: 4.6468, dt: 1323.85ms, fracRes: 0.7059, norm(attn): 0.1855, norm(output): 0.9388, norm(x): 0.7657, norm(y): 1.0036, norm:0.6777, tok/sec: 99008.08, flops:103.92, batch-reuse:1
@ 4081 train 4.5129 , allloss: 4.5132, dt: 1315.91ms, fracRes: 0.7057, norm(attn): 0.1885, norm(output): 0.9385, norm(x): 0.7657, norm(y): 1.0038, norm:0.7265, tok/sec: 99605.23, flops:104.55, batch-reuse:1
@ 4082 train 4.4630 , allloss: 4.4636, dt: 1298.33ms, fracRes: 0.7057, norm(attn): 0.1875, norm(output): 0.9383, norm(x): 0.7650, norm(y): 1.0038, norm:0.5758, tok/sec: 100954.04, flops:105.96, batch-reuse:1
@ 4083 train 4.5712 , allloss: 4.5713, dt: 1322.51ms, fracRes: 0.7058, norm(attn): 0.1865, norm(output): 0.9382, norm(x): 0.7646, norm(y): 1.0038, norm:0.6709, tok/sec: 99108.62, flops:104.03, batch-reuse:1
@ 4084 train 4.5346 , allloss: 4.5349, dt: 1298.41ms, fracRes: 0.7053, norm(attn): 0.1855, norm(output): 0.9387, norm(x): 0.7660, norm(y): 1.0039, norm:0.6043, tok/sec: 100947.70, flops:105.96, batch-reuse:1
@ 4085 train 4.3981 , allloss: 4.3982, dt: 1307.92ms, fracRes: 0.7055, norm(attn): 0.1875, norm(output): 0.9386, norm(x): 0.7655, norm(y): 1.0038, norm:0.5665, tok/sec: 100213.92, flops:105.19, batch-reuse:1
@ 4086 train 4.4415 , allloss: 4.4417, dt: 1284.93ms, fracRes: 0.7056, norm(attn): 0.1875, norm(output): 0.9385, norm(x): 0.7649, norm(y): 1.0037, norm:0.5854, tok/sec: 102007.25, flops:107.07, batch-reuse:1
@ 4087 train 4.5042 , allloss: 4.5045, dt: 1304.93ms, fracRes: 0.7060, norm(attn): 0.1865, norm(output): 0.9384, norm(x): 0.7636, norm(y): 1.0037, norm:0.6855, tok/sec: 100443.47, flops:105.43, batch-reuse:1
@ 4088 train 4.4424 , allloss: 4.4426, dt: 1313.70ms, fracRes: 0.7057, norm(attn): 0.1875, norm(output): 0.9386, norm(x): 0.7650, norm(y): 1.0036, norm:0.6429, tok/sec: 99772.80, flops:104.72, batch-reuse:1
@ 4089 train 4.4514 , allloss: 4.4517, dt: 1332.27ms, fracRes: 0.7058, norm(attn): 0.1875, norm(output): 0.9383, norm(x): 0.7651, norm(y): 1.0035, norm:0.6159, tok/sec: 98382.26, flops:103.27, batch-reuse:1
@ 4090 train 4.5472 , allloss: 4.5476, dt: 1293.45ms, fracRes: 0.7059, norm(attn): 0.1875, norm(output): 0.9385, norm(x): 0.7646, norm(y): 1.0034, norm:0.5576, tok/sec: 101335.50, flops:106.36, batch-reuse:1
@ 4091 train 4.5292 , allloss: 4.5296, dt: 1284.14ms, fracRes: 0.7057, norm(attn): 0.1885, norm(output): 0.9387, norm(x): 0.7655, norm(y): 1.0036, norm:0.5473, tok/sec: 102070.22, flops:107.14, batch-reuse:1
@ 4092 train 4.4977 , allloss: 4.4984, dt: 1284.80ms, fracRes: 0.7056, norm(attn): 0.1885, norm(output): 0.9386, norm(x): 0.7660, norm(y): 1.0037, norm:0.5818, tok/sec: 102017.73, flops:107.08, batch-reuse:1
@ 4093 train 4.6015 , allloss: 4.6019, dt: 1296.38ms, fracRes: 0.7056, norm(attn): 0.1875, norm(output): 0.9384, norm(x): 0.7654, norm(y): 1.0037, norm:0.6052, tok/sec: 101106.19, flops:106.12, batch-reuse:1
@ 4094 train 4.4618 , allloss: 4.4619, dt: 1286.65ms, fracRes: 0.7056, norm(attn): 0.1865, norm(output): 0.9384, norm(x): 0.7652, norm(y): 1.0037, norm:0.7153, tok/sec: 101870.47, flops:106.93, batch-reuse:1
@ 4095 train 4.4315 , allloss: 4.4315, dt: 1298.32ms, fracRes: 0.7056, norm(attn): 0.1865, norm(output): 0.9384, norm(x): 0.7646, norm(y): 1.0037, norm:0.7606, tok/sec: 100955.06, flops:105.97, batch-reuse:1
@ 4096 train 4.5440 , allloss: 4.5443, dt: 1303.40ms, fracRes: 0.7060, norm(attn): 0.1865, norm(output): 0.9383, norm(x): 0.7636, norm(y): 1.0036, norm:0.6416, tok/sec: 100561.81, flops:105.55, batch-reuse:1
@ 4097 train 4.4807 , allloss: 4.4809, dt: 1304.68ms, fracRes: 0.7059, norm(attn): 0.1875, norm(output): 0.9383, norm(x): 0.7638, norm(y): 1.0035, norm:0.5887, tok/sec: 100463.12, flops:105.45, batch-reuse:1
@ 4098 train 4.3553 , allloss: 4.3554, dt: 1314.68ms, fracRes: 0.7057, norm(attn): 0.1875, norm(output): 0.9384, norm(x): 0.7647, norm(y): 1.0036, norm:0.7595, tok/sec: 99698.56, flops:104.65, batch-reuse:1
@ 4099 train 4.4963 , allloss: 4.4964, dt: 1337.78ms, fracRes: 0.7055, norm(attn): 0.1875, norm(output): 0.9385, norm(x): 0.7657, norm(y): 1.0035, norm:0.6249, tok/sec: 97977.21, flops:102.84, batch-reuse:1
@ 4100 train 4.5515 , allloss: 4.5518, dt: 1314.79ms, fracRes: 0.7058, norm(attn): 0.1875, norm(output): 0.9385, norm(x): 0.7648, norm(y): 1.0036, norm:0.6775, tok/sec: 99690.61, flops:104.64, batch-reuse:1
@ 4101 train 4.5893 , allloss: 4.5894, dt: 1306.13ms, fracRes: 0.7060, norm(attn): 0.1875, norm(output): 0.9387, norm(x): 0.7645, norm(y): 1.0037, norm:0.9185, tok/sec: 100351.13, flops:105.33, batch-reuse:1
@ 4102 train 4.4653 , allloss: 4.4656, dt: 1334.84ms, fracRes: 0.7058, norm(attn): 0.1875, norm(output): 0.9385, norm(x): 0.7649, norm(y): 1.0036, norm:0.7273, tok/sec: 98192.72, flops:103.07, batch-reuse:1
@ 4103 train 4.5126 , allloss: 4.5127, dt: 1329.31ms, fracRes: 0.7058, norm(attn): 0.1865, norm(output): 0.9385, norm(x): 0.7654, norm(y): 1.0035, norm:0.6500, tok/sec: 98601.20, flops:103.49, batch-reuse:1
@ 4104 train 4.4269 , allloss: 4.4270, dt: 1311.15ms, fracRes: 0.7055, norm(attn): 0.1865, norm(output): 0.9387, norm(x): 0.7659, norm(y): 1.0035, norm:0.5575, tok/sec: 99967.13, flops:104.93, batch-reuse:1
@ 4105 train 4.4956 , allloss: 4.4961, dt: 1335.99ms, fracRes: 0.7056, norm(attn): 0.1836, norm(output): 0.9384, norm(x): 0.7658, norm(y): 1.0037, norm:0.8133, tok/sec: 98108.29, flops:102.98, batch-reuse:1
@ 4106 train 4.5855 , allloss: 4.5857, dt: 1312.96ms, fracRes: 0.7059, norm(attn): 0.1836, norm(output): 0.9384, norm(x): 0.7652, norm(y): 1.0035, norm:0.6419, tok/sec: 99829.18, flops:104.78, batch-reuse:1
@ 4107 train 4.3734 , allloss: 4.3736, dt: 1313.63ms, fracRes: 0.7061, norm(attn): 0.1865, norm(output): 0.9383, norm(x): 0.7643, norm(y): 1.0034, norm:0.6174, tok/sec: 99778.69, flops:104.73, batch-reuse:1
@ 4108 train 4.4739 , allloss: 4.4740, dt: 1310.13ms, fracRes: 0.7059, norm(attn): 0.1855, norm(output): 0.9386, norm(x): 0.7651, norm(y): 1.0036, norm:0.6124, tok/sec: 100045.12, flops:105.01, batch-reuse:1
@ 4109 train 4.5640 , allloss: 4.5641, dt: 1305.44ms, fracRes: 0.7058, norm(attn): 0.1865, norm(output): 0.9385, norm(x): 0.7651, norm(y): 1.0035, norm:0.6484, tok/sec: 100404.19, flops:105.39, batch-reuse:1
@ 4110 train 4.4519 , allloss: 4.4520, dt: 1292.57ms, fracRes: 0.7057, norm(attn): 0.1865, norm(output): 0.9385, norm(x): 0.7652, norm(y): 1.0035, norm:0.6378, tok/sec: 101403.93, flops:106.44, batch-reuse:1
@ 4111 train 4.4684 , allloss: 4.4686, dt: 1315.50ms, fracRes: 0.7057, norm(attn): 0.1875, norm(output): 0.9385, norm(x): 0.7651, norm(y): 1.0035, norm:0.6225, tok/sec: 99636.96, flops:104.58, batch-reuse:1
@ 4112 train 4.4734 , allloss: 4.4735, dt: 1302.54ms, fracRes: 0.7059, norm(attn): 0.1875, norm(output): 0.9384, norm(x): 0.7650, norm(y): 1.0035, norm:0.6048, tok/sec: 100627.96, flops:105.62, batch-reuse:1
@ 4113 train 4.4058 , allloss: 4.4059, dt: 1275.34ms, fracRes: 0.7058, norm(attn): 0.1855, norm(output): 0.9386, norm(x): 0.7653, norm(y): 1.0036, norm:0.5940, tok/sec: 102774.31, flops:107.88, batch-reuse:1
@ 4114 train 4.5746 , allloss: 4.5748, dt: 1294.31ms, fracRes: 0.7062, norm(attn): 0.1855, norm(output): 0.9383, norm(x): 0.7642, norm(y): 1.0038, norm:0.6905, tok/sec: 101267.76, flops:106.29, batch-reuse:1
@ 4115 train 4.3867 , allloss: 4.3868, dt: 1278.15ms, fracRes: 0.7060, norm(attn): 0.1875, norm(output): 0.9383, norm(x): 0.7648, norm(y): 1.0039, norm:0.6701, tok/sec: 102548.59, flops:107.64, batch-reuse:1
@ 4116 train 4.5024 , allloss: 4.5025, dt: 1290.10ms, fracRes: 0.7058, norm(attn): 0.1865, norm(output): 0.9386, norm(x): 0.7655, norm(y): 1.0039, norm:0.6086, tok/sec: 101598.15, flops:106.64, batch-reuse:1
@ 4117 train 4.3874 , allloss: 4.3881, dt: 1325.37ms, fracRes: 0.7057, norm(attn): 0.1875, norm(output): 0.9384, norm(x): 0.7652, norm(y): 1.0038, norm:0.6484, tok/sec: 98894.29, flops:103.80, batch-reuse:1
@ 4118 train 4.5669 , allloss: 4.5670, dt: 1355.38ms, fracRes: 0.7059, norm(attn): 0.1865, norm(output): 0.9385, norm(x): 0.7646, norm(y): 1.0036, norm:0.6823, tok/sec: 96704.83, flops:101.50, batch-reuse:1
@ 4119 train 4.5416 , allloss: 4.5417, dt: 1292.13ms, fracRes: 0.7056, norm(attn): 0.1846, norm(output): 0.9384, norm(x): 0.7656, norm(y): 1.0038, norm:0.6614, tok/sec: 101438.43, flops:106.47, batch-reuse:1
@ 4120 train 4.4531 , allloss: 4.4531, dt: 1287.95ms, fracRes: 0.7054, norm(attn): 0.1865, norm(output): 0.9387, norm(x): 0.7665, norm(y): 1.0039, norm:0.7426, tok/sec: 101767.98, flops:106.82, batch-reuse:1
@ 4121 train 4.4101 , allloss: 4.4102, dt: 1320.56ms, fracRes: 0.7057, norm(attn): 0.1865, norm(output): 0.9385, norm(x): 0.7658, norm(y): 1.0039, norm:0.6650, tok/sec: 99254.50, flops:104.18, batch-reuse:1
@ 4122 train 4.5441 , allloss: 4.5442, dt: 1303.15ms, fracRes: 0.7060, norm(attn): 0.1865, norm(output): 0.9384, norm(x): 0.7654, norm(y): 1.0035, norm:0.7485, tok/sec: 100580.72, flops:105.57, batch-reuse:1
@ 4123 train 4.4978 , allloss: 4.4978, dt: 1314.63ms, fracRes: 0.7059, norm(attn): 0.1865, norm(output): 0.9384, norm(x): 0.7658, norm(y): 1.0034, norm:0.6528, tok/sec: 99702.77, flops:104.65, batch-reuse:1
@ 4124 train 4.4543 , allloss: 4.4544, dt: 1297.20ms, fracRes: 0.7060, norm(attn): 0.1875, norm(output): 0.9384, norm(x): 0.7655, norm(y): 1.0036, norm:0.6546, tok/sec: 101042.30, flops:106.06, batch-reuse:1
@ 4125 train 4.4354 , allloss: 4.4355, dt: 1286.71ms, fracRes: 0.7061, norm(attn): 0.1875, norm(output): 0.9385, norm(x): 0.7649, norm(y): 1.0036, norm:0.6892, tok/sec: 101865.96, flops:106.92, batch-reuse:1
@ 4126 train 4.3100 , allloss: 4.3101, dt: 1284.84ms, fracRes: 0.7060, norm(attn): 0.1875, norm(output): 0.9384, norm(x): 0.7646, norm(y): 1.0038, norm:0.5815, tok/sec: 102014.36, flops:107.08, batch-reuse:1
@ 4127 train 4.4943 , allloss: 4.4944, dt: 1300.11ms, fracRes: 0.7058, norm(attn): 0.1865, norm(output): 0.9386, norm(x): 0.7654, norm(y): 1.0038, norm:0.6577, tok/sec: 100816.47, flops:105.82, batch-reuse:1
@ 4128 train 4.3934 , allloss: 4.3934, dt: 1293.77ms, fracRes: 0.7055, norm(attn): 0.1875, norm(output): 0.9390, norm(x): 0.7667, norm(y): 1.0036, norm:0.6165, tok/sec: 101309.93, flops:106.34, batch-reuse:1
@ 4129 train 4.4231 , allloss: 4.4232, dt: 1328.77ms, fracRes: 0.7056, norm(attn): 0.1875, norm(output): 0.9387, norm(x): 0.7659, norm(y): 1.0033, norm:0.5328, tok/sec: 98641.70, flops:103.54, batch-reuse:1
@ 4130 train 4.5773 , allloss: 4.5775, dt: 1303.41ms, fracRes: 0.7058, norm(attn): 0.1865, norm(output): 0.9385, norm(x): 0.7649, norm(y): 1.0033, norm:0.5464, tok/sec: 100560.81, flops:105.55, batch-reuse:1
@ 4131 train 4.3773 , allloss: 4.3778, dt: 1286.68ms, fracRes: 0.7055, norm(attn): 0.1875, norm(output): 0.9385, norm(x): 0.7657, norm(y): 1.0034, norm:0.5309, tok/sec: 101868.05, flops:106.92, batch-reuse:1
@ 4132 train 4.4106 , allloss: 4.4106, dt: 1319.74ms, fracRes: 0.7055, norm(attn): 0.1875, norm(output): 0.9386, norm(x): 0.7665, norm(y): 1.0036, norm:0.6164, tok/sec: 99316.26, flops:104.25, batch-reuse:1
@ 4133 train 4.4365 , allloss: 4.4367, dt: 1308.54ms, fracRes: 0.7057, norm(attn): 0.1875, norm(output): 0.9386, norm(x): 0.7659, norm(y): 1.0037, norm:0.6156, tok/sec: 100166.22, flops:105.14, batch-reuse:1
@ 4134 train 4.5289 , allloss: 4.5289, dt: 1313.29ms, fracRes: 0.7057, norm(attn): 0.1865, norm(output): 0.9386, norm(x): 0.7658, norm(y): 1.0036, norm:0.6394, tok/sec: 99804.48, flops:104.76, batch-reuse:1
@ 4135 train 4.4443 , allloss: 4.4444, dt: 1342.17ms, fracRes: 0.7056, norm(attn): 0.1865, norm(output): 0.9387, norm(x): 0.7660, norm(y): 1.0037, norm:0.5584, tok/sec: 97656.92, flops:102.50, batch-reuse:1
@ 4136 train 4.4958 , allloss: 4.4958, dt: 1324.83ms, fracRes: 0.7058, norm(attn): 0.1865, norm(output): 0.9386, norm(x): 0.7663, norm(y): 1.0037, norm:0.8467, tok/sec: 98935.19, flops:103.85, batch-reuse:1
@ 4137 train 4.4347 , allloss: 4.4347, dt: 1329.46ms, fracRes: 0.7057, norm(attn): 0.1865, norm(output): 0.9389, norm(x): 0.7667, norm(y): 1.0035, norm:0.7404, tok/sec: 98590.31, flops:103.48, batch-reuse:1
@ 4138 train 4.5111 , allloss: 4.5111, dt: 1285.15ms, fracRes: 0.7060, norm(attn): 0.1855, norm(output): 0.9387, norm(x): 0.7658, norm(y): 1.0035, norm:0.5828, tok/sec: 101989.72, flops:107.05, batch-reuse:1
@ 4139 train 4.4529 , allloss: 4.4530, dt: 1303.30ms, fracRes: 0.7060, norm(attn): 0.1836, norm(output): 0.9386, norm(x): 0.7655, norm(y): 1.0037, norm:0.5950, tok/sec: 100569.11, flops:105.56, batch-reuse:1
@ 4140 train 4.6059 , allloss: 4.6059, dt: 1292.59ms, fracRes: 0.7060, norm(attn): 0.1846, norm(output): 0.9388, norm(x): 0.7659, norm(y): 1.0035, norm:0.6308, tok/sec: 101402.51, flops:106.44, batch-reuse:1
@ 4141 train 4.4558 , allloss: 4.4562, dt: 1294.95ms, fracRes: 0.7056, norm(attn): 0.1855, norm(output): 0.9389, norm(x): 0.7674, norm(y): 1.0036, norm:0.6653, tok/sec: 101217.58, flops:106.24, batch-reuse:1
@ 4142 train 4.4134 , allloss: 4.4135, dt: 1312.28ms, fracRes: 0.7057, norm(attn): 0.1865, norm(output): 0.9387, norm(x): 0.7666, norm(y): 1.0037, norm:0.5968, tok/sec: 99880.75, flops:104.84, batch-reuse:1
@ 4143 train 4.4716 , allloss: 4.4717, dt: 1339.78ms, fracRes: 0.7060, norm(attn): 0.1875, norm(output): 0.9386, norm(x): 0.7652, norm(y): 1.0037, norm:0.5606, tok/sec: 97830.88, flops:102.69, batch-reuse:1
@ 4144 train 4.4611 , allloss: 4.4612, dt: 1292.49ms, fracRes: 0.7062, norm(attn): 0.1875, norm(output): 0.9386, norm(x): 0.7649, norm(y): 1.0037, norm:0.5415, tok/sec: 101410.10, flops:106.44, batch-reuse:1
@ 4145 train 4.3854 , allloss: 4.3855, dt: 1312.59ms, fracRes: 0.7058, norm(attn): 0.1865, norm(output): 0.9385, norm(x): 0.7660, norm(y): 1.0037, norm:0.6395, tok/sec: 99857.83, flops:104.81, batch-reuse:1
@ 4146 train 4.4313 , allloss: 4.4314, dt: 1316.96ms, fracRes: 0.7056, norm(attn): 0.1875, norm(output): 0.9385, norm(x): 0.7663, norm(y): 1.0037, norm:0.5993, tok/sec: 99526.44, flops:104.47, batch-reuse:1
@ 4147 train 4.6664 , allloss: 4.6665, dt: 1334.21ms, fracRes: 0.7058, norm(attn): 0.1865, norm(output): 0.9388, norm(x): 0.7657, norm(y): 1.0037, norm:0.7604, tok/sec: 98239.50, flops:103.12, batch-reuse:1
@ 4148 train 4.4763 , allloss: 4.4769, dt: 1333.23ms, fracRes: 0.7060, norm(attn): 0.1865, norm(output): 0.9386, norm(x): 0.7644, norm(y): 1.0038, norm:0.7202, tok/sec: 98311.30, flops:103.19, batch-reuse:1
@ 4149 train 4.5008 , allloss: 4.5023, dt: 1306.46ms, fracRes: 0.7059, norm(attn): 0.1865, norm(output): 0.9387, norm(x): 0.7652, norm(y): 1.0039, norm:0.6419, tok/sec: 100326.35, flops:105.31, batch-reuse:1
@ 4150 train 4.3895 , allloss: 4.3896, dt: 1313.80ms, fracRes: 0.7058, norm(attn): 0.1865, norm(output): 0.9388, norm(x): 0.7664, norm(y): 1.0039, norm:0.7141, tok/sec: 99765.63, flops:104.72, batch-reuse:1
@ 4151 train 4.4301 , allloss: 4.4302, dt: 1320.83ms, fracRes: 0.7059, norm(attn): 0.1875, norm(output): 0.9387, norm(x): 0.7661, norm(y): 1.0039, norm:0.8195, tok/sec: 99234.76, flops:104.16, batch-reuse:1
@ 4152 train 4.3844 , allloss: 4.3847, dt: 1325.66ms, fracRes: 0.7061, norm(attn): 0.1875, norm(output): 0.9384, norm(x): 0.7648, norm(y): 1.0035, norm:0.6377, tok/sec: 98873.32, flops:103.78, batch-reuse:1
@ 4153 train 4.3635 , allloss: 4.3636, dt: 1282.63ms, fracRes: 0.7061, norm(attn): 0.1875, norm(output): 0.9385, norm(x): 0.7651, norm(y): 1.0034, norm:0.6746, tok/sec: 102189.81, flops:107.26, batch-reuse:1
@ 4154 train 4.4559 , allloss: 4.4559, dt: 1298.15ms, fracRes: 0.7059, norm(attn): 0.1875, norm(output): 0.9387, norm(x): 0.7659, norm(y): 1.0038, norm:0.7168, tok/sec: 100968.18, flops:105.98, batch-reuse:1
@ 4155 train 4.4408 , allloss: 4.4409, dt: 1323.62ms, fracRes: 0.7061, norm(attn): 0.1875, norm(output): 0.9388, norm(x): 0.7661, norm(y): 1.0038, norm:0.7845, tok/sec: 99025.66, flops:103.94, batch-reuse:1
@ 4156 train 4.4165 , allloss: 4.4166, dt: 1323.97ms, fracRes: 0.7060, norm(attn): 0.1875, norm(output): 0.9388, norm(x): 0.7665, norm(y): 1.0037, norm:0.6859, tok/sec: 98999.11, flops:103.91, batch-reuse:1
@ 4157 train 4.4364 , allloss: 4.4365, dt: 1315.26ms, fracRes: 0.7062, norm(attn): 0.1865, norm(output): 0.9387, norm(x): 0.7658, norm(y): 1.0036, norm:0.5770, tok/sec: 99654.93, flops:104.60, batch-reuse:1
@ 4158 train 4.3555 , allloss: 4.3557, dt: 1310.22ms, fracRes: 0.7064, norm(attn): 0.1875, norm(output): 0.9386, norm(x): 0.7655, norm(y): 1.0038, norm:0.6549, tok/sec: 100038.47, flops:105.00, batch-reuse:1
@ 4159 train 4.4750 , allloss: 4.4753, dt: 1278.45ms, fracRes: 0.7065, norm(attn): 0.1865, norm(output): 0.9387, norm(x): 0.7651, norm(y): 1.0037, norm:0.7617, tok/sec: 102524.05, flops:107.61, batch-reuse:1
@ 4160 train 4.4809 , allloss: 4.4811, dt: 1298.90ms, fracRes: 0.7062, norm(attn): 0.1865, norm(output): 0.9385, norm(x): 0.7651, norm(y): 1.0037, norm:0.6527, tok/sec: 100910.38, flops:105.92, batch-reuse:1
@ 4161 train 4.3905 , allloss: 4.3905, dt: 1304.88ms, fracRes: 0.7059, norm(attn): 0.1846, norm(output): 0.9387, norm(x): 0.7662, norm(y): 1.0036, norm:0.6305, tok/sec: 100447.39, flops:105.43, batch-reuse:1
@ 4162 train 4.4001 , allloss: 4.4001, dt: 1286.86ms, fracRes: 0.7059, norm(attn): 0.1846, norm(output): 0.9390, norm(x): 0.7669, norm(y): 1.0037, norm:0.7389, tok/sec: 101853.77, flops:106.91, batch-reuse:1
@ 4163 train 4.3579 , allloss: 4.3583, dt: 1312.26ms, fracRes: 0.7060, norm(attn): 0.1855, norm(output): 0.9388, norm(x): 0.7664, norm(y): 1.0037, norm:0.6288, tok/sec: 99882.92, flops:104.84, batch-reuse:1
@ 4164 train 4.4776 , allloss: 4.4783, dt: 1288.09ms, fracRes: 0.7062, norm(attn): 0.1875, norm(output): 0.9388, norm(x): 0.7653, norm(y): 1.0035, norm:0.7421, tok/sec: 101757.05, flops:106.81, batch-reuse:1
@ 4165 train 4.4338 , allloss: 4.4339, dt: 1294.00ms, fracRes: 0.7062, norm(attn): 0.1865, norm(output): 0.9390, norm(x): 0.7648, norm(y): 1.0035, norm:0.7787, tok/sec: 101292.07, flops:106.32, batch-reuse:1
@ 4166 train 4.4300 , allloss: 4.4301, dt: 1281.57ms, fracRes: 0.7062, norm(attn): 0.1865, norm(output): 0.9388, norm(x): 0.7653, norm(y): 1.0037, norm:0.7008, tok/sec: 102274.88, flops:107.35, batch-reuse:1
@ 4167 train 4.3574 , allloss: 4.3577, dt: 1289.07ms, fracRes: 0.7061, norm(attn): 0.1865, norm(output): 0.9389, norm(x): 0.7657, norm(y): 1.0034, norm:0.6324, tok/sec: 101679.44, flops:106.73, batch-reuse:1
@ 4168 train 4.3414 , allloss: 4.3415, dt: 1332.04ms, fracRes: 0.7061, norm(attn): 0.1865, norm(output): 0.9389, norm(x): 0.7660, norm(y): 1.0034, norm:0.6184, tok/sec: 98399.51, flops:103.28, batch-reuse:1
@ 4169 train 4.4056 , allloss: 4.4061, dt: 1341.03ms, fracRes: 0.7060, norm(attn): 0.1855, norm(output): 0.9387, norm(x): 0.7661, norm(y): 1.0036, norm:0.6839, tok/sec: 97739.51, flops:102.59, batch-reuse:1
@ 4170 train 4.3725 , allloss: 4.3729, dt: 1309.25ms, fracRes: 0.7058, norm(attn): 0.1855, norm(output): 0.9389, norm(x): 0.7667, norm(y): 1.0037, norm:0.6628, tok/sec: 100112.12, flops:105.08, batch-reuse:1
@ 4171 train 4.3305 , allloss: 4.3306, dt: 1290.80ms, fracRes: 0.7059, norm(attn): 0.1865, norm(output): 0.9389, norm(x): 0.7665, norm(y): 1.0037, norm:0.5869, tok/sec: 101543.00, flops:106.58, batch-reuse:1
@ 4172 train 4.3599 , allloss: 4.3600, dt: 1275.69ms, fracRes: 0.7060, norm(attn): 0.1846, norm(output): 0.9388, norm(x): 0.7665, norm(y): 1.0035, norm:0.5765, tok/sec: 102746.02, flops:107.85, batch-reuse:1
@ 4173 train 4.3059 , allloss: 4.3060, dt: 1290.17ms, fracRes: 0.7061, norm(attn): 0.1855, norm(output): 0.9388, norm(x): 0.7657, norm(y): 1.0035, norm:0.5603, tok/sec: 101592.97, flops:106.64, batch-reuse:1
@ 4174 train 4.3607 , allloss: 4.3611, dt: 1307.40ms, fracRes: 0.7060, norm(attn): 0.1855, norm(output): 0.9388, norm(x): 0.7659, norm(y): 1.0037, norm:0.6089, tok/sec: 100253.70, flops:105.23, batch-reuse:1
@ 4175 train 4.3365 , allloss: 4.3368, dt: 1302.62ms, fracRes: 0.7059, norm(attn): 0.1855, norm(output): 0.9389, norm(x): 0.7667, norm(y): 1.0037, norm:0.6700, tok/sec: 100621.90, flops:105.62, batch-reuse:1
@ 4176 train 4.3112 , allloss: 4.3113, dt: 1289.85ms, fracRes: 0.7061, norm(attn): 0.1855, norm(output): 0.9389, norm(x): 0.7666, norm(y): 1.0037, norm:0.6353, tok/sec: 101617.72, flops:106.66, batch-reuse:1
@ 4177 train 4.2752 , allloss: 4.2754, dt: 1298.30ms, fracRes: 0.7062, norm(attn): 0.1875, norm(output): 0.9388, norm(x): 0.7666, norm(y): 1.0037, norm:0.7335, tok/sec: 100956.50, flops:105.97, batch-reuse:1
@ 4178 train 4.4025 , allloss: 4.4033, dt: 1303.40ms, fracRes: 0.7062, norm(attn): 0.1865, norm(output): 0.9388, norm(x): 0.7665, norm(y): 1.0037, norm:0.7597, tok/sec: 100561.83, flops:105.55, batch-reuse:1
@ 4179 train 4.3797 , allloss: 4.3799, dt: 1322.18ms, fracRes: 0.7060, norm(attn): 0.1855, norm(output): 0.9389, norm(x): 0.7671, norm(y): 1.0037, norm:0.6837, tok/sec: 99133.43, flops:104.05, batch-reuse:1
@ 4180 train 4.3287 , allloss: 4.3296, dt: 1298.50ms, fracRes: 0.7060, norm(attn): 0.1855, norm(output): 0.9389, norm(x): 0.7669, norm(y): 1.0036, norm:0.5995, tok/sec: 100941.12, flops:105.95, batch-reuse:1
@ 4181 train 4.3520 , allloss: 4.3520, dt: 1308.90ms, fracRes: 0.7062, norm(attn): 0.1865, norm(output): 0.9390, norm(x): 0.7659, norm(y): 1.0036, norm:0.5684, tok/sec: 100139.15, flops:105.11, batch-reuse:1
@ 4182 train 4.3038 , allloss: 4.3038, dt: 1313.50ms, fracRes: 0.7061, norm(attn): 0.1865, norm(output): 0.9389, norm(x): 0.7659, norm(y): 1.0036, norm:0.5983, tok/sec: 99787.99, flops:104.74, batch-reuse:1
@ 4183 train 4.3406 , allloss: 4.3409, dt: 1295.16ms, fracRes: 0.7061, norm(attn): 0.1875, norm(output): 0.9388, norm(x): 0.7663, norm(y): 1.0035, norm:0.6289, tok/sec: 101201.71, flops:106.22, batch-reuse:1
@ 4184 train 4.3629 , allloss: 4.3630, dt: 1301.39ms, fracRes: 0.7059, norm(attn): 0.1846, norm(output): 0.9389, norm(x): 0.7663, norm(y): 1.0036, norm:0.6773, tok/sec: 100716.58, flops:105.72, batch-reuse:1
@ 4185 train 4.3731 , allloss: 4.3732, dt: 1283.34ms, fracRes: 0.7060, norm(attn): 0.1865, norm(output): 0.9389, norm(x): 0.7660, norm(y): 1.0036, norm:0.6043, tok/sec: 102133.25, flops:107.20, batch-reuse:1
@ 4186 train 4.4544 , allloss: 4.4545, dt: 1320.18ms, fracRes: 0.7061, norm(attn): 0.1875, norm(output): 0.9387, norm(x): 0.7662, norm(y): 1.0036, norm:0.6306, tok/sec: 99283.18, flops:104.21, batch-reuse:1
@ 4187 train 4.3638 , allloss: 4.3638, dt: 1317.05ms, fracRes: 0.7060, norm(attn): 0.1865, norm(output): 0.9389, norm(x): 0.7664, norm(y): 1.0036, norm:0.6143, tok/sec: 99519.36, flops:104.46, batch-reuse:1
@ 4188 train 4.3643 , allloss: 4.3645, dt: 1312.33ms, fracRes: 0.7060, norm(attn): 0.1855, norm(output): 0.9391, norm(x): 0.7664, norm(y): 1.0035, norm:0.6849, tok/sec: 99877.26, flops:104.83, batch-reuse:1
@ 4189 train 4.3197 , allloss: 4.3198, dt: 1313.03ms, fracRes: 0.7060, norm(attn): 0.1865, norm(output): 0.9388, norm(x): 0.7657, norm(y): 1.0037, norm:0.6655, tok/sec: 99824.14, flops:104.78, batch-reuse:1
@ 4190 train 4.2960 , allloss: 4.2962, dt: 1303.94ms, fracRes: 0.7061, norm(attn): 0.1865, norm(output): 0.9386, norm(x): 0.7652, norm(y): 1.0038, norm:0.6964, tok/sec: 100520.05, flops:105.51, batch-reuse:1
@ 4191 train 4.3213 , allloss: 4.3214, dt: 1317.62ms, fracRes: 0.7061, norm(attn): 0.1855, norm(output): 0.9387, norm(x): 0.7657, norm(y): 1.0036, norm:0.6428, tok/sec: 99476.22, flops:104.41, batch-reuse:1
@ 4192 train 4.3311 , allloss: 4.3318, dt: 1294.78ms, fracRes: 0.7059, norm(attn): 0.1836, norm(output): 0.9389, norm(x): 0.7658, norm(y): 1.0035, norm:0.7232, tok/sec: 101231.34, flops:106.26, batch-reuse:1
@ 4193 train 4.3173 , allloss: 4.3173, dt: 1316.56ms, fracRes: 0.7059, norm(attn): 0.1836, norm(output): 0.9387, norm(x): 0.7654, norm(y): 1.0036, norm:0.6460, tok/sec: 99556.53, flops:104.50, batch-reuse:1
@ 4194 train 4.2602 , allloss: 4.2603, dt: 1285.83ms, fracRes: 0.7064, norm(attn): 0.1875, norm(output): 0.9385, norm(x): 0.7645, norm(y): 1.0039, norm:0.7396, tok/sec: 101935.34, flops:106.99, batch-reuse:1
@ 4195 train 4.2764 , allloss: 4.2765, dt: 1296.19ms, fracRes: 0.7064, norm(attn): 0.1875, norm(output): 0.9386, norm(x): 0.7646, norm(y): 1.0037, norm:0.6799, tok/sec: 101120.62, flops:106.14, batch-reuse:1
@ 4196 train 4.4114 , allloss: 4.4117, dt: 1319.02ms, fracRes: 0.7063, norm(attn): 0.1865, norm(output): 0.9390, norm(x): 0.7658, norm(y): 1.0035, norm:0.5927, tok/sec: 99370.87, flops:104.30, batch-reuse:1
@ 4197 train 4.3120 , allloss: 4.3122, dt: 1322.73ms, fracRes: 0.7061, norm(attn): 0.1865, norm(output): 0.9391, norm(x): 0.7663, norm(y): 1.0032, norm:0.6881, tok/sec: 99092.10, flops:104.01, batch-reuse:1
@ 4198 train 4.3817 , allloss: 4.3825, dt: 1306.05ms, fracRes: 0.7061, norm(attn): 0.1855, norm(output): 0.9391, norm(x): 0.7662, norm(y): 1.0030, norm:0.6922, tok/sec: 100357.89, flops:105.34, batch-reuse:1
@ 4199 train 4.4343 , allloss: 4.4344, dt: 1324.03ms, fracRes: 0.7064, norm(attn): 0.1855, norm(output): 0.9390, norm(x): 0.7656, norm(y): 1.0035, norm:0.9778, tok/sec: 98995.03, flops:103.91, batch-reuse:1
@ 4200 train 4.4905 , allloss: 4.4911, dt: 1293.89ms, fracRes: 0.7067, norm(attn): 0.1855, norm(output): 0.9389, norm(x): 0.7651, norm(y): 1.0038, norm:0.8667, tok/sec: 101300.41, flops:106.33, batch-reuse:1
@ 4201 train 4.3325 , allloss: 4.3327, dt: 1321.34ms, fracRes: 0.7063, norm(attn): 0.1836, norm(output): 0.9391, norm(x): 0.7664, norm(y): 1.0037, norm:0.5829, tok/sec: 99196.39, flops:104.12, batch-reuse:1
@ 4202 train 4.3509 , allloss: 4.3510, dt: 1329.02ms, fracRes: 0.7061, norm(attn): 0.1855, norm(output): 0.9389, norm(x): 0.7669, norm(y): 1.0036, norm:0.7709, tok/sec: 98622.78, flops:103.52, batch-reuse:1
@ 4203 train 4.2195 , allloss: 4.2201, dt: 1323.54ms, fracRes: 0.7065, norm(attn): 0.1875, norm(output): 0.9385, norm(x): 0.7655, norm(y): 1.0034, norm:0.7737, tok/sec: 99031.53, flops:103.95, batch-reuse:1
@ 4204 train 4.3988 , allloss: 4.3992, dt: 1307.22ms, fracRes: 0.7066, norm(attn): 0.1846, norm(output): 0.9388, norm(x): 0.7656, norm(y): 1.0036, norm:0.6764, tok/sec: 100267.60, flops:105.24, batch-reuse:1
@ 4205 train 4.2872 , allloss: 4.2879, dt: 1308.41ms, fracRes: 0.7065, norm(attn): 0.1855, norm(output): 0.9390, norm(x): 0.7660, norm(y): 1.0036, norm:0.6232, tok/sec: 100176.34, flops:105.15, batch-reuse:1
@ 4206 train 4.3812 , allloss: 4.3814, dt: 1287.41ms, fracRes: 0.7064, norm(attn): 0.1865, norm(output): 0.9391, norm(x): 0.7664, norm(y): 1.0036, norm:0.7922, tok/sec: 101810.31, flops:106.86, batch-reuse:1
@ 4207 train 4.4359 , allloss: 4.4360, dt: 1300.68ms, fracRes: 0.7065, norm(attn): 0.1855, norm(output): 0.9390, norm(x): 0.7660, norm(y): 1.0036, norm:0.6784, tok/sec: 100772.19, flops:105.77, batch-reuse:1
@ 4208 train 4.3264 , allloss: 4.3265, dt: 1290.33ms, fracRes: 0.7064, norm(attn): 0.1865, norm(output): 0.9389, norm(x): 0.7661, norm(y): 1.0035, norm:0.6839, tok/sec: 101580.03, flops:106.62, batch-reuse:1
@ 4209 train 4.3972 , allloss: 4.3974, dt: 1318.23ms, fracRes: 0.7065, norm(attn): 0.1865, norm(output): 0.9389, norm(x): 0.7658, norm(y): 1.0034, norm:0.5698, tok/sec: 99430.50, flops:104.37, batch-reuse:1
@ 4210 train 4.5019 , allloss: 4.5021, dt: 1297.10ms, fracRes: 0.7067, norm(attn): 0.1875, norm(output): 0.9390, norm(x): 0.7657, norm(y): 1.0034, norm:0.6909, tok/sec: 101050.33, flops:106.07, batch-reuse:1
@ 4211 train 4.2466 , allloss: 4.2467, dt: 1293.60ms, fracRes: 0.7064, norm(attn): 0.1865, norm(output): 0.9390, norm(x): 0.7663, norm(y): 1.0036, norm:0.6242, tok/sec: 101323.64, flops:106.35, batch-reuse:1
@ 4212 train 4.3069 , allloss: 4.3072, dt: 1297.09ms, fracRes: 0.7062, norm(attn): 0.1865, norm(output): 0.9389, norm(x): 0.7664, norm(y): 1.0037, norm:0.6420, tok/sec: 101050.74, flops:106.07, batch-reuse:1
@ 4213 train 4.1910 , allloss: 4.1912, dt: 1312.09ms, fracRes: 0.7061, norm(attn): 0.1875, norm(output): 0.9387, norm(x): 0.7664, norm(y): 1.0036, norm:0.5605, tok/sec: 99895.56, flops:104.85, batch-reuse:1
@ 4214 train 4.2466 , allloss: 4.2466, dt: 1332.47ms, fracRes: 0.7062, norm(attn): 0.1875, norm(output): 0.9389, norm(x): 0.7664, norm(y): 1.0034, norm:0.6245, tok/sec: 98367.84, flops:103.25, batch-reuse:1
@ 4215 train 4.2477 , allloss: 4.2496, dt: 1332.26ms, fracRes: 0.7065, norm(attn): 0.1875, norm(output): 0.9388, norm(x): 0.7659, norm(y): 1.0036, norm:0.5770, tok/sec: 98382.84, flops:103.27, batch-reuse:1
@ 4216 train 4.2424 , allloss: 4.2425, dt: 1312.23ms, fracRes: 0.7066, norm(attn): 0.1865, norm(output): 0.9389, norm(x): 0.7656, norm(y): 1.0038, norm:0.6003, tok/sec: 99884.58, flops:104.84, batch-reuse:1
@ 4217 train 4.2631 , allloss: 4.2632, dt: 1308.41ms, fracRes: 0.7066, norm(attn): 0.1855, norm(output): 0.9390, norm(x): 0.7649, norm(y): 1.0038, norm:0.6034, tok/sec: 100176.21, flops:105.15, batch-reuse:1
@ 4218 train 4.2090 , allloss: 4.2091, dt: 1290.82ms, fracRes: 0.7065, norm(attn): 0.1865, norm(output): 0.9387, norm(x): 0.7648, norm(y): 1.0036, norm:0.5220, tok/sec: 101541.40, flops:106.58, batch-reuse:1
@ 4219 train 4.2760 , allloss: 4.2765, dt: 1304.48ms, fracRes: 0.7063, norm(attn): 0.1855, norm(output): 0.9387, norm(x): 0.7656, norm(y): 1.0036, norm:0.5104, tok/sec: 100478.47, flops:105.47, batch-reuse:1
@ 4220 train 4.2083 , allloss: 4.2084, dt: 1329.88ms, fracRes: 0.7061, norm(attn): 0.1855, norm(output): 0.9387, norm(x): 0.7661, norm(y): 1.0035, norm:0.6058, tok/sec: 98559.52, flops:103.45, batch-reuse:1
@ 4221 train 4.3393 , allloss: 4.3394, dt: 1306.95ms, fracRes: 0.7061, norm(attn): 0.1846, norm(output): 0.9388, norm(x): 0.7660, norm(y): 1.0037, norm:0.5759, tok/sec: 100288.58, flops:105.27, batch-reuse:1
@ 4222 train 4.1727 , allloss: 4.1731, dt: 1304.91ms, fracRes: 0.7059, norm(attn): 0.1855, norm(output): 0.9387, norm(x): 0.7657, norm(y): 1.0039, norm:0.5964, tok/sec: 100445.34, flops:105.43, batch-reuse:1
@ 4223 train 4.3093 , allloss: 4.3096, dt: 1308.20ms, fracRes: 0.7064, norm(attn): 0.1836, norm(output): 0.9387, norm(x): 0.7649, norm(y): 1.0036, norm:0.8475, tok/sec: 100192.79, flops:105.17, batch-reuse:1
@ 4224 train 4.1516 , allloss: 4.1523, dt: 1285.69ms, fracRes: 0.7063, norm(attn): 0.1855, norm(output): 0.9387, norm(x): 0.7656, norm(y): 1.0034, norm:0.6810, tok/sec: 101946.92, flops:107.01, batch-reuse:1
@ 4225 train 4.2939 , allloss: 4.2963, dt: 1281.45ms, fracRes: 0.7064, norm(attn): 0.1855, norm(output): 0.9388, norm(x): 0.7659, norm(y): 1.0034, norm:0.7335, tok/sec: 102283.86, flops:107.36, batch-reuse:1
@ 4226 train 4.3294 , allloss: 4.3303, dt: 1319.09ms, fracRes: 0.7065, norm(attn): 0.1865, norm(output): 0.9387, norm(x): 0.7663, norm(y): 1.0037, norm:0.6557, tok/sec: 99365.73, flops:104.30, batch-reuse:1
@ 4227 train 4.2853 , allloss: 4.2855, dt: 1351.81ms, fracRes: 0.7064, norm(attn): 0.1846, norm(output): 0.9388, norm(x): 0.7665, norm(y): 1.0038, norm:0.6930, tok/sec: 96960.42, flops:101.77, batch-reuse:1
@ 4228 train 4.5043 , allloss: 4.5044, dt: 1278.94ms, fracRes: 0.7066, norm(attn): 0.1836, norm(output): 0.9388, norm(x): 0.7652, norm(y): 1.0036, norm:0.8481, tok/sec: 102485.24, flops:107.57, batch-reuse:1
@ 4229 train 4.3801 , allloss: 4.3802, dt: 1297.08ms, fracRes: 0.7067, norm(attn): 0.1855, norm(output): 0.9385, norm(x): 0.7650, norm(y): 1.0035, norm:0.9133, tok/sec: 101051.31, flops:106.07, batch-reuse:1
@ 4230 train 4.2519 , allloss: 4.2520, dt: 1321.61ms, fracRes: 0.7064, norm(attn): 0.1826, norm(output): 0.9388, norm(x): 0.7657, norm(y): 1.0035, norm:0.6306, tok/sec: 99176.20, flops:104.10, batch-reuse:1
@ 4231 train 4.2508 , allloss: 4.2509, dt: 1294.97ms, fracRes: 0.7066, norm(attn): 0.1836, norm(output): 0.9390, norm(x): 0.7659, norm(y): 1.0034, norm:0.6654, tok/sec: 101216.32, flops:106.24, batch-reuse:1
@ 4232 train 4.3062 , allloss: 4.3063, dt: 1287.34ms, fracRes: 0.7067, norm(attn): 0.1855, norm(output): 0.9388, norm(x): 0.7654, norm(y): 1.0035, norm:0.6395, tok/sec: 101816.02, flops:106.87, batch-reuse:1
@ 4233 train 4.2952 , allloss: 4.2958, dt: 1287.95ms, fracRes: 0.7069, norm(attn): 0.1875, norm(output): 0.9386, norm(x): 0.7645, norm(y): 1.0036, norm:0.5993, tok/sec: 101767.73, flops:106.82, batch-reuse:1
@ 4234 train 4.2834 , allloss: 4.2835, dt: 1294.28ms, fracRes: 0.7068, norm(attn): 0.1855, norm(output): 0.9387, norm(x): 0.7650, norm(y): 1.0037, norm:0.6603, tok/sec: 101270.48, flops:106.30, batch-reuse:1
@ 4235 train 4.2732 , allloss: 4.2733, dt: 1310.95ms, fracRes: 0.7065, norm(attn): 0.1865, norm(output): 0.9388, norm(x): 0.7660, norm(y): 1.0038, norm:0.6172, tok/sec: 99982.82, flops:104.95, batch-reuse:1
@ 4236 train 4.4056 , allloss: 4.4065, dt: 1300.23ms, fracRes: 0.7067, norm(attn): 0.1865, norm(output): 0.9384, norm(x): 0.7646, norm(y): 1.0037, norm:1.0262, tok/sec: 100807.13, flops:105.81, batch-reuse:1
@ 4237 train 4.2872 , allloss: 4.2877, dt: 1330.90ms, fracRes: 0.7065, norm(attn): 0.1855, norm(output): 0.9387, norm(x): 0.7654, norm(y): 1.0036, norm:1.1372, tok/sec: 98483.90, flops:103.37, batch-reuse:1
@ 4238 train 4.3148 , allloss: 4.3148, dt: 1323.19ms, fracRes: 0.7063, norm(attn): 0.1846, norm(output): 0.9389, norm(x): 0.7655, norm(y): 1.0037, norm:0.7193, tok/sec: 99057.26, flops:103.97, batch-reuse:1
@ 4239 train 4.2598 , allloss: 4.2599, dt: 1318.03ms, fracRes: 0.7063, norm(attn): 0.1865, norm(output): 0.9386, norm(x): 0.7652, norm(y): 1.0039, norm:0.9053, tok/sec: 99445.70, flops:104.38, batch-reuse:1
@ 4240 train 4.2861 , allloss: 4.2866, dt: 1305.19ms, fracRes: 0.7067, norm(attn): 0.1885, norm(output): 0.9388, norm(x): 0.7646, norm(y): 1.0039, norm:0.6731, tok/sec: 100423.96, flops:105.41, batch-reuse:1
@ 4241 train 4.3073 , allloss: 4.3074, dt: 1315.04ms, fracRes: 0.7068, norm(attn): 0.1885, norm(output): 0.9387, norm(x): 0.7644, norm(y): 1.0037, norm:0.7365, tok/sec: 99671.59, flops:104.62, batch-reuse:1
@ 4242 train 4.3975 , allloss: 4.3975, dt: 1280.67ms, fracRes: 0.7067, norm(attn): 0.1865, norm(output): 0.9392, norm(x): 0.7652, norm(y): 1.0034, norm:0.6527, tok/sec: 102346.15, flops:107.43, batch-reuse:1
@ 4243 train 4.2342 , allloss: 4.2344, dt: 1283.71ms, fracRes: 0.7065, norm(attn): 0.1875, norm(output): 0.9387, norm(x): 0.7652, norm(y): 1.0035, norm:0.7635, tok/sec: 102103.96, flops:107.17, batch-reuse:1
@ 4244 train 4.1135 , allloss: 4.1144, dt: 1287.61ms, fracRes: 0.7063, norm(attn): 0.1875, norm(output): 0.9387, norm(x): 0.7650, norm(y): 1.0035, norm:0.6960, tok/sec: 101794.66, flops:106.85, batch-reuse:1
@ 4245 train 4.2115 , allloss: 4.2115, dt: 1313.39ms, fracRes: 0.7064, norm(attn): 0.1865, norm(output): 0.9388, norm(x): 0.7646, norm(y): 1.0036, norm:0.6645, tok/sec: 99796.62, flops:104.75, batch-reuse:1
@ 4246 train 4.5417 , allloss: 4.5418, dt: 1326.08ms, fracRes: 0.7066, norm(attn): 0.1846, norm(output): 0.9389, norm(x): 0.7642, norm(y): 1.0037, norm:0.9085, tok/sec: 98841.75, flops:103.75, batch-reuse:1
@ 4247 train 4.3214 , allloss: 4.3214, dt: 1309.21ms, fracRes: 0.7068, norm(attn): 0.1865, norm(output): 0.9390, norm(x): 0.7648, norm(y): 1.0039, norm:0.8089, tok/sec: 100115.19, flops:105.08, batch-reuse:1
@ 4248 train 4.3213 , allloss: 4.3214, dt: 1300.89ms, fracRes: 0.7068, norm(attn): 0.1875, norm(output): 0.9388, norm(x): 0.7649, norm(y): 1.0037, norm:0.7061, tok/sec: 100755.62, flops:105.76, batch-reuse:1
@ 4249 train 4.2940 , allloss: 4.2944, dt: 1333.86ms, fracRes: 0.7068, norm(attn): 0.1865, norm(output): 0.9388, norm(x): 0.7645, norm(y): 1.0033, norm:0.6738, tok/sec: 98265.14, flops:103.14, batch-reuse:1
@ 4250 train 4.1969 , allloss: 4.1970, dt: 1330.08ms, fracRes: 0.7068, norm(attn): 0.1875, norm(output): 0.9389, norm(x): 0.7648, norm(y): 1.0033, norm:0.6710, tok/sec: 98544.41, flops:103.44, batch-reuse:1
@ 4251 train 4.2907 , allloss: 4.2913, dt: 1343.93ms, fracRes: 0.7066, norm(attn): 0.1875, norm(output): 0.9391, norm(x): 0.7662, norm(y): 1.0036, norm:0.5743, tok/sec: 97528.70, flops:102.37, batch-reuse:1
@ 4252 train 4.1589 , allloss: 4.1590, dt: 1327.36ms, fracRes: 0.7063, norm(attn): 0.1865, norm(output): 0.9390, norm(x): 0.7672, norm(y): 1.0037, norm:0.6691, tok/sec: 98746.69, flops:103.65, batch-reuse:1
@ 4253 train 4.2139 , allloss: 4.2139, dt: 1299.51ms, fracRes: 0.7064, norm(attn): 0.1865, norm(output): 0.9388, norm(x): 0.7666, norm(y): 1.0037, norm:0.5843, tok/sec: 100862.52, flops:105.87, batch-reuse:1
@ 4254 train 4.2674 , allloss: 4.2675, dt: 1314.00ms, fracRes: 0.7068, norm(attn): 0.1836, norm(output): 0.9388, norm(x): 0.7654, norm(y): 1.0036, norm:0.5304, tok/sec: 99750.57, flops:104.70, batch-reuse:1
@ 4255 train 4.2315 , allloss: 4.2316, dt: 1314.46ms, fracRes: 0.7069, norm(attn): 0.1846, norm(output): 0.9387, norm(x): 0.7648, norm(y): 1.0035, norm:0.6842, tok/sec: 99715.22, flops:104.66, batch-reuse:1
@ 4256 train 4.1569 , allloss: 4.1571, dt: 1289.23ms, fracRes: 0.7073, norm(attn): 0.1865, norm(output): 0.9385, norm(x): 0.7644, norm(y): 1.0036, norm:0.6419, tok/sec: 101666.56, flops:106.71, batch-reuse:1
@ 4257 train 4.1759 , allloss: 4.1760, dt: 1303.35ms, fracRes: 0.7069, norm(attn): 0.1846, norm(output): 0.9387, norm(x): 0.7654, norm(y): 1.0035, norm:0.6481, tok/sec: 100565.28, flops:105.56, batch-reuse:1
@ 4258 train 4.3323 , allloss: 4.3324, dt: 1329.51ms, fracRes: 0.7068, norm(attn): 0.1855, norm(output): 0.9391, norm(x): 0.7660, norm(y): 1.0036, norm:0.6084, tok/sec: 98586.35, flops:103.48, batch-reuse:1
@ 4259 train 4.2994 , allloss: 4.2995, dt: 1343.47ms, fracRes: 0.7067, norm(attn): 0.1865, norm(output): 0.9390, norm(x): 0.7660, norm(y): 1.0035, norm:0.6851, tok/sec: 97562.22, flops:102.40, batch-reuse:1
@ 4260 train 4.4006 , allloss: 4.4009, dt: 1333.36ms, fracRes: 0.7067, norm(attn): 0.1865, norm(output): 0.9390, norm(x): 0.7661, norm(y): 1.0034, norm:0.7963, tok/sec: 98301.86, flops:103.18, batch-reuse:1
@ 4261 train 4.5298 , allloss: 4.5298, dt: 1317.44ms, fracRes: 0.7068, norm(attn): 0.1855, norm(output): 0.9393, norm(x): 0.7662, norm(y): 1.0034, norm:0.7691, tok/sec: 99489.61, flops:104.43, batch-reuse:1
@ 4262 train 4.4089 , allloss: 4.4090, dt: 1307.31ms, fracRes: 0.7069, norm(attn): 0.1865, norm(output): 0.9393, norm(x): 0.7656, norm(y): 1.0035, norm:0.6858, tok/sec: 100260.56, flops:105.24, batch-reuse:1
@ 4263 train 4.4454 , allloss: 4.4455, dt: 1329.82ms, fracRes: 0.7068, norm(attn): 0.1855, norm(output): 0.9395, norm(x): 0.7664, norm(y): 1.0037, norm:0.6960, tok/sec: 98563.85, flops:103.46, batch-reuse:1
@ 4264 train 4.5795 , allloss: 4.5795, dt: 1277.37ms, fracRes: 0.7070, norm(attn): 0.1836, norm(output): 0.9398, norm(x): 0.7667, norm(y): 1.0036, norm:0.8187, tok/sec: 102610.72, flops:107.70, batch-reuse:1
@ 4265 train 4.5356 , allloss: 4.5358, dt: 1303.45ms, fracRes: 0.7070, norm(attn): 0.1836, norm(output): 0.9391, norm(x): 0.7658, norm(y): 1.0034, norm:0.8051, tok/sec: 100557.43, flops:105.55, batch-reuse:1
@ 4266 train 4.3984 , allloss: 4.3985, dt: 1300.05ms, fracRes: 0.7069, norm(attn): 0.1846, norm(output): 0.9390, norm(x): 0.7652, norm(y): 1.0032, norm:0.7001, tok/sec: 100820.81, flops:105.82, batch-reuse:1
@ 4267 train 4.4738 , allloss: 4.4743, dt: 1293.64ms, fracRes: 0.7070, norm(attn): 0.1865, norm(output): 0.9389, norm(x): 0.7649, norm(y): 1.0035, norm:0.7768, tok/sec: 101320.05, flops:106.35, batch-reuse:1
@ 4268 train 4.4892 , allloss: 4.4896, dt: 1279.06ms, fracRes: 0.7068, norm(attn): 0.1855, norm(output): 0.9391, norm(x): 0.7655, norm(y): 1.0038, norm:0.8046, tok/sec: 102475.49, flops:107.56, batch-reuse:1
@ 4269 train 4.5013 , allloss: 4.5015, dt: 1310.21ms, fracRes: 0.7067, norm(attn): 0.1865, norm(output): 0.9392, norm(x): 0.7660, norm(y): 1.0037, norm:0.8608, tok/sec: 100038.71, flops:105.00, batch-reuse:1
@ 4270 train 4.6337 , allloss: 4.6337, dt: 1326.93ms, fracRes: 0.7065, norm(attn): 0.1865, norm(output): 0.9396, norm(x): 0.7662, norm(y): 1.0032, norm:1.2635, tok/sec: 98778.43, flops:103.68, batch-reuse:1
@ 4271 train 4.3718 , allloss: 4.3718, dt: 1292.48ms, fracRes: 0.7066, norm(attn): 0.1875, norm(output): 0.9392, norm(x): 0.7661, norm(y): 1.0037, norm:1.1984, tok/sec: 101411.02, flops:106.44, batch-reuse:1
@ 4272 train 4.4909 , allloss: 4.4911, dt: 1308.44ms, fracRes: 0.7072, norm(attn): 0.1875, norm(output): 0.9390, norm(x): 0.7646, norm(y): 1.0035, norm:0.9532, tok/sec: 100174.22, flops:105.15, batch-reuse:1
@ 4273 train 4.4833 , allloss: 4.4834, dt: 1288.56ms, fracRes: 0.7073, norm(attn): 0.1875, norm(output): 0.9390, norm(x): 0.7642, norm(y): 1.0033, norm:0.7750, tok/sec: 101719.44, flops:106.77, batch-reuse:1
@ 4274 train 4.4547 , allloss: 4.4547, dt: 1282.84ms, fracRes: 0.7069, norm(attn): 0.1875, norm(output): 0.9390, norm(x): 0.7645, norm(y): 1.0033, norm:0.9902, tok/sec: 102173.24, flops:107.24, batch-reuse:1
@ 4275 train 4.3578 , allloss: 4.3579, dt: 1291.49ms, fracRes: 0.7070, norm(attn): 0.1885, norm(output): 0.9389, norm(x): 0.7642, norm(y): 1.0032, norm:0.7261, tok/sec: 101488.93, flops:106.53, batch-reuse:1
@ 4276 train 4.3931 , allloss: 4.3936, dt: 1276.44ms, fracRes: 0.7071, norm(attn): 0.1875, norm(output): 0.9389, norm(x): 0.7638, norm(y): 1.0033, norm:0.7858, tok/sec: 102685.45, flops:107.78, batch-reuse:1
@ 4277 train 4.4584 , allloss: 4.4584, dt: 1319.70ms, fracRes: 0.7069, norm(attn): 0.1865, norm(output): 0.9393, norm(x): 0.7649, norm(y): 1.0034, norm:0.6439, tok/sec: 99319.24, flops:104.25, batch-reuse:1
@ 4278 train 4.4379 , allloss: 4.4380, dt: 1300.54ms, fracRes: 0.7069, norm(attn): 0.1846, norm(output): 0.9394, norm(x): 0.7659, norm(y): 1.0033, norm:0.7113, tok/sec: 100782.68, flops:105.78, batch-reuse:1
@ 4279 train 4.4367 , allloss: 4.4368, dt: 1305.84ms, fracRes: 0.7069, norm(attn): 0.1816, norm(output): 0.9392, norm(x): 0.7657, norm(y): 1.0034, norm:0.7348, tok/sec: 100373.74, flops:105.36, batch-reuse:1
@ 4280 train 4.3174 , allloss: 4.3182, dt: 1309.39ms, fracRes: 0.7074, norm(attn): 0.1826, norm(output): 0.9390, norm(x): 0.7648, norm(y): 1.0033, norm:0.6283, tok/sec: 100101.55, flops:105.07, batch-reuse:1
@ 4281 train 4.4062 , allloss: 4.4064, dt: 1328.45ms, fracRes: 0.7074, norm(attn): 0.1826, norm(output): 0.9392, norm(x): 0.7652, norm(y): 1.0035, norm:0.6845, tok/sec: 98665.31, flops:103.56, batch-reuse:1
@ 4282 train 4.4308 , allloss: 4.4314, dt: 1332.96ms, fracRes: 0.7072, norm(attn): 0.1836, norm(output): 0.9392, norm(x): 0.7662, norm(y): 1.0035, norm:0.6046, tok/sec: 98331.86, flops:103.21, batch-reuse:1
@ 4283 train 4.5472 , allloss: 4.5483, dt: 1328.89ms, fracRes: 0.7072, norm(attn): 0.1836, norm(output): 0.9394, norm(x): 0.7669, norm(y): 1.0034, norm:0.6593, tok/sec: 98632.37, flops:103.53, batch-reuse:1
@ 4284 train 4.4394 , allloss: 4.4399, dt: 1332.14ms, fracRes: 0.7072, norm(attn): 0.1846, norm(output): 0.9396, norm(x): 0.7669, norm(y): 1.0030, norm:0.6012, tok/sec: 98391.96, flops:103.28, batch-reuse:1
@ 4285 train 4.3387 , allloss: 4.3389, dt: 1325.45ms, fracRes: 0.7073, norm(attn): 0.1855, norm(output): 0.9392, norm(x): 0.7658, norm(y): 1.0029, norm:0.6297, tok/sec: 98888.91, flops:103.80, batch-reuse:1
@ 4286 train 4.4589 , allloss: 4.4590, dt: 1315.71ms, fracRes: 0.7072, norm(attn): 0.1865, norm(output): 0.9393, norm(x): 0.7655, norm(y): 1.0030, norm:0.6330, tok/sec: 99620.50, flops:104.56, batch-reuse:1
@ 4287 train 4.3766 , allloss: 4.3767, dt: 1339.96ms, fracRes: 0.7071, norm(attn): 0.1875, norm(output): 0.9392, norm(x): 0.7652, norm(y): 1.0034, norm:0.5379, tok/sec: 97818.01, flops:102.67, batch-reuse:1
@ 4288 train 4.3633 , allloss: 4.3635, dt: 1301.33ms, fracRes: 0.7070, norm(attn): 0.1875, norm(output): 0.9391, norm(x): 0.7652, norm(y): 1.0032, norm:0.5995, tok/sec: 100721.54, flops:105.72, batch-reuse:1
@ 4289 train 4.4574 , allloss: 4.4576, dt: 1287.77ms, fracRes: 0.7069, norm(attn): 0.1875, norm(output): 0.9392, norm(x): 0.7656, norm(y): 1.0032, norm:0.6015, tok/sec: 101782.22, flops:106.83, batch-reuse:1
@ 4290 train 4.3765 , allloss: 4.3767, dt: 1302.50ms, fracRes: 0.7070, norm(attn): 0.1855, norm(output): 0.9391, norm(x): 0.7658, norm(y): 1.0033, norm:0.6337, tok/sec: 100631.46, flops:105.63, batch-reuse:1
@ 4291 train 4.4206 , allloss: 4.4207, dt: 1323.92ms, fracRes: 0.7072, norm(attn): 0.1846, norm(output): 0.9390, norm(x): 0.7648, norm(y): 1.0035, norm:0.5956, tok/sec: 99002.80, flops:103.92, batch-reuse:1
@ 4292 train 4.4953 , allloss: 4.4954, dt: 1329.90ms, fracRes: 0.7072, norm(attn): 0.1826, norm(output): 0.9393, norm(x): 0.7650, norm(y): 1.0038, norm:0.6607, tok/sec: 98557.68, flops:103.45, batch-reuse:1
@ 4293 train 4.4065 , allloss: 4.4066, dt: 1322.55ms, fracRes: 0.7073, norm(attn): 0.1826, norm(output): 0.9397, norm(x): 0.7656, norm(y): 1.0037, norm:0.7105, tok/sec: 99105.28, flops:104.02, batch-reuse:1
@ 4294 train 4.2850 , allloss: 4.2851, dt: 1282.96ms, fracRes: 0.7071, norm(attn): 0.1855, norm(output): 0.9393, norm(x): 0.7656, norm(y): 1.0036, norm:0.8042, tok/sec: 102163.56, flops:107.23, batch-reuse:1
@ 4295 train 4.5189 , allloss: 4.5191, dt: 1312.94ms, fracRes: 0.7071, norm(attn): 0.1865, norm(output): 0.9392, norm(x): 0.7655, norm(y): 1.0034, norm:0.6736, tok/sec: 99830.85, flops:104.79, batch-reuse:1
@ 4296 train 4.4186 , allloss: 4.4187, dt: 1336.82ms, fracRes: 0.7069, norm(attn): 0.1865, norm(output): 0.9392, norm(x): 0.7662, norm(y): 1.0035, norm:0.6763, tok/sec: 98047.51, flops:102.91, batch-reuse:1
@ 4297 train 4.4421 , allloss: 4.4422, dt: 1345.54ms, fracRes: 0.7070, norm(attn): 0.1875, norm(output): 0.9391, norm(x): 0.7667, norm(y): 1.0036, norm:0.6545, tok/sec: 97411.89, flops:102.25, batch-reuse:1
@ 4298 train 4.4435 , allloss: 4.4436, dt: 1316.76ms, fracRes: 0.7071, norm(attn): 0.1855, norm(output): 0.9394, norm(x): 0.7667, norm(y): 1.0034, norm:0.6273, tok/sec: 99541.02, flops:104.48, batch-reuse:1
@ 4299 train 4.4311 , allloss: 4.4312, dt: 1296.39ms, fracRes: 0.7072, norm(attn): 0.1846, norm(output): 0.9393, norm(x): 0.7660, norm(y): 1.0033, norm:0.5948, tok/sec: 101105.00, flops:106.12, batch-reuse:1
@ 4300 train 4.3859 , allloss: 4.3861, dt: 1314.81ms, fracRes: 0.7071, norm(attn): 0.1855, norm(output): 0.9391, norm(x): 0.7659, norm(y): 1.0034, norm:0.5663, tok/sec: 99688.78, flops:104.64, batch-reuse:1
@ 4301 train 4.2820 , allloss: 4.2821, dt: 1337.46ms, fracRes: 0.7070, norm(attn): 0.1846, norm(output): 0.9391, norm(x): 0.7664, norm(y): 1.0035, norm:0.6338, tok/sec: 98000.41, flops:102.86, batch-reuse:1
@ 4302 train 4.3277 , allloss: 4.3278, dt: 1336.65ms, fracRes: 0.7069, norm(attn): 0.1846, norm(output): 0.9393, norm(x): 0.7665, norm(y): 1.0035, norm:0.6750, tok/sec: 98060.15, flops:102.93, batch-reuse:1
@ 4303 train 4.4339 , allloss: 4.4340, dt: 1300.16ms, fracRes: 0.7071, norm(attn): 0.1836, norm(output): 0.9392, norm(x): 0.7663, norm(y): 1.0034, norm:0.5338, tok/sec: 100812.14, flops:105.82, batch-reuse:1
@ 4304 train 4.3100 , allloss: 4.3104, dt: 1307.74ms, fracRes: 0.7069, norm(attn): 0.1855, norm(output): 0.9390, norm(x): 0.7666, norm(y): 1.0035, norm:0.6204, tok/sec: 100227.58, flops:105.20, batch-reuse:1
@ 4305 train 4.4006 , allloss: 4.4007, dt: 1307.78ms, fracRes: 0.7070, norm(attn): 0.1846, norm(output): 0.9392, norm(x): 0.7666, norm(y): 1.0036, norm:0.5806, tok/sec: 100224.86, flops:105.20, batch-reuse:1
@ 4306 train 4.4303 , allloss: 4.4303, dt: 1346.46ms, fracRes: 0.7068, norm(attn): 0.1855, norm(output): 0.9394, norm(x): 0.7672, norm(y): 1.0036, norm:0.5818, tok/sec: 97345.75, flops:102.18, batch-reuse:1
@ 4307 train 4.3303 , allloss: 4.3304, dt: 1348.02ms, fracRes: 0.7069, norm(attn): 0.1855, norm(output): 0.9391, norm(x): 0.7671, norm(y): 1.0036, norm:0.5726, tok/sec: 97233.16, flops:102.06, batch-reuse:1
@ 4308 train 4.2835 , allloss: 4.2835, dt: 1326.98ms, fracRes: 0.7071, norm(attn): 0.1836, norm(output): 0.9393, norm(x): 0.7671, norm(y): 1.0035, norm:0.5683, tok/sec: 98774.69, flops:103.68, batch-reuse:1
@ 4309 train 4.3327 , allloss: 4.3328, dt: 1308.93ms, fracRes: 0.7073, norm(attn): 0.1826, norm(output): 0.9393, norm(x): 0.7665, norm(y): 1.0034, norm:0.5807, tok/sec: 100136.92, flops:105.11, batch-reuse:1
@ 4310 train 4.3690 , allloss: 4.3690, dt: 1302.38ms, fracRes: 0.7071, norm(attn): 0.1836, norm(output): 0.9392, norm(x): 0.7665, norm(y): 1.0033, norm:0.5769, tok/sec: 100640.30, flops:105.64, batch-reuse:1
@ 4311 train 4.4438 , allloss: 4.4438, dt: 1339.26ms, fracRes: 0.7071, norm(attn): 0.1826, norm(output): 0.9396, norm(x): 0.7672, norm(y): 1.0035, norm:0.6704, tok/sec: 97869.14, flops:102.73, batch-reuse:1
@ 4312 train 4.3917 , allloss: 4.3922, dt: 1323.50ms, fracRes: 0.7069, norm(attn): 0.1816, norm(output): 0.9392, norm(x): 0.7670, norm(y): 1.0037, norm:0.8271, tok/sec: 99034.44, flops:103.95, batch-reuse:1
@ 4313 train 4.3583 , allloss: 4.3584, dt: 1337.16ms, fracRes: 0.7071, norm(attn): 0.1846, norm(output): 0.9394, norm(x): 0.7665, norm(y): 1.0037, norm:0.5756, tok/sec: 98022.33, flops:102.89, batch-reuse:1
@ 4314 train 4.3997 , allloss: 4.3997, dt: 1309.14ms, fracRes: 0.7072, norm(attn): 0.1836, norm(output): 0.9393, norm(x): 0.7666, norm(y): 1.0038, norm:0.8374, tok/sec: 100120.95, flops:105.09, batch-reuse:1
@ 4315 train 4.3912 , allloss: 4.3912, dt: 1302.14ms, fracRes: 0.7070, norm(attn): 0.1836, norm(output): 0.9396, norm(x): 0.7672, norm(y): 1.0037, norm:0.8666, tok/sec: 100659.28, flops:105.66, batch-reuse:1
@ 4316 train 4.4299 , allloss: 4.4309, dt: 1310.49ms, fracRes: 0.7069, norm(attn): 0.1865, norm(output): 0.9392, norm(x): 0.7670, norm(y): 1.0034, norm:0.8153, tok/sec: 100017.65, flops:104.98, batch-reuse:1
@ 4317 train 4.4162 , allloss: 4.4162, dt: 1289.57ms, fracRes: 0.7068, norm(attn): 0.1846, norm(output): 0.9392, norm(x): 0.7672, norm(y): 1.0034, norm:0.7021, tok/sec: 101640.36, flops:106.68, batch-reuse:1
@ 4318 train 4.3564 , allloss: 4.3565, dt: 1312.42ms, fracRes: 0.7069, norm(attn): 0.1865, norm(output): 0.9391, norm(x): 0.7668, norm(y): 1.0034, norm:0.7028, tok/sec: 99870.17, flops:104.83, batch-reuse:1
@ 4319 train 4.4220 , allloss: 4.4227, dt: 1338.84ms, fracRes: 0.7069, norm(attn): 0.1855, norm(output): 0.9393, norm(x): 0.7666, norm(y): 1.0036, norm:0.7248, tok/sec: 97899.46, flops:102.76, batch-reuse:1
@ 4320 train 4.4051 , allloss: 4.4052, dt: 1329.36ms, fracRes: 0.7070, norm(attn): 0.1855, norm(output): 0.9391, norm(x): 0.7670, norm(y): 1.0036, norm:0.6190, tok/sec: 98597.98, flops:103.49, batch-reuse:1
@ 4321 train 4.3635 , allloss: 4.3635, dt: 1304.41ms, fracRes: 0.7068, norm(attn): 0.1855, norm(output): 0.9394, norm(x): 0.7677, norm(y): 1.0036, norm:0.6816, tok/sec: 100483.60, flops:105.47, batch-reuse:1
@ 4322 train 4.3805 , allloss: 4.3806, dt: 1330.32ms, fracRes: 0.7068, norm(attn): 0.1855, norm(output): 0.9393, norm(x): 0.7673, norm(y): 1.0036, norm:0.5677, tok/sec: 98526.91, flops:103.42, batch-reuse:1
@ 4323 train 4.4086 , allloss: 4.4097, dt: 1312.71ms, fracRes: 0.7069, norm(attn): 0.1836, norm(output): 0.9392, norm(x): 0.7665, norm(y): 1.0037, norm:0.6146, tok/sec: 99848.26, flops:104.80, batch-reuse:1
@ 4324 train 4.3806 , allloss: 4.3810, dt: 1304.10ms, fracRes: 0.7069, norm(attn): 0.1865, norm(output): 0.9390, norm(x): 0.7661, norm(y): 1.0038, norm:0.6014, tok/sec: 100507.42, flops:105.50, batch-reuse:1
@ 4325 train 4.4744 , allloss: 4.4745, dt: 1347.34ms, fracRes: 0.7069, norm(attn): 0.1846, norm(output): 0.9394, norm(x): 0.7669, norm(y): 1.0038, norm:0.6035, tok/sec: 97281.75, flops:102.11, batch-reuse:1
@ 4326 train 4.4273 , allloss: 4.4278, dt: 1345.95ms, fracRes: 0.7069, norm(attn): 0.1816, norm(output): 0.9395, norm(x): 0.7674, norm(y): 1.0037, norm:0.5899, tok/sec: 97382.32, flops:102.22, batch-reuse:1
@ 4327 train 4.3466 , allloss: 4.3466, dt: 1331.29ms, fracRes: 0.7068, norm(attn): 0.1816, norm(output): 0.9395, norm(x): 0.7679, norm(y): 1.0034, norm:0.6518, tok/sec: 98454.56, flops:103.34, batch-reuse:1
@ 4328 train 4.3448 , allloss: 4.3451, dt: 1356.93ms, fracRes: 0.7069, norm(attn): 0.1836, norm(output): 0.9395, norm(x): 0.7682, norm(y): 1.0033, norm:0.6000, tok/sec: 96594.65, flops:101.39, batch-reuse:1
@ 4329 train 4.3536 , allloss: 4.3537, dt: 1350.71ms, fracRes: 0.7067, norm(attn): 0.1846, norm(output): 0.9394, norm(x): 0.7680, norm(y): 1.0035, norm:0.6150, tok/sec: 97039.20, flops:101.86, batch-reuse:1
@ 4330 train 4.3600 , allloss: 4.3600, dt: 1340.88ms, fracRes: 0.7067, norm(attn): 0.1855, norm(output): 0.9393, norm(x): 0.7677, norm(y): 1.0035, norm:0.5709, tok/sec: 97750.41, flops:102.60, batch-reuse:1
@ 4331 train 4.3821 , allloss: 4.3822, dt: 1317.33ms, fracRes: 0.7068, norm(attn): 0.1836, norm(output): 0.9393, norm(x): 0.7669, norm(y): 1.0037, norm:0.5277, tok/sec: 99498.11, flops:104.44, batch-reuse:1
@ 4332 train 4.2653 , allloss: 4.2654, dt: 1317.35ms, fracRes: 0.7069, norm(attn): 0.1836, norm(output): 0.9392, norm(x): 0.7666, norm(y): 1.0037, norm:0.5815, tok/sec: 99496.44, flops:104.43, batch-reuse:1
@ 4333 train 4.3984 , allloss: 4.3984, dt: 1298.76ms, fracRes: 0.7069, norm(attn): 0.1816, norm(output): 0.9395, norm(x): 0.7673, norm(y): 1.0035, norm:0.5749, tok/sec: 100921.25, flops:105.93, batch-reuse:1
@ 4334 train 4.3523 , allloss: 4.3525, dt: 1293.29ms, fracRes: 0.7067, norm(attn): 0.1846, norm(output): 0.9392, norm(x): 0.7680, norm(y): 1.0033, norm:0.6350, tok/sec: 101347.73, flops:106.38, batch-reuse:1
@ 4335 train 4.3475 , allloss: 4.3475, dt: 1318.71ms, fracRes: 0.7067, norm(attn): 0.1836, norm(output): 0.9394, norm(x): 0.7679, norm(y): 1.0035, norm:0.5740, tok/sec: 99394.03, flops:104.33, batch-reuse:1
@ 4336 train 4.3480 , allloss: 4.3481, dt: 1313.54ms, fracRes: 0.7067, norm(attn): 0.1826, norm(output): 0.9394, norm(x): 0.7676, norm(y): 1.0036, norm:0.5645, tok/sec: 99785.57, flops:104.74, batch-reuse:1
@ 4337 train 4.3743 , allloss: 4.3750, dt: 1308.22ms, fracRes: 0.7069, norm(attn): 0.1836, norm(output): 0.9392, norm(x): 0.7673, norm(y): 1.0036, norm:0.5618, tok/sec: 100191.45, flops:105.16, batch-reuse:1
@ 4338 train 4.2862 , allloss: 4.2863, dt: 1308.95ms, fracRes: 0.7071, norm(attn): 0.1855, norm(output): 0.9393, norm(x): 0.7671, norm(y): 1.0035, norm:0.5944, tok/sec: 100135.41, flops:105.11, batch-reuse:1
@ 4339 train 4.3582 , allloss: 4.3585, dt: 1316.20ms, fracRes: 0.7070, norm(attn): 0.1855, norm(output): 0.9395, norm(x): 0.7674, norm(y): 1.0034, norm:0.6784, tok/sec: 99583.68, flops:104.53, batch-reuse:1
@ 4340 train 4.3170 , allloss: 4.3172, dt: 1294.30ms, fracRes: 0.7069, norm(attn): 0.1855, norm(output): 0.9395, norm(x): 0.7686, norm(y): 1.0034, norm:0.5576, tok/sec: 101268.47, flops:106.29, batch-reuse:1
@ 4341 train 4.4337 , allloss: 4.4342, dt: 1298.64ms, fracRes: 0.7070, norm(attn): 0.1836, norm(output): 0.9395, norm(x): 0.7682, norm(y): 1.0034, norm:0.5797, tok/sec: 100930.43, flops:105.94, batch-reuse:1
@ 4342 train 4.3576 , allloss: 4.3585, dt: 1305.06ms, fracRes: 0.7069, norm(attn): 0.1836, norm(output): 0.9395, norm(x): 0.7678, norm(y): 1.0033, norm:0.7107, tok/sec: 100433.67, flops:105.42, batch-reuse:1
@ 4343 train 4.4236 , allloss: 4.4238, dt: 1316.04ms, fracRes: 0.7069, norm(attn): 0.1826, norm(output): 0.9393, norm(x): 0.7673, norm(y): 1.0036, norm:0.6539, tok/sec: 99595.68, flops:104.54, batch-reuse:1
@ 4344 train 4.4395 , allloss: 4.4397, dt: 1292.42ms, fracRes: 0.7068, norm(attn): 0.1846, norm(output): 0.9391, norm(x): 0.7673, norm(y): 1.0038, norm:0.8064, tok/sec: 101415.96, flops:106.45, batch-reuse:1
@ 4345 train 4.2946 , allloss: 4.2947, dt: 1292.66ms, fracRes: 0.7069, norm(attn): 0.1836, norm(output): 0.9394, norm(x): 0.7674, norm(y): 1.0035, norm:0.7604, tok/sec: 101397.27, flops:106.43, batch-reuse:1
@ 4346 train 4.3732 , allloss: 4.3733, dt: 1327.16ms, fracRes: 0.7069, norm(attn): 0.1826, norm(output): 0.9394, norm(x): 0.7676, norm(y): 1.0032, norm:0.5986, tok/sec: 98760.94, flops:103.66, batch-reuse:1
@ 4347 train 4.3518 , allloss: 4.3522, dt: 1336.22ms, fracRes: 0.7069, norm(attn): 0.1816, norm(output): 0.9392, norm(x): 0.7676, norm(y): 1.0033, norm:0.7430, tok/sec: 98091.87, flops:102.96, batch-reuse:1
@ 4348 train 4.5265 , allloss: 4.5266, dt: 1308.52ms, fracRes: 0.7072, norm(attn): 0.1807, norm(output): 0.9395, norm(x): 0.7679, norm(y): 1.0036, norm:0.7112, tok/sec: 100168.41, flops:105.14, batch-reuse:1
@ 4349 train 4.4683 , allloss: 4.4685, dt: 1292.23ms, fracRes: 0.7073, norm(attn): 0.1826, norm(output): 0.9395, norm(x): 0.7676, norm(y): 1.0036, norm:0.6921, tok/sec: 101430.81, flops:106.47, batch-reuse:1
@ 4350 train 4.3287 , allloss: 4.3288, dt: 1304.86ms, fracRes: 0.7073, norm(attn): 0.1855, norm(output): 0.9396, norm(x): 0.7672, norm(y): 1.0035, norm:0.8135, tok/sec: 100449.39, flops:105.43, batch-reuse:1
@ 4351 train 4.4488 , allloss: 4.4490, dt: 1299.82ms, fracRes: 0.7070, norm(attn): 0.1816, norm(output): 0.9398, norm(x): 0.7673, norm(y): 1.0033, norm:0.6967, tok/sec: 100838.30, flops:105.84, batch-reuse:1
@ 4352 train 4.3211 , allloss: 4.3212, dt: 1297.46ms, fracRes: 0.7071, norm(attn): 0.1807, norm(output): 0.9396, norm(x): 0.7673, norm(y): 1.0032, norm:0.6591, tok/sec: 101021.97, flops:106.04, batch-reuse:1
@ 4353 train 4.3347 , allloss: 4.3347, dt: 1327.17ms, fracRes: 0.7071, norm(attn): 0.1816, norm(output): 0.9394, norm(x): 0.7672, norm(y): 1.0033, norm:0.7989, tok/sec: 98760.78, flops:103.66, batch-reuse:1
@ 4354 train 4.3096 , allloss: 4.3102, dt: 1320.44ms, fracRes: 0.7070, norm(attn): 0.1826, norm(output): 0.9392, norm(x): 0.7668, norm(y): 1.0034, norm:0.5932, tok/sec: 99264.02, flops:104.19, batch-reuse:1
@ 4355 train 4.3260 , allloss: 4.3260, dt: 1346.82ms, fracRes: 0.7070, norm(attn): 0.1846, norm(output): 0.9397, norm(x): 0.7671, norm(y): 1.0033, norm:0.7284, tok/sec: 97319.84, flops:102.15, batch-reuse:1
@ 4356 train 4.3471 , allloss: 4.3472, dt: 1314.13ms, fracRes: 0.7068, norm(attn): 0.1855, norm(output): 0.9393, norm(x): 0.7670, norm(y): 1.0034, norm:0.7506, tok/sec: 99740.18, flops:104.69, batch-reuse:1
@ 4357 train 4.3313 , allloss: 4.3317, dt: 1330.28ms, fracRes: 0.7069, norm(attn): 0.1865, norm(output): 0.9395, norm(x): 0.7672, norm(y): 1.0033, norm:0.7432, tok/sec: 98529.38, flops:103.42, batch-reuse:1
@ 4358 train 4.3804 , allloss: 4.3806, dt: 1328.54ms, fracRes: 0.7071, norm(attn): 0.1865, norm(output): 0.9397, norm(x): 0.7670, norm(y): 1.0033, norm:0.7502, tok/sec: 98658.51, flops:103.56, batch-reuse:1
@ 4359 train 4.3118 , allloss: 4.3122, dt: 1316.28ms, fracRes: 0.7071, norm(attn): 0.1865, norm(output): 0.9395, norm(x): 0.7674, norm(y): 1.0035, norm:0.7746, tok/sec: 99577.82, flops:104.52, batch-reuse:1
@ 4360 train 4.5861 , allloss: 4.5864, dt: 1292.97ms, fracRes: 0.7072, norm(attn): 0.1865, norm(output): 0.9394, norm(x): 0.7671, norm(y): 1.0034, norm:0.9668, tok/sec: 101372.70, flops:106.40, batch-reuse:1
@ 4361 train 4.4150 , allloss: 4.4151, dt: 1297.93ms, fracRes: 0.7069, norm(attn): 0.1836, norm(output): 0.9394, norm(x): 0.7677, norm(y): 1.0035, norm:0.8393, tok/sec: 100985.06, flops:106.00, batch-reuse:1
@ 4362 train 4.3819 , allloss: 4.3820, dt: 1289.34ms, fracRes: 0.7072, norm(attn): 0.1816, norm(output): 0.9392, norm(x): 0.7671, norm(y): 1.0034, norm:0.7046, tok/sec: 101658.55, flops:106.70, batch-reuse:1
@ 4363 train 4.3419 , allloss: 4.3421, dt: 1301.19ms, fracRes: 0.7072, norm(attn): 0.1846, norm(output): 0.9393, norm(x): 0.7672, norm(y): 1.0033, norm:0.7154, tok/sec: 100732.51, flops:105.73, batch-reuse:1
@ 4364 train 4.3665 , allloss: 4.3668, dt: 1304.87ms, fracRes: 0.7070, norm(attn): 0.1855, norm(output): 0.9395, norm(x): 0.7678, norm(y): 1.0035, norm:0.8378, tok/sec: 100448.31, flops:105.43, batch-reuse:1
@ 4365 train 4.3375 , allloss: 4.3376, dt: 1297.80ms, fracRes: 0.7071, norm(attn): 0.1855, norm(output): 0.9392, norm(x): 0.7672, norm(y): 1.0037, norm:0.7054, tok/sec: 100995.49, flops:106.01, batch-reuse:1
@ 4366 train 4.3555 , allloss: 4.3561, dt: 1283.44ms, fracRes: 0.7073, norm(attn): 0.1855, norm(output): 0.9391, norm(x): 0.7666, norm(y): 1.0036, norm:0.7266, tok/sec: 102125.66, flops:107.19, batch-reuse:1
@ 4367 train 4.2677 , allloss: 4.2846, dt: 1303.18ms, fracRes: 0.7072, norm(attn): 0.1855, norm(output): 0.9392, norm(x): 0.7667, norm(y): 1.0032, norm:0.6306, tok/sec: 100578.27, flops:105.57, batch-reuse:1
@ 4368 train 4.3808 , allloss: 4.3873, dt: 1278.31ms, fracRes: 0.7072, norm(attn): 0.1855, norm(output): 0.9395, norm(x): 0.7675, norm(y): 1.0031, norm:0.6665, tok/sec: 102535.13, flops:107.62, batch-reuse:1
@ 4369 train 4.2901 , allloss: 4.2902, dt: 1300.14ms, fracRes: 0.7072, norm(attn): 0.1846, norm(output): 0.9395, norm(x): 0.7681, norm(y): 1.0032, norm:0.5344, tok/sec: 100813.43, flops:105.82, batch-reuse:1
@ 4370 train 4.2418 , allloss: 4.2447, dt: 1313.02ms, fracRes: 0.7074, norm(attn): 0.1865, norm(output): 0.9394, norm(x): 0.7672, norm(y): 1.0033, norm:0.6035, tok/sec: 99824.71, flops:104.78, batch-reuse:1
@ 4371 train 4.3327 , allloss: 4.3342, dt: 1295.19ms, fracRes: 0.7075, norm(attn): 0.1865, norm(output): 0.9392, norm(x): 0.7666, norm(y): 1.0035, norm:0.6818, tok/sec: 101198.90, flops:106.22, batch-reuse:1
@ 4372 train 4.2908 , allloss: 4.2909, dt: 1315.03ms, fracRes: 0.7072, norm(attn): 0.1865, norm(output): 0.9394, norm(x): 0.7674, norm(y): 1.0033, norm:0.5174, tok/sec: 99672.41, flops:104.62, batch-reuse:1
@ 4373 train 4.3265 , allloss: 4.3272, dt: 1312.99ms, fracRes: 0.7072, norm(attn): 0.1855, norm(output): 0.9393, norm(x): 0.7678, norm(y): 1.0031, norm:0.5715, tok/sec: 99826.93, flops:104.78, batch-reuse:1
@ 4374 train 4.3794 , allloss: 4.3834, dt: 1305.03ms, fracRes: 0.7071, norm(attn): 0.1846, norm(output): 0.9396, norm(x): 0.7682, norm(y): 1.0031, norm:0.5779, tok/sec: 100435.96, flops:105.42, batch-reuse:1
@ 4375 train 4.2958 , allloss: 4.2959, dt: 1294.42ms, fracRes: 0.7072, norm(attn): 0.1855, norm(output): 0.9395, norm(x): 0.7680, norm(y): 1.0033, norm:0.5164, tok/sec: 101259.06, flops:106.28, batch-reuse:1
@ 4376 train 4.3535 , allloss: 4.3537, dt: 1292.12ms, fracRes: 0.7073, norm(attn): 0.1836, norm(output): 0.9397, norm(x): 0.7685, norm(y): 1.0035, norm:0.5836, tok/sec: 101439.70, flops:106.47, batch-reuse:1
@ 4377 train 4.3846 , allloss: 4.3851, dt: 1296.41ms, fracRes: 0.7076, norm(attn): 0.1846, norm(output): 0.9394, norm(x): 0.7679, norm(y): 1.0036, norm:0.5220, tok/sec: 101104.11, flops:106.12, batch-reuse:1
@ 4378 train 4.2501 , allloss: 4.2506, dt: 1292.27ms, fracRes: 0.7078, norm(attn): 0.1836, norm(output): 0.9393, norm(x): 0.7676, norm(y): 1.0036, norm:0.5889, tok/sec: 101427.91, flops:106.46, batch-reuse:1
@ 4379 train 4.2811 , allloss: 4.2812, dt: 1300.14ms, fracRes: 0.7076, norm(attn): 0.1816, norm(output): 0.9394, norm(x): 0.7681, norm(y): 1.0033, norm:0.6242, tok/sec: 100813.64, flops:105.82, batch-reuse:1
@ 4380 train 4.3104 , allloss: 4.3124, dt: 1298.55ms, fracRes: 0.7075, norm(attn): 0.1836, norm(output): 0.9392, norm(x): 0.7681, norm(y): 1.0034, norm:0.5745, tok/sec: 100937.28, flops:105.95, batch-reuse:1
@ 4381 train 4.3174 , allloss: 4.3181, dt: 1318.18ms, fracRes: 0.7072, norm(attn): 0.1855, norm(output): 0.9396, norm(x): 0.7687, norm(y): 1.0033, norm:0.6211, tok/sec: 99434.13, flops:104.37, batch-reuse:1
@ 4382 train 4.3601 , allloss: 4.3603, dt: 1337.97ms, fracRes: 0.7072, norm(attn): 0.1826, norm(output): 0.9394, norm(x): 0.7682, norm(y): 1.0034, norm:0.5608, tok/sec: 97963.61, flops:102.83, batch-reuse:1
@ 4383 train 4.2843 , allloss: 4.2843, dt: 1351.51ms, fracRes: 0.7072, norm(attn): 0.1826, norm(output): 0.9396, norm(x): 0.7681, norm(y): 1.0034, norm:0.5827, tok/sec: 96981.58, flops:101.79, batch-reuse:1
@ 4384 train 4.3172 , allloss: 4.3174, dt: 1337.65ms, fracRes: 0.7075, norm(attn): 0.1826, norm(output): 0.9393, norm(x): 0.7670, norm(y): 1.0033, norm:0.5895, tok/sec: 97986.68, flops:102.85, batch-reuse:1
@ 4385 train 4.3457 , allloss: 4.3458, dt: 1328.87ms, fracRes: 0.7075, norm(attn): 0.1836, norm(output): 0.9394, norm(x): 0.7674, norm(y): 1.0033, norm:0.6029, tok/sec: 98634.51, flops:103.53, batch-reuse:1
@ 4386 train 4.2887 , allloss: 4.2891, dt: 1284.66ms, fracRes: 0.7072, norm(attn): 0.1836, norm(output): 0.9397, norm(x): 0.7683, norm(y): 1.0033, norm:0.6568, tok/sec: 102028.92, flops:107.09, batch-reuse:1
@ 4387 train 4.4003 , allloss: 4.4003, dt: 1316.29ms, fracRes: 0.7070, norm(attn): 0.1836, norm(output): 0.9398, norm(x): 0.7690, norm(y): 1.0033, norm:0.8319, tok/sec: 99576.58, flops:104.52, batch-reuse:1
@ 4388 train 4.3787 , allloss: 4.3788, dt: 1318.65ms, fracRes: 0.7071, norm(attn): 0.1846, norm(output): 0.9394, norm(x): 0.7677, norm(y): 1.0034, norm:0.7003, tok/sec: 99398.52, flops:104.33, batch-reuse:1
@ 4389 train 4.3002 , allloss: 4.3005, dt: 1308.85ms, fracRes: 0.7072, norm(attn): 0.1855, norm(output): 0.9394, norm(x): 0.7666, norm(y): 1.0034, norm:0.5940, tok/sec: 100143.03, flops:105.11, batch-reuse:1
@ 4390 train 4.3208 , allloss: 4.3208, dt: 1327.84ms, fracRes: 0.7073, norm(attn): 0.1846, norm(output): 0.9394, norm(x): 0.7668, norm(y): 1.0034, norm:0.6667, tok/sec: 98710.88, flops:103.61, batch-reuse:1
@ 4391 train 4.2176 , allloss: 4.2176, dt: 1332.98ms, fracRes: 0.7071, norm(attn): 0.1816, norm(output): 0.9394, norm(x): 0.7677, norm(y): 1.0034, norm:0.6589, tok/sec: 98330.10, flops:103.21, batch-reuse:1
@ 4392 train 4.2422 , allloss: 4.2426, dt: 1322.44ms, fracRes: 0.7071, norm(attn): 0.1807, norm(output): 0.9393, norm(x): 0.7677, norm(y): 1.0034, norm:0.7104, tok/sec: 99114.11, flops:104.03, batch-reuse:1
@ 4393 train 4.3056 , allloss: 4.3063, dt: 1285.23ms, fracRes: 0.7072, norm(attn): 0.1797, norm(output): 0.9395, norm(x): 0.7675, norm(y): 1.0032, norm:0.7042, tok/sec: 101983.50, flops:107.05, batch-reuse:1
@ 4394 train 4.3902 , allloss: 4.3902, dt: 1298.30ms, fracRes: 0.7074, norm(attn): 0.1797, norm(output): 0.9394, norm(x): 0.7674, norm(y): 1.0034, norm:0.5601, tok/sec: 100956.63, flops:105.97, batch-reuse:1
@ 4395 train 4.1764 , allloss: 4.1775, dt: 1296.06ms, fracRes: 0.7072, norm(attn): 0.1836, norm(output): 0.9396, norm(x): 0.7684, norm(y): 1.0034, norm:0.5538, tok/sec: 101131.32, flops:106.15, batch-reuse:1
@ 4396 train 4.2763 , allloss: 4.2764, dt: 1305.14ms, fracRes: 0.7071, norm(attn): 0.1846, norm(output): 0.9395, norm(x): 0.7688, norm(y): 1.0036, norm:0.6087, tok/sec: 100427.19, flops:105.41, batch-reuse:1
@ 4397 train 4.1648 , allloss: 4.1650, dt: 1301.67ms, fracRes: 0.7073, norm(attn): 0.1846, norm(output): 0.9395, norm(x): 0.7680, norm(y): 1.0036, norm:0.5764, tok/sec: 100694.89, flops:105.69, batch-reuse:1
@ 4398 train 4.0837 , allloss: 4.0838, dt: 1274.87ms, fracRes: 0.7073, norm(attn): 0.1855, norm(output): 0.9392, norm(x): 0.7670, norm(y): 1.0033, norm:0.5611, tok/sec: 102812.33, flops:107.92, batch-reuse:1
@ 4399 train 4.1452 , allloss: 4.1453, dt: 1309.18ms, fracRes: 0.7075, norm(attn): 0.1875, norm(output): 0.9390, norm(x): 0.7668, norm(y): 1.0032, norm:0.6907, tok/sec: 100118.01, flops:105.09, batch-reuse:1
@ 4400 train 4.1725 , allloss: 4.1726, dt: 1286.88ms, fracRes: 0.7072, norm(attn): 0.1836, norm(output): 0.9391, norm(x): 0.7682, norm(y): 1.0035, norm:0.6867, tok/sec: 101852.86, flops:106.91, batch-reuse:1
@ 4401 train 4.0951 , allloss: 4.0951, dt: 1296.11ms, fracRes: 0.7069, norm(attn): 0.1855, norm(output): 0.9392, norm(x): 0.7693, norm(y): 1.0035, norm:0.5311, tok/sec: 101127.45, flops:106.15, batch-reuse:1
@ 4402 train 4.2449 , allloss: 4.2449, dt: 1302.30ms, fracRes: 0.7069, norm(attn): 0.1855, norm(output): 0.9393, norm(x): 0.7692, norm(y): 1.0035, norm:0.7458, tok/sec: 100646.66, flops:105.64, batch-reuse:1
@ 4403 train 4.2213 , allloss: 4.2214, dt: 1297.83ms, fracRes: 0.7069, norm(attn): 0.1836, norm(output): 0.9393, norm(x): 0.7686, norm(y): 1.0034, norm:0.6117, tok/sec: 100993.28, flops:106.01, batch-reuse:1
@ 4404 train 4.1869 , allloss: 4.1870, dt: 1296.87ms, fracRes: 0.7071, norm(attn): 0.1816, norm(output): 0.9394, norm(x): 0.7684, norm(y): 1.0032, norm:0.6175, tok/sec: 101067.84, flops:106.08, batch-reuse:1
@ 4405 train 4.2478 , allloss: 4.2480, dt: 1314.62ms, fracRes: 0.7073, norm(attn): 0.1846, norm(output): 0.9392, norm(x): 0.7679, norm(y): 1.0033, norm:0.5943, tok/sec: 99703.41, flops:104.65, batch-reuse:1
@ 4406 train 4.1550 , allloss: 4.1552, dt: 1298.10ms, fracRes: 0.7075, norm(attn): 0.1855, norm(output): 0.9392, norm(x): 0.7676, norm(y): 1.0034, norm:0.6157, tok/sec: 100972.17, flops:105.98, batch-reuse:1
@ 4407 train 4.2464 , allloss: 4.2465, dt: 1344.71ms, fracRes: 0.7074, norm(attn): 0.1846, norm(output): 0.9394, norm(x): 0.7683, norm(y): 1.0034, norm:0.5494, tok/sec: 97472.31, flops:102.31, batch-reuse:1
@ 4408 train 4.1749 , allloss: 4.1750, dt: 1322.75ms, fracRes: 0.7073, norm(attn): 0.1846, norm(output): 0.9395, norm(x): 0.7688, norm(y): 1.0034, norm:0.6629, tok/sec: 99090.61, flops:104.01, batch-reuse:1
@ 4409 train 4.1580 , allloss: 4.1583, dt: 1306.64ms, fracRes: 0.7071, norm(attn): 0.1816, norm(output): 0.9395, norm(x): 0.7688, norm(y): 1.0033, norm:0.5843, tok/sec: 100311.87, flops:105.29, batch-reuse:1
@ 4410 train 4.1394 , allloss: 4.1397, dt: 1324.91ms, fracRes: 0.7070, norm(attn): 0.1846, norm(output): 0.9393, norm(x): 0.7686, norm(y): 1.0032, norm:0.6821, tok/sec: 98928.85, flops:103.84, batch-reuse:1
@ 4411 train 4.1352 , allloss: 4.1355, dt: 1333.45ms, fracRes: 0.7070, norm(attn): 0.1846, norm(output): 0.9393, norm(x): 0.7684, norm(y): 1.0031, norm:0.5949, tok/sec: 98295.31, flops:103.17, batch-reuse:1
@ 4412 train 4.2496 , allloss: 4.2502, dt: 1333.59ms, fracRes: 0.7073, norm(attn): 0.1836, norm(output): 0.9394, norm(x): 0.7678, norm(y): 1.0032, norm:0.5925, tok/sec: 98285.15, flops:103.16, batch-reuse:1
@ 4413 train 4.2089 , allloss: 4.2094, dt: 1297.88ms, fracRes: 0.7074, norm(attn): 0.1836, norm(output): 0.9394, norm(x): 0.7678, norm(y): 1.0034, norm:0.7104, tok/sec: 100989.01, flops:106.00, batch-reuse:1
@ 4414 train 4.1150 , allloss: 4.1158, dt: 1296.01ms, fracRes: 0.7073, norm(attn): 0.1836, norm(output): 0.9394, norm(x): 0.7681, norm(y): 1.0033, norm:0.7339, tok/sec: 101134.82, flops:106.15, batch-reuse:1
@ 4415 train 4.1313 , allloss: 4.1317, dt: 1315.17ms, fracRes: 0.7072, norm(attn): 0.1816, norm(output): 0.9394, norm(x): 0.7684, norm(y): 1.0031, norm:0.6728, tok/sec: 99661.98, flops:104.61, batch-reuse:1
@ 4416 train 4.1379 , allloss: 4.1379, dt: 1310.69ms, fracRes: 0.7071, norm(attn): 0.1826, norm(output): 0.9392, norm(x): 0.7684, norm(y): 1.0032, norm:0.6312, tok/sec: 100002.20, flops:104.97, batch-reuse:1
@ 4417 train 4.1669 , allloss: 4.1673, dt: 1331.44ms, fracRes: 0.7071, norm(attn): 0.1826, norm(output): 0.9393, norm(x): 0.7682, norm(y): 1.0032, norm:0.6266, tok/sec: 98443.53, flops:103.33, batch-reuse:1
@ 4418 train 4.1273 , allloss: 4.1273, dt: 1304.08ms, fracRes: 0.7073, norm(attn): 0.1855, norm(output): 0.9394, norm(x): 0.7676, norm(y): 1.0031, norm:0.6631, tok/sec: 100508.97, flops:105.50, batch-reuse:1
@ 4419 train 4.1141 , allloss: 4.1146, dt: 1312.74ms, fracRes: 0.7072, norm(attn): 0.1855, norm(output): 0.9392, norm(x): 0.7674, norm(y): 1.0033, norm:0.7549, tok/sec: 99846.28, flops:104.80, batch-reuse:1
@ 4420 train 4.1438 , allloss: 4.1439, dt: 1285.49ms, fracRes: 0.7071, norm(attn): 0.1836, norm(output): 0.9392, norm(x): 0.7679, norm(y): 1.0035, norm:0.5078, tok/sec: 101962.82, flops:107.02, batch-reuse:1
@ 4421 train 4.2300 , allloss: 4.2302, dt: 1296.07ms, fracRes: 0.7069, norm(attn): 0.1816, norm(output): 0.9393, norm(x): 0.7687, norm(y): 1.0035, norm:0.6965, tok/sec: 101130.33, flops:106.15, batch-reuse:1
@ 4422 train 4.1141 , allloss: 4.1142, dt: 1313.84ms, fracRes: 0.7069, norm(attn): 0.1836, norm(output): 0.9394, norm(x): 0.7685, norm(y): 1.0032, norm:0.5687, tok/sec: 99762.72, flops:104.71, batch-reuse:1
@ 4423 train 4.1399 , allloss: 4.1401, dt: 1292.00ms, fracRes: 0.7070, norm(attn): 0.1836, norm(output): 0.9394, norm(x): 0.7681, norm(y): 1.0031, norm:0.6631, tok/sec: 101448.61, flops:106.48, batch-reuse:1
@ 4424 train 4.1578 , allloss: 4.1579, dt: 1311.96ms, fracRes: 0.7070, norm(attn): 0.1846, norm(output): 0.9392, norm(x): 0.7682, norm(y): 1.0033, norm:0.6696, tok/sec: 99905.67, flops:104.86, batch-reuse:1
@ 4425 train 4.2910 , allloss: 4.2910, dt: 1319.57ms, fracRes: 0.7073, norm(attn): 0.1797, norm(output): 0.9396, norm(x): 0.7684, norm(y): 1.0033, norm:0.9215, tok/sec: 99329.45, flops:104.26, batch-reuse:1
@ 4426 train 4.4514 , allloss: 4.4517, dt: 1305.03ms, fracRes: 0.7074, norm(attn): 0.1836, norm(output): 0.9393, norm(x): 0.7666, norm(y): 1.0034, norm:1.1365, tok/sec: 100436.13, flops:105.42, batch-reuse:1
@ 4427 train 4.2021 , allloss: 4.2022, dt: 1299.50ms, fracRes: 0.7072, norm(attn): 0.1816, norm(output): 0.9395, norm(x): 0.7677, norm(y): 1.0035, norm:0.7446, tok/sec: 100863.39, flops:105.87, batch-reuse:1
@ 4428 train 4.2371 , allloss: 4.2373, dt: 1265.79ms, fracRes: 0.7073, norm(attn): 0.1855, norm(output): 0.9391, norm(x): 0.7677, norm(y): 1.0035, norm:0.7463, tok/sec: 103549.60, flops:108.69, batch-reuse:1
@ 4429 train 4.2361 , allloss: 4.2362, dt: 1292.60ms, fracRes: 0.7073, norm(attn): 0.1836, norm(output): 0.9395, norm(x): 0.7681, norm(y): 1.0033, norm:0.6397, tok/sec: 101401.57, flops:106.43, batch-reuse:1
@ 4430 train 4.2445 , allloss: 4.2447, dt: 1296.68ms, fracRes: 0.7075, norm(attn): 0.1836, norm(output): 0.9395, norm(x): 0.7684, norm(y): 1.0034, norm:0.5978, tok/sec: 101082.49, flops:106.10, batch-reuse:1
@ 4431 train 4.3692 , allloss: 4.3694, dt: 1296.05ms, fracRes: 0.7076, norm(attn): 0.1855, norm(output): 0.9396, norm(x): 0.7682, norm(y): 1.0033, norm:0.7033, tok/sec: 101131.63, flops:106.15, batch-reuse:1
@ 4432 train 4.3797 , allloss: 4.3798, dt: 1288.17ms, fracRes: 0.7080, norm(attn): 0.1855, norm(output): 0.9396, norm(x): 0.7679, norm(y): 1.0034, norm:0.7302, tok/sec: 101750.48, flops:106.80, batch-reuse:1
@ 4433 train 4.1323 , allloss: 4.1324, dt: 1272.27ms, fracRes: 0.7076, norm(attn): 0.1855, norm(output): 0.9394, norm(x): 0.7685, norm(y): 1.0032, norm:0.6930, tok/sec: 103022.22, flops:108.14, batch-reuse:1
@ 4434 train 4.1806 , allloss: 4.1808, dt: 1298.45ms, fracRes: 0.7078, norm(attn): 0.1836, norm(output): 0.9392, norm(x): 0.7678, norm(y): 1.0032, norm:0.7268, tok/sec: 100945.23, flops:105.96, batch-reuse:1
@ 4435 train 4.1701 , allloss: 4.1703, dt: 1299.52ms, fracRes: 0.7078, norm(attn): 0.1855, norm(output): 0.9395, norm(x): 0.7678, norm(y): 1.0031, norm:0.6781, tok/sec: 100861.61, flops:105.87, batch-reuse:1
@ 4436 train 4.2066 , allloss: 4.2067, dt: 1299.11ms, fracRes: 0.7079, norm(attn): 0.1875, norm(output): 0.9394, norm(x): 0.7675, norm(y): 1.0030, norm:0.7004, tok/sec: 100894.06, flops:105.90, batch-reuse:1
@ 4437 train 4.1550 , allloss: 4.1602, dt: 1304.44ms, fracRes: 0.7078, norm(attn): 0.1865, norm(output): 0.9394, norm(x): 0.7679, norm(y): 1.0032, norm:0.6154, tok/sec: 100481.67, flops:105.47, batch-reuse:1
@ 4438 train 4.1943 , allloss: 4.1943, dt: 1296.65ms, fracRes: 0.7073, norm(attn): 0.1836, norm(output): 0.9396, norm(x): 0.7694, norm(y): 1.0034, norm:0.6760, tok/sec: 101085.35, flops:106.10, batch-reuse:1
@ 4439 train 4.2381 , allloss: 4.2383, dt: 1295.43ms, fracRes: 0.7073, norm(attn): 0.1836, norm(output): 0.9396, norm(x): 0.7697, norm(y): 1.0035, norm:0.6731, tok/sec: 101180.44, flops:106.20, batch-reuse:1
@ 4440 train 4.2232 , allloss: 4.2234, dt: 1300.28ms, fracRes: 0.7075, norm(attn): 0.1836, norm(output): 0.9396, norm(x): 0.7693, norm(y): 1.0033, norm:0.6217, tok/sec: 100803.10, flops:105.81, batch-reuse:1
@ 4441 train 4.3189 , allloss: 4.3200, dt: 1312.93ms, fracRes: 0.7076, norm(attn): 0.1855, norm(output): 0.9394, norm(x): 0.7681, norm(y): 1.0033, norm:0.7169, tok/sec: 99831.61, flops:104.79, batch-reuse:1
@ 4442 train 4.1897 , allloss: 4.1899, dt: 1315.87ms, fracRes: 0.7075, norm(attn): 0.1855, norm(output): 0.9396, norm(x): 0.7682, norm(y): 1.0035, norm:0.5878, tok/sec: 99608.44, flops:104.55, batch-reuse:1
@ 4443 train 4.2388 , allloss: 4.2389, dt: 1304.65ms, fracRes: 0.7075, norm(attn): 0.1855, norm(output): 0.9395, norm(x): 0.7680, norm(y): 1.0035, norm:0.6916, tok/sec: 100465.33, flops:105.45, batch-reuse:1
@ 4444 train 4.2745 , allloss: 4.2750, dt: 1287.43ms, fracRes: 0.7075, norm(attn): 0.1855, norm(output): 0.9393, norm(x): 0.7681, norm(y): 1.0035, norm:0.8730, tok/sec: 101809.23, flops:106.86, batch-reuse:1
@ 4445 train 4.3589 , allloss: 4.3604, dt: 1301.65ms, fracRes: 0.7076, norm(attn): 0.1875, norm(output): 0.9391, norm(x): 0.7674, norm(y): 1.0035, norm:1.1014, tok/sec: 100696.95, flops:105.69, batch-reuse:1
@ 4446 train 4.4391 , allloss: 4.4433, dt: 1318.69ms, fracRes: 0.7076, norm(attn): 0.1855, norm(output): 0.9398, norm(x): 0.7682, norm(y): 1.0032, norm:1.2723, tok/sec: 99395.46, flops:104.33, batch-reuse:1
@ 4447 train 4.3504 , allloss: 4.3508, dt: 1297.11ms, fracRes: 0.7074, norm(attn): 0.1865, norm(output): 0.9398, norm(x): 0.7688, norm(y): 1.0030, norm:0.7292, tok/sec: 101049.14, flops:106.06, batch-reuse:1
@ 4448 train 4.2329 , allloss: 4.2330, dt: 1291.84ms, fracRes: 0.7072, norm(attn): 0.1855, norm(output): 0.9396, norm(x): 0.7690, norm(y): 1.0030, norm:0.7987, tok/sec: 101461.34, flops:106.50, batch-reuse:1
@ 4449 train 4.4230 , allloss: 4.4234, dt: 1305.65ms, fracRes: 0.7073, norm(attn): 0.1855, norm(output): 0.9396, norm(x): 0.7691, norm(y): 1.0033, norm:0.7923, tok/sec: 100388.46, flops:105.37, batch-reuse:1
@ 4450 train 4.3291 , allloss: 4.3292, dt: 1303.64ms, fracRes: 0.7072, norm(attn): 0.1855, norm(output): 0.9395, norm(x): 0.7689, norm(y): 1.0034, norm:0.9096, tok/sec: 100543.01, flops:105.53, batch-reuse:1
@ 4451 train 4.4977 , allloss: 4.4999, dt: 1296.59ms, fracRes: 0.7076, norm(attn): 0.1846, norm(output): 0.9399, norm(x): 0.7681, norm(y): 1.0032, norm:0.6344, tok/sec: 101089.76, flops:106.11, batch-reuse:1
@ 4452 train 4.2969 , allloss: 4.3019, dt: 1330.07ms, fracRes: 0.7077, norm(attn): 0.1865, norm(output): 0.9397, norm(x): 0.7672, norm(y): 1.0031, norm:0.7739, tok/sec: 98545.38, flops:103.44, batch-reuse:1
@ 4453 train 4.3343 , allloss: 4.3345, dt: 1312.80ms, fracRes: 0.7077, norm(attn): 0.1855, norm(output): 0.9395, norm(x): 0.7674, norm(y): 1.0030, norm:0.6913, tok/sec: 99841.67, flops:104.80, batch-reuse:1
@ 4454 train 4.2929 , allloss: 4.2931, dt: 1275.37ms, fracRes: 0.7073, norm(attn): 0.1855, norm(output): 0.9395, norm(x): 0.7680, norm(y): 1.0030, norm:0.7045, tok/sec: 102771.62, flops:107.87, batch-reuse:1
@ 4455 train 4.3058 , allloss: 4.3060, dt: 1310.77ms, fracRes: 0.7071, norm(attn): 0.1855, norm(output): 0.9395, norm(x): 0.7683, norm(y): 1.0032, norm:0.6701, tok/sec: 99996.00, flops:104.96, batch-reuse:1
@ 4456 train 4.3653 , allloss: 4.3654, dt: 1330.87ms, fracRes: 0.7069, norm(attn): 0.1865, norm(output): 0.9395, norm(x): 0.7688, norm(y): 1.0032, norm:0.5582, tok/sec: 98485.87, flops:103.37, batch-reuse:1
@ 4457 train 4.3842 , allloss: 4.3843, dt: 1310.91ms, fracRes: 0.7069, norm(attn): 0.1855, norm(output): 0.9397, norm(x): 0.7697, norm(y): 1.0031, norm:0.6711, tok/sec: 99985.14, flops:104.95, batch-reuse:1
@ 4458 train 4.2214 , allloss: 4.2215, dt: 1326.78ms, fracRes: 0.7071, norm(attn): 0.1846, norm(output): 0.9396, norm(x): 0.7693, norm(y): 1.0030, norm:0.6207, tok/sec: 98789.62, flops:103.69, batch-reuse:1
@ 4459 train 4.2608 , allloss: 4.2609, dt: 1327.29ms, fracRes: 0.7073, norm(attn): 0.1846, norm(output): 0.9395, norm(x): 0.7691, norm(y): 1.0031, norm:0.5612, tok/sec: 98751.62, flops:103.65, batch-reuse:1
@ 4460 train 4.3966 , allloss: 4.3967, dt: 1308.35ms, fracRes: 0.7075, norm(attn): 0.1816, norm(output): 0.9396, norm(x): 0.7690, norm(y): 1.0032, norm:0.5788, tok/sec: 100180.85, flops:105.15, batch-reuse:1
@ 4461 train 4.3171 , allloss: 4.3175, dt: 1293.73ms, fracRes: 0.7075, norm(attn): 0.1807, norm(output): 0.9396, norm(x): 0.7687, norm(y): 1.0031, norm:0.6814, tok/sec: 101313.44, flops:106.34, batch-reuse:1
@ 4462 train 4.3696 , allloss: 4.3699, dt: 1300.23ms, fracRes: 0.7076, norm(attn): 0.1777, norm(output): 0.9396, norm(x): 0.7686, norm(y): 1.0031, norm:0.6567, tok/sec: 100806.70, flops:105.81, batch-reuse:1
@ 4463 train 4.3490 , allloss: 4.3491, dt: 1290.73ms, fracRes: 0.7075, norm(attn): 0.1797, norm(output): 0.9396, norm(x): 0.7692, norm(y): 1.0031, norm:0.6512, tok/sec: 101548.40, flops:106.59, batch-reuse:1
@ 4464 train 4.3052 , allloss: 4.3052, dt: 1304.72ms, fracRes: 0.7076, norm(attn): 0.1816, norm(output): 0.9396, norm(x): 0.7691, norm(y): 1.0029, norm:0.7390, tok/sec: 100459.75, flops:105.45, batch-reuse:1
@ 4465 train 4.2934 , allloss: 4.2938, dt: 1321.69ms, fracRes: 0.7076, norm(attn): 0.1816, norm(output): 0.9396, norm(x): 0.7684, norm(y): 1.0031, norm:0.6394, tok/sec: 99169.71, flops:104.09, batch-reuse:1
@ 4466 train 4.2984 , allloss: 4.2986, dt: 1291.78ms, fracRes: 0.7075, norm(attn): 0.1836, norm(output): 0.9397, norm(x): 0.7691, norm(y): 1.0033, norm:0.5897, tok/sec: 101466.16, flops:106.50, batch-reuse:1
@ 4467 train 4.2857 , allloss: 4.2858, dt: 1284.81ms, fracRes: 0.7076, norm(attn): 0.1836, norm(output): 0.9396, norm(x): 0.7693, norm(y): 1.0035, norm:0.6011, tok/sec: 102017.01, flops:107.08, batch-reuse:1
@ 4468 train 4.2774 , allloss: 4.2775, dt: 1284.16ms, fracRes: 0.7076, norm(attn): 0.1846, norm(output): 0.9396, norm(x): 0.7691, norm(y): 1.0033, norm:0.5794, tok/sec: 102068.65, flops:107.13, batch-reuse:1
@ 4469 train 4.2908 , allloss: 4.2909, dt: 1295.55ms, fracRes: 0.7077, norm(attn): 0.1826, norm(output): 0.9399, norm(x): 0.7686, norm(y): 1.0030, norm:0.6456, tok/sec: 101170.70, flops:106.19, batch-reuse:1
@ 4470 train 4.4007 , allloss: 4.4008, dt: 1305.51ms, fracRes: 0.7077, norm(attn): 0.1836, norm(output): 0.9399, norm(x): 0.7687, norm(y): 1.0029, norm:0.6437, tok/sec: 100399.06, flops:105.38, batch-reuse:1
@ 4471 train 4.2573 , allloss: 4.2574, dt: 1284.42ms, fracRes: 0.7077, norm(attn): 0.1826, norm(output): 0.9395, norm(x): 0.7683, norm(y): 1.0032, norm:0.8637, tok/sec: 102047.29, flops:107.11, batch-reuse:1
@ 4472 train 4.2630 , allloss: 4.2630, dt: 1316.64ms, fracRes: 0.7080, norm(attn): 0.1846, norm(output): 0.9392, norm(x): 0.7676, norm(y): 1.0034, norm:1.2714, tok/sec: 99550.00, flops:104.49, batch-reuse:1
@ 4473 train 4.3830 , allloss: 4.3834, dt: 1341.48ms, fracRes: 0.7081, norm(attn): 0.1836, norm(output): 0.9393, norm(x): 0.7675, norm(y): 1.0033, norm:0.7796, tok/sec: 97707.36, flops:102.56, batch-reuse:1
@ 4474 train 4.3425 , allloss: 4.3426, dt: 1326.47ms, fracRes: 0.7078, norm(attn): 0.1816, norm(output): 0.9396, norm(x): 0.7688, norm(y): 1.0034, norm:0.9680, tok/sec: 98812.43, flops:103.72, batch-reuse:1
@ 4475 train 4.2266 , allloss: 4.2269, dt: 1295.88ms, fracRes: 0.7079, norm(attn): 0.1816, norm(output): 0.9393, norm(x): 0.7683, norm(y): 1.0033, norm:0.9293, tok/sec: 101145.37, flops:106.17, batch-reuse:1
@ 4476 train 4.2566 , allloss: 4.2581, dt: 1319.88ms, fracRes: 0.7080, norm(attn): 0.1836, norm(output): 0.9394, norm(x): 0.7681, norm(y): 1.0029, norm:0.8443, tok/sec: 99306.25, flops:104.24, batch-reuse:1
@ 4477 train 4.3416 , allloss: 4.3420, dt: 1300.04ms, fracRes: 0.7074, norm(attn): 0.1836, norm(output): 0.9399, norm(x): 0.7698, norm(y): 1.0029, norm:0.6695, tok/sec: 100821.59, flops:105.83, batch-reuse:1
@ 4478 train 4.2197 , allloss: 4.2199, dt: 1316.04ms, fracRes: 0.7074, norm(attn): 0.1836, norm(output): 0.9397, norm(x): 0.7698, norm(y): 1.0032, norm:0.7602, tok/sec: 99595.45, flops:104.54, batch-reuse:1
@ 4479 train 4.2416 , allloss: 4.2418, dt: 1309.83ms, fracRes: 0.7075, norm(attn): 0.1846, norm(output): 0.9396, norm(x): 0.7693, norm(y): 1.0034, norm:0.6593, tok/sec: 100067.99, flops:105.03, batch-reuse:1
@ 4480 train 4.3307 , allloss: 4.3313, dt: 1325.78ms, fracRes: 0.7078, norm(attn): 0.1826, norm(output): 0.9394, norm(x): 0.7681, norm(y): 1.0033, norm:0.6462, tok/sec: 98864.36, flops:103.77, batch-reuse:1
@ 4481 train 4.3233 , allloss: 4.3234, dt: 1291.00ms, fracRes: 0.7077, norm(attn): 0.1816, norm(output): 0.9394, norm(x): 0.7678, norm(y): 1.0031, norm:0.6086, tok/sec: 101527.26, flops:106.57, batch-reuse:1
@ 4482 train 4.4024 , allloss: 4.4025, dt: 1337.62ms, fracRes: 0.7076, norm(attn): 0.1797, norm(output): 0.9396, norm(x): 0.7687, norm(y): 1.0028, norm:0.6879, tok/sec: 97988.81, flops:102.85, batch-reuse:1
@ 4483 train 4.4079 , allloss: 4.4085, dt: 1334.65ms, fracRes: 0.7075, norm(attn): 0.1816, norm(output): 0.9399, norm(x): 0.7696, norm(y): 1.0030, norm:0.6646, tok/sec: 98206.74, flops:103.08, batch-reuse:1
@ 4484 train 4.2552 , allloss: 4.2553, dt: 1333.41ms, fracRes: 0.7077, norm(attn): 0.1836, norm(output): 0.9398, norm(x): 0.7690, norm(y): 1.0031, norm:0.6036, tok/sec: 98298.06, flops:103.18, batch-reuse:1
@ 4485 train 4.3493 , allloss: 4.3496, dt: 1332.13ms, fracRes: 0.7076, norm(attn): 0.1846, norm(output): 0.9396, norm(x): 0.7682, norm(y): 1.0031, norm:0.6654, tok/sec: 98393.00, flops:103.28, batch-reuse:1
@ 4486 train 4.2898 , allloss: 4.2899, dt: 1324.25ms, fracRes: 0.7078, norm(attn): 0.1826, norm(output): 0.9396, norm(x): 0.7677, norm(y): 1.0031, norm:0.7398, tok/sec: 98978.40, flops:103.89, batch-reuse:1
@ 4487 train 4.3477 , allloss: 4.3477, dt: 1292.17ms, fracRes: 0.7075, norm(attn): 0.1836, norm(output): 0.9395, norm(x): 0.7682, norm(y): 1.0031, norm:0.7811, tok/sec: 101435.49, flops:106.47, batch-reuse:1
@ 4488 train 4.3617 , allloss: 4.3618, dt: 1328.99ms, fracRes: 0.7075, norm(attn): 0.1807, norm(output): 0.9398, norm(x): 0.7686, norm(y): 1.0031, norm:0.5917, tok/sec: 98625.41, flops:103.52, batch-reuse:1
@ 4489 train 4.3611 , allloss: 4.3615, dt: 1296.55ms, fracRes: 0.7078, norm(attn): 0.1797, norm(output): 0.9402, norm(x): 0.7679, norm(y): 1.0030, norm:0.6854, tok/sec: 101092.79, flops:106.11, batch-reuse:1
@ 4490 train 4.3609 , allloss: 4.3611, dt: 1310.52ms, fracRes: 0.7079, norm(attn): 0.1816, norm(output): 0.9398, norm(x): 0.7672, norm(y): 1.0030, norm:0.6037, tok/sec: 100015.21, flops:104.98, batch-reuse:1
@ 4491 train 4.3088 , allloss: 4.3089, dt: 1305.91ms, fracRes: 0.7076, norm(attn): 0.1826, norm(output): 0.9398, norm(x): 0.7676, norm(y): 1.0030, norm:0.6396, tok/sec: 100368.01, flops:105.35, batch-reuse:1
@ 4492 train 4.3823 , allloss: 4.3825, dt: 1317.53ms, fracRes: 0.7076, norm(attn): 0.1826, norm(output): 0.9397, norm(x): 0.7681, norm(y): 1.0030, norm:0.5671, tok/sec: 99483.08, flops:104.42, batch-reuse:1
@ 4493 train 4.2739 , allloss: 4.2742, dt: 1301.68ms, fracRes: 0.7078, norm(attn): 0.1816, norm(output): 0.9400, norm(x): 0.7689, norm(y): 1.0031, norm:0.6280, tok/sec: 100694.22, flops:105.69, batch-reuse:1
@ 4494 train 4.3621 , allloss: 4.3622, dt: 1302.56ms, fracRes: 0.7080, norm(attn): 0.1836, norm(output): 0.9396, norm(x): 0.7685, norm(y): 1.0031, norm:0.7474, tok/sec: 100626.62, flops:105.62, batch-reuse:1
@ 4495 train 4.3574 , allloss: 4.3575, dt: 1311.02ms, fracRes: 0.7080, norm(attn): 0.1797, norm(output): 0.9396, norm(x): 0.7692, norm(y): 1.0029, norm:0.6722, tok/sec: 99976.94, flops:104.94, batch-reuse:1
@ 4496 train 4.3832 , allloss: 4.3833, dt: 1321.19ms, fracRes: 0.7077, norm(attn): 0.1807, norm(output): 0.9402, norm(x): 0.7702, norm(y): 1.0029, norm:0.6790, tok/sec: 99207.74, flops:104.13, batch-reuse:1
@ 4497 train 4.3744 , allloss: 4.3745, dt: 1342.06ms, fracRes: 0.7077, norm(attn): 0.1807, norm(output): 0.9403, norm(x): 0.7697, norm(y): 1.0031, norm:0.5062, tok/sec: 97664.62, flops:102.51, batch-reuse:1
@ 4498 train 4.3337 , allloss: 4.3343, dt: 1313.52ms, fracRes: 0.7079, norm(attn): 0.1797, norm(output): 0.9400, norm(x): 0.7688, norm(y): 1.0032, norm:0.6350, tok/sec: 99787.09, flops:104.74, batch-reuse:1
@ 4499 train 4.3710 , allloss: 4.3712, dt: 1313.12ms, fracRes: 0.7079, norm(attn): 0.1787, norm(output): 0.9398, norm(x): 0.7684, norm(y): 1.0032, norm:0.6407, tok/sec: 99816.91, flops:104.77, batch-reuse:1
@ 4500 train 4.2739 , allloss: 4.2749, dt: 1304.86ms, fracRes: 0.7079, norm(attn): 0.1816, norm(output): 0.9397, norm(x): 0.7682, norm(y): 1.0031, norm:0.5373, tok/sec: 100448.90, flops:105.43, batch-reuse:1
@ 4501 train 4.2863 , allloss: 4.2864, dt: 1351.29ms, fracRes: 0.7078, norm(attn): 0.1816, norm(output): 0.9398, norm(x): 0.7686, norm(y): 1.0031, norm:0.5655, tok/sec: 96997.92, flops:101.81, batch-reuse:1
@ 4502 train 4.3264 , allloss: 4.3265, dt: 1301.87ms, fracRes: 0.7076, norm(attn): 0.1826, norm(output): 0.9397, norm(x): 0.7690, norm(y): 1.0032, norm:0.7017, tok/sec: 100679.52, flops:105.68, batch-reuse:1
@ 4503 train 4.3124 , allloss: 4.3125, dt: 1305.10ms, fracRes: 0.7076, norm(attn): 0.1797, norm(output): 0.9398, norm(x): 0.7692, norm(y): 1.0032, norm:0.6692, tok/sec: 100430.82, flops:105.42, batch-reuse:1
@ 4504 train 4.2206 , allloss: 4.2206, dt: 1324.16ms, fracRes: 0.7077, norm(attn): 0.1816, norm(output): 0.9397, norm(x): 0.7688, norm(y): 1.0032, norm:0.6099, tok/sec: 98984.74, flops:103.90, batch-reuse:1
@ 4505 train 4.2896 , allloss: 4.2896, dt: 1322.98ms, fracRes: 0.7077, norm(attn): 0.1816, norm(output): 0.9397, norm(x): 0.7683, norm(y): 1.0032, norm:0.7596, tok/sec: 99073.17, flops:103.99, batch-reuse:1
@ 4506 train 4.3435 , allloss: 4.3435, dt: 1330.72ms, fracRes: 0.7077, norm(attn): 0.1797, norm(output): 0.9398, norm(x): 0.7693, norm(y): 1.0031, norm:0.6627, tok/sec: 98496.78, flops:103.39, batch-reuse:1
@ 4507 train 4.3514 , allloss: 4.3514, dt: 1333.32ms, fracRes: 0.7077, norm(attn): 0.1777, norm(output): 0.9403, norm(x): 0.7702, norm(y): 1.0030, norm:0.6159, tok/sec: 98305.29, flops:103.18, batch-reuse:1
@ 4508 train 4.2781 , allloss: 4.2781, dt: 1329.39ms, fracRes: 0.7079, norm(attn): 0.1816, norm(output): 0.9399, norm(x): 0.7693, norm(y): 1.0031, norm:0.7661, tok/sec: 98595.35, flops:103.49, batch-reuse:1
@ 4509 train 4.3344 , allloss: 4.3344, dt: 1331.38ms, fracRes: 0.7078, norm(attn): 0.1826, norm(output): 0.9396, norm(x): 0.7686, norm(y): 1.0030, norm:0.7986, tok/sec: 98448.06, flops:103.33, batch-reuse:1
@ 4510 train 4.3524 , allloss: 4.3526, dt: 1339.30ms, fracRes: 0.7077, norm(attn): 0.1816, norm(output): 0.9398, norm(x): 0.7691, norm(y): 1.0031, norm:0.6964, tok/sec: 97865.93, flops:102.72, batch-reuse:1
@ 4511 train 4.2123 , allloss: 4.2124, dt: 1333.87ms, fracRes: 0.7074, norm(attn): 0.1787, norm(output): 0.9398, norm(x): 0.7701, norm(y): 1.0032, norm:0.6637, tok/sec: 98264.66, flops:103.14, batch-reuse:1
@ 4512 train 4.2985 , allloss: 4.2988, dt: 1300.93ms, fracRes: 0.7074, norm(attn): 0.1777, norm(output): 0.9398, norm(x): 0.7702, norm(y): 1.0033, norm:0.9294, tok/sec: 100752.91, flops:105.75, batch-reuse:1
@ 4513 train 4.2921 , allloss: 4.2921, dt: 1306.80ms, fracRes: 0.7078, norm(attn): 0.1797, norm(output): 0.9397, norm(x): 0.7692, norm(y): 1.0031, norm:0.6615, tok/sec: 100299.67, flops:105.28, batch-reuse:1
@ 4514 train 4.2396 , allloss: 4.2396, dt: 1335.67ms, fracRes: 0.7079, norm(attn): 0.1816, norm(output): 0.9398, norm(x): 0.7688, norm(y): 1.0029, norm:0.6723, tok/sec: 98132.08, flops:103.00, batch-reuse:1
@ 4515 train 4.3335 , allloss: 4.3337, dt: 1334.28ms, fracRes: 0.7079, norm(attn): 0.1807, norm(output): 0.9399, norm(x): 0.7694, norm(y): 1.0032, norm:0.6454, tok/sec: 98233.92, flops:103.11, batch-reuse:1
@ 4516 train 4.2710 , allloss: 4.2710, dt: 1296.04ms, fracRes: 0.7078, norm(attn): 0.1797, norm(output): 0.9399, norm(x): 0.7695, norm(y): 1.0032, norm:0.6074, tok/sec: 101132.86, flops:106.15, batch-reuse:1
@ 4517 train 4.2756 , allloss: 4.2756, dt: 1307.96ms, fracRes: 0.7079, norm(attn): 0.1816, norm(output): 0.9399, norm(x): 0.7689, norm(y): 1.0031, norm:0.5937, tok/sec: 100210.70, flops:105.18, batch-reuse:1
@ 4518 train 4.3071 , allloss: 4.3072, dt: 1317.24ms, fracRes: 0.7079, norm(attn): 0.1777, norm(output): 0.9399, norm(x): 0.7687, norm(y): 1.0029, norm:0.6174, tok/sec: 99505.03, flops:104.44, batch-reuse:1
@ 4519 train 4.3534 , allloss: 4.3536, dt: 1302.89ms, fracRes: 0.7080, norm(attn): 0.1777, norm(output): 0.9398, norm(x): 0.7693, norm(y): 1.0028, norm:0.6024, tok/sec: 100600.89, flops:105.59, batch-reuse:1
@ 4520 train 4.3870 , allloss: 4.3871, dt: 1295.24ms, fracRes: 0.7077, norm(attn): 0.1787, norm(output): 0.9400, norm(x): 0.7698, norm(y): 1.0030, norm:0.6255, tok/sec: 101195.47, flops:106.22, batch-reuse:1
@ 4521 train 4.3465 , allloss: 4.3465, dt: 1320.29ms, fracRes: 0.7078, norm(attn): 0.1826, norm(output): 0.9400, norm(x): 0.7692, norm(y): 1.0030, norm:0.5504, tok/sec: 99275.19, flops:104.20, batch-reuse:1
@ 4522 train 4.3948 , allloss: 4.3949, dt: 1290.61ms, fracRes: 0.7077, norm(attn): 0.1826, norm(output): 0.9400, norm(x): 0.7692, norm(y): 1.0031, norm:0.6142, tok/sec: 101557.80, flops:106.60, batch-reuse:1
@ 4523 train 4.3619 , allloss: 4.3620, dt: 1305.57ms, fracRes: 0.7077, norm(attn): 0.1816, norm(output): 0.9400, norm(x): 0.7694, norm(y): 1.0032, norm:0.5612, tok/sec: 100394.27, flops:105.38, batch-reuse:1
@ 4524 train 4.2981 , allloss: 4.2982, dt: 1314.94ms, fracRes: 0.7077, norm(attn): 0.1807, norm(output): 0.9398, norm(x): 0.7695, norm(y): 1.0034, norm:0.6003, tok/sec: 99679.29, flops:104.63, batch-reuse:1
@ 4525 train 4.2956 , allloss: 4.2957, dt: 1288.95ms, fracRes: 0.7079, norm(attn): 0.1777, norm(output): 0.9398, norm(x): 0.7693, norm(y): 1.0033, norm:0.5444, tok/sec: 101689.14, flops:106.74, batch-reuse:1
@ 4526 train 4.4235 , allloss: 4.4236, dt: 1287.20ms, fracRes: 0.7082, norm(attn): 0.1807, norm(output): 0.9396, norm(x): 0.7686, norm(y): 1.0034, norm:0.6752, tok/sec: 101827.43, flops:106.88, batch-reuse:1
@ 4527 train 4.2403 , allloss: 4.2404, dt: 1304.21ms, fracRes: 0.7082, norm(attn): 0.1797, norm(output): 0.9398, norm(x): 0.7684, norm(y): 1.0033, norm:0.6414, tok/sec: 100499.40, flops:105.49, batch-reuse:1
@ 4528 train 4.2909 , allloss: 4.2910, dt: 1291.73ms, fracRes: 0.7080, norm(attn): 0.1777, norm(output): 0.9399, norm(x): 0.7690, norm(y): 1.0032, norm:0.6429, tok/sec: 101469.75, flops:106.51, batch-reuse:1
@ 4529 train 4.3388 , allloss: 4.3389, dt: 1311.83ms, fracRes: 0.7079, norm(attn): 0.1816, norm(output): 0.9401, norm(x): 0.7695, norm(y): 1.0030, norm:0.6484, tok/sec: 99915.47, flops:104.87, batch-reuse:1
@ 4530 train 4.2875 , allloss: 4.2877, dt: 1331.42ms, fracRes: 0.7080, norm(attn): 0.1826, norm(output): 0.9400, norm(x): 0.7700, norm(y): 1.0031, norm:0.6526, tok/sec: 98445.20, flops:103.33, batch-reuse:1
@ 4531 train 4.3200 , allloss: 4.3200, dt: 1336.09ms, fracRes: 0.7078, norm(attn): 0.1816, norm(output): 0.9398, norm(x): 0.7698, norm(y): 1.0033, norm:0.6871, tok/sec: 98101.31, flops:102.97, batch-reuse:1
@ 4532 train 4.3313 , allloss: 4.3314, dt: 1317.98ms, fracRes: 0.7077, norm(attn): 0.1797, norm(output): 0.9402, norm(x): 0.7703, norm(y): 1.0033, norm:0.7458, tok/sec: 99448.97, flops:104.38, batch-reuse:1
@ 4533 train 4.3571 , allloss: 4.3572, dt: 1330.52ms, fracRes: 0.7077, norm(attn): 0.1807, norm(output): 0.9399, norm(x): 0.7701, norm(y): 1.0031, norm:0.6488, tok/sec: 98511.64, flops:103.40, batch-reuse:1
@ 4534 train 4.3787 , allloss: 4.3788, dt: 1332.11ms, fracRes: 0.7079, norm(attn): 0.1816, norm(output): 0.9401, norm(x): 0.7698, norm(y): 1.0031, norm:0.6405, tok/sec: 98394.46, flops:103.28, batch-reuse:1
@ 4535 train 4.3828 , allloss: 4.3828, dt: 1344.00ms, fracRes: 0.7080, norm(attn): 0.1797, norm(output): 0.9402, norm(x): 0.7699, norm(y): 1.0032, norm:0.7692, tok/sec: 97523.73, flops:102.36, batch-reuse:1
@ 4536 train 4.3593 , allloss: 4.3593, dt: 1304.93ms, fracRes: 0.7080, norm(attn): 0.1836, norm(output): 0.9398, norm(x): 0.7692, norm(y): 1.0032, norm:0.6821, tok/sec: 100443.39, flops:105.43, batch-reuse:1
@ 4537 train 4.2898 , allloss: 4.2899, dt: 1301.28ms, fracRes: 0.7079, norm(attn): 0.1816, norm(output): 0.9400, norm(x): 0.7694, norm(y): 1.0031, norm:0.6194, tok/sec: 100725.44, flops:105.72, batch-reuse:1
@ 4538 train 4.2994 , allloss: 4.2994, dt: 1280.61ms, fracRes: 0.7078, norm(attn): 0.1797, norm(output): 0.9401, norm(x): 0.7697, norm(y): 1.0031, norm:0.5569, tok/sec: 102350.99, flops:107.43, batch-reuse:1
@ 4539 train 4.3098 , allloss: 4.3098, dt: 1295.11ms, fracRes: 0.7077, norm(attn): 0.1777, norm(output): 0.9400, norm(x): 0.7702, norm(y): 1.0032, norm:0.6208, tok/sec: 101205.10, flops:106.23, batch-reuse:1
@ 4540 train 4.2356 , allloss: 4.2356, dt: 1297.16ms, fracRes: 0.7077, norm(attn): 0.1787, norm(output): 0.9400, norm(x): 0.7698, norm(y): 1.0031, norm:0.5672, tok/sec: 101044.98, flops:106.06, batch-reuse:1
@ 4541 train 4.2750 , allloss: 4.2750, dt: 1286.03ms, fracRes: 0.7079, norm(attn): 0.1787, norm(output): 0.9399, norm(x): 0.7694, norm(y): 1.0032, norm:0.5996, tok/sec: 101920.01, flops:106.98, batch-reuse:1
@ 4542 train 4.1007 , allloss: 4.1008, dt: 1304.26ms, fracRes: 0.7084, norm(attn): 0.1826, norm(output): 0.9395, norm(x): 0.7683, norm(y): 1.0036, norm:0.5959, tok/sec: 100495.15, flops:105.48, batch-reuse:1
@ 4543 train 4.2890 , allloss: 4.2891, dt: 1285.09ms, fracRes: 0.7082, norm(attn): 0.1787, norm(output): 0.9399, norm(x): 0.7693, norm(y): 1.0035, norm:0.7507, tok/sec: 101994.34, flops:107.06, batch-reuse:1
@ 4544 train 4.2928 , allloss: 4.2928, dt: 1283.39ms, fracRes: 0.7078, norm(attn): 0.1807, norm(output): 0.9401, norm(x): 0.7702, norm(y): 1.0032, norm:0.6023, tok/sec: 102129.44, flops:107.20, batch-reuse:1
@ 4545 train 4.2803 , allloss: 4.2804, dt: 1291.34ms, fracRes: 0.7078, norm(attn): 0.1826, norm(output): 0.9401, norm(x): 0.7702, norm(y): 1.0029, norm:0.6561, tok/sec: 101500.72, flops:106.54, batch-reuse:1
@ 4546 train 4.1967 , allloss: 4.1968, dt: 1304.61ms, fracRes: 0.7079, norm(attn): 0.1816, norm(output): 0.9402, norm(x): 0.7695, norm(y): 1.0029, norm:0.6082, tok/sec: 100468.06, flops:105.45, batch-reuse:1
@ 4547 train 4.3116 , allloss: 4.3118, dt: 1335.13ms, fracRes: 0.7080, norm(attn): 0.1816, norm(output): 0.9403, norm(x): 0.7693, norm(y): 1.0030, norm:0.6106, tok/sec: 98171.87, flops:103.04, batch-reuse:1
@ 4548 train 4.3040 , allloss: 4.3040, dt: 1320.85ms, fracRes: 0.7081, norm(attn): 0.1836, norm(output): 0.9402, norm(x): 0.7693, norm(y): 1.0032, norm:0.6668, tok/sec: 99233.10, flops:104.16, batch-reuse:1
@ 4549 train 4.2200 , allloss: 4.2201, dt: 1331.68ms, fracRes: 0.7079, norm(attn): 0.1816, norm(output): 0.9401, norm(x): 0.7701, norm(y): 1.0032, norm:0.6227, tok/sec: 98425.76, flops:103.31, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0100, -0.0448, -0.0090,  ..., -0.0153, -0.0005,  0.0299],
        [ 0.0061, -0.0403, -0.0205,  ..., -0.0604, -0.0075,  0.0253],
        [-0.0025, -0.0549,  0.0154,  ..., -0.0073,  0.0112,  0.0454],
        ...,
        [ 0.0199,  0.0660, -0.0145,  ...,  0.0110, -0.0347,  0.0028],
        [-0.0131, -0.0150,  0.0606,  ...,  0.0040,  0.0510,  0.0315],
        [ 0.0129, -0.0256,  0.0444,  ..., -0.0211,  0.0571, -0.0023]], device='cuda:0', requires_grad=True)
K: tensor([ 4.7812, -2.9844,  1.8516,  3.0312, -4.1250,  3.2812, -0.9688,  5.5000, -4.5000, -0.3027, -2.3906, -3.8750,  4.5625, -3.9219,  0.7383, -0.3008, -1.0625, -4.0938,  4.9062, -5.5625,  5.0312,  3.0000, -5.7812, -0.2617, -1.4922, -0.9453,  3.2031, -2.9219, -4.2812, -2.6562,  4.9688,  0.6719,
         2.9219,  4.1250, -1.8047, -3.0938,  2.4688,  2.7344, -2.5469, -3.7969,  4.1250, -1.5156, -0.4590, -1.1875, -3.7344, -2.3125,  0.3906,  3.2969, -0.6992,  1.4609,  3.1406, -3.6562, -4.8750,  4.9375,  2.7031, -2.3281,  4.0938,  3.4531, -1.7188, -2.2500, -2.2344,  0.4707, -1.7344, -1.0781],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0794,  0.0808, -0.0020,  ..., -0.0231, -0.0331, -0.0169],
        [-0.0647,  0.0878,  0.0017,  ...,  0.0252, -0.0028,  0.0169],
        [-0.0655,  0.0783, -0.0156,  ..., -0.0517, -0.0671,  0.0019],
        ...,
        [ 0.0356, -0.0101, -0.0013,  ...,  0.0129, -0.0171,  0.0052],
        [-0.0309,  0.0195, -0.0325,  ...,  0.0314,  0.0056,  0.0326],
        [-0.0165,  0.0414,  0.0125,  ...,  0.0104, -0.0075, -0.0372]], device='cuda:0', requires_grad=True)
Q: tensor([    -1.7578,      5.9062,     -7.5625,     -4.8125,      3.9531,     -4.5312,     -2.5625,     -5.5000,      4.9375,     -6.1250,      1.5469,      4.4375,     -6.9375,      4.5938,     -7.0312,      4.3750,      4.3125,      5.4688,     -4.1562,      6.7812,     -4.2500,     -5.1875,
             5.4062,     -4.7812,     -2.5625,     -5.0625,     -6.1250,      2.9688,      4.1250,      7.8438,     -5.0938,     -5.5312,     -7.0625,     -4.0938,     -2.5938,      2.3594,     -8.6875,     -4.1875,      5.0625,      2.7812,     -2.6562,      0.8906,      5.5000,     -1.1641,
             4.8438,      3.1719,     -5.5938,     -6.5312,      6.7500,      0.1426,     -3.4531,      5.4062,      4.4062,     -6.2500,     -2.6406,      0.0087,     -3.2188,      2.9062,     -1.5234,      9.0625,      2.2031,     -4.6250,      5.2188,      6.7188], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[   0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000],
        [   0.0000,   94.5000,  109.5000,  102.5000,   74.5000,   78.0000,   59.0000,   93.5000,   80.0000,   62.0000,   77.5000,   76.0000,   53.0000,   77.5000,   79.0000],
        [   0.0000,  -62.2500,  -77.0000,  -72.0000,  -55.5000,  -56.5000,  -40.0000,  -59.2500,  -57.2500,  -46.5000,  -58.5000,  -49.2500,  -31.7500,  -54.2500,  -54.2500],
        [   0.0000, -111.0000, -138.0000, -136.0000, -106.0000, -107.0000,  -76.0000, -107.5000, -109.0000,  -86.0000, -112.5000,  -92.0000,  -55.5000, -104.5000, -103.5000],
        [   0.0000, -124.0000, -152.0000, -147.0000, -114.5000, -116.5000,  -81.5000, -116.0000, -117.5000,  -94.0000, -122.0000,  -97.5000,  -59.2500, -113.0000, -111.0000],
        [   0.0000, -100.0000, -123.0000, -118.5000,  -92.0000,  -94.0000,  -67.0000,  -95.5000,  -95.0000,  -76.0000,  -97.5000,  -80.0000,  -50.7500,  -91.0000,  -89.5000],
        [   0.0000,  -89.5000, -110.0000, -105.0000,  -80.5000,  -83.5000,  -57.5000,  -84.0000,  -83.5000,  -66.5000,  -86.0000,  -70.0000,  -43.0000,  -80.0000,  -79.0000],
        [   0.0000,  -62.0000,  -77.5000,  -76.5000,  -61.0000,  -61.0000,  -43.2500,  -59.2500,  -62.7500,  -50.0000,  -64.0000,  -51.0000,  -30.7500,  -59.2500,  -58.5000],
        [   0.0000, -105.5000, -129.0000, -125.0000,  -96.5000,  -98.5000,  -69.0000,  -98.5000, -100.0000,  -79.5000, -103.0000,  -82.0000,  -50.0000,  -95.0000,  -93.5000],
        [   0.0000, -113.5000, -138.0000, -133.0000, -103.0000, -105.0000,  -74.5000, -107.5000, -107.0000,  -83.5000, -109.5000,  -91.0000,  -55.0000, -102.5000, -102.0000],
        [   0.0000, -122.0000, -148.0000, -142.0000, -108.0000, -111.0000,  -77.5000, -113.0000, -112.5000,  -89.0000, -116.0000,  -93.5000,  -56.7500, -107.5000, -106.5000],
        [   0.0000,  -93.0000, -112.5000, -108.5000,  -84.5000,  -86.0000,  -60.2500,  -87.0000,  -87.0000,  -68.5000,  -89.5000,  -73.5000,  -44.0000,  -83.5000,  -83.0000],
        [   0.0000,  -70.0000,  -87.0000,  -86.0000,  -68.5000,  -68.5000,  -48.7500,  -67.0000,  -70.0000,  -55.5000,  -72.0000,  -57.7500,  -35.0000,  -67.0000,  -66.0000],
        [   0.0000, -106.0000, -127.0000, -121.0000,  -91.5000,  -95.0000,  -65.5000,  -97.5000,  -95.5000,  -76.0000,  -98.5000,  -80.0000,  -49.0000,  -91.5000,  -90.5000],
        [   0.0000, -104.5000, -127.0000, -122.5000,  -94.5000,  -96.5000,  -68.5000,  -98.5000,  -98.0000,  -77.0000, -100.5000,  -82.5000,  -50.2500,  -93.5000,  -93.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9167],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0036,     0.9961,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8086,     0.1436,     0.0481,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9766,     0.0031,     0.0204,     0.0013,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9453,     0.0312,     0.0123,     0.0056,     0.0067,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9453,     0.0275,     0.0098,     0.0020,     0.0131,     0.0016,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8633,     0.0334,     0.0869,     0.0016,     0.0009,     0.0015,     0.0121,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4492,     0.0216,     0.4102,     0.0081,     0.0003,     0.0004,     0.0073,     0.1021,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8711,     0.0469,     0.0168,     0.0055,     0.0015,     0.0043,     0.0322,     0.0161,     0.0050,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6484,     0.0063,     0.0076,     0.0022,     0.0003,     0.0004,     0.0046,     0.1221,     0.0004,     0.2061,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6523,     0.0830,     0.0518,     0.0030,     0.0199,     0.0063,     0.0369,     0.0664,     0.0104,     0.0605,     0.0087,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4238,     0.0051,     0.0061,     0.0010,     0.0007,     0.0007,     0.0051,     0.3691,     0.0008,     0.1270,     0.0007,     0.0593,     0.0000,     0.0000,     0.0000],
        [    0.6484,     0.0179,     0.0109,     0.0072,     0.0093,     0.0008,     0.0640,     0.0312,     0.0099,     0.0532,     0.0334,     0.0884,     0.0266,     0.0000,     0.0000],
        [    0.7812,     0.0410,     0.0137,     0.0052,     0.0013,     0.0051,     0.0247,     0.0167,     0.0061,     0.0132,     0.0042,     0.0303,     0.0559,     0.0023,     0.0000],
        [    0.3672,     0.0138,     0.0065,     0.0039,     0.0002,     0.0010,     0.0083,     0.0417,     0.0021,     0.0698,     0.0053,     0.0400,     0.0299,     0.0015,     0.4082]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0183,  0.0267, -0.0006,  ...,  0.0043,  0.0190,  0.0058],
        [ 0.0193, -0.0059,  0.0435,  ...,  0.0011, -0.0256,  0.0328],
        [-0.0150,  0.0223, -0.0241,  ..., -0.0015, -0.0010,  0.0233],
        ...,
        [ 0.0606,  0.0082,  0.0590,  ...,  0.0099,  0.0181, -0.0366],
        [-0.0121,  0.0301, -0.0318,  ..., -0.0201,  0.0184,  0.0371],
        [-0.0023, -0.0567,  0.0298,  ..., -0.0102,  0.0079,  0.0389]], device='cuda:0', requires_grad=True)
K: tensor([-1.1562, -1.5625,  0.1973,  0.9844, -3.0469, -0.9922, -1.4141, -0.6953, -1.6953, -1.7500, -0.1729,  1.0625,  1.1875,  1.5391,  0.4512, -1.5781, -1.5625,  1.5156, -0.0723, -2.4062, -0.6797, -0.3066, -0.0540,  1.3281,  0.0635,  0.6406, -1.6562, -0.8008,  2.0000,  1.5156,  0.3379, -0.0077,
        -2.1250, -1.0078, -0.0227, -0.3750,  0.2559,  0.3145,  1.1484,  0.4199, -2.1094,  1.8594,  0.7188,  3.6719, -2.3281, -3.4062, -3.4531, -1.7500, -0.2217, -1.5859,  1.1797,  0.0576, -0.9336,  0.9023, -0.7539, -0.8828,  0.8750,  1.7266,  1.3594, -2.0312, -2.2031, -0.1787,  3.8750, -1.1250],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0016, -0.0023, -0.0252,  ..., -0.0075,  0.0149, -0.0344],
        [-0.0032,  0.0168,  0.0065,  ..., -0.0373, -0.0218,  0.0351],
        [-0.0019, -0.0323,  0.0594,  ..., -0.0014,  0.0106,  0.0161],
        ...,
        [-0.0141, -0.0217, -0.0204,  ..., -0.0021,  0.0411,  0.0477],
        [ 0.0262,  0.0135, -0.0223,  ...,  0.0394,  0.0141, -0.0073],
        [-0.0296,  0.0164,  0.0081,  ..., -0.0269,  0.0167,  0.0567]], device='cuda:0', requires_grad=True)
Q: tensor([ 1.1094, -0.6523,  0.9883, -2.5625,  1.0391,  0.7969,  1.2109, -1.8750, -1.7031, -0.5703, -0.3301,  1.1641, -0.2002,  0.5039,  2.5156, -0.2061,  2.0781, -1.7266, -1.3203,  2.0156,  0.4023,  0.7031,  1.3281,  2.5938,  1.8672, -0.1001,  0.2461, -0.4707,  1.7109, -2.5312,  1.1172,  0.5469,
        -1.0469,  0.0977,  0.2754, -0.4941,  0.3145,  3.7500, -0.3379, -0.0059, -1.2734, -0.4805, -2.6562,  0.4961,  1.8906, -0.5859,  1.1094, -2.2812,  2.8750, -1.7266,  0.4863,  1.5703, -0.9531, -0.4961, -2.3906, -0.8555,  0.9609, -1.6094, -0.5273, -1.7109, -1.4453,  0.2812, -1.1797, -0.5078],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  5.6250,  3.9219, -0.7266, -2.1562,  0.5078,  0.2217, -0.4141,  0.3379, -0.2695, -2.2031,  3.6250,  2.1094, -0.7539, -1.1172],
        [ 0.0000, -1.7266, -2.8125, -4.5938, -4.3438, -5.3750, -3.2500, -0.6719, -3.8750, -2.2969, -4.3125, -0.8125, -0.9219, -4.8438, -3.0938],
        [ 0.0000, -5.7500, -3.8594, -6.6562, -6.8125, -7.4062, -6.7812, -3.8438, -6.4375, -5.0000, -5.5938, -4.2812, -4.6875, -7.4688, -5.5938],
        [ 0.0000, -3.4062, -4.3438, -5.1250, -4.9375, -5.3438, -3.8906, -3.6406, -4.9688, -3.6250, -4.1875, -3.3906, -3.8125, -5.1875, -4.3438],
        [ 0.0000, -3.5312, -4.5625, -6.1875, -4.2812, -6.3750, -3.3750, -3.8281, -4.6250, -3.3125, -4.8438, -4.2500, -3.9688, -4.5625, -4.9375],
        [ 0.0000, -3.2500, -2.2969, -6.2812, -6.9062, -6.3438, -4.2812, -4.1250, -5.8750, -3.6250, -5.2188, -2.2812, -3.7969, -6.3750, -4.5625],
        [ 0.0000, -3.0312, -0.0933, -4.0312, -7.4688, -6.9375, -4.1250, -1.4844, -7.5625, -2.9688, -5.0625, -1.1797, -1.5469, -8.5000, -5.6875],
        [ 0.0000, -2.9219, -3.9531, -5.0625, -6.3750, -5.3125, -3.2969, -3.9844, -5.1562, -4.1562, -5.8438, -3.7188, -3.3281, -5.1875, -5.0312],
        [ 0.0000, -4.6562, -4.4375, -5.6562, -7.7188, -7.3438, -4.9688, -1.6719, -7.3438, -1.1484, -7.3750, -2.1719, -1.5312, -8.0625, -5.8125],
        [ 0.0000, -2.0625, -2.5312, -5.3750, -3.4844, -4.6562, -2.8750, -2.2969, -4.1250, -2.3750, -4.3125, -1.9766, -2.7344, -4.4375, -5.1875],
        [ 0.0000, -4.4375, -4.2500, -6.0312, -6.4688, -6.4688, -4.4375, -0.1416, -6.2188, -1.2031, -6.3750, -1.9688, -0.3301, -7.4062, -5.3125],
        [ 0.0000, -3.5781, -4.0938, -4.5000, -4.2500, -6.7188, -2.3125, -3.0312, -4.1875, -2.5000, -2.9531, -1.9922, -3.1875, -4.0625, -2.6406],
        [ 0.0000, -2.9375, -4.0312, -5.0000, -6.4062, -5.0312, -3.4531, -3.8438, -4.8438, -4.0938, -5.2188, -3.2500, -2.6406, -5.8125, -4.1562],
        [ 0.0000, -3.2812, -4.0312, -4.5312, -7.5312, -5.8750, -3.7969, -2.1719, -5.1562, -1.6562, -4.2500, -2.2188, -2.5156, -5.5312,  0.1030]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7902],
        [0.7036],
        [0.6236],
        [0.5530],
        [0.6449],
        [0.3929],
        [0.3698],
        [0.3895],
        [0.3496],
        [0.3690],
        [0.3129],
        [0.4309],
        [0.2990],
        [0.1920]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0292, -0.0065,  0.0068,  ...,  0.0143, -0.0645, -0.0084],
        [-0.0467, -0.0266,  0.0078,  ...,  0.0300, -0.0614, -0.0244],
        [ 0.0162,  0.0092, -0.0106,  ...,  0.0390,  0.0207, -0.0062],
        ...,
        [-0.0120, -0.0162, -0.0060,  ...,  0.0509, -0.0279, -0.0144],
        [-0.0231, -0.0147,  0.0145,  ...,  0.0156,  0.0029, -0.0031],
        [ 0.0046, -0.0341, -0.0281,  ...,  0.0492, -0.0313, -0.0545]], device='cuda:0', requires_grad=True)
K: tensor([ 3.5156, -4.1562, -3.3281, -4.0312,  5.2812, -4.0938,  5.1250,  3.6562,  2.8594, -5.0312,  3.3438, -4.4375, -5.0312,  4.8438,  2.8281, -2.9688,  2.2656,  4.5625, -0.5938, -4.4062,  4.9062,  5.6562,  3.8906, -2.5469, -4.2500,  4.9688, -3.6094, -4.8438, -3.4062,  3.5625, -4.6250,  3.0156,
         3.4688, -3.5000, -3.8125,  1.3438,  1.6719, -4.0938,  4.0625, -4.2188, -3.4531,  2.4219,  3.0312, -3.4844, -2.2344,  3.6719, -4.0938,  3.3125, -5.1562, -4.2188, -4.5312,  3.1719,  2.8125,  4.0312,  3.3438, -4.9375, -4.0312,  3.1875, -1.4297, -2.5156,  3.4531,  3.8438, -1.9531,  2.6094],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0123,  0.0101,  0.0104,  ..., -0.0004,  0.0176,  0.0367],
        [ 0.0408,  0.0232, -0.0190,  ..., -0.0364,  0.0025,  0.0059],
        [ 0.0020, -0.0215, -0.0046,  ..., -0.0238,  0.0411,  0.0274],
        ...,
        [-0.0121, -0.0057, -0.0488,  ..., -0.0115,  0.0388,  0.0065],
        [ 0.0185,  0.0008, -0.0192,  ...,  0.0232, -0.0212, -0.0141],
        [-0.0044,  0.0030,  0.0057,  ..., -0.0218, -0.0012,  0.0478]], device='cuda:0', requires_grad=True)
Q: tensor([-2.6875,  4.1875,  5.1250,  4.2188, -4.6250,  5.0312, -4.2500, -5.2812, -3.5156,  4.5000, -4.5000,  5.7188,  4.7500, -4.5312, -4.2500,  4.5312, -2.4531, -5.6875,  0.6211,  5.7188, -5.4688, -4.7500, -5.2188,  2.1719,  5.6562, -5.4688,  3.5156,  4.8750,  4.0938, -4.2500,  3.8906, -3.5469,
        -4.3438,  2.7812,  4.7500, -2.4375, -1.2969,  3.6406, -6.1250,  2.7656,  4.5312, -1.8047, -3.6406,  4.5938,  2.4219, -5.3125,  4.1250, -3.2344,  4.2188,  5.7188,  5.8438, -5.1250, -3.1719, -4.8125, -3.1875,  5.1562,  4.7812, -2.7188,  2.2500,  3.2656, -3.6094, -5.2500,  2.0000, -2.5312],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[   0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000],
        [   0.0000,  -57.5000,  -66.5000, -111.5000,  -93.0000,  -90.5000,  -96.0000, -113.5000,  -89.0000, -104.0000,  -82.5000,  -94.0000, -100.0000,  -83.0000,  -89.0000],
        [   0.0000,  -66.5000,  -79.5000, -135.0000, -109.5000, -107.0000, -114.0000, -136.0000, -104.5000, -126.5000,  -98.0000, -111.5000, -120.0000,  -97.5000, -107.0000],
        [   0.0000, -106.0000, -129.0000, -222.0000, -179.0000, -173.0000, -185.0000, -223.0000, -169.0000, -208.0000, -159.0000, -181.0000, -195.0000, -158.0000, -174.0000],
        [   0.0000,  -77.5000,  -92.0000, -156.0000, -129.0000, -124.5000, -133.0000, -158.0000, -122.0000, -147.0000, -113.5000, -130.0000, -139.0000, -113.5000, -123.0000],
        [   0.0000,  -83.0000,  -98.5000, -167.0000, -137.0000, -134.0000, -142.0000, -170.0000, -130.0000, -157.0000, -121.0000, -139.0000, -149.0000, -121.0000, -132.0000],
        [   0.0000,  -84.0000, -100.5000, -172.0000, -140.0000, -137.0000, -146.0000, -174.0000, -133.0000, -161.0000, -124.0000, -142.0000, -153.0000, -124.0000, -136.0000],
        [   0.0000, -111.5000, -135.0000, -231.0000, -186.0000, -182.0000, -194.0000, -234.0000, -176.0000, -216.0000, -165.0000, -189.0000, -205.0000, -164.0000, -181.0000],
        [   0.0000,  -72.5000,  -86.5000, -147.0000, -120.0000, -117.0000, -124.5000, -149.0000, -114.5000, -138.0000, -106.5000, -122.0000, -132.0000, -107.0000, -116.0000],
        [   0.0000,  -97.0000, -118.0000, -201.0000, -162.0000, -158.0000, -168.0000, -202.0000, -152.0000, -190.0000, -143.0000, -165.0000, -178.0000, -142.0000, -157.0000],
        [   0.0000,  -71.5000,  -86.0000, -146.0000, -119.5000, -115.5000, -123.5000, -148.0000, -113.5000, -138.0000, -106.0000, -121.0000, -129.0000, -106.0000, -115.5000],
        [   0.0000,  -84.5000, -102.0000, -172.0000, -139.0000, -136.0000, -145.0000, -175.0000, -132.0000, -162.0000, -123.5000, -142.0000, -154.0000, -123.0000, -135.0000],
        [   0.0000,  -95.0000, -114.5000, -195.0000, -158.0000, -154.0000, -164.0000, -198.0000, -149.0000, -183.0000, -139.0000, -160.0000, -174.0000, -139.0000, -153.0000],
        [   0.0000,  -68.0000,  -81.0000, -138.0000, -112.5000, -110.0000, -116.5000, -140.0000, -107.5000, -129.0000, -100.0000, -114.5000, -123.0000, -100.5000, -108.5000],
        [   0.0000,  -77.0000,  -94.0000, -160.0000, -130.0000, -126.5000, -135.0000, -162.0000, -123.0000, -151.0000, -114.5000, -132.0000, -142.0000, -114.5000, -126.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[     0.0369,      0.0164,      0.0190,  ...,      0.0057,     -0.0010,     -0.0226],
        [    -0.0035,      0.0177,      0.0200,  ...,      0.0277,      0.0058,      0.0265],
        [     0.0294,      0.0043,     -0.0008,  ...,     -0.0008,      0.0357,      0.0026],
        ...,
        [    -0.0204,     -0.0266,     -0.0134,  ...,      0.0124,     -0.0244,      0.0098],
        [    -0.0078,      0.0063,     -0.0199,  ...,     -0.0171,     -0.0265,     -0.0229],
        [     0.0221,      0.0000,     -0.0045,  ...,      0.0124,      0.0125,      0.0061]], device='cuda:0', requires_grad=True)
K: tensor([-2.3281,  0.2090, -2.7344,  1.4766, -1.7109, -2.7344, -1.1797,  2.5000, -0.5273, -0.5391,  0.9961,  1.0625, -1.5625, -3.0938,  2.0156,  1.6953,  2.7031, -2.3906, -2.2031,  1.5703,  1.7500, -2.0156, -2.7188,  3.2500, -1.8203,  2.8281, -1.2422, -1.8984,  0.9727, -1.6875,  0.3691, -2.5000,
        -1.9141, -2.2656,  2.2344, -2.7969, -2.4062, -0.3906,  2.7500,  1.9688, -2.3906, -0.9102,  0.5820, -2.3750,  1.9531,  2.9688, -0.2969, -1.8438, -2.1094,  2.2500,  2.5938,  1.1328,  0.5547, -2.2656, -1.3828, -2.2188,  2.3281,  1.9453, -2.1406, -2.0938, -1.3047,  3.0312, -0.3555, -2.9062],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0272,  0.0128, -0.0054,  ...,  0.0170, -0.0206, -0.0185],
        [-0.0099, -0.0086,  0.0070,  ...,  0.0080, -0.0161, -0.0015],
        [ 0.0021,  0.0104, -0.0018,  ..., -0.0012,  0.0155,  0.0023],
        ...,
        [-0.0234,  0.0059, -0.0088,  ..., -0.0121,  0.0249,  0.0091],
        [-0.0311,  0.0280, -0.0045,  ...,  0.0045,  0.0009, -0.0253],
        [ 0.0022, -0.0104, -0.0369,  ...,  0.0021, -0.0047,  0.0144]], device='cuda:0', requires_grad=True)
Q: tensor([ 2.9062, -1.6250,  2.0781, -0.4512,  0.5664,  3.0938,  1.5000, -3.8594, -0.6797, -0.6445,  0.0078,  0.4590,  1.9219,  2.0938, -2.5000, -2.0469, -3.3750,  2.9375,  1.7344, -3.2031, -1.9141,  3.2656,  3.5625, -2.9531,  2.5000, -3.4688,  0.1328,  1.2734,  0.4883,  0.7930,  0.3789,  2.0625,
         0.3027,  2.6094, -1.9922,  2.7500,  2.8281, -1.1562, -2.8438, -2.9062,  3.5781, -1.5391, -1.8672,  2.8281, -2.0938, -2.2812, -2.1562,  1.0547,  1.2109, -2.3906, -2.4062,  0.4590,  1.8438,  3.2500,  0.8242,  3.1250, -3.3750, -2.3594,  2.4219,  2.3438,  0.9727, -3.7969,  2.6875,  2.0625],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000, -18.6250, -20.0000, -19.7500, -18.2500, -19.3750, -18.5000, -20.0000, -20.0000, -20.3750, -20.8750, -21.2500, -23.1250, -21.0000, -24.0000],
        [  0.0000, -21.5000, -23.5000, -23.3750, -21.6250, -23.0000, -21.8750, -23.7500, -23.7500, -24.0000, -24.7500, -25.1250, -27.5000, -25.0000, -28.7500],
        [  0.0000, -20.6250, -22.6250, -22.5000, -21.2500, -22.6250, -21.5000, -23.1250, -23.1250, -23.2500, -24.0000, -24.3750, -26.5000, -24.2500, -27.6250],
        [  0.0000, -18.8750, -20.6250, -20.5000, -19.3750, -20.5000, -19.6250, -21.0000, -21.1250, -21.2500, -21.8750, -22.2500, -24.1250, -22.0000, -25.1250],
        [  0.0000, -19.6250, -21.1250, -20.8750, -19.7500, -21.0000, -20.1250, -21.6250, -21.5000, -21.7500, -22.3750, -22.7500, -24.6250, -22.5000, -25.6250],
        [  0.0000, -18.6250, -20.0000, -19.5000, -18.3750, -19.6250, -18.8750, -20.1250, -20.1250, -20.2500, -20.8750, -21.2500, -23.0000, -21.0000, -23.8750],
        [  0.0000, -21.0000, -22.7500, -22.6250, -21.3750, -22.7500, -21.7500, -23.3750, -23.3750, -23.5000, -24.1250, -24.6250, -26.7500, -24.3750, -27.7500],
        [  0.0000, -19.6250, -21.3750, -21.2500, -20.0000, -21.2500, -20.2500, -21.8750, -21.8750, -22.0000, -22.6250, -23.0000, -25.0000, -22.8750, -26.0000],
        [  0.0000, -22.1250, -24.2500, -24.3750, -23.0000, -24.5000, -23.2500, -25.1250, -25.1250, -25.3750, -26.0000, -26.5000, -28.8750, -26.2500, -30.1250],
        [  0.0000, -19.5000, -21.1250, -21.0000, -19.6250, -21.0000, -20.0000, -21.6250, -21.5000, -21.6250, -22.3750, -22.7500, -24.7500, -22.5000, -25.7500],
        [  0.0000, -21.2500, -23.3750, -23.3750, -21.8750, -23.3750, -22.2500, -24.0000, -24.0000, -24.1250, -24.8750, -25.3750, -27.5000, -25.1250, -28.8750],
        [  0.0000, -21.3750, -23.2500, -23.2500, -21.8750, -23.3750, -22.2500, -24.0000, -24.0000, -24.1250, -24.8750, -25.2500, -27.6250, -25.0000, -28.6250],
        [  0.0000, -20.2500, -22.1250, -22.1250, -20.7500, -22.1250, -21.0000, -22.7500, -22.7500, -22.8750, -23.6250, -24.0000, -26.1250, -23.7500, -27.1250],
        [  0.0000, -24.2500, -26.3750, -26.6250, -24.8750, -26.7500, -25.3750, -27.5000, -27.3750, -27.5000, -28.3750, -28.8750, -31.5000, -28.6250, -33.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.5039,     0.4980,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.8359,     0.1309,     0.0332,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1152,     0.3672,     0.1289,     0.0054,     0.3848,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0007,     0.5898,     0.0942,     0.0079,     0.2119,     0.0952,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2891,     0.0172,     0.0026,     0.0801,     0.0422,     0.5703,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0003,     0.1260,     0.0282,     0.0015,     0.0645,     0.0510,     0.6445,     0.0854,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0569,     0.0150,     0.0007,     0.0835,     0.0454,     0.3594,     0.0522,     0.3867,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.0742,     0.0215,     0.0037,     0.0488,     0.0278,     0.3477,     0.0952,     0.3418,     0.0388,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0006,     0.0452,     0.0153,     0.0013,     0.0466,     0.0111,     0.1943,     0.0688,     0.4688,     0.0162,     0.1318,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0327,     0.0128,     0.0063,     0.0635,     0.0354,     0.2832,     0.0952,     0.3086,     0.0308,     0.1157,     0.0154,     0.0000,     0.0000,     0.0000],
        [    0.0003,     0.0322,     0.0038,     0.0002,     0.0251,     0.0162,     0.3398,     0.0408,     0.4277,     0.0123,     0.0879,     0.0019,     0.0121,     0.0000,     0.0000],
        [    0.0001,     0.0300,     0.0054,     0.0003,     0.0376,     0.0193,     0.1924,     0.0280,     0.2344,     0.0106,     0.0806,     0.0038,     0.0146,     0.3418,     0.0000],
        [    0.0000,     0.0309,     0.0049,     0.0050,     0.0272,     0.0164,     0.1738,     0.0576,     0.1816,     0.0108,     0.0405,     0.0052,     0.0579,     0.3125,     0.0752]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0143, -0.0091,  0.0736,  ...,  0.0291, -0.0149, -0.0017],
        [-0.0069,  0.0614,  0.0021,  ..., -0.0123,  0.0069,  0.1103],
        [-0.0057,  0.0077, -0.0162,  ..., -0.0201,  0.0430, -0.0061],
        ...,
        [ 0.0265,  0.0272,  0.0203,  ..., -0.0280,  0.0122, -0.0216],
        [ 0.0282,  0.0463, -0.0721,  ...,  0.0469, -0.0115,  0.1261],
        [ 0.0353,  0.0384,  0.0127,  ..., -0.0337, -0.0025, -0.0191]], device='cuda:0', requires_grad=True)
K: tensor([-4.4375, -0.5156, -7.0625,  0.9102, -0.3164, -0.9453, -5.3750,  6.7500,  4.5938, -1.8750,  4.8438, -5.4688, -4.7500, -0.5156,  2.9688,  4.5938,  3.2344, -3.8906, -3.3125, -5.1250, -5.2812,  0.4141,  0.1279, -1.4141, -4.3438, -2.8906, -1.7188, -4.9375,  4.0312,  0.1196,  3.1406, -2.5156,
        -1.5234, -6.6875, -0.4082,  6.7188,  4.9688,  1.1094,  2.8438, -3.0000, -0.1885, -4.8750, -0.9023, -4.8125,  0.1689, -2.5469,  1.2656, -5.5938,  2.8906,  0.1973,  0.0796, -6.5625, -7.1875, -6.1250,  1.4219, -0.9922, -1.1562,  2.4062, -2.4531, -2.3750,  0.9141, -4.0312, -0.0269, -6.8125],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0137, -0.0310, -0.0287,  ...,  0.0036,  0.0245, -0.0117],
        [-0.0007, -0.0022, -0.0750,  ..., -0.0547, -0.0057, -0.0215],
        [-0.0155,  0.0033,  0.0120,  ..., -0.0142, -0.0333, -0.0307],
        ...,
        [ 0.0323, -0.0161,  0.0296,  ..., -0.0146, -0.0323, -0.0048],
        [ 0.0241,  0.0106,  0.0072,  ..., -0.0166, -0.0133, -0.0368],
        [ 0.0297,  0.0018, -0.0387,  ...,  0.0387,  0.0396, -0.0221]], device='cuda:0', requires_grad=True)
Q: tensor([-1.6250,  0.3848, -1.1875,  0.3418,  1.4844, -0.2344, -1.3828,  0.4961,  2.4531,  1.2344,  2.3594, -0.7812, -0.8984, -1.5781,  1.8828, -0.4531,  1.1562,  0.1270, -0.1875,  2.2656, -0.8320, -0.4473, -1.6250, -2.9531,  0.7383, -0.0505, -0.3027, -2.0625, -2.5781,  1.1875, -0.4668,  0.4453,
         1.1719, -1.9844, -0.8789,  3.5312,  0.4160, -2.0625,  0.7305, -0.0229,  0.2637,  2.7344,  0.5469, -0.6914, -2.2812,  0.6523,  1.4531,  0.1094, -0.8633, -0.9258, -0.3418, -1.5859, -0.3945,  0.1787, -0.2754, -1.3438,  0.3809, -0.0177, -1.0938,  0.1133,  1.0938,  0.9258, -0.7109, -2.0156],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, 17.6250, 15.8125, 15.0625, 18.7500, 18.6250, 20.7500, 19.3750, 21.5000, 18.3750, 20.1250, 17.1250, 20.0000, 22.7500, 21.3750],
        [ 0.0000, 21.5000, 21.5000, 22.8750, 24.0000, 24.1250, 24.8750, 24.5000, 25.2500, 24.1250, 25.1250, 24.2500, 27.2500, 27.1250, 27.1250],
        [ 0.0000, 10.5625,  8.7500,  7.3438,  9.6875,  9.3125, 11.3750,  9.8125, 11.4375,  9.0000, 10.3125,  7.2500,  9.5000, 11.1250, 10.4375],
        [ 0.0000,  1.1562,  0.1069, -3.0625,  1.2031,  0.3184,  2.0469,  0.5117,  2.5312, -0.9805,  0.9688, -2.3281, -0.6992,  2.1250,  0.7461],
        [ 0.0000,  6.7812,  4.9375,  2.4688,  5.7500,  4.9375,  7.5312,  6.0000,  7.6875,  4.9062,  6.4375,  4.0000,  4.7188,  7.5312,  6.2188],
        [ 0.0000, 12.3750,  9.5625,  7.6562, 11.0625, 10.4375, 13.0625, 11.0000, 13.0625,  8.9375, 10.2500,  6.8750,  8.9375, 12.5000, 10.9375],
        [ 0.0000,  6.0625,  4.5625,  1.6250,  5.3750,  5.1562,  7.6875,  5.6562,  7.8125,  4.6875,  6.2500,  2.8750,  5.0312,  7.8750,  7.2812],
        [ 0.0000,  7.4062,  6.0625,  3.0312,  7.7812,  7.1875,  9.2500,  7.3125,  9.3125,  6.2188,  8.1250,  5.0625,  6.7812,  9.5625,  8.9375],
        [ 0.0000,  6.0625,  4.8125,  3.0469,  5.6250,  5.0625,  7.5938,  6.3125,  7.5625,  5.4062,  6.7188,  4.8750,  6.1875,  8.0000,  7.3125],
        [ 0.0000,  4.2812,  3.1875,  0.7344,  4.3125,  2.8750,  5.7500,  4.6875,  6.6250,  3.2500,  5.3438,  2.3594,  3.6094,  6.9688,  5.8438],
        [ 0.0000,  9.3125,  8.3750,  7.6562,  9.9375,  9.3750, 11.4375, 10.3750, 11.5625,  9.2500, 10.5625,  8.5625, 10.8125, 12.1875, 11.5000],
        [ 0.0000,  4.6875,  2.5312, -0.3398,  4.4375,  3.9844,  7.0312,  4.9062,  7.2500,  3.7031,  5.6875,  1.8594,  3.6875,  7.6562,  6.5938],
        [ 0.0000,  6.1562,  4.4688,  1.5469,  6.4062,  5.7188,  8.0000,  6.0938,  8.2500,  5.1250,  7.1562,  4.0938,  5.4375,  8.6250,  7.8438],
        [ 0.0000, 12.1250, 10.3125, 10.3125, 12.0000, 11.5000, 13.8750, 12.7500, 13.9375, 11.0625, 12.4375, 10.3750, 12.7500, 14.4375, 13.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3966],
        [0.2843],
        [0.2098],
        [0.2379],
        [0.1820],
        [0.1336],
        [0.1071],
        [0.1296],
        [0.1437],
        [0.1065],
        [0.1185],
        [0.0977],
        [0.0953],
        [0.0774]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.0840 a:0.1147,:0.1689 and:0.0908,:0.2754,:0.4844 a:0.0791iced:0.7109)
iced
------
		( a:0.1147,:0.1689 and:0.0908,:0.2754,:0.4844 a:0.0791iced:0.7109 with:0.1533)
 with a variety of colors, and they are also used for making a variety
@ 4550 train 4.3285 , allloss: 4.3285, dt: 1706.01ms, fracRes: 0.7078, norm(attn): 0.1807, norm(output): 0.9399, norm(x): 0.7699, norm(y): 1.0032, norm:0.7686, tok/sec: 76829.71, flops:80.64, batch-reuse:1
@ 4551 train 4.2200 , allloss: 4.2200, dt: 1305.43ms, fracRes: 0.7080, norm(attn): 0.1797, norm(output): 0.9400, norm(x): 0.7699, norm(y): 1.0030, norm:0.6008, tok/sec: 100405.47, flops:105.39, batch-reuse:1
@ 4552 train 4.3643 , allloss: 4.3644, dt: 1292.24ms, fracRes: 0.7081, norm(attn): 0.1777, norm(output): 0.9401, norm(x): 0.7697, norm(y): 1.0031, norm:0.6393, tok/sec: 101429.93, flops:106.46, batch-reuse:1
@ 4553 train 4.2032 , allloss: 4.2032, dt: 1289.47ms, fracRes: 0.7080, norm(attn): 0.1797, norm(output): 0.9401, norm(x): 0.7703, norm(y): 1.0032, norm:0.5904, tok/sec: 101648.06, flops:106.69, batch-reuse:1
@ 4554 train 4.4205 , allloss: 4.4205, dt: 1295.12ms, fracRes: 0.7080, norm(attn): 0.1777, norm(output): 0.9402, norm(x): 0.7705, norm(y): 1.0034, norm:0.6149, tok/sec: 101204.80, flops:106.23, batch-reuse:1
@ 4555 train 4.2731 , allloss: 4.2732, dt: 1300.48ms, fracRes: 0.7078, norm(attn): 0.1807, norm(output): 0.9401, norm(x): 0.7701, norm(y): 1.0034, norm:0.7322, tok/sec: 100787.50, flops:105.79, batch-reuse:1
@ 4556 train 4.3708 , allloss: 4.3708, dt: 1317.78ms, fracRes: 0.7079, norm(attn): 0.1768, norm(output): 0.9405, norm(x): 0.7699, norm(y): 1.0033, norm:0.6396, tok/sec: 99464.25, flops:104.40, batch-reuse:1
@ 4557 train 4.2258 , allloss: 4.2259, dt: 1299.51ms, fracRes: 0.7079, norm(attn): 0.1787, norm(output): 0.9400, norm(x): 0.7693, norm(y): 1.0032, norm:0.7622, tok/sec: 100862.41, flops:105.87, batch-reuse:1
@ 4558 train 4.2210 , allloss: 4.2210, dt: 1286.69ms, fracRes: 0.7080, norm(attn): 0.1777, norm(output): 0.9400, norm(x): 0.7697, norm(y): 1.0033, norm:0.6677, tok/sec: 101867.41, flops:106.92, batch-reuse:1
@ 4559 train 4.3006 , allloss: 4.3006, dt: 1325.95ms, fracRes: 0.7080, norm(attn): 0.1797, norm(output): 0.9401, norm(x): 0.7705, norm(y): 1.0031, norm:0.6516, tok/sec: 98851.63, flops:103.76, batch-reuse:1
@ 4560 train 4.2875 , allloss: 4.2875, dt: 1300.85ms, fracRes: 0.7079, norm(attn): 0.1797, norm(output): 0.9402, norm(x): 0.7707, norm(y): 1.0033, norm:0.6625, tok/sec: 100759.02, flops:105.76, batch-reuse:1
@ 4561 train 4.3971 , allloss: 4.3972, dt: 1299.24ms, fracRes: 0.7080, norm(attn): 0.1777, norm(output): 0.9402, norm(x): 0.7709, norm(y): 1.0034, norm:0.6330, tok/sec: 100883.81, flops:105.89, batch-reuse:1
@ 4562 train 4.3645 , allloss: 4.3647, dt: 1333.76ms, fracRes: 0.7080, norm(attn): 0.1768, norm(output): 0.9404, norm(x): 0.7704, norm(y): 1.0032, norm:0.6482, tok/sec: 98272.29, flops:103.15, batch-reuse:1
@ 4563 train 4.2967 , allloss: 4.2968, dt: 1322.98ms, fracRes: 0.7080, norm(attn): 0.1768, norm(output): 0.9402, norm(x): 0.7697, norm(y): 1.0031, norm:0.6270, tok/sec: 99073.17, flops:103.99, batch-reuse:1
@ 4564 train 4.2900 , allloss: 4.2901, dt: 1331.87ms, fracRes: 0.7079, norm(attn): 0.1816, norm(output): 0.9400, norm(x): 0.7698, norm(y): 1.0034, norm:0.5555, tok/sec: 98411.83, flops:103.30, batch-reuse:1
@ 4565 train 4.2759 , allloss: 4.2760, dt: 1337.70ms, fracRes: 0.7079, norm(attn): 0.1826, norm(output): 0.9400, norm(x): 0.7698, norm(y): 1.0034, norm:0.6635, tok/sec: 97983.34, flops:102.85, batch-reuse:1
@ 4566 train 4.2536 , allloss: 4.2537, dt: 1315.78ms, fracRes: 0.7079, norm(attn): 0.1807, norm(output): 0.9399, norm(x): 0.7697, norm(y): 1.0033, norm:0.5849, tok/sec: 99615.57, flops:104.56, batch-reuse:1
@ 4567 train 4.2978 , allloss: 4.2978, dt: 1288.64ms, fracRes: 0.7080, norm(attn): 0.1797, norm(output): 0.9401, norm(x): 0.7695, norm(y): 1.0030, norm:0.5766, tok/sec: 101713.11, flops:106.76, batch-reuse:1
@ 4568 train 4.2565 , allloss: 4.2566, dt: 1289.86ms, fracRes: 0.7081, norm(attn): 0.1816, norm(output): 0.9400, norm(x): 0.7694, norm(y): 1.0030, norm:0.6360, tok/sec: 101617.15, flops:106.66, batch-reuse:1
@ 4569 train 4.2413 , allloss: 4.2414, dt: 1307.64ms, fracRes: 0.7080, norm(attn): 0.1797, norm(output): 0.9402, norm(x): 0.7698, norm(y): 1.0031, norm:0.6340, tok/sec: 100235.81, flops:105.21, batch-reuse:1
@ 4570 train 4.2248 , allloss: 4.2249, dt: 1313.08ms, fracRes: 0.7080, norm(attn): 0.1807, norm(output): 0.9401, norm(x): 0.7697, norm(y): 1.0032, norm:0.6252, tok/sec: 99820.52, flops:104.77, batch-reuse:1
@ 4571 train 4.3654 , allloss: 4.3655, dt: 1326.99ms, fracRes: 0.7079, norm(attn): 0.1768, norm(output): 0.9403, norm(x): 0.7702, norm(y): 1.0033, norm:0.5472, tok/sec: 98774.07, flops:103.68, batch-reuse:1
@ 4572 train 4.2551 , allloss: 4.2552, dt: 1292.86ms, fracRes: 0.7079, norm(attn): 0.1797, norm(output): 0.9399, norm(x): 0.7701, norm(y): 1.0034, norm:0.5951, tok/sec: 101381.82, flops:106.41, batch-reuse:1
@ 4573 train 4.2703 , allloss: 4.2703, dt: 1300.68ms, fracRes: 0.7079, norm(attn): 0.1797, norm(output): 0.9402, norm(x): 0.7702, norm(y): 1.0033, norm:0.6693, tok/sec: 100771.52, flops:105.77, batch-reuse:1
@ 4574 train 4.2626 , allloss: 4.2627, dt: 1297.18ms, fracRes: 0.7082, norm(attn): 0.1787, norm(output): 0.9398, norm(x): 0.7697, norm(y): 1.0035, norm:0.7340, tok/sec: 101044.12, flops:106.06, batch-reuse:1
@ 4575 train 4.2763 , allloss: 4.2764, dt: 1306.82ms, fracRes: 0.7079, norm(attn): 0.1797, norm(output): 0.9402, norm(x): 0.7704, norm(y): 1.0033, norm:0.6295, tok/sec: 100298.62, flops:105.28, batch-reuse:1
@ 4576 train 4.2527 , allloss: 4.2528, dt: 1308.65ms, fracRes: 0.7081, norm(attn): 0.1797, norm(output): 0.9399, norm(x): 0.7705, norm(y): 1.0035, norm:0.5931, tok/sec: 100158.16, flops:105.13, batch-reuse:1
@ 4577 train 4.2373 , allloss: 4.2373, dt: 1397.14ms, fracRes: 0.7081, norm(attn): 0.1777, norm(output): 0.9400, norm(x): 0.7710, norm(y): 1.0036, norm:0.6624, tok/sec: 93814.84, flops:98.47, batch-reuse:1
@ 4578 train 4.2309 , allloss: 4.2311, dt: 1314.29ms, fracRes: 0.7079, norm(attn): 0.1777, norm(output): 0.9400, norm(x): 0.7707, norm(y): 1.0033, norm:0.6206, tok/sec: 99728.26, flops:104.68, batch-reuse:1
@ 4579 train 4.2273 , allloss: 4.2274, dt: 1301.50ms, fracRes: 0.7079, norm(attn): 0.1816, norm(output): 0.9401, norm(x): 0.7705, norm(y): 1.0033, norm:0.6225, tok/sec: 100708.24, flops:105.71, batch-reuse:1
@ 4580 train 4.3998 , allloss: 4.3998, dt: 1307.63ms, fracRes: 0.7079, norm(attn): 0.1758, norm(output): 0.9402, norm(x): 0.7702, norm(y): 1.0033, norm:0.6566, tok/sec: 100236.48, flops:105.21, batch-reuse:1
@ 4581 train 4.2097 , allloss: 4.2099, dt: 1312.61ms, fracRes: 0.7081, norm(attn): 0.1777, norm(output): 0.9399, norm(x): 0.7699, norm(y): 1.0037, norm:0.8187, tok/sec: 99855.93, flops:104.81, batch-reuse:1
@ 4582 train 4.1839 , allloss: 4.1839, dt: 1324.74ms, fracRes: 0.7079, norm(attn): 0.1797, norm(output): 0.9401, norm(x): 0.7702, norm(y): 1.0035, norm:0.7001, tok/sec: 98941.72, flops:103.85, batch-reuse:1
@ 4583 train 4.3210 , allloss: 4.3212, dt: 1310.33ms, fracRes: 0.7078, norm(attn): 0.1787, norm(output): 0.9402, norm(x): 0.7701, norm(y): 1.0031, norm:0.6014, tok/sec: 100030.04, flops:104.99, batch-reuse:1
@ 4584 train 4.3443 , allloss: 4.3443, dt: 1299.83ms, fracRes: 0.7078, norm(attn): 0.1787, norm(output): 0.9405, norm(x): 0.7707, norm(y): 1.0029, norm:0.7118, tok/sec: 100838.12, flops:105.84, batch-reuse:1
@ 4585 train 4.0815 , allloss: 4.0815, dt: 1313.72ms, fracRes: 0.7076, norm(attn): 0.1777, norm(output): 0.9402, norm(x): 0.7709, norm(y): 1.0030, norm:0.6126, tok/sec: 99771.97, flops:104.72, batch-reuse:1
@ 4586 train 4.1408 , allloss: 4.1409, dt: 1310.59ms, fracRes: 0.7079, norm(attn): 0.1758, norm(output): 0.9402, norm(x): 0.7703, norm(y): 1.0031, norm:0.6149, tok/sec: 100010.14, flops:104.97, batch-reuse:1
@ 4587 train 4.1577 , allloss: 4.1578, dt: 1302.96ms, fracRes: 0.7082, norm(attn): 0.1777, norm(output): 0.9402, norm(x): 0.7701, norm(y): 1.0032, norm:0.6880, tok/sec: 100595.81, flops:105.59, batch-reuse:1
@ 4588 train 4.1545 , allloss: 4.1546, dt: 1278.52ms, fracRes: 0.7081, norm(attn): 0.1797, norm(output): 0.9402, norm(x): 0.7699, norm(y): 1.0032, norm:0.6391, tok/sec: 102518.72, flops:107.61, batch-reuse:1
@ 4589 train 4.1069 , allloss: 4.1071, dt: 1295.60ms, fracRes: 0.7079, norm(attn): 0.1807, norm(output): 0.9401, norm(x): 0.7706, norm(y): 1.0031, norm:0.5724, tok/sec: 101167.14, flops:106.19, batch-reuse:1
@ 4590 train 4.0691 , allloss: 4.0692, dt: 1313.79ms, fracRes: 0.7079, norm(attn): 0.1797, norm(output): 0.9401, norm(x): 0.7710, norm(y): 1.0030, norm:0.6990, tok/sec: 99766.05, flops:104.72, batch-reuse:1
@ 4591 train 4.1346 , allloss: 4.1348, dt: 1328.35ms, fracRes: 0.7081, norm(attn): 0.1836, norm(output): 0.9398, norm(x): 0.7703, norm(y): 1.0032, norm:0.6126, tok/sec: 98672.68, flops:103.57, batch-reuse:1
@ 4592 train 4.2847 , allloss: 4.2851, dt: 1295.88ms, fracRes: 0.7083, norm(attn): 0.1787, norm(output): 0.9400, norm(x): 0.7700, norm(y): 1.0033, norm:0.6764, tok/sec: 101145.46, flops:106.17, batch-reuse:1
@ 4593 train 4.0979 , allloss: 4.0982, dt: 1280.05ms, fracRes: 0.7083, norm(attn): 0.1777, norm(output): 0.9399, norm(x): 0.7694, norm(y): 1.0032, norm:0.6483, tok/sec: 102396.05, flops:107.48, batch-reuse:1
@ 4594 train 4.2238 , allloss: 4.2239, dt: 1299.86ms, fracRes: 0.7082, norm(attn): 0.1787, norm(output): 0.9400, norm(x): 0.7699, norm(y): 1.0031, norm:0.6585, tok/sec: 100835.22, flops:105.84, batch-reuse:1
@ 4595 train 4.1653 , allloss: 4.1654, dt: 1337.13ms, fracRes: 0.7082, norm(attn): 0.1816, norm(output): 0.9401, norm(x): 0.7703, norm(y): 1.0031, norm:0.6394, tok/sec: 98025.20, flops:102.89, batch-reuse:1
@ 4596 train 4.2065 , allloss: 4.2066, dt: 1329.21ms, fracRes: 0.7081, norm(attn): 0.1836, norm(output): 0.9401, norm(x): 0.7701, norm(y): 1.0030, norm:0.6061, tok/sec: 98609.30, flops:103.50, batch-reuse:1
@ 4597 train 4.1851 , allloss: 4.1851, dt: 1315.56ms, fracRes: 0.7080, norm(attn): 0.1816, norm(output): 0.9401, norm(x): 0.7706, norm(y): 1.0031, norm:0.6127, tok/sec: 99631.73, flops:104.58, batch-reuse:1
@ 4598 train 4.1165 , allloss: 4.1166, dt: 1309.97ms, fracRes: 0.7083, norm(attn): 0.1787, norm(output): 0.9400, norm(x): 0.7697, norm(y): 1.0032, norm:0.6222, tok/sec: 100057.46, flops:105.02, batch-reuse:1
@ 4599 train 4.1566 , allloss: 4.1566, dt: 1307.57ms, fracRes: 0.7082, norm(attn): 0.1777, norm(output): 0.9402, norm(x): 0.7703, norm(y): 1.0029, norm:0.5692, tok/sec: 100240.96, flops:105.22, batch-reuse:1
@ 4600 train 4.1128 , allloss: 4.1128, dt: 1311.72ms, fracRes: 0.7080, norm(attn): 0.1807, norm(output): 0.9401, norm(x): 0.7702, norm(y): 1.0029, norm:0.5976, tok/sec: 99923.61, flops:104.88, batch-reuse:1
@ 4601 train 4.1402 , allloss: 4.1403, dt: 1292.94ms, fracRes: 0.7079, norm(attn): 0.1807, norm(output): 0.9400, norm(x): 0.7703, norm(y): 1.0031, norm:0.5471, tok/sec: 101374.78, flops:106.41, batch-reuse:1
@ 4602 train 4.0491 , allloss: 4.0493, dt: 1302.53ms, fracRes: 0.7078, norm(attn): 0.1797, norm(output): 0.9399, norm(x): 0.7700, norm(y): 1.0032, norm:0.6738, tok/sec: 100628.90, flops:105.62, batch-reuse:1
@ 4603 train 4.0398 , allloss: 4.0400, dt: 1304.88ms, fracRes: 0.7079, norm(attn): 0.1768, norm(output): 0.9399, norm(x): 0.7697, norm(y): 1.0032, norm:0.5493, tok/sec: 100447.78, flops:105.43, batch-reuse:1
@ 4604 train 4.1737 , allloss: 4.1741, dt: 1306.74ms, fracRes: 0.7080, norm(attn): 0.1748, norm(output): 0.9403, norm(x): 0.7703, norm(y): 1.0032, norm:0.5706, tok/sec: 100304.52, flops:105.28, batch-reuse:1
@ 4605 train 4.1973 , allloss: 4.1980, dt: 1335.94ms, fracRes: 0.7080, norm(attn): 0.1777, norm(output): 0.9402, norm(x): 0.7704, norm(y): 1.0031, norm:0.7250, tok/sec: 98112.27, flops:102.98, batch-reuse:1
@ 4606 train 4.1370 , allloss: 4.1372, dt: 1333.86ms, fracRes: 0.7081, norm(attn): 0.1777, norm(output): 0.9401, norm(x): 0.7704, norm(y): 1.0031, norm:0.8142, tok/sec: 98265.42, flops:103.14, batch-reuse:1
@ 4607 train 4.3355 , allloss: 4.3355, dt: 1304.88ms, fracRes: 0.7085, norm(attn): 0.1787, norm(output): 0.9401, norm(x): 0.7702, norm(y): 1.0032, norm:0.7348, tok/sec: 100447.26, flops:105.43, batch-reuse:1
@ 4608 train 4.0872 , allloss: 4.0874, dt: 1306.29ms, fracRes: 0.7082, norm(attn): 0.1777, norm(output): 0.9402, norm(x): 0.7705, norm(y): 1.0029, norm:0.6663, tok/sec: 100339.46, flops:105.32, batch-reuse:1
@ 4609 train 4.0660 , allloss: 4.0667, dt: 1290.90ms, fracRes: 0.7081, norm(attn): 0.1807, norm(output): 0.9401, norm(x): 0.7706, norm(y): 1.0032, norm:0.7456, tok/sec: 101535.68, flops:106.58, batch-reuse:1
@ 4610 train 4.1399 , allloss: 4.1399, dt: 1334.79ms, fracRes: 0.7082, norm(attn): 0.1816, norm(output): 0.9398, norm(x): 0.7700, norm(y): 1.0032, norm:0.6001, tok/sec: 98196.41, flops:103.07, batch-reuse:1
@ 4611 train 4.1217 , allloss: 4.1218, dt: 1323.43ms, fracRes: 0.7080, norm(attn): 0.1787, norm(output): 0.9399, norm(x): 0.7704, norm(y): 1.0031, norm:0.6241, tok/sec: 99039.90, flops:103.96, batch-reuse:1
@ 4612 train 4.1334 , allloss: 4.1335, dt: 1336.44ms, fracRes: 0.7082, norm(attn): 0.1816, norm(output): 0.9400, norm(x): 0.7704, norm(y): 1.0030, norm:0.6089, tok/sec: 98075.39, flops:102.94, batch-reuse:1
@ 4613 train 4.0790 , allloss: 4.0791, dt: 1336.48ms, fracRes: 0.7080, norm(attn): 0.1797, norm(output): 0.9401, norm(x): 0.7706, norm(y): 1.0029, norm:0.5835, tok/sec: 98072.77, flops:102.94, batch-reuse:1
@ 4614 train 4.1172 , allloss: 4.1173, dt: 1339.65ms, fracRes: 0.7081, norm(attn): 0.1787, norm(output): 0.9400, norm(x): 0.7698, norm(y): 1.0028, norm:0.5278, tok/sec: 97840.64, flops:102.70, batch-reuse:1
@ 4615 train 4.1435 , allloss: 4.1436, dt: 1331.11ms, fracRes: 0.7080, norm(attn): 0.1797, norm(output): 0.9401, norm(x): 0.7705, norm(y): 1.0030, norm:0.7188, tok/sec: 98467.97, flops:103.36, batch-reuse:1
@ 4616 train 4.1382 , allloss: 4.1383, dt: 1295.04ms, fracRes: 0.7080, norm(attn): 0.1768, norm(output): 0.9401, norm(x): 0.7709, norm(y): 1.0031, norm:0.5549, tok/sec: 101210.43, flops:106.23, batch-reuse:1
@ 4617 train 4.1955 , allloss: 4.1956, dt: 1273.04ms, fracRes: 0.7083, norm(attn): 0.1777, norm(output): 0.9400, norm(x): 0.7707, norm(y): 1.0029, norm:0.5709, tok/sec: 102959.49, flops:108.07, batch-reuse:1
@ 4618 train 4.1076 , allloss: 4.1078, dt: 1286.85ms, fracRes: 0.7083, norm(attn): 0.1777, norm(output): 0.9402, norm(x): 0.7709, norm(y): 1.0029, norm:0.5215, tok/sec: 101855.26, flops:106.91, batch-reuse:1
@ 4619 train 4.1518 , allloss: 4.1518, dt: 1295.23ms, fracRes: 0.7084, norm(attn): 0.1777, norm(output): 0.9402, norm(x): 0.7706, norm(y): 1.0030, norm:0.6299, tok/sec: 101196.27, flops:106.22, batch-reuse:1
@ 4620 train 4.1706 , allloss: 4.1707, dt: 1282.26ms, fracRes: 0.7083, norm(attn): 0.1787, norm(output): 0.9402, norm(x): 0.7706, norm(y): 1.0031, norm:0.5981, tok/sec: 102219.79, flops:107.29, batch-reuse:1
@ 4621 train 4.0724 , allloss: 4.0725, dt: 1287.06ms, fracRes: 0.7083, norm(attn): 0.1768, norm(output): 0.9401, norm(x): 0.7702, norm(y): 1.0030, norm:0.5959, tok/sec: 101838.35, flops:106.89, batch-reuse:1
@ 4622 train 4.1071 , allloss: 4.1071, dt: 1293.78ms, fracRes: 0.7082, norm(attn): 0.1777, norm(output): 0.9402, norm(x): 0.7706, norm(y): 1.0029, norm:0.5828, tok/sec: 101309.50, flops:106.34, batch-reuse:1
@ 4623 train 4.1392 , allloss: 4.1397, dt: 1283.07ms, fracRes: 0.7083, norm(attn): 0.1758, norm(output): 0.9401, norm(x): 0.7710, norm(y): 1.0030, norm:0.5242, tok/sec: 102155.08, flops:107.23, batch-reuse:1
@ 4624 train 4.0948 , allloss: 4.0960, dt: 1285.31ms, fracRes: 0.7084, norm(attn): 0.1768, norm(output): 0.9400, norm(x): 0.7714, norm(y): 1.0032, norm:0.5711, tok/sec: 101976.88, flops:107.04, batch-reuse:1
@ 4625 train 4.0892 , allloss: 4.0894, dt: 1297.57ms, fracRes: 0.7084, norm(attn): 0.1768, norm(output): 0.9400, norm(x): 0.7713, norm(y): 1.0033, norm:0.6986, tok/sec: 101013.56, flops:106.03, batch-reuse:1
@ 4626 train 4.0974 , allloss: 4.0975, dt: 1283.08ms, fracRes: 0.7084, norm(attn): 0.1777, norm(output): 0.9401, norm(x): 0.7705, norm(y): 1.0031, norm:0.7666, tok/sec: 102154.58, flops:107.22, batch-reuse:1
@ 4627 train 4.1926 , allloss: 4.1927, dt: 1286.09ms, fracRes: 0.7082, norm(attn): 0.1768, norm(output): 0.9400, norm(x): 0.7699, norm(y): 1.0030, norm:0.6176, tok/sec: 101915.19, flops:106.97, batch-reuse:1
@ 4628 train 3.9951 , allloss: 3.9952, dt: 1293.10ms, fracRes: 0.7082, norm(attn): 0.1748, norm(output): 0.9409, norm(x): 0.7718, norm(y): 1.0032, norm:0.9576, tok/sec: 101362.79, flops:106.39, batch-reuse:1
@ 4629 train 4.2525 , allloss: 4.2526, dt: 1280.86ms, fracRes: 0.7083, norm(attn): 0.1758, norm(output): 0.9401, norm(x): 0.7709, norm(y): 1.0034, norm:0.9934, tok/sec: 102331.50, flops:107.41, batch-reuse:1
@ 4630 train 4.1850 , allloss: 4.1852, dt: 1306.27ms, fracRes: 0.7081, norm(attn): 0.1787, norm(output): 0.9400, norm(x): 0.7705, norm(y): 1.0030, norm:0.8486, tok/sec: 100340.89, flops:105.32, batch-reuse:1
@ 4631 train 4.2828 , allloss: 4.2830, dt: 1340.20ms, fracRes: 0.7082, norm(attn): 0.1797, norm(output): 0.9400, norm(x): 0.7708, norm(y): 1.0029, norm:0.8132, tok/sec: 97800.16, flops:102.65, batch-reuse:1
@ 4632 train 4.3363 , allloss: 4.3372, dt: 1294.31ms, fracRes: 0.7081, norm(attn): 0.1787, norm(output): 0.9400, norm(x): 0.7712, norm(y): 1.0030, norm:0.7735, tok/sec: 101268.00, flops:106.29, batch-reuse:1
@ 4633 train 4.2686 , allloss: 4.2686, dt: 1288.75ms, fracRes: 0.7083, norm(attn): 0.1807, norm(output): 0.9403, norm(x): 0.7711, norm(y): 1.0030, norm:0.7171, tok/sec: 101704.95, flops:106.75, batch-reuse:1
@ 4634 train 4.3071 , allloss: 4.3072, dt: 1305.23ms, fracRes: 0.7083, norm(attn): 0.1797, norm(output): 0.9402, norm(x): 0.7709, norm(y): 1.0028, norm:0.7211, tok/sec: 100420.27, flops:105.40, batch-reuse:1
@ 4635 train 4.2886 , allloss: 4.2887, dt: 1333.65ms, fracRes: 0.7082, norm(attn): 0.1797, norm(output): 0.9403, norm(x): 0.7708, norm(y): 1.0028, norm:0.5851, tok/sec: 98280.44, flops:103.16, batch-reuse:1
@ 4636 train 4.2392 , allloss: 4.2393, dt: 1306.39ms, fracRes: 0.7083, norm(attn): 0.1777, norm(output): 0.9401, norm(x): 0.7702, norm(y): 1.0029, norm:0.6154, tok/sec: 100331.50, flops:105.31, batch-reuse:1
@ 4637 train 4.1395 , allloss: 4.1402, dt: 1329.87ms, fracRes: 0.7084, norm(attn): 0.1797, norm(output): 0.9399, norm(x): 0.7689, norm(y): 1.0031, norm:0.5795, tok/sec: 98559.80, flops:103.45, batch-reuse:1
@ 4638 train 4.2914 , allloss: 4.2916, dt: 1309.63ms, fracRes: 0.7084, norm(attn): 0.1787, norm(output): 0.9399, norm(x): 0.7690, norm(y): 1.0033, norm:0.5866, tok/sec: 100083.00, flops:105.05, batch-reuse:1
@ 4639 train 4.2866 , allloss: 4.2866, dt: 1299.13ms, fracRes: 0.7082, norm(attn): 0.1777, norm(output): 0.9400, norm(x): 0.7701, norm(y): 1.0032, norm:0.5222, tok/sec: 100892.21, flops:105.90, batch-reuse:1
@ 4640 train 4.2742 , allloss: 4.2743, dt: 1281.79ms, fracRes: 0.7081, norm(attn): 0.1807, norm(output): 0.9403, norm(x): 0.7713, norm(y): 1.0031, norm:0.6063, tok/sec: 102257.09, flops:107.33, batch-reuse:1
@ 4641 train 4.2684 , allloss: 4.2684, dt: 1300.47ms, fracRes: 0.7082, norm(attn): 0.1787, norm(output): 0.9404, norm(x): 0.7710, norm(y): 1.0029, norm:0.5804, tok/sec: 100788.09, flops:105.79, batch-reuse:1
@ 4642 train 4.2465 , allloss: 4.2466, dt: 1297.88ms, fracRes: 0.7085, norm(attn): 0.1777, norm(output): 0.9398, norm(x): 0.7702, norm(y): 1.0031, norm:0.6812, tok/sec: 100989.68, flops:106.00, batch-reuse:1
@ 4643 train 4.4248 , allloss: 4.4249, dt: 1295.90ms, fracRes: 0.7088, norm(attn): 0.1787, norm(output): 0.9400, norm(x): 0.7702, norm(y): 1.0030, norm:0.6327, tok/sec: 101143.43, flops:106.16, batch-reuse:1
@ 4644 train 4.2857 , allloss: 4.2857, dt: 1301.00ms, fracRes: 0.7086, norm(attn): 0.1768, norm(output): 0.9400, norm(x): 0.7701, norm(y): 1.0031, norm:0.6042, tok/sec: 100747.09, flops:105.75, batch-reuse:1
@ 4645 train 4.3260 , allloss: 4.3267, dt: 1282.62ms, fracRes: 0.7085, norm(attn): 0.1777, norm(output): 0.9402, norm(x): 0.7705, norm(y): 1.0030, norm:0.8131, tok/sec: 102190.96, flops:107.26, batch-reuse:1
@ 4646 train 4.3419 , allloss: 4.3419, dt: 1290.22ms, fracRes: 0.7084, norm(attn): 0.1777, norm(output): 0.9405, norm(x): 0.7713, norm(y): 1.0028, norm:0.7996, tok/sec: 101588.82, flops:106.63, batch-reuse:1
@ 4647 train 4.3127 , allloss: 4.3128, dt: 1306.64ms, fracRes: 0.7084, norm(attn): 0.1768, norm(output): 0.9402, norm(x): 0.7709, norm(y): 1.0028, norm:0.6439, tok/sec: 100311.95, flops:105.29, batch-reuse:1
@ 4648 train 4.3189 , allloss: 4.3190, dt: 1325.86ms, fracRes: 0.7085, norm(attn): 0.1768, norm(output): 0.9403, norm(x): 0.7710, norm(y): 1.0030, norm:0.5498, tok/sec: 98857.96, flops:103.76, batch-reuse:1
@ 4649 train 4.2948 , allloss: 4.2948, dt: 1283.58ms, fracRes: 0.7084, norm(attn): 0.1768, norm(output): 0.9402, norm(x): 0.7713, norm(y): 1.0031, norm:0.6095, tok/sec: 102114.01, flops:107.18, batch-reuse:1
@ 4650 train 4.1843 , allloss: 4.1846, dt: 1314.87ms, fracRes: 0.7084, norm(attn): 0.1768, norm(output): 0.9402, norm(x): 0.7714, norm(y): 1.0031, norm:0.5992, tok/sec: 99684.37, flops:104.63, batch-reuse:1
@ 4651 train 4.2875 , allloss: 4.2876, dt: 1296.76ms, fracRes: 0.7084, norm(attn): 0.1787, norm(output): 0.9402, norm(x): 0.7710, norm(y): 1.0030, norm:0.5468, tok/sec: 101076.54, flops:106.09, batch-reuse:1
@ 4652 train 4.3144 , allloss: 4.3144, dt: 1328.88ms, fracRes: 0.7084, norm(attn): 0.1797, norm(output): 0.9400, norm(x): 0.7704, norm(y): 1.0030, norm:0.5978, tok/sec: 98633.16, flops:103.53, batch-reuse:1
@ 4653 train 4.3244 , allloss: 4.3245, dt: 1306.66ms, fracRes: 0.7086, norm(attn): 0.1768, norm(output): 0.9402, norm(x): 0.7705, norm(y): 1.0031, norm:0.6396, tok/sec: 100310.54, flops:105.29, batch-reuse:1
@ 4654 train 4.3098 , allloss: 4.3099, dt: 1305.55ms, fracRes: 0.7084, norm(attn): 0.1777, norm(output): 0.9402, norm(x): 0.7707, norm(y): 1.0031, norm:0.7277, tok/sec: 100396.07, flops:105.38, batch-reuse:1
@ 4655 train 4.2958 , allloss: 4.2961, dt: 1344.40ms, fracRes: 0.7081, norm(attn): 0.1777, norm(output): 0.9404, norm(x): 0.7716, norm(y): 1.0032, norm:0.5879, tok/sec: 97494.90, flops:102.33, batch-reuse:1
@ 4656 train 4.2032 , allloss: 4.2033, dt: 1317.85ms, fracRes: 0.7081, norm(attn): 0.1768, norm(output): 0.9401, norm(x): 0.7718, norm(y): 1.0031, norm:0.6548, tok/sec: 99459.03, flops:104.40, batch-reuse:1
@ 4657 train 4.2204 , allloss: 4.2206, dt: 1333.23ms, fracRes: 0.7082, norm(attn): 0.1758, norm(output): 0.9402, norm(x): 0.7716, norm(y): 1.0029, norm:0.6318, tok/sec: 98311.48, flops:103.19, batch-reuse:1
@ 4658 train 4.3711 , allloss: 4.3711, dt: 1336.80ms, fracRes: 0.7084, norm(attn): 0.1758, norm(output): 0.9406, norm(x): 0.7713, norm(y): 1.0029, norm:0.6204, tok/sec: 98049.05, flops:102.92, batch-reuse:1
@ 4659 train 4.2815 , allloss: 4.2819, dt: 1331.95ms, fracRes: 0.7086, norm(attn): 0.1797, norm(output): 0.9401, norm(x): 0.7702, norm(y): 1.0031, norm:0.5909, tok/sec: 98406.22, flops:103.29, batch-reuse:1
@ 4660 train 4.2281 , allloss: 4.2282, dt: 1342.16ms, fracRes: 0.7085, norm(attn): 0.1777, norm(output): 0.9403, norm(x): 0.7704, norm(y): 1.0032, norm:0.6329, tok/sec: 97657.25, flops:102.50, batch-reuse:1
@ 4661 train 4.2401 , allloss: 4.2402, dt: 1327.18ms, fracRes: 0.7084, norm(attn): 0.1748, norm(output): 0.9402, norm(x): 0.7707, norm(y): 1.0033, norm:0.6601, tok/sec: 98759.71, flops:103.66, batch-reuse:1
@ 4662 train 4.3045 , allloss: 4.3046, dt: 1316.92ms, fracRes: 0.7083, norm(attn): 0.1758, norm(output): 0.9404, norm(x): 0.7712, norm(y): 1.0032, norm:0.6462, tok/sec: 99528.84, flops:104.47, batch-reuse:1
@ 4663 train 4.2616 , allloss: 4.2618, dt: 1295.50ms, fracRes: 0.7082, norm(attn): 0.1777, norm(output): 0.9403, norm(x): 0.7714, norm(y): 1.0032, norm:0.6308, tok/sec: 101174.89, flops:106.20, batch-reuse:1
@ 4664 train 4.1617 , allloss: 4.1621, dt: 1308.69ms, fracRes: 0.7084, norm(attn): 0.1777, norm(output): 0.9401, norm(x): 0.7711, norm(y): 1.0032, norm:0.6815, tok/sec: 100154.93, flops:105.13, batch-reuse:1
@ 4665 train 4.2928 , allloss: 4.2929, dt: 1315.08ms, fracRes: 0.7084, norm(attn): 0.1748, norm(output): 0.9403, norm(x): 0.7717, norm(y): 1.0033, norm:0.6596, tok/sec: 99668.21, flops:104.61, batch-reuse:1
@ 4666 train 4.2170 , allloss: 4.2170, dt: 1287.95ms, fracRes: 0.7083, norm(attn): 0.1758, norm(output): 0.9404, norm(x): 0.7723, norm(y): 1.0034, norm:0.5854, tok/sec: 101767.85, flops:106.82, batch-reuse:1
@ 4667 train 4.3220 , allloss: 4.3222, dt: 1292.61ms, fracRes: 0.7084, norm(attn): 0.1768, norm(output): 0.9403, norm(x): 0.7725, norm(y): 1.0033, norm:0.6509, tok/sec: 101400.92, flops:106.43, batch-reuse:1
@ 4668 train 4.2477 , allloss: 4.2480, dt: 1342.25ms, fracRes: 0.7084, norm(attn): 0.1748, norm(output): 0.9403, norm(x): 0.7722, norm(y): 1.0031, norm:0.6536, tok/sec: 97650.80, flops:102.50, batch-reuse:1
@ 4669 train 4.2715 , allloss: 4.2718, dt: 1304.90ms, fracRes: 0.7085, norm(attn): 0.1768, norm(output): 0.9403, norm(x): 0.7719, norm(y): 1.0030, norm:0.5947, tok/sec: 100446.02, flops:105.43, batch-reuse:1
@ 4670 train 4.2964 , allloss: 4.2966, dt: 1278.59ms, fracRes: 0.7083, norm(attn): 0.1768, norm(output): 0.9404, norm(x): 0.7725, norm(y): 1.0031, norm:0.5506, tok/sec: 102512.53, flops:107.60, batch-reuse:1
@ 4671 train 4.2271 , allloss: 4.2272, dt: 1279.69ms, fracRes: 0.7084, norm(attn): 0.1797, norm(output): 0.9404, norm(x): 0.7724, norm(y): 1.0032, norm:0.5512, tok/sec: 102424.46, flops:107.51, batch-reuse:1
@ 4672 train 4.3677 , allloss: 4.3678, dt: 1283.35ms, fracRes: 0.7084, norm(attn): 0.1777, norm(output): 0.9403, norm(x): 0.7717, norm(y): 1.0033, norm:0.5701, tok/sec: 102133.00, flops:107.20, batch-reuse:1
@ 4673 train 4.2044 , allloss: 4.2045, dt: 1320.64ms, fracRes: 0.7085, norm(attn): 0.1777, norm(output): 0.9400, norm(x): 0.7707, norm(y): 1.0034, norm:0.6120, tok/sec: 99248.48, flops:104.17, batch-reuse:1
@ 4674 train 4.2730 , allloss: 4.2753, dt: 1303.26ms, fracRes: 0.7086, norm(attn): 0.1768, norm(output): 0.9401, norm(x): 0.7707, norm(y): 1.0034, norm:0.7826, tok/sec: 100572.79, flops:105.56, batch-reuse:1
@ 4675 train 4.2439 , allloss: 4.2446, dt: 1330.63ms, fracRes: 0.7082, norm(attn): 0.1768, norm(output): 0.9403, norm(x): 0.7714, norm(y): 1.0031, norm:0.7425, tok/sec: 98503.62, flops:103.39, batch-reuse:1
@ 4676 train 4.3007 , allloss: 4.3009, dt: 1308.71ms, fracRes: 0.7080, norm(attn): 0.1768, norm(output): 0.9404, norm(x): 0.7724, norm(y): 1.0031, norm:0.5374, tok/sec: 100153.94, flops:105.12, batch-reuse:1
@ 4677 train 4.3433 , allloss: 4.3434, dt: 1311.28ms, fracRes: 0.7081, norm(attn): 0.1768, norm(output): 0.9403, norm(x): 0.7727, norm(y): 1.0031, norm:0.6488, tok/sec: 99957.46, flops:104.92, batch-reuse:1
@ 4678 train 4.2462 , allloss: 4.2466, dt: 1317.78ms, fracRes: 0.7081, norm(attn): 0.1787, norm(output): 0.9404, norm(x): 0.7726, norm(y): 1.0029, norm:0.6504, tok/sec: 99464.27, flops:104.40, batch-reuse:1
@ 4679 train 4.3684 , allloss: 4.3688, dt: 1337.28ms, fracRes: 0.7082, norm(attn): 0.1758, norm(output): 0.9408, norm(x): 0.7725, norm(y): 1.0031, norm:0.5875, tok/sec: 98013.63, flops:102.88, batch-reuse:1
@ 4680 train 4.5494 , allloss: 4.5494, dt: 1291.37ms, fracRes: 0.7083, norm(attn): 0.1748, norm(output): 0.9412, norm(x): 0.7725, norm(y): 1.0031, norm:0.6267, tok/sec: 101498.15, flops:106.54, batch-reuse:1
@ 4681 train 4.2658 , allloss: 4.2659, dt: 1282.53ms, fracRes: 0.7085, norm(attn): 0.1738, norm(output): 0.9410, norm(x): 0.7728, norm(y): 1.0033, norm:0.8699, tok/sec: 102197.82, flops:107.27, batch-reuse:1
@ 4682 train 4.1842 , allloss: 4.1843, dt: 1292.25ms, fracRes: 0.7087, norm(attn): 0.1777, norm(output): 0.9401, norm(x): 0.7710, norm(y): 1.0032, norm:0.8192, tok/sec: 101429.22, flops:106.46, batch-reuse:1
@ 4683 train 4.2764 , allloss: 4.2767, dt: 1309.18ms, fracRes: 0.7087, norm(attn): 0.1758, norm(output): 0.9403, norm(x): 0.7706, norm(y): 1.0032, norm:0.6821, tok/sec: 100117.98, flops:105.09, batch-reuse:1
@ 4684 train 4.3063 , allloss: 4.3065, dt: 1303.30ms, fracRes: 0.7084, norm(attn): 0.1738, norm(output): 0.9406, norm(x): 0.7721, norm(y): 1.0033, norm:0.6401, tok/sec: 100569.00, flops:105.56, batch-reuse:1
@ 4685 train 4.2357 , allloss: 4.2358, dt: 1299.50ms, fracRes: 0.7081, norm(attn): 0.1738, norm(output): 0.9406, norm(x): 0.7729, norm(y): 1.0035, norm:0.7433, tok/sec: 100863.06, flops:105.87, batch-reuse:1
@ 4686 train 4.3340 , allloss: 4.3347, dt: 1305.82ms, fracRes: 0.7080, norm(attn): 0.1758, norm(output): 0.9406, norm(x): 0.7726, norm(y): 1.0032, norm:0.6933, tok/sec: 100375.13, flops:105.36, batch-reuse:1
@ 4687 train 4.2076 , allloss: 4.2077, dt: 1348.00ms, fracRes: 0.7082, norm(attn): 0.1787, norm(output): 0.9403, norm(x): 0.7726, norm(y): 1.0031, norm:0.7387, tok/sec: 97234.21, flops:102.06, batch-reuse:1
@ 4688 train 4.2260 , allloss: 4.2261, dt: 1305.55ms, fracRes: 0.7084, norm(attn): 0.1748, norm(output): 0.9405, norm(x): 0.7727, norm(y): 1.0029, norm:0.6485, tok/sec: 100396.03, flops:105.38, batch-reuse:1
@ 4689 train 4.2133 , allloss: 4.2134, dt: 1287.28ms, fracRes: 0.7085, norm(attn): 0.1758, norm(output): 0.9406, norm(x): 0.7729, norm(y): 1.0028, norm:0.6660, tok/sec: 101821.00, flops:106.87, batch-reuse:1
@ 4690 train 4.1838 , allloss: 4.1838, dt: 1322.94ms, fracRes: 0.7085, norm(attn): 0.1768, norm(output): 0.9403, norm(x): 0.7724, norm(y): 1.0030, norm:0.6166, tok/sec: 99076.63, flops:103.99, batch-reuse:1
@ 4691 train 4.2813 , allloss: 4.2814, dt: 1295.65ms, fracRes: 0.7086, norm(attn): 0.1768, norm(output): 0.9404, norm(x): 0.7720, norm(y): 1.0030, norm:0.6978, tok/sec: 101163.36, flops:106.18, batch-reuse:1
@ 4692 train 4.3112 , allloss: 4.3113, dt: 1294.64ms, fracRes: 0.7084, norm(attn): 0.1758, norm(output): 0.9410, norm(x): 0.7725, norm(y): 1.0031, norm:0.6615, tok/sec: 101242.15, flops:106.27, batch-reuse:1
@ 4693 train 4.2982 , allloss: 4.2983, dt: 1299.27ms, fracRes: 0.7083, norm(attn): 0.1738, norm(output): 0.9406, norm(x): 0.7719, norm(y): 1.0030, norm:0.6606, tok/sec: 100881.09, flops:105.89, batch-reuse:1
@ 4694 train 4.2938 , allloss: 4.2938, dt: 1319.16ms, fracRes: 0.7083, norm(attn): 0.1729, norm(output): 0.9405, norm(x): 0.7722, norm(y): 1.0030, norm:0.7448, tok/sec: 99360.36, flops:104.29, batch-reuse:1
@ 4695 train 4.3055 , allloss: 4.3056, dt: 1297.54ms, fracRes: 0.7082, norm(attn): 0.1748, norm(output): 0.9407, norm(x): 0.7727, norm(y): 1.0031, norm:0.6059, tok/sec: 101015.62, flops:106.03, batch-reuse:1
@ 4696 train 4.1981 , allloss: 4.1984, dt: 1331.11ms, fracRes: 0.7081, norm(attn): 0.1758, norm(output): 0.9407, norm(x): 0.7729, norm(y): 1.0033, norm:0.6751, tok/sec: 98468.16, flops:103.36, batch-reuse:1
@ 4697 train 4.2080 , allloss: 4.2082, dt: 1322.16ms, fracRes: 0.7083, norm(attn): 0.1748, norm(output): 0.9405, norm(x): 0.7723, norm(y): 1.0033, norm:0.6128, tok/sec: 99134.59, flops:104.05, batch-reuse:1
@ 4698 train 4.2564 , allloss: 4.2565, dt: 1320.95ms, fracRes: 0.7085, norm(attn): 0.1748, norm(output): 0.9403, norm(x): 0.7717, norm(y): 1.0032, norm:0.6132, tok/sec: 99225.52, flops:104.15, batch-reuse:1
@ 4699 train 4.1947 , allloss: 4.1951, dt: 1295.75ms, fracRes: 0.7084, norm(attn): 0.1758, norm(output): 0.9405, norm(x): 0.7719, norm(y): 1.0031, norm:0.5786, tok/sec: 101155.08, flops:106.18, batch-reuse:1
@ 4700 train 4.2402 , allloss: 4.2410, dt: 1317.65ms, fracRes: 0.7085, norm(attn): 0.1738, norm(output): 0.9408, norm(x): 0.7719, norm(y): 1.0031, norm:0.5491, tok/sec: 99474.33, flops:104.41, batch-reuse:1
@ 4701 train 4.2111 , allloss: 4.2112, dt: 1310.77ms, fracRes: 0.7086, norm(attn): 0.1758, norm(output): 0.9407, norm(x): 0.7715, norm(y): 1.0032, norm:0.5960, tok/sec: 99996.56, flops:104.96, batch-reuse:1
@ 4702 train 4.2786 , allloss: 4.2788, dt: 1309.89ms, fracRes: 0.7087, norm(attn): 0.1729, norm(output): 0.9408, norm(x): 0.7719, norm(y): 1.0033, norm:0.5922, tok/sec: 100063.25, flops:105.03, batch-reuse:1
@ 4703 train 4.3327 , allloss: 4.3384, dt: 1323.09ms, fracRes: 0.7086, norm(attn): 0.1748, norm(output): 0.9407, norm(x): 0.7718, norm(y): 1.0032, norm:0.6324, tok/sec: 99064.72, flops:103.98, batch-reuse:1
@ 4704 train 4.2000 , allloss: 4.2002, dt: 1308.80ms, fracRes: 0.7085, norm(attn): 0.1758, norm(output): 0.9406, norm(x): 0.7724, norm(y): 1.0031, norm:0.5922, tok/sec: 100146.72, flops:105.12, batch-reuse:1
@ 4705 train 4.2577 , allloss: 4.2580, dt: 1287.80ms, fracRes: 0.7084, norm(attn): 0.1738, norm(output): 0.9405, norm(x): 0.7724, norm(y): 1.0032, norm:0.5726, tok/sec: 101779.79, flops:106.83, batch-reuse:1
@ 4706 train 4.3445 , allloss: 4.3446, dt: 1275.24ms, fracRes: 0.7086, norm(attn): 0.1758, norm(output): 0.9406, norm(x): 0.7722, norm(y): 1.0034, norm:0.6793, tok/sec: 102782.36, flops:107.88, batch-reuse:1
@ 4707 train 4.2352 , allloss: 4.2353, dt: 1308.48ms, fracRes: 0.7087, norm(attn): 0.1748, norm(output): 0.9406, norm(x): 0.7720, norm(y): 1.0034, norm:0.6706, tok/sec: 100171.32, flops:105.14, batch-reuse:1
@ 4708 train 4.2542 , allloss: 4.2569, dt: 1312.78ms, fracRes: 0.7086, norm(attn): 0.1758, norm(output): 0.9403, norm(x): 0.7720, norm(y): 1.0031, norm:0.6663, tok/sec: 99843.45, flops:104.80, batch-reuse:1
@ 4709 train 4.2959 , allloss: 4.2962, dt: 1285.17ms, fracRes: 0.7085, norm(attn): 0.1729, norm(output): 0.9406, norm(x): 0.7718, norm(y): 1.0031, norm:0.5517, tok/sec: 101988.23, flops:107.05, batch-reuse:1
@ 4710 train 4.2424 , allloss: 4.2437, dt: 1297.37ms, fracRes: 0.7090, norm(attn): 0.1748, norm(output): 0.9403, norm(x): 0.7705, norm(y): 1.0032, norm:0.7859, tok/sec: 101029.34, flops:106.04, batch-reuse:1
@ 4711 train 4.2896 , allloss: 4.2897, dt: 1277.21ms, fracRes: 0.7089, norm(attn): 0.1758, norm(output): 0.9403, norm(x): 0.7705, norm(y): 1.0031, norm:0.8495, tok/sec: 102624.05, flops:107.72, batch-reuse:1
@ 4712 train 4.2899 , allloss: 4.2908, dt: 1281.00ms, fracRes: 0.7089, norm(attn): 0.1719, norm(output): 0.9408, norm(x): 0.7716, norm(y): 1.0030, norm:0.5786, tok/sec: 102319.69, flops:107.40, batch-reuse:1
@ 4713 train 4.2524 , allloss: 4.2524, dt: 1308.91ms, fracRes: 0.7089, norm(attn): 0.1729, norm(output): 0.9407, norm(x): 0.7723, norm(y): 1.0030, norm:0.7526, tok/sec: 100137.96, flops:105.11, batch-reuse:1
@ 4714 train 4.2446 , allloss: 4.2448, dt: 1316.17ms, fracRes: 0.7088, norm(attn): 0.1748, norm(output): 0.9405, norm(x): 0.7722, norm(y): 1.0028, norm:0.6451, tok/sec: 99586.14, flops:104.53, batch-reuse:1
@ 4715 train 4.1892 , allloss: 4.1892, dt: 1294.71ms, fracRes: 0.7089, norm(attn): 0.1758, norm(output): 0.9404, norm(x): 0.7716, norm(y): 1.0028, norm:0.6711, tok/sec: 101236.30, flops:106.26, batch-reuse:1
@ 4716 train 4.2876 , allloss: 4.2877, dt: 1302.91ms, fracRes: 0.7088, norm(attn): 0.1738, norm(output): 0.9406, norm(x): 0.7714, norm(y): 1.0030, norm:0.7628, tok/sec: 100599.16, flops:105.59, batch-reuse:1
@ 4717 train 4.2943 , allloss: 4.2943, dt: 1292.21ms, fracRes: 0.7088, norm(attn): 0.1729, norm(output): 0.9407, norm(x): 0.7716, norm(y): 1.0033, norm:0.7983, tok/sec: 101432.42, flops:106.47, batch-reuse:1
@ 4718 train 4.3091 , allloss: 4.3091, dt: 1291.31ms, fracRes: 0.7085, norm(attn): 0.1748, norm(output): 0.9405, norm(x): 0.7723, norm(y): 1.0032, norm:0.5787, tok/sec: 101503.18, flops:106.54, batch-reuse:1
@ 4719 train 4.1868 , allloss: 4.1869, dt: 1306.48ms, fracRes: 0.7084, norm(attn): 0.1758, norm(output): 0.9406, norm(x): 0.7723, norm(y): 1.0030, norm:0.6328, tok/sec: 100324.47, flops:105.30, batch-reuse:1
@ 4720 train 4.1784 , allloss: 4.1786, dt: 1302.05ms, fracRes: 0.7086, norm(attn): 0.1758, norm(output): 0.9403, norm(x): 0.7716, norm(y): 1.0030, norm:0.6017, tok/sec: 100666.10, flops:105.66, batch-reuse:1
@ 4721 train 4.2071 , allloss: 4.2075, dt: 1314.70ms, fracRes: 0.7085, norm(attn): 0.1748, norm(output): 0.9408, norm(x): 0.7720, norm(y): 1.0030, norm:0.6182, tok/sec: 99697.62, flops:104.65, batch-reuse:1
@ 4722 train 4.1994 , allloss: 4.1997, dt: 1308.21ms, fracRes: 0.7086, norm(attn): 0.1768, norm(output): 0.9407, norm(x): 0.7717, norm(y): 1.0029, norm:0.6582, tok/sec: 100191.78, flops:105.16, batch-reuse:1
@ 4723 train 4.2942 , allloss: 4.2952, dt: 1281.41ms, fracRes: 0.7087, norm(attn): 0.1758, norm(output): 0.9405, norm(x): 0.7715, norm(y): 1.0031, norm:0.6238, tok/sec: 102287.29, flops:107.36, batch-reuse:1
@ 4724 train 4.1675 , allloss: 4.1676, dt: 1296.51ms, fracRes: 0.7086, norm(attn): 0.1787, norm(output): 0.9405, norm(x): 0.7722, norm(y): 1.0031, norm:0.5698, tok/sec: 101096.00, flops:106.11, batch-reuse:1
@ 4725 train 4.2390 , allloss: 4.2391, dt: 1301.34ms, fracRes: 0.7084, norm(attn): 0.1787, norm(output): 0.9406, norm(x): 0.7727, norm(y): 1.0030, norm:0.5944, tok/sec: 100720.86, flops:105.72, batch-reuse:1
@ 4726 train 4.3055 , allloss: 4.3056, dt: 1311.11ms, fracRes: 0.7086, norm(attn): 0.1758, norm(output): 0.9406, norm(x): 0.7724, norm(y): 1.0030, norm:0.6078, tok/sec: 99970.29, flops:104.93, batch-reuse:1
@ 4727 train 4.1618 , allloss: 4.1618, dt: 1314.23ms, fracRes: 0.7085, norm(attn): 0.1748, norm(output): 0.9406, norm(x): 0.7723, norm(y): 1.0028, norm:0.6685, tok/sec: 99732.98, flops:104.68, batch-reuse:1
@ 4728 train 4.2862 , allloss: 4.2863, dt: 1336.05ms, fracRes: 0.7087, norm(attn): 0.1738, norm(output): 0.9405, norm(x): 0.7722, norm(y): 1.0030, norm:0.5925, tok/sec: 98104.27, flops:102.97, batch-reuse:1
@ 4729 train 4.2129 , allloss: 4.2130, dt: 1337.29ms, fracRes: 0.7087, norm(attn): 0.1729, norm(output): 0.9409, norm(x): 0.7732, norm(y): 1.0032, norm:0.6245, tok/sec: 98012.81, flops:102.88, batch-reuse:1
@ 4730 train 4.2595 , allloss: 4.2595, dt: 1292.92ms, fracRes: 0.7086, norm(attn): 0.1729, norm(output): 0.9409, norm(x): 0.7730, norm(y): 1.0031, norm:0.7508, tok/sec: 101376.65, flops:106.41, batch-reuse:1
@ 4731 train 4.2739 , allloss: 4.2748, dt: 1265.27ms, fracRes: 0.7085, norm(attn): 0.1729, norm(output): 0.9406, norm(x): 0.7722, norm(y): 1.0030, norm:0.6503, tok/sec: 103592.20, flops:108.73, batch-reuse:1
@ 4732 train 4.2531 , allloss: 4.2534, dt: 1284.82ms, fracRes: 0.7086, norm(attn): 0.1738, norm(output): 0.9404, norm(x): 0.7721, norm(y): 1.0029, norm:0.6856, tok/sec: 102015.78, flops:107.08, batch-reuse:1
@ 4733 train 4.1460 , allloss: 4.1463, dt: 1315.26ms, fracRes: 0.7086, norm(attn): 0.1738, norm(output): 0.9403, norm(x): 0.7726, norm(y): 1.0031, norm:0.5555, tok/sec: 99654.86, flops:104.60, batch-reuse:1
@ 4734 train 4.1418 , allloss: 4.1420, dt: 1321.99ms, fracRes: 0.7083, norm(attn): 0.1758, norm(output): 0.9408, norm(x): 0.7741, norm(y): 1.0030, norm:0.7172, tok/sec: 99147.44, flops:104.07, batch-reuse:1
@ 4735 train 4.2141 , allloss: 4.2142, dt: 1331.04ms, fracRes: 0.7085, norm(attn): 0.1738, norm(output): 0.9408, norm(x): 0.7744, norm(y): 1.0029, norm:0.6025, tok/sec: 98473.31, flops:103.36, batch-reuse:1
@ 4736 train 4.1409 , allloss: 4.1413, dt: 1337.49ms, fracRes: 0.7086, norm(attn): 0.1748, norm(output): 0.9405, norm(x): 0.7740, norm(y): 1.0027, norm:0.5782, tok/sec: 97998.38, flops:102.86, batch-reuse:1
@ 4737 train 4.1835 , allloss: 4.1835, dt: 1331.67ms, fracRes: 0.7086, norm(attn): 0.1738, norm(output): 0.9407, norm(x): 0.7736, norm(y): 1.0029, norm:0.5595, tok/sec: 98426.70, flops:103.31, batch-reuse:1
@ 4738 train 4.2850 , allloss: 4.2851, dt: 1317.75ms, fracRes: 0.7088, norm(attn): 0.1729, norm(output): 0.9406, norm(x): 0.7731, norm(y): 1.0032, norm:0.5248, tok/sec: 99466.23, flops:104.40, batch-reuse:1
@ 4739 train 4.1295 , allloss: 4.1297, dt: 1310.31ms, fracRes: 0.7085, norm(attn): 0.1738, norm(output): 0.9408, norm(x): 0.7738, norm(y): 1.0032, norm:0.5925, tok/sec: 100031.12, flops:105.00, batch-reuse:1
@ 4740 train 4.2534 , allloss: 4.2535, dt: 1290.98ms, fracRes: 0.7083, norm(attn): 0.1729, norm(output): 0.9408, norm(x): 0.7741, norm(y): 1.0031, norm:0.6460, tok/sec: 101529.03, flops:106.57, batch-reuse:1
@ 4741 train 4.2791 , allloss: 4.2791, dt: 1312.00ms, fracRes: 0.7084, norm(attn): 0.1729, norm(output): 0.9407, norm(x): 0.7740, norm(y): 1.0030, norm:0.5300, tok/sec: 99902.15, flops:104.86, batch-reuse:1
@ 4742 train 4.1702 , allloss: 4.1708, dt: 1337.16ms, fracRes: 0.7084, norm(attn): 0.1729, norm(output): 0.9406, norm(x): 0.7734, norm(y): 1.0028, norm:0.5788, tok/sec: 98022.84, flops:102.89, batch-reuse:1
@ 4743 train 4.3543 , allloss: 4.3544, dt: 1326.16ms, fracRes: 0.7087, norm(attn): 0.1719, norm(output): 0.9411, norm(x): 0.7734, norm(y): 1.0031, norm:0.7473, tok/sec: 98836.02, flops:103.74, batch-reuse:1
@ 4744 train 4.2607 , allloss: 4.2607, dt: 1304.84ms, fracRes: 0.7089, norm(attn): 0.1738, norm(output): 0.9402, norm(x): 0.7725, norm(y): 1.0034, norm:0.9594, tok/sec: 100450.51, flops:105.44, batch-reuse:1
@ 4745 train 4.2514 , allloss: 4.2529, dt: 1289.06ms, fracRes: 0.7085, norm(attn): 0.1748, norm(output): 0.9406, norm(x): 0.7730, norm(y): 1.0031, norm:0.9263, tok/sec: 101680.17, flops:106.73, batch-reuse:1
@ 4746 train 4.3037 , allloss: 4.3038, dt: 1307.07ms, fracRes: 0.7085, norm(attn): 0.1748, norm(output): 0.9412, norm(x): 0.7741, norm(y): 1.0028, norm:1.2386, tok/sec: 100279.27, flops:105.26, batch-reuse:1
@ 4747 train 4.2422 , allloss: 4.2423, dt: 1336.26ms, fracRes: 0.7087, norm(attn): 0.1758, norm(output): 0.9412, norm(x): 0.7740, norm(y): 1.0029, norm:0.7768, tok/sec: 98088.53, flops:102.96, batch-reuse:1
@ 4748 train 4.2268 , allloss: 4.2270, dt: 1307.36ms, fracRes: 0.7087, norm(attn): 0.1738, norm(output): 0.9406, norm(x): 0.7736, norm(y): 1.0029, norm:1.1435, tok/sec: 100257.21, flops:105.23, batch-reuse:1
@ 4749 train 4.2029 , allloss: 4.2029, dt: 1303.53ms, fracRes: 0.7087, norm(attn): 0.1768, norm(output): 0.9406, norm(x): 0.7731, norm(y): 1.0029, norm:0.8118, tok/sec: 100551.51, flops:105.54, batch-reuse:1
@ 4750 train 4.2969 , allloss: 4.2970, dt: 1279.25ms, fracRes: 0.7086, norm(attn): 0.1738, norm(output): 0.9408, norm(x): 0.7738, norm(y): 1.0029, norm:0.8688, tok/sec: 102459.83, flops:107.55, batch-reuse:1
@ 4751 train 4.1191 , allloss: 4.1192, dt: 1289.26ms, fracRes: 0.7087, norm(attn): 0.1738, norm(output): 0.9408, norm(x): 0.7733, norm(y): 1.0029, norm:0.7836, tok/sec: 101664.90, flops:106.71, batch-reuse:1
@ 4752 train 4.2017 , allloss: 4.2017, dt: 1289.85ms, fracRes: 0.7087, norm(attn): 0.1738, norm(output): 0.9407, norm(x): 0.7726, norm(y): 1.0029, norm:0.7353, tok/sec: 101617.68, flops:106.66, batch-reuse:1
@ 4753 train 4.1135 , allloss: 4.1136, dt: 1278.08ms, fracRes: 0.7087, norm(attn): 0.1758, norm(output): 0.9408, norm(x): 0.7731, norm(y): 1.0029, norm:0.7031, tok/sec: 102553.51, flops:107.64, batch-reuse:1
@ 4754 train 4.2505 , allloss: 4.2506, dt: 1304.85ms, fracRes: 0.7086, norm(attn): 0.1738, norm(output): 0.9408, norm(x): 0.7736, norm(y): 1.0028, norm:0.6561, tok/sec: 100449.71, flops:105.44, batch-reuse:1
@ 4755 train 4.1671 , allloss: 4.1673, dt: 1313.18ms, fracRes: 0.7087, norm(attn): 0.1738, norm(output): 0.9405, norm(x): 0.7729, norm(y): 1.0030, norm:0.6860, tok/sec: 99812.56, flops:104.77, batch-reuse:1
@ 4756 train 4.1645 , allloss: 4.1658, dt: 1302.40ms, fracRes: 0.7088, norm(attn): 0.1738, norm(output): 0.9408, norm(x): 0.7730, norm(y): 1.0029, norm:0.6231, tok/sec: 100638.96, flops:105.63, batch-reuse:1
@ 4757 train 4.0852 , allloss: 4.0853, dt: 1302.48ms, fracRes: 0.7087, norm(attn): 0.1748, norm(output): 0.9407, norm(x): 0.7735, norm(y): 1.0029, norm:0.6603, tok/sec: 100632.64, flops:105.63, batch-reuse:1
@ 4758 train 4.2872 , allloss: 4.2873, dt: 1305.22ms, fracRes: 0.7088, norm(attn): 0.1738, norm(output): 0.9411, norm(x): 0.7739, norm(y): 1.0027, norm:0.5874, tok/sec: 100421.39, flops:105.41, batch-reuse:1
@ 4759 train 4.1223 , allloss: 4.1224, dt: 1294.01ms, fracRes: 0.7087, norm(attn): 0.1748, norm(output): 0.9409, norm(x): 0.7739, norm(y): 1.0029, norm:0.6348, tok/sec: 101291.27, flops:106.32, batch-reuse:1
@ 4760 train 4.1496 , allloss: 4.1497, dt: 1299.19ms, fracRes: 0.7087, norm(attn): 0.1777, norm(output): 0.9407, norm(x): 0.7732, norm(y): 1.0030, norm:0.5399, tok/sec: 100887.79, flops:105.90, batch-reuse:1
@ 4761 train 4.2773 , allloss: 4.2782, dt: 1290.61ms, fracRes: 0.7086, norm(attn): 0.1768, norm(output): 0.9409, norm(x): 0.7734, norm(y): 1.0030, norm:0.6293, tok/sec: 101558.55, flops:106.60, batch-reuse:1
@ 4762 train 4.2219 , allloss: 4.2220, dt: 1309.89ms, fracRes: 0.7086, norm(attn): 0.1768, norm(output): 0.9407, norm(x): 0.7733, norm(y): 1.0031, norm:0.5524, tok/sec: 100063.42, flops:105.03, batch-reuse:1
@ 4763 train 4.2152 , allloss: 4.2154, dt: 1317.52ms, fracRes: 0.7086, norm(attn): 0.1758, norm(output): 0.9406, norm(x): 0.7734, norm(y): 1.0030, norm:0.6014, tok/sec: 99483.58, flops:104.42, batch-reuse:1
@ 4764 train 4.2457 , allloss: 4.2460, dt: 1307.23ms, fracRes: 0.7086, norm(attn): 0.1738, norm(output): 0.9409, norm(x): 0.7737, norm(y): 1.0029, norm:0.5836, tok/sec: 100267.00, flops:105.24, batch-reuse:1
@ 4765 train 4.1912 , allloss: 4.1913, dt: 1336.20ms, fracRes: 0.7086, norm(attn): 0.1729, norm(output): 0.9411, norm(x): 0.7742, norm(y): 1.0028, norm:0.5878, tok/sec: 98093.01, flops:102.96, batch-reuse:1
@ 4766 train 4.2294 , allloss: 4.2295, dt: 1323.09ms, fracRes: 0.7088, norm(attn): 0.1729, norm(output): 0.9408, norm(x): 0.7739, norm(y): 1.0030, norm:0.5746, tok/sec: 99065.13, flops:103.98, batch-reuse:1
@ 4767 train 4.2085 , allloss: 4.2086, dt: 1333.64ms, fracRes: 0.7088, norm(attn): 0.1738, norm(output): 0.9408, norm(x): 0.7739, norm(y): 1.0030, norm:0.5630, tok/sec: 98281.62, flops:103.16, batch-reuse:1
@ 4768 train 4.0221 , allloss: 4.0222, dt: 1309.63ms, fracRes: 0.7089, norm(attn): 0.1768, norm(output): 0.9405, norm(x): 0.7732, norm(y): 1.0031, norm:0.6951, tok/sec: 100083.13, flops:105.05, batch-reuse:1
@ 4769 train 4.1787 , allloss: 4.1788, dt: 1279.59ms, fracRes: 0.7086, norm(attn): 0.1738, norm(output): 0.9408, norm(x): 0.7736, norm(y): 1.0030, norm:0.7274, tok/sec: 102432.70, flops:107.52, batch-reuse:1
@ 4770 train 4.1306 , allloss: 4.1306, dt: 1288.22ms, fracRes: 0.7089, norm(attn): 0.1758, norm(output): 0.9408, norm(x): 0.7734, norm(y): 1.0031, norm:0.6687, tok/sec: 101746.38, flops:106.80, batch-reuse:1
@ 4771 train 4.2207 , allloss: 4.2209, dt: 1309.48ms, fracRes: 0.7089, norm(attn): 0.1768, norm(output): 0.9407, norm(x): 0.7731, norm(y): 1.0030, norm:0.6082, tok/sec: 100094.86, flops:105.06, batch-reuse:1
@ 4772 train 4.1279 , allloss: 4.1283, dt: 1287.98ms, fracRes: 0.7088, norm(attn): 0.1758, norm(output): 0.9409, norm(x): 0.7736, norm(y): 1.0029, norm:0.6512, tok/sec: 101765.81, flops:106.82, batch-reuse:1
@ 4773 train 4.0664 , allloss: 4.0675, dt: 1314.06ms, fracRes: 0.7089, norm(attn): 0.1758, norm(output): 0.9406, norm(x): 0.7735, norm(y): 1.0029, norm:0.5891, tok/sec: 99745.74, flops:104.70, batch-reuse:1
@ 4774 train 4.1484 , allloss: 4.1484, dt: 1298.29ms, fracRes: 0.7089, norm(attn): 0.1758, norm(output): 0.9406, norm(x): 0.7734, norm(y): 1.0029, norm:0.6735, tok/sec: 100957.43, flops:105.97, batch-reuse:1
@ 4775 train 4.0493 , allloss: 4.0494, dt: 1310.11ms, fracRes: 0.7088, norm(attn): 0.1738, norm(output): 0.9408, norm(x): 0.7739, norm(y): 1.0028, norm:0.6490, tok/sec: 100046.85, flops:105.01, batch-reuse:1
@ 4776 train 4.0443 , allloss: 4.0446, dt: 1315.65ms, fracRes: 0.7089, norm(attn): 0.1768, norm(output): 0.9407, norm(x): 0.7736, norm(y): 1.0030, norm:0.6483, tok/sec: 99625.32, flops:104.57, batch-reuse:1
@ 4777 train 3.9986 , allloss: 3.9988, dt: 1315.01ms, fracRes: 0.7087, norm(attn): 0.1758, norm(output): 0.9407, norm(x): 0.7740, norm(y): 1.0031, norm:0.6645, tok/sec: 99673.65, flops:104.62, batch-reuse:1
@ 4778 train 4.0767 , allloss: 4.0774, dt: 1324.16ms, fracRes: 0.7087, norm(attn): 0.1738, norm(output): 0.9411, norm(x): 0.7743, norm(y): 1.0030, norm:0.6983, tok/sec: 98985.03, flops:103.90, batch-reuse:1
@ 4779 train 4.1035 , allloss: 4.1041, dt: 1349.54ms, fracRes: 0.7088, norm(attn): 0.1738, norm(output): 0.9407, norm(x): 0.7733, norm(y): 1.0032, norm:0.6003, tok/sec: 97123.70, flops:101.94, batch-reuse:1
@ 4780 train 4.1669 , allloss: 4.1670, dt: 1340.66ms, fracRes: 0.7091, norm(attn): 0.1738, norm(output): 0.9405, norm(x): 0.7722, norm(y): 1.0030, norm:0.7316, tok/sec: 97766.43, flops:102.62, batch-reuse:1
@ 4781 train 4.0163 , allloss: 4.0164, dt: 1342.68ms, fracRes: 0.7090, norm(attn): 0.1738, norm(output): 0.9404, norm(x): 0.7724, norm(y): 1.0029, norm:0.7184, tok/sec: 97619.65, flops:102.46, batch-reuse:1
@ 4782 train 4.1121 , allloss: 4.1122, dt: 1339.52ms, fracRes: 0.7089, norm(attn): 0.1748, norm(output): 0.9405, norm(x): 0.7723, norm(y): 1.0030, norm:0.6184, tok/sec: 97850.06, flops:102.71, batch-reuse:1
@ 4783 train 4.0659 , allloss: 4.0659, dt: 1335.22ms, fracRes: 0.7088, norm(attn): 0.1758, norm(output): 0.9406, norm(x): 0.7727, norm(y): 1.0030, norm:0.6548, tok/sec: 98165.35, flops:103.04, batch-reuse:1
@ 4784 train 4.1543 , allloss: 4.1549, dt: 1276.74ms, fracRes: 0.7089, norm(attn): 0.1729, norm(output): 0.9407, norm(x): 0.7732, norm(y): 1.0030, norm:0.7830, tok/sec: 102661.48, flops:107.76, batch-reuse:1
@ 4785 train 4.1264 , allloss: 4.1264, dt: 1288.36ms, fracRes: 0.7092, norm(attn): 0.1758, norm(output): 0.9406, norm(x): 0.7726, norm(y): 1.0028, norm:0.6248, tok/sec: 101735.27, flops:106.78, batch-reuse:1
@ 4786 train 4.1750 , allloss: 4.1754, dt: 1299.66ms, fracRes: 0.7091, norm(attn): 0.1729, norm(output): 0.9407, norm(x): 0.7725, norm(y): 1.0026, norm:0.5970, tok/sec: 100851.01, flops:105.86, batch-reuse:1
@ 4787 train 4.1210 , allloss: 4.1212, dt: 1325.89ms, fracRes: 0.7091, norm(attn): 0.1729, norm(output): 0.9411, norm(x): 0.7731, norm(y): 1.0027, norm:0.7724, tok/sec: 98855.84, flops:103.76, batch-reuse:1
@ 4788 train 4.0659 , allloss: 4.0660, dt: 1314.60ms, fracRes: 0.7090, norm(attn): 0.1729, norm(output): 0.9411, norm(x): 0.7733, norm(y): 1.0030, norm:1.0760, tok/sec: 99704.75, flops:104.65, batch-reuse:1
@ 4789 train 4.2243 , allloss: 4.2248, dt: 1317.14ms, fracRes: 0.7090, norm(attn): 0.1729, norm(output): 0.9407, norm(x): 0.7732, norm(y): 1.0031, norm:0.7673, tok/sec: 99512.64, flops:104.45, batch-reuse:1
@ 4790 train 4.1098 , allloss: 4.1104, dt: 1316.82ms, fracRes: 0.7088, norm(attn): 0.1748, norm(output): 0.9406, norm(x): 0.7735, norm(y): 1.0027, norm:0.7049, tok/sec: 99536.81, flops:104.48, batch-reuse:1
@ 4791 train 4.0852 , allloss: 4.0854, dt: 1306.56ms, fracRes: 0.7088, norm(attn): 0.1729, norm(output): 0.9410, norm(x): 0.7739, norm(y): 1.0026, norm:0.7510, tok/sec: 100318.48, flops:105.30, batch-reuse:1
@ 4792 train 4.0917 , allloss: 4.0919, dt: 1324.72ms, fracRes: 0.7089, norm(attn): 0.1738, norm(output): 0.9408, norm(x): 0.7736, norm(y): 1.0027, norm:0.6032, tok/sec: 98942.81, flops:103.85, batch-reuse:1
@ 4793 train 4.1183 , allloss: 4.1187, dt: 1338.55ms, fracRes: 0.7090, norm(attn): 0.1729, norm(output): 0.9407, norm(x): 0.7735, norm(y): 1.0029, norm:0.7418, tok/sec: 97921.09, flops:102.78, batch-reuse:1
@ 4794 train 4.0518 , allloss: 4.0519, dt: 1321.82ms, fracRes: 0.7092, norm(attn): 0.1738, norm(output): 0.9408, norm(x): 0.7731, norm(y): 1.0030, norm:0.6350, tok/sec: 99160.03, flops:104.08, batch-reuse:1
@ 4795 train 4.1047 , allloss: 4.1047, dt: 1297.70ms, fracRes: 0.7093, norm(attn): 0.1748, norm(output): 0.9409, norm(x): 0.7727, norm(y): 1.0030, norm:0.6199, tok/sec: 101003.45, flops:106.02, batch-reuse:1
@ 4796 train 4.0792 , allloss: 4.0802, dt: 1312.08ms, fracRes: 0.7092, norm(attn): 0.1729, norm(output): 0.9407, norm(x): 0.7727, norm(y): 1.0030, norm:0.5642, tok/sec: 99896.41, flops:104.85, batch-reuse:1
@ 4797 train 4.1333 , allloss: 4.1334, dt: 1299.56ms, fracRes: 0.7089, norm(attn): 0.1738, norm(output): 0.9407, norm(x): 0.7735, norm(y): 1.0032, norm:0.6721, tok/sec: 100858.89, flops:105.86, batch-reuse:1
@ 4798 train 4.1268 , allloss: 4.1269, dt: 1313.67ms, fracRes: 0.7086, norm(attn): 0.1729, norm(output): 0.9411, norm(x): 0.7755, norm(y): 1.0030, norm:0.6719, tok/sec: 99775.39, flops:104.73, batch-reuse:1
@ 4799 train 4.0254 , allloss: 4.0256, dt: 1338.46ms, fracRes: 0.7086, norm(attn): 0.1738, norm(output): 0.9410, norm(x): 0.7750, norm(y): 1.0027, norm:0.6056, tok/sec: 97927.16, flops:102.79, batch-reuse:1
@ 4800 train 4.1182 , allloss: 4.1182, dt: 1331.07ms, fracRes: 0.7087, norm(attn): 0.1738, norm(output): 0.9408, norm(x): 0.7742, norm(y): 1.0026, norm:0.6382, tok/sec: 98471.04, flops:103.36, batch-reuse:1
@ 4801 train 4.1398 , allloss: 4.1412, dt: 1310.73ms, fracRes: 0.7091, norm(attn): 0.1748, norm(output): 0.9407, norm(x): 0.7739, norm(y): 1.0029, norm:0.6384, tok/sec: 99999.24, flops:104.96, batch-reuse:1
@ 4802 train 3.9765 , allloss: 3.9765, dt: 1284.03ms, fracRes: 0.7090, norm(attn): 0.1748, norm(output): 0.9405, norm(x): 0.7745, norm(y): 1.0031, norm:0.6587, tok/sec: 102078.56, flops:107.14, batch-reuse:1
@ 4803 train 4.0339 , allloss: 4.0340, dt: 1321.94ms, fracRes: 0.7091, norm(attn): 0.1758, norm(output): 0.9406, norm(x): 0.7746, norm(y): 1.0031, norm:0.6802, tok/sec: 99151.39, flops:104.07, batch-reuse:1
@ 4804 train 4.1324 , allloss: 4.1325, dt: 1310.39ms, fracRes: 0.7086, norm(attn): 0.1748, norm(output): 0.9408, norm(x): 0.7749, norm(y): 1.0026, norm:0.6229, tok/sec: 100025.26, flops:104.99, batch-reuse:1
@ 4805 train 4.1940 , allloss: 4.1960, dt: 1338.41ms, fracRes: 0.7085, norm(attn): 0.1729, norm(output): 0.9409, norm(x): 0.7747, norm(y): 1.0027, norm:0.6104, tok/sec: 97931.47, flops:102.79, batch-reuse:1
@ 4806 train 4.1158 , allloss: 4.1160, dt: 1328.15ms, fracRes: 0.7088, norm(attn): 0.1748, norm(output): 0.9409, norm(x): 0.7743, norm(y): 1.0030, norm:0.6436, tok/sec: 98687.89, flops:103.59, batch-reuse:1
@ 4807 train 4.0792 , allloss: 4.0794, dt: 1323.31ms, fracRes: 0.7086, norm(attn): 0.1729, norm(output): 0.9406, norm(x): 0.7747, norm(y): 1.0031, norm:0.5821, tok/sec: 99048.62, flops:103.96, batch-reuse:1
@ 4808 train 4.2181 , allloss: 4.2181, dt: 1324.33ms, fracRes: 0.7088, norm(attn): 0.1738, norm(output): 0.9408, norm(x): 0.7745, norm(y): 1.0032, norm:0.6834, tok/sec: 98972.00, flops:103.88, batch-reuse:1
@ 4809 train 4.0537 , allloss: 4.0548, dt: 1333.69ms, fracRes: 0.7088, norm(attn): 0.1748, norm(output): 0.9405, norm(x): 0.7742, norm(y): 1.0030, norm:0.6349, tok/sec: 98277.66, flops:103.16, batch-reuse:1
@ 4810 train 4.1911 , allloss: 4.1938, dt: 1312.58ms, fracRes: 0.7088, norm(attn): 0.1729, norm(output): 0.9409, norm(x): 0.7743, norm(y): 1.0027, norm:0.6251, tok/sec: 99858.39, flops:104.81, batch-reuse:1
@ 4811 train 4.1386 , allloss: 4.1387, dt: 1314.65ms, fracRes: 0.7087, norm(attn): 0.1738, norm(output): 0.9412, norm(x): 0.7745, norm(y): 1.0027, norm:0.6482, tok/sec: 99700.84, flops:104.65, batch-reuse:1
@ 4812 train 4.1538 , allloss: 4.1538, dt: 1298.57ms, fracRes: 0.7090, norm(attn): 0.1748, norm(output): 0.9409, norm(x): 0.7738, norm(y): 1.0028, norm:0.7384, tok/sec: 100935.87, flops:105.95, batch-reuse:1
@ 4813 train 4.0336 , allloss: 4.0337, dt: 1303.20ms, fracRes: 0.7086, norm(attn): 0.1738, norm(output): 0.9406, norm(x): 0.7742, norm(y): 1.0027, norm:0.6534, tok/sec: 100576.80, flops:105.57, batch-reuse:1
@ 4814 train 4.1125 , allloss: 4.1126, dt: 1314.41ms, fracRes: 0.7087, norm(attn): 0.1748, norm(output): 0.9405, norm(x): 0.7743, norm(y): 1.0028, norm:0.6637, tok/sec: 99719.18, flops:104.67, batch-reuse:1
@ 4815 train 4.0994 , allloss: 4.0996, dt: 1320.07ms, fracRes: 0.7086, norm(attn): 0.1729, norm(output): 0.9409, norm(x): 0.7754, norm(y): 1.0029, norm:0.6392, tok/sec: 99291.47, flops:104.22, batch-reuse:1
@ 4816 train 4.0883 , allloss: 4.0893, dt: 1318.99ms, fracRes: 0.7086, norm(attn): 0.1729, norm(output): 0.9407, norm(x): 0.7755, norm(y): 1.0028, norm:0.6144, tok/sec: 99372.70, flops:104.30, batch-reuse:1
@ 4817 train 4.1284 , allloss: 4.1295, dt: 1319.08ms, fracRes: 0.7087, norm(attn): 0.1738, norm(output): 0.9408, norm(x): 0.7751, norm(y): 1.0026, norm:0.6730, tok/sec: 99366.23, flops:104.30, batch-reuse:1
@ 4818 train 4.0440 , allloss: 4.0441, dt: 1329.84ms, fracRes: 0.7088, norm(attn): 0.1748, norm(output): 0.9406, norm(x): 0.7751, norm(y): 1.0026, norm:0.7092, tok/sec: 98561.88, flops:103.45, batch-reuse:1
@ 4819 train 4.0864 , allloss: 4.0877, dt: 1284.75ms, fracRes: 0.7088, norm(attn): 0.1719, norm(output): 0.9404, norm(x): 0.7748, norm(y): 1.0026, norm:0.6173, tok/sec: 102021.78, flops:107.09, batch-reuse:1
@ 4820 train 4.0908 , allloss: 4.0908, dt: 1292.84ms, fracRes: 0.7088, norm(attn): 0.1729, norm(output): 0.9404, norm(x): 0.7740, norm(y): 1.0028, norm:0.6469, tok/sec: 101382.83, flops:106.41, batch-reuse:1
@ 4821 train 4.2865 , allloss: 4.2865, dt: 1279.83ms, fracRes: 0.7090, norm(attn): 0.1738, norm(output): 0.9408, norm(x): 0.7745, norm(y): 1.0027, norm:0.6550, tok/sec: 102413.41, flops:107.50, batch-reuse:1
@ 4822 train 4.1498 , allloss: 4.1501, dt: 1283.95ms, fracRes: 0.7088, norm(attn): 0.1748, norm(output): 0.9406, norm(x): 0.7753, norm(y): 1.0028, norm:0.6955, tok/sec: 102084.74, flops:107.15, batch-reuse:1
@ 4823 train 4.2220 , allloss: 4.2221, dt: 1281.82ms, fracRes: 0.7090, norm(attn): 0.1729, norm(output): 0.9407, norm(x): 0.7751, norm(y): 1.0026, norm:0.5495, tok/sec: 102254.62, flops:107.33, batch-reuse:1
@ 4824 train 4.2479 , allloss: 4.2480, dt: 1294.11ms, fracRes: 0.7091, norm(attn): 0.1729, norm(output): 0.9406, norm(x): 0.7746, norm(y): 1.0024, norm:0.6524, tok/sec: 101283.56, flops:106.31, batch-reuse:1
@ 4825 train 4.3180 , allloss: 4.3181, dt: 1312.74ms, fracRes: 0.7091, norm(attn): 0.1729, norm(output): 0.9408, norm(x): 0.7745, norm(y): 1.0024, norm:0.6378, tok/sec: 99846.39, flops:104.80, batch-reuse:1
@ 4826 train 4.2307 , allloss: 4.2308, dt: 1324.50ms, fracRes: 0.7090, norm(attn): 0.1738, norm(output): 0.9406, norm(x): 0.7745, norm(y): 1.0026, norm:0.6002, tok/sec: 98959.28, flops:103.87, batch-reuse:1
@ 4827 train 4.2375 , allloss: 4.2375, dt: 1294.18ms, fracRes: 0.7089, norm(attn): 0.1738, norm(output): 0.9405, norm(x): 0.7750, norm(y): 1.0029, norm:0.6664, tok/sec: 101278.20, flops:106.30, batch-reuse:1
@ 4828 train 4.2241 , allloss: 4.2242, dt: 1323.61ms, fracRes: 0.7090, norm(attn): 0.1738, norm(output): 0.9405, norm(x): 0.7748, norm(y): 1.0032, norm:0.5791, tok/sec: 99026.07, flops:103.94, batch-reuse:1
@ 4829 train 4.4135 , allloss: 4.4136, dt: 1309.44ms, fracRes: 0.7092, norm(attn): 0.1729, norm(output): 0.9406, norm(x): 0.7743, norm(y): 1.0031, norm:0.7224, tok/sec: 100097.38, flops:105.07, batch-reuse:1
@ 4830 train 4.2815 , allloss: 4.2815, dt: 1326.35ms, fracRes: 0.7091, norm(attn): 0.1738, norm(output): 0.9407, norm(x): 0.7743, norm(y): 1.0030, norm:0.6671, tok/sec: 98821.49, flops:103.73, batch-reuse:1
@ 4831 train 4.1768 , allloss: 4.1768, dt: 1314.68ms, fracRes: 0.7090, norm(attn): 0.1748, norm(output): 0.9402, norm(x): 0.7742, norm(y): 1.0029, norm:0.7231, tok/sec: 99698.47, flops:104.65, batch-reuse:1
@ 4832 train 4.3127 , allloss: 4.3128, dt: 1304.42ms, fracRes: 0.7090, norm(attn): 0.1748, norm(output): 0.9405, norm(x): 0.7744, norm(y): 1.0027, norm:0.6450, tok/sec: 100482.72, flops:105.47, batch-reuse:1
@ 4833 train 4.2368 , allloss: 4.2368, dt: 1330.30ms, fracRes: 0.7091, norm(attn): 0.1748, norm(output): 0.9405, norm(x): 0.7743, norm(y): 1.0028, norm:0.8325, tok/sec: 98528.07, flops:103.42, batch-reuse:1
@ 4834 train 4.3404 , allloss: 4.3405, dt: 1321.51ms, fracRes: 0.7093, norm(attn): 0.1738, norm(output): 0.9402, norm(x): 0.7734, norm(y): 1.0030, norm:0.6926, tok/sec: 99183.41, flops:104.11, batch-reuse:1
@ 4835 train 4.2360 , allloss: 4.2361, dt: 1333.65ms, fracRes: 0.7092, norm(attn): 0.1729, norm(output): 0.9406, norm(x): 0.7737, norm(y): 1.0029, norm:0.6281, tok/sec: 98280.97, flops:103.16, batch-reuse:1
@ 4836 train 4.2052 , allloss: 4.2054, dt: 1332.55ms, fracRes: 0.7092, norm(attn): 0.1729, norm(output): 0.9406, norm(x): 0.7740, norm(y): 1.0029, norm:0.7002, tok/sec: 98362.10, flops:103.24, batch-reuse:1
@ 4837 train 4.2636 , allloss: 4.2637, dt: 1324.23ms, fracRes: 0.7091, norm(attn): 0.1729, norm(output): 0.9406, norm(x): 0.7745, norm(y): 1.0029, norm:0.5611, tok/sec: 98979.86, flops:103.89, batch-reuse:1
@ 4838 train 4.2762 , allloss: 4.2768, dt: 1297.24ms, fracRes: 0.7092, norm(attn): 0.1729, norm(output): 0.9402, norm(x): 0.7739, norm(y): 1.0029, norm:0.8536, tok/sec: 101039.22, flops:106.05, batch-reuse:1
@ 4839 train 4.2213 , allloss: 4.2214, dt: 1296.21ms, fracRes: 0.7091, norm(attn): 0.1738, norm(output): 0.9405, norm(x): 0.7740, norm(y): 1.0027, norm:0.5850, tok/sec: 101119.17, flops:106.14, batch-reuse:1
@ 4840 train 4.3078 , allloss: 4.3078, dt: 1306.38ms, fracRes: 0.7093, norm(attn): 0.1729, norm(output): 0.9402, norm(x): 0.7736, norm(y): 1.0029, norm:0.7659, tok/sec: 100332.07, flops:105.31, batch-reuse:1
@ 4841 train 4.3074 , allloss: 4.3076, dt: 1358.07ms, fracRes: 0.7092, norm(attn): 0.1729, norm(output): 0.9406, norm(x): 0.7742, norm(y): 1.0028, norm:0.6735, tok/sec: 96513.09, flops:101.30, batch-reuse:1
@ 4842 train 4.2768 , allloss: 4.2769, dt: 1349.27ms, fracRes: 0.7091, norm(attn): 0.1738, norm(output): 0.9410, norm(x): 0.7749, norm(y): 1.0028, norm:0.7092, tok/sec: 97143.22, flops:101.96, batch-reuse:1
@ 4843 train 4.2873 , allloss: 4.2874, dt: 1346.31ms, fracRes: 0.7089, norm(attn): 0.1729, norm(output): 0.9408, norm(x): 0.7753, norm(y): 1.0029, norm:0.6270, tok/sec: 97356.26, flops:102.19, batch-reuse:1
@ 4844 train 4.1759 , allloss: 4.1760, dt: 1318.62ms, fracRes: 0.7089, norm(attn): 0.1729, norm(output): 0.9406, norm(x): 0.7750, norm(y): 1.0031, norm:0.5707, tok/sec: 99400.82, flops:104.33, batch-reuse:1
@ 4845 train 4.1552 , allloss: 4.1553, dt: 1326.02ms, fracRes: 0.7089, norm(attn): 0.1729, norm(output): 0.9402, norm(x): 0.7747, norm(y): 1.0031, norm:0.6144, tok/sec: 98845.99, flops:103.75, batch-reuse:1
@ 4846 train 4.2803 , allloss: 4.2804, dt: 1315.38ms, fracRes: 0.7089, norm(attn): 0.1729, norm(output): 0.9404, norm(x): 0.7749, norm(y): 1.0030, norm:0.5447, tok/sec: 99645.69, flops:104.59, batch-reuse:1
@ 4847 train 4.2580 , allloss: 4.2581, dt: 1312.88ms, fracRes: 0.7088, norm(attn): 0.1719, norm(output): 0.9404, norm(x): 0.7753, norm(y): 1.0031, norm:0.5344, tok/sec: 99835.64, flops:104.79, batch-reuse:1
@ 4848 train 4.2013 , allloss: 4.2013, dt: 1313.91ms, fracRes: 0.7089, norm(attn): 0.1729, norm(output): 0.9405, norm(x): 0.7758, norm(y): 1.0031, norm:0.5749, tok/sec: 99757.32, flops:104.71, batch-reuse:1
@ 4849 train 4.2989 , allloss: 4.3035, dt: 1321.47ms, fracRes: 0.7088, norm(attn): 0.1719, norm(output): 0.9407, norm(x): 0.7763, norm(y): 1.0029, norm:0.6299, tok/sec: 99186.83, flops:104.11, batch-reuse:1
@ 4850 train 4.5249 , allloss: 4.5254, dt: 1327.28ms, fracRes: 0.7092, norm(attn): 0.1729, norm(output): 0.9406, norm(x): 0.7759, norm(y): 1.0028, norm:0.7410, tok/sec: 98752.33, flops:103.65, batch-reuse:1
@ 4851 train 4.2097 , allloss: 4.2098, dt: 1306.63ms, fracRes: 0.7091, norm(attn): 0.1729, norm(output): 0.9406, norm(x): 0.7755, norm(y): 1.0027, norm:0.7450, tok/sec: 100312.84, flops:105.29, batch-reuse:1
@ 4852 train 4.2595 , allloss: 4.2596, dt: 1319.36ms, fracRes: 0.7090, norm(attn): 0.1719, norm(output): 0.9406, norm(x): 0.7760, norm(y): 1.0027, norm:0.7224, tok/sec: 99345.08, flops:104.28, batch-reuse:1
@ 4853 train 4.1910 , allloss: 4.1910, dt: 1289.21ms, fracRes: 0.7089, norm(attn): 0.1729, norm(output): 0.9404, norm(x): 0.7758, norm(y): 1.0028, norm:0.6177, tok/sec: 101668.81, flops:106.71, batch-reuse:1
@ 4854 train 4.1659 , allloss: 4.1662, dt: 1326.78ms, fracRes: 0.7092, norm(attn): 0.1738, norm(output): 0.9407, norm(x): 0.7754, norm(y): 1.0030, norm:1.0270, tok/sec: 98789.54, flops:103.69, batch-reuse:1
@ 4855 train 4.3652 , allloss: 4.3653, dt: 1340.88ms, fracRes: 0.7093, norm(attn): 0.1719, norm(output): 0.9405, norm(x): 0.7751, norm(y): 1.0029, norm:1.0128, tok/sec: 97751.00, flops:102.60, batch-reuse:1
@ 4856 train 4.2789 , allloss: 4.2796, dt: 1309.54ms, fracRes: 0.7091, norm(attn): 0.1719, norm(output): 0.9406, norm(x): 0.7752, norm(y): 1.0027, norm:0.7202, tok/sec: 100089.90, flops:105.06, batch-reuse:1
@ 4857 train 4.1933 , allloss: 4.1965, dt: 1313.62ms, fracRes: 0.7091, norm(attn): 0.1729, norm(output): 0.9405, norm(x): 0.7750, norm(y): 1.0025, norm:0.6922, tok/sec: 99778.89, flops:104.73, batch-reuse:1
@ 4858 train 4.2459 , allloss: 4.2460, dt: 1285.84ms, fracRes: 0.7091, norm(attn): 0.1729, norm(output): 0.9406, norm(x): 0.7753, norm(y): 1.0027, norm:0.6270, tok/sec: 101935.11, flops:106.99, batch-reuse:1
@ 4859 train 4.2969 , allloss: 4.2969, dt: 1316.11ms, fracRes: 0.7093, norm(attn): 0.1719, norm(output): 0.9407, norm(x): 0.7752, norm(y): 1.0029, norm:0.9457, tok/sec: 99590.58, flops:104.53, batch-reuse:1
@ 4860 train 4.2237 , allloss: 4.2239, dt: 1305.38ms, fracRes: 0.7090, norm(attn): 0.1719, norm(output): 0.9406, norm(x): 0.7749, norm(y): 1.0028, norm:0.9295, tok/sec: 100409.25, flops:105.39, batch-reuse:1
@ 4861 train 4.2225 , allloss: 4.2226, dt: 1318.45ms, fracRes: 0.7090, norm(attn): 0.1719, norm(output): 0.9404, norm(x): 0.7742, norm(y): 1.0028, norm:0.9106, tok/sec: 99414.03, flops:104.35, batch-reuse:1
@ 4862 train 4.2611 , allloss: 4.2611, dt: 1284.36ms, fracRes: 0.7095, norm(attn): 0.1719, norm(output): 0.9401, norm(x): 0.7738, norm(y): 1.0027, norm:0.6924, tok/sec: 102052.41, flops:107.12, batch-reuse:1
@ 4863 train 4.3822 , allloss: 4.3822, dt: 1312.17ms, fracRes: 0.7096, norm(attn): 0.1719, norm(output): 0.9410, norm(x): 0.7748, norm(y): 1.0026, norm:0.7116, tok/sec: 99889.53, flops:104.85, batch-reuse:1
@ 4864 train 4.2793 , allloss: 4.2793, dt: 1340.79ms, fracRes: 0.7097, norm(attn): 0.1729, norm(output): 0.9410, norm(x): 0.7754, norm(y): 1.0027, norm:0.8206, tok/sec: 97756.99, flops:102.61, batch-reuse:1
@ 4865 train 4.1749 , allloss: 4.1755, dt: 1290.24ms, fracRes: 0.7096, norm(attn): 0.1758, norm(output): 0.9405, norm(x): 0.7749, norm(y): 1.0028, norm:0.6040, tok/sec: 101587.43, flops:106.63, batch-reuse:1
@ 4866 train 4.2938 , allloss: 4.2939, dt: 1295.56ms, fracRes: 0.7094, norm(attn): 0.1738, norm(output): 0.9405, norm(x): 0.7746, norm(y): 1.0029, norm:0.7363, tok/sec: 101170.03, flops:106.19, batch-reuse:1
@ 4867 train 4.2049 , allloss: 4.2053, dt: 1322.01ms, fracRes: 0.7094, norm(attn): 0.1729, norm(output): 0.9404, norm(x): 0.7745, norm(y): 1.0028, norm:0.6332, tok/sec: 99145.74, flops:104.07, batch-reuse:1
@ 4868 train 4.1650 , allloss: 4.1652, dt: 1317.89ms, fracRes: 0.7092, norm(attn): 0.1729, norm(output): 0.9405, norm(x): 0.7745, norm(y): 1.0027, norm:0.6666, tok/sec: 99456.26, flops:104.39, batch-reuse:1
@ 4869 train 4.2319 , allloss: 4.2319, dt: 1340.12ms, fracRes: 0.7092, norm(attn): 0.1729, norm(output): 0.9407, norm(x): 0.7745, norm(y): 1.0026, norm:0.6568, tok/sec: 97805.90, flops:102.66, batch-reuse:1
@ 4870 train 4.2131 , allloss: 4.2132, dt: 1280.77ms, fracRes: 0.7091, norm(attn): 0.1729, norm(output): 0.9407, norm(x): 0.7745, norm(y): 1.0026, norm:0.5367, tok/sec: 102338.22, flops:107.42, batch-reuse:1
@ 4871 train 4.3089 , allloss: 4.3091, dt: 1309.73ms, fracRes: 0.7094, norm(attn): 0.1729, norm(output): 0.9406, norm(x): 0.7741, norm(y): 1.0027, norm:0.7407, tok/sec: 100075.58, flops:105.04, batch-reuse:1
@ 4872 train 4.2526 , allloss: 4.2529, dt: 1326.68ms, fracRes: 0.7092, norm(attn): 0.1729, norm(output): 0.9406, norm(x): 0.7748, norm(y): 1.0027, norm:0.7806, tok/sec: 98796.63, flops:103.70, batch-reuse:1
@ 4873 train 4.0959 , allloss: 4.0960, dt: 1272.32ms, fracRes: 0.7095, norm(attn): 0.1738, norm(output): 0.9405, norm(x): 0.7743, norm(y): 1.0026, norm:0.5853, tok/sec: 103018.14, flops:108.13, batch-reuse:1
@ 4874 train 4.2420 , allloss: 4.2420, dt: 1305.22ms, fracRes: 0.7096, norm(attn): 0.1738, norm(output): 0.9407, norm(x): 0.7744, norm(y): 1.0024, norm:0.6148, tok/sec: 100421.47, flops:105.41, batch-reuse:1
@ 4875 train 4.2643 , allloss: 4.2653, dt: 1333.87ms, fracRes: 0.7096, norm(attn): 0.1729, norm(output): 0.9407, norm(x): 0.7741, norm(y): 1.0023, norm:0.6654, tok/sec: 98264.59, flops:103.14, batch-reuse:1
@ 4876 train 4.2648 , allloss: 4.2649, dt: 1319.48ms, fracRes: 0.7094, norm(attn): 0.1738, norm(output): 0.9407, norm(x): 0.7745, norm(y): 1.0024, norm:0.5511, tok/sec: 99336.18, flops:104.27, batch-reuse:1
@ 4877 train 4.2780 , allloss: 4.2781, dt: 1295.80ms, fracRes: 0.7094, norm(attn): 0.1738, norm(output): 0.9406, norm(x): 0.7746, norm(y): 1.0027, norm:0.6485, tok/sec: 101151.45, flops:106.17, batch-reuse:1
@ 4878 train 4.1154 , allloss: 4.1155, dt: 1319.33ms, fracRes: 0.7091, norm(attn): 0.1738, norm(output): 0.9405, norm(x): 0.7749, norm(y): 1.0028, norm:0.6050, tok/sec: 99347.61, flops:104.28, batch-reuse:1
@ 4879 train 4.2290 , allloss: 4.2291, dt: 1326.08ms, fracRes: 0.7092, norm(attn): 0.1729, norm(output): 0.9407, norm(x): 0.7756, norm(y): 1.0026, norm:0.5816, tok/sec: 98841.44, flops:103.75, batch-reuse:1
@ 4880 train 4.1752 , allloss: 4.1753, dt: 1315.65ms, fracRes: 0.7093, norm(attn): 0.1738, norm(output): 0.9408, norm(x): 0.7759, norm(y): 1.0025, norm:0.5743, tok/sec: 99625.12, flops:104.57, batch-reuse:1
@ 4881 train 4.2861 , allloss: 4.2862, dt: 1292.52ms, fracRes: 0.7093, norm(attn): 0.1729, norm(output): 0.9407, norm(x): 0.7758, norm(y): 1.0028, norm:0.5818, tok/sec: 101407.97, flops:106.44, batch-reuse:1
@ 4882 train 4.3337 , allloss: 4.3338, dt: 1302.37ms, fracRes: 0.7093, norm(attn): 0.1729, norm(output): 0.9408, norm(x): 0.7758, norm(y): 1.0029, norm:0.7060, tok/sec: 100640.78, flops:105.64, batch-reuse:1
@ 4883 train 4.1885 , allloss: 4.1885, dt: 1319.04ms, fracRes: 0.7091, norm(attn): 0.1729, norm(output): 0.9408, norm(x): 0.7758, norm(y): 1.0029, norm:0.6277, tok/sec: 99369.38, flops:104.30, batch-reuse:1
@ 4884 train 4.1283 , allloss: 4.1284, dt: 1311.71ms, fracRes: 0.7092, norm(attn): 0.1719, norm(output): 0.9406, norm(x): 0.7752, norm(y): 1.0028, norm:0.6548, tok/sec: 99924.50, flops:104.88, batch-reuse:1
@ 4885 train 4.4233 , allloss: 4.4237, dt: 1292.31ms, fracRes: 0.7092, norm(attn): 0.1719, norm(output): 0.9408, norm(x): 0.7753, norm(y): 1.0026, norm:0.6640, tok/sec: 101424.23, flops:106.46, batch-reuse:1
@ 4886 train 4.1505 , allloss: 4.1506, dt: 1293.03ms, fracRes: 0.7091, norm(attn): 0.1729, norm(output): 0.9406, norm(x): 0.7758, norm(y): 1.0026, norm:0.6142, tok/sec: 101367.86, flops:106.40, batch-reuse:1
@ 4887 train 4.3257 , allloss: 4.3258, dt: 1303.40ms, fracRes: 0.7093, norm(attn): 0.1738, norm(output): 0.9407, norm(x): 0.7759, norm(y): 1.0027, norm:0.7669, tok/sec: 100561.99, flops:105.55, batch-reuse:1
@ 4888 train 4.1583 , allloss: 4.1584, dt: 1295.04ms, fracRes: 0.7092, norm(attn): 0.1729, norm(output): 0.9407, norm(x): 0.7758, norm(y): 1.0027, norm:0.6365, tok/sec: 101211.15, flops:106.23, batch-reuse:1
@ 4889 train 4.2006 , allloss: 4.2007, dt: 1293.88ms, fracRes: 0.7092, norm(attn): 0.1729, norm(output): 0.9408, norm(x): 0.7757, norm(y): 1.0027, norm:0.6036, tok/sec: 101301.40, flops:106.33, batch-reuse:1
@ 4890 train 4.1837 , allloss: 4.1837, dt: 1309.28ms, fracRes: 0.7093, norm(attn): 0.1719, norm(output): 0.9407, norm(x): 0.7759, norm(y): 1.0028, norm:0.6147, tok/sec: 100110.10, flops:105.08, batch-reuse:1
@ 4891 train 4.2227 , allloss: 4.2227, dt: 1324.36ms, fracRes: 0.7090, norm(attn): 0.1719, norm(output): 0.9409, norm(x): 0.7764, norm(y): 1.0026, norm:0.6217, tok/sec: 98969.77, flops:103.88, batch-reuse:1
@ 4892 train 4.2473 , allloss: 4.2476, dt: 1328.64ms, fracRes: 0.7090, norm(attn): 0.1729, norm(output): 0.9405, norm(x): 0.7758, norm(y): 1.0027, norm:0.6280, tok/sec: 98651.55, flops:103.55, batch-reuse:1
@ 4893 train 4.2200 , allloss: 4.2200, dt: 1296.47ms, fracRes: 0.7091, norm(attn): 0.1719, norm(output): 0.9408, norm(x): 0.7760, norm(y): 1.0029, norm:0.5733, tok/sec: 101099.39, flops:106.12, batch-reuse:1
@ 4894 train 4.2769 , allloss: 4.2771, dt: 1288.82ms, fracRes: 0.7093, norm(attn): 0.1719, norm(output): 0.9404, norm(x): 0.7752, norm(y): 1.0030, norm:0.6723, tok/sec: 101699.57, flops:106.75, batch-reuse:1
@ 4895 train 4.1985 , allloss: 4.1986, dt: 1292.65ms, fracRes: 0.7090, norm(attn): 0.1729, norm(output): 0.9407, norm(x): 0.7756, norm(y): 1.0028, norm:0.5677, tok/sec: 101397.77, flops:106.43, batch-reuse:1
@ 4896 train 4.2756 , allloss: 4.2758, dt: 1284.85ms, fracRes: 0.7090, norm(attn): 0.1719, norm(output): 0.9408, norm(x): 0.7759, norm(y): 1.0030, norm:0.6940, tok/sec: 102013.66, flops:107.08, batch-reuse:1
@ 4897 train 4.2528 , allloss: 4.2529, dt: 1300.01ms, fracRes: 0.7091, norm(attn): 0.1719, norm(output): 0.9410, norm(x): 0.7764, norm(y): 1.0029, norm:0.5815, tok/sec: 100824.10, flops:105.83, batch-reuse:1
@ 4898 train 4.2464 , allloss: 4.2464, dt: 1297.68ms, fracRes: 0.7092, norm(attn): 0.1729, norm(output): 0.9407, norm(x): 0.7757, norm(y): 1.0029, norm:0.5871, tok/sec: 101005.06, flops:106.02, batch-reuse:1
@ 4899 train 4.2486 , allloss: 4.2487, dt: 1286.96ms, fracRes: 0.7090, norm(attn): 0.1729, norm(output): 0.9408, norm(x): 0.7757, norm(y): 1.0027, norm:0.5571, tok/sec: 101846.37, flops:106.90, batch-reuse:1
@ 4900 train 4.1824 , allloss: 4.1825, dt: 1304.66ms, fracRes: 0.7087, norm(attn): 0.1738, norm(output): 0.9406, norm(x): 0.7760, norm(y): 1.0028, norm:0.5592, tok/sec: 100464.23, flops:105.45, batch-reuse:1
@ 4901 train 4.2518 , allloss: 4.2518, dt: 1317.75ms, fracRes: 0.7088, norm(attn): 0.1729, norm(output): 0.9407, norm(x): 0.7762, norm(y): 1.0030, norm:0.5676, tok/sec: 99466.77, flops:104.40, batch-reuse:1
@ 4902 train 4.0108 , allloss: 4.0109, dt: 1313.11ms, fracRes: 0.7090, norm(attn): 0.1738, norm(output): 0.9405, norm(x): 0.7754, norm(y): 1.0030, norm:0.7082, tok/sec: 99818.29, flops:104.77, batch-reuse:1
@ 4903 train 4.0985 , allloss: 4.0986, dt: 1328.44ms, fracRes: 0.7090, norm(attn): 0.1719, norm(output): 0.9408, norm(x): 0.7759, norm(y): 1.0030, norm:0.6495, tok/sec: 98666.11, flops:103.56, batch-reuse:1
@ 4904 train 4.1829 , allloss: 4.1830, dt: 1328.57ms, fracRes: 0.7090, norm(attn): 0.1719, norm(output): 0.9405, norm(x): 0.7760, norm(y): 1.0029, norm:0.6656, tok/sec: 98656.19, flops:103.55, batch-reuse:1
@ 4905 train 4.1585 , allloss: 4.1586, dt: 1343.15ms, fracRes: 0.7090, norm(attn): 0.1719, norm(output): 0.9407, norm(x): 0.7764, norm(y): 1.0029, norm:0.6032, tok/sec: 97585.85, flops:102.43, batch-reuse:1
@ 4906 train 4.2534 , allloss: 4.2535, dt: 1339.34ms, fracRes: 0.7091, norm(attn): 0.1719, norm(output): 0.9406, norm(x): 0.7764, norm(y): 1.0029, norm:0.5789, tok/sec: 97863.27, flops:102.72, batch-reuse:1
@ 4907 train 4.2761 , allloss: 4.2762, dt: 1334.41ms, fracRes: 0.7092, norm(attn): 0.1709, norm(output): 0.9407, norm(x): 0.7765, norm(y): 1.0030, norm:0.6233, tok/sec: 98224.39, flops:103.10, batch-reuse:1
@ 4908 train 4.2644 , allloss: 4.2646, dt: 1328.98ms, fracRes: 0.7091, norm(attn): 0.1719, norm(output): 0.9408, norm(x): 0.7766, norm(y): 1.0029, norm:0.5345, tok/sec: 98625.87, flops:103.52, batch-reuse:1
@ 4909 train 4.1877 , allloss: 4.1877, dt: 1317.65ms, fracRes: 0.7089, norm(attn): 0.1719, norm(output): 0.9407, norm(x): 0.7768, norm(y): 1.0029, norm:0.6281, tok/sec: 99473.82, flops:104.41, batch-reuse:1
@ 4910 train 4.2103 , allloss: 4.2112, dt: 1284.30ms, fracRes: 0.7095, norm(attn): 0.1729, norm(output): 0.9402, norm(x): 0.7761, norm(y): 1.0032, norm:0.9222, tok/sec: 102057.47, flops:107.12, batch-reuse:1
@ 4911 train 4.1873 , allloss: 4.1874, dt: 1314.73ms, fracRes: 0.7089, norm(attn): 0.1729, norm(output): 0.9403, norm(x): 0.7758, norm(y): 1.0031, norm:0.9762, tok/sec: 99694.82, flops:104.64, batch-reuse:1
@ 4912 train 4.3028 , allloss: 4.3029, dt: 1316.65ms, fracRes: 0.7089, norm(attn): 0.1719, norm(output): 0.9408, norm(x): 0.7763, norm(y): 1.0029, norm:0.7876, tok/sec: 99549.24, flops:104.49, batch-reuse:1
@ 4913 train 4.2623 , allloss: 4.2624, dt: 1296.11ms, fracRes: 0.7091, norm(attn): 0.1748, norm(output): 0.9407, norm(x): 0.7761, norm(y): 1.0029, norm:0.7800, tok/sec: 101127.37, flops:106.15, batch-reuse:1
@ 4914 train 4.2300 , allloss: 4.2301, dt: 1276.57ms, fracRes: 0.7083, norm(attn): 0.1719, norm(output): 0.9412, norm(x): 0.7785, norm(y): 1.0027, norm:0.9833, tok/sec: 102675.40, flops:107.77, batch-reuse:1
@ 4915 train 4.1892 , allloss: 4.1892, dt: 1304.65ms, fracRes: 0.7085, norm(attn): 0.1729, norm(output): 0.9407, norm(x): 0.7771, norm(y): 1.0027, norm:0.8169, tok/sec: 100465.62, flops:105.45, batch-reuse:1
@ 4916 train 4.2062 , allloss: 4.2063, dt: 1312.99ms, fracRes: 0.7088, norm(attn): 0.1738, norm(output): 0.9405, norm(x): 0.7757, norm(y): 1.0026, norm:0.7415, tok/sec: 99826.81, flops:104.78, batch-reuse:1
@ 4917 train 4.1470 , allloss: 4.1471, dt: 1338.66ms, fracRes: 0.7089, norm(attn): 0.1719, norm(output): 0.9407, norm(x): 0.7754, norm(y): 1.0026, norm:0.8382, tok/sec: 97913.19, flops:102.77, batch-reuse:1
@ 4918 train 4.1316 , allloss: 4.1338, dt: 1341.70ms, fracRes: 0.7093, norm(attn): 0.1719, norm(output): 0.9406, norm(x): 0.7754, norm(y): 1.0027, norm:0.6118, tok/sec: 97690.97, flops:102.54, batch-reuse:1
@ 4919 train 4.1707 , allloss: 4.1708, dt: 1346.22ms, fracRes: 0.7097, norm(attn): 0.1719, norm(output): 0.9406, norm(x): 0.7756, norm(y): 1.0025, norm:0.6795, tok/sec: 97363.28, flops:102.20, batch-reuse:1
@ 4920 train 4.1743 , allloss: 4.1743, dt: 1325.31ms, fracRes: 0.7098, norm(attn): 0.1729, norm(output): 0.9409, norm(x): 0.7757, norm(y): 1.0024, norm:0.5762, tok/sec: 98899.46, flops:103.81, batch-reuse:1
@ 4921 train 4.1809 , allloss: 4.1811, dt: 1276.32ms, fracRes: 0.7096, norm(attn): 0.1719, norm(output): 0.9412, norm(x): 0.7763, norm(y): 1.0022, norm:0.7058, tok/sec: 102695.46, flops:107.79, batch-reuse:1
@ 4922 train 4.1195 , allloss: 4.1196, dt: 1299.11ms, fracRes: 0.7094, norm(attn): 0.1719, norm(output): 0.9412, norm(x): 0.7762, norm(y): 1.0021, norm:0.5858, tok/sec: 100893.80, flops:105.90, batch-reuse:1
@ 4923 train 4.1660 , allloss: 4.1661, dt: 1290.11ms, fracRes: 0.7093, norm(attn): 0.1719, norm(output): 0.9410, norm(x): 0.7766, norm(y): 1.0023, norm:0.6252, tok/sec: 101597.77, flops:106.64, batch-reuse:1
@ 4924 train 4.1738 , allloss: 4.1740, dt: 1296.56ms, fracRes: 0.7095, norm(attn): 0.1719, norm(output): 0.9407, norm(x): 0.7764, norm(y): 1.0029, norm:0.5704, tok/sec: 101091.95, flops:106.11, batch-reuse:1
@ 4925 train 4.1223 , allloss: 4.1225, dt: 1303.44ms, fracRes: 0.7094, norm(attn): 0.1709, norm(output): 0.9407, norm(x): 0.7767, norm(y): 1.0030, norm:0.5442, tok/sec: 100558.37, flops:105.55, batch-reuse:1
@ 4926 train 4.2112 , allloss: 4.2113, dt: 1294.86ms, fracRes: 0.7096, norm(attn): 0.1719, norm(output): 0.9407, norm(x): 0.7764, norm(y): 1.0028, norm:0.6591, tok/sec: 101224.46, flops:106.25, batch-reuse:1
@ 4927 train 4.2855 , allloss: 4.2876, dt: 1313.75ms, fracRes: 0.7096, norm(attn): 0.1719, norm(output): 0.9409, norm(x): 0.7766, norm(y): 1.0024, norm:0.6092, tok/sec: 99769.54, flops:104.72, batch-reuse:1
@ 4928 train 4.0875 , allloss: 4.0876, dt: 1299.43ms, fracRes: 0.7096, norm(attn): 0.1729, norm(output): 0.9412, norm(x): 0.7772, norm(y): 1.0024, norm:0.7206, tok/sec: 100868.78, flops:105.88, batch-reuse:1
@ 4929 train 4.1032 , allloss: 4.1033, dt: 1300.56ms, fracRes: 0.7097, norm(attn): 0.1719, norm(output): 0.9406, norm(x): 0.7769, norm(y): 1.0028, norm:0.8028, tok/sec: 100781.42, flops:105.78, batch-reuse:1
@ 4930 train 4.1301 , allloss: 4.1306, dt: 1287.04ms, fracRes: 0.7098, norm(attn): 0.1719, norm(output): 0.9409, norm(x): 0.7768, norm(y): 1.0028, norm:0.7113, tok/sec: 101839.73, flops:106.89, batch-reuse:1
@ 4931 train 4.1837 , allloss: 4.1838, dt: 1299.22ms, fracRes: 0.7095, norm(attn): 0.1729, norm(output): 0.9410, norm(x): 0.7768, norm(y): 1.0027, norm:0.6556, tok/sec: 100885.23, flops:105.89, batch-reuse:1
@ 4932 train 4.1820 , allloss: 4.1824, dt: 1309.55ms, fracRes: 0.7095, norm(attn): 0.1729, norm(output): 0.9408, norm(x): 0.7764, norm(y): 1.0025, norm:0.5858, tok/sec: 100089.49, flops:105.06, batch-reuse:1
@ 4933 train 4.1518 , allloss: 4.1520, dt: 1339.40ms, fracRes: 0.7096, norm(attn): 0.1729, norm(output): 0.9411, norm(x): 0.7765, norm(y): 1.0024, norm:0.6330, tok/sec: 97858.46, flops:102.72, batch-reuse:1
@ 4934 train 4.1428 , allloss: 4.1430, dt: 1324.09ms, fracRes: 0.7095, norm(attn): 0.1719, norm(output): 0.9411, norm(x): 0.7767, norm(y): 1.0023, norm:0.6245, tok/sec: 98990.41, flops:103.90, batch-reuse:1
@ 4935 train 4.1769 , allloss: 4.1770, dt: 1326.42ms, fracRes: 0.7096, norm(attn): 0.1729, norm(output): 0.9411, norm(x): 0.7765, norm(y): 1.0022, norm:0.6568, tok/sec: 98816.14, flops:103.72, batch-reuse:1
@ 4936 train 4.1750 , allloss: 4.1751, dt: 1299.24ms, fracRes: 0.7098, norm(attn): 0.1729, norm(output): 0.9409, norm(x): 0.7760, norm(y): 1.0023, norm:0.5943, tok/sec: 100883.55, flops:105.89, batch-reuse:1
@ 4937 train 4.1719 , allloss: 4.1720, dt: 1316.56ms, fracRes: 0.7097, norm(attn): 0.1719, norm(output): 0.9411, norm(x): 0.7762, norm(y): 1.0023, norm:0.6051, tok/sec: 99556.29, flops:104.50, batch-reuse:1
@ 4938 train 4.1334 , allloss: 4.1335, dt: 1305.26ms, fracRes: 0.7096, norm(attn): 0.1719, norm(output): 0.9413, norm(x): 0.7765, norm(y): 1.0025, norm:0.5153, tok/sec: 100418.07, flops:105.40, batch-reuse:1
@ 4939 train 4.2185 , allloss: 4.2186, dt: 1304.54ms, fracRes: 0.7094, norm(attn): 0.1709, norm(output): 0.9412, norm(x): 0.7764, norm(y): 1.0026, norm:0.6534, tok/sec: 100473.66, flops:105.46, batch-reuse:1
@ 4940 train 4.0938 , allloss: 4.1189, dt: 1317.83ms, fracRes: 0.7093, norm(attn): 0.1719, norm(output): 0.9410, norm(x): 0.7766, norm(y): 1.0026, norm:0.7423, tok/sec: 99460.67, flops:104.40, batch-reuse:1
@ 4941 train 4.1549 , allloss: 4.1550, dt: 1299.03ms, fracRes: 0.7092, norm(attn): 0.1719, norm(output): 0.9411, norm(x): 0.7773, norm(y): 1.0026, norm:0.5567, tok/sec: 100899.56, flops:105.91, batch-reuse:1
@ 4942 train 4.1359 , allloss: 4.1363, dt: 1313.06ms, fracRes: 0.7093, norm(attn): 0.1719, norm(output): 0.9410, norm(x): 0.7776, norm(y): 1.0026, norm:0.5666, tok/sec: 99821.61, flops:104.78, batch-reuse:1
@ 4943 train 4.2247 , allloss: 4.2249, dt: 1317.43ms, fracRes: 0.7094, norm(attn): 0.1709, norm(output): 0.9412, norm(x): 0.7778, norm(y): 1.0025, norm:0.5386, tok/sec: 99490.84, flops:104.43, batch-reuse:1
@ 4944 train 4.0986 , allloss: 4.0987, dt: 1313.62ms, fracRes: 0.7093, norm(attn): 0.1719, norm(output): 0.9409, norm(x): 0.7775, norm(y): 1.0025, norm:0.6121, tok/sec: 99779.27, flops:104.73, batch-reuse:1
@ 4945 train 4.1734 , allloss: 4.1735, dt: 1342.69ms, fracRes: 0.7094, norm(attn): 0.1729, norm(output): 0.9407, norm(x): 0.7768, norm(y): 1.0025, norm:0.5984, tok/sec: 97618.94, flops:102.46, batch-reuse:1
@ 4946 train 4.1118 , allloss: 4.1121, dt: 1317.72ms, fracRes: 0.7091, norm(attn): 0.1709, norm(output): 0.9410, norm(x): 0.7775, norm(y): 1.0025, norm:0.5675, tok/sec: 99468.55, flops:104.41, batch-reuse:1
@ 4947 train 4.1497 , allloss: 4.1497, dt: 1315.55ms, fracRes: 0.7091, norm(attn): 0.1709, norm(output): 0.9412, norm(x): 0.7778, norm(y): 1.0027, norm:0.6109, tok/sec: 99632.97, flops:104.58, batch-reuse:1
@ 4948 train 4.1419 , allloss: 4.1419, dt: 1351.64ms, fracRes: 0.7093, norm(attn): 0.1729, norm(output): 0.9411, norm(x): 0.7773, norm(y): 1.0028, norm:0.6059, tok/sec: 96972.60, flops:101.79, batch-reuse:1
@ 4949 train 4.0670 , allloss: 4.0670, dt: 1282.71ms, fracRes: 0.7092, norm(attn): 0.1719, norm(output): 0.9408, norm(x): 0.7774, norm(y): 1.0027, norm:0.6300, tok/sec: 102183.65, flops:107.26, batch-reuse:1
@ 4950 train 4.1019 , allloss: 4.1019, dt: 1296.57ms, fracRes: 0.7090, norm(attn): 0.1719, norm(output): 0.9408, norm(x): 0.7773, norm(y): 1.0024, norm:0.5585, tok/sec: 101091.08, flops:106.11, batch-reuse:1
@ 4951 train 4.0073 , allloss: 4.0074, dt: 1305.53ms, fracRes: 0.7093, norm(attn): 0.1729, norm(output): 0.9407, norm(x): 0.7767, norm(y): 1.0024, norm:0.5363, tok/sec: 100397.77, flops:105.38, batch-reuse:1
@ 4952 train 4.1543 , allloss: 4.1543, dt: 1322.69ms, fracRes: 0.7094, norm(attn): 0.1719, norm(output): 0.9409, norm(x): 0.7772, norm(y): 1.0025, norm:0.5485, tok/sec: 99095.15, flops:104.01, batch-reuse:1
@ 4953 train 4.0332 , allloss: 4.0333, dt: 1344.85ms, fracRes: 0.7097, norm(attn): 0.1729, norm(output): 0.9407, norm(x): 0.7767, norm(y): 1.0027, norm:0.6195, tok/sec: 97462.29, flops:102.30, batch-reuse:1
@ 4954 train 4.1579 , allloss: 4.1583, dt: 1332.28ms, fracRes: 0.7095, norm(attn): 0.1719, norm(output): 0.9408, norm(x): 0.7772, norm(y): 1.0027, norm:0.5399, tok/sec: 98381.50, flops:103.26, batch-reuse:1
@ 4955 train 4.1990 , allloss: 4.1996, dt: 1308.17ms, fracRes: 0.7096, norm(attn): 0.1719, norm(output): 0.9409, norm(x): 0.7774, norm(y): 1.0026, norm:0.6012, tok/sec: 100195.11, flops:105.17, batch-reuse:1
@ 4956 train 4.1179 , allloss: 4.1183, dt: 1334.45ms, fracRes: 0.7095, norm(attn): 0.1719, norm(output): 0.9409, norm(x): 0.7774, norm(y): 1.0026, norm:0.5983, tok/sec: 98222.07, flops:103.10, batch-reuse:1
@ 4957 train 4.2080 , allloss: 4.2084, dt: 1299.19ms, fracRes: 0.7099, norm(attn): 0.1719, norm(output): 0.9408, norm(x): 0.7771, norm(y): 1.0028, norm:0.6558, tok/sec: 100887.71, flops:105.89, batch-reuse:1
@ 4958 train 4.1266 , allloss: 4.1268, dt: 1306.13ms, fracRes: 0.7090, norm(attn): 0.1719, norm(output): 0.9410, norm(x): 0.7782, norm(y): 1.0025, norm:0.6419, tok/sec: 100351.79, flops:105.33, batch-reuse:1
@ 4959 train 4.2037 , allloss: 4.2037, dt: 1291.12ms, fracRes: 0.7090, norm(attn): 0.1719, norm(output): 0.9410, norm(x): 0.7783, norm(y): 1.0025, norm:0.5639, tok/sec: 101517.80, flops:106.56, batch-reuse:1
@ 4960 train 4.1756 , allloss: 4.1757, dt: 1294.56ms, fracRes: 0.7091, norm(attn): 0.1719, norm(output): 0.9411, norm(x): 0.7783, norm(y): 1.0025, norm:0.6149, tok/sec: 101248.64, flops:106.27, batch-reuse:1
@ 4961 train 4.0992 , allloss: 4.0992, dt: 1332.83ms, fracRes: 0.7092, norm(attn): 0.1709, norm(output): 0.9408, norm(x): 0.7781, norm(y): 1.0026, norm:0.6066, tok/sec: 98340.92, flops:103.22, batch-reuse:1
@ 4962 train 4.1177 , allloss: 4.1178, dt: 1302.77ms, fracRes: 0.7090, norm(attn): 0.1719, norm(output): 0.9411, norm(x): 0.7784, norm(y): 1.0027, norm:0.5991, tok/sec: 100610.61, flops:105.60, batch-reuse:1
@ 4963 train 4.1516 , allloss: 4.1517, dt: 1282.75ms, fracRes: 0.7091, norm(attn): 0.1719, norm(output): 0.9410, norm(x): 0.7782, norm(y): 1.0026, norm:0.5681, tok/sec: 102180.16, flops:107.25, batch-reuse:1
@ 4964 train 4.0391 , allloss: 4.0393, dt: 1295.60ms, fracRes: 0.7091, norm(attn): 0.1719, norm(output): 0.9408, norm(x): 0.7778, norm(y): 1.0025, norm:0.5684, tok/sec: 101167.05, flops:106.19, batch-reuse:1
@ 4965 train 4.0687 , allloss: 4.0688, dt: 1288.13ms, fracRes: 0.7089, norm(attn): 0.1699, norm(output): 0.9409, norm(x): 0.7782, norm(y): 1.0025, norm:0.5692, tok/sec: 101753.34, flops:106.80, batch-reuse:1
@ 4966 train 4.1270 , allloss: 4.1273, dt: 1300.81ms, fracRes: 0.7092, norm(attn): 0.1719, norm(output): 0.9405, norm(x): 0.7776, norm(y): 1.0026, norm:0.6270, tok/sec: 100762.18, flops:105.76, batch-reuse:1
@ 4967 train 4.0094 , allloss: 4.0096, dt: 1289.62ms, fracRes: 0.7090, norm(attn): 0.1719, norm(output): 0.9408, norm(x): 0.7775, norm(y): 1.0026, norm:0.7019, tok/sec: 101636.28, flops:106.68, batch-reuse:1
@ 4968 train 4.0499 , allloss: 4.0508, dt: 1294.38ms, fracRes: 0.7090, norm(attn): 0.1729, norm(output): 0.9406, norm(x): 0.7772, norm(y): 1.0027, norm:0.7717, tok/sec: 101262.37, flops:106.29, batch-reuse:1
@ 4969 train 4.0850 , allloss: 4.0850, dt: 1309.32ms, fracRes: 0.7091, norm(attn): 0.1719, norm(output): 0.9408, norm(x): 0.7775, norm(y): 1.0029, norm:0.7996, tok/sec: 100107.18, flops:105.08, batch-reuse:1
@ 4970 train 4.2117 , allloss: 4.2123, dt: 1317.36ms, fracRes: 0.7093, norm(attn): 0.1719, norm(output): 0.9409, norm(x): 0.7777, norm(y): 1.0030, norm:0.5600, tok/sec: 99496.31, flops:104.43, batch-reuse:1
@ 4971 train 4.0585 , allloss: 4.0586, dt: 1327.93ms, fracRes: 0.7093, norm(attn): 0.1709, norm(output): 0.9410, norm(x): 0.7782, norm(y): 1.0027, norm:0.7009, tok/sec: 98703.95, flops:103.60, batch-reuse:1
@ 4972 train 4.0526 , allloss: 4.0528, dt: 1313.25ms, fracRes: 0.7092, norm(attn): 0.1709, norm(output): 0.9411, norm(x): 0.7783, norm(y): 1.0026, norm:0.7609, tok/sec: 99807.05, flops:104.76, batch-reuse:1
@ 4973 train 4.0223 , allloss: 4.0232, dt: 1293.45ms, fracRes: 0.7093, norm(attn): 0.1709, norm(output): 0.9405, norm(x): 0.7773, norm(y): 1.0027, norm:0.6955, tok/sec: 101334.99, flops:106.36, batch-reuse:1
@ 4974 train 4.0405 , allloss: 4.0409, dt: 1294.93ms, fracRes: 0.7095, norm(attn): 0.1709, norm(output): 0.9408, norm(x): 0.7777, norm(y): 1.0026, norm:0.5635, tok/sec: 101219.65, flops:106.24, batch-reuse:1
@ 4975 train 4.1584 , allloss: 4.1585, dt: 1288.22ms, fracRes: 0.7095, norm(attn): 0.1709, norm(output): 0.9412, norm(x): 0.7787, norm(y): 1.0027, norm:0.7219, tok/sec: 101746.94, flops:106.80, batch-reuse:1
@ 4976 train 4.0659 , allloss: 4.0659, dt: 1310.33ms, fracRes: 0.7093, norm(attn): 0.1709, norm(output): 0.9410, norm(x): 0.7789, norm(y): 1.0026, norm:0.6511, tok/sec: 100029.41, flops:104.99, batch-reuse:1
@ 4977 train 4.1431 , allloss: 4.1433, dt: 1313.20ms, fracRes: 0.7091, norm(attn): 0.1719, norm(output): 0.9411, norm(x): 0.7793, norm(y): 1.0024, norm:0.6151, tok/sec: 99811.18, flops:104.77, batch-reuse:1
@ 4978 train 3.9678 , allloss: 3.9678, dt: 1319.44ms, fracRes: 0.7091, norm(attn): 0.1729, norm(output): 0.9408, norm(x): 0.7781, norm(y): 1.0024, norm:0.8168, tok/sec: 99339.16, flops:104.27, batch-reuse:1
@ 4979 train 4.0610 , allloss: 4.0610, dt: 1316.87ms, fracRes: 0.7093, norm(attn): 0.1719, norm(output): 0.9409, norm(x): 0.7775, norm(y): 1.0026, norm:0.6275, tok/sec: 99532.79, flops:104.47, batch-reuse:1
@ 4980 train 4.0401 , allloss: 4.0402, dt: 1302.89ms, fracRes: 0.7096, norm(attn): 0.1709, norm(output): 0.9410, norm(x): 0.7778, norm(y): 1.0028, norm:0.5975, tok/sec: 100601.10, flops:105.59, batch-reuse:1
@ 4981 train 4.1953 , allloss: 4.1953, dt: 1309.61ms, fracRes: 0.7097, norm(attn): 0.1709, norm(output): 0.9411, norm(x): 0.7785, norm(y): 1.0029, norm:0.7721, tok/sec: 100084.66, flops:105.05, batch-reuse:1
@ 4982 train 4.0850 , allloss: 4.0851, dt: 1318.28ms, fracRes: 0.7097, norm(attn): 0.1719, norm(output): 0.9410, norm(x): 0.7784, norm(y): 1.0027, norm:0.5684, tok/sec: 99426.47, flops:104.36, batch-reuse:1
@ 4983 train 4.0559 , allloss: 4.0566, dt: 1328.89ms, fracRes: 0.7096, norm(attn): 0.1719, norm(output): 0.9410, norm(x): 0.7780, norm(y): 1.0025, norm:0.6166, tok/sec: 98633.04, flops:103.53, batch-reuse:1
@ 4984 train 4.0787 , allloss: 4.0787, dt: 1334.96ms, fracRes: 0.7097, norm(attn): 0.1719, norm(output): 0.9411, norm(x): 0.7776, norm(y): 1.0025, norm:0.7025, tok/sec: 98184.13, flops:103.06, batch-reuse:1
@ 4985 train 4.0661 , allloss: 4.0662, dt: 1318.53ms, fracRes: 0.7098, norm(attn): 0.1719, norm(output): 0.9409, norm(x): 0.7770, norm(y): 1.0028, norm:0.6971, tok/sec: 99407.96, flops:104.34, batch-reuse:1
@ 4986 train 4.0616 , allloss: 4.0618, dt: 1322.10ms, fracRes: 0.7095, norm(attn): 0.1719, norm(output): 0.9408, norm(x): 0.7771, norm(y): 1.0027, norm:0.7239, tok/sec: 99139.61, flops:104.06, batch-reuse:1
@ 4987 train 4.1385 , allloss: 4.1387, dt: 1350.20ms, fracRes: 0.7094, norm(attn): 0.1719, norm(output): 0.9409, norm(x): 0.7771, norm(y): 1.0026, norm:0.6499, tok/sec: 97076.23, flops:101.89, batch-reuse:1
@ 4988 train 3.9588 , allloss: 3.9589, dt: 1299.36ms, fracRes: 0.7093, norm(attn): 0.1719, norm(output): 0.9409, norm(x): 0.7769, norm(y): 1.0023, norm:0.7443, tok/sec: 100874.55, flops:105.88, batch-reuse:1
@ 4989 train 4.2155 , allloss: 4.2157, dt: 1332.71ms, fracRes: 0.7094, norm(attn): 0.1709, norm(output): 0.9409, norm(x): 0.7767, norm(y): 1.0026, norm:0.7284, tok/sec: 98349.80, flops:103.23, batch-reuse:1
@ 4990 train 4.1054 , allloss: 4.1055, dt: 1327.04ms, fracRes: 0.7094, norm(attn): 0.1719, norm(output): 0.9408, norm(x): 0.7771, norm(y): 1.0028, norm:0.9306, tok/sec: 98769.83, flops:103.67, batch-reuse:1
@ 4991 train 4.0687 , allloss: 4.0688, dt: 1315.19ms, fracRes: 0.7095, norm(attn): 0.1699, norm(output): 0.9409, norm(x): 0.7769, norm(y): 1.0028, norm:0.6406, tok/sec: 99660.03, flops:104.61, batch-reuse:1
@ 4992 train 4.0858 , allloss: 4.0891, dt: 1309.84ms, fracRes: 0.7096, norm(attn): 0.1719, norm(output): 0.9410, norm(x): 0.7770, norm(y): 1.0029, norm:0.8188, tok/sec: 100067.50, flops:105.03, batch-reuse:1
@ 4993 train 4.0882 , allloss: 4.0882, dt: 1319.20ms, fracRes: 0.7096, norm(attn): 0.1719, norm(output): 0.9409, norm(x): 0.7769, norm(y): 1.0027, norm:0.7100, tok/sec: 99357.24, flops:104.29, batch-reuse:1
@ 4994 train 4.0692 , allloss: 4.0693, dt: 1328.81ms, fracRes: 0.7096, norm(attn): 0.1709, norm(output): 0.9413, norm(x): 0.7773, norm(y): 1.0026, norm:0.7876, tok/sec: 98638.54, flops:103.53, batch-reuse:1
@ 4995 train 4.0024 , allloss: 4.0025, dt: 1335.22ms, fracRes: 0.7098, norm(attn): 0.1719, norm(output): 0.9411, norm(x): 0.7774, norm(y): 1.0026, norm:0.7706, tok/sec: 98165.05, flops:103.04, batch-reuse:1
@ 4996 train 4.1231 , allloss: 4.1236, dt: 1333.72ms, fracRes: 0.7098, norm(attn): 0.1709, norm(output): 0.9410, norm(x): 0.7773, norm(y): 1.0026, norm:0.7527, tok/sec: 98275.31, flops:103.15, batch-reuse:1
@ 4997 train 4.0396 , allloss: 4.0397, dt: 1302.90ms, fracRes: 0.7098, norm(attn): 0.1709, norm(output): 0.9411, norm(x): 0.7774, norm(y): 1.0026, norm:0.6539, tok/sec: 100599.97, flops:105.59, batch-reuse:1
@ 4998 train 4.1341 , allloss: 4.1345, dt: 1318.42ms, fracRes: 0.7098, norm(attn): 0.1709, norm(output): 0.9409, norm(x): 0.7770, norm(y): 1.0026, norm:0.6931, tok/sec: 99415.68, flops:104.35, batch-reuse:1
@ 4999 train 3.9981 , allloss: 3.9995, dt: 1351.72ms, fracRes: 0.7096, norm(attn): 0.1709, norm(output): 0.9410, norm(x): 0.7778, norm(y): 1.0024, norm:0.7285, tok/sec: 96966.80, flops:101.78, batch-reuse:1
@ 5000 train 4.0492 , allloss: 4.0492, dt: 2205.28ms, fracRes: 0.7095, norm(attn): 0.1709, norm(output): 0.9410, norm(x): 0.7782, norm(y): 1.0026, norm:0.5562, tok/sec: 59435.67, flops:62.39, batch-reuse:1
@ 5001 train 3.9629 , allloss: 3.9637, dt: 1300.07ms, fracRes: 0.7094, norm(attn): 0.1719, norm(output): 0.9409, norm(x): 0.7781, norm(y): 1.0027, norm:0.6918, tok/sec: 100819.31, flops:105.82, batch-reuse:1
@ 5002 train 4.1927 , allloss: 4.1934, dt: 1293.37ms, fracRes: 0.7096, norm(attn): 0.1699, norm(output): 0.9409, norm(x): 0.7775, norm(y): 1.0028, norm:0.6166, tok/sec: 101341.12, flops:106.37, batch-reuse:1
@ 5003 train 4.0544 , allloss: 4.0545, dt: 1295.26ms, fracRes: 0.7095, norm(attn): 0.1709, norm(output): 0.9408, norm(x): 0.7775, norm(y): 1.0029, norm:0.7117, tok/sec: 101193.61, flops:106.22, batch-reuse:1
@ 5004 train 4.1814 , allloss: 4.1820, dt: 1313.89ms, fracRes: 0.7096, norm(attn): 0.1699, norm(output): 0.9411, norm(x): 0.7780, norm(y): 1.0028, norm:0.7107, tok/sec: 99758.70, flops:104.71, batch-reuse:1
@ 5005 train 4.0266 , allloss: 4.0269, dt: 1332.19ms, fracRes: 0.7095, norm(attn): 0.1709, norm(output): 0.9410, norm(x): 0.7779, norm(y): 1.0026, norm:0.7339, tok/sec: 98388.21, flops:103.27, batch-reuse:1
@ 5006 train 4.1182 , allloss: 4.1184, dt: 1333.30ms, fracRes: 0.7095, norm(attn): 0.1709, norm(output): 0.9413, norm(x): 0.7784, norm(y): 1.0025, norm:0.6344, tok/sec: 98306.38, flops:103.19, batch-reuse:1
@ 5007 train 4.0779 , allloss: 4.0782, dt: 1313.97ms, fracRes: 0.7096, norm(attn): 0.1719, norm(output): 0.9412, norm(x): 0.7784, norm(y): 1.0025, norm:0.6133, tok/sec: 99752.29, flops:104.70, batch-reuse:1
@ 5008 train 4.1635 , allloss: 4.1636, dt: 1298.39ms, fracRes: 0.7095, norm(attn): 0.1689, norm(output): 0.9412, norm(x): 0.7787, norm(y): 1.0027, norm:0.8098, tok/sec: 100949.81, flops:105.96, batch-reuse:1
@ 5009 train 3.9855 , allloss: 3.9857, dt: 1308.76ms, fracRes: 0.7092, norm(attn): 0.1709, norm(output): 0.9407, norm(x): 0.7777, norm(y): 1.0025, norm:0.6211, tok/sec: 100149.49, flops:105.12, batch-reuse:1
@ 5010 train 4.0978 , allloss: 4.0983, dt: 1304.08ms, fracRes: 0.7094, norm(attn): 0.1709, norm(output): 0.9407, norm(x): 0.7779, norm(y): 1.0025, norm:0.6754, tok/sec: 100509.43, flops:105.50, batch-reuse:1
@ 5011 train 4.0513 , allloss: 4.0516, dt: 1304.71ms, fracRes: 0.7094, norm(attn): 0.1699, norm(output): 0.9412, norm(x): 0.7784, norm(y): 1.0024, norm:0.5566, tok/sec: 100460.52, flops:105.45, batch-reuse:1
@ 5012 train 4.1366 , allloss: 4.1367, dt: 1277.18ms, fracRes: 0.7095, norm(attn): 0.1719, norm(output): 0.9412, norm(x): 0.7784, norm(y): 1.0025, norm:0.7152, tok/sec: 102625.74, flops:107.72, batch-reuse:1
@ 5013 train 4.3068 , allloss: 4.3096, dt: 1295.17ms, fracRes: 0.7094, norm(attn): 0.1699, norm(output): 0.9414, norm(x): 0.7791, norm(y): 1.0025, norm:0.5928, tok/sec: 101200.31, flops:106.22, batch-reuse:1
@ 5014 train 4.2487 , allloss: 4.2495, dt: 1291.21ms, fracRes: 0.7096, norm(attn): 0.1709, norm(output): 0.9410, norm(x): 0.7786, norm(y): 1.0026, norm:0.7073, tok/sec: 101510.75, flops:106.55, batch-reuse:1
@ 5015 train 4.1736 , allloss: 4.1798, dt: 1300.09ms, fracRes: 0.7095, norm(attn): 0.1709, norm(output): 0.9409, norm(x): 0.7781, norm(y): 1.0026, norm:0.6509, tok/sec: 100817.96, flops:105.82, batch-reuse:1
@ 5016 train 4.1856 , allloss: 4.1858, dt: 1326.94ms, fracRes: 0.7095, norm(attn): 0.1709, norm(output): 0.9406, norm(x): 0.7773, norm(y): 1.0026, norm:0.7112, tok/sec: 98777.65, flops:103.68, batch-reuse:1
@ 5017 train 4.2738 , allloss: 4.2739, dt: 1319.63ms, fracRes: 0.7098, norm(attn): 0.1699, norm(output): 0.9409, norm(x): 0.7771, norm(y): 1.0028, norm:0.8438, tok/sec: 99324.55, flops:104.25, batch-reuse:1
@ 5018 train 4.2284 , allloss: 4.2286, dt: 1276.04ms, fracRes: 0.7096, norm(attn): 0.1719, norm(output): 0.9412, norm(x): 0.7778, norm(y): 1.0027, norm:0.7753, tok/sec: 102717.39, flops:107.82, batch-reuse:1
@ 5019 train 4.2277 , allloss: 4.2278, dt: 1325.85ms, fracRes: 0.7096, norm(attn): 0.1709, norm(output): 0.9411, norm(x): 0.7782, norm(y): 1.0024, norm:0.8615, tok/sec: 98859.00, flops:103.77, batch-reuse:1
@ 5020 train 4.2180 , allloss: 4.2185, dt: 1330.95ms, fracRes: 0.7096, norm(attn): 0.1699, norm(output): 0.9412, norm(x): 0.7785, norm(y): 1.0022, norm:0.6077, tok/sec: 98480.05, flops:103.37, batch-reuse:1
@ 5021 train 4.2170 , allloss: 4.2173, dt: 1298.23ms, fracRes: 0.7098, norm(attn): 0.1699, norm(output): 0.9412, norm(x): 0.7782, norm(y): 1.0022, norm:0.6665, tok/sec: 100962.36, flops:105.97, batch-reuse:1
@ 5022 train 4.2746 , allloss: 4.2747, dt: 1309.80ms, fracRes: 0.7098, norm(attn): 0.1709, norm(output): 0.9412, norm(x): 0.7784, norm(y): 1.0025, norm:0.7813, tok/sec: 100069.94, flops:105.04, batch-reuse:1
@ 5023 train 4.2885 , allloss: 4.2925, dt: 1322.66ms, fracRes: 0.7096, norm(attn): 0.1709, norm(output): 0.9413, norm(x): 0.7788, norm(y): 1.0026, norm:0.6384, tok/sec: 99097.38, flops:104.02, batch-reuse:1
@ 5024 train 4.2821 , allloss: 4.2939, dt: 1295.66ms, fracRes: 0.7097, norm(attn): 0.1719, norm(output): 0.9413, norm(x): 0.7786, norm(y): 1.0025, norm:0.8578, tok/sec: 101162.08, flops:106.18, batch-reuse:1
@ 5025 train 4.2122 , allloss: 4.2124, dt: 1305.06ms, fracRes: 0.7096, norm(attn): 0.1709, norm(output): 0.9412, norm(x): 0.7788, norm(y): 1.0024, norm:0.7369, tok/sec: 100433.70, flops:105.42, batch-reuse:1
@ 5026 train 4.1916 , allloss: 4.1919, dt: 1321.56ms, fracRes: 0.7095, norm(attn): 0.1709, norm(output): 0.9414, norm(x): 0.7791, norm(y): 1.0024, norm:0.5236, tok/sec: 99179.75, flops:104.10, batch-reuse:1
@ 5027 train 4.1845 , allloss: 4.1846, dt: 1322.56ms, fracRes: 0.7100, norm(attn): 0.1719, norm(output): 0.9414, norm(x): 0.7781, norm(y): 1.0025, norm:0.6624, tok/sec: 99105.12, flops:104.02, batch-reuse:1
@ 5028 train 4.1971 , allloss: 4.1974, dt: 1317.47ms, fracRes: 0.7097, norm(attn): 0.1709, norm(output): 0.9411, norm(x): 0.7784, norm(y): 1.0026, norm:0.5575, tok/sec: 99487.41, flops:104.43, batch-reuse:1
@ 5029 train 4.1863 , allloss: 4.1866, dt: 1356.89ms, fracRes: 0.7100, norm(attn): 0.1709, norm(output): 0.9410, norm(x): 0.7783, norm(y): 1.0027, norm:0.6775, tok/sec: 96597.33, flops:101.39, batch-reuse:1
@ 5030 train 4.2347 , allloss: 4.2348, dt: 1313.29ms, fracRes: 0.7096, norm(attn): 0.1719, norm(output): 0.9411, norm(x): 0.7783, norm(y): 1.0025, norm:0.6046, tok/sec: 99804.64, flops:104.76, batch-reuse:1
@ 5031 train 4.2193 , allloss: 4.2198, dt: 1326.63ms, fracRes: 0.7096, norm(attn): 0.1709, norm(output): 0.9410, norm(x): 0.7779, norm(y): 1.0025, norm:0.6713, tok/sec: 98800.94, flops:103.70, batch-reuse:1
@ 5032 train 4.1458 , allloss: 4.1592, dt: 1326.92ms, fracRes: 0.7097, norm(attn): 0.1709, norm(output): 0.9410, norm(x): 0.7781, norm(y): 1.0024, norm:0.7638, tok/sec: 98779.02, flops:103.68, batch-reuse:1
@ 5033 train 4.1290 , allloss: 4.1290, dt: 1304.54ms, fracRes: 0.7094, norm(attn): 0.1719, norm(output): 0.9409, norm(x): 0.7785, norm(y): 1.0024, norm:0.6582, tok/sec: 100474.01, flops:105.46, batch-reuse:1
@ 5034 train 4.2433 , allloss: 4.2452, dt: 1300.46ms, fracRes: 0.7092, norm(attn): 0.1719, norm(output): 0.9410, norm(x): 0.7785, norm(y): 1.0024, norm:0.6522, tok/sec: 100788.81, flops:105.79, batch-reuse:1
@ 5035 train 4.4976 , allloss: 4.4977, dt: 1312.02ms, fracRes: 0.7094, norm(attn): 0.1719, norm(output): 0.9408, norm(x): 0.7780, norm(y): 1.0025, norm:0.8071, tok/sec: 99900.80, flops:104.86, batch-reuse:1
@ 5036 train 4.1588 , allloss: 4.1589, dt: 1332.48ms, fracRes: 0.7095, norm(attn): 0.1709, norm(output): 0.9409, norm(x): 0.7786, norm(y): 1.0027, norm:0.8621, tok/sec: 98366.91, flops:103.25, batch-reuse:1
@ 5037 train 4.2436 , allloss: 4.2437, dt: 1290.72ms, fracRes: 0.7096, norm(attn): 0.1709, norm(output): 0.9412, norm(x): 0.7788, norm(y): 1.0025, norm:0.6577, tok/sec: 101549.22, flops:106.59, batch-reuse:1
@ 5038 train 4.2209 , allloss: 4.2209, dt: 1303.28ms, fracRes: 0.7095, norm(attn): 0.1709, norm(output): 0.9414, norm(x): 0.7794, norm(y): 1.0021, norm:0.7263, tok/sec: 100570.97, flops:105.56, batch-reuse:1
@ 5039 train 4.1828 , allloss: 4.1828, dt: 1310.78ms, fracRes: 0.7095, norm(attn): 0.1709, norm(output): 0.9411, norm(x): 0.7795, norm(y): 1.0022, norm:0.6799, tok/sec: 99995.44, flops:104.96, batch-reuse:1
@ 5040 train 4.2715 , allloss: 4.2715, dt: 1308.97ms, fracRes: 0.7097, norm(attn): 0.1709, norm(output): 0.9412, norm(x): 0.7794, norm(y): 1.0022, norm:0.6758, tok/sec: 100134.06, flops:105.10, batch-reuse:1
@ 5041 train 4.2606 , allloss: 4.2607, dt: 1292.21ms, fracRes: 0.7098, norm(attn): 0.1709, norm(output): 0.9413, norm(x): 0.7790, norm(y): 1.0024, norm:0.6815, tok/sec: 101432.22, flops:106.47, batch-reuse:1
@ 5042 train 4.3999 , allloss: 4.4000, dt: 1282.52ms, fracRes: 0.7099, norm(attn): 0.1689, norm(output): 0.9415, norm(x): 0.7787, norm(y): 1.0023, norm:0.6428, tok/sec: 102199.10, flops:107.27, batch-reuse:1
@ 5043 train 4.1692 , allloss: 4.1693, dt: 1283.28ms, fracRes: 0.7097, norm(attn): 0.1709, norm(output): 0.9410, norm(x): 0.7785, norm(y): 1.0023, norm:0.6467, tok/sec: 102138.66, flops:107.21, batch-reuse:1
@ 5044 train 4.1553 , allloss: 4.1555, dt: 1303.31ms, fracRes: 0.7096, norm(attn): 0.1709, norm(output): 0.9410, norm(x): 0.7787, norm(y): 1.0022, norm:0.5256, tok/sec: 100568.58, flops:105.56, batch-reuse:1
@ 5045 train 4.1103 , allloss: 4.1104, dt: 1305.08ms, fracRes: 0.7096, norm(attn): 0.1709, norm(output): 0.9408, norm(x): 0.7786, norm(y): 1.0024, norm:0.5933, tok/sec: 100432.03, flops:105.42, batch-reuse:1
@ 5046 train 4.2915 , allloss: 4.2916, dt: 1306.62ms, fracRes: 0.7096, norm(attn): 0.1699, norm(output): 0.9413, norm(x): 0.7790, norm(y): 1.0025, norm:0.6229, tok/sec: 100313.83, flops:105.29, batch-reuse:1
@ 5047 train 4.2188 , allloss: 4.2189, dt: 1282.16ms, fracRes: 0.7094, norm(attn): 0.1699, norm(output): 0.9414, norm(x): 0.7796, norm(y): 1.0025, norm:0.7176, tok/sec: 102227.22, flops:107.30, batch-reuse:1
@ 5048 train 4.0897 , allloss: 4.0899, dt: 1316.99ms, fracRes: 0.7094, norm(attn): 0.1709, norm(output): 0.9410, norm(x): 0.7796, norm(y): 1.0024, norm:0.5893, tok/sec: 99523.81, flops:104.46, batch-reuse:1
@ 5049 train 4.1476 , allloss: 4.1480, dt: 1312.74ms, fracRes: 0.7094, norm(attn): 0.1709, norm(output): 0.9408, norm(x): 0.7792, norm(y): 1.0023, norm:0.5715, tok/sec: 99845.86, flops:104.80, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0077, -0.0410, -0.0101,  ..., -0.0132,  0.0026,  0.0307],
        [ 0.0107, -0.0432, -0.0145,  ..., -0.0635, -0.0108,  0.0195],
        [-0.0038, -0.0512,  0.0139,  ..., -0.0059,  0.0134,  0.0449],
        ...,
        [ 0.0192,  0.0682, -0.0139,  ...,  0.0085, -0.0320,  0.0052],
        [-0.0094, -0.0146,  0.0547,  ...,  0.0023,  0.0511,  0.0268],
        [ 0.0167, -0.0250,  0.0396,  ..., -0.0223,  0.0572, -0.0069]], device='cuda:0', requires_grad=True)
K: tensor([     5.3438,     -2.8438,      2.3438,      3.1562,     -4.7188,      3.0469,     -0.0024,      5.9375,     -4.8438,     -0.7461,     -2.3750,     -4.3438,      4.8750,     -3.9375,      0.7148,     -0.2354,     -0.7383,     -4.3125,      4.7812,     -5.7500,      5.4062,      3.5000,
            -5.8438,     -0.2178,     -0.7812,     -0.8203,      3.0000,     -3.6719,     -5.1250,     -3.2031,      5.6562,      0.3496,      3.0469,      4.7188,     -1.0000,     -3.7188,      2.7031,      2.7031,     -3.0156,     -3.3750,      4.7812,     -2.1250,     -0.7188,     -1.9688,
            -4.0938,     -1.8125,      0.7734,      4.0000,     -0.7930,      0.5469,      3.6719,     -4.2188,     -5.3438,      5.3125,      3.0469,     -2.3750,      4.0938,      2.4688,     -0.9023,     -2.7188,     -2.2656,      1.1406,     -1.3906,     -1.6953], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[-0.0813,  0.0814, -0.0046,  ..., -0.0186, -0.0285, -0.0122],
        [-0.0671,  0.0882, -0.0007,  ...,  0.0281,  0.0006,  0.0202],
        [-0.0677,  0.0790, -0.0179,  ..., -0.0464, -0.0616,  0.0058],
        ...,
        [ 0.0357, -0.0101, -0.0040,  ...,  0.0141, -0.0190,  0.0048],
        [-0.0278,  0.0158, -0.0358,  ...,  0.0324,  0.0027,  0.0314],
        [-0.0159,  0.0369,  0.0129,  ...,  0.0079, -0.0074, -0.0396]], device='cuda:0', requires_grad=True)
Q: tensor([-1.5859,  5.8750, -7.2500, -4.6562,  3.6562, -4.6250, -2.3438, -5.4062,  4.7188, -5.6562,  1.6094,  4.1250, -6.4688,  4.3438, -6.9062,  3.9844,  4.0938,  5.1562, -4.0938,  6.5312, -3.9062, -4.8438,  5.2500, -4.6250, -2.5156, -4.4688, -6.0000,  2.4844,  3.9531,  7.4062, -4.7812, -5.9375,
        -7.2812, -3.9219, -2.6562,  2.0938, -8.1875, -4.0312,  5.0938,  2.4062, -2.6562,  0.6016,  5.4062, -1.3359,  4.5312,  3.3906, -5.5625, -6.0938,  6.4062,  0.4590, -3.1562,  5.3438,  4.3438, -5.5312, -2.3594, -0.1445, -2.6406,  2.9062, -1.5781,  8.5000,  1.8516, -4.2500,  5.2188,  6.0938],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[   0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000],
        [   0.0000,   79.0000,   89.5000,   94.0000,   73.5000,   67.5000,   58.0000,   79.5000,   72.0000,   57.2500,   71.0000,   79.0000,   53.0000,   72.0000,   77.0000],
        [   0.0000,  -50.0000,  -59.7500,  -61.5000,  -48.7500,  -45.0000,  -36.7500,  -49.5000,  -46.5000,  -39.2500,  -48.0000,  -49.0000,  -30.3750,  -46.2500,  -49.7500],
        [   0.0000,  -96.5000, -117.0000, -131.0000, -108.0000,  -97.5000,  -79.5000,  -98.0000, -101.5000,  -82.5000, -107.0000, -102.5000,  -59.0000, -102.0000, -107.0000],
        [   0.0000, -108.0000, -130.0000, -144.0000, -120.0000, -109.0000,  -88.0000, -107.5000, -113.0000,  -91.5000, -119.5000, -111.0000,  -63.0000, -113.0000, -118.0000],
        [   0.0000,  -86.5000, -104.5000, -114.0000,  -93.5000,  -85.5000,  -70.5000,  -88.5000,  -89.0000,  -72.5000,  -92.5000,  -89.5000,  -54.0000,  -88.5000,  -93.0000],
        [   0.0000,  -84.0000, -101.0000, -110.0000,  -90.5000,  -83.5000,  -66.5000,  -83.5000,  -85.5000,  -69.5000,  -90.0000,  -86.0000,  -49.5000,  -85.5000,  -90.0000],
        [   0.0000,  -66.5000,  -80.5000,  -89.0000,  -74.0000,  -67.0000,  -55.0000,  -68.5000,  -70.0000,  -57.2500,  -72.5000,  -70.5000,  -42.0000,  -69.5000,  -73.0000],
        [   0.0000,  -92.0000, -110.0000, -122.5000, -101.0000,  -92.0000,  -74.5000,  -92.0000,  -95.5000,  -77.0000, -100.5000,  -94.0000,  -53.5000,  -95.0000,  -99.5000],
        [   0.0000, -104.0000, -123.0000, -135.0000, -110.5000, -100.5000,  -82.0000, -103.0000, -105.0000,  -84.5000, -109.5000, -106.0000,  -61.5000, -105.0000, -110.5000],
        [   0.0000, -103.5000, -123.0000, -135.0000, -111.0000, -101.0000,  -81.5000, -101.0000, -105.0000,  -84.5000, -111.5000, -104.0000,  -58.2500, -105.0000, -110.5000],
        [   0.0000,  -92.5000, -110.0000, -121.0000, -100.0000,  -91.0000,  -73.5000,  -92.0000,  -94.0000,  -76.0000,  -98.5000,  -95.5000,  -55.2500,  -94.5000,  -99.5000],
        [   0.0000,  -68.5000,  -83.0000,  -91.5000,  -76.5000,  -69.0000,  -57.0000,  -70.0000,  -72.0000,  -58.5000,  -74.5000,  -73.0000,  -43.5000,  -72.0000,  -75.5000],
        [   0.0000,  -92.0000, -108.0000, -119.0000,  -97.0000,  -89.0000,  -71.5000,  -90.0000,  -92.0000,  -74.0000,  -97.5000,  -91.5000,  -51.7500,  -92.5000,  -97.0000],
        [   0.0000,  -91.0000, -108.0000, -119.0000,  -97.5000,  -89.0000,  -72.5000,  -90.0000,  -92.0000,  -74.5000,  -96.5000,  -93.0000,  -53.5000,  -92.0000,  -97.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9167],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0084,     0.9922,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8203,     0.1406,     0.0381,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0020,     0.0087,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0052,     0.0011,     0.0002,     0.0013,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9648,     0.0204,     0.0035,     0.0004,     0.0085,     0.0009,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9297,     0.0344,     0.0150,     0.0002,     0.0011,     0.0004,     0.0198,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8008,     0.0192,     0.1128,     0.0017,     0.0006,     0.0002,     0.0092,     0.0566,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9531,     0.0167,     0.0028,     0.0004,     0.0015,     0.0009,     0.0161,     0.0057,     0.0009,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8828,     0.0034,     0.0085,     0.0007,     0.0006,     0.0002,     0.0032,     0.0444,     0.0001,     0.0576,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5898,     0.0757,     0.0173,     0.0028,     0.0205,     0.0051,     0.1592,     0.0688,     0.0075,     0.0432,     0.0113,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7109,     0.0053,     0.0048,     0.0002,     0.0009,     0.0004,     0.0022,     0.2256,     0.0001,     0.0177,     0.0012,     0.0311,     0.0000,     0.0000,     0.0000],
        [    0.6641,     0.0182,     0.0129,     0.0067,     0.0074,     0.0016,     0.0248,     0.0159,     0.0023,     0.0133,     0.0898,     0.0908,     0.0515,     0.0000,     0.0000],
        [    0.8945,     0.0254,     0.0027,     0.0008,     0.0042,     0.0022,     0.0265,     0.0075,     0.0030,     0.0030,     0.0051,     0.0104,     0.0139,     0.0015,     0.0000],
        [    0.4746,     0.0276,     0.0028,     0.0026,     0.0004,     0.0009,     0.0544,     0.0325,     0.0007,     0.0288,     0.0216,     0.0311,     0.0182,     0.0005,     0.3027]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0199,  0.0101, -0.0013,  ..., -0.0114,  0.0242,  0.0068],
        [ 0.0268,  0.0145,  0.0343,  ..., -0.0049, -0.0449,  0.0324],
        [-0.0200,  0.0154, -0.0083,  ..., -0.0151,  0.0055,  0.0267],
        ...,
        [ 0.0529,  0.0097,  0.0551,  ...,  0.0181,  0.0272, -0.0354],
        [-0.0077,  0.0266, -0.0483,  ..., -0.0135,  0.0243,  0.0378],
        [-0.0008, -0.0500,  0.0154,  ..., -0.0084, -0.0009,  0.0341]], device='cuda:0', requires_grad=True)
K: tensor([-0.8789, -0.8555, -0.0198, -0.1816, -2.5156, -2.0312, -1.3359, -0.6445, -1.4453, -1.5625,  0.2754,  1.7969,  0.8203,  1.8828,  0.7852, -1.2188, -1.0391,  1.1484,  0.3145, -1.5234, -1.2344, -1.3359, -0.3242,  0.7031,  0.4238,  0.1904, -1.3438, -1.4141,  2.2031,  1.4141,  0.0532, -0.7266,
        -1.1172, -1.5234,  0.0479, -1.1641, -0.3262,  0.5117,  1.1328,  0.6680, -1.8359,  1.1719,  0.1689,  3.2969, -1.7266, -3.3750, -3.3594, -0.2295, -0.6406, -1.9297,  1.2812, -0.1738, -0.6797,  0.7617, -0.9023,  0.4121,  0.4199,  1.4141,  1.0938, -1.8359, -1.9922, -0.6523,  3.0938, -1.4688],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0101, -0.0075, -0.0292,  ..., -0.0154,  0.0300, -0.0291],
        [-0.0082,  0.0256, -0.0002,  ..., -0.0497, -0.0259,  0.0281],
        [ 0.0007, -0.0315,  0.0639,  ..., -0.0047, -0.0028,  0.0202],
        ...,
        [-0.0015, -0.0315, -0.0229,  ..., -0.0002,  0.0448,  0.0397],
        [ 0.0312,  0.0106, -0.0155,  ...,  0.0351,  0.0104, -0.0061],
        [-0.0280,  0.0070,  0.0043,  ..., -0.0223,  0.0221,  0.0583]], device='cuda:0', requires_grad=True)
Q: tensor([-0.0457, -0.1309,  1.9375, -1.5391,  1.3516,  1.1172,  1.3750, -1.9609, -1.1562, -0.1621, -0.4082,  1.9141, -0.8359,  0.0183,  2.1094,  0.6250,  2.2031, -1.3125, -1.7109,  1.9062,  0.4355,  0.5547,  1.3594,  2.5938,  1.9219,  0.4316, -0.0244, -0.9414,  1.5859, -1.9844,  1.2422,  0.7422,
        -0.4551,  0.7617,  0.7188, -0.4102,  0.1787,  3.6406, -0.7734,  0.0095, -1.1719,  0.2520, -2.0938,  0.2910,  2.3750, -0.6680,  1.2969, -1.9297,  3.7188, -2.5000,  0.2812,  2.3125, -1.0547,  0.0947, -1.7734, -1.0312,  0.1357, -0.9375, -0.2158, -0.8008, -1.6641,  1.1719, -1.3750, -0.4629],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000,   4.7812,   1.4141,  -1.6328,  -0.9883,  -0.4180,   0.4277,  -1.2266,   1.3203,  -1.5547,  -1.1016,   2.4844,   0.1138,   0.7578,  -1.6797],
        [  0.0000,  -1.7656,  -3.0625,  -3.0625,  -3.0781,  -4.6562,  -2.6094,  -0.9258,  -4.1250,  -2.2031,  -1.9531,   0.4180,  -1.0078,  -4.2188,  -1.5625],
        [  0.0000,  -6.1875,  -4.7500,  -7.6562,  -7.2188,  -8.3125,  -7.7188,  -4.9375,  -8.5625,  -7.0000,  -5.8438,  -4.8438,  -5.0938,  -9.0625,  -6.5000],
        [  0.0000,  -5.2500,  -6.8125,  -8.5625,  -6.5938,  -8.5000,  -5.6562,  -6.0000,  -8.4375,  -7.3750,  -6.1562,  -6.5312,  -5.8438,  -8.5000,  -8.1875],
        [  0.0000,  -3.8594,  -5.6250,  -7.8438,  -4.7188,  -7.0312,  -3.7188,  -4.8750,  -5.9688,  -4.7188,  -5.2500,  -5.0000,  -4.1562,  -5.6250,  -5.5000],
        [  0.0000,  -3.2969,  -4.1250,  -8.5000,  -6.7188,  -7.6562,  -3.8438,  -4.5625,  -8.0000,  -5.2812,  -5.2812,  -3.8281,  -4.2188,  -8.0625,  -6.5625],
        [  0.0000,  -3.7344,  -1.9531,  -6.1250,  -7.1250,  -8.4375,  -4.4688,  -2.6406, -10.0000,  -5.3125,  -4.7188,  -4.3125,  -3.5938, -10.0000,  -5.5000],
        [  0.0000,  -4.0312,  -5.8438,  -7.7188,  -6.4375,  -7.0312,  -4.0938,  -5.1250,  -6.9062,  -6.4062,  -6.5312,  -5.4688,  -4.7812,  -6.7188,  -6.7188],
        [  0.0000,  -5.5625,  -4.6250,  -7.0938,  -7.3125,  -8.1875,  -5.6250,  -2.9844,  -9.3750,  -2.7344,  -6.6250,  -2.8594,  -3.0000,  -9.3125,  -6.2812],
        [  0.0000,  -2.0469,  -3.5312,  -5.3438,  -3.3594,  -4.7500,  -1.3125,  -2.1562,  -4.3750,  -2.6094,  -3.9531,  -2.2344,  -2.6875,  -4.4062,  -4.8438],
        [  0.0000,  -4.8750,  -5.0000,  -8.1875,  -6.7188,  -7.6250,  -5.7812,  -1.1484,  -9.4375,  -3.6875,  -6.4062,  -3.1250,  -0.9883,  -9.5000,  -5.2500],
        [  0.0000,  -3.5938,  -3.9375,  -4.5938,  -4.5000,  -6.0000,  -3.2969,  -3.7344,  -5.6562,  -3.9062,  -2.0000,  -1.9922,  -2.5625,  -5.1250,  -3.4062],
        [  0.0000,  -3.5625,  -5.8125,  -7.0000,  -5.3750,  -6.0000,  -3.5156,  -4.7812,  -5.7188,  -5.6875,  -5.1562,  -4.4375,  -4.1562,  -6.4062,  -5.4375],
        [  0.0000,  -2.8438,  -5.1562,  -5.2188,  -7.0938,  -6.2812,  -2.1719,  -2.6875,  -6.5938,  -2.7969,  -3.0938,  -2.7344,  -3.2656,  -6.7812,  -0.4531]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7791],
        [0.6739],
        [0.5318],
        [0.6188],
        [0.5314],
        [0.4670],
        [0.4155],
        [0.4498],
        [0.3280],
        [0.3421],
        [0.3208],
        [0.3687],
        [0.3768],
        [0.2088]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0283, -0.0064,  0.0065,  ...,  0.0141, -0.0626, -0.0081],
        [-0.0452, -0.0260,  0.0075,  ...,  0.0294, -0.0595, -0.0237],
        [ 0.0158,  0.0088, -0.0103,  ...,  0.0380,  0.0201, -0.0061],
        ...,
        [-0.0113, -0.0160, -0.0061,  ...,  0.0503, -0.0269, -0.0140],
        [-0.0226, -0.0141,  0.0144,  ...,  0.0143,  0.0027, -0.0029],
        [ 0.0044, -0.0328, -0.0272,  ...,  0.0479, -0.0304, -0.0528]], device='cuda:0', requires_grad=True)
K: tensor([ 3.4688, -4.3438, -3.4219, -4.1250,  5.3750, -4.1875,  5.4062,  3.8906,  3.0469, -4.9688,  3.5625, -4.4375, -5.0938,  4.8750,  2.7188, -3.0938,  2.3906,  4.8125, -0.7539, -4.5000,  5.1250,  5.9062,  4.3125, -2.6250, -4.5625,  5.2188, -3.7344, -4.9688, -3.6875,  3.6094, -4.8125,  3.1406,
         3.6562, -3.5625, -4.2500,  1.6016,  1.5859, -4.1562,  4.3438, -4.1562, -3.7656,  2.4219,  3.2656, -3.7188, -2.4531,  3.7812, -4.2812,  3.5469, -5.2500, -4.5312, -4.7500,  3.2812,  3.0000,  4.1562,  3.4688, -5.0312, -4.4375,  3.1562, -1.7500, -2.6250,  3.5625,  4.0312, -1.9375,  2.6562],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0119,  0.0098,  0.0101,  ..., -0.0004,  0.0170,  0.0356],
        [ 0.0396,  0.0225, -0.0185,  ..., -0.0354,  0.0024,  0.0057],
        [ 0.0019, -0.0207, -0.0044,  ..., -0.0233,  0.0399,  0.0266],
        ...,
        [-0.0117, -0.0056, -0.0474,  ..., -0.0119,  0.0378,  0.0063],
        [ 0.0179,  0.0009, -0.0187,  ...,  0.0224, -0.0206, -0.0138],
        [-0.0043,  0.0029,  0.0055,  ..., -0.0216, -0.0012,  0.0464]], device='cuda:0', requires_grad=True)
Q: tensor([-2.8438,  4.3750,  4.9062,  4.3750, -4.9062,  5.0938, -4.4688, -5.3438, -3.7969,  4.5000, -4.8750,  5.6875,  4.9375, -4.5312, -4.1562,  4.5625, -2.5781, -6.0312,  0.6797,  5.8750, -5.7188, -5.0625, -5.5000,  2.3125,  5.7812, -5.6562,  3.6250,  5.0625,  4.0312, -4.5312,  4.1250, -3.7188,
        -4.4375,  2.7188,  5.0625, -2.6719, -1.5078,  3.4844, -6.2812,  2.9062,  4.5625, -2.1562, -3.8125,  4.6562,  2.6250, -5.3438,  4.4688, -3.6875,  4.4062,  5.7500,  6.0312, -5.3750, -3.6406, -5.1250, -3.4219,  5.3750,  5.0000, -2.9375,  2.2188,  3.6250, -3.9219, -5.3438,  2.0156, -2.7656],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[   0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000],
        [   0.0000,  -52.7500,  -65.0000, -106.5000,  -77.5000,  -91.0000,  -86.0000, -110.0000,  -86.0000, -102.0000,  -79.5000,  -87.5000,  -91.5000,  -79.5000,  -89.5000],
        [   0.0000,  -66.0000,  -84.0000, -139.0000,  -98.0000, -116.5000, -110.0000, -143.0000, -110.0000, -133.0000, -102.5000, -112.5000, -118.5000, -102.0000, -116.0000],
        [   0.0000, -102.5000, -133.0000, -222.0000, -155.0000, -183.0000, -174.0000, -227.0000, -173.0000, -213.0000, -162.0000, -177.0000, -187.0000, -161.0000, -183.0000],
        [   0.0000,  -61.2500,  -77.0000, -127.5000,  -91.5000, -107.5000, -102.0000, -131.0000, -101.5000, -122.5000,  -94.5000, -103.0000, -109.0000,  -94.5000, -105.5000],
        [   0.0000,  -81.0000, -102.0000, -170.0000, -120.5000, -143.0000, -135.0000, -175.0000, -134.0000, -163.0000, -124.5000, -137.0000, -145.0000, -124.0000, -141.0000],
        [   0.0000,  -73.5000,  -93.5000, -156.0000, -111.0000, -131.0000, -124.0000, -161.0000, -123.0000, -150.0000, -114.5000, -126.0000, -133.0000, -114.5000, -129.0000],
        [   0.0000, -107.0000, -137.0000, -230.0000, -161.0000, -191.0000, -181.0000, -238.0000, -179.0000, -220.0000, -167.0000, -184.0000, -195.0000, -166.0000, -190.0000],
        [   0.0000,  -70.0000,  -89.5000, -149.0000, -105.0000, -124.5000, -117.5000, -153.0000, -117.5000, -142.0000, -109.0000, -120.0000, -127.0000, -109.0000, -123.0000],
        [   0.0000,  -94.0000, -121.0000, -201.0000, -140.0000, -167.0000, -158.0000, -206.0000, -156.0000, -194.0000, -146.0000, -160.0000, -170.0000, -145.0000, -166.0000],
        [   0.0000,  -69.5000,  -88.5000, -147.0000, -104.5000, -123.0000, -116.5000, -151.0000, -116.5000, -142.0000, -108.5000, -119.0000, -125.0000, -108.5000, -122.0000],
        [   0.0000,  -78.5000, -100.0000, -166.0000, -116.5000, -138.0000, -131.0000, -171.0000, -130.0000, -160.0000, -121.0000, -134.0000, -142.0000, -120.5000, -137.0000],
        [   0.0000,  -85.5000, -109.0000, -182.0000, -127.5000, -151.0000, -143.0000, -187.0000, -142.0000, -174.0000, -132.0000, -145.0000, -155.0000, -132.0000, -150.0000],
        [   0.0000,  -65.5000,  -83.5000, -139.0000,  -98.5000, -116.5000, -110.0000, -143.0000, -110.0000, -133.0000, -102.0000, -112.0000, -118.5000, -102.5000, -115.0000],
        [   0.0000,  -76.5000,  -98.5000, -165.0000, -115.5000, -137.0000, -130.0000, -170.0000, -129.0000, -158.0000, -119.5000, -133.0000, -140.0000, -119.5000, -136.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[     0.0358,      0.0160,      0.0185,  ...,      0.0055,     -0.0010,     -0.0219],
        [    -0.0034,      0.0172,      0.0194,  ...,      0.0269,      0.0056,      0.0257],
        [     0.0285,      0.0042,     -0.0008,  ...,     -0.0008,      0.0346,      0.0025],
        ...,
        [    -0.0198,     -0.0259,     -0.0131,  ...,      0.0121,     -0.0236,      0.0096],
        [    -0.0076,      0.0061,     -0.0193,  ...,     -0.0166,     -0.0257,     -0.0223],
        [     0.0214,      0.0000,     -0.0043,  ...,      0.0121,      0.0121,      0.0059]], device='cuda:0', requires_grad=True)
K: tensor([-2.1250,  0.2930, -2.5156,  1.5078, -1.5547, -2.5156, -1.1250,  2.2812, -0.4570, -0.5195,  0.8086,  0.9531, -1.3516, -3.0156,  1.8594,  1.4922,  2.5156, -2.1562, -2.2031,  1.5078,  1.5859, -1.7812, -2.5156,  2.9844, -1.5000,  2.7031, -1.1250, -1.7891,  0.9336, -1.6016,  0.4004, -2.1406,
        -1.7500, -2.1875,  2.0156, -2.4688, -2.1250, -0.3359,  2.4531,  1.8047, -2.3906, -1.0234,  0.5742, -2.2188,  1.8203,  2.7500, -0.2334, -1.7344, -2.0625,  2.0312,  2.5312,  1.0234,  0.5391, -2.2031, -1.1797, -1.9531,  2.0469,  1.8359, -1.9062, -2.1406, -1.1797,  2.7656, -0.3379, -2.6875],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0264,  0.0124, -0.0052,  ...,  0.0165, -0.0200, -0.0179],
        [-0.0096, -0.0084,  0.0068,  ...,  0.0078, -0.0156, -0.0015],
        [ 0.0020,  0.0101, -0.0018,  ..., -0.0012,  0.0151,  0.0023],
        ...,
        [-0.0226,  0.0057, -0.0084,  ..., -0.0117,  0.0241,  0.0088],
        [-0.0302,  0.0272, -0.0044,  ...,  0.0043,  0.0009, -0.0245],
        [ 0.0022, -0.0101, -0.0359,  ...,  0.0020, -0.0045,  0.0140]], device='cuda:0', requires_grad=True)
Q: tensor([ 2.8125, -1.5859,  2.0312, -0.4824,  0.5508,  2.9531,  1.3906, -3.4062, -0.7227, -0.4336,  0.1021,  0.2412,  1.7812,  1.8984, -2.3594, -1.9766, -3.0312,  2.6094,  1.5625, -3.1406, -1.8125,  3.0469,  3.3438, -2.8281,  2.4688, -3.2500,  0.3281,  1.0781,  0.4043,  0.7930,  0.4199,  1.8203,
         0.0972,  2.5938, -1.8594,  2.5156,  2.6406, -1.0156, -2.6719, -2.6719,  3.4062, -1.2891, -1.7422,  2.7344, -1.8203, -2.0312, -1.9062,  0.9414,  1.0703, -2.1875, -2.2969,  0.5234,  1.7266,  3.1250,  0.9414,  2.9531, -3.2656, -2.2656,  2.1719,  2.1250,  0.8633, -3.5625,  2.4688,  2.0000],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000, -17.5000, -19.2500, -17.8750, -17.8750, -18.5000, -18.0000, -20.3750, -19.3750, -20.2500, -20.3750, -20.7500, -22.3750, -20.2500, -22.2500],
        [  0.0000, -20.0000, -22.1250, -20.8750, -20.8750, -21.6250, -21.0000, -23.7500, -22.5000, -23.6250, -23.7500, -24.1250, -26.0000, -23.6250, -26.0000],
        [  0.0000, -18.0000, -19.8750, -18.6250, -18.8750, -19.5000, -19.0000, -21.3750, -20.3750, -21.0000, -21.3750, -21.6250, -23.2500, -21.2500, -23.1250],
        [  0.0000, -18.1250, -20.0000, -19.1250, -19.3750, -20.1250, -19.5000, -21.8750, -20.8750, -21.7500, -22.0000, -22.1250, -23.8750, -21.8750, -23.8750],
        [  0.0000, -18.3750, -20.1250, -19.0000, -19.2500, -20.0000, -19.5000, -21.8750, -20.7500, -21.6250, -21.8750, -22.1250, -23.8750, -21.7500, -23.7500],
        [  0.0000, -17.6250, -19.2500, -18.0000, -18.3750, -19.0000, -18.6250, -20.8750, -19.7500, -20.5000, -20.7500, -21.1250, -22.6250, -20.6250, -22.5000],
        [  0.0000, -20.7500, -22.8750, -21.8750, -22.2500, -23.1250, -22.5000, -25.3750, -24.0000, -25.0000, -25.2500, -25.5000, -27.6250, -25.0000, -27.3750],
        [  0.0000, -18.5000, -20.3750, -19.3750, -19.6250, -20.3750, -19.7500, -22.2500, -21.2500, -22.0000, -22.2500, -22.5000, -24.2500, -22.1250, -24.1250],
        [  0.0000, -21.8750, -24.3750, -23.5000, -23.8750, -24.7500, -24.0000, -27.1250, -25.7500, -26.8750, -27.0000, -27.3750, -29.5000, -26.8750, -29.5000],
        [  0.0000, -18.7500, -20.6250, -19.6250, -19.7500, -20.6250, -20.0000, -22.5000, -21.3750, -22.2500, -22.5000, -22.7500, -24.5000, -22.3750, -24.5000],
        [  0.0000, -20.2500, -22.3750, -21.3750, -21.5000, -22.3750, -21.7500, -24.6250, -23.3750, -24.2500, -24.5000, -24.8750, -26.7500, -24.3750, -26.7500],
        [  0.0000, -20.3750, -22.6250, -21.5000, -21.8750, -22.7500, -22.0000, -25.0000, -23.6250, -24.5000, -24.7500, -25.1250, -27.1250, -24.6250, -27.0000],
        [  0.0000, -18.8750, -20.8750, -20.0000, -20.1250, -21.0000, -20.3750, -22.8750, -21.8750, -22.6250, -23.0000, -23.2500, -25.0000, -22.8750, -24.8750],
        [  0.0000, -21.6250, -23.7500, -22.7500, -22.8750, -23.8750, -23.2500, -26.2500, -24.8750, -25.8750, -26.1250, -26.5000, -28.5000, -26.0000, -28.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.4785,     0.5234,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.8516,     0.1162,     0.0312,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0618,     0.3125,     0.1348,     0.0221,     0.4688,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0104,     0.5938,     0.0791,     0.0183,     0.2256,     0.0732,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.2910,     0.0278,     0.0089,     0.0598,     0.0447,     0.5664,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0003,     0.0806,     0.0125,     0.0029,     0.0403,     0.0361,     0.7109,     0.1157,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0540,     0.0062,     0.0015,     0.0444,     0.0276,     0.3730,     0.0562,     0.4375,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0674,     0.0115,     0.0056,     0.0386,     0.0156,     0.3652,     0.0962,     0.3691,     0.0305,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0010,     0.0630,     0.0099,     0.0022,     0.0247,     0.0062,     0.1660,     0.0830,     0.5469,     0.0244,     0.0728,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0791,     0.0137,     0.0137,     0.0466,     0.0320,     0.3145,     0.0840,     0.2871,     0.0386,     0.0737,     0.0188,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.0248,     0.0028,     0.0008,     0.0177,     0.0137,     0.3398,     0.0483,     0.4844,     0.0109,     0.0461,     0.0028,     0.0077,     0.0000,     0.0000],
        [    0.0000,     0.0238,     0.0022,     0.0007,     0.0233,     0.0132,     0.2109,     0.0327,     0.3184,     0.0122,     0.0586,     0.0044,     0.0084,     0.2910,     0.0000],
        [    0.0000,     0.0413,     0.0066,     0.0057,     0.0233,     0.0140,     0.1855,     0.0388,     0.2305,     0.0108,     0.0302,     0.0068,     0.0249,     0.2168,     0.1650]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0159, -0.0089,  0.0729,  ...,  0.0328, -0.0193, -0.0149],
        [-0.0017,  0.0774,  0.0194,  ...,  0.0016,  0.0015,  0.1074],
        [-0.0111,  0.0095, -0.0192,  ..., -0.0234,  0.0376, -0.0037],
        ...,
        [ 0.0259,  0.0279,  0.0209,  ..., -0.0252,  0.0110, -0.0145],
        [ 0.0344,  0.0488, -0.0616,  ...,  0.0493, -0.0111,  0.1241],
        [ 0.0391,  0.0451,  0.0163,  ..., -0.0310, -0.0163, -0.0056]], device='cuda:0', requires_grad=True)
K: tensor([-4.1562, -0.1709, -6.7188,  0.8242, -0.0398, -1.9531, -5.4688,  7.2188,  5.4062, -1.1953,  4.7500, -5.4375, -4.3438, -0.7109,  3.0000,  4.6250,  3.4062, -4.5625, -4.2812, -5.0938, -5.1562,  1.1250,  0.2695, -1.3438, -4.0938, -3.4219, -1.9219, -4.9375,  3.8125,  0.7148,  3.4062, -2.8750,
        -1.6094, -6.8125, -0.4746,  7.4375,  4.7500,  1.0625,  2.2031, -2.4844,  0.6914, -4.5312, -1.2422, -5.3125, -0.1660, -2.5781,  1.2266, -5.3125,  2.8438,  0.1680,  0.1797, -6.8125, -7.6250, -6.0312,  1.6328, -0.6641, -0.7031,  1.9375, -2.6875, -2.1875,  1.3672, -3.7031, -0.6680, -6.9375],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[    -0.0244,     -0.0232,     -0.0191,  ...,      0.0070,      0.0206,     -0.0201],
        [    -0.0008,     -0.0000,     -0.0643,  ...,     -0.0620,     -0.0004,     -0.0119],
        [    -0.0184,      0.0120,      0.0085,  ...,     -0.0125,     -0.0318,     -0.0292],
        ...,
        [     0.0333,     -0.0150,      0.0306,  ...,     -0.0142,     -0.0321,     -0.0085],
        [     0.0315,      0.0033,      0.0069,  ...,     -0.0167,     -0.0145,     -0.0347],
        [     0.0264,      0.0013,     -0.0451,  ...,      0.0378,      0.0409,     -0.0228]], device='cuda:0', requires_grad=True)
Q: tensor([-1.3203,  0.0147, -0.8516,  1.0469,  1.3516, -0.9727, -1.4141,  0.2393,  2.3281,  1.1641,  2.2500, -0.8359, -1.1484, -0.9688,  1.6094, -0.5898,  0.9297, -0.4609, -0.4316,  1.6172, -0.6484, -0.0315, -1.2969, -2.4531,  0.9414, -0.1167, -0.5195, -1.3594, -2.5781,  1.5234, -0.1914,  0.7227,
         1.1484, -1.9922, -0.5586,  2.5938,  0.3164, -1.7266,  0.6875,  0.3945,  0.2402,  2.4062,  0.8984, -0.6602, -2.3125, -0.1621,  1.4531,  0.0498, -0.3789, -1.1797,  0.1895, -1.4062, -0.6992, -0.1807, -0.6484, -0.7500,  0.3398, -0.0422, -1.3047, -0.2080,  1.1953,  0.9336, -0.4980, -2.2500],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, 17.8750, 16.3750, 15.5625, 17.8750, 18.1250, 20.3750, 18.7500, 21.0000, 17.8750, 19.2500, 16.5000, 18.5000, 21.1250, 21.0000],
        [ 0.0000, 24.7500, 24.7500, 25.5000, 25.7500, 26.2500, 27.2500, 26.5000, 27.5000, 26.0000, 27.3750, 25.7500, 28.2500, 28.1250, 29.5000],
        [ 0.0000,  8.4375,  6.4688,  5.1562,  7.1562,  6.8438,  9.1875,  7.5312,  9.0625,  6.4375,  7.1875,  5.0312,  6.5000,  8.5000,  8.4375],
        [ 0.0000,  1.6172,  0.7812, -1.0312,  2.0312,  1.2969,  3.3438,  2.0000,  3.6562,  0.5625,  2.0000, -0.5195,  0.4238,  3.3750,  2.6719],
        [ 0.0000,  4.0312,  2.0312,  0.5586,  3.0781,  1.9453,  4.8750,  3.4844,  4.9062,  2.3125,  3.1562,  1.8125,  1.9922,  4.5625,  4.0938],
        [ 0.0000,  8.5625,  6.1875,  5.0625,  6.9688,  6.6562,  9.1875,  7.0312,  9.1875,  5.4688,  6.4062,  3.9844,  5.1562,  8.5625,  8.3750],
        [ 0.0000,  5.6250,  3.7656,  2.2969,  4.9375,  4.8125,  7.8125,  6.0000,  7.9375,  4.6250,  5.6250,  2.9219,  4.5000,  7.6250,  7.6250],
        [ 0.0000,  9.1875,  7.0000,  5.5938,  9.0000,  8.5000, 11.1250,  9.1875, 11.2500,  8.1875,  9.5000,  7.0312,  7.8750, 11.0625, 11.1250],
        [ 0.0000,  9.1875,  7.4375,  6.7188,  8.6250,  7.7500, 10.8750,  9.5625, 10.8750,  8.3750,  9.2500,  8.3750,  8.9375, 10.9375, 10.8750],
        [ 0.0000,  4.0938,  2.2500,  0.7617,  3.1562,  1.7812,  5.0625,  4.3750,  6.2500,  3.1406,  4.2500,  2.7656,  2.6094,  6.0938,  5.0000],
        [ 0.0000, 11.0625,  9.3125,  9.3125, 10.5625, 10.1875, 12.4375, 11.1250, 12.3750, 10.3750, 11.0000,  9.6250, 11.0000, 12.2500, 12.5000],
        [ 0.0000,  4.7500,  2.5781,  1.2812,  4.4062,  4.1562,  7.3750,  5.4062,  7.7188,  3.9375,  5.3750,  2.5625,  3.5781,  7.5938,  7.4375],
        [ 0.0000,  8.1250,  5.7188,  4.5312,  8.0625,  7.5312, 10.3125,  8.4375, 10.6875,  7.4375,  9.0000,  6.4062,  7.0625, 10.6250, 10.6875],
        [ 0.0000, 12.7500, 10.8750, 10.7500, 12.1875, 11.6250, 14.2500, 12.6875, 14.4375, 11.3750, 12.4375, 10.9375, 12.2500, 14.3750, 14.1250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3884],
        [0.2559],
        [0.2357],
        [0.2258],
        [0.2080],
        [0.1463],
        [0.0903],
        [0.1425],
        [0.1485],
        [0.1302],
        [0.1196],
        [0.0821],
        [0.0921],
        [0.1143]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(!:0.1797 a:0.1113iscovered:0.2256 and:0.0723atoes:0.1377 are:0.1992 a:0.1030iced:0.5547)
iced
------
		( a:0.1113iscovered:0.2256 and:0.0723atoes:0.1377 are:0.1992 a:0.1030iced:0.5547 with:0.1338)
 with a little bit of a little bit of a little bit of a little
@ 5050 train 4.1352 , allloss: 4.1352, dt: 1730.18ms, fracRes: 0.7093, norm(attn): 0.1699, norm(output): 0.9411, norm(x): 0.7794, norm(y): 1.0023, norm:0.5743, tok/sec: 75756.31, flops:79.52, batch-reuse:1
@ 5051 train 4.3268 , allloss: 4.3269, dt: 1307.71ms, fracRes: 0.7095, norm(attn): 0.1660, norm(output): 0.9419, norm(x): 0.7802, norm(y): 1.0024, norm:0.6167, tok/sec: 100230.51, flops:105.21, batch-reuse:1
@ 5052 train 4.2371 , allloss: 4.2391, dt: 1311.77ms, fracRes: 0.7094, norm(attn): 0.1699, norm(output): 0.9412, norm(x): 0.7799, norm(y): 1.0024, norm:0.6198, tok/sec: 99919.96, flops:104.88, batch-reuse:1
@ 5053 train 4.2457 , allloss: 4.2458, dt: 1303.92ms, fracRes: 0.7095, norm(attn): 0.1709, norm(output): 0.9413, norm(x): 0.7799, norm(y): 1.0023, norm:0.5837, tok/sec: 100521.43, flops:105.51, batch-reuse:1
@ 5054 train 4.2500 , allloss: 4.2501, dt: 1330.29ms, fracRes: 0.7095, norm(attn): 0.1709, norm(output): 0.9417, norm(x): 0.7802, norm(y): 1.0023, norm:0.6458, tok/sec: 98529.13, flops:103.42, batch-reuse:1
@ 5055 train 4.1361 , allloss: 4.1361, dt: 1313.11ms, fracRes: 0.7097, norm(attn): 0.1699, norm(output): 0.9413, norm(x): 0.7796, norm(y): 1.0023, norm:0.5904, tok/sec: 99818.23, flops:104.77, batch-reuse:1
@ 5056 train 4.1706 , allloss: 4.1707, dt: 1300.32ms, fracRes: 0.7096, norm(attn): 0.1699, norm(output): 0.9410, norm(x): 0.7791, norm(y): 1.0023, norm:0.5694, tok/sec: 100799.81, flops:105.80, batch-reuse:1
@ 5057 train 4.2218 , allloss: 4.2218, dt: 1293.63ms, fracRes: 0.7093, norm(attn): 0.1709, norm(output): 0.9410, norm(x): 0.7793, norm(y): 1.0023, norm:0.5794, tok/sec: 101321.40, flops:106.35, batch-reuse:1
@ 5058 train 4.2737 , allloss: 4.2738, dt: 1312.45ms, fracRes: 0.7094, norm(attn): 0.1699, norm(output): 0.9411, norm(x): 0.7792, norm(y): 1.0025, norm:0.5523, tok/sec: 99868.15, flops:104.82, batch-reuse:1
@ 5059 train 4.2217 , allloss: 4.2220, dt: 1286.39ms, fracRes: 0.7094, norm(attn): 0.1689, norm(output): 0.9415, norm(x): 0.7796, norm(y): 1.0024, norm:0.6119, tok/sec: 101891.09, flops:106.95, batch-reuse:1
@ 5060 train 4.1805 , allloss: 4.1806, dt: 1298.08ms, fracRes: 0.7093, norm(attn): 0.1680, norm(output): 0.9416, norm(x): 0.7801, norm(y): 1.0023, norm:0.6634, tok/sec: 100973.79, flops:105.99, batch-reuse:1
@ 5061 train 4.0890 , allloss: 4.0892, dt: 1312.64ms, fracRes: 0.7096, norm(attn): 0.1680, norm(output): 0.9414, norm(x): 0.7794, norm(y): 1.0025, norm:0.5897, tok/sec: 99853.41, flops:104.81, batch-reuse:1
@ 5062 train 4.1892 , allloss: 4.1893, dt: 1298.90ms, fracRes: 0.7096, norm(attn): 0.1689, norm(output): 0.9410, norm(x): 0.7791, norm(y): 1.0025, norm:0.6641, tok/sec: 100909.75, flops:105.92, batch-reuse:1
@ 5063 train 4.2130 , allloss: 4.2131, dt: 1324.96ms, fracRes: 0.7097, norm(attn): 0.1689, norm(output): 0.9412, norm(x): 0.7795, norm(y): 1.0024, norm:0.5998, tok/sec: 98925.52, flops:103.84, batch-reuse:1
@ 5064 train 4.1852 , allloss: 4.1853, dt: 1297.67ms, fracRes: 0.7095, norm(attn): 0.1709, norm(output): 0.9414, norm(x): 0.7801, norm(y): 1.0023, norm:0.6490, tok/sec: 101005.29, flops:106.02, batch-reuse:1
@ 5065 train 4.2047 , allloss: 4.2048, dt: 1338.16ms, fracRes: 0.7094, norm(attn): 0.1709, norm(output): 0.9415, norm(x): 0.7805, norm(y): 1.0021, norm:0.5530, tok/sec: 97949.07, flops:102.81, batch-reuse:1
@ 5066 train 4.1747 , allloss: 4.1749, dt: 1312.95ms, fracRes: 0.7093, norm(attn): 0.1699, norm(output): 0.9414, norm(x): 0.7803, norm(y): 1.0021, norm:0.6436, tok/sec: 99830.43, flops:104.79, batch-reuse:1
@ 5067 train 4.2859 , allloss: 4.2874, dt: 1331.03ms, fracRes: 0.7095, norm(attn): 0.1689, norm(output): 0.9412, norm(x): 0.7794, norm(y): 1.0022, norm:0.7099, tok/sec: 98474.37, flops:103.36, batch-reuse:1
@ 5068 train 4.1432 , allloss: 4.1434, dt: 1307.54ms, fracRes: 0.7097, norm(attn): 0.1699, norm(output): 0.9411, norm(x): 0.7785, norm(y): 1.0023, norm:0.6724, tok/sec: 100243.30, flops:105.22, batch-reuse:1
@ 5069 train 4.1544 , allloss: 4.1548, dt: 1295.86ms, fracRes: 0.7097, norm(attn): 0.1689, norm(output): 0.9413, norm(x): 0.7792, norm(y): 1.0024, norm:0.6029, tok/sec: 101146.43, flops:106.17, batch-reuse:1
@ 5070 train 4.1808 , allloss: 4.1809, dt: 1280.33ms, fracRes: 0.7098, norm(attn): 0.1699, norm(output): 0.9411, norm(x): 0.7796, norm(y): 1.0025, norm:0.6295, tok/sec: 102373.40, flops:107.45, batch-reuse:1
@ 5071 train 4.2260 , allloss: 4.2261, dt: 1301.65ms, fracRes: 0.7096, norm(attn): 0.1699, norm(output): 0.9417, norm(x): 0.7810, norm(y): 1.0024, norm:0.6082, tok/sec: 100696.97, flops:105.69, batch-reuse:1
@ 5072 train 4.1660 , allloss: 4.1661, dt: 1316.28ms, fracRes: 0.7098, norm(attn): 0.1709, norm(output): 0.9413, norm(x): 0.7801, norm(y): 1.0023, norm:0.5973, tok/sec: 99577.86, flops:104.52, batch-reuse:1
@ 5073 train 4.1762 , allloss: 4.1763, dt: 1286.24ms, fracRes: 0.7097, norm(attn): 0.1699, norm(output): 0.9413, norm(x): 0.7799, norm(y): 1.0024, norm:0.6308, tok/sec: 101903.08, flops:106.96, batch-reuse:1
@ 5074 train 4.2210 , allloss: 4.2210, dt: 1320.55ms, fracRes: 0.7097, norm(attn): 0.1680, norm(output): 0.9416, norm(x): 0.7800, norm(y): 1.0024, norm:0.6039, tok/sec: 99255.60, flops:104.18, batch-reuse:1
@ 5075 train 4.0517 , allloss: 4.0517, dt: 1329.01ms, fracRes: 0.7097, norm(attn): 0.1689, norm(output): 0.9412, norm(x): 0.7796, norm(y): 1.0026, norm:0.7321, tok/sec: 98623.61, flops:103.52, batch-reuse:1
@ 5076 train 4.2074 , allloss: 4.2075, dt: 1290.87ms, fracRes: 0.7097, norm(attn): 0.1689, norm(output): 0.9413, norm(x): 0.7793, norm(y): 1.0025, norm:0.6529, tok/sec: 101537.80, flops:106.58, batch-reuse:1
@ 5077 train 4.1789 , allloss: 4.1790, dt: 1307.00ms, fracRes: 0.7097, norm(attn): 0.1699, norm(output): 0.9412, norm(x): 0.7792, norm(y): 1.0025, norm:0.6549, tok/sec: 100284.88, flops:105.26, batch-reuse:1
@ 5078 train 4.2055 , allloss: 4.2062, dt: 1322.17ms, fracRes: 0.7095, norm(attn): 0.1689, norm(output): 0.9415, norm(x): 0.7795, norm(y): 1.0022, norm:0.6515, tok/sec: 99134.02, flops:104.05, batch-reuse:1
@ 5079 train 4.1551 , allloss: 4.1551, dt: 1321.41ms, fracRes: 0.7094, norm(attn): 0.1709, norm(output): 0.9413, norm(x): 0.7797, norm(y): 1.0022, norm:0.6410, tok/sec: 99191.15, flops:104.11, batch-reuse:1
@ 5080 train 4.1341 , allloss: 4.1344, dt: 1314.92ms, fracRes: 0.7096, norm(attn): 0.1689, norm(output): 0.9413, norm(x): 0.7799, norm(y): 1.0022, norm:0.6089, tok/sec: 99680.39, flops:104.63, batch-reuse:1
@ 5081 train 4.2185 , allloss: 4.2186, dt: 1304.57ms, fracRes: 0.7095, norm(attn): 0.1689, norm(output): 0.9415, norm(x): 0.7804, norm(y): 1.0021, norm:0.5666, tok/sec: 100471.15, flops:105.46, batch-reuse:1
@ 5082 train 4.0626 , allloss: 4.0626, dt: 1309.37ms, fracRes: 0.7095, norm(attn): 0.1689, norm(output): 0.9415, norm(x): 0.7802, norm(y): 1.0023, norm:0.5807, tok/sec: 100103.25, flops:105.07, batch-reuse:1
@ 5083 train 4.2175 , allloss: 4.2176, dt: 1301.62ms, fracRes: 0.7098, norm(attn): 0.1709, norm(output): 0.9414, norm(x): 0.7793, norm(y): 1.0021, norm:0.5699, tok/sec: 100698.81, flops:105.70, batch-reuse:1
@ 5084 train 4.1412 , allloss: 4.1413, dt: 1283.39ms, fracRes: 0.7096, norm(attn): 0.1699, norm(output): 0.9415, norm(x): 0.7794, norm(y): 1.0020, norm:0.6645, tok/sec: 102129.40, flops:107.20, batch-reuse:1
@ 5085 train 4.1799 , allloss: 4.1799, dt: 1300.90ms, fracRes: 0.7095, norm(attn): 0.1689, norm(output): 0.9413, norm(x): 0.7794, norm(y): 1.0021, norm:0.5530, tok/sec: 100755.05, flops:105.76, batch-reuse:1
@ 5086 train 4.3028 , allloss: 4.3028, dt: 1310.41ms, fracRes: 0.7094, norm(attn): 0.1689, norm(output): 0.9415, norm(x): 0.7796, norm(y): 1.0022, norm:0.6117, tok/sec: 100024.00, flops:104.99, batch-reuse:1
@ 5087 train 4.2322 , allloss: 4.2322, dt: 1316.13ms, fracRes: 0.7093, norm(attn): 0.1699, norm(output): 0.9413, norm(x): 0.7795, norm(y): 1.0021, norm:0.6383, tok/sec: 99588.63, flops:104.53, batch-reuse:1
@ 5088 train 4.1688 , allloss: 4.1689, dt: 1304.98ms, fracRes: 0.7094, norm(attn): 0.1699, norm(output): 0.9413, norm(x): 0.7797, norm(y): 1.0022, norm:0.6113, tok/sec: 100440.02, flops:105.43, batch-reuse:1
@ 5089 train 4.0859 , allloss: 4.0860, dt: 1310.78ms, fracRes: 0.7094, norm(attn): 0.1699, norm(output): 0.9410, norm(x): 0.7795, norm(y): 1.0022, norm:0.5184, tok/sec: 99995.55, flops:104.96, batch-reuse:1
@ 5090 train 4.2261 , allloss: 4.2261, dt: 1314.20ms, fracRes: 0.7095, norm(attn): 0.1680, norm(output): 0.9416, norm(x): 0.7802, norm(y): 1.0024, norm:0.5514, tok/sec: 99735.17, flops:104.69, batch-reuse:1
@ 5091 train 4.1704 , allloss: 4.1706, dt: 1343.94ms, fracRes: 0.7095, norm(attn): 0.1670, norm(output): 0.9415, norm(x): 0.7802, norm(y): 1.0024, norm:0.6691, tok/sec: 97528.28, flops:102.37, batch-reuse:1
@ 5092 train 4.2093 , allloss: 4.2093, dt: 1328.59ms, fracRes: 0.7095, norm(attn): 0.1680, norm(output): 0.9417, norm(x): 0.7803, norm(y): 1.0023, norm:0.5282, tok/sec: 98654.92, flops:103.55, batch-reuse:1
@ 5093 train 4.1402 , allloss: 4.1403, dt: 1324.20ms, fracRes: 0.7096, norm(attn): 0.1699, norm(output): 0.9415, norm(x): 0.7800, norm(y): 1.0024, norm:0.6136, tok/sec: 98981.86, flops:103.89, batch-reuse:1
@ 5094 train 4.2127 , allloss: 4.2129, dt: 1292.24ms, fracRes: 0.7096, norm(attn): 0.1670, norm(output): 0.9414, norm(x): 0.7801, norm(y): 1.0024, norm:0.5207, tok/sec: 101430.18, flops:106.46, batch-reuse:1
@ 5095 train 4.2309 , allloss: 4.2311, dt: 1321.36ms, fracRes: 0.7096, norm(attn): 0.1670, norm(output): 0.9416, norm(x): 0.7801, norm(y): 1.0024, norm:0.6241, tok/sec: 99194.85, flops:104.12, batch-reuse:1
@ 5096 train 4.1182 , allloss: 4.1183, dt: 1320.99ms, fracRes: 0.7096, norm(attn): 0.1699, norm(output): 0.9413, norm(x): 0.7795, norm(y): 1.0024, norm:0.5825, tok/sec: 99222.62, flops:104.15, batch-reuse:1
@ 5097 train 4.1048 , allloss: 4.1048, dt: 1323.15ms, fracRes: 0.7096, norm(attn): 0.1689, norm(output): 0.9412, norm(x): 0.7793, norm(y): 1.0024, norm:0.5652, tok/sec: 99060.94, flops:103.98, batch-reuse:1
@ 5098 train 4.1984 , allloss: 4.1985, dt: 1317.37ms, fracRes: 0.7096, norm(attn): 0.1689, norm(output): 0.9415, norm(x): 0.7797, norm(y): 1.0023, norm:0.6541, tok/sec: 99495.34, flops:104.43, batch-reuse:1
@ 5099 train 4.0986 , allloss: 4.0987, dt: 1316.31ms, fracRes: 0.7097, norm(attn): 0.1689, norm(output): 0.9416, norm(x): 0.7802, norm(y): 1.0023, norm:0.6131, tok/sec: 99575.10, flops:104.52, batch-reuse:1
@ 5100 train 4.1547 , allloss: 4.1548, dt: 1330.86ms, fracRes: 0.7098, norm(attn): 0.1709, norm(output): 0.9411, norm(x): 0.7796, norm(y): 1.0024, norm:0.6715, tok/sec: 98486.74, flops:103.37, batch-reuse:1
@ 5101 train 4.1192 , allloss: 4.1193, dt: 1293.09ms, fracRes: 0.7096, norm(attn): 0.1709, norm(output): 0.9415, norm(x): 0.7798, norm(y): 1.0023, norm:0.6645, tok/sec: 101363.24, flops:106.39, batch-reuse:1
@ 5102 train 4.1628 , allloss: 4.1629, dt: 1283.66ms, fracRes: 0.7098, norm(attn): 0.1689, norm(output): 0.9414, norm(x): 0.7798, norm(y): 1.0022, norm:0.5612, tok/sec: 102108.00, flops:107.18, batch-reuse:1
@ 5103 train 4.2265 , allloss: 4.2266, dt: 1287.36ms, fracRes: 0.7099, norm(attn): 0.1689, norm(output): 0.9416, norm(x): 0.7791, norm(y): 1.0022, norm:0.6013, tok/sec: 101814.55, flops:106.87, batch-reuse:1
@ 5104 train 4.2102 , allloss: 4.2103, dt: 1347.08ms, fracRes: 0.7096, norm(attn): 0.1689, norm(output): 0.9416, norm(x): 0.7801, norm(y): 1.0021, norm:0.7224, tok/sec: 97301.05, flops:102.13, batch-reuse:1
@ 5105 train 4.1136 , allloss: 4.1137, dt: 1315.22ms, fracRes: 0.7095, norm(attn): 0.1689, norm(output): 0.9413, norm(x): 0.7802, norm(y): 1.0022, norm:0.5746, tok/sec: 99657.93, flops:104.60, batch-reuse:1
@ 5106 train 4.1696 , allloss: 4.1697, dt: 1303.81ms, fracRes: 0.7095, norm(attn): 0.1670, norm(output): 0.9415, norm(x): 0.7798, norm(y): 1.0022, norm:0.6036, tok/sec: 100529.92, flops:105.52, batch-reuse:1
@ 5107 train 4.1590 , allloss: 4.1591, dt: 1299.75ms, fracRes: 0.7096, norm(attn): 0.1689, norm(output): 0.9415, norm(x): 0.7797, norm(y): 1.0023, norm:0.6074, tok/sec: 100844.30, flops:105.85, batch-reuse:1
@ 5108 train 4.0980 , allloss: 4.0982, dt: 1310.30ms, fracRes: 0.7094, norm(attn): 0.1699, norm(output): 0.9415, norm(x): 0.7801, norm(y): 1.0023, norm:0.5704, tok/sec: 100032.21, flops:105.00, batch-reuse:1
@ 5109 train 4.0905 , allloss: 4.0906, dt: 1321.68ms, fracRes: 0.7094, norm(attn): 0.1699, norm(output): 0.9413, norm(x): 0.7802, norm(y): 1.0022, norm:0.5703, tok/sec: 99170.80, flops:104.09, batch-reuse:1
@ 5110 train 4.1102 , allloss: 4.1103, dt: 1275.51ms, fracRes: 0.7097, norm(attn): 0.1699, norm(output): 0.9414, norm(x): 0.7806, norm(y): 1.0023, norm:0.6152, tok/sec: 102760.25, flops:107.86, batch-reuse:1
@ 5111 train 4.0797 , allloss: 4.0799, dt: 1292.46ms, fracRes: 0.7097, norm(attn): 0.1689, norm(output): 0.9419, norm(x): 0.7811, norm(y): 1.0021, norm:0.6149, tok/sec: 101412.83, flops:106.45, batch-reuse:1
@ 5112 train 4.0748 , allloss: 4.0748, dt: 1307.08ms, fracRes: 0.7098, norm(attn): 0.1699, norm(output): 0.9415, norm(x): 0.7799, norm(y): 1.0023, norm:0.6980, tok/sec: 100278.81, flops:105.26, batch-reuse:1
@ 5113 train 4.0938 , allloss: 4.0955, dt: 1302.00ms, fracRes: 0.7099, norm(attn): 0.1670, norm(output): 0.9415, norm(x): 0.7795, norm(y): 1.0023, norm:0.5138, tok/sec: 100670.10, flops:105.67, batch-reuse:1
@ 5114 train 4.0447 , allloss: 4.0447, dt: 1304.53ms, fracRes: 0.7098, norm(attn): 0.1660, norm(output): 0.9412, norm(x): 0.7794, norm(y): 1.0024, norm:0.5610, tok/sec: 100474.31, flops:105.46, batch-reuse:1
@ 5115 train 4.1194 , allloss: 4.1195, dt: 1335.40ms, fracRes: 0.7094, norm(attn): 0.1660, norm(output): 0.9417, norm(x): 0.7805, norm(y): 1.0023, norm:0.6456, tok/sec: 98152.14, flops:103.02, batch-reuse:1
@ 5116 train 4.0756 , allloss: 4.0758, dt: 1296.76ms, fracRes: 0.7093, norm(attn): 0.1689, norm(output): 0.9415, norm(x): 0.7805, norm(y): 1.0022, norm:0.6371, tok/sec: 101076.21, flops:106.09, batch-reuse:1
@ 5117 train 4.1597 , allloss: 4.1615, dt: 1315.38ms, fracRes: 0.7095, norm(attn): 0.1660, norm(output): 0.9416, norm(x): 0.7809, norm(y): 1.0021, norm:0.5511, tok/sec: 99645.79, flops:104.59, batch-reuse:1
@ 5118 train 4.0773 , allloss: 4.0773, dt: 1320.41ms, fracRes: 0.7097, norm(attn): 0.1670, norm(output): 0.9415, norm(x): 0.7810, norm(y): 1.0022, norm:0.6447, tok/sec: 99266.42, flops:104.19, batch-reuse:1
@ 5119 train 4.1013 , allloss: 4.1017, dt: 1315.90ms, fracRes: 0.7095, norm(attn): 0.1680, norm(output): 0.9417, norm(x): 0.7814, norm(y): 1.0024, norm:0.7461, tok/sec: 99606.45, flops:104.55, batch-reuse:1
@ 5120 train 4.1112 , allloss: 4.1113, dt: 1289.16ms, fracRes: 0.7096, norm(attn): 0.1680, norm(output): 0.9416, norm(x): 0.7808, norm(y): 1.0024, norm:0.7099, tok/sec: 101672.42, flops:106.72, batch-reuse:1
@ 5121 train 4.1016 , allloss: 4.1018, dt: 1313.01ms, fracRes: 0.7098, norm(attn): 0.1680, norm(output): 0.9412, norm(x): 0.7800, norm(y): 1.0025, norm:0.6176, tok/sec: 99825.29, flops:104.78, batch-reuse:1
@ 5122 train 4.0605 , allloss: 4.0606, dt: 1290.17ms, fracRes: 0.7098, norm(attn): 0.1680, norm(output): 0.9413, norm(x): 0.7799, norm(y): 1.0023, norm:0.5593, tok/sec: 101592.74, flops:106.63, batch-reuse:1
@ 5123 train 4.2994 , allloss: 4.2994, dt: 1284.93ms, fracRes: 0.7099, norm(attn): 0.1670, norm(output): 0.9416, norm(x): 0.7802, norm(y): 1.0023, norm:0.5273, tok/sec: 102007.36, flops:107.07, batch-reuse:1
@ 5124 train 4.1220 , allloss: 4.3197, dt: 1303.92ms, fracRes: 0.7096, norm(attn): 0.1680, norm(output): 0.9414, norm(x): 0.7805, norm(y): 1.0024, norm:1.0934, tok/sec: 100521.59, flops:105.51, batch-reuse:1
@ 5125 train 4.0654 , allloss: 4.0655, dt: 1337.34ms, fracRes: 0.7095, norm(attn): 0.1660, norm(output): 0.9417, norm(x): 0.7807, norm(y): 1.0021, norm:0.5929, tok/sec: 98009.46, flops:102.87, batch-reuse:1
@ 5126 train 4.1548 , allloss: 4.1548, dt: 1307.06ms, fracRes: 0.7096, norm(attn): 0.1660, norm(output): 0.9417, norm(x): 0.7804, norm(y): 1.0020, norm:0.6266, tok/sec: 100280.13, flops:105.26, batch-reuse:1
@ 5127 train 4.0901 , allloss: 4.0901, dt: 1295.03ms, fracRes: 0.7098, norm(attn): 0.1670, norm(output): 0.9414, norm(x): 0.7802, norm(y): 1.0023, norm:0.5917, tok/sec: 101211.30, flops:106.23, batch-reuse:1
@ 5128 train 4.1451 , allloss: 4.1451, dt: 1305.63ms, fracRes: 0.7097, norm(attn): 0.1670, norm(output): 0.9414, norm(x): 0.7804, norm(y): 1.0025, norm:0.6116, tok/sec: 100389.91, flops:105.37, batch-reuse:1
@ 5129 train 4.1944 , allloss: 4.1945, dt: 1295.15ms, fracRes: 0.7097, norm(attn): 0.1670, norm(output): 0.9417, norm(x): 0.7807, norm(y): 1.0024, norm:0.7194, tok/sec: 101202.03, flops:106.22, batch-reuse:1
@ 5130 train 4.1068 , allloss: 4.1070, dt: 1319.92ms, fracRes: 0.7097, norm(attn): 0.1660, norm(output): 0.9416, norm(x): 0.7811, norm(y): 1.0023, norm:0.6264, tok/sec: 99302.62, flops:104.23, batch-reuse:1
@ 5131 train 4.0550 , allloss: 4.0550, dt: 1331.17ms, fracRes: 0.7100, norm(attn): 0.1670, norm(output): 0.9415, norm(x): 0.7803, norm(y): 1.0024, norm:0.6013, tok/sec: 98463.66, flops:103.35, batch-reuse:1
@ 5132 train 4.0741 , allloss: 4.0745, dt: 1316.25ms, fracRes: 0.7098, norm(attn): 0.1670, norm(output): 0.9415, norm(x): 0.7806, norm(y): 1.0022, norm:0.5383, tok/sec: 99579.59, flops:104.52, batch-reuse:1
@ 5133 train 4.0985 , allloss: 4.0994, dt: 1338.75ms, fracRes: 0.7098, norm(attn): 0.1670, norm(output): 0.9413, norm(x): 0.7803, norm(y): 1.0023, norm:0.5703, tok/sec: 97905.95, flops:102.77, batch-reuse:1
@ 5134 train 4.1495 , allloss: 4.1495, dt: 1294.50ms, fracRes: 0.7098, norm(attn): 0.1660, norm(output): 0.9415, norm(x): 0.7802, norm(y): 1.0023, norm:0.7727, tok/sec: 101253.04, flops:106.28, batch-reuse:1
@ 5135 train 4.1467 , allloss: 4.1471, dt: 1296.84ms, fracRes: 0.7098, norm(attn): 0.1660, norm(output): 0.9414, norm(x): 0.7798, norm(y): 1.0025, norm:0.7271, tok/sec: 101069.98, flops:106.09, batch-reuse:1
@ 5136 train 4.1355 , allloss: 4.1357, dt: 1322.11ms, fracRes: 0.7099, norm(attn): 0.1660, norm(output): 0.9415, norm(x): 0.7799, norm(y): 1.0022, norm:0.7235, tok/sec: 99138.61, flops:104.06, batch-reuse:1
@ 5137 train 4.0793 , allloss: 4.0793, dt: 1315.52ms, fracRes: 0.7098, norm(attn): 0.1670, norm(output): 0.9414, norm(x): 0.7800, norm(y): 1.0019, norm:0.6080, tok/sec: 99635.07, flops:104.58, batch-reuse:1
@ 5138 train 4.1576 , allloss: 4.1578, dt: 1313.90ms, fracRes: 0.7099, norm(attn): 0.1709, norm(output): 0.9415, norm(x): 0.7803, norm(y): 1.0019, norm:0.6570, tok/sec: 99757.92, flops:104.71, batch-reuse:1
@ 5139 train 4.1657 , allloss: 4.1657, dt: 1298.94ms, fracRes: 0.7097, norm(attn): 0.1699, norm(output): 0.9417, norm(x): 0.7811, norm(y): 1.0022, norm:0.7526, tok/sec: 100907.16, flops:105.92, batch-reuse:1
@ 5140 train 4.2542 , allloss: 4.2542, dt: 1300.42ms, fracRes: 0.7098, norm(attn): 0.1680, norm(output): 0.9417, norm(x): 0.7809, norm(y): 1.0025, norm:0.7331, tok/sec: 100791.72, flops:105.79, batch-reuse:1
@ 5141 train 4.0962 , allloss: 4.0963, dt: 1336.71ms, fracRes: 0.7099, norm(attn): 0.1670, norm(output): 0.9414, norm(x): 0.7809, norm(y): 1.0025, norm:0.5330, tok/sec: 98055.96, flops:102.92, batch-reuse:1
@ 5142 train 4.0851 , allloss: 4.0852, dt: 1307.50ms, fracRes: 0.7098, norm(attn): 0.1660, norm(output): 0.9415, norm(x): 0.7812, norm(y): 1.0022, norm:0.7078, tok/sec: 100246.48, flops:105.22, batch-reuse:1
@ 5143 train 4.1133 , allloss: 4.1133, dt: 1329.21ms, fracRes: 0.7100, norm(attn): 0.1660, norm(output): 0.9415, norm(x): 0.7801, norm(y): 1.0021, norm:0.5937, tok/sec: 98608.64, flops:103.50, batch-reuse:1
@ 5144 train 4.1827 , allloss: 4.1829, dt: 1331.56ms, fracRes: 0.7097, norm(attn): 0.1670, norm(output): 0.9414, norm(x): 0.7802, norm(y): 1.0020, norm:0.6156, tok/sec: 98435.28, flops:103.32, batch-reuse:1
@ 5145 train 4.1401 , allloss: 4.1405, dt: 1338.24ms, fracRes: 0.7098, norm(attn): 0.1689, norm(output): 0.9415, norm(x): 0.7810, norm(y): 1.0021, norm:0.7203, tok/sec: 97943.71, flops:102.80, batch-reuse:1
@ 5146 train 4.0925 , allloss: 4.0926, dt: 1335.36ms, fracRes: 0.7098, norm(attn): 0.1689, norm(output): 0.9417, norm(x): 0.7813, norm(y): 1.0020, norm:0.5586, tok/sec: 98154.75, flops:103.03, batch-reuse:1
@ 5147 train 4.0525 , allloss: 4.0527, dt: 1303.83ms, fracRes: 0.7098, norm(attn): 0.1680, norm(output): 0.9412, norm(x): 0.7802, norm(y): 1.0021, norm:0.6086, tok/sec: 100528.16, flops:105.52, batch-reuse:1
@ 5148 train 4.1543 , allloss: 4.1546, dt: 1294.89ms, fracRes: 0.7097, norm(attn): 0.1680, norm(output): 0.9413, norm(x): 0.7800, norm(y): 1.0021, norm:0.6397, tok/sec: 101222.73, flops:106.25, batch-reuse:1
@ 5149 train 4.0294 , allloss: 4.0295, dt: 1305.74ms, fracRes: 0.7096, norm(attn): 0.1689, norm(output): 0.9415, norm(x): 0.7802, norm(y): 1.0023, norm:0.5410, tok/sec: 100381.53, flops:105.36, batch-reuse:1
@ 5150 train 4.0987 , allloss: 4.0987, dt: 1332.78ms, fracRes: 0.7095, norm(attn): 0.1699, norm(output): 0.9415, norm(x): 0.7805, norm(y): 1.0023, norm:0.6850, tok/sec: 98344.79, flops:103.23, batch-reuse:1
@ 5151 train 4.1560 , allloss: 4.1561, dt: 1308.44ms, fracRes: 0.7096, norm(attn): 0.1670, norm(output): 0.9415, norm(x): 0.7806, norm(y): 1.0025, norm:0.7217, tok/sec: 100174.33, flops:105.15, batch-reuse:1
@ 5152 train 4.0777 , allloss: 4.0778, dt: 1310.94ms, fracRes: 0.7096, norm(attn): 0.1660, norm(output): 0.9417, norm(x): 0.7810, norm(y): 1.0023, norm:0.6008, tok/sec: 99983.51, flops:104.95, batch-reuse:1
@ 5153 train 4.0595 , allloss: 4.0595, dt: 1296.40ms, fracRes: 0.7096, norm(attn): 0.1670, norm(output): 0.9416, norm(x): 0.7805, norm(y): 1.0023, norm:0.5845, tok/sec: 101104.80, flops:106.12, batch-reuse:1
@ 5154 train 4.3268 , allloss: 4.3268, dt: 1311.83ms, fracRes: 0.7099, norm(attn): 0.1670, norm(output): 0.9414, norm(x): 0.7803, norm(y): 1.0023, norm:0.7934, tok/sec: 99915.20, flops:104.87, batch-reuse:1
@ 5155 train 4.0932 , allloss: 4.0932, dt: 1322.54ms, fracRes: 0.7100, norm(attn): 0.1660, norm(output): 0.9417, norm(x): 0.7810, norm(y): 1.0024, norm:0.7684, tok/sec: 99105.96, flops:104.02, batch-reuse:1
@ 5156 train 4.1189 , allloss: 4.1190, dt: 1291.36ms, fracRes: 0.7097, norm(attn): 0.1660, norm(output): 0.9414, norm(x): 0.7808, norm(y): 1.0022, norm:0.6817, tok/sec: 101499.48, flops:106.54, batch-reuse:1
@ 5157 train 3.9874 , allloss: 3.9875, dt: 1314.10ms, fracRes: 0.7094, norm(attn): 0.1699, norm(output): 0.9412, norm(x): 0.7807, norm(y): 1.0021, norm:0.7013, tok/sec: 99743.02, flops:104.69, batch-reuse:1
@ 5158 train 4.1121 , allloss: 4.1122, dt: 1316.43ms, fracRes: 0.7095, norm(attn): 0.1699, norm(output): 0.9414, norm(x): 0.7808, norm(y): 1.0022, norm:0.6048, tok/sec: 99566.57, flops:104.51, batch-reuse:1
@ 5159 train 4.0408 , allloss: 4.0408, dt: 1309.08ms, fracRes: 0.7098, norm(attn): 0.1689, norm(output): 0.9415, norm(x): 0.7810, norm(y): 1.0021, norm:0.7216, tok/sec: 100125.47, flops:105.09, batch-reuse:1
@ 5160 train 4.0215 , allloss: 4.0216, dt: 1325.52ms, fracRes: 0.7096, norm(attn): 0.1689, norm(output): 0.9413, norm(x): 0.7807, norm(y): 1.0019, norm:0.6002, tok/sec: 98883.45, flops:103.79, batch-reuse:1
@ 5161 train 4.0765 , allloss: 4.0766, dt: 1329.80ms, fracRes: 0.7097, norm(attn): 0.1689, norm(output): 0.9413, norm(x): 0.7809, norm(y): 1.0019, norm:0.6366, tok/sec: 98565.42, flops:103.46, batch-reuse:1
@ 5162 train 4.1064 , allloss: 4.1064, dt: 1311.84ms, fracRes: 0.7096, norm(attn): 0.1670, norm(output): 0.9418, norm(x): 0.7817, norm(y): 1.0020, norm:0.5670, tok/sec: 99914.86, flops:104.87, batch-reuse:1
@ 5163 train 3.9609 , allloss: 3.9610, dt: 1344.26ms, fracRes: 0.7097, norm(attn): 0.1680, norm(output): 0.9416, norm(x): 0.7810, norm(y): 1.0023, norm:0.6820, tok/sec: 97505.28, flops:102.34, batch-reuse:1
@ 5164 train 4.0986 , allloss: 4.0989, dt: 1302.92ms, fracRes: 0.7099, norm(attn): 0.1680, norm(output): 0.9414, norm(x): 0.7804, norm(y): 1.0024, norm:0.7132, tok/sec: 100598.50, flops:105.59, batch-reuse:1
@ 5165 train 4.0220 , allloss: 4.0220, dt: 1311.21ms, fracRes: 0.7099, norm(attn): 0.1670, norm(output): 0.9414, norm(x): 0.7803, norm(y): 1.0022, norm:0.6583, tok/sec: 99962.73, flops:104.92, batch-reuse:1
@ 5166 train 3.9942 , allloss: 3.9942, dt: 1331.70ms, fracRes: 0.7097, norm(attn): 0.1689, norm(output): 0.9412, norm(x): 0.7807, norm(y): 1.0021, norm:0.6574, tok/sec: 98424.74, flops:103.31, batch-reuse:1
@ 5167 train 4.0119 , allloss: 4.0123, dt: 1334.32ms, fracRes: 0.7099, norm(attn): 0.1660, norm(output): 0.9414, norm(x): 0.7812, norm(y): 1.0021, norm:0.5856, tok/sec: 98231.41, flops:103.11, batch-reuse:1
@ 5168 train 4.0093 , allloss: 4.0094, dt: 1334.62ms, fracRes: 0.7098, norm(attn): 0.1660, norm(output): 0.9417, norm(x): 0.7820, norm(y): 1.0021, norm:0.6993, tok/sec: 98209.53, flops:103.08, batch-reuse:1
@ 5169 train 4.0560 , allloss: 4.0561, dt: 1327.77ms, fracRes: 0.7098, norm(attn): 0.1689, norm(output): 0.9413, norm(x): 0.7814, norm(y): 1.0022, norm:0.6331, tok/sec: 98716.23, flops:103.62, batch-reuse:1
@ 5170 train 4.0247 , allloss: 4.0248, dt: 1321.00ms, fracRes: 0.7098, norm(attn): 0.1689, norm(output): 0.9412, norm(x): 0.7811, norm(y): 1.0024, norm:0.5971, tok/sec: 99221.79, flops:104.15, batch-reuse:1
@ 5171 train 4.0173 , allloss: 4.0174, dt: 1284.42ms, fracRes: 0.7101, norm(attn): 0.1660, norm(output): 0.9413, norm(x): 0.7807, norm(y): 1.0024, norm:0.5439, tok/sec: 102047.52, flops:107.11, batch-reuse:1
@ 5172 train 4.0617 , allloss: 4.0617, dt: 1305.58ms, fracRes: 0.7099, norm(attn): 0.1641, norm(output): 0.9417, norm(x): 0.7817, norm(y): 1.0023, norm:0.6727, tok/sec: 100393.43, flops:105.38, batch-reuse:1
@ 5173 train 4.0804 , allloss: 4.0805, dt: 1278.53ms, fracRes: 0.7098, norm(attn): 0.1680, norm(output): 0.9414, norm(x): 0.7816, norm(y): 1.0021, norm:0.6519, tok/sec: 102517.84, flops:107.61, batch-reuse:1
@ 5174 train 4.0283 , allloss: 4.0284, dt: 1320.91ms, fracRes: 0.7097, norm(attn): 0.1660, norm(output): 0.9415, norm(x): 0.7816, norm(y): 1.0021, norm:0.5594, tok/sec: 99228.80, flops:104.15, batch-reuse:1
@ 5175 train 4.0578 , allloss: 4.0579, dt: 1298.35ms, fracRes: 0.7099, norm(attn): 0.1641, norm(output): 0.9416, norm(x): 0.7814, norm(y): 1.0021, norm:0.5796, tok/sec: 100952.81, flops:105.96, batch-reuse:1
@ 5176 train 4.0264 , allloss: 4.0265, dt: 1294.46ms, fracRes: 0.7099, norm(attn): 0.1670, norm(output): 0.9417, norm(x): 0.7814, norm(y): 1.0021, norm:0.5479, tok/sec: 101255.88, flops:106.28, batch-reuse:1
@ 5177 train 4.0293 , allloss: 4.0294, dt: 1300.92ms, fracRes: 0.7097, norm(attn): 0.1670, norm(output): 0.9415, norm(x): 0.7813, norm(y): 1.0020, norm:0.6050, tok/sec: 100753.63, flops:105.75, batch-reuse:1
@ 5178 train 3.9643 , allloss: 3.9645, dt: 1305.62ms, fracRes: 0.7100, norm(attn): 0.1670, norm(output): 0.9412, norm(x): 0.7806, norm(y): 1.0019, norm:0.5058, tok/sec: 100390.55, flops:105.37, batch-reuse:1
@ 5179 train 4.0191 , allloss: 4.0191, dt: 1301.64ms, fracRes: 0.7102, norm(attn): 0.1670, norm(output): 0.9414, norm(x): 0.7807, norm(y): 1.0018, norm:0.5346, tok/sec: 100697.28, flops:105.70, batch-reuse:1
@ 5180 train 3.9664 , allloss: 3.9665, dt: 1320.08ms, fracRes: 0.7101, norm(attn): 0.1670, norm(output): 0.9415, norm(x): 0.7806, norm(y): 1.0019, norm:0.5803, tok/sec: 99290.70, flops:104.22, batch-reuse:1
@ 5181 train 4.0281 , allloss: 4.0283, dt: 1339.61ms, fracRes: 0.7101, norm(attn): 0.1670, norm(output): 0.9414, norm(x): 0.7802, norm(y): 1.0021, norm:0.5549, tok/sec: 97843.45, flops:102.70, batch-reuse:1
@ 5182 train 4.0276 , allloss: 4.0277, dt: 1315.18ms, fracRes: 0.7099, norm(attn): 0.1689, norm(output): 0.9414, norm(x): 0.7801, norm(y): 1.0022, norm:0.5123, tok/sec: 99660.73, flops:104.61, batch-reuse:1
@ 5183 train 4.0482 , allloss: 4.0498, dt: 1299.53ms, fracRes: 0.7100, norm(attn): 0.1699, norm(output): 0.9413, norm(x): 0.7801, norm(y): 1.0023, norm:0.6400, tok/sec: 100861.28, flops:105.87, batch-reuse:1
@ 5184 train 4.0059 , allloss: 4.0064, dt: 1290.79ms, fracRes: 0.7100, norm(attn): 0.1660, norm(output): 0.9419, norm(x): 0.7807, norm(y): 1.0022, norm:0.7284, tok/sec: 101543.75, flops:106.58, batch-reuse:1
@ 5185 train 4.0051 , allloss: 4.0052, dt: 1338.16ms, fracRes: 0.7098, norm(attn): 0.1660, norm(output): 0.9415, norm(x): 0.7806, norm(y): 1.0020, norm:0.6110, tok/sec: 97949.79, flops:102.81, batch-reuse:1
@ 5186 train 3.9460 , allloss: 3.9460, dt: 1319.82ms, fracRes: 0.7099, norm(attn): 0.1660, norm(output): 0.9413, norm(x): 0.7802, norm(y): 1.0020, norm:0.6075, tok/sec: 99310.55, flops:104.24, batch-reuse:1
@ 5187 train 4.0377 , allloss: 4.0379, dt: 1347.10ms, fracRes: 0.7101, norm(attn): 0.1670, norm(output): 0.9414, norm(x): 0.7805, norm(y): 1.0023, norm:0.6981, tok/sec: 97299.40, flops:102.13, batch-reuse:1
@ 5188 train 3.8854 , allloss: 3.8857, dt: 1343.36ms, fracRes: 0.7099, norm(attn): 0.1689, norm(output): 0.9416, norm(x): 0.7805, norm(y): 1.0023, norm:0.6747, tok/sec: 97570.40, flops:102.41, batch-reuse:1
@ 5189 train 3.9912 , allloss: 3.9914, dt: 1318.44ms, fracRes: 0.7099, norm(attn): 0.1689, norm(output): 0.9413, norm(x): 0.7802, norm(y): 1.0021, norm:0.5927, tok/sec: 99414.14, flops:104.35, batch-reuse:1
@ 5190 train 4.0157 , allloss: 4.0158, dt: 1319.07ms, fracRes: 0.7100, norm(attn): 0.1670, norm(output): 0.9413, norm(x): 0.7805, norm(y): 1.0021, norm:0.8021, tok/sec: 99367.13, flops:104.30, batch-reuse:1
@ 5191 train 4.1297 , allloss: 4.1298, dt: 1317.60ms, fracRes: 0.7099, norm(attn): 0.1660, norm(output): 0.9418, norm(x): 0.7814, norm(y): 1.0020, norm:0.5977, tok/sec: 99477.53, flops:104.41, batch-reuse:1
@ 5192 train 4.0742 , allloss: 4.0743, dt: 1299.33ms, fracRes: 0.7098, norm(attn): 0.1670, norm(output): 0.9417, norm(x): 0.7813, norm(y): 1.0021, norm:0.7455, tok/sec: 100876.92, flops:105.88, batch-reuse:1
@ 5193 train 4.0353 , allloss: 4.0357, dt: 1331.39ms, fracRes: 0.7097, norm(attn): 0.1641, norm(output): 0.9417, norm(x): 0.7817, norm(y): 1.0021, norm:0.8462, tok/sec: 98447.18, flops:103.33, batch-reuse:1
@ 5194 train 4.0772 , allloss: 4.0782, dt: 1329.97ms, fracRes: 0.7098, norm(attn): 0.1670, norm(output): 0.9416, norm(x): 0.7811, norm(y): 1.0019, norm:0.6897, tok/sec: 98552.70, flops:103.44, batch-reuse:1
@ 5195 train 3.9818 , allloss: 3.9819, dt: 1313.30ms, fracRes: 0.7099, norm(attn): 0.1660, norm(output): 0.9418, norm(x): 0.7811, norm(y): 1.0018, norm:0.7496, tok/sec: 99803.27, flops:104.76, batch-reuse:1
@ 5196 train 3.9587 , allloss: 3.9588, dt: 1308.94ms, fracRes: 0.7101, norm(attn): 0.1660, norm(output): 0.9417, norm(x): 0.7811, norm(y): 1.0020, norm:0.5861, tok/sec: 100135.87, flops:105.11, batch-reuse:1
@ 5197 train 4.0411 , allloss: 4.0417, dt: 1336.59ms, fracRes: 0.7101, norm(attn): 0.1670, norm(output): 0.9415, norm(x): 0.7811, norm(y): 1.0019, norm:0.6004, tok/sec: 98064.23, flops:102.93, batch-reuse:1
@ 5198 train 4.0507 , allloss: 4.0508, dt: 1337.40ms, fracRes: 0.7099, norm(attn): 0.1670, norm(output): 0.9417, norm(x): 0.7815, norm(y): 1.0018, norm:0.5391, tok/sec: 98005.42, flops:102.87, batch-reuse:1
@ 5199 train 4.1067 , allloss: 4.1069, dt: 1291.52ms, fracRes: 0.7099, norm(attn): 0.1650, norm(output): 0.9420, norm(x): 0.7816, norm(y): 1.0018, norm:0.5064, tok/sec: 101486.99, flops:106.52, batch-reuse:1
@ 5200 train 3.9174 , allloss: 3.9174, dt: 1315.92ms, fracRes: 0.7101, norm(attn): 0.1680, norm(output): 0.9412, norm(x): 0.7806, norm(y): 1.0020, norm:0.7189, tok/sec: 99604.72, flops:104.55, batch-reuse:1
@ 5201 train 4.0807 , allloss: 4.0813, dt: 1288.42ms, fracRes: 0.7101, norm(attn): 0.1680, norm(output): 0.9412, norm(x): 0.7807, norm(y): 1.0020, norm:0.6804, tok/sec: 101731.01, flops:106.78, batch-reuse:1
@ 5202 train 4.0453 , allloss: 4.0463, dt: 1295.43ms, fracRes: 0.7098, norm(attn): 0.1660, norm(output): 0.9414, norm(x): 0.7818, norm(y): 1.0022, norm:0.6638, tok/sec: 101180.47, flops:106.20, batch-reuse:1
@ 5203 train 4.2105 , allloss: 4.2106, dt: 1293.09ms, fracRes: 0.7099, norm(attn): 0.1670, norm(output): 0.9420, norm(x): 0.7823, norm(y): 1.0022, norm:0.7681, tok/sec: 101363.58, flops:106.39, batch-reuse:1
@ 5204 train 4.2340 , allloss: 4.2367, dt: 1306.45ms, fracRes: 0.7098, norm(attn): 0.1650, norm(output): 0.9418, norm(x): 0.7820, norm(y): 1.0021, norm:0.9387, tok/sec: 100326.46, flops:105.31, batch-reuse:1
@ 5205 train 4.2107 , allloss: 4.2108, dt: 1291.19ms, fracRes: 0.7101, norm(attn): 0.1670, norm(output): 0.9415, norm(x): 0.7809, norm(y): 1.0018, norm:0.6120, tok/sec: 101512.81, flops:106.55, batch-reuse:1
@ 5206 train 4.1837 , allloss: 4.1838, dt: 1301.61ms, fracRes: 0.7097, norm(attn): 0.1650, norm(output): 0.9418, norm(x): 0.7814, norm(y): 1.0020, norm:0.8441, tok/sec: 100699.87, flops:105.70, batch-reuse:1
@ 5207 train 4.1900 , allloss: 4.1902, dt: 1309.41ms, fracRes: 0.7097, norm(attn): 0.1660, norm(output): 0.9418, norm(x): 0.7814, norm(y): 1.0020, norm:0.8324, tok/sec: 100099.80, flops:105.07, batch-reuse:1
@ 5208 train 4.1838 , allloss: 4.1840, dt: 1330.03ms, fracRes: 0.7098, norm(attn): 0.1670, norm(output): 0.9419, norm(x): 0.7818, norm(y): 1.0020, norm:0.6777, tok/sec: 98548.33, flops:103.44, batch-reuse:1
@ 5209 train 4.2791 , allloss: 4.2800, dt: 1338.18ms, fracRes: 0.7101, norm(attn): 0.1660, norm(output): 0.9418, norm(x): 0.7816, norm(y): 1.0022, norm:0.7516, tok/sec: 97947.85, flops:102.81, batch-reuse:1
@ 5210 train 4.3521 , allloss: 4.3524, dt: 1314.97ms, fracRes: 0.7102, norm(attn): 0.1660, norm(output): 0.9418, norm(x): 0.7815, norm(y): 1.0023, norm:0.6722, tok/sec: 99677.05, flops:104.62, batch-reuse:1
@ 5211 train 4.1717 , allloss: 4.1718, dt: 1292.40ms, fracRes: 0.7101, norm(attn): 0.1670, norm(output): 0.9419, norm(x): 0.7816, norm(y): 1.0020, norm:0.7628, tok/sec: 101417.68, flops:106.45, batch-reuse:1
@ 5212 train 4.1582 , allloss: 4.1583, dt: 1304.32ms, fracRes: 0.7099, norm(attn): 0.1670, norm(output): 0.9417, norm(x): 0.7814, norm(y): 1.0019, norm:0.6622, tok/sec: 100490.63, flops:105.48, batch-reuse:1
@ 5213 train 4.1606 , allloss: 4.1609, dt: 1289.13ms, fracRes: 0.7100, norm(attn): 0.1660, norm(output): 0.9419, norm(x): 0.7817, norm(y): 1.0017, norm:0.5200, tok/sec: 101674.40, flops:106.72, batch-reuse:1
@ 5214 train 4.2295 , allloss: 4.2296, dt: 1301.44ms, fracRes: 0.7101, norm(attn): 0.1641, norm(output): 0.9419, norm(x): 0.7822, norm(y): 1.0018, norm:0.6318, tok/sec: 100713.00, flops:105.71, batch-reuse:1
@ 5215 train 4.2724 , allloss: 4.2727, dt: 1308.44ms, fracRes: 0.7102, norm(attn): 0.1641, norm(output): 0.9420, norm(x): 0.7823, norm(y): 1.0019, norm:0.5300, tok/sec: 100174.44, flops:105.15, batch-reuse:1
@ 5216 train 4.1275 , allloss: 4.1277, dt: 1329.29ms, fracRes: 0.7102, norm(attn): 0.1660, norm(output): 0.9417, norm(x): 0.7821, norm(y): 1.0019, norm:0.6139, tok/sec: 98602.86, flops:103.50, batch-reuse:1
@ 5217 train 4.1463 , allloss: 4.1470, dt: 1321.38ms, fracRes: 0.7101, norm(attn): 0.1670, norm(output): 0.9417, norm(x): 0.7816, norm(y): 1.0018, norm:0.5634, tok/sec: 99193.17, flops:104.12, batch-reuse:1
@ 5218 train 4.2580 , allloss: 4.2580, dt: 1335.63ms, fracRes: 0.7100, norm(attn): 0.1650, norm(output): 0.9417, norm(x): 0.7811, norm(y): 1.0019, norm:0.6150, tok/sec: 98135.00, flops:103.01, batch-reuse:1
@ 5219 train 4.1290 , allloss: 4.1291, dt: 1331.24ms, fracRes: 0.7099, norm(attn): 0.1641, norm(output): 0.9419, norm(x): 0.7823, norm(y): 1.0019, norm:0.6286, tok/sec: 98458.43, flops:103.35, batch-reuse:1
@ 5220 train 4.3232 , allloss: 4.3232, dt: 1334.99ms, fracRes: 0.7102, norm(attn): 0.1650, norm(output): 0.9419, norm(x): 0.7822, norm(y): 1.0021, norm:0.6364, tok/sec: 98182.29, flops:103.06, batch-reuse:1
@ 5221 train 4.1539 , allloss: 4.1540, dt: 1320.01ms, fracRes: 0.7098, norm(attn): 0.1650, norm(output): 0.9417, norm(x): 0.7817, norm(y): 1.0020, norm:0.5502, tok/sec: 99296.51, flops:104.22, batch-reuse:1
@ 5222 train 4.1591 , allloss: 4.1592, dt: 1289.08ms, fracRes: 0.7097, norm(attn): 0.1670, norm(output): 0.9419, norm(x): 0.7818, norm(y): 1.0019, norm:0.6423, tok/sec: 101678.78, flops:106.73, batch-reuse:1
@ 5223 train 4.2451 , allloss: 4.2451, dt: 1287.17ms, fracRes: 0.7098, norm(attn): 0.1621, norm(output): 0.9420, norm(x): 0.7826, norm(y): 1.0020, norm:0.5907, tok/sec: 101829.24, flops:106.88, batch-reuse:1
@ 5224 train 4.1670 , allloss: 4.1670, dt: 1308.32ms, fracRes: 0.7099, norm(attn): 0.1650, norm(output): 0.9415, norm(x): 0.7824, norm(y): 1.0020, norm:0.6689, tok/sec: 100183.46, flops:105.16, batch-reuse:1
@ 5225 train 4.2595 , allloss: 4.2596, dt: 1327.29ms, fracRes: 0.7098, norm(attn): 0.1670, norm(output): 0.9414, norm(x): 0.7826, norm(y): 1.0020, norm:0.8360, tok/sec: 98751.68, flops:103.65, batch-reuse:1
@ 5226 train 4.0779 , allloss: 4.0780, dt: 1291.12ms, fracRes: 0.7099, norm(attn): 0.1689, norm(output): 0.9412, norm(x): 0.7818, norm(y): 1.0021, norm:0.6999, tok/sec: 101518.30, flops:106.56, batch-reuse:1
@ 5227 train 4.1673 , allloss: 4.1673, dt: 1351.02ms, fracRes: 0.7100, norm(attn): 0.1660, norm(output): 0.9419, norm(x): 0.7823, norm(y): 1.0019, norm:0.7590, tok/sec: 97017.15, flops:101.83, batch-reuse:1
@ 5228 train 4.1319 , allloss: 4.1320, dt: 1352.90ms, fracRes: 0.7097, norm(attn): 0.1660, norm(output): 0.9418, norm(x): 0.7826, norm(y): 1.0019, norm:0.6098, tok/sec: 96881.94, flops:101.69, batch-reuse:1
@ 5229 train 4.1686 , allloss: 4.1687, dt: 1335.15ms, fracRes: 0.7096, norm(attn): 0.1650, norm(output): 0.9419, norm(x): 0.7825, norm(y): 1.0019, norm:0.6270, tok/sec: 98170.37, flops:103.04, batch-reuse:1
@ 5230 train 4.1712 , allloss: 4.1712, dt: 1338.13ms, fracRes: 0.7098, norm(attn): 0.1660, norm(output): 0.9416, norm(x): 0.7819, norm(y): 1.0021, norm:0.6754, tok/sec: 97951.90, flops:102.81, batch-reuse:1
@ 5231 train 4.2206 , allloss: 4.2207, dt: 1348.08ms, fracRes: 0.7098, norm(attn): 0.1631, norm(output): 0.9420, norm(x): 0.7826, norm(y): 1.0019, norm:0.6423, tok/sec: 97228.43, flops:102.05, batch-reuse:1
@ 5232 train 4.3202 , allloss: 4.3204, dt: 1338.41ms, fracRes: 0.7097, norm(attn): 0.1631, norm(output): 0.9420, norm(x): 0.7825, norm(y): 1.0017, norm:0.6590, tok/sec: 97931.29, flops:102.79, batch-reuse:1
@ 5233 train 4.1640 , allloss: 4.1641, dt: 1330.76ms, fracRes: 0.7097, norm(attn): 0.1641, norm(output): 0.9417, norm(x): 0.7824, norm(y): 1.0019, norm:0.8009, tok/sec: 98494.34, flops:103.38, batch-reuse:1
@ 5234 train 4.1570 , allloss: 4.1572, dt: 1324.35ms, fracRes: 0.7100, norm(attn): 0.1631, norm(output): 0.9416, norm(x): 0.7818, norm(y): 1.0021, norm:0.5981, tok/sec: 98970.63, flops:103.88, batch-reuse:1
@ 5235 train 4.1684 , allloss: 4.1686, dt: 1313.44ms, fracRes: 0.7101, norm(attn): 0.1650, norm(output): 0.9416, norm(x): 0.7816, norm(y): 1.0019, norm:0.6351, tok/sec: 99793.10, flops:104.75, batch-reuse:1
@ 5236 train 4.2170 , allloss: 4.2179, dt: 1306.94ms, fracRes: 0.7099, norm(attn): 0.1660, norm(output): 0.9419, norm(x): 0.7819, norm(y): 1.0017, norm:0.6389, tok/sec: 100289.09, flops:105.27, batch-reuse:1
@ 5237 train 4.2841 , allloss: 4.2841, dt: 1310.72ms, fracRes: 0.7098, norm(attn): 0.1650, norm(output): 0.9419, norm(x): 0.7821, norm(y): 1.0017, norm:0.6300, tok/sec: 99999.66, flops:104.96, batch-reuse:1
@ 5238 train 4.2421 , allloss: 4.2421, dt: 1329.97ms, fracRes: 0.7099, norm(attn): 0.1660, norm(output): 0.9417, norm(x): 0.7822, norm(y): 1.0018, norm:0.6526, tok/sec: 98552.27, flops:103.44, batch-reuse:1
@ 5239 train 4.1452 , allloss: 4.1453, dt: 1327.30ms, fracRes: 0.7097, norm(attn): 0.1650, norm(output): 0.9420, norm(x): 0.7831, norm(y): 1.0018, norm:0.6621, tok/sec: 98750.58, flops:103.65, batch-reuse:1
@ 5240 train 4.2663 , allloss: 4.2663, dt: 1299.20ms, fracRes: 0.7097, norm(attn): 0.1660, norm(output): 0.9420, norm(x): 0.7830, norm(y): 1.0019, norm:0.6133, tok/sec: 100886.73, flops:105.89, batch-reuse:1
@ 5241 train 4.1806 , allloss: 4.1808, dt: 1300.02ms, fracRes: 0.7097, norm(attn): 0.1660, norm(output): 0.9416, norm(x): 0.7828, norm(y): 1.0019, norm:0.6668, tok/sec: 100822.70, flops:105.83, batch-reuse:1
@ 5242 train 4.3031 , allloss: 4.3033, dt: 1294.95ms, fracRes: 0.7100, norm(attn): 0.1641, norm(output): 0.9419, norm(x): 0.7822, norm(y): 1.0018, norm:0.6345, tok/sec: 101218.16, flops:106.24, batch-reuse:1
@ 5243 train 4.2157 , allloss: 4.2162, dt: 1313.28ms, fracRes: 0.7099, norm(attn): 0.1660, norm(output): 0.9422, norm(x): 0.7829, norm(y): 1.0017, norm:0.6078, tok/sec: 99804.86, flops:104.76, batch-reuse:1
@ 5244 train 4.1770 , allloss: 4.1770, dt: 1298.64ms, fracRes: 0.7098, norm(attn): 0.1660, norm(output): 0.9414, norm(x): 0.7824, norm(y): 1.0017, norm:0.6550, tok/sec: 100929.87, flops:105.94, batch-reuse:1
@ 5245 train 4.1547 , allloss: 4.1548, dt: 1306.72ms, fracRes: 0.7096, norm(attn): 0.1650, norm(output): 0.9417, norm(x): 0.7831, norm(y): 1.0018, norm:0.5441, tok/sec: 100306.42, flops:105.28, batch-reuse:1
@ 5246 train 4.0595 , allloss: 4.0596, dt: 1319.79ms, fracRes: 0.7098, norm(attn): 0.1650, norm(output): 0.9418, norm(x): 0.7834, norm(y): 1.0019, norm:0.5848, tok/sec: 99312.46, flops:104.24, batch-reuse:1
@ 5247 train 4.1535 , allloss: 4.1536, dt: 1300.95ms, fracRes: 0.7101, norm(attn): 0.1660, norm(output): 0.9421, norm(x): 0.7834, norm(y): 1.0018, norm:0.6458, tok/sec: 100751.12, flops:105.75, batch-reuse:1
@ 5248 train 4.1235 , allloss: 4.1237, dt: 1288.46ms, fracRes: 0.7098, norm(attn): 0.1660, norm(output): 0.9419, norm(x): 0.7837, norm(y): 1.0018, norm:0.7167, tok/sec: 101727.60, flops:106.78, batch-reuse:1
@ 5249 train 4.1931 , allloss: 4.1936, dt: 1298.54ms, fracRes: 0.7097, norm(attn): 0.1641, norm(output): 0.9419, norm(x): 0.7836, norm(y): 1.0016, norm:0.6305, tok/sec: 100937.95, flops:105.95, batch-reuse:1
@ 5250 train 4.1680 , allloss: 4.1680, dt: 1290.43ms, fracRes: 0.7097, norm(attn): 0.1650, norm(output): 0.9419, norm(x): 0.7835, norm(y): 1.0016, norm:0.5763, tok/sec: 101572.34, flops:106.61, batch-reuse:1
@ 5251 train 4.0985 , allloss: 4.0988, dt: 1299.63ms, fracRes: 0.7097, norm(attn): 0.1660, norm(output): 0.9419, norm(x): 0.7831, norm(y): 1.0016, norm:0.6695, tok/sec: 100853.16, flops:105.86, batch-reuse:1
@ 5252 train 4.1270 , allloss: 4.1272, dt: 1302.52ms, fracRes: 0.7098, norm(attn): 0.1660, norm(output): 0.9417, norm(x): 0.7824, norm(y): 1.0018, norm:0.6496, tok/sec: 100629.88, flops:105.62, batch-reuse:1
@ 5253 train 4.2376 , allloss: 4.2376, dt: 1330.47ms, fracRes: 0.7100, norm(attn): 0.1631, norm(output): 0.9420, norm(x): 0.7827, norm(y): 1.0018, norm:0.6288, tok/sec: 98515.73, flops:103.41, batch-reuse:1
@ 5254 train 4.2122 , allloss: 4.2124, dt: 1337.17ms, fracRes: 0.7098, norm(attn): 0.1641, norm(output): 0.9419, norm(x): 0.7832, norm(y): 1.0017, norm:0.6841, tok/sec: 98022.23, flops:102.89, batch-reuse:1
@ 5255 train 4.1563 , allloss: 4.1563, dt: 1333.73ms, fracRes: 0.7099, norm(attn): 0.1670, norm(output): 0.9417, norm(x): 0.7830, norm(y): 1.0018, norm:0.6622, tok/sec: 98275.06, flops:103.15, batch-reuse:1
@ 5256 train 4.1113 , allloss: 4.1114, dt: 1287.07ms, fracRes: 0.7099, norm(attn): 0.1660, norm(output): 0.9419, norm(x): 0.7831, norm(y): 1.0016, norm:0.6444, tok/sec: 101837.54, flops:106.89, batch-reuse:1
@ 5257 train 4.1238 , allloss: 4.1239, dt: 1305.87ms, fracRes: 0.7098, norm(attn): 0.1650, norm(output): 0.9421, norm(x): 0.7835, norm(y): 1.0015, norm:0.6337, tok/sec: 100371.45, flops:105.35, batch-reuse:1
@ 5258 train 4.1924 , allloss: 4.1925, dt: 1292.41ms, fracRes: 0.7099, norm(attn): 0.1641, norm(output): 0.9417, norm(x): 0.7832, norm(y): 1.0018, norm:0.6098, tok/sec: 101416.57, flops:106.45, batch-reuse:1
@ 5259 train 4.1358 , allloss: 4.1358, dt: 1323.99ms, fracRes: 0.7099, norm(attn): 0.1660, norm(output): 0.9418, norm(x): 0.7837, norm(y): 1.0018, norm:0.5954, tok/sec: 98997.54, flops:103.91, batch-reuse:1
@ 5260 train 4.1787 , allloss: 4.1795, dt: 1333.84ms, fracRes: 0.7098, norm(attn): 0.1631, norm(output): 0.9420, norm(x): 0.7839, norm(y): 1.0017, norm:0.5676, tok/sec: 98266.65, flops:103.14, batch-reuse:1
@ 5261 train 4.1092 , allloss: 4.1092, dt: 1299.72ms, fracRes: 0.7096, norm(attn): 0.1660, norm(output): 0.9421, norm(x): 0.7839, norm(y): 1.0016, norm:0.5687, tok/sec: 100846.48, flops:105.85, batch-reuse:1
@ 5262 train 4.1674 , allloss: 4.1674, dt: 1324.72ms, fracRes: 0.7098, norm(attn): 0.1641, norm(output): 0.9420, norm(x): 0.7835, norm(y): 1.0016, norm:0.5536, tok/sec: 98943.11, flops:103.85, batch-reuse:1
@ 5263 train 4.2443 , allloss: 4.2446, dt: 1344.69ms, fracRes: 0.7098, norm(attn): 0.1650, norm(output): 0.9419, norm(x): 0.7839, norm(y): 1.0017, norm:0.5736, tok/sec: 97474.11, flops:102.31, batch-reuse:1
@ 5264 train 4.1789 , allloss: 4.1789, dt: 1289.34ms, fracRes: 0.7098, norm(attn): 0.1650, norm(output): 0.9419, norm(x): 0.7838, norm(y): 1.0018, norm:0.5662, tok/sec: 101658.40, flops:106.70, batch-reuse:1
@ 5265 train 4.1783 , allloss: 4.1784, dt: 1310.62ms, fracRes: 0.7098, norm(attn): 0.1660, norm(output): 0.9418, norm(x): 0.7833, norm(y): 1.0018, norm:0.5816, tok/sec: 100007.30, flops:104.97, batch-reuse:1
@ 5266 train 4.1073 , allloss: 4.1073, dt: 1289.91ms, fracRes: 0.7098, norm(attn): 0.1650, norm(output): 0.9421, norm(x): 0.7839, norm(y): 1.0017, norm:0.5621, tok/sec: 101612.95, flops:106.66, batch-reuse:1
@ 5267 train 4.1760 , allloss: 4.1818, dt: 1315.72ms, fracRes: 0.7098, norm(attn): 0.1641, norm(output): 0.9421, norm(x): 0.7839, norm(y): 1.0017, norm:0.5585, tok/sec: 99619.94, flops:104.56, batch-reuse:1
@ 5268 train 4.2063 , allloss: 4.2063, dt: 1340.28ms, fracRes: 0.7096, norm(attn): 0.1631, norm(output): 0.9422, norm(x): 0.7844, norm(y): 1.0016, norm:0.6438, tok/sec: 97794.38, flops:102.65, batch-reuse:1
@ 5269 train 4.1915 , allloss: 4.1916, dt: 1348.70ms, fracRes: 0.7097, norm(attn): 0.1631, norm(output): 0.9419, norm(x): 0.7840, norm(y): 1.0018, norm:0.5958, tok/sec: 97184.02, flops:102.01, batch-reuse:1
@ 5270 train 4.1259 , allloss: 4.1261, dt: 1336.94ms, fracRes: 0.7096, norm(attn): 0.1641, norm(output): 0.9422, norm(x): 0.7847, norm(y): 1.0018, norm:0.5805, tok/sec: 98038.94, flops:102.90, batch-reuse:1
@ 5271 train 4.2491 , allloss: 4.2491, dt: 1318.93ms, fracRes: 0.7099, norm(attn): 0.1621, norm(output): 0.9422, norm(x): 0.7842, norm(y): 1.0017, norm:0.6635, tok/sec: 99377.26, flops:104.31, batch-reuse:1
@ 5272 train 4.2518 , allloss: 4.2519, dt: 1304.84ms, fracRes: 0.7099, norm(attn): 0.1621, norm(output): 0.9423, norm(x): 0.7839, norm(y): 1.0016, norm:0.7111, tok/sec: 100450.90, flops:105.44, batch-reuse:1
@ 5273 train 4.1444 , allloss: 4.1445, dt: 1305.09ms, fracRes: 0.7097, norm(attn): 0.1631, norm(output): 0.9420, norm(x): 0.7834, norm(y): 1.0013, norm:0.5553, tok/sec: 100431.61, flops:105.42, batch-reuse:1
@ 5274 train 4.1946 , allloss: 4.1947, dt: 1343.96ms, fracRes: 0.7097, norm(attn): 0.1631, norm(output): 0.9419, norm(x): 0.7830, norm(y): 1.0014, norm:0.7045, tok/sec: 97527.00, flops:102.37, batch-reuse:1
@ 5275 train 4.0343 , allloss: 4.0344, dt: 1296.34ms, fracRes: 0.7098, norm(attn): 0.1641, norm(output): 0.9419, norm(x): 0.7829, norm(y): 1.0017, norm:0.7210, tok/sec: 101109.50, flops:106.13, batch-reuse:1
@ 5276 train 4.1334 , allloss: 4.1334, dt: 1293.82ms, fracRes: 0.7098, norm(attn): 0.1641, norm(output): 0.9420, norm(x): 0.7832, norm(y): 1.0018, norm:0.6148, tok/sec: 101306.53, flops:106.33, batch-reuse:1
@ 5277 train 4.1366 , allloss: 4.1371, dt: 1296.73ms, fracRes: 0.7099, norm(attn): 0.1621, norm(output): 0.9420, norm(x): 0.7833, norm(y): 1.0018, norm:0.6836, tok/sec: 101078.70, flops:106.10, batch-reuse:1
@ 5278 train 4.1624 , allloss: 4.1625, dt: 1284.01ms, fracRes: 0.7100, norm(attn): 0.1621, norm(output): 0.9419, norm(x): 0.7835, norm(y): 1.0017, norm:0.5420, tok/sec: 102080.42, flops:107.15, batch-reuse:1
@ 5279 train 4.1790 , allloss: 4.1791, dt: 1300.66ms, fracRes: 0.7098, norm(attn): 0.1621, norm(output): 0.9423, norm(x): 0.7845, norm(y): 1.0015, norm:0.6412, tok/sec: 100773.13, flops:105.77, batch-reuse:1
@ 5280 train 4.2490 , allloss: 4.2490, dt: 1314.05ms, fracRes: 0.7099, norm(attn): 0.1621, norm(output): 0.9423, norm(x): 0.7844, norm(y): 1.0017, norm:0.7940, tok/sec: 99746.91, flops:104.70, batch-reuse:1
@ 5281 train 4.1287 , allloss: 4.1288, dt: 1290.65ms, fracRes: 0.7097, norm(attn): 0.1621, norm(output): 0.9418, norm(x): 0.7836, norm(y): 1.0017, norm:0.6045, tok/sec: 101555.11, flops:106.60, batch-reuse:1
@ 5282 train 4.1907 , allloss: 4.1908, dt: 1307.06ms, fracRes: 0.7099, norm(attn): 0.1631, norm(output): 0.9418, norm(x): 0.7832, norm(y): 1.0019, norm:0.7780, tok/sec: 100280.24, flops:105.26, batch-reuse:1
@ 5283 train 4.1595 , allloss: 4.1596, dt: 1288.22ms, fracRes: 0.7097, norm(attn): 0.1631, norm(output): 0.9419, norm(x): 0.7838, norm(y): 1.0019, norm:0.6462, tok/sec: 101746.79, flops:106.80, batch-reuse:1
@ 5284 train 4.1184 , allloss: 4.1184, dt: 1282.35ms, fracRes: 0.7097, norm(attn): 0.1621, norm(output): 0.9421, norm(x): 0.7841, norm(y): 1.0018, norm:0.6369, tok/sec: 102212.34, flops:107.29, batch-reuse:1
@ 5285 train 4.1427 , allloss: 4.1427, dt: 1302.89ms, fracRes: 0.7098, norm(attn): 0.1650, norm(output): 0.9419, norm(x): 0.7840, norm(y): 1.0017, norm:0.6126, tok/sec: 100601.30, flops:105.59, batch-reuse:1
@ 5286 train 4.0301 , allloss: 4.0301, dt: 1292.31ms, fracRes: 0.7098, norm(attn): 0.1650, norm(output): 0.9421, norm(x): 0.7844, norm(y): 1.0015, norm:0.5541, tok/sec: 101424.28, flops:106.46, batch-reuse:1
@ 5287 train 4.2095 , allloss: 4.2096, dt: 1299.25ms, fracRes: 0.7100, norm(attn): 0.1621, norm(output): 0.9422, norm(x): 0.7837, norm(y): 1.0015, norm:0.6637, tok/sec: 100882.62, flops:105.89, batch-reuse:1
@ 5288 train 3.9767 , allloss: 3.9768, dt: 1301.61ms, fracRes: 0.7102, norm(attn): 0.1689, norm(output): 0.9416, norm(x): 0.7823, norm(y): 1.0017, norm:0.7232, tok/sec: 100699.88, flops:105.70, batch-reuse:1
@ 5289 train 4.0616 , allloss: 4.0616, dt: 1293.53ms, fracRes: 0.7100, norm(attn): 0.1631, norm(output): 0.9418, norm(x): 0.7834, norm(y): 1.0018, norm:0.7429, tok/sec: 101329.18, flops:106.36, batch-reuse:1
@ 5290 train 4.2406 , allloss: 4.2408, dt: 1321.27ms, fracRes: 0.7100, norm(attn): 0.1621, norm(output): 0.9420, norm(x): 0.7838, norm(y): 1.0018, norm:0.8498, tok/sec: 99201.60, flops:104.13, batch-reuse:1
@ 5291 train 4.1347 , allloss: 4.1348, dt: 1312.03ms, fracRes: 0.7100, norm(attn): 0.1621, norm(output): 0.9421, norm(x): 0.7838, norm(y): 1.0018, norm:0.6705, tok/sec: 99900.28, flops:104.86, batch-reuse:1
@ 5292 train 4.1047 , allloss: 4.1050, dt: 1306.34ms, fracRes: 0.7098, norm(attn): 0.1631, norm(output): 0.9425, norm(x): 0.7849, norm(y): 1.0016, norm:0.6683, tok/sec: 100335.56, flops:105.32, batch-reuse:1
@ 5293 train 4.1470 , allloss: 4.1479, dt: 1330.50ms, fracRes: 0.7098, norm(attn): 0.1621, norm(output): 0.9421, norm(x): 0.7843, norm(y): 1.0013, norm:0.6455, tok/sec: 98513.14, flops:103.40, batch-reuse:1
@ 5294 train 4.1345 , allloss: 4.1346, dt: 1323.45ms, fracRes: 0.7100, norm(attn): 0.1641, norm(output): 0.9418, norm(x): 0.7837, norm(y): 1.0015, norm:0.7177, tok/sec: 99037.97, flops:103.95, batch-reuse:1
@ 5295 train 4.1646 , allloss: 4.1646, dt: 1280.45ms, fracRes: 0.7101, norm(attn): 0.1660, norm(output): 0.9422, norm(x): 0.7839, norm(y): 1.0017, norm:0.6683, tok/sec: 102363.83, flops:107.44, batch-reuse:1
@ 5296 train 4.0695 , allloss: 4.0695, dt: 1319.98ms, fracRes: 0.7099, norm(attn): 0.1660, norm(output): 0.9421, norm(x): 0.7840, norm(y): 1.0019, norm:0.6686, tok/sec: 99298.84, flops:104.23, batch-reuse:1
@ 5297 train 4.1801 , allloss: 4.1801, dt: 1322.24ms, fracRes: 0.7100, norm(attn): 0.1660, norm(output): 0.9422, norm(x): 0.7837, norm(y): 1.0016, norm:0.6168, tok/sec: 99129.01, flops:104.05, batch-reuse:1
@ 5298 train 4.1219 , allloss: 4.1219, dt: 1289.37ms, fracRes: 0.7100, norm(attn): 0.1670, norm(output): 0.9420, norm(x): 0.7837, norm(y): 1.0015, norm:0.5798, tok/sec: 101655.94, flops:106.70, batch-reuse:1
@ 5299 train 4.0931 , allloss: 4.0932, dt: 1329.36ms, fracRes: 0.7106, norm(attn): 0.1660, norm(output): 0.9420, norm(x): 0.7834, norm(y): 1.0016, norm:0.7192, tok/sec: 98597.96, flops:103.49, batch-reuse:1
@ 5300 train 4.0717 , allloss: 4.0718, dt: 1342.77ms, fracRes: 0.7104, norm(attn): 0.1621, norm(output): 0.9420, norm(x): 0.7840, norm(y): 1.0017, norm:0.7249, tok/sec: 97613.15, flops:102.46, batch-reuse:1
@ 5301 train 4.1139 , allloss: 4.1139, dt: 1314.03ms, fracRes: 0.7103, norm(attn): 0.1641, norm(output): 0.9420, norm(x): 0.7834, norm(y): 1.0015, norm:0.5983, tok/sec: 99748.14, flops:104.70, batch-reuse:1
@ 5302 train 4.1188 , allloss: 4.1189, dt: 1291.21ms, fracRes: 0.7101, norm(attn): 0.1621, norm(output): 0.9420, norm(x): 0.7832, norm(y): 1.0012, norm:0.6410, tok/sec: 101511.37, flops:106.55, batch-reuse:1
@ 5303 train 4.1302 , allloss: 4.1303, dt: 1297.68ms, fracRes: 0.7100, norm(attn): 0.1621, norm(output): 0.9421, norm(x): 0.7836, norm(y): 1.0012, norm:0.6030, tok/sec: 101004.66, flops:106.02, batch-reuse:1
@ 5304 train 4.1235 , allloss: 4.1236, dt: 1311.11ms, fracRes: 0.7100, norm(attn): 0.1621, norm(output): 0.9422, norm(x): 0.7838, norm(y): 1.0011, norm:0.6393, tok/sec: 99970.25, flops:104.93, batch-reuse:1
@ 5305 train 4.1245 , allloss: 4.1246, dt: 1321.77ms, fracRes: 0.7100, norm(attn): 0.1621, norm(output): 0.9423, norm(x): 0.7842, norm(y): 1.0012, norm:0.6516, tok/sec: 99163.81, flops:104.09, batch-reuse:1
@ 5306 train 4.1087 , allloss: 4.1100, dt: 1293.23ms, fracRes: 0.7101, norm(attn): 0.1621, norm(output): 0.9422, norm(x): 0.7838, norm(y): 1.0014, norm:0.6047, tok/sec: 101352.65, flops:106.38, batch-reuse:1
@ 5307 train 3.9903 , allloss: 3.9911, dt: 1321.18ms, fracRes: 0.7102, norm(attn): 0.1641, norm(output): 0.9418, norm(x): 0.7832, norm(y): 1.0016, norm:0.6047, tok/sec: 99208.49, flops:104.13, batch-reuse:1
@ 5308 train 4.1979 , allloss: 4.1979, dt: 1321.93ms, fracRes: 0.7103, norm(attn): 0.1621, norm(output): 0.9420, norm(x): 0.7834, norm(y): 1.0016, norm:0.6089, tok/sec: 99152.24, flops:104.07, batch-reuse:1
@ 5309 train 4.1005 , allloss: 4.1008, dt: 1290.45ms, fracRes: 0.7103, norm(attn): 0.1621, norm(output): 0.9420, norm(x): 0.7832, norm(y): 1.0013, norm:0.5458, tok/sec: 101571.16, flops:106.61, batch-reuse:1
@ 5310 train 4.1271 , allloss: 4.1273, dt: 1300.38ms, fracRes: 0.7101, norm(attn): 0.1641, norm(output): 0.9421, norm(x): 0.7832, norm(y): 1.0013, norm:0.5795, tok/sec: 100795.28, flops:105.80, batch-reuse:1
@ 5311 train 4.1074 , allloss: 4.1075, dt: 1311.93ms, fracRes: 0.7104, norm(attn): 0.1641, norm(output): 0.9424, norm(x): 0.7833, norm(y): 1.0015, norm:0.5931, tok/sec: 99907.70, flops:104.87, batch-reuse:1
@ 5312 train 4.0120 , allloss: 4.0120, dt: 1307.16ms, fracRes: 0.7104, norm(attn): 0.1641, norm(output): 0.9420, norm(x): 0.7826, norm(y): 1.0019, norm:0.5815, tok/sec: 100272.41, flops:105.25, batch-reuse:1
@ 5313 train 4.1629 , allloss: 4.1633, dt: 1295.94ms, fracRes: 0.7104, norm(attn): 0.1660, norm(output): 0.9418, norm(x): 0.7824, norm(y): 1.0020, norm:0.9595, tok/sec: 101140.81, flops:106.16, batch-reuse:1
@ 5314 train 4.1655 , allloss: 4.1655, dt: 1298.23ms, fracRes: 0.7101, norm(attn): 0.1641, norm(output): 0.9419, norm(x): 0.7831, norm(y): 1.0018, norm:0.8608, tok/sec: 100961.71, flops:105.97, batch-reuse:1
@ 5315 train 4.1379 , allloss: 4.1380, dt: 1288.93ms, fracRes: 0.7100, norm(attn): 0.1602, norm(output): 0.9424, norm(x): 0.7840, norm(y): 1.0017, norm:0.5792, tok/sec: 101690.46, flops:106.74, batch-reuse:1
@ 5316 train 4.0913 , allloss: 4.0914, dt: 1289.29ms, fracRes: 0.7100, norm(attn): 0.1611, norm(output): 0.9422, norm(x): 0.7840, norm(y): 1.0017, norm:0.7564, tok/sec: 101661.82, flops:106.71, batch-reuse:1
@ 5317 train 4.0396 , allloss: 4.0397, dt: 1343.21ms, fracRes: 0.7100, norm(attn): 0.1641, norm(output): 0.9422, norm(x): 0.7837, norm(y): 1.0014, norm:0.5994, tok/sec: 97580.94, flops:102.42, batch-reuse:1
@ 5318 train 4.1153 , allloss: 4.1153, dt: 1341.22ms, fracRes: 0.7100, norm(attn): 0.1641, norm(output): 0.9419, norm(x): 0.7836, norm(y): 1.0015, norm:0.6299, tok/sec: 97725.71, flops:102.58, batch-reuse:1
@ 5319 train 4.1276 , allloss: 4.1278, dt: 1344.96ms, fracRes: 0.7101, norm(attn): 0.1621, norm(output): 0.9421, norm(x): 0.7840, norm(y): 1.0017, norm:0.6403, tok/sec: 97454.10, flops:102.29, batch-reuse:1
@ 5320 train 4.1478 , allloss: 4.1479, dt: 1308.55ms, fracRes: 0.7103, norm(attn): 0.1621, norm(output): 0.9420, norm(x): 0.7839, norm(y): 1.0017, norm:0.6168, tok/sec: 100165.79, flops:105.14, batch-reuse:1
@ 5321 train 4.0442 , allloss: 4.0442, dt: 1299.68ms, fracRes: 0.7099, norm(attn): 0.1621, norm(output): 0.9419, norm(x): 0.7839, norm(y): 1.0015, norm:0.5904, tok/sec: 100849.68, flops:105.86, batch-reuse:1
@ 5322 train 4.1541 , allloss: 4.1542, dt: 1309.99ms, fracRes: 0.7100, norm(attn): 0.1621, norm(output): 0.9421, norm(x): 0.7844, norm(y): 1.0013, norm:0.5720, tok/sec: 100055.40, flops:105.02, batch-reuse:1
@ 5323 train 4.1171 , allloss: 4.1172, dt: 1294.19ms, fracRes: 0.7100, norm(attn): 0.1621, norm(output): 0.9422, norm(x): 0.7853, norm(y): 1.0014, norm:0.6321, tok/sec: 101277.59, flops:106.30, batch-reuse:1
@ 5324 train 4.0812 , allloss: 4.0812, dt: 1287.43ms, fracRes: 0.7102, norm(attn): 0.1611, norm(output): 0.9424, norm(x): 0.7853, norm(y): 1.0016, norm:0.5775, tok/sec: 101809.38, flops:106.86, batch-reuse:1
@ 5325 train 4.0548 , allloss: 4.0548, dt: 1300.70ms, fracRes: 0.7103, norm(attn): 0.1641, norm(output): 0.9421, norm(x): 0.7845, norm(y): 1.0016, norm:0.5697, tok/sec: 100770.40, flops:105.77, batch-reuse:1
@ 5326 train 4.0661 , allloss: 4.0662, dt: 1305.69ms, fracRes: 0.7100, norm(attn): 0.1641, norm(output): 0.9421, norm(x): 0.7845, norm(y): 1.0013, norm:0.5418, tok/sec: 100384.99, flops:105.37, batch-reuse:1
@ 5327 train 3.9858 , allloss: 3.9859, dt: 1274.19ms, fracRes: 0.7102, norm(attn): 0.1650, norm(output): 0.9419, norm(x): 0.7839, norm(y): 1.0013, norm:0.6175, tok/sec: 102867.21, flops:107.97, batch-reuse:1
@ 5328 train 4.0455 , allloss: 4.0455, dt: 1288.16ms, fracRes: 0.7099, norm(attn): 0.1611, norm(output): 0.9421, norm(x): 0.7845, norm(y): 1.0014, norm:0.6018, tok/sec: 101751.55, flops:106.80, batch-reuse:1
@ 5329 train 4.1704 , allloss: 4.1704, dt: 1286.28ms, fracRes: 0.7100, norm(attn): 0.1602, norm(output): 0.9424, norm(x): 0.7849, norm(y): 1.0016, norm:0.5826, tok/sec: 101900.14, flops:106.96, batch-reuse:1
@ 5330 train 4.0577 , allloss: 4.0577, dt: 1340.15ms, fracRes: 0.7100, norm(attn): 0.1611, norm(output): 0.9422, norm(x): 0.7846, norm(y): 1.0016, norm:0.5258, tok/sec: 97804.33, flops:102.66, batch-reuse:1
@ 5331 train 4.1115 , allloss: 4.1115, dt: 1360.76ms, fracRes: 0.7101, norm(attn): 0.1621, norm(output): 0.9423, norm(x): 0.7846, norm(y): 1.0015, norm:0.5314, tok/sec: 96322.75, flops:101.10, batch-reuse:1
@ 5332 train 4.1059 , allloss: 4.1060, dt: 1327.04ms, fracRes: 0.7102, norm(attn): 0.1621, norm(output): 0.9420, norm(x): 0.7844, norm(y): 1.0014, norm:0.5003, tok/sec: 98769.95, flops:103.67, batch-reuse:1
@ 5333 train 4.0985 , allloss: 4.0993, dt: 1296.46ms, fracRes: 0.7101, norm(attn): 0.1621, norm(output): 0.9421, norm(x): 0.7849, norm(y): 1.0013, norm:0.5466, tok/sec: 101099.89, flops:106.12, batch-reuse:1
@ 5334 train 3.9935 , allloss: 3.9950, dt: 1303.77ms, fracRes: 0.7100, norm(attn): 0.1621, norm(output): 0.9422, norm(x): 0.7851, norm(y): 1.0015, norm:0.5388, tok/sec: 100533.21, flops:105.52, batch-reuse:1
@ 5335 train 4.0423 , allloss: 4.0430, dt: 1326.76ms, fracRes: 0.7099, norm(attn): 0.1621, norm(output): 0.9421, norm(x): 0.7845, norm(y): 1.0016, norm:0.5731, tok/sec: 98791.21, flops:103.69, batch-reuse:1
@ 5336 train 4.1029 , allloss: 4.1029, dt: 1329.29ms, fracRes: 0.7103, norm(attn): 0.1660, norm(output): 0.9420, norm(x): 0.7841, norm(y): 1.0016, norm:0.6607, tok/sec: 98603.11, flops:103.50, batch-reuse:1
@ 5337 train 4.0586 , allloss: 4.0586, dt: 1300.02ms, fracRes: 0.7101, norm(attn): 0.1641, norm(output): 0.9422, norm(x): 0.7851, norm(y): 1.0014, norm:0.5595, tok/sec: 100822.97, flops:105.83, batch-reuse:1
@ 5338 train 4.0613 , allloss: 4.0615, dt: 1302.72ms, fracRes: 0.7103, norm(attn): 0.1660, norm(output): 0.9417, norm(x): 0.7838, norm(y): 1.0014, norm:0.6503, tok/sec: 100614.20, flops:105.61, batch-reuse:1
@ 5339 train 4.2103 , allloss: 4.2103, dt: 1319.68ms, fracRes: 0.7101, norm(attn): 0.1611, norm(output): 0.9428, norm(x): 0.7861, norm(y): 1.0011, norm:0.8930, tok/sec: 99321.26, flops:104.25, batch-reuse:1
@ 5340 train 4.1226 , allloss: 4.1227, dt: 1368.66ms, fracRes: 0.7100, norm(attn): 0.1641, norm(output): 0.9425, norm(x): 0.7859, norm(y): 1.0013, norm:0.8221, tok/sec: 95766.86, flops:100.52, batch-reuse:1
@ 5341 train 4.1692 , allloss: 4.1693, dt: 1346.48ms, fracRes: 0.7098, norm(attn): 0.1650, norm(output): 0.9424, norm(x): 0.7855, norm(y): 1.0012, norm:0.6977, tok/sec: 97344.06, flops:102.18, batch-reuse:1
@ 5342 train 4.0683 , allloss: 4.0684, dt: 1340.60ms, fracRes: 0.7096, norm(attn): 0.1621, norm(output): 0.9423, norm(x): 0.7855, norm(y): 1.0013, norm:0.8053, tok/sec: 97771.15, flops:102.62, batch-reuse:1
@ 5343 train 3.9834 , allloss: 3.9842, dt: 1300.95ms, fracRes: 0.7099, norm(attn): 0.1641, norm(output): 0.9421, norm(x): 0.7846, norm(y): 1.0014, norm:0.9009, tok/sec: 100751.30, flops:105.75, batch-reuse:1
@ 5344 train 4.1296 , allloss: 4.1296, dt: 1310.79ms, fracRes: 0.7104, norm(attn): 0.1641, norm(output): 0.9420, norm(x): 0.7841, norm(y): 1.0014, norm:0.6661, tok/sec: 99994.40, flops:104.96, batch-reuse:1
@ 5345 train 4.0872 , allloss: 4.0872, dt: 1323.80ms, fracRes: 0.7101, norm(attn): 0.1660, norm(output): 0.9421, norm(x): 0.7848, norm(y): 1.0015, norm:0.6784, tok/sec: 99011.59, flops:103.93, batch-reuse:1
@ 5346 train 3.8443 , allloss: 3.8444, dt: 1277.15ms, fracRes: 0.7102, norm(attn): 0.1660, norm(output): 0.9418, norm(x): 0.7844, norm(y): 1.0015, norm:0.6574, tok/sec: 102628.71, flops:107.72, batch-reuse:1
@ 5347 train 4.0573 , allloss: 4.0576, dt: 1286.13ms, fracRes: 0.7101, norm(attn): 0.1641, norm(output): 0.9421, norm(x): 0.7849, norm(y): 1.0013, norm:0.6765, tok/sec: 101911.92, flops:106.97, batch-reuse:1
@ 5348 train 4.0357 , allloss: 4.0359, dt: 1296.86ms, fracRes: 0.7103, norm(attn): 0.1650, norm(output): 0.9415, norm(x): 0.7836, norm(y): 1.0013, norm:0.6975, tok/sec: 101068.72, flops:106.08, batch-reuse:1
@ 5349 train 4.1475 , allloss: 4.1478, dt: 1319.89ms, fracRes: 0.7102, norm(attn): 0.1660, norm(output): 0.9417, norm(x): 0.7829, norm(y): 1.0012, norm:0.8648, tok/sec: 99305.46, flops:104.23, batch-reuse:1
@ 5350 train 4.2333 , allloss: 4.2335, dt: 1349.56ms, fracRes: 0.7101, norm(attn): 0.1631, norm(output): 0.9420, norm(x): 0.7831, norm(y): 1.0011, norm:0.8123, tok/sec: 97122.09, flops:101.94, batch-reuse:1
@ 5351 train 3.9775 , allloss: 3.9776, dt: 1351.03ms, fracRes: 0.7102, norm(attn): 0.1641, norm(output): 0.9418, norm(x): 0.7831, norm(y): 1.0015, norm:0.8207, tok/sec: 97016.15, flops:101.83, batch-reuse:1
@ 5352 train 3.9933 , allloss: 3.9933, dt: 1355.41ms, fracRes: 0.7100, norm(attn): 0.1631, norm(output): 0.9419, norm(x): 0.7842, norm(y): 1.0014, norm:0.7629, tok/sec: 96702.99, flops:101.50, batch-reuse:1
@ 5353 train 3.9801 , allloss: 3.9801, dt: 1318.71ms, fracRes: 0.7100, norm(attn): 0.1650, norm(output): 0.9420, norm(x): 0.7851, norm(y): 1.0012, norm:0.6562, tok/sec: 99394.08, flops:104.33, batch-reuse:1
@ 5354 train 4.0378 , allloss: 4.0379, dt: 1289.27ms, fracRes: 0.7100, norm(attn): 0.1641, norm(output): 0.9418, norm(x): 0.7844, norm(y): 1.0009, norm:0.8699, tok/sec: 101664.04, flops:106.71, batch-reuse:1
@ 5355 train 3.9609 , allloss: 3.9611, dt: 1313.29ms, fracRes: 0.7101, norm(attn): 0.1650, norm(output): 0.9415, norm(x): 0.7835, norm(y): 1.0009, norm:0.6841, tok/sec: 99804.50, flops:104.76, batch-reuse:1
@ 5356 train 3.9888 , allloss: 3.9893, dt: 1320.32ms, fracRes: 0.7102, norm(attn): 0.1641, norm(output): 0.9414, norm(x): 0.7834, norm(y): 1.0013, norm:0.6553, tok/sec: 99272.61, flops:104.20, batch-reuse:1
@ 5357 train 3.9820 , allloss: 3.9824, dt: 1341.47ms, fracRes: 0.7102, norm(attn): 0.1641, norm(output): 0.9418, norm(x): 0.7842, norm(y): 1.0014, norm:0.6682, tok/sec: 97707.53, flops:102.56, batch-reuse:1
@ 5358 train 4.1448 , allloss: 4.1452, dt: 1298.67ms, fracRes: 0.7103, norm(attn): 0.1631, norm(output): 0.9419, norm(x): 0.7845, norm(y): 1.0014, norm:0.5498, tok/sec: 100927.65, flops:105.94, batch-reuse:1
@ 5359 train 4.1281 , allloss: 4.1282, dt: 1299.42ms, fracRes: 0.7105, norm(attn): 0.1621, norm(output): 0.9422, norm(x): 0.7849, norm(y): 1.0013, norm:0.7148, tok/sec: 100869.33, flops:105.88, batch-reuse:1
@ 5360 train 4.0050 , allloss: 4.0051, dt: 1311.22ms, fracRes: 0.7103, norm(attn): 0.1631, norm(output): 0.9420, norm(x): 0.7850, norm(y): 1.0010, norm:0.4922, tok/sec: 99962.07, flops:104.92, batch-reuse:1
@ 5361 train 4.0782 , allloss: 4.0784, dt: 1298.17ms, fracRes: 0.7103, norm(attn): 0.1641, norm(output): 0.9420, norm(x): 0.7851, norm(y): 1.0009, norm:0.7104, tok/sec: 100967.09, flops:105.98, batch-reuse:1
@ 5362 train 4.1158 , allloss: 4.1159, dt: 1308.87ms, fracRes: 0.7104, norm(attn): 0.1621, norm(output): 0.9418, norm(x): 0.7849, norm(y): 1.0012, norm:0.6202, tok/sec: 100141.28, flops:105.11, batch-reuse:1
@ 5363 train 4.0088 , allloss: 4.0088, dt: 1336.15ms, fracRes: 0.7102, norm(attn): 0.1631, norm(output): 0.9418, norm(x): 0.7850, norm(y): 1.0014, norm:0.6568, tok/sec: 98096.58, flops:102.97, batch-reuse:1
@ 5364 train 4.1624 , allloss: 4.1627, dt: 1282.43ms, fracRes: 0.7101, norm(attn): 0.1621, norm(output): 0.9419, norm(x): 0.7848, norm(y): 1.0015, norm:0.7951, tok/sec: 102206.22, flops:107.28, batch-reuse:1
@ 5365 train 3.8865 , allloss: 3.8865, dt: 1304.87ms, fracRes: 0.7100, norm(attn): 0.1660, norm(output): 0.9412, norm(x): 0.7840, norm(y): 1.0015, norm:0.6367, tok/sec: 100448.68, flops:105.43, batch-reuse:1
@ 5366 train 4.0443 , allloss: 4.0444, dt: 1322.82ms, fracRes: 0.7101, norm(attn): 0.1641, norm(output): 0.9413, norm(x): 0.7843, norm(y): 1.0014, norm:0.7553, tok/sec: 99085.33, flops:104.00, batch-reuse:1
@ 5367 train 4.0062 , allloss: 4.0062, dt: 1314.30ms, fracRes: 0.7100, norm(attn): 0.1641, norm(output): 0.9419, norm(x): 0.7856, norm(y): 1.0013, norm:0.7581, tok/sec: 99727.75, flops:104.68, batch-reuse:1
@ 5368 train 3.9433 , allloss: 3.9433, dt: 1303.00ms, fracRes: 0.7101, norm(attn): 0.1660, norm(output): 0.9420, norm(x): 0.7858, norm(y): 1.0013, norm:0.6262, tok/sec: 100592.67, flops:105.59, batch-reuse:1
@ 5369 train 4.0325 , allloss: 4.0326, dt: 1337.59ms, fracRes: 0.7099, norm(attn): 0.1641, norm(output): 0.9420, norm(x): 0.7861, norm(y): 1.0012, norm:0.5646, tok/sec: 97991.03, flops:102.85, batch-reuse:1
@ 5370 train 3.9417 , allloss: 3.9417, dt: 1336.32ms, fracRes: 0.7099, norm(attn): 0.1631, norm(output): 0.9419, norm(x): 0.7860, norm(y): 1.0013, norm:0.6072, tok/sec: 98084.49, flops:102.95, batch-reuse:1
@ 5371 train 4.0347 , allloss: 4.0347, dt: 1340.18ms, fracRes: 0.7100, norm(attn): 0.1621, norm(output): 0.9421, norm(x): 0.7861, norm(y): 1.0013, norm:0.4823, tok/sec: 97801.67, flops:102.66, batch-reuse:1
@ 5372 train 4.0234 , allloss: 4.0234, dt: 1315.55ms, fracRes: 0.7102, norm(attn): 0.1621, norm(output): 0.9418, norm(x): 0.7855, norm(y): 1.0015, norm:0.5351, tok/sec: 99632.67, flops:104.58, batch-reuse:1
@ 5373 train 4.1616 , allloss: 4.1616, dt: 1305.38ms, fracRes: 0.7101, norm(attn): 0.1611, norm(output): 0.9417, norm(x): 0.7854, norm(y): 1.0015, norm:0.6143, tok/sec: 100409.27, flops:105.39, batch-reuse:1
@ 5374 train 3.9494 , allloss: 3.9496, dt: 1328.56ms, fracRes: 0.7098, norm(attn): 0.1602, norm(output): 0.9417, norm(x): 0.7859, norm(y): 1.0014, norm:0.6973, tok/sec: 98657.52, flops:103.55, batch-reuse:1
@ 5375 train 3.9819 , allloss: 3.9820, dt: 1303.85ms, fracRes: 0.7098, norm(attn): 0.1602, norm(output): 0.9417, norm(x): 0.7859, norm(y): 1.0014, norm:0.6048, tok/sec: 100527.03, flops:105.52, batch-reuse:1
@ 5376 train 3.9513 , allloss: 3.9514, dt: 1294.66ms, fracRes: 0.7099, norm(attn): 0.1621, norm(output): 0.9416, norm(x): 0.7861, norm(y): 1.0014, norm:0.6212, tok/sec: 101240.57, flops:106.27, batch-reuse:1
@ 5377 train 4.0829 , allloss: 4.0832, dt: 1309.31ms, fracRes: 0.7101, norm(attn): 0.1592, norm(output): 0.9418, norm(x): 0.7864, norm(y): 1.0014, norm:0.6532, tok/sec: 100107.51, flops:105.08, batch-reuse:1
@ 5378 train 4.0045 , allloss: 4.0046, dt: 1291.43ms, fracRes: 0.7101, norm(attn): 0.1602, norm(output): 0.9418, norm(x): 0.7866, norm(y): 1.0012, norm:0.5766, tok/sec: 101493.45, flops:106.53, batch-reuse:1
@ 5379 train 3.9723 , allloss: 3.9724, dt: 1314.88ms, fracRes: 0.7100, norm(attn): 0.1621, norm(output): 0.9418, norm(x): 0.7861, norm(y): 1.0012, norm:0.6636, tok/sec: 99683.56, flops:104.63, batch-reuse:1
@ 5380 train 3.9574 , allloss: 3.9575, dt: 1300.49ms, fracRes: 0.7099, norm(attn): 0.1621, norm(output): 0.9417, norm(x): 0.7862, norm(y): 1.0012, norm:0.7059, tok/sec: 100786.76, flops:105.79, batch-reuse:1
@ 5381 train 3.9664 , allloss: 3.9664, dt: 1311.89ms, fracRes: 0.7100, norm(attn): 0.1621, norm(output): 0.9417, norm(x): 0.7864, norm(y): 1.0015, norm:0.5850, tok/sec: 99910.64, flops:104.87, batch-reuse:1
@ 5382 train 3.9039 , allloss: 3.9047, dt: 1291.13ms, fracRes: 0.7098, norm(attn): 0.1641, norm(output): 0.9416, norm(x): 0.7866, norm(y): 1.0015, norm:0.6460, tok/sec: 101517.59, flops:106.56, batch-reuse:1
@ 5383 train 4.0919 , allloss: 4.0919, dt: 1273.13ms, fracRes: 0.7098, norm(attn): 0.1621, norm(output): 0.9417, norm(x): 0.7863, norm(y): 1.0015, norm:0.7693, tok/sec: 102952.67, flops:108.06, batch-reuse:1
@ 5384 train 3.9788 , allloss: 3.9789, dt: 1298.31ms, fracRes: 0.7099, norm(attn): 0.1602, norm(output): 0.9422, norm(x): 0.7863, norm(y): 1.0015, norm:0.6725, tok/sec: 100955.54, flops:105.97, batch-reuse:1
@ 5385 train 4.0113 , allloss: 4.0114, dt: 1345.17ms, fracRes: 0.7100, norm(attn): 0.1611, norm(output): 0.9418, norm(x): 0.7860, norm(y): 1.0014, norm:0.6538, tok/sec: 97439.31, flops:102.28, batch-reuse:1
@ 5386 train 4.0002 , allloss: 4.0003, dt: 1319.48ms, fracRes: 0.7100, norm(attn): 0.1611, norm(output): 0.9417, norm(x): 0.7858, norm(y): 1.0013, norm:0.7150, tok/sec: 99336.41, flops:104.27, batch-reuse:1
@ 5387 train 3.9891 , allloss: 3.9892, dt: 1320.09ms, fracRes: 0.7100, norm(attn): 0.1621, norm(output): 0.9421, norm(x): 0.7863, norm(y): 1.0011, norm:0.5580, tok/sec: 99289.96, flops:104.22, batch-reuse:1
@ 5388 train 4.0185 , allloss: 4.0185, dt: 1323.40ms, fracRes: 0.7101, norm(attn): 0.1621, norm(output): 0.9418, norm(x): 0.7862, norm(y): 1.0011, norm:0.6182, tok/sec: 99041.97, flops:103.96, batch-reuse:1
@ 5389 train 4.3770 , allloss: 4.3774, dt: 1330.82ms, fracRes: 0.7102, norm(attn): 0.1621, norm(output): 0.9419, norm(x): 0.7855, norm(y): 1.0012, norm:0.7165, tok/sec: 98489.45, flops:103.38, batch-reuse:1
@ 5390 train 4.1931 , allloss: 4.1932, dt: 1311.07ms, fracRes: 0.7101, norm(attn): 0.1631, norm(output): 0.9418, norm(x): 0.7855, norm(y): 1.0014, norm:0.6349, tok/sec: 99972.93, flops:104.93, batch-reuse:1
@ 5391 train 4.0705 , allloss: 4.0706, dt: 1292.64ms, fracRes: 0.7100, norm(attn): 0.1650, norm(output): 0.9416, norm(x): 0.7856, norm(y): 1.0013, norm:0.6658, tok/sec: 101398.30, flops:106.43, batch-reuse:1
@ 5392 train 4.1336 , allloss: 4.1336, dt: 1320.02ms, fracRes: 0.7099, norm(attn): 0.1611, norm(output): 0.9418, norm(x): 0.7860, norm(y): 1.0013, norm:0.6948, tok/sec: 99295.61, flops:104.22, batch-reuse:1
@ 5393 train 4.1347 , allloss: 4.1348, dt: 1293.87ms, fracRes: 0.7100, norm(attn): 0.1602, norm(output): 0.9418, norm(x): 0.7856, norm(y): 1.0013, norm:0.6917, tok/sec: 101302.11, flops:106.33, batch-reuse:1
@ 5394 train 4.1034 , allloss: 4.1035, dt: 1287.15ms, fracRes: 0.7104, norm(attn): 0.1621, norm(output): 0.9415, norm(x): 0.7848, norm(y): 1.0015, norm:0.7132, tok/sec: 101831.49, flops:106.89, batch-reuse:1
@ 5395 train 4.3315 , allloss: 4.3342, dt: 1287.55ms, fracRes: 0.7100, norm(attn): 0.1611, norm(output): 0.9420, norm(x): 0.7855, norm(y): 1.0015, norm:0.7403, tok/sec: 101799.85, flops:106.85, batch-reuse:1
@ 5396 train 4.1871 , allloss: 4.1873, dt: 1314.71ms, fracRes: 0.7100, norm(attn): 0.1621, norm(output): 0.9418, norm(x): 0.7854, norm(y): 1.0014, norm:0.7623, tok/sec: 99696.54, flops:104.64, batch-reuse:1
@ 5397 train 4.2026 , allloss: 4.2033, dt: 1308.67ms, fracRes: 0.7103, norm(attn): 0.1602, norm(output): 0.9418, norm(x): 0.7854, norm(y): 1.0013, norm:0.6993, tok/sec: 100156.81, flops:105.13, batch-reuse:1
@ 5398 train 4.2166 , allloss: 4.2169, dt: 1328.87ms, fracRes: 0.7099, norm(attn): 0.1631, norm(output): 0.9420, norm(x): 0.7854, norm(y): 1.0011, norm:0.7538, tok/sec: 98634.12, flops:103.53, batch-reuse:1
@ 5399 train 4.2289 , allloss: 4.2294, dt: 1328.54ms, fracRes: 0.7102, norm(attn): 0.1650, norm(output): 0.9417, norm(x): 0.7846, norm(y): 1.0012, norm:0.7383, tok/sec: 98658.42, flops:103.56, batch-reuse:1
@ 5400 train 4.2012 , allloss: 4.2015, dt: 1289.36ms, fracRes: 0.7102, norm(attn): 0.1602, norm(output): 0.9421, norm(x): 0.7854, norm(y): 1.0013, norm:0.7632, tok/sec: 101656.33, flops:106.70, batch-reuse:1
@ 5401 train 4.1348 , allloss: 4.1349, dt: 1311.72ms, fracRes: 0.7103, norm(attn): 0.1611, norm(output): 0.9418, norm(x): 0.7849, norm(y): 1.0014, norm:0.6883, tok/sec: 99923.52, flops:104.88, batch-reuse:1
@ 5402 train 4.2332 , allloss: 4.2333, dt: 1300.67ms, fracRes: 0.7100, norm(attn): 0.1621, norm(output): 0.9418, norm(x): 0.7852, norm(y): 1.0015, norm:0.7845, tok/sec: 100773.04, flops:105.77, batch-reuse:1
@ 5403 train 4.1988 , allloss: 4.1992, dt: 1318.60ms, fracRes: 0.7101, norm(attn): 0.1621, norm(output): 0.9418, norm(x): 0.7856, norm(y): 1.0012, norm:0.5833, tok/sec: 99402.17, flops:104.34, batch-reuse:1
@ 5404 train 4.1083 , allloss: 4.1084, dt: 1319.97ms, fracRes: 0.7102, norm(attn): 0.1611, norm(output): 0.9421, norm(x): 0.7862, norm(y): 1.0009, norm:0.6674, tok/sec: 99299.41, flops:104.23, batch-reuse:1
@ 5405 train 4.1388 , allloss: 4.1423, dt: 1315.76ms, fracRes: 0.7102, norm(attn): 0.1611, norm(output): 0.9420, norm(x): 0.7859, norm(y): 1.0009, norm:0.6098, tok/sec: 99616.98, flops:104.56, batch-reuse:1
@ 5406 train 4.1950 , allloss: 4.1954, dt: 1296.16ms, fracRes: 0.7100, norm(attn): 0.1631, norm(output): 0.9419, norm(x): 0.7858, norm(y): 1.0010, norm:0.5823, tok/sec: 101123.25, flops:106.14, batch-reuse:1
@ 5407 train 4.1838 , allloss: 4.1839, dt: 1297.89ms, fracRes: 0.7101, norm(attn): 0.1621, norm(output): 0.9421, norm(x): 0.7858, norm(y): 1.0012, norm:0.6841, tok/sec: 100988.55, flops:106.00, batch-reuse:1
@ 5408 train 4.1582 , allloss: 4.1583, dt: 1296.78ms, fracRes: 0.7104, norm(attn): 0.1611, norm(output): 0.9418, norm(x): 0.7854, norm(y): 1.0013, norm:0.6806, tok/sec: 101074.96, flops:106.09, batch-reuse:1
@ 5409 train 4.1611 , allloss: 4.1612, dt: 1322.57ms, fracRes: 0.7103, norm(attn): 0.1602, norm(output): 0.9418, norm(x): 0.7858, norm(y): 1.0012, norm:0.6812, tok/sec: 99104.28, flops:104.02, batch-reuse:1
@ 5410 train 4.1187 , allloss: 4.1188, dt: 1319.02ms, fracRes: 0.7100, norm(attn): 0.1611, norm(output): 0.9418, norm(x): 0.7863, norm(y): 1.0011, norm:0.6661, tok/sec: 99370.54, flops:104.30, batch-reuse:1
@ 5411 train 4.2532 , allloss: 4.2533, dt: 1321.01ms, fracRes: 0.7099, norm(attn): 0.1602, norm(output): 0.9424, norm(x): 0.7871, norm(y): 1.0010, norm:0.7256, tok/sec: 99221.04, flops:104.15, batch-reuse:1
@ 5412 train 4.1041 , allloss: 4.1042, dt: 1283.78ms, fracRes: 0.7100, norm(attn): 0.1602, norm(output): 0.9421, norm(x): 0.7868, norm(y): 1.0010, norm:0.7537, tok/sec: 102098.26, flops:107.17, batch-reuse:1
@ 5413 train 4.0867 , allloss: 4.0867, dt: 1294.01ms, fracRes: 0.7102, norm(attn): 0.1602, norm(output): 0.9419, norm(x): 0.7865, norm(y): 1.0010, norm:0.7073, tok/sec: 101291.15, flops:106.32, batch-reuse:1
@ 5414 train 4.0562 , allloss: 4.0563, dt: 1318.10ms, fracRes: 0.7102, norm(attn): 0.1611, norm(output): 0.9422, norm(x): 0.7868, norm(y): 1.0009, norm:0.8422, tok/sec: 99439.78, flops:104.38, batch-reuse:1
@ 5415 train 4.0863 , allloss: 4.0863, dt: 1331.77ms, fracRes: 0.7100, norm(attn): 0.1621, norm(output): 0.9417, norm(x): 0.7861, norm(y): 1.0008, norm:0.8594, tok/sec: 98419.58, flops:103.30, batch-reuse:1
@ 5416 train 4.1617 , allloss: 4.1617, dt: 1343.91ms, fracRes: 0.7099, norm(attn): 0.1621, norm(output): 0.9416, norm(x): 0.7859, norm(y): 1.0010, norm:0.7074, tok/sec: 97530.34, flops:102.37, batch-reuse:1
@ 5417 train 4.1804 , allloss: 4.1804, dt: 1337.17ms, fracRes: 0.7101, norm(attn): 0.1611, norm(output): 0.9420, norm(x): 0.7862, norm(y): 1.0012, norm:0.7463, tok/sec: 98022.07, flops:102.89, batch-reuse:1
@ 5418 train 4.1221 , allloss: 4.1222, dt: 1305.85ms, fracRes: 0.7101, norm(attn): 0.1611, norm(output): 0.9422, norm(x): 0.7865, norm(y): 1.0011, norm:0.6327, tok/sec: 100373.06, flops:105.35, batch-reuse:1
@ 5419 train 4.1568 , allloss: 4.1570, dt: 1315.17ms, fracRes: 0.7098, norm(attn): 0.1602, norm(output): 0.9423, norm(x): 0.7869, norm(y): 1.0010, norm:0.7075, tok/sec: 99661.55, flops:104.61, batch-reuse:1
@ 5420 train 4.1191 , allloss: 4.1193, dt: 1331.90ms, fracRes: 0.7098, norm(attn): 0.1621, norm(output): 0.9423, norm(x): 0.7872, norm(y): 1.0009, norm:0.6176, tok/sec: 98409.82, flops:103.29, batch-reuse:1
@ 5421 train 4.1781 , allloss: 4.1784, dt: 1303.85ms, fracRes: 0.7102, norm(attn): 0.1611, norm(output): 0.9425, norm(x): 0.7873, norm(y): 1.0011, norm:0.7101, tok/sec: 100526.98, flops:105.52, batch-reuse:1
@ 5422 train 4.1492 , allloss: 4.1495, dt: 1321.69ms, fracRes: 0.7104, norm(attn): 0.1611, norm(output): 0.9420, norm(x): 0.7866, norm(y): 1.0011, norm:0.6257, tok/sec: 99169.73, flops:104.09, batch-reuse:1
@ 5423 train 4.3170 , allloss: 4.3171, dt: 1318.92ms, fracRes: 0.7102, norm(attn): 0.1592, norm(output): 0.9424, norm(x): 0.7870, norm(y): 1.0012, norm:0.6953, tok/sec: 99378.38, flops:104.31, batch-reuse:1
@ 5424 train 4.1995 , allloss: 4.1995, dt: 1331.36ms, fracRes: 0.7102, norm(attn): 0.1621, norm(output): 0.9417, norm(x): 0.7861, norm(y): 1.0014, norm:0.9175, tok/sec: 98449.35, flops:103.34, batch-reuse:1
@ 5425 train 4.0959 , allloss: 4.0959, dt: 1324.83ms, fracRes: 0.7100, norm(attn): 0.1621, norm(output): 0.9418, norm(x): 0.7866, norm(y): 1.0013, norm:0.6728, tok/sec: 98934.74, flops:103.85, batch-reuse:1
@ 5426 train 4.1098 , allloss: 4.1099, dt: 1279.18ms, fracRes: 0.7101, norm(attn): 0.1582, norm(output): 0.9421, norm(x): 0.7868, norm(y): 1.0012, norm:0.7356, tok/sec: 102466.00, flops:107.55, batch-reuse:1
@ 5427 train 4.0938 , allloss: 4.0938, dt: 1305.03ms, fracRes: 0.7101, norm(attn): 0.1602, norm(output): 0.9419, norm(x): 0.7863, norm(y): 1.0010, norm:0.6440, tok/sec: 100435.63, flops:105.42, batch-reuse:1
@ 5428 train 4.0565 , allloss: 4.0566, dt: 1289.13ms, fracRes: 0.7098, norm(attn): 0.1611, norm(output): 0.9420, norm(x): 0.7863, norm(y): 1.0009, norm:0.6201, tok/sec: 101674.94, flops:106.72, batch-reuse:1
@ 5429 train 4.1709 , allloss: 4.1709, dt: 1307.88ms, fracRes: 0.7097, norm(attn): 0.1602, norm(output): 0.9427, norm(x): 0.7878, norm(y): 1.0011, norm:0.9084, tok/sec: 100217.22, flops:105.19, batch-reuse:1
@ 5430 train 4.2547 , allloss: 4.2547, dt: 1300.95ms, fracRes: 0.7098, norm(attn): 0.1621, norm(output): 0.9419, norm(x): 0.7865, norm(y): 1.0012, norm:0.8429, tok/sec: 100751.37, flops:105.75, batch-reuse:1
@ 5431 train 4.1590 , allloss: 4.1590, dt: 1294.50ms, fracRes: 0.7102, norm(attn): 0.1621, norm(output): 0.9416, norm(x): 0.7859, norm(y): 1.0013, norm:0.6923, tok/sec: 101252.67, flops:106.28, batch-reuse:1
@ 5432 train 4.1997 , allloss: 4.1998, dt: 1306.15ms, fracRes: 0.7103, norm(attn): 0.1611, norm(output): 0.9418, norm(x): 0.7864, norm(y): 1.0012, norm:0.9205, tok/sec: 100349.85, flops:105.33, batch-reuse:1
@ 5433 train 4.1430 , allloss: 4.1431, dt: 1295.22ms, fracRes: 0.7102, norm(attn): 0.1611, norm(output): 0.9421, norm(x): 0.7871, norm(y): 1.0009, norm:0.6233, tok/sec: 101197.07, flops:106.22, batch-reuse:1
@ 5434 train 4.2019 , allloss: 4.2020, dt: 1283.24ms, fracRes: 0.7101, norm(attn): 0.1621, norm(output): 0.9422, norm(x): 0.7877, norm(y): 1.0008, norm:0.8202, tok/sec: 102141.75, flops:107.21, batch-reuse:1
@ 5435 train 4.1964 , allloss: 4.1969, dt: 1312.22ms, fracRes: 0.7103, norm(attn): 0.1602, norm(output): 0.9423, norm(x): 0.7873, norm(y): 1.0008, norm:0.6786, tok/sec: 99885.43, flops:104.84, batch-reuse:1
@ 5436 train 4.1255 , allloss: 4.1255, dt: 1313.79ms, fracRes: 0.7104, norm(attn): 0.1572, norm(output): 0.9420, norm(x): 0.7866, norm(y): 1.0008, norm:0.6425, tok/sec: 99766.12, flops:104.72, batch-reuse:1
@ 5437 train 4.0857 , allloss: 4.0860, dt: 1314.51ms, fracRes: 0.7104, norm(attn): 0.1592, norm(output): 0.9419, norm(x): 0.7856, norm(y): 1.0010, norm:0.6090, tok/sec: 99711.69, flops:104.66, batch-reuse:1
@ 5438 train 4.0899 , allloss: 4.0899, dt: 1279.97ms, fracRes: 0.7102, norm(attn): 0.1621, norm(output): 0.9419, norm(x): 0.7855, norm(y): 1.0010, norm:0.6466, tok/sec: 102402.39, flops:107.48, batch-reuse:1
@ 5439 train 4.1336 , allloss: 4.1338, dt: 1303.50ms, fracRes: 0.7100, norm(attn): 0.1631, norm(output): 0.9419, norm(x): 0.7862, norm(y): 1.0009, norm:0.5863, tok/sec: 100554.16, flops:105.54, batch-reuse:1
@ 5440 train 4.1493 , allloss: 4.1493, dt: 1305.70ms, fracRes: 0.7102, norm(attn): 0.1611, norm(output): 0.9421, norm(x): 0.7867, norm(y): 1.0007, norm:0.5766, tok/sec: 100384.26, flops:105.37, batch-reuse:1
@ 5441 train 4.1337 , allloss: 4.1337, dt: 1317.37ms, fracRes: 0.7103, norm(attn): 0.1611, norm(output): 0.9421, norm(x): 0.7864, norm(y): 1.0006, norm:0.5773, tok/sec: 99495.55, flops:104.43, batch-reuse:1
@ 5442 train 4.3038 , allloss: 4.3039, dt: 1299.50ms, fracRes: 0.7104, norm(attn): 0.1592, norm(output): 0.9424, norm(x): 0.7863, norm(y): 1.0008, norm:0.6818, tok/sec: 100863.74, flops:105.87, batch-reuse:1
@ 5443 train 4.1501 , allloss: 4.1502, dt: 1310.14ms, fracRes: 0.7103, norm(attn): 0.1602, norm(output): 0.9422, norm(x): 0.7863, norm(y): 1.0008, norm:0.8404, tok/sec: 100044.10, flops:105.01, batch-reuse:1
@ 5444 train 4.2692 , allloss: 4.2714, dt: 1303.41ms, fracRes: 0.7104, norm(attn): 0.1621, norm(output): 0.9420, norm(x): 0.7864, norm(y): 1.0007, norm:0.5976, tok/sec: 100561.11, flops:105.55, batch-reuse:1
@ 5445 train 4.1226 , allloss: 4.1234, dt: 1312.37ms, fracRes: 0.7103, norm(attn): 0.1611, norm(output): 0.9418, norm(x): 0.7866, norm(y): 1.0008, norm:0.6723, tok/sec: 99874.09, flops:104.83, batch-reuse:1
@ 5446 train 4.2140 , allloss: 4.2141, dt: 1296.14ms, fracRes: 0.7101, norm(attn): 0.1582, norm(output): 0.9424, norm(x): 0.7876, norm(y): 1.0008, norm:0.6039, tok/sec: 101124.66, flops:106.14, batch-reuse:1
@ 5447 train 4.2092 , allloss: 4.2101, dt: 1291.79ms, fracRes: 0.7103, norm(attn): 0.1631, norm(output): 0.9423, norm(x): 0.7865, norm(y): 1.0008, norm:0.7913, tok/sec: 101465.26, flops:106.50, batch-reuse:1
@ 5448 train 4.2210 , allloss: 4.2210, dt: 1283.01ms, fracRes: 0.7102, norm(attn): 0.1602, norm(output): 0.9426, norm(x): 0.7877, norm(y): 1.0006, norm:0.8121, tok/sec: 102159.73, flops:107.23, batch-reuse:1
@ 5449 train 4.1057 , allloss: 4.1071, dt: 1298.78ms, fracRes: 0.7102, norm(attn): 0.1592, norm(output): 0.9423, norm(x): 0.7874, norm(y): 1.0005, norm:0.6131, tok/sec: 100919.33, flops:105.93, batch-reuse:1
@ 5450 train 4.1036 , allloss: 4.1038, dt: 1275.99ms, fracRes: 0.7103, norm(attn): 0.1602, norm(output): 0.9420, norm(x): 0.7867, norm(y): 1.0005, norm:0.6573, tok/sec: 102722.06, flops:107.82, batch-reuse:1
@ 5451 train 4.1193 , allloss: 4.1194, dt: 1300.92ms, fracRes: 0.7104, norm(attn): 0.1602, norm(output): 0.9418, norm(x): 0.7863, norm(y): 1.0007, norm:0.6470, tok/sec: 100753.28, flops:105.75, batch-reuse:1
@ 5452 train 4.1026 , allloss: 4.1027, dt: 1275.98ms, fracRes: 0.7101, norm(attn): 0.1602, norm(output): 0.9421, norm(x): 0.7873, norm(y): 1.0007, norm:0.6775, tok/sec: 102722.94, flops:107.82, batch-reuse:1
@ 5453 train 4.2311 , allloss: 4.2322, dt: 1310.71ms, fracRes: 0.7102, norm(attn): 0.1602, norm(output): 0.9424, norm(x): 0.7873, norm(y): 1.0006, norm:0.5693, tok/sec: 100001.04, flops:104.96, batch-reuse:1
@ 5454 train 4.1786 , allloss: 4.1786, dt: 1333.09ms, fracRes: 0.7103, norm(attn): 0.1611, norm(output): 0.9424, norm(x): 0.7870, norm(y): 1.0007, norm:0.6156, tok/sec: 98322.31, flops:103.20, batch-reuse:1
@ 5455 train 4.3132 , allloss: 4.3133, dt: 1348.11ms, fracRes: 0.7104, norm(attn): 0.1582, norm(output): 0.9426, norm(x): 0.7872, norm(y): 1.0007, norm:0.8804, tok/sec: 97226.22, flops:102.05, batch-reuse:1
@ 5456 train 4.1682 , allloss: 4.1683, dt: 1329.92ms, fracRes: 0.7100, norm(attn): 0.1602, norm(output): 0.9423, norm(x): 0.7875, norm(y): 1.0006, norm:0.8328, tok/sec: 98556.53, flops:103.45, batch-reuse:1
@ 5457 train 4.1179 , allloss: 4.1187, dt: 1324.10ms, fracRes: 0.7101, norm(attn): 0.1602, norm(output): 0.9421, norm(x): 0.7875, norm(y): 1.0008, norm:0.5968, tok/sec: 98989.16, flops:103.90, batch-reuse:1
@ 5458 train 4.1152 , allloss: 4.1155, dt: 1313.10ms, fracRes: 0.7101, norm(attn): 0.1602, norm(output): 0.9421, norm(x): 0.7877, norm(y): 1.0010, norm:0.6099, tok/sec: 99818.87, flops:104.77, batch-reuse:1
@ 5459 train 4.1578 , allloss: 4.1582, dt: 1327.11ms, fracRes: 0.7100, norm(attn): 0.1611, norm(output): 0.9423, norm(x): 0.7876, norm(y): 1.0010, norm:0.6440, tok/sec: 98765.09, flops:103.67, batch-reuse:1
@ 5460 train 4.1251 , allloss: 4.1255, dt: 1334.52ms, fracRes: 0.7102, norm(attn): 0.1582, norm(output): 0.9423, norm(x): 0.7875, norm(y): 1.0008, norm:0.5206, tok/sec: 98216.42, flops:103.09, batch-reuse:1
@ 5461 train 4.2951 , allloss: 4.2956, dt: 1323.15ms, fracRes: 0.7103, norm(attn): 0.1592, norm(output): 0.9420, norm(x): 0.7870, norm(y): 1.0007, norm:0.6685, tok/sec: 99060.85, flops:103.98, batch-reuse:1
@ 5462 train 4.1561 , allloss: 4.1568, dt: 1308.18ms, fracRes: 0.7102, norm(attn): 0.1582, norm(output): 0.9424, norm(x): 0.7877, norm(y): 1.0006, norm:0.5528, tok/sec: 100193.83, flops:105.17, batch-reuse:1
@ 5463 train 4.2106 , allloss: 4.2107, dt: 1293.75ms, fracRes: 0.7101, norm(attn): 0.1592, norm(output): 0.9427, norm(x): 0.7882, norm(y): 1.0008, norm:0.6357, tok/sec: 101311.59, flops:106.34, batch-reuse:1
@ 5464 train 4.1427 , allloss: 4.1428, dt: 1347.32ms, fracRes: 0.7102, norm(attn): 0.1592, norm(output): 0.9424, norm(x): 0.7880, norm(y): 1.0009, norm:0.6842, tok/sec: 97283.15, flops:102.11, batch-reuse:1
@ 5465 train 4.1202 , allloss: 4.1205, dt: 1341.70ms, fracRes: 0.7104, norm(attn): 0.1582, norm(output): 0.9423, norm(x): 0.7879, norm(y): 1.0009, norm:0.5099, tok/sec: 97691.00, flops:102.54, batch-reuse:1
@ 5466 train 4.1243 , allloss: 4.1244, dt: 1314.08ms, fracRes: 0.7103, norm(attn): 0.1592, norm(output): 0.9422, norm(x): 0.7873, norm(y): 1.0008, norm:0.5853, tok/sec: 99744.54, flops:104.70, batch-reuse:1
@ 5467 train 4.1336 , allloss: 4.1337, dt: 1341.86ms, fracRes: 0.7101, norm(attn): 0.1582, norm(output): 0.9424, norm(x): 0.7876, norm(y): 1.0005, norm:0.5752, tok/sec: 97679.60, flops:102.53, batch-reuse:1
@ 5468 train 4.1258 , allloss: 4.1258, dt: 1342.78ms, fracRes: 0.7102, norm(attn): 0.1582, norm(output): 0.9426, norm(x): 0.7877, norm(y): 1.0004, norm:0.5836, tok/sec: 97612.44, flops:102.46, batch-reuse:1
@ 5469 train 4.1387 , allloss: 4.1389, dt: 1306.95ms, fracRes: 0.7102, norm(attn): 0.1592, norm(output): 0.9425, norm(x): 0.7876, norm(y): 1.0006, norm:0.5744, tok/sec: 100288.58, flops:105.27, batch-reuse:1
@ 5470 train 4.1710 , allloss: 4.1712, dt: 1337.21ms, fracRes: 0.7102, norm(attn): 0.1592, norm(output): 0.9424, norm(x): 0.7876, norm(y): 1.0008, norm:0.6674, tok/sec: 98019.35, flops:102.88, batch-reuse:1
@ 5471 train 4.1000 , allloss: 4.1000, dt: 1330.92ms, fracRes: 0.7103, norm(attn): 0.1582, norm(output): 0.9421, norm(x): 0.7873, norm(y): 1.0009, norm:0.5317, tok/sec: 98482.47, flops:103.37, batch-reuse:1
@ 5472 train 4.1974 , allloss: 4.1974, dt: 1303.90ms, fracRes: 0.7106, norm(attn): 0.1572, norm(output): 0.9422, norm(x): 0.7870, norm(y): 1.0008, norm:0.6443, tok/sec: 100523.10, flops:105.51, batch-reuse:1
@ 5473 train 4.1669 , allloss: 4.1669, dt: 1303.41ms, fracRes: 0.7102, norm(attn): 0.1582, norm(output): 0.9422, norm(x): 0.7874, norm(y): 1.0006, norm:0.6357, tok/sec: 100561.07, flops:105.55, batch-reuse:1
@ 5474 train 4.1545 , allloss: 4.1550, dt: 1315.67ms, fracRes: 0.7100, norm(attn): 0.1592, norm(output): 0.9423, norm(x): 0.7879, norm(y): 1.0005, norm:0.6588, tok/sec: 99623.98, flops:104.57, batch-reuse:1
@ 5475 train 4.0862 , allloss: 4.0867, dt: 1319.44ms, fracRes: 0.7101, norm(attn): 0.1611, norm(output): 0.9423, norm(x): 0.7875, norm(y): 1.0006, norm:0.6314, tok/sec: 99339.00, flops:104.27, batch-reuse:1
@ 5476 train 4.1473 , allloss: 4.1475, dt: 1309.77ms, fracRes: 0.7101, norm(attn): 0.1592, norm(output): 0.9423, norm(x): 0.7883, norm(y): 1.0008, norm:0.5665, tok/sec: 100072.34, flops:105.04, batch-reuse:1
@ 5477 train 4.1130 , allloss: 4.1131, dt: 1301.93ms, fracRes: 0.7098, norm(attn): 0.1582, norm(output): 0.9423, norm(x): 0.7886, norm(y): 1.0007, norm:0.6346, tok/sec: 100675.06, flops:105.67, batch-reuse:1
@ 5478 train 4.0571 , allloss: 4.0572, dt: 1291.44ms, fracRes: 0.7098, norm(attn): 0.1602, norm(output): 0.9421, norm(x): 0.7881, norm(y): 1.0007, norm:0.4948, tok/sec: 101493.30, flops:106.53, batch-reuse:1
@ 5479 train 4.1708 , allloss: 4.1723, dt: 1299.29ms, fracRes: 0.7102, norm(attn): 0.1631, norm(output): 0.9420, norm(x): 0.7870, norm(y): 1.0010, norm:0.7132, tok/sec: 100879.94, flops:105.89, batch-reuse:1
@ 5480 train 4.0725 , allloss: 4.0730, dt: 1291.26ms, fracRes: 0.7101, norm(attn): 0.1602, norm(output): 0.9419, norm(x): 0.7878, norm(y): 1.0009, norm:0.7978, tok/sec: 101507.41, flops:106.55, batch-reuse:1
@ 5481 train 4.1483 , allloss: 4.1490, dt: 1301.69ms, fracRes: 0.7098, norm(attn): 0.1602, norm(output): 0.9424, norm(x): 0.7886, norm(y): 1.0007, norm:0.7874, tok/sec: 100693.36, flops:105.69, batch-reuse:1
@ 5482 train 4.0731 , allloss: 4.0823, dt: 1310.35ms, fracRes: 0.7096, norm(attn): 0.1611, norm(output): 0.9423, norm(x): 0.7886, norm(y): 1.0006, norm:0.8164, tok/sec: 100028.20, flops:104.99, batch-reuse:1
@ 5483 train 4.0535 , allloss: 4.0537, dt: 1345.05ms, fracRes: 0.7097, norm(attn): 0.1602, norm(output): 0.9423, norm(x): 0.7885, norm(y): 1.0006, norm:0.6393, tok/sec: 97447.72, flops:102.28, batch-reuse:1
@ 5484 train 4.1015 , allloss: 4.1020, dt: 1320.15ms, fracRes: 0.7100, norm(attn): 0.1592, norm(output): 0.9423, norm(x): 0.7883, norm(y): 1.0007, norm:0.6437, tok/sec: 99285.55, flops:104.21, batch-reuse:1
@ 5485 train 4.1044 , allloss: 4.1045, dt: 1290.99ms, fracRes: 0.7104, norm(attn): 0.1592, norm(output): 0.9422, norm(x): 0.7882, norm(y): 1.0007, norm:0.5949, tok/sec: 101528.22, flops:106.57, batch-reuse:1
@ 5486 train 4.1455 , allloss: 4.1457, dt: 1300.80ms, fracRes: 0.7100, norm(attn): 0.1602, norm(output): 0.9423, norm(x): 0.7885, norm(y): 1.0005, norm:0.6315, tok/sec: 100762.42, flops:105.76, batch-reuse:1
@ 5487 train 4.0715 , allloss: 4.0716, dt: 1282.15ms, fracRes: 0.7098, norm(attn): 0.1602, norm(output): 0.9423, norm(x): 0.7885, norm(y): 1.0003, norm:0.6432, tok/sec: 102228.55, flops:107.30, batch-reuse:1
@ 5488 train 4.0990 , allloss: 4.0991, dt: 1291.42ms, fracRes: 0.7097, norm(attn): 0.1602, norm(output): 0.9424, norm(x): 0.7890, norm(y): 1.0004, norm:0.6177, tok/sec: 101494.48, flops:106.53, batch-reuse:1
@ 5489 train 4.0656 , allloss: 4.0657, dt: 1280.62ms, fracRes: 0.7099, norm(attn): 0.1582, norm(output): 0.9426, norm(x): 0.7891, norm(y): 1.0006, norm:0.6147, tok/sec: 102350.59, flops:107.43, batch-reuse:1
@ 5490 train 4.0745 , allloss: 4.0745, dt: 1302.23ms, fracRes: 0.7100, norm(attn): 0.1602, norm(output): 0.9426, norm(x): 0.7888, norm(y): 1.0009, norm:0.6234, tok/sec: 100651.84, flops:105.65, batch-reuse:1
@ 5491 train 4.0900 , allloss: 4.0901, dt: 1306.55ms, fracRes: 0.7098, norm(attn): 0.1602, norm(output): 0.9422, norm(x): 0.7887, norm(y): 1.0009, norm:0.5952, tok/sec: 100318.81, flops:105.30, batch-reuse:1
@ 5492 train 4.1963 , allloss: 4.1965, dt: 1326.56ms, fracRes: 0.7097, norm(attn): 0.1602, norm(output): 0.9421, norm(x): 0.7887, norm(y): 1.0007, norm:0.5892, tok/sec: 98806.15, flops:103.71, batch-reuse:1
@ 5493 train 4.0015 , allloss: 4.0016, dt: 1324.16ms, fracRes: 0.7100, norm(attn): 0.1602, norm(output): 0.9423, norm(x): 0.7890, norm(y): 1.0007, norm:0.6644, tok/sec: 98984.67, flops:103.90, batch-reuse:1
@ 5494 train 4.1249 , allloss: 4.1251, dt: 1351.96ms, fracRes: 0.7100, norm(attn): 0.1572, norm(output): 0.9425, norm(x): 0.7894, norm(y): 1.0006, norm:0.6616, tok/sec: 96949.70, flops:101.76, batch-reuse:1
@ 5495 train 4.0931 , allloss: 4.0932, dt: 1334.87ms, fracRes: 0.7099, norm(attn): 0.1592, norm(output): 0.9425, norm(x): 0.7893, norm(y): 1.0006, norm:0.5393, tok/sec: 98191.09, flops:103.06, batch-reuse:1
@ 5496 train 4.0488 , allloss: 4.0489, dt: 1332.88ms, fracRes: 0.7099, norm(attn): 0.1611, norm(output): 0.9424, norm(x): 0.7888, norm(y): 1.0007, norm:0.5315, tok/sec: 98337.54, flops:103.22, batch-reuse:1
@ 5497 train 4.0467 , allloss: 4.0471, dt: 1340.84ms, fracRes: 0.7100, norm(attn): 0.1592, norm(output): 0.9421, norm(x): 0.7886, norm(y): 1.0008, norm:0.5879, tok/sec: 97753.66, flops:102.61, batch-reuse:1
@ 5498 train 4.0067 , allloss: 4.0068, dt: 1343.10ms, fracRes: 0.7101, norm(attn): 0.1602, norm(output): 0.9420, norm(x): 0.7885, norm(y): 1.0008, norm:0.5128, tok/sec: 97588.96, flops:102.43, batch-reuse:1
@ 5499 train 4.1118 , allloss: 4.1118, dt: 1294.91ms, fracRes: 0.7103, norm(attn): 0.1602, norm(output): 0.9423, norm(x): 0.7889, norm(y): 1.0009, norm:0.6125, tok/sec: 101220.81, flops:106.24, batch-reuse:1
@ 5500 train 4.0880 , allloss: 4.0884, dt: 1287.28ms, fracRes: 0.7102, norm(attn): 0.1582, norm(output): 0.9422, norm(x): 0.7888, norm(y): 1.0007, norm:0.7610, tok/sec: 101821.00, flops:106.87, batch-reuse:1
@ 5501 train 4.1120 , allloss: 4.1137, dt: 1303.30ms, fracRes: 0.7107, norm(attn): 0.1631, norm(output): 0.9415, norm(x): 0.7873, norm(y): 1.0009, norm:0.8287, tok/sec: 100569.29, flops:105.56, batch-reuse:1
@ 5502 train 4.0769 , allloss: 4.0771, dt: 1298.46ms, fracRes: 0.7104, norm(attn): 0.1582, norm(output): 0.9422, norm(x): 0.7887, norm(y): 1.0005, norm:0.8141, tok/sec: 100944.45, flops:105.95, batch-reuse:1
@ 5503 train 4.1581 , allloss: 4.1582, dt: 1282.81ms, fracRes: 0.7108, norm(attn): 0.1621, norm(output): 0.9421, norm(x): 0.7882, norm(y): 1.0008, norm:0.7696, tok/sec: 102175.90, flops:107.25, batch-reuse:1
@ 5504 train 4.0203 , allloss: 4.0203, dt: 1288.65ms, fracRes: 0.7103, norm(attn): 0.1611, norm(output): 0.9422, norm(x): 0.7893, norm(y): 1.0006, norm:0.9690, tok/sec: 101712.70, flops:106.76, batch-reuse:1
@ 5505 train 4.0802 , allloss: 4.0804, dt: 1334.26ms, fracRes: 0.7100, norm(attn): 0.1582, norm(output): 0.9425, norm(x): 0.7900, norm(y): 1.0006, norm:0.8201, tok/sec: 98236.01, flops:103.11, batch-reuse:1
@ 5506 train 4.0663 , allloss: 4.0663, dt: 1319.07ms, fracRes: 0.7101, norm(attn): 0.1592, norm(output): 0.9422, norm(x): 0.7885, norm(y): 1.0005, norm:0.7241, tok/sec: 99367.29, flops:104.30, batch-reuse:1
@ 5507 train 4.0719 , allloss: 4.0721, dt: 1305.68ms, fracRes: 0.7102, norm(attn): 0.1582, norm(output): 0.9423, norm(x): 0.7882, norm(y): 1.0006, norm:0.7109, tok/sec: 100385.73, flops:105.37, batch-reuse:1
@ 5508 train 4.1479 , allloss: 4.1482, dt: 1303.57ms, fracRes: 0.7105, norm(attn): 0.1582, norm(output): 0.9422, norm(x): 0.7879, norm(y): 1.0009, norm:0.6702, tok/sec: 100548.42, flops:105.54, batch-reuse:1
@ 5509 train 4.1100 , allloss: 4.1120, dt: 1310.49ms, fracRes: 0.7104, norm(attn): 0.1582, norm(output): 0.9424, norm(x): 0.7888, norm(y): 1.0008, norm:0.6947, tok/sec: 100017.32, flops:104.98, batch-reuse:1
@ 5510 train 4.0493 , allloss: 4.0493, dt: 1295.40ms, fracRes: 0.7105, norm(attn): 0.1602, norm(output): 0.9428, norm(x): 0.7893, norm(y): 1.0007, norm:0.7558, tok/sec: 101182.84, flops:106.20, batch-reuse:1
@ 5511 train 4.1110 , allloss: 4.1111, dt: 1320.37ms, fracRes: 0.7105, norm(attn): 0.1602, norm(output): 0.9424, norm(x): 0.7881, norm(y): 1.0004, norm:0.9643, tok/sec: 99269.34, flops:104.20, batch-reuse:1
@ 5512 train 4.1383 , allloss: 4.1386, dt: 1304.55ms, fracRes: 0.7105, norm(attn): 0.1602, norm(output): 0.9426, norm(x): 0.7879, norm(y): 1.0004, norm:0.6955, tok/sec: 100473.28, flops:105.46, batch-reuse:1
@ 5513 train 4.0253 , allloss: 4.0254, dt: 1323.52ms, fracRes: 0.7105, norm(attn): 0.1621, norm(output): 0.9421, norm(x): 0.7872, norm(y): 1.0006, norm:0.7028, tok/sec: 99032.51, flops:103.95, batch-reuse:1
@ 5514 train 4.0713 , allloss: 4.0723, dt: 1314.98ms, fracRes: 0.7103, norm(attn): 0.1621, norm(output): 0.9421, norm(x): 0.7876, norm(y): 1.0007, norm:0.7484, tok/sec: 99675.80, flops:104.62, batch-reuse:1
@ 5515 train 4.1160 , allloss: 4.1161, dt: 1299.19ms, fracRes: 0.7103, norm(attn): 0.1611, norm(output): 0.9425, norm(x): 0.7884, norm(y): 1.0005, norm:0.8293, tok/sec: 100887.47, flops:105.89, batch-reuse:1
@ 5516 train 4.1069 , allloss: 4.1070, dt: 1304.56ms, fracRes: 0.7103, norm(attn): 0.1592, norm(output): 0.9423, norm(x): 0.7883, norm(y): 1.0002, norm:0.6643, tok/sec: 100472.27, flops:105.46, batch-reuse:1
@ 5517 train 4.1275 , allloss: 4.1277, dt: 1327.58ms, fracRes: 0.7104, norm(attn): 0.1602, norm(output): 0.9423, norm(x): 0.7883, norm(y): 1.0002, norm:0.6520, tok/sec: 98729.79, flops:103.63, batch-reuse:1
@ 5518 train 4.1419 , allloss: 4.1419, dt: 1312.43ms, fracRes: 0.7106, norm(attn): 0.1592, norm(output): 0.9428, norm(x): 0.7885, norm(y): 1.0005, norm:0.5860, tok/sec: 99869.62, flops:104.83, batch-reuse:1
@ 5519 train 3.9824 , allloss: 3.9897, dt: 1318.18ms, fracRes: 0.7105, norm(attn): 0.1602, norm(output): 0.9422, norm(x): 0.7882, norm(y): 1.0006, norm:0.6828, tok/sec: 99434.28, flops:104.37, batch-reuse:1
@ 5520 train 3.9903 , allloss: 3.9913, dt: 1294.77ms, fracRes: 0.7105, norm(attn): 0.1592, norm(output): 0.9421, norm(x): 0.7881, norm(y): 1.0007, norm:0.5262, tok/sec: 101231.67, flops:106.26, batch-reuse:1
@ 5521 train 4.1715 , allloss: 4.1723, dt: 1290.27ms, fracRes: 0.7104, norm(attn): 0.1592, norm(output): 0.9420, norm(x): 0.7883, norm(y): 1.0008, norm:0.6147, tok/sec: 101584.59, flops:106.63, batch-reuse:1
@ 5522 train 4.1397 , allloss: 4.1398, dt: 1310.72ms, fracRes: 0.7103, norm(attn): 0.1582, norm(output): 0.9430, norm(x): 0.7897, norm(y): 1.0005, norm:0.5447, tok/sec: 99999.71, flops:104.96, batch-reuse:1
@ 5523 train 4.0858 , allloss: 4.0859, dt: 1334.06ms, fracRes: 0.7102, norm(attn): 0.1592, norm(output): 0.9428, norm(x): 0.7896, norm(y): 1.0003, norm:0.5651, tok/sec: 98250.63, flops:103.13, batch-reuse:1
@ 5524 train 4.0737 , allloss: 4.0745, dt: 1284.34ms, fracRes: 0.7102, norm(attn): 0.1602, norm(output): 0.9425, norm(x): 0.7893, norm(y): 1.0001, norm:0.5446, tok/sec: 102053.87, flops:107.12, batch-reuse:1
@ 5525 train 4.0357 , allloss: 4.0357, dt: 1301.81ms, fracRes: 0.7103, norm(attn): 0.1611, norm(output): 0.9423, norm(x): 0.7884, norm(y): 1.0001, norm:0.5138, tok/sec: 100684.71, flops:105.68, batch-reuse:1
@ 5526 train 4.1386 , allloss: 4.1387, dt: 1307.95ms, fracRes: 0.7102, norm(attn): 0.1602, norm(output): 0.9423, norm(x): 0.7883, norm(y): 1.0003, norm:0.5567, tok/sec: 100211.98, flops:105.19, batch-reuse:1
@ 5527 train 4.0586 , allloss: 4.0590, dt: 1280.62ms, fracRes: 0.7102, norm(attn): 0.1602, norm(output): 0.9422, norm(x): 0.7884, norm(y): 1.0005, norm:0.5358, tok/sec: 102350.04, flops:107.43, batch-reuse:1
@ 5528 train 4.1288 , allloss: 4.1293, dt: 1307.29ms, fracRes: 0.7103, norm(attn): 0.1592, norm(output): 0.9424, norm(x): 0.7890, norm(y): 1.0006, norm:0.5631, tok/sec: 100262.15, flops:105.24, batch-reuse:1
@ 5529 train 4.0045 , allloss: 4.0053, dt: 1306.39ms, fracRes: 0.7100, norm(attn): 0.1592, norm(output): 0.9425, norm(x): 0.7895, norm(y): 1.0003, norm:0.6143, tok/sec: 100331.68, flops:105.31, batch-reuse:1
@ 5530 train 4.0624 , allloss: 4.0626, dt: 1305.69ms, fracRes: 0.7103, norm(attn): 0.1582, norm(output): 0.9424, norm(x): 0.7892, norm(y): 1.0004, norm:0.5759, tok/sec: 100385.23, flops:105.37, batch-reuse:1
@ 5531 train 4.0266 , allloss: 4.0288, dt: 1289.55ms, fracRes: 0.7106, norm(attn): 0.1602, norm(output): 0.9424, norm(x): 0.7887, norm(y): 1.0005, norm:0.6019, tok/sec: 101641.99, flops:106.69, batch-reuse:1
@ 5532 train 4.0077 , allloss: 4.0077, dt: 1320.45ms, fracRes: 0.7104, norm(attn): 0.1582, norm(output): 0.9422, norm(x): 0.7889, norm(y): 1.0007, norm:0.7994, tok/sec: 99263.39, flops:104.19, batch-reuse:1
@ 5533 train 4.0250 , allloss: 4.0255, dt: 1309.17ms, fracRes: 0.7103, norm(attn): 0.1592, norm(output): 0.9420, norm(x): 0.7885, norm(y): 1.0007, norm:0.6381, tok/sec: 100118.23, flops:105.09, batch-reuse:1
@ 5534 train 4.0209 , allloss: 4.0212, dt: 1303.07ms, fracRes: 0.7104, norm(attn): 0.1592, norm(output): 0.9422, norm(x): 0.7886, norm(y): 1.0006, norm:0.5888, tok/sec: 100587.42, flops:105.58, batch-reuse:1
@ 5535 train 3.9342 , allloss: 3.9344, dt: 1317.65ms, fracRes: 0.7105, norm(attn): 0.1592, norm(output): 0.9423, norm(x): 0.7891, norm(y): 1.0006, norm:0.6016, tok/sec: 99474.35, flops:104.41, batch-reuse:1
@ 5536 train 4.0682 , allloss: 4.0684, dt: 1293.73ms, fracRes: 0.7102, norm(attn): 0.1582, norm(output): 0.9424, norm(x): 0.7899, norm(y): 1.0005, norm:0.5520, tok/sec: 101312.94, flops:106.34, batch-reuse:1
@ 5537 train 4.1684 , allloss: 4.1685, dt: 1302.30ms, fracRes: 0.7103, norm(attn): 0.1572, norm(output): 0.9423, norm(x): 0.7896, norm(y): 1.0005, norm:0.6246, tok/sec: 100646.90, flops:105.64, batch-reuse:1
@ 5538 train 4.0662 , allloss: 4.0668, dt: 1306.71ms, fracRes: 0.7102, norm(attn): 0.1582, norm(output): 0.9422, norm(x): 0.7895, norm(y): 1.0004, norm:0.7183, tok/sec: 100307.04, flops:105.29, batch-reuse:1
@ 5539 train 3.9555 , allloss: 3.9556, dt: 1292.61ms, fracRes: 0.7102, norm(attn): 0.1572, norm(output): 0.9425, norm(x): 0.7902, norm(y): 1.0004, norm:0.6296, tok/sec: 101400.67, flops:106.43, batch-reuse:1
@ 5540 train 4.0343 , allloss: 4.0350, dt: 1288.89ms, fracRes: 0.7102, norm(attn): 0.1582, norm(output): 0.9425, norm(x): 0.7899, norm(y): 1.0003, norm:0.6154, tok/sec: 101693.87, flops:106.74, batch-reuse:1
@ 5541 train 3.9795 , allloss: 3.9796, dt: 1296.33ms, fracRes: 0.7101, norm(attn): 0.1582, norm(output): 0.9423, norm(x): 0.7894, norm(y): 1.0004, norm:0.6372, tok/sec: 101109.78, flops:106.13, batch-reuse:1
@ 5542 train 3.9940 , allloss: 3.9940, dt: 1311.23ms, fracRes: 0.7100, norm(attn): 0.1572, norm(output): 0.9423, norm(x): 0.7893, norm(y): 1.0004, norm:0.6012, tok/sec: 99960.89, flops:104.92, batch-reuse:1
@ 5543 train 3.9538 , allloss: 3.9540, dt: 1308.58ms, fracRes: 0.7101, norm(attn): 0.1602, norm(output): 0.9421, norm(x): 0.7890, norm(y): 1.0004, norm:0.6026, tok/sec: 100163.38, flops:105.13, batch-reuse:1
@ 5544 train 3.9472 , allloss: 3.9472, dt: 1294.14ms, fracRes: 0.7100, norm(attn): 0.1582, norm(output): 0.9422, norm(x): 0.7894, norm(y): 1.0005, norm:0.5225, tok/sec: 101280.85, flops:106.31, batch-reuse:1
@ 5545 train 4.1759 , allloss: 4.1761, dt: 1319.10ms, fracRes: 0.7104, norm(attn): 0.1582, norm(output): 0.9425, norm(x): 0.7891, norm(y): 1.0005, norm:0.7334, tok/sec: 99364.55, flops:104.30, batch-reuse:1
@ 5546 train 3.9860 , allloss: 3.9867, dt: 1312.51ms, fracRes: 0.7103, norm(attn): 0.1582, norm(output): 0.9422, norm(x): 0.7890, norm(y): 1.0006, norm:0.7135, tok/sec: 99863.73, flops:104.82, batch-reuse:1
@ 5547 train 4.1059 , allloss: 4.1062, dt: 1302.86ms, fracRes: 0.7103, norm(attn): 0.1562, norm(output): 0.9427, norm(x): 0.7896, norm(y): 1.0005, norm:0.6837, tok/sec: 100603.03, flops:105.60, batch-reuse:1
@ 5548 train 3.9711 , allloss: 3.9713, dt: 1288.40ms, fracRes: 0.7102, norm(attn): 0.1572, norm(output): 0.9421, norm(x): 0.7884, norm(y): 1.0004, norm:0.6445, tok/sec: 101732.33, flops:106.78, batch-reuse:1
@ 5549 train 4.0135 , allloss: 4.0138, dt: 1303.36ms, fracRes: 0.7101, norm(attn): 0.1582, norm(output): 0.9421, norm(x): 0.7885, norm(y): 1.0006, norm:0.5998, tok/sec: 100564.97, flops:105.56, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0057, -0.0369, -0.0122,  ..., -0.0173,  0.0058,  0.0257],
        [ 0.0093, -0.0395, -0.0153,  ..., -0.0664, -0.0074,  0.0208],
        [ 0.0010, -0.0535,  0.0109,  ..., -0.0101,  0.0164,  0.0394],
        ...,
        [ 0.0237,  0.0670, -0.0158,  ...,  0.0038, -0.0335,  0.0036],
        [-0.0129, -0.0170,  0.0535,  ...,  0.0058,  0.0527,  0.0293],
        [ 0.0124, -0.0274,  0.0397,  ..., -0.0181,  0.0585, -0.0031]], device='cuda:0', requires_grad=True)
K: tensor([ 5.4062, -3.1250,  2.4531,  2.8125, -4.7500,  3.1875, -0.3066,  6.0938, -4.9062, -0.6875, -2.6250, -4.7188,  5.0312, -3.9375,  0.3496, -0.7266, -0.6406, -4.5625,  4.8438, -5.7812,  5.4375,  3.3906, -5.9688,  0.0194, -0.5078, -0.5195,  3.0625, -3.3750, -5.0625, -3.2344,  5.9375,  0.1924,
         3.2969,  4.4688, -0.9648, -4.0312,  2.8125,  2.7969, -3.2031, -3.7500,  4.6562, -2.1875, -1.1016, -1.5703, -4.1250, -1.7188,  0.7656,  4.2188, -0.9883,  0.4707,  3.8438, -4.6562, -5.5938,  5.0000,  3.4375, -2.1094,  4.3438,  2.4531, -0.7500, -2.7031, -2.3594,  0.9336, -1.2109, -2.1250],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0752,  0.0754, -0.0008,  ..., -0.0217, -0.0243, -0.0085],
        [-0.0626,  0.0824,  0.0024,  ...,  0.0242,  0.0040,  0.0232],
        [-0.0683,  0.0729, -0.0135,  ..., -0.0488, -0.0564,  0.0089],
        ...,
        [ 0.0318, -0.0102, -0.0032,  ...,  0.0186, -0.0130,  0.0076],
        [-0.0332,  0.0096, -0.0291,  ...,  0.0338,  0.0037,  0.0355],
        [-0.0146,  0.0372,  0.0160,  ...,  0.0026, -0.0128, -0.0397]], device='cuda:0', requires_grad=True)
Q: tensor([-1.9062,  6.1250, -7.1562, -4.8125,  3.9375, -4.5000, -2.4375, -5.5000,  5.3125, -5.4375,  1.8438,  4.4688, -6.6875,  4.7188, -6.6250,  4.0938,  3.8438,  5.3125, -4.3438,  6.7188, -4.2500, -5.0938,  5.5938, -4.8438, -2.5781, -4.7500, -6.3125,  2.7969,  4.2500,  7.6875, -5.0625, -5.5625,
        -7.7188, -4.2188, -2.7344,  2.3594, -8.7500, -3.9219,  5.1875,  2.7500, -2.9531,  0.5977,  5.4375, -1.0938,  5.0000,  3.1562, -5.3125, -6.3125,  6.5312,  0.7969, -3.4375,  5.9688,  4.7500, -5.7812, -3.0000,  0.1318, -2.9531,  2.6719, -1.7969,  8.8750,  1.9453, -4.1250,  4.9062,  6.3750],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[   0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000],
        [   0.0000,   73.0000,   85.0000,   81.5000,   61.7500,   59.7500,   51.5000,   68.5000,   65.5000,   55.2500,   56.5000,   76.5000,   51.2500,   60.0000,   67.5000],
        [   0.0000,  -60.5000,  -81.0000,  -77.5000,  -63.0000,  -60.2500,  -50.2500,  -59.7500,  -63.5000,  -55.5000,  -59.0000,  -70.0000,  -40.7500,  -59.0000,  -64.5000],
        [   0.0000,  -97.5000, -131.0000, -134.0000, -110.5000, -104.5000,  -86.5000,  -97.5000, -111.0000,  -94.0000, -104.5000, -118.5000,  -65.5000, -103.5000, -112.5000],
        [   0.0000, -115.5000, -155.0000, -158.0000, -130.0000, -124.0000, -102.0000, -114.0000, -131.0000, -111.5000, -124.0000, -138.0000,  -75.0000, -122.0000, -132.0000],
        [   0.0000,  -89.5000, -120.0000, -119.5000,  -98.5000,  -94.5000,  -78.5000,  -89.0000,  -99.5000,  -85.0000,  -93.0000, -106.0000,  -60.0000,  -92.5000, -100.0000],
        [   0.0000,  -89.5000, -121.5000, -122.0000, -101.0000,  -97.0000,  -79.5000,  -89.0000, -101.5000,  -86.5000,  -96.0000, -108.0000,  -59.2500,  -94.5000, -102.5000],
        [   0.0000,  -59.5000,  -83.0000,  -83.5000,  -71.5000,  -66.5000,  -56.2500,  -61.5000,  -71.0000,  -60.5000,  -66.5000,  -74.5000,  -41.7500,  -65.5000,  -71.0000],
        [   0.0000,  -94.0000, -128.0000, -130.0000, -107.5000, -102.5000,  -84.5000,  -93.5000, -108.0000,  -91.5000, -102.5000, -113.5000,  -61.0000, -100.5000, -108.5000],
        [   0.0000, -100.5000, -132.0000, -133.0000, -109.5000, -104.0000,  -86.0000,  -98.0000, -110.5000,  -93.5000, -104.0000, -118.0000,  -65.0000, -103.0000, -112.5000],
        [   0.0000, -106.0000, -141.0000, -143.0000, -116.5000, -111.5000,  -91.0000, -103.0000, -117.5000,  -99.5000, -111.5000, -124.5000,  -66.5000, -110.0000, -119.0000],
        [   0.0000,  -89.0000, -119.0000, -119.5000,  -99.0000,  -94.0000,  -77.5000,  -87.5000,  -99.0000,  -84.0000,  -93.0000, -106.0000,  -58.5000,  -92.5000, -100.5000],
        [   0.0000,  -59.7500,  -81.0000,  -81.0000,  -68.0000,  -64.0000,  -53.7500,  -60.0000,  -68.0000,  -57.7500,  -63.5000,  -73.0000,  -41.2500,  -63.2500,  -68.5000],
        [   0.0000,  -89.5000, -119.0000, -119.5000,  -97.5000,  -93.5000,  -77.0000,  -87.5000,  -98.5000,  -83.5000,  -93.0000, -104.5000,  -56.5000,  -92.5000, -100.0000],
        [   0.0000,  -94.0000, -125.5000, -127.0000, -105.0000,  -99.5000,  -82.5000,  -92.5000, -105.0000,  -89.5000,  -99.0000, -112.0000,  -61.2500,  -98.0000, -107.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9167],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0068,     0.9922,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7969,     0.1221,     0.0815,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0011,     0.0056,     0.0032,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0007,     0.0012,     0.0003,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9805,     0.0085,     0.0037,     0.0013,     0.0058,     0.0013,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9258,     0.0505,     0.0194,     0.0003,     0.0005,     0.0004,     0.0044,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7344,     0.0320,     0.1631,     0.0061,     0.0013,     0.0006,     0.0125,     0.0488,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0042,     0.0013,     0.0004,     0.0007,     0.0003,     0.0020,     0.0036,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7500,     0.0100,     0.0361,     0.0016,     0.0008,     0.0003,     0.0017,     0.0349,     0.0001,     0.1641,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8984,     0.0134,     0.0259,     0.0025,     0.0048,     0.0010,     0.0132,     0.0198,     0.0029,     0.0132,     0.0044,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5664,     0.0074,     0.0173,     0.0010,     0.0008,     0.0009,     0.0011,     0.0874,     0.0003,     0.0503,     0.0038,     0.2656,     0.0000,     0.0000,     0.0000],
        [    0.5664,     0.0203,     0.0228,     0.0178,     0.0134,     0.0031,     0.0322,     0.0294,     0.0099,     0.0132,     0.0605,     0.0991,     0.1143,     0.0000,     0.0000],
        [    0.9453,     0.0129,     0.0052,     0.0005,     0.0016,     0.0009,     0.0051,     0.0080,     0.0013,     0.0012,     0.0019,     0.0063,     0.0098,     0.0005,     0.0000],
        [    0.5078,     0.0294,     0.0073,     0.0029,     0.0004,     0.0008,     0.0102,     0.0151,     0.0018,     0.0219,     0.0157,     0.0275,     0.0057,     0.0015,     0.3535]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0232, -0.0013,  0.0080,  ...,  0.0049,  0.0302,  0.0131],
        [ 0.0173,  0.0221,  0.0284,  ..., -0.0023, -0.0543,  0.0336],
        [-0.0055,  0.0020, -0.0144,  ..., -0.0234, -0.0046,  0.0204],
        ...,
        [ 0.0564,  0.0105,  0.0545,  ...,  0.0280,  0.0321, -0.0201],
        [-0.0077,  0.0264, -0.0596,  ..., -0.0196,  0.0150,  0.0438],
        [-0.0048, -0.0450,  0.0023,  ..., -0.0184, -0.0048,  0.0340]], device='cuda:0', requires_grad=True)
K: tensor([-0.8125, -1.0938, -0.2500, -0.3027, -2.3906, -1.6328, -1.7969, -1.4688, -1.7500, -1.7266,  0.0050,  1.5938,  0.7305,  2.9688,  0.8359, -1.9844, -0.4062,  0.9844, -0.2754, -1.0547, -0.7852, -1.9609, -0.8281,  0.9375,  0.7188,  0.3066, -1.4844, -0.3301,  2.3750,  1.2734, -0.1260, -0.5977,
        -1.3281, -1.4375,  0.3379, -1.4609, -0.2119,  1.0234,  0.8125, -0.1152, -2.0312,  0.2910,  0.5898,  3.3125, -2.5312, -2.8125, -3.1562, -0.8242, -0.7930, -1.3828,  1.8594, -0.4258, -0.8789,  0.9023, -1.1406, -0.3633,  0.3848,  2.0000,  1.1328, -2.2500, -2.1719, -0.9492,  3.3281, -1.1172],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0178,  0.0019, -0.0284,  ..., -0.0139,  0.0238, -0.0320],
        [-0.0081,  0.0216, -0.0017,  ..., -0.0545, -0.0331,  0.0311],
        [-0.0060, -0.0291,  0.0587,  ...,  0.0066, -0.0081,  0.0220],
        ...,
        [ 0.0191, -0.0266, -0.0204,  ...,  0.0028,  0.0489,  0.0309],
        [ 0.0303,  0.0109, -0.0193,  ...,  0.0337,  0.0076, -0.0030],
        [-0.0209,  0.0202,  0.0033,  ..., -0.0257,  0.0233,  0.0613]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.2061, -0.3906,  1.9609, -1.9453,  1.7578,  1.1094,  1.1641, -1.9375, -1.8984, -0.2441, -1.0938,  0.7969, -0.1865, -0.5000,  2.4844,  0.2656,  2.0312, -1.3984, -2.1875,  1.2969,  0.2266,  0.9258,  1.9922,  2.2656,  0.7305,  0.0659,  0.3066, -0.0713,  1.5938, -2.0469,  1.2578,  0.5820,
        -1.5859,  1.0312,  0.6445, -0.2656,  0.7188,  3.7812, -0.3086,  0.1621, -1.0859,  0.8203, -1.4297,  0.0535,  2.4688, -0.4824,  1.1250, -2.4219,  3.9062, -2.0000,  0.3496,  1.9922, -0.6953,  0.1104, -1.6875, -1.9531,  0.6094, -0.7461,  0.3926, -0.3418, -1.5938,  1.1094, -1.5078, -0.5234],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  4.9688,  1.5391, -1.4609, -2.8438,  0.1816,  1.1250, -0.5898,  0.4688, -2.2344, -1.3984,  1.7812,  0.8984,  0.0928,  0.1621],
        [ 0.0000, -1.8750, -2.2812, -3.5938, -3.4531, -5.1250, -3.0469, -1.6641, -3.9844, -3.3125, -2.6562, -0.6680, -1.4609, -4.4375, -2.5938],
        [ 0.0000, -6.7812, -5.1875, -5.7500, -6.8125, -8.6250, -9.2500, -5.6875, -8.4375, -7.4375, -6.0938, -4.5625, -6.3750, -9.1250, -8.3125],
        [ 0.0000, -7.2500, -6.6875, -8.0625, -7.5938, -9.7500, -8.3750, -7.3125, -8.8750, -8.3125, -6.7188, -6.8438, -6.9062, -8.9375, -8.8125],
        [ 0.0000, -4.7500, -5.5938, -6.6250, -5.1250, -6.6562, -5.0312, -5.1562, -5.2812, -4.9062, -5.2812, -4.7812, -4.6875, -5.3750, -5.4062],
        [ 0.0000, -2.9062, -3.8594, -8.0625, -7.4375, -7.7188, -5.3438, -4.9062, -7.5938, -6.1562, -6.1250, -5.2500, -4.4375, -7.9062, -5.9062],
        [ 0.0000, -3.1406, -1.5078, -4.7812, -6.3125, -7.1250, -4.0625, -2.7188, -8.3125, -4.2500, -4.7188, -3.7500, -3.0156, -8.4375, -5.9062],
        [ 0.0000, -5.4375, -6.6250, -7.9375, -7.3125, -8.1875, -6.1875, -5.5938, -8.0625, -7.4062, -7.1562, -6.0000, -5.3750, -7.3750, -6.6562],
        [ 0.0000, -4.3125, -3.0312, -6.1250, -6.8750, -7.9062, -6.0938, -3.0625, -8.5625, -1.5234, -5.3750, -2.7188, -3.7188, -9.0625, -6.3750],
        [ 0.0000, -4.2188, -3.5469, -5.8750, -5.2188, -6.8438, -4.2188, -3.8125, -5.7188, -4.2188, -5.3125, -4.0312, -4.0000, -5.9688, -6.0938],
        [ 0.0000, -4.3438, -3.4844, -6.3438, -6.5938, -6.4688, -6.2812, -1.8672, -7.4688, -2.4219, -5.0000, -0.7539, -0.7656, -7.8438, -5.8750],
        [ 0.0000, -3.3281, -3.2031, -3.4531, -3.7500, -5.1875, -2.8594, -2.9531, -4.0312, -3.7500, -2.2344, -1.7422, -1.6016, -3.8750, -3.5156],
        [ 0.0000, -4.2812, -5.2188, -7.4688, -6.4062, -7.0000, -5.2188, -4.7812, -6.5625, -6.6562, -6.1875, -5.0000, -4.5625, -7.5938, -5.5938],
        [ 0.0000, -2.8438, -4.2500, -5.1562, -7.2812, -6.5000, -3.9062, -3.5156, -5.6250, -3.1406, -3.4688, -2.9219, -4.5000, -5.8125, -0.3633]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7416],
        [0.6846],
        [0.5395],
        [0.5771],
        [0.5410],
        [0.4271],
        [0.3974],
        [0.4184],
        [0.3795],
        [0.3453],
        [0.3614],
        [0.2985],
        [0.3508],
        [0.1901]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0275, -0.0062,  0.0064,  ...,  0.0136, -0.0607, -0.0079],
        [-0.0439, -0.0252,  0.0073,  ...,  0.0285, -0.0578, -0.0230],
        [ 0.0153,  0.0085, -0.0100,  ...,  0.0369,  0.0196, -0.0059],
        ...,
        [-0.0111, -0.0155, -0.0058,  ...,  0.0485, -0.0259, -0.0134],
        [-0.0218, -0.0136,  0.0139,  ...,  0.0140,  0.0025, -0.0030],
        [ 0.0042, -0.0319, -0.0263,  ...,  0.0463, -0.0294, -0.0512]], device='cuda:0', requires_grad=True)
K: tensor([ 3.7031, -4.3750, -3.3594, -4.1875,  5.3125, -4.2500,  5.4688,  4.0000,  2.9062, -4.9062,  3.5000, -4.5000, -5.0000,  4.9062,  2.8125, -3.3594,  2.6406,  4.7188, -0.3359, -4.3125,  4.9375,  5.6250,  4.2500, -2.6250, -4.6250,  5.2812, -3.6406, -4.6250, -3.4688,  3.6719, -4.9062,  3.3281,
         3.7812, -3.5469, -4.3125,  1.4141,  1.7422, -4.0000,  4.2188, -4.3125, -3.7500,  2.5781,  3.5781, -3.6250, -2.5000,  3.8281, -4.3438,  3.5469, -5.1875, -4.5625, -4.8438,  3.3906,  2.9688,  4.1250,  3.5312, -4.9688, -4.7188,  3.3438, -1.8047, -2.7656,  3.7031,  4.0625, -2.0312,  2.8750],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0116,  0.0095,  0.0098,  ..., -0.0004,  0.0165,  0.0346],
        [ 0.0385,  0.0219, -0.0179,  ..., -0.0343,  0.0023,  0.0055],
        [ 0.0019, -0.0201, -0.0043,  ..., -0.0226,  0.0387,  0.0258],
        ...,
        [-0.0114, -0.0054, -0.0460,  ..., -0.0115,  0.0367,  0.0061],
        [ 0.0173,  0.0009, -0.0181,  ...,  0.0217, -0.0200, -0.0134],
        [-0.0043,  0.0027,  0.0054,  ..., -0.0211, -0.0013,  0.0449]], device='cuda:0', requires_grad=True)
Q: tensor([-3.0781,  4.3125,  4.8750,  4.4375, -4.8438,  5.1250, -4.4062, -5.3750, -3.4531,  4.4375, -5.0312,  5.6250,  4.7188, -4.4688, -4.1562,  4.7812, -2.7812, -5.8750,  0.7266,  5.5312, -5.6250, -4.9062, -5.3750,  2.5156,  6.0312, -5.4375,  3.7812,  4.7812,  3.9375, -4.8438,  4.2188, -3.8281,
        -4.4375,  2.9688,  5.2188, -2.2969, -1.5781,  3.7344, -6.0625,  3.5000,  4.6875, -2.3125, -4.1875,  4.6875,  2.7188, -5.2188,  4.5000, -3.6562,  4.2500,  5.7500,  6.0000, -5.5938, -3.6250, -5.4062, -3.6094,  5.4375,  5.2188, -3.0469,  2.2812,  3.8125, -4.2500, -5.2812,  2.0781, -2.7031],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[   0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000],
        [   0.0000,  -51.0000,  -62.2500, -113.5000,  -84.0000,  -98.0000,  -86.5000, -105.0000,  -83.0000,  -99.5000,  -79.5000,  -88.0000,  -88.0000,  -83.5000,  -89.0000],
        [   0.0000,  -62.2500,  -78.5000, -146.0000, -105.0000, -123.0000, -108.5000, -134.0000, -104.0000, -127.0000, -100.5000, -111.0000, -112.0000, -105.5000, -112.5000],
        [   0.0000, -107.5000, -138.0000, -258.0000, -184.0000, -215.0000, -191.0000, -236.0000, -182.0000, -225.0000, -177.0000, -194.0000, -197.0000, -185.0000, -197.0000],
        [   0.0000,  -69.0000,  -86.0000, -160.0000, -116.5000, -136.0000, -120.0000, -147.0000, -115.0000, -140.0000, -110.5000, -122.0000, -123.5000, -116.0000, -123.5000],
        [   0.0000,  -86.5000, -108.0000, -201.0000, -146.0000, -171.0000, -151.0000, -185.0000, -144.0000, -176.0000, -138.0000, -153.0000, -155.0000, -145.0000, -155.0000],
        [   0.0000,  -74.5000,  -93.5000, -175.0000, -127.0000, -148.0000, -131.0000, -161.0000, -125.0000, -152.0000, -120.5000, -133.0000, -134.0000, -126.5000, -135.0000],
        [   0.0000, -100.0000, -126.5000, -237.0000, -170.0000, -199.0000, -176.0000, -219.0000, -167.0000, -207.0000, -161.0000, -179.0000, -183.0000, -169.0000, -181.0000],
        [   0.0000,  -69.0000,  -86.5000, -161.0000, -116.0000, -136.0000, -120.0000, -148.0000, -115.0000, -141.0000, -110.5000, -122.5000, -124.0000, -116.0000, -124.0000],
        [   0.0000,  -90.0000, -114.5000, -214.0000, -152.0000, -179.0000, -158.0000, -195.0000, -150.0000, -187.0000, -145.0000, -161.0000, -163.0000, -151.0000, -163.0000],
        [   0.0000,  -69.5000,  -87.5000, -163.0000, -118.0000, -138.0000, -121.5000, -149.0000, -116.5000, -142.0000, -112.5000, -124.0000, -125.0000, -118.0000, -125.5000],
        [   0.0000,  -78.0000,  -99.0000, -184.0000, -131.0000, -154.0000, -136.0000, -169.0000, -130.0000, -161.0000, -125.5000, -139.0000, -141.0000, -131.0000, -141.0000],
        [   0.0000,  -82.5000, -104.5000, -195.0000, -139.0000, -164.0000, -145.0000, -179.0000, -138.0000, -170.0000, -133.0000, -147.0000, -150.0000, -139.0000, -149.0000],
        [   0.0000,  -70.0000,  -88.0000, -164.0000, -118.5000, -139.0000, -122.5000, -151.0000, -117.0000, -143.0000, -112.5000, -124.5000, -126.5000, -118.5000, -126.0000],
        [   0.0000,  -76.0000,  -96.5000, -179.0000, -129.0000, -151.0000, -134.0000, -165.0000, -127.5000, -157.0000, -122.5000, -136.0000, -138.0000, -129.0000, -138.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[     0.0348,      0.0155,      0.0179,  ...,      0.0054,     -0.0010,     -0.0212],
        [    -0.0033,      0.0167,      0.0188,  ...,      0.0261,      0.0055,      0.0249],
        [     0.0277,      0.0041,     -0.0008,  ...,     -0.0008,      0.0336,      0.0024],
        ...,
        [    -0.0191,     -0.0250,     -0.0126,  ...,      0.0115,     -0.0227,      0.0094],
        [    -0.0074,      0.0059,     -0.0188,  ...,     -0.0159,     -0.0252,     -0.0217],
        [     0.0207,     -0.0000,     -0.0042,  ...,      0.0119,      0.0115,      0.0056]], device='cuda:0', requires_grad=True)
K: tensor([-2.0938,  0.3203, -2.5312,  1.5312, -1.6953, -2.6562, -1.1328,  2.4062, -0.5859, -0.5781,  0.8047,  0.9375, -1.3203, -2.8438,  1.8984,  1.5625,  2.5156, -2.2188, -2.1719,  1.5078,  1.7422, -1.8750, -2.5625,  3.0000, -1.4766,  2.7500, -1.2344, -1.9219,  1.1172, -1.6797,  0.3984, -2.0938,
        -1.7266, -2.1875,  2.1406, -2.4375, -2.1562, -0.3242,  2.4531,  1.7734, -2.4219, -1.1797,  0.5430, -2.1250,  1.8828,  2.8281, -0.3691, -1.8359, -2.1875,  2.0000,  2.6406,  1.1406,  0.6328, -2.2969, -1.1094, -1.9531,  2.0469,  1.9141, -1.9609, -2.2656, -1.2734,  2.7500, -0.2617, -2.6562],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0256,  0.0121, -0.0051,  ...,  0.0160, -0.0194, -0.0174],
        [-0.0093, -0.0081,  0.0066,  ...,  0.0075, -0.0152, -0.0014],
        [ 0.0019,  0.0098, -0.0017,  ..., -0.0011,  0.0146,  0.0022],
        ...,
        [-0.0220,  0.0055, -0.0082,  ..., -0.0112,  0.0232,  0.0085],
        [-0.0292,  0.0264, -0.0042,  ...,  0.0039,  0.0011, -0.0237],
        [ 0.0021, -0.0097, -0.0348,  ...,  0.0018, -0.0042,  0.0136]], device='cuda:0', requires_grad=True)
Q: tensor([ 2.8125, -1.5234,  2.0938, -0.5352,  0.6328,  3.0625,  1.4297, -3.5000, -0.5820, -0.3145,  0.0417, -0.0322,  1.8438,  1.8672, -2.3906, -2.0469, -3.0781,  2.5781,  1.4766, -3.1562, -1.9297,  3.0469,  3.4062, -2.9062,  2.5156, -3.3438,  0.5117,  1.1797,  0.2207,  0.9141,  0.2520,  1.8828,
         0.2969,  2.7500, -2.0000,  2.5781,  2.6562, -0.9453, -2.6562, -2.6094,  3.5000, -1.0781, -1.5625,  2.7500, -1.9766, -2.0938, -1.7578,  1.1250,  1.0234, -2.1719, -2.3281,  0.3965,  1.5547,  3.0938,  1.0938,  2.9844, -3.3125, -2.2969,  2.1250,  2.0000,  0.8867, -3.5938,  2.3594,  2.1250],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000, -19.5000, -20.7500, -19.3750, -19.1250, -19.8750, -19.6250, -21.7500, -21.0000, -21.6250, -21.7500, -22.5000, -24.2500, -21.8750, -24.3750],
        [  0.0000, -21.2500, -22.7500, -21.2500, -21.0000, -21.8750, -21.6250, -23.7500, -23.1250, -23.7500, -23.8750, -24.7500, -26.6250, -24.1250, -26.8750],
        [  0.0000, -19.6250, -21.1250, -19.6250, -19.6250, -20.3750, -20.2500, -22.0000, -21.5000, -21.8750, -22.1250, -22.8750, -24.5000, -22.3750, -24.7500],
        [  0.0000, -18.7500, -20.1250, -18.8750, -18.8750, -19.6250, -19.3750, -21.2500, -20.6250, -21.1250, -21.3750, -22.1250, -23.6250, -21.6250, -23.8750],
        [  0.0000, -19.2500, -20.5000, -19.1250, -19.1250, -19.8750, -19.7500, -21.6250, -20.8750, -21.3750, -21.6250, -22.3750, -24.0000, -21.8750, -24.1250],
        [  0.0000, -18.8750, -20.1250, -18.7500, -18.6250, -19.3750, -19.2500, -21.1250, -20.5000, -20.8750, -21.1250, -21.8750, -23.5000, -21.3750, -23.5000],
        [  0.0000, -21.7500, -23.1250, -21.7500, -21.7500, -22.6250, -22.5000, -24.6250, -23.8750, -24.3750, -24.6250, -25.6250, -27.3750, -24.8750, -27.5000],
        [  0.0000, -19.6250, -21.0000, -19.8750, -19.8750, -20.6250, -20.3750, -22.3750, -21.7500, -22.2500, -22.5000, -23.2500, -24.8750, -22.7500, -25.1250],
        [  0.0000, -22.3750, -24.1250, -22.8750, -22.8750, -23.7500, -23.6250, -25.7500, -25.1250, -25.7500, -26.0000, -27.0000, -28.7500, -26.2500, -29.0000],
        [  0.0000, -19.3750, -20.7500, -19.6250, -19.5000, -20.3750, -20.1250, -22.0000, -21.3750, -21.8750, -22.1250, -22.8750, -24.5000, -22.3750, -24.7500],
        [  0.0000, -21.5000, -23.1250, -21.7500, -21.7500, -22.6250, -22.3750, -24.5000, -23.8750, -24.3750, -24.6250, -25.6250, -27.3750, -24.8750, -27.6250],
        [  0.0000, -22.1250, -23.6250, -22.3750, -22.3750, -23.2500, -23.0000, -25.3750, -24.5000, -25.0000, -25.3750, -26.3750, -28.2500, -25.6250, -28.2500],
        [  0.0000, -20.0000, -21.5000, -20.3750, -20.2500, -21.1250, -20.8750, -22.8750, -22.3750, -22.7500, -23.0000, -23.8750, -25.5000, -23.3750, -25.7500],
        [  0.0000, -23.0000, -24.6250, -23.3750, -23.1250, -24.2500, -23.8750, -26.2500, -25.5000, -26.0000, -26.3750, -27.3750, -29.2500, -26.7500, -29.6250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.4707,     0.5273,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.8164,     0.1670,     0.0146,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1011,     0.2949,     0.1367,     0.0094,     0.4590,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0223,     0.5117,     0.1030,     0.0095,     0.2949,     0.0569,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0005,     0.3262,     0.0297,     0.0037,     0.1133,     0.0410,     0.4863,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.1001,     0.0112,     0.0009,     0.0718,     0.0280,     0.6562,     0.1318,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0488,     0.0065,     0.0007,     0.0786,     0.0300,     0.3887,     0.0781,     0.3672,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.0605,     0.0096,     0.0029,     0.0593,     0.0132,     0.3438,     0.1475,     0.3203,     0.0415,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0021,     0.0703,     0.0097,     0.0014,     0.0410,     0.0067,     0.1406,     0.1108,     0.5039,     0.0420,     0.0728,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0557,     0.0095,     0.0029,     0.0593,     0.0194,     0.3027,     0.1060,     0.3125,     0.0415,     0.0679,     0.0229,     0.0000,     0.0000,     0.0000],
        [    0.0005,     0.0188,     0.0019,     0.0002,     0.0262,     0.0086,     0.3066,     0.0796,     0.4766,     0.0148,     0.0439,     0.0062,     0.0156,     0.0000,     0.0000],
        [    0.0000,     0.0156,     0.0019,     0.0003,     0.0415,     0.0141,     0.2148,     0.0510,     0.2617,     0.0197,     0.0591,     0.0102,     0.0168,     0.2910,     0.0000],
        [    0.0000,     0.0405,     0.0067,     0.0041,     0.0374,     0.0155,     0.1904,     0.0889,     0.1846,     0.0332,     0.0415,     0.0251,     0.0535,     0.2148,     0.0635]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0185, -0.0074,  0.0638,  ...,  0.0324, -0.0119, -0.0189],
        [-0.0051,  0.0700,  0.0068,  ...,  0.0212, -0.0012,  0.0953],
        [-0.0030,  0.0116, -0.0196,  ..., -0.0295,  0.0437, -0.0029],
        ...,
        [ 0.0235,  0.0303,  0.0189,  ..., -0.0243,  0.0126, -0.0113],
        [ 0.0278,  0.0458, -0.0519,  ...,  0.0727, -0.0126,  0.1208],
        [ 0.0462,  0.0448,  0.0074,  ..., -0.0276, -0.0253,  0.0072]], device='cuda:0', requires_grad=True)
K: tensor([-4.3438,  0.1157, -7.4062,  0.5430, -0.1787, -2.5781, -5.8750,  7.8125,  5.8750, -1.2734,  4.9062, -5.2188, -4.5312, -0.1836,  2.8594,  4.6875,  3.4375, -4.9062, -4.6250, -5.3750, -5.3438,  1.5781,  0.4316, -1.5391, -4.3750, -3.2500, -1.6016, -5.5625,  4.2188,  1.2031,  3.4062, -2.7812,
        -1.1797, -6.8750, -0.4141,  7.8125,  5.1875,  1.1172,  2.3438, -2.4062,  0.4922, -4.8125, -1.1953, -5.5312, -0.2637, -2.3750,  1.0703, -5.9375,  2.6719,  0.1553,  0.0398, -6.7812, -7.8750, -6.1875,  1.6797, -1.0000, -0.8516,  1.9297, -3.1094, -2.3438,  1.9062, -4.1250, -0.7148, -7.2188],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0261, -0.0230, -0.0112,  ..., -0.0027,  0.0237, -0.0195],
        [ 0.0054, -0.0151, -0.0642,  ..., -0.0576,  0.0010, -0.0092],
        [-0.0174,  0.0149,  0.0053,  ..., -0.0077, -0.0325, -0.0309],
        ...,
        [ 0.0335, -0.0130,  0.0312,  ..., -0.0119, -0.0322, -0.0093],
        [ 0.0319,  0.0016,  0.0067,  ..., -0.0288, -0.0083, -0.0283],
        [ 0.0230, -0.0028, -0.0425,  ...,  0.0425,  0.0358, -0.0286]], device='cuda:0', requires_grad=True)
Q: tensor([-1.2500,  0.1172, -0.7305,  1.1641,  1.4219, -0.5547, -1.7812, -0.0403,  1.9062,  1.0703,  2.4062, -1.0469, -1.3438, -0.7695,  1.2188, -0.3711,  0.9805, -0.7148,  0.1196,  1.1953, -0.7852,  0.4160, -1.6562, -2.4688,  0.8477,  0.0977, -0.4941, -1.3750, -2.7031,  1.5156, -0.7500,  0.6836,
         1.4609, -1.4844, -0.3516,  2.2969,  0.6211, -1.8359,  1.3203,  0.1357, -0.2773,  2.5781,  0.3047, -0.7695, -2.2344,  0.4258,  1.6719, -0.2539, -0.6172, -1.2734,  0.0107, -1.0156, -0.5625, -0.2412, -0.7656, -1.3047,  0.1494, -0.7266, -1.0938,  0.0298,  1.7891,  1.0547, -0.5430, -1.9531],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, 13.9375, 12.3750, 10.8750, 14.1250, 13.8125, 16.0000, 15.1250, 16.3750, 14.0625, 14.9375, 13.0000, 14.4375, 16.5000, 15.6250],
        [ 0.0000, 21.7500, 21.8750, 22.0000, 22.7500, 23.1250, 24.1250, 24.1250, 23.7500, 23.5000, 24.0000, 23.3750, 25.2500, 24.5000, 25.7500],
        [ 0.0000,  8.6875,  7.1250,  4.6875,  7.4375,  6.6250,  8.9375,  7.6875,  8.6250,  6.5625,  7.1562,  5.7500,  6.9375,  8.2500,  7.5312],
        [ 0.0000,  1.0703,  0.3047, -2.3750,  1.5156,  0.2988,  2.3906,  1.0781,  2.5625, -0.2656,  1.1016, -0.6562, -0.1426,  2.4375,  0.9805],
        [ 0.0000,  3.1406,  1.5312, -0.8555,  2.5781,  0.9336,  3.9219,  2.9375,  4.0312,  1.6953,  2.5625,  1.7969,  1.7734,  3.9688,  2.3438],
        [ 0.0000,  6.5312,  4.1250,  2.0469,  5.4688,  4.4375,  6.9062,  5.1562,  6.8125,  3.5938,  4.3438,  2.8906,  3.6250,  6.2500,  4.7500],
        [ 0.0000,  7.1250,  4.9375,  2.4688,  6.8125,  5.8438,  9.0000,  7.4062,  9.2500,  6.0625,  6.6875,  4.7188,  6.0312,  9.0625,  7.5312],
        [ 0.0000,  7.7812,  5.7812,  3.5781,  8.2500,  7.3125,  9.8750,  8.2500,  9.8125,  7.3750,  8.2500,  6.5625,  7.0312,  9.7500,  8.5000],
        [ 0.0000,  7.0000,  5.1562,  3.9375,  6.9688,  5.4688,  8.7500,  7.8750,  8.6250,  6.6250,  7.0625,  6.8438,  7.2812,  8.8125,  7.5938],
        [ 0.0000,  3.5156,  1.5312, -0.3906,  2.9688,  1.1562,  4.1875,  3.9688,  5.4688,  3.0000,  3.5469,  2.6875,  2.8125,  5.4375,  3.0625],
        [ 0.0000,  7.8125,  6.0312,  4.8438,  7.8750,  6.7500,  9.5000,  8.4375,  9.5000,  7.5000,  8.0000,  6.9062,  8.0000,  9.5625,  8.6250],
        [ 0.0000,  3.6875,  1.4141, -0.6680,  4.0312,  2.9062,  6.5000,  5.1250,  6.9375,  3.4531,  4.5312,  2.5938,  3.5000,  7.0312,  5.4688],
        [ 0.0000,  6.1562,  4.0625,  2.2344,  7.1250,  6.0625,  8.7500,  7.3438,  9.0000,  6.3750,  7.4688,  5.7188,  6.2188,  9.0625,  7.9062],
        [ 0.0000, 12.9375, 11.1250, 10.6250, 12.8750, 12.0000, 14.5000, 13.7500, 14.4375, 12.7500, 13.0000, 12.5000, 13.2500, 14.6250, 13.3750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4011],
        [0.2478],
        [0.2171],
        [0.2257],
        [0.2095],
        [0.1661],
        [0.1341],
        [0.1505],
        [0.1570],
        [0.1395],
        [0.1384],
        [0.0997],
        [0.0911],
        [0.1220]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( are:0.1069 a:0.1235,:0.1631 green:0.1064,:0.0815 are:0.2754 a:0.1045iced:0.4160)
iced
------
		( a:0.1235,:0.1631 green:0.1064,:0.0815 are:0.2754 a:0.1045iced:0.4160,:0.1235)
, and are also iced.
The flowers are a little bit more
@ 5550 train 4.0248 , allloss: 4.0249, dt: 1681.54ms, fracRes: 0.7101, norm(attn): 0.1572, norm(output): 0.9426, norm(x): 0.7895, norm(y): 1.0007, norm:0.6664, tok/sec: 77947.81, flops:81.82, batch-reuse:1
@ 5551 train 3.9685 , allloss: 3.9686, dt: 1341.52ms, fracRes: 0.7101, norm(attn): 0.1592, norm(output): 0.9421, norm(x): 0.7892, norm(y): 1.0006, norm:0.7616, tok/sec: 97703.92, flops:102.55, batch-reuse:1
@ 5552 train 4.0388 , allloss: 4.0388, dt: 1337.09ms, fracRes: 0.7099, norm(attn): 0.1592, norm(output): 0.9424, norm(x): 0.7893, norm(y): 1.0004, norm:0.6325, tok/sec: 98027.81, flops:102.89, batch-reuse:1
@ 5553 train 4.0020 , allloss: 4.0021, dt: 1349.17ms, fracRes: 0.7100, norm(attn): 0.1611, norm(output): 0.9423, norm(x): 0.7891, norm(y): 1.0004, norm:0.6564, tok/sec: 97150.12, flops:101.97, batch-reuse:1
@ 5554 train 3.9709 , allloss: 3.9709, dt: 1320.23ms, fracRes: 0.7102, norm(attn): 0.1592, norm(output): 0.9424, norm(x): 0.7893, norm(y): 1.0003, norm:0.5971, tok/sec: 99279.81, flops:104.21, batch-reuse:1
@ 5555 train 3.9679 , allloss: 3.9682, dt: 1304.77ms, fracRes: 0.7103, norm(attn): 0.1592, norm(output): 0.9423, norm(x): 0.7891, norm(y): 1.0004, norm:0.6275, tok/sec: 100456.07, flops:105.44, batch-reuse:1
@ 5556 train 3.9863 , allloss: 3.9866, dt: 1314.52ms, fracRes: 0.7101, norm(attn): 0.1582, norm(output): 0.9423, norm(x): 0.7890, norm(y): 1.0005, norm:0.4970, tok/sec: 99710.62, flops:104.66, batch-reuse:1
@ 5557 train 3.9700 , allloss: 3.9704, dt: 1336.23ms, fracRes: 0.7103, norm(attn): 0.1592, norm(output): 0.9421, norm(x): 0.7887, norm(y): 1.0005, norm:0.5709, tok/sec: 98091.10, flops:102.96, batch-reuse:1
@ 5558 train 3.9509 , allloss: 3.9512, dt: 1297.20ms, fracRes: 0.7103, norm(attn): 0.1602, norm(output): 0.9421, norm(x): 0.7888, norm(y): 1.0003, norm:0.6260, tok/sec: 101042.30, flops:106.06, batch-reuse:1
@ 5559 train 4.0505 , allloss: 4.0506, dt: 1302.82ms, fracRes: 0.7103, norm(attn): 0.1592, norm(output): 0.9422, norm(x): 0.7887, norm(y): 1.0002, norm:0.6258, tok/sec: 100606.01, flops:105.60, batch-reuse:1
@ 5560 train 3.9834 , allloss: 3.9834, dt: 1291.45ms, fracRes: 0.7102, norm(attn): 0.1621, norm(output): 0.9422, norm(x): 0.7887, norm(y): 1.0001, norm:0.5718, tok/sec: 101492.44, flops:106.53, batch-reuse:1
@ 5561 train 3.9483 , allloss: 3.9615, dt: 1324.03ms, fracRes: 0.7103, norm(attn): 0.1602, norm(output): 0.9420, norm(x): 0.7887, norm(y): 1.0003, norm:0.6320, tok/sec: 98994.63, flops:103.91, batch-reuse:1
@ 5562 train 3.8595 , allloss: 3.8597, dt: 1336.11ms, fracRes: 0.7102, norm(attn): 0.1602, norm(output): 0.9421, norm(x): 0.7894, norm(y): 1.0003, norm:0.6246, tok/sec: 98099.63, flops:102.97, batch-reuse:1
@ 5563 train 4.0029 , allloss: 4.0029, dt: 1300.91ms, fracRes: 0.7100, norm(attn): 0.1602, norm(output): 0.9421, norm(x): 0.7894, norm(y): 1.0003, norm:0.5252, tok/sec: 100754.20, flops:105.75, batch-reuse:1
@ 5564 train 4.0404 , allloss: 4.0404, dt: 1312.39ms, fracRes: 0.7100, norm(attn): 0.1592, norm(output): 0.9422, norm(x): 0.7895, norm(y): 1.0003, norm:0.6201, tok/sec: 99872.45, flops:104.83, batch-reuse:1
@ 5565 train 3.9696 , allloss: 3.9704, dt: 1292.20ms, fracRes: 0.7103, norm(attn): 0.1592, norm(output): 0.9418, norm(x): 0.7884, norm(y): 1.0005, norm:0.6394, tok/sec: 101433.53, flops:106.47, batch-reuse:1
@ 5566 train 4.0174 , allloss: 4.0175, dt: 1315.88ms, fracRes: 0.7102, norm(attn): 0.1592, norm(output): 0.9424, norm(x): 0.7895, norm(y): 1.0004, norm:0.6053, tok/sec: 99608.21, flops:104.55, batch-reuse:1
@ 5567 train 4.0125 , allloss: 4.0126, dt: 1318.24ms, fracRes: 0.7101, norm(attn): 0.1582, norm(output): 0.9425, norm(x): 0.7901, norm(y): 1.0002, norm:0.5602, tok/sec: 99429.21, flops:104.36, batch-reuse:1
@ 5568 train 4.0916 , allloss: 4.0916, dt: 1316.99ms, fracRes: 0.7103, norm(attn): 0.1592, norm(output): 0.9421, norm(x): 0.7897, norm(y): 1.0003, norm:0.6722, tok/sec: 99524.17, flops:104.46, batch-reuse:1
@ 5569 train 3.9693 , allloss: 3.9695, dt: 1339.71ms, fracRes: 0.7104, norm(attn): 0.1572, norm(output): 0.9427, norm(x): 0.7902, norm(y): 1.0002, norm:0.7739, tok/sec: 97836.40, flops:102.69, batch-reuse:1
@ 5570 train 3.9316 , allloss: 3.9317, dt: 1283.87ms, fracRes: 0.7104, norm(attn): 0.1582, norm(output): 0.9425, norm(x): 0.7895, norm(y): 1.0004, norm:0.7779, tok/sec: 102091.01, flops:107.16, batch-reuse:1
@ 5571 train 4.0262 , allloss: 4.0263, dt: 1308.90ms, fracRes: 0.7102, norm(attn): 0.1582, norm(output): 0.9425, norm(x): 0.7896, norm(y): 1.0005, norm:0.6023, tok/sec: 100139.04, flops:105.11, batch-reuse:1
@ 5572 train 4.0283 , allloss: 4.0283, dt: 1317.90ms, fracRes: 0.7102, norm(attn): 0.1572, norm(output): 0.9424, norm(x): 0.7898, norm(y): 1.0005, norm:0.6845, tok/sec: 99455.49, flops:104.39, batch-reuse:1
@ 5573 train 3.9583 , allloss: 3.9584, dt: 1352.60ms, fracRes: 0.7102, norm(attn): 0.1572, norm(output): 0.9423, norm(x): 0.7896, norm(y): 1.0002, norm:0.5749, tok/sec: 96903.99, flops:101.71, batch-reuse:1
@ 5574 train 4.0491 , allloss: 4.0491, dt: 1327.73ms, fracRes: 0.7103, norm(attn): 0.1572, norm(output): 0.9423, norm(x): 0.7893, norm(y): 1.0001, norm:0.6280, tok/sec: 98719.08, flops:103.62, batch-reuse:1
@ 5575 train 4.0334 , allloss: 4.0334, dt: 1305.66ms, fracRes: 0.7104, norm(attn): 0.1572, norm(output): 0.9426, norm(x): 0.7893, norm(y): 1.0000, norm:0.5463, tok/sec: 100387.93, flops:105.37, batch-reuse:1
@ 5576 train 3.9089 , allloss: 3.9090, dt: 1311.19ms, fracRes: 0.7104, norm(attn): 0.1582, norm(output): 0.9424, norm(x): 0.7893, norm(y): 1.0002, norm:0.6535, tok/sec: 99963.85, flops:104.93, batch-reuse:1
@ 5577 train 3.8860 , allloss: 3.8861, dt: 1348.36ms, fracRes: 0.7103, norm(attn): 0.1592, norm(output): 0.9421, norm(x): 0.7889, norm(y): 1.0004, norm:0.5698, tok/sec: 97208.40, flops:102.03, batch-reuse:1
@ 5578 train 4.0129 , allloss: 4.0129, dt: 1301.18ms, fracRes: 0.7104, norm(attn): 0.1572, norm(output): 0.9421, norm(x): 0.7883, norm(y): 1.0004, norm:0.6769, tok/sec: 100733.24, flops:105.73, batch-reuse:1
@ 5579 train 4.0856 , allloss: 4.0858, dt: 1310.73ms, fracRes: 0.7105, norm(attn): 0.1572, norm(output): 0.9428, norm(x): 0.7891, norm(y): 1.0003, norm:0.6469, tok/sec: 99999.55, flops:104.96, batch-reuse:1
@ 5580 train 4.2941 , allloss: 4.2941, dt: 1305.81ms, fracRes: 0.7104, norm(attn): 0.1582, norm(output): 0.9433, norm(x): 0.7898, norm(y): 0.9999, norm:0.8035, tok/sec: 100375.83, flops:105.36, batch-reuse:1
@ 5581 train 4.2371 , allloss: 4.2374, dt: 1306.44ms, fracRes: 0.7104, norm(attn): 0.1572, norm(output): 0.9432, norm(x): 0.7900, norm(y): 0.9999, norm:0.8914, tok/sec: 100327.84, flops:105.31, batch-reuse:1
@ 5582 train 4.1112 , allloss: 4.1117, dt: 1296.57ms, fracRes: 0.7101, norm(attn): 0.1592, norm(output): 0.9426, norm(x): 0.7900, norm(y): 1.0001, norm:0.6917, tok/sec: 101091.02, flops:106.11, batch-reuse:1
@ 5583 train 4.2549 , allloss: 4.2552, dt: 1275.32ms, fracRes: 0.7103, norm(attn): 0.1592, norm(output): 0.9423, norm(x): 0.7892, norm(y): 1.0003, norm:0.6974, tok/sec: 102775.64, flops:107.88, batch-reuse:1
@ 5584 train 4.0673 , allloss: 4.0674, dt: 1296.29ms, fracRes: 0.7106, norm(attn): 0.1602, norm(output): 0.9419, norm(x): 0.7884, norm(y): 1.0006, norm:0.7784, tok/sec: 101113.09, flops:106.13, batch-reuse:1
@ 5585 train 4.1358 , allloss: 4.1359, dt: 1298.45ms, fracRes: 0.7108, norm(attn): 0.1592, norm(output): 0.9423, norm(x): 0.7889, norm(y): 1.0006, norm:0.7763, tok/sec: 100944.58, flops:105.95, batch-reuse:1
@ 5586 train 4.1644 , allloss: 4.1645, dt: 1309.26ms, fracRes: 0.7106, norm(attn): 0.1611, norm(output): 0.9426, norm(x): 0.7896, norm(y): 1.0002, norm:0.5501, tok/sec: 100111.78, flops:105.08, batch-reuse:1
@ 5587 train 4.0913 , allloss: 4.0914, dt: 1338.39ms, fracRes: 0.7105, norm(attn): 0.1621, norm(output): 0.9423, norm(x): 0.7894, norm(y): 1.0000, norm:0.6384, tok/sec: 97932.60, flops:102.79, batch-reuse:1
@ 5588 train 4.0416 , allloss: 4.0417, dt: 1318.44ms, fracRes: 0.7106, norm(attn): 0.1621, norm(output): 0.9423, norm(x): 0.7889, norm(y): 1.0000, norm:0.5746, tok/sec: 99414.82, flops:104.35, batch-reuse:1
@ 5589 train 4.1917 , allloss: 4.1918, dt: 1311.63ms, fracRes: 0.7106, norm(attn): 0.1592, norm(output): 0.9424, norm(x): 0.7887, norm(y): 1.0002, norm:0.5932, tok/sec: 99930.38, flops:104.89, batch-reuse:1
@ 5590 train 4.1285 , allloss: 4.1286, dt: 1290.30ms, fracRes: 0.7106, norm(attn): 0.1582, norm(output): 0.9426, norm(x): 0.7886, norm(y): 1.0003, norm:0.6418, tok/sec: 101582.49, flops:106.62, batch-reuse:1
@ 5591 train 4.2231 , allloss: 4.2233, dt: 1313.57ms, fracRes: 0.7105, norm(attn): 0.1572, norm(output): 0.9427, norm(x): 0.7895, norm(y): 1.0003, norm:0.6093, tok/sec: 99782.96, flops:104.74, batch-reuse:1
@ 5592 train 4.0570 , allloss: 4.0571, dt: 1312.86ms, fracRes: 0.7106, norm(attn): 0.1582, norm(output): 0.9426, norm(x): 0.7893, norm(y): 1.0003, norm:0.5725, tok/sec: 99837.03, flops:104.79, batch-reuse:1
@ 5593 train 4.0485 , allloss: 4.0490, dt: 1293.45ms, fracRes: 0.7107, norm(attn): 0.1592, norm(output): 0.9422, norm(x): 0.7888, norm(y): 1.0002, norm:0.7451, tok/sec: 101334.81, flops:106.36, batch-reuse:1
@ 5594 train 4.1898 , allloss: 4.1901, dt: 1291.52ms, fracRes: 0.7105, norm(attn): 0.1582, norm(output): 0.9424, norm(x): 0.7890, norm(y): 1.0002, norm:0.6987, tok/sec: 101486.42, flops:106.52, batch-reuse:1
@ 5595 train 4.1776 , allloss: 4.1778, dt: 1305.66ms, fracRes: 0.7106, norm(attn): 0.1572, norm(output): 0.9427, norm(x): 0.7893, norm(y): 1.0003, norm:0.5885, tok/sec: 100387.73, flops:105.37, batch-reuse:1
@ 5596 train 4.1556 , allloss: 4.1558, dt: 1306.97ms, fracRes: 0.7104, norm(attn): 0.1572, norm(output): 0.9428, norm(x): 0.7896, norm(y): 1.0002, norm:0.7354, tok/sec: 100287.15, flops:105.26, batch-reuse:1
@ 5597 train 4.2264 , allloss: 4.2271, dt: 1302.81ms, fracRes: 0.7106, norm(attn): 0.1572, norm(output): 0.9424, norm(x): 0.7892, norm(y): 1.0001, norm:0.6313, tok/sec: 100606.91, flops:105.60, batch-reuse:1
@ 5598 train 4.1962 , allloss: 4.1963, dt: 1320.73ms, fracRes: 0.7107, norm(attn): 0.1572, norm(output): 0.9425, norm(x): 0.7892, norm(y): 1.0000, norm:0.5761, tok/sec: 99242.11, flops:104.17, batch-reuse:1
@ 5599 train 4.1314 , allloss: 4.1315, dt: 1300.31ms, fracRes: 0.7107, norm(attn): 0.1572, norm(output): 0.9425, norm(x): 0.7894, norm(y): 1.0001, norm:0.6688, tok/sec: 100800.33, flops:105.80, batch-reuse:1
@ 5600 train 4.1353 , allloss: 4.1354, dt: 1315.61ms, fracRes: 0.7107, norm(attn): 0.1582, norm(output): 0.9424, norm(x): 0.7893, norm(y): 1.0001, norm:0.6257, tok/sec: 99628.68, flops:104.57, batch-reuse:1
@ 5601 train 4.2425 , allloss: 4.2426, dt: 1289.84ms, fracRes: 0.7109, norm(attn): 0.1572, norm(output): 0.9428, norm(x): 0.7894, norm(y): 1.0001, norm:0.6662, tok/sec: 101619.13, flops:106.66, batch-reuse:1
@ 5602 train 4.3362 , allloss: 4.3364, dt: 1306.86ms, fracRes: 0.7108, norm(attn): 0.1582, norm(output): 0.9426, norm(x): 0.7891, norm(y): 1.0001, norm:0.6619, tok/sec: 100295.07, flops:105.27, batch-reuse:1
@ 5603 train 4.1725 , allloss: 4.1726, dt: 1296.80ms, fracRes: 0.7107, norm(attn): 0.1572, norm(output): 0.9429, norm(x): 0.7901, norm(y): 1.0002, norm:0.7077, tok/sec: 101073.40, flops:106.09, batch-reuse:1
@ 5604 train 4.1697 , allloss: 4.1699, dt: 1297.01ms, fracRes: 0.7103, norm(attn): 0.1572, norm(output): 0.9426, norm(x): 0.7898, norm(y): 1.0002, norm:0.6480, tok/sec: 101056.90, flops:106.07, batch-reuse:1
@ 5605 train 4.0657 , allloss: 4.0658, dt: 1306.64ms, fracRes: 0.7102, norm(attn): 0.1582, norm(output): 0.9423, norm(x): 0.7891, norm(y): 1.0002, norm:0.6591, tok/sec: 100312.33, flops:105.29, batch-reuse:1
@ 5606 train 4.3218 , allloss: 4.3219, dt: 1284.77ms, fracRes: 0.7104, norm(attn): 0.1611, norm(output): 0.9422, norm(x): 0.7892, norm(y): 1.0002, norm:0.8343, tok/sec: 102019.80, flops:107.08, batch-reuse:1
@ 5607 train 4.1988 , allloss: 4.2002, dt: 1303.32ms, fracRes: 0.7107, norm(attn): 0.1572, norm(output): 0.9428, norm(x): 0.7902, norm(y): 1.0002, norm:0.9302, tok/sec: 100567.68, flops:105.56, batch-reuse:1
@ 5608 train 4.1710 , allloss: 4.1713, dt: 1298.30ms, fracRes: 0.7106, norm(attn): 0.1582, norm(output): 0.9427, norm(x): 0.7897, norm(y): 1.0000, norm:0.8371, tok/sec: 100957.00, flops:105.97, batch-reuse:1
@ 5609 train 4.2829 , allloss: 4.2832, dt: 1300.06ms, fracRes: 0.7107, norm(attn): 0.1602, norm(output): 0.9425, norm(x): 0.7891, norm(y): 1.0000, norm:1.0474, tok/sec: 100820.09, flops:105.82, batch-reuse:1
@ 5610 train 4.2072 , allloss: 4.2073, dt: 1311.57ms, fracRes: 0.7110, norm(attn): 0.1562, norm(output): 0.9427, norm(x): 0.7899, norm(y): 1.0001, norm:0.8209, tok/sec: 99934.83, flops:104.89, batch-reuse:1
@ 5611 train 4.1496 , allloss: 4.1497, dt: 1301.44ms, fracRes: 0.7110, norm(attn): 0.1572, norm(output): 0.9429, norm(x): 0.7902, norm(y): 1.0002, norm:0.9395, tok/sec: 100713.09, flops:105.71, batch-reuse:1
@ 5612 train 4.0140 , allloss: 4.0141, dt: 1310.30ms, fracRes: 0.7105, norm(attn): 0.1582, norm(output): 0.9425, norm(x): 0.7898, norm(y): 1.0001, norm:0.7043, tok/sec: 100031.90, flops:105.00, batch-reuse:1
@ 5613 train 4.1808 , allloss: 4.1811, dt: 1299.80ms, fracRes: 0.7101, norm(attn): 0.1602, norm(output): 0.9421, norm(x): 0.7894, norm(y): 0.9999, norm:0.7131, tok/sec: 100840.01, flops:105.84, batch-reuse:1
@ 5614 train 4.0830 , allloss: 4.0831, dt: 1300.88ms, fracRes: 0.7102, norm(attn): 0.1592, norm(output): 0.9423, norm(x): 0.7895, norm(y): 0.9998, norm:0.7272, tok/sec: 100756.43, flops:105.76, batch-reuse:1
@ 5615 train 4.0797 , allloss: 4.0797, dt: 1292.02ms, fracRes: 0.7104, norm(attn): 0.1592, norm(output): 0.9426, norm(x): 0.7901, norm(y): 0.9998, norm:0.6245, tok/sec: 101447.43, flops:106.48, batch-reuse:1
@ 5616 train 4.1035 , allloss: 4.1037, dt: 1294.02ms, fracRes: 0.7106, norm(attn): 0.1582, norm(output): 0.9426, norm(x): 0.7900, norm(y): 0.9999, norm:0.6923, tok/sec: 101290.93, flops:106.32, batch-reuse:1
@ 5617 train 3.9818 , allloss: 3.9819, dt: 1295.76ms, fracRes: 0.7105, norm(attn): 0.1592, norm(output): 0.9423, norm(x): 0.7893, norm(y): 0.9999, norm:0.6355, tok/sec: 101154.58, flops:106.18, batch-reuse:1
@ 5618 train 4.1006 , allloss: 4.1007, dt: 1281.79ms, fracRes: 0.7104, norm(attn): 0.1582, norm(output): 0.9423, norm(x): 0.7889, norm(y): 1.0000, norm:0.5950, tok/sec: 102256.79, flops:107.33, batch-reuse:1
@ 5619 train 4.1543 , allloss: 4.1544, dt: 1306.26ms, fracRes: 0.7106, norm(attn): 0.1592, norm(output): 0.9423, norm(x): 0.7889, norm(y): 1.0001, norm:0.5602, tok/sec: 100341.72, flops:105.32, batch-reuse:1
@ 5620 train 4.0171 , allloss: 4.0182, dt: 1339.91ms, fracRes: 0.7107, norm(attn): 0.1592, norm(output): 0.9421, norm(x): 0.7888, norm(y): 1.0001, norm:0.5591, tok/sec: 97821.30, flops:102.68, batch-reuse:1
@ 5621 train 4.1231 , allloss: 4.1232, dt: 1325.23ms, fracRes: 0.7105, norm(attn): 0.1572, norm(output): 0.9428, norm(x): 0.7900, norm(y): 1.0000, norm:0.5547, tok/sec: 98905.21, flops:103.81, batch-reuse:1
@ 5622 train 4.1164 , allloss: 4.1165, dt: 1289.39ms, fracRes: 0.7105, norm(attn): 0.1572, norm(output): 0.9427, norm(x): 0.7900, norm(y): 0.9999, norm:0.5556, tok/sec: 101653.93, flops:106.70, batch-reuse:1
@ 5623 train 4.0958 , allloss: 4.0964, dt: 1288.83ms, fracRes: 0.7107, norm(attn): 0.1572, norm(output): 0.9428, norm(x): 0.7895, norm(y): 0.9998, norm:0.5975, tok/sec: 101698.49, flops:106.75, batch-reuse:1
@ 5624 train 4.1605 , allloss: 4.1606, dt: 1289.81ms, fracRes: 0.7105, norm(attn): 0.1592, norm(output): 0.9428, norm(x): 0.7899, norm(y): 0.9999, norm:0.6115, tok/sec: 101620.91, flops:106.66, batch-reuse:1
@ 5625 train 4.1074 , allloss: 4.1075, dt: 1281.26ms, fracRes: 0.7106, norm(attn): 0.1572, norm(output): 0.9429, norm(x): 0.7903, norm(y): 1.0000, norm:0.5755, tok/sec: 102299.55, flops:107.38, batch-reuse:1
@ 5626 train 4.0370 , allloss: 4.0370, dt: 1309.83ms, fracRes: 0.7107, norm(attn): 0.1582, norm(output): 0.9425, norm(x): 0.7896, norm(y): 1.0002, norm:0.5960, tok/sec: 100067.62, flops:105.03, batch-reuse:1
@ 5627 train 4.2033 , allloss: 4.2034, dt: 1334.90ms, fracRes: 0.7107, norm(attn): 0.1572, norm(output): 0.9426, norm(x): 0.7899, norm(y): 1.0001, norm:0.5594, tok/sec: 98188.34, flops:103.06, batch-reuse:1
@ 5628 train 4.0763 , allloss: 4.0764, dt: 1286.52ms, fracRes: 0.7105, norm(attn): 0.1572, norm(output): 0.9426, norm(x): 0.7901, norm(y): 1.0001, norm:0.6037, tok/sec: 101880.76, flops:106.94, batch-reuse:1
@ 5629 train 4.2257 , allloss: 4.2258, dt: 1295.39ms, fracRes: 0.7106, norm(attn): 0.1562, norm(output): 0.9433, norm(x): 0.7910, norm(y): 1.0001, norm:0.5724, tok/sec: 101183.57, flops:106.21, batch-reuse:1
@ 5630 train 4.1544 , allloss: 4.1545, dt: 1322.28ms, fracRes: 0.7107, norm(attn): 0.1582, norm(output): 0.9428, norm(x): 0.7902, norm(y): 1.0001, norm:0.6573, tok/sec: 99126.03, flops:104.05, batch-reuse:1
@ 5631 train 4.1821 , allloss: 4.1821, dt: 1322.35ms, fracRes: 0.7105, norm(attn): 0.1572, norm(output): 0.9430, norm(x): 0.7910, norm(y): 1.0000, norm:0.5139, tok/sec: 99120.16, flops:104.04, batch-reuse:1
@ 5632 train 4.0066 , allloss: 4.0066, dt: 1298.29ms, fracRes: 0.7106, norm(attn): 0.1582, norm(output): 0.9425, norm(x): 0.7902, norm(y): 1.0002, norm:0.6270, tok/sec: 100957.36, flops:105.97, batch-reuse:1
@ 5633 train 4.0630 , allloss: 4.0632, dt: 1317.84ms, fracRes: 0.7105, norm(attn): 0.1572, norm(output): 0.9423, norm(x): 0.7904, norm(y): 1.0002, norm:0.5704, tok/sec: 99460.00, flops:104.40, batch-reuse:1
@ 5634 train 4.0442 , allloss: 4.0443, dt: 1289.20ms, fracRes: 0.7106, norm(attn): 0.1572, norm(output): 0.9423, norm(x): 0.7902, norm(y): 1.0003, norm:0.6130, tok/sec: 101668.89, flops:106.71, batch-reuse:1
@ 5635 train 4.2345 , allloss: 4.2346, dt: 1310.87ms, fracRes: 0.7106, norm(attn): 0.1572, norm(output): 0.9428, norm(x): 0.7906, norm(y): 1.0003, norm:0.5962, tok/sec: 99988.40, flops:104.95, batch-reuse:1
@ 5636 train 4.0393 , allloss: 4.0394, dt: 1325.90ms, fracRes: 0.7105, norm(attn): 0.1582, norm(output): 0.9426, norm(x): 0.7910, norm(y): 1.0001, norm:0.5481, tok/sec: 98855.34, flops:103.76, batch-reuse:1
@ 5637 train 4.1747 , allloss: 4.1753, dt: 1308.06ms, fracRes: 0.7104, norm(attn): 0.1572, norm(output): 0.9428, norm(x): 0.7912, norm(y): 0.9999, norm:0.5538, tok/sec: 100203.36, flops:105.18, batch-reuse:1
@ 5638 train 4.1307 , allloss: 4.1309, dt: 1326.62ms, fracRes: 0.7104, norm(attn): 0.1572, norm(output): 0.9429, norm(x): 0.7910, norm(y): 0.9999, norm:0.5266, tok/sec: 98801.14, flops:103.70, batch-reuse:1
@ 5639 train 4.0196 , allloss: 4.0196, dt: 1300.20ms, fracRes: 0.7104, norm(attn): 0.1572, norm(output): 0.9435, norm(x): 0.7912, norm(y): 0.9999, norm:0.6348, tok/sec: 100808.96, flops:105.81, batch-reuse:1
@ 5640 train 4.1060 , allloss: 4.1060, dt: 1337.12ms, fracRes: 0.7104, norm(attn): 0.1572, norm(output): 0.9426, norm(x): 0.7900, norm(y): 1.0003, norm:0.6545, tok/sec: 98025.39, flops:102.89, batch-reuse:1
@ 5641 train 4.1359 , allloss: 4.1359, dt: 1324.10ms, fracRes: 0.7105, norm(attn): 0.1572, norm(output): 0.9426, norm(x): 0.7901, norm(y): 1.0004, norm:0.5416, tok/sec: 98989.27, flops:103.90, batch-reuse:1
@ 5642 train 4.1065 , allloss: 4.1065, dt: 1341.33ms, fracRes: 0.7105, norm(attn): 0.1582, norm(output): 0.9429, norm(x): 0.7908, norm(y): 1.0002, norm:0.5686, tok/sec: 97718.30, flops:102.57, batch-reuse:1
@ 5643 train 4.1795 , allloss: 4.1796, dt: 1313.56ms, fracRes: 0.7105, norm(attn): 0.1572, norm(output): 0.9429, norm(x): 0.7911, norm(y): 0.9999, norm:0.5904, tok/sec: 99783.59, flops:104.74, batch-reuse:1
@ 5644 train 4.1676 , allloss: 4.1677, dt: 1328.92ms, fracRes: 0.7103, norm(attn): 0.1572, norm(output): 0.9429, norm(x): 0.7910, norm(y): 0.9997, norm:0.5207, tok/sec: 98630.72, flops:103.53, batch-reuse:1
@ 5645 train 3.9985 , allloss: 4.0001, dt: 1329.07ms, fracRes: 0.7104, norm(attn): 0.1602, norm(output): 0.9427, norm(x): 0.7906, norm(y): 0.9997, norm:0.6313, tok/sec: 98619.51, flops:103.51, batch-reuse:1
@ 5646 train 4.0539 , allloss: 4.0539, dt: 1317.57ms, fracRes: 0.7106, norm(attn): 0.1592, norm(output): 0.9424, norm(x): 0.7898, norm(y): 1.0000, norm:0.7025, tok/sec: 99480.39, flops:104.42, batch-reuse:1
@ 5647 train 4.1820 , allloss: 4.1820, dt: 1329.18ms, fracRes: 0.7107, norm(attn): 0.1582, norm(output): 0.9424, norm(x): 0.7896, norm(y): 1.0000, norm:0.5376, tok/sec: 98611.53, flops:103.51, batch-reuse:1
@ 5648 train 4.0518 , allloss: 4.0518, dt: 1326.88ms, fracRes: 0.7104, norm(attn): 0.1592, norm(output): 0.9425, norm(x): 0.7905, norm(y): 1.0000, norm:0.6286, tok/sec: 98782.30, flops:103.69, batch-reuse:1
@ 5649 train 4.1487 , allloss: 4.1487, dt: 1330.33ms, fracRes: 0.7106, norm(attn): 0.1562, norm(output): 0.9431, norm(x): 0.7913, norm(y): 1.0000, norm:0.6451, tok/sec: 98526.29, flops:103.42, batch-reuse:1
@ 5650 train 3.9516 , allloss: 3.9517, dt: 1335.33ms, fracRes: 0.7106, norm(attn): 0.1582, norm(output): 0.9431, norm(x): 0.7917, norm(y): 1.0000, norm:0.6095, tok/sec: 98156.87, flops:103.03, batch-reuse:1
@ 5651 train 4.0832 , allloss: 4.0842, dt: 1325.48ms, fracRes: 0.7104, norm(attn): 0.1572, norm(output): 0.9429, norm(x): 0.7919, norm(y): 0.9997, norm:0.6417, tok/sec: 98886.44, flops:103.79, batch-reuse:1
@ 5652 train 4.0649 , allloss: 4.0651, dt: 1295.21ms, fracRes: 0.7105, norm(attn): 0.1582, norm(output): 0.9426, norm(x): 0.7910, norm(y): 0.9997, norm:0.6795, tok/sec: 101197.83, flops:106.22, batch-reuse:1
@ 5653 train 4.0659 , allloss: 4.0661, dt: 1324.99ms, fracRes: 0.7105, norm(attn): 0.1572, norm(output): 0.9426, norm(x): 0.7912, norm(y): 0.9998, norm:0.5827, tok/sec: 98922.88, flops:103.83, batch-reuse:1
@ 5654 train 4.1450 , allloss: 4.1451, dt: 1286.84ms, fracRes: 0.7105, norm(attn): 0.1582, norm(output): 0.9427, norm(x): 0.7913, norm(y): 0.9999, norm:0.6778, tok/sec: 101855.64, flops:106.91, batch-reuse:1
@ 5655 train 4.1504 , allloss: 4.1505, dt: 1312.64ms, fracRes: 0.7105, norm(attn): 0.1572, norm(output): 0.9429, norm(x): 0.7920, norm(y): 0.9998, norm:0.7576, tok/sec: 99853.46, flops:104.81, batch-reuse:1
@ 5656 train 4.1371 , allloss: 4.1372, dt: 1297.38ms, fracRes: 0.7106, norm(attn): 0.1572, norm(output): 0.9428, norm(x): 0.7915, norm(y): 0.9999, norm:0.7190, tok/sec: 101028.17, flops:106.04, batch-reuse:1
@ 5657 train 4.1260 , allloss: 4.1262, dt: 1318.39ms, fracRes: 0.7101, norm(attn): 0.1582, norm(output): 0.9428, norm(x): 0.7919, norm(y): 0.9996, norm:0.7461, tok/sec: 99418.09, flops:104.35, batch-reuse:1
@ 5658 train 4.0704 , allloss: 4.0705, dt: 1359.68ms, fracRes: 0.7101, norm(attn): 0.1592, norm(output): 0.9425, norm(x): 0.7914, norm(y): 0.9998, norm:0.7193, tok/sec: 96399.22, flops:101.18, batch-reuse:1
@ 5659 train 4.0970 , allloss: 4.0971, dt: 1314.87ms, fracRes: 0.7102, norm(attn): 0.1572, norm(output): 0.9427, norm(x): 0.7917, norm(y): 1.0001, norm:0.7003, tok/sec: 99684.71, flops:104.63, batch-reuse:1
@ 5660 train 4.0912 , allloss: 4.0912, dt: 1298.75ms, fracRes: 0.7101, norm(attn): 0.1572, norm(output): 0.9430, norm(x): 0.7924, norm(y): 1.0001, norm:0.5716, tok/sec: 100921.33, flops:105.93, batch-reuse:1
@ 5661 train 4.1888 , allloss: 4.1889, dt: 1306.91ms, fracRes: 0.7103, norm(attn): 0.1572, norm(output): 0.9428, norm(x): 0.7920, norm(y): 1.0000, norm:0.5947, tok/sec: 100291.73, flops:105.27, batch-reuse:1
@ 5662 train 4.1288 , allloss: 4.1288, dt: 1292.43ms, fracRes: 0.7101, norm(attn): 0.1572, norm(output): 0.9425, norm(x): 0.7915, norm(y): 0.9999, norm:0.5347, tok/sec: 101415.24, flops:106.45, batch-reuse:1
@ 5663 train 4.1573 , allloss: 4.1575, dt: 1299.67ms, fracRes: 0.7102, norm(attn): 0.1572, norm(output): 0.9429, norm(x): 0.7916, norm(y): 0.9999, norm:0.5476, tok/sec: 100850.00, flops:105.86, batch-reuse:1
@ 5664 train 4.0429 , allloss: 4.0429, dt: 1307.88ms, fracRes: 0.7102, norm(attn): 0.1572, norm(output): 0.9429, norm(x): 0.7914, norm(y): 1.0000, norm:0.5207, tok/sec: 100217.46, flops:105.19, batch-reuse:1
@ 5665 train 4.1088 , allloss: 4.1104, dt: 1334.47ms, fracRes: 0.7104, norm(attn): 0.1582, norm(output): 0.9428, norm(x): 0.7910, norm(y): 1.0000, norm:0.5522, tok/sec: 98220.00, flops:103.09, batch-reuse:1
@ 5666 train 4.1402 , allloss: 4.1403, dt: 1296.75ms, fracRes: 0.7106, norm(attn): 0.1572, norm(output): 0.9428, norm(x): 0.7911, norm(y): 1.0000, norm:0.5437, tok/sec: 101077.38, flops:106.09, batch-reuse:1
@ 5667 train 4.0850 , allloss: 4.0850, dt: 1311.02ms, fracRes: 0.7106, norm(attn): 0.1582, norm(output): 0.9428, norm(x): 0.7915, norm(y): 0.9999, norm:0.6733, tok/sec: 99977.31, flops:104.94, batch-reuse:1
@ 5668 train 4.0619 , allloss: 4.0620, dt: 1313.06ms, fracRes: 0.7104, norm(attn): 0.1572, norm(output): 0.9428, norm(x): 0.7917, norm(y): 0.9998, norm:0.5225, tok/sec: 99822.17, flops:104.78, batch-reuse:1
@ 5669 train 4.0727 , allloss: 4.0735, dt: 1290.96ms, fracRes: 0.7102, norm(attn): 0.1572, norm(output): 0.9428, norm(x): 0.7914, norm(y): 0.9999, norm:0.6453, tok/sec: 101530.53, flops:106.57, batch-reuse:1
@ 5670 train 4.1246 , allloss: 4.1254, dt: 1318.50ms, fracRes: 0.7105, norm(attn): 0.1582, norm(output): 0.9430, norm(x): 0.7911, norm(y): 0.9999, norm:0.7156, tok/sec: 99409.77, flops:104.34, batch-reuse:1
@ 5671 train 4.1750 , allloss: 4.1753, dt: 1331.27ms, fracRes: 0.7106, norm(attn): 0.1572, norm(output): 0.9429, norm(x): 0.7913, norm(y): 0.9999, norm:0.6614, tok/sec: 98456.03, flops:103.34, batch-reuse:1
@ 5672 train 4.0645 , allloss: 4.0655, dt: 1271.14ms, fracRes: 0.7106, norm(attn): 0.1572, norm(output): 0.9428, norm(x): 0.7913, norm(y): 1.0000, norm:0.5602, tok/sec: 103113.52, flops:108.23, batch-reuse:1
@ 5673 train 4.0186 , allloss: 4.0189, dt: 1300.85ms, fracRes: 0.7104, norm(attn): 0.1582, norm(output): 0.9426, norm(x): 0.7912, norm(y): 0.9998, norm:0.6427, tok/sec: 100758.58, flops:105.76, batch-reuse:1
@ 5674 train 4.0186 , allloss: 4.0189, dt: 1276.78ms, fracRes: 0.7103, norm(attn): 0.1572, norm(output): 0.9426, norm(x): 0.7913, norm(y): 0.9998, norm:0.5832, tok/sec: 102657.99, flops:107.75, batch-reuse:1
@ 5675 train 4.0473 , allloss: 4.0474, dt: 1313.57ms, fracRes: 0.7104, norm(attn): 0.1572, norm(output): 0.9427, norm(x): 0.7915, norm(y): 0.9998, norm:0.4955, tok/sec: 99783.27, flops:104.74, batch-reuse:1
@ 5676 train 4.1665 , allloss: 4.1665, dt: 1297.53ms, fracRes: 0.7107, norm(attn): 0.1562, norm(output): 0.9430, norm(x): 0.7917, norm(y): 0.9999, norm:0.5921, tok/sec: 101016.38, flops:106.03, batch-reuse:1
@ 5677 train 4.0115 , allloss: 4.0117, dt: 1301.46ms, fracRes: 0.7107, norm(attn): 0.1572, norm(output): 0.9429, norm(x): 0.7919, norm(y): 0.9998, norm:0.6145, tok/sec: 100711.34, flops:105.71, batch-reuse:1
@ 5678 train 3.9767 , allloss: 3.9767, dt: 1319.62ms, fracRes: 0.7105, norm(attn): 0.1572, norm(output): 0.9428, norm(x): 0.7920, norm(y): 0.9998, norm:0.5966, tok/sec: 99325.48, flops:104.26, batch-reuse:1
@ 5679 train 3.9955 , allloss: 3.9957, dt: 1319.81ms, fracRes: 0.7105, norm(attn): 0.1572, norm(output): 0.9425, norm(x): 0.7919, norm(y): 0.9999, norm:0.5879, tok/sec: 99311.24, flops:104.24, batch-reuse:1
@ 5680 train 4.0788 , allloss: 4.0788, dt: 1301.87ms, fracRes: 0.7106, norm(attn): 0.1572, norm(output): 0.9428, norm(x): 0.7922, norm(y): 0.9999, norm:0.5430, tok/sec: 100680.00, flops:105.68, batch-reuse:1
@ 5681 train 4.0162 , allloss: 4.0162, dt: 1312.45ms, fracRes: 0.7106, norm(attn): 0.1572, norm(output): 0.9429, norm(x): 0.7919, norm(y): 0.9997, norm:0.5704, tok/sec: 99868.26, flops:104.82, batch-reuse:1
@ 5682 train 4.0007 , allloss: 4.0007, dt: 1297.15ms, fracRes: 0.7103, norm(attn): 0.1582, norm(output): 0.9427, norm(x): 0.7917, norm(y): 0.9997, norm:0.6357, tok/sec: 101046.07, flops:106.06, batch-reuse:1
@ 5683 train 4.0404 , allloss: 4.0404, dt: 1275.26ms, fracRes: 0.7102, norm(attn): 0.1572, norm(output): 0.9427, norm(x): 0.7920, norm(y): 0.9997, norm:0.5944, tok/sec: 102780.38, flops:107.88, batch-reuse:1
@ 5684 train 4.0453 , allloss: 4.0453, dt: 1285.35ms, fracRes: 0.7104, norm(attn): 0.1582, norm(output): 0.9425, norm(x): 0.7912, norm(y): 0.9998, norm:0.6141, tok/sec: 101973.77, flops:107.03, batch-reuse:1
@ 5685 train 4.0512 , allloss: 4.0512, dt: 1297.53ms, fracRes: 0.7105, norm(attn): 0.1572, norm(output): 0.9429, norm(x): 0.7919, norm(y): 1.0000, norm:0.6266, tok/sec: 101016.79, flops:106.03, batch-reuse:1
@ 5686 train 4.0040 , allloss: 4.0042, dt: 1277.28ms, fracRes: 0.7104, norm(attn): 0.1572, norm(output): 0.9427, norm(x): 0.7920, norm(y): 1.0000, norm:0.6731, tok/sec: 102617.71, flops:107.71, batch-reuse:1
@ 5687 train 4.0392 , allloss: 4.0392, dt: 1300.90ms, fracRes: 0.7103, norm(attn): 0.1572, norm(output): 0.9426, norm(x): 0.7919, norm(y): 0.9998, norm:0.7695, tok/sec: 100754.59, flops:105.76, batch-reuse:1
@ 5688 train 4.0346 , allloss: 4.0347, dt: 1315.14ms, fracRes: 0.7105, norm(attn): 0.1572, norm(output): 0.9428, norm(x): 0.7919, norm(y): 0.9997, norm:0.7044, tok/sec: 99663.86, flops:104.61, batch-reuse:1
@ 5689 train 4.0431 , allloss: 4.0462, dt: 1277.66ms, fracRes: 0.7103, norm(attn): 0.1572, norm(output): 0.9430, norm(x): 0.7921, norm(y): 0.9995, norm:0.6157, tok/sec: 102587.86, flops:107.68, batch-reuse:1
@ 5690 train 3.9640 , allloss: 3.9642, dt: 1288.09ms, fracRes: 0.7103, norm(attn): 0.1582, norm(output): 0.9430, norm(x): 0.7920, norm(y): 0.9996, norm:0.6760, tok/sec: 101756.73, flops:106.81, batch-reuse:1
@ 5691 train 4.0152 , allloss: 4.0153, dt: 1288.60ms, fracRes: 0.7105, norm(attn): 0.1562, norm(output): 0.9429, norm(x): 0.7921, norm(y): 0.9998, norm:0.6518, tok/sec: 101716.73, flops:106.77, batch-reuse:1
@ 5692 train 3.9881 , allloss: 3.9881, dt: 1281.27ms, fracRes: 0.7105, norm(attn): 0.1572, norm(output): 0.9425, norm(x): 0.7915, norm(y): 0.9999, norm:0.5911, tok/sec: 102298.42, flops:107.38, batch-reuse:1
@ 5693 train 4.0237 , allloss: 4.0240, dt: 1299.65ms, fracRes: 0.7104, norm(attn): 0.1572, norm(output): 0.9427, norm(x): 0.7915, norm(y): 0.9999, norm:0.6096, tok/sec: 100851.97, flops:105.86, batch-reuse:1
@ 5694 train 4.0177 , allloss: 4.0178, dt: 1319.58ms, fracRes: 0.7105, norm(attn): 0.1582, norm(output): 0.9424, norm(x): 0.7909, norm(y): 0.9998, norm:0.6021, tok/sec: 99328.42, flops:104.26, batch-reuse:1
@ 5695 train 4.0092 , allloss: 4.0093, dt: 1287.43ms, fracRes: 0.7105, norm(attn): 0.1572, norm(output): 0.9428, norm(x): 0.7919, norm(y): 0.9997, norm:0.6878, tok/sec: 101809.42, flops:106.86, batch-reuse:1
@ 5696 train 4.0260 , allloss: 4.0261, dt: 1302.08ms, fracRes: 0.7105, norm(attn): 0.1562, norm(output): 0.9427, norm(x): 0.7917, norm(y): 0.9996, norm:0.6772, tok/sec: 100663.47, flops:105.66, batch-reuse:1
@ 5697 train 4.0444 , allloss: 4.0460, dt: 1336.87ms, fracRes: 0.7106, norm(attn): 0.1572, norm(output): 0.9426, norm(x): 0.7914, norm(y): 0.9998, norm:0.6060, tok/sec: 98043.75, flops:102.91, batch-reuse:1
@ 5698 train 4.0720 , allloss: 4.0720, dt: 1328.74ms, fracRes: 0.7107, norm(attn): 0.1572, norm(output): 0.9428, norm(x): 0.7917, norm(y): 1.0000, norm:0.7681, tok/sec: 98643.66, flops:103.54, batch-reuse:1
@ 5699 train 4.0853 , allloss: 4.0859, dt: 1330.84ms, fracRes: 0.7105, norm(attn): 0.1572, norm(output): 0.9428, norm(x): 0.7917, norm(y): 0.9998, norm:0.7104, tok/sec: 98487.81, flops:103.38, batch-reuse:1
@ 5700 train 4.0959 , allloss: 4.0991, dt: 1332.43ms, fracRes: 0.7106, norm(attn): 0.1582, norm(output): 0.9425, norm(x): 0.7907, norm(y): 0.9999, norm:0.7194, tok/sec: 98370.32, flops:103.25, batch-reuse:1
@ 5701 train 4.0168 , allloss: 4.0171, dt: 1332.62ms, fracRes: 0.7104, norm(attn): 0.1572, norm(output): 0.9427, norm(x): 0.7922, norm(y): 0.9997, norm:0.7639, tok/sec: 98356.36, flops:103.24, batch-reuse:1
@ 5702 train 4.0604 , allloss: 4.0605, dt: 1322.74ms, fracRes: 0.7105, norm(attn): 0.1572, norm(output): 0.9429, norm(x): 0.7925, norm(y): 0.9997, norm:0.6412, tok/sec: 99091.20, flops:104.01, batch-reuse:1
@ 5703 train 4.0692 , allloss: 4.0692, dt: 1282.51ms, fracRes: 0.7105, norm(attn): 0.1592, norm(output): 0.9426, norm(x): 0.7922, norm(y): 0.9998, norm:0.7172, tok/sec: 102199.38, flops:107.27, batch-reuse:1
@ 5704 train 4.0158 , allloss: 4.0158, dt: 1279.52ms, fracRes: 0.7102, norm(attn): 0.1572, norm(output): 0.9428, norm(x): 0.7929, norm(y): 0.9996, norm:0.6557, tok/sec: 102438.41, flops:107.52, batch-reuse:1
@ 5705 train 4.0265 , allloss: 4.0265, dt: 1289.79ms, fracRes: 0.7105, norm(attn): 0.1572, norm(output): 0.9426, norm(x): 0.7920, norm(y): 0.9996, norm:0.5817, tok/sec: 101622.92, flops:106.67, batch-reuse:1
@ 5706 train 4.1068 , allloss: 4.1069, dt: 1298.77ms, fracRes: 0.7103, norm(attn): 0.1572, norm(output): 0.9427, norm(x): 0.7924, norm(y): 0.9996, norm:0.6031, tok/sec: 100919.73, flops:105.93, batch-reuse:1
@ 5707 train 4.0295 , allloss: 4.0295, dt: 1301.30ms, fracRes: 0.7100, norm(attn): 0.1572, norm(output): 0.9430, norm(x): 0.7932, norm(y): 0.9994, norm:0.6439, tok/sec: 100723.57, flops:105.72, batch-reuse:1
@ 5708 train 4.0408 , allloss: 4.0409, dt: 1284.09ms, fracRes: 0.7099, norm(attn): 0.1572, norm(output): 0.9429, norm(x): 0.7931, norm(y): 0.9993, norm:0.5875, tok/sec: 102073.65, flops:107.14, batch-reuse:1
@ 5709 train 3.9439 , allloss: 3.9439, dt: 1289.19ms, fracRes: 0.7101, norm(attn): 0.1572, norm(output): 0.9430, norm(x): 0.7929, norm(y): 0.9994, norm:0.6819, tok/sec: 101670.38, flops:106.72, batch-reuse:1
@ 5710 train 3.9896 , allloss: 3.9896, dt: 1305.86ms, fracRes: 0.7101, norm(attn): 0.1572, norm(output): 0.9429, norm(x): 0.7927, norm(y): 0.9996, norm:0.5301, tok/sec: 100372.20, flops:105.35, batch-reuse:1
@ 5711 train 4.1261 , allloss: 4.1262, dt: 1306.06ms, fracRes: 0.7104, norm(attn): 0.1572, norm(output): 0.9425, norm(x): 0.7921, norm(y): 0.9998, norm:0.6522, tok/sec: 100356.55, flops:105.34, batch-reuse:1
@ 5712 train 4.0366 , allloss: 4.0366, dt: 1311.00ms, fracRes: 0.7104, norm(attn): 0.1562, norm(output): 0.9429, norm(x): 0.7930, norm(y): 0.9996, norm:0.6584, tok/sec: 99978.74, flops:104.94, batch-reuse:1
@ 5713 train 4.0503 , allloss: 4.0503, dt: 1283.77ms, fracRes: 0.7104, norm(attn): 0.1562, norm(output): 0.9430, norm(x): 0.7927, norm(y): 0.9997, norm:0.6206, tok/sec: 102099.28, flops:107.17, batch-reuse:1
@ 5714 train 4.0855 , allloss: 4.0856, dt: 1283.47ms, fracRes: 0.7103, norm(attn): 0.1562, norm(output): 0.9429, norm(x): 0.7924, norm(y): 0.9996, norm:0.6258, tok/sec: 102123.14, flops:107.19, batch-reuse:1
@ 5715 train 4.0769 , allloss: 4.0771, dt: 1307.21ms, fracRes: 0.7100, norm(attn): 0.1562, norm(output): 0.9430, norm(x): 0.7934, norm(y): 0.9996, norm:0.5635, tok/sec: 100268.31, flops:105.24, batch-reuse:1
@ 5716 train 4.0433 , allloss: 4.0433, dt: 1298.20ms, fracRes: 0.7100, norm(attn): 0.1572, norm(output): 0.9429, norm(x): 0.7935, norm(y): 0.9998, norm:0.5823, tok/sec: 100964.55, flops:105.98, batch-reuse:1
@ 5717 train 4.0664 , allloss: 4.0664, dt: 1313.50ms, fracRes: 0.7101, norm(attn): 0.1572, norm(output): 0.9428, norm(x): 0.7930, norm(y): 0.9998, norm:0.6342, tok/sec: 99787.99, flops:104.74, batch-reuse:1
@ 5718 train 4.0231 , allloss: 4.0232, dt: 1337.77ms, fracRes: 0.7103, norm(attn): 0.1592, norm(output): 0.9426, norm(x): 0.7918, norm(y): 0.9996, norm:0.7139, tok/sec: 97978.07, flops:102.84, batch-reuse:1
@ 5719 train 3.8875 , allloss: 3.8875, dt: 1340.08ms, fracRes: 0.7102, norm(attn): 0.1572, norm(output): 0.9428, norm(x): 0.7928, norm(y): 0.9993, norm:0.8414, tok/sec: 97809.15, flops:102.66, batch-reuse:1
@ 5720 train 3.9439 , allloss: 3.9440, dt: 1296.39ms, fracRes: 0.7103, norm(attn): 0.1562, norm(output): 0.9426, norm(x): 0.7925, norm(y): 0.9992, norm:0.6851, tok/sec: 101105.65, flops:106.12, batch-reuse:1
@ 5721 train 3.8633 , allloss: 3.8634, dt: 1305.69ms, fracRes: 0.7105, norm(attn): 0.1572, norm(output): 0.9427, norm(x): 0.7922, norm(y): 0.9994, norm:0.6706, tok/sec: 100385.20, flops:105.37, batch-reuse:1
@ 5722 train 4.0691 , allloss: 4.0691, dt: 1294.53ms, fracRes: 0.7103, norm(attn): 0.1562, norm(output): 0.9430, norm(x): 0.7926, norm(y): 0.9995, norm:0.6428, tok/sec: 101250.77, flops:106.28, batch-reuse:1
@ 5723 train 4.1299 , allloss: 4.1299, dt: 1297.12ms, fracRes: 0.7104, norm(attn): 0.1562, norm(output): 0.9430, norm(x): 0.7928, norm(y): 0.9996, norm:0.5574, tok/sec: 101048.51, flops:106.06, batch-reuse:1
@ 5724 train 3.9344 , allloss: 3.9344, dt: 1317.49ms, fracRes: 0.7103, norm(attn): 0.1572, norm(output): 0.9426, norm(x): 0.7932, norm(y): 0.9995, norm:0.6072, tok/sec: 99486.50, flops:104.42, batch-reuse:1
@ 5725 train 4.2912 , allloss: 4.2913, dt: 1311.34ms, fracRes: 0.7103, norm(attn): 0.1562, norm(output): 0.9437, norm(x): 0.7945, norm(y): 0.9995, norm:0.9818, tok/sec: 99952.71, flops:104.91, batch-reuse:1
@ 5726 train 3.9611 , allloss: 3.9618, dt: 1318.18ms, fracRes: 0.7100, norm(attn): 0.1572, norm(output): 0.9430, norm(x): 0.7938, norm(y): 0.9996, norm:0.9779, tok/sec: 99434.28, flops:104.37, batch-reuse:1
@ 5727 train 3.9229 , allloss: 3.9230, dt: 1336.32ms, fracRes: 0.7103, norm(attn): 0.1572, norm(output): 0.9428, norm(x): 0.7931, norm(y): 0.9994, norm:0.6619, tok/sec: 98084.16, flops:102.95, batch-reuse:1
@ 5728 train 3.9158 , allloss: 3.9159, dt: 1315.77ms, fracRes: 0.7104, norm(attn): 0.1572, norm(output): 0.9427, norm(x): 0.7927, norm(y): 0.9995, norm:0.8288, tok/sec: 99616.35, flops:104.56, batch-reuse:1
@ 5729 train 3.9688 , allloss: 3.9688, dt: 1350.82ms, fracRes: 0.7104, norm(attn): 0.1582, norm(output): 0.9424, norm(x): 0.7923, norm(y): 0.9995, norm:0.6060, tok/sec: 97031.31, flops:101.85, batch-reuse:1
@ 5730 train 4.0451 , allloss: 4.0451, dt: 1352.96ms, fracRes: 0.7104, norm(attn): 0.1582, norm(output): 0.9428, norm(x): 0.7928, norm(y): 0.9994, norm:0.6912, tok/sec: 96877.95, flops:101.69, batch-reuse:1
@ 5731 train 4.0227 , allloss: 4.0227, dt: 1337.58ms, fracRes: 0.7104, norm(attn): 0.1572, norm(output): 0.9429, norm(x): 0.7928, norm(y): 0.9993, norm:0.6441, tok/sec: 97991.67, flops:102.86, batch-reuse:1
@ 5732 train 3.8673 , allloss: 3.8675, dt: 1297.78ms, fracRes: 0.7105, norm(attn): 0.1572, norm(output): 0.9432, norm(x): 0.7934, norm(y): 0.9994, norm:0.6033, tok/sec: 100996.95, flops:106.01, batch-reuse:1
@ 5733 train 3.9839 , allloss: 3.9840, dt: 1311.68ms, fracRes: 0.7105, norm(attn): 0.1562, norm(output): 0.9433, norm(x): 0.7933, norm(y): 0.9993, norm:0.6322, tok/sec: 99926.82, flops:104.89, batch-reuse:1
@ 5734 train 4.0050 , allloss: 4.0057, dt: 1332.96ms, fracRes: 0.7103, norm(attn): 0.1572, norm(output): 0.9430, norm(x): 0.7930, norm(y): 0.9994, norm:0.6112, tok/sec: 98331.40, flops:103.21, batch-reuse:1
@ 5735 train 3.9651 , allloss: 3.9657, dt: 1341.46ms, fracRes: 0.7101, norm(attn): 0.1572, norm(output): 0.9426, norm(x): 0.7929, norm(y): 0.9995, norm:0.6562, tok/sec: 97708.55, flops:102.56, batch-reuse:1
@ 5736 train 3.9365 , allloss: 3.9365, dt: 1314.30ms, fracRes: 0.7104, norm(attn): 0.1572, norm(output): 0.9430, norm(x): 0.7936, norm(y): 0.9995, norm:0.6562, tok/sec: 99727.66, flops:104.68, batch-reuse:1
@ 5737 train 4.0683 , allloss: 4.0684, dt: 1331.44ms, fracRes: 0.7106, norm(attn): 0.1562, norm(output): 0.9431, norm(x): 0.7935, norm(y): 0.9993, norm:0.5931, tok/sec: 98443.62, flops:103.33, batch-reuse:1
@ 5738 train 3.9902 , allloss: 3.9902, dt: 1334.22ms, fracRes: 0.7102, norm(attn): 0.1572, norm(output): 0.9432, norm(x): 0.7937, norm(y): 0.9991, norm:0.6278, tok/sec: 98238.59, flops:103.11, batch-reuse:1
@ 5739 train 3.9501 , allloss: 3.9502, dt: 1339.47ms, fracRes: 0.7102, norm(attn): 0.1572, norm(output): 0.9430, norm(x): 0.7935, norm(y): 0.9991, norm:0.5974, tok/sec: 97853.91, flops:102.71, batch-reuse:1
@ 5740 train 3.9235 , allloss: 3.9236, dt: 1342.33ms, fracRes: 0.7104, norm(attn): 0.1582, norm(output): 0.9432, norm(x): 0.7937, norm(y): 0.9992, norm:0.5803, tok/sec: 97645.30, flops:102.49, batch-reuse:1
@ 5741 train 3.8951 , allloss: 3.8951, dt: 1349.50ms, fracRes: 0.7105, norm(attn): 0.1572, norm(output): 0.9428, norm(x): 0.7931, norm(y): 0.9993, norm:0.5405, tok/sec: 97126.21, flops:101.95, batch-reuse:1
@ 5742 train 3.9863 , allloss: 3.9865, dt: 1343.85ms, fracRes: 0.7105, norm(attn): 0.1562, norm(output): 0.9430, norm(x): 0.7933, norm(y): 0.9992, norm:0.5489, tok/sec: 97534.81, flops:102.38, batch-reuse:1
@ 5743 train 4.0235 , allloss: 4.0240, dt: 1344.64ms, fracRes: 0.7106, norm(attn): 0.1582, norm(output): 0.9426, norm(x): 0.7925, norm(y): 0.9992, norm:0.6364, tok/sec: 97477.11, flops:102.32, batch-reuse:1
@ 5744 train 3.9312 , allloss: 3.9318, dt: 1340.67ms, fracRes: 0.7101, norm(attn): 0.1562, norm(output): 0.9433, norm(x): 0.7940, norm(y): 0.9990, norm:0.5263, tok/sec: 97766.30, flops:102.62, batch-reuse:1
@ 5745 train 3.9353 , allloss: 3.9356, dt: 1345.78ms, fracRes: 0.7101, norm(attn): 0.1572, norm(output): 0.9427, norm(x): 0.7931, norm(y): 0.9991, norm:0.5934, tok/sec: 97394.67, flops:102.23, batch-reuse:1
@ 5746 train 4.0261 , allloss: 4.0264, dt: 1296.58ms, fracRes: 0.7101, norm(attn): 0.1562, norm(output): 0.9429, norm(x): 0.7939, norm(y): 0.9991, norm:0.6770, tok/sec: 101090.76, flops:106.11, batch-reuse:1
@ 5747 train 3.9619 , allloss: 3.9620, dt: 1308.85ms, fracRes: 0.7101, norm(attn): 0.1562, norm(output): 0.9429, norm(x): 0.7944, norm(y): 0.9993, norm:0.6597, tok/sec: 100142.63, flops:105.11, batch-reuse:1
@ 5748 train 3.8697 , allloss: 3.8700, dt: 1296.00ms, fracRes: 0.7101, norm(attn): 0.1572, norm(output): 0.9428, norm(x): 0.7937, norm(y): 0.9992, norm:0.5310, tok/sec: 101135.78, flops:106.16, batch-reuse:1
@ 5749 train 3.9554 , allloss: 3.9557, dt: 1283.61ms, fracRes: 0.7102, norm(attn): 0.1562, norm(output): 0.9430, norm(x): 0.7935, norm(y): 0.9991, norm:0.5978, tok/sec: 102111.81, flops:107.18, batch-reuse:1
@ 5750 train 3.9359 , allloss: 3.9370, dt: 1313.27ms, fracRes: 0.7105, norm(attn): 0.1582, norm(output): 0.9428, norm(x): 0.7925, norm(y): 0.9992, norm:0.6074, tok/sec: 99805.88, flops:104.76, batch-reuse:1
@ 5751 train 4.1371 , allloss: 4.1373, dt: 1339.13ms, fracRes: 0.7103, norm(attn): 0.1572, norm(output): 0.9433, norm(x): 0.7938, norm(y): 0.9993, norm:0.5681, tok/sec: 97878.76, flops:102.74, batch-reuse:1
@ 5752 train 4.0337 , allloss: 4.0343, dt: 1322.84ms, fracRes: 0.7103, norm(attn): 0.1562, norm(output): 0.9432, norm(x): 0.7936, norm(y): 0.9994, norm:0.6567, tok/sec: 99083.74, flops:104.00, batch-reuse:1
@ 5753 train 3.8974 , allloss: 3.8975, dt: 1336.32ms, fracRes: 0.7104, norm(attn): 0.1562, norm(output): 0.9429, norm(x): 0.7930, norm(y): 0.9994, norm:0.5971, tok/sec: 98084.02, flops:102.95, batch-reuse:1
@ 5754 train 3.9589 , allloss: 3.9590, dt: 1321.16ms, fracRes: 0.7106, norm(attn): 0.1562, norm(output): 0.9426, norm(x): 0.7921, norm(y): 0.9993, norm:0.6073, tok/sec: 99209.74, flops:104.13, batch-reuse:1
@ 5755 train 3.9932 , allloss: 3.9934, dt: 1296.61ms, fracRes: 0.7105, norm(attn): 0.1562, norm(output): 0.9432, norm(x): 0.7931, norm(y): 0.9993, norm:0.5700, tok/sec: 101088.27, flops:106.11, batch-reuse:1
@ 5756 train 4.0193 , allloss: 4.0194, dt: 1293.73ms, fracRes: 0.7103, norm(attn): 0.1562, norm(output): 0.9432, norm(x): 0.7937, norm(y): 0.9992, norm:0.5983, tok/sec: 101312.96, flops:106.34, batch-reuse:1
@ 5757 train 3.9403 , allloss: 3.9405, dt: 1291.40ms, fracRes: 0.7102, norm(attn): 0.1572, norm(output): 0.9430, norm(x): 0.7934, norm(y): 0.9991, norm:0.5691, tok/sec: 101495.85, flops:106.53, batch-reuse:1
@ 5758 train 4.0083 , allloss: 4.0090, dt: 1288.39ms, fracRes: 0.7104, norm(attn): 0.1572, norm(output): 0.9428, norm(x): 0.7928, norm(y): 0.9991, norm:0.5781, tok/sec: 101733.35, flops:106.78, batch-reuse:1
@ 5759 train 3.8847 , allloss: 3.8848, dt: 1294.77ms, fracRes: 0.7104, norm(attn): 0.1582, norm(output): 0.9430, norm(x): 0.7931, norm(y): 0.9991, norm:0.5944, tok/sec: 101231.64, flops:106.26, batch-reuse:1
@ 5760 train 3.9479 , allloss: 3.9480, dt: 1286.31ms, fracRes: 0.7106, norm(attn): 0.1572, norm(output): 0.9430, norm(x): 0.7931, norm(y): 0.9991, norm:0.6646, tok/sec: 101897.53, flops:106.95, batch-reuse:1
@ 5761 train 3.7887 , allloss: 3.7888, dt: 1304.96ms, fracRes: 0.7108, norm(attn): 0.1572, norm(output): 0.9427, norm(x): 0.7925, norm(y): 0.9991, norm:0.5753, tok/sec: 100441.56, flops:105.43, batch-reuse:1
@ 5762 train 3.8998 , allloss: 3.8999, dt: 1335.50ms, fracRes: 0.7107, norm(attn): 0.1582, norm(output): 0.9427, norm(x): 0.7925, norm(y): 0.9992, norm:0.5551, tok/sec: 98144.71, flops:103.02, batch-reuse:1
@ 5763 train 3.8428 , allloss: 3.8429, dt: 1341.69ms, fracRes: 0.7105, norm(attn): 0.1572, norm(output): 0.9426, norm(x): 0.7924, norm(y): 0.9991, norm:0.5176, tok/sec: 97691.43, flops:102.54, batch-reuse:1
@ 5764 train 4.0390 , allloss: 4.0391, dt: 1303.26ms, fracRes: 0.7103, norm(attn): 0.1562, norm(output): 0.9431, norm(x): 0.7931, norm(y): 0.9993, norm:0.5657, tok/sec: 100572.28, flops:105.56, batch-reuse:1
@ 5765 train 4.0001 , allloss: 4.0001, dt: 1326.23ms, fracRes: 0.7103, norm(attn): 0.1562, norm(output): 0.9431, norm(x): 0.7933, norm(y): 0.9996, norm:0.6007, tok/sec: 98830.30, flops:103.74, batch-reuse:1
@ 5766 train 4.1791 , allloss: 4.1792, dt: 1290.92ms, fracRes: 0.7107, norm(attn): 0.1562, norm(output): 0.9430, norm(x): 0.7929, norm(y): 0.9997, norm:0.6273, tok/sec: 101533.56, flops:106.57, batch-reuse:1
@ 5767 train 4.2420 , allloss: 4.2548, dt: 1321.46ms, fracRes: 0.7105, norm(attn): 0.1562, norm(output): 0.9430, norm(x): 0.7928, norm(y): 0.9994, norm:0.6174, tok/sec: 99187.33, flops:104.11, batch-reuse:1
@ 5768 train 4.1292 , allloss: 4.1293, dt: 1324.95ms, fracRes: 0.7104, norm(attn): 0.1562, norm(output): 0.9432, norm(x): 0.7933, norm(y): 0.9992, norm:0.6699, tok/sec: 98926.25, flops:103.84, batch-reuse:1
@ 5769 train 4.2218 , allloss: 4.2220, dt: 1302.59ms, fracRes: 0.7105, norm(attn): 0.1562, norm(output): 0.9434, norm(x): 0.7931, norm(y): 0.9993, norm:0.5442, tok/sec: 100623.78, flops:105.62, batch-reuse:1
@ 5770 train 4.2773 , allloss: 4.2776, dt: 1312.12ms, fracRes: 0.7107, norm(attn): 0.1562, norm(output): 0.9430, norm(x): 0.7928, norm(y): 0.9994, norm:0.6814, tok/sec: 99893.63, flops:104.85, batch-reuse:1
@ 5771 train 4.1305 , allloss: 4.1306, dt: 1310.63ms, fracRes: 0.7105, norm(attn): 0.1562, norm(output): 0.9430, norm(x): 0.7934, norm(y): 0.9996, norm:0.6456, tok/sec: 100006.86, flops:104.97, batch-reuse:1
@ 5772 train 4.1354 , allloss: 4.1355, dt: 1320.87ms, fracRes: 0.7104, norm(attn): 0.1562, norm(output): 0.9432, norm(x): 0.7936, norm(y): 0.9993, norm:0.6474, tok/sec: 99231.54, flops:104.16, batch-reuse:1
@ 5773 train 4.0663 , allloss: 4.0684, dt: 1282.17ms, fracRes: 0.7103, norm(attn): 0.1562, norm(output): 0.9429, norm(x): 0.7929, norm(y): 0.9991, norm:0.7424, tok/sec: 102227.03, flops:107.30, batch-reuse:1
@ 5774 train 4.1387 , allloss: 4.1388, dt: 1305.61ms, fracRes: 0.7107, norm(attn): 0.1572, norm(output): 0.9431, norm(x): 0.7926, norm(y): 0.9992, norm:0.8362, tok/sec: 100391.61, flops:105.37, batch-reuse:1
@ 5775 train 4.2384 , allloss: 4.2386, dt: 1323.67ms, fracRes: 0.7110, norm(attn): 0.1562, norm(output): 0.9431, norm(x): 0.7925, norm(y): 0.9993, norm:0.8206, tok/sec: 99021.95, flops:103.94, batch-reuse:1
@ 5776 train 4.1253 , allloss: 4.1257, dt: 1289.46ms, fracRes: 0.7106, norm(attn): 0.1572, norm(output): 0.9430, norm(x): 0.7936, norm(y): 0.9992, norm:0.5761, tok/sec: 101648.49, flops:106.69, batch-reuse:1
@ 5777 train 4.0491 , allloss: 4.0492, dt: 1322.15ms, fracRes: 0.7107, norm(attn): 0.1562, norm(output): 0.9431, norm(x): 0.7939, norm(y): 0.9992, norm:0.8258, tok/sec: 99135.23, flops:104.06, batch-reuse:1
@ 5778 train 4.0677 , allloss: 4.0680, dt: 1306.13ms, fracRes: 0.7107, norm(attn): 0.1572, norm(output): 0.9427, norm(x): 0.7932, norm(y): 0.9990, norm:0.6577, tok/sec: 100351.21, flops:105.33, batch-reuse:1
@ 5779 train 4.2021 , allloss: 4.2023, dt: 1319.57ms, fracRes: 0.7109, norm(attn): 0.1562, norm(output): 0.9431, norm(x): 0.7928, norm(y): 0.9991, norm:0.7210, tok/sec: 99329.02, flops:104.26, batch-reuse:1
@ 5780 train 4.1753 , allloss: 4.1753, dt: 1292.38ms, fracRes: 0.7107, norm(attn): 0.1562, norm(output): 0.9436, norm(x): 0.7933, norm(y): 0.9991, norm:0.8906, tok/sec: 101418.87, flops:106.45, batch-reuse:1
@ 5781 train 4.0830 , allloss: 4.0831, dt: 1298.01ms, fracRes: 0.7105, norm(attn): 0.1572, norm(output): 0.9432, norm(x): 0.7934, norm(y): 0.9989, norm:0.6653, tok/sec: 100979.09, flops:105.99, batch-reuse:1
@ 5782 train 4.1317 , allloss: 4.1319, dt: 1297.05ms, fracRes: 0.7106, norm(attn): 0.1572, norm(output): 0.9431, norm(x): 0.7933, norm(y): 0.9989, norm:0.6491, tok/sec: 101054.28, flops:106.07, batch-reuse:1
@ 5783 train 4.0415 , allloss: 4.0416, dt: 1307.36ms, fracRes: 0.7107, norm(attn): 0.1572, norm(output): 0.9432, norm(x): 0.7936, norm(y): 0.9990, norm:0.7208, tok/sec: 100257.25, flops:105.23, batch-reuse:1
@ 5784 train 4.1256 , allloss: 4.1257, dt: 1283.97ms, fracRes: 0.7106, norm(attn): 0.1572, norm(output): 0.9429, norm(x): 0.7934, norm(y): 0.9990, norm:0.7236, tok/sec: 102083.60, flops:107.15, batch-reuse:1
@ 5785 train 4.1479 , allloss: 4.1480, dt: 1306.60ms, fracRes: 0.7108, norm(attn): 0.1572, norm(output): 0.9430, norm(x): 0.7931, norm(y): 0.9990, norm:0.6366, tok/sec: 100315.63, flops:105.29, batch-reuse:1
@ 5786 train 4.0988 , allloss: 4.0989, dt: 1329.10ms, fracRes: 0.7105, norm(attn): 0.1572, norm(output): 0.9431, norm(x): 0.7936, norm(y): 0.9989, norm:0.7495, tok/sec: 98617.15, flops:103.51, batch-reuse:1
@ 5787 train 4.1026 , allloss: 4.1027, dt: 1310.97ms, fracRes: 0.7104, norm(attn): 0.1562, norm(output): 0.9433, norm(x): 0.7939, norm(y): 0.9987, norm:0.6396, tok/sec: 99981.07, flops:104.94, batch-reuse:1
@ 5788 train 4.1271 , allloss: 4.1272, dt: 1327.95ms, fracRes: 0.7104, norm(attn): 0.1572, norm(output): 0.9434, norm(x): 0.7939, norm(y): 0.9989, norm:0.6166, tok/sec: 98702.23, flops:103.60, batch-reuse:1
@ 5789 train 4.0760 , allloss: 4.0760, dt: 1297.96ms, fracRes: 0.7106, norm(attn): 0.1572, norm(output): 0.9433, norm(x): 0.7935, norm(y): 0.9992, norm:0.6268, tok/sec: 100983.13, flops:106.00, batch-reuse:1
@ 5790 train 4.1131 , allloss: 4.1133, dt: 1324.82ms, fracRes: 0.7105, norm(attn): 0.1562, norm(output): 0.9435, norm(x): 0.7937, norm(y): 0.9993, norm:0.5806, tok/sec: 98935.42, flops:103.85, batch-reuse:1
@ 5791 train 4.1375 , allloss: 4.1379, dt: 1296.12ms, fracRes: 0.7103, norm(attn): 0.1562, norm(output): 0.9433, norm(x): 0.7939, norm(y): 0.9990, norm:0.5544, tok/sec: 101126.61, flops:106.15, batch-reuse:1
@ 5792 train 4.2135 , allloss: 4.2137, dt: 1303.42ms, fracRes: 0.7103, norm(attn): 0.1562, norm(output): 0.9434, norm(x): 0.7942, norm(y): 0.9990, norm:0.6248, tok/sec: 100559.91, flops:105.55, batch-reuse:1
@ 5793 train 4.1046 , allloss: 4.1048, dt: 1321.95ms, fracRes: 0.7106, norm(attn): 0.1562, norm(output): 0.9430, norm(x): 0.7938, norm(y): 0.9990, norm:0.6944, tok/sec: 99150.29, flops:104.07, batch-reuse:1
@ 5794 train 4.0511 , allloss: 4.0512, dt: 1336.87ms, fracRes: 0.7106, norm(attn): 0.1562, norm(output): 0.9430, norm(x): 0.7935, norm(y): 0.9991, norm:0.6189, tok/sec: 98044.12, flops:102.91, batch-reuse:1
@ 5795 train 4.0728 , allloss: 4.0730, dt: 1319.06ms, fracRes: 0.7106, norm(attn): 0.1572, norm(output): 0.9432, norm(x): 0.7932, norm(y): 0.9991, norm:0.5979, tok/sec: 99367.94, flops:104.30, batch-reuse:1
@ 5796 train 4.1770 , allloss: 4.1771, dt: 1305.56ms, fracRes: 0.7106, norm(attn): 0.1562, norm(output): 0.9431, norm(x): 0.7933, norm(y): 0.9992, norm:0.6484, tok/sec: 100395.19, flops:105.38, batch-reuse:1
@ 5797 train 4.0914 , allloss: 4.0915, dt: 1331.04ms, fracRes: 0.7103, norm(attn): 0.1562, norm(output): 0.9431, norm(x): 0.7940, norm(y): 0.9992, norm:0.6345, tok/sec: 98473.17, flops:103.36, batch-reuse:1
@ 5798 train 4.1381 , allloss: 4.1382, dt: 1323.88ms, fracRes: 0.7104, norm(attn): 0.1562, norm(output): 0.9431, norm(x): 0.7941, norm(y): 0.9992, norm:0.6189, tok/sec: 99006.13, flops:103.92, batch-reuse:1
@ 5799 train 3.9666 , allloss: 3.9667, dt: 1318.38ms, fracRes: 0.7103, norm(attn): 0.1562, norm(output): 0.9431, norm(x): 0.7944, norm(y): 0.9991, norm:0.5467, tok/sec: 99419.17, flops:104.35, batch-reuse:1
@ 5800 train 4.0646 , allloss: 4.0647, dt: 1332.55ms, fracRes: 0.7102, norm(attn): 0.1562, norm(output): 0.9432, norm(x): 0.7942, norm(y): 0.9989, norm:0.6913, tok/sec: 98361.78, flops:103.24, batch-reuse:1
@ 5801 train 4.0920 , allloss: 4.0923, dt: 1329.63ms, fracRes: 0.7103, norm(attn): 0.1562, norm(output): 0.9430, norm(x): 0.7937, norm(y): 0.9989, norm:0.6250, tok/sec: 98577.86, flops:103.47, batch-reuse:1
@ 5802 train 4.2488 , allloss: 4.2491, dt: 1317.27ms, fracRes: 0.7104, norm(attn): 0.1553, norm(output): 0.9433, norm(x): 0.7943, norm(y): 0.9992, norm:0.6793, tok/sec: 99502.40, flops:104.44, batch-reuse:1
@ 5803 train 4.0643 , allloss: 4.0643, dt: 1307.97ms, fracRes: 0.7104, norm(attn): 0.1562, norm(output): 0.9432, norm(x): 0.7949, norm(y): 0.9994, norm:0.8378, tok/sec: 100210.59, flops:105.18, batch-reuse:1
@ 5804 train 4.2042 , allloss: 4.2042, dt: 1307.38ms, fracRes: 0.7105, norm(attn): 0.1562, norm(output): 0.9431, norm(x): 0.7944, norm(y): 0.9991, norm:0.5394, tok/sec: 100255.27, flops:105.23, batch-reuse:1
@ 5805 train 4.2211 , allloss: 4.2213, dt: 1334.56ms, fracRes: 0.7104, norm(attn): 0.1562, norm(output): 0.9429, norm(x): 0.7935, norm(y): 0.9989, norm:0.8737, tok/sec: 98213.98, flops:103.09, batch-reuse:1
@ 5806 train 4.0643 , allloss: 4.0644, dt: 1320.58ms, fracRes: 0.7104, norm(attn): 0.1572, norm(output): 0.9427, norm(x): 0.7928, norm(y): 0.9988, norm:0.5867, tok/sec: 99253.64, flops:104.18, batch-reuse:1
@ 5807 train 4.0580 , allloss: 4.0581, dt: 1300.66ms, fracRes: 0.7106, norm(attn): 0.1572, norm(output): 0.9432, norm(x): 0.7933, norm(y): 0.9988, norm:0.6551, tok/sec: 100773.20, flops:105.77, batch-reuse:1
@ 5808 train 4.0823 , allloss: 4.0824, dt: 1332.64ms, fracRes: 0.7107, norm(attn): 0.1572, norm(output): 0.9434, norm(x): 0.7936, norm(y): 0.9990, norm:0.6352, tok/sec: 98355.01, flops:103.24, batch-reuse:1
@ 5809 train 4.1388 , allloss: 4.1390, dt: 1301.13ms, fracRes: 0.7108, norm(attn): 0.1562, norm(output): 0.9428, norm(x): 0.7928, norm(y): 0.9990, norm:0.7024, tok/sec: 100737.03, flops:105.74, batch-reuse:1
@ 5810 train 4.1460 , allloss: 4.1462, dt: 1304.05ms, fracRes: 0.7105, norm(attn): 0.1562, norm(output): 0.9431, norm(x): 0.7941, norm(y): 0.9989, norm:0.6156, tok/sec: 100511.14, flops:105.50, batch-reuse:1
@ 5811 train 4.1350 , allloss: 4.1351, dt: 1305.49ms, fracRes: 0.7106, norm(attn): 0.1562, norm(output): 0.9432, norm(x): 0.7939, norm(y): 0.9989, norm:0.7671, tok/sec: 100400.45, flops:105.38, batch-reuse:1
@ 5812 train 4.0962 , allloss: 4.0963, dt: 1295.28ms, fracRes: 0.7107, norm(attn): 0.1572, norm(output): 0.9432, norm(x): 0.7940, norm(y): 0.9989, norm:0.5571, tok/sec: 101192.04, flops:106.21, batch-reuse:1
@ 5813 train 4.0973 , allloss: 4.0975, dt: 1282.57ms, fracRes: 0.7106, norm(attn): 0.1572, norm(output): 0.9434, norm(x): 0.7945, norm(y): 0.9990, norm:0.6318, tok/sec: 102194.88, flops:107.27, batch-reuse:1
@ 5814 train 4.1352 , allloss: 4.1352, dt: 1298.15ms, fracRes: 0.7102, norm(attn): 0.1572, norm(output): 0.9433, norm(x): 0.7948, norm(y): 0.9989, norm:0.5784, tok/sec: 100968.33, flops:105.98, batch-reuse:1
@ 5815 train 4.0878 , allloss: 4.0879, dt: 1299.35ms, fracRes: 0.7103, norm(attn): 0.1562, norm(output): 0.9433, norm(x): 0.7949, norm(y): 0.9987, norm:0.5753, tok/sec: 100875.05, flops:105.88, batch-reuse:1
@ 5816 train 4.0463 , allloss: 4.0464, dt: 1299.35ms, fracRes: 0.7105, norm(attn): 0.1562, norm(output): 0.9432, norm(x): 0.7947, norm(y): 0.9988, norm:0.5080, tok/sec: 100875.16, flops:105.88, batch-reuse:1
@ 5817 train 4.0983 , allloss: 4.0983, dt: 1303.69ms, fracRes: 0.7105, norm(attn): 0.1562, norm(output): 0.9434, norm(x): 0.7950, norm(y): 0.9987, norm:0.5354, tok/sec: 100539.21, flops:105.53, batch-reuse:1
@ 5818 train 4.2272 , allloss: 4.2272, dt: 1298.63ms, fracRes: 0.7106, norm(attn): 0.1562, norm(output): 0.9437, norm(x): 0.7952, norm(y): 0.9987, norm:0.7792, tok/sec: 100930.65, flops:105.94, batch-reuse:1
@ 5819 train 4.1093 , allloss: 4.1095, dt: 1287.05ms, fracRes: 0.7106, norm(attn): 0.1562, norm(output): 0.9433, norm(x): 0.7952, norm(y): 0.9988, norm:0.6963, tok/sec: 101838.90, flops:106.89, batch-reuse:1
@ 5820 train 4.0700 , allloss: 4.0700, dt: 1301.20ms, fracRes: 0.7103, norm(attn): 0.1562, norm(output): 0.9434, norm(x): 0.7959, norm(y): 0.9987, norm:0.6390, tok/sec: 100731.40, flops:105.73, batch-reuse:1
@ 5821 train 4.0861 , allloss: 4.0861, dt: 1303.15ms, fracRes: 0.7103, norm(attn): 0.1562, norm(output): 0.9433, norm(x): 0.7955, norm(y): 0.9987, norm:0.7327, tok/sec: 100581.07, flops:105.57, batch-reuse:1
@ 5822 train 4.0365 , allloss: 4.0366, dt: 1285.41ms, fracRes: 0.7105, norm(attn): 0.1562, norm(output): 0.9434, norm(x): 0.7952, norm(y): 0.9988, norm:0.5974, tok/sec: 101968.99, flops:107.03, batch-reuse:1
@ 5823 train 4.0755 , allloss: 4.0756, dt: 1303.61ms, fracRes: 0.7104, norm(attn): 0.1562, norm(output): 0.9431, norm(x): 0.7948, norm(y): 0.9987, norm:0.6425, tok/sec: 100545.07, flops:105.54, batch-reuse:1
@ 5824 train 4.1048 , allloss: 4.1049, dt: 1302.90ms, fracRes: 0.7105, norm(attn): 0.1562, norm(output): 0.9432, norm(x): 0.7947, norm(y): 0.9985, norm:0.5916, tok/sec: 100599.97, flops:105.59, batch-reuse:1
@ 5825 train 4.0752 , allloss: 4.0752, dt: 1296.48ms, fracRes: 0.7107, norm(attn): 0.1562, norm(output): 0.9435, norm(x): 0.7946, norm(y): 0.9985, norm:0.6307, tok/sec: 101098.29, flops:106.12, batch-reuse:1
@ 5826 train 4.1120 , allloss: 4.1121, dt: 1319.44ms, fracRes: 0.7103, norm(attn): 0.1562, norm(output): 0.9438, norm(x): 0.7955, norm(y): 0.9985, norm:0.6646, tok/sec: 99339.41, flops:104.27, batch-reuse:1
@ 5827 train 4.0752 , allloss: 4.0752, dt: 1349.76ms, fracRes: 0.7105, norm(attn): 0.1562, norm(output): 0.9433, norm(x): 0.7946, norm(y): 0.9986, norm:0.5631, tok/sec: 97107.97, flops:101.93, batch-reuse:1
@ 5828 train 4.0846 , allloss: 4.0847, dt: 1311.84ms, fracRes: 0.7107, norm(attn): 0.1562, norm(output): 0.9430, norm(x): 0.7940, norm(y): 0.9988, norm:0.7645, tok/sec: 99914.27, flops:104.87, batch-reuse:1
@ 5829 train 4.1579 , allloss: 4.1580, dt: 1287.14ms, fracRes: 0.7105, norm(attn): 0.1562, norm(output): 0.9434, norm(x): 0.7950, norm(y): 0.9985, norm:0.7670, tok/sec: 101831.73, flops:106.89, batch-reuse:1
@ 5830 train 4.0933 , allloss: 4.0934, dt: 1293.64ms, fracRes: 0.7105, norm(attn): 0.1562, norm(output): 0.9435, norm(x): 0.7953, norm(y): 0.9984, norm:0.7120, tok/sec: 101320.48, flops:106.35, batch-reuse:1
@ 5831 train 4.1234 , allloss: 4.1236, dt: 1313.01ms, fracRes: 0.7106, norm(attn): 0.1562, norm(output): 0.9436, norm(x): 0.7955, norm(y): 0.9985, norm:0.5737, tok/sec: 99825.96, flops:104.78, batch-reuse:1
@ 5832 train 4.0834 , allloss: 4.0834, dt: 1321.60ms, fracRes: 0.7105, norm(attn): 0.1562, norm(output): 0.9433, norm(x): 0.7953, norm(y): 0.9987, norm:0.5496, tok/sec: 99176.78, flops:104.10, batch-reuse:1
@ 5833 train 4.1309 , allloss: 4.1310, dt: 1284.27ms, fracRes: 0.7105, norm(attn): 0.1553, norm(output): 0.9435, norm(x): 0.7953, norm(y): 0.9988, norm:0.5436, tok/sec: 102059.51, flops:107.12, batch-reuse:1
@ 5834 train 4.1023 , allloss: 4.1023, dt: 1289.03ms, fracRes: 0.7104, norm(attn): 0.1553, norm(output): 0.9437, norm(x): 0.7953, norm(y): 0.9987, norm:0.5928, tok/sec: 101682.58, flops:106.73, batch-reuse:1
@ 5835 train 4.0673 , allloss: 4.0673, dt: 1308.46ms, fracRes: 0.7107, norm(attn): 0.1562, norm(output): 0.9434, norm(x): 0.7942, norm(y): 0.9987, norm:0.5766, tok/sec: 100172.74, flops:105.14, batch-reuse:1
@ 5836 train 4.0180 , allloss: 4.0270, dt: 1303.31ms, fracRes: 0.7108, norm(attn): 0.1572, norm(output): 0.9432, norm(x): 0.7944, norm(y): 0.9985, norm:0.5705, tok/sec: 100568.67, flops:105.56, batch-reuse:1
@ 5837 train 4.1803 , allloss: 4.1805, dt: 1303.10ms, fracRes: 0.7106, norm(attn): 0.1562, norm(output): 0.9434, norm(x): 0.7950, norm(y): 0.9985, norm:0.5062, tok/sec: 100584.42, flops:105.58, batch-reuse:1
@ 5838 train 4.0177 , allloss: 4.0178, dt: 1289.92ms, fracRes: 0.7106, norm(attn): 0.1592, norm(output): 0.9429, norm(x): 0.7942, norm(y): 0.9987, norm:0.6602, tok/sec: 101612.35, flops:106.66, batch-reuse:1
@ 5839 train 4.0234 , allloss: 4.0236, dt: 1322.63ms, fracRes: 0.7105, norm(attn): 0.1572, norm(output): 0.9435, norm(x): 0.7955, norm(y): 0.9986, norm:0.5668, tok/sec: 99099.31, flops:104.02, batch-reuse:1
@ 5840 train 4.0671 , allloss: 4.0672, dt: 1300.06ms, fracRes: 0.7109, norm(attn): 0.1562, norm(output): 0.9435, norm(x): 0.7948, norm(y): 0.9986, norm:0.5513, tok/sec: 100819.59, flops:105.82, batch-reuse:1
@ 5841 train 4.1308 , allloss: 4.1308, dt: 1312.78ms, fracRes: 0.7107, norm(attn): 0.1562, norm(output): 0.9436, norm(x): 0.7951, norm(y): 0.9986, norm:0.5704, tok/sec: 99843.09, flops:104.80, batch-reuse:1
@ 5842 train 4.1766 , allloss: 4.1767, dt: 1309.05ms, fracRes: 0.7108, norm(attn): 0.1553, norm(output): 0.9434, norm(x): 0.7944, norm(y): 0.9988, norm:0.5613, tok/sec: 100127.40, flops:105.10, batch-reuse:1
@ 5843 train 4.0432 , allloss: 4.0432, dt: 1305.23ms, fracRes: 0.7107, norm(attn): 0.1562, norm(output): 0.9438, norm(x): 0.7954, norm(y): 0.9988, norm:0.6083, tok/sec: 100420.71, flops:105.40, batch-reuse:1
@ 5844 train 4.0500 , allloss: 4.0500, dt: 1283.05ms, fracRes: 0.7108, norm(attn): 0.1553, norm(output): 0.9435, norm(x): 0.7951, norm(y): 0.9988, norm:0.6187, tok/sec: 102156.92, flops:107.23, batch-reuse:1
@ 5845 train 4.0488 , allloss: 4.0489, dt: 1304.40ms, fracRes: 0.7107, norm(attn): 0.1562, norm(output): 0.9437, norm(x): 0.7954, norm(y): 0.9986, norm:0.6161, tok/sec: 100484.61, flops:105.47, batch-reuse:1
@ 5846 train 4.0955 , allloss: 4.0956, dt: 1300.04ms, fracRes: 0.7107, norm(attn): 0.1562, norm(output): 0.9431, norm(x): 0.7946, norm(y): 0.9985, norm:0.6255, tok/sec: 100821.16, flops:105.83, batch-reuse:1
@ 5847 train 4.0179 , allloss: 4.0179, dt: 1321.78ms, fracRes: 0.7108, norm(attn): 0.1562, norm(output): 0.9432, norm(x): 0.7947, norm(y): 0.9985, norm:0.6086, tok/sec: 99162.97, flops:104.08, batch-reuse:1
@ 5848 train 4.0818 , allloss: 4.0819, dt: 1318.71ms, fracRes: 0.7105, norm(attn): 0.1572, norm(output): 0.9434, norm(x): 0.7955, norm(y): 0.9987, norm:0.6043, tok/sec: 99393.85, flops:104.33, batch-reuse:1
@ 5849 train 4.0511 , allloss: 4.0517, dt: 1305.89ms, fracRes: 0.7104, norm(attn): 0.1562, norm(output): 0.9437, norm(x): 0.7958, norm(y): 0.9988, norm:0.5483, tok/sec: 100370.09, flops:105.35, batch-reuse:1
@ 5850 train 4.1307 , allloss: 4.1307, dt: 1296.46ms, fracRes: 0.7104, norm(attn): 0.1562, norm(output): 0.9435, norm(x): 0.7952, norm(y): 0.9989, norm:0.6035, tok/sec: 101100.20, flops:106.12, batch-reuse:1
@ 5851 train 4.1370 , allloss: 4.1370, dt: 1322.71ms, fracRes: 0.7104, norm(attn): 0.1562, norm(output): 0.9432, norm(x): 0.7953, norm(y): 0.9988, norm:0.6892, tok/sec: 99093.51, flops:104.01, batch-reuse:1
@ 5852 train 4.1457 , allloss: 4.1460, dt: 1347.53ms, fracRes: 0.7105, norm(attn): 0.1562, norm(output): 0.9432, norm(x): 0.7955, norm(y): 0.9987, norm:0.6963, tok/sec: 97268.15, flops:102.10, batch-reuse:1
@ 5853 train 4.0700 , allloss: 4.0700, dt: 1313.04ms, fracRes: 0.7103, norm(attn): 0.1562, norm(output): 0.9437, norm(x): 0.7968, norm(y): 0.9987, norm:0.7664, tok/sec: 99823.06, flops:104.78, batch-reuse:1
@ 5854 train 4.1034 , allloss: 4.1034, dt: 1292.07ms, fracRes: 0.7105, norm(attn): 0.1553, norm(output): 0.9434, norm(x): 0.7958, norm(y): 0.9988, norm:0.5571, tok/sec: 101443.39, flops:106.48, batch-reuse:1
@ 5855 train 4.2427 , allloss: 4.2428, dt: 1305.56ms, fracRes: 0.7106, norm(attn): 0.1562, norm(output): 0.9432, norm(x): 0.7947, norm(y): 0.9989, norm:0.6102, tok/sec: 100395.55, flops:105.38, batch-reuse:1
@ 5856 train 4.1910 , allloss: 4.1911, dt: 1310.26ms, fracRes: 0.7105, norm(attn): 0.1562, norm(output): 0.9436, norm(x): 0.7954, norm(y): 0.9987, norm:0.5690, tok/sec: 100034.74, flops:105.00, batch-reuse:1
@ 5857 train 4.1632 , allloss: 4.1632, dt: 1302.61ms, fracRes: 0.7107, norm(attn): 0.1562, norm(output): 0.9436, norm(x): 0.7954, norm(y): 0.9989, norm:0.7605, tok/sec: 100622.86, flops:105.62, batch-reuse:1
@ 5858 train 4.0549 , allloss: 4.0549, dt: 1311.87ms, fracRes: 0.7109, norm(attn): 0.1562, norm(output): 0.9432, norm(x): 0.7948, norm(y): 0.9988, norm:0.8466, tok/sec: 99912.40, flops:104.87, batch-reuse:1
@ 5859 train 4.0492 , allloss: 4.0493, dt: 1301.20ms, fracRes: 0.7108, norm(attn): 0.1562, norm(output): 0.9429, norm(x): 0.7942, norm(y): 0.9987, norm:0.7448, tok/sec: 100731.29, flops:105.73, batch-reuse:1
@ 5860 train 4.0588 , allloss: 4.0589, dt: 1321.57ms, fracRes: 0.7108, norm(attn): 0.1562, norm(output): 0.9429, norm(x): 0.7940, norm(y): 0.9987, norm:0.6238, tok/sec: 99178.99, flops:104.10, batch-reuse:1
@ 5861 train 4.0608 , allloss: 4.0610, dt: 1324.56ms, fracRes: 0.7107, norm(attn): 0.1553, norm(output): 0.9435, norm(x): 0.7950, norm(y): 0.9985, norm:0.5813, tok/sec: 98955.47, flops:103.87, batch-reuse:1
@ 5862 train 3.9947 , allloss: 3.9947, dt: 1301.25ms, fracRes: 0.7107, norm(attn): 0.1553, norm(output): 0.9434, norm(x): 0.7950, norm(y): 0.9986, norm:0.6719, tok/sec: 100728.04, flops:105.73, batch-reuse:1
@ 5863 train 3.9621 , allloss: 3.9622, dt: 1317.64ms, fracRes: 0.7105, norm(attn): 0.1553, norm(output): 0.9436, norm(x): 0.7956, norm(y): 0.9985, norm:0.6251, tok/sec: 99474.69, flops:104.41, batch-reuse:1
@ 5864 train 4.1445 , allloss: 4.1446, dt: 1292.14ms, fracRes: 0.7105, norm(attn): 0.1553, norm(output): 0.9440, norm(x): 0.7956, norm(y): 0.9984, norm:0.5732, tok/sec: 101437.72, flops:106.47, batch-reuse:1
@ 5865 train 4.1164 , allloss: 4.1164, dt: 1314.19ms, fracRes: 0.7104, norm(attn): 0.1553, norm(output): 0.9439, norm(x): 0.7958, norm(y): 0.9983, norm:0.6156, tok/sec: 99736.18, flops:104.69, batch-reuse:1
@ 5866 train 4.0162 , allloss: 4.0163, dt: 1278.60ms, fracRes: 0.7106, norm(attn): 0.1553, norm(output): 0.9435, norm(x): 0.7952, norm(y): 0.9985, norm:0.7181, tok/sec: 102512.45, flops:107.60, batch-reuse:1
@ 5867 train 3.9645 , allloss: 3.9645, dt: 1310.28ms, fracRes: 0.7104, norm(attn): 0.1562, norm(output): 0.9433, norm(x): 0.7953, norm(y): 0.9985, norm:0.5226, tok/sec: 100033.88, flops:105.00, batch-reuse:1
@ 5868 train 4.0726 , allloss: 4.0727, dt: 1336.66ms, fracRes: 0.7105, norm(attn): 0.1562, norm(output): 0.9434, norm(x): 0.7954, norm(y): 0.9984, norm:0.6286, tok/sec: 98059.05, flops:102.93, batch-reuse:1
@ 5869 train 4.0692 , allloss: 4.0696, dt: 1310.71ms, fracRes: 0.7109, norm(attn): 0.1562, norm(output): 0.9434, norm(x): 0.7950, norm(y): 0.9985, norm:0.7109, tok/sec: 100000.98, flops:104.96, batch-reuse:1
@ 5870 train 4.0902 , allloss: 4.0902, dt: 1299.39ms, fracRes: 0.7106, norm(attn): 0.1553, norm(output): 0.9437, norm(x): 0.7958, norm(y): 0.9986, norm:0.7965, tok/sec: 100871.65, flops:105.88, batch-reuse:1
@ 5871 train 4.0231 , allloss: 4.0231, dt: 1294.44ms, fracRes: 0.7107, norm(attn): 0.1562, norm(output): 0.9434, norm(x): 0.7949, norm(y): 0.9988, norm:0.7624, tok/sec: 101257.52, flops:106.28, batch-reuse:1
@ 5872 train 4.0121 , allloss: 4.0121, dt: 1292.10ms, fracRes: 0.7104, norm(attn): 0.1562, norm(output): 0.9434, norm(x): 0.7950, norm(y): 0.9988, norm:0.5743, tok/sec: 101441.12, flops:106.48, batch-reuse:1
@ 5873 train 4.0507 , allloss: 4.0508, dt: 1311.94ms, fracRes: 0.7106, norm(attn): 0.1553, norm(output): 0.9437, norm(x): 0.7956, norm(y): 0.9987, norm:0.6251, tok/sec: 99906.83, flops:104.87, batch-reuse:1
@ 5874 train 3.9238 , allloss: 3.9239, dt: 1299.33ms, fracRes: 0.7105, norm(attn): 0.1553, norm(output): 0.9435, norm(x): 0.7959, norm(y): 0.9986, norm:0.5959, tok/sec: 100876.96, flops:105.88, batch-reuse:1
@ 5875 train 4.0378 , allloss: 4.0378, dt: 1283.13ms, fracRes: 0.7109, norm(attn): 0.1553, norm(output): 0.9436, norm(x): 0.7955, norm(y): 0.9988, norm:0.6681, tok/sec: 102149.93, flops:107.22, batch-reuse:1
@ 5876 train 4.0362 , allloss: 4.0363, dt: 1314.42ms, fracRes: 0.7107, norm(attn): 0.1553, norm(output): 0.9434, norm(x): 0.7955, norm(y): 0.9988, norm:0.6072, tok/sec: 99718.15, flops:104.67, batch-reuse:1
@ 5877 train 4.0817 , allloss: 4.0818, dt: 1329.95ms, fracRes: 0.7104, norm(attn): 0.1553, norm(output): 0.9434, norm(x): 0.7955, norm(y): 0.9987, norm:0.6548, tok/sec: 98553.86, flops:103.45, batch-reuse:1
@ 5878 train 4.1497 , allloss: 4.1510, dt: 1338.74ms, fracRes: 0.7105, norm(attn): 0.1553, norm(output): 0.9438, norm(x): 0.7956, norm(y): 0.9986, norm:0.5652, tok/sec: 97907.26, flops:102.77, batch-reuse:1
@ 5879 train 4.1324 , allloss: 4.1324, dt: 1342.90ms, fracRes: 0.7107, norm(attn): 0.1553, norm(output): 0.9437, norm(x): 0.7958, norm(y): 0.9984, norm:0.6031, tok/sec: 97603.66, flops:102.45, batch-reuse:1
@ 5880 train 4.0149 , allloss: 4.0150, dt: 1315.57ms, fracRes: 0.7106, norm(attn): 0.1553, norm(output): 0.9438, norm(x): 0.7960, norm(y): 0.9984, norm:0.5681, tok/sec: 99631.22, flops:104.58, batch-reuse:1
@ 5881 train 3.9559 , allloss: 3.9560, dt: 1294.06ms, fracRes: 0.7106, norm(attn): 0.1572, norm(output): 0.9432, norm(x): 0.7948, norm(y): 0.9983, norm:0.6581, tok/sec: 101287.20, flops:106.31, batch-reuse:1
@ 5882 train 4.0287 , allloss: 4.0290, dt: 1299.05ms, fracRes: 0.7105, norm(attn): 0.1562, norm(output): 0.9435, norm(x): 0.7958, norm(y): 0.9985, norm:0.6024, tok/sec: 100897.97, flops:105.91, batch-reuse:1
@ 5883 train 4.1550 , allloss: 4.1551, dt: 1294.82ms, fracRes: 0.7108, norm(attn): 0.1553, norm(output): 0.9438, norm(x): 0.7958, norm(y): 0.9987, norm:0.5826, tok/sec: 101227.76, flops:106.25, batch-reuse:1
@ 5884 train 3.9895 , allloss: 3.9896, dt: 1323.82ms, fracRes: 0.7105, norm(attn): 0.1562, norm(output): 0.9438, norm(x): 0.7961, norm(y): 0.9984, norm:0.5171, tok/sec: 99010.36, flops:103.92, batch-reuse:1
@ 5885 train 4.0306 , allloss: 4.0307, dt: 1353.93ms, fracRes: 0.7104, norm(attn): 0.1562, norm(output): 0.9439, norm(x): 0.7963, norm(y): 0.9982, norm:0.5295, tok/sec: 96808.55, flops:101.61, batch-reuse:1
@ 5886 train 4.0863 , allloss: 4.0863, dt: 1328.79ms, fracRes: 0.7105, norm(attn): 0.1562, norm(output): 0.9438, norm(x): 0.7966, norm(y): 0.9984, norm:0.6697, tok/sec: 98640.14, flops:103.54, batch-reuse:1
@ 5887 train 4.0866 , allloss: 4.0867, dt: 1295.54ms, fracRes: 0.7108, norm(attn): 0.1553, norm(output): 0.9439, norm(x): 0.7962, norm(y): 0.9983, norm:0.6669, tok/sec: 101171.76, flops:106.19, batch-reuse:1
@ 5888 train 4.0051 , allloss: 4.0062, dt: 1307.10ms, fracRes: 0.7107, norm(attn): 0.1553, norm(output): 0.9434, norm(x): 0.7954, norm(y): 0.9982, norm:0.5787, tok/sec: 100277.13, flops:105.25, batch-reuse:1
@ 5889 train 4.1064 , allloss: 4.1066, dt: 1314.85ms, fracRes: 0.7105, norm(attn): 0.1553, norm(output): 0.9436, norm(x): 0.7958, norm(y): 0.9983, norm:0.6996, tok/sec: 99686.21, flops:104.63, batch-reuse:1
@ 5890 train 4.0615 , allloss: 4.0616, dt: 1335.51ms, fracRes: 0.7105, norm(attn): 0.1562, norm(output): 0.9436, norm(x): 0.7955, norm(y): 0.9986, norm:0.7483, tok/sec: 98143.99, flops:103.02, batch-reuse:1
@ 5891 train 4.0123 , allloss: 4.0128, dt: 1331.02ms, fracRes: 0.7106, norm(attn): 0.1553, norm(output): 0.9433, norm(x): 0.7956, norm(y): 0.9986, norm:0.6609, tok/sec: 98474.95, flops:103.36, batch-reuse:1
@ 5892 train 4.0837 , allloss: 4.0838, dt: 1305.08ms, fracRes: 0.7106, norm(attn): 0.1553, norm(output): 0.9437, norm(x): 0.7961, norm(y): 0.9984, norm:0.5746, tok/sec: 100432.09, flops:105.42, batch-reuse:1
@ 5893 train 4.0501 , allloss: 4.0504, dt: 1310.23ms, fracRes: 0.7106, norm(attn): 0.1562, norm(output): 0.9440, norm(x): 0.7961, norm(y): 0.9982, norm:0.6375, tok/sec: 100037.21, flops:105.00, batch-reuse:1
@ 5894 train 3.9991 , allloss: 4.0009, dt: 1294.59ms, fracRes: 0.7107, norm(attn): 0.1553, norm(output): 0.9435, norm(x): 0.7951, norm(y): 0.9982, norm:0.5980, tok/sec: 101246.18, flops:106.27, batch-reuse:1
@ 5895 train 3.9864 , allloss: 3.9867, dt: 1298.02ms, fracRes: 0.7108, norm(attn): 0.1562, norm(output): 0.9434, norm(x): 0.7951, norm(y): 0.9984, norm:0.5672, tok/sec: 100978.77, flops:105.99, batch-reuse:1
@ 5896 train 4.0735 , allloss: 4.0735, dt: 1309.30ms, fracRes: 0.7109, norm(attn): 0.1553, norm(output): 0.9432, norm(x): 0.7952, norm(y): 0.9984, norm:0.5587, tok/sec: 100108.62, flops:105.08, batch-reuse:1
@ 5897 train 4.0480 , allloss: 4.0502, dt: 1311.31ms, fracRes: 0.7107, norm(attn): 0.1553, norm(output): 0.9434, norm(x): 0.7961, norm(y): 0.9984, norm:0.6321, tok/sec: 99954.98, flops:104.92, batch-reuse:1
@ 5898 train 4.0454 , allloss: 4.0454, dt: 1298.32ms, fracRes: 0.7106, norm(attn): 0.1553, norm(output): 0.9442, norm(x): 0.7965, norm(y): 0.9982, norm:0.7126, tok/sec: 100955.30, flops:105.97, batch-reuse:1
@ 5899 train 3.9139 , allloss: 3.9143, dt: 1309.13ms, fracRes: 0.7104, norm(attn): 0.1553, norm(output): 0.9438, norm(x): 0.7963, norm(y): 0.9980, norm:0.7484, tok/sec: 100121.28, flops:105.09, batch-reuse:1
@ 5900 train 4.0149 , allloss: 4.0150, dt: 1326.68ms, fracRes: 0.7104, norm(attn): 0.1543, norm(output): 0.9439, norm(x): 0.7963, norm(y): 0.9981, norm:0.6148, tok/sec: 98796.81, flops:103.70, batch-reuse:1
@ 5901 train 3.9822 , allloss: 3.9822, dt: 1330.87ms, fracRes: 0.7106, norm(attn): 0.1553, norm(output): 0.9435, norm(x): 0.7955, norm(y): 0.9984, norm:0.6301, tok/sec: 98486.29, flops:103.37, batch-reuse:1
@ 5902 train 3.9610 , allloss: 3.9611, dt: 1331.52ms, fracRes: 0.7106, norm(attn): 0.1553, norm(output): 0.9434, norm(x): 0.7952, norm(y): 0.9985, norm:0.6554, tok/sec: 98437.75, flops:103.32, batch-reuse:1
@ 5903 train 4.0769 , allloss: 4.0769, dt: 1328.98ms, fracRes: 0.7106, norm(attn): 0.1562, norm(output): 0.9436, norm(x): 0.7960, norm(y): 0.9984, norm:0.5538, tok/sec: 98625.64, flops:103.52, batch-reuse:1
@ 5904 train 4.0932 , allloss: 4.0932, dt: 1304.80ms, fracRes: 0.7107, norm(attn): 0.1562, norm(output): 0.9439, norm(x): 0.7964, norm(y): 0.9981, norm:0.6087, tok/sec: 100454.07, flops:105.44, batch-reuse:1
@ 5905 train 3.8837 , allloss: 3.8837, dt: 1306.81ms, fracRes: 0.7109, norm(attn): 0.1562, norm(output): 0.9439, norm(x): 0.7965, norm(y): 0.9979, norm:0.5853, tok/sec: 100299.19, flops:105.28, batch-reuse:1
@ 5906 train 3.9208 , allloss: 3.9211, dt: 1287.85ms, fracRes: 0.7107, norm(attn): 0.1562, norm(output): 0.9439, norm(x): 0.7966, norm(y): 0.9980, norm:0.5874, tok/sec: 101775.82, flops:106.83, batch-reuse:1
@ 5907 train 3.9752 , allloss: 3.9753, dt: 1305.15ms, fracRes: 0.7108, norm(attn): 0.1562, norm(output): 0.9437, norm(x): 0.7963, norm(y): 0.9984, norm:0.5895, tok/sec: 100426.97, flops:105.41, batch-reuse:1
@ 5908 train 4.0016 , allloss: 4.0017, dt: 1314.63ms, fracRes: 0.7110, norm(attn): 0.1543, norm(output): 0.9436, norm(x): 0.7961, norm(y): 0.9985, norm:0.5772, tok/sec: 99702.92, flops:104.65, batch-reuse:1
@ 5909 train 4.0551 , allloss: 4.0553, dt: 1297.44ms, fracRes: 0.7110, norm(attn): 0.1543, norm(output): 0.9435, norm(x): 0.7957, norm(y): 0.9984, norm:0.5506, tok/sec: 101023.38, flops:106.04, batch-reuse:1
@ 5910 train 4.0288 , allloss: 4.0289, dt: 1316.30ms, fracRes: 0.7109, norm(attn): 0.1543, norm(output): 0.9435, norm(x): 0.7956, norm(y): 0.9982, norm:0.6917, tok/sec: 99576.29, flops:104.52, batch-reuse:1
@ 5911 train 4.0236 , allloss: 4.0300, dt: 1299.16ms, fracRes: 0.7107, norm(attn): 0.1553, norm(output): 0.9436, norm(x): 0.7957, norm(y): 0.9980, norm:0.5777, tok/sec: 100890.08, flops:105.90, batch-reuse:1
@ 5912 train 3.9706 , allloss: 3.9706, dt: 1330.42ms, fracRes: 0.7110, norm(attn): 0.1553, norm(output): 0.9436, norm(x): 0.7959, norm(y): 0.9983, norm:0.6198, tok/sec: 98519.51, flops:103.41, batch-reuse:1
@ 5913 train 4.1168 , allloss: 4.1171, dt: 1326.52ms, fracRes: 0.7111, norm(attn): 0.1562, norm(output): 0.9433, norm(x): 0.7957, norm(y): 0.9987, norm:0.6942, tok/sec: 98808.83, flops:103.71, batch-reuse:1
@ 5914 train 3.9019 , allloss: 3.9020, dt: 1289.76ms, fracRes: 0.7110, norm(attn): 0.1562, norm(output): 0.9431, norm(x): 0.7954, norm(y): 0.9984, norm:0.6303, tok/sec: 101625.48, flops:106.67, batch-reuse:1
@ 5915 train 3.9629 , allloss: 3.9629, dt: 1304.70ms, fracRes: 0.7109, norm(attn): 0.1562, norm(output): 0.9431, norm(x): 0.7955, norm(y): 0.9982, norm:0.6606, tok/sec: 100461.49, flops:105.45, batch-reuse:1
@ 5916 train 3.8038 , allloss: 3.8038, dt: 1308.70ms, fracRes: 0.7112, norm(attn): 0.1572, norm(output): 0.9435, norm(x): 0.7958, norm(y): 0.9983, norm:0.5568, tok/sec: 100154.25, flops:105.13, batch-reuse:1
@ 5917 train 3.9351 , allloss: 3.9352, dt: 1296.47ms, fracRes: 0.7107, norm(attn): 0.1553, norm(output): 0.9439, norm(x): 0.7974, norm(y): 0.9983, norm:0.6461, tok/sec: 101099.07, flops:106.12, batch-reuse:1
@ 5918 train 3.9746 , allloss: 3.9747, dt: 1298.64ms, fracRes: 0.7105, norm(attn): 0.1553, norm(output): 0.9435, norm(x): 0.7966, norm(y): 0.9981, norm:0.5990, tok/sec: 100929.92, flops:105.94, batch-reuse:1
@ 5919 train 4.0331 , allloss: 4.0364, dt: 1310.93ms, fracRes: 0.7106, norm(attn): 0.1553, norm(output): 0.9436, norm(x): 0.7966, norm(y): 0.9982, norm:0.6160, tok/sec: 99984.02, flops:104.95, batch-reuse:1
@ 5920 train 3.9234 , allloss: 3.9255, dt: 1307.15ms, fracRes: 0.7106, norm(attn): 0.1553, norm(output): 0.9435, norm(x): 0.7969, norm(y): 0.9982, norm:0.5548, tok/sec: 100273.03, flops:105.25, batch-reuse:1
@ 5921 train 3.9368 , allloss: 3.9369, dt: 1311.61ms, fracRes: 0.7105, norm(attn): 0.1553, norm(output): 0.9437, norm(x): 0.7972, norm(y): 0.9981, norm:0.6437, tok/sec: 99932.00, flops:104.89, batch-reuse:1
@ 5922 train 3.9354 , allloss: 3.9356, dt: 1282.73ms, fracRes: 0.7107, norm(attn): 0.1553, norm(output): 0.9434, norm(x): 0.7965, norm(y): 0.9984, norm:0.7409, tok/sec: 102181.73, flops:107.25, batch-reuse:1
@ 5923 train 3.9885 , allloss: 3.9887, dt: 1298.65ms, fracRes: 0.7106, norm(attn): 0.1553, norm(output): 0.9436, norm(x): 0.7971, norm(y): 0.9983, norm:0.6509, tok/sec: 100929.57, flops:105.94, batch-reuse:1
@ 5924 train 3.9523 , allloss: 3.9524, dt: 1286.93ms, fracRes: 0.7108, norm(attn): 0.1562, norm(output): 0.9434, norm(x): 0.7961, norm(y): 0.9984, norm:0.5683, tok/sec: 101848.81, flops:106.90, batch-reuse:1
@ 5925 train 4.1658 , allloss: 4.1667, dt: 1301.54ms, fracRes: 0.7112, norm(attn): 0.1553, norm(output): 0.9436, norm(x): 0.7959, norm(y): 0.9985, norm:0.6505, tok/sec: 100705.23, flops:105.70, batch-reuse:1
@ 5926 train 3.9145 , allloss: 3.9147, dt: 1314.38ms, fracRes: 0.7110, norm(attn): 0.1553, norm(output): 0.9440, norm(x): 0.7971, norm(y): 0.9982, norm:0.7879, tok/sec: 99721.31, flops:104.67, batch-reuse:1
@ 5927 train 4.0958 , allloss: 4.0962, dt: 1324.89ms, fracRes: 0.7109, norm(attn): 0.1553, norm(output): 0.9437, norm(x): 0.7962, norm(y): 0.9981, norm:0.8390, tok/sec: 98930.66, flops:103.84, batch-reuse:1
@ 5928 train 3.9344 , allloss: 3.9345, dt: 1335.84ms, fracRes: 0.7106, norm(attn): 0.1553, norm(output): 0.9434, norm(x): 0.7963, norm(y): 0.9982, norm:0.6326, tok/sec: 98119.43, flops:102.99, batch-reuse:1
@ 5929 train 3.9728 , allloss: 3.9728, dt: 1289.96ms, fracRes: 0.7109, norm(attn): 0.1553, norm(output): 0.9436, norm(x): 0.7964, norm(y): 0.9982, norm:0.7218, tok/sec: 101609.23, flops:106.65, batch-reuse:1
@ 5930 train 3.9562 , allloss: 3.9653, dt: 1310.02ms, fracRes: 0.7107, norm(attn): 0.1543, norm(output): 0.9437, norm(x): 0.7971, norm(y): 0.9981, norm:0.6040, tok/sec: 100053.64, flops:105.02, batch-reuse:1
@ 5931 train 3.9518 , allloss: 3.9520, dt: 1321.38ms, fracRes: 0.7108, norm(attn): 0.1543, norm(output): 0.9437, norm(x): 0.7970, norm(y): 0.9980, norm:0.7118, tok/sec: 99193.45, flops:104.12, batch-reuse:1
@ 5932 train 3.9094 , allloss: 3.9096, dt: 1314.85ms, fracRes: 0.7105, norm(attn): 0.1562, norm(output): 0.9438, norm(x): 0.7971, norm(y): 0.9978, norm:0.6844, tok/sec: 99685.96, flops:104.63, batch-reuse:1
@ 5933 train 3.9681 , allloss: 3.9682, dt: 1313.97ms, fracRes: 0.7104, norm(attn): 0.1543, norm(output): 0.9438, norm(x): 0.7975, norm(y): 0.9978, norm:0.6284, tok/sec: 99752.90, flops:104.70, batch-reuse:1
@ 5934 train 4.0873 , allloss: 4.0878, dt: 1313.82ms, fracRes: 0.7104, norm(attn): 0.1543, norm(output): 0.9438, norm(x): 0.7978, norm(y): 0.9982, norm:0.7483, tok/sec: 99764.15, flops:104.72, batch-reuse:1
@ 5935 train 3.9054 , allloss: 3.9063, dt: 1336.60ms, fracRes: 0.7105, norm(attn): 0.1553, norm(output): 0.9436, norm(x): 0.7972, norm(y): 0.9983, norm:0.6462, tok/sec: 98063.72, flops:102.93, batch-reuse:1
@ 5936 train 3.7839 , allloss: 3.7840, dt: 1316.90ms, fracRes: 0.7106, norm(attn): 0.1562, norm(output): 0.9436, norm(x): 0.7970, norm(y): 0.9981, norm:0.6287, tok/sec: 99530.46, flops:104.47, batch-reuse:1
@ 5937 train 3.9249 , allloss: 3.9256, dt: 1316.45ms, fracRes: 0.7106, norm(attn): 0.1562, norm(output): 0.9434, norm(x): 0.7966, norm(y): 0.9980, norm:0.6026, tok/sec: 99564.66, flops:104.51, batch-reuse:1
@ 5938 train 4.0344 , allloss: 4.0346, dt: 1303.35ms, fracRes: 0.7108, norm(attn): 0.1553, norm(output): 0.9435, norm(x): 0.7964, norm(y): 0.9981, norm:0.5278, tok/sec: 100565.63, flops:105.56, batch-reuse:1
@ 5939 train 3.8591 , allloss: 3.8594, dt: 1289.49ms, fracRes: 0.7106, norm(attn): 0.1562, norm(output): 0.9434, norm(x): 0.7965, norm(y): 0.9980, norm:0.6257, tok/sec: 101646.41, flops:106.69, batch-reuse:1
@ 5940 train 3.8872 , allloss: 3.8877, dt: 1316.72ms, fracRes: 0.7107, norm(attn): 0.1553, norm(output): 0.9437, norm(x): 0.7975, norm(y): 0.9980, norm:0.6118, tok/sec: 99544.56, flops:104.49, batch-reuse:1
@ 5941 train 3.8221 , allloss: 3.8222, dt: 1344.48ms, fracRes: 0.7109, norm(attn): 0.1553, norm(output): 0.9436, norm(x): 0.7968, norm(y): 0.9979, norm:0.6990, tok/sec: 97488.68, flops:102.33, batch-reuse:1
@ 5942 train 3.9879 , allloss: 3.9881, dt: 1321.40ms, fracRes: 0.7104, norm(attn): 0.1553, norm(output): 0.9438, norm(x): 0.7975, norm(y): 0.9980, norm:0.7296, tok/sec: 99191.52, flops:104.11, batch-reuse:1
@ 5943 train 3.9735 , allloss: 3.9738, dt: 1307.17ms, fracRes: 0.7103, norm(attn): 0.1562, norm(output): 0.9436, norm(x): 0.7971, norm(y): 0.9980, norm:0.6618, tok/sec: 100271.93, flops:105.25, batch-reuse:1
@ 5944 train 3.9370 , allloss: 3.9380, dt: 1296.02ms, fracRes: 0.7104, norm(attn): 0.1562, norm(output): 0.9438, norm(x): 0.7975, norm(y): 0.9981, norm:0.5922, tok/sec: 101134.22, flops:106.15, batch-reuse:1
@ 5945 train 3.9529 , allloss: 3.9529, dt: 1308.30ms, fracRes: 0.7105, norm(attn): 0.1553, norm(output): 0.9439, norm(x): 0.7977, norm(y): 0.9980, norm:0.6196, tok/sec: 100185.34, flops:105.16, batch-reuse:1
@ 5946 train 3.8545 , allloss: 3.8545, dt: 1330.98ms, fracRes: 0.7105, norm(attn): 0.1562, norm(output): 0.9436, norm(x): 0.7974, norm(y): 0.9980, norm:0.6551, tok/sec: 98477.76, flops:103.37, batch-reuse:1
@ 5947 train 3.9610 , allloss: 3.9611, dt: 1323.27ms, fracRes: 0.7106, norm(attn): 0.1562, norm(output): 0.9437, norm(x): 0.7971, norm(y): 0.9980, norm:0.6175, tok/sec: 99051.23, flops:103.97, batch-reuse:1
@ 5948 train 3.8378 , allloss: 3.8379, dt: 1296.46ms, fracRes: 0.7105, norm(attn): 0.1553, norm(output): 0.9439, norm(x): 0.7973, norm(y): 0.9978, norm:0.5788, tok/sec: 101100.19, flops:106.12, batch-reuse:1
@ 5949 train 3.9591 , allloss: 3.9591, dt: 1307.77ms, fracRes: 0.7106, norm(attn): 0.1562, norm(output): 0.9435, norm(x): 0.7967, norm(y): 0.9979, norm:0.5702, tok/sec: 100225.37, flops:105.20, batch-reuse:1
@ 5950 train 3.9594 , allloss: 3.9595, dt: 1287.73ms, fracRes: 0.7109, norm(attn): 0.1553, norm(output): 0.9436, norm(x): 0.7966, norm(y): 0.9981, norm:0.5940, tok/sec: 101785.29, flops:106.84, batch-reuse:1
@ 5951 train 4.0917 , allloss: 4.0918, dt: 1291.50ms, fracRes: 0.7111, norm(attn): 0.1543, norm(output): 0.9437, norm(x): 0.7965, norm(y): 0.9982, norm:0.5589, tok/sec: 101488.50, flops:106.53, batch-reuse:1
@ 5952 train 4.1348 , allloss: 4.1354, dt: 1310.33ms, fracRes: 0.7109, norm(attn): 0.1553, norm(output): 0.9441, norm(x): 0.7971, norm(y): 0.9982, norm:0.6518, tok/sec: 100029.75, flops:104.99, batch-reuse:1
@ 5953 train 4.1342 , allloss: 4.1342, dt: 1285.17ms, fracRes: 0.7106, norm(attn): 0.1553, norm(output): 0.9441, norm(x): 0.7974, norm(y): 0.9980, norm:0.6708, tok/sec: 101988.21, flops:107.05, batch-reuse:1
@ 5954 train 4.0796 , allloss: 4.0796, dt: 1304.51ms, fracRes: 0.7107, norm(attn): 0.1553, norm(output): 0.9438, norm(x): 0.7974, norm(y): 0.9980, norm:0.6996, tok/sec: 100476.42, flops:105.46, batch-reuse:1
@ 5955 train 4.1582 , allloss: 4.1582, dt: 1303.32ms, fracRes: 0.7106, norm(attn): 0.1543, norm(output): 0.9443, norm(x): 0.7979, norm(y): 0.9978, norm:0.6311, tok/sec: 100568.04, flops:105.56, batch-reuse:1
@ 5956 train 4.1607 , allloss: 4.1608, dt: 1303.21ms, fracRes: 0.7106, norm(attn): 0.1533, norm(output): 0.9441, norm(x): 0.7976, norm(y): 0.9978, norm:0.7367, tok/sec: 100576.03, flops:105.57, batch-reuse:1
@ 5957 train 4.0493 , allloss: 4.0493, dt: 1316.45ms, fracRes: 0.7108, norm(attn): 0.1553, norm(output): 0.9433, norm(x): 0.7965, norm(y): 0.9982, norm:0.6636, tok/sec: 99564.86, flops:104.51, batch-reuse:1
@ 5958 train 4.1393 , allloss: 4.1393, dt: 1343.02ms, fracRes: 0.7109, norm(attn): 0.1553, norm(output): 0.9434, norm(x): 0.7970, norm(y): 0.9982, norm:0.6741, tok/sec: 97595.29, flops:102.44, batch-reuse:1
@ 5959 train 4.0931 , allloss: 4.0932, dt: 1331.00ms, fracRes: 0.7109, norm(attn): 0.1553, norm(output): 0.9440, norm(x): 0.7974, norm(y): 0.9981, norm:0.7195, tok/sec: 98476.20, flops:103.36, batch-reuse:1
@ 5960 train 4.0718 , allloss: 4.0719, dt: 1278.65ms, fracRes: 0.7110, norm(attn): 0.1543, norm(output): 0.9438, norm(x): 0.7967, norm(y): 0.9980, norm:0.6506, tok/sec: 102508.26, flops:107.60, batch-reuse:1
@ 5961 train 4.0898 , allloss: 4.0898, dt: 1309.46ms, fracRes: 0.7112, norm(attn): 0.1572, norm(output): 0.9433, norm(x): 0.7955, norm(y): 0.9981, norm:0.7073, tok/sec: 100096.17, flops:105.06, batch-reuse:1
@ 5962 train 4.0973 , allloss: 4.0974, dt: 1299.23ms, fracRes: 0.7107, norm(attn): 0.1553, norm(output): 0.9436, norm(x): 0.7972, norm(y): 0.9978, norm:0.6471, tok/sec: 100884.23, flops:105.89, batch-reuse:1
@ 5963 train 4.1257 , allloss: 4.1257, dt: 1314.64ms, fracRes: 0.7109, norm(attn): 0.1553, norm(output): 0.9439, norm(x): 0.7971, norm(y): 0.9981, norm:0.7937, tok/sec: 99701.85, flops:104.65, batch-reuse:1
@ 5964 train 4.2144 , allloss: 4.2146, dt: 1332.64ms, fracRes: 0.7112, norm(attn): 0.1543, norm(output): 0.9440, norm(x): 0.7968, norm(y): 0.9982, norm:0.6330, tok/sec: 98355.43, flops:103.24, batch-reuse:1
@ 5965 train 4.1231 , allloss: 4.1232, dt: 1293.70ms, fracRes: 0.7109, norm(attn): 0.1562, norm(output): 0.9439, norm(x): 0.7969, norm(y): 0.9983, norm:0.7019, tok/sec: 101315.48, flops:106.34, batch-reuse:1
@ 5966 train 4.1682 , allloss: 4.1682, dt: 1282.93ms, fracRes: 0.7107, norm(attn): 0.1562, norm(output): 0.9438, norm(x): 0.7976, norm(y): 0.9983, norm:0.8772, tok/sec: 102165.74, flops:107.24, batch-reuse:1
@ 5967 train 4.0895 , allloss: 4.0896, dt: 1290.43ms, fracRes: 0.7106, norm(attn): 0.1553, norm(output): 0.9441, norm(x): 0.7985, norm(y): 0.9981, norm:0.7463, tok/sec: 101572.53, flops:106.61, batch-reuse:1
@ 5968 train 4.0525 , allloss: 4.0526, dt: 1324.08ms, fracRes: 0.7106, norm(attn): 0.1553, norm(output): 0.9437, norm(x): 0.7978, norm(y): 0.9980, norm:0.6646, tok/sec: 98990.66, flops:103.90, batch-reuse:1
@ 5969 train 4.0432 , allloss: 4.0432, dt: 1308.78ms, fracRes: 0.7107, norm(attn): 0.1553, norm(output): 0.9437, norm(x): 0.7970, norm(y): 0.9979, norm:0.8395, tok/sec: 100148.27, flops:105.12, batch-reuse:1
@ 5970 train 4.1040 , allloss: 4.1041, dt: 1323.38ms, fracRes: 0.7109, norm(attn): 0.1553, norm(output): 0.9436, norm(x): 0.7966, norm(y): 0.9980, norm:0.5886, tok/sec: 99043.32, flops:103.96, batch-reuse:1
@ 5971 train 3.9934 , allloss: 3.9936, dt: 1301.29ms, fracRes: 0.7112, norm(attn): 0.1562, norm(output): 0.9435, norm(x): 0.7961, norm(y): 0.9980, norm:0.6531, tok/sec: 100724.52, flops:105.72, batch-reuse:1
@ 5972 train 4.0515 , allloss: 4.0516, dt: 1331.69ms, fracRes: 0.7109, norm(attn): 0.1553, norm(output): 0.9436, norm(x): 0.7969, norm(y): 0.9979, norm:0.5753, tok/sec: 98425.29, flops:103.31, batch-reuse:1
@ 5973 train 4.0846 , allloss: 4.0846, dt: 1291.58ms, fracRes: 0.7107, norm(attn): 0.1543, norm(output): 0.9441, norm(x): 0.7984, norm(y): 0.9979, norm:0.6291, tok/sec: 101481.63, flops:106.52, batch-reuse:1
@ 5974 train 4.0827 , allloss: 4.0828, dt: 1301.40ms, fracRes: 0.7109, norm(attn): 0.1543, norm(output): 0.9439, norm(x): 0.7980, norm(y): 0.9980, norm:0.5856, tok/sec: 100716.21, flops:105.71, batch-reuse:1
@ 5975 train 4.1823 , allloss: 4.1824, dt: 1313.49ms, fracRes: 0.7109, norm(attn): 0.1543, norm(output): 0.9439, norm(x): 0.7978, norm(y): 0.9980, norm:0.6131, tok/sec: 99788.95, flops:104.74, batch-reuse:1
@ 5976 train 4.3124 , allloss: 4.3126, dt: 1292.29ms, fracRes: 0.7111, norm(attn): 0.1543, norm(output): 0.9438, norm(x): 0.7971, norm(y): 0.9979, norm:0.7639, tok/sec: 101425.76, flops:106.46, batch-reuse:1
@ 5977 train 4.1463 , allloss: 4.1464, dt: 1319.88ms, fracRes: 0.7108, norm(attn): 0.1543, norm(output): 0.9439, norm(x): 0.7975, norm(y): 0.9979, norm:0.8388, tok/sec: 99306.05, flops:104.23, batch-reuse:1
@ 5978 train 4.0553 , allloss: 4.0553, dt: 1292.58ms, fracRes: 0.7108, norm(attn): 0.1553, norm(output): 0.9436, norm(x): 0.7974, norm(y): 0.9978, norm:0.5703, tok/sec: 101403.70, flops:106.44, batch-reuse:1
@ 5979 train 4.1169 , allloss: 4.1169, dt: 1272.12ms, fracRes: 0.7111, norm(attn): 0.1543, norm(output): 0.9436, norm(x): 0.7970, norm(y): 0.9980, norm:0.7583, tok/sec: 103034.09, flops:108.15, batch-reuse:1
@ 5980 train 4.1993 , allloss: 4.1994, dt: 1302.34ms, fracRes: 0.7111, norm(attn): 0.1553, norm(output): 0.9444, norm(x): 0.7982, norm(y): 0.9979, norm:0.6959, tok/sec: 100643.40, flops:105.64, batch-reuse:1
@ 5981 train 4.0736 , allloss: 4.0737, dt: 1299.82ms, fracRes: 0.7109, norm(attn): 0.1553, norm(output): 0.9441, norm(x): 0.7977, norm(y): 0.9980, norm:0.9241, tok/sec: 100838.42, flops:105.84, batch-reuse:1
@ 5982 train 4.0784 , allloss: 4.0784, dt: 1289.59ms, fracRes: 0.7108, norm(attn): 0.1553, norm(output): 0.9439, norm(x): 0.7977, norm(y): 0.9980, norm:0.7569, tok/sec: 101638.48, flops:106.68, batch-reuse:1
@ 5983 train 4.1097 , allloss: 4.1097, dt: 1317.03ms, fracRes: 0.7107, norm(attn): 0.1543, norm(output): 0.9437, norm(x): 0.7975, norm(y): 0.9979, norm:0.6481, tok/sec: 99520.93, flops:104.46, batch-reuse:1
@ 5984 train 4.0223 , allloss: 4.0241, dt: 1304.61ms, fracRes: 0.7108, norm(attn): 0.1543, norm(output): 0.9438, norm(x): 0.7975, norm(y): 0.9980, norm:0.8517, tok/sec: 100468.10, flops:105.45, batch-reuse:1
@ 5985 train 4.0531 , allloss: 4.0532, dt: 1318.62ms, fracRes: 0.7109, norm(attn): 0.1543, norm(output): 0.9440, norm(x): 0.7980, norm(y): 0.9979, norm:0.5690, tok/sec: 99400.73, flops:104.33, batch-reuse:1
@ 5986 train 4.1222 , allloss: 4.1223, dt: 1303.97ms, fracRes: 0.7111, norm(attn): 0.1553, norm(output): 0.9438, norm(x): 0.7978, norm(y): 0.9978, norm:0.6616, tok/sec: 100517.48, flops:105.51, batch-reuse:1
@ 5987 train 4.1328 , allloss: 4.1329, dt: 1293.73ms, fracRes: 0.7108, norm(attn): 0.1553, norm(output): 0.9441, norm(x): 0.7982, norm(y): 0.9977, norm:0.5742, tok/sec: 101313.42, flops:106.34, batch-reuse:1
@ 5988 train 4.1302 , allloss: 4.1303, dt: 1299.49ms, fracRes: 0.7106, norm(attn): 0.1553, norm(output): 0.9439, norm(x): 0.7976, norm(y): 0.9977, norm:0.6532, tok/sec: 100864.46, flops:105.87, batch-reuse:1
@ 5989 train 4.0281 , allloss: 4.0281, dt: 1309.51ms, fracRes: 0.7105, norm(attn): 0.1562, norm(output): 0.9437, norm(x): 0.7969, norm(y): 0.9980, norm:0.5928, tok/sec: 100092.37, flops:105.06, batch-reuse:1
@ 5990 train 4.0187 , allloss: 4.0188, dt: 1315.77ms, fracRes: 0.7105, norm(attn): 0.1553, norm(output): 0.9439, norm(x): 0.7977, norm(y): 0.9980, norm:0.5644, tok/sec: 99616.31, flops:104.56, batch-reuse:1
@ 5991 train 4.0465 , allloss: 4.0465, dt: 1336.08ms, fracRes: 0.7109, norm(attn): 0.1543, norm(output): 0.9438, norm(x): 0.7972, norm(y): 0.9980, norm:0.5454, tok/sec: 98102.08, flops:102.97, batch-reuse:1
@ 5992 train 4.0322 , allloss: 4.0323, dt: 1339.18ms, fracRes: 0.7107, norm(attn): 0.1562, norm(output): 0.9436, norm(x): 0.7972, norm(y): 0.9979, norm:0.5444, tok/sec: 97874.82, flops:102.73, batch-reuse:1
@ 5993 train 4.1765 , allloss: 4.1766, dt: 1312.39ms, fracRes: 0.7110, norm(attn): 0.1553, norm(output): 0.9441, norm(x): 0.7974, norm(y): 0.9979, norm:0.5458, tok/sec: 99872.58, flops:104.83, batch-reuse:1
@ 5994 train 4.0100 , allloss: 4.0101, dt: 1298.05ms, fracRes: 0.7108, norm(attn): 0.1553, norm(output): 0.9440, norm(x): 0.7979, norm(y): 0.9978, norm:0.5341, tok/sec: 100975.99, flops:105.99, batch-reuse:1
@ 5995 train 4.0955 , allloss: 4.0955, dt: 1337.56ms, fracRes: 0.7110, norm(attn): 0.1553, norm(output): 0.9441, norm(x): 0.7974, norm(y): 0.9978, norm:0.5786, tok/sec: 97993.66, flops:102.86, batch-reuse:1
@ 5996 train 4.1454 , allloss: 4.1454, dt: 1317.48ms, fracRes: 0.7106, norm(attn): 0.1553, norm(output): 0.9436, norm(x): 0.7968, norm(y): 0.9979, norm:0.5986, tok/sec: 99486.64, flops:104.42, batch-reuse:1
@ 5997 train 4.1336 , allloss: 4.1337, dt: 1292.53ms, fracRes: 0.7108, norm(attn): 0.1553, norm(output): 0.9437, norm(x): 0.7972, norm(y): 0.9980, norm:0.6676, tok/sec: 101407.13, flops:106.44, batch-reuse:1
@ 5998 train 4.0803 , allloss: 4.0805, dt: 1301.60ms, fracRes: 0.7110, norm(attn): 0.1543, norm(output): 0.9441, norm(x): 0.7982, norm(y): 0.9979, norm:0.6442, tok/sec: 100700.53, flops:105.70, batch-reuse:1
@ 5999 train 4.0823 , allloss: 4.0825, dt: 1322.78ms, fracRes: 0.7109, norm(attn): 0.1553, norm(output): 0.9438, norm(x): 0.7976, norm(y): 0.9978, norm:0.5850, tok/sec: 99088.04, flops:104.01, batch-reuse:1
@ 6000 val 4.0294
@ 6000 train 4.2810 , allloss: 4.2810, dt: 1927.14ms, fracRes: 0.7108, norm(attn): 0.1553, norm(output): 0.9441, norm(x): 0.7978, norm(y): 0.9977, norm:0.6170, tok/sec: 68013.62, flops:71.39, batch-reuse:1
@ 6001 train 4.0972 , allloss: 4.0973, dt: 1326.90ms, fracRes: 0.7108, norm(attn): 0.1553, norm(output): 0.9441, norm(x): 0.7979, norm(y): 0.9978, norm:0.6399, tok/sec: 98780.51, flops:103.68, batch-reuse:1
@ 6002 train 4.1746 , allloss: 4.1746, dt: 1325.02ms, fracRes: 0.7112, norm(attn): 0.1553, norm(output): 0.9438, norm(x): 0.7969, norm(y): 0.9982, norm:0.5866, tok/sec: 98920.69, flops:103.83, batch-reuse:1
@ 6003 train 4.0580 , allloss: 4.0580, dt: 1289.34ms, fracRes: 0.7109, norm(attn): 0.1553, norm(output): 0.9439, norm(x): 0.7978, norm(y): 0.9980, norm:0.6241, tok/sec: 101658.21, flops:106.70, batch-reuse:1
@ 6004 train 4.0622 , allloss: 4.0625, dt: 1292.24ms, fracRes: 0.7107, norm(attn): 0.1562, norm(output): 0.9439, norm(x): 0.7979, norm(y): 0.9977, norm:0.6264, tok/sec: 101430.18, flops:106.46, batch-reuse:1
@ 6005 train 4.1255 , allloss: 4.1256, dt: 1319.45ms, fracRes: 0.7106, norm(attn): 0.1553, norm(output): 0.9442, norm(x): 0.7987, norm(y): 0.9975, norm:0.6569, tok/sec: 99338.31, flops:104.27, batch-reuse:1
@ 6006 train 4.0802 , allloss: 4.0803, dt: 1339.56ms, fracRes: 0.7109, norm(attn): 0.1553, norm(output): 0.9441, norm(x): 0.7979, norm(y): 0.9976, norm:0.5543, tok/sec: 97847.40, flops:102.70, batch-reuse:1
@ 6007 train 4.0808 , allloss: 4.0809, dt: 1346.34ms, fracRes: 0.7110, norm(attn): 0.1553, norm(output): 0.9438, norm(x): 0.7975, norm(y): 0.9976, norm:0.5997, tok/sec: 97354.09, flops:102.19, batch-reuse:1
@ 6008 train 4.1331 , allloss: 4.1332, dt: 1344.63ms, fracRes: 0.7108, norm(attn): 0.1553, norm(output): 0.9442, norm(x): 0.7985, norm(y): 0.9976, norm:0.5328, tok/sec: 97478.00, flops:102.32, batch-reuse:1
@ 6009 train 4.1593 , allloss: 4.1593, dt: 1318.13ms, fracRes: 0.7109, norm(attn): 0.1543, norm(output): 0.9442, norm(x): 0.7986, norm(y): 0.9977, norm:0.5956, tok/sec: 99437.82, flops:104.37, batch-reuse:1
@ 6010 train 4.0894 , allloss: 4.0895, dt: 1300.17ms, fracRes: 0.7111, norm(attn): 0.1533, norm(output): 0.9443, norm(x): 0.7985, norm(y): 0.9978, norm:0.5469, tok/sec: 100811.77, flops:105.82, batch-reuse:1
@ 6011 train 4.0630 , allloss: 4.0630, dt: 1321.97ms, fracRes: 0.7109, norm(attn): 0.1533, norm(output): 0.9442, norm(x): 0.7985, norm(y): 0.9977, norm:0.5546, tok/sec: 99149.05, flops:104.07, batch-reuse:1
@ 6012 train 4.0835 , allloss: 4.0835, dt: 1300.40ms, fracRes: 0.7106, norm(attn): 0.1543, norm(output): 0.9443, norm(x): 0.7982, norm(y): 0.9975, norm:0.7165, tok/sec: 100793.49, flops:105.80, batch-reuse:1
@ 6013 train 4.0923 , allloss: 4.0924, dt: 1304.81ms, fracRes: 0.7105, norm(attn): 0.1553, norm(output): 0.9440, norm(x): 0.7975, norm(y): 0.9976, norm:0.5278, tok/sec: 100452.62, flops:105.44, batch-reuse:1
@ 6014 train 4.0503 , allloss: 4.0504, dt: 1324.01ms, fracRes: 0.7106, norm(attn): 0.1553, norm(output): 0.9440, norm(x): 0.7977, norm(y): 0.9976, norm:0.5947, tok/sec: 98996.03, flops:103.91, batch-reuse:1
@ 6015 train 4.1102 , allloss: 4.1102, dt: 1327.35ms, fracRes: 0.7108, norm(attn): 0.1543, norm(output): 0.9440, norm(x): 0.7977, norm(y): 0.9977, norm:0.5702, tok/sec: 98747.19, flops:103.65, batch-reuse:1
@ 6016 train 4.0658 , allloss: 4.0658, dt: 1307.36ms, fracRes: 0.7107, norm(attn): 0.1543, norm(output): 0.9439, norm(x): 0.7979, norm(y): 0.9977, norm:0.5614, tok/sec: 100257.12, flops:105.23, batch-reuse:1
@ 6017 train 4.1460 , allloss: 4.1467, dt: 1298.59ms, fracRes: 0.7105, norm(attn): 0.1543, norm(output): 0.9445, norm(x): 0.7987, norm(y): 0.9975, norm:0.5709, tok/sec: 100934.13, flops:105.94, batch-reuse:1
@ 6018 train 3.9473 , allloss: 3.9475, dt: 1307.58ms, fracRes: 0.7105, norm(attn): 0.1553, norm(output): 0.9435, norm(x): 0.7975, norm(y): 0.9978, norm:0.6844, tok/sec: 100240.47, flops:105.22, batch-reuse:1
@ 6019 train 3.9721 , allloss: 3.9722, dt: 1299.82ms, fracRes: 0.7107, norm(attn): 0.1543, norm(output): 0.9439, norm(x): 0.7981, norm(y): 0.9978, norm:0.7844, tok/sec: 100838.82, flops:105.84, batch-reuse:1
@ 6020 train 4.1177 , allloss: 4.1179, dt: 1292.16ms, fracRes: 0.7107, norm(attn): 0.1533, norm(output): 0.9442, norm(x): 0.7985, norm(y): 0.9977, norm:0.6177, tok/sec: 101436.58, flops:106.47, batch-reuse:1
@ 6021 train 4.0582 , allloss: 4.0583, dt: 1277.80ms, fracRes: 0.7106, norm(attn): 0.1533, norm(output): 0.9443, norm(x): 0.7990, norm(y): 0.9977, norm:0.6481, tok/sec: 102576.53, flops:107.67, batch-reuse:1
@ 6022 train 3.9725 , allloss: 3.9725, dt: 1313.82ms, fracRes: 0.7106, norm(attn): 0.1553, norm(output): 0.9440, norm(x): 0.7987, norm(y): 0.9977, norm:0.5796, tok/sec: 99763.75, flops:104.72, batch-reuse:1
@ 6023 train 4.0718 , allloss: 4.0719, dt: 1299.51ms, fracRes: 0.7105, norm(attn): 0.1553, norm(output): 0.9439, norm(x): 0.7988, norm(y): 0.9975, norm:0.5543, tok/sec: 100862.98, flops:105.87, batch-reuse:1
@ 6024 train 4.0350 , allloss: 4.0350, dt: 1298.56ms, fracRes: 0.7108, norm(attn): 0.1553, norm(output): 0.9437, norm(x): 0.7982, norm(y): 0.9977, norm:0.5678, tok/sec: 100936.48, flops:105.95, batch-reuse:1
@ 6025 train 4.0869 , allloss: 4.0870, dt: 1288.32ms, fracRes: 0.7109, norm(attn): 0.1533, norm(output): 0.9442, norm(x): 0.7988, norm(y): 0.9977, norm:0.6488, tok/sec: 101738.54, flops:106.79, batch-reuse:1
@ 6026 train 4.0127 , allloss: 4.0127, dt: 1283.62ms, fracRes: 0.7106, norm(attn): 0.1543, norm(output): 0.9444, norm(x): 0.7993, norm(y): 0.9976, norm:0.6114, tok/sec: 102111.11, flops:107.18, batch-reuse:1
@ 6027 train 4.0556 , allloss: 4.0561, dt: 1307.63ms, fracRes: 0.7104, norm(attn): 0.1553, norm(output): 0.9437, norm(x): 0.7986, norm(y): 0.9976, norm:0.6079, tok/sec: 100236.21, flops:105.21, batch-reuse:1
@ 6028 train 4.1274 , allloss: 4.1275, dt: 1309.88ms, fracRes: 0.7111, norm(attn): 0.1553, norm(output): 0.9436, norm(x): 0.7972, norm(y): 0.9978, norm:0.8000, tok/sec: 100063.91, flops:105.03, batch-reuse:1
@ 6029 train 4.0260 , allloss: 4.0264, dt: 1295.34ms, fracRes: 0.7109, norm(attn): 0.1562, norm(output): 0.9439, norm(x): 0.7984, norm(y): 0.9977, norm:0.9461, tok/sec: 101187.48, flops:106.21, batch-reuse:1
@ 6030 train 4.0218 , allloss: 4.0218, dt: 1293.21ms, fracRes: 0.7108, norm(attn): 0.1553, norm(output): 0.9438, norm(x): 0.7984, norm(y): 0.9975, norm:0.7867, tok/sec: 101354.16, flops:106.38, batch-reuse:1
@ 6031 train 4.2397 , allloss: 4.2398, dt: 1301.60ms, fracRes: 0.7107, norm(attn): 0.1523, norm(output): 0.9443, norm(x): 0.7991, norm(y): 0.9974, norm:0.8206, tok/sec: 100700.59, flops:105.70, batch-reuse:1
@ 6032 train 4.0602 , allloss: 4.0603, dt: 1296.75ms, fracRes: 0.7107, norm(attn): 0.1523, norm(output): 0.9442, norm(x): 0.7992, norm(y): 0.9976, norm:0.7173, tok/sec: 101076.95, flops:106.09, batch-reuse:1
@ 6033 train 4.0989 , allloss: 4.0990, dt: 1308.59ms, fracRes: 0.7109, norm(attn): 0.1514, norm(output): 0.9441, norm(x): 0.7991, norm(y): 0.9977, norm:0.6958, tok/sec: 100162.89, flops:105.13, batch-reuse:1
@ 6034 train 4.1189 , allloss: 4.1189, dt: 1283.58ms, fracRes: 0.7108, norm(attn): 0.1523, norm(output): 0.9440, norm(x): 0.7988, norm(y): 0.9976, norm:0.6698, tok/sec: 102114.74, flops:107.18, batch-reuse:1
@ 6035 train 4.0340 , allloss: 4.0341, dt: 1294.97ms, fracRes: 0.7106, norm(attn): 0.1553, norm(output): 0.9440, norm(x): 0.7987, norm(y): 0.9975, norm:0.5259, tok/sec: 101216.41, flops:106.24, batch-reuse:1
@ 6036 train 4.1257 , allloss: 4.1258, dt: 1308.74ms, fracRes: 0.7105, norm(attn): 0.1543, norm(output): 0.9443, norm(x): 0.7991, norm(y): 0.9973, norm:0.7005, tok/sec: 100150.97, flops:105.12, batch-reuse:1
@ 6037 train 3.9383 , allloss: 3.9384, dt: 1307.82ms, fracRes: 0.7108, norm(attn): 0.1572, norm(output): 0.9432, norm(x): 0.7970, norm(y): 0.9975, norm:0.6125, tok/sec: 100221.79, flops:105.20, batch-reuse:1
@ 6038 train 4.0334 , allloss: 4.0338, dt: 1296.87ms, fracRes: 0.7107, norm(attn): 0.1543, norm(output): 0.9441, norm(x): 0.7994, norm(y): 0.9974, norm:0.7324, tok/sec: 101068.22, flops:106.08, batch-reuse:1
@ 6039 train 4.0634 , allloss: 4.0635, dt: 1313.80ms, fracRes: 0.7109, norm(attn): 0.1543, norm(output): 0.9442, norm(x): 0.7993, norm(y): 0.9975, norm:0.6380, tok/sec: 99765.78, flops:104.72, batch-reuse:1
@ 6040 train 4.1223 , allloss: 4.1226, dt: 1307.70ms, fracRes: 0.7108, norm(attn): 0.1543, norm(output): 0.9443, norm(x): 0.7990, norm(y): 0.9972, norm:0.6673, tok/sec: 100230.64, flops:105.21, batch-reuse:1
@ 6041 train 4.0939 , allloss: 4.0942, dt: 1337.23ms, fracRes: 0.7109, norm(attn): 0.1533, norm(output): 0.9439, norm(x): 0.7982, norm(y): 0.9971, norm:0.6575, tok/sec: 98017.49, flops:102.88, batch-reuse:1
@ 6042 train 4.0723 , allloss: 4.0723, dt: 1324.98ms, fracRes: 0.7109, norm(attn): 0.1514, norm(output): 0.9442, norm(x): 0.7991, norm(y): 0.9972, norm:0.6917, tok/sec: 98923.44, flops:103.83, batch-reuse:1
@ 6043 train 3.9226 , allloss: 3.9227, dt: 1287.03ms, fracRes: 0.7108, norm(attn): 0.1553, norm(output): 0.9440, norm(x): 0.7990, norm(y): 0.9972, norm:0.7729, tok/sec: 101840.73, flops:106.90, batch-reuse:1
@ 6044 train 4.0867 , allloss: 4.0867, dt: 1295.27ms, fracRes: 0.7109, norm(attn): 0.1553, norm(output): 0.9444, norm(x): 0.7990, norm(y): 0.9973, norm:0.6430, tok/sec: 101193.06, flops:106.22, batch-reuse:1
@ 6045 train 4.0354 , allloss: 4.0356, dt: 1302.65ms, fracRes: 0.7108, norm(attn): 0.1553, norm(output): 0.9439, norm(x): 0.7985, norm(y): 0.9975, norm:0.6983, tok/sec: 100619.31, flops:105.61, batch-reuse:1
@ 6046 train 4.0294 , allloss: 4.0294, dt: 1294.98ms, fracRes: 0.7111, norm(attn): 0.1533, norm(output): 0.9440, norm(x): 0.7981, norm(y): 0.9976, norm:0.6913, tok/sec: 101215.22, flops:106.24, batch-reuse:1
@ 6047 train 4.0337 , allloss: 4.0337, dt: 1303.68ms, fracRes: 0.7106, norm(attn): 0.1533, norm(output): 0.9442, norm(x): 0.7991, norm(y): 0.9975, norm:0.6444, tok/sec: 100540.31, flops:105.53, batch-reuse:1
@ 6048 train 4.1066 , allloss: 4.1066, dt: 1303.21ms, fracRes: 0.7110, norm(attn): 0.1533, norm(output): 0.9444, norm(x): 0.7990, norm(y): 0.9976, norm:0.6244, tok/sec: 100576.56, flops:105.57, batch-reuse:1
@ 6049 train 4.0635 , allloss: 4.0636, dt: 1312.25ms, fracRes: 0.7108, norm(attn): 0.1533, norm(output): 0.9441, norm(x): 0.7991, norm(y): 0.9976, norm:0.6774, tok/sec: 99883.09, flops:104.84, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0052, -0.0332, -0.0156,  ..., -0.0164,  0.0020,  0.0227],
        [ 0.0089, -0.0358, -0.0184,  ..., -0.0642, -0.0108,  0.0180],
        [ 0.0004, -0.0491,  0.0066,  ..., -0.0092,  0.0121,  0.0362],
        ...,
        [ 0.0222,  0.0663, -0.0190,  ..., -0.0004, -0.0333,  0.0080],
        [-0.0131, -0.0185,  0.0574,  ...,  0.0124,  0.0513,  0.0224],
        [ 0.0112, -0.0275,  0.0451,  ..., -0.0114,  0.0567, -0.0089]], device='cuda:0', requires_grad=True)
K: tensor([ 5.1875, -3.1875,  2.5938,  2.7188, -4.5938,  3.0469, -0.5391,  6.0000, -4.8125, -0.5117, -2.5625, -4.8125,  4.8125, -3.8125,  0.3574, -0.7656, -0.7422, -4.4688,  4.8750, -5.4688,  5.3438,  3.0469, -5.8438,  0.0229, -0.6094, -0.6484,  3.0781, -3.1250, -4.9375, -3.2188,  5.9375,  0.4414,
         3.0938,  4.3438, -0.9727, -3.9062,  2.5312,  2.7656, -3.3594, -3.7656,  4.5625, -2.1719, -1.0234, -1.4062, -4.0312, -1.8203,  0.8047,  4.1562, -0.9688,  0.6445,  3.8438, -4.5938, -5.6250,  4.6875,  3.4531, -2.0625,  3.9219,  2.4531, -0.8281, -2.4844, -2.3438,  0.8125, -1.2344, -2.0781],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0730,  0.0718, -0.0017,  ..., -0.0198, -0.0224, -0.0073],
        [-0.0609,  0.0786,  0.0029,  ...,  0.0238,  0.0056,  0.0216],
        [-0.0664,  0.0695, -0.0140,  ..., -0.0462, -0.0535,  0.0092],
        ...,
        [ 0.0346, -0.0081, -0.0113,  ...,  0.0100, -0.0096,  0.0058],
        [-0.0274,  0.0056, -0.0279,  ...,  0.0384,  0.0099,  0.0297],
        [-0.0109,  0.0353,  0.0143,  ...,  0.0081, -0.0059, -0.0429]], device='cuda:0', requires_grad=True)
Q: tensor([-1.8594,  6.1875, -6.9375, -4.3750,  3.6562, -4.3438, -2.1875, -5.0625,  5.0938, -5.4688,  1.6953,  4.2188, -6.2812,  4.5312, -6.4375,  4.0938,  3.7031,  5.0312, -4.0000,  6.3750, -3.8906, -4.8438,  5.4062, -4.7500, -2.4375, -4.7500, -6.0938,  2.4062,  3.9531,  7.5938, -4.7500, -5.4375,
        -7.5625, -4.0312, -2.7344,  2.1562, -8.5000, -3.8438,  5.2188,  2.5625, -2.6875,  0.5312,  5.1875, -1.1250,  4.6562,  3.0625, -5.2500, -6.1250,  6.3750,  0.9102, -3.0000,  5.6875,  4.5312, -5.1875, -2.9688,  0.3535, -2.8594,  2.5625, -1.5859,  8.6875,  1.7969, -4.0312,  4.8125,  6.2188],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[   0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000],
        [   0.0000,   64.5000,   83.5000,   85.5000,   70.0000,   65.0000,   58.2500,   71.0000,   68.0000,   53.0000,   62.2500,   68.5000,   50.7500,   66.0000,   70.5000],
        [   0.0000,  -50.0000,  -76.0000,  -77.0000,  -66.5000,  -62.5000,  -52.5000,  -58.7500,  -62.2500,  -50.5000,  -58.2500,  -59.0000,  -37.0000,  -61.2500,  -63.2500],
        [   0.0000,  -81.5000, -125.0000, -137.0000, -120.5000, -110.5000,  -93.5000,  -97.5000, -112.5000,  -88.5000, -107.0000, -103.0000,  -61.0000, -110.5000, -113.5000],
        [   0.0000,  -95.0000, -145.0000, -155.0000, -137.0000, -127.0000, -106.0000, -111.5000, -128.0000, -101.0000, -122.0000, -116.0000,  -68.0000, -126.0000, -129.0000],
        [   0.0000,  -75.0000, -114.5000, -120.5000, -106.0000,  -99.0000,  -83.5000,  -89.5000,  -99.5000,  -79.5000,  -93.5000,  -91.5000,  -56.2500,  -97.5000, -100.0000],
        [   0.0000,  -70.5000, -108.0000, -114.5000, -101.0000,  -94.5000,  -78.5000,  -83.0000,  -94.5000,  -74.5000,  -90.0000,  -86.0000,  -50.5000,  -93.0000,  -95.0000],
        [   0.0000,  -48.0000,  -78.0000,  -84.5000,  -76.5000,  -70.0000,  -59.2500,  -60.0000,  -71.0000,  -56.5000,  -67.5000,  -64.5000,  -37.0000,  -69.5000,  -71.0000],
        [   0.0000,  -77.0000, -118.5000, -128.0000, -113.0000, -105.0000,  -88.0000,  -91.5000, -106.0000,  -83.0000, -100.5000,  -95.0000,  -55.0000, -103.5000, -105.5000],
        [   0.0000,  -79.5000, -117.5000, -126.0000, -110.0000, -101.5000,  -86.0000,  -91.5000, -103.5000,  -81.0000,  -98.5000,  -95.0000,  -56.7500, -102.0000, -105.0000],
        [   0.0000,  -81.0000, -122.5000, -131.0000, -115.0000, -107.0000,  -89.0000,  -93.5000, -107.5000,  -84.5000, -103.0000,  -97.0000,  -55.5000, -106.0000, -108.5000],
        [   0.0000,  -68.5000, -102.5000, -109.0000,  -96.0000,  -88.5000,  -74.5000,  -79.5000,  -90.0000,  -70.5000,  -85.5000,  -82.5000,  -49.2500,  -88.5000,  -91.0000],
        [   0.0000,  -43.5000,  -68.0000,  -72.5000,  -65.0000,  -59.5000,  -50.5000,  -52.5000,  -60.7500,  -47.7500,  -57.0000,  -55.5000,  -33.0000,  -59.5000,  -60.7500],
        [   0.0000,  -76.5000, -115.5000, -124.0000, -108.5000, -101.5000,  -84.5000,  -89.0000, -102.0000,  -80.0000,  -97.0000,  -92.0000,  -53.5000, -100.5000, -102.5000],
        [   0.0000,  -74.0000, -110.5000, -119.5000, -104.5000,  -96.5000,  -81.0000,  -85.5000,  -97.5000,  -76.5000,  -93.0000,  -89.0000,  -52.5000,  -96.0000,  -99.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9167],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0305,     0.9688,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9023,     0.0591,     0.0403,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0056,     0.0012,     0.0038,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0073,     0.0012,     0.0001,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9688,     0.0289,     0.0009,     0.0001,     0.0002,     0.0014,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8984,     0.0908,     0.0032,     0.0000,     0.0001,     0.0010,     0.0048,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8477,     0.0625,     0.0503,     0.0013,     0.0009,     0.0004,     0.0084,     0.0303,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9805,     0.0154,     0.0005,     0.0001,     0.0001,     0.0004,     0.0008,     0.0004,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8438,     0.0615,     0.0116,     0.0009,     0.0002,     0.0008,     0.0021,     0.0042,     0.0004,     0.0752,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9453,     0.0304,     0.0084,     0.0002,     0.0003,     0.0008,     0.0070,     0.0027,     0.0008,     0.0022,     0.0004,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7773,     0.0074,     0.0029,     0.0002,     0.0003,     0.0005,     0.0002,     0.0017,     0.0005,     0.0062,     0.0011,     0.2021,     0.0000,     0.0000,     0.0000],
        [    0.6797,     0.0408,     0.0084,     0.0018,     0.0031,     0.0022,     0.0154,     0.0117,     0.0085,     0.0013,     0.0055,     0.0474,     0.1748,     0.0000,     0.0000],
        [    0.9492,     0.0457,     0.0009,     0.0001,     0.0001,     0.0005,     0.0011,     0.0005,     0.0015,     0.0000,     0.0002,     0.0008,     0.0005,     0.0001,     0.0000],
        [    0.4336,     0.1455,     0.0062,     0.0005,     0.0001,     0.0017,     0.0142,     0.0055,     0.0015,     0.0096,     0.0135,     0.0085,     0.0016,     0.0003,     0.3574]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0219,  0.0035,  0.0131,  ...,  0.0096,  0.0252,  0.0156],
        [ 0.0145,  0.0058,  0.0333,  ..., -0.0102, -0.0650,  0.0290],
        [-0.0162,  0.0105, -0.0106,  ..., -0.0163, -0.0004,  0.0237],
        ...,
        [ 0.0521,  0.0136,  0.0383,  ...,  0.0389,  0.0454, -0.0112],
        [-0.0190,  0.0266, -0.0631,  ..., -0.0302,  0.0296,  0.0446],
        [-0.0069, -0.0439, -0.0083,  ..., -0.0136, -0.0185,  0.0347]], device='cuda:0', requires_grad=True)
K: tensor([-1.3594, -1.1797, -0.0361, -0.6445, -2.0156, -1.4141, -1.2109, -1.5625, -2.0938, -2.1406, -0.0537,  1.9219,  0.2812,  2.6562,  1.1719, -0.6094, -0.6953,  0.4805, -0.1416, -0.3828, -1.1719, -2.1875, -1.0938,  0.3242,  0.7578, -0.5664, -1.1484, -1.8984,  2.1719,  1.1484,  0.1797, -0.4473,
        -0.9727, -2.6875, -0.5039, -2.1719, -0.4004,  1.2812,  0.8516, -0.2715, -1.1328,  0.2793,  0.0420,  3.5000, -2.1562, -2.7812, -3.1719, -0.4570, -0.6562, -2.1250,  2.1875, -0.3613, -0.1436,  1.0859,  0.1494,  0.2910,  1.0234,  2.5469,  0.5469, -2.6719, -2.1719, -0.1543,  3.3750, -1.3516],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0155,  0.0014, -0.0183,  ...,  0.0053,  0.0207, -0.0219],
        [ 0.0015,  0.0240,  0.0066,  ..., -0.0562, -0.0321,  0.0229],
        [-0.0031, -0.0202,  0.0414,  ...,  0.0037, -0.0061,  0.0219],
        ...,
        [ 0.0176, -0.0229, -0.0171,  ...,  0.0034,  0.0570,  0.0263],
        [ 0.0285,  0.0036, -0.0116,  ...,  0.0362,  0.0052, -0.0016],
        [-0.0244,  0.0032, -0.0164,  ..., -0.0283,  0.0227,  0.0561]], device='cuda:0', requires_grad=True)
Q: tensor([-0.3633, -0.1133,  2.1875, -1.3047,  2.1875,  1.3516,  1.2656, -2.0312, -2.2812,  0.1836, -1.4766,  1.3047, -0.3203, -0.6523,  2.7969,  0.2734,  2.5781, -0.9922, -1.6016,  1.3359,  1.1406,  1.3594,  1.9453,  1.5781,  0.6953,  0.9453,  0.0248,  0.9531,  1.5156, -2.5938,  0.4121,  1.0547,
        -1.3672,  1.7734,  0.2754, -0.2188,  0.3574,  3.7656, -0.2002, -0.1875, -0.4355,  0.5898, -1.9219,  0.5781,  2.4062, -1.0391,  0.6953, -2.6406,  3.8125, -2.9688,  0.6328,  2.9375, -0.8320,  1.0781, -1.6562, -2.7656,  0.0703, -1.1719,  0.6055, -0.9219, -1.8750,  1.4141, -1.6875, -0.5234],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000,   3.4531,  -2.0625,  -2.8125,  -4.2500,  -1.0781,   0.2158,  -1.6719,  -1.1562,  -3.6719,  -3.1250,  -0.4492,  -1.2422,  -0.9844,  -3.3750],
        [  0.0000,  -2.7188,  -3.1094,  -5.3438,  -5.2812,  -5.9062,  -4.4062,  -2.6250,  -5.0625,  -4.5625,  -4.1562,  -2.0781,  -3.6094,  -6.2500,  -4.8125],
        [  0.0000,  -5.1562,  -6.6875,  -5.5625,  -7.6875,  -8.0625,  -9.8750,  -6.8438,  -7.6250,  -9.0000,  -8.1250,  -5.5312,  -6.8438,  -9.2500,  -9.4375],
        [  0.0000,  -4.9062,  -6.7500,  -9.3750,  -9.0000,  -8.9375,  -8.1875,  -8.1875,  -8.6250,  -9.8125,  -8.9375,  -8.0625,  -7.3750,  -9.4375,  -9.9375],
        [  0.0000,  -3.5156,  -7.0000,  -9.1250,  -8.6875,  -6.5000,  -5.7812,  -7.4062,  -6.3750,  -7.4062,  -8.6875,  -6.8750,  -6.7188,  -7.7188,  -7.7188],
        [  0.0000,  -2.2969,  -5.6250, -10.6875,  -9.5000,  -6.8125,  -5.2188,  -6.0000,  -8.1875,  -8.5625,  -7.9688,  -6.6562,  -5.3750,  -9.1875,  -8.3125],
        [  0.0000,  -2.6094,  -2.8281,  -6.4688,  -6.9062,  -7.5625,  -4.6250,  -3.3281,  -8.5625,  -6.0000,  -6.4375,  -5.2188,  -3.5938,  -8.5625,  -7.7812],
        [  0.0000,  -4.1562,  -7.5938,  -9.6250,  -9.1875,  -7.8125,  -7.0625,  -7.9062,  -7.9688,  -9.5625,  -9.1250,  -6.7188,  -7.1875,  -7.5312,  -8.7500],
        [  0.0000,  -2.6250,  -4.2812,  -6.8438,  -8.5000,  -7.0000,  -5.9688,  -5.2812,  -7.5625,  -2.4219,  -6.8438,  -3.9219,  -5.9688,  -8.8750,  -6.5938],
        [  0.0000,  -3.4375,  -4.7188,  -8.4375,  -7.9062,  -7.1250,  -4.9062,  -5.8438,  -7.0938,  -6.0625,  -7.8125,  -5.5938,  -6.2812,  -8.0625,  -7.2500],
        [  0.0000,  -4.6562,  -5.5938,  -8.0625,  -7.9062,  -7.4062,  -8.1875,  -6.0938,  -7.3438,  -4.8438,  -6.5625,  -1.3438,  -4.7188,  -8.8750,  -7.7500],
        [  0.0000,  -2.8125,  -4.4062,  -5.9688,  -5.3750,  -5.7500,  -3.7812,  -4.0625,  -4.3750,  -6.2188,  -4.8125,  -2.6562,  -1.3594,  -4.9062,  -5.9375],
        [  0.0000,  -3.0312,  -7.0000,  -9.8125,  -8.8125,  -7.6250,  -6.7812,  -7.5312,  -6.4375, -10.2500,  -8.7500,  -7.0625,  -7.4688,  -8.8750,  -9.0625],
        [  0.0000,  -1.0938,  -4.2500,  -6.7188,  -8.9375,  -5.5312,  -3.4219,  -4.3750,  -5.6250,  -3.8125,  -3.4688,  -3.9375,  -5.5938,  -7.1875,  -0.1953]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7495],
        [0.6961],
        [0.5268],
        [0.5652],
        [0.5447],
        [0.4600],
        [0.4552],
        [0.3626],
        [0.4067],
        [0.3009],
        [0.3539],
        [0.3157],
        [0.3191],
        [0.2131]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0267, -0.0061,  0.0061,  ...,  0.0132, -0.0589, -0.0077],
        [-0.0426, -0.0245,  0.0070,  ...,  0.0276, -0.0560, -0.0223],
        [ 0.0149,  0.0082, -0.0097,  ...,  0.0358,  0.0190, -0.0057],
        ...,
        [-0.0108, -0.0151, -0.0056,  ...,  0.0471, -0.0252, -0.0130],
        [-0.0211, -0.0131,  0.0136,  ...,  0.0138,  0.0023, -0.0028],
        [ 0.0041, -0.0309, -0.0255,  ...,  0.0449, -0.0286, -0.0496]], device='cuda:0', requires_grad=True)
K: tensor([ 3.4844, -4.1250, -3.3281, -4.0000,  5.0625, -4.0938,  5.2500,  3.8281,  2.8125, -4.5938,  3.5469, -4.3438, -4.6562,  4.5938,  2.5938, -3.2656,  2.6875,  4.6250, -0.3438, -4.1875,  4.7500,  5.3750,  4.3438, -2.5156, -4.5312,  5.1250, -3.5625, -4.5000, -3.5156,  3.6719, -4.6562,  3.2031,
         3.7656, -3.3438, -4.3750,  1.6562,  1.9766, -3.8594,  4.1562, -4.1875, -3.6562,  2.4219,  3.7031, -3.6875, -2.7500,  3.6875, -4.3750,  3.6250, -4.8125, -4.5312, -4.7188,  3.2656,  2.8594,  4.2188,  3.6094, -4.7500, -4.7812,  3.1406, -1.8594, -2.9688,  3.7812,  4.0000, -1.9141,  2.8750],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0113,  0.0093,  0.0096,  ..., -0.0003,  0.0160,  0.0336],
        [ 0.0374,  0.0213, -0.0173,  ..., -0.0333,  0.0022,  0.0054],
        [ 0.0019, -0.0195, -0.0041,  ..., -0.0219,  0.0375,  0.0251],
        ...,
        [-0.0110, -0.0052, -0.0446,  ..., -0.0110,  0.0355,  0.0059],
        [ 0.0168,  0.0008, -0.0176,  ...,  0.0210, -0.0194, -0.0130],
        [-0.0041,  0.0026,  0.0052,  ..., -0.0204, -0.0012,  0.0436]], device='cuda:0', requires_grad=True)
Q: tensor([-3.1406,  4.2500,  4.5000,  4.4375, -5.0938,  4.9062, -4.5625, -5.2188, -3.2344,  4.4062, -5.1562,  5.4062,  4.5000, -4.3750, -4.0312,  4.6562, -2.9062, -5.8125,  0.6328,  5.4062, -5.4375, -5.0938, -5.4688,  2.4531,  5.9375, -5.2812,  3.7500,  4.7500,  3.8594, -4.8438,  4.2812, -3.8281,
        -4.4688,  2.8125,  5.0938, -2.3594, -1.7891,  3.4375, -6.0625,  3.6875,  4.4688, -2.3438, -4.2812,  4.5312,  2.7969, -5.0938,  4.4062, -3.7344,  4.2188,  5.6875,  5.9062, -5.4375, -3.6094, -5.3125, -3.4531,  5.2500,  5.1250, -3.0312,  2.3750,  3.7656, -4.3125, -5.1875,  2.2188, -2.7500],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[   0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000],
        [   0.0000,  -48.2500,  -54.5000, -108.5000,  -80.0000,  -94.0000,  -82.5000,  -97.5000,  -78.5000,  -91.5000,  -75.0000,  -84.0000,  -81.0000,  -76.0000,  -85.0000],
        [   0.0000,  -53.2500,  -61.5000, -124.5000,  -89.5000, -106.0000,  -93.5000, -111.0000,  -89.0000, -104.5000,  -85.0000,  -95.0000,  -92.0000,  -85.5000,  -97.0000],
        [   0.0000, -103.5000, -120.5000, -248.0000, -176.0000, -208.0000, -183.0000, -219.0000, -174.0000, -207.0000, -167.0000, -185.0000, -181.0000, -168.0000, -189.0000],
        [   0.0000,  -65.5000,  -75.0000, -153.0000, -111.0000, -131.0000, -115.0000, -136.0000, -109.5000, -128.0000, -104.5000, -116.0000, -113.5000, -105.5000, -118.0000],
        [   0.0000,  -82.5000,  -94.5000, -193.0000, -139.0000, -165.0000, -144.0000, -172.0000, -137.0000, -162.0000, -131.0000, -146.0000, -143.0000, -132.0000, -149.0000],
        [   0.0000,  -71.5000,  -82.5000, -169.0000, -122.0000, -144.0000, -126.5000, -151.0000, -120.0000, -141.0000, -114.5000, -127.5000, -124.5000, -116.0000, -130.0000],
        [   0.0000,  -92.5000, -107.5000, -221.0000, -158.0000, -187.0000, -164.0000, -197.0000, -156.0000, -185.0000, -148.0000, -166.0000, -163.0000, -150.0000, -169.0000],
        [   0.0000,  -66.5000,  -76.5000, -156.0000, -112.5000, -133.0000, -116.5000, -139.0000, -111.0000, -131.0000, -106.0000, -117.5000, -115.5000, -107.0000, -120.0000],
        [   0.0000,  -81.0000,  -94.5000, -192.0000, -137.0000, -163.0000, -143.0000, -171.0000, -135.0000, -162.0000, -129.0000, -144.0000, -142.0000, -130.0000, -147.0000],
        [   0.0000,  -66.0000,  -76.0000, -155.0000, -111.5000, -131.0000, -115.5000, -137.0000, -110.5000, -130.0000, -105.5000, -117.0000, -114.0000, -106.5000, -119.5000],
        [   0.0000,  -73.0000,  -84.5000, -172.0000, -122.5000, -145.0000, -128.0000, -153.0000, -121.0000, -144.0000, -116.0000, -129.0000, -127.0000, -116.5000, -132.0000],
        [   0.0000,  -75.5000,  -87.0000, -178.0000, -127.0000, -151.0000, -133.0000, -159.0000, -125.5000, -149.0000, -120.0000, -134.0000, -132.0000, -121.0000, -137.0000],
        [   0.0000,  -64.5000,  -74.5000, -152.0000, -109.5000, -129.0000, -113.5000, -135.0000, -108.0000, -127.0000, -103.0000, -114.5000, -112.5000, -104.0000, -117.0000],
        [   0.0000,  -73.0000,  -84.5000, -173.0000, -124.5000, -147.0000, -129.0000, -155.0000, -122.5000, -145.0000, -116.5000, -131.0000, -127.5000, -118.0000, -133.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0338,  0.0150,  0.0174,  ...,  0.0052, -0.0009, -0.0206],
        [-0.0032,  0.0162,  0.0183,  ...,  0.0253,  0.0053,  0.0242],
        [ 0.0268,  0.0040, -0.0008,  ..., -0.0008,  0.0326,  0.0024],
        ...,
        [-0.0187, -0.0242, -0.0122,  ...,  0.0112, -0.0218,  0.0093],
        [-0.0073,  0.0055, -0.0182,  ..., -0.0154, -0.0248, -0.0212],
        [ 0.0202, -0.0001, -0.0041,  ...,  0.0117,  0.0109,  0.0052]], device='cuda:0', requires_grad=True)
K: tensor([-2.0312,  0.5195, -2.2188,  1.5156, -1.5547, -2.3750, -1.0469,  2.1406, -0.4531, -0.4961,  0.5352,  0.6953, -1.1641, -2.5625,  1.7656,  1.4844,  2.3438, -1.9688, -2.1875,  1.3906,  1.5625, -1.6953, -2.3438,  2.7344, -1.2969,  2.5000, -1.0391, -1.8125,  0.8984, -1.5156,  0.3203, -1.8438,
        -1.4297, -2.0469,  2.0469, -2.2188, -1.8906, -0.2061,  2.1562,  1.6562, -2.2188, -1.0859,  0.5547, -2.0625,  1.6797,  2.5938, -0.1128, -1.7188, -2.1250,  1.8438,  2.5000,  1.0000,  0.5234, -2.1875, -0.9102, -1.7969,  1.8438,  1.7734, -1.7734, -2.1094, -1.0859,  2.4062, -0.2773, -2.4375],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0249,  0.0117, -0.0050,  ...,  0.0155, -0.0188, -0.0169],
        [-0.0090, -0.0079,  0.0064,  ...,  0.0073, -0.0147, -0.0014],
        [ 0.0019,  0.0095, -0.0017,  ..., -0.0011,  0.0142,  0.0021],
        ...,
        [-0.0213,  0.0052, -0.0080,  ..., -0.0108,  0.0222,  0.0081],
        [-0.0284,  0.0257, -0.0041,  ...,  0.0038,  0.0014, -0.0229],
        [ 0.0021, -0.0094, -0.0338,  ...,  0.0016, -0.0039,  0.0133]], device='cuda:0', requires_grad=True)
Q: tensor([ 2.7188, -1.3906,  1.9844, -0.5898,  0.5898,  2.8438,  1.2422, -3.1719, -0.5820, -0.1865,  0.1011, -0.0859,  1.7734,  1.7188, -2.2969, -1.9219, -2.8438,  2.4062,  1.4219, -3.0312, -1.7656,  2.7969,  3.1406, -2.7188,  2.3438, -3.0938,  0.4355,  1.0312,  0.3379,  0.8125,  0.2383,  1.8047,
         0.2393,  2.6719, -1.7734,  2.3438,  2.5938, -0.8789, -2.5156, -2.3594,  3.3438, -0.9180, -1.4375,  2.6094, -1.7812, -2.0000, -1.6719,  0.9180,  0.9844, -2.0781, -2.2344,  0.4277,  1.4766,  2.8594,  1.0156,  2.7812, -3.2500, -2.2031,  1.9609,  1.8047,  0.6484, -3.3281,  2.1250,  1.9922],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000, -18.3750, -20.5000, -18.2500, -18.0000, -18.5000, -18.5000, -18.8750, -19.8750, -19.7500, -20.5000, -20.8750, -21.8750, -20.2500, -22.0000],
        [  0.0000, -20.7500, -23.3750, -20.6250, -20.3750, -20.8750, -20.8750, -21.2500, -22.5000, -22.2500, -23.2500, -23.7500, -24.7500, -23.0000, -25.1250],
        [  0.0000, -18.0000, -20.2500, -17.8750, -17.8750, -18.1250, -18.2500, -18.5000, -19.6250, -19.2500, -20.2500, -20.5000, -21.3750, -20.0000, -21.6250],
        [  0.0000, -17.6250, -19.7500, -17.6250, -17.6250, -18.0000, -18.0000, -18.2500, -19.2500, -19.0000, -20.0000, -20.2500, -21.1250, -19.7500, -21.3750],
        [  0.0000, -17.7500, -19.8750, -17.6250, -17.6250, -18.0000, -18.0000, -18.3750, -19.3750, -19.1250, -20.0000, -20.2500, -21.2500, -19.7500, -21.3750],
        [  0.0000, -17.5000, -19.6250, -17.2500, -17.2500, -17.6250, -17.7500, -18.0000, -19.0000, -18.7500, -19.6250, -20.0000, -20.8750, -19.5000, -21.0000],
        [  0.0000, -18.6250, -20.8750, -18.5000, -18.5000, -18.8750, -19.0000, -19.3750, -20.3750, -20.1250, -21.0000, -21.3750, -22.3750, -20.8750, -22.5000],
        [  0.0000, -18.3750, -20.7500, -18.5000, -18.3750, -18.8750, -18.8750, -19.1250, -20.2500, -20.0000, -21.0000, -21.2500, -22.2500, -20.7500, -22.3750],
        [  0.0000, -20.1250, -22.7500, -20.2500, -20.2500, -20.7500, -20.7500, -21.1250, -22.3750, -22.1250, -23.1250, -23.5000, -24.5000, -22.8750, -24.7500],
        [  0.0000, -18.3750, -20.6250, -18.3750, -18.3750, -18.8750, -18.8750, -19.1250, -20.2500, -20.0000, -21.0000, -21.2500, -22.1250, -20.7500, -22.3750],
        [  0.0000, -19.5000, -22.1250, -19.6250, -19.5000, -20.0000, -20.0000, -20.3750, -21.5000, -21.2500, -22.2500, -22.7500, -23.6250, -22.0000, -23.8750],
        [  0.0000, -19.6250, -22.1250, -19.6250, -19.6250, -20.1250, -20.1250, -20.5000, -21.6250, -21.3750, -22.3750, -22.7500, -23.8750, -22.1250, -23.8750],
        [  0.0000, -18.6250, -20.8750, -18.6250, -18.6250, -19.1250, -19.0000, -19.3750, -20.5000, -20.2500, -21.2500, -21.5000, -22.5000, -21.0000, -22.6250],
        [  0.0000, -20.7500, -23.3750, -20.8750, -20.7500, -21.2500, -21.2500, -21.6250, -22.8750, -22.5000, -23.6250, -24.0000, -25.0000, -23.3750, -25.3750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.4688,     0.5312,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.8867,     0.0776,     0.0364,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0143,     0.3555,     0.1455,     0.0344,     0.4512,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0038,     0.5078,     0.0981,     0.0337,     0.2852,     0.0718,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0003,     0.3652,     0.0266,     0.0164,     0.1523,     0.0591,     0.3789,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.1719,     0.0148,     0.0095,     0.1069,     0.0488,     0.4609,     0.1875,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0466,     0.0051,     0.0027,     0.0698,     0.0405,     0.2480,     0.1030,     0.4844,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0583,     0.0059,     0.0067,     0.0583,     0.0160,     0.2109,     0.1553,     0.4375,     0.0503,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0005,     0.0879,     0.0068,     0.0031,     0.0364,     0.0073,     0.0879,     0.1650,     0.5195,     0.0408,     0.0432,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0535,     0.0088,     0.0111,     0.0688,     0.0253,     0.1846,     0.1289,     0.3613,     0.0630,     0.0518,     0.0430,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.0227,     0.0014,     0.0012,     0.0251,     0.0115,     0.1680,     0.0840,     0.6211,     0.0153,     0.0281,     0.0090,     0.0104,     0.0000,     0.0000],
        [    0.0000,     0.0119,     0.0013,     0.0010,     0.0288,     0.0189,     0.1226,     0.0588,     0.3281,     0.0216,     0.0442,     0.0137,     0.0118,     0.3379,     0.0000],
        [    0.0000,     0.0347,     0.0039,     0.0069,     0.0405,     0.0219,     0.1318,     0.0864,     0.2207,     0.0337,     0.0286,     0.0232,     0.0400,     0.2148,     0.1133]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0263, -0.0057,  0.0529,  ...,  0.0366, -0.0117, -0.0041],
        [ 0.0054,  0.0729, -0.0068,  ...,  0.0298,  0.0050,  0.0873],
        [-0.0128,  0.0151, -0.0189,  ..., -0.0340,  0.0450, -0.0135],
        ...,
        [ 0.0250,  0.0305,  0.0186,  ..., -0.0263,  0.0183, -0.0122],
        [ 0.0159,  0.0555, -0.0471,  ...,  0.0841, -0.0264,  0.1035],
        [ 0.0511,  0.0456,  0.0058,  ..., -0.0337, -0.0320,  0.0135]], device='cuda:0', requires_grad=True)
K: tensor([-4.7188,  0.5664, -7.4375,  0.8125,  0.0317, -2.7344, -6.0625,  7.5938,  6.1562, -1.1953,  5.0625, -4.8125, -4.5938, -0.3203,  3.4375,  4.2188,  3.4062, -4.6562, -4.5000, -5.0625, -5.1562,  1.9766, -0.1055, -2.1406, -4.1562, -3.2500, -1.2500, -5.9375,  3.7969,  1.3047,  3.0156, -2.4375,
        -0.8789, -6.8125, -0.2002,  7.7500,  5.2500,  0.6602,  2.5000, -2.2969,  0.6641, -4.5312, -1.3828, -5.6562, -0.4922, -1.7656,  1.0703, -5.8125,  2.4844,  0.5352, -0.0204, -7.1250, -7.6250, -6.0938,  1.6250, -1.0234, -1.2031,  1.4688, -3.2188, -2.1250,  2.0469, -3.9531, -1.2969, -7.3750],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0283, -0.0175, -0.0147,  ..., -0.0097,  0.0255, -0.0082],
        [ 0.0071, -0.0335, -0.0675,  ..., -0.0598,  0.0098, -0.0124],
        [-0.0148,  0.0182,  0.0071,  ..., -0.0069, -0.0385, -0.0352],
        ...,
        [ 0.0310, -0.0152,  0.0318,  ..., -0.0086, -0.0308, -0.0123],
        [ 0.0274,  0.0031,  0.0055,  ..., -0.0348, -0.0112, -0.0242],
        [ 0.0124, -0.0012, -0.0399,  ...,  0.0523,  0.0309, -0.0337]], device='cuda:0', requires_grad=True)
Q: tensor([-1.6328,  0.3574, -0.6094,  1.0078,  1.7266, -0.7422, -1.9219,  0.3398,  1.9531,  0.5391,  2.5625, -0.8984, -1.5234, -1.0703,  1.0781, -0.5156,  0.9219, -0.4023,  0.2773,  1.2422, -0.7812,  0.1055, -1.2344, -2.4062,  0.7812, -0.0378, -0.3281, -1.7266, -2.6250,  0.6719, -0.4141,  0.2334,
         1.3750, -1.8984, -0.7734,  2.2656,  0.6797, -1.8516,  0.8047, -0.0198, -0.0840,  2.4219,  0.1816, -1.0938, -2.0156, -0.0532,  1.3516, -0.0596, -0.2383, -0.8242,  0.0649, -1.3359, -0.2393, -0.5820, -0.6289, -1.1953, -0.1367, -1.1406, -0.7344,  0.2109,  1.6797,  1.0547, -0.4453, -1.6953],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, 16.1250, 14.0000, 13.6250, 16.3750, 16.2500, 17.7500, 17.1250, 18.7500, 16.6250, 17.0000, 15.5000, 16.0000, 18.7500, 18.1250],
        [ 0.0000, 23.1250, 23.2500, 23.2500, 24.2500, 24.3750, 25.0000, 24.6250, 25.5000, 25.0000, 25.2500, 24.7500, 26.3750, 26.1250, 27.5000],
        [ 0.0000,  8.6250,  6.2188,  5.4375,  7.8125,  7.0938,  9.3125,  8.3125,  9.6875,  6.9375,  7.2500,  6.1250,  6.6562,  9.0625,  8.3125],
        [ 0.0000,  3.2031,  2.3125,  0.8711,  3.4531,  2.7969,  4.0938,  3.0469,  4.5312,  2.0000,  3.0156,  1.4531,  1.3906,  4.2812,  3.2188],
        [ 0.0000,  4.9062,  3.2656,  2.1875,  4.3438,  2.9531,  5.4688,  5.1875,  6.0938,  3.7656,  4.2188,  3.9844,  3.2812,  5.9375,  4.8125],
        [ 0.0000,  7.1875,  4.5625,  4.0625,  6.3125,  5.3750,  7.2188,  6.3438,  7.5625,  4.8438,  4.9062,  4.4062,  3.8125,  7.0312,  6.1875],
        [ 0.0000,  7.6250,  5.1875,  4.7188,  7.1562,  6.3750,  8.6250,  7.7188,  9.4375,  6.5938,  6.6875,  5.8125,  6.1875,  9.2500,  7.9375],
        [ 0.0000,  9.1250,  6.9062,  6.2812,  9.5625,  9.0000, 10.8125,  9.9375, 11.5000,  8.9375,  9.4375,  8.3750,  8.1875, 11.2500, 10.3750],
        [ 0.0000,  9.5625,  7.2812,  7.4062,  9.5625,  8.2500, 10.8750, 10.5625, 11.5625,  9.4375,  9.4375,  9.5625,  9.6250, 11.6250, 10.4375],
        [ 0.0000,  5.2188,  2.6719,  1.8906,  4.3438,  2.7500,  5.2188,  5.8750,  7.0000,  4.4688,  4.5312,  4.2188,  4.2188,  6.9375,  5.0312],
        [ 0.0000, 10.2500,  8.4375,  8.6250, 10.5000,  9.5000, 11.4375, 11.1250, 12.1250, 10.3750, 10.1875, 10.0000, 10.8750, 12.1250, 11.7500],
        [ 0.0000,  6.0000,  3.2031,  3.0625,  6.0938,  5.3125,  8.0000,  7.3125,  9.3125,  5.5938,  6.2188,  5.0625,  5.2188,  9.3125,  8.0000],
        [ 0.0000,  7.1562,  4.9688,  4.7188,  8.0625,  7.6250,  9.5000,  8.7500, 10.5000,  7.7500,  8.5000,  7.3125,  7.1562, 10.5000,  9.7500],
        [ 0.0000, 14.9375, 12.7500, 13.3125, 15.1250, 14.5000, 16.2500, 15.8750, 16.8750, 14.9375, 14.7500, 14.5625, 15.1250, 16.7500, 16.1250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3845],
        [0.2356],
        [0.2085],
        [0.2134],
        [0.2035],
        [0.1664],
        [0.1308],
        [0.1473],
        [0.1535],
        [0.1406],
        [0.1291],
        [0.0968],
        [0.1105],
        [0.1108]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( are:0.1514 a:0.0957,:0.1279 and:0.0889assium:0.1318,:0.2393 a:0.0674iced:0.4375)
iced
------
		( a:0.0957,:0.1279 and:0.0889assium:0.1318,:0.2393 a:0.0674iced:0.4375,:0.1216)
, and the seeds are all green.
- The seeds are the same
@ 6050 train 4.0212 , allloss: 4.0215, dt: 1782.59ms, fracRes: 0.7108, norm(attn): 0.1543, norm(output): 0.9440, norm(x): 0.7988, norm(y): 0.9976, norm:0.7394, tok/sec: 73529.16, flops:77.18, batch-reuse:1
@ 6051 train 4.0235 , allloss: 4.0237, dt: 1346.81ms, fracRes: 0.7108, norm(attn): 0.1543, norm(output): 0.9438, norm(x): 0.7984, norm(y): 0.9975, norm:0.6902, tok/sec: 97320.64, flops:102.15, batch-reuse:1
@ 6052 train 3.9954 , allloss: 3.9955, dt: 1349.15ms, fracRes: 0.7106, norm(attn): 0.1533, norm(output): 0.9440, norm(x): 0.7988, norm(y): 0.9976, norm:0.5380, tok/sec: 97151.61, flops:101.97, batch-reuse:1
@ 6053 train 3.9715 , allloss: 3.9716, dt: 1351.87ms, fracRes: 0.7106, norm(attn): 0.1533, norm(output): 0.9439, norm(x): 0.7989, norm(y): 0.9977, norm:0.6720, tok/sec: 96956.13, flops:101.77, batch-reuse:1
@ 6054 train 4.0319 , allloss: 4.0322, dt: 1349.18ms, fracRes: 0.7107, norm(attn): 0.1533, norm(output): 0.9441, norm(x): 0.7992, norm(y): 0.9977, norm:0.5592, tok/sec: 97149.14, flops:101.97, batch-reuse:1
@ 6055 train 4.0773 , allloss: 4.0773, dt: 1332.00ms, fracRes: 0.7108, norm(attn): 0.1533, norm(output): 0.9445, norm(x): 0.7996, norm(y): 0.9973, norm:0.5401, tok/sec: 98402.15, flops:103.29, batch-reuse:1
@ 6056 train 4.0989 , allloss: 4.0990, dt: 1318.60ms, fracRes: 0.7107, norm(attn): 0.1523, norm(output): 0.9445, norm(x): 0.7997, norm(y): 0.9972, norm:0.5487, tok/sec: 99402.35, flops:104.34, batch-reuse:1
@ 6057 train 4.0412 , allloss: 4.0416, dt: 1328.87ms, fracRes: 0.7108, norm(attn): 0.1523, norm(output): 0.9445, norm(x): 0.7993, norm(y): 0.9972, norm:0.5286, tok/sec: 98634.40, flops:103.53, batch-reuse:1
@ 6058 train 4.0264 , allloss: 4.0264, dt: 1332.01ms, fracRes: 0.7109, norm(attn): 0.1523, norm(output): 0.9444, norm(x): 0.7992, norm(y): 0.9974, norm:0.5688, tok/sec: 98401.75, flops:103.29, batch-reuse:1
@ 6059 train 4.0031 , allloss: 4.0031, dt: 1327.47ms, fracRes: 0.7109, norm(attn): 0.1514, norm(output): 0.9443, norm(x): 0.7998, norm(y): 0.9974, norm:0.5170, tok/sec: 98737.98, flops:103.64, batch-reuse:1
@ 6060 train 3.9670 , allloss: 3.9673, dt: 1328.18ms, fracRes: 0.7109, norm(attn): 0.1523, norm(output): 0.9442, norm(x): 0.8000, norm(y): 0.9975, norm:0.5843, tok/sec: 98685.48, flops:103.58, batch-reuse:1
@ 6061 train 3.9747 , allloss: 3.9747, dt: 1282.78ms, fracRes: 0.7109, norm(attn): 0.1514, norm(output): 0.9444, norm(x): 0.8001, norm(y): 0.9974, norm:0.4762, tok/sec: 102178.47, flops:107.25, batch-reuse:1
@ 6062 train 3.9615 , allloss: 3.9625, dt: 1297.84ms, fracRes: 0.7109, norm(attn): 0.1523, norm(output): 0.9446, norm(x): 0.8002, norm(y): 0.9976, norm:0.5782, tok/sec: 100992.65, flops:106.01, batch-reuse:1
@ 6063 train 4.0280 , allloss: 4.0289, dt: 1324.53ms, fracRes: 0.7108, norm(attn): 0.1523, norm(output): 0.9443, norm(x): 0.7998, norm(y): 0.9976, norm:0.5147, tok/sec: 98957.14, flops:103.87, batch-reuse:1
@ 6064 train 4.0382 , allloss: 4.0384, dt: 1302.90ms, fracRes: 0.7108, norm(attn): 0.1523, norm(output): 0.9442, norm(x): 0.7995, norm(y): 0.9974, norm:0.5941, tok/sec: 100599.90, flops:105.59, batch-reuse:1
@ 6065 train 4.0189 , allloss: 4.0192, dt: 1290.65ms, fracRes: 0.7109, norm(attn): 0.1523, norm(output): 0.9441, norm(x): 0.7992, norm(y): 0.9973, norm:0.5200, tok/sec: 101554.96, flops:106.60, batch-reuse:1
@ 6066 train 3.9807 , allloss: 3.9821, dt: 1283.51ms, fracRes: 0.7108, norm(attn): 0.1523, norm(output): 0.9441, norm(x): 0.7994, norm(y): 0.9972, norm:0.5612, tok/sec: 102119.74, flops:107.19, batch-reuse:1
@ 6067 train 3.9863 , allloss: 3.9864, dt: 1311.37ms, fracRes: 0.7107, norm(attn): 0.1533, norm(output): 0.9441, norm(x): 0.7994, norm(y): 0.9972, norm:0.6234, tok/sec: 99950.80, flops:104.91, batch-reuse:1
@ 6068 train 4.0001 , allloss: 4.0001, dt: 1298.37ms, fracRes: 0.7109, norm(attn): 0.1533, norm(output): 0.9440, norm(x): 0.7991, norm(y): 0.9973, norm:0.5960, tok/sec: 100951.26, flops:105.96, batch-reuse:1
@ 6069 train 4.0561 , allloss: 4.0562, dt: 1297.22ms, fracRes: 0.7113, norm(attn): 0.1523, norm(output): 0.9441, norm(x): 0.7986, norm(y): 0.9975, norm:0.5944, tok/sec: 101040.98, flops:106.06, batch-reuse:1
@ 6070 train 4.0261 , allloss: 4.0263, dt: 1308.03ms, fracRes: 0.7107, norm(attn): 0.1543, norm(output): 0.9441, norm(x): 0.7993, norm(y): 0.9975, norm:0.6677, tok/sec: 100205.81, flops:105.18, batch-reuse:1
@ 6071 train 3.9665 , allloss: 3.9665, dt: 1304.97ms, fracRes: 0.7105, norm(attn): 0.1533, norm(output): 0.9445, norm(x): 0.8000, norm(y): 0.9973, norm:0.5949, tok/sec: 100440.57, flops:105.43, batch-reuse:1
@ 6072 train 3.9864 , allloss: 3.9864, dt: 1304.43ms, fracRes: 0.7109, norm(attn): 0.1504, norm(output): 0.9446, norm(x): 0.7998, norm(y): 0.9972, norm:0.6225, tok/sec: 100482.06, flops:105.47, batch-reuse:1
@ 6073 train 4.0676 , allloss: 4.0736, dt: 1323.01ms, fracRes: 0.7110, norm(attn): 0.1533, norm(output): 0.9443, norm(x): 0.7989, norm(y): 0.9974, norm:0.5336, tok/sec: 99071.02, flops:103.99, batch-reuse:1
@ 6074 train 3.9887 , allloss: 3.9887, dt: 1333.20ms, fracRes: 0.7111, norm(attn): 0.1523, norm(output): 0.9442, norm(x): 0.7990, norm(y): 0.9975, norm:0.6040, tok/sec: 98313.52, flops:103.19, batch-reuse:1
@ 6075 train 4.0565 , allloss: 4.0566, dt: 1293.13ms, fracRes: 0.7114, norm(attn): 0.1533, norm(output): 0.9439, norm(x): 0.7983, norm(y): 0.9973, norm:0.5927, tok/sec: 101360.33, flops:106.39, batch-reuse:1
@ 6076 train 3.9804 , allloss: 3.9806, dt: 1308.15ms, fracRes: 0.7110, norm(attn): 0.1523, norm(output): 0.9441, norm(x): 0.7992, norm(y): 0.9973, norm:0.5560, tok/sec: 100196.68, flops:105.17, batch-reuse:1
@ 6077 train 3.9447 , allloss: 3.9447, dt: 1336.86ms, fracRes: 0.7110, norm(attn): 0.1523, norm(output): 0.9441, norm(x): 0.7991, norm(y): 0.9973, norm:0.5200, tok/sec: 98044.62, flops:102.91, batch-reuse:1
@ 6078 train 3.9530 , allloss: 3.9531, dt: 1304.79ms, fracRes: 0.7108, norm(attn): 0.1523, norm(output): 0.9442, norm(x): 0.7994, norm(y): 0.9973, norm:0.5996, tok/sec: 100454.40, flops:105.44, batch-reuse:1
@ 6079 train 3.9188 , allloss: 3.9189, dt: 1305.09ms, fracRes: 0.7110, norm(attn): 0.1523, norm(output): 0.9441, norm(x): 0.7989, norm(y): 0.9973, norm:0.5159, tok/sec: 100431.12, flops:105.42, batch-reuse:1
@ 6080 train 4.0030 , allloss: 4.0032, dt: 1310.91ms, fracRes: 0.7112, norm(attn): 0.1523, norm(output): 0.9440, norm(x): 0.7988, norm(y): 0.9973, norm:0.6586, tok/sec: 99985.54, flops:104.95, batch-reuse:1
@ 6081 train 3.9956 , allloss: 3.9956, dt: 1323.48ms, fracRes: 0.7111, norm(attn): 0.1523, norm(output): 0.9440, norm(x): 0.7991, norm(y): 0.9973, norm:0.6486, tok/sec: 99035.56, flops:103.95, batch-reuse:1
@ 6082 train 4.0813 , allloss: 4.0814, dt: 1334.56ms, fracRes: 0.7109, norm(attn): 0.1523, norm(output): 0.9440, norm(x): 0.7992, norm(y): 0.9976, norm:0.5429, tok/sec: 98213.44, flops:103.09, batch-reuse:1
@ 6083 train 3.9304 , allloss: 3.9304, dt: 1355.63ms, fracRes: 0.7108, norm(attn): 0.1533, norm(output): 0.9437, norm(x): 0.7986, norm(y): 0.9975, norm:0.6484, tok/sec: 96686.98, flops:101.49, batch-reuse:1
@ 6084 train 3.9562 , allloss: 3.9562, dt: 1334.31ms, fracRes: 0.7108, norm(attn): 0.1514, norm(output): 0.9444, norm(x): 0.7998, norm(y): 0.9974, norm:0.7759, tok/sec: 98232.04, flops:103.11, batch-reuse:1
@ 6085 train 4.0024 , allloss: 4.0026, dt: 1275.88ms, fracRes: 0.7108, norm(attn): 0.1514, norm(output): 0.9443, norm(x): 0.7996, norm(y): 0.9972, norm:0.7492, tok/sec: 102730.66, flops:107.83, batch-reuse:1
@ 6086 train 3.9565 , allloss: 3.9566, dt: 1279.03ms, fracRes: 0.7108, norm(attn): 0.1543, norm(output): 0.9441, norm(x): 0.7992, norm(y): 0.9973, norm:0.6388, tok/sec: 102477.65, flops:107.56, batch-reuse:1
@ 6087 train 4.0308 , allloss: 4.0309, dt: 1306.86ms, fracRes: 0.7108, norm(attn): 0.1514, norm(output): 0.9441, norm(x): 0.7994, norm(y): 0.9975, norm:0.5830, tok/sec: 100295.15, flops:105.27, batch-reuse:1
@ 6088 train 4.0372 , allloss: 4.0372, dt: 1334.50ms, fracRes: 0.7106, norm(attn): 0.1523, norm(output): 0.9440, norm(x): 0.7993, norm(y): 0.9976, norm:0.7026, tok/sec: 98218.35, flops:103.09, batch-reuse:1
@ 6089 train 4.0479 , allloss: 4.0484, dt: 1325.00ms, fracRes: 0.7106, norm(attn): 0.1523, norm(output): 0.9444, norm(x): 0.7997, norm(y): 0.9974, norm:0.5927, tok/sec: 98922.49, flops:103.83, batch-reuse:1
@ 6090 train 4.0574 , allloss: 4.0576, dt: 1292.27ms, fracRes: 0.7105, norm(attn): 0.1523, norm(output): 0.9444, norm(x): 0.8001, norm(y): 0.9972, norm:0.6570, tok/sec: 101427.91, flops:106.46, batch-reuse:1
@ 6091 train 4.0457 , allloss: 4.0458, dt: 1300.43ms, fracRes: 0.7107, norm(attn): 0.1504, norm(output): 0.9444, norm(x): 0.7997, norm(y): 0.9970, norm:0.5854, tok/sec: 100790.92, flops:105.79, batch-reuse:1
@ 6092 train 3.9639 , allloss: 3.9639, dt: 1287.34ms, fracRes: 0.7107, norm(attn): 0.1523, norm(output): 0.9443, norm(x): 0.7996, norm(y): 0.9971, norm:0.5630, tok/sec: 101816.25, flops:106.87, batch-reuse:1
@ 6093 train 3.9597 , allloss: 3.9598, dt: 1291.72ms, fracRes: 0.7108, norm(attn): 0.1523, norm(output): 0.9442, norm(x): 0.7993, norm(y): 0.9973, norm:0.6591, tok/sec: 101470.90, flops:106.51, batch-reuse:1
@ 6094 train 3.9106 , allloss: 3.9107, dt: 1313.09ms, fracRes: 0.7108, norm(attn): 0.1533, norm(output): 0.9438, norm(x): 0.7991, norm(y): 0.9975, norm:0.7121, tok/sec: 99819.52, flops:104.77, batch-reuse:1
@ 6095 train 3.9444 , allloss: 3.9445, dt: 1313.47ms, fracRes: 0.7110, norm(attn): 0.1543, norm(output): 0.9438, norm(x): 0.7990, norm(y): 0.9973, norm:0.5764, tok/sec: 99790.98, flops:104.74, batch-reuse:1
@ 6096 train 3.9604 , allloss: 3.9611, dt: 1302.74ms, fracRes: 0.7113, norm(attn): 0.1543, norm(output): 0.9441, norm(x): 0.7994, norm(y): 0.9971, norm:0.6872, tok/sec: 100612.93, flops:105.61, batch-reuse:1
@ 6097 train 3.9493 , allloss: 3.9494, dt: 1304.97ms, fracRes: 0.7109, norm(attn): 0.1523, norm(output): 0.9442, norm(x): 0.7997, norm(y): 0.9970, norm:0.7283, tok/sec: 100440.69, flops:105.43, batch-reuse:1
@ 6098 train 3.9279 , allloss: 3.9279, dt: 1293.47ms, fracRes: 0.7107, norm(attn): 0.1543, norm(output): 0.9441, norm(x): 0.8000, norm(y): 0.9969, norm:0.7029, tok/sec: 101333.80, flops:106.36, batch-reuse:1
@ 6099 train 3.8472 , allloss: 3.8473, dt: 1303.60ms, fracRes: 0.7111, norm(attn): 0.1543, norm(output): 0.9443, norm(x): 0.7994, norm(y): 0.9972, norm:0.6817, tok/sec: 100546.01, flops:105.54, batch-reuse:1
@ 6100 train 4.0586 , allloss: 4.0586, dt: 1320.34ms, fracRes: 0.7112, norm(attn): 0.1543, norm(output): 0.9436, norm(x): 0.7979, norm(y): 0.9974, norm:0.7118, tok/sec: 99271.21, flops:104.20, batch-reuse:1
@ 6101 train 3.8561 , allloss: 3.8561, dt: 1298.22ms, fracRes: 0.7105, norm(attn): 0.1543, norm(output): 0.9435, norm(x): 0.7985, norm(y): 0.9973, norm:0.7625, tok/sec: 100962.96, flops:105.97, batch-reuse:1
@ 6102 train 4.2886 , allloss: 4.2886, dt: 1297.53ms, fracRes: 0.7112, norm(attn): 0.1523, norm(output): 0.9438, norm(x): 0.7982, norm(y): 0.9976, norm:0.9814, tok/sec: 101016.38, flops:106.03, batch-reuse:1
@ 6103 train 3.8887 , allloss: 3.8888, dt: 1345.76ms, fracRes: 0.7111, norm(attn): 0.1514, norm(output): 0.9443, norm(x): 0.8002, norm(y): 0.9972, norm:1.0993, tok/sec: 97396.31, flops:102.23, batch-reuse:1
@ 6104 train 3.8901 , allloss: 3.8901, dt: 1300.00ms, fracRes: 0.7108, norm(attn): 0.1514, norm(output): 0.9444, norm(x): 0.8001, norm(y): 0.9970, norm:0.8154, tok/sec: 100824.84, flops:105.83, batch-reuse:1
@ 6105 train 3.9018 , allloss: 3.9018, dt: 1321.30ms, fracRes: 0.7101, norm(attn): 0.1553, norm(output): 0.9440, norm(x): 0.7997, norm(y): 0.9966, norm:0.7399, tok/sec: 99199.41, flops:104.12, batch-reuse:1
@ 6106 train 3.9385 , allloss: 3.9385, dt: 1306.97ms, fracRes: 0.7101, norm(attn): 0.1553, norm(output): 0.9440, norm(x): 0.7997, norm(y): 0.9966, norm:0.6807, tok/sec: 100286.97, flops:105.26, batch-reuse:1
@ 6107 train 4.0956 , allloss: 4.0956, dt: 1301.00ms, fracRes: 0.7104, norm(attn): 0.1533, norm(output): 0.9444, norm(x): 0.8002, norm(y): 0.9967, norm:0.7079, tok/sec: 100747.44, flops:105.75, batch-reuse:1
@ 6108 train 3.9993 , allloss: 3.9994, dt: 1316.65ms, fracRes: 0.7106, norm(attn): 0.1523, norm(output): 0.9445, norm(x): 0.8010, norm(y): 0.9969, norm:0.6736, tok/sec: 99549.31, flops:104.49, batch-reuse:1
@ 6109 train 3.9321 , allloss: 3.9322, dt: 1285.65ms, fracRes: 0.7108, norm(attn): 0.1543, norm(output): 0.9441, norm(x): 0.8004, norm(y): 0.9971, norm:0.6199, tok/sec: 101950.19, flops:107.01, batch-reuse:1
@ 6110 train 3.9598 , allloss: 3.9598, dt: 1307.99ms, fracRes: 0.7105, norm(attn): 0.1543, norm(output): 0.9441, norm(x): 0.8005, norm(y): 0.9969, norm:0.6698, tok/sec: 100208.78, flops:105.18, batch-reuse:1
@ 6111 train 3.8892 , allloss: 3.8892, dt: 1296.35ms, fracRes: 0.7106, norm(attn): 0.1543, norm(output): 0.9442, norm(x): 0.8000, norm(y): 0.9969, norm:0.5538, tok/sec: 101108.40, flops:106.13, batch-reuse:1
@ 6112 train 3.9306 , allloss: 3.9315, dt: 1290.47ms, fracRes: 0.7107, norm(attn): 0.1543, norm(output): 0.9440, norm(x): 0.7996, norm(y): 0.9969, norm:0.5639, tok/sec: 101569.11, flops:106.61, batch-reuse:1
@ 6113 train 3.8321 , allloss: 3.8321, dt: 1312.71ms, fracRes: 0.7106, norm(attn): 0.1553, norm(output): 0.9440, norm(x): 0.8000, norm(y): 0.9971, norm:0.5896, tok/sec: 99848.20, flops:104.80, batch-reuse:1
@ 6114 train 4.0464 , allloss: 4.0471, dt: 1309.58ms, fracRes: 0.7107, norm(attn): 0.1543, norm(output): 0.9441, norm(x): 0.7999, norm(y): 0.9971, norm:0.7205, tok/sec: 100087.08, flops:105.05, batch-reuse:1
@ 6115 train 3.9549 , allloss: 3.9549, dt: 1313.05ms, fracRes: 0.7109, norm(attn): 0.1523, norm(output): 0.9443, norm(x): 0.7999, norm(y): 0.9971, norm:0.6208, tok/sec: 99822.86, flops:104.78, batch-reuse:1
@ 6116 train 3.8597 , allloss: 3.8599, dt: 1340.85ms, fracRes: 0.7109, norm(attn): 0.1533, norm(output): 0.9442, norm(x): 0.7995, norm(y): 0.9969, norm:0.6639, tok/sec: 97752.98, flops:102.60, batch-reuse:1
@ 6117 train 3.9226 , allloss: 3.9227, dt: 1334.54ms, fracRes: 0.7112, norm(attn): 0.1553, norm(output): 0.9439, norm(x): 0.7985, norm(y): 0.9966, norm:0.5738, tok/sec: 98215.30, flops:103.09, batch-reuse:1
@ 6118 train 3.9637 , allloss: 3.9641, dt: 1307.29ms, fracRes: 0.7110, norm(attn): 0.1553, norm(output): 0.9442, norm(x): 0.7996, norm(y): 0.9964, norm:0.6458, tok/sec: 100262.02, flops:105.24, batch-reuse:1
@ 6119 train 3.9366 , allloss: 3.9371, dt: 1292.60ms, fracRes: 0.7110, norm(attn): 0.1543, norm(output): 0.9442, norm(x): 0.7998, norm(y): 0.9965, norm:0.5300, tok/sec: 101402.08, flops:106.43, batch-reuse:1
@ 6120 train 3.9921 , allloss: 4.0237, dt: 1281.18ms, fracRes: 0.7109, norm(attn): 0.1543, norm(output): 0.9443, norm(x): 0.8003, norm(y): 0.9968, norm:0.7494, tok/sec: 102305.90, flops:107.38, batch-reuse:1
@ 6121 train 3.8686 , allloss: 3.8825, dt: 1311.14ms, fracRes: 0.7110, norm(attn): 0.1553, norm(output): 0.9438, norm(x): 0.7994, norm(y): 0.9969, norm:0.6247, tok/sec: 99968.20, flops:104.93, batch-reuse:1
@ 6122 train 3.8308 , allloss: 3.8567, dt: 1307.45ms, fracRes: 0.7111, norm(attn): 0.1543, norm(output): 0.9438, norm(x): 0.7990, norm(y): 0.9969, norm:0.7120, tok/sec: 100249.88, flops:105.23, batch-reuse:1
@ 6123 train 3.8638 , allloss: 3.8644, dt: 1277.75ms, fracRes: 0.7111, norm(attn): 0.1533, norm(output): 0.9442, norm(x): 0.7996, norm(y): 0.9969, norm:0.5322, tok/sec: 102580.58, flops:107.67, batch-reuse:1
@ 6124 train 4.0323 , allloss: 4.0327, dt: 1298.06ms, fracRes: 0.7113, norm(attn): 0.1514, norm(output): 0.9447, norm(x): 0.7999, norm(y): 0.9970, norm:0.6487, tok/sec: 100975.62, flops:105.99, batch-reuse:1
@ 6125 train 3.9059 , allloss: 3.9139, dt: 1333.95ms, fracRes: 0.7113, norm(attn): 0.1533, norm(output): 0.9442, norm(x): 0.7994, norm(y): 0.9967, norm:0.6972, tok/sec: 98258.34, flops:103.14, batch-reuse:1
@ 6126 train 3.9100 , allloss: 3.9182, dt: 1285.13ms, fracRes: 0.7113, norm(attn): 0.1533, norm(output): 0.9442, norm(x): 0.7994, norm(y): 0.9967, norm:0.5593, tok/sec: 101990.91, flops:107.05, batch-reuse:1
@ 6127 train 3.9280 , allloss: 3.9297, dt: 1298.12ms, fracRes: 0.7111, norm(attn): 0.1533, norm(output): 0.9445, norm(x): 0.8003, norm(y): 0.9967, norm:0.6301, tok/sec: 100970.60, flops:105.98, batch-reuse:1
@ 6128 train 3.9328 , allloss: 3.9342, dt: 1315.97ms, fracRes: 0.7110, norm(attn): 0.1523, norm(output): 0.9443, norm(x): 0.7998, norm(y): 0.9968, norm:0.5441, tok/sec: 99600.75, flops:104.54, batch-reuse:1
@ 6129 train 3.8660 , allloss: 3.8668, dt: 1311.60ms, fracRes: 0.7111, norm(attn): 0.1543, norm(output): 0.9438, norm(x): 0.7990, norm(y): 0.9971, norm:0.5818, tok/sec: 99932.93, flops:104.89, batch-reuse:1
@ 6130 train 3.9502 , allloss: 3.9510, dt: 1326.28ms, fracRes: 0.7109, norm(attn): 0.1514, norm(output): 0.9444, norm(x): 0.8006, norm(y): 0.9970, norm:0.6056, tok/sec: 98826.84, flops:103.73, batch-reuse:1
@ 6131 train 3.8283 , allloss: 3.8823, dt: 1332.61ms, fracRes: 0.7110, norm(attn): 0.1533, norm(output): 0.9443, norm(x): 0.8000, norm(y): 0.9969, norm:0.9043, tok/sec: 98357.70, flops:103.24, batch-reuse:1
@ 6132 train 3.8454 , allloss: 3.8502, dt: 1295.62ms, fracRes: 0.7110, norm(attn): 0.1523, norm(output): 0.9441, norm(x): 0.7996, norm(y): 0.9968, norm:0.6257, tok/sec: 101165.24, flops:106.19, batch-reuse:1
@ 6133 train 3.8700 , allloss: 3.8704, dt: 1322.37ms, fracRes: 0.7108, norm(attn): 0.1533, norm(output): 0.9441, norm(x): 0.7995, norm(y): 0.9968, norm:0.5977, tok/sec: 99118.86, flops:104.04, batch-reuse:1
@ 6134 train 3.9755 , allloss: 3.9796, dt: 1309.18ms, fracRes: 0.7107, norm(attn): 0.1533, norm(output): 0.9444, norm(x): 0.8002, norm(y): 0.9968, norm:0.5995, tok/sec: 100117.50, flops:105.09, batch-reuse:1
@ 6135 train 3.9425 , allloss: 3.9427, dt: 1305.64ms, fracRes: 0.7109, norm(attn): 0.1514, norm(output): 0.9447, norm(x): 0.8011, norm(y): 0.9967, norm:0.6599, tok/sec: 100389.38, flops:105.37, batch-reuse:1
@ 6136 train 3.9337 , allloss: 3.9338, dt: 1327.58ms, fracRes: 0.7111, norm(attn): 0.1514, norm(output): 0.9444, norm(x): 0.8005, norm(y): 0.9966, norm:0.5795, tok/sec: 98729.65, flops:103.63, batch-reuse:1
@ 6137 train 4.0272 , allloss: 4.0274, dt: 1279.57ms, fracRes: 0.7111, norm(attn): 0.1533, norm(output): 0.9443, norm(x): 0.8003, norm(y): 0.9967, norm:0.6195, tok/sec: 102434.04, flops:107.52, batch-reuse:1
@ 6138 train 3.9352 , allloss: 3.9354, dt: 1295.02ms, fracRes: 0.7111, norm(attn): 0.1533, norm(output): 0.9443, norm(x): 0.8000, norm(y): 0.9969, norm:0.5647, tok/sec: 101212.37, flops:106.24, batch-reuse:1
@ 6139 train 4.1250 , allloss: 4.1259, dt: 1294.05ms, fracRes: 0.7112, norm(attn): 0.1533, norm(output): 0.9443, norm(x): 0.7999, norm(y): 0.9970, norm:0.6421, tok/sec: 101288.49, flops:106.32, batch-reuse:1
@ 6140 train 4.1090 , allloss: 4.1098, dt: 1287.44ms, fracRes: 0.7110, norm(attn): 0.1523, norm(output): 0.9443, norm(x): 0.7997, norm(y): 0.9969, norm:0.6200, tok/sec: 101808.40, flops:106.86, batch-reuse:1
@ 6141 train 4.1053 , allloss: 4.1057, dt: 1307.44ms, fracRes: 0.7111, norm(attn): 0.1523, norm(output): 0.9442, norm(x): 0.7999, norm(y): 0.9968, norm:0.6857, tok/sec: 100250.96, flops:105.23, batch-reuse:1
@ 6142 train 4.1877 , allloss: 4.1877, dt: 1313.87ms, fracRes: 0.7111, norm(attn): 0.1523, norm(output): 0.9449, norm(x): 0.8009, norm(y): 0.9969, norm:0.5726, tok/sec: 99760.24, flops:104.71, batch-reuse:1
@ 6143 train 4.0875 , allloss: 4.0879, dt: 1297.17ms, fracRes: 0.7109, norm(attn): 0.1514, norm(output): 0.9448, norm(x): 0.8013, norm(y): 0.9969, norm:0.6854, tok/sec: 101044.94, flops:106.06, batch-reuse:1
@ 6144 train 4.1547 , allloss: 4.1564, dt: 1296.10ms, fracRes: 0.7111, norm(attn): 0.1504, norm(output): 0.9441, norm(x): 0.8000, norm(y): 0.9969, norm:0.7151, tok/sec: 101127.62, flops:106.15, batch-reuse:1
@ 6145 train 4.0160 , allloss: 4.0223, dt: 1296.35ms, fracRes: 0.7110, norm(attn): 0.1504, norm(output): 0.9444, norm(x): 0.8001, norm(y): 0.9967, norm:0.5779, tok/sec: 101108.40, flops:106.13, batch-reuse:1
@ 6146 train 4.0683 , allloss: 4.0683, dt: 1300.51ms, fracRes: 0.7106, norm(attn): 0.1523, norm(output): 0.9446, norm(x): 0.8008, norm(y): 0.9966, norm:0.7912, tok/sec: 100785.17, flops:105.79, batch-reuse:1
@ 6147 train 4.3067 , allloss: 4.3076, dt: 1316.45ms, fracRes: 0.7110, norm(attn): 0.1514, norm(output): 0.9448, norm(x): 0.8002, norm(y): 0.9968, norm:1.0282, tok/sec: 99564.89, flops:104.51, batch-reuse:1
@ 6148 train 4.1091 , allloss: 4.1092, dt: 1290.58ms, fracRes: 0.7109, norm(attn): 0.1523, norm(output): 0.9443, norm(x): 0.8004, norm(y): 0.9968, norm:0.7332, tok/sec: 101560.72, flops:106.60, batch-reuse:1
@ 6149 train 4.0852 , allloss: 4.0853, dt: 1280.78ms, fracRes: 0.7111, norm(attn): 0.1523, norm(output): 0.9442, norm(x): 0.8003, norm(y): 0.9968, norm:0.5576, tok/sec: 102337.78, flops:107.42, batch-reuse:1
@ 6150 train 4.0847 , allloss: 4.0850, dt: 1300.83ms, fracRes: 0.7110, norm(attn): 0.1533, norm(output): 0.9443, norm(x): 0.8006, norm(y): 0.9968, norm:0.7755, tok/sec: 100760.44, flops:105.76, batch-reuse:1
@ 6151 train 3.9489 , allloss: 3.9489, dt: 1304.81ms, fracRes: 0.7110, norm(attn): 0.1543, norm(output): 0.9446, norm(x): 0.8003, norm(y): 0.9967, norm:0.8595, tok/sec: 100452.77, flops:105.44, batch-reuse:1
@ 6152 train 4.1088 , allloss: 4.1089, dt: 1307.34ms, fracRes: 0.7112, norm(attn): 0.1533, norm(output): 0.9442, norm(x): 0.7998, norm(y): 0.9966, norm:0.7121, tok/sec: 100258.80, flops:105.23, batch-reuse:1
@ 6153 train 4.0573 , allloss: 4.0585, dt: 1279.01ms, fracRes: 0.7112, norm(attn): 0.1514, norm(output): 0.9445, norm(x): 0.8002, norm(y): 0.9966, norm:0.6706, tok/sec: 102479.56, flops:107.57, batch-reuse:1
@ 6154 train 4.1526 , allloss: 4.1528, dt: 1286.21ms, fracRes: 0.7111, norm(attn): 0.1523, norm(output): 0.9444, norm(x): 0.8001, norm(y): 0.9968, norm:0.6379, tok/sec: 101905.52, flops:106.96, batch-reuse:1
@ 6155 train 4.1163 , allloss: 4.1165, dt: 1320.62ms, fracRes: 0.7107, norm(attn): 0.1504, norm(output): 0.9446, norm(x): 0.8008, norm(y): 0.9967, norm:0.7022, tok/sec: 99250.06, flops:104.18, batch-reuse:1
@ 6156 train 4.0053 , allloss: 4.0055, dt: 1310.68ms, fracRes: 0.7109, norm(attn): 0.1533, norm(output): 0.9444, norm(x): 0.8005, norm(y): 0.9964, norm:0.5267, tok/sec: 100003.19, flops:104.97, batch-reuse:1
@ 6157 train 4.0799 , allloss: 4.0800, dt: 1328.55ms, fracRes: 0.7111, norm(attn): 0.1523, norm(output): 0.9443, norm(x): 0.8005, norm(y): 0.9965, norm:0.6166, tok/sec: 98657.73, flops:103.55, batch-reuse:1
@ 6158 train 4.0620 , allloss: 4.0621, dt: 1333.28ms, fracRes: 0.7109, norm(attn): 0.1523, norm(output): 0.9441, norm(x): 0.8005, norm(y): 0.9965, norm:0.6197, tok/sec: 98307.80, flops:103.19, batch-reuse:1
@ 6159 train 4.0067 , allloss: 4.0070, dt: 1297.37ms, fracRes: 0.7108, norm(attn): 0.1533, norm(output): 0.9442, norm(x): 0.8007, norm(y): 0.9964, norm:0.6043, tok/sec: 101029.21, flops:106.04, batch-reuse:1
@ 6160 train 3.9997 , allloss: 3.9998, dt: 1302.90ms, fracRes: 0.7107, norm(attn): 0.1533, norm(output): 0.9445, norm(x): 0.8010, norm(y): 0.9962, norm:0.5645, tok/sec: 100600.06, flops:105.59, batch-reuse:1
@ 6161 train 4.0560 , allloss: 4.0560, dt: 1335.69ms, fracRes: 0.7109, norm(attn): 0.1514, norm(output): 0.9442, norm(x): 0.8001, norm(y): 0.9963, norm:0.6126, tok/sec: 98130.27, flops:103.00, batch-reuse:1
@ 6162 train 4.0258 , allloss: 4.0259, dt: 1328.00ms, fracRes: 0.7110, norm(attn): 0.1504, norm(output): 0.9441, norm(x): 0.7999, norm(y): 0.9966, norm:0.5004, tok/sec: 98698.77, flops:103.60, batch-reuse:1
@ 6163 train 4.1250 , allloss: 4.1251, dt: 1287.10ms, fracRes: 0.7109, norm(attn): 0.1533, norm(output): 0.9441, norm(x): 0.7996, norm(y): 0.9969, norm:0.6320, tok/sec: 101835.22, flops:106.89, batch-reuse:1
@ 6164 train 4.0883 , allloss: 4.0886, dt: 1301.61ms, fracRes: 0.7110, norm(attn): 0.1514, norm(output): 0.9447, norm(x): 0.8011, norm(y): 0.9967, norm:0.5757, tok/sec: 100700.11, flops:105.70, batch-reuse:1
@ 6165 train 4.0437 , allloss: 4.0441, dt: 1336.13ms, fracRes: 0.7109, norm(attn): 0.1533, norm(output): 0.9444, norm(x): 0.8012, norm(y): 0.9966, norm:0.6998, tok/sec: 98098.02, flops:102.97, batch-reuse:1
@ 6166 train 4.1991 , allloss: 4.1992, dt: 1273.17ms, fracRes: 0.7109, norm(attn): 0.1523, norm(output): 0.9447, norm(x): 0.8013, norm(y): 0.9964, norm:0.5694, tok/sec: 102949.58, flops:108.06, batch-reuse:1
@ 6167 train 4.0878 , allloss: 4.0889, dt: 1315.12ms, fracRes: 0.7108, norm(attn): 0.1533, norm(output): 0.9446, norm(x): 0.8015, norm(y): 0.9964, norm:0.6954, tok/sec: 99665.16, flops:104.61, batch-reuse:1
@ 6168 train 4.0498 , allloss: 4.0499, dt: 1289.45ms, fracRes: 0.7106, norm(attn): 0.1514, norm(output): 0.9443, norm(x): 0.8012, norm(y): 0.9967, norm:0.6039, tok/sec: 101649.87, flops:106.69, batch-reuse:1
@ 6169 train 4.0914 , allloss: 4.0916, dt: 1309.02ms, fracRes: 0.7107, norm(attn): 0.1523, norm(output): 0.9446, norm(x): 0.8011, norm(y): 0.9968, norm:0.8059, tok/sec: 100130.16, flops:105.10, batch-reuse:1
@ 6170 train 4.0542 , allloss: 4.0561, dt: 1301.01ms, fracRes: 0.7109, norm(attn): 0.1523, norm(output): 0.9442, norm(x): 0.7998, norm(y): 0.9968, norm:0.6123, tok/sec: 100745.96, flops:105.75, batch-reuse:1
@ 6171 train 4.0226 , allloss: 4.0228, dt: 1321.21ms, fracRes: 0.7111, norm(attn): 0.1523, norm(output): 0.9441, norm(x): 0.7994, norm(y): 0.9966, norm:0.5943, tok/sec: 99206.02, flops:104.13, batch-reuse:1
@ 6172 train 4.0488 , allloss: 4.0495, dt: 1305.11ms, fracRes: 0.7112, norm(attn): 0.1533, norm(output): 0.9440, norm(x): 0.7995, norm(y): 0.9966, norm:0.6354, tok/sec: 100429.56, flops:105.41, batch-reuse:1
@ 6173 train 4.0444 , allloss: 4.0445, dt: 1311.74ms, fracRes: 0.7110, norm(attn): 0.1523, norm(output): 0.9441, norm(x): 0.8004, norm(y): 0.9967, norm:0.6091, tok/sec: 99922.23, flops:104.88, batch-reuse:1
@ 6174 train 4.1178 , allloss: 4.1182, dt: 1308.70ms, fracRes: 0.7109, norm(attn): 0.1514, norm(output): 0.9443, norm(x): 0.8009, norm(y): 0.9967, norm:0.5578, tok/sec: 100154.31, flops:105.13, batch-reuse:1
@ 6175 train 4.0685 , allloss: 4.0686, dt: 1309.02ms, fracRes: 0.7109, norm(attn): 0.1504, norm(output): 0.9445, norm(x): 0.8008, norm(y): 0.9967, norm:0.6433, tok/sec: 100129.99, flops:105.10, batch-reuse:1
@ 6176 train 4.0134 , allloss: 4.0143, dt: 1333.38ms, fracRes: 0.7108, norm(attn): 0.1523, norm(output): 0.9441, norm(x): 0.8001, norm(y): 0.9966, norm:0.5683, tok/sec: 98300.91, flops:103.18, batch-reuse:1
@ 6177 train 4.0116 , allloss: 4.0118, dt: 1338.73ms, fracRes: 0.7111, norm(attn): 0.1523, norm(output): 0.9443, norm(x): 0.8004, norm(y): 0.9965, norm:0.5488, tok/sec: 97907.68, flops:102.77, batch-reuse:1
@ 6178 train 4.0212 , allloss: 4.0213, dt: 1313.99ms, fracRes: 0.7112, norm(attn): 0.1523, norm(output): 0.9444, norm(x): 0.8012, norm(y): 0.9966, norm:0.6478, tok/sec: 99751.35, flops:104.70, batch-reuse:1
@ 6179 train 4.0142 , allloss: 4.0142, dt: 1316.11ms, fracRes: 0.7114, norm(attn): 0.1523, norm(output): 0.9443, norm(x): 0.8009, norm(y): 0.9966, norm:0.6371, tok/sec: 99590.22, flops:104.53, batch-reuse:1
@ 6180 train 4.0646 , allloss: 4.0647, dt: 1336.90ms, fracRes: 0.7113, norm(attn): 0.1514, norm(output): 0.9447, norm(x): 0.8011, norm(y): 0.9964, norm:0.5453, tok/sec: 98041.98, flops:102.91, batch-reuse:1
@ 6181 train 4.2105 , allloss: 4.2105, dt: 1336.28ms, fracRes: 0.7112, norm(attn): 0.1523, norm(output): 0.9442, norm(x): 0.8003, norm(y): 0.9963, norm:0.6121, tok/sec: 98087.53, flops:102.96, batch-reuse:1
@ 6182 train 4.2427 , allloss: 4.2427, dt: 1318.53ms, fracRes: 0.7112, norm(attn): 0.1514, norm(output): 0.9444, norm(x): 0.8003, norm(y): 0.9962, norm:0.7063, tok/sec: 99407.72, flops:104.34, batch-reuse:1
@ 6183 train 4.0520 , allloss: 4.0521, dt: 1321.24ms, fracRes: 0.7110, norm(attn): 0.1523, norm(output): 0.9447, norm(x): 0.8011, norm(y): 0.9964, norm:0.7070, tok/sec: 99204.03, flops:104.13, batch-reuse:1
@ 6184 train 4.0431 , allloss: 4.0432, dt: 1275.20ms, fracRes: 0.7111, norm(attn): 0.1523, norm(output): 0.9444, norm(x): 0.8007, norm(y): 0.9966, norm:0.6090, tok/sec: 102785.76, flops:107.89, batch-reuse:1
@ 6185 train 4.1991 , allloss: 4.1994, dt: 1311.38ms, fracRes: 0.7114, norm(attn): 0.1523, norm(output): 0.9443, norm(x): 0.8003, norm(y): 0.9967, norm:0.7863, tok/sec: 99950.04, flops:104.91, batch-reuse:1
@ 6186 train 4.1958 , allloss: 4.1959, dt: 1299.58ms, fracRes: 0.7109, norm(attn): 0.1514, norm(output): 0.9448, norm(x): 0.8019, norm(y): 0.9964, norm:0.8215, tok/sec: 100857.45, flops:105.86, batch-reuse:1
@ 6187 train 4.0249 , allloss: 4.0249, dt: 1283.25ms, fracRes: 0.7107, norm(attn): 0.1523, norm(output): 0.9448, norm(x): 0.8026, norm(y): 0.9963, norm:0.5863, tok/sec: 102140.39, flops:107.21, batch-reuse:1
@ 6188 train 4.1251 , allloss: 4.1251, dt: 1300.14ms, fracRes: 0.7110, norm(attn): 0.1533, norm(output): 0.9445, norm(x): 0.8012, norm(y): 0.9963, norm:0.7002, tok/sec: 100813.47, flops:105.82, batch-reuse:1
@ 6189 train 3.9336 , allloss: 3.9337, dt: 1295.74ms, fracRes: 0.7108, norm(attn): 0.1543, norm(output): 0.9444, norm(x): 0.8010, norm(y): 0.9961, norm:0.6021, tok/sec: 101155.81, flops:106.18, batch-reuse:1
@ 6190 train 4.3335 , allloss: 4.3336, dt: 1297.75ms, fracRes: 0.7115, norm(attn): 0.1504, norm(output): 0.9449, norm(x): 0.8000, norm(y): 0.9967, norm:0.8930, tok/sec: 100999.72, flops:106.01, batch-reuse:1
@ 6191 train 4.1085 , allloss: 4.1086, dt: 1324.12ms, fracRes: 0.7107, norm(attn): 0.1523, norm(output): 0.9442, norm(x): 0.8006, norm(y): 0.9966, norm:1.0903, tok/sec: 98988.38, flops:103.90, batch-reuse:1
@ 6192 train 4.0532 , allloss: 4.0533, dt: 1321.73ms, fracRes: 0.7110, norm(attn): 0.1533, norm(output): 0.9442, norm(x): 0.8008, norm(y): 0.9964, norm:0.7184, tok/sec: 99166.72, flops:104.09, batch-reuse:1
@ 6193 train 4.0825 , allloss: 4.0825, dt: 1330.71ms, fracRes: 0.7111, norm(attn): 0.1514, norm(output): 0.9447, norm(x): 0.8015, norm(y): 0.9961, norm:0.8184, tok/sec: 98497.96, flops:103.39, batch-reuse:1
@ 6194 train 4.0955 , allloss: 4.0956, dt: 1339.89ms, fracRes: 0.7111, norm(attn): 0.1504, norm(output): 0.9445, norm(x): 0.8011, norm(y): 0.9960, norm:0.6999, tok/sec: 97823.27, flops:102.68, batch-reuse:1
@ 6195 train 4.1519 , allloss: 4.1519, dt: 1325.97ms, fracRes: 0.7111, norm(attn): 0.1523, norm(output): 0.9444, norm(x): 0.8006, norm(y): 0.9963, norm:0.6712, tok/sec: 98849.96, flops:103.76, batch-reuse:1
@ 6196 train 4.0787 , allloss: 4.0788, dt: 1294.80ms, fracRes: 0.7111, norm(attn): 0.1504, norm(output): 0.9444, norm(x): 0.8012, norm(y): 0.9966, norm:0.6487, tok/sec: 101229.46, flops:106.25, batch-reuse:1
@ 6197 train 3.9982 , allloss: 3.9983, dt: 1316.99ms, fracRes: 0.7110, norm(attn): 0.1523, norm(output): 0.9441, norm(x): 0.8009, norm(y): 0.9966, norm:0.5845, tok/sec: 99523.81, flops:104.46, batch-reuse:1
@ 6198 train 4.0902 , allloss: 4.0902, dt: 1314.58ms, fracRes: 0.7107, norm(attn): 0.1504, norm(output): 0.9446, norm(x): 0.8025, norm(y): 0.9964, norm:0.5358, tok/sec: 99706.30, flops:104.65, batch-reuse:1
@ 6199 train 4.0727 , allloss: 4.0727, dt: 1296.71ms, fracRes: 0.7109, norm(attn): 0.1514, norm(output): 0.9443, norm(x): 0.8011, norm(y): 0.9962, norm:0.5712, tok/sec: 101080.15, flops:106.10, batch-reuse:1
@ 6200 train 4.0870 , allloss: 4.0871, dt: 1306.95ms, fracRes: 0.7111, norm(attn): 0.1504, norm(output): 0.9444, norm(x): 0.8011, norm(y): 0.9960, norm:0.5502, tok/sec: 100288.40, flops:105.27, batch-reuse:1
@ 6201 train 4.0276 , allloss: 4.0278, dt: 1328.34ms, fracRes: 0.7113, norm(attn): 0.1504, norm(output): 0.9445, norm(x): 0.8007, norm(y): 0.9962, norm:0.5561, tok/sec: 98673.21, flops:103.57, batch-reuse:1
@ 6202 train 4.0207 , allloss: 4.0209, dt: 1316.53ms, fracRes: 0.7111, norm(attn): 0.1523, norm(output): 0.9445, norm(x): 0.8011, norm(y): 0.9964, norm:0.5647, tok/sec: 99558.92, flops:104.50, batch-reuse:1
@ 6203 train 4.0687 , allloss: 4.0687, dt: 1317.88ms, fracRes: 0.7109, norm(attn): 0.1533, norm(output): 0.9447, norm(x): 0.8021, norm(y): 0.9964, norm:0.5818, tok/sec: 99456.93, flops:104.39, batch-reuse:1
@ 6204 train 4.1582 , allloss: 4.1587, dt: 1337.11ms, fracRes: 0.7113, norm(attn): 0.1523, norm(output): 0.9443, norm(x): 0.8011, norm(y): 0.9965, norm:0.7124, tok/sec: 98026.18, flops:102.89, batch-reuse:1
@ 6205 train 4.0831 , allloss: 4.0831, dt: 1337.04ms, fracRes: 0.7110, norm(attn): 0.1504, norm(output): 0.9450, norm(x): 0.8021, norm(y): 0.9962, norm:0.6853, tok/sec: 98031.16, flops:102.90, batch-reuse:1
@ 6206 train 4.0079 , allloss: 4.0081, dt: 1315.29ms, fracRes: 0.7109, norm(attn): 0.1523, norm(output): 0.9445, norm(x): 0.8014, norm(y): 0.9959, norm:0.6285, tok/sec: 99652.57, flops:104.60, batch-reuse:1
@ 6207 train 4.0439 , allloss: 4.0440, dt: 1310.32ms, fracRes: 0.7109, norm(attn): 0.1533, norm(output): 0.9441, norm(x): 0.8004, norm(y): 0.9959, norm:0.6568, tok/sec: 100030.30, flops:104.99, batch-reuse:1
@ 6208 train 4.1133 , allloss: 4.1134, dt: 1298.21ms, fracRes: 0.7108, norm(attn): 0.1523, norm(output): 0.9441, norm(x): 0.8005, norm(y): 0.9960, norm:0.6694, tok/sec: 100963.73, flops:105.97, batch-reuse:1
@ 6209 train 4.0074 , allloss: 4.0075, dt: 1315.71ms, fracRes: 0.7108, norm(attn): 0.1533, norm(output): 0.9445, norm(x): 0.8013, norm(y): 0.9963, norm:0.5957, tok/sec: 99620.44, flops:104.56, batch-reuse:1
@ 6210 train 4.0395 , allloss: 4.0396, dt: 1322.31ms, fracRes: 0.7109, norm(attn): 0.1504, norm(output): 0.9447, norm(x): 0.8018, norm(y): 0.9962, norm:0.6141, tok/sec: 99123.45, flops:104.04, batch-reuse:1
@ 6211 train 4.0418 , allloss: 4.0420, dt: 1324.73ms, fracRes: 0.7110, norm(attn): 0.1504, norm(output): 0.9444, norm(x): 0.8015, norm(y): 0.9962, norm:0.7301, tok/sec: 98942.27, flops:103.85, batch-reuse:1
@ 6212 train 4.0563 , allloss: 4.0564, dt: 1296.11ms, fracRes: 0.7110, norm(attn): 0.1514, norm(output): 0.9446, norm(x): 0.8015, norm(y): 0.9961, norm:0.5136, tok/sec: 101127.21, flops:106.15, batch-reuse:1
@ 6213 train 4.0545 , allloss: 4.0546, dt: 1291.59ms, fracRes: 0.7113, norm(attn): 0.1504, norm(output): 0.9446, norm(x): 0.8014, norm(y): 0.9961, norm:0.6273, tok/sec: 101481.01, flops:106.52, batch-reuse:1
@ 6214 train 3.9674 , allloss: 3.9674, dt: 1288.96ms, fracRes: 0.7113, norm(attn): 0.1533, norm(output): 0.9439, norm(x): 0.8000, norm(y): 0.9964, norm:0.5384, tok/sec: 101688.02, flops:106.73, batch-reuse:1
@ 6215 train 4.0682 , allloss: 4.0683, dt: 1318.22ms, fracRes: 0.7112, norm(attn): 0.1514, norm(output): 0.9444, norm(x): 0.8009, norm(y): 0.9963, norm:0.5743, tok/sec: 99430.77, flops:104.37, batch-reuse:1
@ 6216 train 4.0542 , allloss: 4.0542, dt: 1316.68ms, fracRes: 0.7112, norm(attn): 0.1514, norm(output): 0.9446, norm(x): 0.8011, norm(y): 0.9962, norm:0.5329, tok/sec: 99547.13, flops:104.49, batch-reuse:1
@ 6217 train 3.9862 , allloss: 3.9863, dt: 1286.91ms, fracRes: 0.7116, norm(attn): 0.1514, norm(output): 0.9444, norm(x): 0.8003, norm(y): 0.9964, norm:0.6599, tok/sec: 101849.81, flops:106.90, batch-reuse:1
@ 6218 train 4.0216 , allloss: 4.0218, dt: 1308.63ms, fracRes: 0.7109, norm(attn): 0.1514, norm(output): 0.9443, norm(x): 0.8010, norm(y): 0.9961, norm:0.5902, tok/sec: 100159.51, flops:105.13, batch-reuse:1
@ 6219 train 4.0665 , allloss: 4.0666, dt: 1342.76ms, fracRes: 0.7108, norm(attn): 0.1494, norm(output): 0.9442, norm(x): 0.8010, norm(y): 0.9961, norm:0.6819, tok/sec: 97613.76, flops:102.46, batch-reuse:1
@ 6220 train 4.1042 , allloss: 4.1043, dt: 1350.13ms, fracRes: 0.7109, norm(attn): 0.1504, norm(output): 0.9444, norm(x): 0.8011, norm(y): 0.9964, norm:0.7097, tok/sec: 97080.78, flops:101.90, batch-reuse:1
@ 6221 train 3.9794 , allloss: 3.9794, dt: 1342.91ms, fracRes: 0.7107, norm(attn): 0.1504, norm(output): 0.9441, norm(x): 0.8014, norm(y): 0.9965, norm:0.5817, tok/sec: 97602.86, flops:102.45, batch-reuse:1
@ 6222 train 4.0534 , allloss: 4.0535, dt: 1337.92ms, fracRes: 0.7107, norm(attn): 0.1475, norm(output): 0.9444, norm(x): 0.8016, norm(y): 0.9965, norm:0.5387, tok/sec: 97967.19, flops:102.83, batch-reuse:1
@ 6223 train 4.1336 , allloss: 4.1337, dt: 1341.96ms, fracRes: 0.7108, norm(attn): 0.1504, norm(output): 0.9442, norm(x): 0.8009, norm(y): 0.9964, norm:0.6491, tok/sec: 97672.38, flops:102.52, batch-reuse:1
@ 6224 train 4.0515 , allloss: 4.0515, dt: 1266.49ms, fracRes: 0.7110, norm(attn): 0.1504, norm(output): 0.9449, norm(x): 0.8023, norm(y): 0.9962, norm:0.5708, tok/sec: 103492.21, flops:108.63, batch-reuse:1
@ 6225 train 4.0331 , allloss: 4.0331, dt: 1290.77ms, fracRes: 0.7109, norm(attn): 0.1504, norm(output): 0.9447, norm(x): 0.8021, norm(y): 0.9961, norm:0.6183, tok/sec: 101545.36, flops:106.59, batch-reuse:1
@ 6226 train 4.0627 , allloss: 4.0629, dt: 1287.41ms, fracRes: 0.7109, norm(attn): 0.1504, norm(output): 0.9444, norm(x): 0.8016, norm(y): 0.9962, norm:0.5299, tok/sec: 101810.55, flops:106.86, batch-reuse:1
@ 6227 train 4.1050 , allloss: 4.1051, dt: 1312.53ms, fracRes: 0.7109, norm(attn): 0.1514, norm(output): 0.9444, norm(x): 0.8014, norm(y): 0.9964, norm:0.6876, tok/sec: 99862.42, flops:104.82, batch-reuse:1
@ 6228 train 3.9623 , allloss: 3.9623, dt: 1334.05ms, fracRes: 0.7109, norm(attn): 0.1514, norm(output): 0.9448, norm(x): 0.8024, norm(y): 0.9964, norm:0.5563, tok/sec: 98251.07, flops:103.13, batch-reuse:1
@ 6229 train 3.9190 , allloss: 3.9190, dt: 1333.29ms, fracRes: 0.7108, norm(attn): 0.1504, norm(output): 0.9444, norm(x): 0.8020, norm(y): 0.9964, norm:0.6100, tok/sec: 98306.84, flops:103.19, batch-reuse:1
@ 6230 train 4.0377 , allloss: 4.0377, dt: 1334.19ms, fracRes: 0.7105, norm(attn): 0.1504, norm(output): 0.9444, norm(x): 0.8021, norm(y): 0.9960, norm:0.5499, tok/sec: 98241.12, flops:103.12, batch-reuse:1
@ 6231 train 3.9767 , allloss: 3.9767, dt: 1333.95ms, fracRes: 0.7103, norm(attn): 0.1514, norm(output): 0.9446, norm(x): 0.8024, norm(y): 0.9959, norm:0.6549, tok/sec: 98258.60, flops:103.14, batch-reuse:1
@ 6232 train 3.9956 , allloss: 3.9956, dt: 1336.65ms, fracRes: 0.7105, norm(attn): 0.1504, norm(output): 0.9445, norm(x): 0.8023, norm(y): 0.9960, norm:0.5724, tok/sec: 98059.73, flops:102.93, batch-reuse:1
@ 6233 train 4.0251 , allloss: 4.0252, dt: 1332.94ms, fracRes: 0.7108, norm(attn): 0.1484, norm(output): 0.9444, norm(x): 0.8025, norm(y): 0.9961, norm:0.6104, tok/sec: 98333.12, flops:103.21, batch-reuse:1
@ 6234 train 3.9928 , allloss: 3.9928, dt: 1312.21ms, fracRes: 0.7107, norm(attn): 0.1504, norm(output): 0.9444, norm(x): 0.8027, norm(y): 0.9962, norm:0.5526, tok/sec: 99886.08, flops:104.84, batch-reuse:1
@ 6235 train 4.0692 , allloss: 4.0693, dt: 1304.53ms, fracRes: 0.7106, norm(attn): 0.1504, norm(output): 0.9446, norm(x): 0.8025, norm(y): 0.9961, norm:0.7876, tok/sec: 100474.56, flops:105.46, batch-reuse:1
@ 6236 train 4.0605 , allloss: 4.0608, dt: 1315.25ms, fracRes: 0.7106, norm(attn): 0.1504, norm(output): 0.9447, norm(x): 0.8028, norm(y): 0.9959, norm:0.8109, tok/sec: 99655.30, flops:104.60, batch-reuse:1
@ 6237 train 4.0992 , allloss: 4.0992, dt: 1317.21ms, fracRes: 0.7110, norm(attn): 0.1494, norm(output): 0.9451, norm(x): 0.8029, norm(y): 0.9959, norm:1.0639, tok/sec: 99507.53, flops:104.45, batch-reuse:1
@ 6238 train 3.9864 , allloss: 3.9865, dt: 1289.89ms, fracRes: 0.7110, norm(attn): 0.1504, norm(output): 0.9448, norm(x): 0.8031, norm(y): 0.9958, norm:1.1333, tok/sec: 101615.22, flops:106.66, batch-reuse:1
@ 6239 train 4.0653 , allloss: 4.0669, dt: 1310.01ms, fracRes: 0.7113, norm(attn): 0.1504, norm(output): 0.9441, norm(x): 0.8009, norm(y): 0.9961, norm:0.8620, tok/sec: 100054.11, flops:105.02, batch-reuse:1
@ 6240 train 4.0430 , allloss: 4.0434, dt: 1299.61ms, fracRes: 0.7111, norm(attn): 0.1523, norm(output): 0.9442, norm(x): 0.8008, norm(y): 0.9960, norm:0.9498, tok/sec: 100854.75, flops:105.86, batch-reuse:1
@ 6241 train 3.9361 , allloss: 3.9362, dt: 1286.39ms, fracRes: 0.7112, norm(attn): 0.1514, norm(output): 0.9446, norm(x): 0.8013, norm(y): 0.9960, norm:0.7397, tok/sec: 101891.39, flops:106.95, batch-reuse:1
@ 6242 train 4.0390 , allloss: 4.0391, dt: 1308.65ms, fracRes: 0.7112, norm(attn): 0.1514, norm(output): 0.9447, norm(x): 0.8015, norm(y): 0.9959, norm:0.6889, tok/sec: 100157.98, flops:105.13, batch-reuse:1
@ 6243 train 4.1239 , allloss: 4.1246, dt: 1343.00ms, fracRes: 0.7111, norm(attn): 0.1504, norm(output): 0.9449, norm(x): 0.8023, norm(y): 0.9959, norm:0.7108, tok/sec: 97596.59, flops:102.44, batch-reuse:1
@ 6244 train 3.9277 , allloss: 3.9277, dt: 1298.41ms, fracRes: 0.7107, norm(attn): 0.1504, norm(output): 0.9449, norm(x): 0.8031, norm(y): 0.9958, norm:0.6116, tok/sec: 100947.75, flops:105.96, batch-reuse:1
@ 6245 train 4.0703 , allloss: 4.0704, dt: 1311.19ms, fracRes: 0.7108, norm(attn): 0.1484, norm(output): 0.9451, norm(x): 0.8028, norm(y): 0.9959, norm:0.5904, tok/sec: 99964.05, flops:104.93, batch-reuse:1
@ 6246 train 4.1331 , allloss: 4.1331, dt: 1279.29ms, fracRes: 0.7109, norm(attn): 0.1504, norm(output): 0.9447, norm(x): 0.8021, norm(y): 0.9959, norm:0.5918, tok/sec: 102457.16, flops:107.54, batch-reuse:1
@ 6247 train 3.8463 , allloss: 3.8464, dt: 1310.16ms, fracRes: 0.7109, norm(attn): 0.1514, norm(output): 0.9440, norm(x): 0.8012, norm(y): 0.9960, norm:0.6190, tok/sec: 100042.53, flops:105.01, batch-reuse:1
@ 6248 train 3.9788 , allloss: 3.9790, dt: 1341.64ms, fracRes: 0.7110, norm(attn): 0.1504, norm(output): 0.9444, norm(x): 0.8017, norm(y): 0.9960, norm:0.5692, tok/sec: 97695.48, flops:102.54, batch-reuse:1
@ 6249 train 3.9827 , allloss: 3.9827, dt: 1338.22ms, fracRes: 0.7110, norm(attn): 0.1504, norm(output): 0.9448, norm(x): 0.8026, norm(y): 0.9960, norm:0.6187, tok/sec: 97944.69, flops:102.81, batch-reuse:1
@ 6250 train 3.9604 , allloss: 3.9605, dt: 1306.99ms, fracRes: 0.7112, norm(attn): 0.1514, norm(output): 0.9446, norm(x): 0.8017, norm(y): 0.9960, norm:0.6153, tok/sec: 100285.58, flops:105.26, batch-reuse:1
@ 6251 train 4.0188 , allloss: 4.0188, dt: 1302.66ms, fracRes: 0.7111, norm(attn): 0.1504, norm(output): 0.9449, norm(x): 0.8028, norm(y): 0.9959, norm:0.5485, tok/sec: 100618.37, flops:105.61, batch-reuse:1
@ 6252 train 4.0393 , allloss: 4.0394, dt: 1322.01ms, fracRes: 0.7111, norm(attn): 0.1504, norm(output): 0.9447, norm(x): 0.8022, norm(y): 0.9959, norm:0.5824, tok/sec: 99145.64, flops:104.07, batch-reuse:1
@ 6253 train 3.9683 , allloss: 3.9684, dt: 1350.35ms, fracRes: 0.7110, norm(attn): 0.1514, norm(output): 0.9450, norm(x): 0.8027, norm(y): 0.9959, norm:0.5024, tok/sec: 97065.01, flops:101.88, batch-reuse:1
@ 6254 train 4.0775 , allloss: 4.0775, dt: 1330.68ms, fracRes: 0.7111, norm(attn): 0.1504, norm(output): 0.9449, norm(x): 0.8026, norm(y): 0.9960, norm:0.5698, tok/sec: 98500.18, flops:103.39, batch-reuse:1
@ 6255 train 4.1704 , allloss: 4.1704, dt: 1285.58ms, fracRes: 0.7116, norm(attn): 0.1504, norm(output): 0.9445, norm(x): 0.8015, norm(y): 0.9961, norm:0.5515, tok/sec: 101955.62, flops:107.02, batch-reuse:1
@ 6256 train 3.9899 , allloss: 3.9899, dt: 1298.78ms, fracRes: 0.7113, norm(attn): 0.1484, norm(output): 0.9449, norm(x): 0.8028, norm(y): 0.9959, norm:0.5589, tok/sec: 100919.66, flops:105.93, batch-reuse:1
@ 6257 train 3.9518 , allloss: 3.9519, dt: 1294.37ms, fracRes: 0.7110, norm(attn): 0.1504, norm(output): 0.9446, norm(x): 0.8029, norm(y): 0.9957, norm:0.5537, tok/sec: 101262.85, flops:106.29, batch-reuse:1
@ 6258 train 3.9363 , allloss: 3.9364, dt: 1306.29ms, fracRes: 0.7107, norm(attn): 0.1523, norm(output): 0.9444, norm(x): 0.8026, norm(y): 0.9958, norm:0.5176, tok/sec: 100338.97, flops:105.32, batch-reuse:1
@ 6259 train 4.0553 , allloss: 4.0553, dt: 1299.51ms, fracRes: 0.7110, norm(attn): 0.1504, norm(output): 0.9446, norm(x): 0.8026, norm(y): 0.9958, norm:0.5348, tok/sec: 100862.91, flops:105.87, batch-reuse:1
@ 6260 train 4.0270 , allloss: 4.0270, dt: 1313.41ms, fracRes: 0.7114, norm(attn): 0.1494, norm(output): 0.9450, norm(x): 0.8025, norm(y): 0.9958, norm:0.5408, tok/sec: 99795.02, flops:104.75, batch-reuse:1
@ 6261 train 4.0620 , allloss: 4.0620, dt: 1304.40ms, fracRes: 0.7112, norm(attn): 0.1475, norm(output): 0.9452, norm(x): 0.8034, norm(y): 0.9956, norm:0.5864, tok/sec: 100484.66, flops:105.47, batch-reuse:1
@ 6262 train 3.9279 , allloss: 3.9281, dt: 1299.14ms, fracRes: 0.7111, norm(attn): 0.1504, norm(output): 0.9447, norm(x): 0.8026, norm(y): 0.9957, norm:0.5209, tok/sec: 100890.99, flops:105.90, batch-reuse:1
@ 6263 train 3.9455 , allloss: 3.9456, dt: 1344.04ms, fracRes: 0.7111, norm(attn): 0.1514, norm(output): 0.9447, norm(x): 0.8026, norm(y): 0.9960, norm:0.5811, tok/sec: 97520.93, flops:102.36, batch-reuse:1
@ 6264 train 3.9268 , allloss: 3.9268, dt: 1344.67ms, fracRes: 0.7111, norm(attn): 0.1514, norm(output): 0.9447, norm(x): 0.8026, norm(y): 0.9960, norm:0.5626, tok/sec: 97475.51, flops:102.31, batch-reuse:1
@ 6265 train 3.9112 , allloss: 3.9113, dt: 1353.98ms, fracRes: 0.7111, norm(attn): 0.1514, norm(output): 0.9446, norm(x): 0.8026, norm(y): 0.9959, norm:0.5962, tok/sec: 96804.83, flops:101.61, batch-reuse:1
@ 6266 train 3.9180 , allloss: 3.9180, dt: 1331.21ms, fracRes: 0.7109, norm(attn): 0.1504, norm(output): 0.9446, norm(x): 0.8030, norm(y): 0.9958, norm:0.5746, tok/sec: 98460.79, flops:103.35, batch-reuse:1
@ 6267 train 3.9561 , allloss: 3.9562, dt: 1298.87ms, fracRes: 0.7108, norm(attn): 0.1514, norm(output): 0.9445, norm(x): 0.8024, norm(y): 0.9958, norm:0.6377, tok/sec: 100912.58, flops:105.92, batch-reuse:1
@ 6268 train 3.9989 , allloss: 3.9989, dt: 1310.45ms, fracRes: 0.7108, norm(attn): 0.1514, norm(output): 0.9449, norm(x): 0.8029, norm(y): 0.9959, norm:0.5319, tok/sec: 100020.47, flops:104.98, batch-reuse:1
@ 6269 train 3.9669 , allloss: 3.9669, dt: 1290.11ms, fracRes: 0.7108, norm(attn): 0.1504, norm(output): 0.9449, norm(x): 0.8029, norm(y): 0.9961, norm:0.6172, tok/sec: 101597.81, flops:106.64, batch-reuse:1
@ 6270 train 3.9119 , allloss: 3.9119, dt: 1317.57ms, fracRes: 0.7110, norm(attn): 0.1523, norm(output): 0.9449, norm(x): 0.8030, norm(y): 0.9960, norm:0.6684, tok/sec: 99479.91, flops:104.42, batch-reuse:1
@ 6271 train 3.9003 , allloss: 3.9003, dt: 1337.87ms, fracRes: 0.7110, norm(attn): 0.1504, norm(output): 0.9447, norm(x): 0.8030, norm(y): 0.9959, norm:0.5929, tok/sec: 97970.80, flops:102.83, batch-reuse:1
@ 6272 train 3.9914 , allloss: 3.9915, dt: 1333.84ms, fracRes: 0.7110, norm(attn): 0.1504, norm(output): 0.9445, norm(x): 0.8025, norm(y): 0.9959, norm:0.6093, tok/sec: 98267.02, flops:103.14, batch-reuse:1
@ 6273 train 3.9845 , allloss: 3.9846, dt: 1293.62ms, fracRes: 0.7109, norm(attn): 0.1504, norm(output): 0.9444, norm(x): 0.8025, norm(y): 0.9959, norm:0.6756, tok/sec: 101322.26, flops:106.35, batch-reuse:1
@ 6274 train 3.9918 , allloss: 3.9918, dt: 1303.62ms, fracRes: 0.7111, norm(attn): 0.1514, norm(output): 0.9447, norm(x): 0.8027, norm(y): 0.9959, norm:0.5585, tok/sec: 100544.65, flops:105.53, batch-reuse:1
@ 6275 train 3.9517 , allloss: 3.9517, dt: 1311.74ms, fracRes: 0.7113, norm(attn): 0.1494, norm(output): 0.9448, norm(x): 0.8030, norm(y): 0.9959, norm:0.6091, tok/sec: 99922.05, flops:104.88, batch-reuse:1
@ 6276 train 3.9903 , allloss: 3.9903, dt: 1289.27ms, fracRes: 0.7112, norm(attn): 0.1484, norm(output): 0.9448, norm(x): 0.8028, norm(y): 0.9960, norm:0.5652, tok/sec: 101664.00, flops:106.71, batch-reuse:1
@ 6277 train 3.9715 , allloss: 3.9716, dt: 1284.86ms, fracRes: 0.7109, norm(attn): 0.1504, norm(output): 0.9447, norm(x): 0.8032, norm(y): 0.9960, norm:0.5674, tok/sec: 102012.45, flops:107.08, batch-reuse:1
@ 6278 train 3.9124 , allloss: 3.9124, dt: 1306.24ms, fracRes: 0.7109, norm(attn): 0.1514, norm(output): 0.9447, norm(x): 0.8031, norm(y): 0.9958, norm:0.5793, tok/sec: 100343.18, flops:105.32, batch-reuse:1
@ 6279 train 3.7426 , allloss: 3.7427, dt: 1300.66ms, fracRes: 0.7108, norm(attn): 0.1514, norm(output): 0.9447, norm(x): 0.8034, norm(y): 0.9955, norm:0.5451, tok/sec: 100773.59, flops:105.78, batch-reuse:1
@ 6280 train 3.8720 , allloss: 3.8721, dt: 1340.33ms, fracRes: 0.7111, norm(attn): 0.1504, norm(output): 0.9445, norm(x): 0.8024, norm(y): 0.9956, norm:0.5448, tok/sec: 97790.62, flops:102.64, batch-reuse:1
@ 6281 train 3.9125 , allloss: 3.9135, dt: 1321.78ms, fracRes: 0.7110, norm(attn): 0.1504, norm(output): 0.9447, norm(x): 0.8029, norm(y): 0.9958, norm:0.5665, tok/sec: 99163.23, flops:104.08, batch-reuse:1
@ 6282 train 3.8471 , allloss: 3.8471, dt: 1306.13ms, fracRes: 0.7110, norm(attn): 0.1504, norm(output): 0.9444, norm(x): 0.8028, norm(y): 0.9958, norm:0.5552, tok/sec: 100351.39, flops:105.33, batch-reuse:1
@ 6283 train 3.8583 , allloss: 3.8584, dt: 1311.63ms, fracRes: 0.7111, norm(attn): 0.1504, norm(output): 0.9446, norm(x): 0.8034, norm(y): 0.9956, norm:0.5186, tok/sec: 99930.26, flops:104.89, batch-reuse:1
@ 6284 train 3.9849 , allloss: 3.9850, dt: 1304.85ms, fracRes: 0.7110, norm(attn): 0.1504, norm(output): 0.9449, norm(x): 0.8033, norm(y): 0.9955, norm:0.5340, tok/sec: 100450.13, flops:105.44, batch-reuse:1
@ 6285 train 3.9041 , allloss: 3.9041, dt: 1314.94ms, fracRes: 0.7107, norm(attn): 0.1504, norm(output): 0.9448, norm(x): 0.8034, norm(y): 0.9954, norm:0.5474, tok/sec: 99678.75, flops:104.63, batch-reuse:1
@ 6286 train 3.8138 , allloss: 3.8138, dt: 1309.72ms, fracRes: 0.7107, norm(attn): 0.1504, norm(output): 0.9447, norm(x): 0.8031, norm(y): 0.9956, norm:0.5929, tok/sec: 100076.55, flops:105.04, batch-reuse:1
@ 6287 train 3.8958 , allloss: 3.8959, dt: 1318.06ms, fracRes: 0.7110, norm(attn): 0.1494, norm(output): 0.9448, norm(x): 0.8028, norm(y): 0.9958, norm:0.5936, tok/sec: 99442.95, flops:104.38, batch-reuse:1
@ 6288 train 3.9619 , allloss: 3.9621, dt: 1290.82ms, fracRes: 0.7110, norm(attn): 0.1494, norm(output): 0.9446, norm(x): 0.8025, norm(y): 0.9959, norm:0.5694, tok/sec: 101541.48, flops:106.58, batch-reuse:1
@ 6289 train 3.9900 , allloss: 3.9900, dt: 1296.62ms, fracRes: 0.7107, norm(attn): 0.1494, norm(output): 0.9448, norm(x): 0.8032, norm(y): 0.9957, norm:0.5915, tok/sec: 101087.51, flops:106.10, batch-reuse:1
@ 6290 train 3.9087 , allloss: 3.9093, dt: 1316.07ms, fracRes: 0.7108, norm(attn): 0.1514, norm(output): 0.9446, norm(x): 0.8032, norm(y): 0.9957, norm:0.5149, tok/sec: 99593.43, flops:104.54, batch-reuse:1
@ 6291 train 3.8384 , allloss: 3.8385, dt: 1345.63ms, fracRes: 0.7109, norm(attn): 0.1514, norm(output): 0.9446, norm(x): 0.8032, norm(y): 0.9957, norm:0.6217, tok/sec: 97405.54, flops:102.24, batch-reuse:1
@ 6292 train 3.8779 , allloss: 3.8779, dt: 1306.84ms, fracRes: 0.7109, norm(attn): 0.1504, norm(output): 0.9442, norm(x): 0.8023, norm(y): 0.9955, norm:0.5488, tok/sec: 100296.59, flops:105.27, batch-reuse:1
@ 6293 train 3.9154 , allloss: 3.9156, dt: 1336.67ms, fracRes: 0.7107, norm(attn): 0.1484, norm(output): 0.9445, norm(x): 0.8028, norm(y): 0.9954, norm:0.6174, tok/sec: 98058.65, flops:102.93, batch-reuse:1
@ 6294 train 3.9909 , allloss: 3.9910, dt: 1337.77ms, fracRes: 0.7106, norm(attn): 0.1494, norm(output): 0.9458, norm(x): 0.8042, norm(y): 0.9952, norm:0.7493, tok/sec: 97977.72, flops:102.84, batch-reuse:1
@ 6295 train 3.9530 , allloss: 3.9531, dt: 1315.93ms, fracRes: 0.7110, norm(attn): 0.1484, norm(output): 0.9448, norm(x): 0.8027, norm(y): 0.9956, norm:0.6122, tok/sec: 99604.14, flops:104.55, batch-reuse:1
@ 6296 train 3.9424 , allloss: 3.9425, dt: 1289.21ms, fracRes: 0.7108, norm(attn): 0.1504, norm(output): 0.9451, norm(x): 0.8035, norm(y): 0.9956, norm:0.6866, tok/sec: 101668.55, flops:106.71, batch-reuse:1
@ 6297 train 3.8861 , allloss: 3.8861, dt: 1299.23ms, fracRes: 0.7109, norm(attn): 0.1504, norm(output): 0.9450, norm(x): 0.8037, norm(y): 0.9957, norm:0.6258, tok/sec: 100884.73, flops:105.89, batch-reuse:1
@ 6298 train 3.8865 , allloss: 3.8866, dt: 1284.34ms, fracRes: 0.7106, norm(attn): 0.1514, norm(output): 0.9445, norm(x): 0.8036, norm(y): 0.9957, norm:0.6871, tok/sec: 102054.36, flops:107.12, batch-reuse:1
@ 6299 train 3.9080 , allloss: 3.9083, dt: 1277.97ms, fracRes: 0.7111, norm(attn): 0.1514, norm(output): 0.9441, norm(x): 0.8019, norm(y): 0.9958, norm:0.6016, tok/sec: 102563.00, flops:107.65, batch-reuse:1
@ 6300 train 3.8053 , allloss: 3.8053, dt: 1295.97ms, fracRes: 0.7111, norm(attn): 0.1504, norm(output): 0.9450, norm(x): 0.8035, norm(y): 0.9957, norm:0.7755, tok/sec: 101137.92, flops:106.16, batch-reuse:1
@ 6301 train 3.9321 , allloss: 3.9321, dt: 1293.54ms, fracRes: 0.7111, norm(attn): 0.1514, norm(output): 0.9446, norm(x): 0.8026, norm(y): 0.9961, norm:0.9144, tok/sec: 101328.21, flops:106.36, batch-reuse:1
@ 6302 train 3.9689 , allloss: 3.9690, dt: 1277.47ms, fracRes: 0.7111, norm(attn): 0.1504, norm(output): 0.9443, norm(x): 0.8021, norm(y): 0.9959, norm:0.8429, tok/sec: 102602.43, flops:107.69, batch-reuse:1
@ 6303 train 3.8754 , allloss: 3.8755, dt: 1303.51ms, fracRes: 0.7110, norm(attn): 0.1514, norm(output): 0.9445, norm(x): 0.8023, norm(y): 0.9957, norm:0.7183, tok/sec: 100553.44, flops:105.54, batch-reuse:1
@ 6304 train 3.9195 , allloss: 3.9197, dt: 1319.22ms, fracRes: 0.7112, norm(attn): 0.1494, norm(output): 0.9446, norm(x): 0.8022, norm(y): 0.9956, norm:0.5865, tok/sec: 99355.84, flops:104.29, batch-reuse:1
@ 6305 train 3.8480 , allloss: 3.8480, dt: 1300.33ms, fracRes: 0.7112, norm(attn): 0.1514, norm(output): 0.9447, norm(x): 0.8023, norm(y): 0.9957, norm:0.6188, tok/sec: 100799.05, flops:105.80, batch-reuse:1
@ 6306 train 4.0267 , allloss: 4.0267, dt: 1317.39ms, fracRes: 0.7113, norm(attn): 0.1494, norm(output): 0.9454, norm(x): 0.8031, norm(y): 0.9956, norm:0.5777, tok/sec: 99493.41, flops:104.43, batch-reuse:1
@ 6307 train 3.8543 , allloss: 3.8550, dt: 1284.27ms, fracRes: 0.7113, norm(attn): 0.1514, norm(output): 0.9450, norm(x): 0.8027, norm(y): 0.9958, norm:0.8070, tok/sec: 102059.49, flops:107.12, batch-reuse:1
@ 6308 train 3.9599 , allloss: 3.9600, dt: 1285.80ms, fracRes: 0.7114, norm(attn): 0.1484, norm(output): 0.9449, norm(x): 0.8026, norm(y): 0.9957, norm:0.6577, tok/sec: 101938.23, flops:107.00, batch-reuse:1
@ 6309 train 3.9627 , allloss: 3.9628, dt: 1307.08ms, fracRes: 0.7114, norm(attn): 0.1494, norm(output): 0.9447, norm(x): 0.8023, norm(y): 0.9958, norm:0.7040, tok/sec: 100278.66, flops:105.26, batch-reuse:1
@ 6310 train 3.9032 , allloss: 3.9034, dt: 1330.52ms, fracRes: 0.7113, norm(attn): 0.1494, norm(output): 0.9449, norm(x): 0.8025, norm(y): 0.9957, norm:0.6691, tok/sec: 98511.51, flops:103.40, batch-reuse:1
@ 6311 train 4.0067 , allloss: 4.0067, dt: 1330.88ms, fracRes: 0.7116, norm(attn): 0.1504, norm(output): 0.9444, norm(x): 0.8007, norm(y): 0.9959, norm:0.6895, tok/sec: 98485.41, flops:103.37, batch-reuse:1
@ 6312 train 3.8803 , allloss: 3.8803, dt: 1299.36ms, fracRes: 0.7113, norm(attn): 0.1504, norm(output): 0.9448, norm(x): 0.8018, norm(y): 0.9956, norm:0.6074, tok/sec: 100874.55, flops:105.88, batch-reuse:1
@ 6313 train 4.0342 , allloss: 4.0342, dt: 1304.75ms, fracRes: 0.7114, norm(attn): 0.1504, norm(output): 0.9446, norm(x): 0.8016, norm(y): 0.9957, norm:0.7240, tok/sec: 100457.43, flops:105.44, batch-reuse:1
@ 6314 train 3.8294 , allloss: 3.8296, dt: 1321.16ms, fracRes: 0.7109, norm(attn): 0.1514, norm(output): 0.9444, norm(x): 0.8022, norm(y): 0.9953, norm:0.7042, tok/sec: 99209.62, flops:104.13, batch-reuse:1
@ 6315 train 3.8843 , allloss: 3.8844, dt: 1295.66ms, fracRes: 0.7110, norm(attn): 0.1504, norm(output): 0.9446, norm(x): 0.8028, norm(y): 0.9952, norm:0.6200, tok/sec: 101162.32, flops:106.18, batch-reuse:1
@ 6316 train 3.9345 , allloss: 3.9347, dt: 1301.36ms, fracRes: 0.7115, norm(attn): 0.1504, norm(output): 0.9447, norm(x): 0.8025, norm(y): 0.9953, norm:0.5554, tok/sec: 100719.62, flops:105.72, batch-reuse:1
@ 6317 train 3.8777 , allloss: 3.8779, dt: 1315.31ms, fracRes: 0.7116, norm(attn): 0.1504, norm(output): 0.9447, norm(x): 0.8026, norm(y): 0.9956, norm:0.7241, tok/sec: 99651.00, flops:104.60, batch-reuse:1
@ 6318 train 3.9633 , allloss: 3.9633, dt: 1308.49ms, fracRes: 0.7114, norm(attn): 0.1504, norm(output): 0.9449, norm(x): 0.8028, norm(y): 0.9956, norm:0.7212, tok/sec: 100170.24, flops:105.14, batch-reuse:1
@ 6319 train 3.7902 , allloss: 3.7903, dt: 1313.58ms, fracRes: 0.7110, norm(attn): 0.1504, norm(output): 0.9448, norm(x): 0.8033, norm(y): 0.9955, norm:0.5648, tok/sec: 99782.05, flops:104.73, batch-reuse:1
@ 6320 train 3.9500 , allloss: 3.9500, dt: 1312.93ms, fracRes: 0.7111, norm(attn): 0.1484, norm(output): 0.9447, norm(x): 0.8031, norm(y): 0.9955, norm:0.6673, tok/sec: 99831.30, flops:104.79, batch-reuse:1
@ 6321 train 3.9690 , allloss: 3.9691, dt: 1289.60ms, fracRes: 0.7113, norm(attn): 0.1504, norm(output): 0.9448, norm(x): 0.8030, norm(y): 0.9955, norm:0.5997, tok/sec: 101637.42, flops:106.68, batch-reuse:1
@ 6322 train 3.7963 , allloss: 3.7964, dt: 1297.30ms, fracRes: 0.7112, norm(attn): 0.1504, norm(output): 0.9449, norm(x): 0.8032, norm(y): 0.9955, norm:0.7448, tok/sec: 101034.54, flops:106.05, batch-reuse:1
@ 6323 train 3.9847 , allloss: 3.9848, dt: 1289.55ms, fracRes: 0.7114, norm(attn): 0.1514, norm(output): 0.9448, norm(x): 0.8021, norm(y): 0.9954, norm:0.6448, tok/sec: 101641.37, flops:106.69, batch-reuse:1
@ 6324 train 3.9395 , allloss: 3.9395, dt: 1293.22ms, fracRes: 0.7112, norm(attn): 0.1504, norm(output): 0.9450, norm(x): 0.8027, norm(y): 0.9952, norm:0.7415, tok/sec: 101353.26, flops:106.38, batch-reuse:1
@ 6325 train 3.8910 , allloss: 3.8911, dt: 1308.18ms, fracRes: 0.7113, norm(attn): 0.1514, norm(output): 0.9447, norm(x): 0.8029, norm(y): 0.9954, norm:0.7559, tok/sec: 100194.23, flops:105.17, batch-reuse:1
@ 6326 train 3.9415 , allloss: 3.9417, dt: 1310.96ms, fracRes: 0.7114, norm(attn): 0.1504, norm(output): 0.9447, norm(x): 0.8030, norm(y): 0.9953, norm:0.6271, tok/sec: 99981.45, flops:104.94, batch-reuse:1
@ 6327 train 4.0895 , allloss: 4.0896, dt: 1305.94ms, fracRes: 0.7116, norm(attn): 0.1514, norm(output): 0.9447, norm(x): 0.8024, norm(y): 0.9953, norm:0.7244, tok/sec: 100366.03, flops:105.35, batch-reuse:1
@ 6328 train 4.0786 , allloss: 4.0787, dt: 1299.96ms, fracRes: 0.7115, norm(attn): 0.1504, norm(output): 0.9450, norm(x): 0.8024, norm(y): 0.9954, norm:0.7404, tok/sec: 100827.97, flops:105.83, batch-reuse:1
@ 6329 train 4.0752 , allloss: 4.0752, dt: 1305.97ms, fracRes: 0.7115, norm(attn): 0.1504, norm(output): 0.9451, norm(x): 0.8025, norm(y): 0.9955, norm:0.6160, tok/sec: 100363.59, flops:105.34, batch-reuse:1
@ 6330 train 4.1416 , allloss: 4.1416, dt: 1297.82ms, fracRes: 0.7114, norm(attn): 0.1494, norm(output): 0.9452, norm(x): 0.8028, norm(y): 0.9956, norm:0.7861, tok/sec: 100993.86, flops:106.01, batch-reuse:1
@ 6331 train 3.9538 , allloss: 3.9541, dt: 1315.98ms, fracRes: 0.7112, norm(attn): 0.1504, norm(output): 0.9447, norm(x): 0.8028, norm(y): 0.9956, norm:0.7440, tok/sec: 99599.94, flops:104.54, batch-reuse:1
@ 6332 train 4.1342 , allloss: 4.1342, dt: 1304.08ms, fracRes: 0.7112, norm(attn): 0.1504, norm(output): 0.9452, norm(x): 0.8034, norm(y): 0.9954, norm:0.8071, tok/sec: 100509.39, flops:105.50, batch-reuse:1
@ 6333 train 4.0912 , allloss: 4.0913, dt: 1314.26ms, fracRes: 0.7113, norm(attn): 0.1514, norm(output): 0.9450, norm(x): 0.8028, norm(y): 0.9954, norm:0.6432, tok/sec: 99730.86, flops:104.68, batch-reuse:1
@ 6334 train 4.0599 , allloss: 4.0600, dt: 1308.68ms, fracRes: 0.7114, norm(attn): 0.1523, norm(output): 0.9445, norm(x): 0.8024, norm(y): 0.9953, norm:0.6143, tok/sec: 100156.22, flops:105.13, batch-reuse:1
@ 6335 train 4.0659 , allloss: 4.0660, dt: 1286.05ms, fracRes: 0.7114, norm(attn): 0.1523, norm(output): 0.9452, norm(x): 0.8034, norm(y): 0.9953, norm:0.6701, tok/sec: 101918.33, flops:106.98, batch-reuse:1
@ 6336 train 4.0059 , allloss: 4.0059, dt: 1314.46ms, fracRes: 0.7115, norm(attn): 0.1514, norm(output): 0.9452, norm(x): 0.8037, norm(y): 0.9954, norm:0.5842, tok/sec: 99715.22, flops:104.66, batch-reuse:1
@ 6337 train 4.0003 , allloss: 4.0003, dt: 1292.84ms, fracRes: 0.7115, norm(attn): 0.1504, norm(output): 0.9449, norm(x): 0.8030, norm(y): 0.9956, norm:0.5677, tok/sec: 101383.17, flops:106.42, batch-reuse:1
@ 6338 train 3.9977 , allloss: 3.9978, dt: 1291.15ms, fracRes: 0.7112, norm(attn): 0.1514, norm(output): 0.9450, norm(x): 0.8032, norm(y): 0.9954, norm:0.5785, tok/sec: 101515.90, flops:106.55, batch-reuse:1
@ 6339 train 4.0433 , allloss: 4.0433, dt: 1288.84ms, fracRes: 0.7114, norm(attn): 0.1504, norm(output): 0.9449, norm(x): 0.8030, norm(y): 0.9954, norm:0.5887, tok/sec: 101697.68, flops:106.75, batch-reuse:1
@ 6340 train 4.0257 , allloss: 4.0257, dt: 1297.05ms, fracRes: 0.7113, norm(attn): 0.1514, norm(output): 0.9447, norm(x): 0.8031, norm(y): 0.9954, norm:0.5084, tok/sec: 101054.13, flops:106.07, batch-reuse:1
@ 6341 train 4.3628 , allloss: 4.3629, dt: 1324.21ms, fracRes: 0.7117, norm(attn): 0.1484, norm(output): 0.9450, norm(x): 0.8031, norm(y): 0.9954, norm:0.5779, tok/sec: 98981.30, flops:103.89, batch-reuse:1
@ 6342 train 4.0871 , allloss: 4.0873, dt: 1312.18ms, fracRes: 0.7115, norm(attn): 0.1484, norm(output): 0.9456, norm(x): 0.8045, norm(y): 0.9954, norm:0.6611, tok/sec: 99888.59, flops:104.85, batch-reuse:1
@ 6343 train 4.1033 , allloss: 4.1033, dt: 1315.38ms, fracRes: 0.7113, norm(attn): 0.1504, norm(output): 0.9450, norm(x): 0.8037, norm(y): 0.9953, norm:0.5258, tok/sec: 99645.45, flops:104.59, batch-reuse:1
@ 6344 train 4.0050 , allloss: 4.0050, dt: 1298.16ms, fracRes: 0.7112, norm(attn): 0.1494, norm(output): 0.9448, norm(x): 0.8031, norm(y): 0.9951, norm:0.6167, tok/sec: 100967.76, flops:105.98, batch-reuse:1
@ 6345 train 4.0432 , allloss: 4.0433, dt: 1341.73ms, fracRes: 0.7110, norm(attn): 0.1504, norm(output): 0.9451, norm(x): 0.8034, norm(y): 0.9951, norm:0.5721, tok/sec: 97688.57, flops:102.54, batch-reuse:1
@ 6346 train 4.2099 , allloss: 4.2099, dt: 1338.10ms, fracRes: 0.7112, norm(attn): 0.1494, norm(output): 0.9451, norm(x): 0.8032, norm(y): 0.9953, norm:0.6432, tok/sec: 97953.78, flops:102.82, batch-reuse:1
@ 6347 train 4.1111 , allloss: 4.1112, dt: 1323.57ms, fracRes: 0.7112, norm(attn): 0.1484, norm(output): 0.9454, norm(x): 0.8042, norm(y): 0.9952, norm:0.6386, tok/sec: 99029.48, flops:103.94, batch-reuse:1
@ 6348 train 4.1025 , allloss: 4.1025, dt: 1316.26ms, fracRes: 0.7111, norm(attn): 0.1494, norm(output): 0.9453, norm(x): 0.8041, norm(y): 0.9951, norm:0.6214, tok/sec: 99579.18, flops:104.52, batch-reuse:1
@ 6349 train 4.0176 , allloss: 4.0178, dt: 1336.43ms, fracRes: 0.7110, norm(attn): 0.1514, norm(output): 0.9447, norm(x): 0.8034, norm(y): 0.9953, norm:0.6397, tok/sec: 98076.49, flops:102.94, batch-reuse:1
@ 6350 train 4.1007 , allloss: 4.1007, dt: 1308.61ms, fracRes: 0.7112, norm(attn): 0.1504, norm(output): 0.9448, norm(x): 0.8032, norm(y): 0.9954, norm:0.6377, tok/sec: 100160.97, flops:105.13, batch-reuse:1
@ 6351 train 4.0842 , allloss: 4.0843, dt: 1308.27ms, fracRes: 0.7116, norm(attn): 0.1494, norm(output): 0.9452, norm(x): 0.8029, norm(y): 0.9957, norm:0.7926, tok/sec: 100187.09, flops:105.16, batch-reuse:1
@ 6352 train 4.0326 , allloss: 4.0326, dt: 1321.25ms, fracRes: 0.7115, norm(attn): 0.1484, norm(output): 0.9448, norm(x): 0.8031, norm(y): 0.9956, norm:0.5661, tok/sec: 99202.71, flops:104.13, batch-reuse:1
@ 6353 train 4.0361 , allloss: 4.0362, dt: 1320.34ms, fracRes: 0.7110, norm(attn): 0.1494, norm(output): 0.9452, norm(x): 0.8040, norm(y): 0.9954, norm:0.6036, tok/sec: 99271.10, flops:104.20, batch-reuse:1
@ 6354 train 4.0558 , allloss: 4.0558, dt: 1303.50ms, fracRes: 0.7111, norm(attn): 0.1504, norm(output): 0.9448, norm(x): 0.8031, norm(y): 0.9954, norm:0.5770, tok/sec: 100553.57, flops:105.54, batch-reuse:1
@ 6355 train 4.1234 , allloss: 4.1236, dt: 1285.53ms, fracRes: 0.7113, norm(attn): 0.1484, norm(output): 0.9450, norm(x): 0.8031, norm(y): 0.9953, norm:0.5853, tok/sec: 101959.63, flops:107.02, batch-reuse:1
@ 6356 train 4.0382 , allloss: 4.0382, dt: 1291.24ms, fracRes: 0.7114, norm(attn): 0.1504, norm(output): 0.9451, norm(x): 0.8035, norm(y): 0.9952, norm:0.7423, tok/sec: 101508.84, flops:106.55, batch-reuse:1
@ 6357 train 4.0241 , allloss: 4.0241, dt: 1296.77ms, fracRes: 0.7115, norm(attn): 0.1514, norm(output): 0.9448, norm(x): 0.8030, norm(y): 0.9953, norm:0.6024, tok/sec: 101076.04, flops:106.09, batch-reuse:1
@ 6358 train 4.1147 , allloss: 4.1148, dt: 1282.90ms, fracRes: 0.7114, norm(attn): 0.1484, norm(output): 0.9450, norm(x): 0.8034, norm(y): 0.9953, norm:0.8009, tok/sec: 102168.88, flops:107.24, batch-reuse:1
@ 6359 train 4.0125 , allloss: 4.0131, dt: 1319.45ms, fracRes: 0.7111, norm(attn): 0.1504, norm(output): 0.9449, norm(x): 0.8031, norm(y): 0.9954, norm:0.6717, tok/sec: 99338.01, flops:104.27, batch-reuse:1
@ 6360 train 3.9909 , allloss: 3.9910, dt: 1344.41ms, fracRes: 0.7111, norm(attn): 0.1504, norm(output): 0.9453, norm(x): 0.8035, norm(y): 0.9954, norm:0.6160, tok/sec: 97493.90, flops:102.33, batch-reuse:1
@ 6361 train 4.1151 , allloss: 4.1151, dt: 1335.72ms, fracRes: 0.7115, norm(attn): 0.1494, norm(output): 0.9452, norm(x): 0.8031, norm(y): 0.9954, norm:0.6227, tok/sec: 98128.07, flops:103.00, batch-reuse:1
@ 6362 train 4.0875 , allloss: 4.0876, dt: 1301.98ms, fracRes: 0.7114, norm(attn): 0.1484, norm(output): 0.9447, norm(x): 0.8029, norm(y): 0.9953, norm:0.7221, tok/sec: 100671.32, flops:105.67, batch-reuse:1
@ 6363 train 4.0925 , allloss: 4.0925, dt: 1300.23ms, fracRes: 0.7112, norm(attn): 0.1484, norm(output): 0.9454, norm(x): 0.8040, norm(y): 0.9950, norm:0.7191, tok/sec: 100807.11, flops:105.81, batch-reuse:1
@ 6364 train 4.1319 , allloss: 4.1322, dt: 1282.49ms, fracRes: 0.7113, norm(attn): 0.1475, norm(output): 0.9460, norm(x): 0.8048, norm(y): 0.9950, norm:0.6047, tok/sec: 102201.07, flops:107.27, batch-reuse:1
@ 6365 train 4.0723 , allloss: 4.0723, dt: 1313.71ms, fracRes: 0.7115, norm(attn): 0.1504, norm(output): 0.9452, norm(x): 0.8036, norm(y): 0.9951, norm:0.6955, tok/sec: 99772.33, flops:104.72, batch-reuse:1
@ 6366 train 4.0954 , allloss: 4.0955, dt: 1300.61ms, fracRes: 0.7114, norm(attn): 0.1475, norm(output): 0.9451, norm(x): 0.8040, norm(y): 0.9952, norm:0.6553, tok/sec: 100777.08, flops:105.78, batch-reuse:1
@ 6367 train 3.9687 , allloss: 3.9687, dt: 1309.33ms, fracRes: 0.7113, norm(attn): 0.1523, norm(output): 0.9450, norm(x): 0.8038, norm(y): 0.9950, norm:0.6985, tok/sec: 100106.07, flops:105.07, batch-reuse:1
@ 6368 train 3.9535 , allloss: 3.9538, dt: 1327.04ms, fracRes: 0.7112, norm(attn): 0.1523, norm(output): 0.9447, norm(x): 0.8035, norm(y): 0.9951, norm:0.5684, tok/sec: 98769.99, flops:103.67, batch-reuse:1
@ 6369 train 4.0322 , allloss: 4.0324, dt: 1295.65ms, fracRes: 0.7114, norm(attn): 0.1504, norm(output): 0.9448, norm(x): 0.8032, norm(y): 0.9951, norm:0.6675, tok/sec: 101163.14, flops:106.18, batch-reuse:1
@ 6370 train 3.9586 , allloss: 3.9587, dt: 1291.48ms, fracRes: 0.7115, norm(attn): 0.1504, norm(output): 0.9447, norm(x): 0.8028, norm(y): 0.9951, norm:0.6684, tok/sec: 101489.63, flops:106.53, batch-reuse:1
@ 6371 train 4.0731 , allloss: 4.0731, dt: 1296.23ms, fracRes: 0.7112, norm(attn): 0.1494, norm(output): 0.9449, norm(x): 0.8039, norm(y): 0.9954, norm:0.5569, tok/sec: 101118.17, flops:106.14, batch-reuse:1
@ 6372 train 4.1641 , allloss: 4.1641, dt: 1323.02ms, fracRes: 0.7112, norm(attn): 0.1484, norm(output): 0.9452, norm(x): 0.8042, norm(y): 0.9953, norm:0.6672, tok/sec: 99070.24, flops:103.99, batch-reuse:1
@ 6373 train 3.9829 , allloss: 3.9829, dt: 1355.91ms, fracRes: 0.7113, norm(attn): 0.1504, norm(output): 0.9448, norm(x): 0.8032, norm(y): 0.9953, norm:0.5591, tok/sec: 96667.04, flops:101.46, batch-reuse:1
@ 6374 train 4.0456 , allloss: 4.0457, dt: 1284.64ms, fracRes: 0.7113, norm(attn): 0.1494, norm(output): 0.9448, norm(x): 0.8033, norm(y): 0.9950, norm:0.5626, tok/sec: 102029.91, flops:107.09, batch-reuse:1
@ 6375 train 4.1715 , allloss: 4.1716, dt: 1308.38ms, fracRes: 0.7113, norm(attn): 0.1475, norm(output): 0.9450, norm(x): 0.8035, norm(y): 0.9950, norm:0.5727, tok/sec: 100178.76, flops:105.15, batch-reuse:1
@ 6376 train 4.0599 , allloss: 4.0599, dt: 1319.22ms, fracRes: 0.7112, norm(attn): 0.1475, norm(output): 0.9452, norm(x): 0.8043, norm(y): 0.9950, norm:0.5918, tok/sec: 99355.98, flops:104.29, batch-reuse:1
@ 6377 train 4.0810 , allloss: 4.0811, dt: 1310.28ms, fracRes: 0.7114, norm(attn): 0.1504, norm(output): 0.9453, norm(x): 0.8046, norm(y): 0.9951, norm:0.5375, tok/sec: 100033.26, flops:105.00, batch-reuse:1
@ 6378 train 3.9531 , allloss: 3.9531, dt: 1307.62ms, fracRes: 0.7111, norm(attn): 0.1504, norm(output): 0.9450, norm(x): 0.8043, norm(y): 0.9951, norm:0.5419, tok/sec: 100236.74, flops:105.21, batch-reuse:1
@ 6379 train 3.9769 , allloss: 3.9771, dt: 1318.29ms, fracRes: 0.7110, norm(attn): 0.1504, norm(output): 0.9448, norm(x): 0.8042, norm(y): 0.9952, norm:0.5358, tok/sec: 99425.68, flops:104.36, batch-reuse:1
@ 6380 train 3.9740 , allloss: 3.9740, dt: 1318.29ms, fracRes: 0.7110, norm(attn): 0.1484, norm(output): 0.9447, norm(x): 0.8037, norm(y): 0.9952, norm:0.5510, tok/sec: 99425.41, flops:104.36, batch-reuse:1
@ 6381 train 4.0592 , allloss: 4.0621, dt: 1292.44ms, fracRes: 0.7113, norm(attn): 0.1494, norm(output): 0.9448, norm(x): 0.8033, norm(y): 0.9952, norm:0.5343, tok/sec: 101414.38, flops:106.45, batch-reuse:1
@ 6382 train 4.0654 , allloss: 4.0654, dt: 1309.70ms, fracRes: 0.7115, norm(attn): 0.1465, norm(output): 0.9457, norm(x): 0.8047, norm(y): 0.9952, norm:0.5532, tok/sec: 100077.92, flops:105.04, batch-reuse:1
@ 6383 train 4.0689 , allloss: 4.0689, dt: 1334.23ms, fracRes: 0.7114, norm(attn): 0.1494, norm(output): 0.9455, norm(x): 0.8040, norm(y): 0.9952, norm:0.5864, tok/sec: 98237.57, flops:103.11, batch-reuse:1
@ 6384 train 4.1209 , allloss: 4.1209, dt: 1326.73ms, fracRes: 0.7115, norm(attn): 0.1484, norm(output): 0.9451, norm(x): 0.8034, norm(y): 0.9950, norm:0.6554, tok/sec: 98793.54, flops:103.70, batch-reuse:1
@ 6385 train 3.9683 , allloss: 3.9683, dt: 1303.61ms, fracRes: 0.7114, norm(attn): 0.1484, norm(output): 0.9449, norm(x): 0.8034, norm(y): 0.9949, norm:0.7663, tok/sec: 100545.27, flops:105.54, batch-reuse:1
@ 6386 train 4.0858 , allloss: 4.0860, dt: 1333.57ms, fracRes: 0.7112, norm(attn): 0.1475, norm(output): 0.9456, norm(x): 0.8042, norm(y): 0.9948, norm:0.7081, tok/sec: 98286.29, flops:103.16, batch-reuse:1
@ 6387 train 4.0071 , allloss: 4.0072, dt: 1311.55ms, fracRes: 0.7112, norm(attn): 0.1494, norm(output): 0.9450, norm(x): 0.8040, norm(y): 0.9948, norm:0.6368, tok/sec: 99936.51, flops:104.90, batch-reuse:1
@ 6388 train 4.0433 , allloss: 4.0433, dt: 1284.83ms, fracRes: 0.7114, norm(attn): 0.1484, norm(output): 0.9453, norm(x): 0.8044, norm(y): 0.9949, norm:0.7050, tok/sec: 102015.39, flops:107.08, batch-reuse:1
@ 6389 train 4.0223 , allloss: 4.0223, dt: 1314.15ms, fracRes: 0.7113, norm(attn): 0.1494, norm(output): 0.9454, norm(x): 0.8046, norm(y): 0.9950, norm:0.6257, tok/sec: 99739.10, flops:104.69, batch-reuse:1
@ 6390 train 4.0048 , allloss: 4.0048, dt: 1314.94ms, fracRes: 0.7114, norm(attn): 0.1494, norm(output): 0.9450, norm(x): 0.8037, norm(y): 0.9950, norm:0.5114, tok/sec: 99678.80, flops:104.63, batch-reuse:1
@ 6391 train 4.1870 , allloss: 4.1870, dt: 1338.77ms, fracRes: 0.7115, norm(attn): 0.1484, norm(output): 0.9453, norm(x): 0.8042, norm(y): 0.9950, norm:0.5929, tok/sec: 97904.69, flops:102.76, batch-reuse:1
@ 6392 train 3.9587 , allloss: 3.9587, dt: 1337.85ms, fracRes: 0.7114, norm(attn): 0.1484, norm(output): 0.9452, norm(x): 0.8045, norm(y): 0.9951, norm:0.5768, tok/sec: 97972.27, flops:102.83, batch-reuse:1
@ 6393 train 3.9726 , allloss: 3.9727, dt: 1318.87ms, fracRes: 0.7112, norm(attn): 0.1484, norm(output): 0.9451, norm(x): 0.8044, norm(y): 0.9952, norm:0.5784, tok/sec: 99382.29, flops:104.31, batch-reuse:1
@ 6394 train 4.0268 , allloss: 4.0269, dt: 1334.39ms, fracRes: 0.7112, norm(attn): 0.1484, norm(output): 0.9449, norm(x): 0.8042, norm(y): 0.9951, norm:0.5719, tok/sec: 98226.27, flops:103.10, batch-reuse:1
@ 6395 train 3.9872 , allloss: 3.9872, dt: 1330.12ms, fracRes: 0.7111, norm(attn): 0.1475, norm(output): 0.9452, norm(x): 0.8049, norm(y): 0.9949, norm:0.6661, tok/sec: 98541.62, flops:103.43, batch-reuse:1
@ 6396 train 4.0651 , allloss: 4.0651, dt: 1321.78ms, fracRes: 0.7112, norm(attn): 0.1484, norm(output): 0.9452, norm(x): 0.8052, norm(y): 0.9949, norm:0.5753, tok/sec: 99162.93, flops:104.08, batch-reuse:1
@ 6397 train 3.9567 , allloss: 3.9568, dt: 1324.77ms, fracRes: 0.7109, norm(attn): 0.1484, norm(output): 0.9454, norm(x): 0.8059, norm(y): 0.9948, norm:0.5610, tok/sec: 98939.71, flops:103.85, batch-reuse:1
@ 6398 train 4.0450 , allloss: 4.0451, dt: 1302.58ms, fracRes: 0.7110, norm(attn): 0.1494, norm(output): 0.9452, norm(x): 0.8051, norm(y): 0.9951, norm:0.6725, tok/sec: 100625.14, flops:105.62, batch-reuse:1
@ 6399 train 4.0302 , allloss: 4.0303, dt: 1303.36ms, fracRes: 0.7112, norm(attn): 0.1484, norm(output): 0.9450, norm(x): 0.8050, norm(y): 0.9953, norm:0.5565, tok/sec: 100564.84, flops:105.56, batch-reuse:1
@ 6400 train 4.0638 , allloss: 4.0638, dt: 1277.29ms, fracRes: 0.7115, norm(attn): 0.1465, norm(output): 0.9453, norm(x): 0.8052, norm(y): 0.9951, norm:0.5429, tok/sec: 102617.42, flops:107.71, batch-reuse:1
@ 6401 train 4.0336 , allloss: 4.0337, dt: 1288.49ms, fracRes: 0.7112, norm(attn): 0.1484, norm(output): 0.9451, norm(x): 0.8050, norm(y): 0.9948, norm:0.5595, tok/sec: 101725.03, flops:106.77, batch-reuse:1
@ 6402 train 3.9934 , allloss: 3.9935, dt: 1316.88ms, fracRes: 0.7110, norm(attn): 0.1484, norm(output): 0.9454, norm(x): 0.8054, norm(y): 0.9948, norm:0.5386, tok/sec: 99532.01, flops:104.47, batch-reuse:1
@ 6403 train 4.3895 , allloss: 4.3895, dt: 1299.99ms, fracRes: 0.7111, norm(attn): 0.1484, norm(output): 0.9446, norm(x): 0.8038, norm(y): 0.9951, norm:1.2083, tok/sec: 100825.53, flops:105.83, batch-reuse:1
@ 6404 train 4.1960 , allloss: 4.1961, dt: 1324.44ms, fracRes: 0.7107, norm(attn): 0.1484, norm(output): 0.9456, norm(x): 0.8066, norm(y): 0.9949, norm:1.5046, tok/sec: 98964.43, flops:103.88, batch-reuse:1
@ 6405 train 4.0840 , allloss: 4.0840, dt: 1319.92ms, fracRes: 0.7109, norm(attn): 0.1475, norm(output): 0.9456, norm(x): 0.8067, norm(y): 0.9949, norm:0.8400, tok/sec: 99303.18, flops:104.23, batch-reuse:1
@ 6406 train 4.0565 , allloss: 4.0566, dt: 1298.50ms, fracRes: 0.7115, norm(attn): 0.1465, norm(output): 0.9451, norm(x): 0.8052, norm(y): 0.9948, norm:0.7832, tok/sec: 100941.40, flops:105.95, batch-reuse:1
@ 6407 train 3.9658 , allloss: 3.9659, dt: 1289.72ms, fracRes: 0.7114, norm(attn): 0.1475, norm(output): 0.9451, norm(x): 0.8050, norm(y): 0.9947, norm:0.7207, tok/sec: 101628.52, flops:106.67, batch-reuse:1
@ 6408 train 4.0388 , allloss: 4.0389, dt: 1309.37ms, fracRes: 0.7109, norm(attn): 0.1504, norm(output): 0.9447, norm(x): 0.8047, norm(y): 0.9949, norm:0.6569, tok/sec: 100103.01, flops:105.07, batch-reuse:1
@ 6409 train 4.0830 , allloss: 4.0831, dt: 1293.25ms, fracRes: 0.7110, norm(attn): 0.1484, norm(output): 0.9449, norm(x): 0.8048, norm(y): 0.9949, norm:0.6949, tok/sec: 101351.12, flops:106.38, batch-reuse:1
@ 6410 train 4.0723 , allloss: 4.0724, dt: 1315.46ms, fracRes: 0.7111, norm(attn): 0.1484, norm(output): 0.9453, norm(x): 0.8053, norm(y): 0.9948, norm:0.5691, tok/sec: 99639.29, flops:104.58, batch-reuse:1
@ 6411 train 4.0269 , allloss: 4.0270, dt: 1338.51ms, fracRes: 0.7113, norm(attn): 0.1484, norm(output): 0.9453, norm(x): 0.8050, norm(y): 0.9947, norm:0.6975, tok/sec: 97923.69, flops:102.78, batch-reuse:1
@ 6412 train 4.0097 , allloss: 4.0098, dt: 1299.05ms, fracRes: 0.7110, norm(attn): 0.1484, norm(output): 0.9454, norm(x): 0.8055, norm(y): 0.9943, norm:0.5667, tok/sec: 100898.58, flops:105.91, batch-reuse:1
@ 6413 train 3.9852 , allloss: 3.9853, dt: 1300.01ms, fracRes: 0.7109, norm(attn): 0.1514, norm(output): 0.9452, norm(x): 0.8051, norm(y): 0.9943, norm:0.5440, tok/sec: 100824.03, flops:105.83, batch-reuse:1
@ 6414 train 4.0208 , allloss: 4.0209, dt: 1315.30ms, fracRes: 0.7110, norm(attn): 0.1504, norm(output): 0.9449, norm(x): 0.8053, norm(y): 0.9943, norm:0.5814, tok/sec: 99651.83, flops:104.60, batch-reuse:1
@ 6415 train 4.1202 , allloss: 4.1202, dt: 1280.92ms, fracRes: 0.7111, norm(attn): 0.1484, norm(output): 0.9454, norm(x): 0.8061, norm(y): 0.9946, norm:0.5246, tok/sec: 102326.51, flops:107.41, batch-reuse:1
@ 6416 train 3.9849 , allloss: 3.9850, dt: 1276.63ms, fracRes: 0.7114, norm(attn): 0.1475, norm(output): 0.9452, norm(x): 0.8053, norm(y): 0.9947, norm:0.5289, tok/sec: 102670.22, flops:107.77, batch-reuse:1
@ 6417 train 4.0345 , allloss: 4.0346, dt: 1310.56ms, fracRes: 0.7116, norm(attn): 0.1484, norm(output): 0.9454, norm(x): 0.8053, norm(y): 0.9947, norm:0.5277, tok/sec: 100012.35, flops:104.98, batch-reuse:1
@ 6418 train 3.9868 , allloss: 3.9868, dt: 1338.15ms, fracRes: 0.7114, norm(attn): 0.1475, norm(output): 0.9453, norm(x): 0.8054, norm(y): 0.9948, norm:0.5724, tok/sec: 97950.10, flops:102.81, batch-reuse:1
@ 6419 train 3.9720 , allloss: 3.9721, dt: 1340.93ms, fracRes: 0.7110, norm(attn): 0.1494, norm(output): 0.9451, norm(x): 0.8057, norm(y): 0.9948, norm:0.6281, tok/sec: 97747.02, flops:102.60, batch-reuse:1
@ 6420 train 4.0855 , allloss: 4.0856, dt: 1329.47ms, fracRes: 0.7111, norm(attn): 0.1484, norm(output): 0.9452, norm(x): 0.8057, norm(y): 0.9948, norm:0.6376, tok/sec: 98589.60, flops:103.48, batch-reuse:1
@ 6421 train 3.9494 , allloss: 3.9495, dt: 1286.43ms, fracRes: 0.7113, norm(attn): 0.1484, norm(output): 0.9451, norm(x): 0.8051, norm(y): 0.9948, norm:0.5127, tok/sec: 101887.82, flops:106.94, batch-reuse:1
@ 6422 train 3.9396 , allloss: 3.9397, dt: 1290.54ms, fracRes: 0.7112, norm(attn): 0.1484, norm(output): 0.9455, norm(x): 0.8060, norm(y): 0.9945, norm:0.7003, tok/sec: 101563.86, flops:106.60, batch-reuse:1
@ 6423 train 4.1392 , allloss: 4.1392, dt: 1319.11ms, fracRes: 0.7113, norm(attn): 0.1465, norm(output): 0.9454, norm(x): 0.8059, norm(y): 0.9946, norm:0.6205, tok/sec: 99363.90, flops:104.30, batch-reuse:1
@ 6424 train 4.0384 , allloss: 4.0385, dt: 1312.28ms, fracRes: 0.7111, norm(attn): 0.1494, norm(output): 0.9453, norm(x): 0.8060, norm(y): 0.9947, norm:0.7278, tok/sec: 99880.91, flops:104.84, batch-reuse:1
@ 6425 train 4.0084 , allloss: 4.0084, dt: 1299.56ms, fracRes: 0.7113, norm(attn): 0.1484, norm(output): 0.9455, norm(x): 0.8062, norm(y): 0.9948, norm:0.6527, tok/sec: 100858.52, flops:105.86, batch-reuse:1
@ 6426 train 3.9993 , allloss: 3.9993, dt: 1287.49ms, fracRes: 0.7114, norm(attn): 0.1494, norm(output): 0.9453, norm(x): 0.8060, norm(y): 0.9948, norm:0.5753, tok/sec: 101804.07, flops:106.86, batch-reuse:1
@ 6427 train 3.9858 , allloss: 3.9859, dt: 1302.81ms, fracRes: 0.7115, norm(attn): 0.1475, norm(output): 0.9451, norm(x): 0.8051, norm(y): 0.9948, norm:0.5762, tok/sec: 100607.28, flops:105.60, batch-reuse:1
@ 6428 train 3.9204 , allloss: 3.9207, dt: 1293.03ms, fracRes: 0.7114, norm(attn): 0.1475, norm(output): 0.9453, norm(x): 0.8052, norm(y): 0.9947, norm:0.5583, tok/sec: 101367.82, flops:106.40, batch-reuse:1
@ 6429 train 3.9223 , allloss: 3.9223, dt: 1310.61ms, fracRes: 0.7113, norm(attn): 0.1475, norm(output): 0.9453, norm(x): 0.8053, norm(y): 0.9947, norm:0.5207, tok/sec: 100008.72, flops:104.97, batch-reuse:1
@ 6430 train 3.9669 , allloss: 3.9670, dt: 1308.21ms, fracRes: 0.7114, norm(attn): 0.1504, norm(output): 0.9450, norm(x): 0.8047, norm(y): 0.9948, norm:0.5633, tok/sec: 100191.71, flops:105.16, batch-reuse:1
@ 6431 train 3.9437 , allloss: 3.9438, dt: 1288.54ms, fracRes: 0.7113, norm(attn): 0.1494, norm(output): 0.9454, norm(x): 0.8056, norm(y): 0.9948, norm:0.5238, tok/sec: 101720.94, flops:106.77, batch-reuse:1
@ 6432 train 4.0020 , allloss: 4.0020, dt: 1299.21ms, fracRes: 0.7115, norm(attn): 0.1484, norm(output): 0.9454, norm(x): 0.8055, norm(y): 0.9948, norm:0.5371, tok/sec: 100885.97, flops:105.89, batch-reuse:1
@ 6433 train 4.0316 , allloss: 4.0317, dt: 1293.60ms, fracRes: 0.7113, norm(attn): 0.1475, norm(output): 0.9456, norm(x): 0.8063, norm(y): 0.9948, norm:0.4955, tok/sec: 101323.21, flops:106.35, batch-reuse:1
@ 6434 train 3.9138 , allloss: 3.9139, dt: 1283.83ms, fracRes: 0.7113, norm(attn): 0.1484, norm(output): 0.9453, norm(x): 0.8057, norm(y): 0.9946, norm:0.5054, tok/sec: 102094.31, flops:107.16, batch-reuse:1
@ 6435 train 4.0931 , allloss: 4.0932, dt: 1299.40ms, fracRes: 0.7112, norm(attn): 0.1465, norm(output): 0.9455, norm(x): 0.8055, norm(y): 0.9946, norm:0.6092, tok/sec: 100871.33, flops:105.88, batch-reuse:1
@ 6436 train 4.0113 , allloss: 4.0113, dt: 1330.26ms, fracRes: 0.7111, norm(attn): 0.1475, norm(output): 0.9453, norm(x): 0.8059, norm(y): 0.9947, norm:0.6079, tok/sec: 98531.31, flops:103.42, batch-reuse:1
@ 6437 train 3.9242 , allloss: 3.9243, dt: 1335.49ms, fracRes: 0.7111, norm(attn): 0.1475, norm(output): 0.9454, norm(x): 0.8064, norm(y): 0.9946, norm:0.5270, tok/sec: 98145.08, flops:103.02, batch-reuse:1
@ 6438 train 3.8997 , allloss: 3.8997, dt: 1301.33ms, fracRes: 0.7113, norm(attn): 0.1484, norm(output): 0.9449, norm(x): 0.8055, norm(y): 0.9949, norm:0.6076, tok/sec: 100721.67, flops:105.72, batch-reuse:1
@ 6439 train 4.0318 , allloss: 4.0318, dt: 1319.02ms, fracRes: 0.7115, norm(attn): 0.1465, norm(output): 0.9450, norm(x): 0.8050, norm(y): 0.9951, norm:0.6784, tok/sec: 99371.12, flops:104.30, batch-reuse:1
@ 6440 train 3.8715 , allloss: 3.8715, dt: 1343.53ms, fracRes: 0.7114, norm(attn): 0.1494, norm(output): 0.9450, norm(x): 0.8047, norm(y): 0.9949, norm:0.7318, tok/sec: 97558.05, flops:102.40, batch-reuse:1
@ 6441 train 4.0669 , allloss: 4.0670, dt: 1315.54ms, fracRes: 0.7113, norm(attn): 0.1484, norm(output): 0.9453, norm(x): 0.8055, norm(y): 0.9947, norm:0.5617, tok/sec: 99633.39, flops:104.58, batch-reuse:1
@ 6442 train 3.9499 , allloss: 3.9500, dt: 1323.14ms, fracRes: 0.7113, norm(attn): 0.1465, norm(output): 0.9453, norm(x): 0.8061, norm(y): 0.9947, norm:0.6062, tok/sec: 99061.47, flops:103.98, batch-reuse:1
@ 6443 train 4.0781 , allloss: 4.0782, dt: 1336.40ms, fracRes: 0.7114, norm(attn): 0.1455, norm(output): 0.9461, norm(x): 0.8070, norm(y): 0.9943, norm:0.6313, tok/sec: 98078.56, flops:102.95, batch-reuse:1
@ 6444 train 4.2758 , allloss: 4.2759, dt: 1328.86ms, fracRes: 0.7114, norm(attn): 0.1436, norm(output): 0.9461, norm(x): 0.8065, norm(y): 0.9942, norm:1.0507, tok/sec: 98635.18, flops:103.53, batch-reuse:1
@ 6445 train 3.9977 , allloss: 3.9977, dt: 1323.65ms, fracRes: 0.7116, norm(attn): 0.1465, norm(output): 0.9456, norm(x): 0.8059, norm(y): 0.9946, norm:1.0932, tok/sec: 99023.13, flops:103.94, batch-reuse:1
@ 6446 train 3.9989 , allloss: 3.9989, dt: 1330.71ms, fracRes: 0.7112, norm(attn): 0.1475, norm(output): 0.9453, norm(x): 0.8066, norm(y): 0.9947, norm:0.7329, tok/sec: 98497.94, flops:103.39, batch-reuse:1
@ 6447 train 3.9403 , allloss: 3.9403, dt: 1296.11ms, fracRes: 0.7111, norm(attn): 0.1475, norm(output): 0.9449, norm(x): 0.8063, norm(y): 0.9948, norm:0.7349, tok/sec: 101127.11, flops:106.15, batch-reuse:1
@ 6448 train 3.9297 , allloss: 3.9298, dt: 1300.92ms, fracRes: 0.7115, norm(attn): 0.1494, norm(output): 0.9449, norm(x): 0.8049, norm(y): 0.9948, norm:0.6739, tok/sec: 100753.22, flops:105.75, batch-reuse:1
@ 6449 train 4.0304 , allloss: 4.0304, dt: 1299.34ms, fracRes: 0.7113, norm(attn): 0.1484, norm(output): 0.9456, norm(x): 0.8067, norm(y): 0.9945, norm:0.6023, tok/sec: 100875.57, flops:105.88, batch-reuse:1
@ 6450 train 3.9648 , allloss: 3.9649, dt: 1309.39ms, fracRes: 0.7116, norm(attn): 0.1504, norm(output): 0.9452, norm(x): 0.8050, norm(y): 0.9945, norm:0.5924, tok/sec: 100101.61, flops:105.07, batch-reuse:1
@ 6451 train 3.8831 , allloss: 3.8831, dt: 1305.95ms, fracRes: 0.7111, norm(attn): 0.1494, norm(output): 0.9454, norm(x): 0.8063, norm(y): 0.9942, norm:0.6025, tok/sec: 100365.29, flops:105.35, batch-reuse:1
@ 6452 train 4.0378 , allloss: 4.0378, dt: 1309.07ms, fracRes: 0.7114, norm(attn): 0.1494, norm(output): 0.9450, norm(x): 0.8050, norm(y): 0.9944, norm:0.5417, tok/sec: 100125.78, flops:105.10, batch-reuse:1
@ 6453 train 3.9589 , allloss: 3.9590, dt: 1292.60ms, fracRes: 0.7113, norm(attn): 0.1475, norm(output): 0.9451, norm(x): 0.8061, norm(y): 0.9944, norm:0.5935, tok/sec: 101401.59, flops:106.43, batch-reuse:1
@ 6454 train 3.9578 , allloss: 3.9578, dt: 1331.04ms, fracRes: 0.7112, norm(attn): 0.1484, norm(output): 0.9454, norm(x): 0.8066, norm(y): 0.9948, norm:0.5418, tok/sec: 98473.63, flops:103.36, batch-reuse:1
@ 6455 train 4.0162 , allloss: 4.0162, dt: 1338.40ms, fracRes: 0.7111, norm(attn): 0.1484, norm(output): 0.9455, norm(x): 0.8067, norm(y): 0.9948, norm:0.5468, tok/sec: 97931.92, flops:102.79, batch-reuse:1
@ 6456 train 3.9354 , allloss: 3.9354, dt: 1329.10ms, fracRes: 0.7113, norm(attn): 0.1465, norm(output): 0.9454, norm(x): 0.8063, norm(y): 0.9947, norm:0.5209, tok/sec: 98616.87, flops:103.51, batch-reuse:1
@ 6457 train 3.8903 , allloss: 3.8903, dt: 1317.58ms, fracRes: 0.7112, norm(attn): 0.1445, norm(output): 0.9454, norm(x): 0.8065, norm(y): 0.9945, norm:0.5450, tok/sec: 99479.03, flops:104.42, batch-reuse:1
@ 6458 train 3.9264 , allloss: 3.9264, dt: 1321.02ms, fracRes: 0.7111, norm(attn): 0.1445, norm(output): 0.9454, norm(x): 0.8065, norm(y): 0.9944, norm:0.6057, tok/sec: 99220.58, flops:104.15, batch-reuse:1
@ 6459 train 4.0361 , allloss: 4.0361, dt: 1340.84ms, fracRes: 0.7110, norm(attn): 0.1455, norm(output): 0.9456, norm(x): 0.8066, norm(y): 0.9946, norm:0.4861, tok/sec: 97753.97, flops:102.61, batch-reuse:1
@ 6460 train 4.0300 , allloss: 4.0301, dt: 1330.63ms, fracRes: 0.7110, norm(attn): 0.1475, norm(output): 0.9454, norm(x): 0.8065, norm(y): 0.9947, norm:0.5577, tok/sec: 98503.91, flops:103.39, batch-reuse:1
@ 6461 train 4.0193 , allloss: 4.0193, dt: 1284.04ms, fracRes: 0.7113, norm(attn): 0.1475, norm(output): 0.9456, norm(x): 0.8065, norm(y): 0.9947, norm:0.5380, tok/sec: 102078.10, flops:107.14, batch-reuse:1
@ 6462 train 4.0041 , allloss: 4.0042, dt: 1289.56ms, fracRes: 0.7111, norm(attn): 0.1465, norm(output): 0.9454, norm(x): 0.8062, norm(y): 0.9945, norm:0.4661, tok/sec: 101641.26, flops:106.69, batch-reuse:1
@ 6463 train 3.8653 , allloss: 3.8653, dt: 1291.32ms, fracRes: 0.7111, norm(attn): 0.1484, norm(output): 0.9452, norm(x): 0.8056, norm(y): 0.9943, norm:0.5419, tok/sec: 101502.65, flops:106.54, batch-reuse:1
@ 6464 train 3.9198 , allloss: 3.9198, dt: 1301.22ms, fracRes: 0.7112, norm(attn): 0.1484, norm(output): 0.9455, norm(x): 0.8061, norm(y): 0.9944, norm:0.6239, tok/sec: 100730.03, flops:105.73, batch-reuse:1
@ 6465 train 3.7735 , allloss: 3.7735, dt: 1303.55ms, fracRes: 0.7113, norm(attn): 0.1475, norm(output): 0.9452, norm(x): 0.8060, norm(y): 0.9945, norm:0.5958, tok/sec: 100550.31, flops:105.54, batch-reuse:1
@ 6466 train 3.8263 , allloss: 3.8263, dt: 1293.89ms, fracRes: 0.7113, norm(attn): 0.1504, norm(output): 0.9449, norm(x): 0.8057, norm(y): 0.9946, norm:0.5738, tok/sec: 101300.78, flops:106.33, batch-reuse:1
@ 6467 train 3.9673 , allloss: 3.9675, dt: 1320.53ms, fracRes: 0.7117, norm(attn): 0.1475, norm(output): 0.9453, norm(x): 0.8050, norm(y): 0.9947, norm:0.5956, tok/sec: 99256.92, flops:104.18, batch-reuse:1
@ 6468 train 3.9493 , allloss: 3.9494, dt: 1337.17ms, fracRes: 0.7113, norm(attn): 0.1475, norm(output): 0.9455, norm(x): 0.8061, norm(y): 0.9944, norm:0.6014, tok/sec: 98022.07, flops:102.89, batch-reuse:1
@ 6469 train 3.8983 , allloss: 3.8984, dt: 1325.55ms, fracRes: 0.7115, norm(attn): 0.1475, norm(output): 0.9454, norm(x): 0.8053, norm(y): 0.9945, norm:0.6515, tok/sec: 98881.32, flops:103.79, batch-reuse:1
@ 6470 train 3.8932 , allloss: 3.8932, dt: 1341.50ms, fracRes: 0.7111, norm(attn): 0.1494, norm(output): 0.9449, norm(x): 0.8053, norm(y): 0.9946, norm:0.6900, tok/sec: 97705.67, flops:102.55, batch-reuse:1
@ 6471 train 3.8364 , allloss: 3.8365, dt: 1342.89ms, fracRes: 0.7109, norm(attn): 0.1484, norm(output): 0.9450, norm(x): 0.8058, norm(y): 0.9946, norm:0.6326, tok/sec: 97604.31, flops:102.45, batch-reuse:1
@ 6472 train 3.8875 , allloss: 3.8878, dt: 1297.37ms, fracRes: 0.7111, norm(attn): 0.1484, norm(output): 0.9451, norm(x): 0.8059, norm(y): 0.9945, norm:0.7077, tok/sec: 101029.10, flops:106.04, batch-reuse:1
@ 6473 train 3.8629 , allloss: 3.8630, dt: 1306.36ms, fracRes: 0.7114, norm(attn): 0.1465, norm(output): 0.9452, norm(x): 0.8060, norm(y): 0.9945, norm:0.6772, tok/sec: 100334.06, flops:105.31, batch-reuse:1
@ 6474 train 3.8694 , allloss: 3.8694, dt: 1314.03ms, fracRes: 0.7114, norm(attn): 0.1465, norm(output): 0.9455, norm(x): 0.8063, norm(y): 0.9943, norm:0.6776, tok/sec: 99748.07, flops:104.70, batch-reuse:1
@ 6475 train 3.9223 , allloss: 3.9224, dt: 1312.41ms, fracRes: 0.7112, norm(attn): 0.1465, norm(output): 0.9452, norm(x): 0.8059, norm(y): 0.9944, norm:0.7459, tok/sec: 99871.44, flops:104.83, batch-reuse:1
@ 6476 train 4.0016 , allloss: 4.0017, dt: 1299.95ms, fracRes: 0.7113, norm(attn): 0.1475, norm(output): 0.9451, norm(x): 0.8050, norm(y): 0.9947, norm:0.6494, tok/sec: 100828.65, flops:105.83, batch-reuse:1
@ 6477 train 3.8049 , allloss: 3.8050, dt: 1298.93ms, fracRes: 0.7113, norm(attn): 0.1475, norm(output): 0.9450, norm(x): 0.8059, norm(y): 0.9947, norm:0.6489, tok/sec: 100907.69, flops:105.92, batch-reuse:1
@ 6478 train 3.8479 , allloss: 3.8480, dt: 1315.09ms, fracRes: 0.7115, norm(attn): 0.1475, norm(output): 0.9451, norm(x): 0.8059, norm(y): 0.9947, norm:0.6222, tok/sec: 99667.40, flops:104.61, batch-reuse:1
@ 6479 train 3.8348 , allloss: 3.8349, dt: 1321.50ms, fracRes: 0.7113, norm(attn): 0.1465, norm(output): 0.9454, norm(x): 0.8065, norm(y): 0.9943, norm:0.5953, tok/sec: 99184.27, flops:104.11, batch-reuse:1
@ 6480 train 3.9532 , allloss: 3.9532, dt: 1302.98ms, fracRes: 0.7113, norm(attn): 0.1465, norm(output): 0.9457, norm(x): 0.8066, norm(y): 0.9942, norm:0.6133, tok/sec: 100593.92, flops:105.59, batch-reuse:1
@ 6481 train 3.9379 , allloss: 3.9379, dt: 1308.69ms, fracRes: 0.7113, norm(attn): 0.1475, norm(output): 0.9457, norm(x): 0.8065, norm(y): 0.9942, norm:0.6505, tok/sec: 100154.80, flops:105.13, batch-reuse:1
@ 6482 train 3.8410 , allloss: 3.8410, dt: 1313.07ms, fracRes: 0.7116, norm(attn): 0.1475, norm(output): 0.9452, norm(x): 0.8060, norm(y): 0.9945, norm:0.7040, tok/sec: 99821.21, flops:104.78, batch-reuse:1
@ 6483 train 3.9886 , allloss: 3.9886, dt: 1334.57ms, fracRes: 0.7114, norm(attn): 0.1484, norm(output): 0.9457, norm(x): 0.8068, norm(y): 0.9945, norm:0.6789, tok/sec: 98213.00, flops:103.09, batch-reuse:1
@ 6484 train 3.8359 , allloss: 3.8360, dt: 1335.70ms, fracRes: 0.7113, norm(attn): 0.1504, norm(output): 0.9449, norm(x): 0.8057, norm(y): 0.9945, norm:0.6054, tok/sec: 98129.78, flops:103.00, batch-reuse:1
@ 6485 train 3.9596 , allloss: 3.9598, dt: 1328.10ms, fracRes: 0.7112, norm(attn): 0.1475, norm(output): 0.9450, norm(x): 0.8058, norm(y): 0.9944, norm:0.6335, tok/sec: 98691.06, flops:103.59, batch-reuse:1
@ 6486 train 3.8427 , allloss: 3.8428, dt: 1308.99ms, fracRes: 0.7112, norm(attn): 0.1484, norm(output): 0.9455, norm(x): 0.8064, norm(y): 0.9941, norm:0.5842, tok/sec: 100131.89, flops:105.10, batch-reuse:1
@ 6487 train 3.8311 , allloss: 3.8311, dt: 1304.46ms, fracRes: 0.7111, norm(attn): 0.1465, norm(output): 0.9453, norm(x): 0.8064, norm(y): 0.9943, norm:0.5698, tok/sec: 100479.69, flops:105.47, batch-reuse:1
@ 6488 train 3.9376 , allloss: 3.9379, dt: 1295.01ms, fracRes: 0.7113, norm(attn): 0.1455, norm(output): 0.9451, norm(x): 0.8062, norm(y): 0.9944, norm:0.7923, tok/sec: 101212.92, flops:106.24, batch-reuse:1
@ 6489 train 3.8947 , allloss: 3.8947, dt: 1338.51ms, fracRes: 0.7114, norm(attn): 0.1475, norm(output): 0.9452, norm(x): 0.8062, norm(y): 0.9944, norm:0.6810, tok/sec: 97923.58, flops:102.78, batch-reuse:1
@ 6490 train 3.7818 , allloss: 3.7818, dt: 1296.13ms, fracRes: 0.7115, norm(attn): 0.1484, norm(output): 0.9452, norm(x): 0.8057, norm(y): 0.9947, norm:0.6553, tok/sec: 101126.00, flops:106.15, batch-reuse:1
@ 6491 train 3.9167 , allloss: 3.9167, dt: 1279.71ms, fracRes: 0.7114, norm(attn): 0.1494, norm(output): 0.9451, norm(x): 0.8057, norm(y): 0.9945, norm:0.6441, tok/sec: 102423.24, flops:107.51, batch-reuse:1
@ 6492 train 3.8458 , allloss: 3.8459, dt: 1292.30ms, fracRes: 0.7113, norm(attn): 0.1484, norm(output): 0.9451, norm(x): 0.8059, norm(y): 0.9944, norm:0.6447, tok/sec: 101425.55, flops:106.46, batch-reuse:1
@ 6493 train 4.0170 , allloss: 4.0171, dt: 1302.00ms, fracRes: 0.7119, norm(attn): 0.1504, norm(output): 0.9448, norm(x): 0.8043, norm(y): 0.9946, norm:0.8504, tok/sec: 100669.99, flops:105.67, batch-reuse:1
@ 6494 train 3.7806 , allloss: 3.7811, dt: 1311.90ms, fracRes: 0.7115, norm(attn): 0.1504, norm(output): 0.9451, norm(x): 0.8058, norm(y): 0.9942, norm:0.6381, tok/sec: 99910.03, flops:104.87, batch-reuse:1
@ 6495 train 3.9160 , allloss: 3.9160, dt: 1301.15ms, fracRes: 0.7113, norm(attn): 0.1484, norm(output): 0.9453, norm(x): 0.8061, norm(y): 0.9943, norm:0.5416, tok/sec: 100735.35, flops:105.74, batch-reuse:1
@ 6496 train 3.8570 , allloss: 3.8571, dt: 1301.56ms, fracRes: 0.7113, norm(attn): 0.1484, norm(output): 0.9452, norm(x): 0.8062, norm(y): 0.9944, norm:0.6841, tok/sec: 100703.67, flops:105.70, batch-reuse:1
@ 6497 train 3.8581 , allloss: 3.8582, dt: 1319.01ms, fracRes: 0.7113, norm(attn): 0.1484, norm(output): 0.9449, norm(x): 0.8064, norm(y): 0.9943, norm:0.6860, tok/sec: 99371.46, flops:104.30, batch-reuse:1
@ 6498 train 3.8534 , allloss: 3.8534, dt: 1298.05ms, fracRes: 0.7117, norm(attn): 0.1484, norm(output): 0.9452, norm(x): 0.8063, norm(y): 0.9943, norm:0.6763, tok/sec: 100975.71, flops:105.99, batch-reuse:1
@ 6499 train 3.9366 , allloss: 3.9366, dt: 1294.45ms, fracRes: 0.7114, norm(attn): 0.1465, norm(output): 0.9454, norm(x): 0.8067, norm(y): 0.9942, norm:0.6198, tok/sec: 101257.27, flops:106.28, batch-reuse:1
@ 6500 train 4.0053 , allloss: 4.0063, dt: 1309.54ms, fracRes: 0.7113, norm(attn): 0.1465, norm(output): 0.9455, norm(x): 0.8067, norm(y): 0.9941, norm:0.6088, tok/sec: 100089.94, flops:105.06, batch-reuse:1
@ 6501 train 3.9408 , allloss: 3.9409, dt: 1340.77ms, fracRes: 0.7113, norm(attn): 0.1465, norm(output): 0.9454, norm(x): 0.8066, norm(y): 0.9940, norm:0.5939, tok/sec: 97759.05, flops:102.61, batch-reuse:1
@ 6502 train 3.8344 , allloss: 3.8345, dt: 1317.78ms, fracRes: 0.7116, norm(attn): 0.1455, norm(output): 0.9457, norm(x): 0.8069, norm(y): 0.9940, norm:0.6269, tok/sec: 99464.21, flops:104.40, batch-reuse:1
@ 6503 train 3.8845 , allloss: 3.8846, dt: 1307.77ms, fracRes: 0.7117, norm(attn): 0.1465, norm(output): 0.9452, norm(x): 0.8061, norm(y): 0.9940, norm:0.7368, tok/sec: 100225.24, flops:105.20, batch-reuse:1
@ 6504 train 3.9022 , allloss: 3.9022, dt: 1293.44ms, fracRes: 0.7116, norm(attn): 0.1465, norm(output): 0.9454, norm(x): 0.8064, norm(y): 0.9940, norm:0.6733, tok/sec: 101336.09, flops:106.37, batch-reuse:1
@ 6505 train 3.7746 , allloss: 3.7747, dt: 1296.07ms, fracRes: 0.7115, norm(attn): 0.1484, norm(output): 0.9453, norm(x): 0.8062, norm(y): 0.9941, norm:0.6841, tok/sec: 101130.50, flops:106.15, batch-reuse:1
@ 6506 train 3.7099 , allloss: 3.7099, dt: 1307.27ms, fracRes: 0.7116, norm(attn): 0.1465, norm(output): 0.9454, norm(x): 0.8062, norm(y): 0.9939, norm:0.6383, tok/sec: 100263.90, flops:105.24, batch-reuse:1
@ 6507 train 3.8435 , allloss: 3.8436, dt: 1343.78ms, fracRes: 0.7115, norm(attn): 0.1484, norm(output): 0.9452, norm(x): 0.8059, norm(y): 0.9939, norm:0.6542, tok/sec: 97539.63, flops:102.38, batch-reuse:1
@ 6508 train 3.9458 , allloss: 3.9458, dt: 1341.69ms, fracRes: 0.7113, norm(attn): 0.1455, norm(output): 0.9456, norm(x): 0.8062, norm(y): 0.9940, norm:0.6332, tok/sec: 97691.70, flops:102.54, batch-reuse:1
@ 6509 train 3.8801 , allloss: 3.8802, dt: 1348.49ms, fracRes: 0.7112, norm(attn): 0.1465, norm(output): 0.9453, norm(x): 0.8059, norm(y): 0.9942, norm:0.6110, tok/sec: 97199.09, flops:102.02, batch-reuse:1
@ 6510 train 3.9974 , allloss: 3.9975, dt: 1336.02ms, fracRes: 0.7111, norm(attn): 0.1465, norm(output): 0.9453, norm(x): 0.8058, norm(y): 0.9943, norm:0.6027, tok/sec: 98106.02, flops:102.98, batch-reuse:1
@ 6511 train 4.1084 , allloss: 4.1085, dt: 1316.16ms, fracRes: 0.7112, norm(attn): 0.1455, norm(output): 0.9459, norm(x): 0.8063, norm(y): 0.9943, norm:0.6149, tok/sec: 99586.90, flops:104.53, batch-reuse:1
@ 6512 train 4.1710 , allloss: 4.1711, dt: 1307.50ms, fracRes: 0.7112, norm(attn): 0.1465, norm(output): 0.9461, norm(x): 0.8068, norm(y): 0.9945, norm:0.7142, tok/sec: 100246.61, flops:105.22, batch-reuse:1
@ 6513 train 4.0594 , allloss: 4.0594, dt: 1312.01ms, fracRes: 0.7113, norm(attn): 0.1455, norm(output): 0.9463, norm(x): 0.8070, norm(y): 0.9944, norm:0.7173, tok/sec: 99901.60, flops:104.86, batch-reuse:1
@ 6514 train 4.0778 , allloss: 4.0779, dt: 1285.03ms, fracRes: 0.7114, norm(attn): 0.1484, norm(output): 0.9453, norm(x): 0.8055, norm(y): 0.9944, norm:0.6426, tok/sec: 101999.20, flops:107.06, batch-reuse:1
@ 6515 train 4.1252 , allloss: 4.1255, dt: 1303.03ms, fracRes: 0.7112, norm(attn): 0.1475, norm(output): 0.9454, norm(x): 0.8056, norm(y): 0.9943, norm:0.7863, tok/sec: 100589.92, flops:105.58, batch-reuse:1
@ 6516 train 4.0824 , allloss: 4.0825, dt: 1283.92ms, fracRes: 0.7110, norm(attn): 0.1475, norm(output): 0.9455, norm(x): 0.8064, norm(y): 0.9944, norm:0.7473, tok/sec: 102087.22, flops:107.15, batch-reuse:1
@ 6517 train 4.0699 , allloss: 4.0700, dt: 1286.54ms, fracRes: 0.7112, norm(attn): 0.1475, norm(output): 0.9459, norm(x): 0.8068, norm(y): 0.9944, norm:0.8192, tok/sec: 101879.29, flops:106.94, batch-reuse:1
@ 6518 train 4.0396 , allloss: 4.0396, dt: 1300.56ms, fracRes: 0.7109, norm(attn): 0.1484, norm(output): 0.9459, norm(x): 0.8071, norm(y): 0.9941, norm:0.7379, tok/sec: 100781.48, flops:105.78, batch-reuse:1
@ 6519 train 4.1761 , allloss: 4.1768, dt: 1300.92ms, fracRes: 0.7111, norm(attn): 0.1484, norm(output): 0.9454, norm(x): 0.8057, norm(y): 0.9942, norm:0.7053, tok/sec: 100753.26, flops:105.75, batch-reuse:1
@ 6520 train 4.0499 , allloss: 4.0508, dt: 1290.91ms, fracRes: 0.7113, norm(attn): 0.1484, norm(output): 0.9452, norm(x): 0.8056, norm(y): 0.9943, norm:0.7232, tok/sec: 101534.29, flops:106.57, batch-reuse:1
@ 6521 train 4.1211 , allloss: 4.1211, dt: 1295.62ms, fracRes: 0.7114, norm(attn): 0.1475, norm(output): 0.9457, norm(x): 0.8067, norm(y): 0.9943, norm:0.5614, tok/sec: 101165.78, flops:106.19, batch-reuse:1
@ 6522 train 4.0443 , allloss: 4.0444, dt: 1322.18ms, fracRes: 0.7115, norm(attn): 0.1455, norm(output): 0.9459, norm(x): 0.8072, norm(y): 0.9941, norm:0.6611, tok/sec: 99133.59, flops:104.05, batch-reuse:1
@ 6523 train 4.0341 , allloss: 4.0342, dt: 1328.91ms, fracRes: 0.7114, norm(attn): 0.1465, norm(output): 0.9458, norm(x): 0.8071, norm(y): 0.9939, norm:0.6363, tok/sec: 98631.01, flops:103.53, batch-reuse:1
@ 6524 train 4.1375 , allloss: 4.1376, dt: 1340.71ms, fracRes: 0.7114, norm(attn): 0.1465, norm(output): 0.9461, norm(x): 0.8073, norm(y): 0.9940, norm:0.7320, tok/sec: 97763.41, flops:102.62, batch-reuse:1
@ 6525 train 4.0654 , allloss: 4.0661, dt: 1318.51ms, fracRes: 0.7118, norm(attn): 0.1465, norm(output): 0.9455, norm(x): 0.8060, norm(y): 0.9941, norm:0.5884, tok/sec: 99409.54, flops:104.34, batch-reuse:1
@ 6526 train 4.2857 , allloss: 4.2858, dt: 1279.81ms, fracRes: 0.7122, norm(attn): 0.1475, norm(output): 0.9458, norm(x): 0.8058, norm(y): 0.9943, norm:0.9022, tok/sec: 102415.53, flops:107.50, batch-reuse:1
@ 6527 train 4.0946 , allloss: 4.0946, dt: 1301.58ms, fracRes: 0.7116, norm(attn): 0.1484, norm(output): 0.9455, norm(x): 0.8065, norm(y): 0.9943, norm:0.8961, tok/sec: 100702.58, flops:105.70, batch-reuse:1
@ 6528 train 4.0969 , allloss: 4.0970, dt: 1291.97ms, fracRes: 0.7114, norm(attn): 0.1484, norm(output): 0.9455, norm(x): 0.8065, norm(y): 0.9941, norm:0.6782, tok/sec: 101451.20, flops:106.49, batch-reuse:1
@ 6529 train 4.0753 , allloss: 4.0759, dt: 1290.87ms, fracRes: 0.7114, norm(attn): 0.1484, norm(output): 0.9456, norm(x): 0.8066, norm(y): 0.9938, norm:0.6016, tok/sec: 101537.67, flops:106.58, batch-reuse:1
@ 6530 train 4.0395 , allloss: 4.0396, dt: 1349.06ms, fracRes: 0.7114, norm(attn): 0.1484, norm(output): 0.9458, norm(x): 0.8067, norm(y): 0.9937, norm:0.7206, tok/sec: 97157.83, flops:101.98, batch-reuse:1
@ 6531 train 3.9755 , allloss: 3.9758, dt: 1326.86ms, fracRes: 0.7115, norm(attn): 0.1465, norm(output): 0.9457, norm(x): 0.8071, norm(y): 0.9938, norm:0.6435, tok/sec: 98783.40, flops:103.69, batch-reuse:1
@ 6532 train 4.1091 , allloss: 4.1091, dt: 1341.41ms, fracRes: 0.7117, norm(attn): 0.1494, norm(output): 0.9453, norm(x): 0.8058, norm(y): 0.9942, norm:0.7251, tok/sec: 97711.91, flops:102.56, batch-reuse:1
@ 6533 train 4.1945 , allloss: 4.1945, dt: 1312.55ms, fracRes: 0.7118, norm(attn): 0.1465, norm(output): 0.9457, norm(x): 0.8069, norm(y): 0.9940, norm:0.8657, tok/sec: 99860.34, flops:104.82, batch-reuse:1
@ 6534 train 4.0174 , allloss: 4.0215, dt: 1312.31ms, fracRes: 0.7118, norm(attn): 0.1475, norm(output): 0.9455, norm(x): 0.8066, norm(y): 0.9940, norm:0.6558, tok/sec: 99878.95, flops:104.84, batch-reuse:1
@ 6535 train 4.0369 , allloss: 4.0370, dt: 1296.19ms, fracRes: 0.7117, norm(attn): 0.1484, norm(output): 0.9455, norm(x): 0.8064, norm(y): 0.9939, norm:0.6055, tok/sec: 101120.77, flops:106.14, batch-reuse:1
@ 6536 train 4.1018 , allloss: 4.1019, dt: 1318.82ms, fracRes: 0.7116, norm(attn): 0.1494, norm(output): 0.9461, norm(x): 0.8075, norm(y): 0.9940, norm:0.6323, tok/sec: 99385.85, flops:104.32, batch-reuse:1
@ 6537 train 4.0805 , allloss: 4.0806, dt: 1322.99ms, fracRes: 0.7116, norm(attn): 0.1465, norm(output): 0.9459, norm(x): 0.8072, norm(y): 0.9940, norm:0.7104, tok/sec: 99072.65, flops:103.99, batch-reuse:1
@ 6538 train 3.9956 , allloss: 3.9957, dt: 1349.38ms, fracRes: 0.7116, norm(attn): 0.1484, norm(output): 0.9455, norm(x): 0.8065, norm(y): 0.9940, norm:0.6287, tok/sec: 97134.96, flops:101.96, batch-reuse:1
@ 6539 train 4.0677 , allloss: 4.0678, dt: 1296.38ms, fracRes: 0.7118, norm(attn): 0.1465, norm(output): 0.9457, norm(x): 0.8070, norm(y): 0.9938, norm:0.6530, tok/sec: 101105.93, flops:106.12, batch-reuse:1
@ 6540 train 4.0922 , allloss: 4.0928, dt: 1278.74ms, fracRes: 0.7116, norm(attn): 0.1465, norm(output): 0.9457, norm(x): 0.8072, norm(y): 0.9939, norm:0.6829, tok/sec: 102500.98, flops:107.59, batch-reuse:1
@ 6541 train 4.0963 , allloss: 4.0967, dt: 1315.12ms, fracRes: 0.7115, norm(attn): 0.1465, norm(output): 0.9456, norm(x): 0.8069, norm(y): 0.9941, norm:0.5914, tok/sec: 99665.74, flops:104.61, batch-reuse:1
@ 6542 train 4.0728 , allloss: 4.0728, dt: 1305.27ms, fracRes: 0.7115, norm(attn): 0.1465, norm(output): 0.9456, norm(x): 0.8071, norm(y): 0.9941, norm:0.7622, tok/sec: 100417.56, flops:105.40, batch-reuse:1
@ 6543 train 4.0308 , allloss: 4.0309, dt: 1303.99ms, fracRes: 0.7116, norm(attn): 0.1465, norm(output): 0.9457, norm(x): 0.8073, norm(y): 0.9940, norm:0.6066, tok/sec: 100516.41, flops:105.51, batch-reuse:1
@ 6544 train 4.0727 , allloss: 4.0728, dt: 1304.67ms, fracRes: 0.7117, norm(attn): 0.1465, norm(output): 0.9458, norm(x): 0.8068, norm(y): 0.9938, norm:0.7108, tok/sec: 100463.71, flops:105.45, batch-reuse:1
@ 6545 train 3.9623 , allloss: 3.9660, dt: 1314.97ms, fracRes: 0.7113, norm(attn): 0.1484, norm(output): 0.9457, norm(x): 0.8065, norm(y): 0.9935, norm:0.6203, tok/sec: 99677.09, flops:104.62, batch-reuse:1
@ 6546 train 4.1000 , allloss: 4.1010, dt: 1308.27ms, fracRes: 0.7113, norm(attn): 0.1475, norm(output): 0.9458, norm(x): 0.8071, norm(y): 0.9935, norm:0.6340, tok/sec: 100186.89, flops:105.16, batch-reuse:1
@ 6547 train 3.9564 , allloss: 3.9571, dt: 1313.79ms, fracRes: 0.7115, norm(attn): 0.1484, norm(output): 0.9455, norm(x): 0.8069, norm(y): 0.9938, norm:0.6340, tok/sec: 99766.35, flops:104.72, batch-reuse:1
@ 6548 train 3.9920 , allloss: 3.9923, dt: 1300.12ms, fracRes: 0.7117, norm(attn): 0.1475, norm(output): 0.9454, norm(x): 0.8070, norm(y): 0.9942, norm:0.5668, tok/sec: 100814.97, flops:105.82, batch-reuse:1
@ 6549 train 3.9987 , allloss: 3.9988, dt: 1293.00ms, fracRes: 0.7116, norm(attn): 0.1475, norm(output): 0.9456, norm(x): 0.8074, norm(y): 0.9942, norm:0.6352, tok/sec: 101370.27, flops:106.40, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0082, -0.0293, -0.0123,  ..., -0.0195, -0.0003,  0.0188],
        [ 0.0119, -0.0320, -0.0152,  ..., -0.0661, -0.0126,  0.0143],
        [ 0.0035, -0.0446,  0.0094,  ..., -0.0124,  0.0093,  0.0319],
        ...,
        [ 0.0227,  0.0600, -0.0204,  ..., -0.0009, -0.0316,  0.0125],
        [-0.0131, -0.0135,  0.0563,  ...,  0.0119,  0.0483,  0.0170],
        [ 0.0109, -0.0210,  0.0470,  ..., -0.0114,  0.0532, -0.0145]], device='cuda:0', requires_grad=True)
K: tensor([ 5.2188, -2.7500,  2.0781,  2.7656, -4.6562,  2.7656, -0.1777,  5.9062, -4.5938, -0.9570, -2.6562, -4.3125,  4.5938, -3.3594,  0.2461, -0.0381, -0.2637, -4.2188,  4.8438, -5.4062,  5.0938,  2.8125, -5.9062, -0.4453, -0.6367, -1.0312,  2.8906, -3.3438, -4.8750, -3.0469,  5.9375,  0.2080,
         2.7500,  4.3125, -0.8398, -3.8438,  2.2969,  2.5469, -2.7656, -3.2656,  4.6250, -1.8906, -0.6484, -1.7266, -3.9062, -1.4766,  0.1982,  4.0938, -0.5859,  0.3945,  3.7500, -4.2500, -5.1562,  4.6562,  3.2969, -1.7656,  3.7344,  1.8281, -0.3594, -2.3438, -1.8203,  0.8633, -0.7422, -1.8125],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0731,  0.0689, -0.0013,  ..., -0.0163, -0.0214, -0.0047],
        [-0.0569,  0.0795,  0.0052,  ...,  0.0212,  0.0029,  0.0178],
        [-0.0670,  0.0663, -0.0134,  ..., -0.0417, -0.0513,  0.0116],
        ...,
        [ 0.0306, -0.0077, -0.0100,  ...,  0.0138, -0.0112,  0.0080],
        [-0.0281,  0.0064, -0.0250,  ...,  0.0423,  0.0082,  0.0302],
        [-0.0091,  0.0338,  0.0126,  ...,  0.0058, -0.0046, -0.0420]], device='cuda:0', requires_grad=True)
Q: tensor([-1.6797,  5.9375, -6.5938, -4.1875,  3.3125, -4.4688, -2.0469, -4.7500,  4.8438, -4.9062,  1.3984,  3.9844, -6.0312,  4.5312, -6.2500,  3.7031,  3.7812,  4.5000, -3.8750,  5.8750, -3.5625, -4.6250,  5.1562, -4.3438, -2.1719, -4.2188, -5.8438,  1.9375,  3.6406,  7.2500, -4.3125, -5.5000,
        -7.1562, -3.7500, -2.6562,  1.8906, -7.8438, -3.8281,  4.8125,  2.2969, -2.3906,  0.3457,  5.0312, -1.3281,  4.3125,  2.9375, -5.3125, -5.5000,  5.7812,  0.5820, -3.0312,  5.2812,  4.2500, -4.8438, -2.5938,  0.0981, -2.4688,  2.3750, -1.5000,  8.0000,  1.3906, -3.6406,  4.5625,  5.6562],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[   0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000],
        [   0.0000,   60.2500,   77.0000,   85.0000,   66.0000,   64.5000,   53.5000,   68.0000,   62.7500,   52.5000,   61.7500,   60.5000,   55.2500,   59.7500,   65.0000],
        [   0.0000,  -44.0000,  -63.0000,  -67.5000,  -58.0000,  -57.0000,  -45.0000,  -50.7500,  -52.5000,  -44.0000,  -55.2500,  -45.0000,  -38.0000,  -50.7500,  -53.2500],
        [   0.0000,  -71.5000, -105.5000, -121.5000, -105.0000, -101.0000,  -80.5000,  -86.0000,  -94.5000,  -78.0000,  -99.0000,  -80.5000,  -64.0000,  -91.5000,  -95.5000],
        [   0.0000,  -87.0000, -128.0000, -148.0000, -130.0000, -126.0000,  -99.0000, -103.0000, -116.0000,  -95.0000, -123.5000,  -95.0000,  -74.5000, -112.5000, -116.5000],
        [   0.0000,  -70.5000, -103.5000, -117.0000, -102.0000,  -99.5000,  -78.5000,  -84.0000,  -92.0000,  -76.0000,  -96.5000,  -76.5000,  -62.0000,  -89.0000,  -92.5000],
        [   0.0000,  -69.0000, -102.5000, -116.0000, -102.0000,  -99.5000,  -78.0000,  -82.0000,  -91.0000,  -75.0000,  -96.5000,  -76.0000,  -60.0000,  -88.5000,  -92.0000],
        [   0.0000,  -51.7500,  -77.0000,  -86.5000,  -76.5000,  -73.5000,  -59.2500,  -63.2500,  -69.0000,  -57.5000,  -72.0000,  -58.5000,  -47.5000,  -66.5000,  -69.5000],
        [   0.0000,  -72.0000, -106.5000, -122.5000, -107.0000, -104.5000,  -82.5000,  -86.0000,  -96.0000,  -78.5000, -102.0000,  -78.5000,  -61.2500,  -93.0000,  -96.0000],
        [   0.0000,  -75.0000, -106.5000, -121.0000, -103.0000, -100.0000,  -79.5000,  -87.0000,  -93.5000,  -77.0000,  -97.5000,  -80.5000,  -64.5000,  -90.5000,  -95.0000],
        [   0.0000,  -75.0000, -110.0000, -126.5000, -109.5000, -107.0000,  -83.0000,  -87.5000,  -98.0000,  -80.0000, -104.5000,  -80.0000,  -62.5000,  -95.0000,  -98.5000],
        [   0.0000,  -58.0000,  -83.5000,  -93.5000,  -80.5000,  -78.0000,  -61.7500,  -68.0000,  -72.5000,  -60.2500,  -76.0000,  -62.7500,  -51.0000,  -70.5000,  -73.5000],
        [   0.0000,  -45.0000,  -65.0000,  -72.5000,  -62.7500,  -60.5000,  -48.5000,  -53.2500,  -57.0000,  -47.2500,  -58.7500,  -49.5000,  -40.7500,  -55.0000,  -57.2500],
        [   0.0000,  -70.0000, -102.0000, -117.0000, -101.5000,  -99.5000,  -77.5000,  -82.0000,  -91.5000,  -74.5000,  -97.0000,  -74.5000,  -58.5000,  -89.0000,  -91.5000],
        [   0.0000,  -65.5000,  -95.0000, -109.0000,  -93.5000,  -90.5000,  -71.5000,  -77.0000,  -84.0000,  -69.5000,  -88.5000,  -71.0000,  -56.2500,  -81.5000,  -85.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9167],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3438,     0.6562,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7578,     0.0322,     0.2080,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9766,     0.0054,     0.0005,     0.0166,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0022,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0081,     0.0000,     0.0000,     0.0000,     0.0004,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9414,     0.0486,     0.0003,     0.0000,     0.0001,     0.0004,     0.0084,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9062,     0.0442,     0.0145,     0.0004,     0.0002,     0.0004,     0.0085,     0.0258,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0084,     0.0000,     0.0000,     0.0000,     0.0001,     0.0003,     0.0001,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6641,     0.0542,     0.0072,     0.0003,     0.0001,     0.0003,     0.0067,     0.0018,     0.0005,     0.2637,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9805,     0.0123,     0.0012,     0.0001,     0.0002,     0.0003,     0.0036,     0.0010,     0.0003,     0.0008,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8008,     0.0128,     0.0015,     0.0003,     0.0006,     0.0003,     0.0014,     0.0015,     0.0004,     0.0084,     0.0010,     0.1699,     0.0000,     0.0000,     0.0000],
        [    0.8242,     0.0188,     0.0011,     0.0010,     0.0020,     0.0034,     0.0142,     0.0194,     0.0077,     0.0001,     0.0020,     0.0010,     0.1064,     0.0000,     0.0000],
        [    0.9453,     0.0505,     0.0003,     0.0000,     0.0002,     0.0007,     0.0014,     0.0009,     0.0012,     0.0000,     0.0001,     0.0000,     0.0002,     0.0001,     0.0000],
        [    0.4570,     0.1074,     0.0012,     0.0001,     0.0000,     0.0003,     0.0104,     0.0020,     0.0015,     0.0022,     0.0023,     0.0002,     0.0006,     0.0006,     0.4160]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0250, -0.0009, -0.0066,  ..., -0.0008,  0.0125,  0.0033],
        [ 0.0033, -0.0043,  0.0330,  ..., -0.0169, -0.0616,  0.0245],
        [ 0.0029,  0.0136, -0.0233,  ..., -0.0074,  0.0187,  0.0268],
        ...,
        [ 0.0455,  0.0133,  0.0421,  ...,  0.0288,  0.0556,  0.0007],
        [-0.0012,  0.0197, -0.0591,  ..., -0.0380,  0.0255,  0.0470],
        [-0.0260, -0.0298, -0.0257,  ..., -0.0179, -0.0084,  0.0347]], device='cuda:0', requires_grad=True)
K: tensor([    -0.8633,     -1.2266,      0.2461,     -0.6523,     -1.9531,     -1.7734,     -1.8906,     -1.4609,     -2.4375,     -1.4297,      0.8867,      1.6484,      0.9141,      2.9219,      1.0547,     -0.1309,     -0.0491,     -0.0036,     -0.7852,     -0.4160,     -1.8984,     -2.8750,
            -0.8633,      0.1289,      0.6641,     -1.0547,     -0.7969,     -2.5781,      2.5781,      1.2812,      0.1035,     -0.7070,     -1.2812,     -3.5156,     -0.4082,     -1.8203,     -0.4648,      1.8125,      0.5117,      0.0297,     -1.7188,      0.7383,      0.0659,      3.8594,
            -1.5000,     -2.6094,     -2.7812,     -0.7422,     -1.3906,     -2.1562,      2.3594,      0.7500,      0.5430,      0.8242,     -0.4082,      0.3184,      0.8359,      3.0625,      1.7188,     -2.8594,     -3.2188,     -0.0923,      2.7969,     -1.2812], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[ 0.0256,  0.0029, -0.0096,  ..., -0.0130,  0.0391, -0.0172],
        [-0.0011,  0.0449,  0.0143,  ..., -0.0731, -0.0245,  0.0320],
        [-0.0017, -0.0233,  0.0266,  ...,  0.0104, -0.0047,  0.0177],
        ...,
        [ 0.0196, -0.0067, -0.0277,  ..., -0.0046,  0.0674,  0.0238],
        [ 0.0267, -0.0046, -0.0052,  ...,  0.0324,  0.0050, -0.0014],
        [-0.0304, -0.0027, -0.0446,  ..., -0.0288,  0.0201,  0.0547]], device='cuda:0', requires_grad=True)
Q: tensor([-0.0413,  0.0618,  2.8438, -1.5625,  2.6250,  0.1436,  0.9688, -1.8203, -2.7656,  0.7969, -1.8906,  1.7812, -0.2266, -2.3438,  2.8281,  0.7656,  2.8438, -0.7891, -1.9844,  0.3789,  0.8047,  0.3730,  2.5469,  0.2490, -0.0378,  1.0156, -0.0427,  0.2949,  0.8516, -3.1719, -0.2969,  1.2891,
        -1.1328,  1.8516, -0.5117,  0.5039,  0.0962,  4.4062, -0.4043,  0.6094,  0.1660,  1.1484, -1.9453, -0.3594,  1.8438, -1.5859,  0.5898, -3.3750,  3.8906, -2.8438,  1.0625,  1.9922, -0.9219,  1.3281, -1.5625, -2.9688, -0.1104, -1.6484,  0.4297, -0.9336, -2.3594,  0.6211, -2.4062, -0.1670],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000,   0.6445,  -5.3438,  -5.2188,  -6.0312,  -4.0000,  -2.4375,  -3.8594,  -3.0156,  -5.6250,  -6.4062,  -4.0000,  -4.2188,  -3.2656,  -6.8438],
        [  0.0000,  -3.1562,  -1.2969,  -6.5000,  -5.3125,  -7.0000,  -4.4375,  -2.8750,  -5.5000,  -5.0312,  -5.1875,  -7.0000,  -6.0312,  -6.7812,  -6.0312],
        [  0.0000,  -5.1875,  -7.5000,  -4.0625,  -7.7812,  -8.1250,  -9.0000,  -7.1250,  -8.0625, -10.0000,  -8.8750,  -8.8750,  -7.8438,  -9.1250, -11.1250],
        [  0.0000,  -6.1250,  -8.7500, -10.6875, -10.3750, -10.5000,  -9.6250,  -9.8125, -10.8750, -12.0625, -11.8125, -13.2500,  -9.8750, -11.6875, -14.0625],
        [  0.0000,  -4.8125, -10.4375, -10.0625, -10.8750,  -7.7500,  -6.2188,  -8.7500,  -9.1250,  -9.5000, -11.6250, -11.0000,  -9.5625, -10.1250, -11.6250],
        [  0.0000,  -2.9688,  -8.1875, -12.0000,  -9.6875,  -7.7812,  -4.7188,  -5.9375,  -9.0625, -10.4375,  -9.8125, -10.1875,  -7.2188, -10.1250, -10.1875],
        [  0.0000,  -3.0156,  -4.1250,  -7.8438,  -8.2500,  -7.8125,  -4.6562,  -3.5625,  -8.2500,  -8.8125,  -7.2812,  -9.7500,  -4.9375,  -8.1250,  -9.3125],
        [  0.0000,  -4.7500, -10.1250, -11.4375, -10.7500,  -9.0000,  -8.2500,  -9.1875,  -9.6250, -11.2500, -11.5625, -11.8125,  -9.3750,  -9.0000, -11.9375],
        [  0.0000,  -2.5000,  -4.5312,  -7.6562,  -8.5000,  -7.6875,  -4.5938,  -5.9062,  -7.2812,  -0.9258,  -8.1875,  -6.9688,  -8.3750,  -8.3750,  -7.0938],
        [  0.0000,  -4.3750,  -6.6562,  -9.1875,  -8.3125,  -8.1250,  -5.5938,  -6.8750,  -8.2500,  -7.1875,  -9.7500,  -8.0625,  -8.0625,  -8.9375,  -9.7500],
        [  0.0000,  -4.1562,  -6.2500,  -8.0625,  -7.1562,  -8.0625,  -6.3750,  -6.2500,  -7.5312,  -4.5625,  -6.6562,  -1.5547,  -6.5938,  -8.5000,  -7.8125],
        [  0.0000,  -3.7812,  -6.6562,  -6.6875,  -6.0312,  -5.5000,  -4.0625,  -3.7500,  -4.6562,  -8.6875,  -6.0312,  -6.7188,  -2.0469,  -5.0938,  -7.8750],
        [  0.0000,  -2.9219,  -7.9688, -10.1250,  -8.6250,  -7.2188,  -6.5312,  -6.9375,  -6.6875, -10.1250,  -9.5625,  -9.9375,  -8.5000,  -9.1250,  -9.5000],
        [  0.0000,  -1.4453,  -5.9688,  -8.4375,  -9.8125,  -7.3438,  -3.7812,  -5.4375,  -5.7188,  -5.3438,  -5.2812,  -7.7500,  -6.6875,  -6.6250,  -0.0942]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7174],
        [0.6053],
        [0.4900],
        [0.5647],
        [0.5544],
        [0.5388],
        [0.4716],
        [0.4352],
        [0.3968],
        [0.3383],
        [0.3812],
        [0.3565],
        [0.3418],
        [0.2729]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0246, -0.0050,  0.0054,  ...,  0.0123, -0.0566, -0.0062],
        [-0.0410, -0.0235,  0.0064,  ...,  0.0267, -0.0542, -0.0212],
        [ 0.0155,  0.0087, -0.0099,  ...,  0.0343,  0.0189, -0.0045],
        ...,
        [-0.0085, -0.0132, -0.0059,  ...,  0.0446, -0.0236, -0.0109],
        [-0.0216, -0.0134,  0.0134,  ...,  0.0139,  0.0019, -0.0036],
        [ 0.0030, -0.0305, -0.0247,  ...,  0.0440, -0.0280, -0.0489]], device='cuda:0', requires_grad=True)
K: tensor([ 3.2344, -3.9531, -3.1094, -3.9375,  4.7188, -3.8594,  4.7812,  3.5781,  2.7188, -4.2500,  3.2656, -4.0000, -4.1562,  4.4688,  2.4062, -2.8906,  2.5000,  4.3750, -0.2051, -4.0938,  4.5625,  5.0312,  4.2812, -2.1250, -4.2500,  4.8750, -3.3125, -4.1250, -3.1406,  3.1875, -4.3125,  2.8438,
         3.5156, -3.1094, -4.0625,  1.4844,  1.5859, -3.5312,  4.0938, -3.8750, -3.6094,  2.2188,  3.5000, -3.5469, -2.3594,  3.3750, -4.2188,  3.3594, -4.6562, -4.3750, -4.4375,  3.0781,  2.6875,  4.0000,  3.2500, -4.3750, -4.4688,  3.0156, -1.7422, -2.9062,  3.3906,  3.6562, -1.9922,  2.6875],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[     0.0103,      0.0086,      0.0096,  ...,     -0.0001,      0.0153,      0.0320],
        [     0.0373,      0.0211,     -0.0166,  ...,     -0.0328,      0.0024,      0.0059],
        [    -0.0001,     -0.0203,     -0.0035,  ...,     -0.0203,      0.0356,      0.0226],
        ...,
        [    -0.0113,     -0.0054,     -0.0432,  ...,     -0.0105,      0.0343,      0.0053],
        [     0.0178,      0.0017,     -0.0173,  ...,      0.0196,     -0.0183,     -0.0114],
        [    -0.0031,      0.0030,      0.0050,  ...,     -0.0202,     -0.0010,      0.0429]], device='cuda:0', requires_grad=True)
Q: tensor([-2.9062,  3.8906,  4.4062,  4.1562, -5.0625,  4.9375, -4.1562, -4.8125, -3.2188,  3.9062, -4.8750,  4.6875,  4.1562, -4.0938, -3.8906,  4.3750, -2.6719, -5.4375,  0.8906,  4.9688, -5.0938, -4.7500, -5.2812,  2.3594,  5.6250, -5.0000,  3.3125,  4.4375,  3.7188, -4.5000,  3.9531, -3.4688,
        -4.0938,  2.5938,  4.7812, -2.2969, -1.4609,  3.2188, -5.5625,  3.5156,  4.0000, -2.2969, -3.9062,  4.4062,  2.4375, -4.9688,  4.3125, -3.4688,  4.0938,  5.4062,  5.6562, -5.0000, -3.3281, -5.0312, -3.2031,  4.8438,  4.7812, -3.0312,  2.0781,  3.6094, -4.0000, -4.6250,  2.2344, -2.6562],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[   0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000],
        [   0.0000,  -56.0000,  -63.7500, -110.0000,  -86.0000,  -99.0000,  -81.5000,  -89.5000,  -79.5000,  -92.5000,  -77.5000,  -86.0000,  -89.5000,  -75.5000,  -86.5000],
        [   0.0000,  -63.0000,  -73.0000, -127.0000,  -97.5000, -112.5000,  -93.0000, -103.5000,  -90.5000, -106.5000,  -88.5000,  -99.0000, -103.0000,  -86.5000,  -99.0000],
        [   0.0000, -105.0000, -122.5000, -215.0000, -164.0000, -189.0000, -156.0000, -175.0000, -152.0000, -180.0000, -149.0000, -166.0000, -173.0000, -145.0000, -166.0000],
        [   0.0000,  -71.0000,  -81.0000, -142.0000, -110.0000, -126.5000, -104.5000, -115.5000, -101.5000, -119.0000,  -99.0000, -110.0000, -115.5000,  -97.0000, -110.0000],
        [   0.0000,  -87.0000,  -99.5000, -175.0000, -135.0000, -156.0000, -128.0000, -143.0000, -124.5000, -146.0000, -121.5000, -135.0000, -142.0000, -119.0000, -136.0000],
        [   0.0000,  -70.5000,  -81.0000, -142.0000, -110.5000, -127.5000, -105.0000, -116.5000, -102.0000, -119.5000,  -99.5000, -110.5000, -115.5000,  -97.5000, -111.0000],
        [   0.0000,  -86.0000, -100.0000, -176.0000, -135.0000, -156.0000, -128.0000, -144.0000, -124.5000, -147.0000, -121.5000, -136.0000, -143.0000, -118.5000, -136.0000],
        [   0.0000,  -68.0000,  -78.5000, -137.0000, -106.0000, -122.0000, -100.5000, -112.0000,  -98.0000, -115.0000,  -95.5000, -106.0000, -111.5000,  -93.5000, -106.5000],
        [   0.0000,  -81.0000,  -94.5000, -165.0000, -126.0000, -146.0000, -120.0000, -134.0000, -116.0000, -139.0000, -113.5000, -126.5000, -134.0000, -111.0000, -127.5000],
        [   0.0000,  -69.0000,  -79.5000, -139.0000, -108.0000, -124.0000, -102.0000, -113.5000,  -99.5000, -117.0000,  -97.5000, -108.0000, -112.5000,  -95.5000, -108.5000],
        [   0.0000,  -76.0000,  -88.0000, -154.0000, -117.5000, -136.0000, -112.0000, -125.5000, -108.5000, -129.0000, -106.5000, -118.5000, -125.0000, -104.0000, -119.0000],
        [   0.0000,  -83.5000,  -96.5000, -169.0000, -130.0000, -150.0000, -123.5000, -139.0000, -120.0000, -142.0000, -117.5000, -130.0000, -138.0000, -114.5000, -131.0000],
        [   0.0000,  -65.0000,  -75.0000, -132.0000, -102.0000, -117.5000,  -96.5000, -107.5000,  -94.0000, -110.5000,  -92.0000, -102.0000, -107.0000,  -90.0000, -102.5000],
        [   0.0000,  -74.0000,  -86.0000, -151.0000, -116.0000, -134.0000, -110.0000, -123.0000, -107.0000, -127.0000, -104.5000, -116.0000, -122.0000, -102.0000, -117.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0328,  0.0146,  0.0169,  ...,  0.0050, -0.0009, -0.0200],
        [-0.0031,  0.0157,  0.0177,  ...,  0.0246,  0.0051,  0.0235],
        [ 0.0261,  0.0038, -0.0007,  ..., -0.0008,  0.0317,  0.0023],
        ...,
        [-0.0182, -0.0235, -0.0120,  ...,  0.0109, -0.0212,  0.0090],
        [-0.0070,  0.0053, -0.0176,  ..., -0.0149, -0.0241, -0.0206],
        [ 0.0197, -0.0001, -0.0039,  ...,  0.0113,  0.0106,  0.0051]], device='cuda:0', requires_grad=True)
K: tensor([-1.9531,  0.4824, -2.1875,  1.5781, -1.6016, -2.2656, -1.0156,  2.0938, -0.4062, -0.5352,  0.4609,  0.6016, -1.2422, -2.3281,  1.7188,  1.4062,  2.2500, -1.8828, -2.0469,  1.3359,  1.5000, -1.6250, -2.2812,  2.6719, -1.1641,  2.4219, -1.0234, -1.7344,  0.9180, -1.4375,  0.3086, -1.7031,
        -1.3750, -1.9219,  1.9922, -2.0938, -1.7500, -0.1621,  2.1719,  1.4766, -2.1719, -1.1250,  0.4648, -1.7969,  1.6797,  2.5156, -0.1406, -1.5938, -2.0312,  1.7578,  2.4844,  1.0312,  0.6016, -2.0625, -0.8594, -1.7578,  1.6250,  1.7734, -1.7109, -2.0312, -1.1172,  2.2188, -0.2061, -2.2812],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0241,  0.0114, -0.0048,  ...,  0.0151, -0.0183, -0.0164],
        [-0.0087, -0.0076,  0.0062,  ...,  0.0071, -0.0143, -0.0013],
        [ 0.0018,  0.0092, -0.0017,  ..., -0.0010,  0.0137,  0.0021],
        ...,
        [-0.0207,  0.0051, -0.0076,  ..., -0.0105,  0.0216,  0.0079],
        [-0.0276,  0.0249, -0.0041,  ...,  0.0037,  0.0013, -0.0223],
        [ 0.0020, -0.0091, -0.0328,  ...,  0.0016, -0.0038,  0.0129]], device='cuda:0', requires_grad=True)
Q: tensor([ 2.5781, -1.4453,  2.0312, -0.5508,  0.4277,  2.8750,  1.1406, -3.1250, -0.6406, -0.1865,  0.0923, -0.1118,  1.6719,  1.5625, -2.1094, -1.8984, -2.7344,  2.2500,  1.4062, -2.9688, -1.6016,  2.7188,  3.1094, -2.6875,  2.1719, -2.9219,  0.2773,  1.0234,  0.2578,  0.7500,  0.2598,  1.7734,
         0.2295,  2.6562, -1.7500,  2.3125,  2.4844, -0.7305, -2.3750, -2.2500,  3.2500, -0.7617, -1.2734,  2.4844, -1.7578, -1.9844, -1.5547,  0.8633,  0.7969, -1.9062, -2.2031,  0.3457,  1.4141,  2.6875,  0.9531,  2.7500, -3.0781, -2.1562,  1.8984,  1.6406,  0.4941, -3.0938,  2.0312,  1.9453],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000, -17.8750, -19.3750, -17.1250, -17.7500, -17.6250, -16.7500, -18.5000, -19.0000, -19.7500, -20.2500, -20.8750, -20.3750, -19.3750, -21.0000],
        [  0.0000, -19.6250, -21.2500, -18.7500, -19.5000, -19.2500, -18.3750, -20.2500, -20.8750, -21.6250, -22.2500, -22.8750, -22.2500, -21.2500, -23.1250],
        [  0.0000, -16.7500, -18.1250, -15.9375, -16.6250, -16.3750, -15.8125, -17.2500, -17.7500, -18.2500, -18.8750, -19.3750, -18.8750, -18.1250, -19.5000],
        [  0.0000, -17.0000, -18.3750, -16.3750, -17.1250, -16.8750, -16.1250, -17.7500, -18.2500, -18.8750, -19.5000, -19.8750, -19.5000, -18.6250, -20.1250],
        [  0.0000, -16.5000, -17.8750, -15.7500, -16.5000, -16.2500, -15.6250, -17.1250, -17.6250, -18.1250, -18.7500, -19.2500, -18.7500, -17.8750, -19.2500],
        [  0.0000, -15.7500, -17.0000, -14.8750, -15.6250, -15.3750, -14.8125, -16.2500, -16.6250, -17.1250, -17.7500, -18.2500, -17.7500, -17.0000, -18.2500],
        [  0.0000, -17.7500, -19.1250, -17.0000, -17.7500, -17.5000, -16.8750, -18.5000, -19.0000, -19.5000, -20.2500, -20.8750, -20.2500, -19.3750, -20.8750],
        [  0.0000, -17.7500, -19.2500, -17.1250, -17.8750, -17.7500, -16.8750, -18.6250, -19.1250, -19.6250, -20.3750, -21.0000, -20.3750, -19.5000, -21.0000],
        [  0.0000, -20.1250, -22.0000, -19.6250, -20.6250, -20.3750, -19.3750, -21.3750, -22.0000, -22.7500, -23.5000, -24.1250, -23.3750, -22.3750, -24.2500],
        [  0.0000, -17.8750, -19.3750, -17.2500, -18.0000, -17.8750, -17.0000, -18.7500, -19.2500, -19.7500, -20.5000, -21.1250, -20.5000, -19.6250, -21.2500],
        [  0.0000, -19.0000, -20.7500, -18.3750, -19.2500, -19.0000, -18.1250, -20.0000, -20.6250, -21.1250, -22.0000, -22.6250, -21.8750, -20.8750, -22.7500],
        [  0.0000, -18.2500, -19.7500, -17.5000, -18.3750, -18.1250, -17.3750, -19.1250, -19.6250, -20.1250, -20.8750, -21.5000, -20.8750, -20.0000, -21.5000],
        [  0.0000, -17.8750, -19.5000, -17.2500, -18.1250, -17.8750, -17.0000, -18.7500, -19.3750, -19.8750, -20.6250, -21.1250, -20.5000, -19.7500, -21.2500],
        [  0.0000, -19.6250, -21.2500, -18.8750, -19.6250, -19.5000, -18.6250, -20.5000, -21.1250, -21.6250, -22.5000, -23.1250, -22.3750, -21.5000, -23.2500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.5703,     0.4277,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9570,     0.0369,     0.0056,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0069,     0.4824,     0.1641,     0.0145,     0.3320,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0008,     0.7539,     0.0815,     0.0066,     0.1045,     0.0544,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.5195,     0.0247,     0.0059,     0.0554,     0.0562,     0.3398,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2480,     0.0139,     0.0019,     0.0405,     0.0417,     0.5234,     0.1318,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1113,     0.0111,     0.0012,     0.0386,     0.0684,     0.3984,     0.0977,     0.2734,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1021,     0.0136,     0.0038,     0.0427,     0.0229,     0.2969,     0.1436,     0.3398,     0.0364,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2119,     0.0330,     0.0025,     0.0272,     0.0160,     0.1318,     0.1196,     0.3672,     0.0391,     0.0527,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1279,     0.0189,     0.0085,     0.0515,     0.0304,     0.2148,     0.1562,     0.2695,     0.0498,     0.0344,     0.0378,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0703,     0.0037,     0.0007,     0.0165,     0.0228,     0.3086,     0.0781,     0.4473,     0.0147,     0.0166,     0.0077,     0.0123,     0.0000,     0.0000],
        [    0.0000,     0.0391,     0.0065,     0.0011,     0.0262,     0.0515,     0.2480,     0.0693,     0.2236,     0.0245,     0.0393,     0.0101,     0.0126,     0.2480,     0.0000],
        [    0.0000,     0.0762,     0.0219,     0.0206,     0.0437,     0.0405,     0.1533,     0.1240,     0.1030,     0.0525,     0.0258,     0.0383,     0.0801,     0.1279,     0.0923]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0321, -0.0002,  0.0494,  ...,  0.0179, -0.0175, -0.0002],
        [-0.0015,  0.0668, -0.0239,  ...,  0.0456,  0.0186,  0.0719],
        [-0.0072,  0.0147, -0.0056,  ..., -0.0317,  0.0510, -0.0098],
        ...,
        [ 0.0182,  0.0279,  0.0179,  ..., -0.0259,  0.0137, -0.0072],
        [ 0.0060,  0.0649, -0.0481,  ...,  0.0957, -0.0360,  0.0948],
        [ 0.0512,  0.0440,  0.0235,  ..., -0.0367, -0.0447,  0.0148]], device='cuda:0', requires_grad=True)
K: tensor([    -4.4375,      0.5234,     -7.5938,      0.6055,     -0.0240,     -2.3594,     -5.8125,      7.6875,      5.7812,     -1.5469,      5.0938,     -4.9375,     -4.4375,     -0.0266,      3.0469,      4.0938,      3.6875,     -4.7500,     -4.4375,     -5.0938,     -5.1875,      2.0469,
            -0.1094,     -1.9219,     -4.2188,     -3.2812,     -1.4062,     -5.9688,      4.0625,      1.3438,      3.1094,     -2.5938,     -0.7617,     -6.4375,     -0.0022,      7.5625,      5.1562,      0.7461,      2.3906,     -2.2812,      0.2236,     -4.7188,     -1.1328,     -5.4375,
             0.0591,     -1.7266,      0.7109,     -5.7188,      2.3281,      0.2871,     -0.0258,     -7.0312,     -7.7500,     -6.0625,      1.8281,     -1.2969,     -1.3516,      1.6953,     -3.3125,     -2.3438,      2.4062,     -4.0312,     -1.0156,     -7.0312], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[-0.0236, -0.0071, -0.0134,  ..., -0.0061,  0.0363, -0.0135],
        [-0.0068, -0.0424, -0.0638,  ..., -0.0577,  0.0077, -0.0099],
        [-0.0092,  0.0244, -0.0052,  ..., -0.0027, -0.0370, -0.0414],
        ...,
        [ 0.0297, -0.0179,  0.0338,  ..., -0.0086, -0.0295, -0.0131],
        [ 0.0120,  0.0143,  0.0107,  ..., -0.0404, -0.0213, -0.0124],
        [ 0.0062, -0.0010, -0.0363,  ...,  0.0488,  0.0285, -0.0427]], device='cuda:0', requires_grad=True)
Q: tensor([    -1.7734,      0.7070,     -0.8555,      0.5039,      1.0234,     -0.5625,     -2.1094,     -0.0120,      1.6562,      1.1094,      2.8750,     -1.3672,     -1.2812,     -0.6797,      0.7031,     -0.2676,      0.9102,     -0.6602,      0.4219,      0.8438,     -0.7500,     -0.0684,
            -1.5234,     -2.2969,      0.6914,      0.3008,     -0.0659,     -1.4844,     -2.5938,      0.4844,     -0.2617,      0.1943,      1.2344,     -1.7266,     -0.6445,      2.6250,      0.8125,     -1.3672,      0.6406,     -0.5156,     -0.4375,      2.3750,      0.1709,     -1.1172,
            -1.8750,     -0.1865,      1.1094,      0.0018,      0.0737,     -0.3496,      0.2188,     -1.6250,     -0.1777,     -1.3125,      0.2314,     -1.5000,     -0.3633,     -1.2109,     -0.6836,      0.0505,      1.7812,      0.9023,     -0.9141,     -1.9688], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, 13.1875, 11.0000,  9.9375, 12.5000, 12.9375, 14.2500, 13.2500, 14.3750, 12.0625, 12.3750, 10.5625, 11.6875, 14.2500, 13.0625],
        [ 0.0000, 21.1250, 20.7500, 21.6250, 21.6250, 21.8750, 22.1250, 21.8750, 21.7500, 21.7500, 21.2500, 20.8750, 22.8750, 22.2500, 23.1250],
        [ 0.0000, 14.0625, 10.8125,  8.9375, 11.6250, 12.0625, 14.2500, 12.6250, 13.4375, 11.1875, 10.9375, 10.3750, 11.1875, 13.0000, 12.3750],
        [ 0.0000,  4.2500,  3.1562,  0.7383,  3.8750,  4.3125,  5.3750,  3.6875,  5.5625,  2.6250,  3.7344,  2.2812,  2.2031,  5.4375,  3.7812],
        [ 0.0000,  6.8750,  4.6562,  2.1406,  4.9062,  4.2500,  7.1250,  6.2188,  7.0000,  4.7812,  4.6562,  4.9062,  4.7188,  6.9688,  5.5000],
        [ 0.0000, 10.5000,  7.4688,  6.0625,  8.3125,  8.3125, 10.1250,  8.8750,  9.6250,  7.3125,  6.7500,  6.8438,  6.7500,  9.0625,  8.0625],
        [ 0.0000, 10.3750,  7.4688,  5.5000,  8.5625,  8.5625, 11.1250,  9.7500, 11.2500,  8.1875,  7.8438,  7.6875,  8.1250, 11.2500,  9.4375],
        [ 0.0000, 11.4375,  9.1250,  6.8750, 10.3750, 10.9375, 12.6875, 11.3125, 12.3125, 10.1250, 10.5000,  9.2500,  9.2500, 12.1250, 10.9375],
        [ 0.0000, 12.1875, 10.1875,  8.9375, 11.3125, 10.7500, 13.2500, 12.5625, 13.4375, 11.1875, 11.1875, 11.6250, 11.7500, 13.7500, 12.1250],
        [ 0.0000, 11.9375, 10.0625,  7.4688,  9.8750,  9.3750, 11.4375, 11.3750, 12.5000, 10.2500, 10.5625, 10.0625, 10.3750, 12.5000, 10.3125],
        [ 0.0000, 12.2500, 10.3125,  9.5625, 11.3125, 10.8125, 12.7500, 12.4375, 13.0000, 11.3125, 10.9375, 11.0000, 12.1250, 13.1250, 12.2500],
        [ 0.0000,  9.2500,  6.3438,  4.6250,  7.8125,  8.1250, 10.7500,  9.3750, 11.1250,  7.7188,  7.8438,  7.0625,  7.5312, 11.2500,  9.1250],
        [ 0.0000, 10.2500,  8.5000,  6.6875,  9.8750, 10.5625, 12.1250, 10.8125, 12.0000,  9.8125, 10.2500,  8.9375,  9.1250, 12.1250, 11.1250],
        [ 0.0000, 17.0000, 15.7500, 15.6875, 16.5000, 16.3750, 17.7500, 17.5000, 17.3750, 16.6250, 15.9375, 16.3750, 17.1250, 17.5000, 17.2500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3807],
        [0.2647],
        [0.1980],
        [0.2008],
        [0.1951],
        [0.1706],
        [0.1359],
        [0.1527],
        [0.1622],
        [0.1392],
        [0.1453],
        [0.1098],
        [0.1044],
        [0.1284]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( are:0.1133 a:0.1123,:0.2158 green:0.0781ty:0.1299,:0.3750 a:0.0669iced:0.7539)
iced
------
		( a:0.1123,:0.2158 green:0.0781ty:0.1299,:0.3750 a:0.0669iced:0.7539,:0.2773)
, and the flowers are green, and the flowers are green, and the
@ 6550 train 4.0013 , allloss: 4.0014, dt: 1741.06ms, fracRes: 0.7116, norm(attn): 0.1475, norm(output): 0.9453, norm(x): 0.8066, norm(y): 0.9940, norm:0.5371, tok/sec: 75282.79, flops:79.02, batch-reuse:1
@ 6551 train 4.2917 , allloss: 4.2919, dt: 1319.63ms, fracRes: 0.7117, norm(attn): 0.1465, norm(output): 0.9457, norm(x): 0.8067, norm(y): 0.9938, norm:0.8451, tok/sec: 99324.93, flops:104.25, batch-reuse:1
@ 6552 train 4.2021 , allloss: 4.2029, dt: 1291.79ms, fracRes: 0.7117, norm(attn): 0.1455, norm(output): 0.9461, norm(x): 0.8078, norm(y): 0.9937, norm:0.8583, tok/sec: 101465.52, flops:106.50, batch-reuse:1
@ 6553 train 4.0866 , allloss: 4.0867, dt: 1306.80ms, fracRes: 0.7115, norm(attn): 0.1484, norm(output): 0.9460, norm(x): 0.8079, norm(y): 0.9938, norm:0.6962, tok/sec: 100299.72, flops:105.28, batch-reuse:1
@ 6554 train 4.0469 , allloss: 4.0471, dt: 1302.26ms, fracRes: 0.7115, norm(attn): 0.1475, norm(output): 0.9458, norm(x): 0.8080, norm(y): 0.9939, norm:0.5475, tok/sec: 100649.70, flops:105.65, batch-reuse:1
@ 6555 train 4.1064 , allloss: 4.1064, dt: 1312.67ms, fracRes: 0.7114, norm(attn): 0.1484, norm(output): 0.9454, norm(x): 0.8076, norm(y): 0.9939, norm:0.6381, tok/sec: 99851.63, flops:104.81, batch-reuse:1
@ 6556 train 4.0207 , allloss: 4.0211, dt: 1307.33ms, fracRes: 0.7115, norm(attn): 0.1484, norm(output): 0.9453, norm(x): 0.8066, norm(y): 0.9940, norm:0.5438, tok/sec: 100259.66, flops:105.24, batch-reuse:1
@ 6557 train 3.9710 , allloss: 3.9712, dt: 1313.78ms, fracRes: 0.7111, norm(attn): 0.1484, norm(output): 0.9454, norm(x): 0.8073, norm(y): 0.9938, norm:0.5376, tok/sec: 99767.44, flops:104.72, batch-reuse:1
@ 6558 train 4.0152 , allloss: 4.0152, dt: 1310.14ms, fracRes: 0.7111, norm(attn): 0.1475, norm(output): 0.9456, norm(x): 0.8077, norm(y): 0.9936, norm:0.5571, tok/sec: 100044.28, flops:105.01, batch-reuse:1
@ 6559 train 4.0777 , allloss: 4.0780, dt: 1341.35ms, fracRes: 0.7114, norm(attn): 0.1455, norm(output): 0.9458, norm(x): 0.8077, norm(y): 0.9936, norm:0.5477, tok/sec: 97716.75, flops:102.57, batch-reuse:1
@ 6560 train 3.9876 , allloss: 3.9877, dt: 1335.00ms, fracRes: 0.7114, norm(attn): 0.1465, norm(output): 0.9458, norm(x): 0.8081, norm(y): 0.9935, norm:0.5499, tok/sec: 98181.41, flops:103.05, batch-reuse:1
@ 6561 train 3.9839 , allloss: 3.9841, dt: 1312.31ms, fracRes: 0.7116, norm(attn): 0.1465, norm(output): 0.9457, norm(x): 0.8075, norm(y): 0.9938, norm:0.5724, tok/sec: 99878.82, flops:104.84, batch-reuse:1
@ 6562 train 3.9499 , allloss: 3.9501, dt: 1324.85ms, fracRes: 0.7114, norm(attn): 0.1475, norm(output): 0.9454, norm(x): 0.8071, norm(y): 0.9939, norm:0.6215, tok/sec: 98933.39, flops:103.84, batch-reuse:1
@ 6563 train 3.9545 , allloss: 3.9546, dt: 1316.08ms, fracRes: 0.7114, norm(attn): 0.1465, norm(output): 0.9455, norm(x): 0.8076, norm(y): 0.9938, norm:0.5446, tok/sec: 99592.36, flops:104.54, batch-reuse:1
@ 6564 train 4.0056 , allloss: 4.0057, dt: 1322.23ms, fracRes: 0.7116, norm(attn): 0.1465, norm(output): 0.9454, norm(x): 0.8068, norm(y): 0.9938, norm:0.6263, tok/sec: 99129.35, flops:104.05, batch-reuse:1
@ 6565 train 3.9390 , allloss: 3.9391, dt: 1327.94ms, fracRes: 0.7112, norm(attn): 0.1475, norm(output): 0.9457, norm(x): 0.8079, norm(y): 0.9936, norm:0.5853, tok/sec: 98703.03, flops:103.60, batch-reuse:1
@ 6566 train 4.0025 , allloss: 4.0056, dt: 1326.26ms, fracRes: 0.7112, norm(attn): 0.1484, norm(output): 0.9454, norm(x): 0.8072, norm(y): 0.9936, norm:0.6863, tok/sec: 98827.94, flops:103.73, batch-reuse:1
@ 6567 train 3.9957 , allloss: 3.9959, dt: 1304.46ms, fracRes: 0.7110, norm(attn): 0.1475, norm(output): 0.9456, norm(x): 0.8080, norm(y): 0.9935, norm:0.6596, tok/sec: 100480.04, flops:105.47, batch-reuse:1
@ 6568 train 3.9689 , allloss: 3.9690, dt: 1304.41ms, fracRes: 0.7113, norm(attn): 0.1465, norm(output): 0.9457, norm(x): 0.8078, norm(y): 0.9936, norm:0.5908, tok/sec: 100483.93, flops:105.47, batch-reuse:1
@ 6569 train 3.9646 , allloss: 3.9646, dt: 1319.77ms, fracRes: 0.7113, norm(attn): 0.1465, norm(output): 0.9457, norm(x): 0.8079, norm(y): 0.9934, norm:0.5696, tok/sec: 99313.98, flops:104.24, batch-reuse:1
@ 6570 train 4.0307 , allloss: 4.0308, dt: 1322.40ms, fracRes: 0.7114, norm(attn): 0.1475, norm(output): 0.9456, norm(x): 0.8072, norm(y): 0.9935, norm:0.5405, tok/sec: 99117.04, flops:104.04, batch-reuse:1
@ 6571 train 4.0020 , allloss: 4.0021, dt: 1317.57ms, fracRes: 0.7114, norm(attn): 0.1504, norm(output): 0.9459, norm(x): 0.8078, norm(y): 0.9937, norm:0.6048, tok/sec: 99480.05, flops:104.42, batch-reuse:1
@ 6572 train 3.9938 , allloss: 3.9939, dt: 1335.99ms, fracRes: 0.7114, norm(attn): 0.1475, norm(output): 0.9463, norm(x): 0.8084, norm(y): 0.9936, norm:0.5553, tok/sec: 98108.35, flops:102.98, batch-reuse:1
@ 6573 train 4.0328 , allloss: 4.0331, dt: 1344.55ms, fracRes: 0.7114, norm(attn): 0.1484, norm(output): 0.9459, norm(x): 0.8085, norm(y): 0.9936, norm:0.5202, tok/sec: 97484.05, flops:102.32, batch-reuse:1
@ 6574 train 4.0468 , allloss: 4.0470, dt: 1325.82ms, fracRes: 0.7115, norm(attn): 0.1475, norm(output): 0.9458, norm(x): 0.8080, norm(y): 0.9936, norm:0.6156, tok/sec: 98860.94, flops:103.77, batch-reuse:1
@ 6575 train 4.0242 , allloss: 4.0242, dt: 1335.19ms, fracRes: 0.7115, norm(attn): 0.1484, norm(output): 0.9454, norm(x): 0.8069, norm(y): 0.9939, norm:0.5758, tok/sec: 98167.35, flops:103.04, batch-reuse:1
@ 6576 train 4.0530 , allloss: 4.0531, dt: 1323.11ms, fracRes: 0.7112, norm(attn): 0.1475, norm(output): 0.9459, norm(x): 0.8082, norm(y): 0.9936, norm:0.6084, tok/sec: 99063.53, flops:103.98, batch-reuse:1
@ 6577 train 4.0036 , allloss: 4.0045, dt: 1287.24ms, fracRes: 0.7111, norm(attn): 0.1465, norm(output): 0.9460, norm(x): 0.8087, norm(y): 0.9936, norm:0.6208, tok/sec: 101824.24, flops:106.88, batch-reuse:1
@ 6578 train 4.0390 , allloss: 4.0390, dt: 1311.98ms, fracRes: 0.7115, norm(attn): 0.1465, norm(output): 0.9459, norm(x): 0.8082, norm(y): 0.9936, norm:0.5886, tok/sec: 99903.69, flops:104.86, batch-reuse:1
@ 6579 train 3.9743 , allloss: 3.9746, dt: 1286.88ms, fracRes: 0.7115, norm(attn): 0.1475, norm(output): 0.9456, norm(x): 0.8084, norm(y): 0.9936, norm:0.6052, tok/sec: 101852.71, flops:106.91, batch-reuse:1
@ 6580 train 4.0555 , allloss: 4.0556, dt: 1320.94ms, fracRes: 0.7113, norm(attn): 0.1475, norm(output): 0.9457, norm(x): 0.8090, norm(y): 0.9936, norm:0.6026, tok/sec: 99226.41, flops:104.15, batch-reuse:1
@ 6581 train 4.0637 , allloss: 4.0637, dt: 1351.81ms, fracRes: 0.7115, norm(attn): 0.1455, norm(output): 0.9457, norm(x): 0.8083, norm(y): 0.9935, norm:0.5922, tok/sec: 96960.39, flops:101.77, batch-reuse:1
@ 6582 train 3.9653 , allloss: 3.9668, dt: 1323.64ms, fracRes: 0.7114, norm(attn): 0.1465, norm(output): 0.9456, norm(x): 0.8085, norm(y): 0.9934, norm:0.6080, tok/sec: 99023.70, flops:103.94, batch-reuse:1
@ 6583 train 3.9847 , allloss: 3.9848, dt: 1337.21ms, fracRes: 0.7117, norm(attn): 0.1465, norm(output): 0.9459, norm(x): 0.8085, norm(y): 0.9934, norm:0.6547, tok/sec: 98019.26, flops:102.88, batch-reuse:1
@ 6584 train 3.9039 , allloss: 3.9039, dt: 1306.58ms, fracRes: 0.7114, norm(attn): 0.1445, norm(output): 0.9455, norm(x): 0.8088, norm(y): 0.9935, norm:0.5911, tok/sec: 100316.87, flops:105.30, batch-reuse:1
@ 6585 train 3.9585 , allloss: 3.9585, dt: 1340.21ms, fracRes: 0.7111, norm(attn): 0.1455, norm(output): 0.9456, norm(x): 0.8090, norm(y): 0.9935, norm:0.5589, tok/sec: 97799.60, flops:102.65, batch-reuse:1
@ 6586 train 4.0152 , allloss: 4.0153, dt: 1333.44ms, fracRes: 0.7110, norm(attn): 0.1465, norm(output): 0.9456, norm(x): 0.8090, norm(y): 0.9934, norm:0.5921, tok/sec: 98296.41, flops:103.18, batch-reuse:1
@ 6587 train 4.0496 , allloss: 4.0496, dt: 1326.23ms, fracRes: 0.7112, norm(attn): 0.1465, norm(output): 0.9461, norm(x): 0.8094, norm(y): 0.9933, norm:0.5568, tok/sec: 98830.21, flops:103.74, batch-reuse:1
@ 6588 train 3.9758 , allloss: 3.9758, dt: 1349.50ms, fracRes: 0.7113, norm(attn): 0.1465, norm(output): 0.9459, norm(x): 0.8088, norm(y): 0.9933, norm:0.6506, tok/sec: 97126.66, flops:101.95, batch-reuse:1
@ 6589 train 4.0058 , allloss: 4.0058, dt: 1298.48ms, fracRes: 0.7113, norm(attn): 0.1465, norm(output): 0.9458, norm(x): 0.8084, norm(y): 0.9931, norm:0.5365, tok/sec: 100942.51, flops:105.95, batch-reuse:1
@ 6590 train 3.9679 , allloss: 3.9679, dt: 1285.29ms, fracRes: 0.7113, norm(attn): 0.1475, norm(output): 0.9459, norm(x): 0.8087, norm(y): 0.9933, norm:0.6763, tok/sec: 101978.88, flops:107.04, batch-reuse:1
@ 6591 train 4.0681 , allloss: 4.0800, dt: 1302.94ms, fracRes: 0.7116, norm(attn): 0.1475, norm(output): 0.9458, norm(x): 0.8084, norm(y): 0.9933, norm:0.5918, tok/sec: 100597.21, flops:105.59, batch-reuse:1
@ 6592 train 3.9862 , allloss: 3.9866, dt: 1339.01ms, fracRes: 0.7116, norm(attn): 0.1465, norm(output): 0.9462, norm(x): 0.8087, norm(y): 0.9934, norm:0.6410, tok/sec: 97886.91, flops:102.75, batch-reuse:1
@ 6593 train 3.9942 , allloss: 3.9951, dt: 1339.03ms, fracRes: 0.7117, norm(attn): 0.1455, norm(output): 0.9457, norm(x): 0.8077, norm(y): 0.9936, norm:0.5756, tok/sec: 97885.75, flops:102.74, batch-reuse:1
@ 6594 train 3.9329 , allloss: 3.9330, dt: 1295.03ms, fracRes: 0.7119, norm(attn): 0.1494, norm(output): 0.9452, norm(x): 0.8058, norm(y): 0.9935, norm:0.8754, tok/sec: 101211.55, flops:106.23, batch-reuse:1
@ 6595 train 3.8263 , allloss: 3.8267, dt: 1309.01ms, fracRes: 0.7114, norm(attn): 0.1484, norm(output): 0.9452, norm(x): 0.8063, norm(y): 0.9935, norm:0.6990, tok/sec: 100130.54, flops:105.10, batch-reuse:1
@ 6596 train 4.0642 , allloss: 4.0643, dt: 1309.31ms, fracRes: 0.7116, norm(attn): 0.1475, norm(output): 0.9456, norm(x): 0.8071, norm(y): 0.9933, norm:0.6667, tok/sec: 100107.31, flops:105.08, batch-reuse:1
@ 6597 train 4.0344 , allloss: 4.0345, dt: 1309.19ms, fracRes: 0.7119, norm(attn): 0.1455, norm(output): 0.9454, norm(x): 0.8070, norm(y): 0.9936, norm:0.7044, tok/sec: 100116.55, flops:105.09, batch-reuse:1
@ 6598 train 4.0235 , allloss: 4.0236, dt: 1290.86ms, fracRes: 0.7113, norm(attn): 0.1455, norm(output): 0.9456, norm(x): 0.8074, norm(y): 0.9935, norm:0.7139, tok/sec: 101538.16, flops:106.58, batch-reuse:1
@ 6599 train 4.0287 , allloss: 4.0378, dt: 1323.32ms, fracRes: 0.7113, norm(attn): 0.1455, norm(output): 0.9458, norm(x): 0.8077, norm(y): 0.9932, norm:0.5930, tok/sec: 99047.78, flops:103.96, batch-reuse:1
@ 6600 train 4.0227 , allloss: 4.0230, dt: 1310.43ms, fracRes: 0.7114, norm(attn): 0.1455, norm(output): 0.9459, norm(x): 0.8081, norm(y): 0.9935, norm:0.6387, tok/sec: 100022.49, flops:104.99, batch-reuse:1
@ 6601 train 4.0086 , allloss: 4.0087, dt: 1320.01ms, fracRes: 0.7115, norm(attn): 0.1455, norm(output): 0.9462, norm(x): 0.8088, norm(y): 0.9937, norm:0.5663, tok/sec: 99296.36, flops:104.22, batch-reuse:1
@ 6602 train 4.0526 , allloss: 4.0526, dt: 1330.78ms, fracRes: 0.7115, norm(attn): 0.1455, norm(output): 0.9461, norm(x): 0.8086, norm(y): 0.9935, norm:0.5698, tok/sec: 98492.36, flops:103.38, batch-reuse:1
@ 6603 train 3.9824 , allloss: 3.9825, dt: 1305.48ms, fracRes: 0.7114, norm(attn): 0.1465, norm(output): 0.9458, norm(x): 0.8080, norm(y): 0.9934, norm:0.5231, tok/sec: 100401.44, flops:105.38, batch-reuse:1
@ 6604 train 3.9921 , allloss: 3.9932, dt: 1305.65ms, fracRes: 0.7115, norm(attn): 0.1465, norm(output): 0.9456, norm(x): 0.8074, norm(y): 0.9934, norm:0.5175, tok/sec: 100388.50, flops:105.37, batch-reuse:1
@ 6605 train 4.0087 , allloss: 4.0089, dt: 1329.05ms, fracRes: 0.7116, norm(attn): 0.1455, norm(output): 0.9459, norm(x): 0.8080, norm(y): 0.9933, norm:0.4487, tok/sec: 98620.94, flops:103.52, batch-reuse:1
@ 6606 train 4.0039 , allloss: 4.0042, dt: 1334.66ms, fracRes: 0.7114, norm(attn): 0.1455, norm(output): 0.9461, norm(x): 0.8087, norm(y): 0.9932, norm:0.4981, tok/sec: 98205.93, flops:103.08, batch-reuse:1
@ 6607 train 3.9263 , allloss: 3.9267, dt: 1296.44ms, fracRes: 0.7115, norm(attn): 0.1455, norm(output): 0.9458, norm(x): 0.8081, norm(y): 0.9933, norm:0.4966, tok/sec: 101101.17, flops:106.12, batch-reuse:1
@ 6608 train 3.9191 , allloss: 3.9191, dt: 1280.47ms, fracRes: 0.7111, norm(attn): 0.1426, norm(output): 0.9462, norm(x): 0.8096, norm(y): 0.9932, norm:0.5399, tok/sec: 102362.80, flops:107.44, batch-reuse:1
@ 6609 train 3.9542 , allloss: 3.9542, dt: 1309.15ms, fracRes: 0.7112, norm(attn): 0.1436, norm(output): 0.9461, norm(x): 0.8091, norm(y): 0.9933, norm:0.6209, tok/sec: 100120.18, flops:105.09, batch-reuse:1
@ 6610 train 3.8819 , allloss: 3.8822, dt: 1292.57ms, fracRes: 0.7115, norm(attn): 0.1455, norm(output): 0.9455, norm(x): 0.8077, norm(y): 0.9935, norm:0.5304, tok/sec: 101404.54, flops:106.44, batch-reuse:1
@ 6611 train 4.0385 , allloss: 4.0386, dt: 1319.40ms, fracRes: 0.7115, norm(attn): 0.1445, norm(output): 0.9459, norm(x): 0.8086, norm(y): 0.9934, norm:0.6430, tok/sec: 99341.89, flops:104.27, batch-reuse:1
@ 6612 train 4.0254 , allloss: 4.0254, dt: 1339.28ms, fracRes: 0.7114, norm(attn): 0.1465, norm(output): 0.9464, norm(x): 0.8093, norm(y): 0.9935, norm:0.6493, tok/sec: 97867.21, flops:102.72, batch-reuse:1
@ 6613 train 3.9206 , allloss: 3.9206, dt: 1317.61ms, fracRes: 0.7114, norm(attn): 0.1465, norm(output): 0.9456, norm(x): 0.8083, norm(y): 0.9932, norm:0.6523, tok/sec: 99476.94, flops:104.41, batch-reuse:1
@ 6614 train 3.9961 , allloss: 3.9964, dt: 1314.44ms, fracRes: 0.7114, norm(attn): 0.1445, norm(output): 0.9455, norm(x): 0.8083, norm(y): 0.9932, norm:0.5792, tok/sec: 99716.99, flops:104.67, batch-reuse:1
@ 6615 train 3.9419 , allloss: 3.9424, dt: 1298.22ms, fracRes: 0.7114, norm(attn): 0.1445, norm(output): 0.9458, norm(x): 0.8085, norm(y): 0.9934, norm:0.5819, tok/sec: 100962.73, flops:105.97, batch-reuse:1
@ 6616 train 3.9168 , allloss: 3.9169, dt: 1293.77ms, fracRes: 0.7118, norm(attn): 0.1436, norm(output): 0.9458, norm(x): 0.8082, norm(y): 0.9935, norm:0.6097, tok/sec: 101310.27, flops:106.34, batch-reuse:1
@ 6617 train 4.0746 , allloss: 4.0746, dt: 1292.89ms, fracRes: 0.7120, norm(attn): 0.1426, norm(output): 0.9464, norm(x): 0.8085, norm(y): 0.9936, norm:0.6541, tok/sec: 101378.72, flops:106.41, batch-reuse:1
@ 6618 train 3.9390 , allloss: 3.9390, dt: 1301.82ms, fracRes: 0.7118, norm(attn): 0.1436, norm(output): 0.9462, norm(x): 0.8086, norm(y): 0.9934, norm:0.5759, tok/sec: 100683.88, flops:105.68, batch-reuse:1
@ 6619 train 3.9206 , allloss: 3.9212, dt: 1307.04ms, fracRes: 0.7117, norm(attn): 0.1445, norm(output): 0.9458, norm(x): 0.8082, norm(y): 0.9934, norm:0.5768, tok/sec: 100281.70, flops:105.26, batch-reuse:1
@ 6620 train 3.9790 , allloss: 3.9791, dt: 1274.42ms, fracRes: 0.7117, norm(attn): 0.1465, norm(output): 0.9457, norm(x): 0.8082, norm(y): 0.9933, norm:0.6633, tok/sec: 102848.53, flops:107.95, batch-reuse:1
@ 6621 train 3.9712 , allloss: 3.9714, dt: 1319.08ms, fracRes: 0.7118, norm(attn): 0.1455, norm(output): 0.9459, norm(x): 0.8083, norm(y): 0.9932, norm:0.6291, tok/sec: 99366.27, flops:104.30, batch-reuse:1
@ 6622 train 3.9557 , allloss: 3.9558, dt: 1314.57ms, fracRes: 0.7118, norm(attn): 0.1455, norm(output): 0.9460, norm(x): 0.8083, norm(y): 0.9932, norm:0.6413, tok/sec: 99707.37, flops:104.66, batch-reuse:1
@ 6623 train 3.9684 , allloss: 3.9684, dt: 1316.23ms, fracRes: 0.7114, norm(attn): 0.1445, norm(output): 0.9462, norm(x): 0.8092, norm(y): 0.9931, norm:0.5675, tok/sec: 99581.72, flops:104.52, batch-reuse:1
@ 6624 train 4.0350 , allloss: 4.0353, dt: 1304.20ms, fracRes: 0.7113, norm(attn): 0.1445, norm(output): 0.9462, norm(x): 0.8095, norm(y): 0.9932, norm:0.6178, tok/sec: 100500.00, flops:105.49, batch-reuse:1
@ 6625 train 3.9282 , allloss: 3.9282, dt: 1309.45ms, fracRes: 0.7116, norm(attn): 0.1445, norm(output): 0.9461, norm(x): 0.8092, norm(y): 0.9931, norm:0.6165, tok/sec: 100096.65, flops:105.06, batch-reuse:1
@ 6626 train 4.0095 , allloss: 4.0112, dt: 1334.95ms, fracRes: 0.7119, norm(attn): 0.1445, norm(output): 0.9460, norm(x): 0.8087, norm(y): 0.9932, norm:0.5747, tok/sec: 98185.15, flops:103.06, batch-reuse:1
@ 6627 train 3.9162 , allloss: 3.9162, dt: 1334.49ms, fracRes: 0.7118, norm(attn): 0.1455, norm(output): 0.9457, norm(x): 0.8077, norm(y): 0.9932, norm:0.5904, tok/sec: 98218.90, flops:103.09, batch-reuse:1
@ 6628 train 3.8971 , allloss: 3.8971, dt: 1316.68ms, fracRes: 0.7115, norm(attn): 0.1465, norm(output): 0.9458, norm(x): 0.8085, norm(y): 0.9933, norm:0.5128, tok/sec: 99547.58, flops:104.49, batch-reuse:1
@ 6629 train 3.9449 , allloss: 3.9450, dt: 1315.99ms, fracRes: 0.7113, norm(attn): 0.1445, norm(output): 0.9459, norm(x): 0.8090, norm(y): 0.9933, norm:0.5286, tok/sec: 99599.49, flops:104.54, batch-reuse:1
@ 6630 train 3.9380 , allloss: 3.9381, dt: 1305.13ms, fracRes: 0.7114, norm(attn): 0.1445, norm(output): 0.9460, norm(x): 0.8089, norm(y): 0.9933, norm:0.5226, tok/sec: 100428.53, flops:105.41, batch-reuse:1
@ 6631 train 3.9639 , allloss: 3.9640, dt: 1296.86ms, fracRes: 0.7117, norm(attn): 0.1445, norm(output): 0.9461, norm(x): 0.8088, norm(y): 0.9933, norm:0.5845, tok/sec: 101068.83, flops:106.09, batch-reuse:1
@ 6632 train 3.8785 , allloss: 3.8786, dt: 1299.92ms, fracRes: 0.7116, norm(attn): 0.1445, norm(output): 0.9458, norm(x): 0.8086, norm(y): 0.9933, norm:0.5567, tok/sec: 100830.83, flops:105.84, batch-reuse:1
@ 6633 train 3.9072 , allloss: 3.9073, dt: 1288.99ms, fracRes: 0.7117, norm(attn): 0.1455, norm(output): 0.9457, norm(x): 0.8081, norm(y): 0.9931, norm:0.5713, tok/sec: 101685.80, flops:106.73, batch-reuse:1
@ 6634 train 3.9284 , allloss: 3.9285, dt: 1307.64ms, fracRes: 0.7118, norm(attn): 0.1436, norm(output): 0.9459, norm(x): 0.8086, norm(y): 0.9930, norm:0.5438, tok/sec: 100235.41, flops:105.21, batch-reuse:1
@ 6635 train 3.9759 , allloss: 3.9760, dt: 1288.39ms, fracRes: 0.7120, norm(attn): 0.1436, norm(output): 0.9458, norm(x): 0.8078, norm(y): 0.9932, norm:0.5156, tok/sec: 101733.37, flops:106.78, batch-reuse:1
@ 6636 train 3.9560 , allloss: 3.9563, dt: 1299.54ms, fracRes: 0.7117, norm(attn): 0.1436, norm(output): 0.9461, norm(x): 0.8088, norm(y): 0.9931, norm:0.6141, tok/sec: 100859.99, flops:105.87, batch-reuse:1
@ 6637 train 3.9470 , allloss: 3.9485, dt: 1299.23ms, fracRes: 0.7115, norm(attn): 0.1465, norm(output): 0.9459, norm(x): 0.8081, norm(y): 0.9931, norm:0.6264, tok/sec: 100884.42, flops:105.89, batch-reuse:1
@ 6638 train 3.9647 , allloss: 3.9647, dt: 1318.90ms, fracRes: 0.7114, norm(attn): 0.1455, norm(output): 0.9459, norm(x): 0.8081, norm(y): 0.9931, norm:0.6520, tok/sec: 99379.87, flops:104.31, batch-reuse:1
@ 6639 train 3.7829 , allloss: 3.7829, dt: 1324.37ms, fracRes: 0.7112, norm(attn): 0.1455, norm(output): 0.9458, norm(x): 0.8088, norm(y): 0.9931, norm:0.5662, tok/sec: 98969.35, flops:103.88, batch-reuse:1
@ 6640 train 4.0906 , allloss: 4.0907, dt: 1310.38ms, fracRes: 0.7116, norm(attn): 0.1455, norm(output): 0.9458, norm(x): 0.8084, norm(y): 0.9933, norm:0.6777, tok/sec: 100026.18, flops:104.99, batch-reuse:1
@ 6641 train 3.9769 , allloss: 3.9769, dt: 1305.80ms, fracRes: 0.7113, norm(attn): 0.1455, norm(output): 0.9455, norm(x): 0.8083, norm(y): 0.9934, norm:0.7327, tok/sec: 100376.62, flops:105.36, batch-reuse:1
@ 6642 train 3.9799 , allloss: 3.9800, dt: 1337.04ms, fracRes: 0.7113, norm(attn): 0.1445, norm(output): 0.9458, norm(x): 0.8087, norm(y): 0.9932, norm:0.6172, tok/sec: 98031.74, flops:102.90, batch-reuse:1
@ 6643 train 4.0581 , allloss: 4.0581, dt: 1335.96ms, fracRes: 0.7116, norm(attn): 0.1436, norm(output): 0.9462, norm(x): 0.8093, norm(y): 0.9931, norm:0.6244, tok/sec: 98110.50, flops:102.98, batch-reuse:1
@ 6644 train 4.0118 , allloss: 4.0118, dt: 1302.63ms, fracRes: 0.7116, norm(attn): 0.1445, norm(output): 0.9461, norm(x): 0.8097, norm(y): 0.9930, norm:0.6074, tok/sec: 100621.06, flops:105.62, batch-reuse:1
@ 6645 train 3.9150 , allloss: 3.9150, dt: 1302.49ms, fracRes: 0.7115, norm(attn): 0.1445, norm(output): 0.9461, norm(x): 0.8098, norm(y): 0.9929, norm:0.6217, tok/sec: 100631.72, flops:105.63, batch-reuse:1
@ 6646 train 3.8828 , allloss: 3.8828, dt: 1291.70ms, fracRes: 0.7114, norm(attn): 0.1426, norm(output): 0.9461, norm(x): 0.8098, norm(y): 0.9927, norm:0.5734, tok/sec: 101472.51, flops:106.51, batch-reuse:1
@ 6647 train 3.8374 , allloss: 3.8374, dt: 1301.16ms, fracRes: 0.7117, norm(attn): 0.1455, norm(output): 0.9455, norm(x): 0.8080, norm(y): 0.9930, norm:0.5722, tok/sec: 100735.00, flops:105.73, batch-reuse:1
@ 6648 train 4.0195 , allloss: 4.0196, dt: 1278.04ms, fracRes: 0.7118, norm(attn): 0.1455, norm(output): 0.9461, norm(x): 0.8086, norm(y): 0.9930, norm:0.6087, tok/sec: 102557.33, flops:107.65, batch-reuse:1
@ 6649 train 3.9575 , allloss: 3.9576, dt: 1295.61ms, fracRes: 0.7116, norm(attn): 0.1445, norm(output): 0.9466, norm(x): 0.8096, norm(y): 0.9931, norm:0.6196, tok/sec: 101166.55, flops:106.19, batch-reuse:1
@ 6650 train 3.6704 , allloss: 3.6707, dt: 1286.44ms, fracRes: 0.7118, norm(attn): 0.1504, norm(output): 0.9453, norm(x): 0.8072, norm(y): 0.9933, norm:3.1298, tok/sec: 101887.63, flops:106.94, batch-reuse:1
@ 6651 train 3.8609 , allloss: 3.8611, dt: 1311.27ms, fracRes: 0.7112, norm(attn): 0.1475, norm(output): 0.9456, norm(x): 0.8081, norm(y): 0.9931, norm:1.2397, tok/sec: 99958.24, flops:104.92, batch-reuse:1
@ 6652 train 3.9739 , allloss: 3.9742, dt: 1340.30ms, fracRes: 0.7112, norm(attn): 0.1484, norm(output): 0.9455, norm(x): 0.8080, norm(y): 0.9929, norm:0.9990, tok/sec: 97793.11, flops:102.65, batch-reuse:1
@ 6653 train 3.9468 , allloss: 3.9469, dt: 1336.04ms, fracRes: 0.7116, norm(attn): 0.1475, norm(output): 0.9459, norm(x): 0.8078, norm(y): 0.9929, norm:1.0083, tok/sec: 98104.50, flops:102.97, batch-reuse:1
@ 6654 train 3.9537 , allloss: 3.9541, dt: 1329.33ms, fracRes: 0.7119, norm(attn): 0.1475, norm(output): 0.9461, norm(x): 0.8081, norm(y): 0.9928, norm:0.8455, tok/sec: 98600.35, flops:103.49, batch-reuse:1
@ 6655 train 3.8870 , allloss: 3.8873, dt: 1297.57ms, fracRes: 0.7118, norm(attn): 0.1484, norm(output): 0.9459, norm(x): 0.8081, norm(y): 0.9928, norm:0.8009, tok/sec: 101013.75, flops:106.03, batch-reuse:1
@ 6656 train 3.9081 , allloss: 3.9082, dt: 1318.32ms, fracRes: 0.7117, norm(attn): 0.1494, norm(output): 0.9456, norm(x): 0.8074, norm(y): 0.9929, norm:0.6745, tok/sec: 99423.25, flops:104.36, batch-reuse:1
@ 6657 train 4.0702 , allloss: 4.0702, dt: 1304.53ms, fracRes: 0.7118, norm(attn): 0.1455, norm(output): 0.9462, norm(x): 0.8087, norm(y): 0.9927, norm:0.9186, tok/sec: 100474.80, flops:105.46, batch-reuse:1
@ 6658 train 3.9209 , allloss: 3.9210, dt: 1315.93ms, fracRes: 0.7116, norm(attn): 0.1465, norm(output): 0.9463, norm(x): 0.8088, norm(y): 0.9928, norm:0.8115, tok/sec: 99603.75, flops:104.55, batch-reuse:1
@ 6659 train 3.8944 , allloss: 3.8950, dt: 1300.18ms, fracRes: 0.7114, norm(attn): 0.1465, norm(output): 0.9461, norm(x): 0.8086, norm(y): 0.9927, norm:0.7349, tok/sec: 100810.75, flops:105.81, batch-reuse:1
@ 6660 train 3.8580 , allloss: 3.8580, dt: 1280.55ms, fracRes: 0.7117, norm(attn): 0.1465, norm(output): 0.9459, norm(x): 0.8082, norm(y): 0.9926, norm:0.6198, tok/sec: 102356.34, flops:107.44, batch-reuse:1
@ 6661 train 3.9263 , allloss: 3.9265, dt: 1303.36ms, fracRes: 0.7119, norm(attn): 0.1465, norm(output): 0.9462, norm(x): 0.8084, norm(y): 0.9926, norm:0.7150, tok/sec: 100564.62, flops:105.56, batch-reuse:1
@ 6662 train 3.8215 , allloss: 3.8215, dt: 1294.74ms, fracRes: 0.7120, norm(attn): 0.1465, norm(output): 0.9465, norm(x): 0.8087, norm(y): 0.9927, norm:0.6790, tok/sec: 101234.08, flops:106.26, batch-reuse:1
@ 6663 train 3.9142 , allloss: 3.9143, dt: 1303.53ms, fracRes: 0.7120, norm(attn): 0.1475, norm(output): 0.9461, norm(x): 0.8078, norm(y): 0.9928, norm:0.5987, tok/sec: 100551.53, flops:105.54, batch-reuse:1
@ 6664 train 3.8836 , allloss: 3.8836, dt: 1310.83ms, fracRes: 0.7119, norm(attn): 0.1465, norm(output): 0.9461, norm(x): 0.8080, norm(y): 0.9928, norm:0.6329, tok/sec: 99991.80, flops:104.95, batch-reuse:1
@ 6665 train 3.9081 , allloss: 3.9082, dt: 1322.59ms, fracRes: 0.7119, norm(attn): 0.1465, norm(output): 0.9463, norm(x): 0.8082, norm(y): 0.9928, norm:0.5889, tok/sec: 99102.64, flops:104.02, batch-reuse:1
@ 6666 train 3.8613 , allloss: 3.8613, dt: 1279.23ms, fracRes: 0.7118, norm(attn): 0.1445, norm(output): 0.9466, norm(x): 0.8092, norm(y): 0.9929, norm:0.6441, tok/sec: 102461.74, flops:107.55, batch-reuse:1
@ 6667 train 3.8842 , allloss: 3.8843, dt: 1299.34ms, fracRes: 0.7119, norm(attn): 0.1455, norm(output): 0.9468, norm(x): 0.8091, norm(y): 0.9926, norm:0.5811, tok/sec: 100875.64, flops:105.88, batch-reuse:1
@ 6668 train 3.7691 , allloss: 3.7703, dt: 1294.16ms, fracRes: 0.7119, norm(attn): 0.1475, norm(output): 0.9463, norm(x): 0.8086, norm(y): 0.9925, norm:0.6917, tok/sec: 101279.32, flops:106.31, batch-reuse:1
@ 6669 train 4.2562 , allloss: 4.2563, dt: 1290.87ms, fracRes: 0.7121, norm(attn): 0.1455, norm(output): 0.9467, norm(x): 0.8078, norm(y): 0.9925, norm:0.7202, tok/sec: 101537.80, flops:106.58, batch-reuse:1
@ 6670 train 3.8115 , allloss: 3.8121, dt: 1296.41ms, fracRes: 0.7121, norm(attn): 0.1475, norm(output): 0.9463, norm(x): 0.8079, norm(y): 0.9928, norm:0.8488, tok/sec: 101103.66, flops:106.12, batch-reuse:1
@ 6671 train 3.8448 , allloss: 3.8448, dt: 1290.42ms, fracRes: 0.7122, norm(attn): 0.1475, norm(output): 0.9461, norm(x): 0.8076, norm(y): 0.9930, norm:0.6436, tok/sec: 101572.90, flops:106.61, batch-reuse:1
@ 6672 train 4.0085 , allloss: 4.0104, dt: 1300.05ms, fracRes: 0.7119, norm(attn): 0.1455, norm(output): 0.9465, norm(x): 0.8083, norm(y): 0.9929, norm:0.7492, tok/sec: 100820.59, flops:105.82, batch-reuse:1
@ 6673 train 3.8284 , allloss: 3.8288, dt: 1317.06ms, fracRes: 0.7118, norm(attn): 0.1465, norm(output): 0.9464, norm(x): 0.8084, norm(y): 0.9927, norm:0.6409, tok/sec: 99518.97, flops:104.46, batch-reuse:1
@ 6674 train 3.8257 , allloss: 3.8258, dt: 1322.53ms, fracRes: 0.7119, norm(attn): 0.1465, norm(output): 0.9466, norm(x): 0.8085, norm(y): 0.9925, norm:0.6184, tok/sec: 99107.23, flops:104.03, batch-reuse:1
@ 6675 train 3.8728 , allloss: 3.8731, dt: 1281.13ms, fracRes: 0.7121, norm(attn): 0.1475, norm(output): 0.9464, norm(x): 0.8081, norm(y): 0.9927, norm:0.5608, tok/sec: 102309.88, flops:107.39, batch-reuse:1
@ 6676 train 3.8487 , allloss: 3.8487, dt: 1303.76ms, fracRes: 0.7120, norm(attn): 0.1475, norm(output): 0.9460, norm(x): 0.8081, norm(y): 0.9929, norm:0.7310, tok/sec: 100533.98, flops:105.52, batch-reuse:1
@ 6677 train 4.0656 , allloss: 4.0656, dt: 1287.82ms, fracRes: 0.7121, norm(attn): 0.1455, norm(output): 0.9466, norm(x): 0.8089, norm(y): 0.9931, norm:0.6918, tok/sec: 101778.15, flops:106.83, batch-reuse:1
@ 6678 train 3.9621 , allloss: 3.9622, dt: 1304.80ms, fracRes: 0.7120, norm(attn): 0.1465, norm(output): 0.9463, norm(x): 0.8085, norm(y): 0.9931, norm:0.6950, tok/sec: 100454.07, flops:105.44, batch-reuse:1
@ 6679 train 4.0613 , allloss: 4.0613, dt: 1333.75ms, fracRes: 0.7123, norm(attn): 0.1475, norm(output): 0.9460, norm(x): 0.8070, norm(y): 0.9932, norm:0.8344, tok/sec: 98273.41, flops:103.15, batch-reuse:1
@ 6680 train 3.8891 , allloss: 3.8891, dt: 1333.08ms, fracRes: 0.7116, norm(attn): 0.1465, norm(output): 0.9465, norm(x): 0.8086, norm(y): 0.9925, norm:0.7069, tok/sec: 98322.52, flops:103.20, batch-reuse:1
@ 6681 train 3.8411 , allloss: 3.8414, dt: 1328.28ms, fracRes: 0.7117, norm(attn): 0.1475, norm(output): 0.9463, norm(x): 0.8080, norm(y): 0.9927, norm:0.7136, tok/sec: 98677.78, flops:103.58, batch-reuse:1
@ 6682 train 3.9803 , allloss: 3.9804, dt: 1285.43ms, fracRes: 0.7119, norm(attn): 0.1455, norm(output): 0.9464, norm(x): 0.8084, norm(y): 0.9929, norm:0.8024, tok/sec: 101967.48, flops:107.03, batch-reuse:1
@ 6683 train 3.8744 , allloss: 3.8745, dt: 1308.93ms, fracRes: 0.7120, norm(attn): 0.1445, norm(output): 0.9465, norm(x): 0.8087, norm(y): 0.9930, norm:0.6209, tok/sec: 100136.58, flops:105.11, batch-reuse:1
@ 6684 train 3.9353 , allloss: 3.9353, dt: 1331.00ms, fracRes: 0.7121, norm(attn): 0.1475, norm(output): 0.9463, norm(x): 0.8081, norm(y): 0.9930, norm:0.7295, tok/sec: 98476.04, flops:103.36, batch-reuse:1
@ 6685 train 3.7791 , allloss: 3.7794, dt: 1319.89ms, fracRes: 0.7123, norm(attn): 0.1494, norm(output): 0.9456, norm(x): 0.8060, norm(y): 0.9932, norm:0.6372, tok/sec: 99305.40, flops:104.23, batch-reuse:1
@ 6686 train 3.8734 , allloss: 3.8741, dt: 1338.75ms, fracRes: 0.7121, norm(attn): 0.1475, norm(output): 0.9461, norm(x): 0.8076, norm(y): 0.9929, norm:0.5699, tok/sec: 97906.35, flops:102.77, batch-reuse:1
@ 6687 train 4.0084 , allloss: 4.0089, dt: 1328.09ms, fracRes: 0.7122, norm(attn): 0.1465, norm(output): 0.9471, norm(x): 0.8088, norm(y): 0.9927, norm:0.5886, tok/sec: 98692.07, flops:103.59, batch-reuse:1
@ 6688 train 3.8955 , allloss: 3.8957, dt: 1293.09ms, fracRes: 0.7122, norm(attn): 0.1475, norm(output): 0.9470, norm(x): 0.8090, norm(y): 0.9926, norm:0.6630, tok/sec: 101363.09, flops:106.39, batch-reuse:1
@ 6689 train 3.8700 , allloss: 3.8702, dt: 1310.20ms, fracRes: 0.7122, norm(attn): 0.1455, norm(output): 0.9471, norm(x): 0.8094, norm(y): 0.9926, norm:0.5418, tok/sec: 100039.38, flops:105.00, batch-reuse:1
@ 6690 train 3.9114 , allloss: 3.9115, dt: 1334.95ms, fracRes: 0.7123, norm(attn): 0.1455, norm(output): 0.9463, norm(x): 0.8080, norm(y): 0.9927, norm:0.6419, tok/sec: 98185.09, flops:103.06, batch-reuse:1
@ 6691 train 3.9259 , allloss: 3.9264, dt: 1289.28ms, fracRes: 0.7123, norm(attn): 0.1465, norm(output): 0.9463, norm(x): 0.8079, norm(y): 0.9928, norm:0.6699, tok/sec: 101662.74, flops:106.71, batch-reuse:1
@ 6692 train 3.9419 , allloss: 3.9419, dt: 1309.55ms, fracRes: 0.7123, norm(attn): 0.1445, norm(output): 0.9465, norm(x): 0.8083, norm(y): 0.9930, norm:0.5938, tok/sec: 100089.39, flops:105.06, batch-reuse:1
@ 6693 train 3.7716 , allloss: 3.7719, dt: 1326.95ms, fracRes: 0.7122, norm(attn): 0.1465, norm(output): 0.9462, norm(x): 0.8075, norm(y): 0.9930, norm:0.7967, tok/sec: 98777.16, flops:103.68, batch-reuse:1
@ 6694 train 3.8518 , allloss: 3.8520, dt: 1301.02ms, fracRes: 0.7120, norm(attn): 0.1455, norm(output): 0.9463, norm(x): 0.8077, norm(y): 0.9929, norm:0.6792, tok/sec: 100745.47, flops:105.75, batch-reuse:1
@ 6695 train 3.8076 , allloss: 3.8077, dt: 1312.10ms, fracRes: 0.7121, norm(attn): 0.1465, norm(output): 0.9464, norm(x): 0.8074, norm(y): 0.9929, norm:0.5958, tok/sec: 99894.83, flops:104.85, batch-reuse:1
@ 6696 train 3.8364 , allloss: 3.8365, dt: 1284.06ms, fracRes: 0.7121, norm(attn): 0.1455, norm(output): 0.9466, norm(x): 0.8080, norm(y): 0.9926, norm:0.7416, tok/sec: 102076.08, flops:107.14, batch-reuse:1
@ 6697 train 3.8136 , allloss: 3.8136, dt: 1288.26ms, fracRes: 0.7121, norm(attn): 0.1484, norm(output): 0.9462, norm(x): 0.8076, norm(y): 0.9927, norm:0.6629, tok/sec: 101743.59, flops:106.79, batch-reuse:1
@ 6698 train 3.9037 , allloss: 3.9038, dt: 1295.64ms, fracRes: 0.7121, norm(attn): 0.1455, norm(output): 0.9466, norm(x): 0.8082, norm(y): 0.9928, norm:0.6644, tok/sec: 101163.57, flops:106.18, batch-reuse:1
@ 6699 train 3.8779 , allloss: 3.8779, dt: 1293.22ms, fracRes: 0.7123, norm(attn): 0.1455, norm(output): 0.9467, norm(x): 0.8084, norm(y): 0.9927, norm:0.6698, tok/sec: 101352.98, flops:106.38, batch-reuse:1
@ 6700 train 3.9556 , allloss: 3.9557, dt: 1287.48ms, fracRes: 0.7122, norm(attn): 0.1436, norm(output): 0.9466, norm(x): 0.8082, norm(y): 0.9927, norm:0.6440, tok/sec: 101805.33, flops:106.86, batch-reuse:1
@ 6701 train 4.0638 , allloss: 4.0639, dt: 1289.57ms, fracRes: 0.7121, norm(attn): 0.1445, norm(output): 0.9471, norm(x): 0.8086, norm(y): 0.9927, norm:0.6178, tok/sec: 101639.75, flops:106.68, batch-reuse:1
@ 6702 train 4.0082 , allloss: 4.0082, dt: 1310.05ms, fracRes: 0.7122, norm(attn): 0.1445, norm(output): 0.9468, norm(x): 0.8082, norm(y): 0.9928, norm:0.6661, tok/sec: 100051.49, flops:105.02, batch-reuse:1
@ 6703 train 4.0363 , allloss: 4.0364, dt: 1301.68ms, fracRes: 0.7122, norm(attn): 0.1455, norm(output): 0.9468, norm(x): 0.8083, norm(y): 0.9926, norm:0.6756, tok/sec: 100694.20, flops:105.69, batch-reuse:1
@ 6704 train 4.0874 , allloss: 4.0875, dt: 1325.07ms, fracRes: 0.7123, norm(attn): 0.1445, norm(output): 0.9464, norm(x): 0.8075, norm(y): 0.9928, norm:0.6611, tok/sec: 98916.97, flops:103.83, batch-reuse:1
@ 6705 train 4.0778 , allloss: 4.0779, dt: 1305.14ms, fracRes: 0.7124, norm(attn): 0.1436, norm(output): 0.9467, norm(x): 0.8081, norm(y): 0.9927, norm:0.6289, tok/sec: 100427.43, flops:105.41, batch-reuse:1
@ 6706 train 4.0686 , allloss: 4.0687, dt: 1320.05ms, fracRes: 0.7124, norm(attn): 0.1455, norm(output): 0.9464, norm(x): 0.8078, norm(y): 0.9929, norm:0.6667, tok/sec: 99293.30, flops:104.22, batch-reuse:1
@ 6707 train 3.9505 , allloss: 3.9506, dt: 1319.18ms, fracRes: 0.7122, norm(attn): 0.1455, norm(output): 0.9465, norm(x): 0.8083, norm(y): 0.9931, norm:0.6505, tok/sec: 99359.01, flops:104.29, batch-reuse:1
@ 6708 train 4.0348 , allloss: 4.0351, dt: 1301.98ms, fracRes: 0.7122, norm(attn): 0.1465, norm(output): 0.9466, norm(x): 0.8080, norm(y): 0.9930, norm:0.6174, tok/sec: 100671.32, flops:105.67, batch-reuse:1
@ 6709 train 4.0163 , allloss: 4.0164, dt: 1302.23ms, fracRes: 0.7125, norm(attn): 0.1455, norm(output): 0.9468, norm(x): 0.8079, norm(y): 0.9927, norm:0.6550, tok/sec: 100652.10, flops:105.65, batch-reuse:1
@ 6710 train 4.0503 , allloss: 4.0504, dt: 1341.72ms, fracRes: 0.7124, norm(attn): 0.1455, norm(output): 0.9471, norm(x): 0.8084, norm(y): 0.9926, norm:0.6466, tok/sec: 97689.68, flops:102.54, batch-reuse:1
@ 6711 train 4.0650 , allloss: 4.0650, dt: 1318.51ms, fracRes: 0.7123, norm(attn): 0.1465, norm(output): 0.9467, norm(x): 0.8078, norm(y): 0.9926, norm:0.7122, tok/sec: 99409.34, flops:104.34, batch-reuse:1
@ 6712 train 4.1120 , allloss: 4.1124, dt: 1347.82ms, fracRes: 0.7124, norm(attn): 0.1455, norm(output): 0.9473, norm(x): 0.8090, norm(y): 0.9927, norm:0.5777, tok/sec: 97247.59, flops:102.07, batch-reuse:1
@ 6713 train 4.0282 , allloss: 4.0283, dt: 1352.03ms, fracRes: 0.7125, norm(attn): 0.1455, norm(output): 0.9467, norm(x): 0.8081, norm(y): 0.9928, norm:0.6549, tok/sec: 96944.95, flops:101.76, batch-reuse:1
@ 6714 train 3.9687 , allloss: 3.9690, dt: 1338.57ms, fracRes: 0.7122, norm(attn): 0.1465, norm(output): 0.9465, norm(x): 0.8082, norm(y): 0.9927, norm:0.5561, tok/sec: 97919.50, flops:102.78, batch-reuse:1
@ 6715 train 4.1036 , allloss: 4.1037, dt: 1345.07ms, fracRes: 0.7123, norm(attn): 0.1445, norm(output): 0.9469, norm(x): 0.8089, norm(y): 0.9926, norm:0.7194, tok/sec: 97446.58, flops:102.28, batch-reuse:1
@ 6716 train 4.0108 , allloss: 4.0109, dt: 1331.98ms, fracRes: 0.7121, norm(attn): 0.1445, norm(output): 0.9473, norm(x): 0.8094, norm(y): 0.9925, norm:0.6030, tok/sec: 98404.02, flops:103.29, batch-reuse:1
@ 6717 train 4.0083 , allloss: 4.0083, dt: 1339.46ms, fracRes: 0.7121, norm(attn): 0.1445, norm(output): 0.9470, norm(x): 0.8091, norm(y): 0.9927, norm:0.5310, tok/sec: 97854.42, flops:102.71, batch-reuse:1
@ 6718 train 4.1329 , allloss: 4.1332, dt: 1331.84ms, fracRes: 0.7122, norm(attn): 0.1445, norm(output): 0.9470, norm(x): 0.8088, norm(y): 0.9928, norm:0.6210, tok/sec: 98414.27, flops:103.30, batch-reuse:1
@ 6719 train 4.1168 , allloss: 4.1170, dt: 1342.22ms, fracRes: 0.7120, norm(attn): 0.1445, norm(output): 0.9470, norm(x): 0.8089, norm(y): 0.9927, norm:0.6228, tok/sec: 97653.10, flops:102.50, batch-reuse:1
@ 6720 train 4.0645 , allloss: 4.0645, dt: 1341.35ms, fracRes: 0.7122, norm(attn): 0.1455, norm(output): 0.9463, norm(x): 0.8077, norm(y): 0.9927, norm:0.7013, tok/sec: 97716.72, flops:102.57, batch-reuse:1
@ 6721 train 3.9821 , allloss: 3.9822, dt: 1292.41ms, fracRes: 0.7124, norm(attn): 0.1436, norm(output): 0.9467, norm(x): 0.8085, norm(y): 0.9925, norm:0.7151, tok/sec: 101416.46, flops:106.45, batch-reuse:1
@ 6722 train 4.0759 , allloss: 4.0759, dt: 1302.32ms, fracRes: 0.7125, norm(attn): 0.1436, norm(output): 0.9470, norm(x): 0.8088, norm(y): 0.9926, norm:0.6419, tok/sec: 100644.76, flops:105.64, batch-reuse:1
@ 6723 train 3.9709 , allloss: 3.9710, dt: 1295.21ms, fracRes: 0.7121, norm(attn): 0.1445, norm(output): 0.9469, norm(x): 0.8091, norm(y): 0.9926, norm:0.8256, tok/sec: 101197.39, flops:106.22, batch-reuse:1
@ 6724 train 4.0284 , allloss: 4.0285, dt: 1301.04ms, fracRes: 0.7125, norm(attn): 0.1455, norm(output): 0.9466, norm(x): 0.8083, norm(y): 0.9928, norm:0.5917, tok/sec: 100744.25, flops:105.74, batch-reuse:1
@ 6725 train 4.1314 , allloss: 4.1314, dt: 1313.09ms, fracRes: 0.7125, norm(attn): 0.1455, norm(output): 0.9465, norm(x): 0.8075, norm(y): 0.9930, norm:0.7809, tok/sec: 99819.74, flops:104.77, batch-reuse:1
@ 6726 train 4.0356 , allloss: 4.0357, dt: 1338.83ms, fracRes: 0.7124, norm(attn): 0.1436, norm(output): 0.9467, norm(x): 0.8082, norm(y): 0.9929, norm:0.6167, tok/sec: 97900.27, flops:102.76, batch-reuse:1
@ 6727 train 4.0615 , allloss: 4.0615, dt: 1330.61ms, fracRes: 0.7122, norm(attn): 0.1455, norm(output): 0.9469, norm(x): 0.8089, norm(y): 0.9928, norm:0.7893, tok/sec: 98505.16, flops:103.39, batch-reuse:1
@ 6728 train 3.9708 , allloss: 3.9708, dt: 1307.69ms, fracRes: 0.7122, norm(attn): 0.1445, norm(output): 0.9471, norm(x): 0.8096, norm(y): 0.9927, norm:0.5895, tok/sec: 100231.73, flops:105.21, batch-reuse:1
@ 6729 train 4.1330 , allloss: 4.1331, dt: 1337.70ms, fracRes: 0.7124, norm(attn): 0.1436, norm(output): 0.9474, norm(x): 0.8097, norm(y): 0.9928, norm:0.7186, tok/sec: 97983.32, flops:102.85, batch-reuse:1
@ 6730 train 4.0878 , allloss: 4.0878, dt: 1296.06ms, fracRes: 0.7125, norm(attn): 0.1436, norm(output): 0.9470, norm(x): 0.8088, norm(y): 0.9929, norm:0.6041, tok/sec: 101131.28, flops:106.15, batch-reuse:1
@ 6731 train 3.9951 , allloss: 3.9952, dt: 1295.69ms, fracRes: 0.7123, norm(attn): 0.1455, norm(output): 0.9463, norm(x): 0.8081, norm(y): 0.9929, norm:0.6905, tok/sec: 101160.00, flops:106.18, batch-reuse:1
@ 6732 train 4.0542 , allloss: 4.0542, dt: 1337.55ms, fracRes: 0.7123, norm(attn): 0.1455, norm(output): 0.9467, norm(x): 0.8088, norm(y): 0.9930, norm:0.7496, tok/sec: 97994.22, flops:102.86, batch-reuse:1
@ 6733 train 4.0440 , allloss: 4.0440, dt: 1346.66ms, fracRes: 0.7128, norm(attn): 0.1455, norm(output): 0.9466, norm(x): 0.8086, norm(y): 0.9931, norm:0.5835, tok/sec: 97331.13, flops:102.16, batch-reuse:1
@ 6734 train 4.0587 , allloss: 4.0587, dt: 1301.72ms, fracRes: 0.7125, norm(attn): 0.1436, norm(output): 0.9473, norm(x): 0.8098, norm(y): 0.9928, norm:0.7821, tok/sec: 100691.38, flops:105.69, batch-reuse:1
@ 6735 train 3.9532 , allloss: 3.9532, dt: 1297.78ms, fracRes: 0.7124, norm(attn): 0.1465, norm(output): 0.9466, norm(x): 0.8084, norm(y): 0.9928, norm:0.8197, tok/sec: 100997.42, flops:106.01, batch-reuse:1
@ 6736 train 3.9730 , allloss: 3.9731, dt: 1299.02ms, fracRes: 0.7125, norm(attn): 0.1445, norm(output): 0.9464, norm(x): 0.8081, norm(y): 0.9926, norm:0.6301, tok/sec: 100900.97, flops:105.91, batch-reuse:1
@ 6737 train 3.9331 , allloss: 3.9333, dt: 1296.65ms, fracRes: 0.7125, norm(attn): 0.1445, norm(output): 0.9462, norm(x): 0.8075, norm(y): 0.9925, norm:0.6683, tok/sec: 101085.11, flops:106.10, batch-reuse:1
@ 6738 train 4.0168 , allloss: 4.0169, dt: 1272.66ms, fracRes: 0.7124, norm(attn): 0.1436, norm(output): 0.9469, norm(x): 0.8094, norm(y): 0.9927, norm:0.7958, tok/sec: 102990.24, flops:108.10, batch-reuse:1
@ 6739 train 4.0895 , allloss: 4.0895, dt: 1311.33ms, fracRes: 0.7125, norm(attn): 0.1445, norm(output): 0.9469, norm(x): 0.8099, norm(y): 0.9927, norm:0.7619, tok/sec: 99953.53, flops:104.91, batch-reuse:1
@ 6740 train 3.9985 , allloss: 3.9985, dt: 1329.33ms, fracRes: 0.7125, norm(attn): 0.1445, norm(output): 0.9468, norm(x): 0.8097, norm(y): 0.9926, norm:0.7079, tok/sec: 98599.73, flops:103.49, batch-reuse:1
@ 6741 train 3.9707 , allloss: 3.9708, dt: 1351.58ms, fracRes: 0.7124, norm(attn): 0.1445, norm(output): 0.9467, norm(x): 0.8094, norm(y): 0.9926, norm:0.6657, tok/sec: 96977.17, flops:101.79, batch-reuse:1
@ 6742 train 3.9481 , allloss: 3.9482, dt: 1329.23ms, fracRes: 0.7124, norm(attn): 0.1445, norm(output): 0.9469, norm(x): 0.8097, norm(y): 0.9925, norm:0.5126, tok/sec: 98607.42, flops:103.50, batch-reuse:1
@ 6743 train 4.0386 , allloss: 4.0386, dt: 1297.66ms, fracRes: 0.7126, norm(attn): 0.1445, norm(output): 0.9465, norm(x): 0.8086, norm(y): 0.9926, norm:0.6815, tok/sec: 101006.57, flops:106.02, batch-reuse:1
@ 6744 train 4.0042 , allloss: 4.0042, dt: 1305.52ms, fracRes: 0.7122, norm(attn): 0.1465, norm(output): 0.9468, norm(x): 0.8096, norm(y): 0.9928, norm:0.6213, tok/sec: 100398.60, flops:105.38, batch-reuse:1
@ 6745 train 3.9535 , allloss: 3.9536, dt: 1314.57ms, fracRes: 0.7125, norm(attn): 0.1445, norm(output): 0.9463, norm(x): 0.8088, norm(y): 0.9930, norm:0.5499, tok/sec: 99706.90, flops:104.66, batch-reuse:1
@ 6746 train 4.0201 , allloss: 4.0204, dt: 1300.00ms, fracRes: 0.7125, norm(attn): 0.1426, norm(output): 0.9467, norm(x): 0.8093, norm(y): 0.9927, norm:0.5981, tok/sec: 100824.99, flops:105.83, batch-reuse:1
@ 6747 train 4.0110 , allloss: 4.0111, dt: 1307.39ms, fracRes: 0.7123, norm(attn): 0.1436, norm(output): 0.9467, norm(x): 0.8096, norm(y): 0.9925, norm:0.5466, tok/sec: 100254.32, flops:105.23, batch-reuse:1
@ 6748 train 4.0445 , allloss: 4.0445, dt: 1315.45ms, fracRes: 0.7122, norm(attn): 0.1455, norm(output): 0.9468, norm(x): 0.8096, norm(y): 0.9925, norm:0.6142, tok/sec: 99640.32, flops:104.59, batch-reuse:1
@ 6749 train 4.0181 , allloss: 4.0181, dt: 1331.08ms, fracRes: 0.7122, norm(attn): 0.1426, norm(output): 0.9470, norm(x): 0.8104, norm(y): 0.9925, norm:0.5853, tok/sec: 98470.70, flops:103.36, batch-reuse:1
@ 6750 train 4.0239 , allloss: 4.0239, dt: 1295.97ms, fracRes: 0.7123, norm(attn): 0.1426, norm(output): 0.9472, norm(x): 0.8105, norm(y): 0.9928, norm:0.5757, tok/sec: 101137.98, flops:106.16, batch-reuse:1
@ 6751 train 3.9851 , allloss: 3.9852, dt: 1301.90ms, fracRes: 0.7124, norm(attn): 0.1455, norm(output): 0.9470, norm(x): 0.8104, norm(y): 0.9928, norm:0.5224, tok/sec: 100677.35, flops:105.67, batch-reuse:1
@ 6752 train 4.2267 , allloss: 4.2267, dt: 1320.47ms, fracRes: 0.7121, norm(attn): 0.1475, norm(output): 0.9475, norm(x): 0.8098, norm(y): 0.9929, norm:1.0831, tok/sec: 99261.33, flops:104.19, batch-reuse:1
@ 6753 train 4.0350 , allloss: 4.0359, dt: 1304.89ms, fracRes: 0.7120, norm(attn): 0.1475, norm(output): 0.9469, norm(x): 0.8103, norm(y): 0.9927, norm:1.0891, tok/sec: 100446.62, flops:105.43, batch-reuse:1
@ 6754 train 4.0789 , allloss: 4.0789, dt: 1328.41ms, fracRes: 0.7123, norm(attn): 0.1455, norm(output): 0.9465, norm(x): 0.8093, norm(y): 0.9927, norm:0.7115, tok/sec: 98668.50, flops:103.57, batch-reuse:1
@ 6755 train 3.9648 , allloss: 3.9648, dt: 1332.33ms, fracRes: 0.7121, norm(attn): 0.1455, norm(output): 0.9467, norm(x): 0.8095, norm(y): 0.9926, norm:0.7995, tok/sec: 98377.84, flops:103.26, batch-reuse:1
@ 6756 train 4.0229 , allloss: 4.0230, dt: 1328.99ms, fracRes: 0.7122, norm(attn): 0.1455, norm(output): 0.9470, norm(x): 0.8094, norm(y): 0.9926, norm:0.7047, tok/sec: 98625.33, flops:103.52, batch-reuse:1
@ 6757 train 4.0456 , allloss: 4.0457, dt: 1327.51ms, fracRes: 0.7121, norm(attn): 0.1436, norm(output): 0.9473, norm(x): 0.8102, norm(y): 0.9926, norm:0.5866, tok/sec: 98735.43, flops:103.64, batch-reuse:1
@ 6758 train 4.0324 , allloss: 4.0325, dt: 1290.08ms, fracRes: 0.7122, norm(attn): 0.1445, norm(output): 0.9470, norm(x): 0.8097, norm(y): 0.9927, norm:0.6509, tok/sec: 101600.20, flops:106.64, batch-reuse:1
@ 6759 train 3.9926 , allloss: 3.9926, dt: 1309.74ms, fracRes: 0.7124, norm(attn): 0.1445, norm(output): 0.9469, norm(x): 0.8093, norm(y): 0.9926, norm:0.6039, tok/sec: 100075.11, flops:105.04, batch-reuse:1
@ 6760 train 3.9878 , allloss: 3.9878, dt: 1312.99ms, fracRes: 0.7125, norm(attn): 0.1426, norm(output): 0.9469, norm(x): 0.8093, norm(y): 0.9926, norm:0.5884, tok/sec: 99826.92, flops:104.78, batch-reuse:1
@ 6761 train 3.9877 , allloss: 3.9879, dt: 1300.46ms, fracRes: 0.7124, norm(attn): 0.1445, norm(output): 0.9467, norm(x): 0.8092, norm(y): 0.9928, norm:0.5759, tok/sec: 100788.57, flops:105.79, batch-reuse:1
@ 6762 train 4.1099 , allloss: 4.1099, dt: 1310.75ms, fracRes: 0.7125, norm(attn): 0.1436, norm(output): 0.9467, norm(x): 0.8087, norm(y): 0.9926, norm:0.6404, tok/sec: 99998.09, flops:104.96, batch-reuse:1
@ 6763 train 3.9169 , allloss: 3.9169, dt: 1293.82ms, fracRes: 0.7124, norm(attn): 0.1455, norm(output): 0.9467, norm(x): 0.8090, norm(y): 0.9922, norm:0.7006, tok/sec: 101305.96, flops:106.33, batch-reuse:1
@ 6764 train 4.1492 , allloss: 4.1493, dt: 1296.99ms, fracRes: 0.7124, norm(attn): 0.1436, norm(output): 0.9469, norm(x): 0.8088, norm(y): 0.9923, norm:0.9648, tok/sec: 101058.65, flops:106.07, batch-reuse:1
@ 6765 train 4.0920 , allloss: 4.0921, dt: 1310.55ms, fracRes: 0.7124, norm(attn): 0.1455, norm(output): 0.9468, norm(x): 0.8091, norm(y): 0.9925, norm:0.7517, tok/sec: 100013.06, flops:104.98, batch-reuse:1
@ 6766 train 4.0823 , allloss: 4.0823, dt: 1316.96ms, fracRes: 0.7125, norm(attn): 0.1436, norm(output): 0.9471, norm(x): 0.8097, norm(y): 0.9926, norm:0.7963, tok/sec: 99526.28, flops:104.47, batch-reuse:1
@ 6767 train 4.0744 , allloss: 4.0745, dt: 1305.71ms, fracRes: 0.7125, norm(attn): 0.1436, norm(output): 0.9471, norm(x): 0.8098, norm(y): 0.9928, norm:0.6445, tok/sec: 100383.49, flops:105.37, batch-reuse:1
@ 6768 train 3.9968 , allloss: 3.9969, dt: 1318.94ms, fracRes: 0.7125, norm(attn): 0.1445, norm(output): 0.9471, norm(x): 0.8097, norm(y): 0.9927, norm:0.6876, tok/sec: 99376.49, flops:104.31, batch-reuse:1
@ 6769 train 4.0614 , allloss: 4.0615, dt: 1286.28ms, fracRes: 0.7123, norm(attn): 0.1426, norm(output): 0.9471, norm(x): 0.8100, norm(y): 0.9926, norm:0.6334, tok/sec: 101899.93, flops:106.96, batch-reuse:1
@ 6770 train 4.0027 , allloss: 4.0027, dt: 1306.37ms, fracRes: 0.7122, norm(attn): 0.1426, norm(output): 0.9469, norm(x): 0.8100, norm(y): 0.9923, norm:0.5491, tok/sec: 100332.67, flops:105.31, batch-reuse:1
@ 6771 train 4.0516 , allloss: 4.0517, dt: 1330.08ms, fracRes: 0.7123, norm(attn): 0.1445, norm(output): 0.9467, norm(x): 0.8093, norm(y): 0.9925, norm:0.5866, tok/sec: 98544.69, flops:103.44, batch-reuse:1
@ 6772 train 4.1174 , allloss: 4.1174, dt: 1300.34ms, fracRes: 0.7124, norm(attn): 0.1436, norm(output): 0.9471, norm(x): 0.8097, norm(y): 0.9926, norm:0.6947, tok/sec: 100798.33, flops:105.80, batch-reuse:1
@ 6773 train 4.0771 , allloss: 4.0772, dt: 1307.66ms, fracRes: 0.7123, norm(attn): 0.1436, norm(output): 0.9476, norm(x): 0.8109, norm(y): 0.9926, norm:0.6730, tok/sec: 100233.74, flops:105.21, batch-reuse:1
@ 6774 train 3.9785 , allloss: 3.9785, dt: 1314.87ms, fracRes: 0.7122, norm(attn): 0.1455, norm(output): 0.9468, norm(x): 0.8096, norm(y): 0.9926, norm:0.6086, tok/sec: 99684.26, flops:104.63, batch-reuse:1
@ 6775 train 4.0275 , allloss: 4.0275, dt: 1315.17ms, fracRes: 0.7121, norm(attn): 0.1426, norm(output): 0.9473, norm(x): 0.8103, norm(y): 0.9925, norm:0.7275, tok/sec: 99661.28, flops:104.61, batch-reuse:1
@ 6776 train 4.0866 , allloss: 4.0866, dt: 1279.82ms, fracRes: 0.7122, norm(attn): 0.1426, norm(output): 0.9470, norm(x): 0.8102, norm(y): 0.9927, norm:0.8212, tok/sec: 102414.40, flops:107.50, batch-reuse:1
@ 6777 train 4.0152 , allloss: 4.0152, dt: 1283.23ms, fracRes: 0.7123, norm(attn): 0.1426, norm(output): 0.9468, norm(x): 0.8102, norm(y): 0.9928, norm:0.7646, tok/sec: 102142.09, flops:107.21, batch-reuse:1
@ 6778 train 3.9802 , allloss: 3.9803, dt: 1304.32ms, fracRes: 0.7122, norm(attn): 0.1436, norm(output): 0.9467, norm(x): 0.8098, norm(y): 0.9929, norm:0.6199, tok/sec: 100490.38, flops:105.48, batch-reuse:1
@ 6779 train 3.9954 , allloss: 3.9954, dt: 1287.00ms, fracRes: 0.7120, norm(attn): 0.1436, norm(output): 0.9467, norm(x): 0.8097, norm(y): 0.9927, norm:0.6776, tok/sec: 101842.90, flops:106.90, batch-reuse:1
@ 6780 train 3.9792 , allloss: 3.9792, dt: 1287.70ms, fracRes: 0.7118, norm(attn): 0.1445, norm(output): 0.9468, norm(x): 0.8103, norm(y): 0.9925, norm:0.5860, tok/sec: 101787.78, flops:106.84, batch-reuse:1
@ 6781 train 4.0126 , allloss: 4.0127, dt: 1312.98ms, fracRes: 0.7120, norm(attn): 0.1426, norm(output): 0.9471, norm(x): 0.8110, norm(y): 0.9925, norm:0.5597, tok/sec: 99827.88, flops:104.78, batch-reuse:1
@ 6782 train 4.0779 , allloss: 4.0779, dt: 1313.54ms, fracRes: 0.7122, norm(attn): 0.1426, norm(output): 0.9478, norm(x): 0.8114, norm(y): 0.9925, norm:0.7401, tok/sec: 99785.21, flops:104.74, batch-reuse:1
@ 6783 train 3.9912 , allloss: 3.9912, dt: 1304.85ms, fracRes: 0.7122, norm(attn): 0.1426, norm(output): 0.9473, norm(x): 0.8110, norm(y): 0.9926, norm:0.6313, tok/sec: 100450.20, flops:105.44, batch-reuse:1
@ 6784 train 4.0567 , allloss: 4.0567, dt: 1322.03ms, fracRes: 0.7124, norm(attn): 0.1436, norm(output): 0.9467, norm(x): 0.8099, norm(y): 0.9927, norm:0.6784, tok/sec: 99144.87, flops:104.07, batch-reuse:1
@ 6785 train 3.9643 , allloss: 3.9643, dt: 1303.04ms, fracRes: 0.7121, norm(attn): 0.1436, norm(output): 0.9472, norm(x): 0.8110, norm(y): 0.9924, norm:0.7930, tok/sec: 100589.28, flops:105.58, batch-reuse:1
@ 6786 train 3.9963 , allloss: 3.9963, dt: 1303.86ms, fracRes: 0.7124, norm(attn): 0.1426, norm(output): 0.9471, norm(x): 0.8107, norm(y): 0.9923, norm:0.5640, tok/sec: 100525.93, flops:105.52, batch-reuse:1
@ 6787 train 3.9956 , allloss: 3.9956, dt: 1306.42ms, fracRes: 0.7123, norm(attn): 0.1436, norm(output): 0.9473, norm(x): 0.8111, norm(y): 0.9924, norm:0.6561, tok/sec: 100329.17, flops:105.31, batch-reuse:1
@ 6788 train 3.9883 , allloss: 3.9883, dt: 1333.04ms, fracRes: 0.7122, norm(attn): 0.1436, norm(output): 0.9473, norm(x): 0.8113, norm(y): 0.9924, norm:0.5499, tok/sec: 98325.35, flops:103.21, batch-reuse:1
@ 6789 train 4.0377 , allloss: 4.0378, dt: 1310.84ms, fracRes: 0.7122, norm(attn): 0.1426, norm(output): 0.9469, norm(x): 0.8105, norm(y): 0.9925, norm:0.6410, tok/sec: 99990.60, flops:104.95, batch-reuse:1
@ 6790 train 3.8995 , allloss: 3.8995, dt: 1332.55ms, fracRes: 0.7126, norm(attn): 0.1465, norm(output): 0.9466, norm(x): 0.8090, norm(y): 0.9924, norm:0.6265, tok/sec: 98362.14, flops:103.24, batch-reuse:1
@ 6791 train 4.0241 , allloss: 4.0242, dt: 1311.23ms, fracRes: 0.7123, norm(attn): 0.1436, norm(output): 0.9469, norm(x): 0.8106, norm(y): 0.9924, norm:0.6011, tok/sec: 99961.13, flops:104.92, batch-reuse:1
@ 6792 train 3.9510 , allloss: 3.9510, dt: 1321.77ms, fracRes: 0.7121, norm(attn): 0.1436, norm(output): 0.9469, norm(x): 0.8106, norm(y): 0.9922, norm:0.5464, tok/sec: 99164.25, flops:104.09, batch-reuse:1
@ 6793 train 3.9789 , allloss: 3.9789, dt: 1292.81ms, fracRes: 0.7118, norm(attn): 0.1436, norm(output): 0.9473, norm(x): 0.8117, norm(y): 0.9921, norm:0.5840, tok/sec: 101384.98, flops:106.42, batch-reuse:1
@ 6794 train 4.0286 , allloss: 4.0286, dt: 1295.64ms, fracRes: 0.7119, norm(attn): 0.1426, norm(output): 0.9476, norm(x): 0.8120, norm(y): 0.9920, norm:0.5714, tok/sec: 101163.74, flops:106.18, batch-reuse:1
@ 6795 train 3.9187 , allloss: 3.9188, dt: 1276.38ms, fracRes: 0.7122, norm(attn): 0.1436, norm(output): 0.9468, norm(x): 0.8104, norm(y): 0.9922, norm:0.6528, tok/sec: 102690.82, flops:107.79, batch-reuse:1
@ 6796 train 4.0136 , allloss: 4.0136, dt: 1304.38ms, fracRes: 0.7122, norm(attn): 0.1426, norm(output): 0.9469, norm(x): 0.8110, norm(y): 0.9923, norm:0.5339, tok/sec: 100486.33, flops:105.47, batch-reuse:1
@ 6797 train 3.9629 , allloss: 3.9629, dt: 1324.99ms, fracRes: 0.7120, norm(attn): 0.1436, norm(output): 0.9470, norm(x): 0.8113, norm(y): 0.9923, norm:0.5635, tok/sec: 98922.79, flops:103.83, batch-reuse:1
@ 6798 train 4.0325 , allloss: 4.0325, dt: 1330.68ms, fracRes: 0.7118, norm(attn): 0.1455, norm(output): 0.9471, norm(x): 0.8111, norm(y): 0.9923, norm:0.6599, tok/sec: 98499.85, flops:103.39, batch-reuse:1
@ 6799 train 3.8806 , allloss: 3.8806, dt: 1312.99ms, fracRes: 0.7120, norm(attn): 0.1455, norm(output): 0.9467, norm(x): 0.8106, norm(y): 0.9922, norm:0.5857, tok/sec: 99827.33, flops:104.78, batch-reuse:1
@ 6800 train 3.9157 , allloss: 3.9157, dt: 1288.83ms, fracRes: 0.7121, norm(attn): 0.1426, norm(output): 0.9467, norm(x): 0.8104, norm(y): 0.9922, norm:0.5746, tok/sec: 101698.61, flops:106.75, batch-reuse:1
@ 6801 train 3.9689 , allloss: 3.9690, dt: 1295.99ms, fracRes: 0.7118, norm(attn): 0.1436, norm(output): 0.9470, norm(x): 0.8109, norm(y): 0.9921, norm:0.6230, tok/sec: 101136.83, flops:106.16, batch-reuse:1
@ 6802 train 3.8832 , allloss: 3.8833, dt: 1298.85ms, fracRes: 0.7120, norm(attn): 0.1436, norm(output): 0.9470, norm(x): 0.8107, norm(y): 0.9923, norm:0.5814, tok/sec: 100913.81, flops:105.92, batch-reuse:1
@ 6803 train 3.8975 , allloss: 3.8975, dt: 1309.43ms, fracRes: 0.7121, norm(attn): 0.1436, norm(output): 0.9470, norm(x): 0.8109, norm(y): 0.9924, norm:0.6011, tok/sec: 100098.63, flops:105.07, batch-reuse:1
@ 6804 train 4.0098 , allloss: 4.0099, dt: 1286.79ms, fracRes: 0.7123, norm(attn): 0.1416, norm(output): 0.9470, norm(x): 0.8109, norm(y): 0.9922, norm:0.5581, tok/sec: 101859.49, flops:106.91, batch-reuse:1
@ 6805 train 3.9864 , allloss: 3.9864, dt: 1312.80ms, fracRes: 0.7122, norm(attn): 0.1426, norm(output): 0.9469, norm(x): 0.8105, norm(y): 0.9920, norm:0.6234, tok/sec: 99841.37, flops:104.80, batch-reuse:1
@ 6806 train 3.8723 , allloss: 3.8725, dt: 1281.06ms, fracRes: 0.7119, norm(attn): 0.1436, norm(output): 0.9470, norm(x): 0.8108, norm(y): 0.9920, norm:0.5900, tok/sec: 102315.02, flops:107.39, batch-reuse:1
@ 6807 train 3.8597 , allloss: 3.8597, dt: 1291.97ms, fracRes: 0.7117, norm(attn): 0.1445, norm(output): 0.9470, norm(x): 0.8110, norm(y): 0.9920, norm:0.6096, tok/sec: 101451.65, flops:106.49, batch-reuse:1
@ 6808 train 4.0213 , allloss: 4.0214, dt: 1284.29ms, fracRes: 0.7120, norm(attn): 0.1445, norm(output): 0.9469, norm(x): 0.8107, norm(y): 0.9921, norm:0.7051, tok/sec: 102058.32, flops:107.12, batch-reuse:1
@ 6809 train 3.9897 , allloss: 3.9897, dt: 1312.70ms, fracRes: 0.7120, norm(attn): 0.1436, norm(output): 0.9469, norm(x): 0.8109, norm(y): 0.9921, norm:0.6615, tok/sec: 99848.93, flops:104.80, batch-reuse:1
@ 6810 train 3.9819 , allloss: 3.9819, dt: 1313.83ms, fracRes: 0.7121, norm(attn): 0.1426, norm(output): 0.9479, norm(x): 0.8125, norm(y): 0.9920, norm:0.5797, tok/sec: 99763.30, flops:104.71, batch-reuse:1
@ 6811 train 3.9464 , allloss: 3.9470, dt: 1335.20ms, fracRes: 0.7120, norm(attn): 0.1426, norm(output): 0.9474, norm(x): 0.8118, norm(y): 0.9920, norm:0.5877, tok/sec: 98166.26, flops:103.04, batch-reuse:1
@ 6812 train 4.0142 , allloss: 4.0142, dt: 1305.71ms, fracRes: 0.7120, norm(attn): 0.1475, norm(output): 0.9467, norm(x): 0.8097, norm(y): 0.9922, norm:0.9869, tok/sec: 100383.68, flops:105.37, batch-reuse:1
@ 6813 train 3.8593 , allloss: 3.8593, dt: 1319.84ms, fracRes: 0.7123, norm(attn): 0.1436, norm(output): 0.9463, norm(x): 0.8099, norm(y): 0.9921, norm:0.9128, tok/sec: 99308.99, flops:104.24, batch-reuse:1
@ 6814 train 4.0456 , allloss: 4.0456, dt: 1298.66ms, fracRes: 0.7127, norm(attn): 0.1436, norm(output): 0.9463, norm(x): 0.8091, norm(y): 0.9921, norm:0.9465, tok/sec: 100928.35, flops:105.94, batch-reuse:1
@ 6815 train 3.8559 , allloss: 3.8559, dt: 1296.11ms, fracRes: 0.7123, norm(attn): 0.1445, norm(output): 0.9468, norm(x): 0.8106, norm(y): 0.9919, norm:0.8844, tok/sec: 101127.06, flops:106.15, batch-reuse:1
@ 6816 train 4.0823 , allloss: 4.0823, dt: 1297.68ms, fracRes: 0.7122, norm(attn): 0.1436, norm(output): 0.9475, norm(x): 0.8111, norm(y): 0.9920, norm:0.8964, tok/sec: 101004.82, flops:106.02, batch-reuse:1
@ 6817 train 4.0841 , allloss: 4.0842, dt: 1295.70ms, fracRes: 0.7122, norm(attn): 0.1426, norm(output): 0.9480, norm(x): 0.8125, norm(y): 0.9918, norm:0.8556, tok/sec: 101159.49, flops:106.18, batch-reuse:1
@ 6818 train 3.9010 , allloss: 3.9011, dt: 1302.82ms, fracRes: 0.7124, norm(attn): 0.1436, norm(output): 0.9470, norm(x): 0.8109, norm(y): 0.9919, norm:0.6976, tok/sec: 100606.56, flops:105.60, batch-reuse:1
@ 6819 train 3.9905 , allloss: 3.9906, dt: 1315.93ms, fracRes: 0.7125, norm(attn): 0.1426, norm(output): 0.9472, norm(x): 0.8113, norm(y): 0.9920, norm:0.6908, tok/sec: 99603.98, flops:104.55, batch-reuse:1
@ 6820 train 3.9579 , allloss: 3.9579, dt: 1308.95ms, fracRes: 0.7123, norm(attn): 0.1445, norm(output): 0.9469, norm(x): 0.8108, norm(y): 0.9920, norm:0.6390, tok/sec: 100134.95, flops:105.10, batch-reuse:1
@ 6821 train 3.9248 , allloss: 3.9253, dt: 1304.34ms, fracRes: 0.7122, norm(attn): 0.1445, norm(output): 0.9469, norm(x): 0.8106, norm(y): 0.9919, norm:0.6656, tok/sec: 100489.31, flops:105.48, batch-reuse:1
@ 6822 train 3.9446 , allloss: 3.9446, dt: 1286.05ms, fracRes: 0.7124, norm(attn): 0.1426, norm(output): 0.9468, norm(x): 0.8107, norm(y): 0.9918, norm:0.6122, tok/sec: 101918.46, flops:106.98, batch-reuse:1
@ 6823 train 3.8878 , allloss: 3.8878, dt: 1312.25ms, fracRes: 0.7124, norm(attn): 0.1445, norm(output): 0.9471, norm(x): 0.8112, norm(y): 0.9917, norm:0.6827, tok/sec: 99883.05, flops:104.84, batch-reuse:1
@ 6824 train 3.9448 , allloss: 3.9448, dt: 1312.55ms, fracRes: 0.7123, norm(attn): 0.1436, norm(output): 0.9472, norm(x): 0.8118, norm(y): 0.9916, norm:0.5789, tok/sec: 99860.77, flops:104.82, batch-reuse:1
@ 6825 train 4.0023 , allloss: 4.0024, dt: 1283.57ms, fracRes: 0.7123, norm(attn): 0.1436, norm(output): 0.9469, norm(x): 0.8112, norm(y): 0.9916, norm:0.5570, tok/sec: 102115.46, flops:107.18, batch-reuse:1
@ 6826 train 3.9839 , allloss: 3.9842, dt: 1276.96ms, fracRes: 0.7124, norm(attn): 0.1436, norm(output): 0.9472, norm(x): 0.8112, norm(y): 0.9918, norm:0.5873, tok/sec: 102643.60, flops:107.74, batch-reuse:1
@ 6827 train 3.9946 , allloss: 3.9947, dt: 1317.13ms, fracRes: 0.7127, norm(attn): 0.1445, norm(output): 0.9468, norm(x): 0.8102, norm(y): 0.9922, norm:0.6796, tok/sec: 99513.24, flops:104.45, batch-reuse:1
@ 6828 train 3.9527 , allloss: 3.9527, dt: 1316.98ms, fracRes: 0.7126, norm(attn): 0.1445, norm(output): 0.9471, norm(x): 0.8107, norm(y): 0.9922, norm:0.5410, tok/sec: 99524.70, flops:104.46, batch-reuse:1
@ 6829 train 3.8419 , allloss: 3.8426, dt: 1316.67ms, fracRes: 0.7122, norm(attn): 0.1455, norm(output): 0.9467, norm(x): 0.8106, norm(y): 0.9921, norm:0.5845, tok/sec: 99548.45, flops:104.49, batch-reuse:1
@ 6830 train 3.9495 , allloss: 3.9496, dt: 1327.33ms, fracRes: 0.7120, norm(attn): 0.1426, norm(output): 0.9469, norm(x): 0.8111, norm(y): 0.9919, norm:0.6530, tok/sec: 98748.59, flops:103.65, batch-reuse:1
@ 6831 train 3.9123 , allloss: 3.9124, dt: 1302.25ms, fracRes: 0.7122, norm(attn): 0.1436, norm(output): 0.9468, norm(x): 0.8108, norm(y): 0.9919, norm:0.5204, tok/sec: 100650.70, flops:105.65, batch-reuse:1
@ 6832 train 3.9982 , allloss: 3.9983, dt: 1295.65ms, fracRes: 0.7124, norm(attn): 0.1416, norm(output): 0.9474, norm(x): 0.8117, norm(y): 0.9919, norm:0.6154, tok/sec: 101163.38, flops:106.18, batch-reuse:1
@ 6833 train 3.9144 , allloss: 3.9146, dt: 1320.29ms, fracRes: 0.7122, norm(attn): 0.1426, norm(output): 0.9472, norm(x): 0.8114, norm(y): 0.9917, norm:0.6345, tok/sec: 99274.81, flops:104.20, batch-reuse:1
@ 6834 train 3.8310 , allloss: 3.8314, dt: 1308.54ms, fracRes: 0.7122, norm(attn): 0.1426, norm(output): 0.9468, norm(x): 0.8109, norm(y): 0.9915, norm:0.6088, tok/sec: 100166.41, flops:105.14, batch-reuse:1
@ 6835 train 4.0101 , allloss: 4.0107, dt: 1326.30ms, fracRes: 0.7120, norm(attn): 0.1426, norm(output): 0.9472, norm(x): 0.8118, norm(y): 0.9918, norm:0.6593, tok/sec: 98825.35, flops:103.73, batch-reuse:1
@ 6836 train 3.8606 , allloss: 3.8606, dt: 1306.63ms, fracRes: 0.7121, norm(attn): 0.1445, norm(output): 0.9474, norm(x): 0.8125, norm(y): 0.9918, norm:0.7734, tok/sec: 100312.88, flops:105.29, batch-reuse:1
@ 6837 train 4.0708 , allloss: 4.0708, dt: 1317.31ms, fracRes: 0.7125, norm(attn): 0.1416, norm(output): 0.9474, norm(x): 0.8120, norm(y): 0.9920, norm:0.5537, tok/sec: 99499.41, flops:104.44, batch-reuse:1
@ 6838 train 3.9604 , allloss: 3.9606, dt: 1332.13ms, fracRes: 0.7122, norm(attn): 0.1436, norm(output): 0.9471, norm(x): 0.8118, norm(y): 0.9918, norm:0.7579, tok/sec: 98392.43, flops:103.28, batch-reuse:1
@ 6839 train 3.9817 , allloss: 3.9818, dt: 1307.06ms, fracRes: 0.7121, norm(attn): 0.1445, norm(output): 0.9468, norm(x): 0.8110, norm(y): 0.9919, norm:0.6246, tok/sec: 100279.87, flops:105.26, batch-reuse:1
@ 6840 train 3.8940 , allloss: 3.8940, dt: 1296.97ms, fracRes: 0.7119, norm(attn): 0.1445, norm(output): 0.9473, norm(x): 0.8121, norm(y): 0.9917, norm:0.7202, tok/sec: 101060.06, flops:106.08, batch-reuse:1
@ 6841 train 3.9723 , allloss: 3.9723, dt: 1318.53ms, fracRes: 0.7122, norm(attn): 0.1436, norm(output): 0.9471, norm(x): 0.8119, norm(y): 0.9918, norm:0.6111, tok/sec: 99408.01, flops:104.34, batch-reuse:1
@ 6842 train 3.9334 , allloss: 3.9334, dt: 1284.85ms, fracRes: 0.7122, norm(attn): 0.1416, norm(output): 0.9471, norm(x): 0.8121, norm(y): 0.9919, norm:0.7066, tok/sec: 102013.34, flops:107.08, batch-reuse:1
@ 6843 train 3.7791 , allloss: 3.7791, dt: 1320.73ms, fracRes: 0.7123, norm(attn): 0.1436, norm(output): 0.9469, norm(x): 0.8120, norm(y): 0.9917, norm:0.6982, tok/sec: 99242.11, flops:104.17, batch-reuse:1
@ 6844 train 3.8837 , allloss: 3.8838, dt: 1341.92ms, fracRes: 0.7122, norm(attn): 0.1436, norm(output): 0.9468, norm(x): 0.8117, norm(y): 0.9916, norm:0.5690, tok/sec: 97675.07, flops:102.52, batch-reuse:1
@ 6845 train 3.9794 , allloss: 3.9794, dt: 1326.85ms, fracRes: 0.7121, norm(attn): 0.1436, norm(output): 0.9469, norm(x): 0.8118, norm(y): 0.9916, norm:0.7059, tok/sec: 98784.43, flops:103.69, batch-reuse:1
@ 6846 train 3.9619 , allloss: 3.9619, dt: 1289.44ms, fracRes: 0.7123, norm(attn): 0.1426, norm(output): 0.9471, norm(x): 0.8116, norm(y): 0.9917, norm:0.6608, tok/sec: 101650.67, flops:106.70, batch-reuse:1
@ 6847 train 3.8371 , allloss: 3.8372, dt: 1293.26ms, fracRes: 0.7124, norm(attn): 0.1445, norm(output): 0.9468, norm(x): 0.8108, norm(y): 0.9916, norm:0.5552, tok/sec: 101349.84, flops:106.38, batch-reuse:1
@ 6848 train 3.8036 , allloss: 3.8036, dt: 1287.54ms, fracRes: 0.7124, norm(attn): 0.1445, norm(output): 0.9468, norm(x): 0.8104, norm(y): 0.9916, norm:0.5788, tok/sec: 101800.11, flops:106.85, batch-reuse:1
@ 6849 train 3.8384 , allloss: 3.8385, dt: 1293.44ms, fracRes: 0.7124, norm(attn): 0.1465, norm(output): 0.9462, norm(x): 0.8093, norm(y): 0.9918, norm:0.5832, tok/sec: 101335.63, flops:106.37, batch-reuse:1
@ 6850 train 3.8048 , allloss: 3.8049, dt: 1286.04ms, fracRes: 0.7123, norm(attn): 0.1436, norm(output): 0.9468, norm(x): 0.8109, norm(y): 0.9916, norm:0.6135, tok/sec: 101918.93, flops:106.98, batch-reuse:1
@ 6851 train 3.8606 , allloss: 3.8606, dt: 1302.53ms, fracRes: 0.7123, norm(attn): 0.1426, norm(output): 0.9472, norm(x): 0.8118, norm(y): 0.9918, norm:0.5576, tok/sec: 100628.81, flops:105.62, batch-reuse:1
@ 6852 train 3.8906 , allloss: 3.8906, dt: 1282.82ms, fracRes: 0.7124, norm(attn): 0.1436, norm(output): 0.9470, norm(x): 0.8113, norm(y): 0.9919, norm:0.5952, tok/sec: 102175.20, flops:107.25, batch-reuse:1
@ 6853 train 3.8376 , allloss: 3.8377, dt: 1289.52ms, fracRes: 0.7124, norm(attn): 0.1436, norm(output): 0.9472, norm(x): 0.8117, norm(y): 0.9914, norm:0.5573, tok/sec: 101644.25, flops:106.69, batch-reuse:1
@ 6854 train 3.7690 , allloss: 3.7690, dt: 1298.53ms, fracRes: 0.7123, norm(attn): 0.1445, norm(output): 0.9468, norm(x): 0.8108, norm(y): 0.9913, norm:0.5829, tok/sec: 100938.80, flops:105.95, batch-reuse:1
@ 6855 train 3.7736 , allloss: 3.7736, dt: 1294.51ms, fracRes: 0.7123, norm(attn): 0.1445, norm(output): 0.9469, norm(x): 0.8111, norm(y): 0.9913, norm:0.5046, tok/sec: 101251.90, flops:106.28, batch-reuse:1
@ 6856 train 3.8120 , allloss: 3.8121, dt: 1324.75ms, fracRes: 0.7123, norm(attn): 0.1436, norm(output): 0.9467, norm(x): 0.8110, norm(y): 0.9915, norm:0.5438, tok/sec: 98940.97, flops:103.85, batch-reuse:1
@ 6857 train 3.8840 , allloss: 3.8847, dt: 1329.74ms, fracRes: 0.7124, norm(attn): 0.1445, norm(output): 0.9467, norm(x): 0.8110, norm(y): 0.9917, norm:0.5158, tok/sec: 98569.89, flops:103.46, batch-reuse:1
@ 6858 train 3.8130 , allloss: 3.8131, dt: 1331.95ms, fracRes: 0.7124, norm(attn): 0.1436, norm(output): 0.9469, norm(x): 0.8117, norm(y): 0.9918, norm:0.5241, tok/sec: 98406.21, flops:103.29, batch-reuse:1
@ 6859 train 3.8845 , allloss: 3.8846, dt: 1315.22ms, fracRes: 0.7122, norm(attn): 0.1416, norm(output): 0.9474, norm(x): 0.8129, norm(y): 0.9916, norm:0.5842, tok/sec: 99657.79, flops:104.60, batch-reuse:1
@ 6860 train 3.8185 , allloss: 3.8186, dt: 1308.18ms, fracRes: 0.7121, norm(attn): 0.1416, norm(output): 0.9474, norm(x): 0.8129, norm(y): 0.9917, norm:0.4967, tok/sec: 100194.45, flops:105.17, batch-reuse:1
@ 6861 train 3.8932 , allloss: 3.8932, dt: 1281.38ms, fracRes: 0.7122, norm(attn): 0.1416, norm(output): 0.9474, norm(x): 0.8128, norm(y): 0.9917, norm:0.5230, tok/sec: 102289.48, flops:107.37, batch-reuse:1
@ 6862 train 3.6952 , allloss: 3.6952, dt: 1316.03ms, fracRes: 0.7121, norm(attn): 0.1445, norm(output): 0.9467, norm(x): 0.8117, norm(y): 0.9917, norm:0.5309, tok/sec: 99596.55, flops:104.54, batch-reuse:1
@ 6863 train 3.8428 , allloss: 3.8429, dt: 1321.98ms, fracRes: 0.7123, norm(attn): 0.1436, norm(output): 0.9467, norm(x): 0.8113, norm(y): 0.9916, norm:0.5784, tok/sec: 99148.50, flops:104.07, batch-reuse:1
@ 6864 train 3.8678 , allloss: 3.8679, dt: 1309.87ms, fracRes: 0.7121, norm(attn): 0.1426, norm(output): 0.9473, norm(x): 0.8122, norm(y): 0.9915, norm:0.5266, tok/sec: 100064.95, flops:105.03, batch-reuse:1
@ 6865 train 3.9921 , allloss: 3.9921, dt: 1300.13ms, fracRes: 0.7121, norm(attn): 0.1416, norm(output): 0.9472, norm(x): 0.8121, norm(y): 0.9916, norm:0.5655, tok/sec: 100814.65, flops:105.82, batch-reuse:1
@ 6866 train 3.8525 , allloss: 3.8531, dt: 1554.01ms, fracRes: 0.7119, norm(attn): 0.1416, norm(output): 0.9476, norm(x): 0.8130, norm(y): 0.9916, norm:0.5686, tok/sec: 84344.55, flops:88.53, batch-reuse:1
@ 6867 train 3.8400 , allloss: 3.8400, dt: 1347.63ms, fracRes: 0.7121, norm(attn): 0.1416, norm(output): 0.9467, norm(x): 0.8113, norm(y): 0.9918, norm:0.7191, tok/sec: 97261.13, flops:102.09, batch-reuse:1
@ 6868 train 3.8102 , allloss: 3.8103, dt: 1339.69ms, fracRes: 0.7122, norm(attn): 0.1416, norm(output): 0.9468, norm(x): 0.8113, norm(y): 0.9917, norm:0.5801, tok/sec: 97837.21, flops:102.69, batch-reuse:1
@ 6869 train 3.8587 , allloss: 3.8589, dt: 1345.91ms, fracRes: 0.7123, norm(attn): 0.1426, norm(output): 0.9467, norm(x): 0.8112, norm(y): 0.9919, norm:0.5713, tok/sec: 97385.25, flops:102.22, batch-reuse:1
@ 6870 train 3.8598 , allloss: 3.8598, dt: 1284.61ms, fracRes: 0.7120, norm(attn): 0.1416, norm(output): 0.9472, norm(x): 0.8125, norm(y): 0.9916, norm:0.5618, tok/sec: 102032.22, flops:107.10, batch-reuse:1
@ 6871 train 3.8030 , allloss: 3.8031, dt: 1308.35ms, fracRes: 0.7117, norm(attn): 0.1426, norm(output): 0.9470, norm(x): 0.8123, norm(y): 0.9916, norm:0.5584, tok/sec: 100181.37, flops:105.15, batch-reuse:1
@ 6872 train 3.7828 , allloss: 3.7830, dt: 1299.06ms, fracRes: 0.7119, norm(attn): 0.1416, norm(output): 0.9470, norm(x): 0.8119, norm(y): 0.9916, norm:0.5894, tok/sec: 100897.62, flops:105.91, batch-reuse:1
@ 6873 train 3.8543 , allloss: 3.8543, dt: 1304.68ms, fracRes: 0.7123, norm(attn): 0.1436, norm(output): 0.9468, norm(x): 0.8107, norm(y): 0.9919, norm:0.5287, tok/sec: 100462.87, flops:105.45, batch-reuse:1
@ 6874 train 3.7642 , allloss: 3.7642, dt: 1317.61ms, fracRes: 0.7123, norm(attn): 0.1436, norm(output): 0.9466, norm(x): 0.8110, norm(y): 0.9918, norm:0.5813, tok/sec: 99476.81, flops:104.41, batch-reuse:1
@ 6875 train 3.8944 , allloss: 3.8946, dt: 1339.06ms, fracRes: 0.7124, norm(attn): 0.1426, norm(output): 0.9469, norm(x): 0.8110, norm(y): 0.9918, norm:0.5919, tok/sec: 97883.31, flops:102.74, batch-reuse:1
@ 6876 train 3.8189 , allloss: 3.8190, dt: 1297.48ms, fracRes: 0.7121, norm(attn): 0.1426, norm(output): 0.9473, norm(x): 0.8124, norm(y): 0.9916, norm:0.5484, tok/sec: 101020.08, flops:106.03, batch-reuse:1
@ 6877 train 3.8450 , allloss: 3.9306, dt: 1333.52ms, fracRes: 0.7122, norm(attn): 0.1436, norm(output): 0.9470, norm(x): 0.8117, norm(y): 0.9919, norm:1.3492, tok/sec: 98290.56, flops:103.17, batch-reuse:1
@ 6878 train 3.9235 , allloss: 3.9236, dt: 1335.83ms, fracRes: 0.7122, norm(attn): 0.1416, norm(output): 0.9474, norm(x): 0.8130, norm(y): 0.9917, norm:0.6617, tok/sec: 98120.27, flops:102.99, batch-reuse:1
@ 6879 train 3.7541 , allloss: 3.7541, dt: 1341.51ms, fracRes: 0.7123, norm(attn): 0.1426, norm(output): 0.9472, norm(x): 0.8126, norm(y): 0.9916, norm:0.6163, tok/sec: 97704.70, flops:102.55, batch-reuse:1
@ 6880 train 3.8556 , allloss: 3.8557, dt: 1299.42ms, fracRes: 0.7123, norm(attn): 0.1426, norm(output): 0.9469, norm(x): 0.8114, norm(y): 0.9917, norm:0.5153, tok/sec: 100869.94, flops:105.88, batch-reuse:1
@ 6881 train 3.8135 , allloss: 3.8137, dt: 1322.36ms, fracRes: 0.7119, norm(attn): 0.1436, norm(output): 0.9468, norm(x): 0.8114, norm(y): 0.9918, norm:0.5263, tok/sec: 99119.93, flops:104.04, batch-reuse:1
@ 6882 train 3.7812 , allloss: 3.7813, dt: 1331.78ms, fracRes: 0.7120, norm(attn): 0.1426, norm(output): 0.9467, norm(x): 0.8112, norm(y): 0.9917, norm:0.5270, tok/sec: 98418.93, flops:103.30, batch-reuse:1
@ 6883 train 4.0473 , allloss: 4.0475, dt: 1285.16ms, fracRes: 0.7121, norm(attn): 0.1406, norm(output): 0.9474, norm(x): 0.8124, norm(y): 0.9918, norm:0.5759, tok/sec: 101989.19, flops:107.05, batch-reuse:1
@ 6884 train 3.8908 , allloss: 3.8911, dt: 1309.04ms, fracRes: 0.7120, norm(attn): 0.1426, norm(output): 0.9474, norm(x): 0.8129, norm(y): 0.9916, norm:0.5810, tok/sec: 100128.37, flops:105.10, batch-reuse:1
@ 6885 train 3.8737 , allloss: 3.8738, dt: 1315.76ms, fracRes: 0.7119, norm(attn): 0.1416, norm(output): 0.9473, norm(x): 0.8128, norm(y): 0.9915, norm:0.6116, tok/sec: 99617.21, flops:104.56, batch-reuse:1
@ 6886 train 3.9143 , allloss: 3.9144, dt: 1300.43ms, fracRes: 0.7120, norm(attn): 0.1416, norm(output): 0.9477, norm(x): 0.8130, norm(y): 0.9914, norm:0.6897, tok/sec: 100791.38, flops:105.79, batch-reuse:1
@ 6887 train 3.8735 , allloss: 3.8735, dt: 1299.11ms, fracRes: 0.7123, norm(attn): 0.1426, norm(output): 0.9473, norm(x): 0.8121, norm(y): 0.9915, norm:0.7117, tok/sec: 100893.66, flops:105.90, batch-reuse:1
@ 6888 train 3.8478 , allloss: 3.8481, dt: 1316.37ms, fracRes: 0.7125, norm(attn): 0.1416, norm(output): 0.9474, norm(x): 0.8121, norm(y): 0.9915, norm:0.7299, tok/sec: 99570.75, flops:104.51, batch-reuse:1
@ 6889 train 3.9781 , allloss: 3.9782, dt: 1323.44ms, fracRes: 0.7124, norm(attn): 0.1416, norm(output): 0.9474, norm(x): 0.8122, norm(y): 0.9915, norm:0.6117, tok/sec: 99038.65, flops:103.95, batch-reuse:1
@ 6890 train 4.0940 , allloss: 4.0948, dt: 1298.45ms, fracRes: 0.7124, norm(attn): 0.1416, norm(output): 0.9474, norm(x): 0.8118, norm(y): 0.9915, norm:0.6432, tok/sec: 100944.71, flops:105.95, batch-reuse:1
@ 6891 train 4.0687 , allloss: 4.0696, dt: 1308.35ms, fracRes: 0.7123, norm(attn): 0.1416, norm(output): 0.9473, norm(x): 0.8122, norm(y): 0.9915, norm:0.6184, tok/sec: 100181.21, flops:105.15, batch-reuse:1
@ 6892 train 4.2523 , allloss: 4.2524, dt: 1287.84ms, fracRes: 0.7124, norm(attn): 0.1416, norm(output): 0.9476, norm(x): 0.8121, norm(y): 0.9918, norm:0.7216, tok/sec: 101776.80, flops:106.83, batch-reuse:1
@ 6893 train 3.9448 , allloss: 3.9450, dt: 1288.95ms, fracRes: 0.7120, norm(attn): 0.1436, norm(output): 0.9471, norm(x): 0.8118, norm(y): 0.9918, norm:0.6543, tok/sec: 101689.05, flops:106.74, batch-reuse:1
@ 6894 train 4.1003 , allloss: 4.1005, dt: 1298.29ms, fracRes: 0.7123, norm(attn): 0.1416, norm(output): 0.9475, norm(x): 0.8121, norm(y): 0.9916, norm:0.6096, tok/sec: 100957.47, flops:105.97, batch-reuse:1
@ 6895 train 4.0652 , allloss: 4.0652, dt: 1310.03ms, fracRes: 0.7125, norm(attn): 0.1426, norm(output): 0.9476, norm(x): 0.8127, norm(y): 0.9914, norm:0.5861, tok/sec: 100052.49, flops:105.02, batch-reuse:1
@ 6896 train 4.0433 , allloss: 4.0440, dt: 1330.82ms, fracRes: 0.7124, norm(attn): 0.1416, norm(output): 0.9476, norm(x): 0.8129, norm(y): 0.9914, norm:0.6270, tok/sec: 98489.70, flops:103.38, batch-reuse:1
@ 6897 train 4.1127 , allloss: 4.1128, dt: 1308.98ms, fracRes: 0.7125, norm(attn): 0.1416, norm(output): 0.9474, norm(x): 0.8125, norm(y): 0.9915, norm:0.6168, tok/sec: 100133.29, flops:105.10, batch-reuse:1
@ 6898 train 4.2272 , allloss: 4.2272, dt: 1285.06ms, fracRes: 0.7127, norm(attn): 0.1416, norm(output): 0.9480, norm(x): 0.8125, norm(y): 0.9917, norm:0.6505, tok/sec: 101996.82, flops:107.06, batch-reuse:1
@ 6899 train 3.9437 , allloss: 3.9446, dt: 1305.44ms, fracRes: 0.7125, norm(attn): 0.1445, norm(output): 0.9471, norm(x): 0.8112, norm(y): 0.9918, norm:0.8503, tok/sec: 100404.43, flops:105.39, batch-reuse:1
@ 6900 train 3.9359 , allloss: 3.9361, dt: 1298.29ms, fracRes: 0.7122, norm(attn): 0.1436, norm(output): 0.9469, norm(x): 0.8117, norm(y): 0.9917, norm:0.6489, tok/sec: 100957.49, flops:105.97, batch-reuse:1
@ 6901 train 3.9801 , allloss: 3.9802, dt: 1321.71ms, fracRes: 0.7123, norm(attn): 0.1426, norm(output): 0.9474, norm(x): 0.8125, norm(y): 0.9918, norm:0.7744, tok/sec: 99168.19, flops:104.09, batch-reuse:1
@ 6902 train 4.0751 , allloss: 4.0751, dt: 1318.87ms, fracRes: 0.7124, norm(attn): 0.1426, norm(output): 0.9474, norm(x): 0.8127, norm(y): 0.9917, norm:0.6911, tok/sec: 99382.04, flops:104.31, batch-reuse:1
@ 6903 train 4.0719 , allloss: 4.0719, dt: 1316.96ms, fracRes: 0.7124, norm(attn): 0.1416, norm(output): 0.9476, norm(x): 0.8130, norm(y): 0.9916, norm:0.6618, tok/sec: 99526.55, flops:104.47, batch-reuse:1
@ 6904 train 4.0795 , allloss: 4.0798, dt: 1301.76ms, fracRes: 0.7124, norm(attn): 0.1426, norm(output): 0.9471, norm(x): 0.8118, norm(y): 0.9918, norm:0.6060, tok/sec: 100688.39, flops:105.69, batch-reuse:1
@ 6905 train 4.0425 , allloss: 4.0425, dt: 1329.53ms, fracRes: 0.7121, norm(attn): 0.1436, norm(output): 0.9476, norm(x): 0.8126, norm(y): 0.9915, norm:0.6934, tok/sec: 98584.95, flops:103.48, batch-reuse:1
@ 6906 train 4.0010 , allloss: 4.0010, dt: 1282.96ms, fracRes: 0.7121, norm(attn): 0.1426, norm(output): 0.9475, norm(x): 0.8128, norm(y): 0.9915, norm:0.5947, tok/sec: 102163.64, flops:107.23, batch-reuse:1
@ 6907 train 4.0147 , allloss: 4.0148, dt: 1286.85ms, fracRes: 0.7126, norm(attn): 0.1416, norm(output): 0.9471, norm(x): 0.8118, norm(y): 0.9915, norm:0.6089, tok/sec: 101854.58, flops:106.91, batch-reuse:1
@ 6908 train 4.1274 , allloss: 4.1275, dt: 1300.34ms, fracRes: 0.7128, norm(attn): 0.1416, norm(output): 0.9472, norm(x): 0.8115, norm(y): 0.9915, norm:0.6742, tok/sec: 100798.13, flops:105.80, batch-reuse:1
@ 6909 train 3.9339 , allloss: 3.9348, dt: 1333.56ms, fracRes: 0.7127, norm(attn): 0.1426, norm(output): 0.9470, norm(x): 0.8110, norm(y): 0.9916, norm:0.5650, tok/sec: 98287.03, flops:103.17, batch-reuse:1
@ 6910 train 4.0109 , allloss: 4.0110, dt: 1324.22ms, fracRes: 0.7121, norm(attn): 0.1416, norm(output): 0.9476, norm(x): 0.8128, norm(y): 0.9915, norm:0.5961, tok/sec: 98980.82, flops:103.89, batch-reuse:1
@ 6911 train 3.9821 , allloss: 3.9823, dt: 1335.75ms, fracRes: 0.7119, norm(attn): 0.1416, norm(output): 0.9476, norm(x): 0.8130, norm(y): 0.9914, norm:0.5779, tok/sec: 98126.05, flops:103.00, batch-reuse:1
@ 6912 train 3.9861 , allloss: 3.9864, dt: 1317.13ms, fracRes: 0.7121, norm(attn): 0.1416, norm(output): 0.9475, norm(x): 0.8125, norm(y): 0.9916, norm:0.5325, tok/sec: 99513.42, flops:104.45, batch-reuse:1
@ 6913 train 4.0717 , allloss: 4.0718, dt: 1329.28ms, fracRes: 0.7123, norm(attn): 0.1416, norm(output): 0.9475, norm(x): 0.8121, norm(y): 0.9917, norm:0.7153, tok/sec: 98603.60, flops:103.50, batch-reuse:1
@ 6914 train 3.9825 , allloss: 3.9826, dt: 1319.49ms, fracRes: 0.7122, norm(attn): 0.1426, norm(output): 0.9477, norm(x): 0.8124, norm(y): 0.9916, norm:0.6810, tok/sec: 99335.39, flops:104.27, batch-reuse:1
@ 6915 train 4.0113 , allloss: 4.0113, dt: 1309.73ms, fracRes: 0.7121, norm(attn): 0.1436, norm(output): 0.9471, norm(x): 0.8123, norm(y): 0.9915, norm:0.6042, tok/sec: 100075.51, flops:105.04, batch-reuse:1
@ 6916 train 4.0095 , allloss: 4.0096, dt: 1355.07ms, fracRes: 0.7121, norm(attn): 0.1426, norm(output): 0.9469, norm(x): 0.8118, norm(y): 0.9916, norm:0.5428, tok/sec: 96727.10, flops:101.53, batch-reuse:1
@ 6917 train 4.0337 , allloss: 4.0338, dt: 1288.50ms, fracRes: 0.7123, norm(attn): 0.1416, norm(output): 0.9475, norm(x): 0.8125, norm(y): 0.9916, norm:0.6109, tok/sec: 101724.48, flops:106.77, batch-reuse:1
@ 6918 train 3.9883 , allloss: 3.9884, dt: 1286.54ms, fracRes: 0.7124, norm(attn): 0.1416, norm(output): 0.9474, norm(x): 0.8119, norm(y): 0.9915, norm:0.5137, tok/sec: 101879.82, flops:106.94, batch-reuse:1
@ 6919 train 3.9605 , allloss: 3.9606, dt: 1302.96ms, fracRes: 0.7123, norm(attn): 0.1416, norm(output): 0.9471, norm(x): 0.8115, norm(y): 0.9914, norm:0.5972, tok/sec: 100595.26, flops:105.59, batch-reuse:1
@ 6920 train 3.8987 , allloss: 3.8988, dt: 1292.28ms, fracRes: 0.7122, norm(attn): 0.1436, norm(output): 0.9471, norm(x): 0.8121, norm(y): 0.9912, norm:0.5644, tok/sec: 101427.03, flops:106.46, batch-reuse:1
@ 6921 train 3.9842 , allloss: 3.9842, dt: 1291.42ms, fracRes: 0.7124, norm(attn): 0.1426, norm(output): 0.9475, norm(x): 0.8124, norm(y): 0.9912, norm:0.5830, tok/sec: 101494.78, flops:106.53, batch-reuse:1
@ 6922 train 3.9706 , allloss: 3.9706, dt: 1287.46ms, fracRes: 0.7124, norm(attn): 0.1426, norm(output): 0.9476, norm(x): 0.8125, norm(y): 0.9911, norm:0.5685, tok/sec: 101806.31, flops:106.86, batch-reuse:1
@ 6923 train 4.1245 , allloss: 4.1247, dt: 1309.81ms, fracRes: 0.7123, norm(attn): 0.1416, norm(output): 0.9479, norm(x): 0.8128, norm(y): 0.9912, norm:0.5908, tok/sec: 100069.26, flops:105.04, batch-reuse:1
@ 6924 train 4.0993 , allloss: 4.0994, dt: 1319.15ms, fracRes: 0.7123, norm(attn): 0.1416, norm(output): 0.9481, norm(x): 0.8135, norm(y): 0.9912, norm:0.7162, tok/sec: 99360.61, flops:104.29, batch-reuse:1
@ 6925 train 4.0786 , allloss: 4.0787, dt: 1289.02ms, fracRes: 0.7123, norm(attn): 0.1416, norm(output): 0.9478, norm(x): 0.8130, norm(y): 0.9913, norm:0.6617, tok/sec: 101683.67, flops:106.73, batch-reuse:1
@ 6926 train 3.9647 , allloss: 3.9648, dt: 1346.11ms, fracRes: 0.7123, norm(attn): 0.1416, norm(output): 0.9472, norm(x): 0.8122, norm(y): 0.9913, norm:0.6067, tok/sec: 97370.78, flops:102.20, batch-reuse:1
@ 6927 train 4.0046 , allloss: 4.0046, dt: 1349.75ms, fracRes: 0.7124, norm(attn): 0.1426, norm(output): 0.9473, norm(x): 0.8117, norm(y): 0.9915, norm:0.6078, tok/sec: 97108.13, flops:101.93, batch-reuse:1
@ 6928 train 4.0115 , allloss: 4.0116, dt: 1343.50ms, fracRes: 0.7123, norm(attn): 0.1416, norm(output): 0.9475, norm(x): 0.8128, norm(y): 0.9914, norm:0.6345, tok/sec: 97559.80, flops:102.40, batch-reuse:1
@ 6929 train 4.0247 , allloss: 4.0249, dt: 1323.51ms, fracRes: 0.7123, norm(attn): 0.1426, norm(output): 0.9474, norm(x): 0.8124, norm(y): 0.9915, norm:0.5496, tok/sec: 99033.30, flops:103.95, batch-reuse:1
@ 6930 train 3.8753 , allloss: 3.8754, dt: 1296.16ms, fracRes: 0.7124, norm(attn): 0.1426, norm(output): 0.9476, norm(x): 0.8129, norm(y): 0.9913, norm:0.6122, tok/sec: 101123.13, flops:106.14, batch-reuse:1
@ 6931 train 4.1010 , allloss: 4.1011, dt: 1288.01ms, fracRes: 0.7126, norm(attn): 0.1416, norm(output): 0.9476, norm(x): 0.8129, norm(y): 0.9914, norm:0.5981, tok/sec: 101762.91, flops:106.81, batch-reuse:1
@ 6932 train 4.0860 , allloss: 4.0863, dt: 1304.93ms, fracRes: 0.7125, norm(attn): 0.1426, norm(output): 0.9475, norm(x): 0.8126, norm(y): 0.9916, norm:0.5752, tok/sec: 100443.65, flops:105.43, batch-reuse:1
@ 6933 train 3.9836 , allloss: 3.9837, dt: 1305.51ms, fracRes: 0.7125, norm(attn): 0.1416, norm(output): 0.9475, norm(x): 0.8131, norm(y): 0.9916, norm:0.6463, tok/sec: 100399.26, flops:105.38, batch-reuse:1
@ 6934 train 3.9363 , allloss: 3.9365, dt: 1301.54ms, fracRes: 0.7124, norm(attn): 0.1436, norm(output): 0.9474, norm(x): 0.8128, norm(y): 0.9918, norm:0.5515, tok/sec: 100705.36, flops:105.70, batch-reuse:1
@ 6935 train 3.9264 , allloss: 3.9264, dt: 1299.59ms, fracRes: 0.7126, norm(attn): 0.1426, norm(output): 0.9476, norm(x): 0.8130, norm(y): 0.9915, norm:0.6908, tok/sec: 100856.71, flops:105.86, batch-reuse:1
@ 6936 train 3.9966 , allloss: 3.9969, dt: 1278.09ms, fracRes: 0.7125, norm(attn): 0.1416, norm(output): 0.9474, norm(x): 0.8125, norm(y): 0.9913, norm:0.6564, tok/sec: 102552.74, flops:107.64, batch-reuse:1
@ 6937 train 4.0173 , allloss: 4.0174, dt: 1300.28ms, fracRes: 0.7122, norm(attn): 0.1426, norm(output): 0.9475, norm(x): 0.8130, norm(y): 0.9913, norm:0.5913, tok/sec: 100802.84, flops:105.81, batch-reuse:1
@ 6938 train 3.9911 , allloss: 3.9911, dt: 1312.95ms, fracRes: 0.7124, norm(attn): 0.1416, norm(output): 0.9475, norm(x): 0.8130, norm(y): 0.9913, norm:0.6347, tok/sec: 99829.98, flops:104.78, batch-reuse:1
@ 6939 train 3.9864 , allloss: 3.9865, dt: 1313.74ms, fracRes: 0.7126, norm(attn): 0.1416, norm(output): 0.9476, norm(x): 0.8131, norm(y): 0.9914, norm:0.5974, tok/sec: 99769.78, flops:104.72, batch-reuse:1
@ 6940 train 4.0021 , allloss: 4.0022, dt: 1307.58ms, fracRes: 0.7122, norm(attn): 0.1416, norm(output): 0.9480, norm(x): 0.8138, norm(y): 0.9913, norm:0.6270, tok/sec: 100240.05, flops:105.22, batch-reuse:1
@ 6941 train 3.9563 , allloss: 3.9563, dt: 1316.72ms, fracRes: 0.7119, norm(attn): 0.1426, norm(output): 0.9474, norm(x): 0.8129, norm(y): 0.9913, norm:0.6229, tok/sec: 99544.05, flops:104.48, batch-reuse:1
@ 6942 train 4.0386 , allloss: 4.0386, dt: 1319.84ms, fracRes: 0.7121, norm(attn): 0.1416, norm(output): 0.9477, norm(x): 0.8128, norm(y): 0.9913, norm:0.5275, tok/sec: 99309.03, flops:104.24, batch-reuse:1
@ 6943 train 3.9949 , allloss: 3.9950, dt: 1342.79ms, fracRes: 0.7124, norm(attn): 0.1416, norm(output): 0.9478, norm(x): 0.8131, norm(y): 0.9913, norm:0.6324, tok/sec: 97611.89, flops:102.46, batch-reuse:1
@ 6944 train 3.9514 , allloss: 3.9515, dt: 1339.06ms, fracRes: 0.7125, norm(attn): 0.1416, norm(output): 0.9473, norm(x): 0.8123, norm(y): 0.9914, norm:0.5648, tok/sec: 97883.79, flops:102.74, batch-reuse:1
@ 6945 train 4.0738 , allloss: 4.0741, dt: 1287.25ms, fracRes: 0.7123, norm(attn): 0.1406, norm(output): 0.9484, norm(x): 0.8140, norm(y): 0.9914, norm:0.7208, tok/sec: 101823.32, flops:106.88, batch-reuse:1
@ 6946 train 4.0316 , allloss: 4.0317, dt: 1293.79ms, fracRes: 0.7123, norm(attn): 0.1406, norm(output): 0.9474, norm(x): 0.8127, norm(y): 0.9913, norm:1.3209, tok/sec: 101308.68, flops:106.34, batch-reuse:1
@ 6947 train 3.9742 , allloss: 3.9743, dt: 1343.74ms, fracRes: 0.7124, norm(attn): 0.1416, norm(output): 0.9475, norm(x): 0.8126, norm(y): 0.9912, norm:0.7967, tok/sec: 97542.77, flops:102.38, batch-reuse:1
@ 6948 train 3.9192 , allloss: 3.9193, dt: 1325.84ms, fracRes: 0.7124, norm(attn): 0.1416, norm(output): 0.9477, norm(x): 0.8126, norm(y): 0.9910, norm:0.7866, tok/sec: 98859.61, flops:103.77, batch-reuse:1
@ 6949 train 3.9495 , allloss: 3.9495, dt: 1313.19ms, fracRes: 0.7124, norm(attn): 0.1416, norm(output): 0.9476, norm(x): 0.8129, norm(y): 0.9910, norm:0.8945, tok/sec: 99811.67, flops:104.77, batch-reuse:1
@ 6950 train 3.9659 , allloss: 3.9659, dt: 1335.85ms, fracRes: 0.7123, norm(attn): 0.1416, norm(output): 0.9473, norm(x): 0.8131, norm(y): 0.9912, norm:0.7188, tok/sec: 98118.94, flops:102.99, batch-reuse:1
@ 6951 train 3.8585 , allloss: 3.8585, dt: 1319.13ms, fracRes: 0.7124, norm(attn): 0.1436, norm(output): 0.9472, norm(x): 0.8126, norm(y): 0.9913, norm:0.6343, tok/sec: 99362.18, flops:104.29, batch-reuse:1
@ 6952 train 4.1593 , allloss: 4.1593, dt: 1332.31ms, fracRes: 0.7126, norm(attn): 0.1426, norm(output): 0.9478, norm(x): 0.8127, norm(y): 0.9917, norm:0.7335, tok/sec: 98379.86, flops:103.26, batch-reuse:1
@ 6953 train 3.9229 , allloss: 3.9229, dt: 1328.91ms, fracRes: 0.7125, norm(attn): 0.1426, norm(output): 0.9478, norm(x): 0.8133, norm(y): 0.9912, norm:0.6913, tok/sec: 98631.04, flops:103.53, batch-reuse:1
@ 6954 train 3.9717 , allloss: 3.9717, dt: 1318.45ms, fracRes: 0.7125, norm(attn): 0.1416, norm(output): 0.9475, norm(x): 0.8130, norm(y): 0.9909, norm:0.5783, tok/sec: 99414.05, flops:104.35, batch-reuse:1
@ 6955 train 4.0554 , allloss: 4.0555, dt: 1308.90ms, fracRes: 0.7125, norm(attn): 0.1426, norm(output): 0.9473, norm(x): 0.8125, norm(y): 0.9910, norm:0.7472, tok/sec: 100138.71, flops:105.11, batch-reuse:1
@ 6956 train 4.1090 , allloss: 4.1091, dt: 1281.89ms, fracRes: 0.7126, norm(attn): 0.1416, norm(output): 0.9472, norm(x): 0.8125, norm(y): 0.9909, norm:0.5860, tok/sec: 102248.99, flops:107.32, batch-reuse:1
@ 6957 train 3.9049 , allloss: 3.9050, dt: 1309.20ms, fracRes: 0.7125, norm(attn): 0.1426, norm(output): 0.9476, norm(x): 0.8138, norm(y): 0.9909, norm:0.6256, tok/sec: 100115.97, flops:105.08, batch-reuse:1
@ 6958 train 3.9331 , allloss: 3.9331, dt: 1299.07ms, fracRes: 0.7125, norm(attn): 0.1426, norm(output): 0.9477, norm(x): 0.8139, norm(y): 0.9910, norm:0.6511, tok/sec: 100896.99, flops:105.90, batch-reuse:1
@ 6959 train 3.9907 , allloss: 3.9908, dt: 1301.21ms, fracRes: 0.7126, norm(attn): 0.1416, norm(output): 0.9477, norm(x): 0.8140, norm(y): 0.9909, norm:0.5474, tok/sec: 100730.81, flops:105.73, batch-reuse:1
@ 6960 train 3.9316 , allloss: 3.9316, dt: 1295.53ms, fracRes: 0.7125, norm(attn): 0.1416, norm(output): 0.9477, norm(x): 0.8141, norm(y): 0.9910, norm:0.5560, tok/sec: 101172.34, flops:106.19, batch-reuse:1
@ 6961 train 4.0089 , allloss: 4.0092, dt: 1292.70ms, fracRes: 0.7126, norm(attn): 0.1426, norm(output): 0.9469, norm(x): 0.8126, norm(y): 0.9912, norm:0.7328, tok/sec: 101394.22, flops:106.43, batch-reuse:1
@ 6962 train 3.9143 , allloss: 3.9143, dt: 1315.06ms, fracRes: 0.7129, norm(attn): 0.1436, norm(output): 0.9470, norm(x): 0.8122, norm(y): 0.9913, norm:0.5443, tok/sec: 99669.91, flops:104.62, batch-reuse:1
@ 6963 train 3.9638 , allloss: 3.9640, dt: 1338.71ms, fracRes: 0.7128, norm(attn): 0.1406, norm(output): 0.9476, norm(x): 0.8140, norm(y): 0.9914, norm:0.6329, tok/sec: 97909.32, flops:102.77, batch-reuse:1
@ 6964 train 3.9397 , allloss: 3.9398, dt: 1307.33ms, fracRes: 0.7124, norm(attn): 0.1416, norm(output): 0.9477, norm(x): 0.8139, norm(y): 0.9911, norm:0.5864, tok/sec: 100259.66, flops:105.24, batch-reuse:1
@ 6965 train 4.0590 , allloss: 4.0594, dt: 1311.18ms, fracRes: 0.7124, norm(attn): 0.1426, norm(output): 0.9478, norm(x): 0.8133, norm(y): 0.9911, norm:0.5930, tok/sec: 99965.05, flops:104.93, batch-reuse:1
@ 6966 train 3.9784 , allloss: 3.9785, dt: 1305.98ms, fracRes: 0.7124, norm(attn): 0.1406, norm(output): 0.9477, norm(x): 0.8137, norm(y): 0.9909, norm:0.5502, tok/sec: 100362.78, flops:105.34, batch-reuse:1
@ 6967 train 4.0018 , allloss: 4.0019, dt: 1289.27ms, fracRes: 0.7127, norm(attn): 0.1406, norm(output): 0.9476, norm(x): 0.8134, norm(y): 0.9909, norm:0.5156, tok/sec: 101663.59, flops:106.71, batch-reuse:1
@ 6968 train 4.0103 , allloss: 4.0103, dt: 1296.73ms, fracRes: 0.7127, norm(attn): 0.1416, norm(output): 0.9474, norm(x): 0.8127, norm(y): 0.9912, norm:0.6718, tok/sec: 101078.55, flops:106.10, batch-reuse:1
@ 6969 train 3.9757 , allloss: 3.9757, dt: 1294.52ms, fracRes: 0.7124, norm(attn): 0.1416, norm(output): 0.9475, norm(x): 0.8136, norm(y): 0.9912, norm:0.6405, tok/sec: 101251.21, flops:106.28, batch-reuse:1
@ 6970 train 3.9546 , allloss: 3.9547, dt: 1314.45ms, fracRes: 0.7126, norm(attn): 0.1416, norm(output): 0.9475, norm(x): 0.8133, norm(y): 0.9912, norm:0.6321, tok/sec: 99715.98, flops:104.67, batch-reuse:1
@ 6971 train 4.0011 , allloss: 4.0011, dt: 1289.34ms, fracRes: 0.7129, norm(attn): 0.1406, norm(output): 0.9475, norm(x): 0.8131, norm(y): 0.9910, norm:0.5529, tok/sec: 101658.61, flops:106.70, batch-reuse:1
@ 6972 train 3.9483 , allloss: 3.9485, dt: 1305.39ms, fracRes: 0.7129, norm(attn): 0.1416, norm(output): 0.9474, norm(x): 0.8127, norm(y): 0.9908, norm:0.5731, tok/sec: 100408.41, flops:105.39, batch-reuse:1
@ 6973 train 3.8677 , allloss: 3.8678, dt: 1314.36ms, fracRes: 0.7126, norm(attn): 0.1455, norm(output): 0.9469, norm(x): 0.8121, norm(y): 0.9910, norm:0.5863, tok/sec: 99722.94, flops:104.67, batch-reuse:1
@ 6974 train 3.9429 , allloss: 3.9430, dt: 1297.33ms, fracRes: 0.7125, norm(attn): 0.1426, norm(output): 0.9476, norm(x): 0.8137, norm(y): 0.9908, norm:0.6703, tok/sec: 101032.44, flops:106.05, batch-reuse:1
@ 6975 train 3.9262 , allloss: 3.9263, dt: 1289.65ms, fracRes: 0.7125, norm(attn): 0.1436, norm(output): 0.9474, norm(x): 0.8126, norm(y): 0.9910, norm:0.6115, tok/sec: 101633.54, flops:106.68, batch-reuse:1
@ 6976 train 4.0939 , allloss: 4.0940, dt: 1291.34ms, fracRes: 0.7123, norm(attn): 0.1416, norm(output): 0.9476, norm(x): 0.8135, norm(y): 0.9910, norm:0.5523, tok/sec: 101500.96, flops:106.54, batch-reuse:1
@ 6977 train 3.9772 , allloss: 3.9773, dt: 1294.74ms, fracRes: 0.7124, norm(attn): 0.1416, norm(output): 0.9478, norm(x): 0.8141, norm(y): 0.9908, norm:0.5446, tok/sec: 101234.36, flops:106.26, batch-reuse:1
@ 6978 train 4.0054 , allloss: 4.0055, dt: 1303.96ms, fracRes: 0.7125, norm(attn): 0.1416, norm(output): 0.9474, norm(x): 0.8138, norm(y): 0.9909, norm:0.6130, tok/sec: 100518.40, flops:105.51, batch-reuse:1
@ 6979 train 3.9139 , allloss: 3.9139, dt: 1320.54ms, fracRes: 0.7123, norm(attn): 0.1426, norm(output): 0.9478, norm(x): 0.8149, norm(y): 0.9907, norm:0.6019, tok/sec: 99256.53, flops:104.18, batch-reuse:1
@ 6980 train 3.8938 , allloss: 3.8939, dt: 1321.41ms, fracRes: 0.7121, norm(attn): 0.1416, norm(output): 0.9475, norm(x): 0.8146, norm(y): 0.9907, norm:0.5733, tok/sec: 99190.70, flops:104.11, batch-reuse:1
@ 6981 train 3.9243 , allloss: 3.9244, dt: 1305.46ms, fracRes: 0.7121, norm(attn): 0.1416, norm(output): 0.9475, norm(x): 0.8140, norm(y): 0.9906, norm:0.5892, tok/sec: 100403.16, flops:105.39, batch-reuse:1
@ 6982 train 3.9506 , allloss: 3.9506, dt: 1297.54ms, fracRes: 0.7123, norm(attn): 0.1416, norm(output): 0.9477, norm(x): 0.8140, norm(y): 0.9907, norm:0.5594, tok/sec: 101015.72, flops:106.03, batch-reuse:1
@ 6983 train 3.9918 , allloss: 3.9919, dt: 1299.43ms, fracRes: 0.7126, norm(attn): 0.1406, norm(output): 0.9476, norm(x): 0.8137, norm(y): 0.9909, norm:0.6428, tok/sec: 100868.85, flops:105.88, batch-reuse:1
@ 6984 train 3.8866 , allloss: 3.8866, dt: 1288.96ms, fracRes: 0.7127, norm(attn): 0.1416, norm(output): 0.9478, norm(x): 0.8136, norm(y): 0.9910, norm:0.5442, tok/sec: 101688.50, flops:106.74, batch-reuse:1
@ 6985 train 4.0209 , allloss: 4.0213, dt: 1311.83ms, fracRes: 0.7126, norm(attn): 0.1406, norm(output): 0.9478, norm(x): 0.8136, norm(y): 0.9908, norm:0.5798, tok/sec: 99915.49, flops:104.87, batch-reuse:1
@ 6986 train 3.8718 , allloss: 3.8719, dt: 1309.28ms, fracRes: 0.7125, norm(attn): 0.1406, norm(output): 0.9476, norm(x): 0.8137, norm(y): 0.9907, norm:0.5142, tok/sec: 100110.06, flops:105.08, batch-reuse:1
@ 6987 train 3.9171 , allloss: 3.9174, dt: 1316.56ms, fracRes: 0.7126, norm(attn): 0.1416, norm(output): 0.9477, norm(x): 0.8137, norm(y): 0.9907, norm:0.6470, tok/sec: 99556.78, flops:104.50, batch-reuse:1
@ 6988 train 3.9246 , allloss: 3.9247, dt: 1317.00ms, fracRes: 0.7126, norm(attn): 0.1416, norm(output): 0.9473, norm(x): 0.8132, norm(y): 0.9909, norm:0.5793, tok/sec: 99522.97, flops:104.46, batch-reuse:1
@ 6989 train 3.9431 , allloss: 3.9443, dt: 1312.01ms, fracRes: 0.7128, norm(attn): 0.1406, norm(output): 0.9477, norm(x): 0.8135, norm(y): 0.9909, norm:0.5449, tok/sec: 99901.53, flops:104.86, batch-reuse:1
@ 6990 train 3.9356 , allloss: 3.9356, dt: 1314.08ms, fracRes: 0.7127, norm(attn): 0.1416, norm(output): 0.9477, norm(x): 0.8136, norm(y): 0.9908, norm:0.5572, tok/sec: 99744.45, flops:104.69, batch-reuse:1
@ 6991 train 3.9510 , allloss: 3.9510, dt: 1310.51ms, fracRes: 0.7126, norm(attn): 0.1416, norm(output): 0.9475, norm(x): 0.8130, norm(y): 0.9908, norm:0.5406, tok/sec: 100015.78, flops:104.98, batch-reuse:1
@ 6992 train 3.9563 , allloss: 3.9564, dt: 1305.08ms, fracRes: 0.7125, norm(attn): 0.1416, norm(output): 0.9476, norm(x): 0.8134, norm(y): 0.9907, norm:0.5858, tok/sec: 100432.14, flops:105.42, batch-reuse:1
@ 6993 train 3.9181 , allloss: 3.9182, dt: 1306.75ms, fracRes: 0.7123, norm(attn): 0.1416, norm(output): 0.9477, norm(x): 0.8139, norm(y): 0.9907, norm:0.5368, tok/sec: 100304.13, flops:105.28, batch-reuse:1
@ 6994 train 3.9033 , allloss: 3.9033, dt: 1322.08ms, fracRes: 0.7123, norm(attn): 0.1406, norm(output): 0.9478, norm(x): 0.8142, norm(y): 0.9906, norm:0.5476, tok/sec: 99140.81, flops:104.06, batch-reuse:1
@ 6995 train 3.8517 , allloss: 3.8517, dt: 1326.10ms, fracRes: 0.7123, norm(attn): 0.1406, norm(output): 0.9478, norm(x): 0.8142, norm(y): 0.9906, norm:0.5024, tok/sec: 98840.11, flops:103.75, batch-reuse:1
@ 6996 train 3.9110 , allloss: 3.9110, dt: 1327.74ms, fracRes: 0.7124, norm(attn): 0.1416, norm(output): 0.9475, norm(x): 0.8137, norm(y): 0.9908, norm:0.5770, tok/sec: 98718.16, flops:103.62, batch-reuse:1
@ 6997 train 3.8545 , allloss: 3.8546, dt: 1295.08ms, fracRes: 0.7123, norm(attn): 0.1416, norm(output): 0.9476, norm(x): 0.8142, norm(y): 0.9910, norm:0.5147, tok/sec: 101207.74, flops:106.23, batch-reuse:1
@ 6998 train 3.9873 , allloss: 3.9873, dt: 1330.28ms, fracRes: 0.7124, norm(attn): 0.1416, norm(output): 0.9472, norm(x): 0.8132, norm(y): 0.9911, norm:0.6244, tok/sec: 98529.43, flops:103.42, batch-reuse:1
@ 6999 train 3.9082 , allloss: 3.9083, dt: 1312.19ms, fracRes: 0.7125, norm(attn): 0.1416, norm(output): 0.9473, norm(x): 0.8130, norm(y): 0.9910, norm:0.6897, tok/sec: 99887.61, flops:104.85, batch-reuse:1
@ 7000 train 3.9640 , allloss: 3.9640, dt: 1338.01ms, fracRes: 0.7125, norm(attn): 0.1416, norm(output): 0.9477, norm(x): 0.8139, norm(y): 0.9908, norm:0.6292, tok/sec: 97960.70, flops:102.82, batch-reuse:1
@ 7001 train 3.8967 , allloss: 3.8973, dt: 1321.34ms, fracRes: 0.7125, norm(attn): 0.1406, norm(output): 0.9476, norm(x): 0.8143, norm(y): 0.9909, norm:0.5598, tok/sec: 99196.51, flops:104.12, batch-reuse:1
@ 7002 train 4.0178 , allloss: 4.0180, dt: 1296.47ms, fracRes: 0.7124, norm(attn): 0.1406, norm(output): 0.9476, norm(x): 0.8141, norm(y): 0.9909, norm:0.6350, tok/sec: 101099.20, flops:106.12, batch-reuse:1
@ 7003 train 3.8935 , allloss: 3.8935, dt: 1289.42ms, fracRes: 0.7124, norm(attn): 0.1406, norm(output): 0.9477, norm(x): 0.8144, norm(y): 0.9909, norm:0.7055, tok/sec: 101651.82, flops:106.70, batch-reuse:1
@ 7004 train 3.8688 , allloss: 3.8689, dt: 1301.07ms, fracRes: 0.7126, norm(attn): 0.1406, norm(output): 0.9477, norm(x): 0.8138, norm(y): 0.9910, norm:0.6258, tok/sec: 100741.51, flops:105.74, batch-reuse:1
@ 7005 train 3.9855 , allloss: 3.9856, dt: 1307.40ms, fracRes: 0.7125, norm(attn): 0.1416, norm(output): 0.9473, norm(x): 0.8135, norm(y): 0.9907, norm:0.6122, tok/sec: 100253.67, flops:105.23, batch-reuse:1
@ 7006 train 3.8961 , allloss: 3.8963, dt: 1319.83ms, fracRes: 0.7123, norm(attn): 0.1416, norm(output): 0.9474, norm(x): 0.8145, norm(y): 0.9907, norm:0.6367, tok/sec: 99310.07, flops:104.24, batch-reuse:1
@ 7007 train 3.9730 , allloss: 4.2388, dt: 1328.59ms, fracRes: 0.7122, norm(attn): 0.1416, norm(output): 0.9476, norm(x): 0.8144, norm(y): 0.9907, norm:0.7408, tok/sec: 98654.62, flops:103.55, batch-reuse:1
@ 7008 train 3.9785 , allloss: 3.9785, dt: 1317.69ms, fracRes: 0.7125, norm(attn): 0.1406, norm(output): 0.9479, norm(x): 0.8145, norm(y): 0.9907, norm:0.5959, tok/sec: 99470.87, flops:104.41, batch-reuse:1
@ 7009 train 3.9299 , allloss: 3.9299, dt: 1350.38ms, fracRes: 0.7128, norm(attn): 0.1416, norm(output): 0.9476, norm(x): 0.8132, norm(y): 0.9907, norm:0.6160, tok/sec: 97063.17, flops:101.88, batch-reuse:1
@ 7010 train 3.8858 , allloss: 3.8858, dt: 1334.29ms, fracRes: 0.7126, norm(attn): 0.1416, norm(output): 0.9476, norm(x): 0.8133, norm(y): 0.9907, norm:0.5829, tok/sec: 98233.27, flops:103.11, batch-reuse:1
@ 7011 train 3.9507 , allloss: 3.9508, dt: 1328.59ms, fracRes: 0.7125, norm(attn): 0.1416, norm(output): 0.9479, norm(x): 0.8136, norm(y): 0.9908, norm:0.5177, tok/sec: 98655.15, flops:103.55, batch-reuse:1
@ 7012 train 3.8995 , allloss: 3.8995, dt: 1305.69ms, fracRes: 0.7126, norm(attn): 0.1416, norm(output): 0.9478, norm(x): 0.8133, norm(y): 0.9908, norm:0.5806, tok/sec: 100385.27, flops:105.37, batch-reuse:1
@ 7013 train 3.9745 , allloss: 3.9746, dt: 1274.10ms, fracRes: 0.7125, norm(attn): 0.1406, norm(output): 0.9476, norm(x): 0.8133, norm(y): 0.9908, norm:0.6305, tok/sec: 102874.33, flops:107.98, batch-reuse:1
@ 7014 train 3.9351 , allloss: 3.9352, dt: 1320.41ms, fracRes: 0.7123, norm(attn): 0.1406, norm(output): 0.9474, norm(x): 0.8133, norm(y): 0.9907, norm:0.5875, tok/sec: 99265.94, flops:104.19, batch-reuse:1
@ 7015 train 4.0303 , allloss: 4.0304, dt: 1311.68ms, fracRes: 0.7124, norm(attn): 0.1396, norm(output): 0.9475, norm(x): 0.8137, norm(y): 0.9906, norm:0.5545, tok/sec: 99926.84, flops:104.89, batch-reuse:1
@ 7016 train 3.9170 , allloss: 3.9170, dt: 1303.08ms, fracRes: 0.7124, norm(attn): 0.1406, norm(output): 0.9477, norm(x): 0.8141, norm(y): 0.9908, norm:0.6649, tok/sec: 100585.93, flops:105.58, batch-reuse:1
@ 7017 train 3.9544 , allloss: 3.9544, dt: 1313.03ms, fracRes: 0.7124, norm(attn): 0.1416, norm(output): 0.9476, norm(x): 0.8138, norm(y): 0.9909, norm:0.6091, tok/sec: 99823.71, flops:104.78, batch-reuse:1
@ 7018 train 3.9344 , allloss: 3.9344, dt: 1323.16ms, fracRes: 0.7123, norm(attn): 0.1406, norm(output): 0.9476, norm(x): 0.8139, norm(y): 0.9909, norm:0.6288, tok/sec: 99059.62, flops:103.98, batch-reuse:1
@ 7019 train 3.9995 , allloss: 3.9996, dt: 1313.16ms, fracRes: 0.7120, norm(attn): 0.1406, norm(output): 0.9474, norm(x): 0.8139, norm(y): 0.9909, norm:0.7360, tok/sec: 99814.19, flops:104.77, batch-reuse:1
@ 7020 train 3.9597 , allloss: 3.9598, dt: 1301.13ms, fracRes: 0.7124, norm(attn): 0.1406, norm(output): 0.9476, norm(x): 0.8141, norm(y): 0.9906, norm:0.5891, tok/sec: 100737.40, flops:105.74, batch-reuse:1
@ 7021 train 3.8905 , allloss: 3.8906, dt: 1314.91ms, fracRes: 0.7123, norm(attn): 0.1406, norm(output): 0.9479, norm(x): 0.8146, norm(y): 0.9907, norm:0.6148, tok/sec: 99681.71, flops:104.63, batch-reuse:1
@ 7022 train 4.0062 , allloss: 4.0063, dt: 1295.24ms, fracRes: 0.7122, norm(attn): 0.1406, norm(output): 0.9479, norm(x): 0.8146, norm(y): 0.9907, norm:0.6423, tok/sec: 101195.11, flops:106.22, batch-reuse:1
@ 7023 train 3.9081 , allloss: 4.0672, dt: 1292.65ms, fracRes: 0.7122, norm(attn): 0.1416, norm(output): 0.9477, norm(x): 0.8144, norm(y): 0.9907, norm:0.7820, tok/sec: 101397.70, flops:106.43, batch-reuse:1
@ 7024 train 3.9154 , allloss: 3.9155, dt: 1299.55ms, fracRes: 0.7124, norm(attn): 0.1406, norm(output): 0.9476, norm(x): 0.8144, norm(y): 0.9906, norm:0.6485, tok/sec: 100859.52, flops:105.87, batch-reuse:1
@ 7025 train 3.9070 , allloss: 3.9070, dt: 1316.11ms, fracRes: 0.7125, norm(attn): 0.1416, norm(output): 0.9481, norm(x): 0.8148, norm(y): 0.9907, norm:0.6157, tok/sec: 99590.68, flops:104.53, batch-reuse:1
@ 7026 train 3.8440 , allloss: 3.8441, dt: 1297.85ms, fracRes: 0.7125, norm(attn): 0.1416, norm(output): 0.9474, norm(x): 0.8138, norm(y): 0.9909, norm:0.7048, tok/sec: 100991.67, flops:106.00, batch-reuse:1
@ 7027 train 3.8011 , allloss: 3.8011, dt: 1316.00ms, fracRes: 0.7122, norm(attn): 0.1416, norm(output): 0.9473, norm(x): 0.8140, norm(y): 0.9908, norm:0.5692, tok/sec: 99598.64, flops:104.54, batch-reuse:1
@ 7028 train 3.8106 , allloss: 3.8108, dt: 1316.98ms, fracRes: 0.7123, norm(attn): 0.1416, norm(output): 0.9468, norm(x): 0.8133, norm(y): 0.9907, norm:0.6459, tok/sec: 99524.89, flops:104.46, batch-reuse:1
@ 7029 train 3.7806 , allloss: 3.7806, dt: 1308.42ms, fracRes: 0.7125, norm(attn): 0.1416, norm(output): 0.9475, norm(x): 0.8140, norm(y): 0.9906, norm:0.5660, tok/sec: 100176.10, flops:105.15, batch-reuse:1
@ 7030 train 3.8249 , allloss: 3.8250, dt: 1313.03ms, fracRes: 0.7127, norm(attn): 0.1426, norm(output): 0.9478, norm(x): 0.8142, norm(y): 0.9906, norm:0.6386, tok/sec: 99824.02, flops:104.78, batch-reuse:1
@ 7031 train 3.8467 , allloss: 3.8467, dt: 1292.79ms, fracRes: 0.7126, norm(attn): 0.1426, norm(output): 0.9476, norm(x): 0.8141, norm(y): 0.9906, norm:0.7766, tok/sec: 101387.25, flops:106.42, batch-reuse:1
@ 7032 train 3.9267 , allloss: 3.9267, dt: 1280.45ms, fracRes: 0.7124, norm(attn): 0.1426, norm(output): 0.9479, norm(x): 0.8151, norm(y): 0.9904, norm:0.6750, tok/sec: 102363.97, flops:107.44, batch-reuse:1
@ 7033 train 3.7844 , allloss: 3.7845, dt: 1284.67ms, fracRes: 0.7125, norm(attn): 0.1416, norm(output): 0.9475, norm(x): 0.8149, norm(y): 0.9906, norm:0.6375, tok/sec: 102028.00, flops:107.09, batch-reuse:1
@ 7034 train 3.8356 , allloss: 3.8357, dt: 1291.38ms, fracRes: 0.7123, norm(attn): 0.1416, norm(output): 0.9471, norm(x): 0.8142, norm(y): 0.9905, norm:0.5983, tok/sec: 101497.48, flops:106.53, batch-reuse:1
@ 7035 train 3.9011 , allloss: 3.9012, dt: 1290.77ms, fracRes: 0.7122, norm(attn): 0.1416, norm(output): 0.9476, norm(x): 0.8150, norm(y): 0.9906, norm:0.6074, tok/sec: 101545.92, flops:106.59, batch-reuse:1
@ 7036 train 3.7890 , allloss: 3.7891, dt: 1294.94ms, fracRes: 0.7123, norm(attn): 0.1416, norm(output): 0.9473, norm(x): 0.8146, norm(y): 0.9907, norm:0.7935, tok/sec: 101218.31, flops:106.24, batch-reuse:1
@ 7037 train 3.7942 , allloss: 3.7943, dt: 1335.45ms, fracRes: 0.7124, norm(attn): 0.1416, norm(output): 0.9473, norm(x): 0.8147, norm(y): 0.9908, norm:0.7790, tok/sec: 98148.19, flops:103.02, batch-reuse:1
@ 7038 train 3.9169 , allloss: 3.9170, dt: 1301.41ms, fracRes: 0.7123, norm(attn): 0.1396, norm(output): 0.9480, norm(x): 0.8158, norm(y): 0.9907, norm:0.6178, tok/sec: 100715.27, flops:105.71, batch-reuse:1
@ 7039 train 3.8774 , allloss: 3.8776, dt: 1315.36ms, fracRes: 0.7125, norm(attn): 0.1416, norm(output): 0.9477, norm(x): 0.8150, norm(y): 0.9907, norm:0.5562, tok/sec: 99647.13, flops:104.59, batch-reuse:1
@ 7040 train 3.8107 , allloss: 3.8108, dt: 1310.35ms, fracRes: 0.7128, norm(attn): 0.1416, norm(output): 0.9477, norm(x): 0.8145, norm(y): 0.9905, norm:0.5630, tok/sec: 100028.04, flops:104.99, batch-reuse:1
@ 7041 train 3.7836 , allloss: 3.7836, dt: 1301.67ms, fracRes: 0.7128, norm(attn): 0.1406, norm(output): 0.9476, norm(x): 0.8148, norm(y): 0.9903, norm:0.5684, tok/sec: 100695.05, flops:105.69, batch-reuse:1
@ 7042 train 3.7496 , allloss: 3.7497, dt: 1322.96ms, fracRes: 0.7128, norm(attn): 0.1416, norm(output): 0.9476, norm(x): 0.8146, norm(y): 0.9904, norm:0.7061, tok/sec: 99074.51, flops:103.99, batch-reuse:1
@ 7043 train 3.9265 , allloss: 3.9275, dt: 1322.13ms, fracRes: 0.7129, norm(attn): 0.1426, norm(output): 0.9470, norm(x): 0.8127, norm(y): 0.9906, norm:0.5337, tok/sec: 99136.88, flops:104.06, batch-reuse:1
@ 7044 train 3.7450 , allloss: 3.7453, dt: 1310.17ms, fracRes: 0.7127, norm(attn): 0.1426, norm(output): 0.9471, norm(x): 0.8134, norm(y): 0.9906, norm:0.6198, tok/sec: 100042.15, flops:105.01, batch-reuse:1
@ 7045 train 3.8049 , allloss: 3.8049, dt: 1317.90ms, fracRes: 0.7125, norm(attn): 0.1406, norm(output): 0.9476, norm(x): 0.8147, norm(y): 0.9907, norm:0.6064, tok/sec: 99455.25, flops:104.39, batch-reuse:1
@ 7046 train 3.8921 , allloss: 3.8921, dt: 1309.39ms, fracRes: 0.7123, norm(attn): 0.1396, norm(output): 0.9480, norm(x): 0.8152, norm(y): 0.9906, norm:0.6190, tok/sec: 100101.70, flops:105.07, batch-reuse:1
@ 7047 train 3.8268 , allloss: 3.8269, dt: 1314.49ms, fracRes: 0.7123, norm(attn): 0.1406, norm(output): 0.9477, norm(x): 0.8149, norm(y): 0.9904, norm:0.5109, tok/sec: 99713.46, flops:104.66, batch-reuse:1
@ 7048 train 3.7648 , allloss: 3.7648, dt: 1322.85ms, fracRes: 0.7125, norm(attn): 0.1406, norm(output): 0.9473, norm(x): 0.8142, norm(y): 0.9903, norm:0.5566, tok/sec: 99083.08, flops:104.00, batch-reuse:1
@ 7049 train 3.8895 , allloss: 3.8896, dt: 1287.73ms, fracRes: 0.7126, norm(attn): 0.1406, norm(output): 0.9475, norm(x): 0.8141, norm(y): 0.9904, norm:0.5159, tok/sec: 101785.39, flops:106.84, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0061, -0.0250, -0.0088,  ..., -0.0165,  0.0032,  0.0217],
        [ 0.0166, -0.0336, -0.0198,  ..., -0.0671, -0.0158,  0.0122],
        [ 0.0071, -0.0463,  0.0049,  ..., -0.0145,  0.0057,  0.0282],
        ...,
        [ 0.0242,  0.0603, -0.0191,  ..., -0.0027, -0.0294,  0.0162],
        [-0.0139, -0.0160,  0.0530,  ...,  0.0134,  0.0445,  0.0140],
        [ 0.0086, -0.0229,  0.0439,  ..., -0.0087,  0.0498, -0.0171]], device='cuda:0', requires_grad=True)
K: tensor([ 4.8438, -2.3125,  2.1094,  2.2812, -4.0938,  2.3594, -0.0312,  5.5312, -4.1875, -0.9375, -2.2969, -3.7031,  4.1562, -3.1094,  0.3516, -0.0143, -0.3691, -3.8594,  4.3438, -4.8750,  4.6562,  2.3594, -5.2188, -0.4746, -0.4844, -1.1641,  2.8750, -2.7344, -4.3750, -2.6562,  5.4375,  0.3926,
         2.2344,  3.5156, -0.5469, -3.7031,  2.0000,  2.4844, -2.6406, -2.9375,  3.9219, -1.6953, -0.9375, -1.2109, -3.5312, -1.3125,  0.2852,  3.8594, -0.4473,  0.3281,  3.5312, -3.9844, -4.7500,  4.1250,  2.7344, -1.5078,  3.2812,  1.7656, -0.0277, -2.0312, -1.4844,  0.9922, -0.6094, -1.3828],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0721,  0.0657, -0.0027,  ..., -0.0180, -0.0219, -0.0009],
        [-0.0558,  0.0760,  0.0034,  ...,  0.0189,  0.0014,  0.0207],
        [-0.0663,  0.0632, -0.0143,  ..., -0.0425, -0.0508,  0.0151],
        ...,
        [ 0.0319, -0.0054, -0.0089,  ...,  0.0122, -0.0113,  0.0112],
        [-0.0282,  0.0046, -0.0248,  ...,  0.0426,  0.0077,  0.0259],
        [-0.0103,  0.0312,  0.0114,  ...,  0.0068, -0.0037, -0.0439]], device='cuda:0', requires_grad=True)
Q: tensor([-1.8203,  5.5625, -6.2500, -3.7031,  3.2344, -4.0625, -2.2656, -4.4062,  4.7500, -4.7812,  1.4062,  3.7188, -5.6562,  4.0938, -6.0312,  3.4219,  3.5156,  4.3125, -3.5469,  5.5625, -3.3750, -4.5938,  5.0312, -4.0312, -2.0469, -4.2188, -5.5625,  2.2500,  3.7656,  6.7812, -4.2500, -5.3438,
        -6.7500, -3.7656, -2.5312,  2.2656, -7.6562, -3.5156,  4.7500,  2.2656, -2.4219,  0.4453,  4.9688, -0.9258,  4.3438,  2.6719, -5.0000, -5.4688,  5.5938,  0.7812, -3.0312,  5.1875,  3.9844, -4.6250, -2.5625,  0.3652, -2.4531,  2.4844, -1.5469,  7.9688,  1.5078, -3.9219,  4.4062,  5.4375],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[   0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000],
        [   0.0000,   52.5000,   64.5000,   66.5000,   56.0000,   52.2500,   44.0000,   54.7500,   52.5000,   44.5000,   52.5000,   48.2500,   42.7500,   50.5000,   47.2500],
        [   0.0000,  -50.2500,  -73.0000,  -72.0000,  -67.0000,  -62.7500,  -51.5000,  -54.5000,  -60.0000,  -52.5000,  -64.0000,  -49.0000,  -38.7500,  -57.7500,  -54.7500],
        [   0.0000,  -70.5000, -105.0000, -110.5000, -103.5000,  -95.0000,  -78.0000,  -79.0000,  -92.0000,  -79.5000,  -97.5000,  -74.5000,  -55.7500,  -89.0000,  -83.5000],
        [   0.0000,  -87.5000, -131.0000, -137.0000, -131.0000, -121.0000,  -98.5000,  -96.5000, -115.5000,  -99.5000, -124.5000,  -90.5000,  -65.5000, -112.0000, -105.0000],
        [   0.0000,  -67.0000, -100.0000, -103.0000,  -98.0000,  -91.0000,  -74.5000,  -74.5000,  -87.5000,  -75.5000,  -93.0000,  -69.0000,  -51.5000,  -84.5000,  -79.0000],
        [   0.0000,  -64.5000,  -97.0000, -100.0000,  -95.5000,  -88.5000,  -72.0000,  -71.0000,  -84.5000,  -72.5000,  -90.5000,  -67.0000,  -48.5000,  -81.5000,  -76.5000],
        [   0.0000,  -49.7500,  -74.0000,  -76.0000,  -72.5000,  -66.0000,  -55.2500,  -56.0000,  -64.5000,  -56.2500,  -68.0000,  -52.5000,  -40.2500,  -62.0000,  -58.2500],
        [   0.0000,  -70.5000, -107.0000, -111.5000, -106.0000,  -98.0000,  -80.5000,  -78.0000,  -94.0000,  -80.5000, -101.0000,  -73.0000,  -52.5000,  -90.5000,  -85.0000],
        [   0.0000,  -78.5000, -112.5000, -117.0000, -108.0000, -100.0000,  -81.5000,  -85.0000,  -96.5000,  -83.0000, -102.5000,  -79.0000,  -59.2500,  -93.5000,  -88.0000],
        [   0.0000,  -76.0000, -114.5000, -119.5000, -113.0000, -104.5000,  -84.5000,  -83.5000,  -99.5000,  -85.5000, -107.5000,  -78.0000,  -55.7500,  -96.5000,  -90.5000],
        [   0.0000,  -55.5000,  -80.0000,  -82.5000,  -76.5000,  -71.0000,  -57.7500,  -60.5000,  -68.0000,  -58.7500,  -72.0000,  -56.2500,  -43.0000,  -66.0000,  -62.2500],
        [   0.0000,  -44.7500,  -65.0000,  -66.0000,  -61.7500,  -56.7500,  -47.2500,  -49.5000,  -55.5000,  -48.0000,  -58.0000,  -46.0000,  -36.0000,  -53.5000,  -50.0000],
        [   0.0000,  -68.0000, -101.0000, -105.5000,  -99.5000,  -92.5000,  -75.0000,  -74.0000,  -88.5000,  -75.5000,  -95.0000,  -69.0000,  -49.2500,  -85.5000,  -80.0000],
        [   0.0000,  -65.0000,  -94.5000,  -99.0000,  -92.0000,  -85.0000,  -69.5000,  -70.5000,  -81.5000,  -70.5000,  -87.0000,  -66.0000,  -48.5000,  -79.0000,  -74.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9167],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5703,     0.4316,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9180,     0.0093,     0.0718,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9453,     0.0003,     0.0000,     0.0525,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0002,     0.0000,     0.0001,     0.0000,     0.0015,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0043,     0.0000,     0.0000,     0.0000,     0.0008,     0.0017,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9375,     0.0108,     0.0017,     0.0006,     0.0009,     0.0011,     0.0150,     0.0315,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0003,     0.0000,     0.0000,     0.0000,     0.0002,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9570,     0.0049,     0.0008,     0.0002,     0.0001,     0.0005,     0.0020,     0.0004,     0.0001,     0.0327,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0000,     0.0001,     0.0000,     0.0001,     0.0003,     0.0001,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0001,     0.0000,     0.0001,     0.0003,     0.0003,     0.0001,     0.0001,     0.0003,     0.0001,     0.0005,     0.0055,     0.0000,     0.0000,     0.0000],
        [    0.3926,     0.0045,     0.0001,     0.0009,     0.0023,     0.0107,     0.0089,     0.0140,     0.0041,     0.0000,     0.0008,     0.0002,     0.5625,     0.0000,     0.0000],
        [    0.9961,     0.0033,     0.0000,     0.0000,     0.0002,     0.0007,     0.0002,     0.0001,     0.0005,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000],
        [    0.4062,     0.0128,     0.0003,     0.0001,     0.0000,     0.0004,     0.0027,     0.0002,     0.0012,     0.0014,     0.0009,     0.0000,     0.0003,     0.0002,     0.5742]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0380, -0.0087, -0.0040,  ..., -0.0057,  0.0142, -0.0025],
        [ 0.0035,  0.0098,  0.0188,  ..., -0.0170, -0.0726,  0.0189],
        [ 0.0065, -0.0077, -0.0331,  ..., -0.0027,  0.0246,  0.0255],
        ...,
        [ 0.0287,  0.0057,  0.0382,  ...,  0.0314,  0.0624,  0.0025],
        [ 0.0031,  0.0236, -0.0718,  ..., -0.0401,  0.0287,  0.0576],
        [-0.0464, -0.0271, -0.0294,  ..., -0.0128, -0.0075,  0.0384]], device='cuda:0', requires_grad=True)
K: tensor([    -1.4297,     -0.8789,     -0.4512,     -0.4004,     -1.2891,     -0.7773,     -2.3438,     -1.3750,     -2.2188,     -1.1641,      1.3672,      1.3828,      0.5820,      2.5938,      0.4570,      0.1318,      0.1992,     -1.2109,     -0.8398,     -0.1318,     -2.1406,     -3.0781,
            -0.7500,     -0.3945,      1.8125,     -0.5781,     -0.8789,     -2.7344,      2.0625,      1.4922,      0.2539,     -0.7070,     -0.7461,     -2.2500,     -0.3594,     -2.2969,     -0.4531,      2.0312,      0.5430,      0.5586,     -1.3906,      1.0781,      0.1514,      3.7656,
            -0.6758,     -2.5938,     -2.3438,     -0.9492,     -1.3906,     -2.3438,      2.3438,      0.6484,      0.7188,      0.5820,      0.0032,     -0.5117,      0.7031,      2.7500,      1.5703,     -3.1406,     -3.2969,     -0.3516,      2.1562,     -1.8125], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[ 0.0284,  0.0192, -0.0087,  ..., -0.0067,  0.0316, -0.0135],
        [ 0.0010,  0.0297,  0.0206,  ..., -0.0710, -0.0214,  0.0200],
        [-0.0047, -0.0164,  0.0313,  ...,  0.0064, -0.0105,  0.0119],
        ...,
        [ 0.0225, -0.0057, -0.0156,  ..., -0.0085,  0.0797,  0.0176],
        [ 0.0258,  0.0016, -0.0017,  ...,  0.0272,  0.0037, -0.0011],
        [-0.0291,  0.0062, -0.0581,  ..., -0.0318,  0.0170,  0.0493]], device='cuda:0', requires_grad=True)
Q: tensor([-0.3770,  0.5039,  2.8906, -1.4375,  2.8906, -0.0938,  1.1875, -2.1562, -2.6406,  1.6172, -1.8281,  2.0625, -0.9492, -3.3125,  3.1562,  1.0938,  2.9375, -0.3203, -1.6719,  0.3594,  0.8945,  0.2422,  3.3281, -0.1318, -0.2578,  1.7500, -0.5508,  0.1787,  0.3281, -2.3906, -0.8242,  1.5938,
        -1.7188,  2.6094, -0.1377,  0.7305,  0.5469,  4.7188, -0.1582,  0.9688, -0.1855,  1.4453, -1.7344, -0.6914,  2.4844, -1.6016,  0.4766, -3.8125,  3.6562, -3.0000,  0.9766,  1.9688, -0.6016,  2.4062, -0.6484, -3.4062,  0.2217, -1.2422, -0.5664, -0.3848, -2.4219,  1.0234, -1.7891, -1.1016],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000,  -0.2773,  -6.5312,  -5.8750,  -6.1875,  -4.7500,  -3.1094,  -5.2812,  -4.3125,  -7.7812,  -7.4375,  -6.4062,  -4.9688,  -4.3125,  -7.6250],
        [  0.0000,  -4.5938,  -2.5469,  -7.0000,  -4.4375,  -6.2500,  -3.8281,  -3.9844,  -6.3750,  -6.2188,  -6.4375,  -8.6875,  -6.5625,  -7.1250,  -6.8125],
        [  0.0000,  -8.1875, -10.0625,  -2.8906,  -7.5938,  -6.6562,  -9.6250,  -8.6875,  -8.1250, -10.8125,  -8.9375, -10.9375,  -7.3438,  -9.0625, -10.0625],
        [  0.0000, -11.8750, -12.3750, -10.8750, -10.6875, -10.5625, -11.5625, -12.8125, -13.4375, -14.3750, -13.1875, -16.3750, -11.0000, -14.2500, -15.6250],
        [  0.0000,  -8.5000, -13.0000,  -9.5625, -11.1250,  -6.5000,  -7.6875, -11.4375, -10.0625, -11.8125, -12.5000, -13.3750,  -9.5625, -11.4375, -12.3750],
        [  0.0000,  -5.4375, -10.4375, -12.1875, -10.0625,  -7.0938,  -6.3750,  -8.3750, -10.0625, -13.2500, -10.6250, -13.5625,  -7.6250, -11.5625, -11.3125],
        [  0.0000,  -4.4688,  -6.3438,  -7.3438,  -6.9062,  -6.7500,  -4.1250,  -3.3906,  -7.0938,  -9.4375,  -7.1562, -11.1875,  -4.0625,  -6.9688,  -9.1875],
        [  0.0000,  -8.0000, -12.0625, -10.7500, -10.6875,  -8.3750,  -9.1250, -11.6250, -10.6250, -12.7500, -12.0000, -13.1875,  -9.9375,  -9.8750, -11.0000],
        [  0.0000,  -5.2812,  -7.0312,  -8.4375,  -9.5625,  -7.5000,  -6.1875,  -7.7500,  -9.1250,  -3.3750,  -9.3125, -11.3125,  -9.4375, -10.3750,  -8.2500],
        [  0.0000,  -9.0000, -10.3125,  -9.8750, -10.0000,  -9.0625,  -8.1875,  -9.8750, -11.1250,  -9.6875, -12.1875, -10.8750, -10.1875, -11.4375, -10.3750],
        [  0.0000,  -9.6250, -10.3750,  -8.9375,  -8.1250,  -7.9688,  -9.2500,  -9.1875,  -8.0625,  -9.0625,  -7.5312,  -5.1875,  -6.9062,  -9.1250, -10.6875],
        [  0.0000,  -4.4688,  -8.6875,  -6.0938,  -5.1250,  -3.5938,  -3.7969,  -3.3281,  -4.5625, -10.1875,  -6.1562,  -7.6562,   0.3574,  -5.0938,  -8.0000],
        [  0.0000,  -5.7188, -10.2500, -10.3750,  -8.8125,  -7.2812,  -8.3125,  -9.2500,  -7.6250, -11.6875, -10.3750, -11.6250,  -9.1875, -10.3750, -10.1250],
        [  0.0000,  -3.4688,  -7.1875,  -8.5000, -10.1875,  -7.0000,  -5.0312,  -7.4062,  -5.8125,  -5.6875,  -6.0938, -12.2500,  -7.2812,  -7.5312,   0.3418]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7386],
        [0.5996],
        [0.5411],
        [0.6847],
        [0.5279],
        [0.5736],
        [0.4696],
        [0.4488],
        [0.4262],
        [0.4248],
        [0.4677],
        [0.2309],
        [0.3783],
        [0.2410]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0240, -0.0050,  0.0052,  ...,  0.0119, -0.0548, -0.0061],
        [-0.0398, -0.0228,  0.0062,  ...,  0.0259, -0.0526, -0.0205],
        [ 0.0150,  0.0084, -0.0096,  ...,  0.0333,  0.0183, -0.0044],
        ...,
        [-0.0082, -0.0129, -0.0057,  ...,  0.0432, -0.0229, -0.0106],
        [-0.0210, -0.0130,  0.0130,  ...,  0.0135,  0.0018, -0.0035],
        [ 0.0029, -0.0296, -0.0240,  ...,  0.0427, -0.0271, -0.0474]], device='cuda:0', requires_grad=True)
K: tensor([ 3.1406, -3.7656, -3.1562, -3.7500,  4.5000, -3.9375,  4.6562,  3.5469,  2.4844, -4.1562,  3.0469, -3.9062, -4.1250,  4.2812,  2.3594, -2.9375,  2.5625,  4.1875, -0.1787, -3.6719,  4.3438,  4.6875,  3.9688, -2.2656, -4.2188,  4.6562, -3.1719, -3.9219, -3.2500,  3.1094, -4.2812,  2.9062,
         3.5000, -3.0000, -3.8750,  1.5391,  1.8359, -3.4219,  3.8594, -3.6875, -3.5312,  2.1250,  3.5469, -3.3438, -2.3281,  3.3438, -3.8125,  3.1875, -4.4375, -4.4062, -4.2188,  2.9531,  2.6250,  3.8281,  3.3594, -4.0312, -4.4688,  2.8750, -1.8359, -2.7188,  3.3125,  3.6562, -1.9141,  2.4531],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[     0.0101,      0.0085,      0.0094,  ...,     -0.0002,      0.0146,      0.0312],
        [     0.0362,      0.0206,     -0.0161,  ...,     -0.0318,      0.0022,      0.0058],
        [    -0.0000,     -0.0195,     -0.0033,  ...,     -0.0197,      0.0344,      0.0221],
        ...,
        [    -0.0109,     -0.0052,     -0.0419,  ...,     -0.0102,      0.0333,      0.0052],
        [     0.0173,      0.0017,     -0.0168,  ...,      0.0190,     -0.0177,     -0.0110],
        [    -0.0030,      0.0030,      0.0049,  ...,     -0.0195,     -0.0010,      0.0416]], device='cuda:0', requires_grad=True)
Q: tensor([-2.9219,  3.8906,  4.1875,  4.1250, -5.0312,  4.7188, -4.2188, -4.7500, -2.9062,  3.7812, -4.6875,  4.7500,  4.0625, -4.1250, -3.6250,  4.3750, -2.5000, -5.3125,  0.6328,  4.7812, -5.0625, -4.6562, -5.0000,  2.4219,  5.5000, -4.8125,  3.3125,  4.2812,  3.7031, -4.3750,  3.9844, -3.5000,
        -4.1250,  2.8281,  4.5312, -2.3750, -1.6875,  2.9844, -5.4375,  3.4844,  3.8750, -2.1562, -3.9688,  4.1562,  2.4375, -4.8750,  3.9688, -3.4219,  3.9375,  5.5312,  5.5312, -4.9062, -3.2812, -4.8750, -3.4688,  4.9062,  4.6875, -2.8594,  2.3281,  3.4375, -3.9375, -4.7500,  2.0000, -2.5469],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[   0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000],
        [   0.0000,  -53.5000,  -56.5000, -103.5000,  -78.0000,  -98.0000,  -76.0000,  -90.5000,  -75.0000,  -88.0000,  -75.5000,  -80.0000,  -84.0000,  -73.0000,  -82.0000],
        [   0.0000,  -56.5000,  -60.2500, -111.5000,  -82.5000, -104.5000,  -81.0000,  -97.5000,  -80.0000,  -94.5000,  -80.0000,  -85.5000,  -90.0000,  -78.0000,  -87.5000],
        [   0.0000,  -99.5000, -107.0000, -201.0000, -146.0000, -185.0000, -143.0000, -175.0000, -143.0000, -170.0000, -143.0000, -152.0000, -161.0000, -139.0000, -155.0000],
        [   0.0000,  -64.5000,  -68.0000, -126.5000,  -94.5000, -119.0000,  -92.0000, -110.5000,  -91.0000, -107.0000,  -91.0000,  -97.0000, -102.5000,  -88.5000,  -99.0000],
        [   0.0000,  -86.0000,  -91.0000, -170.0000, -126.0000, -159.0000, -123.5000, -148.0000, -121.5000, -144.0000, -121.5000, -129.0000, -137.0000, -118.5000, -133.0000],
        [   0.0000,  -65.5000,  -69.0000, -129.0000,  -96.5000, -121.5000,  -94.5000, -113.5000,  -93.0000, -109.5000,  -93.0000,  -99.0000, -104.5000,  -90.5000, -101.0000],
        [   0.0000,  -85.5000,  -91.5000, -172.0000, -126.0000, -160.0000, -123.5000, -151.0000, -122.0000, -145.0000, -122.0000, -130.0000, -138.0000, -118.5000, -133.0000],
        [   0.0000,  -65.5000,  -70.0000, -131.0000,  -96.5000, -122.0000,  -94.5000, -114.0000,  -93.5000, -110.5000,  -93.5000,  -99.0000, -105.5000,  -91.0000, -102.0000],
        [   0.0000,  -76.0000,  -81.5000, -153.0000, -112.0000, -142.0000, -109.5000, -133.0000, -108.0000, -129.0000, -108.0000, -115.0000, -123.0000, -105.0000, -118.5000],
        [   0.0000,  -66.5000,  -70.5000, -131.0000,  -97.5000, -122.5000,  -95.0000, -114.5000,  -94.5000, -111.0000,  -94.5000, -100.0000, -105.5000,  -92.0000, -102.5000],
        [   0.0000,  -69.5000,  -74.0000, -138.0000, -101.0000, -128.0000,  -99.5000, -120.5000,  -98.0000, -116.5000,  -98.0000, -104.5000, -111.5000,  -95.5000, -107.0000],
        [   0.0000,  -79.0000,  -84.5000, -158.0000, -115.5000, -146.0000, -113.5000, -138.0000, -112.0000, -133.0000, -112.0000, -119.5000, -127.0000, -109.0000, -122.0000],
        [   0.0000,  -64.0000,  -68.5000, -128.0000,  -94.5000, -119.5000,  -92.5000, -111.5000,  -91.5000, -108.0000,  -91.5000,  -97.0000, -103.0000,  -89.0000,  -99.5000],
        [   0.0000,  -71.5000,  -76.5000, -143.0000, -105.5000, -133.0000, -103.0000, -125.0000, -102.0000, -121.0000, -101.5000, -108.5000, -115.0000,  -99.0000, -111.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0317,  0.0142,  0.0165,  ...,  0.0048, -0.0009, -0.0194],
        [-0.0030,  0.0152,  0.0172,  ...,  0.0239,  0.0050,  0.0228],
        [ 0.0252,  0.0037, -0.0007,  ..., -0.0008,  0.0307,  0.0022],
        ...,
        [-0.0173, -0.0227, -0.0118,  ...,  0.0103, -0.0202,  0.0089],
        [-0.0070,  0.0051, -0.0169,  ..., -0.0141, -0.0237, -0.0202],
        [ 0.0188, -0.0002, -0.0036,  ...,  0.0113,  0.0100,  0.0048]], device='cuda:0', requires_grad=True)
K: tensor([-1.8281,  0.6289, -2.0312,  1.5156, -1.5234, -2.1719, -1.0078,  2.0625, -0.5586, -0.5391,  0.5156,  0.6211, -1.1797, -2.1875,  1.6406,  1.4219,  2.0938, -1.8906, -2.1562,  1.3984,  1.5781, -1.5625, -2.2500,  2.4219, -1.1562,  2.3281, -1.0234, -1.6641,  0.9023, -1.4531,  0.2637, -1.7188,
        -1.2500, -1.9062,  1.9922, -1.9141, -1.6406, -0.1069,  2.1094,  1.3828, -2.0625, -1.1328,  0.5156, -1.7656,  1.6172,  2.3594, -0.0583, -1.5312, -2.0938,  1.8203,  2.5312,  1.0156,  0.5742, -1.9766, -0.8125, -1.6875,  1.5938,  1.7188, -1.7734, -2.0000, -1.0547,  2.0781, -0.1758, -2.2500],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0235,  0.0110, -0.0047,  ...,  0.0147, -0.0177, -0.0159],
        [-0.0085, -0.0074,  0.0060,  ...,  0.0069, -0.0139, -0.0013],
        [ 0.0019,  0.0089, -0.0016,  ..., -0.0010,  0.0134,  0.0021],
        ...,
        [-0.0203,  0.0048, -0.0072,  ..., -0.0100,  0.0206,  0.0073],
        [-0.0266,  0.0243, -0.0042,  ...,  0.0033,  0.0016, -0.0213],
        [ 0.0021, -0.0087, -0.0320,  ...,  0.0014, -0.0035,  0.0128]], device='cuda:0', requires_grad=True)
Q: tensor([ 2.5312, -1.3359,  1.9062, -0.5195,  0.4238,  2.6719,  1.0938, -3.0469, -0.6211, -0.1514,  0.1426, -0.1055,  1.5859,  1.4531, -2.0156, -1.8438, -2.6094,  2.1406,  1.2422, -2.9062, -1.5625,  2.6094,  2.9375, -2.5156,  2.2031, -2.7188,  0.3262,  0.9570,  0.2656,  0.8477,  0.2451,  1.6406,
         0.1748,  2.6250, -1.6016,  2.1562,  2.4062, -0.7422, -2.2500, -2.0781,  3.1562, -0.6562, -1.2734,  2.5000, -1.6484, -1.8203, -1.4922,  0.8398,  0.8242, -1.8281, -2.1875,  0.3262,  1.3516,  2.5625,  0.8867,  2.5469, -2.9844, -1.9531,  1.8203,  1.4688,  0.5625, -2.9219,  1.9688,  1.8438],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000, -18.6250, -21.0000, -16.7500, -15.9375, -16.0000, -16.1250, -18.5000, -18.3750, -17.7500, -20.3750, -20.1250, -20.3750, -18.6250, -20.5000],
        [  0.0000, -21.3750, -24.2500, -19.2500, -18.3750, -18.5000, -18.6250, -21.2500, -21.2500, -20.5000, -23.5000, -23.2500, -23.3750, -21.6250, -23.6250],
        [  0.0000, -16.5000, -18.6250, -14.7500, -14.2500, -14.1875, -14.3750, -16.3750, -16.3750, -15.6250, -18.0000, -17.6250, -17.7500, -16.5000, -18.0000],
        [  0.0000, -15.8125, -17.8750, -14.1250, -13.6875, -13.6875, -13.8125, -15.6875, -15.7500, -15.0625, -17.3750, -17.0000, -17.1250, -15.9375, -17.3750],
        [  0.0000, -15.5625, -17.6250, -13.8125, -13.3750, -13.3750, -13.5625, -15.3750, -15.3750, -14.6875, -16.8750, -16.6250, -16.7500, -15.5625, -17.0000],
        [  0.0000, -15.7500, -17.8750, -14.0000, -13.5625, -13.5000, -13.6875, -15.5625, -15.5625, -14.9375, -17.1250, -16.8750, -17.0000, -15.7500, -17.1250],
        [  0.0000, -18.3750, -20.7500, -16.5000, -15.9375, -15.9375, -16.1250, -18.5000, -18.3750, -17.6250, -20.3750, -20.0000, -20.2500, -18.6250, -20.2500],
        [  0.0000, -17.5000, -19.8750, -15.8125, -15.2500, -15.2500, -15.3750, -17.5000, -17.6250, -16.7500, -19.3750, -19.1250, -19.2500, -17.8750, -19.3750],
        [  0.0000, -18.8750, -21.5000, -17.1250, -16.5000, -16.5000, -16.7500, -19.1250, -19.1250, -18.3750, -21.1250, -20.7500, -20.8750, -19.3750, -21.1250],
        [  0.0000, -18.7500, -21.2500, -17.0000, -16.3750, -16.3750, -16.5000, -18.8750, -18.8750, -18.0000, -20.8750, -20.5000, -20.6250, -19.1250, -20.8750],
        [  0.0000, -19.2500, -22.0000, -17.5000, -16.8750, -16.8750, -17.0000, -19.5000, -19.5000, -18.6250, -21.6250, -21.2500, -21.3750, -19.7500, -21.6250],
        [  0.0000, -18.8750, -21.5000, -17.1250, -16.5000, -16.5000, -16.6250, -19.1250, -19.0000, -18.2500, -21.0000, -20.7500, -20.8750, -19.2500, -21.0000],
        [  0.0000, -17.6250, -20.1250, -16.0000, -15.4375, -15.4375, -15.5625, -17.7500, -17.7500, -17.0000, -19.7500, -19.3750, -19.5000, -18.1250, -19.6250],
        [  0.0000, -19.3750, -22.0000, -17.5000, -16.7500, -16.8750, -17.0000, -19.3750, -19.3750, -18.6250, -21.5000, -21.1250, -21.2500, -19.6250, -21.6250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.5430,     0.4551,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.8750,     0.0703,     0.0532,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0148,     0.4453,     0.1572,     0.0483,     0.3359,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0317,     0.4492,     0.1367,     0.0303,     0.2520,     0.0996,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0004,     0.3262,     0.0227,     0.0325,     0.1523,     0.1108,     0.3555,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.1846,     0.0189,     0.0141,     0.0854,     0.0742,     0.5234,     0.0972,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0820,     0.0123,     0.0053,     0.0522,     0.0625,     0.2422,     0.0391,     0.5039,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0850,     0.0154,     0.0154,     0.0610,     0.0237,     0.2061,     0.0889,     0.4375,     0.0664,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0811,     0.0153,     0.0043,     0.0256,     0.0112,     0.0771,     0.0645,     0.5898,     0.0654,     0.0664,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0664,     0.0192,     0.0281,     0.0649,     0.0287,     0.1924,     0.1260,     0.2988,     0.0698,     0.0569,     0.0486,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0264,     0.0029,     0.0023,     0.0154,     0.0154,     0.1797,     0.0332,     0.6680,     0.0175,     0.0240,     0.0078,     0.0070,     0.0000,     0.0000],
        [    0.0000,     0.0264,     0.0078,     0.0034,     0.0245,     0.0330,     0.1348,     0.0247,     0.3242,     0.0442,     0.0645,     0.0129,     0.0107,     0.2891,     0.0000],
        [    0.0000,     0.0566,     0.0107,     0.0188,     0.0488,     0.0295,     0.1177,     0.0713,     0.2031,     0.0654,     0.0430,     0.0354,     0.0503,     0.1621,     0.0874]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0303,  0.0017,  0.0525,  ...,  0.0067, -0.0135, -0.0119],
        [ 0.0107,  0.0550, -0.0320,  ...,  0.0453,  0.0263,  0.0700],
        [-0.0067,  0.0142, -0.0012,  ..., -0.0341,  0.0572, -0.0180],
        ...,
        [ 0.0200,  0.0277,  0.0239,  ..., -0.0241,  0.0192, -0.0185],
        [ 0.0120,  0.0564, -0.0384,  ...,  0.0878, -0.0325,  0.0992],
        [ 0.0681,  0.0328,  0.0273,  ..., -0.0370, -0.0500,  0.0243]], device='cuda:0', requires_grad=True)
K: tensor([-4.5312,  0.7227, -7.5938,  0.4902,  0.1807, -2.6875, -5.9375,  7.2500,  5.8750, -1.4141,  5.1562, -4.5625, -4.4062,  0.1328,  3.3906,  3.7812,  3.6719, -4.8750, -4.7812, -4.9375, -4.9688,  2.2500, -0.3574, -2.1719, -3.9531, -3.0000, -1.5391, -5.8750,  3.7344,  1.5703,  2.7656, -2.3125,
        -0.5742, -6.4062,  0.6172,  7.2188,  5.0938,  0.5000,  2.5625, -2.2500,  0.2832, -4.3125, -1.2109, -5.1562, -0.0623, -1.6797,  0.6328, -5.8125,  2.3438,  0.5625, -0.1079, -6.8750, -7.3750, -5.9062,  1.4062, -1.1641, -1.4062,  1.2969, -3.5781, -2.3906,  2.4531, -4.0000, -1.4609, -7.3125],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0193, -0.0058, -0.0137,  ..., -0.0198,  0.0355, -0.0121],
        [-0.0062, -0.0477, -0.0626,  ..., -0.0499,  0.0024, -0.0056],
        [-0.0049,  0.0257, -0.0104,  ..., -0.0047, -0.0436, -0.0447],
        ...,
        [ 0.0249, -0.0150,  0.0369,  ..., -0.0070, -0.0282, -0.0175],
        [ 0.0144,  0.0170,  0.0041,  ..., -0.0273, -0.0212, -0.0146],
        [-0.0042, -0.0010, -0.0350,  ...,  0.0482,  0.0263, -0.0438]], device='cuda:0', requires_grad=True)
Q: tensor([    -1.7031,      0.6367,     -0.7539,     -0.0718,      1.4062,     -0.5430,     -2.0781,      0.3047,      1.8203,      0.5430,      2.9531,     -0.6172,     -1.3516,     -0.4707,      0.8867,      0.0693,      1.0781,     -0.3457,      0.0708,      1.1406,     -0.8633,      0.3379,
            -1.3281,     -2.2188,      0.7891,      0.6836,     -0.1494,     -1.3203,     -2.6094,      0.5508,     -0.5742,      0.2227,      1.2188,     -1.3984,     -0.2275,      2.1562,      0.9766,     -1.9375,      0.8672,     -0.4297,     -0.3926,      2.3750,      0.1514,     -0.6797,
            -1.9453,      0.0471,      1.2734,     -0.0010,     -0.3770,     -0.7344,      0.0192,     -1.2266,     -0.1924,     -1.2812,      0.2969,     -1.1406,     -0.7305,     -1.7578,     -0.4883,      0.0913,      2.3281,      1.1016,     -0.7852,     -1.2500], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, 13.5000, 12.0625, 11.6250, 13.5625, 13.8125, 14.8125, 13.5000, 15.9375, 13.6250, 14.3125, 11.9375, 12.6250, 15.6875, 14.7500],
        [ 0.0000, 18.2500, 18.0000, 18.8750, 18.7500, 18.5000, 19.2500, 19.0000, 19.1250, 19.2500, 19.1250, 18.3750, 20.0000, 19.2500, 20.2500],
        [ 0.0000,  9.8750,  7.3125,  7.0625,  8.7500,  8.8125, 10.6250,  9.2500, 10.7500,  8.1250,  8.0625,  6.8125,  7.5000, 10.1250,  9.3125],
        [ 0.0000,  3.4062,  2.3594,  1.1875,  3.1250,  3.2812,  4.2188,  2.5781,  5.0000,  2.2344,  3.1094,  1.5781,  1.0859,  4.5938,  3.1875],
        [ 0.0000,  2.6562,  1.4609, -0.0459,  2.0781,  1.1406,  3.4062,  2.3438,  4.0625,  1.5703,  1.7656,  1.3750,  0.9688,  3.8125,  2.3438],
        [ 0.0000,  6.7188,  4.0625,  4.4062,  5.9688,  5.6562,  6.8125,  5.6250,  7.1875,  4.7188,  4.4688,  3.8594,  3.3594,  6.5000,  5.5000],
        [ 0.0000,  7.4062,  5.1250,  4.8125,  6.6250,  6.5000,  8.4375,  6.7500,  9.6875,  6.1875,  6.0938,  5.0625,  5.0938,  9.2500,  7.4688],
        [ 0.0000, 10.7500,  8.8125,  8.0000, 10.3125, 10.5000, 11.8125, 10.0000, 12.5625, 10.3750, 10.5000,  8.8750,  8.6875, 12.0625, 11.5000],
        [ 0.0000, 10.9375,  9.2500,  9.2500, 10.6250,  9.6875, 11.8750, 11.0000, 12.6250, 10.6875, 10.5625, 10.5000, 10.7500, 12.5000, 11.6250],
        [ 0.0000,  8.7500,  7.0938,  5.8125,  7.5938,  6.7500,  8.6875,  8.5000, 10.7500,  8.5625,  8.5625,  8.1250,  7.8125, 10.6875,  8.7500],
        [ 0.0000,  9.8125,  8.6250,  9.0000,  9.8125,  9.0000, 10.9375, 10.5000, 11.3750,  9.8750,  9.6875,  9.5000, 10.3750, 11.3125, 11.0000],
        [ 0.0000,  6.6875,  4.4688,  4.2500,  6.1562,  6.1562,  8.6250,  6.9062,  9.9375,  6.2812,  6.5938,  5.4688,  5.3750,  9.8125,  8.1875],
        [ 0.0000,  9.3125,  8.0625,  7.2188,  9.1875,  9.5000, 10.9375,  9.2500, 11.8125,  9.8125, 10.1875,  8.5625,  8.3750, 11.6875, 11.3750],
        [ 0.0000, 15.0000, 13.3750, 13.8750, 14.8750, 14.3750, 15.7500, 15.2500, 16.2500, 15.1250, 14.7500, 14.5625, 14.8750, 16.0000, 15.4375]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3804],
        [0.2493],
        [0.2035],
        [0.2112],
        [0.1967],
        [0.1770],
        [0.1427],
        [0.1469],
        [0.1594],
        [0.1397],
        [0.1360],
        [0.1079],
        [0.0910],
        [0.1329]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( are:0.1846 a:0.2676-:0.1387 yellow:0.1118,:0.0579,:0.4512 a:0.1182iced:0.2988)
iced
------
		( a:0.2676-:0.1387 yellow:0.1118,:0.0579,:0.4512 a:0.1182iced:0.2988,:0.4688)
, and the leaves are green, and the leaves are green.
The
@ 7050 train 3.7966 , allloss: 3.7968, dt: 1719.54ms, fracRes: 0.7124, norm(attn): 0.1406, norm(output): 0.9480, norm(x): 0.8154, norm(y): 0.9904, norm:0.5743, tok/sec: 76224.95, flops:80.01, batch-reuse:1
@ 7051 train 3.8503 , allloss: 3.8503, dt: 1309.74ms, fracRes: 0.7127, norm(attn): 0.1406, norm(output): 0.9475, norm(x): 0.8145, norm(y): 0.9905, norm:0.5735, tok/sec: 100074.87, flops:105.04, batch-reuse:1
@ 7052 train 3.7792 , allloss: 3.7793, dt: 1307.50ms, fracRes: 0.7130, norm(attn): 0.1406, norm(output): 0.9475, norm(x): 0.8145, norm(y): 0.9904, norm:0.6092, tok/sec: 100246.48, flops:105.22, batch-reuse:1
@ 7053 train 3.8181 , allloss: 3.8182, dt: 1318.21ms, fracRes: 0.7129, norm(attn): 0.1426, norm(output): 0.9475, norm(x): 0.8140, norm(y): 0.9906, norm:0.5298, tok/sec: 99431.90, flops:104.37, batch-reuse:1
@ 7054 train 3.8096 , allloss: 3.8096, dt: 1315.60ms, fracRes: 0.7125, norm(attn): 0.1406, norm(output): 0.9477, norm(x): 0.8152, norm(y): 0.9905, norm:0.6038, tok/sec: 99628.86, flops:104.57, batch-reuse:1
@ 7055 train 3.7704 , allloss: 3.7705, dt: 1302.77ms, fracRes: 0.7126, norm(attn): 0.1406, norm(output): 0.9473, norm(x): 0.8146, norm(y): 0.9906, norm:0.5604, tok/sec: 100610.50, flops:105.60, batch-reuse:1
@ 7056 train 3.9756 , allloss: 3.9757, dt: 1314.13ms, fracRes: 0.7128, norm(attn): 0.1396, norm(output): 0.9478, norm(x): 0.8154, norm(y): 0.9906, norm:0.5399, tok/sec: 99740.29, flops:104.69, batch-reuse:1
@ 7057 train 3.7655 , allloss: 3.7656, dt: 1314.27ms, fracRes: 0.7126, norm(attn): 0.1406, norm(output): 0.9478, norm(x): 0.8157, norm(y): 0.9904, norm:0.5838, tok/sec: 99729.74, flops:104.68, batch-reuse:1
@ 7058 train 3.7876 , allloss: 3.7876, dt: 1296.77ms, fracRes: 0.7124, norm(attn): 0.1406, norm(output): 0.9474, norm(x): 0.8152, norm(y): 0.9903, norm:0.5676, tok/sec: 101075.46, flops:106.09, batch-reuse:1
@ 7059 train 3.8155 , allloss: 3.8156, dt: 1315.10ms, fracRes: 0.7124, norm(attn): 0.1426, norm(output): 0.9470, norm(x): 0.8142, norm(y): 0.9904, norm:0.5701, tok/sec: 99666.82, flops:104.61, batch-reuse:1
@ 7060 train 3.8190 , allloss: 3.8190, dt: 1331.54ms, fracRes: 0.7124, norm(attn): 0.1416, norm(output): 0.9476, norm(x): 0.8154, norm(y): 0.9904, norm:0.6142, tok/sec: 98436.42, flops:103.32, batch-reuse:1
@ 7061 train 3.8552 , allloss: 3.8553, dt: 1312.10ms, fracRes: 0.7124, norm(attn): 0.1406, norm(output): 0.9480, norm(x): 0.8161, norm(y): 0.9904, norm:0.5452, tok/sec: 99894.58, flops:104.85, batch-reuse:1
@ 7062 train 3.8969 , allloss: 3.8970, dt: 1300.68ms, fracRes: 0.7124, norm(attn): 0.1406, norm(output): 0.9478, norm(x): 0.8159, norm(y): 0.9905, norm:0.5931, tok/sec: 100771.60, flops:105.77, batch-reuse:1
@ 7063 train 3.8372 , allloss: 3.8375, dt: 1308.40ms, fracRes: 0.7123, norm(attn): 0.1406, norm(output): 0.9475, norm(x): 0.8155, norm(y): 0.9904, norm:0.6416, tok/sec: 100177.03, flops:105.15, batch-reuse:1
@ 7064 train 3.8205 , allloss: 3.8206, dt: 1298.16ms, fracRes: 0.7125, norm(attn): 0.1396, norm(output): 0.9475, norm(x): 0.8153, norm(y): 0.9901, norm:0.5605, tok/sec: 100967.29, flops:105.98, batch-reuse:1
@ 7065 train 3.8064 , allloss: 3.8064, dt: 1346.03ms, fracRes: 0.7124, norm(attn): 0.1406, norm(output): 0.9478, norm(x): 0.8159, norm(y): 0.9901, norm:0.6116, tok/sec: 97376.95, flops:102.21, batch-reuse:1
@ 7066 train 3.8409 , allloss: 3.8410, dt: 1310.64ms, fracRes: 0.7122, norm(attn): 0.1406, norm(output): 0.9481, norm(x): 0.8163, norm(y): 0.9902, norm:0.6836, tok/sec: 100006.44, flops:104.97, batch-reuse:1
@ 7067 train 3.7930 , allloss: 3.7931, dt: 1314.80ms, fracRes: 0.7125, norm(attn): 0.1416, norm(output): 0.9474, norm(x): 0.8141, norm(y): 0.9905, norm:0.5990, tok/sec: 99689.96, flops:104.64, batch-reuse:1
@ 7068 train 3.8974 , allloss: 3.8974, dt: 1341.04ms, fracRes: 0.7127, norm(attn): 0.1416, norm(output): 0.9474, norm(x): 0.8146, norm(y): 0.9905, norm:0.6386, tok/sec: 97738.94, flops:102.59, batch-reuse:1
@ 7069 train 3.8451 , allloss: 3.8452, dt: 1348.43ms, fracRes: 0.7127, norm(attn): 0.1406, norm(output): 0.9475, norm(x): 0.8148, norm(y): 0.9904, norm:0.6720, tok/sec: 97203.45, flops:102.03, batch-reuse:1
@ 7070 train 3.9866 , allloss: 3.9876, dt: 1350.08ms, fracRes: 0.7128, norm(attn): 0.1416, norm(output): 0.9475, norm(x): 0.8144, norm(y): 0.9904, norm:0.6144, tok/sec: 97084.58, flops:101.90, batch-reuse:1
@ 7071 train 3.9984 , allloss: 3.9985, dt: 1311.86ms, fracRes: 0.7124, norm(attn): 0.1406, norm(output): 0.9484, norm(x): 0.8164, norm(y): 0.9903, norm:0.6397, tok/sec: 99912.86, flops:104.87, batch-reuse:1
@ 7072 train 3.9492 , allloss: 3.9493, dt: 1325.45ms, fracRes: 0.7123, norm(attn): 0.1416, norm(output): 0.9477, norm(x): 0.8154, norm(y): 0.9902, norm:0.6425, tok/sec: 98888.47, flops:103.80, batch-reuse:1
@ 7073 train 4.0908 , allloss: 4.0909, dt: 1307.66ms, fracRes: 0.7125, norm(attn): 0.1416, norm(output): 0.9473, norm(x): 0.8142, norm(y): 0.9904, norm:0.8304, tok/sec: 100233.69, flops:105.21, batch-reuse:1
@ 7074 train 4.0812 , allloss: 4.0812, dt: 1277.66ms, fracRes: 0.7125, norm(attn): 0.1396, norm(output): 0.9478, norm(x): 0.8149, norm(y): 0.9905, norm:0.7788, tok/sec: 102587.46, flops:107.68, batch-reuse:1
@ 7075 train 3.9875 , allloss: 3.9876, dt: 1302.40ms, fracRes: 0.7126, norm(attn): 0.1396, norm(output): 0.9475, norm(x): 0.8147, norm(y): 0.9906, norm:0.5669, tok/sec: 100638.87, flops:105.63, batch-reuse:1
@ 7076 train 4.0724 , allloss: 4.0726, dt: 1286.77ms, fracRes: 0.7127, norm(attn): 0.1396, norm(output): 0.9474, norm(x): 0.8142, norm(y): 0.9904, norm:0.7938, tok/sec: 101861.26, flops:106.92, batch-reuse:1
@ 7077 train 4.0139 , allloss: 4.0140, dt: 1309.05ms, fracRes: 0.7126, norm(attn): 0.1396, norm(output): 0.9476, norm(x): 0.8143, norm(y): 0.9903, norm:0.5593, tok/sec: 100127.69, flops:105.10, batch-reuse:1
@ 7078 train 3.9924 , allloss: 3.9926, dt: 1291.63ms, fracRes: 0.7126, norm(attn): 0.1416, norm(output): 0.9478, norm(x): 0.8145, norm(y): 0.9903, norm:0.7488, tok/sec: 101478.18, flops:106.51, batch-reuse:1
@ 7079 train 3.9609 , allloss: 3.9611, dt: 1277.24ms, fracRes: 0.7127, norm(attn): 0.1406, norm(output): 0.9476, norm(x): 0.8139, norm(y): 0.9903, norm:0.6576, tok/sec: 102621.33, flops:107.71, batch-reuse:1
@ 7080 train 3.9804 , allloss: 3.9805, dt: 1324.23ms, fracRes: 0.7127, norm(attn): 0.1406, norm(output): 0.9476, norm(x): 0.8141, norm(y): 0.9905, norm:0.6541, tok/sec: 98979.52, flops:103.89, batch-reuse:1
@ 7081 train 4.0135 , allloss: 4.0136, dt: 1323.51ms, fracRes: 0.7127, norm(attn): 0.1406, norm(output): 0.9478, norm(x): 0.8145, norm(y): 0.9904, norm:0.7214, tok/sec: 99033.94, flops:103.95, batch-reuse:1
@ 7082 train 3.9099 , allloss: 3.9099, dt: 1309.26ms, fracRes: 0.7126, norm(attn): 0.1406, norm(output): 0.9478, norm(x): 0.8151, norm(y): 0.9903, norm:0.6687, tok/sec: 100111.54, flops:105.08, batch-reuse:1
@ 7083 train 3.8928 , allloss: 3.8929, dt: 1296.71ms, fracRes: 0.7127, norm(attn): 0.1406, norm(output): 0.9481, norm(x): 0.8152, norm(y): 0.9902, norm:0.5964, tok/sec: 101080.70, flops:106.10, batch-reuse:1
@ 7084 train 3.9483 , allloss: 3.9484, dt: 1306.42ms, fracRes: 0.7129, norm(attn): 0.1406, norm(output): 0.9477, norm(x): 0.8141, norm(y): 0.9903, norm:0.7251, tok/sec: 100329.25, flops:105.31, batch-reuse:1
@ 7085 train 4.0204 , allloss: 4.0207, dt: 1286.47ms, fracRes: 0.7127, norm(attn): 0.1396, norm(output): 0.9477, norm(x): 0.8143, norm(y): 0.9903, norm:0.6088, tok/sec: 101884.74, flops:106.94, batch-reuse:1
@ 7086 train 3.9543 , allloss: 3.9545, dt: 1287.21ms, fracRes: 0.7125, norm(attn): 0.1406, norm(output): 0.9481, norm(x): 0.8155, norm(y): 0.9903, norm:0.6911, tok/sec: 101826.66, flops:106.88, batch-reuse:1
@ 7087 train 3.9639 , allloss: 3.9640, dt: 1302.96ms, fracRes: 0.7126, norm(attn): 0.1406, norm(output): 0.9480, norm(x): 0.8153, norm(y): 0.9902, norm:0.6499, tok/sec: 100595.83, flops:105.59, batch-reuse:1
@ 7088 train 3.9929 , allloss: 3.9930, dt: 1307.73ms, fracRes: 0.7127, norm(attn): 0.1406, norm(output): 0.9478, norm(x): 0.8149, norm(y): 0.9903, norm:0.6776, tok/sec: 100228.97, flops:105.20, batch-reuse:1
@ 7089 train 3.9504 , allloss: 3.9504, dt: 1346.45ms, fracRes: 0.7124, norm(attn): 0.1406, norm(output): 0.9479, norm(x): 0.8154, norm(y): 0.9899, norm:0.6416, tok/sec: 97346.04, flops:102.18, batch-reuse:1
@ 7090 train 3.9503 , allloss: 3.9503, dt: 1344.28ms, fracRes: 0.7124, norm(attn): 0.1406, norm(output): 0.9478, norm(x): 0.8152, norm(y): 0.9901, norm:0.5784, tok/sec: 97503.63, flops:102.34, batch-reuse:1
@ 7091 train 3.9773 , allloss: 3.9774, dt: 1323.08ms, fracRes: 0.7128, norm(attn): 0.1396, norm(output): 0.9479, norm(x): 0.8153, norm(y): 0.9904, norm:0.6710, tok/sec: 99065.53, flops:103.98, batch-reuse:1
@ 7092 train 4.0820 , allloss: 4.0823, dt: 1307.12ms, fracRes: 0.7130, norm(attn): 0.1387, norm(output): 0.9480, norm(x): 0.8153, norm(y): 0.9906, norm:0.7612, tok/sec: 100275.13, flops:105.25, batch-reuse:1
@ 7093 train 3.9844 , allloss: 3.9845, dt: 1336.10ms, fracRes: 0.7127, norm(attn): 0.1396, norm(output): 0.9475, norm(x): 0.8150, norm(y): 0.9908, norm:0.6533, tok/sec: 98100.73, flops:102.97, batch-reuse:1
@ 7094 train 4.0831 , allloss: 4.0831, dt: 1301.22ms, fracRes: 0.7126, norm(attn): 0.1416, norm(output): 0.9473, norm(x): 0.8148, norm(y): 0.9908, norm:0.6941, tok/sec: 100729.89, flops:105.73, batch-reuse:1
@ 7095 train 3.9121 , allloss: 3.9121, dt: 1315.43ms, fracRes: 0.7127, norm(attn): 0.1396, norm(output): 0.9478, norm(x): 0.8160, norm(y): 0.9903, norm:0.6192, tok/sec: 99641.62, flops:104.59, batch-reuse:1
@ 7096 train 3.9936 , allloss: 3.9937, dt: 1305.12ms, fracRes: 0.7124, norm(attn): 0.1406, norm(output): 0.9480, norm(x): 0.8166, norm(y): 0.9902, norm:0.8235, tok/sec: 100429.12, flops:105.41, batch-reuse:1
@ 7097 train 3.8918 , allloss: 3.8918, dt: 1314.06ms, fracRes: 0.7123, norm(attn): 0.1406, norm(output): 0.9477, norm(x): 0.8162, norm(y): 0.9900, norm:0.8263, tok/sec: 99745.77, flops:104.70, batch-reuse:1
@ 7098 train 3.9252 , allloss: 3.9252, dt: 1297.30ms, fracRes: 0.7121, norm(attn): 0.1406, norm(output): 0.9480, norm(x): 0.8166, norm(y): 0.9901, norm:0.6570, tok/sec: 101034.62, flops:106.05, batch-reuse:1
@ 7099 train 3.9995 , allloss: 3.9995, dt: 1312.80ms, fracRes: 0.7123, norm(attn): 0.1406, norm(output): 0.9481, norm(x): 0.8164, norm(y): 0.9902, norm:0.7044, tok/sec: 99841.75, flops:104.80, batch-reuse:1
@ 7100 train 3.9589 , allloss: 3.9590, dt: 1335.96ms, fracRes: 0.7125, norm(attn): 0.1406, norm(output): 0.9480, norm(x): 0.8161, norm(y): 0.9902, norm:0.6073, tok/sec: 98111.04, flops:102.98, batch-reuse:1
@ 7101 train 3.9357 , allloss: 3.9357, dt: 1299.85ms, fracRes: 0.7126, norm(attn): 0.1406, norm(output): 0.9477, norm(x): 0.8155, norm(y): 0.9900, norm:0.6241, tok/sec: 100836.01, flops:105.84, batch-reuse:1
@ 7102 train 3.9520 , allloss: 3.9521, dt: 1307.75ms, fracRes: 0.7126, norm(attn): 0.1396, norm(output): 0.9479, norm(x): 0.8159, norm(y): 0.9900, norm:0.6726, tok/sec: 100227.29, flops:105.20, batch-reuse:1
@ 7103 train 3.9913 , allloss: 3.9913, dt: 1309.90ms, fracRes: 0.7125, norm(attn): 0.1406, norm(output): 0.9479, norm(x): 0.8157, norm(y): 0.9900, norm:0.7052, tok/sec: 100062.58, flops:105.03, batch-reuse:1
@ 7104 train 3.9522 , allloss: 3.9523, dt: 1290.07ms, fracRes: 0.7126, norm(attn): 0.1396, norm(output): 0.9481, norm(x): 0.8156, norm(y): 0.9902, norm:0.5903, tok/sec: 101601.02, flops:106.64, batch-reuse:1
@ 7105 train 4.0345 , allloss: 4.0346, dt: 1312.39ms, fracRes: 0.7127, norm(attn): 0.1406, norm(output): 0.9479, norm(x): 0.8153, norm(y): 0.9902, norm:0.7665, tok/sec: 99872.94, flops:104.83, batch-reuse:1
@ 7106 train 4.0156 , allloss: 4.0157, dt: 1320.22ms, fracRes: 0.7129, norm(attn): 0.1406, norm(output): 0.9480, norm(x): 0.8151, norm(y): 0.9903, norm:0.6037, tok/sec: 99280.67, flops:104.21, batch-reuse:1
@ 7107 train 4.2192 , allloss: 4.2193, dt: 1293.37ms, fracRes: 0.7124, norm(attn): 0.1416, norm(output): 0.9477, norm(x): 0.8151, norm(y): 0.9902, norm:1.0319, tok/sec: 101341.66, flops:106.37, batch-reuse:1
@ 7108 train 3.9416 , allloss: 3.9417, dt: 1303.49ms, fracRes: 0.7124, norm(attn): 0.1406, norm(output): 0.9478, norm(x): 0.8153, norm(y): 0.9902, norm:1.0762, tok/sec: 100554.85, flops:105.55, batch-reuse:1
@ 7109 train 4.0175 , allloss: 4.0175, dt: 1290.73ms, fracRes: 0.7124, norm(attn): 0.1406, norm(output): 0.9480, norm(x): 0.8160, norm(y): 0.9899, norm:0.6204, tok/sec: 101549.07, flops:106.59, batch-reuse:1
@ 7110 train 4.0535 , allloss: 4.0535, dt: 1309.51ms, fracRes: 0.7126, norm(attn): 0.1406, norm(output): 0.9475, norm(x): 0.8151, norm(y): 0.9899, norm:1.0519, tok/sec: 100092.04, flops:105.06, batch-reuse:1
@ 7111 train 3.9777 , allloss: 3.9778, dt: 1322.38ms, fracRes: 0.7124, norm(attn): 0.1416, norm(output): 0.9476, norm(x): 0.8156, norm(y): 0.9900, norm:0.7126, tok/sec: 99118.47, flops:104.04, batch-reuse:1
@ 7112 train 3.9380 , allloss: 3.9381, dt: 1293.35ms, fracRes: 0.7127, norm(attn): 0.1436, norm(output): 0.9474, norm(x): 0.8141, norm(y): 0.9903, norm:0.7453, tok/sec: 101343.08, flops:106.37, batch-reuse:1
@ 7113 train 3.8770 , allloss: 3.8771, dt: 1294.88ms, fracRes: 0.7129, norm(attn): 0.1416, norm(output): 0.9479, norm(x): 0.8152, norm(y): 0.9902, norm:0.6506, tok/sec: 101223.27, flops:106.25, batch-reuse:1
@ 7114 train 4.0742 , allloss: 4.0744, dt: 1306.59ms, fracRes: 0.7132, norm(attn): 0.1396, norm(output): 0.9481, norm(x): 0.8152, norm(y): 0.9902, norm:0.7245, tok/sec: 100315.92, flops:105.29, batch-reuse:1
@ 7115 train 3.8982 , allloss: 3.8983, dt: 1301.77ms, fracRes: 0.7127, norm(attn): 0.1416, norm(output): 0.9482, norm(x): 0.8159, norm(y): 0.9900, norm:0.6735, tok/sec: 100687.56, flops:105.68, batch-reuse:1
@ 7116 train 3.9711 , allloss: 3.9712, dt: 1288.68ms, fracRes: 0.7123, norm(attn): 0.1416, norm(output): 0.9482, norm(x): 0.8165, norm(y): 0.9901, norm:0.6262, tok/sec: 101710.01, flops:106.76, batch-reuse:1
@ 7117 train 4.0111 , allloss: 4.0111, dt: 1319.24ms, fracRes: 0.7127, norm(attn): 0.1416, norm(output): 0.9484, norm(x): 0.8163, norm(y): 0.9905, norm:0.9094, tok/sec: 99353.93, flops:104.29, batch-reuse:1
@ 7118 train 4.1678 , allloss: 4.1679, dt: 1341.81ms, fracRes: 0.7130, norm(attn): 0.1396, norm(output): 0.9480, norm(x): 0.8148, norm(y): 0.9902, norm:1.0301, tok/sec: 97683.05, flops:102.53, batch-reuse:1
@ 7119 train 4.0823 , allloss: 4.0824, dt: 1327.46ms, fracRes: 0.7131, norm(attn): 0.1406, norm(output): 0.9485, norm(x): 0.8158, norm(y): 0.9901, norm:0.8467, tok/sec: 98738.80, flops:103.64, batch-reuse:1
@ 7120 train 3.9591 , allloss: 3.9592, dt: 1292.88ms, fracRes: 0.7130, norm(attn): 0.1406, norm(output): 0.9479, norm(x): 0.8151, norm(y): 0.9900, norm:0.7784, tok/sec: 101379.88, flops:106.41, batch-reuse:1
@ 7121 train 3.9366 , allloss: 3.9367, dt: 1310.91ms, fracRes: 0.7129, norm(attn): 0.1416, norm(output): 0.9473, norm(x): 0.8138, norm(y): 0.9900, norm:0.7469, tok/sec: 99985.18, flops:104.95, batch-reuse:1
@ 7122 train 3.9247 , allloss: 3.9247, dt: 1317.02ms, fracRes: 0.7128, norm(attn): 0.1416, norm(output): 0.9476, norm(x): 0.8145, norm(y): 0.9900, norm:0.6809, tok/sec: 99521.36, flops:104.46, batch-reuse:1
@ 7123 train 4.0266 , allloss: 4.0266, dt: 1306.90ms, fracRes: 0.7128, norm(attn): 0.1406, norm(output): 0.9483, norm(x): 0.8157, norm(y): 0.9900, norm:0.7021, tok/sec: 100291.98, flops:105.27, batch-reuse:1
@ 7124 train 4.0355 , allloss: 4.0355, dt: 1308.59ms, fracRes: 0.7128, norm(attn): 0.1406, norm(output): 0.9486, norm(x): 0.8163, norm(y): 0.9902, norm:0.7379, tok/sec: 100162.67, flops:105.13, batch-reuse:1
@ 7125 train 3.9946 , allloss: 3.9946, dt: 1343.89ms, fracRes: 0.7130, norm(attn): 0.1416, norm(output): 0.9478, norm(x): 0.8148, norm(y): 0.9903, norm:0.6571, tok/sec: 97531.80, flops:102.37, batch-reuse:1
@ 7126 train 3.9971 , allloss: 3.9972, dt: 1332.08ms, fracRes: 0.7127, norm(attn): 0.1406, norm(output): 0.9480, norm(x): 0.8157, norm(y): 0.9899, norm:0.6380, tok/sec: 98396.73, flops:103.28, batch-reuse:1
@ 7127 train 4.0052 , allloss: 4.0052, dt: 1330.61ms, fracRes: 0.7128, norm(attn): 0.1396, norm(output): 0.9480, norm(x): 0.8157, norm(y): 0.9899, norm:0.6032, tok/sec: 98504.91, flops:103.39, batch-reuse:1
@ 7128 train 3.8897 , allloss: 3.8898, dt: 1304.61ms, fracRes: 0.7129, norm(attn): 0.1426, norm(output): 0.9478, norm(x): 0.8149, norm(y): 0.9900, norm:0.6091, tok/sec: 100468.06, flops:105.45, batch-reuse:1
@ 7129 train 3.9919 , allloss: 3.9920, dt: 1296.27ms, fracRes: 0.7127, norm(attn): 0.1406, norm(output): 0.9487, norm(x): 0.8171, norm(y): 0.9897, norm:0.6380, tok/sec: 101114.35, flops:106.13, batch-reuse:1
@ 7130 train 4.0195 , allloss: 4.0196, dt: 1288.31ms, fracRes: 0.7126, norm(attn): 0.1396, norm(output): 0.9485, norm(x): 0.8168, norm(y): 0.9898, norm:0.6430, tok/sec: 101739.63, flops:106.79, batch-reuse:1
@ 7131 train 3.9866 , allloss: 3.9867, dt: 1312.45ms, fracRes: 0.7124, norm(attn): 0.1406, norm(output): 0.9479, norm(x): 0.8160, norm(y): 0.9899, norm:0.5714, tok/sec: 99868.12, flops:104.82, batch-reuse:1
@ 7132 train 3.9224 , allloss: 3.9225, dt: 1330.65ms, fracRes: 0.7126, norm(attn): 0.1416, norm(output): 0.9477, norm(x): 0.8155, norm(y): 0.9900, norm:0.5535, tok/sec: 98502.23, flops:103.39, batch-reuse:1
@ 7133 train 3.9925 , allloss: 3.9925, dt: 1331.91ms, fracRes: 0.7126, norm(attn): 0.1396, norm(output): 0.9480, norm(x): 0.8163, norm(y): 0.9899, norm:0.5811, tok/sec: 98409.02, flops:103.29, batch-reuse:1
@ 7134 train 4.0027 , allloss: 4.0028, dt: 1329.61ms, fracRes: 0.7126, norm(attn): 0.1406, norm(output): 0.9484, norm(x): 0.8168, norm(y): 0.9899, norm:0.5675, tok/sec: 98579.65, flops:103.47, batch-reuse:1
@ 7135 train 3.9697 , allloss: 3.9697, dt: 1329.40ms, fracRes: 0.7124, norm(attn): 0.1406, norm(output): 0.9486, norm(x): 0.8173, norm(y): 0.9898, norm:0.5200, tok/sec: 98595.12, flops:103.49, batch-reuse:1
@ 7136 train 3.9237 , allloss: 3.9238, dt: 1336.25ms, fracRes: 0.7123, norm(attn): 0.1406, norm(output): 0.9484, norm(x): 0.8170, norm(y): 0.9897, norm:0.5304, tok/sec: 98089.56, flops:102.96, batch-reuse:1
@ 7137 train 3.9986 , allloss: 3.9986, dt: 1317.96ms, fracRes: 0.7124, norm(attn): 0.1396, norm(output): 0.9480, norm(x): 0.8165, norm(y): 0.9898, norm:0.5551, tok/sec: 99451.04, flops:104.39, batch-reuse:1
@ 7138 train 4.0531 , allloss: 4.0531, dt: 1276.65ms, fracRes: 0.7126, norm(attn): 0.1396, norm(output): 0.9481, norm(x): 0.8162, norm(y): 0.9901, norm:0.5229, tok/sec: 102668.65, flops:107.76, batch-reuse:1
@ 7139 train 4.0188 , allloss: 4.0188, dt: 1302.01ms, fracRes: 0.7124, norm(attn): 0.1396, norm(output): 0.9485, norm(x): 0.8174, norm(y): 0.9900, norm:0.5928, tok/sec: 100669.18, flops:105.67, batch-reuse:1
@ 7140 train 4.0030 , allloss: 4.0030, dt: 1321.44ms, fracRes: 0.7124, norm(attn): 0.1396, norm(output): 0.9484, norm(x): 0.8169, norm(y): 0.9900, norm:0.5690, tok/sec: 99188.73, flops:104.11, batch-reuse:1
@ 7141 train 3.9444 , allloss: 3.9445, dt: 1308.75ms, fracRes: 0.7126, norm(attn): 0.1396, norm(output): 0.9480, norm(x): 0.8166, norm(y): 0.9900, norm:0.5039, tok/sec: 100150.71, flops:105.12, batch-reuse:1
@ 7142 train 3.9645 , allloss: 3.9645, dt: 1305.58ms, fracRes: 0.7128, norm(attn): 0.1406, norm(output): 0.9481, norm(x): 0.8168, norm(y): 0.9900, norm:0.5629, tok/sec: 100394.00, flops:105.38, batch-reuse:1
@ 7143 train 3.9625 , allloss: 3.9626, dt: 1297.78ms, fracRes: 0.7124, norm(attn): 0.1396, norm(output): 0.9485, norm(x): 0.8179, norm(y): 0.9898, norm:0.5734, tok/sec: 100996.94, flops:106.01, batch-reuse:1
@ 7144 train 3.9563 , allloss: 3.9566, dt: 1302.58ms, fracRes: 0.7122, norm(attn): 0.1406, norm(output): 0.9482, norm(x): 0.8174, norm(y): 0.9898, norm:0.5425, tok/sec: 100625.20, flops:105.62, batch-reuse:1
@ 7145 train 3.9432 , allloss: 3.9433, dt: 1344.07ms, fracRes: 0.7122, norm(attn): 0.1396, norm(output): 0.9483, norm(x): 0.8179, norm(y): 0.9896, norm:0.5733, tok/sec: 97519.03, flops:102.36, batch-reuse:1
@ 7146 train 3.8837 , allloss: 3.8838, dt: 1344.83ms, fracRes: 0.7124, norm(attn): 0.1396, norm(output): 0.9481, norm(x): 0.8173, norm(y): 0.9897, norm:0.4963, tok/sec: 97463.55, flops:102.30, batch-reuse:1
@ 7147 train 3.9728 , allloss: 3.9728, dt: 1331.64ms, fracRes: 0.7124, norm(attn): 0.1396, norm(output): 0.9483, norm(x): 0.8173, norm(y): 0.9899, norm:0.5579, tok/sec: 98428.74, flops:103.31, batch-reuse:1
@ 7148 train 3.8774 , allloss: 3.8774, dt: 1291.54ms, fracRes: 0.7121, norm(attn): 0.1406, norm(output): 0.9479, norm(x): 0.8169, norm(y): 0.9902, norm:0.5461, tok/sec: 101485.24, flops:106.52, batch-reuse:1
@ 7149 train 4.0316 , allloss: 4.0316, dt: 1303.42ms, fracRes: 0.7123, norm(attn): 0.1396, norm(output): 0.9485, norm(x): 0.8174, norm(y): 0.9900, norm:0.7131, tok/sec: 100560.06, flops:105.55, batch-reuse:1
@ 7150 train 3.9418 , allloss: 3.9419, dt: 1331.23ms, fracRes: 0.7124, norm(attn): 0.1406, norm(output): 0.9480, norm(x): 0.8165, norm(y): 0.9901, norm:0.5784, tok/sec: 98459.33, flops:103.35, batch-reuse:1
@ 7151 train 3.9626 , allloss: 3.9634, dt: 1344.18ms, fracRes: 0.7123, norm(attn): 0.1406, norm(output): 0.9480, norm(x): 0.8167, norm(y): 0.9901, norm:0.5702, tok/sec: 97510.95, flops:102.35, batch-reuse:1
@ 7152 train 4.0081 , allloss: 4.0088, dt: 1296.56ms, fracRes: 0.7122, norm(attn): 0.1406, norm(output): 0.9484, norm(x): 0.8176, norm(y): 0.9900, norm:0.6092, tok/sec: 101092.21, flops:106.11, batch-reuse:1
@ 7153 train 3.9205 , allloss: 3.9206, dt: 1320.77ms, fracRes: 0.7122, norm(attn): 0.1406, norm(output): 0.9481, norm(x): 0.8174, norm(y): 0.9900, norm:0.6590, tok/sec: 99238.92, flops:104.16, batch-reuse:1
@ 7154 train 3.8347 , allloss: 3.8349, dt: 1350.13ms, fracRes: 0.7129, norm(attn): 0.1426, norm(output): 0.9475, norm(x): 0.8139, norm(y): 0.9899, norm:0.9545, tok/sec: 97081.31, flops:101.90, batch-reuse:1
@ 7155 train 3.9975 , allloss: 3.9976, dt: 1334.01ms, fracRes: 0.7127, norm(attn): 0.1406, norm(output): 0.9482, norm(x): 0.8162, norm(y): 0.9899, norm:0.6213, tok/sec: 98254.27, flops:103.13, batch-reuse:1
@ 7156 train 3.9614 , allloss: 3.9615, dt: 1303.77ms, fracRes: 0.7126, norm(attn): 0.1396, norm(output): 0.9485, norm(x): 0.8173, norm(y): 0.9899, norm:0.6427, tok/sec: 100533.08, flops:105.52, batch-reuse:1
@ 7157 train 3.9766 , allloss: 3.9767, dt: 1338.92ms, fracRes: 0.7125, norm(attn): 0.1396, norm(output): 0.9479, norm(x): 0.8169, norm(y): 0.9899, norm:0.5833, tok/sec: 97894.01, flops:102.75, batch-reuse:1
@ 7158 train 3.9337 , allloss: 3.9337, dt: 1334.90ms, fracRes: 0.7125, norm(attn): 0.1396, norm(output): 0.9481, norm(x): 0.8171, norm(y): 0.9897, norm:0.5507, tok/sec: 98188.44, flops:103.06, batch-reuse:1
@ 7159 train 3.9523 , allloss: 3.9533, dt: 1338.96ms, fracRes: 0.7125, norm(attn): 0.1406, norm(output): 0.9481, norm(x): 0.8169, norm(y): 0.9897, norm:0.5997, tok/sec: 97890.68, flops:102.75, batch-reuse:1
@ 7160 train 3.9722 , allloss: 3.9723, dt: 1333.95ms, fracRes: 0.7128, norm(attn): 0.1406, norm(output): 0.9480, norm(x): 0.8166, norm(y): 0.9898, norm:0.5820, tok/sec: 98258.66, flops:103.14, batch-reuse:1
@ 7161 train 3.8951 , allloss: 3.8951, dt: 1279.31ms, fracRes: 0.7128, norm(attn): 0.1406, norm(output): 0.9482, norm(x): 0.8169, norm(y): 0.9898, norm:0.5514, tok/sec: 102455.29, flops:107.54, batch-reuse:1
@ 7162 train 3.9327 , allloss: 3.9331, dt: 1292.65ms, fracRes: 0.7124, norm(attn): 0.1406, norm(output): 0.9483, norm(x): 0.8174, norm(y): 0.9898, norm:0.6290, tok/sec: 101398.00, flops:106.43, batch-reuse:1
@ 7163 train 3.9558 , allloss: 3.9560, dt: 1333.45ms, fracRes: 0.7123, norm(attn): 0.1406, norm(output): 0.9477, norm(x): 0.8163, norm(y): 0.9899, norm:0.6178, tok/sec: 98295.57, flops:103.17, batch-reuse:1
@ 7164 train 3.9132 , allloss: 3.9133, dt: 1299.49ms, fracRes: 0.7126, norm(attn): 0.1406, norm(output): 0.9481, norm(x): 0.8166, norm(y): 0.9901, norm:0.5308, tok/sec: 100864.48, flops:105.87, batch-reuse:1
@ 7165 train 3.9251 , allloss: 3.9252, dt: 1296.85ms, fracRes: 0.7128, norm(attn): 0.1396, norm(output): 0.9486, norm(x): 0.8173, norm(y): 0.9900, norm:0.6674, tok/sec: 101069.83, flops:106.09, batch-reuse:1
@ 7166 train 3.8552 , allloss: 3.8552, dt: 1322.51ms, fracRes: 0.7125, norm(attn): 0.1396, norm(output): 0.9481, norm(x): 0.8177, norm(y): 0.9897, norm:0.5951, tok/sec: 99108.80, flops:104.03, batch-reuse:1
@ 7167 train 3.9533 , allloss: 3.9534, dt: 1319.47ms, fracRes: 0.7123, norm(attn): 0.1396, norm(output): 0.9482, norm(x): 0.8177, norm(y): 0.9896, norm:0.6294, tok/sec: 99336.72, flops:104.27, batch-reuse:1
@ 7168 train 3.9767 , allloss: 3.9768, dt: 1292.53ms, fracRes: 0.7124, norm(attn): 0.1396, norm(output): 0.9480, norm(x): 0.8171, norm(y): 0.9896, norm:0.5935, tok/sec: 101407.09, flops:106.44, batch-reuse:1
@ 7169 train 3.9014 , allloss: 3.9016, dt: 1313.63ms, fracRes: 0.7128, norm(attn): 0.1396, norm(output): 0.9482, norm(x): 0.8168, norm(y): 0.9896, norm:0.7768, tok/sec: 99778.76, flops:104.73, batch-reuse:1
@ 7170 train 3.8196 , allloss: 3.8198, dt: 1293.18ms, fracRes: 0.7128, norm(attn): 0.1406, norm(output): 0.9479, norm(x): 0.8164, norm(y): 0.9897, norm:0.6696, tok/sec: 101356.01, flops:106.39, batch-reuse:1
@ 7171 train 3.8161 , allloss: 3.8163, dt: 1317.13ms, fracRes: 0.7128, norm(attn): 0.1406, norm(output): 0.9480, norm(x): 0.8170, norm(y): 0.9895, norm:0.5863, tok/sec: 99512.99, flops:104.45, batch-reuse:1
@ 7172 train 3.8426 , allloss: 3.8427, dt: 1306.23ms, fracRes: 0.7128, norm(attn): 0.1416, norm(output): 0.9479, norm(x): 0.8164, norm(y): 0.9895, norm:0.5835, tok/sec: 100344.06, flops:105.32, batch-reuse:1
@ 7173 train 3.9320 , allloss: 3.9321, dt: 1295.76ms, fracRes: 0.7126, norm(attn): 0.1396, norm(output): 0.9484, norm(x): 0.8173, norm(y): 0.9898, norm:0.5900, tok/sec: 101154.78, flops:106.18, batch-reuse:1
@ 7174 train 3.9097 , allloss: 3.9098, dt: 1332.95ms, fracRes: 0.7127, norm(attn): 0.1406, norm(output): 0.9482, norm(x): 0.8171, norm(y): 0.9899, norm:0.5592, tok/sec: 98332.37, flops:103.21, batch-reuse:1
@ 7175 train 3.8619 , allloss: 3.8619, dt: 1308.76ms, fracRes: 0.7127, norm(attn): 0.1406, norm(output): 0.9480, norm(x): 0.8173, norm(y): 0.9899, norm:0.5656, tok/sec: 100149.95, flops:105.12, batch-reuse:1
@ 7176 train 3.8288 , allloss: 3.8289, dt: 1291.24ms, fracRes: 0.7127, norm(attn): 0.1406, norm(output): 0.9480, norm(x): 0.8171, norm(y): 0.9898, norm:0.4824, tok/sec: 101508.76, flops:106.55, batch-reuse:1
@ 7177 train 3.9078 , allloss: 3.9082, dt: 1308.94ms, fracRes: 0.7127, norm(attn): 0.1396, norm(output): 0.9482, norm(x): 0.8178, norm(y): 0.9898, norm:0.5193, tok/sec: 100136.28, flops:105.11, batch-reuse:1
@ 7178 train 3.8380 , allloss: 3.8381, dt: 1287.11ms, fracRes: 0.7124, norm(attn): 0.1406, norm(output): 0.9481, norm(x): 0.8178, norm(y): 0.9899, norm:0.5551, tok/sec: 101833.96, flops:106.89, batch-reuse:1
@ 7179 train 3.9808 , allloss: 3.9809, dt: 1295.45ms, fracRes: 0.7122, norm(attn): 0.1406, norm(output): 0.9480, norm(x): 0.8176, norm(y): 0.9899, norm:0.5601, tok/sec: 101179.04, flops:106.20, batch-reuse:1
@ 7180 train 3.9417 , allloss: 3.9417, dt: 1315.55ms, fracRes: 0.7125, norm(attn): 0.1406, norm(output): 0.9485, norm(x): 0.8179, norm(y): 0.9899, norm:0.4990, tok/sec: 99632.54, flops:104.58, batch-reuse:1
@ 7181 train 3.8839 , allloss: 3.8839, dt: 1315.01ms, fracRes: 0.7127, norm(attn): 0.1396, norm(output): 0.9482, norm(x): 0.8177, norm(y): 0.9898, norm:0.5301, tok/sec: 99674.12, flops:104.62, batch-reuse:1
@ 7182 train 3.9514 , allloss: 3.9515, dt: 1313.82ms, fracRes: 0.7126, norm(attn): 0.1396, norm(output): 0.9482, norm(x): 0.8176, norm(y): 0.9899, norm:0.5347, tok/sec: 99763.84, flops:104.72, batch-reuse:1
@ 7183 train 3.8786 , allloss: 3.8788, dt: 1317.19ms, fracRes: 0.7124, norm(attn): 0.1406, norm(output): 0.9479, norm(x): 0.8171, norm(y): 0.9901, norm:0.5595, tok/sec: 99508.77, flops:104.45, batch-reuse:1
@ 7184 train 3.9876 , allloss: 3.9880, dt: 1303.81ms, fracRes: 0.7124, norm(attn): 0.1396, norm(output): 0.9486, norm(x): 0.8183, norm(y): 0.9899, norm:0.6033, tok/sec: 100530.01, flops:105.52, batch-reuse:1
@ 7185 train 3.9055 , allloss: 3.9056, dt: 1334.05ms, fracRes: 0.7124, norm(attn): 0.1396, norm(output): 0.9483, norm(x): 0.8180, norm(y): 0.9898, norm:0.6099, tok/sec: 98251.07, flops:103.13, batch-reuse:1
@ 7186 train 3.8595 , allloss: 3.8595, dt: 1328.93ms, fracRes: 0.7126, norm(attn): 0.1396, norm(output): 0.9482, norm(x): 0.8177, norm(y): 0.9897, norm:0.6144, tok/sec: 98629.79, flops:103.52, batch-reuse:1
@ 7187 train 4.0218 , allloss: 4.0236, dt: 1332.43ms, fracRes: 0.7125, norm(attn): 0.1396, norm(output): 0.9486, norm(x): 0.8183, norm(y): 0.9895, norm:0.6384, tok/sec: 98370.32, flops:103.25, batch-reuse:1
@ 7188 train 3.9487 , allloss: 3.9488, dt: 1330.31ms, fracRes: 0.7126, norm(attn): 0.1396, norm(output): 0.9488, norm(x): 0.8179, norm(y): 0.9896, norm:0.5621, tok/sec: 98527.47, flops:103.42, batch-reuse:1
@ 7189 train 3.8731 , allloss: 3.8731, dt: 1313.52ms, fracRes: 0.7125, norm(attn): 0.1406, norm(output): 0.9483, norm(x): 0.8176, norm(y): 0.9897, norm:0.7064, tok/sec: 99787.04, flops:104.74, batch-reuse:1
@ 7190 train 3.9483 , allloss: 3.9483, dt: 1296.62ms, fracRes: 0.7124, norm(attn): 0.1396, norm(output): 0.9482, norm(x): 0.8178, norm(y): 0.9896, norm:0.6401, tok/sec: 101087.25, flops:106.10, batch-reuse:1
@ 7191 train 3.8310 , allloss: 3.8313, dt: 1296.86ms, fracRes: 0.7122, norm(attn): 0.1406, norm(output): 0.9478, norm(x): 0.8174, norm(y): 0.9895, norm:0.5709, tok/sec: 101068.55, flops:106.08, batch-reuse:1
@ 7192 train 3.9602 , allloss: 3.9604, dt: 1287.33ms, fracRes: 0.7122, norm(attn): 0.1396, norm(output): 0.9482, norm(x): 0.8177, norm(y): 0.9893, norm:0.6857, tok/sec: 101817.00, flops:106.87, batch-reuse:1
@ 7193 train 3.9090 , allloss: 3.9091, dt: 1278.86ms, fracRes: 0.7126, norm(attn): 0.1396, norm(output): 0.9488, norm(x): 0.8183, norm(y): 0.9893, norm:0.5229, tok/sec: 102491.10, flops:107.58, batch-reuse:1
@ 7194 train 3.8731 , allloss: 3.8732, dt: 1301.12ms, fracRes: 0.7127, norm(attn): 0.1387, norm(output): 0.9482, norm(x): 0.8179, norm(y): 0.9896, norm:0.6429, tok/sec: 100737.97, flops:105.74, batch-reuse:1
@ 7195 train 3.8474 , allloss: 3.8474, dt: 1342.97ms, fracRes: 0.7124, norm(attn): 0.1396, norm(output): 0.9482, norm(x): 0.8181, norm(y): 0.9895, norm:0.5533, tok/sec: 97598.30, flops:102.44, batch-reuse:1
@ 7196 train 3.8421 , allloss: 3.8421, dt: 1327.03ms, fracRes: 0.7124, norm(attn): 0.1396, norm(output): 0.9480, norm(x): 0.8180, norm(y): 0.9895, norm:0.5677, tok/sec: 98770.57, flops:103.67, batch-reuse:1
@ 7197 train 3.7980 , allloss: 3.7980, dt: 1315.10ms, fracRes: 0.7126, norm(attn): 0.1416, norm(output): 0.9478, norm(x): 0.8171, norm(y): 0.9894, norm:0.5601, tok/sec: 99666.91, flops:104.61, batch-reuse:1
@ 7198 train 3.8184 , allloss: 3.8185, dt: 1326.93ms, fracRes: 0.7127, norm(attn): 0.1396, norm(output): 0.9483, norm(x): 0.8182, norm(y): 0.9893, norm:0.6255, tok/sec: 98778.38, flops:103.68, batch-reuse:1
@ 7199 train 3.9561 , allloss: 3.9562, dt: 1289.40ms, fracRes: 0.7126, norm(attn): 0.1387, norm(output): 0.9487, norm(x): 0.8188, norm(y): 0.9894, norm:0.5584, tok/sec: 101653.23, flops:106.70, batch-reuse:1
@ 7200 train 3.8684 , allloss: 3.8684, dt: 1313.81ms, fracRes: 0.7125, norm(attn): 0.1396, norm(output): 0.9487, norm(x): 0.8189, norm(y): 0.9893, norm:0.5544, tok/sec: 99764.94, flops:104.72, batch-reuse:1
@ 7201 train 3.9818 , allloss: 3.9821, dt: 1312.86ms, fracRes: 0.7125, norm(attn): 0.1396, norm(output): 0.9484, norm(x): 0.8183, norm(y): 0.9897, norm:0.6357, tok/sec: 99836.92, flops:104.79, batch-reuse:1
@ 7202 train 3.8857 , allloss: 3.8857, dt: 1331.14ms, fracRes: 0.7127, norm(attn): 0.1396, norm(output): 0.9479, norm(x): 0.8175, norm(y): 0.9898, norm:0.5432, tok/sec: 98466.33, flops:103.35, batch-reuse:1
@ 7203 train 3.8182 , allloss: 3.8183, dt: 1283.48ms, fracRes: 0.7125, norm(attn): 0.1396, norm(output): 0.9482, norm(x): 0.8187, norm(y): 0.9895, norm:0.5349, tok/sec: 102122.02, flops:107.19, batch-reuse:1
@ 7204 train 3.8772 , allloss: 3.8773, dt: 1304.03ms, fracRes: 0.7123, norm(attn): 0.1396, norm(output): 0.9483, norm(x): 0.8189, norm(y): 0.9895, norm:0.5917, tok/sec: 100512.70, flops:105.50, batch-reuse:1
@ 7205 train 3.7343 , allloss: 3.7400, dt: 1313.97ms, fracRes: 0.7123, norm(attn): 0.1396, norm(output): 0.9479, norm(x): 0.8180, norm(y): 0.9894, norm:0.5586, tok/sec: 99752.90, flops:104.70, batch-reuse:1
@ 7206 train 3.8592 , allloss: 3.8592, dt: 1337.04ms, fracRes: 0.7125, norm(attn): 0.1396, norm(output): 0.9481, norm(x): 0.8180, norm(y): 0.9895, norm:0.5579, tok/sec: 98031.39, flops:102.90, batch-reuse:1
@ 7207 train 3.8896 , allloss: 3.8896, dt: 1336.35ms, fracRes: 0.7123, norm(attn): 0.1396, norm(output): 0.9482, norm(x): 0.8184, norm(y): 0.9896, norm:0.6401, tok/sec: 98081.93, flops:102.95, batch-reuse:1
@ 7208 train 3.8629 , allloss: 3.8629, dt: 1304.34ms, fracRes: 0.7125, norm(attn): 0.1396, norm(output): 0.9481, norm(x): 0.8177, norm(y): 0.9896, norm:0.5887, tok/sec: 100489.03, flops:105.48, batch-reuse:1
@ 7209 train 3.8895 , allloss: 3.8896, dt: 1313.13ms, fracRes: 0.7127, norm(attn): 0.1396, norm(output): 0.9482, norm(x): 0.8180, norm(y): 0.9896, norm:0.6118, tok/sec: 99816.55, flops:104.77, batch-reuse:1
@ 7210 train 3.7784 , allloss: 3.7785, dt: 1305.75ms, fracRes: 0.7127, norm(attn): 0.1387, norm(output): 0.9483, norm(x): 0.8188, norm(y): 0.9895, norm:0.5517, tok/sec: 100380.74, flops:105.36, batch-reuse:1
@ 7211 train 3.9115 , allloss: 3.9116, dt: 1318.15ms, fracRes: 0.7128, norm(attn): 0.1387, norm(output): 0.9484, norm(x): 0.8187, norm(y): 0.9894, norm:0.6182, tok/sec: 99436.33, flops:104.37, batch-reuse:1
@ 7212 train 3.8306 , allloss: 3.8309, dt: 1332.51ms, fracRes: 0.7125, norm(attn): 0.1396, norm(output): 0.9483, norm(x): 0.8183, norm(y): 0.9894, norm:0.6003, tok/sec: 98364.95, flops:103.25, batch-reuse:1
@ 7213 train 3.8618 , allloss: 3.8618, dt: 1289.30ms, fracRes: 0.7124, norm(attn): 0.1396, norm(output): 0.9483, norm(x): 0.8179, norm(y): 0.9893, norm:0.5916, tok/sec: 101661.44, flops:106.71, batch-reuse:1
@ 7214 train 3.8076 , allloss: 3.8077, dt: 1307.33ms, fracRes: 0.7124, norm(attn): 0.1406, norm(output): 0.9481, norm(x): 0.8173, norm(y): 0.9895, norm:0.5986, tok/sec: 100259.39, flops:105.24, batch-reuse:1
@ 7215 train 3.8612 , allloss: 3.8612, dt: 1308.95ms, fracRes: 0.7126, norm(attn): 0.1416, norm(output): 0.9480, norm(x): 0.8169, norm(y): 0.9895, norm:0.6194, tok/sec: 100134.84, flops:105.10, batch-reuse:1
@ 7216 train 3.8366 , allloss: 3.8367, dt: 1331.43ms, fracRes: 0.7126, norm(attn): 0.1396, norm(output): 0.9478, norm(x): 0.8178, norm(y): 0.9894, norm:0.6440, tok/sec: 98444.39, flops:103.33, batch-reuse:1
@ 7217 train 3.7588 , allloss: 3.7589, dt: 1340.44ms, fracRes: 0.7126, norm(attn): 0.1416, norm(output): 0.9478, norm(x): 0.8176, norm(y): 0.9895, norm:0.6398, tok/sec: 97782.61, flops:102.64, batch-reuse:1
@ 7218 train 3.7619 , allloss: 3.7650, dt: 1303.10ms, fracRes: 0.7125, norm(attn): 0.1396, norm(output): 0.9480, norm(x): 0.8184, norm(y): 0.9894, norm:0.6353, tok/sec: 100585.10, flops:105.58, batch-reuse:1
@ 7219 train 3.7701 , allloss: 3.7701, dt: 1295.24ms, fracRes: 0.7126, norm(attn): 0.1406, norm(output): 0.9480, norm(x): 0.8176, norm(y): 0.9893, norm:0.6084, tok/sec: 101194.80, flops:106.22, batch-reuse:1
@ 7220 train 3.8268 , allloss: 3.8268, dt: 1326.26ms, fracRes: 0.7125, norm(attn): 0.1406, norm(output): 0.9483, norm(x): 0.8186, norm(y): 0.9892, norm:0.6179, tok/sec: 98828.12, flops:103.73, batch-reuse:1
@ 7221 train 3.8289 , allloss: 3.8290, dt: 1299.65ms, fracRes: 0.7128, norm(attn): 0.1396, norm(output): 0.9479, norm(x): 0.8178, norm(y): 0.9894, norm:0.6003, tok/sec: 100851.85, flops:105.86, batch-reuse:1
@ 7222 train 3.8516 , allloss: 3.8516, dt: 1320.86ms, fracRes: 0.7127, norm(attn): 0.1396, norm(output): 0.9482, norm(x): 0.8179, norm(y): 0.9896, norm:0.7099, tok/sec: 99231.95, flops:104.16, batch-reuse:1
@ 7223 train 3.9133 , allloss: 3.9136, dt: 1336.68ms, fracRes: 0.7126, norm(attn): 0.1406, norm(output): 0.9485, norm(x): 0.8180, norm(y): 0.9897, norm:0.7044, tok/sec: 98058.21, flops:102.93, batch-reuse:1
@ 7224 train 3.9011 , allloss: 3.9011, dt: 1297.73ms, fracRes: 0.7126, norm(attn): 0.1396, norm(output): 0.9485, norm(x): 0.8183, norm(y): 0.9896, norm:0.6867, tok/sec: 101000.94, flops:106.01, batch-reuse:1
@ 7225 train 3.8326 , allloss: 3.8326, dt: 1303.17ms, fracRes: 0.7127, norm(attn): 0.1396, norm(output): 0.9479, norm(x): 0.8175, norm(y): 0.9899, norm:0.5702, tok/sec: 100579.54, flops:105.57, batch-reuse:1
@ 7226 train 3.8354 , allloss: 3.8354, dt: 1296.52ms, fracRes: 0.7124, norm(attn): 0.1387, norm(output): 0.9481, norm(x): 0.8188, norm(y): 0.9895, norm:0.6568, tok/sec: 101095.46, flops:106.11, batch-reuse:1
@ 7227 train 3.8163 , allloss: 3.8164, dt: 1292.53ms, fracRes: 0.7124, norm(attn): 0.1396, norm(output): 0.9482, norm(x): 0.8187, norm(y): 0.9896, norm:0.6731, tok/sec: 101407.44, flops:106.44, batch-reuse:1
@ 7228 train 3.8899 , allloss: 3.8901, dt: 1281.24ms, fracRes: 0.7126, norm(attn): 0.1396, norm(output): 0.9485, norm(x): 0.8186, norm(y): 0.9895, norm:0.6190, tok/sec: 102300.67, flops:107.38, batch-reuse:1
@ 7229 train 3.7562 , allloss: 3.7565, dt: 1291.95ms, fracRes: 0.7126, norm(attn): 0.1396, norm(output): 0.9485, norm(x): 0.8188, norm(y): 0.9894, norm:0.5443, tok/sec: 101453.03, flops:106.49, batch-reuse:1
@ 7230 train 3.7087 , allloss: 3.7087, dt: 1284.20ms, fracRes: 0.7125, norm(attn): 0.1396, norm(output): 0.9478, norm(x): 0.8183, norm(y): 0.9893, norm:0.6591, tok/sec: 102064.84, flops:107.13, batch-reuse:1
@ 7231 train 3.8850 , allloss: 3.8851, dt: 1332.66ms, fracRes: 0.7127, norm(attn): 0.1406, norm(output): 0.9477, norm(x): 0.8172, norm(y): 0.9894, norm:0.5707, tok/sec: 98353.99, flops:103.24, batch-reuse:1
@ 7232 train 3.7563 , allloss: 3.7564, dt: 1308.12ms, fracRes: 0.7128, norm(attn): 0.1406, norm(output): 0.9480, norm(x): 0.8179, norm(y): 0.9893, norm:0.5994, tok/sec: 100198.99, flops:105.17, batch-reuse:1
@ 7233 train 3.7721 , allloss: 3.7721, dt: 1297.60ms, fracRes: 0.7129, norm(attn): 0.1396, norm(output): 0.9483, norm(x): 0.8182, norm(y): 0.9894, norm:0.5146, tok/sec: 101010.98, flops:106.02, batch-reuse:1
@ 7234 train 3.8678 , allloss: 3.8679, dt: 1296.08ms, fracRes: 0.7129, norm(attn): 0.1396, norm(output): 0.9482, norm(x): 0.8178, norm(y): 0.9895, norm:0.5894, tok/sec: 101129.25, flops:106.15, batch-reuse:1
@ 7235 train 3.9676 , allloss: 3.9681, dt: 1333.64ms, fracRes: 0.7134, norm(attn): 0.1387, norm(output): 0.9482, norm(x): 0.8169, norm(y): 0.9896, norm:0.5703, tok/sec: 98281.72, flops:103.16, batch-reuse:1
@ 7236 train 3.7641 , allloss: 3.7642, dt: 1290.76ms, fracRes: 0.7126, norm(attn): 0.1396, norm(output): 0.9486, norm(x): 0.8193, norm(y): 0.9889, norm:0.7358, tok/sec: 101546.52, flops:106.59, batch-reuse:1
@ 7237 train 3.8071 , allloss: 3.8071, dt: 1315.53ms, fracRes: 0.7128, norm(attn): 0.1406, norm(output): 0.9484, norm(x): 0.8182, norm(y): 0.9892, norm:0.7200, tok/sec: 99634.25, flops:104.58, batch-reuse:1
@ 7238 train 3.8876 , allloss: 3.8876, dt: 1296.70ms, fracRes: 0.7130, norm(attn): 0.1396, norm(output): 0.9484, norm(x): 0.8182, norm(y): 0.9893, norm:0.5941, tok/sec: 101080.87, flops:106.10, batch-reuse:1
@ 7239 train 3.8882 , allloss: 3.8883, dt: 1286.02ms, fracRes: 0.7129, norm(attn): 0.1387, norm(output): 0.9486, norm(x): 0.8191, norm(y): 0.9893, norm:0.5976, tok/sec: 101920.84, flops:106.98, batch-reuse:1
@ 7240 train 3.8365 , allloss: 3.8366, dt: 1286.27ms, fracRes: 0.7127, norm(attn): 0.1396, norm(output): 0.9481, norm(x): 0.8184, norm(y): 0.9894, norm:0.6206, tok/sec: 101901.10, flops:106.96, batch-reuse:1
@ 7241 train 3.8144 , allloss: 3.8144, dt: 1290.33ms, fracRes: 0.7122, norm(attn): 0.1396, norm(output): 0.9483, norm(x): 0.8195, norm(y): 0.9892, norm:0.6893, tok/sec: 101580.13, flops:106.62, batch-reuse:1
@ 7242 train 3.8150 , allloss: 3.8151, dt: 1308.86ms, fracRes: 0.7122, norm(attn): 0.1406, norm(output): 0.9482, norm(x): 0.8192, norm(y): 0.9891, norm:0.6410, tok/sec: 100142.47, flops:105.11, batch-reuse:1
@ 7243 train 3.8104 , allloss: 3.8105, dt: 1274.34ms, fracRes: 0.7122, norm(attn): 0.1396, norm(output): 0.9481, norm(x): 0.8189, norm(y): 0.9891, norm:0.5599, tok/sec: 102854.99, flops:107.96, batch-reuse:1
@ 7244 train 3.8564 , allloss: 3.8567, dt: 1292.45ms, fracRes: 0.7123, norm(attn): 0.1396, norm(output): 0.9480, norm(x): 0.8183, norm(y): 0.9892, norm:0.6064, tok/sec: 101413.90, flops:106.45, batch-reuse:1
@ 7245 train 3.8093 , allloss: 3.8100, dt: 1288.69ms, fracRes: 0.7122, norm(attn): 0.1396, norm(output): 0.9485, norm(x): 0.8195, norm(y): 0.9890, norm:0.6406, tok/sec: 101709.50, flops:106.76, batch-reuse:1
@ 7246 train 3.9418 , allloss: 3.9419, dt: 1290.17ms, fracRes: 0.7126, norm(attn): 0.1396, norm(output): 0.9486, norm(x): 0.8188, norm(y): 0.9891, norm:0.5957, tok/sec: 101592.97, flops:106.64, batch-reuse:1
@ 7247 train 3.8349 , allloss: 3.8349, dt: 1278.74ms, fracRes: 0.7127, norm(attn): 0.1396, norm(output): 0.9480, norm(x): 0.8177, norm(y): 0.9891, norm:0.6278, tok/sec: 102501.15, flops:107.59, batch-reuse:1
@ 7248 train 3.8195 , allloss: 3.8197, dt: 1297.85ms, fracRes: 0.7126, norm(attn): 0.1406, norm(output): 0.9481, norm(x): 0.8178, norm(y): 0.9892, norm:0.6825, tok/sec: 100992.00, flops:106.00, batch-reuse:1
@ 7249 train 3.6865 , allloss: 3.6869, dt: 1286.45ms, fracRes: 0.7126, norm(attn): 0.1416, norm(output): 0.9477, norm(x): 0.8170, norm(y): 0.9895, norm:0.6373, tok/sec: 101886.82, flops:106.94, batch-reuse:1
@ 7250 train 3.7645 , allloss: 3.7645, dt: 1292.42ms, fracRes: 0.7127, norm(attn): 0.1416, norm(output): 0.9475, norm(x): 0.8167, norm(y): 0.9897, norm:0.6618, tok/sec: 101415.56, flops:106.45, batch-reuse:1
@ 7251 train 3.8114 , allloss: 3.8115, dt: 1329.66ms, fracRes: 0.7127, norm(attn): 0.1406, norm(output): 0.9485, norm(x): 0.8189, norm(y): 0.9892, norm:0.6112, tok/sec: 98575.47, flops:103.47, batch-reuse:1
@ 7252 train 3.7840 , allloss: 3.7840, dt: 1326.39ms, fracRes: 0.7125, norm(attn): 0.1396, norm(output): 0.9488, norm(x): 0.8198, norm(y): 0.9888, norm:0.6153, tok/sec: 98818.51, flops:103.72, batch-reuse:1
@ 7253 train 3.7414 , allloss: 3.7415, dt: 1328.29ms, fracRes: 0.7125, norm(attn): 0.1406, norm(output): 0.9477, norm(x): 0.8173, norm(y): 0.9888, norm:0.7045, tok/sec: 98677.32, flops:103.57, batch-reuse:1
@ 7254 train 3.9226 , allloss: 3.9233, dt: 1325.84ms, fracRes: 0.7127, norm(attn): 0.1396, norm(output): 0.9483, norm(x): 0.8181, norm(y): 0.9890, norm:0.5751, tok/sec: 98859.68, flops:103.77, batch-reuse:1
@ 7255 train 3.9829 , allloss: 3.9831, dt: 1334.22ms, fracRes: 0.7128, norm(attn): 0.1387, norm(output): 0.9484, norm(x): 0.8183, norm(y): 0.9893, norm:0.6689, tok/sec: 98238.99, flops:103.11, batch-reuse:1
@ 7256 train 4.0949 , allloss: 4.0950, dt: 1321.72ms, fracRes: 0.7128, norm(attn): 0.1387, norm(output): 0.9490, norm(x): 0.8186, norm(y): 0.9894, norm:0.7096, tok/sec: 99167.78, flops:104.09, batch-reuse:1
@ 7257 train 3.9224 , allloss: 3.9226, dt: 1324.40ms, fracRes: 0.7126, norm(attn): 0.1396, norm(output): 0.9486, norm(x): 0.8189, norm(y): 0.9893, norm:0.6319, tok/sec: 98967.37, flops:103.88, batch-reuse:1
@ 7258 train 3.9872 , allloss: 3.9873, dt: 1303.49ms, fracRes: 0.7126, norm(attn): 0.1396, norm(output): 0.9488, norm(x): 0.8190, norm(y): 0.9892, norm:0.6402, tok/sec: 100554.54, flops:105.55, batch-reuse:1
@ 7259 train 3.8742 , allloss: 3.8743, dt: 1322.23ms, fracRes: 0.7128, norm(attn): 0.1406, norm(output): 0.9484, norm(x): 0.8180, norm(y): 0.9892, norm:0.5708, tok/sec: 99129.56, flops:104.05, batch-reuse:1
@ 7260 train 3.9560 , allloss: 3.9561, dt: 1283.36ms, fracRes: 0.7130, norm(attn): 0.1406, norm(output): 0.9483, norm(x): 0.8174, norm(y): 0.9892, norm:0.5792, tok/sec: 102132.17, flops:107.20, batch-reuse:1
@ 7261 train 3.9118 , allloss: 3.9121, dt: 1292.89ms, fracRes: 0.7129, norm(attn): 0.1396, norm(output): 0.9483, norm(x): 0.8178, norm(y): 0.9893, norm:0.5657, tok/sec: 101379.06, flops:106.41, batch-reuse:1
@ 7262 train 4.1583 , allloss: 4.1583, dt: 1307.21ms, fracRes: 0.7131, norm(attn): 0.1387, norm(output): 0.9488, norm(x): 0.8181, norm(y): 0.9893, norm:0.6521, tok/sec: 100268.26, flops:105.24, batch-reuse:1
@ 7263 train 3.9217 , allloss: 3.9218, dt: 1286.98ms, fracRes: 0.7132, norm(attn): 0.1396, norm(output): 0.9488, norm(x): 0.8188, norm(y): 0.9891, norm:0.6760, tok/sec: 101844.41, flops:106.90, batch-reuse:1
@ 7264 train 4.1663 , allloss: 4.1669, dt: 1277.16ms, fracRes: 0.7131, norm(attn): 0.1387, norm(output): 0.9483, norm(x): 0.8176, norm(y): 0.9892, norm:0.6073, tok/sec: 102627.62, flops:107.72, batch-reuse:1
@ 7265 train 3.9887 , allloss: 3.9887, dt: 1274.25ms, fracRes: 0.7128, norm(attn): 0.1396, norm(output): 0.9483, norm(x): 0.8184, norm(y): 0.9893, norm:0.5993, tok/sec: 102861.92, flops:107.97, batch-reuse:1
@ 7266 train 3.8969 , allloss: 3.8969, dt: 1282.12ms, fracRes: 0.7128, norm(attn): 0.1396, norm(output): 0.9483, norm(x): 0.8186, norm(y): 0.9893, norm:0.5787, tok/sec: 102230.68, flops:107.30, batch-reuse:1
@ 7267 train 3.9089 , allloss: 3.9090, dt: 1288.09ms, fracRes: 0.7129, norm(attn): 0.1396, norm(output): 0.9483, norm(x): 0.8182, norm(y): 0.9894, norm:0.7205, tok/sec: 101756.94, flops:106.81, batch-reuse:1
@ 7268 train 3.8847 , allloss: 3.8847, dt: 1294.67ms, fracRes: 0.7128, norm(attn): 0.1396, norm(output): 0.9488, norm(x): 0.8192, norm(y): 0.9893, norm:0.5995, tok/sec: 101239.58, flops:106.26, batch-reuse:1
@ 7269 train 3.9016 , allloss: 3.9016, dt: 1315.19ms, fracRes: 0.7131, norm(attn): 0.1396, norm(output): 0.9484, norm(x): 0.8179, norm(y): 0.9893, norm:0.5646, tok/sec: 99659.87, flops:104.61, batch-reuse:1
@ 7270 train 4.0682 , allloss: 4.0683, dt: 1329.45ms, fracRes: 0.7132, norm(attn): 0.1387, norm(output): 0.9486, norm(x): 0.8180, norm(y): 0.9893, norm:0.6645, tok/sec: 98591.14, flops:103.48, batch-reuse:1
@ 7271 train 4.0135 , allloss: 4.0135, dt: 1335.95ms, fracRes: 0.7128, norm(attn): 0.1406, norm(output): 0.9485, norm(x): 0.8184, norm(y): 0.9892, norm:0.6706, tok/sec: 98111.45, flops:102.98, batch-reuse:1
@ 7272 train 3.9456 , allloss: 3.9457, dt: 1296.25ms, fracRes: 0.7130, norm(attn): 0.1406, norm(output): 0.9479, norm(x): 0.8173, norm(y): 0.9893, norm:0.6266, tok/sec: 101116.53, flops:106.14, batch-reuse:1
@ 7273 train 4.1126 , allloss: 4.1127, dt: 1287.39ms, fracRes: 0.7131, norm(attn): 0.1396, norm(output): 0.9487, norm(x): 0.8180, norm(y): 0.9892, norm:0.7125, tok/sec: 101812.10, flops:106.87, batch-reuse:1
@ 7274 train 3.9019 , allloss: 3.9020, dt: 1297.93ms, fracRes: 0.7131, norm(attn): 0.1396, norm(output): 0.9485, norm(x): 0.8184, norm(y): 0.9892, norm:0.6748, tok/sec: 100985.36, flops:106.00, batch-reuse:1
@ 7275 train 4.1050 , allloss: 4.1050, dt: 1293.72ms, fracRes: 0.7130, norm(attn): 0.1387, norm(output): 0.9488, norm(x): 0.8187, norm(y): 0.9892, norm:0.5868, tok/sec: 101313.82, flops:106.34, batch-reuse:1
@ 7276 train 4.0152 , allloss: 4.0152, dt: 1278.88ms, fracRes: 0.7130, norm(attn): 0.1396, norm(output): 0.9481, norm(x): 0.8176, norm(y): 0.9893, norm:0.6427, tok/sec: 102489.32, flops:107.58, batch-reuse:1
@ 7277 train 3.9649 , allloss: 3.9650, dt: 1300.51ms, fracRes: 0.7127, norm(attn): 0.1387, norm(output): 0.9487, norm(x): 0.8189, norm(y): 0.9893, norm:0.6780, tok/sec: 100785.14, flops:105.79, batch-reuse:1
@ 7278 train 4.0018 , allloss: 4.0018, dt: 1304.42ms, fracRes: 0.7129, norm(attn): 0.1367, norm(output): 0.9490, norm(x): 0.8190, norm(y): 0.9891, norm:0.5836, tok/sec: 100482.99, flops:105.47, batch-reuse:1
@ 7279 train 3.9615 , allloss: 3.9616, dt: 1299.22ms, fracRes: 0.7131, norm(attn): 0.1387, norm(output): 0.9488, norm(x): 0.8185, norm(y): 0.9890, norm:0.5416, tok/sec: 100885.40, flops:105.89, batch-reuse:1
@ 7280 train 3.9692 , allloss: 3.9693, dt: 1277.25ms, fracRes: 0.7130, norm(attn): 0.1387, norm(output): 0.9490, norm(x): 0.8188, norm(y): 0.9891, norm:0.7308, tok/sec: 102620.16, flops:107.71, batch-reuse:1
@ 7281 train 4.0068 , allloss: 4.0069, dt: 1283.94ms, fracRes: 0.7130, norm(attn): 0.1396, norm(output): 0.9485, norm(x): 0.8185, norm(y): 0.9893, norm:0.6610, tok/sec: 102085.78, flops:107.15, batch-reuse:1
@ 7282 train 3.9817 , allloss: 3.9819, dt: 1303.84ms, fracRes: 0.7131, norm(attn): 0.1396, norm(output): 0.9486, norm(x): 0.8186, norm(y): 0.9892, norm:0.7086, tok/sec: 100527.79, flops:105.52, batch-reuse:1
@ 7283 train 4.1014 , allloss: 4.1014, dt: 1278.99ms, fracRes: 0.7131, norm(attn): 0.1387, norm(output): 0.9486, norm(x): 0.8184, norm(y): 0.9891, norm:0.7077, tok/sec: 102481.00, flops:107.57, batch-reuse:1
@ 7284 train 3.9446 , allloss: 3.9446, dt: 1312.58ms, fracRes: 0.7128, norm(attn): 0.1396, norm(output): 0.9488, norm(x): 0.8190, norm(y): 0.9888, norm:0.6245, tok/sec: 99857.98, flops:104.81, batch-reuse:1
@ 7285 train 3.9512 , allloss: 3.9514, dt: 1332.32ms, fracRes: 0.7128, norm(attn): 0.1396, norm(output): 0.9485, norm(x): 0.8189, norm(y): 0.9887, norm:0.6725, tok/sec: 98379.09, flops:103.26, batch-reuse:1
@ 7286 train 3.9303 , allloss: 3.9303, dt: 1317.36ms, fracRes: 0.7129, norm(attn): 0.1396, norm(output): 0.9484, norm(x): 0.8185, norm(y): 0.9890, norm:0.5390, tok/sec: 99495.79, flops:104.43, batch-reuse:1
@ 7287 train 3.9819 , allloss: 3.9820, dt: 1306.99ms, fracRes: 0.7130, norm(attn): 0.1396, norm(output): 0.9483, norm(x): 0.8181, norm(y): 0.9891, norm:0.5992, tok/sec: 100285.23, flops:105.26, batch-reuse:1
@ 7288 train 4.0549 , allloss: 4.0549, dt: 1302.89ms, fracRes: 0.7130, norm(attn): 0.1387, norm(output): 0.9488, norm(x): 0.8192, norm(y): 0.9890, norm:0.7071, tok/sec: 100601.19, flops:105.59, batch-reuse:1
@ 7289 train 3.9795 , allloss: 3.9796, dt: 1308.94ms, fracRes: 0.7129, norm(attn): 0.1396, norm(output): 0.9486, norm(x): 0.8196, norm(y): 0.9889, norm:0.6616, tok/sec: 100136.25, flops:105.11, batch-reuse:1
@ 7290 train 4.0233 , allloss: 4.0234, dt: 1309.78ms, fracRes: 0.7128, norm(attn): 0.1387, norm(output): 0.9489, norm(x): 0.8198, norm(y): 0.9889, norm:0.5390, tok/sec: 100071.41, flops:105.04, batch-reuse:1
@ 7291 train 3.9631 , allloss: 3.9631, dt: 1314.11ms, fracRes: 0.7126, norm(attn): 0.1387, norm(output): 0.9493, norm(x): 0.8203, norm(y): 0.9889, norm:0.6113, tok/sec: 99741.67, flops:104.69, batch-reuse:1
@ 7292 train 3.9056 , allloss: 3.9056, dt: 1292.81ms, fracRes: 0.7127, norm(attn): 0.1396, norm(output): 0.9489, norm(x): 0.8196, norm(y): 0.9891, norm:0.6408, tok/sec: 101385.60, flops:106.42, batch-reuse:1
@ 7293 train 3.9383 , allloss: 3.9383, dt: 1300.55ms, fracRes: 0.7128, norm(attn): 0.1387, norm(output): 0.9483, norm(x): 0.8191, norm(y): 0.9890, norm:0.6302, tok/sec: 100781.94, flops:105.78, batch-reuse:1
@ 7294 train 3.9756 , allloss: 3.9757, dt: 1289.49ms, fracRes: 0.7129, norm(attn): 0.1377, norm(output): 0.9486, norm(x): 0.8194, norm(y): 0.9890, norm:0.6995, tok/sec: 101646.41, flops:106.69, batch-reuse:1
@ 7295 train 3.9706 , allloss: 3.9706, dt: 1287.34ms, fracRes: 0.7126, norm(attn): 0.1387, norm(output): 0.9491, norm(x): 0.8207, norm(y): 0.9889, norm:0.6033, tok/sec: 101816.29, flops:106.87, batch-reuse:1
@ 7296 train 4.0226 , allloss: 4.0228, dt: 1301.43ms, fracRes: 0.7126, norm(attn): 0.1377, norm(output): 0.9487, norm(x): 0.8195, norm(y): 0.9888, norm:0.5395, tok/sec: 100713.81, flops:105.71, batch-reuse:1
@ 7297 train 3.8893 , allloss: 3.8893, dt: 1293.82ms, fracRes: 0.7127, norm(attn): 0.1396, norm(output): 0.9483, norm(x): 0.8190, norm(y): 0.9886, norm:0.5752, tok/sec: 101306.52, flops:106.33, batch-reuse:1
@ 7298 train 3.9098 , allloss: 3.9098, dt: 1285.81ms, fracRes: 0.7129, norm(attn): 0.1406, norm(output): 0.9483, norm(x): 0.8189, norm(y): 0.9887, norm:0.6245, tok/sec: 101936.94, flops:107.00, batch-reuse:1
@ 7299 train 3.9013 , allloss: 3.9013, dt: 1314.54ms, fracRes: 0.7129, norm(attn): 0.1396, norm(output): 0.9482, norm(x): 0.8187, norm(y): 0.9888, norm:0.6071, tok/sec: 99709.37, flops:104.66, batch-reuse:1
@ 7300 train 3.9311 , allloss: 3.9313, dt: 1280.62ms, fracRes: 0.7127, norm(attn): 0.1406, norm(output): 0.9482, norm(x): 0.8187, norm(y): 0.9889, norm:0.7037, tok/sec: 102350.82, flops:107.43, batch-reuse:1
@ 7301 train 4.0144 , allloss: 4.0145, dt: 1302.91ms, fracRes: 0.7131, norm(attn): 0.1406, norm(output): 0.9487, norm(x): 0.8190, norm(y): 0.9889, norm:0.6037, tok/sec: 100599.57, flops:105.59, batch-reuse:1
@ 7302 train 3.9364 , allloss: 3.9519, dt: 1294.14ms, fracRes: 0.7132, norm(attn): 0.1406, norm(output): 0.9490, norm(x): 0.8193, norm(y): 0.9891, norm:0.6769, tok/sec: 101281.10, flops:106.31, batch-reuse:1
@ 7303 train 4.0427 , allloss: 4.0427, dt: 1302.86ms, fracRes: 0.7131, norm(attn): 0.1387, norm(output): 0.9489, norm(x): 0.8197, norm(y): 0.9891, norm:0.5968, tok/sec: 100603.54, flops:105.60, batch-reuse:1
@ 7304 train 4.0111 , allloss: 4.0112, dt: 1314.46ms, fracRes: 0.7127, norm(attn): 0.1387, norm(output): 0.9485, norm(x): 0.8195, norm(y): 0.9890, norm:0.5329, tok/sec: 99715.31, flops:104.66, batch-reuse:1
@ 7305 train 3.9333 , allloss: 3.9333, dt: 1313.59ms, fracRes: 0.7127, norm(attn): 0.1387, norm(output): 0.9485, norm(x): 0.8193, norm(y): 0.9888, norm:0.6242, tok/sec: 99781.67, flops:104.73, batch-reuse:1
@ 7306 train 4.0042 , allloss: 4.0043, dt: 1298.65ms, fracRes: 0.7127, norm(attn): 0.1377, norm(output): 0.9487, norm(x): 0.8195, norm(y): 0.9888, norm:0.5301, tok/sec: 100929.48, flops:105.94, batch-reuse:1
@ 7307 train 4.0574 , allloss: 4.0575, dt: 1316.08ms, fracRes: 0.7129, norm(attn): 0.1377, norm(output): 0.9490, norm(x): 0.8197, norm(y): 0.9888, norm:0.6085, tok/sec: 99592.83, flops:104.54, batch-reuse:1
@ 7308 train 3.9853 , allloss: 3.9877, dt: 1306.21ms, fracRes: 0.7129, norm(attn): 0.1377, norm(output): 0.9493, norm(x): 0.8204, norm(y): 0.9889, norm:0.5821, tok/sec: 100345.23, flops:105.33, batch-reuse:1
@ 7309 train 3.9769 , allloss: 3.9770, dt: 1301.48ms, fracRes: 0.7126, norm(attn): 0.1396, norm(output): 0.9490, norm(x): 0.8203, norm(y): 0.9889, norm:0.5771, tok/sec: 100710.22, flops:105.71, batch-reuse:1
@ 7310 train 3.8896 , allloss: 3.8896, dt: 1302.90ms, fracRes: 0.7123, norm(attn): 0.1387, norm(output): 0.9489, norm(x): 0.8206, norm(y): 0.9889, norm:0.6379, tok/sec: 100600.47, flops:105.59, batch-reuse:1
@ 7311 train 3.9562 , allloss: 3.9562, dt: 1299.61ms, fracRes: 0.7127, norm(attn): 0.1387, norm(output): 0.9488, norm(x): 0.8206, norm(y): 0.9890, norm:0.5801, tok/sec: 100854.97, flops:105.86, batch-reuse:1
@ 7312 train 3.9414 , allloss: 3.9417, dt: 1303.38ms, fracRes: 0.7126, norm(attn): 0.1377, norm(output): 0.9492, norm(x): 0.8210, norm(y): 0.9889, norm:0.5770, tok/sec: 100562.93, flops:105.55, batch-reuse:1
@ 7313 train 3.8719 , allloss: 3.8725, dt: 1315.76ms, fracRes: 0.7126, norm(attn): 0.1396, norm(output): 0.9487, norm(x): 0.8200, norm(y): 0.9891, norm:0.5745, tok/sec: 99617.21, flops:104.56, batch-reuse:1
@ 7314 train 4.0153 , allloss: 4.0154, dt: 1344.89ms, fracRes: 0.7127, norm(attn): 0.1387, norm(output): 0.9485, norm(x): 0.8198, norm(y): 0.9889, norm:0.6311, tok/sec: 97459.63, flops:102.30, batch-reuse:1
@ 7315 train 4.0007 , allloss: 4.0028, dt: 1349.50ms, fracRes: 0.7126, norm(attn): 0.1387, norm(output): 0.9491, norm(x): 0.8212, norm(y): 0.9887, norm:0.5655, tok/sec: 97126.07, flops:101.95, batch-reuse:1
@ 7316 train 3.9568 , allloss: 3.9693, dt: 1322.09ms, fracRes: 0.7126, norm(attn): 0.1387, norm(output): 0.9489, norm(x): 0.8211, norm(y): 0.9885, norm:0.6613, tok/sec: 99139.97, flops:104.06, batch-reuse:1
@ 7317 train 4.0112 , allloss: 4.0114, dt: 1285.63ms, fracRes: 0.7126, norm(attn): 0.1387, norm(output): 0.9488, norm(x): 0.8207, norm(y): 0.9885, norm:0.6560, tok/sec: 101951.67, flops:107.01, batch-reuse:1
@ 7318 train 4.0283 , allloss: 4.0296, dt: 1290.09ms, fracRes: 0.7126, norm(attn): 0.1396, norm(output): 0.9490, norm(x): 0.8206, norm(y): 0.9886, norm:0.5679, tok/sec: 101599.14, flops:106.64, batch-reuse:1
@ 7319 train 4.0299 , allloss: 4.0303, dt: 1298.29ms, fracRes: 0.7128, norm(attn): 0.1377, norm(output): 0.9491, norm(x): 0.8205, norm(y): 0.9889, norm:0.6454, tok/sec: 100957.60, flops:105.97, batch-reuse:1
@ 7320 train 3.9335 , allloss: 3.9337, dt: 1281.74ms, fracRes: 0.7130, norm(attn): 0.1387, norm(output): 0.9484, norm(x): 0.8188, norm(y): 0.9893, norm:0.6165, tok/sec: 102260.76, flops:107.34, batch-reuse:1
@ 7321 train 3.9120 , allloss: 3.9123, dt: 1292.75ms, fracRes: 0.7128, norm(attn): 0.1377, norm(output): 0.9484, norm(x): 0.8190, norm(y): 0.9890, norm:0.6606, tok/sec: 101390.18, flops:106.42, batch-reuse:1
@ 7322 train 3.9658 , allloss: 3.9673, dt: 1301.50ms, fracRes: 0.7125, norm(attn): 0.1387, norm(output): 0.9485, norm(x): 0.8194, norm(y): 0.9888, norm:0.6381, tok/sec: 100708.57, flops:105.71, batch-reuse:1
@ 7323 train 3.9758 , allloss: 3.9790, dt: 1340.51ms, fracRes: 0.7127, norm(attn): 0.1387, norm(output): 0.9483, norm(x): 0.8187, norm(y): 0.9885, norm:0.6318, tok/sec: 97777.74, flops:102.63, batch-reuse:1
@ 7324 train 3.9229 , allloss: 3.9232, dt: 1327.56ms, fracRes: 0.7129, norm(attn): 0.1387, norm(output): 0.9489, norm(x): 0.8194, norm(y): 0.9884, norm:0.5440, tok/sec: 98731.28, flops:103.63, batch-reuse:1
@ 7325 train 3.9606 , allloss: 3.9607, dt: 1322.42ms, fracRes: 0.7131, norm(attn): 0.1396, norm(output): 0.9490, norm(x): 0.8191, norm(y): 0.9887, norm:0.5832, tok/sec: 99114.96, flops:104.03, batch-reuse:1
@ 7326 train 4.0231 , allloss: 4.0231, dt: 1318.94ms, fracRes: 0.7130, norm(attn): 0.1387, norm(output): 0.9488, norm(x): 0.8189, norm(y): 0.9892, norm:0.5240, tok/sec: 99377.03, flops:104.31, batch-reuse:1
@ 7327 train 3.9684 , allloss: 3.9690, dt: 1301.79ms, fracRes: 0.7128, norm(attn): 0.1387, norm(output): 0.9487, norm(x): 0.8192, norm(y): 0.9893, norm:0.5677, tok/sec: 100686.27, flops:105.68, batch-reuse:1
@ 7328 train 4.0287 , allloss: 4.0287, dt: 1268.54ms, fracRes: 0.7128, norm(attn): 0.1377, norm(output): 0.9489, norm(x): 0.8196, norm(y): 0.9891, norm:0.4961, tok/sec: 103324.86, flops:108.45, batch-reuse:1
@ 7329 train 3.8736 , allloss: 3.8736, dt: 1306.96ms, fracRes: 0.7127, norm(attn): 0.1396, norm(output): 0.9486, norm(x): 0.8195, norm(y): 0.9888, norm:0.5255, tok/sec: 100287.85, flops:105.27, batch-reuse:1
@ 7330 train 4.0051 , allloss: 4.0051, dt: 1302.74ms, fracRes: 0.7126, norm(attn): 0.1396, norm(output): 0.9491, norm(x): 0.8204, norm(y): 0.9886, norm:0.6580, tok/sec: 100612.90, flops:105.61, batch-reuse:1
@ 7331 train 3.9380 , allloss: 3.9381, dt: 1329.18ms, fracRes: 0.7125, norm(attn): 0.1406, norm(output): 0.9486, norm(x): 0.8196, norm(y): 0.9886, norm:0.5875, tok/sec: 98611.39, flops:103.51, batch-reuse:1
@ 7332 train 3.9800 , allloss: 3.9801, dt: 1297.73ms, fracRes: 0.7125, norm(attn): 0.1396, norm(output): 0.9492, norm(x): 0.8207, norm(y): 0.9885, norm:0.5734, tok/sec: 101000.61, flops:106.01, batch-reuse:1
@ 7333 train 3.9469 , allloss: 3.9471, dt: 1289.67ms, fracRes: 0.7128, norm(attn): 0.1377, norm(output): 0.9487, norm(x): 0.8198, norm(y): 0.9889, norm:0.7944, tok/sec: 101632.07, flops:106.68, batch-reuse:1
@ 7334 train 3.9362 , allloss: 3.9369, dt: 1295.87ms, fracRes: 0.7129, norm(attn): 0.1377, norm(output): 0.9487, norm(x): 0.8198, norm(y): 0.9890, norm:0.6616, tok/sec: 101145.79, flops:106.17, batch-reuse:1
@ 7335 train 4.0410 , allloss: 4.0411, dt: 1305.44ms, fracRes: 0.7127, norm(attn): 0.1387, norm(output): 0.9485, norm(x): 0.8198, norm(y): 0.9891, norm:0.6419, tok/sec: 100404.58, flops:105.39, batch-reuse:1
@ 7336 train 3.8975 , allloss: 3.8976, dt: 1297.80ms, fracRes: 0.7127, norm(attn): 0.1387, norm(output): 0.9487, norm(x): 0.8202, norm(y): 0.9889, norm:0.6633, tok/sec: 100995.28, flops:106.01, batch-reuse:1
@ 7337 train 3.9219 , allloss: 3.9220, dt: 1295.58ms, fracRes: 0.7129, norm(attn): 0.1396, norm(output): 0.9490, norm(x): 0.8203, norm(y): 0.9886, norm:0.6441, tok/sec: 101168.22, flops:106.19, batch-reuse:1
@ 7338 train 4.2561 , allloss: 4.2561, dt: 1301.61ms, fracRes: 0.7132, norm(attn): 0.1348, norm(output): 0.9499, norm(x): 0.8207, norm(y): 0.9887, norm:0.7314, tok/sec: 100700.11, flops:105.70, batch-reuse:1
@ 7339 train 3.9513 , allloss: 3.9513, dt: 1297.90ms, fracRes: 0.7129, norm(attn): 0.1387, norm(output): 0.9487, norm(x): 0.8195, norm(y): 0.9888, norm:0.6415, tok/sec: 100987.98, flops:106.00, batch-reuse:1
@ 7340 train 4.0550 , allloss: 4.0551, dt: 1324.93ms, fracRes: 0.7129, norm(attn): 0.1387, norm(output): 0.9490, norm(x): 0.8198, norm(y): 0.9888, norm:0.6895, tok/sec: 98927.60, flops:103.84, batch-reuse:1
@ 7341 train 4.0907 , allloss: 4.0908, dt: 1300.08ms, fracRes: 0.7131, norm(attn): 0.1387, norm(output): 0.9490, norm(x): 0.8200, norm(y): 0.9888, norm:0.6560, tok/sec: 100818.30, flops:105.82, batch-reuse:1
@ 7342 train 4.0451 , allloss: 4.0452, dt: 1317.15ms, fracRes: 0.7131, norm(attn): 0.1377, norm(output): 0.9489, norm(x): 0.8196, norm(y): 0.9888, norm:0.6472, tok/sec: 99512.16, flops:104.45, batch-reuse:1
@ 7343 train 3.9453 , allloss: 3.9454, dt: 1283.96ms, fracRes: 0.7125, norm(attn): 0.1387, norm(output): 0.9493, norm(x): 0.8213, norm(y): 0.9885, norm:0.6953, tok/sec: 102084.26, flops:107.15, batch-reuse:1
@ 7344 train 3.9508 , allloss: 3.9508, dt: 1294.81ms, fracRes: 0.7124, norm(attn): 0.1387, norm(output): 0.9488, norm(x): 0.8205, norm(y): 0.9883, norm:0.7199, tok/sec: 101228.75, flops:106.25, batch-reuse:1
@ 7345 train 4.0579 , allloss: 4.0582, dt: 1318.61ms, fracRes: 0.7127, norm(attn): 0.1377, norm(output): 0.9490, norm(x): 0.8198, norm(y): 0.9885, norm:0.9010, tok/sec: 99401.30, flops:104.33, batch-reuse:1
@ 7346 train 3.9889 , allloss: 3.9889, dt: 1325.20ms, fracRes: 0.7128, norm(attn): 0.1396, norm(output): 0.9490, norm(x): 0.8205, norm(y): 0.9883, norm:0.7232, tok/sec: 98907.08, flops:103.82, batch-reuse:1
@ 7347 train 3.9805 , allloss: 3.9805, dt: 1301.95ms, fracRes: 0.7129, norm(attn): 0.1377, norm(output): 0.9492, norm(x): 0.8208, norm(y): 0.9886, norm:0.7313, tok/sec: 100673.74, flops:105.67, batch-reuse:1
@ 7348 train 3.9232 , allloss: 3.9234, dt: 1311.71ms, fracRes: 0.7126, norm(attn): 0.1387, norm(output): 0.9489, norm(x): 0.8208, norm(y): 0.9886, norm:0.7442, tok/sec: 99924.88, flops:104.88, batch-reuse:1
@ 7349 train 3.9025 , allloss: 3.9038, dt: 1316.35ms, fracRes: 0.7125, norm(attn): 0.1396, norm(output): 0.9488, norm(x): 0.8207, norm(y): 0.9887, norm:0.6622, tok/sec: 99572.45, flops:104.51, batch-reuse:1
@ 7350 train 3.8708 , allloss: 3.8708, dt: 1297.82ms, fracRes: 0.7127, norm(attn): 0.1406, norm(output): 0.9483, norm(x): 0.8196, norm(y): 0.9886, norm:0.6243, tok/sec: 100993.99, flops:106.01, batch-reuse:1
@ 7351 train 3.9494 , allloss: 3.9495, dt: 1287.56ms, fracRes: 0.7127, norm(attn): 0.1387, norm(output): 0.9491, norm(x): 0.8209, norm(y): 0.9883, norm:0.5980, tok/sec: 101799.05, flops:106.85, batch-reuse:1
@ 7352 train 3.9550 , allloss: 3.9550, dt: 1292.89ms, fracRes: 0.7130, norm(attn): 0.1387, norm(output): 0.9488, norm(x): 0.8198, norm(y): 0.9884, norm:0.6326, tok/sec: 101379.15, flops:106.41, batch-reuse:1
@ 7353 train 3.9196 , allloss: 3.9197, dt: 1314.83ms, fracRes: 0.7129, norm(attn): 0.1406, norm(output): 0.9488, norm(x): 0.8201, norm(y): 0.9884, norm:0.5842, tok/sec: 99687.32, flops:104.63, batch-reuse:1
@ 7354 train 3.8901 , allloss: 3.8902, dt: 1316.03ms, fracRes: 0.7127, norm(attn): 0.1396, norm(output): 0.9487, norm(x): 0.8205, norm(y): 0.9886, norm:0.6047, tok/sec: 99596.55, flops:104.54, batch-reuse:1
@ 7355 train 3.8555 , allloss: 3.8555, dt: 1296.05ms, fracRes: 0.7127, norm(attn): 0.1406, norm(output): 0.9485, norm(x): 0.8199, norm(y): 0.9888, norm:0.5678, tok/sec: 101132.29, flops:106.15, batch-reuse:1
@ 7356 train 3.9682 , allloss: 3.9683, dt: 1310.69ms, fracRes: 0.7128, norm(attn): 0.1396, norm(output): 0.9490, norm(x): 0.8211, norm(y): 0.9887, norm:0.5941, tok/sec: 100002.59, flops:104.97, batch-reuse:1
@ 7357 train 3.8538 , allloss: 3.8538, dt: 1304.77ms, fracRes: 0.7129, norm(attn): 0.1377, norm(output): 0.9487, norm(x): 0.8203, norm(y): 0.9886, norm:0.6135, tok/sec: 100455.98, flops:105.44, batch-reuse:1
@ 7358 train 3.8863 , allloss: 3.8863, dt: 1308.50ms, fracRes: 0.7128, norm(attn): 0.1377, norm(output): 0.9491, norm(x): 0.8209, norm(y): 0.9883, norm:0.6071, tok/sec: 100169.66, flops:105.14, batch-reuse:1
@ 7359 train 3.9459 , allloss: 3.9460, dt: 1317.85ms, fracRes: 0.7130, norm(attn): 0.1377, norm(output): 0.9490, norm(x): 0.8205, norm(y): 0.9884, norm:0.5721, tok/sec: 99459.14, flops:104.40, batch-reuse:1
@ 7360 train 3.8348 , allloss: 3.8349, dt: 1299.90ms, fracRes: 0.7130, norm(attn): 0.1387, norm(output): 0.9486, norm(x): 0.8199, norm(y): 0.9886, norm:0.5682, tok/sec: 100832.50, flops:105.84, batch-reuse:1
@ 7361 train 3.9383 , allloss: 3.9384, dt: 1284.88ms, fracRes: 0.7129, norm(attn): 0.1387, norm(output): 0.9490, norm(x): 0.8211, norm(y): 0.9888, norm:0.5415, tok/sec: 102010.80, flops:107.07, batch-reuse:1
@ 7362 train 3.8800 , allloss: 3.8801, dt: 1303.96ms, fracRes: 0.7129, norm(attn): 0.1387, norm(output): 0.9490, norm(x): 0.8212, norm(y): 0.9888, norm:0.4741, tok/sec: 100518.71, flops:105.51, batch-reuse:1
@ 7363 train 3.8567 , allloss: 3.8567, dt: 1281.75ms, fracRes: 0.7130, norm(attn): 0.1377, norm(output): 0.9491, norm(x): 0.8214, norm(y): 0.9886, norm:0.4752, tok/sec: 102260.00, flops:107.34, batch-reuse:1
@ 7364 train 3.8933 , allloss: 3.8933, dt: 1280.02ms, fracRes: 0.7131, norm(attn): 0.1387, norm(output): 0.9490, norm(x): 0.8201, norm(y): 0.9884, norm:0.5354, tok/sec: 102398.71, flops:107.48, batch-reuse:1
@ 7365 train 3.8935 , allloss: 3.8936, dt: 1279.09ms, fracRes: 0.7129, norm(attn): 0.1377, norm(output): 0.9489, norm(x): 0.8201, norm(y): 0.9880, norm:0.4242, tok/sec: 102472.65, flops:107.56, batch-reuse:1
@ 7366 train 3.9226 , allloss: 3.9228, dt: 1304.26ms, fracRes: 0.7127, norm(attn): 0.1377, norm(output): 0.9490, norm(x): 0.8205, norm(y): 0.9880, norm:0.5162, tok/sec: 100495.13, flops:105.48, batch-reuse:1
@ 7367 train 3.9143 , allloss: 3.9146, dt: 1297.64ms, fracRes: 0.7126, norm(attn): 0.1387, norm(output): 0.9490, norm(x): 0.8208, norm(y): 0.9882, norm:0.5673, tok/sec: 101007.66, flops:106.02, batch-reuse:1
@ 7368 train 3.9160 , allloss: 3.9163, dt: 1299.64ms, fracRes: 0.7127, norm(attn): 0.1387, norm(output): 0.9489, norm(x): 0.8209, norm(y): 0.9885, norm:0.5151, tok/sec: 100852.33, flops:105.86, batch-reuse:1
@ 7369 train 3.9369 , allloss: 3.9370, dt: 1327.23ms, fracRes: 0.7128, norm(attn): 0.1377, norm(output): 0.9493, norm(x): 0.8217, norm(y): 0.9888, norm:0.4761, tok/sec: 98756.20, flops:103.66, batch-reuse:1
@ 7370 train 3.8391 , allloss: 3.8392, dt: 1317.61ms, fracRes: 0.7126, norm(attn): 0.1387, norm(output): 0.9489, norm(x): 0.8214, norm(y): 0.9888, norm:0.5721, tok/sec: 99476.79, flops:104.41, batch-reuse:1
@ 7371 train 3.9071 , allloss: 3.9072, dt: 1277.47ms, fracRes: 0.7127, norm(attn): 0.1377, norm(output): 0.9490, norm(x): 0.8215, norm(y): 0.9887, norm:0.6039, tok/sec: 102602.85, flops:107.70, batch-reuse:1
@ 7372 train 3.9518 , allloss: 3.9519, dt: 1276.94ms, fracRes: 0.7126, norm(attn): 0.1377, norm(output): 0.9491, norm(x): 0.8213, norm(y): 0.9886, norm:0.5521, tok/sec: 102645.51, flops:107.74, batch-reuse:1
@ 7373 train 3.9309 , allloss: 3.9311, dt: 1291.69ms, fracRes: 0.7126, norm(attn): 0.1387, norm(output): 0.9493, norm(x): 0.8216, norm(y): 0.9883, norm:0.5804, tok/sec: 101473.50, flops:106.51, batch-reuse:1
@ 7374 train 3.9095 , allloss: 3.9096, dt: 1302.57ms, fracRes: 0.7127, norm(attn): 0.1387, norm(output): 0.9491, norm(x): 0.8215, norm(y): 0.9884, norm:0.6051, tok/sec: 100625.62, flops:105.62, batch-reuse:1
@ 7375 train 3.8340 , allloss: 3.8341, dt: 1317.44ms, fracRes: 0.7127, norm(attn): 0.1377, norm(output): 0.9488, norm(x): 0.8207, norm(y): 0.9885, norm:0.5107, tok/sec: 99490.10, flops:104.43, batch-reuse:1
@ 7376 train 3.9034 , allloss: 3.9037, dt: 1310.44ms, fracRes: 0.7128, norm(attn): 0.1387, norm(output): 0.9489, norm(x): 0.8209, norm(y): 0.9886, norm:0.5409, tok/sec: 100021.02, flops:104.99, batch-reuse:1
@ 7377 train 3.9302 , allloss: 3.9304, dt: 1285.58ms, fracRes: 0.7130, norm(attn): 0.1377, norm(output): 0.9490, norm(x): 0.8208, norm(y): 0.9887, norm:0.5859, tok/sec: 101955.41, flops:107.02, batch-reuse:1
@ 7378 train 3.9524 , allloss: 3.9532, dt: 1298.72ms, fracRes: 0.7128, norm(attn): 0.1367, norm(output): 0.9493, norm(x): 0.8217, norm(y): 0.9887, norm:0.6361, tok/sec: 100923.90, flops:105.93, batch-reuse:1
@ 7379 train 4.0361 , allloss: 4.0367, dt: 1307.93ms, fracRes: 0.7126, norm(attn): 0.1377, norm(output): 0.9494, norm(x): 0.8221, norm(y): 0.9885, norm:0.5007, tok/sec: 100213.08, flops:105.19, batch-reuse:1
@ 7380 train 3.9071 , allloss: 3.9072, dt: 1320.82ms, fracRes: 0.7124, norm(attn): 0.1377, norm(output): 0.9492, norm(x): 0.8219, norm(y): 0.9885, norm:0.6746, tok/sec: 99235.46, flops:104.16, batch-reuse:1
@ 7381 train 3.9182 , allloss: 3.9182, dt: 1305.34ms, fracRes: 0.7126, norm(attn): 0.1387, norm(output): 0.9491, norm(x): 0.8221, norm(y): 0.9884, norm:0.5878, tok/sec: 100412.26, flops:105.40, batch-reuse:1
@ 7382 train 3.9667 , allloss: 3.9667, dt: 1293.54ms, fracRes: 0.7129, norm(attn): 0.1387, norm(output): 0.9489, norm(x): 0.8206, norm(y): 0.9888, norm:0.6095, tok/sec: 101328.10, flops:106.36, batch-reuse:1
@ 7383 train 3.9247 , allloss: 3.9248, dt: 1303.49ms, fracRes: 0.7128, norm(attn): 0.1387, norm(output): 0.9493, norm(x): 0.8220, norm(y): 0.9887, norm:0.5776, tok/sec: 100554.65, flops:105.55, batch-reuse:1
@ 7384 train 3.9159 , allloss: 3.9160, dt: 1287.44ms, fracRes: 0.7128, norm(attn): 0.1387, norm(output): 0.9493, norm(x): 0.8221, norm(y): 0.9886, norm:0.5885, tok/sec: 101808.44, flops:106.86, batch-reuse:1
@ 7385 train 3.8184 , allloss: 3.8186, dt: 1284.45ms, fracRes: 0.7129, norm(attn): 0.1387, norm(output): 0.9488, norm(x): 0.8211, norm(y): 0.9886, norm:0.6667, tok/sec: 102044.98, flops:107.11, batch-reuse:1
@ 7386 train 3.8409 , allloss: 3.8410, dt: 1303.89ms, fracRes: 0.7124, norm(attn): 0.1387, norm(output): 0.9491, norm(x): 0.8224, norm(y): 0.9884, norm:0.5293, tok/sec: 100523.82, flops:105.51, batch-reuse:1
@ 7387 train 3.9746 , allloss: 3.9747, dt: 1324.64ms, fracRes: 0.7126, norm(attn): 0.1387, norm(output): 0.9490, norm(x): 0.8215, norm(y): 0.9883, norm:0.6480, tok/sec: 98949.50, flops:103.86, batch-reuse:1
@ 7388 train 3.9820 , allloss: 3.9821, dt: 1293.12ms, fracRes: 0.7125, norm(attn): 0.1377, norm(output): 0.9493, norm(x): 0.8221, norm(y): 0.9882, norm:0.5628, tok/sec: 101360.76, flops:106.39, batch-reuse:1
@ 7389 train 3.9134 , allloss: 3.9138, dt: 1315.54ms, fracRes: 0.7127, norm(attn): 0.1367, norm(output): 0.9496, norm(x): 0.8223, norm(y): 0.9885, norm:0.5928, tok/sec: 99633.41, flops:104.58, batch-reuse:1
@ 7390 train 3.8729 , allloss: 3.8730, dt: 1306.08ms, fracRes: 0.7127, norm(attn): 0.1387, norm(output): 0.9492, norm(x): 0.8219, norm(y): 0.9887, norm:0.5788, tok/sec: 100355.42, flops:105.34, batch-reuse:1
@ 7391 train 3.9327 , allloss: 3.9372, dt: 1302.75ms, fracRes: 0.7126, norm(attn): 0.1377, norm(output): 0.9491, norm(x): 0.8223, norm(y): 0.9890, norm:0.5010, tok/sec: 100611.55, flops:105.61, batch-reuse:1
@ 7392 train 3.8472 , allloss: 3.8473, dt: 1305.66ms, fracRes: 0.7125, norm(attn): 0.1387, norm(output): 0.9490, norm(x): 0.8224, norm(y): 0.9888, norm:0.6664, tok/sec: 100387.32, flops:105.37, batch-reuse:1
@ 7393 train 3.7811 , allloss: 3.7811, dt: 1311.43ms, fracRes: 0.7126, norm(attn): 0.1387, norm(output): 0.9492, norm(x): 0.8223, norm(y): 0.9887, norm:0.5947, tok/sec: 99945.95, flops:104.91, batch-reuse:1
@ 7394 train 3.8037 , allloss: 3.8037, dt: 1301.90ms, fracRes: 0.7127, norm(attn): 0.1387, norm(output): 0.9487, norm(x): 0.8212, norm(y): 0.9886, norm:0.5425, tok/sec: 100677.64, flops:105.67, batch-reuse:1
@ 7395 train 3.7991 , allloss: 3.7992, dt: 1316.59ms, fracRes: 0.7127, norm(attn): 0.1396, norm(output): 0.9487, norm(x): 0.8209, norm(y): 0.9886, norm:0.5868, tok/sec: 99554.11, flops:104.50, batch-reuse:1
@ 7396 train 3.7716 , allloss: 3.7719, dt: 1300.09ms, fracRes: 0.7127, norm(attn): 0.1377, norm(output): 0.9490, norm(x): 0.8220, norm(y): 0.9886, norm:0.5305, tok/sec: 100817.46, flops:105.82, batch-reuse:1
@ 7397 train 3.7924 , allloss: 3.7924, dt: 1300.94ms, fracRes: 0.7125, norm(attn): 0.1396, norm(output): 0.9491, norm(x): 0.8227, norm(y): 0.9885, norm:0.5352, tok/sec: 100752.06, flops:105.75, batch-reuse:1
@ 7398 train 3.7631 , allloss: 3.7632, dt: 1301.09ms, fracRes: 0.7126, norm(attn): 0.1377, norm(output): 0.9488, norm(x): 0.8223, norm(y): 0.9884, norm:0.5739, tok/sec: 100740.43, flops:105.74, batch-reuse:1
@ 7399 train 3.7199 , allloss: 3.7199, dt: 1319.01ms, fracRes: 0.7128, norm(attn): 0.1387, norm(output): 0.9484, norm(x): 0.8212, norm(y): 0.9884, norm:0.6118, tok/sec: 99371.86, flops:104.30, batch-reuse:1
@ 7400 train 3.7687 , allloss: 3.7689, dt: 1294.73ms, fracRes: 0.7130, norm(attn): 0.1387, norm(output): 0.9487, norm(x): 0.8210, norm(y): 0.9883, norm:0.6004, tok/sec: 101235.10, flops:106.26, batch-reuse:1
@ 7401 train 3.7872 , allloss: 3.7873, dt: 1281.23ms, fracRes: 0.7130, norm(attn): 0.1377, norm(output): 0.9491, norm(x): 0.8220, norm(y): 0.9883, norm:0.5999, tok/sec: 102301.47, flops:107.38, batch-reuse:1
@ 7402 train 3.7953 , allloss: 3.7957, dt: 1322.96ms, fracRes: 0.7130, norm(attn): 0.1387, norm(output): 0.9489, norm(x): 0.8215, norm(y): 0.9884, norm:0.5762, tok/sec: 99075.08, flops:103.99, batch-reuse:1
@ 7403 train 3.9283 , allloss: 3.9284, dt: 1293.67ms, fracRes: 0.7130, norm(attn): 0.1377, norm(output): 0.9489, norm(x): 0.8213, norm(y): 0.9885, norm:0.6093, tok/sec: 101317.94, flops:106.35, batch-reuse:1
@ 7404 train 3.8205 , allloss: 3.8205, dt: 1309.76ms, fracRes: 0.7127, norm(attn): 0.1377, norm(output): 0.9486, norm(x): 0.8210, norm(y): 0.9884, norm:0.7048, tok/sec: 100073.65, flops:105.04, batch-reuse:1
@ 7405 train 3.7957 , allloss: 3.7958, dt: 1339.41ms, fracRes: 0.7128, norm(attn): 0.1377, norm(output): 0.9491, norm(x): 0.8218, norm(y): 0.9883, norm:0.5956, tok/sec: 97858.23, flops:102.72, batch-reuse:1
@ 7406 train 3.7082 , allloss: 3.7083, dt: 1284.57ms, fracRes: 0.7128, norm(attn): 0.1377, norm(output): 0.9489, norm(x): 0.8216, norm(y): 0.9884, norm:0.6014, tok/sec: 102035.70, flops:107.10, batch-reuse:1
@ 7407 train 3.8150 , allloss: 3.8154, dt: 1294.50ms, fracRes: 0.7130, norm(attn): 0.1377, norm(output): 0.9490, norm(x): 0.8210, norm(y): 0.9886, norm:0.6047, tok/sec: 101252.63, flops:106.28, batch-reuse:1
@ 7408 train 3.8562 , allloss: 3.8579, dt: 1308.71ms, fracRes: 0.7129, norm(attn): 0.1387, norm(output): 0.9487, norm(x): 0.8210, norm(y): 0.9885, norm:0.6365, tok/sec: 100153.94, flops:105.12, batch-reuse:1
@ 7409 train 3.6949 , allloss: 3.6949, dt: 1311.39ms, fracRes: 0.7127, norm(attn): 0.1377, norm(output): 0.9479, norm(x): 0.8202, norm(y): 0.9887, norm:0.6521, tok/sec: 99948.79, flops:104.91, batch-reuse:1
@ 7410 train 3.7543 , allloss: 3.7543, dt: 1288.75ms, fracRes: 0.7129, norm(attn): 0.1377, norm(output): 0.9486, norm(x): 0.8211, norm(y): 0.9883, norm:0.7083, tok/sec: 101704.89, flops:106.75, batch-reuse:1
@ 7411 train 3.8347 , allloss: 3.8385, dt: 1304.21ms, fracRes: 0.7130, norm(attn): 0.1387, norm(output): 0.9482, norm(x): 0.8198, norm(y): 0.9885, norm:0.7744, tok/sec: 100498.94, flops:105.49, batch-reuse:1
@ 7412 train 3.8221 , allloss: 3.8224, dt: 1304.29ms, fracRes: 0.7130, norm(attn): 0.1377, norm(output): 0.9487, norm(x): 0.8206, norm(y): 0.9884, norm:0.6216, tok/sec: 100493.00, flops:105.48, batch-reuse:1
@ 7413 train 3.7874 , allloss: 3.7874, dt: 1306.26ms, fracRes: 0.7131, norm(attn): 0.1387, norm(output): 0.9486, norm(x): 0.8203, norm(y): 0.9885, norm:0.6841, tok/sec: 100341.37, flops:105.32, batch-reuse:1
@ 7414 train 3.7807 , allloss: 3.7808, dt: 1303.39ms, fracRes: 0.7131, norm(attn): 0.1387, norm(output): 0.9489, norm(x): 0.8213, norm(y): 0.9883, norm:0.5975, tok/sec: 100562.52, flops:105.55, batch-reuse:1
@ 7415 train 3.6788 , allloss: 3.6789, dt: 1298.11ms, fracRes: 0.7129, norm(attn): 0.1377, norm(output): 0.9483, norm(x): 0.8208, norm(y): 0.9883, norm:0.5315, tok/sec: 100971.23, flops:105.98, batch-reuse:1
@ 7416 train 3.8451 , allloss: 3.8452, dt: 1286.66ms, fracRes: 0.7127, norm(attn): 0.1387, norm(output): 0.9485, norm(x): 0.8207, norm(y): 0.9884, norm:0.6321, tok/sec: 101870.23, flops:106.93, batch-reuse:1
@ 7417 train 3.7857 , allloss: 3.7885, dt: 1287.99ms, fracRes: 0.7127, norm(attn): 0.1396, norm(output): 0.9492, norm(x): 0.8221, norm(y): 0.9883, norm:0.5376, tok/sec: 101764.61, flops:106.82, batch-reuse:1
@ 7418 train 3.8434 , allloss: 3.8434, dt: 1286.28ms, fracRes: 0.7129, norm(attn): 0.1387, norm(output): 0.9491, norm(x): 0.8220, norm(y): 0.9881, norm:0.6193, tok/sec: 101899.68, flops:106.96, batch-reuse:1
@ 7419 train 3.8901 , allloss: 3.8901, dt: 1317.91ms, fracRes: 0.7128, norm(attn): 0.1377, norm(output): 0.9491, norm(x): 0.8219, norm(y): 0.9880, norm:0.5358, tok/sec: 99454.69, flops:104.39, batch-reuse:1
@ 7420 train 3.8914 , allloss: 3.8914, dt: 1298.17ms, fracRes: 0.7124, norm(attn): 0.1377, norm(output): 0.9500, norm(x): 0.8237, norm(y): 0.9880, norm:0.6403, tok/sec: 100967.13, flops:105.98, batch-reuse:1
@ 7421 train 4.0468 , allloss: 4.0571, dt: 1301.28ms, fracRes: 0.7125, norm(attn): 0.1377, norm(output): 0.9501, norm(x): 0.8231, norm(y): 0.9883, norm:0.6340, tok/sec: 100725.49, flops:105.72, batch-reuse:1
@ 7422 train 3.6793 , allloss: 3.6795, dt: 1303.02ms, fracRes: 0.7126, norm(attn): 0.1387, norm(output): 0.9485, norm(x): 0.8214, norm(y): 0.9881, norm:0.6821, tok/sec: 100591.23, flops:105.58, batch-reuse:1
@ 7423 train 3.8484 , allloss: 3.8484, dt: 1296.23ms, fracRes: 0.7128, norm(attn): 0.1387, norm(output): 0.9486, norm(x): 0.8213, norm(y): 0.9885, norm:0.6772, tok/sec: 101117.85, flops:106.14, batch-reuse:1
@ 7424 train 3.7634 , allloss: 3.7634, dt: 1292.84ms, fracRes: 0.7128, norm(attn): 0.1377, norm(output): 0.9487, norm(x): 0.8214, norm(y): 0.9883, norm:0.6849, tok/sec: 101382.78, flops:106.41, batch-reuse:1
@ 7425 train 3.7146 , allloss: 3.7147, dt: 1309.51ms, fracRes: 0.7127, norm(attn): 0.1387, norm(output): 0.9490, norm(x): 0.8221, norm(y): 0.9882, norm:0.7216, tok/sec: 100092.44, flops:105.06, batch-reuse:1
@ 7426 train 3.8133 , allloss: 3.8133, dt: 1340.46ms, fracRes: 0.7130, norm(attn): 0.1396, norm(output): 0.9484, norm(x): 0.8206, norm(y): 0.9882, norm:0.6141, tok/sec: 97781.21, flops:102.63, batch-reuse:1
@ 7427 train 3.7430 , allloss: 3.7430, dt: 1292.46ms, fracRes: 0.7130, norm(attn): 0.1387, norm(output): 0.9488, norm(x): 0.8216, norm(y): 0.9880, norm:0.6351, tok/sec: 101413.09, flops:106.45, batch-reuse:1
@ 7428 train 3.7565 , allloss: 3.7565, dt: 1296.52ms, fracRes: 0.7128, norm(attn): 0.1377, norm(output): 0.9492, norm(x): 0.8228, norm(y): 0.9880, norm:0.6385, tok/sec: 101095.00, flops:106.11, batch-reuse:1
@ 7429 train 3.7625 , allloss: 3.7625, dt: 1300.70ms, fracRes: 0.7128, norm(attn): 0.1387, norm(output): 0.9490, norm(x): 0.8221, norm(y): 0.9881, norm:0.5889, tok/sec: 100770.49, flops:105.77, batch-reuse:1
@ 7430 train 3.7637 , allloss: 3.7648, dt: 1297.40ms, fracRes: 0.7128, norm(attn): 0.1377, norm(output): 0.9489, norm(x): 0.8219, norm(y): 0.9881, norm:0.6523, tok/sec: 101026.97, flops:106.04, batch-reuse:1
@ 7431 train 3.8366 , allloss: 3.8370, dt: 1281.65ms, fracRes: 0.7129, norm(attn): 0.1387, norm(output): 0.9487, norm(x): 0.8214, norm(y): 0.9881, norm:0.6008, tok/sec: 102268.26, flops:107.34, batch-reuse:1
@ 7432 train 3.7640 , allloss: 3.7640, dt: 1310.96ms, fracRes: 0.7128, norm(attn): 0.1377, norm(output): 0.9490, norm(x): 0.8219, norm(y): 0.9880, norm:0.6188, tok/sec: 99981.62, flops:104.94, batch-reuse:1
@ 7433 train 3.8190 , allloss: 3.8191, dt: 1333.72ms, fracRes: 0.7126, norm(attn): 0.1377, norm(output): 0.9492, norm(x): 0.8225, norm(y): 0.9880, norm:0.7359, tok/sec: 98275.34, flops:103.15, batch-reuse:1
@ 7434 train 3.8290 , allloss: 3.8291, dt: 1328.76ms, fracRes: 0.7126, norm(attn): 0.1377, norm(output): 0.9488, norm(x): 0.8215, norm(y): 0.9880, norm:0.6153, tok/sec: 98642.39, flops:103.54, batch-reuse:1
@ 7435 train 3.8039 , allloss: 3.8040, dt: 1326.90ms, fracRes: 0.7128, norm(attn): 0.1367, norm(output): 0.9488, norm(x): 0.8216, norm(y): 0.9880, norm:0.5947, tok/sec: 98780.65, flops:103.68, batch-reuse:1
@ 7436 train 3.8136 , allloss: 3.8139, dt: 1285.73ms, fracRes: 0.7130, norm(attn): 0.1367, norm(output): 0.9492, norm(x): 0.8219, norm(y): 0.9880, norm:0.5551, tok/sec: 101943.31, flops:107.00, batch-reuse:1
@ 7437 train 3.8230 , allloss: 3.8232, dt: 1308.38ms, fracRes: 0.7128, norm(attn): 0.1377, norm(output): 0.9496, norm(x): 0.8230, norm(y): 0.9879, norm:0.6526, tok/sec: 100178.56, flops:105.15, batch-reuse:1
@ 7438 train 3.9347 , allloss: 3.9347, dt: 1308.44ms, fracRes: 0.7129, norm(attn): 0.1377, norm(output): 0.9496, norm(x): 0.8225, norm(y): 0.9879, norm:0.5580, tok/sec: 100173.98, flops:105.15, batch-reuse:1
@ 7439 train 3.9831 , allloss: 3.9831, dt: 1300.65ms, fracRes: 0.7130, norm(attn): 0.1367, norm(output): 0.9495, norm(x): 0.8219, norm(y): 0.9880, norm:0.5884, tok/sec: 100774.40, flops:105.78, batch-reuse:1
@ 7440 train 3.9490 , allloss: 3.9491, dt: 1312.69ms, fracRes: 0.7130, norm(attn): 0.1377, norm(output): 0.9491, norm(x): 0.8218, norm(y): 0.9882, norm:0.5602, tok/sec: 99850.22, flops:104.81, batch-reuse:1
@ 7441 train 3.8725 , allloss: 3.8732, dt: 1289.30ms, fracRes: 0.7130, norm(attn): 0.1387, norm(output): 0.9486, norm(x): 0.8208, norm(y): 0.9883, norm:0.6515, tok/sec: 101661.61, flops:106.71, batch-reuse:1
@ 7442 train 3.9504 , allloss: 3.9505, dt: 1305.11ms, fracRes: 0.7132, norm(attn): 0.1377, norm(output): 0.9488, norm(x): 0.8213, norm(y): 0.9883, norm:0.6472, tok/sec: 100430.20, flops:105.41, batch-reuse:1
@ 7443 train 3.9406 , allloss: 3.9408, dt: 1300.20ms, fracRes: 0.7131, norm(attn): 0.1367, norm(output): 0.9493, norm(x): 0.8214, norm(y): 0.9881, norm:0.5774, tok/sec: 100809.42, flops:105.81, batch-reuse:1
@ 7444 train 3.9239 , allloss: 3.9241, dt: 1332.01ms, fracRes: 0.7131, norm(attn): 0.1377, norm(output): 0.9495, norm(x): 0.8218, norm(y): 0.9880, norm:0.6106, tok/sec: 98401.43, flops:103.29, batch-reuse:1
@ 7445 train 3.9551 , allloss: 3.9552, dt: 1301.48ms, fracRes: 0.7129, norm(attn): 0.1367, norm(output): 0.9492, norm(x): 0.8215, norm(y): 0.9881, norm:0.5455, tok/sec: 100709.75, flops:105.71, batch-reuse:1
@ 7446 train 3.9654 , allloss: 3.9657, dt: 1313.68ms, fracRes: 0.7130, norm(attn): 0.1377, norm(output): 0.9490, norm(x): 0.8211, norm(y): 0.9884, norm:0.6258, tok/sec: 99774.67, flops:104.73, batch-reuse:1
@ 7447 train 3.9413 , allloss: 3.9416, dt: 1298.67ms, fracRes: 0.7133, norm(attn): 0.1387, norm(output): 0.9485, norm(x): 0.8198, norm(y): 0.9888, norm:0.6328, tok/sec: 100927.61, flops:105.94, batch-reuse:1
@ 7448 train 3.9254 , allloss: 3.9255, dt: 1310.19ms, fracRes: 0.7130, norm(attn): 0.1367, norm(output): 0.9492, norm(x): 0.8218, norm(y): 0.9883, norm:0.5784, tok/sec: 100040.16, flops:105.01, batch-reuse:1
@ 7449 train 4.0380 , allloss: 4.0381, dt: 1310.42ms, fracRes: 0.7130, norm(attn): 0.1367, norm(output): 0.9493, norm(x): 0.8220, norm(y): 0.9881, norm:0.6132, tok/sec: 100023.05, flops:104.99, batch-reuse:1
@ 7450 train 3.9207 , allloss: 3.9207, dt: 1302.46ms, fracRes: 0.7130, norm(attn): 0.1377, norm(output): 0.9488, norm(x): 0.8208, norm(y): 0.9883, norm:0.5685, tok/sec: 100634.19, flops:105.63, batch-reuse:1
@ 7451 train 3.9381 , allloss: 3.9382, dt: 1278.72ms, fracRes: 0.7130, norm(attn): 0.1377, norm(output): 0.9489, norm(x): 0.8217, norm(y): 0.9885, norm:0.6253, tok/sec: 102502.61, flops:107.59, batch-reuse:1
@ 7452 train 3.9742 , allloss: 3.9743, dt: 1297.38ms, fracRes: 0.7130, norm(attn): 0.1377, norm(output): 0.9489, norm(x): 0.8216, norm(y): 0.9886, norm:0.5441, tok/sec: 101027.86, flops:106.04, batch-reuse:1
@ 7453 train 3.9043 , allloss: 3.9046, dt: 1284.49ms, fracRes: 0.7129, norm(attn): 0.1367, norm(output): 0.9494, norm(x): 0.8223, norm(y): 0.9885, norm:0.6290, tok/sec: 102042.33, flops:107.11, batch-reuse:1
@ 7454 train 4.0139 , allloss: 4.0140, dt: 1275.97ms, fracRes: 0.7131, norm(attn): 0.1357, norm(output): 0.9492, norm(x): 0.8216, norm(y): 0.9884, norm:0.7093, tok/sec: 102723.48, flops:107.82, batch-reuse:1
@ 7455 train 3.8972 , allloss: 3.8976, dt: 1281.82ms, fracRes: 0.7132, norm(attn): 0.1367, norm(output): 0.9492, norm(x): 0.8218, norm(y): 0.9881, norm:0.6903, tok/sec: 102255.00, flops:107.33, batch-reuse:1
@ 7456 train 3.9818 , allloss: 3.9819, dt: 1282.97ms, fracRes: 0.7135, norm(attn): 0.1367, norm(output): 0.9497, norm(x): 0.8218, norm(y): 0.9884, norm:0.6386, tok/sec: 102163.05, flops:107.23, batch-reuse:1
@ 7457 train 3.9823 , allloss: 3.9952, dt: 1292.95ms, fracRes: 0.7130, norm(attn): 0.1377, norm(output): 0.9493, norm(x): 0.8221, norm(y): 0.9888, norm:0.7860, tok/sec: 101374.55, flops:106.41, batch-reuse:1
@ 7458 train 3.9491 , allloss: 3.9494, dt: 1278.04ms, fracRes: 0.7132, norm(attn): 0.1387, norm(output): 0.9492, norm(x): 0.8219, norm(y): 0.9886, norm:0.7230, tok/sec: 102556.72, flops:107.65, batch-reuse:1
@ 7459 train 4.0298 , allloss: 4.0302, dt: 1302.43ms, fracRes: 0.7134, norm(attn): 0.1367, norm(output): 0.9493, norm(x): 0.8218, norm(y): 0.9883, norm:0.6241, tok/sec: 100636.29, flops:105.63, batch-reuse:1
@ 7460 train 4.0069 , allloss: 4.0069, dt: 1304.63ms, fracRes: 0.7134, norm(attn): 0.1377, norm(output): 0.9495, norm(x): 0.8220, norm(y): 0.9881, norm:0.6937, tok/sec: 100466.78, flops:105.45, batch-reuse:1
@ 7461 train 3.9513 , allloss: 3.9516, dt: 1318.87ms, fracRes: 0.7132, norm(attn): 0.1367, norm(output): 0.9491, norm(x): 0.8216, norm(y): 0.9879, norm:0.6641, tok/sec: 99382.29, flops:104.31, batch-reuse:1
@ 7462 train 3.9444 , allloss: 3.9444, dt: 1334.57ms, fracRes: 0.7131, norm(attn): 0.1377, norm(output): 0.9489, norm(x): 0.8209, norm(y): 0.9881, norm:0.6181, tok/sec: 98213.14, flops:103.09, batch-reuse:1
@ 7463 train 3.9396 , allloss: 3.9397, dt: 1297.60ms, fracRes: 0.7129, norm(attn): 0.1367, norm(output): 0.9494, norm(x): 0.8221, norm(y): 0.9883, norm:0.6373, tok/sec: 101011.02, flops:106.02, batch-reuse:1
@ 7464 train 4.0213 , allloss: 4.0214, dt: 1292.69ms, fracRes: 0.7129, norm(attn): 0.1367, norm(output): 0.9495, norm(x): 0.8225, norm(y): 0.9884, norm:0.6037, tok/sec: 101395.14, flops:106.43, batch-reuse:1
@ 7465 train 3.9497 , allloss: 3.9498, dt: 1315.00ms, fracRes: 0.7132, norm(attn): 0.1357, norm(output): 0.9489, norm(x): 0.8214, norm(y): 0.9885, norm:0.5275, tok/sec: 99674.41, flops:104.62, batch-reuse:1
@ 7466 train 4.0867 , allloss: 4.0867, dt: 1287.20ms, fracRes: 0.7132, norm(attn): 0.1357, norm(output): 0.9493, norm(x): 0.8219, norm(y): 0.9884, norm:0.6726, tok/sec: 101827.51, flops:106.88, batch-reuse:1
@ 7467 train 3.9250 , allloss: 3.9251, dt: 1296.57ms, fracRes: 0.7132, norm(attn): 0.1377, norm(output): 0.9489, norm(x): 0.8214, norm(y): 0.9883, norm:0.5726, tok/sec: 101091.43, flops:106.11, batch-reuse:1
@ 7468 train 3.9094 , allloss: 3.9095, dt: 1283.53ms, fracRes: 0.7130, norm(attn): 0.1377, norm(output): 0.9487, norm(x): 0.8214, norm(y): 0.9883, norm:0.6536, tok/sec: 102118.41, flops:107.19, batch-reuse:1
@ 7469 train 3.9656 , allloss: 3.9656, dt: 1287.42ms, fracRes: 0.7131, norm(attn): 0.1377, norm(output): 0.9490, norm(x): 0.8218, norm(y): 0.9883, norm:0.4851, tok/sec: 101809.89, flops:106.86, batch-reuse:1
@ 7470 train 3.9014 , allloss: 3.9016, dt: 1292.53ms, fracRes: 0.7129, norm(attn): 0.1387, norm(output): 0.9492, norm(x): 0.8217, norm(y): 0.9882, norm:0.7412, tok/sec: 101407.22, flops:106.44, batch-reuse:1
@ 7471 train 3.9104 , allloss: 3.9105, dt: 1295.97ms, fracRes: 0.7127, norm(attn): 0.1387, norm(output): 0.9487, norm(x): 0.8213, norm(y): 0.9882, norm:0.6692, tok/sec: 101138.31, flops:106.16, batch-reuse:1
@ 7472 train 4.0303 , allloss: 4.0305, dt: 1313.53ms, fracRes: 0.7128, norm(attn): 0.1367, norm(output): 0.9487, norm(x): 0.8214, norm(y): 0.9883, norm:0.5379, tok/sec: 99785.93, flops:104.74, batch-reuse:1
@ 7473 train 4.1208 , allloss: 4.1208, dt: 1324.32ms, fracRes: 0.7131, norm(attn): 0.1348, norm(output): 0.9494, norm(x): 0.8228, norm(y): 0.9881, norm:0.6289, tok/sec: 98972.84, flops:103.89, batch-reuse:1
@ 7474 train 3.9903 , allloss: 3.9913, dt: 1309.85ms, fracRes: 0.7128, norm(attn): 0.1357, norm(output): 0.9496, norm(x): 0.8236, norm(y): 0.9881, norm:0.7050, tok/sec: 100066.33, flops:105.03, batch-reuse:1
@ 7475 train 3.9986 , allloss: 3.9987, dt: 1327.95ms, fracRes: 0.7129, norm(attn): 0.1377, norm(output): 0.9496, norm(x): 0.8230, norm(y): 0.9881, norm:0.7022, tok/sec: 98702.32, flops:103.60, batch-reuse:1
@ 7476 train 3.9602 , allloss: 3.9686, dt: 1329.66ms, fracRes: 0.7129, norm(attn): 0.1387, norm(output): 0.9494, norm(x): 0.8229, norm(y): 0.9880, norm:0.7151, tok/sec: 98575.86, flops:103.47, batch-reuse:1
@ 7477 train 3.9232 , allloss: 3.9232, dt: 1335.31ms, fracRes: 0.7129, norm(attn): 0.1377, norm(output): 0.9494, norm(x): 0.8230, norm(y): 0.9880, norm:0.7054, tok/sec: 98158.45, flops:103.03, batch-reuse:1
@ 7478 train 4.0374 , allloss: 4.0374, dt: 1319.66ms, fracRes: 0.7130, norm(attn): 0.1387, norm(output): 0.9488, norm(x): 0.8216, norm(y): 0.9884, norm:0.7359, tok/sec: 99322.56, flops:104.25, batch-reuse:1
@ 7479 train 4.0576 , allloss: 4.0579, dt: 1335.05ms, fracRes: 0.7129, norm(attn): 0.1367, norm(output): 0.9493, norm(x): 0.8226, norm(y): 0.9882, norm:0.7396, tok/sec: 98177.61, flops:103.05, batch-reuse:1
@ 7480 train 3.8896 , allloss: 3.8896, dt: 1326.32ms, fracRes: 0.7128, norm(attn): 0.1396, norm(output): 0.9490, norm(x): 0.8223, norm(y): 0.9881, norm:0.8523, tok/sec: 98823.82, flops:103.73, batch-reuse:1
@ 7481 train 4.0405 , allloss: 4.0405, dt: 1325.47ms, fracRes: 0.7131, norm(attn): 0.1367, norm(output): 0.9492, norm(x): 0.8219, norm(y): 0.9880, norm:0.6435, tok/sec: 98887.01, flops:103.79, batch-reuse:1
@ 7482 train 4.0249 , allloss: 4.0249, dt: 1274.66ms, fracRes: 0.7128, norm(attn): 0.1387, norm(output): 0.9492, norm(x): 0.8222, norm(y): 0.9879, norm:0.6827, tok/sec: 102828.63, flops:107.93, batch-reuse:1
@ 7483 train 4.0287 , allloss: 4.0287, dt: 1306.10ms, fracRes: 0.7128, norm(attn): 0.1357, norm(output): 0.9499, norm(x): 0.8233, norm(y): 0.9880, norm:0.7646, tok/sec: 100353.68, flops:105.33, batch-reuse:1
@ 7484 train 3.9372 , allloss: 3.9373, dt: 1317.12ms, fracRes: 0.7127, norm(attn): 0.1367, norm(output): 0.9490, norm(x): 0.8224, norm(y): 0.9878, norm:0.8697, tok/sec: 99514.07, flops:104.45, batch-reuse:1
@ 7485 train 3.9763 , allloss: 3.9763, dt: 1318.27ms, fracRes: 0.7129, norm(attn): 0.1367, norm(output): 0.9491, norm(x): 0.8221, norm(y): 0.9878, norm:0.6280, tok/sec: 99427.59, flops:104.36, batch-reuse:1
@ 7486 train 3.9933 , allloss: 3.9934, dt: 1284.98ms, fracRes: 0.7131, norm(attn): 0.1367, norm(output): 0.9498, norm(x): 0.8230, norm(y): 0.9878, norm:0.6745, tok/sec: 102002.78, flops:107.07, batch-reuse:1
@ 7487 train 4.0450 , allloss: 4.0450, dt: 1280.26ms, fracRes: 0.7132, norm(attn): 0.1377, norm(output): 0.9493, norm(x): 0.8221, norm(y): 0.9879, norm:0.6187, tok/sec: 102379.39, flops:107.46, batch-reuse:1
@ 7488 train 3.9406 , allloss: 3.9406, dt: 1317.87ms, fracRes: 0.7132, norm(attn): 0.1377, norm(output): 0.9494, norm(x): 0.8226, norm(y): 0.9878, norm:0.5645, tok/sec: 99457.77, flops:104.39, batch-reuse:1
@ 7489 train 4.0066 , allloss: 4.0066, dt: 1329.68ms, fracRes: 0.7132, norm(attn): 0.1367, norm(output): 0.9497, norm(x): 0.8226, norm(y): 0.9879, norm:0.6716, tok/sec: 98573.74, flops:103.47, batch-reuse:1
@ 7490 train 3.9433 , allloss: 3.9434, dt: 1319.41ms, fracRes: 0.7129, norm(attn): 0.1377, norm(output): 0.9497, norm(x): 0.8232, norm(y): 0.9879, norm:0.7223, tok/sec: 99341.22, flops:104.27, batch-reuse:1
@ 7491 train 3.9547 , allloss: 3.9548, dt: 1284.97ms, fracRes: 0.7130, norm(attn): 0.1377, norm(output): 0.9491, norm(x): 0.8222, norm(y): 0.9878, norm:0.5429, tok/sec: 102003.59, flops:107.07, batch-reuse:1
@ 7492 train 4.1560 , allloss: 4.1561, dt: 1277.13ms, fracRes: 0.7132, norm(attn): 0.1367, norm(output): 0.9494, norm(x): 0.8222, norm(y): 0.9877, norm:0.6389, tok/sec: 102630.41, flops:107.72, batch-reuse:1
@ 7493 train 3.9246 , allloss: 3.9247, dt: 1306.11ms, fracRes: 0.7132, norm(attn): 0.1367, norm(output): 0.9497, norm(x): 0.8225, norm(y): 0.9878, norm:0.5623, tok/sec: 100353.28, flops:105.33, batch-reuse:1
@ 7494 train 3.9820 , allloss: 3.9821, dt: 1305.22ms, fracRes: 0.7129, norm(attn): 0.1377, norm(output): 0.9498, norm(x): 0.8227, norm(y): 0.9877, norm:0.6854, tok/sec: 100421.71, flops:105.41, batch-reuse:1
@ 7495 train 3.9475 , allloss: 3.9476, dt: 1283.42ms, fracRes: 0.7129, norm(attn): 0.1387, norm(output): 0.9493, norm(x): 0.8220, norm(y): 0.9875, norm:0.5643, tok/sec: 102127.43, flops:107.20, batch-reuse:1
@ 7496 train 3.9089 , allloss: 3.9090, dt: 1294.47ms, fracRes: 0.7129, norm(attn): 0.1377, norm(output): 0.9491, norm(x): 0.8225, norm(y): 0.9875, norm:0.6087, tok/sec: 101255.54, flops:106.28, batch-reuse:1
@ 7497 train 3.9166 , allloss: 3.9166, dt: 1303.56ms, fracRes: 0.7129, norm(attn): 0.1367, norm(output): 0.9499, norm(x): 0.8241, norm(y): 0.9874, norm:0.6589, tok/sec: 100549.45, flops:105.54, batch-reuse:1
@ 7498 train 3.9080 , allloss: 3.9081, dt: 1291.59ms, fracRes: 0.7130, norm(attn): 0.1387, norm(output): 0.9493, norm(x): 0.8225, norm(y): 0.9878, norm:0.5473, tok/sec: 101481.44, flops:106.52, batch-reuse:1
@ 7499 train 3.9615 , allloss: 3.9616, dt: 1292.20ms, fracRes: 0.7126, norm(attn): 0.1357, norm(output): 0.9497, norm(x): 0.8241, norm(y): 0.9877, norm:0.7245, tok/sec: 101433.43, flops:106.47, batch-reuse:1
@ 7500 train 3.9351 , allloss: 3.9352, dt: 1322.49ms, fracRes: 0.7124, norm(attn): 0.1377, norm(output): 0.9496, norm(x): 0.8240, norm(y): 0.9875, norm:0.5891, tok/sec: 99110.19, flops:104.03, batch-reuse:1
@ 7501 train 3.9313 , allloss: 3.9314, dt: 1333.96ms, fracRes: 0.7124, norm(attn): 0.1367, norm(output): 0.9494, norm(x): 0.8236, norm(y): 0.9877, norm:0.7719, tok/sec: 98257.69, flops:103.13, batch-reuse:1
@ 7502 train 3.9777 , allloss: 3.9778, dt: 1286.72ms, fracRes: 0.7125, norm(attn): 0.1357, norm(output): 0.9497, norm(x): 0.8237, norm(y): 0.9878, norm:0.5964, tok/sec: 101865.36, flops:106.92, batch-reuse:1
@ 7503 train 4.0023 , allloss: 4.0024, dt: 1317.87ms, fracRes: 0.7127, norm(attn): 0.1348, norm(output): 0.9495, norm(x): 0.8234, norm(y): 0.9879, norm:0.6143, tok/sec: 99457.29, flops:104.39, batch-reuse:1
@ 7504 train 4.0017 , allloss: 4.0017, dt: 1329.89ms, fracRes: 0.7128, norm(attn): 0.1357, norm(output): 0.9494, norm(x): 0.8236, norm(y): 0.9878, norm:0.6049, tok/sec: 98558.63, flops:103.45, batch-reuse:1
@ 7505 train 3.9591 , allloss: 3.9591, dt: 1285.89ms, fracRes: 0.7128, norm(attn): 0.1357, norm(output): 0.9496, norm(x): 0.8240, norm(y): 0.9879, norm:0.5666, tok/sec: 101930.65, flops:106.99, batch-reuse:1
@ 7506 train 4.0784 , allloss: 4.0784, dt: 1295.54ms, fracRes: 0.7126, norm(attn): 0.1377, norm(output): 0.9498, norm(x): 0.8241, norm(y): 0.9880, norm:0.7629, tok/sec: 101171.89, flops:106.19, batch-reuse:1
@ 7507 train 3.9961 , allloss: 3.9962, dt: 1290.58ms, fracRes: 0.7129, norm(attn): 0.1357, norm(output): 0.9495, norm(x): 0.8238, norm(y): 0.9879, norm:0.6892, tok/sec: 101560.57, flops:106.60, batch-reuse:1
@ 7508 train 3.9822 , allloss: 3.9824, dt: 1290.36ms, fracRes: 0.7129, norm(attn): 0.1357, norm(output): 0.9494, norm(x): 0.8236, norm(y): 0.9878, norm:0.6813, tok/sec: 101577.80, flops:106.62, batch-reuse:1
@ 7509 train 3.9554 , allloss: 3.9555, dt: 1306.75ms, fracRes: 0.7125, norm(attn): 0.1367, norm(output): 0.9491, norm(x): 0.8234, norm(y): 0.9877, norm:0.5917, tok/sec: 100304.06, flops:105.28, batch-reuse:1
@ 7510 train 3.9359 , allloss: 3.9359, dt: 1296.52ms, fracRes: 0.7122, norm(attn): 0.1377, norm(output): 0.9499, norm(x): 0.8250, norm(y): 0.9876, norm:0.6345, tok/sec: 101095.11, flops:106.11, batch-reuse:1
@ 7511 train 3.9215 , allloss: 3.9216, dt: 1300.54ms, fracRes: 0.7125, norm(attn): 0.1377, norm(output): 0.9497, norm(x): 0.8240, norm(y): 0.9877, norm:0.5788, tok/sec: 100783.12, flops:105.79, batch-reuse:1
@ 7512 train 3.9918 , allloss: 3.9918, dt: 1282.23ms, fracRes: 0.7128, norm(attn): 0.1357, norm(output): 0.9498, norm(x): 0.8242, norm(y): 0.9875, norm:0.5990, tok/sec: 102222.15, flops:107.30, batch-reuse:1
@ 7513 train 3.9679 , allloss: 3.9679, dt: 1302.74ms, fracRes: 0.7128, norm(attn): 0.1367, norm(output): 0.9494, norm(x): 0.8235, norm(y): 0.9877, norm:0.5873, tok/sec: 100612.92, flops:105.61, batch-reuse:1
@ 7514 train 4.0740 , allloss: 4.0743, dt: 1311.05ms, fracRes: 0.7131, norm(attn): 0.1357, norm(output): 0.9499, norm(x): 0.8232, norm(y): 0.9878, norm:0.8153, tok/sec: 99974.91, flops:104.94, batch-reuse:1
@ 7515 train 3.9587 , allloss: 3.9587, dt: 1313.16ms, fracRes: 0.7131, norm(attn): 0.1357, norm(output): 0.9495, norm(x): 0.8236, norm(y): 0.9880, norm:0.7067, tok/sec: 99813.92, flops:104.77, batch-reuse:1
@ 7516 train 3.9671 , allloss: 3.9672, dt: 1305.72ms, fracRes: 0.7131, norm(attn): 0.1357, norm(output): 0.9495, norm(x): 0.8235, norm(y): 0.9881, norm:0.6542, tok/sec: 100382.98, flops:105.37, batch-reuse:1
@ 7517 train 3.9182 , allloss: 3.9183, dt: 1306.07ms, fracRes: 0.7128, norm(attn): 0.1367, norm(output): 0.9493, norm(x): 0.8234, norm(y): 0.9879, norm:0.6722, tok/sec: 100355.82, flops:105.34, batch-reuse:1
@ 7518 train 3.9568 , allloss: 3.9569, dt: 1318.97ms, fracRes: 0.7127, norm(attn): 0.1367, norm(output): 0.9494, norm(x): 0.8236, norm(y): 0.9876, norm:0.5539, tok/sec: 99374.46, flops:104.31, batch-reuse:1
@ 7519 train 3.9200 , allloss: 3.9200, dt: 1294.04ms, fracRes: 0.7126, norm(attn): 0.1367, norm(output): 0.9499, norm(x): 0.8250, norm(y): 0.9872, norm:0.6562, tok/sec: 101289.27, flops:106.32, batch-reuse:1
@ 7520 train 4.2011 , allloss: 4.2011, dt: 1281.64ms, fracRes: 0.7131, norm(attn): 0.1338, norm(output): 0.9504, norm(x): 0.8248, norm(y): 0.9873, norm:0.8009, tok/sec: 102268.64, flops:107.34, batch-reuse:1
@ 7521 train 3.6974 , allloss: 3.6974, dt: 1288.61ms, fracRes: 0.7134, norm(attn): 0.1387, norm(output): 0.9489, norm(x): 0.8218, norm(y): 0.9878, norm:1.1514, tok/sec: 101715.62, flops:106.76, batch-reuse:1
@ 7522 train 3.9956 , allloss: 3.9960, dt: 1280.23ms, fracRes: 0.7132, norm(attn): 0.1377, norm(output): 0.9495, norm(x): 0.8231, norm(y): 0.9875, norm:0.6878, tok/sec: 102381.37, flops:107.46, batch-reuse:1
@ 7523 train 3.9230 , allloss: 3.9231, dt: 1286.97ms, fracRes: 0.7131, norm(attn): 0.1387, norm(output): 0.9490, norm(x): 0.8226, norm(y): 0.9877, norm:0.8397, tok/sec: 101845.48, flops:106.90, batch-reuse:1
@ 7524 train 3.9866 , allloss: 3.9866, dt: 1284.44ms, fracRes: 0.7131, norm(attn): 0.1396, norm(output): 0.9492, norm(x): 0.8228, norm(y): 0.9879, norm:0.6204, tok/sec: 102045.70, flops:107.11, batch-reuse:1
@ 7525 train 3.8883 , allloss: 3.8884, dt: 1295.82ms, fracRes: 0.7134, norm(attn): 0.1377, norm(output): 0.9493, norm(x): 0.8229, norm(y): 0.9877, norm:0.8395, tok/sec: 101150.19, flops:106.17, batch-reuse:1
@ 7526 train 4.0111 , allloss: 4.0112, dt: 1294.86ms, fracRes: 0.7132, norm(attn): 0.1357, norm(output): 0.9500, norm(x): 0.8240, norm(y): 0.9873, norm:0.6708, tok/sec: 101224.50, flops:106.25, batch-reuse:1
@ 7527 train 3.9681 , allloss: 3.9685, dt: 1288.94ms, fracRes: 0.7130, norm(attn): 0.1377, norm(output): 0.9500, norm(x): 0.8235, norm(y): 0.9873, norm:0.7317, tok/sec: 101689.75, flops:106.74, batch-reuse:1
@ 7528 train 3.9697 , allloss: 3.9698, dt: 1299.21ms, fracRes: 0.7130, norm(attn): 0.1357, norm(output): 0.9499, norm(x): 0.8236, norm(y): 0.9873, norm:0.5630, tok/sec: 100886.07, flops:105.89, batch-reuse:1
@ 7529 train 3.8594 , allloss: 3.8598, dt: 1286.03ms, fracRes: 0.7130, norm(attn): 0.1396, norm(output): 0.9492, norm(x): 0.8226, norm(y): 0.9877, norm:0.6904, tok/sec: 101920.18, flops:106.98, batch-reuse:1
@ 7530 train 3.9209 , allloss: 3.9209, dt: 1272.66ms, fracRes: 0.7133, norm(attn): 0.1377, norm(output): 0.9495, norm(x): 0.8236, norm(y): 0.9875, norm:0.5935, tok/sec: 102990.53, flops:108.10, batch-reuse:1
@ 7531 train 4.1216 , allloss: 4.1216, dt: 1274.90ms, fracRes: 0.7135, norm(attn): 0.1387, norm(output): 0.9492, norm(x): 0.8221, norm(y): 0.9881, norm:0.9924, tok/sec: 102809.73, flops:107.91, batch-reuse:1
@ 7532 train 4.0735 , allloss: 4.0735, dt: 1284.18ms, fracRes: 0.7131, norm(attn): 0.1377, norm(output): 0.9499, norm(x): 0.8239, norm(y): 0.9876, norm:1.1705, tok/sec: 102066.66, flops:107.13, batch-reuse:1
@ 7533 train 3.9260 , allloss: 3.9260, dt: 1288.94ms, fracRes: 0.7130, norm(attn): 0.1377, norm(output): 0.9498, norm(x): 0.8242, norm(y): 0.9874, norm:0.8413, tok/sec: 101689.44, flops:106.74, batch-reuse:1
@ 7534 train 3.9197 , allloss: 3.9200, dt: 1281.15ms, fracRes: 0.7130, norm(attn): 0.1377, norm(output): 0.9494, norm(x): 0.8236, norm(y): 0.9872, norm:0.7500, tok/sec: 102308.40, flops:107.39, batch-reuse:1
@ 7535 train 3.9266 , allloss: 3.9267, dt: 1318.42ms, fracRes: 0.7134, norm(attn): 0.1377, norm(output): 0.9492, norm(x): 0.8223, norm(y): 0.9873, norm:0.8261, tok/sec: 99416.04, flops:104.35, batch-reuse:1
@ 7536 train 3.9018 , allloss: 3.9018, dt: 1296.91ms, fracRes: 0.7132, norm(attn): 0.1377, norm(output): 0.9498, norm(x): 0.8241, norm(y): 0.9873, norm:0.7934, tok/sec: 101065.10, flops:106.08, batch-reuse:1
@ 7537 train 3.8977 , allloss: 3.8977, dt: 1295.04ms, fracRes: 0.7140, norm(attn): 0.1348, norm(output): 0.9497, norm(x): 0.8230, norm(y): 0.9875, norm:1.0848, tok/sec: 101210.43, flops:106.23, batch-reuse:1
@ 7538 train 3.8563 , allloss: 3.8565, dt: 1310.65ms, fracRes: 0.7134, norm(attn): 0.1377, norm(output): 0.9491, norm(x): 0.8231, norm(y): 0.9870, norm:1.2189, tok/sec: 100005.53, flops:104.97, batch-reuse:1
@ 7539 train 4.0239 , allloss: 4.0241, dt: 1297.49ms, fracRes: 0.7136, norm(attn): 0.1387, norm(output): 0.9491, norm(x): 0.8224, norm(y): 0.9871, norm:0.9759, tok/sec: 101019.47, flops:106.03, batch-reuse:1
@ 7540 train 3.8635 , allloss: 3.8636, dt: 1301.02ms, fracRes: 0.7130, norm(attn): 0.1387, norm(output): 0.9496, norm(x): 0.8239, norm(y): 0.9870, norm:0.9329, tok/sec: 100745.54, flops:105.75, batch-reuse:1
@ 7541 train 4.0157 , allloss: 4.0158, dt: 1277.98ms, fracRes: 0.7129, norm(attn): 0.1377, norm(output): 0.9499, norm(x): 0.8244, norm(y): 0.9871, norm:0.7837, tok/sec: 102561.87, flops:107.65, batch-reuse:1
@ 7542 train 3.9675 , allloss: 3.9675, dt: 1273.95ms, fracRes: 0.7134, norm(attn): 0.1367, norm(output): 0.9499, norm(x): 0.8235, norm(y): 0.9872, norm:0.7387, tok/sec: 102886.00, flops:107.99, batch-reuse:1
@ 7543 train 4.0946 , allloss: 4.0946, dt: 1278.75ms, fracRes: 0.7137, norm(attn): 0.1348, norm(output): 0.9503, norm(x): 0.8243, norm(y): 0.9871, norm:0.7418, tok/sec: 102499.72, flops:107.59, batch-reuse:1
@ 7544 train 3.9302 , allloss: 3.9303, dt: 1314.93ms, fracRes: 0.7138, norm(attn): 0.1348, norm(output): 0.9498, norm(x): 0.8237, norm(y): 0.9871, norm:0.6568, tok/sec: 99679.92, flops:104.63, batch-reuse:1
@ 7545 train 3.9553 , allloss: 3.9553, dt: 1326.83ms, fracRes: 0.7136, norm(attn): 0.1387, norm(output): 0.9493, norm(x): 0.8225, norm(y): 0.9871, norm:0.6234, tok/sec: 98785.52, flops:103.69, batch-reuse:1
@ 7546 train 3.9235 , allloss: 3.9246, dt: 1312.72ms, fracRes: 0.7132, norm(attn): 0.1377, norm(output): 0.9494, norm(x): 0.8239, norm(y): 0.9869, norm:0.6725, tok/sec: 99847.44, flops:104.80, batch-reuse:1
@ 7547 train 3.9009 , allloss: 3.9011, dt: 1285.00ms, fracRes: 0.7132, norm(attn): 0.1396, norm(output): 0.9498, norm(x): 0.8242, norm(y): 0.9868, norm:0.5701, tok/sec: 102001.78, flops:107.06, batch-reuse:1
@ 7548 train 3.9335 , allloss: 3.9336, dt: 1292.04ms, fracRes: 0.7131, norm(attn): 0.1387, norm(output): 0.9501, norm(x): 0.8254, norm(y): 0.9869, norm:0.7257, tok/sec: 101445.47, flops:106.48, batch-reuse:1
@ 7549 train 3.9129 , allloss: 3.9130, dt: 1292.40ms, fracRes: 0.7136, norm(attn): 0.1367, norm(output): 0.9497, norm(x): 0.8238, norm(y): 0.9872, norm:0.6355, tok/sec: 101417.73, flops:106.45, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0014, -0.0281, -0.0081,  ..., -0.0115,  0.0085,  0.0277],
        [ 0.0129, -0.0336, -0.0192,  ..., -0.0601, -0.0131,  0.0136],
        [ 0.0093, -0.0427,  0.0021,  ..., -0.0179,  0.0035,  0.0267],
        ...,
        [ 0.0308,  0.0515, -0.0168,  ..., -0.0015, -0.0269,  0.0175],
        [-0.0216, -0.0084,  0.0477,  ...,  0.0096,  0.0422,  0.0119],
        [ 0.0011, -0.0169,  0.0409,  ..., -0.0137,  0.0472, -0.0195]], device='cuda:0', requires_grad=True)
K: tensor([ 4.4688, -2.9062,  2.4375,  3.0625, -4.2500,  2.5625,  0.2227,  5.6875, -4.6875, -0.4785, -2.3281, -3.7344,  4.7188, -3.3281,  1.0156, -0.1855, -0.1572, -4.2812,  4.7500, -5.4375,  5.0312,  2.9062, -5.5000,  0.0903,  0.0615, -0.8672,  3.1875, -2.5781, -4.7812, -3.4062,  5.8438,  0.9570,
         2.9219,  3.6719,  0.0903, -2.9531,  2.7031,  2.6562, -2.5469, -3.0938,  3.7969, -1.2891, -1.4766, -1.0312, -3.8750, -1.4297,  0.7227,  4.1562, -0.5156, -0.0488,  3.5156, -4.4062, -5.0625,  4.6875,  2.7656, -1.1797,  2.9062,  1.9297,  0.2480, -2.6719, -1.1641,  0.9883, -0.6562, -2.0312],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[    -0.0636,      0.0658,      0.0025,  ...,     -0.0161,     -0.0252,     -0.0042],
        [    -0.0489,      0.0754,      0.0074,  ...,      0.0204,     -0.0027,      0.0164],
        [    -0.0580,      0.0636,     -0.0089,  ...,     -0.0400,     -0.0533,      0.0111],
        ...,
        [     0.0309,     -0.0060,     -0.0058,  ...,      0.0116,     -0.0113,      0.0182],
        [    -0.0273,      0.0032,     -0.0188,  ...,      0.0436,      0.0037,      0.0255],
        [    -0.0129,      0.0284,      0.0048,  ...,      0.0064,     -0.0001,     -0.0457]], device='cuda:0', requires_grad=True)
Q: tensor([-2.0625,  5.7188, -6.0312, -3.9375,  3.5781, -4.3438, -2.3125, -4.5625,  4.9062, -4.6875,  1.8516,  3.8438, -5.7812,  4.2500, -5.9062,  3.3594,  3.5156,  4.5625, -3.8750,  5.5938, -3.5312, -4.7500,  5.2188, -4.0938, -2.0156, -4.1562, -5.4375,  2.3281,  3.9844,  6.9688, -4.4375, -5.2188,
        -7.2500, -4.0938, -2.5469,  2.5625, -7.8750, -3.4531,  4.8750,  2.5312, -2.7500,  0.3887,  4.7812, -0.8516,  4.7188,  2.8281, -4.5312, -5.5938,  5.7812,  0.9258, -3.2969,  5.5312,  4.3750, -4.6250, -2.6719,  0.4688, -2.6094,  2.3594, -1.2578,  8.0625,  1.5000, -3.8906,  4.3438,  5.5625],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[   0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000],
        [   0.0000,   63.2500,   65.0000,   64.5000,   48.5000,   49.2500,   39.7500,   57.0000,   45.0000,   43.0000,   43.7500,   43.0000,   46.2500,   44.2500,   47.0000],
        [   0.0000,  -83.5000, -103.5000, -104.5000,  -91.0000,  -89.0000,  -72.5000,  -76.0000,  -82.0000,  -72.5000,  -86.0000,  -66.0000,  -59.7500,  -82.0000,  -81.5000],
        [   0.0000, -109.5000, -133.0000, -137.0000, -115.5000, -113.5000,  -91.5000, -101.5000, -104.0000,  -93.5000, -107.5000,  -86.0000,  -80.0000, -104.0000, -105.0000],
        [   0.0000, -130.0000, -157.0000, -161.0000, -136.0000, -135.0000, -108.5000, -116.5000, -122.5000, -109.0000, -128.0000,  -98.0000,  -89.5000, -123.5000, -123.5000],
        [   0.0000, -103.0000, -125.5000, -128.0000, -110.0000, -108.5000,  -87.5000,  -93.5000,  -99.0000,  -87.5000, -103.0000,  -79.0000,  -72.5000,  -99.5000,  -99.0000],
        [   0.0000, -102.0000, -124.0000, -126.5000, -107.0000, -106.0000,  -85.0000,  -92.5000,  -96.5000,  -85.5000, -100.0000,  -78.0000,  -71.0000,  -97.0000,  -97.0000],
        [   0.0000,  -70.0000,  -88.5000,  -90.5000,  -80.0000,  -77.0000,  -63.7500,  -67.5000,  -72.0000,  -64.0000,  -74.5000,  -58.7500,  -53.5000,  -71.5000,  -71.5000],
        [   0.0000, -108.5000, -132.0000, -135.0000, -114.5000, -113.5000,  -91.5000,  -98.0000, -103.0000,  -91.0000, -107.5000,  -82.5000,  -74.5000, -103.5000, -103.5000],
        [   0.0000, -105.0000, -124.0000, -126.5000, -106.0000, -105.0000,  -84.5000,  -94.5000,  -96.0000,  -86.0000,  -99.0000,  -79.0000,  -73.5000,  -96.0000,  -97.5000],
        [   0.0000, -118.5000, -142.0000, -146.0000, -121.5000, -121.0000,  -96.0000, -105.0000, -109.0000,  -97.0000, -113.5000,  -87.5000,  -79.5000, -110.0000, -110.5000],
        [   0.0000,  -75.5000,  -90.5000,  -92.0000,  -78.0000,  -76.5000,  -61.7500,  -68.5000,  -70.5000,  -63.0000,  -72.5000,  -58.2500,  -54.2500,  -70.5000,  -71.0000],
        [   0.0000,  -57.5000,  -73.0000,  -74.5000,  -66.0000,  -63.2500,  -52.5000,  -55.0000,  -59.5000,  -52.5000,  -61.5000,  -48.5000,  -44.2500,  -59.2500,  -58.7500],
        [   0.0000, -110.0000, -132.0000, -136.0000, -114.0000, -113.5000,  -90.5000,  -98.0000, -103.0000,  -91.0000, -107.0000,  -82.0000,  -74.5000, -103.5000, -103.5000],
        [   0.0000,  -94.5000, -113.5000, -116.5000,  -97.0000,  -96.0000,  -77.0000,  -85.5000,  -87.0000,  -78.5000,  -90.5000,  -71.5000,  -66.0000,  -87.5000,  -89.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9167],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6836,     0.3164,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9570,     0.0167,     0.0277,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9453,     0.0063,     0.0000,     0.0488,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0007,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0041,     0.0000,     0.0000,     0.0000,     0.0025,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9609,     0.0337,     0.0000,     0.0000,     0.0000,     0.0023,     0.0022,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8438,     0.1167,     0.0006,     0.0001,     0.0003,     0.0009,     0.0035,     0.0356,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0038,     0.0000,     0.0000,     0.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8828,     0.0327,     0.0009,     0.0001,     0.0000,     0.0008,     0.0005,     0.0009,     0.0001,     0.0815,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0012,     0.0000,     0.0000,     0.0000,     0.0002,     0.0003,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9297,     0.0050,     0.0001,     0.0001,     0.0013,     0.0030,     0.0004,     0.0003,     0.0026,     0.0006,     0.0008,     0.0576,     0.0000,     0.0000,     0.0000],
        [    0.6484,     0.0806,     0.0000,     0.0007,     0.0044,     0.0155,     0.0076,     0.0332,     0.0084,     0.0000,     0.0015,     0.0005,     0.2002,     0.0000,     0.0000],
        [    0.9805,     0.0166,     0.0000,     0.0000,     0.0000,     0.0007,     0.0001,     0.0001,     0.0006,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000],
        [    0.8516,     0.0708,     0.0002,     0.0001,     0.0000,     0.0014,     0.0035,     0.0006,     0.0067,     0.0016,     0.0012,     0.0000,     0.0008,     0.0010,     0.0605]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[    -0.0558,     -0.0148,     -0.0116,  ...,     -0.0193,      0.0106,     -0.0029],
        [     0.0093,     -0.0000,      0.0304,  ...,     -0.0253,     -0.0877,      0.0001],
        [     0.0074,     -0.0076,     -0.0233,  ...,     -0.0111,      0.0339,      0.0270],
        ...,
        [     0.0355,      0.0241,      0.0441,  ...,      0.0258,      0.0756,      0.0094],
        [     0.0016,      0.0051,     -0.0681,  ...,     -0.0392,      0.0348,      0.0650],
        [    -0.0588,     -0.0244,     -0.0311,  ...,     -0.0193,     -0.0164,      0.0405]], device='cuda:0', requires_grad=True)
K: tensor([-1.3281, -1.5469, -0.7812, -0.0048, -0.9336, -1.0312, -2.6875, -0.6641, -2.3750, -0.6875,  1.2266,  0.8047,  0.7891,  2.7656,  0.2754,  0.0359, -0.1611, -1.0078, -1.1641, -0.6562, -1.3125, -2.6406, -0.8633, -0.5156,  1.0469, -0.6172, -1.7969, -2.8594,  1.9141,  1.1953,  0.0352, -0.4863,
        -0.6289, -3.5312, -0.9570, -1.7578, -0.7773,  1.3203,  0.7695, -0.4082, -1.5234,  0.9570, -0.1514,  3.7344, -0.5234, -2.4844, -2.0469, -0.5273, -1.7344, -1.6250,  1.6953,  0.0352,  1.1328, -0.0767,  0.0510, -0.6289,  0.9141,  1.8516,  1.3906, -3.1094, -3.1719, -0.2295,  2.5156, -1.4688],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0284,  0.0278, -0.0072,  ..., -0.0100,  0.0352, -0.0226],
        [-0.0012,  0.0433,  0.0123,  ..., -0.0574, -0.0293,  0.0093],
        [-0.0114, -0.0048,  0.0243,  ...,  0.0145, -0.0144,  0.0102],
        ...,
        [ 0.0227, -0.0009, -0.0110,  ..., -0.0096,  0.0807,  0.0167],
        [ 0.0243,  0.0065, -0.0009,  ...,  0.0240,  0.0021, -0.0009],
        [-0.0322,  0.0083, -0.0757,  ..., -0.0352,  0.0159,  0.0468]], device='cuda:0', requires_grad=True)
Q: tensor([-0.6523,  0.2520,  2.5312, -1.5469,  3.4375, -0.7852,  1.7812, -1.8203, -2.4688,  1.2031, -2.3594,  1.7891, -1.0781, -3.6719,  3.4375,  0.4258,  3.1094, -0.0452, -1.8594,  0.2930,  1.3984,  0.5938,  3.9688, -0.5430, -0.7734,  1.2188, -1.3906,  0.1689, -0.0811, -2.5000, -0.5352,  1.9922,
        -1.6172,  1.8672, -0.4375,  1.3359,  0.2910,  4.4062, -0.0952,  0.4980, -0.3066,  0.7852, -2.0938, -1.2188,  2.9375, -1.6875,  0.2637, -3.2812,  3.6250, -2.9531,  0.8789,  0.8164, -0.8438,  2.3281, -0.6641, -3.7031,  0.2266, -2.6094, -0.2695, -0.8477, -2.3125,  1.4062, -1.3125, -0.2139],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000,  -0.7656,  -9.3125,  -6.6562,  -7.7500,  -5.4062,  -5.0938,  -5.0938,  -5.5312, -10.2500,  -8.3750,  -7.2812,  -6.4688,  -5.5625,  -9.8750],
        [  0.0000,  -4.0312,  -3.5469,  -8.3750,  -5.5938,  -7.1562,  -6.0625,  -4.9062,  -7.5625,  -7.8125,  -8.2500, -10.0625,  -9.3125,  -8.5000,  -9.9375],
        [  0.0000,  -5.0000, -11.0625,  -2.9531,  -8.1875,  -6.9375, -10.0625,  -8.6250,  -9.0000, -10.6875, -10.0000, -11.0625,  -7.7500, -10.0000, -12.4375],
        [  0.0000,  -7.2188, -11.1250, -11.4375, -10.8750,  -9.5625, -11.5000, -11.1250, -13.5625, -13.3125, -13.8125, -15.7500, -10.2500, -14.1875, -16.7500],
        [  0.0000,  -5.5000, -13.9375, -11.0625, -11.6875,  -6.0000,  -8.3125, -10.4375, -10.0625, -12.0625, -13.0000, -14.0625,  -9.8750, -11.3750, -14.9375],
        [  0.0000,  -3.3594, -11.8125, -12.3750,  -9.9375,  -6.0312,  -6.0938,  -7.1875,  -9.0000, -13.1250, -10.4375, -12.1875,  -7.3125, -10.8750, -12.9375],
        [  0.0000,  -1.9766,  -7.2188,  -8.6875,  -7.9062,  -6.8125,  -5.4688,  -3.1562,  -8.1875,  -8.6250,  -8.0000, -11.8125,  -4.8750,  -8.1250, -10.5000],
        [  0.0000,  -5.5625, -13.3750, -12.3125, -12.3125,  -8.6250, -10.5625, -11.6250, -10.8750, -12.6250, -13.6250, -14.2500, -10.4375, -10.1875, -13.6250],
        [  0.0000,  -3.2969,  -6.9062,  -9.0000, -10.5625,  -7.0000,  -7.4375,  -6.8438,  -9.0625,  -2.3750, -10.1250, -11.5000,  -9.6875, -10.0000, -11.0625],
        [  0.0000,  -6.7188, -11.0000, -10.1250, -10.4375,  -8.3750,  -8.1875,  -9.1250, -11.3125, -10.0625, -13.3750, -10.6875,  -9.7500, -11.9375, -12.6250],
        [  0.0000,  -5.2188,  -9.3125,  -9.1250,  -6.5625,  -5.7500,  -7.8438,  -8.0625,  -5.8750,  -7.3750,  -7.0000,  -2.7812,  -5.8125,  -7.8438, -10.0625],
        [  0.0000,  -2.0781,  -9.6875,  -6.9062,  -5.0000,  -3.7344,  -4.4375,  -2.9688,  -4.3438,  -9.6875,  -6.0625,  -7.1562,  -1.1719,  -5.0938,  -9.0000],
        [  0.0000,  -4.0625, -11.5625, -11.7500,  -9.8750,  -7.2812,  -9.6875,  -9.1875,  -7.4062, -11.7500, -11.5625, -12.9375,  -9.2500, -10.8125, -11.5000],
        [  0.0000,  -2.4844,  -8.5625,  -9.4375,  -9.8125,  -6.4062,  -5.5000,  -7.2188,  -4.8438,  -6.2812,  -6.5625, -11.9375,  -6.9375,  -6.7500,  -2.6406]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7559],
        [0.7100],
        [0.5545],
        [0.6716],
        [0.5799],
        [0.5722],
        [0.4811],
        [0.4813],
        [0.4150],
        [0.4569],
        [0.3872],
        [0.2412],
        [0.4153],
        [0.3389]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0217, -0.0031,  0.0059,  ...,  0.0119, -0.0544, -0.0053],
        [-0.0393, -0.0228,  0.0057,  ...,  0.0250, -0.0505, -0.0202],
        [ 0.0162,  0.0100, -0.0084,  ...,  0.0326,  0.0165, -0.0036],
        ...,
        [-0.0071, -0.0114, -0.0051,  ...,  0.0421, -0.0229, -0.0099],
        [-0.0205, -0.0128,  0.0125,  ...,  0.0131,  0.0018, -0.0035],
        [ 0.0032, -0.0282, -0.0232,  ...,  0.0412, -0.0265, -0.0460]], device='cuda:0', requires_grad=True)
K: tensor([ 3.0625, -3.9219, -3.1250, -3.7031,  4.7188, -3.7656,  4.6250,  3.6250,  2.6250, -4.0938,  3.0000, -3.7969, -4.2188,  4.3125,  2.3594, -3.0156,  2.5938,  3.9375, -0.3906, -3.9531,  4.2812,  4.7812,  4.1875, -2.2969, -4.1875,  4.9062, -3.0938, -3.9688, -3.2031,  2.9375, -4.1562,  2.7969,
         3.5156, -2.9062, -3.8594,  1.6484,  1.8672, -3.5156,  3.9375, -3.6406, -3.4375,  2.2344,  3.4844, -3.3125, -2.2188,  3.5312, -3.8750,  3.0938, -4.5000, -4.4688, -4.0312,  3.0156,  2.6250,  3.7969,  3.3438, -4.2812, -4.3125,  2.8750, -1.7734, -2.7031,  3.2031,  3.6250, -1.9844,  2.2969],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[     0.0093,      0.0076,      0.0090,  ...,     -0.0001,      0.0144,      0.0302],
        [     0.0355,      0.0204,     -0.0155,  ...,     -0.0308,      0.0019,      0.0057],
        [    -0.0016,     -0.0206,     -0.0040,  ...,     -0.0194,      0.0345,      0.0208],
        ...,
        [    -0.0119,     -0.0065,     -0.0413,  ...,     -0.0101,      0.0332,      0.0046],
        [     0.0170,      0.0019,     -0.0162,  ...,      0.0184,     -0.0173,     -0.0107],
        [    -0.0033,      0.0023,      0.0046,  ...,     -0.0189,     -0.0008,      0.0404]], device='cuda:0', requires_grad=True)
Q: tensor([-2.9375,  3.8906,  4.0625,  4.1562, -5.0625,  4.5938, -4.1250, -4.7188, -3.1406,  3.9062, -4.5312,  4.6875,  4.0938, -4.0938, -3.5000,  4.5312, -2.4219, -5.3125,  0.7656,  4.8438, -5.0938, -4.7812, -5.1250,  2.4062,  5.3750, -5.0000,  3.3594,  4.3750,  3.7188, -4.3125,  4.0938, -3.5156,
        -4.0625,  2.9062,  4.4375, -2.2188, -1.6641,  2.9844, -5.5625,  3.4531,  3.8750, -2.2188, -3.8438,  4.1562,  2.3594, -4.8750,  4.0312, -3.3281,  4.0000,  5.4375,  5.4375, -4.9375, -3.2188, -4.8750, -3.3438,  4.9375,  4.5625, -2.7656,  2.4375,  3.4062, -3.7500, -4.8438,  1.8672, -2.2812],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[   0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000],
        [   0.0000,  -46.2500,  -55.7500,  -99.5000,  -77.5000,  -90.5000,  -71.0000,  -90.5000,  -70.5000,  -80.5000,  -72.0000,  -71.0000,  -80.0000,  -69.5000,  -76.5000],
        [   0.0000,  -54.2500,  -66.5000, -119.0000,  -91.5000, -108.0000,  -84.0000, -109.0000,  -84.0000,  -97.0000,  -85.5000,  -84.5000,  -95.5000,  -83.0000,  -91.5000],
        [   0.0000,  -93.0000, -114.0000, -206.0000, -157.0000, -185.0000, -144.0000, -188.0000, -144.0000, -168.0000, -147.0000, -145.0000, -165.0000, -143.0000, -156.0000],
        [   0.0000,  -65.0000,  -79.0000, -142.0000, -110.0000, -129.0000, -100.5000, -129.0000, -100.0000, -115.0000, -102.0000, -100.5000, -114.0000,  -99.0000, -108.0000],
        [   0.0000,  -79.0000,  -96.5000, -175.0000, -134.0000, -159.0000, -123.5000, -159.0000, -122.5000, -142.0000, -125.0000, -123.0000, -140.0000, -121.0000, -133.0000],
        [   0.0000,  -60.5000,  -73.5000, -133.0000, -103.0000, -121.0000,  -94.5000, -121.5000,  -94.0000, -108.0000,  -95.5000,  -94.0000, -107.0000,  -93.0000, -101.5000],
        [   0.0000,  -83.5000, -102.5000, -186.0000, -142.0000, -168.0000, -131.0000, -171.0000, -130.0000, -151.0000, -132.0000, -130.0000, -149.0000, -128.0000, -141.0000],
        [   0.0000,  -60.5000,  -74.0000, -134.0000, -102.5000, -121.0000,  -94.0000, -122.0000,  -94.0000, -108.5000,  -95.5000,  -94.0000, -107.5000,  -93.0000, -101.5000],
        [   0.0000,  -70.0000,  -86.0000, -155.0000, -118.5000, -140.0000, -108.5000, -141.0000, -108.0000, -126.5000, -110.5000, -108.5000, -124.5000, -107.0000, -118.0000],
        [   0.0000,  -63.2500,  -77.0000, -139.0000, -107.0000, -126.0000,  -98.0000, -126.5000,  -98.0000, -113.0000, -100.0000,  -98.0000, -111.5000,  -97.0000, -106.0000],
        [   0.0000,  -60.5000,  -74.0000, -133.0000, -101.5000, -120.0000,  -93.5000, -121.5000,  -93.0000, -108.0000,  -95.0000,  -93.5000, -107.0000,  -92.0000, -101.0000],
        [   0.0000,  -72.5000,  -88.5000, -161.0000, -122.5000, -145.0000, -112.5000, -147.0000, -112.0000, -130.0000, -114.5000, -112.5000, -129.0000, -110.5000, -122.0000],
        [   0.0000,  -60.0000,  -73.5000, -133.0000, -102.5000, -120.5000,  -93.5000, -121.0000,  -93.5000, -108.0000,  -95.5000,  -93.5000, -106.5000,  -92.5000, -101.0000],
        [   0.0000,  -65.5000,  -80.5000, -146.0000, -112.0000, -132.0000, -103.0000, -133.0000, -102.0000, -119.0000, -104.0000, -102.5000, -117.0000, -101.0000, -111.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[     0.0309,      0.0138,      0.0158,  ...,      0.0047,     -0.0010,     -0.0189],
        [    -0.0029,      0.0148,      0.0167,  ...,      0.0231,      0.0049,      0.0221],
        [     0.0246,      0.0037,     -0.0008,  ...,     -0.0007,      0.0296,      0.0021],
        ...,
        [    -0.0168,     -0.0222,     -0.0113,  ...,      0.0100,     -0.0195,      0.0085],
        [    -0.0068,      0.0050,     -0.0165,  ...,     -0.0136,     -0.0230,     -0.0196],
        [     0.0182,     -0.0001,     -0.0036,  ...,      0.0109,      0.0096,      0.0048]], device='cuda:0', requires_grad=True)
K: tensor([-1.8984,  0.6562, -1.9922,  1.6406, -1.4922, -2.2188, -1.1406,  2.1875, -0.5859, -0.6484,  0.4004,  0.4688, -1.1484, -2.2188,  1.7891,  1.5781,  2.2188, -1.9062, -2.1719,  1.4766,  1.6797, -1.6875, -2.3594,  2.5156, -1.2734,  2.3281, -1.0469, -1.6250,  0.8750, -1.4531,  0.2617, -1.7031,
        -1.0938, -1.9766,  2.0625, -1.9297, -1.7109, -0.0618,  1.9766,  1.4453, -2.0156, -1.0625,  0.4805, -1.8125,  1.5469,  2.3281, -0.0205, -1.5234, -2.1562,  1.7500,  2.6562,  0.9766,  0.6250, -1.9844, -0.8477, -1.6172,  1.5938,  1.7891, -1.7969, -2.2031, -1.1172,  2.2031, -0.1973, -2.3125],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0228,  0.0107, -0.0045,  ...,  0.0142, -0.0171, -0.0154],
        [-0.0082, -0.0072,  0.0058,  ...,  0.0067, -0.0134, -0.0012],
        [ 0.0018,  0.0086, -0.0015,  ..., -0.0011,  0.0132,  0.0020],
        ...,
        [-0.0198,  0.0048, -0.0071,  ..., -0.0096,  0.0199,  0.0072],
        [-0.0258,  0.0234, -0.0039,  ...,  0.0031,  0.0017, -0.0207],
        [ 0.0021, -0.0086, -0.0310,  ...,  0.0013, -0.0033,  0.0123]], device='cuda:0', requires_grad=True)
Q: tensor([ 2.6094, -1.3672,  2.0000, -0.5742,  0.5586,  2.6562,  1.2812, -3.0938, -0.5078, -0.0532,  0.0447, -0.1680,  1.6875,  1.5234, -2.1094, -1.9453, -2.6250,  2.0938,  1.4375, -3.0156, -1.7422,  2.6250,  2.9688, -2.5625,  2.3125, -2.7344,  0.3223,  1.1562,  0.2148,  0.8633,  0.1826,  1.7578,
         0.2227,  2.7500, -1.7500,  2.1719,  2.5156, -0.7617, -2.3281, -2.1719,  3.1875, -0.6250, -1.2344,  2.5625, -1.6875, -1.8828, -1.4141,  0.8750,  0.9883, -1.9375, -2.2656,  0.1826,  1.3438,  2.6406,  1.0391,  2.5625, -3.0781, -2.1250,  1.8594,  1.4766,  0.6211, -2.9844,  2.0781,  1.8594],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000, -14.9375, -17.8750, -13.3750, -14.3125, -14.9375, -14.2500, -15.3750, -15.6875, -15.6250, -16.7500, -17.1250, -17.5000, -16.1250, -18.6250],
        [  0.0000, -18.2500, -22.0000, -16.5000, -17.7500, -18.5000, -17.6250, -19.0000, -19.5000, -19.3750, -20.7500, -21.2500, -21.6250, -20.1250, -23.2500],
        [  0.0000, -13.8125, -16.5000, -12.3750, -13.3750, -13.8125, -13.3750, -14.2500, -14.5625, -14.3750, -15.5000, -15.7500, -16.0000, -15.0625, -17.2500],
        [  0.0000, -14.4375, -17.3750, -13.0625, -14.1875, -14.6875, -14.1250, -15.0625, -15.4375, -15.2500, -16.5000, -16.7500, -17.1250, -16.0000, -18.3750],
        [  0.0000, -14.8750, -17.8750, -13.3750, -14.4375, -15.0000, -14.4375, -15.4375, -15.7500, -15.5625, -16.7500, -17.1250, -17.3750, -16.2500, -18.7500],
        [  0.0000, -14.3750, -17.3750, -12.9375, -14.0000, -14.5000, -14.0000, -15.0000, -15.3125, -15.0625, -16.2500, -16.6250, -16.8750, -15.8125, -18.1250],
        [  0.0000, -15.6250, -18.8750, -14.1875, -15.3750, -15.9375, -15.3750, -16.5000, -16.7500, -16.6250, -17.8750, -18.3750, -18.6250, -17.3750, -20.0000],
        [  0.0000, -15.1875, -18.3750, -13.8125, -15.0000, -15.5625, -14.9375, -16.0000, -16.3750, -16.1250, -17.5000, -17.8750, -18.1250, -17.0000, -19.5000],
        [  0.0000, -16.5000, -20.1250, -15.1875, -16.5000, -17.1250, -16.3750, -17.6250, -18.0000, -17.8750, -19.2500, -19.6250, -19.8750, -18.6250, -21.5000],
        [  0.0000, -15.6250, -18.8750, -14.1875, -15.3125, -15.9375, -15.2500, -16.3750, -16.7500, -16.5000, -17.8750, -18.2500, -18.6250, -17.3750, -20.0000],
        [  0.0000, -16.3750, -20.0000, -14.9375, -16.1250, -16.7500, -16.1250, -17.3750, -17.7500, -17.5000, -18.8750, -19.3750, -19.6250, -18.3750, -21.1250],
        [  0.0000, -16.2500, -19.7500, -14.7500, -16.0000, -16.7500, -16.0000, -17.2500, -17.5000, -17.3750, -18.7500, -19.1250, -19.5000, -18.1250, -20.8750],
        [  0.0000, -15.1875, -18.3750, -13.8750, -15.0000, -15.5625, -14.8750, -16.0000, -16.3750, -16.2500, -17.5000, -17.8750, -18.1250, -17.0000, -19.5000],
        [  0.0000, -18.0000, -21.6250, -16.3750, -17.6250, -18.2500, -17.6250, -18.8750, -19.2500, -19.0000, -20.5000, -21.0000, -21.3750, -20.0000, -23.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.6211,     0.3809,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.8242,     0.0302,     0.1445,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0089,     0.4180,     0.0615,     0.0649,     0.4453,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0049,     0.4336,     0.0435,     0.0674,     0.2969,     0.1543,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0006,     0.3594,     0.0074,     0.0491,     0.1211,     0.1260,     0.3359,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0003,     0.0918,     0.0055,     0.0283,     0.0630,     0.0996,     0.5781,     0.1338,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0284,     0.0025,     0.0081,     0.0378,     0.1035,     0.2373,     0.0640,     0.5195,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0305,     0.0023,     0.0099,     0.0275,     0.0244,     0.1660,     0.0879,     0.6055,     0.0449,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0315,     0.0035,     0.0066,     0.0179,     0.0182,     0.0762,     0.0835,     0.6367,     0.0635,     0.0630,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0310,     0.0059,     0.0220,     0.0283,     0.0247,     0.1426,     0.1543,     0.3516,     0.0776,     0.0884,     0.0737,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0069,     0.0004,     0.0029,     0.0068,     0.0137,     0.1484,     0.0322,     0.7109,     0.0148,     0.0403,     0.0122,     0.0106,     0.0000,     0.0000],
        [    0.0000,     0.0058,     0.0010,     0.0039,     0.0159,     0.0417,     0.1328,     0.0371,     0.2949,     0.0535,     0.1108,     0.0229,     0.0152,     0.2656,     0.0000],
        [    0.0000,     0.0272,     0.0034,     0.0190,     0.0203,     0.0322,     0.0864,     0.0791,     0.1885,     0.0688,     0.0757,     0.0496,     0.0640,     0.1758,     0.1094]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0168, -0.0107,  0.0517,  ...,  0.0138, -0.0187, -0.0050],
        [ 0.0288,  0.0472, -0.0479,  ...,  0.0475,  0.0282,  0.0669],
        [-0.0021,  0.0055,  0.0050,  ..., -0.0366,  0.0561, -0.0254],
        ...,
        [ 0.0210,  0.0276,  0.0128,  ..., -0.0257,  0.0182, -0.0072],
        [ 0.0068,  0.0476, -0.0308,  ...,  0.0973, -0.0262,  0.0884],
        [ 0.0658,  0.0363,  0.0366,  ..., -0.0437, -0.0688,  0.0424]], device='cuda:0', requires_grad=True)
K: tensor([-4.8125,  1.3984, -7.3125,  0.4297,  0.1592, -3.2969, -6.1562,  7.0938,  5.6562, -0.6211,  5.2500, -3.5156, -4.4375,  0.1187,  3.1875,  3.3438,  3.8281, -4.8125, -4.5625, -5.0312, -4.9688,  2.2188, -0.4453, -2.3906, -4.0938, -2.3906, -1.7188, -5.7500,  3.7344,  1.7578,  2.5938, -2.2188,
        -0.3438, -6.2812,  0.9688,  6.9062,  5.0938,  0.6094,  2.4375, -1.9219,  0.7148, -4.3125, -1.8438, -4.7812, -0.1426, -0.8086,  0.2100, -5.7812,  1.9531,  0.8359,  0.2812, -6.4688, -6.9062, -5.7188,  1.3438, -1.3828, -1.5156,  1.1094, -3.4375, -1.3750,  2.7500, -3.9844, -1.8984, -7.1250],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0171, -0.0054, -0.0076,  ..., -0.0173,  0.0324, -0.0237],
        [-0.0138, -0.0459, -0.0683,  ..., -0.0402, -0.0008, -0.0013],
        [-0.0015,  0.0270, -0.0115,  ..., -0.0065, -0.0454, -0.0450],
        ...,
        [ 0.0234, -0.0127,  0.0385,  ..., -0.0034, -0.0317, -0.0185],
        [ 0.0099,  0.0093,  0.0118,  ..., -0.0318, -0.0187, -0.0090],
        [ 0.0061,  0.0025, -0.0366,  ...,  0.0475,  0.0251, -0.0448]], device='cuda:0', requires_grad=True)
Q: tensor([    -1.6797,      0.7227,     -1.0078,     -0.0476,      1.1562,     -0.8711,     -2.2031,      0.3730,      1.2734,      0.9453,      2.8750,     -0.2305,     -1.7891,     -0.7734,      0.3145,     -0.4102,      1.2109,     -0.3145,     -0.4531,      0.9453,     -1.0391,      0.8320,
            -1.7188,     -2.4844,      0.7266,      1.1641,     -0.3203,     -1.2266,     -2.3750,      0.4062,     -0.8945,      0.7500,      1.5000,     -1.3906,     -0.8242,      2.0469,      1.2266,     -1.5938,      0.8398,     -0.1699,     -0.1934,      2.2656,      0.0801,     -0.1069,
            -1.4141,     -0.2559,      1.4141,     -0.2422,     -0.2754,     -0.3555,     -0.0144,     -1.1641,      0.0022,     -1.3750,      0.3730,     -1.3594,     -0.5938,     -1.2891,     -0.6445,      0.3438,      1.8047,      0.9570,     -1.4922,     -1.0547], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, 11.0625,  8.8750, 10.0625, 11.1250, 12.0625, 12.8125, 12.0625, 13.8125, 11.8750, 12.3750, 10.6875, 10.7500, 13.4375, 12.5000],
        [ 0.0000, 20.2500, 19.7500, 21.1250, 20.7500, 21.1250, 21.7500, 22.0000, 22.1250, 22.0000, 22.6250, 22.1250, 23.0000, 22.5000, 23.0000],
        [ 0.0000,  9.0000,  5.6562,  7.2188,  8.1250,  8.6250, 10.0000,  8.8750, 10.5000,  7.4688,  7.9375,  6.5625,  7.1250,  9.4375,  8.4375],
        [ 0.0000,  3.8594,  1.9375,  1.9922,  3.9219,  4.2188,  5.0000,  3.3281,  5.9375,  3.1250,  3.9375,  2.2969,  1.7266,  5.3125,  3.7812],
        [ 0.0000,  4.4688,  2.1719,  2.6250,  4.0938,  3.4531,  5.7812,  4.6875,  6.6562,  3.5312,  3.9219,  3.3438,  3.2656,  6.1250,  4.4688],
        [ 0.0000,  6.4062,  2.5469,  4.4375,  5.3438,  5.3750,  6.3438,  5.5938,  7.2188,  4.0625,  3.9375,  3.0156,  3.0938,  5.9375,  4.7188],
        [ 0.0000,  5.7812,  2.9688,  4.5938,  5.4062,  5.8438,  7.6250,  6.1562,  8.8125,  5.2500,  5.5312,  4.5312,  4.6875,  8.2500,  6.5938],
        [ 0.0000,  9.7500,  7.3125,  8.5000, 10.0000, 11.0000, 11.8750, 10.5625, 12.6250, 10.6875, 10.6875,  9.1875,  8.8750, 11.8125, 11.2500],
        [ 0.0000,  8.5000,  5.9062,  7.3438,  8.3750,  8.2500, 10.1875,  9.5000, 11.4375,  8.8750,  9.2500,  8.8750,  8.8750, 11.1250,  9.6250],
        [ 0.0000,  8.6875,  6.5000,  7.1250,  8.1250,  8.1250,  9.5625,  9.6875, 11.6875,  9.3750,  9.3750,  8.8750,  9.0625, 11.3750,  9.0625],
        [ 0.0000, 10.6250,  8.9375, 10.2500, 10.5000, 10.3750, 12.1250, 12.1875, 13.0625, 11.5000, 11.6250, 11.4375, 12.1250, 12.9375, 12.3125],
        [ 0.0000,  7.2812,  4.3438,  6.4062,  7.2500,  7.9688, 10.3125,  8.8125, 11.8750,  8.0625,  9.0625,  7.8438,  7.6875, 11.8750,  9.8125],
        [ 0.0000,  8.9375,  7.1562,  8.5000,  9.9375, 10.8750, 12.0625, 10.7500, 12.8125, 11.1250, 11.8750, 10.3125,  9.8750, 12.7500, 12.3750],
        [ 0.0000, 14.1250, 12.0625, 13.7500, 13.8125, 14.2500, 15.2500, 15.1875, 16.0000, 15.0000, 15.1250, 14.6875, 14.9375, 16.0000, 15.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3723],
        [0.2286],
        [0.1889],
        [0.1860],
        [0.1965],
        [0.1823],
        [0.1388],
        [0.1371],
        [0.1515],
        [0.1272],
        [0.1208],
        [0.0925],
        [0.0822],
        [0.1387]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( are:0.2754 a:0.1445,:0.1797 green:0.2129y:0.0583 are:0.4902 green:0.1377iced:0.2969)
iced
------
		( a:0.1445,:0.1797 green:0.2129y:0.0583 are:0.4902 green:0.1377iced:0.2969,:0.2832)
, and the flowers are green.
- The flowers are green, and
@ 7550 train 3.9718 , allloss: 3.9723, dt: 1722.65ms, fracRes: 0.7134, norm(attn): 0.1357, norm(output): 0.9498, norm(x): 0.8254, norm(y): 0.9871, norm:0.9443, tok/sec: 76087.43, flops:79.86, batch-reuse:1
@ 7551 train 3.8595 , allloss: 3.8595, dt: 1301.25ms, fracRes: 0.7132, norm(attn): 0.1357, norm(output): 0.9497, norm(x): 0.8250, norm(y): 0.9869, norm:0.6044, tok/sec: 100727.74, flops:105.73, batch-reuse:1
@ 7552 train 3.9388 , allloss: 3.9388, dt: 1311.82ms, fracRes: 0.7130, norm(attn): 0.1377, norm(output): 0.9497, norm(x): 0.8247, norm(y): 0.9871, norm:0.8147, tok/sec: 99916.44, flops:104.88, batch-reuse:1
@ 7553 train 3.9129 , allloss: 3.9130, dt: 1278.48ms, fracRes: 0.7130, norm(attn): 0.1377, norm(output): 0.9497, norm(x): 0.8250, norm(y): 0.9870, norm:0.7853, tok/sec: 102521.86, flops:107.61, batch-reuse:1
@ 7554 train 3.8013 , allloss: 3.8014, dt: 1287.15ms, fracRes: 0.7130, norm(attn): 0.1396, norm(output): 0.9496, norm(x): 0.8242, norm(y): 0.9872, norm:0.7477, tok/sec: 101831.51, flops:106.89, batch-reuse:1
@ 7555 train 3.8389 , allloss: 3.8389, dt: 1286.21ms, fracRes: 0.7128, norm(attn): 0.1387, norm(output): 0.9497, norm(x): 0.8249, norm(y): 0.9869, norm:0.7235, tok/sec: 101905.25, flops:106.96, batch-reuse:1
@ 7556 train 3.7929 , allloss: 3.7930, dt: 1285.25ms, fracRes: 0.7127, norm(attn): 0.1387, norm(output): 0.9493, norm(x): 0.8246, norm(y): 0.9868, norm:0.4997, tok/sec: 101981.49, flops:107.04, batch-reuse:1
@ 7557 train 3.8969 , allloss: 3.8972, dt: 1280.60ms, fracRes: 0.7127, norm(attn): 0.1387, norm(output): 0.9498, norm(x): 0.8251, norm(y): 0.9868, norm:0.6051, tok/sec: 102351.92, flops:107.43, batch-reuse:1
@ 7558 train 3.8000 , allloss: 3.8002, dt: 1315.05ms, fracRes: 0.7128, norm(attn): 0.1377, norm(output): 0.9500, norm(x): 0.8249, norm(y): 0.9869, norm:0.5724, tok/sec: 99670.58, flops:104.62, batch-reuse:1
@ 7559 train 3.9857 , allloss: 3.9857, dt: 1283.22ms, fracRes: 0.7128, norm(attn): 0.1387, norm(output): 0.9502, norm(x): 0.8253, norm(y): 0.9870, norm:0.6527, tok/sec: 102143.21, flops:107.21, batch-reuse:1
@ 7560 train 3.7968 , allloss: 3.7969, dt: 1285.55ms, fracRes: 0.7128, norm(attn): 0.1396, norm(output): 0.9495, norm(x): 0.8246, norm(y): 0.9869, norm:0.5711, tok/sec: 101957.87, flops:107.02, batch-reuse:1
@ 7561 train 3.9289 , allloss: 3.9290, dt: 1286.78ms, fracRes: 0.7129, norm(attn): 0.1367, norm(output): 0.9497, norm(x): 0.8245, norm(y): 0.9868, norm:0.6055, tok/sec: 101860.71, flops:106.92, batch-reuse:1
@ 7562 train 3.8745 , allloss: 3.8746, dt: 1283.09ms, fracRes: 0.7131, norm(attn): 0.1377, norm(output): 0.9496, norm(x): 0.8236, norm(y): 0.9867, norm:0.5545, tok/sec: 102153.65, flops:107.22, batch-reuse:1
@ 7563 train 3.8972 , allloss: 3.8972, dt: 1305.89ms, fracRes: 0.7133, norm(attn): 0.1357, norm(output): 0.9497, norm(x): 0.8236, norm(y): 0.9868, norm:0.5608, tok/sec: 100369.64, flops:105.35, batch-reuse:1
@ 7564 train 3.8519 , allloss: 3.8520, dt: 1281.40ms, fracRes: 0.7132, norm(attn): 0.1357, norm(output): 0.9501, norm(x): 0.8244, norm(y): 0.9870, norm:0.5818, tok/sec: 102288.14, flops:107.36, batch-reuse:1
@ 7565 train 3.8550 , allloss: 3.8561, dt: 1288.26ms, fracRes: 0.7131, norm(attn): 0.1377, norm(output): 0.9497, norm(x): 0.8245, norm(y): 0.9872, norm:0.6204, tok/sec: 101743.68, flops:106.79, batch-reuse:1
@ 7566 train 3.8264 , allloss: 3.8266, dt: 1293.87ms, fracRes: 0.7129, norm(attn): 0.1367, norm(output): 0.9498, norm(x): 0.8254, norm(y): 0.9872, norm:0.5739, tok/sec: 101302.39, flops:106.33, batch-reuse:1
@ 7567 train 3.8703 , allloss: 3.8705, dt: 1288.72ms, fracRes: 0.7130, norm(attn): 0.1357, norm(output): 0.9495, norm(x): 0.8248, norm(y): 0.9872, norm:0.5986, tok/sec: 101707.02, flops:106.75, batch-reuse:1
@ 7568 train 4.3088 , allloss: 4.3090, dt: 1303.34ms, fracRes: 0.7132, norm(attn): 0.1338, norm(output): 0.9508, norm(x): 0.8261, norm(y): 0.9871, norm:0.7898, tok/sec: 100566.61, flops:105.56, batch-reuse:1
@ 7569 train 4.0125 , allloss: 4.0128, dt: 1283.02ms, fracRes: 0.7130, norm(attn): 0.1377, norm(output): 0.9508, norm(x): 0.8260, norm(y): 0.9870, norm:0.6216, tok/sec: 102158.97, flops:107.23, batch-reuse:1
@ 7570 train 3.9102 , allloss: 3.9103, dt: 1322.71ms, fracRes: 0.7128, norm(attn): 0.1377, norm(output): 0.9501, norm(x): 0.8254, norm(y): 0.9871, norm:0.6100, tok/sec: 99093.42, flops:104.01, batch-reuse:1
@ 7571 train 3.8331 , allloss: 3.8340, dt: 1328.04ms, fracRes: 0.7125, norm(attn): 0.1367, norm(output): 0.9501, norm(x): 0.8261, norm(y): 0.9871, norm:0.6804, tok/sec: 98696.17, flops:103.59, batch-reuse:1
@ 7572 train 3.9481 , allloss: 3.9482, dt: 1312.34ms, fracRes: 0.7127, norm(attn): 0.1367, norm(output): 0.9495, norm(x): 0.8252, norm(y): 0.9872, norm:0.7397, tok/sec: 99876.55, flops:104.83, batch-reuse:1
@ 7573 train 3.8921 , allloss: 3.8921, dt: 1277.18ms, fracRes: 0.7129, norm(attn): 0.1357, norm(output): 0.9498, norm(x): 0.8254, norm(y): 0.9871, norm:0.6079, tok/sec: 102626.01, flops:107.72, batch-reuse:1
@ 7574 train 3.8520 , allloss: 3.8521, dt: 1298.80ms, fracRes: 0.7129, norm(attn): 0.1367, norm(output): 0.9502, norm(x): 0.8261, norm(y): 0.9869, norm:0.7072, tok/sec: 100918.03, flops:105.93, batch-reuse:1
@ 7575 train 3.8481 , allloss: 3.8486, dt: 1301.28ms, fracRes: 0.7130, norm(attn): 0.1367, norm(output): 0.9498, norm(x): 0.8255, norm(y): 0.9869, norm:0.5757, tok/sec: 100725.70, flops:105.72, batch-reuse:1
@ 7576 train 3.9070 , allloss: 3.9071, dt: 1312.28ms, fracRes: 0.7130, norm(attn): 0.1377, norm(output): 0.9497, norm(x): 0.8255, norm(y): 0.9870, norm:0.6244, tok/sec: 99881.40, flops:104.84, batch-reuse:1
@ 7577 train 3.8806 , allloss: 3.8807, dt: 1285.25ms, fracRes: 0.7131, norm(attn): 0.1396, norm(output): 0.9493, norm(x): 0.8242, norm(y): 0.9874, norm:0.5472, tok/sec: 101981.53, flops:107.04, batch-reuse:1
@ 7578 train 3.8364 , allloss: 3.8364, dt: 1296.18ms, fracRes: 0.7132, norm(attn): 0.1377, norm(output): 0.9499, norm(x): 0.8255, norm(y): 0.9873, norm:0.5892, tok/sec: 101121.39, flops:106.14, batch-reuse:1
@ 7579 train 3.8929 , allloss: 3.8930, dt: 1306.23ms, fracRes: 0.7131, norm(attn): 0.1357, norm(output): 0.9502, norm(x): 0.8260, norm(y): 0.9870, norm:0.5839, tok/sec: 100344.04, flops:105.32, batch-reuse:1
@ 7580 train 3.9733 , allloss: 3.9733, dt: 1276.22ms, fracRes: 0.7129, norm(attn): 0.1338, norm(output): 0.9505, norm(x): 0.8269, norm(y): 0.9869, norm:0.6509, tok/sec: 102703.37, flops:107.80, batch-reuse:1
@ 7581 train 3.8735 , allloss: 3.8735, dt: 1308.32ms, fracRes: 0.7125, norm(attn): 0.1367, norm(output): 0.9497, norm(x): 0.8260, norm(y): 0.9868, norm:0.6363, tok/sec: 100183.68, flops:105.16, batch-reuse:1
@ 7582 train 3.7728 , allloss: 3.7728, dt: 1295.82ms, fracRes: 0.7123, norm(attn): 0.1367, norm(output): 0.9496, norm(x): 0.8266, norm(y): 0.9867, norm:0.5876, tok/sec: 101149.50, flops:106.17, batch-reuse:1
@ 7583 train 3.8832 , allloss: 3.8832, dt: 1285.68ms, fracRes: 0.7128, norm(attn): 0.1367, norm(output): 0.9498, norm(x): 0.8259, norm(y): 0.9870, norm:0.6317, tok/sec: 101947.40, flops:107.01, batch-reuse:1
@ 7584 train 3.7833 , allloss: 3.7833, dt: 1295.43ms, fracRes: 0.7130, norm(attn): 0.1377, norm(output): 0.9497, norm(x): 0.8260, norm(y): 0.9871, norm:0.5828, tok/sec: 101180.68, flops:106.20, batch-reuse:1
@ 7585 train 3.8144 , allloss: 3.8144, dt: 1315.17ms, fracRes: 0.7130, norm(attn): 0.1387, norm(output): 0.9493, norm(x): 0.8248, norm(y): 0.9872, norm:0.5422, tok/sec: 99661.37, flops:104.61, batch-reuse:1
@ 7586 train 3.7323 , allloss: 3.7344, dt: 1300.74ms, fracRes: 0.7128, norm(attn): 0.1387, norm(output): 0.9494, norm(x): 0.8248, norm(y): 0.9871, norm:0.6095, tok/sec: 100767.31, flops:105.77, batch-reuse:1
@ 7587 train 3.9362 , allloss: 3.9362, dt: 1300.93ms, fracRes: 0.7127, norm(attn): 0.1377, norm(output): 0.9496, norm(x): 0.8250, norm(y): 0.9871, norm:0.5274, tok/sec: 100752.91, flops:105.75, batch-reuse:1
@ 7588 train 3.8053 , allloss: 3.8053, dt: 1328.56ms, fracRes: 0.7128, norm(attn): 0.1367, norm(output): 0.9495, norm(x): 0.8251, norm(y): 0.9870, norm:0.5487, tok/sec: 98657.43, flops:103.55, batch-reuse:1
@ 7589 train 3.7218 , allloss: 3.7219, dt: 1292.40ms, fracRes: 0.7129, norm(attn): 0.1367, norm(output): 0.9499, norm(x): 0.8260, norm(y): 0.9869, norm:0.5821, tok/sec: 101417.64, flops:106.45, batch-reuse:1
@ 7590 train 4.0658 , allloss: 4.0661, dt: 1276.16ms, fracRes: 0.7131, norm(attn): 0.1357, norm(output): 0.9502, norm(x): 0.8258, norm(y): 0.9871, norm:0.6676, tok/sec: 102708.32, flops:107.81, batch-reuse:1
@ 7591 train 4.2359 , allloss: 4.2359, dt: 1300.56ms, fracRes: 0.7131, norm(attn): 0.1357, norm(output): 0.9506, norm(x): 0.8257, norm(y): 0.9873, norm:0.5589, tok/sec: 100781.20, flops:105.78, batch-reuse:1
@ 7592 train 3.8335 , allloss: 3.8373, dt: 1282.12ms, fracRes: 0.7128, norm(attn): 0.1367, norm(output): 0.9497, norm(x): 0.8255, norm(y): 0.9870, norm:0.6848, tok/sec: 102230.97, flops:107.30, batch-reuse:1
@ 7593 train 3.7754 , allloss: 3.7754, dt: 1334.83ms, fracRes: 0.7126, norm(attn): 0.1377, norm(output): 0.9497, norm(x): 0.8255, norm(y): 0.9869, norm:0.5903, tok/sec: 98193.76, flops:103.07, batch-reuse:1
@ 7594 train 3.7723 , allloss: 3.7726, dt: 1328.70ms, fracRes: 0.7125, norm(attn): 0.1377, norm(output): 0.9497, norm(x): 0.8260, norm(y): 0.9868, norm:0.5734, tok/sec: 98646.70, flops:103.54, batch-reuse:1
@ 7595 train 3.8611 , allloss: 3.8613, dt: 1330.73ms, fracRes: 0.7126, norm(attn): 0.1367, norm(output): 0.9499, norm(x): 0.8260, norm(y): 0.9868, norm:0.6437, tok/sec: 98496.14, flops:103.38, batch-reuse:1
@ 7596 train 3.8847 , allloss: 3.8848, dt: 1314.16ms, fracRes: 0.7127, norm(attn): 0.1377, norm(output): 0.9498, norm(x): 0.8252, norm(y): 0.9869, norm:0.5844, tok/sec: 99738.23, flops:104.69, batch-reuse:1
@ 7597 train 3.7565 , allloss: 3.7565, dt: 1296.17ms, fracRes: 0.7127, norm(attn): 0.1367, norm(output): 0.9497, norm(x): 0.8254, norm(y): 0.9869, norm:0.6154, tok/sec: 101122.17, flops:106.14, batch-reuse:1
@ 7598 train 3.7672 , allloss: 3.7672, dt: 1296.14ms, fracRes: 0.7126, norm(attn): 0.1377, norm(output): 0.9493, norm(x): 0.8252, norm(y): 0.9871, norm:0.5487, tok/sec: 101125.03, flops:106.14, batch-reuse:1
@ 7599 train 3.7295 , allloss: 3.7296, dt: 1281.27ms, fracRes: 0.7127, norm(attn): 0.1387, norm(output): 0.9497, norm(x): 0.8255, norm(y): 0.9870, norm:0.7118, tok/sec: 102298.12, flops:107.38, batch-reuse:1
@ 7600 train 3.7194 , allloss: 3.7194, dt: 1292.05ms, fracRes: 0.7128, norm(attn): 0.1387, norm(output): 0.9489, norm(x): 0.8247, norm(y): 0.9869, norm:0.6718, tok/sec: 101444.61, flops:106.48, batch-reuse:1
@ 7601 train 3.7611 , allloss: 3.7613, dt: 1287.76ms, fracRes: 0.7128, norm(attn): 0.1387, norm(output): 0.9492, norm(x): 0.8246, norm(y): 0.9868, norm:0.6753, tok/sec: 101782.96, flops:106.83, batch-reuse:1
@ 7602 train 3.8160 , allloss: 3.8180, dt: 1303.74ms, fracRes: 0.7131, norm(attn): 0.1387, norm(output): 0.9494, norm(x): 0.8244, norm(y): 0.9868, norm:0.6801, tok/sec: 100535.31, flops:105.53, batch-reuse:1
@ 7603 train 3.8774 , allloss: 3.8775, dt: 1290.60ms, fracRes: 0.7133, norm(attn): 0.1367, norm(output): 0.9502, norm(x): 0.8255, norm(y): 0.9866, norm:0.5628, tok/sec: 101558.66, flops:106.60, batch-reuse:1
@ 7604 train 3.8655 , allloss: 3.8656, dt: 1288.10ms, fracRes: 0.7133, norm(attn): 0.1367, norm(output): 0.9502, norm(x): 0.8256, norm(y): 0.9867, norm:0.6498, tok/sec: 101756.45, flops:106.81, batch-reuse:1
@ 7605 train 3.6975 , allloss: 3.6976, dt: 1305.13ms, fracRes: 0.7131, norm(attn): 0.1377, norm(output): 0.9496, norm(x): 0.8257, norm(y): 0.9867, norm:0.5146, tok/sec: 100428.33, flops:105.41, batch-reuse:1
@ 7606 train 3.9205 , allloss: 3.9211, dt: 1296.00ms, fracRes: 0.7129, norm(attn): 0.1367, norm(output): 0.9502, norm(x): 0.8266, norm(y): 0.9867, norm:0.6700, tok/sec: 101135.63, flops:106.16, batch-reuse:1
@ 7607 train 3.7273 , allloss: 3.7273, dt: 1336.69ms, fracRes: 0.7128, norm(attn): 0.1387, norm(output): 0.9495, norm(x): 0.8256, norm(y): 0.9867, norm:0.6179, tok/sec: 98057.14, flops:102.92, batch-reuse:1
@ 7608 train 3.7929 , allloss: 3.7930, dt: 1281.44ms, fracRes: 0.7127, norm(attn): 0.1377, norm(output): 0.9495, norm(x): 0.8257, norm(y): 0.9867, norm:0.6889, tok/sec: 102285.12, flops:107.36, batch-reuse:1
@ 7609 train 3.8042 , allloss: 3.8043, dt: 1312.21ms, fracRes: 0.7127, norm(attn): 0.1367, norm(output): 0.9495, norm(x): 0.8260, norm(y): 0.9867, norm:0.7165, tok/sec: 99886.64, flops:104.84, batch-reuse:1
@ 7610 train 3.8149 , allloss: 3.8152, dt: 1306.09ms, fracRes: 0.7129, norm(attn): 0.1357, norm(output): 0.9496, norm(x): 0.8257, norm(y): 0.9868, norm:0.5810, tok/sec: 100354.28, flops:105.34, batch-reuse:1
@ 7611 train 3.7993 , allloss: 3.7994, dt: 1339.09ms, fracRes: 0.7129, norm(attn): 0.1357, norm(output): 0.9497, norm(x): 0.8257, norm(y): 0.9869, norm:0.6135, tok/sec: 97881.41, flops:102.74, batch-reuse:1
@ 7612 train 3.7678 , allloss: 3.7679, dt: 1328.84ms, fracRes: 0.7129, norm(attn): 0.1357, norm(output): 0.9499, norm(x): 0.8259, norm(y): 0.9870, norm:0.5902, tok/sec: 98636.05, flops:103.53, batch-reuse:1
@ 7613 train 3.7461 , allloss: 3.7464, dt: 1339.82ms, fracRes: 0.7130, norm(attn): 0.1367, norm(output): 0.9493, norm(x): 0.8246, norm(y): 0.9870, norm:0.6275, tok/sec: 97827.76, flops:102.68, batch-reuse:1
@ 7614 train 3.8775 , allloss: 3.8775, dt: 1349.31ms, fracRes: 0.7132, norm(attn): 0.1357, norm(output): 0.9499, norm(x): 0.8256, norm(y): 0.9870, norm:0.5787, tok/sec: 97139.73, flops:101.96, batch-reuse:1
@ 7615 train 3.7506 , allloss: 3.7506, dt: 1307.76ms, fracRes: 0.7132, norm(attn): 0.1367, norm(output): 0.9499, norm(x): 0.8258, norm(y): 0.9870, norm:0.5046, tok/sec: 100226.30, flops:105.20, batch-reuse:1
@ 7616 train 3.7497 , allloss: 3.7497, dt: 1299.46ms, fracRes: 0.7131, norm(attn): 0.1367, norm(output): 0.9497, norm(x): 0.8254, norm(y): 0.9870, norm:0.5472, tok/sec: 100866.28, flops:105.87, batch-reuse:1
@ 7617 train 3.7174 , allloss: 3.7176, dt: 1310.23ms, fracRes: 0.7131, norm(attn): 0.1377, norm(output): 0.9491, norm(x): 0.8244, norm(y): 0.9870, norm:0.6030, tok/sec: 100037.62, flops:105.00, batch-reuse:1
@ 7618 train 3.8697 , allloss: 3.8698, dt: 1345.90ms, fracRes: 0.7132, norm(attn): 0.1348, norm(output): 0.9496, norm(x): 0.8247, norm(y): 0.9871, norm:0.5926, tok/sec: 97386.05, flops:102.22, batch-reuse:1
@ 7619 train 3.8315 , allloss: 3.8315, dt: 1314.52ms, fracRes: 0.7135, norm(attn): 0.1357, norm(output): 0.9499, norm(x): 0.8249, norm(y): 0.9870, norm:0.6203, tok/sec: 99711.02, flops:104.66, batch-reuse:1
@ 7620 train 3.7600 , allloss: 3.7600, dt: 1299.97ms, fracRes: 0.7134, norm(attn): 0.1348, norm(output): 0.9501, norm(x): 0.8255, norm(y): 0.9869, norm:0.6205, tok/sec: 100827.24, flops:105.83, batch-reuse:1
@ 7621 train 3.7943 , allloss: 3.7943, dt: 1318.28ms, fracRes: 0.7131, norm(attn): 0.1357, norm(output): 0.9498, norm(x): 0.8251, norm(y): 0.9867, norm:0.5000, tok/sec: 99426.40, flops:104.36, batch-reuse:1
@ 7622 train 3.8434 , allloss: 3.8434, dt: 1298.67ms, fracRes: 0.7130, norm(attn): 0.1357, norm(output): 0.9498, norm(x): 0.8247, norm(y): 0.9866, norm:0.5184, tok/sec: 100927.65, flops:105.94, batch-reuse:1
@ 7623 train 3.6195 , allloss: 3.6195, dt: 1301.07ms, fracRes: 0.7130, norm(attn): 0.1377, norm(output): 0.9497, norm(x): 0.8244, norm(y): 0.9867, norm:0.5483, tok/sec: 100741.57, flops:105.74, batch-reuse:1
@ 7624 train 3.7714 , allloss: 3.7716, dt: 1304.54ms, fracRes: 0.7133, norm(attn): 0.1367, norm(output): 0.9496, norm(x): 0.8241, norm(y): 0.9870, norm:0.5317, tok/sec: 100473.37, flops:105.46, batch-reuse:1
@ 7625 train 3.7318 , allloss: 3.7318, dt: 1310.42ms, fracRes: 0.7133, norm(attn): 0.1387, norm(output): 0.9496, norm(x): 0.8247, norm(y): 0.9871, norm:0.5287, tok/sec: 100022.85, flops:104.99, batch-reuse:1
@ 7626 train 3.8194 , allloss: 3.8194, dt: 1326.19ms, fracRes: 0.7130, norm(attn): 0.1367, norm(output): 0.9497, norm(x): 0.8252, norm(y): 0.9870, norm:0.5850, tok/sec: 98833.59, flops:103.74, batch-reuse:1
@ 7627 train 4.0530 , allloss: 4.0533, dt: 1330.22ms, fracRes: 0.7129, norm(attn): 0.1357, norm(output): 0.9500, norm(x): 0.8251, norm(y): 0.9870, norm:0.5803, tok/sec: 98533.73, flops:103.42, batch-reuse:1
@ 7628 train 4.0660 , allloss: 4.0660, dt: 1329.55ms, fracRes: 0.7131, norm(attn): 0.1367, norm(output): 0.9499, norm(x): 0.8245, norm(y): 0.9869, norm:0.6475, tok/sec: 98583.82, flops:103.48, batch-reuse:1
@ 7629 train 4.0044 , allloss: 4.0044, dt: 1540.40ms, fracRes: 0.7131, norm(attn): 0.1367, norm(output): 0.9501, norm(x): 0.8252, norm(y): 0.9867, norm:0.8543, tok/sec: 85089.39, flops:89.31, batch-reuse:1
@ 7630 train 3.9218 , allloss: 3.9219, dt: 1289.13ms, fracRes: 0.7131, norm(attn): 0.1367, norm(output): 0.9499, norm(x): 0.8251, norm(y): 0.9869, norm:0.6854, tok/sec: 101674.42, flops:106.72, batch-reuse:1
@ 7631 train 3.9583 , allloss: 3.9584, dt: 1303.93ms, fracRes: 0.7130, norm(attn): 0.1357, norm(output): 0.9496, norm(x): 0.8244, norm(y): 0.9871, norm:0.5863, tok/sec: 100520.36, flops:105.51, batch-reuse:1
@ 7632 train 4.0092 , allloss: 4.0092, dt: 1295.70ms, fracRes: 0.7128, norm(attn): 0.1348, norm(output): 0.9502, norm(x): 0.8261, norm(y): 0.9871, norm:0.6220, tok/sec: 101158.88, flops:106.18, batch-reuse:1
@ 7633 train 3.9488 , allloss: 3.9491, dt: 1289.52ms, fracRes: 0.7129, norm(attn): 0.1357, norm(output): 0.9500, norm(x): 0.8256, norm(y): 0.9871, norm:0.5728, tok/sec: 101643.68, flops:106.69, batch-reuse:1
@ 7634 train 3.9371 , allloss: 3.9371, dt: 1309.46ms, fracRes: 0.7131, norm(attn): 0.1357, norm(output): 0.9497, norm(x): 0.8250, norm(y): 0.9869, norm:0.5394, tok/sec: 100096.59, flops:105.06, batch-reuse:1
@ 7635 train 3.9546 , allloss: 3.9547, dt: 1329.46ms, fracRes: 0.7131, norm(attn): 0.1367, norm(output): 0.9501, norm(x): 0.8257, norm(y): 0.9867, norm:0.4903, tok/sec: 98590.08, flops:103.48, batch-reuse:1
@ 7636 train 3.9579 , allloss: 3.9580, dt: 1334.34ms, fracRes: 0.7131, norm(attn): 0.1367, norm(output): 0.9501, norm(x): 0.8256, norm(y): 0.9866, norm:0.5338, tok/sec: 98229.90, flops:103.11, batch-reuse:1
@ 7637 train 3.8815 , allloss: 3.8815, dt: 1325.39ms, fracRes: 0.7130, norm(attn): 0.1377, norm(output): 0.9502, norm(x): 0.8260, norm(y): 0.9865, norm:0.5001, tok/sec: 98893.20, flops:103.80, batch-reuse:1
@ 7638 train 3.8919 , allloss: 3.8920, dt: 1295.19ms, fracRes: 0.7132, norm(attn): 0.1377, norm(output): 0.9497, norm(x): 0.8243, norm(y): 0.9867, norm:0.5828, tok/sec: 101198.75, flops:106.22, batch-reuse:1
@ 7639 train 3.9010 , allloss: 3.9011, dt: 1328.55ms, fracRes: 0.7132, norm(attn): 0.1367, norm(output): 0.9498, norm(x): 0.8249, norm(y): 0.9869, norm:0.5139, tok/sec: 98657.63, flops:103.55, batch-reuse:1
@ 7640 train 3.9785 , allloss: 3.9786, dt: 1333.62ms, fracRes: 0.7130, norm(attn): 0.1357, norm(output): 0.9502, norm(x): 0.8260, norm(y): 0.9869, norm:0.5531, tok/sec: 98282.53, flops:103.16, batch-reuse:1
@ 7641 train 3.9013 , allloss: 3.9013, dt: 1302.98ms, fracRes: 0.7128, norm(attn): 0.1357, norm(output): 0.9503, norm(x): 0.8268, norm(y): 0.9871, norm:0.5621, tok/sec: 100594.25, flops:105.59, batch-reuse:1
@ 7642 train 3.9913 , allloss: 3.9913, dt: 1308.12ms, fracRes: 0.7129, norm(attn): 0.1348, norm(output): 0.9504, norm(x): 0.8267, norm(y): 0.9870, norm:0.5974, tok/sec: 100199.05, flops:105.17, batch-reuse:1
@ 7643 train 4.0699 , allloss: 4.0699, dt: 1314.46ms, fracRes: 0.7131, norm(attn): 0.1338, norm(output): 0.9508, norm(x): 0.8268, norm(y): 0.9869, norm:0.5446, tok/sec: 99715.83, flops:104.66, batch-reuse:1
@ 7644 train 4.0083 , allloss: 4.0083, dt: 1330.05ms, fracRes: 0.7132, norm(attn): 0.1348, norm(output): 0.9500, norm(x): 0.8255, norm(y): 0.9867, norm:0.5488, tok/sec: 98546.71, flops:103.44, batch-reuse:1
@ 7645 train 3.8703 , allloss: 3.8741, dt: 1310.41ms, fracRes: 0.7129, norm(attn): 0.1348, norm(output): 0.9501, norm(x): 0.8265, norm(y): 0.9866, norm:0.5388, tok/sec: 100023.64, flops:104.99, batch-reuse:1
@ 7646 train 4.0240 , allloss: 4.0245, dt: 1286.41ms, fracRes: 0.7129, norm(attn): 0.1348, norm(output): 0.9499, norm(x): 0.8260, norm(y): 0.9867, norm:0.6415, tok/sec: 101889.86, flops:106.95, batch-reuse:1
@ 7647 train 4.0103 , allloss: 4.0103, dt: 1314.81ms, fracRes: 0.7130, norm(attn): 0.1348, norm(output): 0.9503, norm(x): 0.8265, norm(y): 0.9867, norm:0.5179, tok/sec: 99688.87, flops:104.64, batch-reuse:1
@ 7648 train 3.9077 , allloss: 3.9078, dt: 1305.34ms, fracRes: 0.7134, norm(attn): 0.1348, norm(output): 0.9506, norm(x): 0.8260, norm(y): 0.9869, norm:0.6193, tok/sec: 100411.97, flops:105.40, batch-reuse:1
@ 7649 train 3.9469 , allloss: 3.9472, dt: 1309.80ms, fracRes: 0.7133, norm(attn): 0.1348, norm(output): 0.9505, norm(x): 0.8264, norm(y): 0.9869, norm:0.6442, tok/sec: 100070.47, flops:105.04, batch-reuse:1
@ 7650 train 4.0023 , allloss: 4.0023, dt: 1319.66ms, fracRes: 0.7131, norm(attn): 0.1348, norm(output): 0.9503, norm(x): 0.8263, norm(y): 0.9871, norm:0.6387, tok/sec: 99322.32, flops:104.25, batch-reuse:1
@ 7651 train 4.1099 , allloss: 4.1099, dt: 1313.43ms, fracRes: 0.7131, norm(attn): 0.1338, norm(output): 0.9503, norm(x): 0.8258, norm(y): 0.9871, norm:0.6391, tok/sec: 99793.39, flops:104.75, batch-reuse:1
@ 7652 train 3.9797 , allloss: 3.9797, dt: 1299.44ms, fracRes: 0.7130, norm(attn): 0.1338, norm(output): 0.9501, norm(x): 0.8255, norm(y): 0.9869, norm:0.6528, tok/sec: 100868.13, flops:105.87, batch-reuse:1
@ 7653 train 3.8927 , allloss: 3.8931, dt: 1301.50ms, fracRes: 0.7133, norm(attn): 0.1357, norm(output): 0.9494, norm(x): 0.8235, norm(y): 0.9867, norm:0.7767, tok/sec: 100708.79, flops:105.71, batch-reuse:1
@ 7654 train 4.0332 , allloss: 4.0333, dt: 1283.51ms, fracRes: 0.7135, norm(attn): 0.1338, norm(output): 0.9504, norm(x): 0.8254, norm(y): 0.9866, norm:0.6554, tok/sec: 102119.70, flops:107.19, batch-reuse:1
@ 7655 train 4.0500 , allloss: 4.0501, dt: 1306.04ms, fracRes: 0.7137, norm(attn): 0.1348, norm(output): 0.9503, norm(x): 0.8253, norm(y): 0.9868, norm:0.6745, tok/sec: 100358.22, flops:105.34, batch-reuse:1
@ 7656 train 3.9220 , allloss: 3.9220, dt: 1299.73ms, fracRes: 0.7135, norm(attn): 0.1338, norm(output): 0.9501, norm(x): 0.8254, norm(y): 0.9869, norm:0.5686, tok/sec: 100845.57, flops:105.85, batch-reuse:1
@ 7657 train 3.9594 , allloss: 3.9595, dt: 1309.19ms, fracRes: 0.7132, norm(attn): 0.1357, norm(output): 0.9500, norm(x): 0.8250, norm(y): 0.9870, norm:0.6175, tok/sec: 100117.05, flops:105.09, batch-reuse:1
@ 7658 train 3.9721 , allloss: 3.9722, dt: 1295.38ms, fracRes: 0.7130, norm(attn): 0.1357, norm(output): 0.9499, norm(x): 0.8257, norm(y): 0.9869, norm:0.6154, tok/sec: 101184.35, flops:106.21, batch-reuse:1
@ 7659 train 3.9646 , allloss: 3.9648, dt: 1296.19ms, fracRes: 0.7131, norm(attn): 0.1348, norm(output): 0.9503, norm(x): 0.8262, norm(y): 0.9869, norm:0.5753, tok/sec: 101120.66, flops:106.14, batch-reuse:1
@ 7660 train 3.8846 , allloss: 3.8847, dt: 1303.48ms, fracRes: 0.7134, norm(attn): 0.1348, norm(output): 0.9501, norm(x): 0.8258, norm(y): 0.9868, norm:0.6084, tok/sec: 100555.54, flops:105.55, batch-reuse:1
@ 7661 train 4.2028 , allloss: 4.2028, dt: 1284.48ms, fracRes: 0.7133, norm(attn): 0.1357, norm(output): 0.9507, norm(x): 0.8265, norm(y): 0.9868, norm:0.8176, tok/sec: 102042.96, flops:107.11, batch-reuse:1
@ 7662 train 3.8120 , allloss: 3.8120, dt: 1304.57ms, fracRes: 0.7128, norm(attn): 0.1367, norm(output): 0.9498, norm(x): 0.8262, norm(y): 0.9865, norm:0.7760, tok/sec: 100471.33, flops:105.46, batch-reuse:1
@ 7663 train 3.8375 , allloss: 3.8375, dt: 1278.99ms, fracRes: 0.7128, norm(attn): 0.1377, norm(output): 0.9494, norm(x): 0.8251, norm(y): 0.9866, norm:0.6360, tok/sec: 102480.50, flops:107.57, batch-reuse:1
@ 7664 train 3.9569 , allloss: 3.9569, dt: 1289.66ms, fracRes: 0.7131, norm(attn): 0.1367, norm(output): 0.9501, norm(x): 0.8255, norm(y): 0.9867, norm:0.7215, tok/sec: 101633.08, flops:106.68, batch-reuse:1
@ 7665 train 3.9479 , allloss: 3.9481, dt: 1304.66ms, fracRes: 0.7132, norm(attn): 0.1338, norm(output): 0.9506, norm(x): 0.8270, norm(y): 0.9866, norm:0.7641, tok/sec: 100464.61, flops:105.45, batch-reuse:1
@ 7666 train 3.9798 , allloss: 3.9798, dt: 1327.94ms, fracRes: 0.7131, norm(attn): 0.1357, norm(output): 0.9504, norm(x): 0.8263, norm(y): 0.9867, norm:0.8087, tok/sec: 98703.38, flops:103.60, batch-reuse:1
@ 7667 train 3.9800 , allloss: 3.9800, dt: 1306.79ms, fracRes: 0.7132, norm(attn): 0.1367, norm(output): 0.9503, norm(x): 0.8265, norm(y): 0.9867, norm:0.6619, tok/sec: 100300.56, flops:105.28, batch-reuse:1
@ 7668 train 4.0184 , allloss: 4.0186, dt: 1292.94ms, fracRes: 0.7134, norm(attn): 0.1348, norm(output): 0.9496, norm(x): 0.8255, norm(y): 0.9866, norm:0.8884, tok/sec: 101375.39, flops:106.41, batch-reuse:1
@ 7669 train 3.9941 , allloss: 3.9943, dt: 1309.14ms, fracRes: 0.7133, norm(attn): 0.1357, norm(output): 0.9498, norm(x): 0.8256, norm(y): 0.9865, norm:0.8574, tok/sec: 100120.78, flops:105.09, batch-reuse:1
@ 7670 train 3.9548 , allloss: 3.9550, dt: 1278.04ms, fracRes: 0.7129, norm(attn): 0.1377, norm(output): 0.9503, norm(x): 0.8262, norm(y): 0.9863, norm:0.7629, tok/sec: 102557.08, flops:107.65, batch-reuse:1
@ 7671 train 3.9191 , allloss: 3.9191, dt: 1342.70ms, fracRes: 0.7128, norm(attn): 0.1377, norm(output): 0.9503, norm(x): 0.8263, norm(y): 0.9863, norm:0.7385, tok/sec: 97618.11, flops:102.46, batch-reuse:1
@ 7672 train 3.9593 , allloss: 3.9595, dt: 1317.51ms, fracRes: 0.7129, norm(attn): 0.1367, norm(output): 0.9502, norm(x): 0.8261, norm(y): 0.9862, norm:0.6780, tok/sec: 99484.52, flops:104.42, batch-reuse:1
@ 7673 train 3.8982 , allloss: 3.8986, dt: 1332.86ms, fracRes: 0.7131, norm(attn): 0.1357, norm(output): 0.9497, norm(x): 0.8252, norm(y): 0.9864, norm:0.7039, tok/sec: 98339.09, flops:103.22, batch-reuse:1
@ 7674 train 3.8984 , allloss: 3.8985, dt: 1303.02ms, fracRes: 0.7132, norm(attn): 0.1348, norm(output): 0.9500, norm(x): 0.8257, norm(y): 0.9864, norm:0.6240, tok/sec: 100590.88, flops:105.58, batch-reuse:1
@ 7675 train 3.9686 , allloss: 3.9687, dt: 1297.88ms, fracRes: 0.7130, norm(attn): 0.1348, norm(output): 0.9503, norm(x): 0.8263, norm(y): 0.9866, norm:0.8839, tok/sec: 100989.18, flops:106.00, batch-reuse:1
@ 7676 train 3.8375 , allloss: 3.8376, dt: 1316.04ms, fracRes: 0.7127, norm(attn): 0.1377, norm(output): 0.9502, norm(x): 0.8266, norm(y): 0.9864, norm:0.7144, tok/sec: 99595.54, flops:104.54, batch-reuse:1
@ 7677 train 3.9378 , allloss: 3.9379, dt: 1309.89ms, fracRes: 0.7128, norm(attn): 0.1357, norm(output): 0.9502, norm(x): 0.8263, norm(y): 0.9864, norm:0.7562, tok/sec: 100063.27, flops:105.03, batch-reuse:1
@ 7678 train 3.8966 , allloss: 3.8966, dt: 1292.59ms, fracRes: 0.7128, norm(attn): 0.1367, norm(output): 0.9501, norm(x): 0.8255, norm(y): 0.9864, norm:0.8182, tok/sec: 101402.97, flops:106.44, batch-reuse:1
@ 7679 train 3.9151 , allloss: 3.9154, dt: 1306.92ms, fracRes: 0.7129, norm(attn): 0.1357, norm(output): 0.9502, norm(x): 0.8260, norm(y): 0.9861, norm:0.6546, tok/sec: 100290.79, flops:105.27, batch-reuse:1
@ 7680 train 3.9245 , allloss: 3.9245, dt: 1338.65ms, fracRes: 0.7133, norm(attn): 0.1348, norm(output): 0.9501, norm(x): 0.8253, norm(y): 0.9861, norm:0.7439, tok/sec: 97913.27, flops:102.77, batch-reuse:1
@ 7681 train 3.9823 , allloss: 3.9824, dt: 1315.39ms, fracRes: 0.7135, norm(attn): 0.1357, norm(output): 0.9508, norm(x): 0.8264, norm(y): 0.9862, norm:0.6578, tok/sec: 99644.86, flops:104.59, batch-reuse:1
@ 7682 train 4.0661 , allloss: 4.0661, dt: 1315.34ms, fracRes: 0.7134, norm(attn): 0.1348, norm(output): 0.9508, norm(x): 0.8262, norm(y): 0.9864, norm:0.6780, tok/sec: 99648.45, flops:104.59, batch-reuse:1
@ 7683 train 3.9191 , allloss: 3.9192, dt: 1348.00ms, fracRes: 0.7134, norm(attn): 0.1357, norm(output): 0.9501, norm(x): 0.8254, norm(y): 0.9864, norm:0.7584, tok/sec: 97234.23, flops:102.06, batch-reuse:1
@ 7684 train 3.9789 , allloss: 3.9790, dt: 1339.38ms, fracRes: 0.7131, norm(attn): 0.1357, norm(output): 0.9507, norm(x): 0.8264, norm(y): 0.9862, norm:0.6542, tok/sec: 97859.92, flops:102.72, batch-reuse:1
@ 7685 train 3.9649 , allloss: 3.9650, dt: 1313.13ms, fracRes: 0.7130, norm(attn): 0.1367, norm(output): 0.9504, norm(x): 0.8264, norm(y): 0.9862, norm:0.7392, tok/sec: 99816.11, flops:104.77, batch-reuse:1
@ 7686 train 3.9157 , allloss: 3.9158, dt: 1288.35ms, fracRes: 0.7133, norm(attn): 0.1357, norm(output): 0.9505, norm(x): 0.8269, norm(y): 0.9862, norm:0.6216, tok/sec: 101736.57, flops:106.79, batch-reuse:1
@ 7687 train 3.9979 , allloss: 3.9980, dt: 1290.79ms, fracRes: 0.7134, norm(attn): 0.1357, norm(output): 0.9505, norm(x): 0.8269, norm(y): 0.9862, norm:0.6050, tok/sec: 101544.05, flops:106.58, batch-reuse:1
@ 7688 train 3.9488 , allloss: 3.9489, dt: 1307.61ms, fracRes: 0.7132, norm(attn): 0.1357, norm(output): 0.9506, norm(x): 0.8273, norm(y): 0.9864, norm:0.5574, tok/sec: 100237.84, flops:105.21, batch-reuse:1
@ 7689 train 3.9271 , allloss: 3.9272, dt: 1306.31ms, fracRes: 0.7130, norm(attn): 0.1367, norm(output): 0.9502, norm(x): 0.8266, norm(y): 0.9864, norm:0.6207, tok/sec: 100337.83, flops:105.32, batch-reuse:1
@ 7690 train 3.9250 , allloss: 3.9251, dt: 1316.70ms, fracRes: 0.7131, norm(attn): 0.1357, norm(output): 0.9502, norm(x): 0.8264, norm(y): 0.9862, norm:0.5199, tok/sec: 99545.49, flops:104.49, batch-reuse:1
@ 7691 train 3.9009 , allloss: 3.9010, dt: 1300.81ms, fracRes: 0.7134, norm(attn): 0.1357, norm(output): 0.9501, norm(x): 0.8253, norm(y): 0.9862, norm:0.5933, tok/sec: 100762.08, flops:105.76, batch-reuse:1
@ 7692 train 4.0628 , allloss: 4.0628, dt: 1308.57ms, fracRes: 0.7136, norm(attn): 0.1348, norm(output): 0.9514, norm(x): 0.8274, norm(y): 0.9862, norm:0.8195, tok/sec: 100164.29, flops:105.14, batch-reuse:1
@ 7693 train 4.0309 , allloss: 4.0310, dt: 1325.46ms, fracRes: 0.7134, norm(attn): 0.1338, norm(output): 0.9506, norm(x): 0.8273, norm(y): 0.9862, norm:0.8927, tok/sec: 98887.78, flops:103.80, batch-reuse:1
@ 7694 train 3.9062 , allloss: 3.9063, dt: 1293.13ms, fracRes: 0.7131, norm(attn): 0.1357, norm(output): 0.9504, norm(x): 0.8267, norm(y): 0.9862, norm:0.6500, tok/sec: 101360.27, flops:106.39, batch-reuse:1
@ 7695 train 3.9415 , allloss: 3.9416, dt: 1314.37ms, fracRes: 0.7129, norm(attn): 0.1367, norm(output): 0.9503, norm(x): 0.8270, norm(y): 0.9863, norm:0.6938, tok/sec: 99722.36, flops:104.67, batch-reuse:1
@ 7696 train 3.9631 , allloss: 3.9633, dt: 1316.27ms, fracRes: 0.7131, norm(attn): 0.1348, norm(output): 0.9505, norm(x): 0.8266, norm(y): 0.9864, norm:0.6753, tok/sec: 99578.51, flops:104.52, batch-reuse:1
@ 7697 train 3.9687 , allloss: 3.9688, dt: 1328.67ms, fracRes: 0.7135, norm(attn): 0.1348, norm(output): 0.9506, norm(x): 0.8259, norm(y): 0.9862, norm:0.7148, tok/sec: 98649.06, flops:103.55, batch-reuse:1
@ 7698 train 3.8713 , allloss: 3.8713, dt: 1320.71ms, fracRes: 0.7133, norm(attn): 0.1357, norm(output): 0.9507, norm(x): 0.8269, norm(y): 0.9862, norm:0.6417, tok/sec: 99243.49, flops:104.17, batch-reuse:1
@ 7699 train 4.0191 , allloss: 4.0192, dt: 1306.87ms, fracRes: 0.7133, norm(attn): 0.1348, norm(output): 0.9499, norm(x): 0.8258, norm(y): 0.9862, norm:0.6617, tok/sec: 100294.82, flops:105.27, batch-reuse:1
@ 7700 train 3.9821 , allloss: 3.9822, dt: 1303.02ms, fracRes: 0.7132, norm(attn): 0.1357, norm(output): 0.9501, norm(x): 0.8263, norm(y): 0.9863, norm:0.6687, tok/sec: 100590.70, flops:105.58, batch-reuse:1
@ 7701 train 3.9372 , allloss: 3.9374, dt: 1350.96ms, fracRes: 0.7131, norm(attn): 0.1357, norm(output): 0.9501, norm(x): 0.8260, norm(y): 0.9864, norm:0.6280, tok/sec: 97021.03, flops:101.84, batch-reuse:1
@ 7702 train 4.0617 , allloss: 4.0617, dt: 1309.35ms, fracRes: 0.7130, norm(attn): 0.1357, norm(output): 0.9508, norm(x): 0.8272, norm(y): 0.9862, norm:0.6556, tok/sec: 100104.43, flops:105.07, batch-reuse:1
@ 7703 train 3.8982 , allloss: 3.8982, dt: 1313.58ms, fracRes: 0.7133, norm(attn): 0.1367, norm(output): 0.9505, norm(x): 0.8265, norm(y): 0.9863, norm:0.6092, tok/sec: 99782.45, flops:104.73, batch-reuse:1
@ 7704 train 3.9192 , allloss: 3.9192, dt: 1293.84ms, fracRes: 0.7134, norm(attn): 0.1367, norm(output): 0.9504, norm(x): 0.8265, norm(y): 0.9863, norm:0.6672, tok/sec: 101304.37, flops:106.33, batch-reuse:1
@ 7705 train 3.8743 , allloss: 3.8784, dt: 1287.76ms, fracRes: 0.7134, norm(attn): 0.1357, norm(output): 0.9500, norm(x): 0.8257, norm(y): 0.9862, norm:0.6927, tok/sec: 101782.96, flops:106.83, batch-reuse:1
@ 7706 train 3.8422 , allloss: 3.8423, dt: 1306.12ms, fracRes: 0.7132, norm(attn): 0.1357, norm(output): 0.9501, norm(x): 0.8270, norm(y): 0.9858, norm:0.5743, tok/sec: 100351.85, flops:105.33, batch-reuse:1
@ 7707 train 3.8688 , allloss: 3.8689, dt: 1286.94ms, fracRes: 0.7131, norm(attn): 0.1367, norm(output): 0.9496, norm(x): 0.8254, norm(y): 0.9860, norm:0.6916, tok/sec: 101847.84, flops:106.90, batch-reuse:1
@ 7708 train 4.0219 , allloss: 4.0221, dt: 1320.34ms, fracRes: 0.7129, norm(attn): 0.1348, norm(output): 0.9504, norm(x): 0.8277, norm(y): 0.9859, norm:0.6616, tok/sec: 99271.19, flops:104.20, batch-reuse:1
@ 7709 train 3.9571 , allloss: 3.9572, dt: 1316.25ms, fracRes: 0.7129, norm(attn): 0.1348, norm(output): 0.9507, norm(x): 0.8287, norm(y): 0.9859, norm:0.6157, tok/sec: 99580.00, flops:104.52, batch-reuse:1
@ 7710 train 4.0356 , allloss: 4.0356, dt: 1289.68ms, fracRes: 0.7131, norm(attn): 0.1348, norm(output): 0.9505, norm(x): 0.8276, norm(y): 0.9861, norm:0.5974, tok/sec: 101631.43, flops:106.68, batch-reuse:1
@ 7711 train 3.9136 , allloss: 3.9139, dt: 1312.50ms, fracRes: 0.7133, norm(attn): 0.1338, norm(output): 0.9505, norm(x): 0.8276, norm(y): 0.9862, norm:0.5866, tok/sec: 99864.40, flops:104.82, batch-reuse:1
@ 7712 train 3.8320 , allloss: 3.8320, dt: 1318.41ms, fracRes: 0.7134, norm(attn): 0.1357, norm(output): 0.9502, norm(x): 0.8271, norm(y): 0.9863, norm:0.5854, tok/sec: 99416.98, flops:104.35, batch-reuse:1
@ 7713 train 3.9699 , allloss: 3.9700, dt: 1296.78ms, fracRes: 0.7133, norm(attn): 0.1338, norm(output): 0.9506, norm(x): 0.8275, norm(y): 0.9864, norm:0.5784, tok/sec: 101075.20, flops:106.09, batch-reuse:1
@ 7714 train 3.8695 , allloss: 3.8695, dt: 1309.11ms, fracRes: 0.7133, norm(attn): 0.1367, norm(output): 0.9501, norm(x): 0.8270, norm(y): 0.9864, norm:0.6096, tok/sec: 100123.30, flops:105.09, batch-reuse:1
@ 7715 train 3.9807 , allloss: 3.9808, dt: 1312.56ms, fracRes: 0.7131, norm(attn): 0.1357, norm(output): 0.9503, norm(x): 0.8273, norm(y): 0.9859, norm:0.6164, tok/sec: 99859.92, flops:104.82, batch-reuse:1
@ 7716 train 3.9639 , allloss: 3.9640, dt: 1283.92ms, fracRes: 0.7132, norm(attn): 0.1338, norm(output): 0.9508, norm(x): 0.8282, norm(y): 0.9858, norm:0.6178, tok/sec: 102087.05, flops:107.15, batch-reuse:1
@ 7717 train 3.8290 , allloss: 3.8290, dt: 1298.57ms, fracRes: 0.7129, norm(attn): 0.1338, norm(output): 0.9511, norm(x): 0.8289, norm(y): 0.9858, norm:0.5732, tok/sec: 100935.69, flops:105.95, batch-reuse:1
@ 7718 train 3.9502 , allloss: 3.9502, dt: 1325.13ms, fracRes: 0.7131, norm(attn): 0.1348, norm(output): 0.9503, norm(x): 0.8272, norm(y): 0.9861, norm:0.5988, tok/sec: 98912.65, flops:103.82, batch-reuse:1
@ 7719 train 3.8794 , allloss: 3.8801, dt: 1308.43ms, fracRes: 0.7131, norm(attn): 0.1338, norm(output): 0.9504, norm(x): 0.8277, norm(y): 0.9860, norm:0.5894, tok/sec: 100175.26, flops:105.15, batch-reuse:1
@ 7720 train 3.9398 , allloss: 3.9400, dt: 1295.70ms, fracRes: 0.7131, norm(attn): 0.1348, norm(output): 0.9502, norm(x): 0.8267, norm(y): 0.9863, norm:0.6048, tok/sec: 101159.51, flops:106.18, batch-reuse:1
@ 7721 train 3.8387 , allloss: 3.8387, dt: 1311.52ms, fracRes: 0.7131, norm(attn): 0.1357, norm(output): 0.9501, norm(x): 0.8267, norm(y): 0.9864, norm:0.6302, tok/sec: 99939.38, flops:104.90, batch-reuse:1
@ 7722 train 3.8203 , allloss: 3.8204, dt: 1322.46ms, fracRes: 0.7132, norm(attn): 0.1357, norm(output): 0.9504, norm(x): 0.8270, norm(y): 0.9863, norm:0.5009, tok/sec: 99112.50, flops:104.03, batch-reuse:1
@ 7723 train 3.8835 , allloss: 3.8836, dt: 1286.83ms, fracRes: 0.7134, norm(attn): 0.1338, norm(output): 0.9502, norm(x): 0.8270, norm(y): 0.9861, norm:0.5282, tok/sec: 101856.35, flops:106.91, batch-reuse:1
@ 7724 train 3.9790 , allloss: 3.9790, dt: 1282.98ms, fracRes: 0.7134, norm(attn): 0.1348, norm(output): 0.9507, norm(x): 0.8279, norm(y): 0.9861, norm:0.5337, tok/sec: 102162.50, flops:107.23, batch-reuse:1
@ 7725 train 3.9671 , allloss: 3.9672, dt: 1291.84ms, fracRes: 0.7135, norm(attn): 0.1367, norm(output): 0.9501, norm(x): 0.8268, norm(y): 0.9864, norm:0.5903, tok/sec: 101461.29, flops:106.50, batch-reuse:1
@ 7726 train 3.8275 , allloss: 3.8275, dt: 1279.45ms, fracRes: 0.7132, norm(attn): 0.1357, norm(output): 0.9502, norm(x): 0.8277, norm(y): 0.9861, norm:0.6139, tok/sec: 102443.83, flops:107.53, batch-reuse:1
@ 7727 train 3.8092 , allloss: 3.8093, dt: 1287.48ms, fracRes: 0.7131, norm(attn): 0.1377, norm(output): 0.9497, norm(x): 0.8265, norm(y): 0.9860, norm:0.5046, tok/sec: 101804.84, flops:106.86, batch-reuse:1
@ 7728 train 3.9281 , allloss: 3.9284, dt: 1291.97ms, fracRes: 0.7133, norm(attn): 0.1348, norm(output): 0.9503, norm(x): 0.8271, norm(y): 0.9857, norm:0.5973, tok/sec: 101450.97, flops:106.49, batch-reuse:1
@ 7729 train 3.9379 , allloss: 3.9380, dt: 1289.06ms, fracRes: 0.7132, norm(attn): 0.1348, norm(output): 0.9504, norm(x): 0.8275, norm(y): 0.9860, norm:0.6141, tok/sec: 101680.04, flops:106.73, batch-reuse:1
@ 7730 train 3.8786 , allloss: 3.8786, dt: 1305.66ms, fracRes: 0.7132, norm(attn): 0.1367, norm(output): 0.9502, norm(x): 0.8271, norm(y): 0.9863, norm:0.6509, tok/sec: 100387.91, flops:105.37, batch-reuse:1
@ 7731 train 3.8824 , allloss: 3.8825, dt: 1294.35ms, fracRes: 0.7130, norm(attn): 0.1348, norm(output): 0.9506, norm(x): 0.8286, norm(y): 0.9862, norm:0.5371, tok/sec: 101264.51, flops:106.29, batch-reuse:1
@ 7732 train 3.8873 , allloss: 3.8874, dt: 1312.09ms, fracRes: 0.7130, norm(attn): 0.1348, norm(output): 0.9503, norm(x): 0.8284, norm(y): 0.9861, norm:0.6020, tok/sec: 99895.59, flops:104.85, batch-reuse:1
@ 7733 train 3.8648 , allloss: 3.8648, dt: 1302.54ms, fracRes: 0.7132, norm(attn): 0.1338, norm(output): 0.9503, norm(x): 0.8281, norm(y): 0.9860, norm:0.5371, tok/sec: 100628.09, flops:105.62, batch-reuse:1
@ 7734 train 4.0273 , allloss: 4.0274, dt: 1311.78ms, fracRes: 0.7134, norm(attn): 0.1357, norm(output): 0.9498, norm(x): 0.8256, norm(y): 0.9863, norm:0.5752, tok/sec: 99919.38, flops:104.88, batch-reuse:1
@ 7735 train 3.8071 , allloss: 3.8072, dt: 1325.11ms, fracRes: 0.7132, norm(attn): 0.1348, norm(output): 0.9509, norm(x): 0.8286, norm(y): 0.9860, norm:0.6761, tok/sec: 98914.13, flops:103.82, batch-reuse:1
@ 7736 train 3.9530 , allloss: 3.9531, dt: 1294.19ms, fracRes: 0.7132, norm(attn): 0.1338, norm(output): 0.9509, norm(x): 0.8284, norm(y): 0.9860, norm:0.5455, tok/sec: 101277.51, flops:106.30, batch-reuse:1
@ 7737 train 3.9449 , allloss: 3.9451, dt: 1287.16ms, fracRes: 0.7131, norm(attn): 0.1357, norm(output): 0.9501, norm(x): 0.8267, norm(y): 0.9861, norm:0.6113, tok/sec: 101830.03, flops:106.88, batch-reuse:1
@ 7738 train 3.8936 , allloss: 3.8937, dt: 1287.04ms, fracRes: 0.7130, norm(attn): 0.1377, norm(output): 0.9500, norm(x): 0.8271, norm(y): 0.9860, norm:0.5982, tok/sec: 101839.94, flops:106.89, batch-reuse:1
@ 7739 train 3.8392 , allloss: 3.8392, dt: 1286.49ms, fracRes: 0.7134, norm(attn): 0.1348, norm(output): 0.9504, norm(x): 0.8275, norm(y): 0.9860, norm:0.6091, tok/sec: 101883.37, flops:106.94, batch-reuse:1
@ 7740 train 3.9458 , allloss: 3.9459, dt: 1314.78ms, fracRes: 0.7135, norm(attn): 0.1338, norm(output): 0.9506, norm(x): 0.8280, norm(y): 0.9861, norm:0.6029, tok/sec: 99691.46, flops:104.64, batch-reuse:1
@ 7741 train 3.8400 , allloss: 3.8401, dt: 1293.07ms, fracRes: 0.7133, norm(attn): 0.1348, norm(output): 0.9505, norm(x): 0.8283, norm(y): 0.9860, norm:0.5592, tok/sec: 101365.00, flops:106.40, batch-reuse:1
@ 7742 train 3.8825 , allloss: 3.8825, dt: 1310.13ms, fracRes: 0.7132, norm(attn): 0.1348, norm(output): 0.9501, norm(x): 0.8271, norm(y): 0.9861, norm:0.5786, tok/sec: 100045.35, flops:105.01, batch-reuse:1
@ 7743 train 3.8706 , allloss: 3.8707, dt: 1289.02ms, fracRes: 0.7132, norm(attn): 0.1338, norm(output): 0.9502, norm(x): 0.8273, norm(y): 0.9861, norm:0.5133, tok/sec: 101683.35, flops:106.73, batch-reuse:1
@ 7744 train 3.9404 , allloss: 3.9405, dt: 1278.69ms, fracRes: 0.7133, norm(attn): 0.1348, norm(output): 0.9507, norm(x): 0.8274, norm(y): 0.9861, norm:0.5977, tok/sec: 102504.75, flops:107.59, batch-reuse:1
@ 7745 train 3.8391 , allloss: 3.8393, dt: 1282.52ms, fracRes: 0.7133, norm(attn): 0.1357, norm(output): 0.9502, norm(x): 0.8270, norm(y): 0.9861, norm:0.6138, tok/sec: 102198.54, flops:107.27, batch-reuse:1
@ 7746 train 4.0016 , allloss: 4.0016, dt: 1311.44ms, fracRes: 0.7131, norm(attn): 0.1338, norm(output): 0.9510, norm(x): 0.8289, norm(y): 0.9861, norm:0.6945, tok/sec: 99944.94, flops:104.91, batch-reuse:1
@ 7747 train 3.8622 , allloss: 3.8623, dt: 1283.51ms, fracRes: 0.7131, norm(attn): 0.1348, norm(output): 0.9509, norm(x): 0.8289, norm(y): 0.9861, norm:0.6331, tok/sec: 102119.99, flops:107.19, batch-reuse:1
@ 7748 train 3.9503 , allloss: 3.9504, dt: 1333.86ms, fracRes: 0.7131, norm(attn): 0.1348, norm(output): 0.9506, norm(x): 0.8285, norm(y): 0.9861, norm:0.6164, tok/sec: 98265.16, flops:103.14, batch-reuse:1
@ 7749 train 3.8340 , allloss: 3.8340, dt: 1318.00ms, fracRes: 0.7131, norm(attn): 0.1357, norm(output): 0.9502, norm(x): 0.8283, norm(y): 0.9859, norm:0.7052, tok/sec: 99447.59, flops:104.38, batch-reuse:1
@ 7750 train 3.9303 , allloss: 3.9303, dt: 1305.59ms, fracRes: 0.7129, norm(attn): 0.1348, norm(output): 0.9509, norm(x): 0.8287, norm(y): 0.9860, norm:0.9486, tok/sec: 100393.04, flops:105.38, batch-reuse:1
@ 7751 train 3.9770 , allloss: 3.9774, dt: 1296.42ms, fracRes: 0.7129, norm(attn): 0.1338, norm(output): 0.9506, norm(x): 0.8286, norm(y): 0.9859, norm:0.6338, tok/sec: 101103.42, flops:106.12, batch-reuse:1
@ 7752 train 3.8127 , allloss: 3.8128, dt: 1280.65ms, fracRes: 0.7128, norm(attn): 0.1348, norm(output): 0.9507, norm(x): 0.8290, norm(y): 0.9859, norm:0.7362, tok/sec: 102348.30, flops:107.43, batch-reuse:1
@ 7753 train 3.9100 , allloss: 3.9108, dt: 1286.19ms, fracRes: 0.7132, norm(attn): 0.1338, norm(output): 0.9505, norm(x): 0.8282, norm(y): 0.9861, norm:0.6633, tok/sec: 101906.88, flops:106.96, batch-reuse:1
@ 7754 train 3.9116 , allloss: 3.9116, dt: 1283.91ms, fracRes: 0.7132, norm(attn): 0.1348, norm(output): 0.9503, norm(x): 0.8281, norm(y): 0.9861, norm:0.6076, tok/sec: 102088.21, flops:107.16, batch-reuse:1
@ 7755 train 3.9065 , allloss: 3.9066, dt: 1278.54ms, fracRes: 0.7130, norm(attn): 0.1338, norm(output): 0.9508, norm(x): 0.8287, norm(y): 0.9858, norm:0.7437, tok/sec: 102516.71, flops:107.60, batch-reuse:1
@ 7756 train 3.9612 , allloss: 3.9612, dt: 1282.14ms, fracRes: 0.7130, norm(attn): 0.1357, norm(output): 0.9504, norm(x): 0.8271, norm(y): 0.9859, norm:0.6427, tok/sec: 102228.91, flops:107.30, batch-reuse:1
@ 7757 train 3.9187 , allloss: 3.9200, dt: 1309.09ms, fracRes: 0.7130, norm(attn): 0.1348, norm(output): 0.9508, norm(x): 0.8278, norm(y): 0.9856, norm:0.7547, tok/sec: 100124.23, flops:105.09, batch-reuse:1
@ 7758 train 3.8510 , allloss: 3.8510, dt: 1304.45ms, fracRes: 0.7130, norm(attn): 0.1348, norm(output): 0.9506, norm(x): 0.8283, norm(y): 0.9857, norm:0.6132, tok/sec: 100480.55, flops:105.47, batch-reuse:1
@ 7759 train 3.8846 , allloss: 3.8848, dt: 1316.50ms, fracRes: 0.7130, norm(attn): 0.1338, norm(output): 0.9506, norm(x): 0.8283, norm(y): 0.9858, norm:0.6247, tok/sec: 99560.76, flops:104.50, batch-reuse:1
@ 7760 train 3.9039 , allloss: 3.9039, dt: 1330.55ms, fracRes: 0.7133, norm(attn): 0.1348, norm(output): 0.9509, norm(x): 0.8282, norm(y): 0.9860, norm:0.6304, tok/sec: 98509.66, flops:103.40, batch-reuse:1
@ 7761 train 3.9408 , allloss: 3.9409, dt: 1310.85ms, fracRes: 0.7134, norm(attn): 0.1338, norm(output): 0.9506, norm(x): 0.8273, norm(y): 0.9861, norm:0.7037, tok/sec: 99990.33, flops:104.95, batch-reuse:1
@ 7762 train 3.8450 , allloss: 3.8456, dt: 1297.26ms, fracRes: 0.7134, norm(attn): 0.1338, norm(output): 0.9508, norm(x): 0.8283, norm(y): 0.9858, norm:0.7000, tok/sec: 101037.31, flops:106.05, batch-reuse:1
@ 7763 train 3.8779 , allloss: 3.8780, dt: 1318.02ms, fracRes: 0.7135, norm(attn): 0.1348, norm(output): 0.9504, norm(x): 0.8275, norm(y): 0.9860, norm:0.5793, tok/sec: 99446.24, flops:104.38, batch-reuse:1
@ 7764 train 3.7895 , allloss: 3.7896, dt: 1308.49ms, fracRes: 0.7131, norm(attn): 0.1367, norm(output): 0.9504, norm(x): 0.8274, norm(y): 0.9860, norm:0.7590, tok/sec: 100170.13, flops:105.14, batch-reuse:1
@ 7765 train 3.8694 , allloss: 3.8694, dt: 1282.66ms, fracRes: 0.7133, norm(attn): 0.1357, norm(output): 0.9506, norm(x): 0.8280, norm(y): 0.9858, norm:0.7163, tok/sec: 102188.02, flops:107.26, batch-reuse:1
@ 7766 train 3.8770 , allloss: 3.8771, dt: 1328.96ms, fracRes: 0.7133, norm(attn): 0.1348, norm(output): 0.9506, norm(x): 0.8282, norm(y): 0.9856, norm:0.6267, tok/sec: 98627.73, flops:103.52, batch-reuse:1
@ 7767 train 3.8495 , allloss: 3.8496, dt: 1294.97ms, fracRes: 0.7132, norm(attn): 0.1348, norm(output): 0.9504, norm(x): 0.8281, norm(y): 0.9854, norm:0.6026, tok/sec: 101216.17, flops:106.24, batch-reuse:1
@ 7768 train 3.9354 , allloss: 3.9354, dt: 1304.74ms, fracRes: 0.7131, norm(attn): 0.1348, norm(output): 0.9507, norm(x): 0.8283, norm(y): 0.9853, norm:0.5982, tok/sec: 100458.63, flops:105.44, batch-reuse:1
@ 7769 train 3.8011 , allloss: 3.8026, dt: 1314.22ms, fracRes: 0.7133, norm(attn): 0.1348, norm(output): 0.9503, norm(x): 0.8270, norm(y): 0.9854, norm:0.5967, tok/sec: 99733.47, flops:104.68, batch-reuse:1
@ 7770 train 3.7539 , allloss: 3.7539, dt: 1291.29ms, fracRes: 0.7131, norm(attn): 0.1348, norm(output): 0.9506, norm(x): 0.8280, norm(y): 0.9856, norm:0.7254, tok/sec: 101504.88, flops:106.54, batch-reuse:1
@ 7771 train 3.8462 , allloss: 3.8463, dt: 1280.08ms, fracRes: 0.7133, norm(attn): 0.1348, norm(output): 0.9505, norm(x): 0.8276, norm(y): 0.9859, norm:0.6661, tok/sec: 102393.80, flops:107.48, batch-reuse:1
@ 7772 train 3.7488 , allloss: 3.7491, dt: 1279.59ms, fracRes: 0.7132, norm(attn): 0.1338, norm(output): 0.9505, norm(x): 0.8284, norm(y): 0.9857, norm:0.5457, tok/sec: 102432.65, flops:107.52, batch-reuse:1
@ 7773 train 3.7702 , allloss: 3.7703, dt: 1288.00ms, fracRes: 0.7132, norm(attn): 0.1348, norm(output): 0.9506, norm(x): 0.8284, norm(y): 0.9857, norm:0.7501, tok/sec: 101763.99, flops:106.81, batch-reuse:1
@ 7774 train 3.8410 , allloss: 3.8412, dt: 1317.13ms, fracRes: 0.7134, norm(attn): 0.1357, norm(output): 0.9502, norm(x): 0.8274, norm(y): 0.9857, norm:0.5963, tok/sec: 99513.20, flops:104.45, batch-reuse:1
@ 7775 train 3.7940 , allloss: 3.7941, dt: 1303.62ms, fracRes: 0.7134, norm(attn): 0.1348, norm(output): 0.9506, norm(x): 0.8283, norm(y): 0.9857, norm:0.5955, tok/sec: 100544.87, flops:105.54, batch-reuse:1
@ 7776 train 3.7744 , allloss: 3.7744, dt: 1286.06ms, fracRes: 0.7133, norm(attn): 0.1367, norm(output): 0.9507, norm(x): 0.8284, norm(y): 0.9856, norm:0.6769, tok/sec: 101917.48, flops:106.98, batch-reuse:1
@ 7777 train 3.7801 , allloss: 3.7805, dt: 1309.23ms, fracRes: 0.7131, norm(attn): 0.1357, norm(output): 0.9502, norm(x): 0.8280, norm(y): 0.9856, norm:0.5192, tok/sec: 100113.71, flops:105.08, batch-reuse:1
@ 7778 train 3.8636 , allloss: 3.8887, dt: 1327.45ms, fracRes: 0.7131, norm(attn): 0.1357, norm(output): 0.9501, norm(x): 0.8277, norm(y): 0.9858, norm:0.6874, tok/sec: 98739.47, flops:103.64, batch-reuse:1
@ 7779 train 3.7294 , allloss: 3.7303, dt: 1301.43ms, fracRes: 0.7132, norm(attn): 0.1357, norm(output): 0.9500, norm(x): 0.8270, norm(y): 0.9858, norm:0.5253, tok/sec: 100714.14, flops:105.71, batch-reuse:1
@ 7780 train 3.8303 , allloss: 3.8303, dt: 1310.35ms, fracRes: 0.7132, norm(attn): 0.1348, norm(output): 0.9502, norm(x): 0.8275, norm(y): 0.9858, norm:0.6502, tok/sec: 100028.17, flops:104.99, batch-reuse:1
@ 7781 train 3.8093 , allloss: 3.8098, dt: 1344.99ms, fracRes: 0.7131, norm(attn): 0.1328, norm(output): 0.9504, norm(x): 0.8281, norm(y): 0.9858, norm:0.5495, tok/sec: 97451.78, flops:102.29, batch-reuse:1
@ 7782 train 3.7822 , allloss: 3.7822, dt: 1334.84ms, fracRes: 0.7130, norm(attn): 0.1348, norm(output): 0.9504, norm(x): 0.8282, norm(y): 0.9858, norm:0.5930, tok/sec: 98192.84, flops:103.07, batch-reuse:1
@ 7783 train 3.7972 , allloss: 3.7973, dt: 1304.70ms, fracRes: 0.7132, norm(attn): 0.1348, norm(output): 0.9504, norm(x): 0.8281, norm(y): 0.9856, norm:0.5927, tok/sec: 100461.77, flops:105.45, batch-reuse:1
@ 7784 train 3.8252 , allloss: 3.8271, dt: 1305.79ms, fracRes: 0.7133, norm(attn): 0.1338, norm(output): 0.9506, norm(x): 0.8283, norm(y): 0.9855, norm:0.5251, tok/sec: 100377.63, flops:105.36, batch-reuse:1
@ 7785 train 3.7567 , allloss: 3.7571, dt: 1290.43ms, fracRes: 0.7132, norm(attn): 0.1367, norm(output): 0.9504, norm(x): 0.8274, norm(y): 0.9855, norm:0.7122, tok/sec: 101572.32, flops:106.61, batch-reuse:1
@ 7786 train 3.8083 , allloss: 3.8087, dt: 1291.58ms, fracRes: 0.7133, norm(attn): 0.1357, norm(output): 0.9503, norm(x): 0.8276, norm(y): 0.9857, norm:0.5942, tok/sec: 101481.53, flops:106.52, batch-reuse:1
@ 7787 train 3.7377 , allloss: 3.7378, dt: 1307.23ms, fracRes: 0.7131, norm(attn): 0.1348, norm(output): 0.9504, norm(x): 0.8284, norm(y): 0.9858, norm:0.5893, tok/sec: 100266.90, flops:105.24, batch-reuse:1
@ 7788 train 3.8547 , allloss: 3.8548, dt: 1308.98ms, fracRes: 0.7131, norm(attn): 0.1338, norm(output): 0.9503, norm(x): 0.8285, norm(y): 0.9857, norm:0.6724, tok/sec: 100132.91, flops:105.10, batch-reuse:1
@ 7789 train 3.7869 , allloss: 3.7873, dt: 1292.16ms, fracRes: 0.7132, norm(attn): 0.1348, norm(output): 0.9506, norm(x): 0.8289, norm(y): 0.9854, norm:0.5645, tok/sec: 101436.22, flops:106.47, batch-reuse:1
@ 7790 train 3.8106 , allloss: 3.8109, dt: 1291.04ms, fracRes: 0.7135, norm(attn): 0.1328, norm(output): 0.9508, norm(x): 0.8285, norm(y): 0.9852, norm:0.5593, tok/sec: 101524.41, flops:106.56, batch-reuse:1
@ 7791 train 3.8299 , allloss: 3.8299, dt: 1306.19ms, fracRes: 0.7133, norm(attn): 0.1348, norm(output): 0.9507, norm(x): 0.8285, norm(y): 0.9852, norm:0.5747, tok/sec: 100346.59, flops:105.33, batch-reuse:1
@ 7792 train 3.7607 , allloss: 3.7607, dt: 1341.74ms, fracRes: 0.7135, norm(attn): 0.1348, norm(output): 0.9506, norm(x): 0.8279, norm(y): 0.9854, norm:0.5604, tok/sec: 97687.82, flops:102.54, batch-reuse:1
@ 7793 train 3.7833 , allloss: 3.7833, dt: 1291.22ms, fracRes: 0.7134, norm(attn): 0.1357, norm(output): 0.9503, norm(x): 0.8277, norm(y): 0.9856, norm:0.6108, tok/sec: 101510.18, flops:106.55, batch-reuse:1
@ 7794 train 3.7876 , allloss: 3.7877, dt: 1319.89ms, fracRes: 0.7132, norm(attn): 0.1348, norm(output): 0.9506, norm(x): 0.8288, norm(y): 0.9855, norm:0.6070, tok/sec: 99305.46, flops:104.23, batch-reuse:1
@ 7795 train 3.8034 , allloss: 3.8035, dt: 1279.32ms, fracRes: 0.7133, norm(attn): 0.1357, norm(output): 0.9502, norm(x): 0.8278, norm(y): 0.9855, norm:0.5269, tok/sec: 102454.66, flops:107.54, batch-reuse:1
@ 7796 train 3.7704 , allloss: 3.7705, dt: 1302.70ms, fracRes: 0.7131, norm(attn): 0.1338, norm(output): 0.9508, norm(x): 0.8292, norm(y): 0.9853, norm:0.6064, tok/sec: 100615.48, flops:105.61, batch-reuse:1
@ 7797 train 3.7569 , allloss: 3.7570, dt: 1332.72ms, fracRes: 0.7132, norm(attn): 0.1328, norm(output): 0.9507, norm(x): 0.8283, norm(y): 0.9853, norm:0.5220, tok/sec: 98349.48, flops:103.23, batch-reuse:1
@ 7798 train 3.8058 , allloss: 3.8062, dt: 1325.46ms, fracRes: 0.7133, norm(attn): 0.1328, norm(output): 0.9505, norm(x): 0.8284, norm(y): 0.9853, norm:0.6205, tok/sec: 98887.99, flops:103.80, batch-reuse:1
@ 7799 train 3.7677 , allloss: 3.7678, dt: 1290.81ms, fracRes: 0.7133, norm(attn): 0.1348, norm(output): 0.9504, norm(x): 0.8281, norm(y): 0.9854, norm:0.5433, tok/sec: 101542.06, flops:106.58, batch-reuse:1
@ 7800 train 3.8160 , allloss: 3.8161, dt: 1291.79ms, fracRes: 0.7135, norm(attn): 0.1328, norm(output): 0.9511, norm(x): 0.8293, norm(y): 0.9855, norm:0.5050, tok/sec: 101465.61, flops:106.50, batch-reuse:1
@ 7801 train 3.7493 , allloss: 3.7494, dt: 1293.33ms, fracRes: 0.7136, norm(attn): 0.1348, norm(output): 0.9508, norm(x): 0.8285, norm(y): 0.9857, norm:0.4852, tok/sec: 101344.26, flops:106.37, batch-reuse:1
@ 7802 train 3.7654 , allloss: 3.7655, dt: 1309.72ms, fracRes: 0.7134, norm(attn): 0.1328, norm(output): 0.9505, norm(x): 0.8286, norm(y): 0.9857, norm:0.5257, tok/sec: 100076.73, flops:105.04, batch-reuse:1
@ 7803 train 3.7942 , allloss: 3.7945, dt: 1335.51ms, fracRes: 0.7135, norm(attn): 0.1328, norm(output): 0.9503, norm(x): 0.8278, norm(y): 0.9856, norm:0.5150, tok/sec: 98143.92, flops:103.01, batch-reuse:1
@ 7804 train 3.7924 , allloss: 3.7925, dt: 1311.67ms, fracRes: 0.7135, norm(attn): 0.1338, norm(output): 0.9505, norm(x): 0.8284, norm(y): 0.9853, norm:0.5799, tok/sec: 99927.64, flops:104.89, batch-reuse:1
@ 7805 train 3.7824 , allloss: 3.7825, dt: 1303.45ms, fracRes: 0.7133, norm(attn): 0.1328, norm(output): 0.9507, norm(x): 0.8293, norm(y): 0.9852, norm:0.5554, tok/sec: 100557.89, flops:105.55, batch-reuse:1
@ 7806 train 3.6938 , allloss: 3.6938, dt: 1304.46ms, fracRes: 0.7132, norm(attn): 0.1357, norm(output): 0.9503, norm(x): 0.8285, norm(y): 0.9853, norm:0.5293, tok/sec: 100479.61, flops:105.47, batch-reuse:1
@ 7807 train 3.7413 , allloss: 3.7413, dt: 1314.88ms, fracRes: 0.7133, norm(attn): 0.1348, norm(output): 0.9506, norm(x): 0.8289, norm(y): 0.9854, norm:0.5591, tok/sec: 99683.45, flops:104.63, batch-reuse:1
@ 7808 train 3.7922 , allloss: 3.7947, dt: 1301.49ms, fracRes: 0.7134, norm(attn): 0.1338, norm(output): 0.9504, norm(x): 0.8284, norm(y): 0.9855, norm:0.5476, tok/sec: 100709.38, flops:105.71, batch-reuse:1
@ 7809 train 3.6270 , allloss: 3.6271, dt: 1325.79ms, fracRes: 0.7135, norm(attn): 0.1338, norm(output): 0.9504, norm(x): 0.8284, norm(y): 0.9855, norm:0.5647, tok/sec: 98863.43, flops:103.77, batch-reuse:1
@ 7810 train 3.7349 , allloss: 3.7352, dt: 1349.44ms, fracRes: 0.7135, norm(attn): 0.1328, norm(output): 0.9501, norm(x): 0.8282, norm(y): 0.9856, norm:0.6085, tok/sec: 97130.77, flops:101.95, batch-reuse:1
@ 7811 train 3.7749 , allloss: 3.7750, dt: 1328.27ms, fracRes: 0.7133, norm(attn): 0.1328, norm(output): 0.9506, norm(x): 0.8285, norm(y): 0.9854, norm:0.5933, tok/sec: 98678.47, flops:103.58, batch-reuse:1
@ 7812 train 3.7730 , allloss: 3.7733, dt: 1334.42ms, fracRes: 0.7133, norm(attn): 0.1348, norm(output): 0.9509, norm(x): 0.8285, norm(y): 0.9854, norm:0.5900, tok/sec: 98224.25, flops:103.10, batch-reuse:1
@ 7813 train 3.7052 , allloss: 3.7054, dt: 1288.03ms, fracRes: 0.7134, norm(attn): 0.1328, norm(output): 0.9507, norm(x): 0.8283, norm(y): 0.9853, norm:0.5892, tok/sec: 101761.99, flops:106.81, batch-reuse:1
@ 7814 train 3.7137 , allloss: 3.7137, dt: 1304.17ms, fracRes: 0.7133, norm(attn): 0.1338, norm(output): 0.9507, norm(x): 0.8292, norm(y): 0.9854, norm:0.5299, tok/sec: 100502.57, flops:105.49, batch-reuse:1
@ 7815 train 3.8360 , allloss: 3.8363, dt: 1284.40ms, fracRes: 0.7133, norm(attn): 0.1357, norm(output): 0.9501, norm(x): 0.8280, norm(y): 0.9856, norm:0.5853, tok/sec: 102049.21, flops:107.11, batch-reuse:1
@ 7816 train 3.9372 , allloss: 3.9373, dt: 1286.00ms, fracRes: 0.7131, norm(attn): 0.1328, norm(output): 0.9508, norm(x): 0.8295, norm(y): 0.9854, norm:0.5620, tok/sec: 101922.58, flops:106.98, batch-reuse:1
@ 7817 train 4.0371 , allloss: 4.0371, dt: 1301.34ms, fracRes: 0.7134, norm(attn): 0.1328, norm(output): 0.9508, norm(x): 0.8286, norm(y): 0.9853, norm:0.5584, tok/sec: 100720.94, flops:105.72, batch-reuse:1
@ 7818 train 3.9079 , allloss: 3.9080, dt: 1313.17ms, fracRes: 0.7133, norm(attn): 0.1338, norm(output): 0.9511, norm(x): 0.8293, norm(y): 0.9852, norm:0.6190, tok/sec: 99813.27, flops:104.77, batch-reuse:1
@ 7819 train 3.9936 , allloss: 3.9937, dt: 1298.37ms, fracRes: 0.7135, norm(attn): 0.1328, norm(output): 0.9512, norm(x): 0.8286, norm(y): 0.9853, norm:0.6061, tok/sec: 100951.46, flops:105.96, batch-reuse:1
@ 7820 train 3.8825 , allloss: 3.8826, dt: 1296.82ms, fracRes: 0.7134, norm(attn): 0.1328, norm(output): 0.9509, norm(x): 0.8288, norm(y): 0.9854, norm:0.5962, tok/sec: 101072.12, flops:106.09, batch-reuse:1
@ 7821 train 4.0499 , allloss: 4.0500, dt: 1306.28ms, fracRes: 0.7135, norm(attn): 0.1338, norm(output): 0.9510, norm(x): 0.8287, norm(y): 0.9855, norm:0.6469, tok/sec: 100339.57, flops:105.32, batch-reuse:1
@ 7822 train 3.9414 , allloss: 3.9415, dt: 1290.80ms, fracRes: 0.7137, norm(attn): 0.1328, norm(output): 0.9506, norm(x): 0.8283, norm(y): 0.9855, norm:0.6768, tok/sec: 101543.17, flops:106.58, batch-reuse:1
@ 7823 train 3.9783 , allloss: 3.9783, dt: 1310.27ms, fracRes: 0.7134, norm(attn): 0.1328, norm(output): 0.9509, norm(x): 0.8285, norm(y): 0.9853, norm:0.6734, tok/sec: 100034.52, flops:105.00, batch-reuse:1
@ 7824 train 4.0810 , allloss: 4.0810, dt: 1336.57ms, fracRes: 0.7134, norm(attn): 0.1328, norm(output): 0.9511, norm(x): 0.8286, norm(y): 0.9853, norm:0.8553, tok/sec: 98066.12, flops:102.93, batch-reuse:1
@ 7825 train 3.9139 , allloss: 3.9140, dt: 1338.53ms, fracRes: 0.7133, norm(attn): 0.1338, norm(output): 0.9509, norm(x): 0.8290, norm(y): 0.9850, norm:0.7547, tok/sec: 97922.59, flops:102.78, batch-reuse:1
@ 7826 train 3.9410 , allloss: 3.9411, dt: 1336.22ms, fracRes: 0.7133, norm(attn): 0.1348, norm(output): 0.9508, norm(x): 0.8287, norm(y): 0.9851, norm:0.5754, tok/sec: 98091.35, flops:102.96, batch-reuse:1
@ 7827 train 3.9510 , allloss: 3.9510, dt: 1292.37ms, fracRes: 0.7131, norm(attn): 0.1328, norm(output): 0.9508, norm(x): 0.8292, norm(y): 0.9854, norm:0.7264, tok/sec: 101420.18, flops:106.45, batch-reuse:1
