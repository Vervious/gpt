Threshold: 0.1
Enable layer loss: False
MAX LEARNING RATE: 0.0006
Experiment name: 16-sinkgate-mlpconcat-nonorm
MLPSCALE: 4
Experiment description: Transformer, max LR 6e-4
Setting:
========
self.compiler = BenCompilerNoOp(config)
self.execute = BenExecute(config)
y = self.ln_1(x)
attn, xWeights, scores = self.attn(y, y, print_weights=print_weights)
program = self.compiler(y)
machineOutput = self.execute(program, attn)
x = xWeights*y + machineOutput
======== 
VALUEMATRIX=True
REUSE_WEIGHTS=False
MLP_SCALE=4
MEASURE_SELF_CONTRIBUTION=False
NEW_ALL_LAYER_LOSS=True
MATRIX_NUM_PARAMS=4096
MLPMAT_INNER_SIZE=64
DELETE_SELF_CONTRIBUTION=False
EXTRACT_SELF_CONTRIBUTION=False
ATTENTION_SINK=True

Warmup steps: 100
total desired batch size: 131072
Mini-batch size: 8*1024
=> calculated gradient accumulation steps: 16
=> calculated gradient accumulation steps: 16
Training max steps: 300001Num GPUs: 1{'block_size': 1024, 'vocab_size': 50304, 'n_layer': 12, 'n_head': 12, 'n_embd': 768}
num decayed parameter tensors: 50, with 152,666,112 parameters
num non-decayed parameter tensors: 86, with 112,128 parameters
@ 0 train 10.9929 , allloss: 10.9929, dt: 1913.67ms, fracRes: 0.0062, norm(attn): 0.0315, norm(output): 0.0732, norm(x): 0.0755, norm(y): 0.9993, norm:13.2823, tok/sec: 68492.38, flops:71.90, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5625, 0.4375, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3086, 0.3516, 0.3398, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2275, 0.2715, 0.1943, 0.3066, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2461, 0.1328, 0.2910, 0.1982, 0.1318, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2207, 0.1973, 0.1348, 0.1387, 0.1514, 0.1572, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1348, 0.1216, 0.1992, 0.1279, 0.1309, 0.1543, 0.1318, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1406, 0.0898, 0.1436, 0.1846, 0.1445, 0.1108, 0.1138, 0.0732, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1133, 0.1143, 0.0806, 0.1045, 0.2207, 0.1060, 0.0625, 0.1045, 0.0938, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0776, 0.0845, 0.0767, 0.0942, 0.1328, 0.1016, 0.0854, 0.1309, 0.1245, 0.0918, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0859, 0.0762, 0.0728, 0.0830, 0.1240, 0.1196, 0.0977, 0.0635, 0.1035, 0.1226, 0.0513, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0840, 0.0806, 0.0732, 0.0791, 0.0522, 0.0918, 0.0747, 0.0708, 0.1040, 0.0947, 0.0762, 0.1191, 0.0000, 0.0000, 0.0000],
        [0.0747, 0.0630, 0.0933, 0.0439, 0.1064, 0.0613, 0.0977, 0.0630, 0.0505, 0.0977, 0.0713, 0.0757, 0.1011, 0.0000, 0.0000],
        [0.0659, 0.0889, 0.0444, 0.0540, 0.1006, 0.0679, 0.0420, 0.0503, 0.1089, 0.0967, 0.0559, 0.0898, 0.0679, 0.0664, 0.0000],
        [0.0693, 0.0835, 0.0762, 0.0469, 0.0889, 0.0417, 0.0623, 0.0840, 0.0796, 0.0474, 0.0825, 0.0403, 0.0571, 0.0806, 0.0591]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.0000,      0.0000,     -0.0000,      0.0000,      0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,      0.0000,     -0.0000,      0.0000,     -0.0000,     -0.0000],
        [     0.0000,     -0.2539,     -0.2676,      0.1475,      0.2578,     -0.5430,     -0.0874,     -0.6406,      0.4746,     -0.1592,      0.0771,      0.6719,     -0.3418,      0.0942,      0.4004],
        [     0.0000,      0.1279,      0.0962,      0.3906,      0.1855,      0.2852,      0.0457,     -0.0075,     -0.2617,      0.1738,     -0.0095,     -0.0317,      0.1836,      0.0134,      0.2520],
        [    -0.0000,      0.1748,     -0.1582,      0.2949,     -0.0869,      0.4551,      0.1055,      0.1934,     -0.0991,      0.0928,      0.0630,     -0.2383,     -0.1699,      0.2461,      0.0496],
        [    -0.0000,     -0.6172,      0.1689,     -0.2148,     -0.6250,     -0.3750,     -0.0309,     -0.8555,     -0.4961,     -0.2559,      0.5625,     -0.6016,      0.3438,      0.0381,     -0.3906],
        [     0.0000,     -0.1128,     -0.4883,     -0.4609,     -0.3750,     -0.3398,     -0.0693,     -0.5547,      0.3711,     -0.2930,     -0.6602,     -0.2109,      0.0854,      0.1846,     -0.2852],
        [    -0.0000,     -0.1084,      0.3848,     -0.0569,     -0.0344,      0.1299,     -0.0234,      0.4492,     -0.2578,      0.0306,      0.6797,     -0.2393,      0.2197,     -0.4453,     -0.0693],
        [     0.0000,     -0.4531,      0.0148,      0.2676,      0.0234,     -0.2402,     -0.2158,     -0.6562,      0.0354,     -0.1113,      0.4102,      0.0664,      0.2314,     -0.0289,      0.1426],
        [    -0.0000,      0.0082,     -0.3418,     -0.0835,      0.6680,     -0.0708,     -0.5977,     -0.0830,     -0.1914,      0.0430,     -0.1152,     -0.1235,      0.2314,     -0.0183,     -0.0028],
        [     0.0000,      0.0850,     -0.0100,      0.1934,      0.5391,      0.2695,      0.0962,      0.5273,      0.4746,      0.1699,      0.5391,      0.2451,     -0.1797,      0.1230,     -0.5195],
        [     0.0000,     -0.1201,     -0.1689,     -0.0381,      0.3633,      0.3281,      0.1245,     -0.3086,      0.1855,      0.3535,     -0.5156,     -0.9453,     -0.5977,     -0.0060,      0.0016],
        [     0.0000,     -0.0400,     -0.1396,     -0.0579,     -0.4746,      0.0879,     -0.1191,     -0.1709,      0.2158,      0.1187,     -0.0967,      0.3477,     -0.3164,     -0.1504,      0.2041],
        [     0.0000,     -0.1689,      0.2227,     -0.5312,      0.3496,     -0.2012,      0.2695,     -0.1709,     -0.3906,      0.2656,     -0.0483,      0.0106,      0.3008,     -0.0510,      0.0322],
        [    -0.0000,      0.2988,     -0.3965,     -0.2021,      0.4219,      0.0293,     -0.4551,     -0.2715,      0.5000,      0.3789,     -0.1660,      0.3105,      0.0294,      0.0053,      0.1426],
        [    -0.0000,      0.1807,      0.0923,     -0.3926,      0.2471,     -0.5117,     -0.1084,      0.1904,      0.1367,     -0.3809,      0.1738,     -0.5469,     -0.1934,      0.1504,     -0.1631]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5125],
        [0.3132],
        [0.2351],
        [0.2052],
        [0.1689],
        [0.1372],
        [0.1204],
        [0.1118],
        [0.0960],
        [0.0884],
        [0.0794],
        [0.0729],
        [0.0691],
        [0.0620]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4863, 0.5117, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4707, 0.2676, 0.2637, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2432, 0.2910, 0.2246, 0.2412, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1973, 0.1914, 0.1660, 0.2734, 0.1709, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1943, 0.1455, 0.1177, 0.3047, 0.0923, 0.1445, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1465, 0.1250, 0.1245, 0.1846, 0.1689, 0.1387, 0.1123, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1187, 0.1523, 0.1338, 0.1060, 0.1201, 0.1514, 0.0923, 0.1250, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1216, 0.1216, 0.1040, 0.1060, 0.1494, 0.0747, 0.0806, 0.1279, 0.1143, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0928, 0.0991, 0.1006, 0.1250, 0.0708, 0.0713, 0.1113, 0.1660, 0.0447, 0.1187, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0889, 0.0579, 0.0645, 0.1128, 0.0947, 0.1328, 0.1206, 0.0703, 0.0728, 0.1079, 0.0767, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0723, 0.0669, 0.0850, 0.0630, 0.0630, 0.0859, 0.0684, 0.1050, 0.1748, 0.0515, 0.0840, 0.0801, 0.0000, 0.0000, 0.0000],
        [0.0796, 0.0747, 0.0503, 0.1328, 0.0620, 0.0908, 0.0601, 0.0811, 0.0864, 0.0801, 0.0757, 0.0723, 0.0542, 0.0000, 0.0000],
        [0.0811, 0.0576, 0.0762, 0.0806, 0.0781, 0.0913, 0.0962, 0.0383, 0.0625, 0.0645, 0.1050, 0.0615, 0.0500, 0.0564, 0.0000],
        [0.0535, 0.0361, 0.0918, 0.0466, 0.0564, 0.0723, 0.0408, 0.0967, 0.0767, 0.0571, 0.0811, 0.0933, 0.0664, 0.0515, 0.0806]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,     -0.0000,     -0.0000,      0.0000,     -0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.0532,      0.0615,      0.0679,      0.0796,      0.3145,     -0.0728,      0.4355,     -0.1748,      0.0466,      0.2256,     -0.0571,     -0.0854,     -0.0654,     -0.0591],
        [    -0.0000,     -0.5664,     -0.5781,      0.1533,     -0.2930,      0.1611,      0.3711,      0.6367,      0.0383,      0.3594,     -0.0240,     -0.2021,      0.1807,      0.1089,      0.3047],
        [    -0.0000,      0.1768,     -0.0815,     -0.0099,     -0.1934,      0.1865,      0.1650,     -0.5273,      0.4141,     -0.1299,     -0.1621,     -0.2734,     -0.0304,      0.1729,     -0.2432],
        [     0.0000,     -0.0299,     -0.1719,      0.3242,     -0.1445,     -0.2715,     -0.0205,      0.0352,     -0.3516,     -0.1006,      0.0596,     -0.4883,      0.0068,     -0.0596,     -0.2354],
        [    -0.0000,     -0.2871,     -0.5000,      0.4531,     -0.7422,     -0.2930,     -1.0234,     -0.0110,      0.4824,     -0.9023,     -0.0830,      0.1904,      0.1953,      0.1143,      0.6641],
        [    -0.0000,     -0.1572,     -0.1611,      0.2334,      0.1484,     -0.0532,     -0.2617,     -0.0198,     -0.2910,     -0.0388,     -0.1904,      0.2051,     -0.4355,     -0.0254,      0.4277],
        [    -0.0000,      0.2490,      0.1172,     -0.1152,      0.0095,      0.2451,     -0.2520,      0.0532,     -0.2275,     -0.5195,     -0.3086,     -0.2949,      0.1216,     -0.2188,     -0.3398],
        [     0.0000,      0.0007,     -0.1553,     -0.1338,      0.2090,     -0.4844,     -0.4082,      0.0540,     -0.0618,     -0.3613,      0.2656,      0.2578,     -0.6797,     -0.2715,      0.1001],
        [     0.0000,      0.0635,      0.0825,      0.2969,     -0.2715,     -0.2656,      0.1836,      0.5820,     -0.7305,      0.2441,     -0.0349,     -0.0525,      0.2217,     -0.5352,      0.1201],
        [    -0.0000,     -0.4258,     -0.3223,      0.2422,      0.0635,      0.4062,      0.3086,     -0.2324,     -0.1953,      0.1953,     -0.1436,     -0.1045,      0.1523,     -0.5391,      0.4199],
        [    -0.0000,     -0.0811,      0.1621,     -0.1367,     -0.1406,      0.1758,     -0.0549,      0.3711,      0.8828,     -0.3398,      0.1523,      0.1050,     -0.5820,      0.5547,      0.3477],
        [    -0.0000,     -0.0620,     -0.4629,      0.5117,     -0.2520,      0.1318,     -0.2832,      0.0153,      0.0786,      0.0028,     -0.0496,     -0.1011,     -0.3848,      0.1367,     -0.0339],
        [    -0.0000,     -0.3418,     -0.0640,     -0.0060,     -0.0374,      0.1196,      0.1719,     -0.7500,     -0.2598,     -0.2305,      0.2578,     -0.2754,     -0.4863,     -0.3633,     -0.3613],
        [    -0.0000,     -0.3945,      0.5391,     -0.1387,      0.0493,      0.2988,     -0.2754,      0.5898,      0.3594,      0.0620,      0.4141,      0.5508,      0.2139,     -0.0388,      0.4062]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4924],
        [0.3612],
        [0.2591],
        [0.2026],
        [0.1650],
        [0.1429],
        [0.1196],
        [0.1079],
        [0.0914],
        [0.0880],
        [0.0765],
        [0.0745],
        [0.0706],
        [0.0643]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4980, 0.5039, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3965, 0.3242, 0.2773, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2236, 0.2061, 0.2324, 0.3379, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1934, 0.1582, 0.1836, 0.1973, 0.2676, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1787, 0.1318, 0.2402, 0.1797, 0.1611, 0.1074, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1089, 0.1357, 0.1699, 0.1016, 0.2334, 0.1367, 0.1133, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1060, 0.0854, 0.1455, 0.1201, 0.0781, 0.1143, 0.1289, 0.2227, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1021, 0.0977, 0.1729, 0.1182, 0.1201, 0.1641, 0.0645, 0.0825, 0.0786, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0898, 0.1216, 0.0796, 0.0669, 0.1357, 0.0913, 0.0933, 0.1318, 0.1055, 0.0845, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0781, 0.1523, 0.0947, 0.0469, 0.0820, 0.1118, 0.0947, 0.0957, 0.0825, 0.1001, 0.0618, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0776, 0.0586, 0.0806, 0.0811, 0.1030, 0.0889, 0.0742, 0.1089, 0.0977, 0.0962, 0.0688, 0.0649, 0.0000, 0.0000, 0.0000],
        [0.0713, 0.0708, 0.0649, 0.1216, 0.0586, 0.1270, 0.0894, 0.0527, 0.0693, 0.0598, 0.0688, 0.0491, 0.0962, 0.0000, 0.0000],
        [0.0737, 0.0762, 0.0593, 0.0801, 0.0889, 0.0679, 0.0908, 0.0801, 0.0596, 0.0659, 0.0596, 0.0513, 0.0674, 0.0791, 0.0000],
        [0.0713, 0.0635, 0.0493, 0.0737, 0.0952, 0.0771, 0.0588, 0.0513, 0.0562, 0.0669, 0.0825, 0.0557, 0.0640, 0.0630, 0.0713]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,     -0.0000,     -0.0000,      0.0000,      0.0000,     -0.0000,     -0.0000,     -0.0000,      0.0000,      0.0000,      0.0000,     -0.0000,     -0.0000,      0.0000],
        [    -0.0000,      0.0101,      0.2422,     -0.3477,     -0.2988,      0.0405,     -0.0079,     -0.0334,      0.4062,      0.3848,      0.3125,      0.4492,     -0.4434,     -0.1299,      0.5781],
        [    -0.0000,     -0.2021,     -0.3574,      0.7188,      0.0027,     -0.1338,      0.0205,     -0.1836,     -0.1387,      0.2539,      0.0569,     -0.5312,     -0.1494,      0.2598,      0.2695],
        [     0.0000,     -0.0815,      0.0366,      0.4141,     -0.5078,     -0.2354,      0.0630,      0.0090,      0.2383,     -0.1494,     -0.0474,     -0.1816,      0.1436,      0.1035,      0.4375],
        [    -0.0000,     -0.2021,     -0.0496,      0.0194,      0.3242,     -0.0352,      0.4883,      0.3984,     -0.0557,      0.1631,      0.1494,     -0.5195,     -0.1797,      0.5234,     -0.0771],
        [    -0.0000,     -0.3027,      0.2988,      0.0082,     -0.0996,     -0.5078,      0.0840,      0.0698,      0.1807,     -0.0226,      0.0640,     -0.3535,     -0.2139,      0.0659,      0.1030],
        [    -0.0000,      0.2217,      0.4473,     -0.0684,      0.7617,      0.2236,      0.0383,     -0.3809,      0.0486,      0.3848,     -0.5352,     -0.9922,      0.4395,      0.0649,     -0.1680],
        [    -0.0000,     -0.2168,      0.3164,      0.1270,     -0.3066,      0.0771,      0.1963,      0.7422,     -0.0552,      0.2754,     -0.1060,     -0.1074,      0.0674,     -0.0908,     -0.1387],
        [    -0.0000,     -0.0444,      0.5273,      0.1455,      0.1650,      0.4727,     -0.4629,     -0.2119,     -0.2598,     -0.0058,     -0.0654,     -0.2041,      0.1768,     -0.2402,     -0.0020],
        [    -0.0000,      0.3066,     -0.1182,     -0.2930,      0.4180,      0.0170,      0.0378,      0.3848,      0.1611,     -0.0605,      0.1338,     -0.3066,     -0.0093,      0.1035,     -0.0164],
        [    -0.0000,      0.6641,      0.1943,     -0.5117,      0.0466,      0.3594,      0.1895,      0.2012,      0.0515,      0.2471,     -0.2373,     -0.4375,      0.5469,      0.0342,     -0.0199],
        [    -0.0000,     -0.2812,      0.0393,      0.0476,      0.2852,      0.1377,     -0.0420,      0.3398,      0.2314,      0.2158,     -0.1172,     -0.1738,     -0.0447,      0.3750,      0.1514],
        [    -0.0000,     -0.0077,     -0.0884,      0.5391,     -0.1953,      0.5781,      0.2256,     -0.3008,     -0.0266,     -0.1729,     -0.0337,     -0.3711,      0.3027,     -0.1011,     -0.1060],
        [    -0.0000,      0.0303,     -0.2197,      0.0815,      0.1846,     -0.0845,      0.2051,      0.0771,     -0.2148,     -0.1172,     -0.2158,     -0.3672,     -0.0918,      0.0684,     -0.1914],
        [    -0.0000,     -0.1138,     -0.3672,      0.0305,      0.2852,      0.0801,     -0.1943,     -0.3301,     -0.2393,     -0.0645,      0.1475,     -0.2500,     -0.1118,     -0.1216,     -0.0017]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5220],
        [0.3364],
        [0.2530],
        [0.1946],
        [0.1596],
        [0.1277],
        [0.1225],
        [0.1067],
        [0.0956],
        [0.0872],
        [0.0837],
        [0.0734],
        [0.0726],
        [0.0644]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5078, 0.4922, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4453, 0.3477, 0.2070, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2217, 0.3125, 0.1953, 0.2715, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1777, 0.1875, 0.2422, 0.1934, 0.1992, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1475, 0.1484, 0.1206, 0.1172, 0.2236, 0.2432, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1279, 0.1445, 0.1982, 0.1006, 0.2285, 0.0879, 0.1123, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1216, 0.1235, 0.0981, 0.1279, 0.1187, 0.1641, 0.1680, 0.0776, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1084, 0.1094, 0.0869, 0.1807, 0.0630, 0.0986, 0.1338, 0.0952, 0.1240, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0933, 0.1118, 0.1680, 0.0908, 0.0903, 0.0854, 0.0776, 0.0894, 0.1279, 0.0659, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0859, 0.1162, 0.1133, 0.0771, 0.1582, 0.0476, 0.0796, 0.0718, 0.1172, 0.0645, 0.0684, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0728, 0.0549, 0.1738, 0.0530, 0.0762, 0.0786, 0.0559, 0.0510, 0.1011, 0.1260, 0.0544, 0.1016, 0.0000, 0.0000, 0.0000],
        [0.0825, 0.0811, 0.0903, 0.0762, 0.0918, 0.0513, 0.0679, 0.0723, 0.1055, 0.0728, 0.0801, 0.0625, 0.0659, 0.0000, 0.0000],
        [0.0579, 0.0564, 0.0762, 0.0461, 0.0576, 0.0505, 0.0718, 0.0801, 0.0752, 0.0967, 0.0713, 0.1113, 0.0811, 0.0674, 0.0000],
        [0.0623, 0.0669, 0.0850, 0.0579, 0.1011, 0.0693, 0.0684, 0.0488, 0.0544, 0.0693, 0.0742, 0.0693, 0.0610, 0.0515, 0.0610]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0000,      0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,      0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000],
        [     0.0000,     -0.0337,     -0.0189,      0.0718,      0.0466,     -0.6875,     -0.3184,     -0.0820,     -0.0898,      0.0006,      0.0479,     -0.1416,     -0.4727,      0.0238,      0.3066],
        [     0.0000,     -0.2520,     -0.7695,      0.2002,      0.5859,     -0.1816,     -0.2949,     -0.0737,     -0.5312,     -0.0708,     -0.2461,      0.5898,      0.2930,     -0.5234,      0.2275],
        [     0.0000,      0.3438,     -0.1250,      0.2041,     -0.0388,      0.0820,      0.3789,      0.1270,     -0.0032,      0.2188,      0.2988,      0.3926,     -0.2598,      0.0427,      0.2715],
        [    -0.0000,      0.0549,      0.3086,      0.0884,      0.1177,      0.0898,     -0.3105,     -0.0253,     -0.0566,      0.1289,     -0.1523,     -0.1123,     -0.2207,      0.1494,      0.1089],
        [    -0.0000,      0.0041,     -0.2031,     -0.2295,      0.4160,      0.4980,     -0.0493,      0.4336,      0.0366,      0.4219,      0.0859,      0.0289,     -0.2031,     -0.2021,      0.3711],
        [    -0.0000,      0.1216,      0.4414,     -0.2402,      0.5820,     -0.3750,     -0.1299,     -0.1182,      0.2412,     -0.2617,      0.4805,     -0.0801,      0.1006,     -0.1807,      0.3535],
        [     0.0000,      0.0148,     -0.2168,      0.0513,     -0.0271,      0.2988,      0.3203,     -0.4512,      0.3379,     -0.0248,     -0.1162,      0.0923,      0.0190,      0.0186,     -0.0591],
        [     0.0000,      0.0095,     -0.2217,      0.5117,     -0.5391,     -0.0947,      0.2148,     -0.1250,      0.1357,      0.5469,     -0.1582,      0.6250,      0.1807,      0.2490,     -0.1523],
        [    -0.0000,      0.1807,      0.5938,     -0.0269,     -0.0330,     -0.0835,     -0.1836,     -0.0437,      0.3164,     -0.3496,      0.2275,      0.2236,      0.3945,     -0.0247,     -0.0908],
        [    -0.0000,      0.3008,      0.2754,     -0.1123,      0.6094,     -0.5938,     -0.0781,     -0.1787,      0.3066,     -0.2891,     -0.2266,      0.3574,     -0.1846,     -0.1426,     -0.2275],
        [    -0.0000,     -0.2812,      0.8672,     -0.3203,      0.0427,      0.0771,     -0.2656,     -0.3574,      0.3242,      0.5469,     -0.2930,      0.3281,      0.3203,      0.5430,      0.2051],
        [    -0.0000,     -0.0204,      0.0923,     -0.0820,      0.1084,     -0.4746,     -0.1934,     -0.1309,      0.2451,     -0.1221,     -0.0320,     -0.2773,     -0.2236,     -0.2598,      0.0562],
        [    -0.0000,     -0.0244,      0.2773,     -0.2285,     -0.0043,     -0.1367,      0.2168,      0.3242,      0.2598,      0.5117,      0.2080,      0.6562,      0.3379,      0.1504,      0.4316],
        [    -0.0000,      0.0742,      0.3125,     -0.0732,      0.4863,      0.1128,      0.0918,     -0.2422,     -0.1309,      0.1089,      0.1748,      0.1123,     -0.0172,     -0.1885,     -0.0184]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5016],
        [0.3501],
        [0.2433],
        [0.1963],
        [0.1606],
        [0.1361],
        [0.1213],
        [0.1081],
        [0.0961],
        [0.0892],
        [0.0834],
        [0.0763],
        [0.0664],
        [0.0636]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4941, 0.5078, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3438, 0.3125, 0.3418, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2812, 0.2520, 0.2988, 0.1680, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2021, 0.1533, 0.2275, 0.1709, 0.2451, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1699, 0.1562, 0.1777, 0.1738, 0.1729, 0.1494, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1377, 0.1514, 0.1689, 0.1377, 0.0923, 0.1387, 0.1729, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1147, 0.0986, 0.0767, 0.1128, 0.1123, 0.0991, 0.1914, 0.1943, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1011, 0.1089, 0.0767, 0.0718, 0.1260, 0.0801, 0.1172, 0.1719, 0.1475, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0986, 0.0547, 0.0854, 0.0574, 0.0796, 0.0747, 0.2090, 0.0938, 0.1250, 0.1216, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0894, 0.1123, 0.0918, 0.0869, 0.1172, 0.0806, 0.0801, 0.0938, 0.0645, 0.0889, 0.0942, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0762, 0.1118, 0.0742, 0.0635, 0.0815, 0.0776, 0.0771, 0.1484, 0.0640, 0.0603, 0.0874, 0.0786, 0.0000, 0.0000, 0.0000],
        [0.0649, 0.1094, 0.0815, 0.0757, 0.1196, 0.0762, 0.0530, 0.0437, 0.0835, 0.0649, 0.0815, 0.0615, 0.0845, 0.0000, 0.0000],
        [0.0645, 0.0583, 0.0479, 0.0532, 0.1191, 0.0564, 0.1050, 0.0732, 0.1035, 0.0879, 0.0449, 0.0825, 0.0540, 0.0493, 0.0000],
        [0.0679, 0.0757, 0.0576, 0.0598, 0.1006, 0.0491, 0.0742, 0.0669, 0.0728, 0.0728, 0.0486, 0.0527, 0.0525, 0.0649, 0.0840]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0000,     -0.0000,     -0.0000,      0.0000,      0.0000,      0.0000,     -0.0000,     -0.0000,     -0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.0255,      0.1621,     -0.1602,      0.3027,      0.4570,     -0.1562,      0.0310,      0.0986,      0.1484,      0.1494,      0.0447,      0.7578,      0.2168,      0.3789],
        [    -0.0000,     -0.0967,     -0.0054,     -0.2373,      0.3594,     -0.6367,      0.1826,     -0.2676,      0.3320,      0.0160,      0.0535,     -0.5820,      0.4160,     -0.0055,     -0.0649],
        [    -0.0000,     -0.1089,      0.0566,     -0.5195,     -0.2559,     -0.2500,      0.5391,      0.1748,      0.4160,     -0.2754,      0.1201,      0.2158,     -0.3359,     -0.1270,     -0.7539],
        [     0.0000,     -0.2812,      0.1182,     -0.1670,      0.1914,      0.4688,      0.1924,     -0.5117,      0.0962,      0.1846,      0.0437,     -0.4355,     -0.1621,      0.2246,      0.1895],
        [    -0.0000,     -0.0859,      0.0469,      0.0206,      0.0171,     -0.1309,     -0.0070,     -0.0625,      0.6172,     -0.0253,      0.1406,     -0.1533,     -0.0215,     -0.0248,     -0.5156],
        [    -0.0000,      0.0913,      0.2041,      0.0014,     -0.4023,      0.0027,      0.2256,     -0.0723,     -0.2227,     -0.1128,     -0.4609,     -0.2500,     -0.5703,     -0.6602,     -0.2295],
        [     0.0000,     -0.1533,     -0.4043,     -0.0164,     -0.0234,     -0.1465,      0.5078,      0.5273,      0.0620,     -0.4590,      0.0574,     -0.0119,     -0.2793,     -0.1836,     -0.4355],
        [    -0.0000,      0.0723,     -0.2793,     -0.3438,      0.2148,     -0.2354,      0.1455,      0.5273,      0.3750,     -0.3828,     -0.1245,      0.0259,     -0.2695,     -0.0806,     -0.1226],
        [     0.0000,     -0.5859,     -0.1416,     -0.5391,     -0.2158,     -0.2754,      0.7539,     -0.0496,      0.2373,      0.2100,     -0.0179,      0.0669,     -0.7344,     -0.4805,      0.0427],
        [     0.0000,      0.2266,      0.0233,     -0.0291,      0.2676,     -0.1030,     -0.1147,      0.0461,     -0.3320,     -0.0065,      0.0525,     -0.1226,     -0.0164,      0.1953,      0.2773],
        [     0.0000,      0.3887,     -0.0236,     -0.1768,      0.0713,      0.0189,      0.0127,      0.6680,     -0.1748,     -0.2305,      0.1387,      0.0364,     -0.0018,     -0.2217,     -0.0522],
        [     0.0000,      0.5195,      0.2275,      0.1553,      0.6133,      0.1611,     -0.2021,     -0.3926,      0.2500,     -0.0019,      0.2305,     -0.0508,      0.2656,     -0.0996,      0.4473],
        [     0.0000,     -0.1021,     -0.2988,     -0.1943,      0.6133,     -0.1377,      0.4863,      0.1235,      0.4746,      0.3105,     -0.3633,      0.2451,     -0.1807,     -0.2695,      0.1523],
        [     0.0000,      0.1099,     -0.1641,     -0.1235,      0.3945,     -0.3242,      0.0889,     -0.0121,      0.0728,      0.0693,     -0.3359,     -0.2539,     -0.2559,     -0.0396,      0.2139]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4541],
        [0.3170],
        [0.2450],
        [0.1980],
        [0.1642],
        [0.1448],
        [0.1226],
        [0.1060],
        [0.0978],
        [0.0863],
        [0.0809],
        [0.0724],
        [0.0674],
        [0.0632]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6094, 0.3906, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3418, 0.3281, 0.3301, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2100, 0.2021, 0.3926, 0.1943, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1689, 0.1973, 0.1904, 0.1982, 0.2461, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1699, 0.1504, 0.1533, 0.1895, 0.2090, 0.1270, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1436, 0.1787, 0.1152, 0.1748, 0.1260, 0.1328, 0.1289, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0972, 0.0669, 0.1855, 0.1299, 0.2305, 0.1357, 0.0820, 0.0718, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0967, 0.1050, 0.1299, 0.1221, 0.1235, 0.1177, 0.1157, 0.0576, 0.1328, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1045, 0.1406, 0.0859, 0.1235, 0.1128, 0.0684, 0.0825, 0.1602, 0.0588, 0.0630, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0801, 0.0918, 0.1172, 0.0498, 0.0820, 0.0884, 0.0645, 0.0986, 0.0854, 0.0933, 0.1484, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0723, 0.0986, 0.0796, 0.1167, 0.0889, 0.0613, 0.1055, 0.0640, 0.1001, 0.0791, 0.0574, 0.0762, 0.0000, 0.0000, 0.0000],
        [0.0669, 0.0845, 0.0693, 0.0825, 0.0889, 0.0771, 0.0811, 0.0588, 0.0903, 0.0649, 0.0649, 0.0767, 0.0928, 0.0000, 0.0000],
        [0.0566, 0.0723, 0.0688, 0.0835, 0.0864, 0.0608, 0.0786, 0.0449, 0.0723, 0.1030, 0.0596, 0.0693, 0.0698, 0.0742, 0.0000],
        [0.0569, 0.0752, 0.0903, 0.0613, 0.0601, 0.0825, 0.0674, 0.0442, 0.0549, 0.0544, 0.0698, 0.0635, 0.0713, 0.0723, 0.0762]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,     -0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [    -0.0000,     -0.4414,     -0.0069,     -0.4941,     -0.5273,      0.1357,      0.2891,     -0.2559,     -0.2773,      0.0610,      0.2539,     -0.5820,      0.1167,     -0.0825,     -0.0315],
        [     0.0000,     -0.0408,     -0.0315,      0.0938,      0.1494,      0.2461,      0.3613,     -0.1895,      0.1299,     -0.0284,     -0.2695,      0.0422,     -0.1660,      0.0461,     -0.2793],
        [    -0.0000,     -0.0371,      0.6250,     -0.0791,      0.0879,      0.4375,      0.5312,     -0.0723,     -0.1445,      0.5391,      0.3535,     -0.1592,      0.1177,     -0.1338,      0.2773],
        [     0.0000,      0.1533,      0.1182,      0.1602,      0.3750,     -0.0938,      0.0194,      0.1523,     -0.1230,     -0.1582,      0.0101,      0.0544,      0.2734,     -0.3086,      0.0188],
        [     0.0000,     -0.1187,     -0.0977,      0.1128,      0.2080,     -0.2852,     -0.3828,     -0.2969,      0.1309,     -0.5078,     -0.2891,     -0.4199,      0.2617,     -0.2930,     -0.3145],
        [    -0.0000,      0.2207,     -0.2148,      0.2021,     -0.1245,     -0.0776,     -0.1045,      0.1553,     -0.0928,      0.0684,     -0.1650,     -0.1836,     -0.1768,      0.0376,     -0.0165],
        [    -0.0000,     -0.3730,      0.6484,      0.2910,      0.8672,      0.3379,     -0.1689,     -0.3047,      0.2178,      0.5430,      0.5234,      0.1309,      0.6836,      0.1943,      0.0233],
        [    -0.0000,      0.0815,      0.2949,      0.2334,      0.2471,      0.1973,      0.1807,     -0.5156,      0.3164,      0.2012,     -0.3203,      0.0796,     -0.1040,      0.0275,     -0.1602],
        [    -0.0000,      0.2969,     -0.1943,      0.1670,      0.0752,     -0.4199,     -0.2334,      0.4277,     -0.5703,     -0.5078,      0.0198,     -0.1025,     -0.5703,     -0.1631,      0.0923],
        [     0.0000,      0.1387,      0.3828,     -0.4727,      0.0262,      0.1030,     -0.2178,      0.2119,      0.0688,      0.1553,      0.6172,      0.4492,      0.1904,      0.2246,      0.1943],
        [     0.0000,      0.3086,      0.0913,      0.4766,      0.2031,     -0.1670,      0.3750,     -0.1230,      0.3223,      0.0898,     -0.2354,      0.0498,      0.3535,     -0.0728,     -0.0913],
        [     0.0000,      0.2354,      0.0320,      0.2090,      0.2852,      0.1426,      0.1943,     -0.1270,      0.3027,     -0.0267,     -0.0288,      0.1387,      0.3262,      0.1289,      0.1079],
        [    -0.0000,      0.2432,      0.1943,      0.3867,      0.4238,      0.0723,      0.3320,     -0.2334,      0.2451,      0.5977,      0.0532,      0.2051,      0.2070,      0.2734,      0.0742],
        [     0.0000,      0.2773,      0.4629,      0.0742,      0.0527,      0.3691,      0.1689,     -0.2559,     -0.0337,     -0.0427,      0.2041,      0.1074,      0.2256,      0.2373,      0.2910]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4894],
        [0.3586],
        [0.2367],
        [0.1956],
        [0.1716],
        [0.1448],
        [0.1275],
        [0.1082],
        [0.1007],
        [0.0940],
        [0.0819],
        [0.0781],
        [0.0749],
        [0.0657]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4102, 0.5898, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2812, 0.4727, 0.2441, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2383, 0.3164, 0.2139, 0.2314, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2021, 0.2344, 0.2197, 0.1670, 0.1768, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1436, 0.0649, 0.1729, 0.1797, 0.2734, 0.1650, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1504, 0.1138, 0.1738, 0.1436, 0.1729, 0.1270, 0.1196, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1235, 0.0835, 0.1777, 0.0791, 0.1089, 0.1367, 0.1836, 0.1069, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1216, 0.1318, 0.1206, 0.0977, 0.1348, 0.1113, 0.0952, 0.1006, 0.0864, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0957, 0.0298, 0.1406, 0.0957, 0.1523, 0.0806, 0.0972, 0.1094, 0.1025, 0.0957, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0811, 0.0718, 0.0815, 0.0801, 0.1484, 0.0635, 0.1348, 0.1006, 0.0762, 0.0752, 0.0864, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0762, 0.0598, 0.1270, 0.0908, 0.1128, 0.1011, 0.0640, 0.0903, 0.0728, 0.0457, 0.0928, 0.0659, 0.0000, 0.0000, 0.0000],
        [0.0747, 0.0593, 0.1143, 0.0786, 0.1064, 0.0562, 0.0708, 0.0771, 0.0586, 0.0757, 0.1050, 0.0601, 0.0635, 0.0000, 0.0000],
        [0.0693, 0.0703, 0.0850, 0.0381, 0.0703, 0.0776, 0.0610, 0.0664, 0.1016, 0.0972, 0.0559, 0.0623, 0.0569, 0.0879, 0.0000],
        [0.0615, 0.0554, 0.0679, 0.0820, 0.0840, 0.0474, 0.0654, 0.0835, 0.0869, 0.0535, 0.0806, 0.0554, 0.0513, 0.0713, 0.0535]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.0000,     -0.0000,      0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000],
        [    -0.0000,      0.3613,      0.0417,     -0.1855,      0.0576,      0.0060,     -0.0986,     -0.2158,     -0.7930,      0.1533,      0.2148,      0.0162,     -0.2100,      0.0277,      0.2002],
        [    -0.0000,      0.5156,     -0.1436,      0.4570,      0.2080,      0.2461,      1.1172,      0.2168,      0.7734,      0.1621,      0.3516,      0.1396,     -0.4160,      0.5273,      0.2354],
        [    -0.0000,      0.2832,     -0.1089,     -0.0320,     -0.0601,     -0.2080,     -0.0251,     -0.4102,     -0.1099,     -0.1797,     -0.1245,      0.3535,     -0.1816,     -0.2256,      0.1187],
        [     0.0000,      0.1455,      0.0830,     -0.1904,     -0.1367,      0.5508,      0.2354,     -0.2695,     -0.1875,      0.3242,     -0.1553,      0.6055,     -0.0742,      0.4199,      0.3477],
        [    -0.0000,     -0.7969,      0.1826,      0.2256,      0.6484,      0.1387,      0.0713,     -0.0674,      0.1963,     -0.3477,     -0.0386,     -0.3320,      0.6250,     -0.0522,     -0.0334],
        [    -0.0000,     -0.2754,      0.1484,     -0.0454,      0.1396,     -0.1680,     -0.2246,      0.0981,      0.5859,     -0.4492,      0.3809,     -0.2793,      0.1934,      0.4238,      0.2314],
        [    -0.0000,     -0.3906,      0.3633,     -0.4492,     -0.1279,      0.1021,      0.3926,     -0.1455,      0.0630,      0.0806,      0.6289,      0.4102,     -0.1582,      0.0957,      0.2617],
        [    -0.0000,      0.0796,     -0.0089,     -0.2197,      0.1040,     -0.0874,     -0.2432,     -0.1904,     -0.3398,      0.2314,     -0.1748,      0.1216,     -0.0427,     -0.1904,      0.2539],
        [    -0.0000,     -1.1719,      0.3809,      0.0004,      0.4648,     -0.1758,      0.0140,      0.1328,      0.0674,      0.0010,     -0.1797,     -0.2598,      0.2051,      0.2793,      0.1299],
        [    -0.0000,     -0.1211,      0.0067,     -0.0093,      0.6094,     -0.2480,      0.5039,      0.2178,     -0.0610,     -0.0742,      0.0640,     -0.1138,     -0.0347,     -0.1572,      0.3086],
        [    -0.0000,     -0.2451,      0.5117,      0.1748,      0.3887,      0.2812,     -0.1738,      0.1699,     -0.0471,     -0.5156,      0.1924,     -0.1484,     -0.3145,      0.6680,      0.4688],
        [    -0.0000,     -0.2305,      0.4258,      0.0522,      0.3555,     -0.2871,     -0.0562,      0.0359,     -0.2432,      0.0118,      0.3398,     -0.2168,     -0.1602,      0.1118,      0.3438],
        [    -0.0000,      0.0130,      0.2031,     -0.6016,      0.0134,      0.1118,     -0.1299,     -0.0449,      0.3789,      0.3379,     -0.2148,     -0.1104,     -0.1982,      0.2363,      0.3379],
        [    -0.0000,     -0.1030,      0.0952,      0.2891,      0.3125,     -0.2617,      0.0649,      0.3027,      0.3457,     -0.1387,      0.2715,     -0.1069,     -0.1846,      0.1484,     -0.1426]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4826],
        [0.3467],
        [0.2397],
        [0.1872],
        [0.1635],
        [0.1434],
        [0.1256],
        [0.1077],
        [0.0986],
        [0.0894],
        [0.0826],
        [0.0723],
        [0.0728],
        [0.0663]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3711, 0.6289, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2422, 0.4141, 0.3438, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2334, 0.1963, 0.2715, 0.2988, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1885, 0.1719, 0.1895, 0.2178, 0.2324, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1196, 0.2207, 0.2129, 0.1299, 0.1084, 0.2080, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1118, 0.1592, 0.1797, 0.0874, 0.1836, 0.1377, 0.1396, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1133, 0.1309, 0.1885, 0.0845, 0.0791, 0.1211, 0.1475, 0.1348, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1226, 0.1045, 0.1187, 0.0830, 0.1543, 0.1348, 0.0840, 0.1138, 0.0850, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0854, 0.1602, 0.1006, 0.0708, 0.1021, 0.1475, 0.0874, 0.0942, 0.0620, 0.0908, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0894, 0.1094, 0.0835, 0.0559, 0.0879, 0.0986, 0.0728, 0.1177, 0.0786, 0.1084, 0.0972, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0767, 0.0588, 0.0928, 0.0693, 0.1245, 0.0884, 0.0933, 0.1279, 0.0510, 0.0571, 0.1021, 0.0583, 0.0000, 0.0000, 0.0000],
        [0.0762, 0.0630, 0.1006, 0.0549, 0.0771, 0.0654, 0.0811, 0.0752, 0.0698, 0.0913, 0.0752, 0.0723, 0.0981, 0.0000, 0.0000],
        [0.0713, 0.0708, 0.0879, 0.0630, 0.0598, 0.0820, 0.0630, 0.0923, 0.0591, 0.1006, 0.0835, 0.0640, 0.0400, 0.0620, 0.0000],
        [0.0708, 0.0723, 0.1309, 0.0574, 0.0708, 0.0522, 0.0854, 0.0422, 0.0527, 0.0723, 0.0530, 0.0569, 0.0752, 0.0403, 0.0674]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000],
        [    -0.0000,      0.5273,      0.2969,     -0.5078,     -0.3535,     -0.1318,      0.2363,     -0.0801,     -0.3320,     -0.4277,     -0.2988,      0.0113,     -0.3359,     -0.1797,     -0.1455],
        [     0.0000,      0.5391,      0.3477,     -0.2471,      0.6250,      0.2314,     -0.0024,     -1.0000,     -0.9336,     -0.2754,     -0.8672,     -0.0013,     -0.0233,     -0.7305,      0.0020],
        [    -0.0000,     -0.1748,      0.1533,      0.2451,      0.4258,      0.1309,      0.0815,      0.4023,      0.0605,     -0.2471,      0.2676,     -0.0232,     -0.2969,      0.4004,      0.0120],
        [     0.0000,     -0.0913,      0.0021,      0.1445,      0.2090,      0.1973,     -0.0481,      0.4863,      0.0640,      0.2617,      0.3262,      0.3574,      0.3730,      0.3887,      0.5508],
        [     0.0000,      0.6172,      0.5781,      0.0854,     -0.0947,      0.5547,     -0.0781,      0.2520,      0.1641,      0.0042,     -0.0220,     -0.0520,     -0.5938,     -0.3691,     -0.2344],
        [    -0.0000,      0.3477,      0.4727,     -0.2461,      0.4961,      0.2080,      0.2227,      0.1709,     -0.0498,      0.0796,      0.1299,      0.2461,     -0.3848,      0.0635,     -0.1445],
        [    -0.0000,      0.1475,      0.5117,     -0.2910,     -0.3555,      0.0684,      0.2656,      0.1768,      0.4395,      0.0471,     -0.0308,     -0.3652,      0.1504,      0.1895,     -0.2373],
        [    -0.0000,     -0.1572,     -0.0320,     -0.3906,      0.2275,      0.0918,     -0.3789,     -0.0767,     -0.3672,      0.1865,      0.0245,      0.0016,     -0.1377,      0.3242,     -0.1299],
        [    -0.0000,      0.6289,      0.1621,     -0.1875,      0.1777,      0.5469,      0.0216,      0.1011,     -0.3184,      0.0613,      0.0135,      0.0383,     -0.5117,     -0.0361,      0.0996],
        [    -0.0000,      0.2031,     -0.0649,     -0.4668,     -0.0142,      0.0996,     -0.2012,      0.2793,     -0.1245,      0.1934,      0.0864,     -0.1436,     -0.1924,      0.1157,      0.1670],
        [    -0.0000,     -0.2637,      0.1914,     -0.1025,      0.4863,      0.1445,      0.1943,      0.5117,     -0.4043,     -0.2910,      0.2852,     -0.2715,     -0.3047,      0.1040,      0.1406],
        [    -0.0000,     -0.1943,      0.2754,     -0.3281,      0.0125,     -0.1504,      0.0598,     -0.0122,     -0.0894,      0.1787,     -0.0143,     -0.0564,      0.2500,      0.2715,      0.1768],
        [    -0.0000,     -0.0070,      0.2051,     -0.1235,     -0.1758,      0.1377,     -0.1279,      0.2578,     -0.1914,      0.3398,      0.1582,     -0.1074,     -0.5820,     -0.1406,      0.1748],
        [    -0.0000,      0.0197,      0.6172,     -0.2090,      0.0005,     -0.3008,      0.1885,     -0.5156,     -0.2949,      0.0199,     -0.2891,     -0.2188,      0.0601,     -0.5664,     -0.0491]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4795],
        [0.3033],
        [0.2434],
        [0.1999],
        [0.1561],
        [0.1353],
        [0.1196],
        [0.1100],
        [0.0951],
        [0.0898],
        [0.0806],
        [0.0777],
        [0.0719],
        [0.0687]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4648, 0.5352, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4551, 0.1699, 0.3750, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2656, 0.3418, 0.1611, 0.2305, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1641, 0.1484, 0.2236, 0.3047, 0.1602, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1504, 0.2461, 0.1621, 0.1484, 0.1582, 0.1348, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1201, 0.2061, 0.1641, 0.1216, 0.1118, 0.1182, 0.1582, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0991, 0.1436, 0.1187, 0.0776, 0.1553, 0.1328, 0.1592, 0.1143, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0884, 0.1289, 0.0947, 0.1328, 0.1206, 0.1001, 0.1084, 0.1084, 0.1172, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0771, 0.1309, 0.0693, 0.0591, 0.1191, 0.0967, 0.1475, 0.0986, 0.1025, 0.0986, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0898, 0.1357, 0.0942, 0.0820, 0.0684, 0.0815, 0.1196, 0.0942, 0.0825, 0.0649, 0.0874, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0635, 0.1631, 0.0569, 0.0532, 0.0703, 0.0625, 0.1050, 0.0938, 0.1006, 0.0801, 0.0752, 0.0752, 0.0000, 0.0000, 0.0000],
        [0.0698, 0.1226, 0.0596, 0.0349, 0.0649, 0.0454, 0.1367, 0.1270, 0.0645, 0.0713, 0.0928, 0.0576, 0.0540, 0.0000, 0.0000],
        [0.0693, 0.0742, 0.0598, 0.1201, 0.0708, 0.0708, 0.0996, 0.0850, 0.0483, 0.0723, 0.0503, 0.0535, 0.0640, 0.0618, 0.0000],
        [0.0625, 0.0630, 0.0583, 0.0645, 0.0571, 0.0757, 0.0771, 0.0688, 0.0579, 0.0598, 0.0669, 0.0540, 0.0869, 0.0625, 0.0850]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0000,     -0.0000,     -0.0000,     -0.0000,      0.0000,     -0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [    -0.0000,      0.1396,      0.1426,     -0.0859,      0.6250,      0.3477,     -0.3457,      0.2227,      0.2539,      0.0889,      0.3516,      0.6094,      0.2168,      0.3379,      0.0967],
        [    -0.0000,     -0.9844,     -0.1924,      0.1963,      0.7070,      0.7773,      0.1201,      0.0002,     -0.0283,     -0.3223,     -0.2256,      0.2383,     -0.3457,     -0.6016,     -0.1079],
        [    -0.0000,      0.2539,     -0.5000,     -0.1406,     -0.1069,     -0.1484,      0.3164,      0.0967,     -0.0884,      0.1572,      0.6172,      0.6250,      0.1201,      0.4590,      0.1416],
        [    -0.0000,     -0.1001,      0.3105,      0.6211,     -0.0251,      0.1973,      0.4902,      0.0156,     -0.0869,     -0.0669,     -0.4746,     -0.1050,      0.0957,     -0.5352,      0.1738],
        [    -0.0000,      0.4922,      0.0742,     -0.0107,      0.0488,     -0.1143,      0.6602,      1.0312,      0.4941,      0.0610,      0.4688,      0.4980,      0.4570,      0.3047,      0.8555],
        [    -0.0000,      0.5391,      0.3125,      0.0115,     -0.0703,     -0.0173,      0.2773,      0.0530,      0.1982,      0.3613,      0.3184,     -0.0684,      0.2188,      0.5703,      0.0811],
        [    -0.0000,      0.3691,      0.1768,     -0.2441,      0.4453,      0.2910,      0.4727,      0.1416,      0.1689,      0.0315,     -0.0262,      0.6562,      0.0525,     -0.1318,      0.1260],
        [    -0.0000,      0.3809,      0.0737,      0.4121,      0.3145,      0.1260,      0.2070,      0.2061,      0.2852,      0.6367,     -0.0884,      0.0413,     -0.3164,      0.2988,      0.3320],
        [    -0.0000,      0.5273,     -0.1108,     -0.2715,      0.4336,      0.2207,      0.6484,      0.2422,      0.2812,      0.2451,      0.0581,      0.2852,      0.2393,      0.0298,     -0.0952],
        [     0.0000,      0.4082,      0.0439,     -0.0923,     -0.2773,     -0.0962,      0.2852,      0.0466,     -0.0869,     -0.3262,     -0.0306,     -0.1611,      0.1177,     -0.0068,      0.2559],
        [    -0.0000,      0.9414,     -0.1104,     -0.1787,      0.1025,     -0.0160,      0.5000,      0.3867,      0.4551,      0.2305,      0.1650,      0.1680,      0.0121,      0.4062,      0.5195],
        [    -0.0000,      0.5586,     -0.1611,     -0.6953,     -0.0718,     -0.4355,      0.6680,      0.5938,     -0.0850,      0.0159,      0.2832,     -0.1943,     -0.2578,      0.1235,      0.5977],
        [     0.0000,      0.0664,     -0.1504,      0.5469,      0.0184,      0.0201,      0.3594,      0.2021,     -0.3613,      0.0386,     -0.3242,     -0.2617,     -0.0845,     -0.1172,      0.0645],
        [    -0.0000,      0.0070,     -0.0698,      0.0269,     -0.0928,      0.1865,      0.2109,      0.0981,     -0.0806,     -0.0461,      0.0693,     -0.1484,      0.3262,     -0.0020,      0.3047]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4950],
        [0.3507],
        [0.2370],
        [0.1928],
        [0.1617],
        [0.1366],
        [0.1141],
        [0.1075],
        [0.0992],
        [0.0949],
        [0.0802],
        [0.0760],
        [0.0715],
        [0.0649]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4258, 0.5742, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2461, 0.3926, 0.3613, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2070, 0.2695, 0.3027, 0.2197, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1582, 0.1973, 0.1826, 0.2373, 0.2236, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1289, 0.1436, 0.1099, 0.2188, 0.1836, 0.2148, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1387, 0.1260, 0.1348, 0.1826, 0.1641, 0.1758, 0.0776, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1025, 0.0698, 0.0742, 0.1982, 0.1060, 0.1348, 0.0869, 0.2275, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1060, 0.0884, 0.1963, 0.1147, 0.1045, 0.1064, 0.0537, 0.1299, 0.0996, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0923, 0.1108, 0.0618, 0.0640, 0.2109, 0.1260, 0.0532, 0.0913, 0.1162, 0.0732, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0952, 0.1211, 0.0708, 0.1387, 0.1143, 0.0952, 0.0664, 0.0972, 0.0483, 0.0605, 0.0928, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0791, 0.0718, 0.1260, 0.0859, 0.1143, 0.0757, 0.0544, 0.0654, 0.0840, 0.0581, 0.0679, 0.1172, 0.0000, 0.0000, 0.0000],
        [0.0728, 0.0898, 0.0776, 0.0630, 0.0942, 0.0928, 0.0461, 0.0684, 0.0908, 0.0623, 0.0854, 0.0623, 0.0947, 0.0000, 0.0000],
        [0.0820, 0.0996, 0.0486, 0.1318, 0.0933, 0.0679, 0.0427, 0.0615, 0.0552, 0.0684, 0.0688, 0.0540, 0.0479, 0.0771, 0.0000],
        [0.0608, 0.0547, 0.0757, 0.0703, 0.1250, 0.0845, 0.0437, 0.0781, 0.0552, 0.0439, 0.0674, 0.0630, 0.0554, 0.0713, 0.0515]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000],
        [    -0.0000,      0.3008,     -0.2480,      0.0162,     -0.0845,     -0.2256,      0.1748,      0.4473,      0.1709,      0.1973,     -0.1738,     -0.2344,     -0.1465,     -0.1729,     -0.0869],
        [     0.0000,      0.4668,      0.3848,      0.1865,     -0.1553,     -0.0820,     -0.5547,     -0.1260,      0.0403,     -0.1021,     -0.4746,     -0.3105,     -0.0381,     -0.4082,      0.1387],
        [    -0.0000,      0.2637,      0.3770,      0.0581,      0.8867,      0.2773,     -0.5859,      0.4961,      0.3008,      0.0601,      0.5977,      0.7656,      0.7617,      0.1621,      0.0698],
        [    -0.0000,      0.2178,      0.1426,      0.4023,      0.3457,      0.1846,     -0.2676,      0.0640,     -0.0596,     -0.1084,      0.5977,      0.1670,      0.4336,      0.0542,      0.1406],
        [    -0.0000,      0.1084,     -0.1592,      0.5312,      0.3535,      0.5117,      0.1758,      0.2637,      0.6250,      0.0317,      0.2754,      0.6875,      0.4648,     -0.2852,      0.3555],
        [     0.0000,     -0.0918,     -0.0251,      0.2773,      0.1680,      0.2393,     -0.5820,      0.3672,     -0.1377,      0.0108,      0.3359,      0.3691,      0.1914,     -0.0613,      0.3477],
        [     0.0000,     -0.3867,     -0.3242,      0.6602,      0.0339,      0.2695,     -0.1660,      0.7969,     -0.0898,     -0.0791,      0.4629,      0.6914,     -0.0425,      0.2598,      0.0981],
        [    -0.0000,     -0.1816,      0.6172,      0.0786,     -0.0148,      0.0042,     -0.6797,      0.2021,     -0.0630,     -0.2910,     -0.3672,      0.0583,      0.3516,      0.0253,     -0.0122],
        [    -0.0000,      0.1836,     -0.4023,     -0.3711,      0.8242,      0.3066,     -0.5547,     -0.0129,      0.2305,     -0.2344,      0.1465,      0.3770,      0.7188,     -0.0732,     -0.2559],
        [    -0.0000,      0.2422,     -0.2969,      0.3730,      0.1846,     -0.0006,     -0.3633,      0.0198,     -0.6797,     -0.4551,     -0.0273,     -0.0693,     -0.4062,     -0.0742,     -0.1035],
        [    -0.0000,     -0.0923,      0.4668,      0.0854,      0.3711,     -0.0422,     -0.3691,     -0.1836,      0.0625,     -0.3066,     -0.1494,      0.3965,      0.4941,     -0.0452,      0.1846],
        [    -0.0000,      0.2129,      0.0708,     -0.1387,      0.2617,      0.2441,     -0.4492,     -0.0610,      0.2236,     -0.1523,      0.1660,     -0.1543,      0.2656,     -0.1660,      0.0322],
        [     0.0000,      0.1914,     -0.5234,      0.4766,      0.1279,     -0.1895,     -0.6523,     -0.2871,     -0.4004,     -0.1826,     -0.1738,     -0.4199,     -0.5391,     -0.0645,     -0.0869],
        [    -0.0000,     -0.1045,      0.2227,      0.1455,      0.7266,      0.3301,     -0.3262,      0.2539,     -0.0942,     -0.3242,      0.1025,      0.0352,     -0.0918,      0.1592,     -0.1650]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5007],
        [0.3182],
        [0.2341],
        [0.1912],
        [0.1510],
        [0.1456],
        [0.1204],
        [0.1088],
        [0.0951],
        [0.0875],
        [0.0807],
        [0.0758],
        [0.0684],
        [0.0675]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5742, 0.4258, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2988, 0.3730, 0.3262, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2480, 0.2490, 0.1807, 0.3223, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1895, 0.1582, 0.2451, 0.1797, 0.2275, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1484, 0.1245, 0.1064, 0.2715, 0.1768, 0.1729, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1128, 0.0698, 0.1108, 0.2344, 0.2178, 0.1182, 0.1357, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1167, 0.0801, 0.1035, 0.1523, 0.0801, 0.1777, 0.1162, 0.1729, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1094, 0.0830, 0.0815, 0.1299, 0.1816, 0.0874, 0.1533, 0.0996, 0.0752, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0913, 0.1357, 0.0608, 0.1196, 0.1104, 0.1143, 0.0564, 0.1348, 0.0962, 0.0806, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0957, 0.0859, 0.0723, 0.1187, 0.0942, 0.1113, 0.0535, 0.1309, 0.0752, 0.0552, 0.1064, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0923, 0.0967, 0.0728, 0.1338, 0.1016, 0.0791, 0.0566, 0.1021, 0.0464, 0.0513, 0.1094, 0.0583, 0.0000, 0.0000, 0.0000],
        [0.0708, 0.0452, 0.0708, 0.1318, 0.0693, 0.1055, 0.0505, 0.0825, 0.0559, 0.0938, 0.0962, 0.0549, 0.0732, 0.0000, 0.0000],
        [0.0723, 0.0527, 0.0466, 0.0854, 0.0796, 0.0732, 0.0669, 0.0889, 0.0574, 0.0659, 0.0942, 0.0806, 0.0603, 0.0757, 0.0000],
        [0.0728, 0.0552, 0.0479, 0.1118, 0.0659, 0.0947, 0.0640, 0.0771, 0.0427, 0.0625, 0.0623, 0.0698, 0.0532, 0.0679, 0.0520]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,     -0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [    -0.0000,     -0.3008,      0.3984,      0.1709,     -0.2793,      0.3379,      0.2002,      0.0408,     -0.0259,     -0.0549,     -0.3066,      0.4141,      0.3770,      0.0300,     -0.1406],
        [     0.0000,      0.2217,      0.0864,      0.7617,      0.2441,      0.2773,     -0.0610,      0.5273,      0.1816,     -0.3730,      0.1621,      0.2158,     -0.2188,      0.4355,      0.1973],
        [     0.0000,      0.0038,     -0.3145,      0.2617,     -0.3574,     -0.1211,      0.0095,      0.2334,     -0.4297,     -0.0569,      0.0164,     -0.1084,     -0.2539,     -0.1250,     -0.2695],
        [     0.0000,     -0.1846,      0.2559,     -0.0564,      0.1836,      0.5391,     -0.7617,      0.1270,     -0.0275,     -0.2754,     -0.0703,     -0.5664,     -0.1069,     -0.0645,      0.0298],
        [     0.0000,     -0.1748,     -0.3301,      0.6016,      0.1777,      0.1523,     -0.2793,      0.2090,      0.2559,     -0.3125,      0.1055,      0.1650,     -0.0835,     -0.0369,      0.1167],
        [     0.0000,     -0.4805,     -0.0179,      0.7344,      0.6602,      0.0496,      0.1904,      0.4043,      0.2021,     -0.3535,     -0.2988,      0.1562,      0.0167,      0.1357,      0.1582],
        [     0.0000,     -0.3770,     -0.1206,      0.2676,     -0.3770,      0.4180,     -0.0070,      0.3887,     -0.0669,     -0.2715,     -0.2637,     -0.1318,     -0.2217,     -0.0649,     -0.1904],
        [     0.0000,     -0.2773,     -0.2949,      0.1699,      0.5078,     -0.2246,      0.3379,     -0.0942,     -0.3730,      0.0520,     -0.0293,     -0.1973,     -0.3945,      0.0291,     -0.4082],
        [     0.0000,      0.3965,     -0.4062,      0.2676,      0.1865,      0.2227,     -0.4824,      0.3887,      0.0493,     -0.1250,     -0.1572,      0.1631,     -0.3926,      0.4277,      0.1475],
        [     0.0000,     -0.1035,     -0.2773,      0.2168,     -0.0120,      0.1523,     -0.5781,      0.3145,     -0.2373,     -0.5508,      0.1064,     -0.2910,     -0.4199,     -0.0830,      0.0908],
        [     0.0000,      0.0459,     -0.2354,      0.3691,      0.0947,     -0.1523,     -0.4883,      0.1001,     -0.6875,     -0.5859,      0.1699,     -0.4590,     -0.6406,     -0.3359,     -0.3457],
        [     0.0000,     -0.4512,     -0.0039,      0.6211,     -0.0197,      0.3965,     -0.3359,      0.1523,     -0.2363,      0.2773,      0.3047,     -0.2559,      0.0325,      0.2012,      0.1797],
        [     0.0000,     -0.3164,     -0.4355,      0.1699,      0.1001,      0.0111,     -0.0776,      0.2100,     -0.2314,     -0.0913,      0.2676,      0.1113,     -0.1787,      0.0454,     -0.1445],
        [     0.0000,     -0.2734,     -0.4160,      0.4316,     -0.0967,      0.2637,     -0.1260,      0.0620,     -0.5312,     -0.1494,     -0.1553,     -0.0388,     -0.3125,     -0.0664,     -0.3340]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4977],
        [0.3441],
        [0.2424],
        [0.1965],
        [0.1676],
        [0.1363],
        [0.1250],
        [0.1051],
        [0.0979],
        [0.0875],
        [0.0822],
        [0.0743],
        [0.0696],
        [0.0659]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5703, 0.4297, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3340, 0.2539, 0.4121, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2334, 0.4414, 0.1377, 0.1865, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1973, 0.1807, 0.1885, 0.2539, 0.1797, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1650, 0.1602, 0.1953, 0.1436, 0.1973, 0.1387, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1260, 0.1797, 0.1436, 0.1416, 0.1162, 0.1167, 0.1758, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1206, 0.1108, 0.1592, 0.1846, 0.0854, 0.1177, 0.1172, 0.1050, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0796, 0.0613, 0.1221, 0.0913, 0.0776, 0.1021, 0.1992, 0.1514, 0.1152, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0938, 0.1167, 0.0854, 0.0923, 0.0977, 0.0669, 0.1348, 0.1113, 0.1011, 0.0996, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0864, 0.0791, 0.1270, 0.1406, 0.0603, 0.0801, 0.0579, 0.0884, 0.0737, 0.1001, 0.1069, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0801, 0.0908, 0.0522, 0.0708, 0.0762, 0.0908, 0.0928, 0.1221, 0.0850, 0.0776, 0.1030, 0.0591, 0.0000, 0.0000, 0.0000],
        [0.0620, 0.0967, 0.0510, 0.0830, 0.0500, 0.0830, 0.1455, 0.1196, 0.0588, 0.0791, 0.0718, 0.0405, 0.0583, 0.0000, 0.0000],
        [0.0649, 0.0481, 0.0850, 0.0869, 0.0488, 0.0708, 0.0762, 0.1011, 0.0659, 0.0938, 0.0850, 0.0608, 0.0564, 0.0562, 0.0000],
        [0.0605, 0.0703, 0.0771, 0.0938, 0.0679, 0.0781, 0.0938, 0.0579, 0.0601, 0.0879, 0.0471, 0.0554, 0.0476, 0.0505, 0.0518]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,     -0.0000,      0.0000,      0.0000,      0.0000,     -0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -0.2793,      0.1455,      0.0962,     -0.3496,      0.5352,      0.3027,     -0.0327,     -0.3047,      0.3145,      0.3574,     -0.2832,      0.2197,     -0.3965,     -0.1040],
        [     0.0000,     -0.2773,      0.2080,     -0.4492,     -0.1128,     -0.0630,     -0.4648,      0.2412,     -0.1040,     -0.1299,      0.1709,      0.3008,     -0.1719,      0.2656,     -0.0918],
        [     0.0000,      0.6367,     -0.5234,     -0.2217,     -0.2139,     -0.2207,      0.7305,      0.3027,      0.1885,      0.3164,      0.3086,     -0.2129,      0.2090,     -0.1152,     -0.0183],
        [    -0.0000,     -0.0918,     -0.0474,      0.2480,     -0.0938,      0.5078,      0.3262,      0.2295,     -0.1060,      0.5508,     -0.1162,      0.0588,      0.0564,     -0.1523,     -0.0272],
        [    -0.0000,     -0.0267,      0.1680,     -0.1396,      0.1807,     -0.1719,     -0.1514,      0.3945,      0.5586,      0.0133,      0.2578,     -0.1816,      0.2539,     -0.0762,     -0.0942],
        [     0.0000,      0.3594,      0.1357,      0.1230,     -0.0786,     -0.0718,      0.3340,      0.1650,      0.0457,      0.1426,     -0.0405,     -0.4336,     -0.1060,     -0.1216,     -0.5352],
        [     0.0000,     -0.0840,      0.2773,      0.4258,     -0.3418,     -0.0219,     -0.0250,     -0.1377,     -0.0060,      0.4121,      0.1035,     -0.3750,     -0.0835,     -0.2812,     -0.0030],
        [     0.0000,     -0.2598,      0.4258,      0.1377,     -0.0286,      0.2480,      0.9180,      0.6445,      0.3691,      0.4434,      0.5586,      0.0143,      0.3535,     -0.2334,      0.0288],
        [     0.0000,      0.2197,     -0.0903,     -0.0156,      0.0408,     -0.3398,      0.3652,      0.1719,      0.0757,      0.0598,      0.1094,     -0.7266,     -0.1099,     -0.3574,     -0.2734],
        [     0.0000,     -0.0874,      0.3887,      0.4902,     -0.3555,     -0.0752,     -0.4004,      0.0237,     -0.1592,      0.1504,      0.2139,     -0.2930,      0.0098,     -0.1523,      0.1895],
        [     0.0000,      0.1221,     -0.4316,     -0.1221,     -0.0547,      0.1221,      0.1436,      0.4180,      0.0566,     -0.0344,      0.2520,     -0.3066,     -0.0432,     -0.2363,     -0.2500],
        [     0.0000,      0.4473,     -0.1943,      0.2930,     -0.2139,      0.2891,      0.8555,      0.6602,     -0.0525,      0.2471,      0.1484,     -0.4277,     -0.0593,     -0.4980,     -0.4043],
        [     0.0000,     -0.3027,      0.2676,      0.2910,     -0.2871,      0.0830,      0.1611,      0.4414,      0.0121,      0.3652,      0.2676,     -0.0664,     -0.1426,     -0.1445,     -0.1270],
        [    -0.0000,      0.1465,      0.2383,      0.4336,      0.1123,      0.2559,      0.4375,     -0.0457,     -0.0090,      0.3691,     -0.2500,     -0.0903,     -0.2402,     -0.1836,     -0.1611]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4688],
        [0.3421],
        [0.2412],
        [0.2033],
        [0.1580],
        [0.1322],
        [0.1232],
        [0.1062],
        [0.0964],
        [0.0912],
        [0.0835],
        [0.0725],
        [0.0692],
        [0.0633]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(driven:0.0002 flowing:0.0002 Bake:0.0002force:0.0002whose:0.0002Ground:0.0002 flowing:0.0003 Kir:0.0002)
 Kir
------
		( flowing:0.0002 Bake:0.0002force:0.0002whose:0.0002Ground:0.0002 flowing:0.0003 Kir:0.0002光:0.0002)
光 keywords HERE batted ravenanche 802 greaseTalking sperm intermitt comparisonwagen Fem Last
@ 1 train 10.7156 , allloss: 10.7156, dt: 6973.14ms, fracRes: 0.0062, norm(attn): 0.0330, norm(output): 0.0742, norm(x): 0.0761, norm(y): 0.9993, norm:12.2759, tok/sec: 18796.70, flops:19.73, batch-reuse:1
@ 2 train 10.3218 , allloss: 10.3218, dt: 676.66ms, fracRes: 0.0062, norm(attn): 0.0376, norm(output): 0.0776, norm(x): 0.0793, norm(y): 0.9994, norm:9.0245, tok/sec: 193704.70, flops:203.35, batch-reuse:1
@ 3 train 10.0057 , allloss: 10.0057, dt: 674.61ms, fracRes: 0.0062, norm(attn): 0.0432, norm(output): 0.0830, norm(x): 0.0848, norm(y): 0.9995, norm:5.9461, tok/sec: 194292.62, flops:203.97, batch-reuse:1
@ 4 train 9.8157 , allloss: 9.8157, dt: 678.55ms, fracRes: 0.0061, norm(attn): 0.0474, norm(output): 0.0884, norm(x): 0.0912, norm(y): 0.9996, norm:3.6178, tok/sec: 193164.77, flops:202.78, batch-reuse:1
@ 5 train 9.7534 , allloss: 9.7534, dt: 679.17ms, fracRes: 0.0060, norm(attn): 0.0510, norm(output): 0.0957, norm(x): 0.0980, norm(y): 0.9997, norm:2.6897, tok/sec: 192989.28, flops:202.60, batch-reuse:1
@ 6 train 9.6246 , allloss: 9.6246, dt: 684.87ms, fracRes: 0.0058, norm(attn): 0.0544, norm(output): 0.1021, norm(x): 0.1056, norm(y): 0.9997, norm:2.5928, tok/sec: 191381.44, flops:200.91, batch-reuse:1
@ 7 train 9.5811 , allloss: 9.5811, dt: 682.12ms, fracRes: 0.0056, norm(attn): 0.0557, norm(output): 0.1099, norm(x): 0.1135, norm(y): 0.9998, norm:2.4852, tok/sec: 192153.98, flops:201.72, batch-reuse:1
@ 8 train 9.5312 , allloss: 9.5312, dt: 683.10ms, fracRes: 0.0055, norm(attn): 0.0583, norm(output): 0.1177, norm(x): 0.1209, norm(y): 0.9999, norm:2.3256, tok/sec: 191879.28, flops:201.44, batch-reuse:1
@ 9 train 9.4474 , allloss: 9.4474, dt: 684.97ms, fracRes: 0.0053, norm(attn): 0.0596, norm(output): 0.1250, norm(x): 0.1275, norm(y): 0.9999, norm:2.3048, tok/sec: 191354.93, flops:200.88, batch-reuse:1
@ 10 train 9.3794 , allloss: 9.3794, dt: 686.16ms, fracRes: 0.0051, norm(attn): 0.0615, norm(output): 0.1328, norm(x): 0.1353, norm(y): 0.9999, norm:2.0955, tok/sec: 191021.22, flops:200.53, batch-reuse:1
@ 11 train 9.3589 , allloss: 9.3589, dt: 687.72ms, fracRes: 0.0049, norm(attn): 0.0623, norm(output): 0.1396, norm(x): 0.1403, norm(y): 1.0000, norm:1.9520, tok/sec: 190589.97, flops:200.08, batch-reuse:1
@ 12 train 9.2561 , allloss: 9.2561, dt: 687.45ms, fracRes: 0.0047, norm(attn): 0.0620, norm(output): 0.1416, norm(x): 0.1439, norm(y): 1.0000, norm:2.1556, tok/sec: 190663.87, flops:200.16, batch-reuse:1
@ 13 train 9.1788 , allloss: 9.1788, dt: 686.64ms, fracRes: 0.0045, norm(attn): 0.0625, norm(output): 0.1543, norm(x): 0.1545, norm(y): 1.0000, norm:1.9031, tok/sec: 190888.10, flops:200.39, batch-reuse:1
@ 14 train 9.0874 , allloss: 9.0874, dt: 688.64ms, fracRes: 0.0043, norm(attn): 0.0635, norm(output): 0.1611, norm(x): 0.1632, norm(y): 1.0001, norm:1.9002, tok/sec: 190333.75, flops:199.81, batch-reuse:1
@ 15 train 9.0347 , allloss: 9.0347, dt: 689.26ms, fracRes: 0.0040, norm(attn): 0.0649, norm(output): 0.1621, norm(x): 0.1660, norm(y): 1.0001, norm:2.1478, tok/sec: 190164.15, flops:199.63, batch-reuse:1
@ 16 train 8.9418 , allloss: 8.9418, dt: 689.07ms, fracRes: 0.0038, norm(attn): 0.0659, norm(output): 0.1738, norm(x): 0.1784, norm(y): 1.0001, norm:1.9168, tok/sec: 190215.14, flops:199.69, batch-reuse:1
@ 17 train 8.8796 , allloss: 8.8796, dt: 685.95ms, fracRes: 0.0036, norm(attn): 0.0669, norm(output): 0.1826, norm(x): 0.1836, norm(y): 1.0001, norm:1.7045, tok/sec: 191082.03, flops:200.60, batch-reuse:1
@ 18 train 8.7986 , allloss: 8.7986, dt: 683.02ms, fracRes: 0.0034, norm(attn): 0.0679, norm(output): 0.1865, norm(x): 0.1872, norm(y): 1.0001, norm:2.2363, tok/sec: 191899.97, flops:201.46, batch-reuse:1
@ 19 train 8.6498 , allloss: 8.6498, dt: 687.41ms, fracRes: 0.0031, norm(attn): 0.0708, norm(output): 0.2012, norm(x): 0.2006, norm(y): 1.0001, norm:1.8325, tok/sec: 190675.90, flops:200.17, batch-reuse:1
@ 20 train 8.6029 , allloss: 8.6029, dt: 691.35ms, fracRes: 0.0029, norm(attn): 0.0708, norm(output): 0.2041, norm(x): 0.2080, norm(y): 1.0002, norm:1.8243, tok/sec: 189588.49, flops:199.03, batch-reuse:1
@ 21 train 8.5081 , allloss: 8.5081, dt: 692.53ms, fracRes: 0.0028, norm(attn): 0.0708, norm(output): 0.2051, norm(x): 0.2082, norm(y): 1.0002, norm:1.6276, tok/sec: 189264.36, flops:198.69, batch-reuse:1
@ 22 train 8.4324 , allloss: 8.4324, dt: 692.42ms, fracRes: 0.0026, norm(attn): 0.0713, norm(output): 0.2148, norm(x): 0.2137, norm(y): 1.0002, norm:1.7037, tok/sec: 189295.64, flops:198.72, batch-reuse:1
@ 23 train 8.4489 , allloss: 8.4489, dt: 690.98ms, fracRes: 0.0024, norm(attn): 0.0708, norm(output): 0.2197, norm(x): 0.2221, norm(y): 1.0002, norm:1.3344, tok/sec: 189689.43, flops:199.14, batch-reuse:1
@ 24 train 8.3904 , allloss: 8.3904, dt: 692.03ms, fracRes: 0.0023, norm(attn): 0.0698, norm(output): 0.2217, norm(x): 0.2249, norm(y): 1.0002, norm:1.4785, tok/sec: 189403.19, flops:198.84, batch-reuse:1
@ 25 train 8.1178 , allloss: 8.1178, dt: 690.25ms, fracRes: 0.0021, norm(attn): 0.0698, norm(output): 0.2227, norm(x): 0.2272, norm(y): 1.0002, norm:1.5066, tok/sec: 189891.95, flops:199.35, batch-reuse:1
@ 26 train 8.1211 , allloss: 8.1211, dt: 690.84ms, fracRes: 0.0020, norm(attn): 0.0693, norm(output): 0.2344, norm(x): 0.2353, norm(y): 1.0002, norm:1.3918, tok/sec: 189729.75, flops:199.18, batch-reuse:1
@ 27 train 8.0336 , allloss: 8.0336, dt: 699.75ms, fracRes: 0.0020, norm(attn): 0.0688, norm(output): 0.2471, norm(x): 0.2457, norm(y): 1.0002, norm:1.2114, tok/sec: 187313.71, flops:196.64, batch-reuse:1
@ 28 train 7.9584 , allloss: 7.9584, dt: 697.17ms, fracRes: 0.0020, norm(attn): 0.0669, norm(output): 0.2490, norm(x): 0.2497, norm(y): 1.0002, norm:1.2381, tok/sec: 188006.69, flops:197.37, batch-reuse:1
@ 29 train 7.9467 , allloss: 7.9467, dt: 685.51ms, fracRes: 0.0021, norm(attn): 0.0659, norm(output): 0.2500, norm(x): 0.2526, norm(y): 1.0002, norm:1.1628, tok/sec: 191204.12, flops:200.73, batch-reuse:1
@ 30 train 7.7759 , allloss: 7.7759, dt: 701.14ms, fracRes: 0.0022, norm(attn): 0.0649, norm(output): 0.2637, norm(x): 0.2622, norm(y): 1.0002, norm:1.0609, tok/sec: 186941.16, flops:196.25, batch-reuse:1
@ 31 train 7.7751 , allloss: 7.7751, dt: 691.81ms, fracRes: 0.0022, norm(attn): 0.0630, norm(output): 0.2676, norm(x): 0.2706, norm(y): 1.0002, norm:1.0456, tok/sec: 189461.93, flops:198.90, batch-reuse:1
@ 32 train 7.7057 , allloss: 7.7057, dt: 700.04ms, fracRes: 0.0024, norm(attn): 0.0615, norm(output): 0.2695, norm(x): 0.2716, norm(y): 1.0002, norm:1.0659, tok/sec: 187234.48, flops:196.56, batch-reuse:1
@ 33 train 7.5990 , allloss: 7.5990, dt: 685.50ms, fracRes: 0.0026, norm(attn): 0.0588, norm(output): 0.2773, norm(x): 0.2754, norm(y): 1.0002, norm:0.8973, tok/sec: 191205.65, flops:200.73, batch-reuse:1
@ 34 train 7.5776 , allloss: 7.5776, dt: 693.14ms, fracRes: 0.0026, norm(attn): 0.0562, norm(output): 0.2793, norm(x): 0.2793, norm(y): 1.0002, norm:0.8417, tok/sec: 189098.62, flops:198.52, batch-reuse:1
@ 35 train 7.5257 , allloss: 7.5257, dt: 690.14ms, fracRes: 0.0028, norm(attn): 0.0520, norm(output): 0.2754, norm(x): 0.2750, norm(y): 1.0001, norm:0.9256, tok/sec: 189920.03, flops:199.38, batch-reuse:1
@ 36 train 7.4151 , allloss: 7.4151, dt: 693.14ms, fracRes: 0.0027, norm(attn): 0.0549, norm(output): 0.2832, norm(x): 0.2870, norm(y): 1.0001, norm:0.7318, tok/sec: 189098.22, flops:198.52, batch-reuse:1
@ 37 train 7.4344 , allloss: 7.4344, dt: 692.87ms, fracRes: 0.0029, norm(attn): 0.0520, norm(output): 0.2832, norm(x): 0.2863, norm(y): 1.0001, norm:0.7329, tok/sec: 189172.01, flops:198.59, batch-reuse:1
@ 38 train 7.3503 , allloss: 7.3503, dt: 695.56ms, fracRes: 0.0031, norm(attn): 0.0471, norm(output): 0.2812, norm(x): 0.2832, norm(y): 1.0001, norm:0.6962, tok/sec: 188440.97, flops:197.83, batch-reuse:1
@ 39 train 7.3808 , allloss: 7.3808, dt: 689.29ms, fracRes: 0.0030, norm(attn): 0.0464, norm(output): 0.2910, norm(x): 0.2924, norm(y): 1.0001, norm:0.7079, tok/sec: 190156.00, flops:199.63, batch-reuse:1
@ 40 train 7.3818 , allloss: 7.3818, dt: 693.66ms, fracRes: 0.0032, norm(attn): 0.0439, norm(output): 0.2832, norm(x): 0.2887, norm(y): 1.0001, norm:0.4833, tok/sec: 188956.99, flops:198.37, batch-reuse:1
@ 41 train 7.3227 , allloss: 7.3227, dt: 693.59ms, fracRes: 0.0034, norm(attn): 0.0417, norm(output): 0.2812, norm(x): 0.2833, norm(y): 1.0001, norm:0.5926, tok/sec: 188976.87, flops:198.39, batch-reuse:1
@ 42 train 7.2771 , allloss: 7.2771, dt: 695.59ms, fracRes: 0.0034, norm(attn): 0.0408, norm(output): 0.2832, norm(x): 0.2873, norm(y): 1.0000, norm:0.4397, tok/sec: 188433.03, flops:197.82, batch-reuse:1
@ 43 train 7.2672 , allloss: 7.2672, dt: 694.21ms, fracRes: 0.0035, norm(attn): 0.0415, norm(output): 0.2793, norm(x): 0.2792, norm(y): 1.0000, norm:0.5993, tok/sec: 188808.77, flops:198.21, batch-reuse:1
@ 44 train 7.2719 , allloss: 7.2719, dt: 692.88ms, fracRes: 0.0034, norm(attn): 0.0417, norm(output): 0.2773, norm(x): 0.2774, norm(y): 1.0000, norm:0.4872, tok/sec: 189170.84, flops:198.59, batch-reuse:1
@ 45 train 7.1735 , allloss: 7.1735, dt: 690.15ms, fracRes: 0.0034, norm(attn): 0.0430, norm(output): 0.2676, norm(x): 0.2720, norm(y): 1.0000, norm:0.6205, tok/sec: 189917.27, flops:199.38, batch-reuse:1
@ 46 train 7.1900 , allloss: 7.1900, dt: 694.37ms, fracRes: 0.0033, norm(attn): 0.0449, norm(output): 0.2695, norm(x): 0.2724, norm(y): 0.9999, norm:0.5604, tok/sec: 188764.10, flops:198.16, batch-reuse:1
@ 47 train 7.1333 , allloss: 7.1333, dt: 692.19ms, fracRes: 0.0034, norm(attn): 0.0474, norm(output): 0.2656, norm(x): 0.2683, norm(y): 0.9999, norm:0.6546, tok/sec: 189357.71, flops:198.79, batch-reuse:1
@ 48 train 7.1230 , allloss: 7.1230, dt: 693.03ms, fracRes: 0.0034, norm(attn): 0.0471, norm(output): 0.2793, norm(x): 0.2805, norm(y): 0.9999, norm:0.9272, tok/sec: 189129.78, flops:198.55, batch-reuse:1
@ 49 train 7.1264 , allloss: 7.1264, dt: 696.13ms, fracRes: 0.0037, norm(attn): 0.0437, norm(output): 0.2656, norm(x): 0.2687, norm(y): 0.9999, norm:0.8412, tok/sec: 188285.89, flops:197.66, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0198, 0.9805, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0167, 0.0312, 0.9531, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0518, 0.1113, 0.1904, 0.6445, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0552, 0.0840, 0.2949, 0.2197, 0.3457, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0669, 0.1924, 0.2715, 0.0835, 0.2227, 0.1641, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0708, 0.0850, 0.0952, 0.2080, 0.1777, 0.2275, 0.1367, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1118, 0.1279, 0.1426, 0.1973, 0.1328, 0.1138, 0.1050, 0.0688, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0630, 0.1729, 0.0884, 0.1064, 0.2188, 0.1196, 0.0483, 0.0771, 0.1055, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0669, 0.0991, 0.0630, 0.0820, 0.1367, 0.1118, 0.0825, 0.1309, 0.1270, 0.1011, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0398, 0.0403, 0.0603, 0.1611, 0.2002, 0.1514, 0.0659, 0.0369, 0.0928, 0.0786, 0.0723, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0815, 0.0508, 0.0540, 0.0928, 0.0356, 0.0854, 0.0811, 0.0728, 0.1074, 0.0977, 0.0981, 0.1426, 0.0000, 0.0000, 0.0000],
        [0.0684, 0.0342, 0.0613, 0.0461, 0.1240, 0.0579, 0.1089, 0.0664, 0.0522, 0.1045, 0.0820, 0.0776, 0.1172, 0.0000, 0.0000],
        [0.0530, 0.0903, 0.0322, 0.0610, 0.1162, 0.0781, 0.0464, 0.0449, 0.1357, 0.0820, 0.0640, 0.0630, 0.0574, 0.0752, 0.0000],
        [0.0630, 0.0625, 0.0718, 0.0530, 0.1279, 0.0510, 0.0625, 0.0669, 0.0840, 0.0496, 0.0801, 0.0344, 0.0527, 0.0874, 0.0525]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0074,      0.0073,      0.0049,      0.0041,      0.0048,      0.0003,      0.0023,      0.0031,      0.0001,      0.0036,     -0.0013,      0.0007,      0.0025,     -0.0015],
        [    -0.0000,      3.9062,     -0.3828,     -0.4824,      0.4727,     -0.0845,      0.1826,      0.1328,      0.9570,     -0.3340,      0.1709,      0.8398,      0.1582,      0.6680,      0.2256],
        [     0.0000,      0.6250,      4.0312,     -0.1074,      0.3867,      0.6953,     -0.6328,      0.1523,     -0.2090,      0.0248,     -0.0688,     -0.5156,      0.4258,      0.2480,     -0.0287],
        [     0.0000,      0.7695,      1.3047,      2.5312,      0.4492,      1.3203,      0.1621,      0.3770,      0.3027,      0.2178,      0.7266,     -0.4004,     -0.4043,      0.5508,     -0.1436],
        [    -0.0000,      0.4219,      1.6719,      1.3828,      1.8359,      0.5664,     -0.0212,     -1.0234,      0.2656,     -0.4434,      1.1797,     -1.0469,      0.1172,      0.5117,     -0.8203],
        [     0.0000,      1.0547,      1.3984,      0.2207,      1.2031,      0.9023,     -0.3613,     -0.6328,      0.8125,     -0.4512,     -0.1631,     -0.7031,     -0.1187,      0.4023,     -0.7148],
        [    -0.0001,      0.1777,      0.2930,      1.0703,      0.9180,      1.1641,      0.6562,      0.3555,      0.2100,      0.2012,      1.0000,     -0.4805,     -0.0393,     -0.1445,     -0.2314],
        [     0.0000,      0.1357,      0.2402,      0.5703,      0.1689,      0.0190,     -0.0649,     -0.4863,      0.0579,     -0.2158,      0.5586,      0.1338,      0.1670,      0.1035,      0.1895],
        [    -0.0000,      1.0156,      0.3398,      0.5234,      1.2422,      0.6445,     -0.2656,      0.2021,      0.5195,     -0.0933,      0.2871,     -0.3984,      0.1758,      0.3711,     -0.2930],
        [     0.0001,      0.3945,     -0.0579,      0.2061,      0.7148,      0.5156,      0.2129,      0.6758,      0.6406,      0.4141,      0.6289,      0.1060,     -0.1572,      0.1216,     -0.5586],
        [     0.0000,      0.0085,      0.4160,      1.3984,      1.6094,      1.3359,      0.5039,     -0.0752,      0.8438,      0.6758,      0.5977,     -1.1953,     -0.6836,      0.3711,     -0.1816],
        [     0.0000,     -0.4727,     -0.4160,      0.1250,     -0.8281,      0.0479,     -0.0089,     -0.1133,      0.2734,      0.1768,      0.1855,      0.5547,     -0.2637,     -0.2197,      0.4609],
        [    -0.0000,     -0.6914,     -0.1060,     -0.3906,      0.5977,     -0.1650,      0.4688,     -0.0265,     -0.2656,      0.4277,      0.1826,      0.1279,      0.5430,      0.0518,      0.0708],
        [    -0.0001,      0.5312,     -0.4980,      0.1406,      0.7812,      0.3887,     -0.1367,     -0.1670,      0.9414,      0.4336,      0.1855,      0.1709,      0.0791,      0.3516,      0.0664],
        [    -0.0001,     -0.0060,      0.1309,     -0.1758,      0.7109,     -0.2100,     -0.0052,      0.0598,      0.2871,     -0.2402,      0.2412,     -0.6055,     -0.1787,      0.3281,     -0.1816]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0063],
        [0.0155],
        [0.0404],
        [0.0405],
        [0.0443],
        [0.0602],
        [0.0945],
        [0.0493],
        [0.0750],
        [0.0350],
        [0.0720],
        [0.0647],
        [0.0492],
        [0.0536]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2773, 0.7227, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1670, 0.4023, 0.4316, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1543, 0.3438, 0.2500, 0.2520, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1895, 0.1641, 0.1729, 0.2773, 0.1963, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1533, 0.1504, 0.2285, 0.1953, 0.1191, 0.1543, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0903, 0.1309, 0.1147, 0.1523, 0.1660, 0.2178, 0.1279, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0635, 0.1089, 0.2227, 0.1982, 0.0942, 0.1064, 0.0835, 0.1230, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1196, 0.1099, 0.0684, 0.1025, 0.1846, 0.0967, 0.1030, 0.0923, 0.1226, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0850, 0.1172, 0.1045, 0.0894, 0.1118, 0.1011, 0.1138, 0.1230, 0.0649, 0.0903, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0986, 0.0889, 0.0645, 0.0576, 0.1167, 0.1045, 0.0908, 0.0623, 0.1416, 0.0693, 0.1050, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0796, 0.0713, 0.0903, 0.0942, 0.0530, 0.0928, 0.0688, 0.0962, 0.1123, 0.0737, 0.0952, 0.0732, 0.0000, 0.0000, 0.0000],
        [0.0488, 0.0933, 0.1318, 0.0859, 0.0615, 0.0767, 0.0713, 0.0771, 0.0620, 0.0608, 0.0825, 0.0649, 0.0830, 0.0000, 0.0000],
        [0.0776, 0.0703, 0.0723, 0.0713, 0.1094, 0.0679, 0.1299, 0.0417, 0.0659, 0.0574, 0.0854, 0.0439, 0.0544, 0.0520, 0.0000],
        [0.0422, 0.0859, 0.0591, 0.0579, 0.0786, 0.0623, 0.0601, 0.0645, 0.0903, 0.0327, 0.0820, 0.0510, 0.0703, 0.0737, 0.0898]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0029,     -0.0015,     -0.0001,      0.0032,      0.0025,      0.0023,     -0.0036,      0.0008,     -0.0021,      0.0017,     -0.0040,     -0.0025,      0.0011,     -0.0012],
        [     0.0000,      0.9609,     -0.1514,      0.0221,      0.1982,      0.0947,     -0.1455,     -0.1196,     -0.1299,     -0.2949,     -0.2061,     -0.7617,     -0.6055,     -0.3613,     -0.8164],
        [    -0.0000,      0.8828,      0.9531,      0.6523,      0.8047,      0.3535,      0.0815,      0.4434,      0.3340,      0.0073,      0.2969,      0.4043,      0.5977,      0.1177,     -0.1328],
        [    -0.0001,      0.8008,      0.4844,      0.4902,      0.3477,      0.1641,      0.2012,      0.0157,      0.1992,      0.0059,     -0.0474,      0.2715,      0.2207,     -0.0027,      0.0527],
        [     0.0000,     -0.1426,     -0.0928,      0.3789,      0.0337,     -0.1973,     -0.1621,      0.2754,     -0.5820,      0.0679,     -0.5664,      0.2539,      0.1001,     -0.2402,     -0.1484],
        [    -0.0000,     -0.0193,      0.4023,      0.2422,     -0.2500,      0.0069,      0.3750,     -0.0206,     -0.1738,     -0.3184,      0.4082,     -0.0479,      0.2637,     -0.1973,      0.2041],
        [    -0.0001,      0.3711,      0.2373,      0.5234,      0.6055,      0.8789,      0.3457,     -0.3867,      0.1406,     -0.2393,      0.3770,      0.0620,      0.1309,      0.2754,      0.6680],
        [    -0.0001,      0.5430,      1.2578,      1.1406,      0.3984,      0.5195,      0.2773,      0.6641,      0.0840,      0.2129,      0.0104,      0.3223,      0.9727,     -0.3164,      0.1367],
        [     0.0000,     -0.0874,     -0.5625,     -0.1543,      0.4355,     -0.2109,     -0.1504,     -0.2578,      0.0247,     -0.5117,     -0.1089,      0.0170,     -0.4961,     -0.1099,     -0.1289],
        [    -0.0000,      0.3203,      0.2031,      0.0459,      0.2715,      0.1689,      0.2891,      0.3672,     -0.2715,      0.0566,      0.0267,      0.2676,      0.2100,     -0.2197,      0.2471],
        [     0.0000,     -0.1040,     -0.4277,     -0.5352,      0.1699,      0.0596,     -0.0850,     -0.4609,      0.3594,     -0.3516,      0.0630,     -0.2500,     -0.1553,     -0.1060,     -0.1992],
        [     0.0000,     -0.1123,      0.1260,      0.1680,     -0.4062,      0.1523,     -0.1475,      0.1904,      0.3438,     -0.0732,      0.1807,     -0.0835,     -0.1836,      0.0017,     -0.1875],
        [    -0.0001,      0.6484,      0.9961,      0.5664,      0.2305,      0.4531,      0.3809,      0.4570,      0.2402,      0.2188,      0.5273,      0.2871,      0.5312,     -0.0752,      0.3145],
        [     0.0000,     -0.1035,     -0.0728,     -0.0830,      0.3418,     -0.1357,      0.5117,     -0.6211,     -0.1611,     -0.3008,      0.0952,     -0.5664,     -0.3555,     -0.4004,     -0.1455],
        [    -0.0000,      0.7109,      0.3340,      0.3145,      0.6211,      0.3867,      0.3516,      0.4277,      0.7578,     -0.2539,      0.6641,      0.1904,      0.5078,      0.5547,      0.7539]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2183],
        [0.1213],
        [0.1307],
        [0.1908],
        [0.1562],
        [0.1091],
        [0.0592],
        [0.1300],
        [0.0645],
        [0.0973],
        [0.0622],
        [0.0464],
        [0.0851],
        [0.0485]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4941, 0.5078, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2109, 0.7344, 0.0544, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1816, 0.7305, 0.0601, 0.0271, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1816, 0.2207, 0.2129, 0.1582, 0.2256, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4102, 0.1270, 0.0259, 0.0240, 0.3145, 0.1001, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1689, 0.1021, 0.0718, 0.0505, 0.1631, 0.1230, 0.3203, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1113, 0.3613, 0.0334, 0.0130, 0.2412, 0.0786, 0.1387, 0.0227, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2451, 0.0967, 0.0571, 0.0449, 0.1504, 0.1050, 0.1582, 0.0457, 0.0981, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1338, 0.2598, 0.0248, 0.0097, 0.2471, 0.0620, 0.1768, 0.0176, 0.0486, 0.0204, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1836, 0.0781, 0.0330, 0.0249, 0.2285, 0.0918, 0.1055, 0.0259, 0.0850, 0.0371, 0.1060, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0869, 0.2930, 0.0228, 0.0114, 0.2520, 0.0693, 0.0918, 0.0160, 0.0723, 0.0181, 0.0522, 0.0148, 0.0000, 0.0000, 0.0000],
        [0.1035, 0.2793, 0.0197, 0.0076, 0.2393, 0.0623, 0.1318, 0.0129, 0.0522, 0.0170, 0.0515, 0.0122, 0.0109, 0.0000, 0.0000],
        [0.1475, 0.0708, 0.0356, 0.0334, 0.1289, 0.0688, 0.0972, 0.0310, 0.0977, 0.0312, 0.0791, 0.0388, 0.0312, 0.1079, 0.0000],
        [0.1045, 0.0850, 0.0302, 0.0166, 0.1318, 0.0569, 0.2090, 0.0220, 0.0593, 0.0254, 0.0603, 0.0250, 0.0222, 0.0859, 0.0654]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,     -0.0006,     -0.0061,     -0.0075,      0.0009,     -0.0030,     -0.0010,     -0.0067,     -0.0025,     -0.0064,     -0.0028,     -0.0060,     -0.0070,     -0.0021,     -0.0043],
        [    -0.0000,      0.0260,     -0.8477,     -1.1250,      0.5234,     -0.3770,      0.4922,     -0.8516,     -0.8867,     -1.0938,     -0.5508,     -0.7188,     -1.0391,     -0.3848,     -0.2852],
        [     0.0000,      1.2500,     -1.3516,     -2.2812,      0.9102,     -0.4004,      0.1592,     -1.7812,     -0.5000,     -1.5938,     -0.6641,     -1.9453,     -2.0156,     -0.1621,     -1.1719],
        [     0.0000,      1.3906,     -1.1094,     -1.9062,      0.6406,     -0.2354,      0.2988,     -1.5938,     -0.4160,     -1.2812,     -0.5898,     -1.7188,     -1.7344,     -0.2559,     -0.9492],
        [    -0.0001,      0.1934,      0.1602,     -0.1367,      0.2148,     -0.0310,      0.3809,      0.2217,     -0.2217,     -0.0957,     -0.7344,      0.0129,      0.0569,      0.1523,      0.3242],
        [    -0.0001,     -1.1719,     -2.7656,     -2.8281,     -0.2676,     -1.4062,     -0.5781,     -3.0469,     -1.1797,     -2.7031,     -0.6094,     -2.5000,     -2.8594,     -1.2344,     -1.7734],
        [    -0.0000,     -0.5078,     -0.8555,     -1.2109,     -0.0378,     -0.3223,      0.6367,     -1.1953,     -0.3105,     -0.8945,     -0.3438,     -0.9805,     -1.0234,     -0.1455,     -0.0938],
        [     0.0000,      1.1797,     -1.2031,     -2.1406,      0.7734,     -0.3477,      0.2188,     -1.5859,     -0.6094,     -1.4453,     -0.7266,     -1.7578,     -1.8281,     -0.1816,     -1.1484],
        [    -0.0001,     -0.9297,     -1.4531,     -1.6953,     -0.4883,     -0.8477,     -0.4375,     -1.6797,     -0.9141,     -1.6172,     -0.8359,     -1.5391,     -1.6875,     -0.8867,     -1.1562],
        [     0.0000,      0.6602,     -1.6875,     -2.6250,      0.6094,     -0.7695,      0.2734,     -2.0312,     -1.0156,     -1.8828,     -1.0781,     -2.1875,     -2.2969,     -0.7031,     -1.2109],
        [    -0.0001,     -0.8516,     -1.7188,     -2.0000,      0.2197,     -0.6914,     -0.5547,     -1.9609,     -0.7695,     -1.6016,     -0.5508,     -1.4688,     -1.8594,     -0.6523,     -1.6328],
        [    -0.0000,      1.2109,     -1.3359,     -2.0312,      1.0703,     -0.2236,      0.0588,     -1.6953,     -0.1836,     -1.5703,     -0.5078,     -1.7656,     -1.8750,      0.3223,     -1.1953],
        [     0.0000,      0.9922,     -1.6641,     -2.6094,      0.8398,     -0.5078,      0.2422,     -2.0781,     -0.6836,     -1.8125,     -0.6953,     -2.1406,     -2.2500,     -0.3125,     -1.3359],
        [    -0.0001,     -0.7344,     -1.4219,     -1.4766,     -0.1299,     -0.7578,     -0.4160,     -1.5625,     -0.4121,     -1.5469,     -0.6211,     -1.3359,     -1.5469,     -0.3125,     -1.0625],
        [     0.0000,     -0.2031,     -1.2422,     -1.8359,      0.2383,     -0.6094,      0.6953,     -1.5547,     -0.5664,     -1.4141,     -0.5469,     -1.4297,     -1.5469,     -0.1914,     -0.4648]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4020],
        [0.1969],
        [0.1465],
        [0.1885],
        [0.3040],
        [0.1249],
        [0.0671],
        [0.1904],
        [0.0730],
        [0.1019],
        [0.0558],
        [0.0547],
        [0.1263],
        [0.0654]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5859, 0.4121, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1299, 0.6172, 0.2539, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0991, 0.5352, 0.1787, 0.1885, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3535, 0.1904, 0.1465, 0.1357, 0.1738, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2070, 0.1865, 0.0767, 0.0635, 0.3848, 0.0820, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1582, 0.1128, 0.0520, 0.0386, 0.1089, 0.0547, 0.4746, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0518, 0.2656, 0.1069, 0.1128, 0.1396, 0.0840, 0.1436, 0.0957, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3066, 0.1279, 0.0420, 0.0320, 0.1768, 0.0840, 0.1377, 0.0349, 0.0576, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0583, 0.2363, 0.0889, 0.0884, 0.1157, 0.0703, 0.1367, 0.0801, 0.0437, 0.0811, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0728, 0.1064, 0.0864, 0.0986, 0.1289, 0.0991, 0.0559, 0.0732, 0.1162, 0.0737, 0.0884, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0413, 0.1826, 0.0815, 0.0889, 0.1279, 0.0659, 0.0947, 0.0742, 0.0603, 0.0806, 0.0356, 0.0664, 0.0000, 0.0000, 0.0000],
        [0.0396, 0.1982, 0.0771, 0.0801, 0.1084, 0.0537, 0.1079, 0.0698, 0.0420, 0.0718, 0.0315, 0.0608, 0.0586, 0.0000, 0.0000],
        [0.1582, 0.0801, 0.0374, 0.0320, 0.1348, 0.0708, 0.0598, 0.0320, 0.0649, 0.0317, 0.1494, 0.0369, 0.0300, 0.0815, 0.0000],
        [0.0938, 0.1011, 0.0344, 0.0249, 0.0767, 0.0322, 0.2715, 0.0325, 0.0168, 0.0282, 0.0518, 0.0295, 0.0308, 0.0146, 0.1611]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.0026,     -0.0079,     -0.0086,     -0.0005,     -0.0046,     -0.0009,     -0.0081,     -0.0070,     -0.0084,     -0.0019,     -0.0079,     -0.0084,     -0.0068,     -0.0041],
        [     0.0001,     -0.3516,     -0.6914,     -0.9648,     -0.9844,     -0.4785,     -0.1650,     -0.6172,     -1.7031,     -0.8047,     -0.5195,     -0.5391,     -0.6055,     -1.5703,     -0.4941],
        [     0.0002,      1.5625,      0.6758,      0.7070,      0.9180,      0.3594,      0.8750,      0.5625,     -0.0085,      0.5820,     -0.1445,      0.4199,      0.3848,     -0.1758,      0.8047],
        [     0.0002,      1.6875,      0.5898,      0.6406,      1.1016,      0.4277,      0.8828,      0.4219,      0.0991,      0.4336,     -0.0317,      0.2617,      0.2021,     -0.0366,      0.7070],
        [    -0.0000,     -0.6133,     -0.8789,     -0.9531,     -0.7070,     -0.0977,     -0.1504,     -0.9375,     -0.6719,     -0.9609,     -0.1143,     -0.9961,     -0.9023,     -0.6445,     -0.4570],
        [     0.0001,     -0.1035,     -0.9883,     -1.1797,      0.6211,     -0.9219,     -0.9531,     -1.2031,     -0.8047,     -1.2734,      0.0079,     -0.9766,     -1.4062,     -0.4297,     -1.5781],
        [     0.0000,     -0.3418,     -1.1172,     -1.4141,     -0.3750,     -1.0625,      1.0938,     -1.1719,     -1.7109,     -1.3438,     -0.4727,     -1.2578,     -1.1875,     -1.7656,      0.5742],
        [     0.0002,      1.6406,      0.7305,      0.7812,      0.9922,      0.4863,      1.0234,      0.6172,      0.2080,      0.6758,     -0.1533,      0.4746,      0.4570,     -0.0012,      0.9453],
        [    -0.0000,     -0.8711,     -1.9922,     -2.2656,     -0.5547,     -1.2969,     -0.8008,     -2.1719,     -1.6719,     -2.2188,     -0.4473,     -2.0781,     -2.2188,     -1.4844,     -1.5625],
        [     0.0002,      1.3984,      0.4219,      0.4141,      0.6836,      0.1816,      0.8516,      0.3164,     -0.2871,      0.3262,     -0.3516,      0.1826,      0.1660,     -0.4590,      0.6953],
        [     0.0001,      0.3809,      0.1729,      0.3027,      0.5742,      0.3066,     -0.2656,      0.0061,      0.4668,      0.0107,      0.1914,      0.0048,     -0.0947,      0.4160,     -0.3125],
        [     0.0002,      1.4844,      0.6836,      0.7656,      1.1250,      0.4707,      0.8320,      0.5898,      0.3770,      0.6680,     -0.1494,      0.4746,      0.4238,      0.2041,      0.7773],
        [     0.0002,      1.6172,      0.6719,      0.7031,      1.0078,      0.3047,      1.0000,      0.5703,      0.0613,      0.6016,     -0.2305,      0.4297,      0.3945,     -0.1240,      0.9102],
        [     0.0000,     -0.6797,     -1.4453,     -1.6016,     -0.1602,     -0.8047,     -0.9727,     -1.5938,     -0.8945,     -1.6094,     -0.0554,     -1.4609,     -1.6641,     -0.6641,     -1.5547],
        [     0.0001,      0.0767,     -1.0078,     -1.3281,     -0.1992,     -1.0703,      1.0625,     -1.0625,     -1.7188,     -1.2031,     -0.5938,     -1.1562,     -1.1172,     -1.8594,      0.5391]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4284],
        [0.1351],
        [0.1031],
        [0.2264],
        [0.2195],
        [0.1121],
        [0.0470],
        [0.1989],
        [0.0476],
        [0.0811],
        [0.0349],
        [0.0327],
        [0.1228],
        [0.0532]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2969, 0.7031, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1680, 0.5352, 0.2949, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1152, 0.4082, 0.2188, 0.2598, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1504, 0.3203, 0.2197, 0.1953, 0.1133, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0840, 0.1001, 0.1357, 0.1650, 0.2188, 0.2969, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1104, 0.2021, 0.0339, 0.0294, 0.1680, 0.0481, 0.4082, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0486, 0.1553, 0.0835, 0.1001, 0.2139, 0.2129, 0.1113, 0.0757, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0767, 0.1226, 0.1240, 0.1270, 0.0967, 0.1108, 0.0947, 0.1069, 0.1396, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0339, 0.1162, 0.0654, 0.0781, 0.1455, 0.1543, 0.0811, 0.0588, 0.2090, 0.0566, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0413, 0.0703, 0.0840, 0.0991, 0.0840, 0.1309, 0.0664, 0.0781, 0.1533, 0.0806, 0.1118, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0221, 0.0703, 0.0493, 0.0623, 0.1016, 0.1299, 0.0466, 0.0457, 0.1719, 0.0435, 0.2109, 0.0466, 0.0000, 0.0000, 0.0000],
        [0.0222, 0.0732, 0.0442, 0.0547, 0.1050, 0.1162, 0.0513, 0.0405, 0.1611, 0.0388, 0.2119, 0.0405, 0.0400, 0.0000, 0.0000],
        [0.0444, 0.0598, 0.0835, 0.0894, 0.0579, 0.0757, 0.0479, 0.0732, 0.0884, 0.0713, 0.0640, 0.0757, 0.0732, 0.0952, 0.0000],
        [0.0605, 0.1211, 0.0171, 0.0146, 0.1187, 0.0265, 0.2295, 0.0148, 0.0640, 0.0156, 0.0610, 0.0118, 0.0134, 0.0476, 0.1836]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0002,     -0.0042,     -0.0047,      0.0006,     -0.0023,      0.0022,     -0.0047,     -0.0009,     -0.0050,      0.0005,     -0.0051,     -0.0050,     -0.0012,      0.0014],
        [    -0.0001,      0.8594,     -0.3652,     -0.5508,      0.3027,     -0.3340,      0.8398,     -0.5742,     -0.1553,     -0.6211,      0.5078,     -0.6758,     -0.6797,     -0.0977,      0.7461],
        [     0.0000,      1.1641,      0.5664,      0.7227,      1.4141,      1.3750,      0.9180,      0.4453,      1.7344,      0.4082,      2.0312,      0.4238,      0.4199,      1.8047,      0.9961],
        [     0.0000,      1.2656,      0.6406,      0.8086,      1.5000,      1.4922,      0.8906,      0.5078,      1.8828,      0.4551,      2.1250,      0.4941,      0.4805,      1.9609,      0.9766],
        [    -0.0000,      0.7578,      0.3750,      0.2578,     -0.2852,     -0.2188,      0.1514,      0.2002,     -0.1670,      0.2168,     -0.7617,      0.1494,      0.1504,     -0.4141,      0.2256],
        [     0.0000,      0.1748,      0.4785,      0.6758,      0.9570,      1.2578,      0.1147,      0.4160,      1.4688,      0.3379,      1.6484,      0.5000,      0.4297,      1.7656,      0.1709],
        [    -0.0001,      0.6055,     -1.1797,     -1.3203,      0.4180,     -0.8281,      1.3047,     -1.2812,     -0.0913,     -1.2109,     -0.2227,     -1.5156,     -1.3672,     -0.4395,      1.1172],
        [     0.0000,      1.1562,      0.5391,      0.7188,      1.4766,      1.4766,      0.8281,      0.4414,      1.8281,      0.3984,      2.0625,      0.4316,      0.4219,      1.8984,      0.9102],
        [     0.0000,      0.4688,      0.4805,      0.5039,      0.2314,      0.3652,      0.2119,      0.3340,      0.5977,      0.3281,      0.3164,      0.3398,      0.3203,      0.6562,      0.2891],
        [     0.0000,      1.2266,      0.6523,      0.8359,      1.4609,      1.5156,      0.8711,      0.5508,      1.8203,      0.5117,      2.1562,      0.5352,      0.5312,      1.9141,      0.9688],
        [    -0.0000,      0.5312,      0.7070,      0.8750,      0.7070,      1.1562,      0.4746,      0.6367,      1.3125,      0.6641,      0.9922,      0.6367,      0.6523,      1.2344,      0.5859],
        [     0.0000,      1.1562,      0.8008,      1.0312,      1.5234,      1.7656,      0.7461,      0.7266,      2.0469,      0.6758,      2.2500,      0.7461,      0.7227,      2.1562,      0.8789],
        [     0.0000,      1.1875,      0.6875,      0.9023,      1.5547,      1.6562,      0.8359,      0.6055,      1.9844,      0.5586,      2.2500,      0.6016,      0.5938,      2.0781,      0.9492],
        [     0.0000,      0.2949,      0.6289,      0.6953,      0.2617,      0.5273,      0.0737,      0.5000,      0.6836,      0.4727,      0.3652,      0.5312,      0.4961,      0.7617,      0.1787],
        [    -0.0001,      0.6914,     -1.2656,     -1.4141,      0.6719,     -0.8281,      1.3281,     -1.4062,      0.0540,     -1.3516,      0.0078,     -1.6328,     -1.5078,     -0.2432,      1.1094]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3671],
        [0.2264],
        [0.1640],
        [0.1102],
        [0.1500],
        [0.1046],
        [0.0706],
        [0.0803],
        [0.0578],
        [0.0549],
        [0.0404],
        [0.0403],
        [0.0484],
        [0.0543]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3457, 0.6523, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2852, 0.4453, 0.2695, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2217, 0.3613, 0.2188, 0.1982, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1309, 0.2217, 0.2285, 0.2217, 0.1963, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1377, 0.1426, 0.1572, 0.1562, 0.2158, 0.1914, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0801, 0.1631, 0.0776, 0.0713, 0.1216, 0.1953, 0.2910, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0835, 0.1240, 0.0776, 0.0708, 0.1699, 0.1182, 0.2988, 0.0581, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0884, 0.1045, 0.1216, 0.1250, 0.1328, 0.1187, 0.1025, 0.1060, 0.1001, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0669, 0.1011, 0.0601, 0.0547, 0.1367, 0.0977, 0.2314, 0.0447, 0.1641, 0.0432, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0444, 0.0967, 0.0598, 0.0566, 0.1348, 0.0564, 0.2852, 0.0430, 0.0684, 0.0398, 0.1152, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0559, 0.0825, 0.0535, 0.0486, 0.1147, 0.0786, 0.2021, 0.0398, 0.1299, 0.0383, 0.1187, 0.0376, 0.0000, 0.0000, 0.0000],
        [0.0544, 0.0801, 0.0503, 0.0459, 0.1099, 0.0771, 0.1943, 0.0376, 0.1260, 0.0364, 0.1162, 0.0359, 0.0356, 0.0000, 0.0000],
        [0.0537, 0.0674, 0.0850, 0.0864, 0.0898, 0.0649, 0.0830, 0.0728, 0.0579, 0.0688, 0.0688, 0.0688, 0.0684, 0.0645, 0.0000],
        [0.0422, 0.0776, 0.0366, 0.0337, 0.0605, 0.1011, 0.1318, 0.0289, 0.0625, 0.0281, 0.1572, 0.0281, 0.0281, 0.0625, 0.1201]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0022,      0.0005,      0.0004,      0.0015,      0.0014,      0.0031,     -0.0001,      0.0010,     -0.0002,      0.0022,     -0.0003,     -0.0003,      0.0009,      0.0031],
        [    -0.0000,      0.6367,     -0.0571,     -0.1260,      0.4238,      0.4902,      0.7578,     -0.2949,      0.6562,     -0.3359,      0.9219,     -0.3418,     -0.3555,      0.5781,      0.7344],
        [    -0.0000,      0.4434,     -0.0591,     -0.1494,      0.8281,      0.3691,      1.2969,     -0.3672,      0.9648,     -0.4004,      0.8164,     -0.4160,     -0.4258,      0.8711,      1.2812],
        [    -0.0000,      0.4883,     -0.0156,     -0.1113,      0.8242,      0.3887,      1.3672,     -0.3359,      0.9336,     -0.3711,      0.8438,     -0.3926,     -0.3984,      0.8398,      1.3594],
        [    -0.0000,      0.5234,      0.5547,      0.5234,      0.4023,      0.3496,      0.7617,      0.3652,     -0.0459,      0.3125,      0.6680,      0.2852,      0.3027,      0.0474,      0.8281],
        [    -0.0000,      0.0342,      0.1357,      0.1279,      0.4492,      0.3301,      0.4980,     -0.0298,      0.4609,     -0.0654,      0.3105,     -0.0503,     -0.0737,      0.5000,      0.4844],
        [    -0.0000,      0.7109,     -0.0327,     -0.1196,      0.4160,      0.8906,      1.2891,     -0.2988,      0.3516,     -0.3340,      1.3750,     -0.3359,     -0.3340,      0.3887,      1.1797],
        [    -0.0000,      0.3926,     -0.0728,     -0.1689,      0.7109,      0.3457,      1.2734,     -0.3652,      0.8516,     -0.3984,      0.7656,     -0.4141,     -0.4199,      0.7617,      1.2578],
        [    -0.0000,      0.1699,      0.3203,      0.3496,      0.4062,      0.2930,      0.1475,      0.1836,      0.1230,      0.1348,      0.2275,      0.1416,      0.1309,      0.2236,      0.1689],
        [    -0.0000,      0.4102,     -0.1074,     -0.2031,      0.7188,      0.3750,      1.2422,     -0.4043,      0.8945,     -0.4375,      0.7695,     -0.4531,     -0.4609,      0.8008,      1.2188],
        [    -0.0000,      0.7812,      0.2988,      0.2451,      1.1172,      0.2412,      1.8594,     -0.0330,      0.4297,     -0.1104,      0.9570,     -0.1377,     -0.1162,      0.4941,      1.9062],
        [    -0.0000,      0.3887,     -0.0459,     -0.1416,      0.7188,      0.3418,      1.2891,     -0.3418,      0.8398,     -0.3809,      0.7539,     -0.3945,     -0.4004,      0.7656,      1.2812],
        [    -0.0000,      0.3887,     -0.0752,     -0.1709,      0.7031,      0.3516,      1.2734,     -0.3672,      0.8438,     -0.4023,      0.7617,     -0.4160,     -0.4219,      0.7617,      1.2578],
        [    -0.0000,      0.2246,      0.4570,      0.4766,      0.5117,      0.1895,      0.4336,      0.3027,      0.0718,      0.2500,      0.2451,      0.2451,      0.2422,      0.1777,      0.4824],
        [     0.0000,      0.6094,     -0.1426,     -0.2295,      0.3613,      0.8750,      1.1406,     -0.3789,      0.3906,     -0.4082,      1.3203,     -0.4082,     -0.4062,      0.3926,      1.0469]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3958],
        [0.3545],
        [0.3002],
        [0.1359],
        [0.1308],
        [0.0783],
        [0.0845],
        [0.0864],
        [0.0666],
        [0.0591],
        [0.0559],
        [0.0548],
        [0.0569],
        [0.0386]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1338, 0.8672, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1719, 0.4746, 0.3516, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1494, 0.3574, 0.2402, 0.2539, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0884, 0.1875, 0.1094, 0.1226, 0.4922, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0415, 0.0674, 0.0270, 0.0309, 0.7070, 0.1270, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0160, 0.1572, 0.2383, 0.2471, 0.0464, 0.0952, 0.2002, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0432, 0.0771, 0.0513, 0.0552, 0.4062, 0.1504, 0.1680, 0.0471, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0664, 0.0762, 0.0320, 0.0356, 0.3027, 0.0718, 0.0723, 0.0349, 0.3086, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0294, 0.0540, 0.0364, 0.0398, 0.3125, 0.1143, 0.1152, 0.0344, 0.2285, 0.0354, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0229, 0.0574, 0.0237, 0.0269, 0.2832, 0.0659, 0.0947, 0.0238, 0.2256, 0.0251, 0.1514, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0232, 0.0393, 0.0260, 0.0284, 0.2480, 0.0859, 0.0898, 0.0244, 0.1836, 0.0250, 0.1992, 0.0256, 0.0000, 0.0000, 0.0000],
        [0.0229, 0.0396, 0.0264, 0.0288, 0.2373, 0.0850, 0.0884, 0.0248, 0.1758, 0.0255, 0.1943, 0.0260, 0.0256, 0.0000, 0.0000],
        [0.0361, 0.0454, 0.0201, 0.0228, 0.2217, 0.0491, 0.0530, 0.0214, 0.2158, 0.0222, 0.0781, 0.0219, 0.0216, 0.1709, 0.0000],
        [0.0082, 0.0669, 0.0977, 0.0991, 0.0177, 0.0361, 0.0791, 0.1035, 0.0093, 0.1060, 0.0801, 0.1050, 0.1045, 0.0134, 0.0737]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0028,      0.0001,      0.0003,      0.0051,      0.0016,      0.0036,     -0.0002,      0.0044,     -0.0001,      0.0034,     -0.0002,     -0.0002,      0.0042,      0.0034],
        [    -0.0000,      1.8750,      1.8984,      1.9766,      2.3750,      2.0000,      1.9297,      1.9766,      1.7031,      2.0156,      3.0781,      2.0625,      2.0312,      2.1094,      1.7031],
        [    -0.0000,      1.0156,      0.7148,      0.7617,      2.1562,      1.3984,      1.6016,      0.6016,      1.7969,      0.6133,      2.2031,      0.6367,      0.6250,      2.0625,      1.3672],
        [    -0.0000,      0.8750,      0.4766,      0.5312,      2.2031,      1.3047,      1.5156,      0.3672,      1.8750,      0.3828,      2.0938,      0.4043,      0.3926,      2.0938,      1.2812],
        [     0.0000,      0.7539,      0.2119,      0.3262,      1.7109,      0.6523,      0.8594,      0.3047,      1.4766,      0.3379,      1.2500,      0.3320,      0.3203,      1.4062,      0.8320],
        [    -0.0000,      0.4883,     -0.4316,     -0.2930,      2.8281,      1.1172,      0.8281,     -0.3730,      2.6562,     -0.2969,      1.7500,     -0.3008,     -0.3223,      2.5469,      0.6562],
        [    -0.0000,      2.2812,      2.7031,      2.7344,      1.0625,      1.7812,      2.5312,      2.7812,      0.3691,      2.8125,      2.7031,      2.7969,      2.7969,      0.7695,      2.4375],
        [    -0.0000,      0.5859,      0.1729,      0.2480,      2.2500,      1.2500,      1.3594,      0.0908,      1.9375,      0.1138,      2.0469,      0.1328,      0.1206,      2.1094,      1.1094],
        [     0.0000,      0.1406,     -0.7266,     -0.6211,      1.5234,      0.0781,      0.0889,     -0.6406,      1.5391,     -0.5938,      0.3242,     -0.6133,     -0.6250,      1.2578,      0.1157],
        [    -0.0000,      0.6055,      0.2158,      0.3027,      2.3594,      1.3594,      1.3672,      0.1572,      2.0469,      0.1846,      2.1875,      0.2090,      0.1934,      2.2344,      1.1094],
        [    -0.0000,      0.9141,      0.0297,      0.1562,      2.5156,      1.0547,      1.4141,      0.0334,      2.2812,      0.0898,      1.8828,      0.0540,      0.0500,      2.1719,      1.2891],
        [    -0.0000,      0.5273,      0.1118,      0.2021,      2.3750,      1.3125,      1.3516,      0.0476,      2.0625,      0.0742,      2.1562,      0.0962,      0.0820,      2.2344,      1.0938],
        [    -0.0000,      0.5391,      0.1387,      0.2266,      2.3281,      1.3125,      1.3438,      0.0747,      2.0312,      0.1016,      2.1406,      0.1230,      0.1094,      2.2031,      1.0859],
        [     0.0000,      0.2236,     -0.5859,     -0.4629,      1.8125,      0.3027,      0.3828,     -0.5273,      1.7891,     -0.4883,      0.7695,     -0.5078,     -0.5195,      1.5547,      0.3770],
        [    -0.0000,      2.0938,      2.4688,      2.4844,      0.7656,      1.4766,      2.2656,      2.5312,      0.1138,      2.5469,      2.2656,      2.5469,      2.5469,      0.4863,      2.1875]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2954],
        [0.3530],
        [0.3177],
        [0.1332],
        [0.1428],
        [0.0647],
        [0.0993],
        [0.0903],
        [0.0755],
        [0.0619],
        [0.0683],
        [0.0674],
        [0.0613],
        [0.0324]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3066, 0.6953, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2256, 0.4375, 0.3379, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1660, 0.3379, 0.2461, 0.2490, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0227, 0.1172, 0.0483, 0.0554, 0.7578, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0522, 0.1289, 0.0728, 0.0767, 0.5078, 0.1602, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0403, 0.1816, 0.1514, 0.1611, 0.1885, 0.1895, 0.0874, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0586, 0.1172, 0.0796, 0.0815, 0.3320, 0.1475, 0.1211, 0.0613, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0171, 0.0688, 0.0272, 0.0306, 0.3496, 0.1084, 0.0304, 0.0254, 0.3418, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0430, 0.0830, 0.0554, 0.0569, 0.2539, 0.1079, 0.0889, 0.0422, 0.2275, 0.0408, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0106, 0.0461, 0.0195, 0.0217, 0.3066, 0.0791, 0.0292, 0.0168, 0.2793, 0.0165, 0.1748, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0347, 0.0688, 0.0454, 0.0469, 0.2168, 0.0918, 0.0723, 0.0347, 0.1953, 0.0334, 0.1260, 0.0342, 0.0000, 0.0000, 0.0000],
        [0.0342, 0.0674, 0.0447, 0.0459, 0.2070, 0.0884, 0.0708, 0.0342, 0.1865, 0.0330, 0.1216, 0.0337, 0.0330, 0.0000, 0.0000],
        [0.0093, 0.0420, 0.0170, 0.0189, 0.2197, 0.0708, 0.0179, 0.0150, 0.2139, 0.0148, 0.1416, 0.0153, 0.0148, 0.1885, 0.0000],
        [0.0195, 0.0762, 0.0649, 0.0693, 0.0781, 0.0786, 0.0386, 0.0723, 0.0645, 0.0732, 0.1025, 0.0757, 0.0747, 0.0806, 0.0322]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0071,      0.0056,      0.0060,      0.0106,      0.0092,      0.0046,      0.0056,      0.0099,      0.0056,      0.0109,      0.0058,      0.0057,      0.0104,      0.0039],
        [    -0.0000,      0.8164,      0.4551,      0.5273,      2.3125,      1.2969,      0.9727,      0.3008,      2.1875,      0.2812,      1.7578,      0.3301,      0.3008,      2.2031,      0.8359],
        [    -0.0000,      0.6602,      0.4062,      0.4102,      1.3516,      0.7305,      0.6836,      0.1611,      1.2031,      0.1279,      0.8828,      0.1494,      0.1289,      1.1875,      0.6094],
        [    -0.0000,      0.7109,      0.3906,      0.4043,      1.5234,      0.8086,      0.7070,      0.1533,      1.3828,      0.1211,      1.0234,      0.1445,      0.1226,      1.3438,      0.6328],
        [    -0.0001,      1.6406,      0.7539,      0.8906,      3.5000,      2.2812,      0.8359,      0.6914,      3.4531,      0.6914,      3.0938,      0.7383,      0.7031,      3.4062,      0.6680],
        [    -0.0000,      0.9023,      0.3281,      0.3828,      2.2812,      1.1172,      0.6680,      0.1250,      2.1875,      0.0986,      1.6797,      0.1182,      0.0942,      2.0781,      0.6133],
        [    -0.0000,      1.5078,      1.3281,      1.3906,      1.5469,      1.5469,      0.7734,      1.3906,      1.3438,      1.4062,      1.8359,      1.4375,      1.4219,      1.5781,      0.5820],
        [    -0.0000,      0.6953,      0.3066,      0.3320,      1.7344,      0.9258,      0.7266,      0.0444,      1.6172,      0.0104,      1.2188,      0.0354,      0.0110,      1.5469,      0.6641],
        [    -0.0000,      1.3906,      0.4609,      0.5781,      3.0156,      1.8438,      0.5703,      0.3926,      3.0000,      0.3926,      2.5781,      0.4180,      0.3926,      2.8594,      0.4688],
        [    -0.0000,      0.6562,      0.2500,      0.2793,      1.7734,      0.9180,      0.7266,     -0.0173,      1.6641,     -0.0522,      1.2266,     -0.0269,     -0.0515,      1.5781,      0.6680],
        [    -0.0001,      1.4766,      0.6211,      0.7188,      3.3750,      2.0156,      1.0156,      0.4648,      3.2812,      0.4492,      2.8125,      0.4922,      0.4551,      3.1875,      0.8945],
        [    -0.0000,      0.6875,      0.2695,      0.3008,      1.8359,      0.9727,      0.7383,      0.0002,      1.7266,     -0.0352,      1.2969,     -0.0095,     -0.0347,      1.6406,      0.6758],
        [    -0.0000,      0.6758,      0.2656,      0.2969,      1.8047,      0.9531,      0.7305,     -0.0029,      1.6953,     -0.0381,      1.2656,     -0.0128,     -0.0376,      1.6094,      0.6719],
        [    -0.0001,      1.5000,      0.5938,      0.7070,      3.1562,      2.0312,      0.6523,      0.4727,      3.1250,      0.4629,      2.7188,      0.4922,      0.4629,      3.0000,      0.5391],
        [    -0.0000,      1.3594,      1.2031,      1.2656,      1.3828,      1.3906,      0.6797,      1.3047,      1.1875,      1.3203,      1.6562,      1.3516,      1.3359,      1.4141,      0.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.1566],
        [0.1411],
        [0.1048],
        [0.0276],
        [0.0337],
        [0.0315],
        [0.0357],
        [0.0187],
        [0.0283],
        [0.0090],
        [0.0229],
        [0.0225],
        [0.0093],
        [0.0167]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1074, 0.8906, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0583, 0.5820, 0.3594, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0359, 0.4355, 0.2598, 0.2695, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0056, 0.1650, 0.0986, 0.0986, 0.6328, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0060, 0.1465, 0.0762, 0.0771, 0.5742, 0.1187, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0125, 0.1514, 0.1030, 0.1055, 0.3105, 0.1221, 0.1943, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0068, 0.1191, 0.0698, 0.0728, 0.4160, 0.0977, 0.1416, 0.0757, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0031, 0.0811, 0.0500, 0.0498, 0.3164, 0.0713, 0.1187, 0.0493, 0.2617, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0049, 0.0854, 0.0498, 0.0520, 0.2969, 0.0698, 0.1025, 0.0542, 0.2305, 0.0547, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0022, 0.0713, 0.0381, 0.0386, 0.2832, 0.0588, 0.0894, 0.0400, 0.2227, 0.0403, 0.1147, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0038, 0.0713, 0.0413, 0.0430, 0.2520, 0.0581, 0.0864, 0.0449, 0.1943, 0.0452, 0.1143, 0.0459, 0.0000, 0.0000, 0.0000],
        [0.0037, 0.0684, 0.0396, 0.0413, 0.2402, 0.0557, 0.0825, 0.0430, 0.1855, 0.0432, 0.1094, 0.0439, 0.0437, 0.0000, 0.0000],
        [0.0018, 0.0540, 0.0320, 0.0317, 0.2129, 0.0447, 0.0767, 0.0317, 0.1709, 0.0317, 0.0854, 0.0325, 0.0322, 0.1611, 0.0000],
        [0.0056, 0.0659, 0.0459, 0.0471, 0.1328, 0.0540, 0.0864, 0.0481, 0.1006, 0.0476, 0.0815, 0.0481, 0.0481, 0.1050, 0.0825]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    0.0000,     0.0092,     0.0089,     0.0089,     0.0123,     0.0092,     0.0107,     0.0089,     0.0112,     0.0088,     0.0109,     0.0089,     0.0089,     0.0115,     0.0106],
        [    0.0001,     2.1094,     1.6562,     1.6641,     3.2344,     1.8438,     2.3281,     1.6250,     3.0312,     1.6250,     2.4688,     1.6328,     1.6328,     2.9688,     2.3125],
        [    0.0001,     2.2969,     1.8203,     1.8594,     3.4375,     2.1094,     2.3594,     1.8906,     3.2344,     1.9062,     2.7188,     1.9141,     1.9141,     3.1719,     2.3438],
        [    0.0001,     2.5000,     1.9766,     2.0156,     3.6719,     2.2969,     2.5625,     2.0625,     3.4531,     2.0625,     2.9219,     2.0781,     2.0781,     3.4062,     2.5469],
        [    0.0001,     3.3750,     2.8750,     2.8594,     4.7188,     3.2031,     3.7344,     2.8594,     4.5000,     2.8594,     3.8281,     2.8750,     2.8750,     4.4688,     3.7188],
        [    0.0001,     3.1875,     2.5469,     2.5469,     4.5625,     2.9844,     3.3906,     2.5781,     4.3438,     2.5781,     3.6250,     2.5938,     2.5938,     4.2500,     3.3750],
        [    0.0000,     2.5000,     2.1094,     2.1250,     3.2188,     2.2812,     2.7344,     2.1562,     2.9375,     2.1406,     2.7031,     2.1562,     2.1562,     2.9688,     2.7031],
        [    0.0001,     2.8594,     2.3281,     2.3750,     4.1250,     2.6562,     3.0312,     2.4062,     3.8594,     2.4219,     3.3281,     2.4375,     2.4219,     3.8125,     3.0000],
        [    0.0001,     3.2656,     2.7812,     2.7656,     4.6250,     3.1250,     3.6406,     2.7656,     4.4375,     2.7656,     3.7344,     2.7812,     2.7812,     4.3750,     3.6250],
        [    0.0001,     2.8594,     2.3281,     2.3594,     4.0938,     2.6562,     3.0469,     2.4062,     3.8594,     2.4062,     3.3281,     2.4219,     2.4219,     3.8125,     3.0156],
        [    0.0001,     3.4688,     2.8438,     2.8594,     4.8438,     3.2812,     3.6875,     2.8906,     4.6250,     2.8906,     3.9531,     2.9219,     2.9062,     4.5625,     3.6719],
        [    0.0001,     2.9219,     2.3750,     2.4219,     4.1875,     2.7188,     3.1094,     2.4531,     3.9219,     2.4688,     3.3906,     2.4844,     2.4688,     3.8750,     3.0938],
        [    0.0001,     2.9062,     2.3594,     2.4062,     4.1562,     2.7031,     3.1094,     2.4531,     3.9062,     2.4531,     3.3750,     2.4688,     2.4688,     3.8594,     3.0781],
        [    0.0001,     3.4219,     2.8906,     2.8906,     4.7812,     3.2344,     3.7656,     2.8906,     4.5625,     2.8906,     3.8750,     2.9062,     2.8906,     4.5000,     3.7500],
        [    0.0000,     2.4688,     2.1094,     2.1406,     3.1719,     2.2656,     2.7344,     2.1562,     2.8906,     2.1406,     2.6875,     2.1562,     2.1562,     2.9375,     2.7031]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0634],
        [0.0446],
        [0.0298],
        [0.0062],
        [0.0098],
        [0.0082],
        [0.0085],
        [0.0033],
        [0.0067],
        [0.0032],
        [0.0054],
        [0.0052],
        [0.0022],
        [0.0037]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1494, 0.8516, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0991, 0.5117, 0.3906, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0640, 0.3672, 0.2773, 0.2910, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0146, 0.2344, 0.1562, 0.1621, 0.4336, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0159, 0.1787, 0.1260, 0.1318, 0.3398, 0.2090, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0117, 0.1279, 0.0908, 0.0938, 0.2461, 0.1533, 0.2754, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0156, 0.1152, 0.0850, 0.0898, 0.2236, 0.1406, 0.2256, 0.1045, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0061, 0.1011, 0.0669, 0.0693, 0.1836, 0.1084, 0.1904, 0.0791, 0.1943, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0115, 0.0859, 0.0630, 0.0669, 0.1670, 0.1050, 0.1680, 0.0776, 0.1768, 0.0791, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0056, 0.0796, 0.0542, 0.0566, 0.1494, 0.0898, 0.1543, 0.0654, 0.1592, 0.0664, 0.1191, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0091, 0.0703, 0.0518, 0.0547, 0.1377, 0.0864, 0.1377, 0.0640, 0.1455, 0.0649, 0.1128, 0.0659, 0.0000, 0.0000, 0.0000],
        [0.0086, 0.0664, 0.0486, 0.0513, 0.1289, 0.0811, 0.1289, 0.0598, 0.1367, 0.0608, 0.1055, 0.0618, 0.0615, 0.0000, 0.0000],
        [0.0042, 0.0640, 0.0427, 0.0444, 0.1182, 0.0698, 0.1216, 0.0513, 0.1250, 0.0520, 0.0928, 0.0525, 0.0525, 0.1094, 0.0000],
        [0.0048, 0.0530, 0.0374, 0.0388, 0.1025, 0.0635, 0.1143, 0.0439, 0.1094, 0.0447, 0.0830, 0.0449, 0.0449, 0.0957, 0.1196]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0059,      0.0049,      0.0049,      0.0070,      0.0058,      0.0074,      0.0052,      0.0071,      0.0052,      0.0064,      0.0052,      0.0052,      0.0068,      0.0075],
        [    -0.0001,      1.7422,      1.4141,      1.4375,      2.2188,      1.7969,      2.3906,      1.5391,      2.2656,      1.5469,      2.0312,      1.5547,      1.5547,      2.1562,      2.4219],
        [    -0.0000,      1.6406,      1.3672,      1.4062,      2.2344,      1.8125,      2.3125,      1.5391,      2.2969,      1.5547,      2.0781,      1.5625,      1.5625,      2.1875,      2.3438],
        [    -0.0001,      1.7500,      1.4688,      1.5156,      2.3750,      1.9375,      2.4219,      1.6562,      2.4375,      1.6719,      2.2031,      1.6797,      1.6797,      2.3281,      2.4531],
        [    -0.0001,      2.7656,      2.3594,      2.4062,      3.3906,      2.8594,      3.4219,      2.5469,      3.4375,      2.5469,      3.1406,      2.5625,      2.5625,      3.3125,      3.4688],
        [    -0.0001,      2.4219,      2.0625,      2.1250,      3.0625,      2.5781,      3.0625,      2.2656,      3.1250,      2.2812,      2.8438,      2.2969,      2.2969,      3.0000,      3.1094],
        [    -0.0001,      2.3906,      2.0469,      2.0781,      3.0469,      2.5781,      3.1562,      2.2031,      3.1094,      2.2188,      2.8438,      2.2344,      2.2344,      2.9844,      3.2031],
        [    -0.0001,      1.9922,      1.6875,      1.7422,      2.6562,      2.2031,      2.6719,      1.8984,      2.7188,      1.9141,      2.4688,      1.9219,      1.9219,      2.5938,      2.7031],
        [    -0.0001,      2.8125,      2.3906,      2.4375,      3.4062,      2.8750,      3.4531,      2.5625,      3.4688,      2.5781,      3.1562,      2.5938,      2.5938,      3.3281,      3.4844],
        [    -0.0001,      2.0156,      1.7031,      1.7578,      2.6719,      2.2188,      2.6875,      1.9141,      2.7344,      1.9297,      2.4844,      1.9375,      1.9375,      2.6094,      2.7188],
        [    -0.0001,      2.6562,      2.2812,      2.3125,      3.2969,      2.7812,      3.3281,      2.4531,      3.3438,      2.4688,      3.0625,      2.4844,      2.4844,      3.2188,      3.3594],
        [    -0.0001,      2.0469,      1.7344,      1.7891,      2.7188,      2.2500,      2.7188,      1.9453,      2.7656,      1.9609,      2.5156,      1.9766,      1.9766,      2.6562,      2.7500],
        [    -0.0001,      2.0312,      1.7266,      1.7812,      2.7031,      2.2344,      2.7031,      1.9375,      2.7656,      1.9531,      2.5000,      1.9688,      1.9688,      2.6406,      2.7500],
        [    -0.0001,      2.7344,      2.3281,      2.3750,      3.3438,      2.8281,      3.3750,      2.5156,      3.4062,      2.5312,      3.1094,      2.5312,      2.5312,      3.2656,      3.4219],
        [    -0.0001,      2.4062,      2.0625,      2.0938,      3.0781,      2.5938,      3.1875,      2.2188,      3.1406,      2.2344,      2.8594,      2.2500,      2.2500,      3.0000,      3.2188]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.1126],
        [0.0585],
        [0.0375],
        [0.0141],
        [0.0127],
        [0.0123],
        [0.0107],
        [0.0059],
        [0.0081],
        [0.0049],
        [0.0065],
        [0.0062],
        [0.0039],
        [0.0049]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0630, 0.9375, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0291, 0.5039, 0.4688, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0183, 0.3398, 0.3164, 0.3262, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0095, 0.2256, 0.2090, 0.2178, 0.3379, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0082, 0.1748, 0.1631, 0.1699, 0.2637, 0.2207, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0058, 0.1299, 0.1221, 0.1279, 0.2012, 0.1680, 0.2461, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0058, 0.1177, 0.1099, 0.1138, 0.1748, 0.1475, 0.2148, 0.1157, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0041, 0.0991, 0.0923, 0.0962, 0.1494, 0.1250, 0.1855, 0.0977, 0.1514, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0045, 0.0908, 0.0850, 0.0879, 0.1348, 0.1138, 0.1660, 0.0898, 0.1367, 0.0903, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0034, 0.0806, 0.0747, 0.0776, 0.1206, 0.1011, 0.1494, 0.0786, 0.1221, 0.0791, 0.1123, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0036, 0.0747, 0.0698, 0.0723, 0.1113, 0.0933, 0.1367, 0.0737, 0.1128, 0.0742, 0.1040, 0.0737, 0.0000, 0.0000, 0.0000],
        [0.0034, 0.0698, 0.0649, 0.0674, 0.1035, 0.0869, 0.1270, 0.0684, 0.1050, 0.0688, 0.0967, 0.0688, 0.0688, 0.0000, 0.0000],
        [0.0027, 0.0635, 0.0588, 0.0610, 0.0947, 0.0791, 0.1177, 0.0620, 0.0957, 0.0623, 0.0884, 0.0620, 0.0623, 0.0894, 0.0000],
        [0.0024, 0.0549, 0.0515, 0.0540, 0.0850, 0.0708, 0.1040, 0.0557, 0.0869, 0.0562, 0.0796, 0.0562, 0.0562, 0.0811, 0.1060]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    0.0000,     0.0025,     0.0023,     0.0023,     0.0027,     0.0025,     0.0029,     0.0023,     0.0027,     0.0023,     0.0027,     0.0023,     0.0023,     0.0027,     0.0029],
        [    0.0001,     2.7031,     2.6406,     2.6719,     3.1094,     2.9219,     3.3125,     2.7031,     3.1250,     2.7188,     3.0469,     2.7188,     2.7188,     3.0625,     3.3281],
        [    0.0001,     2.8594,     2.7812,     2.8125,     3.2500,     3.0781,     3.4531,     2.8438,     3.2656,     2.8438,     3.1875,     2.8438,     2.8438,     3.2031,     3.4688],
        [    0.0001,     2.9219,     2.8438,     2.8750,     3.3125,     3.1406,     3.5156,     2.9062,     3.3281,     2.9062,     3.2500,     2.9062,     2.9062,     3.2656,     3.5312],
        [    0.0001,     3.1719,     3.0938,     3.1250,     3.5625,     3.3906,     3.7812,     3.1406,     3.5781,     3.1406,     3.5000,     3.1406,     3.1406,     3.5156,     3.7969],
        [    0.0001,     3.0625,     3.0000,     3.0312,     3.4688,     3.2969,     3.6875,     3.0469,     3.4844,     3.0625,     3.4062,     3.0625,     3.0625,     3.4219,     3.7031],
        [    0.0001,     3.0938,     3.0469,     3.0781,     3.5469,     3.3594,     3.7344,     3.1094,     3.5625,     3.1250,     3.4688,     3.1250,     3.1250,     3.5000,     3.7656],
        [    0.0001,     3.0000,     2.9375,     2.9688,     3.4062,     3.2344,     3.6094,     2.9844,     3.4219,     3.0000,     3.3281,     3.0000,     3.0000,     3.3438,     3.6250],
        [    0.0001,     3.1875,     3.1094,     3.1562,     3.5938,     3.4062,     3.8125,     3.1719,     3.6094,     3.1719,     3.5156,     3.1719,     3.1719,     3.5312,     3.8281],
        [    0.0001,     3.0156,     2.9375,     2.9844,     3.4062,     3.2344,     3.6094,     3.0000,     3.4219,     3.0000,     3.3438,     3.0000,     3.0000,     3.3594,     3.6250],
        [    0.0001,     3.1562,     3.0781,     3.1250,     3.5625,     3.3906,     3.7812,     3.1406,     3.5781,     3.1406,     3.5000,     3.1406,     3.1406,     3.5156,     3.7969],
        [    0.0001,     3.0156,     2.9531,     2.9844,     3.4219,     3.2500,     3.6250,     3.0000,     3.4375,     3.0156,     3.3438,     3.0156,     3.0156,     3.3594,     3.6406],
        [    0.0001,     3.0156,     2.9531,     2.9844,     3.4219,     3.2344,     3.6250,     3.0000,     3.4219,     3.0156,     3.3438,     3.0000,     3.0156,     3.3594,     3.6406],
        [    0.0001,     3.1719,     3.0938,     3.1250,     3.5625,     3.3906,     3.7812,     3.1406,     3.5781,     3.1406,     3.5000,     3.1406,     3.1406,     3.5156,     3.7969],
        [    0.0001,     3.1250,     3.0625,     3.1094,     3.5625,     3.3750,     3.7656,     3.1406,     3.5781,     3.1406,     3.5000,     3.1406,     3.1406,     3.5156,     3.7812]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2813],
        [0.1540],
        [0.1001],
        [0.0582],
        [0.0487],
        [0.0348],
        [0.0347],
        [0.0259],
        [0.0263],
        [0.0212],
        [0.0213],
        [0.0196],
        [0.0162],
        [0.0140]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5273, 0.4746, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2715, 0.3262, 0.4023, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1641, 0.2275, 0.2793, 0.3281, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1011, 0.1689, 0.2061, 0.2412, 0.2832, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0776, 0.1318, 0.1602, 0.1875, 0.2188, 0.2246, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0566, 0.1064, 0.1299, 0.1514, 0.1777, 0.1816, 0.1963, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0505, 0.0898, 0.1084, 0.1270, 0.1484, 0.1514, 0.1631, 0.1621, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0403, 0.0771, 0.0938, 0.1089, 0.1270, 0.1299, 0.1406, 0.1387, 0.1436, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0366, 0.0674, 0.0815, 0.0952, 0.1113, 0.1138, 0.1221, 0.1216, 0.1250, 0.1250, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0315, 0.0601, 0.0728, 0.0845, 0.0986, 0.1006, 0.1084, 0.1079, 0.1108, 0.1113, 0.1133, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0287, 0.0540, 0.0654, 0.0757, 0.0889, 0.0903, 0.0977, 0.0967, 0.0996, 0.1001, 0.1016, 0.1021, 0.0000, 0.0000, 0.0000],
        [0.0259, 0.0491, 0.0593, 0.0688, 0.0806, 0.0820, 0.0884, 0.0874, 0.0903, 0.0903, 0.0923, 0.0923, 0.0933, 0.0000, 0.0000],
        [0.0227, 0.0449, 0.0542, 0.0630, 0.0737, 0.0752, 0.0811, 0.0801, 0.0825, 0.0830, 0.0845, 0.0845, 0.0854, 0.0864, 0.0000],
        [0.0201, 0.0410, 0.0496, 0.0579, 0.0679, 0.0693, 0.0742, 0.0737, 0.0762, 0.0762, 0.0776, 0.0781, 0.0786, 0.0796, 0.0801]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.0013,     -0.0011,     -0.0009,     -0.0007,     -0.0007,     -0.0006,     -0.0006,     -0.0006,     -0.0006,     -0.0005,     -0.0006,     -0.0005,     -0.0005,     -0.0005],
        [     0.0000,     -0.1045,      0.1196,      0.2910,      0.4512,      0.4883,      0.5703,      0.5742,      0.6016,      0.6172,      0.6328,      0.6406,      0.6523,      0.6562,      0.6719],
        [     0.0000,      0.1836,      0.3965,      0.5586,      0.7188,      0.7500,      0.8281,      0.8281,      0.8555,      0.8672,      0.8789,      0.8867,      0.8984,      0.9062,      0.9219],
        [     0.0000,      0.3301,      0.5352,      0.6953,      0.8555,      0.8828,      0.9609,      0.9609,      0.9883,      0.9961,      1.0156,      1.0156,      1.0312,      1.0391,      1.0547],
        [     0.0000,      0.5156,      0.7148,      0.8711,      1.0312,      1.0547,      1.1328,      1.1250,      1.1562,      1.1641,      1.1797,      1.1797,      1.1953,      1.2031,      1.2188],
        [     0.0000,      0.5273,      0.7227,      0.8789,      1.0391,      1.0625,      1.1328,      1.1250,      1.1562,      1.1641,      1.1797,      1.1875,      1.1953,      1.2031,      1.2188],
        [     0.0000,      0.6289,      0.8242,      0.9844,      1.1406,      1.1641,      1.2422,      1.2344,      1.2656,      1.2734,      1.2891,      1.2891,      1.2969,      1.3125,      1.3203],
        [     0.0000,      0.5742,      0.7656,      0.9219,      1.0781,      1.1016,      1.1719,      1.1641,      1.1953,      1.2031,      1.2188,      1.2188,      1.2266,      1.2422,      1.2578],
        [     0.0000,      0.6484,      0.8398,      0.9922,      1.1484,      1.1719,      1.2422,      1.2344,      1.2656,      1.2734,      1.2891,      1.2891,      1.2969,      1.3125,      1.3203],
        [     0.0000,      0.6133,      0.8047,      0.9531,      1.1094,      1.1328,      1.2031,      1.1953,      1.2266,      1.2344,      1.2500,      1.2500,      1.2578,      1.2734,      1.2812],
        [     0.0000,      0.6484,      0.8359,      0.9883,      1.1484,      1.1641,      1.2422,      1.2344,      1.2578,      1.2656,      1.2812,      1.2812,      1.2969,      1.3047,      1.3203],
        [     0.0000,      0.6328,      0.8203,      0.9727,      1.1250,      1.1484,      1.2188,      1.2109,      1.2422,      1.2422,      1.2656,      1.2656,      1.2734,      1.2891,      1.2969],
        [     0.0000,      0.6406,      0.8281,      0.9805,      1.1328,      1.1562,      1.2266,      1.2188,      1.2500,      1.2500,      1.2734,      1.2734,      1.2812,      1.2969,      1.3047],
        [     0.0000,      0.6797,      0.8672,      1.0156,      1.1719,      1.1953,      1.2656,      1.2578,      1.2891,      1.2891,      1.3125,      1.3125,      1.3203,      1.3359,      1.3438],
        [     0.0000,      0.7109,      0.9023,      1.0547,      1.2109,      1.2344,      1.3047,      1.2969,      1.3281,      1.3359,      1.3516,      1.3516,      1.3594,      1.3750,      1.3828]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5363],
        [0.2883],
        [0.1733],
        [0.1048],
        [0.0793],
        [0.0579],
        [0.0508],
        [0.0405],
        [0.0364],
        [0.0310],
        [0.0283],
        [0.0254],
        [0.0224],
        [0.0200]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(.:0.0571.:0.0588.:0.0574.:0.0593.:0.0596.:0.0596.:0.0596.:0.0598)
.
------
		(.:0.0588.:0.0574.:0.0593.:0.0596.:0.0596.:0.0596.:0.0598.:0.0598)
...............
@ 50 train 7.2283 , allloss: 7.2283, dt: 1150.93ms, fracRes: 0.0036, norm(attn): 0.0447, norm(output): 0.2812, norm(x): 0.2844, norm(y): 0.9999, norm:0.6059, tok/sec: 113883.30, flops:119.55, batch-reuse:1
@ 51 train 7.2983 , allloss: 7.2983, dt: 701.18ms, fracRes: 0.0035, norm(attn): 0.0486, norm(output): 0.2773, norm(x): 0.2782, norm(y): 0.9999, norm:0.9588, tok/sec: 186931.12, flops:196.24, batch-reuse:1
@ 52 train 7.0890 , allloss: 7.0890, dt: 705.39ms, fracRes: 0.0036, norm(attn): 0.0474, norm(output): 0.2812, norm(x): 0.2842, norm(y): 0.9998, norm:0.8627, tok/sec: 185814.95, flops:195.07, batch-reuse:1
@ 53 train 7.0533 , allloss: 7.0533, dt: 700.11ms, fracRes: 0.0038, norm(attn): 0.0408, norm(output): 0.3047, norm(x): 0.3044, norm(y): 0.9999, norm:0.9794, tok/sec: 187216.62, flops:196.54, batch-reuse:1
@ 54 train 7.1496 , allloss: 7.1496, dt: 701.63ms, fracRes: 0.0038, norm(attn): 0.0413, norm(output): 0.3008, norm(x): 0.3004, norm(y): 0.9998, norm:0.7945, tok/sec: 186811.89, flops:196.12, batch-reuse:1
@ 55 train 7.2157 , allloss: 7.2157, dt: 689.66ms, fracRes: 0.0038, norm(attn): 0.0447, norm(output): 0.2871, norm(x): 0.2936, norm(y): 0.9998, norm:0.8467, tok/sec: 190053.77, flops:199.52, batch-reuse:1
@ 56 train 6.9960 , allloss: 6.9960, dt: 693.87ms, fracRes: 0.0038, norm(attn): 0.0449, norm(output): 0.3105, norm(x): 0.3094, norm(y): 0.9998, norm:0.8383, tok/sec: 188899.14, flops:198.31, batch-reuse:1
@ 57 train 6.9261 , allloss: 6.9261, dt: 696.32ms, fracRes: 0.0039, norm(attn): 0.0427, norm(output): 0.3125, norm(x): 0.3134, norm(y): 0.9998, norm:0.9878, tok/sec: 188234.83, flops:197.61, batch-reuse:1
@ 58 train 6.9701 , allloss: 6.9701, dt: 686.84ms, fracRes: 0.0038, norm(attn): 0.0483, norm(output): 0.3125, norm(x): 0.3149, norm(y): 0.9998, norm:0.9982, tok/sec: 190832.44, flops:200.34, batch-reuse:1
@ 59 train 6.8136 , allloss: 6.8136, dt: 694.87ms, fracRes: 0.0038, norm(attn): 0.0464, norm(output): 0.3125, norm(x): 0.3147, norm(y): 0.9997, norm:1.5827, tok/sec: 188629.13, flops:198.02, batch-reuse:1
@ 60 train 6.9819 , allloss: 6.9819, dt: 689.27ms, fracRes: 0.0039, norm(attn): 0.0493, norm(output): 0.3320, norm(x): 0.3311, norm(y): 0.9997, norm:1.2247, tok/sec: 190160.80, flops:199.63, batch-reuse:1
@ 61 train 6.8998 , allloss: 6.8998, dt: 698.20ms, fracRes: 0.0040, norm(attn): 0.0479, norm(output): 0.3320, norm(x): 0.3341, norm(y): 0.9997, norm:0.8975, tok/sec: 187729.35, flops:197.08, batch-reuse:1
@ 62 train 6.9729 , allloss: 6.9729, dt: 699.84ms, fracRes: 0.0038, norm(attn): 0.0420, norm(output): 0.3340, norm(x): 0.3348, norm(y): 0.9997, norm:1.1748, tok/sec: 187289.53, flops:196.62, batch-reuse:1
@ 63 train 6.9111 , allloss: 6.9111, dt: 698.18ms, fracRes: 0.0039, norm(attn): 0.0422, norm(output): 0.3477, norm(x): 0.3517, norm(y): 0.9997, norm:0.8089, tok/sec: 187734.28, flops:197.08, batch-reuse:1
@ 64 train 6.8700 , allloss: 6.8700, dt: 696.70ms, fracRes: 0.0039, norm(attn): 0.0388, norm(output): 0.3496, norm(x): 0.3566, norm(y): 0.9996, norm:0.6122, tok/sec: 188131.38, flops:197.50, batch-reuse:1
@ 65 train 6.9666 , allloss: 6.9666, dt: 691.67ms, fracRes: 0.0038, norm(attn): 0.0383, norm(output): 0.3438, norm(x): 0.3500, norm(y): 0.9996, norm:1.0384, tok/sec: 189501.70, flops:198.94, batch-reuse:1
@ 66 train 6.9983 , allloss: 6.9983, dt: 693.87ms, fracRes: 0.0038, norm(attn): 0.0366, norm(output): 0.3438, norm(x): 0.3457, norm(y): 0.9996, norm:0.8519, tok/sec: 188898.82, flops:198.31, batch-reuse:1
@ 67 train 6.8776 , allloss: 6.8776, dt: 683.78ms, fracRes: 0.0039, norm(attn): 0.0393, norm(output): 0.3516, norm(x): 0.3540, norm(y): 0.9995, norm:0.6286, tok/sec: 191688.33, flops:201.23, batch-reuse:1
@ 68 train 6.9299 , allloss: 6.9299, dt: 701.88ms, fracRes: 0.0041, norm(attn): 0.0405, norm(output): 0.3633, norm(x): 0.3637, norm(y): 0.9995, norm:1.1019, tok/sec: 186743.61, flops:196.04, batch-reuse:1
@ 69 train 6.7880 , allloss: 6.7880, dt: 704.52ms, fracRes: 0.0042, norm(attn): 0.0410, norm(output): 0.3555, norm(x): 0.3604, norm(y): 0.9995, norm:0.5163, tok/sec: 186044.28, flops:195.31, batch-reuse:1
@ 70 train 6.8020 , allloss: 6.8020, dt: 701.18ms, fracRes: 0.0041, norm(attn): 0.0405, norm(output): 0.3516, norm(x): 0.3557, norm(y): 0.9994, norm:0.8682, tok/sec: 186930.04, flops:196.24, batch-reuse:1
@ 71 train 6.7532 , allloss: 6.7532, dt: 691.18ms, fracRes: 0.0041, norm(attn): 0.0415, norm(output): 0.3535, norm(x): 0.3578, norm(y): 0.9994, norm:0.7583, tok/sec: 189634.92, flops:199.08, batch-reuse:1
@ 72 train 6.7985 , allloss: 6.7985, dt: 693.32ms, fracRes: 0.0042, norm(attn): 0.0425, norm(output): 0.3613, norm(x): 0.3652, norm(y): 0.9994, norm:0.3763, tok/sec: 189049.97, flops:198.47, batch-reuse:1
@ 73 train 6.9247 , allloss: 6.9247, dt: 689.56ms, fracRes: 0.0042, norm(attn): 0.0457, norm(output): 0.3633, norm(x): 0.3628, norm(y): 0.9993, norm:0.9046, tok/sec: 190081.96, flops:199.55, batch-reuse:1
@ 74 train 6.8171 , allloss: 6.8171, dt: 688.56ms, fracRes: 0.0041, norm(attn): 0.0522, norm(output): 0.3594, norm(x): 0.3619, norm(y): 0.9993, norm:0.6506, tok/sec: 190356.82, flops:199.84, batch-reuse:1
@ 75 train 7.4684 , allloss: 7.4684, dt: 702.41ms, fracRes: 0.0041, norm(attn): 0.0698, norm(output): 0.3750, norm(x): 0.3816, norm(y): 0.9993, norm:0.8891, tok/sec: 186604.22, flops:195.90, batch-reuse:1
@ 76 train 6.8191 , allloss: 6.8191, dt: 695.18ms, fracRes: 0.0041, norm(attn): 0.0640, norm(output): 0.3770, norm(x): 0.3791, norm(y): 0.9993, norm:1.0454, tok/sec: 188544.70, flops:197.93, batch-reuse:1
@ 77 train 7.6368 , allloss: 7.6368, dt: 706.51ms, fracRes: 0.0043, norm(attn): 0.0693, norm(output): 0.3965, norm(x): 0.3969, norm(y): 0.9992, norm:1.8970, tok/sec: 185520.23, flops:194.76, batch-reuse:1
@ 78 train 7.0740 , allloss: 7.0740, dt: 708.57ms, fracRes: 0.0040, norm(attn): 0.0723, norm(output): 0.3848, norm(x): 0.3903, norm(y): 0.9992, norm:0.9851, tok/sec: 184980.71, flops:194.19, batch-reuse:1
@ 79 train 6.7850 , allloss: 6.7850, dt: 694.56ms, fracRes: 0.0038, norm(attn): 0.0635, norm(output): 0.3750, norm(x): 0.3765, norm(y): 0.9992, norm:1.3632, tok/sec: 188713.04, flops:198.11, batch-reuse:1
@ 80 train 6.7656 , allloss: 6.7656, dt: 688.60ms, fracRes: 0.0037, norm(attn): 0.0796, norm(output): 0.3770, norm(x): 0.3823, norm(y): 0.9992, norm:0.8226, tok/sec: 190344.95, flops:199.82, batch-reuse:1
@ 81 train 6.7795 , allloss: 6.7795, dt: 701.93ms, fracRes: 0.0037, norm(attn): 0.0718, norm(output): 0.4062, norm(x): 0.4060, norm(y): 0.9991, norm:0.7514, tok/sec: 186730.67, flops:196.03, batch-reuse:1
@ 82 train 6.7506 , allloss: 6.7506, dt: 692.25ms, fracRes: 0.0037, norm(attn): 0.0674, norm(output): 0.4121, norm(x): 0.4158, norm(y): 0.9991, norm:0.5737, tok/sec: 189342.45, flops:198.77, batch-reuse:1
@ 83 train 6.7243 , allloss: 6.7243, dt: 699.05ms, fracRes: 0.0037, norm(attn): 0.0737, norm(output): 0.4121, norm(x): 0.4151, norm(y): 0.9991, norm:0.6484, tok/sec: 187501.47, flops:196.84, batch-reuse:1
@ 84 train 6.7565 , allloss: 6.7565, dt: 702.43ms, fracRes: 0.0038, norm(attn): 0.0786, norm(output): 0.4238, norm(x): 0.4228, norm(y): 0.9991, norm:0.4679, tok/sec: 186597.44, flops:195.89, batch-reuse:1
@ 85 train 6.6979 , allloss: 6.6979, dt: 700.01ms, fracRes: 0.0038, norm(attn): 0.0796, norm(output): 0.4160, norm(x): 0.4186, norm(y): 0.9990, norm:0.5412, tok/sec: 187242.77, flops:196.57, batch-reuse:1
@ 86 train 6.6497 , allloss: 6.6497, dt: 697.47ms, fracRes: 0.0040, norm(attn): 0.0820, norm(output): 0.4082, norm(x): 0.4122, norm(y): 0.9990, norm:0.5503, tok/sec: 187924.36, flops:197.28, batch-reuse:1
@ 87 train 6.7225 , allloss: 6.7225, dt: 711.10ms, fracRes: 0.0046, norm(attn): 0.0894, norm(output): 0.4160, norm(x): 0.4190, norm(y): 0.9989, norm:0.5386, tok/sec: 184322.85, flops:193.50, batch-reuse:1
@ 88 train 6.6884 , allloss: 6.6884, dt: 707.00ms, fracRes: 0.0038, norm(attn): 0.0928, norm(output): 0.4082, norm(x): 0.4097, norm(y): 0.9989, norm:0.6426, tok/sec: 185392.23, flops:194.63, batch-reuse:1
@ 89 train 6.6318 , allloss: 6.6318, dt: 703.62ms, fracRes: 0.0037, norm(attn): 0.0957, norm(output): 0.4141, norm(x): 0.4209, norm(y): 0.9989, norm:0.5849, tok/sec: 186283.07, flops:195.56, batch-reuse:1
@ 90 train 6.6643 , allloss: 6.6643, dt: 704.49ms, fracRes: 0.0039, norm(attn): 0.1045, norm(output): 0.4102, norm(x): 0.4116, norm(y): 0.9988, norm:0.7496, tok/sec: 186052.27, flops:195.32, batch-reuse:1
@ 91 train 6.6287 , allloss: 6.6287, dt: 699.09ms, fracRes: 0.0037, norm(attn): 0.1011, norm(output): 0.4238, norm(x): 0.4248, norm(y): 0.9988, norm:0.8248, tok/sec: 187490.22, flops:196.83, batch-reuse:1
@ 92 train 6.6023 , allloss: 6.6023, dt: 702.23ms, fracRes: 0.0037, norm(attn): 0.1055, norm(output): 0.4121, norm(x): 0.4174, norm(y): 0.9988, norm:0.4745, tok/sec: 186650.79, flops:195.95, batch-reuse:1
@ 93 train 6.5925 , allloss: 6.5925, dt: 693.93ms, fracRes: 0.0037, norm(attn): 0.1099, norm(output): 0.4141, norm(x): 0.4165, norm(y): 0.9987, norm:0.6085, tok/sec: 188884.41, flops:198.29, batch-reuse:1
@ 94 train 6.8793 , allloss: 6.8793, dt: 700.30ms, fracRes: 0.0038, norm(attn): 0.1162, norm(output): 0.4355, norm(x): 0.4371, norm(y): 0.9987, norm:0.8717, tok/sec: 187165.19, flops:196.49, batch-reuse:1
@ 95 train 6.6092 , allloss: 6.6092, dt: 699.30ms, fracRes: 0.0035, norm(attn): 0.1045, norm(output): 0.4316, norm(x): 0.4309, norm(y): 0.9986, norm:0.7050, tok/sec: 187432.81, flops:196.77, batch-reuse:1
@ 96 train 6.4959 , allloss: 6.4959, dt: 700.40ms, fracRes: 0.0034, norm(attn): 0.1191, norm(output): 0.4316, norm(x): 0.4322, norm(y): 0.9986, norm:0.6049, tok/sec: 187138.87, flops:196.46, batch-reuse:1
@ 97 train 6.5481 , allloss: 6.5481, dt: 691.77ms, fracRes: 0.0034, norm(attn): 0.1187, norm(output): 0.4375, norm(x): 0.4405, norm(y): 0.9986, norm:0.5833, tok/sec: 189474.60, flops:198.91, batch-reuse:1
@ 98 train 6.6317 , allloss: 6.6317, dt: 701.56ms, fracRes: 0.0034, norm(attn): 0.1050, norm(output): 0.4414, norm(x): 0.4440, norm(y): 0.9985, norm:0.7231, tok/sec: 186830.30, flops:196.13, batch-reuse:1
@ 99 train 6.5332 , allloss: 6.5332, dt: 699.52ms, fracRes: 0.0036, norm(attn): 0.0947, norm(output): 0.4570, norm(x): 0.4590, norm(y): 0.9985, norm:0.7978, tok/sec: 187374.81, flops:196.71, batch-reuse:1
@ 100 train 6.5532 , allloss: 6.5532, dt: 701.79ms, fracRes: 0.0037, norm(attn): 0.0874, norm(output): 0.4395, norm(x): 0.4453, norm(y): 0.9985, norm:0.6096, tok/sec: 186767.84, flops:196.07, batch-reuse:1
@ 101 train 6.3950 , allloss: 6.3950, dt: 701.50ms, fracRes: 0.0037, norm(attn): 0.0918, norm(output): 0.4434, norm(x): 0.4511, norm(y): 0.9984, norm:0.5103, tok/sec: 186846.36, flops:196.15, batch-reuse:1
@ 102 train 6.4891 , allloss: 6.4891, dt: 692.12ms, fracRes: 0.0037, norm(attn): 0.0972, norm(output): 0.4668, norm(x): 0.4641, norm(y): 0.9984, norm:0.6734, tok/sec: 189378.39, flops:198.81, batch-reuse:1
@ 103 train 6.4591 , allloss: 6.4591, dt: 701.30ms, fracRes: 0.0037, norm(attn): 0.1016, norm(output): 0.4473, norm(x): 0.4544, norm(y): 0.9983, norm:0.4299, tok/sec: 186897.50, flops:196.21, batch-reuse:1
@ 104 train 6.5615 , allloss: 6.5615, dt: 701.51ms, fracRes: 0.0038, norm(attn): 0.0996, norm(output): 0.4570, norm(x): 0.4556, norm(y): 0.9983, norm:0.5632, tok/sec: 186842.68, flops:196.15, batch-reuse:1
@ 105 train 6.5418 , allloss: 6.5418, dt: 703.40ms, fracRes: 0.0038, norm(attn): 0.1016, norm(output): 0.4707, norm(x): 0.4714, norm(y): 0.9982, norm:0.4374, tok/sec: 186339.65, flops:195.62, batch-reuse:1
@ 106 train 6.4256 , allloss: 6.4256, dt: 705.56ms, fracRes: 0.0037, norm(attn): 0.1011, norm(output): 0.4688, norm(x): 0.4699, norm(y): 0.9982, norm:0.5127, tok/sec: 185770.05, flops:195.02, batch-reuse:1
@ 107 train 6.4464 , allloss: 6.4464, dt: 695.90ms, fracRes: 0.0035, norm(attn): 0.1016, norm(output): 0.4629, norm(x): 0.4625, norm(y): 0.9981, norm:0.4087, tok/sec: 188347.88, flops:197.73, batch-reuse:1
@ 108 train 6.4287 , allloss: 6.4287, dt: 686.15ms, fracRes: 0.0038, norm(attn): 0.1157, norm(output): 0.4707, norm(x): 0.4741, norm(y): 0.9981, norm:0.4919, tok/sec: 191024.27, flops:200.54, batch-reuse:1
@ 109 train 6.4140 , allloss: 6.4140, dt: 692.48ms, fracRes: 0.0036, norm(attn): 0.1074, norm(output): 0.4727, norm(x): 0.4792, norm(y): 0.9981, norm:0.4480, tok/sec: 189280.13, flops:198.71, batch-reuse:1
@ 110 train 6.4168 , allloss: 6.4168, dt: 699.04ms, fracRes: 0.0036, norm(attn): 0.1021, norm(output): 0.4707, norm(x): 0.4761, norm(y): 0.9980, norm:0.3980, tok/sec: 187503.97, flops:196.84, batch-reuse:1
@ 111 train 6.4348 , allloss: 6.4348, dt: 698.50ms, fracRes: 0.0036, norm(attn): 0.0996, norm(output): 0.4668, norm(x): 0.4680, norm(y): 0.9980, norm:0.4690, tok/sec: 187647.45, flops:196.99, batch-reuse:1
@ 112 train 6.4449 , allloss: 6.4449, dt: 707.22ms, fracRes: 0.0036, norm(attn): 0.1040, norm(output): 0.4727, norm(x): 0.4772, norm(y): 0.9980, norm:0.3593, tok/sec: 185333.11, flops:194.56, batch-reuse:1
@ 113 train 6.4125 , allloss: 6.4125, dt: 703.86ms, fracRes: 0.0035, norm(attn): 0.1025, norm(output): 0.4707, norm(x): 0.4742, norm(y): 0.9979, norm:0.4478, tok/sec: 186217.83, flops:195.49, batch-reuse:1
@ 114 train 6.4126 , allloss: 6.4126, dt: 694.53ms, fracRes: 0.0035, norm(attn): 0.1084, norm(output): 0.4746, norm(x): 0.4795, norm(y): 0.9979, norm:0.4168, tok/sec: 188720.95, flops:198.12, batch-reuse:1
@ 115 train 6.3396 , allloss: 6.3396, dt: 703.11ms, fracRes: 0.0035, norm(attn): 0.1084, norm(output): 0.4707, norm(x): 0.4738, norm(y): 0.9979, norm:0.4339, tok/sec: 186417.87, flops:195.70, batch-reuse:1
@ 116 train 6.3238 , allloss: 6.3238, dt: 693.21ms, fracRes: 0.0036, norm(attn): 0.1060, norm(output): 0.4727, norm(x): 0.4777, norm(y): 0.9978, norm:0.3694, tok/sec: 189080.14, flops:198.50, batch-reuse:1
@ 117 train 6.3490 , allloss: 6.3490, dt: 674.55ms, fracRes: 0.0036, norm(attn): 0.1045, norm(output): 0.4746, norm(x): 0.4791, norm(y): 0.9978, norm:0.3514, tok/sec: 194309.51, flops:203.99, batch-reuse:1
@ 118 train 6.3559 , allloss: 6.3559, dt: 692.87ms, fracRes: 0.0036, norm(attn): 0.1069, norm(output): 0.4746, norm(x): 0.4792, norm(y): 0.9978, norm:0.3307, tok/sec: 189171.56, flops:198.59, batch-reuse:1
@ 119 train 6.3015 , allloss: 6.3015, dt: 694.33ms, fracRes: 0.0036, norm(attn): 0.1099, norm(output): 0.4727, norm(x): 0.4756, norm(y): 0.9977, norm:0.4102, tok/sec: 188775.51, flops:198.18, batch-reuse:1
@ 120 train 6.4520 , allloss: 6.4520, dt: 705.82ms, fracRes: 0.0038, norm(attn): 0.1035, norm(output): 0.4727, norm(x): 0.4770, norm(y): 0.9977, norm:0.3737, tok/sec: 185702.03, flops:194.95, batch-reuse:1
@ 121 train 6.5153 , allloss: 6.5153, dt: 706.08ms, fracRes: 0.0038, norm(attn): 0.1143, norm(output): 0.4824, norm(x): 0.4856, norm(y): 0.9976, norm:0.4972, tok/sec: 185633.18, flops:194.88, batch-reuse:1
@ 122 train 6.4899 , allloss: 6.4899, dt: 705.56ms, fracRes: 0.0037, norm(attn): 0.1035, norm(output): 0.4688, norm(x): 0.4753, norm(y): 0.9976, norm:0.4633, tok/sec: 185768.86, flops:195.02, batch-reuse:1
@ 123 train 6.3552 , allloss: 6.3552, dt: 701.67ms, fracRes: 0.0035, norm(attn): 0.1064, norm(output): 0.4688, norm(x): 0.4738, norm(y): 0.9976, norm:0.3608, tok/sec: 186800.40, flops:196.10, batch-reuse:1
@ 124 train 6.3889 , allloss: 6.3889, dt: 689.38ms, fracRes: 0.0035, norm(attn): 0.1064, norm(output): 0.4727, norm(x): 0.4783, norm(y): 0.9975, norm:0.3627, tok/sec: 190130.74, flops:199.60, batch-reuse:1
@ 125 train 6.4120 , allloss: 6.4120, dt: 698.03ms, fracRes: 0.0035, norm(attn): 0.1035, norm(output): 0.4688, norm(x): 0.4737, norm(y): 0.9975, norm:0.3842, tok/sec: 187775.13, flops:197.13, batch-reuse:1
@ 126 train 6.4178 , allloss: 6.4178, dt: 692.38ms, fracRes: 0.0035, norm(attn): 0.1074, norm(output): 0.4766, norm(x): 0.4812, norm(y): 0.9975, norm:0.4064, tok/sec: 189306.20, flops:198.73, batch-reuse:1
@ 127 train 6.3301 , allloss: 6.3301, dt: 706.55ms, fracRes: 0.0035, norm(attn): 0.1060, norm(output): 0.4727, norm(x): 0.4794, norm(y): 0.9974, norm:0.5389, tok/sec: 185510.09, flops:194.75, batch-reuse:1
@ 128 train 6.3028 , allloss: 6.3028, dt: 684.20ms, fracRes: 0.0037, norm(attn): 0.1113, norm(output): 0.4707, norm(x): 0.4770, norm(y): 0.9974, norm:0.4813, tok/sec: 191569.30, flops:201.11, batch-reuse:1
@ 129 train 6.4379 , allloss: 6.4379, dt: 697.42ms, fracRes: 0.0040, norm(attn): 0.1191, norm(output): 0.4785, norm(x): 0.4804, norm(y): 0.9974, norm:0.5091, tok/sec: 187938.43, flops:197.30, batch-reuse:1
@ 130 train 6.4315 , allloss: 6.4315, dt: 689.49ms, fracRes: 0.0038, norm(attn): 0.1187, norm(output): 0.4727, norm(x): 0.4786, norm(y): 0.9974, norm:0.6005, tok/sec: 190098.92, flops:199.57, batch-reuse:1
@ 131 train 6.4204 , allloss: 6.4204, dt: 701.82ms, fracRes: 0.0039, norm(attn): 0.1226, norm(output): 0.4844, norm(x): 0.4871, norm(y): 0.9973, norm:0.4209, tok/sec: 186759.02, flops:196.06, batch-reuse:1
@ 132 train 6.4753 , allloss: 6.4753, dt: 699.46ms, fracRes: 0.0039, norm(attn): 0.1250, norm(output): 0.4844, norm(x): 0.4849, norm(y): 0.9973, norm:0.6358, tok/sec: 187390.78, flops:196.72, batch-reuse:1
@ 133 train 6.3644 , allloss: 6.3644, dt: 705.10ms, fracRes: 0.0040, norm(attn): 0.1191, norm(output): 0.4902, norm(x): 0.4898, norm(y): 0.9973, norm:0.4949, tok/sec: 185890.09, flops:195.15, batch-reuse:1
@ 134 train 6.4477 , allloss: 6.4477, dt: 700.00ms, fracRes: 0.0040, norm(attn): 0.1245, norm(output): 0.4961, norm(x): 0.5006, norm(y): 0.9973, norm:0.6139, tok/sec: 187246.85, flops:196.57, batch-reuse:1
@ 135 train 6.3073 , allloss: 6.3073, dt: 709.10ms, fracRes: 0.0038, norm(attn): 0.1143, norm(output): 0.4980, norm(x): 0.4986, norm(y): 0.9972, norm:0.4931, tok/sec: 184842.76, flops:194.05, batch-reuse:1
@ 136 train 6.3449 , allloss: 6.3449, dt: 700.91ms, fracRes: 0.0037, norm(attn): 0.1143, norm(output): 0.5078, norm(x): 0.5083, norm(y): 0.9972, norm:0.4202, tok/sec: 187001.89, flops:196.31, batch-reuse:1
@ 137 train 6.2378 , allloss: 6.2378, dt: 711.90ms, fracRes: 0.0037, norm(attn): 0.1216, norm(output): 0.5039, norm(x): 0.5062, norm(y): 0.9972, norm:1.4563, tok/sec: 184114.70, flops:193.28, batch-reuse:1
@ 138 train 6.2618 , allloss: 6.2618, dt: 703.36ms, fracRes: 0.0037, norm(attn): 0.1279, norm(output): 0.5039, norm(x): 0.5097, norm(y): 0.9973, norm:0.4669, tok/sec: 186352.34, flops:195.63, batch-reuse:1
@ 139 train 6.2573 , allloss: 6.2573, dt: 692.15ms, fracRes: 0.0037, norm(attn): 0.1289, norm(output): 0.5039, norm(x): 0.5109, norm(y): 0.9973, norm:0.7667, tok/sec: 189369.00, flops:198.80, batch-reuse:1
@ 140 train 6.3008 , allloss: 6.3008, dt: 689.75ms, fracRes: 0.0037, norm(attn): 0.1328, norm(output): 0.5469, norm(x): 0.5501, norm(y): 0.9973, norm:1.1814, tok/sec: 190027.82, flops:199.49, batch-reuse:1
@ 141 train 6.2588 , allloss: 6.2588, dt: 701.49ms, fracRes: 0.0038, norm(attn): 0.1250, norm(output): 0.5469, norm(x): 0.5425, norm(y): 0.9973, norm:2.3379, tok/sec: 186846.94, flops:196.15, batch-reuse:1
@ 142 train 6.3757 , allloss: 6.3757, dt: 702.04ms, fracRes: 0.0033, norm(attn): 0.1689, norm(output): 0.5820, norm(x): 0.5844, norm(y): 0.9975, norm:0.7193, tok/sec: 186702.19, flops:196.00, batch-reuse:1
@ 143 train 6.3357 , allloss: 6.3357, dt: 691.18ms, fracRes: 0.0031, norm(attn): 0.2217, norm(output): 0.6328, norm(x): 0.6385, norm(y): 0.9976, norm:0.7194, tok/sec: 189634.99, flops:199.08, batch-reuse:1
@ 144 train 6.2965 , allloss: 6.2965, dt: 698.81ms, fracRes: 0.0030, norm(attn): 0.1992, norm(output): 0.6250, norm(x): 0.6292, norm(y): 0.9977, norm:0.6291, tok/sec: 187564.36, flops:196.91, batch-reuse:1
@ 145 train 6.2783 , allloss: 6.2783, dt: 700.00ms, fracRes: 0.0031, norm(attn): 0.1934, norm(output): 0.6562, norm(x): 0.6591, norm(y): 0.9978, norm:0.5046, tok/sec: 187246.91, flops:196.57, batch-reuse:1
@ 146 train 6.4652 , allloss: 6.4652, dt: 699.68ms, fracRes: 0.0031, norm(attn): 0.2080, norm(output): 0.6875, norm(x): 0.6903, norm(y): 0.9978, norm:0.8112, tok/sec: 187330.05, flops:196.66, batch-reuse:1
@ 147 train 6.5884 , allloss: 6.5884, dt: 701.58ms, fracRes: 0.0036, norm(attn): 0.1602, norm(output): 0.7070, norm(x): 0.7134, norm(y): 0.9981, norm:4.3237, tok/sec: 186825.22, flops:196.13, batch-reuse:1
@ 148 train 6.5135 , allloss: 6.5135, dt: 696.71ms, fracRes: 0.0033, norm(attn): 0.1816, norm(output): 0.7422, norm(x): 0.7374, norm(y): 0.9978, norm:2.0804, tok/sec: 188130.60, flops:197.50, batch-reuse:1
@ 149 train 6.2550 , allloss: 6.2550, dt: 694.51ms, fracRes: 0.0034, norm(attn): 0.2129, norm(output): 0.7500, norm(x): 0.7547, norm(y): 0.9979, norm:0.6893, tok/sec: 188725.29, flops:198.12, batch-reuse:1
@ 150 train 6.4518 , allloss: 6.4518, dt: 703.13ms, fracRes: 0.0039, norm(attn): 0.2354, norm(output): 0.7930, norm(x): 0.7916, norm(y): 0.9981, norm:0.7122, tok/sec: 186410.98, flops:195.69, batch-reuse:1
@ 151 train 6.2569 , allloss: 6.2569, dt: 705.66ms, fracRes: 0.0040, norm(attn): 0.2344, norm(output): 0.9141, norm(x): 0.9069, norm(y): 0.9983, norm:1.2656, tok/sec: 185744.69, flops:195.00, batch-reuse:1
@ 152 train 7.1475 , allloss: 7.1475, dt: 691.33ms, fracRes: 0.0045, norm(attn): 0.2148, norm(output): 0.9219, norm(x): 0.9127, norm(y): 0.9983, norm:4.4309, tok/sec: 189595.23, flops:199.04, batch-reuse:1
@ 153 train 6.2879 , allloss: 6.2879, dt: 697.39ms, fracRes: 0.0052, norm(attn): 0.1934, norm(output): 0.9062, norm(x): 0.9121, norm(y): 0.9984, norm:1.1907, tok/sec: 187946.66, flops:197.31, batch-reuse:1
@ 154 train 6.5135 , allloss: 6.5135, dt: 698.23ms, fracRes: 0.0053, norm(attn): 0.2188, norm(output): 0.9766, norm(x): 0.9689, norm(y): 0.9985, norm:1.8908, tok/sec: 187720.69, flops:197.07, batch-reuse:1
@ 155 train 6.6093 , allloss: 6.6093, dt: 683.92ms, fracRes: 0.0060, norm(attn): 0.2061, norm(output): 0.9844, norm(x): 0.9800, norm(y): 0.9985, norm:1.4546, tok/sec: 191647.37, flops:201.19, batch-reuse:1
@ 156 train 6.3199 , allloss: 6.3199, dt: 691.29ms, fracRes: 0.0074, norm(attn): 0.1934, norm(output): 0.9844, norm(x): 0.9750, norm(y): 0.9985, norm:0.6739, tok/sec: 189605.95, flops:199.05, batch-reuse:1
@ 157 train 6.4281 , allloss: 6.4281, dt: 701.33ms, fracRes: 0.0106, norm(attn): 0.2031, norm(output): 1.0078, norm(x): 1.0152, norm(y): 0.9986, norm:0.7094, tok/sec: 186891.53, flops:196.20, batch-reuse:1
@ 158 train 6.3649 , allloss: 6.3649, dt: 703.32ms, fracRes: 0.0108, norm(attn): 0.2168, norm(output): 1.1016, norm(x): 1.1011, norm(y): 0.9986, norm:0.7050, tok/sec: 186361.44, flops:195.64, batch-reuse:1
@ 159 train 6.3987 , allloss: 6.3987, dt: 705.48ms, fracRes: 0.0108, norm(attn): 0.2285, norm(output): 1.1172, norm(x): 1.1188, norm(y): 0.9986, norm:0.6478, tok/sec: 185790.02, flops:195.04, batch-reuse:1
@ 160 train 6.2697 , allloss: 6.2697, dt: 703.38ms, fracRes: 0.0123, norm(attn): 0.2373, norm(output): 1.0781, norm(x): 1.0821, norm(y): 0.9987, norm:0.5521, tok/sec: 186344.64, flops:195.62, batch-reuse:1
@ 161 train 6.2966 , allloss: 6.2966, dt: 702.49ms, fracRes: 0.0086, norm(attn): 0.2471, norm(output): 1.0703, norm(x): 1.0739, norm(y): 0.9986, norm:2.5354, tok/sec: 186580.85, flops:195.87, batch-reuse:1
@ 162 train 6.4541 , allloss: 6.4541, dt: 700.42ms, fracRes: 0.0062, norm(attn): 0.2793, norm(output): 1.1406, norm(x): 1.1493, norm(y): 0.9988, norm:0.9585, tok/sec: 187133.71, flops:196.45, batch-reuse:1
@ 163 train 6.3170 , allloss: 6.3170, dt: 706.01ms, fracRes: 0.0049, norm(attn): 0.3125, norm(output): 1.1719, norm(x): 1.1716, norm(y): 0.9988, norm:0.6265, tok/sec: 185652.36, flops:194.90, batch-reuse:1
@ 164 train 6.2035 , allloss: 6.2035, dt: 713.46ms, fracRes: 0.0046, norm(attn): 0.3438, norm(output): 1.2422, norm(x): 1.2309, norm(y): 0.9989, norm:0.5458, tok/sec: 183713.92, flops:192.86, batch-reuse:1
@ 165 train 6.3414 , allloss: 6.3414, dt: 703.86ms, fracRes: 0.0043, norm(attn): 0.3711, norm(output): 1.2656, norm(x): 1.2755, norm(y): 0.9989, norm:0.9589, tok/sec: 186218.90, flops:195.49, batch-reuse:1
@ 166 train 6.2998 , allloss: 6.2998, dt: 701.99ms, fracRes: 0.0041, norm(attn): 0.3594, norm(output): 1.2812, norm(x): 1.2954, norm(y): 0.9989, norm:0.5931, tok/sec: 186715.26, flops:196.01, batch-reuse:1
@ 167 train 6.3286 , allloss: 6.3286, dt: 692.74ms, fracRes: 0.0039, norm(attn): 0.3652, norm(output): 1.3125, norm(x): 1.2988, norm(y): 0.9989, norm:0.4375, tok/sec: 189207.95, flops:198.63, batch-reuse:1
@ 168 train 6.2035 , allloss: 6.2035, dt: 706.93ms, fracRes: 0.0038, norm(attn): 0.3750, norm(output): 1.2969, norm(x): 1.2957, norm(y): 0.9989, norm:0.5405, tok/sec: 185409.17, flops:194.64, batch-reuse:1
@ 169 train 6.2444 , allloss: 6.2444, dt: 710.10ms, fracRes: 0.0041, norm(attn): 0.3652, norm(output): 1.2734, norm(x): 1.2863, norm(y): 0.9989, norm:0.4852, tok/sec: 184582.41, flops:193.77, batch-reuse:1
@ 170 train 6.2142 , allloss: 6.2142, dt: 710.53ms, fracRes: 0.0040, norm(attn): 0.3438, norm(output): 1.2656, norm(x): 1.2808, norm(y): 0.9989, norm:0.4078, tok/sec: 184470.55, flops:193.66, batch-reuse:1
@ 171 train 6.2029 , allloss: 6.2029, dt: 706.21ms, fracRes: 0.0046, norm(attn): 0.3398, norm(output): 1.2656, norm(x): 1.2769, norm(y): 0.9990, norm:0.4388, tok/sec: 185598.96, flops:194.84, batch-reuse:1
@ 172 train 6.2445 , allloss: 6.2445, dt: 711.06ms, fracRes: 0.0042, norm(attn): 0.3398, norm(output): 1.2578, norm(x): 1.2720, norm(y): 0.9990, norm:0.5022, tok/sec: 184333.61, flops:193.51, batch-reuse:1
@ 173 train 6.2079 , allloss: 6.2079, dt: 706.95ms, fracRes: 0.0045, norm(attn): 0.3379, norm(output): 1.2578, norm(x): 1.2559, norm(y): 0.9990, norm:0.3097, tok/sec: 185405.92, flops:194.64, batch-reuse:1
@ 174 train 6.3643 , allloss: 6.3643, dt: 708.11ms, fracRes: 0.0050, norm(attn): 0.3379, norm(output): 1.2500, norm(x): 1.2507, norm(y): 0.9990, norm:0.3853, tok/sec: 185100.04, flops:194.32, batch-reuse:1
@ 175 train 6.2209 , allloss: 6.2209, dt: 698.86ms, fracRes: 0.0057, norm(attn): 0.3477, norm(output): 1.2422, norm(x): 1.2333, norm(y): 0.9990, norm:1.3093, tok/sec: 187551.43, flops:196.89, batch-reuse:1
@ 176 train 6.3022 , allloss: 6.3022, dt: 691.62ms, fracRes: 0.0088, norm(attn): 0.3555, norm(output): 1.2344, norm(x): 1.2269, norm(y): 0.9990, norm:0.5893, tok/sec: 189515.29, flops:198.95, batch-reuse:1
@ 177 train 6.2398 , allloss: 6.2398, dt: 711.10ms, fracRes: 0.0076, norm(attn): 0.3535, norm(output): 1.2031, norm(x): 1.2012, norm(y): 0.9990, norm:0.4609, tok/sec: 184323.16, flops:193.50, batch-reuse:1
@ 178 train 6.2976 , allloss: 6.2976, dt: 711.72ms, fracRes: 0.0059, norm(attn): 0.3438, norm(output): 1.2031, norm(x): 1.1996, norm(y): 0.9990, norm:0.5150, tok/sec: 184162.68, flops:193.33, batch-reuse:1
@ 179 train 6.1489 , allloss: 6.1489, dt: 707.65ms, fracRes: 0.0049, norm(attn): 0.3418, norm(output): 1.2188, norm(x): 1.2109, norm(y): 0.9989, norm:0.3471, tok/sec: 185221.09, flops:194.45, batch-reuse:1
@ 180 train 6.2839 , allloss: 6.2839, dt: 693.29ms, fracRes: 0.0049, norm(attn): 0.3457, norm(output): 1.2344, norm(x): 1.2226, norm(y): 0.9989, norm:0.5576, tok/sec: 189058.23, flops:198.47, batch-reuse:1
@ 181 train 6.1578 , allloss: 6.1578, dt: 703.05ms, fracRes: 0.0047, norm(attn): 0.3477, norm(output): 1.1719, norm(x): 1.1953, norm(y): 0.9989, norm:0.4031, tok/sec: 186433.87, flops:195.72, batch-reuse:1
@ 182 train 6.2651 , allloss: 6.2651, dt: 704.40ms, fracRes: 0.0045, norm(attn): 0.3457, norm(output): 1.1719, norm(x): 1.1774, norm(y): 0.9989, norm:0.3645, tok/sec: 186075.19, flops:195.34, batch-reuse:1
@ 183 train 6.2068 , allloss: 6.2068, dt: 690.48ms, fracRes: 0.0044, norm(attn): 0.3457, norm(output): 1.1875, norm(x): 1.1866, norm(y): 0.9989, norm:0.3374, tok/sec: 189827.43, flops:199.28, batch-reuse:1
@ 184 train 6.0964 , allloss: 6.0964, dt: 714.05ms, fracRes: 0.0042, norm(attn): 0.3496, norm(output): 1.1875, norm(x): 1.1935, norm(y): 0.9989, norm:0.2976, tok/sec: 183562.46, flops:192.70, batch-reuse:1
@ 185 train 6.1350 , allloss: 6.1350, dt: 720.88ms, fracRes: 0.0047, norm(attn): 0.3594, norm(output): 1.1797, norm(x): 1.1846, norm(y): 0.9990, norm:0.3390, tok/sec: 181822.45, flops:190.88, batch-reuse:1
@ 186 train 6.2875 , allloss: 6.2875, dt: 718.92ms, fracRes: 0.0061, norm(attn): 0.3613, norm(output): 1.1719, norm(x): 1.1726, norm(y): 0.9989, norm:0.3470, tok/sec: 182317.26, flops:191.40, batch-reuse:1
@ 187 train 6.4308 , allloss: 6.4308, dt: 716.84ms, fracRes: 0.0064, norm(attn): 0.3535, norm(output): 1.1641, norm(x): 1.1659, norm(y): 0.9989, norm:0.4560, tok/sec: 182847.11, flops:191.95, batch-reuse:1
@ 188 train 6.2703 , allloss: 6.2703, dt: 694.68ms, fracRes: 0.0058, norm(attn): 0.3613, norm(output): 1.1562, norm(x): 1.1574, norm(y): 0.9989, norm:0.2926, tok/sec: 188680.53, flops:198.08, batch-reuse:1
@ 189 train 6.3861 , allloss: 6.3861, dt: 697.15ms, fracRes: 0.0047, norm(attn): 0.3633, norm(output): 1.1641, norm(x): 1.1634, norm(y): 0.9988, norm:0.4225, tok/sec: 188012.28, flops:197.38, batch-reuse:1
@ 190 train 6.3273 , allloss: 6.3273, dt: 701.85ms, fracRes: 0.0044, norm(attn): 0.3516, norm(output): 1.1484, norm(x): 1.1501, norm(y): 0.9988, norm:0.2816, tok/sec: 186753.38, flops:196.05, batch-reuse:1
@ 191 train 6.3116 , allloss: 6.3116, dt: 701.06ms, fracRes: 0.0038, norm(attn): 0.3535, norm(output): 1.1250, norm(x): 1.1279, norm(y): 0.9987, norm:0.3487, tok/sec: 186961.88, flops:196.27, batch-reuse:1
@ 192 train 6.3715 , allloss: 6.3715, dt: 719.89ms, fracRes: 0.0037, norm(attn): 0.3535, norm(output): 1.1328, norm(x): 1.1312, norm(y): 0.9987, norm:0.3532, tok/sec: 182071.75, flops:191.14, batch-reuse:1
@ 193 train 6.2461 , allloss: 6.2461, dt: 701.31ms, fracRes: 0.0037, norm(attn): 0.3516, norm(output): 1.1172, norm(x): 1.1200, norm(y): 0.9987, norm:0.3613, tok/sec: 186895.59, flops:196.20, batch-reuse:1
@ 194 train 6.3824 , allloss: 6.3824, dt: 709.64ms, fracRes: 0.0034, norm(attn): 0.3516, norm(output): 1.1250, norm(x): 1.1353, norm(y): 0.9987, norm:0.3616, tok/sec: 184702.59, flops:193.90, batch-reuse:1
@ 195 train 6.3348 , allloss: 6.3348, dt: 702.35ms, fracRes: 0.0036, norm(attn): 0.3516, norm(output): 1.1250, norm(x): 1.1165, norm(y): 0.9987, norm:0.2659, tok/sec: 186618.22, flops:195.91, batch-reuse:1
@ 196 train 6.2320 , allloss: 6.2320, dt: 716.63ms, fracRes: 0.0034, norm(attn): 0.3516, norm(output): 1.1016, norm(x): 1.1036, norm(y): 0.9987, norm:0.3264, tok/sec: 182900.46, flops:192.01, batch-reuse:1
@ 197 train 6.2417 , allloss: 6.2417, dt: 714.45ms, fracRes: 0.0038, norm(attn): 0.3516, norm(output): 1.1094, norm(x): 1.1059, norm(y): 0.9987, norm:0.3136, tok/sec: 183459.68, flops:192.60, batch-reuse:1
@ 198 train 6.2254 , allloss: 6.2254, dt: 716.18ms, fracRes: 0.0079, norm(attn): 0.3496, norm(output): 1.1094, norm(x): 1.1059, norm(y): 0.9987, norm:0.3430, tok/sec: 183014.26, flops:192.13, batch-reuse:1
@ 199 train 6.3290 , allloss: 6.3290, dt: 715.82ms, fracRes: 0.0044, norm(attn): 0.3535, norm(output): 1.0938, norm(x): 1.0932, norm(y): 0.9987, norm:0.3712, tok/sec: 183107.22, flops:192.23, batch-reuse:1
@ 200 train 6.3402 , allloss: 6.3402, dt: 706.39ms, fracRes: 0.0038, norm(attn): 0.3496, norm(output): 1.1016, norm(x): 1.0900, norm(y): 0.9986, norm:0.3062, tok/sec: 185551.35, flops:194.79, batch-reuse:1
@ 201 train 6.2427 , allloss: 6.2427, dt: 707.84ms, fracRes: 0.0039, norm(attn): 0.3516, norm(output): 1.0859, norm(x): 1.0935, norm(y): 0.9986, norm:0.3378, tok/sec: 185171.92, flops:194.39, batch-reuse:1
@ 202 train 6.3331 , allloss: 6.3331, dt: 709.61ms, fracRes: 0.0034, norm(attn): 0.3516, norm(output): 1.0625, norm(x): 1.0720, norm(y): 0.9986, norm:0.3035, tok/sec: 184710.29, flops:193.91, batch-reuse:1
@ 203 train 6.3054 , allloss: 6.3054, dt: 707.71ms, fracRes: 0.0034, norm(attn): 0.3535, norm(output): 1.0547, norm(x): 1.0564, norm(y): 0.9986, norm:0.4278, tok/sec: 185206.86, flops:194.43, batch-reuse:1
@ 204 train 6.2937 , allloss: 6.2937, dt: 691.28ms, fracRes: 0.0035, norm(attn): 0.3516, norm(output): 1.0625, norm(x): 1.0660, norm(y): 0.9985, norm:0.4133, tok/sec: 189606.34, flops:199.05, batch-reuse:1
@ 205 train 6.2738 , allloss: 6.2738, dt: 693.42ms, fracRes: 0.0034, norm(attn): 0.3496, norm(output): 1.0547, norm(x): 1.0570, norm(y): 0.9986, norm:0.3649, tok/sec: 189022.02, flops:198.44, batch-reuse:1
@ 206 train 6.2959 , allloss: 6.2959, dt: 689.78ms, fracRes: 0.0034, norm(attn): 0.3457, norm(output): 1.0625, norm(x): 1.0583, norm(y): 0.9986, norm:0.3049, tok/sec: 190021.32, flops:199.48, batch-reuse:1
@ 207 train 6.2068 , allloss: 6.2068, dt: 695.20ms, fracRes: 0.0035, norm(attn): 0.3555, norm(output): 1.0547, norm(x): 1.0495, norm(y): 0.9986, norm:0.3860, tok/sec: 188538.62, flops:197.93, batch-reuse:1
@ 208 train 6.2550 , allloss: 6.2550, dt: 695.31ms, fracRes: 0.0037, norm(attn): 0.3711, norm(output): 1.0547, norm(x): 1.0485, norm(y): 0.9986, norm:0.3828, tok/sec: 188507.85, flops:197.90, batch-reuse:1
@ 209 train 6.3214 , allloss: 6.3214, dt: 699.69ms, fracRes: 0.0043, norm(attn): 0.3711, norm(output): 1.0547, norm(x): 1.0508, norm(y): 0.9985, norm:0.4181, tok/sec: 187327.69, flops:196.66, batch-reuse:1
@ 210 train 6.2886 , allloss: 6.2886, dt: 698.36ms, fracRes: 0.0037, norm(attn): 0.3730, norm(output): 1.0625, norm(x): 1.0577, norm(y): 0.9985, norm:0.3579, tok/sec: 187686.02, flops:197.03, batch-reuse:1
@ 211 train 6.1918 , allloss: 6.1918, dt: 713.49ms, fracRes: 0.0035, norm(attn): 0.3730, norm(output): 1.0156, norm(x): 1.0347, norm(y): 0.9985, norm:0.3266, tok/sec: 183705.26, flops:192.85, batch-reuse:1
@ 212 train 6.2564 , allloss: 6.2564, dt: 703.17ms, fracRes: 0.0035, norm(attn): 0.3711, norm(output): 1.0078, norm(x): 1.0232, norm(y): 0.9985, norm:0.3726, tok/sec: 186400.62, flops:195.68, batch-reuse:1
@ 213 train 6.1963 , allloss: 6.1963, dt: 698.16ms, fracRes: 0.0034, norm(attn): 0.3672, norm(output): 1.0078, norm(x): 1.0230, norm(y): 0.9985, norm:0.3082, tok/sec: 187738.90, flops:197.09, batch-reuse:1
@ 214 train 6.2243 , allloss: 6.2243, dt: 700.59ms, fracRes: 0.0034, norm(attn): 0.3594, norm(output): 1.0078, norm(x): 1.0250, norm(y): 0.9985, norm:0.3767, tok/sec: 187088.44, flops:196.41, batch-reuse:1
@ 215 train 6.1254 , allloss: 6.1254, dt: 697.16ms, fracRes: 0.0034, norm(attn): 0.3613, norm(output): 1.0000, norm(x): 1.0086, norm(y): 0.9985, norm:0.3715, tok/sec: 188009.20, flops:197.37, batch-reuse:1
@ 216 train 6.1271 , allloss: 6.1271, dt: 693.02ms, fracRes: 0.0035, norm(attn): 0.3574, norm(output): 1.0078, norm(x): 1.0161, norm(y): 0.9984, norm:0.3343, tok/sec: 189131.01, flops:198.55, batch-reuse:1
@ 217 train 6.2202 , allloss: 6.2202, dt: 691.31ms, fracRes: 0.0035, norm(attn): 0.3516, norm(output): 1.0078, norm(x): 1.0223, norm(y): 0.9984, norm:0.4080, tok/sec: 189600.72, flops:199.04, batch-reuse:1
@ 218 train 6.1211 , allloss: 6.1211, dt: 692.76ms, fracRes: 0.0039, norm(attn): 0.3594, norm(output): 1.0000, norm(x): 1.0028, norm(y): 0.9984, norm:0.3546, tok/sec: 189202.55, flops:198.63, batch-reuse:1
@ 219 train 6.3360 , allloss: 6.3360, dt: 696.02ms, fracRes: 0.0038, norm(attn): 0.3555, norm(output): 0.9961, norm(x): 0.9968, norm(y): 0.9984, norm:0.3431, tok/sec: 188316.39, flops:197.69, batch-reuse:1
@ 220 train 6.2568 , allloss: 6.2568, dt: 693.31ms, fracRes: 0.0038, norm(attn): 0.3477, norm(output): 1.0000, norm(x): 1.0087, norm(y): 0.9984, norm:0.3487, tok/sec: 189052.38, flops:198.47, batch-reuse:1
@ 221 train 6.1542 , allloss: 6.1542, dt: 688.93ms, fracRes: 0.0037, norm(attn): 0.3555, norm(output): 1.0000, norm(x): 1.0042, norm(y): 0.9984, norm:0.4985, tok/sec: 190253.98, flops:199.73, batch-reuse:1
@ 222 train 6.1817 , allloss: 6.1817, dt: 699.79ms, fracRes: 0.0033, norm(attn): 0.3516, norm(output): 0.9961, norm(x): 0.9921, norm(y): 0.9984, norm:0.3527, tok/sec: 187302.61, flops:196.63, batch-reuse:1
@ 223 train 6.2125 , allloss: 6.2125, dt: 695.46ms, fracRes: 0.0035, norm(attn): 0.3516, norm(output): 0.9922, norm(x): 0.9864, norm(y): 0.9984, norm:0.3362, tok/sec: 188469.40, flops:197.86, batch-reuse:1
@ 224 train 6.1315 , allloss: 6.1315, dt: 703.20ms, fracRes: 0.0037, norm(attn): 0.3535, norm(output): 0.9844, norm(x): 0.9793, norm(y): 0.9984, norm:0.3251, tok/sec: 186394.49, flops:195.68, batch-reuse:1
@ 225 train 6.2052 , allloss: 6.2052, dt: 699.45ms, fracRes: 0.0032, norm(attn): 0.3535, norm(output): 0.9609, norm(x): 0.9720, norm(y): 0.9984, norm:0.3648, tok/sec: 187392.05, flops:196.72, batch-reuse:1
@ 226 train 6.2347 , allloss: 6.2347, dt: 699.43ms, fracRes: 0.0032, norm(attn): 0.3555, norm(output): 0.9609, norm(x): 0.9680, norm(y): 0.9983, norm:0.3561, tok/sec: 187398.25, flops:196.73, batch-reuse:1
@ 227 train 6.2146 , allloss: 6.2146, dt: 702.68ms, fracRes: 0.0032, norm(attn): 0.3496, norm(output): 0.9766, norm(x): 0.9704, norm(y): 0.9983, norm:0.3515, tok/sec: 186531.16, flops:195.82, batch-reuse:1
@ 228 train 6.2043 , allloss: 6.2043, dt: 704.79ms, fracRes: 0.0033, norm(attn): 0.3477, norm(output): 0.9688, norm(x): 0.9679, norm(y): 0.9983, norm:0.2820, tok/sec: 185971.84, flops:195.23, batch-reuse:1
@ 229 train 6.2457 , allloss: 6.2457, dt: 701.03ms, fracRes: 0.0032, norm(attn): 0.3555, norm(output): 0.9453, norm(x): 0.9524, norm(y): 0.9983, norm:0.3353, tok/sec: 186970.79, flops:196.28, batch-reuse:1
@ 230 train 6.2219 , allloss: 6.2219, dt: 712.42ms, fracRes: 0.0032, norm(attn): 0.3555, norm(output): 0.9414, norm(x): 0.9437, norm(y): 0.9983, norm:0.3412, tok/sec: 183980.99, flops:193.14, batch-reuse:1
@ 231 train 6.1572 , allloss: 6.1572, dt: 705.07ms, fracRes: 0.0033, norm(attn): 0.3711, norm(output): 0.9336, norm(x): 0.9319, norm(y): 0.9983, norm:0.3315, tok/sec: 185898.07, flops:195.16, batch-reuse:1
@ 232 train 6.1262 , allloss: 6.1262, dt: 690.20ms, fracRes: 0.0034, norm(attn): 0.3789, norm(output): 0.8906, norm(x): 0.9006, norm(y): 0.9982, norm:0.3654, tok/sec: 189904.88, flops:199.36, batch-reuse:1
@ 233 train 6.2107 , allloss: 6.2107, dt: 694.27ms, fracRes: 0.0033, norm(attn): 0.3711, norm(output): 0.9297, norm(x): 0.9244, norm(y): 0.9982, norm:0.3960, tok/sec: 188792.23, flops:198.19, batch-reuse:1
@ 234 train 6.0569 , allloss: 6.0569, dt: 701.02ms, fracRes: 0.0033, norm(attn): 0.3828, norm(output): 0.8867, norm(x): 0.9016, norm(y): 0.9982, norm:0.4082, tok/sec: 186973.20, flops:196.28, batch-reuse:1
@ 235 train 6.1901 , allloss: 6.1901, dt: 710.18ms, fracRes: 0.0033, norm(attn): 0.3789, norm(output): 0.9336, norm(x): 0.9279, norm(y): 0.9983, norm:0.5022, tok/sec: 184562.76, flops:193.75, batch-reuse:1
@ 236 train 6.0870 , allloss: 6.0870, dt: 711.84ms, fracRes: 0.0033, norm(attn): 0.3711, norm(output): 0.9219, norm(x): 0.9200, norm(y): 0.9982, norm:0.3503, tok/sec: 184130.18, flops:193.30, batch-reuse:1
@ 237 train 6.1724 , allloss: 6.1724, dt: 706.19ms, fracRes: 0.0033, norm(attn): 0.3633, norm(output): 0.9336, norm(x): 0.9262, norm(y): 0.9982, norm:0.3730, tok/sec: 185604.41, flops:194.85, batch-reuse:1
@ 238 train 6.1423 , allloss: 6.1423, dt: 706.28ms, fracRes: 0.0033, norm(attn): 0.3730, norm(output): 0.9141, norm(x): 0.9108, norm(y): 0.9981, norm:0.4405, tok/sec: 185579.60, flops:194.82, batch-reuse:1
@ 239 train 6.1467 , allloss: 6.1467, dt: 712.43ms, fracRes: 0.0032, norm(attn): 0.3711, norm(output): 0.9219, norm(x): 0.9231, norm(y): 0.9981, norm:0.5653, tok/sec: 183978.84, flops:193.14, batch-reuse:1
@ 240 train 6.1779 , allloss: 6.1779, dt: 691.49ms, fracRes: 0.0032, norm(attn): 0.3770, norm(output): 0.9375, norm(x): 0.9392, norm(y): 0.9981, norm:0.3470, tok/sec: 189549.92, flops:198.99, batch-reuse:1
@ 241 train 6.1641 , allloss: 6.1641, dt: 676.85ms, fracRes: 0.0032, norm(attn): 0.3789, norm(output): 0.9336, norm(x): 0.9286, norm(y): 0.9981, norm:0.3263, tok/sec: 193649.02, flops:203.29, batch-reuse:1
@ 242 train 6.1374 , allloss: 6.1374, dt: 694.30ms, fracRes: 0.0032, norm(attn): 0.3867, norm(output): 0.9062, norm(x): 0.9127, norm(y): 0.9981, norm:0.3088, tok/sec: 188782.70, flops:198.18, batch-reuse:1
@ 243 train 6.0564 , allloss: 6.0564, dt: 695.88ms, fracRes: 0.0033, norm(attn): 0.3906, norm(output): 0.9062, norm(x): 0.9064, norm(y): 0.9981, norm:0.2965, tok/sec: 188353.88, flops:197.73, batch-reuse:1
@ 244 train 6.1800 , allloss: 6.1800, dt: 677.79ms, fracRes: 0.0034, norm(attn): 0.4023, norm(output): 0.9258, norm(x): 0.9200, norm(y): 0.9981, norm:0.3360, tok/sec: 193380.64, flops:203.01, batch-reuse:1
@ 245 train 5.9729 , allloss: 5.9729, dt: 698.76ms, fracRes: 0.0035, norm(attn): 0.3945, norm(output): 0.9062, norm(x): 0.9073, norm(y): 0.9981, norm:0.4656, tok/sec: 187576.83, flops:196.92, batch-reuse:1
@ 246 train 6.2440 , allloss: 6.2440, dt: 693.33ms, fracRes: 0.0034, norm(attn): 0.3965, norm(output): 0.8984, norm(x): 0.9051, norm(y): 0.9980, norm:0.3540, tok/sec: 189047.50, flops:198.46, batch-reuse:1
@ 247 train 6.1346 , allloss: 6.1346, dt: 696.84ms, fracRes: 0.0036, norm(attn): 0.3984, norm(output): 0.8867, norm(x): 0.8974, norm(y): 0.9980, norm:0.3808, tok/sec: 188094.88, flops:197.46, batch-reuse:1
@ 248 train 6.0724 , allloss: 6.0724, dt: 706.68ms, fracRes: 0.0035, norm(attn): 0.4062, norm(output): 0.8789, norm(x): 0.8837, norm(y): 0.9980, norm:0.3421, tok/sec: 185474.54, flops:194.71, batch-reuse:1
@ 249 train 6.0657 , allloss: 6.0657, dt: 700.19ms, fracRes: 0.0035, norm(attn): 0.4004, norm(output): 0.8828, norm(x): 0.8886, norm(y): 0.9980, norm:0.4095, tok/sec: 187194.25, flops:196.52, batch-reuse:1
@ 250 train 6.1237 , allloss: 6.1237, dt: 698.82ms, fracRes: 0.0033, norm(attn): 0.4004, norm(output): 0.8750, norm(x): 0.8758, norm(y): 0.9980, norm:0.3678, tok/sec: 187561.48, flops:196.90, batch-reuse:1
@ 251 train 6.0541 , allloss: 6.0541, dt: 696.45ms, fracRes: 0.0034, norm(attn): 0.4004, norm(output): 0.8633, norm(x): 0.8620, norm(y): 0.9981, norm:0.3358, tok/sec: 188199.00, flops:197.57, batch-reuse:1
@ 252 train 6.1966 , allloss: 6.1966, dt: 688.39ms, fracRes: 0.0033, norm(attn): 0.4062, norm(output): 0.8672, norm(x): 0.8712, norm(y): 0.9981, norm:0.4379, tok/sec: 190402.97, flops:199.89, batch-reuse:1
@ 253 train 6.0774 , allloss: 6.0774, dt: 689.25ms, fracRes: 0.0034, norm(attn): 0.3906, norm(output): 0.8750, norm(x): 0.8749, norm(y): 0.9981, norm:0.3543, tok/sec: 190165.34, flops:199.64, batch-reuse:1
@ 254 train 6.0176 , allloss: 6.0176, dt: 707.31ms, fracRes: 0.0037, norm(attn): 0.3867, norm(output): 0.8750, norm(x): 0.8766, norm(y): 0.9981, norm:0.4070, tok/sec: 185309.99, flops:194.54, batch-reuse:1
@ 255 train 6.0224 , allloss: 6.0224, dt: 701.55ms, fracRes: 0.0037, norm(attn): 0.3867, norm(output): 0.8672, norm(x): 0.8673, norm(y): 0.9981, norm:0.3280, tok/sec: 186830.81, flops:196.14, batch-reuse:1
@ 256 train 6.0888 , allloss: 6.0888, dt: 707.69ms, fracRes: 0.0037, norm(attn): 0.3965, norm(output): 0.8594, norm(x): 0.8546, norm(y): 0.9981, norm:0.3174, tok/sec: 185212.04, flops:194.44, batch-reuse:1
@ 257 train 6.0817 , allloss: 6.0817, dt: 711.74ms, fracRes: 0.0036, norm(attn): 0.4004, norm(output): 0.8711, norm(x): 0.8684, norm(y): 0.9981, norm:0.3234, tok/sec: 184158.12, flops:193.33, batch-reuse:1
@ 258 train 6.0237 , allloss: 6.0237, dt: 698.93ms, fracRes: 0.0036, norm(attn): 0.3984, norm(output): 0.8711, norm(x): 0.8759, norm(y): 0.9980, norm:0.3215, tok/sec: 187531.53, flops:196.87, batch-reuse:1
@ 259 train 6.0601 , allloss: 6.0601, dt: 705.37ms, fracRes: 0.0037, norm(attn): 0.4004, norm(output): 0.8750, norm(x): 0.8725, norm(y): 0.9980, norm:0.2902, tok/sec: 185819.15, flops:195.07, batch-reuse:1
@ 260 train 6.1107 , allloss: 6.1107, dt: 703.93ms, fracRes: 0.0037, norm(attn): 0.4062, norm(output): 0.8750, norm(x): 0.8703, norm(y): 0.9980, norm:0.3261, tok/sec: 186200.30, flops:195.47, batch-reuse:1
@ 261 train 6.0894 , allloss: 6.0894, dt: 700.70ms, fracRes: 0.0038, norm(attn): 0.4121, norm(output): 0.8359, norm(x): 0.8420, norm(y): 0.9980, norm:0.2942, tok/sec: 187058.01, flops:196.37, batch-reuse:1
@ 262 train 6.1465 , allloss: 6.1465, dt: 705.05ms, fracRes: 0.0038, norm(attn): 0.4180, norm(output): 0.8281, norm(x): 0.8363, norm(y): 0.9980, norm:0.3572, tok/sec: 185903.98, flops:195.16, batch-reuse:1
@ 263 train 6.0700 , allloss: 6.0700, dt: 709.12ms, fracRes: 0.0037, norm(attn): 0.4297, norm(output): 0.8359, norm(x): 0.8388, norm(y): 0.9980, norm:0.4249, tok/sec: 184838.28, flops:194.04, batch-reuse:1
@ 264 train 6.0716 , allloss: 6.0716, dt: 711.35ms, fracRes: 0.0037, norm(attn): 0.4297, norm(output): 0.8242, norm(x): 0.8312, norm(y): 0.9980, norm:0.4678, tok/sec: 184257.06, flops:193.43, batch-reuse:1
@ 265 train 6.0956 , allloss: 6.0956, dt: 703.45ms, fracRes: 0.0039, norm(attn): 0.4336, norm(output): 0.8125, norm(x): 0.8285, norm(y): 0.9980, norm:0.5745, tok/sec: 186327.84, flops:195.61, batch-reuse:1
@ 266 train 6.0109 , allloss: 6.0109, dt: 701.51ms, fracRes: 0.0036, norm(attn): 0.4180, norm(output): 0.8281, norm(x): 0.8357, norm(y): 0.9980, norm:0.3283, tok/sec: 186843.70, flops:196.15, batch-reuse:1
@ 267 train 6.0679 , allloss: 6.0679, dt: 708.17ms, fracRes: 0.0036, norm(attn): 0.4082, norm(output): 0.8594, norm(x): 0.8567, norm(y): 0.9980, norm:0.3801, tok/sec: 185086.70, flops:194.30, batch-reuse:1
@ 268 train 6.1418 , allloss: 6.1418, dt: 705.63ms, fracRes: 0.0037, norm(attn): 0.4102, norm(output): 0.8711, norm(x): 0.8693, norm(y): 0.9980, norm:0.4884, tok/sec: 185752.54, flops:195.00, batch-reuse:1
@ 269 train 6.0871 , allloss: 6.0871, dt: 702.05ms, fracRes: 0.0038, norm(attn): 0.4121, norm(output): 0.8516, norm(x): 0.8529, norm(y): 0.9980, norm:0.3882, tok/sec: 186699.59, flops:196.00, batch-reuse:1
@ 270 train 6.1518 , allloss: 6.1518, dt: 704.23ms, fracRes: 0.0038, norm(attn): 0.4102, norm(output): 0.8438, norm(x): 0.8449, norm(y): 0.9979, norm:0.3775, tok/sec: 186119.80, flops:195.39, batch-reuse:1
@ 271 train 6.0270 , allloss: 6.0270, dt: 705.17ms, fracRes: 0.0038, norm(attn): 0.4141, norm(output): 0.8320, norm(x): 0.8346, norm(y): 0.9979, norm:0.3174, tok/sec: 185872.30, flops:195.13, batch-reuse:1
@ 272 train 6.0576 , allloss: 6.0576, dt: 705.69ms, fracRes: 0.0039, norm(attn): 0.4297, norm(output): 0.8164, norm(x): 0.8227, norm(y): 0.9979, norm:0.3062, tok/sec: 185735.66, flops:194.99, batch-reuse:1
@ 273 train 6.0992 , allloss: 6.0992, dt: 701.78ms, fracRes: 0.0038, norm(attn): 0.4395, norm(output): 0.8125, norm(x): 0.8111, norm(y): 0.9978, norm:0.4023, tok/sec: 186769.49, flops:196.07, batch-reuse:1
@ 274 train 6.0682 , allloss: 6.0682, dt: 706.13ms, fracRes: 0.0039, norm(attn): 0.4395, norm(output): 0.8008, norm(x): 0.8028, norm(y): 0.9978, norm:0.2754, tok/sec: 185621.21, flops:194.87, batch-reuse:1
@ 275 train 6.0542 , allloss: 6.0542, dt: 710.69ms, fracRes: 0.0041, norm(attn): 0.4414, norm(output): 0.8047, norm(x): 0.8028, norm(y): 0.9978, norm:0.3813, tok/sec: 184429.52, flops:193.61, batch-reuse:1
@ 276 train 6.0326 , allloss: 6.0326, dt: 704.29ms, fracRes: 0.0042, norm(attn): 0.4629, norm(output): 0.7891, norm(x): 0.7840, norm(y): 0.9977, norm:0.3556, tok/sec: 186104.86, flops:195.37, batch-reuse:1
@ 277 train 5.8884 , allloss: 5.8884, dt: 688.99ms, fracRes: 0.0045, norm(attn): 0.4492, norm(output): 0.8008, norm(x): 0.8018, norm(y): 0.9978, norm:0.5239, tok/sec: 190238.05, flops:199.71, batch-reuse:1
@ 278 train 6.0262 , allloss: 6.0262, dt: 693.92ms, fracRes: 0.0042, norm(attn): 0.4414, norm(output): 0.8008, norm(x): 0.8003, norm(y): 0.9978, norm:0.4433, tok/sec: 188886.74, flops:198.29, batch-reuse:1
@ 279 train 5.9318 , allloss: 5.9318, dt: 705.28ms, fracRes: 0.0042, norm(attn): 0.4414, norm(output): 0.8125, norm(x): 0.8091, norm(y): 0.9979, norm:0.3467, tok/sec: 185843.53, flops:195.10, batch-reuse:1
@ 280 train 6.0737 , allloss: 6.0737, dt: 698.91ms, fracRes: 0.0044, norm(attn): 0.4395, norm(output): 0.8086, norm(x): 0.8139, norm(y): 0.9979, norm:0.5416, tok/sec: 187538.06, flops:196.88, batch-reuse:1
@ 281 train 5.9736 , allloss: 5.9736, dt: 695.89ms, fracRes: 0.0045, norm(attn): 0.4375, norm(output): 0.8086, norm(x): 0.8086, norm(y): 0.9979, norm:0.3839, tok/sec: 188352.27, flops:197.73, batch-reuse:1
@ 282 train 5.9484 , allloss: 5.9484, dt: 697.17ms, fracRes: 0.0047, norm(attn): 0.4434, norm(output): 0.8047, norm(x): 0.8013, norm(y): 0.9979, norm:0.3451, tok/sec: 188006.05, flops:197.37, batch-reuse:1
@ 283 train 5.8968 , allloss: 5.8968, dt: 694.45ms, fracRes: 0.0047, norm(attn): 0.4414, norm(output): 0.8008, norm(x): 0.7960, norm(y): 0.9979, norm:0.3191, tok/sec: 188743.49, flops:198.14, batch-reuse:1
@ 284 train 5.9780 , allloss: 5.9780, dt: 704.25ms, fracRes: 0.0045, norm(attn): 0.4414, norm(output): 0.7969, norm(x): 0.7944, norm(y): 0.9979, norm:0.3561, tok/sec: 186114.63, flops:195.38, batch-reuse:1
@ 285 train 5.9948 , allloss: 5.9948, dt: 698.42ms, fracRes: 0.0049, norm(attn): 0.4395, norm(output): 0.7930, norm(x): 0.7901, norm(y): 0.9979, norm:0.3322, tok/sec: 187669.87, flops:197.02, batch-reuse:1
@ 286 train 5.9662 , allloss: 5.9662, dt: 702.75ms, fracRes: 0.0048, norm(attn): 0.4453, norm(output): 0.7734, norm(x): 0.7755, norm(y): 0.9978, norm:0.3288, tok/sec: 186512.68, flops:195.80, batch-reuse:1
@ 287 train 6.0067 , allloss: 6.0067, dt: 696.87ms, fracRes: 0.0049, norm(attn): 0.4668, norm(output): 0.7891, norm(x): 0.7798, norm(y): 0.9978, norm:0.3100, tok/sec: 188085.93, flops:197.45, batch-reuse:1
@ 288 train 5.9513 , allloss: 5.9513, dt: 690.92ms, fracRes: 0.0048, norm(attn): 0.4668, norm(output): 0.7891, norm(x): 0.7868, norm(y): 0.9978, norm:0.3466, tok/sec: 189705.14, flops:199.15, batch-reuse:1
@ 289 train 5.9575 , allloss: 5.9575, dt: 690.18ms, fracRes: 0.0050, norm(attn): 0.4727, norm(output): 0.7695, norm(x): 0.7741, norm(y): 0.9978, norm:0.3016, tok/sec: 189909.66, flops:199.37, batch-reuse:1
@ 290 train 5.9775 , allloss: 5.9775, dt: 688.68ms, fracRes: 0.0056, norm(attn): 0.4727, norm(output): 0.7617, norm(x): 0.7704, norm(y): 0.9977, norm:0.3145, tok/sec: 190322.15, flops:199.80, batch-reuse:1
@ 291 train 5.8709 , allloss: 5.8709, dt: 697.47ms, fracRes: 0.0059, norm(attn): 0.4785, norm(output): 0.7578, norm(x): 0.7666, norm(y): 0.9978, norm:0.3910, tok/sec: 187924.81, flops:197.28, batch-reuse:1
@ 292 train 5.8989 , allloss: 5.8989, dt: 702.02ms, fracRes: 0.0060, norm(attn): 0.4727, norm(output): 0.7578, norm(x): 0.7692, norm(y): 0.9977, norm:0.3121, tok/sec: 186705.62, flops:196.00, batch-reuse:1
@ 293 train 5.9644 , allloss: 5.9644, dt: 698.11ms, fracRes: 0.0059, norm(attn): 0.4727, norm(output): 0.7812, norm(x): 0.7842, norm(y): 0.9977, norm:0.3493, tok/sec: 187753.39, flops:197.10, batch-reuse:1
@ 294 train 5.9600 , allloss: 5.9600, dt: 702.74ms, fracRes: 0.0060, norm(attn): 0.4707, norm(output): 0.7812, norm(x): 0.7827, norm(y): 0.9978, norm:0.3069, tok/sec: 186515.14, flops:195.80, batch-reuse:1
@ 295 train 5.9657 , allloss: 5.9657, dt: 702.73ms, fracRes: 0.0066, norm(attn): 0.4668, norm(output): 0.7812, norm(x): 0.7777, norm(y): 0.9978, norm:0.3633, tok/sec: 186519.07, flops:195.81, batch-reuse:1
@ 296 train 5.8667 , allloss: 5.8667, dt: 702.15ms, fracRes: 0.0067, norm(attn): 0.4727, norm(output): 0.7656, norm(x): 0.7706, norm(y): 0.9978, norm:0.3019, tok/sec: 186671.51, flops:195.97, batch-reuse:1
@ 297 train 5.8571 , allloss: 5.8571, dt: 696.73ms, fracRes: 0.0065, norm(attn): 0.4922, norm(output): 0.7500, norm(x): 0.7575, norm(y): 0.9978, norm:0.3486, tok/sec: 188123.46, flops:197.49, batch-reuse:1
@ 298 train 5.9065 , allloss: 5.9065, dt: 705.07ms, fracRes: 0.0061, norm(attn): 0.4961, norm(output): 0.7500, norm(x): 0.7443, norm(y): 0.9977, norm:0.3307, tok/sec: 185899.96, flops:195.16, batch-reuse:1
@ 299 train 5.8990 , allloss: 5.8990, dt: 696.62ms, fracRes: 0.0058, norm(attn): 0.5000, norm(output): 0.7461, norm(x): 0.7479, norm(y): 0.9977, norm:0.2858, tok/sec: 188154.36, flops:197.52, batch-reuse:1
@ 300 train 5.8978 , allloss: 5.8978, dt: 685.55ms, fracRes: 0.0057, norm(attn): 0.5039, norm(output): 0.7500, norm(x): 0.7485, norm(y): 0.9977, norm:0.3361, tok/sec: 191192.61, flops:200.71, batch-reuse:1
@ 301 train 6.0278 , allloss: 6.0278, dt: 700.96ms, fracRes: 0.0061, norm(attn): 0.4961, norm(output): 0.7539, norm(x): 0.7544, norm(y): 0.9977, norm:0.3593, tok/sec: 186988.85, flops:196.30, batch-reuse:1
@ 302 train 5.8821 , allloss: 5.8821, dt: 702.04ms, fracRes: 0.0063, norm(attn): 0.4941, norm(output): 0.7539, norm(x): 0.7529, norm(y): 0.9977, norm:0.4454, tok/sec: 186701.50, flops:196.00, batch-reuse:1
@ 303 train 5.9297 , allloss: 5.9297, dt: 699.48ms, fracRes: 0.0068, norm(attn): 0.4980, norm(output): 0.7461, norm(x): 0.7449, norm(y): 0.9978, norm:0.6032, tok/sec: 187383.81, flops:196.72, batch-reuse:1
@ 304 train 5.8653 , allloss: 5.8653, dt: 711.13ms, fracRes: 0.0065, norm(attn): 0.4863, norm(output): 0.7461, norm(x): 0.7455, norm(y): 0.9977, norm:0.5125, tok/sec: 184314.14, flops:193.49, batch-reuse:1
@ 305 train 5.8433 , allloss: 5.8433, dt: 708.08ms, fracRes: 0.0069, norm(attn): 0.4766, norm(output): 0.7461, norm(x): 0.7496, norm(y): 0.9977, norm:0.3928, tok/sec: 185109.26, flops:194.33, batch-reuse:1
@ 306 train 5.8606 , allloss: 5.8606, dt: 713.33ms, fracRes: 0.0066, norm(attn): 0.4766, norm(output): 0.7461, norm(x): 0.7454, norm(y): 0.9976, norm:0.4025, tok/sec: 183745.60, flops:192.90, batch-reuse:1
@ 307 train 5.9818 , allloss: 5.9818, dt: 709.28ms, fracRes: 0.0065, norm(attn): 0.4766, norm(output): 0.7383, norm(x): 0.7431, norm(y): 0.9975, norm:0.4172, tok/sec: 184795.66, flops:194.00, batch-reuse:1
@ 308 train 5.8584 , allloss: 5.8584, dt: 710.59ms, fracRes: 0.0072, norm(attn): 0.4629, norm(output): 0.7227, norm(x): 0.7305, norm(y): 0.9975, norm:0.3646, tok/sec: 184454.40, flops:193.64, batch-reuse:1
@ 309 train 5.8912 , allloss: 5.8912, dt: 709.86ms, fracRes: 0.0074, norm(attn): 0.4453, norm(output): 0.7383, norm(x): 0.7398, norm(y): 0.9975, norm:0.2903, tok/sec: 184644.90, flops:193.84, batch-reuse:1
@ 310 train 5.9509 , allloss: 5.9509, dt: 702.62ms, fracRes: 0.0077, norm(attn): 0.4355, norm(output): 0.7539, norm(x): 0.7602, norm(y): 0.9975, norm:0.3381, tok/sec: 186548.31, flops:195.84, batch-reuse:1
@ 311 train 5.9779 , allloss: 5.9779, dt: 693.51ms, fracRes: 0.0070, norm(attn): 0.4395, norm(output): 0.7656, norm(x): 0.7653, norm(y): 0.9975, norm:0.4150, tok/sec: 188996.88, flops:198.41, batch-reuse:1
@ 312 train 6.0008 , allloss: 6.0008, dt: 693.95ms, fracRes: 0.0067, norm(attn): 0.4609, norm(output): 0.7461, norm(x): 0.7518, norm(y): 0.9976, norm:0.3618, tok/sec: 188877.85, flops:198.28, batch-reuse:1
@ 313 train 5.8689 , allloss: 5.8689, dt: 715.91ms, fracRes: 0.0072, norm(attn): 0.4727, norm(output): 0.7422, norm(x): 0.7321, norm(y): 0.9977, norm:0.4600, tok/sec: 183083.32, flops:192.20, batch-reuse:1
@ 314 train 5.8496 , allloss: 5.8496, dt: 714.72ms, fracRes: 0.0073, norm(attn): 0.4805, norm(output): 0.7305, norm(x): 0.7285, norm(y): 0.9977, norm:0.3277, tok/sec: 183388.81, flops:192.52, batch-reuse:1
@ 315 train 5.8776 , allloss: 5.8776, dt: 697.75ms, fracRes: 0.0081, norm(attn): 0.4961, norm(output): 0.7656, norm(x): 0.7653, norm(y): 0.9977, norm:0.6150, tok/sec: 187849.23, flops:197.20, batch-reuse:1
@ 316 train 5.8873 , allloss: 5.8873, dt: 715.44ms, fracRes: 0.0073, norm(attn): 0.5391, norm(output): 0.7422, norm(x): 0.7454, norm(y): 0.9979, norm:0.3404, tok/sec: 183204.73, flops:192.33, batch-reuse:1
@ 317 train 5.9458 , allloss: 5.9458, dt: 713.89ms, fracRes: 0.0071, norm(attn): 0.5586, norm(output): 0.7461, norm(x): 0.7438, norm(y): 0.9979, norm:0.3676, tok/sec: 183602.74, flops:192.75, batch-reuse:1
@ 318 train 5.8313 , allloss: 5.8313, dt: 711.06ms, fracRes: 0.0082, norm(attn): 0.5781, norm(output): 0.7539, norm(x): 0.7572, norm(y): 0.9980, norm:0.4667, tok/sec: 184332.06, flops:193.51, batch-reuse:1
@ 319 train 5.7938 , allloss: 5.7938, dt: 708.91ms, fracRes: 0.0071, norm(attn): 0.5664, norm(output): 0.7539, norm(x): 0.7540, norm(y): 0.9979, norm:0.4528, tok/sec: 184892.18, flops:194.10, batch-reuse:1
@ 320 train 5.8813 , allloss: 5.8813, dt: 701.92ms, fracRes: 0.0076, norm(attn): 0.6016, norm(output): 0.7539, norm(x): 0.7686, norm(y): 0.9980, norm:0.4400, tok/sec: 186733.52, flops:196.03, batch-reuse:1
@ 321 train 5.9031 , allloss: 5.9031, dt: 708.48ms, fracRes: 0.0071, norm(attn): 0.6016, norm(output): 0.7578, norm(x): 0.7687, norm(y): 0.9979, norm:0.3888, tok/sec: 185004.67, flops:194.22, batch-reuse:1
@ 322 train 5.8024 , allloss: 5.8024, dt: 708.30ms, fracRes: 0.0070, norm(attn): 0.6016, norm(output): 0.7539, norm(x): 0.7638, norm(y): 0.9980, norm:0.3587, tok/sec: 185051.38, flops:194.27, batch-reuse:1
@ 323 train 5.8944 , allloss: 5.8944, dt: 707.24ms, fracRes: 0.0072, norm(attn): 0.6055, norm(output): 0.7539, norm(x): 0.7561, norm(y): 0.9980, norm:0.3591, tok/sec: 185328.23, flops:194.56, batch-reuse:1
@ 324 train 5.7860 , allloss: 5.7860, dt: 697.46ms, fracRes: 0.0072, norm(attn): 0.6211, norm(output): 0.7539, norm(x): 0.7598, norm(y): 0.9980, norm:0.4077, tok/sec: 187926.74, flops:197.29, batch-reuse:1
@ 325 train 5.8028 , allloss: 5.8028, dt: 715.49ms, fracRes: 0.0077, norm(attn): 0.6250, norm(output): 0.7500, norm(x): 0.7521, norm(y): 0.9981, norm:0.4268, tok/sec: 183192.64, flops:192.32, batch-reuse:1
@ 326 train 5.8944 , allloss: 5.8944, dt: 709.66ms, fracRes: 0.0089, norm(attn): 0.6211, norm(output): 0.7578, norm(x): 0.7664, norm(y): 0.9982, norm:0.4021, tok/sec: 184697.94, flops:193.90, batch-reuse:1
@ 327 train 5.8970 , allloss: 5.8970, dt: 706.68ms, fracRes: 0.0112, norm(attn): 0.6055, norm(output): 0.7734, norm(x): 0.7765, norm(y): 0.9982, norm:0.3989, tok/sec: 185474.92, flops:194.71, batch-reuse:1
@ 328 train 5.8749 , allloss: 5.8749, dt: 709.65ms, fracRes: 0.0093, norm(attn): 0.5781, norm(output): 0.7656, norm(x): 0.7750, norm(y): 0.9981, norm:0.4452, tok/sec: 184699.74, flops:193.90, batch-reuse:1
@ 329 train 5.8038 , allloss: 5.8038, dt: 692.15ms, fracRes: 0.0080, norm(attn): 0.5820, norm(output): 0.7852, norm(x): 0.7822, norm(y): 0.9981, norm:0.3045, tok/sec: 189369.78, flops:198.80, batch-reuse:1
@ 330 train 5.8122 , allloss: 5.8122, dt: 706.07ms, fracRes: 0.0081, norm(attn): 0.5820, norm(output): 0.7734, norm(x): 0.7805, norm(y): 0.9981, norm:0.3776, tok/sec: 185635.62, flops:194.88, batch-reuse:1
@ 331 train 5.7839 , allloss: 5.7839, dt: 705.11ms, fracRes: 0.0078, norm(attn): 0.5938, norm(output): 0.7617, norm(x): 0.7685, norm(y): 0.9981, norm:0.3450, tok/sec: 185888.08, flops:195.15, batch-reuse:1
@ 332 train 5.7284 , allloss: 5.7284, dt: 709.61ms, fracRes: 0.0080, norm(attn): 0.5938, norm(output): 0.7539, norm(x): 0.7638, norm(y): 0.9981, norm:0.4077, tok/sec: 184708.92, flops:193.91, batch-reuse:1
@ 333 train 5.8286 , allloss: 5.8286, dt: 710.08ms, fracRes: 0.0081, norm(attn): 0.5781, norm(output): 0.7617, norm(x): 0.7644, norm(y): 0.9981, norm:0.4818, tok/sec: 184588.42, flops:193.78, batch-reuse:1
@ 334 train 5.7513 , allloss: 5.7513, dt: 690.04ms, fracRes: 0.0078, norm(attn): 0.6016, norm(output): 0.7734, norm(x): 0.7736, norm(y): 0.9982, norm:0.6797, tok/sec: 189948.44, flops:199.41, batch-reuse:1
@ 335 train 5.7151 , allloss: 5.7151, dt: 697.17ms, fracRes: 0.0086, norm(attn): 0.6328, norm(output): 0.7578, norm(x): 0.7609, norm(y): 0.9983, norm:0.3898, tok/sec: 188006.50, flops:197.37, batch-reuse:1
@ 336 train 5.7877 , allloss: 5.7877, dt: 699.42ms, fracRes: 0.0094, norm(attn): 0.6641, norm(output): 0.7461, norm(x): 0.7494, norm(y): 0.9983, norm:0.3852, tok/sec: 187402.21, flops:196.74, batch-reuse:1
@ 337 train 5.7589 , allloss: 5.7589, dt: 706.05ms, fracRes: 0.0089, norm(attn): 0.6328, norm(output): 0.7422, norm(x): 0.7427, norm(y): 0.9983, norm:0.3836, tok/sec: 185641.77, flops:194.89, batch-reuse:1
@ 338 train 5.7509 , allloss: 5.7509, dt: 712.75ms, fracRes: 0.0089, norm(attn): 0.6836, norm(output): 0.7539, norm(x): 0.7583, norm(y): 0.9984, norm:0.3574, tok/sec: 183895.33, flops:193.05, batch-reuse:1
@ 339 train 5.8201 , allloss: 5.8201, dt: 707.13ms, fracRes: 0.0100, norm(attn): 0.6758, norm(output): 0.7695, norm(x): 0.7741, norm(y): 0.9984, norm:0.3040, tok/sec: 185358.54, flops:194.59, batch-reuse:1
@ 340 train 5.7932 , allloss: 5.7932, dt: 711.74ms, fracRes: 0.0125, norm(attn): 0.6641, norm(output): 0.7695, norm(x): 0.7784, norm(y): 0.9983, norm:0.3552, tok/sec: 184157.01, flops:193.33, batch-reuse:1
@ 341 train 5.7409 , allloss: 5.7409, dt: 711.19ms, fracRes: 0.0096, norm(attn): 0.6602, norm(output): 0.7812, norm(x): 0.7807, norm(y): 0.9984, norm:0.3037, tok/sec: 184299.50, flops:193.48, batch-reuse:1
@ 342 train 5.6729 , allloss: 5.6729, dt: 715.90ms, fracRes: 0.0110, norm(attn): 0.6641, norm(output): 0.7578, norm(x): 0.7724, norm(y): 0.9984, norm:0.3485, tok/sec: 183088.26, flops:192.21, batch-reuse:1
@ 343 train 5.7608 , allloss: 5.7608, dt: 712.65ms, fracRes: 0.0105, norm(attn): 0.6641, norm(output): 0.7539, norm(x): 0.7652, norm(y): 0.9984, norm:0.3639, tok/sec: 183922.77, flops:193.08, batch-reuse:1
@ 344 train 5.7161 , allloss: 5.7161, dt: 692.97ms, fracRes: 0.0101, norm(attn): 0.6523, norm(output): 0.7578, norm(x): 0.7662, norm(y): 0.9983, norm:0.3447, tok/sec: 189146.37, flops:198.57, batch-reuse:1
@ 345 train 5.6818 , allloss: 5.6818, dt: 710.87ms, fracRes: 0.0092, norm(attn): 0.6641, norm(output): 0.7578, norm(x): 0.7675, norm(y): 0.9982, norm:0.2765, tok/sec: 184382.14, flops:193.56, batch-reuse:1
@ 346 train 5.7541 , allloss: 5.7541, dt: 711.75ms, fracRes: 0.0096, norm(attn): 0.6758, norm(output): 0.7461, norm(x): 0.7519, norm(y): 0.9982, norm:0.3628, tok/sec: 184155.22, flops:193.33, batch-reuse:1
@ 347 train 5.7496 , allloss: 5.7496, dt: 691.70ms, fracRes: 0.0097, norm(attn): 0.6836, norm(output): 0.7461, norm(x): 0.7524, norm(y): 0.9982, norm:0.3950, tok/sec: 189492.89, flops:198.93, batch-reuse:1
@ 348 train 5.7610 , allloss: 5.7610, dt: 694.55ms, fracRes: 0.0099, norm(attn): 0.6836, norm(output): 0.7500, norm(x): 0.7637, norm(y): 0.9982, norm:0.3602, tok/sec: 188714.66, flops:198.11, batch-reuse:1
@ 349 train 5.7900 , allloss: 5.7900, dt: 704.06ms, fracRes: 0.0102, norm(attn): 0.6836, norm(output): 0.7500, norm(x): 0.7562, norm(y): 0.9983, norm:0.3105, tok/sec: 186166.81, flops:195.44, batch-reuse:1
@ 350 train 5.7863 , allloss: 5.7863, dt: 694.25ms, fracRes: 0.0106, norm(attn): 0.6836, norm(output): 0.7500, norm(x): 0.7543, norm(y): 0.9983, norm:0.4565, tok/sec: 188796.97, flops:198.20, batch-reuse:1
@ 351 train 5.7831 , allloss: 5.7831, dt: 688.86ms, fracRes: 0.0108, norm(attn): 0.6719, norm(output): 0.7461, norm(x): 0.7467, norm(y): 0.9983, norm:0.3781, tok/sec: 190273.93, flops:199.75, batch-reuse:1
@ 352 train 5.7873 , allloss: 5.7873, dt: 690.50ms, fracRes: 0.0102, norm(attn): 0.6758, norm(output): 0.7422, norm(x): 0.7453, norm(y): 0.9983, norm:0.3935, tok/sec: 189820.94, flops:199.27, batch-reuse:1
@ 353 train 5.7650 , allloss: 5.7650, dt: 696.50ms, fracRes: 0.0102, norm(attn): 0.6719, norm(output): 0.7422, norm(x): 0.7430, norm(y): 0.9982, norm:0.5296, tok/sec: 188186.12, flops:197.56, batch-reuse:1
@ 354 train 5.7769 , allloss: 5.7769, dt: 697.62ms, fracRes: 0.0114, norm(attn): 0.6758, norm(output): 0.7383, norm(x): 0.7383, norm(y): 0.9984, norm:0.7065, tok/sec: 187885.76, flops:197.24, batch-reuse:1
@ 355 train 5.7561 , allloss: 5.7561, dt: 696.63ms, fracRes: 0.0102, norm(attn): 0.6562, norm(output): 0.7344, norm(x): 0.7347, norm(y): 0.9983, norm:0.5680, tok/sec: 188150.31, flops:197.52, batch-reuse:1
@ 356 train 5.7831 , allloss: 5.7831, dt: 696.41ms, fracRes: 0.0096, norm(attn): 0.6562, norm(output): 0.7266, norm(x): 0.7338, norm(y): 0.9983, norm:0.4492, tok/sec: 188211.82, flops:197.59, batch-reuse:1
@ 357 train 5.7958 , allloss: 5.7958, dt: 688.09ms, fracRes: 0.0128, norm(attn): 0.6562, norm(output): 0.7148, norm(x): 0.7269, norm(y): 0.9984, norm:0.4398, tok/sec: 190486.62, flops:199.97, batch-reuse:1
@ 358 train 5.7228 , allloss: 5.7228, dt: 695.91ms, fracRes: 0.0099, norm(attn): 0.6328, norm(output): 0.7266, norm(x): 0.7314, norm(y): 0.9983, norm:0.4083, tok/sec: 188345.68, flops:197.73, batch-reuse:1
@ 359 train 5.8745 , allloss: 5.8745, dt: 703.91ms, fracRes: 0.0087, norm(attn): 0.6289, norm(output): 0.7617, norm(x): 0.7612, norm(y): 0.9983, norm:0.4683, tok/sec: 186206.41, flops:195.48, batch-reuse:1
@ 360 train 5.7568 , allloss: 5.7568, dt: 718.99ms, fracRes: 0.0095, norm(attn): 0.6250, norm(output): 0.7500, norm(x): 0.7506, norm(y): 0.9983, norm:0.4395, tok/sec: 182300.93, flops:191.38, batch-reuse:1
@ 361 train 5.7498 , allloss: 5.7498, dt: 712.75ms, fracRes: 0.0103, norm(attn): 0.6133, norm(output): 0.7422, norm(x): 0.7501, norm(y): 0.9982, norm:0.3324, tok/sec: 183894.90, flops:193.05, batch-reuse:1
@ 362 train 5.7255 , allloss: 5.7255, dt: 713.94ms, fracRes: 0.0112, norm(attn): 0.6172, norm(output): 0.7266, norm(x): 0.7373, norm(y): 0.9982, norm:0.5018, tok/sec: 183589.93, flops:192.73, batch-reuse:1
@ 363 train 5.7330 , allloss: 5.7330, dt: 721.08ms, fracRes: 0.0105, norm(attn): 0.6172, norm(output): 0.7383, norm(x): 0.7366, norm(y): 0.9982, norm:0.3920, tok/sec: 181771.29, flops:190.82, batch-reuse:1
@ 364 train 5.7514 , allloss: 5.7514, dt: 714.55ms, fracRes: 0.0097, norm(attn): 0.6094, norm(output): 0.7422, norm(x): 0.7404, norm(y): 0.9982, norm:0.5397, tok/sec: 183431.70, flops:192.57, batch-reuse:1
@ 365 train 5.7350 , allloss: 5.7350, dt: 717.39ms, fracRes: 0.0105, norm(attn): 0.6172, norm(output): 0.7109, norm(x): 0.7189, norm(y): 0.9982, norm:1.4681, tok/sec: 182707.04, flops:191.81, batch-reuse:1
@ 366 train 5.8390 , allloss: 5.8390, dt: 715.21ms, fracRes: 0.0110, norm(attn): 0.6289, norm(output): 0.7031, norm(x): 0.7100, norm(y): 0.9983, norm:0.4637, tok/sec: 183264.83, flops:192.39, batch-reuse:1
@ 367 train 5.7148 , allloss: 5.7148, dt: 694.71ms, fracRes: 0.0101, norm(attn): 0.6523, norm(output): 0.7148, norm(x): 0.7233, norm(y): 0.9984, norm:0.4639, tok/sec: 188670.36, flops:198.07, batch-reuse:1
@ 368 train 5.8167 , allloss: 5.8167, dt: 713.57ms, fracRes: 0.0097, norm(attn): 0.6328, norm(output): 0.6992, norm(x): 0.7101, norm(y): 0.9983, norm:0.3926, tok/sec: 183683.59, flops:192.83, batch-reuse:1
@ 369 train 5.7158 , allloss: 5.7158, dt: 706.00ms, fracRes: 0.0105, norm(attn): 0.6328, norm(output): 0.6992, norm(x): 0.7011, norm(y): 0.9983, norm:0.3997, tok/sec: 185655.25, flops:194.90, batch-reuse:1
@ 370 train 5.8843 , allloss: 5.8843, dt: 708.44ms, fracRes: 0.0103, norm(attn): 0.6328, norm(output): 0.7070, norm(x): 0.7110, norm(y): 0.9983, norm:0.3748, tok/sec: 185014.20, flops:194.23, batch-reuse:1
@ 371 train 5.8488 , allloss: 5.8488, dt: 699.80ms, fracRes: 0.0093, norm(attn): 0.6328, norm(output): 0.7266, norm(x): 0.7233, norm(y): 0.9983, norm:0.4304, tok/sec: 187299.29, flops:196.63, batch-reuse:1
@ 372 train 5.8870 , allloss: 5.8870, dt: 700.45ms, fracRes: 0.0094, norm(attn): 0.6250, norm(output): 0.7109, norm(x): 0.7168, norm(y): 0.9983, norm:0.3434, tok/sec: 187125.88, flops:196.45, batch-reuse:1
@ 373 train 5.8190 , allloss: 5.8190, dt: 701.18ms, fracRes: 0.0099, norm(attn): 0.6211, norm(output): 0.7070, norm(x): 0.7158, norm(y): 0.9983, norm:0.3805, tok/sec: 186931.69, flops:196.24, batch-reuse:1
@ 374 train 5.8619 , allloss: 5.8619, dt: 704.74ms, fracRes: 0.0106, norm(attn): 0.6172, norm(output): 0.7188, norm(x): 0.7233, norm(y): 0.9983, norm:0.4717, tok/sec: 185987.57, flops:195.25, batch-reuse:1
@ 375 train 5.9414 , allloss: 5.9414, dt: 691.83ms, fracRes: 0.0109, norm(attn): 0.6094, norm(output): 0.7109, norm(x): 0.7190, norm(y): 0.9983, norm:0.3273, tok/sec: 189455.79, flops:198.89, batch-reuse:1
@ 376 train 5.9809 , allloss: 5.9809, dt: 688.71ms, fracRes: 0.0107, norm(attn): 0.6172, norm(output): 0.7227, norm(x): 0.7228, norm(y): 0.9982, norm:0.5323, tok/sec: 190314.84, flops:199.79, batch-reuse:1
@ 377 train 5.8758 , allloss: 5.8758, dt: 691.33ms, fracRes: 0.0114, norm(attn): 0.6211, norm(output): 0.7070, norm(x): 0.7099, norm(y): 0.9983, norm:0.4889, tok/sec: 189594.51, flops:199.04, batch-reuse:1
@ 378 train 5.8355 , allloss: 5.8355, dt: 701.00ms, fracRes: 0.0102, norm(attn): 0.6172, norm(output): 0.6953, norm(x): 0.7050, norm(y): 0.9983, norm:0.4198, tok/sec: 186977.91, flops:196.29, batch-reuse:1
@ 379 train 5.9528 , allloss: 5.9528, dt: 701.63ms, fracRes: 0.0106, norm(attn): 0.6211, norm(output): 0.6914, norm(x): 0.7063, norm(y): 0.9982, norm:0.4931, tok/sec: 186811.70, flops:196.12, batch-reuse:1
@ 380 train 5.9635 , allloss: 5.9635, dt: 706.15ms, fracRes: 0.0115, norm(attn): 0.6172, norm(output): 0.7031, norm(x): 0.7118, norm(y): 0.9981, norm:16.4739, tok/sec: 185614.56, flops:194.86, batch-reuse:1
@ 381 train 6.3597 , allloss: 6.3597, dt: 703.99ms, fracRes: 0.0136, norm(attn): 0.5000, norm(output): 1.2734, norm(x): 1.2878, norm(y): 0.9973, norm:50.3038, tok/sec: 186184.72, flops:195.46, batch-reuse:1
@ 382 train 5.9900 , allloss: 5.9900, dt: 709.05ms, fracRes: 0.0126, norm(attn): 0.6211, norm(output): 0.7422, norm(x): 0.7453, norm(y): 0.9980, norm:0.8652, tok/sec: 184855.06, flops:194.06, batch-reuse:1
@ 383 train 5.9300 , allloss: 5.9300, dt: 703.67ms, fracRes: 0.0126, norm(attn): 0.6250, norm(output): 0.7695, norm(x): 0.7767, norm(y): 0.9980, norm:0.5211, tok/sec: 186269.95, flops:195.55, batch-reuse:1
@ 384 train 5.8912 , allloss: 5.8912, dt: 703.64ms, fracRes: 0.0115, norm(attn): 0.6328, norm(output): 0.7617, norm(x): 0.7736, norm(y): 0.9980, norm:0.5780, tok/sec: 186276.07, flops:195.55, batch-reuse:1
@ 385 train 5.8845 , allloss: 5.8845, dt: 702.92ms, fracRes: 0.0108, norm(attn): 0.6562, norm(output): 0.7461, norm(x): 0.7565, norm(y): 0.9981, norm:0.4800, tok/sec: 186467.57, flops:195.75, batch-reuse:1
@ 386 train 5.9745 , allloss: 5.9745, dt: 703.14ms, fracRes: 0.0098, norm(attn): 0.6680, norm(output): 0.7539, norm(x): 0.7581, norm(y): 0.9981, norm:0.4787, tok/sec: 186409.59, flops:195.69, batch-reuse:1
@ 387 train 5.9208 , allloss: 5.9208, dt: 689.99ms, fracRes: 0.0102, norm(attn): 0.6836, norm(output): 0.7656, norm(x): 0.7698, norm(y): 0.9980, norm:0.4239, tok/sec: 189962.62, flops:199.42, batch-reuse:1
@ 388 train 5.8036 , allloss: 5.8036, dt: 701.59ms, fracRes: 0.0110, norm(attn): 0.6914, norm(output): 0.7578, norm(x): 0.7654, norm(y): 0.9979, norm:0.4248, tok/sec: 186821.92, flops:196.13, batch-reuse:1
@ 389 train 5.8618 , allloss: 5.8618, dt: 700.15ms, fracRes: 0.0115, norm(attn): 0.7227, norm(output): 0.7539, norm(x): 0.7597, norm(y): 0.9981, norm:0.4238, tok/sec: 187206.81, flops:196.53, batch-reuse:1
@ 390 train 5.9118 , allloss: 5.9118, dt: 699.88ms, fracRes: 0.0115, norm(attn): 0.7500, norm(output): 0.7500, norm(x): 0.7602, norm(y): 0.9981, norm:0.3893, tok/sec: 187278.30, flops:196.61, batch-reuse:1
@ 391 train 5.8250 , allloss: 5.8250, dt: 697.58ms, fracRes: 0.0126, norm(attn): 0.7695, norm(output): 0.7617, norm(x): 0.7636, norm(y): 0.9982, norm:0.4158, tok/sec: 187895.85, flops:197.25, batch-reuse:1
@ 392 train 5.9584 , allloss: 5.9584, dt: 701.86ms, fracRes: 0.0124, norm(attn): 0.7812, norm(output): 0.7656, norm(x): 0.7760, norm(y): 0.9982, norm:0.5341, tok/sec: 186750.65, flops:196.05, batch-reuse:1
@ 393 train 5.8803 , allloss: 5.8803, dt: 700.82ms, fracRes: 0.0126, norm(attn): 0.8047, norm(output): 0.7656, norm(x): 0.7779, norm(y): 0.9982, norm:0.5297, tok/sec: 187027.72, flops:196.34, batch-reuse:1
@ 394 train 5.8577 , allloss: 5.8577, dt: 701.71ms, fracRes: 0.0120, norm(attn): 0.7734, norm(output): 0.7656, norm(x): 0.7772, norm(y): 0.9981, norm:0.5812, tok/sec: 186789.16, flops:196.09, batch-reuse:1
@ 395 train 5.8843 , allloss: 5.8843, dt: 696.85ms, fracRes: 0.0120, norm(attn): 0.7891, norm(output): 0.7852, norm(x): 0.7890, norm(y): 0.9982, norm:0.5711, tok/sec: 188091.66, flops:197.46, batch-reuse:1
@ 396 train 5.7885 , allloss: 5.7885, dt: 693.60ms, fracRes: 0.0127, norm(attn): 0.7578, norm(output): 0.7578, norm(x): 0.7643, norm(y): 0.9980, norm:0.4736, tok/sec: 188974.46, flops:198.39, batch-reuse:1
@ 397 train 5.9124 , allloss: 5.9124, dt: 709.22ms, fracRes: 0.0138, norm(attn): 0.7539, norm(output): 0.7461, norm(x): 0.7558, norm(y): 0.9980, norm:0.4992, tok/sec: 184810.76, flops:194.01, batch-reuse:1
@ 398 train 5.8686 , allloss: 5.8686, dt: 705.34ms, fracRes: 0.0146, norm(attn): 0.7500, norm(output): 0.7500, norm(x): 0.7555, norm(y): 0.9979, norm:0.3730, tok/sec: 185829.01, flops:195.08, batch-reuse:1
@ 399 train 5.8812 , allloss: 5.8812, dt: 709.30ms, fracRes: 0.0140, norm(attn): 0.7500, norm(output): 0.7539, norm(x): 0.7576, norm(y): 0.9979, norm:0.4237, tok/sec: 184791.81, flops:193.99, batch-reuse:1
@ 400 train 5.9190 , allloss: 5.9190, dt: 707.37ms, fracRes: 0.0140, norm(attn): 0.7539, norm(output): 0.7500, norm(x): 0.7574, norm(y): 0.9979, norm:0.4654, tok/sec: 185295.56, flops:194.52, batch-reuse:1
@ 401 train 5.8377 , allloss: 5.8377, dt: 712.37ms, fracRes: 0.0145, norm(attn): 0.7500, norm(output): 0.7500, norm(x): 0.7569, norm(y): 0.9978, norm:0.3923, tok/sec: 183994.29, flops:193.16, batch-reuse:1
@ 402 train 5.8401 , allloss: 5.8401, dt: 702.18ms, fracRes: 0.0147, norm(attn): 0.7461, norm(output): 0.7422, norm(x): 0.7456, norm(y): 0.9976, norm:0.3681, tok/sec: 186665.55, flops:195.96, batch-reuse:1
@ 403 train 5.9059 , allloss: 5.9059, dt: 696.93ms, fracRes: 0.0155, norm(attn): 0.7500, norm(output): 0.7383, norm(x): 0.7409, norm(y): 0.9977, norm:0.4923, tok/sec: 188069.91, flops:197.44, batch-reuse:1
@ 404 train 5.7895 , allloss: 5.7895, dt: 700.88ms, fracRes: 0.0154, norm(attn): 0.7422, norm(output): 0.7422, norm(x): 0.7437, norm(y): 0.9978, norm:0.5106, tok/sec: 187009.52, flops:196.32, batch-reuse:1
@ 405 train 5.8398 , allloss: 5.8398, dt: 702.15ms, fracRes: 0.0147, norm(attn): 0.7266, norm(output): 0.7305, norm(x): 0.7357, norm(y): 0.9979, norm:0.4289, tok/sec: 186671.95, flops:195.97, batch-reuse:1
@ 406 train 5.8310 , allloss: 5.8310, dt: 700.70ms, fracRes: 0.0151, norm(attn): 0.7188, norm(output): 0.7422, norm(x): 0.7403, norm(y): 0.9978, norm:0.3660, tok/sec: 187058.77, flops:196.37, batch-reuse:1
@ 407 train 5.8105 , allloss: 5.8105, dt: 708.72ms, fracRes: 0.0159, norm(attn): 0.7109, norm(output): 0.7344, norm(x): 0.7371, norm(y): 0.9978, norm:0.3464, tok/sec: 184943.12, flops:194.15, batch-reuse:1
@ 408 train 5.8070 , allloss: 5.8070, dt: 696.41ms, fracRes: 0.0162, norm(attn): 0.6914, norm(output): 0.7422, norm(x): 0.7463, norm(y): 0.9977, norm:0.3740, tok/sec: 188210.15, flops:197.58, batch-reuse:1
@ 409 train 5.7517 , allloss: 5.7517, dt: 709.62ms, fracRes: 0.0157, norm(attn): 0.6914, norm(output): 0.7344, norm(x): 0.7369, norm(y): 0.9977, norm:0.3322, tok/sec: 184706.13, flops:193.90, batch-reuse:1
@ 410 train 5.8178 , allloss: 5.8178, dt: 710.34ms, fracRes: 0.0154, norm(attn): 0.6914, norm(output): 0.7266, norm(x): 0.7281, norm(y): 0.9977, norm:0.3346, tok/sec: 184519.28, flops:193.71, batch-reuse:1
@ 411 train 5.8392 , allloss: 5.8392, dt: 705.60ms, fracRes: 0.0148, norm(attn): 0.6836, norm(output): 0.7266, norm(x): 0.7281, norm(y): 0.9977, norm:0.3285, tok/sec: 185759.38, flops:195.01, batch-reuse:1
@ 412 train 5.8447 , allloss: 5.8447, dt: 692.32ms, fracRes: 0.0144, norm(attn): 0.6797, norm(output): 0.7266, norm(x): 0.7318, norm(y): 0.9977, norm:0.4078, tok/sec: 189324.13, flops:198.75, batch-reuse:1
@ 413 train 5.4853 , allloss: 5.4853, dt: 699.25ms, fracRes: 0.0128, norm(attn): 0.6914, norm(output): 0.7227, norm(x): 0.7243, norm(y): 0.9978, norm:0.5514, tok/sec: 187446.49, flops:196.78, batch-reuse:1
@ 414 train 5.8051 , allloss: 5.8051, dt: 699.22ms, fracRes: 0.0142, norm(attn): 0.6992, norm(output): 0.7266, norm(x): 0.7355, norm(y): 0.9977, norm:0.6426, tok/sec: 187455.12, flops:196.79, batch-reuse:1
@ 415 train 5.7554 , allloss: 5.7554, dt: 699.76ms, fracRes: 0.0149, norm(attn): 0.6953, norm(output): 0.7188, norm(x): 0.7290, norm(y): 0.9975, norm:0.5582, tok/sec: 187309.18, flops:196.64, batch-reuse:1
@ 416 train 5.8818 , allloss: 5.8818, dt: 695.77ms, fracRes: 0.0143, norm(attn): 0.6992, norm(output): 0.7266, norm(x): 0.7382, norm(y): 0.9975, norm:0.5253, tok/sec: 188385.38, flops:197.77, batch-reuse:1
@ 417 train 5.7910 , allloss: 5.7910, dt: 696.50ms, fracRes: 0.0143, norm(attn): 0.6992, norm(output): 0.7305, norm(x): 0.7374, norm(y): 0.9976, norm:0.6337, tok/sec: 188185.47, flops:197.56, batch-reuse:1
@ 418 train 5.8518 , allloss: 5.8518, dt: 696.74ms, fracRes: 0.0146, norm(attn): 0.6992, norm(output): 0.7227, norm(x): 0.7311, norm(y): 0.9975, norm:0.4007, tok/sec: 188122.49, flops:197.49, batch-reuse:1
@ 419 train 5.7777 , allloss: 5.7777, dt: 691.35ms, fracRes: 0.0152, norm(attn): 0.7070, norm(output): 0.7109, norm(x): 0.7172, norm(y): 0.9975, norm:0.4620, tok/sec: 189589.14, flops:199.03, batch-reuse:1
@ 420 train 5.7582 , allloss: 5.7582, dt: 698.57ms, fracRes: 0.0151, norm(attn): 0.7070, norm(output): 0.7227, norm(x): 0.7236, norm(y): 0.9976, norm:0.5290, tok/sec: 187628.88, flops:196.97, batch-reuse:1
@ 421 train 5.8529 , allloss: 5.8529, dt: 701.36ms, fracRes: 0.0149, norm(attn): 0.7109, norm(output): 0.7148, norm(x): 0.7252, norm(y): 0.9975, norm:0.4508, tok/sec: 186883.52, flops:196.19, batch-reuse:1
@ 422 train 5.7726 , allloss: 5.7726, dt: 689.92ms, fracRes: 0.0153, norm(attn): 0.7227, norm(output): 0.7109, norm(x): 0.7205, norm(y): 0.9972, norm:0.3937, tok/sec: 189981.46, flops:199.44, batch-reuse:1
@ 423 train 5.6997 , allloss: 5.6997, dt: 700.20ms, fracRes: 0.0158, norm(attn): 0.7109, norm(output): 0.7070, norm(x): 0.7212, norm(y): 0.9971, norm:0.6108, tok/sec: 187191.06, flops:196.51, batch-reuse:1
@ 424 train 5.7996 , allloss: 5.7996, dt: 691.55ms, fracRes: 0.0150, norm(attn): 0.7539, norm(output): 0.7305, norm(x): 0.7322, norm(y): 0.9976, norm:0.4929, tok/sec: 189533.59, flops:198.97, batch-reuse:1
@ 425 train 5.8139 , allloss: 5.8139, dt: 699.38ms, fracRes: 0.0140, norm(attn): 0.7656, norm(output): 0.7266, norm(x): 0.7367, norm(y): 0.9976, norm:0.4233, tok/sec: 187412.30, flops:196.75, batch-reuse:1
@ 426 train 5.6723 , allloss: 5.6723, dt: 699.71ms, fracRes: 0.0134, norm(attn): 0.8047, norm(output): 0.7227, norm(x): 0.7308, norm(y): 0.9976, norm:0.4078, tok/sec: 187323.09, flops:196.65, batch-reuse:1
@ 427 train 5.7442 , allloss: 5.7442, dt: 698.24ms, fracRes: 0.0136, norm(attn): 0.8203, norm(output): 0.7227, norm(x): 0.7337, norm(y): 0.9975, norm:0.4022, tok/sec: 187717.17, flops:197.07, batch-reuse:1
@ 428 train 5.7111 , allloss: 5.7111, dt: 698.62ms, fracRes: 0.0136, norm(attn): 0.8438, norm(output): 0.7109, norm(x): 0.7212, norm(y): 0.9974, norm:0.3714, tok/sec: 187615.69, flops:196.96, batch-reuse:1
@ 429 train 5.6875 , allloss: 5.6875, dt: 694.55ms, fracRes: 0.0134, norm(attn): 0.8711, norm(output): 0.7109, norm(x): 0.7223, norm(y): 0.9973, norm:0.3479, tok/sec: 188715.96, flops:198.11, batch-reuse:1
@ 430 train 5.7494 , allloss: 5.7494, dt: 701.67ms, fracRes: 0.0137, norm(attn): 0.8750, norm(output): 0.7266, norm(x): 0.7346, norm(y): 0.9974, norm:0.3563, tok/sec: 186801.35, flops:196.10, batch-reuse:1
@ 431 train 5.7334 , allloss: 5.7334, dt: 690.56ms, fracRes: 0.0145, norm(attn): 0.8750, norm(output): 0.7305, norm(x): 0.7353, norm(y): 0.9974, norm:0.3749, tok/sec: 189804.23, flops:199.26, batch-reuse:1
@ 432 train 5.8181 , allloss: 5.8181, dt: 697.69ms, fracRes: 0.0151, norm(attn): 0.8750, norm(output): 0.7148, norm(x): 0.7279, norm(y): 0.9975, norm:0.3751, tok/sec: 187866.63, flops:197.22, batch-reuse:1
@ 433 train 5.7462 , allloss: 5.7462, dt: 697.82ms, fracRes: 0.0149, norm(attn): 0.8594, norm(output): 0.7148, norm(x): 0.7263, norm(y): 0.9973, norm:0.2982, tok/sec: 187830.30, flops:197.18, batch-reuse:1
@ 434 train 5.7850 , allloss: 5.7850, dt: 708.22ms, fracRes: 0.0147, norm(attn): 0.8555, norm(output): 0.7109, norm(x): 0.7227, norm(y): 0.9972, norm:0.3599, tok/sec: 185072.00, flops:194.29, batch-reuse:1
@ 435 train 5.6576 , allloss: 5.6576, dt: 699.68ms, fracRes: 0.0153, norm(attn): 0.8555, norm(output): 0.6992, norm(x): 0.7153, norm(y): 0.9973, norm:0.3074, tok/sec: 187331.01, flops:196.66, batch-reuse:1
@ 436 train 5.8470 , allloss: 5.8470, dt: 706.22ms, fracRes: 0.0154, norm(attn): 0.8359, norm(output): 0.7070, norm(x): 0.7149, norm(y): 0.9973, norm:0.4063, tok/sec: 185597.02, flops:194.84, batch-reuse:1
@ 437 train 5.6824 , allloss: 5.6824, dt: 692.26ms, fracRes: 0.0155, norm(attn): 0.8438, norm(output): 0.6992, norm(x): 0.7068, norm(y): 0.9972, norm:0.3558, tok/sec: 189338.74, flops:198.77, batch-reuse:1
@ 438 train 5.7343 , allloss: 5.7343, dt: 707.65ms, fracRes: 0.0148, norm(attn): 0.8594, norm(output): 0.7070, norm(x): 0.7179, norm(y): 0.9973, norm:0.5195, tok/sec: 185222.46, flops:194.45, batch-reuse:1
@ 439 train 5.6596 , allloss: 5.6596, dt: 707.42ms, fracRes: 0.0148, norm(attn): 0.8477, norm(output): 0.6953, norm(x): 0.7013, norm(y): 0.9973, norm:0.3365, tok/sec: 185281.51, flops:194.51, batch-reuse:1
@ 440 train 5.6510 , allloss: 5.6510, dt: 697.22ms, fracRes: 0.0145, norm(attn): 0.8398, norm(output): 0.6953, norm(x): 0.7009, norm(y): 0.9972, norm:0.4789, tok/sec: 187993.45, flops:197.36, batch-reuse:1
@ 441 train 5.7401 , allloss: 5.7401, dt: 716.79ms, fracRes: 0.0144, norm(attn): 0.8672, norm(output): 0.7031, norm(x): 0.7094, norm(y): 0.9973, norm:0.4406, tok/sec: 182859.95, flops:191.97, batch-reuse:1
@ 442 train 5.7675 , allloss: 5.7675, dt: 713.40ms, fracRes: 0.0141, norm(attn): 0.8242, norm(output): 0.6953, norm(x): 0.7057, norm(y): 0.9971, norm:0.4282, tok/sec: 183729.27, flops:192.88, batch-reuse:1
@ 443 train 5.7577 , allloss: 5.7577, dt: 714.24ms, fracRes: 0.0140, norm(attn): 0.8164, norm(output): 0.7031, norm(x): 0.7104, norm(y): 0.9972, norm:0.4489, tok/sec: 183511.79, flops:192.65, batch-reuse:1
@ 444 train 5.7333 , allloss: 5.7333, dt: 705.71ms, fracRes: 0.0146, norm(attn): 0.8125, norm(output): 0.6953, norm(x): 0.7046, norm(y): 0.9973, norm:0.4654, tok/sec: 185731.14, flops:194.98, batch-reuse:1
@ 445 train 5.6868 , allloss: 5.6868, dt: 695.97ms, fracRes: 0.0142, norm(attn): 0.8047, norm(output): 0.6875, norm(x): 0.6973, norm(y): 0.9972, norm:0.3932, tok/sec: 188330.13, flops:197.71, batch-reuse:1
@ 446 train 5.6412 , allloss: 5.6412, dt: 709.45ms, fracRes: 0.0148, norm(attn): 0.7969, norm(output): 0.6836, norm(x): 0.6899, norm(y): 0.9971, norm:0.3560, tok/sec: 184751.57, flops:193.95, batch-reuse:1
@ 447 train 5.7119 , allloss: 5.7119, dt: 704.22ms, fracRes: 0.0155, norm(attn): 0.7656, norm(output): 0.6797, norm(x): 0.6820, norm(y): 0.9969, norm:0.4027, tok/sec: 186123.64, flops:195.39, batch-reuse:1
@ 448 train 5.6489 , allloss: 5.6489, dt: 707.65ms, fracRes: 0.0155, norm(attn): 0.7578, norm(output): 0.6836, norm(x): 0.6805, norm(y): 0.9966, norm:0.3531, tok/sec: 185221.96, flops:194.45, batch-reuse:1
@ 449 train 5.6898 , allloss: 5.6898, dt: 711.19ms, fracRes: 0.0164, norm(attn): 0.7539, norm(output): 0.6797, norm(x): 0.6808, norm(y): 0.9968, norm:0.4058, tok/sec: 184298.69, flops:193.48, batch-reuse:1
@ 450 train 5.6906 , allloss: 5.6906, dt: 715.56ms, fracRes: 0.0162, norm(attn): 0.7500, norm(output): 0.6836, norm(x): 0.6883, norm(y): 0.9969, norm:0.3511, tok/sec: 183174.82, flops:192.30, batch-reuse:1
@ 451 train 5.6754 , allloss: 5.6754, dt: 718.80ms, fracRes: 0.0175, norm(attn): 0.7461, norm(output): 0.6758, norm(x): 0.6819, norm(y): 0.9969, norm:0.3584, tok/sec: 182349.25, flops:191.43, batch-reuse:1
@ 452 train 5.6496 , allloss: 5.6496, dt: 710.14ms, fracRes: 0.0169, norm(attn): 0.7344, norm(output): 0.6797, norm(x): 0.6876, norm(y): 0.9969, norm:0.3962, tok/sec: 184572.06, flops:193.76, batch-reuse:1
@ 453 train 5.6482 , allloss: 5.6482, dt: 711.76ms, fracRes: 0.0171, norm(attn): 0.7227, norm(output): 0.6797, norm(x): 0.6876, norm(y): 0.9968, norm:0.3377, tok/sec: 184152.63, flops:193.32, batch-reuse:1
@ 454 train 5.7079 , allloss: 5.7079, dt: 693.02ms, fracRes: 0.0170, norm(attn): 0.7227, norm(output): 0.6836, norm(x): 0.6858, norm(y): 0.9966, norm:0.4155, tok/sec: 189132.44, flops:198.55, batch-reuse:1
@ 455 train 5.6683 , allloss: 5.6683, dt: 703.85ms, fracRes: 0.0168, norm(attn): 0.7227, norm(output): 0.6797, norm(x): 0.6800, norm(y): 0.9966, norm:0.3869, tok/sec: 186221.11, flops:195.50, batch-reuse:1
@ 456 train 5.7457 , allloss: 5.7457, dt: 700.55ms, fracRes: 0.0167, norm(attn): 0.7109, norm(output): 0.6680, norm(x): 0.6710, norm(y): 0.9964, norm:0.4499, tok/sec: 187098.75, flops:196.42, batch-reuse:1
@ 457 train 5.7506 , allloss: 5.7506, dt: 694.50ms, fracRes: 0.0164, norm(attn): 0.7227, norm(output): 0.6680, norm(x): 0.6688, norm(y): 0.9967, norm:0.3559, tok/sec: 188728.01, flops:198.13, batch-reuse:1
@ 458 train 5.7546 , allloss: 5.7546, dt: 709.48ms, fracRes: 0.0167, norm(attn): 0.7109, norm(output): 0.6680, norm(x): 0.6713, norm(y): 0.9968, norm:0.4228, tok/sec: 184743.68, flops:193.94, batch-reuse:1
@ 459 train 5.6789 , allloss: 5.6789, dt: 701.81ms, fracRes: 0.0159, norm(attn): 0.6953, norm(output): 0.6680, norm(x): 0.6762, norm(y): 0.9967, norm:0.4391, tok/sec: 186761.75, flops:196.06, batch-reuse:1
@ 460 train 5.6885 , allloss: 5.6885, dt: 690.53ms, fracRes: 0.0161, norm(attn): 0.6992, norm(output): 0.6641, norm(x): 0.6705, norm(y): 0.9967, norm:0.8434, tok/sec: 189814.72, flops:199.27, batch-reuse:1
@ 461 train 5.6768 , allloss: 5.6768, dt: 699.25ms, fracRes: 0.0157, norm(attn): 0.6992, norm(output): 0.6836, norm(x): 0.6848, norm(y): 0.9968, norm:0.6181, tok/sec: 187445.85, flops:196.78, batch-reuse:1
@ 462 train 5.7856 , allloss: 5.7856, dt: 700.38ms, fracRes: 0.0163, norm(attn): 0.6953, norm(output): 0.6719, norm(x): 0.6803, norm(y): 0.9969, norm:0.5247, tok/sec: 187144.03, flops:196.46, batch-reuse:1
@ 463 train 5.7246 , allloss: 5.7246, dt: 689.60ms, fracRes: 0.0160, norm(attn): 0.6953, norm(output): 0.6758, norm(x): 0.6846, norm(y): 0.9969, norm:0.3801, tok/sec: 190068.89, flops:199.53, batch-reuse:1
@ 464 train 5.6953 , allloss: 5.6953, dt: 694.83ms, fracRes: 0.0163, norm(attn): 0.6914, norm(output): 0.6680, norm(x): 0.6784, norm(y): 0.9968, norm:0.4338, tok/sec: 188639.29, flops:198.03, batch-reuse:1
@ 465 train 5.6411 , allloss: 5.6411, dt: 697.82ms, fracRes: 0.0164, norm(attn): 0.6992, norm(output): 0.6641, norm(x): 0.6703, norm(y): 0.9966, norm:0.4851, tok/sec: 187831.52, flops:197.19, batch-reuse:1
@ 466 train 5.7544 , allloss: 5.7544, dt: 695.44ms, fracRes: 0.0158, norm(attn): 0.6875, norm(output): 0.6641, norm(x): 0.6718, norm(y): 0.9966, norm:0.6372, tok/sec: 188472.18, flops:197.86, batch-reuse:1
@ 467 train 5.6330 , allloss: 5.6330, dt: 696.45ms, fracRes: 0.0157, norm(attn): 0.6875, norm(output): 0.6797, norm(x): 0.6769, norm(y): 0.9965, norm:0.4495, tok/sec: 188200.03, flops:197.57, batch-reuse:1
@ 468 train 5.6129 , allloss: 5.6129, dt: 694.59ms, fracRes: 0.0161, norm(attn): 0.6875, norm(output): 0.6445, norm(x): 0.6509, norm(y): 0.9959, norm:0.4938, tok/sec: 188703.91, flops:198.10, batch-reuse:1
@ 469 train 5.5995 , allloss: 5.5995, dt: 686.53ms, fracRes: 0.0165, norm(attn): 0.6875, norm(output): 0.6406, norm(x): 0.6494, norm(y): 0.9965, norm:0.6695, tok/sec: 190918.26, flops:200.43, batch-reuse:1
@ 470 train 6.1445 , allloss: 6.1445, dt: 696.41ms, fracRes: 0.0184, norm(attn): 0.6094, norm(output): 1.4531, norm(x): 1.4574, norm(y): 0.9959, norm:61.0523, tok/sec: 188210.27, flops:197.58, batch-reuse:1
@ 471 train 5.8263 , allloss: 5.8263, dt: 695.95ms, fracRes: 0.0177, norm(attn): 0.6445, norm(output): 0.8906, norm(x): 0.8931, norm(y): 0.9960, norm:6.4593, tok/sec: 188334.33, flops:197.71, batch-reuse:1
@ 472 train 5.8570 , allloss: 5.8570, dt: 695.15ms, fracRes: 0.0192, norm(attn): 0.7266, norm(output): 0.7109, norm(x): 0.7212, norm(y): 0.9955, norm:0.9404, tok/sec: 188550.97, flops:197.94, batch-reuse:1
@ 473 train 5.7501 , allloss: 5.7501, dt: 692.69ms, fracRes: 0.0200, norm(attn): 0.7109, norm(output): 0.7422, norm(x): 0.7422, norm(y): 0.9961, norm:0.6315, tok/sec: 189221.69, flops:198.65, batch-reuse:1
@ 474 train 5.6847 , allloss: 5.6847, dt: 693.56ms, fracRes: 0.0198, norm(attn): 0.7305, norm(output): 0.7461, norm(x): 0.7497, norm(y): 0.9965, norm:0.5653, tok/sec: 188985.64, flops:198.40, batch-reuse:1
@ 475 train 5.7101 , allloss: 5.7101, dt: 696.42ms, fracRes: 0.0206, norm(attn): 0.7266, norm(output): 0.7500, norm(x): 0.7569, norm(y): 0.9968, norm:0.5508, tok/sec: 188208.92, flops:197.58, batch-reuse:1
@ 476 train 5.7221 , allloss: 5.7221, dt: 696.16ms, fracRes: 0.0218, norm(attn): 0.7734, norm(output): 0.7539, norm(x): 0.7610, norm(y): 0.9971, norm:0.7996, tok/sec: 188278.92, flops:197.66, batch-reuse:1
@ 477 train 5.7733 , allloss: 5.7733, dt: 693.30ms, fracRes: 0.0196, norm(attn): 0.7344, norm(output): 0.7422, norm(x): 0.7514, norm(y): 0.9966, norm:0.4878, tok/sec: 189055.50, flops:198.47, batch-reuse:1
@ 478 train 5.6826 , allloss: 5.6826, dt: 706.19ms, fracRes: 0.0184, norm(attn): 0.6758, norm(output): 0.7578, norm(x): 0.7646, norm(y): 0.9965, norm:1.6298, tok/sec: 185603.22, flops:194.85, batch-reuse:1
@ 479 train 5.7678 , allloss: 5.7678, dt: 693.31ms, fracRes: 0.0179, norm(attn): 0.8398, norm(output): 0.7539, norm(x): 0.7642, norm(y): 0.9962, norm:0.7063, tok/sec: 189052.51, flops:198.47, batch-reuse:1
@ 480 train 5.6515 , allloss: 5.6515, dt: 693.57ms, fracRes: 0.0189, norm(attn): 0.9375, norm(output): 0.7539, norm(x): 0.7643, norm(y): 0.9974, norm:0.5812, tok/sec: 188980.63, flops:198.39, batch-reuse:1
@ 481 train 5.7151 , allloss: 5.7151, dt: 689.17ms, fracRes: 0.0199, norm(attn): 1.0156, norm(output): 0.7852, norm(x): 0.7988, norm(y): 0.9977, norm:0.4050, tok/sec: 190188.56, flops:199.66, batch-reuse:1
@ 482 train 5.6777 , allloss: 5.6777, dt: 694.15ms, fracRes: 0.0171, norm(attn): 1.0781, norm(output): 0.8125, norm(x): 0.8228, norm(y): 0.9979, norm:0.5174, tok/sec: 188823.62, flops:198.23, batch-reuse:1
@ 483 train 5.7814 , allloss: 5.7814, dt: 691.02ms, fracRes: 0.0161, norm(attn): 1.1016, norm(output): 0.8281, norm(x): 0.8374, norm(y): 0.9979, norm:0.4741, tok/sec: 189680.07, flops:199.13, batch-reuse:1
@ 484 train 5.5965 , allloss: 5.5965, dt: 694.11ms, fracRes: 0.0161, norm(attn): 1.1641, norm(output): 0.8359, norm(x): 0.8458, norm(y): 0.9981, norm:0.5517, tok/sec: 188834.19, flops:198.24, batch-reuse:1
@ 485 train 5.5643 , allloss: 5.5643, dt: 686.39ms, fracRes: 0.0143, norm(attn): 1.1719, norm(output): 0.8242, norm(x): 0.8354, norm(y): 0.9981, norm:0.4022, tok/sec: 190958.78, flops:200.47, batch-reuse:1
@ 486 train 5.7307 , allloss: 5.7307, dt: 697.04ms, fracRes: 0.0149, norm(attn): 1.2031, norm(output): 0.8203, norm(x): 0.8296, norm(y): 0.9981, norm:0.4396, tok/sec: 188041.29, flops:197.41, batch-reuse:1
@ 487 train 5.6238 , allloss: 5.6238, dt: 696.68ms, fracRes: 0.0147, norm(attn): 1.2500, norm(output): 0.8242, norm(x): 0.8283, norm(y): 0.9983, norm:0.4576, tok/sec: 188136.72, flops:197.51, batch-reuse:1
@ 488 train 5.5799 , allloss: 5.5799, dt: 695.47ms, fracRes: 0.0168, norm(attn): 1.2422, norm(output): 0.8203, norm(x): 0.8270, norm(y): 0.9982, norm:0.4722, tok/sec: 188465.01, flops:197.85, batch-reuse:1
@ 489 train 5.6135 , allloss: 5.6135, dt: 688.58ms, fracRes: 0.0181, norm(attn): 1.2500, norm(output): 0.8086, norm(x): 0.8147, norm(y): 0.9983, norm:0.5052, tok/sec: 190351.61, flops:199.83, batch-reuse:1
@ 490 train 5.7021 , allloss: 5.7021, dt: 695.69ms, fracRes: 0.0179, norm(attn): 1.2422, norm(output): 0.8086, norm(x): 0.8102, norm(y): 0.9982, norm:0.3540, tok/sec: 188404.62, flops:197.79, batch-reuse:1
@ 491 train 5.7131 , allloss: 5.7131, dt: 696.62ms, fracRes: 0.0176, norm(attn): 1.2422, norm(output): 0.8125, norm(x): 0.8140, norm(y): 0.9982, norm:0.3989, tok/sec: 188155.20, flops:197.53, batch-reuse:1
@ 492 train 9.5161 , allloss: 9.5161, dt: 694.42ms, fracRes: 0.0806, norm(attn): 1.0703, norm(output): 2.3594, norm(x): 2.3994, norm(y): 0.9966, norm:24.7413, tok/sec: 188751.59, flops:198.15, batch-reuse:1
@ 493 train 9.3103 , allloss: 9.3103, dt: 689.12ms, fracRes: 0.0745, norm(attn): 1.1406, norm(output): 4.5625, norm(x): 4.6585, norm(y): 0.9964, norm:5.6163, tok/sec: 190202.57, flops:199.68, batch-reuse:1
@ 494 train 8.3127 , allloss: 8.3127, dt: 694.65ms, fracRes: 0.0781, norm(attn): 1.1406, norm(output): 4.0625, norm(x): 4.1478, norm(y): 0.9965, norm:3.7233, tok/sec: 188687.91, flops:198.08, batch-reuse:1
@ 495 train 8.0561 , allloss: 8.0561, dt: 694.68ms, fracRes: 0.0712, norm(attn): 1.2109, norm(output): 4.2188, norm(x): 4.2113, norm(y): 0.9965, norm:5.5936, tok/sec: 188680.85, flops:198.08, batch-reuse:1
@ 496 train 7.4991 , allloss: 7.4991, dt: 697.41ms, fracRes: 0.0903, norm(attn): 1.2031, norm(output): 2.1250, norm(x): 2.1786, norm(y): 0.9965, norm:9.2480, tok/sec: 187942.35, flops:197.30, batch-reuse:1
@ 497 train 6.1354 , allloss: 6.1354, dt: 696.14ms, fracRes: 0.0726, norm(attn): 1.2109, norm(output): 1.5391, norm(x): 1.5861, norm(y): 0.9967, norm:3.0513, tok/sec: 188284.73, flops:197.66, batch-reuse:1
@ 498 train 6.0544 , allloss: 6.0544, dt: 692.64ms, fracRes: 0.0737, norm(attn): 1.2578, norm(output): 1.4219, norm(x): 1.4511, norm(y): 0.9967, norm:2.2355, tok/sec: 189234.20, flops:198.66, batch-reuse:1
@ 499 train 5.9504 , allloss: 5.9504, dt: 690.56ms, fracRes: 0.0807, norm(attn): 1.2422, norm(output): 1.2500, norm(x): 1.2807, norm(y): 0.9965, norm:3.2227, tok/sec: 189805.87, flops:199.26, batch-reuse:1
@ 500 train 5.8318 , allloss: 5.8318, dt: 694.93ms, fracRes: 0.0766, norm(attn): 1.2891, norm(output): 1.2422, norm(x): 1.2871, norm(y): 0.9965, norm:1.6785, tok/sec: 188612.95, flops:198.01, batch-reuse:1
@ 501 train 6.0238 , allloss: 6.0238, dt: 695.48ms, fracRes: 0.0869, norm(attn): 1.3906, norm(output): 1.4062, norm(x): 1.4515, norm(y): 0.9968, norm:2.5980, tok/sec: 188462.42, flops:197.85, batch-reuse:1
@ 502 train 7.1989 , allloss: 7.1989, dt: 692.38ms, fracRes: 0.1008, norm(attn): 1.4062, norm(output): 2.1719, norm(x): 2.2135, norm(y): 0.9965, norm:11.8508, tok/sec: 189306.33, flops:198.73, batch-reuse:1
@ 503 train 6.3319 , allloss: 6.3319, dt: 697.81ms, fracRes: 0.1042, norm(attn): 1.4844, norm(output): 1.9844, norm(x): 2.0084, norm(y): 0.9966, norm:7.6602, tok/sec: 187832.23, flops:197.19, batch-reuse:1
@ 504 train 6.2108 , allloss: 6.2108, dt: 693.19ms, fracRes: 0.0970, norm(attn): 1.5234, norm(output): 1.6953, norm(x): 1.7328, norm(y): 0.9968, norm:3.4652, tok/sec: 189084.96, flops:198.50, batch-reuse:1
@ 505 train 5.9902 , allloss: 5.9902, dt: 687.90ms, fracRes: 0.0972, norm(attn): 1.5000, norm(output): 1.7812, norm(x): 1.8256, norm(y): 0.9963, norm:3.1359, tok/sec: 190538.84, flops:200.03, batch-reuse:1
@ 506 train 5.9635 , allloss: 5.9635, dt: 695.31ms, fracRes: 0.0977, norm(attn): 1.5312, norm(output): 1.8750, norm(x): 1.8998, norm(y): 0.9969, norm:1.2196, tok/sec: 188509.98, flops:197.90, batch-reuse:1
@ 507 train 5.8702 , allloss: 5.8702, dt: 690.27ms, fracRes: 0.0998, norm(attn): 1.5625, norm(output): 1.7969, norm(x): 1.8541, norm(y): 0.9970, norm:0.6830, tok/sec: 189884.15, flops:199.34, batch-reuse:1
@ 508 train 5.7306 , allloss: 5.7306, dt: 694.86ms, fracRes: 0.1010, norm(attn): 1.5469, norm(output): 1.7500, norm(x): 1.7765, norm(y): 0.9970, norm:0.5180, tok/sec: 188629.77, flops:198.02, batch-reuse:1
@ 509 train 5.8285 , allloss: 5.8285, dt: 695.08ms, fracRes: 0.0955, norm(attn): 1.5156, norm(output): 1.7031, norm(x): 1.7210, norm(y): 0.9970, norm:0.9515, tok/sec: 188571.22, flops:197.96, batch-reuse:1
@ 510 train 5.8331 , allloss: 5.8331, dt: 691.81ms, fracRes: 0.0964, norm(attn): 1.4844, norm(output): 1.5859, norm(x): 1.6008, norm(y): 0.9970, norm:2.4778, tok/sec: 189462.52, flops:198.90, batch-reuse:1
@ 511 train 5.8082 , allloss: 5.8082, dt: 705.26ms, fracRes: 0.0984, norm(attn): 1.5000, norm(output): 1.5547, norm(x): 1.6044, norm(y): 0.9969, norm:0.4919, tok/sec: 185848.30, flops:195.10, batch-reuse:1
@ 512 train 5.7189 , allloss: 5.7189, dt: 687.06ms, fracRes: 0.0985, norm(attn): 1.5000, norm(output): 1.5312, norm(x): 1.5882, norm(y): 0.9969, norm:0.9349, tok/sec: 190772.04, flops:200.27, batch-reuse:1
@ 513 train 5.6896 , allloss: 5.6896, dt: 689.46ms, fracRes: 0.1005, norm(attn): 1.5234, norm(output): 1.5000, norm(x): 1.5476, norm(y): 0.9970, norm:1.0034, tok/sec: 190107.40, flops:199.58, batch-reuse:1
@ 514 train 5.6510 , allloss: 5.6510, dt: 709.22ms, fracRes: 0.0954, norm(attn): 1.5078, norm(output): 1.5000, norm(x): 1.5392, norm(y): 0.9969, norm:0.5358, tok/sec: 184812.68, flops:194.02, batch-reuse:1
@ 515 train 5.6120 , allloss: 5.6120, dt: 706.01ms, fracRes: 0.1002, norm(attn): 1.4922, norm(output): 1.4922, norm(x): 1.5144, norm(y): 0.9968, norm:0.5565, tok/sec: 185652.93, flops:194.90, batch-reuse:1
@ 516 train 5.5985 , allloss: 5.5985, dt: 709.45ms, fracRes: 0.1030, norm(attn): 1.4922, norm(output): 1.4219, norm(x): 1.4774, norm(y): 0.9969, norm:0.6189, tok/sec: 184752.50, flops:193.95, batch-reuse:1
@ 517 train 5.5812 , allloss: 5.5812, dt: 712.03ms, fracRes: 0.1016, norm(attn): 1.4609, norm(output): 1.4062, norm(x): 1.4522, norm(y): 0.9968, norm:0.3618, tok/sec: 184082.58, flops:193.25, batch-reuse:1
@ 518 train 5.6574 , allloss: 5.6574, dt: 707.42ms, fracRes: 0.1000, norm(attn): 1.4141, norm(output): 1.3750, norm(x): 1.4228, norm(y): 0.9967, norm:0.5508, tok/sec: 185280.82, flops:194.51, batch-reuse:1
@ 519 train 5.6030 , allloss: 5.6030, dt: 707.71ms, fracRes: 0.1010, norm(attn): 1.3828, norm(output): 1.3594, norm(x): 1.3856, norm(y): 0.9968, norm:0.4108, tok/sec: 185205.92, flops:194.43, batch-reuse:1
@ 520 train 5.6353 , allloss: 5.6353, dt: 707.89ms, fracRes: 0.0989, norm(attn): 1.3750, norm(output): 1.3359, norm(x): 1.3666, norm(y): 0.9967, norm:0.3696, tok/sec: 185157.64, flops:194.38, batch-reuse:1
@ 521 train 5.7206 , allloss: 5.7206, dt: 692.26ms, fracRes: 0.0965, norm(attn): 1.3672, norm(output): 1.2969, norm(x): 1.3398, norm(y): 0.9967, norm:0.3722, tok/sec: 189339.71, flops:198.77, batch-reuse:1
@ 522 train 5.5561 , allloss: 5.5561, dt: 708.00ms, fracRes: 0.0990, norm(attn): 1.3516, norm(output): 1.2734, norm(x): 1.3179, norm(y): 0.9968, norm:0.4298, tok/sec: 185128.77, flops:194.35, batch-reuse:1
@ 523 train 5.6383 , allloss: 5.6383, dt: 709.52ms, fracRes: 0.0957, norm(attn): 1.3359, norm(output): 1.2656, norm(x): 1.3095, norm(y): 0.9967, norm:0.4235, tok/sec: 184733.44, flops:193.93, batch-reuse:1
@ 524 train 5.5258 , allloss: 5.5258, dt: 696.22ms, fracRes: 0.0974, norm(attn): 1.2969, norm(output): 1.2422, norm(x): 1.2789, norm(y): 0.9968, norm:0.4038, tok/sec: 188262.22, flops:197.64, batch-reuse:1
@ 525 train 5.5923 , allloss: 5.5923, dt: 696.55ms, fracRes: 0.0961, norm(attn): 1.2656, norm(output): 1.2188, norm(x): 1.2580, norm(y): 0.9967, norm:0.4937, tok/sec: 188174.39, flops:197.55, batch-reuse:1
@ 526 train 5.5990 , allloss: 5.5990, dt: 700.73ms, fracRes: 0.0957, norm(attn): 1.2969, norm(output): 1.2031, norm(x): 1.2424, norm(y): 0.9968, norm:0.5404, tok/sec: 187049.35, flops:196.36, batch-reuse:1
@ 527 train 5.6150 , allloss: 5.6150, dt: 698.50ms, fracRes: 0.0881, norm(attn): 1.2891, norm(output): 1.1719, norm(x): 1.2141, norm(y): 0.9967, norm:0.5397, tok/sec: 187646.49, flops:196.99, batch-reuse:1
@ 528 train 5.5358 , allloss: 5.5358, dt: 696.41ms, fracRes: 0.0931, norm(attn): 1.2500, norm(output): 1.1641, norm(x): 1.2080, norm(y): 0.9966, norm:0.7098, tok/sec: 188210.27, flops:197.58, batch-reuse:1
@ 529 train 5.5637 , allloss: 5.5637, dt: 687.44ms, fracRes: 0.0938, norm(attn): 1.2578, norm(output): 1.1328, norm(x): 1.1834, norm(y): 0.9967, norm:0.5096, tok/sec: 190666.18, flops:200.16, batch-reuse:1
@ 530 train 5.6272 , allloss: 5.6272, dt: 696.10ms, fracRes: 0.0954, norm(attn): 1.2969, norm(output): 1.1484, norm(x): 1.1902, norm(y): 0.9967, norm:0.4159, tok/sec: 188294.98, flops:197.67, batch-reuse:1
@ 531 train 5.7416 , allloss: 5.7416, dt: 708.92ms, fracRes: 0.0944, norm(attn): 1.3281, norm(output): 1.1641, norm(x): 1.2005, norm(y): 0.9966, norm:0.4275, tok/sec: 184890.93, flops:194.10, batch-reuse:1
@ 532 train 5.4719 , allloss: 5.4719, dt: 695.49ms, fracRes: 0.0963, norm(attn): 1.3516, norm(output): 1.1406, norm(x): 1.1856, norm(y): 0.9966, norm:0.5619, tok/sec: 188459.26, flops:197.84, batch-reuse:1
@ 533 train 5.5599 , allloss: 5.5599, dt: 701.66ms, fracRes: 0.0979, norm(attn): 1.3672, norm(output): 1.1250, norm(x): 1.1761, norm(y): 0.9967, norm:0.5790, tok/sec: 186803.95, flops:196.11, batch-reuse:1
@ 534 train 5.4817 , allloss: 5.4817, dt: 702.41ms, fracRes: 0.0981, norm(attn): 1.3594, norm(output): 1.1328, norm(x): 1.1788, norm(y): 0.9966, norm:0.3983, tok/sec: 186603.46, flops:195.90, batch-reuse:1
@ 535 train 5.6117 , allloss: 5.6117, dt: 701.82ms, fracRes: 0.0972, norm(attn): 1.3672, norm(output): 1.1328, norm(x): 1.1820, norm(y): 0.9965, norm:0.6059, tok/sec: 186760.29, flops:196.06, batch-reuse:1
@ 536 train 5.5443 , allloss: 5.5443, dt: 703.35ms, fracRes: 0.0999, norm(attn): 1.3672, norm(output): 1.1250, norm(x): 1.1705, norm(y): 0.9966, norm:0.6226, tok/sec: 186353.42, flops:195.63, batch-reuse:1
@ 537 train 5.5237 , allloss: 5.5237, dt: 715.51ms, fracRes: 0.0991, norm(attn): 1.3594, norm(output): 1.1250, norm(x): 1.1640, norm(y): 0.9966, norm:0.5262, tok/sec: 183186.91, flops:192.31, batch-reuse:1
@ 538 train 5.5987 , allloss: 5.5987, dt: 717.03ms, fracRes: 0.1025, norm(attn): 1.3594, norm(output): 1.1172, norm(x): 1.1541, norm(y): 0.9966, norm:0.5198, tok/sec: 182797.56, flops:191.90, batch-reuse:1
@ 539 train 5.5594 , allloss: 5.5594, dt: 694.63ms, fracRes: 0.0994, norm(attn): 1.3438, norm(output): 1.1250, norm(x): 1.1580, norm(y): 0.9966, norm:0.7608, tok/sec: 188693.74, flops:198.09, batch-reuse:1
@ 540 train 5.5849 , allloss: 5.5849, dt: 697.71ms, fracRes: 0.0993, norm(attn): 1.3125, norm(output): 1.1016, norm(x): 1.1450, norm(y): 0.9966, norm:0.4089, tok/sec: 187859.06, flops:197.21, batch-reuse:1
@ 541 train 5.5649 , allloss: 5.5649, dt: 690.78ms, fracRes: 0.1010, norm(attn): 1.2969, norm(output): 1.0938, norm(x): 1.1326, norm(y): 0.9965, norm:0.5204, tok/sec: 189745.80, flops:199.20, batch-reuse:1
@ 542 train 5.5456 , allloss: 5.5456, dt: 690.10ms, fracRes: 0.1002, norm(attn): 1.2891, norm(output): 1.0859, norm(x): 1.1357, norm(y): 0.9965, norm:0.5487, tok/sec: 189930.73, flops:199.39, batch-reuse:1
@ 543 train 5.5776 , allloss: 5.5776, dt: 686.48ms, fracRes: 0.0971, norm(attn): 1.2891, norm(output): 1.1094, norm(x): 1.1414, norm(y): 0.9964, norm:0.5281, tok/sec: 190932.52, flops:200.44, batch-reuse:1
@ 544 train 5.5109 , allloss: 5.5109, dt: 696.59ms, fracRes: 0.0989, norm(attn): 1.2656, norm(output): 1.0859, norm(x): 1.1235, norm(y): 0.9965, norm:0.4311, tok/sec: 188161.19, flops:197.53, batch-reuse:1
@ 545 train 5.5337 , allloss: 5.5337, dt: 696.50ms, fracRes: 0.0985, norm(attn): 1.2500, norm(output): 1.0625, norm(x): 1.1145, norm(y): 0.9965, norm:0.3398, tok/sec: 188187.21, flops:197.56, batch-reuse:1
@ 546 train 5.4356 , allloss: 5.4356, dt: 697.27ms, fracRes: 0.0990, norm(attn): 1.2422, norm(output): 1.0547, norm(x): 1.0981, norm(y): 0.9965, norm:0.3944, tok/sec: 187978.53, flops:197.34, batch-reuse:1
@ 547 train 5.5894 , allloss: 5.5894, dt: 689.20ms, fracRes: 0.0971, norm(attn): 1.2422, norm(output): 1.0391, norm(x): 1.0946, norm(y): 0.9965, norm:0.4099, tok/sec: 190180.93, flops:199.65, batch-reuse:1
@ 548 train 5.5623 , allloss: 5.5623, dt: 701.84ms, fracRes: 0.0964, norm(attn): 1.2031, norm(output): 1.0234, norm(x): 1.0754, norm(y): 0.9965, norm:0.4250, tok/sec: 186754.14, flops:196.05, batch-reuse:1
@ 549 train 5.4920 , allloss: 5.4920, dt: 706.64ms, fracRes: 0.0978, norm(attn): 1.2031, norm(output): 1.0078, norm(x): 1.0584, norm(y): 0.9965, norm:0.3821, tok/sec: 185485.87, flops:194.72, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2168, 0.7852, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0356, 0.1650, 0.8008, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0049, 0.0354, 0.0713, 0.8867, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0698, 0.1069, 0.1924, 0.0894, 0.5430, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0383, 0.0317, 0.1553, 0.0396, 0.6445, 0.0898, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0206, 0.0708, 0.0977, 0.0486, 0.3652, 0.3203, 0.0762, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0164, 0.0493, 0.1021, 0.1069, 0.4961, 0.0962, 0.1196, 0.0135, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0425, 0.1108, 0.0547, 0.0376, 0.2490, 0.1445, 0.0796, 0.1177, 0.1641, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0144, 0.0266, 0.0310, 0.1748, 0.3105, 0.0408, 0.0342, 0.0315, 0.2363, 0.0986, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0454, 0.0815, 0.0381, 0.0281, 0.1523, 0.3281, 0.0327, 0.0732, 0.1216, 0.0566, 0.0422, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0022, 0.0287, 0.0371, 0.2500, 0.2754, 0.0442, 0.0240, 0.0069, 0.0767, 0.0378, 0.1953, 0.0222, 0.0000, 0.0000, 0.0000],
        [0.0742, 0.0215, 0.1079, 0.0118, 0.1245, 0.1328, 0.0669, 0.0479, 0.0625, 0.0698, 0.1318, 0.0449, 0.1021, 0.0000, 0.0000],
        [0.0679, 0.1016, 0.0225, 0.0181, 0.0679, 0.0898, 0.0664, 0.0679, 0.1318, 0.0791, 0.0583, 0.0742, 0.0732, 0.0820, 0.0000],
        [0.0056, 0.0422, 0.0243, 0.0903, 0.3496, 0.0203, 0.0271, 0.0064, 0.0510, 0.0146, 0.0496, 0.0114, 0.0140, 0.1426, 0.1523]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0003,     -0.1992,     -0.2432,     -0.3125,     -0.3984,     -0.2393,     -0.1934,     -0.0684,     -0.2754,     -0.2021,     -0.3301,     -0.1689,     -0.1855,     -0.3047,     -0.3496],
        [    -0.0151,      1.2734,     -0.4980,     -0.0376,      0.7188,     -0.3633,      0.4023,     -0.1484,      0.8359,      0.0747,     -0.1855,      0.4551,     -0.3066,      0.8125,      1.3516],
        [     0.0031,      1.5312,      3.1094,      5.9375,      4.9375,      1.6094,      2.9219,      0.6953,      3.3906,      3.5000,      3.6875,      2.2031,      1.5078,      3.8125,      5.6875],
        [     0.0006,      1.9688,      2.6719,      5.1875,      3.7969,      3.1094,      2.3281,      1.0781,      2.4688,      1.9609,      3.7500,      1.4219,      2.2344,      3.1875,      4.1875],
        [     0.0066,      0.4316,      1.0156,      0.2500,      2.0469,      1.3203,      0.0177,     -0.3086,      0.5430,     -0.6953,      0.4785,     -0.1621,      1.0234,      1.0078,      0.3672],
        [     0.0010,     -0.1826,      1.3984,      0.0325,      2.8281,      0.8516,     -0.4570,     -0.3477,      1.4062,      0.6914,      0.0757,      0.5234,      0.3789,      1.5781,      1.0781],
        [     0.0001,      1.2344,      1.5547,      0.8594,      2.8750,      2.7500,      1.3047,      0.6211,      1.4922,      0.7305,      1.5234,      0.5664,      1.0234,      1.2109,      1.8359],
        [     0.0045,      1.1094,      1.8359,      1.8828,      3.4219,      1.7812,      1.9922,     -0.1885,      1.5234,      1.0625,      2.5938,      0.8164,      1.2812,      1.9453,      1.8203],
        [    -0.0025,      0.9531,      0.2480,     -0.1260,      1.7656,      1.2188,      0.6250,      1.0156,      1.3438,      0.4707,      0.8906,      0.3340,      0.6992,      1.4688,      1.4375],
        [     0.0045,      0.6133,      0.7695,      2.5000,      3.0781,      1.0391,      0.8672,      0.7852,      2.7969,      1.9219,      1.9062,      1.0781,      0.8164,      1.8516,      2.9062],
        [     0.0002,      0.5820,     -0.1748,     -0.4805,      1.2109,      1.9766,     -0.3281,      0.4785,      0.9844,      0.2188,     -0.0723,     -0.4473,      0.3301,      0.4902,      1.1250],
        [     0.0032,      2.5938,      2.8438,      4.7500,      4.8438,      3.0312,      2.4219,      1.1719,      3.5781,      2.8750,      4.5000,      2.3438,      2.3438,      3.5781,      5.9375],
        [    -0.0005,     -1.2422,      0.3750,     -1.8359,      0.5156,      0.5820,     -0.1060,     -0.4375,     -0.1699,     -0.0640,      0.5781,     -0.5000,      0.3184,      0.2617,     -0.3984],
        [    -0.0004,      0.4062,     -1.1016,     -1.3203,      0.0015,      0.2852,     -0.0206,      0.0032,      0.6680,      0.1533,     -0.1484,      0.0908,      0.0762,      0.1934,      0.4492],
        [     0.0110,      2.0312,      1.4766,      2.7812,      4.1562,      1.2969,      1.5859,      0.1465,      2.2188,      0.9727,      2.1875,      0.7148,      0.9297,      3.2500,      3.3125]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2698],
        [0.0507],
        [0.0459],
        [0.1789],
        [0.1095],
        [0.0565],
        [0.0442],
        [0.0617],
        [0.0287],
        [0.1046],
        [0.0171],
        [0.0575],
        [0.0938],
        [0.0141]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0177,     0.9805,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9961,     0.0050,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0004,     0.9375,     0.0229,     0.0403,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.9570,     0.0053,     0.0254,     0.0140,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.8945,     0.0013,     0.0155,     0.0082,     0.0796,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3828,     0.0015,     0.0164,     0.0201,     0.5508,     0.0276,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.5586,     0.0053,     0.0332,     0.0613,     0.3086,     0.0277,     0.0051,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.7461,     0.0027,     0.0108,     0.0048,     0.1206,     0.0038,     0.0432,     0.0669,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.6797,     0.0082,     0.0265,     0.0176,     0.1709,     0.0110,     0.0089,     0.0442,     0.0354,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.7422,     0.0036,     0.0154,     0.0049,     0.1030,     0.0032,     0.0306,     0.0486,     0.0415,     0.0056,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0723,     0.0015,     0.0645,     0.1045,     0.4316,     0.0703,     0.0047,     0.1396,     0.0040,     0.1064,     0.0003,     0.0000,     0.0000,     0.0000],
        [    0.0004,     0.7305,     0.0190,     0.0332,     0.0065,     0.0603,     0.0032,     0.0047,     0.0623,     0.0270,     0.0027,     0.0449,     0.0046,     0.0000,     0.0000],
        [    0.0003,     0.6602,     0.0026,     0.0081,     0.0035,     0.0913,     0.0030,     0.0413,     0.0493,     0.0223,     0.0020,     0.0060,     0.0444,     0.0649,     0.0000],
        [    0.0000,     0.2656,     0.0027,     0.0747,     0.0874,     0.1963,     0.0422,     0.0073,     0.1338,     0.0051,     0.0308,     0.0036,     0.0139,     0.1260,     0.0115]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0004,     -0.3535,     -0.3730,     -0.4141,     -0.4102,     -0.4453,     -0.4121,     -0.3965,     -0.3750,     -0.3652,     -0.4219,     -0.3594,     -0.4141,     -0.3711,     -0.3242],
        [     0.0217,      4.0312,     -1.0156,      0.3711,     -0.9805,     -0.1445,     -1.1875,     -1.4297,      1.7188,     -0.0605,     -1.8828,     -0.7383,     -1.6016,      2.0156,      1.2422],
        [     0.0236,     13.0000,      7.7188,     10.7500,     11.6875,     12.7500,     11.5625,      8.5000,     12.2500,      9.1875,     11.2500,      7.4375,      9.7500,     12.2500,      9.0625],
        [     0.0312,      7.8125,      4.1250,      4.6875,      2.6406,      5.1562,      2.6406,      3.1250,      5.2500,      4.9062,      2.4062,      3.9531,      2.9219,      5.4062,      4.8438],
        [     0.0170,      9.0625,      3.8906,      5.4375,      4.8438,      8.0625,      5.0625,      6.3750,      8.1250,      6.6875,      4.8750,      4.4062,      6.8125,      8.6250,      5.3438],
        [     0.0282,     11.6250,      5.0312,      7.5312,      6.9062,      9.1875,      6.6875,      6.9688,     10.8750,      7.8125,      6.6250,      5.7812,      7.9062,     11.2500,      6.0312],
        [     0.0308,     16.8750,     11.3125,     13.6875,     13.9375,     17.2500,     14.2500,     13.9375,     17.2500,     13.5000,     14.1875,     11.3750,     14.5000,     17.3750,     12.1250],
        [     0.0265,     10.5625,      5.9062,      7.7500,      8.3750,      9.9375,      7.5625,      5.8750,     10.1250,      6.6562,      7.1250,      6.6562,      6.5625,     10.3125,      7.2188],
        [     0.0205,      8.7500,      3.1094,      4.5000,      3.6875,      6.9062,      3.4375,      5.8750,      6.3125,      5.3125,      3.1562,      3.8750,      6.0312,      6.5625,      3.4531],
        [     0.0226,     10.4375,      6.0312,      7.2188,      6.8125,      9.0625,      6.3438,      6.1250,      7.7188,      7.5000,      6.6562,      5.6250,      6.4688,      7.7500,      6.1875],
        [     0.0265,     11.8750,      6.5938,      8.0000,      6.8750,      9.9375,      6.4688,      8.6875,      9.1875,      9.0000,      7.0312,      6.2500,      9.0625,      9.4375,      6.5000],
        [     0.0344,     20.6250,     16.7500,     20.5000,     21.0000,     22.5000,     20.6250,     17.8750,     21.3750,     17.7500,     21.0000,     15.3125,     19.3750,     21.1250,     16.7500],
        [     0.0322,      7.4375,      3.7812,      4.3438,      2.7188,      4.9375,      1.9844,      2.3906,      4.9688,      4.1250,      1.8438,      4.6250,      2.3750,      5.1875,      4.5625],
        [     0.0199,      7.7500,      2.2188,      3.3438,      2.4844,      5.7500,      2.3281,      4.9688,      5.1562,      4.3438,      1.9375,      3.0469,      5.0312,      5.4062,      2.5938],
        [     0.0270,     14.2500,      9.6875,     13.0000,     13.1250,     13.9375,     12.4375,     10.6875,     13.5625,     10.3125,     12.1250,      9.9375,     11.3125,     13.5000,     11.1250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6405],
        [0.2813],
        [0.0759],
        [0.1138],
        [0.2005],
        [0.0922],
        [0.1730],
        [0.1878],
        [0.0620],
        [0.0289],
        [0.0623],
        [0.0458],
        [0.1430],
        [0.0443]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0010,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8164,     0.0757,     0.1094,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8203,     0.0134,     0.1533,     0.0122,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5234,     0.0098,     0.1514,     0.0131,     0.3008,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7852,     0.0077,     0.0830,     0.0051,     0.1030,     0.0177,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6914,     0.0071,     0.0231,     0.0026,     0.1260,     0.0352,     0.1138,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8125,     0.0018,     0.0144,     0.0009,     0.0776,     0.0075,     0.0102,     0.0737,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5508,     0.0069,     0.1240,     0.0051,     0.0825,     0.0141,     0.0281,     0.1553,     0.0315,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1182,     0.0096,     0.0043,     0.0069,     0.1201,     0.0160,     0.0200,     0.0771,     0.5859,     0.0403,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5391,     0.0009,     0.0154,     0.0009,     0.1270,     0.0010,     0.0009,     0.0168,     0.2080,     0.0889,     0.0017,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0737,     0.0157,     0.0308,     0.0056,     0.0204,     0.1099,     0.2305,     0.2734,     0.0214,     0.0342,     0.1079,     0.0767,     0.0000,     0.0000,     0.0000],
        [    0.7188,     0.0003,     0.0060,     0.0002,     0.0238,     0.0009,     0.0008,     0.0148,     0.0540,     0.1436,     0.0017,     0.0084,     0.0249,     0.0000,     0.0000],
        [    0.3926,     0.0051,     0.0767,     0.0040,     0.0635,     0.0095,     0.0189,     0.1079,     0.0227,     0.1260,     0.0120,     0.0791,     0.0540,     0.0287,     0.0000],
        [    0.3086,     0.0022,     0.0048,     0.0008,     0.0488,     0.0157,     0.0216,     0.1133,     0.1514,     0.0361,     0.0134,     0.0088,     0.0815,     0.1670,     0.0272]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0001,     -0.0718,     -0.0366,     -0.0708,     -0.0461,     -0.0732,     -0.0757,     -0.0432,     -0.0483,     -0.0237,     -0.0728,     -0.0347,     -0.0486,     -0.0459,     -0.0479],
        [     0.0050,     -6.9375,     -3.6250,     -6.8438,     -2.5000,     -7.0312,     -7.8438,     -4.5312,     -2.0781,     -1.6875,     -6.9688,     -4.1875,     -4.3125,     -1.7422,     -4.7500],
        [    -0.0121,     -2.3906,     -2.0156,     -2.6719,     -0.5898,     -1.2188,     -0.2637,      1.2734,     -0.2852,     -2.0781,     -2.5312,     -1.6797,      1.3281,      0.0996,      0.2090],
        [    -0.0150,     -4.1250,     -1.6875,     -4.2188,     -0.9844,     -2.7344,     -1.9531,      0.0040,     -1.9844,     -0.8516,     -3.1719,     -1.8281,      0.3164,     -1.3594,     -0.5586],
        [    -0.0153,     -4.0000,     -1.2578,     -3.7031,     -0.5742,     -3.6719,     -2.7500,     -0.5273,     -2.0469,     -1.4141,     -4.4375,     -2.3281,     -0.9141,     -1.5859,     -0.6328],
        [    -0.0098,     -4.6250,     -2.2500,     -5.0625,     -2.0469,     -3.7969,     -2.8438,     -1.1641,     -1.8125,     -1.2031,     -3.2812,     -2.1875,     -1.3828,     -1.4922,     -2.5781],
        [    -0.0034,     -4.5938,     -3.4062,     -5.5625,     -1.7031,     -2.9844,     -1.8047,     -0.6875,     -0.4805,     -1.8984,     -2.9688,     -3.2188,     -1.7422,     -0.5586,     -2.5781],
        [    -0.0036,     -6.0938,     -4.0312,     -6.7812,     -2.3438,     -4.6875,     -4.3750,     -2.4062,     -1.2188,     -1.4375,     -4.3438,     -3.5938,     -2.0781,     -0.9023,     -3.9531],
        [    -0.0110,     -4.4062,     -1.5000,     -4.6875,     -1.9141,     -3.6875,     -2.9844,     -1.2812,     -2.8750,     -1.2422,     -3.5000,     -1.3984,     -2.0938,     -2.6875,     -1.9531],
        [    -0.0009,     -2.5000,     -3.3125,     -2.8438,      0.0132,     -2.0000,     -1.7734,     -0.4297,      1.6016,     -1.0781,     -2.4219,     -3.6250,     -0.1680,      1.7578,     -1.1016],
        [    -0.0006,     -6.3750,     -3.5625,     -6.4062,     -1.4453,     -6.2500,     -6.3750,     -3.4688,     -0.9492,     -1.8047,     -5.7812,     -4.2188,     -3.4375,     -0.6523,     -4.5000],
        [    -0.0059,     -1.5469,     -0.8828,     -2.5938,     -1.2969,      0.3906,      1.1328,      1.3047,     -1.2422,     -0.7734,      0.3711,      0.0315,      1.1641,     -1.0391,     -0.2168],
        [    -0.0047,     -7.7188,     -4.7812,     -8.2500,     -3.4219,     -6.6562,     -6.7812,     -3.8906,     -2.5938,     -1.6172,     -6.0312,     -4.4688,     -3.3750,     -2.1250,     -5.1875],
        [    -0.0121,     -4.3438,     -1.6406,     -4.5938,     -1.8359,     -3.7344,     -3.0469,     -1.3047,     -2.8594,     -1.1484,     -3.5000,     -1.6094,     -1.9922,     -2.6250,     -1.8828],
        [    -0.0003,     -4.9375,     -4.1562,     -5.9688,     -1.8359,     -2.9688,     -2.6562,     -1.0000,     -0.7109,     -2.1406,     -3.1406,     -3.5469,     -1.3281,     -0.6133,     -2.4219]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8547],
        [0.7681],
        [0.8080],
        [0.7855],
        [0.8262],
        [0.7226],
        [0.7528],
        [0.5479],
        [0.3144],
        [0.5241],
        [0.2456],
        [0.7407],
        [0.4024],
        [0.2239]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3984,     0.2441,     0.3574,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9023,     0.0020,     0.0796,     0.0156,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7070,     0.0052,     0.2266,     0.0466,     0.0128,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8789,     0.0015,     0.0645,     0.0133,     0.0013,     0.0425,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8672,     0.0000,     0.0114,     0.0004,     0.0001,     0.1226,     0.0004,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8438,     0.0002,     0.0260,     0.0026,     0.0002,     0.0630,     0.0007,     0.0649,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7188,     0.0008,     0.0505,     0.0059,     0.0042,     0.1426,     0.0082,     0.0649,     0.0032,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6445,     0.0015,     0.1216,     0.0219,     0.0140,     0.1074,     0.0100,     0.0466,     0.0142,     0.0170,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6523,     0.0001,     0.0144,     0.0003,     0.0001,     0.2070,     0.0002,     0.1260,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0275,     0.0064,     0.0515,     0.1006,     0.1553,     0.0016,     0.0253,     0.0013,     0.0791,     0.0835,     0.0664,     0.4023,     0.0000,     0.0000,     0.0000],
        [    0.9219,     0.0001,     0.0130,     0.0008,     0.0002,     0.0354,     0.0003,     0.0269,     0.0000,     0.0001,     0.0000,     0.0000,     0.0031,     0.0000,     0.0000],
        [    0.8125,     0.0003,     0.0312,     0.0020,     0.0018,     0.0894,     0.0028,     0.0427,     0.0012,     0.0014,     0.0009,     0.0015,     0.0112,     0.0024,     0.0000],
        [    0.9531,     0.0000,     0.0116,     0.0006,     0.0022,     0.0134,     0.0015,     0.0039,     0.0008,     0.0009,     0.0019,     0.0007,     0.0017,     0.0018,     0.0077]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0001,     -0.1221,     -0.0544,     -0.0947,     -0.1016,     -0.0381,     -0.0942,     -0.0413,     -0.1230,     -0.1211,     -0.1157,     -0.1235,     -0.0649,     -0.1128,     -0.0776],
        [    -0.0059,    -11.6250,     -5.3750,     -8.8125,     -9.3750,     -3.2188,     -8.6875,     -4.0625,    -12.0625,    -11.5625,    -10.6250,    -11.6875,     -6.1250,    -10.9375,     -7.3438],
        [    -0.0070,     -0.4941,     -0.1138,      0.6523,      0.4219,     -1.4844,      0.1865,     -1.2578,      0.3945,      0.5820,      0.9062,      1.0625,     -1.2578,      0.2480,      1.1094],
        [    -0.0103,     -6.1250,     -2.4375,     -4.0625,     -2.7656,     -2.0625,     -3.0938,     -3.7500,     -3.6875,     -3.7656,     -2.8281,     -3.2812,     -4.0312,     -3.2812,     -2.3438],
        [    -0.0093,     -4.9375,     -1.1484,     -2.7344,     -4.0312,     -1.2969,     -3.9375,     -1.4297,     -5.2500,     -5.6562,     -5.5000,     -5.1875,     -2.9531,     -5.0938,     -3.2500],
        [    -0.0027,     -6.4062,     -2.6094,     -4.1875,     -6.5000,     -3.0312,     -6.3438,     -2.0625,     -7.5625,     -7.4062,     -8.1250,     -7.8125,     -4.0938,     -7.3438,     -4.8125],
        [    -0.0052,    -10.1875,     -4.3438,     -7.5625,     -8.6875,     -1.9609,     -7.8125,     -2.1562,     -9.0625,    -10.1875,    -10.4375,    -11.1250,     -4.8125,     -8.6875,     -7.1562],
        [    -0.0044,     -8.4375,     -3.4844,     -5.7812,     -8.1875,     -2.5938,     -7.1250,     -2.5625,    -10.0625,     -9.0625,     -9.8750,     -9.6250,     -5.0625,     -9.6250,     -5.7500],
        [    -0.0099,     -6.8438,     -2.6719,     -4.8125,     -5.1562,     -1.6250,     -4.5000,     -2.4219,     -5.4375,     -5.3750,     -5.7188,     -5.0312,     -3.6250,     -4.8750,     -3.6406],
        [    -0.0101,     -6.0938,     -1.6797,     -3.3906,     -3.8438,     -1.8047,     -4.1875,     -2.6406,     -3.8281,     -3.6406,     -4.5000,     -3.5312,     -3.9531,     -3.4219,     -2.8906],
        [    -0.0036,     -9.3750,     -3.8125,     -7.7500,     -8.9375,     -1.1562,     -8.0625,     -1.6484,     -9.0625,     -9.5000,    -10.4375,    -11.0625,     -3.7969,     -8.3750,     -7.2188],
        [    -0.0101,     -1.4688,      0.6211,      1.2891,      1.7188,     -2.8281,     -0.0928,     -3.0312,      1.0469,      1.1016,      0.8711,      2.6719,     -3.0938,      0.8594,      1.4375],
        [    -0.0075,     -9.8125,     -4.2812,     -7.0938,     -8.6250,     -3.2656,     -7.9062,     -3.5469,    -10.3750,     -9.4375,    -10.0000,    -10.0625,     -5.6875,     -9.6875,     -6.4062],
        [    -0.0093,     -8.0000,     -3.2656,     -6.0000,     -6.0938,     -2.2188,     -5.6562,     -2.9531,     -6.5625,     -6.3438,     -6.8750,     -6.2812,     -4.2812,     -5.8438,     -4.5000],
        [    -0.0118,    -10.4375,     -4.4062,     -7.4062,     -6.0938,     -4.2812,     -6.4688,     -5.5000,     -7.0625,     -6.9688,     -6.2500,     -7.1875,     -6.3125,     -6.2812,     -4.8125]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9163],
        [0.6581],
        [0.7069],
        [0.5946],
        [0.7377],
        [0.6330],
        [0.6965],
        [0.6493],
        [0.6433],
        [0.6456],
        [0.5508],
        [0.6943],
        [0.6534],
        [0.6204]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0004,     0.0004,     0.0012,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0005,     0.5078,     0.3848,     0.1050,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0840,     0.0010,     0.0028,     0.0069,     0.9023,     0.0043,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0571,     0.0894,     0.0354,     0.0498,     0.5859,     0.0205,     0.1621,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0103,     0.0000,     0.0000,     0.0000,     0.9883,     0.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2334,     0.0352,     0.0728,     0.1279,     0.2754,     0.0400,     0.1357,     0.0192,     0.0598,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0464,     0.0001,     0.0008,     0.0038,     0.7891,     0.0008,     0.0077,     0.0005,     0.1504,     0.0023,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0056,     0.2051,     0.3594,     0.2812,     0.0010,     0.0176,     0.0339,     0.0094,     0.0004,     0.0811,     0.0048,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0223,     0.0000,     0.0000,     0.0001,     0.2578,     0.0013,     0.0009,     0.0016,     0.6562,     0.0004,     0.0566,     0.0039,     0.0000,     0.0000,     0.0000],
        [    0.0085,     0.0000,     0.0000,     0.0000,     0.7461,     0.0000,     0.0001,     0.0000,     0.0933,     0.0000,     0.1494,     0.0011,     0.0000,     0.0000,     0.0000],
        [    0.1035,     0.0029,     0.0124,     0.0297,     0.1621,     0.0084,     0.0206,     0.0027,     0.0198,     0.0471,     0.1426,     0.4258,     0.0025,     0.0198,     0.0000],
        [    0.0017,     0.0000,     0.0000,     0.0000,     0.6680,     0.0000,     0.0000,     0.0000,     0.1885,     0.0000,     0.0527,     0.0002,     0.0000,     0.0898,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,     -0.0259,     -0.0210,     -0.0164,      0.0106,     -0.0157,     -0.0082,     -0.0160,      0.0092,     -0.0157,      0.0041,     -0.0019,     -0.0164,      0.0064,     -0.0078],
        [     0.0003,     -8.0625,     -8.0000,     -6.3125,      4.7500,     -4.2812,     -3.1562,     -4.2188,      4.5625,     -6.0000,      2.4844,     -2.5938,     -4.4688,      3.7344,     -3.2188],
        [    -0.0079,    -11.9375,    -11.0000,     -9.1250,      5.2500,     -5.9062,     -5.1875,     -6.2188,      4.7812,     -7.2500,      1.9062,     -2.2188,     -6.7812,      3.5938,     -4.7812],
        [    -0.0024,     -7.8125,     -7.7500,     -6.7500,      2.6875,     -3.2500,     -4.2188,     -3.6250,      3.1562,     -5.4688,      0.1084,     -2.0469,     -4.2188,      2.2344,     -2.7969],
        [     0.0038,      6.8438,      6.5625,      5.2812,     -2.9688,      2.2031,      2.5625,      2.9062,     -2.5000,      4.5000,     -1.1406,      2.2031,      3.2344,     -2.0469,      2.2188],
        [    -0.0051,     -4.4375,     -3.3906,     -2.5156,      2.3750,     -2.9688,     -0.6719,     -3.4219,      0.2559,     -2.5000,      1.3516,     -0.7930,     -3.2812,      0.3574,     -2.4531],
        [     0.0107,      0.4590,     -0.4688,     -0.1260,      2.3438,     -1.0156,      1.0547,      0.1426,      3.1406,     -0.8477,      2.0156,     -1.3125,      0.5898,      3.0156,     -0.4219],
        [    -0.0095,    -12.2500,    -11.0000,     -8.6250,      4.5625,     -6.2500,     -3.7500,     -6.9688,      2.8750,     -6.3438,      3.1719,     -2.6094,     -7.3125,      2.1094,     -4.9062],
        [    -0.0096,     -1.8984,     -1.1797,     -0.6133,      0.1562,     -1.7734,     -0.5547,     -2.5156,     -1.3750,     -0.0918,      0.4277,      0.7031,     -2.4688,     -1.2578,     -1.6016],
        [    -0.0147,     -5.7812,     -4.0938,     -2.5156,      2.8125,     -4.0625,     -1.8203,     -4.5625,      1.1562,     -3.0469,      1.0938,      1.8125,     -4.6875,      0.8008,     -2.4844],
        [    -0.0030,      3.5938,      4.1562,      3.9062,     -1.7500,      1.1406,      1.7969,      0.5117,     -2.7188,      2.6719,     -0.1670,      1.2969,      0.9883,     -2.0625,      0.8086],
        [     0.0004,     -6.8438,     -6.4062,     -5.8750,      2.4375,     -2.8281,     -3.2344,     -2.6406,      3.3750,     -4.1250,      0.9336,     -1.7422,     -3.2812,      2.1562,     -2.3906],
        [    -0.0121,    -13.0625,    -11.3125,     -8.9375,      4.4688,     -6.5625,     -4.4375,     -7.6250,      2.3750,     -6.5625,      2.8438,     -2.0469,     -8.0625,      1.4922,     -5.2188],
        [    -0.0142,     -3.5781,     -2.1406,     -1.2578,      0.4336,     -2.5312,     -1.6250,     -3.6719,     -1.6641,     -0.8008,      0.3047,      1.4062,     -3.7344,     -1.6719,     -2.1094],
        [    -0.0113,    -11.8125,    -11.4375,     -8.7500,      5.9375,     -7.4688,     -4.6562,     -7.7500,      4.6875,     -6.4688,      3.4062,     -2.1094,     -7.7188,      3.9375,     -5.4688]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7608],
        [0.7144],
        [0.5815],
        [0.0328],
        [0.3280],
        [0.2441],
        [0.3023],
        [0.1024],
        [0.1654],
        [0.0646],
        [0.1747],
        [0.2098],
        [0.0793],
        [0.1536]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0162,     0.9844,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0479,     0.9492,     0.0021,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2832,     0.7070,     0.0049,     0.0045,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0532,     0.9453,     0.0012,     0.0008,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0067,     0.9922,     0.0003,     0.0003,     0.0006,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1050,     0.7773,     0.0161,     0.0151,     0.0041,     0.0510,     0.0292,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0123,     0.9688,     0.0006,     0.0007,     0.0002,     0.0002,     0.0154,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0199,     0.9727,     0.0000,     0.0000,     0.0000,     0.0000,     0.0077,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1069,     0.6797,     0.0110,     0.0160,     0.0001,     0.0029,     0.0051,     0.0131,     0.1660,     0.0013,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0688,     0.9258,     0.0001,     0.0003,     0.0000,     0.0000,     0.0027,     0.0000,     0.0004,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0267,     0.9570,     0.0014,     0.0013,     0.0000,     0.0008,     0.0078,     0.0006,     0.0018,     0.0025,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0187,     0.9531,     0.0007,     0.0010,     0.0003,     0.0003,     0.0243,     0.0001,     0.0002,     0.0020,     0.0002,     0.0000,     0.0003,     0.0000,     0.0000],
        [    0.0288,     0.9492,     0.0000,     0.0000,     0.0000,     0.0001,     0.0201,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1118,     0.4062,     0.0265,     0.0352,     0.0067,     0.0140,     0.1348,     0.0081,     0.0114,     0.0028,     0.0001,     0.0008,     0.0096,     0.0223,     0.2090]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0001,      0.0162,     -0.0427,     -0.0398,     -0.0610,     -0.0356,     -0.0135,     -0.0488,     -0.0337,     -0.0413,     -0.0679,     -0.0894,     -0.0417,     -0.0175,     -0.0004],
        [    -0.0030,      4.0938,     -6.1875,     -7.1875,     -7.4375,     -2.6094,     -1.8906,     -3.6875,     -5.4062,     -4.3438,     -7.4062,    -11.5000,     -3.2031,     -3.3750,      0.8672],
        [    -0.0142,      2.9688,     -3.1406,     -3.4844,     -6.3750,     -2.6094,     -1.8203,     -2.3594,     -2.3750,     -3.9375,     -6.5000,     -7.8125,     -1.7812,     -0.8633,      2.7344],
        [    -0.0133,      0.9062,     -4.0625,     -4.1562,     -7.0000,     -2.1719,     -2.1250,     -2.6094,     -1.9453,     -5.1562,     -8.2500,     -9.3750,     -1.9766,     -0.1045,      1.6484],
        [    -0.0204,      2.8594,     -3.7812,     -4.2812,    -11.0000,     -2.8281,     -5.0312,     -1.1875,      1.2109,     -9.0625,    -13.4375,    -12.8750,     -0.1553,      4.0625,      6.9375],
        [    -0.0051,      5.0000,     -3.0625,     -3.1094,     -2.4531,     -3.8438,      0.8320,     -4.4688,     -4.9688,      0.5312,      0.6797,     -4.5625,     -4.0312,     -4.5000,      0.3926],
        [     0.0044,      2.0000,     -1.8750,     -1.9375,     -3.2344,     -0.7148,     -1.2734,     -0.9609,     -0.1465,     -1.6250,     -1.3750,     -3.9844,     -0.5547,      0.6719,      1.7656],
        [    -0.0164,      4.3438,     -3.1094,     -2.8594,     -3.9375,     -4.0625,      0.2119,     -4.6250,     -4.4375,     -2.1562,     -4.0625,     -6.7188,     -4.0938,     -3.5469,      1.2188],
        [    -0.0188,      3.8750,     -9.0000,     -8.8125,    -11.4375,     -6.1250,     -0.9727,     -9.8125,     -9.4375,     -7.8125,    -11.1875,    -17.6250,     -8.7500,     -6.6875,     -1.0547],
        [    -0.0259,      1.8203,     -2.2969,     -1.9219,     -6.8750,     -3.6406,     -3.0625,     -2.1250,      0.4141,     -4.4375,     -8.6250,     -9.1875,     -1.0703,      2.5156,      4.1250],
        [    -0.0349,      2.5625,     -6.6250,     -5.6250,    -11.7500,     -7.9688,     -3.2812,     -9.0000,     -5.2812,    -10.1250,    -17.5000,    -16.6250,     -7.8125,     -2.3281,      2.0781],
        [    -0.0228,      3.5469,     -2.9531,     -3.0781,     -6.4375,     -3.5938,     -1.2578,     -3.8125,     -2.7031,     -2.3750,     -5.9375,     -8.6875,     -2.7969,     -0.8359,      2.1562],
        [    -0.0183,      3.9219,     -3.2656,     -2.9062,     -4.0938,     -4.1562,      0.2451,     -4.8438,     -4.5625,     -2.2500,     -4.4688,     -7.1562,     -4.2812,     -3.6094,      0.8789],
        [    -0.0204,      3.4688,     -8.1875,     -7.7812,    -10.0625,     -6.3750,     -0.3809,    -10.0625,     -9.4375,     -6.6562,    -10.0000,    -16.1250,     -9.0625,     -7.0312,     -1.7969],
        [    -0.0215,      1.2734,     -1.4609,     -1.1719,     -2.8281,     -2.0938,      0.1670,     -2.6406,     -2.2969,     -3.7031,     -7.0312,     -5.0000,     -2.4688,     -1.6328,      0.6055]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2905],
        [0.2346],
        [0.2474],
        [0.2754],
        [0.1423],
        [0.0992],
        [0.1335],
        [0.0978],
        [0.0125],
        [0.0431],
        [0.0070],
        [0.1017],
        [0.0852],
        [0.0334]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0000,     0.0000,     0.0007,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5742,     0.0006,     0.0007,     0.0006,     0.0048,     0.0018,     0.4160,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1089,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.8906,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6523,     0.0525,     0.0518,     0.0952,     0.0242,     0.0061,     0.1084,     0.0109,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0103,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.4004,     0.0000,     0.5898,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0393,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.9258,     0.0000,     0.0332,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0771,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.4453,     0.0000,     0.4785,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1055,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.7578,     0.0000,     0.1348,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1865,     0.0757,     0.0820,     0.1650,     0.0239,     0.0069,     0.0244,     0.0140,     0.0001,     0.1602,     0.1157,     0.1338,     0.0101,     0.0000,     0.0000],
        [    0.0019,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0183,     0.0000,     0.1147,     0.0000,     0.0000,     0.0000,     0.0000,     0.8633,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,     -0.0125,     -0.0105,     -0.0100,     -0.0076,     -0.0050,      0.0081,     -0.0062,      0.0080,     -0.0204,     -0.0182,     -0.0160,     -0.0033,      0.0105,     -0.0026],
        [    -0.0464,    -11.6875,    -12.6250,    -14.1875,     -8.2500,     -9.7500,      3.0312,    -11.2500,      4.7500,    -18.2500,    -17.3750,    -20.1250,    -10.4375,      6.7500,    -11.0625],
        [    -0.0398,    -13.1250,    -14.1250,    -15.5000,     -9.5000,    -11.6875,      2.1562,    -13.1250,      2.5938,    -19.7500,    -18.8750,    -21.7500,    -12.3125,      4.5312,    -12.7500],
        [    -0.0410,    -14.0000,    -14.9375,    -16.3750,     -9.9375,    -12.2500,      2.0156,    -13.8750,      2.7031,    -20.7500,    -19.7500,    -22.6250,    -13.0000,      4.7188,    -13.4375],
        [    -0.0250,    -11.1875,    -11.6250,    -12.4375,     -8.4375,     -9.9375,      1.5000,    -10.9375,      0.7031,    -16.1250,    -15.5625,    -17.2500,    -10.1250,      2.3281,    -10.4375],
        [    -0.0272,     -9.5000,    -10.5000,    -11.5000,     -7.3438,     -9.5625,      1.8828,    -10.4375,     -0.3184,    -14.5000,    -14.1875,    -16.7500,    -10.0000,      0.9961,    -10.6250],
        [    -0.0050,     -6.8125,     -6.7500,     -6.8125,     -4.7812,     -5.7812,     -0.3262,     -6.3125,      0.0835,     -8.6875,     -7.8125,     -8.8750,     -5.9375,      0.7695,     -5.8750],
        [    -0.0342,    -10.9375,    -12.0000,    -13.1875,     -8.3125,    -10.4375,      2.0625,    -11.6250,      0.8867,    -16.6250,    -16.1250,    -19.0000,    -11.0000,      2.5156,    -11.5000],
        [     0.0239,     -2.5000,     -2.5000,     -1.8984,     -3.2656,     -4.6562,     -1.7656,     -4.0625,     -7.5312,     -2.5156,     -2.7969,     -2.7656,     -4.2188,     -7.7500,     -4.5000],
        [    -0.0596,    -15.7500,    -17.0000,    -19.0000,    -11.1250,    -13.8750,      3.5938,    -15.7500,      3.9844,    -24.0000,    -23.2500,    -27.0000,    -14.7500,      6.4375,    -15.5000],
        [    -0.0430,    -14.8125,    -16.0000,    -17.5000,    -11.0000,    -14.3125,      3.1250,    -15.8125,     -0.2139,    -22.1250,    -21.7500,    -25.1250,    -15.0000,      1.7812,    -15.6875],
        [    -0.0500,    -18.2500,    -19.3750,    -21.2500,    -13.0000,    -16.3750,      1.7031,    -18.5000,      1.7734,    -26.5000,    -25.2500,    -29.1250,    -17.6250,      4.1562,    -18.3750],
        [    -0.0298,     -9.5625,    -10.5625,    -11.6250,     -7.4375,     -9.4375,      1.9453,    -10.4375,      0.2168,    -14.6875,    -14.3125,    -16.8750,     -9.9375,      1.6172,    -10.4375],
        [     0.0276,     -0.8750,     -0.7930,     -0.0938,     -2.0312,     -3.2812,     -2.0000,     -2.5625,     -7.8438,     -0.1260,     -0.4492,     -0.3027,     -2.8906,     -8.3750,     -3.2656],
        [    -0.0459,    -11.6250,    -12.6250,    -14.1250,     -8.6250,     -9.9375,      2.2344,    -11.4375,      4.0625,    -18.0000,    -17.1250,    -19.7500,    -10.6250,      6.0938,    -11.1250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2140],
        [0.1957],
        [0.1829],
        [0.1739],
        [0.1765],
        [0.1422],
        [0.0231],
        [0.1554],
        [0.1397],
        [0.1332],
        [0.1441],
        [0.0159],
        [0.0513],
        [0.0029]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.6328,     0.3672,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.5391,     0.2832,     0.1777,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2305,     0.1167,     0.0796,     0.5742,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1406,     0.0742,     0.0447,     0.3242,     0.4160,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0640,     0.0162,     0.0098,     0.2559,     0.1475,     0.5039,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0270,     0.0052,     0.0028,     0.1187,     0.0278,     0.8164,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0903,     0.0410,     0.0250,     0.2734,     0.3418,     0.1748,     0.0002,     0.0520,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1514,     0.0535,     0.0308,     0.3438,     0.1719,     0.2168,     0.0001,     0.0092,     0.0216,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1426,     0.0520,     0.0294,     0.3320,     0.1934,     0.2119,     0.0001,     0.0104,     0.0159,     0.0118,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1514,     0.0554,     0.0300,     0.3301,     0.1553,     0.2422,     0.0001,     0.0062,     0.0182,     0.0104,     0.0012,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0227,     0.0042,     0.0023,     0.1025,     0.0228,     0.8398,     0.0001,     0.0040,     0.0018,     0.0010,     0.0001,     0.0001,     0.0000,     0.0000],
        [    0.0000,     0.0378,     0.0087,     0.0048,     0.1689,     0.0732,     0.6875,     0.0001,     0.0127,     0.0022,     0.0021,     0.0001,     0.0001,     0.0008,     0.0000],
        [    0.0000,     0.0153,     0.0025,     0.0013,     0.0737,     0.0122,     0.8906,     0.0000,     0.0021,     0.0011,     0.0005,     0.0000,     0.0000,     0.0002,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0001,      0.1377,      0.1396,      0.1377,      0.1377,      0.1406,      0.1191,      0.0991,      0.1216,      0.1328,      0.1318,      0.1279,      0.0967,      0.1074,      0.0918],
        [    -0.0162,     23.1250,     22.5000,     22.1250,     24.1250,     24.0000,     23.0000,     18.0000,     22.1250,     21.7500,     21.7500,     19.7500,     17.8750,     19.8750,     16.5000],
        [    -0.0211,     25.6250,     25.1250,     24.6250,     26.3750,     26.3750,     24.7500,     19.1250,     23.7500,     24.0000,     24.0000,     22.1250,     18.8750,     21.1250,     17.5000],
        [    -0.0212,     25.1250,     24.5000,     24.0000,     25.8750,     25.7500,     24.7500,     18.5000,     23.0000,     23.5000,     23.3750,     21.3750,     18.3750,     20.5000,     16.8750],
        [    -0.0190,     26.3750,     25.6250,     25.2500,     27.2500,     27.2500,     25.7500,     20.5000,     25.1250,     24.7500,     24.8750,     22.7500,     20.3750,     22.6250,     18.8750],
        [    -0.0210,     26.1250,     25.5000,     25.0000,     27.0000,     27.2500,     25.6250,     19.2500,     24.6250,     24.0000,     24.2500,     22.0000,     19.1250,     21.6250,     17.5000],
        [    -0.0151,     22.3750,     21.0000,     20.5000,     23.8750,     23.2500,     24.5000,     16.8750,     21.7500,     20.1250,     20.0000,     17.2500,     16.8750,     19.1250,     15.0625],
        [    -0.0166,     20.0000,     18.3750,     17.7500,     21.5000,     20.1250,     23.5000,     14.0000,     18.2500,     17.5000,     17.0000,     14.1250,     14.0625,     15.9375,     12.1875],
        [    -0.0154,     23.0000,     22.1250,     21.6250,     24.1250,     24.2500,     23.6250,     17.0000,     22.3750,     20.5000,     20.8750,     18.5000,     17.0000,     19.3750,     15.1875],
        [    -0.0240,     26.3750,     25.3750,     24.7500,     27.2500,     26.5000,     26.7500,     19.0000,     23.6250,     24.3750,     24.0000,     21.7500,     18.7500,     21.0000,     17.2500],
        [    -0.0236,     25.8750,     24.8750,     24.2500,     26.7500,     26.1250,     26.2500,     18.3750,     23.2500,     23.6250,     23.3750,     21.1250,     18.2500,     20.5000,     16.6250],
        [    -0.0250,     25.6250,     24.6250,     24.0000,     26.3750,     25.6250,     26.1250,     17.7500,     22.3750,     23.5000,     23.0000,     20.7500,     17.6250,     19.7500,     16.0000],
        [    -0.0162,     19.6250,     18.0000,     17.3750,     21.1250,     19.6250,     23.2500,     13.6875,     17.8750,     17.1250,     16.6250,     13.6875,     13.8125,     15.6250,     11.9375],
        [    -0.0156,     21.3750,     19.8750,     19.3750,     22.8750,     22.0000,     24.2500,     15.2500,     20.2500,     18.5000,     18.5000,     15.4375,     15.3125,     17.5000,     13.3125],
        [    -0.0164,     18.7500,     17.0000,     16.3750,     20.3750,     18.6250,     22.8750,     12.6875,     16.8750,     16.1250,     15.5000,     12.5000,     12.8125,     14.5625,     10.9375]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0001],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0168,     0.9844,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0092,     0.5117,     0.4766,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0056,     0.3418,     0.3184,     0.3340,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0047,     0.2559,     0.2373,     0.2490,     0.2520,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0038,     0.2051,     0.1904,     0.1992,     0.2031,     0.1982,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0025,     0.1660,     0.1543,     0.1621,     0.1631,     0.1611,     0.1904,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0016,     0.1357,     0.1270,     0.1328,     0.1328,     0.1318,     0.1514,     0.1875,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0017,     0.1157,     0.1079,     0.1128,     0.1138,     0.1123,     0.1328,     0.1582,     0.1445,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0014,     0.1006,     0.0933,     0.0981,     0.0986,     0.0972,     0.1143,     0.1377,     0.1260,     0.1328,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0013,     0.0884,     0.0825,     0.0864,     0.0869,     0.0859,     0.1006,     0.1216,     0.1108,     0.1177,     0.1182,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0010,     0.0786,     0.0732,     0.0767,     0.0771,     0.0762,     0.0889,     0.1084,     0.0991,     0.1050,     0.1055,     0.1108,     0.0000,     0.0000,     0.0000],
        [    0.0008,     0.0708,     0.0659,     0.0693,     0.0693,     0.0688,     0.0791,     0.0981,     0.0894,     0.0947,     0.0952,     0.1001,     0.0981,     0.0000,     0.0000],
        [    0.0008,     0.0645,     0.0601,     0.0630,     0.0630,     0.0625,     0.0723,     0.0894,     0.0815,     0.0859,     0.0864,     0.0913,     0.0894,     0.0898,     0.0000],
        [    0.0006,     0.0593,     0.0552,     0.0579,     0.0579,     0.0576,     0.0654,     0.0820,     0.0747,     0.0791,     0.0796,     0.0840,     0.0820,     0.0830,     0.0815]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0352,      0.0354,      0.0354,      0.0349,      0.0356,      0.0330,      0.0364,      0.0361,      0.0356,      0.0361,      0.0366,      0.0364,      0.0364,      0.0366],
        [     0.0026,      4.0625,      4.0000,      4.0312,      4.0625,      4.0312,      4.2188,      4.3750,      4.2812,      4.3438,      4.3438,      4.3750,      4.3750,      4.3750,      4.3750],
        [     0.0027,      4.0312,      3.9531,      4.0000,      4.0312,      4.0000,      4.1875,      4.3125,      4.2500,      4.3125,      4.3125,      4.3438,      4.3125,      4.3438,      4.3125],
        [     0.0026,      4.0938,      4.0312,      4.0938,      4.0938,      4.0625,      4.2500,      4.4062,      4.3125,      4.3750,      4.3750,      4.4062,      4.4062,      4.4062,      4.4062],
        [     0.0027,      4.0000,      3.9219,      3.9688,      3.9844,      3.9531,      4.1562,      4.2812,      4.2188,      4.2812,      4.2500,      4.3125,      4.2812,      4.3125,      4.2812],
        [     0.0027,      3.9844,      3.9219,      3.9688,      3.9844,      3.9531,      4.1562,      4.2812,      4.1875,      4.2500,      4.2500,      4.3125,      4.2812,      4.3125,      4.2812],
        [     0.0023,      4.1875,      4.1250,      4.1562,      4.1875,      4.1562,      4.3438,      4.5000,      4.4375,      4.4688,      4.5000,      4.5312,      4.5000,      4.5312,      4.5000],
        [     0.0017,      4.4375,      4.3750,      4.4062,      4.4062,      4.4062,      4.5625,      4.7812,      4.6875,      4.7188,      4.7500,      4.7812,      4.7812,      4.7812,      4.7500],
        [     0.0023,      4.2188,      4.1250,      4.1875,      4.1875,      4.1562,      4.3438,      4.5000,      4.4375,      4.4688,      4.5000,      4.5312,      4.5312,      4.5312,      4.5000],
        [     0.0021,      4.2500,      4.1875,      4.2188,      4.2188,      4.2188,      4.3750,      4.5625,      4.4688,      4.5312,      4.5312,      4.5938,      4.5625,      4.5625,      4.5625],
        [     0.0022,      4.2500,      4.1875,      4.2500,      4.2500,      4.2188,      4.3750,      4.5625,      4.5000,      4.5312,      4.5625,      4.5938,      4.5625,      4.5938,      4.5625],
        [     0.0020,      4.3750,      4.3125,      4.3438,      4.3438,      4.3438,      4.5000,      4.6875,      4.5938,      4.6562,      4.6562,      4.7188,      4.6875,      4.7188,      4.6875],
        [     0.0017,      4.4375,      4.3750,      4.4062,      4.4062,      4.4062,      4.5312,      4.7500,      4.6562,      4.7188,      4.7188,      4.7812,      4.7500,      4.7812,      4.7500],
        [     0.0018,      4.4062,      4.3438,      4.3750,      4.3750,      4.3750,      4.5000,      4.7188,      4.6250,      4.6875,      4.6875,      4.7500,      4.7188,      4.7188,      4.7188],
        [     0.0016,      4.5312,      4.4688,      4.5000,      4.5000,      4.5000,      4.6250,      4.8438,      4.7500,      4.8125,      4.8125,      4.8750,      4.8438,      4.8438,      4.8438]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0014],
        [    0.0008],
        [    0.0005],
        [    0.0004],
        [    0.0003],
        [    0.0002],
        [    0.0001],
        [    0.0002],
        [    0.0001],
        [    0.0001],
        [    0.0001],
        [    0.0001],
        [    0.0001],
        [    0.0001]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0011,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0005,     0.5000,     0.5000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0003,     0.3320,     0.3320,     0.3340,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0003,     0.2520,     0.2500,     0.2539,     0.2441,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.2021,     0.2012,     0.2031,     0.1963,     0.1973,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.1670,     0.1660,     0.1680,     0.1621,     0.1631,     0.1738,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.1416,     0.1416,     0.1426,     0.1377,     0.1387,     0.1475,     0.1494,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.1260,     0.1260,     0.1270,     0.1221,     0.1230,     0.1309,     0.1318,     0.1128,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.1123,     0.1123,     0.1133,     0.1094,     0.1104,     0.1172,     0.1182,     0.1006,     0.1064,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.1021,     0.1021,     0.1030,     0.0991,     0.1001,     0.1060,     0.1074,     0.0913,     0.0962,     0.0933,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.0933,     0.0933,     0.0938,     0.0903,     0.0913,     0.0967,     0.0981,     0.0835,     0.0879,     0.0854,     0.0864,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.0854,     0.0854,     0.0859,     0.0830,     0.0835,     0.0889,     0.0898,     0.0767,     0.0806,     0.0781,     0.0796,     0.0820,     0.0000,     0.0000],
        [    0.0001,     0.0791,     0.0791,     0.0796,     0.0771,     0.0776,     0.0825,     0.0835,     0.0708,     0.0747,     0.0723,     0.0737,     0.0762,     0.0737,     0.0000],
        [    0.0001,     0.0737,     0.0732,     0.0742,     0.0713,     0.0718,     0.0767,     0.0771,     0.0659,     0.0693,     0.0674,     0.0684,     0.0708,     0.0688,     0.0708]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0001,     -0.1777,     -0.1777,     -0.1777,     -0.1777,     -0.1777,     -0.1777,     -0.1787,     -0.1787,     -0.1787,     -0.1787,     -0.1787,     -0.1797,     -0.1797,     -0.1797],
        [     0.0038,      6.7812,      6.7812,      6.8125,      6.7500,      6.7812,      6.8438,      6.8438,      6.6875,      6.7500,      6.7188,      6.7188,      6.7500,      6.7188,      6.7500],
        [     0.0037,      6.9062,      6.8750,      6.9062,      6.8750,      6.8750,      6.9375,      6.9375,      6.7812,      6.8438,      6.8125,      6.8125,      6.8438,      6.8125,      6.8438],
        [     0.0037,      6.9688,      6.9688,      6.9688,      6.9375,      6.9375,      7.0000,      7.0312,      6.8750,      6.9062,      6.8750,      6.9062,      6.9375,      6.9062,      6.9375],
        [     0.0038,      6.7500,      6.7500,      6.7812,      6.7188,      6.7500,      6.8125,      6.8125,      6.6562,      6.7188,      6.6875,      6.6875,      6.7188,      6.6875,      6.7188],
        [     0.0038,      6.8125,      6.8125,      6.8125,      6.7812,      6.7812,      6.8438,      6.8438,      6.6875,      6.7500,      6.7188,      6.7500,      6.7812,      6.7500,      6.7812],
        [     0.0036,      7.0625,      7.0625,      7.0625,      7.0312,      7.0312,      7.0938,      7.1250,      6.9688,      7.0000,      6.9688,      7.0000,      7.0312,      7.0000,      7.0312],
        [     0.0036,      7.0938,      7.0938,      7.0938,      7.0625,      7.0625,      7.1250,      7.1562,      7.0000,      7.0312,      7.0000,      7.0312,      7.0625,      7.0312,      7.0625],
        [     0.0041,      6.3125,      6.2812,      6.3125,      6.2812,      6.2812,      6.3438,      6.3438,      6.1875,      6.2500,      6.2188,      6.2188,      6.2500,      6.2188,      6.2500],
        [     0.0039,      6.5312,      6.5312,      6.5625,      6.5000,      6.5312,      6.5938,      6.5938,      6.4375,      6.4688,      6.4375,      6.4688,      6.5000,      6.4688,      6.5000],
        [     0.0040,      6.3750,      6.3750,      6.4062,      6.3438,      6.3750,      6.4375,      6.4375,      6.2812,      6.3125,      6.3125,      6.3125,      6.3438,      6.3125,      6.3438],
        [     0.0040,      6.4375,      6.4375,      6.4375,      6.4062,      6.4062,      6.4688,      6.5000,      6.3438,      6.3750,      6.3438,      6.3750,      6.4062,      6.3750,      6.4062],
        [     0.0039,      6.5625,      6.5625,      6.5938,      6.5312,      6.5625,      6.6250,      6.6250,      6.4688,      6.5312,      6.5000,      6.5000,      6.5312,      6.5000,      6.5312],
        [     0.0040,      6.4062,      6.4062,      6.4375,      6.3750,      6.4062,      6.4688,      6.4688,      6.3125,      6.3750,      6.3438,      6.3438,      6.3750,      6.3438,      6.3750],
        [     0.0039,      6.5938,      6.5938,      6.5938,      6.5625,      6.5625,      6.6250,      6.6562,      6.4688,      6.5312,      6.5000,      6.5312,      6.5625,      6.5312,      6.5625]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0840],
        [0.0836],
        [0.0835],
        [0.0835],
        [0.0835],
        [0.0834],
        [0.0834],
        [0.0834],
        [0.0834],
        [0.0834],
        [0.0834],
        [0.0834],
        [0.0834],
        [0.0834]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0001,     -0.0947,     -0.0947,     -0.0947,     -0.0947,     -0.0947,     -0.0947,     -0.0947,     -0.0947,     -0.0947,     -0.0947,     -0.0947,     -0.0947,     -0.0947,     -0.0947],
        [     0.0664,    -42.5000,    -42.5000,    -42.5000,    -42.5000,    -42.5000,    -42.5000,    -42.5000,    -42.5000,    -42.5000,    -42.5000,    -42.5000,    -42.5000,    -42.5000,    -42.5000],
        [     0.0664,    -42.5000,    -42.5000,    -42.5000,    -42.5000,    -42.5000,    -42.5000,    -42.5000,    -42.5000,    -42.5000,    -42.5000,    -42.5000,    -42.5000,    -42.5000,    -42.5000],
        [     0.0669,    -42.7500,    -42.7500,    -42.7500,    -42.7500,    -42.7500,    -42.7500,    -42.7500,    -42.7500,    -42.7500,    -42.7500,    -42.7500,    -42.7500,    -42.7500,    -42.7500],
        [     0.0664,    -42.5000,    -42.5000,    -42.5000,    -42.5000,    -42.5000,    -42.5000,    -42.5000,    -42.2500,    -42.2500,    -42.2500,    -42.2500,    -42.2500,    -42.2500,    -42.2500],
        [     0.0664,    -42.5000,    -42.5000,    -42.5000,    -42.5000,    -42.5000,    -42.5000,    -42.5000,    -42.5000,    -42.5000,    -42.5000,    -42.5000,    -42.5000,    -42.5000,    -42.5000],
        [     0.0669,    -43.0000,    -43.0000,    -43.0000,    -43.0000,    -43.0000,    -43.0000,    -43.0000,    -43.0000,    -43.0000,    -43.0000,    -43.0000,    -43.0000,    -43.0000,    -43.0000],
        [     0.0669,    -43.0000,    -43.0000,    -43.0000,    -43.0000,    -43.0000,    -43.0000,    -43.0000,    -43.0000,    -43.0000,    -43.0000,    -43.0000,    -43.0000,    -43.0000,    -43.0000],
        [     0.0659,    -41.7500,    -41.7500,    -41.7500,    -41.7500,    -41.7500,    -41.7500,    -41.7500,    -41.7500,    -41.7500,    -41.5000,    -41.7500,    -41.7500,    -41.7500,    -41.7500],
        [     0.0664,    -42.2500,    -42.2500,    -42.2500,    -42.0000,    -42.2500,    -42.2500,    -42.2500,    -42.0000,    -42.0000,    -42.0000,    -42.0000,    -42.0000,    -42.0000,    -42.0000],
        [     0.0664,    -42.0000,    -42.0000,    -42.0000,    -41.7500,    -41.7500,    -42.0000,    -42.0000,    -41.7500,    -41.7500,    -41.7500,    -41.7500,    -41.7500,    -41.7500,    -41.7500],
        [     0.0664,    -42.0000,    -42.0000,    -42.0000,    -42.0000,    -42.0000,    -42.0000,    -42.0000,    -42.0000,    -42.0000,    -42.0000,    -42.0000,    -42.0000,    -42.0000,    -42.0000],
        [     0.0664,    -42.2500,    -42.2500,    -42.2500,    -42.2500,    -42.2500,    -42.2500,    -42.2500,    -42.2500,    -42.2500,    -42.2500,    -42.2500,    -42.2500,    -42.2500,    -42.2500],
        [     0.0664,    -42.0000,    -42.0000,    -42.0000,    -42.0000,    -42.0000,    -42.0000,    -42.0000,    -42.0000,    -42.0000,    -42.0000,    -42.0000,    -42.0000,    -42.0000,    -42.0000],
        [     0.0664,    -42.2500,    -42.2500,    -42.2500,    -42.2500,    -42.2500,    -42.2500,    -42.2500,    -42.2500,    -42.2500,    -42.2500,    -42.2500,    -42.2500,    -42.2500,    -42.2500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5877],
        [0.5855],
        [0.5847],
        [0.5845],
        [0.5843],
        [0.5840],
        [0.5839],
        [0.5840],
        [0.5839],
        [0.5839],
        [0.5838],
        [0.5837],
        [0.5837],
        [0.5837]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.4980,     0.5039,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3340,     0.3359,     0.3301,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2461,     0.2480,     0.2432,     0.2617,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1973,     0.1992,     0.1943,     0.2100,     0.2002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1660,     0.1680,     0.1641,     0.1768,     0.1689,     0.1562,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1426,     0.1445,     0.1406,     0.1523,     0.1445,     0.1348,     0.1396,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1211,     0.1221,     0.1196,     0.1289,     0.1230,     0.1143,     0.1187,     0.1523,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1064,     0.1074,     0.1050,     0.1133,     0.1079,     0.1001,     0.1040,     0.1338,     0.1226,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0938,     0.0947,     0.0928,     0.1001,     0.0952,     0.0884,     0.0923,     0.1182,     0.1084,     0.1162,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0845,     0.0854,     0.0835,     0.0903,     0.0859,     0.0801,     0.0830,     0.1064,     0.0977,     0.1050,     0.0981,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0771,     0.0776,     0.0762,     0.0820,     0.0781,     0.0728,     0.0757,     0.0972,     0.0894,     0.0957,     0.0898,     0.0884,     0.0000,     0.0000],
        [    0.0000,     0.0708,     0.0713,     0.0698,     0.0752,     0.0718,     0.0669,     0.0693,     0.0889,     0.0815,     0.0879,     0.0820,     0.0806,     0.0835,     0.0000],
        [    0.0000,     0.0654,     0.0659,     0.0645,     0.0698,     0.0664,     0.0618,     0.0645,     0.0825,     0.0757,     0.0811,     0.0762,     0.0747,     0.0771,     0.0732]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0001,      0.0588,      0.0588,      0.0588,      0.0588,      0.0588,      0.0588,      0.0588,      0.0588,      0.0588,      0.0591,      0.0588,      0.0591,      0.0591,      0.0588],
        [    -0.0398,     28.0000,     28.0000,     28.0000,     28.1250,     28.0000,     28.0000,     28.0000,     28.2500,     28.1250,     28.2500,     28.1250,     28.1250,     28.2500,     28.1250],
        [    -0.0398,     28.0000,     28.0000,     28.0000,     28.1250,     28.0000,     28.0000,     28.0000,     28.2500,     28.1250,     28.2500,     28.2500,     28.1250,     28.2500,     28.1250],
        [    -0.0398,     28.0000,     28.0000,     28.0000,     28.1250,     28.0000,     28.0000,     28.0000,     28.2500,     28.1250,     28.2500,     28.2500,     28.1250,     28.2500,     28.1250],
        [    -0.0398,     28.0000,     28.0000,     28.0000,     28.1250,     28.0000,     28.0000,     28.0000,     28.2500,     28.1250,     28.2500,     28.1250,     28.1250,     28.1250,     28.1250],
        [    -0.0398,     28.0000,     28.0000,     28.0000,     28.1250,     28.0000,     28.0000,     28.0000,     28.2500,     28.1250,     28.2500,     28.1250,     28.1250,     28.2500,     28.1250],
        [    -0.0398,     28.1250,     28.1250,     28.1250,     28.1250,     28.1250,     28.0000,     28.1250,     28.3750,     28.2500,     28.2500,     28.2500,     28.2500,     28.2500,     28.2500],
        [    -0.0398,     28.1250,     28.1250,     28.1250,     28.1250,     28.1250,     28.0000,     28.1250,     28.3750,     28.2500,     28.3750,     28.2500,     28.2500,     28.2500,     28.2500],
        [    -0.0398,     27.8750,     27.8750,     27.8750,     28.0000,     27.8750,     27.8750,     27.8750,     28.1250,     28.0000,     28.1250,     28.0000,     28.0000,     28.1250,     28.0000],
        [    -0.0398,     28.0000,     28.0000,     28.0000,     28.0000,     28.0000,     27.8750,     28.0000,     28.2500,     28.1250,     28.1250,     28.1250,     28.1250,     28.1250,     28.1250],
        [    -0.0398,     28.0000,     28.0000,     27.8750,     28.0000,     28.0000,     27.8750,     27.8750,     28.1250,     28.1250,     28.1250,     28.1250,     28.1250,     28.1250,     28.0000],
        [    -0.0398,     28.0000,     28.0000,     28.0000,     28.0000,     28.0000,     27.8750,     28.0000,     28.2500,     28.1250,     28.1250,     28.1250,     28.1250,     28.1250,     28.1250],
        [    -0.0398,     28.0000,     28.0000,     28.0000,     28.1250,     28.0000,     28.0000,     28.0000,     28.2500,     28.1250,     28.2500,     28.1250,     28.1250,     28.2500,     28.1250],
        [    -0.0398,     28.0000,     28.0000,     28.0000,     28.0000,     28.0000,     27.8750,     28.0000,     28.2500,     28.1250,     28.2500,     28.1250,     28.1250,     28.1250,     28.1250],
        [    -0.0398,     28.0000,     28.0000,     28.0000,     28.1250,     28.0000,     28.0000,     28.0000,     28.2500,     28.1250,     28.2500,     28.1250,     28.1250,     28.2500,     28.1250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0001],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(groupon:0.0035groupon:0.0036groupon:0.0036groupon:0.0036groupon:0.0036groupon:0.0036groupon:0.0036groupon:0.0036)
groupon
------
		(groupon:0.0036groupon:0.0036groupon:0.0036groupon:0.0036groupon:0.0036groupon:0.0036groupon:0.0036groupon:0.0037)
groupongroupongroupongroupongroupongroupongroupongroupongrouponahimeahimegrouponahimegrouponahime
@ 550 train 5.5195 , allloss: 5.5195, dt: 1177.20ms, fracRes: 0.0978, norm(attn): 1.2031, norm(output): 1.0078, norm(x): 1.0569, norm(y): 0.9965, norm:0.4336, tok/sec: 111342.50, flops:116.89, batch-reuse:1
@ 551 train 5.5991 , allloss: 5.5991, dt: 685.42ms, fracRes: 0.0967, norm(attn): 1.1953, norm(output): 1.0078, norm(x): 1.0534, norm(y): 0.9965, norm:0.3992, tok/sec: 191228.93, flops:200.75, batch-reuse:1
@ 552 train 5.4500 , allloss: 5.4500, dt: 698.79ms, fracRes: 0.0974, norm(attn): 1.1719, norm(output): 0.9922, norm(x): 1.0377, norm(y): 0.9965, norm:0.4343, tok/sec: 187568.64, flops:196.91, batch-reuse:1
@ 553 train 5.5847 , allloss: 5.5847, dt: 692.91ms, fracRes: 0.0980, norm(attn): 1.2344, norm(output): 1.0000, norm(x): 1.0480, norm(y): 0.9965, norm:0.4055, tok/sec: 189160.82, flops:198.58, batch-reuse:1
@ 554 train 5.4671 , allloss: 5.4671, dt: 682.08ms, fracRes: 0.0986, norm(attn): 1.2422, norm(output): 1.0078, norm(x): 1.0565, norm(y): 0.9965, norm:0.3837, tok/sec: 192163.92, flops:201.73, batch-reuse:1
@ 555 train 5.5132 , allloss: 5.5132, dt: 705.25ms, fracRes: 0.0968, norm(attn): 1.2500, norm(output): 1.0078, norm(x): 1.0620, norm(y): 0.9963, norm:0.4393, tok/sec: 185853.08, flops:195.11, batch-reuse:1
@ 556 train 5.4487 , allloss: 5.4487, dt: 698.13ms, fracRes: 0.0983, norm(attn): 1.2422, norm(output): 1.0000, norm(x): 1.0463, norm(y): 0.9965, norm:0.4667, tok/sec: 187747.81, flops:197.10, batch-reuse:1
@ 557 train 5.5273 , allloss: 5.5273, dt: 708.48ms, fracRes: 0.0963, norm(attn): 1.2422, norm(output): 0.9961, norm(x): 1.0362, norm(y): 0.9964, norm:0.4167, tok/sec: 185004.17, flops:194.22, batch-reuse:1
@ 558 train 5.6913 , allloss: 5.6913, dt: 703.84ms, fracRes: 0.0932, norm(attn): 1.2266, norm(output): 1.0000, norm(x): 1.0389, norm(y): 0.9963, norm:0.3968, tok/sec: 186223.00, flops:195.50, batch-reuse:1
@ 559 train 5.7840 , allloss: 5.7840, dt: 711.90ms, fracRes: 0.0912, norm(attn): 1.2266, norm(output): 0.9922, norm(x): 1.0288, norm(y): 0.9963, norm:0.5369, tok/sec: 184114.58, flops:193.28, batch-reuse:1
@ 560 train 5.6818 , allloss: 5.6818, dt: 714.16ms, fracRes: 0.0920, norm(attn): 1.2344, norm(output): 0.9922, norm(x): 1.0293, norm(y): 0.9963, norm:0.6287, tok/sec: 183531.95, flops:192.67, batch-reuse:1
@ 561 train 5.8042 , allloss: 5.8042, dt: 711.84ms, fracRes: 0.0932, norm(attn): 1.2188, norm(output): 1.0000, norm(x): 1.0407, norm(y): 0.9963, norm:0.9367, tok/sec: 184131.29, flops:193.30, batch-reuse:1
@ 562 train 5.7171 , allloss: 5.7171, dt: 688.10ms, fracRes: 0.0931, norm(attn): 1.2109, norm(output): 0.9766, norm(x): 1.0201, norm(y): 0.9962, norm:0.9788, tok/sec: 190484.11, flops:199.97, batch-reuse:1
@ 563 train 5.7627 , allloss: 5.7627, dt: 695.55ms, fracRes: 0.0940, norm(attn): 1.1953, norm(output): 0.9766, norm(x): 1.0231, norm(y): 0.9963, norm:0.5306, tok/sec: 188444.27, flops:197.83, batch-reuse:1
@ 564 train 5.6109 , allloss: 5.6109, dt: 697.99ms, fracRes: 0.0944, norm(attn): 1.1562, norm(output): 0.9883, norm(x): 1.0260, norm(y): 0.9963, norm:0.5688, tok/sec: 187783.72, flops:197.14, batch-reuse:1
@ 565 train 5.5528 , allloss: 5.5528, dt: 696.08ms, fracRes: 0.0940, norm(attn): 1.1328, norm(output): 0.9766, norm(x): 1.0279, norm(y): 0.9963, norm:0.6383, tok/sec: 188300.98, flops:197.68, batch-reuse:1
@ 566 train 5.6981 , allloss: 5.6981, dt: 694.10ms, fracRes: 0.0941, norm(attn): 1.1172, norm(output): 0.9844, norm(x): 1.0258, norm(y): 0.9962, norm:0.7216, tok/sec: 188836.27, flops:198.24, batch-reuse:1
@ 567 train 5.7141 , allloss: 5.7141, dt: 694.39ms, fracRes: 0.0946, norm(attn): 1.0859, norm(output): 0.9531, norm(x): 1.0146, norm(y): 0.9962, norm:0.4703, tok/sec: 188759.11, flops:198.16, batch-reuse:1
@ 568 train 5.7482 , allloss: 5.7482, dt: 696.33ms, fracRes: 0.0949, norm(attn): 1.0625, norm(output): 0.9492, norm(x): 1.0051, norm(y): 0.9961, norm:0.4431, tok/sec: 188231.28, flops:197.61, batch-reuse:1
@ 569 train 5.6892 , allloss: 5.6892, dt: 711.82ms, fracRes: 0.0953, norm(attn): 1.0625, norm(output): 0.9336, norm(x): 0.9920, norm(y): 0.9962, norm:0.4289, tok/sec: 184136.04, flops:193.31, batch-reuse:1
@ 570 train 5.6271 , allloss: 5.6271, dt: 683.21ms, fracRes: 0.0944, norm(attn): 1.0781, norm(output): 0.9492, norm(x): 1.0080, norm(y): 0.9962, norm:0.3932, tok/sec: 191848.14, flops:201.40, batch-reuse:1
@ 571 train 5.5911 , allloss: 5.5911, dt: 696.30ms, fracRes: 0.0964, norm(attn): 1.0859, norm(output): 0.9531, norm(x): 0.9974, norm(y): 0.9962, norm:0.4289, tok/sec: 188241.34, flops:197.62, batch-reuse:1
@ 572 train 5.5668 , allloss: 5.5668, dt: 698.03ms, fracRes: 0.0963, norm(attn): 1.0625, norm(output): 0.9492, norm(x): 0.9926, norm(y): 0.9962, norm:0.3501, tok/sec: 187774.55, flops:197.13, batch-reuse:1
@ 573 train 5.6364 , allloss: 5.6364, dt: 701.63ms, fracRes: 0.0961, norm(attn): 1.0547, norm(output): 0.9414, norm(x): 0.9923, norm(y): 0.9962, norm:0.4276, tok/sec: 186809.48, flops:196.11, batch-reuse:1
@ 574 train 5.6414 , allloss: 5.6414, dt: 695.43ms, fracRes: 0.0966, norm(attn): 1.0469, norm(output): 0.9453, norm(x): 0.9888, norm(y): 0.9962, norm:0.4503, tok/sec: 188477.09, flops:197.86, batch-reuse:1
@ 575 train 5.5734 , allloss: 5.5734, dt: 703.43ms, fracRes: 0.0969, norm(attn): 1.0625, norm(output): 0.9336, norm(x): 0.9748, norm(y): 0.9962, norm:0.4464, tok/sec: 186333.40, flops:195.61, batch-reuse:1
@ 576 train 5.5925 , allloss: 5.5925, dt: 701.12ms, fracRes: 0.0979, norm(attn): 1.0547, norm(output): 0.9102, norm(x): 0.9580, norm(y): 0.9963, norm:0.7055, tok/sec: 186946.25, flops:196.26, batch-reuse:1
@ 577 train 5.6288 , allloss: 5.6288, dt: 702.21ms, fracRes: 0.0959, norm(attn): 1.0547, norm(output): 0.9102, norm(x): 0.9583, norm(y): 0.9962, norm:0.4346, tok/sec: 186656.55, flops:195.95, batch-reuse:1
@ 578 train 5.5913 , allloss: 5.5913, dt: 694.60ms, fracRes: 0.0950, norm(attn): 1.0156, norm(output): 0.9062, norm(x): 0.9617, norm(y): 0.9961, norm:0.4577, tok/sec: 188701.97, flops:198.10, batch-reuse:1
@ 579 train 5.5907 , allloss: 5.5907, dt: 709.47ms, fracRes: 0.0960, norm(attn): 1.0000, norm(output): 0.8906, norm(x): 0.9488, norm(y): 0.9962, norm:0.4117, tok/sec: 184745.36, flops:193.95, batch-reuse:1
@ 580 train 5.6179 , allloss: 5.6179, dt: 705.71ms, fracRes: 0.0956, norm(attn): 0.9531, norm(output): 0.8789, norm(x): 0.9357, norm(y): 0.9962, norm:0.4966, tok/sec: 185730.83, flops:194.98, batch-reuse:1
@ 581 train 5.5818 , allloss: 5.5818, dt: 709.87ms, fracRes: 0.0953, norm(attn): 1.0625, norm(output): 0.8945, norm(x): 0.9503, norm(y): 0.9960, norm:0.4964, tok/sec: 184641.74, flops:193.84, batch-reuse:1
@ 582 train 5.5476 , allloss: 5.5476, dt: 696.88ms, fracRes: 0.0960, norm(attn): 1.0703, norm(output): 0.8984, norm(x): 0.9513, norm(y): 0.9958, norm:0.4903, tok/sec: 188083.23, flops:197.45, batch-reuse:1
@ 583 train 5.5058 , allloss: 5.5058, dt: 708.54ms, fracRes: 0.0978, norm(attn): 1.0938, norm(output): 0.9141, norm(x): 0.9611, norm(y): 0.9958, norm:0.4054, tok/sec: 184989.86, flops:194.20, batch-reuse:1
@ 584 train 5.6193 , allloss: 5.6193, dt: 705.00ms, fracRes: 0.0969, norm(attn): 1.1172, norm(output): 0.9062, norm(x): 0.9632, norm(y): 0.9958, norm:0.4189, tok/sec: 185916.43, flops:195.18, batch-reuse:1
@ 585 train 5.5561 , allloss: 5.5561, dt: 696.31ms, fracRes: 0.0967, norm(attn): 1.1094, norm(output): 0.8984, norm(x): 0.9561, norm(y): 0.9958, norm:0.3856, tok/sec: 188237.86, flops:197.61, batch-reuse:1
@ 586 train 5.5778 , allloss: 5.5778, dt: 683.99ms, fracRes: 0.0964, norm(attn): 1.0938, norm(output): 0.9102, norm(x): 0.9583, norm(y): 0.9958, norm:0.4210, tok/sec: 191629.80, flops:201.17, batch-reuse:1
@ 587 train 5.5999 , allloss: 5.5999, dt: 702.31ms, fracRes: 0.0967, norm(attn): 1.0938, norm(output): 0.8867, norm(x): 0.9365, norm(y): 0.9958, norm:0.3614, tok/sec: 186629.94, flops:195.92, batch-reuse:1
@ 588 train 5.6360 , allloss: 5.6360, dt: 699.83ms, fracRes: 0.0959, norm(attn): 1.0781, norm(output): 0.8750, norm(x): 0.9313, norm(y): 0.9957, norm:0.3796, tok/sec: 187290.29, flops:196.62, batch-reuse:1
@ 589 train 5.6005 , allloss: 5.6005, dt: 699.28ms, fracRes: 0.0954, norm(attn): 1.0703, norm(output): 0.8789, norm(x): 0.9302, norm(y): 0.9956, norm:0.3891, tok/sec: 187439.33, flops:196.77, batch-reuse:1
@ 590 train 5.6201 , allloss: 5.6201, dt: 706.32ms, fracRes: 0.0958, norm(attn): 1.0781, norm(output): 0.8750, norm(x): 0.9281, norm(y): 0.9956, norm:0.4817, tok/sec: 185570.58, flops:194.81, batch-reuse:1
@ 591 train 5.5479 , allloss: 5.5479, dt: 693.16ms, fracRes: 0.0958, norm(attn): 1.0625, norm(output): 0.8711, norm(x): 0.9255, norm(y): 0.9955, norm:0.6149, tok/sec: 189093.54, flops:198.51, batch-reuse:1
@ 592 train 5.5928 , allloss: 5.5928, dt: 694.25ms, fracRes: 0.0950, norm(attn): 1.0703, norm(output): 0.8789, norm(x): 0.9341, norm(y): 0.9955, norm:0.7154, tok/sec: 188797.42, flops:198.20, batch-reuse:1
@ 593 train 5.5853 , allloss: 5.5853, dt: 690.09ms, fracRes: 0.0958, norm(attn): 1.0469, norm(output): 0.8711, norm(x): 0.9231, norm(y): 0.9955, norm:0.6295, tok/sec: 189935.71, flops:199.39, batch-reuse:1
@ 594 train 5.8197 , allloss: 5.8197, dt: 691.59ms, fracRes: 0.0943, norm(attn): 1.0078, norm(output): 0.8750, norm(x): 0.9238, norm(y): 0.9954, norm:0.7203, tok/sec: 189523.52, flops:198.96, batch-reuse:1
@ 595 train 5.5019 , allloss: 5.5019, dt: 696.84ms, fracRes: 0.0950, norm(attn): 1.0156, norm(output): 0.8594, norm(x): 0.9148, norm(y): 0.9955, norm:0.5186, tok/sec: 188093.79, flops:197.46, batch-reuse:1
@ 596 train 5.5560 , allloss: 5.5560, dt: 691.05ms, fracRes: 0.0950, norm(attn): 1.0078, norm(output): 0.8555, norm(x): 0.9141, norm(y): 0.9954, norm:0.5593, tok/sec: 189670.78, flops:199.12, batch-reuse:1
@ 597 train 5.5615 , allloss: 5.5615, dt: 696.05ms, fracRes: 0.0959, norm(attn): 1.0000, norm(output): 0.8672, norm(x): 0.9198, norm(y): 0.9954, norm:0.4032, tok/sec: 188307.17, flops:197.69, batch-reuse:1
@ 598 train 5.6000 , allloss: 5.6000, dt: 693.19ms, fracRes: 0.0956, norm(attn): 1.0078, norm(output): 0.8750, norm(x): 0.9266, norm(y): 0.9954, norm:0.4400, tok/sec: 189085.54, flops:198.50, batch-reuse:1
@ 599 train 5.5695 , allloss: 5.5695, dt: 692.24ms, fracRes: 0.0953, norm(attn): 1.0078, norm(output): 0.8750, norm(x): 0.9267, norm(y): 0.9953, norm:0.5298, tok/sec: 189345.13, flops:198.77, batch-reuse:1
@ 600 train 5.5333 , allloss: 5.5333, dt: 705.12ms, fracRes: 0.0963, norm(attn): 1.0391, norm(output): 0.8711, norm(x): 0.9172, norm(y): 0.9954, norm:0.4084, tok/sec: 185886.63, flops:195.14, batch-reuse:1
@ 601 train 5.5998 , allloss: 5.5998, dt: 708.31ms, fracRes: 0.0962, norm(attn): 1.0078, norm(output): 0.8633, norm(x): 0.9115, norm(y): 0.9953, norm:0.4235, tok/sec: 185049.20, flops:194.26, batch-reuse:1
@ 602 train 5.6029 , allloss: 5.6029, dt: 710.08ms, fracRes: 0.0965, norm(attn): 0.9961, norm(output): 0.8438, norm(x): 0.9055, norm(y): 0.9952, norm:0.5038, tok/sec: 184586.93, flops:193.78, batch-reuse:1
@ 603 train 5.5367 , allloss: 5.5367, dt: 696.14ms, fracRes: 0.0971, norm(attn): 0.9961, norm(output): 0.8359, norm(x): 0.8961, norm(y): 0.9951, norm:0.4903, tok/sec: 188283.44, flops:197.66, batch-reuse:1
@ 604 train 5.4460 , allloss: 5.4460, dt: 702.38ms, fracRes: 0.0968, norm(attn): 0.9961, norm(output): 0.8281, norm(x): 0.8901, norm(y): 0.9952, norm:0.3711, tok/sec: 186611.82, flops:195.91, batch-reuse:1
@ 605 train 5.4483 , allloss: 5.4483, dt: 699.46ms, fracRes: 0.0973, norm(attn): 0.9961, norm(output): 0.8281, norm(x): 0.8871, norm(y): 0.9953, norm:0.4017, tok/sec: 187390.07, flops:196.72, batch-reuse:1
@ 606 train 5.5026 , allloss: 5.5026, dt: 705.43ms, fracRes: 0.0964, norm(attn): 0.9922, norm(output): 0.8359, norm(x): 0.8913, norm(y): 0.9953, norm:0.4183, tok/sec: 185804.14, flops:195.06, batch-reuse:1
@ 607 train 5.4893 , allloss: 5.4893, dt: 705.14ms, fracRes: 0.0961, norm(attn): 0.9531, norm(output): 0.8203, norm(x): 0.8844, norm(y): 0.9953, norm:0.3568, tok/sec: 185880.98, flops:195.14, batch-reuse:1
@ 608 train 5.4320 , allloss: 5.4320, dt: 702.50ms, fracRes: 0.0955, norm(attn): 0.9336, norm(output): 0.8164, norm(x): 0.8758, norm(y): 0.9952, norm:0.3763, tok/sec: 186578.19, flops:195.87, batch-reuse:1
@ 609 train 5.4762 , allloss: 5.4762, dt: 695.30ms, fracRes: 0.0957, norm(attn): 0.9336, norm(output): 0.8125, norm(x): 0.8746, norm(y): 0.9952, norm:0.3713, tok/sec: 188511.54, flops:197.90, batch-reuse:1
@ 610 train 5.6485 , allloss: 5.6485, dt: 695.02ms, fracRes: 0.0959, norm(attn): 0.9336, norm(output): 0.8125, norm(x): 0.8780, norm(y): 0.9952, norm:0.5207, tok/sec: 188587.32, flops:197.98, batch-reuse:1
@ 611 train 5.5106 , allloss: 5.5106, dt: 695.52ms, fracRes: 0.0957, norm(attn): 0.9336, norm(output): 0.8203, norm(x): 0.8780, norm(y): 0.9953, norm:0.4480, tok/sec: 188452.08, flops:197.84, batch-reuse:1
@ 612 train 5.5160 , allloss: 5.5160, dt: 704.90ms, fracRes: 0.0969, norm(attn): 0.8984, norm(output): 0.8125, norm(x): 0.8692, norm(y): 0.9954, norm:0.4828, tok/sec: 185944.16, flops:195.20, batch-reuse:1
@ 613 train 5.5778 , allloss: 5.5778, dt: 699.50ms, fracRes: 0.0974, norm(attn): 0.8789, norm(output): 0.8086, norm(x): 0.8633, norm(y): 0.9953, norm:0.4524, tok/sec: 187380.05, flops:196.71, batch-reuse:1
@ 614 train 5.5389 , allloss: 5.5389, dt: 697.26ms, fracRes: 0.0966, norm(attn): 0.8906, norm(output): 0.8086, norm(x): 0.8599, norm(y): 0.9951, norm:0.5211, tok/sec: 187982.71, flops:197.34, batch-reuse:1
@ 615 train 5.5587 , allloss: 5.5587, dt: 684.75ms, fracRes: 0.0962, norm(attn): 0.9336, norm(output): 0.8086, norm(x): 0.8678, norm(y): 0.9951, norm:0.4830, tok/sec: 191416.02, flops:200.95, batch-reuse:1
@ 616 train 5.5153 , allloss: 5.5153, dt: 695.40ms, fracRes: 0.0957, norm(attn): 0.9414, norm(output): 0.8086, norm(x): 0.8689, norm(y): 0.9950, norm:0.5675, tok/sec: 188485.42, flops:197.87, batch-reuse:1
@ 617 train 5.3924 , allloss: 5.3924, dt: 683.40ms, fracRes: 0.0970, norm(attn): 0.9375, norm(output): 0.7891, norm(x): 0.8482, norm(y): 0.9950, norm:0.5615, tok/sec: 191793.86, flops:201.35, batch-reuse:1
@ 618 train 5.4698 , allloss: 5.4698, dt: 697.98ms, fracRes: 0.0965, norm(attn): 0.9414, norm(output): 0.8047, norm(x): 0.8600, norm(y): 0.9950, norm:0.5475, tok/sec: 187786.54, flops:197.14, batch-reuse:1
@ 619 train 5.4813 , allloss: 5.4813, dt: 703.07ms, fracRes: 0.0965, norm(attn): 0.9336, norm(output): 0.8008, norm(x): 0.8573, norm(y): 0.9949, norm:0.5350, tok/sec: 186427.80, flops:195.71, batch-reuse:1
@ 620 train 5.4784 , allloss: 5.4784, dt: 690.79ms, fracRes: 0.0971, norm(attn): 0.9414, norm(output): 0.7930, norm(x): 0.8476, norm(y): 0.9950, norm:0.4960, tok/sec: 189741.15, flops:199.19, batch-reuse:1
@ 621 train 5.5229 , allloss: 5.5229, dt: 683.18ms, fracRes: 0.0965, norm(attn): 0.9414, norm(output): 0.7891, norm(x): 0.8472, norm(y): 0.9950, norm:0.4508, tok/sec: 191854.90, flops:201.41, batch-reuse:1
@ 622 train 5.4545 , allloss: 5.4545, dt: 689.93ms, fracRes: 0.0970, norm(attn): 0.9375, norm(output): 0.7930, norm(x): 0.8493, norm(y): 0.9951, norm:0.4841, tok/sec: 189979.03, flops:199.44, batch-reuse:1
@ 623 train 5.4236 , allloss: 5.4236, dt: 691.33ms, fracRes: 0.0980, norm(attn): 0.9414, norm(output): 0.7812, norm(x): 0.8446, norm(y): 0.9951, norm:0.4801, tok/sec: 189594.77, flops:199.04, batch-reuse:1
@ 624 train 5.4604 , allloss: 5.4604, dt: 694.93ms, fracRes: 0.0987, norm(attn): 0.9297, norm(output): 0.7812, norm(x): 0.8401, norm(y): 0.9950, norm:0.4445, tok/sec: 188611.78, flops:198.00, batch-reuse:1
@ 625 train 5.5176 , allloss: 5.5176, dt: 695.00ms, fracRes: 0.0975, norm(attn): 0.8828, norm(output): 0.7891, norm(x): 0.8525, norm(y): 0.9950, norm:0.5555, tok/sec: 188592.69, flops:197.98, batch-reuse:1
@ 626 train 5.4667 , allloss: 5.4667, dt: 701.87ms, fracRes: 0.0975, norm(attn): 0.8789, norm(output): 0.7773, norm(x): 0.8429, norm(y): 0.9951, norm:0.4615, tok/sec: 186747.22, flops:196.05, batch-reuse:1
@ 627 train 5.4094 , allloss: 5.4094, dt: 693.19ms, fracRes: 0.0975, norm(attn): 0.8984, norm(output): 0.7852, norm(x): 0.8482, norm(y): 0.9951, norm:0.5506, tok/sec: 189084.50, flops:198.50, batch-reuse:1
@ 628 train 5.5424 , allloss: 5.5424, dt: 705.00ms, fracRes: 0.0971, norm(attn): 0.9297, norm(output): 0.7930, norm(x): 0.8478, norm(y): 0.9950, norm:0.4363, tok/sec: 185918.13, flops:195.18, batch-reuse:1
@ 629 train 5.5936 , allloss: 5.5936, dt: 704.23ms, fracRes: 0.0960, norm(attn): 0.9297, norm(output): 0.8047, norm(x): 0.8550, norm(y): 0.9949, norm:0.4550, tok/sec: 186121.88, flops:195.39, batch-reuse:1
@ 630 train 5.5478 , allloss: 5.5478, dt: 703.89ms, fracRes: 0.0958, norm(attn): 0.9375, norm(output): 0.8086, norm(x): 0.8628, norm(y): 0.9949, norm:0.6188, tok/sec: 186211.21, flops:195.48, batch-reuse:1
@ 631 train 5.5139 , allloss: 5.5139, dt: 700.58ms, fracRes: 0.0971, norm(attn): 0.9844, norm(output): 0.7930, norm(x): 0.8526, norm(y): 0.9952, norm:0.5577, tok/sec: 187092.00, flops:196.41, batch-reuse:1
@ 632 train 5.7817 , allloss: 5.7817, dt: 698.96ms, fracRes: 0.0974, norm(attn): 0.9844, norm(output): 0.8008, norm(x): 0.8535, norm(y): 0.9953, norm:0.5852, tok/sec: 187525.58, flops:196.86, batch-reuse:1
@ 633 train 5.5326 , allloss: 5.5326, dt: 702.09ms, fracRes: 0.0989, norm(attn): 0.9805, norm(output): 0.7930, norm(x): 0.8548, norm(y): 0.9955, norm:0.6836, tok/sec: 186688.63, flops:195.99, batch-reuse:1
@ 634 train 5.5858 , allloss: 5.5858, dt: 705.62ms, fracRes: 0.1127, norm(attn): 0.8281, norm(output): 0.8242, norm(x): 0.8923, norm(y): 0.9957, norm:25.0386, tok/sec: 185753.35, flops:195.00, batch-reuse:1
@ 635 train 5.6434 , allloss: 5.6434, dt: 706.31ms, fracRes: 0.0990, norm(attn): 1.1328, norm(output): 0.8047, norm(x): 0.8670, norm(y): 0.9955, norm:1.6512, tok/sec: 185573.40, flops:194.82, batch-reuse:1
@ 636 train 5.6189 , allloss: 5.6189, dt: 704.21ms, fracRes: 0.0987, norm(attn): 1.1719, norm(output): 0.8359, norm(x): 0.8987, norm(y): 0.9952, norm:0.8265, tok/sec: 186126.92, flops:195.40, batch-reuse:1
@ 637 train 5.4802 , allloss: 5.4802, dt: 702.37ms, fracRes: 0.0995, norm(attn): 1.1953, norm(output): 0.8516, norm(x): 0.9126, norm(y): 0.9952, norm:0.6562, tok/sec: 186613.72, flops:195.91, batch-reuse:1
@ 638 train 5.4794 , allloss: 5.4794, dt: 696.40ms, fracRes: 0.1007, norm(attn): 1.2266, norm(output): 0.8633, norm(x): 0.9233, norm(y): 0.9952, norm:0.7075, tok/sec: 188213.05, flops:197.59, batch-reuse:1
@ 639 train 5.5495 , allloss: 5.5495, dt: 708.16ms, fracRes: 0.0995, norm(attn): 1.2422, norm(output): 0.8945, norm(x): 0.9649, norm(y): 0.9949, norm:0.6486, tok/sec: 185087.01, flops:194.30, batch-reuse:1
@ 640 train 5.4603 , allloss: 5.4603, dt: 707.63ms, fracRes: 0.0998, norm(attn): 1.2500, norm(output): 0.8828, norm(x): 0.9595, norm(y): 0.9949, norm:0.5908, tok/sec: 185226.76, flops:194.45, batch-reuse:1
@ 641 train 5.4184 , allloss: 5.4184, dt: 705.68ms, fracRes: 0.0995, norm(attn): 1.2500, norm(output): 0.8984, norm(x): 0.9651, norm(y): 0.9949, norm:0.5852, tok/sec: 185739.67, flops:194.99, batch-reuse:1
@ 642 train 5.3949 , allloss: 5.3949, dt: 698.59ms, fracRes: 0.0990, norm(attn): 1.2422, norm(output): 0.8828, norm(x): 0.9525, norm(y): 0.9949, norm:0.4612, tok/sec: 187622.41, flops:196.97, batch-reuse:1
@ 643 train 5.4973 , allloss: 5.4973, dt: 700.03ms, fracRes: 0.0977, norm(attn): 1.2422, norm(output): 0.8828, norm(x): 0.9507, norm(y): 0.9949, norm:0.5264, tok/sec: 187237.22, flops:196.56, batch-reuse:1
@ 644 train 5.5953 , allloss: 5.5953, dt: 696.87ms, fracRes: 0.0980, norm(attn): 1.2422, norm(output): 0.8828, norm(x): 0.9455, norm(y): 0.9950, norm:0.5185, tok/sec: 188086.45, flops:197.45, batch-reuse:1
@ 645 train 5.5195 , allloss: 5.5195, dt: 695.32ms, fracRes: 0.0979, norm(attn): 1.2109, norm(output): 0.8711, norm(x): 0.9262, norm(y): 0.9949, norm:0.5937, tok/sec: 188506.75, flops:197.89, batch-reuse:1
@ 646 train 5.7297 , allloss: 5.7297, dt: 690.49ms, fracRes: 0.1051, norm(attn): 1.2031, norm(output): 0.9570, norm(x): 1.0233, norm(y): 0.9946, norm:16.7447, tok/sec: 189823.37, flops:199.28, batch-reuse:1
@ 647 train 5.5837 , allloss: 5.5837, dt: 701.86ms, fracRes: 0.0991, norm(attn): 1.2500, norm(output): 0.8672, norm(x): 0.9263, norm(y): 0.9951, norm:0.9680, tok/sec: 186748.18, flops:196.05, batch-reuse:1
@ 648 train 5.4911 , allloss: 5.4911, dt: 698.82ms, fracRes: 0.1016, norm(attn): 1.2422, norm(output): 0.8594, norm(x): 0.9215, norm(y): 0.9949, norm:0.8990, tok/sec: 187561.99, flops:196.90, batch-reuse:1
@ 649 train 5.5249 , allloss: 5.5249, dt: 707.93ms, fracRes: 0.1009, norm(attn): 1.2500, norm(output): 0.8672, norm(x): 0.9229, norm(y): 0.9951, norm:0.8735, tok/sec: 185147.91, flops:194.37, batch-reuse:1
@ 650 train 5.4450 , allloss: 5.4450, dt: 688.35ms, fracRes: 0.1024, norm(attn): 1.1797, norm(output): 0.8555, norm(x): 0.9204, norm(y): 0.9951, norm:1.4944, tok/sec: 190413.78, flops:199.90, batch-reuse:1
@ 651 train 5.4912 , allloss: 5.4912, dt: 705.34ms, fracRes: 0.1021, norm(attn): 1.2969, norm(output): 0.8750, norm(x): 0.9355, norm(y): 0.9952, norm:1.0288, tok/sec: 185828.58, flops:195.08, batch-reuse:1
@ 652 train 5.4225 , allloss: 5.4225, dt: 689.42ms, fracRes: 0.1020, norm(attn): 1.3125, norm(output): 0.8750, norm(x): 0.9423, norm(y): 0.9950, norm:0.5757, tok/sec: 190119.04, flops:199.59, batch-reuse:1
@ 653 train 5.4150 , allloss: 5.4150, dt: 702.38ms, fracRes: 0.1035, norm(attn): 1.3672, norm(output): 0.8867, norm(x): 0.9581, norm(y): 0.9950, norm:0.5811, tok/sec: 186612.39, flops:195.91, batch-reuse:1
@ 654 train 5.4309 , allloss: 5.4309, dt: 693.52ms, fracRes: 0.1027, norm(attn): 1.3750, norm(output): 0.9023, norm(x): 0.9706, norm(y): 0.9950, norm:0.5542, tok/sec: 188994.99, flops:198.41, batch-reuse:1
@ 655 train 5.4555 , allloss: 5.4555, dt: 706.41ms, fracRes: 0.1029, norm(attn): 1.4062, norm(output): 0.9219, norm(x): 0.9782, norm(y): 0.9950, norm:0.5221, tok/sec: 185546.78, flops:194.79, batch-reuse:1
@ 656 train 5.2947 , allloss: 5.2947, dt: 702.36ms, fracRes: 0.1036, norm(attn): 1.4141, norm(output): 0.8984, norm(x): 0.9710, norm(y): 0.9950, norm:0.5100, tok/sec: 186615.50, flops:195.91, batch-reuse:1
@ 657 train 5.3675 , allloss: 5.3675, dt: 693.44ms, fracRes: 0.1036, norm(attn): 1.4141, norm(output): 0.9062, norm(x): 0.9687, norm(y): 0.9950, norm:0.4784, tok/sec: 189016.96, flops:198.43, batch-reuse:1
@ 658 train 5.4644 , allloss: 5.4644, dt: 705.59ms, fracRes: 0.1034, norm(attn): 1.4141, norm(output): 0.8984, norm(x): 0.9701, norm(y): 0.9950, norm:0.5492, tok/sec: 185763.46, flops:195.01, batch-reuse:1
@ 659 train 5.4527 , allloss: 5.4527, dt: 691.28ms, fracRes: 0.1026, norm(attn): 1.4453, norm(output): 0.9062, norm(x): 0.9649, norm(y): 0.9950, norm:0.5567, tok/sec: 189607.91, flops:199.05, batch-reuse:1
@ 660 train 5.4546 , allloss: 5.4546, dt: 689.09ms, fracRes: 0.1022, norm(attn): 1.4531, norm(output): 0.8906, norm(x): 0.9649, norm(y): 0.9950, norm:0.4604, tok/sec: 190211.00, flops:199.68, batch-reuse:1
@ 661 train 5.3782 , allloss: 5.3782, dt: 698.44ms, fracRes: 0.1024, norm(attn): 1.4766, norm(output): 0.8828, norm(x): 0.9501, norm(y): 0.9950, norm:0.5163, tok/sec: 187663.34, flops:197.01, batch-reuse:1
@ 662 train 5.4942 , allloss: 5.4942, dt: 684.25ms, fracRes: 0.1032, norm(attn): 1.4609, norm(output): 0.8789, norm(x): 0.9456, norm(y): 0.9949, norm:0.4780, tok/sec: 191556.02, flops:201.10, batch-reuse:1
@ 663 train 5.4258 , allloss: 5.4258, dt: 693.23ms, fracRes: 0.1024, norm(attn): 1.4688, norm(output): 0.8828, norm(x): 0.9504, norm(y): 0.9948, norm:0.5042, tok/sec: 189075.14, flops:198.49, batch-reuse:1
@ 664 train 5.3690 , allloss: 5.3690, dt: 689.10ms, fracRes: 0.1024, norm(attn): 1.4375, norm(output): 0.8672, norm(x): 0.9309, norm(y): 0.9949, norm:0.5376, tok/sec: 190207.51, flops:199.68, batch-reuse:1
@ 665 train 5.3903 , allloss: 5.3903, dt: 683.78ms, fracRes: 0.1028, norm(attn): 1.4375, norm(output): 0.8555, norm(x): 0.9206, norm(y): 0.9948, norm:0.4354, tok/sec: 191687.00, flops:201.23, batch-reuse:1
@ 666 train 5.2911 , allloss: 5.2911, dt: 697.29ms, fracRes: 0.1010, norm(attn): 1.4375, norm(output): 0.8633, norm(x): 0.9257, norm(y): 0.9948, norm:0.7502, tok/sec: 187972.81, flops:197.33, batch-reuse:1
@ 667 train 5.2961 , allloss: 5.2961, dt: 696.51ms, fracRes: 0.1006, norm(attn): 1.4531, norm(output): 0.8750, norm(x): 0.9309, norm(y): 0.9949, norm:1.0787, tok/sec: 188184.18, flops:197.56, batch-reuse:1
@ 668 train 5.4327 , allloss: 5.4327, dt: 697.02ms, fracRes: 0.1041, norm(attn): 1.4453, norm(output): 0.8516, norm(x): 0.9229, norm(y): 0.9948, norm:0.6187, tok/sec: 188045.40, flops:197.41, batch-reuse:1
@ 669 train 5.3520 , allloss: 5.3520, dt: 694.77ms, fracRes: 0.1042, norm(attn): 1.4531, norm(output): 0.8516, norm(x): 0.9236, norm(y): 0.9948, norm:0.5241, tok/sec: 188654.05, flops:198.05, batch-reuse:1
@ 670 train 5.4733 , allloss: 5.4733, dt: 694.85ms, fracRes: 0.1048, norm(attn): 1.4141, norm(output): 0.8555, norm(x): 0.9242, norm(y): 0.9948, norm:0.5278, tok/sec: 188633.01, flops:198.03, batch-reuse:1
@ 671 train 5.3562 , allloss: 5.3562, dt: 698.74ms, fracRes: 0.1057, norm(attn): 1.3906, norm(output): 0.8320, norm(x): 0.9161, norm(y): 0.9948, norm:0.5170, tok/sec: 187582.27, flops:196.92, batch-reuse:1
@ 672 train 5.4132 , allloss: 5.4132, dt: 691.69ms, fracRes: 0.1049, norm(attn): 1.3906, norm(output): 0.8438, norm(x): 0.9229, norm(y): 0.9947, norm:0.4342, tok/sec: 189496.35, flops:198.93, batch-reuse:1
@ 673 train 5.4392 , allloss: 5.4392, dt: 706.33ms, fracRes: 0.1043, norm(attn): 1.3984, norm(output): 0.8555, norm(x): 0.9215, norm(y): 0.9948, norm:0.5854, tok/sec: 185567.89, flops:194.81, batch-reuse:1
@ 674 train 5.3986 , allloss: 5.3986, dt: 688.34ms, fracRes: 0.1064, norm(attn): 1.3750, norm(output): 0.8320, norm(x): 0.9058, norm(y): 0.9948, norm:0.5299, tok/sec: 190418.46, flops:199.90, batch-reuse:1
@ 675 train 5.3173 , allloss: 5.3173, dt: 700.72ms, fracRes: 0.1062, norm(attn): 1.3672, norm(output): 0.8320, norm(x): 0.9035, norm(y): 0.9947, norm:0.5567, tok/sec: 187053.11, flops:196.37, batch-reuse:1
@ 676 train 5.3126 , allloss: 5.3126, dt: 698.52ms, fracRes: 0.1063, norm(attn): 1.3672, norm(output): 0.8477, norm(x): 0.9152, norm(y): 0.9946, norm:0.5286, tok/sec: 187642.33, flops:196.99, batch-reuse:1
@ 677 train 5.4547 , allloss: 5.4547, dt: 699.19ms, fracRes: 0.1057, norm(attn): 1.3672, norm(output): 0.8516, norm(x): 0.9237, norm(y): 0.9945, norm:0.5598, tok/sec: 187463.75, flops:196.80, batch-reuse:1
@ 678 train 5.3104 , allloss: 5.3104, dt: 680.71ms, fracRes: 0.1068, norm(attn): 1.3672, norm(output): 0.8164, norm(x): 0.8978, norm(y): 0.9946, norm:0.5270, tok/sec: 192552.14, flops:202.14, batch-reuse:1
@ 679 train 5.3234 , allloss: 5.3234, dt: 698.45ms, fracRes: 0.1070, norm(attn): 1.3594, norm(output): 0.8242, norm(x): 0.9013, norm(y): 0.9945, norm:0.5067, tok/sec: 187662.38, flops:197.01, batch-reuse:1
@ 680 train 5.3268 , allloss: 5.3268, dt: 695.71ms, fracRes: 0.1067, norm(attn): 1.3516, norm(output): 0.8203, norm(x): 0.9015, norm(y): 0.9945, norm:0.5249, tok/sec: 188401.65, flops:197.78, batch-reuse:1
@ 681 train 5.3459 , allloss: 5.3459, dt: 691.72ms, fracRes: 0.1074, norm(attn): 1.3594, norm(output): 0.8164, norm(x): 0.8901, norm(y): 0.9946, norm:0.4936, tok/sec: 189486.49, flops:198.92, batch-reuse:1
@ 682 train 5.3596 , allloss: 5.3596, dt: 696.14ms, fracRes: 0.1077, norm(attn): 1.3594, norm(output): 0.8203, norm(x): 0.8941, norm(y): 0.9946, norm:0.5257, tok/sec: 188285.24, flops:197.66, batch-reuse:1
@ 683 train 5.3089 , allloss: 5.3089, dt: 693.06ms, fracRes: 0.1067, norm(attn): 1.3438, norm(output): 0.8164, norm(x): 0.8927, norm(y): 0.9945, norm:0.4780, tok/sec: 189119.43, flops:198.54, batch-reuse:1
@ 684 train 5.2861 , allloss: 5.2861, dt: 696.62ms, fracRes: 0.1084, norm(attn): 1.3359, norm(output): 0.8125, norm(x): 0.8831, norm(y): 0.9946, norm:0.5345, tok/sec: 188153.91, flops:197.52, batch-reuse:1
@ 685 train 5.3703 , allloss: 5.3703, dt: 702.99ms, fracRes: 0.1085, norm(attn): 1.3359, norm(output): 0.8125, norm(x): 0.8896, norm(y): 0.9945, norm:0.6574, tok/sec: 186449.55, flops:195.74, batch-reuse:1
@ 686 train 5.4149 , allloss: 5.4149, dt: 685.23ms, fracRes: 0.1084, norm(attn): 1.3203, norm(output): 0.8203, norm(x): 0.8907, norm(y): 0.9945, norm:0.5415, tok/sec: 191282.95, flops:200.81, batch-reuse:1
@ 687 train 5.3876 , allloss: 5.3876, dt: 699.74ms, fracRes: 0.1084, norm(attn): 1.2969, norm(output): 0.8125, norm(x): 0.8871, norm(y): 0.9944, norm:0.5087, tok/sec: 187315.63, flops:196.64, batch-reuse:1
@ 688 train 5.2980 , allloss: 5.2980, dt: 701.85ms, fracRes: 0.1091, norm(attn): 1.2891, norm(output): 0.8125, norm(x): 0.8938, norm(y): 0.9944, norm:0.5619, tok/sec: 186752.74, flops:196.05, batch-reuse:1
@ 689 train 5.3157 , allloss: 5.3157, dt: 701.97ms, fracRes: 0.1084, norm(attn): 1.2969, norm(output): 0.8125, norm(x): 0.8852, norm(y): 0.9944, norm:0.5683, tok/sec: 186720.52, flops:196.02, batch-reuse:1
@ 690 train 5.2792 , allloss: 5.2792, dt: 699.37ms, fracRes: 0.1083, norm(attn): 1.2891, norm(output): 0.8047, norm(x): 0.8752, norm(y): 0.9943, norm:0.5811, tok/sec: 187413.71, flops:196.75, batch-reuse:1
@ 691 train 5.3553 , allloss: 5.3553, dt: 698.48ms, fracRes: 0.1086, norm(attn): 1.2891, norm(output): 0.8047, norm(x): 0.8751, norm(y): 0.9944, norm:0.5450, tok/sec: 187652.90, flops:197.00, batch-reuse:1
@ 692 train 5.3236 , allloss: 5.3236, dt: 689.15ms, fracRes: 0.1092, norm(attn): 1.2891, norm(output): 0.7930, norm(x): 0.8670, norm(y): 0.9944, norm:0.5297, tok/sec: 190194.81, flops:199.67, batch-reuse:1
@ 693 train 5.3663 , allloss: 5.3663, dt: 696.08ms, fracRes: 0.1092, norm(attn): 1.2891, norm(output): 0.8008, norm(x): 0.8712, norm(y): 0.9944, norm:0.4822, tok/sec: 188299.24, flops:197.68, batch-reuse:1
@ 694 train 5.2431 , allloss: 5.2431, dt: 700.23ms, fracRes: 0.1097, norm(attn): 1.2734, norm(output): 0.7930, norm(x): 0.8661, norm(y): 0.9943, norm:0.5083, tok/sec: 187185.39, flops:196.51, batch-reuse:1
@ 695 train 5.3084 , allloss: 5.3084, dt: 698.62ms, fracRes: 0.1096, norm(attn): 1.2891, norm(output): 0.7852, norm(x): 0.8634, norm(y): 0.9944, norm:0.5477, tok/sec: 187616.52, flops:196.96, batch-reuse:1
@ 696 train 5.1961 , allloss: 5.1961, dt: 697.89ms, fracRes: 0.1092, norm(attn): 1.2656, norm(output): 0.7812, norm(x): 0.8576, norm(y): 0.9943, norm:0.4948, tok/sec: 187810.54, flops:197.16, batch-reuse:1
@ 697 train 5.2046 , allloss: 5.2046, dt: 688.30ms, fracRes: 0.1088, norm(attn): 1.2578, norm(output): 0.7734, norm(x): 0.8533, norm(y): 0.9943, norm:0.4861, tok/sec: 190427.76, flops:199.91, batch-reuse:1
@ 698 train 5.2988 , allloss: 5.2988, dt: 698.37ms, fracRes: 0.1093, norm(attn): 1.2500, norm(output): 0.7617, norm(x): 0.8436, norm(y): 0.9943, norm:0.4842, tok/sec: 187681.53, flops:197.03, batch-reuse:1
@ 699 train 5.2974 , allloss: 5.2974, dt: 697.84ms, fracRes: 0.1087, norm(attn): 1.2500, norm(output): 0.7773, norm(x): 0.8554, norm(y): 0.9942, norm:0.5312, tok/sec: 187824.91, flops:197.18, batch-reuse:1
@ 700 train 5.2632 , allloss: 5.2632, dt: 678.60ms, fracRes: 0.1094, norm(attn): 1.2266, norm(output): 0.7734, norm(x): 0.8480, norm(y): 0.9942, norm:0.6235, tok/sec: 193151.87, flops:202.77, batch-reuse:1
@ 701 train 5.2840 , allloss: 5.2840, dt: 694.40ms, fracRes: 0.1098, norm(attn): 1.2188, norm(output): 0.7734, norm(x): 0.8528, norm(y): 0.9942, norm:0.7098, tok/sec: 188755.09, flops:198.16, batch-reuse:1
@ 702 train 5.2504 , allloss: 5.2504, dt: 696.83ms, fracRes: 0.1098, norm(attn): 1.2109, norm(output): 0.7812, norm(x): 0.8542, norm(y): 0.9942, norm:0.5982, tok/sec: 188096.94, flops:197.46, batch-reuse:1
@ 703 train 5.3040 , allloss: 5.3040, dt: 679.44ms, fracRes: 0.1107, norm(attn): 1.2031, norm(output): 0.7656, norm(x): 0.8487, norm(y): 0.9942, norm:0.5478, tok/sec: 192911.40, flops:202.52, batch-reuse:1
@ 704 train 5.2050 , allloss: 5.2050, dt: 693.21ms, fracRes: 0.1110, norm(attn): 1.2031, norm(output): 0.7578, norm(x): 0.8410, norm(y): 0.9942, norm:0.6100, tok/sec: 189080.66, flops:198.50, batch-reuse:1
@ 705 train 5.2997 , allloss: 5.2997, dt: 695.46ms, fracRes: 0.1116, norm(attn): 1.1797, norm(output): 0.7578, norm(x): 0.8403, norm(y): 0.9942, norm:0.5878, tok/sec: 188468.95, flops:197.86, batch-reuse:1
@ 706 train 5.2173 , allloss: 5.2173, dt: 694.66ms, fracRes: 0.1117, norm(attn): 1.1797, norm(output): 0.7617, norm(x): 0.8445, norm(y): 0.9942, norm:0.6112, tok/sec: 188686.10, flops:198.08, batch-reuse:1
@ 707 train 5.2528 , allloss: 5.2528, dt: 693.56ms, fracRes: 0.1117, norm(attn): 1.1719, norm(output): 0.7617, norm(x): 0.8445, norm(y): 0.9942, norm:0.5463, tok/sec: 188984.40, flops:198.40, batch-reuse:1
@ 708 train 5.2611 , allloss: 5.2611, dt: 682.14ms, fracRes: 0.1108, norm(attn): 1.1797, norm(output): 0.7656, norm(x): 0.8434, norm(y): 0.9941, norm:0.5935, tok/sec: 192146.93, flops:201.72, batch-reuse:1
@ 709 train 5.2420 , allloss: 5.2420, dt: 693.63ms, fracRes: 0.1122, norm(attn): 1.1641, norm(output): 0.7500, norm(x): 0.8299, norm(y): 0.9942, norm:0.6544, tok/sec: 188964.85, flops:198.38, batch-reuse:1
@ 710 train 5.4091 , allloss: 5.4091, dt: 697.11ms, fracRes: 0.1096, norm(attn): 1.1719, norm(output): 0.7891, norm(x): 0.8671, norm(y): 0.9939, norm:0.5595, tok/sec: 188022.57, flops:197.39, batch-reuse:1
@ 711 train 5.3237 , allloss: 5.3237, dt: 701.98ms, fracRes: 0.1121, norm(attn): 1.1719, norm(output): 0.7539, norm(x): 0.8358, norm(y): 0.9941, norm:0.6619, tok/sec: 186717.92, flops:196.02, batch-reuse:1
@ 712 train 5.2537 , allloss: 5.2537, dt: 694.39ms, fracRes: 0.1126, norm(attn): 1.1719, norm(output): 0.7383, norm(x): 0.8126, norm(y): 0.9942, norm:0.6508, tok/sec: 188758.85, flops:198.16, batch-reuse:1
@ 713 train 5.2314 , allloss: 5.2314, dt: 706.71ms, fracRes: 0.1120, norm(attn): 1.1797, norm(output): 0.7461, norm(x): 0.8255, norm(y): 0.9941, norm:0.6824, tok/sec: 185467.91, flops:194.70, batch-reuse:1
@ 714 train 5.2029 , allloss: 5.2029, dt: 696.75ms, fracRes: 0.1128, norm(attn): 1.1641, norm(output): 0.7461, norm(x): 0.8259, norm(y): 0.9942, norm:0.6771, tok/sec: 188118.11, flops:197.49, batch-reuse:1
@ 715 train 5.2140 , allloss: 5.2140, dt: 691.38ms, fracRes: 0.1126, norm(attn): 1.1719, norm(output): 0.7500, norm(x): 0.8279, norm(y): 0.9942, norm:0.7887, tok/sec: 189578.95, flops:199.02, batch-reuse:1
@ 716 train 5.2395 , allloss: 5.2395, dt: 694.63ms, fracRes: 0.1115, norm(attn): 1.1641, norm(output): 0.7539, norm(x): 0.8342, norm(y): 0.9941, norm:0.5676, tok/sec: 188694.32, flops:198.09, batch-reuse:1
@ 717 train 5.1404 , allloss: 5.1404, dt: 701.83ms, fracRes: 0.1130, norm(attn): 1.1719, norm(output): 0.7578, norm(x): 0.8365, norm(y): 0.9941, norm:0.6019, tok/sec: 186757.44, flops:196.06, batch-reuse:1
@ 718 train 5.2305 , allloss: 5.2305, dt: 702.89ms, fracRes: 0.1128, norm(attn): 1.1719, norm(output): 0.7578, norm(x): 0.8409, norm(y): 0.9941, norm:0.6094, tok/sec: 186475.22, flops:195.76, batch-reuse:1
@ 719 train 5.1993 , allloss: 5.1993, dt: 698.73ms, fracRes: 0.1123, norm(attn): 1.1797, norm(output): 0.7578, norm(x): 0.8391, norm(y): 0.9941, norm:0.6207, tok/sec: 187584.84, flops:196.93, batch-reuse:1
@ 720 train 5.1763 , allloss: 5.1763, dt: 690.44ms, fracRes: 0.1133, norm(attn): 1.1797, norm(output): 0.7500, norm(x): 0.8266, norm(y): 0.9941, norm:0.6861, tok/sec: 189837.07, flops:199.29, batch-reuse:1
@ 721 train 5.0992 , allloss: 5.0992, dt: 702.48ms, fracRes: 0.1137, norm(attn): 1.1719, norm(output): 0.7422, norm(x): 0.8195, norm(y): 0.9941, norm:0.6137, tok/sec: 186585.92, flops:195.88, batch-reuse:1
@ 722 train 5.1756 , allloss: 5.1756, dt: 704.31ms, fracRes: 0.1136, norm(attn): 1.1406, norm(output): 0.7422, norm(x): 0.8188, norm(y): 0.9940, norm:0.6024, tok/sec: 186099.70, flops:195.37, batch-reuse:1
@ 723 train 5.3022 , allloss: 5.3022, dt: 699.50ms, fracRes: 0.1135, norm(attn): 1.1484, norm(output): 0.7383, norm(x): 0.8194, norm(y): 0.9940, norm:0.5194, tok/sec: 187380.88, flops:196.71, batch-reuse:1
@ 724 train 5.2170 , allloss: 5.2170, dt: 702.07ms, fracRes: 0.1122, norm(attn): 1.1406, norm(output): 0.7422, norm(x): 0.8194, norm(y): 0.9940, norm:0.5113, tok/sec: 186694.78, flops:195.99, batch-reuse:1
@ 725 train 5.2088 , allloss: 5.2088, dt: 688.06ms, fracRes: 0.1124, norm(attn): 1.1328, norm(output): 0.7461, norm(x): 0.8193, norm(y): 0.9940, norm:0.5513, tok/sec: 190496.19, flops:199.98, batch-reuse:1
@ 726 train 5.2172 , allloss: 5.2172, dt: 702.83ms, fracRes: 0.1121, norm(attn): 1.1484, norm(output): 0.7461, norm(x): 0.8209, norm(y): 0.9939, norm:0.4752, tok/sec: 186491.29, flops:195.78, batch-reuse:1
@ 727 train 5.1948 , allloss: 5.1948, dt: 701.16ms, fracRes: 0.1134, norm(attn): 1.1562, norm(output): 0.7344, norm(x): 0.8086, norm(y): 0.9940, norm:0.5094, tok/sec: 186936.71, flops:196.25, batch-reuse:1
@ 728 train 5.2197 , allloss: 5.2197, dt: 699.90ms, fracRes: 0.1139, norm(attn): 1.1406, norm(output): 0.7188, norm(x): 0.8027, norm(y): 0.9940, norm:0.4468, tok/sec: 187271.53, flops:196.60, batch-reuse:1
@ 729 train 5.1862 , allloss: 5.1862, dt: 712.26ms, fracRes: 0.1144, norm(attn): 1.1328, norm(output): 0.7227, norm(x): 0.8041, norm(y): 0.9939, norm:0.5322, tok/sec: 184023.98, flops:193.19, batch-reuse:1
@ 730 train 5.1781 , allloss: 5.1781, dt: 710.58ms, fracRes: 0.1143, norm(attn): 1.1328, norm(output): 0.7188, norm(x): 0.7987, norm(y): 0.9940, norm:0.4517, tok/sec: 184459.04, flops:193.65, batch-reuse:1
@ 731 train 5.2097 , allloss: 5.2097, dt: 714.16ms, fracRes: 0.1143, norm(attn): 1.1250, norm(output): 0.7188, norm(x): 0.7974, norm(y): 0.9939, norm:0.5360, tok/sec: 183534.09, flops:192.67, batch-reuse:1
@ 732 train 5.1560 , allloss: 5.1560, dt: 696.78ms, fracRes: 0.1143, norm(attn): 1.1328, norm(output): 0.7109, norm(x): 0.7943, norm(y): 0.9939, norm:0.6211, tok/sec: 188110.78, flops:197.48, batch-reuse:1
@ 733 train 5.2267 , allloss: 5.2267, dt: 698.13ms, fracRes: 0.1156, norm(attn): 1.1328, norm(output): 0.6992, norm(x): 0.7842, norm(y): 0.9939, norm:0.6551, tok/sec: 187746.98, flops:197.10, batch-reuse:1
@ 734 train 5.2038 , allloss: 5.2038, dt: 698.73ms, fracRes: 0.1139, norm(attn): 1.1328, norm(output): 0.7031, norm(x): 0.7891, norm(y): 0.9938, norm:0.5254, tok/sec: 187587.20, flops:196.93, batch-reuse:1
@ 735 train 5.2267 , allloss: 5.2267, dt: 691.62ms, fracRes: 0.1160, norm(attn): 1.1328, norm(output): 0.6953, norm(x): 0.7845, norm(y): 0.9939, norm:0.6295, tok/sec: 189513.99, flops:198.95, batch-reuse:1
@ 736 train 5.2875 , allloss: 5.2875, dt: 706.01ms, fracRes: 0.1158, norm(attn): 1.1406, norm(output): 0.7031, norm(x): 0.7874, norm(y): 0.9938, norm:0.7000, tok/sec: 185651.23, flops:194.90, batch-reuse:1
@ 737 train 5.2183 , allloss: 5.2183, dt: 705.13ms, fracRes: 0.1155, norm(attn): 1.1484, norm(output): 0.7031, norm(x): 0.7843, norm(y): 0.9939, norm:0.8140, tok/sec: 185882.99, flops:195.14, batch-reuse:1
@ 738 train 5.2346 , allloss: 5.2346, dt: 697.36ms, fracRes: 0.1152, norm(attn): 1.1562, norm(output): 0.7031, norm(x): 0.7873, norm(y): 0.9939, norm:0.7544, tok/sec: 187954.37, flops:197.31, batch-reuse:1
@ 739 train 5.1794 , allloss: 5.1794, dt: 707.95ms, fracRes: 0.1145, norm(attn): 1.1484, norm(output): 0.7070, norm(x): 0.7888, norm(y): 0.9939, norm:0.6994, tok/sec: 185141.80, flops:194.36, batch-reuse:1
@ 740 train 5.2028 , allloss: 5.2028, dt: 688.61ms, fracRes: 0.1156, norm(attn): 1.1406, norm(output): 0.7070, norm(x): 0.7900, norm(y): 0.9939, norm:0.7100, tok/sec: 190342.78, flops:199.82, batch-reuse:1
@ 741 train 5.3322 , allloss: 5.3322, dt: 710.08ms, fracRes: 0.1159, norm(attn): 1.1562, norm(output): 0.7305, norm(x): 0.8071, norm(y): 0.9939, norm:0.7291, tok/sec: 184588.48, flops:193.78, batch-reuse:1
@ 742 train 5.3481 , allloss: 5.3481, dt: 707.54ms, fracRes: 0.1169, norm(attn): 1.1641, norm(output): 0.7227, norm(x): 0.8040, norm(y): 0.9939, norm:0.6291, tok/sec: 185249.42, flops:194.48, batch-reuse:1
@ 743 train 5.3423 , allloss: 5.3423, dt: 702.41ms, fracRes: 0.1153, norm(attn): 1.1562, norm(output): 0.7383, norm(x): 0.8117, norm(y): 0.9938, norm:0.6739, tok/sec: 186602.26, flops:195.90, batch-reuse:1
@ 744 train 5.3252 , allloss: 5.3252, dt: 705.63ms, fracRes: 0.1154, norm(attn): 1.1406, norm(output): 0.7305, norm(x): 0.8078, norm(y): 0.9938, norm:0.5854, tok/sec: 185751.10, flops:195.00, batch-reuse:1
@ 745 train 5.3380 , allloss: 5.3380, dt: 703.39ms, fracRes: 0.1166, norm(attn): 1.1250, norm(output): 0.7031, norm(x): 0.7939, norm(y): 0.9938, norm:0.6714, tok/sec: 186342.62, flops:195.62, batch-reuse:1
@ 746 train 5.3490 , allloss: 5.3490, dt: 695.11ms, fracRes: 0.1159, norm(attn): 1.1250, norm(output): 0.7070, norm(x): 0.7946, norm(y): 0.9938, norm:0.5877, tok/sec: 188562.74, flops:197.95, batch-reuse:1
@ 747 train 5.3417 , allloss: 5.3417, dt: 683.31ms, fracRes: 0.1155, norm(attn): 1.1172, norm(output): 0.7227, norm(x): 0.8009, norm(y): 0.9937, norm:0.6115, tok/sec: 191819.02, flops:201.37, batch-reuse:1
@ 748 train 5.3366 , allloss: 5.3366, dt: 692.99ms, fracRes: 0.1169, norm(attn): 1.1172, norm(output): 0.7031, norm(x): 0.7836, norm(y): 0.9938, norm:0.6292, tok/sec: 189139.47, flops:198.56, batch-reuse:1
@ 749 train 5.3847 , allloss: 5.3847, dt: 691.34ms, fracRes: 0.1158, norm(attn): 1.1250, norm(output): 0.7227, norm(x): 0.8009, norm(y): 0.9937, norm:0.7642, tok/sec: 189592.22, flops:199.03, batch-reuse:1
@ 750 train 5.4550 , allloss: 5.4550, dt: 701.81ms, fracRes: 0.1161, norm(attn): 1.1250, norm(output): 0.7188, norm(x): 0.8012, norm(y): 0.9937, norm:0.7335, tok/sec: 186762.96, flops:196.06, batch-reuse:1
@ 751 train 5.3284 , allloss: 5.3284, dt: 702.97ms, fracRes: 0.1162, norm(attn): 1.1172, norm(output): 0.7148, norm(x): 0.7965, norm(y): 0.9938, norm:0.5359, tok/sec: 186453.66, flops:195.74, batch-reuse:1
@ 752 train 5.2614 , allloss: 5.2614, dt: 699.65ms, fracRes: 0.1159, norm(attn): 1.1172, norm(output): 0.7070, norm(x): 0.7935, norm(y): 0.9937, norm:0.6264, tok/sec: 187340.52, flops:196.67, batch-reuse:1
@ 753 train 5.3206 , allloss: 5.3206, dt: 698.21ms, fracRes: 0.1167, norm(attn): 1.1172, norm(output): 0.6953, norm(x): 0.7807, norm(y): 0.9937, norm:0.6239, tok/sec: 187726.46, flops:197.08, batch-reuse:1
@ 754 train 5.3147 , allloss: 5.3147, dt: 695.77ms, fracRes: 0.1172, norm(attn): 1.1250, norm(output): 0.6875, norm(x): 0.7759, norm(y): 0.9937, norm:0.6362, tok/sec: 188382.99, flops:197.76, batch-reuse:1
@ 755 train 5.4048 , allloss: 5.4048, dt: 692.07ms, fracRes: 0.1165, norm(attn): 1.1172, norm(output): 0.6953, norm(x): 0.7802, norm(y): 0.9937, norm:0.5565, tok/sec: 189390.53, flops:198.82, batch-reuse:1
@ 756 train 5.2892 , allloss: 5.2892, dt: 697.23ms, fracRes: 0.1160, norm(attn): 1.1328, norm(output): 0.6914, norm(x): 0.7734, norm(y): 0.9937, norm:0.5643, tok/sec: 187990.04, flops:197.35, batch-reuse:1
@ 757 train 5.3418 , allloss: 5.3418, dt: 694.70ms, fracRes: 0.1158, norm(attn): 1.1406, norm(output): 0.6914, norm(x): 0.7758, norm(y): 0.9937, norm:0.5320, tok/sec: 188673.86, flops:198.07, batch-reuse:1
@ 758 train 5.2930 , allloss: 5.2930, dt: 692.43ms, fracRes: 0.1157, norm(attn): 1.1328, norm(output): 0.6953, norm(x): 0.7744, norm(y): 0.9937, norm:0.5393, tok/sec: 189293.69, flops:198.72, batch-reuse:1
@ 759 train 5.3603 , allloss: 5.3603, dt: 683.02ms, fracRes: 0.1171, norm(attn): 1.1250, norm(output): 0.6875, norm(x): 0.7659, norm(y): 0.9937, norm:0.5277, tok/sec: 191900.44, flops:201.46, batch-reuse:1
@ 760 train 5.3755 , allloss: 5.3755, dt: 693.68ms, fracRes: 0.1163, norm(attn): 1.1250, norm(output): 0.6914, norm(x): 0.7739, norm(y): 0.9936, norm:0.5411, tok/sec: 188950.50, flops:198.36, batch-reuse:1
@ 761 train 5.3769 , allloss: 5.3769, dt: 691.45ms, fracRes: 0.1157, norm(attn): 1.1250, norm(output): 0.6914, norm(x): 0.7767, norm(y): 0.9936, norm:0.6550, tok/sec: 189560.45, flops:199.00, batch-reuse:1
@ 762 train 5.3295 , allloss: 5.3295, dt: 733.65ms, fracRes: 0.1168, norm(attn): 1.1328, norm(output): 0.6875, norm(x): 0.7721, norm(y): 0.9936, norm:0.8047, tok/sec: 178658.51, flops:187.56, batch-reuse:1
@ 763 train 5.3765 , allloss: 5.3765, dt: 702.34ms, fracRes: 0.1171, norm(attn): 1.1328, norm(output): 0.6992, norm(x): 0.7803, norm(y): 0.9935, norm:0.7322, tok/sec: 186620.82, flops:195.91, batch-reuse:1
@ 764 train 5.2920 , allloss: 5.2920, dt: 700.80ms, fracRes: 0.1175, norm(attn): 1.1406, norm(output): 0.6914, norm(x): 0.7789, norm(y): 0.9936, norm:0.6928, tok/sec: 187031.98, flops:196.35, batch-reuse:1
@ 765 train 5.2783 , allloss: 5.2783, dt: 705.49ms, fracRes: 0.1181, norm(attn): 1.1406, norm(output): 0.6836, norm(x): 0.7678, norm(y): 0.9935, norm:0.5772, tok/sec: 185787.94, flops:195.04, batch-reuse:1
@ 766 train 5.2223 , allloss: 5.2223, dt: 700.26ms, fracRes: 0.1183, norm(attn): 1.1719, norm(output): 0.6758, norm(x): 0.7608, norm(y): 0.9936, norm:0.7224, tok/sec: 187177.10, flops:196.50, batch-reuse:1
@ 767 train 5.3608 , allloss: 5.3608, dt: 702.01ms, fracRes: 0.1191, norm(attn): 1.1406, norm(output): 0.6836, norm(x): 0.7676, norm(y): 0.9936, norm:0.6287, tok/sec: 186710.25, flops:196.01, batch-reuse:1
@ 768 train 5.4527 , allloss: 5.4527, dt: 700.89ms, fracRes: 0.1182, norm(attn): 1.1641, norm(output): 0.6914, norm(x): 0.7838, norm(y): 0.9935, norm:0.5092, tok/sec: 187007.23, flops:196.32, batch-reuse:1
@ 769 train 5.3071 , allloss: 5.3071, dt: 702.29ms, fracRes: 0.1190, norm(attn): 1.1719, norm(output): 0.6836, norm(x): 0.7692, norm(y): 0.9936, norm:0.5924, tok/sec: 186634.37, flops:195.93, batch-reuse:1
@ 770 train 5.2677 , allloss: 5.2677, dt: 702.92ms, fracRes: 0.1195, norm(attn): 1.1406, norm(output): 0.6758, norm(x): 0.7616, norm(y): 0.9935, norm:0.6790, tok/sec: 186467.82, flops:195.75, batch-reuse:1
@ 771 train 5.2813 , allloss: 5.2813, dt: 698.35ms, fracRes: 0.1202, norm(attn): 1.1328, norm(output): 0.6758, norm(x): 0.7539, norm(y): 0.9935, norm:0.5599, tok/sec: 187688.52, flops:197.04, batch-reuse:1
@ 772 train 5.2860 , allloss: 5.2860, dt: 698.90ms, fracRes: 0.1197, norm(attn): 1.1172, norm(output): 0.6797, norm(x): 0.7636, norm(y): 0.9935, norm:0.5717, tok/sec: 187540.17, flops:196.88, batch-reuse:1
@ 773 train 5.3446 , allloss: 5.3446, dt: 691.28ms, fracRes: 0.1197, norm(attn): 1.1172, norm(output): 0.6797, norm(x): 0.7625, norm(y): 0.9934, norm:0.5989, tok/sec: 189607.13, flops:199.05, batch-reuse:1
@ 774 train 5.1918 , allloss: 5.1918, dt: 701.79ms, fracRes: 0.1191, norm(attn): 1.1172, norm(output): 0.6836, norm(x): 0.7635, norm(y): 0.9933, norm:0.6699, tok/sec: 186769.43, flops:196.07, batch-reuse:1
@ 775 train 5.3233 , allloss: 5.3233, dt: 694.92ms, fracRes: 0.1193, norm(attn): 1.1172, norm(output): 0.6836, norm(x): 0.7621, norm(y): 0.9933, norm:0.7412, tok/sec: 188615.41, flops:198.01, batch-reuse:1
@ 776 train 5.2017 , allloss: 5.2017, dt: 702.67ms, fracRes: 0.1193, norm(attn): 1.1172, norm(output): 0.6758, norm(x): 0.7540, norm(y): 0.9933, norm:0.7062, tok/sec: 186534.76, flops:195.82, batch-reuse:1
@ 777 train 5.2473 , allloss: 5.2473, dt: 699.16ms, fracRes: 0.1195, norm(attn): 1.1172, norm(output): 0.6562, norm(x): 0.7459, norm(y): 0.9934, norm:0.6270, tok/sec: 187469.57, flops:196.81, batch-reuse:1
@ 778 train 5.2417 , allloss: 5.2417, dt: 701.50ms, fracRes: 0.1193, norm(attn): 1.1250, norm(output): 0.6680, norm(x): 0.7496, norm(y): 0.9934, norm:0.5705, tok/sec: 186844.97, flops:196.15, batch-reuse:1
@ 779 train 5.3098 , allloss: 5.3098, dt: 692.17ms, fracRes: 0.1195, norm(attn): 1.1250, norm(output): 0.6641, norm(x): 0.7500, norm(y): 0.9934, norm:0.6203, tok/sec: 189364.95, flops:198.80, batch-reuse:1
@ 780 train 5.3089 , allloss: 5.3089, dt: 690.05ms, fracRes: 0.1193, norm(attn): 1.1172, norm(output): 0.6680, norm(x): 0.7503, norm(y): 0.9934, norm:0.7875, tok/sec: 189946.15, flops:199.41, batch-reuse:1
@ 781 train 5.2953 , allloss: 5.2953, dt: 690.66ms, fracRes: 0.1194, norm(attn): 1.1094, norm(output): 0.6484, norm(x): 0.7431, norm(y): 0.9934, norm:0.7106, tok/sec: 189777.44, flops:199.23, batch-reuse:1
@ 782 train 5.3124 , allloss: 5.3124, dt: 697.40ms, fracRes: 0.1180, norm(attn): 1.1172, norm(output): 0.6719, norm(x): 0.7639, norm(y): 0.9932, norm:0.6857, tok/sec: 187943.64, flops:197.30, batch-reuse:1
@ 783 train 5.2502 , allloss: 5.2502, dt: 710.42ms, fracRes: 0.1182, norm(attn): 1.1250, norm(output): 0.6758, norm(x): 0.7574, norm(y): 0.9933, norm:0.6262, tok/sec: 184498.04, flops:193.69, batch-reuse:1
@ 784 train 5.2287 , allloss: 5.2287, dt: 710.21ms, fracRes: 0.1179, norm(attn): 1.1328, norm(output): 0.6875, norm(x): 0.7680, norm(y): 0.9933, norm:0.6976, tok/sec: 184554.40, flops:193.75, batch-reuse:1
@ 785 train 5.2374 , allloss: 5.2374, dt: 708.70ms, fracRes: 0.1190, norm(attn): 1.1406, norm(output): 0.6758, norm(x): 0.7564, norm(y): 0.9934, norm:0.8307, tok/sec: 184947.54, flops:194.16, batch-reuse:1
@ 786 train 5.1954 , allloss: 5.1954, dt: 710.33ms, fracRes: 0.1197, norm(attn): 1.1641, norm(output): 0.6719, norm(x): 0.7577, norm(y): 0.9934, norm:0.6556, tok/sec: 184521.45, flops:193.71, batch-reuse:1
@ 787 train 5.2137 , allloss: 5.2137, dt: 709.34ms, fracRes: 0.1205, norm(attn): 1.1719, norm(output): 0.6719, norm(x): 0.7507, norm(y): 0.9934, norm:0.5482, tok/sec: 184781.37, flops:193.98, batch-reuse:1
@ 788 train 5.3081 , allloss: 5.3081, dt: 705.17ms, fracRes: 0.1204, norm(attn): 1.1875, norm(output): 0.6719, norm(x): 0.7534, norm(y): 0.9933, norm:0.6668, tok/sec: 185874.06, flops:195.13, batch-reuse:1
@ 789 train 5.2121 , allloss: 5.2121, dt: 710.09ms, fracRes: 0.1213, norm(attn): 1.2188, norm(output): 0.6719, norm(x): 0.7526, norm(y): 0.9934, norm:0.8609, tok/sec: 184583.77, flops:193.78, batch-reuse:1
@ 790 train 5.1749 , allloss: 5.1749, dt: 689.54ms, fracRes: 0.1201, norm(attn): 1.2500, norm(output): 0.6797, norm(x): 0.7625, norm(y): 0.9933, norm:0.8610, tok/sec: 190086.17, flops:199.55, batch-reuse:1
@ 791 train 5.3488 , allloss: 5.3488, dt: 691.11ms, fracRes: 0.1208, norm(attn): 1.2422, norm(output): 0.6914, norm(x): 0.7659, norm(y): 0.9933, norm:0.7453, tok/sec: 189654.35, flops:199.10, batch-reuse:1
@ 792 train 5.2728 , allloss: 5.2728, dt: 701.39ms, fracRes: 0.1200, norm(attn): 1.2422, norm(output): 0.6992, norm(x): 0.7807, norm(y): 0.9931, norm:0.7315, tok/sec: 186875.33, flops:196.18, batch-reuse:1
@ 793 train 5.3061 , allloss: 5.3061, dt: 703.61ms, fracRes: 0.1135, norm(attn): 1.1094, norm(output): 0.8359, norm(x): 0.9037, norm(y): 0.9930, norm:466.0854, tok/sec: 186286.17, flops:195.56, batch-reuse:1
@ 794 train 5.3886 , allloss: 5.3886, dt: 704.05ms, fracRes: 0.1185, norm(attn): 1.2188, norm(output): 0.7266, norm(x): 0.8056, norm(y): 0.9931, norm:14.0804, tok/sec: 186168.20, flops:195.44, batch-reuse:1
@ 795 train 5.4074 , allloss: 5.4074, dt: 701.43ms, fracRes: 0.1179, norm(attn): 1.1953, norm(output): 0.7695, norm(x): 0.8435, norm(y): 0.9931, norm:9.0668, tok/sec: 186863.83, flops:196.17, batch-reuse:1
@ 796 train 5.4128 , allloss: 5.4128, dt: 701.11ms, fracRes: 0.1194, norm(attn): 1.2578, norm(output): 0.8594, norm(x): 0.9380, norm(y): 0.9932, norm:6.4404, tok/sec: 186950.50, flops:196.26, batch-reuse:1
@ 797 train 5.5040 , allloss: 5.5040, dt: 697.11ms, fracRes: 0.1203, norm(attn): 1.3594, norm(output): 0.7344, norm(x): 0.8128, norm(y): 0.9933, norm:1.5632, tok/sec: 188022.12, flops:197.39, batch-reuse:1
@ 798 train 5.4388 , allloss: 5.4388, dt: 698.90ms, fracRes: 0.1118, norm(attn): 1.3984, norm(output): 0.7930, norm(x): 0.8686, norm(y): 0.9933, norm:15.3892, tok/sec: 187541.51, flops:196.88, batch-reuse:1
@ 799 train 5.6022 , allloss: 5.6022, dt: 695.74ms, fracRes: 0.1150, norm(attn): 1.5000, norm(output): 0.7695, norm(x): 0.8368, norm(y): 0.9933, norm:1.9455, tok/sec: 188392.93, flops:197.78, batch-reuse:1
@ 800 train 5.4536 , allloss: 5.4536, dt: 716.41ms, fracRes: 0.1117, norm(attn): 1.6094, norm(output): 0.7773, norm(x): 0.8569, norm(y): 0.9939, norm:121.5412, tok/sec: 182955.79, flops:192.07, batch-reuse:1
@ 801 train 10.3741 , allloss: 10.3741, dt: 714.65ms, fracRes: 0.0816, norm(attn): 1.3203, norm(output): 10.7500, norm(x): 10.7689, norm(y): 0.9937, norm:816.3348, tok/sec: 183408.39, flops:192.54, batch-reuse:1
@ 802 train 8.1954 , allloss: 8.1954, dt: 715.74ms, fracRes: 0.0953, norm(attn): 1.5234, norm(output): 19.2500, norm(x): 19.2103, norm(y): 0.9936, norm:6.7646, tok/sec: 183127.53, flops:192.25, batch-reuse:1
@ 803 train 8.0567 , allloss: 8.0567, dt: 714.92ms, fracRes: 0.1045, norm(attn): 1.7266, norm(output): 22.1250, norm(x): 22.4826, norm(y): 0.9937, norm:2.6695, tok/sec: 183338.72, flops:192.47, batch-reuse:1
@ 804 train 8.5538 , allloss: 8.5538, dt: 711.19ms, fracRes: 0.1048, norm(attn): 1.8984, norm(output): 26.1250, norm(x): 26.3771, norm(y): 0.9939, norm:7.4339, tok/sec: 184300.42, flops:193.48, batch-reuse:1
@ 805 train 8.5843 , allloss: 8.5843, dt: 714.38ms, fracRes: 0.1070, norm(attn): 2.1094, norm(output): 31.8750, norm(x): 31.8112, norm(y): 0.9939, norm:5.5087, tok/sec: 183475.90, flops:192.61, batch-reuse:1
@ 806 train 7.7822 , allloss: 7.7822, dt: 716.07ms, fracRes: 0.1130, norm(attn): 2.2500, norm(output): 37.5000, norm(x): 37.5632, norm(y): 0.9938, norm:1.7897, tok/sec: 183042.90, flops:192.16, batch-reuse:1
@ 807 train 7.9576 , allloss: 7.9576, dt: 718.84ms, fracRes: 0.1167, norm(attn): 2.3438, norm(output): 42.5000, norm(x): 42.5324, norm(y): 0.9937, norm:2.3907, tok/sec: 182338.85, flops:191.42, batch-reuse:1
@ 808 train 8.0339 , allloss: 8.0339, dt: 710.41ms, fracRes: 0.1178, norm(attn): 2.4375, norm(output): 46.7500, norm(x): 46.5457, norm(y): 0.9936, norm:2.6148, tok/sec: 184502.00, flops:193.69, batch-reuse:1
@ 809 train 7.7745 , allloss: 7.7745, dt: 717.46ms, fracRes: 0.1215, norm(attn): 2.5156, norm(output): 51.0000, norm(x): 50.9406, norm(y): 0.9937, norm:1.8424, tok/sec: 182689.50, flops:191.79, batch-reuse:1
@ 810 train 7.7610 , allloss: 7.7610, dt: 705.41ms, fracRes: 0.1288, norm(attn): 2.5938, norm(output): 55.0000, norm(x): 54.4839, norm(y): 0.9937, norm:1.3048, tok/sec: 185809.17, flops:195.06, batch-reuse:1
@ 811 train 7.8125 , allloss: 7.8125, dt: 707.80ms, fracRes: 0.1283, norm(attn): 2.6562, norm(output): 57.0000, norm(x): 57.6795, norm(y): 0.9937, norm:2.1767, tok/sec: 185182.28, flops:194.40, batch-reuse:1
@ 812 train 7.6041 , allloss: 7.6041, dt: 708.00ms, fracRes: 0.1470, norm(attn): 2.5625, norm(output): 59.7500, norm(x): 59.5033, norm(y): 0.9935, norm:1.6372, tok/sec: 185129.27, flops:194.35, batch-reuse:1
@ 813 train 7.7864 , allloss: 7.7864, dt: 709.57ms, fracRes: 0.1506, norm(attn): 2.5312, norm(output): 63.0000, norm(x): 62.2220, norm(y): 0.9933, norm:0.6525, tok/sec: 184719.41, flops:193.92, batch-reuse:1
@ 814 train 7.7445 , allloss: 7.7445, dt: 706.84ms, fracRes: 0.1511, norm(attn): 2.5000, norm(output): 63.7500, norm(x): 63.2332, norm(y): 0.9930, norm:1.0928, tok/sec: 185434.88, flops:194.67, batch-reuse:1
@ 815 train 7.6522 , allloss: 7.6522, dt: 699.52ms, fracRes: 0.1487, norm(attn): 2.4688, norm(output): 63.7500, norm(x): 63.3163, norm(y): 0.9928, norm:1.2725, tok/sec: 187372.89, flops:196.70, batch-reuse:1
@ 816 train 7.6255 , allloss: 7.6255, dt: 712.70ms, fracRes: 0.1479, norm(attn): 2.4844, norm(output): 63.0000, norm(x): 62.4650, norm(y): 0.9928, norm:0.6878, tok/sec: 183909.48, flops:193.07, batch-reuse:1
@ 817 train 7.6032 , allloss: 7.6032, dt: 710.99ms, fracRes: 0.1512, norm(attn): 2.4062, norm(output): 57.0000, norm(x): 57.7056, norm(y): 0.9928, norm:1.2051, tok/sec: 184350.92, flops:193.53, batch-reuse:1
@ 818 train 7.6024 , allloss: 7.6024, dt: 707.99ms, fracRes: 0.1602, norm(attn): 2.1250, norm(output): 48.0000, norm(x): 47.8458, norm(y): 0.9919, norm:1.6268, tok/sec: 185133.76, flops:194.35, batch-reuse:1
@ 819 train 7.6301 , allloss: 7.6301, dt: 710.53ms, fracRes: 0.1864, norm(attn): 1.6172, norm(output): 43.7500, norm(x): 43.6649, norm(y): 0.9902, norm:0.8176, tok/sec: 184470.74, flops:193.66, batch-reuse:1
@ 820 train 7.6605 , allloss: 7.6605, dt: 711.49ms, fracRes: 0.1879, norm(attn): 1.4141, norm(output): 38.0000, norm(x): 37.8836, norm(y): 0.9899, norm:1.2023, tok/sec: 184222.17, flops:193.40, batch-reuse:1
@ 821 train 7.5430 , allloss: 7.5430, dt: 709.60ms, fracRes: 0.1744, norm(attn): 1.9531, norm(output): 30.1250, norm(x): 30.3524, norm(y): 0.9924, norm:0.8254, tok/sec: 184713.64, flops:193.91, batch-reuse:1
@ 822 train 7.5995 , allloss: 7.5995, dt: 698.74ms, fracRes: 0.1735, norm(attn): 1.9141, norm(output): 24.0000, norm(x): 24.1467, norm(y): 0.9924, norm:1.0107, tok/sec: 187584.13, flops:196.93, batch-reuse:1
@ 823 train 7.3602 , allloss: 7.3602, dt: 702.33ms, fracRes: 0.1653, norm(attn): 1.7812, norm(output): 18.6250, norm(x): 18.7034, norm(y): 0.9917, norm:2.3884, tok/sec: 186624.55, flops:195.92, batch-reuse:1
@ 824 train 8.2257 , allloss: 8.2257, dt: 702.98ms, fracRes: 0.1680, norm(attn): 1.8281, norm(output): 3.3125, norm(x): 3.3877, norm(y): 0.9920, norm:6.6965, tok/sec: 186451.63, flops:195.74, batch-reuse:1
@ 825 train 6.9219 , allloss: 6.9219, dt: 702.61ms, fracRes: 0.1708, norm(attn): 1.8750, norm(output): 7.0000, norm(x): 7.1110, norm(y): 0.9929, norm:2.6713, tok/sec: 186550.84, flops:195.84, batch-reuse:1
@ 826 train 6.8681 , allloss: 6.8681, dt: 688.72ms, fracRes: 0.1731, norm(attn): 1.9688, norm(output): 7.0938, norm(x): 7.2365, norm(y): 0.9931, norm:1.5873, tok/sec: 190311.08, flops:199.79, batch-reuse:1
@ 827 train 6.9334 , allloss: 6.9334, dt: 703.71ms, fracRes: 0.1727, norm(attn): 2.0000, norm(output): 4.5625, norm(x): 4.6121, norm(y): 0.9935, norm:1.9462, tok/sec: 186258.40, flops:195.53, batch-reuse:1
@ 828 train 6.5221 , allloss: 6.5221, dt: 709.03ms, fracRes: 0.1498, norm(attn): 2.0938, norm(output): 4.5625, norm(x): 4.6207, norm(y): 0.9931, norm:1.4142, tok/sec: 184860.66, flops:194.07, batch-reuse:1
@ 829 train 6.4288 , allloss: 6.4288, dt: 702.43ms, fracRes: 0.1551, norm(attn): 2.0938, norm(output): 4.3125, norm(x): 4.4027, norm(y): 0.9932, norm:1.1349, tok/sec: 186597.95, flops:195.89, batch-reuse:1
@ 830 train 6.3010 , allloss: 6.3010, dt: 697.26ms, fracRes: 0.1563, norm(attn): 2.0469, norm(output): 3.4688, norm(x): 3.5164, norm(y): 0.9934, norm:1.4438, tok/sec: 187982.71, flops:197.34, batch-reuse:1
@ 831 train 6.1985 , allloss: 6.1985, dt: 698.49ms, fracRes: 0.1519, norm(attn): 2.0625, norm(output): 2.8281, norm(x): 2.9176, norm(y): 0.9934, norm:2.0592, tok/sec: 187650.72, flops:197.00, batch-reuse:1
@ 832 train 6.3024 , allloss: 6.3024, dt: 714.64ms, fracRes: 0.1525, norm(attn): 2.0312, norm(output): 2.6719, norm(x): 2.7187, norm(y): 0.9937, norm:3.7270, tok/sec: 183409.73, flops:192.54, batch-reuse:1
@ 833 train 5.9983 , allloss: 5.9983, dt: 722.31ms, fracRes: 0.1551, norm(attn): 2.0156, norm(output): 2.5000, norm(x): 2.5470, norm(y): 0.9937, norm:1.8223, tok/sec: 181461.34, flops:190.50, batch-reuse:1
@ 834 train 6.1667 , allloss: 6.1667, dt: 717.10ms, fracRes: 0.1478, norm(attn): 1.9297, norm(output): 2.2500, norm(x): 2.2949, norm(y): 0.9934, norm:3.6938, tok/sec: 182781.82, flops:191.88, batch-reuse:1
@ 835 train 5.8913 , allloss: 5.8913, dt: 710.33ms, fracRes: 0.1483, norm(attn): 1.8672, norm(output): 2.2031, norm(x): 2.2694, norm(y): 0.9932, norm:1.5844, tok/sec: 184521.57, flops:193.71, batch-reuse:1
@ 836 train 5.9111 , allloss: 5.9111, dt: 699.04ms, fracRes: 0.1483, norm(attn): 1.9922, norm(output): 2.1562, norm(x): 2.2030, norm(y): 0.9934, norm:2.1971, tok/sec: 187501.54, flops:196.84, batch-reuse:1
@ 837 train 5.8173 , allloss: 5.8173, dt: 696.19ms, fracRes: 0.1522, norm(attn): 2.0000, norm(output): 2.1250, norm(x): 2.1720, norm(y): 0.9934, norm:1.5831, tok/sec: 188269.64, flops:197.65, batch-reuse:1
@ 838 train 5.8520 , allloss: 5.8520, dt: 698.16ms, fracRes: 0.1505, norm(attn): 1.9688, norm(output): 1.9922, norm(x): 2.0582, norm(y): 0.9933, norm:2.1157, tok/sec: 187738.26, flops:197.09, batch-reuse:1
@ 839 train 5.7193 , allloss: 5.7193, dt: 699.90ms, fracRes: 0.1513, norm(attn): 1.8750, norm(output): 1.8906, norm(x): 1.9462, norm(y): 0.9933, norm:1.3511, tok/sec: 187273.13, flops:196.60, batch-reuse:1
@ 840 train 5.7781 , allloss: 5.7781, dt: 695.63ms, fracRes: 0.1543, norm(attn): 1.8438, norm(output): 1.8672, norm(x): 1.9292, norm(y): 0.9934, norm:1.9625, tok/sec: 188422.05, flops:197.81, batch-reuse:1
@ 841 train 5.7036 , allloss: 5.7036, dt: 701.12ms, fracRes: 0.1556, norm(attn): 1.7734, norm(output): 1.7969, norm(x): 1.8696, norm(y): 0.9934, norm:1.5595, tok/sec: 186946.69, flops:196.26, batch-reuse:1
@ 842 train 5.7626 , allloss: 5.7626, dt: 690.89ms, fracRes: 0.1531, norm(attn): 1.7578, norm(output): 1.7500, norm(x): 1.8214, norm(y): 0.9932, norm:1.4478, tok/sec: 189714.43, flops:199.16, batch-reuse:1
@ 843 train 5.6909 , allloss: 5.6909, dt: 692.33ms, fracRes: 0.1493, norm(attn): 1.7422, norm(output): 1.7344, norm(x): 1.7781, norm(y): 0.9933, norm:0.7834, tok/sec: 189320.15, flops:198.75, batch-reuse:1
@ 844 train 5.7412 , allloss: 5.7412, dt: 695.39ms, fracRes: 0.1526, norm(attn): 1.6484, norm(output): 1.6562, norm(x): 1.7202, norm(y): 0.9935, norm:1.2284, tok/sec: 188488.20, flops:197.88, batch-reuse:1
@ 845 train 5.6448 , allloss: 5.6448, dt: 698.68ms, fracRes: 0.1568, norm(attn): 1.5938, norm(output): 1.5781, norm(x): 1.6348, norm(y): 0.9934, norm:0.6633, tok/sec: 187598.21, flops:196.94, batch-reuse:1
@ 846 train 5.5822 , allloss: 5.5822, dt: 696.97ms, fracRes: 0.1553, norm(attn): 1.5469, norm(output): 1.5156, norm(x): 1.5816, norm(y): 0.9933, norm:0.7695, tok/sec: 188058.46, flops:197.42, batch-reuse:1
@ 847 train 5.6268 , allloss: 5.6268, dt: 702.20ms, fracRes: 0.1522, norm(attn): 1.5156, norm(output): 1.5000, norm(x): 1.5698, norm(y): 0.9932, norm:0.6862, tok/sec: 186659.85, flops:195.96, batch-reuse:1
@ 848 train 5.5597 , allloss: 5.5597, dt: 698.29ms, fracRes: 0.1528, norm(attn): 1.5078, norm(output): 1.4531, norm(x): 1.5186, norm(y): 0.9932, norm:0.7095, tok/sec: 187705.50, flops:197.05, batch-reuse:1
@ 849 train 5.5047 , allloss: 5.5047, dt: 698.85ms, fracRes: 0.1525, norm(attn): 1.4375, norm(output): 1.3203, norm(x): 1.3890, norm(y): 0.9932, norm:0.6496, tok/sec: 187552.71, flops:196.89, batch-reuse:1
@ 850 train 5.4672 , allloss: 5.4672, dt: 694.34ms, fracRes: 0.1500, norm(attn): 1.3828, norm(output): 1.2578, norm(x): 1.3391, norm(y): 0.9931, norm:0.6128, tok/sec: 188772.20, flops:198.17, batch-reuse:1
@ 851 train 5.7092 , allloss: 5.7092, dt: 690.75ms, fracRes: 0.1474, norm(attn): 1.3594, norm(output): 1.2500, norm(x): 1.3291, norm(y): 0.9930, norm:0.8812, tok/sec: 189751.82, flops:199.20, batch-reuse:1
@ 852 train 5.5317 , allloss: 5.5317, dt: 699.39ms, fracRes: 0.1534, norm(attn): 1.2969, norm(output): 1.1562, norm(x): 1.2387, norm(y): 0.9930, norm:0.7490, tok/sec: 187408.66, flops:196.74, batch-reuse:1
@ 853 train 5.4623 , allloss: 5.4623, dt: 703.24ms, fracRes: 0.1570, norm(attn): 1.2422, norm(output): 1.0859, norm(x): 1.1684, norm(y): 0.9930, norm:0.6114, tok/sec: 186384.12, flops:195.67, batch-reuse:1
@ 854 train 5.4420 , allloss: 5.4420, dt: 701.81ms, fracRes: 0.1547, norm(attn): 1.2500, norm(output): 1.0938, norm(x): 1.1719, norm(y): 0.9929, norm:0.5689, tok/sec: 186761.82, flops:196.06, batch-reuse:1
@ 855 train 5.4343 , allloss: 5.4343, dt: 695.80ms, fracRes: 0.1489, norm(attn): 1.2500, norm(output): 1.0938, norm(x): 1.1698, norm(y): 0.9928, norm:0.5458, tok/sec: 188376.66, flops:197.76, batch-reuse:1
@ 856 train 5.4110 , allloss: 5.4110, dt: 707.85ms, fracRes: 0.1478, norm(attn): 1.2422, norm(output): 1.0625, norm(x): 1.1392, norm(y): 0.9929, norm:0.5657, tok/sec: 185169.68, flops:194.39, batch-reuse:1
@ 857 train 5.3648 , allloss: 5.3648, dt: 707.29ms, fracRes: 0.1478, norm(attn): 1.2031, norm(output): 1.0391, norm(x): 1.1226, norm(y): 0.9929, norm:0.5640, tok/sec: 185315.49, flops:194.54, batch-reuse:1
@ 858 train 5.4574 , allloss: 5.4574, dt: 713.05ms, fracRes: 0.1477, norm(attn): 1.1719, norm(output): 1.0078, norm(x): 1.0920, norm(y): 0.9928, norm:0.5172, tok/sec: 183818.90, flops:192.97, batch-reuse:1
@ 859 train 5.3808 , allloss: 5.3808, dt: 707.91ms, fracRes: 0.1486, norm(attn): 1.1250, norm(output): 0.9922, norm(x): 1.0637, norm(y): 0.9929, norm:0.6210, tok/sec: 185152.72, flops:194.37, batch-reuse:1
@ 860 train 5.3924 , allloss: 5.3924, dt: 704.23ms, fracRes: 0.1472, norm(attn): 1.1406, norm(output): 1.0078, norm(x): 1.0822, norm(y): 0.9929, norm:0.6977, tok/sec: 186119.80, flops:195.39, batch-reuse:1
@ 861 train 5.3942 , allloss: 5.3942, dt: 708.75ms, fracRes: 0.1486, norm(attn): 1.1328, norm(output): 1.0000, norm(x): 1.0714, norm(y): 0.9928, norm:0.7419, tok/sec: 184935.28, flops:194.15, batch-reuse:1
@ 862 train 5.3635 , allloss: 5.3635, dt: 704.90ms, fracRes: 0.1491, norm(attn): 1.1328, norm(output): 1.0078, norm(x): 1.0871, norm(y): 0.9927, norm:0.5744, tok/sec: 185944.79, flops:195.21, batch-reuse:1
@ 863 train 5.3280 , allloss: 5.3280, dt: 688.04ms, fracRes: 0.1478, norm(attn): 1.1250, norm(output): 0.9883, norm(x): 1.0633, norm(y): 0.9927, norm:0.6403, tok/sec: 190500.48, flops:199.99, batch-reuse:1
@ 864 train 5.3386 , allloss: 5.3386, dt: 704.31ms, fracRes: 0.1481, norm(attn): 1.0859, norm(output): 0.9844, norm(x): 1.0555, norm(y): 0.9927, norm:0.6673, tok/sec: 186100.77, flops:195.37, batch-reuse:1
@ 865 train 5.2449 , allloss: 5.2449, dt: 691.65ms, fracRes: 0.1494, norm(attn): 1.0703, norm(output): 0.9570, norm(x): 1.0363, norm(y): 0.9928, norm:0.5329, tok/sec: 189507.52, flops:198.95, batch-reuse:1
@ 866 train 5.2476 , allloss: 5.2476, dt: 706.16ms, fracRes: 0.1492, norm(attn): 1.0781, norm(output): 0.9492, norm(x): 1.0221, norm(y): 0.9929, norm:0.6414, tok/sec: 185612.50, flops:194.86, batch-reuse:1
@ 867 train 5.2745 , allloss: 5.2745, dt: 705.47ms, fracRes: 0.1482, norm(attn): 1.0859, norm(output): 0.9766, norm(x): 1.0427, norm(y): 0.9928, norm:0.4977, tok/sec: 185794.47, flops:195.05, batch-reuse:1
@ 868 train 5.2892 , allloss: 5.2892, dt: 697.10ms, fracRes: 0.1494, norm(attn): 1.1172, norm(output): 0.9531, norm(x): 1.0262, norm(y): 0.9928, norm:0.5090, tok/sec: 188024.69, flops:197.39, batch-reuse:1
@ 869 train 5.2970 , allloss: 5.2970, dt: 708.87ms, fracRes: 0.1492, norm(attn): 1.1328, norm(output): 0.9492, norm(x): 1.0311, norm(y): 0.9927, norm:0.5590, tok/sec: 184901.75, flops:194.11, batch-reuse:1
@ 870 train 5.2946 , allloss: 5.2946, dt: 711.72ms, fracRes: 0.1498, norm(attn): 1.1641, norm(output): 0.9531, norm(x): 1.0381, norm(y): 0.9927, norm:0.6390, tok/sec: 184162.81, flops:193.33, batch-reuse:1
@ 871 train 5.2841 , allloss: 5.2841, dt: 692.54ms, fracRes: 0.1499, norm(attn): 1.1328, norm(output): 0.9414, norm(x): 1.0171, norm(y): 0.9926, norm:0.5523, tok/sec: 189262.02, flops:198.69, batch-reuse:1
@ 872 train 5.2544 , allloss: 5.2544, dt: 692.09ms, fracRes: 0.1501, norm(attn): 1.1328, norm(output): 0.9375, norm(x): 1.0121, norm(y): 0.9926, norm:0.5535, tok/sec: 189384.46, flops:198.82, batch-reuse:1
@ 873 train 5.2786 , allloss: 5.2786, dt: 697.47ms, fracRes: 0.1497, norm(attn): 1.1406, norm(output): 0.9570, norm(x): 1.0321, norm(y): 0.9926, norm:0.5798, tok/sec: 187925.07, flops:197.28, batch-reuse:1
@ 874 train 5.1863 , allloss: 5.1863, dt: 713.35ms, fracRes: 0.1520, norm(attn): 1.1328, norm(output): 0.9336, norm(x): 1.0032, norm(y): 0.9927, norm:0.5951, tok/sec: 183742.65, flops:192.89, batch-reuse:1
@ 875 train 5.2602 , allloss: 5.2602, dt: 708.13ms, fracRes: 0.1516, norm(attn): 1.1328, norm(output): 0.9297, norm(x): 1.0059, norm(y): 0.9927, norm:0.7275, tok/sec: 185096.49, flops:194.31, batch-reuse:1
@ 876 train 5.2537 , allloss: 5.2537, dt: 709.10ms, fracRes: 0.1514, norm(attn): 1.1328, norm(output): 0.9219, norm(x): 1.0017, norm(y): 0.9926, norm:0.7200, tok/sec: 184843.94, flops:194.05, batch-reuse:1
@ 877 train 5.2673 , allloss: 5.2673, dt: 707.42ms, fracRes: 0.1507, norm(attn): 1.1328, norm(output): 0.9258, norm(x): 1.0057, norm(y): 0.9926, norm:0.6397, tok/sec: 185280.70, flops:194.51, batch-reuse:1
@ 878 train 5.2447 , allloss: 5.2447, dt: 701.92ms, fracRes: 0.1519, norm(attn): 1.1250, norm(output): 0.9258, norm(x): 0.9986, norm(y): 0.9926, norm:0.6596, tok/sec: 186732.89, flops:196.03, batch-reuse:1
@ 879 train 5.1671 , allloss: 5.1671, dt: 714.80ms, fracRes: 0.1522, norm(attn): 1.1328, norm(output): 0.9219, norm(x): 1.0067, norm(y): 0.9925, norm:0.6759, tok/sec: 183369.36, flops:192.50, batch-reuse:1
@ 880 train 5.2978 , allloss: 5.2978, dt: 696.64ms, fracRes: 0.1502, norm(attn): 1.1406, norm(output): 0.9453, norm(x): 1.0198, norm(y): 0.9924, norm:0.5887, tok/sec: 188149.85, flops:197.52, batch-reuse:1
@ 881 train 5.1595 , allloss: 5.1595, dt: 685.55ms, fracRes: 0.1514, norm(attn): 1.1406, norm(output): 0.9492, norm(x): 1.0332, norm(y): 0.9925, norm:0.7750, tok/sec: 191192.88, flops:200.71, batch-reuse:1
@ 882 train 5.1347 , allloss: 5.1347, dt: 697.09ms, fracRes: 0.1536, norm(attn): 1.1328, norm(output): 0.9414, norm(x): 1.0190, norm(y): 0.9926, norm:0.5760, tok/sec: 188028.04, flops:197.39, batch-reuse:1
@ 883 train 5.1409 , allloss: 5.1409, dt: 703.63ms, fracRes: 0.1531, norm(attn): 1.1328, norm(output): 0.9375, norm(x): 1.0132, norm(y): 0.9925, norm:0.5922, tok/sec: 186279.29, flops:195.56, batch-reuse:1
@ 884 train 5.1166 , allloss: 5.1166, dt: 709.13ms, fracRes: 0.1542, norm(attn): 1.1484, norm(output): 0.9297, norm(x): 1.0058, norm(y): 0.9926, norm:0.5772, tok/sec: 184836.11, flops:194.04, batch-reuse:1
@ 885 train 5.1440 , allloss: 5.1440, dt: 708.32ms, fracRes: 0.1525, norm(attn): 1.1719, norm(output): 0.9336, norm(x): 1.0037, norm(y): 0.9925, norm:0.6203, tok/sec: 185045.96, flops:194.26, batch-reuse:1
@ 886 train 5.2121 , allloss: 5.2121, dt: 707.58ms, fracRes: 0.1480, norm(attn): 1.1797, norm(output): 0.9023, norm(x): 0.9913, norm(y): 0.9925, norm:0.5710, tok/sec: 185239.06, flops:194.46, batch-reuse:1
@ 887 train 5.2066 , allloss: 5.2066, dt: 697.95ms, fracRes: 0.1475, norm(attn): 1.1562, norm(output): 0.9102, norm(x): 0.9881, norm(y): 0.9925, norm:0.5425, tok/sec: 187794.63, flops:197.15, batch-reuse:1
@ 888 train 5.1128 , allloss: 5.1128, dt: 703.78ms, fracRes: 0.1483, norm(attn): 1.1484, norm(output): 0.8906, norm(x): 0.9836, norm(y): 0.9926, norm:0.5804, tok/sec: 186239.47, flops:195.51, batch-reuse:1
@ 889 train 5.1991 , allloss: 5.1991, dt: 703.67ms, fracRes: 0.1490, norm(attn): 1.1328, norm(output): 0.8906, norm(x): 0.9814, norm(y): 0.9925, norm:0.5704, tok/sec: 186269.00, flops:195.55, batch-reuse:1
@ 890 train 5.1744 , allloss: 5.1744, dt: 703.89ms, fracRes: 0.1489, norm(attn): 1.1328, norm(output): 0.9023, norm(x): 0.9889, norm(y): 0.9924, norm:0.6239, tok/sec: 186209.95, flops:195.48, batch-reuse:1
@ 891 train 5.1458 , allloss: 5.1458, dt: 706.54ms, fracRes: 0.1478, norm(attn): 1.1406, norm(output): 0.9023, norm(x): 0.9873, norm(y): 0.9924, norm:0.7812, tok/sec: 185511.34, flops:194.75, batch-reuse:1
@ 892 train 5.1114 , allloss: 5.1114, dt: 708.30ms, fracRes: 0.1472, norm(attn): 1.1328, norm(output): 0.8906, norm(x): 0.9783, norm(y): 0.9923, norm:0.6906, tok/sec: 185051.13, flops:194.27, batch-reuse:1
@ 893 train 5.0527 , allloss: 5.0527, dt: 703.56ms, fracRes: 0.1472, norm(attn): 1.1328, norm(output): 0.8906, norm(x): 0.9738, norm(y): 0.9923, norm:0.6139, tok/sec: 186297.97, flops:195.58, batch-reuse:1
@ 894 train 5.1406 , allloss: 5.1406, dt: 699.50ms, fracRes: 0.1469, norm(attn): 1.1328, norm(output): 0.8984, norm(x): 0.9842, norm(y): 0.9923, norm:0.6284, tok/sec: 187380.81, flops:196.71, batch-reuse:1
@ 895 train 5.1004 , allloss: 5.1004, dt: 707.31ms, fracRes: 0.1464, norm(attn): 1.1328, norm(output): 0.9141, norm(x): 0.9904, norm(y): 0.9923, norm:0.5471, tok/sec: 185309.62, flops:194.54, batch-reuse:1
@ 896 train 5.0614 , allloss: 5.0614, dt: 710.15ms, fracRes: 0.1479, norm(attn): 1.1328, norm(output): 0.9023, norm(x): 0.9807, norm(y): 0.9924, norm:0.4954, tok/sec: 184568.77, flops:193.76, batch-reuse:1
@ 897 train 5.1358 , allloss: 5.1358, dt: 709.61ms, fracRes: 0.1482, norm(attn): 1.1328, norm(output): 0.8945, norm(x): 0.9759, norm(y): 0.9924, norm:0.6213, tok/sec: 184710.85, flops:193.91, batch-reuse:1
@ 898 train 5.1713 , allloss: 5.1713, dt: 705.03ms, fracRes: 0.1470, norm(attn): 1.1250, norm(output): 0.8984, norm(x): 0.9767, norm(y): 0.9923, norm:0.6261, tok/sec: 185908.95, flops:195.17, batch-reuse:1
@ 899 train 5.1427 , allloss: 5.1427, dt: 695.94ms, fracRes: 0.1469, norm(attn): 1.1250, norm(output): 0.8906, norm(x): 0.9727, norm(y): 0.9923, norm:0.6980, tok/sec: 188337.04, flops:197.72, batch-reuse:1
@ 900 train 5.1915 , allloss: 5.1915, dt: 690.62ms, fracRes: 0.1471, norm(attn): 1.1172, norm(output): 0.8828, norm(x): 0.9627, norm(y): 0.9924, norm:0.6642, tok/sec: 189788.83, flops:199.24, batch-reuse:1
@ 901 train 5.1500 , allloss: 5.1500, dt: 693.54ms, fracRes: 0.1475, norm(attn): 1.1094, norm(output): 0.8828, norm(x): 0.9634, norm(y): 0.9925, norm:0.7427, tok/sec: 188990.90, flops:198.40, batch-reuse:1
@ 902 train 5.1194 , allloss: 5.1194, dt: 695.77ms, fracRes: 0.1475, norm(attn): 1.1250, norm(output): 0.8867, norm(x): 0.9702, norm(y): 0.9925, norm:0.7278, tok/sec: 188385.38, flops:197.77, batch-reuse:1
@ 903 train 5.0828 , allloss: 5.0828, dt: 687.97ms, fracRes: 0.1472, norm(attn): 1.1172, norm(output): 0.8789, norm(x): 0.9657, norm(y): 0.9925, norm:0.5312, tok/sec: 190521.15, flops:200.01, batch-reuse:1
@ 904 train 5.0314 , allloss: 5.0314, dt: 705.59ms, fracRes: 0.1479, norm(attn): 1.1172, norm(output): 0.8789, norm(x): 0.9624, norm(y): 0.9925, norm:0.7263, tok/sec: 185761.07, flops:195.01, batch-reuse:1
@ 905 train 5.0827 , allloss: 5.0827, dt: 685.39ms, fracRes: 0.1476, norm(attn): 1.1172, norm(output): 0.8750, norm(x): 0.9606, norm(y): 0.9924, norm:0.6518, tok/sec: 191237.24, flops:200.76, batch-reuse:1
@ 906 train 5.0994 , allloss: 5.0994, dt: 693.22ms, fracRes: 0.1480, norm(attn): 1.1172, norm(output): 0.8789, norm(x): 0.9568, norm(y): 0.9924, norm:0.6948, tok/sec: 189077.28, flops:198.49, batch-reuse:1
@ 907 train 4.9312 , allloss: 4.9312, dt: 693.40ms, fracRes: 0.1498, norm(attn): 1.1172, norm(output): 0.8672, norm(x): 0.9494, norm(y): 0.9925, norm:0.7340, tok/sec: 189027.35, flops:198.44, batch-reuse:1
@ 908 train 5.1327 , allloss: 5.1327, dt: 682.09ms, fracRes: 0.1496, norm(attn): 1.1094, norm(output): 0.8672, norm(x): 0.9473, norm(y): 0.9925, norm:0.7281, tok/sec: 192163.32, flops:201.73, batch-reuse:1
@ 909 train 5.3823 , allloss: 5.3823, dt: 693.09ms, fracRes: 0.1454, norm(attn): 1.1172, norm(output): 0.8945, norm(x): 0.9775, norm(y): 0.9922, norm:0.7130, tok/sec: 189112.08, flops:198.53, batch-reuse:1
@ 910 train 5.1152 , allloss: 5.1152, dt: 691.71ms, fracRes: 0.1488, norm(attn): 1.1250, norm(output): 0.8828, norm(x): 0.9649, norm(y): 0.9924, norm:0.7813, tok/sec: 189490.99, flops:198.93, batch-reuse:1
@ 911 train 5.1397 , allloss: 5.1397, dt: 691.58ms, fracRes: 0.1517, norm(attn): 1.1250, norm(output): 0.8789, norm(x): 0.9589, norm(y): 0.9924, norm:0.9174, tok/sec: 189524.44, flops:198.96, batch-reuse:1
@ 912 train 5.1204 , allloss: 5.1204, dt: 682.97ms, fracRes: 0.1503, norm(attn): 1.1250, norm(output): 0.8867, norm(x): 0.9706, norm(y): 0.9924, norm:0.8805, tok/sec: 191915.11, flops:201.47, batch-reuse:1
@ 913 train 5.0744 , allloss: 5.0744, dt: 689.56ms, fracRes: 0.1505, norm(attn): 1.1172, norm(output): 0.8867, norm(x): 0.9710, norm(y): 0.9924, norm:0.9990, tok/sec: 190081.50, flops:199.55, batch-reuse:1
@ 914 train 5.1254 , allloss: 5.1254, dt: 694.95ms, fracRes: 0.1516, norm(attn): 1.0859, norm(output): 0.8828, norm(x): 0.9661, norm(y): 0.9924, norm:0.7466, tok/sec: 188605.70, flops:198.00, batch-reuse:1
@ 915 train 5.1564 , allloss: 5.1564, dt: 693.89ms, fracRes: 0.1516, norm(attn): 1.0625, norm(output): 0.8750, norm(x): 0.9559, norm(y): 0.9923, norm:0.6100, tok/sec: 188893.23, flops:198.30, batch-reuse:1
@ 916 train 5.0370 , allloss: 5.0370, dt: 706.76ms, fracRes: 0.1531, norm(attn): 1.0625, norm(output): 0.8711, norm(x): 0.9527, norm(y): 0.9923, norm:0.6713, tok/sec: 185455.15, flops:194.69, batch-reuse:1
@ 917 train 5.0728 , allloss: 5.0728, dt: 707.73ms, fracRes: 0.1515, norm(attn): 1.0625, norm(output): 0.8711, norm(x): 0.9517, norm(y): 0.9922, norm:0.5953, tok/sec: 185200.68, flops:194.42, batch-reuse:1
@ 918 train 5.1025 , allloss: 5.1025, dt: 699.10ms, fracRes: 0.1507, norm(attn): 1.0312, norm(output): 0.8672, norm(x): 0.9514, norm(y): 0.9922, norm:0.6455, tok/sec: 187487.02, flops:196.82, batch-reuse:1
@ 919 train 5.0295 , allloss: 5.0295, dt: 726.51ms, fracRes: 0.1512, norm(attn): 1.0078, norm(output): 0.8633, norm(x): 0.9436, norm(y): 0.9922, norm:0.6221, tok/sec: 180413.43, flops:189.40, batch-reuse:1
@ 920 train 5.1097 , allloss: 5.1097, dt: 710.50ms, fracRes: 0.1525, norm(attn): 1.0078, norm(output): 0.8477, norm(x): 0.9401, norm(y): 0.9922, norm:0.6862, tok/sec: 184477.98, flops:193.67, batch-reuse:1
@ 921 train 5.0628 , allloss: 5.0628, dt: 725.25ms, fracRes: 0.1535, norm(attn): 1.0000, norm(output): 0.8359, norm(x): 0.9318, norm(y): 0.9923, norm:0.6326, tok/sec: 180725.93, flops:189.73, batch-reuse:1
@ 922 train 5.0655 , allloss: 5.0655, dt: 684.52ms, fracRes: 0.1521, norm(attn): 1.0078, norm(output): 0.8516, norm(x): 0.9466, norm(y): 0.9923, norm:0.5270, tok/sec: 191480.89, flops:201.02, batch-reuse:1
@ 923 train 5.0671 , allloss: 5.0671, dt: 696.50ms, fracRes: 0.1539, norm(attn): 1.0469, norm(output): 0.8516, norm(x): 0.9413, norm(y): 0.9923, norm:0.5382, tok/sec: 188185.86, flops:197.56, batch-reuse:1
@ 924 train 5.0211 , allloss: 5.0211, dt: 698.34ms, fracRes: 0.1550, norm(attn): 1.0469, norm(output): 0.8594, norm(x): 0.9403, norm(y): 0.9923, norm:0.4650, tok/sec: 187690.12, flops:197.04, batch-reuse:1
@ 925 train 5.0795 , allloss: 5.0795, dt: 688.39ms, fracRes: 0.1543, norm(attn): 1.0547, norm(output): 0.8594, norm(x): 0.9452, norm(y): 0.9923, norm:0.5488, tok/sec: 190403.69, flops:199.89, batch-reuse:1
@ 926 train 5.0497 , allloss: 5.0497, dt: 696.25ms, fracRes: 0.1530, norm(attn): 1.0625, norm(output): 0.8516, norm(x): 0.9402, norm(y): 0.9922, norm:0.5577, tok/sec: 188252.88, flops:197.63, batch-reuse:1
@ 927 train 5.0050 , allloss: 5.0050, dt: 702.64ms, fracRes: 0.1540, norm(attn): 1.0547, norm(output): 0.8438, norm(x): 0.9352, norm(y): 0.9922, norm:0.6702, tok/sec: 186542.80, flops:195.83, batch-reuse:1
@ 928 train 5.2084 , allloss: 5.2084, dt: 699.34ms, fracRes: 0.1554, norm(attn): 1.0469, norm(output): 0.8516, norm(x): 0.9372, norm(y): 0.9922, norm:0.8539, tok/sec: 187421.95, flops:196.76, batch-reuse:1
@ 929 train 5.2179 , allloss: 5.2179, dt: 701.01ms, fracRes: 0.1547, norm(attn): 1.0547, norm(output): 0.8516, norm(x): 0.9443, norm(y): 0.9922, norm:0.8079, tok/sec: 186976.51, flops:196.29, batch-reuse:1
@ 930 train 5.2213 , allloss: 5.2213, dt: 699.56ms, fracRes: 0.1556, norm(attn): 1.0469, norm(output): 0.8672, norm(x): 0.9488, norm(y): 0.9922, norm:0.6009, tok/sec: 187364.59, flops:196.70, batch-reuse:1
@ 931 train 5.2961 , allloss: 5.2961, dt: 697.37ms, fracRes: 0.1558, norm(attn): 1.0234, norm(output): 0.8633, norm(x): 0.9470, norm(y): 0.9921, norm:0.5889, tok/sec: 187952.44, flops:197.31, batch-reuse:1
@ 932 train 5.2705 , allloss: 5.2705, dt: 679.33ms, fracRes: 0.1553, norm(attn): 1.0078, norm(output): 0.8594, norm(x): 0.9420, norm(y): 0.9921, norm:0.5858, tok/sec: 192943.22, flops:202.55, batch-reuse:1
@ 933 train 5.2718 , allloss: 5.2718, dt: 691.95ms, fracRes: 0.1550, norm(attn): 1.0078, norm(output): 0.8672, norm(x): 0.9553, norm(y): 0.9921, norm:0.6189, tok/sec: 189424.26, flops:198.86, batch-reuse:1
@ 934 train 5.2265 , allloss: 5.2265, dt: 696.33ms, fracRes: 0.1557, norm(attn): 1.0000, norm(output): 0.8555, norm(x): 0.9434, norm(y): 0.9922, norm:0.5879, tok/sec: 188231.61, flops:197.61, batch-reuse:1
@ 935 train 5.1501 , allloss: 5.1501, dt: 695.11ms, fracRes: 0.1567, norm(attn): 0.9844, norm(output): 0.8359, norm(x): 0.9242, norm(y): 0.9922, norm:0.5233, tok/sec: 188562.42, flops:197.95, batch-reuse:1
@ 936 train 5.2265 , allloss: 5.2265, dt: 701.47ms, fracRes: 0.1558, norm(attn): 0.9766, norm(output): 0.8516, norm(x): 0.9359, norm(y): 0.9921, norm:0.6227, tok/sec: 186853.41, flops:196.16, batch-reuse:1
@ 937 train 5.2490 , allloss: 5.2490, dt: 709.72ms, fracRes: 0.1566, norm(attn): 0.9844, norm(output): 0.8438, norm(x): 0.9370, norm(y): 0.9921, norm:0.5858, tok/sec: 184681.43, flops:193.88, batch-reuse:1
@ 938 train 5.1908 , allloss: 5.1908, dt: 703.15ms, fracRes: 0.1578, norm(attn): 0.9961, norm(output): 0.8242, norm(x): 0.9211, norm(y): 0.9922, norm:0.5634, tok/sec: 186406.18, flops:195.69, batch-reuse:1
@ 939 train 5.2560 , allloss: 5.2560, dt: 696.50ms, fracRes: 0.1542, norm(attn): 1.0078, norm(output): 0.8281, norm(x): 0.9216, norm(y): 0.9922, norm:0.6481, tok/sec: 188185.47, flops:197.56, batch-reuse:1
@ 940 train 5.2619 , allloss: 5.2619, dt: 701.32ms, fracRes: 0.1497, norm(attn): 1.0156, norm(output): 0.8359, norm(x): 0.9265, norm(y): 0.9922, norm:0.8239, tok/sec: 186892.16, flops:196.20, batch-reuse:1
@ 941 train 5.2528 , allloss: 5.2528, dt: 702.71ms, fracRes: 0.1503, norm(attn): 1.0234, norm(output): 0.8281, norm(x): 0.9223, norm(y): 0.9922, norm:0.9370, tok/sec: 186523.37, flops:195.81, batch-reuse:1
@ 942 train 5.3383 , allloss: 5.3383, dt: 695.51ms, fracRes: 0.1486, norm(attn): 1.0469, norm(output): 0.8359, norm(x): 0.9248, norm(y): 0.9922, norm:0.8861, tok/sec: 188454.80, flops:197.84, batch-reuse:1
@ 943 train 5.1773 , allloss: 5.1773, dt: 689.19ms, fracRes: 0.1500, norm(attn): 1.0625, norm(output): 0.8320, norm(x): 0.9301, norm(y): 0.9922, norm:0.6372, tok/sec: 190181.58, flops:199.65, batch-reuse:1
@ 944 train 5.2301 , allloss: 5.2301, dt: 694.90ms, fracRes: 0.1508, norm(attn): 1.0547, norm(output): 0.8242, norm(x): 0.9201, norm(y): 0.9922, norm:0.7322, tok/sec: 188619.48, flops:198.01, batch-reuse:1
@ 945 train 5.3189 , allloss: 5.3189, dt: 696.72ms, fracRes: 0.1493, norm(attn): 1.0234, norm(output): 0.8242, norm(x): 0.9124, norm(y): 0.9920, norm:0.7315, tok/sec: 188127.19, flops:197.50, batch-reuse:1
@ 946 train 5.2300 , allloss: 5.2300, dt: 699.99ms, fracRes: 0.1492, norm(attn): 1.0547, norm(output): 0.8242, norm(x): 0.9229, norm(y): 0.9921, norm:0.7444, tok/sec: 187249.27, flops:196.57, batch-reuse:1
@ 947 train 5.2431 , allloss: 5.2431, dt: 694.45ms, fracRes: 0.1496, norm(attn): 1.0312, norm(output): 0.8438, norm(x): 0.9338, norm(y): 0.9920, norm:0.6836, tok/sec: 188740.84, flops:198.14, batch-reuse:1
@ 948 train 5.2507 , allloss: 5.2507, dt: 696.75ms, fracRes: 0.1497, norm(attn): 1.0312, norm(output): 0.8359, norm(x): 0.9363, norm(y): 0.9920, norm:0.6247, tok/sec: 188120.24, flops:197.49, batch-reuse:1
@ 949 train 5.2669 , allloss: 5.2669, dt: 689.14ms, fracRes: 0.1512, norm(attn): 1.0156, norm(output): 0.8164, norm(x): 0.9204, norm(y): 0.9920, norm:0.6089, tok/sec: 190196.45, flops:199.67, batch-reuse:1
@ 950 train 5.1936 , allloss: 5.1936, dt: 697.04ms, fracRes: 0.1520, norm(attn): 1.0000, norm(output): 0.8125, norm(x): 0.9076, norm(y): 0.9920, norm:0.7173, tok/sec: 188040.71, flops:197.41, batch-reuse:1
@ 951 train 5.2282 , allloss: 5.2282, dt: 697.16ms, fracRes: 0.1516, norm(attn): 0.9609, norm(output): 0.8047, norm(x): 0.9030, norm(y): 0.9920, norm:0.7594, tok/sec: 188008.10, flops:197.37, batch-reuse:1
@ 952 train 5.1756 , allloss: 5.1756, dt: 699.82ms, fracRes: 0.1510, norm(attn): 1.0469, norm(output): 0.8281, norm(x): 0.9183, norm(y): 0.9920, norm:0.7413, tok/sec: 187294.50, flops:196.62, batch-reuse:1
@ 953 train 5.1880 , allloss: 5.1880, dt: 687.76ms, fracRes: 0.1520, norm(attn): 1.0703, norm(output): 0.8125, norm(x): 0.9139, norm(y): 0.9922, norm:0.6753, tok/sec: 190578.21, flops:200.07, batch-reuse:1
@ 954 train 5.1338 , allloss: 5.1338, dt: 697.55ms, fracRes: 0.1519, norm(attn): 1.0703, norm(output): 0.8164, norm(x): 0.9169, norm(y): 0.9922, norm:0.7745, tok/sec: 187902.65, flops:197.26, batch-reuse:1
@ 955 train 5.2427 , allloss: 5.2427, dt: 704.76ms, fracRes: 0.1505, norm(attn): 1.0938, norm(output): 0.8281, norm(x): 0.9269, norm(y): 0.9922, norm:0.6400, tok/sec: 185982.22, flops:195.24, batch-reuse:1
@ 956 train 5.1659 , allloss: 5.1659, dt: 707.76ms, fracRes: 0.1517, norm(attn): 1.0781, norm(output): 0.8242, norm(x): 0.9238, norm(y): 0.9922, norm:0.6200, tok/sec: 185191.64, flops:194.41, batch-reuse:1
@ 957 train 5.1978 , allloss: 5.1978, dt: 706.02ms, fracRes: 0.1518, norm(attn): 1.0781, norm(output): 0.8281, norm(x): 0.9266, norm(y): 0.9922, norm:0.6220, tok/sec: 185648.41, flops:194.89, batch-reuse:1
@ 958 train 5.2026 , allloss: 5.2026, dt: 707.54ms, fracRes: 0.1513, norm(attn): 1.0859, norm(output): 0.8359, norm(x): 0.9298, norm(y): 0.9921, norm:0.6537, tok/sec: 185250.23, flops:194.48, batch-reuse:1
@ 959 train 5.0801 , allloss: 5.0801, dt: 707.16ms, fracRes: 0.1521, norm(attn): 1.0703, norm(output): 0.8242, norm(x): 0.9236, norm(y): 0.9921, norm:0.6128, tok/sec: 185350.41, flops:194.58, batch-reuse:1
@ 960 train 5.2485 , allloss: 5.2485, dt: 705.27ms, fracRes: 0.1517, norm(attn): 1.0781, norm(output): 0.8242, norm(x): 0.9133, norm(y): 0.9920, norm:0.6807, tok/sec: 185846.10, flops:195.10, batch-reuse:1
@ 961 train 5.1437 , allloss: 5.1437, dt: 704.73ms, fracRes: 0.1515, norm(attn): 1.0625, norm(output): 0.8203, norm(x): 0.9141, norm(y): 0.9920, norm:0.6999, tok/sec: 185987.76, flops:195.25, batch-reuse:1
@ 962 train 5.2305 , allloss: 5.2305, dt: 696.79ms, fracRes: 0.1518, norm(attn): 1.0703, norm(output): 0.8203, norm(x): 0.9208, norm(y): 0.9920, norm:0.7312, tok/sec: 188108.14, flops:197.48, batch-reuse:1
@ 963 train 5.2219 , allloss: 5.2219, dt: 693.71ms, fracRes: 0.1514, norm(attn): 1.1094, norm(output): 0.8242, norm(x): 0.9203, norm(y): 0.9919, norm:0.5361, tok/sec: 188942.18, flops:198.35, batch-reuse:1
@ 964 train 5.2474 , allloss: 5.2474, dt: 697.70ms, fracRes: 0.1510, norm(attn): 1.1094, norm(output): 0.8203, norm(x): 0.9213, norm(y): 0.9919, norm:0.7247, tok/sec: 187863.23, flops:197.22, batch-reuse:1
@ 965 train 5.2326 , allloss: 5.2326, dt: 696.31ms, fracRes: 0.1526, norm(attn): 1.1172, norm(output): 0.8125, norm(x): 0.9100, norm(y): 0.9921, norm:0.7281, tok/sec: 188238.63, flops:197.61, batch-reuse:1
@ 966 train 5.1580 , allloss: 5.1580, dt: 694.66ms, fracRes: 0.1517, norm(attn): 1.1094, norm(output): 0.8203, norm(x): 0.9166, norm(y): 0.9920, norm:0.7986, tok/sec: 188684.28, flops:198.08, batch-reuse:1
@ 967 train 5.0703 , allloss: 5.0703, dt: 698.69ms, fracRes: 0.1520, norm(attn): 1.1094, norm(output): 0.8477, norm(x): 0.9401, norm(y): 0.9920, norm:1.0059, tok/sec: 187597.38, flops:196.94, batch-reuse:1
@ 968 train 5.3203 , allloss: 5.3203, dt: 689.13ms, fracRes: 0.1533, norm(attn): 1.1172, norm(output): 0.8242, norm(x): 0.9236, norm(y): 0.9920, norm:0.8773, tok/sec: 190199.09, flops:199.67, batch-reuse:1
@ 969 train 5.2012 , allloss: 5.2012, dt: 697.04ms, fracRes: 0.1537, norm(attn): 1.1250, norm(output): 0.8242, norm(x): 0.9223, norm(y): 0.9920, norm:0.7379, tok/sec: 188040.52, flops:197.41, batch-reuse:1
@ 970 train 5.1791 , allloss: 5.1791, dt: 689.47ms, fracRes: 0.1541, norm(attn): 1.1172, norm(output): 0.8164, norm(x): 0.9145, norm(y): 0.9921, norm:0.7595, tok/sec: 190106.35, flops:199.57, batch-reuse:1
@ 971 train 5.2221 , allloss: 5.2221, dt: 695.72ms, fracRes: 0.1523, norm(attn): 1.1172, norm(output): 0.8320, norm(x): 0.9291, norm(y): 0.9920, norm:0.6824, tok/sec: 188396.87, flops:197.78, batch-reuse:1
@ 972 train 5.2197 , allloss: 5.2197, dt: 701.48ms, fracRes: 0.1517, norm(attn): 1.1250, norm(output): 0.8281, norm(x): 0.9258, norm(y): 0.9920, norm:0.6219, tok/sec: 186851.51, flops:196.16, batch-reuse:1
@ 973 train 5.2154 , allloss: 5.2154, dt: 687.91ms, fracRes: 0.1528, norm(attn): 1.1094, norm(output): 0.8203, norm(x): 0.9125, norm(y): 0.9920, norm:0.7067, tok/sec: 190537.85, flops:200.03, batch-reuse:1
@ 974 train 5.1902 , allloss: 5.1902, dt: 704.96ms, fracRes: 0.1527, norm(attn): 1.1172, norm(output): 0.8047, norm(x): 0.9035, norm(y): 0.9921, norm:0.6544, tok/sec: 185927.06, flops:195.19, batch-reuse:1
@ 975 train 5.2200 , allloss: 5.2200, dt: 693.09ms, fracRes: 0.1527, norm(attn): 1.1094, norm(output): 0.8086, norm(x): 0.9031, norm(y): 0.9920, norm:0.6293, tok/sec: 189111.88, flops:198.53, batch-reuse:1
@ 976 train 5.1398 , allloss: 5.1398, dt: 703.12ms, fracRes: 0.1537, norm(attn): 1.0781, norm(output): 0.7969, norm(x): 0.8854, norm(y): 0.9921, norm:0.5719, tok/sec: 186414.71, flops:195.70, batch-reuse:1
@ 977 train 5.1618 , allloss: 5.1618, dt: 702.51ms, fracRes: 0.1529, norm(attn): 1.0781, norm(output): 0.7891, norm(x): 0.8882, norm(y): 0.9921, norm:0.6545, tok/sec: 186577.18, flops:195.87, batch-reuse:1
@ 978 train 5.1738 , allloss: 5.1738, dt: 704.74ms, fracRes: 0.1534, norm(attn): 1.1016, norm(output): 0.7734, norm(x): 0.8820, norm(y): 0.9921, norm:0.7313, tok/sec: 185985.93, flops:195.25, batch-reuse:1
@ 979 train 5.0902 , allloss: 5.0902, dt: 691.07ms, fracRes: 0.1541, norm(attn): 1.0938, norm(output): 0.7891, norm(x): 0.8861, norm(y): 0.9920, norm:0.6176, tok/sec: 189664.10, flops:199.11, batch-reuse:1
@ 980 train 5.0630 , allloss: 5.0630, dt: 704.52ms, fracRes: 0.1543, norm(attn): 1.1094, norm(output): 0.7852, norm(x): 0.8854, norm(y): 0.9921, norm:0.6473, tok/sec: 186044.40, flops:195.31, batch-reuse:1
@ 981 train 5.0740 , allloss: 5.0740, dt: 696.62ms, fracRes: 0.1529, norm(attn): 1.1172, norm(output): 0.8008, norm(x): 0.9001, norm(y): 0.9920, norm:0.7333, tok/sec: 188155.46, flops:197.53, batch-reuse:1
@ 982 train 5.0694 , allloss: 5.0694, dt: 704.51ms, fracRes: 0.1536, norm(attn): 1.1094, norm(output): 0.7734, norm(x): 0.8775, norm(y): 0.9921, norm:0.6067, tok/sec: 186048.12, flops:195.31, batch-reuse:1
@ 983 train 5.1556 , allloss: 5.1556, dt: 702.49ms, fracRes: 0.1531, norm(attn): 1.0938, norm(output): 0.8047, norm(x): 0.8958, norm(y): 0.9920, norm:0.6896, tok/sec: 186581.42, flops:195.87, batch-reuse:1
@ 984 train 5.1029 , allloss: 5.1029, dt: 686.62ms, fracRes: 0.1537, norm(attn): 1.1094, norm(output): 0.7891, norm(x): 0.8870, norm(y): 0.9920, norm:0.7422, tok/sec: 190893.73, flops:200.40, batch-reuse:1
@ 985 train 5.1281 , allloss: 5.1281, dt: 694.77ms, fracRes: 0.1536, norm(attn): 1.1172, norm(output): 0.7930, norm(x): 0.8857, norm(y): 0.9920, norm:0.6314, tok/sec: 188654.63, flops:198.05, batch-reuse:1
@ 986 train 5.1509 , allloss: 5.1509, dt: 692.77ms, fracRes: 0.1536, norm(attn): 1.1172, norm(output): 0.7969, norm(x): 0.8911, norm(y): 0.9920, norm:0.6380, tok/sec: 189199.75, flops:198.62, batch-reuse:1
@ 987 train 5.0574 , allloss: 5.0574, dt: 695.03ms, fracRes: 0.1539, norm(attn): 1.1094, norm(output): 0.7891, norm(x): 0.8878, norm(y): 0.9920, norm:0.5202, tok/sec: 188585.90, flops:197.98, batch-reuse:1
@ 988 train 5.2134 , allloss: 5.2134, dt: 697.48ms, fracRes: 0.1539, norm(attn): 1.1094, norm(output): 0.7812, norm(x): 0.8856, norm(y): 0.9919, norm:0.6893, tok/sec: 187921.09, flops:197.28, batch-reuse:1
@ 989 train 5.2075 , allloss: 5.2075, dt: 697.38ms, fracRes: 0.1542, norm(attn): 1.0625, norm(output): 0.7734, norm(x): 0.8752, norm(y): 0.9919, norm:0.5923, tok/sec: 187950.26, flops:197.31, batch-reuse:1
@ 990 train 5.1083 , allloss: 5.1083, dt: 694.52ms, fracRes: 0.1541, norm(attn): 1.0625, norm(output): 0.7695, norm(x): 0.8752, norm(y): 0.9919, norm:0.6872, tok/sec: 188721.85, flops:198.12, batch-reuse:1
@ 991 train 5.0931 , allloss: 5.0931, dt: 704.93ms, fracRes: 0.1544, norm(attn): 1.0625, norm(output): 0.7695, norm(x): 0.8698, norm(y): 0.9919, norm:0.7420, tok/sec: 185935.29, flops:195.20, batch-reuse:1
@ 992 train 5.1779 , allloss: 5.1779, dt: 699.58ms, fracRes: 0.1541, norm(attn): 1.0781, norm(output): 0.7773, norm(x): 0.8863, norm(y): 0.9919, norm:0.7748, tok/sec: 187359.04, flops:196.69, batch-reuse:1
@ 993 train 5.0360 , allloss: 5.0360, dt: 695.15ms, fracRes: 0.1540, norm(attn): 1.0859, norm(output): 0.7812, norm(x): 0.8819, norm(y): 0.9918, norm:0.8345, tok/sec: 188551.56, flops:197.94, batch-reuse:1
@ 994 train 5.1186 , allloss: 5.1186, dt: 680.43ms, fracRes: 0.1545, norm(attn): 1.0938, norm(output): 0.7695, norm(x): 0.8726, norm(y): 0.9919, norm:0.7659, tok/sec: 192631.89, flops:202.23, batch-reuse:1
@ 995 train 5.0656 , allloss: 5.0656, dt: 705.57ms, fracRes: 0.1542, norm(attn): 1.0781, norm(output): 0.7617, norm(x): 0.8615, norm(y): 0.9919, norm:0.6186, tok/sec: 185767.79, flops:195.02, batch-reuse:1
@ 996 train 4.9540 , allloss: 4.9540, dt: 697.91ms, fracRes: 0.1543, norm(attn): 1.0625, norm(output): 0.7617, norm(x): 0.8634, norm(y): 0.9918, norm:0.6863, tok/sec: 187805.28, flops:197.16, batch-reuse:1
@ 997 train 5.1089 , allloss: 5.1089, dt: 709.76ms, fracRes: 0.1542, norm(attn): 1.0781, norm(output): 0.7695, norm(x): 0.8689, norm(y): 0.9918, norm:0.9503, tok/sec: 184670.21, flops:193.87, batch-reuse:1
@ 998 train 5.2714 , allloss: 5.2714, dt: 705.17ms, fracRes: 0.1530, norm(attn): 1.0625, norm(output): 0.7969, norm(x): 0.8912, norm(y): 0.9917, norm:0.8965, tok/sec: 185873.69, flops:195.13, batch-reuse:1
@ 999 train 5.0539 , allloss: 5.0539, dt: 689.04ms, fracRes: 0.1543, norm(attn): 1.0469, norm(output): 0.7617, norm(x): 0.8718, norm(y): 0.9919, norm:0.6544, tok/sec: 190224.56, flops:199.70, batch-reuse:1
@ 1000 train 5.0752 , allloss: 5.0752, dt: 694.70ms, fracRes: 0.1536, norm(attn): 1.0234, norm(output): 0.7812, norm(x): 0.8802, norm(y): 0.9918, norm:0.7559, tok/sec: 188673.53, flops:198.07, batch-reuse:1
@ 1001 train 5.1903 , allloss: 5.1903, dt: 701.73ms, fracRes: 0.1540, norm(attn): 1.0078, norm(output): 0.7695, norm(x): 0.8751, norm(y): 0.9917, norm:0.8155, tok/sec: 186784.02, flops:196.09, batch-reuse:1
@ 1002 train 5.1019 , allloss: 5.1019, dt: 707.70ms, fracRes: 0.1538, norm(attn): 1.0156, norm(output): 0.7734, norm(x): 0.8729, norm(y): 0.9918, norm:0.6537, tok/sec: 185208.98, flops:194.43, batch-reuse:1
@ 1003 train 5.1651 , allloss: 5.1651, dt: 701.33ms, fracRes: 0.1542, norm(attn): 1.0156, norm(output): 0.7852, norm(x): 0.8762, norm(y): 0.9918, norm:0.6527, tok/sec: 186889.94, flops:196.20, batch-reuse:1
@ 1004 train 5.0450 , allloss: 5.0450, dt: 703.13ms, fracRes: 0.1547, norm(attn): 1.0078, norm(output): 0.7695, norm(x): 0.8660, norm(y): 0.9918, norm:0.7443, tok/sec: 186411.93, flops:195.70, batch-reuse:1
@ 1005 train 5.1220 , allloss: 5.1220, dt: 687.76ms, fracRes: 0.1536, norm(attn): 1.0078, norm(output): 0.7656, norm(x): 0.8706, norm(y): 0.9918, norm:0.6203, tok/sec: 190577.61, flops:200.07, batch-reuse:1
@ 1006 train 5.1439 , allloss: 5.1439, dt: 701.03ms, fracRes: 0.1536, norm(attn): 1.0078, norm(output): 0.7695, norm(x): 0.8727, norm(y): 0.9917, norm:0.6820, tok/sec: 186971.17, flops:196.28, batch-reuse:1
@ 1007 train 5.0981 , allloss: 5.0981, dt: 699.87ms, fracRes: 0.1554, norm(attn): 1.0000, norm(output): 0.7539, norm(x): 0.8594, norm(y): 0.9918, norm:0.5114, tok/sec: 187279.38, flops:196.61, batch-reuse:1
@ 1008 train 5.0980 , allloss: 5.0980, dt: 702.28ms, fracRes: 0.1553, norm(attn): 0.9844, norm(output): 0.7539, norm(x): 0.8605, norm(y): 0.9917, norm:0.5936, tok/sec: 186637.73, flops:195.93, batch-reuse:1
@ 1009 train 5.0581 , allloss: 5.0581, dt: 685.78ms, fracRes: 0.1550, norm(attn): 0.9922, norm(output): 0.7695, norm(x): 0.8757, norm(y): 0.9917, norm:0.5653, tok/sec: 191127.67, flops:200.65, batch-reuse:1
@ 1010 train 5.1514 , allloss: 5.1514, dt: 699.23ms, fracRes: 0.1549, norm(attn): 1.0000, norm(output): 0.7734, norm(x): 0.8762, norm(y): 0.9917, norm:0.4999, tok/sec: 187450.77, flops:196.79, batch-reuse:1
@ 1011 train 5.0728 , allloss: 5.0728, dt: 698.01ms, fracRes: 0.1548, norm(attn): 1.0000, norm(output): 0.7695, norm(x): 0.8730, norm(y): 0.9917, norm:0.5285, tok/sec: 187780.58, flops:197.13, batch-reuse:1
@ 1012 train 5.1173 , allloss: 5.1173, dt: 686.29ms, fracRes: 0.1550, norm(attn): 1.0078, norm(output): 0.7656, norm(x): 0.8724, norm(y): 0.9917, norm:0.6557, tok/sec: 190985.71, flops:200.50, batch-reuse:1
@ 1013 train 5.1210 , allloss: 5.1210, dt: 696.04ms, fracRes: 0.1541, norm(attn): 1.0078, norm(output): 0.7656, norm(x): 0.8651, norm(y): 0.9917, norm:0.6682, tok/sec: 188310.72, flops:197.69, batch-reuse:1
@ 1014 train 5.0939 , allloss: 5.0939, dt: 693.33ms, fracRes: 0.1544, norm(attn): 1.0000, norm(output): 0.7578, norm(x): 0.8606, norm(y): 0.9917, norm:1.0346, tok/sec: 189045.81, flops:198.46, batch-reuse:1
@ 1015 train 5.1993 , allloss: 5.1993, dt: 688.32ms, fracRes: 0.1545, norm(attn): 1.0000, norm(output): 0.7617, norm(x): 0.8654, norm(y): 0.9917, norm:1.4348, tok/sec: 190423.28, flops:199.91, batch-reuse:1
@ 1016 train 5.2229 , allloss: 5.2229, dt: 693.13ms, fracRes: 0.1545, norm(attn): 1.0000, norm(output): 0.7656, norm(x): 0.8629, norm(y): 0.9917, norm:0.6144, tok/sec: 189100.89, flops:198.52, batch-reuse:1
@ 1017 train 5.0843 , allloss: 5.0843, dt: 693.98ms, fracRes: 0.1548, norm(attn): 0.9844, norm(output): 0.7461, norm(x): 0.8505, norm(y): 0.9917, norm:1.2809, tok/sec: 188868.70, flops:198.27, batch-reuse:1
@ 1018 train 5.1626 , allloss: 5.1626, dt: 693.10ms, fracRes: 0.1537, norm(attn): 1.0547, norm(output): 0.7656, norm(x): 0.8674, norm(y): 0.9916, norm:0.6113, tok/sec: 189108.89, flops:198.53, batch-reuse:1
@ 1019 train 5.1238 , allloss: 5.1238, dt: 693.56ms, fracRes: 0.1546, norm(attn): 1.1172, norm(output): 0.7812, norm(x): 0.8767, norm(y): 0.9916, norm:0.9123, tok/sec: 188984.34, flops:198.40, batch-reuse:1
@ 1020 train 5.0404 , allloss: 5.0404, dt: 679.13ms, fracRes: 0.1546, norm(attn): 1.1328, norm(output): 0.7773, norm(x): 0.8732, norm(y): 0.9917, norm:0.6248, tok/sec: 192998.56, flops:202.61, batch-reuse:1
@ 1021 train 5.0512 , allloss: 5.0512, dt: 685.84ms, fracRes: 0.1544, norm(attn): 1.1875, norm(output): 0.7852, norm(x): 0.8737, norm(y): 0.9917, norm:0.9096, tok/sec: 191110.60, flops:200.63, batch-reuse:1
@ 1022 train 4.9481 , allloss: 4.9481, dt: 685.37ms, fracRes: 0.1552, norm(attn): 1.2031, norm(output): 0.7773, norm(x): 0.8709, norm(y): 0.9919, norm:0.5917, tok/sec: 191243.36, flops:200.77, batch-reuse:1
@ 1023 train 5.0161 , allloss: 5.0161, dt: 699.05ms, fracRes: 0.1545, norm(attn): 1.2031, norm(output): 0.7812, norm(x): 0.8792, norm(y): 0.9917, norm:0.6721, tok/sec: 187499.68, flops:196.84, batch-reuse:1
@ 1024 train 4.9955 , allloss: 4.9955, dt: 700.11ms, fracRes: 0.1548, norm(attn): 1.2031, norm(output): 0.7773, norm(x): 0.8714, norm(y): 0.9918, norm:0.6130, tok/sec: 187216.62, flops:196.54, batch-reuse:1
@ 1025 train 5.0560 , allloss: 5.0560, dt: 700.57ms, fracRes: 0.1548, norm(attn): 1.2031, norm(output): 0.7734, norm(x): 0.8711, norm(y): 0.9918, norm:0.7396, tok/sec: 187094.68, flops:196.41, batch-reuse:1
@ 1026 train 5.0752 , allloss: 5.0752, dt: 695.17ms, fracRes: 0.1536, norm(attn): 1.2031, norm(output): 0.7812, norm(x): 0.8751, norm(y): 0.9916, norm:0.7501, tok/sec: 188545.41, flops:197.94, batch-reuse:1
@ 1027 train 5.0924 , allloss: 5.0924, dt: 698.65ms, fracRes: 0.1532, norm(attn): 1.2031, norm(output): 0.7734, norm(x): 0.8695, norm(y): 0.9917, norm:0.6977, tok/sec: 187606.92, flops:196.95, batch-reuse:1
@ 1028 train 5.0275 , allloss: 5.0275, dt: 683.87ms, fracRes: 0.1543, norm(attn): 1.2031, norm(output): 0.7656, norm(x): 0.8580, norm(y): 0.9918, norm:0.6087, tok/sec: 191662.40, flops:201.21, batch-reuse:1
@ 1029 train 5.0469 , allloss: 5.0469, dt: 696.90ms, fracRes: 0.1539, norm(attn): 1.2344, norm(output): 0.7812, norm(x): 0.8742, norm(y): 0.9918, norm:0.6720, tok/sec: 188078.99, flops:197.45, batch-reuse:1
@ 1030 train 5.0133 , allloss: 5.0133, dt: 697.54ms, fracRes: 0.1542, norm(attn): 1.2344, norm(output): 0.7852, norm(x): 0.8867, norm(y): 0.9918, norm:0.6489, tok/sec: 187907.34, flops:197.27, batch-reuse:1
@ 1031 train 5.0763 , allloss: 5.0763, dt: 685.49ms, fracRes: 0.1548, norm(attn): 1.2500, norm(output): 0.7812, norm(x): 0.8755, norm(y): 0.9918, norm:0.7276, tok/sec: 191209.24, flops:200.73, batch-reuse:1
@ 1032 train 4.9911 , allloss: 4.9911, dt: 695.58ms, fracRes: 0.1552, norm(attn): 1.2422, norm(output): 0.7812, norm(x): 0.8719, norm(y): 0.9919, norm:0.7030, tok/sec: 188436.71, flops:197.82, batch-reuse:1
@ 1033 train 5.0377 , allloss: 5.0377, dt: 701.08ms, fracRes: 0.1550, norm(attn): 1.2344, norm(output): 0.7734, norm(x): 0.8666, norm(y): 0.9918, norm:0.6266, tok/sec: 186956.67, flops:196.27, batch-reuse:1
@ 1034 train 5.0113 , allloss: 5.0113, dt: 696.17ms, fracRes: 0.1557, norm(attn): 1.2422, norm(output): 0.7852, norm(x): 0.8739, norm(y): 0.9918, norm:0.6345, tok/sec: 188275.89, flops:197.65, batch-reuse:1
@ 1035 train 5.0217 , allloss: 5.0217, dt: 695.71ms, fracRes: 0.1553, norm(attn): 1.2344, norm(output): 0.7656, norm(x): 0.8614, norm(y): 0.9918, norm:0.7867, tok/sec: 188401.32, flops:197.78, batch-reuse:1
@ 1036 train 5.0724 , allloss: 5.0724, dt: 695.53ms, fracRes: 0.1550, norm(attn): 1.2344, norm(output): 0.7852, norm(x): 0.8736, norm(y): 0.9917, norm:0.7756, tok/sec: 188449.31, flops:197.83, batch-reuse:1
@ 1037 train 5.0254 , allloss: 5.0254, dt: 688.80ms, fracRes: 0.1565, norm(attn): 1.2344, norm(output): 0.7617, norm(x): 0.8606, norm(y): 0.9919, norm:0.9090, tok/sec: 190289.48, flops:199.77, batch-reuse:1
@ 1038 train 4.9806 , allloss: 4.9806, dt: 703.93ms, fracRes: 0.1560, norm(attn): 1.2266, norm(output): 0.7617, norm(x): 0.8605, norm(y): 0.9917, norm:0.7532, tok/sec: 186201.43, flops:195.47, batch-reuse:1
@ 1039 train 5.0237 , allloss: 5.0237, dt: 701.40ms, fracRes: 0.1559, norm(attn): 1.2031, norm(output): 0.7656, norm(x): 0.8632, norm(y): 0.9917, norm:0.5757, tok/sec: 186870.69, flops:196.18, batch-reuse:1
@ 1040 train 4.9612 , allloss: 4.9612, dt: 692.86ms, fracRes: 0.1565, norm(attn): 1.2031, norm(output): 0.7500, norm(x): 0.8416, norm(y): 0.9919, norm:0.7591, tok/sec: 189176.44, flops:198.60, batch-reuse:1
@ 1041 train 5.0435 , allloss: 5.0435, dt: 703.85ms, fracRes: 0.1567, norm(attn): 1.2031, norm(output): 0.7539, norm(x): 0.8588, norm(y): 0.9918, norm:0.7332, tok/sec: 186220.79, flops:195.49, batch-reuse:1
@ 1042 train 4.9433 , allloss: 4.9433, dt: 706.92ms, fracRes: 0.1568, norm(attn): 1.2109, norm(output): 0.7578, norm(x): 0.8584, norm(y): 0.9918, norm:0.6186, tok/sec: 185413.93, flops:194.65, batch-reuse:1
@ 1043 train 5.0391 , allloss: 5.0391, dt: 707.98ms, fracRes: 0.1558, norm(attn): 1.2188, norm(output): 0.7617, norm(x): 0.8631, norm(y): 0.9917, norm:0.6729, tok/sec: 185136.25, flops:194.36, batch-reuse:1
@ 1044 train 5.0055 , allloss: 5.0055, dt: 707.72ms, fracRes: 0.1564, norm(attn): 1.2188, norm(output): 0.7617, norm(x): 0.8578, norm(y): 0.9918, norm:0.7435, tok/sec: 185203.61, flops:194.43, batch-reuse:1
@ 1045 train 5.0564 , allloss: 5.0564, dt: 699.17ms, fracRes: 0.1562, norm(attn): 1.2031, norm(output): 0.7539, norm(x): 0.8537, norm(y): 0.9916, norm:0.6475, tok/sec: 187466.88, flops:196.80, batch-reuse:1
@ 1046 train 5.0458 , allloss: 5.0458, dt: 692.03ms, fracRes: 0.1560, norm(attn): 1.1953, norm(output): 0.7461, norm(x): 0.8361, norm(y): 0.9917, norm:0.7011, tok/sec: 189403.45, flops:198.84, batch-reuse:1
@ 1047 train 4.9770 , allloss: 4.9770, dt: 704.11ms, fracRes: 0.1558, norm(attn): 1.1719, norm(output): 0.7500, norm(x): 0.8453, norm(y): 0.9916, norm:0.8493, tok/sec: 186152.88, flops:195.42, batch-reuse:1
@ 1048 train 5.0129 , allloss: 5.0129, dt: 696.04ms, fracRes: 0.1560, norm(attn): 1.1719, norm(output): 0.7539, norm(x): 0.8492, norm(y): 0.9916, norm:0.9963, tok/sec: 188309.69, flops:197.69, batch-reuse:1
@ 1049 train 4.9479 , allloss: 4.9479, dt: 705.83ms, fracRes: 0.1562, norm(attn): 1.1484, norm(output): 0.7422, norm(x): 0.8401, norm(y): 0.9917, norm:0.8525, tok/sec: 185698.14, flops:194.95, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9922, 0.0063, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6914, 0.1885, 0.1216, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2988, 0.1377, 0.1523, 0.4102, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2520, 0.1367, 0.2188, 0.1885, 0.2041, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2793, 0.0967, 0.1021, 0.1406, 0.2559, 0.1250, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1865, 0.0835, 0.1211, 0.1396, 0.1387, 0.1982, 0.1318, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1846, 0.0527, 0.0835, 0.1113, 0.1641, 0.1465, 0.1787, 0.0786, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1484, 0.0488, 0.0806, 0.0767, 0.1436, 0.1279, 0.0864, 0.1934, 0.0947, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0977, 0.0596, 0.0289, 0.1230, 0.1099, 0.0962, 0.0640, 0.1104, 0.2246, 0.0845, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1562, 0.0654, 0.0605, 0.0659, 0.0972, 0.1221, 0.0688, 0.0957, 0.1216, 0.0698, 0.0767, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0840, 0.0713, 0.0474, 0.1147, 0.0586, 0.1338, 0.0581, 0.1123, 0.1035, 0.0684, 0.0762, 0.0718, 0.0000, 0.0000, 0.0000],
        [0.2119, 0.0315, 0.0747, 0.0239, 0.0952, 0.0908, 0.0830, 0.0645, 0.0615, 0.0515, 0.1016, 0.0420, 0.0684, 0.0000, 0.0000],
        [0.1123, 0.0420, 0.0454, 0.0449, 0.0884, 0.0825, 0.0542, 0.0894, 0.0732, 0.0510, 0.0894, 0.0586, 0.1118, 0.0569, 0.0000],
        [0.0996, 0.0371, 0.0344, 0.0623, 0.0942, 0.0703, 0.0669, 0.0752, 0.0684, 0.0264, 0.0496, 0.0415, 0.1157, 0.1123, 0.0457]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0194,     -0.7305,     -0.3496,     -0.6992,     -0.6094,     -0.4648,     -0.3789,     -0.4375,     -0.4961,     -0.4453,     -0.3555,     -0.4902,     -0.3555,     -0.5078,     -0.5312],
        [     0.0371,     -5.0312,     -2.5781,     -3.2969,     -2.6562,     -1.9609,     -1.9062,     -1.8516,     -2.2031,     -2.5156,     -1.4609,     -2.1719,     -0.8242,     -1.8125,     -1.5547],
        [    -0.0018,     -1.2969,     -1.7344,     -0.4238,     -0.7188,     -0.8125,     -0.1396,     -0.5039,     -0.4238,     -0.8516,     -0.4141,     -0.4590,     -0.2969,     -0.2256,      0.0288],
        [    -0.0119,     -0.7852,     -0.6836,      0.3047,     -0.7383,      0.5195,     -0.3359,      0.1494,     -0.3984,     -0.3203,     -0.3535,     -0.5273,      0.1348,      0.0698,     -0.0272],
        [    -0.0109,     -0.6211,     -0.1504,     -0.3027,     -0.2207,     -0.1602,     -0.3301,     -0.6289,     -0.2773,     -0.8789,     -0.4473,     -0.6055,      0.0645,      0.0698,     -0.7578],
        [     0.0007,     -1.0547,     -1.0078,     -0.6836,     -0.0815,     -0.8008,     -0.5508,     -0.7266,      0.0194,     -1.2188,     -0.4121,     -0.8203,     -0.3809,      0.0840,     -0.7109],
        [    -0.0076,     -0.8164,     -0.4414,     -0.3008,     -0.3066,      0.0508,     -0.3535,     -0.0649,     -0.0386,     -0.6953,     -0.1836,     -0.5742,      0.1699,      0.0557,     -0.1934],
        [    -0.0061,     -1.2578,     -0.7969,     -0.5117,     -0.1245,     -0.2383,     -0.0381,     -0.8594,     -0.4883,     -0.7188,     -0.2471,     -1.0000,     -0.3105,     -0.1924,     -0.6055],
        [    -0.0162,     -1.1250,     -0.6250,     -0.6719,     -0.0503,     -0.1650,     -0.5508,      0.2500,     -0.4629,     -1.0625,     -0.2324,     -0.8594,      0.2061,     -0.2119,     -0.4961],
        [    -0.0108,     -0.5039,     -1.2266,      0.2217,      0.1104,     -0.0226,     -0.4297,      0.1143,      0.8242,     -0.1523,     -0.3848,     -0.1562,      0.3789,      0.6445,     -0.2969],
        [     0.0082,     -0.8672,     -0.9414,     -0.8555,     -0.4707,     -0.2402,     -0.8164,     -0.4844,     -0.2461,     -0.8008,     -0.7070,     -1.1406,     -0.3926,     -0.3535,     -0.6602],
        [    -0.0277,     -0.1904,     -0.5977,      0.2852,     -0.3848,      0.4395,     -0.3965,      0.2637,      0.1807,     -0.2305,     -0.1230,     -0.1836,      0.2871,      0.0845,      0.5156],
        [     0.0187,     -1.8906,     -1.0234,     -2.1562,     -0.7812,     -0.8281,     -0.9180,     -1.1719,     -1.2188,     -1.3984,     -0.7188,     -1.6016,     -1.1094,     -1.2344,     -1.5078],
        [    -0.0133,     -0.9961,     -0.9180,     -0.9336,     -0.2520,     -0.3242,     -0.7422,     -0.2412,     -0.4375,     -0.8008,     -0.2402,     -0.6641,     -0.0182,     -0.6914,     -0.4375],
        [    -0.0115,     -1.0000,     -1.0781,     -0.4844,     -0.0698,     -0.3594,     -0.4102,     -0.2949,     -0.3926,     -1.3438,     -0.7109,     -0.8906,      0.1377,      0.1079,     -0.7969]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7147],
        [0.2423],
        [0.1496],
        [0.2858],
        [0.2932],
        [0.1329],
        [0.2091],
        [0.2173],
        [0.0827],
        [0.2161],
        [0.0611],
        [0.2355],
        [0.1674],
        [0.0530]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9609,     0.0388,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0069,     0.9141,     0.0796,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0162,     0.3789,     0.5977,     0.0061,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0312,     0.4863,     0.1172,     0.0156,     0.3496,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0147,     0.3086,     0.0281,     0.0138,     0.5156,     0.1182,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0013,     0.3242,     0.0148,     0.0021,     0.1240,     0.2236,     0.3086,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0082,     0.1729,     0.0649,     0.0083,     0.1011,     0.1406,     0.3008,     0.2031,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0014,     0.1396,     0.0123,     0.0006,     0.0522,     0.2871,     0.0674,     0.2139,     0.2256,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0029,     0.1221,     0.0028,     0.0008,     0.0569,     0.0679,     0.1074,     0.0684,     0.3125,     0.2578,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0005,     0.0435,     0.0065,     0.0003,     0.0046,     0.0077,     0.0154,     0.0508,     0.0295,     0.7344,     0.1060,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0008,     0.0071,     0.0090,     0.0005,     0.0151,     0.0070,     0.0317,     0.0118,     0.0598,     0.1025,     0.7500,     0.0063,     0.0000,     0.0000,     0.0000],
        [    0.0010,     0.0093,     0.0022,     0.0007,     0.0035,     0.0044,     0.0101,     0.0181,     0.0452,     0.1611,     0.1035,     0.5352,     0.1050,     0.0000,     0.0000],
        [    0.0002,     0.0129,     0.0010,     0.0000,     0.0043,     0.0283,     0.0050,     0.0194,     0.0195,     0.0464,     0.1260,     0.1523,     0.3828,     0.2012,     0.0000],
        [    0.0001,     0.0078,     0.0020,     0.0002,     0.0063,     0.0046,     0.0270,     0.0115,     0.0302,     0.0547,     0.2852,     0.0493,     0.1069,     0.2441,     0.1699]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0001,     -0.6484,     -0.5859,     -0.6250,     -0.6914,     -0.6797,     -0.7109,     -0.6914,     -0.7188,     -0.6758,     -0.7617,     -0.6211,     -0.6914,     -0.7266,     -0.6523],
        [    -0.1216,     -3.3281,     -4.0312,     -7.1562,     -4.5312,     -4.0312,     -3.0781,     -3.5312,     -2.9062,     -1.7656,     -1.6484,     -0.1973,     -1.5234,     -0.9297,      0.0913],
        [    -0.0908,      4.7812,      2.3438,      1.6406,      4.2188,      3.7812,      5.2188,      4.6250,      4.7188,      5.8750,      7.3438,      6.2812,      5.9375,      6.4375,      7.4375],
        [    -0.0874,      3.0625,      3.5156,     -1.0781,      0.3906,      1.6719,      0.9453,      1.6328,      1.2344,      5.5000,      3.0156,      5.4375,      3.5312,      3.1719,      5.9688],
        [    -0.1279,      2.6094,      1.1953,     -0.8281,      2.2812,      3.1250,      3.8906,      4.4062,      5.6875,      6.1250,      6.1250,      6.3438,      6.9375,      7.9375,      6.8750],
        [    -0.1240,      2.9219,      0.5234,     -0.1895,      3.4375,      1.9609,      4.3438,      4.5000,      5.7500,      6.5625,      6.3125,      6.4375,      6.4375,      8.0625,      5.3125],
        [    -0.1318,      5.4062,      2.3281,      0.3965,      4.4375,      5.0312,      5.3750,      5.5312,      6.9375,      7.7812,      7.9688,      8.4375,      7.8750,      9.3750,      8.5625],
        [    -0.1055,      2.9531,      1.9688,     -0.0845,      2.4062,      2.7500,      3.5000,      3.1094,      4.8125,      6.0312,      5.4688,      6.6562,      4.9688,      6.8750,      6.9375],
        [    -0.1445,      4.4688,      2.0312,     -0.9453,      3.4844,      5.1875,      3.7344,      4.9062,      4.9375,      5.8750,      6.6875,      7.0625,      7.7188,      7.2500,      6.8750],
        [    -0.1226,      3.6250,     -0.1592,     -1.3516,      2.8594,      3.0312,      3.5000,      3.0469,      4.5625,      4.3750,      5.3125,      6.5000,      5.3438,      6.8750,      6.2812],
        [    -0.1592,      4.4062,      2.5000,     -0.6680,      2.1562,      2.6719,      3.3594,      4.5625,      4.0000,      7.2188,      5.2812,      6.6562,      7.3750,      6.7188,      6.4062],
        [    -0.0933,      2.0625,      2.2969,     -0.6133,      2.8125,      2.0312,      3.5469,      2.5625,      4.1875,      4.7188,      6.7188,      1.9375,      3.9531,      5.8125,      5.6250],
        [    -0.1128,      2.1562,      0.6797,     -0.4980,      1.1641,      1.3984,      2.2188,      2.8125,      3.7188,      5.0000,      4.5625,      6.1875,      4.5625,      5.8750,      5.5938],
        [    -0.1514,      4.1250,      1.5547,     -1.5625,      3.0312,      4.9062,      3.1875,      4.5312,      4.5312,      5.4062,      6.4062,      6.5938,      7.5000,      6.8750,      6.4062],
        [    -0.1309,      3.8906,      2.5625,      0.4023,      3.6719,      3.3594,      5.1250,      4.2812,      5.2500,      5.8438,      7.5000,      5.7500,      6.5000,      7.3438,      6.9688]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7877],
        [0.4102],
        [0.3850],
        [0.1945],
        [0.1784],
        [0.1635],
        [0.1829],
        [0.1286],
        [0.1882],
        [0.1491],
        [0.2332],
        [0.1123],
        [0.0905],
        [0.0927]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8242,     0.1768,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9375,     0.0028,     0.0603,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8477,     0.0047,     0.1348,     0.0136,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8359,     0.0096,     0.0996,     0.0087,     0.0452,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4980,     0.0195,     0.0801,     0.0195,     0.2637,     0.1187,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8789,     0.0053,     0.0267,     0.0031,     0.0229,     0.0157,     0.0488,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7344,     0.0026,     0.0151,     0.0051,     0.0386,     0.0076,     0.1177,     0.0771,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8047,     0.0031,     0.0126,     0.0007,     0.0081,     0.0034,     0.0151,     0.0688,     0.0830,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5977,     0.0019,     0.0026,     0.0016,     0.0203,     0.0070,     0.0237,     0.0583,     0.1885,     0.0972,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8047,     0.0042,     0.0066,     0.0009,     0.0006,     0.0008,     0.0013,     0.0065,     0.0260,     0.1279,     0.0214,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5938,     0.0042,     0.0114,     0.0061,     0.0113,     0.0042,     0.0337,     0.0596,     0.2256,     0.0410,     0.0029,     0.0063,     0.0000,     0.0000,     0.0000],
        [    0.0874,     0.0011,     0.0015,     0.0008,     0.0084,     0.0009,     0.0159,     0.0057,     0.7109,     0.0537,     0.0054,     0.0020,     0.1045,     0.0000,     0.0000],
        [    0.4648,     0.0033,     0.0092,     0.0008,     0.0071,     0.0014,     0.0103,     0.0254,     0.0913,     0.0952,     0.0038,     0.0122,     0.0583,     0.2168,     0.0000],
        [    0.6875,     0.0048,     0.0058,     0.0005,     0.0027,     0.0027,     0.0053,     0.0068,     0.0605,     0.0581,     0.0040,     0.0182,     0.0148,     0.1196,     0.0084]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.0811,     -0.0562,     -0.0820,     -0.0913,     -0.1108,     -0.0830,     -0.0669,     -0.0618,     -0.0403,     -0.0972,     -0.0542,     -0.0540,     -0.0525,     -0.0674],
        [    -0.0012,     -1.5391,     -0.7305,     -2.9219,     -0.0253,     -0.6836,     -0.0889,     -0.0845,      1.1094,     -1.0000,     -2.4531,     -2.5781,     -0.7773,      1.2656,     -2.0938],
        [     0.0011,     -5.8125,     -2.7500,     -4.5938,     -3.3281,     -5.1875,     -4.1250,     -3.0156,     -2.1875,     -3.8438,     -7.6875,     -3.2031,     -3.3281,     -2.5312,     -4.3750],
        [     0.0060,     -5.1875,     -1.8281,     -4.1250,     -1.7734,     -3.2812,     -2.1406,     -2.0625,     -0.0879,     -2.0156,     -7.0312,     -3.3750,     -2.3750,     -0.3340,     -3.8125],
        [    -0.0099,     -4.4688,     -2.1406,     -4.5938,     -2.9219,     -4.1562,     -4.1562,     -1.0781,     -2.5156,     -3.0000,     -6.2500,     -2.2969,     -2.6406,     -3.0156,     -4.0938],
        [    -0.0152,     -3.2656,     -1.8438,     -3.2656,     -0.6523,     -1.4531,     -0.4570,      0.1074,      0.6133,     -1.1172,     -3.8750,     -2.8281,     -1.1875,     -0.0430,     -2.5156],
        [     0.0105,     -5.0938,     -3.4844,     -5.6562,     -3.6406,     -4.0000,     -2.8750,     -2.3906,      0.1895,     -1.5781,     -6.2812,     -3.3281,     -2.3438,      0.0245,     -3.3125],
        [     0.0003,     -5.6250,     -3.8906,     -4.9688,     -2.9531,     -4.5625,     -1.8281,     -2.2656,      1.3984,     -1.2656,     -6.0625,     -4.5625,     -1.1250,      1.7109,     -3.3125],
        [    -0.0031,     -5.5625,     -4.1562,     -7.0625,     -4.5938,     -5.4688,     -3.9688,     -2.4531,     -2.2812,     -1.4453,     -5.4688,     -3.6094,     -2.9062,     -2.0625,     -4.8438],
        [    -0.0019,     -5.7500,     -5.4375,     -5.9062,     -3.3906,     -4.4688,     -3.2344,     -2.3281,     -1.1562,     -1.8203,     -2.9688,     -3.2031,     -2.2031,     -0.8438,     -4.3750],
        [     0.0187,     -5.2500,     -4.7812,     -6.7500,     -7.1562,     -6.9375,     -6.3750,     -4.8125,     -3.4062,     -1.8203,     -3.6094,     -2.5156,     -2.8750,     -1.7734,     -4.4375],
        [     0.0001,     -4.9688,     -3.9531,     -4.5625,     -3.9688,     -4.9688,     -2.8750,     -2.2969,     -0.9688,     -2.6719,     -5.3125,     -4.5312,     -1.8203,     -0.6367,     -3.5469],
        [    -0.0012,     -4.3438,     -4.0625,     -4.6562,     -2.3438,     -4.5312,     -1.7109,     -2.7188,      2.0938,     -0.4863,     -2.7812,     -3.7969,      0.1748,      3.4531,     -2.5312],
        [    -0.0052,     -4.9688,     -3.9219,     -6.3125,     -4.1875,     -5.8125,     -3.8281,     -2.9062,     -1.6328,     -1.5859,     -4.8125,     -3.6406,     -2.0781,     -0.7695,     -4.3750],
        [     0.0165,     -4.9375,     -4.7500,     -7.1250,     -5.5312,     -5.5312,     -4.8438,     -4.5938,     -2.4062,     -2.4531,     -5.1250,     -3.6094,     -3.8281,     -1.7344,     -4.4062]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8726],
        [0.5677],
        [0.5285],
        [0.3701],
        [0.5461],
        [0.5411],
        [0.4279],
        [0.4866],
        [0.4244],
        [0.4463],
        [0.4400],
        [0.4022],
        [0.3372],
        [0.3364]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9844,     0.0154,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8047,     0.0317,     0.1641,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9609,     0.0047,     0.0287,     0.0065,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7812,     0.0255,     0.1172,     0.0708,     0.0068,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9258,     0.0212,     0.0281,     0.0146,     0.0011,     0.0075,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8555,     0.0087,     0.0850,     0.0393,     0.0015,     0.0015,     0.0092,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9297,     0.0026,     0.0156,     0.0071,     0.0003,     0.0014,     0.0044,     0.0386,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8633,     0.0061,     0.0610,     0.0305,     0.0034,     0.0062,     0.0063,     0.0205,     0.0021,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6992,     0.0093,     0.1650,     0.0625,     0.0072,     0.0120,     0.0088,     0.0145,     0.0038,     0.0195,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8867,     0.0089,     0.0332,     0.0153,     0.0025,     0.0046,     0.0049,     0.0165,     0.0023,     0.0236,     0.0034,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6367,     0.0092,     0.0347,     0.0165,     0.0045,     0.0084,     0.0334,     0.0483,     0.0016,     0.0131,     0.0013,     0.1914,     0.0000,     0.0000,     0.0000],
        [    0.8320,     0.0058,     0.0236,     0.0089,     0.0009,     0.0056,     0.0092,     0.0488,     0.0012,     0.0200,     0.0016,     0.0289,     0.0114,     0.0000,     0.0000],
        [    0.8438,     0.0042,     0.0200,     0.0084,     0.0014,     0.0053,     0.0048,     0.0271,     0.0018,     0.0245,     0.0022,     0.0435,     0.0080,     0.0051,     0.0000],
        [    0.8828,     0.0063,     0.0359,     0.0125,     0.0009,     0.0043,     0.0042,     0.0143,     0.0004,     0.0080,     0.0009,     0.0194,     0.0056,     0.0020,     0.0013]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0011,     -0.0850,     -0.0752,     -0.0967,     -0.1611,     -0.1289,     -0.1191,     -0.0898,     -0.1553,     -0.1099,     -0.1484,     -0.1030,     -0.1094,     -0.1299,     -0.1455],
        [     0.0481,     -4.0938,     -3.1562,     -4.2812,     -7.0312,     -5.5312,     -4.2500,     -3.5156,     -8.5000,     -5.1875,     -7.4688,     -2.2031,     -4.8125,     -6.3125,     -6.6562],
        [     0.0082,     -3.2188,     -1.5781,     -2.7031,     -3.2812,     -2.5938,     -2.0938,     -2.9219,     -4.8438,     -2.4531,     -4.2500,     -1.8203,     -3.6094,     -4.1562,     -3.6250],
        [     0.0376,     -5.2812,     -3.4688,     -4.9688,     -6.8125,     -6.0938,     -4.8125,     -4.8125,     -8.5000,     -5.5312,     -7.8438,     -3.1406,     -6.1875,     -7.0625,     -7.1875],
        [     0.0342,     -3.3906,     -1.8594,     -2.3594,     -4.7188,     -4.8438,     -3.1406,     -3.0156,     -6.0625,     -5.0312,     -7.0000,     -1.7188,     -4.7812,     -5.2812,     -5.5625],
        [     0.0427,     -3.7344,     -3.4531,     -4.0938,     -6.7188,     -4.7812,     -3.5625,     -2.0312,     -6.1562,     -4.4688,     -7.0625,     -3.0469,     -4.5625,     -5.2500,     -7.1250],
        [     0.0522,     -4.5312,     -2.2500,     -3.0312,     -6.2812,     -6.2812,     -4.5000,     -4.3438,     -7.6562,     -6.4062,     -8.9375,     -3.7969,     -6.6875,     -7.2500,     -7.5625],
        [     0.0474,     -5.8438,     -4.0312,     -4.8125,     -7.9688,     -6.4688,     -5.3125,     -3.1406,     -6.9375,     -4.9688,     -7.9062,     -3.2656,     -5.4688,     -5.8438,     -7.5625],
        [     0.0096,     -4.9375,     -2.6406,     -3.3281,     -5.5000,     -4.9375,     -4.9062,     -3.7344,     -6.0000,     -4.3125,     -6.6250,     -2.0781,     -5.0938,     -5.3438,     -5.4688],
        [     0.0096,     -4.3125,     -1.4297,     -2.4062,     -4.5625,     -4.0625,     -4.3750,     -3.8594,     -5.2188,     -3.5625,     -5.5312,     -2.0781,     -4.4062,     -4.6875,     -4.3750],
        [     0.0261,     -4.5625,     -3.2500,     -4.0312,     -5.8438,     -5.2188,     -5.1875,     -3.9531,     -5.9062,     -3.5938,     -5.5312,     -3.2188,     -4.8125,     -5.0625,     -5.7188],
        [     0.0354,     -4.2188,     -2.8750,     -3.6250,     -4.9375,     -4.2812,     -2.9219,     -2.5469,     -5.9375,     -3.8438,     -6.1562,     -1.1719,     -4.5000,     -4.6250,     -5.7188],
        [     0.0289,     -4.9375,     -3.5312,     -4.5312,     -6.8438,     -4.9688,     -4.4688,     -2.8125,     -6.4688,     -3.7031,     -6.2188,     -3.3281,     -4.2500,     -5.1250,     -6.4688],
        [     0.0152,     -5.2812,     -3.7188,     -4.5938,     -6.3750,     -5.0625,     -5.1562,     -3.4219,     -6.1250,     -3.5156,     -5.9062,     -2.9531,     -4.6562,     -5.0938,     -5.8438],
        [     0.0194,     -4.9062,     -3.1875,     -4.2500,     -6.8750,     -5.3125,     -5.3125,     -4.0938,     -7.6250,     -4.6875,     -6.8438,     -3.7969,     -5.0625,     -6.0625,     -6.5312]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9525],
        [0.8395],
        [0.8411],
        [0.8507],
        [0.8667],
        [0.7988],
        [0.8171],
        [0.8417],
        [0.7598],
        [0.7493],
        [0.7758],
        [0.7402],
        [0.7486],
        [0.7548]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0000,     0.0001,     0.0004,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0012,     -0.2734,     -0.3320,     -0.2949,     -0.2002,     -0.2754,     -0.3047,     -0.3320,     -0.2578,     -0.2520,     -0.2285,     -0.3047,     -0.3184,     -0.2559,     -0.2773],
        [    -0.1309,    -30.2500,    -34.2500,    -31.1250,    -19.3750,    -28.6250,    -31.7500,    -35.0000,    -25.1250,    -26.8750,    -23.6250,    -32.0000,    -33.5000,    -26.5000,    -28.5000],
        [    -0.1602,    -35.5000,    -40.2500,    -36.5000,    -22.3750,    -32.2500,    -37.5000,    -40.0000,    -28.6250,    -30.7500,    -28.2500,    -37.7500,    -38.2500,    -31.5000,    -32.5000],
        [    -0.1235,    -29.2500,    -33.7500,    -29.5000,    -18.6250,    -26.3750,    -29.6250,    -32.2500,    -24.1250,    -25.8750,    -23.0000,    -31.5000,    -31.6250,    -25.6250,    -26.5000],
        [    -0.0486,     -9.1875,    -14.6250,     -9.2500,     -7.8750,    -12.2500,    -11.1250,    -11.3750,     -9.9375,     -9.8125,     -8.6875,    -13.2500,    -13.5000,    -10.3125,    -10.6875],
        [    -0.1592,    -32.2500,    -39.7500,    -35.0000,    -24.2500,    -35.5000,    -37.7500,    -41.2500,    -30.8750,    -31.3750,    -26.8750,    -37.0000,    -39.2500,    -30.1250,    -33.7500],
        [    -0.1289,    -26.5000,    -34.0000,    -27.7500,    -19.0000,    -30.8750,    -30.6250,    -33.5000,    -26.1250,    -26.2500,    -22.5000,    -31.2500,    -34.0000,    -26.5000,    -28.6250],
        [    -0.1582,    -33.7500,    -40.2500,    -35.2500,    -22.3750,    -33.7500,    -35.5000,    -39.2500,    -30.7500,    -30.5000,    -26.7500,    -37.2500,    -38.0000,    -31.2500,    -32.5000],
        [    -0.1328,    -27.1250,    -32.5000,    -29.1250,    -18.6250,    -24.0000,    -28.1250,    -30.0000,    -25.1250,    -23.0000,    -22.0000,    -30.3750,    -28.2500,    -25.2500,    -25.0000],
        [    -0.1309,    -25.0000,    -30.7500,    -27.5000,    -17.3750,    -25.6250,    -27.7500,    -30.7500,    -25.3750,    -23.6250,    -21.3750,    -28.5000,    -29.3750,    -25.1250,    -26.1250],
        [    -0.1357,    -25.8750,    -32.7500,    -29.7500,    -19.3750,    -25.3750,    -29.2500,    -32.2500,    -27.1250,    -24.5000,    -23.5000,    -30.1250,    -31.1250,    -27.1250,    -28.0000],
        [    -0.1348,    -29.3750,    -35.7500,    -30.2500,    -19.5000,    -26.8750,    -31.1250,    -33.2500,    -24.6250,    -25.7500,    -22.8750,    -32.7500,    -32.2500,    -25.6250,    -27.5000],
        [    -0.1836,    -37.5000,    -45.2500,    -41.2500,    -26.6250,    -38.0000,    -42.2500,    -46.5000,    -35.5000,    -34.7500,    -32.0000,    -41.7500,    -44.2500,    -36.5000,    -38.2500],
        [    -0.1367,    -28.2500,    -34.0000,    -31.3750,    -19.2500,    -26.1250,    -30.2500,    -33.5000,    -27.0000,    -26.3750,    -24.6250,    -31.2500,    -32.5000,    -28.2500,    -28.6250],
        [    -0.1387,    -28.5000,    -33.7500,    -30.2500,    -19.0000,    -28.6250,    -31.5000,    -34.5000,    -26.0000,    -26.1250,    -23.8750,    -30.8750,    -33.2500,    -27.2500,    -28.8750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7607],
        [0.6347],
        [0.6405],
        [0.5589],
        [0.6352],
        [0.5642],
        [0.6309],
        [0.6097],
        [0.5449],
        [0.5294],
        [0.5209],
        [0.4682],
        [0.4926],
        [0.4396]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0006,     0.9922,     0.0063,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0175,     0.9414,     0.0237,     0.0193,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0267,     0.5781,     0.1689,     0.2275,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0007,     0.4160,     0.0381,     0.0045,     0.0000,     0.5430,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0006,     0.0879,     0.0017,     0.0015,     0.0000,     0.9062,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0022,     0.0000,     0.0000,     0.0000,     0.9961,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0006,     0.1299,     0.0034,     0.0025,     0.0000,     0.8633,     0.0001,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.0006,     0.0005,     0.0014,     0.0000,     0.9922,     0.0001,     0.0001,     0.0008,     0.0035,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0140,     0.0068,     0.0139,     0.0315,     0.0038,     0.4531,     0.0197,     0.0422,     0.1152,     0.1602,     0.1396,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0062,     0.3047,     0.0206,     0.0055,     0.0000,     0.6055,     0.0011,     0.0002,     0.0022,     0.0238,     0.0303,     0.0004,     0.0000,     0.0000,     0.0000],
        [    0.0009,     0.0762,     0.0014,     0.0016,     0.0000,     0.8828,     0.0001,     0.0000,     0.0004,     0.0027,     0.0061,     0.0000,     0.0275,     0.0000,     0.0000],
        [    0.0093,     0.1084,     0.0189,     0.0151,     0.0001,     0.4219,     0.0036,     0.0016,     0.0057,     0.0232,     0.0236,     0.0003,     0.3496,     0.0187,     0.0000],
        [    0.0015,     0.0000,     0.0012,     0.0039,     0.4648,     0.0000,     0.0154,     0.4629,     0.0017,     0.0003,     0.0002,     0.0459,     0.0002,     0.0001,     0.0022]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0005,      0.1001,      0.0239,      0.0056,     -0.1748,      0.1699,     -0.0520,     -0.1157,     -0.0181,      0.0562,      0.0684,     -0.1016,      0.1064,      0.0581,     -0.0091],
        [    -0.0291,      8.7500,      2.2188,      1.2969,    -14.1875,     13.1250,     -4.2188,    -11.3125,     -0.9453,      2.7969,      4.6875,     -7.4688,      6.9062,      4.6250,     -0.6016],
        [    -0.0173,      7.3438,      2.2656,      1.1562,     -8.1875,      8.0625,     -2.5781,     -5.7500,     -1.0703,      0.4316,      2.5625,     -3.6719,      5.7500,      2.5156,     -0.2207],
        [    -0.0248,      3.9531,      0.2773,      0.0718,     -7.5938,      8.1875,     -1.7969,     -5.6562,     -0.4961,      2.6562,      2.9531,     -5.2500,      4.0000,      2.8594,     -0.9180],
        [    -0.0288,      3.0469,      1.8125,      2.1094,     -7.2500,      7.7812,     -1.7422,     -3.8438,      0.1904,      3.2656,      3.7812,     -3.2812,      5.0938,      2.7031,     -0.2832],
        [    -0.0322,      6.3438,      3.9531,      1.8203,     -6.6875,      6.5938,     -1.3281,     -1.2266,     -0.9922,      2.9531,      4.1875,     -2.3125,     10.0000,      3.0156,      3.1250],
        [    -0.0096,      5.0625,      1.0938,      0.9883,     -5.6562,      7.3750,     -2.3594,     -4.1562,     -0.0889,      1.3984,      2.8438,     -2.9219,      4.1562,      2.4531,     -0.2354],
        [    -0.0195,      6.2500,      0.9844,      0.8438,    -11.5000,     12.3750,     -4.1562,     -9.5000,     -0.2246,      3.1875,      5.0312,     -6.0625,      5.4375,      4.8438,     -1.3281],
        [    -0.0303,      5.2812,      1.6562,      1.3281,     -8.7500,      7.1875,     -2.3906,     -4.4062,     -1.9609,      1.1484,      2.3438,     -5.1562,      6.4375,      1.0469,      0.0160],
        [    -0.0645,      2.0000,      1.9531,      2.9219,     -6.3750,      9.4375,      0.0723,     -0.2578,      2.3438,      3.8281,      5.3750,     -3.4375,     10.1250,      4.7812,     -0.4766],
        [    -0.0309,     -0.7500,     -0.0432,      0.7773,     -1.3281,      3.4375,      0.3066,      1.0703,      2.0781,      2.4062,      2.2656,     -1.6406,      3.9219,      2.4375,     -0.2061],
        [    -0.0159,      3.8750,      1.1797,     -0.1426,     -5.0625,      4.5625,     -1.7812,     -3.3750,     -1.0547,      1.3281,      1.5703,     -2.8750,      2.5000,      1.5000,     -0.2715],
        [    -0.0212,      4.4062,      0.4062,      0.5547,     -7.3438,      6.8438,     -2.0312,     -4.7812,     -0.8555,      1.0781,      1.8750,     -4.5938,      3.3906,      1.7812,     -0.9922],
        [    -0.0273,      2.4219,      0.6875,      0.4609,     -4.5625,      3.7812,     -0.9688,     -1.7656,     -0.5195,      0.8867,      0.9062,     -3.5781,      3.6094,      0.6680,      0.0806],
        [    -0.0037,     -3.5312,     -0.2656,      0.9492,      5.7188,     -5.5000,      2.3281,      5.7188,      0.1006,     -1.6484,     -2.1250,      3.4219,     -2.1406,     -2.7969,      0.3906]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3604],
        [0.2112],
        [0.1814],
        [0.1126],
        [0.0946],
        [0.0779],
        [0.1320],
        [0.1141],
        [0.1074],
        [0.1011],
        [0.0201],
        [0.0989],
        [0.0925],
        [0.0438]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9922,     0.0059,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9844,     0.0162,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9961,     0.0040,     0.0000,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9375,     0.0150,     0.0000,     0.0022,     0.0469,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1367,     0.0106,     0.0000,     0.0084,     0.6562,     0.1875,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.8438,     0.0045,     0.0000,     0.0006,     0.0347,     0.1147,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.8594,     0.0118,     0.0000,     0.0008,     0.0011,     0.1260,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9414,     0.0013,     0.0000,     0.0001,     0.0400,     0.0154,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.8125,     0.0035,     0.0000,     0.0003,     0.0042,     0.1797,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9336,     0.0028,     0.0000,     0.0003,     0.0400,     0.0236,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.7422,     0.0056,     0.0000,     0.0006,     0.0150,     0.2373,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0007,     0.0000,     0.0000],
        [    0.0000,     0.6875,     0.0356,     0.0005,     0.0034,     0.0014,     0.2617,     0.0011,     0.0000,     0.0000,     0.0000,     0.0069,     0.0002,     0.0000,     0.0000],
        [    0.0000,     0.0077,     0.0000,     0.0000,     0.0000,     0.0017,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.9922]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0002,      0.1299,      0.1147,      0.0811,      0.1084,      0.1338,      0.1147,      0.1045,      0.1006,      0.0933,      0.0913,      0.0952,      0.1235,      0.0889,      0.1377],
        [    -0.1060,     37.0000,     32.7500,     19.8750,     32.2500,     37.0000,     35.0000,     29.8750,     29.7500,     25.3750,     25.8750,     25.8750,     34.7500,     26.6250,     42.2500],
        [    -0.0825,     39.2500,     34.2500,     23.1250,     32.0000,     36.5000,     36.2500,     30.1250,     26.7500,     25.5000,     25.0000,     28.6250,     33.5000,     23.8750,     43.5000],
        [    -0.0967,     36.2500,     32.2500,     20.0000,     31.2500,     36.5000,     33.5000,     29.1250,     29.0000,     25.2500,     25.7500,     25.8750,     34.0000,     26.1250,     41.0000],
        [    -0.0859,     40.5000,     35.0000,     24.2500,     33.0000,     37.7500,     37.7500,     31.2500,     27.8750,     26.5000,     25.7500,     30.0000,     34.5000,     25.2500,     44.7500],
        [    -0.0918,     42.5000,     38.2500,     25.6250,     36.2500,     39.5000,     41.5000,     34.0000,     29.6250,     29.0000,     27.8750,     32.5000,     36.5000,     26.1250,     49.2500],
        [    -0.0623,     25.1250,     22.5000,     14.7500,     22.2500,     26.6250,     25.3750,     20.8750,     21.0000,     16.8750,     17.6250,     17.3750,     24.7500,     18.6250,     28.5000],
        [    -0.0806,     39.7500,     34.5000,     23.8750,     32.2500,     36.5000,     37.7500,     30.5000,     26.3750,     25.2500,     24.5000,     29.2500,     33.2500,     23.5000,     44.0000],
        [    -0.0381,     28.3750,     24.1250,     18.1250,     21.3750,     21.7500,     26.5000,     20.1250,     13.2500,     15.7500,     14.2500,     21.5000,     19.3750,     11.3750,     30.8750],
        [    -0.1055,     46.2500,     39.5000,     26.2500,     37.0000,     43.0000,     42.0000,     35.0000,     32.2500,     29.6250,     29.3750,     33.0000,     39.5000,     29.2500,     50.5000],
        [    -0.0742,     41.7500,     36.5000,     25.8750,     34.0000,     36.5000,     40.2500,     31.8750,     26.0000,     26.7500,     24.8750,     31.7500,     33.2500,     22.7500,     47.0000],
        [    -0.0938,     42.5000,     36.7500,     24.2500,     34.5000,     39.5000,     39.0000,     32.5000,     29.2500,     27.3750,     27.0000,     30.7500,     36.2500,     26.2500,     47.0000],
        [    -0.0879,     43.2500,     38.5000,     26.1250,     36.2500,     39.5000,     42.2500,     34.0000,     28.8750,     28.3750,     27.2500,     32.7500,     36.2500,     25.3750,     49.5000],
        [    -0.0217,     22.2500,     19.3750,     15.0000,     17.0000,     16.1250,     21.3750,     15.8750,      8.9375,     12.5000,     10.5625,     17.7500,     14.2500,      7.3438,     24.8750],
        [    -0.1113,     45.5000,     39.5000,     25.5000,     37.7500,     44.0000,     42.0000,     35.2500,     34.0000,     29.8750,     30.0000,     32.0000,     40.7500,     30.6250,     50.2500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.1965],
        [    0.1691],
        [    0.0984],
        [    0.1373],
        [    0.1663],
        [    0.0827],
        [    0.0833],
        [    0.0908],
        [    0.0006],
        [    0.0003],
        [    0.0003],
        [    0.0005],
        [    0.0365],
        [    0.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0006,     0.9648,     0.0327,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.1270,     0.0000,     0.0000,     0.8711,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.1777,     0.0000,     0.0000,     0.8164,     0.0076,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.2344,     0.0000,     0.0000,     0.7539,     0.0131,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.4844,     0.5156,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.2988,     0.3184,     0.3809,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.2354,     0.2490,     0.2969,     0.2188,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.2402,     0.2500,     0.3008,     0.2090,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.2080,     0.2217,     0.2637,     0.1982,     0.0000,     0.1084]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0004,      0.0483,      0.0283,      0.1064,      0.0645,      0.0258,      0.1099,      0.0923,      0.0649,      0.1729,      0.1738,      0.1748,      0.1738,      0.1357,      0.1699],
        [    -0.0688,      8.3750,      5.4688,     22.6250,     12.3750,      5.1250,     23.7500,     20.0000,     15.3125,     38.5000,     38.5000,     38.7500,     38.5000,     30.5000,     38.0000],
        [    -0.0728,      7.2812,      3.9062,     23.5000,     11.8750,      3.4844,     24.6250,     20.6250,     15.4375,     42.0000,     42.0000,     42.2500,     41.7500,     32.5000,     41.2500],
        [    -0.0815,      9.3125,      5.7188,     28.2500,     14.7500,      5.3750,     29.7500,     25.1250,     19.1250,     49.5000,     49.5000,     49.7500,     49.2500,     38.7500,     48.7500],
        [    -0.0806,      8.1250,      4.3750,     26.1250,     13.1875,      4.0938,     27.5000,     23.0000,     17.3750,     46.7500,     46.7500,     47.0000,     46.5000,     36.5000,     46.0000],
        [    -0.0776,      5.5000,      1.5469,     23.1250,     10.4375,      1.6094,     24.1250,     20.1250,     15.2500,     43.7500,     44.0000,     44.0000,     43.7500,     33.7500,     43.2500],
        [    -0.0811,     11.0000,      7.5625,     29.3750,     16.1250,      7.5625,     31.3750,     26.3750,     21.0000,     50.0000,     50.0000,     50.2500,     50.0000,     40.2500,     49.5000],
        [    -0.0830,      8.8750,      5.1562,     28.0000,     14.2500,      4.9688,     29.5000,     24.8750,     19.1250,     49.7500,     49.7500,     50.0000,     49.7500,     39.0000,     49.0000],
        [    -0.0742,      5.4062,      1.6875,     23.7500,     10.6250,      1.8047,     24.8750,     20.8750,     16.0000,     45.0000,     45.2500,     45.2500,     45.0000,     34.7500,     44.5000],
        [    -0.0840,     11.3750,      7.9375,     31.5000,     17.1250,      7.6875,     33.2500,     28.2500,     22.2500,     53.7500,     53.7500,     54.0000,     53.5000,     42.7500,     53.0000],
        [    -0.0840,     11.3125,      7.8438,     31.3750,     17.0000,      7.6250,     33.2500,     28.2500,     22.2500,     53.7500,     53.7500,     54.0000,     53.5000,     42.7500,     53.0000],
        [    -0.0845,     11.3750,      7.9062,     31.5000,     17.1250,      7.6562,     33.2500,     28.2500,     22.2500,     53.7500,     53.7500,     54.0000,     53.7500,     43.0000,     53.0000],
        [    -0.0820,     10.6875,      7.2812,     30.7500,     16.5000,      7.1875,     32.5000,     27.6250,     21.8750,     53.0000,     53.0000,     53.2500,     53.0000,     42.2500,     52.2500],
        [    -0.0801,      8.4375,      4.8125,     28.2500,     14.1875,      4.9062,     29.7500,     25.1250,     19.8750,     50.7500,     50.7500,     51.0000,     50.5000,     40.0000,     50.0000],
        [    -0.0830,     11.2500,      7.8438,     31.2500,     17.0000,      7.6562,     33.0000,     28.1250,     22.1250,     53.2500,     53.5000,     53.5000,     53.2500,     42.7500,     52.7500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0000],
        [    0.0001],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1055,     0.8945,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0002,     0.0013,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0001,     0.0008,     0.6289,     0.3711,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0001,     0.0006,     0.4688,     0.2773,     0.2539,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0001,     0.0004,     0.2930,     0.1719,     0.1582,     0.3770,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0003,     0.2207,     0.1309,     0.1196,     0.2793,     0.2500,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0003,     0.1758,     0.1030,     0.0947,     0.2285,     0.2021,     0.1953,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0002,     0.1455,     0.0850,     0.0781,     0.1885,     0.1660,     0.1602,     0.1768,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0002,     0.1235,     0.0723,     0.0664,     0.1611,     0.1416,     0.1377,     0.1514,     0.1465,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0002,     0.1079,     0.0630,     0.0581,     0.1396,     0.1235,     0.1191,     0.1309,     0.1270,     0.1289,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0002,     0.0942,     0.0544,     0.0503,     0.1250,     0.1094,     0.1084,     0.1182,     0.1147,     0.1157,     0.1099,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0001,     0.0854,     0.0491,     0.0454,     0.1138,     0.0991,     0.0981,     0.1069,     0.1040,     0.1050,     0.0996,     0.0933,     0.0000],
        [    0.0000,     0.0000,     0.0001,     0.0791,     0.0461,     0.0425,     0.1030,     0.0908,     0.0879,     0.0967,     0.0938,     0.0952,     0.0879,     0.0820,     0.0942]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0364,      0.0430,      0.0723,      0.0728,      0.0723,      0.0703,      0.0713,      0.0679,      0.0698,      0.0693,      0.0698,      0.0654,      0.0654,      0.0688],
        [    -0.0479,     13.8750,     15.9375,     22.2500,     21.7500,     21.6250,     22.6250,     22.3750,     22.5000,     22.6250,     22.5000,     22.5000,     22.5000,     22.5000,     22.6250],
        [    -0.0459,     13.3125,     15.4375,     21.8750,     21.2500,     21.1250,     22.1250,     22.0000,     22.0000,     22.1250,     22.1250,     22.1250,     22.1250,     22.0000,     22.1250],
        [    -0.0369,     11.2500,     13.3750,     20.0000,     19.5000,     19.3750,     20.2500,     20.1250,     20.1250,     20.2500,     20.1250,     20.1250,     20.1250,     20.0000,     20.1250],
        [    -0.0381,     11.6250,     13.7500,     20.5000,     20.0000,     19.8750,     20.7500,     20.6250,     20.5000,     20.6250,     20.6250,     20.6250,     20.5000,     20.3750,     20.6250],
        [    -0.0378,     11.5000,     13.6875,     20.3750,     19.8750,     19.7500,     20.6250,     20.5000,     20.3750,     20.5000,     20.5000,     20.5000,     20.3750,     20.3750,     20.5000],
        [    -0.0364,     11.0625,     13.1875,     19.7500,     19.2500,     19.1250,     20.0000,     19.8750,     19.8750,     19.8750,     19.8750,     19.8750,     19.8750,     19.7500,     19.8750],
        [    -0.0366,     11.1250,     13.2500,     19.8750,     19.3750,     19.2500,     20.1250,     20.0000,     19.8750,     20.0000,     20.0000,     20.0000,     19.8750,     19.8750,     20.0000],
        [    -0.0366,     11.0000,     13.1250,     19.6250,     19.1250,     19.0000,     19.8750,     19.7500,     19.7500,     19.8750,     19.7500,     19.8750,     19.7500,     19.6250,     19.7500],
        [    -0.0369,     11.0625,     13.1875,     19.7500,     19.1250,     19.1250,     20.0000,     19.8750,     19.8750,     19.8750,     19.8750,     19.8750,     19.8750,     19.7500,     19.8750],
        [    -0.0369,     11.0625,     13.1875,     19.7500,     19.1250,     19.1250,     20.0000,     19.8750,     19.7500,     19.8750,     19.8750,     19.8750,     19.7500,     19.7500,     19.8750],
        [    -0.0369,     11.1250,     13.2500,     19.7500,     19.2500,     19.1250,     20.0000,     19.8750,     19.8750,     19.8750,     19.8750,     19.8750,     19.8750,     19.7500,     19.8750],
        [    -0.0371,     10.9375,     13.0625,     19.3750,     18.8750,     18.7500,     19.7500,     19.6250,     19.6250,     19.6250,     19.6250,     19.6250,     19.6250,     19.5000,     19.6250],
        [    -0.0371,     10.9375,     13.0625,     19.3750,     18.8750,     18.7500,     19.7500,     19.6250,     19.6250,     19.6250,     19.6250,     19.6250,     19.6250,     19.5000,     19.6250],
        [    -0.0369,     11.0625,     13.1875,     19.6250,     19.1250,     19.0000,     20.0000,     19.8750,     19.7500,     19.8750,     19.8750,     19.8750,     19.7500,     19.7500,     19.8750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2676,     0.7344,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0233,     0.0493,     0.9258,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0104,     0.0227,     0.4766,     0.4902,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0080,     0.0172,     0.3457,     0.3555,     0.2715,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0074,     0.0157,     0.2871,     0.2988,     0.2285,     0.1631,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0061,     0.0129,     0.2324,     0.2422,     0.1855,     0.1318,     0.1895,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0053,     0.0113,     0.2080,     0.2158,     0.1660,     0.1182,     0.1709,     0.1045,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0049,     0.0104,     0.1904,     0.1982,     0.1523,     0.1084,     0.1562,     0.0957,     0.0845,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0045,     0.0095,     0.1768,     0.1826,     0.1406,     0.1001,     0.1445,     0.0884,     0.0781,     0.0752,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0042,     0.0089,     0.1631,     0.1689,     0.1299,     0.0923,     0.1328,     0.0815,     0.0723,     0.0693,     0.0776,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0039,     0.0082,     0.1562,     0.1611,     0.1235,     0.0889,     0.1279,     0.0786,     0.0693,     0.0669,     0.0747,     0.0415,     0.0000,     0.0000],
        [    0.0000,     0.0038,     0.0081,     0.1504,     0.1553,     0.1196,     0.0854,     0.1230,     0.0757,     0.0669,     0.0645,     0.0718,     0.0400,     0.0354,     0.0000],
        [    0.0000,     0.0037,     0.0077,     0.1406,     0.1455,     0.1123,     0.0796,     0.1147,     0.0703,     0.0623,     0.0598,     0.0669,     0.0371,     0.0327,     0.0664]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0001,     -0.0256,     -0.0262,     -0.0306,     -0.0309,     -0.0298,     -0.0298,     -0.0303,     -0.0293,     -0.0292,     -0.0292,     -0.0293,     -0.0284,     -0.0281,     -0.0294],
        [    -0.0228,     38.2500,     39.5000,     43.5000,     43.5000,     43.2500,     43.0000,     43.5000,     43.0000,     42.7500,     42.7500,     43.0000,     42.2500,     42.2500,     43.0000],
        [    -0.0226,     38.2500,     39.2500,     43.2500,     43.0000,     42.7500,     42.5000,     43.0000,     42.5000,     42.2500,     42.2500,     42.5000,     41.7500,     41.7500,     42.5000],
        [    -0.0208,     36.7500,     37.5000,     40.5000,     40.5000,     40.2500,     40.0000,     40.2500,     39.7500,     39.7500,     39.7500,     39.7500,     39.2500,     39.0000,     39.7500],
        [    -0.0210,     37.0000,     37.7500,     41.0000,     41.0000,     40.7500,     40.2500,     40.7500,     40.2500,     40.0000,     40.0000,     40.2500,     39.5000,     39.5000,     40.2500],
        [    -0.0209,     37.0000,     37.7500,     40.7500,     40.7500,     40.5000,     40.2500,     40.5000,     40.0000,     40.0000,     39.7500,     40.0000,     39.5000,     39.2500,     40.0000],
        [    -0.0206,     36.7500,     37.5000,     40.2500,     40.2500,     40.0000,     39.7500,     40.0000,     39.5000,     39.5000,     39.5000,     39.5000,     39.0000,     38.7500,     39.5000],
        [    -0.0206,     36.7500,     37.5000,     40.2500,     40.2500,     40.0000,     39.7500,     40.0000,     39.5000,     39.5000,     39.5000,     39.5000,     39.0000,     38.7500,     39.5000],
        [    -0.0206,     36.7500,     37.5000,     40.2500,     40.2500,     40.0000,     39.7500,     40.0000,     39.5000,     39.5000,     39.5000,     39.5000,     39.0000,     38.7500,     39.5000],
        [    -0.0206,     36.5000,     37.2500,     40.2500,     40.2500,     40.0000,     39.7500,     40.0000,     39.5000,     39.5000,     39.5000,     39.5000,     39.0000,     38.7500,     39.5000],
        [    -0.0206,     36.7500,     37.5000,     40.2500,     40.2500,     40.0000,     39.7500,     40.0000,     39.5000,     39.5000,     39.5000,     39.5000,     39.0000,     38.7500,     39.5000],
        [    -0.0206,     36.7500,     37.5000,     40.2500,     40.2500,     40.0000,     39.7500,     40.0000,     39.5000,     39.5000,     39.5000,     39.5000,     39.0000,     38.7500,     39.5000],
        [    -0.0206,     36.5000,     37.2500,     40.2500,     40.2500,     40.0000,     39.7500,     40.0000,     39.5000,     39.5000,     39.5000,     39.5000,     39.0000,     38.7500,     39.5000],
        [    -0.0206,     36.5000,     37.2500,     40.2500,     40.2500,     40.0000,     39.7500,     40.0000,     39.5000,     39.5000,     39.2500,     39.5000,     38.7500,     38.7500,     39.5000],
        [    -0.0205,     36.5000,     37.2500,     40.2500,     40.2500,     40.0000,     39.7500,     40.0000,     39.5000,     39.5000,     39.5000,     39.5000,     39.0000,     38.7500,     39.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0833],
        [0.0833],
        [0.0833],
        [0.0833],
        [0.0833],
        [0.0833],
        [0.0833],
        [0.0833],
        [0.0833],
        [0.0833],
        [0.0833],
        [0.0833],
        [0.0833],
        [0.0833]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0002,     -0.2285,     -0.2285,     -0.2305,     -0.2305,     -0.2295,     -0.2305,     -0.2305,     -0.2305,     -0.2305,     -0.2305,     -0.2305,     -0.2305,     -0.2305,     -0.2305],
        [     0.0801,    -71.0000,    -71.5000,    -72.0000,    -72.0000,    -72.0000,    -72.0000,    -72.0000,    -72.0000,    -72.0000,    -72.0000,    -72.0000,    -72.0000,    -72.0000,    -72.0000],
        [     0.0801,    -71.0000,    -71.5000,    -72.0000,    -72.0000,    -71.5000,    -72.0000,    -72.0000,    -72.0000,    -72.0000,    -72.0000,    -72.0000,    -72.0000,    -72.0000,    -72.0000],
        [     0.0801,    -70.5000,    -70.5000,    -71.0000,    -71.0000,    -71.0000,    -71.0000,    -71.0000,    -71.0000,    -71.0000,    -71.0000,    -71.0000,    -71.5000,    -71.5000,    -71.5000],
        [     0.0801,    -70.5000,    -71.0000,    -71.0000,    -71.0000,    -71.0000,    -71.5000,    -71.5000,    -71.5000,    -71.5000,    -71.5000,    -71.5000,    -71.5000,    -71.5000,    -71.5000],
        [     0.0801,    -70.5000,    -70.5000,    -71.0000,    -71.0000,    -71.0000,    -71.0000,    -71.0000,    -71.0000,    -71.0000,    -71.0000,    -71.0000,    -71.5000,    -71.5000,    -71.0000],
        [     0.0801,    -70.5000,    -71.0000,    -71.0000,    -71.0000,    -71.0000,    -71.5000,    -71.5000,    -71.5000,    -71.5000,    -71.5000,    -71.5000,    -71.5000,    -71.5000,    -71.5000],
        [     0.0801,    -70.5000,    -71.0000,    -71.0000,    -71.0000,    -71.0000,    -71.5000,    -71.0000,    -71.5000,    -71.0000,    -71.5000,    -71.5000,    -71.5000,    -71.5000,    -71.5000],
        [     0.0801,    -70.5000,    -71.0000,    -71.5000,    -71.5000,    -71.0000,    -71.5000,    -71.5000,    -71.5000,    -71.5000,    -71.5000,    -71.5000,    -71.5000,    -71.5000,    -71.5000],
        [     0.0801,    -70.5000,    -71.0000,    -71.0000,    -71.0000,    -71.0000,    -71.0000,    -71.0000,    -71.0000,    -71.0000,    -71.0000,    -71.0000,    -71.5000,    -71.5000,    -71.5000],
        [     0.0801,    -70.5000,    -71.0000,    -71.0000,    -71.0000,    -71.0000,    -71.5000,    -71.0000,    -71.5000,    -71.0000,    -71.5000,    -71.5000,    -71.5000,    -71.5000,    -71.5000],
        [     0.0801,    -70.5000,    -71.0000,    -71.0000,    -71.0000,    -71.0000,    -71.5000,    -71.5000,    -71.5000,    -71.5000,    -71.5000,    -71.5000,    -71.5000,    -71.5000,    -71.5000],
        [     0.0801,    -70.5000,    -71.0000,    -71.5000,    -71.5000,    -71.0000,    -71.5000,    -71.5000,    -71.5000,    -71.5000,    -71.5000,    -71.5000,    -71.5000,    -71.5000,    -71.5000],
        [     0.0801,    -70.5000,    -71.0000,    -71.5000,    -71.5000,    -71.5000,    -71.5000,    -71.5000,    -71.5000,    -71.5000,    -71.5000,    -71.5000,    -71.5000,    -71.5000,    -71.5000],
        [     0.0801,    -70.5000,    -71.0000,    -71.0000,    -71.0000,    -71.0000,    -71.5000,    -71.5000,    -71.5000,    -71.5000,    -71.5000,    -71.5000,    -71.5000,    -71.5000,    -71.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4167],
        [0.4167],
        [0.4167],
        [0.4167],
        [0.4167],
        [0.4167],
        [0.4167],
        [0.4167],
        [0.4167],
        [0.4167],
        [0.4167],
        [0.4167],
        [0.4167],
        [0.4167]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.4668,     0.5312,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2754,     0.3145,     0.4102,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1982,     0.2256,     0.2930,     0.2832,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1562,     0.1777,     0.2314,     0.2227,     0.2129,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1250,     0.1426,     0.1855,     0.1787,     0.1709,     0.1992,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1045,     0.1191,     0.1553,     0.1494,     0.1426,     0.1660,     0.1631,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0894,     0.1021,     0.1328,     0.1279,     0.1226,     0.1426,     0.1396,     0.1436,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0781,     0.0889,     0.1162,     0.1118,     0.1069,     0.1245,     0.1221,     0.1260,     0.1260,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0693,     0.0791,     0.1030,     0.0991,     0.0952,     0.1108,     0.1084,     0.1118,     0.1113,     0.1113,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0625,     0.0713,     0.0928,     0.0894,     0.0854,     0.0996,     0.0977,     0.1006,     0.1006,     0.1001,     0.1006,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0569,     0.0645,     0.0845,     0.0811,     0.0776,     0.0903,     0.0884,     0.0913,     0.0913,     0.0908,     0.0913,     0.0918,     0.0000,     0.0000],
        [    0.0000,     0.0520,     0.0593,     0.0771,     0.0742,     0.0713,     0.0830,     0.0811,     0.0835,     0.0835,     0.0830,     0.0835,     0.0840,     0.0845,     0.0000],
        [    0.0000,     0.0479,     0.0547,     0.0713,     0.0684,     0.0654,     0.0762,     0.0747,     0.0771,     0.0771,     0.0767,     0.0771,     0.0776,     0.0776,     0.0786]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0630,      0.0630,      0.0630,      0.0630,      0.0630,      0.0635,      0.0630,      0.0635,      0.0635,      0.0635,      0.0635,      0.0635,      0.0635,      0.0635],
        [    -0.1357,     37.7500,     37.7500,     38.0000,     38.0000,     38.0000,     38.2500,     38.2500,     38.2500,     38.2500,     38.2500,     38.2500,     38.2500,     38.2500,     38.2500],
        [    -0.1357,     37.7500,     37.7500,     38.0000,     38.0000,     38.0000,     38.2500,     38.2500,     38.2500,     38.2500,     38.2500,     38.2500,     38.2500,     38.2500,     38.2500],
        [    -0.1338,     37.5000,     37.7500,     38.0000,     37.7500,     37.7500,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000],
        [    -0.1338,     37.5000,     37.7500,     38.0000,     37.7500,     37.7500,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000],
        [    -0.1338,     37.5000,     37.7500,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000],
        [    -0.1338,     37.5000,     37.7500,     38.0000,     37.7500,     37.7500,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000],
        [    -0.1338,     37.5000,     37.7500,     38.0000,     38.0000,     37.7500,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000],
        [    -0.1338,     37.5000,     37.7500,     38.0000,     38.0000,     37.7500,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000],
        [    -0.1338,     37.5000,     37.7500,     38.0000,     37.7500,     37.7500,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000],
        [    -0.1338,     37.5000,     37.7500,     38.0000,     37.7500,     37.7500,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000],
        [    -0.1338,     37.5000,     37.7500,     38.0000,     38.0000,     37.7500,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000],
        [    -0.1338,     37.5000,     37.7500,     38.0000,     37.7500,     37.7500,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000],
        [    -0.1338,     37.5000,     37.7500,     38.0000,     37.7500,     37.7500,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000],
        [    -0.1338,     37.5000,     37.7500,     38.0000,     38.0000,     37.7500,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000,     38.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(groupon:0.0041groupon:0.0044groupon:0.0042groupon:0.0042groupon:0.0042groupon:0.0044groupon:0.0044groupon:0.0040)
groupon
------
		(groupon:0.0044groupon:0.0042groupon:0.0042groupon:0.0042groupon:0.0044groupon:0.0044groupon:0.0040groupon:0.0043)
groupongroupongroupongroupongroupongroupongroupongroupongroupongroupongroupongroupongroupongroupongroupon
@ 1050 train 5.0325 , allloss: 5.0325, dt: 1172.12ms, fracRes: 0.1568, norm(attn): 1.1328, norm(output): 0.7383, norm(x): 0.8319, norm(y): 0.9917, norm:0.6099, tok/sec: 111824.86, flops:117.39, batch-reuse:1
@ 1051 train 4.9852 , allloss: 4.9852, dt: 684.94ms, fracRes: 0.1563, norm(attn): 1.1406, norm(output): 0.7383, norm(x): 0.8346, norm(y): 0.9917, norm:0.7024, tok/sec: 191363.45, flops:200.89, batch-reuse:1
@ 1052 train 5.0062 , allloss: 5.0062, dt: 699.79ms, fracRes: 0.1564, norm(attn): 1.1328, norm(output): 0.7500, norm(x): 0.8443, norm(y): 0.9916, norm:0.7315, tok/sec: 187300.63, flops:196.63, batch-reuse:1
@ 1053 train 4.9787 , allloss: 4.9787, dt: 699.42ms, fracRes: 0.1573, norm(attn): 1.1484, norm(output): 0.7500, norm(x): 0.8436, norm(y): 0.9918, norm:0.6381, tok/sec: 187399.72, flops:196.73, batch-reuse:1
@ 1054 train 4.9484 , allloss: 4.9484, dt: 684.04ms, fracRes: 0.1574, norm(attn): 1.1484, norm(output): 0.7500, norm(x): 0.8438, norm(y): 0.9918, norm:0.5847, tok/sec: 191614.51, flops:201.16, batch-reuse:1
@ 1055 train 4.9591 , allloss: 4.9591, dt: 677.21ms, fracRes: 0.1577, norm(attn): 1.1328, norm(output): 0.7461, norm(x): 0.8407, norm(y): 0.9918, norm:0.5775, tok/sec: 193546.41, flops:203.19, batch-reuse:1
@ 1056 train 4.9567 , allloss: 4.9567, dt: 694.78ms, fracRes: 0.1573, norm(attn): 1.1328, norm(output): 0.7500, norm(x): 0.8459, norm(y): 0.9917, norm:0.5725, tok/sec: 188651.91, flops:198.05, batch-reuse:1
@ 1057 train 4.9841 , allloss: 4.9841, dt: 697.24ms, fracRes: 0.1578, norm(attn): 1.1328, norm(output): 0.7500, norm(x): 0.8422, norm(y): 0.9917, norm:0.6352, tok/sec: 187987.60, flops:197.35, batch-reuse:1
@ 1058 train 5.0267 , allloss: 5.0267, dt: 697.85ms, fracRes: 0.1577, norm(attn): 1.1250, norm(output): 0.7422, norm(x): 0.8386, norm(y): 0.9917, norm:0.6278, tok/sec: 187822.54, flops:197.18, batch-reuse:1
@ 1059 train 5.0064 , allloss: 5.0064, dt: 675.97ms, fracRes: 0.1574, norm(attn): 1.1250, norm(output): 0.7383, norm(x): 0.8316, norm(y): 0.9917, norm:0.7039, tok/sec: 193902.28, flops:203.56, batch-reuse:1
@ 1060 train 5.0412 , allloss: 5.0412, dt: 695.38ms, fracRes: 0.1575, norm(attn): 1.1250, norm(output): 0.7344, norm(x): 0.8318, norm(y): 0.9917, norm:0.7255, tok/sec: 188489.11, flops:197.88, batch-reuse:1
@ 1061 train 5.0180 , allloss: 5.0180, dt: 699.98ms, fracRes: 0.1576, norm(attn): 1.1328, norm(output): 0.7500, norm(x): 0.8425, norm(y): 0.9916, norm:0.6055, tok/sec: 187252.33, flops:196.58, batch-reuse:1
@ 1062 train 4.9167 , allloss: 4.9167, dt: 697.22ms, fracRes: 0.1587, norm(attn): 1.1250, norm(output): 0.7383, norm(x): 0.8347, norm(y): 0.9917, norm:0.6618, tok/sec: 187991.32, flops:197.35, batch-reuse:1
@ 1063 train 4.9098 , allloss: 4.9098, dt: 695.10ms, fracRes: 0.1586, norm(attn): 1.1250, norm(output): 0.7461, norm(x): 0.8439, norm(y): 0.9916, norm:0.6209, tok/sec: 188566.56, flops:197.96, batch-reuse:1
@ 1064 train 5.0559 , allloss: 5.0559, dt: 698.03ms, fracRes: 0.1594, norm(attn): 1.1172, norm(output): 0.7422, norm(x): 0.8367, norm(y): 0.9917, norm:0.6459, tok/sec: 187772.88, flops:197.12, batch-reuse:1
@ 1065 train 5.0660 , allloss: 5.0660, dt: 688.37ms, fracRes: 0.1585, norm(attn): 1.1250, norm(output): 0.7461, norm(x): 0.8448, norm(y): 0.9917, norm:0.6455, tok/sec: 190409.69, flops:199.89, batch-reuse:1
@ 1066 train 5.0071 , allloss: 5.0071, dt: 698.30ms, fracRes: 0.1587, norm(attn): 1.1328, norm(output): 0.7539, norm(x): 0.8554, norm(y): 0.9916, norm:0.6322, tok/sec: 187700.31, flops:197.05, batch-reuse:1
@ 1067 train 4.8986 , allloss: 4.8986, dt: 701.53ms, fracRes: 0.1592, norm(attn): 1.1250, norm(output): 0.7500, norm(x): 0.8452, norm(y): 0.9917, norm:0.6163, tok/sec: 186837.98, flops:196.14, batch-reuse:1
@ 1068 train 4.9800 , allloss: 4.9800, dt: 695.26ms, fracRes: 0.1606, norm(attn): 1.1250, norm(output): 0.7461, norm(x): 0.8371, norm(y): 0.9917, norm:0.9467, tok/sec: 188522.59, flops:197.91, batch-reuse:1
@ 1069 train 4.9268 , allloss: 4.9268, dt: 697.70ms, fracRes: 0.1606, norm(attn): 1.1328, norm(output): 0.7344, norm(x): 0.8334, norm(y): 0.9918, norm:1.2065, tok/sec: 187863.29, flops:197.22, batch-reuse:1
@ 1070 train 4.9405 , allloss: 4.9405, dt: 694.53ms, fracRes: 0.1604, norm(attn): 1.1328, norm(output): 0.7344, norm(x): 0.8310, norm(y): 0.9917, norm:0.7123, tok/sec: 188720.95, flops:198.12, batch-reuse:1
@ 1071 train 4.8255 , allloss: 4.8255, dt: 692.11ms, fracRes: 0.1608, norm(attn): 1.1328, norm(output): 0.7344, norm(x): 0.8261, norm(y): 0.9916, norm:0.7643, tok/sec: 189381.59, flops:198.81, batch-reuse:1
@ 1072 train 4.9434 , allloss: 4.9434, dt: 687.98ms, fracRes: 0.1614, norm(attn): 1.1328, norm(output): 0.7305, norm(x): 0.8294, norm(y): 0.9916, norm:0.7645, tok/sec: 190516.26, flops:200.00, batch-reuse:1
@ 1073 train 4.8665 , allloss: 4.8665, dt: 695.90ms, fracRes: 0.1606, norm(attn): 1.1328, norm(output): 0.7422, norm(x): 0.8297, norm(y): 0.9916, norm:0.7839, tok/sec: 188348.01, flops:197.73, batch-reuse:1
@ 1074 train 4.8418 , allloss: 4.8418, dt: 689.48ms, fracRes: 0.1616, norm(attn): 1.1484, norm(output): 0.7422, norm(x): 0.8363, norm(y): 0.9917, norm:0.7567, tok/sec: 190102.54, flops:199.57, batch-reuse:1
@ 1075 train 4.9175 , allloss: 4.9175, dt: 695.56ms, fracRes: 0.1617, norm(attn): 1.1484, norm(output): 0.7422, norm(x): 0.8398, norm(y): 0.9917, norm:0.6218, tok/sec: 188441.23, flops:197.83, batch-reuse:1
@ 1076 train 4.9922 , allloss: 4.9922, dt: 691.50ms, fracRes: 0.1603, norm(attn): 1.1484, norm(output): 0.7539, norm(x): 0.8464, norm(y): 0.9916, norm:0.6765, tok/sec: 189546.00, flops:198.99, batch-reuse:1
@ 1077 train 4.8405 , allloss: 4.8405, dt: 702.20ms, fracRes: 0.1623, norm(attn): 1.1328, norm(output): 0.7383, norm(x): 0.8313, norm(y): 0.9917, norm:0.8089, tok/sec: 186659.09, flops:195.96, batch-reuse:1
@ 1078 train 5.1643 , allloss: 5.1643, dt: 687.97ms, fracRes: 0.1628, norm(attn): 1.1328, norm(output): 0.7383, norm(x): 0.8350, norm(y): 0.9917, norm:1.0161, tok/sec: 190520.68, flops:200.01, batch-reuse:1
@ 1079 train 4.8735 , allloss: 4.8735, dt: 696.75ms, fracRes: 0.1633, norm(attn): 1.1094, norm(output): 0.7266, norm(x): 0.8255, norm(y): 0.9916, norm:1.2155, tok/sec: 188119.66, flops:197.49, batch-reuse:1
@ 1080 train 7.6600 , allloss: 7.6600, dt: 696.39ms, fracRes: 0.1293, norm(attn): 1.1016, norm(output): 2.9375, norm(x): 3.0392, norm(y): 0.9901, norm:1693.5178, tok/sec: 188217.23, flops:197.59, batch-reuse:1
@ 1081 train 5.7597 , allloss: 5.7597, dt: 694.56ms, fracRes: 0.1529, norm(attn): 1.0469, norm(output): 1.1328, norm(x): 1.2282, norm(y): 0.9913, norm:171.9587, tok/sec: 188713.04, flops:198.11, batch-reuse:1
@ 1082 train 7.7981 , allloss: 7.7981, dt: 684.05ms, fracRes: 0.1437, norm(attn): 1.0625, norm(output): 1.6797, norm(x): 1.7704, norm(y): 0.9906, norm:177.3981, tok/sec: 191611.43, flops:201.15, batch-reuse:1
@ 1083 train 5.4225 , allloss: 5.4225, dt: 680.25ms, fracRes: 0.1610, norm(attn): 1.1562, norm(output): 0.7578, norm(x): 0.8530, norm(y): 0.9917, norm:2.5243, tok/sec: 192680.84, flops:202.28, batch-reuse:1
@ 1084 train 5.1212 , allloss: 5.1212, dt: 682.14ms, fracRes: 0.1635, norm(attn): 1.2266, norm(output): 0.7656, norm(x): 0.8659, norm(y): 0.9918, norm:1.2916, tok/sec: 192148.54, flops:201.72, batch-reuse:1
@ 1085 train 5.0909 , allloss: 5.0909, dt: 692.22ms, fracRes: 0.1635, norm(attn): 1.2812, norm(output): 0.8320, norm(x): 0.9355, norm(y): 0.9914, norm:1.2307, tok/sec: 189350.41, flops:198.78, batch-reuse:1
@ 1086 train 5.1063 , allloss: 5.1063, dt: 696.48ms, fracRes: 0.1664, norm(attn): 1.3125, norm(output): 0.7852, norm(x): 0.8816, norm(y): 0.9918, norm:0.9605, tok/sec: 188193.27, flops:197.57, batch-reuse:1
@ 1087 train 5.0427 , allloss: 5.0427, dt: 690.96ms, fracRes: 0.1676, norm(attn): 1.3750, norm(output): 0.7930, norm(x): 0.8908, norm(y): 0.9918, norm:0.9585, tok/sec: 189696.10, flops:199.14, batch-reuse:1
@ 1088 train 5.0974 , allloss: 5.0974, dt: 694.19ms, fracRes: 0.1669, norm(attn): 1.3828, norm(output): 0.7969, norm(x): 0.8992, norm(y): 0.9918, norm:1.1139, tok/sec: 188812.21, flops:198.22, batch-reuse:1
@ 1089 train 4.9757 , allloss: 4.9757, dt: 687.81ms, fracRes: 0.1664, norm(attn): 1.4219, norm(output): 0.8008, norm(x): 0.8974, norm(y): 0.9918, norm:0.8383, tok/sec: 190562.95, flops:200.05, batch-reuse:1
@ 1090 train 4.9611 , allloss: 4.9611, dt: 698.00ms, fracRes: 0.1663, norm(attn): 1.4531, norm(output): 0.7891, norm(x): 0.8860, norm(y): 0.9918, norm:0.7119, tok/sec: 187781.61, flops:197.13, batch-reuse:1
@ 1091 train 5.0307 , allloss: 5.0307, dt: 691.65ms, fracRes: 0.1645, norm(attn): 1.4531, norm(output): 0.7891, norm(x): 0.8847, norm(y): 0.9916, norm:0.7761, tok/sec: 189506.08, flops:198.94, batch-reuse:1
@ 1092 train 5.1155 , allloss: 5.1155, dt: 709.30ms, fracRes: 0.1646, norm(attn): 1.4531, norm(output): 0.7812, norm(x): 0.8790, norm(y): 0.9917, norm:0.8474, tok/sec: 184791.62, flops:193.99, batch-reuse:1
@ 1093 train 4.9931 , allloss: 4.9931, dt: 707.04ms, fracRes: 0.1651, norm(attn): 1.4219, norm(output): 0.7812, norm(x): 0.8774, norm(y): 0.9917, norm:0.7926, tok/sec: 185381.16, flops:194.61, batch-reuse:1
@ 1094 train 4.9325 , allloss: 4.9325, dt: 700.44ms, fracRes: 0.1662, norm(attn): 1.4062, norm(output): 0.7812, norm(x): 0.8768, norm(y): 0.9918, norm:0.6821, tok/sec: 187126.96, flops:196.45, batch-reuse:1
@ 1095 train 4.9391 , allloss: 4.9391, dt: 705.13ms, fracRes: 0.1663, norm(attn): 1.4141, norm(output): 0.7695, norm(x): 0.8725, norm(y): 0.9919, norm:0.8214, tok/sec: 185882.17, flops:195.14, batch-reuse:1
@ 1096 train 4.9712 , allloss: 4.9712, dt: 699.19ms, fracRes: 0.1655, norm(attn): 1.4141, norm(output): 0.7812, norm(x): 0.8802, norm(y): 0.9918, norm:0.6441, tok/sec: 187463.81, flops:196.80, batch-reuse:1
@ 1097 train 4.8792 , allloss: 4.8792, dt: 698.58ms, fracRes: 0.1654, norm(attn): 1.4062, norm(output): 0.7812, norm(x): 0.8875, norm(y): 0.9918, norm:0.6569, tok/sec: 187625.81, flops:196.97, batch-reuse:1
@ 1098 train 4.8929 , allloss: 4.8929, dt: 701.62ms, fracRes: 0.1660, norm(attn): 1.3906, norm(output): 0.7812, norm(x): 0.8797, norm(y): 0.9918, norm:0.7692, tok/sec: 186814.68, flops:196.12, batch-reuse:1
@ 1099 train 4.9280 , allloss: 4.9280, dt: 687.04ms, fracRes: 0.1654, norm(attn): 1.3906, norm(output): 0.7734, norm(x): 0.8774, norm(y): 0.9917, norm:0.6920, tok/sec: 190778.93, flops:200.28, batch-reuse:1
@ 1100 train 4.8985 , allloss: 4.8985, dt: 698.36ms, fracRes: 0.1652, norm(attn): 1.3828, norm(output): 0.7812, norm(x): 0.8795, norm(y): 0.9917, norm:0.5923, tok/sec: 187684.42, flops:197.03, batch-reuse:1
@ 1101 train 5.0296 , allloss: 5.0296, dt: 692.35ms, fracRes: 0.1661, norm(attn): 1.3828, norm(output): 0.7734, norm(x): 0.8829, norm(y): 0.9917, norm:0.6010, tok/sec: 189313.44, flops:198.74, batch-reuse:1
@ 1102 train 4.9470 , allloss: 4.9470, dt: 698.67ms, fracRes: 0.1665, norm(attn): 1.3984, norm(output): 0.7656, norm(x): 0.8731, norm(y): 0.9918, norm:0.6628, tok/sec: 187602.05, flops:196.94, batch-reuse:1
@ 1103 train 5.0189 , allloss: 5.0189, dt: 701.13ms, fracRes: 0.1661, norm(attn): 1.4062, norm(output): 0.7656, norm(x): 0.8761, norm(y): 0.9918, norm:0.7355, tok/sec: 186944.47, flops:196.25, batch-reuse:1
@ 1104 train 4.9875 , allloss: 4.9875, dt: 684.30ms, fracRes: 0.1675, norm(attn): 1.4062, norm(output): 0.7812, norm(x): 0.8929, norm(y): 0.9918, norm:0.7105, tok/sec: 191541.20, flops:201.08, batch-reuse:1
@ 1105 train 4.9228 , allloss: 4.9228, dt: 706.55ms, fracRes: 0.1664, norm(attn): 1.4375, norm(output): 0.7656, norm(x): 0.8784, norm(y): 0.9918, norm:0.5653, tok/sec: 185510.53, flops:194.75, batch-reuse:1
@ 1106 train 4.9428 , allloss: 4.9428, dt: 703.95ms, fracRes: 0.1664, norm(attn): 1.4297, norm(output): 0.7656, norm(x): 0.8755, norm(y): 0.9918, norm:0.6806, tok/sec: 186195.57, flops:195.47, batch-reuse:1
@ 1107 train 4.9990 , allloss: 4.9990, dt: 702.90ms, fracRes: 0.1663, norm(attn): 1.4375, norm(output): 0.7773, norm(x): 0.8816, norm(y): 0.9917, norm:0.7047, tok/sec: 186472.63, flops:195.76, batch-reuse:1
@ 1108 train 4.8826 , allloss: 4.8826, dt: 699.25ms, fracRes: 0.1684, norm(attn): 1.4141, norm(output): 0.7578, norm(x): 0.8657, norm(y): 0.9919, norm:0.6805, tok/sec: 187445.98, flops:196.78, batch-reuse:1
@ 1109 train 4.9000 , allloss: 4.9000, dt: 694.39ms, fracRes: 0.1681, norm(attn): 1.4453, norm(output): 0.7500, norm(x): 0.8611, norm(y): 0.9919, norm:0.6250, tok/sec: 188757.43, flops:198.16, batch-reuse:1
@ 1110 train 4.9297 , allloss: 4.9297, dt: 710.31ms, fracRes: 0.1679, norm(attn): 1.4453, norm(output): 0.7539, norm(x): 0.8637, norm(y): 0.9920, norm:0.5920, tok/sec: 184528.38, flops:193.72, batch-reuse:1
@ 1111 train 4.9048 , allloss: 4.9048, dt: 705.61ms, fracRes: 0.1676, norm(attn): 1.4531, norm(output): 0.7578, norm(x): 0.8657, norm(y): 0.9918, norm:0.5794, tok/sec: 185758.19, flops:195.01, batch-reuse:1
@ 1112 train 5.0274 , allloss: 5.0274, dt: 700.53ms, fracRes: 0.1683, norm(attn): 1.4609, norm(output): 0.7500, norm(x): 0.8610, norm(y): 0.9919, norm:0.5263, tok/sec: 187104.48, flops:196.42, batch-reuse:1
@ 1113 train 5.0494 , allloss: 5.0494, dt: 701.74ms, fracRes: 0.1681, norm(attn): 1.4844, norm(output): 0.7617, norm(x): 0.8701, norm(y): 0.9918, norm:0.5214, tok/sec: 186782.63, flops:196.08, batch-reuse:1
@ 1114 train 5.2092 , allloss: 5.2092, dt: 701.30ms, fracRes: 0.1684, norm(attn): 1.4688, norm(output): 0.7734, norm(x): 0.8842, norm(y): 0.9918, norm:0.8676, tok/sec: 186899.60, flops:196.21, batch-reuse:1
@ 1115 train 5.1416 , allloss: 5.1416, dt: 681.57ms, fracRes: 0.1682, norm(attn): 1.4766, norm(output): 0.7812, norm(x): 0.8877, norm(y): 0.9918, norm:1.4558, tok/sec: 192309.73, flops:201.89, batch-reuse:1
@ 1116 train 4.9645 , allloss: 4.9645, dt: 696.17ms, fracRes: 0.1689, norm(attn): 1.4922, norm(output): 0.7617, norm(x): 0.8725, norm(y): 0.9918, norm:0.8300, tok/sec: 188276.67, flops:197.65, batch-reuse:1
@ 1117 train 5.0186 , allloss: 5.0186, dt: 695.94ms, fracRes: 0.1691, norm(attn): 1.5000, norm(output): 0.7578, norm(x): 0.8725, norm(y): 0.9919, norm:0.9326, tok/sec: 188339.10, flops:197.72, batch-reuse:1
@ 1118 train 5.1137 , allloss: 5.1137, dt: 693.26ms, fracRes: 0.1691, norm(attn): 1.5000, norm(output): 0.7695, norm(x): 0.8798, norm(y): 0.9919, norm:0.9434, tok/sec: 189066.23, flops:198.48, batch-reuse:1
@ 1119 train 5.1339 , allloss: 5.1339, dt: 696.93ms, fracRes: 0.1695, norm(attn): 1.5000, norm(output): 0.7695, norm(x): 0.8788, norm(y): 0.9919, norm:0.9072, tok/sec: 188071.46, flops:197.44, batch-reuse:1
@ 1120 train 5.0708 , allloss: 5.0708, dt: 693.01ms, fracRes: 0.1703, norm(attn): 1.4922, norm(output): 0.7578, norm(x): 0.8664, norm(y): 0.9919, norm:0.7504, tok/sec: 189135.37, flops:198.55, batch-reuse:1
@ 1121 train 5.0958 , allloss: 5.0958, dt: 710.96ms, fracRes: 0.1696, norm(attn): 1.4922, norm(output): 0.7578, norm(x): 0.8717, norm(y): 0.9917, norm:0.6589, tok/sec: 184357.96, flops:193.54, batch-reuse:1
@ 1122 train 5.0792 , allloss: 5.0792, dt: 682.44ms, fracRes: 0.1690, norm(attn): 1.4844, norm(output): 0.7617, norm(x): 0.8700, norm(y): 0.9917, norm:0.6421, tok/sec: 192063.83, flops:201.63, batch-reuse:1
@ 1123 train 5.0779 , allloss: 5.0779, dt: 689.67ms, fracRes: 0.1702, norm(attn): 1.4844, norm(output): 0.7617, norm(x): 0.8758, norm(y): 0.9917, norm:0.6454, tok/sec: 190049.17, flops:199.51, batch-reuse:1
@ 1124 train 5.0418 , allloss: 5.0418, dt: 683.17ms, fracRes: 0.1705, norm(attn): 1.4766, norm(output): 0.7617, norm(x): 0.8731, norm(y): 0.9917, norm:0.6119, tok/sec: 191857.92, flops:201.41, batch-reuse:1
@ 1125 train 5.0379 , allloss: 5.0379, dt: 697.23ms, fracRes: 0.1703, norm(attn): 1.4609, norm(output): 0.7578, norm(x): 0.8692, norm(y): 0.9917, norm:0.6153, tok/sec: 187990.42, flops:197.35, batch-reuse:1
@ 1126 train 5.0834 , allloss: 5.0834, dt: 681.36ms, fracRes: 0.1710, norm(attn): 1.4766, norm(output): 0.7539, norm(x): 0.8637, norm(y): 0.9918, norm:0.6755, tok/sec: 192367.53, flops:201.95, batch-reuse:1
@ 1127 train 5.0360 , allloss: 5.0360, dt: 691.47ms, fracRes: 0.1710, norm(attn): 1.4766, norm(output): 0.7578, norm(x): 0.8624, norm(y): 0.9917, norm:0.7007, tok/sec: 189555.68, flops:199.00, batch-reuse:1
@ 1128 train 4.9999 , allloss: 4.9999, dt: 705.11ms, fracRes: 0.1706, norm(attn): 1.4766, norm(output): 0.7578, norm(x): 0.8648, norm(y): 0.9917, norm:0.6322, tok/sec: 185887.70, flops:195.15, batch-reuse:1
@ 1129 train 5.0318 , allloss: 5.0318, dt: 697.89ms, fracRes: 0.1711, norm(attn): 1.4688, norm(output): 0.7539, norm(x): 0.8589, norm(y): 0.9917, norm:0.6904, tok/sec: 187810.99, flops:197.16, batch-reuse:1
@ 1130 train 5.0044 , allloss: 5.0044, dt: 691.66ms, fracRes: 0.1714, norm(attn): 1.4609, norm(output): 0.7500, norm(x): 0.8554, norm(y): 0.9917, norm:0.6257, tok/sec: 189502.42, flops:198.94, batch-reuse:1
@ 1131 train 5.0452 , allloss: 5.0452, dt: 696.17ms, fracRes: 0.1717, norm(attn): 1.4688, norm(output): 0.7500, norm(x): 0.8618, norm(y): 0.9917, norm:0.6173, tok/sec: 188276.86, flops:197.65, batch-reuse:1
@ 1132 train 5.0365 , allloss: 5.0365, dt: 690.02ms, fracRes: 0.1724, norm(attn): 1.4766, norm(output): 0.7578, norm(x): 0.8641, norm(y): 0.9917, norm:0.6989, tok/sec: 189954.81, flops:199.41, batch-reuse:1
@ 1133 train 5.0427 , allloss: 5.0427, dt: 674.45ms, fracRes: 0.1721, norm(attn): 1.4531, norm(output): 0.7539, norm(x): 0.8646, norm(y): 0.9917, norm:0.6313, tok/sec: 194337.88, flops:204.02, batch-reuse:1
@ 1134 train 4.9953 , allloss: 4.9953, dt: 681.12ms, fracRes: 0.1723, norm(attn): 1.4531, norm(output): 0.7461, norm(x): 0.8556, norm(y): 0.9918, norm:0.7547, tok/sec: 192435.14, flops:202.02, batch-reuse:1
@ 1135 train 5.0426 , allloss: 5.0426, dt: 703.87ms, fracRes: 0.1728, norm(attn): 1.4531, norm(output): 0.7500, norm(x): 0.8600, norm(y): 0.9917, norm:0.7285, tok/sec: 186215.37, flops:195.49, batch-reuse:1
@ 1136 train 5.0653 , allloss: 5.0653, dt: 704.47ms, fracRes: 0.1726, norm(attn): 1.4609, norm(output): 0.7500, norm(x): 0.8629, norm(y): 0.9917, norm:0.7196, tok/sec: 186058.57, flops:195.32, batch-reuse:1
@ 1137 train 5.0486 , allloss: 5.0486, dt: 696.54ms, fracRes: 0.1717, norm(attn): 1.4609, norm(output): 0.7500, norm(x): 0.8612, norm(y): 0.9916, norm:0.7803, tok/sec: 188176.45, flops:197.55, batch-reuse:1
@ 1138 train 5.2198 , allloss: 5.2198, dt: 692.21ms, fracRes: 0.1714, norm(attn): 1.4453, norm(output): 0.7578, norm(x): 0.8677, norm(y): 0.9915, norm:0.7185, tok/sec: 189352.11, flops:198.78, batch-reuse:1
@ 1139 train 4.9851 , allloss: 4.9851, dt: 689.97ms, fracRes: 0.1725, norm(attn): 1.4688, norm(output): 0.7422, norm(x): 0.8558, norm(y): 0.9915, norm:0.8414, tok/sec: 189967.68, flops:199.43, batch-reuse:1
@ 1140 train 5.0107 , allloss: 5.0107, dt: 707.94ms, fracRes: 0.1729, norm(attn): 1.4453, norm(output): 0.7461, norm(x): 0.8580, norm(y): 0.9916, norm:0.6058, tok/sec: 185144.92, flops:194.37, batch-reuse:1
@ 1141 train 4.9152 , allloss: 4.9152, dt: 695.35ms, fracRes: 0.1729, norm(attn): 1.4219, norm(output): 0.7461, norm(x): 0.8509, norm(y): 0.9916, norm:0.7311, tok/sec: 188496.80, flops:197.88, batch-reuse:1
@ 1142 train 4.9886 , allloss: 4.9886, dt: 701.15ms, fracRes: 0.1731, norm(attn): 1.4219, norm(output): 0.7461, norm(x): 0.8495, norm(y): 0.9916, norm:0.7902, tok/sec: 186939.76, flops:196.25, batch-reuse:1
@ 1143 train 5.0455 , allloss: 5.0455, dt: 696.90ms, fracRes: 0.1716, norm(attn): 1.4453, norm(output): 0.7617, norm(x): 0.8696, norm(y): 0.9915, norm:1.0825, tok/sec: 188078.92, flops:197.45, batch-reuse:1
@ 1144 train 5.0820 , allloss: 5.0820, dt: 699.81ms, fracRes: 0.1749, norm(attn): 1.4609, norm(output): 0.7461, norm(x): 0.8534, norm(y): 0.9918, norm:1.1864, tok/sec: 187297.18, flops:196.62, batch-reuse:1
@ 1145 train 5.0905 , allloss: 5.0905, dt: 705.04ms, fracRes: 0.1727, norm(attn): 1.4688, norm(output): 0.7656, norm(x): 0.8768, norm(y): 0.9916, norm:0.7671, tok/sec: 185907.50, flops:195.17, batch-reuse:1
@ 1146 train 5.0460 , allloss: 5.0460, dt: 700.26ms, fracRes: 0.1736, norm(attn): 1.4297, norm(output): 0.7578, norm(x): 0.8695, norm(y): 0.9916, norm:0.7816, tok/sec: 187177.42, flops:196.50, batch-reuse:1
@ 1147 train 5.0448 , allloss: 5.0448, dt: 692.71ms, fracRes: 0.1754, norm(attn): 1.4297, norm(output): 0.7422, norm(x): 0.8565, norm(y): 0.9917, norm:0.7289, tok/sec: 189216.94, flops:198.64, batch-reuse:1
@ 1148 train 4.9685 , allloss: 4.9685, dt: 690.01ms, fracRes: 0.1752, norm(attn): 1.4141, norm(output): 0.7500, norm(x): 0.8526, norm(y): 0.9917, norm:0.7670, tok/sec: 189956.39, flops:199.42, batch-reuse:1
@ 1149 train 5.0101 , allloss: 5.0101, dt: 694.65ms, fracRes: 0.1750, norm(attn): 1.4141, norm(output): 0.7461, norm(x): 0.8574, norm(y): 0.9917, norm:0.6833, tok/sec: 188687.39, flops:198.08, batch-reuse:1
@ 1150 train 5.0613 , allloss: 5.0613, dt: 682.89ms, fracRes: 0.1747, norm(attn): 1.3906, norm(output): 0.7383, norm(x): 0.8526, norm(y): 0.9917, norm:0.7059, tok/sec: 191937.63, flops:201.50, batch-reuse:1
@ 1151 train 5.0838 , allloss: 5.0838, dt: 697.37ms, fracRes: 0.1749, norm(attn): 1.3828, norm(output): 0.7500, norm(x): 0.8630, norm(y): 0.9916, norm:0.6525, tok/sec: 187952.06, flops:197.31, batch-reuse:1
@ 1152 train 4.9478 , allloss: 4.9478, dt: 695.80ms, fracRes: 0.1748, norm(attn): 1.3828, norm(output): 0.7539, norm(x): 0.8690, norm(y): 0.9915, norm:0.6043, tok/sec: 188376.40, flops:197.76, batch-reuse:1
@ 1153 train 4.9598 , allloss: 4.9598, dt: 701.17ms, fracRes: 0.1755, norm(attn): 1.3750, norm(output): 0.7539, norm(x): 0.8679, norm(y): 0.9916, norm:0.6371, tok/sec: 186933.02, flops:196.24, batch-reuse:1
@ 1154 train 5.0120 , allloss: 5.0120, dt: 713.94ms, fracRes: 0.1756, norm(attn): 1.3828, norm(output): 0.7539, norm(x): 0.8654, norm(y): 0.9916, norm:0.7225, tok/sec: 183589.50, flops:192.73, batch-reuse:1
@ 1155 train 4.9710 , allloss: 4.9710, dt: 689.21ms, fracRes: 0.1763, norm(attn): 1.3750, norm(output): 0.7422, norm(x): 0.8536, norm(y): 0.9916, norm:0.9835, tok/sec: 190176.06, flops:199.65, batch-reuse:1
@ 1156 train 4.9982 , allloss: 4.9982, dt: 700.96ms, fracRes: 0.1760, norm(attn): 1.3750, norm(output): 0.7422, norm(x): 0.8590, norm(y): 0.9916, norm:1.2054, tok/sec: 186990.56, flops:196.30, batch-reuse:1
@ 1157 train 4.9832 , allloss: 4.9832, dt: 690.44ms, fracRes: 0.1763, norm(attn): 1.3750, norm(output): 0.7383, norm(x): 0.8573, norm(y): 0.9916, norm:0.6955, tok/sec: 189838.05, flops:199.29, batch-reuse:1
@ 1158 train 4.9933 , allloss: 4.9933, dt: 704.37ms, fracRes: 0.1765, norm(attn): 1.3750, norm(output): 0.7422, norm(x): 0.8536, norm(y): 0.9916, norm:0.6903, tok/sec: 186085.27, flops:195.35, batch-reuse:1
@ 1159 train 5.0151 , allloss: 5.0151, dt: 707.19ms, fracRes: 0.1751, norm(attn): 1.3828, norm(output): 0.7422, norm(x): 0.8596, norm(y): 0.9915, norm:0.6609, tok/sec: 185340.73, flops:194.57, batch-reuse:1
@ 1160 train 5.0684 , allloss: 5.0684, dt: 690.20ms, fracRes: 0.1770, norm(attn): 1.3750, norm(output): 0.7227, norm(x): 0.8386, norm(y): 0.9916, norm:0.7597, tok/sec: 189904.68, flops:199.36, batch-reuse:1
@ 1161 train 4.9115 , allloss: 4.9115, dt: 704.34ms, fracRes: 0.1757, norm(attn): 1.3672, norm(output): 0.7344, norm(x): 0.8440, norm(y): 0.9914, norm:0.8203, tok/sec: 186092.14, flops:195.36, batch-reuse:1
@ 1162 train 4.8692 , allloss: 4.8692, dt: 701.39ms, fracRes: 0.1761, norm(attn): 1.3672, norm(output): 0.7227, norm(x): 0.8364, norm(y): 0.9916, norm:0.7625, tok/sec: 186874.94, flops:196.18, batch-reuse:1
@ 1163 train 4.9849 , allloss: 4.9849, dt: 700.97ms, fracRes: 0.1764, norm(attn): 1.3672, norm(output): 0.7383, norm(x): 0.8497, norm(y): 0.9915, norm:0.6706, tok/sec: 186985.35, flops:196.30, batch-reuse:1
@ 1164 train 4.9812 , allloss: 4.9812, dt: 699.25ms, fracRes: 0.1766, norm(attn): 1.3359, norm(output): 0.7344, norm(x): 0.8522, norm(y): 0.9914, norm:0.6204, tok/sec: 187445.85, flops:196.78, batch-reuse:1
@ 1165 train 4.9489 , allloss: 4.9489, dt: 692.73ms, fracRes: 0.1766, norm(attn): 1.3203, norm(output): 0.7422, norm(x): 0.8516, norm(y): 0.9914, norm:0.6919, tok/sec: 189210.69, flops:198.63, batch-reuse:1
@ 1166 train 4.9719 , allloss: 4.9719, dt: 697.38ms, fracRes: 0.1769, norm(attn): 1.3281, norm(output): 0.7305, norm(x): 0.8412, norm(y): 0.9915, norm:0.6115, tok/sec: 187948.46, flops:197.31, batch-reuse:1
@ 1167 train 4.9253 , allloss: 4.9253, dt: 709.42ms, fracRes: 0.1769, norm(attn): 1.3438, norm(output): 0.7266, norm(x): 0.8386, norm(y): 0.9915, norm:0.7191, tok/sec: 184758.52, flops:193.96, batch-reuse:1
@ 1168 train 4.8485 , allloss: 4.8485, dt: 698.34ms, fracRes: 0.1769, norm(attn): 1.3359, norm(output): 0.7227, norm(x): 0.8437, norm(y): 0.9915, norm:0.8207, tok/sec: 187690.19, flops:197.04, batch-reuse:1
@ 1169 train 4.9226 , allloss: 4.9226, dt: 706.84ms, fracRes: 0.1771, norm(attn): 1.3203, norm(output): 0.7266, norm(x): 0.8476, norm(y): 0.9915, norm:0.8145, tok/sec: 185432.81, flops:194.67, batch-reuse:1
@ 1170 train 4.9241 , allloss: 4.9241, dt: 691.29ms, fracRes: 0.1780, norm(attn): 1.3125, norm(output): 0.7148, norm(x): 0.8341, norm(y): 0.9915, norm:0.6909, tok/sec: 189605.36, flops:199.05, batch-reuse:1
@ 1171 train 4.9559 , allloss: 4.9559, dt: 695.53ms, fracRes: 0.1786, norm(attn): 1.3203, norm(output): 0.7188, norm(x): 0.8394, norm(y): 0.9915, norm:0.6297, tok/sec: 188448.14, flops:197.83, batch-reuse:1
@ 1172 train 5.0119 , allloss: 5.0119, dt: 709.16ms, fracRes: 0.1786, norm(attn): 1.3359, norm(output): 0.7344, norm(x): 0.8552, norm(y): 0.9915, norm:0.7609, tok/sec: 184826.54, flops:194.03, batch-reuse:1
@ 1173 train 4.9129 , allloss: 4.9129, dt: 694.63ms, fracRes: 0.1793, norm(attn): 1.3047, norm(output): 0.7227, norm(x): 0.8406, norm(y): 0.9916, norm:0.7294, tok/sec: 188694.52, flops:198.09, batch-reuse:1
@ 1174 train 4.8885 , allloss: 4.8885, dt: 701.32ms, fracRes: 0.1797, norm(attn): 1.2891, norm(output): 0.7109, norm(x): 0.8317, norm(y): 0.9915, norm:0.6341, tok/sec: 186894.38, flops:196.20, batch-reuse:1
@ 1175 train 4.9810 , allloss: 4.9810, dt: 703.22ms, fracRes: 0.1788, norm(attn): 1.2734, norm(output): 0.7188, norm(x): 0.8400, norm(y): 0.9914, norm:0.6481, tok/sec: 186388.04, flops:195.67, batch-reuse:1
@ 1176 train 4.9032 , allloss: 4.9032, dt: 700.52ms, fracRes: 0.1787, norm(attn): 1.2656, norm(output): 0.7266, norm(x): 0.8435, norm(y): 0.9914, norm:0.5439, tok/sec: 187107.47, flops:196.43, batch-reuse:1
@ 1177 train 4.9500 , allloss: 4.9500, dt: 703.21ms, fracRes: 0.1784, norm(attn): 1.2734, norm(output): 0.7227, norm(x): 0.8372, norm(y): 0.9914, norm:0.6910, tok/sec: 186391.33, flops:195.67, batch-reuse:1
@ 1178 train 5.1130 , allloss: 5.1130, dt: 704.68ms, fracRes: 0.1786, norm(attn): 1.2656, norm(output): 0.7266, norm(x): 0.8388, norm(y): 0.9914, norm:0.6643, tok/sec: 186003.17, flops:195.27, batch-reuse:1
@ 1179 train 4.9700 , allloss: 4.9700, dt: 705.28ms, fracRes: 0.1795, norm(attn): 1.2578, norm(output): 0.7227, norm(x): 0.8356, norm(y): 0.9913, norm:0.8040, tok/sec: 185844.59, flops:195.10, batch-reuse:1
@ 1180 train 4.9818 , allloss: 4.9818, dt: 704.03ms, fracRes: 0.1787, norm(attn): 1.2656, norm(output): 0.7188, norm(x): 0.8359, norm(y): 0.9914, norm:1.0267, tok/sec: 186174.06, flops:195.45, batch-reuse:1
@ 1181 train 4.9404 , allloss: 4.9404, dt: 702.20ms, fracRes: 0.1806, norm(attn): 1.2656, norm(output): 0.7070, norm(x): 0.8277, norm(y): 0.9915, norm:1.2903, tok/sec: 186660.17, flops:195.96, batch-reuse:1
@ 1182 train 4.9500 , allloss: 4.9500, dt: 702.69ms, fracRes: 0.1796, norm(attn): 1.2656, norm(output): 0.7266, norm(x): 0.8452, norm(y): 0.9913, norm:0.8387, tok/sec: 186527.93, flops:195.82, batch-reuse:1
@ 1183 train 4.9661 , allloss: 4.9661, dt: 701.40ms, fracRes: 0.1818, norm(attn): 1.2734, norm(output): 0.7266, norm(x): 0.8392, norm(y): 0.9915, norm:0.8885, tok/sec: 186872.72, flops:196.18, batch-reuse:1
@ 1184 train 4.9728 , allloss: 4.9728, dt: 700.28ms, fracRes: 0.1809, norm(attn): 1.2734, norm(output): 0.7148, norm(x): 0.8349, norm(y): 0.9914, norm:0.9807, tok/sec: 187171.50, flops:196.49, batch-reuse:1
@ 1185 train 4.9391 , allloss: 4.9391, dt: 697.67ms, fracRes: 0.1817, norm(attn): 1.2969, norm(output): 0.7422, norm(x): 0.8499, norm(y): 0.9915, norm:0.7658, tok/sec: 187869.97, flops:197.23, batch-reuse:1
@ 1186 train 4.9692 , allloss: 4.9692, dt: 682.95ms, fracRes: 0.1837, norm(attn): 1.2969, norm(output): 0.7344, norm(x): 0.8488, norm(y): 0.9915, norm:0.6356, tok/sec: 191919.47, flops:201.48, batch-reuse:1
@ 1187 train 4.9518 , allloss: 4.9518, dt: 687.86ms, fracRes: 0.1820, norm(attn): 1.2969, norm(output): 0.7266, norm(x): 0.8434, norm(y): 0.9915, norm:0.7145, tok/sec: 190550.86, flops:200.04, batch-reuse:1
@ 1188 train 4.8519 , allloss: 4.8519, dt: 688.07ms, fracRes: 0.1826, norm(attn): 1.2891, norm(output): 0.7148, norm(x): 0.8314, norm(y): 0.9916, norm:0.6032, tok/sec: 190491.17, flops:199.98, batch-reuse:1
@ 1189 train 4.9033 , allloss: 4.9033, dt: 701.50ms, fracRes: 0.1817, norm(attn): 1.2891, norm(output): 0.7148, norm(x): 0.8398, norm(y): 0.9915, norm:0.6480, tok/sec: 186845.35, flops:196.15, batch-reuse:1
@ 1190 train 4.9398 , allloss: 4.9398, dt: 700.34ms, fracRes: 0.1806, norm(attn): 1.3281, norm(output): 0.7422, norm(x): 0.8514, norm(y): 0.9915, norm:0.6287, tok/sec: 187155.57, flops:196.48, batch-reuse:1
@ 1191 train 5.0544 , allloss: 5.0544, dt: 701.11ms, fracRes: 0.1822, norm(attn): 1.3125, norm(output): 0.7266, norm(x): 0.8462, norm(y): 0.9916, norm:0.6424, tok/sec: 186949.04, flops:196.26, batch-reuse:1
@ 1192 train 4.9130 , allloss: 4.9130, dt: 699.08ms, fracRes: 0.1825, norm(attn): 1.2969, norm(output): 0.7070, norm(x): 0.8340, norm(y): 0.9917, norm:0.6320, tok/sec: 187491.69, flops:196.83, batch-reuse:1
@ 1193 train 4.9567 , allloss: 4.9567, dt: 688.74ms, fracRes: 0.1822, norm(attn): 1.3281, norm(output): 0.7188, norm(x): 0.8401, norm(y): 0.9916, norm:0.5969, tok/sec: 190306.47, flops:199.78, batch-reuse:1
@ 1194 train 4.9582 , allloss: 4.9582, dt: 699.68ms, fracRes: 0.1811, norm(attn): 1.3125, norm(output): 0.7344, norm(x): 0.8531, norm(y): 0.9915, norm:0.6013, tok/sec: 187330.94, flops:196.66, batch-reuse:1
@ 1195 train 4.9498 , allloss: 4.9498, dt: 708.59ms, fracRes: 0.1834, norm(attn): 1.2969, norm(output): 0.7148, norm(x): 0.8372, norm(y): 0.9916, norm:0.7570, tok/sec: 184976.66, flops:194.19, batch-reuse:1
@ 1196 train 4.8923 , allloss: 4.8923, dt: 709.48ms, fracRes: 0.1833, norm(attn): 1.2656, norm(output): 0.7070, norm(x): 0.8305, norm(y): 0.9915, norm:0.9713, tok/sec: 184745.05, flops:193.95, batch-reuse:1
@ 1197 train 4.8765 , allloss: 4.8765, dt: 705.42ms, fracRes: 0.1827, norm(attn): 1.2734, norm(output): 0.7109, norm(x): 0.8355, norm(y): 0.9914, norm:1.2511, tok/sec: 185806.22, flops:195.06, batch-reuse:1
@ 1198 train 4.8921 , allloss: 4.8921, dt: 707.39ms, fracRes: 0.1829, norm(attn): 1.2812, norm(output): 0.6992, norm(x): 0.8238, norm(y): 0.9915, norm:0.7484, tok/sec: 185289.63, flops:194.52, batch-reuse:1
@ 1199 train 4.9412 , allloss: 4.9412, dt: 709.69ms, fracRes: 0.1834, norm(attn): 1.2812, norm(output): 0.7148, norm(x): 0.8369, norm(y): 0.9915, norm:0.8038, tok/sec: 184690.12, flops:193.89, batch-reuse:1
@ 1200 train 4.8827 , allloss: 4.8827, dt: 711.68ms, fracRes: 0.1834, norm(attn): 1.2969, norm(output): 0.7109, norm(x): 0.8354, norm(y): 0.9915, norm:1.0019, tok/sec: 184172.43, flops:193.34, batch-reuse:1
@ 1201 train 4.8942 , allloss: 4.8942, dt: 710.14ms, fracRes: 0.1842, norm(attn): 1.2812, norm(output): 0.7070, norm(x): 0.8308, norm(y): 0.9916, norm:0.7131, tok/sec: 184571.13, flops:193.76, batch-reuse:1
@ 1202 train 4.9367 , allloss: 4.9367, dt: 710.22ms, fracRes: 0.1841, norm(attn): 1.2734, norm(output): 0.7148, norm(x): 0.8354, norm(y): 0.9916, norm:0.7767, tok/sec: 184551.86, flops:193.74, batch-reuse:1
@ 1203 train 5.3817 , allloss: 5.3817, dt: 707.99ms, fracRes: 0.1826, norm(attn): 1.2812, norm(output): 0.7344, norm(x): 0.8550, norm(y): 0.9914, norm:0.9649, tok/sec: 185131.33, flops:194.35, batch-reuse:1
@ 1204 train 4.8927 , allloss: 4.8927, dt: 714.33ms, fracRes: 0.1841, norm(attn): 1.3047, norm(output): 0.7227, norm(x): 0.8441, norm(y): 0.9916, norm:0.7992, tok/sec: 183489.25, flops:192.63, batch-reuse:1
@ 1205 train 4.8643 , allloss: 4.8643, dt: 706.44ms, fracRes: 0.1838, norm(attn): 1.2812, norm(output): 0.7148, norm(x): 0.8353, norm(y): 0.9916, norm:0.9059, tok/sec: 185538.89, flops:194.78, batch-reuse:1
@ 1206 train 4.8789 , allloss: 4.8789, dt: 710.66ms, fracRes: 0.1843, norm(attn): 1.2578, norm(output): 0.7031, norm(x): 0.8250, norm(y): 0.9916, norm:0.7040, tok/sec: 184436.33, flops:193.62, batch-reuse:1
@ 1207 train 4.8527 , allloss: 4.8527, dt: 707.83ms, fracRes: 0.1832, norm(attn): 1.2656, norm(output): 0.7148, norm(x): 0.8353, norm(y): 0.9915, norm:0.7850, tok/sec: 185174.17, flops:194.40, batch-reuse:1
@ 1208 train 4.8329 , allloss: 4.8329, dt: 701.89ms, fracRes: 0.1837, norm(attn): 1.2734, norm(output): 0.6992, norm(x): 0.8252, norm(y): 0.9916, norm:0.8728, tok/sec: 186741.13, flops:196.04, batch-reuse:1
@ 1209 train 4.9670 , allloss: 4.9670, dt: 704.63ms, fracRes: 0.1824, norm(attn): 1.2734, norm(output): 0.7070, norm(x): 0.8295, norm(y): 0.9915, norm:0.7314, tok/sec: 186015.26, flops:195.28, batch-reuse:1
@ 1210 train 4.8200 , allloss: 4.8200, dt: 712.37ms, fracRes: 0.1835, norm(attn): 1.2812, norm(output): 0.7070, norm(x): 0.8345, norm(y): 0.9915, norm:0.7771, tok/sec: 183994.17, flops:193.16, batch-reuse:1
@ 1211 train 4.9144 , allloss: 4.9144, dt: 688.11ms, fracRes: 0.1834, norm(attn): 1.2734, norm(output): 0.7148, norm(x): 0.8394, norm(y): 0.9915, norm:0.8625, tok/sec: 190481.93, flops:199.97, batch-reuse:1
@ 1212 train 4.9865 , allloss: 4.9865, dt: 696.83ms, fracRes: 0.1842, norm(attn): 1.2891, norm(output): 0.7188, norm(x): 0.8434, norm(y): 0.9915, norm:0.6042, tok/sec: 188097.20, flops:197.46, batch-reuse:1
@ 1213 train 4.7968 , allloss: 4.7968, dt: 697.62ms, fracRes: 0.1858, norm(attn): 1.2891, norm(output): 0.7070, norm(x): 0.8389, norm(y): 0.9916, norm:0.6804, tok/sec: 187884.10, flops:197.24, batch-reuse:1
@ 1214 train 4.8473 , allloss: 4.8473, dt: 698.39ms, fracRes: 0.1864, norm(attn): 1.2891, norm(output): 0.7031, norm(x): 0.8322, norm(y): 0.9916, norm:0.6148, tok/sec: 187678.27, flops:197.02, batch-reuse:1
@ 1215 train 4.9120 , allloss: 4.9120, dt: 700.76ms, fracRes: 0.1860, norm(attn): 1.2734, norm(output): 0.7070, norm(x): 0.8315, norm(y): 0.9915, norm:0.6437, tok/sec: 187043.81, flops:196.36, batch-reuse:1
@ 1216 train 4.8480 , allloss: 4.8480, dt: 701.41ms, fracRes: 0.1861, norm(attn): 1.2578, norm(output): 0.7031, norm(x): 0.8316, norm(y): 0.9915, norm:0.5652, tok/sec: 186868.08, flops:196.17, batch-reuse:1
@ 1217 train 4.8949 , allloss: 4.8949, dt: 695.96ms, fracRes: 0.1864, norm(attn): 1.2578, norm(output): 0.7148, norm(x): 0.8353, norm(y): 0.9915, norm:0.5967, tok/sec: 188332.91, flops:197.71, batch-reuse:1
@ 1218 train 4.6824 , allloss: 4.6824, dt: 696.94ms, fracRes: 0.1878, norm(attn): 1.2812, norm(output): 0.7188, norm(x): 0.8442, norm(y): 0.9915, norm:0.6328, tok/sec: 188066.82, flops:197.43, batch-reuse:1
@ 1219 train 4.7821 , allloss: 4.7821, dt: 687.83ms, fracRes: 0.1874, norm(attn): 1.2578, norm(output): 0.6992, norm(x): 0.8240, norm(y): 0.9916, norm:0.5336, tok/sec: 190559.05, flops:200.05, batch-reuse:1
@ 1220 train 4.8845 , allloss: 4.8845, dt: 697.01ms, fracRes: 0.1873, norm(attn): 1.2500, norm(output): 0.6992, norm(x): 0.8262, norm(y): 0.9916, norm:0.7454, tok/sec: 188049.84, flops:197.42, batch-reuse:1
@ 1221 train 4.8527 , allloss: 4.8527, dt: 698.80ms, fracRes: 0.1872, norm(attn): 1.2422, norm(output): 0.6992, norm(x): 0.8209, norm(y): 0.9915, norm:0.9374, tok/sec: 187567.81, flops:196.91, batch-reuse:1
@ 1222 train 4.8099 , allloss: 4.8099, dt: 707.68ms, fracRes: 0.1872, norm(attn): 1.2422, norm(output): 0.6953, norm(x): 0.8222, norm(y): 0.9915, norm:0.9390, tok/sec: 185214.66, flops:194.44, batch-reuse:1
@ 1223 train 4.7914 , allloss: 4.7914, dt: 706.31ms, fracRes: 0.1867, norm(attn): 1.2344, norm(output): 0.7070, norm(x): 0.8377, norm(y): 0.9914, norm:0.7123, tok/sec: 185572.77, flops:194.81, batch-reuse:1
@ 1224 train 4.7722 , allloss: 4.7722, dt: 708.29ms, fracRes: 0.1890, norm(attn): 1.2109, norm(output): 0.6953, norm(x): 0.8191, norm(y): 0.9915, norm:0.6476, tok/sec: 185053.12, flops:194.27, batch-reuse:1
@ 1225 train 4.8287 , allloss: 4.8287, dt: 691.62ms, fracRes: 0.1873, norm(attn): 1.1953, norm(output): 0.7031, norm(x): 0.8330, norm(y): 0.9913, norm:0.9258, tok/sec: 189515.62, flops:198.95, batch-reuse:1
@ 1226 train 4.8977 , allloss: 4.8977, dt: 703.81ms, fracRes: 0.1896, norm(attn): 1.1641, norm(output): 0.6914, norm(x): 0.8202, norm(y): 0.9914, norm:0.9124, tok/sec: 186231.08, flops:195.51, batch-reuse:1
@ 1227 train 4.8120 , allloss: 4.8120, dt: 705.42ms, fracRes: 0.1797, norm(attn): 1.1406, norm(output): 0.6953, norm(x): 0.8186, norm(y): 0.9913, norm:2.4651, tok/sec: 185806.91, flops:195.06, batch-reuse:1
@ 1228 train 4.8099 , allloss: 4.8099, dt: 686.81ms, fracRes: 0.1887, norm(attn): 1.2500, norm(output): 0.7188, norm(x): 0.8383, norm(y): 0.9915, norm:1.0260, tok/sec: 190841.45, flops:200.35, batch-reuse:1
@ 1229 train 4.8544 , allloss: 4.8544, dt: 709.52ms, fracRes: 0.1895, norm(attn): 1.3203, norm(output): 0.6992, norm(x): 0.8310, norm(y): 0.9917, norm:1.1360, tok/sec: 184734.56, flops:193.93, batch-reuse:1
@ 1230 train 4.8950 , allloss: 4.8950, dt: 699.89ms, fracRes: 0.1896, norm(attn): 1.3750, norm(output): 0.7148, norm(x): 0.8370, norm(y): 0.9917, norm:0.7399, tok/sec: 187276.06, flops:196.60, batch-reuse:1
@ 1231 train 4.8244 , allloss: 4.8244, dt: 690.94ms, fracRes: 0.1899, norm(attn): 1.3906, norm(output): 0.7188, norm(x): 0.8455, norm(y): 0.9917, norm:0.8909, tok/sec: 189701.01, flops:199.15, batch-reuse:1
@ 1232 train 4.8061 , allloss: 4.8061, dt: 696.63ms, fracRes: 0.1895, norm(attn): 1.4609, norm(output): 0.7227, norm(x): 0.8456, norm(y): 0.9917, norm:0.8211, tok/sec: 188151.92, flops:197.52, batch-reuse:1
@ 1233 train 4.8312 , allloss: 4.8312, dt: 701.76ms, fracRes: 0.1895, norm(attn): 1.4922, norm(output): 0.7109, norm(x): 0.8437, norm(y): 0.9917, norm:0.6902, tok/sec: 186776.54, flops:196.08, batch-reuse:1
@ 1234 train 4.8619 , allloss: 4.8619, dt: 695.82ms, fracRes: 0.1903, norm(attn): 1.5000, norm(output): 0.7148, norm(x): 0.8402, norm(y): 0.9918, norm:0.8201, tok/sec: 188371.76, flops:197.75, batch-reuse:1
@ 1235 train 4.9155 , allloss: 4.9155, dt: 706.95ms, fracRes: 0.1893, norm(attn): 1.5000, norm(output): 0.7305, norm(x): 0.8493, norm(y): 0.9917, norm:0.6399, tok/sec: 185404.61, flops:194.64, batch-reuse:1
@ 1236 train 4.7983 , allloss: 4.7983, dt: 699.63ms, fracRes: 0.1940, norm(attn): 1.5000, norm(output): 0.7305, norm(x): 0.8586, norm(y): 0.9916, norm:0.7942, tok/sec: 187344.99, flops:196.68, batch-reuse:1
@ 1237 train 4.8600 , allloss: 4.8600, dt: 700.45ms, fracRes: 0.1891, norm(attn): 1.5312, norm(output): 0.7305, norm(x): 0.8556, norm(y): 0.9918, norm:0.7491, tok/sec: 187124.67, flops:196.44, batch-reuse:1
@ 1238 train 4.8284 , allloss: 4.8284, dt: 700.71ms, fracRes: 0.1897, norm(attn): 1.5469, norm(output): 0.7305, norm(x): 0.8540, norm(y): 0.9917, norm:0.6543, tok/sec: 187055.21, flops:196.37, batch-reuse:1
@ 1239 train 4.7384 , allloss: 4.7384, dt: 687.36ms, fracRes: 0.1894, norm(attn): 1.5625, norm(output): 0.7266, norm(x): 0.8512, norm(y): 0.9916, norm:0.6796, tok/sec: 190688.74, flops:200.19, batch-reuse:1
@ 1240 train 4.7645 , allloss: 4.7645, dt: 697.19ms, fracRes: 0.1901, norm(attn): 1.5938, norm(output): 0.7188, norm(x): 0.8457, norm(y): 0.9916, norm:0.6789, tok/sec: 188001.55, flops:197.36, batch-reuse:1
@ 1241 train 4.7567 , allloss: 4.7567, dt: 696.54ms, fracRes: 0.1901, norm(attn): 1.6250, norm(output): 0.7227, norm(x): 0.8480, norm(y): 0.9918, norm:0.6939, tok/sec: 188176.84, flops:197.55, batch-reuse:1
@ 1242 train 4.8413 , allloss: 4.8413, dt: 687.62ms, fracRes: 0.1906, norm(attn): 1.6172, norm(output): 0.7227, norm(x): 0.8430, norm(y): 0.9918, norm:0.6216, tok/sec: 190615.94, flops:200.11, batch-reuse:1
@ 1243 train 4.8170 , allloss: 4.8170, dt: 689.64ms, fracRes: 0.1909, norm(attn): 1.6250, norm(output): 0.7227, norm(x): 0.8453, norm(y): 0.9918, norm:0.6584, tok/sec: 190059.16, flops:199.52, batch-reuse:1
@ 1244 train 4.8392 , allloss: 4.8392, dt: 698.96ms, fracRes: 0.1909, norm(attn): 1.6641, norm(output): 0.7422, norm(x): 0.8520, norm(y): 0.9918, norm:0.7322, tok/sec: 187525.14, flops:196.86, batch-reuse:1
@ 1245 train 4.8379 , allloss: 4.8379, dt: 699.19ms, fracRes: 0.1911, norm(attn): 1.7031, norm(output): 0.7188, norm(x): 0.8463, norm(y): 0.9919, norm:0.7551, tok/sec: 187461.51, flops:196.80, batch-reuse:1
@ 1246 train 4.8181 , allloss: 4.8181, dt: 690.64ms, fracRes: 0.1909, norm(attn): 1.6719, norm(output): 0.7266, norm(x): 0.8483, norm(y): 0.9918, norm:0.7205, tok/sec: 189782.87, flops:199.23, batch-reuse:1
@ 1247 train 4.7267 , allloss: 4.7267, dt: 705.22ms, fracRes: 0.1910, norm(attn): 1.6875, norm(output): 0.7227, norm(x): 0.8453, norm(y): 0.9918, norm:0.6865, tok/sec: 185860.05, flops:195.12, batch-reuse:1
@ 1248 train 4.8556 , allloss: 4.8556, dt: 702.27ms, fracRes: 0.1905, norm(attn): 1.6953, norm(output): 0.7227, norm(x): 0.8478, norm(y): 0.9918, norm:0.6207, tok/sec: 186640.39, flops:195.94, batch-reuse:1
@ 1249 train 4.7379 , allloss: 4.7379, dt: 703.75ms, fracRes: 0.1908, norm(attn): 1.7188, norm(output): 0.7305, norm(x): 0.8471, norm(y): 0.9919, norm:0.5869, tok/sec: 186248.55, flops:195.52, batch-reuse:1
@ 1250 train 4.8164 , allloss: 4.8164, dt: 687.00ms, fracRes: 0.1909, norm(attn): 1.7188, norm(output): 0.7344, norm(x): 0.8550, norm(y): 0.9918, norm:0.5881, tok/sec: 190788.20, flops:200.29, batch-reuse:1
@ 1251 train 4.7422 , allloss: 4.7422, dt: 694.34ms, fracRes: 0.1911, norm(attn): 1.7344, norm(output): 0.7227, norm(x): 0.8524, norm(y): 0.9918, norm:0.6458, tok/sec: 188771.68, flops:198.17, batch-reuse:1
@ 1252 train 4.7693 , allloss: 4.7693, dt: 694.77ms, fracRes: 0.1905, norm(attn): 1.7266, norm(output): 0.7422, norm(x): 0.8609, norm(y): 0.9917, norm:0.6473, tok/sec: 188654.89, flops:198.05, batch-reuse:1
@ 1253 train 4.6394 , allloss: 4.6394, dt: 697.50ms, fracRes: 0.1910, norm(attn): 1.7344, norm(output): 0.7188, norm(x): 0.8468, norm(y): 0.9918, norm:0.6997, tok/sec: 187917.75, flops:197.28, batch-reuse:1
@ 1254 train 4.7307 , allloss: 4.7307, dt: 699.83ms, fracRes: 0.1912, norm(attn): 1.7344, norm(output): 0.7266, norm(x): 0.8462, norm(y): 0.9918, norm:0.6865, tok/sec: 187292.33, flops:196.62, batch-reuse:1
@ 1255 train 4.7710 , allloss: 4.7710, dt: 690.54ms, fracRes: 0.1915, norm(attn): 1.7422, norm(output): 0.7148, norm(x): 0.8366, norm(y): 0.9919, norm:0.8097, tok/sec: 189810.79, flops:199.26, batch-reuse:1
@ 1256 train 4.7007 , allloss: 4.7007, dt: 698.87ms, fracRes: 0.1911, norm(attn): 1.7422, norm(output): 0.7109, norm(x): 0.8397, norm(y): 0.9918, norm:0.7793, tok/sec: 187547.21, flops:196.89, batch-reuse:1
@ 1257 train 4.7875 , allloss: 4.7875, dt: 717.93ms, fracRes: 0.1921, norm(attn): 1.7188, norm(output): 0.6992, norm(x): 0.8321, norm(y): 0.9918, norm:0.9617, tok/sec: 182568.22, flops:191.66, batch-reuse:1
@ 1258 train 4.7642 , allloss: 4.7642, dt: 714.33ms, fracRes: 0.1912, norm(attn): 1.7188, norm(output): 0.7188, norm(x): 0.8419, norm(y): 0.9918, norm:1.3287, tok/sec: 183489.31, flops:192.63, batch-reuse:1
@ 1259 train 4.7940 , allloss: 4.7940, dt: 712.67ms, fracRes: 0.1906, norm(attn): 1.7266, norm(output): 0.7344, norm(x): 0.8535, norm(y): 0.9918, norm:0.7411, tok/sec: 183915.75, flops:193.08, batch-reuse:1
@ 1260 train 4.7123 , allloss: 4.7123, dt: 704.88ms, fracRes: 0.1915, norm(attn): 1.7266, norm(output): 0.7188, norm(x): 0.8416, norm(y): 0.9918, norm:0.8853, tok/sec: 185949.13, flops:195.21, batch-reuse:1
@ 1261 train 4.7391 , allloss: 4.7391, dt: 687.36ms, fracRes: 0.1906, norm(attn): 1.7266, norm(output): 0.7266, norm(x): 0.8458, norm(y): 0.9917, norm:1.1629, tok/sec: 190688.21, flops:200.18, batch-reuse:1
@ 1262 train 4.6655 , allloss: 4.6655, dt: 690.62ms, fracRes: 0.1910, norm(attn): 1.7188, norm(output): 0.7148, norm(x): 0.8404, norm(y): 0.9918, norm:0.7677, tok/sec: 189788.31, flops:199.24, batch-reuse:1
@ 1263 train 4.7113 , allloss: 4.7113, dt: 680.80ms, fracRes: 0.1919, norm(attn): 1.6953, norm(output): 0.7070, norm(x): 0.8326, norm(y): 0.9918, norm:0.8291, tok/sec: 192525.78, flops:202.11, batch-reuse:1
@ 1264 train 4.8091 , allloss: 4.8091, dt: 697.01ms, fracRes: 0.1910, norm(attn): 1.6797, norm(output): 0.7266, norm(x): 0.8520, norm(y): 0.9917, norm:0.9225, tok/sec: 188049.01, flops:197.41, batch-reuse:1
@ 1265 train 4.7869 , allloss: 4.7869, dt: 695.06ms, fracRes: 0.1917, norm(attn): 1.6875, norm(output): 0.7148, norm(x): 0.8415, norm(y): 0.9918, norm:0.9077, tok/sec: 188575.81, flops:197.97, batch-reuse:1
@ 1266 train 4.7641 , allloss: 4.7641, dt: 694.16ms, fracRes: 0.1921, norm(attn): 1.6641, norm(output): 0.7148, norm(x): 0.8361, norm(y): 0.9918, norm:0.6968, tok/sec: 188820.64, flops:198.22, batch-reuse:1
@ 1267 train 4.8215 , allloss: 4.8215, dt: 710.04ms, fracRes: 0.1926, norm(attn): 1.6484, norm(output): 0.7031, norm(x): 0.8308, norm(y): 0.9918, norm:0.7794, tok/sec: 184599.27, flops:193.79, batch-reuse:1
@ 1268 train 4.7586 , allloss: 4.7586, dt: 707.60ms, fracRes: 0.1924, norm(attn): 1.6562, norm(output): 0.7188, norm(x): 0.8446, norm(y): 0.9917, norm:0.9094, tok/sec: 185234.00, flops:194.46, batch-reuse:1
@ 1269 train 4.7470 , allloss: 4.7470, dt: 711.87ms, fracRes: 0.1922, norm(attn): 1.6484, norm(output): 0.7266, norm(x): 0.8451, norm(y): 0.9918, norm:0.7651, tok/sec: 184122.65, flops:193.29, batch-reuse:1
@ 1270 train 4.6218 , allloss: 4.6218, dt: 688.22ms, fracRes: 0.1930, norm(attn): 1.6406, norm(output): 0.7227, norm(x): 0.8493, norm(y): 0.9919, norm:0.6617, tok/sec: 190449.93, flops:199.93, batch-reuse:1
@ 1271 train 4.6941 , allloss: 4.6941, dt: 706.90ms, fracRes: 0.1930, norm(attn): 1.6328, norm(output): 0.7227, norm(x): 0.8486, norm(y): 0.9918, norm:0.7592, tok/sec: 185416.93, flops:194.65, batch-reuse:1
@ 1272 train 4.6732 , allloss: 4.6732, dt: 700.77ms, fracRes: 0.1928, norm(attn): 1.6250, norm(output): 0.7227, norm(x): 0.8463, norm(y): 0.9918, norm:0.9503, tok/sec: 187039.17, flops:196.35, batch-reuse:1
@ 1273 train 4.8633 , allloss: 4.8633, dt: 697.15ms, fracRes: 0.1926, norm(attn): 1.6172, norm(output): 0.7109, norm(x): 0.8399, norm(y): 0.9918, norm:1.0724, tok/sec: 188010.35, flops:197.37, batch-reuse:1
@ 1274 train 4.6819 , allloss: 4.6819, dt: 687.03ms, fracRes: 0.1923, norm(attn): 1.6172, norm(output): 0.7227, norm(x): 0.8461, norm(y): 0.9917, norm:0.7279, tok/sec: 190781.78, flops:200.28, batch-reuse:1
@ 1275 train 4.8652 , allloss: 4.8652, dt: 689.05ms, fracRes: 0.1929, norm(attn): 1.6094, norm(output): 0.7227, norm(x): 0.8471, norm(y): 0.9918, norm:0.7624, tok/sec: 190221.00, flops:199.69, batch-reuse:1
@ 1276 train 4.6605 , allloss: 4.6605, dt: 687.33ms, fracRes: 0.1938, norm(attn): 1.5859, norm(output): 0.7031, norm(x): 0.8310, norm(y): 0.9919, norm:0.8217, tok/sec: 190697.14, flops:200.19, batch-reuse:1
@ 1277 train 4.6534 , allloss: 4.6534, dt: 701.38ms, fracRes: 0.1933, norm(attn): 1.5938, norm(output): 0.6953, norm(x): 0.8255, norm(y): 0.9919, norm:0.6841, tok/sec: 186876.72, flops:196.18, batch-reuse:1
@ 1278 train 4.7667 , allloss: 4.7667, dt: 703.86ms, fracRes: 0.1931, norm(attn): 1.5938, norm(output): 0.6992, norm(x): 0.8288, norm(y): 0.9918, norm:0.6740, tok/sec: 186218.21, flops:195.49, batch-reuse:1
@ 1279 train 4.8460 , allloss: 4.8460, dt: 698.17ms, fracRes: 0.1928, norm(attn): 1.5859, norm(output): 0.7148, norm(x): 0.8392, norm(y): 0.9917, norm:0.6640, tok/sec: 187736.46, flops:197.09, batch-reuse:1
@ 1280 train 4.6498 , allloss: 4.6498, dt: 695.01ms, fracRes: 0.1940, norm(attn): 1.5938, norm(output): 0.7031, norm(x): 0.8338, norm(y): 0.9918, norm:0.9010, tok/sec: 188590.95, flops:197.98, batch-reuse:1
@ 1281 train 4.6449 , allloss: 4.6449, dt: 699.35ms, fracRes: 0.1953, norm(attn): 1.5781, norm(output): 0.7031, norm(x): 0.8295, norm(y): 0.9918, norm:0.8012, tok/sec: 187419.91, flops:196.75, batch-reuse:1
@ 1282 train 4.6697 , allloss: 4.6697, dt: 695.15ms, fracRes: 0.1951, norm(attn): 1.5469, norm(output): 0.6992, norm(x): 0.8258, norm(y): 0.9919, norm:0.7259, tok/sec: 188551.43, flops:197.94, batch-reuse:1
@ 1283 train 4.7419 , allloss: 4.7419, dt: 705.93ms, fracRes: 0.1948, norm(attn): 1.5625, norm(output): 0.6992, norm(x): 0.8321, norm(y): 0.9918, norm:0.6759, tok/sec: 185671.61, flops:194.92, batch-reuse:1
@ 1284 train 4.6705 , allloss: 4.6705, dt: 706.15ms, fracRes: 0.1940, norm(attn): 1.5469, norm(output): 0.7109, norm(x): 0.8409, norm(y): 0.9917, norm:0.8075, tok/sec: 185613.94, flops:194.86, batch-reuse:1
@ 1285 train 4.6002 , allloss: 4.6002, dt: 704.54ms, fracRes: 0.1960, norm(attn): 1.5469, norm(output): 0.6953, norm(x): 0.8278, norm(y): 0.9919, norm:1.0309, tok/sec: 186040.37, flops:195.31, batch-reuse:1
@ 1286 train 4.8551 , allloss: 4.8551, dt: 694.79ms, fracRes: 0.1940, norm(attn): 1.5547, norm(output): 0.7031, norm(x): 0.8374, norm(y): 0.9917, norm:1.0394, tok/sec: 188649.71, flops:198.04, batch-reuse:1
@ 1287 train 4.7463 , allloss: 4.7463, dt: 702.20ms, fracRes: 0.1940, norm(attn): 1.5469, norm(output): 0.7109, norm(x): 0.8440, norm(y): 0.9917, norm:0.8758, tok/sec: 186658.33, flops:195.95, batch-reuse:1
@ 1288 train 4.6936 , allloss: 4.6936, dt: 704.73ms, fracRes: 0.1953, norm(attn): 1.5312, norm(output): 0.7031, norm(x): 0.8338, norm(y): 0.9918, norm:0.6819, tok/sec: 185989.52, flops:195.25, batch-reuse:1
@ 1289 train 4.6464 , allloss: 4.6464, dt: 699.92ms, fracRes: 0.1952, norm(attn): 1.5234, norm(output): 0.6953, norm(x): 0.8273, norm(y): 0.9918, norm:0.7729, tok/sec: 187266.11, flops:196.59, batch-reuse:1
@ 1290 train 4.6578 , allloss: 4.6578, dt: 702.97ms, fracRes: 0.1958, norm(attn): 1.5312, norm(output): 0.7070, norm(x): 0.8367, norm(y): 0.9918, norm:0.7854, tok/sec: 186455.74, flops:195.74, batch-reuse:1
@ 1291 train 4.6957 , allloss: 4.6957, dt: 707.54ms, fracRes: 0.1963, norm(attn): 1.5156, norm(output): 0.7031, norm(x): 0.8356, norm(y): 0.9918, norm:0.6552, tok/sec: 185250.54, flops:194.48, batch-reuse:1
@ 1292 train 4.6568 , allloss: 4.6568, dt: 708.67ms, fracRes: 0.1969, norm(attn): 1.5156, norm(output): 0.6953, norm(x): 0.8261, norm(y): 0.9918, norm:0.6988, tok/sec: 184956.19, flops:194.17, batch-reuse:1
@ 1293 train 4.7101 , allloss: 4.7101, dt: 688.43ms, fracRes: 0.1969, norm(attn): 1.5078, norm(output): 0.6875, norm(x): 0.8196, norm(y): 0.9918, norm:0.8578, tok/sec: 190391.36, flops:199.87, batch-reuse:1
@ 1294 train 4.6530 , allloss: 4.6530, dt: 699.98ms, fracRes: 0.1970, norm(attn): 1.5078, norm(output): 0.6914, norm(x): 0.8266, norm(y): 0.9918, norm:0.9751, tok/sec: 187251.00, flops:196.58, batch-reuse:1
@ 1295 train 4.7840 , allloss: 4.7840, dt: 690.35ms, fracRes: 0.1967, norm(attn): 1.5078, norm(output): 0.6953, norm(x): 0.8261, norm(y): 0.9918, norm:0.9413, tok/sec: 189864.08, flops:199.32, batch-reuse:1
@ 1296 train 4.7614 , allloss: 4.7614, dt: 693.30ms, fracRes: 0.1974, norm(attn): 1.5000, norm(output): 0.6992, norm(x): 0.8355, norm(y): 0.9918, norm:0.9619, tok/sec: 189056.09, flops:198.47, batch-reuse:1
@ 1297 train 4.8384 , allloss: 4.8384, dt: 698.27ms, fracRes: 0.1976, norm(attn): 1.5000, norm(output): 0.7070, norm(x): 0.8380, norm(y): 0.9918, norm:0.9914, tok/sec: 187710.95, flops:197.06, batch-reuse:1
@ 1298 train 4.9343 , allloss: 4.9343, dt: 698.03ms, fracRes: 0.1979, norm(attn): 1.5000, norm(output): 0.7031, norm(x): 0.8443, norm(y): 0.9917, norm:0.8085, tok/sec: 187774.04, flops:197.13, batch-reuse:1
@ 1299 train 4.8948 , allloss: 4.8948, dt: 691.62ms, fracRes: 0.1983, norm(attn): 1.5000, norm(output): 0.7109, norm(x): 0.8457, norm(y): 0.9917, norm:0.7045, tok/sec: 189515.62, flops:198.95, batch-reuse:1
@ 1300 train 4.8286 , allloss: 4.8286, dt: 693.15ms, fracRes: 0.1997, norm(attn): 1.5000, norm(output): 0.7109, norm(x): 0.8398, norm(y): 0.9917, norm:0.7630, tok/sec: 189096.08, flops:198.51, batch-reuse:1
@ 1301 train 4.9360 , allloss: 4.9360, dt: 704.92ms, fracRes: 0.1986, norm(attn): 1.5000, norm(output): 0.7188, norm(x): 0.8517, norm(y): 0.9917, norm:0.8554, tok/sec: 185939.07, flops:195.20, batch-reuse:1
@ 1302 train 4.9037 , allloss: 4.9037, dt: 704.86ms, fracRes: 0.1972, norm(attn): 1.4922, norm(output): 0.7266, norm(x): 0.8534, norm(y): 0.9916, norm:0.8596, tok/sec: 185954.41, flops:195.22, batch-reuse:1
@ 1303 train 4.9629 , allloss: 4.9629, dt: 700.82ms, fracRes: 0.1982, norm(attn): 1.4922, norm(output): 0.7227, norm(x): 0.8510, norm(y): 0.9917, norm:0.9470, tok/sec: 187025.62, flops:196.34, batch-reuse:1
@ 1304 train 4.9246 , allloss: 4.9246, dt: 719.67ms, fracRes: 0.1989, norm(attn): 1.4844, norm(output): 0.7109, norm(x): 0.8453, norm(y): 0.9916, norm:0.7865, tok/sec: 182129.11, flops:191.20, batch-reuse:1
@ 1305 train 4.8190 , allloss: 4.8190, dt: 715.00ms, fracRes: 0.1975, norm(attn): 1.4844, norm(output): 0.7070, norm(x): 0.8410, norm(y): 0.9916, norm:0.8796, tok/sec: 183318.18, flops:192.45, batch-reuse:1
@ 1306 train 4.7531 , allloss: 4.7531, dt: 690.23ms, fracRes: 0.1980, norm(attn): 1.4688, norm(output): 0.6953, norm(x): 0.8342, norm(y): 0.9916, norm:0.9391, tok/sec: 189895.95, flops:199.35, batch-reuse:1
@ 1307 train 4.9626 , allloss: 4.9626, dt: 706.43ms, fracRes: 0.2001, norm(attn): 1.4375, norm(output): 0.7031, norm(x): 0.8407, norm(y): 0.9916, norm:0.8973, tok/sec: 185540.96, flops:194.78, batch-reuse:1
@ 1308 train 4.9381 , allloss: 4.9381, dt: 705.62ms, fracRes: 0.2000, norm(attn): 1.4531, norm(output): 0.6992, norm(x): 0.8387, norm(y): 0.9916, norm:0.7855, tok/sec: 185753.35, flops:195.00, batch-reuse:1
@ 1309 train 4.8941 , allloss: 4.8941, dt: 717.81ms, fracRes: 0.2009, norm(attn): 1.4219, norm(output): 0.7070, norm(x): 0.8379, norm(y): 0.9916, norm:0.8967, tok/sec: 182600.97, flops:191.69, batch-reuse:1
@ 1310 train 4.8920 , allloss: 4.8920, dt: 686.03ms, fracRes: 0.2023, norm(attn): 1.4141, norm(output): 0.6953, norm(x): 0.8321, norm(y): 0.9917, norm:1.0699, tok/sec: 191058.39, flops:200.57, batch-reuse:1
@ 1311 train 4.8258 , allloss: 4.8258, dt: 699.33ms, fracRes: 0.2028, norm(attn): 1.3984, norm(output): 0.7148, norm(x): 0.8513, norm(y): 0.9916, norm:0.9417, tok/sec: 187424.76, flops:196.76, batch-reuse:1
@ 1312 train 4.9074 , allloss: 4.9074, dt: 696.20ms, fracRes: 0.2008, norm(attn): 1.3828, norm(output): 0.7031, norm(x): 0.8450, norm(y): 0.9916, norm:0.8701, tok/sec: 188266.67, flops:197.64, batch-reuse:1
@ 1313 train 4.9283 , allloss: 4.9283, dt: 696.97ms, fracRes: 0.2012, norm(attn): 1.3750, norm(output): 0.7070, norm(x): 0.8438, norm(y): 0.9915, norm:0.7657, tok/sec: 188060.20, flops:197.43, batch-reuse:1
@ 1314 train 4.8811 , allloss: 4.8811, dt: 696.19ms, fracRes: 0.2025, norm(attn): 1.3828, norm(output): 0.6992, norm(x): 0.8394, norm(y): 0.9916, norm:0.8651, tok/sec: 188270.48, flops:197.65, batch-reuse:1
@ 1315 train 4.8623 , allloss: 4.8623, dt: 697.99ms, fracRes: 0.2024, norm(attn): 1.3906, norm(output): 0.7031, norm(x): 0.8429, norm(y): 0.9916, norm:0.8411, tok/sec: 187783.66, flops:197.14, batch-reuse:1
@ 1316 train 4.7973 , allloss: 4.7973, dt: 702.09ms, fracRes: 0.2022, norm(attn): 1.3906, norm(output): 0.7109, norm(x): 0.8389, norm(y): 0.9916, norm:0.8253, tok/sec: 186687.04, flops:195.98, batch-reuse:1
@ 1317 train 4.8477 , allloss: 4.8477, dt: 699.84ms, fracRes: 0.2026, norm(attn): 1.3906, norm(output): 0.7109, norm(x): 0.8461, norm(y): 0.9916, norm:0.9297, tok/sec: 187288.25, flops:196.62, batch-reuse:1
@ 1318 train 4.8114 , allloss: 4.8114, dt: 701.81ms, fracRes: 0.2039, norm(attn): 1.3906, norm(output): 0.6992, norm(x): 0.8385, norm(y): 0.9916, norm:0.9888, tok/sec: 186763.34, flops:196.06, batch-reuse:1
@ 1319 train 4.8878 , allloss: 4.8878, dt: 700.99ms, fracRes: 0.2036, norm(attn): 1.4062, norm(output): 0.7109, norm(x): 0.8474, norm(y): 0.9916, norm:0.9453, tok/sec: 186981.66, flops:196.29, batch-reuse:1
@ 1320 train 4.9295 , allloss: 4.9295, dt: 685.25ms, fracRes: 0.2038, norm(attn): 1.3906, norm(output): 0.6953, norm(x): 0.8380, norm(y): 0.9916, norm:0.8229, tok/sec: 191275.50, flops:200.80, batch-reuse:1
@ 1321 train 4.8764 , allloss: 4.8764, dt: 699.02ms, fracRes: 0.2042, norm(attn): 1.3828, norm(output): 0.6914, norm(x): 0.8335, norm(y): 0.9916, norm:0.6882, tok/sec: 187508.76, flops:196.85, batch-reuse:1
@ 1322 train 4.8627 , allloss: 4.8627, dt: 706.96ms, fracRes: 0.2046, norm(attn): 1.3828, norm(output): 0.7070, norm(x): 0.8458, norm(y): 0.9915, norm:0.7511, tok/sec: 185402.92, flops:194.64, batch-reuse:1
@ 1323 train 4.8425 , allloss: 4.8425, dt: 707.76ms, fracRes: 0.2046, norm(attn): 1.3828, norm(output): 0.7148, norm(x): 0.8522, norm(y): 0.9915, norm:0.6540, tok/sec: 185192.38, flops:194.42, batch-reuse:1
@ 1324 train 4.8683 , allloss: 4.8683, dt: 699.67ms, fracRes: 0.2049, norm(attn): 1.3906, norm(output): 0.7148, norm(x): 0.8540, norm(y): 0.9915, norm:0.6694, tok/sec: 187335.29, flops:196.66, batch-reuse:1
@ 1325 train 4.8101 , allloss: 4.8101, dt: 709.19ms, fracRes: 0.2050, norm(attn): 1.3906, norm(output): 0.6992, norm(x): 0.8422, norm(y): 0.9915, norm:0.6371, tok/sec: 184819.58, flops:194.02, batch-reuse:1
@ 1326 train 4.7999 , allloss: 4.7999, dt: 708.54ms, fracRes: 0.2050, norm(attn): 1.3906, norm(output): 0.7070, norm(x): 0.8462, norm(y): 0.9915, norm:0.6421, tok/sec: 184988.80, flops:194.20, batch-reuse:1
@ 1327 train 4.8659 , allloss: 4.8659, dt: 701.63ms, fracRes: 0.2047, norm(attn): 1.3906, norm(output): 0.7148, norm(x): 0.8541, norm(y): 0.9915, norm:0.7196, tok/sec: 186811.32, flops:196.11, batch-reuse:1
@ 1328 train 4.8600 , allloss: 4.8600, dt: 703.39ms, fracRes: 0.2052, norm(attn): 1.3906, norm(output): 0.7109, norm(x): 0.8542, norm(y): 0.9915, norm:0.8820, tok/sec: 186343.31, flops:195.62, batch-reuse:1
@ 1329 train 4.8823 , allloss: 4.8823, dt: 687.62ms, fracRes: 0.2055, norm(attn): 1.3906, norm(output): 0.7031, norm(x): 0.8447, norm(y): 0.9915, norm:0.8545, tok/sec: 190618.19, flops:200.11, batch-reuse:1
@ 1330 train 4.9086 , allloss: 4.9086, dt: 697.11ms, fracRes: 0.2056, norm(attn): 1.3906, norm(output): 0.7070, norm(x): 0.8490, norm(y): 0.9915, norm:0.7426, tok/sec: 188021.41, flops:197.39, batch-reuse:1
@ 1331 train 4.8944 , allloss: 4.8944, dt: 708.42ms, fracRes: 0.2053, norm(attn): 1.3828, norm(output): 0.7070, norm(x): 0.8509, norm(y): 0.9915, norm:0.8236, tok/sec: 185019.30, flops:194.23, batch-reuse:1
@ 1332 train 4.7996 , allloss: 4.7996, dt: 711.99ms, fracRes: 0.2069, norm(attn): 1.3828, norm(output): 0.6992, norm(x): 0.8405, norm(y): 0.9916, norm:1.0521, tok/sec: 184093.37, flops:193.26, batch-reuse:1
@ 1333 train 4.8245 , allloss: 4.8245, dt: 708.19ms, fracRes: 0.2068, norm(attn): 1.3828, norm(output): 0.6992, norm(x): 0.8443, norm(y): 0.9915, norm:1.0562, tok/sec: 185081.41, flops:194.30, batch-reuse:1
@ 1334 train 4.8321 , allloss: 4.8321, dt: 712.83ms, fracRes: 0.2066, norm(attn): 1.3828, norm(output): 0.7031, norm(x): 0.8459, norm(y): 0.9915, norm:0.7323, tok/sec: 183875.34, flops:193.03, batch-reuse:1
@ 1335 train 4.8739 , allloss: 4.8739, dt: 699.63ms, fracRes: 0.2066, norm(attn): 1.3828, norm(output): 0.7031, norm(x): 0.8435, norm(y): 0.9915, norm:0.7578, tok/sec: 187345.95, flops:196.68, batch-reuse:1
@ 1336 train 4.7869 , allloss: 4.7869, dt: 701.79ms, fracRes: 0.2065, norm(attn): 1.3828, norm(output): 0.7070, norm(x): 0.8547, norm(y): 0.9915, norm:0.9482, tok/sec: 186767.91, flops:196.07, batch-reuse:1
@ 1337 train 4.8424 , allloss: 4.8424, dt: 700.58ms, fracRes: 0.2067, norm(attn): 1.3828, norm(output): 0.7148, norm(x): 0.8567, norm(y): 0.9915, norm:0.9530, tok/sec: 187089.90, flops:196.41, batch-reuse:1
@ 1338 train 4.8436 , allloss: 4.8436, dt: 698.76ms, fracRes: 0.2061, norm(attn): 1.3750, norm(output): 0.7109, norm(x): 0.8538, norm(y): 0.9915, norm:0.8639, tok/sec: 187576.77, flops:196.92, batch-reuse:1
@ 1339 train 4.8127 , allloss: 4.8127, dt: 695.27ms, fracRes: 0.2072, norm(attn): 1.3828, norm(output): 0.7109, norm(x): 0.8566, norm(y): 0.9915, norm:0.8308, tok/sec: 188519.10, flops:197.91, batch-reuse:1
@ 1340 train 4.8279 , allloss: 4.8279, dt: 690.14ms, fracRes: 0.2078, norm(attn): 1.3750, norm(output): 0.6953, norm(x): 0.8412, norm(y): 0.9916, norm:0.8669, tok/sec: 189920.23, flops:199.38, batch-reuse:1
@ 1341 train 4.8993 , allloss: 4.8993, dt: 694.24ms, fracRes: 0.2082, norm(attn): 1.3672, norm(output): 0.7031, norm(x): 0.8453, norm(y): 0.9915, norm:0.9967, tok/sec: 188800.47, flops:198.20, batch-reuse:1
@ 1342 train 4.9188 , allloss: 4.9188, dt: 690.96ms, fracRes: 0.2077, norm(attn): 1.3516, norm(output): 0.7148, norm(x): 0.8556, norm(y): 0.9914, norm:0.9750, tok/sec: 189695.19, flops:199.14, batch-reuse:1
@ 1343 train 4.8037 , allloss: 4.8037, dt: 694.04ms, fracRes: 0.2080, norm(attn): 1.3516, norm(output): 0.7070, norm(x): 0.8468, norm(y): 0.9915, norm:1.0799, tok/sec: 188852.68, flops:198.26, batch-reuse:1
@ 1344 train 4.8026 , allloss: 4.8026, dt: 695.19ms, fracRes: 0.2079, norm(attn): 1.3594, norm(output): 0.6992, norm(x): 0.8458, norm(y): 0.9915, norm:0.8862, tok/sec: 188542.50, flops:197.93, batch-reuse:1
@ 1345 train 4.7416 , allloss: 4.7416, dt: 695.36ms, fracRes: 0.2075, norm(attn): 1.3516, norm(output): 0.6953, norm(x): 0.8404, norm(y): 0.9914, norm:0.6426, tok/sec: 188493.89, flops:197.88, batch-reuse:1
@ 1346 train 4.7751 , allloss: 4.7751, dt: 687.63ms, fracRes: 0.2084, norm(attn): 1.3359, norm(output): 0.6953, norm(x): 0.8373, norm(y): 0.9912, norm:0.9308, tok/sec: 190613.89, flops:200.11, batch-reuse:1
@ 1347 train 4.7709 , allloss: 4.7709, dt: 686.38ms, fracRes: 0.2096, norm(attn): 1.3281, norm(output): 0.6836, norm(x): 0.8289, norm(y): 0.9915, norm:1.0732, tok/sec: 190961.30, flops:200.47, batch-reuse:1
@ 1348 train 4.7956 , allloss: 4.7956, dt: 689.06ms, fracRes: 0.2091, norm(attn): 1.3359, norm(output): 0.6953, norm(x): 0.8361, norm(y): 0.9915, norm:0.6878, tok/sec: 190218.57, flops:199.69, batch-reuse:1
@ 1349 train 4.8356 , allloss: 4.8356, dt: 702.33ms, fracRes: 0.2091, norm(attn): 1.3281, norm(output): 0.6914, norm(x): 0.8398, norm(y): 0.9915, norm:0.7840, tok/sec: 186623.98, flops:195.92, batch-reuse:1
@ 1350 train 4.7179 , allloss: 4.7179, dt: 693.43ms, fracRes: 0.2090, norm(attn): 1.3359, norm(output): 0.6992, norm(x): 0.8449, norm(y): 0.9914, norm:0.6860, tok/sec: 189018.77, flops:198.43, batch-reuse:1
@ 1351 train 4.7414 , allloss: 4.7414, dt: 690.52ms, fracRes: 0.2104, norm(attn): 1.3281, norm(output): 0.6914, norm(x): 0.8401, norm(y): 0.9915, norm:0.7221, tok/sec: 189816.68, flops:199.27, batch-reuse:1
@ 1352 train 4.8621 , allloss: 4.8621, dt: 698.17ms, fracRes: 0.2095, norm(attn): 1.3359, norm(output): 0.7031, norm(x): 0.8458, norm(y): 0.9914, norm:0.8016, tok/sec: 187737.74, flops:197.09, batch-reuse:1
@ 1353 train 4.7934 , allloss: 4.7934, dt: 700.45ms, fracRes: 0.2107, norm(attn): 1.3281, norm(output): 0.6992, norm(x): 0.8451, norm(y): 0.9913, norm:0.7981, tok/sec: 187126.26, flops:196.45, batch-reuse:1
@ 1354 train 4.7996 , allloss: 4.7996, dt: 704.60ms, fracRes: 0.2113, norm(attn): 1.2969, norm(output): 0.6875, norm(x): 0.8339, norm(y): 0.9914, norm:0.7115, tok/sec: 186022.24, flops:195.29, batch-reuse:1
@ 1355 train 4.8591 , allloss: 4.8591, dt: 696.19ms, fracRes: 0.2110, norm(attn): 1.2969, norm(output): 0.6914, norm(x): 0.8332, norm(y): 0.9914, norm:0.7716, tok/sec: 188269.96, flops:197.65, batch-reuse:1
@ 1356 train 4.8039 , allloss: 4.8039, dt: 688.81ms, fracRes: 0.2095, norm(attn): 1.3047, norm(output): 0.6992, norm(x): 0.8430, norm(y): 0.9913, norm:0.7201, tok/sec: 190287.11, flops:199.76, batch-reuse:1
@ 1357 train 4.8275 , allloss: 4.8275, dt: 701.16ms, fracRes: 0.2096, norm(attn): 1.2969, norm(output): 0.6992, norm(x): 0.8414, norm(y): 0.9913, norm:0.8756, tok/sec: 186936.20, flops:196.25, batch-reuse:1
@ 1358 train 4.7896 , allloss: 4.7896, dt: 701.64ms, fracRes: 0.2101, norm(attn): 1.2969, norm(output): 0.6914, norm(x): 0.8352, norm(y): 0.9914, norm:0.8544, tok/sec: 186808.59, flops:196.11, batch-reuse:1
@ 1359 train 4.7050 , allloss: 4.7050, dt: 702.50ms, fracRes: 0.2105, norm(attn): 1.2969, norm(output): 0.6914, norm(x): 0.8306, norm(y): 0.9914, norm:0.7736, tok/sec: 186579.77, flops:195.87, batch-reuse:1
@ 1360 train 4.7258 , allloss: 4.7258, dt: 699.10ms, fracRes: 0.2113, norm(attn): 1.2969, norm(output): 0.6914, norm(x): 0.8383, norm(y): 0.9914, norm:0.7308, tok/sec: 187487.72, flops:196.82, batch-reuse:1
@ 1361 train 4.8036 , allloss: 4.8036, dt: 694.45ms, fracRes: 0.2112, norm(attn): 1.2891, norm(output): 0.7031, norm(x): 0.8475, norm(y): 0.9913, norm:0.9669, tok/sec: 188743.49, flops:198.14, batch-reuse:1
@ 1362 train 4.8815 , allloss: 4.8815, dt: 698.40ms, fracRes: 0.2130, norm(attn): 1.2891, norm(output): 0.6836, norm(x): 0.8298, norm(y): 0.9914, norm:1.3582, tok/sec: 187675.83, flops:197.02, batch-reuse:1
@ 1363 train 4.8230 , allloss: 4.8230, dt: 697.89ms, fracRes: 0.2126, norm(attn): 1.2734, norm(output): 0.6836, norm(x): 0.8301, norm(y): 0.9913, norm:0.9210, tok/sec: 187811.44, flops:197.16, batch-reuse:1
@ 1364 train 4.7014 , allloss: 4.7014, dt: 704.20ms, fracRes: 0.2126, norm(attn): 1.2578, norm(output): 0.6914, norm(x): 0.8393, norm(y): 0.9913, norm:0.7443, tok/sec: 186128.05, flops:195.40, batch-reuse:1
@ 1365 train 4.8027 , allloss: 4.8027, dt: 703.45ms, fracRes: 0.2120, norm(attn): 1.2578, norm(output): 0.6992, norm(x): 0.8466, norm(y): 0.9912, norm:0.7865, tok/sec: 186327.14, flops:195.61, batch-reuse:1
@ 1366 train 4.7639 , allloss: 4.7639, dt: 708.32ms, fracRes: 0.2127, norm(attn): 1.2578, norm(output): 0.6953, norm(x): 0.8471, norm(y): 0.9912, norm:0.8662, tok/sec: 185047.20, flops:194.26, batch-reuse:1
@ 1367 train 4.7328 , allloss: 4.7328, dt: 712.57ms, fracRes: 0.2126, norm(attn): 1.2656, norm(output): 0.6953, norm(x): 0.8436, norm(y): 0.9913, norm:1.0617, tok/sec: 183941.84, flops:193.10, batch-reuse:1
@ 1368 train 4.8661 , allloss: 4.8661, dt: 709.99ms, fracRes: 0.2115, norm(attn): 1.2812, norm(output): 0.6914, norm(x): 0.8400, norm(y): 0.9912, norm:0.9762, tok/sec: 184610.49, flops:193.80, batch-reuse:1
@ 1369 train 4.8746 , allloss: 4.8746, dt: 699.59ms, fracRes: 0.2142, norm(attn): 1.2578, norm(output): 0.6875, norm(x): 0.8304, norm(y): 0.9913, norm:0.7558, tok/sec: 187356.03, flops:196.69, batch-reuse:1
@ 1370 train 4.7544 , allloss: 4.7544, dt: 695.33ms, fracRes: 0.2139, norm(attn): 1.2656, norm(output): 0.6758, norm(x): 0.8293, norm(y): 0.9913, norm:0.6973, tok/sec: 188503.13, flops:197.89, batch-reuse:1
@ 1371 train 4.9307 , allloss: 4.9307, dt: 708.72ms, fracRes: 0.2120, norm(attn): 1.2578, norm(output): 0.6836, norm(x): 0.8332, norm(y): 0.9912, norm:0.7481, tok/sec: 184940.94, flops:194.15, batch-reuse:1
@ 1372 train 4.7302 , allloss: 4.7302, dt: 699.66ms, fracRes: 0.2140, norm(attn): 1.2656, norm(output): 0.6875, norm(x): 0.8357, norm(y): 0.9913, norm:0.9424, tok/sec: 187336.82, flops:196.67, batch-reuse:1
@ 1373 train 4.7494 , allloss: 4.7494, dt: 711.99ms, fracRes: 0.2139, norm(attn): 1.2578, norm(output): 0.6875, norm(x): 0.8306, norm(y): 0.9913, norm:0.8118, tok/sec: 184091.33, flops:193.26, batch-reuse:1
@ 1374 train 4.7135 , allloss: 4.7135, dt: 713.92ms, fracRes: 0.2136, norm(attn): 1.2500, norm(output): 0.6953, norm(x): 0.8455, norm(y): 0.9912, norm:0.8406, tok/sec: 183594.22, flops:192.74, batch-reuse:1
@ 1375 train 4.7257 , allloss: 4.7257, dt: 714.16ms, fracRes: 0.2140, norm(attn): 1.2422, norm(output): 0.6914, norm(x): 0.8366, norm(y): 0.9913, norm:0.8325, tok/sec: 183531.95, flops:192.67, batch-reuse:1
@ 1376 train 4.6941 , allloss: 4.6941, dt: 698.44ms, fracRes: 0.2136, norm(attn): 1.2500, norm(output): 0.7031, norm(x): 0.8512, norm(y): 0.9912, norm:0.8870, tok/sec: 187662.83, flops:197.01, batch-reuse:1
@ 1377 train 4.6819 , allloss: 4.6819, dt: 707.12ms, fracRes: 0.2144, norm(attn): 1.2500, norm(output): 0.6914, norm(x): 0.8374, norm(y): 0.9913, norm:0.9418, tok/sec: 185361.35, flops:194.59, batch-reuse:1
@ 1378 train 4.8068 , allloss: 4.8068, dt: 698.00ms, fracRes: 0.2152, norm(attn): 1.2500, norm(output): 0.6953, norm(x): 0.8420, norm(y): 0.9912, norm:1.0392, tok/sec: 187783.53, flops:197.14, batch-reuse:1
@ 1379 train 4.7569 , allloss: 4.7569, dt: 698.94ms, fracRes: 0.2150, norm(attn): 1.2500, norm(output): 0.6914, norm(x): 0.8402, norm(y): 0.9911, norm:0.9199, tok/sec: 187529.74, flops:196.87, batch-reuse:1
@ 1380 train 4.6946 , allloss: 4.6946, dt: 701.59ms, fracRes: 0.2168, norm(attn): 1.2422, norm(output): 0.6758, norm(x): 0.8267, norm(y): 0.9913, norm:0.7855, tok/sec: 186821.22, flops:196.13, batch-reuse:1
@ 1381 train 4.7230 , allloss: 4.7230, dt: 701.05ms, fracRes: 0.2175, norm(attn): 1.2500, norm(output): 0.6797, norm(x): 0.8296, norm(y): 0.9912, norm:0.8199, tok/sec: 186964.94, flops:196.28, batch-reuse:1
@ 1382 train 4.7155 , allloss: 4.7155, dt: 700.28ms, fracRes: 0.2177, norm(attn): 1.2578, norm(output): 0.6875, norm(x): 0.8301, norm(y): 0.9913, norm:0.6309, tok/sec: 187170.60, flops:196.49, batch-reuse:1
@ 1383 train 4.7632 , allloss: 4.7632, dt: 689.14ms, fracRes: 0.2170, norm(attn): 1.2812, norm(output): 0.6953, norm(x): 0.8415, norm(y): 0.9911, norm:0.7899, tok/sec: 190197.18, flops:199.67, batch-reuse:1
@ 1384 train 4.6271 , allloss: 4.6271, dt: 694.01ms, fracRes: 0.2183, norm(attn): 1.2891, norm(output): 0.6914, norm(x): 0.8346, norm(y): 0.9912, norm:1.0375, tok/sec: 188861.05, flops:198.27, batch-reuse:1
@ 1385 train 4.7535 , allloss: 4.7535, dt: 695.13ms, fracRes: 0.2187, norm(attn): 1.2969, norm(output): 0.6797, norm(x): 0.8291, norm(y): 0.9912, norm:1.1799, tok/sec: 188556.28, flops:197.95, batch-reuse:1
@ 1386 train 4.7205 , allloss: 4.7205, dt: 686.69ms, fracRes: 0.2179, norm(attn): 1.2969, norm(output): 0.6953, norm(x): 0.8410, norm(y): 0.9912, norm:0.8436, tok/sec: 190874.78, flops:200.38, batch-reuse:1
@ 1387 train 4.7148 , allloss: 4.7148, dt: 693.40ms, fracRes: 0.2172, norm(attn): 1.3281, norm(output): 0.6875, norm(x): 0.8343, norm(y): 0.9912, norm:0.6591, tok/sec: 189028.78, flops:198.44, batch-reuse:1
@ 1388 train 4.7663 , allloss: 4.7663, dt: 675.89ms, fracRes: 0.2179, norm(attn): 1.3359, norm(output): 0.6914, norm(x): 0.8359, norm(y): 0.9912, norm:0.8148, tok/sec: 193924.92, flops:203.58, batch-reuse:1
@ 1389 train 4.6063 , allloss: 4.6063, dt: 693.71ms, fracRes: 0.2174, norm(attn): 1.3359, norm(output): 0.6953, norm(x): 0.8444, norm(y): 0.9912, norm:0.7856, tok/sec: 188942.96, flops:198.35, batch-reuse:1
@ 1390 train 4.8194 , allloss: 4.8194, dt: 696.55ms, fracRes: 0.2179, norm(attn): 1.3516, norm(output): 0.6992, norm(x): 0.8526, norm(y): 0.9912, norm:0.8862, tok/sec: 188172.33, flops:197.54, batch-reuse:1
@ 1391 train 4.7291 , allloss: 4.7291, dt: 693.84ms, fracRes: 0.2198, norm(attn): 1.3594, norm(output): 0.6953, norm(x): 0.8467, norm(y): 0.9913, norm:1.0249, tok/sec: 188908.88, flops:198.32, batch-reuse:1
@ 1392 train 4.7118 , allloss: 4.7118, dt: 694.49ms, fracRes: 0.2202, norm(attn): 1.3672, norm(output): 0.6836, norm(x): 0.8387, norm(y): 0.9913, norm:1.2742, tok/sec: 188730.66, flops:198.13, batch-reuse:1
@ 1393 train 4.6997 , allloss: 4.6997, dt: 691.69ms, fracRes: 0.2205, norm(attn): 1.3672, norm(output): 0.6836, norm(x): 0.8342, norm(y): 0.9913, norm:0.7582, tok/sec: 189494.39, flops:198.93, batch-reuse:1
@ 1394 train 4.6613 , allloss: 4.6613, dt: 697.90ms, fracRes: 0.2204, norm(attn): 1.3672, norm(output): 0.6875, norm(x): 0.8389, norm(y): 0.9912, norm:0.9379, tok/sec: 187810.41, flops:197.16, batch-reuse:1
@ 1395 train 4.6963 , allloss: 4.6963, dt: 691.18ms, fracRes: 0.2213, norm(attn): 1.3672, norm(output): 0.6836, norm(x): 0.8371, norm(y): 0.9913, norm:0.9941, tok/sec: 189634.33, flops:199.08, batch-reuse:1
@ 1396 train 4.6881 , allloss: 4.6881, dt: 687.96ms, fracRes: 0.2218, norm(attn): 1.3672, norm(output): 0.6875, norm(x): 0.8345, norm(y): 0.9913, norm:0.7975, tok/sec: 190522.20, flops:200.01, batch-reuse:1
@ 1397 train 4.7035 , allloss: 4.7035, dt: 695.35ms, fracRes: 0.2221, norm(attn): 1.3672, norm(output): 0.6875, norm(x): 0.8449, norm(y): 0.9913, norm:0.7139, tok/sec: 188496.93, flops:197.88, batch-reuse:1
@ 1398 train 4.6844 , allloss: 4.6844, dt: 703.86ms, fracRes: 0.2230, norm(attn): 1.3672, norm(output): 0.6875, norm(x): 0.8447, norm(y): 0.9913, norm:0.6738, tok/sec: 186218.96, flops:195.49, batch-reuse:1
@ 1399 train 4.6260 , allloss: 4.6260, dt: 694.91ms, fracRes: 0.2235, norm(attn): 1.3828, norm(output): 0.6875, norm(x): 0.8415, norm(y): 0.9913, norm:0.7203, tok/sec: 188616.96, flops:198.01, batch-reuse:1
@ 1400 train 4.7674 , allloss: 4.7674, dt: 682.65ms, fracRes: 0.2239, norm(attn): 1.3750, norm(output): 0.6953, norm(x): 0.8492, norm(y): 0.9913, norm:0.8262, tok/sec: 192005.80, flops:201.57, batch-reuse:1
@ 1401 train 4.6581 , allloss: 4.6581, dt: 699.18ms, fracRes: 0.2249, norm(attn): 1.3750, norm(output): 0.6875, norm(x): 0.8420, norm(y): 0.9913, norm:0.9352, tok/sec: 187465.35, flops:196.80, batch-reuse:1
@ 1402 train 4.6047 , allloss: 4.6047, dt: 695.35ms, fracRes: 0.2258, norm(attn): 1.3828, norm(output): 0.6836, norm(x): 0.8437, norm(y): 0.9914, norm:0.8883, tok/sec: 188497.57, flops:197.89, batch-reuse:1
@ 1403 train 4.7357 , allloss: 4.7357, dt: 695.75ms, fracRes: 0.2255, norm(attn): 1.3906, norm(output): 0.6875, norm(x): 0.8432, norm(y): 0.9913, norm:0.8527, tok/sec: 188388.41, flops:197.77, batch-reuse:1
@ 1404 train 4.6368 , allloss: 4.6368, dt: 683.37ms, fracRes: 0.2266, norm(attn): 1.3906, norm(output): 0.6914, norm(x): 0.8492, norm(y): 0.9914, norm:0.6627, tok/sec: 191802.16, flops:201.35, batch-reuse:1
@ 1405 train 4.6551 , allloss: 4.6551, dt: 695.06ms, fracRes: 0.2259, norm(attn): 1.3828, norm(output): 0.7031, norm(x): 0.8568, norm(y): 0.9913, norm:0.7723, tok/sec: 188575.68, flops:197.97, batch-reuse:1
@ 1406 train 4.8076 , allloss: 4.8076, dt: 700.07ms, fracRes: 0.2266, norm(attn): 1.3750, norm(output): 0.6875, norm(x): 0.8434, norm(y): 0.9914, norm:0.7397, tok/sec: 187228.29, flops:196.55, batch-reuse:1
@ 1407 train 4.6600 , allloss: 4.6600, dt: 695.18ms, fracRes: 0.2280, norm(attn): 1.3828, norm(output): 0.6875, norm(x): 0.8444, norm(y): 0.9913, norm:0.7584, tok/sec: 188543.41, flops:197.93, batch-reuse:1
@ 1408 train 4.6485 , allloss: 4.6485, dt: 699.43ms, fracRes: 0.2273, norm(attn): 1.3828, norm(output): 0.6914, norm(x): 0.8474, norm(y): 0.9913, norm:0.8236, tok/sec: 187398.57, flops:196.73, batch-reuse:1
@ 1409 train 4.6766 , allloss: 4.6766, dt: 702.88ms, fracRes: 0.2281, norm(attn): 1.3828, norm(output): 0.6836, norm(x): 0.8467, norm(y): 0.9913, norm:1.0607, tok/sec: 186479.02, flops:195.77, batch-reuse:1
@ 1410 train 4.6719 , allloss: 4.6719, dt: 701.18ms, fracRes: 0.2282, norm(attn): 1.3828, norm(output): 0.6836, norm(x): 0.8416, norm(y): 0.9914, norm:1.1144, tok/sec: 186931.88, flops:196.24, batch-reuse:1
@ 1411 train 4.6379 , allloss: 4.6379, dt: 700.48ms, fracRes: 0.2277, norm(attn): 1.3828, norm(output): 0.6875, norm(x): 0.8434, norm(y): 0.9912, norm:0.8880, tok/sec: 187117.09, flops:196.44, batch-reuse:1
@ 1412 train 4.6067 , allloss: 4.6067, dt: 704.67ms, fracRes: 0.2275, norm(attn): 1.3828, norm(output): 0.6875, norm(x): 0.8484, norm(y): 0.9912, norm:1.0217, tok/sec: 186005.88, flops:195.27, batch-reuse:1
@ 1413 train 4.6817 , allloss: 4.6817, dt: 697.57ms, fracRes: 0.2292, norm(attn): 1.3828, norm(output): 0.6836, norm(x): 0.8416, norm(y): 0.9913, norm:0.9655, tok/sec: 187897.07, flops:197.25, batch-reuse:1
@ 1414 train 4.5943 , allloss: 4.5943, dt: 699.18ms, fracRes: 0.2291, norm(attn): 1.3984, norm(output): 0.6914, norm(x): 0.8499, norm(y): 0.9912, norm:0.8899, tok/sec: 187465.22, flops:196.80, batch-reuse:1
@ 1415 train 4.7518 , allloss: 4.7518, dt: 696.09ms, fracRes: 0.2302, norm(attn): 1.3906, norm(output): 0.6875, norm(x): 0.8460, norm(y): 0.9914, norm:0.9276, tok/sec: 188296.33, flops:197.67, batch-reuse:1
@ 1416 train 4.6752 , allloss: 4.6752, dt: 686.67ms, fracRes: 0.2297, norm(attn): 1.3984, norm(output): 0.6875, norm(x): 0.8478, norm(y): 0.9913, norm:0.9539, tok/sec: 190879.68, flops:200.39, batch-reuse:1
@ 1417 train 4.6950 , allloss: 4.6950, dt: 700.33ms, fracRes: 0.2293, norm(attn): 1.3984, norm(output): 0.6836, norm(x): 0.8440, norm(y): 0.9912, norm:0.8924, tok/sec: 187157.54, flops:196.48, batch-reuse:1
@ 1418 train 4.6466 , allloss: 4.6466, dt: 697.95ms, fracRes: 0.2287, norm(attn): 1.3906, norm(output): 0.6836, norm(x): 0.8445, norm(y): 0.9912, norm:0.6904, tok/sec: 187795.91, flops:197.15, batch-reuse:1
@ 1419 train 4.7310 , allloss: 4.7310, dt: 685.92ms, fracRes: 0.2303, norm(attn): 1.3906, norm(output): 0.6758, norm(x): 0.8369, norm(y): 0.9912, norm:0.8018, tok/sec: 191089.87, flops:200.61, batch-reuse:1
@ 1420 train 4.7212 , allloss: 4.7212, dt: 701.52ms, fracRes: 0.2315, norm(attn): 1.3906, norm(output): 0.6914, norm(x): 0.8519, norm(y): 0.9911, norm:0.8212, tok/sec: 186840.59, flops:196.15, batch-reuse:1
@ 1421 train 4.6620 , allloss: 4.6620, dt: 704.91ms, fracRes: 0.2308, norm(attn): 1.3906, norm(output): 0.6875, norm(x): 0.8478, norm(y): 0.9912, norm:0.7639, tok/sec: 185941.52, flops:195.20, batch-reuse:1
@ 1422 train 4.6379 , allloss: 4.6379, dt: 687.61ms, fracRes: 0.2304, norm(attn): 1.3828, norm(output): 0.6797, norm(x): 0.8393, norm(y): 0.9912, norm:0.8915, tok/sec: 190618.39, flops:200.11, batch-reuse:1
@ 1423 train 4.6464 , allloss: 4.6464, dt: 685.02ms, fracRes: 0.2302, norm(attn): 1.3984, norm(output): 0.6836, norm(x): 0.8441, norm(y): 0.9912, norm:1.1047, tok/sec: 191341.54, flops:200.87, batch-reuse:1
@ 1424 train 4.6641 , allloss: 4.6641, dt: 694.19ms, fracRes: 0.2314, norm(attn): 1.3906, norm(output): 0.6875, norm(x): 0.8472, norm(y): 0.9912, norm:0.9549, tok/sec: 188814.15, flops:198.22, batch-reuse:1
@ 1425 train 4.6483 , allloss: 4.6483, dt: 704.17ms, fracRes: 0.2315, norm(attn): 1.3828, norm(output): 0.6797, norm(x): 0.8457, norm(y): 0.9913, norm:0.8094, tok/sec: 186135.99, flops:195.41, batch-reuse:1
@ 1426 train 4.5321 , allloss: 4.5321, dt: 706.01ms, fracRes: 0.2314, norm(attn): 1.3828, norm(output): 0.6875, norm(x): 0.8486, norm(y): 0.9913, norm:0.6902, tok/sec: 185651.92, flops:194.90, batch-reuse:1
@ 1427 train 4.6313 , allloss: 4.6313, dt: 707.57ms, fracRes: 0.2321, norm(attn): 1.3750, norm(output): 0.6836, norm(x): 0.8439, norm(y): 0.9913, norm:0.7438, tok/sec: 185242.12, flops:194.47, batch-reuse:1
@ 1428 train 4.6152 , allloss: 4.6152, dt: 701.50ms, fracRes: 0.2325, norm(attn): 1.3750, norm(output): 0.6797, norm(x): 0.8405, norm(y): 0.9913, norm:0.7673, tok/sec: 186846.49, flops:196.15, batch-reuse:1
@ 1429 train 4.5941 , allloss: 4.5941, dt: 701.86ms, fracRes: 0.2323, norm(attn): 1.3750, norm(output): 0.7031, norm(x): 0.8714, norm(y): 0.9911, norm:0.8916, tok/sec: 186748.37, flops:196.05, batch-reuse:1
@ 1430 train 4.6791 , allloss: 4.6791, dt: 696.46ms, fracRes: 0.2322, norm(attn): 1.3672, norm(output): 0.6797, norm(x): 0.8451, norm(y): 0.9912, norm:0.9625, tok/sec: 188198.29, flops:197.57, batch-reuse:1
@ 1431 train 4.6206 , allloss: 4.6206, dt: 710.35ms, fracRes: 0.2333, norm(attn): 1.3438, norm(output): 0.6719, norm(x): 0.8388, norm(y): 0.9913, norm:0.9935, tok/sec: 184516.92, flops:193.71, batch-reuse:1
@ 1432 train 4.5861 , allloss: 4.5861, dt: 711.09ms, fracRes: 0.2335, norm(attn): 1.3281, norm(output): 0.6758, norm(x): 0.8381, norm(y): 0.9912, norm:0.8557, tok/sec: 184324.95, flops:193.50, batch-reuse:1
@ 1433 train 4.6324 , allloss: 4.6324, dt: 707.84ms, fracRes: 0.2327, norm(attn): 1.3203, norm(output): 0.6875, norm(x): 0.8506, norm(y): 0.9910, norm:0.9020, tok/sec: 185170.49, flops:194.39, batch-reuse:1
@ 1434 train 4.6634 , allloss: 4.6634, dt: 699.98ms, fracRes: 0.2338, norm(attn): 1.3281, norm(output): 0.6797, norm(x): 0.8516, norm(y): 0.9912, norm:0.8446, tok/sec: 187251.31, flops:196.58, batch-reuse:1
@ 1435 train 4.5990 , allloss: 4.5990, dt: 706.38ms, fracRes: 0.2339, norm(attn): 1.3359, norm(output): 0.6836, norm(x): 0.8500, norm(y): 0.9913, norm:0.8251, tok/sec: 185553.23, flops:194.79, batch-reuse:1
@ 1436 train 4.6004 , allloss: 4.6004, dt: 711.69ms, fracRes: 0.2349, norm(attn): 1.3281, norm(output): 0.6758, norm(x): 0.8425, norm(y): 0.9913, norm:0.8252, tok/sec: 184169.96, flops:193.34, batch-reuse:1
@ 1437 train 4.6108 , allloss: 4.6108, dt: 713.18ms, fracRes: 0.2357, norm(attn): 1.3516, norm(output): 0.6758, norm(x): 0.8477, norm(y): 0.9913, norm:0.9203, tok/sec: 183784.55, flops:192.94, batch-reuse:1
@ 1438 train 4.5066 , allloss: 4.5066, dt: 712.79ms, fracRes: 0.2354, norm(attn): 1.3672, norm(output): 0.6875, norm(x): 0.8507, norm(y): 0.9913, norm:1.0268, tok/sec: 183885.98, flops:193.04, batch-reuse:1
@ 1439 train 4.5358 , allloss: 4.5358, dt: 702.18ms, fracRes: 0.2356, norm(attn): 1.3672, norm(output): 0.6797, norm(x): 0.8508, norm(y): 0.9912, norm:0.8881, tok/sec: 186664.60, flops:195.96, batch-reuse:1
@ 1440 train 4.5655 , allloss: 4.5655, dt: 698.31ms, fracRes: 0.2361, norm(attn): 1.3672, norm(output): 0.6836, norm(x): 0.8499, norm(y): 0.9912, norm:0.9216, tok/sec: 187698.52, flops:197.05, batch-reuse:1
@ 1441 train 4.5533 , allloss: 4.5533, dt: 693.69ms, fracRes: 0.2365, norm(attn): 1.3672, norm(output): 0.6797, norm(x): 0.8415, norm(y): 0.9911, norm:0.8335, tok/sec: 188948.16, flops:198.36, batch-reuse:1
@ 1442 train 4.5674 , allloss: 4.5674, dt: 699.41ms, fracRes: 0.2354, norm(attn): 1.3672, norm(output): 0.6875, norm(x): 0.8491, norm(y): 0.9912, norm:0.8682, tok/sec: 187402.47, flops:196.74, batch-reuse:1
@ 1443 train 4.5330 , allloss: 4.5330, dt: 700.13ms, fracRes: 0.2360, norm(attn): 1.3828, norm(output): 0.6797, norm(x): 0.8491, norm(y): 0.9912, norm:0.7692, tok/sec: 187210.63, flops:196.53, batch-reuse:1
@ 1444 train 4.6050 , allloss: 4.6050, dt: 693.92ms, fracRes: 0.2365, norm(attn): 1.3906, norm(output): 0.9727, norm(x): 1.1383, norm(y): 0.9912, norm:1.1088, tok/sec: 188886.81, flops:198.29, batch-reuse:1
@ 1445 train 4.6243 , allloss: 4.6243, dt: 692.25ms, fracRes: 0.2359, norm(attn): 1.3906, norm(output): 1.0625, norm(x): 1.2377, norm(y): 0.9911, norm:1.2925, tok/sec: 189342.52, flops:198.77, batch-reuse:1
@ 1446 train 4.6766 , allloss: 4.6766, dt: 706.17ms, fracRes: 0.2356, norm(attn): 1.3984, norm(output): 1.6094, norm(x): 1.7832, norm(y): 0.9911, norm:1.8403, tok/sec: 185608.55, flops:194.85, batch-reuse:1
@ 1447 train 5.1876 , allloss: 5.1876, dt: 706.29ms, fracRes: 0.2331, norm(attn): 1.4375, norm(output): 8.1875, norm(x): 8.3435, norm(y): 0.9909, norm:9.5040, tok/sec: 185579.04, flops:194.82, batch-reuse:1
@ 1448 train 6.2147 , allloss: 6.2147, dt: 710.16ms, fracRes: 0.2171, norm(attn): 1.5625, norm(output): 23.6250, norm(x): 23.6974, norm(y): 0.9895, norm:1772.5122, tok/sec: 184565.99, flops:193.76, batch-reuse:1
@ 1449 train 10.0177 , allloss: 10.0177, dt: 703.43ms, fracRes: 0.1936, norm(attn): 1.4766, norm(output): 38.7500, norm(x): 38.9989, norm(y): 0.9878, norm:4547.3198, tok/sec: 186331.50, flops:195.61, batch-reuse:1
@ 1450 train 11.8351 , allloss: 11.8351, dt: 708.55ms, fracRes: 0.1996, norm(attn): 1.4922, norm(output): 54.2500, norm(x): 54.0514, norm(y): 0.9874, norm:3513.7732, tok/sec: 184985.69, flops:194.20, batch-reuse:1
@ 1451 train 12.2746 , allloss: 12.2746, dt: 694.78ms, fracRes: 0.1948, norm(attn): 1.4609, norm(output): 55.0000, norm(x): 55.1032, norm(y): 0.9878, norm:1077.4895, tok/sec: 188651.33, flops:198.05, batch-reuse:1
@ 1452 train 10.1690 , allloss: 10.1690, dt: 706.13ms, fracRes: 0.2100, norm(attn): 1.2969, norm(output): 45.0000, norm(x): 45.3640, norm(y): 0.9881, norm:703.6996, tok/sec: 185620.77, flops:194.87, batch-reuse:1
@ 1453 train 11.3416 , allloss: 11.3416, dt: 707.63ms, fracRes: 0.2954, norm(attn): 1.3672, norm(output): 66.5000, norm(x): 66.6346, norm(y): 0.9877, norm:6.6457, tok/sec: 185227.82, flops:194.45, batch-reuse:1
@ 1454 train 9.7172 , allloss: 9.7172, dt: 701.89ms, fracRes: 0.3000, norm(attn): 1.4844, norm(output): 70.5000, norm(x): 70.2061, norm(y): 0.9876, norm:4.5746, tok/sec: 186742.21, flops:196.04, batch-reuse:1
@ 1455 train 8.7028 , allloss: 8.7028, dt: 694.28ms, fracRes: 0.3137, norm(attn): 1.6562, norm(output): 87.0000, norm(x): 86.0416, norm(y): 0.9880, norm:3.2097, tok/sec: 188788.93, flops:198.19, batch-reuse:1
@ 1456 train 8.5466 , allloss: 8.5466, dt: 706.09ms, fracRes: 0.3221, norm(attn): 1.7031, norm(output): 96.5000, norm(x): 97.0195, norm(y): 0.9883, norm:2.7962, tok/sec: 185630.36, flops:194.88, batch-reuse:1
@ 1457 train 8.4954 , allloss: 8.4954, dt: 704.21ms, fracRes: 0.3364, norm(attn): 1.7188, norm(output): 103.5000, norm(x): 102.6433, norm(y): 0.9883, norm:3.0621, tok/sec: 186126.10, flops:195.40, batch-reuse:1
@ 1458 train 8.4165 , allloss: 8.4165, dt: 709.05ms, fracRes: 0.3363, norm(attn): 1.7578, norm(output): 103.5000, norm(x): 103.5802, norm(y): 0.9882, norm:3.2663, tok/sec: 184855.00, flops:194.06, batch-reuse:1
@ 1459 train 8.2474 , allloss: 8.2474, dt: 706.58ms, fracRes: 0.3523, norm(attn): 1.7344, norm(output): 98.0000, norm(x): 98.9547, norm(y): 0.9877, norm:2.4901, tok/sec: 185500.76, flops:194.74, batch-reuse:1
@ 1460 train 7.7741 , allloss: 7.7741, dt: 699.83ms, fracRes: 0.3373, norm(attn): 1.6641, norm(output): 95.5000, norm(x): 95.1761, norm(y): 0.9870, norm:1.4627, tok/sec: 187289.97, flops:196.62, batch-reuse:1
@ 1461 train 7.7758 , allloss: 7.7758, dt: 702.60ms, fracRes: 0.3338, norm(attn): 1.7266, norm(output): 98.0000, norm(x): 98.6353, norm(y): 0.9868, norm:1.9359, tok/sec: 186553.63, flops:195.84, batch-reuse:1
@ 1462 train 7.8436 , allloss: 7.8436, dt: 699.70ms, fracRes: 0.3291, norm(attn): 1.7578, norm(output): 104.5000, norm(x): 104.6672, norm(y): 0.9865, norm:2.0051, tok/sec: 187325.58, flops:196.65, batch-reuse:1
@ 1463 train 7.8503 , allloss: 7.8503, dt: 699.00ms, fracRes: 0.3393, norm(attn): 1.8438, norm(output): 111.5000, norm(x): 111.7662, norm(y): 0.9862, norm:1.5288, tok/sec: 187513.81, flops:196.85, batch-reuse:1
@ 1464 train 7.7602 , allloss: 7.7602, dt: 696.97ms, fracRes: 0.3402, norm(attn): 1.8828, norm(output): 114.0000, norm(x): 116.3093, norm(y): 0.9862, norm:2.1847, tok/sec: 188060.78, flops:197.43, batch-reuse:1
@ 1465 train 7.7909 , allloss: 7.7909, dt: 696.06ms, fracRes: 0.3414, norm(attn): 1.8984, norm(output): 120.5000, norm(x): 119.9893, norm(y): 0.9862, norm:3.3734, tok/sec: 188305.62, flops:197.68, batch-reuse:1
@ 1466 train 7.7659 , allloss: 7.7659, dt: 686.68ms, fracRes: 0.3418, norm(attn): 1.9062, norm(output): 122.0000, norm(x): 124.4026, norm(y): 0.9863, norm:3.1011, tok/sec: 190877.03, flops:200.38, batch-reuse:1
@ 1467 train 7.7166 , allloss: 7.7166, dt: 690.04ms, fracRes: 0.3464, norm(attn): 1.9922, norm(output): 129.0000, norm(x): 129.9427, norm(y): 0.9862, norm:1.8829, tok/sec: 189947.66, flops:199.41, batch-reuse:1
@ 1468 train 7.7660 , allloss: 7.7660, dt: 700.18ms, fracRes: 0.3444, norm(attn): 2.0469, norm(output): 135.0000, norm(x): 135.6131, norm(y): 0.9862, norm:0.9917, tok/sec: 187198.90, flops:196.52, batch-reuse:1
@ 1469 train 7.9973 , allloss: 7.9973, dt: 701.99ms, fracRes: 0.3450, norm(attn): 2.1094, norm(output): 137.0000, norm(x): 137.5913, norm(y): 0.9861, norm:0.8569, tok/sec: 186716.08, flops:196.01, batch-reuse:1
@ 1470 train 7.7280 , allloss: 7.7280, dt: 699.01ms, fracRes: 0.3455, norm(attn): 2.1250, norm(output): 137.0000, norm(x): 138.1566, norm(y): 0.9861, norm:0.9763, tok/sec: 187511.00, flops:196.85, batch-reuse:1
@ 1471 train 7.6151 , allloss: 7.6151, dt: 692.14ms, fracRes: 0.3456, norm(attn): 2.1406, norm(output): 137.0000, norm(x): 138.1511, norm(y): 0.9861, norm:1.1193, tok/sec: 189371.22, flops:198.80, batch-reuse:1
@ 1472 train 7.6616 , allloss: 7.6616, dt: 706.27ms, fracRes: 0.3465, norm(attn): 2.2188, norm(output): 138.0000, norm(x): 139.6090, norm(y): 0.9861, norm:1.0042, tok/sec: 185582.48, flops:194.82, batch-reuse:1
@ 1473 train 7.6697 , allloss: 7.6697, dt: 704.65ms, fracRes: 0.3514, norm(attn): 2.2500, norm(output): 143.0000, norm(x): 143.3469, norm(y): 0.9861, norm:0.7699, tok/sec: 186010.47, flops:195.27, batch-reuse:1
@ 1474 train 7.8700 , allloss: 7.8700, dt: 692.57ms, fracRes: 0.3555, norm(attn): 2.2656, norm(output): 145.0000, norm(x): 146.2387, norm(y): 0.9861, norm:1.1136, tok/sec: 189255.44, flops:198.68, batch-reuse:1
@ 1475 train 7.7394 , allloss: 7.7394, dt: 708.50ms, fracRes: 0.3573, norm(attn): 2.2812, norm(output): 146.0000, norm(x): 147.6416, norm(y): 0.9862, norm:1.0459, tok/sec: 184998.45, flops:194.21, batch-reuse:1
@ 1476 train 7.6606 , allloss: 7.6606, dt: 705.47ms, fracRes: 0.3583, norm(attn): 2.3281, norm(output): 146.0000, norm(x): 147.7759, norm(y): 0.9862, norm:0.7999, tok/sec: 185794.79, flops:195.05, batch-reuse:1
@ 1477 train 7.6966 , allloss: 7.6966, dt: 703.78ms, fracRes: 0.3591, norm(attn): 2.3438, norm(output): 146.0000, norm(x): 147.3407, norm(y): 0.9862, norm:1.0626, tok/sec: 186238.77, flops:195.51, batch-reuse:1
@ 1478 train 7.6438 , allloss: 7.6438, dt: 708.06ms, fracRes: 0.3603, norm(attn): 2.3438, norm(output): 145.0000, norm(x): 147.3990, norm(y): 0.9863, norm:0.7998, tok/sec: 185114.81, flops:194.33, batch-reuse:1
@ 1479 train 7.6860 , allloss: 7.6860, dt: 686.54ms, fracRes: 0.3616, norm(attn): 2.3438, norm(output): 146.0000, norm(x): 147.0828, norm(y): 0.9862, norm:0.6582, tok/sec: 190917.20, flops:200.43, batch-reuse:1
@ 1480 train 7.6736 , allloss: 7.6736, dt: 689.50ms, fracRes: 0.3630, norm(attn): 2.3438, norm(output): 145.0000, norm(x): 145.6362, norm(y): 0.9862, norm:0.5871, tok/sec: 190098.13, flops:199.57, batch-reuse:1
@ 1481 train 7.6661 , allloss: 7.6661, dt: 691.52ms, fracRes: 0.3647, norm(attn): 2.3438, norm(output): 143.0000, norm(x): 142.8359, norm(y): 0.9863, norm:0.6008, tok/sec: 189541.95, flops:198.98, batch-reuse:1
@ 1482 train 7.6910 , allloss: 7.6910, dt: 693.33ms, fracRes: 0.3661, norm(attn): 2.2812, norm(output): 138.0000, norm(x): 139.3474, norm(y): 0.9862, norm:0.7749, tok/sec: 189046.27, flops:198.46, batch-reuse:1
@ 1483 train 7.6727 , allloss: 7.6727, dt: 694.20ms, fracRes: 0.3675, norm(attn): 2.2656, norm(output): 136.0000, norm(x): 135.5609, norm(y): 0.9862, norm:0.6116, tok/sec: 188810.71, flops:198.21, batch-reuse:1
@ 1484 train 7.7151 , allloss: 7.7151, dt: 707.64ms, fracRes: 0.3685, norm(attn): 2.2500, norm(output): 130.0000, norm(x): 131.4769, norm(y): 0.9862, norm:0.6731, tok/sec: 185225.27, flops:194.45, batch-reuse:1
@ 1485 train 7.7644 , allloss: 7.7644, dt: 705.51ms, fracRes: 0.3681, norm(attn): 2.2344, norm(output): 127.0000, norm(x): 125.7098, norm(y): 0.9861, norm:0.7009, tok/sec: 185783.49, flops:195.04, batch-reuse:1
@ 1486 train 7.6736 , allloss: 7.6736, dt: 706.64ms, fracRes: 0.3665, norm(attn): 2.2188, norm(output): 118.5000, norm(x): 118.1080, norm(y): 0.9861, norm:0.4431, tok/sec: 185485.49, flops:194.72, batch-reuse:1
@ 1487 train 7.6397 , allloss: 7.6397, dt: 704.65ms, fracRes: 0.3672, norm(attn): 2.1406, norm(output): 109.0000, norm(x): 108.3683, norm(y): 0.9860, norm:0.4441, tok/sec: 186009.66, flops:195.27, batch-reuse:1
@ 1488 train 7.6253 , allloss: 7.6253, dt: 707.59ms, fracRes: 0.3708, norm(attn): 2.0938, norm(output): 96.5000, norm(x): 97.6056, norm(y): 0.9859, norm:0.5433, tok/sec: 185238.00, flops:194.46, batch-reuse:1
@ 1489 train 7.7601 , allloss: 7.7601, dt: 697.28ms, fracRes: 0.3784, norm(attn): 1.9531, norm(output): 79.0000, norm(x): 77.9024, norm(y): 0.9859, norm:0.5525, tok/sec: 187975.13, flops:197.34, batch-reuse:1
@ 1490 train 7.6982 , allloss: 7.6982, dt: 684.85ms, fracRes: 0.3786, norm(attn): 1.7578, norm(output): 59.7500, norm(x): 59.4584, norm(y): 0.9860, norm:0.5230, tok/sec: 191388.90, flops:200.92, batch-reuse:1
@ 1491 train 7.6308 , allloss: 7.6308, dt: 704.38ms, fracRes: 0.3542, norm(attn): 1.6328, norm(output): 17.7500, norm(x): 17.8142, norm(y): 0.9863, norm:1.6286, tok/sec: 186082.12, flops:195.35, batch-reuse:1
@ 1492 train 7.5529 , allloss: 7.5529, dt: 701.76ms, fracRes: 0.3598, norm(attn): 1.7031, norm(output): 25.2500, norm(x): 25.3359, norm(y): 0.9865, norm:1.3696, tok/sec: 186776.35, flops:196.08, batch-reuse:1
@ 1493 train 7.5100 , allloss: 7.5100, dt: 699.12ms, fracRes: 0.3585, norm(attn): 1.7031, norm(output): 21.8750, norm(x): 21.7914, norm(y): 0.9870, norm:1.5216, tok/sec: 187481.39, flops:196.82, batch-reuse:1
@ 1494 train 7.2578 , allloss: 7.2578, dt: 698.18ms, fracRes: 0.3637, norm(attn): 1.6562, norm(output): 12.0625, norm(x): 12.3969, norm(y): 0.9871, norm:1.7391, tok/sec: 187733.13, flops:197.08, batch-reuse:1
@ 1495 train 8.7405 , allloss: 8.7405, dt: 695.25ms, fracRes: 0.3748, norm(attn): 1.5312, norm(output): 17.3750, norm(x): 17.6280, norm(y): 0.9863, norm:20.3788, tok/sec: 188525.18, flops:197.91, batch-reuse:1
@ 1496 train 13.2715 , allloss: 13.2715, dt: 707.91ms, fracRes: 0.3523, norm(attn): 1.5312, norm(output): 4.3438, norm(x): 4.5275, norm(y): 0.9866, norm:20.8954, tok/sec: 185154.71, flops:194.38, batch-reuse:1
@ 1497 train 8.5146 , allloss: 8.5146, dt: 696.87ms, fracRes: 0.3474, norm(attn): 1.6484, norm(output): 4.1875, norm(x): 4.4095, norm(y): 0.9870, norm:8.3525, tok/sec: 188086.77, flops:197.45, batch-reuse:1
@ 1498 train 7.4091 , allloss: 7.4091, dt: 690.73ms, fracRes: 0.3534, norm(attn): 1.6250, norm(output): 4.7500, norm(x): 4.9777, norm(y): 0.9872, norm:4.4154, tok/sec: 189758.64, flops:199.21, batch-reuse:1
@ 1499 train 7.6257 , allloss: 7.6257, dt: 703.32ms, fracRes: 0.3514, norm(attn): 1.7422, norm(output): 7.4062, norm(x): 7.6100, norm(y): 0.9870, norm:3.1669, tok/sec: 186361.19, flops:195.64, batch-reuse:1
@ 1500 train 7.4598 , allloss: 7.4598, dt: 703.50ms, fracRes: 0.3636, norm(attn): 1.7578, norm(output): 10.2500, norm(x): 10.5021, norm(y): 0.9873, norm:1.7570, tok/sec: 186314.70, flops:195.59, batch-reuse:1
@ 1501 train 7.1515 , allloss: 7.1515, dt: 698.11ms, fracRes: 0.3671, norm(attn): 1.7578, norm(output): 9.1250, norm(x): 9.4688, norm(y): 0.9875, norm:2.0262, tok/sec: 187752.55, flops:197.10, batch-reuse:1
@ 1502 train 7.0674 , allloss: 7.0674, dt: 703.54ms, fracRes: 0.3662, norm(attn): 1.7578, norm(output): 7.8750, norm(x): 8.0545, norm(y): 0.9874, norm:1.6470, tok/sec: 186304.29, flops:195.58, batch-reuse:1
@ 1503 train 7.0097 , allloss: 7.0097, dt: 697.58ms, fracRes: 0.3672, norm(attn): 1.7812, norm(output): 6.8750, norm(x): 7.0044, norm(y): 0.9875, norm:3.1916, tok/sec: 187895.20, flops:197.25, batch-reuse:1
@ 1504 train 6.8895 , allloss: 6.8895, dt: 699.90ms, fracRes: 0.3690, norm(attn): 1.7812, norm(output): 6.6875, norm(x): 6.8943, norm(y): 0.9877, norm:1.8492, tok/sec: 187273.07, flops:196.60, batch-reuse:1
@ 1505 train 6.9704 , allloss: 6.9704, dt: 704.25ms, fracRes: 0.3707, norm(attn): 1.7422, norm(output): 6.9688, norm(x): 7.1680, norm(y): 0.9877, norm:3.6372, tok/sec: 186116.27, flops:195.39, batch-reuse:1
@ 1506 train 6.8388 , allloss: 6.8388, dt: 697.90ms, fracRes: 0.3709, norm(attn): 1.7422, norm(output): 6.5312, norm(x): 6.7990, norm(y): 0.9878, norm:1.9134, tok/sec: 187809.06, flops:197.16, batch-reuse:1
@ 1507 train 7.0539 , allloss: 7.0539, dt: 703.63ms, fracRes: 0.3697, norm(attn): 1.7578, norm(output): 5.8438, norm(x): 6.0521, norm(y): 0.9879, norm:4.5307, tok/sec: 186279.73, flops:195.56, batch-reuse:1
@ 1508 train 6.7401 , allloss: 6.7401, dt: 692.20ms, fracRes: 0.3602, norm(attn): 1.7656, norm(output): 5.3438, norm(x): 5.5441, norm(y): 0.9879, norm:3.0888, tok/sec: 189356.28, flops:198.79, batch-reuse:1
@ 1509 train 6.5944 , allloss: 6.5944, dt: 684.79ms, fracRes: 0.3430, norm(attn): 1.7500, norm(output): 4.9688, norm(x): 5.1648, norm(y): 0.9875, norm:1.7824, tok/sec: 191403.89, flops:200.94, batch-reuse:1
@ 1510 train 6.5698 , allloss: 6.5698, dt: 691.50ms, fracRes: 0.3089, norm(attn): 1.7344, norm(output): 4.2500, norm(x): 4.4270, norm(y): 0.9873, norm:4.4340, tok/sec: 189547.37, flops:198.99, batch-reuse:1
@ 1511 train 6.4624 , allloss: 6.4624, dt: 702.62ms, fracRes: 0.3475, norm(attn): 1.8516, norm(output): 4.2812, norm(x): 4.4607, norm(y): 0.9877, norm:1.1652, tok/sec: 186548.82, flops:195.84, batch-reuse:1
@ 1512 train 6.3886 , allloss: 6.3886, dt: 707.46ms, fracRes: 0.3600, norm(attn): 1.8828, norm(output): 4.0625, norm(x): 4.2969, norm(y): 0.9882, norm:1.1023, tok/sec: 185271.71, flops:194.50, batch-reuse:1
@ 1513 train 6.3342 , allloss: 6.3342, dt: 701.08ms, fracRes: 0.3680, norm(attn): 1.9688, norm(output): 3.7500, norm(x): 3.9214, norm(y): 0.9884, norm:1.7653, tok/sec: 186956.29, flops:196.27, batch-reuse:1
@ 1514 train 6.3839 , allloss: 6.3839, dt: 709.04ms, fracRes: 0.3657, norm(attn): 1.9844, norm(output): 3.4375, norm(x): 3.6237, norm(y): 0.9882, norm:2.2174, tok/sec: 184857.80, flops:194.06, batch-reuse:1
@ 1515 train 6.1261 , allloss: 6.1261, dt: 715.30ms, fracRes: 0.3685, norm(attn): 2.0000, norm(output): 3.0625, norm(x): 3.2838, norm(y): 0.9883, norm:1.1735, tok/sec: 183240.39, flops:192.37, batch-reuse:1
@ 1516 train 5.9673 , allloss: 5.9673, dt: 705.47ms, fracRes: 0.3667, norm(attn): 2.0312, norm(output): 2.7656, norm(x): 2.9710, norm(y): 0.9883, norm:1.6401, tok/sec: 185792.84, flops:195.05, batch-reuse:1
@ 1517 train 6.0539 , allloss: 6.0539, dt: 694.73ms, fracRes: 0.3721, norm(attn): 2.0000, norm(output): 2.6094, norm(x): 2.8097, norm(y): 0.9884, norm:2.5822, tok/sec: 188664.86, flops:198.06, batch-reuse:1
@ 1518 train 5.9082 , allloss: 5.9082, dt: 698.25ms, fracRes: 0.3686, norm(attn): 2.0000, norm(output): 2.3594, norm(x): 2.5632, norm(y): 0.9884, norm:1.1838, tok/sec: 187714.35, flops:197.06, batch-reuse:1
@ 1519 train 5.8449 , allloss: 5.8449, dt: 684.31ms, fracRes: 0.3695, norm(attn): 1.9922, norm(output): 2.2500, norm(x): 2.4387, norm(y): 0.9882, norm:0.9768, tok/sec: 191537.73, flops:201.08, batch-reuse:1
@ 1520 train 5.8178 , allloss: 5.8178, dt: 685.79ms, fracRes: 0.3608, norm(attn): 1.9922, norm(output): 2.0781, norm(x): 2.2589, norm(y): 0.9884, norm:1.5599, tok/sec: 191126.81, flops:200.65, batch-reuse:1
@ 1521 train 5.8575 , allloss: 5.8575, dt: 690.14ms, fracRes: 0.3645, norm(attn): 1.9688, norm(output): 2.0000, norm(x): 2.2056, norm(y): 0.9883, norm:3.4977, tok/sec: 189921.87, flops:199.38, batch-reuse:1
@ 1522 train 6.0241 , allloss: 6.0241, dt: 697.69ms, fracRes: 0.3649, norm(attn): 1.6875, norm(output): 2.7500, norm(x): 2.9380, norm(y): 0.9875, norm:16.2279, tok/sec: 187864.64, flops:197.22, batch-reuse:1
@ 1523 train 5.8080 , allloss: 5.8080, dt: 686.78ms, fracRes: 0.3636, norm(attn): 1.8672, norm(output): 1.8203, norm(x): 2.0151, norm(y): 0.9882, norm:2.5291, tok/sec: 190850.79, flops:200.36, batch-reuse:1
@ 1524 train 5.6984 , allloss: 5.6984, dt: 689.46ms, fracRes: 0.3671, norm(attn): 1.8672, norm(output): 1.7656, norm(x): 1.9552, norm(y): 0.9880, norm:1.2617, tok/sec: 190109.18, flops:199.58, batch-reuse:1
@ 1525 train 5.6352 , allloss: 5.6352, dt: 755.78ms, fracRes: 0.3734, norm(attn): 1.7812, norm(output): 1.6484, norm(x): 1.8615, norm(y): 0.9879, norm:1.9012, tok/sec: 173425.75, flops:182.06, batch-reuse:1
@ 1526 train 5.6815 , allloss: 5.6815, dt: 695.17ms, fracRes: 0.3699, norm(attn): 1.8438, norm(output): 1.6250, norm(x): 1.8410, norm(y): 0.9879, norm:1.4409, tok/sec: 188546.38, flops:197.94, batch-reuse:1
@ 1527 train 5.5133 , allloss: 5.5133, dt: 696.17ms, fracRes: 0.3665, norm(attn): 1.8594, norm(output): 1.5781, norm(x): 1.7936, norm(y): 0.9879, norm:0.8684, tok/sec: 188274.60, flops:197.65, batch-reuse:1
@ 1528 train 5.5028 , allloss: 5.5028, dt: 708.10ms, fracRes: 0.3668, norm(attn): 1.7812, norm(output): 1.5469, norm(x): 1.7615, norm(y): 0.9878, norm:0.8473, tok/sec: 185103.09, flops:194.32, batch-reuse:1
@ 1529 train 5.3673 , allloss: 5.3673, dt: 710.38ms, fracRes: 0.3664, norm(attn): 1.7812, norm(output): 1.4375, norm(x): 1.6500, norm(y): 0.9878, norm:0.9186, tok/sec: 184508.94, flops:193.70, batch-reuse:1
@ 1530 train 5.3712 , allloss: 5.3712, dt: 703.96ms, fracRes: 0.3693, norm(attn): 1.7422, norm(output): 1.3984, norm(x): 1.6248, norm(y): 0.9877, norm:1.6325, tok/sec: 186193.48, flops:195.47, batch-reuse:1
@ 1531 train 5.2515 , allloss: 5.2515, dt: 695.59ms, fracRes: 0.3509, norm(attn): 1.7734, norm(output): 1.3125, norm(x): 1.5308, norm(y): 0.9878, norm:1.5932, tok/sec: 188432.32, flops:197.82, batch-reuse:1
@ 1532 train 5.2729 , allloss: 5.2729, dt: 689.12ms, fracRes: 0.3558, norm(attn): 1.7500, norm(output): 1.2734, norm(x): 1.4894, norm(y): 0.9877, norm:0.7396, tok/sec: 190202.77, flops:199.68, batch-reuse:1
@ 1533 train 5.1660 , allloss: 5.1660, dt: 707.35ms, fracRes: 0.3556, norm(attn): 1.7422, norm(output): 1.2500, norm(x): 1.4595, norm(y): 0.9876, norm:1.0537, tok/sec: 185301.12, flops:194.53, batch-reuse:1
@ 1534 train 5.2338 , allloss: 5.2338, dt: 711.04ms, fracRes: 0.3452, norm(attn): 1.7031, norm(output): 1.1797, norm(x): 1.3947, norm(y): 0.9876, norm:1.6307, tok/sec: 184338.06, flops:193.52, batch-reuse:1
@ 1535 train 5.1985 , allloss: 5.1985, dt: 709.31ms, fracRes: 0.3402, norm(attn): 1.6328, norm(output): 1.1562, norm(x): 1.3614, norm(y): 0.9875, norm:0.8686, tok/sec: 184787.46, flops:193.99, batch-reuse:1
@ 1536 train 5.1690 , allloss: 5.1690, dt: 709.58ms, fracRes: 0.3373, norm(attn): 1.6250, norm(output): 1.1406, norm(x): 1.3425, norm(y): 0.9873, norm:1.2503, tok/sec: 184718.79, flops:193.92, batch-reuse:1
@ 1537 train 5.1523 , allloss: 5.1523, dt: 711.22ms, fracRes: 0.3356, norm(attn): 1.6172, norm(output): 1.1172, norm(x): 1.3107, norm(y): 0.9875, norm:1.7527, tok/sec: 184291.90, flops:193.47, batch-reuse:1
@ 1538 train 5.0196 , allloss: 5.0196, dt: 699.37ms, fracRes: 0.3465, norm(attn): 1.6016, norm(output): 1.1172, norm(x): 1.3144, norm(y): 0.9875, norm:1.1483, tok/sec: 187414.99, flops:196.75, batch-reuse:1
@ 1539 train 5.0746 , allloss: 5.0746, dt: 714.21ms, fracRes: 0.3400, norm(attn): 1.5938, norm(output): 1.0938, norm(x): 1.2926, norm(y): 0.9875, norm:1.1171, tok/sec: 183519.14, flops:192.66, batch-reuse:1
@ 1540 train 5.0419 , allloss: 5.0419, dt: 706.13ms, fracRes: 0.3396, norm(attn): 1.5703, norm(output): 1.0703, norm(x): 1.2858, norm(y): 0.9876, norm:1.0104, tok/sec: 185620.96, flops:194.87, batch-reuse:1
@ 1541 train 4.9658 , allloss: 4.9658, dt: 709.41ms, fracRes: 0.3411, norm(attn): 1.5469, norm(output): 1.0703, norm(x): 1.2837, norm(y): 0.9875, norm:0.9470, tok/sec: 184761.07, flops:193.96, batch-reuse:1
@ 1542 train 5.0063 , allloss: 5.0063, dt: 710.17ms, fracRes: 0.3389, norm(attn): 1.5469, norm(output): 1.0625, norm(x): 1.2698, norm(y): 0.9876, norm:1.6960, tok/sec: 184565.43, flops:193.76, batch-reuse:1
@ 1543 train 5.2722 , allloss: 5.2722, dt: 709.92ms, fracRes: 0.3462, norm(attn): 1.5469, norm(output): 1.0938, norm(x): 1.3053, norm(y): 0.9874, norm:1.1102, tok/sec: 184629.33, flops:193.82, batch-reuse:1
@ 1544 train 4.8588 , allloss: 4.8588, dt: 705.58ms, fracRes: 0.3440, norm(attn): 1.5078, norm(output): 1.0234, norm(x): 1.2343, norm(y): 0.9876, norm:1.1319, tok/sec: 185763.90, flops:195.02, batch-reuse:1
@ 1545 train 4.9563 , allloss: 4.9563, dt: 706.72ms, fracRes: 0.3449, norm(attn): 1.5000, norm(output): 1.0156, norm(x): 1.2333, norm(y): 0.9876, norm:1.0018, tok/sec: 185464.97, flops:194.70, batch-reuse:1
@ 1546 train 5.4580 , allloss: 5.4580, dt: 707.47ms, fracRes: 0.3411, norm(attn): 1.5000, norm(output): 1.0312, norm(x): 1.2407, norm(y): 0.9876, norm:3.9722, tok/sec: 185269.27, flops:194.50, batch-reuse:1
@ 1547 train 5.0645 , allloss: 5.0645, dt: 709.67ms, fracRes: 0.3332, norm(attn): 1.5000, norm(output): 1.0469, norm(x): 1.2536, norm(y): 0.9876, norm:1.9986, tok/sec: 184695.58, flops:193.89, batch-reuse:1
@ 1548 train 5.1228 , allloss: 5.1228, dt: 704.64ms, fracRes: 0.3412, norm(attn): 1.5625, norm(output): 1.0938, norm(x): 1.2971, norm(y): 0.9875, norm:1.2222, tok/sec: 186013.87, flops:195.28, batch-reuse:1
@ 1549 train 5.0632 , allloss: 5.0632, dt: 690.44ms, fracRes: 0.3401, norm(attn): 1.6250, norm(output): 1.1172, norm(x): 1.3140, norm(y): 0.9876, norm:1.1907, tok/sec: 189839.69, flops:199.29, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9492, 0.0510, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6719, 0.2080, 0.1191, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5117, 0.1611, 0.1016, 0.2246, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3730, 0.1455, 0.1768, 0.1797, 0.1260, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4336, 0.0972, 0.0703, 0.1641, 0.1650, 0.0693, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3965, 0.0840, 0.1406, 0.1211, 0.0703, 0.1079, 0.0801, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3086, 0.0732, 0.0752, 0.1084, 0.1157, 0.0889, 0.1611, 0.0684, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1396, 0.0962, 0.0913, 0.1260, 0.0869, 0.1055, 0.0820, 0.1504, 0.1235, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1562, 0.0698, 0.0530, 0.1064, 0.0869, 0.0786, 0.0693, 0.1279, 0.1494, 0.1025, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0776, 0.0806, 0.0581, 0.1089, 0.0991, 0.1118, 0.0757, 0.0820, 0.1367, 0.0962, 0.0732, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2188, 0.0791, 0.0469, 0.0889, 0.0457, 0.0640, 0.0525, 0.1040, 0.0659, 0.0732, 0.0544, 0.1064, 0.0000, 0.0000, 0.0000],
        [0.4766, 0.0386, 0.0532, 0.0334, 0.0479, 0.0457, 0.0493, 0.0342, 0.0347, 0.0583, 0.0400, 0.0405, 0.0474, 0.0000, 0.0000],
        [0.1030, 0.0520, 0.0356, 0.0481, 0.0444, 0.0505, 0.0388, 0.0889, 0.0806, 0.0708, 0.0684, 0.1025, 0.1514, 0.0654, 0.0000],
        [0.0923, 0.0603, 0.0327, 0.0894, 0.0723, 0.0613, 0.0649, 0.0586, 0.0698, 0.0464, 0.0559, 0.0596, 0.0903, 0.0986, 0.0479]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0674,     -0.9219,     -0.7266,     -0.9062,     -1.0469,     -0.8750,     -0.8047,     -0.8516,     -0.9180,     -0.7188,     -0.8164,     -0.9297,     -0.8008,     -0.8828,     -0.7227],
        [     0.0159,     -2.9062,     -2.1562,     -1.6484,     -1.5391,     -1.6641,     -1.6250,     -1.3281,     -1.2656,     -1.2031,     -1.0391,     -0.9141,     -0.6055,     -1.0391,     -0.6211],
        [    -0.0264,     -1.1953,     -1.7578,     -0.4453,     -0.5469,     -1.0469,     -0.5586,     -0.6953,     -0.5781,     -0.8594,     -0.6289,     -0.0209,     -0.1226,     -0.5039,     -0.1152],
        [     0.0405,     -1.1172,     -1.5781,     -0.7891,     -1.4531,     -1.0234,     -1.1172,     -0.7422,     -0.9883,     -0.8516,     -1.1328,     -0.8945,     -0.5430,     -0.6367,     -0.7617],
        [     0.0053,     -0.9336,     -0.7422,     -0.7227,     -1.0781,     -0.7617,     -0.9688,     -0.6523,     -0.8359,     -0.7656,     -0.9922,     -0.4531,      0.0005,     -0.6641,     -0.5938],
        [     0.0393,     -1.4531,     -1.7812,     -0.9336,     -0.9258,     -1.7891,     -1.2109,     -1.6562,     -0.6758,     -1.2891,     -1.2500,     -1.1953,     -1.0234,     -0.5859,     -0.9727],
        [     0.0349,     -1.5156,     -0.9961,     -1.1484,     -1.6953,     -1.2656,     -1.5625,     -0.7930,     -1.0234,     -1.0938,     -1.4531,     -1.0234,     -0.4004,     -0.8633,     -0.9844],
        [     0.0143,     -1.4219,     -1.3984,     -1.0312,     -0.9688,     -1.2344,     -0.6328,     -1.4922,     -1.1328,     -0.9570,     -0.8242,     -0.8008,     -0.8125,     -0.8359,     -0.7461],
        [    -0.0371,     -0.4062,     -0.4629,     -0.1406,     -0.5078,     -0.3184,     -0.5703,      0.0378,     -0.1572,     -0.2617,     -0.2656,      0.0104,      0.5469,      0.0942,      0.0311],
        [    -0.0028,     -0.8086,     -1.0859,     -0.3867,     -0.5898,     -0.6914,     -0.8203,     -0.2041,     -0.0510,     -0.4258,     -0.8320,     -0.2148,      0.0100,     -0.1006,     -0.5977],
        [    -0.0420,     -0.0051,     -0.3301,      0.2969,      0.2041,      0.3223,     -0.0693,      0.0151,      0.5195,      0.1729,     -0.0996,     -0.0718,      0.3027,      0.5586,      0.2314],
        [    -0.0098,     -1.0234,     -1.5469,     -0.9102,     -1.5781,     -1.2422,     -1.4375,     -0.7539,     -1.2109,     -1.1094,     -1.3984,     -0.7305,     -0.5469,     -1.0859,     -0.6602],
        [     0.1060,     -2.4062,     -2.0781,     -2.5469,     -2.1875,     -2.2344,     -2.1562,     -2.5312,     -2.5156,     -2.0000,     -2.3750,     -2.3594,     -2.2031,     -2.2031,     -2.1875],
        [    -0.0222,     -0.7031,     -1.0859,     -0.7852,     -0.8633,     -0.7344,     -1.0000,     -0.1689,     -0.2656,     -0.3965,     -0.4297,     -0.0271,      0.3672,     -0.4785,     -0.1758],
        [    -0.0374,     -0.4629,     -1.0781,     -0.0674,     -0.2793,     -0.4473,     -0.3867,     -0.4902,     -0.3164,     -0.7266,     -0.5391,     -0.4766,     -0.0598,      0.0302,     -0.6953]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6757],
        [0.5676],
        [0.3638],
        [0.3707],
        [0.3300],
        [0.2463],
        [0.2570],
        [0.2271],
        [0.1496],
        [0.1612],
        [0.1477],
        [0.3327],
        [0.1070],
        [0.0835]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0104,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9102,     0.0874,     0.0029,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0344,     0.9648,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.1157,     0.0190,     0.0771,     0.7891,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0023,     0.0001,     0.0041,     0.9922,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1279,     0.0035,     0.0288,     0.4336,     0.1992,     0.2061,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0073,     0.0033,     0.0737,     0.1289,     0.0074,     0.1377,     0.6406,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0006,     0.0007,     0.0001,     0.0150,     0.0374,     0.0044,     0.9375,     0.0026,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0056,     0.0001,     0.0012,     0.2422,     0.0277,     0.0212,     0.1367,     0.5430,     0.0211,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0015,     0.0002,     0.0002,     0.0007,     0.0002,     0.0015,     0.3574,     0.0021,     0.6328,     0.0014,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.0016,     0.0044,     0.0052,     0.0564,     0.0012,     0.0564,     0.3574,     0.1240,     0.0295,     0.3613,     0.0012,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0003,     0.0002,     0.0200,     0.0016,     0.0000,     0.0045,     0.0227,     0.0019,     0.0364,     0.0079,     0.8867,     0.0179,     0.0000,     0.0000],
        [    0.0000,     0.0001,     0.0001,     0.0000,     0.0005,     0.0008,     0.0002,     0.0420,     0.0001,     0.0013,     0.0008,     0.0275,     0.9180,     0.0085,     0.0000],
        [    0.0000,     0.0001,     0.0001,     0.0001,     0.0006,     0.0000,     0.0022,     0.0796,     0.0013,     0.0017,     0.0020,     0.0017,     0.8555,     0.0515,     0.0033]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0019,     -0.7891,     -0.6836,     -0.8594,     -0.9492,     -1.0000,     -1.0000,     -1.0156,     -1.0625,     -0.9648,     -1.1406,     -0.9844,     -1.0312,     -1.1328,     -1.0469],
        [     0.0250,     -4.5312,     -1.9141,     -5.5000,     -6.3750,     -5.9375,     -3.9688,     -1.9688,     -6.4062,     -2.7344,     -6.4062,     -2.5469,     -0.4883,     -3.9531,     -1.4531],
        [     0.0094,     -2.3281,     -5.7500,      1.6172,      3.3594,     -0.5820,      3.4688,      4.5938,      4.1250,      4.6250,      5.7500,      3.3750,      5.2812,      6.6875,      5.5625],
        [     0.0110,     14.8750,     18.1250,     10.6875,      9.1875,     13.0625,     10.1875,     15.5000,      7.6562,     17.0000,     10.6250,     18.2500,     17.3750,     11.6875,     17.1250],
        [    -0.0566,      6.6250,      4.8438,      6.2188,      8.5625,      8.9375,     12.2500,     16.8750,     13.5000,     16.7500,     14.2500,     14.8125,     18.0000,     17.2500,     16.8750],
        [    -0.0283,      8.1250,      5.3750,      8.6875,     14.1875,      6.6562,     13.5625,     16.3750,     15.8125,     17.6250,     15.3125,     15.5625,     17.8750,     19.6250,     16.2500],
        [    -0.0114,     13.4375,      9.8125,     11.9375,     14.6250,     13.8750,     13.8750,     18.3750,     15.3750,     18.6250,     16.3750,     20.8750,     20.8750,     20.3750,     21.0000],
        [    -0.0010,     10.5000,      9.6875,     12.8125,     13.3750,     10.5625,     13.4375,     15.0000,     13.8125,     16.3750,     14.6250,     18.7500,     16.7500,     18.2500,     19.1250],
        [    -0.0491,      6.5312,      6.7188,      4.3438,      9.8125,     10.6875,      8.5625,     13.9375,      8.0000,     10.5000,     10.5625,     14.1250,     16.8750,     12.5625,     14.3750],
        [    -0.0091,      5.2188,      0.6602,      3.6875,      9.0000,      6.8125,      6.5312,      8.3750,      9.8125,      6.5312,      9.1250,      8.5000,     11.3750,     13.3125,     11.6250],
        [    -0.0277,     14.1875,     11.9375,     12.1250,     13.4375,     12.2500,     14.1875,     19.7500,     14.5625,     20.2500,     14.1875,     18.6250,     23.1250,     19.5000,     20.5000],
        [     0.0111,      2.4375,      3.4219,      3.6094,      5.9688,      2.0938,      5.9688,      7.8438,      6.7812,      5.3438,      7.8438,      2.0938,     10.2500,      9.8750,      8.1250],
        [     0.0231,      7.1875,      6.9375,     11.3750,      8.8125,      5.0938,      9.8750,     11.5000,      9.0000,     11.9375,     10.4375,     15.1250,     11.2500,     12.8750,     15.3750],
        [    -0.0405,      4.0000,      4.3750,      1.6953,      6.2500,      6.6562,      5.3438,     10.5625,      4.6562,      7.0625,      6.6250,     10.1875,     13.6875,      9.0000,     10.9375],
        [    -0.0077,      1.5703,      1.7656,      2.3438,      3.9688,      1.3438,      5.3125,      8.8750,      4.7812,      5.0625,      5.2188,      5.0625,     11.2500,      8.4375,      5.7188]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7249],
        [0.5328],
        [0.2056],
        [0.3516],
        [0.1631],
        [0.1021],
        [0.3007],
        [0.1839],
        [0.1464],
        [0.0829],
        [0.0795],
        [0.2175],
        [0.1250],
        [0.1586]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0106,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9062,     0.0554,     0.0400,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9727,     0.0181,     0.0036,     0.0042,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9336,     0.0085,     0.0552,     0.0002,     0.0018,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8945,     0.0221,     0.0601,     0.0013,     0.0037,     0.0166,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5000,     0.1025,     0.0066,     0.0067,     0.3145,     0.0056,     0.0645,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3477,     0.0444,     0.0014,     0.0093,     0.4297,     0.0027,     0.1289,     0.0361,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8164,     0.0118,     0.0018,     0.0001,     0.0452,     0.0006,     0.0027,     0.0044,     0.1157,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5352,     0.0203,     0.0040,     0.0017,     0.0297,     0.0064,     0.0261,     0.0688,     0.2617,     0.0459,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3145,     0.0559,     0.0028,     0.0012,     0.0124,     0.0002,     0.0011,     0.0021,     0.4668,     0.1387,     0.0036,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0957,     0.0282,     0.0075,     0.0061,     0.0669,     0.0028,     0.0260,     0.0125,     0.6641,     0.0549,     0.0031,     0.0310,     0.0000,     0.0000,     0.0000],
        [    0.0113,     0.0004,     0.0000,     0.0001,     0.0120,     0.0000,     0.0027,     0.0006,     0.9609,     0.0068,     0.0003,     0.0013,     0.0020,     0.0000,     0.0000],
        [    0.3594,     0.0075,     0.0004,     0.0001,     0.0513,     0.0002,     0.0023,     0.0015,     0.1904,     0.2793,     0.0006,     0.0186,     0.0027,     0.0864,     0.0000],
        [    0.0364,     0.0101,     0.0003,     0.0009,     0.0693,     0.0002,     0.0095,     0.0013,     0.6016,     0.0293,     0.0007,     0.0114,     0.0026,     0.2217,     0.0053]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0004,     -0.0518,     -0.0708,     -0.0889,     -0.0422,     -0.1108,     -0.0771,     -0.0598,     -0.0046,     -0.0187,     -0.1094,     -0.0304,     -0.0454,     -0.0231,     -0.0615],
        [    -0.0036,     -4.5312,     -3.3906,     -4.9688,     -0.5352,     -2.9688,     -0.5742,     -1.2188,     -2.7500,     -3.5312,     -4.6562,     -3.2969,     -4.2188,     -3.9062,     -4.0625],
        [     0.0157,     -2.7812,     -3.1094,     -3.0625,     -1.6094,     -3.3906,     -0.8125,     -1.0703,     -2.1562,     -3.7500,     -3.6250,     -3.1250,     -3.2656,     -3.7188,     -3.4062],
        [     0.0153,     -3.9688,     -5.5938,     -5.4062,      0.4434,     -4.7812,     -0.1982,     -2.0156,      1.9375,     -1.7266,     -5.1562,     -2.3750,     -2.6094,     -0.1079,     -3.7500],
        [     0.0069,     -4.6875,     -2.8281,     -8.6250,     -6.2500,     -6.4688,    -10.5000,     -6.0312,     -7.5938,     -2.6562,     -9.3125,     -4.0938,     -6.0312,     -8.5625,     -6.1562],
        [    -0.0134,     -3.7188,     -2.7188,     -6.5938,     -5.5000,     -4.0000,     -5.5625,     -2.7812,     -5.4062,     -3.1094,     -6.4375,     -4.5000,     -4.5938,     -6.5312,     -4.7188],
        [     0.0349,     -1.5469,     -4.2812,     -4.2812,     -0.4316,     -4.4375,     -2.0156,     -2.7188,      3.1719,     -1.6016,     -5.2188,     -1.8516,     -2.5156,      1.2344,     -2.7344],
        [     0.0121,     -2.0469,     -5.5000,     -3.6094,      0.2207,     -4.8438,     -0.9766,     -2.2500,      6.2500,     -0.4727,     -4.0312,     -1.4453,     -0.8828,      5.0938,     -0.3125],
        [     0.0132,     -4.2188,     -6.1250,     -8.8125,     -2.8906,     -7.2500,     -5.6875,     -5.2188,     -1.9453,     -0.5977,     -7.0938,     -3.2344,     -5.4688,     -3.3125,     -5.1875],
        [     0.0166,     -3.2656,     -4.8750,     -5.7188,     -2.8750,     -4.4062,     -3.0000,     -2.0312,     -0.6992,     -2.4375,     -3.0000,     -3.0469,     -2.8438,     -1.8516,     -3.1719],
        [     0.0496,     -1.6797,     -4.6875,     -5.5000,     -3.1875,     -7.3438,     -5.5938,     -4.9688,      0.4434,     -0.7695,     -4.4375,     -0.6367,     -2.4375,     -0.1104,     -2.4688],
        [     0.0124,     -1.2109,     -2.5469,     -2.7344,     -0.3438,     -3.5312,     -1.2891,     -2.0312,      1.9531,     -0.5469,     -3.4062,     -1.1172,     -0.6875,      0.5273,     -1.5703],
        [     0.0081,     -3.3125,     -6.9062,     -5.1250,      0.0718,     -6.1875,     -1.4453,     -2.8906,      4.4375,     -0.4941,     -3.4688,     -2.1250,     -1.7031,      4.0312,     -0.9062],
        [     0.0110,     -3.8594,     -6.8125,     -8.2500,     -1.9375,     -7.5312,     -5.0312,     -5.4375,     -0.6250,     -0.2373,     -6.4062,     -2.9531,     -4.8750,     -1.4141,     -4.1250],
        [     0.0479,     -1.2266,     -4.8438,     -3.7031,      0.6953,     -5.2500,     -1.2891,     -3.3125,      2.8594,     -0.1680,     -3.8438,     -1.1094,     -2.6094,      1.8516,     -1.8750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4762],
        [0.2996],
        [0.3126],
        [0.2473],
        [0.2579],
        [0.1714],
        [0.1519],
        [0.1645],
        [0.1642],
        [0.1210],
        [0.1487],
        [0.0915],
        [0.1179],
        [0.1046]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0043,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0014,     0.0024,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9102,     0.0107,     0.0259,     0.0552,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9727,     0.0093,     0.0076,     0.0029,     0.0056,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0002,     0.0003,     0.0006,     0.0004,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9648,     0.0005,     0.0011,     0.0006,     0.0001,     0.0019,     0.0315,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9688,     0.0004,     0.0012,     0.0002,     0.0000,     0.0009,     0.0034,     0.0236,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8750,     0.0021,     0.0045,     0.0022,     0.0021,     0.0049,     0.0138,     0.0505,     0.0461,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7383,     0.0019,     0.0053,     0.0010,     0.0006,     0.0016,     0.0030,     0.0178,     0.0183,     0.2109,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6367,     0.0030,     0.0071,     0.0018,     0.0022,     0.0021,     0.0068,     0.0273,     0.0427,     0.2266,     0.0422,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4375,     0.0015,     0.0015,     0.0016,     0.0008,     0.0065,     0.0025,     0.0884,     0.2061,     0.2051,     0.0308,     0.0181,     0.0000,     0.0000,     0.0000],
        [    0.6758,     0.0003,     0.0005,     0.0006,     0.0003,     0.0007,     0.0087,     0.0615,     0.0332,     0.1445,     0.0221,     0.0044,     0.0479,     0.0000,     0.0000],
        [    0.3379,     0.0025,     0.0042,     0.0044,     0.0058,     0.0070,     0.0192,     0.1318,     0.0630,     0.1650,     0.0623,     0.0237,     0.0938,     0.0781,     0.0000],
        [    0.2969,     0.0012,     0.0016,     0.0038,     0.0032,     0.0046,     0.0201,     0.3066,     0.0356,     0.1387,     0.0403,     0.0211,     0.0688,     0.0388,     0.0192]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0023,     -0.1021,     -0.0947,     -0.1494,     -0.1475,     -0.1260,     -0.1260,     -0.1094,     -0.0801,     -0.0322,     -0.0898,     -0.1172,     -0.0571,     -0.0579,     -0.1006],
        [    -0.0101,     -5.4375,     -5.5000,     -5.0000,     -5.7812,     -3.9688,     -3.0000,     -2.2656,     -2.6875,     -1.2578,     -3.2656,     -3.7500,     -2.4219,     -2.8750,     -3.6875],
        [     0.0101,     -6.5938,     -6.0312,     -5.4062,     -5.8438,     -5.1250,     -3.3125,     -1.8984,     -2.9531,     -1.3203,     -3.6406,     -4.3438,     -3.0156,     -3.4062,     -4.2812],
        [     0.0033,     -4.4375,     -3.5625,     -2.7969,     -4.3125,     -2.3594,     -1.2500,     -1.2344,     -1.8984,     -1.2734,     -2.3438,     -2.3125,     -1.1484,     -1.7109,     -2.5938],
        [     0.0437,     -4.5938,     -4.8125,     -5.7812,     -5.0938,     -3.9844,     -3.7344,     -4.6562,     -3.6719,     -2.3438,     -3.8594,     -4.1250,     -3.0312,     -2.5000,     -4.3125],
        [     0.0645,     -8.5000,     -8.1250,     -7.3438,     -7.7188,     -7.9688,     -3.4375,     -3.9688,     -4.6562,     -2.5156,     -5.1250,     -5.7812,     -4.5938,     -4.2188,     -6.0625],
        [     0.0791,     -7.4062,     -6.6562,     -7.3750,     -9.1250,     -6.1250,     -3.3438,     -4.1875,     -3.5312,     -2.4062,     -4.3750,     -6.3750,     -2.4531,     -2.2344,     -5.0625],
        [     0.0889,     -7.7188,     -6.5938,     -8.3125,    -10.2500,     -6.9375,     -5.5625,     -3.6250,     -2.8281,     -1.3984,     -4.0938,     -6.6562,     -1.9844,     -2.2656,     -5.5938],
        [     0.0386,     -6.0000,     -5.2188,     -5.9375,     -6.0000,     -5.1250,     -4.0938,     -2.8125,     -2.9062,     -1.1484,     -3.2969,     -4.1250,     -2.5000,     -2.6250,     -4.3438],
        [     0.0752,     -5.9062,     -4.8750,     -6.5312,     -6.9688,     -6.0625,     -5.4375,     -3.6562,     -3.6250,     -1.1797,     -4.0625,     -5.8125,     -2.7812,     -3.4375,     -5.2188],
        [     0.0840,     -5.2812,     -4.4062,     -5.7812,     -5.5938,     -5.6562,     -4.4688,     -3.0625,     -2.6250,     -0.9492,     -2.6250,     -5.0625,     -2.1875,     -2.2344,     -4.5938],
        [     0.0122,     -5.6875,     -5.6250,     -5.5938,     -6.2812,     -4.1875,     -5.1250,     -1.5859,     -0.7383,     -0.7422,     -2.6406,     -3.1719,     -1.0859,     -1.2266,     -3.3594],
        [     0.0287,     -7.8438,     -7.1562,     -7.0312,     -7.6562,     -6.8438,     -4.3125,     -2.3750,     -2.9844,     -1.5156,     -3.3906,     -5.0000,     -2.6094,     -2.6875,     -5.0000],
        [     0.0070,     -4.9062,     -4.3750,     -4.3438,     -4.0625,     -3.8594,     -2.8750,     -0.9336,     -1.6797,     -0.7109,     -1.6875,     -2.6562,     -1.2734,     -1.4609,     -2.9062],
        [    -0.0078,     -5.5625,     -5.2188,     -4.3750,     -4.5625,     -4.1875,     -2.7031,      0.0272,     -2.1250,     -0.7695,     -2.0000,     -2.6562,     -1.4688,     -2.0312,     -2.7500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8976],
        [0.9079],
        [0.8498],
        [0.8901],
        [0.7630],
        [0.7579],
        [0.6957],
        [0.6814],
        [0.6558],
        [0.6524],
        [0.6305],
        [0.6529],
        [0.6169],
        [0.6142]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0075,     -0.8594,     -1.0547,     -0.8789,     -1.0000,     -1.1016,     -0.8125,     -0.7891,     -0.6211,     -0.7422,     -0.5469,     -0.8008,     -0.6875,     -0.5508,     -0.7070],
        [    -0.7969,    -89.5000,   -110.5000,    -91.0000,   -103.0000,   -115.0000,    -84.5000,    -83.0000,    -65.0000,    -77.5000,    -57.0000,    -83.5000,    -71.5000,    -57.0000,    -73.0000],
        [    -1.0625,   -118.5000,   -146.0000,   -120.5000,   -137.0000,   -152.0000,   -112.5000,   -110.5000,    -86.0000,   -103.5000,    -76.0000,   -110.5000,    -94.5000,    -76.0000,    -97.0000],
        [    -0.8008,    -90.0000,   -111.0000,    -92.0000,   -104.5000,   -115.5000,    -85.0000,    -82.5000,    -65.0000,    -78.5000,    -56.7500,    -84.0000,    -71.0000,    -56.7500,    -73.0000],
        [    -0.8789,    -96.0000,   -120.0000,    -99.0000,   -115.0000,   -125.5000,    -92.0000,    -87.5000,    -69.5000,    -84.0000,    -61.0000,    -92.5000,    -76.5000,    -62.0000,    -79.0000],
        [    -1.1094,   -123.0000,   -153.0000,   -125.5000,   -142.0000,   -160.0000,   -117.5000,   -114.0000,    -88.0000,   -107.5000,    -77.0000,   -116.0000,    -98.5000,    -77.5000,   -100.5000],
        [    -0.7188,    -82.5000,   -101.5000,    -83.5000,    -94.0000,   -106.5000,    -78.0000,    -75.5000,    -58.5000,    -71.5000,    -50.7500,    -77.0000,    -65.0000,    -51.2500,    -66.0000],
        [    -0.6797,    -77.5000,    -95.5000,    -78.0000,    -88.5000,    -98.5000,    -72.5000,    -71.0000,    -55.7500,    -66.5000,    -49.0000,    -72.5000,    -61.7500,    -49.5000,    -63.2500],
        [    -0.5977,    -65.0000,    -80.0000,    -66.5000,    -76.0000,    -82.0000,    -60.7500,    -60.2500,    -48.5000,    -57.0000,    -42.2500,    -60.2500,    -52.0000,    -42.7500,    -54.2500],
        [    -0.5312,    -58.0000,    -71.0000,    -58.7500,    -68.0000,    -73.0000,    -54.0000,    -54.0000,    -43.7500,    -51.2500,    -38.0000,    -53.7500,    -46.2500,    -38.7500,    -47.7500],
        [    -0.4414,    -48.7500,    -60.0000,    -49.2500,    -55.7500,    -61.5000,    -45.5000,    -45.7500,    -36.2500,    -42.5000,    -31.6250,    -44.5000,    -40.2500,    -32.7500,    -41.5000],
        [    -0.7891,    -89.0000,   -110.0000,    -90.5000,   -103.0000,   -114.0000,    -84.0000,    -81.5000,    -63.5000,    -77.5000,    -55.2500,    -83.0000,    -70.0000,    -55.5000,    -72.0000],
        [    -0.5781,    -65.0000,    -80.0000,    -65.5000,    -73.0000,    -83.0000,    -60.7500,    -59.7500,    -46.7500,    -56.0000,    -41.2500,    -59.7500,    -52.7500,    -42.2500,    -54.0000],
        [    -0.4316,    -48.0000,    -59.2500,    -48.7500,    -55.2500,    -60.5000,    -44.7500,    -44.7500,    -35.7500,    -42.0000,    -31.5000,    -43.5000,    -39.7500,    -32.5000,    -40.7500],
        [    -0.5742,    -64.5000,    -79.0000,    -65.0000,    -74.0000,    -82.0000,    -61.0000,    -60.2500,    -47.0000,    -56.2500,    -41.7500,    -59.0000,    -52.0000,    -42.0000,    -53.2500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9639],
        [0.9295],
        [0.9334],
        [0.9270],
        [0.9197],
        [0.9013],
        [0.9171],
        [0.9041],
        [0.8697],
        [0.8540],
        [0.9104],
        [0.8927],
        [0.8428],
        [0.8306]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9414,     0.0588,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0005,     0.2695,     0.7305,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1631,     0.2891,     0.4414,     0.1064,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0141,     0.9102,     0.0771,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0152,     0.2891,     0.6367,     0.0461,     0.0001,     0.0132,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0003,     0.2812,     0.5039,     0.0339,     0.0000,     0.1807,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0791,     0.3379,     0.3848,     0.0830,     0.0023,     0.1099,     0.0043,     0.0004,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0109,     0.2637,     0.2363,     0.1494,     0.0070,     0.3066,     0.0082,     0.0156,     0.0030,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0007,     0.0420,     0.2363,     0.2910,     0.0014,     0.3926,     0.0025,     0.0261,     0.0015,     0.0061,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0017,     0.0420,     0.1514,     0.1777,     0.0109,     0.5703,     0.0012,     0.0170,     0.0139,     0.0107,     0.0041,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0513,     0.7734,     0.0776,     0.0000,     0.0854,     0.0000,     0.0000,     0.0001,     0.0011,     0.0000,     0.0114,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1572,     0.5469,     0.0483,     0.0000,     0.2461,     0.0000,     0.0000,     0.0000,     0.0005,     0.0000,     0.0018,     0.0000,     0.0000,     0.0000],
        [    0.0005,     0.1230,     0.3828,     0.1050,     0.0005,     0.3613,     0.0008,     0.0010,     0.0009,     0.0066,     0.0003,     0.0109,     0.0042,     0.0008,     0.0000],
        [    0.0332,     0.1064,     0.1226,     0.1572,     0.0586,     0.1553,     0.0469,     0.0422,     0.0071,     0.0322,     0.0063,     0.0918,     0.0476,     0.0062,     0.0859]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0001,      0.1289,      0.1445,      0.1035,     -0.0342,      0.1338,     -0.0087,     -0.0156,     -0.0123,      0.0598,     -0.0250,      0.0623,      0.0242,     -0.0047,      0.1089],
        [     0.0135,     -2.7500,     -3.6250,     -4.7812,     -3.3906,     -5.7188,     -2.2812,     -6.0312,     -2.5625,     -1.6641,     -3.4219,     -2.1406,     -5.6875,     -1.6797,     -1.3281],
        [     0.0222,      6.2812,      7.2812,      4.5312,     -4.4375,      4.0625,     -0.8164,     -3.8750,     -2.2031,      1.8750,     -3.7500,      3.4062,     -1.8984,     -1.7969,      6.2812],
        [     0.0043,      0.5781,      1.0000,     -0.4238,     -1.6250,     -0.0461,     -1.2500,     -3.5625,     -1.1094,      0.5195,     -2.8281,      0.4941,     -3.2656,     -1.5078,      0.9648],
        [    -0.0076,      9.4375,     13.6250,     11.1250,     -1.7031,     12.2500,     -0.1270,      0.4824,      4.3438,      5.5625,      1.5078,      7.7812,      2.5625,      2.5000,      9.3750],
        [     0.0239,      2.9688,      3.7656,      1.1328,     -5.4375,     -0.1123,     -1.5938,     -5.3125,     -1.5703,      0.2637,     -3.0000,      2.0156,     -4.3750,     -1.1562,      3.7188],
        [     0.0201,      6.8438,      7.4375,      4.7500,     -3.8906,      6.4062,     -2.1562,     -3.7031,      1.8672,      2.8438,     -0.7188,      4.2812,     -2.6719,      1.3203,      4.5312],
        [     0.0157,      1.4688,      1.6016,      0.0664,     -3.5000,      0.3457,     -2.8906,     -5.3125,     -0.1426,      0.3496,     -1.7578,      0.5547,     -4.0000,      0.2217,      1.2500],
        [     0.0150,      3.2031,      3.0938,      2.6406,     -0.4180,      3.3594,     -0.2715,      0.3809,     -1.2812,      1.2812,     -0.8984,      0.4668,      1.5859,     -0.6094,      2.7344],
        [    -0.0104,      4.0625,      5.7812,      6.0000,      0.6914,      6.3125,      1.2422,      3.5938,      0.7188,      2.1406,      0.6602,      3.1875,      4.1562,      0.0232,      4.1562],
        [    -0.0049,      3.2188,      4.5000,      4.6562,      1.8672,      5.8125,     -0.3555,      2.3125,      2.1094,      1.8438,      0.8945,      2.5469,      3.5625,      1.4766,      2.7812],
        [     0.0050,      7.6250,     10.3125,      8.0000,     -2.3594,      8.1250,     -0.7891,     -2.3281,      0.6914,      3.7656,     -1.7266,      6.1250,     -0.6328,     -0.2383,      7.5312],
        [     0.0130,     10.1250,     11.3750,      8.9375,     -2.0156,     10.5625,      0.4004,     -0.5039,     -0.6172,      4.3125,     -1.6016,      5.6875,      1.8438,     -0.4473,      7.9688],
        [     0.0019,      5.4375,      6.5625,      5.2812,     -0.1797,      6.5000,      0.4023,      0.6328,      0.4941,      2.5000,     -0.4297,      3.0000,      2.0469,      0.4023,      4.8750],
        [     0.0032,      1.1719,      1.3125,      1.5625,      0.5742,      1.5547,      0.3516,      0.2490,     -1.5312,     -0.0240,     -1.6562,      1.0234,      0.3652,     -1.6719,      0.9609]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9225],
        [0.8433],
        [0.8467],
        [0.8592],
        [0.8455],
        [0.7589],
        [0.8400],
        [0.7599],
        [0.8161],
        [0.7534],
        [0.8307],
        [0.7580],
        [0.7609],
        [0.7549]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2988,     0.6992,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3164,     0.6836,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.4961,     0.5039,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0070,     0.0143,     0.0000,     0.0000,     0.9805,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0258,     0.0566,     0.0000,     0.0000,     0.8906,     0.0256,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0459,     0.0583,     0.0000,     0.0000,     0.8320,     0.0649,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0269,     0.0366,     0.0000,     0.0000,     0.1895,     0.7461,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0199,     0.0347,     0.0000,     0.0000,     0.9336,     0.0107,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1270,     0.1172,     0.0001,     0.0000,     0.4668,     0.2891,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0193,     0.0408,     0.0000,     0.0000,     0.9141,     0.0261,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1328,     0.1138,     0.0000,     0.0000,     0.6641,     0.0874,     0.0000,     0.0000,     0.0000,     0.0000,     0.0002,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0432,     0.0315,     0.0001,     0.0000,     0.0312,     0.8945,     0.0001,     0.0000,     0.0000,     0.0000,     0.0002,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0297,     0.0554,     0.0001,     0.0000,     0.8945,     0.0208,     0.0001,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.2695,      0.2793,      0.2188,      0.1396,      0.3105,      0.2715,      0.2324,      0.0513,      0.1631,      0.0347,      0.2148,      0.1699,     -0.0084,      0.1689],
        [    -0.0150,     39.5000,     40.2500,     30.7500,     16.7500,     43.7500,     38.0000,     30.7500,      7.4375,     20.1250,      2.4219,     32.0000,     23.1250,      0.7148,     26.3750],
        [    -0.0095,     44.5000,     45.5000,     35.2500,     20.3750,     49.2500,     43.7500,     35.2500,      8.1875,     23.6250,      3.7812,     36.2500,     26.6250,     -0.0413,     29.5000],
        [    -0.0156,     42.7500,     43.7500,     33.7500,     19.7500,     47.5000,     41.2500,     34.0000,      8.8125,     23.0000,      3.9375,     34.7500,     26.0000,      1.2109,     28.2500],
        [    -0.0056,     35.2500,     35.2500,     26.8750,     15.3125,     38.0000,     33.7500,     26.6250,      4.3750,     18.5000,      1.2812,     28.1250,     19.2500,     -2.1094,     22.8750],
        [    -0.0193,     48.7500,     49.5000,     38.0000,     22.3750,     53.7500,     47.0000,     38.0000,      9.3125,     26.1250,      3.9375,     39.5000,     28.7500,      0.3730,     32.0000],
        [     0.0033,     33.2500,     34.0000,     26.6250,     16.5000,     36.7500,     33.2500,     26.2500,      7.5312,     17.8750,      3.3594,     27.1250,     19.8750,      0.9414,     22.1250],
        [     0.0063,     40.5000,     40.7500,     30.7500,     18.5000,     43.2500,     40.7500,     30.8750,      4.7812,     21.3750,      2.4062,     32.5000,     22.6250,     -2.9531,     26.5000],
        [     0.0376,     36.2500,     36.5000,     27.7500,     16.5000,     38.2500,     39.7500,     28.6250,     -0.1001,     19.1250,      0.8789,     28.2500,     19.2500,     -8.8750,     23.2500],
        [    -0.0081,     38.0000,     38.5000,     29.5000,     17.5000,     41.7500,     37.5000,     30.0000,      6.0312,     20.3750,      2.5781,     30.5000,     22.1250,     -1.2734,     24.6250],
        [     0.0175,     29.6250,     29.6250,     22.0000,     14.0000,     31.0000,     30.5000,     22.1250,      1.5156,     15.8125,      1.4609,     23.6250,     15.6875,     -4.5625,     19.5000],
        [     0.0035,     38.0000,     38.7500,     30.0000,     17.5000,     41.7500,     38.2500,     30.1250,      6.3438,     20.2500,      2.9688,     30.5000,     22.3750,     -1.2266,     25.2500],
        [     0.0016,     31.5000,     31.2500,     23.1250,     12.5625,     33.0000,     31.0000,     22.8750,      1.8906,     15.1250,      0.3594,     25.1250,     16.1250,     -3.5000,     20.3750],
        [     0.0396,     20.3750,     20.0000,     14.1875,      7.5000,     20.0000,     23.3750,     14.5625,     -4.1875,      9.1875,     -1.8594,     15.2500,      8.6250,     -9.3750,     12.8750],
        [    -0.0068,     30.5000,     31.1250,     24.5000,     13.1875,     34.0000,     30.1250,     24.6250,      5.5312,     15.6875,      2.0469,     24.5000,     18.0000,     -0.1475,     19.7500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6631],
        [0.6348],
        [0.6667],
        [0.5833],
        [0.5807],
        [0.5013],
        [0.5667],
        [0.5005],
        [0.5833],
        [0.5830],
        [0.5589],
        [0.5193],
        [0.5001],
        [0.4721]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3848,     0.6172,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0459,     0.0474,     0.9062,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0010,     0.0007,     0.0117,     0.9883,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0008,     0.0012,     0.0103,     0.8164,     0.1699,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0003,     0.0007,     0.0074,     0.8750,     0.1177,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0039,     0.0075,     0.0339,     0.6797,     0.2520,     0.0003,     0.0208,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0057,     0.0071,     0.0388,     0.4961,     0.4180,     0.0002,     0.0275,     0.0072,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0028,     0.0054,     0.0315,     0.6328,     0.2832,     0.0001,     0.0118,     0.0062,     0.0269,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0018,     0.0684,     0.1108,     0.1338,     0.1328,     0.3184,     0.0140,     0.0535,     0.0610,     0.0757,     0.0300,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0008,     0.9336,     0.0598,     0.0000,     0.0021,     0.0004,     0.0046,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0030,     0.0052,     0.0264,     0.6523,     0.2314,     0.0002,     0.0187,     0.0189,     0.0327,     0.0051,     0.0007,     0.0068,     0.0000,     0.0000],
        [    0.0005,     0.0413,     0.0535,     0.1021,     0.2676,     0.3027,     0.0121,     0.0508,     0.0260,     0.0840,     0.0140,     0.0108,     0.0294,     0.0055,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0004,     0.9453,     0.0459,     0.0000,     0.0021,     0.0004,     0.0037,     0.0002,     0.0000,     0.0003,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0007,     -0.0010,      0.0071,     -0.0347,     -0.1289,     -0.0952,      0.0447,     -0.0928,     -0.0840,     -0.0737,     -0.0737,     -0.0007,     -0.0737,     -0.0835,      0.0747],
        [     0.0220,      9.8125,     10.2500,     12.1875,     16.6250,     14.3750,      6.9688,     11.0625,     10.4375,     12.5625,     10.1250,      7.1250,      9.7500,      7.2812,      3.7656],
        [     0.0342,     10.2500,     10.7500,     13.4375,     19.0000,     16.7500,      5.7500,     13.1250,     12.2500,     14.2500,     11.4375,      7.5312,     11.4375,      8.9375,      3.0312],
        [     0.0332,     10.2500,     10.3125,     13.2500,     18.7500,     16.7500,      5.5000,     13.2500,     11.9375,     14.1250,     11.0000,      7.5000,     11.1250,      8.6875,      2.5000],
        [     0.0334,     11.2500,     10.9375,     13.7500,     18.1250,     17.5000,      6.3750,     13.7500,     11.4375,     14.1875,     10.3750,      7.7500,     11.2500,      7.8438,      3.1875],
        [     0.0256,     10.8750,     11.1875,     13.3750,     17.7500,     16.2500,      7.0312,     12.3750,     11.4375,     13.6875,     10.5000,      7.7812,     10.6875,      7.8438,      4.1250],
        [     0.0306,      9.3750,     10.1250,     12.5000,     17.2500,     15.2500,      5.1875,     12.1875,     11.8125,     12.8125,     11.5625,      6.9688,     11.1250,      9.0625,      3.0781],
        [     0.0200,      6.1562,      6.8125,      8.3125,     11.3125,     10.3125,      3.5312,      7.8125,      8.1250,      8.5625,      7.1562,      5.0000,      6.7188,      5.6562,      2.6719],
        [     0.0244,      7.5000,      7.7188,      9.4375,     12.0000,     11.8125,      4.2188,      9.0625,      7.7500,      9.5625,      6.7812,      5.3125,      7.5938,      5.2188,      2.8750],
        [     0.0217,      8.2500,      8.8750,     10.6250,     13.6250,     12.8125,      5.2500,      9.6250,      9.0000,     10.5000,      8.1875,      5.8438,      8.5000,      6.1562,      3.3750],
        [     0.0066,      3.6719,      4.1562,      4.3438,      4.3125,      5.1875,      2.0781,      3.4219,      3.5469,      3.7656,      2.8438,      2.9062,      3.2812,      2.2344,      3.1406],
        [     0.0398,     10.3125,     10.0000,     13.5000,     20.6250,     17.8750,      4.9375,     14.5000,     12.9375,     15.3125,     12.4375,      7.1562,     12.3125,      9.8750,      0.9414],
        [     0.0239,      6.4688,      7.0000,      8.6250,     11.8750,     10.8125,      3.6094,      8.3125,      8.3125,      8.8750,      7.0000,      5.0000,      7.2812,      5.7812,      2.5938],
        [     0.0128,      4.5000,      4.7500,      5.4062,      6.3750,      6.5000,      3.2656,      4.7188,      4.0312,      5.2188,      3.4219,      3.1562,      4.1562,      2.4844,      2.3438],
        [     0.0471,      9.6250,      9.2500,     13.0000,     20.7500,     17.7500,      3.9219,     14.6250,     12.9375,     15.2500,     12.3125,      6.5938,     12.6250,     10.2500,      0.1050]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2502],
        [0.2502],
        [0.2507],
        [0.2501],
        [0.2501],
        [0.2500],
        [0.2500],
        [0.2503],
        [0.2502],
        [0.2521],
        [0.2500],
        [0.2502],
        [0.2532],
        [0.2500]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9883,     0.0130,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9844,     0.0128,     0.0031,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9688,     0.0228,     0.0065,     0.0032,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9648,     0.0171,     0.0045,     0.0023,     0.0099,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.7812,     0.0227,     0.0064,     0.0025,     0.0115,     0.1758,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.7695,     0.0179,     0.0049,     0.0022,     0.0096,     0.1885,     0.0065,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.7461,     0.0231,     0.0068,     0.0030,     0.0124,     0.1875,     0.0081,     0.0123,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.7578,     0.0175,     0.0048,     0.0021,     0.0092,     0.1875,     0.0064,     0.0095,     0.0044,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.6914,     0.0327,     0.0111,     0.0047,     0.0171,     0.2061,     0.0120,     0.0137,     0.0089,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.7656,     0.0128,     0.0033,     0.0015,     0.0069,     0.1943,     0.0052,     0.0075,     0.0034,     0.0000,     0.0003,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.7500,     0.0154,     0.0042,     0.0019,     0.0082,     0.1982,     0.0063,     0.0088,     0.0042,     0.0001,     0.0004,     0.0001,     0.0000,     0.0000],
        [    0.0000,     0.6367,     0.0520,     0.0204,     0.0087,     0.0280,     0.1982,     0.0175,     0.0201,     0.0143,     0.0004,     0.0033,     0.0008,     0.0005,     0.0000],
        [    0.0000,     0.7695,     0.0113,     0.0028,     0.0013,     0.0060,     0.1963,     0.0047,     0.0067,     0.0030,     0.0000,     0.0002,     0.0000,     0.0001,     0.0001]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0001,     -0.0835,     -0.0649,     -0.0537,     -0.0361,     -0.0522,     -0.0625,     -0.0435,     -0.0378,     -0.0417,     -0.0090,     -0.0270,     -0.0171,      0.0029,     -0.0211],
        [     0.0398,     20.7500,     16.8750,     15.5625,     14.7500,     16.2500,     19.1250,     15.8125,     16.3750,     15.4375,     10.8750,     13.1875,     11.2500,     11.6875,     11.8125],
        [     0.0383,     19.3750,     15.0625,     13.6250,     12.9375,     14.5000,     17.8750,     14.1875,     14.8125,     13.7500,      9.2500,     11.1875,      9.2500,     10.2500,      9.6875],
        [     0.0369,     19.0000,     14.6250,     13.1875,     12.5000,     14.0625,     17.5000,     13.8125,     14.4375,     13.3750,      8.9375,     10.7500,      8.9375,      9.9375,      9.3125],
        [     0.0320,     18.2500,     14.5000,     13.2500,     12.5625,     13.9375,     17.0000,     13.6250,     14.1250,     13.2500,      9.1250,     11.0625,      9.3125,      9.8750,      9.8125],
        [     0.0359,     18.8750,     14.8750,     13.5625,     12.8750,     14.3750,     17.6250,     14.0625,     14.6250,     13.6250,      9.3125,     11.2500,      9.4375,     10.2500,      9.8750],
        [     0.0352,     20.3750,     16.8750,     15.5625,     14.6250,     16.1250,     18.8750,     15.6875,     16.1250,     15.3125,     10.7500,     13.2500,     11.3125,     11.3125,     12.0000],
        [     0.0334,     19.3750,     15.6250,     14.3750,     13.5000,     15.0000,     18.0000,     14.6250,     15.0625,     14.2500,      9.8125,     12.0625,     10.1875,     10.5000,     10.7500],
        [     0.0312,     18.8750,     15.4375,     14.1875,     13.3750,     14.8125,     17.5000,     14.3750,     14.8125,     14.0625,      9.7500,     11.9375,     10.1875,     10.3750,     10.7500],
        [     0.0308,     18.7500,     15.0000,     13.6875,     12.8750,     14.3125,     17.3750,     13.9375,     14.3750,     13.6250,      9.2500,     11.3750,      9.5625,      9.8750,     10.1250],
        [     0.0184,     16.1250,     13.1250,     12.0625,     11.1875,     12.4375,     14.9375,     12.1250,     12.2500,     11.8125,      8.0000,     10.0000,      8.5000,      8.3125,      9.0625],
        [     0.0305,     18.2500,     14.1875,     12.8125,     12.0000,     13.5625,     16.8750,     13.2500,     13.6250,     12.8125,      8.5000,     10.4375,      8.6250,      9.1875,      9.1250],
        [     0.0272,     17.7500,     13.8750,     12.5625,     11.7500,     13.2500,     16.3750,     12.9375,     13.3125,     12.5625,      8.3125,     10.2500,      8.5000,      9.0000,      9.0000],
        [     0.0172,     16.3750,     13.8125,     12.8750,     12.0625,     13.2500,     15.1875,     12.7500,     12.8750,     12.5625,      8.8750,     11.0625,      9.6250,      9.1250,     10.1875],
        [     0.0298,     18.2500,     14.0000,     12.6250,     11.8125,     13.3750,     16.8750,     13.1250,     13.5000,     12.6875,      8.3125,     10.1875,      8.3750,      9.0000,      8.8750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3334],
        [0.3333],
        [0.3333],
        [0.3305],
        [0.3333]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.4297,     0.5703,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2852,     0.3789,     0.3359,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2432,     0.3203,     0.2871,     0.1504,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1963,     0.2598,     0.2305,     0.1172,     0.1953,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1729,     0.2285,     0.2041,     0.1060,     0.1729,     0.1162,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1543,     0.2051,     0.1826,     0.0947,     0.1543,     0.1040,     0.1050,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1416,     0.1875,     0.1680,     0.0884,     0.1426,     0.0967,     0.0977,     0.0781,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1299,     0.1719,     0.1533,     0.0796,     0.1299,     0.0874,     0.0884,     0.0703,     0.0903,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1230,     0.1621,     0.1465,     0.0801,     0.1250,     0.0869,     0.0879,     0.0708,     0.0898,     0.0281,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1182,     0.1562,     0.1387,     0.0723,     0.1177,     0.0791,     0.0801,     0.0635,     0.0815,     0.0233,     0.0693,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1108,     0.1465,     0.1309,     0.0688,     0.1113,     0.0752,     0.0762,     0.0605,     0.0776,     0.0226,     0.0664,     0.0530,     0.0000,     0.0000],
        [    0.0000,     0.1050,     0.1377,     0.1250,     0.0698,     0.1069,     0.0757,     0.0762,     0.0618,     0.0781,     0.0250,     0.0684,     0.0552,     0.0154,     0.0000],
        [    0.0000,     0.1035,     0.1377,     0.1221,     0.0630,     0.1035,     0.0693,     0.0698,     0.0554,     0.0713,     0.0201,     0.0605,     0.0483,     0.0117,     0.0635]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0645,      0.0654,      0.0649,      0.0635,      0.0645,      0.0640,      0.0640,      0.0630,      0.0640,      0.0613,      0.0635,      0.0635,      0.0593,      0.0640],
        [    -0.0461,     20.5000,     20.7500,     20.6250,     19.8750,     20.5000,     20.0000,     20.0000,     19.7500,     20.1250,     18.7500,     19.8750,     19.6250,     18.2500,     19.8750],
        [    -0.0464,     20.7500,     21.0000,     20.8750,     20.2500,     20.7500,     20.2500,     20.2500,     20.1250,     20.3750,     19.0000,     20.1250,     19.8750,     18.5000,     20.2500],
        [    -0.0459,     20.7500,     21.0000,     20.8750,     20.2500,     20.7500,     20.2500,     20.3750,     20.1250,     20.3750,     19.0000,     20.1250,     20.0000,     18.5000,     20.2500],
        [    -0.0435,     20.3750,     20.6250,     20.5000,     19.8750,     20.3750,     20.0000,     20.0000,     19.7500,     20.0000,     18.7500,     19.8750,     19.6250,     18.2500,     19.8750],
        [    -0.0454,     20.6250,     20.8750,     20.7500,     20.1250,     20.6250,     20.1250,     20.1250,     20.0000,     20.2500,     18.8750,     20.0000,     19.7500,     18.3750,     20.1250],
        [    -0.0439,     20.3750,     20.6250,     20.5000,     19.8750,     20.3750,     20.0000,     20.0000,     19.7500,     20.0000,     18.7500,     19.8750,     19.6250,     18.2500,     19.8750],
        [    -0.0439,     20.3750,     20.6250,     20.5000,     19.8750,     20.3750,     20.0000,     20.0000,     19.7500,     20.0000,     18.7500,     19.8750,     19.6250,     18.2500,     19.8750],
        [    -0.0430,     20.2500,     20.5000,     20.3750,     19.7500,     20.2500,     19.8750,     19.8750,     19.6250,     19.8750,     18.6250,     19.7500,     19.5000,     18.1250,     19.7500],
        [    -0.0435,     20.3750,     20.7500,     20.6250,     20.0000,     20.3750,     20.0000,     20.0000,     19.8750,     20.1250,     18.8750,     19.8750,     19.6250,     18.2500,     20.0000],
        [    -0.0405,     20.0000,     20.2500,     20.1250,     19.5000,     20.0000,     19.6250,     19.6250,     19.3750,     19.6250,     18.5000,     19.5000,     19.3750,     18.0000,     19.6250],
        [    -0.0442,     20.5000,     20.7500,     20.6250,     20.0000,     20.5000,     20.1250,     20.1250,     19.8750,     20.1250,     18.8750,     20.0000,     19.7500,     18.3750,     20.0000],
        [    -0.0435,     20.3750,     20.6250,     20.5000,     19.8750,     20.3750,     20.0000,     20.0000,     19.7500,     20.0000,     18.7500,     19.8750,     19.6250,     18.2500,     19.8750],
        [    -0.0396,     19.7500,     20.0000,     19.8750,     19.2500,     19.7500,     19.3750,     19.3750,     19.1250,     19.3750,     18.2500,     19.2500,     19.1250,     17.7500,     19.3750],
        [    -0.0444,     20.6250,     20.8750,     20.7500,     20.1250,     20.6250,     20.2500,     20.2500,     20.0000,     20.2500,     19.0000,     20.1250,     19.8750,     18.3750,     20.1250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.1667],
        [0.1667],
        [0.1667],
        [0.1667],
        [0.1667],
        [0.1667],
        [0.1667],
        [0.1667],
        [0.1667],
        [0.1657],
        [0.1667],
        [0.1667],
        [0.1637],
        [0.1667]], device='cuda:0')
tensor([[1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0005,     -0.4121,     -0.4141,     -0.4121,     -0.4102,     -0.4121,     -0.4102,     -0.4102,     -0.4102,     -0.4102,     -0.4082,     -0.4102,     -0.4102,     -0.4082,     -0.4102],
        [     0.1875,   -127.0000,   -127.5000,   -127.0000,   -126.5000,   -127.0000,   -126.5000,   -126.5000,   -126.5000,   -126.5000,   -125.5000,   -126.5000,   -126.5000,   -125.5000,   -126.5000],
        [     0.1875,   -127.0000,   -127.5000,   -127.0000,   -126.5000,   -127.0000,   -126.5000,   -126.5000,   -126.5000,   -126.5000,   -125.5000,   -126.5000,   -126.5000,   -125.5000,   -126.5000],
        [     0.1875,   -127.0000,   -127.5000,   -127.0000,   -126.5000,   -127.0000,   -126.5000,   -126.5000,   -126.5000,   -126.5000,   -125.5000,   -126.5000,   -126.5000,   -125.5000,   -126.5000],
        [     0.1865,   -127.0000,   -127.5000,   -127.0000,   -126.5000,   -127.0000,   -126.5000,   -126.5000,   -126.5000,   -126.5000,   -125.5000,   -126.5000,   -126.5000,   -125.5000,   -126.5000],
        [     0.1875,   -127.5000,   -127.5000,   -127.5000,   -126.5000,   -127.0000,   -126.5000,   -126.5000,   -126.5000,   -126.5000,   -125.5000,   -126.5000,   -126.5000,   -125.5000,   -126.5000],
        [     0.1865,   -127.0000,   -127.5000,   -127.0000,   -126.5000,   -127.0000,   -126.5000,   -126.5000,   -126.5000,   -126.5000,   -125.5000,   -126.5000,   -126.5000,   -125.5000,   -126.5000],
        [     0.1865,   -127.0000,   -127.5000,   -127.0000,   -126.5000,   -127.0000,   -126.5000,   -126.5000,   -126.5000,   -126.5000,   -125.5000,   -126.5000,   -126.5000,   -125.5000,   -126.5000],
        [     0.1865,   -127.0000,   -127.0000,   -127.0000,   -126.5000,   -127.0000,   -126.5000,   -126.5000,   -126.0000,   -126.5000,   -125.5000,   -126.5000,   -126.0000,   -125.5000,   -126.5000],
        [     0.1865,   -127.0000,   -127.5000,   -127.0000,   -126.5000,   -127.0000,   -126.5000,   -126.5000,   -126.5000,   -126.5000,   -125.5000,   -126.5000,   -126.5000,   -125.5000,   -126.5000],
        [     0.1865,   -127.0000,   -127.0000,   -127.0000,   -126.5000,   -127.0000,   -126.5000,   -126.5000,   -126.0000,   -126.5000,   -125.5000,   -126.5000,   -126.0000,   -125.5000,   -126.5000],
        [     0.1865,   -127.5000,   -127.5000,   -127.5000,   -126.5000,   -127.0000,   -126.5000,   -126.5000,   -126.5000,   -126.5000,   -125.5000,   -126.5000,   -126.5000,   -125.5000,   -126.5000],
        [     0.1865,   -127.5000,   -127.5000,   -127.5000,   -126.5000,   -127.0000,   -126.5000,   -126.5000,   -126.5000,   -126.5000,   -125.5000,   -126.5000,   -126.5000,   -125.5000,   -126.5000],
        [     0.1865,   -127.0000,   -127.5000,   -127.0000,   -126.5000,   -127.0000,   -126.5000,   -126.5000,   -126.5000,   -126.5000,   -125.5000,   -126.5000,   -126.5000,   -125.5000,   -126.5000],
        [     0.1875,   -127.5000,   -127.5000,   -127.5000,   -127.0000,   -127.5000,   -127.0000,   -127.0000,   -126.5000,   -127.0000,   -126.0000,   -127.0000,   -126.5000,   -126.0000,   -127.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000],
        [0.5000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.4922,     0.5078,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3262,     0.3359,     0.3359,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2412,     0.2480,     0.2480,     0.2617,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1914,     0.1973,     0.1973,     0.2090,     0.2051,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1602,     0.1641,     0.1641,     0.1738,     0.1709,     0.1660,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1367,     0.1406,     0.1406,     0.1484,     0.1465,     0.1416,     0.1455,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1191,     0.1226,     0.1226,     0.1299,     0.1279,     0.1240,     0.1270,     0.1270,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1050,     0.1079,     0.1084,     0.1143,     0.1128,     0.1094,     0.1123,     0.1118,     0.1172,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0938,     0.0962,     0.0967,     0.1021,     0.1006,     0.0977,     0.1001,     0.1001,     0.1045,     0.1084,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0845,     0.0869,     0.0869,     0.0918,     0.0903,     0.0879,     0.0903,     0.0898,     0.0942,     0.0977,     0.0996,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0767,     0.0791,     0.0791,     0.0835,     0.0820,     0.0801,     0.0820,     0.0815,     0.0854,     0.0884,     0.0903,     0.0913,     0.0000,     0.0000],
        [    0.0000,     0.0703,     0.0728,     0.0728,     0.0767,     0.0757,     0.0732,     0.0752,     0.0752,     0.0786,     0.0815,     0.0830,     0.0840,     0.0806,     0.0000],
        [    0.0000,     0.0649,     0.0669,     0.0669,     0.0708,     0.0698,     0.0679,     0.0693,     0.0693,     0.0728,     0.0752,     0.0767,     0.0776,     0.0742,     0.0786]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0003,      0.1494,      0.1494,      0.1494,      0.1504,      0.1504,      0.1494,      0.1504,      0.1504,      0.1504,      0.1504,      0.1504,      0.1504,      0.1504,      0.1504],
        [    -0.1465,     49.5000,     49.5000,     49.5000,     49.7500,     49.5000,     49.5000,     49.5000,     49.5000,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500],
        [    -0.1465,     49.5000,     49.5000,     49.5000,     49.5000,     49.5000,     49.5000,     49.5000,     49.5000,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500],
        [    -0.1465,     49.5000,     49.5000,     49.5000,     49.5000,     49.5000,     49.5000,     49.5000,     49.5000,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500],
        [    -0.1465,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500],
        [    -0.1465,     49.5000,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500],
        [    -0.1465,     49.5000,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500],
        [    -0.1465,     49.5000,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500],
        [    -0.1465,     49.5000,     49.5000,     49.5000,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500],
        [    -0.1465,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500],
        [    -0.1465,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     50.0000,     49.7500,     50.0000],
        [    -0.1465,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     50.0000,     50.0000,     50.0000,     50.0000,     50.0000],
        [    -0.1465,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     50.0000,     50.0000,     50.0000,     49.7500,     50.0000],
        [    -0.1465,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     50.0000],
        [    -0.1465,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     49.7500,     50.0000,     50.0000,     50.0000,     50.0000,     50.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.3223,:0.3242,:0.3203,:0.3164,:0.3262,:0.3242,:0.3242,:0.3223)
,
------
		(,:0.3242,:0.3203,:0.3164,:0.3262,:0.3242,:0.3242,:0.3223,:0.3281)
,,,,,,,,,,,,,,,
@ 1550 train 5.0100 , allloss: 5.0100, dt: 1171.93ms, fracRes: 0.3404, norm(attn): 1.6328, norm(output): 1.1328, norm(x): 1.3192, norm(y): 0.9876, norm:0.9588, tok/sec: 111843.17, flops:117.41, batch-reuse:1
@ 1551 train 4.9229 , allloss: 4.9229, dt: 710.76ms, fracRes: 0.3389, norm(attn): 1.6562, norm(output): 1.1484, norm(x): 1.3534, norm(y): 0.9875, norm:0.9535, tok/sec: 184412.20, flops:193.60, batch-reuse:1
@ 1552 train 4.8026 , allloss: 4.8026, dt: 702.33ms, fracRes: 0.3373, norm(attn): 1.6484, norm(output): 1.1406, norm(x): 1.3438, norm(y): 0.9876, norm:1.0299, tok/sec: 186624.93, flops:195.92, batch-reuse:1
@ 1553 train 4.9193 , allloss: 4.9193, dt: 700.20ms, fracRes: 0.3304, norm(attn): 1.7188, norm(output): 1.1406, norm(x): 1.3311, norm(y): 0.9876, norm:1.4542, tok/sec: 187192.72, flops:196.52, batch-reuse:1
@ 1554 train 4.8810 , allloss: 4.8810, dt: 694.56ms, fracRes: 0.3306, norm(attn): 1.6719, norm(output): 1.1328, norm(x): 1.3262, norm(y): 0.9876, norm:0.8274, tok/sec: 188710.97, flops:198.11, batch-reuse:1
@ 1555 train 4.9565 , allloss: 4.9565, dt: 705.12ms, fracRes: 0.3241, norm(attn): 1.6562, norm(output): 1.1328, norm(x): 1.3220, norm(y): 0.9875, norm:1.4219, tok/sec: 185884.81, flops:195.14, batch-reuse:1
@ 1556 train 5.0390 , allloss: 5.0390, dt: 699.16ms, fracRes: 0.3285, norm(attn): 1.6328, norm(output): 1.1172, norm(x): 1.3070, norm(y): 0.9875, norm:1.0145, tok/sec: 187471.36, flops:196.81, batch-reuse:1
@ 1557 train 4.9280 , allloss: 4.9280, dt: 698.29ms, fracRes: 0.3303, norm(attn): 1.6328, norm(output): 1.1172, norm(x): 1.3014, norm(y): 0.9876, norm:0.7934, tok/sec: 187703.19, flops:197.05, batch-reuse:1
@ 1558 train 4.8356 , allloss: 4.8356, dt: 698.93ms, fracRes: 0.3332, norm(attn): 1.6562, norm(output): 1.1250, norm(x): 1.3077, norm(y): 0.9876, norm:0.8963, tok/sec: 187532.62, flops:196.87, batch-reuse:1
@ 1559 train 4.8740 , allloss: 4.8740, dt: 693.23ms, fracRes: 0.3367, norm(attn): 1.6562, norm(output): 1.1250, norm(x): 1.3079, norm(y): 0.9876, norm:0.7251, tok/sec: 189074.29, flops:198.49, batch-reuse:1
@ 1560 train 4.9208 , allloss: 4.9208, dt: 698.06ms, fracRes: 0.3334, norm(attn): 1.6562, norm(output): 1.1094, norm(x): 1.2953, norm(y): 0.9877, norm:0.8073, tok/sec: 187765.83, flops:197.12, batch-reuse:1
@ 1561 train 4.8669 , allloss: 4.8669, dt: 697.26ms, fracRes: 0.3299, norm(attn): 1.6484, norm(output): 1.0938, norm(x): 1.2839, norm(y): 0.9876, norm:0.8384, tok/sec: 187982.20, flops:197.34, batch-reuse:1
@ 1562 train 4.8013 , allloss: 4.8013, dt: 698.26ms, fracRes: 0.3333, norm(attn): 1.6406, norm(output): 1.0859, norm(x): 1.2774, norm(y): 0.9876, norm:0.9135, tok/sec: 187712.04, flops:197.06, batch-reuse:1
@ 1563 train 4.7991 , allloss: 4.7991, dt: 697.12ms, fracRes: 0.3345, norm(attn): 1.6328, norm(output): 1.0703, norm(x): 1.2701, norm(y): 0.9877, norm:0.7753, tok/sec: 188019.94, flops:197.38, batch-reuse:1
@ 1564 train 4.8110 , allloss: 4.8110, dt: 697.80ms, fracRes: 0.3333, norm(attn): 1.6328, norm(output): 1.0859, norm(x): 1.2724, norm(y): 0.9876, norm:0.7372, tok/sec: 187834.99, flops:197.19, batch-reuse:1
@ 1565 train 4.8355 , allloss: 4.8355, dt: 707.03ms, fracRes: 0.3321, norm(attn): 1.6250, norm(output): 1.0625, norm(x): 1.2554, norm(y): 0.9876, norm:0.8389, tok/sec: 185384.98, flops:194.62, batch-reuse:1
@ 1566 train 4.8289 , allloss: 4.8289, dt: 705.68ms, fracRes: 0.3328, norm(attn): 1.6250, norm(output): 1.0703, norm(x): 1.2520, norm(y): 0.9877, norm:0.6810, tok/sec: 185737.92, flops:194.99, batch-reuse:1
@ 1567 train 4.8000 , allloss: 4.8000, dt: 709.47ms, fracRes: 0.3333, norm(attn): 1.6250, norm(output): 1.0547, norm(x): 1.2408, norm(y): 0.9876, norm:0.7648, tok/sec: 184747.65, flops:193.95, batch-reuse:1
@ 1568 train 4.7644 , allloss: 4.7644, dt: 702.86ms, fracRes: 0.3346, norm(attn): 1.6172, norm(output): 1.0469, norm(x): 1.2357, norm(y): 0.9876, norm:0.6357, tok/sec: 186483.19, flops:195.77, batch-reuse:1
@ 1569 train 4.6854 , allloss: 4.6854, dt: 704.98ms, fracRes: 0.3343, norm(attn): 1.6172, norm(output): 1.0156, norm(x): 1.2210, norm(y): 0.9876, norm:0.8253, tok/sec: 185923.85, flops:195.18, batch-reuse:1
@ 1570 train 4.7797 , allloss: 4.7797, dt: 702.39ms, fracRes: 0.3337, norm(attn): 1.6094, norm(output): 1.0156, norm(x): 1.2144, norm(y): 0.9876, norm:0.6592, tok/sec: 186609.16, flops:195.90, batch-reuse:1
@ 1571 train 4.7872 , allloss: 4.7872, dt: 682.83ms, fracRes: 0.3351, norm(attn): 1.6016, norm(output): 1.0234, norm(x): 1.2169, norm(y): 0.9876, norm:0.6411, tok/sec: 191955.25, flops:201.51, batch-reuse:1
@ 1572 train 4.7503 , allloss: 4.7503, dt: 696.97ms, fracRes: 0.3360, norm(attn): 1.5938, norm(output): 1.0234, norm(x): 1.2173, norm(y): 0.9877, norm:0.7228, tok/sec: 188059.68, flops:197.43, batch-reuse:1
@ 1573 train 4.7905 , allloss: 4.7905, dt: 695.00ms, fracRes: 0.3355, norm(attn): 1.5859, norm(output): 1.0234, norm(x): 1.2188, norm(y): 0.9876, norm:0.8840, tok/sec: 188592.31, flops:197.98, batch-reuse:1
@ 1574 train 4.7401 , allloss: 4.7401, dt: 697.41ms, fracRes: 0.3366, norm(attn): 1.5469, norm(output): 1.0312, norm(x): 1.2205, norm(y): 0.9877, norm:0.7209, tok/sec: 187941.65, flops:197.30, batch-reuse:1
@ 1575 train 4.7452 , allloss: 4.7452, dt: 691.80ms, fracRes: 0.3361, norm(attn): 1.5312, norm(output): 1.0156, norm(x): 1.2109, norm(y): 0.9877, norm:0.6541, tok/sec: 189466.18, flops:198.90, batch-reuse:1
@ 1576 train 4.7649 , allloss: 4.7649, dt: 695.19ms, fracRes: 0.3377, norm(attn): 1.5234, norm(output): 1.0078, norm(x): 1.2044, norm(y): 0.9877, norm:0.7075, tok/sec: 188541.34, flops:197.93, batch-reuse:1
@ 1577 train 4.6972 , allloss: 4.6972, dt: 682.30ms, fracRes: 0.3384, norm(attn): 1.5234, norm(output): 0.9961, norm(x): 1.1904, norm(y): 0.9877, norm:0.6937, tok/sec: 192102.55, flops:201.67, batch-reuse:1
@ 1578 train 4.6940 , allloss: 4.6940, dt: 694.92ms, fracRes: 0.3373, norm(attn): 1.5234, norm(output): 1.0000, norm(x): 1.1940, norm(y): 0.9877, norm:0.8059, tok/sec: 188614.69, flops:198.01, batch-reuse:1
@ 1579 train 4.6364 , allloss: 4.6364, dt: 684.09ms, fracRes: 0.3363, norm(attn): 1.5156, norm(output): 0.9922, norm(x): 1.1866, norm(y): 0.9877, norm:0.7191, tok/sec: 191600.28, flops:201.14, batch-reuse:1
@ 1580 train 4.6675 , allloss: 4.6675, dt: 693.63ms, fracRes: 0.3375, norm(attn): 1.5078, norm(output): 1.0000, norm(x): 1.1872, norm(y): 0.9877, norm:0.7068, tok/sec: 188964.39, flops:198.38, batch-reuse:1
@ 1581 train 4.5560 , allloss: 4.5560, dt: 708.93ms, fracRes: 0.3378, norm(attn): 1.5000, norm(output): 0.9922, norm(x): 1.1878, norm(y): 0.9876, norm:0.6232, tok/sec: 184885.90, flops:194.09, batch-reuse:1
@ 1582 train 4.6700 , allloss: 4.6700, dt: 704.71ms, fracRes: 0.3391, norm(attn): 1.5000, norm(output): 0.9922, norm(x): 1.1815, norm(y): 0.9876, norm:0.7311, tok/sec: 185994.36, flops:195.26, batch-reuse:1
@ 1583 train 4.6135 , allloss: 4.6135, dt: 693.96ms, fracRes: 0.3393, norm(attn): 1.5000, norm(output): 0.9844, norm(x): 1.1799, norm(y): 0.9877, norm:0.6621, tok/sec: 188874.93, flops:198.28, batch-reuse:1
@ 1584 train 4.6875 , allloss: 4.6875, dt: 701.66ms, fracRes: 0.3402, norm(attn): 1.5000, norm(output): 0.9844, norm(x): 1.1823, norm(y): 0.9876, norm:0.6868, tok/sec: 186802.49, flops:196.11, batch-reuse:1
@ 1585 train 4.6745 , allloss: 4.6745, dt: 705.66ms, fracRes: 0.3401, norm(attn): 1.5000, norm(output): 1.0000, norm(x): 1.1944, norm(y): 0.9876, norm:0.7455, tok/sec: 185743.25, flops:194.99, batch-reuse:1
@ 1586 train 4.6621 , allloss: 4.6621, dt: 697.71ms, fracRes: 0.3404, norm(attn): 1.4922, norm(output): 0.9805, norm(x): 1.1792, norm(y): 0.9876, norm:0.7411, tok/sec: 187861.56, flops:197.22, batch-reuse:1
@ 1587 train 4.7003 , allloss: 4.7003, dt: 690.35ms, fracRes: 0.3403, norm(attn): 1.4922, norm(output): 0.9922, norm(x): 1.1920, norm(y): 0.9875, norm:0.8269, tok/sec: 189864.28, flops:199.32, batch-reuse:1
@ 1588 train 4.7002 , allloss: 4.7002, dt: 693.09ms, fracRes: 0.3409, norm(attn): 1.4766, norm(output): 0.9844, norm(x): 1.1805, norm(y): 0.9876, norm:0.6713, tok/sec: 189113.25, flops:198.53, batch-reuse:1
@ 1589 train 4.6094 , allloss: 4.6094, dt: 673.82ms, fracRes: 0.3409, norm(attn): 1.4531, norm(output): 0.9609, norm(x): 1.1641, norm(y): 0.9876, norm:0.7970, tok/sec: 194521.89, flops:204.21, batch-reuse:1
@ 1590 train 4.7302 , allloss: 4.7302, dt: 681.27ms, fracRes: 0.3411, norm(attn): 1.4531, norm(output): 0.9727, norm(x): 1.1668, norm(y): 0.9876, norm:0.8338, tok/sec: 192394.93, flops:201.98, batch-reuse:1
@ 1591 train 4.5705 , allloss: 4.5705, dt: 698.46ms, fracRes: 0.3423, norm(attn): 1.4453, norm(output): 0.9648, norm(x): 1.1693, norm(y): 0.9876, norm:0.9734, tok/sec: 187659.88, flops:197.01, batch-reuse:1
@ 1592 train 4.7042 , allloss: 4.7042, dt: 697.38ms, fracRes: 0.3407, norm(attn): 1.4375, norm(output): 0.9688, norm(x): 1.1712, norm(y): 0.9876, norm:1.1402, tok/sec: 187949.81, flops:197.31, batch-reuse:1
@ 1593 train 4.6653 , allloss: 4.6653, dt: 685.98ms, fracRes: 0.3410, norm(attn): 1.4531, norm(output): 0.9805, norm(x): 1.1771, norm(y): 0.9876, norm:0.7177, tok/sec: 191072.27, flops:200.59, batch-reuse:1
@ 1594 train 4.5497 , allloss: 4.5497, dt: 696.80ms, fracRes: 0.3417, norm(attn): 1.4531, norm(output): 0.9844, norm(x): 1.1778, norm(y): 0.9876, norm:0.7390, tok/sec: 188106.27, flops:197.47, batch-reuse:1
@ 1595 train 4.7157 , allloss: 4.7157, dt: 692.53ms, fracRes: 0.3416, norm(attn): 1.4375, norm(output): 0.9766, norm(x): 1.1754, norm(y): 0.9876, norm:0.9487, tok/sec: 189265.60, flops:198.69, batch-reuse:1
@ 1596 train 4.6143 , allloss: 4.6143, dt: 687.96ms, fracRes: 0.3409, norm(attn): 1.4219, norm(output): 0.9609, norm(x): 1.1627, norm(y): 0.9875, norm:0.7168, tok/sec: 190523.65, flops:200.01, batch-reuse:1
@ 1597 train 4.6568 , allloss: 4.6568, dt: 684.83ms, fracRes: 0.3415, norm(attn): 1.4141, norm(output): 0.9688, norm(x): 1.1775, norm(y): 0.9875, norm:0.8479, tok/sec: 191393.63, flops:200.93, batch-reuse:1
@ 1598 train 4.6057 , allloss: 4.6057, dt: 698.81ms, fracRes: 0.3403, norm(attn): 1.3984, norm(output): 0.9648, norm(x): 1.1667, norm(y): 0.9874, norm:0.9897, tok/sec: 187565.19, flops:196.91, batch-reuse:1
@ 1599 train 4.7129 , allloss: 4.7129, dt: 697.70ms, fracRes: 0.3411, norm(attn): 1.3828, norm(output): 0.9570, norm(x): 1.1602, norm(y): 0.9874, norm:0.7868, tok/sec: 187863.49, flops:197.22, batch-reuse:1
@ 1600 train 4.6094 , allloss: 4.6094, dt: 692.46ms, fracRes: 0.3407, norm(attn): 1.3750, norm(output): 0.9414, norm(x): 1.1564, norm(y): 0.9874, norm:0.8704, tok/sec: 189283.65, flops:198.71, batch-reuse:1
@ 1601 train 4.7552 , allloss: 4.7552, dt: 698.86ms, fracRes: 0.3422, norm(attn): 1.3750, norm(output): 0.9531, norm(x): 1.1603, norm(y): 0.9874, norm:1.0548, tok/sec: 187551.81, flops:196.89, batch-reuse:1
@ 1602 train 4.6030 , allloss: 4.6030, dt: 702.71ms, fracRes: 0.3434, norm(attn): 1.3828, norm(output): 0.9414, norm(x): 1.1492, norm(y): 0.9875, norm:0.8001, tok/sec: 186524.38, flops:195.81, batch-reuse:1
@ 1603 train 4.5884 , allloss: 4.5884, dt: 700.73ms, fracRes: 0.3426, norm(attn): 1.3750, norm(output): 0.9414, norm(x): 1.1440, norm(y): 0.9875, norm:0.8746, tok/sec: 187051.96, flops:196.37, batch-reuse:1
@ 1604 train 4.5922 , allloss: 4.5922, dt: 702.79ms, fracRes: 0.3417, norm(attn): 1.3750, norm(output): 0.9453, norm(x): 1.1486, norm(y): 0.9875, norm:0.7718, tok/sec: 186502.62, flops:195.79, batch-reuse:1
@ 1605 train 4.6653 , allloss: 4.6653, dt: 690.92ms, fracRes: 0.3425, norm(attn): 1.3828, norm(output): 0.9570, norm(x): 1.1616, norm(y): 0.9874, norm:0.7782, tok/sec: 189705.73, flops:199.15, batch-reuse:1
@ 1606 train 4.6527 , allloss: 4.6527, dt: 700.44ms, fracRes: 0.3417, norm(attn): 1.3828, norm(output): 0.9492, norm(x): 1.1556, norm(y): 0.9874, norm:0.7791, tok/sec: 187127.47, flops:196.45, batch-reuse:1
@ 1607 train 4.6272 , allloss: 4.6272, dt: 696.09ms, fracRes: 0.3417, norm(attn): 1.3750, norm(output): 0.9492, norm(x): 1.1527, norm(y): 0.9874, norm:0.7811, tok/sec: 188298.20, flops:197.68, batch-reuse:1
@ 1608 train 4.6599 , allloss: 4.6599, dt: 705.09ms, fracRes: 0.3411, norm(attn): 1.3672, norm(output): 0.9414, norm(x): 1.1486, norm(y): 0.9874, norm:0.7010, tok/sec: 185894.87, flops:195.15, batch-reuse:1
@ 1609 train 4.6065 , allloss: 4.6065, dt: 700.62ms, fracRes: 0.3424, norm(attn): 1.3672, norm(output): 0.9414, norm(x): 1.1523, norm(y): 0.9874, norm:0.8548, tok/sec: 187078.70, flops:196.40, batch-reuse:1
@ 1610 train 4.5825 , allloss: 4.5825, dt: 705.66ms, fracRes: 0.3429, norm(attn): 1.3594, norm(output): 0.9336, norm(x): 1.1400, norm(y): 0.9875, norm:1.1176, tok/sec: 185744.88, flops:195.00, batch-reuse:1
@ 1611 train 4.5691 , allloss: 4.5691, dt: 693.54ms, fracRes: 0.3404, norm(attn): 1.3516, norm(output): 0.9414, norm(x): 1.1484, norm(y): 0.9874, norm:0.7970, tok/sec: 188989.86, flops:198.40, batch-reuse:1
@ 1612 train 4.6120 , allloss: 4.6120, dt: 691.85ms, fracRes: 0.3413, norm(attn): 1.3359, norm(output): 0.9414, norm(x): 1.1444, norm(y): 0.9875, norm:0.8265, tok/sec: 189450.18, flops:198.89, batch-reuse:1
@ 1613 train 4.6316 , allloss: 4.6316, dt: 701.06ms, fracRes: 0.3415, norm(attn): 1.3281, norm(output): 0.9258, norm(x): 1.1278, norm(y): 0.9875, norm:0.7851, tok/sec: 186962.78, flops:196.27, batch-reuse:1
@ 1614 train 4.6989 , allloss: 4.6989, dt: 699.38ms, fracRes: 0.3414, norm(attn): 1.3203, norm(output): 0.9297, norm(x): 1.1297, norm(y): 0.9875, norm:0.7349, tok/sec: 187411.79, flops:196.75, batch-reuse:1
@ 1615 train 4.5721 , allloss: 4.5721, dt: 715.14ms, fracRes: 0.3415, norm(attn): 1.2891, norm(output): 0.9258, norm(x): 1.1272, norm(y): 0.9874, norm:0.6955, tok/sec: 183281.87, flops:192.41, batch-reuse:1
@ 1616 train 4.6630 , allloss: 4.6630, dt: 699.66ms, fracRes: 0.3415, norm(attn): 1.2891, norm(output): 0.9375, norm(x): 1.1398, norm(y): 0.9874, norm:0.7167, tok/sec: 187337.77, flops:196.67, batch-reuse:1
@ 1617 train 4.6024 , allloss: 4.6024, dt: 692.95ms, fracRes: 0.3417, norm(attn): 1.2891, norm(output): 0.9219, norm(x): 1.1294, norm(y): 0.9874, norm:0.8656, tok/sec: 189149.82, flops:198.57, batch-reuse:1
@ 1618 train 4.6610 , allloss: 4.6610, dt: 696.03ms, fracRes: 0.3418, norm(attn): 1.2969, norm(output): 0.9180, norm(x): 1.1220, norm(y): 0.9875, norm:0.9472, tok/sec: 188315.04, flops:197.69, batch-reuse:1
@ 1619 train 4.5203 , allloss: 4.5203, dt: 695.71ms, fracRes: 0.3413, norm(attn): 1.2969, norm(output): 0.9219, norm(x): 1.1301, norm(y): 0.9874, norm:0.7500, tok/sec: 188399.52, flops:197.78, batch-reuse:1
@ 1620 train 4.5129 , allloss: 4.5129, dt: 695.91ms, fracRes: 0.3415, norm(attn): 1.2656, norm(output): 0.9102, norm(x): 1.1277, norm(y): 0.9874, norm:0.7336, tok/sec: 188345.30, flops:197.73, batch-reuse:1
@ 1621 train 4.6311 , allloss: 4.6311, dt: 689.13ms, fracRes: 0.3419, norm(attn): 1.2500, norm(output): 0.9219, norm(x): 1.1339, norm(y): 0.9874, norm:1.0457, tok/sec: 190198.95, flops:199.67, batch-reuse:1
@ 1622 train 4.6359 , allloss: 4.6359, dt: 689.99ms, fracRes: 0.3421, norm(attn): 1.2500, norm(output): 0.9141, norm(x): 1.1263, norm(y): 0.9874, norm:1.0280, tok/sec: 189962.56, flops:199.42, batch-reuse:1
@ 1623 train 4.5347 , allloss: 4.5347, dt: 696.74ms, fracRes: 0.3410, norm(attn): 1.2500, norm(output): 0.8906, norm(x): 1.1177, norm(y): 0.9875, norm:0.9153, tok/sec: 188120.88, flops:197.49, batch-reuse:1
@ 1624 train 4.4836 , allloss: 4.4836, dt: 697.66ms, fracRes: 0.3407, norm(attn): 1.2500, norm(output): 0.8906, norm(x): 1.1098, norm(y): 0.9875, norm:0.6981, tok/sec: 187873.69, flops:197.23, batch-reuse:1
@ 1625 train 4.5225 , allloss: 4.5225, dt: 702.04ms, fracRes: 0.3389, norm(attn): 1.2578, norm(output): 0.9062, norm(x): 1.1199, norm(y): 0.9874, norm:0.7902, tok/sec: 186702.13, flops:196.00, batch-reuse:1
@ 1626 train 4.5578 , allloss: 4.5578, dt: 693.57ms, fracRes: 0.3398, norm(attn): 1.2812, norm(output): 0.8906, norm(x): 1.1092, norm(y): 0.9875, norm:0.7783, tok/sec: 188980.37, flops:198.39, batch-reuse:1
@ 1627 train 4.4837 , allloss: 4.4837, dt: 699.60ms, fracRes: 0.3372, norm(attn): 1.2656, norm(output): 0.8906, norm(x): 1.1058, norm(y): 0.9874, norm:0.8769, tok/sec: 187352.97, flops:196.68, batch-reuse:1
@ 1628 train 4.4935 , allloss: 4.4935, dt: 720.93ms, fracRes: 0.3401, norm(attn): 1.2969, norm(output): 0.8906, norm(x): 1.1129, norm(y): 0.9874, norm:0.8577, tok/sec: 181810.12, flops:190.86, batch-reuse:1
@ 1629 train 4.4837 , allloss: 4.4837, dt: 692.54ms, fracRes: 0.3417, norm(attn): 1.3281, norm(output): 0.9141, norm(x): 1.1270, norm(y): 0.9873, norm:0.8684, tok/sec: 189261.43, flops:198.69, batch-reuse:1
@ 1630 train 4.5261 , allloss: 4.5261, dt: 698.76ms, fracRes: 0.3415, norm(attn): 1.3359, norm(output): 0.9102, norm(x): 1.1204, norm(y): 0.9873, norm:0.8164, tok/sec: 187579.33, flops:196.92, batch-reuse:1
@ 1631 train 4.4301 , allloss: 4.4301, dt: 693.17ms, fracRes: 0.3425, norm(attn): 1.3516, norm(output): 0.9102, norm(x): 1.1227, norm(y): 0.9873, norm:0.7215, tok/sec: 189089.70, flops:198.51, batch-reuse:1
@ 1632 train 4.5655 , allloss: 4.5655, dt: 689.03ms, fracRes: 0.3433, norm(attn): 1.3672, norm(output): 0.9141, norm(x): 1.1277, norm(y): 0.9873, norm:0.8543, tok/sec: 190227.58, flops:199.70, batch-reuse:1
@ 1633 train 4.5437 , allloss: 4.5437, dt: 691.51ms, fracRes: 0.3433, norm(attn): 1.3750, norm(output): 0.9258, norm(x): 1.1273, norm(y): 0.9873, norm:0.7561, tok/sec: 189545.35, flops:198.99, batch-reuse:1
@ 1634 train 4.5430 , allloss: 4.5430, dt: 687.01ms, fracRes: 0.3432, norm(attn): 1.3750, norm(output): 0.9297, norm(x): 1.1361, norm(y): 0.9872, norm:0.7517, tok/sec: 190786.15, flops:200.29, batch-reuse:1
@ 1635 train 4.4376 , allloss: 4.4376, dt: 685.05ms, fracRes: 0.3437, norm(attn): 1.3672, norm(output): 0.9336, norm(x): 1.1368, norm(y): 0.9872, norm:0.6168, tok/sec: 191330.88, flops:200.86, batch-reuse:1
@ 1636 train 4.4578 , allloss: 4.4578, dt: 703.01ms, fracRes: 0.3441, norm(attn): 1.3516, norm(output): 0.9141, norm(x): 1.1206, norm(y): 0.9872, norm:0.8089, tok/sec: 186443.67, flops:195.73, batch-reuse:1
@ 1637 train 4.5466 , allloss: 4.5466, dt: 693.84ms, fracRes: 0.3434, norm(attn): 1.3359, norm(output): 0.9062, norm(x): 1.1232, norm(y): 0.9872, norm:0.9670, tok/sec: 188908.55, flops:198.32, batch-reuse:1
@ 1638 train 4.5379 , allloss: 4.5379, dt: 697.74ms, fracRes: 0.3428, norm(attn): 1.3359, norm(output): 0.9336, norm(x): 1.1382, norm(y): 0.9871, norm:1.1269, tok/sec: 187853.34, flops:197.21, batch-reuse:1
@ 1639 train 4.4974 , allloss: 4.4974, dt: 701.45ms, fracRes: 0.3438, norm(attn): 1.3359, norm(output): 0.9141, norm(x): 1.1291, norm(y): 0.9872, norm:0.8308, tok/sec: 186857.41, flops:196.16, batch-reuse:1
@ 1640 train 4.5357 , allloss: 4.5357, dt: 695.73ms, fracRes: 0.3441, norm(attn): 1.3281, norm(output): 0.9102, norm(x): 1.1183, norm(y): 0.9872, norm:1.0189, tok/sec: 188396.22, flops:197.78, batch-reuse:1
@ 1641 train 4.5377 , allloss: 4.5377, dt: 696.56ms, fracRes: 0.3483, norm(attn): 1.3359, norm(output): 0.9297, norm(x): 1.1334, norm(y): 0.9871, norm:1.1181, tok/sec: 188169.69, flops:197.54, batch-reuse:1
@ 1642 train 4.5175 , allloss: 4.5175, dt: 698.92ms, fracRes: 0.3449, norm(attn): 1.3438, norm(output): 0.9219, norm(x): 1.1304, norm(y): 0.9873, norm:1.0062, tok/sec: 187535.18, flops:196.87, batch-reuse:1
@ 1643 train 4.5159 , allloss: 4.5159, dt: 699.55ms, fracRes: 0.3441, norm(attn): 1.3047, norm(output): 0.8945, norm(x): 1.1153, norm(y): 0.9873, norm:0.8173, tok/sec: 187366.51, flops:196.70, batch-reuse:1
@ 1644 train 4.5820 , allloss: 4.5820, dt: 692.44ms, fracRes: 0.3440, norm(attn): 1.2656, norm(output): 0.8906, norm(x): 1.1080, norm(y): 0.9873, norm:0.7328, tok/sec: 189290.62, flops:198.72, batch-reuse:1
@ 1645 train 4.4317 , allloss: 4.4317, dt: 690.64ms, fracRes: 0.3433, norm(attn): 1.2500, norm(output): 0.9023, norm(x): 1.1212, norm(y): 0.9872, norm:0.9010, tok/sec: 189782.02, flops:199.23, batch-reuse:1
@ 1646 train 4.5250 , allloss: 4.5250, dt: 686.17ms, fracRes: 0.3437, norm(attn): 1.2422, norm(output): 0.9023, norm(x): 1.1224, norm(y): 0.9873, norm:0.8698, tok/sec: 191020.22, flops:200.53, batch-reuse:1
@ 1647 train 4.5639 , allloss: 4.5639, dt: 697.36ms, fracRes: 0.3438, norm(attn): 1.2344, norm(output): 0.8906, norm(x): 1.1125, norm(y): 0.9873, norm:0.9963, tok/sec: 187953.79, flops:197.31, batch-reuse:1
@ 1648 train 4.5259 , allloss: 4.5259, dt: 690.20ms, fracRes: 0.3445, norm(attn): 1.2344, norm(output): 0.8984, norm(x): 1.1138, norm(y): 0.9873, norm:1.2054, tok/sec: 189905.73, flops:199.36, batch-reuse:1
@ 1649 train 4.5001 , allloss: 4.5001, dt: 684.92ms, fracRes: 0.3454, norm(attn): 1.2344, norm(output): 0.8945, norm(x): 1.1212, norm(y): 0.9873, norm:0.7884, tok/sec: 191367.18, flops:200.90, batch-reuse:1
@ 1650 train 4.5185 , allloss: 4.5185, dt: 695.28ms, fracRes: 0.3457, norm(attn): 1.2344, norm(output): 0.8945, norm(x): 1.1162, norm(y): 0.9873, norm:0.8121, tok/sec: 188517.09, flops:197.91, batch-reuse:1
@ 1651 train 4.6340 , allloss: 4.6340, dt: 693.72ms, fracRes: 0.3439, norm(attn): 1.2344, norm(output): 0.8984, norm(x): 1.1214, norm(y): 0.9873, norm:1.0100, tok/sec: 188939.91, flops:198.35, batch-reuse:1
@ 1652 train 4.6075 , allloss: 4.6075, dt: 708.83ms, fracRes: 0.3444, norm(attn): 1.2266, norm(output): 0.8945, norm(x): 1.1175, norm(y): 0.9874, norm:1.0311, tok/sec: 184912.89, flops:194.12, batch-reuse:1
@ 1653 train 4.5339 , allloss: 4.5339, dt: 709.89ms, fracRes: 0.3442, norm(attn): 1.2031, norm(output): 0.8867, norm(x): 1.1139, norm(y): 0.9874, norm:0.8136, tok/sec: 184637.89, flops:193.83, batch-reuse:1
@ 1654 train 4.5125 , allloss: 4.5125, dt: 689.92ms, fracRes: 0.3435, norm(attn): 1.1953, norm(output): 0.8828, norm(x): 1.1088, norm(y): 0.9873, norm:1.0097, tok/sec: 189982.31, flops:199.44, batch-reuse:1
@ 1655 train 4.4168 , allloss: 4.4168, dt: 696.43ms, fracRes: 0.3435, norm(attn): 1.2188, norm(output): 0.8828, norm(x): 1.1026, norm(y): 0.9873, norm:0.8345, tok/sec: 188206.54, flops:197.58, batch-reuse:1
@ 1656 train 4.4591 , allloss: 4.4591, dt: 694.01ms, fracRes: 0.3443, norm(attn): 1.2188, norm(output): 0.8711, norm(x): 1.0941, norm(y): 0.9873, norm:0.9218, tok/sec: 188860.59, flops:198.27, batch-reuse:1
@ 1657 train 4.5583 , allloss: 4.5583, dt: 685.53ms, fracRes: 0.3445, norm(attn): 1.2031, norm(output): 0.8711, norm(x): 1.1006, norm(y): 0.9874, norm:0.9447, tok/sec: 191197.87, flops:200.72, batch-reuse:1
@ 1658 train 4.5537 , allloss: 4.5537, dt: 684.70ms, fracRes: 0.3437, norm(attn): 1.1875, norm(output): 0.8789, norm(x): 1.1028, norm(y): 0.9874, norm:0.7573, tok/sec: 191428.75, flops:200.96, batch-reuse:1
@ 1659 train 4.4646 , allloss: 4.4646, dt: 692.17ms, fracRes: 0.3439, norm(attn): 1.1719, norm(output): 0.8711, norm(x): 1.0919, norm(y): 0.9874, norm:0.8514, tok/sec: 189364.69, flops:198.80, batch-reuse:1
@ 1660 train 4.4643 , allloss: 4.4643, dt: 693.20ms, fracRes: 0.3432, norm(attn): 1.1953, norm(output): 0.8828, norm(x): 1.1070, norm(y): 0.9873, norm:1.0158, tok/sec: 189083.72, flops:198.50, batch-reuse:1
@ 1661 train 4.5391 , allloss: 4.5391, dt: 695.38ms, fracRes: 0.3503, norm(attn): 1.1328, norm(output): 0.8867, norm(x): 1.1153, norm(y): 0.9873, norm:1.0954, tok/sec: 188488.46, flops:197.88, batch-reuse:1
@ 1662 train 4.5668 , allloss: 4.5668, dt: 704.95ms, fracRes: 0.3454, norm(attn): 1.1875, norm(output): 0.8750, norm(x): 1.1034, norm(y): 0.9874, norm:0.8577, tok/sec: 185930.58, flops:195.19, batch-reuse:1
@ 1663 train 4.5516 , allloss: 4.5516, dt: 699.06ms, fracRes: 0.3507, norm(attn): 1.1406, norm(output): 0.8828, norm(x): 1.1135, norm(y): 0.9874, norm:0.7044, tok/sec: 187497.51, flops:196.84, batch-reuse:1
@ 1664 train 4.4788 , allloss: 4.4788, dt: 704.64ms, fracRes: 0.3513, norm(attn): 1.1328, norm(output): 0.8789, norm(x): 1.1145, norm(y): 0.9874, norm:0.8487, tok/sec: 186012.11, flops:195.28, batch-reuse:1
@ 1665 train 4.5158 , allloss: 4.5158, dt: 712.75ms, fracRes: 0.3525, norm(attn): 1.1406, norm(output): 0.8828, norm(x): 1.1206, norm(y): 0.9874, norm:0.9004, tok/sec: 183895.63, flops:193.05, batch-reuse:1
@ 1666 train 4.5565 , allloss: 4.5565, dt: 707.21ms, fracRes: 0.3517, norm(attn): 1.1484, norm(output): 0.8828, norm(x): 1.1227, norm(y): 0.9873, norm:0.6979, tok/sec: 185336.04, flops:194.57, batch-reuse:1
@ 1667 train 4.7132 , allloss: 4.7132, dt: 709.95ms, fracRes: 0.3507, norm(attn): 1.1406, norm(output): 0.8828, norm(x): 1.1169, norm(y): 0.9874, norm:0.7471, tok/sec: 184621.21, flops:193.82, batch-reuse:1
@ 1668 train 4.7118 , allloss: 4.7118, dt: 706.93ms, fracRes: 0.3525, norm(attn): 1.1641, norm(output): 0.8945, norm(x): 1.1321, norm(y): 0.9874, norm:1.0814, tok/sec: 185409.80, flops:194.64, batch-reuse:1
@ 1669 train 4.7251 , allloss: 4.7251, dt: 698.13ms, fracRes: 0.3513, norm(attn): 1.1719, norm(output): 0.8867, norm(x): 1.1199, norm(y): 0.9874, norm:1.1046, tok/sec: 187748.51, flops:197.10, batch-reuse:1
@ 1670 train 4.8019 , allloss: 4.8019, dt: 705.86ms, fracRes: 0.3511, norm(attn): 1.1719, norm(output): 0.8867, norm(x): 1.1217, norm(y): 0.9874, norm:0.9440, tok/sec: 185690.68, flops:194.94, batch-reuse:1
@ 1671 train 4.7342 , allloss: 4.7342, dt: 682.94ms, fracRes: 0.3512, norm(attn): 1.1641, norm(output): 0.8867, norm(x): 1.1197, norm(y): 0.9874, norm:0.9147, tok/sec: 191923.29, flops:201.48, batch-reuse:1
@ 1672 train 4.7406 , allloss: 4.7406, dt: 697.00ms, fracRes: 0.3505, norm(attn): 1.1719, norm(output): 0.8906, norm(x): 1.1243, norm(y): 0.9874, norm:1.2547, tok/sec: 188051.96, flops:197.42, batch-reuse:1
@ 1673 train 4.6468 , allloss: 4.6468, dt: 697.32ms, fracRes: 0.3515, norm(attn): 1.1719, norm(output): 0.8906, norm(x): 1.1232, norm(y): 0.9874, norm:0.9188, tok/sec: 187964.46, flops:197.33, batch-reuse:1
@ 1674 train 4.6876 , allloss: 4.6876, dt: 703.37ms, fracRes: 0.3515, norm(attn): 1.1875, norm(output): 0.8984, norm(x): 1.1292, norm(y): 0.9873, norm:0.8560, tok/sec: 186347.73, flops:195.63, batch-reuse:1
@ 1675 train 4.8092 , allloss: 4.8092, dt: 683.76ms, fracRes: 0.3507, norm(attn): 1.1719, norm(output): 0.8828, norm(x): 1.1245, norm(y): 0.9873, norm:1.0112, tok/sec: 191693.61, flops:201.24, batch-reuse:1
@ 1676 train 4.7956 , allloss: 4.7956, dt: 685.37ms, fracRes: 0.3510, norm(attn): 1.1719, norm(output): 0.8828, norm(x): 1.1204, norm(y): 0.9873, norm:0.8468, tok/sec: 191241.63, flops:200.77, batch-reuse:1
@ 1677 train 4.6387 , allloss: 4.6387, dt: 689.54ms, fracRes: 0.3514, norm(attn): 1.1641, norm(output): 0.8906, norm(x): 1.1298, norm(y): 0.9874, norm:0.8040, tok/sec: 190085.84, flops:199.55, batch-reuse:1
@ 1678 train 4.6604 , allloss: 4.6604, dt: 698.87ms, fracRes: 0.3520, norm(attn): 1.1719, norm(output): 0.8906, norm(x): 1.1326, norm(y): 0.9874, norm:1.0279, tok/sec: 187548.29, flops:196.89, batch-reuse:1
@ 1679 train 4.7622 , allloss: 4.7622, dt: 699.16ms, fracRes: 0.3500, norm(attn): 1.1719, norm(output): 0.9062, norm(x): 1.1382, norm(y): 0.9874, norm:0.7594, tok/sec: 187471.10, flops:196.81, batch-reuse:1
@ 1680 train 4.6955 , allloss: 4.6955, dt: 684.40ms, fracRes: 0.3505, norm(attn): 1.1641, norm(output): 0.8867, norm(x): 1.1256, norm(y): 0.9875, norm:0.7313, tok/sec: 191514.05, flops:201.05, batch-reuse:1
@ 1681 train 4.6927 , allloss: 4.6927, dt: 691.65ms, fracRes: 0.3507, norm(attn): 1.1406, norm(output): 0.8828, norm(x): 1.1197, norm(y): 0.9874, norm:0.8195, tok/sec: 189507.26, flops:198.95, batch-reuse:1
@ 1682 train 4.7119 , allloss: 4.7119, dt: 701.86ms, fracRes: 0.3509, norm(attn): 1.1328, norm(output): 0.8828, norm(x): 1.1176, norm(y): 0.9874, norm:0.8286, tok/sec: 186750.46, flops:196.05, batch-reuse:1
@ 1683 train 4.5820 , allloss: 4.5820, dt: 706.53ms, fracRes: 0.3518, norm(attn): 1.1172, norm(output): 0.8789, norm(x): 1.1141, norm(y): 0.9874, norm:0.7076, tok/sec: 185515.54, flops:194.75, batch-reuse:1
@ 1684 train 4.6400 , allloss: 4.6400, dt: 696.55ms, fracRes: 0.3518, norm(attn): 1.1172, norm(output): 0.8672, norm(x): 1.1034, norm(y): 0.9874, norm:0.8654, tok/sec: 188172.85, flops:197.54, batch-reuse:1
@ 1685 train 4.7074 , allloss: 4.7074, dt: 692.30ms, fracRes: 0.3510, norm(attn): 1.1016, norm(output): 0.8594, norm(x): 1.0936, norm(y): 0.9874, norm:0.6478, tok/sec: 189327.78, flops:198.76, batch-reuse:1
@ 1686 train 4.6698 , allloss: 4.6698, dt: 699.10ms, fracRes: 0.3502, norm(attn): 1.1094, norm(output): 0.8750, norm(x): 1.1106, norm(y): 0.9874, norm:0.7510, tok/sec: 187487.72, flops:196.82, batch-reuse:1
@ 1687 train 4.7075 , allloss: 4.7075, dt: 699.59ms, fracRes: 0.3506, norm(attn): 1.1172, norm(output): 0.8789, norm(x): 1.1122, norm(y): 0.9874, norm:0.7232, tok/sec: 187354.69, flops:196.69, batch-reuse:1
@ 1688 train 4.7803 , allloss: 4.7803, dt: 687.29ms, fracRes: 0.3505, norm(attn): 1.1172, norm(output): 0.8711, norm(x): 1.1045, norm(y): 0.9874, norm:0.6935, tok/sec: 190709.31, flops:200.21, batch-reuse:1
@ 1689 train 4.6553 , allloss: 4.6553, dt: 696.80ms, fracRes: 0.3511, norm(attn): 1.1250, norm(output): 0.8828, norm(x): 1.1162, norm(y): 0.9874, norm:0.7868, tok/sec: 188104.40, flops:197.47, batch-reuse:1
@ 1690 train 4.6433 , allloss: 4.6433, dt: 689.33ms, fracRes: 0.3524, norm(attn): 1.1172, norm(output): 0.8789, norm(x): 1.1088, norm(y): 0.9874, norm:0.7207, tok/sec: 190143.50, flops:199.61, batch-reuse:1
@ 1691 train 4.5946 , allloss: 4.5946, dt: 690.46ms, fracRes: 0.3526, norm(attn): 1.1172, norm(output): 0.8711, norm(x): 1.0998, norm(y): 0.9875, norm:0.7052, tok/sec: 189831.63, flops:199.29, batch-reuse:1
@ 1692 train 4.5830 , allloss: 4.5830, dt: 701.07ms, fracRes: 0.3527, norm(attn): 1.1094, norm(output): 0.8633, norm(x): 1.0925, norm(y): 0.9875, norm:0.8509, tok/sec: 186959.66, flops:196.27, batch-reuse:1
@ 1693 train 4.8607 , allloss: 4.8607, dt: 702.40ms, fracRes: 0.3519, norm(attn): 1.0938, norm(output): 0.8672, norm(x): 1.0986, norm(y): 0.9874, norm:1.0057, tok/sec: 186606.82, flops:195.90, batch-reuse:1
@ 1694 train 4.8100 , allloss: 4.8100, dt: 689.51ms, fracRes: 0.3524, norm(attn): 1.1016, norm(output): 0.8750, norm(x): 1.1132, norm(y): 0.9874, norm:1.1772, tok/sec: 190093.14, flops:199.56, batch-reuse:1
@ 1695 train 4.6999 , allloss: 4.6999, dt: 699.03ms, fracRes: 0.3529, norm(attn): 1.0859, norm(output): 0.8672, norm(x): 1.1071, norm(y): 0.9874, norm:0.8824, tok/sec: 187504.41, flops:196.84, batch-reuse:1
@ 1696 train 4.6810 , allloss: 4.6810, dt: 699.62ms, fracRes: 0.3531, norm(attn): 1.0625, norm(output): 0.8672, norm(x): 1.0986, norm(y): 0.9875, norm:0.7566, tok/sec: 187347.86, flops:196.68, batch-reuse:1
@ 1697 train 4.6582 , allloss: 4.6582, dt: 704.16ms, fracRes: 0.3514, norm(attn): 1.0703, norm(output): 0.8633, norm(x): 1.0993, norm(y): 0.9874, norm:0.8638, tok/sec: 186138.64, flops:195.41, batch-reuse:1
@ 1698 train 4.6423 , allloss: 4.6423, dt: 703.32ms, fracRes: 0.3508, norm(attn): 1.0938, norm(output): 0.8672, norm(x): 1.1084, norm(y): 0.9874, norm:0.8568, tok/sec: 186361.88, flops:195.64, batch-reuse:1
@ 1699 train 4.6456 , allloss: 4.6456, dt: 686.97ms, fracRes: 0.3503, norm(attn): 1.0625, norm(output): 0.8750, norm(x): 1.1085, norm(y): 0.9874, norm:0.8749, tok/sec: 190796.48, flops:200.30, batch-reuse:1
@ 1700 train 4.6779 , allloss: 4.6779, dt: 686.69ms, fracRes: 0.3500, norm(attn): 1.0625, norm(output): 0.8672, norm(x): 1.0980, norm(y): 0.9874, norm:0.7540, tok/sec: 190874.91, flops:200.38, batch-reuse:1
@ 1701 train 4.6736 , allloss: 4.6736, dt: 698.67ms, fracRes: 0.3502, norm(attn): 1.0625, norm(output): 0.8555, norm(x): 1.0936, norm(y): 0.9875, norm:0.8171, tok/sec: 187600.84, flops:196.94, batch-reuse:1
@ 1702 train 4.6409 , allloss: 4.6409, dt: 689.03ms, fracRes: 0.3504, norm(attn): 1.0547, norm(output): 0.8633, norm(x): 1.0952, norm(y): 0.9875, norm:0.8203, tok/sec: 190226.14, flops:199.70, batch-reuse:1
@ 1703 train 4.6103 , allloss: 4.6103, dt: 689.58ms, fracRes: 0.3514, norm(attn): 1.0391, norm(output): 0.8672, norm(x): 1.1040, norm(y): 0.9874, norm:0.8487, tok/sec: 190074.21, flops:199.54, batch-reuse:1
@ 1704 train 4.6504 , allloss: 4.6504, dt: 695.01ms, fracRes: 0.3520, norm(attn): 1.0391, norm(output): 0.8516, norm(x): 1.0850, norm(y): 0.9876, norm:0.8409, tok/sec: 188590.82, flops:197.98, batch-reuse:1
@ 1705 train 4.6010 , allloss: 4.6010, dt: 680.32ms, fracRes: 0.3523, norm(attn): 1.0547, norm(output): 0.8672, norm(x): 1.1071, norm(y): 0.9875, norm:1.0520, tok/sec: 192661.19, flops:202.26, batch-reuse:1
@ 1706 train 4.5902 , allloss: 4.5902, dt: 685.54ms, fracRes: 0.3514, norm(attn): 1.0703, norm(output): 0.8672, norm(x): 1.1056, norm(y): 0.9874, norm:0.8836, tok/sec: 191194.14, flops:200.72, batch-reuse:1
@ 1707 train 4.5748 , allloss: 4.5748, dt: 694.22ms, fracRes: 0.3518, norm(attn): 1.0781, norm(output): 0.8789, norm(x): 1.1170, norm(y): 0.9873, norm:0.9751, tok/sec: 188804.62, flops:198.21, batch-reuse:1
@ 1708 train 4.5600 , allloss: 4.5600, dt: 690.92ms, fracRes: 0.3519, norm(attn): 1.0625, norm(output): 0.8672, norm(x): 1.1066, norm(y): 0.9873, norm:0.9682, tok/sec: 189706.25, flops:199.15, batch-reuse:1
@ 1709 train 4.6468 , allloss: 4.6468, dt: 694.41ms, fracRes: 0.3519, norm(attn): 1.0547, norm(output): 0.8594, norm(x): 1.0989, norm(y): 0.9873, norm:0.9236, tok/sec: 188752.24, flops:198.15, batch-reuse:1
@ 1710 train 4.5904 , allloss: 4.5904, dt: 690.96ms, fracRes: 0.3519, norm(attn): 1.0469, norm(output): 0.8594, norm(x): 1.0994, norm(y): 0.9874, norm:0.9914, tok/sec: 189695.06, flops:199.14, batch-reuse:1
@ 1711 train 4.6073 , allloss: 4.6073, dt: 710.14ms, fracRes: 0.3520, norm(attn): 1.0312, norm(output): 0.8594, norm(x): 1.0987, norm(y): 0.9875, norm:0.8053, tok/sec: 184572.37, flops:193.76, batch-reuse:1
@ 1712 train 4.7749 , allloss: 4.7749, dt: 706.90ms, fracRes: 0.3516, norm(attn): 1.0234, norm(output): 0.8594, norm(x): 1.0970, norm(y): 0.9876, norm:0.8668, tok/sec: 185419.12, flops:194.65, batch-reuse:1
@ 1713 train 4.5021 , allloss: 4.5021, dt: 696.56ms, fracRes: 0.3516, norm(attn): 1.0078, norm(output): 0.8398, norm(x): 1.0820, norm(y): 0.9876, norm:0.8274, tok/sec: 188171.49, flops:197.54, batch-reuse:1
@ 1714 train 4.6139 , allloss: 4.6139, dt: 699.10ms, fracRes: 0.3514, norm(attn): 1.0391, norm(output): 0.8555, norm(x): 1.0899, norm(y): 0.9874, norm:0.8350, tok/sec: 187486.76, flops:196.82, batch-reuse:1
@ 1715 train 4.6043 , allloss: 4.6043, dt: 689.31ms, fracRes: 0.3526, norm(attn): 1.0469, norm(output): 0.8594, norm(x): 1.0973, norm(y): 0.9874, norm:0.9509, tok/sec: 190150.34, flops:199.62, batch-reuse:1
@ 1716 train 4.6693 , allloss: 4.6693, dt: 705.81ms, fracRes: 0.3515, norm(attn): 1.0469, norm(output): 0.8672, norm(x): 1.1055, norm(y): 0.9874, norm:0.8004, tok/sec: 185705.54, flops:194.95, batch-reuse:1
@ 1717 train 4.7990 , allloss: 4.7990, dt: 696.16ms, fracRes: 0.3503, norm(attn): 1.0547, norm(output): 0.8672, norm(x): 1.1053, norm(y): 0.9873, norm:0.9530, tok/sec: 188278.41, flops:197.66, batch-reuse:1
@ 1718 train 4.7015 , allloss: 4.7015, dt: 697.82ms, fracRes: 0.3514, norm(attn): 1.0312, norm(output): 0.8828, norm(x): 1.1164, norm(y): 0.9872, norm:0.8574, tok/sec: 187830.62, flops:197.18, batch-reuse:1
@ 1719 train 4.7307 , allloss: 4.7307, dt: 697.99ms, fracRes: 0.3518, norm(attn): 1.0312, norm(output): 0.8438, norm(x): 1.0954, norm(y): 0.9874, norm:0.9520, tok/sec: 187786.22, flops:197.14, batch-reuse:1
@ 1720 train 4.6187 , allloss: 4.6187, dt: 702.89ms, fracRes: 0.3508, norm(attn): 1.0312, norm(output): 0.8594, norm(x): 1.0988, norm(y): 0.9874, norm:0.8595, tok/sec: 186476.24, flops:195.76, batch-reuse:1
@ 1721 train 4.6961 , allloss: 4.6961, dt: 685.21ms, fracRes: 0.3512, norm(attn): 1.0234, norm(output): 0.8438, norm(x): 1.0921, norm(y): 0.9875, norm:0.7658, tok/sec: 191286.55, flops:200.81, batch-reuse:1
@ 1722 train 4.7161 , allloss: 4.7161, dt: 686.03ms, fracRes: 0.3502, norm(attn): 1.0391, norm(output): 0.8555, norm(x): 1.0981, norm(y): 0.9875, norm:0.8045, tok/sec: 191057.46, flops:200.57, batch-reuse:1
@ 1723 train 4.6526 , allloss: 4.6526, dt: 694.15ms, fracRes: 0.3511, norm(attn): 1.0469, norm(output): 0.8359, norm(x): 1.0881, norm(y): 0.9876, norm:0.8522, tok/sec: 188822.52, flops:198.23, batch-reuse:1
@ 1724 train 4.5461 , allloss: 4.5461, dt: 688.42ms, fracRes: 0.3509, norm(attn): 1.0625, norm(output): 0.8438, norm(x): 1.0889, norm(y): 0.9876, norm:0.8754, tok/sec: 190395.84, flops:199.88, batch-reuse:1
@ 1725 train 4.6301 , allloss: 4.6301, dt: 704.81ms, fracRes: 0.3516, norm(attn): 1.0703, norm(output): 0.8281, norm(x): 1.0777, norm(y): 0.9876, norm:0.7601, tok/sec: 185968.32, flops:195.23, batch-reuse:1
@ 1726 train 4.6150 , allloss: 4.6150, dt: 706.99ms, fracRes: 0.3525, norm(attn): 1.0781, norm(output): 0.8320, norm(x): 1.0809, norm(y): 0.9876, norm:0.7963, tok/sec: 185395.11, flops:194.63, batch-reuse:1
@ 1727 train 4.5364 , allloss: 4.5364, dt: 681.33ms, fracRes: 0.3518, norm(attn): 1.0859, norm(output): 0.8438, norm(x): 1.0909, norm(y): 0.9876, norm:0.7311, tok/sec: 192376.95, flops:201.96, batch-reuse:1
@ 1728 train 4.7357 , allloss: 4.7357, dt: 684.43ms, fracRes: 0.3515, norm(attn): 1.0938, norm(output): 0.8438, norm(x): 1.0888, norm(y): 0.9876, norm:0.8979, tok/sec: 191504.17, flops:201.04, batch-reuse:1
@ 1729 train 4.8374 , allloss: 4.8374, dt: 706.96ms, fracRes: 0.3505, norm(attn): 1.1094, norm(output): 0.8477, norm(x): 1.0931, norm(y): 0.9877, norm:0.7349, tok/sec: 185402.80, flops:194.64, batch-reuse:1
@ 1730 train 4.6461 , allloss: 4.6461, dt: 706.57ms, fracRes: 0.3522, norm(attn): 1.0781, norm(output): 0.8281, norm(x): 1.0836, norm(y): 0.9876, norm:0.8056, tok/sec: 185504.58, flops:194.74, batch-reuse:1
@ 1731 train 4.5960 , allloss: 4.5960, dt: 704.35ms, fracRes: 0.3520, norm(attn): 1.0938, norm(output): 0.8516, norm(x): 1.0910, norm(y): 0.9875, norm:0.8012, tok/sec: 186088.99, flops:195.36, batch-reuse:1
@ 1732 train 4.5711 , allloss: 4.5711, dt: 702.24ms, fracRes: 0.3520, norm(attn): 1.0781, norm(output): 0.8516, norm(x): 1.0897, norm(y): 0.9875, norm:0.9252, tok/sec: 186648.00, flops:195.94, batch-reuse:1
@ 1733 train 4.6081 , allloss: 4.6081, dt: 707.37ms, fracRes: 0.3524, norm(attn): 1.0781, norm(output): 0.8242, norm(x): 1.0774, norm(y): 0.9875, norm:0.9908, tok/sec: 185294.75, flops:194.52, batch-reuse:1
@ 1734 train 5.0129 , allloss: 5.0129, dt: 704.97ms, fracRes: 0.3529, norm(attn): 1.0938, norm(output): 0.8320, norm(x): 1.0806, norm(y): 0.9877, norm:1.0239, tok/sec: 185925.67, flops:195.19, batch-reuse:1
@ 1735 train 4.6418 , allloss: 4.6418, dt: 704.23ms, fracRes: 0.3520, norm(attn): 1.0703, norm(output): 0.8359, norm(x): 1.0814, norm(y): 0.9875, norm:1.0767, tok/sec: 186120.87, flops:195.39, batch-reuse:1
@ 1736 train 4.5894 , allloss: 4.5894, dt: 689.17ms, fracRes: 0.3515, norm(attn): 1.0703, norm(output): 0.8398, norm(x): 1.0859, norm(y): 0.9875, norm:0.7479, tok/sec: 190187.83, flops:199.66, batch-reuse:1
@ 1737 train 4.5410 , allloss: 4.5410, dt: 692.29ms, fracRes: 0.3519, norm(attn): 1.0547, norm(output): 0.8359, norm(x): 1.0870, norm(y): 0.9875, norm:1.0671, tok/sec: 189331.30, flops:198.76, batch-reuse:1
@ 1738 train 4.5603 , allloss: 4.5603, dt: 698.57ms, fracRes: 0.3514, norm(attn): 1.0547, norm(output): 0.8320, norm(x): 1.0885, norm(y): 0.9874, norm:0.7686, tok/sec: 187630.29, flops:196.97, batch-reuse:1
@ 1739 train 4.5731 , allloss: 4.5731, dt: 697.79ms, fracRes: 0.3513, norm(attn): 1.0391, norm(output): 0.8438, norm(x): 1.0934, norm(y): 0.9874, norm:0.8137, tok/sec: 187839.48, flops:197.19, batch-reuse:1
@ 1740 train 4.5386 , allloss: 4.5386, dt: 719.08ms, fracRes: 0.3517, norm(attn): 1.0156, norm(output): 0.8438, norm(x): 1.0891, norm(y): 0.9874, norm:0.8831, tok/sec: 182277.24, flops:191.35, batch-reuse:1
@ 1741 train 4.6430 , allloss: 4.6430, dt: 720.35ms, fracRes: 0.3527, norm(attn): 1.0078, norm(output): 0.8320, norm(x): 1.0829, norm(y): 0.9875, norm:0.8012, tok/sec: 181955.93, flops:191.02, batch-reuse:1
@ 1742 train 4.5978 , allloss: 4.5978, dt: 697.02ms, fracRes: 0.3511, norm(attn): 1.0000, norm(output): 0.8320, norm(x): 1.0816, norm(y): 0.9876, norm:0.8106, tok/sec: 188046.24, flops:197.41, batch-reuse:1
@ 1743 train 4.6473 , allloss: 4.6473, dt: 694.07ms, fracRes: 0.3513, norm(attn): 0.9922, norm(output): 0.8398, norm(x): 1.0858, norm(y): 0.9876, norm:0.7506, tok/sec: 188844.44, flops:198.25, batch-reuse:1
@ 1744 train 4.5321 , allloss: 4.5321, dt: 699.38ms, fracRes: 0.3516, norm(attn): 0.9453, norm(output): 0.8164, norm(x): 1.0699, norm(y): 0.9876, norm:0.7104, tok/sec: 187412.11, flops:196.75, batch-reuse:1
@ 1745 train 4.5251 , allloss: 4.5251, dt: 702.82ms, fracRes: 0.3502, norm(attn): 0.9492, norm(output): 0.8125, norm(x): 1.0689, norm(y): 0.9876, norm:0.6635, tok/sec: 186493.89, flops:195.78, batch-reuse:1
@ 1746 train 4.6366 , allloss: 4.6366, dt: 703.77ms, fracRes: 0.3509, norm(attn): 1.0156, norm(output): 0.8398, norm(x): 1.0910, norm(y): 0.9874, norm:0.7377, tok/sec: 186243.88, flops:195.52, batch-reuse:1
@ 1747 train 4.4815 , allloss: 4.4815, dt: 690.32ms, fracRes: 0.3512, norm(attn): 1.0781, norm(output): 0.8438, norm(x): 1.0891, norm(y): 0.9873, norm:0.7203, tok/sec: 189870.64, flops:199.33, batch-reuse:1
@ 1748 train 4.5383 , allloss: 4.5383, dt: 701.56ms, fracRes: 0.3514, norm(attn): 1.1250, norm(output): 0.8672, norm(x): 1.1044, norm(y): 0.9873, norm:0.6394, tok/sec: 186829.60, flops:196.13, batch-reuse:1
@ 1749 train 4.6534 , allloss: 4.6534, dt: 690.05ms, fracRes: 0.3509, norm(attn): 1.1641, norm(output): 0.8750, norm(x): 1.1142, norm(y): 0.9872, norm:0.7848, tok/sec: 189945.03, flops:199.40, batch-reuse:1
@ 1750 train 4.6304 , allloss: 4.6304, dt: 705.57ms, fracRes: 0.3512, norm(attn): 1.1875, norm(output): 0.8594, norm(x): 1.0984, norm(y): 0.9872, norm:0.7256, tok/sec: 185768.42, flops:195.02, batch-reuse:1
@ 1751 train 4.7361 , allloss: 4.7361, dt: 708.51ms, fracRes: 0.3497, norm(attn): 1.2188, norm(output): 0.8672, norm(x): 1.1140, norm(y): 0.9871, norm:0.9453, tok/sec: 184996.89, flops:194.21, batch-reuse:1
@ 1752 train 4.8029 , allloss: 4.8029, dt: 704.73ms, fracRes: 0.3465, norm(attn): 1.2969, norm(output): 0.8711, norm(x): 1.1180, norm(y): 0.9871, norm:1.1466, tok/sec: 185989.01, flops:195.25, batch-reuse:1
@ 1753 train 4.6269 , allloss: 4.6269, dt: 692.88ms, fracRes: 0.3519, norm(attn): 1.2344, norm(output): 0.8672, norm(x): 1.1029, norm(y): 0.9872, norm:1.1294, tok/sec: 189170.58, flops:198.59, batch-reuse:1
@ 1754 train 4.5883 , allloss: 4.5883, dt: 702.38ms, fracRes: 0.3511, norm(attn): 1.2500, norm(output): 0.8711, norm(x): 1.1043, norm(y): 0.9872, norm:0.9301, tok/sec: 186610.93, flops:195.90, batch-reuse:1
@ 1755 train 4.5799 , allloss: 4.5799, dt: 698.35ms, fracRes: 0.3519, norm(attn): 1.2656, norm(output): 0.8633, norm(x): 1.1042, norm(y): 0.9874, norm:0.9202, tok/sec: 187687.94, flops:197.04, batch-reuse:1
@ 1756 train 4.5723 , allloss: 4.5723, dt: 693.98ms, fracRes: 0.3521, norm(attn): 1.2891, norm(output): 0.8750, norm(x): 1.1136, norm(y): 0.9874, norm:0.9647, tok/sec: 188870.78, flops:198.28, batch-reuse:1
@ 1757 train 4.6425 , allloss: 4.6425, dt: 697.47ms, fracRes: 0.3518, norm(attn): 1.2812, norm(output): 0.8711, norm(x): 1.1064, norm(y): 0.9874, norm:1.0317, tok/sec: 187924.17, flops:197.28, batch-reuse:1
@ 1758 train 4.6661 , allloss: 4.6661, dt: 713.77ms, fracRes: 0.3516, norm(attn): 1.2891, norm(output): 0.8711, norm(x): 1.1134, norm(y): 0.9874, norm:0.9260, tok/sec: 183634.63, flops:192.78, batch-reuse:1
@ 1759 train 4.6396 , allloss: 4.6396, dt: 708.84ms, fracRes: 0.3510, norm(attn): 1.2969, norm(output): 0.8750, norm(x): 1.1135, norm(y): 0.9873, norm:0.8154, tok/sec: 184910.09, flops:194.12, batch-reuse:1
@ 1760 train 4.4906 , allloss: 4.4906, dt: 707.40ms, fracRes: 0.3518, norm(attn): 1.2656, norm(output): 0.8594, norm(x): 1.0948, norm(y): 0.9873, norm:0.8250, tok/sec: 185286.57, flops:194.51, batch-reuse:1
@ 1761 train 4.4572 , allloss: 4.4572, dt: 711.49ms, fracRes: 0.3513, norm(attn): 1.2578, norm(output): 0.8555, norm(x): 1.0895, norm(y): 0.9873, norm:0.8643, tok/sec: 184221.00, flops:193.40, batch-reuse:1
@ 1762 train 4.3377 , allloss: 4.3377, dt: 706.12ms, fracRes: 0.3519, norm(attn): 1.2656, norm(output): 0.8555, norm(x): 1.0909, norm(y): 0.9873, norm:0.9317, tok/sec: 185623.46, flops:194.87, batch-reuse:1
@ 1763 train 4.5317 , allloss: 4.5317, dt: 692.65ms, fracRes: 0.3521, norm(attn): 1.2500, norm(output): 0.8438, norm(x): 1.0917, norm(y): 0.9874, norm:0.6684, tok/sec: 189231.92, flops:198.66, batch-reuse:1
@ 1764 train 4.5442 , allloss: 4.5442, dt: 682.84ms, fracRes: 0.3517, norm(attn): 1.2578, norm(output): 0.8516, norm(x): 1.0890, norm(y): 0.9874, norm:0.7023, tok/sec: 191950.90, flops:201.51, batch-reuse:1
@ 1765 train 4.5228 , allloss: 4.5228, dt: 701.69ms, fracRes: 0.3509, norm(attn): 1.2500, norm(output): 0.8555, norm(x): 1.0905, norm(y): 0.9874, norm:0.7790, tok/sec: 186793.42, flops:196.10, batch-reuse:1
@ 1766 train 4.4264 , allloss: 4.4264, dt: 702.64ms, fracRes: 0.3510, norm(attn): 1.2578, norm(output): 0.8398, norm(x): 1.0797, norm(y): 0.9874, norm:0.7886, tok/sec: 186542.49, flops:195.83, batch-reuse:1
@ 1767 train 4.5433 , allloss: 4.5433, dt: 704.01ms, fracRes: 0.3510, norm(attn): 1.2578, norm(output): 0.8555, norm(x): 1.0890, norm(y): 0.9874, norm:0.8055, tok/sec: 186180.31, flops:195.45, batch-reuse:1
@ 1768 train 4.5911 , allloss: 4.5911, dt: 695.48ms, fracRes: 0.3511, norm(attn): 1.2578, norm(output): 0.8594, norm(x): 1.1006, norm(y): 0.9874, norm:0.7135, tok/sec: 188462.94, flops:197.85, batch-reuse:1
@ 1769 train 4.4692 , allloss: 4.4692, dt: 708.23ms, fracRes: 0.3517, norm(attn): 1.2578, norm(output): 0.8359, norm(x): 1.0875, norm(y): 0.9875, norm:0.6844, tok/sec: 185070.50, flops:194.29, batch-reuse:1
@ 1770 train 4.4763 , allloss: 4.4763, dt: 710.56ms, fracRes: 0.3522, norm(attn): 1.2578, norm(output): 0.8242, norm(x): 1.0775, norm(y): 0.9874, norm:0.7677, tok/sec: 184463.56, flops:193.65, batch-reuse:1
@ 1771 train 4.4760 , allloss: 4.4760, dt: 710.57ms, fracRes: 0.3522, norm(attn): 1.2500, norm(output): 0.8438, norm(x): 1.0842, norm(y): 0.9873, norm:0.9005, tok/sec: 184459.47, flops:193.65, batch-reuse:1
@ 1772 train 4.4724 , allloss: 4.4724, dt: 705.76ms, fracRes: 0.3519, norm(attn): 1.2422, norm(output): 0.8320, norm(x): 1.0807, norm(y): 0.9873, norm:0.7220, tok/sec: 185718.40, flops:194.97, batch-reuse:1
@ 1773 train 4.3859 , allloss: 4.3859, dt: 697.44ms, fracRes: 0.3522, norm(attn): 1.2422, norm(output): 0.8242, norm(x): 1.0777, norm(y): 0.9874, norm:0.6565, tok/sec: 187934.00, flops:197.29, batch-reuse:1
@ 1774 train 4.5760 , allloss: 4.5760, dt: 696.53ms, fracRes: 0.3519, norm(attn): 1.2422, norm(output): 0.8320, norm(x): 1.0817, norm(y): 0.9875, norm:0.5956, tok/sec: 188177.42, flops:197.55, batch-reuse:1
@ 1775 train 4.4745 , allloss: 4.4745, dt: 683.94ms, fracRes: 0.3519, norm(attn): 1.2422, norm(output): 0.8320, norm(x): 1.0834, norm(y): 0.9875, norm:0.6777, tok/sec: 191641.56, flops:201.19, batch-reuse:1
@ 1776 train 4.4548 , allloss: 4.4548, dt: 679.25ms, fracRes: 0.3524, norm(attn): 1.2422, norm(output): 0.8242, norm(x): 1.0748, norm(y): 0.9874, norm:0.7338, tok/sec: 192965.30, flops:202.58, batch-reuse:1
@ 1777 train 4.3858 , allloss: 4.3858, dt: 692.21ms, fracRes: 0.3526, norm(attn): 1.2422, norm(output): 0.8242, norm(x): 1.0774, norm(y): 0.9874, norm:0.6116, tok/sec: 189351.91, flops:198.78, batch-reuse:1
@ 1778 train 4.6246 , allloss: 4.6246, dt: 693.62ms, fracRes: 0.3514, norm(attn): 1.2422, norm(output): 0.8633, norm(x): 1.1077, norm(y): 0.9874, norm:0.8760, tok/sec: 188969.14, flops:198.38, batch-reuse:1
@ 1779 train 4.4494 , allloss: 4.4494, dt: 701.49ms, fracRes: 0.3534, norm(attn): 1.2188, norm(output): 0.8242, norm(x): 1.0738, norm(y): 0.9876, norm:0.7560, tok/sec: 186848.01, flops:196.15, batch-reuse:1
@ 1780 train 4.5145 , allloss: 4.5145, dt: 712.08ms, fracRes: 0.3534, norm(attn): 1.2109, norm(output): 0.8242, norm(x): 1.0769, norm(y): 0.9875, norm:0.9339, tok/sec: 184068.10, flops:193.24, batch-reuse:1
@ 1781 train 4.5096 , allloss: 4.5096, dt: 712.97ms, fracRes: 0.3521, norm(attn): 1.2109, norm(output): 0.8125, norm(x): 1.0642, norm(y): 0.9875, norm:0.7849, tok/sec: 183838.26, flops:192.99, batch-reuse:1
@ 1782 train 4.5443 , allloss: 4.5443, dt: 719.35ms, fracRes: 0.3520, norm(attn): 1.2188, norm(output): 0.8164, norm(x): 1.0671, norm(y): 0.9876, norm:0.7244, tok/sec: 182208.31, flops:191.28, batch-reuse:1
@ 1783 train 4.5226 , allloss: 4.5226, dt: 690.75ms, fracRes: 0.3516, norm(attn): 1.2109, norm(output): 0.8125, norm(x): 1.0656, norm(y): 0.9875, norm:0.7091, tok/sec: 189754.05, flops:199.20, batch-reuse:1
@ 1784 train 4.4355 , allloss: 4.4355, dt: 689.89ms, fracRes: 0.3510, norm(attn): 1.2031, norm(output): 0.8164, norm(x): 1.0684, norm(y): 0.9875, norm:0.8233, tok/sec: 189990.98, flops:199.45, batch-reuse:1
@ 1785 train 4.4697 , allloss: 4.4697, dt: 693.78ms, fracRes: 0.3517, norm(attn): 1.2031, norm(output): 0.8203, norm(x): 1.0728, norm(y): 0.9875, norm:0.8486, tok/sec: 188925.17, flops:198.33, batch-reuse:1
@ 1786 train 4.5318 , allloss: 4.5318, dt: 686.68ms, fracRes: 0.3515, norm(attn): 1.1875, norm(output): 0.8242, norm(x): 1.0729, norm(y): 0.9875, norm:0.8211, tok/sec: 190877.69, flops:200.38, batch-reuse:1
@ 1787 train 4.4904 , allloss: 4.4904, dt: 690.81ms, fracRes: 0.3511, norm(attn): 1.1875, norm(output): 0.8164, norm(x): 1.0639, norm(y): 0.9874, norm:0.7958, tok/sec: 189736.89, flops:199.19, batch-reuse:1
@ 1788 train 4.5317 , allloss: 4.5317, dt: 696.47ms, fracRes: 0.3510, norm(attn): 1.2031, norm(output): 0.8203, norm(x): 1.0703, norm(y): 0.9875, norm:0.6908, tok/sec: 188193.46, flops:197.57, batch-reuse:1
@ 1789 train 4.5452 , allloss: 4.5452, dt: 695.33ms, fracRes: 0.3511, norm(attn): 1.2031, norm(output): 0.8359, norm(x): 1.0887, norm(y): 0.9876, norm:0.8575, tok/sec: 188504.10, flops:197.89, batch-reuse:1
@ 1790 train 4.5680 , allloss: 4.5680, dt: 684.22ms, fracRes: 0.3511, norm(attn): 1.2031, norm(output): 0.8359, norm(x): 1.0839, norm(y): 0.9875, norm:0.9183, tok/sec: 191563.43, flops:201.10, batch-reuse:1
@ 1791 train 4.5127 , allloss: 4.5127, dt: 687.53ms, fracRes: 0.3510, norm(attn): 1.1719, norm(output): 0.8125, norm(x): 1.0587, norm(y): 0.9874, norm:0.8241, tok/sec: 190641.59, flops:200.14, batch-reuse:1
@ 1792 train 4.5872 , allloss: 4.5872, dt: 701.43ms, fracRes: 0.3504, norm(attn): 1.1562, norm(output): 0.8125, norm(x): 1.0636, norm(y): 0.9874, norm:0.8278, tok/sec: 186865.16, flops:196.17, batch-reuse:1
@ 1793 train 4.5803 , allloss: 4.5803, dt: 706.02ms, fracRes: 0.3502, norm(attn): 1.1719, norm(output): 0.8164, norm(x): 1.0702, norm(y): 0.9875, norm:0.8493, tok/sec: 185650.17, flops:194.90, batch-reuse:1
@ 1794 train 4.4956 , allloss: 4.4956, dt: 698.92ms, fracRes: 0.3512, norm(attn): 1.1641, norm(output): 0.8359, norm(x): 1.0877, norm(y): 0.9874, norm:0.7881, tok/sec: 187536.27, flops:196.88, batch-reuse:1
@ 1795 train 4.5463 , allloss: 4.5463, dt: 701.44ms, fracRes: 0.3512, norm(attn): 1.1641, norm(output): 0.8281, norm(x): 1.0809, norm(y): 0.9876, norm:0.6587, tok/sec: 186862.43, flops:196.17, batch-reuse:1
@ 1796 train 4.4381 , allloss: 4.4381, dt: 691.36ms, fracRes: 0.3523, norm(attn): 1.1641, norm(output): 0.8281, norm(x): 1.0755, norm(y): 0.9875, norm:0.7932, tok/sec: 189586.14, flops:199.03, batch-reuse:1
@ 1797 train 4.4735 , allloss: 4.4735, dt: 707.89ms, fracRes: 0.3519, norm(attn): 1.1719, norm(output): 0.8320, norm(x): 1.0797, norm(y): 0.9874, norm:0.7764, tok/sec: 185158.14, flops:194.38, batch-reuse:1
@ 1798 train 4.4749 , allloss: 4.4749, dt: 709.82ms, fracRes: 0.3511, norm(attn): 1.1641, norm(output): 0.8242, norm(x): 1.0757, norm(y): 0.9874, norm:0.7656, tok/sec: 184655.26, flops:193.85, batch-reuse:1
@ 1799 train 4.5255 , allloss: 4.5255, dt: 708.89ms, fracRes: 0.3514, norm(attn): 1.1406, norm(output): 0.8203, norm(x): 1.0738, norm(y): 0.9875, norm:0.7130, tok/sec: 184897.46, flops:194.11, batch-reuse:1
@ 1800 train 4.4581 , allloss: 4.4581, dt: 706.57ms, fracRes: 0.3516, norm(attn): 1.1328, norm(output): 0.8203, norm(x): 1.0735, norm(y): 0.9876, norm:0.7347, tok/sec: 185503.39, flops:194.74, batch-reuse:1
@ 1801 train 4.4076 , allloss: 4.4076, dt: 702.97ms, fracRes: 0.3518, norm(attn): 1.1406, norm(output): 0.8359, norm(x): 1.0823, norm(y): 0.9875, norm:0.8122, tok/sec: 186455.87, flops:195.74, batch-reuse:1
@ 1802 train 4.6072 , allloss: 4.6072, dt: 704.50ms, fracRes: 0.3503, norm(attn): 1.1328, norm(output): 0.8164, norm(x): 1.0690, norm(y): 0.9876, norm:0.8883, tok/sec: 186050.70, flops:195.32, batch-reuse:1
@ 1803 train 4.5118 , allloss: 4.5118, dt: 700.04ms, fracRes: 0.3505, norm(attn): 1.1250, norm(output): 0.8242, norm(x): 1.0731, norm(y): 0.9875, norm:0.8439, tok/sec: 187234.48, flops:196.56, batch-reuse:1
@ 1804 train 4.5009 , allloss: 4.5009, dt: 693.33ms, fracRes: 0.3513, norm(attn): 1.1250, norm(output): 0.8203, norm(x): 1.0730, norm(y): 0.9875, norm:0.7885, tok/sec: 189048.09, flops:198.46, batch-reuse:1
@ 1805 train 4.5108 , allloss: 4.5108, dt: 690.77ms, fracRes: 0.3520, norm(attn): 1.1172, norm(output): 0.8281, norm(x): 1.0781, norm(y): 0.9874, norm:1.1464, tok/sec: 189747.44, flops:199.20, batch-reuse:1
@ 1806 train 4.5409 , allloss: 4.5409, dt: 706.70ms, fracRes: 0.3518, norm(attn): 1.0938, norm(output): 0.8242, norm(x): 1.0776, norm(y): 0.9876, norm:0.9571, tok/sec: 185470.29, flops:194.71, batch-reuse:1
@ 1807 train 4.5738 , allloss: 4.5738, dt: 697.05ms, fracRes: 0.3521, norm(attn): 1.0625, norm(output): 0.8086, norm(x): 1.0624, norm(y): 0.9876, norm:0.9444, tok/sec: 188037.49, flops:197.40, batch-reuse:1
@ 1808 train 4.4150 , allloss: 4.4150, dt: 695.69ms, fracRes: 0.3514, norm(attn): 1.0703, norm(output): 0.8359, norm(x): 1.0868, norm(y): 0.9874, norm:0.8530, tok/sec: 188406.04, flops:197.79, batch-reuse:1
@ 1809 train 4.4378 , allloss: 4.4378, dt: 705.17ms, fracRes: 0.3529, norm(attn): 1.0625, norm(output): 0.8164, norm(x): 1.0702, norm(y): 0.9875, norm:1.0369, tok/sec: 185873.62, flops:195.13, batch-reuse:1
@ 1810 train 4.3319 , allloss: 4.3319, dt: 691.03ms, fracRes: 0.3525, norm(attn): 1.0625, norm(output): 0.8164, norm(x): 1.0666, norm(y): 0.9875, norm:0.9196, tok/sec: 189674.96, flops:199.12, batch-reuse:1
@ 1811 train 4.3979 , allloss: 4.3979, dt: 710.75ms, fracRes: 0.3529, norm(attn): 1.0469, norm(output): 0.8164, norm(x): 1.0648, norm(y): 0.9875, norm:0.8002, tok/sec: 184413.13, flops:193.60, batch-reuse:1
@ 1812 train 4.4605 , allloss: 4.4605, dt: 710.96ms, fracRes: 0.3531, norm(attn): 1.0469, norm(output): 0.8086, norm(x): 1.0604, norm(y): 0.9876, norm:0.8647, tok/sec: 184358.15, flops:193.54, batch-reuse:1
@ 1813 train 4.3733 , allloss: 4.3733, dt: 695.57ms, fracRes: 0.3528, norm(attn): 1.0469, norm(output): 0.8125, norm(x): 1.0606, norm(y): 0.9875, norm:0.9724, tok/sec: 188437.74, flops:197.82, batch-reuse:1
@ 1814 train 4.4850 , allloss: 4.4850, dt: 693.39ms, fracRes: 0.3523, norm(attn): 1.0078, norm(output): 0.8125, norm(x): 1.0636, norm(y): 0.9876, norm:0.6446, tok/sec: 189031.90, flops:198.45, batch-reuse:1
@ 1815 train 4.4006 , allloss: 4.4006, dt: 693.15ms, fracRes: 0.3528, norm(attn): 1.0000, norm(output): 0.8086, norm(x): 1.0645, norm(y): 0.9876, norm:0.7348, tok/sec: 189094.97, flops:198.51, batch-reuse:1
@ 1816 train 4.4038 , allloss: 4.4038, dt: 697.92ms, fracRes: 0.3524, norm(attn): 1.0000, norm(output): 0.8047, norm(x): 1.0560, norm(y): 0.9878, norm:0.8154, tok/sec: 187803.22, flops:197.16, batch-reuse:1
@ 1817 train 4.3902 , allloss: 4.3902, dt: 699.60ms, fracRes: 0.3529, norm(attn): 1.0000, norm(output): 0.8086, norm(x): 1.0591, norm(y): 0.9876, norm:0.7530, tok/sec: 187353.22, flops:196.68, batch-reuse:1
@ 1818 train 4.3736 , allloss: 4.3736, dt: 698.85ms, fracRes: 0.3535, norm(attn): 1.0156, norm(output): 0.8047, norm(x): 1.0561, norm(y): 0.9876, norm:0.6446, tok/sec: 187553.16, flops:196.89, batch-reuse:1
@ 1819 train 4.5256 , allloss: 4.5256, dt: 703.78ms, fracRes: 0.3535, norm(attn): 1.0312, norm(output): 0.8086, norm(x): 1.0587, norm(y): 0.9878, norm:0.7238, tok/sec: 186240.79, flops:195.52, batch-reuse:1
@ 1820 train 4.4301 , allloss: 4.4301, dt: 687.90ms, fracRes: 0.3535, norm(attn): 1.0234, norm(output): 0.8047, norm(x): 1.0529, norm(y): 0.9877, norm:0.7060, tok/sec: 190539.63, flops:200.03, batch-reuse:1
@ 1821 train 4.3284 , allloss: 4.3284, dt: 705.48ms, fracRes: 0.3541, norm(attn): 1.0547, norm(output): 0.8008, norm(x): 1.0544, norm(y): 0.9876, norm:0.8685, tok/sec: 185791.33, flops:195.04, batch-reuse:1
@ 1822 train 4.2790 , allloss: 4.2790, dt: 697.51ms, fracRes: 0.3545, norm(attn): 1.0469, norm(output): 0.8086, norm(x): 1.0629, norm(y): 0.9876, norm:0.8668, tok/sec: 187913.12, flops:197.27, batch-reuse:1
@ 1823 train 4.3315 , allloss: 4.3315, dt: 694.34ms, fracRes: 0.3535, norm(attn): 1.0469, norm(output): 0.8086, norm(x): 1.0604, norm(y): 0.9876, norm:0.8435, tok/sec: 188770.97, flops:198.17, batch-reuse:1
@ 1824 train 4.3693 , allloss: 4.3693, dt: 702.77ms, fracRes: 0.3527, norm(attn): 1.0547, norm(output): 0.8164, norm(x): 1.0649, norm(y): 0.9875, norm:0.7545, tok/sec: 186508.63, flops:195.80, batch-reuse:1
@ 1825 train 4.4345 , allloss: 4.4345, dt: 685.04ms, fracRes: 0.3534, norm(attn): 1.0547, norm(output): 0.8047, norm(x): 1.0620, norm(y): 0.9877, norm:0.7781, tok/sec: 191335.28, flops:200.86, batch-reuse:1
@ 1826 train 4.4020 , allloss: 4.4020, dt: 696.06ms, fracRes: 0.3533, norm(attn): 1.0625, norm(output): 0.8086, norm(x): 1.0618, norm(y): 0.9877, norm:0.9052, tok/sec: 188306.33, flops:197.68, batch-reuse:1
@ 1827 train 4.4514 , allloss: 4.4514, dt: 709.60ms, fracRes: 0.3531, norm(attn): 1.0703, norm(output): 0.8203, norm(x): 1.0766, norm(y): 0.9877, norm:0.9619, tok/sec: 184711.65, flops:193.91, batch-reuse:1
@ 1828 train 4.4035 , allloss: 4.4035, dt: 684.50ms, fracRes: 0.3531, norm(attn): 1.0625, norm(output): 0.8086, norm(x): 1.0596, norm(y): 0.9877, norm:0.6620, tok/sec: 191486.56, flops:201.02, batch-reuse:1
@ 1829 train 4.4494 , allloss: 4.4494, dt: 691.52ms, fracRes: 0.3533, norm(attn): 1.0625, norm(output): 0.8008, norm(x): 1.0607, norm(y): 0.9877, norm:0.8122, tok/sec: 189542.15, flops:198.98, batch-reuse:1
@ 1830 train 4.3458 , allloss: 4.3458, dt: 690.01ms, fracRes: 0.3523, norm(attn): 1.0781, norm(output): 0.8008, norm(x): 1.0497, norm(y): 0.9878, norm:0.9632, tok/sec: 189956.84, flops:199.42, batch-reuse:1
@ 1831 train 4.3813 , allloss: 4.3813, dt: 696.25ms, fracRes: 0.3527, norm(attn): 1.0938, norm(output): 0.8125, norm(x): 1.0664, norm(y): 0.9877, norm:0.8069, tok/sec: 188253.71, flops:197.63, batch-reuse:1
@ 1832 train 4.4005 , allloss: 4.4005, dt: 709.02ms, fracRes: 0.3520, norm(attn): 1.1094, norm(output): 0.8086, norm(x): 1.0607, norm(y): 0.9877, norm:0.8582, tok/sec: 184862.83, flops:194.07, batch-reuse:1
@ 1833 train 4.5407 , allloss: 4.5407, dt: 710.78ms, fracRes: 0.3523, norm(attn): 1.1016, norm(output): 0.8086, norm(x): 1.0594, norm(y): 0.9876, norm:0.8097, tok/sec: 184405.46, flops:193.59, batch-reuse:1
@ 1834 train 4.4066 , allloss: 4.4066, dt: 693.13ms, fracRes: 0.3535, norm(attn): 1.0781, norm(output): 0.8125, norm(x): 1.0722, norm(y): 0.9875, norm:0.9208, tok/sec: 189101.35, flops:198.52, batch-reuse:1
@ 1835 train 4.3217 , allloss: 4.3217, dt: 698.50ms, fracRes: 0.3542, norm(attn): 1.0938, norm(output): 0.7852, norm(x): 1.0466, norm(y): 0.9875, norm:0.9083, tok/sec: 187647.58, flops:196.99, batch-reuse:1
@ 1836 train 4.4179 , allloss: 4.4179, dt: 709.22ms, fracRes: 0.3528, norm(attn): 1.1094, norm(output): 0.8008, norm(x): 1.0566, norm(y): 0.9875, norm:0.9177, tok/sec: 184811.69, flops:194.02, batch-reuse:1
@ 1837 train 4.4953 , allloss: 4.4953, dt: 705.80ms, fracRes: 0.3536, norm(attn): 1.1016, norm(output): 0.8008, norm(x): 1.0571, norm(y): 0.9876, norm:0.7919, tok/sec: 185708.05, flops:194.96, batch-reuse:1
@ 1838 train 4.4340 , allloss: 4.4340, dt: 706.04ms, fracRes: 0.3533, norm(attn): 1.1094, norm(output): 0.8086, norm(x): 1.0626, norm(y): 0.9876, norm:0.8406, tok/sec: 185643.46, flops:194.89, batch-reuse:1
@ 1839 train 4.3584 , allloss: 4.3584, dt: 705.32ms, fracRes: 0.3531, norm(attn): 1.0781, norm(output): 0.8008, norm(x): 1.0548, norm(y): 0.9877, norm:0.7882, tok/sec: 185834.67, flops:195.09, batch-reuse:1
@ 1840 train 4.3566 , allloss: 4.3566, dt: 699.14ms, fracRes: 0.3536, norm(attn): 1.0781, norm(output): 0.7891, norm(x): 1.0542, norm(y): 0.9877, norm:0.7279, tok/sec: 187477.37, flops:196.81, batch-reuse:1
@ 1841 train 4.4671 , allloss: 4.4671, dt: 687.17ms, fracRes: 0.3539, norm(attn): 1.0859, norm(output): 0.8008, norm(x): 1.0569, norm(y): 0.9877, norm:0.6453, tok/sec: 190740.80, flops:200.24, batch-reuse:1
@ 1842 train 4.3792 , allloss: 4.3792, dt: 695.09ms, fracRes: 0.3535, norm(attn): 1.1094, norm(output): 0.8086, norm(x): 1.0614, norm(y): 0.9876, norm:0.7073, tok/sec: 188567.14, flops:197.96, batch-reuse:1
@ 1843 train 4.3791 , allloss: 4.3791, dt: 697.90ms, fracRes: 0.3529, norm(attn): 1.1094, norm(output): 0.8008, norm(x): 1.0570, norm(y): 0.9876, norm:0.7652, tok/sec: 187809.70, flops:197.16, batch-reuse:1
@ 1844 train 4.3938 , allloss: 4.3938, dt: 700.64ms, fracRes: 0.3538, norm(attn): 1.1016, norm(output): 0.8008, norm(x): 1.0592, norm(y): 0.9876, norm:0.7136, tok/sec: 187075.96, flops:196.39, batch-reuse:1
@ 1845 train 4.3514 , allloss: 4.3514, dt: 692.75ms, fracRes: 0.3540, norm(attn): 1.1094, norm(output): 0.7969, norm(x): 1.0562, norm(y): 0.9877, norm:0.6647, tok/sec: 189205.35, flops:198.63, batch-reuse:1
@ 1846 train 4.3955 , allloss: 4.3955, dt: 701.42ms, fracRes: 0.3533, norm(attn): 1.1016, norm(output): 0.8008, norm(x): 1.0573, norm(y): 0.9877, norm:0.8194, tok/sec: 186867.13, flops:196.17, batch-reuse:1
@ 1847 train 4.3437 , allloss: 4.3437, dt: 708.01ms, fracRes: 0.3542, norm(attn): 1.1016, norm(output): 0.8047, norm(x): 1.0551, norm(y): 0.9876, norm:0.8865, tok/sec: 185127.03, flops:194.35, batch-reuse:1
@ 1848 train 4.1996 , allloss: 4.1996, dt: 705.29ms, fracRes: 0.3541, norm(attn): 1.1172, norm(output): 0.7969, norm(x): 1.0530, norm(y): 0.9876, norm:0.9734, tok/sec: 185840.13, flops:195.10, batch-reuse:1
@ 1849 train 4.4336 , allloss: 4.4336, dt: 695.70ms, fracRes: 0.3537, norm(attn): 1.1250, norm(output): 0.8086, norm(x): 1.0651, norm(y): 0.9877, norm:1.0864, tok/sec: 188403.20, flops:197.79, batch-reuse:1
@ 1850 train 4.2836 , allloss: 4.2836, dt: 702.39ms, fracRes: 0.3546, norm(attn): 1.1172, norm(output): 0.7969, norm(x): 1.0543, norm(y): 0.9877, norm:0.6864, tok/sec: 186608.15, flops:195.90, batch-reuse:1
@ 1851 train 4.2533 , allloss: 4.2533, dt: 700.97ms, fracRes: 0.3553, norm(attn): 1.1016, norm(output): 0.7891, norm(x): 1.0510, norm(y): 0.9876, norm:0.8413, tok/sec: 186985.41, flops:196.30, batch-reuse:1
@ 1852 train 4.3563 , allloss: 4.3563, dt: 703.46ms, fracRes: 0.3551, norm(attn): 1.0938, norm(output): 0.8086, norm(x): 1.0611, norm(y): 0.9877, norm:0.9330, tok/sec: 186324.05, flops:195.60, batch-reuse:1
@ 1853 train 4.3499 , allloss: 4.3499, dt: 694.42ms, fracRes: 0.3549, norm(attn): 1.0938, norm(output): 0.8008, norm(x): 1.0605, norm(y): 0.9877, norm:0.7379, tok/sec: 188750.17, flops:198.15, batch-reuse:1
@ 1854 train 4.4096 , allloss: 4.4096, dt: 701.50ms, fracRes: 0.3551, norm(attn): 1.1094, norm(output): 0.7969, norm(x): 1.0619, norm(y): 0.9877, norm:0.7651, tok/sec: 186845.35, flops:196.15, batch-reuse:1
@ 1855 train 4.4768 , allloss: 4.4768, dt: 694.52ms, fracRes: 0.3551, norm(attn): 1.1094, norm(output): 0.8125, norm(x): 1.0726, norm(y): 0.9876, norm:0.9200, tok/sec: 188723.99, flops:198.12, batch-reuse:1
@ 1856 train 4.4793 , allloss: 4.4793, dt: 705.49ms, fracRes: 0.3552, norm(attn): 1.1172, norm(output): 0.7891, norm(x): 1.0515, norm(y): 0.9878, norm:0.8284, tok/sec: 185789.76, flops:195.04, batch-reuse:1
@ 1857 train 4.4257 , allloss: 4.4257, dt: 708.93ms, fracRes: 0.3547, norm(attn): 1.1094, norm(output): 0.7969, norm(x): 1.0614, norm(y): 0.9877, norm:1.0084, tok/sec: 184886.95, flops:194.09, batch-reuse:1
@ 1858 train 4.6369 , allloss: 4.6369, dt: 713.57ms, fracRes: 0.3556, norm(attn): 1.1250, norm(output): 0.7969, norm(x): 1.0568, norm(y): 0.9883, norm:0.9311, tok/sec: 183685.74, flops:192.83, batch-reuse:1
@ 1859 train 4.5619 , allloss: 4.5619, dt: 700.00ms, fracRes: 0.3554, norm(attn): 1.1250, norm(output): 0.8086, norm(x): 1.0642, norm(y): 0.9878, norm:1.0325, tok/sec: 187245.96, flops:196.57, batch-reuse:1
@ 1860 train 4.5494 , allloss: 4.5494, dt: 691.59ms, fracRes: 0.3546, norm(attn): 1.1250, norm(output): 0.8203, norm(x): 1.0697, norm(y): 0.9878, norm:1.0972, tok/sec: 189524.05, flops:198.96, batch-reuse:1
@ 1861 train 4.4934 , allloss: 4.4934, dt: 691.58ms, fracRes: 0.3557, norm(attn): 1.1172, norm(output): 0.8086, norm(x): 1.0671, norm(y): 0.9878, norm:0.9581, tok/sec: 189526.53, flops:198.97, batch-reuse:1
@ 1862 train 4.5375 , allloss: 4.5375, dt: 687.97ms, fracRes: 0.3541, norm(attn): 1.1172, norm(output): 0.8086, norm(x): 1.0618, norm(y): 0.9878, norm:0.8045, tok/sec: 190519.96, flops:200.01, batch-reuse:1
@ 1863 train 4.5627 , allloss: 4.5627, dt: 693.89ms, fracRes: 0.3551, norm(attn): 1.1250, norm(output): 0.8125, norm(x): 1.0689, norm(y): 0.9877, norm:0.7043, tok/sec: 188894.60, flops:198.30, batch-reuse:1
@ 1864 train 4.5118 , allloss: 4.5118, dt: 698.94ms, fracRes: 0.3558, norm(attn): 1.1328, norm(output): 0.8008, norm(x): 1.0624, norm(y): 0.9878, norm:0.8302, tok/sec: 187530.51, flops:196.87, batch-reuse:1
@ 1865 train 4.5297 , allloss: 4.5297, dt: 697.48ms, fracRes: 0.3568, norm(attn): 1.1328, norm(output): 0.8047, norm(x): 1.0617, norm(y): 0.9878, norm:0.8811, tok/sec: 187922.18, flops:197.28, batch-reuse:1
@ 1866 train 4.8460 , allloss: 4.8460, dt: 691.66ms, fracRes: 0.3546, norm(attn): 1.1328, norm(output): 0.8203, norm(x): 1.0772, norm(y): 0.9877, norm:1.0062, tok/sec: 189502.88, flops:198.94, batch-reuse:1
@ 1867 train 4.5729 , allloss: 4.5729, dt: 694.42ms, fracRes: 0.3572, norm(attn): 1.1328, norm(output): 0.7969, norm(x): 1.0657, norm(y): 0.9879, norm:1.0887, tok/sec: 188750.69, flops:198.15, batch-reuse:1
@ 1868 train 4.6130 , allloss: 4.6130, dt: 687.88ms, fracRes: 0.3569, norm(attn): 1.1250, norm(output): 0.8086, norm(x): 1.0708, norm(y): 0.9880, norm:0.9042, tok/sec: 190545.58, flops:200.04, batch-reuse:1
@ 1869 train 4.5317 , allloss: 4.5317, dt: 695.46ms, fracRes: 0.3558, norm(attn): 1.1328, norm(output): 0.7969, norm(x): 1.0601, norm(y): 0.9880, norm:0.9581, tok/sec: 188467.85, flops:197.85, batch-reuse:1
@ 1870 train 4.4655 , allloss: 4.4655, dt: 696.41ms, fracRes: 0.3567, norm(attn): 1.1406, norm(output): 0.8086, norm(x): 1.0722, norm(y): 0.9879, norm:0.8463, tok/sec: 188210.85, flops:197.58, batch-reuse:1
@ 1871 train 4.4937 , allloss: 4.4937, dt: 690.76ms, fracRes: 0.3579, norm(attn): 1.1250, norm(output): 0.8086, norm(x): 1.0692, norm(y): 0.9879, norm:0.7961, tok/sec: 189751.56, flops:199.20, batch-reuse:1
@ 1872 train 4.5642 , allloss: 4.5642, dt: 698.37ms, fracRes: 0.3557, norm(attn): 1.1250, norm(output): 0.8086, norm(x): 1.0708, norm(y): 0.9879, norm:0.6107, tok/sec: 187681.41, flops:197.03, batch-reuse:1
@ 1873 train 4.5997 , allloss: 4.5997, dt: 709.87ms, fracRes: 0.3565, norm(attn): 1.1094, norm(output): 0.8008, norm(x): 1.0678, norm(y): 0.9879, norm:0.8198, tok/sec: 184642.79, flops:193.84, batch-reuse:1
@ 1874 train 4.4428 , allloss: 4.4428, dt: 708.22ms, fracRes: 0.3583, norm(attn): 1.1172, norm(output): 0.7930, norm(x): 1.0619, norm(y): 0.9878, norm:0.7274, tok/sec: 185072.75, flops:194.29, batch-reuse:1
@ 1875 train 4.5277 , allloss: 4.5277, dt: 708.92ms, fracRes: 0.3586, norm(attn): 1.1172, norm(output): 0.7930, norm(x): 1.0572, norm(y): 0.9880, norm:0.7315, tok/sec: 184889.75, flops:194.10, batch-reuse:1
@ 1876 train 4.6014 , allloss: 4.6014, dt: 708.27ms, fracRes: 0.3582, norm(attn): 1.1250, norm(output): 0.7969, norm(x): 1.0589, norm(y): 0.9878, norm:0.8558, tok/sec: 185059.29, flops:194.28, batch-reuse:1
@ 1877 train 4.5397 , allloss: 4.5397, dt: 683.54ms, fracRes: 0.3577, norm(attn): 1.1328, norm(output): 0.8008, norm(x): 1.0631, norm(y): 0.9878, norm:0.6678, tok/sec: 191753.46, flops:201.30, batch-reuse:1
@ 1878 train 4.5395 , allloss: 4.5395, dt: 696.38ms, fracRes: 0.3581, norm(attn): 1.1406, norm(output): 0.7969, norm(x): 1.0638, norm(y): 0.9879, norm:0.7965, tok/sec: 188218.39, flops:197.59, batch-reuse:1
@ 1879 train 4.5635 , allloss: 4.5635, dt: 696.68ms, fracRes: 0.3583, norm(attn): 1.1641, norm(output): 0.8086, norm(x): 1.0741, norm(y): 0.9880, norm:0.7700, tok/sec: 188136.85, flops:197.51, batch-reuse:1
@ 1880 train 4.4982 , allloss: 4.4982, dt: 694.91ms, fracRes: 0.3590, norm(attn): 1.1719, norm(output): 0.8008, norm(x): 1.0637, norm(y): 0.9880, norm:0.8730, tok/sec: 188617.09, flops:198.01, batch-reuse:1
@ 1881 train 4.4706 , allloss: 4.4706, dt: 695.28ms, fracRes: 0.3603, norm(attn): 1.1875, norm(output): 0.8047, norm(x): 1.0686, norm(y): 0.9879, norm:0.9117, tok/sec: 188518.06, flops:197.91, batch-reuse:1
@ 1882 train 4.5915 , allloss: 4.5915, dt: 689.03ms, fracRes: 0.3611, norm(attn): 1.2109, norm(output): 0.8008, norm(x): 1.0618, norm(y): 0.9880, norm:0.7014, tok/sec: 190226.00, flops:199.70, batch-reuse:1
@ 1883 train 4.4655 , allloss: 4.4655, dt: 712.63ms, fracRes: 0.3595, norm(attn): 1.2422, norm(output): 0.8008, norm(x): 1.0591, norm(y): 0.9879, norm:0.7441, tok/sec: 183928.12, flops:193.09, batch-reuse:1
@ 1884 train 4.4252 , allloss: 4.4252, dt: 711.60ms, fracRes: 0.3612, norm(attn): 1.2422, norm(output): 0.8047, norm(x): 1.0627, norm(y): 0.9879, norm:0.8782, tok/sec: 184193.97, flops:193.37, batch-reuse:1
@ 1885 train 4.5257 , allloss: 4.5257, dt: 710.92ms, fracRes: 0.3616, norm(attn): 1.2109, norm(output): 0.8008, norm(x): 1.0627, norm(y): 0.9881, norm:0.8060, tok/sec: 184369.96, flops:193.55, batch-reuse:1
@ 1886 train 4.4397 , allloss: 4.4397, dt: 701.33ms, fracRes: 0.3603, norm(attn): 1.2031, norm(output): 0.8008, norm(x): 1.0599, norm(y): 0.9879, norm:0.7590, tok/sec: 186890.13, flops:196.20, batch-reuse:1
@ 1887 train 4.4130 , allloss: 4.4130, dt: 711.26ms, fracRes: 0.3605, norm(attn): 1.2031, norm(output): 0.7734, norm(x): 1.0510, norm(y): 0.9880, norm:0.6905, tok/sec: 184280.72, flops:193.46, batch-reuse:1
@ 1888 train 4.5734 , allloss: 4.5734, dt: 703.32ms, fracRes: 0.3603, norm(attn): 1.2031, norm(output): 0.8008, norm(x): 1.0707, norm(y): 0.9880, norm:0.7013, tok/sec: 186363.08, flops:195.64, batch-reuse:1
@ 1889 train 4.4273 , allloss: 4.4273, dt: 688.06ms, fracRes: 0.3599, norm(attn): 1.1562, norm(output): 0.7969, norm(x): 1.0662, norm(y): 0.9878, norm:0.7238, tok/sec: 190494.54, flops:199.98, batch-reuse:1
@ 1890 train 4.5920 , allloss: 4.5920, dt: 691.02ms, fracRes: 0.3594, norm(attn): 1.1719, norm(output): 0.8086, norm(x): 1.0685, norm(y): 0.9879, norm:0.7845, tok/sec: 189678.50, flops:199.12, batch-reuse:1
@ 1891 train 4.5313 , allloss: 4.5313, dt: 699.51ms, fracRes: 0.3607, norm(attn): 1.1875, norm(output): 0.8008, norm(x): 1.0660, norm(y): 0.9881, norm:0.6635, tok/sec: 187377.62, flops:196.71, batch-reuse:1
@ 1892 train 4.4401 , allloss: 4.4401, dt: 699.59ms, fracRes: 0.3600, norm(attn): 1.1719, norm(output): 0.7930, norm(x): 1.0611, norm(y): 0.9879, norm:0.7160, tok/sec: 187356.29, flops:196.69, batch-reuse:1
@ 1893 train 4.5574 , allloss: 4.5574, dt: 694.57ms, fracRes: 0.3610, norm(attn): 1.1641, norm(output): 0.7812, norm(x): 1.0536, norm(y): 0.9880, norm:0.7230, tok/sec: 188710.52, flops:198.11, batch-reuse:1
@ 1894 train 4.3880 , allloss: 4.3880, dt: 687.63ms, fracRes: 0.3607, norm(attn): 1.1328, norm(output): 0.7891, norm(x): 1.0568, norm(y): 0.9879, norm:0.8095, tok/sec: 190613.16, flops:200.11, batch-reuse:1
@ 1895 train 4.5519 , allloss: 4.5519, dt: 701.31ms, fracRes: 0.3601, norm(attn): 1.1484, norm(output): 0.8008, norm(x): 1.0670, norm(y): 0.9881, norm:0.9226, tok/sec: 186896.29, flops:196.20, batch-reuse:1
@ 1896 train 4.6473 , allloss: 4.6473, dt: 698.45ms, fracRes: 0.3602, norm(attn): 1.1328, norm(output): 0.7969, norm(x): 1.0678, norm(y): 0.9882, norm:0.8344, tok/sec: 187660.71, flops:197.01, batch-reuse:1
@ 1897 train 4.5654 , allloss: 4.5654, dt: 690.05ms, fracRes: 0.3616, norm(attn): 1.1562, norm(output): 0.7891, norm(x): 1.0618, norm(y): 0.9882, norm:0.8533, tok/sec: 189945.75, flops:199.41, batch-reuse:1
@ 1898 train 4.5353 , allloss: 4.5353, dt: 687.05ms, fracRes: 0.3599, norm(attn): 1.1406, norm(output): 0.8008, norm(x): 1.0601, norm(y): 0.9881, norm:0.8049, tok/sec: 190774.56, flops:200.28, batch-reuse:1
@ 1899 train 4.5067 , allloss: 4.5067, dt: 689.57ms, fracRes: 0.3622, norm(attn): 1.1406, norm(output): 0.8086, norm(x): 1.0652, norm(y): 0.9880, norm:0.8018, tok/sec: 190079.07, flops:199.55, batch-reuse:1
@ 1900 train 4.4925 , allloss: 4.4925, dt: 688.13ms, fracRes: 0.3618, norm(attn): 1.1406, norm(output): 0.8125, norm(x): 1.0659, norm(y): 0.9881, norm:0.7140, tok/sec: 190474.74, flops:199.96, batch-reuse:1
@ 1901 train 4.5367 , allloss: 4.5367, dt: 699.07ms, fracRes: 0.3619, norm(attn): 1.1484, norm(output): 0.8086, norm(x): 1.0724, norm(y): 0.9881, norm:0.7395, tok/sec: 187493.93, flops:196.83, batch-reuse:1
@ 1902 train 4.4994 , allloss: 4.4994, dt: 701.63ms, fracRes: 0.3615, norm(attn): 1.1328, norm(output): 0.8008, norm(x): 1.0642, norm(y): 0.9880, norm:0.7770, tok/sec: 186809.67, flops:196.11, batch-reuse:1
@ 1903 train 4.5152 , allloss: 4.5152, dt: 701.46ms, fracRes: 0.3627, norm(attn): 1.1250, norm(output): 0.8008, norm(x): 1.0709, norm(y): 0.9880, norm:0.7251, tok/sec: 186856.08, flops:196.16, batch-reuse:1
@ 1904 train 4.4876 , allloss: 4.4876, dt: 689.98ms, fracRes: 0.3615, norm(attn): 1.1328, norm(output): 0.8008, norm(x): 1.0713, norm(y): 0.9882, norm:0.7119, tok/sec: 189964.79, flops:199.43, batch-reuse:1
@ 1905 train 4.4469 , allloss: 4.4469, dt: 693.17ms, fracRes: 0.3603, norm(attn): 1.1250, norm(output): 0.7891, norm(x): 1.0543, norm(y): 0.9881, norm:0.7158, tok/sec: 189089.64, flops:198.51, batch-reuse:1
@ 1906 train 4.4731 , allloss: 4.4731, dt: 698.16ms, fracRes: 0.3600, norm(attn): 1.1250, norm(output): 0.7969, norm(x): 1.0620, norm(y): 0.9880, norm:0.7470, tok/sec: 187738.71, flops:197.09, batch-reuse:1
@ 1907 train 4.4982 , allloss: 4.4982, dt: 690.70ms, fracRes: 0.3605, norm(attn): 1.1172, norm(output): 0.7891, norm(x): 1.0605, norm(y): 0.9882, norm:0.6697, tok/sec: 189766.17, flops:199.22, batch-reuse:1
@ 1908 train 4.4921 , allloss: 4.4921, dt: 698.22ms, fracRes: 0.3604, norm(attn): 1.1250, norm(output): 0.7891, norm(x): 1.0603, norm(y): 0.9881, norm:0.7940, tok/sec: 187721.78, flops:197.07, batch-reuse:1
@ 1909 train 4.6988 , allloss: 4.6988, dt: 697.17ms, fracRes: 0.3611, norm(attn): 1.1016, norm(output): 0.7891, norm(x): 1.0538, norm(y): 0.9883, norm:0.8117, tok/sec: 188006.63, flops:197.37, batch-reuse:1
@ 1910 train 4.5497 , allloss: 4.5497, dt: 703.09ms, fracRes: 0.3614, norm(attn): 1.0859, norm(output): 0.7852, norm(x): 1.0588, norm(y): 0.9882, norm:0.7505, tok/sec: 186421.60, flops:195.71, batch-reuse:1
@ 1911 train 4.5563 , allloss: 4.5563, dt: 700.19ms, fracRes: 0.3624, norm(attn): 1.1016, norm(output): 0.8008, norm(x): 1.0712, norm(y): 0.9883, norm:0.7844, tok/sec: 187195.84, flops:196.52, batch-reuse:1
@ 1912 train 4.5026 , allloss: 4.5026, dt: 701.79ms, fracRes: 0.3627, norm(attn): 1.0938, norm(output): 0.7969, norm(x): 1.0687, norm(y): 0.9883, norm:1.0245, tok/sec: 186767.84, flops:196.07, batch-reuse:1
@ 1913 train 4.5047 , allloss: 4.5047, dt: 695.51ms, fracRes: 0.3628, norm(attn): 1.0703, norm(output): 0.7812, norm(x): 1.0557, norm(y): 0.9882, norm:0.8811, tok/sec: 188454.22, flops:197.84, batch-reuse:1
@ 1914 train 4.4597 , allloss: 4.4597, dt: 701.61ms, fracRes: 0.3629, norm(attn): 1.0625, norm(output): 0.7891, norm(x): 1.0583, norm(y): 0.9882, norm:1.2885, tok/sec: 186815.06, flops:196.12, batch-reuse:1
@ 1915 train 4.4794 , allloss: 4.4794, dt: 688.34ms, fracRes: 0.3647, norm(attn): 1.0938, norm(output): 0.7969, norm(x): 1.0638, norm(y): 0.9882, norm:0.8440, tok/sec: 190417.61, flops:199.90, batch-reuse:1
@ 1916 train 4.6100 , allloss: 4.6100, dt: 693.84ms, fracRes: 0.3642, norm(attn): 1.0859, norm(output): 0.8008, norm(x): 1.0734, norm(y): 0.9881, norm:0.8149, tok/sec: 188909.01, flops:198.32, batch-reuse:1
@ 1917 train 4.5365 , allloss: 4.5365, dt: 693.90ms, fracRes: 0.3638, norm(attn): 1.0781, norm(output): 0.8086, norm(x): 1.0710, norm(y): 0.9878, norm:1.3541, tok/sec: 188890.90, flops:198.30, batch-reuse:1
@ 1918 train 4.5951 , allloss: 4.5951, dt: 693.24ms, fracRes: 0.3630, norm(attn): 1.0859, norm(output): 0.7969, norm(x): 1.0635, norm(y): 0.9880, norm:0.7015, tok/sec: 189072.73, flops:198.49, batch-reuse:1
@ 1919 train 4.4387 , allloss: 4.4387, dt: 700.83ms, fracRes: 0.3631, norm(attn): 1.0938, norm(output): 0.8125, norm(x): 1.0748, norm(y): 0.9880, norm:1.0339, tok/sec: 187023.71, flops:196.34, batch-reuse:1
@ 1920 train 4.5151 , allloss: 4.5151, dt: 696.60ms, fracRes: 0.3642, norm(attn): 1.0859, norm(output): 0.8164, norm(x): 1.0774, norm(y): 0.9881, norm:0.9429, tok/sec: 188158.36, flops:197.53, batch-reuse:1
@ 1921 train 4.5102 , allloss: 4.5102, dt: 698.92ms, fracRes: 0.3645, norm(attn): 1.0859, norm(output): 0.8125, norm(x): 1.0795, norm(y): 0.9882, norm:0.7099, tok/sec: 187535.82, flops:196.88, batch-reuse:1
@ 1922 train 4.4302 , allloss: 4.4302, dt: 698.20ms, fracRes: 0.3645, norm(attn): 1.0781, norm(output): 0.8047, norm(x): 1.0709, norm(y): 0.9882, norm:0.7636, tok/sec: 187729.67, flops:197.08, batch-reuse:1
@ 1923 train 4.4871 , allloss: 4.4871, dt: 694.19ms, fracRes: 0.3654, norm(attn): 1.0781, norm(output): 0.8203, norm(x): 1.0845, norm(y): 0.9880, norm:0.8592, tok/sec: 188811.82, flops:198.21, batch-reuse:1
@ 1924 train 4.4929 , allloss: 4.4929, dt: 704.15ms, fracRes: 0.3666, norm(attn): 1.0781, norm(output): 0.8086, norm(x): 1.0727, norm(y): 0.9883, norm:0.6371, tok/sec: 186142.48, flops:195.41, batch-reuse:1
@ 1925 train 4.4943 , allloss: 4.4943, dt: 706.60ms, fracRes: 0.3669, norm(attn): 1.0625, norm(output): 0.8125, norm(x): 1.0737, norm(y): 0.9882, norm:0.7443, tok/sec: 185496.01, flops:194.73, batch-reuse:1
@ 1926 train 4.5330 , allloss: 4.5330, dt: 708.51ms, fracRes: 0.3674, norm(attn): 1.0625, norm(output): 0.7930, norm(x): 1.0654, norm(y): 0.9882, norm:0.7250, tok/sec: 184997.89, flops:194.21, batch-reuse:1
@ 1927 train 4.4865 , allloss: 4.4865, dt: 700.11ms, fracRes: 0.3684, norm(attn): 1.0469, norm(output): 0.7930, norm(x): 1.0666, norm(y): 0.9880, norm:0.7168, tok/sec: 187216.05, flops:196.54, batch-reuse:1
@ 1928 train 4.5052 , allloss: 4.5052, dt: 715.34ms, fracRes: 0.3677, norm(attn): 1.0547, norm(output): 0.7812, norm(x): 1.0603, norm(y): 0.9882, norm:0.6645, tok/sec: 183229.58, flops:192.35, batch-reuse:1
@ 1929 train 4.4928 , allloss: 4.4928, dt: 705.10ms, fracRes: 0.3675, norm(attn): 1.0469, norm(output): 0.7812, norm(x): 1.0547, norm(y): 0.9884, norm:0.7094, tok/sec: 185890.53, flops:195.15, batch-reuse:1
@ 1930 train 4.4177 , allloss: 4.4177, dt: 694.15ms, fracRes: 0.3668, norm(attn): 1.0547, norm(output): 0.8008, norm(x): 1.0696, norm(y): 0.9882, norm:0.6496, tok/sec: 188823.17, flops:198.23, batch-reuse:1
@ 1931 train 4.5395 , allloss: 4.5395, dt: 687.51ms, fracRes: 0.3673, norm(attn): 1.0625, norm(output): 0.8086, norm(x): 1.0771, norm(y): 0.9882, norm:0.7107, tok/sec: 190646.81, flops:200.14, batch-reuse:1
@ 1932 train 4.5917 , allloss: 4.5917, dt: 695.33ms, fracRes: 0.3661, norm(attn): 1.0469, norm(output): 0.7930, norm(x): 1.0711, norm(y): 0.9885, norm:0.7402, tok/sec: 188504.36, flops:197.89, batch-reuse:1
@ 1933 train 4.5546 , allloss: 4.5546, dt: 697.95ms, fracRes: 0.3657, norm(attn): 1.0469, norm(output): 0.8008, norm(x): 1.0702, norm(y): 0.9883, norm:0.7096, tok/sec: 187795.91, flops:197.15, batch-reuse:1
@ 1934 train 4.5129 , allloss: 4.5129, dt: 700.86ms, fracRes: 0.3658, norm(attn): 1.0547, norm(output): 0.8164, norm(x): 1.0862, norm(y): 0.9882, norm:0.7421, tok/sec: 187014.86, flops:196.33, batch-reuse:1
@ 1935 train 4.4554 , allloss: 4.4554, dt: 694.80ms, fracRes: 0.3655, norm(attn): 1.0469, norm(output): 0.7969, norm(x): 1.0628, norm(y): 0.9882, norm:0.7889, tok/sec: 188645.89, flops:198.04, batch-reuse:1
@ 1936 train 4.4871 , allloss: 4.4871, dt: 702.47ms, fracRes: 0.3655, norm(attn): 1.0469, norm(output): 0.7852, norm(x): 1.0609, norm(y): 0.9883, norm:0.8994, tok/sec: 186588.64, flops:195.88, batch-reuse:1
@ 1937 train 4.4443 , allloss: 4.4443, dt: 703.06ms, fracRes: 0.3654, norm(attn): 1.0469, norm(output): 0.7891, norm(x): 1.0630, norm(y): 0.9883, norm:0.7984, tok/sec: 186431.15, flops:195.72, batch-reuse:1
@ 1938 train 4.4705 , allloss: 4.4705, dt: 687.25ms, fracRes: 0.3659, norm(attn): 1.0625, norm(output): 0.8008, norm(x): 1.0715, norm(y): 0.9883, norm:0.7815, tok/sec: 190719.36, flops:200.22, batch-reuse:1
@ 1939 train 4.4513 , allloss: 4.4513, dt: 693.56ms, fracRes: 0.3652, norm(attn): 1.0469, norm(output): 0.7969, norm(x): 1.0630, norm(y): 0.9884, norm:0.6441, tok/sec: 188984.53, flops:198.40, batch-reuse:1
@ 1940 train 4.5782 , allloss: 4.5782, dt: 696.61ms, fracRes: 0.3649, norm(attn): 1.0547, norm(output): 0.8008, norm(x): 1.0639, norm(y): 0.9883, norm:1.0784, tok/sec: 188155.97, flops:197.53, batch-reuse:1
@ 1941 train 4.5604 , allloss: 4.5604, dt: 698.73ms, fracRes: 0.3658, norm(attn): 1.0625, norm(output): 0.7852, norm(x): 1.0601, norm(y): 0.9885, norm:1.0499, tok/sec: 187586.76, flops:196.93, batch-reuse:1
@ 1942 train 4.4690 , allloss: 4.4690, dt: 695.16ms, fracRes: 0.3664, norm(attn): 1.0625, norm(output): 0.7930, norm(x): 1.0627, norm(y): 0.9884, norm:0.7442, tok/sec: 188549.16, flops:197.94, batch-reuse:1
@ 1943 train 4.5451 , allloss: 4.5451, dt: 684.39ms, fracRes: 0.3657, norm(attn): 1.0625, norm(output): 0.7812, norm(x): 1.0552, norm(y): 0.9886, norm:0.9250, tok/sec: 191515.38, flops:201.05, batch-reuse:1
@ 1944 train 4.4922 , allloss: 4.4922, dt: 696.85ms, fracRes: 0.3666, norm(attn): 1.0547, norm(output): 0.7891, norm(x): 1.0613, norm(y): 0.9884, norm:0.8143, tok/sec: 188093.01, flops:197.46, batch-reuse:1
@ 1945 train 4.4237 , allloss: 4.4237, dt: 686.56ms, fracRes: 0.3664, norm(attn): 1.0625, norm(output): 0.7930, norm(x): 1.0662, norm(y): 0.9884, norm:0.7406, tok/sec: 190911.76, flops:200.42, batch-reuse:1
@ 1946 train 4.4004 , allloss: 4.4004, dt: 694.41ms, fracRes: 0.3656, norm(attn): 1.0625, norm(output): 0.7891, norm(x): 1.0549, norm(y): 0.9882, norm:0.8688, tok/sec: 188752.63, flops:198.15, batch-reuse:1
@ 1947 train 4.5901 , allloss: 4.5901, dt: 681.37ms, fracRes: 0.3664, norm(attn): 1.0781, norm(output): 0.7812, norm(x): 1.0570, norm(y): 0.9884, norm:0.7492, tok/sec: 192365.85, flops:201.95, batch-reuse:1
@ 1948 train 4.3655 , allloss: 4.3655, dt: 698.89ms, fracRes: 0.3644, norm(attn): 1.0781, norm(output): 0.7891, norm(x): 1.0616, norm(y): 0.9883, norm:0.7390, tok/sec: 187541.90, flops:196.88, batch-reuse:1
@ 1949 train 4.4947 , allloss: 4.4947, dt: 701.52ms, fracRes: 0.3645, norm(attn): 1.0625, norm(output): 0.7930, norm(x): 1.0601, norm(y): 0.9885, norm:0.6936, tok/sec: 186839.51, flops:196.14, batch-reuse:1
@ 1950 train 4.5431 , allloss: 4.5431, dt: 697.06ms, fracRes: 0.3640, norm(attn): 1.0781, norm(output): 0.7969, norm(x): 1.0712, norm(y): 0.9887, norm:0.6812, tok/sec: 188036.78, flops:197.40, batch-reuse:1
@ 1951 train 4.4306 , allloss: 4.4306, dt: 699.75ms, fracRes: 0.3644, norm(attn): 1.0703, norm(output): 0.7891, norm(x): 1.0632, norm(y): 0.9885, norm:0.7899, tok/sec: 187312.95, flops:196.64, batch-reuse:1
@ 1952 train 4.4294 , allloss: 4.4294, dt: 700.38ms, fracRes: 0.3651, norm(attn): 1.0703, norm(output): 0.7969, norm(x): 1.0646, norm(y): 0.9884, norm:0.7826, tok/sec: 187143.08, flops:196.46, batch-reuse:1
@ 1953 train 4.4448 , allloss: 4.4448, dt: 700.61ms, fracRes: 0.3634, norm(attn): 1.0703, norm(output): 0.7930, norm(x): 1.0627, norm(y): 0.9882, norm:0.8655, tok/sec: 187083.79, flops:196.40, batch-reuse:1
@ 1954 train 4.4362 , allloss: 4.4362, dt: 697.56ms, fracRes: 0.3631, norm(attn): 1.0625, norm(output): 0.7773, norm(x): 1.0513, norm(y): 0.9884, norm:0.8336, tok/sec: 187901.43, flops:197.26, batch-reuse:1
@ 1955 train 4.4129 , allloss: 4.4129, dt: 695.46ms, fracRes: 0.3631, norm(attn): 1.0547, norm(output): 0.8008, norm(x): 1.0679, norm(y): 0.9884, norm:0.8730, tok/sec: 188468.75, flops:197.85, batch-reuse:1
@ 1956 train 4.3222 , allloss: 4.3222, dt: 695.88ms, fracRes: 0.3648, norm(attn): 1.0547, norm(output): 0.7812, norm(x): 1.0567, norm(y): 0.9883, norm:0.7412, tok/sec: 188355.43, flops:197.74, batch-reuse:1
@ 1957 train 4.3937 , allloss: 4.3937, dt: 696.07ms, fracRes: 0.3651, norm(attn): 1.0547, norm(output): 0.7852, norm(x): 1.0616, norm(y): 0.9884, norm:0.6559, tok/sec: 188301.95, flops:197.68, batch-reuse:1
@ 1958 train 4.4203 , allloss: 4.4203, dt: 692.25ms, fracRes: 0.3660, norm(attn): 1.0547, norm(output): 0.7812, norm(x): 1.0592, norm(y): 0.9884, norm:0.7079, tok/sec: 189342.32, flops:198.77, batch-reuse:1
@ 1959 train 4.3633 , allloss: 4.3633, dt: 696.36ms, fracRes: 0.3679, norm(attn): 1.0312, norm(output): 0.7734, norm(x): 1.0561, norm(y): 0.9885, norm:0.7175, tok/sec: 188225.35, flops:197.60, batch-reuse:1
@ 1960 train 4.3018 , allloss: 4.3018, dt: 699.81ms, fracRes: 0.3678, norm(attn): 1.0469, norm(output): 0.7695, norm(x): 1.0525, norm(y): 0.9884, norm:0.7117, tok/sec: 187295.91, flops:196.62, batch-reuse:1
@ 1961 train 4.4453 , allloss: 4.4453, dt: 691.24ms, fracRes: 0.3680, norm(attn): 1.0312, norm(output): 0.7891, norm(x): 1.0719, norm(y): 0.9883, norm:0.6671, tok/sec: 189618.51, flops:199.06, batch-reuse:1
@ 1962 train 4.3825 , allloss: 4.3825, dt: 692.37ms, fracRes: 0.3674, norm(attn): 1.0547, norm(output): 0.7578, norm(x): 1.0464, norm(y): 0.9888, norm:0.7609, tok/sec: 189309.85, flops:198.74, batch-reuse:1
@ 1963 train 4.4730 , allloss: 4.4730, dt: 694.05ms, fracRes: 0.3664, norm(attn): 1.0312, norm(output): 0.7812, norm(x): 1.0602, norm(y): 0.9886, norm:0.7253, tok/sec: 188850.60, flops:198.26, batch-reuse:1
@ 1964 train 4.3897 , allloss: 4.3897, dt: 683.09ms, fracRes: 0.3669, norm(attn): 1.0156, norm(output): 0.7773, norm(x): 1.0600, norm(y): 0.9886, norm:0.6132, tok/sec: 191880.01, flops:201.44, batch-reuse:1
@ 1965 train 4.4487 , allloss: 4.4487, dt: 704.71ms, fracRes: 0.3665, norm(attn): 1.0156, norm(output): 0.7656, norm(x): 1.0474, norm(y): 0.9887, norm:0.6399, tok/sec: 185993.61, flops:195.26, batch-reuse:1
@ 1966 train 4.3351 , allloss: 4.3351, dt: 709.61ms, fracRes: 0.3655, norm(attn): 1.0156, norm(output): 0.7852, norm(x): 1.0687, norm(y): 0.9883, norm:0.6525, tok/sec: 184710.23, flops:193.91, batch-reuse:1
@ 1967 train 4.4026 , allloss: 4.4026, dt: 709.03ms, fracRes: 0.3650, norm(attn): 1.0156, norm(output): 0.9102, norm(x): 1.1958, norm(y): 0.9885, norm:0.6855, tok/sec: 184862.15, flops:194.07, batch-reuse:1
@ 1968 train 4.4041 , allloss: 4.4041, dt: 700.47ms, fracRes: 0.3666, norm(attn): 1.0391, norm(output): 0.7656, norm(x): 1.0474, norm(y): 0.9885, norm:0.7271, tok/sec: 187119.13, flops:196.44, batch-reuse:1
@ 1969 train 4.4859 , allloss: 4.4859, dt: 690.80ms, fracRes: 0.3676, norm(attn): 1.0547, norm(output): 0.7656, norm(x): 1.0493, norm(y): 0.9887, norm:0.7843, tok/sec: 189739.38, flops:199.19, batch-reuse:1
@ 1970 train 4.3814 , allloss: 4.3814, dt: 700.46ms, fracRes: 0.3673, norm(attn): 1.0625, norm(output): 0.7891, norm(x): 1.0678, norm(y): 0.9885, norm:0.8454, tok/sec: 187122.82, flops:196.44, batch-reuse:1
@ 1971 train 4.4277 , allloss: 4.4277, dt: 703.65ms, fracRes: 0.3680, norm(attn): 1.0625, norm(output): 0.7891, norm(x): 1.0676, norm(y): 0.9886, norm:0.7885, tok/sec: 186275.37, flops:195.55, batch-reuse:1
@ 1972 train 4.3989 , allloss: 4.3989, dt: 701.14ms, fracRes: 0.3676, norm(attn): 1.0703, norm(output): 0.7969, norm(x): 1.0706, norm(y): 0.9884, norm:0.6059, tok/sec: 186942.24, flops:196.25, batch-reuse:1
@ 1973 train 4.3956 , allloss: 4.3956, dt: 696.67ms, fracRes: 0.3671, norm(attn): 1.0859, norm(output): 0.7969, norm(x): 1.0663, norm(y): 0.9884, norm:0.6722, tok/sec: 188141.93, flops:197.51, batch-reuse:1
@ 1974 train 4.4324 , allloss: 4.4324, dt: 696.78ms, fracRes: 0.3679, norm(attn): 1.0859, norm(output): 0.8008, norm(x): 1.0736, norm(y): 0.9883, norm:0.5975, tok/sec: 188110.13, flops:197.48, batch-reuse:1
@ 1975 train 4.2509 , allloss: 4.2509, dt: 709.35ms, fracRes: 0.3689, norm(attn): 1.0859, norm(output): 0.7891, norm(x): 1.0697, norm(y): 0.9884, norm:0.8173, tok/sec: 184777.77, flops:193.98, batch-reuse:1
@ 1976 train 4.4463 , allloss: 4.4463, dt: 695.98ms, fracRes: 0.3702, norm(attn): 1.0859, norm(output): 0.8086, norm(x): 1.0797, norm(y): 0.9885, norm:0.7560, tok/sec: 188326.07, flops:197.71, batch-reuse:1
@ 1977 train 4.3191 , allloss: 4.3191, dt: 698.71ms, fracRes: 0.3699, norm(attn): 1.1016, norm(output): 0.7773, norm(x): 1.0603, norm(y): 0.9885, norm:0.6461, tok/sec: 187591.75, flops:196.93, batch-reuse:1
@ 1978 train 4.4316 , allloss: 4.4316, dt: 697.10ms, fracRes: 0.3695, norm(attn): 1.0859, norm(output): 0.7969, norm(x): 1.0674, norm(y): 0.9886, norm:0.7065, tok/sec: 188025.79, flops:197.39, batch-reuse:1
@ 1979 train 4.4324 , allloss: 4.4324, dt: 695.56ms, fracRes: 0.3699, norm(attn): 1.0781, norm(output): 0.7891, norm(x): 1.0630, norm(y): 0.9885, norm:0.6967, tok/sec: 188441.68, flops:197.83, batch-reuse:1
@ 1980 train 4.4002 , allloss: 4.4002, dt: 708.53ms, fracRes: 0.3704, norm(attn): 1.0625, norm(output): 0.7852, norm(x): 1.0654, norm(y): 0.9884, norm:0.8317, tok/sec: 184990.67, flops:194.20, batch-reuse:1
@ 1981 train 4.4124 , allloss: 4.4124, dt: 695.43ms, fracRes: 0.3705, norm(attn): 1.0547, norm(output): 0.7812, norm(x): 1.0631, norm(y): 0.9886, norm:0.9566, tok/sec: 188475.09, flops:197.86, batch-reuse:1
@ 1982 train 4.3802 , allloss: 4.3802, dt: 689.75ms, fracRes: 0.3713, norm(attn): 1.0547, norm(output): 0.7695, norm(x): 1.0565, norm(y): 0.9887, norm:0.8129, tok/sec: 190028.68, flops:199.49, batch-reuse:1
@ 1983 train 4.4477 , allloss: 4.4477, dt: 698.72ms, fracRes: 0.3702, norm(attn): 1.0547, norm(output): 0.7773, norm(x): 1.0598, norm(y): 0.9886, norm:0.5651, tok/sec: 187587.46, flops:196.93, batch-reuse:1
@ 1984 train 4.4101 , allloss: 4.4101, dt: 699.27ms, fracRes: 0.3711, norm(attn): 1.0625, norm(output): 0.7734, norm(x): 1.0563, norm(y): 0.9888, norm:0.8474, tok/sec: 187439.97, flops:196.77, batch-reuse:1
@ 1985 train 4.4005 , allloss: 4.4005, dt: 692.56ms, fracRes: 0.3718, norm(attn): 1.0625, norm(output): 0.7656, norm(x): 1.0550, norm(y): 0.9888, norm:0.6888, tok/sec: 189258.11, flops:198.68, batch-reuse:1
@ 1986 train 4.4681 , allloss: 4.4681, dt: 694.91ms, fracRes: 0.3718, norm(attn): 1.0625, norm(output): 0.7812, norm(x): 1.0658, norm(y): 0.9887, norm:0.6728, tok/sec: 188617.35, flops:198.01, batch-reuse:1
@ 1987 train 4.4577 , allloss: 4.4577, dt: 695.92ms, fracRes: 0.3704, norm(attn): 1.0781, norm(output): 0.7773, norm(x): 1.0632, norm(y): 0.9886, norm:0.7541, tok/sec: 188343.36, flops:197.72, batch-reuse:1
@ 1988 train 4.4005 , allloss: 4.4005, dt: 689.43ms, fracRes: 0.3720, norm(attn): 1.0781, norm(output): 0.7773, norm(x): 1.0636, norm(y): 0.9887, norm:0.6597, tok/sec: 190117.00, flops:199.59, batch-reuse:1
@ 1989 train 4.4250 , allloss: 4.4250, dt: 682.40ms, fracRes: 0.3721, norm(attn): 1.0781, norm(output): 0.7812, norm(x): 1.0594, norm(y): 0.9885, norm:0.6914, tok/sec: 192074.97, flops:201.64, batch-reuse:1
@ 1990 train 4.4613 , allloss: 4.4613, dt: 689.30ms, fracRes: 0.3715, norm(attn): 1.0625, norm(output): 0.7773, norm(x): 1.0585, norm(y): 0.9885, norm:0.7575, tok/sec: 190152.64, flops:199.62, batch-reuse:1
@ 1991 train 4.3360 , allloss: 4.3360, dt: 695.33ms, fracRes: 0.3717, norm(attn): 1.0625, norm(output): 0.7812, norm(x): 1.0586, norm(y): 0.9885, norm:0.6334, tok/sec: 188502.23, flops:197.89, batch-reuse:1
@ 1992 train 4.4240 , allloss: 4.4240, dt: 713.68ms, fracRes: 0.3711, norm(attn): 1.0625, norm(output): 0.7852, norm(x): 1.0619, norm(y): 0.9887, norm:0.6030, tok/sec: 183656.66, flops:192.80, batch-reuse:1
@ 1993 train 4.2890 , allloss: 4.2890, dt: 717.10ms, fracRes: 0.3717, norm(attn): 1.0625, norm(output): 0.7734, norm(x): 1.0579, norm(y): 0.9885, norm:0.6994, tok/sec: 182781.82, flops:191.88, batch-reuse:1
@ 1994 train 4.3080 , allloss: 4.3080, dt: 713.18ms, fracRes: 0.3717, norm(attn): 1.0469, norm(output): 0.7891, norm(x): 1.0658, norm(y): 0.9884, norm:0.6746, tok/sec: 183786.08, flops:192.94, batch-reuse:1
@ 1995 train 4.3311 , allloss: 4.3311, dt: 714.32ms, fracRes: 0.3716, norm(attn): 1.0234, norm(output): 0.7812, norm(x): 1.0594, norm(y): 0.9887, norm:0.7393, tok/sec: 183492.62, flops:192.63, batch-reuse:1
@ 1996 train 4.3634 , allloss: 4.3634, dt: 711.53ms, fracRes: 0.3704, norm(attn): 1.0078, norm(output): 0.7734, norm(x): 1.0628, norm(y): 0.9885, norm:0.6716, tok/sec: 184210.20, flops:193.38, batch-reuse:1
@ 1997 train 4.3111 , allloss: 4.3111, dt: 709.57ms, fracRes: 0.3703, norm(attn): 1.0078, norm(output): 0.7773, norm(x): 1.0608, norm(y): 0.9886, norm:0.7631, tok/sec: 184719.35, flops:193.92, batch-reuse:1
@ 1998 train 4.2874 , allloss: 4.2874, dt: 706.37ms, fracRes: 0.3707, norm(attn): 0.9922, norm(output): 0.7773, norm(x): 1.0573, norm(y): 0.9885, norm:0.7243, tok/sec: 185556.61, flops:194.80, batch-reuse:1
@ 1999 train 4.2134 , allloss: 4.2134, dt: 709.19ms, fracRes: 0.3710, norm(attn): 0.9844, norm(output): 0.7656, norm(x): 1.0490, norm(y): 0.9884, norm:0.6173, tok/sec: 184818.52, flops:194.02, batch-reuse:1
@ 2000 val 4.4010
@ 2000 train 4.2989 , allloss: 4.2989, dt: 1067.81ms, fracRes: 0.3720, norm(attn): 0.9922, norm(output): 0.7617, norm(x): 1.0482, norm(y): 0.9886, norm:0.6769, tok/sec: 122748.50, flops:128.86, batch-reuse:1
@ 2001 train 4.3636 , allloss: 4.3636, dt: 823.48ms, fracRes: 0.3718, norm(attn): 1.0000, norm(output): 0.7695, norm(x): 1.0512, norm(y): 0.9885, norm:0.6586, tok/sec: 159167.92, flops:167.09, batch-reuse:1
@ 2002 train 4.3446 , allloss: 4.3446, dt: 700.33ms, fracRes: 0.3725, norm(attn): 1.0000, norm(output): 0.7695, norm(x): 1.0585, norm(y): 0.9886, norm:0.8164, tok/sec: 187156.52, flops:196.48, batch-reuse:1
@ 2003 train 4.3410 , allloss: 4.3410, dt: 700.04ms, fracRes: 0.3722, norm(attn): 0.9883, norm(output): 0.7695, norm(x): 1.0558, norm(y): 0.9885, norm:0.7969, tok/sec: 187233.78, flops:196.56, batch-reuse:1
@ 2004 train 4.3517 , allloss: 4.3517, dt: 700.76ms, fracRes: 0.3721, norm(attn): 0.9766, norm(output): 0.7656, norm(x): 1.0580, norm(y): 0.9886, norm:0.8410, tok/sec: 187042.03, flops:196.36, batch-reuse:1
@ 2005 train 4.2234 , allloss: 4.2234, dt: 695.83ms, fracRes: 0.3745, norm(attn): 0.9727, norm(output): 0.7695, norm(x): 1.0627, norm(y): 0.9885, norm:0.7742, tok/sec: 188367.24, flops:197.75, batch-reuse:1
@ 2006 train 4.3825 , allloss: 4.3825, dt: 702.15ms, fracRes: 0.3738, norm(attn): 0.9922, norm(output): 0.7734, norm(x): 1.0606, norm(y): 0.9887, norm:0.7227, tok/sec: 186672.84, flops:195.97, batch-reuse:1
@ 2007 train 4.2799 , allloss: 4.2799, dt: 695.48ms, fracRes: 0.3727, norm(attn): 0.9922, norm(output): 0.7539, norm(x): 1.0459, norm(y): 0.9885, norm:0.7615, tok/sec: 188463.13, flops:197.85, batch-reuse:1
@ 2008 train 4.3153 , allloss: 4.3153, dt: 693.62ms, fracRes: 0.3724, norm(attn): 0.9922, norm(output): 0.7656, norm(x): 1.0500, norm(y): 0.9888, norm:0.6312, tok/sec: 188966.67, flops:198.38, batch-reuse:1
@ 2009 train 4.2814 , allloss: 4.2814, dt: 697.52ms, fracRes: 0.3728, norm(attn): 0.9570, norm(output): 0.7656, norm(x): 1.0574, norm(y): 0.9887, norm:0.6169, tok/sec: 187910.30, flops:197.27, batch-reuse:1
@ 2010 train 4.3917 , allloss: 4.3917, dt: 682.69ms, fracRes: 0.3725, norm(attn): 0.9609, norm(output): 0.7617, norm(x): 1.0528, norm(y): 0.9888, norm:0.7469, tok/sec: 191994.20, flops:201.56, batch-reuse:1
@ 2011 train 4.1975 , allloss: 4.1975, dt: 700.54ms, fracRes: 0.3715, norm(attn): 0.9805, norm(output): 0.7852, norm(x): 1.0706, norm(y): 0.9883, norm:0.6594, tok/sec: 187102.51, flops:196.42, batch-reuse:1
@ 2012 train 4.2152 , allloss: 4.2152, dt: 694.88ms, fracRes: 0.3720, norm(attn): 0.9922, norm(output): 0.7656, norm(x): 1.0544, norm(y): 0.9885, norm:0.6434, tok/sec: 188626.73, flops:198.02, batch-reuse:1
@ 2013 train 4.2839 , allloss: 4.2839, dt: 712.43ms, fracRes: 0.3726, norm(attn): 0.9961, norm(output): 0.7617, norm(x): 1.0526, norm(y): 0.9885, norm:0.6746, tok/sec: 183979.58, flops:193.14, batch-reuse:1
@ 2014 train 4.2774 , allloss: 4.2774, dt: 712.38ms, fracRes: 0.3723, norm(attn): 0.9961, norm(output): 0.7617, norm(x): 1.0547, norm(y): 0.9887, norm:0.7013, tok/sec: 183992.02, flops:193.16, batch-reuse:1
@ 2015 train 4.2463 , allloss: 4.2463, dt: 686.53ms, fracRes: 0.3712, norm(attn): 0.9727, norm(output): 0.7578, norm(x): 1.0500, norm(y): 0.9887, norm:0.7194, tok/sec: 190918.59, flops:200.43, batch-reuse:1
@ 2016 train 4.3251 , allloss: 4.3251, dt: 684.59ms, fracRes: 0.3719, norm(attn): 0.9531, norm(output): 0.7656, norm(x): 1.0494, norm(y): 0.9888, norm:0.7384, tok/sec: 191460.42, flops:201.00, batch-reuse:1
@ 2017 train 4.2784 , allloss: 4.2784, dt: 694.88ms, fracRes: 0.3712, norm(attn): 0.9453, norm(output): 0.7578, norm(x): 1.0502, norm(y): 0.9886, norm:0.7689, tok/sec: 188624.92, flops:198.02, batch-reuse:1
@ 2018 train 4.3282 , allloss: 4.3282, dt: 685.46ms, fracRes: 0.3726, norm(attn): 0.9414, norm(output): 0.7734, norm(x): 1.0613, norm(y): 0.9885, norm:0.7225, tok/sec: 191218.55, flops:200.74, batch-reuse:1
@ 2019 train 4.3570 , allloss: 4.3570, dt: 683.07ms, fracRes: 0.3721, norm(attn): 0.9414, norm(output): 0.7656, norm(x): 1.0556, norm(y): 0.9884, norm:0.9365, tok/sec: 191886.11, flops:201.44, batch-reuse:1
@ 2020 train 4.2631 , allloss: 4.2631, dt: 695.96ms, fracRes: 0.3720, norm(attn): 0.9922, norm(output): 0.7656, norm(x): 1.0468, norm(y): 0.9886, norm:0.7919, tok/sec: 188332.26, flops:197.71, batch-reuse:1
@ 2021 train 4.2867 , allloss: 4.2867, dt: 694.31ms, fracRes: 0.3739, norm(attn): 1.0078, norm(output): 0.7734, norm(x): 1.0647, norm(y): 0.9886, norm:0.9397, tok/sec: 188780.18, flops:198.18, batch-reuse:1
@ 2022 train 4.3443 , allloss: 4.3443, dt: 703.56ms, fracRes: 0.3753, norm(attn): 1.0547, norm(output): 0.7812, norm(x): 1.0684, norm(y): 0.9886, norm:0.9501, tok/sec: 186298.54, flops:195.58, batch-reuse:1
@ 2023 train 4.3328 , allloss: 4.3328, dt: 691.81ms, fracRes: 0.3759, norm(attn): 1.0703, norm(output): 0.8008, norm(x): 1.0802, norm(y): 0.9887, norm:0.7967, tok/sec: 189463.69, flops:198.90, batch-reuse:1
@ 2024 train 4.2782 , allloss: 4.2782, dt: 700.27ms, fracRes: 0.3774, norm(attn): 1.0703, norm(output): 0.7930, norm(x): 1.0707, norm(y): 0.9886, norm:0.7030, tok/sec: 187172.71, flops:196.49, batch-reuse:1
@ 2025 train 4.3707 , allloss: 4.3707, dt: 709.08ms, fracRes: 0.3767, norm(attn): 1.0859, norm(output): 0.7852, norm(x): 1.0691, norm(y): 0.9890, norm:0.8838, tok/sec: 184847.11, flops:194.05, batch-reuse:1
@ 2026 train 4.2830 , allloss: 4.2830, dt: 707.76ms, fracRes: 0.3762, norm(attn): 1.1094, norm(output): 0.7930, norm(x): 1.0737, norm(y): 0.9887, norm:0.7556, tok/sec: 185193.26, flops:194.42, batch-reuse:1
@ 2027 train 4.3461 , allloss: 4.3461, dt: 688.98ms, fracRes: 0.3767, norm(attn): 1.1250, norm(output): 0.7812, norm(x): 1.0620, norm(y): 0.9886, norm:0.7718, tok/sec: 190241.21, flops:199.72, batch-reuse:1
@ 2028 train 4.6481 , allloss: 4.6481, dt: 696.33ms, fracRes: 0.3781, norm(attn): 1.1094, norm(output): 0.7969, norm(x): 1.0813, norm(y): 0.9889, norm:0.9265, tok/sec: 188232.12, flops:197.61, batch-reuse:1
@ 2029 train 4.3268 , allloss: 4.3268, dt: 687.92ms, fracRes: 0.3777, norm(attn): 1.1250, norm(output): 0.7930, norm(x): 1.0823, norm(y): 0.9890, norm:1.2477, tok/sec: 190533.56, flops:200.02, batch-reuse:1
@ 2030 train 4.1413 , allloss: 4.1413, dt: 688.51ms, fracRes: 0.3776, norm(attn): 1.1328, norm(output): 0.7773, norm(x): 1.0632, norm(y): 0.9885, norm:0.8363, tok/sec: 190371.84, flops:199.85, batch-reuse:1
@ 2031 train 4.2188 , allloss: 4.2188, dt: 678.99ms, fracRes: 0.3774, norm(attn): 1.1406, norm(output): 0.7969, norm(x): 1.0726, norm(y): 0.9885, norm:0.8621, tok/sec: 193039.76, flops:202.65, batch-reuse:1
@ 2032 train 4.2458 , allloss: 4.2458, dt: 703.44ms, fracRes: 0.3779, norm(attn): 1.1562, norm(output): 0.7969, norm(x): 1.0736, norm(y): 0.9886, norm:0.8297, tok/sec: 186329.92, flops:195.61, batch-reuse:1
@ 2033 train 4.1888 , allloss: 4.1888, dt: 701.61ms, fracRes: 0.3780, norm(attn): 1.1562, norm(output): 0.7969, norm(x): 1.0744, norm(y): 0.9885, norm:0.7337, tok/sec: 186815.44, flops:196.12, batch-reuse:1
@ 2034 train 4.2781 , allloss: 4.2781, dt: 691.33ms, fracRes: 0.3784, norm(attn): 1.1406, norm(output): 0.7773, norm(x): 1.0634, norm(y): 0.9889, norm:0.7449, tok/sec: 189593.26, flops:199.04, batch-reuse:1
@ 2035 train 4.2147 , allloss: 4.2147, dt: 697.14ms, fracRes: 0.3785, norm(attn): 1.1328, norm(output): 0.7812, norm(x): 1.0658, norm(y): 0.9885, norm:0.7546, tok/sec: 188014.86, flops:197.38, batch-reuse:1
@ 2036 train 4.2707 , allloss: 4.2707, dt: 700.59ms, fracRes: 0.3789, norm(attn): 1.1484, norm(output): 0.7734, norm(x): 1.0563, norm(y): 0.9888, norm:0.7118, tok/sec: 187087.35, flops:196.40, batch-reuse:1
@ 2037 train 4.2194 , allloss: 4.2194, dt: 718.34ms, fracRes: 0.3786, norm(attn): 1.1562, norm(output): 0.7891, norm(x): 1.0699, norm(y): 0.9887, norm:0.6579, tok/sec: 182466.30, flops:191.55, batch-reuse:1
@ 2038 train 4.2612 , allloss: 4.2612, dt: 714.91ms, fracRes: 0.3797, norm(attn): 1.1562, norm(output): 0.7969, norm(x): 1.0782, norm(y): 0.9888, norm:0.6774, tok/sec: 183340.31, flops:192.47, batch-reuse:1
@ 2039 train 4.3411 , allloss: 4.3411, dt: 717.10ms, fracRes: 0.3791, norm(attn): 1.1562, norm(output): 0.7891, norm(x): 1.0754, norm(y): 0.9887, norm:0.6080, tok/sec: 182780.49, flops:191.88, batch-reuse:1
@ 2040 train 4.4311 , allloss: 4.4311, dt: 715.36ms, fracRes: 0.3776, norm(attn): 1.1641, norm(output): 0.7617, norm(x): 1.0565, norm(y): 0.9889, norm:0.7889, tok/sec: 183224.45, flops:192.35, batch-reuse:1
@ 2041 train 4.3483 , allloss: 4.3483, dt: 716.30ms, fracRes: 0.3797, norm(attn): 1.1406, norm(output): 0.7773, norm(x): 1.0682, norm(y): 0.9886, norm:0.7814, tok/sec: 182985.88, flops:192.10, batch-reuse:1
@ 2042 train 4.4866 , allloss: 4.4866, dt: 714.85ms, fracRes: 0.3773, norm(attn): 1.1406, norm(output): 0.7891, norm(x): 1.0722, norm(y): 0.9888, norm:0.8584, tok/sec: 183354.74, flops:192.49, batch-reuse:1
@ 2043 train 4.4847 , allloss: 4.4847, dt: 713.76ms, fracRes: 0.3774, norm(attn): 1.1719, norm(output): 0.7773, norm(x): 1.0676, norm(y): 0.9890, norm:0.7149, tok/sec: 183636.72, flops:192.78, batch-reuse:1
@ 2044 train 4.5467 , allloss: 4.5467, dt: 697.15ms, fracRes: 0.3763, norm(attn): 1.1719, norm(output): 0.7812, norm(x): 1.0707, norm(y): 0.9890, norm:0.6375, tok/sec: 188010.23, flops:197.37, batch-reuse:1
@ 2045 train 4.4370 , allloss: 4.4370, dt: 697.84ms, fracRes: 0.3757, norm(attn): 1.1719, norm(output): 0.7812, norm(x): 1.0653, norm(y): 0.9890, norm:0.7064, tok/sec: 187824.33, flops:197.18, batch-reuse:1
@ 2046 train 4.5281 , allloss: 4.5281, dt: 684.02ms, fracRes: 0.3766, norm(attn): 1.1562, norm(output): 0.7812, norm(x): 1.0673, norm(y): 0.9888, norm:0.7103, tok/sec: 191620.72, flops:201.16, batch-reuse:1
@ 2047 train 4.4271 , allloss: 4.4271, dt: 692.37ms, fracRes: 0.3777, norm(attn): 1.1641, norm(output): 0.7734, norm(x): 1.0619, norm(y): 0.9887, norm:0.7367, tok/sec: 189308.55, flops:198.74, batch-reuse:1
@ 2048 train 4.3861 , allloss: 4.3861, dt: 694.18ms, fracRes: 0.3773, norm(attn): 1.1797, norm(output): 0.7773, norm(x): 1.0598, norm(y): 0.9887, norm:0.7281, tok/sec: 188814.54, flops:198.22, batch-reuse:1
@ 2049 train 4.4933 , allloss: 4.4933, dt: 712.12ms, fracRes: 0.3775, norm(attn): 1.1953, norm(output): 0.7812, norm(x): 1.0662, norm(y): 0.9891, norm:0.7660, tok/sec: 184058.91, flops:193.23, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8594, 0.1416, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5273, 0.2197, 0.2539, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5859, 0.1055, 0.1670, 0.1416, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4844, 0.1074, 0.1982, 0.1289, 0.0801, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5469, 0.0786, 0.1377, 0.1104, 0.0781, 0.0491, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3789, 0.0933, 0.1748, 0.1133, 0.0645, 0.0786, 0.0962, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2451, 0.0952, 0.1318, 0.1240, 0.0786, 0.0933, 0.1475, 0.0859, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2373, 0.0825, 0.1357, 0.1162, 0.0608, 0.0757, 0.0889, 0.1387, 0.0640, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2422, 0.0713, 0.1123, 0.0864, 0.0593, 0.0635, 0.0669, 0.1387, 0.0869, 0.0723, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2383, 0.0894, 0.0898, 0.0723, 0.0708, 0.0703, 0.0767, 0.0894, 0.0669, 0.0693, 0.0664, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1533, 0.0894, 0.0913, 0.0884, 0.0549, 0.0723, 0.0674, 0.1172, 0.0618, 0.0649, 0.0713, 0.0684, 0.0000, 0.0000, 0.0000],
        [0.4434, 0.0417, 0.0728, 0.0430, 0.0298, 0.0320, 0.0444, 0.0591, 0.0211, 0.0454, 0.0500, 0.0349, 0.0820, 0.0000, 0.0000],
        [0.1699, 0.0645, 0.0737, 0.0640, 0.0447, 0.0479, 0.0557, 0.0859, 0.0449, 0.0510, 0.0471, 0.0640, 0.1367, 0.0503, 0.0000],
        [0.1064, 0.0713, 0.0649, 0.0718, 0.0498, 0.0491, 0.0566, 0.0879, 0.0610, 0.0388, 0.0452, 0.0442, 0.1099, 0.0840, 0.0593]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.1680, -1.1094, -0.8438, -1.0938, -1.2656, -1.1953, -0.9688, -0.7617, -1.3594, -0.9180, -0.7773, -1.1641, -0.6875, -1.3047, -0.9180],
        [ 0.0791, -1.7266, -0.5508, -0.9258, -1.2344, -1.2031, -1.1094, -0.2578, -1.1641, -1.0859, -0.9531, -0.8125,  0.0771, -0.9375, -0.1455],
        [ 0.0308, -0.8477, -0.7031, -0.2969, -0.8594, -1.0781, -0.7070, -0.2617, -0.7891, -1.0234, -0.7070, -0.5312,  0.0292, -0.6094, -0.0549],
        [ 0.1875, -1.5234, -1.0625, -1.2344, -1.7344, -1.4688, -1.2422, -0.8867, -1.5469, -1.0938, -0.9688, -1.5391, -0.8516, -1.3984, -0.9375],
        [ 0.1035, -1.4062, -0.7930, -1.2188, -1.6953, -1.4453, -1.1094, -0.8750, -1.4219, -1.2578, -1.1875, -1.1484, -0.4160, -1.2734, -0.5703],
        [ 0.1934, -1.7422, -1.1875, -1.4062, -1.7500, -2.2188, -1.7266, -1.1328, -1.7031, -1.8438, -1.4922, -1.7109, -0.8555, -1.4844, -1.0312],
        [ 0.1475, -1.2500, -0.6211, -1.0547, -1.6250, -1.4219, -1.2188, -0.6641, -1.3047, -1.1797, -1.1719, -1.3750, -0.3535, -1.1094, -0.7188],
        [ 0.0825, -0.8633, -0.5391, -0.5977, -1.0547, -0.8828, -0.4277, -0.9688, -0.8945, -0.7305, -0.5039, -0.6523, -0.4707, -0.8242, -0.1631],
        [ 0.0718, -0.9844, -0.4883, -0.6445, -1.2891, -1.0703, -0.9141, -0.4648, -1.2422, -1.1406, -1.1016, -0.9883, -0.0300, -0.8633, -0.3066],
        [ 0.1025, -1.1250, -0.6641, -0.9258, -1.3047, -1.2344, -1.1797, -0.4590, -0.9258, -1.1094, -1.1172, -1.0391, -0.3125, -0.8047, -0.5430],
        [ 0.1289, -0.8477, -0.8438, -1.0625, -1.0859, -1.0938, -1.0078, -0.8516, -1.1406, -1.1016, -1.1484, -1.3203, -0.5352, -0.9414, -0.8281],
        [ 0.0168, -0.5273, -0.5039, -0.5352, -1.0078, -0.7422, -0.8125, -0.2559, -0.8945, -0.8477, -0.7500, -0.7969, -0.1553, -0.8438, -0.1147],
        [ 0.2695, -2.0938, -1.5391, -2.0625, -2.4375, -2.3594, -2.0312, -1.7500, -2.7812, -2.0156, -1.9141, -2.2812, -1.4219, -2.5781, -1.4531],
        [ 0.0693, -0.9023, -0.7656, -0.9062, -1.2656, -1.1953, -1.0469, -0.6094, -1.2578, -1.1328, -1.2188, -0.9062, -0.1494, -1.1484, -0.2988],
        [ 0.0164, -0.3887, -0.4805, -0.3828, -0.7461, -0.7578, -0.6133, -0.1787, -0.5430, -0.9922, -0.8398, -0.8672,  0.0469, -0.2227, -0.5664]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7415],
        [0.4397],
        [0.3944],
        [0.3926],
        [0.3305],
        [0.2114],
        [0.1669],
        [0.2316],
        [0.1704],
        [0.2088],
        [0.1150],
        [0.2378],
        [0.1457],
        [0.0687]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0022,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9453,     0.0542,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0023,     0.9805,     0.0175,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0229,     0.2354,     0.6211,     0.1196,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0023,     0.0012,     0.0254,     0.9609,     0.0107,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0161,     0.0693,     0.2617,     0.1235,     0.3945,     0.1357,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0023,     0.0086,     0.0342,     0.0967,     0.1631,     0.5039,     0.1895,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0002,     0.0008,     0.0007,     0.0132,     0.2334,     0.0757,     0.6172,     0.0586,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0001,     0.0233,     0.0192,     0.0352,     0.0393,     0.8750,     0.0089,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0001,     0.0014,     0.0001,     0.0005,     0.0009,     0.0178,     0.0098,     0.9648,     0.0063,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0001,     0.0008,     0.0007,     0.0145,     0.0075,     0.0532,     0.0073,     0.9102,     0.0042,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0105,     0.0028,     0.9805,     0.0058,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0002,     0.0000,     0.0004,     0.0000,     0.0011,     0.0065,     0.1611,     0.8164,     0.0159,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0006,     0.0007,     0.0047,     0.0003,     0.0354,     0.0028,     0.0903,     0.8359,     0.0297]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0032,     -1.0234,     -0.9453,     -0.9805,     -1.0391,     -1.0859,     -1.1016,     -1.1172,     -1.1719,     -1.1406,     -1.2188,     -1.1562,     -1.2266,     -1.2656,     -1.2344],
        [    -0.0562,     -6.1875,     -3.3750,     -2.6875,     -2.1406,     -2.0625,      1.2969,      1.3438,      0.7227,      2.0156,      2.6406,      4.4375,      5.5625,      4.7188,      7.0312],
        [    -0.0942,     12.3125,      9.4375,     13.6875,     14.5000,     14.5000,     16.0000,     16.3750,     18.6250,     20.0000,     20.6250,     22.3750,     21.5000,     23.5000,     25.0000],
        [    -0.1035,      6.8438,     12.9375,      8.8750,      8.2500,     13.4375,     10.5625,     13.3125,     11.0625,     17.2500,     15.3125,     22.2500,     21.7500,     17.1250,     24.2500],
        [    -0.1357,     10.9375,     13.2500,     14.2500,     12.5625,     15.9375,     17.8750,     20.0000,     20.6250,     22.7500,     23.7500,     26.2500,     25.7500,     26.3750,     28.7500],
        [    -0.1514,      9.5625,      8.9375,     12.0000,     15.6250,     11.1250,     14.8125,     15.6250,     19.5000,     20.2500,     21.1250,     22.0000,     21.1250,     25.0000,     24.7500],
        [    -0.1250,     13.3750,     14.8750,     16.2500,     15.4375,     16.6250,     15.5000,     19.2500,     20.1250,     23.2500,     22.3750,     26.7500,     25.6250,     26.0000,     28.2500],
        [    -0.1250,     12.0625,     13.3750,     14.7500,     15.7500,     16.2500,     17.3750,     16.5000,     19.8750,     20.1250,     22.6250,     24.5000,     23.1250,     25.3750,     27.1250],
        [    -0.1572,      8.1250,      9.6250,      9.5000,     12.3750,     15.2500,     14.1250,     16.2500,     13.8750,     16.7500,     19.2500,     21.7500,     23.6250,     19.8750,     23.2500],
        [    -0.1416,      9.9375,      7.7188,     11.1250,     16.6250,     16.3750,     17.0000,     17.1250,     20.2500,     15.6250,     22.2500,     20.2500,     22.3750,     25.7500,     23.5000],
        [    -0.1445,      9.1250,     11.3750,     14.0625,     11.3125,     12.9375,     13.6250,     16.6250,     16.0000,     20.6250,     15.5625,     22.7500,     25.0000,     22.5000,     24.5000],
        [    -0.1260,     13.3125,     13.5000,     14.3750,     16.8750,     16.7500,     19.7500,     19.1250,     21.1250,     19.1250,     23.8750,     18.5000,     24.1250,     26.3750,     27.0000],
        [    -0.1064,      8.7500,     12.5000,     14.4375,     10.0000,     11.0000,     12.0000,     12.6250,     14.5000,     18.7500,     17.5000,     23.3750,     18.2500,     20.5000,     26.1250],
        [    -0.1631,      4.2500,      5.9688,      5.8438,      8.0000,     10.8125,      9.4375,     11.6875,      9.3125,     12.5625,     14.3750,     17.6250,     19.1250,     15.2500,     19.1250],
        [    -0.1494,     12.8750,     10.3125,     14.6250,     17.8750,     16.8750,     19.6250,     19.8750,     21.7500,     19.0000,     23.7500,     21.2500,     24.7500,     27.0000,     23.6250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7234],
        [0.3030],
        [0.2433],
        [0.1644],
        [0.1122],
        [0.1461],
        [0.1540],
        [0.1161],
        [0.1011],
        [0.0908],
        [0.0932],
        [0.1274],
        [0.1032],
        [0.0674]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9062, 0.0933, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8281, 0.1514, 0.0215, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6602, 0.2520, 0.0659, 0.0222, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6953, 0.0322, 0.1250, 0.0160, 0.1299, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9297, 0.0248, 0.0128, 0.0046, 0.0201, 0.0084, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6172, 0.0574, 0.0262, 0.0135, 0.1816, 0.0219, 0.0806, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4180, 0.0388, 0.0226, 0.0277, 0.1768, 0.0143, 0.0908, 0.2100, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4805, 0.0223, 0.0233, 0.0054, 0.1641, 0.0327, 0.0283, 0.0830, 0.1592, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7773, 0.0352, 0.0092, 0.0027, 0.0154, 0.0043, 0.0148, 0.0259, 0.0698, 0.0464, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2451, 0.0742, 0.0261, 0.0101, 0.0894, 0.0091, 0.0251, 0.0918, 0.2002, 0.1602, 0.0688, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2910, 0.0442, 0.0598, 0.0275, 0.0771, 0.0221, 0.0444, 0.1226, 0.1768, 0.0771, 0.0136, 0.0452, 0.0000, 0.0000, 0.0000],
        [0.4316, 0.0143, 0.0078, 0.0023, 0.0952, 0.0077, 0.0366, 0.0315, 0.2227, 0.0889, 0.0113, 0.0244, 0.0250, 0.0000, 0.0000],
        [0.2793, 0.0125, 0.0103, 0.0015, 0.0791, 0.0165, 0.0123, 0.0272, 0.0311, 0.3555, 0.0298, 0.0308, 0.0256, 0.0869, 0.0000],
        [0.3711, 0.1279, 0.0233, 0.0030, 0.0771, 0.0142, 0.0461, 0.0703, 0.0603, 0.0498, 0.0090, 0.0535, 0.0098, 0.0713, 0.0131]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0013,     -0.1387,     -0.1172,     -0.1396,     -0.1162,     -0.1504,     -0.1455,     -0.1235,     -0.1084,     -0.0918,     -0.1602,     -0.1050,     -0.1221,     -0.0884,     -0.1299],
        [     0.0386,     -2.2344,     -2.7656,     -3.2656,     -2.0625,     -4.0312,     -3.0938,     -2.0469,     -0.5430,     -2.2188,     -3.8281,     -1.2969,     -2.7656,      0.4551,     -2.5469],
        [     0.0608,     -1.6328,     -3.5938,     -5.0938,     -3.3281,     -4.9688,     -3.4062,     -2.5625,     -2.3281,     -3.4219,     -5.1875,     -2.5000,     -5.1875,     -2.7031,     -4.1562],
        [     0.0532,     -0.9141,     -2.2500,     -3.3438,     -0.3711,     -2.6562,     -1.7578,     -0.6914,     -0.1426,     -1.6172,     -4.1250,     -2.6562,     -2.9844,     -0.5391,     -3.0156],
        [     0.0361,     -3.0312,     -1.6797,     -3.7344,     -1.6406,     -2.2500,     -3.6875,     -2.2031,     -0.6797,     -0.2969,     -4.0938,     -1.3359,     -2.2031,      0.1084,     -1.5781],
        [     0.0283,     -3.5938,     -4.2500,     -5.2812,     -3.7969,     -4.6875,     -3.4375,     -3.1406,     -1.5234,     -2.9688,     -5.3438,     -3.7500,     -5.1875,     -1.4688,     -3.4219],
        [     0.0640,     -2.3125,     -3.0938,     -3.7656,     -1.1562,     -3.2812,     -1.9766,     -0.8945,      0.7617,     -1.9844,     -4.5000,     -1.4922,     -3.1562,      1.5234,     -2.6406],
        [     0.0432,     -2.3281,     -2.8750,     -2.6719,     -0.8164,     -3.3281,     -1.4844,     -0.6445,      1.6172,     -1.1094,     -2.9688,     -1.3047,     -1.7578,      2.8125,     -1.2969],
        [     0.0204,     -3.0469,     -3.0156,     -4.4688,     -1.0547,     -2.6719,     -2.8125,     -1.7344,     -1.0859,      0.0659,     -2.7500,     -1.8984,     -2.2656,     -0.0991,     -2.1250],
        [     0.0325,     -3.0625,     -4.4062,     -5.6250,     -3.8906,     -5.1562,     -3.9219,     -3.3750,     -2.3750,     -2.7812,     -2.9688,     -3.2031,     -3.7812,     -1.8984,     -2.9219],
        [     0.0427,     -1.1484,     -2.1875,     -3.1406,     -0.9648,     -3.2500,     -2.2344,     -0.9375,     -0.1582,     -0.3848,     -1.2266,      1.2734,     -0.1592,      1.5547,     -1.0078],
        [     0.0201,     -1.8672,     -1.5625,     -2.3438,     -1.3047,     -2.5625,     -1.8594,     -0.8438,     -0.4766,     -1.3047,     -3.0469,     -1.8359,      0.3516,      0.1689,     -1.5312],
        [     0.0471,     -3.3594,     -3.9688,     -5.1875,     -1.4688,     -3.9844,     -2.4219,     -2.5781,     -0.6172,     -1.5391,     -3.5938,     -2.8281,     -2.7969,      0.8984,     -2.3438],
        [     0.0166,     -3.0938,     -3.2812,     -5.1875,     -1.2500,     -2.8125,     -3.1094,     -2.3125,     -2.1719,      0.2559,     -2.2188,     -2.1875,     -2.3750,     -1.1484,     -2.0781],
        [     0.0469,     -1.0156,     -2.7188,     -4.7812,     -1.5156,     -3.2188,     -2.0312,     -1.6172,     -1.7656,     -1.9609,     -3.6719,     -1.8906,     -3.5938,     -1.6016,     -3.2969]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5580],
        [0.3605],
        [0.2915],
        [0.3837],
        [0.4405],
        [0.2844],
        [0.2761],
        [0.3269],
        [0.3530],
        [0.2594],
        [0.2765],
        [0.2507],
        [0.2229],
        [0.2035]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3438,     0.6562,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1729,     0.4629,     0.3652,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5352,     0.2695,     0.1621,     0.0317,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8242,     0.1279,     0.0300,     0.0050,     0.0124,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7461,     0.2197,     0.0165,     0.0013,     0.0049,     0.0126,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6875,     0.1865,     0.0164,     0.0018,     0.0070,     0.0260,     0.0732,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4805,     0.1738,     0.0403,     0.0118,     0.0208,     0.0693,     0.1553,     0.0479,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8477,     0.0693,     0.0190,     0.0061,     0.0107,     0.0140,     0.0223,     0.0071,     0.0050,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5508,     0.0786,     0.0496,     0.0337,     0.0122,     0.0762,     0.0811,     0.0210,     0.0222,     0.0767,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9570,     0.0138,     0.0032,     0.0028,     0.0057,     0.0036,     0.0069,     0.0014,     0.0008,     0.0027,     0.0007,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0223,     0.3965,     0.0444,     0.0371,     0.0186,     0.0884,     0.0378,     0.0610,     0.0527,     0.1650,     0.0251,     0.0500,     0.0000,     0.0000,     0.0000],
        [    0.6641,     0.0510,     0.0187,     0.0072,     0.0101,     0.0243,     0.0464,     0.0187,     0.0216,     0.0732,     0.0179,     0.0093,     0.0361,     0.0000,     0.0000],
        [    0.7773,     0.0280,     0.0164,     0.0109,     0.0183,     0.0139,     0.0195,     0.0130,     0.0107,     0.0309,     0.0133,     0.0135,     0.0184,     0.0160,     0.0000],
        [    0.0420,     0.0337,     0.0562,     0.0150,     0.0101,     0.0483,     0.0261,     0.0237,     0.0369,     0.0547,     0.0654,     0.0156,     0.0598,     0.0962,     0.4160]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0023,     -0.1670,     -0.2070,     -0.2334,     -0.2139,     -0.1982,     -0.1963,     -0.2344,     -0.2520,     -0.1982,     -0.2490,     -0.2354,     -0.2295,     -0.2471,     -0.1660],
        [     0.1328,      0.7773,     -2.0156,     -3.1250,     -3.1094,     -1.3359,     -0.9102,     -2.4844,     -2.4219,     -0.2715,     -2.4375,     -2.7656,     -1.7891,     -1.5547,      0.8242],
        [     0.0908,      1.0781,      0.8398,     -0.3887,     -1.3828,      1.0000,      0.4766,      0.3633,      0.2520,      1.4297,      0.1816,     -0.0645,     -0.1045,     -0.0369,      2.6875],
        [     0.1250,     -0.5625,     -1.0703,     -2.7031,     -3.0312,     -1.2031,     -1.7031,     -2.0938,     -2.7031,     -0.8047,     -2.3750,     -2.2344,     -1.8438,     -1.8516,      0.9141],
        [     0.0601,     -1.8047,     -3.2500,     -5.0312,     -4.1250,     -3.8906,     -4.0000,     -5.0312,     -6.2188,     -3.7656,     -5.9062,     -4.8125,     -5.2188,     -5.3125,     -2.1719],
        [     0.2227,     -1.0000,     -3.5938,     -6.1250,     -4.8125,     -3.8594,     -2.9375,     -4.8125,     -4.5000,     -1.5156,     -4.5625,     -5.3125,     -4.7188,     -4.5000,     -0.8203],
        [     0.1992,     -1.1094,     -3.5312,     -5.7188,     -4.3750,     -3.0781,     -2.0469,     -4.5938,     -4.9062,     -2.8906,     -4.8750,     -5.1250,     -3.7812,     -3.9375,     -0.8750],
        [     0.1582,     -0.8555,     -2.3281,     -3.5469,     -2.9844,     -1.7734,     -0.9688,     -2.1406,     -2.8594,     -1.2734,     -2.8281,     -3.3125,     -1.7188,     -2.1406,     -0.6641],
        [     0.1177,     -2.3750,     -3.6719,     -4.8125,     -4.2500,     -3.9844,     -3.5156,     -4.6562,     -5.0000,     -3.2500,     -4.8125,     -4.4688,     -4.1875,     -4.4375,     -2.2656],
        [     0.0625,     -1.8828,     -2.3438,     -2.7344,     -3.7500,     -1.9141,     -1.8516,     -3.2031,     -3.1406,     -1.9062,     -2.8750,     -3.3594,     -2.0000,     -2.8750,     -1.1328],
        [     0.0825,     -4.1562,     -5.6250,     -5.7500,     -5.0312,     -5.5000,     -4.8438,     -6.4688,     -7.0625,     -5.7812,     -7.0938,     -6.3750,     -6.2812,     -7.1250,     -4.2500],
        [     0.0894,      2.9688,      0.7773,      0.5938,     -0.0962,      1.4609,      0.6172,      1.0938,      0.9453,      2.0781,      0.2061,      0.8945,      0.6211,      1.1016,      2.5469],
        [     0.1816,     -2.3906,     -3.3906,     -4.3438,     -4.0000,     -3.1250,     -2.4844,     -3.3906,     -3.2500,     -2.0312,     -3.4375,     -4.0938,     -2.7344,     -2.9219,     -1.4688],
        [     0.1118,     -3.2188,     -3.7500,     -4.1562,     -3.6406,     -3.9062,     -3.5781,     -3.9844,     -4.1562,     -3.1094,     -3.9531,     -3.9375,     -3.6250,     -3.7812,     -2.0625],
        [     0.1118,     -0.1118,      0.4023,     -0.9180,     -1.3203,      0.2520,     -0.3652,     -0.4648,     -0.0179,      0.3750,      0.5508,     -0.8789,      0.4629,      0.9414,      2.4062]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8844],
        [0.7612],
        [0.7853],
        [0.8739],
        [0.8739],
        [0.8100],
        [0.7219],
        [0.7794],
        [0.6753],
        [0.7271],
        [0.6170],
        [0.7031],
        [0.6895],
        [0.6102]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0104,     -0.6367,     -0.7031,     -0.7969,     -0.7344,     -0.8516,     -0.8945,     -0.9375,     -0.9883,     -1.0547,     -0.7734,     -0.9375,     -0.8281,     -0.8398,     -0.7617],
        [    -0.2715,    -17.8750,    -18.8750,    -24.1250,    -21.1250,    -21.3750,    -24.0000,    -20.7500,    -21.1250,    -27.1250,    -16.5000,    -25.5000,    -20.6250,    -17.5000,    -19.8750],
        [    -0.6055,    -35.5000,    -39.5000,    -45.0000,    -41.2500,    -47.0000,    -50.0000,    -50.7500,    -54.2500,    -58.7500,    -42.7500,    -51.5000,    -45.5000,    -46.2500,    -42.7500],
        [    -0.7227,    -43.7500,    -49.2500,    -54.7500,    -49.0000,    -56.7500,    -60.2500,    -62.5000,    -67.0000,    -72.0000,    -53.2500,    -64.0000,    -55.2500,    -57.2500,    -53.0000],
        [    -0.3789,    -22.1250,    -24.8750,    -27.7500,    -25.7500,    -29.2500,    -29.5000,    -31.3750,    -35.7500,    -36.2500,    -27.1250,    -31.5000,    -27.2500,    -30.2500,    -26.7500],
        [    -0.9023,    -52.7500,    -59.0000,    -67.5000,    -62.2500,    -72.0000,    -74.5000,    -77.5000,    -82.5000,    -89.0000,    -65.0000,    -79.5000,    -68.5000,    -69.0000,    -62.7500],
        [    -0.6680,    -40.2500,    -44.7500,    -51.2500,    -47.0000,    -54.5000,    -56.7500,    -59.5000,    -63.2500,    -66.5000,    -48.0000,    -59.0000,    -52.7500,    -53.7500,    -48.5000],
        [    -0.6484,    -38.0000,    -42.2500,    -49.0000,    -45.7500,    -52.2500,    -54.5000,    -56.7500,    -60.2500,    -63.7500,    -46.5000,    -57.5000,    -50.2500,    -50.7500,    -46.0000],
        [    -0.6758,    -38.7500,    -43.2500,    -50.5000,    -47.0000,    -53.0000,    -56.0000,    -58.0000,    -61.7500,    -65.5000,    -48.5000,    -59.0000,    -51.7500,    -52.2500,    -47.0000],
        [    -0.7891,    -46.2500,    -51.0000,    -58.5000,    -54.2500,    -62.5000,    -65.0000,    -69.0000,    -73.5000,    -77.5000,    -57.5000,    -69.0000,    -60.2500,    -62.5000,    -55.2500],
        [    -0.6914,    -39.2500,    -44.0000,    -51.0000,    -47.5000,    -54.0000,    -56.7500,    -58.7500,    -62.5000,    -66.0000,    -49.0000,    -59.7500,    -52.2500,    -52.7500,    -47.5000],
        [    -0.5234,    -30.8750,    -34.7500,    -38.7500,    -34.7500,    -40.0000,    -42.2500,    -44.2500,    -48.0000,    -51.0000,    -36.7500,    -44.5000,    -39.0000,    -40.7500,    -37.2500],
        [    -0.6484,    -37.7500,    -42.2500,    -48.5000,    -45.0000,    -52.5000,    -53.7500,    -57.5000,    -61.0000,    -63.2500,    -46.2500,    -56.2500,    -50.5000,    -51.7500,    -45.5000],
        [    -0.6328,    -36.7500,    -41.2500,    -47.2500,    -44.2500,    -50.2500,    -53.2500,    -55.0000,    -57.5000,    -61.2500,    -44.0000,    -55.2500,    -49.2500,    -48.5000,    -44.0000],
        [    -0.6133,    -36.7500,    -40.2500,    -46.0000,    -42.7500,    -48.5000,    -50.7500,    -52.0000,    -55.7500,    -60.0000,    -43.2500,    -53.2500,    -46.0000,    -46.7500,    -43.7500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8639],
        [0.8525],
        [0.9691],
        [0.8541],
        [0.8778],
        [0.8606],
        [0.8445],
        [0.8362],
        [0.8033],
        [0.8393],
        [0.8099],
        [0.8442],
        [0.8399],
        [0.6971]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0017,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2168,     0.0344,     0.7500,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4141,     0.0840,     0.4883,     0.0125,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3242,     0.4629,     0.0747,     0.1245,     0.0134,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0669,     0.0018,     0.9219,     0.0022,     0.0021,     0.0045,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0591,     0.0303,     0.0051,     0.0106,     0.0036,     0.8828,     0.0089,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4395,     0.0366,     0.0562,     0.0527,     0.1455,     0.0410,     0.1416,     0.0874,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0132,     0.0055,     0.0554,     0.0017,     0.0010,     0.8867,     0.0220,     0.0077,     0.0063,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0425,     0.0505,     0.1069,     0.0061,     0.0413,     0.3965,     0.2969,     0.0244,     0.0098,     0.0238,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0625,     0.0359,     0.0162,     0.0124,     0.1016,     0.2734,     0.1465,     0.0947,     0.0610,     0.0342,     0.1611,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0486,     0.0023,     0.0679,     0.0010,     0.0110,     0.6250,     0.0164,     0.0144,     0.0095,     0.1533,     0.0503,     0.0008,     0.0000,     0.0000,     0.0000],
        [    0.1045,     0.0044,     0.0216,     0.0026,     0.0049,     0.4805,     0.0713,     0.0143,     0.0125,     0.0762,     0.1982,     0.0009,     0.0078,     0.0000,     0.0000],
        [    0.0320,     0.0190,     0.0752,     0.0025,     0.0226,     0.5508,     0.0957,     0.0142,     0.0078,     0.0432,     0.0718,     0.0020,     0.0378,     0.0253,     0.0000],
        [    0.0013,     0.0009,     0.0000,     0.0006,     0.9688,     0.0000,     0.0014,     0.0008,     0.0009,     0.0000,     0.0000,     0.0067,     0.0049,     0.0000,     0.0130]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0001,     -0.0352,      0.0430,     -0.0510,     -0.0894,      0.0801,     -0.0171,     -0.0349,     -0.0347,      0.0518,      0.0337,     -0.1040,     -0.0520,      0.0172,     -0.0444],
        [    -0.0206,     -6.3750,      2.5781,     -6.4688,     -8.6875,      1.5547,     -3.2031,     -6.6562,     -5.1250,      1.7812,      0.2188,    -10.5000,     -8.2500,      0.1396,     -5.3750],
        [    -0.0040,     -1.8438,      1.2344,     -2.6250,     -2.0625,     -1.0859,     -1.0234,     -3.9531,     -2.9688,     -0.7188,     -1.0234,     -5.0625,     -3.7031,     -0.9648,     -1.8750],
        [    -0.0064,     -1.6016,      0.1582,     -3.5156,     -1.9062,      0.8242,     -0.7422,     -1.8359,     -0.7695,     -0.0131,      0.3477,     -4.4688,     -2.6094,      0.1895,     -2.4219],
        [    -0.0039,      0.3535,     -1.4688,     -0.9609,     -3.1875,     11.3750,     -0.9023,      5.8125,      4.8125,      5.7500,      5.6875,     -0.9414,      4.7188,      5.1250,     -0.4082],
        [     0.0117,     -3.6250,      2.6406,     -3.4062,     -3.4375,     -2.6875,      1.0781,     -5.0625,     -4.9062,     -0.8125,     -0.1807,     -5.7812,     -5.5000,     -1.2656,     -3.1719],
        [     0.0109,     -0.6562,     -2.4375,     -1.7031,     -2.7969,      2.7188,     -1.8828,      0.9336,      1.7031,      0.6133,      1.2109,     -2.3594,     -0.7695,      1.1094,     -1.4688],
        [     0.0105,     -2.4688,     -2.0469,     -2.1094,     -1.0938,     -2.3594,     -1.1172,     -1.6016,     -0.8789,     -1.2188,     -0.3301,     -1.7969,     -2.1406,     -0.6992,     -0.9766],
        [    -0.0165,     -0.8906,      1.4219,     -2.0625,     -2.6250,      4.1875,      0.4961,     -0.5547,     -0.7539,      2.0312,      2.7656,     -2.8125,     -0.5469,      1.4688,     -1.8828],
        [    -0.0217,      0.1504,      0.9023,     -1.9609,     -0.0522,      2.2188,      1.9219,     -0.5742,     -1.4844,     -0.5977,      0.8438,     -2.1250,      1.3203,      0.0500,     -0.8047],
        [     0.0014,     -0.5547,     -1.3516,     -1.6172,      0.4824,      1.4688,      0.8516,      0.4141,     -0.0260,     -0.6016,      0.9492,     -1.0625,      1.3438,      0.0623,      0.0654],
        [    -0.0092,     -3.0625,      0.3281,     -3.9062,     -1.4922,      2.5469,     -1.0938,     -1.2266,     -1.6406,      1.1406,      0.0282,     -4.0625,     -0.4883,     -0.1084,      0.1338],
        [     0.0184,     -3.1562,     -1.5625,     -3.6719,     -3.0469,      1.5469,     -0.3652,     -1.9688,     -2.1094,     -0.3008,      0.6562,     -4.7500,     -2.5781,     -0.8633,     -2.1562],
        [    -0.0170,     -0.5352,      0.8320,     -2.5781,     -0.3672,      2.8281,      1.0781,     -0.8281,     -1.4297,      0.2793,      0.7852,     -2.7969,      0.1504,     -0.2539,     -1.1016],
        [     0.0159,     -0.3125,     -3.5469,     -0.6797,      6.6562,     -8.0625,      0.0981,     -0.4961,     -0.3066,     -5.1250,     -4.2188,      1.6875,      1.3906,     -4.0625,      2.3594]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9906],
        [0.9100],
        [0.8797],
        [0.8713],
        [0.8587],
        [0.8659],
        [0.8787],
        [0.8359],
        [0.8456],
        [0.8406],
        [0.7537],
        [0.8437],
        [0.8370],
        [0.7434]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0282,     0.9727,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9727,     0.0070,     0.0199,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5391,     0.3027,     0.1226,     0.0332,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9023,     0.0245,     0.0713,     0.0007,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9805,     0.0008,     0.0031,     0.0000,     0.0150,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9648,     0.0007,     0.0040,     0.0000,     0.0233,     0.0086,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9414,     0.0002,     0.0031,     0.0000,     0.0029,     0.0525,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.7109,     0.0102,     0.0145,     0.0000,     0.2236,     0.0046,     0.0083,     0.0022,     0.0239,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.7891,     0.0123,     0.0253,     0.0001,     0.0889,     0.0713,     0.0040,     0.0001,     0.0099,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0007,     0.3281,     0.0187,     0.0193,     0.0012,     0.4336,     0.1064,     0.0408,     0.0057,     0.0287,     0.0046,     0.0134,     0.0000,     0.0000,     0.0000],
        [    0.0049,     0.1162,     0.0762,     0.0310,     0.0079,     0.1904,     0.0364,     0.0781,     0.1079,     0.2832,     0.0413,     0.0242,     0.0023,     0.0000,     0.0000],
        [    0.1089,     0.1060,     0.0913,     0.0581,     0.0571,     0.0193,     0.3984,     0.0145,     0.0019,     0.0271,     0.0032,     0.0806,     0.0294,     0.0041,     0.0000],
        [    0.1177,     0.0292,     0.0259,     0.0115,     0.0020,     0.1514,     0.0013,     0.0508,     0.2520,     0.2119,     0.0747,     0.0084,     0.0012,     0.0598,     0.0027]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0001,      0.1875,      0.1289,      0.1328,      0.0413,      0.1709,      0.1406,      0.1196,      0.0781,      0.1206,      0.0825,      0.1123,      0.0574,      0.0138,      0.0535],
        [    -0.0200,      3.5156,      1.5469,      0.9648,     -3.2969,      5.2188,     -1.1016,      2.7656,      4.0000,      4.1250,      1.9922,     -0.0659,     -3.5469,     -0.1543,     -2.7188],
        [     0.0071,     -4.9375,     -3.8906,     -5.0938,     -4.9688,     -3.5000,     -4.0312,     -3.8125,     -3.8281,     -3.7344,     -4.1250,     -4.3125,     -4.6875,     -3.1094,     -3.8438],
        [    -0.0073,     -0.5859,     -1.4922,     -2.7969,     -5.6250,      1.5156,     -3.7656,     -0.3945,      0.4336,      0.5977,     -1.0156,     -3.0000,     -6.1250,     -1.9688,     -4.4062],
        [    -0.0035,     14.7500,     11.1250,     12.1875,      7.5000,     13.2500,      9.5000,     10.7500,     10.3750,     13.1875,      9.1250,      9.0000,      5.6562,      4.4688,      5.2188],
        [     0.0081,     23.7500,     16.6250,     18.0000,      8.0625,     19.6250,     18.2500,     15.4375,     11.3750,     16.2500,     10.1875,     15.5625,      8.2500,      2.0625,      8.8125],
        [    -0.0186,    -17.5000,    -11.1875,    -14.9375,    -10.1250,    -10.6875,    -17.1250,     -8.6250,     -2.7500,     -6.4688,     -5.5625,    -13.2500,    -12.2500,     -0.8633,    -11.0625],
        [     0.0154,     24.7500,     17.5000,     19.2500,     10.5000,     21.0000,     20.0000,     16.5000,     12.2500,     17.2500,     12.0000,     16.3750,     10.1875,      3.2969,      9.8125],
        [     0.0359,     26.0000,     17.6250,     20.2500,     11.6250,     20.2500,     23.1250,     15.5000,      8.6875,     15.2500,      9.8125,     17.8750,     12.1875,      1.4297,     11.9375],
        [    -0.0057,     13.1875,      8.9375,      9.3125,      3.3125,     12.0000,      8.1250,      8.7500,      7.4062,      9.8125,      6.1875,      7.5312,      2.8438,      1.2656,      3.0312],
        [     0.0215,     14.3750,     10.1875,     10.9375,      5.3438,     12.1875,     11.9375,      9.0625,      5.5938,     10.0000,      5.4375,      9.7500,      4.6250,      0.1494,      5.5000],
        [     0.0155,      6.2188,      3.3438,      3.3750,      0.6328,      6.5000,      5.0938,      4.1250,      2.1719,      3.7812,      1.9453,      3.0156,      0.6328,     -0.7148,      0.6133],
        [     0.0061,      3.1719,      2.7500,      1.8438,      0.4844,      3.6562,      2.0000,      2.7656,      3.0938,      4.0625,      2.1250,      1.5938,     -0.7461,      0.8438,      0.2676],
        [     0.0271,      0.0025,     -0.1445,     -0.5977,     -0.6133,     -1.7031,      1.3281,     -1.9922,     -4.0000,     -1.3672,     -3.4844,     -0.2754,     -1.2812,     -3.2500,      1.2031],
        [    -0.0143,     -1.4062,     -1.5312,     -2.3438,     -4.0938,      0.2383,     -4.5625,     -0.8594,      0.7422,      0.5742,     -0.4668,     -2.6562,     -4.5938,     -0.6914,     -3.7969]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7579],
        [0.8451],
        [0.7894],
        [0.5878],
        [0.7344],
        [0.7493],
        [0.6667],
        [0.6667],
        [0.5853],
        [0.7454],
        [0.6029],
        [0.6671],
        [0.6814],
        [0.6743]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0036,     0.9961,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0588,     0.2197,     0.7227,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0043,     0.1377,     0.3340,     0.5234,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1514,     0.1328,     0.2715,     0.1377,     0.3066,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0011,     0.2695,     0.3984,     0.2070,     0.0894,     0.0339,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8164,     0.0155,     0.0591,     0.0085,     0.0571,     0.0054,     0.0366,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0322,     0.1475,     0.2617,     0.0757,     0.2812,     0.0515,     0.0918,     0.0586,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.0625,     0.0635,     0.7383,     0.0067,     0.0264,     0.0028,     0.0013,     0.0996,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.1187,     0.1660,     0.4297,     0.0089,     0.0280,     0.0014,     0.0015,     0.1895,     0.0581,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.0162,     0.0071,     0.8906,     0.0005,     0.0148,     0.0006,     0.0005,     0.0520,     0.0095,     0.0081,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.0762,     0.0762,     0.5938,     0.0127,     0.0116,     0.0017,     0.0005,     0.0244,     0.0109,     0.0016,     0.1904,     0.0000,     0.0000,     0.0000],
        [    0.3262,     0.0208,     0.0554,     0.0309,     0.0645,     0.0225,     0.0967,     0.0452,     0.0330,     0.0267,     0.0303,     0.1011,     0.1465,     0.0000,     0.0000],
        [    0.0011,     0.0164,     0.0162,     0.8008,     0.0012,     0.0157,     0.0027,     0.0010,     0.0164,     0.0153,     0.0069,     0.0884,     0.0073,     0.0125,     0.0000],
        [    0.0036,     0.1152,     0.2334,     0.2285,     0.0391,     0.0162,     0.0038,     0.0048,     0.0552,     0.0796,     0.0044,     0.0879,     0.0013,     0.0041,     0.1226]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0009,      0.0303,      0.0586,     -0.0262,      0.0613,      0.0089,      0.0183,      0.0299,      0.0317,      0.0315,     -0.0047,     -0.0120,     -0.0183,     -0.0143,      0.0210],
        [     0.0092,      5.6250,      6.1875,      6.6875,      2.9844,      1.7031,     -0.5742,     -0.2891,      3.8281,      3.8906,      0.7109,      5.0938,     -1.5391,      0.5078,      5.1562],
        [    -0.0148,      1.3047,      2.4844,      1.3438,      1.0391,     -0.9961,     -2.0000,     -1.7422,      0.6250,      0.9570,     -1.1172,      1.2891,     -2.4219,     -0.3105,      1.9609],
        [     0.0116,      3.4844,      4.3750,      4.8125,      2.3125,      1.2891,     -0.3320,     -0.5078,      2.6406,      2.7188,     -0.2637,      3.3750,     -0.9609,      0.4316,      4.2188],
        [    -0.0092,     -0.1465,      0.5703,     -0.1079,      0.6953,     -1.0781,     -0.2031,     -1.2188,     -0.6719,     -0.9688,     -0.9297,      0.2451,     -0.3496,     -0.7461,      0.3496],
        [     0.0020,      5.4688,      5.8438,      5.1875,      4.3750,      3.3906,      1.8359,      1.9375,      5.9062,      4.2500,      3.1719,      5.1250,      0.3223,      2.7031,      4.4375],
        [    -0.0266,     -4.0000,     -2.6562,     -4.5938,     -2.6875,     -5.0312,     -3.1406,     -3.7031,     -4.6562,     -3.8281,     -4.0312,     -2.9688,     -2.7344,     -2.1875,     -2.6562],
        [    -0.0106,      1.5156,      2.0781,      0.8477,      2.1562,      0.4609,      1.0391,      0.5938,      1.7500,      0.3809,     -0.2256,      1.6641,     -0.0503,     -0.1621,      0.7969],
        [     0.0430,      5.9062,      5.9375,      8.3750,      3.6875,      5.0625,      2.8125,      2.0312,      6.3750,      4.6875,      4.0625,      6.9062,      2.7344,      3.6562,      5.5000],
        [     0.0239,      6.8750,      7.2188,      8.1875,      4.2812,      5.4375,      2.4219,      2.5000,      7.3438,      6.1562,      4.2812,      6.5625,      0.9102,      3.4062,      6.7188],
        [     0.0610,      5.5312,      4.6875,      9.5625,      2.1250,      5.4375,      2.2812,      1.9844,      6.6875,      5.0000,      4.8438,      7.6250,      3.0469,      5.0312,      5.4062],
        [     0.0376,      5.8750,      5.8750,      7.9375,      4.0625,      3.9844,      2.0469,      0.7812,      4.7188,      3.9219,      2.0312,      6.7812,      2.0156,      1.9609,      5.9375],
        [    -0.0092,     -2.7656,     -1.7812,     -2.3750,     -1.6328,     -2.6875,     -1.2266,     -1.9844,     -2.3125,     -2.5156,     -2.3906,     -1.1797,     -0.8125,     -0.6875,     -1.4766],
        [     0.0554,      2.7656,      2.7656,      6.6562,      0.1709,      2.7344,      0.9844,      0.0152,      2.7656,      2.7031,      1.9062,      4.4688,      1.9688,      2.5000,      3.6719],
        [     0.0027,      3.4844,      4.1875,      4.1562,      2.4062,      1.5234,      0.0623,      0.2969,      2.7500,      3.1094,      0.2158,      3.2188,     -0.9688,      0.1396,      3.5469]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4886],
        [0.4614],
        [0.4982],
        [0.5126],
        [0.4173],
        [0.4928],
        [0.4305],
        [0.4499],
        [0.4336],
        [0.4187],
        [0.4857],
        [0.4648],
        [0.4763],
        [0.4217]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0019,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0007,     0.8555,     0.1455,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0020,     0.5195,     0.1846,     0.2949,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.6055,     0.1465,     0.1455,     0.1035,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0014,     0.4199,     0.2041,     0.2178,     0.1147,     0.0420,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0011,     0.2832,     0.1885,     0.1299,     0.1768,     0.0422,     0.1787,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0010,     0.3242,     0.1523,     0.1338,     0.1045,     0.0320,     0.2412,     0.0115,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0025,     0.3594,     0.2051,     0.1289,     0.1089,     0.0361,     0.1338,     0.0135,     0.0117,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0009,     0.2812,     0.0811,     0.1680,     0.1045,     0.0237,     0.2891,     0.0118,     0.0069,     0.0320,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0048,     0.3184,     0.2061,     0.1660,     0.0913,     0.0332,     0.1172,     0.0140,     0.0120,     0.0244,     0.0130,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.2090,     0.0354,     0.1172,     0.0786,     0.0149,     0.2695,     0.0045,     0.0025,     0.0142,     0.0008,     0.2539,     0.0000,     0.0000,     0.0000],
        [    0.0005,     0.3066,     0.1250,     0.1016,     0.0688,     0.0299,     0.1436,     0.0076,     0.0036,     0.0112,     0.0022,     0.1699,     0.0303,     0.0000,     0.0000],
        [    0.0022,     0.2891,     0.1211,     0.1182,     0.0659,     0.0330,     0.0981,     0.0112,     0.0102,     0.0280,     0.0057,     0.1729,     0.0271,     0.0165,     0.0000],
        [    0.0002,     0.1475,     0.0352,     0.1011,     0.0972,     0.0182,     0.3125,     0.0064,     0.0046,     0.0131,     0.0012,     0.2031,     0.0292,     0.0050,     0.0248]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0002,     -0.0703,     -0.0243,     -0.0564,     -0.0544,     -0.0552,     -0.0747,     -0.0408,     -0.0430,     -0.0728,     -0.0282,     -0.0806,     -0.0596,     -0.0273,     -0.0342],
        [    -0.0050,      6.2500,      4.8438,      5.4375,      4.9062,      3.8594,      6.4062,      2.8750,      2.2812,      3.5625,      1.2500,      5.9375,      4.3750,      2.5781,      3.9531],
        [     0.0056,      7.0625,      5.2812,      6.1875,      5.9062,      5.0000,      7.7812,      3.5469,      3.2031,      4.3750,      1.4062,      6.8438,      5.0625,      3.1094,      5.0312],
        [    -0.0085,      5.5312,      4.5000,      4.9688,      4.8438,      2.9531,      5.4688,      2.1406,      1.7422,      2.7500,      0.9570,      5.3750,      3.6562,      2.2188,      3.6406],
        [    -0.0028,      8.7500,      7.3438,      7.3438,      7.0000,      5.4688,      7.8125,      3.8438,      2.9844,      4.6562,      1.9062,      7.8750,      5.7500,      3.3125,      6.5312],
        [     0.0030,      5.7188,      5.0000,      5.0625,      4.4375,      3.4219,      5.8125,      2.3125,      1.8594,      2.2812,      1.1250,      5.0000,      3.6406,      2.6719,      4.0312],
        [     0.0014,      5.5312,      5.1250,      4.7500,      5.0625,      3.6250,      5.0625,      2.4375,      1.8125,      2.7188,      1.3047,      5.5625,      3.6875,      2.0156,      4.6250],
        [     0.0009,      5.8125,      5.0625,      4.9375,      4.6875,      3.5156,      5.5312,      2.4844,      1.7891,      2.6562,      1.2500,      5.1250,      3.8906,      2.4062,      4.3750],
        [     0.0045,      4.9688,      4.4062,      3.9375,      3.7656,      2.6562,      3.9688,      1.6719,      1.5312,      2.0938,      0.8320,      4.1250,      2.6094,      2.0938,      3.6094],
        [    -0.0079,      5.6875,      4.4375,      5.1562,      4.6875,      3.2188,      5.7188,      2.5156,      1.9766,      3.5156,      1.6172,      5.6875,      4.1250,      2.7031,      3.7500],
        [    -0.0048,      4.1875,      3.7656,      3.5469,      2.9375,      1.9375,      3.2031,      1.0703,      0.9141,      1.6250,      1.0000,      3.7188,      2.0156,      1.8438,      2.7969],
        [    -0.0077,      7.2812,      5.5000,      6.6875,      6.3125,      4.6250,      7.5312,      3.4375,      2.8281,      4.5938,      1.7188,      7.4688,      5.2812,      3.0312,      4.7188],
        [    -0.0036,      6.4062,      5.5000,      5.2812,      4.9062,      4.0625,      5.6250,      2.7031,      1.9609,      3.0938,      1.4453,      5.8125,      4.0625,      2.5781,      4.8750],
        [    -0.0026,      4.8750,      3.9844,      3.9688,      3.3906,      2.6875,      3.7812,      1.6094,      1.5156,      2.5156,      0.9375,      4.3438,      2.4844,      2.0000,      3.3438],
        [    -0.0009,      6.4062,      4.9688,      6.0312,      5.9688,      4.3125,      7.1562,      3.2656,      2.9375,      3.9844,      1.5781,      6.7188,      4.7812,      3.0156,      4.6250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2502],
        [0.2501],
        [0.2502],
        [0.2501],
        [0.2501],
        [0.2512],
        [0.2502],
        [0.2503],
        [0.2501],
        [0.2505],
        [0.2500],
        [0.2501],
        [0.2503],
        [0.2500]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9570,     0.0417,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.8516,     0.0947,     0.0520,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.6719,     0.1602,     0.1426,     0.0272,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.8672,     0.0649,     0.0608,     0.0042,     0.0049,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.6484,     0.1621,     0.1299,     0.0349,     0.0128,     0.0121,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.7227,     0.1201,     0.1167,     0.0211,     0.0071,     0.0038,     0.0066,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.8750,     0.0588,     0.0588,     0.0015,     0.0025,     0.0002,     0.0011,     0.0010,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.8125,     0.0645,     0.0596,     0.0021,     0.0091,     0.0006,     0.0042,     0.0055,     0.0403,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.7773,     0.0776,     0.0898,     0.0061,     0.0074,     0.0014,     0.0047,     0.0037,     0.0209,     0.0093,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.6562,     0.0864,     0.0581,     0.0024,     0.0089,     0.0006,     0.0046,     0.0078,     0.0483,     0.0099,     0.1177,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.4473,     0.1108,     0.1113,     0.0466,     0.0091,     0.0148,     0.0117,     0.0065,     0.0112,     0.0238,     0.1748,     0.0332,     0.0000,     0.0000],
        [    0.0000,     0.7500,     0.0505,     0.0410,     0.0010,     0.0043,     0.0002,     0.0018,     0.0023,     0.0366,     0.0034,     0.1069,     0.0007,     0.0021,     0.0000],
        [    0.0000,     0.7461,     0.0520,     0.0308,     0.0006,     0.0052,     0.0002,     0.0021,     0.0032,     0.0256,     0.0045,     0.0703,     0.0008,     0.0026,     0.0571]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0791,      0.0591,      0.0535,      0.0260,      0.0471,      0.0168,      0.0374,      0.0369,      0.0576,      0.0378,      0.0618,      0.0291,      0.0347,      0.0669],
        [    -0.0086,     15.8750,     12.6875,     12.0000,      7.2812,     10.5000,      6.0625,      9.0625,      9.8125,     12.1875,      9.8125,     13.1250,      7.7500,      9.1875,     12.8750],
        [    -0.0103,     14.9375,     11.8125,     11.1250,      6.4375,      9.4375,      5.2188,      8.2500,      9.0000,     11.3750,      8.8750,     12.0625,      6.8125,      8.5000,     12.0000],
        [    -0.0042,     13.3750,     11.1875,     10.6250,      7.4375,      8.9375,      6.4688,      8.1875,      8.5625,     10.0625,      8.8125,     11.3750,      7.6875,      8.2500,     10.8125],
        [    -0.0024,     13.6875,     12.2500,     12.1250,     10.4375,      9.0625,      8.8750,      8.8750,      8.3125,      9.6250,      9.7500,     12.5625,      9.6875,      8.6875,     11.0625],
        [    -0.0002,     16.8750,     14.2500,     14.1875,     11.5000,     11.6250,      9.6875,     11.1250,     11.0625,     12.3750,     12.1250,     14.8750,     11.2500,     11.0000,     13.7500],
        [     0.0010,     13.3750,     12.0000,     11.7500,     10.4375,      9.4375,      9.3750,      9.5625,      9.2500,      9.8750,     10.2500,     12.1875,     10.3125,      9.3750,     11.0625],
        [    -0.0026,     14.3750,     12.5625,     12.5625,     10.8125,      9.7500,      9.1250,      9.6875,      9.2500,     10.5000,     10.5000,     13.1250,     10.2500,      9.5000,     11.9375],
        [    -0.0136,     14.8750,     12.1875,     12.1875,      8.5625,      9.0000,      6.2500,      8.1875,      8.0625,     11.1250,      9.0625,     13.1250,      7.7812,      8.2500,     12.0625],
        [    -0.0053,     12.5000,     10.0000,      9.8750,      6.5625,      8.0000,      5.2812,      7.2500,      7.5312,      9.5000,      7.9062,     10.5625,      6.5312,      7.4375,     10.1250],
        [    -0.0041,     13.2500,     10.9375,     11.1250,      8.3750,      8.6250,      6.9688,      8.1250,      7.9062,      9.6250,      8.8125,     11.6875,      8.1875,      8.1250,     10.8125],
        [    -0.0068,     12.1250,     10.1250,      9.7500,      6.5312,      7.8438,      5.1250,      7.2188,      7.7188,      9.5625,      7.9688,     10.4375,      6.5625,      7.4688,     10.0000],
        [     0.0015,     13.5625,     12.1250,     12.1250,     11.3125,      9.6250,     10.1250,      9.8750,      9.3125,      9.8750,     10.6250,     12.6250,     10.9375,      9.6250,     11.0625],
        [    -0.0128,     13.1875,     10.5000,     10.3125,      6.5312,      8.0000,      4.7500,      7.1562,      7.4062,     10.1875,      7.8125,     11.2500,      6.2500,      7.3125,     10.6250],
        [    -0.0067,     14.1250,     11.4375,     10.9375,      7.0312,      9.1250,      5.7500,      8.2500,      8.6875,     10.7500,      9.0000,     11.7500,      7.3438,      8.4375,     11.5625]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0833],
        [0.0834],
        [0.0833],
        [0.0834],
        [0.0833],
        [0.0833],
        [0.0833],
        [0.0833],
        [0.0834],
        [0.0834],
        [0.0833],
        [0.0833],
        [0.0834],
        [0.0834]], device='cuda:0')
tensor([[1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0006,     -0.5469,     -0.5312,     -0.5234,     -0.4766,     -0.5273,     -0.4395,     -0.4785,     -0.4844,     -0.5391,     -0.4941,     -0.5273,     -0.4707,     -0.5039,     -0.5430],
        [     0.1895,   -157.0000,   -152.0000,   -151.0000,   -137.0000,   -151.0000,   -126.0000,   -138.0000,   -140.0000,   -155.0000,   -142.0000,   -152.0000,   -135.0000,   -144.0000,   -156.0000],
        [     0.1865,   -152.0000,   -147.0000,   -146.0000,   -133.0000,   -146.0000,   -122.0000,   -133.0000,   -135.0000,   -150.0000,   -138.0000,   -147.0000,   -131.0000,   -140.0000,   -151.0000],
        [     0.1826,   -152.0000,   -147.0000,   -146.0000,   -132.0000,   -146.0000,   -122.0000,   -133.0000,   -135.0000,   -149.0000,   -137.0000,   -146.0000,   -130.0000,   -139.0000,   -150.0000],
        [     0.1836,   -150.0000,   -145.0000,   -144.0000,   -131.0000,   -144.0000,   -120.5000,   -131.0000,   -134.0000,   -148.0000,   -136.0000,   -145.0000,   -129.0000,   -138.0000,   -149.0000],
        [     0.1855,   -153.0000,   -148.0000,   -147.0000,   -134.0000,   -147.0000,   -123.0000,   -134.0000,   -136.0000,   -151.0000,   -139.0000,   -148.0000,   -132.0000,   -141.0000,   -152.0000],
        [     0.1777,   -148.0000,   -144.0000,   -142.0000,   -129.0000,   -143.0000,   -119.0000,   -130.0000,   -132.0000,   -146.0000,   -134.0000,   -143.0000,   -127.5000,   -136.0000,   -147.0000],
        [     0.1807,   -147.0000,   -142.0000,   -141.0000,   -128.0000,   -141.0000,   -117.5000,   -128.0000,   -130.0000,   -144.0000,   -132.0000,   -141.0000,   -126.0000,   -135.0000,   -145.0000],
        [     0.1787,   -145.0000,   -140.0000,   -139.0000,   -126.5000,   -139.0000,   -116.5000,   -126.5000,   -129.0000,   -143.0000,   -131.0000,   -140.0000,   -124.5000,   -133.0000,   -144.0000],
        [     0.1865,   -153.0000,   -148.0000,   -147.0000,   -133.0000,   -147.0000,   -122.5000,   -134.0000,   -136.0000,   -150.0000,   -138.0000,   -147.0000,   -131.0000,   -140.0000,   -151.0000],
        [     0.1807,   -146.0000,   -141.0000,   -140.0000,   -127.5000,   -140.0000,   -117.5000,   -127.5000,   -130.0000,   -144.0000,   -132.0000,   -141.0000,   -125.5000,   -134.0000,   -145.0000],
        [     0.1885,   -155.0000,   -150.0000,   -149.0000,   -135.0000,   -149.0000,   -124.5000,   -136.0000,   -138.0000,   -153.0000,   -140.0000,   -150.0000,   -133.0000,   -142.0000,   -154.0000],
        [     0.1816,   -149.0000,   -145.0000,   -143.0000,   -130.0000,   -144.0000,   -120.0000,   -131.0000,   -133.0000,   -147.0000,   -135.0000,   -144.0000,   -128.0000,   -137.0000,   -148.0000],
        [     0.1797,   -147.0000,   -142.0000,   -141.0000,   -128.0000,   -141.0000,   -118.0000,   -129.0000,   -131.0000,   -145.0000,   -133.0000,   -142.0000,   -126.5000,   -135.0000,   -146.0000],
        [     0.1855,   -151.0000,   -146.0000,   -145.0000,   -132.0000,   -145.0000,   -121.5000,   -132.0000,   -134.0000,   -149.0000,   -137.0000,   -146.0000,   -130.0000,   -139.0000,   -150.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5833],
        [0.5833],
        [0.5833],
        [0.5833],
        [0.5833],
        [0.5833],
        [0.5833],
        [0.5833],
        [0.5833],
        [0.5833],
        [0.5833],
        [0.5833],
        [0.5833],
        [0.5833]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.6445,     0.3535,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0535,     0.0298,     0.9180,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0530,     0.0293,     0.9180,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0540,     0.0291,     0.9102,     0.0000,     0.0070,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0571,     0.0322,     0.9023,     0.0000,     0.0071,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0581,     0.0327,     0.8984,     0.0000,     0.0083,     0.0001,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0564,     0.0332,     0.8984,     0.0000,     0.0079,     0.0001,     0.0003,     0.0021,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0530,     0.0284,     0.8906,     0.0000,     0.0069,     0.0000,     0.0002,     0.0016,     0.0172,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0547,     0.0308,     0.8828,     0.0000,     0.0078,     0.0001,     0.0003,     0.0021,     0.0181,     0.0033,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0461,     0.0260,     0.8086,     0.0000,     0.0053,     0.0000,     0.0001,     0.0013,     0.0148,     0.0022,     0.0952,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0488,     0.0281,     0.7969,     0.0000,     0.0066,     0.0000,     0.0002,     0.0017,     0.0154,     0.0027,     0.0996,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0498,     0.0299,     0.7891,     0.0000,     0.0069,     0.0001,     0.0002,     0.0019,     0.0172,     0.0031,     0.1030,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0483,     0.0264,     0.7969,     0.0000,     0.0059,     0.0000,     0.0002,     0.0015,     0.0157,     0.0024,     0.0986,     0.0000,     0.0000,     0.0057]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    0.0003,     0.2100,     0.2070,     0.2188,     0.1865,     0.2070,     0.1846,     0.1953,     0.2051,     0.2070,     0.2051,     0.2139,     0.1865,     0.1885,     0.2021],
        [    0.0176,    63.7500,    63.0000,    66.5000,    55.7500,    61.5000,    56.2500,    57.7500,    60.0000,    62.5000,    60.5000,    64.5000,    55.7500,    55.7500,    61.5000],
        [    0.0148,    62.2500,    61.7500,    65.0000,    54.7500,    60.0000,    55.0000,    56.5000,    58.7500,    61.2500,    59.2500,    63.0000,    54.5000,    54.7500,    60.2500],
        [    0.0172,    61.7500,    61.2500,    64.5000,    54.2500,    59.7500,    54.5000,    56.2500,    58.2500,    60.7500,    58.7500,    62.5000,    54.0000,    54.2500,    59.7500],
        [    0.0194,    62.0000,    61.5000,    65.0000,    54.5000,    60.0000,    54.7500,    56.2500,    58.5000,    60.7500,    59.0000,    62.7500,    54.2500,    54.2500,    59.7500],
        [    0.0175,    61.7500,    61.2500,    64.5000,    54.2500,    59.7500,    54.5000,    56.2500,    58.5000,    60.7500,    58.7500,    62.5000,    54.0000,    54.2500,    59.7500],
        [    0.0161,    60.5000,    60.0000,    63.2500,    53.2500,    58.5000,    53.5000,    55.0000,    57.0000,    59.2500,    57.5000,    61.2500,    53.0000,    53.0000,    58.5000],
        [    0.0175,    57.7500,    57.2500,    60.5000,    50.5000,    55.7500,    51.0000,    52.5000,    54.5000,    56.5000,    55.0000,    58.5000,    50.5000,    50.5000,    55.7500],
        [    0.0168,    57.7500,    57.2500,    60.5000,    50.5000,    55.7500,    51.0000,    52.5000,    54.5000,    56.5000,    55.0000,    58.5000,    50.5000,    50.5000,    55.7500],
        [    0.0173,    62.5000,    61.7500,    65.0000,    54.7500,    60.5000,    55.0000,    56.7500,    59.0000,    61.2500,    59.5000,    63.2500,    54.7500,    54.7500,    60.2500],
        [    0.0182,    58.5000,    58.0000,    61.5000,    51.5000,    56.7500,    51.7500,    53.2500,    55.2500,    57.5000,    55.7500,    59.2500,    51.2500,    51.2500,    56.5000],
        [    0.0160,    62.7500,    62.2500,    65.5000,    55.0000,    60.5000,    55.5000,    57.0000,    59.2500,    61.5000,    59.7500,    63.5000,    55.0000,    55.0000,    60.5000],
        [    0.0181,    59.7500,    59.0000,    62.5000,    52.2500,    57.7500,    52.7500,    54.2500,    56.2500,    58.5000,    56.7500,    60.5000,    52.2500,    52.2500,    57.5000],
        [    0.0175,    58.5000,    58.0000,    61.2500,    51.5000,    56.5000,    51.7500,    53.2500,    55.2500,    57.5000,    55.7500,    59.2500,    51.2500,    51.5000,    56.5000],
        [    0.0179,    62.0000,    61.5000,    65.0000,    54.2500,    60.0000,    54.7500,    56.2500,    58.5000,    60.7500,    59.0000,    62.7500,    54.2500,    54.5000,    59.7500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.1138,:0.0840,:0.0962,:0.0547,:0.0537,:0.0649,:0.0306,:0.0236)
,
------
		(,:0.0840,:0.0962,:0.0547,:0.0537,:0.0649,:0.0306,:0.0236,:0.0298)
,,,,,,,,,,,,,,,
@ 2050 train 4.4004 , allloss: 4.4004, dt: 1167.62ms, fracRes: 0.3766, norm(attn): 1.2031, norm(output): 0.7734, norm(x): 1.0615, norm(y): 0.9890, norm:0.7338, tok/sec: 112255.45, flops:117.85, batch-reuse:1
@ 2051 train 4.4806 , allloss: 4.4806, dt: 711.59ms, fracRes: 0.3780, norm(attn): 1.2109, norm(output): 0.7773, norm(x): 1.0666, norm(y): 0.9889, norm:0.7680, tok/sec: 184196.56, flops:193.37, batch-reuse:1
@ 2052 train 4.4506 , allloss: 4.4506, dt: 708.98ms, fracRes: 0.3794, norm(attn): 1.2031, norm(output): 0.7812, norm(x): 1.0704, norm(y): 0.9889, norm:0.6817, tok/sec: 184873.65, flops:194.08, batch-reuse:1
@ 2053 train 4.4696 , allloss: 4.4696, dt: 707.73ms, fracRes: 0.3785, norm(attn): 1.2109, norm(output): 0.7695, norm(x): 1.0639, norm(y): 0.9889, norm:0.7965, tok/sec: 185201.55, flops:194.42, batch-reuse:1
@ 2054 train 4.4292 , allloss: 4.4292, dt: 690.27ms, fracRes: 0.3785, norm(attn): 1.1719, norm(output): 0.7773, norm(x): 1.0638, norm(y): 0.9890, norm:0.7470, tok/sec: 189886.05, flops:199.34, batch-reuse:1
@ 2055 train 4.4539 , allloss: 4.4539, dt: 703.83ms, fracRes: 0.3787, norm(attn): 1.1719, norm(output): 0.7812, norm(x): 1.0645, norm(y): 0.9891, norm:0.7597, tok/sec: 186226.85, flops:195.50, batch-reuse:1
@ 2056 train 4.4405 , allloss: 4.4405, dt: 698.22ms, fracRes: 0.3787, norm(attn): 1.1797, norm(output): 0.7812, norm(x): 1.0696, norm(y): 0.9889, norm:0.6137, tok/sec: 187721.85, flops:197.07, batch-reuse:1
@ 2057 train 4.5602 , allloss: 4.5602, dt: 706.76ms, fracRes: 0.3782, norm(attn): 1.1562, norm(output): 0.7812, norm(x): 1.0675, norm(y): 0.9891, norm:0.7798, tok/sec: 185455.21, flops:194.69, batch-reuse:1
@ 2058 train 4.3806 , allloss: 4.3806, dt: 694.77ms, fracRes: 0.3815, norm(attn): 1.1562, norm(output): 0.8008, norm(x): 1.0869, norm(y): 0.9889, norm:0.8313, tok/sec: 188656.44, flops:198.05, batch-reuse:1
@ 2059 train 4.4007 , allloss: 4.4007, dt: 701.57ms, fracRes: 0.3791, norm(attn): 1.1641, norm(output): 0.7773, norm(x): 1.0666, norm(y): 0.9889, norm:0.7499, tok/sec: 186826.55, flops:196.13, batch-reuse:1
@ 2060 train 4.4550 , allloss: 4.4550, dt: 704.59ms, fracRes: 0.3811, norm(attn): 1.1797, norm(output): 0.7812, norm(x): 1.0722, norm(y): 0.9893, norm:0.7916, tok/sec: 186026.84, flops:195.29, batch-reuse:1
@ 2061 train 4.4391 , allloss: 4.4391, dt: 697.26ms, fracRes: 0.3782, norm(attn): 1.1875, norm(output): 0.7812, norm(x): 1.0732, norm(y): 0.9891, norm:0.9218, tok/sec: 187980.27, flops:197.34, batch-reuse:1
@ 2062 train 4.3938 , allloss: 4.3938, dt: 700.19ms, fracRes: 0.3788, norm(attn): 1.1719, norm(output): 0.7656, norm(x): 1.0617, norm(y): 0.9891, norm:0.9351, tok/sec: 187195.27, flops:196.52, batch-reuse:1
@ 2063 train 4.5311 , allloss: 4.5311, dt: 700.57ms, fracRes: 0.3791, norm(attn): 1.1484, norm(output): 0.7734, norm(x): 1.0706, norm(y): 0.9891, norm:0.7884, tok/sec: 187092.83, flops:196.41, batch-reuse:1
@ 2064 train 4.4398 , allloss: 4.4398, dt: 693.42ms, fracRes: 0.3803, norm(attn): 1.1250, norm(output): 0.7539, norm(x): 1.0547, norm(y): 0.9895, norm:0.8010, tok/sec: 189023.06, flops:198.44, batch-reuse:1
@ 2065 train 5.2523 , allloss: 5.2523, dt: 703.04ms, fracRes: 0.3805, norm(attn): 1.0938, norm(output): 0.7617, norm(x): 1.0664, norm(y): 0.9905, norm:1.0657, tok/sec: 186435.64, flops:195.72, batch-reuse:1
@ 2066 train 4.5521 , allloss: 4.5521, dt: 688.09ms, fracRes: 0.3821, norm(attn): 1.1328, norm(output): 0.7812, norm(x): 1.0755, norm(y): 0.9897, norm:1.4557, tok/sec: 190487.15, flops:199.97, batch-reuse:1
@ 2067 train 4.4358 , allloss: 4.4358, dt: 701.55ms, fracRes: 0.3819, norm(attn): 1.1953, norm(output): 0.7891, norm(x): 1.0736, norm(y): 0.9895, norm:0.8643, tok/sec: 186833.03, flops:196.14, batch-reuse:1
@ 2068 train 4.5073 , allloss: 4.5073, dt: 696.68ms, fracRes: 0.3816, norm(attn): 1.2109, norm(output): 0.7891, norm(x): 1.0764, norm(y): 0.9894, norm:0.8037, tok/sec: 188138.72, flops:197.51, batch-reuse:1
@ 2069 train 4.4704 , allloss: 4.4704, dt: 704.28ms, fracRes: 0.3769, norm(attn): 1.2188, norm(output): 0.8008, norm(x): 1.0830, norm(y): 0.9891, norm:0.8132, tok/sec: 186108.14, flops:195.38, batch-reuse:1
@ 2070 train 4.5373 , allloss: 4.5373, dt: 690.90ms, fracRes: 0.3770, norm(attn): 1.2422, norm(output): 0.8086, norm(x): 1.0802, norm(y): 0.9893, norm:0.7820, tok/sec: 189712.40, flops:199.16, batch-reuse:1
@ 2071 train 4.5075 , allloss: 4.5075, dt: 698.26ms, fracRes: 0.3808, norm(attn): 1.2266, norm(output): 0.8086, norm(x): 1.0859, norm(y): 0.9890, norm:0.8767, tok/sec: 187713.19, flops:197.06, batch-reuse:1
@ 2072 train 4.4783 , allloss: 4.4783, dt: 694.35ms, fracRes: 0.3813, norm(attn): 1.2188, norm(output): 0.7969, norm(x): 1.0725, norm(y): 0.9890, norm:0.9776, tok/sec: 188768.96, flops:198.17, batch-reuse:1
@ 2073 train 4.4447 , allloss: 4.4447, dt: 698.80ms, fracRes: 0.3814, norm(attn): 1.2031, norm(output): 0.7852, norm(x): 1.0691, norm(y): 0.9893, norm:0.7316, tok/sec: 187566.40, flops:196.91, batch-reuse:1
@ 2074 train 4.4857 , allloss: 4.4857, dt: 696.38ms, fracRes: 0.3814, norm(attn): 1.1953, norm(output): 0.7891, norm(x): 1.0766, norm(y): 0.9892, norm:0.7860, tok/sec: 188220.07, flops:197.59, batch-reuse:1
@ 2075 train 4.4098 , allloss: 4.4098, dt: 697.72ms, fracRes: 0.3819, norm(attn): 1.1797, norm(output): 0.7930, norm(x): 1.0787, norm(y): 0.9891, norm:0.6498, tok/sec: 187857.07, flops:197.21, batch-reuse:1
@ 2076 train 4.3790 , allloss: 4.3790, dt: 697.80ms, fracRes: 0.3805, norm(attn): 1.1875, norm(output): 0.7852, norm(x): 1.0730, norm(y): 0.9891, norm:0.7349, tok/sec: 187835.44, flops:197.19, batch-reuse:1
@ 2077 train 4.4743 , allloss: 4.4743, dt: 691.75ms, fracRes: 0.3805, norm(attn): 1.1797, norm(output): 0.7812, norm(x): 1.0709, norm(y): 0.9894, norm:0.6536, tok/sec: 189479.24, flops:198.92, batch-reuse:1
@ 2078 train 4.7035 , allloss: 4.7035, dt: 703.31ms, fracRes: 0.3818, norm(attn): 1.1719, norm(output): 0.7969, norm(x): 1.0831, norm(y): 0.9894, norm:0.7888, tok/sec: 186363.65, flops:195.64, batch-reuse:1
@ 2079 train 4.5396 , allloss: 4.5396, dt: 699.68ms, fracRes: 0.3820, norm(attn): 1.1719, norm(output): 0.7852, norm(x): 1.0762, norm(y): 0.9896, norm:1.0095, tok/sec: 187332.28, flops:196.66, batch-reuse:1
@ 2080 train 4.4476 , allloss: 4.4476, dt: 694.62ms, fracRes: 0.3842, norm(attn): 1.1328, norm(output): 0.7695, norm(x): 1.0672, norm(y): 0.9889, norm:0.8300, tok/sec: 188695.16, flops:198.09, batch-reuse:1
@ 2081 train 4.4980 , allloss: 4.4980, dt: 710.20ms, fracRes: 0.3850, norm(attn): 1.1406, norm(output): 0.7695, norm(x): 1.0682, norm(y): 0.9891, norm:0.6832, tok/sec: 184557.68, flops:193.75, batch-reuse:1
@ 2082 train 4.4650 , allloss: 4.4650, dt: 707.09ms, fracRes: 0.3833, norm(attn): 1.1719, norm(output): 0.7656, norm(x): 1.0629, norm(y): 0.9893, norm:0.6588, tok/sec: 185369.16, flops:194.60, batch-reuse:1
@ 2083 train 4.3416 , allloss: 4.3416, dt: 708.05ms, fracRes: 0.3833, norm(attn): 1.1641, norm(output): 0.7852, norm(x): 1.0769, norm(y): 0.9893, norm:0.6658, tok/sec: 185115.74, flops:194.33, batch-reuse:1
@ 2084 train 4.6132 , allloss: 4.6132, dt: 709.15ms, fracRes: 0.3837, norm(attn): 1.1484, norm(output): 0.7734, norm(x): 1.0714, norm(y): 0.9900, norm:0.7536, tok/sec: 184829.83, flops:194.03, batch-reuse:1
@ 2085 train 4.4392 , allloss: 4.4392, dt: 701.49ms, fracRes: 0.3845, norm(attn): 1.1562, norm(output): 0.7734, norm(x): 1.0700, norm(y): 0.9893, norm:0.7808, tok/sec: 186846.87, flops:196.15, batch-reuse:1
@ 2086 train 4.3483 , allloss: 4.3483, dt: 718.59ms, fracRes: 0.3829, norm(attn): 1.1406, norm(output): 0.7695, norm(x): 1.0628, norm(y): 0.9890, norm:0.6532, tok/sec: 182400.86, flops:191.48, batch-reuse:1
@ 2087 train 4.3647 , allloss: 4.3647, dt: 718.83ms, fracRes: 0.3823, norm(attn): 1.1719, norm(output): 0.7656, norm(x): 1.0630, norm(y): 0.9892, norm:0.6873, tok/sec: 182340.66, flops:191.42, batch-reuse:1
@ 2088 train 4.5019 , allloss: 4.5019, dt: 721.10ms, fracRes: 0.3817, norm(attn): 1.1484, norm(output): 0.7812, norm(x): 1.0702, norm(y): 0.9890, norm:0.7035, tok/sec: 181765.82, flops:190.82, batch-reuse:1
@ 2089 train 4.4333 , allloss: 4.4333, dt: 721.08ms, fracRes: 0.3810, norm(attn): 1.1562, norm(output): 0.7773, norm(x): 1.0690, norm(y): 0.9891, norm:0.6781, tok/sec: 181772.91, flops:190.83, batch-reuse:1
@ 2090 train 4.4204 , allloss: 4.4204, dt: 714.08ms, fracRes: 0.3826, norm(attn): 1.1484, norm(output): 0.7812, norm(x): 1.0748, norm(y): 0.9890, norm:0.6410, tok/sec: 183552.96, flops:192.69, batch-reuse:1
@ 2091 train 4.4389 , allloss: 4.4389, dt: 717.61ms, fracRes: 0.3816, norm(attn): 1.1562, norm(output): 0.7812, norm(x): 1.0700, norm(y): 0.9892, norm:0.6624, tok/sec: 182651.93, flops:191.75, batch-reuse:1
@ 2092 train 4.4070 , allloss: 4.4070, dt: 708.47ms, fracRes: 0.3818, norm(attn): 1.1484, norm(output): 0.7773, norm(x): 1.0736, norm(y): 0.9891, norm:0.5849, tok/sec: 185006.85, flops:194.22, batch-reuse:1
@ 2093 train 4.4327 , allloss: 4.4327, dt: 706.02ms, fracRes: 0.3823, norm(attn): 1.1406, norm(output): 0.7656, norm(x): 1.0631, norm(y): 0.9896, norm:0.6625, tok/sec: 185650.23, flops:194.90, batch-reuse:1
@ 2094 train 4.4143 , allloss: 4.4143, dt: 694.54ms, fracRes: 0.3813, norm(attn): 1.1250, norm(output): 0.7812, norm(x): 1.0707, norm(y): 0.9893, norm:0.6345, tok/sec: 188716.80, flops:198.12, batch-reuse:1
@ 2095 train 4.3314 , allloss: 4.3314, dt: 699.85ms, fracRes: 0.3800, norm(attn): 1.1328, norm(output): 0.7578, norm(x): 1.0579, norm(y): 0.9894, norm:0.6528, tok/sec: 187284.93, flops:196.61, batch-reuse:1
@ 2096 train 4.5094 , allloss: 4.5094, dt: 714.17ms, fracRes: 0.3818, norm(attn): 1.1172, norm(output): 0.7617, norm(x): 1.0643, norm(y): 0.9895, norm:0.6484, tok/sec: 183529.50, flops:192.67, batch-reuse:1
@ 2097 train 4.4356 , allloss: 4.4356, dt: 711.56ms, fracRes: 0.3804, norm(attn): 1.1172, norm(output): 0.7539, norm(x): 1.0532, norm(y): 0.9895, norm:0.6737, tok/sec: 184203.53, flops:193.38, batch-reuse:1
@ 2098 train 4.3179 , allloss: 4.3179, dt: 702.37ms, fracRes: 0.3813, norm(attn): 1.1250, norm(output): 0.7617, norm(x): 1.0580, norm(y): 0.9892, norm:0.6111, tok/sec: 186613.53, flops:195.91, batch-reuse:1
@ 2099 train 4.4297 , allloss: 4.4297, dt: 702.10ms, fracRes: 0.3802, norm(attn): 1.1094, norm(output): 0.7656, norm(x): 1.0562, norm(y): 0.9892, norm:0.5855, tok/sec: 186686.53, flops:195.98, batch-reuse:1
@ 2100 train 4.3970 , allloss: 4.3970, dt: 697.42ms, fracRes: 0.3813, norm(attn): 1.0938, norm(output): 0.7695, norm(x): 1.0674, norm(y): 0.9894, norm:0.5664, tok/sec: 187938.63, flops:197.30, batch-reuse:1
@ 2101 train 4.3995 , allloss: 4.3995, dt: 699.54ms, fracRes: 0.3806, norm(attn): 1.0703, norm(output): 0.7578, norm(x): 1.0540, norm(y): 0.9896, norm:0.5389, tok/sec: 187369.06, flops:196.70, batch-reuse:1
@ 2102 train 4.3488 , allloss: 4.3488, dt: 699.36ms, fracRes: 0.3813, norm(attn): 1.0469, norm(output): 0.7578, norm(x): 1.0537, norm(y): 0.9893, norm:0.5951, tok/sec: 187417.93, flops:196.75, batch-reuse:1
@ 2103 train 4.4009 , allloss: 4.4009, dt: 702.85ms, fracRes: 0.3829, norm(attn): 1.0312, norm(output): 0.7578, norm(x): 1.0621, norm(y): 0.9895, norm:0.6721, tok/sec: 186487.75, flops:195.78, batch-reuse:1
@ 2104 train 4.3940 , allloss: 4.3940, dt: 695.25ms, fracRes: 0.3829, norm(attn): 1.0234, norm(output): 0.7578, norm(x): 1.0623, norm(y): 0.9893, norm:0.6026, tok/sec: 188524.53, flops:197.91, batch-reuse:1
@ 2105 train 4.3408 , allloss: 4.3408, dt: 709.76ms, fracRes: 0.3834, norm(attn): 1.0156, norm(output): 0.7695, norm(x): 1.0706, norm(y): 0.9895, norm:0.7347, tok/sec: 184671.45, flops:193.87, batch-reuse:1
@ 2106 train 4.3822 , allloss: 4.3822, dt: 698.85ms, fracRes: 0.3827, norm(attn): 1.0000, norm(output): 0.7656, norm(x): 1.0643, norm(y): 0.9892, norm:0.6300, tok/sec: 187554.24, flops:196.89, batch-reuse:1
@ 2107 train 4.4152 , allloss: 4.4152, dt: 695.69ms, fracRes: 0.3827, norm(attn): 1.0078, norm(output): 0.7617, norm(x): 1.0595, norm(y): 0.9895, norm:0.6207, tok/sec: 188405.46, flops:197.79, batch-reuse:1
@ 2108 train 4.5323 , allloss: 4.5323, dt: 700.18ms, fracRes: 0.3846, norm(attn): 1.0078, norm(output): 0.7656, norm(x): 1.0660, norm(y): 0.9896, norm:0.7599, tok/sec: 187198.52, flops:196.52, batch-reuse:1
@ 2109 train 4.3716 , allloss: 4.3716, dt: 699.92ms, fracRes: 0.3849, norm(attn): 1.0078, norm(output): 0.7656, norm(x): 1.0663, norm(y): 0.9894, norm:0.8825, tok/sec: 187266.43, flops:196.59, batch-reuse:1
@ 2110 train 4.3856 , allloss: 4.3856, dt: 691.09ms, fracRes: 0.3852, norm(attn): 1.0156, norm(output): 0.7617, norm(x): 1.0657, norm(y): 0.9894, norm:0.9077, tok/sec: 189658.54, flops:199.10, batch-reuse:1
@ 2111 train 4.3629 , allloss: 4.3629, dt: 698.38ms, fracRes: 0.3848, norm(attn): 1.0234, norm(output): 0.7617, norm(x): 1.0566, norm(y): 0.9894, norm:0.8413, tok/sec: 187679.93, flops:197.03, batch-reuse:1
@ 2112 train 4.4027 , allloss: 4.4027, dt: 685.31ms, fracRes: 0.3849, norm(attn): 1.0234, norm(output): 0.7578, norm(x): 1.0573, norm(y): 0.9897, norm:0.7584, tok/sec: 191259.20, flops:200.78, batch-reuse:1
@ 2113 train 4.3790 , allloss: 4.3790, dt: 709.67ms, fracRes: 0.3850, norm(attn): 1.0000, norm(output): 0.7578, norm(x): 1.0632, norm(y): 0.9895, norm:0.7248, tok/sec: 184694.40, flops:193.89, batch-reuse:1
@ 2114 train 4.4153 , allloss: 4.4153, dt: 684.54ms, fracRes: 0.3824, norm(attn): 1.0000, norm(output): 0.7500, norm(x): 1.0472, norm(y): 0.9895, norm:0.6440, tok/sec: 191474.62, flops:201.01, batch-reuse:1
@ 2115 train 4.4197 , allloss: 4.4197, dt: 703.05ms, fracRes: 0.3827, norm(attn): 0.9922, norm(output): 0.7578, norm(x): 1.0546, norm(y): 0.9894, norm:0.6424, tok/sec: 186434.50, flops:195.72, batch-reuse:1
@ 2116 train 4.4484 , allloss: 4.4484, dt: 702.69ms, fracRes: 0.3825, norm(attn): 0.9883, norm(output): 0.7578, norm(x): 1.0609, norm(y): 0.9894, norm:0.6487, tok/sec: 186528.62, flops:195.82, batch-reuse:1
@ 2117 train 4.3608 , allloss: 4.3608, dt: 701.32ms, fracRes: 0.3836, norm(attn): 0.9805, norm(output): 0.7656, norm(x): 1.0621, norm(y): 0.9891, norm:0.5336, tok/sec: 186893.24, flops:196.20, batch-reuse:1
@ 2118 train 4.3145 , allloss: 4.3145, dt: 703.85ms, fracRes: 0.3838, norm(attn): 0.9844, norm(output): 0.7578, norm(x): 1.0577, norm(y): 0.9893, norm:0.6396, tok/sec: 186220.23, flops:195.49, batch-reuse:1
@ 2119 train 4.4586 , allloss: 4.4586, dt: 694.05ms, fracRes: 0.3839, norm(attn): 0.9961, norm(output): 0.7617, norm(x): 1.0598, norm(y): 0.9894, norm:0.5879, tok/sec: 188851.38, flops:198.26, batch-reuse:1
@ 2120 train 4.3771 , allloss: 4.3771, dt: 686.33ms, fracRes: 0.3841, norm(attn): 1.0000, norm(output): 0.7617, norm(x): 1.0620, norm(y): 0.9894, norm:0.5935, tok/sec: 190975.36, flops:200.49, batch-reuse:1
@ 2121 train 4.3611 , allloss: 4.3611, dt: 692.93ms, fracRes: 0.3833, norm(attn): 0.9922, norm(output): 0.7695, norm(x): 1.0632, norm(y): 0.9894, norm:0.7935, tok/sec: 189156.13, flops:198.58, batch-reuse:1
@ 2122 train 4.3646 , allloss: 4.3646, dt: 689.00ms, fracRes: 0.3833, norm(attn): 0.9844, norm(output): 0.7578, norm(x): 1.0581, norm(y): 0.9890, norm:0.7977, tok/sec: 190234.36, flops:199.71, batch-reuse:1
@ 2123 train 4.4221 , allloss: 4.4221, dt: 712.68ms, fracRes: 0.3830, norm(attn): 0.9727, norm(output): 0.7539, norm(x): 1.0570, norm(y): 0.9892, norm:0.6894, tok/sec: 183913.35, flops:193.07, batch-reuse:1
@ 2124 train 4.3229 , allloss: 4.3229, dt: 688.88ms, fracRes: 0.3836, norm(attn): 0.9648, norm(output): 0.7617, norm(x): 1.0607, norm(y): 0.9893, norm:0.6264, tok/sec: 190269.26, flops:199.75, batch-reuse:1
@ 2125 train 4.4288 , allloss: 4.4288, dt: 693.13ms, fracRes: 0.3854, norm(attn): 0.9297, norm(output): 0.7578, norm(x): 1.0619, norm(y): 0.9896, norm:0.7101, tok/sec: 189101.54, flops:198.52, batch-reuse:1
@ 2126 train 4.3989 , allloss: 4.3989, dt: 703.21ms, fracRes: 0.3839, norm(attn): 0.9453, norm(output): 0.7656, norm(x): 1.0625, norm(y): 0.9898, norm:0.6996, tok/sec: 186391.20, flops:195.67, batch-reuse:1
@ 2127 train 4.4288 , allloss: 4.4288, dt: 697.02ms, fracRes: 0.3835, norm(attn): 0.9531, norm(output): 0.7578, norm(x): 1.0645, norm(y): 0.9895, norm:0.6481, tok/sec: 188045.02, flops:197.41, batch-reuse:1
@ 2128 train 4.2994 , allloss: 4.2994, dt: 710.45ms, fracRes: 0.3832, norm(attn): 0.9609, norm(output): 0.7578, norm(x): 1.0613, norm(y): 0.9893, norm:0.6188, tok/sec: 184492.47, flops:193.68, batch-reuse:1
@ 2129 train 4.4151 , allloss: 4.4151, dt: 684.81ms, fracRes: 0.3822, norm(attn): 0.9609, norm(output): 0.7617, norm(x): 1.0569, norm(y): 0.9893, norm:0.6151, tok/sec: 191398.30, flops:200.93, batch-reuse:1
@ 2130 train 4.3048 , allloss: 4.3048, dt: 696.40ms, fracRes: 0.3806, norm(attn): 0.9414, norm(output): 0.7539, norm(x): 1.0483, norm(y): 0.9890, norm:0.7502, tok/sec: 188213.43, flops:197.59, batch-reuse:1
@ 2131 train 4.3801 , allloss: 4.3801, dt: 697.88ms, fracRes: 0.3831, norm(attn): 0.9336, norm(output): 0.7578, norm(x): 1.0588, norm(y): 0.9892, norm:0.6059, tok/sec: 187814.20, flops:197.17, batch-reuse:1
@ 2132 train 4.3815 , allloss: 4.3815, dt: 697.95ms, fracRes: 0.3851, norm(attn): 0.9297, norm(output): 0.7812, norm(x): 1.0826, norm(y): 0.9891, norm:0.7321, tok/sec: 187796.68, flops:197.15, batch-reuse:1
@ 2133 train 4.3756 , allloss: 4.3756, dt: 697.65ms, fracRes: 0.3846, norm(attn): 0.9297, norm(output): 0.7578, norm(x): 1.0592, norm(y): 0.9896, norm:0.6441, tok/sec: 187876.97, flops:197.23, batch-reuse:1
@ 2134 train 4.3450 , allloss: 4.3450, dt: 699.04ms, fracRes: 0.3846, norm(attn): 0.9141, norm(output): 0.7578, norm(x): 1.0568, norm(y): 0.9895, norm:0.6299, tok/sec: 187503.26, flops:196.84, batch-reuse:1
@ 2135 train 4.4311 , allloss: 4.4311, dt: 690.28ms, fracRes: 0.3858, norm(attn): 0.9141, norm(output): 0.7617, norm(x): 1.0639, norm(y): 0.9893, norm:0.6943, tok/sec: 189883.30, flops:199.34, batch-reuse:1
@ 2136 train 4.3335 , allloss: 4.3335, dt: 684.73ms, fracRes: 0.3846, norm(attn): 0.9180, norm(output): 0.7578, norm(x): 1.0554, norm(y): 0.9893, norm:0.6141, tok/sec: 191422.02, flops:200.96, batch-reuse:1
@ 2137 train 4.3051 , allloss: 4.3051, dt: 705.07ms, fracRes: 0.3868, norm(attn): 0.9180, norm(output): 0.7539, norm(x): 1.0568, norm(y): 0.9894, norm:0.6089, tok/sec: 185898.01, flops:195.16, batch-reuse:1
@ 2138 train 4.3523 , allloss: 4.3523, dt: 707.29ms, fracRes: 0.3866, norm(attn): 0.9141, norm(output): 0.7578, norm(x): 1.0601, norm(y): 0.9892, norm:0.7288, tok/sec: 185315.24, flops:194.54, batch-reuse:1
@ 2139 train 4.3581 , allloss: 4.3581, dt: 708.29ms, fracRes: 0.3861, norm(attn): 0.8945, norm(output): 0.7578, norm(x): 1.0601, norm(y): 0.9892, norm:0.7143, tok/sec: 185054.68, flops:194.27, batch-reuse:1
@ 2140 train 4.3596 , allloss: 4.3596, dt: 690.29ms, fracRes: 0.3871, norm(attn): 0.8750, norm(output): 0.7656, norm(x): 1.0614, norm(y): 0.9893, norm:0.6070, tok/sec: 189879.16, flops:199.34, batch-reuse:1
@ 2141 train 4.2672 , allloss: 4.2672, dt: 698.73ms, fracRes: 0.3880, norm(attn): 0.8750, norm(output): 0.7578, norm(x): 1.0587, norm(y): 0.9891, norm:0.6400, tok/sec: 187586.82, flops:196.93, batch-reuse:1
@ 2142 train 4.2983 , allloss: 4.2983, dt: 698.52ms, fracRes: 0.3867, norm(attn): 0.8750, norm(output): 0.7539, norm(x): 1.0495, norm(y): 0.9893, norm:0.6290, tok/sec: 187641.37, flops:196.99, batch-reuse:1
@ 2143 train 4.3506 , allloss: 4.3506, dt: 695.20ms, fracRes: 0.3869, norm(attn): 0.8828, norm(output): 0.7539, norm(x): 1.0579, norm(y): 0.9895, norm:0.6051, tok/sec: 188538.17, flops:197.93, batch-reuse:1
@ 2144 train 4.3387 , allloss: 4.3387, dt: 699.59ms, fracRes: 0.3876, norm(attn): 0.8789, norm(output): 0.7617, norm(x): 1.0634, norm(y): 0.9895, norm:0.7157, tok/sec: 187355.27, flops:196.69, batch-reuse:1
@ 2145 train 4.2839 , allloss: 4.2839, dt: 701.41ms, fracRes: 0.3860, norm(attn): 0.8750, norm(output): 0.7617, norm(x): 1.0650, norm(y): 0.9894, norm:0.7493, tok/sec: 186870.63, flops:196.18, batch-reuse:1
@ 2146 train 4.5815 , allloss: 4.5815, dt: 711.19ms, fracRes: 0.3882, norm(attn): 0.8555, norm(output): 0.7852, norm(x): 1.0873, norm(y): 0.9897, norm:1.0190, tok/sec: 184298.88, flops:193.48, batch-reuse:1
@ 2147 train 4.2990 , allloss: 4.2990, dt: 720.06ms, fracRes: 0.3859, norm(attn): 0.8594, norm(output): 0.7539, norm(x): 1.0617, norm(y): 0.9895, norm:0.7208, tok/sec: 182028.04, flops:191.09, batch-reuse:1
@ 2148 train 4.3481 , allloss: 4.3481, dt: 700.11ms, fracRes: 0.3859, norm(attn): 0.8516, norm(output): 0.7422, norm(x): 1.0488, norm(y): 0.9895, norm:0.7846, tok/sec: 187217.58, flops:196.54, batch-reuse:1
@ 2149 train 4.3431 , allloss: 4.3431, dt: 715.52ms, fracRes: 0.3860, norm(attn): 0.8594, norm(output): 0.7539, norm(x): 1.0544, norm(y): 0.9895, norm:0.5986, tok/sec: 183184.22, flops:192.31, batch-reuse:1
@ 2150 train 4.3542 , allloss: 4.3542, dt: 719.89ms, fracRes: 0.3857, norm(attn): 0.8672, norm(output): 0.7500, norm(x): 1.0560, norm(y): 0.9891, norm:0.6591, tok/sec: 182071.99, flops:191.14, batch-reuse:1
@ 2151 train 4.3124 , allloss: 4.3124, dt: 713.08ms, fracRes: 0.3853, norm(attn): 0.8594, norm(output): 0.7500, norm(x): 1.0538, norm(y): 0.9893, norm:0.6665, tok/sec: 183811.09, flops:192.97, batch-reuse:1
@ 2152 train 4.4105 , allloss: 4.4105, dt: 691.95ms, fracRes: 0.3843, norm(attn): 0.8633, norm(output): 0.7500, norm(x): 1.0474, norm(y): 0.9896, norm:0.6367, tok/sec: 189424.33, flops:198.86, batch-reuse:1
@ 2153 train 4.3261 , allloss: 4.3261, dt: 703.58ms, fracRes: 0.3849, norm(attn): 0.8555, norm(output): 0.7539, norm(x): 1.0533, norm(y): 0.9899, norm:0.6979, tok/sec: 186292.10, flops:195.57, batch-reuse:1
@ 2154 train 4.4026 , allloss: 4.4026, dt: 703.24ms, fracRes: 0.3854, norm(attn): 0.8477, norm(output): 0.7539, norm(x): 1.0621, norm(y): 0.9895, norm:0.6895, tok/sec: 186383.49, flops:195.67, batch-reuse:1
@ 2155 train 4.3471 , allloss: 4.3471, dt: 699.84ms, fracRes: 0.3856, norm(attn): 0.8594, norm(output): 0.7500, norm(x): 1.0545, norm(y): 0.9892, norm:0.6419, tok/sec: 187287.42, flops:196.61, batch-reuse:1
@ 2156 train 4.3494 , allloss: 4.3494, dt: 703.24ms, fracRes: 0.3852, norm(attn): 0.8672, norm(output): 0.7461, norm(x): 1.0474, norm(y): 0.9893, norm:0.6491, tok/sec: 186384.19, flops:195.67, batch-reuse:1
@ 2157 train 4.3668 , allloss: 4.3668, dt: 697.57ms, fracRes: 0.3865, norm(attn): 0.8633, norm(output): 0.7578, norm(x): 1.0631, norm(y): 0.9895, norm:0.6791, tok/sec: 187897.32, flops:197.25, batch-reuse:1
@ 2158 train 4.3574 , allloss: 4.3574, dt: 714.34ms, fracRes: 0.3884, norm(attn): 0.8672, norm(output): 0.7539, norm(x): 1.0635, norm(y): 0.9894, norm:0.6127, tok/sec: 183485.94, flops:192.62, batch-reuse:1
@ 2159 train 4.3040 , allloss: 4.3040, dt: 713.06ms, fracRes: 0.3855, norm(attn): 0.8711, norm(output): 0.7539, norm(x): 1.0594, norm(y): 0.9894, norm:0.6148, tok/sec: 183815.52, flops:192.97, batch-reuse:1
@ 2160 train 4.2738 , allloss: 4.2738, dt: 704.38ms, fracRes: 0.3820, norm(attn): 0.8750, norm(output): 0.7656, norm(x): 1.0665, norm(y): 0.9892, norm:0.6967, tok/sec: 186080.30, flops:195.35, batch-reuse:1
@ 2161 train 4.2712 , allloss: 4.2712, dt: 688.08ms, fracRes: 0.3845, norm(attn): 0.8867, norm(output): 0.7617, norm(x): 1.0685, norm(y): 0.9891, norm:0.7262, tok/sec: 190489.26, flops:199.98, batch-reuse:1
@ 2162 train 4.2743 , allloss: 4.2743, dt: 697.82ms, fracRes: 0.3872, norm(attn): 0.8828, norm(output): 0.7500, norm(x): 1.0548, norm(y): 0.9897, norm:0.6656, tok/sec: 187831.91, flops:197.19, batch-reuse:1
@ 2163 train 4.3631 , allloss: 4.3631, dt: 698.41ms, fracRes: 0.3886, norm(attn): 0.8945, norm(output): 0.7500, norm(x): 1.0624, norm(y): 0.9897, norm:0.6788, tok/sec: 187672.12, flops:197.02, batch-reuse:1
@ 2164 train 4.2430 , allloss: 4.2430, dt: 696.04ms, fracRes: 0.3874, norm(attn): 0.9219, norm(output): 0.7656, norm(x): 1.0615, norm(y): 0.9895, norm:0.6364, tok/sec: 188311.56, flops:197.69, batch-reuse:1
@ 2165 train 4.2675 , allloss: 4.2675, dt: 703.75ms, fracRes: 0.3868, norm(attn): 0.9297, norm(output): 0.7500, norm(x): 1.0487, norm(y): 0.9893, norm:0.6456, tok/sec: 186246.66, flops:195.52, batch-reuse:1
@ 2166 train 4.2974 , allloss: 4.2974, dt: 690.67ms, fracRes: 0.3876, norm(attn): 0.9297, norm(output): 0.7500, norm(x): 1.0556, norm(y): 0.9894, norm:0.6219, tok/sec: 189774.88, flops:199.23, batch-reuse:1
@ 2167 train 4.3414 , allloss: 4.3414, dt: 690.61ms, fracRes: 0.3890, norm(attn): 0.9141, norm(output): 0.7500, norm(x): 1.0595, norm(y): 0.9897, norm:0.7155, tok/sec: 189790.28, flops:199.24, batch-reuse:1
@ 2168 train 4.3641 , allloss: 4.3641, dt: 686.05ms, fracRes: 0.3889, norm(attn): 0.9141, norm(output): 0.7422, norm(x): 1.0513, norm(y): 0.9897, norm:0.6730, tok/sec: 191054.21, flops:200.57, batch-reuse:1
@ 2169 train 4.3509 , allloss: 4.3509, dt: 690.39ms, fracRes: 0.3874, norm(attn): 0.9219, norm(output): 0.7461, norm(x): 1.0500, norm(y): 0.9899, norm:0.5985, tok/sec: 189851.16, flops:199.31, batch-reuse:1
@ 2170 train 4.3721 , allloss: 4.3721, dt: 705.64ms, fracRes: 0.3862, norm(attn): 0.9141, norm(output): 0.7461, norm(x): 1.0516, norm(y): 0.9897, norm:0.6084, tok/sec: 185749.46, flops:195.00, batch-reuse:1
@ 2171 train 4.3721 , allloss: 4.3721, dt: 701.93ms, fracRes: 0.3869, norm(attn): 0.9062, norm(output): 0.7500, norm(x): 1.0558, norm(y): 0.9896, norm:0.6234, tok/sec: 186731.87, flops:196.03, batch-reuse:1
@ 2172 train 4.4125 , allloss: 4.4125, dt: 699.58ms, fracRes: 0.3883, norm(attn): 0.8984, norm(output): 0.7500, norm(x): 1.0558, norm(y): 0.9900, norm:0.5694, tok/sec: 187357.31, flops:196.69, batch-reuse:1
@ 2173 train 4.3108 , allloss: 4.3108, dt: 698.13ms, fracRes: 0.3870, norm(attn): 0.9023, norm(output): 0.7461, norm(x): 1.0506, norm(y): 0.9900, norm:0.5844, tok/sec: 187747.23, flops:197.10, batch-reuse:1
@ 2174 train 4.3348 , allloss: 4.3348, dt: 697.85ms, fracRes: 0.3885, norm(attn): 0.9141, norm(output): 0.7500, norm(x): 1.0542, norm(y): 0.9897, norm:0.5726, tok/sec: 187821.51, flops:197.18, batch-reuse:1
@ 2175 train 4.3022 , allloss: 4.3022, dt: 694.36ms, fracRes: 0.3880, norm(attn): 0.9141, norm(output): 0.7422, norm(x): 1.0534, norm(y): 0.9895, norm:0.5965, tok/sec: 188765.66, flops:198.17, batch-reuse:1
@ 2176 train 4.3207 , allloss: 4.3207, dt: 699.14ms, fracRes: 0.3880, norm(attn): 0.8906, norm(output): 0.7422, norm(x): 1.0471, norm(y): 0.9896, norm:0.5512, tok/sec: 187476.92, flops:196.81, batch-reuse:1
@ 2177 train 4.3410 , allloss: 4.3410, dt: 694.70ms, fracRes: 0.3887, norm(attn): 0.8906, norm(output): 0.7383, norm(x): 1.0495, norm(y): 0.9899, norm:0.5658, tok/sec: 188674.89, flops:198.07, batch-reuse:1
@ 2178 train 4.3504 , allloss: 4.3504, dt: 693.02ms, fracRes: 0.3886, norm(attn): 0.8945, norm(output): 0.7461, norm(x): 1.0529, norm(y): 0.9895, norm:0.6568, tok/sec: 189131.86, flops:198.55, batch-reuse:1
@ 2179 train 4.3339 , allloss: 4.3339, dt: 701.19ms, fracRes: 0.3879, norm(attn): 0.9141, norm(output): 0.7461, norm(x): 1.0523, norm(y): 0.9898, norm:0.6916, tok/sec: 186926.67, flops:196.24, batch-reuse:1
@ 2180 train 4.2660 , allloss: 4.2660, dt: 697.69ms, fracRes: 0.3883, norm(attn): 0.9062, norm(output): 0.7500, norm(x): 1.0538, norm(y): 0.9894, norm:0.5979, tok/sec: 187864.83, flops:197.22, batch-reuse:1
@ 2181 train 4.2597 , allloss: 4.2597, dt: 709.36ms, fracRes: 0.3885, norm(attn): 0.9141, norm(output): 0.7578, norm(x): 1.0669, norm(y): 0.9897, norm:0.6955, tok/sec: 184775.54, flops:193.98, batch-reuse:1
@ 2182 train 4.3146 , allloss: 4.3146, dt: 692.94ms, fracRes: 0.3884, norm(attn): 0.9141, norm(output): 0.7578, norm(x): 1.0622, norm(y): 0.9894, norm:0.7162, tok/sec: 189153.72, flops:198.57, batch-reuse:1
@ 2183 train 4.1645 , allloss: 4.1645, dt: 708.06ms, fracRes: 0.3877, norm(attn): 0.8984, norm(output): 0.7539, norm(x): 1.0603, norm(y): 0.9892, norm:0.7030, tok/sec: 185115.31, flops:194.33, batch-reuse:1
@ 2184 train 4.0855 , allloss: 4.0855, dt: 708.85ms, fracRes: 0.3874, norm(attn): 0.8828, norm(output): 0.7500, norm(x): 1.0551, norm(y): 0.9892, norm:0.7515, tok/sec: 184909.09, flops:194.12, batch-reuse:1
@ 2185 train 4.2786 , allloss: 4.2786, dt: 710.62ms, fracRes: 0.3884, norm(attn): 0.8750, norm(output): 0.7539, norm(x): 1.0636, norm(y): 0.9893, norm:0.7149, tok/sec: 184446.97, flops:193.63, batch-reuse:1
@ 2186 train 4.2253 , allloss: 4.2253, dt: 709.80ms, fracRes: 0.3866, norm(attn): 0.8711, norm(output): 0.7383, norm(x): 1.0410, norm(y): 0.9894, norm:0.7349, tok/sec: 184659.35, flops:193.86, batch-reuse:1
@ 2187 train 4.2003 , allloss: 4.2003, dt: 706.30ms, fracRes: 0.3870, norm(attn): 0.8672, norm(output): 0.7383, norm(x): 1.0404, norm(y): 0.9893, norm:0.7021, tok/sec: 185574.34, flops:194.82, batch-reuse:1
@ 2188 train 4.2094 , allloss: 4.2094, dt: 709.55ms, fracRes: 0.3893, norm(attn): 0.8594, norm(output): 0.7344, norm(x): 1.0410, norm(y): 0.9893, norm:0.6647, tok/sec: 184725.49, flops:193.93, batch-reuse:1
@ 2189 train 4.2355 , allloss: 4.2355, dt: 708.53ms, fracRes: 0.3890, norm(attn): 0.8633, norm(output): 0.7383, norm(x): 1.0465, norm(y): 0.9896, norm:0.6618, tok/sec: 184992.03, flops:194.20, batch-reuse:1
@ 2190 train 4.0840 , allloss: 4.0840, dt: 690.00ms, fracRes: 0.3897, norm(attn): 0.8594, norm(output): 0.7578, norm(x): 1.0641, norm(y): 0.9892, norm:0.6739, tok/sec: 189960.39, flops:199.42, batch-reuse:1
@ 2191 train 4.2430 , allloss: 4.2430, dt: 704.55ms, fracRes: 0.3877, norm(attn): 0.8672, norm(output): 0.7422, norm(x): 1.0509, norm(y): 0.9890, norm:0.8109, tok/sec: 186037.41, flops:195.30, batch-reuse:1
@ 2192 train 4.2049 , allloss: 4.2049, dt: 704.43ms, fracRes: 0.3880, norm(attn): 0.8633, norm(output): 0.7344, norm(x): 1.0415, norm(y): 0.9892, norm:0.7818, tok/sec: 186068.90, flops:195.34, batch-reuse:1
@ 2193 train 4.1743 , allloss: 4.1743, dt: 709.31ms, fracRes: 0.3906, norm(attn): 0.8711, norm(output): 0.7461, norm(x): 1.0537, norm(y): 0.9895, norm:0.8236, tok/sec: 184789.32, flops:193.99, batch-reuse:1
@ 2194 train 4.3260 , allloss: 4.3260, dt: 707.88ms, fracRes: 0.3896, norm(attn): 0.8672, norm(output): 0.7422, norm(x): 1.0517, norm(y): 0.9897, norm:0.6564, tok/sec: 185160.57, flops:194.38, batch-reuse:1
@ 2195 train 4.2496 , allloss: 4.2496, dt: 709.49ms, fracRes: 0.3905, norm(attn): 0.8711, norm(output): 0.7500, norm(x): 1.0577, norm(y): 0.9896, norm:0.7347, tok/sec: 184742.07, flops:193.94, batch-reuse:1
@ 2196 train 4.3171 , allloss: 4.3171, dt: 706.95ms, fracRes: 0.3890, norm(attn): 0.8711, norm(output): 0.7461, norm(x): 1.0544, norm(y): 0.9900, norm:0.7568, tok/sec: 185404.80, flops:194.64, batch-reuse:1
@ 2197 train 4.1530 , allloss: 4.1530, dt: 709.12ms, fracRes: 0.3880, norm(attn): 0.8672, norm(output): 0.7539, norm(x): 1.0558, norm(y): 0.9897, norm:0.6709, tok/sec: 184838.03, flops:194.04, batch-reuse:1
@ 2198 train 4.2188 , allloss: 4.2188, dt: 698.37ms, fracRes: 0.3885, norm(attn): 0.8711, norm(output): 0.7383, norm(x): 1.0456, norm(y): 0.9893, norm:0.7870, tok/sec: 187683.84, flops:197.03, batch-reuse:1
@ 2199 train 4.2913 , allloss: 4.2913, dt: 708.85ms, fracRes: 0.3888, norm(attn): 0.8750, norm(output): 0.7500, norm(x): 1.0574, norm(y): 0.9895, norm:0.6889, tok/sec: 184907.35, flops:194.12, batch-reuse:1
@ 2200 train 4.1879 , allloss: 4.1879, dt: 705.82ms, fracRes: 0.3892, norm(attn): 0.8672, norm(output): 0.7461, norm(x): 1.0539, norm(y): 0.9891, norm:0.6080, tok/sec: 185701.97, flops:194.95, batch-reuse:1
@ 2201 train 4.2423 , allloss: 4.2423, dt: 706.50ms, fracRes: 0.3870, norm(attn): 0.8750, norm(output): 0.7422, norm(x): 1.0419, norm(y): 0.9894, norm:0.6794, tok/sec: 185522.30, flops:194.76, batch-reuse:1
@ 2202 train 4.2831 , allloss: 4.2831, dt: 709.72ms, fracRes: 0.3905, norm(attn): 0.8750, norm(output): 0.7461, norm(x): 1.0565, norm(y): 0.9894, norm:0.6925, tok/sec: 184680.13, flops:193.88, batch-reuse:1
@ 2203 train 4.2346 , allloss: 4.2346, dt: 710.61ms, fracRes: 0.3881, norm(attn): 0.9141, norm(output): 0.7461, norm(x): 1.0530, norm(y): 0.9896, norm:0.6226, tok/sec: 184451.12, flops:193.64, batch-reuse:1
@ 2204 train 4.2829 , allloss: 4.2829, dt: 709.05ms, fracRes: 0.3883, norm(attn): 0.9258, norm(output): 0.7422, norm(x): 1.0510, norm(y): 0.9897, norm:0.5824, tok/sec: 184854.88, flops:194.06, batch-reuse:1
@ 2205 train 4.2285 , allloss: 4.2285, dt: 712.32ms, fracRes: 0.3879, norm(attn): 0.8984, norm(output): 0.7422, norm(x): 1.0520, norm(y): 0.9893, norm:0.6439, tok/sec: 184007.66, flops:193.17, batch-reuse:1
@ 2206 train 4.1729 , allloss: 4.1729, dt: 695.40ms, fracRes: 0.3891, norm(attn): 0.9219, norm(output): 0.7422, norm(x): 1.0489, norm(y): 0.9898, norm:0.6788, tok/sec: 188484.97, flops:197.87, batch-reuse:1
@ 2207 train 4.1883 , allloss: 4.1883, dt: 682.10ms, fracRes: 0.3904, norm(attn): 0.9141, norm(output): 0.7422, norm(x): 1.0496, norm(y): 0.9896, norm:0.5672, tok/sec: 192160.70, flops:201.73, batch-reuse:1
@ 2208 train 4.2575 , allloss: 4.2575, dt: 693.66ms, fracRes: 0.3910, norm(attn): 0.9023, norm(output): 0.7461, norm(x): 1.0538, norm(y): 0.9893, norm:0.6513, tok/sec: 188958.22, flops:198.37, batch-reuse:1
@ 2209 train 4.1559 , allloss: 4.1559, dt: 701.75ms, fracRes: 0.3895, norm(attn): 0.9180, norm(output): 0.7422, norm(x): 1.0439, norm(y): 0.9893, norm:0.5673, tok/sec: 186778.50, flops:196.08, batch-reuse:1
@ 2210 train 4.1052 , allloss: 4.1052, dt: 684.24ms, fracRes: 0.3896, norm(attn): 0.9023, norm(output): 0.7461, norm(x): 1.0484, norm(y): 0.9893, norm:0.6217, tok/sec: 191559.49, flops:201.10, batch-reuse:1
@ 2211 train 4.2050 , allloss: 4.2050, dt: 697.40ms, fracRes: 0.3908, norm(attn): 0.8828, norm(output): 0.7383, norm(x): 1.0488, norm(y): 0.9893, norm:0.6333, tok/sec: 187944.54, flops:197.30, batch-reuse:1
@ 2212 train 4.1178 , allloss: 4.1178, dt: 699.09ms, fracRes: 0.3916, norm(attn): 0.8789, norm(output): 0.7383, norm(x): 1.0476, norm(y): 0.9892, norm:0.5848, tok/sec: 187489.13, flops:196.83, batch-reuse:1
@ 2213 train 4.4682 , allloss: 4.4682, dt: 685.00ms, fracRes: 0.3917, norm(attn): 0.8750, norm(output): 0.7656, norm(x): 1.0734, norm(y): 0.9892, norm:0.8009, tok/sec: 191345.07, flops:200.87, batch-reuse:1
@ 2214 train 4.3336 , allloss: 4.3336, dt: 687.73ms, fracRes: 0.3887, norm(attn): 0.8867, norm(output): 0.7383, norm(x): 1.0462, norm(y): 0.9896, norm:0.9866, tok/sec: 190587.79, flops:200.08, batch-reuse:1
@ 2215 train 4.2142 , allloss: 4.2142, dt: 693.95ms, fracRes: 0.3900, norm(attn): 0.8945, norm(output): 0.7422, norm(x): 1.0511, norm(y): 0.9894, norm:0.7769, tok/sec: 188877.40, flops:198.28, batch-reuse:1
@ 2216 train 4.2729 , allloss: 4.2729, dt: 720.12ms, fracRes: 0.3928, norm(attn): 0.9023, norm(output): 0.7500, norm(x): 1.0583, norm(y): 0.9894, norm:0.7839, tok/sec: 182014.96, flops:191.08, batch-reuse:1
@ 2217 train 4.2525 , allloss: 4.2525, dt: 703.77ms, fracRes: 0.3919, norm(attn): 0.9023, norm(output): 0.7344, norm(x): 1.0444, norm(y): 0.9897, norm:0.6307, tok/sec: 186241.99, flops:195.52, batch-reuse:1
@ 2218 train 4.1674 , allloss: 4.1674, dt: 705.71ms, fracRes: 0.3909, norm(attn): 0.8906, norm(output): 0.7383, norm(x): 1.0444, norm(y): 0.9899, norm:0.6724, tok/sec: 185729.76, flops:194.98, batch-reuse:1
@ 2219 train 4.2690 , allloss: 4.2690, dt: 707.02ms, fracRes: 0.3925, norm(attn): 0.8906, norm(output): 0.7422, norm(x): 1.0472, norm(y): 0.9897, norm:0.6358, tok/sec: 185387.04, flops:194.62, batch-reuse:1
@ 2220 train 4.2999 , allloss: 4.2999, dt: 693.11ms, fracRes: 0.3929, norm(attn): 0.8906, norm(output): 0.7422, norm(x): 1.0541, norm(y): 0.9898, norm:0.6564, tok/sec: 189108.11, flops:198.53, batch-reuse:1
@ 2221 train 4.1003 , allloss: 4.1003, dt: 706.89ms, fracRes: 0.3906, norm(attn): 0.9023, norm(output): 0.7500, norm(x): 1.0565, norm(y): 0.9894, norm:0.5915, tok/sec: 185421.74, flops:194.66, batch-reuse:1
@ 2222 train 4.2376 , allloss: 4.2376, dt: 696.57ms, fracRes: 0.3912, norm(attn): 0.9180, norm(output): 0.7422, norm(x): 1.0542, norm(y): 0.9899, norm:0.5902, tok/sec: 188167.76, flops:197.54, batch-reuse:1
@ 2223 train 4.1966 , allloss: 4.1966, dt: 707.63ms, fracRes: 0.3925, norm(attn): 0.9258, norm(output): 0.7383, norm(x): 1.0493, norm(y): 0.9896, norm:0.6709, tok/sec: 185226.51, flops:194.45, batch-reuse:1
@ 2224 train 4.2008 , allloss: 4.2008, dt: 686.90ms, fracRes: 0.3930, norm(attn): 0.9375, norm(output): 0.7578, norm(x): 1.0665, norm(y): 0.9893, norm:0.6641, tok/sec: 190817.87, flops:200.32, batch-reuse:1
@ 2225 train 4.3100 , allloss: 4.3100, dt: 700.68ms, fracRes: 0.3939, norm(attn): 0.9375, norm(output): 0.7383, norm(x): 1.0497, norm(y): 0.9896, norm:0.6701, tok/sec: 187062.72, flops:196.38, batch-reuse:1
@ 2226 train 4.2762 , allloss: 4.2762, dt: 699.46ms, fracRes: 0.3937, norm(attn): 0.9375, norm(output): 0.7461, norm(x): 1.0531, norm(y): 0.9898, norm:0.6482, tok/sec: 187390.01, flops:196.72, batch-reuse:1
@ 2227 train 4.2039 , allloss: 4.2039, dt: 702.03ms, fracRes: 0.3950, norm(attn): 0.9336, norm(output): 0.7383, norm(x): 1.0523, norm(y): 0.9897, norm:0.6928, tok/sec: 186704.73, flops:196.00, batch-reuse:1
@ 2228 train 4.1961 , allloss: 4.1961, dt: 703.50ms, fracRes: 0.3940, norm(attn): 0.9336, norm(output): 0.7383, norm(x): 1.0465, norm(y): 0.9894, norm:0.6944, tok/sec: 186313.06, flops:195.59, batch-reuse:1
@ 2229 train 4.3833 , allloss: 4.3833, dt: 702.47ms, fracRes: 0.3946, norm(attn): 0.9336, norm(output): 0.7422, norm(x): 1.0594, norm(y): 0.9899, norm:0.6107, tok/sec: 186588.01, flops:195.88, batch-reuse:1
@ 2230 train 4.3529 , allloss: 4.3529, dt: 704.35ms, fracRes: 0.3942, norm(attn): 0.9375, norm(output): 0.7422, norm(x): 1.0611, norm(y): 0.9900, norm:0.6417, tok/sec: 186089.37, flops:195.36, batch-reuse:1
@ 2231 train 4.4625 , allloss: 4.4625, dt: 697.48ms, fracRes: 0.3922, norm(attn): 0.9414, norm(output): 0.7500, norm(x): 1.0600, norm(y): 0.9901, norm:0.6445, tok/sec: 187921.73, flops:197.28, batch-reuse:1
@ 2232 train 4.4061 , allloss: 4.4061, dt: 707.52ms, fracRes: 0.3916, norm(attn): 0.9375, norm(output): 0.7461, norm(x): 1.0504, norm(y): 0.9897, norm:0.5448, tok/sec: 185256.29, flops:194.48, batch-reuse:1
@ 2233 train 4.3435 , allloss: 4.3435, dt: 703.78ms, fracRes: 0.3914, norm(attn): 0.9414, norm(output): 0.7461, norm(x): 1.0540, norm(y): 0.9896, norm:0.6017, tok/sec: 186239.59, flops:195.51, batch-reuse:1
@ 2234 train 4.3967 , allloss: 4.3967, dt: 709.12ms, fracRes: 0.3956, norm(attn): 0.9492, norm(output): 0.7578, norm(x): 1.0713, norm(y): 0.9894, norm:0.6905, tok/sec: 184837.10, flops:194.04, batch-reuse:1
@ 2235 train 4.3384 , allloss: 4.3384, dt: 714.90ms, fracRes: 0.3936, norm(attn): 0.9570, norm(output): 0.7422, norm(x): 1.0533, norm(y): 0.9895, norm:0.6657, tok/sec: 183343.18, flops:192.47, batch-reuse:1
@ 2236 train 4.3091 , allloss: 4.3091, dt: 708.23ms, fracRes: 0.3965, norm(attn): 0.9688, norm(output): 0.7500, norm(x): 1.0647, norm(y): 0.9897, norm:0.6391, tok/sec: 185069.94, flops:194.29, batch-reuse:1
@ 2237 train 4.3563 , allloss: 4.3563, dt: 695.29ms, fracRes: 0.3952, norm(attn): 0.9688, norm(output): 0.7539, norm(x): 1.0652, norm(y): 0.9895, norm:0.5989, tok/sec: 188514.12, flops:197.90, batch-reuse:1
@ 2238 train 4.3099 , allloss: 4.3099, dt: 702.82ms, fracRes: 0.3957, norm(attn): 0.9727, norm(output): 0.7461, norm(x): 1.0586, norm(y): 0.9897, norm:0.6633, tok/sec: 186495.34, flops:195.78, batch-reuse:1
@ 2239 train 4.3019 , allloss: 4.3019, dt: 701.13ms, fracRes: 0.3948, norm(attn): 0.9805, norm(output): 0.7422, norm(x): 1.0548, norm(y): 0.9899, norm:0.5955, tok/sec: 186943.51, flops:196.25, batch-reuse:1
@ 2240 train 4.3877 , allloss: 4.3877, dt: 703.50ms, fracRes: 0.3956, norm(attn): 0.9805, norm(output): 0.7461, norm(x): 1.0654, norm(y): 0.9902, norm:0.6721, tok/sec: 186314.01, flops:195.59, batch-reuse:1
@ 2241 train 4.4153 , allloss: 4.4153, dt: 706.87ms, fracRes: 0.3951, norm(attn): 0.9922, norm(output): 0.7500, norm(x): 1.0643, norm(y): 0.9897, norm:0.6867, tok/sec: 185426.18, flops:194.66, batch-reuse:1
@ 2242 train 4.3638 , allloss: 4.3638, dt: 699.89ms, fracRes: 0.3947, norm(attn): 0.9961, norm(output): 0.7383, norm(x): 1.0510, norm(y): 0.9898, norm:0.6334, tok/sec: 187274.09, flops:196.60, batch-reuse:1
@ 2243 train 4.3623 , allloss: 4.3623, dt: 698.93ms, fracRes: 0.3951, norm(attn): 1.0000, norm(output): 0.7500, norm(x): 1.0609, norm(y): 0.9897, norm:0.7384, tok/sec: 187532.88, flops:196.87, batch-reuse:1
@ 2244 train 4.4152 , allloss: 4.4152, dt: 705.35ms, fracRes: 0.3932, norm(attn): 1.0078, norm(output): 0.7500, norm(x): 1.0600, norm(y): 0.9896, norm:0.7454, tok/sec: 185825.18, flops:195.08, batch-reuse:1
@ 2245 train 4.3154 , allloss: 4.3154, dt: 705.12ms, fracRes: 0.3949, norm(attn): 1.0156, norm(output): 0.7422, norm(x): 1.0517, norm(y): 0.9895, norm:0.6322, tok/sec: 185885.31, flops:195.14, batch-reuse:1
@ 2246 train 4.3061 , allloss: 4.3061, dt: 695.89ms, fracRes: 0.3916, norm(attn): 1.0234, norm(output): 0.7500, norm(x): 1.0562, norm(y): 0.9897, norm:0.6382, tok/sec: 188350.27, flops:197.73, batch-reuse:1
@ 2247 train 4.3576 , allloss: 4.3576, dt: 687.20ms, fracRes: 0.3922, norm(attn): 1.0156, norm(output): 0.7500, norm(x): 1.0549, norm(y): 0.9898, norm:0.6229, tok/sec: 190733.92, flops:200.23, batch-reuse:1
@ 2248 train 4.4090 , allloss: 4.4090, dt: 698.43ms, fracRes: 0.3938, norm(attn): 1.0078, norm(output): 0.7422, norm(x): 1.0514, norm(y): 0.9898, norm:0.6089, tok/sec: 187665.97, flops:197.01, batch-reuse:1
@ 2249 train 4.2714 , allloss: 4.2714, dt: 694.64ms, fracRes: 0.3943, norm(attn): 1.0156, norm(output): 0.7344, norm(x): 1.0522, norm(y): 0.9900, norm:0.5919, tok/sec: 188690.89, flops:198.09, batch-reuse:1
@ 2250 train 4.3908 , allloss: 4.3908, dt: 692.49ms, fracRes: 0.3939, norm(attn): 1.0312, norm(output): 0.7500, norm(x): 1.0589, norm(y): 0.9897, norm:0.6076, tok/sec: 189275.64, flops:198.70, batch-reuse:1
@ 2251 train 4.3190 , allloss: 4.3190, dt: 696.13ms, fracRes: 0.3927, norm(attn): 1.0391, norm(output): 0.7461, norm(x): 1.0597, norm(y): 0.9902, norm:0.7072, tok/sec: 188287.18, flops:197.66, batch-reuse:1
@ 2252 train 4.3120 , allloss: 4.3120, dt: 679.00ms, fracRes: 0.3958, norm(attn): 1.0469, norm(output): 0.7500, norm(x): 1.0602, norm(y): 0.9900, norm:0.8327, tok/sec: 193038.00, flops:202.65, batch-reuse:1
@ 2253 train 4.3221 , allloss: 4.3221, dt: 687.47ms, fracRes: 0.3954, norm(attn): 1.0547, norm(output): 0.7383, norm(x): 1.0511, norm(y): 0.9900, norm:0.7040, tok/sec: 190657.19, flops:200.15, batch-reuse:1
@ 2254 train 4.4205 , allloss: 4.4205, dt: 689.40ms, fracRes: 0.3955, norm(attn): 1.0547, norm(output): 0.7461, norm(x): 1.0523, norm(y): 0.9902, norm:0.7428, tok/sec: 190123.71, flops:199.59, batch-reuse:1
@ 2255 train 4.3337 , allloss: 4.3337, dt: 689.78ms, fracRes: 0.3970, norm(attn): 1.0625, norm(output): 0.7500, norm(x): 1.0604, norm(y): 0.9900, norm:0.6724, tok/sec: 190021.19, flops:199.48, batch-reuse:1
@ 2256 train 4.3937 , allloss: 4.3937, dt: 687.39ms, fracRes: 0.3974, norm(attn): 1.0625, norm(output): 0.7578, norm(x): 1.0671, norm(y): 0.9899, norm:0.7907, tok/sec: 190680.27, flops:200.18, batch-reuse:1
@ 2257 train 4.3647 , allloss: 4.3647, dt: 689.30ms, fracRes: 0.3967, norm(attn): 1.0625, norm(output): 0.7539, norm(x): 1.0604, norm(y): 0.9903, norm:0.7321, tok/sec: 190151.85, flops:199.62, batch-reuse:1
@ 2258 train 4.3120 , allloss: 4.3120, dt: 702.24ms, fracRes: 0.3984, norm(attn): 1.0391, norm(output): 0.7461, norm(x): 1.0614, norm(y): 0.9898, norm:0.6879, tok/sec: 186649.39, flops:195.94, batch-reuse:1
@ 2259 train 4.4406 , allloss: 4.4406, dt: 708.49ms, fracRes: 0.3969, norm(attn): 1.0469, norm(output): 0.7500, norm(x): 1.0618, norm(y): 0.9901, norm:0.6708, tok/sec: 185002.18, flops:194.22, batch-reuse:1
@ 2260 train 4.3225 , allloss: 4.3225, dt: 690.01ms, fracRes: 0.3979, norm(attn): 1.0156, norm(output): 0.7500, norm(x): 1.0606, norm(y): 0.9901, norm:0.7752, tok/sec: 189957.89, flops:199.42, batch-reuse:1
@ 2261 train 4.3738 , allloss: 4.3738, dt: 708.35ms, fracRes: 0.3988, norm(attn): 1.0078, norm(output): 0.7461, norm(x): 1.0619, norm(y): 0.9898, norm:0.6612, tok/sec: 185037.74, flops:194.25, batch-reuse:1
@ 2262 train 4.3083 , allloss: 4.3083, dt: 688.42ms, fracRes: 0.3997, norm(attn): 1.0000, norm(output): 0.7500, norm(x): 1.0596, norm(y): 0.9899, norm:0.7171, tok/sec: 190394.59, flops:199.88, batch-reuse:1
@ 2263 train 4.4319 , allloss: 4.4319, dt: 700.85ms, fracRes: 0.3989, norm(attn): 1.0000, norm(output): 0.7539, norm(x): 1.0653, norm(y): 0.9902, norm:0.7263, tok/sec: 187017.92, flops:196.33, batch-reuse:1
@ 2264 train 4.3394 , allloss: 4.3394, dt: 700.04ms, fracRes: 0.3978, norm(attn): 1.0000, norm(output): 0.7500, norm(x): 1.0641, norm(y): 0.9900, norm:0.6075, tok/sec: 187234.67, flops:196.56, batch-reuse:1
@ 2265 train 4.3287 , allloss: 4.3287, dt: 699.08ms, fracRes: 0.3958, norm(attn): 0.9961, norm(output): 0.7461, norm(x): 1.0562, norm(y): 0.9896, norm:0.6107, tok/sec: 187492.07, flops:196.83, batch-reuse:1
@ 2266 train 4.2314 , allloss: 4.2314, dt: 696.50ms, fracRes: 0.3962, norm(attn): 0.9922, norm(output): 0.7383, norm(x): 1.0493, norm(y): 0.9898, norm:0.6860, tok/sec: 188185.34, flops:197.56, batch-reuse:1
@ 2267 train 4.3510 , allloss: 4.3510, dt: 704.69ms, fracRes: 0.3983, norm(attn): 0.9844, norm(output): 0.7461, norm(x): 1.0615, norm(y): 0.9897, norm:0.7480, tok/sec: 186000.15, flops:195.26, batch-reuse:1
@ 2268 train 4.3780 , allloss: 4.3780, dt: 707.28ms, fracRes: 0.4006, norm(attn): 0.9492, norm(output): 0.7500, norm(x): 1.0667, norm(y): 0.9897, norm:0.6366, tok/sec: 185318.55, flops:194.55, batch-reuse:1
@ 2269 train 4.3967 , allloss: 4.3967, dt: 710.27ms, fracRes: 0.3990, norm(attn): 0.9414, norm(output): 0.7461, norm(x): 1.0615, norm(y): 0.9900, norm:0.6206, tok/sec: 184538.42, flops:193.73, batch-reuse:1
@ 2270 train 4.4386 , allloss: 4.4386, dt: 697.59ms, fracRes: 0.3982, norm(attn): 0.9414, norm(output): 0.7500, norm(x): 1.0653, norm(y): 0.9903, norm:0.5968, tok/sec: 187892.70, flops:197.25, batch-reuse:1
@ 2271 train 4.3190 , allloss: 4.3190, dt: 705.93ms, fracRes: 0.3982, norm(attn): 0.9375, norm(output): 0.7500, norm(x): 1.0657, norm(y): 0.9897, norm:0.6513, tok/sec: 185671.86, flops:194.92, batch-reuse:1
@ 2272 train 4.2763 , allloss: 4.2763, dt: 704.04ms, fracRes: 0.3956, norm(attn): 0.9414, norm(output): 0.7461, norm(x): 1.0573, norm(y): 0.9900, norm:0.5122, tok/sec: 186172.05, flops:195.44, batch-reuse:1
@ 2273 train 4.4030 , allloss: 4.4030, dt: 701.29ms, fracRes: 0.3944, norm(attn): 0.9375, norm(output): 0.7461, norm(x): 1.0548, norm(y): 0.9901, norm:0.6243, tok/sec: 186901.06, flops:196.21, batch-reuse:1
@ 2274 train 4.3094 , allloss: 4.3094, dt: 701.39ms, fracRes: 0.3947, norm(attn): 0.9219, norm(output): 0.7422, norm(x): 1.0508, norm(y): 0.9896, norm:0.7301, tok/sec: 186874.82, flops:196.18, batch-reuse:1
@ 2275 train 4.3384 , allloss: 4.3384, dt: 703.23ms, fracRes: 0.3964, norm(attn): 0.9297, norm(output): 0.7422, norm(x): 1.0526, norm(y): 0.9898, norm:0.5704, tok/sec: 186386.15, flops:195.67, batch-reuse:1
@ 2276 train 4.4241 , allloss: 4.4241, dt: 688.87ms, fracRes: 0.3967, norm(attn): 0.9336, norm(output): 0.7461, norm(x): 1.0608, norm(y): 0.9906, norm:0.6062, tok/sec: 190270.44, flops:199.75, batch-reuse:1
@ 2277 train 4.3525 , allloss: 4.3525, dt: 704.45ms, fracRes: 0.3955, norm(attn): 0.9375, norm(output): 0.7422, norm(x): 1.0583, norm(y): 0.9908, norm:0.6083, tok/sec: 186063.23, flops:195.33, batch-reuse:1
@ 2278 train 4.3465 , allloss: 4.3465, dt: 701.24ms, fracRes: 0.3963, norm(attn): 0.9414, norm(output): 0.7539, norm(x): 1.0667, norm(y): 0.9897, norm:0.5979, tok/sec: 186914.21, flops:196.22, batch-reuse:1
@ 2279 train 4.3220 , allloss: 4.3220, dt: 695.82ms, fracRes: 0.3977, norm(attn): 0.9414, norm(output): 0.7461, norm(x): 1.0588, norm(y): 0.9895, norm:0.6469, tok/sec: 188370.27, flops:197.75, batch-reuse:1
@ 2280 train 4.3168 , allloss: 4.3168, dt: 687.72ms, fracRes: 0.3964, norm(attn): 0.9453, norm(output): 0.7383, norm(x): 1.0488, norm(y): 0.9899, norm:0.5689, tok/sec: 190588.25, flops:200.08, batch-reuse:1
@ 2281 train 4.2448 , allloss: 4.2448, dt: 697.99ms, fracRes: 0.3963, norm(attn): 0.9414, norm(output): 0.7383, norm(x): 1.0551, norm(y): 0.9895, norm:0.5925, tok/sec: 187784.04, flops:197.14, batch-reuse:1
@ 2282 train 4.4679 , allloss: 4.4679, dt: 699.75ms, fracRes: 0.3970, norm(attn): 0.9453, norm(output): 0.7383, norm(x): 1.0562, norm(y): 0.9904, norm:0.6804, tok/sec: 187312.31, flops:196.64, batch-reuse:1
@ 2283 train 4.2741 , allloss: 4.2741, dt: 704.26ms, fracRes: 0.3973, norm(attn): 0.9570, norm(output): 0.7461, norm(x): 1.0567, norm(y): 0.9901, norm:0.6414, tok/sec: 186114.31, flops:195.38, batch-reuse:1
@ 2284 train 4.2551 , allloss: 4.2551, dt: 701.70ms, fracRes: 0.3995, norm(attn): 0.9453, norm(output): 0.7422, norm(x): 1.0572, norm(y): 0.9906, norm:0.6251, tok/sec: 186790.81, flops:196.09, batch-reuse:1
@ 2285 train 4.2899 , allloss: 4.2899, dt: 694.64ms, fracRes: 0.3992, norm(attn): 0.9336, norm(output): 0.7383, norm(x): 1.0550, norm(y): 0.9902, norm:0.6082, tok/sec: 188690.18, flops:198.09, batch-reuse:1
@ 2286 train 4.3590 , allloss: 4.3590, dt: 705.95ms, fracRes: 0.3970, norm(attn): 0.9258, norm(output): 0.7344, norm(x): 1.0467, norm(y): 0.9902, norm:0.6007, tok/sec: 185668.66, flops:194.92, batch-reuse:1
@ 2287 train 4.3946 , allloss: 4.3946, dt: 704.98ms, fracRes: 0.3983, norm(attn): 0.9141, norm(output): 0.7383, norm(x): 1.0505, norm(y): 0.9904, norm:0.6022, tok/sec: 185923.91, flops:195.18, batch-reuse:1
@ 2288 train 4.4352 , allloss: 4.4352, dt: 753.36ms, fracRes: 0.3994, norm(attn): 0.9062, norm(output): 0.7383, norm(x): 1.0579, norm(y): 0.9909, norm:0.6089, tok/sec: 173982.83, flops:182.65, batch-reuse:1
@ 2289 train 4.3019 , allloss: 4.3019, dt: 687.48ms, fracRes: 0.3998, norm(attn): 0.9062, norm(output): 0.7422, norm(x): 1.0643, norm(y): 0.9904, norm:0.6650, tok/sec: 190654.35, flops:200.15, batch-reuse:1
@ 2290 train 4.2282 , allloss: 4.2282, dt: 696.90ms, fracRes: 0.3982, norm(attn): 0.9062, norm(output): 0.7383, norm(x): 1.0543, norm(y): 0.9900, norm:0.6290, tok/sec: 188078.99, flops:197.45, batch-reuse:1
@ 2291 train 4.4372 , allloss: 4.4372, dt: 693.16ms, fracRes: 0.3982, norm(attn): 0.9062, norm(output): 0.7422, norm(x): 1.0604, norm(y): 0.9906, norm:0.5928, tok/sec: 189093.09, flops:198.51, batch-reuse:1
@ 2292 train 4.2826 , allloss: 4.2826, dt: 710.97ms, fracRes: 0.3987, norm(attn): 0.9023, norm(output): 0.7461, norm(x): 1.0630, norm(y): 0.9900, norm:0.5865, tok/sec: 184357.10, flops:193.54, batch-reuse:1
@ 2293 train 4.3860 , allloss: 4.3860, dt: 699.63ms, fracRes: 0.4003, norm(attn): 0.8984, norm(output): 0.7461, norm(x): 1.0664, norm(y): 0.9904, norm:0.6094, tok/sec: 187345.69, flops:196.68, batch-reuse:1
@ 2294 train 4.3359 , allloss: 4.3359, dt: 692.17ms, fracRes: 0.3981, norm(attn): 0.8867, norm(output): 0.7383, norm(x): 1.0530, norm(y): 0.9901, norm:0.5440, tok/sec: 189363.26, flops:198.79, batch-reuse:1
@ 2295 train 4.3096 , allloss: 4.3096, dt: 702.70ms, fracRes: 0.3981, norm(attn): 0.8828, norm(output): 0.7383, norm(x): 1.0552, norm(y): 0.9902, norm:0.5037, tok/sec: 186526.41, flops:195.82, batch-reuse:1
@ 2296 train 4.2942 , allloss: 4.2942, dt: 702.17ms, fracRes: 0.3964, norm(attn): 0.8906, norm(output): 0.7422, norm(x): 1.0543, norm(y): 0.9900, norm:0.5729, tok/sec: 186665.93, flops:195.96, batch-reuse:1
@ 2297 train 4.2886 , allloss: 4.2886, dt: 711.19ms, fracRes: 0.3980, norm(attn): 0.8789, norm(output): 0.7383, norm(x): 1.0547, norm(y): 0.9904, norm:0.5530, tok/sec: 184298.51, flops:193.48, batch-reuse:1
@ 2298 train 4.3069 , allloss: 4.3069, dt: 703.40ms, fracRes: 0.3983, norm(attn): 0.8711, norm(output): 0.7461, norm(x): 1.0605, norm(y): 0.9901, norm:0.6206, tok/sec: 186341.54, flops:195.62, batch-reuse:1
@ 2299 train 4.3092 , allloss: 4.3092, dt: 692.65ms, fracRes: 0.3978, norm(attn): 0.8750, norm(output): 0.7461, norm(x): 1.0577, norm(y): 0.9902, norm:0.6045, tok/sec: 189233.22, flops:198.66, batch-reuse:1
@ 2300 train 4.1793 , allloss: 4.1793, dt: 697.05ms, fracRes: 0.3977, norm(attn): 0.8789, norm(output): 0.7461, norm(x): 1.0591, norm(y): 0.9895, norm:0.5703, tok/sec: 188038.26, flops:197.40, batch-reuse:1
@ 2301 train 4.2956 , allloss: 4.2956, dt: 707.47ms, fracRes: 0.3978, norm(attn): 0.8750, norm(output): 0.7422, norm(x): 1.0587, norm(y): 0.9897, norm:0.6135, tok/sec: 185268.52, flops:194.50, batch-reuse:1
@ 2302 train 4.3041 , allloss: 4.3041, dt: 709.80ms, fracRes: 0.3972, norm(attn): 0.8750, norm(output): 0.7422, norm(x): 1.0533, norm(y): 0.9901, norm:0.5632, tok/sec: 184660.22, flops:193.86, batch-reuse:1
@ 2303 train 4.3824 , allloss: 4.3824, dt: 706.75ms, fracRes: 0.3983, norm(attn): 0.8750, norm(output): 0.7344, norm(x): 1.0510, norm(y): 0.9910, norm:0.6021, tok/sec: 185456.90, flops:194.69, batch-reuse:1
@ 2304 train 4.3170 , allloss: 4.3170, dt: 704.66ms, fracRes: 0.3976, norm(attn): 0.8672, norm(output): 0.7422, norm(x): 1.0549, norm(y): 0.9901, norm:0.6594, tok/sec: 186007.70, flops:195.27, batch-reuse:1
@ 2305 train 4.2843 , allloss: 4.2843, dt: 709.61ms, fracRes: 0.3981, norm(attn): 0.8594, norm(output): 0.7383, norm(x): 1.0520, norm(y): 0.9900, norm:0.5789, tok/sec: 184709.23, flops:193.91, batch-reuse:1
@ 2306 train 4.3039 , allloss: 4.3039, dt: 689.93ms, fracRes: 0.3994, norm(attn): 0.8555, norm(output): 0.7500, norm(x): 1.0656, norm(y): 0.9899, norm:0.6077, tok/sec: 189978.97, flops:199.44, batch-reuse:1
@ 2307 train 4.3531 , allloss: 4.3531, dt: 694.84ms, fracRes: 0.4021, norm(attn): 0.8477, norm(output): 0.7344, norm(x): 1.0616, norm(y): 0.9907, norm:0.5911, tok/sec: 188637.22, flops:198.03, batch-reuse:1
@ 2308 train 4.3221 , allloss: 4.3221, dt: 690.88ms, fracRes: 0.4022, norm(attn): 0.8672, norm(output): 0.7383, norm(x): 1.0577, norm(y): 0.9905, norm:0.6112, tok/sec: 189716.73, flops:199.16, batch-reuse:1
@ 2309 train 4.2923 , allloss: 4.2923, dt: 704.90ms, fracRes: 0.4002, norm(attn): 0.8594, norm(output): 0.7266, norm(x): 1.0502, norm(y): 0.9900, norm:0.6067, tok/sec: 185944.35, flops:195.20, batch-reuse:1
@ 2310 train 4.4157 , allloss: 4.4157, dt: 700.57ms, fracRes: 0.3999, norm(attn): 0.8633, norm(output): 0.7266, norm(x): 1.0432, norm(y): 0.9907, norm:0.6861, tok/sec: 187093.98, flops:196.41, batch-reuse:1
@ 2311 train 4.3416 , allloss: 4.3416, dt: 700.14ms, fracRes: 0.4012, norm(attn): 0.8398, norm(output): 0.7383, norm(x): 1.0586, norm(y): 0.9905, norm:0.6761, tok/sec: 187209.36, flops:196.53, batch-reuse:1
@ 2312 train 4.3471 , allloss: 4.3471, dt: 696.40ms, fracRes: 0.4007, norm(attn): 0.8398, norm(output): 0.7344, norm(x): 1.0550, norm(y): 0.9899, norm:0.6348, tok/sec: 188214.98, flops:197.59, batch-reuse:1
@ 2313 train 4.3809 , allloss: 4.3809, dt: 691.45ms, fracRes: 0.4009, norm(attn): 0.8359, norm(output): 0.7344, norm(x): 1.0567, norm(y): 0.9900, norm:0.6232, tok/sec: 189562.08, flops:199.00, batch-reuse:1
@ 2314 train 4.3571 , allloss: 4.3571, dt: 699.60ms, fracRes: 0.3980, norm(attn): 0.8477, norm(output): 0.7344, norm(x): 1.0534, norm(y): 0.9902, norm:0.5848, tok/sec: 187353.67, flops:196.68, batch-reuse:1
@ 2315 train 4.2983 , allloss: 4.2983, dt: 706.83ms, fracRes: 0.4002, norm(attn): 0.8242, norm(output): 0.7383, norm(x): 1.0558, norm(y): 0.9901, norm:0.6101, tok/sec: 185436.69, flops:194.67, batch-reuse:1
@ 2316 train 4.4043 , allloss: 4.4043, dt: 693.50ms, fracRes: 0.4018, norm(attn): 0.8164, norm(output): 0.7422, norm(x): 1.0614, norm(y): 0.9914, norm:0.6252, tok/sec: 189001.16, flops:198.41, batch-reuse:1
@ 2317 train 4.2942 , allloss: 4.2942, dt: 700.87ms, fracRes: 0.4011, norm(attn): 0.8203, norm(output): 0.7383, norm(x): 1.0565, norm(y): 0.9904, norm:0.6377, tok/sec: 187013.53, flops:196.33, batch-reuse:1
@ 2318 train 4.3101 , allloss: 4.3101, dt: 702.60ms, fracRes: 0.3989, norm(attn): 0.8242, norm(output): 0.7344, norm(x): 1.0562, norm(y): 0.9901, norm:0.5680, tok/sec: 186552.61, flops:195.84, batch-reuse:1
@ 2319 train 4.3029 , allloss: 4.3029, dt: 689.73ms, fracRes: 0.3993, norm(attn): 0.8320, norm(output): 0.7344, norm(x): 1.0549, norm(y): 0.9901, norm:0.5943, tok/sec: 190033.74, flops:199.50, batch-reuse:1
@ 2320 train 4.2751 , allloss: 4.2751, dt: 705.72ms, fracRes: 0.4011, norm(attn): 0.8281, norm(output): 0.7344, norm(x): 1.0570, norm(y): 0.9902, norm:0.6188, tok/sec: 185728.19, flops:194.98, batch-reuse:1
@ 2321 train 4.1584 , allloss: 4.1584, dt: 702.06ms, fracRes: 0.4004, norm(attn): 0.8359, norm(output): 0.7422, norm(x): 1.0654, norm(y): 0.9903, norm:0.7013, tok/sec: 186695.09, flops:195.99, batch-reuse:1
@ 2322 train 4.3112 , allloss: 4.3112, dt: 704.15ms, fracRes: 0.3983, norm(attn): 0.8359, norm(output): 0.7305, norm(x): 1.0526, norm(y): 0.9899, norm:0.6918, tok/sec: 186142.48, flops:195.41, batch-reuse:1
@ 2323 train 4.1762 , allloss: 4.1762, dt: 701.81ms, fracRes: 0.3963, norm(attn): 0.8555, norm(output): 0.7305, norm(x): 1.0460, norm(y): 0.9894, norm:0.6023, tok/sec: 186763.40, flops:196.06, batch-reuse:1
@ 2324 train 4.3536 , allloss: 4.3536, dt: 698.42ms, fracRes: 0.3978, norm(attn): 0.8438, norm(output): 0.7305, norm(x): 1.0458, norm(y): 0.9907, norm:0.6115, tok/sec: 187669.17, flops:197.02, batch-reuse:1
@ 2325 train 4.3321 , allloss: 4.3321, dt: 693.31ms, fracRes: 0.4006, norm(attn): 0.8164, norm(output): 0.7305, norm(x): 1.0538, norm(y): 0.9906, norm:0.6191, tok/sec: 189052.12, flops:198.47, batch-reuse:1
@ 2326 train 4.2507 , allloss: 4.2507, dt: 703.33ms, fracRes: 0.4018, norm(attn): 0.8086, norm(output): 0.7344, norm(x): 1.0562, norm(y): 0.9896, norm:0.6631, tok/sec: 186358.98, flops:195.64, batch-reuse:1
@ 2327 train 4.2905 , allloss: 4.2905, dt: 702.04ms, fracRes: 0.4001, norm(attn): 0.8164, norm(output): 0.7227, norm(x): 1.0448, norm(y): 0.9901, norm:0.5600, tok/sec: 186702.83, flops:196.00, batch-reuse:1
@ 2328 train 4.2308 , allloss: 4.2308, dt: 705.40ms, fracRes: 0.4010, norm(attn): 0.8203, norm(output): 0.7383, norm(x): 1.0557, norm(y): 0.9900, norm:0.5787, tok/sec: 185810.99, flops:195.06, batch-reuse:1
@ 2329 train 3.9602 , allloss: 3.9602, dt: 699.67ms, fracRes: 0.3929, norm(attn): 0.8594, norm(output): 0.8047, norm(x): 1.1071, norm(y): 0.9895, norm:2.1394, tok/sec: 187335.16, flops:196.66, batch-reuse:1
@ 2330 train 4.3166 , allloss: 4.3166, dt: 708.79ms, fracRes: 0.4003, norm(attn): 0.8242, norm(output): 0.7422, norm(x): 1.0616, norm(y): 0.9903, norm:0.7910, tok/sec: 184922.84, flops:194.13, batch-reuse:1
@ 2331 train 4.1503 , allloss: 4.1503, dt: 693.13ms, fracRes: 0.4006, norm(attn): 0.8281, norm(output): 0.7344, norm(x): 1.0612, norm(y): 0.9900, norm:0.7778, tok/sec: 189101.28, flops:198.52, batch-reuse:1
@ 2332 train 4.3071 , allloss: 4.3071, dt: 710.46ms, fracRes: 0.4035, norm(attn): 0.8320, norm(output): 0.7344, norm(x): 1.0604, norm(y): 0.9902, norm:0.7565, tok/sec: 184489.74, flops:193.68, batch-reuse:1
@ 2333 train 4.1625 , allloss: 4.1625, dt: 708.92ms, fracRes: 0.4001, norm(attn): 0.8555, norm(output): 0.7383, norm(x): 1.0517, norm(y): 0.9897, norm:0.6515, tok/sec: 184888.88, flops:194.10, batch-reuse:1
@ 2334 train 4.1807 , allloss: 4.1807, dt: 709.37ms, fracRes: 0.3998, norm(attn): 0.8516, norm(output): 0.7227, norm(x): 1.0442, norm(y): 0.9904, norm:0.6879, tok/sec: 184772.12, flops:193.97, batch-reuse:1
@ 2335 train 4.2836 , allloss: 4.2836, dt: 714.74ms, fracRes: 0.4019, norm(attn): 0.8633, norm(output): 0.7422, norm(x): 1.0608, norm(y): 0.9906, norm:0.6214, tok/sec: 183383.36, flops:192.52, batch-reuse:1
@ 2336 train 4.3623 , allloss: 4.3623, dt: 710.71ms, fracRes: 0.4021, norm(attn): 0.8672, norm(output): 0.7461, norm(x): 1.0644, norm(y): 0.9908, norm:0.6161, tok/sec: 184423.70, flops:193.61, batch-reuse:1
@ 2337 train 4.2498 , allloss: 4.2498, dt: 709.84ms, fracRes: 0.3992, norm(attn): 0.8789, norm(output): 0.7305, norm(x): 1.0479, norm(y): 0.9905, norm:0.6156, tok/sec: 184651.35, flops:193.85, batch-reuse:1
@ 2338 train 4.2841 , allloss: 4.2841, dt: 710.83ms, fracRes: 0.4004, norm(attn): 0.8945, norm(output): 0.7305, norm(x): 1.0503, norm(y): 0.9899, norm:0.6445, tok/sec: 184393.52, flops:193.58, batch-reuse:1
@ 2339 train 4.2459 , allloss: 4.2459, dt: 709.73ms, fracRes: 0.4016, norm(attn): 0.9062, norm(output): 0.7266, norm(x): 1.0448, norm(y): 0.9899, norm:0.6555, tok/sec: 184677.59, flops:193.87, batch-reuse:1
@ 2340 train 4.2838 , allloss: 4.2838, dt: 692.18ms, fracRes: 0.4005, norm(attn): 0.9336, norm(output): 0.7188, norm(x): 1.0403, norm(y): 0.9903, norm:0.6461, tok/sec: 189360.45, flops:198.79, batch-reuse:1
@ 2341 train 4.2698 , allloss: 4.2698, dt: 709.73ms, fracRes: 0.4007, norm(attn): 0.9375, norm(output): 0.7344, norm(x): 1.0486, norm(y): 0.9899, norm:0.6464, tok/sec: 184678.95, flops:193.88, batch-reuse:1
@ 2342 train 4.1865 , allloss: 4.1865, dt: 692.72ms, fracRes: 0.4010, norm(attn): 0.9414, norm(output): 0.7305, norm(x): 1.0555, norm(y): 0.9897, norm:0.5840, tok/sec: 189213.29, flops:198.64, batch-reuse:1
@ 2343 train 4.2704 , allloss: 4.2704, dt: 692.24ms, fracRes: 0.4005, norm(attn): 0.9453, norm(output): 0.7227, norm(x): 1.0487, norm(y): 0.9906, norm:0.6430, tok/sec: 189346.04, flops:198.78, batch-reuse:1
@ 2344 train 4.3235 , allloss: 4.3235, dt: 714.10ms, fracRes: 0.4013, norm(attn): 0.9492, norm(output): 0.7383, norm(x): 1.0617, norm(y): 0.9905, norm:0.6125, tok/sec: 183547.69, flops:192.69, batch-reuse:1
@ 2345 train 4.1949 , allloss: 4.1949, dt: 709.88ms, fracRes: 0.4031, norm(attn): 0.9531, norm(output): 0.7344, norm(x): 1.0548, norm(y): 0.9906, norm:0.6182, tok/sec: 184639.81, flops:193.84, batch-reuse:1
@ 2346 train 4.2953 , allloss: 4.2953, dt: 691.00ms, fracRes: 0.4056, norm(attn): 0.9414, norm(output): 0.7461, norm(x): 1.0659, norm(y): 0.9903, norm:0.5970, tok/sec: 189683.80, flops:199.13, batch-reuse:1
@ 2347 train 4.2017 , allloss: 4.2017, dt: 705.15ms, fracRes: 0.4051, norm(attn): 0.9531, norm(output): 0.7227, norm(x): 1.0468, norm(y): 0.9904, norm:0.5270, tok/sec: 185876.95, flops:195.13, batch-reuse:1
@ 2348 train 4.2974 , allloss: 4.2974, dt: 701.26ms, fracRes: 0.4034, norm(attn): 0.9609, norm(output): 0.7305, norm(x): 1.0507, norm(y): 0.9903, norm:0.5386, tok/sec: 186909.57, flops:196.22, batch-reuse:1
@ 2349 train 4.3329 , allloss: 4.3329, dt: 702.64ms, fracRes: 0.4036, norm(attn): 0.9648, norm(output): 0.7422, norm(x): 1.0568, norm(y): 0.9908, norm:0.5300, tok/sec: 186542.04, flops:195.83, batch-reuse:1
@ 2350 train 4.2096 , allloss: 4.2096, dt: 689.50ms, fracRes: 0.4022, norm(attn): 0.9648, norm(output): 0.7266, norm(x): 1.0502, norm(y): 0.9904, norm:0.5246, tok/sec: 190097.87, flops:199.57, batch-reuse:1
@ 2351 train 4.3407 , allloss: 4.3407, dt: 700.21ms, fracRes: 0.4033, norm(attn): 0.9453, norm(output): 0.7383, norm(x): 1.0604, norm(y): 0.9908, norm:0.5578, tok/sec: 187189.28, flops:196.51, batch-reuse:1
@ 2352 train 4.2740 , allloss: 4.2740, dt: 700.97ms, fracRes: 0.4063, norm(attn): 0.9453, norm(output): 0.7461, norm(x): 1.0640, norm(y): 0.9904, norm:0.6434, tok/sec: 186985.41, flops:196.30, batch-reuse:1
@ 2353 train 4.2497 , allloss: 4.2497, dt: 695.03ms, fracRes: 0.4046, norm(attn): 0.9766, norm(output): 0.7344, norm(x): 1.0545, norm(y): 0.9901, norm:0.6153, tok/sec: 188583.57, flops:197.98, batch-reuse:1
@ 2354 train 4.3100 , allloss: 4.3100, dt: 706.52ms, fracRes: 0.4041, norm(attn): 0.9961, norm(output): 0.7305, norm(x): 1.0537, norm(y): 0.9906, norm:0.5910, tok/sec: 185516.48, flops:194.76, batch-reuse:1
@ 2355 train 4.2261 , allloss: 4.2261, dt: 690.98ms, fracRes: 0.4046, norm(attn): 0.9844, norm(output): 0.7227, norm(x): 1.0459, norm(y): 0.9903, norm:0.5766, tok/sec: 189690.15, flops:199.14, batch-reuse:1
@ 2356 train 4.4020 , allloss: 4.4020, dt: 707.12ms, fracRes: 0.4036, norm(attn): 0.9531, norm(output): 0.7227, norm(x): 1.0474, norm(y): 0.9911, norm:0.6687, tok/sec: 185361.48, flops:194.59, batch-reuse:1
@ 2357 train 4.3194 , allloss: 4.3194, dt: 703.58ms, fracRes: 0.4034, norm(attn): 0.9531, norm(output): 0.7148, norm(x): 1.0472, norm(y): 0.9906, norm:0.6180, tok/sec: 186292.86, flops:195.57, batch-reuse:1
@ 2358 train 4.3135 , allloss: 4.3135, dt: 692.49ms, fracRes: 0.4045, norm(attn): 0.9492, norm(output): 0.7383, norm(x): 1.0618, norm(y): 0.9905, norm:0.5841, tok/sec: 189275.50, flops:198.70, batch-reuse:1
@ 2359 train 4.2528 , allloss: 4.2528, dt: 690.64ms, fracRes: 0.4044, norm(attn): 0.9492, norm(output): 0.7266, norm(x): 1.0588, norm(y): 0.9902, norm:0.5559, tok/sec: 189782.48, flops:199.23, batch-reuse:1
@ 2360 train 4.3237 , allloss: 4.3237, dt: 690.75ms, fracRes: 0.4037, norm(attn): 0.9727, norm(output): 0.7227, norm(x): 1.0486, norm(y): 0.9906, norm:0.5404, tok/sec: 189753.85, flops:199.20, batch-reuse:1
@ 2361 train 4.2807 , allloss: 4.2807, dt: 702.15ms, fracRes: 0.4059, norm(attn): 0.9648, norm(output): 0.7344, norm(x): 1.0608, norm(y): 0.9905, norm:0.5283, tok/sec: 186672.78, flops:195.97, batch-reuse:1
@ 2362 train 4.2777 , allloss: 4.2777, dt: 696.48ms, fracRes: 0.4054, norm(attn): 0.9492, norm(output): 0.7266, norm(x): 1.0579, norm(y): 0.9908, norm:0.5575, tok/sec: 188191.20, flops:197.56, batch-reuse:1
@ 2363 train 4.3143 , allloss: 4.3143, dt: 696.81ms, fracRes: 0.4046, norm(attn): 0.9492, norm(output): 0.7305, norm(x): 1.0587, norm(y): 0.9910, norm:0.5480, tok/sec: 188103.57, flops:197.47, batch-reuse:1
@ 2364 train 4.2407 , allloss: 4.2407, dt: 713.66ms, fracRes: 0.4062, norm(attn): 0.9453, norm(output): 0.7500, norm(x): 1.0746, norm(y): 0.9902, norm:0.5937, tok/sec: 183661.44, flops:192.81, batch-reuse:1
@ 2365 train 4.2679 , allloss: 4.2679, dt: 699.05ms, fracRes: 0.4010, norm(attn): 0.9492, norm(output): 0.7383, norm(x): 1.0619, norm(y): 0.9906, norm:1.5634, tok/sec: 187499.42, flops:196.84, batch-reuse:1
@ 2366 train 4.2931 , allloss: 4.2931, dt: 716.59ms, fracRes: 0.4035, norm(attn): 0.9883, norm(output): 0.7266, norm(x): 1.0543, norm(y): 0.9905, norm:0.6071, tok/sec: 182910.51, flops:192.02, batch-reuse:1
@ 2367 train 4.2195 , allloss: 4.2195, dt: 693.16ms, fracRes: 0.4064, norm(attn): 1.0000, norm(output): 0.7266, norm(x): 1.0526, norm(y): 0.9903, norm:0.7074, tok/sec: 189093.93, flops:198.51, batch-reuse:1
@ 2368 train 4.0980 , allloss: 4.0980, dt: 706.52ms, fracRes: 0.4080, norm(attn): 0.9922, norm(output): 0.7266, norm(x): 1.0507, norm(y): 0.9899, norm:0.5795, tok/sec: 185518.17, flops:194.76, batch-reuse:1
@ 2369 train 4.1612 , allloss: 4.1612, dt: 704.42ms, fracRes: 0.4107, norm(attn): 1.0000, norm(output): 0.7188, norm(x): 1.0559, norm(y): 0.9899, norm:0.6062, tok/sec: 186070.28, flops:195.34, batch-reuse:1
@ 2370 train 4.2005 , allloss: 4.2005, dt: 692.99ms, fracRes: 0.4105, norm(attn): 1.0156, norm(output): 0.7422, norm(x): 1.0658, norm(y): 0.9902, norm:0.6799, tok/sec: 189140.25, flops:198.56, batch-reuse:1
@ 2371 train 4.0603 , allloss: 4.0603, dt: 702.48ms, fracRes: 0.4091, norm(attn): 1.0312, norm(output): 0.7188, norm(x): 1.0489, norm(y): 0.9898, norm:0.7395, tok/sec: 186585.47, flops:195.88, batch-reuse:1
@ 2372 train 4.1061 , allloss: 4.1061, dt: 702.24ms, fracRes: 0.4104, norm(attn): 1.0312, norm(output): 0.7344, norm(x): 1.0587, norm(y): 0.9902, norm:0.6316, tok/sec: 186648.25, flops:195.94, batch-reuse:1
@ 2373 train 4.1943 , allloss: 4.1943, dt: 694.73ms, fracRes: 0.4112, norm(attn): 1.0234, norm(output): 0.7344, norm(x): 1.0626, norm(y): 0.9899, norm:0.5726, tok/sec: 188667.32, flops:198.06, batch-reuse:1
@ 2374 train 4.1410 , allloss: 4.1410, dt: 695.29ms, fracRes: 0.4086, norm(attn): 1.0391, norm(output): 0.7344, norm(x): 1.0574, norm(y): 0.9900, norm:0.5994, tok/sec: 188514.77, flops:197.90, batch-reuse:1
@ 2375 train 4.1821 , allloss: 4.1821, dt: 699.71ms, fracRes: 0.4096, norm(attn): 1.0469, norm(output): 0.7227, norm(x): 1.0518, norm(y): 0.9905, norm:0.5880, tok/sec: 187323.03, flops:196.65, batch-reuse:1
@ 2376 train 4.2060 , allloss: 4.2060, dt: 689.71ms, fracRes: 0.4078, norm(attn): 1.0469, norm(output): 0.7305, norm(x): 1.0570, norm(y): 0.9905, norm:0.5638, tok/sec: 190040.24, flops:199.50, batch-reuse:1
@ 2377 train 4.1389 , allloss: 4.1389, dt: 704.76ms, fracRes: 0.4091, norm(attn): 1.0469, norm(output): 0.7344, norm(x): 1.0595, norm(y): 0.9899, norm:0.5700, tok/sec: 185981.02, flops:195.24, batch-reuse:1
@ 2378 train 4.1330 , allloss: 4.1330, dt: 693.75ms, fracRes: 0.4072, norm(attn): 1.0547, norm(output): 0.7266, norm(x): 1.0536, norm(y): 0.9896, norm:0.5359, tok/sec: 188931.34, flops:198.34, batch-reuse:1
@ 2379 train 4.1112 , allloss: 4.1112, dt: 698.01ms, fracRes: 0.4069, norm(attn): 1.0625, norm(output): 0.7227, norm(x): 1.0487, norm(y): 0.9899, norm:0.5572, tok/sec: 187778.78, flops:197.13, batch-reuse:1
@ 2380 train 4.2051 , allloss: 4.2051, dt: 703.05ms, fracRes: 0.4061, norm(attn): 1.0547, norm(output): 0.7422, norm(x): 1.0680, norm(y): 0.9898, norm:0.9727, tok/sec: 186433.30, flops:195.72, batch-reuse:1
@ 2381 train 4.2344 , allloss: 4.2344, dt: 702.40ms, fracRes: 0.4104, norm(attn): 1.0391, norm(output): 0.7188, norm(x): 1.0583, norm(y): 0.9901, norm:0.7213, tok/sec: 186605.36, flops:195.90, batch-reuse:1
@ 2382 train 4.2111 , allloss: 4.2111, dt: 706.15ms, fracRes: 0.4071, norm(attn): 1.0547, norm(output): 0.7188, norm(x): 1.0481, norm(y): 0.9906, norm:0.7706, tok/sec: 185614.75, flops:194.86, batch-reuse:1
@ 2383 train 4.1493 , allloss: 4.1493, dt: 686.36ms, fracRes: 0.4071, norm(attn): 1.0547, norm(output): 0.7227, norm(x): 1.0492, norm(y): 0.9900, norm:0.6175, tok/sec: 190965.68, flops:200.48, batch-reuse:1
@ 2384 train 4.1655 , allloss: 4.1655, dt: 693.10ms, fracRes: 0.4108, norm(attn): 1.0547, norm(output): 0.7422, norm(x): 1.0669, norm(y): 0.9898, norm:0.6228, tok/sec: 189108.89, flops:198.53, batch-reuse:1
@ 2385 train 4.1463 , allloss: 4.1463, dt: 692.70ms, fracRes: 0.4102, norm(attn): 1.0625, norm(output): 0.7344, norm(x): 1.0644, norm(y): 0.9901, norm:0.7089, tok/sec: 189217.72, flops:198.64, batch-reuse:1
@ 2386 train 4.1010 , allloss: 4.1010, dt: 700.70ms, fracRes: 0.4067, norm(attn): 1.0859, norm(output): 0.7344, norm(x): 1.0617, norm(y): 0.9901, norm:0.6104, tok/sec: 187059.98, flops:196.38, batch-reuse:1
@ 2387 train 4.1679 , allloss: 4.1679, dt: 698.68ms, fracRes: 0.4077, norm(attn): 1.1016, norm(output): 0.7344, norm(x): 1.0579, norm(y): 0.9905, norm:0.5839, tok/sec: 187599.62, flops:196.94, batch-reuse:1
@ 2388 train 4.1864 , allloss: 4.1864, dt: 699.03ms, fracRes: 0.4104, norm(attn): 1.0938, norm(output): 0.7344, norm(x): 1.0659, norm(y): 0.9907, norm:0.5170, tok/sec: 187505.95, flops:196.84, batch-reuse:1
@ 2389 train 4.1371 , allloss: 4.1371, dt: 696.27ms, fracRes: 0.4102, norm(attn): 1.0938, norm(output): 0.7305, norm(x): 1.0561, norm(y): 0.9904, norm:0.5339, tok/sec: 188248.17, flops:197.62, batch-reuse:1
@ 2390 train 4.1773 , allloss: 4.1773, dt: 698.07ms, fracRes: 0.4102, norm(attn): 1.0938, norm(output): 0.7383, norm(x): 1.0671, norm(y): 0.9897, norm:0.5455, tok/sec: 187764.67, flops:197.12, batch-reuse:1
@ 2391 train 4.2319 , allloss: 4.2319, dt: 700.46ms, fracRes: 0.4081, norm(attn): 1.1094, norm(output): 0.7344, norm(x): 1.0568, norm(y): 0.9899, norm:0.5454, tok/sec: 187123.52, flops:196.44, batch-reuse:1
@ 2392 train 4.2313 , allloss: 4.2313, dt: 695.24ms, fracRes: 0.4084, norm(attn): 1.1094, norm(output): 0.7344, norm(x): 1.0590, norm(y): 0.9904, norm:0.5256, tok/sec: 188526.73, flops:197.92, batch-reuse:1
@ 2393 train 4.2565 , allloss: 4.2565, dt: 692.34ms, fracRes: 0.4130, norm(attn): 1.0938, norm(output): 0.7539, norm(x): 1.0816, norm(y): 0.9907, norm:0.5828, tok/sec: 189318.72, flops:198.75, batch-reuse:1
@ 2394 train 4.1886 , allloss: 4.1886, dt: 686.91ms, fracRes: 0.4108, norm(attn): 1.1094, norm(output): 0.7266, norm(x): 1.0567, norm(y): 0.9902, norm:0.6321, tok/sec: 190815.08, flops:200.32, batch-reuse:1
@ 2395 train 4.1229 , allloss: 4.1229, dt: 693.69ms, fracRes: 0.4092, norm(attn): 1.1172, norm(output): 0.7461, norm(x): 1.0632, norm(y): 0.9894, norm:0.6155, tok/sec: 188948.87, flops:198.36, batch-reuse:1
@ 2396 train 4.1587 , allloss: 4.1587, dt: 695.42ms, fracRes: 0.4094, norm(attn): 1.1172, norm(output): 0.7305, norm(x): 1.0565, norm(y): 0.9902, norm:0.6070, tok/sec: 188479.09, flops:197.87, batch-reuse:1
@ 2397 train 4.1253 , allloss: 4.1253, dt: 694.73ms, fracRes: 0.4083, norm(attn): 1.1016, norm(output): 0.7344, norm(x): 1.0564, norm(y): 0.9904, norm:0.6925, tok/sec: 188667.32, flops:198.06, batch-reuse:1
@ 2398 train 4.1717 , allloss: 4.1717, dt: 695.12ms, fracRes: 0.4096, norm(attn): 1.1016, norm(output): 0.7305, norm(x): 1.0646, norm(y): 0.9900, norm:0.6164, tok/sec: 188560.16, flops:197.95, batch-reuse:1
@ 2399 train 4.1486 , allloss: 4.1486, dt: 700.01ms, fracRes: 0.4115, norm(attn): 1.1016, norm(output): 0.7344, norm(x): 1.0601, norm(y): 0.9902, norm:0.6610, tok/sec: 187243.72, flops:196.57, batch-reuse:1
@ 2400 train 4.1214 , allloss: 4.1214, dt: 704.14ms, fracRes: 0.4088, norm(attn): 1.1016, norm(output): 0.7266, norm(x): 1.0497, norm(y): 0.9895, norm:0.6090, tok/sec: 186145.13, flops:195.42, batch-reuse:1
@ 2401 train 4.2210 , allloss: 4.2210, dt: 696.95ms, fracRes: 0.4102, norm(attn): 1.1172, norm(output): 0.7227, norm(x): 1.0531, norm(y): 0.9901, norm:0.5647, tok/sec: 188064.83, flops:197.43, batch-reuse:1
@ 2402 train 4.1609 , allloss: 4.1609, dt: 698.58ms, fracRes: 0.4120, norm(attn): 1.1016, norm(output): 0.7422, norm(x): 1.0678, norm(y): 0.9898, norm:0.5528, tok/sec: 187626.06, flops:196.97, batch-reuse:1
@ 2403 train 4.0463 , allloss: 4.0463, dt: 703.26ms, fracRes: 0.4104, norm(attn): 1.1094, norm(output): 0.7344, norm(x): 1.0662, norm(y): 0.9896, norm:0.5745, tok/sec: 186378.63, flops:195.66, batch-reuse:1
@ 2404 train 4.0779 , allloss: 4.0779, dt: 700.60ms, fracRes: 0.4119, norm(attn): 1.1094, norm(output): 0.7305, norm(x): 1.0599, norm(y): 0.9902, norm:0.4990, tok/sec: 187084.93, flops:196.40, batch-reuse:1
@ 2405 train 4.1585 , allloss: 4.1585, dt: 699.28ms, fracRes: 0.4128, norm(attn): 1.0938, norm(output): 0.7305, norm(x): 1.0641, norm(y): 0.9897, norm:0.6335, tok/sec: 187437.99, flops:196.77, batch-reuse:1
@ 2406 train 4.1150 , allloss: 4.1150, dt: 698.54ms, fracRes: 0.4122, norm(attn): 1.1094, norm(output): 0.7227, norm(x): 1.0564, norm(y): 0.9900, norm:0.5168, tok/sec: 187637.08, flops:196.98, batch-reuse:1
@ 2407 train 4.0986 , allloss: 4.0986, dt: 693.55ms, fracRes: 0.4118, norm(attn): 1.1016, norm(output): 0.7227, norm(x): 1.0611, norm(y): 0.9905, norm:0.6474, tok/sec: 188987.07, flops:198.40, batch-reuse:1
@ 2408 train 4.1376 , allloss: 4.1376, dt: 693.94ms, fracRes: 0.4103, norm(attn): 1.1016, norm(output): 0.7227, norm(x): 1.0556, norm(y): 0.9902, norm:0.5912, tok/sec: 188881.81, flops:198.29, batch-reuse:1
@ 2409 train 4.1151 , allloss: 4.1151, dt: 700.99ms, fracRes: 0.4105, norm(attn): 1.0938, norm(output): 0.7266, norm(x): 1.0586, norm(y): 0.9898, norm:0.5367, tok/sec: 186981.66, flops:196.29, batch-reuse:1
@ 2410 train 4.0797 , allloss: 4.0797, dt: 693.36ms, fracRes: 0.4101, norm(attn): 1.0781, norm(output): 0.7188, norm(x): 1.0549, norm(y): 0.9895, norm:0.5276, tok/sec: 189039.70, flops:198.45, batch-reuse:1
@ 2411 train 4.1939 , allloss: 4.1939, dt: 696.41ms, fracRes: 0.4120, norm(attn): 1.1094, norm(output): 0.7188, norm(x): 1.0532, norm(y): 0.9912, norm:0.5865, tok/sec: 188210.73, flops:197.58, batch-reuse:1
@ 2412 train 4.1626 , allloss: 4.1626, dt: 696.78ms, fracRes: 0.4135, norm(attn): 1.1094, norm(output): 0.7383, norm(x): 1.0706, norm(y): 0.9908, norm:0.6297, tok/sec: 188110.45, flops:197.48, batch-reuse:1
@ 2413 train 4.2195 , allloss: 4.2195, dt: 698.12ms, fracRes: 0.4141, norm(attn): 1.1016, norm(output): 0.7344, norm(x): 1.0686, norm(y): 0.9900, norm:0.6021, tok/sec: 187751.14, flops:197.10, batch-reuse:1
@ 2414 train 4.1596 , allloss: 4.1596, dt: 695.35ms, fracRes: 0.4125, norm(attn): 1.1172, norm(output): 0.7383, norm(x): 1.0649, norm(y): 0.9895, norm:0.5700, tok/sec: 188496.86, flops:197.88, batch-reuse:1
@ 2415 train 4.2918 , allloss: 4.2918, dt: 684.84ms, fracRes: 0.4113, norm(attn): 1.1016, norm(output): 0.7422, norm(x): 1.0657, norm(y): 0.9908, norm:0.6127, tok/sec: 191392.03, flops:200.92, batch-reuse:1
@ 2416 train 4.2509 , allloss: 4.2509, dt: 696.88ms, fracRes: 0.4114, norm(attn): 1.0938, norm(output): 0.7305, norm(x): 1.0650, norm(y): 0.9905, norm:0.5657, tok/sec: 188083.68, flops:197.45, batch-reuse:1
@ 2417 train 4.2861 , allloss: 4.2861, dt: 697.83ms, fracRes: 0.4146, norm(attn): 1.0781, norm(output): 0.7344, norm(x): 1.0700, norm(y): 0.9912, norm:0.6711, tok/sec: 187828.38, flops:197.18, batch-reuse:1
@ 2418 train 4.3247 , allloss: 4.3247, dt: 691.95ms, fracRes: 0.4141, norm(attn): 1.0781, norm(output): 0.7305, norm(x): 1.0646, norm(y): 0.9902, norm:0.6970, tok/sec: 189425.18, flops:198.86, batch-reuse:1
@ 2419 train 4.2926 , allloss: 4.2926, dt: 702.40ms, fracRes: 0.4151, norm(attn): 1.0781, norm(output): 0.7500, norm(x): 1.0846, norm(y): 0.9903, norm:0.6960, tok/sec: 186605.49, flops:195.90, batch-reuse:1
@ 2420 train 4.2998 , allloss: 4.2998, dt: 690.90ms, fracRes: 0.4169, norm(attn): 1.0781, norm(output): 0.7422, norm(x): 1.0781, norm(y): 0.9902, norm:0.7520, tok/sec: 189713.12, flops:199.16, batch-reuse:1
@ 2421 train 4.3045 , allloss: 4.3045, dt: 696.96ms, fracRes: 0.4123, norm(attn): 1.0859, norm(output): 0.7383, norm(x): 1.0660, norm(y): 0.9903, norm:0.5821, tok/sec: 188062.51, flops:197.43, batch-reuse:1
@ 2422 train 4.3106 , allloss: 4.3106, dt: 692.90ms, fracRes: 0.4140, norm(attn): 1.0938, norm(output): 0.7422, norm(x): 1.0730, norm(y): 0.9901, norm:0.7086, tok/sec: 189163.88, flops:198.58, batch-reuse:1
@ 2423 train 4.4260 , allloss: 4.4260, dt: 689.11ms, fracRes: 0.4159, norm(attn): 1.0703, norm(output): 0.7344, norm(x): 1.0735, norm(y): 0.9912, norm:0.6286, tok/sec: 190205.07, flops:199.68, batch-reuse:1
@ 2424 train 4.2987 , allloss: 4.2987, dt: 698.96ms, fracRes: 0.4166, norm(attn): 1.0625, norm(output): 0.7422, norm(x): 1.0760, norm(y): 0.9912, norm:0.6073, tok/sec: 187525.20, flops:196.86, batch-reuse:1
@ 2425 train 4.2404 , allloss: 4.2404, dt: 704.62ms, fracRes: 0.4146, norm(attn): 1.0703, norm(output): 0.7383, norm(x): 1.0746, norm(y): 0.9904, norm:0.6396, tok/sec: 186018.21, flops:195.28, batch-reuse:1
@ 2426 train 4.2441 , allloss: 4.2441, dt: 701.34ms, fracRes: 0.4136, norm(attn): 1.0938, norm(output): 0.7422, norm(x): 1.0667, norm(y): 0.9904, norm:0.7276, tok/sec: 186886.76, flops:196.19, batch-reuse:1
@ 2427 train 4.4368 , allloss: 4.4368, dt: 708.18ms, fracRes: 0.4130, norm(attn): 1.0781, norm(output): 0.7266, norm(x): 1.0664, norm(y): 0.9908, norm:0.6646, tok/sec: 185082.96, flops:194.30, batch-reuse:1
@ 2428 train 4.3252 , allloss: 4.3252, dt: 695.32ms, fracRes: 0.4130, norm(attn): 1.0859, norm(output): 0.7422, norm(x): 1.0714, norm(y): 0.9910, norm:0.6011, tok/sec: 188504.68, flops:197.89, batch-reuse:1
@ 2429 train 4.2794 , allloss: 4.2794, dt: 703.36ms, fracRes: 0.4125, norm(attn): 1.0938, norm(output): 0.7266, norm(x): 1.0620, norm(y): 0.9913, norm:0.5870, tok/sec: 186351.84, flops:195.63, batch-reuse:1
@ 2430 train 4.3157 , allloss: 4.3157, dt: 704.57ms, fracRes: 0.4159, norm(attn): 1.0938, norm(output): 0.7305, norm(x): 1.0665, norm(y): 0.9911, norm:0.5955, tok/sec: 186030.11, flops:195.29, batch-reuse:1
@ 2431 train 4.3136 , allloss: 4.3136, dt: 700.31ms, fracRes: 0.4150, norm(attn): 1.0859, norm(output): 0.7344, norm(x): 1.0686, norm(y): 0.9909, norm:0.5451, tok/sec: 187162.70, flops:196.48, batch-reuse:1
@ 2432 train 4.2016 , allloss: 4.2016, dt: 684.79ms, fracRes: 0.4133, norm(attn): 1.1172, norm(output): 0.7266, norm(x): 1.0603, norm(y): 0.9902, norm:0.5908, tok/sec: 191405.16, flops:200.94, batch-reuse:1
@ 2433 train 4.2858 , allloss: 4.2858, dt: 711.81ms, fracRes: 0.4119, norm(attn): 1.1016, norm(output): 0.7227, norm(x): 1.0560, norm(y): 0.9904, norm:0.5235, tok/sec: 184138.38, flops:193.31, batch-reuse:1
@ 2434 train 4.3311 , allloss: 4.3311, dt: 706.56ms, fracRes: 0.4124, norm(attn): 1.1016, norm(output): 0.7305, norm(x): 1.0648, norm(y): 0.9900, norm:0.5338, tok/sec: 185507.59, flops:194.75, batch-reuse:1
@ 2435 train 4.3624 , allloss: 4.3624, dt: 689.71ms, fracRes: 0.4132, norm(attn): 1.0938, norm(output): 0.7422, norm(x): 1.0706, norm(y): 0.9909, norm:0.5708, tok/sec: 190040.24, flops:199.50, batch-reuse:1
@ 2436 train 4.2829 , allloss: 4.2829, dt: 694.21ms, fracRes: 0.4100, norm(attn): 1.1094, norm(output): 0.7344, norm(x): 1.0608, norm(y): 0.9902, norm:0.6535, tok/sec: 188806.76, flops:198.21, batch-reuse:1
@ 2437 train 4.2142 , allloss: 4.2142, dt: 701.19ms, fracRes: 0.4095, norm(attn): 1.1016, norm(output): 0.7266, norm(x): 1.0601, norm(y): 0.9901, norm:0.5859, tok/sec: 186928.51, flops:196.24, batch-reuse:1
@ 2438 train 4.2339 , allloss: 4.2339, dt: 687.68ms, fracRes: 0.4125, norm(attn): 1.0938, norm(output): 0.7383, norm(x): 1.0711, norm(y): 0.9906, norm:0.5273, tok/sec: 190600.87, flops:200.09, batch-reuse:1
@ 2439 train 4.3194 , allloss: 4.3194, dt: 695.97ms, fracRes: 0.4146, norm(attn): 1.0938, norm(output): 0.7422, norm(x): 1.0666, norm(y): 0.9909, norm:0.6271, tok/sec: 188329.55, flops:197.71, batch-reuse:1
@ 2440 train 4.2670 , allloss: 4.2670, dt: 696.33ms, fracRes: 0.4255, norm(attn): 1.0781, norm(output): 0.7422, norm(x): 1.0954, norm(y): 0.9907, norm:0.9733, tok/sec: 188231.48, flops:197.61, batch-reuse:1
@ 2441 train 4.2328 , allloss: 4.2328, dt: 691.30ms, fracRes: 0.4209, norm(attn): 1.0781, norm(output): 0.7422, norm(x): 1.0865, norm(y): 0.9897, norm:0.8902, tok/sec: 189602.03, flops:199.04, batch-reuse:1
@ 2442 train 4.2430 , allloss: 4.2430, dt: 693.11ms, fracRes: 0.4147, norm(attn): 1.1016, norm(output): 0.7227, norm(x): 1.0629, norm(y): 0.9902, norm:0.6486, tok/sec: 189106.62, flops:198.52, batch-reuse:1
@ 2443 train 4.3810 , allloss: 4.3810, dt: 689.64ms, fracRes: 0.4133, norm(attn): 1.0938, norm(output): 0.7148, norm(x): 1.0586, norm(y): 0.9906, norm:0.6532, tok/sec: 190057.91, flops:199.52, batch-reuse:1
@ 2444 train 4.2494 , allloss: 4.2494, dt: 704.21ms, fracRes: 0.4153, norm(attn): 1.0859, norm(output): 0.7383, norm(x): 1.0703, norm(y): 0.9906, norm:0.6901, tok/sec: 186126.03, flops:195.40, batch-reuse:1
@ 2445 train 4.2179 , allloss: 4.2179, dt: 708.72ms, fracRes: 0.4156, norm(attn): 1.0703, norm(output): 0.7305, norm(x): 1.0717, norm(y): 0.9906, norm:0.5276, tok/sec: 184942.75, flops:194.15, batch-reuse:1
@ 2446 train 4.4605 , allloss: 4.4605, dt: 701.93ms, fracRes: 0.4174, norm(attn): 1.0703, norm(output): 0.7344, norm(x): 1.0722, norm(y): 0.9915, norm:0.6408, tok/sec: 186730.10, flops:196.03, batch-reuse:1
@ 2447 train 4.3551 , allloss: 4.3551, dt: 685.80ms, fracRes: 0.4169, norm(attn): 1.0859, norm(output): 0.7344, norm(x): 1.0692, norm(y): 0.9912, norm:0.7351, tok/sec: 191122.95, flops:200.64, batch-reuse:1
@ 2448 train 4.3020 , allloss: 4.3020, dt: 701.18ms, fracRes: 0.4163, norm(attn): 1.0703, norm(output): 0.7344, norm(x): 1.0702, norm(y): 0.9908, norm:0.6472, tok/sec: 186929.84, flops:196.24, batch-reuse:1
@ 2449 train 4.2860 , allloss: 4.2860, dt: 691.39ms, fracRes: 0.4164, norm(attn): 1.0703, norm(output): 0.7266, norm(x): 1.0645, norm(y): 0.9903, norm:0.6780, tok/sec: 189578.36, flops:199.02, batch-reuse:1
@ 2450 train 4.2424 , allloss: 4.2424, dt: 713.62ms, fracRes: 0.4152, norm(attn): 1.0859, norm(output): 0.7266, norm(x): 1.0605, norm(y): 0.9902, norm:0.6031, tok/sec: 183671.57, flops:192.82, batch-reuse:1
@ 2451 train 4.3809 , allloss: 4.3809, dt: 694.06ms, fracRes: 0.4153, norm(attn): 1.0703, norm(output): 0.7305, norm(x): 1.0673, norm(y): 0.9903, norm:0.6649, tok/sec: 188847.55, flops:198.25, batch-reuse:1
@ 2452 train 4.2018 , allloss: 4.2018, dt: 709.12ms, fracRes: 0.4148, norm(attn): 1.0625, norm(output): 0.7383, norm(x): 1.0705, norm(y): 0.9897, norm:0.7586, tok/sec: 184837.47, flops:194.04, batch-reuse:1
@ 2453 train 4.2337 , allloss: 4.2337, dt: 700.55ms, fracRes: 0.4157, norm(attn): 1.0625, norm(output): 0.7383, norm(x): 1.0684, norm(y): 0.9905, norm:0.5885, tok/sec: 187098.88, flops:196.42, batch-reuse:1
@ 2454 train 4.1943 , allloss: 4.1943, dt: 714.55ms, fracRes: 0.4150, norm(attn): 1.0547, norm(output): 0.7344, norm(x): 1.0674, norm(y): 0.9907, norm:0.6478, tok/sec: 183432.13, flops:192.57, batch-reuse:1
@ 2455 train 4.2895 , allloss: 4.2895, dt: 713.77ms, fracRes: 0.4136, norm(attn): 1.0703, norm(output): 0.7266, norm(x): 1.0614, norm(y): 0.9908, norm:0.6173, tok/sec: 183634.45, flops:192.78, batch-reuse:1
@ 2456 train 4.3093 , allloss: 4.3093, dt: 698.90ms, fracRes: 0.4149, norm(attn): 1.0781, norm(output): 0.7344, norm(x): 1.0679, norm(y): 0.9913, norm:0.6375, tok/sec: 187540.87, flops:196.88, batch-reuse:1
@ 2457 train 4.4377 , allloss: 4.4377, dt: 708.38ms, fracRes: 0.4150, norm(attn): 1.0859, norm(output): 0.7344, norm(x): 1.0715, norm(y): 0.9911, norm:0.5916, tok/sec: 185029.95, flops:194.24, batch-reuse:1
@ 2458 train 4.1548 , allloss: 4.1548, dt: 700.07ms, fracRes: 0.4151, norm(attn): 1.1094, norm(output): 0.7188, norm(x): 1.0589, norm(y): 0.9909, norm:0.5802, tok/sec: 187227.21, flops:196.55, batch-reuse:1
@ 2459 train 4.2733 , allloss: 4.2733, dt: 695.14ms, fracRes: 0.4159, norm(attn): 1.0938, norm(output): 0.7266, norm(x): 1.0648, norm(y): 0.9908, norm:0.5307, tok/sec: 188555.95, flops:197.95, batch-reuse:1
@ 2460 train 4.3444 , allloss: 4.3444, dt: 701.45ms, fracRes: 0.4190, norm(attn): 1.0703, norm(output): 0.7305, norm(x): 1.0769, norm(y): 0.9906, norm:0.5979, tok/sec: 186859.64, flops:196.17, batch-reuse:1
@ 2461 train 4.2619 , allloss: 4.2619, dt: 699.51ms, fracRes: 0.4145, norm(attn): 1.0938, norm(output): 0.7266, norm(x): 1.0580, norm(y): 0.9898, norm:0.6506, tok/sec: 187377.49, flops:196.71, batch-reuse:1
@ 2462 train 4.3361 , allloss: 4.3361, dt: 692.15ms, fracRes: 0.4163, norm(attn): 1.0625, norm(output): 0.7227, norm(x): 1.0639, norm(y): 0.9901, norm:0.5377, tok/sec: 189369.65, flops:198.80, batch-reuse:1
@ 2463 train 4.3473 , allloss: 4.3473, dt: 696.15ms, fracRes: 0.4162, norm(attn): 1.0781, norm(output): 0.7305, norm(x): 1.0636, norm(y): 0.9905, norm:0.6254, tok/sec: 188280.53, flops:197.66, batch-reuse:1
@ 2464 train 4.2672 , allloss: 4.2672, dt: 696.94ms, fracRes: 0.4140, norm(attn): 1.0859, norm(output): 0.7305, norm(x): 1.0639, norm(y): 0.9908, norm:0.5723, tok/sec: 188068.18, flops:197.43, batch-reuse:1
@ 2465 train 4.2279 , allloss: 4.2279, dt: 698.80ms, fracRes: 0.4131, norm(attn): 1.0938, norm(output): 0.7188, norm(x): 1.0519, norm(y): 0.9911, norm:0.5493, tok/sec: 187568.39, flops:196.91, batch-reuse:1
@ 2466 train 4.3551 , allloss: 4.3551, dt: 691.75ms, fracRes: 0.4145, norm(attn): 1.0859, norm(output): 0.7266, norm(x): 1.0629, norm(y): 0.9911, norm:0.5828, tok/sec: 189478.32, flops:198.91, batch-reuse:1
@ 2467 train 4.2270 , allloss: 4.2270, dt: 690.53ms, fracRes: 0.4159, norm(attn): 1.0781, norm(output): 0.7266, norm(x): 1.0615, norm(y): 0.9911, norm:0.5119, tok/sec: 189813.15, flops:199.27, batch-reuse:1
@ 2468 train 4.3109 , allloss: 4.3109, dt: 695.11ms, fracRes: 0.4176, norm(attn): 1.0625, norm(output): 0.7227, norm(x): 1.0666, norm(y): 0.9912, norm:0.5742, tok/sec: 188563.84, flops:197.95, batch-reuse:1
@ 2469 train 4.4137 , allloss: 4.4137, dt: 696.46ms, fracRes: 0.4215, norm(attn): 1.0469, norm(output): 0.7305, norm(x): 1.0712, norm(y): 0.9915, norm:0.5791, tok/sec: 188196.29, flops:197.57, batch-reuse:1
@ 2470 train 4.1967 , allloss: 4.1967, dt: 691.51ms, fracRes: 0.4176, norm(attn): 1.0625, norm(output): 0.7227, norm(x): 1.0642, norm(y): 0.9910, norm:0.5178, tok/sec: 189544.83, flops:198.98, batch-reuse:1
@ 2471 train 4.2335 , allloss: 4.2335, dt: 697.42ms, fracRes: 0.4190, norm(attn): 1.0625, norm(output): 0.7266, norm(x): 1.0656, norm(y): 0.9910, norm:0.5712, tok/sec: 187937.86, flops:197.30, batch-reuse:1
@ 2472 train 4.3036 , allloss: 4.3036, dt: 701.28ms, fracRes: 0.4175, norm(attn): 1.0781, norm(output): 0.7109, norm(x): 1.0558, norm(y): 0.9910, norm:0.5524, tok/sec: 186905.12, flops:196.21, batch-reuse:1
@ 2473 train 4.2030 , allloss: 4.2030, dt: 697.39ms, fracRes: 0.4160, norm(attn): 1.0859, norm(output): 0.7148, norm(x): 1.0554, norm(y): 0.9906, norm:0.4633, tok/sec: 187947.81, flops:197.31, batch-reuse:1
@ 2474 train 4.2073 , allloss: 4.2073, dt: 699.10ms, fracRes: 0.4197, norm(attn): 1.0859, norm(output): 0.7266, norm(x): 1.0639, norm(y): 0.9906, norm:0.5239, tok/sec: 187486.12, flops:196.82, batch-reuse:1
@ 2475 train 4.2841 , allloss: 4.2841, dt: 698.22ms, fracRes: 0.4189, norm(attn): 1.0859, norm(output): 0.7227, norm(x): 1.0668, norm(y): 0.9911, norm:0.5110, tok/sec: 187723.64, flops:197.07, batch-reuse:1
@ 2476 train 4.2218 , allloss: 4.2218, dt: 686.83ms, fracRes: 0.4225, norm(attn): 1.0703, norm(output): 0.7344, norm(x): 1.0777, norm(y): 0.9907, norm:0.5082, tok/sec: 190837.41, flops:200.34, batch-reuse:1
@ 2477 train 4.2366 , allloss: 4.2366, dt: 708.56ms, fracRes: 0.4223, norm(attn): 1.0781, norm(output): 0.7305, norm(x): 1.0779, norm(y): 0.9913, norm:0.5531, tok/sec: 184982.88, flops:194.20, batch-reuse:1
@ 2478 train 4.1996 , allloss: 4.1996, dt: 697.15ms, fracRes: 0.4196, norm(attn): 1.0859, norm(output): 0.7148, norm(x): 1.0620, norm(y): 0.9906, norm:0.4747, tok/sec: 188010.42, flops:197.37, batch-reuse:1
@ 2479 train 4.2203 , allloss: 4.2203, dt: 701.64ms, fracRes: 0.4177, norm(attn): 1.0781, norm(output): 0.7109, norm(x): 1.0546, norm(y): 0.9911, norm:0.5423, tok/sec: 186807.57, flops:196.11, batch-reuse:1
@ 2480 train 4.2984 , allloss: 4.2984, dt: 699.08ms, fracRes: 0.4170, norm(attn): 1.0938, norm(output): 0.7188, norm(x): 1.0613, norm(y): 0.9906, norm:0.5631, tok/sec: 187493.35, flops:196.83, batch-reuse:1
@ 2481 train 4.2073 , allloss: 4.2073, dt: 699.60ms, fracRes: 0.4179, norm(attn): 1.0625, norm(output): 0.7305, norm(x): 1.0694, norm(y): 0.9903, norm:0.5515, tok/sec: 187353.29, flops:196.68, batch-reuse:1
@ 2482 train 4.3638 , allloss: 4.3638, dt: 699.59ms, fracRes: 0.4178, norm(attn): 1.0781, norm(output): 0.7344, norm(x): 1.0713, norm(y): 0.9907, norm:0.5192, tok/sec: 187355.78, flops:196.69, batch-reuse:1
@ 2483 train 4.2650 , allloss: 4.2650, dt: 699.25ms, fracRes: 0.4200, norm(attn): 1.0781, norm(output): 0.7266, norm(x): 1.0747, norm(y): 0.9907, norm:0.5964, tok/sec: 187445.98, flops:196.78, batch-reuse:1
@ 2484 train 4.2880 , allloss: 4.2880, dt: 697.14ms, fracRes: 0.4185, norm(attn): 1.0781, norm(output): 0.7266, norm(x): 1.0681, norm(y): 0.9911, norm:0.6318, tok/sec: 188012.93, flops:197.38, batch-reuse:1
@ 2485 train 4.1993 , allloss: 4.1993, dt: 698.61ms, fracRes: 0.4163, norm(attn): 1.0859, norm(output): 0.7266, norm(x): 1.0650, norm(y): 0.9912, norm:0.6415, tok/sec: 187617.10, flops:196.96, batch-reuse:1
@ 2486 train 4.2143 , allloss: 4.2143, dt: 689.05ms, fracRes: 0.4147, norm(attn): 1.1016, norm(output): 0.7266, norm(x): 1.0649, norm(y): 0.9909, norm:0.5619, tok/sec: 190222.45, flops:199.70, batch-reuse:1
@ 2487 train 4.3033 , allloss: 4.3033, dt: 701.99ms, fracRes: 0.4148, norm(attn): 1.1016, norm(output): 0.7227, norm(x): 1.0632, norm(y): 0.9906, norm:0.5955, tok/sec: 186713.74, flops:196.01, batch-reuse:1
@ 2488 train 4.2788 , allloss: 4.2788, dt: 699.67ms, fracRes: 0.4181, norm(attn): 1.1016, norm(output): 0.7188, norm(x): 1.0658, norm(y): 0.9905, norm:0.5328, tok/sec: 187333.18, flops:196.66, batch-reuse:1
@ 2489 train 4.2412 , allloss: 4.2412, dt: 698.99ms, fracRes: 0.4165, norm(attn): 1.1016, norm(output): 0.7227, norm(x): 1.0568, norm(y): 0.9906, norm:0.5100, tok/sec: 187516.63, flops:196.86, batch-reuse:1
@ 2490 train 4.2147 , allloss: 4.2147, dt: 689.44ms, fracRes: 0.4191, norm(attn): 1.1016, norm(output): 0.7188, norm(x): 1.0633, norm(y): 0.9909, norm:0.6069, tok/sec: 190113.98, flops:199.58, batch-reuse:1
@ 2491 train 4.3634 , allloss: 4.3634, dt: 687.30ms, fracRes: 0.4177, norm(attn): 1.1172, norm(output): 0.7148, norm(x): 1.0580, norm(y): 0.9905, norm:0.5659, tok/sec: 190705.60, flops:200.20, batch-reuse:1
@ 2492 train 4.3132 , allloss: 4.3132, dt: 701.45ms, fracRes: 0.4182, norm(attn): 1.1016, norm(output): 0.7188, norm(x): 1.0628, norm(y): 0.9911, norm:0.5305, tok/sec: 186859.07, flops:196.16, batch-reuse:1
@ 2493 train 4.2700 , allloss: 4.2700, dt: 697.78ms, fracRes: 0.4209, norm(attn): 1.1016, norm(output): 0.7227, norm(x): 1.0659, norm(y): 0.9915, norm:0.6089, tok/sec: 187842.75, flops:197.20, batch-reuse:1
@ 2494 train 4.2549 , allloss: 4.2549, dt: 698.99ms, fracRes: 0.4195, norm(attn): 1.0938, norm(output): 0.7188, norm(x): 1.0616, norm(y): 0.9913, norm:0.5683, tok/sec: 187517.52, flops:196.86, batch-reuse:1
@ 2495 train 4.2503 , allloss: 4.2503, dt: 698.47ms, fracRes: 0.4171, norm(attn): 1.1016, norm(output): 0.7188, norm(x): 1.0586, norm(y): 0.9908, norm:0.6008, tok/sec: 187654.69, flops:197.00, batch-reuse:1
@ 2496 train 4.2048 , allloss: 4.2048, dt: 696.77ms, fracRes: 0.4188, norm(attn): 1.0781, norm(output): 0.7266, norm(x): 1.0675, norm(y): 0.9903, norm:0.7337, tok/sec: 188113.16, flops:197.48, batch-reuse:1
@ 2497 train 4.2553 , allloss: 4.2553, dt: 715.03ms, fracRes: 0.4180, norm(attn): 1.0859, norm(output): 0.7305, norm(x): 1.0712, norm(y): 0.9907, norm:0.5352, tok/sec: 183308.95, flops:192.44, batch-reuse:1
@ 2498 train 4.2856 , allloss: 4.2856, dt: 707.28ms, fracRes: 0.4162, norm(attn): 1.0859, norm(output): 0.7344, norm(x): 1.0683, norm(y): 0.9906, norm:0.6054, tok/sec: 185317.80, flops:194.55, batch-reuse:1
@ 2499 train 4.2371 , allloss: 4.2371, dt: 697.12ms, fracRes: 0.4192, norm(attn): 1.0781, norm(output): 0.7344, norm(x): 1.0702, norm(y): 0.9911, norm:0.6179, tok/sec: 188018.52, flops:197.38, batch-reuse:1
@ 2500 train 4.2225 , allloss: 4.2225, dt: 691.65ms, fracRes: 0.4200, norm(attn): 1.0781, norm(output): 0.7344, norm(x): 1.0801, norm(y): 0.9907, norm:0.5872, tok/sec: 189504.90, flops:198.94, batch-reuse:1
@ 2501 train 4.1536 , allloss: 4.1536, dt: 690.48ms, fracRes: 0.4193, norm(attn): 1.0859, norm(output): 0.7188, norm(x): 1.0645, norm(y): 0.9905, norm:0.6218, tok/sec: 189827.96, flops:199.28, batch-reuse:1
@ 2502 train 4.3136 , allloss: 4.3136, dt: 698.26ms, fracRes: 0.4219, norm(attn): 1.0859, norm(output): 0.7305, norm(x): 1.0770, norm(y): 0.9911, norm:0.6095, tok/sec: 187712.49, flops:197.06, batch-reuse:1
@ 2503 train 4.2399 , allloss: 4.2399, dt: 694.43ms, fracRes: 0.4251, norm(attn): 1.0859, norm(output): 0.7344, norm(x): 1.0775, norm(y): 0.9910, norm:0.6925, tok/sec: 188748.74, flops:198.15, batch-reuse:1
@ 2504 train 4.2623 , allloss: 4.2623, dt: 696.20ms, fracRes: 0.4196, norm(attn): 1.0859, norm(output): 0.7227, norm(x): 1.0678, norm(y): 0.9909, norm:0.6186, tok/sec: 188268.09, flops:197.64, batch-reuse:1
@ 2505 train 4.2655 , allloss: 4.2655, dt: 687.86ms, fracRes: 0.4212, norm(attn): 1.1094, norm(output): 0.7305, norm(x): 1.0736, norm(y): 0.9903, norm:0.7653, tok/sec: 190549.21, flops:200.04, batch-reuse:1
@ 2506 train 4.3279 , allloss: 4.3279, dt: 706.08ms, fracRes: 0.4213, norm(attn): 1.1172, norm(output): 0.7188, norm(x): 1.0637, norm(y): 0.9913, norm:0.5472, tok/sec: 185634.37, flops:194.88, batch-reuse:1
@ 2507 train 4.2565 , allloss: 4.2565, dt: 703.58ms, fracRes: 0.4239, norm(attn): 1.1172, norm(output): 0.7266, norm(x): 1.0727, norm(y): 0.9903, norm:0.8400, tok/sec: 186293.55, flops:195.57, batch-reuse:1
@ 2508 train 4.2019 , allloss: 4.2019, dt: 692.72ms, fracRes: 0.4206, norm(attn): 1.1250, norm(output): 0.7266, norm(x): 1.0637, norm(y): 0.9907, norm:0.8350, tok/sec: 189212.58, flops:198.64, batch-reuse:1
@ 2509 train 4.1633 , allloss: 4.1633, dt: 696.29ms, fracRes: 0.4214, norm(attn): 1.1328, norm(output): 0.7188, norm(x): 1.0650, norm(y): 0.9904, norm:0.6285, tok/sec: 188244.11, flops:197.62, batch-reuse:1
@ 2510 train 4.2625 , allloss: 4.2625, dt: 702.58ms, fracRes: 0.4243, norm(attn): 1.1641, norm(output): 0.7188, norm(x): 1.0678, norm(y): 0.9917, norm:0.6460, tok/sec: 186557.93, flops:195.85, batch-reuse:1
@ 2511 train 4.2114 , allloss: 4.2114, dt: 697.26ms, fracRes: 0.4248, norm(attn): 1.1641, norm(output): 0.7109, norm(x): 1.0639, norm(y): 0.9915, norm:0.5383, tok/sec: 187980.91, flops:197.34, batch-reuse:1
@ 2512 train 4.2133 , allloss: 4.2133, dt: 702.53ms, fracRes: 0.4256, norm(attn): 1.1562, norm(output): 0.7109, norm(x): 1.0629, norm(y): 0.9907, norm:0.6868, tok/sec: 186572.05, flops:195.86, batch-reuse:1
@ 2513 train 4.2608 , allloss: 4.2608, dt: 702.85ms, fracRes: 0.4231, norm(attn): 1.1562, norm(output): 0.7148, norm(x): 1.0617, norm(y): 0.9907, norm:0.5959, tok/sec: 186485.16, flops:195.77, batch-reuse:1
@ 2514 train 4.2936 , allloss: 4.2936, dt: 701.28ms, fracRes: 0.4254, norm(attn): 1.1641, norm(output): 0.7188, norm(x): 1.0714, norm(y): 0.9910, norm:0.5931, tok/sec: 186904.36, flops:196.21, batch-reuse:1
@ 2515 train 4.2049 , allloss: 4.2049, dt: 697.52ms, fracRes: 0.4191, norm(attn): 1.1797, norm(output): 0.7070, norm(x): 1.0549, norm(y): 0.9913, norm:0.5368, tok/sec: 187912.29, flops:197.27, batch-reuse:1
@ 2516 train 4.0994 , allloss: 4.0994, dt: 698.70ms, fracRes: 0.4208, norm(attn): 1.1484, norm(output): 0.7148, norm(x): 1.0648, norm(y): 0.9906, norm:0.5812, tok/sec: 187593.73, flops:196.94, batch-reuse:1
@ 2517 train 4.1674 , allloss: 4.1674, dt: 681.72ms, fracRes: 0.4249, norm(attn): 1.1562, norm(output): 0.7188, norm(x): 1.0689, norm(y): 0.9908, norm:0.5872, tok/sec: 192267.69, flops:201.84, batch-reuse:1
@ 2518 train 4.1451 , allloss: 4.1451, dt: 694.76ms, fracRes: 0.4236, norm(attn): 1.1719, norm(output): 0.7305, norm(x): 1.0736, norm(y): 0.9901, norm:0.5538, tok/sec: 188657.48, flops:198.05, batch-reuse:1
@ 2519 train 4.2706 , allloss: 4.2706, dt: 689.99ms, fracRes: 0.4209, norm(attn): 1.2188, norm(output): 0.7188, norm(x): 1.0627, norm(y): 0.9910, norm:0.5412, tok/sec: 189962.16, flops:199.42, batch-reuse:1
@ 2520 train 4.2473 , allloss: 4.2473, dt: 701.19ms, fracRes: 0.4226, norm(attn): 1.2266, norm(output): 0.7305, norm(x): 1.0764, norm(y): 0.9910, norm:0.5650, tok/sec: 186926.92, flops:196.24, batch-reuse:1
@ 2521 train 4.1612 , allloss: 4.1612, dt: 695.80ms, fracRes: 0.4231, norm(attn): 1.2344, norm(output): 0.7188, norm(x): 1.0705, norm(y): 0.9914, norm:0.5453, tok/sec: 188375.37, flops:197.76, batch-reuse:1
@ 2522 train 4.2760 , allloss: 4.2760, dt: 702.94ms, fracRes: 0.4215, norm(attn): 1.2500, norm(output): 0.7188, norm(x): 1.0663, norm(y): 0.9914, norm:0.6340, tok/sec: 186462.57, flops:195.75, batch-reuse:1
@ 2523 train 4.2078 , allloss: 4.2078, dt: 697.20ms, fracRes: 0.4225, norm(attn): 1.2344, norm(output): 0.7227, norm(x): 1.0676, norm(y): 0.9910, norm:0.5842, tok/sec: 187998.52, flops:197.36, batch-reuse:1
@ 2524 train 4.1844 , allloss: 4.1844, dt: 693.88ms, fracRes: 0.4203, norm(attn): 1.2344, norm(output): 0.7188, norm(x): 1.0580, norm(y): 0.9903, norm:0.5440, tok/sec: 188896.22, flops:198.30, batch-reuse:1
@ 2525 train 4.1695 , allloss: 4.1695, dt: 676.60ms, fracRes: 0.4218, norm(attn): 1.2344, norm(output): 0.7344, norm(x): 1.0770, norm(y): 0.9903, norm:0.5644, tok/sec: 193721.69, flops:203.37, batch-reuse:1
@ 2526 train 4.2921 , allloss: 4.2921, dt: 697.19ms, fracRes: 0.4243, norm(attn): 1.2109, norm(output): 0.7266, norm(x): 1.0765, norm(y): 0.9917, norm:0.5634, tok/sec: 188000.32, flops:197.36, batch-reuse:1
@ 2527 train 4.1939 , allloss: 4.1939, dt: 699.60ms, fracRes: 0.4238, norm(attn): 1.2266, norm(output): 0.7148, norm(x): 1.0696, norm(y): 0.9917, norm:0.5307, tok/sec: 187351.50, flops:196.68, batch-reuse:1
@ 2528 train 4.2249 , allloss: 4.2249, dt: 693.64ms, fracRes: 0.4224, norm(attn): 1.2266, norm(output): 0.7227, norm(x): 1.0629, norm(y): 0.9910, norm:0.4937, tok/sec: 188963.10, flops:198.37, batch-reuse:1
@ 2529 train 4.2295 , allloss: 4.2295, dt: 699.24ms, fracRes: 0.4221, norm(attn): 1.2344, norm(output): 0.7188, norm(x): 1.0589, norm(y): 0.9907, norm:0.5422, tok/sec: 187448.98, flops:196.78, batch-reuse:1
@ 2530 train 4.1835 , allloss: 4.1835, dt: 699.75ms, fracRes: 0.4235, norm(attn): 1.2344, norm(output): 0.7188, norm(x): 1.0614, norm(y): 0.9905, norm:0.5162, tok/sec: 187312.69, flops:196.64, batch-reuse:1
@ 2531 train 4.1458 , allloss: 4.1458, dt: 686.56ms, fracRes: 0.4250, norm(attn): 1.2188, norm(output): 0.7148, norm(x): 1.0639, norm(y): 0.9908, norm:0.5268, tok/sec: 190910.37, flops:200.42, batch-reuse:1
@ 2532 train 4.1996 , allloss: 4.1996, dt: 695.68ms, fracRes: 0.4245, norm(attn): 1.2109, norm(output): 0.7227, norm(x): 1.0684, norm(y): 0.9906, norm:0.5149, tok/sec: 188407.13, flops:197.79, batch-reuse:1
@ 2533 train 4.1570 , allloss: 4.1570, dt: 696.42ms, fracRes: 0.4263, norm(attn): 1.1953, norm(output): 0.7500, norm(x): 1.0908, norm(y): 0.9904, norm:1.0951, tok/sec: 188208.02, flops:197.58, batch-reuse:1
@ 2534 train 4.3107 , allloss: 4.3107, dt: 715.22ms, fracRes: 0.4188, norm(attn): 1.1953, norm(output): 0.7266, norm(x): 1.0644, norm(y): 0.9908, norm:1.6203, tok/sec: 183260.18, flops:192.39, batch-reuse:1
@ 2535 train 4.2210 , allloss: 4.2210, dt: 714.65ms, fracRes: 0.4183, norm(attn): 1.2656, norm(output): 0.7070, norm(x): 1.0570, norm(y): 0.9905, norm:1.0529, tok/sec: 183408.32, flops:192.54, batch-reuse:1
@ 2536 train 4.2446 , allloss: 4.2446, dt: 694.75ms, fracRes: 0.4234, norm(attn): 1.2891, norm(output): 0.7266, norm(x): 1.0668, norm(y): 0.9909, norm:0.7064, tok/sec: 188661.43, flops:198.06, batch-reuse:1
@ 2537 train 4.2504 , allloss: 4.2504, dt: 700.24ms, fracRes: 0.4265, norm(attn): 1.3281, norm(output): 0.7266, norm(x): 1.0692, norm(y): 0.9908, norm:0.7663, tok/sec: 187182.65, flops:196.50, batch-reuse:1
@ 2538 train 4.3455 , allloss: 4.3455, dt: 716.11ms, fracRes: 0.4296, norm(attn): 1.3438, norm(output): 0.7188, norm(x): 1.0704, norm(y): 0.9913, norm:0.6361, tok/sec: 183033.70, flops:192.15, batch-reuse:1
@ 2539 train 4.2327 , allloss: 4.2327, dt: 707.18ms, fracRes: 0.4318, norm(attn): 1.3359, norm(output): 0.7266, norm(x): 1.0827, norm(y): 0.9907, norm:0.5709, tok/sec: 185343.35, flops:194.57, batch-reuse:1
@ 2540 train 4.2934 , allloss: 4.2934, dt: 699.02ms, fracRes: 0.4312, norm(attn): 1.3359, norm(output): 0.7266, norm(x): 1.0759, norm(y): 0.9907, norm:0.6068, tok/sec: 187507.16, flops:196.85, batch-reuse:1
@ 2541 train 4.2723 , allloss: 4.2723, dt: 692.84ms, fracRes: 0.4310, norm(attn): 1.3828, norm(output): 0.7305, norm(x): 1.0812, norm(y): 0.9908, norm:0.5588, tok/sec: 189181.78, flops:198.60, batch-reuse:1
@ 2542 train 4.3168 , allloss: 4.3168, dt: 696.08ms, fracRes: 0.4323, norm(attn): 1.3203, norm(output): 0.7344, norm(x): 1.0909, norm(y): 0.9905, norm:0.9270, tok/sec: 188299.30, flops:197.68, batch-reuse:1
@ 2543 train 4.2302 , allloss: 4.2302, dt: 695.69ms, fracRes: 0.4266, norm(attn): 1.3828, norm(output): 0.7188, norm(x): 1.0624, norm(y): 0.9911, norm:0.6790, tok/sec: 188405.97, flops:197.79, batch-reuse:1
@ 2544 train 4.2971 , allloss: 4.2971, dt: 699.43ms, fracRes: 0.4331, norm(attn): 1.3828, norm(output): 0.7227, norm(x): 1.0849, norm(y): 0.9910, norm:0.6342, tok/sec: 187399.46, flops:196.73, batch-reuse:1
@ 2545 train 4.2754 , allloss: 4.2754, dt: 699.17ms, fracRes: 0.4338, norm(attn): 1.3828, norm(output): 0.7383, norm(x): 1.0904, norm(y): 0.9915, norm:0.6268, tok/sec: 187468.29, flops:196.80, batch-reuse:1
@ 2546 train 4.2616 , allloss: 4.2616, dt: 700.06ms, fracRes: 0.4319, norm(attn): 1.3750, norm(output): 0.7344, norm(x): 1.0840, norm(y): 0.9913, norm:0.5302, tok/sec: 187230.65, flops:196.56, batch-reuse:1
@ 2547 train 4.2669 , allloss: 4.2669, dt: 698.10ms, fracRes: 0.4306, norm(attn): 1.3828, norm(output): 0.7344, norm(x): 1.0783, norm(y): 0.9914, norm:0.5769, tok/sec: 187754.54, flops:197.11, batch-reuse:1
@ 2548 train 4.3704 , allloss: 4.3704, dt: 682.63ms, fracRes: 0.4296, norm(attn): 1.3516, norm(output): 0.7422, norm(x): 1.0892, norm(y): 0.9902, norm:0.7277, tok/sec: 192010.16, flops:201.57, batch-reuse:1
@ 2549 train 4.3689 , allloss: 4.3689, dt: 703.11ms, fracRes: 0.4298, norm(attn): 1.3672, norm(output): 0.7422, norm(x): 1.0829, norm(y): 0.9907, norm:0.6974, tok/sec: 186418.44, flops:195.70, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8516, 0.1494, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7305, 0.1260, 0.1455, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5039, 0.1572, 0.1748, 0.1631, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6406, 0.1099, 0.1094, 0.0483, 0.0903, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5742, 0.0864, 0.1074, 0.0674, 0.1021, 0.0635, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4668, 0.1079, 0.1089, 0.0618, 0.0918, 0.0947, 0.0684, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2969, 0.1094, 0.0854, 0.0820, 0.1074, 0.0898, 0.1533, 0.0762, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3984, 0.0791, 0.0898, 0.0583, 0.0659, 0.0630, 0.0679, 0.1079, 0.0698, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2988, 0.0742, 0.0957, 0.0640, 0.0618, 0.0527, 0.0566, 0.1426, 0.0918, 0.0623, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3340, 0.0747, 0.0811, 0.0408, 0.0693, 0.0583, 0.0454, 0.1016, 0.0674, 0.0486, 0.0791, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2520, 0.0752, 0.0693, 0.0630, 0.0576, 0.0598, 0.0515, 0.0972, 0.0554, 0.0664, 0.0991, 0.0535, 0.0000, 0.0000, 0.0000],
        [0.4434, 0.0537, 0.0508, 0.0247, 0.0508, 0.0391, 0.0459, 0.0496, 0.0295, 0.0386, 0.0884, 0.0303, 0.0544, 0.0000, 0.0000],
        [0.3047, 0.0649, 0.0596, 0.0366, 0.0537, 0.0430, 0.0459, 0.0645, 0.0444, 0.0364, 0.0708, 0.0537, 0.0835, 0.0393, 0.0000],
        [0.2178, 0.0723, 0.0544, 0.0417, 0.0518, 0.0454, 0.0413, 0.0830, 0.0588, 0.0437, 0.0723, 0.0337, 0.0698, 0.0728, 0.0415]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.2617, -0.9492, -0.9375, -1.3359, -1.1016, -1.1484, -1.0938, -0.8086, -1.2031, -1.1172, -0.6250, -1.1094, -0.7578, -1.1953, -1.1484],
        [ 0.1245, -1.6172, -0.7695, -0.9688, -0.6992, -1.0078, -1.1719, -0.2354, -0.8516, -0.6406, -0.5195, -0.8711, -0.3926, -0.8984, -0.5977],
        [ 0.1973, -1.5625, -1.4141, -1.3750, -1.2734, -1.5938, -1.4531, -0.7617, -1.3281, -1.4297, -0.6758, -1.2266, -0.8359, -1.2656, -1.0938],
        [ 0.2158, -0.9531, -0.8438, -0.9141, -1.1562, -0.9141, -1.0859, -0.4082, -0.7969, -0.9141, -0.5625, -0.9805, -0.7500, -0.8867, -0.9023],
        [ 0.2910, -1.4766, -1.4766, -2.2969, -1.6719, -1.8438, -1.7969, -1.2656, -1.6328, -1.8203, -1.2578, -1.6328, -1.1172, -1.7109, -1.5625],
        [ 0.2715, -1.6172, -1.4062, -1.8750, -1.4531, -1.9297, -1.8594, -1.0703, -1.2969, -1.7031, -1.1562, -1.5859, -1.2031, -1.3359, -1.4531],
        [ 0.2910, -1.1719, -1.1641, -1.7266, -1.3359, -1.3047, -1.6250, -0.7734, -1.2031, -1.3984, -0.8633, -1.6875, -0.7695, -1.1797, -1.5469],
        [ 0.1836, -0.8164, -1.0625, -1.1016, -0.8320, -1.0156, -0.4766, -1.1797, -1.0000, -1.0938, -0.3242, -0.9844, -0.7031, -0.9219, -0.7266],
        [ 0.2734, -1.3438, -1.2188, -1.6484, -1.5234, -1.5703, -1.4922, -1.0312, -1.4609, -1.6719, -1.0391, -1.4766, -0.9180, -1.3594, -1.2266],
        [ 0.2041, -1.1875, -0.9336, -1.3359, -1.3750, -1.5312, -1.4609, -0.5391, -0.9766, -1.3672, -0.9844, -1.0703, -0.8242, -1.1172, -1.0938],
        [ 0.3086, -1.1875, -1.1016, -1.7891, -1.2578, -1.4375, -1.6875, -0.8828, -1.2891, -1.6172, -1.1328, -1.5391, -0.7852, -1.2734, -1.4844],
        [ 0.1494, -1.0625, -1.1406, -1.2422, -1.3281, -1.2891, -1.4375, -0.8047, -1.3672, -1.1797, -0.7852, -1.3984, -0.9414, -1.4141, -0.7930],
        [ 0.3691, -1.7422, -1.7969, -2.5156, -1.7969, -2.0625, -1.9062, -1.8203, -2.3438, -2.0781, -1.2500, -2.3125, -1.7266, -2.2656, -1.8516],
        [ 0.2637, -1.2734, -1.3672, -1.8516, -1.4688, -1.6953, -1.6250, -1.2891, -1.6641, -1.8594, -1.1953, -1.4688, -1.0312, -1.7812, -1.2109],
        [ 0.1934, -0.9141, -1.1953, -1.4609, -1.2422, -1.3750, -1.4688, -0.7734, -1.1172, -1.4141, -0.9141, -1.6797, -0.9492, -0.9062, -1.4609]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7542],
        [0.4476],
        [0.3414],
        [0.3909],
        [0.3383],
        [0.2165],
        [0.1936],
        [0.2226],
        [0.1688],
        [0.2008],
        [0.1245],
        [0.2050],
        [0.1692],
        [0.0842]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0214,     0.1592,     0.8164,     0.0009,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0006,     0.0008,     0.0001,     0.0020,     0.9922,     0.0050,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0040,     0.0000,     0.0001,     0.0085,     0.2109,     0.7734,     0.0013,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0427,     0.0009,     0.9531,     0.0014,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0131,     0.0034,     0.0004,     0.0000,     0.9844,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0002,     0.0000,     0.0020,     0.0000,     0.9961,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     1.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0008,     0.0000,     0.0012,     0.0000,     0.0000,     0.9961,     0.0004]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0089,     -1.0000,     -0.9727,     -0.8906,     -0.9688,     -1.0469,     -1.1016,     -1.1094,     -1.1328,     -1.1172,     -1.1406,     -1.1328,     -1.2109,     -1.2422,     -1.1875],
        [    -0.1240,    -10.5625,    -10.0625,    -10.0625,     -5.7500,     -6.9062,     -7.7188,     -6.9375,     -5.5000,     -6.5938,     -3.9219,     -2.3438,     -0.0811,     -0.7070,      0.4609],
        [    -0.2139,     19.6250,      2.9844,      6.5312,     19.3750,     15.8750,     14.9375,     10.0000,     19.5000,     13.2500,     25.0000,     16.7500,     16.3750,     25.3750,     26.5000],
        [    -0.2637,      6.3438,     18.7500,      7.9688,      1.5469,     13.6875,      4.3438,      7.3125,      6.4375,     11.6875,     11.9375,     27.2500,     20.2500,     14.3750,     26.2500],
        [    -0.2930,      7.1250,      9.1250,     10.7500,      4.0000,     10.3125,     10.5000,     12.3750,     15.8750,     17.3750,     16.8750,     22.3750,     21.5000,     23.0000,     23.2500],
        [    -0.3203,     13.7500,      4.7812,      7.4375,     24.1250,     14.6250,     14.0625,     11.3750,     26.5000,     15.8125,     24.1250,     19.8750,     18.8750,     33.7500,     27.2500],
        [    -0.3496,     20.2500,     20.5000,     18.6250,     21.3750,     27.6250,     22.3750,     26.3750,     29.1250,     25.0000,     29.6250,     35.2500,     36.0000,     37.5000,     35.5000],
        [    -0.2891,     21.1250,     15.9375,     17.3750,     21.8750,     25.1250,     26.3750,     20.0000,     28.7500,     19.0000,     34.0000,     28.0000,     30.1250,     35.5000,     35.5000],
        [    -0.3828,     11.7500,     11.1875,     10.4375,     14.1250,     22.0000,     18.1250,     25.1250,     18.6250,     18.2500,     22.3750,     25.6250,     35.5000,     27.0000,     24.3750],
        [    -0.3066,     12.8750,      6.1875,      8.6250,     22.7500,     21.5000,     19.3750,     12.5625,     27.1250,      7.1875,     27.8750,     20.5000,     20.3750,     34.0000,     30.0000],
        [    -0.3613,      8.8125,     12.6250,     18.0000,      6.6562,     10.8125,      7.6562,     15.0000,     13.3125,     30.2500,     12.0625,     23.2500,     27.5000,     22.5000,     20.7500],
        [    -0.3203,     24.6250,     14.8125,     12.1250,     28.0000,     27.1250,     30.7500,     22.0000,     33.2500,     13.4375,     39.5000,     16.7500,     29.7500,     40.0000,     39.5000],
        [    -0.3125,     11.6875,     22.2500,     20.2500,      8.6875,     15.5625,     11.1250,     11.2500,     16.3750,     20.1250,     19.6250,     34.0000,     21.5000,     24.7500,     32.5000],
        [    -0.4082,     10.1250,     11.5000,     10.5000,      9.3750,     18.0000,     15.0000,     21.3750,     14.6875,     17.2500,     19.8750,     24.3750,     33.7500,     23.2500,     23.0000],
        [    -0.3770,     19.1250,     10.6875,     13.8125,     28.0000,     24.3750,     25.1250,     19.0000,     33.2500,     17.6250,     33.5000,     23.5000,     27.5000,     40.2500,     32.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7469],
        [0.3056],
        [0.2903],
        [0.2369],
        [0.1698],
        [0.1436],
        [0.1794],
        [0.1130],
        [0.0865],
        [0.0987],
        [0.0962],
        [0.1210],
        [0.0938],
        [0.0558]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9766,     0.0234,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9141,     0.0864,     0.0011,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9180,     0.0767,     0.0023,     0.0029,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7891,     0.0962,     0.0388,     0.0300,     0.0457,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9062,     0.0791,     0.0025,     0.0035,     0.0069,     0.0021,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6641,     0.1206,     0.0080,     0.0054,     0.0708,     0.0047,     0.1250,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3789,     0.1953,     0.0081,     0.0112,     0.1543,     0.0061,     0.1445,     0.1011,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6797,     0.0664,     0.0092,     0.0052,     0.0713,     0.0137,     0.0435,     0.0405,     0.0693,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9336,     0.0299,     0.0006,     0.0009,     0.0063,     0.0003,     0.0030,     0.0056,     0.0121,     0.0084,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8789,     0.0378,     0.0021,     0.0018,     0.0117,     0.0009,     0.0042,     0.0137,     0.0116,     0.0248,     0.0139,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9023,     0.0284,     0.0023,     0.0031,     0.0175,     0.0008,     0.0048,     0.0124,     0.0126,     0.0085,     0.0055,     0.0016,     0.0000,     0.0000,     0.0000],
        [    0.4473,     0.0850,     0.0031,     0.0018,     0.0991,     0.0026,     0.0630,     0.0147,     0.1299,     0.0854,     0.0444,     0.0049,     0.0193,     0.0000,     0.0000],
        [    0.4570,     0.0405,     0.0043,     0.0015,     0.0481,     0.0065,     0.0243,     0.0142,     0.0261,     0.2217,     0.0574,     0.0047,     0.0138,     0.0811,     0.0000],
        [    0.6992,     0.1631,     0.0033,     0.0011,     0.0260,     0.0025,     0.0068,     0.0151,     0.0129,     0.0194,     0.0092,     0.0045,     0.0059,     0.0220,     0.0098]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0013,     -0.1660,     -0.2158,     -0.2051,     -0.1504,     -0.2275,     -0.2031,     -0.1797,     -0.1611,     -0.1572,     -0.1885,     -0.1943,     -0.1689,     -0.1318,     -0.1738],
        [     0.0679,     -3.6562,     -6.7812,     -6.2188,     -3.8750,     -7.2812,     -5.8125,     -5.2812,     -3.9844,     -5.0625,     -5.2812,     -6.1562,     -5.0312,     -2.5469,     -4.3750],
        [     0.0806,     -2.2812,     -6.6250,     -6.0000,     -4.9062,     -7.5312,     -5.6562,     -4.5625,     -4.8438,     -5.2812,     -5.6250,     -6.4375,     -6.6250,     -5.2500,     -5.6875],
        [     0.0781,     -2.4062,     -5.9062,     -5.6562,     -3.6562,     -6.3125,     -5.2812,     -4.2812,     -3.9375,     -4.4062,     -5.2188,     -6.0625,     -5.5625,     -4.0938,     -5.0312],
        [     0.0664,     -2.0469,     -2.9375,     -3.2031,     -2.7812,     -3.2188,     -3.9531,     -2.7656,     -1.7344,     -0.5273,     -3.2344,     -3.1250,     -2.7344,     -1.2500,     -1.2969],
        [     0.0574,     -2.3750,     -5.8438,     -5.5000,     -4.8125,     -6.0312,     -2.8906,     -3.2812,     -2.0000,     -2.5938,     -3.7188,     -5.5625,     -5.4062,     -2.1094,     -2.9375],
        [     0.0933,     -1.6172,     -4.3438,     -4.7188,     -2.1406,     -4.8438,     -1.5781,     -1.7188,     -0.4121,     -2.1406,     -3.6562,     -4.6250,     -3.9688,      0.1475,     -2.0312],
        [     0.0869,     -0.5742,     -3.7500,     -3.4375,     -0.8086,     -4.0312,     -0.8789,     -1.2344,      1.2812,     -0.7773,     -1.7188,     -3.1719,     -2.1875,      2.5312,      0.4863],
        [     0.0559,     -2.2656,     -4.2500,     -4.8125,     -2.2031,     -3.8438,     -2.7031,     -2.7656,     -2.2188,     -0.4805,     -1.9531,     -4.0625,     -3.1094,     -1.5781,     -1.6953],
        [     0.0464,     -3.3906,     -7.2188,     -6.9375,     -4.9688,     -7.8750,     -5.6875,     -5.0625,     -4.3125,     -4.6562,     -3.5156,     -5.8125,     -5.2812,     -3.4844,     -4.0625],
        [     0.0566,     -3.0938,     -5.9688,     -6.1250,     -4.2500,     -6.8438,     -5.2812,     -4.0938,     -4.2812,     -3.5156,     -4.0938,     -3.9531,     -3.2344,     -2.5625,     -3.5312],
        [     0.0530,     -3.4062,     -5.9375,     -5.5938,     -3.8906,     -7.0000,     -5.1875,     -4.2500,     -4.2188,     -4.5938,     -5.0625,     -6.3125,     -3.3750,     -3.0469,     -4.0312],
        [     0.0645,     -1.5938,     -4.9062,     -5.4375,     -1.4453,     -5.0938,     -1.8906,     -3.3438,     -1.1719,     -1.5938,     -2.2500,     -4.4375,     -3.0781,      0.6797,     -0.5156],
        [     0.0566,     -2.3594,     -4.6250,     -5.6875,     -2.1875,     -4.1875,     -2.8750,     -3.4219,     -2.7969,     -0.6680,     -2.0156,     -4.5312,     -3.4375,     -1.6719,     -1.5625],
        [     0.0791,     -1.3750,     -5.2812,     -6.3750,     -3.2188,     -5.5625,     -4.5625,     -3.7500,     -3.9219,     -3.5000,     -4.2500,     -4.9688,     -4.7188,     -3.3750,     -4.1875]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5670],
        [0.3888],
        [0.4365],
        [0.3230],
        [0.3323],
        [0.2884],
        [0.3348],
        [0.2998],
        [0.3012],
        [0.2655],
        [0.3434],
        [0.2576],
        [0.2369],
        [0.2287]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9844,     0.0142,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9766,     0.0188,     0.0032,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8125,     0.1157,     0.0322,     0.0393,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0076,     0.0011,     0.0026,     0.0010,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0049,     0.0001,     0.0003,     0.0001,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0036,     0.0001,     0.0003,     0.0003,     0.0002,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9688,     0.0111,     0.0009,     0.0039,     0.0007,     0.0015,     0.0068,     0.0069,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9688,     0.0116,     0.0012,     0.0036,     0.0018,     0.0008,     0.0030,     0.0061,     0.0044,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9453,     0.0137,     0.0014,     0.0041,     0.0015,     0.0017,     0.0096,     0.0036,     0.0039,     0.0166,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0025,     0.0004,     0.0017,     0.0012,     0.0004,     0.0006,     0.0014,     0.0009,     0.0024,     0.0007,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6211,     0.0508,     0.0042,     0.0593,     0.0072,     0.0131,     0.0155,     0.0564,     0.0417,     0.0791,     0.0107,     0.0398,     0.0000,     0.0000,     0.0000],
        [    0.8867,     0.0199,     0.0016,     0.0035,     0.0020,     0.0026,     0.0065,     0.0069,     0.0129,     0.0199,     0.0100,     0.0123,     0.0135,     0.0000,     0.0000],
        [    0.5273,     0.0645,     0.0090,     0.0155,     0.0099,     0.0082,     0.0142,     0.0292,     0.0469,     0.0972,     0.0396,     0.0359,     0.0364,     0.0664,     0.0000],
        [    0.2178,     0.1230,     0.0152,     0.0121,     0.0098,     0.0374,     0.0146,     0.0400,     0.0376,     0.0981,     0.0334,     0.0291,     0.0723,     0.0552,     0.2041]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0019,     -0.2324,     -0.3203,     -0.2754,     -0.3320,     -0.3008,     -0.2617,     -0.2793,     -0.2988,     -0.2559,     -0.3008,     -0.2871,     -0.2695,     -0.2695,     -0.2002],
        [     0.1006,     -4.1562,     -6.9688,     -5.5312,     -6.8125,     -7.1250,     -5.1875,     -5.4375,     -6.0625,     -4.7500,     -6.2812,     -5.7500,     -5.3750,     -5.0000,     -1.7656],
        [     0.1221,     -3.8281,     -5.5938,     -4.5000,     -5.2188,     -4.9062,     -4.8125,     -4.4062,     -4.1875,     -3.6562,     -4.3125,     -3.7500,     -3.5625,     -3.3281,     -1.8672],
        [     0.0732,     -1.8750,     -3.1562,     -2.9531,     -3.0156,     -3.2656,     -3.5156,     -2.6250,     -2.5469,     -1.7031,     -2.6719,     -2.1562,     -2.2656,     -1.9141,     -0.3340],
        [     0.0522,     -4.8125,     -6.7500,     -5.8750,     -6.8438,     -7.5000,     -6.7812,     -6.2188,     -6.3438,     -5.5312,     -6.6250,     -5.8125,     -6.2812,     -5.5000,     -3.5156],
        [     0.1758,     -5.1562,     -8.8750,     -7.9375,     -8.8750,     -8.6250,     -6.1875,     -7.5000,     -7.5938,     -5.6875,     -7.4688,     -7.3125,     -6.7500,     -6.5312,     -3.1719],
        [     0.1289,     -5.5000,     -9.0000,     -7.9375,     -7.9688,     -8.6250,     -7.5625,     -7.9062,     -7.8125,     -6.6875,     -8.4375,     -7.0938,     -7.2812,     -6.6562,     -4.1562],
        [     0.1299,     -4.3438,     -6.8750,     -5.4062,     -7.1250,     -6.3438,     -4.8125,     -4.8125,     -5.9062,     -4.2188,     -6.4375,     -5.2500,     -4.6875,     -5.1250,     -3.6875],
        [     0.1177,     -4.3125,     -6.6250,     -5.4688,     -6.1875,     -7.0312,     -5.6562,     -4.9375,     -5.2812,     -3.7812,     -5.5312,     -4.9062,     -5.1562,     -4.7500,     -2.7344],
        [     0.1040,     -4.1250,     -6.4375,     -5.3438,     -6.3438,     -6.2500,     -4.5000,     -5.4688,     -5.4062,     -3.9375,     -5.4688,     -4.4688,     -4.7500,     -4.7812,     -3.2500],
        [     0.0742,     -5.9062,     -7.7812,     -6.2812,     -6.6562,     -7.6250,     -7.4062,     -6.5312,     -6.9688,     -5.9375,     -7.1562,     -6.5000,     -6.8125,     -6.7812,     -4.6250],
        [     0.0732,     -2.4375,     -4.9375,     -2.2812,     -4.3750,     -3.7812,     -3.6250,     -2.3281,     -2.6250,     -1.9922,     -3.9844,     -2.6719,     -2.6094,     -2.1875,     -1.8984],
        [     0.1108,     -3.6875,     -6.1875,     -5.4375,     -6.0000,     -5.7188,     -4.8125,     -4.7500,     -4.1250,     -3.6875,     -4.3750,     -4.1875,     -4.0625,     -3.6719,     -2.5000],
        [     0.0933,     -2.0000,     -3.9688,     -3.4375,     -3.8750,     -4.0625,     -3.5156,     -2.7969,     -2.3281,     -1.5938,     -2.5000,     -2.5938,     -2.5781,     -1.9766,     -0.6992],
        [     0.0903,     -0.4824,     -2.5781,     -2.7969,     -3.0000,     -1.6719,     -2.6094,     -1.6016,     -1.6641,     -0.7070,     -1.7812,     -1.9219,     -1.0156,     -1.2812,      0.0276]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9837],
        [0.9113],
        [0.8203],
        [0.8825],
        [0.8747],
        [0.8988],
        [0.7784],
        [0.7781],
        [0.7357],
        [0.7470],
        [0.6755],
        [0.7149],
        [0.6742],
        [0.6311]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0145,     -0.7188,     -1.1953,     -1.0703,     -0.9609,     -1.1875,     -1.3125,     -1.2031,     -1.3359,     -1.3828,     -1.0469,     -1.1562,     -1.2500,     -1.0625,     -0.9453],
        [    -0.4238,    -27.8750,    -39.2500,    -33.2500,    -29.1250,    -37.2500,    -39.7500,    -36.2500,    -38.5000,    -42.0000,    -30.3750,    -36.0000,    -38.0000,    -31.1250,    -30.2500],
        [    -0.7266,    -39.5000,    -62.2500,    -54.2500,    -47.7500,    -61.7500,    -66.0000,    -61.0000,    -67.0000,    -71.0000,    -53.0000,    -58.0000,    -62.7500,    -52.5000,    -48.7500],
        [    -0.5117,    -28.8750,    -44.5000,    -38.5000,    -33.0000,    -44.2500,    -46.0000,    -44.7500,    -49.7500,    -51.7500,    -40.5000,    -42.2500,    -43.5000,    -38.2500,    -35.0000],
        [    -0.5703,    -30.3750,    -47.5000,    -40.2500,    -39.0000,    -47.2500,    -50.0000,    -46.7500,    -54.2500,    -53.7500,    -42.2500,    -44.0000,    -46.5000,    -42.2500,    -36.2500],
        [    -0.8672,    -42.2500,    -72.0000,    -62.7500,    -56.5000,    -70.0000,    -76.0000,    -70.5000,    -80.0000,    -82.0000,    -62.0000,    -69.0000,    -74.0000,    -63.5000,    -55.7500],
        [    -0.7227,    -37.7500,    -61.0000,    -54.0000,    -48.5000,    -60.2500,    -65.5000,    -60.5000,    -67.0000,    -69.5000,    -51.2500,    -58.0000,    -62.7500,    -53.5000,    -48.5000],
        [    -0.6641,    -31.5000,    -54.2500,    -49.0000,    -43.7500,    -53.0000,    -59.0000,    -55.2500,    -61.7500,    -62.7500,    -47.2500,    -53.5000,    -57.0000,    -49.0000,    -43.0000],
        [    -0.8281,    -41.0000,    -67.5000,    -60.5000,    -53.5000,    -67.5000,    -73.0000,    -69.5000,    -78.0000,    -79.5000,    -61.7500,    -65.5000,    -70.0000,    -60.7500,    -52.5000],
        [    -0.7148,    -36.5000,    -59.2500,    -53.0000,    -47.0000,    -59.5000,    -64.5000,    -61.0000,    -67.5000,    -70.0000,    -53.0000,    -57.2500,    -60.7500,    -52.2500,    -46.2500],
        [    -0.7422,    -35.5000,    -60.5000,    -54.5000,    -48.5000,    -59.5000,    -65.5000,    -61.0000,    -68.5000,    -70.0000,    -53.5000,    -59.2500,    -63.2500,    -53.7500,    -47.5000],
        [    -0.5820,    -31.5000,    -49.2500,    -43.2500,    -38.2500,    -49.2500,    -52.5000,    -50.7500,    -56.0000,    -57.5000,    -44.2500,    -47.5000,    -49.7500,    -43.2500,    -39.0000],
        [    -0.7617,    -36.5000,    -62.0000,    -56.0000,    -50.0000,    -61.5000,    -68.0000,    -64.5000,    -72.0000,    -72.5000,    -54.2500,    -61.5000,    -66.5000,    -57.2500,    -49.2500],
        [    -0.7461,    -37.7500,    -61.7500,    -55.0000,    -48.7500,    -61.7500,    -66.5000,    -63.5000,    -70.0000,    -72.0000,    -54.7500,    -60.0000,    -64.0000,    -55.0000,    -48.2500],
        [    -0.6641,    -34.2500,    -55.5000,    -48.2500,    -43.7500,    -54.7500,    -58.5000,    -53.0000,    -59.7500,    -62.5000,    -47.0000,    -51.5000,    -55.0000,    -47.0000,    -43.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9632],
        [0.9017],
        [0.9349],
        [0.8868],
        [0.8823],
        [0.9082],
        [0.8983],
        [0.8879],
        [0.8917],
        [0.8720],
        [0.8934],
        [0.8854],
        [0.8766],
        [0.7269]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9648,     0.0347,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4199,     0.4375,     0.1416,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1758,     0.0693,     0.3945,     0.3594,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5195,     0.2109,     0.0933,     0.1426,     0.0334,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4863,     0.0057,     0.3887,     0.0527,     0.0204,     0.0471,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0425,     0.2559,     0.0043,     0.0195,     0.0088,     0.5195,     0.1484,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7070,     0.0164,     0.1221,     0.0208,     0.0267,     0.0337,     0.0615,     0.0109,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0579,     0.0014,     0.0703,     0.0065,     0.0306,     0.6328,     0.1885,     0.0042,     0.0082,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1543,     0.0049,     0.1377,     0.0129,     0.0791,     0.1787,     0.3633,     0.0036,     0.0096,     0.0549,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0518,     0.0510,     0.0029,     0.0045,     0.0162,     0.6055,     0.1973,     0.0282,     0.0198,     0.0082,     0.0126,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0417,     0.0022,     0.4277,     0.0332,     0.1387,     0.0493,     0.0217,     0.0032,     0.0171,     0.2295,     0.0209,     0.0164,     0.0000,     0.0000,     0.0000],
        [    0.3164,     0.0043,     0.2676,     0.0176,     0.0177,     0.0454,     0.0723,     0.0057,     0.0148,     0.1592,     0.0615,     0.0157,     0.0021,     0.0000,     0.0000],
        [    0.0135,     0.0008,     0.0664,     0.0032,     0.0444,     0.6445,     0.1475,     0.0020,     0.0025,     0.0317,     0.0036,     0.0012,     0.0240,     0.0164,     0.0000],
        [    0.2002,     0.1064,     0.0396,     0.0471,     0.3418,     0.0085,     0.0302,     0.0094,     0.0344,     0.0223,     0.0264,     0.0576,     0.0135,     0.0320,     0.0325]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0007,     -0.0530,      0.0601,      0.0142,      0.0312,      0.0854,      0.0356,      0.0071,      0.0013,      0.0747,      0.0040,     -0.0092,      0.0110,      0.0309,      0.0085],
        [    -0.0033,     -3.3281,     -0.4121,     -2.6094,     -0.5586,      4.3750,      2.2969,     -0.1069,     -0.5195,      1.6875,     -0.3008,     -3.8906,      1.2109,      1.2500,     -1.1172],
        [     0.0087,      0.0491,     -1.0781,      0.7031,      0.8281,     -2.3750,     -1.2266,     -0.7148,      0.3203,     -1.1953,     -1.2031,      0.1055,     -1.6719,     -0.1729,     -1.0938],
        [    -0.0195,     -0.9453,      0.7930,      0.6992,      0.1738,     -1.9141,     -1.3516,     -0.6680,      0.4863,      0.8711,     -0.2383,      1.2500,     -2.5625,      0.4141,     -0.6992],
        [    -0.0182,     -0.9180,     -1.7344,     -1.3047,     -2.7500,      3.3125,      1.4531,      2.3281,      1.0938,      2.1094,      0.6055,     -2.7031,      3.0938,      1.4766,     -1.7656],
        [    -0.0008,     -4.4375,     -0.2266,     -2.2188,     -3.1719,     -2.3281,     -1.4922,     -2.3594,     -1.8984,     -0.3867,     -0.5586,     -1.9609,     -4.3125,     -1.1875,     -1.8438],
        [     0.0142,      1.8125,     -2.2812,     -0.7617,     -1.5625,      2.5156,      1.2656,      2.7500,      1.2422,     -0.3730,      0.5195,     -2.6094,      3.2031,      0.7578,     -0.9688],
        [    -0.0098,     -3.7812,     -1.7734,     -3.5469,     -3.2812,     -3.0625,     -2.4531,     -4.1875,     -2.8438,     -2.1562,     -1.9531,     -3.2188,     -4.1562,     -1.8828,     -2.8906],
        [    -0.0275,     -3.7812,      0.1699,     -2.2188,     -0.6602,      2.3594,      1.1562,     -2.6562,     -1.9844,      0.4902,     -1.2891,     -2.9375,     -0.4688,     -0.2949,     -1.7891],
        [    -0.0530,     -3.5000,     -0.1611,     -2.5312,     -0.7188,      0.0957,      0.8086,     -3.8125,     -2.8281,     -1.0859,     -2.2656,     -2.7344,     -1.1641,     -0.8750,     -2.3594],
        [     0.0109,     -0.0051,     -2.8594,     -2.4375,     -1.1484,      2.4688,      1.3516,     -0.5977,     -0.9531,     -1.8281,     -1.4062,     -4.1250,      2.3750,     -0.2207,     -1.8828],
        [    -0.0217,     -2.9844,      2.3125,     -0.2471,      1.1797,      0.1475,     -0.6758,     -2.5781,     -0.9141,      1.6797,     -0.7148,     -0.9609,     -3.7344,      0.5508,     -0.8555],
        [    -0.0089,     -4.3125,     -0.1748,     -2.9062,     -2.8906,     -1.9453,     -1.4844,     -4.0312,     -3.0625,     -0.6914,     -1.6406,     -3.0156,     -5.0312,     -1.8047,     -2.3438],
        [    -0.0242,     -2.9062,      1.5625,     -1.4766,      1.1641,      3.8281,      2.3594,     -1.9141,     -1.7266,      0.8242,     -1.3594,     -2.4219,      0.5469,      0.1641,     -0.5977],
        [    -0.0040,     -0.6367,     -1.6250,     -1.4453,      0.5312,     -3.1562,     -1.8984,     -3.0625,     -1.7656,     -2.1875,     -2.0312,     -1.2500,     -2.6875,     -1.8359,     -1.8203]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9857],
        [0.8381],
        [0.8885],
        [0.8821],
        [0.9032],
        [0.8691],
        [0.9051],
        [0.8409],
        [0.8561],
        [0.8402],
        [0.7644],
        [0.8632],
        [0.8363],
        [0.8545]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0006,     0.8125,     0.1855,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0037,     0.0002,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0001,     0.0000,     0.0000,     0.0020,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9141,     0.0057,     0.0032,     0.0029,     0.0481,     0.0049,     0.0116,     0.0099,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2695,     0.0913,     0.2109,     0.0386,     0.1963,     0.0361,     0.0420,     0.0222,     0.0942,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9805,     0.0014,     0.0001,     0.0001,     0.0043,     0.0002,     0.0002,     0.0009,     0.0092,     0.0005,     0.0045,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9727,     0.0002,     0.0002,     0.0000,     0.0018,     0.0001,     0.0002,     0.0007,     0.0140,     0.0007,     0.0070,     0.0002,     0.0027,     0.0000,     0.0000],
        [    0.9883,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0001,     0.0000,     0.0001,     0.0115,     0.0000],
        [    0.0070,     0.1367,     0.0728,     0.1377,     0.0449,     0.0835,     0.0211,     0.0669,     0.0669,     0.1562,     0.0723,     0.0518,     0.0240,     0.0309,     0.0273]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0003,     -0.1196,     -0.1436,     -0.1445,     -0.1060,     -0.1157,     -0.1118,     -0.1055,     -0.1016,     -0.1250,     -0.1123,     -0.1670,     -0.1289,     -0.0996,     -0.1455],
        [     0.0515,     18.7500,     16.2500,     18.6250,     15.2500,     18.2500,     14.9375,     15.4375,     13.0000,     17.0000,     13.8125,     15.5000,     12.0625,      7.9375,      8.9375],
        [     0.0060,      7.2500,      5.7812,      5.9375,      4.5000,      6.0312,      4.0312,      5.2188,      4.7188,      5.7500,      4.9688,      4.7812,      5.1562,      3.6094,      3.9375],
        [    -0.0393,     -5.6250,     -8.7500,     -8.3750,     -3.4531,     -6.5312,     -7.0312,     -5.3125,     -3.9844,     -6.5938,     -5.0625,    -10.8125,     -7.5312,     -4.1875,     -9.0000],
        [    -0.0801,    -19.0000,    -19.2500,    -20.1250,    -13.5000,    -19.2500,    -17.5000,    -16.1250,    -12.0625,    -16.5000,    -14.1875,    -20.1250,    -16.0000,     -8.1875,    -14.1250],
        [    -0.0444,     -9.0625,    -10.5000,    -10.5000,     -6.2188,     -9.5000,     -9.0000,     -7.7500,     -5.6875,     -8.5000,     -7.1875,    -11.8125,     -8.7500,     -4.5625,     -8.8750],
        [    -0.0815,    -20.0000,    -21.0000,    -22.5000,    -13.8750,    -20.5000,    -18.7500,    -16.7500,    -12.3750,    -18.3750,    -14.8125,    -22.2500,    -16.6250,     -8.2500,    -15.3750],
        [    -0.0179,     -5.0938,     -5.6875,     -5.7500,     -2.9688,     -5.2500,     -4.3750,     -4.5312,     -2.8281,     -4.5312,     -3.5156,     -5.7500,     -4.6250,     -1.7109,     -3.8906],
        [    -0.0439,    -16.3750,    -17.1250,    -18.3750,    -13.3125,    -17.0000,    -14.1250,    -15.0000,    -12.3125,    -16.1250,    -13.6875,    -17.6250,    -13.8750,     -8.7500,    -11.7500],
        [     0.0193,      9.7500,      8.6875,      9.5625,      7.8438,      9.4375,      7.7812,      7.9062,      7.2812,      8.7500,      7.5312,      8.1250,      6.8438,      5.0000,      5.0938],
        [    -0.0728,    -22.3750,    -22.5000,    -24.7500,    -18.2500,    -23.2500,    -20.6250,    -20.1250,    -15.8125,    -21.0000,    -17.6250,    -22.8750,    -18.3750,    -10.4375,    -15.1250],
        [    -0.0515,     -6.6250,     -9.1875,     -9.6250,     -5.4688,     -8.3750,     -8.5625,     -7.0000,     -4.7188,     -7.6250,     -5.4375,    -10.8750,     -6.6875,     -2.7656,     -6.6562],
        [    -0.0413,     -8.7500,     -8.8125,    -10.0625,     -6.3125,     -9.3750,     -8.3750,     -7.2812,     -4.2812,     -7.2500,     -4.9688,     -8.6875,     -5.9375,     -1.1172,     -4.2812],
        [    -0.0334,    -13.3125,    -12.5625,    -14.3125,    -11.1875,    -13.8125,    -11.5000,    -12.0000,     -9.0625,    -12.3125,     -9.8750,    -12.2500,     -9.1250,     -4.5000,     -5.5625],
        [    -0.0019,      2.9688,      2.3438,      2.9688,      1.8594,      2.4688,      1.1016,      2.2500,      2.2500,      3.1094,      2.3281,      2.0000,      1.2266,      1.4844,      1.3594]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6501],
        [0.6667],
        [0.6729],
        [0.8341],
        [0.8883],
        [0.8333],
        [0.8054],
        [0.8336],
        [0.6523],
        [0.8370],
        [0.7471],
        [0.8526],
        [0.8631],
        [0.7757]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9492,     0.0006,     0.0026,     0.0012,     0.0267,     0.0011,     0.0066,     0.0015,     0.0093,     0.0007,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0023,     -0.3223,     -0.3418,     -0.3398,     -0.2441,     -0.3320,     -0.2520,     -0.2559,     -0.2324,     -0.2930,     -0.2256,     -0.3730,     -0.2812,     -0.1797,     -0.2314],
        [    -0.0410,    -11.4375,     -9.6250,    -10.9375,     -7.0000,    -11.2500,     -8.2500,     -9.9375,     -7.8125,    -10.7500,     -8.5625,    -11.0000,    -11.1875,     -6.9062,     -7.3125],
        [    -0.0732,    -19.1250,    -17.2500,    -18.7500,    -13.0625,    -17.6250,    -13.9375,    -15.7500,    -15.0625,    -16.3750,    -14.1250,    -19.2500,    -16.0000,    -12.0625,    -14.1875],
        [    -0.0781,    -16.7500,    -15.4375,    -16.2500,    -10.8750,    -15.8750,    -11.6875,    -14.1250,    -13.2500,    -15.3750,    -13.0000,    -17.3750,    -14.6875,    -10.3750,    -12.0625],
        [    -0.1226,    -27.1250,    -28.3750,    -29.3750,    -22.8750,    -28.1250,    -22.8750,    -23.7500,    -23.0000,    -24.8750,    -20.3750,    -31.2500,    -24.0000,    -17.6250,    -22.8750],
        [    -0.0806,    -17.6250,    -18.5000,    -19.1250,    -13.8750,    -18.5000,    -14.5625,    -15.8125,    -13.8125,    -16.8750,    -12.9375,    -20.2500,    -16.2500,    -10.6250,    -14.7500],
        [    -0.1670,    -31.7500,    -33.2500,    -34.5000,    -26.1250,    -32.7500,    -25.5000,    -26.7500,    -26.3750,    -28.2500,    -22.8750,    -36.2500,    -27.0000,    -19.7500,    -26.7500],
        [    -0.1250,    -25.1250,    -26.6250,    -27.2500,    -20.0000,    -25.5000,    -20.2500,    -21.6250,    -20.2500,    -23.7500,    -18.6250,    -29.2500,    -22.1250,    -15.7500,    -21.0000],
        [    -0.0918,    -26.7500,    -27.1250,    -27.8750,    -22.6250,    -26.6250,    -23.0000,    -24.2500,    -22.6250,    -25.2500,    -21.2500,    -31.1250,    -24.5000,    -18.3750,    -22.1250],
        [    -0.0134,     -7.4062,     -5.9375,     -6.6875,     -3.5781,     -6.7812,     -5.0000,     -6.4375,     -4.6562,     -7.2188,     -5.5938,     -6.7500,     -7.3125,     -4.2812,     -4.9062],
        [    -0.0625,    -23.2500,    -23.1250,    -24.0000,    -19.6250,    -22.8750,    -20.1250,    -21.0000,    -19.5000,    -21.3750,    -18.2500,    -26.2500,    -21.6250,    -16.1250,    -19.8750],
        [    -0.0903,    -21.6250,    -20.1250,    -21.0000,    -14.6250,    -19.2500,    -15.7500,    -17.8750,    -16.8750,    -19.8750,    -16.1250,    -22.5000,    -18.1250,    -13.4375,    -16.0000],
        [    -0.1260,    -25.1250,    -26.7500,    -27.5000,    -20.6250,    -25.6250,    -20.6250,    -21.1250,    -20.5000,    -22.6250,    -18.0000,    -29.1250,    -21.5000,    -15.4375,    -21.2500],
        [    -0.0806,    -22.5000,    -22.8750,    -23.5000,    -19.2500,    -22.2500,    -19.5000,    -20.0000,    -19.1250,    -20.5000,    -17.6250,    -26.2500,    -20.2500,    -15.2500,    -18.5000],
        [    -0.0811,    -20.2500,    -20.0000,    -20.0000,    -14.9375,    -19.7500,    -16.8750,    -16.7500,    -14.9375,    -17.8750,    -14.5000,    -21.8750,    -17.7500,    -11.9375,    -14.8125]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6165],
        [0.6785],
        [0.6762],
        [0.6789],
        [0.6669],
        [0.6769],
        [0.6688],
        [0.6681],
        [0.6604],
        [0.6669],
        [0.6293],
        [0.6682],
        [0.6825],
        [0.6606]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4551,     0.0071,     0.5391,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0000,     0.0081,     0.0038,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0088,     0.0532,     0.2480,     0.1553,     0.0469,     0.1196,     0.0525,     0.0825,     0.0713,     0.1611,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9805,     0.0000,     0.0044,     0.0030,     0.0005,     0.0002,     0.0015,     0.0002,     0.0004,     0.0005,     0.0001,     0.0082,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3711,     0.0092,     0.0520,     0.0417,     0.0398,     0.0491,     0.0498,     0.0244,     0.0522,     0.0376,     0.0126,     0.0825,     0.0214,     0.0515,     0.1045]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0012,     -0.4785,     -0.3691,     -0.3711,     -0.3457,     -0.4277,     -0.3066,     -0.3711,     -0.3164,     -0.4102,     -0.3340,     -0.3613,     -0.3809,     -0.2812,     -0.2637],
        [    -0.0243,    -10.4375,     -6.4375,     -7.0938,     -7.7500,     -8.9375,     -6.8125,     -8.0625,     -6.9062,     -7.8750,     -7.8438,     -5.8750,     -8.1875,     -6.1250,     -5.4375],
        [    -0.0007,     -4.1562,      0.1650,     -0.8828,     -2.9688,     -2.4219,     -1.9922,     -3.1094,     -2.6875,     -1.9141,     -4.1875,      0.9727,     -2.6250,     -1.7422,     -0.6016],
        [    -0.0281,    -10.5625,     -4.8438,     -5.5625,     -7.5312,     -8.7500,     -6.1562,     -8.2500,     -7.3750,     -8.0625,     -9.0000,     -4.1250,     -8.1250,     -6.3438,     -4.9688],
        [    -0.0889,    -32.2500,    -24.8750,    -24.5000,    -22.6250,    -28.2500,    -21.3750,    -25.5000,    -21.7500,    -26.2500,    -22.5000,    -23.3750,    -26.1250,    -20.5000,    -18.0000],
        [    -0.0630,    -27.3750,    -20.3750,    -20.6250,    -18.1250,    -22.8750,    -16.7500,    -20.5000,    -17.2500,    -21.5000,    -18.6250,    -19.2500,    -20.8750,    -16.0000,    -14.6875],
        [    -0.0962,    -37.2500,    -28.5000,    -28.3750,    -26.5000,    -32.5000,    -24.0000,    -29.2500,    -25.0000,    -30.0000,    -25.7500,    -27.0000,    -29.5000,    -23.0000,    -20.5000],
        [    -0.0664,    -26.2500,    -20.1250,    -20.0000,    -18.1250,    -22.5000,    -16.2500,    -20.0000,    -17.0000,    -20.8750,    -18.1250,    -19.1250,    -20.3750,    -15.6875,    -14.8125],
        [    -0.0718,    -30.2500,    -24.2500,    -24.2500,    -20.8750,    -26.1250,    -19.5000,    -23.3750,    -19.3750,    -24.1250,    -20.3750,    -22.8750,    -24.1250,    -18.1250,    -17.0000],
        [     0.0144,      1.8203,      3.3594,      2.8906,      1.6875,      2.6250,      1.8047,      2.2656,      2.1094,      2.9219,      1.2031,      3.7656,      2.5156,      2.4062,      2.1875],
        [    -0.0986,    -35.2500,    -27.7500,    -27.7500,    -24.6250,    -31.0000,    -22.7500,    -27.2500,    -23.3750,    -28.6250,    -24.1250,    -26.5000,    -28.0000,    -21.6250,    -20.3750],
        [    -0.0302,    -10.4375,     -5.4375,     -5.8125,     -7.5312,     -8.6875,     -6.5312,     -8.5000,     -7.8438,     -7.6562,     -9.1250,     -4.8125,     -8.5000,     -7.1875,     -5.5312],
        [    -0.0718,    -26.2500,    -19.7500,    -19.3750,    -18.3750,    -22.5000,    -16.2500,    -20.0000,    -17.2500,    -20.6250,    -18.0000,    -18.6250,    -20.0000,    -15.5625,    -14.3750],
        [    -0.0703,    -27.5000,    -22.2500,    -22.1250,    -19.6250,    -24.0000,    -18.0000,    -21.5000,    -18.0000,    -22.0000,    -18.7500,    -21.0000,    -22.2500,    -16.7500,    -15.6250],
        [     0.0004,     -3.7031,     -1.9688,     -2.1875,     -2.2344,     -2.0312,     -2.0156,     -2.7188,     -1.9609,     -2.2969,     -3.3906,     -1.5078,     -2.8594,     -1.9766,     -1.2656]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4468],
        [0.4080],
        [0.5683],
        [0.5832],
        [0.6257],
        [0.6040],
        [0.5840],
        [0.6104],
        [0.4200],
        [0.5992],
        [0.5855],
        [0.5979],
        [0.6229],
        [0.4533]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0095,     0.9922,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0084,     0.3574,     0.6367,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2676,     0.0371,     0.4766,     0.2188,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9062,     0.0025,     0.0356,     0.0038,     0.0510,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6445,     0.0134,     0.2051,     0.0248,     0.1011,     0.0126,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6680,     0.0071,     0.1377,     0.0143,     0.0918,     0.0107,     0.0688,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8672,     0.0017,     0.0417,     0.0035,     0.0337,     0.0065,     0.0378,     0.0091,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7891,     0.0081,     0.0315,     0.0074,     0.0258,     0.0083,     0.0337,     0.0100,     0.0879,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2656,     0.0342,     0.2080,     0.1187,     0.0728,     0.0303,     0.0383,     0.0123,     0.1235,     0.0957,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9336,     0.0006,     0.0032,     0.0002,     0.0049,     0.0025,     0.0072,     0.0018,     0.0303,     0.0001,     0.0142,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4355,     0.0063,     0.0762,     0.0364,     0.0732,     0.0148,     0.0610,     0.0232,     0.1455,     0.0427,     0.0420,     0.0417,     0.0000,     0.0000,     0.0000],
        [    0.6719,     0.0012,     0.0488,     0.0046,     0.0383,     0.0069,     0.0422,     0.0115,     0.0786,     0.0045,     0.0757,     0.0031,     0.0108,     0.0000,     0.0000],
        [    0.7539,     0.0064,     0.0226,     0.0051,     0.0195,     0.0056,     0.0199,     0.0061,     0.0791,     0.0060,     0.0234,     0.0020,     0.0022,     0.0491,     0.0000],
        [    0.1396,     0.0095,     0.0708,     0.0366,     0.0947,     0.0211,     0.0659,     0.0310,     0.0884,     0.1060,     0.0227,     0.0913,     0.0933,     0.0913,     0.0381]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0001,      0.0439,      0.0327,      0.0378,      0.0130,     -0.0016,      0.0007,      0.0026,      0.0008,      0.0256,     -0.0080,      0.0518,      0.0181,      0.0075,      0.0432],
        [    -0.0025,      4.6562,      5.1875,      4.5312,      2.5469,      0.9258,      0.7383,      0.7656,      0.9375,      3.3750,      0.7188,      6.4375,      3.2656,      1.8359,      3.3594],
        [    -0.0085,      3.7344,      4.3125,      4.6562,      2.4375,      0.5938,      0.5430,      0.8789,      1.4453,      4.5312,     -0.1050,      7.0625,      3.6406,      2.3438,      4.4062],
        [     0.0051,     -1.9688,      0.5859,     -0.1904,      0.1631,     -1.2578,     -0.6133,     -1.0938,      0.0850,      0.1079,     -0.9609,      1.0859,      0.3320,      0.1592,     -0.6719],
        [     0.0067,     -5.8750,     -3.2344,     -5.4688,     -2.8750,     -4.2500,     -2.2812,     -3.6719,     -2.2656,     -5.8125,     -1.6953,     -6.3125,     -4.6875,     -2.2500,     -5.3750],
        [     0.0048,     -3.8594,     -1.1406,     -3.2500,     -1.8438,     -3.9219,     -2.0625,     -3.0625,     -1.6172,     -4.0625,     -1.0156,     -3.5312,     -3.0938,     -1.0703,     -3.3438],
        [     0.0090,     -4.5312,     -1.5781,     -3.8438,     -1.9844,     -4.1250,     -2.2656,     -3.4062,     -1.7656,     -4.4062,     -1.9531,     -4.0312,     -3.2812,     -1.6016,     -4.4062],
        [     0.0046,     -6.2188,     -3.0312,     -5.5000,     -3.2344,     -4.9062,     -3.1250,     -4.5625,     -2.4844,     -6.2812,     -2.2500,     -6.5625,     -5.2500,     -2.3281,     -5.6875],
        [    -0.0067,     -4.5938,     -3.2344,     -4.6875,     -3.4219,     -4.5625,     -3.1562,     -4.3750,     -2.2031,     -4.8125,     -2.7031,     -5.5625,     -5.4375,     -2.3594,     -3.9219],
        [    -0.0039,     -2.0469,     -0.2490,     -0.8086,     -1.2969,     -2.1719,     -1.9375,     -3.0781,     -0.7734,     -1.0234,     -2.8438,     -0.5820,     -1.8359,     -0.4805,     -0.7461],
        [     0.0056,     -7.4062,     -5.6875,     -8.2500,     -5.2500,     -5.9062,     -4.8750,     -6.2188,     -3.4219,     -8.7500,     -4.1875,    -10.5000,     -8.6250,     -4.4688,     -7.6562],
        [     0.0029,     -4.2500,     -1.7422,     -2.4844,     -1.7812,     -3.3750,     -1.9609,     -2.9375,     -1.0938,     -2.3125,     -2.3438,     -2.3438,     -2.3750,     -1.1562,     -2.4688],
        [     0.0078,     -6.3438,     -2.6094,     -4.9688,     -2.8594,     -4.5625,     -2.7656,     -4.0625,     -2.1406,     -5.0000,     -2.1719,     -5.3438,     -4.1250,     -1.8047,     -5.4688],
        [    -0.0051,     -4.7812,     -3.5156,     -5.0000,     -3.6562,     -4.9062,     -3.6406,     -4.8125,     -2.2656,     -4.8438,     -3.4688,     -5.9375,     -5.8438,     -2.7344,     -4.4375],
        [     0.0059,     -2.6719,     -0.6680,     -1.3281,     -0.3809,     -1.8828,     -0.7422,     -1.5000,     -0.4512,     -0.2695,     -1.8047,     -0.4180,     -0.3965,     -0.4141,     -1.2891]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0900],
        [0.0969],
        [0.1380],
        [0.5522],
        [0.3571],
        [0.5534],
        [0.4409],
        [0.3632],
        [0.1246],
        [0.3689],
        [0.2370],
        [0.3950],
        [0.2667],
        [0.1123]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0004,     -0.8867,     -0.8984,     -0.7617,     -0.2178,     -0.3711,     -0.1572,     -0.2324,     -0.1680,     -0.6172,     -0.1592,     -0.5586,     -0.2715,     -0.2852,     -0.6445],
        [     0.0977,   -189.0000,   -192.0000,   -165.0000,    -48.2500,    -81.0000,    -33.7500,    -50.5000,    -37.2500,   -133.0000,    -34.5000,   -121.0000,    -58.7500,    -61.7500,   -138.0000],
        [     0.0942,   -184.0000,   -186.0000,   -160.0000,    -46.5000,    -78.5000,    -32.5000,    -48.5000,    -36.0000,   -129.0000,    -33.0000,   -117.0000,    -56.5000,    -59.7500,   -134.0000],
        [     0.0688,   -146.0000,   -147.0000,   -126.5000,    -37.0000,    -62.7500,    -26.3750,    -39.5000,    -29.0000,   -102.0000,    -26.7500,    -93.5000,    -45.7500,    -47.5000,   -106.0000],
        [     0.0243,    -59.0000,    -59.5000,    -51.0000,    -15.4375,    -25.5000,    -10.8750,    -16.3750,    -11.8125,    -41.2500,    -11.1250,    -37.5000,    -18.7500,    -19.0000,    -42.5000],
        [     0.0342,    -73.5000,    -74.0000,    -63.7500,    -19.2500,    -32.5000,    -14.1875,    -21.3750,    -15.6250,    -52.2500,    -14.6250,    -47.2500,    -24.2500,    -24.5000,    -53.5000],
        [     0.0156,    -45.7500,    -46.0000,    -39.7500,    -12.1875,    -20.5000,     -9.0625,    -13.6875,    -10.0000,    -32.2500,     -9.3125,    -29.3750,    -15.3125,    -15.3125,    -32.7500],
        [     0.0291,    -60.0000,    -60.5000,    -52.2500,    -16.6250,    -27.5000,    -12.7500,    -18.6250,    -13.6250,    -43.2500,    -12.8125,    -39.0000,    -21.0000,    -20.6250,    -43.7500],
        [     0.0254,    -49.0000,    -49.5000,    -42.7500,    -13.7500,    -22.3750,    -10.2500,    -15.0000,    -11.0000,    -35.5000,    -10.5625,    -31.7500,    -17.1250,    -16.8750,    -35.7500],
        [     0.0728,   -146.0000,   -147.0000,   -126.5000,    -37.2500,    -62.7500,    -26.2500,    -39.7500,    -29.1250,   -102.5000,    -27.1250,    -93.0000,    -45.7500,    -47.7500,   -106.5000],
        [     0.0236,    -47.0000,    -47.5000,    -40.7500,    -13.1250,    -21.2500,     -9.5625,    -14.1875,    -10.5000,    -34.0000,    -10.0000,    -30.3750,    -16.1250,    -16.2500,    -34.2500],
        [     0.0498,   -110.0000,   -111.0000,    -95.5000,    -28.3750,    -47.7500,    -20.3750,    -30.5000,    -22.1250,    -77.5000,    -20.6250,    -70.5000,    -35.2500,    -36.0000,    -80.0000],
        [     0.0292,    -68.5000,    -69.0000,    -59.5000,    -18.0000,    -30.2500,    -13.4375,    -19.8750,    -14.5625,    -48.7500,    -13.5000,    -44.0000,    -22.7500,    -22.8750,    -49.7500],
        [     0.0366,    -72.0000,    -73.0000,    -63.0000,    -19.1250,    -31.7500,    -13.7500,    -20.5000,    -15.0625,    -51.5000,    -14.1250,    -46.5000,    -23.7500,    -24.1250,    -52.7500],
        [     0.0613,   -123.5000,   -125.5000,   -108.0000,    -31.2500,    -53.0000,    -22.0000,    -33.0000,    -24.3750,    -87.0000,    -22.6250,    -79.0000,    -38.5000,    -40.2500,    -90.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5833],
        [0.5834],
        [0.5837],
        [0.5833],
        [0.5834],
        [0.5830],
        [0.5833],
        [0.5834],
        [0.5833],
        [0.5830],
        [0.5835],
        [0.5833],
        [0.5833],
        [0.5834]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.5781,     0.4199,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1514,     0.1611,     0.6875,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3223,     0.0095,     0.0111,     0.0211,     0.6367,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3320,     0.0035,     0.0040,     0.0161,     0.4375,     0.2051,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1475,     0.0000,     0.0001,     0.0002,     0.2637,     0.0179,     0.5703,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2676,     0.0000,     0.0000,     0.0002,     0.3535,     0.0623,     0.1826,     0.1338,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1670,     0.0007,     0.0005,     0.0017,     0.3027,     0.0898,     0.1221,     0.1465,     0.1689,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3027,     0.1924,     0.4902,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0153,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1001,     0.0013,     0.0009,     0.0025,     0.1953,     0.0889,     0.0674,     0.1494,     0.1709,     0.0075,     0.2158,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0017,     0.0796,     0.1177,     0.3555,     0.0024,     0.0053,     0.0011,     0.0028,     0.0013,     0.0461,     0.0008,     0.3848,     0.0000,     0.0000,     0.0000],
        [    0.1816,     0.0009,     0.0014,     0.0042,     0.1973,     0.0674,     0.1846,     0.0903,     0.0879,     0.0046,     0.0771,     0.0250,     0.0776,     0.0000,     0.0000],
        [    0.0344,     0.0615,     0.0557,     0.1211,     0.0698,     0.0635,     0.0304,     0.0552,     0.0403,     0.0737,     0.0383,     0.2695,     0.0518,     0.0356,     0.0000],
        [    0.0000,     0.2471,     0.2158,     0.3945,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0093,     0.0000,     0.1309,     0.0000,     0.0000,     0.0022]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0003,      0.0933,      0.0898,      0.0894,      0.0052,      0.0327,     -0.0177,      0.0239,      0.0226,      0.0742,      0.0181,      0.0898,      0.0064,      0.0130,      0.0588],
        [    -0.0056,     18.2500,     17.8750,     19.3750,      1.1172,      4.8438,     -2.2031,      2.1094,      0.1631,     13.8125,     -0.8477,     18.0000,      1.4141,      0.3086,     11.4375],
        [    -0.0064,     19.2500,     18.8750,     20.0000,      1.2500,      4.6875,     -1.8516,      1.9375,     -0.0354,     14.2500,     -1.2266,     18.2500,      1.4688,      0.2275,     11.9375],
        [    -0.0055,     12.1875,     12.2500,     13.6875,      0.6016,      2.7188,     -1.6328,      0.7695,     -0.6719,      9.0000,     -1.8750,     12.3750,      0.3418,     -0.9258,      7.6562],
        [     0.0014,     -3.5312,     -3.3594,     -2.7188,      0.6797,     -0.4746,      0.6484,     -0.3965,     -0.6094,     -2.6562,     -0.6914,     -1.9375,      0.0996,     -0.7969,     -1.6953],
        [    -0.0016,     -4.5625,     -4.4375,     -3.0312,      0.2734,     -0.4844,     -0.7969,     -0.2734,     -0.2539,     -3.1719,     -0.7578,     -1.3203,     -1.2500,     -1.5234,     -2.9844],
        [    -0.0079,     -8.1250,     -7.6562,     -6.7500,      0.5703,     -2.1094,      1.3438,     -1.5703,     -1.4375,     -6.4062,     -1.6562,     -5.9375,     -0.6641,     -1.6719,     -5.0625],
        [    -0.0034,     -9.0625,     -8.9375,     -7.4688,      0.2754,     -1.4609,     -0.3867,     -0.6953,     -0.4727,     -6.2188,     -0.4629,     -5.1875,     -1.4141,     -1.7344,     -5.8438],
        [    -0.0020,     -5.5000,     -5.7812,     -4.6250,      0.5938,     -0.6211,     -0.3184,     -0.1367,      0.0066,     -3.6250,      0.1089,     -3.0469,     -0.6641,     -0.8125,     -3.5781],
        [    -0.0035,     13.5000,     13.0000,     13.9375,      0.9453,      3.8750,     -2.1406,      1.8984,      0.7422,     10.5000,      0.0981,     13.5625,      0.9414,      0.7148,      8.5000],
        [    -0.0029,     -4.3438,     -4.7500,     -3.7188,      0.6602,     -0.1211,     -0.3984,      0.3965,      0.5273,     -2.5938,      0.7617,     -2.0469,     -0.3477,     -0.2656,     -2.7812],
        [    -0.0069,      3.8594,      4.2500,      5.3438,      0.3730,      1.1406,     -0.4531,      0.5078,     -0.2334,      3.3125,     -0.7266,      5.4375,      0.2852,     -0.6406,      2.3594],
        [    -0.0025,     -5.2500,     -4.8438,     -3.7656,      0.0791,     -0.9922,      0.0142,     -0.6992,     -0.7266,     -3.6719,     -0.8555,     -1.9844,     -0.8477,     -1.3359,     -3.1719],
        [     0.0015,      0.5781,      0.4785,      1.2578,      0.7031,      0.6094,     -0.1279,      0.4688,      0.1523,      0.7578,      0.1040,      2.0469,      0.4043,      0.0349,      0.6094],
        [    -0.0018,     12.8125,     12.6875,     13.3125,      0.7188,      3.0469,     -1.0703,      1.1797,      0.0178,      9.5625,     -0.8750,     12.1875,      1.1875,      0.4492,      8.1250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3332],
        [0.4652],
        [0.4994],
        [0.5062],
        [0.5276],
        [0.6015],
        [0.5215],
        [0.4097],
        [0.2551],
        [0.4365],
        [0.4172],
        [0.5118],
        [0.3931],
        [0.3460]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.0525 a:0.0664,:0.0496 and:0.0159,:0.0371,:0.0737 a:0.0869ery:0.0693)
ery
------
		( a:0.0664,:0.0496 and:0.0159,:0.0371,:0.0737 a:0.0869ery:0.0693thro:0.0080)
thro ((((((((((((((
@ 2550 train 4.3285 , allloss: 4.3285, dt: 1185.56ms, fracRes: 0.4294, norm(attn): 1.3750, norm(output): 0.7266, norm(x): 1.0756, norm(y): 0.9912, norm:0.5661, tok/sec: 110556.97, flops:116.06, batch-reuse:1
@ 2551 train 4.8484 , allloss: 4.8484, dt: 689.72ms, fracRes: 0.4336, norm(attn): 1.3281, norm(output): 0.7500, norm(x): 1.1001, norm(y): 0.9935, norm:1.7488, tok/sec: 190036.63, flops:199.50, batch-reuse:1
@ 2552 train 4.3431 , allloss: 4.3431, dt: 697.32ms, fracRes: 0.4281, norm(attn): 1.3438, norm(output): 0.7461, norm(x): 1.0914, norm(y): 0.9906, norm:1.4810, tok/sec: 187964.39, flops:197.33, batch-reuse:1
@ 2553 train 4.3058 , allloss: 4.3058, dt: 681.94ms, fracRes: 0.4248, norm(attn): 1.3594, norm(output): 0.7422, norm(x): 1.0799, norm(y): 0.9909, norm:0.7360, tok/sec: 192204.44, flops:201.78, batch-reuse:1
@ 2554 train 4.2842 , allloss: 4.2842, dt: 700.25ms, fracRes: 0.4236, norm(attn): 1.3750, norm(output): 0.7266, norm(x): 1.0687, norm(y): 0.9915, norm:0.8251, tok/sec: 187177.74, flops:196.50, batch-reuse:1
@ 2555 train 4.0950 , allloss: 4.0950, dt: 699.05ms, fracRes: 0.4261, norm(attn): 1.3594, norm(output): 0.7344, norm(x): 1.0725, norm(y): 0.9910, norm:0.7500, tok/sec: 187498.98, flops:196.84, batch-reuse:1
@ 2556 train 4.1610 , allloss: 4.1610, dt: 696.09ms, fracRes: 0.4317, norm(attn): 1.3438, norm(output): 0.7500, norm(x): 1.0925, norm(y): 0.9908, norm:0.7005, tok/sec: 188296.20, flops:197.67, batch-reuse:1
@ 2557 train 4.1954 , allloss: 4.1954, dt: 699.93ms, fracRes: 0.4258, norm(attn): 1.3516, norm(output): 0.7188, norm(x): 1.0686, norm(y): 0.9906, norm:0.6193, tok/sec: 187265.22, flops:196.59, batch-reuse:1
@ 2558 train 4.2173 , allloss: 4.2173, dt: 699.13ms, fracRes: 0.4257, norm(attn): 1.3438, norm(output): 0.7188, norm(x): 1.0690, norm(y): 0.9908, norm:0.5627, tok/sec: 187477.75, flops:196.81, batch-reuse:1
@ 2559 train 4.1853 , allloss: 4.1853, dt: 698.81ms, fracRes: 0.4288, norm(attn): 1.3359, norm(output): 0.7305, norm(x): 1.0777, norm(y): 0.9908, norm:0.5763, tok/sec: 187563.40, flops:196.90, batch-reuse:1
@ 2560 train 4.0769 , allloss: 4.0769, dt: 695.91ms, fracRes: 0.4266, norm(attn): 1.3359, norm(output): 0.7266, norm(x): 1.0733, norm(y): 0.9906, norm:0.6000, tok/sec: 188345.10, flops:197.73, batch-reuse:1
@ 2561 train 4.1402 , allloss: 4.1402, dt: 711.50ms, fracRes: 0.4270, norm(attn): 1.3281, norm(output): 0.7461, norm(x): 1.0873, norm(y): 0.9905, norm:0.6104, tok/sec: 184219.15, flops:193.39, batch-reuse:1
@ 2562 train 4.1439 , allloss: 4.1439, dt: 710.23ms, fracRes: 0.4274, norm(attn): 1.3516, norm(output): 0.7305, norm(x): 1.0729, norm(y): 0.9903, norm:0.7215, tok/sec: 184549.69, flops:193.74, batch-reuse:1
@ 2563 train 4.1107 , allloss: 4.1107, dt: 701.95ms, fracRes: 0.4292, norm(attn): 1.3516, norm(output): 0.7266, norm(x): 1.0679, norm(y): 0.9912, norm:0.6610, tok/sec: 186726.55, flops:196.03, batch-reuse:1
@ 2564 train 4.0455 , allloss: 4.0455, dt: 707.44ms, fracRes: 0.4254, norm(attn): 1.3203, norm(output): 0.7305, norm(x): 1.0657, norm(y): 0.9907, norm:0.6025, tok/sec: 185275.20, flops:194.50, batch-reuse:1
@ 2565 train 4.2364 , allloss: 4.2364, dt: 713.41ms, fracRes: 0.4263, norm(attn): 1.2969, norm(output): 0.7344, norm(x): 1.0736, norm(y): 0.9911, norm:0.6324, tok/sec: 183725.46, flops:192.88, batch-reuse:1
@ 2566 train 4.1736 , allloss: 4.1736, dt: 699.34ms, fracRes: 0.4271, norm(attn): 1.2891, norm(output): 0.7266, norm(x): 1.0711, norm(y): 0.9910, norm:0.5900, tok/sec: 187423.68, flops:196.76, batch-reuse:1
@ 2567 train 4.1567 , allloss: 4.1567, dt: 708.31ms, fracRes: 0.4282, norm(attn): 1.3203, norm(output): 0.7305, norm(x): 1.0725, norm(y): 0.9909, norm:0.5830, tok/sec: 185048.01, flops:194.26, batch-reuse:1
@ 2568 train 4.1509 , allloss: 4.1509, dt: 703.67ms, fracRes: 0.4279, norm(attn): 1.2969, norm(output): 0.7266, norm(x): 1.0755, norm(y): 0.9909, norm:0.5778, tok/sec: 186269.88, flops:195.55, batch-reuse:1
@ 2569 train 4.2036 , allloss: 4.2036, dt: 694.15ms, fracRes: 0.4262, norm(attn): 1.3047, norm(output): 0.7188, norm(x): 1.0667, norm(y): 0.9913, norm:0.5170, tok/sec: 188825.05, flops:198.23, batch-reuse:1
@ 2570 train 4.1333 , allloss: 4.1333, dt: 710.03ms, fracRes: 0.4248, norm(attn): 1.2969, norm(output): 0.7344, norm(x): 1.0718, norm(y): 0.9904, norm:0.5921, tok/sec: 184600.32, flops:193.79, batch-reuse:1
@ 2571 train 4.1108 , allloss: 4.1108, dt: 709.50ms, fracRes: 0.4285, norm(attn): 1.3203, norm(output): 0.7305, norm(x): 1.0757, norm(y): 0.9912, norm:0.4872, tok/sec: 184739.27, flops:193.94, batch-reuse:1
@ 2572 train 4.2287 , allloss: 4.2287, dt: 709.73ms, fracRes: 0.4278, norm(attn): 1.2891, norm(output): 0.7148, norm(x): 1.0701, norm(y): 0.9916, norm:0.5526, tok/sec: 184678.70, flops:193.88, batch-reuse:1
@ 2573 train 4.1521 , allloss: 4.1521, dt: 713.61ms, fracRes: 0.4279, norm(attn): 1.2812, norm(output): 0.7148, norm(x): 1.0648, norm(y): 0.9916, norm:0.5006, tok/sec: 183674.70, flops:192.82, batch-reuse:1
@ 2574 train 4.1023 , allloss: 4.1023, dt: 710.60ms, fracRes: 0.4292, norm(attn): 1.2422, norm(output): 0.7109, norm(x): 1.0688, norm(y): 0.9913, norm:0.5558, tok/sec: 184452.35, flops:193.64, batch-reuse:1
@ 2575 train 4.1495 , allloss: 4.1495, dt: 696.27ms, fracRes: 0.4281, norm(attn): 1.2500, norm(output): 0.7266, norm(x): 1.0724, norm(y): 0.9911, norm:0.4740, tok/sec: 188247.72, flops:197.62, batch-reuse:1
@ 2576 train 4.1102 , allloss: 4.1102, dt: 696.28ms, fracRes: 0.4290, norm(attn): 1.2812, norm(output): 0.7266, norm(x): 1.0663, norm(y): 0.9912, norm:0.5212, tok/sec: 188247.20, flops:197.62, batch-reuse:1
@ 2577 train 4.1914 , allloss: 4.1914, dt: 698.23ms, fracRes: 0.4313, norm(attn): 1.2656, norm(output): 0.7266, norm(x): 1.0768, norm(y): 0.9914, norm:0.4553, tok/sec: 187719.41, flops:197.07, batch-reuse:1
@ 2578 train 3.9832 , allloss: 3.9832, dt: 697.99ms, fracRes: 0.4293, norm(attn): 1.2656, norm(output): 0.7188, norm(x): 1.0679, norm(y): 0.9900, norm:0.5051, tok/sec: 187785.65, flops:197.14, batch-reuse:1
@ 2579 train 4.1762 , allloss: 4.1762, dt: 696.41ms, fracRes: 0.4302, norm(attn): 1.2812, norm(output): 0.7266, norm(x): 1.0748, norm(y): 0.9907, norm:0.4567, tok/sec: 188210.15, flops:197.58, batch-reuse:1
@ 2580 train 4.1384 , allloss: 4.1384, dt: 700.71ms, fracRes: 0.4271, norm(attn): 1.2812, norm(output): 0.7266, norm(x): 1.0689, norm(y): 0.9910, norm:0.4839, tok/sec: 187055.46, flops:196.37, batch-reuse:1
@ 2581 train 4.0889 , allloss: 4.0889, dt: 694.82ms, fracRes: 0.4254, norm(attn): 1.2812, norm(output): 0.7305, norm(x): 1.0738, norm(y): 0.9906, norm:0.5057, tok/sec: 188640.71, flops:198.04, batch-reuse:1
@ 2582 train 4.0747 , allloss: 4.0747, dt: 691.76ms, fracRes: 0.4263, norm(attn): 1.2734, norm(output): 0.7266, norm(x): 1.0703, norm(y): 0.9902, norm:0.5230, tok/sec: 189475.06, flops:198.91, batch-reuse:1
@ 2583 train 4.0706 , allloss: 4.0706, dt: 697.53ms, fracRes: 0.4265, norm(attn): 1.2891, norm(output): 0.7148, norm(x): 1.0649, norm(y): 0.9908, norm:0.4832, tok/sec: 187908.43, flops:197.27, batch-reuse:1
@ 2584 train 4.1105 , allloss: 4.1105, dt: 698.41ms, fracRes: 0.4293, norm(attn): 1.2969, norm(output): 0.7148, norm(x): 1.0706, norm(y): 0.9909, norm:0.5047, tok/sec: 187671.22, flops:197.02, batch-reuse:1
@ 2585 train 4.1224 , allloss: 4.1224, dt: 684.75ms, fracRes: 0.4326, norm(attn): 1.2734, norm(output): 0.7227, norm(x): 1.0764, norm(y): 0.9907, norm:0.5434, tok/sec: 191417.16, flops:200.95, batch-reuse:1
@ 2586 train 4.0200 , allloss: 4.0200, dt: 696.41ms, fracRes: 0.4285, norm(attn): 1.2812, norm(output): 0.7227, norm(x): 1.0746, norm(y): 0.9903, norm:0.5525, tok/sec: 188212.08, flops:197.59, batch-reuse:1
@ 2587 train 4.1943 , allloss: 4.1943, dt: 695.07ms, fracRes: 0.4328, norm(attn): 1.2734, norm(output): 0.7227, norm(x): 1.0818, norm(y): 0.9925, norm:0.5387, tok/sec: 188572.90, flops:197.96, batch-reuse:1
@ 2588 train 4.0612 , allloss: 4.0612, dt: 703.75ms, fracRes: 0.4269, norm(attn): 1.2891, norm(output): 0.7305, norm(x): 1.0742, norm(y): 0.9908, norm:0.5471, tok/sec: 186248.74, flops:195.52, batch-reuse:1
@ 2589 train 4.1559 , allloss: 4.1559, dt: 688.34ms, fracRes: 0.4264, norm(attn): 1.2891, norm(output): 0.7266, norm(x): 1.0710, norm(y): 0.9911, norm:0.5073, tok/sec: 190416.29, flops:199.90, batch-reuse:1
@ 2590 train 4.0895 , allloss: 4.0895, dt: 698.89ms, fracRes: 0.4273, norm(attn): 1.2734, norm(output): 0.7148, norm(x): 1.0646, norm(y): 0.9905, norm:0.5739, tok/sec: 187543.82, flops:196.88, batch-reuse:1
@ 2591 train 4.1504 , allloss: 4.1504, dt: 700.85ms, fracRes: 0.4324, norm(attn): 1.2656, norm(output): 0.7148, norm(x): 1.0720, norm(y): 0.9905, norm:0.5192, tok/sec: 187019.95, flops:196.33, batch-reuse:1
@ 2592 train 4.1864 , allloss: 4.1864, dt: 703.14ms, fracRes: 0.4331, norm(attn): 1.2734, norm(output): 0.7266, norm(x): 1.0762, norm(y): 0.9911, norm:0.5233, tok/sec: 186409.91, flops:195.69, batch-reuse:1
@ 2593 train 4.0719 , allloss: 4.0719, dt: 704.31ms, fracRes: 0.4343, norm(attn): 1.2812, norm(output): 0.7266, norm(x): 1.0853, norm(y): 0.9911, norm:0.5265, tok/sec: 186099.89, flops:195.37, batch-reuse:1
@ 2594 train 4.1078 , allloss: 4.1078, dt: 694.85ms, fracRes: 0.4301, norm(attn): 1.2969, norm(output): 0.7188, norm(x): 1.0726, norm(y): 0.9909, norm:0.5147, tok/sec: 188633.40, flops:198.03, batch-reuse:1
@ 2595 train 4.1112 , allloss: 4.1112, dt: 706.35ms, fracRes: 0.4278, norm(attn): 1.2656, norm(output): 0.7070, norm(x): 1.0620, norm(y): 0.9907, norm:0.4810, tok/sec: 185561.75, flops:194.80, batch-reuse:1
@ 2596 train 4.2211 , allloss: 4.2211, dt: 703.57ms, fracRes: 0.4323, norm(attn): 1.2500, norm(output): 0.7227, norm(x): 1.0772, norm(y): 0.9911, norm:0.5209, tok/sec: 186295.70, flops:195.57, batch-reuse:1
@ 2597 train 4.0645 , allloss: 4.0645, dt: 695.66ms, fracRes: 0.4348, norm(attn): 1.2500, norm(output): 0.7383, norm(x): 1.0867, norm(y): 0.9909, norm:0.5585, tok/sec: 188414.11, flops:197.80, batch-reuse:1
@ 2598 train 4.0721 , allloss: 4.0721, dt: 708.76ms, fracRes: 0.4313, norm(attn): 1.2812, norm(output): 0.7188, norm(x): 1.0763, norm(y): 0.9907, norm:0.5340, tok/sec: 184930.30, flops:194.14, batch-reuse:1
@ 2599 train 4.0235 , allloss: 4.0235, dt: 709.08ms, fracRes: 0.4299, norm(attn): 1.2812, norm(output): 0.7266, norm(x): 1.0754, norm(y): 0.9901, norm:0.5002, tok/sec: 184848.72, flops:194.05, batch-reuse:1
@ 2600 train 4.0203 , allloss: 4.0203, dt: 694.84ms, fracRes: 0.4311, norm(attn): 1.2734, norm(output): 0.7266, norm(x): 1.0746, norm(y): 0.9903, norm:0.5779, tok/sec: 188634.89, flops:198.03, batch-reuse:1
@ 2601 train 4.2086 , allloss: 4.2086, dt: 701.38ms, fracRes: 0.4298, norm(attn): 1.2656, norm(output): 0.7344, norm(x): 1.0777, norm(y): 0.9906, norm:0.5659, tok/sec: 186877.74, flops:196.18, batch-reuse:1
@ 2602 train 4.2075 , allloss: 4.2075, dt: 699.21ms, fracRes: 0.4320, norm(attn): 1.2656, norm(output): 0.7266, norm(x): 1.0814, norm(y): 0.9906, norm:0.5407, tok/sec: 187456.65, flops:196.79, batch-reuse:1
@ 2603 train 4.3338 , allloss: 4.3338, dt: 702.87ms, fracRes: 0.4350, norm(attn): 1.2500, norm(output): 0.7305, norm(x): 1.0861, norm(y): 0.9921, norm:0.6111, tok/sec: 186480.92, flops:195.77, batch-reuse:1
@ 2604 train 4.2824 , allloss: 4.2824, dt: 692.03ms, fracRes: 0.4345, norm(attn): 1.2422, norm(output): 0.7188, norm(x): 1.0790, norm(y): 0.9912, norm:0.5947, tok/sec: 189401.36, flops:198.83, batch-reuse:1
@ 2605 train 4.2371 , allloss: 4.2371, dt: 697.45ms, fracRes: 0.4336, norm(attn): 1.2344, norm(output): 0.7188, norm(x): 1.0783, norm(y): 0.9908, norm:0.5763, tok/sec: 187928.99, flops:197.29, batch-reuse:1
@ 2606 train 4.2986 , allloss: 4.2986, dt: 699.22ms, fracRes: 0.4328, norm(attn): 1.2500, norm(output): 0.7188, norm(x): 1.0728, norm(y): 0.9915, norm:0.5699, tok/sec: 187454.99, flops:196.79, batch-reuse:1
@ 2607 train 4.2110 , allloss: 4.2110, dt: 691.95ms, fracRes: 0.4361, norm(attn): 1.2188, norm(output): 0.7344, norm(x): 1.0960, norm(y): 0.9911, norm:0.4935, tok/sec: 189423.61, flops:198.86, batch-reuse:1
@ 2608 train 4.2772 , allloss: 4.2772, dt: 707.84ms, fracRes: 0.4332, norm(attn): 1.2422, norm(output): 0.7227, norm(x): 1.0775, norm(y): 0.9918, norm:0.5662, tok/sec: 185173.05, flops:194.39, batch-reuse:1
@ 2609 train 4.4543 , allloss: 4.4543, dt: 709.35ms, fracRes: 0.4368, norm(attn): 1.2344, norm(output): 0.7305, norm(x): 1.0887, norm(y): 0.9921, norm:0.5816, tok/sec: 184777.58, flops:193.98, batch-reuse:1
@ 2610 train 4.4035 , allloss: 4.4035, dt: 705.50ms, fracRes: 0.4359, norm(attn): 1.2266, norm(output): 0.7344, norm(x): 1.0880, norm(y): 0.9905, norm:0.5724, tok/sec: 185786.62, flops:195.04, batch-reuse:1
@ 2611 train 4.3129 , allloss: 4.3129, dt: 692.86ms, fracRes: 0.4388, norm(attn): 1.2266, norm(output): 0.7422, norm(x): 1.0986, norm(y): 0.9911, norm:0.6796, tok/sec: 189175.07, flops:198.60, batch-reuse:1
@ 2612 train 4.3021 , allloss: 4.3021, dt: 693.37ms, fracRes: 0.4372, norm(attn): 1.2266, norm(output): 0.7266, norm(x): 1.0857, norm(y): 0.9918, norm:0.6270, tok/sec: 189035.41, flops:198.45, batch-reuse:1
@ 2613 train 4.1508 , allloss: 4.1508, dt: 704.18ms, fracRes: 0.4358, norm(attn): 1.2422, norm(output): 0.7266, norm(x): 1.0826, norm(y): 0.9909, norm:0.5245, tok/sec: 186135.11, flops:195.40, batch-reuse:1
@ 2614 train 4.3029 , allloss: 4.3029, dt: 695.32ms, fracRes: 0.4333, norm(attn): 1.2500, norm(output): 0.7148, norm(x): 1.0786, norm(y): 0.9908, norm:0.6245, tok/sec: 188506.24, flops:197.89, batch-reuse:1
@ 2615 train 4.2933 , allloss: 4.2933, dt: 700.12ms, fracRes: 0.4331, norm(attn): 1.2500, norm(output): 0.7227, norm(x): 1.0794, norm(y): 0.9909, norm:0.5221, tok/sec: 187213.12, flops:196.54, batch-reuse:1
@ 2616 train 4.2858 , allloss: 4.2858, dt: 700.34ms, fracRes: 0.4336, norm(attn): 1.2344, norm(output): 0.7227, norm(x): 1.0798, norm(y): 0.9914, norm:0.5660, tok/sec: 187155.18, flops:196.48, batch-reuse:1
@ 2617 train 4.2008 , allloss: 4.2008, dt: 700.89ms, fracRes: 0.4318, norm(attn): 1.2500, norm(output): 0.7227, norm(x): 1.0739, norm(y): 0.9911, norm:0.5631, tok/sec: 187007.23, flops:196.32, batch-reuse:1
@ 2618 train 4.1427 , allloss: 4.1427, dt: 693.83ms, fracRes: 0.4350, norm(attn): 1.2344, norm(output): 0.7188, norm(x): 1.0807, norm(y): 0.9906, norm:0.5193, tok/sec: 188911.47, flops:198.32, batch-reuse:1
@ 2619 train 4.2064 , allloss: 4.2064, dt: 700.05ms, fracRes: 0.4384, norm(attn): 1.2266, norm(output): 0.7266, norm(x): 1.0857, norm(y): 0.9911, norm:0.5450, tok/sec: 187231.16, flops:196.56, batch-reuse:1
@ 2620 train 4.2889 , allloss: 4.2889, dt: 699.04ms, fracRes: 0.4338, norm(attn): 1.2344, norm(output): 0.7305, norm(x): 1.0800, norm(y): 0.9909, norm:0.5507, tok/sec: 187502.49, flops:196.84, batch-reuse:1
@ 2621 train 4.2297 , allloss: 4.2297, dt: 700.45ms, fracRes: 0.4366, norm(attn): 1.2109, norm(output): 0.7266, norm(x): 1.0816, norm(y): 0.9905, norm:0.5449, tok/sec: 187124.22, flops:196.44, batch-reuse:1
@ 2622 train 4.2442 , allloss: 4.2442, dt: 703.16ms, fracRes: 0.4348, norm(attn): 1.2109, norm(output): 0.7305, norm(x): 1.0824, norm(y): 0.9908, norm:0.5144, tok/sec: 186405.10, flops:195.69, batch-reuse:1
@ 2623 train 4.3193 , allloss: 4.3193, dt: 701.95ms, fracRes: 0.4369, norm(attn): 1.2266, norm(output): 0.7227, norm(x): 1.0874, norm(y): 0.9917, norm:0.5161, tok/sec: 186726.36, flops:196.03, batch-reuse:1
@ 2624 train 4.3184 , allloss: 4.3184, dt: 700.78ms, fracRes: 0.4358, norm(attn): 1.2031, norm(output): 0.7344, norm(x): 1.0887, norm(y): 0.9913, norm:0.5451, tok/sec: 187036.94, flops:196.35, batch-reuse:1
@ 2625 train 4.2621 , allloss: 4.2621, dt: 690.41ms, fracRes: 0.4372, norm(attn): 1.1953, norm(output): 0.7344, norm(x): 1.0904, norm(y): 0.9915, norm:0.5181, tok/sec: 189846.05, flops:199.30, batch-reuse:1
@ 2626 train 4.2238 , allloss: 4.2238, dt: 685.16ms, fracRes: 0.4366, norm(attn): 1.2031, norm(output): 0.7188, norm(x): 1.0807, norm(y): 0.9913, norm:0.5901, tok/sec: 191299.93, flops:200.83, batch-reuse:1
@ 2627 train 4.2758 , allloss: 4.2758, dt: 688.44ms, fracRes: 0.4380, norm(attn): 1.1953, norm(output): 0.7227, norm(x): 1.0789, norm(y): 0.9912, norm:0.5815, tok/sec: 190390.31, flops:199.87, batch-reuse:1
@ 2628 train 4.1460 , allloss: 4.1460, dt: 701.12ms, fracRes: 0.4374, norm(attn): 1.2031, norm(output): 0.7305, norm(x): 1.0875, norm(y): 0.9908, norm:0.4958, tok/sec: 186947.01, flops:196.26, batch-reuse:1
@ 2629 train 4.2144 , allloss: 4.2144, dt: 696.48ms, fracRes: 0.4374, norm(attn): 1.2031, norm(output): 0.7148, norm(x): 1.0751, norm(y): 0.9912, norm:0.5590, tok/sec: 188191.59, flops:197.56, batch-reuse:1
@ 2630 train 4.2958 , allloss: 4.2958, dt: 686.81ms, fracRes: 0.4428, norm(attn): 1.1875, norm(output): 0.7266, norm(x): 1.0882, norm(y): 0.9917, norm:0.4747, tok/sec: 190841.25, flops:200.35, batch-reuse:1
@ 2631 train 4.2000 , allloss: 4.2000, dt: 691.66ms, fracRes: 0.4403, norm(attn): 1.2031, norm(output): 0.7188, norm(x): 1.0763, norm(y): 0.9909, norm:0.6572, tok/sec: 189502.16, flops:198.94, batch-reuse:1
@ 2632 train 4.2320 , allloss: 4.2320, dt: 705.46ms, fracRes: 0.4404, norm(attn): 1.2031, norm(output): 0.7305, norm(x): 1.0870, norm(y): 0.9908, norm:0.5505, tok/sec: 185797.05, flops:195.05, batch-reuse:1
@ 2633 train 4.2401 , allloss: 4.2401, dt: 704.42ms, fracRes: 0.4387, norm(attn): 1.1953, norm(output): 0.7227, norm(x): 1.0871, norm(y): 0.9911, norm:0.5256, tok/sec: 186070.60, flops:195.34, batch-reuse:1
@ 2634 train 4.1995 , allloss: 4.1995, dt: 699.57ms, fracRes: 0.4378, norm(attn): 1.1953, norm(output): 0.7188, norm(x): 1.0890, norm(y): 0.9914, norm:0.5058, tok/sec: 187360.76, flops:196.69, batch-reuse:1
@ 2635 train 4.1860 , allloss: 4.1860, dt: 691.25ms, fracRes: 0.4369, norm(attn): 1.2031, norm(output): 0.7188, norm(x): 1.0805, norm(y): 0.9909, norm:0.4891, tok/sec: 189617.13, flops:199.06, batch-reuse:1
@ 2636 train 4.2728 , allloss: 4.2728, dt: 692.48ms, fracRes: 0.4360, norm(attn): 1.2266, norm(output): 0.7188, norm(x): 1.0811, norm(y): 0.9917, norm:0.5026, tok/sec: 189279.35, flops:198.71, batch-reuse:1
@ 2637 train 4.2558 , allloss: 4.2558, dt: 702.15ms, fracRes: 0.4359, norm(attn): 1.2109, norm(output): 0.7305, norm(x): 1.0838, norm(y): 0.9908, norm:0.4979, tok/sec: 186671.07, flops:195.97, batch-reuse:1
@ 2638 train 4.2895 , allloss: 4.2895, dt: 713.26ms, fracRes: 0.4369, norm(attn): 1.2109, norm(output): 0.7148, norm(x): 1.0793, norm(y): 0.9908, norm:0.5816, tok/sec: 183764.64, flops:192.92, batch-reuse:1
@ 2639 train 4.3243 , allloss: 4.3243, dt: 699.32ms, fracRes: 0.4406, norm(attn): 1.2031, norm(output): 0.7344, norm(x): 1.0960, norm(y): 0.9910, norm:0.5575, tok/sec: 187426.94, flops:196.76, batch-reuse:1
@ 2640 train 4.1669 , allloss: 4.1669, dt: 699.52ms, fracRes: 0.4434, norm(attn): 1.2031, norm(output): 0.7266, norm(x): 1.0920, norm(y): 0.9906, norm:0.6099, tok/sec: 187375.32, flops:196.71, batch-reuse:1
@ 2641 train 4.2631 , allloss: 4.2631, dt: 705.58ms, fracRes: 0.4425, norm(attn): 1.1953, norm(output): 0.7266, norm(x): 1.0945, norm(y): 0.9912, norm:0.5754, tok/sec: 185765.41, flops:195.02, batch-reuse:1
@ 2642 train 4.2502 , allloss: 4.2502, dt: 700.66ms, fracRes: 0.4385, norm(attn): 1.2109, norm(output): 0.7188, norm(x): 1.0786, norm(y): 0.9911, norm:0.6025, tok/sec: 187068.32, flops:196.38, batch-reuse:1
@ 2643 train 4.1341 , allloss: 4.1341, dt: 694.73ms, fracRes: 0.4389, norm(attn): 1.2188, norm(output): 0.7227, norm(x): 1.0829, norm(y): 0.9906, norm:0.5083, tok/sec: 188666.67, flops:198.06, batch-reuse:1
@ 2644 train 4.2328 , allloss: 4.2328, dt: 694.55ms, fracRes: 0.4352, norm(attn): 1.2109, norm(output): 0.7188, norm(x): 1.0766, norm(y): 0.9911, norm:0.5148, tok/sec: 188713.95, flops:198.11, batch-reuse:1
@ 2645 train 4.2699 , allloss: 4.2699, dt: 691.70ms, fracRes: 0.4351, norm(attn): 1.1953, norm(output): 0.7266, norm(x): 1.0779, norm(y): 0.9902, norm:0.5462, tok/sec: 189493.28, flops:198.93, batch-reuse:1
@ 2646 train 4.3096 , allloss: 4.3096, dt: 698.71ms, fracRes: 0.4390, norm(attn): 1.1797, norm(output): 0.7109, norm(x): 1.0733, norm(y): 0.9913, norm:0.6755, tok/sec: 187590.21, flops:196.93, batch-reuse:1
@ 2647 train 4.2530 , allloss: 4.2530, dt: 696.84ms, fracRes: 0.4446, norm(attn): 1.2031, norm(output): 0.7188, norm(x): 1.0886, norm(y): 0.9922, norm:0.6598, tok/sec: 188095.39, flops:197.46, batch-reuse:1
@ 2648 train 4.1784 , allloss: 4.1784, dt: 700.09ms, fracRes: 0.4413, norm(attn): 1.2031, norm(output): 0.7148, norm(x): 1.0801, norm(y): 0.9913, norm:0.5301, tok/sec: 187222.04, flops:196.55, batch-reuse:1
@ 2649 train 4.2057 , allloss: 4.2057, dt: 715.32ms, fracRes: 0.4417, norm(attn): 1.1953, norm(output): 0.7227, norm(x): 1.0840, norm(y): 0.9904, norm:0.6773, tok/sec: 183235.08, flops:192.36, batch-reuse:1
@ 2650 train 4.2121 , allloss: 4.2121, dt: 716.88ms, fracRes: 0.4422, norm(attn): 1.1875, norm(output): 0.7148, norm(x): 1.0806, norm(y): 0.9909, norm:0.6640, tok/sec: 182836.41, flops:191.94, batch-reuse:1
@ 2651 train 4.1996 , allloss: 4.1996, dt: 718.67ms, fracRes: 0.4433, norm(attn): 1.1719, norm(output): 0.7227, norm(x): 1.0858, norm(y): 0.9918, norm:0.5371, tok/sec: 182380.22, flops:191.46, batch-reuse:1
@ 2652 train 4.2132 , allloss: 4.2132, dt: 700.63ms, fracRes: 0.4438, norm(attn): 1.1641, norm(output): 0.7227, norm(x): 1.0867, norm(y): 0.9918, norm:0.6544, tok/sec: 187077.17, flops:196.39, batch-reuse:1
@ 2653 train 4.2447 , allloss: 4.2447, dt: 708.16ms, fracRes: 0.4396, norm(attn): 1.1406, norm(output): 0.7109, norm(x): 1.0767, norm(y): 0.9918, norm:0.5898, tok/sec: 185088.82, flops:194.31, batch-reuse:1
@ 2654 train 4.1875 , allloss: 4.1875, dt: 711.05ms, fracRes: 0.4383, norm(attn): 1.1250, norm(output): 0.7188, norm(x): 1.0793, norm(y): 0.9911, norm:0.6029, tok/sec: 184334.66, flops:193.51, batch-reuse:1
@ 2655 train 4.1791 , allloss: 4.1791, dt: 712.78ms, fracRes: 0.4337, norm(attn): 1.1250, norm(output): 0.7109, norm(x): 1.0754, norm(y): 0.9902, norm:0.5352, tok/sec: 183887.88, flops:193.05, batch-reuse:1
@ 2656 train 4.2981 , allloss: 4.2981, dt: 696.05ms, fracRes: 0.4328, norm(attn): 1.1172, norm(output): 0.7031, norm(x): 1.0685, norm(y): 0.9909, norm:0.5231, tok/sec: 188307.17, flops:197.69, batch-reuse:1
@ 2657 train 4.1882 , allloss: 4.1882, dt: 709.07ms, fracRes: 0.4351, norm(attn): 1.1094, norm(output): 0.7031, norm(x): 1.0671, norm(y): 0.9919, norm:0.5627, tok/sec: 184850.15, flops:194.06, batch-reuse:1
@ 2658 train 4.2096 , allloss: 4.2096, dt: 697.86ms, fracRes: 0.4378, norm(attn): 1.0781, norm(output): 0.7148, norm(x): 1.0801, norm(y): 0.9911, norm:0.5322, tok/sec: 187819.20, flops:197.17, batch-reuse:1
@ 2659 train 4.1729 , allloss: 4.1729, dt: 712.37ms, fracRes: 0.4372, norm(attn): 1.0625, norm(output): 0.7109, norm(x): 1.0765, norm(y): 0.9916, norm:0.5856, tok/sec: 183994.42, flops:193.16, batch-reuse:1
@ 2660 train 4.1685 , allloss: 4.1685, dt: 714.73ms, fracRes: 0.4385, norm(attn): 1.0391, norm(output): 0.7148, norm(x): 1.0838, norm(y): 0.9902, norm:0.5707, tok/sec: 183388.01, flops:192.52, batch-reuse:1
@ 2661 train 4.1870 , allloss: 4.1870, dt: 714.88ms, fracRes: 0.4344, norm(attn): 1.0781, norm(output): 0.7148, norm(x): 1.0737, norm(y): 0.9907, norm:0.5234, tok/sec: 183349.48, flops:192.48, batch-reuse:1
@ 2662 train 4.0980 , allloss: 4.0980, dt: 707.70ms, fracRes: 0.4353, norm(attn): 1.0625, norm(output): 0.7109, norm(x): 1.0714, norm(y): 0.9901, norm:0.6626, tok/sec: 185207.17, flops:194.43, batch-reuse:1
@ 2663 train 4.2205 , allloss: 4.2205, dt: 708.90ms, fracRes: 0.4326, norm(attn): 1.0625, norm(output): 0.7070, norm(x): 1.0635, norm(y): 0.9902, norm:0.5864, tok/sec: 184894.73, flops:194.10, batch-reuse:1
@ 2664 train 4.2553 , allloss: 4.2553, dt: 710.59ms, fracRes: 0.4388, norm(attn): 1.0547, norm(output): 0.7109, norm(x): 1.0790, norm(y): 0.9911, norm:0.5880, tok/sec: 184455.26, flops:193.64, batch-reuse:1
@ 2665 train 4.1779 , allloss: 4.1779, dt: 711.74ms, fracRes: 0.4376, norm(attn): 1.0625, norm(output): 0.7070, norm(x): 1.0733, norm(y): 0.9916, norm:0.6251, tok/sec: 184156.82, flops:193.33, batch-reuse:1
@ 2666 train 4.2831 , allloss: 4.2831, dt: 713.91ms, fracRes: 0.4410, norm(attn): 1.0625, norm(output): 0.7109, norm(x): 1.0855, norm(y): 0.9922, norm:0.6309, tok/sec: 183597.22, flops:192.74, batch-reuse:1
@ 2667 train 4.2623 , allloss: 4.2623, dt: 710.52ms, fracRes: 0.4403, norm(attn): 1.0312, norm(output): 0.7148, norm(x): 1.0832, norm(y): 0.9916, norm:0.5441, tok/sec: 184474.51, flops:193.66, batch-reuse:1
@ 2668 train 4.2539 , allloss: 4.2539, dt: 713.54ms, fracRes: 0.4363, norm(attn): 1.0391, norm(output): 0.7188, norm(x): 1.0726, norm(y): 0.9912, norm:0.5400, tok/sec: 183693.66, flops:192.84, batch-reuse:1
@ 2669 train 4.1935 , allloss: 4.1935, dt: 709.70ms, fracRes: 0.4343, norm(attn): 1.0391, norm(output): 0.7070, norm(x): 1.0657, norm(y): 0.9911, norm:0.5712, tok/sec: 184687.02, flops:193.88, batch-reuse:1
@ 2670 train 4.1992 , allloss: 4.1992, dt: 709.33ms, fracRes: 0.4348, norm(attn): 1.0469, norm(output): 0.7148, norm(x): 1.0737, norm(y): 0.9914, norm:0.5000, tok/sec: 184783.55, flops:193.99, batch-reuse:1
@ 2671 train 4.2393 , allloss: 4.2393, dt: 712.36ms, fracRes: 0.4367, norm(attn): 1.0469, norm(output): 0.7148, norm(x): 1.0779, norm(y): 0.9915, norm:0.5072, tok/sec: 183996.63, flops:193.16, batch-reuse:1
@ 2672 train 4.1805 , allloss: 4.1805, dt: 701.97ms, fracRes: 0.4394, norm(attn): 1.0312, norm(output): 0.7109, norm(x): 1.0750, norm(y): 0.9919, norm:0.5555, tok/sec: 186719.89, flops:196.02, batch-reuse:1
@ 2673 train 4.1390 , allloss: 4.1390, dt: 704.16ms, fracRes: 0.4396, norm(attn): 1.0312, norm(output): 0.7070, norm(x): 1.0750, norm(y): 0.9913, norm:0.5624, tok/sec: 186138.57, flops:195.41, batch-reuse:1
@ 2674 train 4.2270 , allloss: 4.2270, dt: 690.59ms, fracRes: 0.4412, norm(attn): 1.0312, norm(output): 0.7070, norm(x): 1.0791, norm(y): 0.9918, norm:0.6033, tok/sec: 189796.17, flops:199.25, batch-reuse:1
@ 2675 train 4.2380 , allloss: 4.2380, dt: 696.31ms, fracRes: 0.4357, norm(attn): 1.0547, norm(output): 0.7148, norm(x): 1.0732, norm(y): 0.9907, norm:0.5875, tok/sec: 188237.02, flops:197.61, batch-reuse:1
@ 2676 train 4.1766 , allloss: 4.1766, dt: 697.67ms, fracRes: 0.4372, norm(attn): 1.0859, norm(output): 0.7109, norm(x): 1.0777, norm(y): 0.9919, norm:0.5979, tok/sec: 187870.23, flops:197.23, batch-reuse:1
@ 2677 train 4.1745 , allloss: 4.1745, dt: 696.83ms, fracRes: 0.4384, norm(attn): 1.0859, norm(output): 0.7148, norm(x): 1.0782, norm(y): 0.9912, norm:0.4906, tok/sec: 188096.75, flops:197.46, batch-reuse:1
@ 2678 train 4.2804 , allloss: 4.2804, dt: 697.99ms, fracRes: 0.4412, norm(attn): 1.0781, norm(output): 0.7148, norm(x): 1.0793, norm(y): 0.9914, norm:0.5923, tok/sec: 187785.58, flops:197.14, batch-reuse:1
@ 2679 train 4.2423 , allloss: 4.2423, dt: 690.33ms, fracRes: 0.4426, norm(attn): 1.0625, norm(output): 0.7148, norm(x): 1.0804, norm(y): 0.9914, norm:0.5604, tok/sec: 189869.39, flops:199.33, batch-reuse:1
@ 2680 train 4.1203 , allloss: 4.1203, dt: 693.71ms, fracRes: 0.4423, norm(attn): 1.0703, norm(output): 0.7031, norm(x): 1.0758, norm(y): 0.9918, norm:0.5810, tok/sec: 188944.65, flops:198.35, batch-reuse:1
@ 2681 train 4.2292 , allloss: 4.2292, dt: 689.27ms, fracRes: 0.4414, norm(attn): 1.0859, norm(output): 0.7070, norm(x): 1.0792, norm(y): 0.9919, norm:0.4893, tok/sec: 190160.73, flops:199.63, batch-reuse:1
@ 2682 train 4.1275 , allloss: 4.1275, dt: 698.62ms, fracRes: 0.4438, norm(attn): 1.0703, norm(output): 0.7070, norm(x): 1.0797, norm(y): 0.9923, norm:0.6714, tok/sec: 187615.50, flops:196.96, batch-reuse:1
@ 2683 train 4.1612 , allloss: 4.1612, dt: 699.93ms, fracRes: 0.4390, norm(attn): 1.0781, norm(output): 0.7188, norm(x): 1.0811, norm(y): 0.9916, norm:0.4949, tok/sec: 187264.20, flops:196.59, batch-reuse:1
@ 2684 train 4.2133 , allloss: 4.2133, dt: 697.77ms, fracRes: 0.4388, norm(attn): 1.0781, norm(output): 0.7227, norm(x): 1.0779, norm(y): 0.9914, norm:0.5559, tok/sec: 187843.52, flops:197.20, batch-reuse:1
@ 2685 train 4.2313 , allloss: 4.2313, dt: 701.25ms, fracRes: 0.4378, norm(attn): 1.0781, norm(output): 0.7070, norm(x): 1.0718, norm(y): 0.9921, norm:0.5133, tok/sec: 186913.00, flops:196.22, batch-reuse:1
@ 2686 train 4.3007 , allloss: 4.3007, dt: 699.36ms, fracRes: 0.4357, norm(attn): 1.0469, norm(output): 0.7070, norm(x): 1.0715, norm(y): 0.9924, norm:0.5118, tok/sec: 187416.84, flops:196.75, batch-reuse:1
@ 2687 train 4.1730 , allloss: 4.1730, dt: 706.31ms, fracRes: 0.4399, norm(attn): 1.0312, norm(output): 0.7266, norm(x): 1.0859, norm(y): 0.9913, norm:0.5408, tok/sec: 185573.09, flops:194.81, batch-reuse:1
@ 2688 train 4.1753 , allloss: 4.1753, dt: 708.05ms, fracRes: 0.4361, norm(attn): 1.0469, norm(output): 0.7109, norm(x): 1.0727, norm(y): 0.9917, norm:0.5009, tok/sec: 185116.49, flops:194.34, batch-reuse:1
@ 2689 train 4.2314 , allloss: 4.2314, dt: 707.56ms, fracRes: 0.4367, norm(attn): 1.0234, norm(output): 0.7227, norm(x): 1.0758, norm(y): 0.9912, norm:0.5993, tok/sec: 185246.30, flops:194.47, batch-reuse:1
@ 2690 train 4.1923 , allloss: 4.1923, dt: 708.64ms, fracRes: 0.4363, norm(attn): 1.0312, norm(output): 0.7148, norm(x): 1.0761, norm(y): 0.9907, norm:0.5732, tok/sec: 184963.72, flops:194.18, batch-reuse:1
@ 2691 train 4.2260 , allloss: 4.2260, dt: 687.03ms, fracRes: 0.4367, norm(attn): 1.0156, norm(output): 0.7148, norm(x): 1.0775, norm(y): 0.9911, norm:0.5481, tok/sec: 190779.66, flops:200.28, batch-reuse:1
@ 2692 train 4.0561 , allloss: 4.0561, dt: 704.09ms, fracRes: 0.4375, norm(attn): 1.0000, norm(output): 0.7188, norm(x): 1.0788, norm(y): 0.9905, norm:0.6012, tok/sec: 186158.37, flops:195.43, batch-reuse:1
@ 2693 train 4.2388 , allloss: 4.2388, dt: 698.25ms, fracRes: 0.4398, norm(attn): 1.0078, norm(output): 0.7188, norm(x): 1.0815, norm(y): 0.9904, norm:0.6768, tok/sec: 187714.15, flops:197.06, batch-reuse:1
@ 2694 train 4.2386 , allloss: 4.2386, dt: 690.20ms, fracRes: 0.4425, norm(attn): 1.0078, norm(output): 0.7148, norm(x): 1.0851, norm(y): 0.9918, norm:0.6047, tok/sec: 189903.96, flops:199.36, batch-reuse:1
@ 2695 train 4.1621 , allloss: 4.1621, dt: 704.97ms, fracRes: 0.4421, norm(attn): 1.0234, norm(output): 0.7188, norm(x): 1.0846, norm(y): 0.9912, norm:0.6032, tok/sec: 185924.98, flops:195.18, batch-reuse:1
@ 2696 train 4.1719 , allloss: 4.1719, dt: 695.39ms, fracRes: 0.4401, norm(attn): 1.0234, norm(output): 0.7031, norm(x): 1.0721, norm(y): 0.9914, norm:0.6175, tok/sec: 188488.01, flops:197.88, batch-reuse:1
@ 2697 train 4.1172 , allloss: 4.1172, dt: 708.35ms, fracRes: 0.4402, norm(attn): 1.0312, norm(output): 0.7109, norm(x): 1.0746, norm(y): 0.9914, norm:0.5019, tok/sec: 185037.67, flops:194.25, batch-reuse:1
@ 2698 train 4.1492 , allloss: 4.1492, dt: 707.86ms, fracRes: 0.4416, norm(attn): 1.0156, norm(output): 0.7070, norm(x): 1.0731, norm(y): 0.9907, norm:0.6015, tok/sec: 185167.62, flops:194.39, batch-reuse:1
@ 2699 train 4.2356 , allloss: 4.2356, dt: 699.80ms, fracRes: 0.4437, norm(attn): 1.0078, norm(output): 0.7070, norm(x): 1.0792, norm(y): 0.9915, norm:0.5234, tok/sec: 187298.97, flops:196.63, batch-reuse:1
@ 2700 train 4.1064 , allloss: 4.1064, dt: 697.65ms, fracRes: 0.4436, norm(attn): 1.0156, norm(output): 0.7188, norm(x): 1.0844, norm(y): 0.9908, norm:0.5895, tok/sec: 187876.58, flops:197.23, batch-reuse:1
@ 2701 train 4.1073 , allloss: 4.1073, dt: 697.60ms, fracRes: 0.4418, norm(attn): 1.0078, norm(output): 0.7031, norm(x): 1.0729, norm(y): 0.9912, norm:0.4912, tok/sec: 187890.07, flops:197.25, batch-reuse:1
@ 2702 train 4.2042 , allloss: 4.2042, dt: 696.05ms, fracRes: 0.4443, norm(attn): 1.0156, norm(output): 0.7188, norm(x): 1.0818, norm(y): 0.9911, norm:0.6000, tok/sec: 188309.10, flops:197.69, batch-reuse:1
@ 2703 train 4.2165 , allloss: 4.2165, dt: 685.94ms, fracRes: 0.4423, norm(attn): 1.0156, norm(output): 0.7109, norm(x): 1.0766, norm(y): 0.9914, norm:0.4890, tok/sec: 191083.56, flops:200.60, batch-reuse:1
@ 2704 train 4.2980 , allloss: 4.2980, dt: 695.49ms, fracRes: 0.4447, norm(attn): 1.0078, norm(output): 0.7227, norm(x): 1.0886, norm(y): 0.9914, norm:0.5918, tok/sec: 188461.06, flops:197.85, batch-reuse:1
@ 2705 train 4.1533 , allloss: 4.1533, dt: 697.25ms, fracRes: 0.4454, norm(attn): 1.0156, norm(output): 0.7188, norm(x): 1.0842, norm(y): 0.9916, norm:0.5345, tok/sec: 187983.10, flops:197.34, batch-reuse:1
@ 2706 train 4.1113 , allloss: 4.1113, dt: 689.81ms, fracRes: 0.4429, norm(attn): 1.0078, norm(output): 0.7109, norm(x): 1.0766, norm(y): 0.9911, norm:0.4714, tok/sec: 190012.78, flops:199.48, batch-reuse:1
@ 2707 train 4.1969 , allloss: 4.1969, dt: 696.37ms, fracRes: 0.4448, norm(attn): 1.0078, norm(output): 0.7070, norm(x): 1.0777, norm(y): 0.9913, norm:0.6060, tok/sec: 188222.20, flops:197.60, batch-reuse:1
@ 2708 train 4.1190 , allloss: 4.1190, dt: 696.81ms, fracRes: 0.4456, norm(attn): 1.0000, norm(output): 0.7109, norm(x): 1.0792, norm(y): 0.9908, norm:0.4807, tok/sec: 188102.35, flops:197.47, batch-reuse:1
@ 2709 train 4.0966 , allloss: 4.0966, dt: 690.93ms, fracRes: 0.4471, norm(attn): 1.0156, norm(output): 0.7148, norm(x): 1.0830, norm(y): 0.9906, norm:0.6425, tok/sec: 189702.52, flops:199.15, batch-reuse:1
@ 2710 train 4.2603 , allloss: 4.2603, dt: 699.59ms, fracRes: 0.4481, norm(attn): 1.0078, norm(output): 0.7188, norm(x): 1.0886, norm(y): 0.9912, norm:0.5749, tok/sec: 187355.52, flops:196.69, batch-reuse:1
@ 2711 train 4.3271 , allloss: 4.3271, dt: 701.12ms, fracRes: 0.4430, norm(attn): 1.0156, norm(output): 0.7031, norm(x): 1.0761, norm(y): 0.9926, norm:0.5393, tok/sec: 186947.58, flops:196.26, batch-reuse:1
@ 2712 train 4.2269 , allloss: 4.2269, dt: 701.89ms, fracRes: 0.4415, norm(attn): 1.0078, norm(output): 0.7070, norm(x): 1.0735, norm(y): 0.9913, norm:0.6591, tok/sec: 186742.02, flops:196.04, batch-reuse:1
@ 2713 train 4.1496 , allloss: 4.1496, dt: 697.98ms, fracRes: 0.4461, norm(attn): 0.9961, norm(output): 0.7188, norm(x): 1.0913, norm(y): 0.9917, norm:0.5644, tok/sec: 187788.79, flops:197.14, batch-reuse:1
@ 2714 train 4.1927 , allloss: 4.1927, dt: 685.52ms, fracRes: 0.4497, norm(attn): 0.9844, norm(output): 0.7266, norm(x): 1.0985, norm(y): 0.9921, norm:0.6029, tok/sec: 191202.12, flops:200.72, batch-reuse:1
@ 2715 train 4.1467 , allloss: 4.1467, dt: 701.93ms, fracRes: 0.4444, norm(attn): 0.9766, norm(output): 0.7070, norm(x): 1.0759, norm(y): 0.9913, norm:0.5063, tok/sec: 186730.54, flops:196.03, batch-reuse:1
@ 2716 train 4.1247 , allloss: 4.1247, dt: 686.78ms, fracRes: 0.4438, norm(attn): 0.9844, norm(output): 0.6992, norm(x): 1.0739, norm(y): 0.9908, norm:0.5914, tok/sec: 190849.99, flops:200.35, batch-reuse:1
@ 2717 train 4.1725 , allloss: 4.1725, dt: 701.34ms, fracRes: 0.4450, norm(attn): 0.9805, norm(output): 0.7109, norm(x): 1.0830, norm(y): 0.9908, norm:0.4865, tok/sec: 186887.97, flops:196.20, batch-reuse:1
@ 2718 train 4.1200 , allloss: 4.1200, dt: 701.70ms, fracRes: 0.4436, norm(attn): 0.9922, norm(output): 0.7031, norm(x): 1.0767, norm(y): 0.9913, norm:0.5588, tok/sec: 186792.53, flops:196.10, batch-reuse:1
@ 2719 train 4.2132 , allloss: 4.2132, dt: 690.21ms, fracRes: 0.4447, norm(attn): 0.9922, norm(output): 0.7227, norm(x): 1.0882, norm(y): 0.9911, norm:0.5069, tok/sec: 189900.41, flops:199.36, batch-reuse:1
@ 2720 train 4.2070 , allloss: 4.2070, dt: 688.99ms, fracRes: 0.4447, norm(attn): 0.9961, norm(output): 0.7227, norm(x): 1.0881, norm(y): 0.9913, norm:0.4703, tok/sec: 190237.79, flops:199.71, batch-reuse:1
@ 2721 train 4.0941 , allloss: 4.0941, dt: 713.68ms, fracRes: 0.4436, norm(attn): 1.0156, norm(output): 0.7109, norm(x): 1.0844, norm(y): 0.9918, norm:0.4605, tok/sec: 183656.41, flops:192.80, batch-reuse:1
@ 2722 train 4.1767 , allloss: 4.1767, dt: 714.26ms, fracRes: 0.4430, norm(attn): 1.0078, norm(output): 0.7070, norm(x): 1.0779, norm(y): 0.9916, norm:0.4731, tok/sec: 183507.32, flops:192.65, batch-reuse:1
@ 2723 train 4.2331 , allloss: 4.2331, dt: 713.87ms, fracRes: 0.4448, norm(attn): 1.0078, norm(output): 0.7031, norm(x): 1.0815, norm(y): 0.9914, norm:0.5332, tok/sec: 183608.20, flops:192.75, batch-reuse:1
@ 2724 train 4.1193 , allloss: 4.1193, dt: 711.24ms, fracRes: 0.4439, norm(attn): 1.0000, norm(output): 0.6992, norm(x): 1.0741, norm(y): 0.9910, norm:0.4407, tok/sec: 184286.21, flops:193.46, batch-reuse:1
@ 2725 train 4.1498 , allloss: 4.1498, dt: 714.54ms, fracRes: 0.4477, norm(attn): 0.9883, norm(output): 0.6992, norm(x): 1.0773, norm(y): 0.9920, norm:0.4658, tok/sec: 183436.54, flops:192.57, batch-reuse:1
@ 2726 train 4.1263 , allloss: 4.1263, dt: 700.66ms, fracRes: 0.4482, norm(attn): 0.9922, norm(output): 0.7148, norm(x): 1.0824, norm(y): 0.9919, norm:0.5085, tok/sec: 187069.59, flops:196.39, batch-reuse:1
@ 2727 train 4.2003 , allloss: 4.2003, dt: 704.15ms, fracRes: 0.4456, norm(attn): 0.9961, norm(output): 0.7148, norm(x): 1.0865, norm(y): 0.9913, norm:0.4678, tok/sec: 186142.67, flops:195.41, batch-reuse:1
@ 2728 train 4.2190 , allloss: 4.2190, dt: 694.87ms, fracRes: 0.4463, norm(attn): 0.9922, norm(output): 0.7188, norm(x): 1.0842, norm(y): 0.9916, norm:0.5588, tok/sec: 188627.64, flops:198.02, batch-reuse:1
@ 2729 train 4.1765 , allloss: 4.1765, dt: 701.89ms, fracRes: 0.4475, norm(attn): 0.9961, norm(output): 0.7148, norm(x): 1.0891, norm(y): 0.9909, norm:0.4858, tok/sec: 186741.83, flops:196.04, batch-reuse:1
@ 2730 train 4.1809 , allloss: 4.1809, dt: 695.15ms, fracRes: 0.4460, norm(attn): 1.0000, norm(output): 0.7031, norm(x): 1.0782, norm(y): 0.9910, norm:0.5395, tok/sec: 188552.79, flops:197.94, batch-reuse:1
@ 2731 train 4.1158 , allloss: 4.1158, dt: 710.20ms, fracRes: 0.4487, norm(attn): 1.0000, norm(output): 0.7109, norm(x): 1.0843, norm(y): 0.9908, norm:0.5035, tok/sec: 184555.64, flops:193.75, batch-reuse:1
@ 2732 train 4.1208 , allloss: 4.1208, dt: 708.42ms, fracRes: 0.4465, norm(attn): 1.0078, norm(output): 0.7188, norm(x): 1.0877, norm(y): 0.9913, norm:0.5066, tok/sec: 185020.24, flops:194.23, batch-reuse:1
@ 2733 train 4.2066 , allloss: 4.2066, dt: 712.14ms, fracRes: 0.4422, norm(attn): 1.0078, norm(output): 0.7227, norm(x): 1.0803, norm(y): 0.9921, norm:0.5293, tok/sec: 184053.55, flops:193.22, batch-reuse:1
@ 2734 train 4.0819 , allloss: 4.0819, dt: 700.62ms, fracRes: 0.4409, norm(attn): 1.0000, norm(output): 0.7070, norm(x): 1.0754, norm(y): 0.9905, norm:0.4912, tok/sec: 187080.48, flops:196.40, batch-reuse:1
@ 2735 train 4.1966 , allloss: 4.1966, dt: 712.90ms, fracRes: 0.4445, norm(attn): 1.0000, norm(output): 0.7148, norm(x): 1.0806, norm(y): 0.9909, norm:0.4677, tok/sec: 183856.77, flops:193.01, batch-reuse:1
@ 2736 train 4.1974 , allloss: 4.1974, dt: 711.52ms, fracRes: 0.4503, norm(attn): 0.9805, norm(output): 0.7227, norm(x): 1.0940, norm(y): 0.9912, norm:0.5633, tok/sec: 184214.83, flops:193.39, batch-reuse:1
@ 2737 train 4.2175 , allloss: 4.2175, dt: 707.50ms, fracRes: 0.4478, norm(attn): 1.0078, norm(output): 0.7266, norm(x): 1.0890, norm(y): 0.9919, norm:0.5654, tok/sec: 185261.28, flops:194.49, batch-reuse:1
@ 2738 train 4.0388 , allloss: 4.0388, dt: 688.04ms, fracRes: 0.4479, norm(attn): 0.9961, norm(output): 0.7344, norm(x): 1.0989, norm(y): 0.9906, norm:0.6917, tok/sec: 190499.82, flops:199.99, batch-reuse:1
@ 2739 train 4.1410 , allloss: 4.1410, dt: 683.53ms, fracRes: 0.4498, norm(attn): 1.0078, norm(output): 0.7188, norm(x): 1.0891, norm(y): 0.9908, norm:0.5079, tok/sec: 191756.40, flops:201.31, batch-reuse:1
@ 2740 train 4.0040 , allloss: 4.0040, dt: 695.27ms, fracRes: 0.4501, norm(attn): 1.0000, norm(output): 0.7188, norm(x): 1.0840, norm(y): 0.9901, norm:0.5879, tok/sec: 188520.65, flops:197.91, batch-reuse:1
@ 2741 train 4.1000 , allloss: 4.1000, dt: 694.67ms, fracRes: 0.4432, norm(attn): 1.0000, norm(output): 0.7109, norm(x): 1.0712, norm(y): 0.9903, norm:0.5924, tok/sec: 188683.05, flops:198.08, batch-reuse:1
@ 2742 train 4.0773 , allloss: 4.0773, dt: 695.45ms, fracRes: 0.4446, norm(attn): 0.9883, norm(output): 0.7188, norm(x): 1.0796, norm(y): 0.9902, norm:0.6379, tok/sec: 188470.37, flops:197.86, batch-reuse:1
@ 2743 train 4.0573 , allloss: 4.0573, dt: 699.55ms, fracRes: 0.4447, norm(attn): 0.9922, norm(output): 0.7188, norm(x): 1.0855, norm(y): 0.9905, norm:0.5353, tok/sec: 187366.19, flops:196.70, batch-reuse:1
@ 2744 train 4.0591 , allloss: 4.0591, dt: 693.13ms, fracRes: 0.4467, norm(attn): 0.9922, norm(output): 0.7188, norm(x): 1.0852, norm(y): 0.9908, norm:0.5793, tok/sec: 189102.19, flops:198.52, batch-reuse:1
@ 2745 train 4.0085 , allloss: 4.0085, dt: 708.14ms, fracRes: 0.4502, norm(attn): 0.9844, norm(output): 0.7148, norm(x): 1.0913, norm(y): 0.9907, norm:0.5277, tok/sec: 185093.56, flops:194.31, batch-reuse:1
@ 2746 train 4.0150 , allloss: 4.0150, dt: 705.81ms, fracRes: 0.4492, norm(attn): 0.9844, norm(output): 0.7070, norm(x): 1.0802, norm(y): 0.9911, norm:0.6086, tok/sec: 185704.98, flops:194.95, batch-reuse:1
@ 2747 train 4.0532 , allloss: 4.0532, dt: 704.15ms, fracRes: 0.4495, norm(attn): 0.9805, norm(output): 0.7031, norm(x): 1.0827, norm(y): 0.9906, norm:0.4896, tok/sec: 186143.05, flops:195.41, batch-reuse:1
@ 2748 train 4.1510 , allloss: 4.1510, dt: 691.30ms, fracRes: 0.4532, norm(attn): 0.9492, norm(output): 0.6992, norm(x): 1.0875, norm(y): 0.9923, norm:0.5757, tok/sec: 189600.85, flops:199.04, batch-reuse:1
@ 2749 train 4.0772 , allloss: 4.0772, dt: 691.20ms, fracRes: 0.4465, norm(attn): 0.9414, norm(output): 0.6992, norm(x): 1.0796, norm(y): 0.9906, norm:0.4782, tok/sec: 189629.10, flops:199.07, batch-reuse:1
@ 2750 train 4.0417 , allloss: 4.0417, dt: 689.68ms, fracRes: 0.4530, norm(attn): 0.9102, norm(output): 0.7305, norm(x): 1.1045, norm(y): 0.9900, norm:0.6228, tok/sec: 190048.84, flops:199.51, batch-reuse:1
@ 2751 train 4.1337 , allloss: 4.1337, dt: 702.67ms, fracRes: 0.4474, norm(attn): 0.9336, norm(output): 0.6992, norm(x): 1.0711, norm(y): 0.9903, norm:0.6900, tok/sec: 186534.45, flops:195.82, batch-reuse:1
@ 2752 train 4.0846 , allloss: 4.0846, dt: 699.79ms, fracRes: 0.4542, norm(attn): 0.9102, norm(output): 0.7031, norm(x): 1.0845, norm(y): 0.9907, norm:0.5331, tok/sec: 187303.12, flops:196.63, batch-reuse:1
@ 2753 train 4.0911 , allloss: 4.0911, dt: 695.99ms, fracRes: 0.4582, norm(attn): 0.8906, norm(output): 0.7148, norm(x): 1.0983, norm(y): 0.9909, norm:0.6003, tok/sec: 188325.55, flops:197.70, batch-reuse:1
@ 2754 train 4.0575 , allloss: 4.0575, dt: 704.38ms, fracRes: 0.4532, norm(attn): 0.9141, norm(output): 0.7109, norm(x): 1.0869, norm(y): 0.9904, norm:0.6029, tok/sec: 186082.69, flops:195.35, batch-reuse:1
@ 2755 train 4.0770 , allloss: 4.0770, dt: 704.77ms, fracRes: 0.4513, norm(attn): 0.9219, norm(output): 0.7070, norm(x): 1.0829, norm(y): 0.9914, norm:0.5662, tok/sec: 185979.07, flops:195.24, batch-reuse:1
@ 2756 train 4.0212 , allloss: 4.0212, dt: 694.76ms, fracRes: 0.4503, norm(attn): 0.9297, norm(output): 0.7148, norm(x): 1.0870, norm(y): 0.9908, norm:0.5430, tok/sec: 188658.97, flops:198.05, batch-reuse:1
@ 2757 train 4.0900 , allloss: 4.0900, dt: 690.25ms, fracRes: 0.4514, norm(attn): 0.9219, norm(output): 0.7031, norm(x): 1.0854, norm(y): 0.9918, norm:0.4889, tok/sec: 189891.63, flops:199.35, batch-reuse:1
@ 2758 train 4.0913 , allloss: 4.0913, dt: 691.97ms, fracRes: 0.4511, norm(attn): 0.8906, norm(output): 0.7031, norm(x): 1.0794, norm(y): 0.9909, norm:0.5460, tok/sec: 189418.33, flops:198.85, batch-reuse:1
@ 2759 train 4.0680 , allloss: 4.0680, dt: 700.39ms, fracRes: 0.4505, norm(attn): 0.8906, norm(output): 0.6992, norm(x): 1.0817, norm(y): 0.9907, norm:0.4968, tok/sec: 187141.10, flops:196.46, batch-reuse:1
@ 2760 train 4.0072 , allloss: 4.0072, dt: 702.58ms, fracRes: 0.4485, norm(attn): 0.8828, norm(output): 0.7031, norm(x): 1.0771, norm(y): 0.9906, norm:0.5195, tok/sec: 186558.88, flops:195.85, batch-reuse:1
@ 2761 train 4.1589 , allloss: 4.1589, dt: 697.26ms, fracRes: 0.4511, norm(attn): 0.8711, norm(output): 0.6953, norm(x): 1.0777, norm(y): 0.9908, norm:0.5182, tok/sec: 187981.88, flops:197.34, batch-reuse:1
@ 2762 train 4.1180 , allloss: 4.1180, dt: 689.45ms, fracRes: 0.4505, norm(attn): 0.8750, norm(output): 0.7070, norm(x): 1.0843, norm(y): 0.9911, norm:0.5476, tok/sec: 190112.33, flops:199.58, batch-reuse:1
@ 2763 train 4.0540 , allloss: 4.0540, dt: 711.59ms, fracRes: 0.4513, norm(attn): 0.8516, norm(output): 0.7188, norm(x): 1.0922, norm(y): 0.9903, norm:0.5648, tok/sec: 184195.57, flops:193.37, batch-reuse:1
@ 2764 train 4.0623 , allloss: 4.0623, dt: 711.97ms, fracRes: 0.4492, norm(attn): 0.8477, norm(output): 0.7031, norm(x): 1.0813, norm(y): 0.9911, norm:0.6083, tok/sec: 184097.25, flops:193.27, batch-reuse:1
@ 2765 train 4.1015 , allloss: 4.1015, dt: 713.62ms, fracRes: 0.4485, norm(attn): 0.8828, norm(output): 0.7070, norm(x): 1.0802, norm(y): 0.9907, norm:0.4925, tok/sec: 183670.89, flops:192.82, batch-reuse:1
@ 2766 train 4.0913 , allloss: 4.0913, dt: 695.00ms, fracRes: 0.4474, norm(attn): 0.9062, norm(output): 0.7031, norm(x): 1.0794, norm(y): 0.9918, norm:0.5197, tok/sec: 188592.63, flops:197.98, batch-reuse:1
@ 2767 train 4.0808 , allloss: 4.0808, dt: 705.12ms, fracRes: 0.4453, norm(attn): 0.9258, norm(output): 0.7031, norm(x): 1.0746, norm(y): 0.9915, norm:0.4714, tok/sec: 185885.25, flops:195.14, batch-reuse:1
@ 2768 train 4.0646 , allloss: 4.0646, dt: 703.73ms, fracRes: 0.4461, norm(attn): 0.9219, norm(output): 0.6992, norm(x): 1.0718, norm(y): 0.9907, norm:0.5246, tok/sec: 186253.16, flops:195.53, batch-reuse:1
@ 2769 train 4.0813 , allloss: 4.0813, dt: 709.12ms, fracRes: 0.4494, norm(attn): 0.9141, norm(output): 0.7070, norm(x): 1.0856, norm(y): 0.9906, norm:0.5085, tok/sec: 184838.53, flops:194.04, batch-reuse:1
@ 2770 train 4.0762 , allloss: 4.0762, dt: 711.88ms, fracRes: 0.4479, norm(attn): 0.9336, norm(output): 0.7070, norm(x): 1.0813, norm(y): 0.9911, norm:0.5580, tok/sec: 184120.62, flops:193.29, batch-reuse:1
@ 2771 train 4.1820 , allloss: 4.1820, dt: 706.03ms, fracRes: 0.4487, norm(attn): 0.9297, norm(output): 0.7070, norm(x): 1.0859, norm(y): 0.9918, norm:0.5370, tok/sec: 185647.28, flops:194.89, batch-reuse:1
@ 2772 train 4.0207 , allloss: 4.0207, dt: 701.32ms, fracRes: 0.4484, norm(attn): 0.9375, norm(output): 0.7031, norm(x): 1.0797, norm(y): 0.9911, norm:0.5877, tok/sec: 186892.80, flops:196.20, batch-reuse:1
@ 2773 train 4.0254 , allloss: 4.0254, dt: 700.52ms, fracRes: 0.4535, norm(attn): 0.9258, norm(output): 0.7109, norm(x): 1.0884, norm(y): 0.9906, norm:0.5438, tok/sec: 187107.79, flops:196.43, batch-reuse:1
@ 2774 train 3.9882 , allloss: 3.9882, dt: 706.32ms, fracRes: 0.4520, norm(attn): 0.9336, norm(output): 0.7031, norm(x): 1.0835, norm(y): 0.9911, norm:0.5122, tok/sec: 185569.77, flops:194.81, batch-reuse:1
@ 2775 train 4.1011 , allloss: 4.1011, dt: 698.74ms, fracRes: 0.4546, norm(attn): 0.9258, norm(output): 0.7031, norm(x): 1.0894, norm(y): 0.9919, norm:0.6197, tok/sec: 187584.39, flops:196.93, batch-reuse:1
@ 2776 train 4.2035 , allloss: 4.2035, dt: 709.25ms, fracRes: 0.4567, norm(attn): 0.9219, norm(output): 0.7148, norm(x): 1.1004, norm(y): 0.9916, norm:0.5409, tok/sec: 184803.55, flops:194.01, batch-reuse:1
@ 2777 train 4.0367 , allloss: 4.0367, dt: 711.51ms, fracRes: 0.4559, norm(attn): 0.9336, norm(output): 0.7227, norm(x): 1.1006, norm(y): 0.9908, norm:0.5493, tok/sec: 184215.57, flops:193.39, batch-reuse:1
@ 2778 train 4.1885 , allloss: 4.1885, dt: 685.45ms, fracRes: 0.4526, norm(attn): 0.9375, norm(output): 0.7109, norm(x): 1.0932, norm(y): 0.9920, norm:0.5481, tok/sec: 191220.94, flops:200.74, batch-reuse:1
@ 2779 train 4.0343 , allloss: 4.0343, dt: 700.04ms, fracRes: 0.4500, norm(attn): 0.9414, norm(output): 0.6992, norm(x): 1.0859, norm(y): 0.9908, norm:0.5126, tok/sec: 187234.22, flops:196.56, batch-reuse:1
@ 2780 train 3.9308 , allloss: 3.9308, dt: 697.74ms, fracRes: 0.4505, norm(attn): 0.9453, norm(output): 0.7031, norm(x): 1.0844, norm(y): 0.9907, norm:0.5095, tok/sec: 187851.93, flops:197.21, batch-reuse:1
@ 2781 train 3.9259 , allloss: 3.9259, dt: 697.00ms, fracRes: 0.4516, norm(attn): 0.9570, norm(output): 0.7070, norm(x): 1.0823, norm(y): 0.9905, norm:0.4725, tok/sec: 188050.74, flops:197.42, batch-reuse:1
@ 2782 train 4.0413 , allloss: 4.0413, dt: 687.77ms, fracRes: 0.4575, norm(attn): 0.9492, norm(output): 0.7070, norm(x): 1.0948, norm(y): 0.9907, norm:0.5019, tok/sec: 190574.91, flops:200.07, batch-reuse:1
@ 2783 train 4.0913 , allloss: 4.0913, dt: 690.52ms, fracRes: 0.4571, norm(attn): 0.9609, norm(output): 0.6992, norm(x): 1.0890, norm(y): 0.9911, norm:0.5988, tok/sec: 189816.03, flops:199.27, batch-reuse:1
@ 2784 train 4.1096 , allloss: 4.1096, dt: 693.04ms, fracRes: 0.4582, norm(attn): 0.9727, norm(output): 0.7070, norm(x): 1.0932, norm(y): 0.9920, norm:0.6001, tok/sec: 189125.74, flops:198.54, batch-reuse:1
@ 2785 train 4.2245 , allloss: 4.2245, dt: 701.72ms, fracRes: 0.4586, norm(attn): 0.9961, norm(output): 0.7148, norm(x): 1.0972, norm(y): 0.9915, norm:0.5862, tok/sec: 186786.05, flops:196.09, batch-reuse:1
@ 2786 train 4.1299 , allloss: 4.1299, dt: 707.69ms, fracRes: 0.4624, norm(attn): 0.9961, norm(output): 0.7188, norm(x): 1.1055, norm(y): 0.9913, norm:0.5914, tok/sec: 185209.92, flops:194.43, batch-reuse:1
@ 2787 train 4.2115 , allloss: 4.2115, dt: 697.34ms, fracRes: 0.4617, norm(attn): 0.9805, norm(output): 0.7148, norm(x): 1.0977, norm(y): 0.9922, norm:0.5776, tok/sec: 187959.70, flops:197.32, batch-reuse:1
@ 2788 train 4.2348 , allloss: 4.2348, dt: 696.48ms, fracRes: 0.4603, norm(attn): 0.9922, norm(output): 0.6992, norm(x): 1.0919, norm(y): 0.9924, norm:0.6427, tok/sec: 188192.30, flops:197.56, batch-reuse:1
@ 2789 train 4.2291 , allloss: 4.2291, dt: 699.89ms, fracRes: 0.4586, norm(attn): 1.0000, norm(output): 0.7109, norm(x): 1.0983, norm(y): 0.9920, norm:0.5494, tok/sec: 187275.62, flops:196.60, batch-reuse:1
@ 2790 train 4.2603 , allloss: 4.2603, dt: 708.50ms, fracRes: 0.4597, norm(attn): 0.9961, norm(output): 0.7266, norm(x): 1.1074, norm(y): 0.9912, norm:0.5091, tok/sec: 184998.38, flops:194.21, batch-reuse:1
@ 2791 train 4.1899 , allloss: 4.1899, dt: 712.80ms, fracRes: 0.4582, norm(attn): 0.9961, norm(output): 0.7109, norm(x): 1.0941, norm(y): 0.9910, norm:0.4967, tok/sec: 183882.78, flops:193.04, batch-reuse:1
@ 2792 train 4.8585 , allloss: 4.8585, dt: 710.66ms, fracRes: 0.4642, norm(attn): 1.0078, norm(output): 0.7148, norm(x): 1.1080, norm(y): 0.9931, norm:0.7128, tok/sec: 184436.02, flops:193.62, batch-reuse:1
@ 2793 train 4.2678 , allloss: 4.2678, dt: 709.18ms, fracRes: 0.4632, norm(attn): 1.0078, norm(output): 0.7109, norm(x): 1.1009, norm(y): 0.9930, norm:0.7907, tok/sec: 184822.13, flops:194.03, batch-reuse:1
@ 2794 train 4.1879 , allloss: 4.1879, dt: 714.94ms, fracRes: 0.4625, norm(attn): 1.0234, norm(output): 0.7148, norm(x): 1.1003, norm(y): 0.9921, norm:0.6666, tok/sec: 183331.75, flops:192.46, batch-reuse:1
@ 2795 train 4.1857 , allloss: 4.1857, dt: 709.89ms, fracRes: 0.4593, norm(attn): 1.0234, norm(output): 0.7070, norm(x): 1.0932, norm(y): 0.9916, norm:0.5509, tok/sec: 184637.83, flops:193.83, batch-reuse:1
@ 2796 train 4.3074 , allloss: 4.3074, dt: 711.52ms, fracRes: 0.4550, norm(attn): 1.0391, norm(output): 0.7070, norm(x): 1.0868, norm(y): 0.9914, norm:0.6339, tok/sec: 184214.58, flops:193.39, batch-reuse:1
@ 2797 train 4.1824 , allloss: 4.1824, dt: 711.72ms, fracRes: 0.4560, norm(attn): 1.0234, norm(output): 0.7109, norm(x): 1.0926, norm(y): 0.9920, norm:0.5668, tok/sec: 184163.55, flops:193.34, batch-reuse:1
@ 2798 train 4.2136 , allloss: 4.2136, dt: 707.56ms, fracRes: 0.4606, norm(attn): 1.0078, norm(output): 0.7266, norm(x): 1.1112, norm(y): 0.9925, norm:0.5714, tok/sec: 185244.36, flops:194.47, batch-reuse:1
@ 2799 train 4.1920 , allloss: 4.1920, dt: 709.33ms, fracRes: 0.4664, norm(attn): 0.9766, norm(output): 0.7188, norm(x): 1.1187, norm(y): 0.9921, norm:0.6053, tok/sec: 184783.86, flops:193.99, batch-reuse:1
@ 2800 train 4.3969 , allloss: 4.3969, dt: 707.41ms, fracRes: 0.4637, norm(attn): 0.9766, norm(output): 0.7188, norm(x): 1.1090, norm(y): 0.9924, norm:0.6585, tok/sec: 185283.20, flops:194.51, batch-reuse:1
@ 2801 train 4.2124 , allloss: 4.2124, dt: 702.19ms, fracRes: 0.4628, norm(attn): 0.9883, norm(output): 0.7148, norm(x): 1.1040, norm(y): 0.9906, norm:0.8248, tok/sec: 186660.74, flops:195.96, batch-reuse:1
@ 2802 train 4.2271 , allloss: 4.2271, dt: 702.13ms, fracRes: 0.4640, norm(attn): 0.9844, norm(output): 0.6992, norm(x): 1.0936, norm(y): 0.9910, norm:0.6311, tok/sec: 186677.34, flops:195.97, batch-reuse:1
@ 2803 train 4.1900 , allloss: 4.1900, dt: 703.42ms, fracRes: 0.4642, norm(attn): 0.9883, norm(output): 0.7070, norm(x): 1.0999, norm(y): 0.9914, norm:0.6035, tok/sec: 186334.85, flops:195.61, batch-reuse:1
@ 2804 train 4.2469 , allloss: 4.2469, dt: 697.57ms, fracRes: 0.4624, norm(attn): 0.9922, norm(output): 0.7148, norm(x): 1.1050, norm(y): 0.9914, norm:0.5928, tok/sec: 187897.52, flops:197.26, batch-reuse:1
@ 2805 train 4.0789 , allloss: 4.0789, dt: 709.29ms, fracRes: 0.4650, norm(attn): 1.0078, norm(output): 0.7266, norm(x): 1.1132, norm(y): 0.9916, norm:0.6943, tok/sec: 184792.12, flops:194.00, batch-reuse:1
@ 2806 train 4.1006 , allloss: 4.1006, dt: 710.99ms, fracRes: 0.4615, norm(attn): 1.0078, norm(output): 0.7227, norm(x): 1.1075, norm(y): 0.9919, norm:0.5985, tok/sec: 184350.67, flops:193.53, batch-reuse:1
@ 2807 train 4.4166 , allloss: 4.4166, dt: 693.04ms, fracRes: 0.4553, norm(attn): 1.0234, norm(output): 0.7070, norm(x): 1.0915, norm(y): 0.9925, norm:0.6023, tok/sec: 189125.68, flops:198.54, batch-reuse:1
@ 2808 train 4.1895 , allloss: 4.1895, dt: 695.85ms, fracRes: 0.4535, norm(attn): 1.0156, norm(output): 0.6992, norm(x): 1.0832, norm(y): 0.9919, norm:0.6759, tok/sec: 188361.43, flops:197.74, batch-reuse:1
@ 2809 train 4.1559 , allloss: 4.1559, dt: 698.42ms, fracRes: 0.4567, norm(attn): 1.0078, norm(output): 0.7070, norm(x): 1.0926, norm(y): 0.9922, norm:0.6009, tok/sec: 187668.66, flops:197.01, batch-reuse:1
@ 2810 train 4.1641 , allloss: 4.1641, dt: 700.93ms, fracRes: 0.4579, norm(attn): 1.0078, norm(output): 0.7070, norm(x): 1.0961, norm(y): 0.9913, norm:0.6651, tok/sec: 186997.56, flops:196.31, batch-reuse:1
@ 2811 train 4.2290 , allloss: 4.2290, dt: 696.20ms, fracRes: 0.4530, norm(attn): 1.0156, norm(output): 0.6953, norm(x): 1.0807, norm(y): 0.9915, norm:0.6186, tok/sec: 188266.61, flops:197.64, batch-reuse:1
@ 2812 train 4.2277 , allloss: 4.2277, dt: 692.29ms, fracRes: 0.4616, norm(attn): 1.0000, norm(output): 0.7109, norm(x): 1.1000, norm(y): 0.9914, norm:0.6151, tok/sec: 189331.30, flops:198.76, batch-reuse:1
@ 2813 train 4.2475 , allloss: 4.2475, dt: 702.09ms, fracRes: 0.4598, norm(attn): 1.0000, norm(output): 0.7109, norm(x): 1.1012, norm(y): 0.9915, norm:0.5743, tok/sec: 186689.64, flops:195.99, batch-reuse:1
@ 2814 train 4.2134 , allloss: 4.2134, dt: 698.25ms, fracRes: 0.4568, norm(attn): 1.0000, norm(output): 0.6992, norm(x): 1.0886, norm(y): 0.9921, norm:0.5449, tok/sec: 187715.88, flops:197.06, batch-reuse:1
@ 2815 train 4.2568 , allloss: 4.2568, dt: 697.31ms, fracRes: 0.4570, norm(attn): 1.0156, norm(output): 0.6992, norm(x): 1.0919, norm(y): 0.9934, norm:0.6842, tok/sec: 187968.38, flops:197.33, batch-reuse:1
@ 2816 train 4.1642 , allloss: 4.1642, dt: 685.78ms, fracRes: 0.4578, norm(attn): 1.0078, norm(output): 0.7148, norm(x): 1.1016, norm(y): 0.9916, norm:0.6855, tok/sec: 191129.13, flops:200.65, batch-reuse:1
@ 2817 train 4.2663 , allloss: 4.2663, dt: 698.08ms, fracRes: 0.4562, norm(attn): 1.0156, norm(output): 0.6992, norm(x): 1.0878, norm(y): 0.9923, norm:0.5271, tok/sec: 187760.06, flops:197.11, batch-reuse:1
@ 2818 train 4.2146 , allloss: 4.2146, dt: 685.35ms, fracRes: 0.4554, norm(attn): 1.0078, norm(output): 0.6992, norm(x): 1.0831, norm(y): 0.9916, norm:0.6281, tok/sec: 191249.48, flops:200.77, batch-reuse:1
@ 2819 train 4.2078 , allloss: 4.2078, dt: 694.54ms, fracRes: 0.4575, norm(attn): 1.0078, norm(output): 0.7070, norm(x): 1.0938, norm(y): 0.9916, norm:0.4897, tok/sec: 188716.48, flops:198.11, batch-reuse:1
@ 2820 train 4.2011 , allloss: 4.2011, dt: 694.66ms, fracRes: 0.4578, norm(attn): 1.0156, norm(output): 0.7188, norm(x): 1.1018, norm(y): 0.9923, norm:0.6203, tok/sec: 188684.03, flops:198.08, batch-reuse:1
@ 2821 train 4.1505 , allloss: 4.1505, dt: 697.08ms, fracRes: 0.4546, norm(attn): 1.0312, norm(output): 0.7031, norm(x): 1.0893, norm(y): 0.9917, norm:0.5515, tok/sec: 188029.13, flops:197.39, batch-reuse:1
@ 2822 train 4.1524 , allloss: 4.1524, dt: 697.10ms, fracRes: 0.4527, norm(attn): 1.0391, norm(output): 0.7031, norm(x): 1.0855, norm(y): 0.9917, norm:0.5129, tok/sec: 188024.76, flops:197.39, batch-reuse:1
@ 2823 train 4.2136 , allloss: 4.2136, dt: 701.77ms, fracRes: 0.4538, norm(attn): 1.0469, norm(output): 0.7031, norm(x): 1.0912, norm(y): 0.9924, norm:0.5084, tok/sec: 186774.57, flops:196.08, batch-reuse:1
@ 2824 train 4.1369 , allloss: 4.1369, dt: 699.86ms, fracRes: 0.4547, norm(attn): 1.0469, norm(output): 0.7227, norm(x): 1.0978, norm(y): 0.9916, norm:0.4809, tok/sec: 187284.36, flops:196.61, batch-reuse:1
@ 2825 train 4.1821 , allloss: 4.1821, dt: 697.30ms, fracRes: 0.4545, norm(attn): 1.0312, norm(output): 0.7188, norm(x): 1.0902, norm(y): 0.9918, norm:0.5138, tok/sec: 187970.18, flops:197.33, batch-reuse:1
@ 2826 train 4.2280 , allloss: 4.2280, dt: 699.38ms, fracRes: 0.4527, norm(attn): 1.0391, norm(output): 0.7070, norm(x): 1.0867, norm(y): 0.9915, norm:0.5042, tok/sec: 187410.77, flops:196.74, batch-reuse:1
@ 2827 train 4.2494 , allloss: 4.2494, dt: 694.67ms, fracRes: 0.4583, norm(attn): 1.0312, norm(output): 0.7109, norm(x): 1.0957, norm(y): 0.9921, norm:0.5582, tok/sec: 188683.38, flops:198.08, batch-reuse:1
@ 2828 train 4.2108 , allloss: 4.2108, dt: 700.90ms, fracRes: 0.4624, norm(attn): 1.0312, norm(output): 0.7227, norm(x): 1.1041, norm(y): 0.9917, norm:0.5955, tok/sec: 187004.94, flops:196.32, batch-reuse:1
@ 2829 train 4.1921 , allloss: 4.1921, dt: 694.58ms, fracRes: 0.4594, norm(attn): 1.0312, norm(output): 0.7109, norm(x): 1.0964, norm(y): 0.9925, norm:0.4852, tok/sec: 188705.92, flops:198.10, batch-reuse:1
@ 2830 train 4.2249 , allloss: 4.2249, dt: 697.42ms, fracRes: 0.4636, norm(attn): 1.0156, norm(output): 0.7266, norm(x): 1.1179, norm(y): 0.9912, norm:0.6677, tok/sec: 187937.34, flops:197.30, batch-reuse:1
@ 2831 train 4.2462 , allloss: 4.2462, dt: 694.57ms, fracRes: 0.4595, norm(attn): 1.0156, norm(output): 0.7188, norm(x): 1.0992, norm(y): 0.9920, norm:0.5033, tok/sec: 188709.16, flops:198.11, batch-reuse:1
@ 2832 train 4.1598 , allloss: 4.1598, dt: 692.95ms, fracRes: 0.4580, norm(attn): 1.0156, norm(output): 0.7070, norm(x): 1.0862, norm(y): 0.9914, norm:0.4854, tok/sec: 189149.95, flops:198.57, batch-reuse:1
@ 2833 train 4.2371 , allloss: 4.2371, dt: 696.17ms, fracRes: 0.4538, norm(attn): 1.0547, norm(output): 0.7031, norm(x): 1.0823, norm(y): 0.9916, norm:0.5774, tok/sec: 188275.83, flops:197.65, batch-reuse:1
@ 2834 train 4.2500 , allloss: 4.2500, dt: 696.34ms, fracRes: 0.4628, norm(attn): 1.0391, norm(output): 0.7109, norm(x): 1.0985, norm(y): 0.9921, norm:0.5741, tok/sec: 188231.15, flops:197.61, batch-reuse:1
@ 2835 train 4.2225 , allloss: 4.2225, dt: 686.87ms, fracRes: 0.4645, norm(attn): 1.0391, norm(output): 0.7227, norm(x): 1.1132, norm(y): 0.9928, norm:0.6428, tok/sec: 190823.69, flops:200.33, batch-reuse:1
@ 2836 train 4.2078 , allloss: 4.2078, dt: 698.32ms, fracRes: 0.4622, norm(attn): 1.0547, norm(output): 0.7148, norm(x): 1.0989, norm(y): 0.9931, norm:0.6668, tok/sec: 187695.76, flops:197.04, batch-reuse:1
@ 2837 train 4.2976 , allloss: 4.2976, dt: 697.11ms, fracRes: 0.4606, norm(attn): 1.0312, norm(output): 0.7070, norm(x): 1.0957, norm(y): 0.9916, norm:0.5553, tok/sec: 188020.96, flops:197.38, batch-reuse:1
@ 2838 train 4.4018 , allloss: 4.4018, dt: 716.25ms, fracRes: 0.4619, norm(attn): 1.0391, norm(output): 0.7031, norm(x): 1.0975, norm(y): 0.9920, norm:0.6130, tok/sec: 182997.63, flops:192.11, batch-reuse:1
@ 2839 train 4.1537 , allloss: 4.1537, dt: 693.73ms, fracRes: 0.4616, norm(attn): 1.0625, norm(output): 0.7109, norm(x): 1.0992, norm(y): 0.9921, norm:0.6147, tok/sec: 188938.48, flops:198.35, batch-reuse:1
@ 2840 train 4.2097 , allloss: 4.2097, dt: 692.87ms, fracRes: 0.4614, norm(attn): 1.0547, norm(output): 0.7109, norm(x): 1.1032, norm(y): 0.9928, norm:0.6264, tok/sec: 189172.92, flops:198.59, batch-reuse:1
@ 2841 train 4.1982 , allloss: 4.1982, dt: 693.57ms, fracRes: 0.4587, norm(attn): 1.0547, norm(output): 0.7070, norm(x): 1.0968, norm(y): 0.9924, norm:0.5034, tok/sec: 188982.52, flops:198.39, batch-reuse:1
@ 2842 train 4.2231 , allloss: 4.2231, dt: 699.81ms, fracRes: 0.4525, norm(attn): 1.0625, norm(output): 0.7109, norm(x): 1.0887, norm(y): 0.9921, norm:0.5281, tok/sec: 187296.16, flops:196.62, batch-reuse:1
@ 2843 train 4.1587 , allloss: 4.1587, dt: 700.86ms, fracRes: 0.4513, norm(attn): 1.0625, norm(output): 0.6953, norm(x): 1.0787, norm(y): 0.9913, norm:0.5520, tok/sec: 187014.93, flops:196.33, batch-reuse:1
@ 2844 train 4.1411 , allloss: 4.1411, dt: 691.37ms, fracRes: 0.4534, norm(attn): 1.0547, norm(output): 0.6992, norm(x): 1.0827, norm(y): 0.9913, norm:0.4794, tok/sec: 189583.13, flops:199.02, batch-reuse:1
@ 2845 train 4.1715 , allloss: 4.1715, dt: 693.85ms, fracRes: 0.4557, norm(attn): 1.0469, norm(output): 0.7148, norm(x): 1.0971, norm(y): 0.9913, norm:0.5624, tok/sec: 188906.28, flops:198.31, batch-reuse:1
@ 2846 train 4.2065 , allloss: 4.2065, dt: 705.25ms, fracRes: 0.4584, norm(attn): 1.0469, norm(output): 0.7188, norm(x): 1.1026, norm(y): 0.9923, norm:0.5188, tok/sec: 185852.70, flops:195.11, batch-reuse:1
@ 2847 train 4.1910 , allloss: 4.1910, dt: 700.75ms, fracRes: 0.4545, norm(attn): 1.0469, norm(output): 0.7109, norm(x): 1.0925, norm(y): 0.9917, norm:0.5224, tok/sec: 187044.20, flops:196.36, batch-reuse:1
@ 2848 train 4.2320 , allloss: 4.2320, dt: 691.82ms, fracRes: 0.4506, norm(attn): 1.0625, norm(output): 0.6992, norm(x): 1.0774, norm(y): 0.9920, norm:0.5082, tok/sec: 189458.47, flops:198.89, batch-reuse:1
@ 2849 train 4.1894 , allloss: 4.1894, dt: 699.60ms, fracRes: 0.4572, norm(attn): 1.0469, norm(output): 0.6953, norm(x): 1.0852, norm(y): 0.9916, norm:0.4654, tok/sec: 187352.78, flops:196.68, batch-reuse:1
@ 2850 train 4.1314 , allloss: 4.1314, dt: 694.47ms, fracRes: 0.4542, norm(attn): 1.0625, norm(output): 0.6953, norm(x): 1.0765, norm(y): 0.9907, norm:0.5779, tok/sec: 188736.17, flops:198.14, batch-reuse:1
@ 2851 train 4.1154 , allloss: 4.1154, dt: 697.44ms, fracRes: 0.4617, norm(attn): 1.0391, norm(output): 0.7070, norm(x): 1.1009, norm(y): 0.9919, norm:0.4755, tok/sec: 187932.84, flops:197.29, batch-reuse:1
@ 2852 train 4.1335 , allloss: 4.1335, dt: 698.75ms, fracRes: 0.4578, norm(attn): 1.0156, norm(output): 0.7070, norm(x): 1.0982, norm(y): 0.9918, norm:0.5535, tok/sec: 187580.74, flops:196.92, batch-reuse:1
@ 2853 train 4.1862 , allloss: 4.1862, dt: 699.16ms, fracRes: 0.4594, norm(attn): 1.0312, norm(output): 0.7109, norm(x): 1.1024, norm(y): 0.9922, norm:0.5287, tok/sec: 187470.91, flops:196.81, batch-reuse:1
@ 2854 train 4.1616 , allloss: 4.1616, dt: 703.19ms, fracRes: 0.4564, norm(attn): 1.0234, norm(output): 0.7266, norm(x): 1.1094, norm(y): 0.9913, norm:0.5990, tok/sec: 186397.08, flops:195.68, batch-reuse:1
@ 2855 train 4.1548 , allloss: 4.1548, dt: 695.25ms, fracRes: 0.4543, norm(attn): 1.0469, norm(output): 0.7031, norm(x): 1.0855, norm(y): 0.9908, norm:0.5874, tok/sec: 188524.14, flops:197.91, batch-reuse:1
@ 2856 train 4.1729 , allloss: 4.1729, dt: 693.05ms, fracRes: 0.4576, norm(attn): 1.0547, norm(output): 0.7109, norm(x): 1.0953, norm(y): 0.9912, norm:0.5428, tok/sec: 189124.51, flops:198.54, batch-reuse:1
@ 2857 train 4.1283 , allloss: 4.1283, dt: 696.80ms, fracRes: 0.4573, norm(attn): 1.0312, norm(output): 0.7109, norm(x): 1.0930, norm(y): 0.9913, norm:0.5648, tok/sec: 188106.21, flops:197.47, batch-reuse:1
@ 2858 train 4.1005 , allloss: 4.1005, dt: 702.16ms, fracRes: 0.4576, norm(attn): 1.0469, norm(output): 0.7031, norm(x): 1.0897, norm(y): 0.9909, norm:0.5085, tok/sec: 186669.04, flops:195.97, batch-reuse:1
@ 2859 train 4.0971 , allloss: 4.0971, dt: 698.12ms, fracRes: 0.4588, norm(attn): 1.0234, norm(output): 0.7031, norm(x): 1.0880, norm(y): 0.9915, norm:1.0662, tok/sec: 187748.96, flops:197.10, batch-reuse:1
@ 2860 train 4.2382 , allloss: 4.2382, dt: 687.39ms, fracRes: 0.4604, norm(attn): 1.0625, norm(output): 0.6992, norm(x): 1.0945, norm(y): 0.9921, norm:0.8685, tok/sec: 190680.53, flops:200.18, batch-reuse:1
@ 2861 train 4.3754 , allloss: 4.3754, dt: 693.42ms, fracRes: 0.4589, norm(attn): 1.0625, norm(output): 0.6953, norm(x): 1.0927, norm(y): 0.9953, norm:0.6534, tok/sec: 189022.67, flops:198.44, batch-reuse:1
@ 2862 train 4.2813 , allloss: 4.2813, dt: 698.65ms, fracRes: 0.4597, norm(attn): 1.0547, norm(output): 0.7070, norm(x): 1.0933, norm(y): 0.9924, norm:1.0386, tok/sec: 187606.47, flops:196.95, batch-reuse:1
@ 2863 train 4.2825 , allloss: 4.2825, dt: 679.17ms, fracRes: 0.4600, norm(attn): 1.0234, norm(output): 0.6992, norm(x): 1.0912, norm(y): 0.9914, norm:0.9894, tok/sec: 192989.61, flops:202.60, batch-reuse:1
@ 2864 train 4.0991 , allloss: 4.0991, dt: 692.17ms, fracRes: 0.4619, norm(attn): 1.0391, norm(output): 0.6953, norm(x): 1.0890, norm(y): 0.9913, norm:0.7189, tok/sec: 189363.52, flops:198.79, batch-reuse:1
@ 2865 train 4.1911 , allloss: 4.1911, dt: 687.87ms, fracRes: 0.4617, norm(attn): 1.0469, norm(output): 0.6992, norm(x): 1.0934, norm(y): 0.9927, norm:0.6157, tok/sec: 190547.43, flops:200.04, batch-reuse:1
@ 2866 train 4.2716 , allloss: 4.2716, dt: 691.32ms, fracRes: 0.4615, norm(attn): 1.0547, norm(output): 0.6953, norm(x): 1.0890, norm(y): 0.9930, norm:0.6430, tok/sec: 189596.27, flops:199.04, batch-reuse:1
@ 2867 train 4.2292 , allloss: 4.2292, dt: 681.48ms, fracRes: 0.4618, norm(attn): 1.0625, norm(output): 0.6914, norm(x): 1.0878, norm(y): 0.9935, norm:0.6293, tok/sec: 192333.61, flops:201.91, batch-reuse:1
@ 2868 train 4.2927 , allloss: 4.2927, dt: 716.68ms, fracRes: 0.4634, norm(attn): 1.0625, norm(output): 0.7031, norm(x): 1.0981, norm(y): 0.9930, norm:0.5752, tok/sec: 182887.38, flops:192.00, batch-reuse:1
@ 2869 train 4.1499 , allloss: 4.1499, dt: 702.96ms, fracRes: 0.4643, norm(attn): 1.0625, norm(output): 0.7070, norm(x): 1.1047, norm(y): 0.9930, norm:0.6190, tok/sec: 186457.64, flops:195.74, batch-reuse:1
@ 2870 train 4.2529 , allloss: 4.2529, dt: 694.50ms, fracRes: 0.4622, norm(attn): 1.0859, norm(output): 0.7031, norm(x): 1.0963, norm(y): 0.9921, norm:0.5396, tok/sec: 188729.04, flops:198.13, batch-reuse:1
@ 2871 train 4.1269 , allloss: 4.1269, dt: 708.41ms, fracRes: 0.4620, norm(attn): 1.0938, norm(output): 0.7031, norm(x): 1.0966, norm(y): 0.9919, norm:0.5591, tok/sec: 185021.98, flops:194.24, batch-reuse:1
@ 2872 train 4.2148 , allloss: 4.2148, dt: 709.32ms, fracRes: 0.4585, norm(attn): 1.1172, norm(output): 0.7188, norm(x): 1.0968, norm(y): 0.9923, norm:0.5038, tok/sec: 184784.23, flops:193.99, batch-reuse:1
@ 2873 train 4.2519 , allloss: 4.2519, dt: 706.65ms, fracRes: 0.4611, norm(attn): 1.1172, norm(output): 0.7109, norm(x): 1.1074, norm(y): 0.9929, norm:0.7141, tok/sec: 185482.93, flops:194.72, batch-reuse:1
@ 2874 train 4.1629 , allloss: 4.1629, dt: 691.01ms, fracRes: 0.4548, norm(attn): 1.1250, norm(output): 0.7070, norm(x): 1.0909, norm(y): 0.9914, norm:0.5402, tok/sec: 189681.51, flops:199.13, batch-reuse:1
@ 2875 train 4.3355 , allloss: 4.3355, dt: 700.56ms, fracRes: 0.4538, norm(attn): 1.1328, norm(output): 0.7031, norm(x): 1.0866, norm(y): 0.9930, norm:0.5555, tok/sec: 187095.76, flops:196.41, batch-reuse:1
@ 2876 train 4.1861 , allloss: 4.1861, dt: 696.88ms, fracRes: 0.4560, norm(attn): 1.1328, norm(output): 0.7070, norm(x): 1.0934, norm(y): 0.9921, norm:0.5930, tok/sec: 188083.30, flops:197.45, batch-reuse:1
@ 2877 train 4.2482 , allloss: 4.2482, dt: 699.54ms, fracRes: 0.4596, norm(attn): 1.1250, norm(output): 0.7070, norm(x): 1.0984, norm(y): 0.9921, norm:0.5415, tok/sec: 187367.98, flops:196.70, batch-reuse:1
@ 2878 train 4.1918 , allloss: 4.1918, dt: 712.00ms, fracRes: 0.4601, norm(attn): 1.1172, norm(output): 0.6992, norm(x): 1.0902, norm(y): 0.9927, norm:0.5365, tok/sec: 184089.79, flops:193.26, batch-reuse:1
@ 2879 train 4.1532 , allloss: 4.1532, dt: 713.83ms, fracRes: 0.4590, norm(attn): 1.1172, norm(output): 0.6992, norm(x): 1.0913, norm(y): 0.9918, norm:0.5423, tok/sec: 183617.77, flops:192.76, batch-reuse:1
@ 2880 train 4.1856 , allloss: 4.1856, dt: 694.35ms, fracRes: 0.4607, norm(attn): 1.1250, norm(output): 0.7031, norm(x): 1.0932, norm(y): 0.9923, norm:0.4912, tok/sec: 188768.70, flops:198.17, batch-reuse:1
@ 2881 train 4.1796 , allloss: 4.1796, dt: 707.83ms, fracRes: 0.4605, norm(attn): 1.1250, norm(output): 0.7031, norm(x): 1.0899, norm(y): 0.9929, norm:0.4527, tok/sec: 185175.42, flops:194.40, batch-reuse:1
@ 2882 train 4.1636 , allloss: 4.1636, dt: 706.34ms, fracRes: 0.4585, norm(attn): 1.1328, norm(output): 0.7070, norm(x): 1.0874, norm(y): 0.9922, norm:0.4892, tok/sec: 185565.95, flops:194.81, batch-reuse:1
@ 2883 train 4.2032 , allloss: 4.2032, dt: 691.43ms, fracRes: 0.4584, norm(attn): 1.1172, norm(output): 0.7109, norm(x): 1.0928, norm(y): 0.9920, norm:0.4256, tok/sec: 189566.66, flops:199.01, batch-reuse:1
@ 2884 train 4.0637 , allloss: 4.0637, dt: 699.28ms, fracRes: 0.4576, norm(attn): 1.1172, norm(output): 0.7031, norm(x): 1.0857, norm(y): 0.9913, norm:0.5331, tok/sec: 187438.63, flops:196.77, batch-reuse:1
@ 2885 train 4.0737 , allloss: 4.0737, dt: 701.03ms, fracRes: 0.4546, norm(attn): 1.1250, norm(output): 0.6953, norm(x): 1.0773, norm(y): 0.9914, norm:0.4574, tok/sec: 186969.77, flops:196.28, batch-reuse:1
@ 2886 train 4.1077 , allloss: 4.1077, dt: 701.13ms, fracRes: 0.4521, norm(attn): 1.1094, norm(output): 0.6992, norm(x): 1.0797, norm(y): 0.9905, norm:0.4651, tok/sec: 186942.94, flops:196.25, batch-reuse:1
@ 2887 train 4.0759 , allloss: 4.0759, dt: 693.19ms, fracRes: 0.4629, norm(attn): 1.0859, norm(output): 0.7148, norm(x): 1.1030, norm(y): 0.9909, norm:0.4815, tok/sec: 189085.67, flops:198.50, batch-reuse:1
@ 2888 train 4.1027 , allloss: 4.1027, dt: 682.50ms, fracRes: 0.4605, norm(attn): 1.0859, norm(output): 0.7070, norm(x): 1.0910, norm(y): 0.9921, norm:0.4341, tok/sec: 192047.66, flops:201.61, batch-reuse:1
@ 2889 train 4.1150 , allloss: 4.1150, dt: 686.79ms, fracRes: 0.4582, norm(attn): 1.0625, norm(output): 0.7031, norm(x): 1.0901, norm(y): 0.9913, norm:0.4274, tok/sec: 190847.54, flops:200.35, batch-reuse:1
@ 2890 train 4.1592 , allloss: 4.1592, dt: 692.23ms, fracRes: 0.4625, norm(attn): 1.0625, norm(output): 0.7109, norm(x): 1.0973, norm(y): 0.9925, norm:0.4762, tok/sec: 189346.43, flops:198.78, batch-reuse:1
@ 2891 train 4.1462 , allloss: 4.1462, dt: 697.59ms, fracRes: 0.4595, norm(attn): 1.0469, norm(output): 0.6992, norm(x): 1.0880, norm(y): 0.9911, norm:0.4701, tok/sec: 187892.76, flops:197.25, batch-reuse:1
@ 2892 train 4.0970 , allloss: 4.0970, dt: 699.70ms, fracRes: 0.4594, norm(attn): 1.0391, norm(output): 0.7031, norm(x): 1.0931, norm(y): 0.9914, norm:0.4340, tok/sec: 187326.86, flops:196.66, batch-reuse:1
@ 2893 train 4.0583 , allloss: 4.0583, dt: 691.87ms, fracRes: 0.4636, norm(attn): 1.0312, norm(output): 0.6992, norm(x): 1.0974, norm(y): 0.9915, norm:0.4777, tok/sec: 189445.15, flops:198.88, batch-reuse:1
@ 2894 train 4.0844 , allloss: 4.0844, dt: 692.82ms, fracRes: 0.4642, norm(attn): 1.0234, norm(output): 0.6992, norm(x): 1.0955, norm(y): 0.9916, norm:0.5305, tok/sec: 189185.36, flops:198.61, batch-reuse:1
@ 2895 train 4.2112 , allloss: 4.2112, dt: 702.06ms, fracRes: 0.4627, norm(attn): 1.0156, norm(output): 0.7109, norm(x): 1.1035, norm(y): 0.9921, norm:0.5067, tok/sec: 186696.30, flops:195.99, batch-reuse:1
@ 2896 train 4.1925 , allloss: 4.1925, dt: 707.09ms, fracRes: 0.4618, norm(attn): 0.9961, norm(output): 0.7070, norm(x): 1.1012, norm(y): 0.9919, norm:0.5701, tok/sec: 185369.10, flops:194.60, batch-reuse:1
@ 2897 train 4.1141 , allloss: 4.1141, dt: 709.50ms, fracRes: 0.4593, norm(attn): 1.0000, norm(output): 0.7109, norm(x): 1.0970, norm(y): 0.9914, norm:0.5237, tok/sec: 184738.59, flops:193.94, batch-reuse:1
@ 2898 train 4.1267 , allloss: 4.1267, dt: 703.70ms, fracRes: 0.4586, norm(attn): 0.9805, norm(output): 0.7070, norm(x): 1.0960, norm(y): 0.9911, norm:0.4634, tok/sec: 186259.91, flops:195.54, batch-reuse:1
@ 2899 train 4.1436 , allloss: 4.1436, dt: 701.32ms, fracRes: 0.4562, norm(attn): 0.9922, norm(output): 0.6992, norm(x): 1.0863, norm(y): 0.9912, norm:0.5204, tok/sec: 186892.86, flops:196.20, batch-reuse:1
@ 2900 train 4.1532 , allloss: 4.1532, dt: 695.41ms, fracRes: 0.4624, norm(attn): 0.9766, norm(output): 0.7109, norm(x): 1.1010, norm(y): 0.9916, norm:0.4889, tok/sec: 188480.32, flops:197.87, batch-reuse:1
@ 2901 train 4.1063 , allloss: 4.1063, dt: 697.98ms, fracRes: 0.4628, norm(attn): 0.9727, norm(output): 0.7031, norm(x): 1.0906, norm(y): 0.9920, norm:0.5012, tok/sec: 187788.08, flops:197.14, batch-reuse:1
@ 2902 train 4.1509 , allloss: 4.1509, dt: 692.24ms, fracRes: 0.4626, norm(attn): 0.9766, norm(output): 0.6953, norm(x): 1.0920, norm(y): 0.9916, norm:0.4862, tok/sec: 189344.54, flops:198.77, batch-reuse:1
@ 2903 train 4.2399 , allloss: 4.2399, dt: 708.20ms, fracRes: 0.4686, norm(attn): 0.9492, norm(output): 0.7109, norm(x): 1.1108, norm(y): 0.9916, norm:0.5547, tok/sec: 185078.66, flops:194.30, batch-reuse:1
@ 2904 train 4.1402 , allloss: 4.1402, dt: 696.75ms, fracRes: 0.4698, norm(attn): 0.9414, norm(output): 0.7070, norm(x): 1.1136, norm(y): 0.9928, norm:0.5865, tok/sec: 188118.24, flops:197.49, batch-reuse:1
@ 2905 train 4.2962 , allloss: 4.2962, dt: 697.52ms, fracRes: 0.4701, norm(attn): 0.9219, norm(output): 0.7266, norm(x): 1.1236, norm(y): 0.9918, norm:0.6805, tok/sec: 187911.13, flops:197.27, batch-reuse:1
@ 2906 train 4.0972 , allloss: 4.0972, dt: 699.39ms, fracRes: 0.4634, norm(attn): 0.9336, norm(output): 0.7148, norm(x): 1.1019, norm(y): 0.9919, norm:0.5846, tok/sec: 187408.09, flops:196.74, batch-reuse:1
@ 2907 train 4.1813 , allloss: 4.1813, dt: 700.68ms, fracRes: 0.4625, norm(attn): 0.9336, norm(output): 0.6992, norm(x): 1.0922, norm(y): 0.9909, norm:0.6483, tok/sec: 187064.44, flops:196.38, batch-reuse:1
@ 2908 train 4.1190 , allloss: 4.1190, dt: 699.66ms, fracRes: 0.4611, norm(attn): 0.9375, norm(output): 0.6914, norm(x): 1.0845, norm(y): 0.9912, norm:0.6226, tok/sec: 187337.97, flops:196.67, batch-reuse:1
@ 2909 train 4.1025 , allloss: 4.1025, dt: 694.99ms, fracRes: 0.4689, norm(attn): 0.9297, norm(output): 0.7070, norm(x): 1.1069, norm(y): 0.9917, norm:0.6422, tok/sec: 188595.67, flops:197.99, batch-reuse:1
@ 2910 train 4.1098 , allloss: 4.1098, dt: 693.13ms, fracRes: 0.4606, norm(attn): 0.9336, norm(output): 0.6992, norm(x): 1.0906, norm(y): 0.9910, norm:0.6492, tok/sec: 189100.63, flops:198.52, batch-reuse:1
@ 2911 train 4.1695 , allloss: 4.1695, dt: 699.03ms, fracRes: 0.4650, norm(attn): 0.9336, norm(output): 0.6992, norm(x): 1.0978, norm(y): 0.9922, norm:0.5421, tok/sec: 187506.33, flops:196.84, batch-reuse:1
@ 2912 train 4.1703 , allloss: 4.1703, dt: 701.06ms, fracRes: 0.4650, norm(attn): 0.9219, norm(output): 0.7148, norm(x): 1.1060, norm(y): 0.9914, norm:0.6011, tok/sec: 186962.01, flops:196.27, batch-reuse:1
@ 2913 train 4.1414 , allloss: 4.1414, dt: 698.82ms, fracRes: 0.4601, norm(attn): 0.9297, norm(output): 0.6992, norm(x): 1.0874, norm(y): 0.9916, norm:0.5243, tok/sec: 187562.05, flops:196.90, batch-reuse:1
@ 2914 train 4.0556 , allloss: 4.0556, dt: 697.77ms, fracRes: 0.4615, norm(attn): 0.9297, norm(output): 0.6914, norm(x): 1.0849, norm(y): 0.9913, norm:0.6117, tok/sec: 187845.19, flops:197.20, batch-reuse:1
@ 2915 train 4.0749 , allloss: 4.0749, dt: 698.14ms, fracRes: 0.4644, norm(attn): 0.9297, norm(output): 0.6992, norm(x): 1.0953, norm(y): 0.9917, norm:0.5084, tok/sec: 187743.39, flops:197.09, batch-reuse:1
@ 2916 train 4.0324 , allloss: 4.0324, dt: 697.48ms, fracRes: 0.4677, norm(attn): 0.9258, norm(output): 0.7031, norm(x): 1.1038, norm(y): 0.9911, norm:0.6128, tok/sec: 187922.44, flops:197.28, batch-reuse:1
@ 2917 train 4.0966 , allloss: 4.0966, dt: 701.46ms, fracRes: 0.4676, norm(attn): 0.9297, norm(output): 0.6992, norm(x): 1.1031, norm(y): 0.9920, norm:0.5405, tok/sec: 186856.72, flops:196.16, batch-reuse:1
@ 2918 train 4.1876 , allloss: 4.1876, dt: 699.45ms, fracRes: 0.4679, norm(attn): 0.9336, norm(output): 0.7031, norm(x): 1.1026, norm(y): 0.9921, norm:0.5658, tok/sec: 187391.73, flops:196.72, batch-reuse:1
@ 2919 train 4.0778 , allloss: 4.0778, dt: 696.77ms, fracRes: 0.4637, norm(attn): 0.9219, norm(output): 0.7031, norm(x): 1.0952, norm(y): 0.9916, norm:0.5555, tok/sec: 188113.61, flops:197.48, batch-reuse:1
@ 2920 train 4.2046 , allloss: 4.2046, dt: 696.77ms, fracRes: 0.4657, norm(attn): 0.9219, norm(output): 0.7031, norm(x): 1.0996, norm(y): 0.9924, norm:0.5647, tok/sec: 188113.99, flops:197.48, batch-reuse:1
@ 2921 train 4.1384 , allloss: 4.1384, dt: 688.47ms, fracRes: 0.4614, norm(attn): 0.9180, norm(output): 0.7070, norm(x): 1.0959, norm(y): 0.9915, norm:0.4903, tok/sec: 190380.74, flops:199.86, batch-reuse:1
@ 2922 train 4.0935 , allloss: 4.0935, dt: 691.53ms, fracRes: 0.4610, norm(attn): 0.9180, norm(output): 0.7031, norm(x): 1.0964, norm(y): 0.9920, norm:0.4684, tok/sec: 189538.29, flops:198.98, batch-reuse:1
@ 2923 train 4.0530 , allloss: 4.0530, dt: 693.52ms, fracRes: 0.4621, norm(attn): 0.9180, norm(output): 0.7070, norm(x): 1.0994, norm(y): 0.9914, norm:0.4889, tok/sec: 188996.55, flops:198.41, batch-reuse:1
@ 2924 train 4.1616 , allloss: 4.1616, dt: 690.06ms, fracRes: 0.4635, norm(attn): 0.9102, norm(output): 0.7070, norm(x): 1.0998, norm(y): 0.9912, norm:0.5051, tok/sec: 189942.34, flops:199.40, batch-reuse:1
@ 2925 train 4.2610 , allloss: 4.2610, dt: 698.01ms, fracRes: 0.4651, norm(attn): 0.9062, norm(output): 0.7109, norm(x): 1.1109, norm(y): 0.9921, norm:0.5131, tok/sec: 187778.46, flops:197.13, batch-reuse:1
@ 2926 train 4.1102 , allloss: 4.1102, dt: 694.61ms, fracRes: 0.4644, norm(attn): 0.9102, norm(output): 0.7031, norm(x): 1.0978, norm(y): 0.9923, norm:0.5190, tok/sec: 188699.12, flops:198.10, batch-reuse:1
@ 2927 train 4.0181 , allloss: 4.0181, dt: 693.28ms, fracRes: 0.4654, norm(attn): 0.8984, norm(output): 0.7070, norm(x): 1.1034, norm(y): 0.9918, norm:0.5377, tok/sec: 189061.16, flops:198.48, batch-reuse:1
@ 2928 train 4.0985 , allloss: 4.0985, dt: 697.59ms, fracRes: 0.4630, norm(attn): 0.9102, norm(output): 0.6953, norm(x): 1.0904, norm(y): 0.9918, norm:0.5379, tok/sec: 187891.35, flops:197.25, batch-reuse:1
@ 2929 train 4.0882 , allloss: 4.0882, dt: 696.91ms, fracRes: 0.4625, norm(attn): 0.9219, norm(output): 0.6953, norm(x): 1.0853, norm(y): 0.9920, norm:0.5324, tok/sec: 188076.15, flops:197.44, batch-reuse:1
@ 2930 train 4.0264 , allloss: 4.0264, dt: 692.52ms, fracRes: 0.4613, norm(attn): 0.9258, norm(output): 0.6914, norm(x): 1.0885, norm(y): 0.9908, norm:0.5168, tok/sec: 189268.86, flops:198.69, batch-reuse:1
@ 2931 train 4.0042 , allloss: 4.0042, dt: 697.24ms, fracRes: 0.4660, norm(attn): 0.8906, norm(output): 0.7070, norm(x): 1.0992, norm(y): 0.9909, norm:0.5323, tok/sec: 187986.44, flops:197.35, batch-reuse:1
@ 2932 train 3.9232 , allloss: 3.9232, dt: 697.59ms, fracRes: 0.4590, norm(attn): 0.9062, norm(output): 0.6953, norm(x): 1.0877, norm(y): 0.9913, norm:0.4778, tok/sec: 187892.12, flops:197.25, batch-reuse:1
@ 2933 train 4.0674 , allloss: 4.0674, dt: 702.27ms, fracRes: 0.4617, norm(attn): 0.9062, norm(output): 0.7031, norm(x): 1.0967, norm(y): 0.9920, norm:0.5354, tok/sec: 186639.44, flops:195.93, batch-reuse:1
@ 2934 train 4.0983 , allloss: 4.0983, dt: 698.48ms, fracRes: 0.4622, norm(attn): 0.9023, norm(output): 0.7070, norm(x): 1.0975, norm(y): 0.9913, norm:0.5022, tok/sec: 187653.60, flops:197.00, batch-reuse:1
@ 2935 train 4.0304 , allloss: 4.0304, dt: 701.82ms, fracRes: 0.4619, norm(attn): 0.9219, norm(output): 0.7031, norm(x): 1.0961, norm(y): 0.9914, norm:0.5469, tok/sec: 186760.61, flops:196.06, batch-reuse:1
@ 2936 train 3.9392 , allloss: 3.9392, dt: 702.04ms, fracRes: 0.4595, norm(attn): 0.9102, norm(output): 0.6914, norm(x): 1.0846, norm(y): 0.9907, norm:0.5088, tok/sec: 186702.89, flops:196.00, batch-reuse:1
@ 2937 train 4.0053 , allloss: 4.0053, dt: 702.64ms, fracRes: 0.4617, norm(attn): 0.9219, norm(output): 0.6914, norm(x): 1.0843, norm(y): 0.9910, norm:0.5316, tok/sec: 186541.92, flops:195.83, batch-reuse:1
@ 2938 train 4.0155 , allloss: 4.0155, dt: 705.61ms, fracRes: 0.4689, norm(attn): 0.9141, norm(output): 0.7109, norm(x): 1.1048, norm(y): 0.9914, norm:0.4817, tok/sec: 185756.18, flops:195.01, batch-reuse:1
@ 2939 train 4.0696 , allloss: 4.0696, dt: 700.98ms, fracRes: 0.4660, norm(attn): 0.9258, norm(output): 0.6914, norm(x): 1.0908, norm(y): 0.9914, norm:0.4902, tok/sec: 186983.31, flops:196.30, batch-reuse:1
@ 2940 train 4.0312 , allloss: 4.0312, dt: 693.81ms, fracRes: 0.4632, norm(attn): 0.9297, norm(output): 0.6875, norm(x): 1.0826, norm(y): 0.9911, norm:0.4831, tok/sec: 188915.43, flops:198.32, batch-reuse:1
@ 2941 train 3.9054 , allloss: 3.9054, dt: 695.20ms, fracRes: 0.4622, norm(attn): 0.9375, norm(output): 0.6953, norm(x): 1.0869, norm(y): 0.9908, norm:0.5062, tok/sec: 188537.33, flops:197.93, batch-reuse:1
@ 2942 train 4.0611 , allloss: 4.0611, dt: 686.41ms, fracRes: 0.4681, norm(attn): 0.9297, norm(output): 0.7031, norm(x): 1.1028, norm(y): 0.9923, norm:0.5788, tok/sec: 190953.47, flops:200.46, batch-reuse:1
@ 2943 train 4.0054 , allloss: 4.0054, dt: 701.88ms, fracRes: 0.4642, norm(attn): 0.9258, norm(output): 0.7031, norm(x): 1.1006, norm(y): 0.9914, norm:0.5667, tok/sec: 186744.56, flops:196.04, batch-reuse:1
@ 2944 train 4.0870 , allloss: 4.0870, dt: 697.43ms, fracRes: 0.4634, norm(attn): 0.9219, norm(output): 0.6914, norm(x): 1.0901, norm(y): 0.9915, norm:0.5363, tok/sec: 187936.18, flops:197.30, batch-reuse:1
@ 2945 train 4.0798 , allloss: 4.0798, dt: 703.12ms, fracRes: 0.4630, norm(attn): 0.9219, norm(output): 0.6953, norm(x): 1.0924, norm(y): 0.9912, norm:0.4948, tok/sec: 186415.53, flops:195.70, batch-reuse:1
@ 2946 train 4.0037 , allloss: 4.0037, dt: 708.52ms, fracRes: 0.4673, norm(attn): 0.9180, norm(output): 0.7031, norm(x): 1.1012, norm(y): 0.9914, norm:0.4994, tok/sec: 184993.16, flops:194.21, batch-reuse:1
@ 2947 train 4.0254 , allloss: 4.0254, dt: 707.79ms, fracRes: 0.4682, norm(attn): 0.8945, norm(output): 0.7070, norm(x): 1.1018, norm(y): 0.9913, norm:0.5126, tok/sec: 185186.15, flops:194.41, batch-reuse:1
@ 2948 train 3.9333 , allloss: 3.9333, dt: 704.25ms, fracRes: 0.4636, norm(attn): 0.8867, norm(output): 0.6992, norm(x): 1.0877, norm(y): 0.9898, norm:0.5066, tok/sec: 186114.44, flops:195.38, batch-reuse:1
@ 2949 train 4.0020 , allloss: 4.0020, dt: 712.19ms, fracRes: 0.4653, norm(attn): 0.9062, norm(output): 0.6953, norm(x): 1.0898, norm(y): 0.9909, norm:0.4794, tok/sec: 184040.43, flops:193.21, batch-reuse:1
@ 2950 train 4.0557 , allloss: 4.0557, dt: 711.57ms, fracRes: 0.4729, norm(attn): 0.9102, norm(output): 0.7109, norm(x): 1.1153, norm(y): 0.9911, norm:0.4741, tok/sec: 184201.99, flops:193.38, batch-reuse:1
@ 2951 train 3.9877 , allloss: 3.9877, dt: 699.99ms, fracRes: 0.4687, norm(attn): 0.9258, norm(output): 0.6992, norm(x): 1.0991, norm(y): 0.9915, norm:0.5354, tok/sec: 187247.68, flops:196.57, batch-reuse:1
@ 2952 train 4.0857 , allloss: 4.0857, dt: 699.80ms, fracRes: 0.4704, norm(attn): 0.9141, norm(output): 0.6914, norm(x): 1.0956, norm(y): 0.9917, norm:0.5444, tok/sec: 187298.91, flops:196.63, batch-reuse:1
@ 2953 train 4.0584 , allloss: 4.0584, dt: 703.87ms, fracRes: 0.4686, norm(attn): 0.9062, norm(output): 0.6992, norm(x): 1.0993, norm(y): 0.9909, norm:0.5522, tok/sec: 186216.38, flops:195.49, batch-reuse:1
@ 2954 train 4.0096 , allloss: 4.0096, dt: 705.18ms, fracRes: 0.4652, norm(attn): 0.8945, norm(output): 0.7031, norm(x): 1.0988, norm(y): 0.9909, norm:0.4818, tok/sec: 185871.11, flops:195.13, batch-reuse:1
@ 2955 train 4.0447 , allloss: 4.0447, dt: 690.70ms, fracRes: 0.4645, norm(attn): 0.8984, norm(output): 0.7031, norm(x): 1.0965, norm(y): 0.9909, norm:0.4909, tok/sec: 189765.84, flops:199.22, batch-reuse:1
@ 2956 train 3.9947 , allloss: 3.9947, dt: 700.43ms, fracRes: 0.4648, norm(attn): 0.9141, norm(output): 0.6953, norm(x): 1.0912, norm(y): 0.9912, norm:0.4715, tok/sec: 187131.10, flops:196.45, batch-reuse:1
@ 2957 train 4.0866 , allloss: 4.0866, dt: 703.67ms, fracRes: 0.4652, norm(attn): 0.9141, norm(output): 0.6914, norm(x): 1.0839, norm(y): 0.9914, norm:0.4799, tok/sec: 186269.82, flops:195.55, batch-reuse:1
@ 2958 train 4.0363 , allloss: 4.0363, dt: 683.22ms, fracRes: 0.4656, norm(attn): 0.9219, norm(output): 0.6992, norm(x): 1.0913, norm(y): 0.9911, norm:0.5010, tok/sec: 191844.73, flops:201.40, batch-reuse:1
@ 2959 train 4.0628 , allloss: 4.0628, dt: 699.95ms, fracRes: 0.4630, norm(attn): 0.9219, norm(output): 0.6953, norm(x): 1.0872, norm(y): 0.9916, norm:0.4713, tok/sec: 187260.24, flops:196.59, batch-reuse:1
@ 2960 train 4.0340 , allloss: 4.0340, dt: 698.92ms, fracRes: 0.4641, norm(attn): 0.9102, norm(output): 0.6914, norm(x): 1.0858, norm(y): 0.9911, norm:0.4822, tok/sec: 187533.90, flops:196.87, batch-reuse:1
@ 2961 train 3.9413 , allloss: 3.9413, dt: 701.48ms, fracRes: 0.4639, norm(attn): 0.8984, norm(output): 0.7070, norm(x): 1.0931, norm(y): 0.9901, norm:0.5672, tok/sec: 186851.13, flops:196.16, batch-reuse:1
@ 2962 train 3.9999 , allloss: 3.9999, dt: 699.49ms, fracRes: 0.4650, norm(attn): 0.9141, norm(output): 0.6914, norm(x): 1.0922, norm(y): 0.9916, norm:0.4737, tok/sec: 187380.94, flops:196.71, batch-reuse:1
@ 2963 train 4.0253 , allloss: 4.0253, dt: 698.98ms, fracRes: 0.4648, norm(attn): 0.9141, norm(output): 0.7031, norm(x): 1.0998, norm(y): 0.9904, norm:0.5042, tok/sec: 187519.63, flops:196.86, batch-reuse:1
@ 2964 train 4.0594 , allloss: 4.0594, dt: 697.17ms, fracRes: 0.4691, norm(attn): 0.9180, norm(output): 0.7070, norm(x): 1.1083, norm(y): 0.9915, norm:0.4848, tok/sec: 188006.63, flops:197.37, batch-reuse:1
@ 2965 train 4.0087 , allloss: 4.0087, dt: 694.43ms, fracRes: 0.4718, norm(attn): 0.8906, norm(output): 0.7031, norm(x): 1.1109, norm(y): 0.9917, norm:0.5566, tok/sec: 188748.74, flops:198.15, batch-reuse:1
@ 2966 train 3.9316 , allloss: 3.9316, dt: 706.29ms, fracRes: 0.4657, norm(attn): 0.9062, norm(output): 0.6992, norm(x): 1.0994, norm(y): 0.9912, norm:0.5522, tok/sec: 185576.91, flops:194.82, batch-reuse:1
@ 2967 train 4.0339 , allloss: 4.0339, dt: 695.62ms, fracRes: 0.4661, norm(attn): 0.9180, norm(output): 0.6953, norm(x): 1.0960, norm(y): 0.9913, norm:0.5116, tok/sec: 188425.80, flops:197.81, batch-reuse:1
@ 2968 train 4.0390 , allloss: 4.0390, dt: 707.79ms, fracRes: 0.4677, norm(attn): 0.9180, norm(output): 0.6992, norm(x): 1.0969, norm(y): 0.9908, norm:0.5988, tok/sec: 185184.77, flops:194.41, batch-reuse:1
@ 2969 train 3.9479 , allloss: 3.9479, dt: 702.23ms, fracRes: 0.4669, norm(attn): 0.9141, norm(output): 0.6992, norm(x): 1.0943, norm(y): 0.9911, norm:0.5307, tok/sec: 186650.72, flops:195.95, batch-reuse:1
@ 2970 train 3.9688 , allloss: 3.9688, dt: 693.66ms, fracRes: 0.4695, norm(attn): 0.9258, norm(output): 0.6992, norm(x): 1.1005, norm(y): 0.9910, norm:0.4904, tok/sec: 188956.15, flops:198.37, batch-reuse:1
@ 2971 train 4.0014 , allloss: 4.0014, dt: 705.84ms, fracRes: 0.4711, norm(attn): 0.9258, norm(output): 0.7070, norm(x): 1.1078, norm(y): 0.9904, norm:0.4876, tok/sec: 185695.57, flops:194.94, batch-reuse:1
@ 2972 train 3.8975 , allloss: 3.8975, dt: 701.18ms, fracRes: 0.4662, norm(attn): 0.9258, norm(output): 0.6992, norm(x): 1.0955, norm(y): 0.9901, norm:0.5433, tok/sec: 186931.12, flops:196.24, batch-reuse:1
@ 2973 train 4.0092 , allloss: 4.0092, dt: 698.16ms, fracRes: 0.4670, norm(attn): 0.9297, norm(output): 0.7031, norm(x): 1.0976, norm(y): 0.9909, norm:0.5292, tok/sec: 187738.19, flops:197.09, batch-reuse:1
@ 2974 train 3.9386 , allloss: 3.9386, dt: 700.07ms, fracRes: 0.4691, norm(attn): 0.9258, norm(output): 0.6953, norm(x): 1.0937, norm(y): 0.9907, norm:0.5302, tok/sec: 187226.76, flops:196.55, batch-reuse:1
@ 2975 train 4.1137 , allloss: 4.1137, dt: 706.24ms, fracRes: 0.4732, norm(attn): 0.9336, norm(output): 0.7031, norm(x): 1.1035, norm(y): 0.9915, norm:0.5042, tok/sec: 185592.44, flops:194.84, batch-reuse:1
@ 2976 train 4.1603 , allloss: 4.1603, dt: 699.90ms, fracRes: 0.4776, norm(attn): 0.9336, norm(output): 0.7031, norm(x): 1.1115, norm(y): 0.9919, norm:0.5523, tok/sec: 187273.19, flops:196.60, batch-reuse:1
@ 2977 train 4.1800 , allloss: 4.1800, dt: 698.83ms, fracRes: 0.4786, norm(attn): 0.9336, norm(output): 0.6953, norm(x): 1.1061, norm(y): 0.9912, norm:0.4886, tok/sec: 187558.85, flops:196.90, batch-reuse:1
@ 2978 train 4.1748 , allloss: 4.1748, dt: 695.83ms, fracRes: 0.4764, norm(attn): 0.9219, norm(output): 0.7070, norm(x): 1.1071, norm(y): 0.9903, norm:0.5447, tok/sec: 188368.53, flops:197.75, batch-reuse:1
@ 2979 train 4.2173 , allloss: 4.2173, dt: 699.24ms, fracRes: 0.4819, norm(attn): 0.9141, norm(output): 0.7109, norm(x): 1.1168, norm(y): 0.9930, norm:0.6090, tok/sec: 187449.56, flops:196.78, batch-reuse:1
@ 2980 train 4.0486 , allloss: 4.0486, dt: 689.24ms, fracRes: 0.4757, norm(attn): 0.9258, norm(output): 0.7188, norm(x): 1.1152, norm(y): 0.9908, norm:0.5924, tok/sec: 190168.56, flops:199.64, batch-reuse:1
@ 2981 train 4.1559 , allloss: 4.1559, dt: 688.58ms, fracRes: 0.4745, norm(attn): 0.9297, norm(output): 0.6992, norm(x): 1.1091, norm(y): 0.9915, norm:0.8191, tok/sec: 190351.48, flops:199.83, batch-reuse:1
@ 2982 train 4.2381 , allloss: 4.2381, dt: 706.57ms, fracRes: 0.4700, norm(attn): 0.9219, norm(output): 0.7031, norm(x): 1.1032, norm(y): 0.9913, norm:0.6569, tok/sec: 185504.33, flops:194.74, batch-reuse:1
@ 2983 train 4.1231 , allloss: 4.1231, dt: 701.48ms, fracRes: 0.4742, norm(attn): 0.9102, norm(output): 0.7070, norm(x): 1.1136, norm(y): 0.9918, norm:0.5228, tok/sec: 186851.51, flops:196.16, batch-reuse:1
@ 2984 train 4.1838 , allloss: 4.1838, dt: 695.67ms, fracRes: 0.4734, norm(attn): 0.9023, norm(output): 0.6992, norm(x): 1.1052, norm(y): 0.9923, norm:0.5754, tok/sec: 188411.46, flops:197.79, batch-reuse:1
@ 2985 train 4.2206 , allloss: 4.2206, dt: 702.47ms, fracRes: 0.4765, norm(attn): 0.9062, norm(output): 0.7070, norm(x): 1.1146, norm(y): 0.9919, norm:0.4967, tok/sec: 186586.17, flops:195.88, batch-reuse:1
@ 2986 train 4.1333 , allloss: 4.1333, dt: 699.09ms, fracRes: 0.4746, norm(attn): 0.8984, norm(output): 0.6992, norm(x): 1.1082, norm(y): 0.9922, norm:0.5248, tok/sec: 187489.39, flops:196.83, batch-reuse:1
@ 2987 train 4.2086 , allloss: 4.2086, dt: 711.59ms, fracRes: 0.4711, norm(attn): 0.9062, norm(output): 0.6992, norm(x): 1.1000, norm(y): 0.9920, norm:0.4880, tok/sec: 184194.83, flops:193.37, batch-reuse:1
@ 2988 train 4.2719 , allloss: 4.2719, dt: 707.09ms, fracRes: 0.4749, norm(attn): 0.9141, norm(output): 0.7070, norm(x): 1.1165, norm(y): 0.9922, norm:0.4788, tok/sec: 185368.85, flops:194.60, batch-reuse:1
@ 2989 train 4.2124 , allloss: 4.2124, dt: 708.09ms, fracRes: 0.4743, norm(attn): 0.8984, norm(output): 0.7031, norm(x): 1.1110, norm(y): 0.9921, norm:0.5359, tok/sec: 185106.40, flops:194.33, batch-reuse:1
@ 2990 train 4.2407 , allloss: 4.2407, dt: 706.66ms, fracRes: 0.4724, norm(attn): 0.8906, norm(output): 0.6953, norm(x): 1.0977, norm(y): 0.9911, norm:0.5040, tok/sec: 185482.11, flops:194.72, batch-reuse:1
@ 2991 train 4.1408 , allloss: 4.1408, dt: 683.46ms, fracRes: 0.4711, norm(attn): 0.8945, norm(output): 0.6992, norm(x): 1.0958, norm(y): 0.9912, norm:0.5277, tok/sec: 191777.34, flops:201.33, batch-reuse:1
@ 2992 train 4.1859 , allloss: 4.1859, dt: 687.71ms, fracRes: 0.4719, norm(attn): 0.9023, norm(output): 0.6953, norm(x): 1.1005, norm(y): 0.9918, norm:0.4804, tok/sec: 190592.94, flops:200.08, batch-reuse:1
@ 2993 train 4.1735 , allloss: 4.1735, dt: 695.83ms, fracRes: 0.4746, norm(attn): 0.9219, norm(output): 0.7188, norm(x): 1.1200, norm(y): 0.9920, norm:0.5311, tok/sec: 188368.85, flops:197.75, batch-reuse:1
@ 2994 train 4.2032 , allloss: 4.2032, dt: 698.92ms, fracRes: 0.4716, norm(attn): 0.9297, norm(output): 0.7109, norm(x): 1.1113, norm(y): 0.9923, norm:0.5385, tok/sec: 187535.18, flops:196.87, batch-reuse:1
@ 2995 train 4.0829 , allloss: 4.0829, dt: 698.45ms, fracRes: 0.4726, norm(attn): 0.9258, norm(output): 0.7070, norm(x): 1.1065, norm(y): 0.9913, norm:0.4684, tok/sec: 187660.97, flops:197.01, batch-reuse:1
@ 2996 train 4.1196 , allloss: 4.1196, dt: 694.68ms, fracRes: 0.4729, norm(attn): 0.9297, norm(output): 0.7070, norm(x): 1.1089, norm(y): 0.9917, norm:0.5515, tok/sec: 188680.08, flops:198.08, batch-reuse:1
@ 2997 train 4.1641 , allloss: 4.1641, dt: 705.72ms, fracRes: 0.4781, norm(attn): 0.9219, norm(output): 0.7031, norm(x): 1.1113, norm(y): 0.9916, norm:0.5813, tok/sec: 185729.19, flops:194.98, batch-reuse:1
@ 2998 train 4.2043 , allloss: 4.2043, dt: 709.22ms, fracRes: 0.4714, norm(attn): 0.9297, norm(output): 0.6992, norm(x): 1.1043, norm(y): 0.9917, norm:0.4757, tok/sec: 184811.19, flops:194.02, batch-reuse:1
@ 2999 train 4.0810 , allloss: 4.0810, dt: 708.13ms, fracRes: 0.4744, norm(attn): 0.9180, norm(output): 0.6992, norm(x): 1.1054, norm(y): 0.9913, norm:0.5243, tok/sec: 185097.17, flops:194.32, batch-reuse:1
@ 3000 train 4.2039 , allloss: 4.2039, dt: 702.68ms, fracRes: 0.4763, norm(attn): 0.9102, norm(output): 0.7070, norm(x): 1.1139, norm(y): 0.9918, norm:0.5480, tok/sec: 186531.92, flops:195.82, batch-reuse:1
@ 3001 train 4.2538 , allloss: 4.2538, dt: 701.11ms, fracRes: 0.4731, norm(attn): 0.9336, norm(output): 0.7031, norm(x): 1.1051, norm(y): 0.9927, norm:0.5455, tok/sec: 186949.11, flops:196.26, batch-reuse:1
@ 3002 train 4.1089 , allloss: 4.1089, dt: 701.86ms, fracRes: 0.4805, norm(attn): 0.9258, norm(output): 0.7109, norm(x): 1.1249, norm(y): 0.9913, norm:0.5252, tok/sec: 186748.62, flops:196.05, batch-reuse:1
@ 3003 train 4.1593 , allloss: 4.1593, dt: 705.86ms, fracRes: 0.4720, norm(attn): 0.9297, norm(output): 0.7109, norm(x): 1.1088, norm(y): 0.9915, norm:0.5448, tok/sec: 185691.93, flops:194.94, batch-reuse:1
@ 3004 train 4.2420 , allloss: 4.2420, dt: 701.46ms, fracRes: 0.4699, norm(attn): 0.9336, norm(output): 0.6953, norm(x): 1.0982, norm(y): 0.9916, norm:0.6216, tok/sec: 186856.84, flops:196.16, batch-reuse:1
@ 3005 train 4.4383 , allloss: 4.4383, dt: 702.21ms, fracRes: 0.4781, norm(attn): 0.9297, norm(output): 0.7188, norm(x): 1.1231, norm(y): 0.9926, norm:0.7118, tok/sec: 186656.55, flops:195.95, batch-reuse:1
@ 3006 train 4.1531 , allloss: 4.1531, dt: 703.43ms, fracRes: 0.4770, norm(attn): 0.9336, norm(output): 0.6953, norm(x): 1.1083, norm(y): 0.9913, norm:0.7256, tok/sec: 186331.75, flops:195.61, batch-reuse:1
@ 3007 train 4.2407 , allloss: 4.2407, dt: 695.07ms, fracRes: 0.4757, norm(attn): 0.9414, norm(output): 0.6953, norm(x): 1.1053, norm(y): 0.9926, norm:0.5618, tok/sec: 188574.65, flops:197.97, batch-reuse:1
@ 3008 train 4.1976 , allloss: 4.1976, dt: 694.55ms, fracRes: 0.4775, norm(attn): 0.9531, norm(output): 0.6992, norm(x): 1.1072, norm(y): 0.9922, norm:0.5637, tok/sec: 188714.01, flops:198.11, batch-reuse:1
@ 3009 train 4.0982 , allloss: 4.0982, dt: 698.21ms, fracRes: 0.4793, norm(attn): 0.9531, norm(output): 0.6914, norm(x): 1.1019, norm(y): 0.9912, norm:0.5540, tok/sec: 187724.99, flops:197.07, batch-reuse:1
@ 3010 train 4.1474 , allloss: 4.1474, dt: 699.88ms, fracRes: 0.4805, norm(attn): 0.9570, norm(output): 0.7031, norm(x): 1.1122, norm(y): 0.9920, norm:0.5575, tok/sec: 187277.53, flops:196.60, batch-reuse:1
@ 3011 train 4.2036 , allloss: 4.2036, dt: 706.16ms, fracRes: 0.4773, norm(attn): 0.9609, norm(output): 0.6992, norm(x): 1.1105, norm(y): 0.9919, norm:0.5742, tok/sec: 185612.37, flops:194.86, batch-reuse:1
@ 3012 train 4.2940 , allloss: 4.2940, dt: 699.44ms, fracRes: 0.4759, norm(attn): 0.9492, norm(output): 0.7070, norm(x): 1.1110, norm(y): 0.9920, norm:0.6265, tok/sec: 187395.57, flops:196.73, batch-reuse:1
@ 3013 train 4.3360 , allloss: 4.3360, dt: 703.96ms, fracRes: 0.4764, norm(attn): 0.9336, norm(output): 0.7070, norm(x): 1.1175, norm(y): 0.9936, norm:0.5762, tok/sec: 186191.85, flops:195.46, batch-reuse:1
@ 3014 train 4.1665 , allloss: 4.1665, dt: 698.35ms, fracRes: 0.4786, norm(attn): 0.9336, norm(output): 0.7148, norm(x): 1.1266, norm(y): 0.9928, norm:0.4965, tok/sec: 187687.75, flops:197.03, batch-reuse:1
@ 3015 train 4.1494 , allloss: 4.1494, dt: 703.94ms, fracRes: 0.4723, norm(attn): 0.9297, norm(output): 0.7031, norm(x): 1.1101, norm(y): 0.9915, norm:0.6225, tok/sec: 186198.72, flops:195.47, batch-reuse:1
@ 3016 train 4.1083 , allloss: 4.1083, dt: 701.54ms, fracRes: 0.4756, norm(attn): 0.9062, norm(output): 0.6953, norm(x): 1.1038, norm(y): 0.9907, norm:0.5663, tok/sec: 186834.43, flops:196.14, batch-reuse:1
@ 3017 train 4.0896 , allloss: 4.0896, dt: 685.84ms, fracRes: 0.4770, norm(attn): 0.9258, norm(output): 0.6992, norm(x): 1.1062, norm(y): 0.9915, norm:0.5212, tok/sec: 191112.39, flops:200.63, batch-reuse:1
@ 3018 train 4.1688 , allloss: 4.1688, dt: 686.96ms, fracRes: 0.4763, norm(attn): 0.9336, norm(output): 0.6914, norm(x): 1.1003, norm(y): 0.9922, norm:0.5616, tok/sec: 190799.52, flops:200.30, batch-reuse:1
@ 3019 train 4.3379 , allloss: 4.3379, dt: 708.91ms, fracRes: 0.4781, norm(attn): 0.9414, norm(output): 0.7070, norm(x): 1.1166, norm(y): 0.9928, norm:0.5586, tok/sec: 184891.31, flops:194.10, batch-reuse:1
@ 3020 train 4.0944 , allloss: 4.0944, dt: 695.43ms, fracRes: 0.4739, norm(attn): 0.9375, norm(output): 0.6953, norm(x): 1.1043, norm(y): 0.9922, norm:0.5156, tok/sec: 188475.67, flops:197.86, batch-reuse:1
@ 3021 train 4.1329 , allloss: 4.1329, dt: 701.18ms, fracRes: 0.4714, norm(attn): 0.9414, norm(output): 0.6953, norm(x): 1.1012, norm(y): 0.9929, norm:0.5344, tok/sec: 186931.24, flops:196.24, batch-reuse:1
@ 3022 train 4.1862 , allloss: 4.1862, dt: 689.05ms, fracRes: 0.4674, norm(attn): 0.9453, norm(output): 0.7031, norm(x): 1.1021, norm(y): 0.9911, norm:0.5321, tok/sec: 190221.40, flops:199.69, batch-reuse:1
@ 3023 train 4.2424 , allloss: 4.2424, dt: 697.87ms, fracRes: 0.4680, norm(attn): 0.9492, norm(output): 0.6992, norm(x): 1.0983, norm(y): 0.9924, norm:0.5593, tok/sec: 187818.24, flops:197.17, batch-reuse:1
@ 3024 train 4.1542 , allloss: 4.1542, dt: 704.33ms, fracRes: 0.4668, norm(attn): 0.9531, norm(output): 0.6953, norm(x): 1.0945, norm(y): 0.9909, norm:0.5573, tok/sec: 186094.78, flops:195.36, batch-reuse:1
@ 3025 train 4.1552 , allloss: 4.1552, dt: 710.00ms, fracRes: 0.4724, norm(attn): 0.9609, norm(output): 0.6992, norm(x): 1.1028, norm(y): 0.9927, norm:0.5037, tok/sec: 184609.12, flops:193.80, batch-reuse:1
@ 3026 train 4.1963 , allloss: 4.1963, dt: 698.48ms, fracRes: 0.4783, norm(attn): 0.9609, norm(output): 0.7031, norm(x): 1.1178, norm(y): 0.9931, norm:0.5232, tok/sec: 187653.67, flops:197.00, batch-reuse:1
@ 3027 train 4.2156 , allloss: 4.2156, dt: 697.53ms, fracRes: 0.4736, norm(attn): 0.9727, norm(output): 0.7031, norm(x): 1.1100, norm(y): 0.9923, norm:0.5144, tok/sec: 187908.82, flops:197.27, batch-reuse:1
@ 3028 train 4.1872 , allloss: 4.1872, dt: 698.25ms, fracRes: 0.4695, norm(attn): 0.9688, norm(output): 0.7031, norm(x): 1.1043, norm(y): 0.9915, norm:0.5625, tok/sec: 187714.54, flops:197.06, batch-reuse:1
@ 3029 train 4.0705 , allloss: 4.0705, dt: 709.88ms, fracRes: 0.4713, norm(attn): 0.9766, norm(output): 0.6992, norm(x): 1.1013, norm(y): 0.9913, norm:0.5244, tok/sec: 184640.56, flops:193.84, batch-reuse:1
@ 3030 train 4.1338 , allloss: 4.1338, dt: 709.10ms, fracRes: 0.4719, norm(attn): 0.9766, norm(output): 0.6953, norm(x): 1.1003, norm(y): 0.9918, norm:0.5099, tok/sec: 184842.69, flops:194.05, batch-reuse:1
@ 3031 train 4.1426 , allloss: 4.1426, dt: 715.78ms, fracRes: 0.4726, norm(attn): 0.9805, norm(output): 0.6992, norm(x): 1.0966, norm(y): 0.9914, norm:0.4603, tok/sec: 183117.16, flops:192.24, batch-reuse:1
@ 3032 train 4.1506 , allloss: 4.1506, dt: 707.34ms, fracRes: 0.4739, norm(attn): 0.9805, norm(output): 0.6992, norm(x): 1.1009, norm(y): 0.9913, norm:0.5074, tok/sec: 185302.06, flops:194.53, batch-reuse:1
@ 3033 train 4.0941 , allloss: 4.0941, dt: 708.34ms, fracRes: 0.4731, norm(attn): 0.9727, norm(output): 0.6914, norm(x): 1.0989, norm(y): 0.9921, norm:0.5042, tok/sec: 185040.10, flops:194.26, batch-reuse:1
@ 3034 train 4.1827 , allloss: 4.1827, dt: 696.01ms, fracRes: 0.4737, norm(attn): 0.9648, norm(output): 0.6992, norm(x): 1.1052, norm(y): 0.9930, norm:0.4673, tok/sec: 188318.84, flops:197.70, batch-reuse:1
@ 3035 train 4.2137 , allloss: 4.2137, dt: 700.97ms, fracRes: 0.4694, norm(attn): 0.9727, norm(output): 0.7031, norm(x): 1.1024, norm(y): 0.9923, norm:0.5136, tok/sec: 186986.05, flops:196.30, batch-reuse:1
@ 3036 train 4.1332 , allloss: 4.1332, dt: 697.55ms, fracRes: 0.4674, norm(attn): 0.9727, norm(output): 0.6992, norm(x): 1.0990, norm(y): 0.9915, norm:0.4650, tok/sec: 187904.52, flops:197.26, batch-reuse:1
@ 3037 train 4.1968 , allloss: 4.1968, dt: 700.92ms, fracRes: 0.4689, norm(attn): 0.9531, norm(output): 0.7031, norm(x): 1.0993, norm(y): 0.9915, norm:0.4936, tok/sec: 186999.66, flops:196.31, batch-reuse:1
@ 3038 train 4.1652 , allloss: 4.1652, dt: 701.19ms, fracRes: 0.4720, norm(attn): 0.9570, norm(output): 0.7070, norm(x): 1.1072, norm(y): 0.9918, norm:0.6445, tok/sec: 186927.18, flops:196.24, batch-reuse:1
@ 3039 train 4.4057 , allloss: 4.4057, dt: 692.88ms, fracRes: 0.4730, norm(attn): 0.9766, norm(output): 0.6992, norm(x): 1.1062, norm(y): 0.9932, norm:0.7559, tok/sec: 189170.19, flops:198.59, batch-reuse:1
@ 3040 train 4.1395 , allloss: 4.1395, dt: 704.19ms, fracRes: 0.4701, norm(attn): 0.9727, norm(output): 0.6953, norm(x): 1.0978, norm(y): 0.9922, norm:0.9313, tok/sec: 186131.45, flops:195.40, batch-reuse:1
@ 3041 train 4.1943 , allloss: 4.1943, dt: 691.32ms, fracRes: 0.4753, norm(attn): 0.9688, norm(output): 0.7070, norm(x): 1.1136, norm(y): 0.9917, norm:0.7447, tok/sec: 189597.51, flops:199.04, batch-reuse:1
@ 3042 train 4.0914 , allloss: 4.0914, dt: 695.40ms, fracRes: 0.4729, norm(attn): 0.9609, norm(output): 0.7070, norm(x): 1.1122, norm(y): 0.9914, norm:0.6634, tok/sec: 188484.65, flops:197.87, batch-reuse:1
@ 3043 train 4.1457 , allloss: 4.1457, dt: 708.22ms, fracRes: 0.4692, norm(attn): 0.9688, norm(output): 0.6992, norm(x): 1.0995, norm(y): 0.9916, norm:0.6232, tok/sec: 185073.18, flops:194.29, batch-reuse:1
@ 3044 train 4.1824 , allloss: 4.1824, dt: 694.91ms, fracRes: 0.4708, norm(attn): 0.9727, norm(output): 0.6953, norm(x): 1.1009, norm(y): 0.9922, norm:0.6218, tok/sec: 188618.58, flops:198.01, batch-reuse:1
@ 3045 train 4.3824 , allloss: 4.3824, dt: 708.69ms, fracRes: 0.4788, norm(attn): 0.9766, norm(output): 0.7109, norm(x): 1.1212, norm(y): 0.9933, norm:0.6894, tok/sec: 184950.27, flops:194.16, batch-reuse:1
@ 3046 train 4.1728 , allloss: 4.1728, dt: 696.48ms, fracRes: 0.4831, norm(attn): 0.9531, norm(output): 0.7109, norm(x): 1.1217, norm(y): 0.9926, norm:0.5261, tok/sec: 188193.20, flops:197.57, batch-reuse:1
@ 3047 train 4.1788 , allloss: 4.1788, dt: 707.14ms, fracRes: 0.4867, norm(attn): 0.9609, norm(output): 0.7070, norm(x): 1.1256, norm(y): 0.9917, norm:0.7266, tok/sec: 185354.85, flops:194.59, batch-reuse:1
@ 3048 train 4.0938 , allloss: 4.0938, dt: 708.07ms, fracRes: 0.4800, norm(attn): 0.9805, norm(output): 0.7031, norm(x): 1.1138, norm(y): 0.9915, norm:0.5878, tok/sec: 185112.82, flops:194.33, batch-reuse:1
@ 3049 train 4.3236 , allloss: 4.3236, dt: 708.81ms, fracRes: 0.4791, norm(attn): 1.0000, norm(output): 0.6992, norm(x): 1.1148, norm(y): 0.9934, norm:0.6214, tok/sec: 184918.36, flops:194.13, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8320, 0.1670, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6836, 0.1504, 0.1650, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6289, 0.1475, 0.1191, 0.1045, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5039, 0.1846, 0.1201, 0.0879, 0.1025, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5078, 0.1523, 0.0967, 0.0757, 0.1074, 0.0598, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3301, 0.1436, 0.1025, 0.0889, 0.1299, 0.0947, 0.1099, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2178, 0.1533, 0.0762, 0.0933, 0.1338, 0.0825, 0.1416, 0.1006, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3516, 0.1162, 0.0625, 0.0574, 0.0757, 0.0591, 0.0854, 0.1128, 0.0791, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2480, 0.0957, 0.0889, 0.0649, 0.0850, 0.0552, 0.0815, 0.1416, 0.0874, 0.0520, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3047, 0.0869, 0.0708, 0.0481, 0.0649, 0.0613, 0.0684, 0.1055, 0.0732, 0.0508, 0.0659, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1836, 0.1021, 0.0603, 0.0552, 0.0586, 0.0579, 0.0869, 0.1108, 0.0547, 0.0562, 0.1060, 0.0684, 0.0000, 0.0000, 0.0000],
        [0.4766, 0.0771, 0.0327, 0.0298, 0.0361, 0.0265, 0.0503, 0.0679, 0.0286, 0.0240, 0.0640, 0.0415, 0.0457, 0.0000, 0.0000],
        [0.3262, 0.0981, 0.0435, 0.0347, 0.0469, 0.0322, 0.0532, 0.0874, 0.0461, 0.0278, 0.0579, 0.0527, 0.0623, 0.0320, 0.0000],
        [0.1318, 0.0908, 0.0598, 0.0464, 0.0515, 0.0540, 0.0510, 0.1152, 0.0481, 0.0549, 0.0496, 0.0554, 0.0854, 0.0491, 0.0566]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.3320, -0.8281, -1.0859, -1.2422, -1.3047, -1.2734, -1.0625, -0.6289, -1.1562, -1.2266, -0.8086, -1.0312, -0.7656, -1.2266, -1.1875],
        [ 0.1475, -1.4531, -0.8164, -0.6289, -0.6055, -0.7227, -0.5898, -0.1387, -0.4570, -0.6172, -0.3965, -0.5234, -0.5547, -0.7305, -0.4297],
        [ 0.1992, -1.3125, -1.2266, -1.1562, -1.2891, -1.5312, -1.1094, -0.5469, -1.2422, -1.3047, -0.8125, -0.7266, -0.7070, -1.3594, -0.7461],
        [ 0.3691, -1.0781, -1.2891, -1.4219, -1.6250, -1.6250, -1.2969, -0.5430, -1.1094, -1.3672, -1.0703, -1.2188, -0.9297, -1.1953, -1.1562],
        [ 0.2354, -0.7695, -1.2031, -1.5156, -1.3594, -1.5312, -0.8555, -0.8555, -1.1172, -1.5078, -0.9375, -1.0312, -0.9375, -1.2891, -0.7305],
        [ 0.3125, -0.8945, -1.3438, -1.5938, -1.2422, -1.8281, -1.2109, -0.8789, -1.0547, -1.5703, -0.9922, -1.1641, -1.1641, -1.2578, -1.0625],
        [ 0.2305, -0.6016, -0.9375, -1.0781, -0.7031, -1.0156, -0.8672, -0.3281, -0.6914, -0.9141, -0.5039, -1.1484, -0.5859, -0.6797, -0.9414],
        [ 0.1357, -0.2168, -0.9141, -0.7109, -0.3516, -0.8359, -0.2930, -0.6406, -0.6836, -0.7539, -0.0942, -0.6406, -0.3223, -0.7852, -0.4922],
        [ 0.3359, -0.7695, -1.3906, -1.4766, -1.2031, -1.4531, -1.0781, -0.8008, -1.1562, -1.6641, -0.9375, -1.2969, -1.1016, -1.2656, -1.0625],
        [ 0.1875, -0.7617, -0.8398, -1.1484, -0.8828, -1.3203, -0.9258, -0.3770, -0.8555, -1.3750, -0.7773, -0.7305, -0.8008, -1.0469, -0.5508],
        [ 0.3359, -0.9141, -1.1172, -1.5078, -1.2109, -1.2656, -1.1562, -0.7227, -1.0938, -1.4531, -1.1953, -1.2109, -0.8867, -1.1406, -1.1562],
        [ 0.1299, -0.4590, -0.9844, -1.0703, -1.0156, -1.0234, -0.6133, -0.3750, -1.0781, -1.0547, -0.4199, -0.8594, -0.6211, -1.2031, -0.2949],
        [ 0.5039, -1.3125, -2.1719, -2.2656, -2.0625, -2.3906, -1.7422, -1.4375, -2.3125, -2.4844, -1.5000, -1.9375, -1.8359, -2.5625, -1.9766],
        [ 0.3828, -0.8164, -1.6328, -1.8594, -1.5547, -1.9297, -1.4219, -0.9297, -1.5703, -2.0781, -1.3438, -1.4375, -1.2734, -1.9375, -1.3047],
        [ 0.1494, -0.2227, -0.6406, -0.8945, -0.7930, -0.7422, -0.7969,  0.0175, -0.8555, -0.7266, -0.8281, -0.7188, -0.2812, -0.8359, -0.6953]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7637],
        [0.4514],
        [0.3679],
        [0.3731],
        [0.2798],
        [0.2408],
        [0.1985],
        [0.2007],
        [0.1520],
        [0.2048],
        [0.1026],
        [0.1989],
        [0.1573],
        [0.0802]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0091,     0.9922,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0079,     0.9922,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0005,     0.0001,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0011,     0.0000,     0.0003,     0.0000,     0.0000,     0.9961,     0.0009]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0205,     -1.1016,     -1.1562,     -1.0781,     -1.0938,     -1.1641,     -1.2031,     -1.3203,     -1.2812,     -1.2656,     -1.2422,     -1.2266,     -1.3750,     -1.3828,     -1.2422],
        [    -0.0776,    -11.4375,    -11.8750,    -12.5625,     -7.1562,     -9.1875,     -8.2500,    -11.0000,     -9.9375,     -6.8750,     -6.1562,     -3.2969,     -4.2812,     -5.8438,     -1.7578],
        [    -0.2305,     16.6250,      2.0000,      6.5938,     12.9375,     13.8125,      9.1250,      2.2188,     12.2500,     14.8750,     16.8750,     20.3750,     13.1875,     18.8750,     20.3750],
        [    -0.4531,     10.1875,     26.0000,     13.5625,      0.9219,     16.3750,      5.8125,     12.0000,      7.5938,     17.8750,     12.5625,     38.7500,     20.8750,     14.3125,     28.3750],
        [    -0.4004,     15.1875,     20.8750,     25.6250,      6.7188,     17.7500,     20.6250,     22.0000,     23.8750,     29.1250,     24.3750,     36.7500,     30.0000,     30.3750,     34.5000],
        [    -0.3398,     19.3750,      6.3750,      9.0000,     31.1250,     23.3750,     18.3750,     13.6875,     30.7500,     17.7500,     27.6250,     22.5000,     26.0000,     38.2500,     29.3750],
        [    -0.4805,     22.6250,     23.6250,     20.2500,     22.1250,     33.5000,     22.8750,     30.2500,     30.5000,     24.3750,     28.7500,     39.5000,     38.0000,     37.5000,     33.0000],
        [    -0.3301,     27.8750,     21.0000,     23.2500,     26.0000,     31.8750,     36.7500,     28.5000,     35.7500,     23.2500,     43.7500,     33.0000,     38.5000,     42.5000,     40.0000],
        [    -0.4941,     16.0000,     16.7500,     16.0000,     15.9375,     28.7500,     27.1250,     36.2500,     21.7500,     21.6250,     28.3750,     33.2500,     46.2500,     28.7500,     24.6250],
        [    -0.3359,     19.5000,     14.5625,     16.1250,     27.5000,     29.2500,     27.6250,     18.2500,     38.5000,     12.7500,     37.2500,     26.3750,     27.2500,     45.0000,     39.2500],
        [    -0.5781,     13.4375,     18.5000,     27.3750,      8.1875,     15.3125,     14.3750,     18.1250,     15.1250,     45.2500,     12.3125,     31.1250,     31.0000,     23.5000,     25.3750],
        [    -0.3730,     31.0000,     21.5000,     17.5000,     33.0000,     33.0000,     39.0000,     29.5000,     42.0000,     19.5000,     51.7500,     18.8750,     38.7500,     48.5000,     46.2500],
        [    -0.5742,     19.8750,     31.0000,     30.6250,     16.2500,     25.0000,     22.0000,     24.5000,     25.6250,     30.0000,     27.8750,     46.0000,     31.6250,     33.7500,     40.5000],
        [    -0.5391,     15.5000,     16.7500,     16.1250,     14.8125,     25.5000,     23.7500,     31.1250,     20.3750,     22.8750,     27.3750,     31.5000,     43.0000,     28.0000,     25.7500],
        [    -0.4336,     23.8750,     18.2500,     21.0000,     30.1250,     29.7500,     30.7500,     19.6250,     41.7500,     21.7500,     40.2500,     28.7500,     30.1250,     48.5000,     41.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7487],
        [0.3132],
        [0.2438],
        [0.2598],
        [0.1795],
        [0.1322],
        [0.1996],
        [0.1350],
        [0.1070],
        [0.0912],
        [0.1329],
        [0.1194],
        [0.1174],
        [0.0799]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9688,     0.0320,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9414,     0.0554,     0.0015,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9805,     0.0170,     0.0006,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7383,     0.2080,     0.0167,     0.0035,     0.0342,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7031,     0.2676,     0.0067,     0.0010,     0.0146,     0.0075,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4102,     0.4336,     0.0156,     0.0017,     0.0554,     0.0164,     0.0679,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3320,     0.5508,     0.0104,     0.0005,     0.0623,     0.0052,     0.0098,     0.0287,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3848,     0.2344,     0.0181,     0.0033,     0.1865,     0.0215,     0.0130,     0.0254,     0.1133,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8672,     0.0486,     0.0021,     0.0003,     0.0381,     0.0006,     0.0010,     0.0063,     0.0229,     0.0108,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6836,     0.0850,     0.0055,     0.0008,     0.0522,     0.0021,     0.0018,     0.0129,     0.0505,     0.0737,     0.0325,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9414,     0.0194,     0.0016,     0.0002,     0.0096,     0.0005,     0.0005,     0.0035,     0.0081,     0.0048,     0.0070,     0.0023,     0.0000,     0.0000,     0.0000],
        [    0.2754,     0.1562,     0.0060,     0.0005,     0.1465,     0.0042,     0.0128,     0.0115,     0.1338,     0.1445,     0.0723,     0.0156,     0.0205,     0.0000,     0.0000],
        [    0.2129,     0.1123,     0.0053,     0.0009,     0.0996,     0.0069,     0.0051,     0.0078,     0.0378,     0.2734,     0.1416,     0.0130,     0.0112,     0.0732,     0.0000],
        [    0.5664,     0.2236,     0.0041,     0.0007,     0.0547,     0.0031,     0.0012,     0.0131,     0.0200,     0.0297,     0.0299,     0.0199,     0.0123,     0.0149,     0.0044]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0025,     -0.1768,     -0.2324,     -0.2715,     -0.1699,     -0.2578,     -0.2539,     -0.2246,     -0.1611,     -0.1611,     -0.1826,     -0.2002,     -0.1875,     -0.1455,     -0.2021],
        [     0.1187,     -3.2969,     -6.4375,     -7.9375,     -3.7969,     -7.9062,     -7.5625,     -5.9375,     -3.1094,     -4.2812,     -3.5000,     -5.5625,     -4.7812,     -1.8516,     -4.2188],
        [     0.1128,     -2.7188,     -6.3438,     -8.1875,     -4.0938,     -7.7188,     -7.3750,     -5.2188,     -4.1562,     -5.0000,     -4.5312,     -5.5938,     -5.0938,     -4.0938,     -5.8750],
        [     0.1143,     -3.9531,     -7.3438,     -9.5000,     -4.8750,     -8.4375,     -9.2500,     -7.1562,     -5.9375,     -5.9062,     -5.7500,     -7.4688,     -7.4375,     -6.4375,     -8.0000],
        [     0.0776,     -1.1875,     -3.7031,     -5.2812,     -3.0000,     -4.1562,     -5.4688,     -3.5625,     -1.3516,     -1.2812,     -3.1094,     -3.5000,     -3.0781,     -1.2031,     -2.8906],
        [     0.0835,     -0.8867,     -4.5625,     -6.5000,     -3.7969,     -4.4688,     -2.8750,     -2.3281,     -0.9258,     -1.6016,     -2.8906,     -3.6875,     -4.9062,     -1.4141,     -3.3906],
        [     0.1016,      0.1553,     -3.1719,     -5.4062,     -1.8984,     -3.1250,     -1.6953,     -1.3672,      0.2578,     -1.5781,     -2.8281,     -2.7500,     -3.4375,     -0.1670,     -2.6250],
        [     0.1475,      0.6562,     -3.3125,     -6.3438,     -1.5234,     -4.0000,     -3.3750,     -2.2969,      0.5469,     -1.3828,     -1.8828,     -2.8125,     -3.0156,      1.6016,     -1.0703],
        [     0.0649,     -0.4297,     -2.9844,     -4.6875,     -0.6562,     -2.8125,     -3.3281,     -2.6562,     -1.1562,      0.6562,     -0.3555,     -2.7188,     -2.3281,     -0.8711,     -1.8828],
        [     0.0947,     -2.7969,     -5.9375,     -7.7500,     -3.0312,     -7.1250,     -6.6875,     -4.8438,     -3.5469,     -4.2812,     -2.0000,     -4.6875,     -4.4375,     -2.9219,     -4.2812],
        [     0.0898,     -1.9922,     -4.7188,     -6.6875,     -2.4844,     -5.7188,     -5.8750,     -3.8750,     -2.5156,     -2.1406,     -2.9531,     -2.5000,     -1.8750,     -1.5469,     -3.5156],
        [     0.0884,     -3.7969,     -6.2812,     -8.1875,     -4.5000,     -7.4688,     -7.4062,     -5.5000,     -4.6562,     -5.1875,     -4.8125,     -5.9375,     -3.4688,     -4.3125,     -5.8750],
        [     0.1001,     -0.4648,     -3.7188,     -6.2812,     -0.5312,     -4.0625,     -2.9688,     -3.0781,     -0.6211,     -0.5469,     -1.2344,     -2.7656,     -2.5000,      1.0703,     -0.8711],
        [     0.0562,     -0.5820,     -3.6406,     -5.4375,     -0.7031,     -3.3750,     -3.6875,     -3.2500,     -1.6719,      0.3066,     -0.3516,     -2.7344,     -2.8906,     -1.0078,     -1.9062],
        [     0.0981,     -0.8320,     -4.8438,     -6.6562,     -2.2344,     -5.0938,     -6.0625,     -3.6719,     -3.2500,     -2.8594,     -2.8438,     -3.2500,     -3.7344,     -3.5469,     -4.7500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5799],
        [0.3890],
        [0.5261],
        [0.3619],
        [0.2964],
        [0.2401],
        [0.2786],
        [0.2576],
        [0.2916],
        [0.2694],
        [0.3486],
        [0.2099],
        [0.1942],
        [0.2032]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0063,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0079,     0.0046,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7617,     0.0811,     0.0757,     0.0830,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9766,     0.0157,     0.0038,     0.0037,     0.0012,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9297,     0.0645,     0.0017,     0.0009,     0.0005,     0.0008,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7734,     0.0723,     0.0034,     0.0018,     0.0010,     0.0038,     0.1436,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9609,     0.0153,     0.0008,     0.0008,     0.0002,     0.0003,     0.0193,     0.0043,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9609,     0.0197,     0.0018,     0.0018,     0.0008,     0.0004,     0.0092,     0.0046,     0.0014,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9297,     0.0112,     0.0029,     0.0044,     0.0014,     0.0013,     0.0306,     0.0067,     0.0028,     0.0070,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9336,     0.0182,     0.0036,     0.0092,     0.0012,     0.0021,     0.0143,     0.0090,     0.0034,     0.0049,     0.0016,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1367,     0.0830,     0.0811,     0.2393,     0.0248,     0.0386,     0.0752,     0.0698,     0.0820,     0.0500,     0.0222,     0.0972,     0.0000,     0.0000,     0.0000],
        [    0.8477,     0.0408,     0.0034,     0.0031,     0.0015,     0.0023,     0.0491,     0.0192,     0.0074,     0.0106,     0.0023,     0.0059,     0.0080,     0.0000,     0.0000],
        [    0.9297,     0.0217,     0.0025,     0.0027,     0.0010,     0.0010,     0.0122,     0.0089,     0.0027,     0.0068,     0.0014,     0.0047,     0.0031,     0.0016,     0.0000],
        [    0.1953,     0.1050,     0.0356,     0.0796,     0.0103,     0.0693,     0.0283,     0.1299,     0.0518,     0.0295,     0.0109,     0.0293,     0.1260,     0.0320,     0.0679]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0021,     -0.2500,     -0.3340,     -0.3066,     -0.3691,     -0.3340,     -0.2334,     -0.2695,     -0.3223,     -0.2754,     -0.3281,     -0.3379,     -0.2891,     -0.3203,     -0.1973],
        [     0.0723,     -5.0000,     -7.7188,     -6.6562,     -8.8125,     -8.6250,     -4.8125,     -5.7812,     -7.7500,     -6.9688,     -9.0000,     -7.0625,     -7.3438,     -8.2500,     -3.5938],
        [     0.0552,     -4.7812,     -5.3125,     -3.8906,     -6.3125,     -5.5938,     -4.7812,     -4.3750,     -5.4688,     -5.3125,     -5.8438,     -4.4375,     -4.5938,     -5.2812,     -2.1250],
        [     0.0771,     -2.1562,     -2.2344,     -2.1406,     -3.1250,     -3.1875,     -2.5781,     -2.5469,     -2.9375,     -2.2656,     -2.9219,     -1.5078,     -2.8594,     -2.9531,     -0.2812],
        [    -0.0041,     -4.1250,     -5.5625,     -5.5938,     -6.7500,     -6.5938,     -4.1875,     -4.9375,     -6.1875,     -5.6562,     -6.5000,     -5.3125,     -5.7188,     -6.3750,     -3.2500],
        [     0.2236,     -2.4531,     -6.0625,     -6.7500,     -7.3125,     -6.8750,     -2.1562,     -4.6562,     -5.7812,     -4.2812,     -6.8125,     -6.0938,     -5.9062,     -6.7500,     -2.4531],
        [     0.2051,     -2.1719,     -5.2188,     -5.8750,     -6.5000,     -5.0938,     -1.4844,     -4.1562,     -5.7812,     -4.6875,     -6.6562,     -4.7188,     -5.2188,     -6.2188,     -2.4062],
        [     0.1602,     -3.9688,     -7.0000,     -6.9062,     -8.1875,     -7.8750,     -3.7500,     -5.2500,     -7.4375,     -5.8438,     -8.1875,     -6.2188,     -6.7500,     -7.7500,     -3.7969],
        [     0.1094,     -3.7812,     -6.1562,     -6.1875,     -7.0312,     -7.6250,     -4.5312,     -5.2188,     -6.4062,     -5.0312,     -6.7500,     -5.6250,     -6.5938,     -7.0312,     -2.7031],
        [     0.0737,     -4.3438,     -5.6875,     -5.2812,     -6.4062,     -6.5000,     -3.3438,     -4.8750,     -5.7188,     -4.8125,     -5.6875,     -4.4375,     -5.3438,     -5.7500,     -2.8594],
        [     0.0581,     -3.8750,     -5.5000,     -4.5625,     -6.5938,     -6.0312,     -4.1250,     -4.5625,     -5.5625,     -5.1875,     -6.3438,     -5.2500,     -5.3125,     -6.0000,     -2.6875],
        [     0.0850,     -0.4102,     -0.4355,      0.6445,     -1.6172,     -1.1719,     -0.5078,     -0.5859,     -0.4238,     -0.9141,     -1.7344,     -0.2520,     -0.7461,     -1.0078,     -0.0262],
        [     0.1367,     -2.8906,     -5.3750,     -5.4688,     -6.1875,     -5.7812,     -2.7188,     -3.6562,     -4.5938,     -4.2500,     -5.7500,     -4.8438,     -4.5312,     -5.1875,     -2.9375],
        [     0.0908,     -3.6719,     -5.8125,     -5.7812,     -6.7812,     -6.7500,     -4.2500,     -4.5625,     -5.7500,     -4.8438,     -6.3750,     -5.1875,     -5.6250,     -6.2500,     -2.6094],
        [     0.0532,     -0.5664,     -1.6406,     -0.8398,     -2.8906,     -0.9844,     -1.8750,     -0.3535,     -1.2734,     -1.8359,     -2.8281,     -1.8438,     -0.3848,     -1.7578,     -1.0078]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9850],
        [0.8991],
        [0.8185],
        [0.8553],
        [0.8142],
        [0.8174],
        [0.8097],
        [0.7813],
        [0.7424],
        [0.7239],
        [0.5759],
        [0.7384],
        [0.6701],
        [0.5833]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0156,     -0.8945,     -1.2500,     -1.1953,     -1.1641,     -1.0859,     -1.4844,     -1.2734,     -1.3828,     -1.3828,     -1.2656,     -1.1641,     -1.2578,     -1.2344,     -0.8555],
        [    -0.4199,    -28.2500,    -37.5000,    -34.5000,    -31.8750,    -31.2500,    -42.0000,    -36.7500,    -36.0000,    -37.7500,    -32.7500,    -33.5000,    -35.0000,    -32.2500,    -24.5000],
        [    -0.6602,    -38.7500,    -52.7500,    -50.0000,    -47.7500,    -45.0000,    -61.7500,    -53.5000,    -57.5000,    -58.0000,    -52.0000,    -48.0000,    -52.0000,    -51.0000,    -35.5000],
        [    -0.6328,    -38.0000,    -54.0000,    -50.2500,    -48.2500,    -45.0000,    -61.2500,    -52.5000,    -57.7500,    -57.2500,    -53.2500,    -49.2500,    -51.0000,    -51.5000,    -36.5000],
        [    -0.7305,    -40.7500,    -60.5000,    -56.7500,    -55.2500,    -51.0000,    -69.0000,    -58.2500,    -66.5000,    -64.0000,    -60.0000,    -54.7500,    -57.5000,    -58.5000,    -40.5000],
        [    -0.7617,    -42.5000,    -61.0000,    -58.2500,    -55.5000,    -52.2500,    -71.0000,    -61.7500,    -67.5000,    -67.0000,    -60.5000,    -57.0000,    -61.2500,    -59.7500,    -41.0000],
        [    -0.6875,    -41.2500,    -55.7500,    -53.2500,    -52.2500,    -48.7500,    -66.0000,    -57.7500,    -60.5000,    -61.5000,    -54.2500,    -51.7500,    -56.0000,    -54.5000,    -39.2500],
        [    -0.7305,    -41.7500,    -58.5000,    -56.7500,    -55.0000,    -51.0000,    -70.0000,    -61.0000,    -66.0000,    -65.0000,    -58.7500,    -55.0000,    -60.5000,    -58.7500,    -40.7500],
        [    -0.9531,    -53.5000,    -78.5000,    -74.0000,    -71.0000,    -67.0000,    -91.0000,    -78.0000,    -86.0000,    -85.0000,    -79.5000,    -72.5000,    -77.5000,    -77.0000,    -53.0000],
        [    -0.6562,    -37.5000,    -54.0000,    -51.2500,    -49.7500,    -47.0000,    -64.0000,    -55.2500,    -60.5000,    -59.5000,    -56.2500,    -51.2500,    -54.5000,    -54.2500,    -36.7500],
        [    -0.8828,    -48.7500,    -70.0000,    -67.5000,    -65.0000,    -60.5000,    -82.5000,    -71.5000,    -78.5000,    -77.0000,    -70.5000,    -65.0000,    -71.0000,    -69.0000,    -47.5000],
        [    -0.6289,    -37.2500,    -50.0000,    -47.2500,    -46.2500,    -43.2500,    -58.7500,    -52.0000,    -56.7500,    -55.5000,    -51.0000,    -46.5000,    -50.2500,    -50.0000,    -34.0000],
        [    -0.8438,    -47.2500,    -66.5000,    -64.5000,    -63.2500,    -58.7500,    -79.5000,    -70.0000,    -77.5000,    -74.5000,    -69.0000,    -63.2500,    -70.0000,    -69.0000,    -46.5000],
        [    -0.8789,    -50.7500,    -75.0000,    -69.5000,    -67.5000,    -65.0000,    -87.0000,    -75.0000,    -83.0000,    -80.5000,    -77.0000,    -70.0000,    -75.0000,    -74.0000,    -51.2500],
        [    -0.5703,    -30.2500,    -45.0000,    -43.2500,    -42.0000,    -37.2500,    -51.7500,    -43.5000,    -50.2500,    -48.7500,    -45.0000,    -40.5000,    -43.2500,    -43.7500,    -29.8750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9541],
        [0.9434],
        [0.9172],
        [0.8720],
        [0.8888],
        [0.8787],
        [0.8514],
        [0.8424],
        [0.8546],
        [0.8333],
        [0.8565],
        [0.8442],
        [0.8388],
        [0.7148]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9023, 0.0962, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2695, 0.6289, 0.1006, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0334, 0.1611, 0.0618, 0.7422, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5625, 0.0767, 0.2598, 0.0635, 0.0381, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7344, 0.0178, 0.1216, 0.0972, 0.0239, 0.0053, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0830, 0.1582, 0.0364, 0.0166, 0.0107, 0.5586, 0.1367, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6055, 0.0361, 0.1191, 0.0386, 0.0125, 0.0152, 0.1235, 0.0486, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4824, 0.0033, 0.2295, 0.0308, 0.0383, 0.0835, 0.1069, 0.0094, 0.0159, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4980, 0.0069, 0.1387, 0.0549, 0.0383, 0.0981, 0.0981, 0.0093, 0.0078, 0.0498, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1348, 0.1084, 0.0164, 0.0277, 0.0337, 0.4746, 0.0510, 0.0840, 0.0430, 0.0175, 0.0085, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0227, 0.0588, 0.0806, 0.2139, 0.0835, 0.0060, 0.0198, 0.0088, 0.0291, 0.1885, 0.0532, 0.2354, 0.0000, 0.0000, 0.0000],
        [0.3945, 0.0099, 0.1006, 0.0167, 0.0181, 0.0194, 0.1836, 0.0145, 0.0085, 0.0605, 0.0635, 0.1069, 0.0019, 0.0000, 0.0000],
        [0.1309, 0.0078, 0.1187, 0.0157, 0.1079, 0.3945, 0.0659, 0.0069, 0.0146, 0.0427, 0.0337, 0.0105, 0.0349, 0.0153, 0.0000],
        [0.0603, 0.2461, 0.0053, 0.0903, 0.0859, 0.0033, 0.0933, 0.0239, 0.0216, 0.0082, 0.0037, 0.2217, 0.0165, 0.0039, 0.1157]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0002,     -0.0874,      0.0332,     -0.0503,     -0.0082,      0.0566,     -0.0232,     -0.0471,     -0.0278,      0.0201,      0.0211,     -0.0630,     -0.0476,     -0.0016,     -0.0415],
        [     0.0403,     -2.2031,     -1.0000,     -3.3906,     -2.8750,      0.5820,      0.1309,     -0.2949,     -2.9688,     -1.6094,     -1.8125,     -2.5000,     -2.2969,     -2.5781,     -0.3379],
        [     0.0072,      0.8594,     -0.9766,      1.7109,      1.1641,     -2.0312,      0.3730,     -0.5312,      0.4219,     -0.4785,     -1.5234,      1.8828,     -2.3438,     -1.3828,      0.8594],
        [    -0.0164,      1.5547,      0.5938,      3.0781,      1.3516,     -1.7344,     -0.0146,     -0.8789,      1.8047,      2.5156,      0.7656,      3.2344,     -2.8906,      0.3750,      1.2422],
        [     0.0250,     -1.9688,     -0.7500,     -2.1562,     -2.6719,      2.7656,     -1.4531,     -0.7422,      0.0459,      0.1465,     -0.2715,     -4.0625,      1.1875,      0.8047,     -2.7500],
        [    -0.0115,     -3.7344,     -1.8125,     -2.0312,     -3.4375,     -4.9375,     -0.1172,     -2.0625,     -3.5938,     -2.0469,     -1.5469,      0.1406,     -5.3438,     -3.5625,     -0.3789],
        [     0.0194,      0.6641,     -0.8086,     -1.5938,     -2.0312,      1.9297,      0.5195,      1.7812,      0.3047,     -1.1016,     -0.0383,     -2.3906,      1.6172,      0.1426,     -0.4453],
        [    -0.0156,     -2.8281,     -1.6484,     -2.7656,     -3.9062,     -3.7031,     -1.6094,     -2.5312,     -3.3750,     -1.8984,     -1.8516,     -1.1484,     -4.4688,     -3.1875,     -1.0938],
        [    -0.0006,     -4.9688,     -0.7422,     -2.7500,     -2.5312,     -1.7578,     -1.5078,     -3.9375,     -3.4062,     -0.8867,     -0.9922,     -2.0156,     -4.3125,     -2.5938,     -2.5156],
        [    -0.0144,     -4.3125,     -1.2969,     -2.2188,     -2.5781,     -1.6406,     -1.6406,     -4.0000,     -4.1875,     -2.3125,     -3.5312,     -2.5469,     -4.2500,     -3.8125,     -2.2031],
        [     0.0413,     -0.1758,     -2.0625,     -1.5391,     -1.3438,      1.3047,     -0.9297,     -0.4277,     -1.1016,     -2.0000,     -2.7188,     -2.6406,      1.3750,     -1.3594,     -1.9297],
        [    -0.0140,      0.9375,      1.2500,      2.2344,      1.2891,     -1.3359,     -0.1514,     -0.9648,      0.2324,      2.0938,      0.8398,      2.3281,     -3.5469,     -0.5508,      1.2891],
        [    -0.0047,     -3.6875,     -1.3750,     -3.1719,     -3.0938,     -3.0156,     -0.7695,     -3.3125,     -3.8438,     -1.8828,     -1.8281,     -1.3125,     -5.3750,     -3.8438,     -1.2969],
        [     0.0109,     -2.8125,     -0.0889,     -2.1094,     -0.1826,      1.1094,     -0.6758,     -2.9219,     -2.1875,     -1.1094,     -1.3516,     -2.5156,     -1.3125,     -2.1406,     -2.1719],
        [    -0.0052,      1.3984,     -2.4375,      0.4004,      0.3516,     -2.9219,      0.4336,     -0.9297,     -1.0312,     -1.9922,     -2.7812,      1.2969,     -1.3047,     -2.7344,      0.6484]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9818],
        [0.7902],
        [0.8437],
        [0.8819],
        [0.9388],
        [0.8738],
        [0.9232],
        [0.8805],
        [0.8778],
        [0.8460],
        [0.7560],
        [0.8749],
        [0.8470],
        [0.7999]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9961,     0.0039,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1523,     0.7812,     0.0240,     0.0430,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8555,     0.0079,     0.0017,     0.0020,     0.1230,     0.0098,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.5117,     0.0012,     0.0103,     0.0801,     0.2471,     0.0221,     0.1289,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0593,     0.2236,     0.0261,     0.0476,     0.1040,     0.1660,     0.0503,     0.0889,     0.1729,     0.0623,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3008,     0.1895,     0.0444,     0.0234,     0.0591,     0.0332,     0.1260,     0.1162,     0.0206,     0.0267,     0.0282,     0.0312,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0000,     0.0002,     0.0000,     0.0049,     0.0000,     0.0001,     0.0001,     0.0007,     0.0001,     0.0006,     0.0001,     0.0004,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9648,     0.0013,     0.0020,     0.0008,     0.0065,     0.0008,     0.0005,     0.0005,     0.0017,     0.0011,     0.0010,     0.0011,     0.0006,     0.0020,     0.0170]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0012,     -0.2266,     -0.1807,     -0.2129,     -0.1543,     -0.2012,     -0.1865,     -0.2129,     -0.1973,     -0.2363,     -0.2520,     -0.2041,     -0.2168,     -0.2285,     -0.1494],
        [     0.0549,     15.8125,      8.6875,     11.6250,     10.0625,     14.1250,     11.8750,     13.3750,     10.8125,     12.0000,      9.8750,      7.7500,     10.0000,      7.3438,      4.0312],
        [     0.0776,     13.1250,      7.6250,      9.7500,      7.3750,     11.8125,     11.1875,     11.8125,      7.8125,      9.2500,      7.0938,      6.7500,      8.6875,      4.6875,      2.9844],
        [    -0.0054,      1.6250,     -1.8516,     -1.2734,      1.1250,      1.2500,      1.0547,      1.2109,     -0.3379,     -1.8438,     -3.9219,     -2.9531,     -2.1406,     -4.8750,     -3.5000],
        [    -0.1035,    -15.6875,    -13.0000,    -14.8750,     -7.6250,    -14.0000,    -13.1875,    -14.3750,    -11.4375,    -15.3125,    -15.5625,    -14.1875,    -14.5000,    -14.1250,     -9.4375],
        [    -0.0603,     -4.7500,     -6.2812,     -6.1250,     -2.0000,     -4.5312,     -5.3125,     -4.6562,     -2.7344,     -5.9062,     -6.0312,     -7.2188,     -5.8438,     -5.3438,     -4.7500],
        [    -0.1416,    -18.1250,    -14.9375,    -18.2500,    -10.8125,    -18.0000,    -16.3750,    -17.2500,    -13.6250,    -18.2500,    -15.6875,    -16.1250,    -15.3125,    -13.1250,     -9.0000],
        [     0.0099,      9.5625,      3.5156,      5.6875,      7.7188,      8.8750,      6.4375,      8.1875,      8.2500,      6.3438,      5.6562,      2.2344,      5.0625,      4.0938,      1.4375],
        [    -0.1475,    -25.8750,    -20.7500,    -24.1250,    -14.5625,    -23.7500,    -22.2500,    -24.3750,    -18.6250,    -24.6250,    -22.8750,    -22.0000,    -22.5000,    -20.1250,    -13.3125],
        [    -0.0167,      1.3125,     -0.8359,     -0.2324,      0.5469,      1.0156,     -0.1816,      0.3867,      1.0547,      0.0327,     -0.1504,     -1.7031,     -0.5586,     -0.1699,     -1.0625],
        [    -0.1377,    -25.0000,    -18.0000,    -22.3750,    -15.5625,    -23.8750,    -21.6250,    -23.8750,    -18.6250,    -22.6250,    -20.0000,    -18.7500,    -20.3750,    -16.6250,    -11.1875],
        [    -0.0188,     -0.4844,     -1.9375,     -2.5781,     -1.6484,     -2.2188,     -0.8945,     -0.9727,     -2.7031,     -2.4375,     -2.3906,     -2.2812,     -0.9375,     -2.5156,     -1.3359],
        [    -0.0767,    -10.6875,     -8.5625,    -10.7500,     -5.3750,    -10.6250,     -9.1250,     -9.9375,     -7.3438,     -9.8750,     -7.5312,     -9.4375,     -8.0000,     -5.6562,     -4.2188],
        [    -0.1934,    -36.2500,    -25.3750,    -31.6250,    -22.5000,    -34.2500,    -30.5000,    -33.5000,    -26.3750,    -31.6250,    -25.8750,    -25.3750,    -26.3750,    -21.0000,    -13.3750],
        [    -0.0562,     -6.6875,     -6.2188,     -7.1875,     -5.0625,     -7.1875,     -7.7188,     -7.7188,     -6.4062,     -6.7812,     -6.9375,     -6.8438,     -7.5312,     -6.2500,     -4.0938]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5839],
        [0.5834],
        [0.6034],
        [0.8312],
        [0.8304],
        [0.9167],
        [0.5816],
        [0.8339],
        [0.8041],
        [0.8766],
        [0.7347],
        [0.8939],
        [0.8445],
        [0.9023]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0003,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0038,     -0.5469,     -0.4297,     -0.4668,     -0.3809,     -0.5352,     -0.4453,     -0.5117,     -0.4531,     -0.4824,     -0.4766,     -0.4863,     -0.4785,     -0.4082,     -0.3008],
        [    -0.1465,    -24.2500,    -18.6250,    -21.3750,    -15.5000,    -24.8750,    -19.0000,    -22.6250,    -21.6250,    -21.3750,    -22.2500,    -20.0000,    -22.7500,    -19.3750,    -14.0000],
        [    -0.1074,    -18.8750,    -13.8750,    -15.7500,    -11.7500,    -18.8750,    -14.5625,    -16.6250,    -16.3750,    -16.3750,    -16.8750,    -15.0625,    -17.3750,    -15.1875,    -10.7500],
        [    -0.0952,    -18.2500,    -13.8750,    -16.1250,    -12.0000,    -18.5000,    -14.5000,    -16.3750,    -16.8750,    -16.8750,    -17.7500,    -14.8750,    -17.6250,    -15.4375,    -10.1875],
        [    -0.1396,    -24.3750,    -17.8750,    -22.6250,    -18.7500,    -24.7500,    -20.5000,    -22.8750,    -22.7500,    -22.5000,    -22.0000,    -20.1250,    -22.5000,    -19.8750,    -13.6875],
        [    -0.1230,    -21.0000,    -15.3125,    -19.7500,    -16.2500,    -22.5000,    -18.6250,    -20.8750,    -19.1250,    -19.6250,    -18.5000,    -17.2500,    -19.7500,    -15.8125,    -11.6250],
        [    -0.1855,    -27.0000,    -20.8750,    -24.8750,    -19.3750,    -26.2500,    -20.8750,    -24.3750,    -24.5000,    -24.2500,    -23.8750,    -23.3750,    -23.5000,    -21.1250,    -16.2500],
        [    -0.0928,    -13.3750,    -10.8750,    -12.6875,     -8.3125,    -12.8750,     -9.0625,    -11.5625,    -12.1250,    -12.3125,    -12.1875,    -12.0625,    -11.4375,    -10.6250,     -9.0625],
        [    -0.1680,    -31.7500,    -22.7500,    -29.3750,    -25.1250,    -31.7500,    -28.0000,    -30.1250,    -28.8750,    -29.5000,    -28.7500,    -26.6250,    -28.7500,    -25.8750,    -17.0000],
        [    -0.1035,    -19.8750,    -14.8750,    -18.3750,    -13.5625,    -20.5000,    -15.9375,    -18.2500,    -18.5000,    -18.2500,    -18.5000,    -16.0000,    -18.8750,    -16.6250,    -11.8125],
        [    -0.1328,    -31.3750,    -21.7500,    -29.6250,    -25.3750,    -31.7500,    -28.5000,    -29.6250,    -29.5000,    -29.6250,    -29.2500,    -24.5000,    -30.3750,    -26.7500,    -16.2500],
        [    -0.1416,    -25.1250,    -18.8750,    -22.1250,    -17.1250,    -23.7500,    -19.3750,    -21.7500,    -22.6250,    -22.3750,    -23.3750,    -20.8750,    -22.3750,    -20.7500,    -14.7500],
        [    -0.1543,    -25.7500,    -19.3750,    -24.5000,    -19.5000,    -25.2500,    -21.3750,    -23.6250,    -23.6250,    -23.8750,    -23.5000,    -22.3750,    -23.1250,    -20.6250,    -14.5625],
        [    -0.1475,    -31.2500,    -22.0000,    -29.3750,    -25.2500,    -30.5000,    -27.7500,    -29.0000,    -29.2500,    -29.3750,    -29.3750,    -26.0000,    -29.2500,    -27.1250,    -16.5000],
        [    -0.0801,    -18.1250,    -12.3125,    -16.2500,    -13.1250,    -18.6250,    -16.1250,    -16.8750,    -16.8750,    -16.6250,    -17.7500,    -14.5000,    -17.8750,    -15.8125,     -9.5625]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6668],
        [0.6846],
        [0.7821],
        [0.7419],
        [0.7181],
        [0.7549],
        [0.7020],
        [0.6733],
        [0.7184],
        [0.6668],
        [0.7541],
        [0.7820],
        [0.7295],
        [0.7531]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7344,     0.1064,     0.1582,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0000,     0.0001,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0022]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0033,     -0.7500,     -0.4238,     -0.5781,     -0.5000,     -0.6172,     -0.4902,     -0.6172,     -0.5859,     -0.6602,     -0.5859,     -0.5312,     -0.6211,     -0.5977,     -0.3125],
        [    -0.0986,    -21.7500,    -13.3750,    -17.6250,    -15.1250,    -18.1250,    -14.5000,    -17.7500,    -18.0000,    -19.1250,    -19.0000,    -15.5000,    -18.7500,    -18.7500,     -9.8750],
        [     0.0075,     -1.9297,     -1.5312,     -1.3672,     -1.4453,     -0.5000,      0.1206,     -0.6953,     -0.8711,     -1.0234,     -2.2656,     -0.2217,     -1.3438,     -1.0312,     -0.3066],
        [    -0.0723,    -15.0625,     -8.6875,    -11.5000,    -10.3750,    -11.9375,     -8.3125,    -11.5000,    -12.7500,    -13.3750,    -13.5000,     -9.2500,    -12.9375,    -12.8750,     -6.0312],
        [    -0.1650,    -35.2500,    -20.3750,    -26.8750,    -23.0000,    -28.5000,    -22.7500,    -28.5000,    -28.0000,    -30.6250,    -28.2500,    -24.6250,    -29.5000,    -28.8750,    -14.8750],
        [    -0.1436,    -31.6250,    -17.7500,    -23.3750,    -20.3750,    -25.3750,    -19.7500,    -24.8750,    -24.7500,    -27.6250,    -25.2500,    -21.8750,    -26.0000,    -25.5000,    -13.6875],
        [    -0.1611,    -33.2500,    -18.8750,    -24.8750,    -22.2500,    -27.2500,    -20.7500,    -26.8750,    -27.6250,    -29.1250,    -27.1250,    -22.6250,    -28.0000,    -27.8750,    -14.1875],
        [    -0.0859,    -17.0000,     -9.7500,    -12.2500,    -11.1250,    -13.3750,     -9.3750,    -12.6875,    -14.0625,    -14.8750,    -14.8125,    -11.1875,    -14.0625,    -14.4375,     -7.5312],
        [    -0.1895,    -41.5000,    -23.5000,    -31.7500,    -27.0000,    -33.7500,    -27.3750,    -34.0000,    -32.2500,    -36.0000,    -32.0000,    -29.8750,    -34.5000,    -33.5000,    -18.1250],
        [    -0.0786,    -18.2500,    -10.5625,    -14.5625,    -11.8750,    -15.0625,    -11.9375,    -14.1875,    -14.7500,    -15.8125,    -16.1250,    -13.1875,    -15.2500,    -15.6875,     -8.1875],
        [    -0.1670,    -38.0000,    -21.8750,    -29.5000,    -24.7500,    -30.6250,    -25.5000,    -30.7500,    -29.0000,    -32.5000,    -29.6250,    -27.1250,    -31.2500,    -30.2500,    -16.5000],
        [    -0.0884,    -20.1250,    -12.3125,    -16.1250,    -13.5000,    -16.5000,    -13.1250,    -16.5000,    -16.2500,    -17.3750,    -16.6250,    -14.3125,    -17.0000,    -16.7500,     -9.3750],
        [    -0.1377,    -30.5000,    -17.1250,    -23.2500,    -19.7500,    -24.3750,    -19.7500,    -24.5000,    -23.5000,    -26.3750,    -24.0000,    -22.1250,    -25.0000,    -24.3750,    -13.3125],
        [    -0.1650,    -38.7500,    -22.3750,    -30.6250,    -25.0000,    -31.2500,    -27.0000,    -32.2500,    -29.0000,    -33.2500,    -29.6250,    -29.1250,    -32.2500,    -30.8750,    -17.5000],
        [    -0.0452,    -15.0000,     -9.6250,    -12.6250,     -9.0000,    -11.6875,    -11.0000,    -12.5625,    -10.0625,    -12.8125,    -11.0625,    -11.5625,    -12.0625,    -11.3125,     -6.1562]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7413],
        [0.7638],
        [0.7346],
        [0.6351],
        [0.8066],
        [0.7596],
        [0.7713],
        [0.6714],
        [0.7351],
        [0.7446],
        [0.8224],
        [0.7869],
        [0.7272],
        [0.7107]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3027,     0.6992,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0043,     0.8359,     0.1582,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8203,     0.0247,     0.0947,     0.0608,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0000,     0.0003,     0.0001,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9492,     0.0002,     0.0075,     0.0020,     0.0177,     0.0048,     0.0076,     0.0015,     0.0078,     0.0007,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6445,     0.0078,     0.0508,     0.0276,     0.0737,     0.0142,     0.0515,     0.0187,     0.0403,     0.0183,     0.0128,     0.0415,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3906,     0.0403,     0.0522,     0.0231,     0.1079,     0.0535,     0.0623,     0.0396,     0.0786,     0.0159,     0.0312,     0.0171,     0.0186,     0.0386,     0.0305]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0002,     -0.0496,     -0.0254,     -0.0454,     -0.0271,     -0.0579,     -0.0413,     -0.0554,     -0.0522,     -0.0581,     -0.0693,     -0.0483,     -0.0664,     -0.0708,     -0.0258],
        [     0.0039,      0.8398,      0.0918,     -0.8438,     -0.3926,     -1.1875,     -0.5078,     -1.1562,     -1.1484,     -1.5391,     -2.1250,     -0.4902,     -1.9375,     -1.2734,     -1.5625],
        [     0.0051,      5.2812,      3.6094,      4.8750,      3.2344,      1.3359,      2.1250,      2.5156,      2.9375,      5.2188,      1.8984,      5.8125,      2.5156,      2.7656,      1.2031],
        [    -0.0034,     -3.5156,     -2.1562,     -2.6094,     -1.6875,     -2.7812,     -2.6250,     -3.1562,     -1.9844,     -3.0469,     -3.4375,     -3.1250,     -4.1562,     -3.5156,     -3.3438],
        [    -0.0344,    -18.3750,    -11.3125,    -15.4375,     -9.9375,    -11.7500,    -10.0000,    -13.7500,    -11.5625,    -17.7500,    -13.8125,    -17.7500,    -16.1250,    -14.7500,    -10.2500],
        [    -0.0344,    -17.5000,    -10.5625,    -14.6875,    -10.3125,    -12.2500,    -10.4375,    -14.2500,    -11.8125,    -18.2500,    -14.0625,    -17.1250,    -16.5000,    -14.3750,     -9.4375],
        [    -0.0275,    -15.8125,    -10.1250,    -13.8125,     -9.1250,    -11.2500,     -9.6875,    -12.9375,    -10.6250,    -16.3750,    -13.1875,    -15.8750,    -15.3750,    -13.5625,     -9.8125],
        [    -0.0247,    -14.3125,     -8.8750,    -12.1250,     -8.1875,     -9.9375,     -8.3125,    -11.4375,     -9.4375,    -14.5625,    -11.2500,    -13.6875,    -13.3125,    -11.3125,     -8.2500],
        [    -0.0544,    -24.0000,    -14.0000,    -19.2500,    -13.0000,    -15.8750,    -13.4375,    -18.5000,    -15.6875,    -23.1250,    -18.1250,    -22.3750,    -21.0000,    -19.2500,    -11.8750],
        [    -0.0156,     -8.6250,     -4.8438,     -6.1562,     -4.0000,     -5.3125,     -4.8438,     -6.5000,     -4.8125,     -7.2188,     -6.7188,     -7.8125,     -7.8438,     -7.0000,     -5.3438],
        [    -0.0469,    -22.0000,    -13.0625,    -17.7500,    -12.5000,    -14.0625,    -13.4375,    -17.1250,    -14.0000,    -21.0000,    -16.7500,    -21.1250,    -19.7500,    -18.3750,    -11.0000],
        [    -0.0016,     -4.4062,     -2.5469,     -3.1406,     -2.1719,     -3.8125,     -2.5312,     -3.5469,     -2.7656,     -3.5625,     -3.9219,     -2.7344,     -4.0625,     -3.2656,     -2.4688],
        [    -0.0364,    -19.7500,    -12.0000,    -16.3750,    -11.2500,    -13.0625,    -11.6250,    -15.3750,    -12.8125,    -19.1250,    -15.1250,    -19.1250,    -17.8750,    -15.8750,    -11.2500],
        [    -0.0579,    -23.8750,    -13.7500,    -18.5000,    -13.1250,    -16.0000,    -14.6875,    -18.8750,    -15.5000,    -22.2500,    -18.6250,    -22.5000,    -21.8750,    -20.3750,    -12.4375],
        [     0.0022,     -2.2656,     -2.0000,     -2.8281,     -1.2891,     -1.9844,     -1.8359,     -2.2812,     -1.6016,     -3.2031,     -2.5156,     -3.1250,     -3.0469,     -2.3125,     -2.5469]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2664],
        [0.0924],
        [0.1809],
        [0.7423],
        [0.6300],
        [0.7321],
        [0.4956],
        [0.6808],
        [0.3264],
        [0.6640],
        [0.3579],
        [0.6292],
        [0.6622],
        [0.4596]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0002,     -0.7305,     -1.1250,     -1.0000,     -0.4043,     -0.5195,     -0.4258,     -0.6055,     -0.3359,     -0.4629,     -0.2617,     -0.6055,     -0.3926,     -0.2949,     -0.4609],
        [    -0.0168,    -69.5000,   -106.0000,    -94.5000,    -39.5000,    -50.5000,    -41.5000,    -58.5000,    -34.5000,    -46.5000,    -27.3750,    -57.2500,    -39.5000,    -30.6250,    -43.0000],
        [    -0.0228,   -114.0000,   -175.0000,   -157.0000,    -63.7500,    -82.0000,    -66.5000,    -95.5000,    -53.5000,    -73.0000,    -41.2500,    -95.0000,    -62.0000,    -46.7500,    -72.0000],
        [    -0.0248,    -89.0000,   -136.0000,   -121.5000,    -50.0000,    -64.5000,    -52.5000,    -75.0000,    -42.7500,    -58.0000,    -33.2500,    -74.0000,    -49.5000,    -37.2500,    -55.5000],
        [    -0.0157,    -38.7500,    -59.0000,    -52.5000,    -22.1250,    -27.6250,    -22.2500,    -32.2500,    -18.6250,    -24.8750,    -13.8125,    -31.6250,    -20.8750,    -15.5000,    -23.7500],
        [    -0.0145,    -51.5000,    -78.0000,    -69.5000,    -29.1250,    -37.5000,    -30.3750,    -43.5000,    -26.1250,    -34.7500,    -20.6250,    -42.0000,    -29.5000,    -23.1250,    -32.0000],
        [    -0.0181,    -42.7500,    -64.5000,    -57.7500,    -23.8750,    -31.0000,    -25.2500,    -36.2500,    -21.1250,    -28.5000,    -16.2500,    -35.2500,    -24.2500,    -18.5000,    -26.3750],
        [    -0.0188,    -66.5000,   -101.0000,    -90.0000,    -37.5000,    -48.2500,    -39.5000,    -56.2500,    -33.0000,    -44.5000,    -26.0000,    -54.7500,    -38.0000,    -29.2500,    -41.0000],
        [    -0.0101,    -36.2500,    -54.7500,    -48.5000,    -21.2500,    -26.6250,    -21.7500,    -30.7500,    -19.5000,    -25.1250,    -15.8750,    -29.1250,    -21.5000,    -17.3750,    -21.8750],
        [    -0.0128,    -59.7500,    -91.0000,    -81.5000,    -34.0000,    -43.2500,    -35.5000,    -50.5000,    -29.8750,    -40.0000,    -23.6250,    -49.5000,    -34.2500,    -26.6250,    -37.2500],
        [    -0.0098,    -33.5000,    -50.5000,    -45.0000,    -19.7500,    -24.7500,    -20.0000,    -28.5000,    -18.2500,    -23.2500,    -14.8125,    -26.8750,    -20.0000,    -16.3750,    -20.1250],
        [    -0.0178,    -58.7500,    -89.5000,    -80.0000,    -32.7500,    -42.2500,    -34.7500,    -49.5000,    -28.0000,    -38.2500,    -21.8750,    -49.2500,    -33.0000,    -24.6250,    -36.5000],
        [    -0.0176,    -56.0000,    -85.0000,    -76.0000,    -31.6250,    -40.7500,    -33.2500,    -47.5000,    -28.2500,    -38.0000,    -22.1250,    -46.0000,    -32.2500,    -25.0000,    -34.5000],
        [    -0.0083,    -42.0000,    -64.0000,    -57.0000,    -24.3750,    -30.8750,    -25.0000,    -35.5000,    -22.0000,    -28.8750,    -17.6250,    -34.2500,    -24.5000,    -19.6250,    -25.8750],
        [    -0.0078,    -34.0000,    -52.2500,    -46.5000,    -19.0000,    -24.3750,    -20.2500,    -28.3750,    -16.2500,    -22.2500,    -13.0625,    -28.1250,    -18.8750,    -14.5000,    -21.1250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7432],
        [0.5833],
        [0.5891],
        [0.6667],
        [0.7480],
        [0.7500],
        [0.7477],
        [0.6696],
        [0.5834],
        [0.6671],
        [0.6667],
        [0.7318],
        [0.6664],
        [0.5976]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0012,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0107,     0.9883,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.0141,     0.1084,     0.8789,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9844,     0.0000,     0.0000,     0.0001,     0.0149,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9844,     0.0002,     0.0000,     0.0004,     0.0053,     0.0009,     0.0014,     0.0010,     0.0047,     0.0025,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0005,     0.0000,     0.0000,     0.0000,     0.0004,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8867,     0.0003,     0.0002,     0.0030,     0.0140,     0.0016,     0.0023,     0.0030,     0.0081,     0.0046,     0.0035,     0.0723,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9609,     0.0001,     0.0000,     0.0003,     0.0056,     0.0004,     0.0009,     0.0005,     0.0026,     0.0011,     0.0012,     0.0082,     0.0004,     0.0011,     0.0156]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0003,     -0.1221,     -0.1484,     -0.1201,     -0.0618,     -0.0771,     -0.0918,     -0.0889,     -0.0471,     -0.0874,     -0.0664,     -0.0583,     -0.0938,     -0.0693,     -0.0474],
        [    -0.0004,     -6.7812,     -7.6562,     -5.0312,     -4.6562,     -6.2812,     -5.8438,     -5.3750,     -5.1250,     -4.7500,     -5.6875,     -1.2344,     -7.0000,     -5.6562,     -2.7969],
        [     0.0047,     13.8125,     18.3750,     19.1250,      2.1250,      5.6562,      2.3438,      9.1250,      2.6562,     12.6250,      2.8281,     20.7500,      2.0781,      3.4531,      9.1875],
        [     0.0033,      4.5938,      6.6250,      8.6875,     -0.4609,      0.4551,     -1.2266,      3.0781,     -0.5156,      5.0000,     -1.0234,     11.2500,     -2.1406,     -0.8359,      3.7500],
        [    -0.0049,    -10.5000,    -11.5625,     -9.8125,     -4.1875,     -7.1562,     -6.1875,     -7.2500,     -5.2812,     -8.3750,     -6.7188,     -6.5938,     -7.3125,     -6.9375,     -4.9688],
        [    -0.0109,    -20.7500,    -25.3750,    -20.6250,     -8.6250,    -13.9375,    -12.3750,    -14.6250,     -9.6875,    -15.8125,    -12.1250,    -13.0625,    -14.1875,    -12.5000,    -10.0000],
        [    -0.0175,    -21.7500,    -25.3750,    -20.8750,     -8.1875,    -14.6250,    -11.2500,    -14.9375,    -10.5000,    -17.2500,    -12.9375,    -16.0000,    -13.9375,    -13.0000,    -11.7500],
        [    -0.0110,    -18.0000,    -21.2500,    -16.6250,     -8.0000,    -12.9375,    -11.5000,    -12.6875,     -9.3125,    -13.5000,    -11.6250,     -9.8125,    -13.5000,    -11.8750,     -8.4375],
        [    -0.0154,    -28.5000,    -35.2500,    -30.0000,    -10.5625,    -18.2500,    -15.0625,    -20.1250,    -12.3750,    -22.0000,    -14.6250,    -22.3750,    -16.7500,    -15.4375,    -14.3125],
        [    -0.0023,     -8.5625,    -10.0000,     -7.8438,     -5.2188,     -7.0312,     -6.5625,     -6.9062,     -5.3438,     -5.9688,     -5.7812,     -3.5781,     -7.0312,     -5.8438,     -3.0625],
        [    -0.0086,    -18.5000,    -23.0000,    -19.5000,     -7.6250,    -11.8750,    -10.5000,    -13.5625,     -7.9375,    -13.8750,     -9.0625,    -14.0000,    -11.0625,     -9.5000,     -8.7500],
        [    -0.0052,     -7.9375,     -8.5000,     -5.6875,     -4.1562,     -6.3438,     -5.9375,     -5.6875,     -4.7188,     -5.2812,     -5.5312,     -2.5156,     -6.9688,     -5.6250,     -3.6094],
        [    -0.0103,    -21.8750,    -25.8750,    -21.3750,     -9.6250,    -15.3750,    -12.8750,    -15.6250,    -10.8750,    -16.6250,    -13.0625,    -13.8750,    -15.1250,    -13.1875,    -10.5625],
        [    -0.0151,    -28.7500,    -35.2500,    -30.0000,    -11.0625,    -18.6250,    -14.8750,    -20.2500,    -12.7500,    -22.2500,    -14.8125,    -22.6250,    -17.1250,    -15.3750,    -14.8125],
        [    -0.0078,     -9.6875,    -10.8125,     -8.1250,     -5.1562,     -7.6875,     -7.0312,     -7.5000,     -5.9375,     -6.8125,     -6.6875,     -4.7812,     -7.8438,     -6.8125,     -4.1250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6935],
        [0.4021],
        [0.5508],
        [0.7500],
        [0.7584],
        [0.8848],
        [0.8187],
        [0.7547],
        [0.6647],
        [0.7550],
        [0.7074],
        [0.7534],
        [0.7408],
        [0.6474]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.0515 the:0.1040,:0.0859
:0.0248ford:0.0137,:0.1240 a:0.0737vern:0.0679)
vern
------
		( the:0.1040,:0.0859
:0.0248ford:0.0137,:0.1240 a:0.0737vern:0.0679,:0.0079)
, and, in the
hool, is a, sweet, sweet
@ 3050 train 4.2500 , allloss: 4.2500, dt: 1174.79ms, fracRes: 0.4785, norm(attn): 1.0156, norm(output): 0.7070, norm(x): 1.1175, norm(y): 0.9921, norm:0.6051, tok/sec: 111570.90, flops:117.13, batch-reuse:1
@ 3051 train 4.2085 , allloss: 4.2085, dt: 757.26ms, fracRes: 0.4722, norm(attn): 1.0078, norm(output): 0.6914, norm(x): 1.0959, norm(y): 0.9924, norm:0.5468, tok/sec: 173087.65, flops:181.71, batch-reuse:1
@ 3052 train 4.1537 , allloss: 4.1537, dt: 709.19ms, fracRes: 0.4728, norm(attn): 1.0078, norm(output): 0.6914, norm(x): 1.0972, norm(y): 0.9927, norm:0.5680, tok/sec: 184820.45, flops:194.02, batch-reuse:1
@ 3053 train 4.1443 , allloss: 4.1443, dt: 696.97ms, fracRes: 0.4778, norm(attn): 0.9961, norm(output): 0.7109, norm(x): 1.1179, norm(y): 0.9919, norm:0.5626, tok/sec: 188060.78, flops:197.43, batch-reuse:1
@ 3054 train 4.1891 , allloss: 4.1891, dt: 703.99ms, fracRes: 0.4773, norm(attn): 1.0000, norm(output): 0.6953, norm(x): 1.1096, norm(y): 0.9924, norm:0.5533, tok/sec: 186184.85, flops:195.46, batch-reuse:1
@ 3055 train 4.1232 , allloss: 4.1232, dt: 695.78ms, fracRes: 0.4727, norm(attn): 1.0000, norm(output): 0.6914, norm(x): 1.1005, norm(y): 0.9923, norm:0.5389, tok/sec: 188381.18, flops:197.76, batch-reuse:1
@ 3056 train 4.1960 , allloss: 4.1960, dt: 702.45ms, fracRes: 0.4763, norm(attn): 1.0000, norm(output): 0.7031, norm(x): 1.1111, norm(y): 0.9922, norm:0.5387, tok/sec: 186593.39, flops:195.89, batch-reuse:1
@ 3057 train 4.1429 , allloss: 4.1429, dt: 703.55ms, fracRes: 0.4818, norm(attn): 0.9844, norm(output): 0.7148, norm(x): 1.1208, norm(y): 0.9922, norm:0.5242, tok/sec: 186301.63, flops:195.58, batch-reuse:1
@ 3058 train 4.1837 , allloss: 4.1837, dt: 694.42ms, fracRes: 0.4775, norm(attn): 0.9961, norm(output): 0.6992, norm(x): 1.1095, norm(y): 0.9924, norm:0.5794, tok/sec: 188749.45, flops:198.15, batch-reuse:1
@ 3059 train 4.1363 , allloss: 4.1363, dt: 709.06ms, fracRes: 0.4775, norm(attn): 1.0000, norm(output): 0.6953, norm(x): 1.1019, norm(y): 0.9922, norm:0.5014, tok/sec: 184852.58, flops:194.06, batch-reuse:1
@ 3060 train 4.3312 , allloss: 4.3312, dt: 696.79ms, fracRes: 0.4772, norm(attn): 1.0000, norm(output): 0.6953, norm(x): 1.1013, norm(y): 0.9933, norm:0.5754, tok/sec: 188107.69, flops:197.48, batch-reuse:1
@ 3061 train 4.0312 , allloss: 4.0312, dt: 704.60ms, fracRes: 0.4752, norm(attn): 1.0156, norm(output): 0.7070, norm(x): 1.1132, norm(y): 0.9918, norm:0.7653, tok/sec: 186022.49, flops:195.29, batch-reuse:1
@ 3062 train 4.0862 , allloss: 4.0862, dt: 709.68ms, fracRes: 0.4780, norm(attn): 0.9961, norm(output): 0.7031, norm(x): 1.1092, norm(y): 0.9919, norm:0.5514, tok/sec: 184692.91, flops:193.89, batch-reuse:1
@ 3063 train 4.1248 , allloss: 4.1248, dt: 709.31ms, fracRes: 0.4736, norm(attn): 1.0000, norm(output): 0.6992, norm(x): 1.1072, norm(y): 0.9921, norm:0.5432, tok/sec: 184787.52, flops:193.99, batch-reuse:1
@ 3064 train 4.0660 , allloss: 4.0660, dt: 708.60ms, fracRes: 0.4707, norm(attn): 1.0312, norm(output): 0.6953, norm(x): 1.1013, norm(y): 0.9926, norm:0.5419, tok/sec: 184973.24, flops:194.19, batch-reuse:1
@ 3065 train 4.1976 , allloss: 4.1976, dt: 702.91ms, fracRes: 0.4689, norm(attn): 1.0078, norm(output): 0.6914, norm(x): 1.1008, norm(y): 0.9925, norm:0.5195, tok/sec: 186471.68, flops:195.76, batch-reuse:1
@ 3066 train 4.2045 , allloss: 4.2045, dt: 708.15ms, fracRes: 0.4711, norm(attn): 0.9961, norm(output): 0.6992, norm(x): 1.1031, norm(y): 0.9915, norm:0.5026, tok/sec: 185091.94, flops:194.31, batch-reuse:1
@ 3067 train 4.2464 , allloss: 4.2464, dt: 689.88ms, fracRes: 0.4729, norm(attn): 1.0000, norm(output): 0.7031, norm(x): 1.1067, norm(y): 0.9924, norm:0.5622, tok/sec: 189993.67, flops:199.46, batch-reuse:1
@ 3068 train 4.1179 , allloss: 4.1179, dt: 687.05ms, fracRes: 0.4748, norm(attn): 0.9922, norm(output): 0.7031, norm(x): 1.1101, norm(y): 0.9916, norm:0.5270, tok/sec: 190775.16, flops:200.28, batch-reuse:1
@ 3069 train 4.1578 , allloss: 4.1578, dt: 692.35ms, fracRes: 0.4724, norm(attn): 0.9805, norm(output): 0.6953, norm(x): 1.1032, norm(y): 0.9919, norm:0.6095, tok/sec: 189314.68, flops:198.74, batch-reuse:1
@ 3070 train 4.1226 , allloss: 4.1226, dt: 692.10ms, fracRes: 0.4703, norm(attn): 0.9766, norm(output): 0.6992, norm(x): 1.0992, norm(y): 0.9917, norm:0.6711, tok/sec: 189381.85, flops:198.81, batch-reuse:1
@ 3071 train 4.1295 , allloss: 4.1295, dt: 700.87ms, fracRes: 0.4717, norm(attn): 0.9766, norm(output): 0.7109, norm(x): 1.1078, norm(y): 0.9915, norm:0.6093, tok/sec: 187012.76, flops:196.33, batch-reuse:1
@ 3072 train 4.1293 , allloss: 4.1293, dt: 705.66ms, fracRes: 0.4686, norm(attn): 0.9766, norm(output): 0.7031, norm(x): 1.1020, norm(y): 0.9921, norm:0.6062, tok/sec: 185742.87, flops:194.99, batch-reuse:1
@ 3073 train 4.0806 , allloss: 4.0806, dt: 699.23ms, fracRes: 0.4668, norm(attn): 0.9766, norm(output): 0.6914, norm(x): 1.0888, norm(y): 0.9906, norm:0.5613, tok/sec: 187450.71, flops:196.79, batch-reuse:1
@ 3074 train 4.0601 , allloss: 4.0601, dt: 694.67ms, fracRes: 0.4769, norm(attn): 0.9688, norm(output): 0.7109, norm(x): 1.1140, norm(y): 0.9921, norm:0.5511, tok/sec: 188682.21, flops:198.08, batch-reuse:1
@ 3075 train 4.1495 , allloss: 4.1495, dt: 711.51ms, fracRes: 0.4771, norm(attn): 0.9609, norm(output): 0.7031, norm(x): 1.1114, norm(y): 0.9913, norm:0.5669, tok/sec: 184216.68, flops:193.39, batch-reuse:1
@ 3076 train 4.0777 , allloss: 4.0777, dt: 708.57ms, fracRes: 0.4735, norm(attn): 0.9570, norm(output): 0.6914, norm(x): 1.0928, norm(y): 0.9913, norm:0.6427, tok/sec: 184982.20, flops:194.19, batch-reuse:1
@ 3077 train 4.1089 , allloss: 4.1089, dt: 709.58ms, fracRes: 0.4730, norm(attn): 0.9531, norm(output): 0.6914, norm(x): 1.0920, norm(y): 0.9916, norm:0.6482, tok/sec: 184718.98, flops:193.92, batch-reuse:1
@ 3078 train 4.0953 , allloss: 4.0953, dt: 707.78ms, fracRes: 0.4752, norm(attn): 0.9648, norm(output): 0.6992, norm(x): 1.1017, norm(y): 0.9913, norm:0.4972, tok/sec: 185187.21, flops:194.41, batch-reuse:1
@ 3079 train 4.0716 , allloss: 4.0716, dt: 696.52ms, fracRes: 0.4748, norm(attn): 0.9805, norm(output): 0.6914, norm(x): 1.0968, norm(y): 0.9925, norm:0.5952, tok/sec: 188180.45, flops:197.55, batch-reuse:1
@ 3080 train 4.2031 , allloss: 4.2031, dt: 703.35ms, fracRes: 0.4776, norm(attn): 0.9492, norm(output): 0.6992, norm(x): 1.1062, norm(y): 0.9919, norm:0.5391, tok/sec: 186353.29, flops:195.63, batch-reuse:1
@ 3081 train 4.1738 , allloss: 4.1738, dt: 694.31ms, fracRes: 0.4753, norm(attn): 0.9609, norm(output): 0.7031, norm(x): 1.1060, norm(y): 0.9919, norm:0.5309, tok/sec: 188780.11, flops:198.18, batch-reuse:1
@ 3082 train 4.1652 , allloss: 4.1652, dt: 709.45ms, fracRes: 0.4768, norm(attn): 0.9648, norm(output): 0.7031, norm(x): 1.1090, norm(y): 0.9919, norm:0.5353, tok/sec: 184751.26, flops:193.95, batch-reuse:1
@ 3083 train 4.0838 , allloss: 4.0838, dt: 708.36ms, fracRes: 0.4745, norm(attn): 0.9570, norm(output): 0.6992, norm(x): 1.1040, norm(y): 0.9918, norm:0.5042, tok/sec: 185036.06, flops:194.25, batch-reuse:1
@ 3084 train 4.0880 , allloss: 4.0880, dt: 708.91ms, fracRes: 0.4769, norm(attn): 0.9727, norm(output): 0.7031, norm(x): 1.1082, norm(y): 0.9923, norm:0.5197, tok/sec: 184892.55, flops:194.10, batch-reuse:1
@ 3085 train 4.1749 , allloss: 4.1749, dt: 681.32ms, fracRes: 0.4714, norm(attn): 0.9883, norm(output): 0.7031, norm(x): 1.1002, norm(y): 0.9915, norm:0.5378, tok/sec: 192380.72, flops:201.96, batch-reuse:1
@ 3086 train 4.0181 , allloss: 4.0181, dt: 692.43ms, fracRes: 0.4764, norm(attn): 0.9961, norm(output): 0.7070, norm(x): 1.1153, norm(y): 0.9910, norm:0.4640, tok/sec: 189292.71, flops:198.72, batch-reuse:1
@ 3087 train 4.1195 , allloss: 4.1195, dt: 692.98ms, fracRes: 0.4758, norm(attn): 1.0000, norm(output): 0.6953, norm(x): 1.1040, norm(y): 0.9913, norm:0.5529, tok/sec: 189142.46, flops:198.56, batch-reuse:1
@ 3088 train 4.1125 , allloss: 4.1125, dt: 691.01ms, fracRes: 0.4706, norm(attn): 1.0078, norm(output): 0.6914, norm(x): 1.0927, norm(y): 0.9925, norm:0.4911, tok/sec: 189680.53, flops:199.13, batch-reuse:1
@ 3089 train 4.1420 , allloss: 4.1420, dt: 689.27ms, fracRes: 0.4749, norm(attn): 1.0234, norm(output): 0.7031, norm(x): 1.1064, norm(y): 0.9921, norm:0.4901, tok/sec: 190161.32, flops:199.63, batch-reuse:1
@ 3090 train 4.0357 , allloss: 4.0357, dt: 686.43ms, fracRes: 0.4757, norm(attn): 1.0078, norm(output): 0.7031, norm(x): 1.1035, norm(y): 0.9920, norm:0.5454, tok/sec: 190947.97, flops:200.46, batch-reuse:1
@ 3091 train 4.2530 , allloss: 4.2530, dt: 691.44ms, fracRes: 0.4798, norm(attn): 1.0156, norm(output): 0.7031, norm(x): 1.1148, norm(y): 0.9922, norm:0.4989, tok/sec: 189563.19, flops:199.00, batch-reuse:1
@ 3092 train 4.1047 , allloss: 4.1047, dt: 679.39ms, fracRes: 0.4792, norm(attn): 1.0156, norm(output): 0.7031, norm(x): 1.1088, norm(y): 0.9912, norm:0.4897, tok/sec: 192926.43, flops:202.53, batch-reuse:1
@ 3093 train 4.1159 , allloss: 4.1159, dt: 698.35ms, fracRes: 0.4823, norm(attn): 1.0156, norm(output): 0.6992, norm(x): 1.1107, norm(y): 0.9916, norm:0.4758, tok/sec: 187687.24, flops:197.03, batch-reuse:1
@ 3094 train 4.0993 , allloss: 4.0993, dt: 683.62ms, fracRes: 0.4838, norm(attn): 1.0078, norm(output): 0.6992, norm(x): 1.1102, norm(y): 0.9926, norm:0.4805, tok/sec: 191733.26, flops:201.28, batch-reuse:1
@ 3095 train 4.1214 , allloss: 4.1214, dt: 701.56ms, fracRes: 0.4841, norm(attn): 1.0000, norm(output): 0.6953, norm(x): 1.1075, norm(y): 0.9923, norm:0.4380, tok/sec: 186830.68, flops:196.14, batch-reuse:1
@ 3096 train 4.1788 , allloss: 4.1788, dt: 701.31ms, fracRes: 0.4858, norm(attn): 1.0000, norm(output): 0.7031, norm(x): 1.1183, norm(y): 0.9927, norm:0.4816, tok/sec: 186895.91, flops:196.20, batch-reuse:1
@ 3097 train 4.1324 , allloss: 4.1324, dt: 695.56ms, fracRes: 0.4835, norm(attn): 1.0078, norm(output): 0.7070, norm(x): 1.1229, norm(y): 0.9928, norm:0.5289, tok/sec: 188440.07, flops:197.82, batch-reuse:1
@ 3098 train 4.1308 , allloss: 4.1308, dt: 692.93ms, fracRes: 0.4759, norm(attn): 1.0234, norm(output): 0.6914, norm(x): 1.0993, norm(y): 0.9916, norm:0.4551, tok/sec: 189156.13, flops:198.58, batch-reuse:1
@ 3099 train 4.1492 , allloss: 4.1492, dt: 692.94ms, fracRes: 0.4739, norm(attn): 1.0234, norm(output): 0.6992, norm(x): 1.1005, norm(y): 0.9915, norm:0.4452, tok/sec: 189153.98, flops:198.57, batch-reuse:1
@ 3100 train 4.0190 , allloss: 4.0190, dt: 694.81ms, fracRes: 0.4786, norm(attn): 1.0078, norm(output): 0.7031, norm(x): 1.1076, norm(y): 0.9914, norm:0.5117, tok/sec: 188643.24, flops:198.04, batch-reuse:1
@ 3101 train 4.0595 , allloss: 4.0595, dt: 703.71ms, fracRes: 0.4842, norm(attn): 1.0156, norm(output): 0.7109, norm(x): 1.1247, norm(y): 0.9915, norm:0.4670, tok/sec: 186259.34, flops:195.54, batch-reuse:1
@ 3102 train 4.1291 , allloss: 4.1291, dt: 706.92ms, fracRes: 0.4816, norm(attn): 1.0156, norm(output): 0.7109, norm(x): 1.1187, norm(y): 0.9923, norm:0.5277, tok/sec: 185413.68, flops:194.65, batch-reuse:1
@ 3103 train 4.0997 , allloss: 4.0997, dt: 704.44ms, fracRes: 0.4797, norm(attn): 1.0234, norm(output): 0.7031, norm(x): 1.1106, norm(y): 0.9922, norm:0.5294, tok/sec: 186065.31, flops:195.33, batch-reuse:1
@ 3104 train 4.0065 , allloss: 4.0065, dt: 706.84ms, fracRes: 0.4773, norm(attn): 1.0234, norm(output): 0.6953, norm(x): 1.1032, norm(y): 0.9912, norm:0.4966, tok/sec: 185432.75, flops:194.67, batch-reuse:1
@ 3105 train 4.1559 , allloss: 4.1559, dt: 711.73ms, fracRes: 0.4785, norm(attn): 1.0234, norm(output): 0.6992, norm(x): 1.1094, norm(y): 0.9914, norm:0.4772, tok/sec: 184159.48, flops:193.33, batch-reuse:1
@ 3106 train 4.0588 , allloss: 4.0588, dt: 712.72ms, fracRes: 0.4753, norm(attn): 1.0312, norm(output): 0.6992, norm(x): 1.1034, norm(y): 0.9915, norm:0.5892, tok/sec: 183905.05, flops:193.06, batch-reuse:1
@ 3107 train 4.0321 , allloss: 4.0321, dt: 689.36ms, fracRes: 0.4746, norm(attn): 1.0312, norm(output): 0.6953, norm(x): 1.0995, norm(y): 0.9917, norm:0.5231, tok/sec: 190136.86, flops:199.61, batch-reuse:1
@ 3108 train 4.1282 , allloss: 4.1282, dt: 680.89ms, fracRes: 0.4725, norm(attn): 1.0547, norm(output): 0.7031, norm(x): 1.1026, norm(y): 0.9916, norm:0.4992, tok/sec: 192501.04, flops:202.09, batch-reuse:1
@ 3109 train 4.0225 , allloss: 4.0225, dt: 694.89ms, fracRes: 0.4764, norm(attn): 1.0391, norm(output): 0.7031, norm(x): 1.1120, norm(y): 0.9908, norm:0.5861, tok/sec: 188623.82, flops:198.02, batch-reuse:1
@ 3110 train 4.0428 , allloss: 4.0428, dt: 684.26ms, fracRes: 0.4734, norm(attn): 1.0312, norm(output): 0.6992, norm(x): 1.1003, norm(y): 0.9911, norm:0.4201, tok/sec: 191553.62, flops:201.09, batch-reuse:1
@ 3111 train 4.1645 , allloss: 4.1645, dt: 695.40ms, fracRes: 0.4766, norm(attn): 1.0391, norm(output): 0.7031, norm(x): 1.1072, norm(y): 0.9921, norm:0.5118, tok/sec: 188483.94, flops:197.87, batch-reuse:1
@ 3112 train 4.0092 , allloss: 4.0092, dt: 688.01ms, fracRes: 0.4793, norm(attn): 1.0469, norm(output): 0.6992, norm(x): 1.1079, norm(y): 0.9923, norm:0.5031, tok/sec: 190507.94, flops:200.00, batch-reuse:1
@ 3113 train 4.0538 , allloss: 4.0538, dt: 696.36ms, fracRes: 0.4776, norm(attn): 1.0547, norm(output): 0.6953, norm(x): 1.1059, norm(y): 0.9917, norm:0.4281, tok/sec: 188223.23, flops:197.60, batch-reuse:1
@ 3114 train 4.0494 , allloss: 4.0494, dt: 694.12ms, fracRes: 0.4761, norm(attn): 1.0469, norm(output): 0.7031, norm(x): 1.1062, norm(y): 0.9910, norm:0.4653, tok/sec: 188832.63, flops:198.24, batch-reuse:1
@ 3115 train 4.0220 , allloss: 4.0220, dt: 688.07ms, fracRes: 0.4803, norm(attn): 1.0469, norm(output): 0.7109, norm(x): 1.1144, norm(y): 0.9931, norm:0.5388, tok/sec: 190492.36, flops:199.98, batch-reuse:1
@ 3116 train 4.0102 , allloss: 4.0102, dt: 697.62ms, fracRes: 0.4796, norm(attn): 1.0391, norm(output): 0.7070, norm(x): 1.1095, norm(y): 0.9914, norm:0.5643, tok/sec: 187883.90, flops:197.24, batch-reuse:1
@ 3117 train 4.0157 , allloss: 4.0157, dt: 686.77ms, fracRes: 0.4776, norm(attn): 1.0469, norm(output): 0.7070, norm(x): 1.1112, norm(y): 0.9917, norm:0.4807, tok/sec: 190851.98, flops:200.36, batch-reuse:1
@ 3118 train 3.9808 , allloss: 3.9808, dt: 698.38ms, fracRes: 0.4706, norm(attn): 1.0547, norm(output): 0.6914, norm(x): 1.0947, norm(y): 0.9908, norm:0.5060, tok/sec: 187678.84, flops:197.03, batch-reuse:1
@ 3119 train 4.3041 , allloss: 4.3041, dt: 695.02ms, fracRes: 0.4757, norm(attn): 1.0625, norm(output): 0.7070, norm(x): 1.1152, norm(y): 0.9944, norm:0.5717, tok/sec: 188588.04, flops:197.98, batch-reuse:1
@ 3120 train 4.0869 , allloss: 4.0869, dt: 696.99ms, fracRes: 0.4723, norm(attn): 1.0547, norm(output): 0.6953, norm(x): 1.0953, norm(y): 0.9916, norm:0.5794, tok/sec: 188053.70, flops:197.42, batch-reuse:1
@ 3121 train 3.8247 , allloss: 3.8247, dt: 693.54ms, fracRes: 0.4802, norm(attn): 1.0312, norm(output): 0.6953, norm(x): 1.1069, norm(y): 0.9911, norm:0.6262, tok/sec: 188989.53, flops:198.40, batch-reuse:1
@ 3122 train 3.9758 , allloss: 3.9758, dt: 690.46ms, fracRes: 0.4754, norm(attn): 1.0547, norm(output): 0.6992, norm(x): 1.1025, norm(y): 0.9907, norm:0.5941, tok/sec: 189833.99, flops:199.29, batch-reuse:1
@ 3123 train 4.1665 , allloss: 4.1665, dt: 693.77ms, fracRes: 0.4791, norm(attn): 1.0625, norm(output): 0.7031, norm(x): 1.1130, norm(y): 0.9917, norm:0.5774, tok/sec: 188927.70, flops:198.34, batch-reuse:1
@ 3124 train 4.1745 , allloss: 4.1745, dt: 692.91ms, fracRes: 0.4801, norm(attn): 1.0625, norm(output): 0.7031, norm(x): 1.1140, norm(y): 0.9924, norm:0.5887, tok/sec: 189160.69, flops:198.58, batch-reuse:1
@ 3125 train 4.0792 , allloss: 4.0792, dt: 695.68ms, fracRes: 0.4777, norm(attn): 1.0547, norm(output): 0.6992, norm(x): 1.1096, norm(y): 0.9914, norm:0.6337, tok/sec: 188408.10, flops:197.79, batch-reuse:1
@ 3126 train 3.9015 , allloss: 3.9015, dt: 690.30ms, fracRes: 0.4796, norm(attn): 1.0625, norm(output): 0.7031, norm(x): 1.1134, norm(y): 0.9911, norm:0.6131, tok/sec: 189877.85, flops:199.33, batch-reuse:1
@ 3127 train 4.0272 , allloss: 4.0272, dt: 698.52ms, fracRes: 0.4775, norm(attn): 1.0625, norm(output): 0.6914, norm(x): 1.1020, norm(y): 0.9907, norm:0.5429, tok/sec: 187643.74, flops:196.99, batch-reuse:1
@ 3128 train 4.0345 , allloss: 4.0345, dt: 699.02ms, fracRes: 0.4796, norm(attn): 1.0625, norm(output): 0.6992, norm(x): 1.1084, norm(y): 0.9919, norm:0.5680, tok/sec: 187508.38, flops:196.85, batch-reuse:1
@ 3129 train 3.8901 , allloss: 3.8901, dt: 686.72ms, fracRes: 0.4769, norm(attn): 1.0625, norm(output): 0.6914, norm(x): 1.1006, norm(y): 0.9906, norm:0.5365, tok/sec: 190867.75, flops:200.37, batch-reuse:1
@ 3130 train 4.0276 , allloss: 4.0276, dt: 702.99ms, fracRes: 0.4759, norm(attn): 1.0625, norm(output): 0.6953, norm(x): 1.1022, norm(y): 0.9914, norm:0.5394, tok/sec: 186448.28, flops:195.73, batch-reuse:1
@ 3131 train 3.9142 , allloss: 3.9142, dt: 705.29ms, fracRes: 0.4787, norm(attn): 1.0703, norm(output): 0.6953, norm(x): 1.1073, norm(y): 0.9920, norm:0.4898, tok/sec: 185840.20, flops:195.10, batch-reuse:1
@ 3132 train 3.9550 , allloss: 3.9550, dt: 694.69ms, fracRes: 0.4761, norm(attn): 1.0859, norm(output): 0.6992, norm(x): 1.0988, norm(y): 0.9919, norm:0.5016, tok/sec: 188677.61, flops:198.07, batch-reuse:1
@ 3133 train 3.9583 , allloss: 3.9583, dt: 684.01ms, fracRes: 0.4763, norm(attn): 1.0625, norm(output): 0.7031, norm(x): 1.1049, norm(y): 0.9906, norm:0.4890, tok/sec: 191623.86, flops:201.17, batch-reuse:1
@ 3134 train 3.9339 , allloss: 3.9339, dt: 698.14ms, fracRes: 0.4757, norm(attn): 1.0547, norm(output): 0.6953, norm(x): 1.1039, norm(y): 0.9901, norm:0.4662, tok/sec: 187745.69, flops:197.10, batch-reuse:1
@ 3135 train 3.9704 , allloss: 3.9704, dt: 690.62ms, fracRes: 0.4799, norm(attn): 1.0469, norm(output): 0.6953, norm(x): 1.1059, norm(y): 0.9910, norm:0.4909, tok/sec: 189788.11, flops:199.24, batch-reuse:1
@ 3136 train 3.9364 , allloss: 3.9364, dt: 705.02ms, fracRes: 0.4814, norm(attn): 1.0469, norm(output): 0.7031, norm(x): 1.1134, norm(y): 0.9921, norm:0.5727, tok/sec: 185912.09, flops:195.17, batch-reuse:1
@ 3137 train 4.0206 , allloss: 4.0206, dt: 706.20ms, fracRes: 0.4832, norm(attn): 1.0234, norm(output): 0.6953, norm(x): 1.1125, norm(y): 0.9911, norm:0.4878, tok/sec: 185602.41, flops:194.85, batch-reuse:1
@ 3138 train 4.0664 , allloss: 4.0664, dt: 705.81ms, fracRes: 0.4802, norm(attn): 1.0312, norm(output): 0.6914, norm(x): 1.0999, norm(y): 0.9915, norm:0.5113, tok/sec: 185704.54, flops:194.95, batch-reuse:1
@ 3139 train 3.9914 , allloss: 3.9914, dt: 689.20ms, fracRes: 0.4764, norm(attn): 1.0156, norm(output): 0.6953, norm(x): 1.0985, norm(y): 0.9913, norm:0.4482, tok/sec: 190179.41, flops:199.65, batch-reuse:1
@ 3140 train 4.0111 , allloss: 4.0111, dt: 696.26ms, fracRes: 0.4816, norm(attn): 1.0000, norm(output): 0.6953, norm(x): 1.1112, norm(y): 0.9913, norm:0.4876, tok/sec: 188251.07, flops:197.63, batch-reuse:1
@ 3141 train 4.0490 , allloss: 4.0490, dt: 699.71ms, fracRes: 0.4780, norm(attn): 1.0078, norm(output): 0.6992, norm(x): 1.1079, norm(y): 0.9921, norm:0.5529, tok/sec: 187324.43, flops:196.65, batch-reuse:1
@ 3142 train 3.9426 , allloss: 3.9426, dt: 695.63ms, fracRes: 0.4735, norm(attn): 1.0078, norm(output): 0.6953, norm(x): 1.0980, norm(y): 0.9910, norm:0.5513, tok/sec: 188423.21, flops:197.81, batch-reuse:1
@ 3143 train 4.2919 , allloss: 4.2919, dt: 691.32ms, fracRes: 0.4903, norm(attn): 0.9922, norm(output): 0.7148, norm(x): 1.1358, norm(y): 0.9918, norm:0.7756, tok/sec: 189596.99, flops:199.04, batch-reuse:1
@ 3144 train 4.0489 , allloss: 4.0489, dt: 696.16ms, fracRes: 0.4844, norm(attn): 0.9766, norm(output): 0.6992, norm(x): 1.1178, norm(y): 0.9923, norm:0.8669, tok/sec: 188278.28, flops:197.65, batch-reuse:1
@ 3145 train 4.0053 , allloss: 4.0053, dt: 700.90ms, fracRes: 0.4809, norm(attn): 0.9922, norm(output): 0.6992, norm(x): 1.1148, norm(y): 0.9918, norm:0.6378, tok/sec: 187004.69, flops:196.32, batch-reuse:1
@ 3146 train 3.9810 , allloss: 3.9810, dt: 691.01ms, fracRes: 0.4765, norm(attn): 0.9922, norm(output): 0.6914, norm(x): 1.0958, norm(y): 0.9910, norm:0.6611, tok/sec: 189682.49, flops:199.13, batch-reuse:1
@ 3147 train 3.9525 , allloss: 3.9525, dt: 702.06ms, fracRes: 0.4756, norm(attn): 0.9688, norm(output): 0.6953, norm(x): 1.1011, norm(y): 0.9911, norm:0.6117, tok/sec: 186696.42, flops:195.99, batch-reuse:1
@ 3148 train 4.0440 , allloss: 4.0440, dt: 700.50ms, fracRes: 0.4812, norm(attn): 0.9492, norm(output): 0.7031, norm(x): 1.1144, norm(y): 0.9923, norm:0.5838, tok/sec: 187112.95, flops:196.43, batch-reuse:1
@ 3149 train 4.0620 , allloss: 4.0620, dt: 703.28ms, fracRes: 0.4759, norm(attn): 0.9531, norm(output): 0.6914, norm(x): 1.1002, norm(y): 0.9924, norm:0.5441, tok/sec: 186371.87, flops:195.65, batch-reuse:1
@ 3150 train 4.0485 , allloss: 4.0485, dt: 703.40ms, fracRes: 0.4797, norm(attn): 0.9492, norm(output): 0.6953, norm(x): 1.1077, norm(y): 0.9925, norm:0.4909, tok/sec: 186340.60, flops:195.62, batch-reuse:1
@ 3151 train 4.0274 , allloss: 4.0274, dt: 702.35ms, fracRes: 0.4801, norm(attn): 0.9453, norm(output): 0.6992, norm(x): 1.1068, norm(y): 0.9912, norm:0.6169, tok/sec: 186620.25, flops:195.91, batch-reuse:1
@ 3152 train 4.0063 , allloss: 4.0063, dt: 694.64ms, fracRes: 0.4821, norm(attn): 0.9492, norm(output): 0.6953, norm(x): 1.1073, norm(y): 0.9919, norm:0.5429, tok/sec: 188689.59, flops:198.09, batch-reuse:1
@ 3153 train 4.0341 , allloss: 4.0341, dt: 692.39ms, fracRes: 0.4827, norm(attn): 0.9492, norm(output): 0.6875, norm(x): 1.0995, norm(y): 0.9923, norm:0.4881, tok/sec: 189303.60, flops:198.73, batch-reuse:1
@ 3154 train 4.0468 , allloss: 4.0468, dt: 702.38ms, fracRes: 0.4863, norm(attn): 0.9414, norm(output): 0.7109, norm(x): 1.1168, norm(y): 0.9911, norm:0.5723, tok/sec: 186611.00, flops:195.90, batch-reuse:1
@ 3155 train 3.9030 , allloss: 3.9030, dt: 682.46ms, fracRes: 0.4811, norm(attn): 0.9219, norm(output): 0.7031, norm(x): 1.1057, norm(y): 0.9899, norm:0.5095, tok/sec: 192057.12, flops:201.62, batch-reuse:1
@ 3156 train 3.9925 , allloss: 3.9925, dt: 707.73ms, fracRes: 0.4790, norm(attn): 0.9102, norm(output): 0.6953, norm(x): 1.1024, norm(y): 0.9905, norm:0.4877, tok/sec: 185200.87, flops:194.42, batch-reuse:1
@ 3157 train 4.0581 , allloss: 4.0581, dt: 710.12ms, fracRes: 0.4813, norm(attn): 0.8906, norm(output): 0.6992, norm(x): 1.1032, norm(y): 0.9908, norm:0.4718, tok/sec: 184576.09, flops:193.77, batch-reuse:1
@ 3158 train 3.9864 , allloss: 3.9864, dt: 711.90ms, fracRes: 0.4849, norm(attn): 0.8828, norm(output): 0.6914, norm(x): 1.1042, norm(y): 0.9915, norm:0.4335, tok/sec: 184116.18, flops:193.29, batch-reuse:1
@ 3159 train 3.9264 , allloss: 3.9264, dt: 696.02ms, fracRes: 0.4844, norm(attn): 0.8828, norm(output): 0.6992, norm(x): 1.1101, norm(y): 0.9917, norm:0.4327, tok/sec: 188316.59, flops:197.70, batch-reuse:1
@ 3160 train 4.1937 , allloss: 4.1937, dt: 702.57ms, fracRes: 0.4863, norm(attn): 0.8867, norm(output): 0.7070, norm(x): 1.1202, norm(y): 0.9918, norm:0.4719, tok/sec: 186562.05, flops:195.85, batch-reuse:1
@ 3161 train 4.1251 , allloss: 4.1251, dt: 691.18ms, fracRes: 0.4816, norm(attn): 0.8867, norm(output): 0.7031, norm(x): 1.1169, norm(y): 0.9915, norm:0.5188, tok/sec: 189634.79, flops:199.08, batch-reuse:1
@ 3162 train 4.0534 , allloss: 4.0534, dt: 697.88ms, fracRes: 0.4839, norm(attn): 0.8906, norm(output): 0.6992, norm(x): 1.1167, norm(y): 0.9920, norm:0.5283, tok/sec: 187815.54, flops:197.17, batch-reuse:1
@ 3163 train 4.1953 , allloss: 4.1953, dt: 700.93ms, fracRes: 0.4777, norm(attn): 0.9141, norm(output): 0.7070, norm(x): 1.1135, norm(y): 0.9921, norm:0.4890, tok/sec: 186997.24, flops:196.31, batch-reuse:1
@ 3164 train 4.1151 , allloss: 4.1151, dt: 697.82ms, fracRes: 0.4753, norm(attn): 0.9141, norm(output): 0.7070, norm(x): 1.1121, norm(y): 0.9915, norm:0.6168, tok/sec: 187831.91, flops:197.19, batch-reuse:1
@ 3165 train 4.0842 , allloss: 4.0842, dt: 694.18ms, fracRes: 0.4829, norm(attn): 0.9062, norm(output): 0.7070, norm(x): 1.1216, norm(y): 0.9917, norm:0.5139, tok/sec: 188815.90, flops:198.22, batch-reuse:1
@ 3166 train 4.2449 , allloss: 4.2449, dt: 692.34ms, fracRes: 0.4841, norm(attn): 0.9102, norm(output): 0.7070, norm(x): 1.1252, norm(y): 0.9929, norm:0.5476, tok/sec: 189316.24, flops:198.74, batch-reuse:1
@ 3167 train 4.0515 , allloss: 4.0515, dt: 700.85ms, fracRes: 0.4861, norm(attn): 0.8984, norm(output): 0.6992, norm(x): 1.1183, norm(y): 0.9904, norm:0.4956, tok/sec: 187018.36, flops:196.33, batch-reuse:1
@ 3168 train 4.1305 , allloss: 4.1305, dt: 700.56ms, fracRes: 0.4869, norm(attn): 0.9062, norm(output): 0.6953, norm(x): 1.1146, norm(y): 0.9925, norm:0.5347, tok/sec: 187094.74, flops:196.41, batch-reuse:1
@ 3169 train 4.1548 , allloss: 4.1548, dt: 691.76ms, fracRes: 0.4936, norm(attn): 0.9023, norm(output): 0.7070, norm(x): 1.1281, norm(y): 0.9917, norm:0.4967, tok/sec: 189476.36, flops:198.91, batch-reuse:1
@ 3170 train 4.1263 , allloss: 4.1263, dt: 696.28ms, fracRes: 0.4932, norm(attn): 0.9141, norm(output): 0.6992, norm(x): 1.1209, norm(y): 0.9914, norm:0.5154, tok/sec: 188247.20, flops:197.62, batch-reuse:1
@ 3171 train 4.1476 , allloss: 4.1476, dt: 699.74ms, fracRes: 0.4926, norm(attn): 0.9258, norm(output): 0.6953, norm(x): 1.1177, norm(y): 0.9915, norm:0.4794, tok/sec: 187316.33, flops:196.65, batch-reuse:1
@ 3172 train 4.1172 , allloss: 4.1172, dt: 691.53ms, fracRes: 0.4946, norm(attn): 0.9180, norm(output): 0.7031, norm(x): 1.1305, norm(y): 0.9917, norm:0.4863, tok/sec: 189539.34, flops:198.98, batch-reuse:1
@ 3173 train 4.1522 , allloss: 4.1522, dt: 705.24ms, fracRes: 0.4911, norm(attn): 0.9258, norm(output): 0.7070, norm(x): 1.1283, norm(y): 0.9923, norm:0.5033, tok/sec: 185855.59, flops:195.11, batch-reuse:1
@ 3174 train 4.1856 , allloss: 4.1856, dt: 699.80ms, fracRes: 0.4859, norm(attn): 0.9414, norm(output): 0.7070, norm(x): 1.1224, norm(y): 0.9924, norm:0.4884, tok/sec: 187300.50, flops:196.63, batch-reuse:1
@ 3175 train 4.1628 , allloss: 4.1628, dt: 702.22ms, fracRes: 0.4841, norm(attn): 0.9414, norm(output): 0.7031, norm(x): 1.1194, norm(y): 0.9920, norm:0.5021, tok/sec: 186653.45, flops:195.95, batch-reuse:1
@ 3176 train 4.1218 , allloss: 4.1218, dt: 699.16ms, fracRes: 0.4832, norm(attn): 0.9453, norm(output): 0.7031, norm(x): 1.1193, norm(y): 0.9911, norm:0.4889, tok/sec: 187471.42, flops:196.81, batch-reuse:1
@ 3177 train 4.0631 , allloss: 4.0631, dt: 698.50ms, fracRes: 0.4814, norm(attn): 0.9492, norm(output): 0.6992, norm(x): 1.1129, norm(y): 0.9910, norm:0.5111, tok/sec: 187647.71, flops:196.99, batch-reuse:1
@ 3178 train 4.2442 , allloss: 4.2442, dt: 695.71ms, fracRes: 0.4842, norm(attn): 0.9609, norm(output): 0.7031, norm(x): 1.1169, norm(y): 0.9916, norm:0.5555, tok/sec: 188400.74, flops:197.78, batch-reuse:1
@ 3179 train 4.0734 , allloss: 4.0734, dt: 687.93ms, fracRes: 0.4835, norm(attn): 0.9492, norm(output): 0.7070, norm(x): 1.1138, norm(y): 0.9912, norm:0.4959, tok/sec: 190529.73, flops:200.02, batch-reuse:1
@ 3180 train 4.1503 , allloss: 4.1503, dt: 687.04ms, fracRes: 0.4836, norm(attn): 0.9531, norm(output): 0.6992, norm(x): 1.1144, norm(y): 0.9915, norm:0.5216, tok/sec: 190777.41, flops:200.28, batch-reuse:1
@ 3181 train 4.1694 , allloss: 4.1694, dt: 695.16ms, fracRes: 0.4800, norm(attn): 0.9766, norm(output): 0.6953, norm(x): 1.0993, norm(y): 0.9914, norm:0.6503, tok/sec: 188548.97, flops:197.94, batch-reuse:1
@ 3182 train 4.0653 , allloss: 4.0653, dt: 696.35ms, fracRes: 0.4770, norm(attn): 0.9883, norm(output): 0.7305, norm(x): 1.1390, norm(y): 0.9924, norm:1.3224, tok/sec: 188226.84, flops:197.60, batch-reuse:1
@ 3183 train 4.2010 , allloss: 4.2010, dt: 709.49ms, fracRes: 0.4832, norm(attn): 0.9805, norm(output): 0.7070, norm(x): 1.1206, norm(y): 0.9930, norm:0.6617, tok/sec: 184740.52, flops:193.94, batch-reuse:1
@ 3184 train 4.2061 , allloss: 4.2061, dt: 695.90ms, fracRes: 0.4774, norm(attn): 0.9648, norm(output): 0.7031, norm(x): 1.1073, norm(y): 0.9911, norm:0.5510, tok/sec: 188350.07, flops:197.73, batch-reuse:1
@ 3185 train 4.2738 , allloss: 4.2738, dt: 695.62ms, fracRes: 0.4815, norm(attn): 0.9766, norm(output): 0.6992, norm(x): 1.1112, norm(y): 0.9921, norm:0.5518, tok/sec: 188424.57, flops:197.81, batch-reuse:1
@ 3186 train 4.1985 , allloss: 4.1985, dt: 692.07ms, fracRes: 0.4841, norm(attn): 0.9922, norm(output): 0.7070, norm(x): 1.1161, norm(y): 0.9921, norm:0.5108, tok/sec: 189391.31, flops:198.82, batch-reuse:1
@ 3187 train 4.1292 , allloss: 4.1292, dt: 692.42ms, fracRes: 0.4859, norm(attn): 0.9922, norm(output): 0.6953, norm(x): 1.1133, norm(y): 0.9928, norm:0.5139, tok/sec: 189294.73, flops:198.72, batch-reuse:1
@ 3188 train 4.0713 , allloss: 4.0713, dt: 689.54ms, fracRes: 0.4863, norm(attn): 0.9844, norm(output): 0.6875, norm(x): 1.1064, norm(y): 0.9910, norm:0.5269, tok/sec: 190085.25, flops:199.55, batch-reuse:1
@ 3189 train 4.1054 , allloss: 4.1054, dt: 692.99ms, fracRes: 0.4867, norm(attn): 0.9727, norm(output): 0.6914, norm(x): 1.1088, norm(y): 0.9901, norm:0.5064, tok/sec: 189140.25, flops:198.56, batch-reuse:1
@ 3190 train 4.1881 , allloss: 4.1881, dt: 687.75ms, fracRes: 0.4869, norm(attn): 0.9805, norm(output): 0.6992, norm(x): 1.1134, norm(y): 0.9921, norm:0.5308, tok/sec: 190579.79, flops:200.07, batch-reuse:1
@ 3191 train 4.0970 , allloss: 4.0970, dt: 707.00ms, fracRes: 0.4902, norm(attn): 0.9844, norm(output): 0.6914, norm(x): 1.1166, norm(y): 0.9927, norm:0.4855, tok/sec: 185393.10, flops:194.63, batch-reuse:1
@ 3192 train 4.1319 , allloss: 4.1319, dt: 688.14ms, fracRes: 0.4879, norm(attn): 0.9844, norm(output): 0.6992, norm(x): 1.1199, norm(y): 0.9909, norm:0.5381, tok/sec: 190472.10, flops:199.96, batch-reuse:1
@ 3193 train 4.1258 , allloss: 4.1258, dt: 705.39ms, fracRes: 0.4868, norm(attn): 0.9844, norm(output): 0.6953, norm(x): 1.1162, norm(y): 0.9920, norm:0.4508, tok/sec: 185814.88, flops:195.07, batch-reuse:1
@ 3194 train 4.1419 , allloss: 4.1419, dt: 703.20ms, fracRes: 0.4831, norm(attn): 0.9922, norm(output): 0.6914, norm(x): 1.1027, norm(y): 0.9920, norm:0.5100, tok/sec: 186393.10, flops:195.68, batch-reuse:1
@ 3195 train 4.1255 , allloss: 4.1255, dt: 704.31ms, fracRes: 0.4871, norm(attn): 0.9844, norm(output): 0.7031, norm(x): 1.1212, norm(y): 0.9920, norm:0.5151, tok/sec: 186099.89, flops:195.37, batch-reuse:1
@ 3196 train 4.1566 , allloss: 4.1566, dt: 694.49ms, fracRes: 0.4837, norm(attn): 0.9883, norm(output): 0.6992, norm(x): 1.1159, norm(y): 0.9913, norm:0.5069, tok/sec: 188730.40, flops:198.13, batch-reuse:1
@ 3197 train 4.1255 , allloss: 4.1255, dt: 696.44ms, fracRes: 0.4796, norm(attn): 0.9805, norm(output): 0.6953, norm(x): 1.1084, norm(y): 0.9912, norm:0.5378, tok/sec: 188202.22, flops:197.58, batch-reuse:1
@ 3198 train 4.0870 , allloss: 4.0870, dt: 694.36ms, fracRes: 0.4835, norm(attn): 0.9805, norm(output): 0.7031, norm(x): 1.1150, norm(y): 0.9923, norm:0.4760, tok/sec: 188767.47, flops:198.17, batch-reuse:1
@ 3199 train 4.1122 , allloss: 4.1122, dt: 686.17ms, fracRes: 0.4831, norm(attn): 0.9805, norm(output): 0.6953, norm(x): 1.1109, norm(y): 0.9918, norm:0.5141, tok/sec: 191018.83, flops:200.53, batch-reuse:1
@ 3200 train 4.1033 , allloss: 4.1033, dt: 686.05ms, fracRes: 0.4875, norm(attn): 0.9688, norm(output): 0.7148, norm(x): 1.1317, norm(y): 0.9907, norm:0.6663, tok/sec: 191052.48, flops:200.57, batch-reuse:1
@ 3201 train 4.1202 , allloss: 4.1202, dt: 697.75ms, fracRes: 0.4847, norm(attn): 0.9922, norm(output): 0.6992, norm(x): 1.1167, norm(y): 0.9912, norm:0.4769, tok/sec: 187849.36, flops:197.20, batch-reuse:1
@ 3202 train 4.1202 , allloss: 4.1202, dt: 694.07ms, fracRes: 0.4853, norm(attn): 0.9844, norm(output): 0.6992, norm(x): 1.1160, norm(y): 0.9910, norm:0.5629, tok/sec: 188846.78, flops:198.25, batch-reuse:1
@ 3203 train 4.2227 , allloss: 4.2227, dt: 695.50ms, fracRes: 0.4798, norm(attn): 0.9922, norm(output): 0.6992, norm(x): 1.1073, norm(y): 0.9913, norm:0.5970, tok/sec: 188457.32, flops:197.84, batch-reuse:1
@ 3204 train 4.0963 , allloss: 4.0963, dt: 695.46ms, fracRes: 0.4755, norm(attn): 1.0000, norm(output): 0.7031, norm(x): 1.1043, norm(y): 0.9912, norm:0.5925, tok/sec: 188468.17, flops:197.85, batch-reuse:1
@ 3205 train 4.1067 , allloss: 4.1067, dt: 683.25ms, fracRes: 0.4798, norm(attn): 0.9961, norm(output): 0.6953, norm(x): 1.1101, norm(y): 0.9913, norm:0.5628, tok/sec: 191836.76, flops:201.39, batch-reuse:1
@ 3206 train 4.0354 , allloss: 4.0354, dt: 690.19ms, fracRes: 0.4838, norm(attn): 1.0000, norm(output): 0.6992, norm(x): 1.1158, norm(y): 0.9912, norm:0.6467, tok/sec: 189906.25, flops:199.36, batch-reuse:1
@ 3207 train 4.1879 , allloss: 4.1879, dt: 696.74ms, fracRes: 0.4899, norm(attn): 0.9766, norm(output): 0.7070, norm(x): 1.1215, norm(y): 0.9922, norm:0.5444, tok/sec: 188121.33, flops:197.49, batch-reuse:1
@ 3208 train 4.1616 , allloss: 4.1616, dt: 681.42ms, fracRes: 0.4850, norm(attn): 0.9844, norm(output): 0.7031, norm(x): 1.1160, norm(y): 0.9920, norm:0.5451, tok/sec: 192352.05, flops:201.93, batch-reuse:1
@ 3209 train 4.1098 , allloss: 4.1098, dt: 690.45ms, fracRes: 0.4951, norm(attn): 0.9570, norm(output): 0.7109, norm(x): 1.1319, norm(y): 0.9922, norm:0.5344, tok/sec: 189836.35, flops:199.29, batch-reuse:1
@ 3210 train 4.0846 , allloss: 4.0846, dt: 694.16ms, fracRes: 0.4879, norm(attn): 0.9766, norm(output): 0.7070, norm(x): 1.1259, norm(y): 0.9919, norm:0.4949, tok/sec: 188821.74, flops:198.23, batch-reuse:1
@ 3211 train 4.1563 , allloss: 4.1563, dt: 687.48ms, fracRes: 0.4862, norm(attn): 0.9844, norm(output): 0.7031, norm(x): 1.1139, norm(y): 0.9922, norm:0.4975, tok/sec: 190654.74, flops:200.15, batch-reuse:1
@ 3212 train 4.3004 , allloss: 4.3004, dt: 698.73ms, fracRes: 0.4942, norm(attn): 0.9766, norm(output): 0.7070, norm(x): 1.1315, norm(y): 0.9927, norm:0.5630, tok/sec: 187584.84, flops:196.93, batch-reuse:1
@ 3213 train 4.1360 , allloss: 4.1360, dt: 699.33ms, fracRes: 0.4939, norm(attn): 0.9766, norm(output): 0.7031, norm(x): 1.1281, norm(y): 0.9920, norm:0.5360, tok/sec: 187426.30, flops:196.76, batch-reuse:1
@ 3214 train 4.2174 , allloss: 4.2174, dt: 694.81ms, fracRes: 0.4878, norm(attn): 0.9844, norm(output): 0.7109, norm(x): 1.1191, norm(y): 0.9910, norm:0.5459, tok/sec: 188644.21, flops:198.04, batch-reuse:1
@ 3215 train 4.0989 , allloss: 4.0989, dt: 696.33ms, fracRes: 0.4867, norm(attn): 0.9648, norm(output): 0.7031, norm(x): 1.1214, norm(y): 0.9912, norm:0.5246, tok/sec: 188233.28, flops:197.61, batch-reuse:1
@ 3216 train 4.1473 , allloss: 4.1473, dt: 698.94ms, fracRes: 0.4833, norm(attn): 0.9883, norm(output): 0.6953, norm(x): 1.1076, norm(y): 0.9922, norm:0.5340, tok/sec: 187528.59, flops:196.87, batch-reuse:1
@ 3217 train 4.1041 , allloss: 4.1041, dt: 692.25ms, fracRes: 0.4859, norm(attn): 0.9766, norm(output): 0.7031, norm(x): 1.1209, norm(y): 0.9923, norm:0.5155, tok/sec: 189343.24, flops:198.77, batch-reuse:1
@ 3218 train 4.1912 , allloss: 4.1912, dt: 701.89ms, fracRes: 0.4856, norm(attn): 1.0000, norm(output): 0.7070, norm(x): 1.1189, norm(y): 0.9932, norm:0.4994, tok/sec: 186742.59, flops:196.04, batch-reuse:1
@ 3219 train 4.2114 , allloss: 4.2114, dt: 709.01ms, fracRes: 0.4909, norm(attn): 0.9805, norm(output): 0.7109, norm(x): 1.1338, norm(y): 0.9933, norm:0.4949, tok/sec: 184865.01, flops:194.07, batch-reuse:1
@ 3220 train 4.1527 , allloss: 4.1527, dt: 709.66ms, fracRes: 0.4857, norm(attn): 0.9805, norm(output): 0.7031, norm(x): 1.1170, norm(y): 0.9921, norm:0.5627, tok/sec: 184695.89, flops:193.89, batch-reuse:1
@ 3221 train 4.1039 , allloss: 4.1039, dt: 686.11ms, fracRes: 0.4851, norm(attn): 1.0000, norm(output): 0.6914, norm(x): 1.1098, norm(y): 0.9921, norm:0.5061, tok/sec: 191037.15, flops:200.55, batch-reuse:1
@ 3222 train 4.1295 , allloss: 4.1295, dt: 695.38ms, fracRes: 0.4893, norm(attn): 0.9922, norm(output): 0.7109, norm(x): 1.1290, norm(y): 0.9922, norm:0.5425, tok/sec: 188488.91, flops:197.88, batch-reuse:1
@ 3223 train 4.1143 , allloss: 4.1143, dt: 693.95ms, fracRes: 0.4889, norm(attn): 0.9844, norm(output): 0.6953, norm(x): 1.1169, norm(y): 0.9915, norm:0.5489, tok/sec: 188878.11, flops:198.28, batch-reuse:1
@ 3224 train 4.1496 , allloss: 4.1496, dt: 696.31ms, fracRes: 0.4861, norm(attn): 1.0078, norm(output): 0.6953, norm(x): 1.1138, norm(y): 0.9918, norm:0.4786, tok/sec: 188239.02, flops:197.61, batch-reuse:1
@ 3225 train 4.1677 , allloss: 4.1677, dt: 692.45ms, fracRes: 0.4840, norm(attn): 1.0156, norm(output): 0.6992, norm(x): 1.1092, norm(y): 0.9920, norm:0.5109, tok/sec: 189287.50, flops:198.71, batch-reuse:1
@ 3226 train 4.0967 , allloss: 4.0967, dt: 687.76ms, fracRes: 0.4878, norm(attn): 1.0078, norm(output): 0.6953, norm(x): 1.1138, norm(y): 0.9916, norm:0.5148, tok/sec: 190579.33, flops:200.07, batch-reuse:1
@ 3227 train 4.0730 , allloss: 4.0730, dt: 683.36ms, fracRes: 0.4915, norm(attn): 1.0000, norm(output): 0.6992, norm(x): 1.1169, norm(y): 0.9923, norm:0.4751, tok/sec: 191805.10, flops:201.36, batch-reuse:1
@ 3228 train 3.9987 , allloss: 3.9987, dt: 691.09ms, fracRes: 0.4881, norm(attn): 1.0000, norm(output): 0.6953, norm(x): 1.1148, norm(y): 0.9911, norm:0.5440, tok/sec: 189659.91, flops:199.11, batch-reuse:1
@ 3229 train 4.1777 , allloss: 4.1777, dt: 693.35ms, fracRes: 0.4906, norm(attn): 0.9922, norm(output): 0.6953, norm(x): 1.1149, norm(y): 0.9905, norm:0.5828, tok/sec: 189042.24, flops:198.46, batch-reuse:1
@ 3230 train 4.2771 , allloss: 4.2771, dt: 695.66ms, fracRes: 0.4899, norm(attn): 0.9922, norm(output): 0.7070, norm(x): 1.1212, norm(y): 0.9925, norm:0.6056, tok/sec: 188415.01, flops:197.80, batch-reuse:1
@ 3231 train 4.0581 , allloss: 4.0581, dt: 694.06ms, fracRes: 0.4867, norm(attn): 1.0000, norm(output): 0.6992, norm(x): 1.1156, norm(y): 0.9927, norm:0.6646, tok/sec: 188849.56, flops:198.25, batch-reuse:1
@ 3232 train 4.0908 , allloss: 4.0908, dt: 694.61ms, fracRes: 0.4875, norm(attn): 0.9922, norm(output): 0.7031, norm(x): 1.1157, norm(y): 0.9915, norm:0.4592, tok/sec: 188697.82, flops:198.10, batch-reuse:1
@ 3233 train 4.1368 , allloss: 4.1368, dt: 694.47ms, fracRes: 0.4934, norm(attn): 0.9844, norm(output): 0.7109, norm(x): 1.1299, norm(y): 0.9919, norm:0.5480, tok/sec: 188736.24, flops:198.14, batch-reuse:1
@ 3234 train 4.2598 , allloss: 4.2598, dt: 691.86ms, fracRes: 0.4971, norm(attn): 0.9922, norm(output): 0.7109, norm(x): 1.1386, norm(y): 0.9926, norm:0.6623, tok/sec: 189448.35, flops:198.88, batch-reuse:1
@ 3235 train 4.1134 , allloss: 4.1134, dt: 684.36ms, fracRes: 0.4915, norm(attn): 0.9922, norm(output): 0.7070, norm(x): 1.1255, norm(y): 0.9912, norm:0.5578, tok/sec: 191523.85, flops:201.06, batch-reuse:1
@ 3236 train 4.2279 , allloss: 4.2279, dt: 676.82ms, fracRes: 0.4911, norm(attn): 1.0000, norm(output): 0.7070, norm(x): 1.1217, norm(y): 0.9924, norm:0.6600, tok/sec: 193657.34, flops:203.30, batch-reuse:1
@ 3237 train 4.1026 , allloss: 4.1026, dt: 689.39ms, fracRes: 0.4907, norm(attn): 1.0000, norm(output): 0.6953, norm(x): 1.1196, norm(y): 0.9922, norm:0.6590, tok/sec: 190126.86, flops:199.60, batch-reuse:1
@ 3238 train 4.1360 , allloss: 4.1360, dt: 707.30ms, fracRes: 0.4892, norm(attn): 0.9961, norm(output): 0.6953, norm(x): 1.1151, norm(y): 0.9927, norm:0.6349, tok/sec: 185313.11, flops:194.54, batch-reuse:1
@ 3239 train 4.1214 , allloss: 4.1214, dt: 699.92ms, fracRes: 0.4884, norm(attn): 1.0000, norm(output): 0.6992, norm(x): 1.1153, norm(y): 0.9931, norm:0.6397, tok/sec: 187267.96, flops:196.59, batch-reuse:1
@ 3240 train 4.1819 , allloss: 4.1819, dt: 690.14ms, fracRes: 0.4940, norm(attn): 0.9961, norm(output): 0.7188, norm(x): 1.1351, norm(y): 0.9917, norm:0.6965, tok/sec: 189921.74, flops:199.38, batch-reuse:1
@ 3241 train 4.1473 , allloss: 4.1473, dt: 695.72ms, fracRes: 0.4870, norm(attn): 1.0000, norm(output): 0.7070, norm(x): 1.1217, norm(y): 0.9918, norm:0.6428, tok/sec: 188398.93, flops:197.78, batch-reuse:1
@ 3242 train 4.1273 , allloss: 4.1273, dt: 705.58ms, fracRes: 0.4849, norm(attn): 0.9961, norm(output): 0.7109, norm(x): 1.1164, norm(y): 0.9920, norm:0.5774, tok/sec: 185765.97, flops:195.02, batch-reuse:1
@ 3243 train 4.0623 , allloss: 4.0623, dt: 709.49ms, fracRes: 0.4898, norm(attn): 1.0000, norm(output): 0.7031, norm(x): 1.1226, norm(y): 0.9911, norm:0.5658, tok/sec: 184741.94, flops:193.94, batch-reuse:1
@ 3244 train 4.0932 , allloss: 4.0932, dt: 703.85ms, fracRes: 0.4908, norm(attn): 1.0000, norm(output): 0.6992, norm(x): 1.1217, norm(y): 0.9916, norm:0.5328, tok/sec: 186220.79, flops:195.49, batch-reuse:1
@ 3245 train 4.1010 , allloss: 4.1010, dt: 706.02ms, fracRes: 0.4864, norm(attn): 1.0234, norm(output): 0.6992, norm(x): 1.1139, norm(y): 0.9919, norm:0.4944, tok/sec: 185649.92, flops:194.90, batch-reuse:1
@ 3246 train 4.0336 , allloss: 4.0336, dt: 700.01ms, fracRes: 0.4857, norm(attn): 1.0078, norm(output): 0.6992, norm(x): 1.1115, norm(y): 0.9910, norm:0.4639, tok/sec: 187244.04, flops:196.57, batch-reuse:1
@ 3247 train 4.0802 , allloss: 4.0802, dt: 712.79ms, fracRes: 0.4879, norm(attn): 1.0234, norm(output): 0.6992, norm(x): 1.1177, norm(y): 0.9926, norm:0.5113, tok/sec: 183884.62, flops:193.04, batch-reuse:1
@ 3248 train 4.1910 , allloss: 4.1910, dt: 699.26ms, fracRes: 0.4904, norm(attn): 1.0234, norm(output): 0.7031, norm(x): 1.1218, norm(y): 0.9930, norm:0.4599, tok/sec: 187442.59, flops:196.78, batch-reuse:1
@ 3249 train 4.0919 , allloss: 4.0919, dt: 693.44ms, fracRes: 0.4902, norm(attn): 1.0156, norm(output): 0.7031, norm(x): 1.1204, norm(y): 0.9919, norm:0.4568, tok/sec: 189016.63, flops:198.43, batch-reuse:1
@ 3250 train 4.0652 , allloss: 4.0652, dt: 703.74ms, fracRes: 0.4908, norm(attn): 1.0078, norm(output): 0.6953, norm(x): 1.1180, norm(y): 0.9920, norm:0.4643, tok/sec: 186251.52, flops:195.53, batch-reuse:1
@ 3251 train 4.0444 , allloss: 4.0444, dt: 702.85ms, fracRes: 0.4876, norm(attn): 1.0000, norm(output): 0.6992, norm(x): 1.1133, norm(y): 0.9921, norm:0.4467, tok/sec: 186485.66, flops:195.77, batch-reuse:1
@ 3252 train 4.0655 , allloss: 4.0655, dt: 705.71ms, fracRes: 0.4868, norm(attn): 0.9922, norm(output): 0.7031, norm(x): 1.1139, norm(y): 0.9918, norm:0.4871, tok/sec: 185731.70, flops:194.98, batch-reuse:1
@ 3253 train 4.1714 , allloss: 4.1714, dt: 709.05ms, fracRes: 0.4848, norm(attn): 1.0078, norm(output): 0.7109, norm(x): 1.1217, norm(y): 0.9917, norm:0.4762, tok/sec: 184856.12, flops:194.06, batch-reuse:1
@ 3254 train 3.9892 , allloss: 3.9892, dt: 693.22ms, fracRes: 0.4873, norm(attn): 1.0078, norm(output): 0.6953, norm(x): 1.1140, norm(y): 0.9912, norm:0.4664, tok/sec: 189076.70, flops:198.49, batch-reuse:1
@ 3255 train 4.1139 , allloss: 4.1139, dt: 704.11ms, fracRes: 0.4860, norm(attn): 1.0156, norm(output): 0.6953, norm(x): 1.1109, norm(y): 0.9920, norm:0.5087, tok/sec: 186153.58, flops:195.42, batch-reuse:1
@ 3256 train 4.1393 , allloss: 4.1393, dt: 700.76ms, fracRes: 0.4876, norm(attn): 1.0000, norm(output): 0.6992, norm(x): 1.1161, norm(y): 0.9911, norm:0.4486, tok/sec: 187043.50, flops:196.36, batch-reuse:1
@ 3257 train 4.0654 , allloss: 4.0654, dt: 694.98ms, fracRes: 0.4895, norm(attn): 1.0156, norm(output): 0.7031, norm(x): 1.1209, norm(y): 0.9922, norm:0.5721, tok/sec: 188598.78, flops:197.99, batch-reuse:1
@ 3258 train 4.0799 , allloss: 4.0799, dt: 692.40ms, fracRes: 0.4839, norm(attn): 1.0312, norm(output): 0.6953, norm(x): 1.1108, norm(y): 0.9924, norm:0.5606, tok/sec: 189300.34, flops:198.73, batch-reuse:1
@ 3259 train 4.0785 , allloss: 4.0785, dt: 695.90ms, fracRes: 0.4881, norm(attn): 1.0234, norm(output): 0.6992, norm(x): 1.1240, norm(y): 0.9917, norm:0.4471, tok/sec: 188347.56, flops:197.73, batch-reuse:1
@ 3260 train 4.0859 , allloss: 4.0859, dt: 696.11ms, fracRes: 0.4870, norm(attn): 1.0000, norm(output): 0.7031, norm(x): 1.1180, norm(y): 0.9914, norm:0.4939, tok/sec: 188290.79, flops:197.67, batch-reuse:1
@ 3261 train 4.0648 , allloss: 4.0648, dt: 696.23ms, fracRes: 0.4877, norm(attn): 0.9922, norm(output): 0.6992, norm(x): 1.1180, norm(y): 0.9903, norm:0.4480, tok/sec: 188260.87, flops:197.64, batch-reuse:1
@ 3262 train 4.0586 , allloss: 4.0586, dt: 698.90ms, fracRes: 0.4853, norm(attn): 1.0078, norm(output): 0.6992, norm(x): 1.1105, norm(y): 0.9918, norm:0.4916, tok/sec: 187541.19, flops:196.88, batch-reuse:1
@ 3263 train 4.0101 , allloss: 4.0101, dt: 697.66ms, fracRes: 0.4921, norm(attn): 1.0078, norm(output): 0.7109, norm(x): 1.1270, norm(y): 0.9920, norm:0.4770, tok/sec: 187874.21, flops:197.23, batch-reuse:1
@ 3264 train 4.1109 , allloss: 4.1109, dt: 700.94ms, fracRes: 0.4935, norm(attn): 0.9883, norm(output): 0.7109, norm(x): 1.1308, norm(y): 0.9916, norm:0.4639, tok/sec: 186993.75, flops:196.31, batch-reuse:1
@ 3265 train 4.0620 , allloss: 4.0620, dt: 700.46ms, fracRes: 0.4871, norm(attn): 0.9844, norm(output): 0.6953, norm(x): 1.1149, norm(y): 0.9921, norm:0.4876, tok/sec: 187121.68, flops:196.44, batch-reuse:1
@ 3266 train 3.9876 , allloss: 3.9876, dt: 700.91ms, fracRes: 0.4876, norm(attn): 0.9922, norm(output): 0.7109, norm(x): 1.1235, norm(y): 0.9917, norm:0.5103, tok/sec: 187003.80, flops:196.32, batch-reuse:1
@ 3267 train 4.0186 , allloss: 4.0186, dt: 703.73ms, fracRes: 0.4850, norm(attn): 1.0000, norm(output): 0.6992, norm(x): 1.1106, norm(y): 0.9920, norm:0.4616, tok/sec: 186252.97, flops:195.53, batch-reuse:1
@ 3268 train 4.0344 , allloss: 4.0344, dt: 701.67ms, fracRes: 0.4889, norm(attn): 0.9883, norm(output): 0.7031, norm(x): 1.1196, norm(y): 0.9915, norm:0.5109, tok/sec: 186800.21, flops:196.10, batch-reuse:1
@ 3269 train 4.0561 , allloss: 4.0561, dt: 693.74ms, fracRes: 0.4882, norm(attn): 0.9922, norm(output): 0.7070, norm(x): 1.1204, norm(y): 0.9918, norm:0.4727, tok/sec: 188936.66, flops:198.35, batch-reuse:1
@ 3270 train 4.0361 , allloss: 4.0361, dt: 689.55ms, fracRes: 0.4904, norm(attn): 0.9805, norm(output): 0.7109, norm(x): 1.1244, norm(y): 0.9917, norm:0.5160, tok/sec: 190084.20, flops:199.55, batch-reuse:1
@ 3271 train 4.0507 , allloss: 4.0507, dt: 696.63ms, fracRes: 0.4841, norm(attn): 0.9766, norm(output): 0.6914, norm(x): 1.1036, norm(y): 0.9912, norm:0.5150, tok/sec: 188150.76, flops:197.52, batch-reuse:1
@ 3272 train 4.0669 , allloss: 4.0669, dt: 700.21ms, fracRes: 0.4868, norm(attn): 0.9727, norm(output): 0.6992, norm(x): 1.1128, norm(y): 0.9909, norm:0.4653, tok/sec: 187188.83, flops:196.51, batch-reuse:1
@ 3273 train 4.0964 , allloss: 4.0964, dt: 701.51ms, fracRes: 0.4818, norm(attn): 1.0000, norm(output): 0.6992, norm(x): 1.1041, norm(y): 0.9913, norm:0.5408, tok/sec: 186843.19, flops:196.15, batch-reuse:1
@ 3274 train 4.0387 , allloss: 4.0387, dt: 679.44ms, fracRes: 0.4897, norm(attn): 1.0000, norm(output): 0.6953, norm(x): 1.1199, norm(y): 0.9920, norm:0.4598, tok/sec: 192910.79, flops:202.52, batch-reuse:1
@ 3275 train 4.0544 , allloss: 4.0544, dt: 689.18ms, fracRes: 0.4898, norm(attn): 1.0000, norm(output): 0.6992, norm(x): 1.1188, norm(y): 0.9923, norm:0.4910, tok/sec: 190185.47, flops:199.66, batch-reuse:1
@ 3276 train 4.0669 , allloss: 4.0669, dt: 705.81ms, fracRes: 0.4912, norm(attn): 1.0000, norm(output): 0.7031, norm(x): 1.1225, norm(y): 0.9923, norm:0.5288, tok/sec: 185704.91, flops:194.95, batch-reuse:1
@ 3277 train 4.0873 , allloss: 4.0873, dt: 699.60ms, fracRes: 0.4923, norm(attn): 1.0156, norm(output): 0.7031, norm(x): 1.1269, norm(y): 0.9926, norm:0.4658, tok/sec: 187353.99, flops:196.68, batch-reuse:1
@ 3278 train 4.0814 , allloss: 4.0814, dt: 700.92ms, fracRes: 0.4930, norm(attn): 1.0156, norm(output): 0.7031, norm(x): 1.1272, norm(y): 0.9919, norm:0.4932, tok/sec: 186999.15, flops:196.31, batch-reuse:1
@ 3279 train 4.0778 , allloss: 4.0778, dt: 708.97ms, fracRes: 0.4938, norm(attn): 1.0078, norm(output): 0.7031, norm(x): 1.1236, norm(y): 0.9914, norm:0.5596, tok/sec: 184875.51, flops:194.08, batch-reuse:1
@ 3280 train 4.0416 , allloss: 4.0416, dt: 704.93ms, fracRes: 0.4925, norm(attn): 1.0078, norm(output): 0.7031, norm(x): 1.1241, norm(y): 0.9907, norm:0.5392, tok/sec: 185936.74, flops:195.20, batch-reuse:1
@ 3281 train 4.0584 , allloss: 4.0584, dt: 704.95ms, fracRes: 0.4890, norm(attn): 1.0156, norm(output): 0.6953, norm(x): 1.1158, norm(y): 0.9912, norm:0.4861, tok/sec: 185930.20, flops:195.19, batch-reuse:1
@ 3282 train 4.0465 , allloss: 4.0465, dt: 694.67ms, fracRes: 0.4962, norm(attn): 1.0156, norm(output): 0.6992, norm(x): 1.1260, norm(y): 0.9917, norm:0.5060, tok/sec: 188682.02, flops:198.08, batch-reuse:1
@ 3283 train 4.0926 , allloss: 4.0926, dt: 688.34ms, fracRes: 0.4972, norm(attn): 1.0156, norm(output): 0.7031, norm(x): 1.1268, norm(y): 0.9922, norm:0.4979, tok/sec: 190418.86, flops:199.90, batch-reuse:1
@ 3284 train 4.0668 , allloss: 4.0668, dt: 690.40ms, fracRes: 0.4938, norm(attn): 1.0391, norm(output): 0.6992, norm(x): 1.1211, norm(y): 0.9914, norm:0.4968, tok/sec: 189849.66, flops:199.30, batch-reuse:1
@ 3285 train 4.0391 , allloss: 4.0391, dt: 682.08ms, fracRes: 0.4918, norm(attn): 1.0312, norm(output): 0.7070, norm(x): 1.1218, norm(y): 0.9913, norm:0.4903, tok/sec: 192165.40, flops:201.74, batch-reuse:1
@ 3286 train 4.0705 , allloss: 4.0705, dt: 699.25ms, fracRes: 0.4988, norm(attn): 1.0156, norm(output): 0.7148, norm(x): 1.1376, norm(y): 0.9917, norm:0.4826, tok/sec: 187447.58, flops:196.78, batch-reuse:1
@ 3287 train 4.0091 , allloss: 4.0091, dt: 699.78ms, fracRes: 0.4928, norm(attn): 1.0312, norm(output): 0.6992, norm(x): 1.1218, norm(y): 0.9923, norm:0.4734, tok/sec: 187305.10, flops:196.63, batch-reuse:1
@ 3288 train 4.2130 , allloss: 4.2130, dt: 695.90ms, fracRes: 0.4899, norm(attn): 1.0312, norm(output): 0.7031, norm(x): 1.1194, norm(y): 0.9909, norm:0.6849, tok/sec: 188349.88, flops:197.73, batch-reuse:1
@ 3289 train 4.1454 , allloss: 4.1454, dt: 695.05ms, fracRes: 0.5030, norm(attn): 1.0391, norm(output): 0.7148, norm(x): 1.1470, norm(y): 0.9925, norm:0.7629, tok/sec: 188578.59, flops:197.97, batch-reuse:1
@ 3290 train 4.1657 , allloss: 4.1657, dt: 694.98ms, fracRes: 0.4881, norm(attn): 1.0625, norm(output): 0.6875, norm(x): 1.1073, norm(y): 0.9926, norm:0.6038, tok/sec: 188597.48, flops:197.99, batch-reuse:1
@ 3291 train 3.9885 , allloss: 3.9885, dt: 694.46ms, fracRes: 0.4891, norm(attn): 1.0703, norm(output): 0.6953, norm(x): 1.1132, norm(y): 0.9913, norm:0.6103, tok/sec: 188738.89, flops:198.14, batch-reuse:1
@ 3292 train 4.2110 , allloss: 4.2110, dt: 692.70ms, fracRes: 0.4988, norm(attn): 1.0625, norm(output): 0.6953, norm(x): 1.1272, norm(y): 0.9936, norm:0.7817, tok/sec: 189218.18, flops:198.64, batch-reuse:1
@ 3293 train 4.1510 , allloss: 4.1510, dt: 694.01ms, fracRes: 0.4955, norm(attn): 1.0625, norm(output): 0.7070, norm(x): 1.1270, norm(y): 0.9931, norm:0.6519, tok/sec: 188860.98, flops:198.27, batch-reuse:1
@ 3294 train 4.0949 , allloss: 4.0949, dt: 691.51ms, fracRes: 0.4935, norm(attn): 1.0625, norm(output): 0.7109, norm(x): 1.1299, norm(y): 0.9914, norm:0.6317, tok/sec: 189544.70, flops:198.98, batch-reuse:1
@ 3295 train 3.9534 , allloss: 3.9534, dt: 689.46ms, fracRes: 0.4885, norm(attn): 1.0625, norm(output): 0.6992, norm(x): 1.1106, norm(y): 0.9903, norm:0.5180, tok/sec: 190108.52, flops:199.58, batch-reuse:1
@ 3296 train 3.9755 , allloss: 3.9755, dt: 694.77ms, fracRes: 0.4938, norm(attn): 1.0469, norm(output): 0.6953, norm(x): 1.1193, norm(y): 0.9906, norm:0.5826, tok/sec: 188653.92, flops:198.05, batch-reuse:1
@ 3297 train 3.9027 , allloss: 3.9027, dt: 702.94ms, fracRes: 0.4912, norm(attn): 1.0312, norm(output): 0.6914, norm(x): 1.1112, norm(y): 0.9899, norm:0.5530, tok/sec: 186462.45, flops:195.75, batch-reuse:1
@ 3298 train 3.9859 , allloss: 3.9859, dt: 701.59ms, fracRes: 0.4896, norm(attn): 1.0547, norm(output): 0.6914, norm(x): 1.1091, norm(y): 0.9902, norm:0.5514, tok/sec: 186821.98, flops:196.13, batch-reuse:1
@ 3299 train 3.8982 , allloss: 3.8982, dt: 686.37ms, fracRes: 0.4874, norm(attn): 1.0547, norm(output): 0.6953, norm(x): 1.1088, norm(y): 0.9909, norm:0.5188, tok/sec: 190964.35, flops:200.47, batch-reuse:1
@ 3300 train 3.9687 , allloss: 3.9687, dt: 693.30ms, fracRes: 0.4876, norm(attn): 1.0547, norm(output): 0.6914, norm(x): 1.1098, norm(y): 0.9908, norm:0.4906, tok/sec: 189056.09, flops:198.47, batch-reuse:1
@ 3301 train 3.9858 , allloss: 3.9858, dt: 692.27ms, fracRes: 0.4839, norm(attn): 1.0703, norm(output): 0.6953, norm(x): 1.1078, norm(y): 0.9911, norm:0.4665, tok/sec: 189337.04, flops:198.77, batch-reuse:1
@ 3302 train 3.9519 , allloss: 3.9519, dt: 699.82ms, fracRes: 0.4886, norm(attn): 1.0625, norm(output): 0.7070, norm(x): 1.1199, norm(y): 0.9906, norm:0.4976, tok/sec: 187294.31, flops:196.62, batch-reuse:1
@ 3303 train 3.8804 , allloss: 3.8804, dt: 695.93ms, fracRes: 0.4916, norm(attn): 1.0547, norm(output): 0.6992, norm(x): 1.1194, norm(y): 0.9909, norm:0.5367, tok/sec: 188341.36, flops:197.72, batch-reuse:1
@ 3304 train 3.9958 , allloss: 3.9958, dt: 695.29ms, fracRes: 0.4902, norm(attn): 1.0391, norm(output): 0.6992, norm(x): 1.1171, norm(y): 0.9905, norm:0.4966, tok/sec: 188513.80, flops:197.90, batch-reuse:1
@ 3305 train 4.0560 , allloss: 4.0560, dt: 697.39ms, fracRes: 0.4885, norm(attn): 1.0234, norm(output): 0.6953, norm(x): 1.1155, norm(y): 0.9919, norm:0.4740, tok/sec: 187947.30, flops:197.31, batch-reuse:1
@ 3306 train 3.9208 , allloss: 3.9208, dt: 693.39ms, fracRes: 0.4875, norm(attn): 1.0391, norm(output): 0.6953, norm(x): 1.1175, norm(y): 0.9915, norm:0.5034, tok/sec: 189031.90, flops:198.45, batch-reuse:1
@ 3307 train 3.9186 , allloss: 3.9186, dt: 706.52ms, fracRes: 0.4912, norm(attn): 1.0391, norm(output): 0.6953, norm(x): 1.1151, norm(y): 0.9912, norm:0.4856, tok/sec: 185516.54, flops:194.76, batch-reuse:1
@ 3308 train 4.0005 , allloss: 4.0005, dt: 705.87ms, fracRes: 0.4926, norm(attn): 1.0156, norm(output): 0.6914, norm(x): 1.1104, norm(y): 0.9902, norm:0.4786, tok/sec: 185688.23, flops:194.94, batch-reuse:1
@ 3309 train 3.9472 , allloss: 3.9472, dt: 701.41ms, fracRes: 0.4920, norm(attn): 1.0312, norm(output): 0.6914, norm(x): 1.1110, norm(y): 0.9910, norm:0.4821, tok/sec: 186870.37, flops:196.18, batch-reuse:1
@ 3310 train 3.9879 , allloss: 3.9879, dt: 704.02ms, fracRes: 0.4857, norm(attn): 1.0469, norm(output): 0.6914, norm(x): 1.1066, norm(y): 0.9914, norm:0.5111, tok/sec: 186175.77, flops:195.45, batch-reuse:1
@ 3311 train 3.9926 , allloss: 3.9926, dt: 707.71ms, fracRes: 0.4847, norm(attn): 1.0469, norm(output): 0.7031, norm(x): 1.1136, norm(y): 0.9912, norm:0.6454, tok/sec: 185206.17, flops:194.43, batch-reuse:1
@ 3312 train 3.9243 , allloss: 3.9243, dt: 698.35ms, fracRes: 0.4970, norm(attn): 1.0156, norm(output): 0.7109, norm(x): 1.1370, norm(y): 0.9911, norm:0.6038, tok/sec: 187687.94, flops:197.04, batch-reuse:1
@ 3313 train 3.9907 , allloss: 3.9907, dt: 705.24ms, fracRes: 0.4934, norm(attn): 1.0469, norm(output): 0.6992, norm(x): 1.1206, norm(y): 0.9916, norm:0.4521, tok/sec: 185855.65, flops:195.11, batch-reuse:1
@ 3314 train 3.9417 , allloss: 3.9417, dt: 703.93ms, fracRes: 0.4905, norm(attn): 1.0547, norm(output): 0.6953, norm(x): 1.1078, norm(y): 0.9903, norm:0.5250, tok/sec: 186199.29, flops:195.47, batch-reuse:1
@ 3315 train 4.0867 , allloss: 4.0867, dt: 706.68ms, fracRes: 0.4909, norm(attn): 1.0625, norm(output): 0.6953, norm(x): 1.1129, norm(y): 0.9924, norm:0.4738, tok/sec: 185476.79, flops:194.71, batch-reuse:1
@ 3316 train 3.9949 , allloss: 3.9949, dt: 694.88ms, fracRes: 0.4982, norm(attn): 1.0625, norm(output): 0.7109, norm(x): 1.1342, norm(y): 0.9912, norm:0.5311, tok/sec: 188625.05, flops:198.02, batch-reuse:1
@ 3317 train 3.9915 , allloss: 3.9915, dt: 710.65ms, fracRes: 0.4967, norm(attn): 1.0625, norm(output): 0.6992, norm(x): 1.1260, norm(y): 0.9913, norm:0.4879, tok/sec: 184440.47, flops:193.63, batch-reuse:1
@ 3318 train 3.7723 , allloss: 3.7723, dt: 702.15ms, fracRes: 0.4916, norm(attn): 1.0625, norm(output): 0.7031, norm(x): 1.1187, norm(y): 0.9903, norm:0.4590, tok/sec: 186671.95, flops:195.97, batch-reuse:1
@ 3319 train 4.0547 , allloss: 4.0547, dt: 688.80ms, fracRes: 0.4904, norm(attn): 1.0703, norm(output): 0.6953, norm(x): 1.1104, norm(y): 0.9909, norm:0.5194, tok/sec: 190290.79, flops:199.77, batch-reuse:1
@ 3320 train 4.0718 , allloss: 4.0718, dt: 700.10ms, fracRes: 0.4938, norm(attn): 1.0547, norm(output): 0.7031, norm(x): 1.1223, norm(y): 0.9913, norm:0.5048, tok/sec: 187218.92, flops:196.54, batch-reuse:1
@ 3321 train 4.0113 , allloss: 4.0113, dt: 687.01ms, fracRes: 0.4933, norm(attn): 1.0625, norm(output): 0.6953, norm(x): 1.1190, norm(y): 0.9917, norm:0.4840, tok/sec: 190786.01, flops:200.29, batch-reuse:1
@ 3322 train 3.8584 , allloss: 3.8584, dt: 699.00ms, fracRes: 0.4945, norm(attn): 1.0469, norm(output): 0.6992, norm(x): 1.1256, norm(y): 0.9909, norm:0.4860, tok/sec: 187514.90, flops:196.85, batch-reuse:1
@ 3323 train 3.8331 , allloss: 3.8331, dt: 701.12ms, fracRes: 0.4912, norm(attn): 1.0547, norm(output): 0.6992, norm(x): 1.1147, norm(y): 0.9912, norm:0.4639, tok/sec: 186946.05, flops:196.26, batch-reuse:1
@ 3324 train 3.9523 , allloss: 3.9523, dt: 693.81ms, fracRes: 0.4872, norm(attn): 1.0625, norm(output): 0.6953, norm(x): 1.1088, norm(y): 0.9920, norm:0.4699, tok/sec: 188915.56, flops:198.32, batch-reuse:1
@ 3325 train 4.0201 , allloss: 4.0201, dt: 695.75ms, fracRes: 0.4900, norm(attn): 1.0625, norm(output): 0.6914, norm(x): 1.1100, norm(y): 0.9911, norm:0.5244, tok/sec: 188390.73, flops:197.77, batch-reuse:1
@ 3326 train 3.9401 , allloss: 3.9401, dt: 686.97ms, fracRes: 0.4859, norm(attn): 1.0625, norm(output): 0.6914, norm(x): 1.1034, norm(y): 0.9902, norm:0.5456, tok/sec: 190796.61, flops:200.30, batch-reuse:1
@ 3327 train 3.9276 , allloss: 3.9276, dt: 701.32ms, fracRes: 0.4916, norm(attn): 1.0547, norm(output): 0.6914, norm(x): 1.1159, norm(y): 0.9910, norm:0.4427, tok/sec: 186892.92, flops:196.20, batch-reuse:1
@ 3328 train 3.9107 , allloss: 3.9107, dt: 688.29ms, fracRes: 0.4884, norm(attn): 1.0625, norm(output): 0.6914, norm(x): 1.1113, norm(y): 0.9911, norm:0.5041, tok/sec: 190431.46, flops:199.92, batch-reuse:1
@ 3329 train 3.8959 , allloss: 3.8959, dt: 687.78ms, fracRes: 0.4853, norm(attn): 1.0547, norm(output): 0.6953, norm(x): 1.1082, norm(y): 0.9905, norm:0.4729, tok/sec: 190572.13, flops:200.06, batch-reuse:1
@ 3330 train 3.8813 , allloss: 3.8813, dt: 698.15ms, fracRes: 0.4851, norm(attn): 1.0547, norm(output): 0.6992, norm(x): 1.1083, norm(y): 0.9903, norm:0.4996, tok/sec: 187741.01, flops:197.09, batch-reuse:1
@ 3331 train 3.6808 , allloss: 3.6808, dt: 685.38ms, fracRes: 0.4857, norm(attn): 1.0547, norm(output): 0.7031, norm(x): 1.1181, norm(y): 0.9890, norm:0.4672, tok/sec: 191240.50, flops:200.76, batch-reuse:1
@ 3332 train 3.9809 , allloss: 3.9809, dt: 697.34ms, fracRes: 0.4884, norm(attn): 1.0625, norm(output): 0.6914, norm(x): 1.1093, norm(y): 0.9915, norm:0.5028, tok/sec: 187959.89, flops:197.32, batch-reuse:1
@ 3333 train 3.8989 , allloss: 3.8989, dt: 688.54ms, fracRes: 0.4951, norm(attn): 1.0391, norm(output): 0.6992, norm(x): 1.1215, norm(y): 0.9908, norm:0.5251, tok/sec: 190361.76, flops:199.84, batch-reuse:1
@ 3334 train 3.9053 , allloss: 3.9053, dt: 692.94ms, fracRes: 0.4986, norm(attn): 1.0234, norm(output): 0.7070, norm(x): 1.1297, norm(y): 0.9898, norm:0.4993, tok/sec: 189152.55, flops:198.57, batch-reuse:1
@ 3335 train 3.8754 , allloss: 3.8754, dt: 700.84ms, fracRes: 0.4958, norm(attn): 1.0391, norm(output): 0.7031, norm(x): 1.1256, norm(y): 0.9903, norm:0.5395, tok/sec: 187022.56, flops:196.34, batch-reuse:1
@ 3336 train 4.0037 , allloss: 4.0037, dt: 700.34ms, fracRes: 0.4928, norm(attn): 1.0469, norm(output): 0.6953, norm(x): 1.1173, norm(y): 0.9908, norm:0.5428, tok/sec: 187154.87, flops:196.48, batch-reuse:1
@ 3337 train 3.9001 , allloss: 3.9001, dt: 709.83ms, fracRes: 0.4950, norm(attn): 1.0547, norm(output): 0.6992, norm(x): 1.1221, norm(y): 0.9912, norm:0.4879, tok/sec: 184651.97, flops:193.85, batch-reuse:1
@ 3338 train 3.8722 , allloss: 3.8722, dt: 698.51ms, fracRes: 0.4979, norm(attn): 1.0547, norm(output): 0.6992, norm(x): 1.1245, norm(y): 0.9901, norm:0.4782, tok/sec: 187645.66, flops:196.99, batch-reuse:1
@ 3339 train 3.9396 , allloss: 3.9396, dt: 692.58ms, fracRes: 0.4909, norm(attn): 1.0703, norm(output): 0.6914, norm(x): 1.1104, norm(y): 0.9907, norm:0.4597, tok/sec: 189252.57, flops:198.68, batch-reuse:1
@ 3340 train 3.8553 , allloss: 3.8553, dt: 703.08ms, fracRes: 0.4910, norm(attn): 1.0469, norm(output): 0.6953, norm(x): 1.1112, norm(y): 0.9904, norm:0.4635, tok/sec: 186426.66, flops:195.71, batch-reuse:1
@ 3341 train 4.2129 , allloss: 4.2129, dt: 694.72ms, fracRes: 0.4917, norm(attn): 1.0703, norm(output): 0.6953, norm(x): 1.1204, norm(y): 0.9935, norm:0.5478, tok/sec: 188669.13, flops:198.07, batch-reuse:1
@ 3342 train 4.0869 , allloss: 4.0869, dt: 692.18ms, fracRes: 0.4911, norm(attn): 1.0625, norm(output): 0.6992, norm(x): 1.1239, norm(y): 0.9920, norm:0.6540, tok/sec: 189362.15, flops:198.79, batch-reuse:1
@ 3343 train 4.0825 , allloss: 4.0825, dt: 697.74ms, fracRes: 0.4987, norm(attn): 1.0391, norm(output): 0.7070, norm(x): 1.1316, norm(y): 0.9897, norm:0.6491, tok/sec: 187852.64, flops:197.21, batch-reuse:1
@ 3344 train 4.1501 , allloss: 4.1501, dt: 709.03ms, fracRes: 0.5005, norm(attn): 1.0469, norm(output): 0.6992, norm(x): 1.1311, norm(y): 0.9906, norm:0.5688, tok/sec: 184860.59, flops:194.07, batch-reuse:1
@ 3345 train 4.0767 , allloss: 4.0767, dt: 706.22ms, fracRes: 0.5016, norm(attn): 1.0547, norm(output): 0.6953, norm(x): 1.1307, norm(y): 0.9918, norm:0.5572, tok/sec: 185596.96, flops:194.84, batch-reuse:1
@ 3346 train 4.0507 , allloss: 4.0507, dt: 711.55ms, fracRes: 0.5029, norm(attn): 1.0547, norm(output): 0.6992, norm(x): 1.1350, norm(y): 0.9912, norm:0.5431, tok/sec: 184206.25, flops:193.38, batch-reuse:1
@ 3347 train 4.0787 , allloss: 4.0787, dt: 701.59ms, fracRes: 0.5026, norm(attn): 1.0469, norm(output): 0.6992, norm(x): 1.1312, norm(y): 0.9918, norm:0.5217, tok/sec: 186821.22, flops:196.13, batch-reuse:1
@ 3348 train 4.0386 , allloss: 4.0386, dt: 693.21ms, fracRes: 0.5061, norm(attn): 1.0312, norm(output): 0.7109, norm(x): 1.1404, norm(y): 0.9915, norm:0.5298, tok/sec: 189081.12, flops:198.50, batch-reuse:1
@ 3349 train 4.0005 , allloss: 4.0005, dt: 698.28ms, fracRes: 0.5007, norm(attn): 1.0234, norm(output): 0.7109, norm(x): 1.1304, norm(y): 0.9900, norm:0.4638, tok/sec: 187706.46, flops:197.05, batch-reuse:1
@ 3350 train 4.0565 , allloss: 4.0565, dt: 708.09ms, fracRes: 0.4977, norm(attn): 1.0312, norm(output): 0.6992, norm(x): 1.1250, norm(y): 0.9899, norm:0.5608, tok/sec: 185107.64, flops:194.33, batch-reuse:1
@ 3351 train 4.1692 , allloss: 4.1692, dt: 707.77ms, fracRes: 0.5056, norm(attn): 1.0469, norm(output): 0.7070, norm(x): 1.1415, norm(y): 0.9920, norm:0.5470, tok/sec: 185191.07, flops:194.41, batch-reuse:1
@ 3352 train 4.1310 , allloss: 4.1310, dt: 709.75ms, fracRes: 0.5032, norm(attn): 1.0547, norm(output): 0.7070, norm(x): 1.1400, norm(y): 0.9927, norm:0.6420, tok/sec: 184673.68, flops:193.87, batch-reuse:1
@ 3353 train 4.1542 , allloss: 4.1542, dt: 704.90ms, fracRes: 0.5000, norm(attn): 1.0547, norm(output): 0.7031, norm(x): 1.1319, norm(y): 0.9919, norm:0.5525, tok/sec: 185945.04, flops:195.21, batch-reuse:1
@ 3354 train 4.0983 , allloss: 4.0983, dt: 690.22ms, fracRes: 0.5021, norm(attn): 1.0625, norm(output): 0.7031, norm(x): 1.1352, norm(y): 0.9910, norm:0.5384, tok/sec: 189899.10, flops:199.36, batch-reuse:1
@ 3355 train 4.1776 , allloss: 4.1776, dt: 695.75ms, fracRes: 0.4984, norm(attn): 1.0625, norm(output): 0.7031, norm(x): 1.1258, norm(y): 0.9910, norm:0.5800, tok/sec: 188390.61, flops:197.77, batch-reuse:1
@ 3356 train 4.1027 , allloss: 4.1027, dt: 706.56ms, fracRes: 0.5034, norm(attn): 1.0547, norm(output): 0.7148, norm(x): 1.1382, norm(y): 0.9917, norm:0.5904, tok/sec: 185507.02, flops:194.75, batch-reuse:1
@ 3357 train 4.0931 , allloss: 4.0931, dt: 688.50ms, fracRes: 0.4986, norm(attn): 1.0703, norm(output): 0.7109, norm(x): 1.1323, norm(y): 0.9916, norm:0.4740, tok/sec: 190372.70, flops:199.85, batch-reuse:1
@ 3358 train 4.1569 , allloss: 4.1569, dt: 683.77ms, fracRes: 0.4936, norm(attn): 1.0859, norm(output): 0.7031, norm(x): 1.1226, norm(y): 0.9915, norm:0.6068, tok/sec: 191689.00, flops:201.24, batch-reuse:1
@ 3359 train 4.0744 , allloss: 4.0744, dt: 690.38ms, fracRes: 0.4953, norm(attn): 1.1016, norm(output): 0.7070, norm(x): 1.1285, norm(y): 0.9925, norm:0.5122, tok/sec: 189854.31, flops:199.31, batch-reuse:1
@ 3360 train 4.1106 , allloss: 4.1106, dt: 692.20ms, fracRes: 0.4983, norm(attn): 1.1094, norm(output): 0.6953, norm(x): 1.1233, norm(y): 0.9925, norm:0.5039, tok/sec: 189356.74, flops:198.79, batch-reuse:1
@ 3361 train 4.1574 , allloss: 4.1574, dt: 690.83ms, fracRes: 0.4954, norm(attn): 1.0938, norm(output): 0.6953, norm(x): 1.1175, norm(y): 0.9919, norm:0.5158, tok/sec: 189731.26, flops:199.18, batch-reuse:1
@ 3362 train 4.0240 , allloss: 4.0240, dt: 690.53ms, fracRes: 0.4948, norm(attn): 1.1016, norm(output): 0.7031, norm(x): 1.1233, norm(y): 0.9913, norm:0.5184, tok/sec: 189812.36, flops:199.27, batch-reuse:1
@ 3363 train 4.1033 , allloss: 4.1033, dt: 690.77ms, fracRes: 0.4937, norm(attn): 1.0781, norm(output): 0.7031, norm(x): 1.1255, norm(y): 0.9912, norm:0.4545, tok/sec: 189747.83, flops:199.20, batch-reuse:1
@ 3364 train 4.1037 , allloss: 4.1037, dt: 685.42ms, fracRes: 0.4939, norm(attn): 1.0781, norm(output): 0.7031, norm(x): 1.1284, norm(y): 0.9920, norm:0.4856, tok/sec: 191228.59, flops:200.75, batch-reuse:1
@ 3365 train 4.0681 , allloss: 4.0681, dt: 697.12ms, fracRes: 0.4980, norm(attn): 1.0859, norm(output): 0.7031, norm(x): 1.1325, norm(y): 0.9914, norm:0.4993, tok/sec: 188019.04, flops:197.38, batch-reuse:1
@ 3366 train 4.2304 , allloss: 4.2304, dt: 698.22ms, fracRes: 0.5009, norm(attn): 1.0938, norm(output): 0.7227, norm(x): 1.1458, norm(y): 0.9920, norm:0.4797, tok/sec: 187723.83, flops:197.07, batch-reuse:1
@ 3367 train 4.1148 , allloss: 4.1148, dt: 698.21ms, fracRes: 0.5000, norm(attn): 1.0938, norm(output): 0.7070, norm(x): 1.1361, norm(y): 0.9910, norm:0.5556, tok/sec: 187725.05, flops:197.07, batch-reuse:1
@ 3368 train 4.1912 , allloss: 4.1912, dt: 722.39ms, fracRes: 0.4928, norm(attn): 1.1172, norm(output): 0.7031, norm(x): 1.1223, norm(y): 0.9918, norm:0.4841, tok/sec: 181441.27, flops:190.48, batch-reuse:1
@ 3369 train 4.1202 , allloss: 4.1202, dt: 693.21ms, fracRes: 0.4958, norm(attn): 1.1250, norm(output): 0.6992, norm(x): 1.1250, norm(y): 0.9920, norm:0.5020, tok/sec: 189080.86, flops:198.50, batch-reuse:1
@ 3370 train 4.0821 , allloss: 4.0821, dt: 696.62ms, fracRes: 0.5023, norm(attn): 1.0938, norm(output): 0.7109, norm(x): 1.1400, norm(y): 0.9910, norm:0.4257, tok/sec: 188155.20, flops:197.53, batch-reuse:1
@ 3371 train 4.0683 , allloss: 4.0683, dt: 685.80ms, fracRes: 0.4998, norm(attn): 1.1094, norm(output): 0.7031, norm(x): 1.1312, norm(y): 0.9920, norm:0.4914, tok/sec: 191124.08, flops:200.64, batch-reuse:1
@ 3372 train 4.0763 , allloss: 4.0763, dt: 696.86ms, fracRes: 0.4954, norm(attn): 1.1094, norm(output): 0.6992, norm(x): 1.1213, norm(y): 0.9907, norm:0.4678, tok/sec: 188088.70, flops:197.46, batch-reuse:1
@ 3373 train 4.1343 , allloss: 4.1343, dt: 698.43ms, fracRes: 0.4993, norm(attn): 1.1328, norm(output): 0.7031, norm(x): 1.1256, norm(y): 0.9918, norm:0.5093, tok/sec: 187666.48, flops:197.01, batch-reuse:1
@ 3374 train 4.0600 , allloss: 4.0600, dt: 696.49ms, fracRes: 0.5004, norm(attn): 1.1172, norm(output): 0.6992, norm(x): 1.1295, norm(y): 0.9918, norm:0.5575, tok/sec: 188189.46, flops:197.56, batch-reuse:1
@ 3375 train 4.0161 , allloss: 4.0161, dt: 696.06ms, fracRes: 0.5010, norm(attn): 1.0938, norm(output): 0.7031, norm(x): 1.1284, norm(y): 0.9914, norm:0.4737, tok/sec: 188305.81, flops:197.68, batch-reuse:1
@ 3376 train 4.2540 , allloss: 4.2540, dt: 691.21ms, fracRes: 0.4913, norm(attn): 1.1250, norm(output): 0.7070, norm(x): 1.1272, norm(y): 0.9919, norm:0.5332, tok/sec: 189626.55, flops:199.07, batch-reuse:1
@ 3377 train 4.1027 , allloss: 4.1027, dt: 690.23ms, fracRes: 0.4813, norm(attn): 1.1328, norm(output): 0.7656, norm(x): 1.1746, norm(y): 0.9916, norm:0.7283, tok/sec: 189895.10, flops:199.35, batch-reuse:1
@ 3378 train 4.1994 , allloss: 4.1994, dt: 687.90ms, fracRes: 0.4964, norm(attn): 1.1016, norm(output): 0.7109, norm(x): 1.1331, norm(y): 0.9917, norm:0.7219, tok/sec: 190539.77, flops:200.03, batch-reuse:1
@ 3379 train 4.0462 , allloss: 4.0462, dt: 694.54ms, fracRes: 0.4917, norm(attn): 1.1094, norm(output): 0.6953, norm(x): 1.1140, norm(y): 0.9896, norm:0.5622, tok/sec: 188716.93, flops:198.12, batch-reuse:1
@ 3380 train 4.1170 , allloss: 4.1170, dt: 695.56ms, fracRes: 0.4952, norm(attn): 1.1250, norm(output): 0.7031, norm(x): 1.1213, norm(y): 0.9908, norm:0.6205, tok/sec: 188440.01, flops:197.82, batch-reuse:1
@ 3381 train 4.0997 , allloss: 4.0997, dt: 697.87ms, fracRes: 0.5004, norm(attn): 1.1328, norm(output): 0.6953, norm(x): 1.1260, norm(y): 0.9909, norm:0.6114, tok/sec: 187816.83, flops:197.17, batch-reuse:1
@ 3382 train 4.1388 , allloss: 4.1388, dt: 693.99ms, fracRes: 0.5030, norm(attn): 1.1328, norm(output): 0.7070, norm(x): 1.1314, norm(y): 0.9911, norm:0.5197, tok/sec: 188868.32, flops:198.27, batch-reuse:1
@ 3383 train 4.1461 , allloss: 4.1461, dt: 698.87ms, fracRes: 0.5014, norm(attn): 1.1328, norm(output): 0.6953, norm(x): 1.1280, norm(y): 0.9915, norm:0.5728, tok/sec: 187548.81, flops:196.89, batch-reuse:1
@ 3384 train 4.0905 , allloss: 4.0905, dt: 689.65ms, fracRes: 0.5014, norm(attn): 1.1328, norm(output): 0.7031, norm(x): 1.1317, norm(y): 0.9915, norm:0.4844, tok/sec: 190056.14, flops:199.52, batch-reuse:1
@ 3385 train 4.0484 , allloss: 4.0484, dt: 699.83ms, fracRes: 0.4994, norm(attn): 1.1328, norm(output): 0.7031, norm(x): 1.1264, norm(y): 0.9909, norm:0.5130, tok/sec: 187291.95, flops:196.62, batch-reuse:1
@ 3386 train 4.3049 , allloss: 4.3049, dt: 693.31ms, fracRes: 0.5079, norm(attn): 1.1484, norm(output): 0.7031, norm(x): 1.1435, norm(y): 0.9924, norm:0.6184, tok/sec: 189053.49, flops:198.47, batch-reuse:1
@ 3387 train 4.1272 , allloss: 4.1272, dt: 701.68ms, fracRes: 0.5001, norm(attn): 1.1484, norm(output): 0.7031, norm(x): 1.1319, norm(y): 0.9927, norm:0.5704, tok/sec: 186796.72, flops:196.10, batch-reuse:1
@ 3388 train 4.0052 , allloss: 4.0052, dt: 704.60ms, fracRes: 0.4978, norm(attn): 1.1406, norm(output): 0.7031, norm(x): 1.1270, norm(y): 0.9914, norm:0.4988, tok/sec: 186022.43, flops:195.29, batch-reuse:1
@ 3389 train 4.0444 , allloss: 4.0444, dt: 705.09ms, fracRes: 0.4930, norm(attn): 1.1328, norm(output): 0.7031, norm(x): 1.1212, norm(y): 0.9907, norm:0.4934, tok/sec: 185892.73, flops:195.15, batch-reuse:1
@ 3390 train 4.2182 , allloss: 4.2182, dt: 705.70ms, fracRes: 0.5009, norm(attn): 1.1406, norm(output): 0.7227, norm(x): 1.1449, norm(y): 0.9928, norm:0.6405, tok/sec: 185734.59, flops:194.98, batch-reuse:1
@ 3391 train 4.1768 , allloss: 4.1768, dt: 689.84ms, fracRes: 0.4977, norm(attn): 1.1406, norm(output): 0.7031, norm(x): 1.1322, norm(y): 0.9922, norm:0.5138, tok/sec: 190003.98, flops:199.47, batch-reuse:1
@ 3392 train 4.0776 , allloss: 4.0776, dt: 698.02ms, fracRes: 0.4910, norm(attn): 1.1406, norm(output): 0.6992, norm(x): 1.1202, norm(y): 0.9919, norm:0.4924, tok/sec: 187775.51, flops:197.13, batch-reuse:1
@ 3393 train 4.2316 , allloss: 4.2316, dt: 703.62ms, fracRes: 0.5011, norm(attn): 1.1406, norm(output): 0.7070, norm(x): 1.1373, norm(y): 0.9920, norm:0.5571, tok/sec: 186281.87, flops:195.56, batch-reuse:1
@ 3394 train 4.1654 , allloss: 4.1654, dt: 701.30ms, fracRes: 0.4999, norm(attn): 1.1484, norm(output): 0.7031, norm(x): 1.1296, norm(y): 0.9921, norm:0.5075, tok/sec: 186898.39, flops:196.21, batch-reuse:1
@ 3395 train 4.1061 , allloss: 4.1061, dt: 702.21ms, fracRes: 0.5036, norm(attn): 1.1406, norm(output): 0.7031, norm(x): 1.1364, norm(y): 0.9930, norm:0.5026, tok/sec: 186656.81, flops:195.95, batch-reuse:1
@ 3396 train 4.1302 , allloss: 4.1302, dt: 703.77ms, fracRes: 0.4993, norm(attn): 1.1328, norm(output): 0.6992, norm(x): 1.1284, norm(y): 0.9926, norm:0.5297, tok/sec: 186241.36, flops:195.52, batch-reuse:1
@ 3397 train 4.0929 , allloss: 4.0929, dt: 703.80ms, fracRes: 0.4938, norm(attn): 1.1328, norm(output): 0.7031, norm(x): 1.1241, norm(y): 0.9916, norm:0.4873, tok/sec: 186235.81, flops:195.51, batch-reuse:1
@ 3398 train 4.1666 , allloss: 4.1666, dt: 698.43ms, fracRes: 0.4902, norm(attn): 1.1562, norm(output): 0.7031, norm(x): 1.1194, norm(y): 0.9922, norm:0.4894, tok/sec: 187665.39, flops:197.01, batch-reuse:1
@ 3399 train 4.1024 , allloss: 4.1024, dt: 704.29ms, fracRes: 0.4955, norm(attn): 1.1484, norm(output): 0.7031, norm(x): 1.1247, norm(y): 0.9922, norm:0.4546, tok/sec: 186105.12, flops:195.37, batch-reuse:1
@ 3400 train 4.1287 , allloss: 4.1287, dt: 688.06ms, fracRes: 0.5010, norm(attn): 1.1406, norm(output): 0.7031, norm(x): 1.1335, norm(y): 0.9926, norm:0.4888, tok/sec: 190495.73, flops:199.98, batch-reuse:1
@ 3401 train 4.1202 , allloss: 4.1202, dt: 697.55ms, fracRes: 0.4933, norm(attn): 1.1484, norm(output): 0.7031, norm(x): 1.1200, norm(y): 0.9913, norm:0.4496, tok/sec: 187903.81, flops:197.26, batch-reuse:1
@ 3402 train 4.1127 , allloss: 4.1127, dt: 705.45ms, fracRes: 0.4972, norm(attn): 1.1484, norm(output): 0.7109, norm(x): 1.1370, norm(y): 0.9917, norm:0.5022, tok/sec: 185799.81, flops:195.05, batch-reuse:1
@ 3403 train 4.0867 , allloss: 4.0867, dt: 707.98ms, fracRes: 0.4955, norm(attn): 1.1719, norm(output): 0.6992, norm(x): 1.1255, norm(y): 0.9921, norm:0.4861, tok/sec: 185136.07, flops:194.36, batch-reuse:1
@ 3404 train 4.0502 , allloss: 4.0502, dt: 704.80ms, fracRes: 0.4928, norm(attn): 1.1484, norm(output): 0.6953, norm(x): 1.1203, norm(y): 0.9922, norm:0.4646, tok/sec: 185970.83, flops:195.23, batch-reuse:1
@ 3405 train 4.0653 , allloss: 4.0653, dt: 701.38ms, fracRes: 0.4908, norm(attn): 1.1562, norm(output): 0.7031, norm(x): 1.1199, norm(y): 0.9915, norm:0.4563, tok/sec: 186876.09, flops:196.18, batch-reuse:1
@ 3406 train 4.0530 , allloss: 4.0530, dt: 707.14ms, fracRes: 0.4897, norm(attn): 1.1484, norm(output): 0.7031, norm(x): 1.1206, norm(y): 0.9913, norm:0.4814, tok/sec: 185355.16, flops:194.59, batch-reuse:1
@ 3407 train 4.0894 , allloss: 4.0894, dt: 709.30ms, fracRes: 0.4896, norm(attn): 1.1562, norm(output): 0.6992, norm(x): 1.1154, norm(y): 0.9909, norm:0.4689, tok/sec: 184790.44, flops:193.99, batch-reuse:1
@ 3408 train 4.0789 , allloss: 4.0789, dt: 691.82ms, fracRes: 0.4956, norm(attn): 1.1484, norm(output): 0.7031, norm(x): 1.1248, norm(y): 0.9922, norm:0.4967, tok/sec: 189460.82, flops:198.90, batch-reuse:1
@ 3409 train 4.1893 , allloss: 4.1893, dt: 698.48ms, fracRes: 0.5051, norm(attn): 1.1562, norm(output): 0.7031, norm(x): 1.1404, norm(y): 0.9932, norm:0.4635, tok/sec: 187653.54, flops:197.00, batch-reuse:1
@ 3410 train 4.1548 , allloss: 4.1548, dt: 698.65ms, fracRes: 0.5064, norm(attn): 1.1562, norm(output): 0.7148, norm(x): 1.1486, norm(y): 0.9928, norm:0.5236, tok/sec: 187607.37, flops:196.95, batch-reuse:1
@ 3411 train 4.1367 , allloss: 4.1367, dt: 692.21ms, fracRes: 0.5022, norm(attn): 1.1484, norm(output): 0.7070, norm(x): 1.1314, norm(y): 0.9912, norm:0.4950, tok/sec: 189353.34, flops:198.78, batch-reuse:1
@ 3412 train 4.1351 , allloss: 4.1351, dt: 703.75ms, fracRes: 0.5045, norm(attn): 1.1406, norm(output): 0.7070, norm(x): 1.1403, norm(y): 0.9912, norm:0.4991, tok/sec: 186247.23, flops:195.52, batch-reuse:1
@ 3413 train 4.1955 , allloss: 4.1955, dt: 691.97ms, fracRes: 0.5065, norm(attn): 1.1250, norm(output): 0.7109, norm(x): 1.1422, norm(y): 0.9925, norm:0.5100, tok/sec: 189419.43, flops:198.85, batch-reuse:1
@ 3414 train 4.1033 , allloss: 4.1033, dt: 697.01ms, fracRes: 0.5040, norm(attn): 1.1797, norm(output): 0.6992, norm(x): 1.1375, norm(y): 0.9939, norm:0.5410, tok/sec: 188050.16, flops:197.42, batch-reuse:1
@ 3415 train 4.0620 , allloss: 4.0620, dt: 696.64ms, fracRes: 0.5020, norm(attn): 1.1562, norm(output): 0.7031, norm(x): 1.1326, norm(y): 0.9928, norm:0.4873, tok/sec: 188148.37, flops:197.52, batch-reuse:1
@ 3416 train 4.1224 , allloss: 4.1224, dt: 684.83ms, fracRes: 0.5042, norm(attn): 1.1719, norm(output): 0.7070, norm(x): 1.1385, norm(y): 0.9915, norm:0.5089, tok/sec: 191392.70, flops:200.92, batch-reuse:1
@ 3417 train 4.0773 , allloss: 4.0773, dt: 696.30ms, fracRes: 0.5066, norm(attn): 1.1562, norm(output): 0.7109, norm(x): 1.1391, norm(y): 0.9914, norm:0.5430, tok/sec: 188241.72, flops:197.62, batch-reuse:1
@ 3418 train 4.0206 , allloss: 4.0206, dt: 689.66ms, fracRes: 0.5086, norm(attn): 1.1250, norm(output): 0.7031, norm(x): 1.1410, norm(y): 0.9911, norm:0.4778, tok/sec: 190053.77, flops:199.52, batch-reuse:1
@ 3419 train 4.0770 , allloss: 4.0770, dt: 696.46ms, fracRes: 0.5055, norm(attn): 1.1406, norm(output): 0.7031, norm(x): 1.1372, norm(y): 0.9924, norm:0.4637, tok/sec: 188197.20, flops:197.57, batch-reuse:1
@ 3420 train 4.0958 , allloss: 4.0958, dt: 697.83ms, fracRes: 0.4975, norm(attn): 1.1875, norm(output): 0.7031, norm(x): 1.1281, norm(y): 0.9922, norm:0.4579, tok/sec: 187827.86, flops:197.18, batch-reuse:1
@ 3421 train 4.1350 , allloss: 4.1350, dt: 689.43ms, fracRes: 0.4938, norm(attn): 1.1641, norm(output): 0.7031, norm(x): 1.1259, norm(y): 0.9915, norm:0.4811, tok/sec: 190115.95, flops:199.58, batch-reuse:1
@ 3422 train 4.0941 , allloss: 4.0941, dt: 695.80ms, fracRes: 0.4922, norm(attn): 1.1484, norm(output): 0.7070, norm(x): 1.1260, norm(y): 0.9910, norm:0.6083, tok/sec: 188375.89, flops:197.76, batch-reuse:1
@ 3423 train 4.0671 , allloss: 4.0671, dt: 696.28ms, fracRes: 0.4923, norm(attn): 1.1562, norm(output): 0.7070, norm(x): 1.1250, norm(y): 0.9914, norm:0.4631, tok/sec: 188245.59, flops:197.62, batch-reuse:1
@ 3424 train 4.1156 , allloss: 4.1156, dt: 696.28ms, fracRes: 0.4931, norm(attn): 1.1406, norm(output): 0.7031, norm(x): 1.1204, norm(y): 0.9914, norm:0.5075, tok/sec: 188245.53, flops:197.62, batch-reuse:1
@ 3425 train 4.1149 , allloss: 4.1149, dt: 695.42ms, fracRes: 0.4967, norm(attn): 1.1484, norm(output): 0.7031, norm(x): 1.1260, norm(y): 0.9919, norm:0.4194, tok/sec: 188479.29, flops:197.87, batch-reuse:1
@ 3426 train 4.0735 , allloss: 4.0735, dt: 694.64ms, fracRes: 0.5032, norm(attn): 1.1406, norm(output): 0.6992, norm(x): 1.1358, norm(y): 0.9923, norm:0.4557, tok/sec: 188691.60, flops:198.09, batch-reuse:1
@ 3427 train 4.1127 , allloss: 4.1127, dt: 692.80ms, fracRes: 0.5013, norm(attn): 1.1328, norm(output): 0.7031, norm(x): 1.1296, norm(y): 0.9916, norm:0.4547, tok/sec: 189191.61, flops:198.61, batch-reuse:1
@ 3428 train 4.0262 , allloss: 4.0262, dt: 710.03ms, fracRes: 0.4977, norm(attn): 1.1484, norm(output): 0.6953, norm(x): 1.1230, norm(y): 0.9920, norm:0.4247, tok/sec: 184600.32, flops:193.79, batch-reuse:1
@ 3429 train 4.0287 , allloss: 4.0287, dt: 709.55ms, fracRes: 0.4999, norm(attn): 1.1562, norm(output): 0.7031, norm(x): 1.1309, norm(y): 0.9931, norm:0.4949, tok/sec: 184724.38, flops:193.92, batch-reuse:1
@ 3430 train 4.3209 , allloss: 4.3209, dt: 713.86ms, fracRes: 0.5029, norm(attn): 1.1875, norm(output): 0.6953, norm(x): 1.1339, norm(y): 0.9951, norm:0.6665, tok/sec: 183609.43, flops:192.75, batch-reuse:1
@ 3431 train 4.1940 , allloss: 4.1940, dt: 712.86ms, fracRes: 0.4993, norm(attn): 1.1250, norm(output): 0.7070, norm(x): 1.1381, norm(y): 0.9920, norm:1.1338, tok/sec: 183868.20, flops:193.03, batch-reuse:1
@ 3432 train 4.0270 , allloss: 4.0270, dt: 708.49ms, fracRes: 0.5070, norm(attn): 1.1562, norm(output): 0.7070, norm(x): 1.1474, norm(y): 0.9935, norm:1.2077, tok/sec: 185001.12, flops:194.21, batch-reuse:1
@ 3433 train 4.1412 , allloss: 4.1412, dt: 708.67ms, fracRes: 0.5104, norm(attn): 1.1406, norm(output): 0.7109, norm(x): 1.1485, norm(y): 0.9924, norm:1.0367, tok/sec: 184954.26, flops:194.17, batch-reuse:1
@ 3434 train 4.1000 , allloss: 4.1000, dt: 699.08ms, fracRes: 0.5036, norm(attn): 1.1719, norm(output): 0.7148, norm(x): 1.1420, norm(y): 0.9920, norm:0.9796, tok/sec: 187493.29, flops:196.83, batch-reuse:1
@ 3435 train 4.0549 , allloss: 4.0549, dt: 694.22ms, fracRes: 0.4933, norm(attn): 1.1719, norm(output): 0.6914, norm(x): 1.1106, norm(y): 0.9908, norm:0.7295, tok/sec: 188803.97, flops:198.21, batch-reuse:1
@ 3436 train 4.1074 , allloss: 4.1074, dt: 686.30ms, fracRes: 0.4926, norm(attn): 1.1719, norm(output): 0.6953, norm(x): 1.1100, norm(y): 0.9917, norm:0.6083, tok/sec: 190982.26, flops:200.49, batch-reuse:1
@ 3437 train 4.0701 , allloss: 4.0701, dt: 693.74ms, fracRes: 0.5004, norm(attn): 1.1562, norm(output): 0.6953, norm(x): 1.1222, norm(y): 0.9924, norm:0.5826, tok/sec: 188934.91, flops:198.34, batch-reuse:1
@ 3438 train 4.1483 , allloss: 4.1483, dt: 690.49ms, fracRes: 0.5066, norm(attn): 1.1641, norm(output): 0.6953, norm(x): 1.1352, norm(y): 0.9932, norm:0.5531, tok/sec: 189823.30, flops:199.28, batch-reuse:1
@ 3439 train 4.0149 , allloss: 4.0149, dt: 705.74ms, fracRes: 0.5034, norm(attn): 1.1641, norm(output): 0.7031, norm(x): 1.1315, norm(y): 0.9920, norm:0.5536, tok/sec: 185723.67, flops:194.97, batch-reuse:1
@ 3440 train 3.9823 , allloss: 3.9823, dt: 710.33ms, fracRes: 0.5015, norm(attn): 1.1719, norm(output): 0.6992, norm(x): 1.1293, norm(y): 0.9924, norm:0.5166, tok/sec: 184522.56, flops:193.71, batch-reuse:1
@ 3441 train 4.1153 , allloss: 4.1153, dt: 681.35ms, fracRes: 0.5014, norm(attn): 1.1875, norm(output): 0.6992, norm(x): 1.1316, norm(y): 0.9927, norm:0.4896, tok/sec: 192371.43, flops:201.95, batch-reuse:1
@ 3442 train 4.0724 , allloss: 4.0724, dt: 691.93ms, fracRes: 0.4995, norm(attn): 1.2109, norm(output): 0.6992, norm(x): 1.1289, norm(y): 0.9914, norm:0.4737, tok/sec: 189429.55, flops:198.86, batch-reuse:1
@ 3443 train 4.0461 , allloss: 4.0461, dt: 691.51ms, fracRes: 0.5015, norm(attn): 1.1875, norm(output): 0.7031, norm(x): 1.1339, norm(y): 0.9913, norm:0.4808, tok/sec: 189544.04, flops:198.98, batch-reuse:1
@ 3444 train 4.0177 , allloss: 4.0177, dt: 689.67ms, fracRes: 0.4994, norm(attn): 1.1875, norm(output): 0.6992, norm(x): 1.1300, norm(y): 0.9913, norm:0.4685, tok/sec: 190051.01, flops:199.52, batch-reuse:1
@ 3445 train 4.0474 , allloss: 4.0474, dt: 693.04ms, fracRes: 0.5012, norm(attn): 1.1797, norm(output): 0.7031, norm(x): 1.1301, norm(y): 0.9928, norm:0.5154, tok/sec: 189125.55, flops:198.54, batch-reuse:1
@ 3446 train 4.0432 , allloss: 4.0432, dt: 698.52ms, fracRes: 0.4980, norm(attn): 1.1719, norm(output): 0.7031, norm(x): 1.1255, norm(y): 0.9912, norm:0.4554, tok/sec: 187642.14, flops:196.99, batch-reuse:1
@ 3447 train 4.0895 , allloss: 4.0895, dt: 699.40ms, fracRes: 0.5002, norm(attn): 1.1719, norm(output): 0.6953, norm(x): 1.1226, norm(y): 0.9918, norm:0.5106, tok/sec: 187406.43, flops:196.74, batch-reuse:1
@ 3448 train 4.0214 , allloss: 4.0214, dt: 691.18ms, fracRes: 0.5038, norm(attn): 1.1719, norm(output): 0.7031, norm(x): 1.1340, norm(y): 0.9915, norm:0.4623, tok/sec: 189633.94, flops:199.08, batch-reuse:1
@ 3449 train 4.0771 , allloss: 4.0771, dt: 700.43ms, fracRes: 0.5039, norm(attn): 1.1875, norm(output): 0.6992, norm(x): 1.1348, norm(y): 0.9925, norm:0.5244, tok/sec: 187132.06, flops:196.45, batch-reuse:1
@ 3450 train 4.0176 , allloss: 4.0176, dt: 700.31ms, fracRes: 0.4983, norm(attn): 1.2188, norm(output): 0.6953, norm(x): 1.1210, norm(y): 0.9926, norm:0.5003, tok/sec: 187161.87, flops:196.48, batch-reuse:1
@ 3451 train 4.1159 , allloss: 4.1159, dt: 700.16ms, fracRes: 0.5033, norm(attn): 1.2109, norm(output): 0.7070, norm(x): 1.1364, norm(y): 0.9934, norm:0.4998, tok/sec: 187202.92, flops:196.53, batch-reuse:1
@ 3452 train 4.0804 , allloss: 4.0804, dt: 705.16ms, fracRes: 0.5020, norm(attn): 1.2109, norm(output): 0.6992, norm(x): 1.1298, norm(y): 0.9930, norm:0.5317, tok/sec: 185875.26, flops:195.13, batch-reuse:1
@ 3453 train 4.0675 , allloss: 4.0675, dt: 708.10ms, fracRes: 0.5082, norm(attn): 1.1719, norm(output): 0.7109, norm(x): 1.1438, norm(y): 0.9914, norm:0.5499, tok/sec: 185102.53, flops:194.32, batch-reuse:1
@ 3454 train 4.1051 , allloss: 4.1051, dt: 703.41ms, fracRes: 0.4996, norm(attn): 1.2344, norm(output): 0.6992, norm(x): 1.1312, norm(y): 0.9933, norm:0.6401, tok/sec: 186338.76, flops:195.62, batch-reuse:1
@ 3455 train 4.0541 , allloss: 4.0541, dt: 712.15ms, fracRes: 0.4972, norm(attn): 1.2031, norm(output): 0.7031, norm(x): 1.1267, norm(y): 0.9913, norm:0.7710, tok/sec: 184051.03, flops:193.22, batch-reuse:1
@ 3456 train 4.0016 , allloss: 4.0016, dt: 709.28ms, fracRes: 0.4982, norm(attn): 1.1953, norm(output): 0.6992, norm(x): 1.1251, norm(y): 0.9915, norm:0.5745, tok/sec: 184795.22, flops:194.00, batch-reuse:1
@ 3457 train 4.0074 , allloss: 4.0074, dt: 713.65ms, fracRes: 0.5023, norm(attn): 1.1719, norm(output): 0.7109, norm(x): 1.1351, norm(y): 0.9915, norm:0.6121, tok/sec: 183664.02, flops:192.81, batch-reuse:1
@ 3458 train 3.9755 , allloss: 3.9755, dt: 714.25ms, fracRes: 0.4995, norm(attn): 1.1875, norm(output): 0.6953, norm(x): 1.1255, norm(y): 0.9914, norm:0.6131, tok/sec: 183508.85, flops:192.65, batch-reuse:1
@ 3459 train 4.0246 , allloss: 4.0246, dt: 705.10ms, fracRes: 0.4980, norm(attn): 1.1875, norm(output): 0.6953, norm(x): 1.1191, norm(y): 0.9899, norm:0.5132, tok/sec: 185891.28, flops:195.15, batch-reuse:1
@ 3460 train 4.1234 , allloss: 4.1234, dt: 696.62ms, fracRes: 0.5050, norm(attn): 1.1875, norm(output): 0.7070, norm(x): 1.1383, norm(y): 0.9919, norm:0.5093, tok/sec: 188154.30, flops:197.52, batch-reuse:1
@ 3461 train 4.0303 , allloss: 4.0303, dt: 711.20ms, fracRes: 0.5035, norm(attn): 1.1953, norm(output): 0.6953, norm(x): 1.1286, norm(y): 0.9919, norm:0.4682, tok/sec: 184297.27, flops:193.48, batch-reuse:1
@ 3462 train 4.0292 , allloss: 4.0292, dt: 699.03ms, fracRes: 0.5025, norm(attn): 1.1953, norm(output): 0.7188, norm(x): 1.1369, norm(y): 0.9919, norm:0.4643, tok/sec: 187506.40, flops:196.84, batch-reuse:1
@ 3463 train 4.0545 , allloss: 4.0545, dt: 706.33ms, fracRes: 0.5035, norm(attn): 1.2109, norm(output): 0.7070, norm(x): 1.1374, norm(y): 0.9919, norm:0.4400, tok/sec: 185568.45, flops:194.81, batch-reuse:1
@ 3464 train 3.8807 , allloss: 3.8807, dt: 704.60ms, fracRes: 0.5029, norm(attn): 1.1797, norm(output): 0.6953, norm(x): 1.1243, norm(y): 0.9906, norm:0.4444, tok/sec: 186022.18, flops:195.29, batch-reuse:1
@ 3465 train 3.9965 , allloss: 3.9965, dt: 701.59ms, fracRes: 0.5044, norm(attn): 1.1719, norm(output): 0.6992, norm(x): 1.1313, norm(y): 0.9912, norm:0.4568, tok/sec: 186821.22, flops:196.13, batch-reuse:1
@ 3466 train 4.0312 , allloss: 4.0312, dt: 711.78ms, fracRes: 0.5019, norm(attn): 1.1875, norm(output): 0.6914, norm(x): 1.1199, norm(y): 0.9906, norm:0.4636, tok/sec: 184147.14, flops:193.32, batch-reuse:1
@ 3467 train 4.0524 , allloss: 4.0524, dt: 711.32ms, fracRes: 0.5040, norm(attn): 1.1719, norm(output): 0.6992, norm(x): 1.1295, norm(y): 0.9909, norm:0.4228, tok/sec: 184265.83, flops:193.44, batch-reuse:1
@ 3468 train 4.0119 , allloss: 4.0119, dt: 709.38ms, fracRes: 0.5006, norm(attn): 1.2188, norm(output): 0.6992, norm(x): 1.1255, norm(y): 0.9932, norm:0.4690, tok/sec: 184770.69, flops:193.97, batch-reuse:1
@ 3469 train 4.0418 , allloss: 4.0418, dt: 706.65ms, fracRes: 0.4989, norm(attn): 1.2109, norm(output): 0.6992, norm(x): 1.1269, norm(y): 0.9923, norm:0.5234, tok/sec: 185484.80, flops:194.72, batch-reuse:1
@ 3470 train 4.1201 , allloss: 4.1201, dt: 711.53ms, fracRes: 0.5007, norm(attn): 1.2031, norm(output): 0.7031, norm(x): 1.1334, norm(y): 0.9925, norm:0.4220, tok/sec: 184210.26, flops:193.38, batch-reuse:1
@ 3471 train 4.0475 , allloss: 4.0475, dt: 714.19ms, fracRes: 0.4984, norm(attn): 1.1875, norm(output): 0.7148, norm(x): 1.1381, norm(y): 0.9910, norm:0.5199, tok/sec: 183526.31, flops:192.67, batch-reuse:1
@ 3472 train 4.0565 , allloss: 4.0565, dt: 696.00ms, fracRes: 0.4922, norm(attn): 1.2109, norm(output): 0.6992, norm(x): 1.1176, norm(y): 0.9918, norm:0.4908, tok/sec: 188322.84, flops:197.70, batch-reuse:1
@ 3473 train 3.9601 , allloss: 3.9601, dt: 711.10ms, fracRes: 0.4984, norm(attn): 1.1875, norm(output): 0.6992, norm(x): 1.1281, norm(y): 0.9910, norm:0.5123, tok/sec: 184322.54, flops:193.50, batch-reuse:1
@ 3474 train 4.0029 , allloss: 4.0029, dt: 707.99ms, fracRes: 0.4981, norm(attn): 1.1641, norm(output): 0.7031, norm(x): 1.1269, norm(y): 0.9915, norm:0.4775, tok/sec: 185131.58, flops:194.35, batch-reuse:1
@ 3475 train 3.8806 , allloss: 3.8806, dt: 699.53ms, fracRes: 0.4958, norm(attn): 1.1641, norm(output): 0.6953, norm(x): 1.1211, norm(y): 0.9906, norm:0.4579, tok/sec: 187370.72, flops:196.70, batch-reuse:1
@ 3476 train 3.9648 , allloss: 3.9648, dt: 703.59ms, fracRes: 0.4975, norm(attn): 1.1719, norm(output): 0.7031, norm(x): 1.1257, norm(y): 0.9913, norm:0.4858, tok/sec: 186291.15, flops:195.57, batch-reuse:1
@ 3477 train 3.9012 , allloss: 3.9012, dt: 702.26ms, fracRes: 0.4928, norm(attn): 1.1719, norm(output): 0.6992, norm(x): 1.1174, norm(y): 0.9907, norm:0.5078, tok/sec: 186643.37, flops:195.94, batch-reuse:1
@ 3478 train 3.9672 , allloss: 3.9672, dt: 697.19ms, fracRes: 0.4918, norm(attn): 1.1641, norm(output): 0.6914, norm(x): 1.1110, norm(y): 0.9904, norm:0.4448, tok/sec: 187999.75, flops:197.36, batch-reuse:1
@ 3479 train 3.8536 , allloss: 3.8536, dt: 693.67ms, fracRes: 0.4996, norm(attn): 1.1562, norm(output): 0.6953, norm(x): 1.1225, norm(y): 0.9911, norm:0.4962, tok/sec: 188954.33, flops:198.36, batch-reuse:1
@ 3480 train 3.9892 , allloss: 3.9892, dt: 697.47ms, fracRes: 0.5023, norm(attn): 1.1562, norm(output): 0.6953, norm(x): 1.1264, norm(y): 0.9914, norm:0.5408, tok/sec: 187924.75, flops:197.28, batch-reuse:1
@ 3481 train 3.9976 , allloss: 3.9976, dt: 691.46ms, fracRes: 0.5002, norm(attn): 1.1562, norm(output): 0.7031, norm(x): 1.1285, norm(y): 0.9902, norm:0.4736, tok/sec: 189558.55, flops:199.00, batch-reuse:1
@ 3482 train 3.8245 , allloss: 3.8245, dt: 683.93ms, fracRes: 0.5010, norm(attn): 1.1641, norm(output): 0.7188, norm(x): 1.1398, norm(y): 0.9902, norm:0.5852, tok/sec: 191645.10, flops:201.19, batch-reuse:1
@ 3483 train 3.9582 , allloss: 3.9582, dt: 698.67ms, fracRes: 0.4924, norm(attn): 1.2031, norm(output): 0.6953, norm(x): 1.1163, norm(y): 0.9911, norm:0.4592, tok/sec: 187603.01, flops:196.95, batch-reuse:1
@ 3484 train 3.9382 , allloss: 3.9382, dt: 699.58ms, fracRes: 0.4943, norm(attn): 1.1875, norm(output): 0.7031, norm(x): 1.1205, norm(y): 0.9905, norm:0.4781, tok/sec: 187358.08, flops:196.69, batch-reuse:1
@ 3485 train 3.9072 , allloss: 3.9072, dt: 685.33ms, fracRes: 0.4962, norm(attn): 1.1875, norm(output): 0.6992, norm(x): 1.1231, norm(y): 0.9900, norm:0.5069, tok/sec: 191254.54, flops:200.78, batch-reuse:1
@ 3486 train 3.9382 , allloss: 3.9382, dt: 702.83ms, fracRes: 0.5023, norm(attn): 1.2031, norm(output): 0.7109, norm(x): 1.1360, norm(y): 0.9907, norm:0.6083, tok/sec: 186490.47, flops:195.78, batch-reuse:1
@ 3487 train 3.8553 , allloss: 3.8553, dt: 700.79ms, fracRes: 0.4946, norm(attn): 1.2266, norm(output): 0.6914, norm(x): 1.1141, norm(y): 0.9904, norm:0.4511, tok/sec: 187035.29, flops:196.35, batch-reuse:1
@ 3488 train 3.9711 , allloss: 3.9711, dt: 698.70ms, fracRes: 0.4964, norm(attn): 1.2188, norm(output): 0.6914, norm(x): 1.1141, norm(y): 0.9908, norm:0.5419, tok/sec: 187593.22, flops:196.94, batch-reuse:1
@ 3489 train 3.9396 , allloss: 3.9396, dt: 700.39ms, fracRes: 0.5073, norm(attn): 1.1953, norm(output): 0.7070, norm(x): 1.1386, norm(y): 0.9908, norm:0.4285, tok/sec: 187142.19, flops:196.46, batch-reuse:1
@ 3490 train 3.8714 , allloss: 3.8714, dt: 697.82ms, fracRes: 0.5058, norm(attn): 1.2109, norm(output): 0.7031, norm(x): 1.1367, norm(y): 0.9915, norm:0.4702, tok/sec: 187830.69, flops:197.18, batch-reuse:1
@ 3491 train 3.8873 , allloss: 3.8873, dt: 688.13ms, fracRes: 0.5060, norm(attn): 1.1875, norm(output): 0.6992, norm(x): 1.1332, norm(y): 0.9908, norm:0.4248, tok/sec: 190475.80, flops:199.96, batch-reuse:1
@ 3492 train 3.9731 , allloss: 3.9731, dt: 697.69ms, fracRes: 0.5034, norm(attn): 1.1875, norm(output): 0.6953, norm(x): 1.1293, norm(y): 0.9914, norm:0.4879, tok/sec: 187865.73, flops:197.22, batch-reuse:1
@ 3493 train 3.9303 , allloss: 3.9303, dt: 687.54ms, fracRes: 0.5025, norm(attn): 1.1719, norm(output): 0.6992, norm(x): 1.1273, norm(y): 0.9901, norm:0.4323, tok/sec: 190638.28, flops:200.13, batch-reuse:1
@ 3494 train 3.9226 , allloss: 3.9226, dt: 699.29ms, fracRes: 0.5038, norm(attn): 1.1797, norm(output): 0.6953, norm(x): 1.1293, norm(y): 0.9912, norm:0.5233, tok/sec: 187436.20, flops:196.77, batch-reuse:1
@ 3495 train 3.9285 , allloss: 3.9285, dt: 698.07ms, fracRes: 0.5050, norm(attn): 1.1797, norm(output): 0.6992, norm(x): 1.1302, norm(y): 0.9905, norm:0.4257, tok/sec: 187763.78, flops:197.11, batch-reuse:1
@ 3496 train 3.9548 , allloss: 3.9548, dt: 704.23ms, fracRes: 0.5050, norm(attn): 1.1797, norm(output): 0.7031, norm(x): 1.1333, norm(y): 0.9916, norm:0.5003, tok/sec: 186122.00, flops:195.39, batch-reuse:1
@ 3497 train 3.8977 , allloss: 3.8977, dt: 700.23ms, fracRes: 0.5004, norm(attn): 1.1719, norm(output): 0.6992, norm(x): 1.1269, norm(y): 0.9913, norm:0.4652, tok/sec: 187185.39, flops:196.51, batch-reuse:1
@ 3498 train 3.9023 , allloss: 3.9023, dt: 698.22ms, fracRes: 0.5001, norm(attn): 1.1641, norm(output): 0.7070, norm(x): 1.1310, norm(y): 0.9897, norm:0.5263, tok/sec: 187723.77, flops:197.07, batch-reuse:1
@ 3499 train 3.9397 , allloss: 3.9397, dt: 681.40ms, fracRes: 0.5015, norm(attn): 1.1719, norm(output): 0.6953, norm(x): 1.1285, norm(y): 0.9908, norm:0.5164, tok/sec: 192357.97, flops:201.94, batch-reuse:1
@ 3500 train 3.8343 , allloss: 3.8343, dt: 698.90ms, fracRes: 0.5017, norm(attn): 1.1641, norm(output): 0.7070, norm(x): 1.1317, norm(y): 0.9892, norm:0.5913, tok/sec: 187539.85, flops:196.88, batch-reuse:1
@ 3501 train 3.7988 , allloss: 3.7988, dt: 693.04ms, fracRes: 0.5022, norm(attn): 1.1641, norm(output): 0.6914, norm(x): 1.1221, norm(y): 0.9895, norm:0.6103, tok/sec: 189126.07, flops:198.54, batch-reuse:1
@ 3502 train 3.8676 , allloss: 3.8676, dt: 699.10ms, fracRes: 0.5060, norm(attn): 1.1719, norm(output): 0.7031, norm(x): 1.1336, norm(y): 0.9892, norm:0.5093, tok/sec: 187487.60, flops:196.82, batch-reuse:1
@ 3503 train 3.9281 , allloss: 3.9281, dt: 699.00ms, fracRes: 0.5027, norm(attn): 1.2188, norm(output): 0.6914, norm(x): 1.1228, norm(y): 0.9920, norm:0.5683, tok/sec: 187513.88, flops:196.85, batch-reuse:1
@ 3504 train 3.8653 , allloss: 3.8653, dt: 693.54ms, fracRes: 0.5011, norm(attn): 1.1875, norm(output): 0.6953, norm(x): 1.1228, norm(y): 0.9907, norm:0.4851, tok/sec: 188991.09, flops:198.40, batch-reuse:1
@ 3505 train 3.8432 , allloss: 3.8432, dt: 696.29ms, fracRes: 0.5026, norm(attn): 1.1484, norm(output): 0.6992, norm(x): 1.1285, norm(y): 0.9898, norm:0.5468, tok/sec: 188244.43, flops:197.62, batch-reuse:1
@ 3506 train 3.7917 , allloss: 3.7917, dt: 703.18ms, fracRes: 0.5128, norm(attn): 1.1406, norm(output): 0.7188, norm(x): 1.1513, norm(y): 0.9899, norm:0.4483, tok/sec: 186399.99, flops:195.68, batch-reuse:1
@ 3507 train 3.8857 , allloss: 3.8857, dt: 697.30ms, fracRes: 0.5053, norm(attn): 1.1719, norm(output): 0.7070, norm(x): 1.1382, norm(y): 0.9908, norm:0.5509, tok/sec: 187971.85, flops:197.33, batch-reuse:1
@ 3508 train 4.0035 , allloss: 4.0035, dt: 704.04ms, fracRes: 0.5069, norm(attn): 1.1641, norm(output): 0.7031, norm(x): 1.1384, norm(y): 0.9913, norm:0.5133, tok/sec: 186171.73, flops:195.44, batch-reuse:1
@ 3509 train 3.9276 , allloss: 3.9276, dt: 695.10ms, fracRes: 0.5067, norm(attn): 1.1484, norm(output): 0.7070, norm(x): 1.1449, norm(y): 0.9907, norm:0.5195, tok/sec: 188565.72, flops:197.96, batch-reuse:1
@ 3510 train 3.9152 , allloss: 3.9152, dt: 699.12ms, fracRes: 0.5026, norm(attn): 1.1641, norm(output): 0.6992, norm(x): 1.1270, norm(y): 0.9901, norm:0.5348, tok/sec: 187480.31, flops:196.82, batch-reuse:1
@ 3511 train 3.9560 , allloss: 3.9560, dt: 700.75ms, fracRes: 0.5011, norm(attn): 1.1875, norm(output): 0.7031, norm(x): 1.1317, norm(y): 0.9909, norm:0.4819, tok/sec: 187044.90, flops:196.36, batch-reuse:1
@ 3512 train 3.9586 , allloss: 3.9586, dt: 695.65ms, fracRes: 0.5025, norm(attn): 1.1719, norm(output): 0.7070, norm(x): 1.1379, norm(y): 0.9907, norm:0.4971, tok/sec: 188415.40, flops:197.80, batch-reuse:1
@ 3513 train 3.9175 , allloss: 3.9175, dt: 694.69ms, fracRes: 0.4976, norm(attn): 1.1719, norm(output): 0.6953, norm(x): 1.1214, norm(y): 0.9909, norm:0.5199, tok/sec: 188677.03, flops:198.07, batch-reuse:1
@ 3514 train 4.0178 , allloss: 4.0178, dt: 715.61ms, fracRes: 0.4999, norm(attn): 1.1641, norm(output): 0.6992, norm(x): 1.1244, norm(y): 0.9904, norm:0.5087, tok/sec: 183162.01, flops:192.28, batch-reuse:1
@ 3515 train 3.9021 , allloss: 3.9021, dt: 711.82ms, fracRes: 0.4992, norm(attn): 1.1797, norm(output): 0.6953, norm(x): 1.1224, norm(y): 0.9906, norm:0.4958, tok/sec: 184136.47, flops:193.31, batch-reuse:1
@ 3516 train 4.0148 , allloss: 4.0148, dt: 694.45ms, fracRes: 0.5021, norm(attn): 1.1719, norm(output): 0.7031, norm(x): 1.1311, norm(y): 0.9923, norm:0.4890, tok/sec: 188742.59, flops:198.14, batch-reuse:1
@ 3517 train 3.9650 , allloss: 3.9650, dt: 693.66ms, fracRes: 0.5000, norm(attn): 1.1719, norm(output): 0.6953, norm(x): 1.1237, norm(y): 0.9920, norm:0.5427, tok/sec: 188957.96, flops:198.37, batch-reuse:1
@ 3518 train 3.9703 , allloss: 3.9703, dt: 698.26ms, fracRes: 0.4999, norm(attn): 1.1641, norm(output): 0.7031, norm(x): 1.1305, norm(y): 0.9905, norm:0.5318, tok/sec: 187713.00, flops:197.06, batch-reuse:1
@ 3519 train 3.8582 , allloss: 3.8582, dt: 708.19ms, fracRes: 0.4938, norm(attn): 1.1484, norm(output): 0.7031, norm(x): 1.1218, norm(y): 0.9891, norm:0.5431, tok/sec: 185081.16, flops:194.30, batch-reuse:1
@ 3520 train 3.8486 , allloss: 3.8486, dt: 699.15ms, fracRes: 0.5054, norm(attn): 1.1719, norm(output): 0.7227, norm(x): 1.1477, norm(y): 0.9901, norm:0.5137, tok/sec: 187474.55, flops:196.81, batch-reuse:1
@ 3521 train 3.8912 , allloss: 3.8912, dt: 701.21ms, fracRes: 0.5020, norm(attn): 1.1953, norm(output): 0.7031, norm(x): 1.1295, norm(y): 0.9906, norm:0.5176, tok/sec: 186921.65, flops:196.23, batch-reuse:1
@ 3522 train 4.0878 , allloss: 4.0878, dt: 694.83ms, fracRes: 0.5217, norm(attn): 1.2188, norm(output): 0.7031, norm(x): 1.1576, norm(y): 0.9969, norm:0.7815, tok/sec: 188639.09, flops:198.03, batch-reuse:1
@ 3523 train 3.9724 , allloss: 3.9724, dt: 698.04ms, fracRes: 0.4974, norm(attn): 1.2031, norm(output): 0.6875, norm(x): 1.1118, norm(y): 0.9906, norm:0.8244, tok/sec: 187772.69, flops:197.12, batch-reuse:1
@ 3524 train 3.9488 , allloss: 3.9488, dt: 683.16ms, fracRes: 0.5051, norm(attn): 1.2188, norm(output): 0.7031, norm(x): 1.1331, norm(y): 0.9914, norm:0.5733, tok/sec: 191862.40, flops:201.42, batch-reuse:1
@ 3525 train 3.9392 , allloss: 3.9392, dt: 700.88ms, fracRes: 0.5091, norm(attn): 1.1875, norm(output): 0.7031, norm(x): 1.1383, norm(y): 0.9915, norm:0.6041, tok/sec: 187010.28, flops:196.32, batch-reuse:1
@ 3526 train 4.0780 , allloss: 4.0780, dt: 686.42ms, fracRes: 0.5080, norm(attn): 1.1953, norm(output): 0.6992, norm(x): 1.1357, norm(y): 0.9916, norm:0.5806, tok/sec: 190949.76, flops:200.46, batch-reuse:1
@ 3527 train 4.0813 , allloss: 4.0813, dt: 697.49ms, fracRes: 0.5058, norm(attn): 1.2031, norm(output): 0.7031, norm(x): 1.1349, norm(y): 0.9921, norm:0.5290, tok/sec: 187919.23, flops:197.28, batch-reuse:1
@ 3528 train 4.1245 , allloss: 4.1245, dt: 686.82ms, fracRes: 0.5067, norm(attn): 1.1953, norm(output): 0.7031, norm(x): 1.1381, norm(y): 0.9916, norm:0.5096, tok/sec: 190837.80, flops:200.34, batch-reuse:1
@ 3529 train 4.1763 , allloss: 4.1763, dt: 698.16ms, fracRes: 0.5105, norm(attn): 1.1797, norm(output): 0.7148, norm(x): 1.1460, norm(y): 0.9929, norm:0.5161, tok/sec: 187739.80, flops:197.09, batch-reuse:1
@ 3530 train 4.1412 , allloss: 4.1412, dt: 697.01ms, fracRes: 0.5117, norm(attn): 1.2031, norm(output): 0.7070, norm(x): 1.1455, norm(y): 0.9927, norm:0.5079, tok/sec: 188049.01, flops:197.41, batch-reuse:1
@ 3531 train 4.3146 , allloss: 4.3146, dt: 697.64ms, fracRes: 0.5107, norm(attn): 1.2109, norm(output): 0.6953, norm(x): 1.1386, norm(y): 0.9943, norm:0.5844, tok/sec: 187877.93, flops:197.23, batch-reuse:1
@ 3532 train 4.1473 , allloss: 4.1473, dt: 704.09ms, fracRes: 0.5094, norm(attn): 1.2188, norm(output): 0.6953, norm(x): 1.1334, norm(y): 0.9927, norm:0.5220, tok/sec: 186158.11, flops:195.43, batch-reuse:1
@ 3533 train 4.2448 , allloss: 4.2448, dt: 701.19ms, fracRes: 0.5070, norm(attn): 1.2031, norm(output): 0.6992, norm(x): 1.1335, norm(y): 0.9923, norm:0.5082, tok/sec: 186929.21, flops:196.24, batch-reuse:1
@ 3534 train 4.0378 , allloss: 4.0378, dt: 690.65ms, fracRes: 0.5052, norm(attn): 1.2031, norm(output): 0.6953, norm(x): 1.1330, norm(y): 0.9914, norm:0.5293, tok/sec: 189780.12, flops:199.23, batch-reuse:1
@ 3535 train 4.2480 , allloss: 4.2480, dt: 694.36ms, fracRes: 0.5023, norm(attn): 1.2031, norm(output): 0.7266, norm(x): 1.1518, norm(y): 0.9916, norm:0.6784, tok/sec: 188765.59, flops:198.17, batch-reuse:1
@ 3536 train 4.0676 , allloss: 4.0676, dt: 696.58ms, fracRes: 0.5042, norm(attn): 1.2109, norm(output): 0.7070, norm(x): 1.1387, norm(y): 0.9924, norm:0.7434, tok/sec: 188166.21, flops:197.54, batch-reuse:1
@ 3537 train 4.1495 , allloss: 4.1495, dt: 691.78ms, fracRes: 0.5062, norm(attn): 1.1953, norm(output): 0.7031, norm(x): 1.1439, norm(y): 0.9935, norm:0.5069, tok/sec: 189469.31, flops:198.91, batch-reuse:1
@ 3538 train 4.0757 , allloss: 4.0757, dt: 694.45ms, fracRes: 0.5006, norm(attn): 1.1953, norm(output): 0.7031, norm(x): 1.1362, norm(y): 0.9932, norm:0.6256, tok/sec: 188741.94, flops:198.14, batch-reuse:1
@ 3539 train 4.0561 , allloss: 4.0561, dt: 705.38ms, fracRes: 0.5073, norm(attn): 1.1875, norm(output): 0.7031, norm(x): 1.1394, norm(y): 0.9923, norm:0.5186, tok/sec: 185818.53, flops:195.07, batch-reuse:1
@ 3540 train 4.1017 , allloss: 4.1017, dt: 695.52ms, fracRes: 0.5086, norm(attn): 1.1641, norm(output): 0.7031, norm(x): 1.1387, norm(y): 0.9913, norm:0.5171, tok/sec: 188452.67, flops:197.84, batch-reuse:1
@ 3541 train 4.0916 , allloss: 4.0916, dt: 683.20ms, fracRes: 0.5124, norm(attn): 1.1641, norm(output): 0.7109, norm(x): 1.1486, norm(y): 0.9912, norm:0.4978, tok/sec: 191850.75, flops:201.41, batch-reuse:1
@ 3542 train 4.0892 , allloss: 4.0892, dt: 693.70ms, fracRes: 0.5128, norm(attn): 1.1719, norm(output): 0.7148, norm(x): 1.1508, norm(y): 0.9913, norm:0.5085, tok/sec: 188946.14, flops:198.36, batch-reuse:1
@ 3543 train 4.2068 , allloss: 4.2068, dt: 702.75ms, fracRes: 0.5155, norm(attn): 1.1641, norm(output): 0.7109, norm(x): 1.1545, norm(y): 0.9922, norm:0.5556, tok/sec: 186511.66, flops:195.80, batch-reuse:1
@ 3544 train 4.0445 , allloss: 4.0445, dt: 705.45ms, fracRes: 0.5088, norm(attn): 1.1953, norm(output): 0.7031, norm(x): 1.1420, norm(y): 0.9915, norm:0.5155, tok/sec: 185798.93, flops:195.05, batch-reuse:1
@ 3545 train 4.0672 , allloss: 4.0672, dt: 705.06ms, fracRes: 0.5125, norm(attn): 1.1719, norm(output): 0.6992, norm(x): 1.1409, norm(y): 0.9916, norm:0.4963, tok/sec: 185902.72, flops:195.16, batch-reuse:1
@ 3546 train 4.0649 , allloss: 4.0649, dt: 698.82ms, fracRes: 0.5104, norm(attn): 1.1641, norm(output): 0.6992, norm(x): 1.1329, norm(y): 0.9907, norm:0.5006, tok/sec: 187561.73, flops:196.90, batch-reuse:1
@ 3547 train 4.0322 , allloss: 4.0322, dt: 688.59ms, fracRes: 0.5122, norm(attn): 1.1719, norm(output): 0.6992, norm(x): 1.1390, norm(y): 0.9913, norm:0.4488, tok/sec: 190347.65, flops:199.83, batch-reuse:1
@ 3548 train 4.0206 , allloss: 4.0206, dt: 705.12ms, fracRes: 0.5098, norm(attn): 1.1875, norm(output): 0.6992, norm(x): 1.1369, norm(y): 0.9920, norm:0.4464, tok/sec: 185886.07, flops:195.14, batch-reuse:1
@ 3549 train 4.0091 , allloss: 4.0091, dt: 704.29ms, fracRes: 0.5087, norm(attn): 1.1797, norm(output): 0.7109, norm(x): 1.1430, norm(y): 0.9919, norm:0.4244, tok/sec: 186105.93, flops:195.37, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8203, 0.1787, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6367, 0.1182, 0.2451, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4883, 0.1758, 0.1855, 0.1504, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3652, 0.1621, 0.1875, 0.1016, 0.1836, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3887, 0.1514, 0.1436, 0.0806, 0.1572, 0.0771, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2471, 0.1260, 0.1553, 0.0811, 0.1777, 0.1216, 0.0913, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1914, 0.1328, 0.1055, 0.0742, 0.1387, 0.1157, 0.1328, 0.1104, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1738, 0.0952, 0.1157, 0.0757, 0.1162, 0.0972, 0.0894, 0.1514, 0.0850, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3438, 0.0796, 0.0840, 0.0425, 0.0889, 0.0530, 0.0520, 0.1436, 0.0659, 0.0457, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2197, 0.0723, 0.0859, 0.0452, 0.0903, 0.0737, 0.0593, 0.1270, 0.0913, 0.0610, 0.0732, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1494, 0.0928, 0.0850, 0.0471, 0.0962, 0.0703, 0.0645, 0.0996, 0.0659, 0.0601, 0.1069, 0.0623, 0.0000, 0.0000, 0.0000],
        [0.3125, 0.0889, 0.0559, 0.0408, 0.0623, 0.0400, 0.0444, 0.0957, 0.0364, 0.0413, 0.0742, 0.0569, 0.0518, 0.0000, 0.0000],
        [0.2256, 0.0728, 0.0664, 0.0349, 0.0737, 0.0503, 0.0527, 0.1084, 0.0552, 0.0400, 0.0640, 0.0513, 0.0645, 0.0410, 0.0000],
        [0.1465, 0.0723, 0.0693, 0.0403, 0.0854, 0.0608, 0.0422, 0.1133, 0.0461, 0.0630, 0.0664, 0.0427, 0.0728, 0.0483, 0.0308]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.3945, -0.6523, -0.9766, -1.1719, -1.0156, -1.2109, -1.0547, -0.4316, -0.9805, -1.0859, -0.5859, -0.8828, -0.6953, -1.0078, -1.1172],
        [ 0.2041, -1.3203, -0.4023, -0.4219, -0.1895, -0.5156, -0.6133,  0.2656, -0.4629, -0.7695, -0.4902, -0.2129, -0.2891, -0.6797, -0.5625],
        [ 0.2432, -1.4375, -0.7109, -0.8320, -0.6133, -0.6836, -1.0312, -0.2480, -0.8281, -1.0859, -0.6211, -0.5625, -0.5938, -0.9375, -1.0469],
        [ 0.2891, -0.7344, -0.6836, -0.8906, -0.8867, -0.8672, -0.8945,  0.0114, -0.7578, -0.6953, -0.5586, -0.7070, -0.4121, -0.7656, -1.0078],
        [ 0.1250, -0.6914, -0.5391, -1.1562, -0.5625, -1.0547, -0.6367, -0.3164, -0.5703, -1.0078, -0.5586, -0.5273, -0.4824, -0.7461, -0.6836],
        [ 0.2617, -0.6797, -0.7383, -1.3125, -0.6445, -1.3516, -0.9766, -0.4102, -0.6719, -1.1562, -0.7891, -0.6797, -0.6211, -0.8672, -1.0312],
        [ 0.1621, -0.5117, -0.3008, -0.9492, -0.1660, -0.5430, -0.8320, -0.1118, -0.4121, -0.6211, -0.5273, -0.9258, -0.3770, -0.4023, -0.8203],
        [ 0.1543, -0.2129, -0.4395, -0.7930, -0.1641, -0.3477, -0.2119, -0.3965, -0.5586, -0.5586, -0.1816, -0.3965, -0.0835, -0.5469, -0.6523],
        [ 0.1826, -0.4199, -0.2236, -0.6445, -0.2188, -0.3965, -0.4805,  0.0479, -0.5312, -0.5938, -0.5977, -0.5430, -0.3438, -0.5625, -0.4297],
        [ 0.3945, -1.0703, -1.0156, -1.7031, -0.9570, -1.4766, -1.4922, -0.4785, -1.2578, -1.6250, -0.9180, -1.1719, -0.8672, -1.4844, -1.2578],
        [ 0.2988, -0.8164, -0.6406, -1.2891, -0.5898, -0.7930, -1.0156, -0.2480, -0.5820, -0.9844, -0.8047, -0.9375, -0.5312, -0.7734, -1.0234],
        [ 0.1611, -0.3164, -0.4023, -0.9922, -0.2773, -0.5898, -0.6836, -0.2451, -0.6602, -0.7539, -0.1758, -0.7148, -0.4609, -0.6914, -0.5273],
        [ 0.5117, -0.7461, -1.2109, -1.5234, -1.1016, -1.5469, -1.4375, -0.6719, -1.6406, -1.5156, -0.9258, -1.1953, -1.2812, -1.6641, -1.3828],
        [ 0.3535, -0.7773, -0.8711, -1.5078, -0.7656, -1.1484, -1.1016, -0.3809, -1.0547, -1.3750, -0.9102, -1.1250, -0.8945, -1.3516, -0.9805],
        [ 0.2412, -0.4648, -0.5000, -1.0469, -0.2949, -0.6367, -1.0000, -0.0149, -0.9102, -0.5977, -0.5508, -0.9922, -0.4570, -0.8633, -1.3203]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7585],
        [0.4794],
        [0.3520],
        [0.3505],
        [0.2997],
        [0.2628],
        [0.2110],
        [0.2027],
        [0.1789],
        [0.2115],
        [0.0930],
        [0.2212],
        [0.1780],
        [0.0914]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0001,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0027,     0.0000,     0.0000,     0.0000,     0.0000,     0.9961,     0.0001]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0262,     -1.1875,     -1.2422,     -1.1328,     -1.1406,     -1.2344,     -1.3203,     -1.4375,     -1.3750,     -1.4141,     -1.3750,     -1.3828,     -1.4531,     -1.4922,     -1.3359],
        [     0.0110,     -9.5625,    -11.1875,     -9.3750,     -5.5938,     -7.6875,     -5.2188,     -8.1250,     -7.2188,     -3.7656,     -2.0781,     -3.0938,     -2.8906,     -2.7031,      4.9062],
        [    -0.1270,     23.6250,      4.6875,     10.1250,     19.7500,     19.3750,     13.9375,      6.5625,     22.3750,     21.5000,     27.8750,     27.2500,     13.0625,     30.1250,     34.5000],
        [    -0.5039,     13.3750,     47.5000,     32.0000,      3.5469,     20.2500,     13.5000,     21.5000,     19.0000,     33.2500,     22.8750,     48.2500,     30.0000,     27.2500,     42.5000],
        [    -0.2754,     12.8750,     26.8750,     36.7500,      2.9688,     14.7500,     23.2500,     25.3750,     25.1250,     35.5000,     27.0000,     38.5000,     34.5000,     32.7500,     39.0000],
        [    -0.1943,     21.1250,      2.3594,      8.8125,     36.2500,     26.8750,     19.5000,     14.7500,     35.0000,     21.2500,     32.5000,     24.1250,     26.0000,     43.5000,     35.0000],
        [    -0.4180,     25.3750,     25.8750,     21.6250,     27.1250,     40.7500,     24.6250,     36.7500,     36.5000,     26.0000,     34.5000,     47.2500,     42.2500,     45.2500,     39.0000],
        [    -0.2158,     30.8750,     21.6250,     29.3750,     29.6250,     33.2500,     42.5000,     30.7500,     41.2500,     30.5000,     50.2500,     35.7500,     39.7500,     49.0000,     50.7500],
        [    -0.3613,     17.7500,     16.3750,     19.2500,     17.3750,     31.7500,     29.7500,     42.0000,     25.3750,     26.6250,     32.7500,     36.2500,     49.7500,     34.2500,     30.7500],
        [    -0.2285,     18.8750,     12.3125,     14.8125,     28.6250,     29.2500,     25.2500,     13.0000,     44.0000,     13.2500,     37.0000,     23.0000,     21.5000,     51.0000,     46.7500],
        [    -0.4609,     10.5000,     22.7500,     31.7500,      6.5625,     12.2500,     14.8750,     21.2500,     12.3125,     49.5000,     14.6250,     32.7500,     30.7500,     22.2500,     27.5000],
        [    -0.2402,     31.1250,     17.0000,     15.5625,     33.5000,     33.2500,     40.2500,     31.3750,     45.7500,     21.0000,     55.7500,     16.7500,     40.2500,     52.7500,     55.7500],
        [    -0.4727,     17.1250,     30.2500,     29.3750,     14.5000,     22.5000,     19.2500,     24.0000,     22.6250,     28.8750,     28.3750,     46.7500,     28.0000,     31.3750,     40.0000],
        [    -0.3672,     16.3750,     17.2500,     18.7500,     15.8750,     28.0000,     27.3750,     38.0000,     24.0000,     25.5000,     33.2500,     31.7500,     47.2500,     32.7500,     32.5000],
        [    -0.2832,     14.3125,      8.5000,     13.4375,     22.8750,     25.1250,     21.8750,     10.1875,     40.0000,      8.7500,     31.7500,     17.8750,     18.7500,     46.0000,     36.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7476],
        [0.2733],
        [0.2804],
        [0.2367],
        [0.1963],
        [0.1916],
        [0.1608],
        [0.1312],
        [0.1180],
        [0.0981],
        [0.1131],
        [0.1133],
        [0.1092],
        [0.0804]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0115,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8906,     0.1025,     0.0056,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9844,     0.0146,     0.0008,     0.0007,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2021,     0.5391,     0.0781,     0.0194,     0.1621,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5547,     0.2930,     0.0278,     0.0074,     0.0698,     0.0486,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3770,     0.2754,     0.0198,     0.0043,     0.1904,     0.0410,     0.0942,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2793,     0.4180,     0.0149,     0.0019,     0.1963,     0.0364,     0.0388,     0.0146,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2422,     0.1006,     0.0096,     0.0030,     0.3145,     0.0256,     0.0183,     0.0047,     0.2812,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4043,     0.1025,     0.0065,     0.0029,     0.2148,     0.0122,     0.0195,     0.0181,     0.1699,     0.0493,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5078,     0.0618,     0.0049,     0.0023,     0.1025,     0.0048,     0.0025,     0.0057,     0.1318,     0.0610,     0.1138,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6172,     0.0825,     0.0081,     0.0035,     0.1230,     0.0078,     0.0057,     0.0107,     0.0903,     0.0172,     0.0287,     0.0040,     0.0000,     0.0000,     0.0000],
        [    0.0669,     0.1943,     0.0039,     0.0004,     0.1826,     0.0068,     0.0118,     0.0037,     0.3008,     0.1260,     0.0791,     0.0124,     0.0125,     0.0000,     0.0000],
        [    0.1089,     0.0913,     0.0025,     0.0005,     0.1416,     0.0063,     0.0067,     0.0013,     0.0874,     0.1455,     0.2188,     0.0131,     0.0071,     0.1680,     0.0000],
        [    0.5625,     0.1094,     0.0044,     0.0016,     0.1299,     0.0041,     0.0023,     0.0030,     0.0469,     0.0262,     0.0500,     0.0101,     0.0085,     0.0354,     0.0063]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0032,     -0.2227,     -0.2656,     -0.2617,     -0.1670,     -0.2676,     -0.2598,     -0.2773,     -0.1797,     -0.2021,     -0.1934,     -0.2598,     -0.2471,     -0.1895,     -0.2383],
        [     0.1001,     -4.3438,     -7.0000,     -7.4375,     -2.7969,     -6.4375,     -6.4375,     -6.6562,     -2.3906,     -4.4062,     -2.7812,     -6.2188,     -5.6875,     -1.9219,     -4.2500],
        [     0.1357,     -2.0312,     -4.9375,     -5.4688,     -1.3906,     -4.6250,     -4.4375,     -4.2188,     -2.0000,     -3.5156,     -2.8594,     -4.6875,     -4.1562,     -2.2344,     -4.3750],
        [     0.1396,     -4.0625,     -6.9688,     -7.0312,     -1.9609,     -6.9062,     -6.7500,     -6.8750,     -3.5625,     -5.3750,     -4.5938,     -7.7812,     -6.2812,     -4.1562,     -6.2812],
        [     0.0530,      1.0312,     -0.9023,     -2.2969,     -0.1709,      0.2520,     -1.5234,     -1.3828,      2.0625,      0.7461,     -0.2988,     -1.5156,     -1.0234,      1.5234,      0.0221],
        [     0.0796,     -0.5547,     -2.9062,     -4.2188,     -1.9922,     -2.3594,     -0.9844,     -2.5000,     -0.1138,     -1.2734,     -1.9219,     -3.2969,     -4.7812,     -0.5430,     -2.2500],
        [     0.0947,     -0.2197,     -2.8438,     -4.3750,     -0.5859,     -2.1250,     -1.2891,     -2.4531,      1.1016,     -1.4141,     -1.9766,     -3.4531,     -3.3906,      0.8750,     -1.9141],
        [     0.1133,      0.5156,     -2.8125,     -4.8750,     -0.2422,     -1.9297,     -1.8594,     -2.8281,      1.5625,     -0.8086,     -1.1562,     -2.5469,     -2.8594,      2.0625,     -0.9688],
        [     0.0618,     -0.8203,     -3.1719,     -4.3125,      0.3223,     -2.1875,     -2.5156,     -3.8906,      0.2080,      0.3672,      0.2559,     -2.8906,     -2.4375,      0.2119,     -0.4434],
        [     0.0654,     -1.3047,     -4.0625,     -4.8750,     -0.5703,     -3.4375,     -2.9688,     -3.0469,     -0.8047,     -2.0312,      0.3770,     -2.7500,     -2.7188,     -0.2695,     -2.0469],
        [     0.0596,     -2.0469,     -4.5938,     -5.3438,     -1.5469,     -4.6250,     -5.2500,     -4.4375,     -1.2969,     -2.0625,     -1.4375,     -2.2188,     -2.6406,     -0.6367,     -2.8750],
        [     0.1011,     -1.9141,     -4.2500,     -5.0625,     -1.5156,     -4.2812,     -4.5938,     -3.9531,     -1.8203,     -3.4844,     -2.9688,     -4.9375,     -2.5938,     -1.7188,     -4.1875],
        [     0.0874,      1.1562,     -2.7500,     -5.0938,      1.0938,     -2.1875,     -1.6406,     -2.8125,      1.5938,      0.7188,      0.2559,     -1.6016,     -1.5938,      2.8125,      0.3633],
        [     0.0471,     -0.1279,     -3.7344,     -5.2812,      0.3086,     -2.8125,     -2.7500,     -4.3438,     -0.1719,      0.3359,      0.7461,     -2.0781,     -2.6875,      0.4824,      0.0255],
        [     0.1172,     -1.5156,     -4.7188,     -5.7500,     -1.3438,     -4.8125,     -5.4062,     -5.0938,     -2.3594,     -2.9531,     -2.2969,     -3.9062,     -4.0625,     -2.6406,     -4.3750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6088],
        [0.3668],
        [0.4249],
        [0.2512],
        [0.3032],
        [0.1972],
        [0.2316],
        [0.2466],
        [0.2386],
        [0.2470],
        [0.2617],
        [0.2140],
        [0.2048],
        [0.2354]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9844,     0.0148,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9844,     0.0145,     0.0012,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9375,     0.0488,     0.0058,     0.0096,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9688,     0.0315,     0.0005,     0.0006,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8984,     0.1006,     0.0001,     0.0000,     0.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6680,     0.2080,     0.0006,     0.0003,     0.0003,     0.0032,     0.1206,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8320,     0.1167,     0.0004,     0.0007,     0.0001,     0.0015,     0.0447,     0.0024,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9492,     0.0334,     0.0005,     0.0009,     0.0006,     0.0012,     0.0078,     0.0018,     0.0028,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9297,     0.0247,     0.0012,     0.0019,     0.0011,     0.0018,     0.0287,     0.0019,     0.0064,     0.0021,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9414,     0.0183,     0.0012,     0.0044,     0.0009,     0.0020,     0.0147,     0.0032,     0.0062,     0.0024,     0.0050,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3086,     0.1123,     0.0172,     0.1206,     0.0177,     0.0192,     0.0459,     0.0194,     0.1177,     0.0437,     0.0640,     0.1133,     0.0000,     0.0000,     0.0000],
        [    0.9258,     0.0435,     0.0004,     0.0005,     0.0002,     0.0012,     0.0186,     0.0020,     0.0027,     0.0007,     0.0012,     0.0011,     0.0005,     0.0000,     0.0000],
        [    0.9844,     0.0056,     0.0002,     0.0003,     0.0001,     0.0006,     0.0048,     0.0013,     0.0007,     0.0005,     0.0005,     0.0004,     0.0003,     0.0007,     0.0000],
        [    0.2266,     0.1035,     0.0173,     0.1045,     0.0222,     0.0649,     0.0242,     0.0525,     0.0786,     0.0369,     0.0261,     0.0674,     0.0620,     0.0513,     0.0610]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0017,     -0.2393,     -0.3398,     -0.3672,     -0.4141,     -0.3438,     -0.2412,     -0.3086,     -0.3418,     -0.3301,     -0.3164,     -0.3750,     -0.3477,     -0.3457,     -0.2080],
        [     0.0903,     -4.0938,     -9.2500,     -9.0000,     -9.8125,     -8.3750,     -4.6562,     -7.6875,     -8.1250,     -9.3750,     -8.9375,     -9.2500,     -9.3750,     -8.3125,     -4.9062],
        [     0.0566,     -4.1562,     -6.6562,     -4.8750,     -6.9375,     -5.7188,     -3.5156,     -5.2188,     -4.8438,     -6.5625,     -6.0312,     -5.5312,     -5.5625,     -5.2812,     -3.0469],
        [     0.0894,     -2.8594,     -5.0000,     -4.5000,     -5.1875,     -4.9062,     -3.4062,     -4.7500,     -3.8750,     -4.4688,     -4.1250,     -4.1875,     -5.2500,     -3.6875,     -1.7109],
        [     0.0483,     -3.3750,     -7.6250,     -7.3438,     -7.5312,     -7.1250,     -4.3750,     -6.5938,     -5.7500,     -6.8438,     -6.2812,     -6.7500,     -7.8125,     -5.5312,     -3.6562],
        [     0.2334,     -1.9609,     -8.6250,    -10.2500,    -10.1250,     -8.3750,     -3.8281,     -8.9375,     -7.3438,     -8.6250,     -7.9375,     -8.9375,    -10.3750,     -7.5625,     -4.4688],
        [     0.2031,     -0.9609,     -6.8125,     -7.5000,     -7.5625,     -5.1250,     -1.5078,     -6.4688,     -5.4375,     -6.8750,     -6.1562,     -5.8750,     -7.7500,     -5.1250,     -3.7344],
        [     0.1807,     -1.7891,     -7.5000,     -6.9062,     -8.6250,     -6.1562,     -2.7500,     -5.6562,     -5.2500,     -6.8750,     -6.5625,     -6.3125,     -7.5625,     -5.5625,     -3.7656],
        [     0.0874,     -3.2656,     -7.4062,     -6.8438,     -7.2188,     -6.6250,     -4.7188,     -6.1875,     -5.7188,     -6.1562,     -6.1875,     -6.6250,     -7.4062,     -5.8750,     -3.1406],
        [     0.0977,     -3.5312,     -6.5312,     -6.0625,     -6.5938,     -6.1562,     -3.3750,     -6.1250,     -4.8750,     -6.0000,     -5.1562,     -5.4062,     -6.7188,     -5.0312,     -3.1094],
        [     0.0588,     -3.8750,     -6.5938,     -5.3125,     -6.9375,     -6.0625,     -4.0938,     -5.6250,     -4.9688,     -5.9062,     -5.1875,     -5.5625,     -6.1875,     -4.6250,     -2.5000],
        [     0.1338,     -0.8789,     -2.7500,     -0.8047,     -2.7344,     -2.6562,     -1.7734,     -2.6250,     -0.8320,     -1.8203,     -1.4375,     -0.8711,     -2.5938,     -0.5742,      0.0796],
        [     0.1318,     -2.9219,     -7.5312,     -7.4688,     -8.3750,     -6.5312,     -3.7812,     -6.0000,     -5.6875,     -7.0312,     -6.5000,     -6.5938,     -7.4375,     -6.1250,     -4.1562],
        [     0.0383,     -5.1250,     -8.6875,     -8.0000,     -9.0000,     -7.4375,     -5.2812,     -6.6250,     -7.1562,     -7.5938,     -7.5938,     -7.8438,     -8.1250,     -7.1562,     -4.2812],
        [     0.0635,     -0.7188,     -2.5156,     -0.7109,     -2.2656,     -1.1875,     -2.1719,     -1.3984,     -0.9961,     -1.7500,     -2.0938,     -1.1484,     -1.2344,     -1.4219,     -1.2500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9958],
        [0.9212],
        [0.9095],
        [0.8724],
        [0.7995],
        [0.7587],
        [0.7793],
        [0.7650],
        [0.7402],
        [0.7316],
        [0.6576],
        [0.7384],
        [0.7453],
        [0.6311]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0190,     -1.0234,     -1.4141,     -1.3828,     -1.5938,     -1.4922,     -1.8281,     -1.4531,     -1.4844,     -1.4531,     -1.2344,     -1.3125,     -1.4766,     -1.2344,     -0.8203],
        [    -0.5391,    -30.3750,    -39.0000,    -38.7500,    -45.0000,    -41.2500,    -50.5000,    -41.0000,    -40.7500,    -39.7500,    -32.7500,    -35.7500,    -41.2500,    -33.7500,    -23.2500],
        [    -0.7617,    -40.5000,    -55.0000,    -54.0000,    -62.7500,    -58.5000,    -71.5000,    -57.2500,    -58.2500,    -57.0000,    -48.0000,    -50.7500,    -57.7500,    -48.2500,    -31.8750],
        [    -0.5820,    -32.7500,    -44.7500,    -43.2500,    -49.0000,    -46.2500,    -55.7500,    -45.7500,    -46.2500,    -45.2500,    -38.7500,    -41.5000,    -45.2500,    -38.5000,    -26.0000],
        [    -0.8047,    -44.5000,    -61.0000,    -58.7500,    -67.5000,    -64.0000,    -77.5000,    -60.5000,    -62.5000,    -61.2500,    -52.2500,    -55.2500,    -60.7500,    -52.0000,    -34.0000],
        [    -0.8711,    -44.7500,    -62.0000,    -61.0000,    -71.0000,    -65.0000,    -79.5000,    -63.7500,    -65.5000,    -64.0000,    -53.5000,    -57.7500,    -65.0000,    -54.5000,    -36.5000],
        [    -0.8164,    -43.7500,    -60.0000,    -58.0000,    -67.5000,    -62.2500,    -76.0000,    -60.0000,    -61.2500,    -60.5000,    -50.5000,    -55.2500,    -62.0000,    -51.7500,    -37.0000],
        [    -0.7852,    -41.7500,    -59.0000,    -57.5000,    -65.5000,    -61.7500,    -75.5000,    -59.5000,    -61.2500,    -60.0000,    -51.0000,    -55.5000,    -61.2500,    -51.0000,    -34.5000],
        [    -0.9102,    -51.0000,    -73.5000,    -70.0000,    -77.5000,    -77.0000,    -94.0000,    -70.0000,    -74.0000,    -72.5000,    -63.2500,    -69.0000,    -73.5000,    -61.2500,    -40.2500],
        [    -0.7305,    -41.7500,    -57.7500,    -55.5000,    -62.0000,    -61.7500,    -74.5000,    -58.0000,    -60.0000,    -58.2500,    -50.7500,    -54.7500,    -59.0000,    -49.7500,    -32.5000],
        [    -0.8125,    -43.0000,    -61.0000,    -59.5000,    -67.5000,    -65.0000,    -79.5000,    -62.2500,    -65.0000,    -62.7500,    -53.5000,    -57.7500,    -64.0000,    -53.2500,    -34.7500],
        [    -0.6914,    -37.5000,    -51.7500,    -50.0000,    -58.0000,    -54.2500,    -66.0000,    -53.5000,    -55.0000,    -52.7500,    -45.2500,    -48.2500,    -54.2500,    -45.5000,    -30.3750],
        [    -0.8984,    -48.7500,    -68.0000,    -65.5000,    -76.0000,    -72.0000,    -87.5000,    -69.5000,    -73.0000,    -69.0000,    -60.0000,    -63.7500,    -71.0000,    -60.7500,    -39.2500],
        [    -0.8203,    -49.2500,    -68.0000,    -64.0000,    -72.0000,    -72.5000,    -87.5000,    -65.5000,    -69.5000,    -66.0000,    -58.5000,    -63.5000,    -67.5000,    -57.7500,    -37.2500],
        [    -0.6406,    -31.2500,    -45.0000,    -44.5000,    -52.5000,    -46.2500,    -57.5000,    -46.2500,    -47.5000,    -46.7500,    -39.2500,    -41.2500,    -47.2500,    -39.5000,    -26.6250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9941],
        [0.9528],
        [0.9259],
        [0.9323],
        [0.9146],
        [0.9002],
        [0.8709],
        [0.8569],
        [0.8322],
        [0.7823],
        [0.8335],
        [0.8787],
        [0.8404],
        [0.6931]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2793, 0.7188, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1396, 0.7969, 0.0618, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0398, 0.5898, 0.1270, 0.2441, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4766, 0.1377, 0.0576, 0.1387, 0.1895, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6289, 0.0566, 0.1016, 0.1245, 0.0273, 0.0608, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0864, 0.1592, 0.0132, 0.0815, 0.0071, 0.3320, 0.3203, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7070, 0.0193, 0.0698, 0.0134, 0.0115, 0.0233, 0.1416, 0.0124, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3848, 0.0071, 0.1011, 0.0184, 0.0322, 0.2139, 0.0938, 0.0466, 0.1011, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3223, 0.0635, 0.0894, 0.0349, 0.0796, 0.0557, 0.2266, 0.0383, 0.0410, 0.0486, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1387, 0.2422, 0.0046, 0.0177, 0.0698, 0.1030, 0.0381, 0.2021, 0.1475, 0.0193, 0.0171, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0171, 0.2051, 0.0366, 0.1357, 0.2451, 0.0115, 0.0645, 0.0182, 0.0591, 0.0349, 0.0447, 0.1279, 0.0000, 0.0000, 0.0000],
        [0.4746, 0.0052, 0.0231, 0.0052, 0.0126, 0.0302, 0.1328, 0.0172, 0.0854, 0.0806, 0.0378, 0.0703, 0.0253, 0.0000, 0.0000],
        [0.0962, 0.0022, 0.0166, 0.0028, 0.0154, 0.1865, 0.0243, 0.0449, 0.0684, 0.1494, 0.0557, 0.0071, 0.2539, 0.0776, 0.0000],
        [0.0349, 0.4746, 0.0063, 0.0391, 0.0415, 0.0071, 0.0459, 0.0317, 0.0197, 0.0060, 0.0143, 0.1270, 0.0947, 0.0096, 0.0474]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0011,     -0.1035,      0.0049,     -0.0483,      0.0023,      0.0781,     -0.0043,     -0.0007,      0.0131,      0.0510,      0.0262,     -0.0771,     -0.0041,      0.0234,     -0.0505],
        [    -0.0108,      0.9336,     -2.8281,     -0.8750,     -1.3672,      0.5742,      0.9219,      0.8906,     -0.7109,     -2.0625,     -2.3125,     -1.2812,      1.0078,     -1.6953,      0.1084],
        [     0.0320,      1.7734,     -0.7812,      0.5820,      1.5078,     -1.8750,      0.9727,     -0.8867,      0.3223,     -1.9219,     -1.1797,      1.6484,     -1.2969,     -1.2344,      1.0391],
        [     0.0383,      2.7344,      1.2031,      1.8516,      1.9922,     -2.2969,      0.9531,     -0.7852,      1.4766,      0.3535,      0.8359,      3.5000,     -1.6719,     -0.1157,      2.2969],
        [    -0.0271,     -1.2656,     -2.1406,     -1.2578,     -0.9492,      2.7188,      0.7070,      1.2500,      1.6484,     -0.2891,     -1.7422,     -3.1875,      0.5781,     -0.1426,     -2.5938],
        [     0.0117,     -2.3906,     -1.8125,     -1.6094,     -3.1250,     -2.3281,      0.2754,     -1.8359,     -2.0625,     -2.6250,     -2.3594,     -0.5547,     -3.1094,     -2.7656,      0.7031],
        [    -0.0168,      0.5938,     -1.8906,     -0.0752,     -2.5156,      1.3281,      1.2891,      1.8281,      0.3457,     -1.7656,     -2.0156,     -1.5938,      0.5898,     -1.3125,     -0.2598],
        [    -0.0413,     -3.6406,     -2.3594,     -4.0000,     -4.1562,     -3.4531,     -1.6484,     -4.0938,     -2.6250,     -2.0938,     -2.6875,     -1.3672,     -3.8125,     -3.3438,     -0.0002],
        [    -0.0659,     -4.0625,     -1.4062,     -3.1094,     -2.5469,     -0.6562,     -1.4844,     -2.1875,     -1.4062,     -0.2637,     -1.0156,     -2.1406,     -1.5312,     -1.2812,     -1.0469],
        [    -0.0203,     -1.6406,     -1.3047,     -2.2344,     -1.4141,     -1.7734,     -0.3691,     -2.1406,     -2.0781,     -1.9141,     -2.1875,     -0.5781,     -0.7891,     -2.2969,      0.9062],
        [     0.0071,      0.5703,     -3.3906,     -2.0469,     -0.6719,     -0.2871,     -1.2812,      0.3867,      0.0684,     -1.9609,     -2.0938,     -1.8047,      1.8750,     -1.0703,     -2.0000],
        [     0.0084,      2.5000,      0.7734,      2.0781,      2.6719,     -0.3906,      1.3359,      0.0703,      1.2500,      0.7266,      0.9727,      2.0156,     -0.1523,      0.9883,      1.2812],
        [    -0.0315,     -4.5312,     -3.0625,     -4.5625,     -3.6562,     -2.7812,     -1.3047,     -3.3438,     -1.7422,     -1.8047,     -2.5625,     -1.9375,     -2.9688,     -2.8125,     -0.3047],
        [    -0.0618,     -3.8594,     -1.8203,     -3.5938,     -1.8984,      0.6016,     -1.4375,     -0.8242,     -0.4004,      0.3770,     -0.6094,     -2.6562,      0.9062,     -0.2754,     -2.1562],
        [     0.0299,      2.6406,     -1.6875,      0.1387,      0.1982,     -1.5625,      0.2988,     -0.0654,     -0.5469,     -1.7422,     -0.8633,      1.3203,      1.0312,     -1.2656,      0.3320]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9351],
        [0.7611],
        [0.8368],
        [0.8738],
        [0.9261],
        [0.8565],
        [0.9088],
        [0.8682],
        [0.8657],
        [0.8456],
        [0.7501],
        [0.8783],
        [0.8431],
        [0.6854]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1289,     0.7422,     0.1270,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9258,     0.0003,     0.0757,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2988,     0.0142,     0.0016,     0.0028,     0.6836,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0149,     0.3281,     0.0064,     0.0476,     0.4785,     0.1240,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0004,     0.4062,     0.0022,     0.0420,     0.4375,     0.0615,     0.0236,     0.0266,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1357,     0.1992,     0.0317,     0.0500,     0.0498,     0.1387,     0.0693,     0.1289,     0.0840,     0.1138,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0500,     0.0625,     0.0630,     0.0284,     0.0120,     0.0347,     0.0476,     0.0898,     0.0198,     0.2031,     0.2598,     0.1279,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0003,     0.0004,     0.0001,     0.0028,     0.0001,     0.0001,     0.0001,     0.0002,     0.0001,     0.0004,     0.0004,     0.0001,     0.0003,     0.0018]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0023,     -0.2891,     -0.2656,     -0.3047,     -0.1680,     -0.2578,     -0.2119,     -0.2539,     -0.2891,     -0.3633,     -0.3145,     -0.2773,     -0.2715,     -0.3027,     -0.2334],
        [     0.1611,     22.6250,     13.7500,     20.0000,     16.0000,     20.5000,     17.6250,     18.7500,     14.8125,     18.2500,     13.0000,     13.1875,     15.1250,     12.9375,      8.8750],
        [     0.0132,      1.7656,      0.0001,      0.5039,     -0.6602,      1.3984,      1.5469,      1.5703,     -1.6484,      0.3730,      0.2256,      0.5781,      1.0312,     -1.8125,     -0.7148],
        [     0.1299,     19.0000,     10.8125,     16.5000,     13.3125,     16.8750,     13.8750,     15.3750,     12.3750,     14.7500,     10.0625,     10.5625,     11.5625,     10.4375,      6.9062],
        [    -0.0552,     -3.0938,     -5.2500,     -4.7188,      0.7734,     -4.0938,     -2.7500,     -3.9688,     -5.5000,     -7.9688,     -6.7188,     -6.6250,     -5.0938,     -6.4062,     -6.0312],
        [    -0.0107,      3.0781,     -0.8594,      1.1484,      3.4688,      2.1094,      1.4766,      1.5625,      1.9844,      0.0649,     -0.4551,     -1.6250,      0.1885,      1.1094,     -1.3828],
        [    -0.1758,    -17.1250,    -14.8125,    -18.5000,     -9.6875,    -17.8750,    -14.5625,    -16.3750,    -14.6250,    -19.7500,    -15.0000,    -15.8750,    -15.0000,    -14.6875,    -12.8750],
        [     0.0189,      6.8438,      1.6250,      4.5625,      6.9062,      4.9688,      3.9844,      4.1250,      4.5312,      2.4375,      1.3359,      0.4121,      2.0938,      2.7344,      0.0352],
        [    -0.1709,    -18.2500,    -16.8750,    -19.7500,    -10.6250,    -18.0000,    -14.8125,    -17.3750,    -15.3750,    -21.6250,    -16.1250,    -17.0000,    -15.9375,    -15.5625,    -14.0000],
        [    -0.0211,      0.3672,     -1.4766,     -1.0156,     -1.0234,      0.0024,     -0.6914,     -0.0732,     -0.4980,     -0.1953,     -0.0227,     -0.7773,     -0.2441,     -0.0554,     -1.3125],
        [    -0.1602,    -20.7500,    -13.7500,    -20.0000,    -14.6250,    -19.5000,    -15.1250,    -17.6250,    -15.9375,    -18.2500,    -12.3750,    -13.4375,    -14.2500,    -13.6875,    -10.5625],
        [    -0.0131,      0.2070,      0.2197,     -0.5820,     -1.4375,     -0.3809,     -0.0635,      0.5703,     -0.9453,      1.3906,      1.6328,      0.9219,      1.0703,     -0.3008,      0.3145],
        [    -0.1387,    -14.3125,    -11.4375,    -15.0000,     -8.6250,    -14.6875,    -11.6250,    -13.3750,    -11.0000,    -14.8750,     -9.7500,    -12.1250,    -10.9375,    -10.0000,     -9.1250],
        [    -0.2539,    -30.8750,    -23.0000,    -30.3750,    -20.8750,    -29.2500,    -24.0000,    -27.3750,    -23.2500,    -30.1250,    -20.2500,    -22.5000,    -22.2500,    -21.1250,    -17.3750],
        [    -0.0938,     -8.2500,     -7.9688,     -9.3750,     -5.9688,     -9.3750,     -9.5000,     -9.1250,     -8.8125,     -9.3750,     -7.9375,     -7.8125,     -8.9375,     -8.2500,     -6.4062]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4181],
        [0.5941],
        [0.4167],
        [0.7725],
        [0.5128],
        [0.8890],
        [0.4185],
        [0.8464],
        [0.6051],
        [0.9131],
        [0.5869],
        [0.8626],
        [0.9085],
        [0.9144]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0050,     -0.6406,     -0.6133,     -0.6094,     -0.4648,     -0.6055,     -0.5039,     -0.5156,     -0.5195,     -0.5859,     -0.4395,     -0.5898,     -0.5039,     -0.4688,     -0.4277],
        [    -0.1445,    -18.5000,    -18.7500,    -18.0000,    -10.8750,    -18.0000,    -13.4375,    -15.3125,    -16.5000,    -18.8750,    -15.1250,    -18.3750,    -16.3750,    -15.9375,    -14.6250],
        [    -0.1816,    -25.5000,    -23.6250,    -24.2500,    -16.5000,    -24.5000,    -19.1250,    -20.5000,    -22.8750,    -25.7500,    -19.3750,    -22.8750,    -21.1250,    -21.3750,    -19.3750],
        [    -0.0957,    -15.0000,    -13.5000,    -14.3125,    -10.4375,    -15.5625,    -12.1875,    -12.6250,    -13.6250,    -14.8750,    -11.8125,    -13.0625,    -13.0625,    -12.5000,    -10.2500],
        [    -0.1729,    -26.6250,    -23.3750,    -26.8750,    -21.8750,    -27.8750,    -23.2500,    -23.7500,    -23.8750,    -25.6250,    -17.5000,    -22.5000,    -21.7500,    -20.1250,    -18.7500],
        [    -0.1748,    -24.8750,    -23.5000,    -25.1250,    -18.6250,    -25.5000,    -21.0000,    -22.3750,    -21.0000,    -23.8750,    -16.5000,    -22.6250,    -20.1250,    -18.1250,    -18.0000],
        [    -0.2422,    -31.5000,    -29.5000,    -30.8750,    -22.7500,    -30.1250,    -24.3750,    -26.1250,    -26.8750,    -30.3750,    -21.1250,    -28.3750,    -24.1250,    -23.7500,    -23.8750],
        [    -0.1562,    -20.1250,    -19.6250,    -19.0000,    -12.3750,    -18.2500,    -14.6875,    -16.6250,    -17.1250,    -19.8750,    -14.6250,    -18.7500,    -15.1250,    -15.9375,    -15.6875],
        [    -0.1953,    -34.7500,    -30.5000,    -35.7500,    -29.0000,    -35.5000,    -31.0000,    -31.2500,    -29.8750,    -32.5000,    -21.7500,    -29.1250,    -27.2500,    -24.6250,    -23.2500],
        [    -0.0825,    -16.1250,    -14.6875,    -17.0000,    -12.3750,    -18.1250,    -14.1875,    -15.2500,    -15.0625,    -16.3750,    -11.5000,    -13.6875,    -14.5000,    -12.6875,    -11.3125],
        [    -0.1299,    -30.1250,    -26.1250,    -32.5000,    -26.1250,    -32.2500,    -28.2500,    -27.8750,    -26.5000,    -29.0000,    -19.3750,    -24.5000,    -25.2500,    -21.6250,    -20.8750],
        [    -0.1953,    -30.8750,    -28.0000,    -29.8750,    -21.3750,    -29.7500,    -24.0000,    -25.2500,    -27.2500,    -30.1250,    -22.6250,    -26.6250,    -24.8750,    -24.3750,    -22.1250],
        [    -0.2051,    -29.8750,    -27.7500,    -30.0000,    -22.7500,    -29.2500,    -24.3750,    -25.6250,    -25.2500,    -28.1250,    -19.0000,    -26.3750,    -22.8750,    -21.1250,    -21.1250],
        [    -0.2021,    -37.7500,    -33.0000,    -39.0000,    -31.3750,    -38.0000,    -33.5000,    -33.5000,    -31.8750,    -34.7500,    -23.2500,    -31.5000,    -29.3750,    -26.2500,    -25.5000],
        [    -0.1011,    -19.3750,    -16.7500,    -19.2500,    -13.4375,    -19.6250,    -16.3750,    -16.8750,    -17.3750,    -19.2500,    -14.9375,    -16.5000,    -16.1250,    -16.1250,    -13.7500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6667],
        [0.8255],
        [0.6691],
        [0.7083],
        [0.7494],
        [0.8396],
        [0.6893],
        [0.8501],
        [0.7497],
        [0.8473],
        [0.8294],
        [0.9163],
        [0.9137],
        [0.8330]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.5508,     0.2871,     0.1611,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0000,     0.0007,     0.0001,     0.0001,     0.0001,     0.0018,     0.0007,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0118,     0.1406,     0.1318,     0.0928,     0.0398,     0.0957,     0.1709,     0.1196,     0.0183,     0.0503,     0.0137,     0.1147,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0002,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0014]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0048,     -0.9961,     -0.7148,     -0.7930,     -0.6875,     -0.8164,     -0.6406,     -0.6797,     -0.7266,     -0.8789,     -0.6719,     -0.7227,     -0.7500,     -0.7383,     -0.4902],
        [    -0.0986,    -18.2500,    -12.1875,    -15.8125,    -13.3125,    -14.5625,    -11.0000,    -11.5625,    -15.3750,    -17.2500,    -15.3750,    -13.3125,    -14.5625,    -16.5000,     -9.6250],
        [    -0.0574,    -11.8125,     -9.1250,    -10.3125,     -8.3750,     -9.2500,     -7.2188,     -7.9375,     -8.9375,    -10.8125,     -9.3125,     -9.0000,     -9.0625,     -9.3750,     -6.2812],
        [     0.0101,      7.7188,      7.0625,      6.5000,      4.1562,      6.2500,      6.5000,      5.9375,      2.8594,      4.7500,      2.2656,      6.2500,      4.5000,      3.1719,      4.8125],
        [    -0.1592,    -30.3750,    -21.5000,    -24.3750,    -20.3750,    -24.3750,    -19.7500,    -20.7500,    -22.7500,    -27.3750,    -21.0000,    -21.8750,    -23.0000,    -23.3750,    -15.9375],
        [    -0.1670,    -30.7500,    -20.6250,    -24.3750,    -21.3750,    -24.6250,    -18.5000,    -20.0000,    -23.8750,    -28.5000,    -23.0000,    -22.0000,    -23.3750,    -24.5000,    -15.5625],
        [    -0.2002,    -34.2500,    -23.6250,    -27.2500,    -24.2500,    -28.0000,    -21.3750,    -23.3750,    -26.8750,    -31.1250,    -23.8750,    -24.2500,    -26.0000,    -26.6250,    -17.6250],
        [    -0.0845,    -12.2500,     -7.3750,     -9.6250,     -8.9375,     -9.4375,     -6.4062,     -7.3438,    -10.3750,    -12.1250,    -10.6250,     -8.6250,     -9.3125,    -10.7500,     -6.4062],
        [    -0.1846,    -35.5000,    -25.0000,    -28.6250,    -23.8750,    -28.3750,    -22.8750,    -23.8750,    -26.3750,    -31.6250,    -24.7500,    -25.1250,    -26.8750,    -27.2500,    -18.6250],
        [    -0.1011,    -22.0000,    -14.7500,    -18.5000,    -14.6875,    -17.5000,    -13.6250,    -13.9375,    -16.7500,    -19.7500,    -17.1250,    -15.5625,    -17.0000,    -18.1250,    -11.0625],
        [    -0.1699,    -34.7500,    -24.8750,    -28.3750,    -22.8750,    -27.5000,    -22.3750,    -22.7500,    -25.2500,    -30.5000,    -24.3750,    -25.0000,    -26.0000,    -26.6250,    -18.2500],
        [    -0.0026,      2.4844,      2.4219,      2.0625,      1.2109,      2.0938,      2.6719,      2.3125,      0.4414,      1.4531,      0.1533,      2.2812,      1.4922,      0.8594,      1.3828],
        [    -0.1592,    -29.5000,    -19.8750,    -23.2500,    -20.0000,    -23.3750,    -18.3750,    -19.6250,    -22.3750,    -27.0000,    -21.6250,    -21.0000,    -22.3750,    -23.0000,    -15.2500],
        [    -0.1982,    -41.2500,    -29.2500,    -33.5000,    -27.1250,    -32.7500,    -26.8750,    -27.5000,    -30.1250,    -36.7500,    -29.3750,    -29.6250,    -31.1250,    -32.0000,    -22.2500],
        [    -0.0630,    -14.4375,    -10.3125,    -11.8125,     -9.5625,    -11.3125,     -8.4375,     -9.0625,    -10.8750,    -13.6875,    -11.3750,    -10.7500,    -11.0625,    -11.6875,     -6.6562]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6383],
        [0.8317],
        [0.5133],
        [0.6667],
        [0.8304],
        [0.8343],
        [0.8288],
        [0.7527],
        [0.6586],
        [0.7953],
        [0.6860],
        [0.8281],
        [0.7861],
        [0.8137]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8750,     0.0559,     0.0703,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0004,     0.0009,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0000,     0.0003,     0.0001,     0.0012,     0.0006,     0.0023,     0.0005,     0.0009,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7578,     0.0035,     0.0155,     0.0082,     0.0481,     0.0096,     0.0718,     0.0273,     0.0325,     0.0051,     0.0120,     0.0073,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9648,     0.0006,     0.0009,     0.0004,     0.0100,     0.0018,     0.0095,     0.0022,     0.0030,     0.0001,     0.0007,     0.0000,     0.0004,     0.0031,     0.0025]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0011,     -0.2100,     -0.1738,     -0.2100,     -0.1206,     -0.1582,     -0.1226,     -0.1436,     -0.1357,     -0.2109,     -0.1562,     -0.2227,     -0.1865,     -0.1543,     -0.1367],
        [    -0.0315,     -8.9375,     -8.1250,     -9.6875,     -6.1562,     -7.4062,     -5.4688,     -7.3125,     -7.0000,    -11.4375,     -9.0000,    -11.8750,     -9.3125,     -6.9375,     -6.4062],
        [     0.0046,     -2.7500,     -2.5156,     -4.2188,     -1.8750,     -3.6406,     -1.9609,     -2.5938,     -1.8438,     -2.9062,     -2.9531,     -3.5938,     -4.0625,     -2.8125,     -2.3906],
        [    -0.0154,     -7.8438,     -7.0625,     -8.0625,     -4.1562,     -5.7188,     -3.8438,     -5.6250,     -5.5312,     -9.6875,     -7.6562,    -10.0000,     -7.6875,     -6.0312,     -6.2188],
        [    -0.0996,    -19.6250,    -15.6250,    -17.5000,    -11.1250,    -12.6250,    -10.1250,    -12.7500,    -12.5000,    -20.5000,    -14.4375,    -20.5000,    -15.7500,    -13.1250,    -11.9375],
        [    -0.1221,    -23.2500,    -18.3750,    -20.0000,    -14.0000,    -15.6875,    -12.8750,    -15.8125,    -15.2500,    -24.3750,    -17.3750,    -24.3750,    -19.0000,    -15.2500,    -13.5625],
        [    -0.1118,    -23.2500,    -19.0000,    -21.2500,    -13.1250,    -15.3750,    -12.1875,    -15.2500,    -14.5625,    -24.0000,    -17.3750,    -24.6250,    -19.1250,    -15.8125,    -14.5000],
        [    -0.0928,    -19.2500,    -15.2500,    -17.2500,    -11.0625,    -12.5625,    -10.3125,    -12.9375,    -12.2500,    -20.1250,    -14.5625,    -20.3750,    -16.0000,    -12.9375,    -11.6250],
        [    -0.1650,    -29.2500,    -22.2500,    -23.8750,    -17.3750,    -19.0000,    -16.0000,    -19.2500,    -18.7500,    -28.8750,    -20.2500,    -28.5000,    -22.6250,    -18.7500,    -16.3750],
        [    -0.0435,    -11.1875,     -8.1875,     -9.8750,     -6.7500,     -7.5000,     -6.0938,     -7.6250,     -7.0938,    -11.3750,     -8.6875,    -11.0000,     -9.8125,     -7.5625,     -6.5625],
        [    -0.1289,    -22.6250,    -17.2500,    -19.2500,    -14.0625,    -15.0625,    -13.5000,    -15.3750,    -14.5625,    -22.5000,    -16.2500,    -22.5000,    -18.7500,    -15.2500,    -12.9375],
        [    -0.0010,     -5.4062,     -3.8906,     -4.5312,     -2.7656,     -4.3750,     -2.3594,     -3.3281,     -3.1562,     -5.0000,     -4.1562,     -4.6562,     -4.2812,     -3.3281,     -2.8281],
        [    -0.1396,    -27.1250,    -21.2500,    -23.8750,    -15.9375,    -18.0000,    -15.0000,    -18.1250,    -17.2500,    -27.2500,    -19.7500,    -27.8750,    -22.3750,    -18.3750,    -16.3750],
        [    -0.1699,    -29.3750,    -22.3750,    -24.8750,    -17.7500,    -19.3750,    -17.0000,    -19.6250,    -18.5000,    -28.5000,    -20.1250,    -28.7500,    -23.7500,    -19.7500,    -17.0000],
        [    -0.0258,     -7.5000,     -6.9688,     -7.8750,     -4.5938,     -6.3125,     -4.6562,     -6.0938,     -5.8125,     -9.8125,     -7.1875,     -9.9375,     -7.7500,     -5.7812,     -5.9688]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3351],
        [0.2859],
        [0.2103],
        [0.8796],
        [0.7913],
        [0.9128],
        [0.6884],
        [0.8385],
        [0.2634],
        [0.7955],
        [0.2729],
        [0.8385],
        [0.8237],
        [0.5797]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0003,     -1.1797,     -1.1719,     -1.3281,     -0.6055,     -0.8672,     -0.7188,     -0.8047,     -0.5977,     -0.8008,     -0.5547,     -1.0781,     -0.6172,     -0.5781,     -0.8438],
        [    -0.0197,    -66.0000,    -63.7500,    -73.5000,    -34.0000,    -49.7500,    -41.2500,    -46.0000,    -35.5000,    -46.7500,    -32.5000,    -59.7500,    -36.2500,    -35.0000,    -46.0000],
        [    -0.0122,    -66.5000,    -65.0000,    -74.5000,    -34.0000,    -49.7500,    -41.2500,    -46.0000,    -34.7500,    -45.7500,    -32.0000,    -60.5000,    -35.5000,    -34.0000,    -46.7500],
        [    -0.0255,    -81.0000,    -79.5000,    -91.0000,    -41.5000,    -60.0000,    -49.7500,    -55.7500,    -41.2500,    -55.7500,    -38.0000,    -74.0000,    -43.0000,    -40.0000,    -57.2500],
        [    -0.0138,    -40.5000,    -39.7500,    -45.5000,    -21.0000,    -29.5000,    -24.5000,    -27.5000,    -20.5000,    -27.6250,    -18.6250,    -36.7500,    -21.2500,    -19.7500,    -28.2500],
        [    -0.0175,    -59.5000,    -57.2500,    -66.0000,    -30.5000,    -45.0000,    -36.7500,    -41.7500,    -32.5000,    -42.7500,    -30.0000,    -53.5000,    -33.2500,    -31.8750,    -41.7500],
        [    -0.0189,    -45.0000,    -44.0000,    -50.5000,    -23.2500,    -34.0000,    -28.0000,    -31.8750,    -24.1250,    -32.2500,    -22.0000,    -41.0000,    -25.2500,    -23.5000,    -31.3750],
        [    -0.0186,    -59.5000,    -57.5000,    -66.0000,    -30.5000,    -44.7500,    -37.0000,    -41.7500,    -32.2500,    -42.5000,    -29.5000,    -53.7500,    -33.2500,    -31.6250,    -41.5000],
        [    -0.0167,    -59.7500,    -56.7500,    -66.0000,    -31.1250,    -45.2500,    -37.2500,    -41.7500,    -33.2500,    -43.0000,    -30.7500,    -53.5000,    -33.5000,    -33.0000,    -41.5000],
        [    -0.0182,    -71.5000,    -69.0000,    -80.0000,    -36.5000,    -53.2500,    -43.7500,    -49.2500,    -37.5000,    -49.7500,    -34.7500,    -65.0000,    -38.5000,    -36.7500,    -50.7500],
        [    -0.0142,    -51.2500,    -49.2500,    -57.2500,    -26.6250,    -38.7500,    -31.8750,    -35.7500,    -28.0000,    -36.7500,    -26.0000,    -46.5000,    -28.5000,    -28.0000,    -36.0000],
        [    -0.0190,    -69.0000,    -67.5000,    -77.5000,    -35.2500,    -51.2500,    -42.5000,    -47.5000,    -35.2500,    -47.2500,    -32.5000,    -63.0000,    -36.7500,    -34.2500,    -48.5000],
        [    -0.0160,    -60.0000,    -57.7500,    -67.0000,    -30.7500,    -45.0000,    -37.5000,    -42.0000,    -32.2500,    -42.7500,    -29.6250,    -54.2500,    -33.2500,    -31.7500,    -42.0000],
        [    -0.0179,    -68.5000,    -66.0000,    -76.5000,    -35.7500,    -51.7500,    -42.7500,    -47.7500,    -37.5000,    -49.0000,    -34.7500,    -62.0000,    -38.0000,    -37.0000,    -48.2500],
        [    -0.0129,    -49.0000,    -48.0000,    -54.7500,    -25.1250,    -36.5000,    -30.3750,    -33.7500,    -25.2500,    -33.7500,    -23.3750,    -44.5000,    -26.1250,    -24.8750,    -34.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7698],
        [0.8667],
        [0.5916],
        [0.7781],
        [0.7524],
        [0.8502],
        [0.7512],
        [0.7698],
        [0.6486],
        [0.7250],
        [0.7276],
        [0.7580],
        [0.7208],
        [0.5867]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0004,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0664,     0.3359,     0.5977,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2080,     0.1367,     0.6562,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9688,     0.0000,     0.0002,     0.0001,     0.0325,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0000,     0.0001,     0.0000,     0.0018,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0013,     0.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9727,     0.0001,     0.0011,     0.0002,     0.0150,     0.0013,     0.0081,     0.0030,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2578,     0.1699,     0.3965,     0.0000,     0.0046,     0.0004,     0.0038,     0.0001,     0.1660,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0000,     0.0001,     0.0000,     0.0005,     0.0001,     0.0002,     0.0001,     0.0007,     0.0000,     0.0017,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0156,     0.0786,     0.1484,     0.1611,     0.0265,     0.0486,     0.0669,     0.1074,     0.0190,     0.0913,     0.0282,     0.2080,     0.0000,     0.0000,     0.0000],
        [    0.9844,     0.0000,     0.0004,     0.0000,     0.0038,     0.0003,     0.0021,     0.0008,     0.0020,     0.0001,     0.0015,     0.0002,     0.0024,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3770,     0.0354,     0.0869,     0.0258,     0.0417,     0.0427,     0.0240,     0.0513,     0.0312,     0.0408,     0.0425,     0.1060,     0.0125,     0.0303,     0.0530]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0001,     -0.1270,     -0.1089,     -0.1396,     -0.0752,     -0.0903,     -0.1089,     -0.0952,     -0.0640,     -0.1147,     -0.0767,     -0.1128,     -0.1084,     -0.0762,     -0.0811],
        [     0.0085,      7.7188,      6.8438,      8.1875,      3.1875,      5.5938,      5.1875,      5.8438,      3.5469,      7.0312,      4.7812,      7.1562,      5.5625,      4.3750,      4.4062],
        [    -0.0036,      1.6094,      2.1875,      2.2500,      0.4062,      0.8633,      0.7773,      1.6641,     -0.5078,      1.3750,     -0.2539,      2.6406,     -0.3652,     -0.2324,      0.0947],
        [     0.0085,      9.5000,      9.0625,     10.6250,      4.0625,      6.7812,      6.0000,      7.8438,      3.7656,      8.5625,      4.4375,     10.1875,      5.2812,      4.4688,      5.3438],
        [    -0.0076,     -9.9375,     -8.5000,     -9.4375,     -3.4062,     -7.2500,     -4.9375,     -6.5938,     -4.8125,     -9.3750,     -6.3438,     -9.1250,     -5.5938,     -6.0312,     -6.3125],
        [    -0.0193,    -12.0000,     -9.4375,    -12.3750,     -6.3438,     -8.8750,     -7.8438,     -8.5625,     -7.2188,    -11.0625,     -7.6562,    -10.3750,     -8.5000,     -7.8438,     -7.2188],
        [    -0.0179,    -16.2500,    -13.0000,    -15.2500,     -6.6875,    -12.0000,     -8.5625,    -11.0000,     -8.6875,    -14.4375,    -10.1250,    -14.1250,     -9.7500,     -9.9375,    -10.1875],
        [    -0.0121,     -8.9375,     -6.7500,     -8.4375,     -4.1875,     -6.6250,     -4.7812,     -5.7812,     -5.0938,     -8.0000,     -5.7188,     -7.5312,     -5.1250,     -5.7500,     -5.3125],
        [    -0.0294,    -22.8750,    -18.6250,    -23.1250,    -11.1875,    -17.1250,    -14.0625,    -16.5000,    -12.5000,    -20.2500,    -13.3125,    -20.5000,    -14.1875,    -13.7500,    -13.1250],
        [     0.0093,     12.5625,     12.1250,     12.9375,      3.0312,      8.5000,      6.1250,      8.3125,      4.5312,     12.1250,      7.7188,     12.9375,      7.3438,      6.4375,      9.3750],
        [    -0.0152,    -12.0000,     -8.9375,    -12.2500,     -7.6562,     -9.2500,     -8.3750,     -9.3125,     -7.2188,     -9.9375,     -6.4062,    -10.0000,     -7.6250,     -7.2188,     -5.6875],
        [    -0.0023,      1.6172,      2.2500,      2.3281,      0.5273,      1.1328,      1.4531,      1.9297,      0.1953,      1.7656,      0.5898,      2.5938,      0.9766,      0.5625,      0.3594],
        [    -0.0133,    -10.5000,     -7.7812,    -10.1250,     -5.5625,     -8.2500,     -6.1562,     -7.1250,     -6.1875,     -9.1875,     -6.5000,     -8.6875,     -6.0312,     -6.5000,     -6.1875],
        [    -0.0250,    -20.7500,    -16.3750,    -20.8750,    -10.8750,    -15.7500,    -12.9375,    -14.9375,    -11.5625,    -17.8750,    -11.8125,    -18.1250,    -12.8125,    -12.2500,    -11.6250],
        [    -0.0072,     -2.3750,     -1.4766,     -2.6875,     -2.2031,     -2.1875,     -2.7656,     -2.0000,     -2.5000,     -2.2344,     -2.1875,     -1.2734,     -3.4219,     -2.5312,     -1.9688]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7567],
        [0.7429],
        [0.5840],
        [0.9333],
        [0.9312],
        [0.9191],
        [0.9222],
        [0.8933],
        [0.5885],
        [0.8589],
        [0.6120],
        [0.9206],
        [0.8666],
        [0.6701]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.1348 the:0.1758,:0.1006 and:0.0168,:0.0093,:0.1660 a:0.1152urn:0.1182)
urn
------
		( the:0.1758,:0.1006 and:0.0168,:0.0093,:0.1660 a:0.1152urn:0.1182ou:0.0135)
ourol, and the, in the, the, the, the,
@ 3550 train 4.0968 , allloss: 4.0968, dt: 1187.39ms, fracRes: 0.5078, norm(attn): 1.2109, norm(output): 0.7148, norm(x): 1.1451, norm(y): 0.9917, norm:0.4687, tok/sec: 110386.90, flops:115.88, batch-reuse:1
@ 3551 train 4.2071 , allloss: 4.2071, dt: 704.55ms, fracRes: 0.5076, norm(attn): 1.2188, norm(output): 0.7070, norm(x): 1.1423, norm(y): 0.9929, norm:0.4460, tok/sec: 186036.22, flops:195.30, batch-reuse:1
@ 3552 train 4.1044 , allloss: 4.1044, dt: 704.32ms, fracRes: 0.5062, norm(attn): 1.2266, norm(output): 0.7031, norm(x): 1.1372, norm(y): 0.9922, norm:0.4404, tok/sec: 186097.37, flops:195.37, batch-reuse:1
@ 3553 train 4.0637 , allloss: 4.0637, dt: 687.20ms, fracRes: 0.5055, norm(attn): 1.2109, norm(output): 0.7031, norm(x): 1.1348, norm(y): 0.9919, norm:0.4731, tok/sec: 190732.20, flops:200.23, batch-reuse:1
@ 3554 train 4.0457 , allloss: 4.0457, dt: 689.30ms, fracRes: 0.5069, norm(attn): 1.2109, norm(output): 0.7031, norm(x): 1.1336, norm(y): 0.9911, norm:0.4732, tok/sec: 190151.85, flops:199.62, batch-reuse:1
@ 3555 train 4.1071 , allloss: 4.1071, dt: 694.92ms, fracRes: 0.5104, norm(attn): 1.2188, norm(output): 0.7031, norm(x): 1.1393, norm(y): 0.9919, norm:0.4702, tok/sec: 188614.89, flops:198.01, batch-reuse:1
@ 3556 train 4.0608 , allloss: 4.0608, dt: 679.61ms, fracRes: 0.5086, norm(attn): 1.2109, norm(output): 0.7031, norm(x): 1.1363, norm(y): 0.9914, norm:0.4471, tok/sec: 192864.36, flops:202.47, batch-reuse:1
@ 3557 train 4.2004 , allloss: 4.2004, dt: 684.71ms, fracRes: 0.5105, norm(attn): 1.2344, norm(output): 0.7148, norm(x): 1.1539, norm(y): 0.9927, norm:0.5203, tok/sec: 191426.69, flops:200.96, batch-reuse:1
@ 3558 train 4.0002 , allloss: 4.0002, dt: 695.92ms, fracRes: 0.5087, norm(attn): 1.2500, norm(output): 0.7070, norm(x): 1.1399, norm(y): 0.9930, norm:0.4860, tok/sec: 188343.68, flops:197.72, batch-reuse:1
@ 3559 train 4.0923 , allloss: 4.0923, dt: 689.13ms, fracRes: 0.5090, norm(attn): 1.2578, norm(output): 0.7070, norm(x): 1.1427, norm(y): 0.9916, norm:0.4977, tok/sec: 190198.82, flops:199.67, batch-reuse:1
@ 3560 train 4.0310 , allloss: 4.0310, dt: 679.35ms, fracRes: 0.5044, norm(attn): 1.2656, norm(output): 0.7070, norm(x): 1.1356, norm(y): 0.9907, norm:0.4909, tok/sec: 192937.67, flops:202.55, batch-reuse:1
@ 3561 train 4.0817 , allloss: 4.0817, dt: 695.55ms, fracRes: 0.5091, norm(attn): 1.2500, norm(output): 0.7031, norm(x): 1.1417, norm(y): 0.9910, norm:0.5608, tok/sec: 188443.82, flops:197.83, batch-reuse:1
@ 3562 train 4.0742 , allloss: 4.0742, dt: 692.02ms, fracRes: 0.5073, norm(attn): 1.2656, norm(output): 0.7109, norm(x): 1.1388, norm(y): 0.9918, norm:0.5337, tok/sec: 189405.08, flops:198.84, batch-reuse:1
@ 3563 train 4.1066 , allloss: 4.1066, dt: 700.43ms, fracRes: 0.5057, norm(attn): 1.2578, norm(output): 0.7031, norm(x): 1.1348, norm(y): 0.9917, norm:0.5208, tok/sec: 187129.96, flops:196.45, batch-reuse:1
@ 3564 train 4.0702 , allloss: 4.0702, dt: 717.04ms, fracRes: 0.5074, norm(attn): 1.2656, norm(output): 0.6992, norm(x): 1.1342, norm(y): 0.9919, norm:0.4956, tok/sec: 182797.14, flops:191.90, batch-reuse:1
@ 3565 train 4.0750 , allloss: 4.0750, dt: 695.19ms, fracRes: 0.5056, norm(attn): 1.2578, norm(output): 0.7031, norm(x): 1.1354, norm(y): 0.9920, norm:0.4676, tok/sec: 188542.44, flops:197.93, batch-reuse:1
@ 3566 train 4.0229 , allloss: 4.0229, dt: 699.80ms, fracRes: 0.5105, norm(attn): 1.2344, norm(output): 0.7070, norm(x): 1.1460, norm(y): 0.9909, norm:0.4994, tok/sec: 187299.10, flops:196.63, batch-reuse:1
@ 3567 train 4.1292 , allloss: 4.1292, dt: 713.84ms, fracRes: 0.5065, norm(attn): 1.2656, norm(output): 0.7109, norm(x): 1.1448, norm(y): 0.9916, norm:0.4865, tok/sec: 183616.05, flops:192.76, batch-reuse:1
@ 3568 train 4.0014 , allloss: 4.0014, dt: 695.25ms, fracRes: 0.5085, norm(attn): 1.2578, norm(output): 0.7109, norm(x): 1.1451, norm(y): 0.9916, norm:0.5007, tok/sec: 188524.98, flops:197.91, batch-reuse:1
@ 3569 train 4.1376 , allloss: 4.1376, dt: 699.33ms, fracRes: 0.5070, norm(attn): 1.2500, norm(output): 0.7070, norm(x): 1.1413, norm(y): 0.9918, norm:0.5062, tok/sec: 187423.87, flops:196.76, batch-reuse:1
@ 3570 train 4.1090 , allloss: 4.1090, dt: 685.13ms, fracRes: 0.5059, norm(attn): 1.2656, norm(output): 0.7070, norm(x): 1.1414, norm(y): 0.9913, norm:0.5054, tok/sec: 191309.71, flops:200.84, batch-reuse:1
@ 3571 train 4.1191 , allloss: 4.1191, dt: 710.40ms, fracRes: 0.5015, norm(attn): 1.2812, norm(output): 0.6953, norm(x): 1.1246, norm(y): 0.9925, norm:0.5320, tok/sec: 184505.16, flops:193.69, batch-reuse:1
@ 3572 train 4.0643 , allloss: 4.0643, dt: 711.46ms, fracRes: 0.5068, norm(attn): 1.2734, norm(output): 0.7031, norm(x): 1.1388, norm(y): 0.9926, norm:0.5663, tok/sec: 184229.89, flops:193.40, batch-reuse:1
@ 3573 train 4.1207 , allloss: 4.1207, dt: 702.15ms, fracRes: 0.5090, norm(attn): 1.2734, norm(output): 0.7031, norm(x): 1.1451, norm(y): 0.9930, norm:0.4933, tok/sec: 186671.89, flops:195.97, batch-reuse:1
@ 3574 train 4.0081 , allloss: 4.0081, dt: 695.14ms, fracRes: 0.5054, norm(attn): 1.2578, norm(output): 0.7031, norm(x): 1.1327, norm(y): 0.9918, norm:0.4952, tok/sec: 188555.63, flops:197.95, batch-reuse:1
@ 3575 train 3.9984 , allloss: 3.9984, dt: 695.39ms, fracRes: 0.5071, norm(attn): 1.2500, norm(output): 0.7031, norm(x): 1.1346, norm(y): 0.9916, norm:0.5052, tok/sec: 188486.91, flops:197.87, batch-reuse:1
@ 3576 train 3.9867 , allloss: 3.9867, dt: 703.93ms, fracRes: 0.5079, norm(attn): 1.2500, norm(output): 0.6992, norm(x): 1.1366, norm(y): 0.9909, norm:0.4734, tok/sec: 186199.41, flops:195.47, batch-reuse:1
@ 3577 train 4.1409 , allloss: 4.1409, dt: 699.53ms, fracRes: 0.5074, norm(attn): 1.2422, norm(output): 0.7109, norm(x): 1.1425, norm(y): 0.9911, norm:0.4751, tok/sec: 187371.87, flops:196.70, batch-reuse:1
@ 3578 train 4.0722 , allloss: 4.0722, dt: 699.36ms, fracRes: 0.5057, norm(attn): 1.2344, norm(output): 0.7031, norm(x): 1.1367, norm(y): 0.9913, norm:0.4720, tok/sec: 187415.75, flops:196.75, batch-reuse:1
@ 3579 train 4.0254 , allloss: 4.0254, dt: 696.83ms, fracRes: 0.5064, norm(attn): 1.2422, norm(output): 0.7031, norm(x): 1.1376, norm(y): 0.9914, norm:0.4957, tok/sec: 188096.87, flops:197.46, batch-reuse:1
@ 3580 train 4.0671 , allloss: 4.0671, dt: 700.70ms, fracRes: 0.5043, norm(attn): 1.2500, norm(output): 0.7031, norm(x): 1.1353, norm(y): 0.9923, norm:0.5110, tok/sec: 187059.47, flops:196.38, batch-reuse:1
@ 3581 train 4.0223 , allloss: 4.0223, dt: 691.86ms, fracRes: 0.5049, norm(attn): 1.2422, norm(output): 0.7031, norm(x): 1.1368, norm(y): 0.9914, norm:0.4881, tok/sec: 189448.68, flops:198.88, batch-reuse:1
@ 3582 train 4.0450 , allloss: 4.0450, dt: 700.74ms, fracRes: 0.5028, norm(attn): 1.2422, norm(output): 0.7031, norm(x): 1.1330, norm(y): 0.9914, norm:0.4732, tok/sec: 187047.12, flops:196.36, batch-reuse:1
@ 3583 train 4.1608 , allloss: 4.1608, dt: 699.34ms, fracRes: 0.5001, norm(attn): 1.2422, norm(output): 0.7070, norm(x): 1.1313, norm(y): 0.9918, norm:0.5246, tok/sec: 187423.04, flops:196.76, batch-reuse:1
@ 3584 train 4.0653 , allloss: 4.0653, dt: 699.10ms, fracRes: 0.5017, norm(attn): 1.2422, norm(output): 0.6992, norm(x): 1.1298, norm(y): 0.9917, norm:0.4562, tok/sec: 187487.85, flops:196.83, batch-reuse:1
@ 3585 train 4.0494 , allloss: 4.0494, dt: 697.19ms, fracRes: 0.5058, norm(attn): 1.2109, norm(output): 0.7070, norm(x): 1.1354, norm(y): 0.9906, norm:0.4564, tok/sec: 188000.90, flops:197.36, batch-reuse:1
@ 3586 train 3.9733 , allloss: 3.9733, dt: 698.72ms, fracRes: 0.5052, norm(attn): 1.2344, norm(output): 0.6992, norm(x): 1.1311, norm(y): 0.9911, norm:0.4749, tok/sec: 187587.97, flops:196.93, batch-reuse:1
@ 3587 train 4.0756 , allloss: 4.0756, dt: 699.34ms, fracRes: 0.5034, norm(attn): 1.2422, norm(output): 0.7070, norm(x): 1.1368, norm(y): 0.9912, norm:0.4961, tok/sec: 187422.14, flops:196.76, batch-reuse:1
@ 3588 train 4.0463 , allloss: 4.0463, dt: 693.22ms, fracRes: 0.5090, norm(attn): 1.2500, norm(output): 0.7031, norm(x): 1.1392, norm(y): 0.9917, norm:0.4667, tok/sec: 189077.67, flops:198.49, batch-reuse:1
@ 3589 train 4.1437 , allloss: 4.1437, dt: 692.11ms, fracRes: 0.5082, norm(attn): 1.2500, norm(output): 0.7031, norm(x): 1.1404, norm(y): 0.9919, norm:0.4909, tok/sec: 189380.87, flops:198.81, batch-reuse:1
@ 3590 train 3.9418 , allloss: 3.9418, dt: 692.53ms, fracRes: 0.5086, norm(attn): 1.2266, norm(output): 0.6953, norm(x): 1.1347, norm(y): 0.9903, norm:0.4163, tok/sec: 189265.08, flops:198.69, batch-reuse:1
@ 3591 train 4.0417 , allloss: 4.0417, dt: 699.21ms, fracRes: 0.5114, norm(attn): 1.2344, norm(output): 0.7070, norm(x): 1.1451, norm(y): 0.9909, norm:0.4532, tok/sec: 187458.32, flops:196.79, batch-reuse:1
@ 3592 train 3.9501 , allloss: 3.9501, dt: 698.38ms, fracRes: 0.5144, norm(attn): 1.2344, norm(output): 0.7031, norm(x): 1.1432, norm(y): 0.9918, norm:0.4980, tok/sec: 187681.09, flops:197.03, batch-reuse:1
@ 3593 train 4.1204 , allloss: 4.1204, dt: 702.96ms, fracRes: 0.5133, norm(attn): 1.2422, norm(output): 0.7070, norm(x): 1.1445, norm(y): 0.9917, norm:0.4713, tok/sec: 186458.53, flops:195.74, batch-reuse:1
@ 3594 train 4.0067 , allloss: 4.0067, dt: 697.62ms, fracRes: 0.5113, norm(attn): 1.2344, norm(output): 0.7070, norm(x): 1.1449, norm(y): 0.9908, norm:0.4635, tok/sec: 187885.12, flops:197.24, batch-reuse:1
@ 3595 train 4.0827 , allloss: 4.0827, dt: 701.33ms, fracRes: 0.5114, norm(attn): 1.2500, norm(output): 0.7188, norm(x): 1.1511, norm(y): 0.9917, norm:0.4990, tok/sec: 186891.84, flops:196.20, batch-reuse:1
@ 3596 train 4.0569 , allloss: 4.0569, dt: 698.37ms, fracRes: 0.5142, norm(attn): 1.2266, norm(output): 0.7031, norm(x): 1.1490, norm(y): 0.9922, norm:0.4803, tok/sec: 187683.01, flops:197.03, batch-reuse:1
@ 3597 train 4.0430 , allloss: 4.0430, dt: 686.42ms, fracRes: 0.5067, norm(attn): 1.2500, norm(output): 0.6992, norm(x): 1.1348, norm(y): 0.9916, norm:0.4631, tok/sec: 190950.75, flops:200.46, batch-reuse:1
@ 3598 train 4.0489 , allloss: 4.0489, dt: 702.89ms, fracRes: 0.5089, norm(attn): 1.2344, norm(output): 0.6992, norm(x): 1.1382, norm(y): 0.9915, norm:0.5287, tok/sec: 186476.81, flops:195.76, batch-reuse:1
@ 3599 train 4.0290 , allloss: 4.0290, dt: 719.76ms, fracRes: 0.5121, norm(attn): 1.2344, norm(output): 0.7070, norm(x): 1.1458, norm(y): 0.9915, norm:0.5663, tok/sec: 182105.52, flops:191.17, batch-reuse:1
@ 3600 train 3.9660 , allloss: 3.9660, dt: 702.86ms, fracRes: 0.5141, norm(attn): 1.2344, norm(output): 0.7070, norm(x): 1.1494, norm(y): 0.9907, norm:0.5399, tok/sec: 186485.03, flops:195.77, batch-reuse:1
@ 3601 train 4.0696 , allloss: 4.0696, dt: 703.24ms, fracRes: 0.5121, norm(attn): 1.2578, norm(output): 0.7031, norm(x): 1.1413, norm(y): 0.9919, norm:0.5390, tok/sec: 186383.43, flops:195.67, batch-reuse:1
@ 3602 train 4.0834 , allloss: 4.0834, dt: 687.25ms, fracRes: 0.5120, norm(attn): 1.2734, norm(output): 0.7031, norm(x): 1.1434, norm(y): 0.9923, norm:0.4981, tok/sec: 190719.30, flops:200.22, batch-reuse:1
@ 3603 train 4.0986 , allloss: 4.0986, dt: 701.98ms, fracRes: 0.5120, norm(attn): 1.2656, norm(output): 0.7031, norm(x): 1.1440, norm(y): 0.9922, norm:0.5637, tok/sec: 186718.11, flops:196.02, batch-reuse:1
@ 3604 train 4.0536 , allloss: 4.0536, dt: 706.31ms, fracRes: 0.5110, norm(attn): 1.2656, norm(output): 0.6992, norm(x): 1.1383, norm(y): 0.9917, norm:0.4818, tok/sec: 185573.09, flops:194.81, batch-reuse:1
@ 3605 train 4.0331 , allloss: 4.0331, dt: 700.60ms, fracRes: 0.5113, norm(attn): 1.2656, norm(output): 0.6953, norm(x): 1.1353, norm(y): 0.9913, norm:0.4648, tok/sec: 187085.76, flops:196.40, batch-reuse:1
@ 3606 train 4.0244 , allloss: 4.0244, dt: 704.01ms, fracRes: 0.5180, norm(attn): 1.2422, norm(output): 0.6953, norm(x): 1.1427, norm(y): 0.9920, norm:0.4848, tok/sec: 186180.37, flops:195.45, batch-reuse:1
@ 3607 train 4.0535 , allloss: 4.0535, dt: 703.17ms, fracRes: 0.5126, norm(attn): 1.2500, norm(output): 0.6992, norm(x): 1.1400, norm(y): 0.9911, norm:0.4575, tok/sec: 186401.88, flops:195.69, batch-reuse:1
@ 3608 train 4.0854 , allloss: 4.0854, dt: 703.41ms, fracRes: 0.5162, norm(attn): 1.2266, norm(output): 0.7031, norm(x): 1.1470, norm(y): 0.9915, norm:0.5556, tok/sec: 186337.44, flops:195.62, batch-reuse:1
@ 3609 train 4.1024 , allloss: 4.1024, dt: 712.98ms, fracRes: 0.5142, norm(attn): 1.2188, norm(output): 0.7070, norm(x): 1.1474, norm(y): 0.9918, norm:0.4886, tok/sec: 183837.46, flops:192.99, batch-reuse:1
@ 3610 train 3.9374 , allloss: 3.9374, dt: 707.39ms, fracRes: 0.5205, norm(attn): 1.1797, norm(output): 0.7266, norm(x): 1.1671, norm(y): 0.9901, norm:0.5511, tok/sec: 185288.44, flops:194.52, batch-reuse:1
@ 3611 train 4.0627 , allloss: 4.0627, dt: 682.95ms, fracRes: 0.5091, norm(attn): 1.2500, norm(output): 0.7070, norm(x): 1.1459, norm(y): 0.9908, norm:0.5573, tok/sec: 191919.80, flops:201.48, batch-reuse:1
@ 3612 train 4.0908 , allloss: 4.0908, dt: 697.45ms, fracRes: 0.5084, norm(attn): 1.2422, norm(output): 0.6992, norm(x): 1.1354, norm(y): 0.9910, norm:0.5688, tok/sec: 187931.24, flops:197.29, batch-reuse:1
@ 3613 train 4.0313 , allloss: 4.0313, dt: 693.87ms, fracRes: 0.5113, norm(attn): 1.2500, norm(output): 0.6992, norm(x): 1.1381, norm(y): 0.9911, norm:0.5220, tok/sec: 188900.83, flops:198.31, batch-reuse:1
@ 3614 train 4.0456 , allloss: 4.0456, dt: 689.29ms, fracRes: 0.5131, norm(attn): 1.2344, norm(output): 0.7031, norm(x): 1.1469, norm(y): 0.9919, norm:0.5275, tok/sec: 190155.27, flops:199.63, batch-reuse:1
@ 3615 train 4.0492 , allloss: 4.0492, dt: 687.91ms, fracRes: 0.5120, norm(attn): 1.2422, norm(output): 0.7031, norm(x): 1.1492, norm(y): 0.9925, norm:0.5160, tok/sec: 190537.72, flops:200.03, batch-reuse:1
@ 3616 train 3.9483 , allloss: 3.9483, dt: 688.71ms, fracRes: 0.5101, norm(attn): 1.2344, norm(output): 0.7109, norm(x): 1.1461, norm(y): 0.9904, norm:0.4794, tok/sec: 190315.17, flops:199.79, batch-reuse:1
@ 3617 train 4.0007 , allloss: 4.0007, dt: 690.71ms, fracRes: 0.5073, norm(attn): 1.2266, norm(output): 0.6953, norm(x): 1.1310, norm(y): 0.9901, norm:0.4874, tok/sec: 189763.68, flops:199.21, batch-reuse:1
@ 3618 train 3.9410 , allloss: 3.9410, dt: 695.21ms, fracRes: 0.5062, norm(attn): 1.2188, norm(output): 0.7031, norm(x): 1.1351, norm(y): 0.9899, norm:0.4594, tok/sec: 188536.04, flops:197.93, batch-reuse:1
@ 3619 train 4.0135 , allloss: 4.0135, dt: 700.15ms, fracRes: 0.5054, norm(attn): 1.2188, norm(output): 0.6992, norm(x): 1.1348, norm(y): 0.9900, norm:0.5198, tok/sec: 187205.60, flops:196.53, batch-reuse:1
@ 3620 train 4.0665 , allloss: 4.0665, dt: 685.95ms, fracRes: 0.5090, norm(attn): 1.2266, norm(output): 0.7148, norm(x): 1.1491, norm(y): 0.9917, norm:0.4826, tok/sec: 191079.64, flops:200.60, batch-reuse:1
@ 3621 train 3.9954 , allloss: 3.9954, dt: 683.90ms, fracRes: 0.5078, norm(attn): 1.2422, norm(output): 0.7031, norm(x): 1.1420, norm(y): 0.9929, norm:0.4779, tok/sec: 191653.25, flops:201.20, batch-reuse:1
@ 3622 train 4.0562 , allloss: 4.0562, dt: 693.95ms, fracRes: 0.5058, norm(attn): 1.2422, norm(output): 0.7031, norm(x): 1.1368, norm(y): 0.9920, norm:0.5220, tok/sec: 188878.44, flops:198.28, batch-reuse:1
@ 3623 train 4.0429 , allloss: 4.0429, dt: 696.67ms, fracRes: 0.5083, norm(attn): 1.2344, norm(output): 0.6992, norm(x): 1.1349, norm(y): 0.9913, norm:0.4751, tok/sec: 188141.87, flops:197.51, batch-reuse:1
@ 3624 train 3.9140 , allloss: 3.9140, dt: 698.72ms, fracRes: 0.5091, norm(attn): 1.2422, norm(output): 0.6953, norm(x): 1.1325, norm(y): 0.9899, norm:0.4548, tok/sec: 187588.36, flops:196.93, batch-reuse:1
@ 3625 train 4.0432 , allloss: 4.0432, dt: 701.96ms, fracRes: 0.5082, norm(attn): 1.2500, norm(output): 0.6992, norm(x): 1.1348, norm(y): 0.9913, norm:0.4369, tok/sec: 186722.30, flops:196.02, batch-reuse:1
@ 3626 train 3.9666 , allloss: 3.9666, dt: 699.42ms, fracRes: 0.5077, norm(attn): 1.2266, norm(output): 0.6992, norm(x): 1.1355, norm(y): 0.9920, norm:0.4745, tok/sec: 187401.00, flops:196.73, batch-reuse:1
@ 3627 train 4.0458 , allloss: 4.0458, dt: 685.48ms, fracRes: 0.5112, norm(attn): 1.2109, norm(output): 0.6953, norm(x): 1.1363, norm(y): 0.9917, norm:0.5092, tok/sec: 191211.57, flops:200.73, batch-reuse:1
@ 3628 train 4.0943 , allloss: 4.0943, dt: 695.36ms, fracRes: 0.5188, norm(attn): 1.2031, norm(output): 0.7109, norm(x): 1.1555, norm(y): 0.9921, norm:0.4807, tok/sec: 188495.64, flops:197.88, batch-reuse:1
@ 3629 train 3.9733 , allloss: 3.9733, dt: 706.24ms, fracRes: 0.5171, norm(attn): 1.1953, norm(output): 0.7188, norm(x): 1.1608, norm(y): 0.9912, norm:0.4476, tok/sec: 185591.07, flops:194.83, batch-reuse:1
@ 3630 train 3.9204 , allloss: 3.9204, dt: 696.80ms, fracRes: 0.5220, norm(attn): 1.1875, norm(output): 0.7109, norm(x): 1.1613, norm(y): 0.9908, norm:0.5232, tok/sec: 188106.34, flops:197.47, batch-reuse:1
@ 3631 train 3.9806 , allloss: 3.9806, dt: 697.55ms, fracRes: 0.5133, norm(attn): 1.2188, norm(output): 0.6992, norm(x): 1.1425, norm(y): 0.9915, norm:0.4379, tok/sec: 187903.17, flops:197.26, batch-reuse:1
@ 3632 train 3.9740 , allloss: 3.9740, dt: 703.30ms, fracRes: 0.5165, norm(attn): 1.2188, norm(output): 0.7109, norm(x): 1.1556, norm(y): 0.9915, norm:0.5031, tok/sec: 186366.81, flops:195.65, batch-reuse:1
@ 3633 train 4.0947 , allloss: 4.0947, dt: 700.06ms, fracRes: 0.5138, norm(attn): 1.2188, norm(output): 0.7148, norm(x): 1.1466, norm(y): 0.9919, norm:0.4910, tok/sec: 187228.87, flops:196.55, batch-reuse:1
@ 3634 train 3.9038 , allloss: 3.9038, dt: 697.69ms, fracRes: 0.5164, norm(attn): 1.2031, norm(output): 0.7031, norm(x): 1.1436, norm(y): 0.9906, norm:0.4850, tok/sec: 187866.50, flops:197.22, batch-reuse:1
@ 3635 train 3.9689 , allloss: 3.9689, dt: 697.52ms, fracRes: 0.5191, norm(attn): 1.1953, norm(output): 0.7070, norm(x): 1.1515, norm(y): 0.9908, norm:0.5051, tok/sec: 187911.65, flops:197.27, batch-reuse:1
@ 3636 train 3.9498 , allloss: 3.9498, dt: 699.34ms, fracRes: 0.5150, norm(attn): 1.2031, norm(output): 0.6992, norm(x): 1.1437, norm(y): 0.9910, norm:0.5408, tok/sec: 187421.63, flops:196.76, batch-reuse:1
@ 3637 train 4.0391 , allloss: 4.0391, dt: 698.32ms, fracRes: 0.5113, norm(attn): 1.2344, norm(output): 0.6992, norm(x): 1.1375, norm(y): 0.9919, norm:0.5083, tok/sec: 187696.53, flops:197.04, batch-reuse:1
@ 3638 train 4.0135 , allloss: 4.0135, dt: 696.86ms, fracRes: 0.5082, norm(attn): 1.2344, norm(output): 0.6914, norm(x): 1.1295, norm(y): 0.9909, norm:0.5384, tok/sec: 188090.31, flops:197.46, batch-reuse:1
@ 3639 train 4.0401 , allloss: 4.0401, dt: 688.79ms, fracRes: 0.5089, norm(attn): 1.2422, norm(output): 0.7031, norm(x): 1.1348, norm(y): 0.9908, norm:0.5136, tok/sec: 190292.44, flops:199.77, batch-reuse:1
@ 3640 train 3.9709 , allloss: 3.9709, dt: 697.11ms, fracRes: 0.5101, norm(attn): 1.2500, norm(output): 0.7031, norm(x): 1.1414, norm(y): 0.9913, norm:0.4493, tok/sec: 188021.09, flops:197.38, batch-reuse:1
@ 3641 train 4.0093 , allloss: 4.0093, dt: 703.63ms, fracRes: 0.5143, norm(attn): 1.2500, norm(output): 0.7148, norm(x): 1.1510, norm(y): 0.9927, norm:0.5151, tok/sec: 186278.85, flops:195.56, batch-reuse:1
@ 3642 train 4.2026 , allloss: 4.2026, dt: 697.87ms, fracRes: 0.5100, norm(attn): 1.2578, norm(output): 0.6992, norm(x): 1.1379, norm(y): 0.9920, norm:0.5117, tok/sec: 187816.44, flops:197.17, batch-reuse:1
@ 3643 train 4.0015 , allloss: 4.0015, dt: 694.50ms, fracRes: 0.5123, norm(attn): 1.2500, norm(output): 0.6914, norm(x): 1.1360, norm(y): 0.9919, norm:0.4152, tok/sec: 188728.85, flops:198.13, batch-reuse:1
@ 3644 train 4.0768 , allloss: 4.0768, dt: 706.96ms, fracRes: 0.5091, norm(attn): 1.2344, norm(output): 0.6914, norm(x): 1.1251, norm(y): 0.9918, norm:0.5193, tok/sec: 185401.92, flops:194.64, batch-reuse:1
@ 3645 train 3.9922 , allloss: 3.9922, dt: 689.17ms, fracRes: 0.5128, norm(attn): 1.2344, norm(output): 0.6953, norm(x): 1.1323, norm(y): 0.9910, norm:0.4872, tok/sec: 190189.48, flops:199.66, batch-reuse:1
@ 3646 train 3.9809 , allloss: 3.9809, dt: 700.30ms, fracRes: 0.5202, norm(attn): 1.2109, norm(output): 0.7070, norm(x): 1.1537, norm(y): 0.9915, norm:0.4872, tok/sec: 187165.12, flops:196.49, batch-reuse:1
@ 3647 train 4.0106 , allloss: 4.0106, dt: 693.11ms, fracRes: 0.5166, norm(attn): 1.2188, norm(output): 0.7148, norm(x): 1.1540, norm(y): 0.9922, norm:0.4402, tok/sec: 189107.14, flops:198.53, batch-reuse:1
@ 3648 train 4.0473 , allloss: 4.0473, dt: 704.51ms, fracRes: 0.5110, norm(attn): 1.2188, norm(output): 0.7070, norm(x): 1.1427, norm(y): 0.9910, norm:0.4657, tok/sec: 186047.17, flops:195.31, batch-reuse:1
@ 3649 train 4.0668 , allloss: 4.0668, dt: 701.52ms, fracRes: 0.5108, norm(attn): 1.2188, norm(output): 0.7031, norm(x): 1.1417, norm(y): 0.9910, norm:0.4601, tok/sec: 186840.08, flops:196.15, batch-reuse:1
@ 3650 train 4.0738 , allloss: 4.0738, dt: 704.25ms, fracRes: 0.5158, norm(attn): 1.2266, norm(output): 0.7070, norm(x): 1.1493, norm(y): 0.9920, norm:0.5220, tok/sec: 186115.39, flops:195.38, batch-reuse:1
@ 3651 train 4.0268 , allloss: 4.0268, dt: 705.91ms, fracRes: 0.5121, norm(attn): 1.2188, norm(output): 0.7070, norm(x): 1.1455, norm(y): 0.9914, norm:0.4438, tok/sec: 185677.57, flops:194.92, batch-reuse:1
@ 3652 train 3.9554 , allloss: 3.9554, dt: 702.87ms, fracRes: 0.5120, norm(attn): 1.2344, norm(output): 0.7070, norm(x): 1.1437, norm(y): 0.9921, norm:0.4955, tok/sec: 186480.92, flops:195.77, batch-reuse:1
@ 3653 train 3.9467 , allloss: 3.9467, dt: 696.70ms, fracRes: 0.5128, norm(attn): 1.2266, norm(output): 0.7031, norm(x): 1.1443, norm(y): 0.9909, norm:0.4748, tok/sec: 188131.70, flops:197.50, batch-reuse:1
@ 3654 train 4.0977 , allloss: 4.0977, dt: 697.98ms, fracRes: 0.5143, norm(attn): 1.2188, norm(output): 0.6992, norm(x): 1.1449, norm(y): 0.9903, norm:0.4962, tok/sec: 187788.53, flops:197.14, batch-reuse:1
@ 3655 train 4.0922 , allloss: 4.0922, dt: 695.02ms, fracRes: 0.5184, norm(attn): 1.2188, norm(output): 0.7031, norm(x): 1.1494, norm(y): 0.9912, norm:0.4958, tok/sec: 188587.91, flops:197.98, batch-reuse:1
@ 3656 train 4.0605 , allloss: 4.0605, dt: 686.16ms, fracRes: 0.5160, norm(attn): 1.2266, norm(output): 0.7031, norm(x): 1.1506, norm(y): 0.9911, norm:0.5135, tok/sec: 191021.55, flops:200.53, batch-reuse:1
@ 3657 train 4.0744 , allloss: 4.0744, dt: 695.76ms, fracRes: 0.5144, norm(attn): 1.2266, norm(output): 0.6953, norm(x): 1.1428, norm(y): 0.9910, norm:0.5006, tok/sec: 188387.12, flops:197.77, batch-reuse:1
@ 3658 train 3.9774 , allloss: 3.9774, dt: 709.17ms, fracRes: 0.5127, norm(attn): 1.2344, norm(output): 0.6992, norm(x): 1.1347, norm(y): 0.9910, norm:0.4769, tok/sec: 184823.43, flops:194.03, batch-reuse:1
