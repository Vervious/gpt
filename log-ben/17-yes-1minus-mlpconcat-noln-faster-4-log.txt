Threshold: 0.1
Enable layer loss: False
MAX LEARNING RATE: 0.0006
Experiment name: 17-yes-1minus-mlpconcat-noln-faster-4
MLPSCALE: 4
Experiment description: Transformer, max LR 6e-4
Setting:
========
self.compiler = BenCompilerNoOp(config)
self.execute = BenExecute(config) 
========
y = self.ln_1(x)
attn, xWeights, scores = self.attn(y, y, print_weights=print_weights)
program = self.compiler(y)
machineOutput = self.execute(program, attn)
x = xWeights * x + (1-xWeights)*machineOutput
======== 
VALUEMATRIX=True
REUSE_WEIGHTS=False
MLP_SCALE=4
MEASURE_SELF_CONTRIBUTION=False
NEW_ALL_LAYER_LOSS=False
MATRIX_NUM_PARAMS=4096
MLPMAT_INNER_SIZE=64
DELETE_SELF_CONTRIBUTION=False
EXTRACT_SELF_CONTRIBUTION=False
ATTENTION_SINK=True
IDENTITY_LOSS=True

Warmup steps: 1000
total desired batch size: 131072
Mini-batch size: 8*1024
=> calculated gradient accumulation steps: 16
=> calculated gradient accumulation steps: 16
Training max steps: 300001Num GPUs: 1{'block_size': 1024, 'vocab_size': 50304, 'n_layer': 12, 'n_head': 12, 'n_embd': 768}
num decayed parameter tensors: 50, with 152,666,112 parameters
num non-decayed parameter tensors: 50, with 66,048 parameters
@ 0 train 11.0362 , allloss: 70.8849, dt: 2796.84ms, fracRes: 0.0062, norm(attn): 0.0330, norm(output): 0.0742, norm(x): 0.0736, norm(y): 0.9993, norm:47.8000, tok/sec: 46864.37, flops:49.19, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3926, 0.6094, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2812, 0.2432, 0.4766, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1787, 0.2793, 0.2695, 0.2715, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1885, 0.1865, 0.2051, 0.2520, 0.1680, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1406, 0.2285, 0.1025, 0.1133, 0.3145, 0.1016, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1533, 0.1216, 0.1377, 0.1533, 0.1445, 0.1768, 0.1138, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1118, 0.1050, 0.1475, 0.1396, 0.1406, 0.0981, 0.1104, 0.1465, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1099, 0.1001, 0.1030, 0.0684, 0.1167, 0.1855, 0.0801, 0.1172, 0.1187, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0845, 0.1084, 0.0903, 0.1338, 0.1123, 0.0781, 0.1445, 0.0640, 0.0854, 0.0981, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0801, 0.0654, 0.1338, 0.0767, 0.0923, 0.1050, 0.0732, 0.1572, 0.0605, 0.0933, 0.0625, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0879, 0.1348, 0.0850, 0.0742, 0.1060, 0.0806, 0.1113, 0.0422, 0.0947, 0.0530, 0.0603, 0.0703, 0.0000, 0.0000, 0.0000],
        [0.0791, 0.0496, 0.0591, 0.0688, 0.0820, 0.1064, 0.0608, 0.1016, 0.0659, 0.0728, 0.0569, 0.1240, 0.0728, 0.0000, 0.0000],
        [0.0649, 0.0588, 0.0549, 0.0554, 0.0583, 0.0933, 0.0630, 0.0605, 0.0859, 0.0923, 0.0562, 0.1152, 0.0635, 0.0776, 0.0000],
        [0.0679, 0.0530, 0.0601, 0.0742, 0.0272, 0.0884, 0.0703, 0.0771, 0.0747, 0.0549, 0.0454, 0.0752, 0.0820, 0.0771, 0.0723]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[     0.0197,      0.0016,     -0.0001,  ...,     -0.0357,      0.0001,     -0.0176],
        [    -0.0135,     -0.0016,     -0.0004,  ...,     -0.0040,      0.0301,      0.0080],
        [    -0.0041,      0.0028,     -0.0109,  ...,     -0.0058,      0.0303,      0.0260],
        ...,
        [    -0.0346,      0.0313,     -0.0074,  ...,      0.0074,      0.0053,      0.0059],
        [     0.0213,      0.0080,      0.0074,  ...,      0.0092,      0.0021,      0.0096],
        [     0.0049,     -0.0040,      0.0042,  ...,     -0.0015,      0.0058,      0.0023]], device='cuda:0', requires_grad=True)
K: tensor([-0.8984, -0.6484,  0.4863,  0.1396, -1.0078, -0.0479,  0.3809, -1.4766, -0.0688, -0.7070, -0.1670,  0.4316, -0.1279,  0.5820,  0.2539, -0.3672, -0.2500, -0.2051, -0.6562,  0.5391, -0.5117, -0.6055,  0.0315, -0.2461, -0.9727, -0.3398, -0.2578, -0.8125,  0.0674,  0.1289, -0.4160,  0.6055,
         0.1357, -0.8555,  0.4551,  0.3984, -0.0771, -0.2383,  0.3203, -0.1455,  0.1738,  0.7734,  0.0070, -0.3984, -0.2314,  0.1060,  0.0034, -0.3008, -0.1050,  0.0815,  0.4355, -0.1816, -0.4766, -0.5039, -0.3145, -0.1445, -0.7734, -0.1128,  0.6172,  0.2295,  0.3105,  0.0381, -0.9688,  0.6367],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0167,  0.0006, -0.0061,  ..., -0.0083, -0.0027, -0.0207],
        [-0.0058, -0.0161, -0.0282,  ..., -0.0302,  0.0034, -0.0174],
        [ 0.0111, -0.0126, -0.0080,  ..., -0.0472, -0.0285,  0.0276],
        ...,
        [-0.0020,  0.0072, -0.0021,  ...,  0.0140,  0.0199, -0.0284],
        [-0.0204, -0.0087,  0.0069,  ...,  0.0151,  0.0244,  0.0145],
        [ 0.0374,  0.0195, -0.0140,  ..., -0.0136, -0.0046, -0.0118]], device='cuda:0', requires_grad=True)
Q: tensor([    -0.2910,     -0.2754,     -1.3438,     -0.2432,      0.0693,      0.4570,     -0.7656,      0.0581,      0.6562,     -0.4863,      0.6133,      0.5039,      0.1211,      0.1338,      0.5547,     -0.6445,     -0.3418,     -0.3281,     -0.3984,     -0.5586,      1.1641,     -0.5781,
            -0.6953,     -0.2324,     -0.9336,     -1.3750,      0.6797,     -0.3145,     -1.0234,      0.1309,     -0.5430,      0.2061,      0.3926,     -0.0581,     -0.0801,     -0.2090,      0.5430,      0.2051,     -0.7305,      0.0136,      1.0078,      0.1089,     -0.4941,     -0.2100,
            -0.7227,      0.7188,      0.5234,     -0.7109,      0.2471,      0.6719,     -0.3281,      1.0938,     -0.1318,      0.5273,      0.3359,      0.8867,     -0.0708,     -0.3770,     -0.1279,      0.2412,     -0.5000,     -0.0010,      0.8789,     -0.0444], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.4375,      0.0229,     -0.0679,     -0.1680,      0.1167,      0.0564,     -0.4297,      0.0027,     -0.0698,     -0.0344,      0.3457,      0.0364,      0.2246,      0.0972],
        [     0.0000,     -0.1436,      0.5312,     -0.0674,     -0.0762,     -0.0698,      0.4004,      0.2617,      0.4473,     -0.4043,      0.0786,      0.2451,      0.1216,     -0.1426,      0.4980],
        [     0.0000,      0.4473,      0.4102,      0.4180,      0.5781,     -0.7227,      0.1523,     -0.0776,     -0.0294,     -0.1050,      0.2363,      0.5234,     -0.0544,     -0.1699,     -0.1895],
        [     0.0000,     -0.0117,      0.0864,      0.2930,     -0.1138,     -0.0513,      0.4902,      0.3887,     -0.0962,      0.1211,      0.0153,      0.4512,     -0.3301,      0.0732,      0.4648],
        [     0.0000,      0.4824,     -0.3203,     -0.2207,      0.8008,     -0.3281,      0.6133,      0.2539,     -0.2910,      0.2891,      0.3379,     -0.4883,     -0.3730,     -0.2832,      0.0425],
        [     0.0000,     -0.2285,     -0.1050,      0.0000,     -0.0586,      0.1445,     -0.2949,     -0.3828,      0.3789,     -0.1064,     -0.2354,      0.7188,      0.3926,     -0.2373,     -0.1836],
        [     0.0000,     -0.0623,      0.2773,      0.2227,      0.2256,     -0.1318,     -0.0138,      0.2695,      0.1230,     -0.0471,      0.1387,      0.5273,     -0.0762,      0.1279,     -0.5898],
        [     0.0000,     -0.0918,     -0.0623,     -0.4746,      0.0615,      0.5234,     -0.3145,      0.0630,      0.0791,     -0.1660,      0.0903,      0.4277,      0.3359,      0.3926,     -0.0077],
        [     0.0000,      0.2490,      0.0679,      0.4609,      0.2832,     -0.0786,      0.5391,     -0.2793,      0.0142,      0.1523,      0.2080,     -0.2051,      0.3633,     -0.1816,     -0.0762],
        [     0.0000,     -0.2012,      0.5078,     -0.0457,      0.1406,      0.2695,     -0.0913,      0.6758,     -0.2812,      0.1523,     -0.2490,      0.1309,      0.0315,     -0.0330,     -0.5430],
        [     0.0000,      0.4238,     -0.0364,     -0.1680,      0.1855,     -0.0898,      0.2344,     -0.7344,      0.0737,     -0.5117,     -0.3789,     -0.2285,     -0.3086,     -0.5391,      0.2754],
        [     0.0000,     -0.4707,     -0.2930,     -0.1396,      0.0332,      0.2949,     -0.2656,      0.2490,     -0.1836,     -0.0850,     -0.3301,      0.4492,     -0.0859,     -0.4980,     -0.0786],
        [     0.0000,     -0.0986,     -0.1641,     -0.1582,     -0.1045,      0.3633,     -0.0294,     -0.0669,      0.2832,      0.3555,     -0.1416,      0.5742,     -0.0221,      0.1816,     -0.2422],
        [     0.0000,     -0.2432,     -0.1172,      0.0928,     -0.9102,      0.2656,      0.0359,      0.1309,      0.1016,     -0.2080,     -0.3984,      0.1089,      0.1914,      0.1328,      0.0674]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4595],
        [0.3042],
        [0.2468],
        [0.1864],
        [0.1654],
        [0.1444],
        [0.1283],
        [0.1047],
        [0.0988],
        [0.0873],
        [0.0801],
        [0.0739],
        [0.0696],
        [0.0638]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4785, 0.5234, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3164, 0.3066, 0.3789, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2539, 0.2148, 0.3105, 0.2197, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1729, 0.1338, 0.1924, 0.3203, 0.1807, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1465, 0.1104, 0.2676, 0.2148, 0.1172, 0.1436, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1357, 0.0913, 0.1680, 0.1177, 0.1777, 0.1963, 0.1133, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1099, 0.0728, 0.1729, 0.1060, 0.1143, 0.0659, 0.2305, 0.1279, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1035, 0.1040, 0.1245, 0.1348, 0.0947, 0.1128, 0.1123, 0.1206, 0.0928, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0894, 0.1040, 0.1504, 0.1260, 0.0864, 0.0693, 0.0723, 0.1230, 0.1094, 0.0698, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0688, 0.0732, 0.1069, 0.0923, 0.0869, 0.0674, 0.0991, 0.1040, 0.1104, 0.0879, 0.1025, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0713, 0.0732, 0.1079, 0.0972, 0.0601, 0.0957, 0.0588, 0.0986, 0.1094, 0.1035, 0.0554, 0.0688, 0.0000, 0.0000, 0.0000],
        [0.0732, 0.0654, 0.1191, 0.1108, 0.0400, 0.0369, 0.0767, 0.1089, 0.0679, 0.1006, 0.0718, 0.0654, 0.0635, 0.0000, 0.0000],
        [0.0603, 0.0693, 0.0503, 0.0796, 0.0664, 0.0593, 0.0791, 0.1045, 0.0464, 0.0757, 0.0767, 0.0942, 0.0640, 0.0742, 0.0000],
        [0.0684, 0.0598, 0.0708, 0.0791, 0.0928, 0.0422, 0.0461, 0.0723, 0.0879, 0.0503, 0.0708, 0.0640, 0.0747, 0.0688, 0.0527]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0061,  0.0020,  0.0109,  ...,  0.0143,  0.0216, -0.0359],
        [-0.0010, -0.0140, -0.0240,  ...,  0.0417,  0.0213, -0.0358],
        [-0.0209,  0.0007, -0.0082,  ...,  0.0219, -0.0012,  0.0213],
        ...,
        [-0.0109,  0.0133,  0.0082,  ...,  0.0052,  0.0034,  0.0337],
        [-0.0018,  0.0015,  0.0196,  ..., -0.0129,  0.0145, -0.0195],
        [-0.0256,  0.0280, -0.0197,  ..., -0.0276, -0.0158,  0.0362]], device='cuda:0', requires_grad=True)
K: tensor([ 0.8359, -0.4023, -0.2715, -0.0923, -0.0825, -0.4805,  0.2852, -0.3438, -0.2070, -0.1465,  0.0547, -0.3887, -0.3086, -0.0195,  0.5859, -0.6719,  1.1250,  0.0177, -0.0088,  0.1064,  0.9922, -0.6953,  0.2910,  0.4961,  0.1011, -0.6602, -0.9531,  0.6016,  0.3965,  0.1963,  0.0540, -0.1660,
        -1.4688,  0.1089,  0.0354, -0.0322,  0.5859, -0.5391, -0.3125,  0.0032, -0.2695,  0.6875,  0.3574,  0.0603,  0.5312,  0.0869,  0.0564,  0.4902, -0.1240, -1.3516, -0.1836,  0.6289,  0.1021, -0.6055,  0.4473,  0.4277,  0.3477, -0.3652, -0.8438, -1.1094,  0.7188, -0.5469, -0.2715,  1.0781],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0262,  0.0033,  0.0161,  ..., -0.0065,  0.0099,  0.0299],
        [-0.0164, -0.0288,  0.0089,  ..., -0.0047,  0.0037, -0.0067],
        [-0.0090, -0.0237, -0.0113,  ..., -0.0409, -0.0367,  0.0208],
        ...,
        [ 0.0149,  0.0127, -0.0069,  ..., -0.0105,  0.0081, -0.0271],
        [-0.0030,  0.0059, -0.0030,  ...,  0.0395,  0.0078, -0.0548],
        [-0.0076, -0.0163,  0.0004,  ...,  0.0129,  0.0030,  0.0073]], device='cuda:0', requires_grad=True)
Q: tensor([-0.4492,  0.0483,  0.0513,  0.2656,  0.0400, -0.0913, -0.1011, -0.6797, -0.3926, -0.1436,  0.1680,  0.0649,  0.0586,  0.2373,  0.5273,  0.5547, -0.2520, -1.2344, -1.2500, -0.0291,  0.1387,  0.6602, -0.1895, -0.3301,  0.5859,  0.4688,  0.5156,  0.6250,  0.3809,  0.1270,  0.0806,  0.6719,
         0.0742, -0.0781, -0.1807,  0.0972,  0.6406, -0.2354, -0.0593, -0.2500,  0.0471,  0.1680, -0.3574, -0.5859, -0.7969,  0.4863, -0.2441, -0.1992, -0.6289, -0.3320, -0.1914, -0.5625, -0.1602,  0.5117,  0.2344,  0.1963, -0.6406,  0.3613,  0.5391, -0.0757, -0.2002,  0.5234,  0.1699,  0.5000],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0869,  0.5469, -0.0354, -0.0254, -0.1475, -0.6367,  0.3105, -0.1426, -0.0059, -0.1953,  0.1602, -0.3926, -0.0238,  0.2178],
        [ 0.0000, -0.0334,  0.1797,  0.2715, -0.1035, -0.1436,  0.3086,  0.1777,  0.1807, -0.1514, -0.0972, -0.0272, -0.4062, -0.0483, -0.0811],
        [ 0.0000, -0.1699,  0.1982, -0.1465,  0.2832, -0.5547,  0.3242,  0.0972, -0.0889, -0.2637, -0.1245, -0.2471, -0.5469, -0.5469, -0.1152],
        [ 0.0000, -0.2598,  0.1055,  0.6133,  0.0442, -0.4375, -0.0449, -0.0767, -0.0698,  0.2969,  0.0776, -0.0084, -0.1963, -0.2910,  0.3828],
        [ 0.0000, -0.2852,  0.5977,  0.3828, -0.2246, -0.0189,  0.1387, -0.1104,  0.3945,  0.4336, -0.0796,  0.1484, -0.5352, -0.0908,  0.6445],
        [ 0.0000, -0.4004,  0.2100, -0.1436,  0.2676,  0.3672, -0.1816,  0.0107,  0.4453,  0.2871,  0.1865,  0.2949,  0.0962, -0.1846,  0.4883],
        [ 0.0000, -0.4102,  0.4531, -0.0356,  0.0393, -0.5156,  0.7383,  0.1543, -0.1064, -0.4082, -0.3750, -0.1797, -0.0977, -0.1582,  0.3203],
        [ 0.0000,  0.0032,  0.1865,  0.2617, -0.0889,  0.0854,  0.0796,  0.1533, -0.1084,  0.3945,  0.4375,  0.1318, -0.0688,  0.0815,  0.1924],
        [ 0.0000,  0.1514,  0.5156,  0.3398, -0.0330, -0.2578, -0.2139,  0.3184,  0.1982, -0.2490,  0.3281,  0.2285, -0.6133, -0.3066, -0.1060],
        [ 0.0000,  0.0635,  0.4395,  0.2910,  0.2324, -0.0255,  0.3652,  0.4102,  0.4688,  0.2451,  0.3984,  0.2471,  0.1147,  0.1699,  0.1611],
        [ 0.0000,  0.0320,  0.4160,  0.3125, -0.1699,  0.2969, -0.1904,  0.3262,  0.4316,  0.3730, -0.2520, -0.0364, -0.0439,  0.4102,  0.2656],
        [ 0.0000, -0.1123,  0.4883,  0.4160, -0.6016, -0.6875,  0.0493,  0.4004, -0.0781,  0.3184, -0.0204, -0.1104, -0.1416,  0.4082,  0.4160],
        [ 0.0000,  0.1416, -0.1807,  0.2754,  0.0986, -0.0183,  0.2695,  0.5508, -0.2637,  0.2295,  0.2393,  0.4434,  0.0576,  0.2051, -0.1279],
        [ 0.0000, -0.1338,  0.0364,  0.1445,  0.3066, -0.4785, -0.3887,  0.0549,  0.2520, -0.3066,  0.0381, -0.0659,  0.0884,  0.0093, -0.2598]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5062],
        [0.3322],
        [0.2430],
        [0.1873],
        [0.1668],
        [0.1308],
        [0.1248],
        [0.1034],
        [0.0949],
        [0.0859],
        [0.0819],
        [0.0747],
        [0.0673],
        [0.0654]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3750, 0.6250, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3496, 0.2637, 0.3887, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2637, 0.1758, 0.2949, 0.2637, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2295, 0.2891, 0.2041, 0.1592, 0.1187, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2002, 0.1226, 0.1885, 0.2012, 0.1650, 0.1230, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1572, 0.1357, 0.1416, 0.1475, 0.0908, 0.1377, 0.1885, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1270, 0.1875, 0.1128, 0.1338, 0.0688, 0.1592, 0.1143, 0.0967, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1196, 0.1030, 0.0981, 0.1689, 0.0640, 0.0786, 0.0981, 0.1465, 0.1235, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1035, 0.1943, 0.0796, 0.1338, 0.0669, 0.0942, 0.0544, 0.1309, 0.0693, 0.0718, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0894, 0.1182, 0.0654, 0.0986, 0.0884, 0.0613, 0.0669, 0.0684, 0.0654, 0.1123, 0.1650, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0825, 0.1377, 0.0693, 0.1001, 0.0723, 0.0801, 0.0669, 0.1104, 0.0635, 0.0654, 0.1030, 0.0486, 0.0000, 0.0000, 0.0000],
        [0.0625, 0.0796, 0.0588, 0.1006, 0.0486, 0.0693, 0.0454, 0.0767, 0.0967, 0.0669, 0.1128, 0.1177, 0.0640, 0.0000, 0.0000],
        [0.0579, 0.0457, 0.0645, 0.0840, 0.0654, 0.0684, 0.0583, 0.0698, 0.0820, 0.0820, 0.0698, 0.0806, 0.1011, 0.0708, 0.0000],
        [0.0708, 0.0649, 0.0659, 0.0815, 0.0625, 0.0684, 0.0483, 0.0796, 0.0620, 0.0713, 0.0884, 0.0503, 0.0530, 0.0613, 0.0708]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0213,  0.0214, -0.0278,  ...,  0.0198,  0.0063,  0.0252],
        [-0.0008,  0.0258,  0.0013,  ..., -0.0287,  0.0119, -0.0243],
        [ 0.0194,  0.0150, -0.0239,  ..., -0.0022, -0.0218,  0.0325],
        ...,
        [-0.0046,  0.0217, -0.0099,  ...,  0.0113, -0.0312,  0.0286],
        [-0.0060, -0.0030,  0.0327,  ..., -0.0139,  0.0215,  0.0231],
        [-0.0150,  0.0077, -0.0203,  ...,  0.0061,  0.0084, -0.0233]], device='cuda:0', requires_grad=True)
K: tensor([ 0.5352, -0.5547,  0.5391,  0.7852,  0.4473, -0.0398, -0.2695,  0.2598,  0.3984, -0.0688,  0.6953,  0.5703,  0.5742,  0.1953,  0.1699,  0.6875, -0.0864,  0.5000, -0.4863,  0.0281, -1.3594,  0.4336,  0.3105,  0.5469,  0.3594,  0.2314, -0.2852,  1.2734,  0.3730,  0.6797, -1.2031,  1.2422,
         0.9062,  0.8633, -0.0124, -0.2344,  0.4941,  0.7930, -0.6406,  0.7578,  0.3164,  0.9219,  0.1455,  0.5312, -0.5820,  0.5977,  0.0283, -1.3359, -0.1226, -0.2715, -0.0659, -0.1963,  0.1270,  0.5977,  1.0625, -0.3418,  0.2695, -0.2695, -1.4297, -0.5312,  1.0781, -0.0476,  0.5273, -0.4180],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0074, -0.0076,  0.0297,  ...,  0.0363, -0.0050,  0.0015],
        [ 0.0159, -0.0133, -0.0068,  ...,  0.0136,  0.0025, -0.0142],
        [ 0.0087, -0.0060, -0.0323,  ...,  0.0202,  0.0171,  0.0576],
        ...,
        [-0.0031, -0.0075, -0.0081,  ..., -0.0131,  0.0057,  0.0095],
        [-0.0301,  0.0184, -0.0087,  ...,  0.0340,  0.0153,  0.0256],
        [ 0.0131, -0.0092, -0.0059,  ..., -0.0167,  0.0179,  0.0370]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.0304, -0.7812, -1.1953, -0.4414,  0.6367,  0.1885, -0.5508,  0.4316,  0.3750,  0.9531, -0.6914, -0.2158, -0.1172,  0.1865,  0.4355,  0.7930,  0.0275,  0.3770,  0.3438,  0.7852, -0.4453, -0.7344, -0.5938, -0.3867,  0.4570, -0.1138, -0.4219, -0.3555, -0.2207,  0.2119, -0.4961, -0.0571,
         0.4668,  0.2871,  0.8047, -0.4375,  0.3711, -0.1270,  0.0105, -0.3574, -0.5039, -0.2354, -0.2285,  0.2656,  0.3652, -0.4297, -0.8008, -0.3242, -0.1367, -0.0588, -0.1895, -0.6094, -0.3535,  0.2891, -1.2109,  1.1562,  0.1270,  0.1387, -0.7227,  0.0830, -0.1035,  0.4531,  0.1357,  0.3789],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.5156,     -0.0928,      0.3516,      0.1572,     -0.0579,     -0.1572,     -0.3086,      0.0938,      0.0698,      0.1328,      0.3672,     -0.5898,      0.0884,      0.5195],
        [     0.0000,     -0.2832,      0.1074,      0.0771,     -0.4102,     -0.0645,     -0.2520,     -0.3008,     -0.2441,     -0.2227,      0.1689,     -0.3027,      0.0388,     -0.2246,     -0.1748],
        [     0.0000,     -0.4043,      0.1108,     -0.0001,     -0.1040,     -0.2070,     -0.3418,      0.1230,     -0.2930,      0.4199,      0.7812,      0.2520,      0.2539,     -0.5000,      0.4824],
        [     0.0000,      0.2334,     -0.1162,     -0.3652,     -0.6562,     -0.1523,     -0.7070,      0.0339,      0.0806,     -0.2285,      0.0099,     -0.0825,     -0.5352,     -0.3730,      0.2793],
        [     0.0000,     -0.4883,     -0.0576,      0.0038,     -0.1934,     -0.4863,     -0.3574,     -0.1143,     -0.0256,     -0.1060,      0.3887,     -0.0079,     -0.0654,     -0.1816,     -0.4414],
        [     0.0000,     -0.1465,     -0.1069,     -0.0698,     -0.5547,     -0.1328,      0.1807,     -0.3164,      0.1396,      0.3555,     -0.2598,     -0.4023,     -0.0742,      0.0474,     -0.1396],
        [     0.0000,      0.3906,     -0.1162,      0.0559,     -0.6055,      0.2275,     -0.1016,     -0.2695,     -0.0618,      0.0258,      0.3887,      0.0522,      0.4453,     -0.1157,      0.2334],
        [     0.0000,     -0.1465,     -0.1963,      0.3457,     -0.6250,     -0.4180,     -0.1953,      0.2021,      0.0334,      0.2119,     -0.0493,      0.5625,      0.2061,     -0.3574,      0.2480],
        [     0.0000,      0.6289,     -0.2637,      0.2578,     -0.4414,     -0.0947,     -0.6445,      0.2363,     -0.3984,     -0.3652,      0.7227,     -0.1826,     -0.2080,     -0.1602,      0.4160],
        [     0.0000,      0.2773,     -0.3125,      0.0962,     -0.0095,     -0.3789,     -0.2871,     -0.2695,     -0.3145,      0.2285,      0.6133,      0.0149,     -0.1953,     -0.2256,      0.5078],
        [     0.0000,      0.5156,     -0.1777,      0.1904,     -0.1367,     -0.0295,     -0.2090,      0.2891,     -0.2617,     -0.2334,      0.2188,     -0.5312,     -0.2832,      0.1904,      0.1060],
        [     0.0000,      0.2441,     -0.0608,      0.4746,     -0.2520,      0.1060,     -0.3223,      0.2051,      0.4355,      0.0698,      0.5898,      0.6289,      0.0240,      0.3164,      0.0535],
        [     0.0000,     -0.2344,      0.1064,      0.3730,      0.1279,      0.1670,      0.0101,      0.1914,      0.3496,      0.3516,      0.1934,      0.3359,      0.5586,      0.2021,      0.4414],
        [     0.0000,     -0.0850,     -0.0688,      0.1436,     -0.1260,     -0.0354,     -0.3828,      0.1191,     -0.1348,      0.0081,      0.2207,     -0.3418,     -0.2910,     -0.1445,      0.0010]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4845],
        [0.3328],
        [0.2421],
        [0.2079],
        [0.1547],
        [0.1433],
        [0.1363],
        [0.1132],
        [0.0968],
        [0.0863],
        [0.0816],
        [0.0701],
        [0.0626],
        [0.0629]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5742, 0.4238, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3555, 0.2676, 0.3770, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2773, 0.2930, 0.2412, 0.1875, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1729, 0.2324, 0.2207, 0.1738, 0.2002, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1650, 0.1787, 0.1787, 0.1455, 0.1738, 0.1582, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1113, 0.1211, 0.1240, 0.1157, 0.1533, 0.1904, 0.1836, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1167, 0.1084, 0.1060, 0.1245, 0.1191, 0.1445, 0.1514, 0.1289, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0962, 0.1289, 0.1289, 0.0791, 0.1035, 0.1318, 0.1426, 0.1069, 0.0820, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0952, 0.1060, 0.0981, 0.0845, 0.1152, 0.1011, 0.1025, 0.0977, 0.0933, 0.1069, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0771, 0.0981, 0.1201, 0.0654, 0.1050, 0.1104, 0.1104, 0.0723, 0.0510, 0.1152, 0.0747, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0493, 0.0688, 0.0938, 0.0669, 0.1152, 0.1094, 0.1069, 0.0757, 0.0483, 0.0645, 0.0894, 0.1118, 0.0000, 0.0000, 0.0000],
        [0.0630, 0.0840, 0.0669, 0.0613, 0.0698, 0.0830, 0.0962, 0.0776, 0.0474, 0.0845, 0.0571, 0.0903, 0.1177, 0.0000, 0.0000],
        [0.0605, 0.0527, 0.0737, 0.0776, 0.0674, 0.0623, 0.0830, 0.0776, 0.0542, 0.0645, 0.0703, 0.0845, 0.0801, 0.0913, 0.0000],
        [0.0488, 0.0942, 0.0806, 0.0579, 0.0771, 0.0732, 0.0898, 0.0559, 0.0381, 0.0791, 0.0569, 0.0669, 0.0625, 0.0549, 0.0635]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0038, -0.0247, -0.0206,  ..., -0.0166, -0.0154,  0.0117],
        [ 0.0064, -0.0194, -0.0019,  ..., -0.0049,  0.0158, -0.0147],
        [-0.0188,  0.0184, -0.0083,  ..., -0.0028,  0.0211, -0.0168],
        ...,
        [ 0.0280, -0.0083, -0.0496,  ...,  0.0288,  0.0161,  0.0031],
        [ 0.0380, -0.0234, -0.0251,  ..., -0.0075, -0.0289,  0.0041],
        [ 0.0172, -0.0034,  0.0271,  ..., -0.0180,  0.0201,  0.0162]], device='cuda:0', requires_grad=True)
K: tensor([ 0.8984,  0.8125,  0.7383, -0.5312,  0.5234, -1.0469, -0.8125,  0.2930,  0.7891,  0.1709,  0.7852, -0.3008, -0.3320, -0.2539,  0.2393,  0.7461, -0.6367,  0.6992, -0.5352, -0.2090,  0.8086,  1.4375, -0.5625, -0.7305, -0.1826,  1.7266,  0.0688,  0.0072,  0.8828,  1.0859,  0.1562, -0.2168,
         0.2910, -0.8477,  0.1943,  0.5039, -0.4980, -0.5156, -0.8281,  0.3633,  0.1719, -1.0469,  1.2266,  0.2598, -0.0640, -0.0019,  1.0625, -0.0308,  0.3262, -0.5234, -0.0033, -0.7891,  1.1719,  0.2197, -0.0918,  0.0776,  0.1045, -0.2109,  1.2109, -0.0752, -0.8320, -0.5000,  0.0403,  0.0342],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0044,  0.0043, -0.0036,  ...,  0.0145, -0.0150, -0.0259],
        [ 0.0041,  0.0029, -0.0085,  ..., -0.0132,  0.0063,  0.0322],
        [-0.0137,  0.0028, -0.0086,  ...,  0.0372,  0.0084,  0.0017],
        ...,
        [ 0.0240,  0.0140,  0.0014,  ...,  0.0039,  0.0067,  0.0220],
        [ 0.0207,  0.0312, -0.0281,  ...,  0.0353, -0.0583,  0.0059],
        [ 0.0035,  0.0231,  0.0086,  ..., -0.0211,  0.0211,  0.0032]], device='cuda:0', requires_grad=True)
Q: tensor([-0.5742,  0.8633, -0.8242,  0.0718, -0.0337,  0.0315,  0.1943, -0.0522,  0.9727, -0.5898, -0.0640, -0.9961, -0.0393, -1.4375,  0.1562,  0.0913, -0.1445,  0.8633,  0.0190,  0.0688, -0.6367,  0.7383, -0.2373, -0.1934, -0.5273,  0.0037,  0.5195, -0.1807,  0.1387, -0.4336,  0.6914,  0.0435,
         0.6367, -0.3164,  0.5117,  0.9492, -0.1602, -0.3711,  0.2158, -0.4883, -0.3887, -0.4082, -0.4570,  0.3672, -0.8242, -0.2217, -0.7773,  0.2949, -0.7109, -1.0391, -0.4141,  0.1060,  0.1289, -0.3535,  0.2471, -0.7188,  0.3496, -1.0625, -0.1445,  0.2285,  0.6953, -0.5664, -0.3770, -1.0469],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.3066, -0.1963, -0.4922, -0.3613, -0.1250, -0.0996, -0.1758, -0.4570, -0.1680, -0.2949, -0.0128, -0.1445, -0.0996, -0.2051],
        [ 0.0000, -0.2793,  0.0613, -0.1465,  0.1182,  0.2402,  0.0364, -0.1025, -0.1108, -0.1982, -0.0786,  0.0957,  0.0640,  0.2930, -0.0138],
        [ 0.0000,  0.0559, -0.1396, -0.3906, -0.1436, -0.0801,  0.2080, -0.0388, -0.4375, -0.1230, -0.1309,  0.0342,  0.2559,  0.1553, -0.1934],
        [ 0.0000,  0.2949,  0.2471,  0.0081,  0.1475,  0.1904,  0.2715,  0.1768, -0.1484,  0.1895, -0.0894, -0.0713,  0.1719,  0.0488, -0.0286],
        [ 0.0000,  0.0801,  0.0776, -0.1245,  0.0498, -0.0457, -0.0698,  0.0620, -0.3203,  0.0776, -0.4473,  0.1338,  0.2285, -0.0835, -0.1924],
        [ 0.0000,  0.0864,  0.1084,  0.0422,  0.3242,  0.5391,  0.5000,  0.3262, -0.1748,  0.2832,  0.3789,  0.1895,  0.6016,  0.2109,  0.3926],
        [ 0.0000, -0.0747, -0.0952,  0.0659,  0.0198,  0.2139,  0.2559,  0.1021, -0.2119,  0.3848, -0.2021,  0.2949,  0.5469,  0.2178, -0.1035],
        [ 0.0000,  0.2891,  0.2891, -0.1982,  0.0732,  0.3125,  0.3926,  0.1030, -0.1611,  0.0630,  0.0240,  0.0352,  0.2461,  0.3457,  0.0732],
        [ 0.0000,  0.1079,  0.0303, -0.1216,  0.1904,  0.0588,  0.0767,  0.0269, -0.0215,  0.1152, -0.2656, -0.0708,  0.1279,  0.0742, -0.3398],
        [ 0.0000,  0.2432,  0.4414, -0.1621,  0.3066,  0.3574,  0.3594, -0.0664, -0.4141,  0.4004, -0.0298,  0.1396,  0.3770,  0.0679,  0.3359],
        [ 0.0000,  0.3359,  0.6445,  0.3047,  0.8477,  0.7969,  0.7734,  0.4277, -0.0217,  0.2676,  0.5977,  0.8164,  0.8438,  0.3164,  0.1963],
        [ 0.0000,  0.2891,  0.0596, -0.0305,  0.1025,  0.2754,  0.4199,  0.2080, -0.2852,  0.2930, -0.0986,  0.3594,  0.6211,  0.2852,  0.0334],
        [ 0.0000, -0.1377,  0.1982,  0.2480,  0.1084,  0.0262,  0.3145,  0.2500, -0.1123,  0.0659,  0.1475,  0.3301,  0.2793,  0.4102,  0.0342],
        [ 0.0000,  0.6562,  0.4980,  0.1699,  0.4551,  0.4004,  0.6094,  0.1318, -0.2520,  0.4824,  0.1514,  0.3164,  0.2471,  0.1147,  0.2617]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5076],
        [0.3613],
        [0.2503],
        [0.1868],
        [0.1614],
        [0.1375],
        [0.1200],
        [0.1117],
        [0.0992],
        [0.0847],
        [0.0782],
        [0.0761],
        [0.0783],
        [0.0631]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5664, 0.4316, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3496, 0.2520, 0.3984, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2715, 0.1631, 0.2129, 0.3516, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2305, 0.1289, 0.2129, 0.2773, 0.1514, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2148, 0.0820, 0.2734, 0.1387, 0.1465, 0.1455, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1396, 0.0703, 0.2246, 0.1235, 0.1396, 0.1426, 0.1602, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1279, 0.0664, 0.1816, 0.0840, 0.1338, 0.1230, 0.1504, 0.1328, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1260, 0.0581, 0.1680, 0.0762, 0.1030, 0.0776, 0.1367, 0.1348, 0.1201, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1475, 0.0403, 0.1123, 0.1108, 0.0640, 0.0811, 0.1104, 0.1260, 0.1157, 0.0908, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1201, 0.0400, 0.1357, 0.0576, 0.0957, 0.0728, 0.1025, 0.0854, 0.1157, 0.1030, 0.0713, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1108, 0.0471, 0.1128, 0.0571, 0.0811, 0.0723, 0.0874, 0.0864, 0.1074, 0.0913, 0.0649, 0.0815, 0.0000, 0.0000, 0.0000],
        [0.1016, 0.0332, 0.1030, 0.0554, 0.0801, 0.0942, 0.0703, 0.0664, 0.0869, 0.0781, 0.0840, 0.0728, 0.0737, 0.0000, 0.0000],
        [0.0767, 0.0334, 0.1279, 0.0542, 0.0688, 0.0674, 0.0747, 0.0840, 0.0752, 0.0618, 0.0635, 0.0520, 0.0674, 0.0933, 0.0000],
        [0.0879, 0.0320, 0.0962, 0.0684, 0.0369, 0.0444, 0.0659, 0.0679, 0.1025, 0.0547, 0.0718, 0.0889, 0.0562, 0.0757, 0.0510]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0214,  0.0148,  0.0067,  ..., -0.0153,  0.0061, -0.0153],
        [-0.0127,  0.0043, -0.0124,  ..., -0.0243,  0.0159,  0.0125],
        [ 0.0271, -0.0019,  0.0092,  ..., -0.0243,  0.0426, -0.0203],
        ...,
        [ 0.0159, -0.0045,  0.0035,  ..., -0.0042,  0.0164,  0.0218],
        [ 0.0242,  0.0130, -0.0035,  ..., -0.0474, -0.0181, -0.0262],
        [-0.0118,  0.0108,  0.0078,  ..., -0.0122,  0.0434,  0.0329]], device='cuda:0', requires_grad=True)
K: tensor([-0.6914, -0.5586, -0.4023, -0.5938,  0.4062, -0.6836,  0.1060, -0.3418, -0.2812, -0.0762, -0.0708,  0.5781,  0.6016,  0.3203,  0.7969,  0.3066, -0.9102,  0.7031, -0.2598, -0.0369, -0.2910,  0.6484,  0.0742, -0.1406,  0.8984,  0.3809,  0.0874,  0.1689, -0.2344,  0.9688,  0.0084,  0.2012,
         0.2363, -0.2852,  0.8750, -0.1875, -0.5938, -0.0752,  0.6445, -1.0547, -0.5078, -0.0276,  0.3496, -0.3926, -0.0752, -0.3594, -0.2061,  0.7188,  1.0859,  0.3223, -0.2617, -0.2139, -0.1006, -0.6641,  0.5469,  0.3789, -0.3145,  1.0547,  1.0859, -0.2715,  0.5742,  0.0654, -0.5352,  0.4102],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[    -0.0194,     -0.0059,     -0.0208,  ...,     -0.0300,     -0.0217,     -0.0001],
        [     0.0001,      0.0181,     -0.0160,  ...,     -0.0008,      0.0110,      0.0076],
        [     0.0256,     -0.0207,      0.0234,  ...,      0.0223,      0.0072,     -0.0288],
        ...,
        [     0.0188,     -0.0241,      0.0206,  ...,     -0.0018,      0.0122,     -0.0027],
        [    -0.0043,     -0.0154,     -0.0266,  ...,      0.0159,      0.0257,      0.0041],
        [     0.0173,     -0.0043,     -0.0139,  ...,      0.0187,      0.0243,      0.0095]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.0884, -0.1465,  0.2793,  0.4551,  0.2490, -0.1318, -0.8828, -0.0554,  1.1172,  1.2656,  0.1689,  0.2832, -0.1895, -0.0417, -0.2383, -0.7344, -1.0781, -0.0732, -0.0244, -0.6289, -0.1221, -0.8828, -0.2969,  0.6055,  0.5195,  0.0254, -0.1934,  0.1060,  0.8359,  0.4355,  1.1875, -0.1807,
        -0.5859,  0.3203,  0.5000,  0.8555,  0.0820,  0.0518, -0.3809,  0.6562,  0.2598, -1.2656, -0.5781,  0.8398, -0.1719,  0.8633, -0.1729,  0.2930, -0.7891, -0.3535, -0.2949, -0.0109, -0.4629, -1.3828,  0.5781, -1.2109,  0.4844, -1.0469, -0.4941, -0.4004, -1.5078,  0.0046,  0.5742,  0.6406],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -0.2734,      0.2773,     -0.3906,      0.2344,      0.2197,      0.2139,      0.0322,      0.1465,      0.2334,      0.1289,     -0.1025,      0.2334,      0.4785,     -0.0938],
        [     0.0000,     -0.3281,      0.1348,      0.1729,     -0.3477,      0.0393,      0.2617,      0.3262,      0.0481,     -0.2354,      0.0221,      0.1128,      0.1484,      0.2129,      0.0364],
        [     0.0000,     -0.5156,     -0.2441,      0.2559,     -0.7383,     -0.3262,     -0.2217,     -0.0596,      0.1689,     -0.1133,     -0.2793,      0.1318,      0.0098,     -0.0820,     -0.2139],
        [     0.0000,     -0.5820,     -0.0796,      0.1816,     -0.4199,     -0.2354,     -0.1689,     -0.1611,     -0.2148,     -0.3145,     -0.0859,     -0.1924,     -0.4023,     -0.0938,     -0.3926],
        [     0.0000,     -0.9648,      0.2451,     -0.4395,     -0.3848,     -0.3906,      0.0737,      0.2061,     -0.1040,     -0.2969,     -0.0535,     -0.0337,     -0.0684,      0.0566,     -0.4160],
        [     0.0000,     -0.6836,      0.4766,     -0.1226,     -0.0010,      0.0248,      0.1367,     -0.0066,      0.4512,      0.2559,      0.0289,      0.0260,      0.3184,      0.3906,      0.0540],
        [     0.0000,     -0.6562,      0.3516,     -0.4219,      0.0410,     -0.0393,      0.1582,      0.0391,      0.1963,     -0.0952,      0.1338,     -0.1270,      0.0391,      0.4648,     -0.3574],
        [     0.0000,     -0.7734,      0.2852,     -0.5000,     -0.2021,     -0.4805,      0.0850,      0.0654,     -0.0491,     -0.0454,     -0.2080,     -0.2207,     -0.3867,      0.1357,     -0.4551],
        [     0.0000,     -1.2969,     -0.2715,     -0.2852,     -0.8320,     -0.5977,     -0.2871,     -0.1543,     -0.2412,     -0.4844,     -0.3457,     -0.2168,     -0.5586,      0.0947,     -0.6328],
        [     0.0000,     -1.1016,      0.1240,     -0.7344,     -0.2305,     -0.5039,     -0.1621,     -0.3398,     -0.0408,     -0.1533,     -0.5273,     -0.3223,     -0.2334,      0.0569,     -0.7695],
        [     0.0000,     -0.8555,      0.0165,     -0.6602,     -0.3145,     -0.4258,     -0.2354,     -0.2471,     -0.0310,     -0.1963,     -0.5391,     -0.3066,     -0.3027,      0.2617,     -0.5156],
        [     0.0000,     -1.1172,      0.0153,     -0.6055,     -0.2412,     -0.0762,     -0.3711,     -0.4258,     -0.1543,     -0.2617,     -0.1885,     -0.3379,     -0.3223,      0.1060,     -0.5586],
        [     0.0000,     -0.8281,      0.5156,     -0.3457,     -0.1040,     -0.1270,     -0.0234,      0.0918,     -0.0199,     -0.2119,     -0.1846,     -0.3867,     -0.1250,      0.1953,     -0.3145],
        [     0.0000,     -1.0078,      0.0908,     -0.2500,     -0.8672,     -0.6797,     -0.2852,     -0.2559,      0.1592,     -0.4688,     -0.2012,      0.0161,     -0.4473,     -0.1455,     -0.5430]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4933],
        [0.3203],
        [0.2589],
        [0.1938],
        [0.1761],
        [0.1409],
        [0.1304],
        [0.1069],
        [0.1012],
        [0.0909],
        [0.0831],
        [0.0801],
        [0.0775],
        [0.0674]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( timed:0.0001 ruining:0.0002 steady:0.0002TE:0.0002 poisoned:0.0002 Vegan:0.0002pas:0.0002Fs:0.0002)
Fs
------
		( ruining:0.0002 steady:0.0002TE:0.0002 poisoned:0.0002 Vegan:0.0002pas:0.0002Fs:0.0002 unfit:0.0002)
 unfit Jah Vegan Co Urs Brist whiskbernatorial Mitchellclamation Certified Scotia poisoned HUM deadlines
@ 1 train 11.0135 , allloss: 70.7948, dt: 1866.11ms, fracRes: 0.0062, norm(attn): 0.0332, norm(output): 0.0742, norm(x): 0.0736, norm(y): 0.9993, norm:48.1149, tok/sec: 70238.24, flops:73.72, batch-reuse:1
@ 2 train 10.9665 , allloss: 70.6438, dt: 1217.41ms, fracRes: 0.0062, norm(attn): 0.0330, norm(output): 0.0742, norm(x): 0.0736, norm(y): 0.9993, norm:48.0205, tok/sec: 107664.65, flops:113.00, batch-reuse:1
@ 3 train 10.8936 , allloss: 70.4386, dt: 1214.33ms, fracRes: 0.0062, norm(attn): 0.0332, norm(output): 0.0742, norm(x): 0.0738, norm(y): 0.9993, norm:48.5714, tok/sec: 107937.90, flops:113.28, batch-reuse:1
@ 4 train 10.8120 , allloss: 70.2393, dt: 1237.98ms, fracRes: 0.0062, norm(attn): 0.0334, norm(output): 0.0742, norm(x): 0.0741, norm(y): 0.9993, norm:49.7263, tok/sec: 105875.42, flops:111.12, batch-reuse:1
@ 5 train 10.7192 , allloss: 70.0425, dt: 1223.35ms, fracRes: 0.0062, norm(attn): 0.0349, norm(output): 0.0752, norm(x): 0.0746, norm(y): 0.9993, norm:52.0114, tok/sec: 107142.05, flops:112.45, batch-reuse:1
@ 6 train 10.6073 , allloss: 69.8174, dt: 1235.37ms, fracRes: 0.0063, norm(attn): 0.0354, norm(output): 0.0771, norm(x): 0.0754, norm(y): 0.9993, norm:56.1700, tok/sec: 106098.98, flops:111.35, batch-reuse:1
@ 7 train 10.5106 , allloss: 69.5606, dt: 1240.39ms, fracRes: 0.0063, norm(attn): 0.0369, norm(output): 0.0776, norm(x): 0.0764, norm(y): 0.9993, norm:60.7831, tok/sec: 105670.25, flops:110.90, batch-reuse:1
@ 8 train 10.4257 , allloss: 69.2200, dt: 1231.13ms, fracRes: 0.0063, norm(attn): 0.0388, norm(output): 0.0776, norm(x): 0.0776, norm(y): 0.9993, norm:65.8515, tok/sec: 106464.60, flops:111.74, batch-reuse:1
@ 9 train 10.3241 , allloss: 68.7244, dt: 1250.11ms, fracRes: 0.0063, norm(attn): 0.0396, norm(output): 0.0791, norm(x): 0.0788, norm(y): 0.9994, norm:70.9715, tok/sec: 104848.18, flops:110.04, batch-reuse:1
@ 10 train 10.2464 , allloss: 68.1022, dt: 1246.46ms, fracRes: 0.0064, norm(attn): 0.0405, norm(output): 0.0806, norm(x): 0.0801, norm(y): 0.9994, norm:75.5327, tok/sec: 105155.73, flops:110.36, batch-reuse:1
@ 11 train 10.2071 , allloss: 67.3742, dt: 1228.48ms, fracRes: 0.0064, norm(attn): 0.0427, norm(output): 0.0811, norm(x): 0.0815, norm(y): 0.9994, norm:79.3828, tok/sec: 106694.36, flops:111.98, batch-reuse:1
@ 12 train 10.1106 , allloss: 66.4372, dt: 1242.43ms, fracRes: 0.0064, norm(attn): 0.0432, norm(output): 0.0835, norm(x): 0.0828, norm(y): 0.9994, norm:82.8460, tok/sec: 105496.53, flops:110.72, batch-reuse:1
@ 13 train 10.0589 , allloss: 65.4258, dt: 1252.80ms, fracRes: 0.0064, norm(attn): 0.0442, norm(output): 0.0854, norm(x): 0.0842, norm(y): 0.9994, norm:85.7935, tok/sec: 104623.58, flops:109.80, batch-reuse:1
@ 14 train 9.9989 , allloss: 64.2721, dt: 1246.10ms, fracRes: 0.0064, norm(attn): 0.0457, norm(output): 0.0864, norm(x): 0.0856, norm(y): 0.9995, norm:88.2609, tok/sec: 105185.82, flops:110.39, batch-reuse:1
@ 15 train 9.9522 , allloss: 62.9840, dt: 1260.83ms, fracRes: 0.0065, norm(attn): 0.0466, norm(output): 0.0864, norm(x): 0.0869, norm(y): 0.9995, norm:90.2855, tok/sec: 103956.98, flops:109.10, batch-reuse:1
@ 16 train 9.9042 , allloss: 61.5380, dt: 1219.63ms, fracRes: 0.0065, norm(attn): 0.0469, norm(output): 0.0884, norm(x): 0.0882, norm(y): 0.9995, norm:91.7532, tok/sec: 107468.36, flops:112.79, batch-reuse:1
@ 17 train 9.8696 , allloss: 59.9469, dt: 1245.27ms, fracRes: 0.0065, norm(attn): 0.0471, norm(output): 0.0908, norm(x): 0.0895, norm(y): 0.9995, norm:92.9747, tok/sec: 105256.07, flops:110.47, batch-reuse:1
@ 18 train 9.8383 , allloss: 58.1927, dt: 1220.67ms, fracRes: 0.0065, norm(attn): 0.0479, norm(output): 0.0928, norm(x): 0.0908, norm(y): 0.9995, norm:93.8410, tok/sec: 107376.87, flops:112.69, batch-reuse:1
@ 19 train 9.7785 , allloss: 56.2385, dt: 1230.88ms, fracRes: 0.0065, norm(attn): 0.0483, norm(output): 0.0933, norm(x): 0.0921, norm(y): 0.9995, norm:94.1022, tok/sec: 106486.15, flops:111.76, batch-reuse:1
@ 20 train 9.7402 , allloss: 54.1657, dt: 1238.94ms, fracRes: 0.0065, norm(attn): 0.0496, norm(output): 0.0942, norm(x): 0.0933, norm(y): 0.9996, norm:93.9525, tok/sec: 105793.34, flops:111.03, batch-reuse:1
@ 21 train 9.6956 , allloss: 52.0061, dt: 1217.09ms, fracRes: 0.0065, norm(attn): 0.0500, norm(output): 0.0942, norm(x): 0.0945, norm(y): 0.9996, norm:93.5691, tok/sec: 107692.91, flops:113.03, batch-reuse:1
@ 22 train 9.6890 , allloss: 49.8652, dt: 1242.63ms, fracRes: 0.0065, norm(attn): 0.0505, norm(output): 0.0962, norm(x): 0.0957, norm(y): 0.9996, norm:93.3127, tok/sec: 105479.49, flops:110.70, batch-reuse:1
@ 23 train 9.6932 , allloss: 47.7638, dt: 1252.43ms, fracRes: 0.0066, norm(attn): 0.0505, norm(output): 0.0967, norm(x): 0.0969, norm(y): 0.9996, norm:92.9507, tok/sec: 104653.82, flops:109.84, batch-reuse:1
@ 24 train 9.6705 , allloss: 45.7015, dt: 1238.87ms, fracRes: 0.0066, norm(attn): 0.0508, norm(output): 0.0991, norm(x): 0.0981, norm(y): 0.9996, norm:92.7138, tok/sec: 105799.24, flops:111.04, batch-reuse:1
@ 25 train 9.5729 , allloss: 43.6821, dt: 1238.22ms, fracRes: 0.0066, norm(attn): 0.0510, norm(output): 0.0996, norm(x): 0.0992, norm(y): 0.9996, norm:92.3986, tok/sec: 105854.79, flops:111.10, batch-reuse:1
@ 26 train 9.6160 , allloss: 42.0029, dt: 1239.33ms, fracRes: 0.0066, norm(attn): 0.0513, norm(output): 0.1011, norm(x): 0.1003, norm(y): 0.9996, norm:92.3489, tok/sec: 105760.77, flops:111.00, batch-reuse:1
@ 27 train 9.5979 , allloss: 40.4226, dt: 1229.65ms, fracRes: 0.0066, norm(attn): 0.0518, norm(output): 0.1021, norm(x): 0.1014, norm(y): 0.9996, norm:92.7172, tok/sec: 106592.83, flops:111.87, batch-reuse:1
@ 28 train 9.5688 , allloss: 39.0021, dt: 1255.25ms, fracRes: 0.0066, norm(attn): 0.0532, norm(output): 0.1021, norm(x): 0.1024, norm(y): 0.9996, norm:93.1326, tok/sec: 104419.38, flops:109.59, batch-reuse:1
@ 29 train 9.5707 , allloss: 37.8173, dt: 1270.57ms, fracRes: 0.0066, norm(attn): 0.0532, norm(output): 0.1035, norm(x): 0.1034, norm(y): 0.9996, norm:93.3412, tok/sec: 103159.67, flops:108.27, batch-reuse:1
@ 30 train 9.5258 , allloss: 36.7334, dt: 1242.15ms, fracRes: 0.0067, norm(attn): 0.0537, norm(output): 0.1064, norm(x): 0.1043, norm(y): 0.9996, norm:94.0429, tok/sec: 105519.86, flops:110.75, batch-reuse:1
@ 31 train 9.5482 , allloss: 35.8378, dt: 1240.79ms, fracRes: 0.0067, norm(attn): 0.0544, norm(output): 0.1074, norm(x): 0.1051, norm(y): 0.9997, norm:94.2207, tok/sec: 105636.34, flops:110.87, batch-reuse:1
@ 32 train 9.5142 , allloss: 34.9789, dt: 1241.02ms, fracRes: 0.0067, norm(attn): 0.0544, norm(output): 0.1074, norm(x): 0.1059, norm(y): 0.9997, norm:93.7544, tok/sec: 105616.05, flops:110.85, batch-reuse:1
@ 33 train 9.4644 , allloss: 34.1698, dt: 1258.41ms, fracRes: 0.0067, norm(attn): 0.0544, norm(output): 0.1074, norm(x): 0.1065, norm(y): 0.9997, norm:92.9725, tok/sec: 104156.56, flops:109.31, batch-reuse:1
@ 34 train 9.4709 , allloss: 33.5636, dt: 1249.73ms, fracRes: 0.0067, norm(attn): 0.0544, norm(output): 0.1089, norm(x): 0.1071, norm(y): 0.9997, norm:92.0961, tok/sec: 104880.51, flops:110.07, batch-reuse:1
@ 35 train 9.4548 , allloss: 32.9443, dt: 1235.36ms, fracRes: 0.0067, norm(attn): 0.0544, norm(output): 0.1089, norm(x): 0.1076, norm(y): 0.9997, norm:91.1494, tok/sec: 106100.48, flops:111.35, batch-reuse:1
@ 36 train 9.4431 , allloss: 32.3916, dt: 1231.26ms, fracRes: 0.0067, norm(attn): 0.0544, norm(output): 0.1089, norm(x): 0.1080, norm(y): 0.9996, norm:89.4968, tok/sec: 106453.57, flops:111.73, batch-reuse:1
@ 37 train 9.4376 , allloss: 31.8456, dt: 1222.51ms, fracRes: 0.0068, norm(attn): 0.0544, norm(output): 0.1094, norm(x): 0.1083, norm(y): 0.9996, norm:87.6851, tok/sec: 107215.58, flops:112.52, batch-reuse:1
@ 38 train 9.4008 , allloss: 31.2767, dt: 1249.27ms, fracRes: 0.0068, norm(attn): 0.0544, norm(output): 0.1099, norm(x): 0.1086, norm(y): 0.9996, norm:85.8765, tok/sec: 104919.04, flops:110.11, batch-reuse:1
@ 39 train 9.4166 , allloss: 30.7683, dt: 1237.17ms, fracRes: 0.0068, norm(attn): 0.0544, norm(output): 0.1099, norm(x): 0.1088, norm(y): 0.9996, norm:84.0311, tok/sec: 105944.67, flops:111.19, batch-reuse:1
@ 40 train 9.3694 , allloss: 30.2135, dt: 1233.11ms, fracRes: 0.0068, norm(attn): 0.0544, norm(output): 0.1099, norm(x): 0.1090, norm(y): 0.9996, norm:81.8349, tok/sec: 106293.99, flops:111.56, batch-reuse:1
@ 41 train 9.3559 , allloss: 29.7521, dt: 1251.86ms, fracRes: 0.0068, norm(attn): 0.0544, norm(output): 0.1099, norm(x): 0.1091, norm(y): 0.9996, norm:79.9342, tok/sec: 104701.81, flops:109.89, batch-reuse:1
@ 42 train 9.3459 , allloss: 29.3385, dt: 1256.52ms, fracRes: 0.0068, norm(attn): 0.0544, norm(output): 0.1099, norm(x): 0.1092, norm(y): 0.9996, norm:77.8057, tok/sec: 104313.60, flops:109.48, batch-reuse:1
@ 43 train 9.3540 , allloss: 28.9724, dt: 1242.15ms, fracRes: 0.0068, norm(attn): 0.0544, norm(output): 0.1094, norm(x): 0.1092, norm(y): 0.9996, norm:75.4619, tok/sec: 105520.14, flops:110.75, batch-reuse:1
@ 44 train 9.3458 , allloss: 28.6415, dt: 1252.08ms, fracRes: 0.0069, norm(attn): 0.0544, norm(output): 0.1099, norm(x): 0.1092, norm(y): 0.9996, norm:73.5905, tok/sec: 104683.51, flops:109.87, batch-reuse:1
@ 45 train 9.3117 , allloss: 28.3247, dt: 1266.89ms, fracRes: 0.0069, norm(attn): 0.0544, norm(output): 0.1094, norm(x): 0.1091, norm(y): 0.9996, norm:71.2645, tok/sec: 103459.49, flops:108.58, batch-reuse:1
@ 46 train 9.2749 , allloss: 28.0453, dt: 1239.56ms, fracRes: 0.0069, norm(attn): 0.0544, norm(output): 0.1094, norm(x): 0.1089, norm(y): 0.9996, norm:69.1367, tok/sec: 105741.04, flops:110.98, batch-reuse:1
@ 47 train 9.2469 , allloss: 27.8161, dt: 1235.40ms, fracRes: 0.0069, norm(attn): 0.0544, norm(output): 0.1094, norm(x): 0.1087, norm(y): 0.9995, norm:67.3001, tok/sec: 106096.59, flops:111.35, batch-reuse:1
@ 48 train 9.2254 , allloss: 27.7232, dt: 1249.87ms, fracRes: 0.0069, norm(attn): 0.0544, norm(output): 0.1089, norm(x): 0.1083, norm(y): 0.9995, norm:64.9827, tok/sec: 104868.44, flops:110.06, batch-reuse:1
@ 49 train 9.2234 , allloss: 27.7172, dt: 1264.78ms, fracRes: 0.0069, norm(attn): 0.0544, norm(output): 0.1089, norm(x): 0.1078, norm(y): 0.9995, norm:62.6708, tok/sec: 103632.31, flops:108.76, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3984, 0.6016, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2812, 0.2422, 0.4766, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1787, 0.2812, 0.2695, 0.2715, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1895, 0.1865, 0.2061, 0.2500, 0.1670, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1406, 0.2305, 0.1035, 0.1128, 0.3125, 0.1006, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1523, 0.1221, 0.1387, 0.1533, 0.1445, 0.1748, 0.1147, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1128, 0.1040, 0.1455, 0.1406, 0.1406, 0.0996, 0.1113, 0.1455, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1089, 0.1011, 0.1035, 0.0693, 0.1182, 0.1807, 0.0820, 0.1167, 0.1196, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0835, 0.1099, 0.0913, 0.1338, 0.1118, 0.0776, 0.1455, 0.0635, 0.0859, 0.0977, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0801, 0.0664, 0.1328, 0.0767, 0.0923, 0.1035, 0.0737, 0.1602, 0.0601, 0.0918, 0.0623, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0879, 0.1357, 0.0850, 0.0742, 0.1060, 0.0801, 0.1113, 0.0427, 0.0947, 0.0525, 0.0603, 0.0698, 0.0000, 0.0000, 0.0000],
        [0.0791, 0.0493, 0.0598, 0.0693, 0.0815, 0.1055, 0.0608, 0.1016, 0.0669, 0.0737, 0.0579, 0.1230, 0.0718, 0.0000, 0.0000],
        [0.0645, 0.0593, 0.0557, 0.0557, 0.0588, 0.0918, 0.0640, 0.0603, 0.0874, 0.0923, 0.0564, 0.1143, 0.0625, 0.0776, 0.0000],
        [0.0679, 0.0520, 0.0608, 0.0742, 0.0272, 0.0884, 0.0698, 0.0776, 0.0747, 0.0547, 0.0452, 0.0762, 0.0820, 0.0771, 0.0723]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0196,  0.0010,  0.0006,  ..., -0.0364, -0.0007, -0.0184],
        [-0.0129, -0.0021,  0.0002,  ..., -0.0047,  0.0296,  0.0072],
        [-0.0038,  0.0029, -0.0109,  ..., -0.0060,  0.0303,  0.0258],
        ...,
        [-0.0346,  0.0308, -0.0067,  ...,  0.0067,  0.0045,  0.0052],
        [ 0.0212,  0.0085,  0.0068,  ...,  0.0099,  0.0029,  0.0104],
        [ 0.0047, -0.0044,  0.0046,  ..., -0.0017,  0.0054,  0.0022]], device='cuda:0', requires_grad=True)
K: tensor([-0.9023, -0.6406,  0.4785,  0.1406, -0.9922, -0.0425,  0.3828, -1.4844, -0.0796, -0.7070, -0.1875,  0.4414, -0.1182,  0.5781,  0.2617, -0.3652, -0.2715, -0.1992, -0.6484,  0.5312, -0.5039, -0.6055,  0.0261, -0.2578, -0.9766, -0.3145, -0.2637, -0.7969,  0.0718,  0.1338, -0.4199,  0.6016,
         0.1309, -0.8711,  0.4434,  0.4023, -0.0815, -0.2373,  0.3223, -0.1572,  0.1699,  0.7617,  0.0027, -0.4121, -0.2188,  0.0996,  0.0093, -0.2969, -0.0942,  0.0776,  0.4336, -0.1787, -0.4609, -0.5039, -0.3203, -0.1494, -0.7500, -0.1270,  0.6211,  0.2178,  0.3125,  0.0342, -0.9531,  0.6445],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0161,  0.0007, -0.0063,  ..., -0.0080, -0.0025, -0.0205],
        [-0.0064, -0.0160, -0.0283,  ..., -0.0299,  0.0036, -0.0171],
        [ 0.0115, -0.0130, -0.0074,  ..., -0.0479, -0.0289,  0.0269],
        ...,
        [-0.0024,  0.0077, -0.0028,  ...,  0.0147,  0.0206, -0.0276],
        [-0.0200, -0.0091,  0.0075,  ...,  0.0144,  0.0237,  0.0138],
        [ 0.0368,  0.0197, -0.0143,  ..., -0.0131, -0.0046, -0.0112]], device='cuda:0', requires_grad=True)
Q: tensor([-0.2812, -0.2793, -1.3438, -0.2539,  0.0625,  0.4453, -0.7773,  0.0649,  0.6562, -0.5000,  0.6172,  0.5078,  0.1113,  0.1357,  0.5664, -0.6445, -0.3164, -0.3125, -0.4121, -0.5664,  1.1719, -0.5781, -0.7070, -0.2227, -0.9492, -1.3594,  0.6797, -0.3164, -1.0391,  0.1299, -0.5352,  0.1826,
         0.3867, -0.0452, -0.0732, -0.2100,  0.5586,  0.2061, -0.7344,  0.0140,  0.9961,  0.1152, -0.4941, -0.2051, -0.7227,  0.7188,  0.5078, -0.7148,  0.2539,  0.6719, -0.3320,  1.0938, -0.1270,  0.5273,  0.3340,  0.9023, -0.0737, -0.3691, -0.1201,  0.2256, -0.4902,  0.0036,  0.8594, -0.0469],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.4141,  0.0240, -0.0732, -0.1729,  0.1177,  0.0513, -0.4238, -0.0118, -0.0728, -0.0444,  0.3613,  0.0427,  0.2070,  0.1074],
        [ 0.0000, -0.1504,  0.5234, -0.0522, -0.0723, -0.0767,  0.4141,  0.2578,  0.4590, -0.4082,  0.0938,  0.2578,  0.1191, -0.1299,  0.5195],
        [ 0.0000,  0.4551,  0.4121,  0.4219,  0.5859, -0.7227,  0.1602, -0.0728, -0.0300, -0.1152,  0.2314,  0.5352, -0.0586, -0.1758, -0.1953],
        [ 0.0000, -0.0122,  0.0864,  0.2793, -0.1260, -0.0564,  0.4805,  0.3945, -0.1094,  0.1021, -0.0046,  0.4531, -0.3281,  0.0640,  0.4609],
        [ 0.0000,  0.4922, -0.3047, -0.2197,  0.7969, -0.3340,  0.6133,  0.2490, -0.2754,  0.2949,  0.3281, -0.4961, -0.3809, -0.2832,  0.0349],
        [ 0.0000, -0.2256, -0.0981,  0.0070, -0.0581,  0.1328, -0.2871, -0.3652,  0.3730, -0.1196, -0.2383,  0.7305,  0.3906, -0.2363, -0.1787],
        [ 0.0000, -0.0796,  0.2539,  0.2236,  0.2256, -0.1240, -0.0115,  0.2578,  0.1128, -0.0437,  0.1514,  0.5352, -0.0718,  0.1318, -0.5781],
        [ 0.0000, -0.0747, -0.0525, -0.4551,  0.0815,  0.5078, -0.2812,  0.0684,  0.0952, -0.1670,  0.1074,  0.4492,  0.3320,  0.4023,  0.0082],
        [ 0.0000,  0.2773,  0.0928,  0.4727,  0.2949, -0.0723,  0.5547, -0.2734,  0.0312,  0.1602,  0.2168, -0.2002,  0.3594, -0.1719, -0.0728],
        [ 0.0000, -0.1875,  0.5039, -0.0476,  0.1396,  0.2539, -0.0889,  0.6875, -0.2910,  0.1357, -0.2520,  0.1416,  0.0432, -0.0374, -0.5391],
        [ 0.0000,  0.4355, -0.0332, -0.1709,  0.1855, -0.0933,  0.2344, -0.7227,  0.0718, -0.5156, -0.3770, -0.2305, -0.3047, -0.5352,  0.2734],
        [ 0.0000, -0.4688, -0.2773, -0.1279,  0.0349,  0.2910, -0.2637,  0.2490, -0.1641, -0.0708, -0.3125,  0.4414, -0.0981, -0.4844, -0.0693],
        [ 0.0000, -0.0801, -0.1465, -0.1445, -0.0903,  0.3555, -0.0085, -0.0635,  0.3047,  0.3613, -0.1318,  0.5742, -0.0294,  0.1855, -0.2354],
        [ 0.0000, -0.2656, -0.1099,  0.0898, -0.9141,  0.2637,  0.0305,  0.1348,  0.0977, -0.2148, -0.4062,  0.1167,  0.1904,  0.1279,  0.0620]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4697],
        [0.3078],
        [0.2473],
        [0.1882],
        [0.1660],
        [0.1444],
        [0.1287],
        [0.1051],
        [0.0990],
        [0.0879],
        [0.0801],
        [0.0738],
        [0.0697],
        [0.0639]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5039, 0.4961, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2852, 0.3203, 0.3945, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2080, 0.2305, 0.2988, 0.2617, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1748, 0.1377, 0.2217, 0.3008, 0.1641, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1348, 0.1211, 0.2227, 0.2354, 0.1279, 0.1592, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1318, 0.1074, 0.1562, 0.1235, 0.1543, 0.1787, 0.1475, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0923, 0.0815, 0.1533, 0.1157, 0.0991, 0.0732, 0.2354, 0.1504, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0889, 0.1045, 0.1167, 0.1348, 0.0967, 0.1182, 0.1299, 0.1191, 0.0918, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0864, 0.0874, 0.1445, 0.1318, 0.0815, 0.0747, 0.0884, 0.1279, 0.1025, 0.0742, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0625, 0.0713, 0.1069, 0.1035, 0.0845, 0.0737, 0.1094, 0.1074, 0.0972, 0.0918, 0.0918, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0635, 0.0718, 0.0967, 0.1021, 0.0674, 0.0962, 0.0747, 0.1094, 0.1064, 0.0928, 0.0527, 0.0664, 0.0000, 0.0000, 0.0000],
        [0.0635, 0.0684, 0.1021, 0.1084, 0.0452, 0.0500, 0.0898, 0.1230, 0.0771, 0.0933, 0.0649, 0.0571, 0.0571, 0.0000, 0.0000],
        [0.0530, 0.0723, 0.0557, 0.0835, 0.0688, 0.0635, 0.0894, 0.1040, 0.0559, 0.0742, 0.0654, 0.0820, 0.0581, 0.0742, 0.0000],
        [0.0542, 0.0569, 0.0718, 0.0835, 0.0879, 0.0505, 0.0586, 0.0806, 0.0903, 0.0579, 0.0588, 0.0659, 0.0591, 0.0703, 0.0532]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0053,  0.0012,  0.0117,  ...,  0.0135,  0.0224, -0.0364],
        [-0.0004, -0.0133, -0.0247,  ...,  0.0424,  0.0206, -0.0351],
        [-0.0204,  0.0012, -0.0086,  ...,  0.0224, -0.0017,  0.0215],
        ...,
        [-0.0117,  0.0125,  0.0089,  ...,  0.0044,  0.0042,  0.0333],
        [-0.0015,  0.0019,  0.0194,  ..., -0.0125,  0.0141, -0.0192],
        [-0.0259,  0.0276, -0.0193,  ..., -0.0278, -0.0154,  0.0356]], device='cuda:0', requires_grad=True)
K: tensor([ 0.8438, -0.3184,  0.0918,  0.1523, -0.1924, -0.6094,  0.2402, -0.5234, -0.3242, -0.2168, -0.3887, -0.2773, -0.5078,  0.1855,  0.5469, -0.5273,  0.9258, -0.1128, -0.0938,  0.0564,  0.1846, -0.2949,  0.7305,  0.3574,  0.1289, -0.7305, -0.4004,  0.3945,  0.7344,  0.6719,  0.0664,  0.0291,
        -1.4062, -0.1289, -0.1611, -0.0505,  0.5781, -0.4141, -0.1367,  0.0757, -0.2471,  0.4238, -0.0493,  0.2559,  0.3848,  0.4082,  0.4414,  0.5430,  0.2051, -0.9844, -0.8086,  0.5430,  0.3652, -0.6680,  0.3789,  0.3184,  0.2402, -0.4004, -0.5508, -1.0312,  0.5898, -0.6992, -0.0693,  0.9453],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0254,  0.0041,  0.0153,  ..., -0.0057,  0.0091,  0.0305],
        [-0.0167, -0.0290,  0.0091,  ..., -0.0050,  0.0039, -0.0066],
        [-0.0082, -0.0229, -0.0121,  ..., -0.0402, -0.0376,  0.0212],
        ...,
        [ 0.0141,  0.0119, -0.0060,  ..., -0.0112,  0.0089, -0.0276],
        [-0.0037,  0.0050, -0.0022,  ...,  0.0388,  0.0086, -0.0552],
        [-0.0069, -0.0155, -0.0004,  ...,  0.0135,  0.0022,  0.0076]], device='cuda:0', requires_grad=True)
Q: tensor([-0.5117,  0.4824,  0.2832,  0.6172, -0.1855, -0.1533, -0.3652, -0.9648, -0.3906, -0.2197,  0.0898,  0.2090, -0.3633, -0.2285,  0.7852,  0.1582, -0.3379, -1.1406, -0.9375, -0.1816,  0.0618,  0.4688, -0.1523, -0.3887,  0.1846,  0.1924,  0.5469,  0.4160,  0.7031,  0.2051, -0.2090,  0.4824,
        -0.3770, -0.0815, -0.5703,  0.1484,  0.3633, -0.0216,  0.4375, -0.1943,  0.3125,  0.1099, -0.4902,  0.0381, -1.1797,  0.2773, -0.6484,  0.1875, -0.4199, -0.3379, -0.0547, -0.7539,  0.0142,  0.8867, -0.2812,  0.6484, -0.7266,  0.0889,  0.4531,  0.2266, -0.1211,  0.3691, -0.3242,  0.5938],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -0.0186,      0.2793,      0.0535,     -0.1006,     -0.1650,     -0.3555,      0.3574,     -0.0732,     -0.0356,     -0.3027,     -0.0167,     -0.4805,     -0.1357,     -0.0009],
        [     0.0000,      0.1108,      0.3203,      0.5664,      0.1221,      0.1768,      0.5820,      0.5273,      0.3926,      0.1055,      0.0537,      0.1328,     -0.2236,      0.2637,      0.0776],
        [     0.0000,      0.0986,      0.3633,      0.2275,      0.4297,     -0.0513,      0.5508,      0.3750,      0.2070,      0.0942,     -0.0879,     -0.0229,     -0.2314,     -0.1396,     -0.0654],
        [     0.0000,     -0.2373,      0.2393,      0.5430,     -0.0625,     -0.2734,      0.0684,      0.1738,     -0.0238,      0.1494,     -0.1045,     -0.1807,     -0.2227,     -0.2988,      0.1289],
        [     0.0000,     -0.1030,      0.5039,      0.5586,     -0.0518,      0.1699,      0.4395,      0.2295,      0.5781,      0.4473,     -0.0315,      0.0464,     -0.4824,      0.1309,      0.4844],
        [     0.0000,     -0.2070,      0.1719,     -0.0645,      0.1562,      0.3027,      0.1099,      0.0947,      0.2832,      0.2256,     -0.0605,      0.1367,     -0.0396,     -0.2227,      0.2363],
        [     0.0000,     -0.1211,      0.5078,      0.2266,      0.0752,     -0.2305,      0.9375,      0.4922,      0.1660,     -0.1025,     -0.2441,     -0.1289,     -0.0894,      0.1758,      0.2275],
        [     0.0000,      0.1641,      0.2754,      0.4160,      0.0869,      0.2891,      0.3770,      0.2949,      0.0322,      0.4648,      0.3887,      0.1318,      0.0035,      0.1953,      0.1465],
        [     0.0000,      0.0101,      0.5156,      0.4199,     -0.0562,     -0.1426,      0.0247,      0.3945,      0.1738,     -0.1504,      0.2090,      0.1050,     -0.6016,     -0.2734,     -0.1377],
        [     0.0000,      0.1309,      0.5352,      0.5039,      0.3008,      0.1611,      0.5586,      0.5391,      0.4414,      0.3848,      0.3809,      0.3184,      0.0586,      0.2412,     -0.0023],
        [     0.0000,      0.1201,      0.4180,      0.4727,      0.0547,      0.4141,      0.1592,      0.5391,      0.5156,      0.3770,     -0.1895,      0.0420,     -0.0194,      0.4375,      0.3027],
        [     0.0000,      0.0728,      0.4766,      0.5352,     -0.3379,     -0.2363,      0.3516,      0.6602,      0.1992,      0.3887,      0.0214,     -0.1045,     -0.1016,      0.4277,      0.3770],
        [     0.0000,      0.3086,      0.0474,      0.4512,      0.2578,      0.1777,      0.5234,      0.6758,      0.0537,      0.3379,      0.2070,      0.4375,      0.0913,      0.3320,     -0.0674],
        [     0.0000,      0.0496,      0.2832,      0.4355,      0.4883,     -0.0684,      0.0806,      0.4004,      0.5117,      0.0679,      0.0830,      0.1953,      0.0879,      0.2637,     -0.0184]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5133],
        [0.3416],
        [0.2550],
        [0.2018],
        [0.1792],
        [0.1372],
        [0.1322],
        [0.1086],
        [0.0979],
        [0.0910],
        [0.0928],
        [0.0866],
        [0.0712],
        [0.0744]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3906, 0.6094, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3145, 0.2891, 0.3965, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2197, 0.2109, 0.2930, 0.2754, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1865, 0.2520, 0.2266, 0.2031, 0.1318, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1582, 0.1572, 0.2021, 0.1934, 0.1279, 0.1602, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1455, 0.1572, 0.1602, 0.1611, 0.0859, 0.1572, 0.1318, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1270, 0.1377, 0.1396, 0.1484, 0.0674, 0.1836, 0.1001, 0.0962, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0972, 0.1157, 0.1221, 0.1475, 0.0752, 0.1157, 0.1030, 0.0952, 0.1279, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0894, 0.1543, 0.1074, 0.1299, 0.0713, 0.1187, 0.0747, 0.0742, 0.0840, 0.0957, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0757, 0.1050, 0.0894, 0.1128, 0.0654, 0.0825, 0.0737, 0.0674, 0.0757, 0.1025, 0.1494, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0669, 0.1089, 0.0859, 0.1021, 0.0613, 0.0972, 0.0679, 0.0718, 0.0771, 0.0903, 0.1001, 0.0703, 0.0000, 0.0000, 0.0000],
        [0.0559, 0.0889, 0.0698, 0.0977, 0.0474, 0.0850, 0.0476, 0.0459, 0.0776, 0.0815, 0.1309, 0.0918, 0.0796, 0.0000, 0.0000],
        [0.0437, 0.0593, 0.0786, 0.0859, 0.0574, 0.0830, 0.0576, 0.0505, 0.0752, 0.0898, 0.0898, 0.0762, 0.0864, 0.0664, 0.0000],
        [0.0500, 0.0737, 0.0747, 0.0864, 0.0444, 0.0757, 0.0510, 0.0576, 0.0549, 0.0762, 0.0908, 0.0659, 0.0583, 0.0540, 0.0859]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0215,  0.0212, -0.0281,  ...,  0.0195,  0.0060,  0.0255],
        [-0.0012,  0.0259,  0.0017,  ..., -0.0283,  0.0124, -0.0247],
        [ 0.0199,  0.0145, -0.0244,  ..., -0.0027, -0.0225,  0.0330],
        ...,
        [-0.0039,  0.0210, -0.0105,  ...,  0.0107, -0.0319,  0.0292],
        [-0.0068, -0.0023,  0.0335,  ..., -0.0131,  0.0222,  0.0223],
        [-0.0150,  0.0078, -0.0204,  ...,  0.0060,  0.0083, -0.0233]], device='cuda:0', requires_grad=True)
K: tensor([ 0.1113, -0.5625,  0.4277,  0.5156,  0.7812, -0.3848, -0.0236,  0.7266,  1.0781, -0.2432,  0.4199,  0.1680,  0.2676,  0.2041,  0.1621,  0.6289, -0.0325, -0.5352, -0.8828, -0.5391, -1.1016, -0.1240,  0.6797,  1.3594,  0.6289, -0.5547, -0.5195,  0.5156, -0.2617,  0.9570, -0.3789,  0.6484,
         0.6133,  0.5977,  0.3262, -0.0327,  0.6367, -0.0305, -0.0251,  0.3184,  0.6836,  0.9531, -0.0413, -0.5352, -0.0187,  0.1416, -0.3145, -1.3984,  0.0850, -0.5820,  0.2676, -0.5352, -0.5469,  0.1982,  0.9102, -0.4902,  0.4082, -0.5742, -1.5859, -0.9141,  1.1797,  0.0962,  0.0309, -0.3555],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0081, -0.0069,  0.0305,  ...,  0.0370, -0.0043,  0.0007],
        [ 0.0153, -0.0127, -0.0061,  ...,  0.0144,  0.0032, -0.0149],
        [ 0.0085, -0.0058, -0.0320,  ...,  0.0205,  0.0174,  0.0572],
        ...,
        [-0.0038, -0.0069, -0.0075,  ..., -0.0124,  0.0064,  0.0089],
        [-0.0293,  0.0175, -0.0095,  ...,  0.0331,  0.0144,  0.0264],
        [ 0.0132, -0.0093, -0.0060,  ..., -0.0168,  0.0178,  0.0371]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.2559, -0.5195, -0.3398, -0.9531,  0.2715,  0.1514, -0.2539,  0.3594,  0.1885,  1.2031, -0.7969, -0.3438, -0.2100,  0.6758,  0.2617,  0.7617, -0.4902,  0.1611,  0.3418,  1.5156, -0.4180, -0.2500, -0.8242, -0.0767,  1.0391, -0.0688, -0.2275, -0.2070, -0.0376,  0.4922, -0.4629, -0.1089,
         0.8672,  0.7109,  0.6836, -0.3262,  0.0825,  0.0791, -0.5195, -0.2246, -0.1875, -0.1777,  0.1465,  0.2637, -0.0417, -0.9492, -0.9062, -0.6680, -0.2373, -0.7383, -0.3145, -0.8516, -0.2178,  0.0942, -0.6445,  0.0427, -0.0649,  0.0967, -0.9336, -0.2754,  0.4121,  0.4688,  0.5156,  0.4199],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.4453,  0.1230,  0.3066, -0.1963,  0.1904, -0.1035, -0.3730,  0.0459,  0.1680,  0.1729,  0.3359, -0.1494, -0.1357,  0.4395],
        [ 0.0000, -0.0820,  0.2334,  0.1377, -0.3652,  0.0713, -0.2227, -0.4043, -0.1748, -0.0140,  0.2070, -0.0854,  0.1133, -0.2012,  0.0752],
        [ 0.0000, -0.0391,  0.2891,  0.2266, -0.2578,  0.1357, -0.2070, -0.0820,  0.0312,  0.3633,  0.6328,  0.2158,  0.3848, -0.2012,  0.5117],
        [ 0.0000,  0.2988,  0.1963,  0.0874, -0.3438,  0.1396, -0.2168, -0.0659,  0.1270,  0.2256,  0.2891,  0.1885, -0.0178, -0.1641,  0.5000],
        [ 0.0000, -0.0053,  0.2461,  0.2021, -0.2158,  0.0118, -0.2305, -0.2168, -0.0075,  0.1738,  0.4805,  0.1748,  0.1191, -0.1348,  0.1758],
        [ 0.0000,  0.0796,  0.0986,  0.1030, -0.5273,  0.0781, -0.0977, -0.4277,  0.0208,  0.1797,  0.1904, -0.0703,  0.0153, -0.2061,  0.2158],
        [ 0.0000,  0.0796,  0.0996,  0.1582, -0.6328,  0.3672, -0.2344, -0.2754, -0.1846,  0.1230,  0.4297,  0.0112,  0.3027, -0.1719,  0.4062],
        [ 0.0000,  0.1768,  0.2314,  0.4199, -0.2520,  0.1777,  0.0588, -0.0211,  0.2773,  0.3477,  0.4043,  0.4727,  0.4258,  0.0132,  0.4805],
        [ 0.0000,  0.5469,  0.1855,  0.3750, -0.2236,  0.2812, -0.1797, -0.1826, -0.0635,  0.0659,  0.6719,  0.1816,  0.2617, -0.2080,  0.5352],
        [ 0.0000,  0.3281,  0.1641,  0.3984, -0.1504,  0.0864, -0.0278, -0.1172,  0.0017,  0.3027,  0.6836,  0.2354,  0.0815,  0.0019,  0.4883],
        [ 0.0000,  0.4883,  0.2500,  0.4238, -0.0869,  0.3750,  0.0151,  0.0703,  0.1426,  0.3008,  0.4023,  0.0474,  0.3066,  0.1299,  0.5625],
        [ 0.0000,  0.4629,  0.2236,  0.5547, -0.1650,  0.4180, -0.1641, -0.1963,  0.3301,  0.3750,  0.8516,  0.4922,  0.3496,  0.0620,  0.6133],
        [ 0.0000,  0.3066,  0.5859,  0.6758,  0.2734,  0.6406,  0.2773,  0.1465,  0.5430,  0.7188,  0.7227,  0.5547,  0.6836,  0.4180,  0.9375],
        [ 0.0000,  0.3867,  0.4004,  0.5469, -0.1211,  0.4121,  0.0204,  0.1387,  0.0933,  0.4199,  0.5977,  0.2734,  0.1523,  0.0732,  0.5430]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5023],
        [0.3563],
        [0.2573],
        [0.2229],
        [0.1664],
        [0.1490],
        [0.1406],
        [0.1235],
        [0.1065],
        [0.0920],
        [0.0881],
        [0.0783],
        [0.0698],
        [0.0674]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4512, 0.5508, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3164, 0.3223, 0.3613, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2432, 0.2373, 0.2598, 0.2598, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1934, 0.1846, 0.2002, 0.1982, 0.2236, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1602, 0.1484, 0.1621, 0.1611, 0.1826, 0.1855, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1367, 0.1260, 0.1367, 0.1348, 0.1514, 0.1543, 0.1611, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1157, 0.1069, 0.1167, 0.1162, 0.1309, 0.1328, 0.1387, 0.1406, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1030, 0.0942, 0.1021, 0.1016, 0.1147, 0.1162, 0.1216, 0.1226, 0.1235, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0928, 0.0845, 0.0908, 0.0898, 0.1021, 0.1035, 0.1079, 0.1089, 0.1094, 0.1104, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0825, 0.0762, 0.0820, 0.0811, 0.0918, 0.0928, 0.0967, 0.0977, 0.0981, 0.0991, 0.1016, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0762, 0.0688, 0.0737, 0.0732, 0.0830, 0.0840, 0.0879, 0.0884, 0.0889, 0.0898, 0.0918, 0.0938, 0.0000, 0.0000, 0.0000],
        [0.0698, 0.0625, 0.0674, 0.0669, 0.0757, 0.0771, 0.0801, 0.0811, 0.0815, 0.0825, 0.0845, 0.0864, 0.0845, 0.0000, 0.0000],
        [0.0635, 0.0581, 0.0625, 0.0620, 0.0703, 0.0713, 0.0742, 0.0747, 0.0752, 0.0757, 0.0776, 0.0791, 0.0776, 0.0781, 0.0000],
        [0.0591, 0.0540, 0.0579, 0.0574, 0.0649, 0.0659, 0.0684, 0.0693, 0.0698, 0.0703, 0.0718, 0.0732, 0.0718, 0.0728, 0.0732]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0041, -0.0251, -0.0213,  ..., -0.0158, -0.0148,  0.0113],
        [ 0.0064, -0.0191, -0.0012,  ..., -0.0056,  0.0153, -0.0143],
        [-0.0186,  0.0183, -0.0079,  ..., -0.0029,  0.0211, -0.0169],
        ...,
        [ 0.0278, -0.0080, -0.0490,  ...,  0.0281,  0.0156,  0.0035],
        [ 0.0381, -0.0237, -0.0258,  ..., -0.0068, -0.0283,  0.0038],
        [ 0.0169, -0.0031,  0.0278,  ..., -0.0188,  0.0195,  0.0166]], device='cuda:0', requires_grad=True)
K: tensor([ 0.8008,  0.4043,  0.7344, -0.0598,  0.0109, -0.7188, -0.7969,  0.2383, -0.0708,  0.3320,  0.1196,  0.3281,  0.5938, -0.2617,  0.2637,  0.6367,  0.2793,  0.6250, -0.4434, -0.0815,  0.1953,  0.7500, -0.5625,  0.1904,  0.0579,  0.1768,  0.3379, -0.7930,  1.1719,  0.1348, -0.1201,  0.6328,
         0.5000, -0.0815,  0.6172,  1.3672, -0.7188,  0.2178, -0.6094, -0.3184,  0.3633, -0.5625,  0.3945,  0.4629,  0.3789,  0.1855,  0.1924,  0.5312,  0.7188,  0.0442, -0.1719, -0.1543,  0.4219,  0.5156, -0.0586, -0.8945,  0.2188,  0.1436,  0.0337,  0.4355,  0.1436, -0.0520,  0.3867, -0.6602],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0044,  0.0045, -0.0028,  ...,  0.0139, -0.0156, -0.0255],
        [ 0.0039,  0.0030, -0.0091,  ..., -0.0127,  0.0066,  0.0323],
        [-0.0136,  0.0025, -0.0094,  ...,  0.0380,  0.0091,  0.0013],
        ...,
        [ 0.0241,  0.0136,  0.0006,  ...,  0.0046,  0.0074,  0.0216],
        [ 0.0204,  0.0315, -0.0276,  ...,  0.0348, -0.0587,  0.0062],
        [ 0.0035,  0.0228,  0.0082,  ..., -0.0206,  0.0216,  0.0030]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.2246,  0.5000, -0.9180, -1.0781, -0.5039,  0.0186, -0.3574,  0.1055,  1.0703, -0.4844, -1.0781,  0.0544,  0.4258, -0.9102, -0.0835, -0.6250, -0.4453, -0.0952, -0.0349,  0.0801,  0.9688,  1.1328, -0.6836, -0.5117, -0.5820, -0.7656,  0.7852,  0.4043, -1.2344,  0.4453, -0.3418,  0.0913,
         0.1807,  0.3613, -0.2148,  0.8320, -1.3047,  0.0310,  0.8711, -0.6875,  0.1855,  0.2422, -0.3438,  0.9961,  0.3867,  0.0239, -0.7617, -0.2715,  0.0879,  0.1621,  0.2412, -0.7656, -0.3027,  0.4277, -0.4551, -0.1006,  0.6641,  0.2910,  0.4492,  0.1226, -0.4473, -0.6133, -0.5156, -0.1670],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.1982,  0.2949,  0.2910,  0.3711,  0.4219,  0.4648,  0.4727,  0.4824,  0.4941,  0.5078,  0.5430,  0.5273,  0.5234,  0.5352],
        [ 0.0000,  0.0204,  0.1348,  0.1309,  0.2393,  0.2695,  0.3184,  0.3262,  0.3359,  0.3398,  0.3652,  0.3926,  0.3730,  0.3770,  0.3867],
        [ 0.0000, -0.0250,  0.0659,  0.0635,  0.1777,  0.1992,  0.2480,  0.2539,  0.2637,  0.2676,  0.2949,  0.3203,  0.2969,  0.3027,  0.3145],
        [ 0.0000, -0.0491,  0.0308,  0.0239,  0.1445,  0.1611,  0.2080,  0.2148,  0.2227,  0.2285,  0.2559,  0.2773,  0.2559,  0.2617,  0.2754],
        [ 0.0000, -0.0757,  0.0085,  0.0032,  0.1260,  0.1436,  0.1904,  0.1982,  0.2070,  0.2129,  0.2393,  0.2617,  0.2393,  0.2480,  0.2598],
        [ 0.0000, -0.0806, -0.0027, -0.0160,  0.1050,  0.1187,  0.1621,  0.1719,  0.1768,  0.1836,  0.2090,  0.2295,  0.2090,  0.2158,  0.2275],
        [ 0.0000, -0.0786,  0.0075,  0.0011,  0.1250,  0.1396,  0.1826,  0.1924,  0.1992,  0.2070,  0.2334,  0.2520,  0.2314,  0.2402,  0.2520],
        [ 0.0000, -0.0869, -0.0067, -0.0137,  0.1099,  0.1235,  0.1689,  0.1748,  0.1816,  0.1895,  0.2148,  0.2354,  0.2129,  0.2207,  0.2324],
        [ 0.0000, -0.0991, -0.0228, -0.0339,  0.0913,  0.1050,  0.1484,  0.1572,  0.1641,  0.1719,  0.1973,  0.2188,  0.1963,  0.2051,  0.2168],
        [ 0.0000, -0.0776, -0.0055, -0.0168,  0.1060,  0.1191,  0.1611,  0.1680,  0.1758,  0.1836,  0.2080,  0.2285,  0.2070,  0.2148,  0.2256],
        [ 0.0000, -0.1021, -0.0332, -0.0427,  0.0811,  0.0942,  0.1377,  0.1465,  0.1514,  0.1611,  0.1855,  0.2051,  0.1836,  0.1924,  0.2041],
        [ 0.0000, -0.1113, -0.0361, -0.0442,  0.0811,  0.0952,  0.1387,  0.1475,  0.1543,  0.1631,  0.1895,  0.2090,  0.1875,  0.1973,  0.2090],
        [ 0.0000, -0.0854, -0.0159, -0.0242,  0.1016,  0.1138,  0.1562,  0.1631,  0.1699,  0.1787,  0.2041,  0.2236,  0.2021,  0.2100,  0.2227],
        [ 0.0000, -0.0894, -0.0201, -0.0309,  0.0962,  0.1084,  0.1494,  0.1582,  0.1650,  0.1748,  0.1973,  0.2178,  0.1973,  0.2051,  0.2168]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4723],
        [0.3187],
        [0.2404],
        [0.1927],
        [0.1600],
        [0.1388],
        [0.1205],
        [0.1069],
        [0.0970],
        [0.0877],
        [0.0807],
        [0.0747],
        [0.0683],
        [0.0647]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3496, 0.6484, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2061, 0.3691, 0.4238, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1514, 0.2598, 0.2949, 0.2949, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1191, 0.2002, 0.2275, 0.2266, 0.2266, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0986, 0.1611, 0.1836, 0.1836, 0.1836, 0.1895, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0845, 0.1357, 0.1543, 0.1543, 0.1533, 0.1592, 0.1592, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0732, 0.1167, 0.1338, 0.1328, 0.1328, 0.1367, 0.1377, 0.1367, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0664, 0.1035, 0.1172, 0.1167, 0.1162, 0.1196, 0.1196, 0.1187, 0.1221, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0593, 0.0918, 0.1045, 0.1040, 0.1035, 0.1064, 0.1069, 0.1060, 0.1089, 0.1089, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0542, 0.0830, 0.0942, 0.0938, 0.0933, 0.0962, 0.0962, 0.0957, 0.0981, 0.0981, 0.0967, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0496, 0.0757, 0.0859, 0.0854, 0.0850, 0.0874, 0.0879, 0.0869, 0.0894, 0.0894, 0.0879, 0.0894, 0.0000, 0.0000, 0.0000],
        [0.0454, 0.0693, 0.0786, 0.0781, 0.0781, 0.0801, 0.0806, 0.0796, 0.0820, 0.0820, 0.0806, 0.0820, 0.0835, 0.0000, 0.0000],
        [0.0430, 0.0645, 0.0732, 0.0723, 0.0718, 0.0742, 0.0742, 0.0732, 0.0757, 0.0757, 0.0742, 0.0757, 0.0771, 0.0752, 0.0000],
        [0.0400, 0.0601, 0.0679, 0.0674, 0.0669, 0.0688, 0.0688, 0.0684, 0.0703, 0.0703, 0.0693, 0.0703, 0.0718, 0.0698, 0.0703]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0220,  0.0152,  0.0074,  ..., -0.0149,  0.0058, -0.0158],
        [-0.0129,  0.0047, -0.0126,  ..., -0.0238,  0.0160,  0.0122],
        [ 0.0266, -0.0021,  0.0084,  ..., -0.0245,  0.0432, -0.0201],
        ...,
        [ 0.0156, -0.0046,  0.0028,  ..., -0.0043,  0.0169,  0.0219],
        [ 0.0238,  0.0129, -0.0043,  ..., -0.0475, -0.0176, -0.0261],
        [-0.0115,  0.0109,  0.0084,  ..., -0.0121,  0.0430,  0.0327]], device='cuda:0', requires_grad=True)
K: tensor([ 0.2021, -0.3457, -0.6836,  0.1660, -0.1279, -1.2578, -0.3359, -0.3535, -0.1641, -0.1216,  0.3926, -0.8555,  0.1006,  1.3828, -0.7578, -0.0084,  1.0547,  0.4668, -0.3496, -0.2949, -0.2441,  0.5195,  0.1543, -0.0442,  1.2031,  0.1104, -0.3633, -0.4277, -0.1523, -0.0337,  0.2598,  0.5039,
         0.4023,  0.3066,  0.4023,  0.5234, -1.2656, -0.1777,  0.5156,  0.8555,  0.6016, -0.1011,  0.1396, -1.2344,  0.0131,  0.1680, -0.1729, -0.1465,  1.2344, -0.3574,  0.2559, -0.5977,  0.0645, -0.4004,  0.2490, -0.6953,  0.1338, -0.4688, -0.2598,  0.1504,  0.6094, -0.9922, -0.4844,  0.2793],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0193, -0.0064, -0.0210,  ..., -0.0305, -0.0216,  0.0003],
        [-0.0002,  0.0181, -0.0166,  ..., -0.0006,  0.0114,  0.0075],
        [ 0.0261, -0.0206,  0.0241,  ...,  0.0224,  0.0065, -0.0291],
        ...,
        [ 0.0186, -0.0237,  0.0204,  ..., -0.0013,  0.0122, -0.0030],
        [-0.0037, -0.0149, -0.0262,  ...,  0.0165,  0.0252,  0.0035],
        [ 0.0169, -0.0045, -0.0145,  ...,  0.0185,  0.0245,  0.0097]], device='cuda:0', requires_grad=True)
Q: tensor([-0.5547,  0.6758, -0.0908,  0.5547, -0.1050, -0.2578, -0.4414,  0.0928, -0.1543,  0.2207,  0.5625,  0.4492, -0.5469, -0.1621, -0.1338, -0.2832, -0.5000, -0.0664, -0.1016, -0.7227,  1.4453,  0.3438, -0.4355, -0.1826,  1.1172, -1.0078,  0.0874, -0.6055,  0.3359, -0.3242, -0.7695, -0.5234,
         0.1357,  0.0177,  0.2285,  0.6992, -0.2246, -0.3594, -0.5039,  0.8672,  0.6055, -1.0391, -0.5156,  0.3770, -0.5469,  0.4453,  0.7031,  0.6055,  0.4707,  0.1426,  0.2656, -0.8711,  0.2275, -0.0036,  0.0075, -0.9336, -0.3438, -1.6172,  0.2148, -0.6055, -0.2871, -0.5508, -0.6016,  0.1699],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.6172, 0.7852, 0.8008, 0.8125, 0.8555, 0.8594, 0.8672, 0.8906, 0.8945, 0.8867, 0.8984, 0.9219, 0.9062, 0.9102],
        [0.0000, 0.5859, 0.7227, 0.7305, 0.7305, 0.7695, 0.7695, 0.7695, 0.7969, 0.8008, 0.7891, 0.8008, 0.8242, 0.8047, 0.8086],
        [0.0000, 0.5352, 0.6641, 0.6680, 0.6680, 0.7031, 0.7070, 0.7031, 0.7305, 0.7344, 0.7227, 0.7344, 0.7578, 0.7383, 0.7422],
        [0.0000, 0.5195, 0.6445, 0.6445, 0.6406, 0.6758, 0.6758, 0.6719, 0.6953, 0.6992, 0.6836, 0.6992, 0.7188, 0.6992, 0.7031],
        [0.0000, 0.4902, 0.6211, 0.6211, 0.6172, 0.6523, 0.6562, 0.6484, 0.6758, 0.6758, 0.6641, 0.6758, 0.6992, 0.6758, 0.6836],
        [0.0000, 0.4766, 0.6016, 0.6016, 0.5977, 0.6328, 0.6328, 0.6250, 0.6523, 0.6562, 0.6406, 0.6562, 0.6758, 0.6562, 0.6602],
        [0.0000, 0.4648, 0.5977, 0.5938, 0.5938, 0.6250, 0.6289, 0.6211, 0.6484, 0.6484, 0.6367, 0.6484, 0.6680, 0.6484, 0.6523],
        [0.0000, 0.4434, 0.5703, 0.5625, 0.5586, 0.5898, 0.5898, 0.5820, 0.6094, 0.6094, 0.5977, 0.6094, 0.6289, 0.6094, 0.6133],
        [0.0000, 0.4355, 0.5625, 0.5586, 0.5547, 0.5859, 0.5859, 0.5781, 0.6055, 0.6055, 0.5938, 0.6055, 0.6250, 0.6055, 0.6094],
        [0.0000, 0.4258, 0.5508, 0.5469, 0.5430, 0.5742, 0.5742, 0.5664, 0.5938, 0.5938, 0.5820, 0.5938, 0.6133, 0.5938, 0.5977],
        [0.0000, 0.4258, 0.5547, 0.5469, 0.5391, 0.5703, 0.5742, 0.5625, 0.5898, 0.5938, 0.5781, 0.5898, 0.6133, 0.5898, 0.5938],
        [0.0000, 0.4199, 0.5469, 0.5430, 0.5352, 0.5664, 0.5703, 0.5586, 0.5859, 0.5859, 0.5742, 0.5859, 0.6055, 0.5859, 0.5898],
        [0.0000, 0.4082, 0.5312, 0.5234, 0.5195, 0.5469, 0.5469, 0.5391, 0.5664, 0.5664, 0.5508, 0.5664, 0.5859, 0.5625, 0.5703],
        [0.0000, 0.4102, 0.5312, 0.5234, 0.5156, 0.5469, 0.5469, 0.5352, 0.5625, 0.5664, 0.5508, 0.5625, 0.5859, 0.5625, 0.5664]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4478],
        [0.2926],
        [0.2202],
        [0.1768],
        [0.1490],
        [0.1283],
        [0.1121],
        [0.1003],
        [0.0910],
        [0.0831],
        [0.0764],
        [0.0705],
        [0.0656],
        [0.0615]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( the:0.0148 the:0.0143 the:0.0143 the:0.0153 the:0.0148 the:0.0143 the:0.0153 the:0.0153)
 the
------
		( the:0.0143 the:0.0143 the:0.0153 the:0.0148 the:0.0143 the:0.0153 the:0.0153 the:0.0148)
 the the the the the the the the the the the the the the the
@ 50 train 9.1985 , allloss: 27.8303, dt: 1648.43ms, fracRes: 0.0069, norm(attn): 0.0537, norm(output): 0.1089, norm(x): 0.1071, norm(y): 0.9995, norm:60.7151, tok/sec: 79513.40, flops:83.45, batch-reuse:1
@ 51 train 9.2245 , allloss: 27.9909, dt: 1255.37ms, fracRes: 0.0069, norm(attn): 0.0537, norm(output): 0.1074, norm(x): 0.1063, norm(y): 0.9995, norm:58.4581, tok/sec: 104409.09, flops:109.58, batch-reuse:1
@ 52 train 9.1229 , allloss: 28.0675, dt: 1244.96ms, fracRes: 0.0069, norm(attn): 0.0537, norm(output): 0.1074, norm(x): 0.1054, norm(y): 0.9995, norm:55.6786, tok/sec: 105281.85, flops:110.50, batch-reuse:1
@ 53 train 9.1244 , allloss: 28.2660, dt: 1243.68ms, fracRes: 0.0069, norm(attn): 0.0537, norm(output): 0.1035, norm(x): 0.1043, norm(y): 0.9994, norm:52.7379, tok/sec: 105390.41, flops:110.61, batch-reuse:1
@ 54 train 9.1053 , allloss: 28.4396, dt: 1256.03ms, fracRes: 0.0068, norm(attn): 0.0522, norm(output): 0.1021, norm(x): 0.1031, norm(y): 0.9994, norm:49.7669, tok/sec: 104354.25, flops:109.52, batch-reuse:1
@ 55 train 9.1336 , allloss: 28.9369, dt: 1269.58ms, fracRes: 0.0068, norm(attn): 0.0518, norm(output): 0.1021, norm(x): 0.1017, norm(y): 0.9994, norm:47.1122, tok/sec: 103240.06, flops:108.35, batch-reuse:1
@ 56 train 9.0255 , allloss: 29.3779, dt: 1257.76ms, fracRes: 0.0068, norm(attn): 0.0518, norm(output): 0.1011, norm(x): 0.1002, norm(y): 0.9994, norm:44.6345, tok/sec: 104210.28, flops:109.37, batch-reuse:1
@ 57 train 8.9632 , allloss: 29.6816, dt: 1255.23ms, fracRes: 0.0068, norm(attn): 0.0510, norm(output): 0.1006, norm(x): 0.0990, norm(y): 0.9993, norm:41.6349, tok/sec: 104421.05, flops:109.59, batch-reuse:1
@ 58 train 8.9874 , allloss: 29.8831, dt: 1244.28ms, fracRes: 0.0068, norm(attn): 0.0508, norm(output): 0.0991, norm(x): 0.0985, norm(y): 0.9993, norm:41.1367, tok/sec: 105339.87, flops:110.56, batch-reuse:1
@ 59 train 8.8756 , allloss: 29.6814, dt: 1257.73ms, fracRes: 0.0068, norm(attn): 0.0508, norm(output): 0.0991, norm(x): 0.0982, norm(y): 0.9993, norm:40.4381, tok/sec: 104213.50, flops:109.37, batch-reuse:1
@ 60 train 8.9015 , allloss: 29.3822, dt: 1272.57ms, fracRes: 0.0068, norm(attn): 0.0505, norm(output): 0.1006, norm(x): 0.0984, norm(y): 0.9993, norm:40.2190, tok/sec: 102998.01, flops:108.10, batch-reuse:1
@ 61 train 8.8804 , allloss: 28.9939, dt: 1269.51ms, fracRes: 0.0068, norm(attn): 0.0505, norm(output): 0.1001, norm(x): 0.0984, norm(y): 0.9993, norm:38.3851, tok/sec: 103246.36, flops:108.36, batch-reuse:1
@ 62 train 8.8170 , allloss: 28.6316, dt: 1245.83ms, fracRes: 0.0068, norm(attn): 0.0505, norm(output): 0.0996, norm(x): 0.0981, norm(y): 0.9993, norm:35.9860, tok/sec: 105208.95, flops:110.42, batch-reuse:1
@ 63 train 8.8306 , allloss: 29.9490, dt: 1255.87ms, fracRes: 0.0068, norm(attn): 0.0498, norm(output): 0.0967, norm(x): 0.0972, norm(y): 0.9993, norm:36.6373, tok/sec: 104367.56, flops:109.54, batch-reuse:1
@ 64 train 8.7962 , allloss: 27.4247, dt: 1248.56ms, fracRes: 0.0068, norm(attn): 0.0505, norm(output): 0.1011, norm(x): 0.0995, norm(y): 0.9993, norm:33.0355, tok/sec: 104978.28, flops:110.18, batch-reuse:1
@ 65 train 8.8058 , allloss: 26.5638, dt: 1254.73ms, fracRes: 0.0068, norm(attn): 0.0505, norm(output): 0.1011, norm(x): 0.1004, norm(y): 0.9993, norm:32.2583, tok/sec: 104462.24, flops:109.64, batch-reuse:1
@ 66 train 8.7775 , allloss: 25.6705, dt: 1263.49ms, fracRes: 0.0068, norm(attn): 0.0508, norm(output): 0.1016, norm(x): 0.1006, norm(y): 0.9993, norm:29.1630, tok/sec: 103738.00, flops:108.87, batch-reuse:1
@ 67 train 8.6547 , allloss: 25.1894, dt: 1248.42ms, fracRes: 0.0068, norm(attn): 0.0505, norm(output): 0.1011, norm(x): 0.1002, norm(y): 0.9993, norm:25.8270, tok/sec: 104990.33, flops:110.19, batch-reuse:1
@ 68 train 8.6840 , allloss: 25.7187, dt: 1257.94ms, fracRes: 0.0067, norm(attn): 0.0498, norm(output): 0.0996, norm(x): 0.0988, norm(y): 0.9993, norm:24.5859, tok/sec: 104196.10, flops:109.36, batch-reuse:1
@ 69 train 8.6084 , allloss: 27.0195, dt: 1253.81ms, fracRes: 0.0067, norm(attn): 0.0481, norm(output): 0.0967, norm(x): 0.0964, norm(y): 0.9993, norm:24.4913, tok/sec: 104538.65, flops:109.72, batch-reuse:1
@ 70 train 8.5951 , allloss: 28.1925, dt: 1242.60ms, fracRes: 0.0066, norm(attn): 0.0469, norm(output): 0.0947, norm(x): 0.0950, norm(y): 0.9993, norm:23.9598, tok/sec: 105481.83, flops:110.71, batch-reuse:1
@ 71 train 8.5495 , allloss: 26.2771, dt: 1264.71ms, fracRes: 0.0066, norm(attn): 0.0471, norm(output): 0.0962, norm(x): 0.0965, norm(y): 0.9993, norm:20.6176, tok/sec: 103638.29, flops:108.77, batch-reuse:1
@ 72 train 8.5257 , allloss: 24.8765, dt: 1284.47ms, fracRes: 0.0066, norm(attn): 0.0474, norm(output): 0.0991, norm(x): 0.0981, norm(y): 0.9993, norm:20.3553, tok/sec: 102044.00, flops:107.10, batch-reuse:1
@ 73 train 8.5242 , allloss: 24.3587, dt: 1275.32ms, fracRes: 0.0066, norm(attn): 0.0474, norm(output): 0.1001, norm(x): 0.0988, norm(y): 0.9993, norm:19.9377, tok/sec: 102775.94, flops:107.87, batch-reuse:1
@ 74 train 8.4890 , allloss: 24.2097, dt: 1247.55ms, fracRes: 0.0066, norm(attn): 0.0469, norm(output): 0.0996, norm(x): 0.0986, norm(y): 0.9993, norm:18.5158, tok/sec: 105063.56, flops:110.27, batch-reuse:1
@ 75 train 8.8363 , allloss: 23.5574, dt: 1255.57ms, fracRes: 0.0067, norm(attn): 0.0469, norm(output): 0.1011, norm(x): 0.0995, norm(y): 0.9994, norm:17.4912, tok/sec: 104392.83, flops:109.56, batch-reuse:1
@ 76 train 8.4128 , allloss: 23.3609, dt: 1254.74ms, fracRes: 0.0066, norm(attn): 0.0461, norm(output): 0.1006, norm(x): 0.0992, norm(y): 0.9994, norm:15.3317, tok/sec: 104461.18, flops:109.63, batch-reuse:1
@ 77 train 8.7994 , allloss: 22.9963, dt: 1271.44ms, fracRes: 0.0066, norm(attn): 0.0466, norm(output): 0.1006, norm(x): 0.0996, norm(y): 0.9994, norm:15.8071, tok/sec: 103089.37, flops:108.19, batch-reuse:1
@ 78 train 8.5181 , allloss: 21.3219, dt: 1293.49ms, fracRes: 0.0066, norm(attn): 0.0474, norm(output): 0.1021, norm(x): 0.1020, norm(y): 0.9994, norm:13.1312, tok/sec: 101331.89, flops:106.35, batch-reuse:1
@ 79 train 8.2866 , allloss: 21.7023, dt: 1277.34ms, fracRes: 0.0066, norm(attn): 0.0461, norm(output): 0.1021, norm(x): 0.1020, norm(y): 0.9994, norm:13.1360, tok/sec: 102613.15, flops:107.69, batch-reuse:1
@ 80 train 8.2961 , allloss: 23.1154, dt: 1256.86ms, fracRes: 0.0065, norm(attn): 0.0444, norm(output): 0.1021, norm(x): 0.1015, norm(y): 0.9994, norm:15.5300, tok/sec: 104285.42, flops:109.45, batch-reuse:1
@ 81 train 8.2663 , allloss: 21.7760, dt: 1255.42ms, fracRes: 0.0066, norm(attn): 0.0454, norm(output): 0.1030, norm(x): 0.1032, norm(y): 0.9995, norm:13.0401, tok/sec: 104404.74, flops:109.57, batch-reuse:1
@ 82 train 8.1873 , allloss: 21.6053, dt: 1263.61ms, fracRes: 0.0065, norm(attn): 0.0447, norm(output): 0.1040, norm(x): 0.1041, norm(y): 0.9995, norm:13.0552, tok/sec: 103728.26, flops:108.86, batch-reuse:1
@ 83 train 8.1565 , allloss: 22.9320, dt: 1280.35ms, fracRes: 0.0065, norm(attn): 0.0432, norm(output): 0.1035, norm(x): 0.1033, norm(y): 0.9995, norm:14.8120, tok/sec: 102372.14, flops:107.44, batch-reuse:1
@ 84 train 8.1718 , allloss: 22.8268, dt: 1280.97ms, fracRes: 0.0065, norm(attn): 0.0427, norm(output): 0.1021, norm(x): 0.1026, norm(y): 0.9995, norm:13.6464, tok/sec: 102322.83, flops:107.39, batch-reuse:1
@ 85 train 8.0749 , allloss: 21.1365, dt: 1242.54ms, fracRes: 0.0065, norm(attn): 0.0430, norm(output): 0.1035, norm(x): 0.1043, norm(y): 0.9995, norm:10.8857, tok/sec: 105486.95, flops:110.71, batch-reuse:1
@ 86 train 8.0281 , allloss: 20.9350, dt: 1256.39ms, fracRes: 0.0065, norm(attn): 0.0430, norm(output): 0.1064, norm(x): 0.1051, norm(y): 0.9996, norm:10.9423, tok/sec: 104324.25, flops:109.49, batch-reuse:1
@ 87 train 8.0503 , allloss: 20.2249, dt: 1266.08ms, fracRes: 0.0065, norm(attn): 0.0432, norm(output): 0.1074, norm(x): 0.1060, norm(y): 0.9996, norm:10.0524, tok/sec: 103525.62, flops:108.65, batch-reuse:1
@ 88 train 8.0032 , allloss: 19.5322, dt: 1256.91ms, fracRes: 0.0065, norm(attn): 0.0432, norm(output): 0.1089, norm(x): 0.1070, norm(y): 0.9996, norm:9.8202, tok/sec: 104280.89, flops:109.44, batch-reuse:1
@ 89 train 7.9392 , allloss: 18.1790, dt: 1263.51ms, fracRes: 0.0066, norm(attn): 0.0444, norm(output): 0.1094, norm(x): 0.1086, norm(y): 0.9996, norm:8.2606, tok/sec: 103736.75, flops:108.87, batch-reuse:1
@ 90 train 7.9597 , allloss: 18.7316, dt: 1274.40ms, fracRes: 0.0065, norm(attn): 0.0437, norm(output): 0.1089, norm(x): 0.1074, norm(y): 0.9996, norm:10.0756, tok/sec: 102850.10, flops:107.94, batch-reuse:1
@ 91 train 7.9137 , allloss: 17.8763, dt: 1277.65ms, fracRes: 0.0066, norm(attn): 0.0439, norm(output): 0.1099, norm(x): 0.1097, norm(y): 0.9997, norm:8.1415, tok/sec: 102588.39, flops:107.67, batch-reuse:1
@ 92 train 7.8530 , allloss: 17.6095, dt: 1270.28ms, fracRes: 0.0066, norm(attn): 0.0432, norm(output): 0.1099, norm(x): 0.1096, norm(y): 0.9997, norm:7.9817, tok/sec: 103183.17, flops:108.29, batch-reuse:1
@ 93 train 7.8681 , allloss: 20.2758, dt: 1248.15ms, fracRes: 0.0065, norm(attn): 0.0417, norm(output): 0.1089, norm(x): 0.1072, norm(y): 0.9997, norm:15.1499, tok/sec: 105013.01, flops:110.21, batch-reuse:1
@ 94 train 8.0459 , allloss: 17.3332, dt: 1252.39ms, fracRes: 0.0066, norm(attn): 0.0435, norm(output): 0.1113, norm(x): 0.1122, norm(y): 0.9997, norm:7.9085, tok/sec: 104657.26, flops:109.84, batch-reuse:1
@ 95 train 7.8158 , allloss: 17.0285, dt: 1249.17ms, fracRes: 0.0067, norm(attn): 0.0432, norm(output): 0.1152, norm(x): 0.1129, norm(y): 0.9998, norm:7.9594, tok/sec: 104927.59, flops:110.12, batch-reuse:1
@ 96 train 7.7053 , allloss: 18.3559, dt: 1257.17ms, fracRes: 0.0066, norm(attn): 0.0415, norm(output): 0.1099, norm(x): 0.1105, norm(y): 0.9998, norm:10.7166, tok/sec: 104259.69, flops:109.42, batch-reuse:1
@ 97 train 7.7273 , allloss: 18.3093, dt: 1262.90ms, fracRes: 0.0066, norm(attn): 0.0405, norm(output): 0.1108, norm(x): 0.1114, norm(y): 0.9998, norm:9.2307, tok/sec: 103786.20, flops:108.93, batch-reuse:1
@ 98 train 7.7476 , allloss: 17.7423, dt: 1258.65ms, fracRes: 0.0066, norm(attn): 0.0417, norm(output): 0.1152, norm(x): 0.1136, norm(y): 0.9998, norm:8.6629, tok/sec: 104136.57, flops:109.29, batch-reuse:1
@ 99 train 7.6908 , allloss: 17.4932, dt: 1275.74ms, fracRes: 0.0067, norm(attn): 0.0420, norm(output): 0.1167, norm(x): 0.1151, norm(y): 0.9998, norm:8.6264, tok/sec: 102741.70, flops:107.83, batch-reuse:1
@ 100 train 7.6533 , allloss: 17.6910, dt: 1283.88ms, fracRes: 0.0066, norm(attn): 0.0413, norm(output): 0.1167, norm(x): 0.1150, norm(y): 0.9999, norm:8.7530, tok/sec: 102090.48, flops:107.15, batch-reuse:1
@ 101 train 7.5476 , allloss: 17.9275, dt: 1278.68ms, fracRes: 0.0066, norm(attn): 0.0403, norm(output): 0.1157, norm(x): 0.1142, norm(y): 0.9999, norm:9.0357, tok/sec: 102505.82, flops:107.58, batch-reuse:1
@ 102 train 7.5911 , allloss: 17.8675, dt: 1261.05ms, fracRes: 0.0065, norm(attn): 0.0403, norm(output): 0.1157, norm(x): 0.1138, norm(y): 0.9999, norm:8.6007, tok/sec: 103938.86, flops:109.09, batch-reuse:1
@ 103 train 7.5977 , allloss: 17.2305, dt: 1259.59ms, fracRes: 0.0066, norm(attn): 0.0417, norm(output): 0.1162, norm(x): 0.1145, norm(y): 0.9999, norm:7.9073, tok/sec: 104058.99, flops:109.21, batch-reuse:1
@ 104 train 7.6482 , allloss: 16.5235, dt: 1259.06ms, fracRes: 0.0066, norm(attn): 0.0427, norm(output): 0.1167, norm(x): 0.1161, norm(y): 0.9999, norm:7.2854, tok/sec: 104103.11, flops:109.26, batch-reuse:1
@ 105 train 7.6005 , allloss: 16.4525, dt: 1241.87ms, fracRes: 0.0067, norm(attn): 0.0427, norm(output): 0.1172, norm(x): 0.1169, norm(y): 0.9999, norm:7.7448, tok/sec: 105543.70, flops:110.77, batch-reuse:1
@ 106 train 7.5381 , allloss: 16.7037, dt: 1240.28ms, fracRes: 0.0067, norm(attn): 0.0427, norm(output): 0.1172, norm(x): 0.1167, norm(y): 1.0000, norm:8.6234, tok/sec: 105679.76, flops:110.91, batch-reuse:1
@ 107 train 7.5059 , allloss: 16.0419, dt: 1257.90ms, fracRes: 0.0067, norm(attn): 0.0430, norm(output): 0.1172, norm(x): 0.1168, norm(y): 1.0000, norm:7.7010, tok/sec: 104198.90, flops:109.36, batch-reuse:1
@ 108 train 7.4795 , allloss: 15.2975, dt: 1296.23ms, fracRes: 0.0067, norm(attn): 0.0432, norm(output): 0.1172, norm(x): 0.1171, norm(y): 1.0000, norm:6.6915, tok/sec: 101117.59, flops:106.12, batch-reuse:1
@ 109 train 7.4248 , allloss: 15.0114, dt: 1254.75ms, fracRes: 0.0067, norm(attn): 0.0432, norm(output): 0.1172, norm(x): 0.1171, norm(y): 1.0000, norm:6.4463, tok/sec: 104460.59, flops:109.63, batch-reuse:1
@ 110 train 7.4774 , allloss: 15.4046, dt: 1249.38ms, fracRes: 0.0067, norm(attn): 0.0430, norm(output): 0.1172, norm(x): 0.1167, norm(y): 1.0000, norm:6.9799, tok/sec: 104909.69, flops:110.10, batch-reuse:1
@ 111 train 7.4480 , allloss: 15.2299, dt: 1264.64ms, fracRes: 0.0067, norm(attn): 0.0427, norm(output): 0.1167, norm(x): 0.1159, norm(y): 1.0000, norm:6.4411, tok/sec: 103643.83, flops:108.78, batch-reuse:1
@ 112 train 7.4598 , allloss: 14.4503, dt: 1241.26ms, fracRes: 0.0068, norm(attn): 0.0439, norm(output): 0.1177, norm(x): 0.1173, norm(y): 1.0001, norm:5.7728, tok/sec: 105596.15, flops:110.83, batch-reuse:1
@ 113 train 7.4161 , allloss: 14.9468, dt: 1262.94ms, fracRes: 0.0067, norm(attn): 0.0437, norm(output): 0.1167, norm(x): 0.1158, norm(y): 1.0000, norm:7.5931, tok/sec: 103783.42, flops:108.92, batch-reuse:1
@ 114 train 7.4085 , allloss: 14.3461, dt: 1271.35ms, fracRes: 0.0068, norm(attn): 0.0442, norm(output): 0.1177, norm(x): 0.1182, norm(y): 1.0001, norm:6.5440, tok/sec: 103096.72, flops:108.20, batch-reuse:1
@ 115 train 7.3557 , allloss: 14.3217, dt: 1261.57ms, fracRes: 0.0068, norm(attn): 0.0442, norm(output): 0.1182, norm(x): 0.1188, norm(y): 1.0001, norm:6.1188, tok/sec: 103896.22, flops:109.04, batch-reuse:1
@ 116 train 7.3242 , allloss: 14.4320, dt: 1284.04ms, fracRes: 0.0068, norm(attn): 0.0432, norm(output): 0.1182, norm(x): 0.1188, norm(y): 1.0001, norm:6.2248, tok/sec: 102077.63, flops:107.13, batch-reuse:1
@ 117 train 7.3121 , allloss: 14.8480, dt: 1276.65ms, fracRes: 0.0068, norm(attn): 0.0427, norm(output): 0.1177, norm(x): 0.1183, norm(y): 1.0001, norm:6.7693, tok/sec: 102668.98, flops:107.75, batch-reuse:1
@ 118 train 7.3219 , allloss: 14.7831, dt: 1285.42ms, fracRes: 0.0068, norm(attn): 0.0427, norm(output): 0.1191, norm(x): 0.1196, norm(y): 1.0001, norm:6.9672, tok/sec: 101967.84, flops:107.02, batch-reuse:1
@ 119 train 7.2736 , allloss: 14.7899, dt: 1260.28ms, fracRes: 0.0068, norm(attn): 0.0427, norm(output): 0.1201, norm(x): 0.1198, norm(y): 1.0001, norm:6.9321, tok/sec: 104002.29, flops:109.15, batch-reuse:1
@ 120 train 7.4539 , allloss: 14.2853, dt: 1250.50ms, fracRes: 0.0068, norm(attn): 0.0432, norm(output): 0.1221, norm(x): 0.1210, norm(y): 1.0002, norm:5.9272, tok/sec: 104815.68, flops:110.01, batch-reuse:1
@ 121 train 7.5051 , allloss: 14.6260, dt: 1258.01ms, fracRes: 0.0068, norm(attn): 0.0430, norm(output): 0.1230, norm(x): 0.1207, norm(y): 1.0002, norm:6.3186, tok/sec: 104190.04, flops:109.35, batch-reuse:1
@ 122 train 7.4534 , allloss: 14.3100, dt: 1267.76ms, fracRes: 0.0068, norm(attn): 0.0430, norm(output): 0.1245, norm(x): 0.1222, norm(y): 1.0002, norm:5.8186, tok/sec: 103388.61, flops:108.51, batch-reuse:1
@ 123 train 7.3155 , allloss: 14.1919, dt: 1265.56ms, fracRes: 0.0068, norm(attn): 0.0427, norm(output): 0.1230, norm(x): 0.1214, norm(y): 1.0002, norm:5.7402, tok/sec: 103568.17, flops:108.70, batch-reuse:1
@ 124 train 7.3276 , allloss: 13.9126, dt: 1248.89ms, fracRes: 0.0068, norm(attn): 0.0430, norm(output): 0.1235, norm(x): 0.1217, norm(y): 1.0002, norm:5.3596, tok/sec: 104950.68, flops:110.15, batch-reuse:1
@ 125 train 7.3385 , allloss: 13.5243, dt: 1257.01ms, fracRes: 0.0068, norm(attn): 0.0432, norm(output): 0.1245, norm(x): 0.1227, norm(y): 1.0002, norm:4.9432, tok/sec: 104273.18, flops:109.44, batch-reuse:1
@ 126 train 7.3624 , allloss: 14.2813, dt: 1275.11ms, fracRes: 0.0067, norm(attn): 0.0417, norm(output): 0.1206, norm(x): 0.1204, norm(y): 1.0002, norm:6.9195, tok/sec: 102792.49, flops:107.88, batch-reuse:1
@ 127 train 7.2771 , allloss: 13.6891, dt: 1257.76ms, fracRes: 0.0069, norm(attn): 0.0432, norm(output): 0.1260, norm(x): 0.1254, norm(y): 1.0002, norm:6.9674, tok/sec: 104210.79, flops:109.37, batch-reuse:1
@ 128 train 7.2027 , allloss: 13.2278, dt: 1256.63ms, fracRes: 0.0068, norm(attn): 0.0430, norm(output): 0.1245, norm(x): 0.1231, norm(y): 1.0002, norm:4.9926, tok/sec: 104304.18, flops:109.47, batch-reuse:1
@ 129 train 7.4221 , allloss: 13.8752, dt: 1282.76ms, fracRes: 0.0067, norm(attn): 0.0422, norm(output): 0.1230, norm(x): 0.1213, norm(y): 1.0002, norm:7.5463, tok/sec: 102179.99, flops:107.24, batch-reuse:1
@ 130 train 7.3207 , allloss: 13.5977, dt: 1277.10ms, fracRes: 0.0069, norm(attn): 0.0430, norm(output): 0.1260, norm(x): 0.1259, norm(y): 1.0003, norm:6.1037, tok/sec: 102632.88, flops:107.72, batch-reuse:1
@ 131 train 7.3115 , allloss: 13.5190, dt: 1267.75ms, fracRes: 0.0070, norm(attn): 0.0435, norm(output): 0.1260, norm(x): 0.1266, norm(y): 1.0003, norm:6.2794, tok/sec: 103389.18, flops:108.51, batch-reuse:1
@ 132 train 7.3417 , allloss: 13.2503, dt: 1287.65ms, fracRes: 0.0069, norm(attn): 0.0435, norm(output): 0.1260, norm(x): 0.1259, norm(y): 1.0003, norm:5.9482, tok/sec: 101791.25, flops:106.83, batch-reuse:1
@ 133 train 7.2538 , allloss: 14.2952, dt: 1283.09ms, fracRes: 0.0068, norm(attn): 0.0425, norm(output): 0.1250, norm(x): 0.1242, norm(y): 1.0003, norm:7.1651, tok/sec: 102153.42, flops:107.21, batch-reuse:1
@ 134 train 7.3076 , allloss: 14.3441, dt: 1277.77ms, fracRes: 0.0068, norm(attn): 0.0422, norm(output): 0.1245, norm(x): 0.1242, norm(y): 1.0003, norm:7.1325, tok/sec: 102578.67, flops:107.66, batch-reuse:1
@ 135 train 7.1911 , allloss: 14.0528, dt: 1258.57ms, fracRes: 0.0068, norm(attn): 0.0432, norm(output): 0.1260, norm(x): 0.1249, norm(y): 1.0003, norm:6.6806, tok/sec: 104143.79, flops:109.30, batch-reuse:1
@ 136 train 7.2317 , allloss: 13.6957, dt: 1267.94ms, fracRes: 0.0069, norm(attn): 0.0447, norm(output): 0.1260, norm(x): 0.1266, norm(y): 1.0003, norm:6.0978, tok/sec: 103374.23, flops:108.49, batch-reuse:1
@ 137 train 7.1206 , allloss: 13.9024, dt: 1246.11ms, fracRes: 0.0070, norm(attn): 0.0452, norm(output): 0.1270, norm(x): 0.1267, norm(y): 1.0003, norm:6.8204, tok/sec: 105184.86, flops:110.39, batch-reuse:1
@ 138 train 7.1070 , allloss: 13.3379, dt: 1268.33ms, fracRes: 0.0070, norm(attn): 0.0466, norm(output): 0.1260, norm(x): 0.1268, norm(y): 1.0003, norm:6.1243, tok/sec: 103342.14, flops:108.46, batch-reuse:1
@ 139 train 7.0996 , allloss: 13.4984, dt: 1285.99ms, fracRes: 0.0069, norm(attn): 0.0464, norm(output): 0.1260, norm(x): 0.1270, norm(y): 1.0004, norm:6.9118, tok/sec: 101923.28, flops:106.97, batch-reuse:1
@ 140 train 7.0960 , allloss: 13.5057, dt: 1269.10ms, fracRes: 0.0070, norm(attn): 0.0469, norm(output): 0.1270, norm(x): 0.1270, norm(y): 1.0004, norm:6.6353, tok/sec: 103279.42, flops:108.39, batch-reuse:1
@ 141 train 7.1012 , allloss: 12.5302, dt: 1264.68ms, fracRes: 0.0071, norm(attn): 0.0491, norm(output): 0.1270, norm(x): 0.1280, norm(y): 1.0004, norm:5.4406, tok/sec: 103640.71, flops:108.77, batch-reuse:1
@ 142 train 7.2270 , allloss: 13.0713, dt: 1291.20ms, fracRes: 0.0072, norm(attn): 0.0496, norm(output): 0.1309, norm(x): 0.1291, norm(y): 1.0004, norm:7.0350, tok/sec: 101511.98, flops:106.54, batch-reuse:1
@ 143 train 7.1580 , allloss: 13.6320, dt: 1283.22ms, fracRes: 0.0071, norm(attn): 0.0469, norm(output): 0.1299, norm(x): 0.1292, norm(y): 1.0004, norm:6.8446, tok/sec: 102142.87, flops:107.20, batch-reuse:1
@ 144 train 7.1307 , allloss: 12.9610, dt: 1268.40ms, fracRes: 0.0071, norm(attn): 0.0474, norm(output): 0.1318, norm(x): 0.1295, norm(y): 1.0004, norm:6.4782, tok/sec: 103336.16, flops:108.45, batch-reuse:1
@ 145 train 7.1241 , allloss: 12.9646, dt: 1262.20ms, fracRes: 0.0071, norm(attn): 0.0474, norm(output): 0.1328, norm(x): 0.1315, norm(y): 1.0005, norm:6.3836, tok/sec: 103843.90, flops:108.99, batch-reuse:1
@ 146 train 7.2740 , allloss: 13.1035, dt: 1289.23ms, fracRes: 0.0072, norm(attn): 0.0474, norm(output): 0.1338, norm(x): 0.1335, norm(y): 1.0005, norm:5.8773, tok/sec: 101666.52, flops:106.70, batch-reuse:1
@ 147 train 7.1234 , allloss: 13.2220, dt: 1281.78ms, fracRes: 0.0071, norm(attn): 0.0459, norm(output): 0.1338, norm(x): 0.1330, norm(y): 1.0004, norm:6.0392, tok/sec: 102258.01, flops:107.32, batch-reuse:1
@ 148 train 7.0977 , allloss: 12.7588, dt: 1271.51ms, fracRes: 0.0069, norm(attn): 0.0464, norm(output): 0.1328, norm(x): 0.1322, norm(y): 1.0005, norm:5.5810, tok/sec: 103083.69, flops:108.19, batch-reuse:1
@ 149 train 6.9662 , allloss: 13.0915, dt: 1262.18ms, fracRes: 0.0070, norm(attn): 0.0461, norm(output): 0.1338, norm(x): 0.1335, norm(y): 1.0005, norm:5.9597, tok/sec: 103845.52, flops:108.99, batch-reuse:1
@ 150 train 7.2066 , allloss: 13.4491, dt: 1256.07ms, fracRes: 0.0072, norm(attn): 0.0469, norm(output): 0.1377, norm(x): 0.1353, norm(y): 1.0005, norm:6.5119, tok/sec: 104350.92, flops:109.52, batch-reuse:1
@ 151 train 6.9872 , allloss: 13.7691, dt: 1283.08ms, fracRes: 0.0071, norm(attn): 0.0454, norm(output): 0.1338, norm(x): 0.1349, norm(y): 1.0004, norm:7.5869, tok/sec: 102154.13, flops:107.21, batch-reuse:1
@ 152 train 6.9685 , allloss: 12.6471, dt: 1271.22ms, fracRes: 0.0071, norm(attn): 0.0459, norm(output): 0.1387, norm(x): 0.1357, norm(y): 1.0005, norm:5.5115, tok/sec: 103107.64, flops:108.21, batch-reuse:1
@ 153 train 6.9704 , allloss: 12.9020, dt: 1289.41ms, fracRes: 0.0070, norm(attn): 0.0437, norm(output): 0.1367, norm(x): 0.1354, norm(y): 1.0005, norm:5.6108, tok/sec: 101652.82, flops:106.69, batch-reuse:1
@ 154 train 7.0431 , allloss: 13.2763, dt: 1276.28ms, fracRes: 0.0071, norm(attn): 0.0437, norm(output): 0.1377, norm(x): 0.1360, norm(y): 1.0005, norm:6.2241, tok/sec: 102698.67, flops:107.78, batch-reuse:1
@ 155 train 7.1844 , allloss: 12.8498, dt: 1283.83ms, fracRes: 0.0074, norm(attn): 0.0447, norm(output): 0.1396, norm(x): 0.1376, norm(y): 1.0005, norm:5.7685, tok/sec: 102094.73, flops:107.15, batch-reuse:1
@ 156 train 7.0391 , allloss: 14.5709, dt: 1269.87ms, fracRes: 0.0071, norm(attn): 0.0427, norm(output): 0.1387, norm(x): 0.1357, norm(y): 1.0004, norm:10.8745, tok/sec: 103217.25, flops:108.33, batch-reuse:1
@ 157 train 7.1385 , allloss: 12.4779, dt: 1285.83ms, fracRes: 0.0074, norm(attn): 0.0474, norm(output): 0.1396, norm(x): 0.1388, norm(y): 1.0005, norm:5.6936, tok/sec: 101935.94, flops:106.98, batch-reuse:1
@ 158 train 7.1051 , allloss: 12.4562, dt: 1260.16ms, fracRes: 0.0073, norm(attn): 0.0488, norm(output): 0.1406, norm(x): 0.1399, norm(y): 1.0005, norm:5.1391, tok/sec: 104011.94, flops:109.16, batch-reuse:1
@ 159 train 7.1371 , allloss: 12.9374, dt: 1253.08ms, fracRes: 0.0072, norm(attn): 0.0496, norm(output): 0.1406, norm(x): 0.1397, norm(y): 1.0005, norm:6.2469, tok/sec: 104600.13, flops:109.78, batch-reuse:1
@ 160 train 7.0134 , allloss: 12.0153, dt: 1281.67ms, fracRes: 0.0073, norm(attn): 0.0520, norm(output): 0.1406, norm(x): 0.1402, norm(y): 1.0006, norm:4.9376, tok/sec: 102266.93, flops:107.33, batch-reuse:1
@ 161 train 7.0180 , allloss: 12.0241, dt: 1251.70ms, fracRes: 0.0074, norm(attn): 0.0518, norm(output): 0.1416, norm(x): 0.1409, norm(y): 1.0006, norm:4.7571, tok/sec: 104715.07, flops:109.90, batch-reuse:1
@ 162 train 7.1237 , allloss: 12.3044, dt: 1274.83ms, fracRes: 0.0074, norm(attn): 0.0510, norm(output): 0.1426, norm(x): 0.1430, norm(y): 1.0006, norm:5.1758, tok/sec: 102815.13, flops:107.91, batch-reuse:1
@ 163 train 7.0213 , allloss: 11.8952, dt: 1262.19ms, fracRes: 0.0074, norm(attn): 0.0513, norm(output): 0.1426, norm(x): 0.1439, norm(y): 1.0006, norm:4.8157, tok/sec: 103844.64, flops:108.99, batch-reuse:1
@ 164 train 6.9318 , allloss: 11.6495, dt: 1265.67ms, fracRes: 0.0074, norm(attn): 0.0513, norm(output): 0.1426, norm(x): 0.1437, norm(y): 1.0006, norm:5.0102, tok/sec: 103559.47, flops:108.69, batch-reuse:1
@ 165 train 7.0544 , allloss: 12.6810, dt: 1273.54ms, fracRes: 0.0071, norm(attn): 0.0471, norm(output): 0.1426, norm(x): 0.1442, norm(y): 1.0006, norm:6.3962, tok/sec: 102919.69, flops:108.02, batch-reuse:1
@ 166 train 6.9707 , allloss: 12.1999, dt: 1285.30ms, fracRes: 0.0073, norm(attn): 0.0491, norm(output): 0.1465, norm(x): 0.1460, norm(y): 1.0006, norm:5.9438, tok/sec: 101977.37, flops:107.03, batch-reuse:1
@ 167 train 6.9905 , allloss: 11.9600, dt: 1272.44ms, fracRes: 0.0073, norm(attn): 0.0491, norm(output): 0.1465, norm(x): 0.1466, norm(y): 1.0006, norm:5.1136, tok/sec: 103008.69, flops:108.11, batch-reuse:1
@ 168 train 6.9072 , allloss: 12.1623, dt: 1280.72ms, fracRes: 0.0072, norm(attn): 0.0483, norm(output): 0.1465, norm(x): 0.1459, norm(y): 1.0006, norm:5.2249, tok/sec: 102342.34, flops:107.41, batch-reuse:1
@ 169 train 6.9582 , allloss: 11.8515, dt: 1265.54ms, fracRes: 0.0072, norm(attn): 0.0515, norm(output): 0.1465, norm(x): 0.1457, norm(y): 1.0006, norm:4.8935, tok/sec: 103570.01, flops:108.70, batch-reuse:1
@ 170 train 6.9443 , allloss: 12.0334, dt: 1251.79ms, fracRes: 0.0072, norm(attn): 0.0518, norm(output): 0.1465, norm(x): 0.1460, norm(y): 1.0006, norm:6.0449, tok/sec: 104707.32, flops:109.89, batch-reuse:1
@ 171 train 6.9086 , allloss: 11.8278, dt: 1270.28ms, fracRes: 0.0073, norm(attn): 0.0576, norm(output): 0.1455, norm(x): 0.1454, norm(y): 1.0006, norm:5.8044, tok/sec: 103183.23, flops:108.29, batch-reuse:1
@ 172 train 6.9529 , allloss: 11.6640, dt: 1272.59ms, fracRes: 0.0074, norm(attn): 0.0559, norm(output): 0.1484, norm(x): 0.1475, norm(y): 1.0006, norm:4.8918, tok/sec: 102996.03, flops:108.10, batch-reuse:1
@ 173 train 6.9384 , allloss: 12.1548, dt: 1266.34ms, fracRes: 0.0072, norm(attn): 0.0537, norm(output): 0.1504, norm(x): 0.1489, norm(y): 1.0006, norm:5.8638, tok/sec: 103504.37, flops:108.63, batch-reuse:1
@ 174 train 7.0821 , allloss: 12.0657, dt: 1254.62ms, fracRes: 0.0072, norm(attn): 0.0527, norm(output): 0.1504, norm(x): 0.1493, norm(y): 1.0006, norm:5.0254, tok/sec: 104471.82, flops:109.65, batch-reuse:1
@ 175 train 6.9950 , allloss: 12.1425, dt: 1256.47ms, fracRes: 0.0072, norm(attn): 0.0564, norm(output): 0.1504, norm(x): 0.1492, norm(y): 1.0006, norm:6.2321, tok/sec: 104317.32, flops:109.48, batch-reuse:1
@ 176 train 7.0088 , allloss: 12.4145, dt: 1262.03ms, fracRes: 0.0073, norm(attn): 0.0569, norm(output): 0.1514, norm(x): 0.1503, norm(y): 1.0006, norm:7.1972, tok/sec: 103857.98, flops:109.00, batch-reuse:1
@ 177 train 6.9379 , allloss: 11.8402, dt: 1294.28ms, fracRes: 0.0075, norm(attn): 0.0571, norm(output): 0.1553, norm(x): 0.1525, norm(y): 1.0006, norm:5.7462, tok/sec: 101270.16, flops:106.28, batch-reuse:1
@ 178 train 7.0046 , allloss: 12.3435, dt: 1251.40ms, fracRes: 0.0071, norm(attn): 0.0559, norm(output): 0.1543, norm(x): 0.1527, norm(y): 1.0006, norm:5.6717, tok/sec: 104739.95, flops:109.93, batch-reuse:1
@ 179 train 6.8454 , allloss: 12.0286, dt: 1265.44ms, fracRes: 0.0071, norm(attn): 0.0559, norm(output): 0.1553, norm(x): 0.1535, norm(y): 1.0006, norm:5.6565, tok/sec: 103578.40, flops:108.71, batch-reuse:1
@ 180 train 6.9979 , allloss: 11.9531, dt: 1264.38ms, fracRes: 0.0073, norm(attn): 0.0574, norm(output): 0.1562, norm(x): 0.1556, norm(y): 1.0006, norm:5.3033, tok/sec: 103665.29, flops:108.80, batch-reuse:1
@ 181 train 6.9166 , allloss: 11.9980, dt: 1264.90ms, fracRes: 0.0074, norm(attn): 0.0571, norm(output): 0.1562, norm(x): 0.1557, norm(y): 1.0006, norm:5.8172, tok/sec: 103622.62, flops:108.75, batch-reuse:1
@ 182 train 6.9378 , allloss: 11.8621, dt: 1287.90ms, fracRes: 0.0073, norm(attn): 0.0574, norm(output): 0.1572, norm(x): 0.1570, norm(y): 1.0006, norm:5.2888, tok/sec: 101771.86, flops:106.81, batch-reuse:1
@ 183 train 6.8901 , allloss: 11.3895, dt: 1285.29ms, fracRes: 0.0073, norm(attn): 0.0613, norm(output): 0.1592, norm(x): 0.1583, norm(y): 1.0007, norm:4.8253, tok/sec: 101978.35, flops:107.03, batch-reuse:1
@ 184 train 6.7701 , allloss: 11.4151, dt: 1269.33ms, fracRes: 0.0071, norm(attn): 0.0610, norm(output): 0.1592, norm(x): 0.1602, norm(y): 1.0006, norm:5.4677, tok/sec: 103260.99, flops:108.37, batch-reuse:1
@ 185 train 6.8198 , allloss: 11.1222, dt: 1291.14ms, fracRes: 0.0074, norm(attn): 0.0664, norm(output): 0.1611, norm(x): 0.1612, norm(y): 1.0007, norm:5.7473, tok/sec: 101516.16, flops:106.54, batch-reuse:1
@ 186 train 7.0246 , allloss: 11.8064, dt: 1262.33ms, fracRes: 0.0072, norm(attn): 0.0605, norm(output): 0.1641, norm(x): 0.1634, norm(y): 1.0006, norm:6.8707, tok/sec: 103833.30, flops:108.97, batch-reuse:1
@ 187 train 7.1031 , allloss: 11.4336, dt: 1283.63ms, fracRes: 0.0073, norm(attn): 0.0596, norm(output): 0.1660, norm(x): 0.1645, norm(y): 1.0007, norm:4.9213, tok/sec: 102110.66, flops:107.17, batch-reuse:1
@ 188 train 6.9046 , allloss: 11.0411, dt: 1260.85ms, fracRes: 0.0074, norm(attn): 0.0581, norm(output): 0.1689, norm(x): 0.1661, norm(y): 1.0007, norm:4.3204, tok/sec: 103955.45, flops:109.10, batch-reuse:1
@ 189 train 7.0384 , allloss: 11.4472, dt: 1277.50ms, fracRes: 0.0074, norm(attn): 0.0542, norm(output): 0.1709, norm(x): 0.1690, norm(y): 1.0007, norm:4.5868, tok/sec: 102600.15, flops:107.68, batch-reuse:1
@ 190 train 6.9968 , allloss: 11.5022, dt: 1263.48ms, fracRes: 0.0073, norm(attn): 0.0532, norm(output): 0.1709, norm(x): 0.1695, norm(y): 1.0007, norm:4.6203, tok/sec: 103738.53, flops:108.88, batch-reuse:1
@ 191 train 6.9552 , allloss: 11.5580, dt: 1255.87ms, fracRes: 0.0074, norm(attn): 0.0549, norm(output): 0.1709, norm(x): 0.1688, norm(y): 1.0008, norm:4.8145, tok/sec: 104367.62, flops:109.54, batch-reuse:1
@ 192 train 7.0081 , allloss: 11.3147, dt: 1284.99ms, fracRes: 0.0075, norm(attn): 0.0571, norm(output): 0.1719, norm(x): 0.1700, norm(y): 1.0008, norm:4.4457, tok/sec: 102002.38, flops:107.05, batch-reuse:1
@ 193 train 6.8913 , allloss: 11.0357, dt: 1263.40ms, fracRes: 0.0074, norm(attn): 0.0576, norm(output): 0.1719, norm(x): 0.1709, norm(y): 1.0008, norm:4.5158, tok/sec: 103745.50, flops:108.88, batch-reuse:1
@ 194 train 7.0251 , allloss: 10.9897, dt: 1243.14ms, fracRes: 0.0076, norm(attn): 0.0581, norm(output): 0.1719, norm(x): 0.1716, norm(y): 1.0008, norm:4.3605, tok/sec: 105436.20, flops:110.66, batch-reuse:1
@ 195 train 6.9777 , allloss: 11.0553, dt: 1255.16ms, fracRes: 0.0076, norm(attn): 0.0608, norm(output): 0.1729, norm(x): 0.1719, norm(y): 1.0008, norm:4.6950, tok/sec: 104426.52, flops:109.60, batch-reuse:1
@ 196 train 6.8841 , allloss: 10.7628, dt: 1268.51ms, fracRes: 0.0075, norm(attn): 0.0640, norm(output): 0.1729, norm(x): 0.1727, norm(y): 1.0008, norm:4.7584, tok/sec: 103327.15, flops:108.44, batch-reuse:1
@ 197 train 6.9035 , allloss: 11.0438, dt: 1289.35ms, fracRes: 0.0075, norm(attn): 0.0618, norm(output): 0.1729, norm(x): 0.1735, norm(y): 1.0008, norm:5.7905, tok/sec: 101657.82, flops:106.69, batch-reuse:1
@ 198 train 6.8720 , allloss: 10.6441, dt: 1289.34ms, fracRes: 0.0076, norm(attn): 0.0654, norm(output): 0.1729, norm(x): 0.1738, norm(y): 1.0009, norm:5.7907, tok/sec: 101658.47, flops:106.69, batch-reuse:1
@ 199 train 6.9582 , allloss: 11.1825, dt: 1254.85ms, fracRes: 0.0074, norm(attn): 0.0576, norm(output): 0.1758, norm(x): 0.1761, norm(y): 1.0008, norm:6.3070, tok/sec: 104452.21, flops:109.62, batch-reuse:1
@ 200 train 6.9496 , allloss: 10.8472, dt: 1278.38ms, fracRes: 0.0075, norm(attn): 0.0559, norm(output): 0.1787, norm(x): 0.1775, norm(y): 1.0008, norm:5.0998, tok/sec: 102530.12, flops:107.61, batch-reuse:1
@ 201 train 6.9470 , allloss: 10.6629, dt: 1253.57ms, fracRes: 0.0076, norm(attn): 0.0591, norm(output): 0.1777, norm(x): 0.1777, norm(y): 1.0009, norm:5.7511, tok/sec: 104559.31, flops:109.74, batch-reuse:1
@ 202 train 7.0060 , allloss: 10.8681, dt: 1257.18ms, fracRes: 0.0077, norm(attn): 0.0557, norm(output): 0.1816, norm(x): 0.1794, norm(y): 1.0008, norm:6.1061, tok/sec: 104258.56, flops:109.42, batch-reuse:1
@ 203 train 6.9432 , allloss: 11.0837, dt: 1261.78ms, fracRes: 0.0076, norm(attn): 0.0571, norm(output): 0.1826, norm(x): 0.1798, norm(y): 1.0008, norm:5.6727, tok/sec: 103878.63, flops:109.02, batch-reuse:1
@ 204 train 6.9265 , allloss: 10.8520, dt: 1250.81ms, fracRes: 0.0077, norm(attn): 0.0576, norm(output): 0.1826, norm(x): 0.1807, norm(y): 1.0009, norm:5.1386, tok/sec: 104789.38, flops:109.98, batch-reuse:1
@ 205 train 6.8934 , allloss: 10.6669, dt: 1246.55ms, fracRes: 0.0076, norm(attn): 0.0588, norm(output): 0.1846, norm(x): 0.1814, norm(y): 1.0009, norm:4.7618, tok/sec: 105147.58, flops:110.35, batch-reuse:1
@ 206 train 6.9363 , allloss: 10.5542, dt: 1263.08ms, fracRes: 0.0077, norm(attn): 0.0603, norm(output): 0.1846, norm(x): 0.1817, norm(y): 1.0009, norm:4.6170, tok/sec: 103771.68, flops:108.91, batch-reuse:1
@ 207 train 6.8214 , allloss: 10.2578, dt: 1249.25ms, fracRes: 0.0078, norm(attn): 0.0625, norm(output): 0.1855, norm(x): 0.1824, norm(y): 1.0009, norm:4.7582, tok/sec: 104920.30, flops:110.12, batch-reuse:1
@ 208 train 6.9479 , allloss: 10.3822, dt: 1259.27ms, fracRes: 0.0078, norm(attn): 0.0649, norm(output): 0.1865, norm(x): 0.1826, norm(y): 1.0009, norm:5.8679, tok/sec: 104085.70, flops:109.24, batch-reuse:1
@ 209 train 6.9430 , allloss: 10.6604, dt: 1259.04ms, fracRes: 0.0075, norm(attn): 0.0588, norm(output): 0.1875, norm(x): 0.1866, norm(y): 1.0008, norm:5.0391, tok/sec: 104104.47, flops:109.26, batch-reuse:1
@ 210 train 6.9047 , allloss: 10.7833, dt: 1264.57ms, fracRes: 0.0072, norm(attn): 0.0583, norm(output): 0.1875, norm(x): 0.1875, norm(y): 1.0008, norm:5.0802, tok/sec: 103649.29, flops:108.78, batch-reuse:1
@ 211 train 6.8315 , allloss: 10.6496, dt: 1281.27ms, fracRes: 0.0075, norm(attn): 0.0615, norm(output): 0.1875, norm(x): 0.1869, norm(y): 1.0009, norm:5.5347, tok/sec: 102298.35, flops:107.36, batch-reuse:1
@ 212 train 6.9236 , allloss: 10.7837, dt: 1275.02ms, fracRes: 0.0078, norm(attn): 0.0615, norm(output): 0.1895, norm(x): 0.1887, norm(y): 1.0009, norm:5.8179, tok/sec: 102799.93, flops:107.89, batch-reuse:1
@ 213 train 6.8137 , allloss: 10.7463, dt: 1262.20ms, fracRes: 0.0074, norm(attn): 0.0593, norm(output): 0.1885, norm(x): 0.1893, norm(y): 1.0009, norm:6.0971, tok/sec: 103843.99, flops:108.99, batch-reuse:1
@ 214 train 6.8498 , allloss: 10.7088, dt: 1253.58ms, fracRes: 0.0074, norm(attn): 0.0586, norm(output): 0.1904, norm(x): 0.1905, norm(y): 1.0009, norm:6.0515, tok/sec: 104558.22, flops:109.74, batch-reuse:1
@ 215 train 6.7562 , allloss: 10.3978, dt: 1245.71ms, fracRes: 0.0076, norm(attn): 0.0588, norm(output): 0.1904, norm(x): 0.1912, norm(y): 1.0009, norm:6.2653, tok/sec: 105218.44, flops:110.43, batch-reuse:1
@ 216 train 6.7847 , allloss: 10.4226, dt: 1250.33ms, fracRes: 0.0074, norm(attn): 0.0601, norm(output): 0.1914, norm(x): 0.1913, norm(y): 1.0009, norm:6.6080, tok/sec: 104829.75, flops:110.02, batch-reuse:1
@ 217 train 6.8544 , allloss: 10.3034, dt: 1262.32ms, fracRes: 0.0075, norm(attn): 0.0603, norm(output): 0.1914, norm(x): 0.1924, norm(y): 1.0009, norm:5.5917, tok/sec: 103834.56, flops:108.98, batch-reuse:1
@ 218 train 6.8568 , allloss: 10.4263, dt: 1279.72ms, fracRes: 0.0075, norm(attn): 0.0579, norm(output): 0.1934, norm(x): 0.1931, norm(y): 1.0009, norm:7.8644, tok/sec: 102422.61, flops:107.49, batch-reuse:1
@ 219 train 7.0148 , allloss: 10.3966, dt: 1255.83ms, fracRes: 0.0074, norm(attn): 0.0674, norm(output): 0.1914, norm(x): 0.1923, norm(y): 1.0010, norm:8.7295, tok/sec: 104370.95, flops:109.54, batch-reuse:1
@ 220 train 6.9145 , allloss: 10.3679, dt: 1256.39ms, fracRes: 0.0074, norm(attn): 0.0635, norm(output): 0.1982, norm(x): 0.1953, norm(y): 1.0009, norm:6.6263, tok/sec: 104323.99, flops:109.49, batch-reuse:1
@ 221 train 6.8863 , allloss: 10.3437, dt: 1262.06ms, fracRes: 0.0075, norm(attn): 0.0659, norm(output): 0.1982, norm(x): 0.1961, norm(y): 1.0009, norm:5.7684, tok/sec: 103855.92, flops:109.00, batch-reuse:1
@ 222 train 6.8373 , allloss: 10.1031, dt: 1286.26ms, fracRes: 0.0076, norm(attn): 0.0603, norm(output): 0.2002, norm(x): 0.1983, norm(y): 1.0009, norm:5.5296, tok/sec: 101901.93, flops:106.95, batch-reuse:1
@ 223 train 6.8773 , allloss: 9.9768, dt: 1273.12ms, fracRes: 0.0075, norm(attn): 0.0630, norm(output): 0.2021, norm(x): 0.1989, norm(y): 1.0010, norm:6.1437, tok/sec: 102953.19, flops:108.05, batch-reuse:1
@ 224 train 6.8135 , allloss: 9.9757, dt: 1280.22ms, fracRes: 0.0076, norm(attn): 0.0610, norm(output): 0.2031, norm(x): 0.2001, norm(y): 1.0009, norm:6.1757, tok/sec: 102382.19, flops:107.45, batch-reuse:1
@ 225 train 6.8469 , allloss: 10.0180, dt: 1268.10ms, fracRes: 0.0077, norm(attn): 0.0610, norm(output): 0.2031, norm(x): 0.2023, norm(y): 1.0010, norm:5.5547, tok/sec: 103360.64, flops:108.48, batch-reuse:1
@ 226 train 6.8761 , allloss: 10.0386, dt: 1256.30ms, fracRes: 0.0076, norm(attn): 0.0605, norm(output): 0.2041, norm(x): 0.2039, norm(y): 1.0010, norm:5.2725, tok/sec: 104331.61, flops:109.50, batch-reuse:1
@ 227 train 6.8545 , allloss: 9.8948, dt: 1255.90ms, fracRes: 0.0076, norm(attn): 0.0605, norm(output): 0.2041, norm(x): 0.2049, norm(y): 1.0010, norm:5.1556, tok/sec: 104364.63, flops:109.53, batch-reuse:1
@ 228 train 6.8751 , allloss: 9.8895, dt: 1265.38ms, fracRes: 0.0078, norm(attn): 0.0613, norm(output): 0.2041, norm(x): 0.2057, norm(y): 1.0010, norm:6.5849, tok/sec: 103583.16, flops:108.71, batch-reuse:1
@ 229 train 6.8840 , allloss: 10.1583, dt: 1241.18ms, fracRes: 0.0075, norm(attn): 0.0552, norm(output): 0.2090, norm(x): 0.2093, norm(y): 1.0009, norm:6.3745, tok/sec: 105602.74, flops:110.83, batch-reuse:1
@ 230 train 6.8621 , allloss: 9.9595, dt: 1262.01ms, fracRes: 0.0076, norm(attn): 0.0549, norm(output): 0.2148, norm(x): 0.2114, norm(y): 1.0009, norm:5.9608, tok/sec: 103859.55, flops:109.00, batch-reuse:1
@ 231 train 6.7751 , allloss: 9.7156, dt: 1267.86ms, fracRes: 0.0077, norm(attn): 0.0566, norm(output): 0.2148, norm(x): 0.2114, norm(y): 1.0011, norm:5.4236, tok/sec: 103380.17, flops:108.50, batch-reuse:1
@ 232 train 6.7743 , allloss: 9.7627, dt: 1267.81ms, fracRes: 0.0077, norm(attn): 0.0554, norm(output): 0.2148, norm(x): 0.2122, norm(y): 1.0010, norm:6.4653, tok/sec: 103384.32, flops:108.50, batch-reuse:1
@ 233 train 6.8787 , allloss: 9.4254, dt: 1250.01ms, fracRes: 0.0085, norm(attn): 0.0645, norm(output): 0.2158, norm(x): 0.2127, norm(y): 1.0012, norm:8.1803, tok/sec: 104856.64, flops:110.05, batch-reuse:1
@ 234 train 6.6942 , allloss: 9.3944, dt: 1259.61ms, fracRes: 0.0087, norm(attn): 0.0625, norm(output): 0.2158, norm(x): 0.2133, norm(y): 1.0011, norm:8.1771, tok/sec: 104057.67, flops:109.21, batch-reuse:1
@ 235 train 6.8774 , allloss: 9.5697, dt: 1284.65ms, fracRes: 0.0089, norm(attn): 0.0664, norm(output): 0.2148, norm(x): 0.2123, norm(y): 1.0011, norm:9.0156, tok/sec: 102029.13, flops:107.08, batch-reuse:1
@ 236 train 6.6998 , allloss: 9.1221, dt: 1247.64ms, fracRes: 0.0095, norm(attn): 0.0688, norm(output): 0.2178, norm(x): 0.2156, norm(y): 1.0012, norm:5.8656, tok/sec: 105055.85, flops:110.26, batch-reuse:1
@ 237 train 6.8147 , allloss: 9.2178, dt: 1256.00ms, fracRes: 0.0094, norm(attn): 0.0669, norm(output): 0.2178, norm(x): 0.2155, norm(y): 1.0011, norm:5.9348, tok/sec: 104356.88, flops:109.52, batch-reuse:1
@ 238 train 6.8018 , allloss: 9.3578, dt: 1248.54ms, fracRes: 0.0087, norm(attn): 0.0698, norm(output): 0.2188, norm(x): 0.2168, norm(y): 1.0011, norm:8.7301, tok/sec: 104980.48, flops:110.18, batch-reuse:1
@ 239 train 6.8318 , allloss: 9.3340, dt: 1266.05ms, fracRes: 0.0091, norm(attn): 0.0771, norm(output): 0.2188, norm(x): 0.2188, norm(y): 1.0010, norm:8.8261, tok/sec: 103528.05, flops:108.65, batch-reuse:1
@ 240 train 6.8735 , allloss: 9.4061, dt: 1284.50ms, fracRes: 0.0091, norm(attn): 0.0728, norm(output): 0.2227, norm(x): 0.2238, norm(y): 1.0011, norm:7.4608, tok/sec: 102040.89, flops:107.09, batch-reuse:1
@ 241 train 6.8234 , allloss: 9.6394, dt: 1242.91ms, fracRes: 0.0086, norm(attn): 0.0654, norm(output): 0.2285, norm(x): 0.2261, norm(y): 1.0011, norm:7.3238, tok/sec: 105455.37, flops:110.68, batch-reuse:1
@ 242 train 6.8154 , allloss: 9.7236, dt: 1269.28ms, fracRes: 0.0084, norm(attn): 0.0630, norm(output): 0.2305, norm(x): 0.2276, norm(y): 1.0011, norm:6.1012, tok/sec: 103264.85, flops:108.38, batch-reuse:1
@ 243 train 6.6603 , allloss: 9.5999, dt: 1258.77ms, fracRes: 0.0082, norm(attn): 0.0601, norm(output): 0.2324, norm(x): 0.2291, norm(y): 1.0011, norm:6.0928, tok/sec: 104126.83, flops:109.28, batch-reuse:1
@ 244 train 6.8558 , allloss: 9.6946, dt: 1265.72ms, fracRes: 0.0083, norm(attn): 0.0598, norm(output): 0.2344, norm(x): 0.2323, norm(y): 1.0011, norm:6.1679, tok/sec: 103555.20, flops:108.68, batch-reuse:1
@ 245 train 6.6627 , allloss: 9.3660, dt: 1245.84ms, fracRes: 0.0087, norm(attn): 0.0645, norm(output): 0.2354, norm(x): 0.2349, norm(y): 1.0012, norm:5.8575, tok/sec: 105208.13, flops:110.42, batch-reuse:1
@ 246 train 6.8971 , allloss: 9.6122, dt: 1249.08ms, fracRes: 0.0085, norm(attn): 0.0649, norm(output): 0.2354, norm(x): 0.2373, norm(y): 1.0012, norm:5.1788, tok/sec: 104935.02, flops:110.13, batch-reuse:1
@ 247 train 6.7747 , allloss: 9.4803, dt: 1261.33ms, fracRes: 0.0083, norm(attn): 0.0625, norm(output): 0.2383, norm(x): 0.2391, norm(y): 1.0012, norm:4.9324, tok/sec: 103915.32, flops:109.06, batch-reuse:1
@ 248 train 6.7360 , allloss: 9.4305, dt: 1274.70ms, fracRes: 0.0084, norm(attn): 0.0654, norm(output): 0.2461, norm(x): 0.2413, norm(y): 1.0012, norm:5.8777, tok/sec: 102825.46, flops:107.92, batch-reuse:1
@ 249 train 6.6838 , allloss: 9.4329, dt: 1254.26ms, fracRes: 0.0083, norm(attn): 0.0625, norm(output): 0.2471, norm(x): 0.2440, norm(y): 1.0012, norm:5.6470, tok/sec: 104501.73, flops:109.68, batch-reuse:1
@ 250 train 6.7321 , allloss: 9.5201, dt: 1255.13ms, fracRes: 0.0080, norm(attn): 0.0615, norm(output): 0.2490, norm(x): 0.2468, norm(y): 1.0012, norm:4.8774, tok/sec: 104429.34, flops:109.60, batch-reuse:1
@ 251 train 6.6627 , allloss: 9.3737, dt: 1264.92ms, fracRes: 0.0080, norm(attn): 0.0645, norm(output): 0.2500, norm(x): 0.2485, norm(y): 1.0013, norm:5.1942, tok/sec: 103620.82, flops:108.75, batch-reuse:1
@ 252 train 6.8184 , allloss: 9.5385, dt: 1262.23ms, fracRes: 0.0080, norm(attn): 0.0630, norm(output): 0.2520, norm(x): 0.2520, norm(y): 1.0012, norm:5.0912, tok/sec: 103841.80, flops:108.98, batch-reuse:1
@ 253 train 6.6721 , allloss: 9.1481, dt: 1266.96ms, fracRes: 0.0082, norm(attn): 0.0649, norm(output): 0.2539, norm(x): 0.2535, norm(y): 1.0012, norm:5.5010, tok/sec: 103453.59, flops:108.58, batch-reuse:1
@ 254 train 6.6352 , allloss: 8.7558, dt: 1297.82ms, fracRes: 0.0086, norm(attn): 0.0732, norm(output): 0.2539, norm(x): 0.2533, norm(y): 1.0013, norm:4.9730, tok/sec: 100994.04, flops:106.00, batch-reuse:1
@ 255 train 6.6435 , allloss: 8.6856, dt: 1288.95ms, fracRes: 0.0087, norm(attn): 0.0679, norm(output): 0.2520, norm(x): 0.2546, norm(y): 1.0013, norm:4.3818, tok/sec: 101688.67, flops:106.72, batch-reuse:1
@ 256 train 6.6682 , allloss: 8.8539, dt: 1277.37ms, fracRes: 0.0082, norm(attn): 0.0640, norm(output): 0.2559, norm(x): 0.2568, norm(y): 1.0013, norm:4.2212, tok/sec: 102610.47, flops:107.69, batch-reuse:1
@ 257 train 6.7180 , allloss: 8.9578, dt: 1259.23ms, fracRes: 0.0081, norm(attn): 0.0630, norm(output): 0.2637, norm(x): 0.2595, norm(y): 1.0013, norm:4.1767, tok/sec: 104088.66, flops:109.24, batch-reuse:1
@ 258 train 6.6539 , allloss: 9.1355, dt: 1283.13ms, fracRes: 0.0078, norm(attn): 0.0588, norm(output): 0.2637, norm(x): 0.2623, norm(y): 1.0012, norm:4.7056, tok/sec: 102150.50, flops:107.21, batch-reuse:1
@ 259 train 6.6574 , allloss: 9.0478, dt: 1261.28ms, fracRes: 0.0078, norm(attn): 0.0623, norm(output): 0.2656, norm(x): 0.2649, norm(y): 1.0013, norm:4.2931, tok/sec: 103919.78, flops:109.07, batch-reuse:1
@ 260 train 6.7444 , allloss: 9.2097, dt: 1245.00ms, fracRes: 0.0076, norm(attn): 0.0623, norm(output): 0.2695, norm(x): 0.2679, norm(y): 1.0012, norm:4.0406, tok/sec: 105278.58, flops:110.49, batch-reuse:1
@ 261 train 6.6997 , allloss: 9.1590, dt: 1256.25ms, fracRes: 0.0075, norm(attn): 0.0588, norm(output): 0.2695, norm(x): 0.2695, norm(y): 1.0012, norm:4.3670, tok/sec: 104336.17, flops:109.50, batch-reuse:1
@ 262 train 6.7681 , allloss: 9.0553, dt: 1251.79ms, fracRes: 0.0075, norm(attn): 0.0645, norm(output): 0.2734, norm(x): 0.2711, norm(y): 1.0013, norm:5.1643, tok/sec: 104708.07, flops:109.89, batch-reuse:1
@ 263 train 6.7016 , allloss: 8.9346, dt: 1268.72ms, fracRes: 0.0075, norm(attn): 0.0615, norm(output): 0.2773, norm(x): 0.2733, norm(y): 1.0013, norm:5.0368, tok/sec: 103310.68, flops:108.43, batch-reuse:1
@ 264 train 6.6829 , allloss: 8.6894, dt: 1263.94ms, fracRes: 0.0078, norm(attn): 0.0688, norm(output): 0.2754, norm(x): 0.2732, norm(y): 1.0013, norm:4.1101, tok/sec: 103701.41, flops:108.84, batch-reuse:1
@ 265 train 6.6671 , allloss: 8.6012, dt: 1256.56ms, fracRes: 0.0081, norm(attn): 0.0708, norm(output): 0.2773, norm(x): 0.2744, norm(y): 1.0013, norm:3.7919, tok/sec: 104310.53, flops:109.48, batch-reuse:1
@ 266 train 6.6586 , allloss: 8.5485, dt: 1267.70ms, fracRes: 0.0081, norm(attn): 0.0728, norm(output): 0.2812, norm(x): 0.2788, norm(y): 1.0014, norm:3.6753, tok/sec: 103393.51, flops:108.51, batch-reuse:1
@ 267 train 6.6540 , allloss: 8.4622, dt: 1264.05ms, fracRes: 0.0082, norm(attn): 0.0747, norm(output): 0.2812, norm(x): 0.2791, norm(y): 1.0014, norm:3.5468, tok/sec: 103692.41, flops:108.83, batch-reuse:1
@ 268 train 6.7392 , allloss: 8.5980, dt: 1273.48ms, fracRes: 0.0085, norm(attn): 0.0718, norm(output): 0.2832, norm(x): 0.2808, norm(y): 1.0014, norm:4.2283, tok/sec: 102924.04, flops:108.02, batch-reuse:1
@ 269 train 6.6713 , allloss: 8.4102, dt: 1267.41ms, fracRes: 0.0087, norm(attn): 0.0732, norm(output): 0.2832, norm(x): 0.2828, norm(y): 1.0015, norm:3.2062, tok/sec: 103417.59, flops:108.54, batch-reuse:1
@ 270 train 6.7753 , allloss: 8.5453, dt: 1236.61ms, fracRes: 0.0086, norm(attn): 0.0659, norm(output): 0.2910, norm(x): 0.2887, norm(y): 1.0014, norm:3.4678, tok/sec: 105992.74, flops:111.24, batch-reuse:1
@ 271 train 6.6493 , allloss: 8.3696, dt: 1258.30ms, fracRes: 0.0089, norm(attn): 0.0728, norm(output): 0.2891, norm(x): 0.2878, norm(y): 1.0014, norm:4.2955, tok/sec: 104166.27, flops:109.32, batch-reuse:1
@ 272 train 6.6824 , allloss: 8.5330, dt: 1257.43ms, fracRes: 0.0091, norm(attn): 0.0684, norm(output): 0.2930, norm(x): 0.2906, norm(y): 1.0015, norm:4.5474, tok/sec: 104237.67, flops:109.40, batch-reuse:1
@ 273 train 6.7850 , allloss: 8.6507, dt: 1245.80ms, fracRes: 0.0087, norm(attn): 0.0649, norm(output): 0.2930, norm(x): 0.2938, norm(y): 1.0014, norm:3.4351, tok/sec: 105211.37, flops:110.42, batch-reuse:1
@ 274 train 6.6866 , allloss: 8.5562, dt: 1246.87ms, fracRes: 0.0083, norm(attn): 0.0564, norm(output): 0.3008, norm(x): 0.2984, norm(y): 1.0013, norm:4.0375, tok/sec: 105120.74, flops:110.33, batch-reuse:1
@ 275 train 6.6646 , allloss: 8.3962, dt: 1262.22ms, fracRes: 0.0086, norm(attn): 0.0640, norm(output): 0.3008, norm(x): 0.2994, norm(y): 1.0014, norm:3.9068, tok/sec: 103842.09, flops:108.98, batch-reuse:1
@ 276 train 6.6698 , allloss: 8.4875, dt: 1267.55ms, fracRes: 0.0083, norm(attn): 0.0598, norm(output): 0.3086, norm(x): 0.3034, norm(y): 1.0013, norm:4.6934, tok/sec: 103405.74, flops:108.53, batch-reuse:1
@ 277 train 6.5338 , allloss: 8.2591, dt: 1268.28ms, fracRes: 0.0084, norm(attn): 0.0698, norm(output): 0.3086, norm(x): 0.3050, norm(y): 1.0014, norm:3.8234, tok/sec: 103345.95, flops:108.46, batch-reuse:1
@ 278 train 6.6431 , allloss: 8.4107, dt: 1268.59ms, fracRes: 0.0085, norm(attn): 0.0674, norm(output): 0.3105, norm(x): 0.3079, norm(y): 1.0014, norm:3.8342, tok/sec: 103321.38, flops:108.44, batch-reuse:1
@ 279 train 6.5819 , allloss: 8.3001, dt: 1284.68ms, fracRes: 0.0087, norm(attn): 0.0679, norm(output): 0.3125, norm(x): 0.3093, norm(y): 1.0014, norm:4.3471, tok/sec: 102026.80, flops:107.08, batch-reuse:1
@ 280 train 6.6977 , allloss: 8.2658, dt: 1265.61ms, fracRes: 0.0086, norm(attn): 0.0723, norm(output): 0.3125, norm(x): 0.3116, norm(y): 1.0014, norm:3.2806, tok/sec: 103564.06, flops:108.69, batch-reuse:1
@ 281 train 6.5703 , allloss: 8.1059, dt: 1263.62ms, fracRes: 0.0086, norm(attn): 0.0664, norm(output): 0.3145, norm(x): 0.3129, norm(y): 1.0014, norm:3.0349, tok/sec: 103727.14, flops:108.86, batch-reuse:1
@ 282 train 6.5362 , allloss: 8.0549, dt: 1242.86ms, fracRes: 0.0083, norm(attn): 0.0674, norm(output): 0.3145, norm(x): 0.3157, norm(y): 1.0014, norm:2.6680, tok/sec: 105459.58, flops:110.68, batch-reuse:1
@ 283 train 6.4999 , allloss: 7.9934, dt: 1232.03ms, fracRes: 0.0082, norm(attn): 0.0698, norm(output): 0.3164, norm(x): 0.3187, norm(y): 1.0014, norm:2.5521, tok/sec: 106387.11, flops:111.66, batch-reuse:1
@ 284 train 6.5976 , allloss: 8.0813, dt: 1283.84ms, fracRes: 0.0083, norm(attn): 0.0635, norm(output): 0.3223, norm(x): 0.3207, norm(y): 1.0014, norm:2.9925, tok/sec: 102093.69, flops:107.15, batch-reuse:1
@ 285 train 6.6083 , allloss: 8.0841, dt: 1272.70ms, fracRes: 0.0082, norm(attn): 0.0684, norm(output): 0.3262, norm(x): 0.3230, norm(y): 1.0014, norm:3.3038, tok/sec: 102987.36, flops:108.09, batch-reuse:1
@ 286 train 6.6326 , allloss: 8.1968, dt: 1276.19ms, fracRes: 0.0082, norm(attn): 0.0583, norm(output): 0.3320, norm(x): 0.3290, norm(y): 1.0014, norm:4.1999, tok/sec: 102705.38, flops:107.79, batch-reuse:1
@ 287 train 6.6451 , allloss: 8.1449, dt: 1242.27ms, fracRes: 0.0082, norm(attn): 0.0586, norm(output): 0.3320, norm(x): 0.3298, norm(y): 1.0015, norm:3.6377, tok/sec: 105509.73, flops:110.73, batch-reuse:1
@ 288 train 6.6052 , allloss: 8.0950, dt: 1246.77ms, fracRes: 0.0081, norm(attn): 0.0586, norm(output): 0.3320, norm(x): 0.3298, norm(y): 1.0014, norm:3.2394, tok/sec: 105128.88, flops:110.33, batch-reuse:1
@ 289 train 6.6199 , allloss: 8.0888, dt: 1259.21ms, fracRes: 0.0080, norm(attn): 0.0559, norm(output): 0.3359, norm(x): 0.3334, norm(y): 1.0014, norm:3.7324, tok/sec: 104090.83, flops:109.25, batch-reuse:1
@ 290 train 6.5859 , allloss: 8.0470, dt: 1242.48ms, fracRes: 0.0080, norm(attn): 0.0605, norm(output): 0.3398, norm(x): 0.3344, norm(y): 1.0014, norm:2.9064, tok/sec: 105492.38, flops:110.72, batch-reuse:1
@ 291 train 6.4897 , allloss: 7.8903, dt: 1261.51ms, fracRes: 0.0080, norm(attn): 0.0640, norm(output): 0.3418, norm(x): 0.3365, norm(y): 1.0014, norm:2.8480, tok/sec: 103900.59, flops:109.05, batch-reuse:1
@ 292 train 6.5386 , allloss: 8.1334, dt: 1274.25ms, fracRes: 0.0078, norm(attn): 0.0625, norm(output): 0.3418, norm(x): 0.3374, norm(y): 1.0014, norm:4.0996, tok/sec: 102862.34, flops:107.96, batch-reuse:1
@ 293 train 6.6017 , allloss: 8.1552, dt: 1278.38ms, fracRes: 0.0080, norm(attn): 0.0610, norm(output): 0.3438, norm(x): 0.3402, norm(y): 1.0014, norm:3.2856, tok/sec: 102529.75, flops:107.61, batch-reuse:1
@ 294 train 6.5799 , allloss: 8.1109, dt: 1286.99ms, fracRes: 0.0081, norm(attn): 0.0625, norm(output): 0.3438, norm(x): 0.3418, norm(y): 1.0015, norm:3.0373, tok/sec: 101843.90, flops:106.89, batch-reuse:1
@ 295 train 6.5946 , allloss: 8.1930, dt: 1247.38ms, fracRes: 0.0080, norm(attn): 0.0569, norm(output): 0.3438, norm(x): 0.3456, norm(y): 1.0015, norm:3.6415, tok/sec: 105077.46, flops:110.28, batch-reuse:1
@ 296 train 6.4842 , allloss: 8.0379, dt: 1250.27ms, fracRes: 0.0081, norm(attn): 0.0605, norm(output): 0.3496, norm(x): 0.3502, norm(y): 1.0015, norm:3.5648, tok/sec: 104835.24, flops:110.03, batch-reuse:1
@ 297 train 6.4489 , allloss: 7.9758, dt: 1279.97ms, fracRes: 0.0083, norm(attn): 0.0640, norm(output): 0.3496, norm(x): 0.3505, norm(y): 1.0015, norm:2.9769, tok/sec: 102402.16, flops:107.47, batch-reuse:1
@ 298 train 6.5680 , allloss: 8.1027, dt: 1268.49ms, fracRes: 0.0083, norm(attn): 0.0605, norm(output): 0.3477, norm(x): 0.3514, norm(y): 1.0015, norm:3.3260, tok/sec: 103328.92, flops:108.45, batch-reuse:1
@ 299 train 6.5356 , allloss: 8.0251, dt: 1265.32ms, fracRes: 0.0083, norm(attn): 0.0591, norm(output): 0.3535, norm(x): 0.3543, norm(y): 1.0015, norm:3.1389, tok/sec: 103587.92, flops:108.72, batch-reuse:1
@ 300 train 6.5000 , allloss: 7.9794, dt: 1265.61ms, fracRes: 0.0083, norm(attn): 0.0593, norm(output): 0.3535, norm(x): 0.3549, norm(y): 1.0015, norm:3.0946, tok/sec: 103564.21, flops:108.69, batch-reuse:1
@ 301 train 6.6842 , allloss: 8.1689, dt: 1247.46ms, fracRes: 0.0081, norm(attn): 0.0593, norm(output): 0.3633, norm(x): 0.3587, norm(y): 1.0014, norm:4.1584, tok/sec: 105071.42, flops:110.27, batch-reuse:1
@ 302 train 6.5481 , allloss: 8.0142, dt: 1271.44ms, fracRes: 0.0081, norm(attn): 0.0635, norm(output): 0.3652, norm(x): 0.3598, norm(y): 1.0015, norm:4.5472, tok/sec: 103089.50, flops:108.19, batch-reuse:1
@ 303 train 6.5379 , allloss: 8.1075, dt: 1245.26ms, fracRes: 0.0081, norm(attn): 0.0591, norm(output): 0.3652, norm(x): 0.3620, norm(y): 1.0015, norm:2.9537, tok/sec: 105257.14, flops:110.47, batch-reuse:1
@ 304 train 6.5198 , allloss: 8.0677, dt: 1252.68ms, fracRes: 0.0080, norm(attn): 0.0579, norm(output): 0.3672, norm(x): 0.3645, norm(y): 1.0014, norm:5.4293, tok/sec: 104633.08, flops:109.81, batch-reuse:1
@ 305 train 6.4674 , allloss: 8.0288, dt: 1250.20ms, fracRes: 0.0082, norm(attn): 0.0635, norm(output): 0.3691, norm(x): 0.3654, norm(y): 1.0015, norm:4.1728, tok/sec: 104840.72, flops:110.03, batch-reuse:1
@ 306 train 6.4947 , allloss: 8.0378, dt: 1244.24ms, fracRes: 0.0084, norm(attn): 0.0708, norm(output): 0.3730, norm(x): 0.3673, norm(y): 1.0015, norm:4.5642, tok/sec: 105342.63, flops:110.56, batch-reuse:1
@ 307 train 6.6534 , allloss: 8.2257, dt: 1255.14ms, fracRes: 0.0084, norm(attn): 0.0693, norm(output): 0.3750, norm(x): 0.3698, norm(y): 1.0015, norm:4.6780, tok/sec: 104428.11, flops:109.60, batch-reuse:1
@ 308 train 6.5046 , allloss: 8.0603, dt: 1260.67ms, fracRes: 0.0086, norm(attn): 0.0664, norm(output): 0.3750, norm(x): 0.3701, norm(y): 1.0015, norm:3.6401, tok/sec: 103970.37, flops:109.12, batch-reuse:1
@ 309 train 6.5479 , allloss: 8.0235, dt: 1273.32ms, fracRes: 0.0087, norm(attn): 0.0669, norm(output): 0.3750, norm(x): 0.3706, norm(y): 1.0016, norm:3.2760, tok/sec: 102937.48, flops:108.03, batch-reuse:1
@ 310 train 6.5971 , allloss: 8.0500, dt: 1247.25ms, fracRes: 0.0093, norm(attn): 0.0737, norm(output): 0.3750, norm(x): 0.3748, norm(y): 1.0016, norm:3.6039, tok/sec: 105088.63, flops:110.29, batch-reuse:1
@ 311 train 6.6227 , allloss: 8.0729, dt: 1274.33ms, fracRes: 0.0092, norm(attn): 0.0718, norm(output): 0.3750, norm(x): 0.3750, norm(y): 1.0016, norm:3.1415, tok/sec: 102855.24, flops:107.95, batch-reuse:1
@ 312 train 6.6748 , allloss: 8.1116, dt: 1251.07ms, fracRes: 0.0091, norm(attn): 0.0693, norm(output): 0.3789, norm(x): 0.3815, norm(y): 1.0015, norm:3.1860, tok/sec: 104768.28, flops:109.96, batch-reuse:1
@ 313 train 6.5090 , allloss: 7.9150, dt: 1258.49ms, fracRes: 0.0092, norm(attn): 0.0757, norm(output): 0.3789, norm(x): 0.3802, norm(y): 1.0016, norm:3.8891, tok/sec: 104150.46, flops:109.31, batch-reuse:1
@ 314 train 6.5211 , allloss: 7.9269, dt: 1284.13ms, fracRes: 0.0089, norm(attn): 0.0664, norm(output): 0.3828, norm(x): 0.3842, norm(y): 1.0015, norm:3.4035, tok/sec: 102070.75, flops:107.13, batch-reuse:1
@ 315 train 6.5127 , allloss: 7.9367, dt: 1262.47ms, fracRes: 0.0088, norm(attn): 0.0630, norm(output): 0.3867, norm(x): 0.3892, norm(y): 1.0015, norm:2.9865, tok/sec: 103822.11, flops:108.96, batch-reuse:1
@ 316 train 6.5395 , allloss: 7.9819, dt: 1240.41ms, fracRes: 0.0087, norm(attn): 0.0591, norm(output): 0.3945, norm(x): 0.3907, norm(y): 1.0015, norm:3.3294, tok/sec: 105668.22, flops:110.90, batch-reuse:1
@ 317 train 6.5670 , allloss: 7.9965, dt: 1264.92ms, fracRes: 0.0089, norm(attn): 0.0605, norm(output): 0.3984, norm(x): 0.3938, norm(y): 1.0015, norm:3.3065, tok/sec: 103621.13, flops:108.75, batch-reuse:1
@ 318 train 6.4567 , allloss: 7.8805, dt: 1286.28ms, fracRes: 0.0088, norm(attn): 0.0593, norm(output): 0.4004, norm(x): 0.3956, norm(y): 1.0016, norm:3.5743, tok/sec: 101900.27, flops:106.95, batch-reuse:1
@ 319 train 6.3902 , allloss: 7.8034, dt: 1242.79ms, fracRes: 0.0085, norm(attn): 0.0552, norm(output): 0.4023, norm(x): 0.3972, norm(y): 1.0015, norm:3.5495, tok/sec: 105466.13, flops:110.69, batch-reuse:1
@ 320 train 6.4918 , allloss: 7.8815, dt: 1265.30ms, fracRes: 0.0085, norm(attn): 0.0535, norm(output): 0.4043, norm(x): 0.3986, norm(y): 1.0014, norm:3.2215, tok/sec: 103589.91, flops:108.72, batch-reuse:1
@ 321 train 6.5197 , allloss: 7.9018, dt: 1244.68ms, fracRes: 0.0084, norm(attn): 0.0571, norm(output): 0.4043, norm(x): 0.4004, norm(y): 1.0014, norm:2.7318, tok/sec: 105305.59, flops:110.52, batch-reuse:1
@ 322 train 6.4172 , allloss: 7.7864, dt: 1251.99ms, fracRes: 0.0082, norm(attn): 0.0547, norm(output): 0.4062, norm(x): 0.4025, norm(y): 1.0014, norm:2.5644, tok/sec: 104690.53, flops:109.87, batch-reuse:1
@ 323 train 6.5226 , allloss: 7.8799, dt: 1248.45ms, fracRes: 0.0085, norm(attn): 0.0574, norm(output): 0.4062, norm(x): 0.4055, norm(y): 1.0014, norm:3.4447, tok/sec: 104987.40, flops:110.19, batch-reuse:1
@ 324 train 6.4228 , allloss: 7.7647, dt: 1252.69ms, fracRes: 0.0084, norm(attn): 0.0601, norm(output): 0.4062, norm(x): 0.4064, norm(y): 1.0014, norm:3.0270, tok/sec: 104632.19, flops:109.81, batch-reuse:1
@ 325 train 6.4460 , allloss: 7.7752, dt: 1258.45ms, fracRes: 0.0086, norm(attn): 0.0601, norm(output): 0.4062, norm(x): 0.4072, norm(y): 1.0015, norm:2.6157, tok/sec: 104153.40, flops:109.31, batch-reuse:1
@ 326 train 6.5091 , allloss: 7.8160, dt: 1245.75ms, fracRes: 0.0086, norm(attn): 0.0610, norm(output): 0.4102, norm(x): 0.4095, norm(y): 1.0015, norm:2.1789, tok/sec: 105214.99, flops:110.43, batch-reuse:1
@ 327 train 6.5458 , allloss: 7.8570, dt: 1252.66ms, fracRes: 0.0086, norm(attn): 0.0569, norm(output): 0.4102, norm(x): 0.4097, norm(y): 1.0014, norm:2.5663, tok/sec: 104634.81, flops:109.82, batch-reuse:1
@ 328 train 6.4715 , allloss: 7.7965, dt: 1252.25ms, fracRes: 0.0087, norm(attn): 0.0574, norm(output): 0.4082, norm(x): 0.4082, norm(y): 1.0015, norm:2.9734, tok/sec: 104669.26, flops:109.85, batch-reuse:1
@ 329 train 6.4527 , allloss: 7.7958, dt: 1244.29ms, fracRes: 0.0088, norm(attn): 0.0542, norm(output): 0.4121, norm(x): 0.4108, norm(y): 1.0015, norm:2.9819, tok/sec: 105338.84, flops:110.56, batch-reuse:1
@ 330 train 6.4628 , allloss: 7.8271, dt: 1251.14ms, fracRes: 0.0091, norm(attn): 0.0576, norm(output): 0.4082, norm(x): 0.4088, norm(y): 1.0016, norm:3.1346, tok/sec: 104762.45, flops:109.95, batch-reuse:1
@ 331 train 6.4060 , allloss: 7.7882, dt: 1282.85ms, fracRes: 0.0092, norm(attn): 0.0571, norm(output): 0.4121, norm(x): 0.4109, norm(y): 1.0015, norm:3.1831, tok/sec: 102172.73, flops:107.23, batch-reuse:1
@ 332 train 6.3812 , allloss: 7.8583, dt: 1257.52ms, fracRes: 0.0094, norm(attn): 0.0564, norm(output): 0.4102, norm(x): 0.4103, norm(y): 1.0016, norm:3.3272, tok/sec: 104230.85, flops:109.39, batch-reuse:1
@ 333 train 6.4642 , allloss: 7.9707, dt: 1235.44ms, fracRes: 0.0096, norm(attn): 0.0576, norm(output): 0.4082, norm(x): 0.4104, norm(y): 1.0016, norm:3.2410, tok/sec: 106093.78, flops:111.35, batch-reuse:1
@ 334 train 6.4229 , allloss: 7.9760, dt: 1260.33ms, fracRes: 0.0095, norm(attn): 0.0579, norm(output): 0.4141, norm(x): 0.4141, norm(y): 1.0016, norm:4.7007, tok/sec: 103998.18, flops:109.15, batch-reuse:1
@ 335 train 6.3874 , allloss: 7.9564, dt: 1260.83ms, fracRes: 0.0097, norm(attn): 0.0608, norm(output): 0.4141, norm(x): 0.4137, norm(y): 1.0016, norm:3.4157, tok/sec: 103956.75, flops:109.10, batch-reuse:1
@ 336 train 6.4238 , allloss: 7.9813, dt: 1247.72ms, fracRes: 0.0096, norm(attn): 0.0613, norm(output): 0.4141, norm(x): 0.4147, norm(y): 1.0016, norm:3.5942, tok/sec: 105049.13, flops:110.25, batch-reuse:1
@ 337 train 6.4382 , allloss: 8.0308, dt: 1259.11ms, fracRes: 0.0094, norm(attn): 0.0630, norm(output): 0.4258, norm(x): 0.4183, norm(y): 1.0016, norm:4.7650, tok/sec: 104099.28, flops:109.25, batch-reuse:1
@ 338 train 6.4347 , allloss: 8.0921, dt: 1276.97ms, fracRes: 0.0094, norm(attn): 0.0547, norm(output): 0.4297, norm(x): 0.4217, norm(y): 1.0015, norm:6.3885, tok/sec: 102642.81, flops:107.73, batch-reuse:1
@ 339 train 6.5059 , allloss: 8.1636, dt: 1260.47ms, fracRes: 0.0092, norm(attn): 0.0581, norm(output): 0.4297, norm(x): 0.4218, norm(y): 1.0016, norm:4.5202, tok/sec: 103986.63, flops:109.14, batch-reuse:1
@ 340 train 6.4626 , allloss: 8.1799, dt: 1257.11ms, fracRes: 0.0096, norm(attn): 0.0576, norm(output): 0.4297, norm(x): 0.4248, norm(y): 1.0016, norm:5.1562, tok/sec: 104264.73, flops:109.43, batch-reuse:1
@ 341 train 6.3956 , allloss: 8.0528, dt: 1259.76ms, fracRes: 0.0095, norm(attn): 0.0554, norm(output): 0.4355, norm(x): 0.4272, norm(y): 1.0016, norm:4.9767, tok/sec: 104045.10, flops:109.20, batch-reuse:1
@ 342 train 6.3300 , allloss: 7.9545, dt: 1244.03ms, fracRes: 0.0092, norm(attn): 0.0562, norm(output): 0.4336, norm(x): 0.4265, norm(y): 1.0016, norm:4.2391, tok/sec: 105360.68, flops:110.58, batch-reuse:1
@ 343 train 6.3959 , allloss: 7.9999, dt: 1257.71ms, fracRes: 0.0091, norm(attn): 0.0569, norm(output): 0.4355, norm(x): 0.4294, norm(y): 1.0016, norm:3.8513, tok/sec: 104214.90, flops:109.38, batch-reuse:1
@ 344 train 6.3754 , allloss: 7.9515, dt: 1261.89ms, fracRes: 0.0092, norm(attn): 0.0557, norm(output): 0.4355, norm(x): 0.4296, norm(y): 1.0015, norm:3.4247, tok/sec: 103869.19, flops:109.01, batch-reuse:1
@ 345 train 6.3569 , allloss: 7.9543, dt: 1246.57ms, fracRes: 0.0091, norm(attn): 0.0598, norm(output): 0.4336, norm(x): 0.4271, norm(y): 1.0015, norm:3.5279, tok/sec: 105145.97, flops:110.35, batch-reuse:1
@ 346 train 6.4139 , allloss: 8.0359, dt: 1254.04ms, fracRes: 0.0094, norm(attn): 0.0610, norm(output): 0.4355, norm(x): 0.4313, norm(y): 1.0015, norm:3.1263, tok/sec: 104520.01, flops:109.70, batch-reuse:1
@ 347 train 6.4221 , allloss: 8.0305, dt: 1247.76ms, fracRes: 0.0096, norm(attn): 0.0610, norm(output): 0.4375, norm(x): 0.4324, norm(y): 1.0014, norm:3.2870, tok/sec: 105046.08, flops:110.25, batch-reuse:1
@ 348 train 6.3785 , allloss: 7.9638, dt: 1263.55ms, fracRes: 0.0096, norm(attn): 0.0593, norm(output): 0.4355, norm(x): 0.4314, norm(y): 1.0014, norm:3.3661, tok/sec: 103733.44, flops:108.87, batch-reuse:1
@ 349 train 6.4184 , allloss: 7.9894, dt: 1267.03ms, fracRes: 0.0099, norm(attn): 0.0601, norm(output): 0.4375, norm(x): 0.4328, norm(y): 1.0014, norm:3.3239, tok/sec: 103448.61, flops:108.57, batch-reuse:1
@ 350 train 6.4398 , allloss: 7.9566, dt: 1258.69ms, fracRes: 0.0101, norm(attn): 0.0603, norm(output): 0.4375, norm(x): 0.4344, norm(y): 1.0014, norm:2.9732, tok/sec: 104133.79, flops:109.29, batch-reuse:1
@ 351 train 6.4313 , allloss: 7.9101, dt: 1258.93ms, fracRes: 0.0103, norm(attn): 0.0645, norm(output): 0.4375, norm(x): 0.4359, norm(y): 1.0013, norm:4.2195, tok/sec: 104113.44, flops:109.27, batch-reuse:1
@ 352 train 6.5076 , allloss: 8.0006, dt: 1241.56ms, fracRes: 0.0108, norm(attn): 0.0659, norm(output): 0.4375, norm(x): 0.4345, norm(y): 1.0014, norm:4.7898, tok/sec: 105570.07, flops:110.80, batch-reuse:1
@ 353 train 6.4742 , allloss: 7.9489, dt: 1244.15ms, fracRes: 0.0114, norm(attn): 0.0679, norm(output): 0.4375, norm(x): 0.4367, norm(y): 1.0014, norm:3.9551, tok/sec: 105350.97, flops:110.57, batch-reuse:1
@ 354 train 6.3994 , allloss: 7.8804, dt: 1264.50ms, fracRes: 0.0114, norm(attn): 0.0679, norm(output): 0.4395, norm(x): 0.4357, norm(y): 1.0014, norm:3.1450, tok/sec: 103655.56, flops:108.79, batch-reuse:1
@ 355 train 6.4044 , allloss: 7.9239, dt: 1248.98ms, fracRes: 0.0121, norm(attn): 0.0674, norm(output): 0.4395, norm(x): 0.4387, norm(y): 1.0013, norm:3.5381, tok/sec: 104943.51, flops:110.14, batch-reuse:1
@ 356 train 6.5255 , allloss: 8.0517, dt: 1240.99ms, fracRes: 0.0125, norm(attn): 0.0776, norm(output): 0.4395, norm(x): 0.4404, norm(y): 1.0014, norm:4.0670, tok/sec: 105618.91, flops:110.85, batch-reuse:1
@ 357 train 6.4744 , allloss: 8.0008, dt: 1258.58ms, fracRes: 0.0128, norm(attn): 0.0708, norm(output): 0.4414, norm(x): 0.4421, norm(y): 1.0013, norm:3.9065, tok/sec: 104142.90, flops:109.30, batch-reuse:1
@ 358 train 6.4128 , allloss: 7.9548, dt: 1276.20ms, fracRes: 0.0129, norm(attn): 0.0679, norm(output): 0.4453, norm(x): 0.4435, norm(y): 1.0013, norm:3.2897, tok/sec: 102704.71, flops:107.79, batch-reuse:1
@ 359 train 6.7059 , allloss: 8.2331, dt: 1256.30ms, fracRes: 0.0148, norm(attn): 0.0718, norm(output): 0.4414, norm(x): 0.4439, norm(y): 1.0012, norm:7.4754, tok/sec: 104331.79, flops:109.50, batch-reuse:1
@ 360 train 6.4866 , allloss: 8.0634, dt: 1249.98ms, fracRes: 0.0153, norm(attn): 0.0723, norm(output): 0.4453, norm(x): 0.4465, norm(y): 1.0013, norm:3.6217, tok/sec: 104859.08, flops:110.05, batch-reuse:1
@ 361 train 6.5209 , allloss: 8.0845, dt: 1271.21ms, fracRes: 0.0161, norm(attn): 0.0723, norm(output): 0.4609, norm(x): 0.4550, norm(y): 1.0013, norm:4.2583, tok/sec: 103108.34, flops:108.21, batch-reuse:1
@ 362 train 6.3998 , allloss: 8.1282, dt: 1242.65ms, fracRes: 0.0148, norm(attn): 0.0723, norm(output): 0.4629, norm(x): 0.4566, norm(y): 1.0013, norm:3.7586, tok/sec: 105477.91, flops:110.70, batch-reuse:1
@ 363 train 6.4304 , allloss: 8.3180, dt: 1258.85ms, fracRes: 0.0157, norm(attn): 0.0688, norm(output): 0.4648, norm(x): 0.4586, norm(y): 1.0013, norm:4.9015, tok/sec: 104120.30, flops:109.28, batch-reuse:1
@ 364 train 6.4750 , allloss: 8.3527, dt: 1261.05ms, fracRes: 0.0132, norm(attn): 0.0640, norm(output): 0.4688, norm(x): 0.4655, norm(y): 1.0013, norm:4.6841, tok/sec: 103938.64, flops:109.09, batch-reuse:1
@ 365 train 6.4403 , allloss: 8.1928, dt: 1273.59ms, fracRes: 0.0127, norm(attn): 0.0659, norm(output): 0.4707, norm(x): 0.4696, norm(y): 1.0013, norm:3.6977, tok/sec: 102915.35, flops:108.01, batch-reuse:1
@ 366 train 6.4810 , allloss: 8.0295, dt: 1284.00ms, fracRes: 0.0128, norm(attn): 0.0654, norm(output): 0.4707, norm(x): 0.4697, norm(y): 1.0013, norm:2.9682, tok/sec: 102081.38, flops:107.14, batch-reuse:1
@ 367 train 6.3766 , allloss: 7.8306, dt: 1259.85ms, fracRes: 0.0131, norm(attn): 0.0630, norm(output): 0.4707, norm(x): 0.4703, norm(y): 1.0013, norm:2.8785, tok/sec: 104037.64, flops:109.19, batch-reuse:1
@ 368 train 6.4938 , allloss: 7.9199, dt: 1256.56ms, fracRes: 0.0126, norm(attn): 0.0645, norm(output): 0.4727, norm(x): 0.4732, norm(y): 1.0013, norm:2.7361, tok/sec: 104310.07, flops:109.48, batch-reuse:1
@ 369 train 6.4435 , allloss: 7.8619, dt: 1255.03ms, fracRes: 0.0132, norm(attn): 0.0598, norm(output): 0.4766, norm(x): 0.4760, norm(y): 1.0012, norm:3.1247, tok/sec: 104437.11, flops:109.61, batch-reuse:1
@ 370 train 6.5510 , allloss: 7.9650, dt: 1262.04ms, fracRes: 0.0146, norm(attn): 0.0640, norm(output): 0.4785, norm(x): 0.4789, norm(y): 1.0013, norm:2.7923, tok/sec: 103857.04, flops:109.00, batch-reuse:1
@ 371 train 6.4860 , allloss: 7.9175, dt: 1262.94ms, fracRes: 0.0158, norm(attn): 0.0586, norm(output): 0.4883, norm(x): 0.4812, norm(y): 1.0013, norm:3.0696, tok/sec: 103783.01, flops:108.92, batch-reuse:1
@ 372 train 6.5505 , allloss: 7.9698, dt: 1280.21ms, fracRes: 0.0184, norm(attn): 0.0610, norm(output): 0.4922, norm(x): 0.4817, norm(y): 1.0013, norm:2.5024, tok/sec: 102382.82, flops:107.45, batch-reuse:1
@ 373 train 6.5308 , allloss: 7.9581, dt: 1272.90ms, fracRes: 0.0212, norm(attn): 0.0669, norm(output): 0.4922, norm(x): 0.4843, norm(y): 1.0014, norm:2.5824, tok/sec: 102971.08, flops:108.07, batch-reuse:1
@ 374 train 6.5265 , allloss: 7.9726, dt: 1262.60ms, fracRes: 0.0222, norm(attn): 0.0625, norm(output): 0.4941, norm(x): 0.4856, norm(y): 1.0013, norm:2.8972, tok/sec: 103811.15, flops:108.95, batch-reuse:1
@ 375 train 6.6119 , allloss: 8.0684, dt: 1246.18ms, fracRes: 0.0214, norm(attn): 0.0669, norm(output): 0.4980, norm(x): 0.4879, norm(y): 1.0013, norm:3.1714, tok/sec: 105178.78, flops:110.39, batch-reuse:1
@ 376 train 6.6447 , allloss: 8.0897, dt: 1261.27ms, fracRes: 0.0205, norm(attn): 0.0659, norm(output): 0.4980, norm(x): 0.4931, norm(y): 1.0013, norm:2.7174, tok/sec: 103921.00, flops:109.07, batch-reuse:1
@ 377 train 6.5528 , allloss: 7.9911, dt: 1284.29ms, fracRes: 0.0198, norm(attn): 0.0664, norm(output): 0.5000, norm(x): 0.4966, norm(y): 1.0013, norm:3.1964, tok/sec: 102057.90, flops:107.11, batch-reuse:1
@ 378 train 6.4855 , allloss: 7.9084, dt: 1232.98ms, fracRes: 0.0218, norm(attn): 0.0630, norm(output): 0.5000, norm(x): 0.4960, norm(y): 1.0013, norm:2.6439, tok/sec: 106304.80, flops:111.57, batch-reuse:1
@ 379 train 6.5784 , allloss: 7.9918, dt: 1251.77ms, fracRes: 0.0210, norm(attn): 0.0635, norm(output): 0.5039, norm(x): 0.4987, norm(y): 1.0013, norm:2.5650, tok/sec: 104709.73, flops:109.89, batch-reuse:1
@ 380 train 6.6284 , allloss: 8.0385, dt: 1263.68ms, fracRes: 0.0224, norm(attn): 0.0640, norm(output): 0.5078, norm(x): 0.5042, norm(y): 1.0012, norm:2.6883, tok/sec: 103722.60, flops:108.86, batch-reuse:1
@ 381 train 6.5404 , allloss: 7.9164, dt: 1244.03ms, fracRes: 0.0256, norm(attn): 0.0635, norm(output): 0.5039, norm(x): 0.5015, norm(y): 1.0013, norm:2.3806, tok/sec: 105360.50, flops:110.58, batch-reuse:1
@ 382 train 6.5084 , allloss: 7.8719, dt: 1251.97ms, fracRes: 0.0260, norm(attn): 0.0630, norm(output): 0.5039, norm(x): 0.5021, norm(y): 1.0013, norm:2.5173, tok/sec: 104692.22, flops:109.88, batch-reuse:1
@ 383 train 6.4819 , allloss: 7.8761, dt: 1245.27ms, fracRes: 0.0246, norm(attn): 0.0630, norm(output): 0.5078, norm(x): 0.5049, norm(y): 1.0012, norm:2.3153, tok/sec: 105255.77, flops:110.47, batch-reuse:1
@ 384 train 6.4932 , allloss: 7.8344, dt: 1246.60ms, fracRes: 0.0248, norm(attn): 0.0635, norm(output): 0.5117, norm(x): 0.5090, norm(y): 1.0012, norm:2.5025, tok/sec: 105143.76, flops:110.35, batch-reuse:1
@ 385 train 6.4568 , allloss: 7.7801, dt: 1245.53ms, fracRes: 0.0214, norm(attn): 0.0601, norm(output): 0.5156, norm(x): 0.5115, norm(y): 1.0012, norm:2.4746, tok/sec: 105233.66, flops:110.44, batch-reuse:1
@ 386 train 6.5440 , allloss: 7.8865, dt: 1261.74ms, fracRes: 0.0218, norm(attn): 0.0623, norm(output): 0.5195, norm(x): 0.5119, norm(y): 1.0012, norm:3.1949, tok/sec: 103881.92, flops:109.03, batch-reuse:1
@ 387 train 6.5160 , allloss: 7.8440, dt: 1292.95ms, fracRes: 0.0229, norm(attn): 0.0623, norm(output): 0.5273, norm(x): 0.5161, norm(y): 1.0012, norm:3.1809, tok/sec: 101374.01, flops:106.39, batch-reuse:1
@ 388 train 6.4069 , allloss: 7.7359, dt: 1257.52ms, fracRes: 0.0203, norm(attn): 0.0613, norm(output): 0.5273, norm(x): 0.5177, norm(y): 1.0011, norm:3.1073, tok/sec: 104230.45, flops:109.39, batch-reuse:1
@ 389 train 6.4750 , allloss: 7.8082, dt: 1264.78ms, fracRes: 0.0212, norm(attn): 0.0598, norm(output): 0.5273, norm(x): 0.5177, norm(y): 1.0011, norm:3.1237, tok/sec: 103632.54, flops:108.76, batch-reuse:1
@ 390 train 6.5113 , allloss: 7.8332, dt: 1267.73ms, fracRes: 0.0207, norm(attn): 0.0591, norm(output): 0.5312, norm(x): 0.5216, norm(y): 1.0011, norm:3.3826, tok/sec: 103391.00, flops:108.51, batch-reuse:1
@ 391 train 6.4394 , allloss: 7.7403, dt: 1257.49ms, fracRes: 0.0210, norm(attn): 0.0615, norm(output): 0.5312, norm(x): 0.5235, norm(y): 1.0011, norm:3.4167, tok/sec: 104232.88, flops:109.39, batch-reuse:1
@ 392 train 6.5336 , allloss: 7.8719, dt: 1254.03ms, fracRes: 0.0207, norm(attn): 0.0610, norm(output): 0.5312, norm(x): 0.5264, norm(y): 1.0011, norm:3.2437, tok/sec: 104520.51, flops:109.70, batch-reuse:1
@ 393 train 6.4746 , allloss: 7.8113, dt: 1254.63ms, fracRes: 0.0186, norm(attn): 0.0593, norm(output): 0.5312, norm(x): 0.5287, norm(y): 1.0011, norm:3.5826, tok/sec: 104470.57, flops:109.64, batch-reuse:1
@ 394 train 6.4765 , allloss: 7.7743, dt: 1258.95ms, fracRes: 0.0190, norm(attn): 0.0596, norm(output): 0.5352, norm(x): 0.5300, norm(y): 1.0011, norm:3.7157, tok/sec: 104111.80, flops:109.27, batch-reuse:1
@ 395 train 6.5458 , allloss: 7.8446, dt: 1282.23ms, fracRes: 0.0226, norm(attn): 0.0630, norm(output): 0.5352, norm(x): 0.5332, norm(y): 1.0010, norm:3.4590, tok/sec: 102221.61, flops:107.28, batch-reuse:1
@ 396 train 6.4039 , allloss: 7.6827, dt: 1254.61ms, fracRes: 0.0208, norm(attn): 0.0591, norm(output): 0.5352, norm(x): 0.5312, norm(y): 1.0011, norm:3.2669, tok/sec: 104472.38, flops:109.65, batch-reuse:1
@ 397 train 6.5334 , allloss: 7.8338, dt: 1276.78ms, fracRes: 0.0242, norm(attn): 0.0588, norm(output): 0.5352, norm(x): 0.5314, norm(y): 1.0011, norm:3.7389, tok/sec: 102658.28, flops:107.74, batch-reuse:1
@ 398 train 6.5026 , allloss: 7.8042, dt: 1253.07ms, fracRes: 0.0241, norm(attn): 0.0596, norm(output): 0.5352, norm(x): 0.5343, norm(y): 1.0010, norm:3.7156, tok/sec: 104600.75, flops:109.78, batch-reuse:1
@ 399 train 6.4971 , allloss: 7.8985, dt: 1248.57ms, fracRes: 0.0173, norm(attn): 0.0618, norm(output): 0.5430, norm(x): 0.5385, norm(y): 1.0010, norm:3.3309, tok/sec: 104977.52, flops:110.18, batch-reuse:1
@ 400 train 6.5420 , allloss: 8.0007, dt: 1248.19ms, fracRes: 0.0165, norm(attn): 0.0605, norm(output): 0.5508, norm(x): 0.5444, norm(y): 1.0009, norm:3.9209, tok/sec: 105009.94, flops:110.21, batch-reuse:1
@ 401 train 6.5032 , allloss: 7.9263, dt: 1246.68ms, fracRes: 0.0153, norm(attn): 0.0610, norm(output): 0.5586, norm(x): 0.5523, norm(y): 1.0009, norm:3.5462, tok/sec: 105136.98, flops:110.34, batch-reuse:1
@ 402 train 6.4867 , allloss: 7.8266, dt: 1261.94ms, fracRes: 0.0148, norm(attn): 0.0598, norm(output): 0.5625, norm(x): 0.5587, norm(y): 1.0009, norm:3.2985, tok/sec: 103865.44, flops:109.01, batch-reuse:1
@ 403 train 6.5289 , allloss: 7.8555, dt: 1262.80ms, fracRes: 0.0144, norm(attn): 0.0640, norm(output): 0.5625, norm(x): 0.5648, norm(y): 1.0009, norm:3.2845, tok/sec: 103795.12, flops:108.93, batch-reuse:1
@ 404 train 6.4542 , allloss: 7.8189, dt: 1273.45ms, fracRes: 0.0144, norm(attn): 0.0613, norm(output): 0.5781, norm(x): 0.5720, norm(y): 1.0009, norm:3.4345, tok/sec: 102926.32, flops:108.02, batch-reuse:1
@ 405 train 6.4590 , allloss: 7.8612, dt: 1239.81ms, fracRes: 0.0142, norm(attn): 0.0654, norm(output): 0.5820, norm(x): 0.5776, norm(y): 1.0009, norm:3.4093, tok/sec: 105719.67, flops:110.95, batch-reuse:1
@ 406 train 6.4500 , allloss: 7.9210, dt: 1262.54ms, fracRes: 0.0162, norm(attn): 0.0674, norm(output): 0.5898, norm(x): 0.5870, norm(y): 1.0009, norm:3.6121, tok/sec: 103815.85, flops:108.96, batch-reuse:1
@ 407 train 6.4373 , allloss: 8.2043, dt: 1275.24ms, fracRes: 0.0174, norm(attn): 0.0649, norm(output): 0.6016, norm(x): 0.5954, norm(y): 1.0008, norm:5.0229, tok/sec: 102782.42, flops:107.87, batch-reuse:1
@ 408 train 6.4463 , allloss: 8.6836, dt: 1259.78ms, fracRes: 0.0165, norm(attn): 0.0674, norm(output): 0.6133, norm(x): 0.6024, norm(y): 1.0008, norm:6.5983, tok/sec: 104043.53, flops:109.20, batch-reuse:1
@ 409 train 6.3869 , allloss: 9.1057, dt: 1283.34ms, fracRes: 0.0160, norm(attn): 0.0713, norm(output): 0.6211, norm(x): 0.6107, norm(y): 1.0008, norm:8.2089, tok/sec: 102133.88, flops:107.19, batch-reuse:1
@ 410 train 6.4457 , allloss: 9.5585, dt: 1268.29ms, fracRes: 0.0168, norm(attn): 0.0679, norm(output): 0.6250, norm(x): 0.6185, norm(y): 1.0007, norm:8.9473, tok/sec: 103345.41, flops:108.46, batch-reuse:1
@ 411 train 6.4332 , allloss: 10.2052, dt: 1261.68ms, fracRes: 0.0188, norm(attn): 0.0674, norm(output): 0.6289, norm(x): 0.6248, norm(y): 1.0007, norm:11.6571, tok/sec: 103886.85, flops:109.03, batch-reuse:1
@ 412 train 6.4518 , allloss: 10.8178, dt: 1250.62ms, fracRes: 0.0208, norm(attn): 0.0674, norm(output): 0.6289, norm(x): 0.6259, norm(y): 1.0007, norm:13.3891, tok/sec: 104805.49, flops:110.00, batch-reuse:1
@ 413 train 6.1453 , allloss: 10.8480, dt: 1270.61ms, fracRes: 0.0248, norm(attn): 0.0703, norm(output): 0.6289, norm(x): 0.6245, norm(y): 1.0007, norm:17.0464, tok/sec: 103157.07, flops:108.27, batch-reuse:1
@ 414 train 6.4336 , allloss: 11.4319, dt: 1276.16ms, fracRes: 0.0260, norm(attn): 0.0688, norm(output): 0.6289, norm(x): 0.6254, norm(y): 1.0007, norm:18.3257, tok/sec: 102707.82, flops:107.79, batch-reuse:1
@ 415 train 6.3768 , allloss: 11.5047, dt: 1260.03ms, fracRes: 0.0273, norm(attn): 0.0708, norm(output): 0.6289, norm(x): 0.6259, norm(y): 1.0008, norm:18.2399, tok/sec: 104023.27, flops:109.17, batch-reuse:1
@ 416 train 6.5114 , allloss: 11.9706, dt: 1267.28ms, fracRes: 0.0264, norm(attn): 0.0693, norm(output): 0.6289, norm(x): 0.6286, norm(y): 1.0007, norm:18.9600, tok/sec: 103427.65, flops:108.55, batch-reuse:1
@ 417 train 6.3972 , allloss: 11.8515, dt: 1251.91ms, fracRes: 0.0261, norm(attn): 0.0742, norm(output): 0.6328, norm(x): 0.6322, norm(y): 1.0008, norm:19.3471, tok/sec: 104697.94, flops:109.88, batch-reuse:1
@ 418 train 6.4837 , allloss: 12.0126, dt: 1261.21ms, fracRes: 0.0266, norm(attn): 0.0732, norm(output): 0.6484, norm(x): 0.6387, norm(y): 1.0008, norm:18.8426, tok/sec: 103925.66, flops:109.07, batch-reuse:1
@ 419 train 6.4227 , allloss: 12.0663, dt: 1250.41ms, fracRes: 0.0271, norm(attn): 0.0732, norm(output): 0.6484, norm(x): 0.6441, norm(y): 1.0008, norm:19.7873, tok/sec: 104823.11, flops:110.01, batch-reuse:1
@ 420 train 6.3788 , allloss: 11.8260, dt: 1243.72ms, fracRes: 0.0284, norm(attn): 0.0757, norm(output): 0.6484, norm(x): 0.6489, norm(y): 1.0008, norm:20.2273, tok/sec: 105386.74, flops:110.61, batch-reuse:1
@ 421 train 6.5119 , allloss: 11.8983, dt: 1253.79ms, fracRes: 0.0293, norm(attn): 0.0757, norm(output): 0.6641, norm(x): 0.6552, norm(y): 1.0008, norm:19.4015, tok/sec: 104540.92, flops:109.72, batch-reuse:1
@ 422 train 6.4330 , allloss: 11.6512, dt: 1263.31ms, fracRes: 0.0301, norm(attn): 0.0757, norm(output): 0.6719, norm(x): 0.6609, norm(y): 1.0008, norm:18.3596, tok/sec: 103752.43, flops:108.89, batch-reuse:1
@ 423 train 6.4299 , allloss: 11.2357, dt: 1259.82ms, fracRes: 0.0289, norm(attn): 0.0752, norm(output): 0.6836, norm(x): 0.6698, norm(y): 1.0008, norm:18.0761, tok/sec: 104040.30, flops:109.19, batch-reuse:1
@ 424 train 6.4030 , allloss: 10.8573, dt: 1257.68ms, fracRes: 0.0273, norm(attn): 0.0728, norm(output): 0.6836, norm(x): 0.6764, norm(y): 1.0008, norm:15.9780, tok/sec: 104217.63, flops:109.38, batch-reuse:1
@ 425 train 6.4821 , allloss: 11.0241, dt: 1254.43ms, fracRes: 0.0257, norm(attn): 0.0708, norm(output): 0.6875, norm(x): 0.6841, norm(y): 1.0008, norm:14.9358, tok/sec: 104487.51, flops:109.66, batch-reuse:1
@ 426 train 6.3258 , allloss: 10.5484, dt: 1268.65ms, fracRes: 0.0250, norm(attn): 0.0713, norm(output): 0.6914, norm(x): 0.6893, norm(y): 1.0009, norm:15.3714, tok/sec: 103315.87, flops:108.43, batch-reuse:1
@ 427 train 6.3808 , allloss: 10.7293, dt: 1263.42ms, fracRes: 0.0237, norm(attn): 0.0728, norm(output): 0.6953, norm(x): 0.6960, norm(y): 1.0009, norm:16.2835, tok/sec: 103743.43, flops:108.88, batch-reuse:1
@ 428 train 6.3327 , allloss: 10.6778, dt: 1261.34ms, fracRes: 0.0221, norm(attn): 0.0718, norm(output): 0.7070, norm(x): 0.7023, norm(y): 1.0009, norm:14.2352, tok/sec: 103915.19, flops:109.06, batch-reuse:1
@ 429 train 6.2938 , allloss: 10.3204, dt: 1256.77ms, fracRes: 0.0208, norm(attn): 0.0718, norm(output): 0.7109, norm(x): 0.7082, norm(y): 1.0010, norm:15.1627, tok/sec: 104292.96, flops:109.46, batch-reuse:1
@ 430 train 6.3865 , allloss: 10.1043, dt: 1260.10ms, fracRes: 0.0204, norm(attn): 0.0703, norm(output): 0.7070, norm(x): 0.7144, norm(y): 1.0010, norm:12.2695, tok/sec: 104017.13, flops:109.17, batch-reuse:1
@ 431 train 6.3525 , allloss: 9.7785, dt: 1259.45ms, fracRes: 0.0207, norm(attn): 0.0723, norm(output): 0.7305, norm(x): 0.7193, norm(y): 1.0010, norm:10.1874, tok/sec: 104070.59, flops:109.22, batch-reuse:1
@ 432 train 6.4159 , allloss: 9.5284, dt: 1284.91ms, fracRes: 0.0226, norm(attn): 0.0703, norm(output): 0.7305, norm(x): 0.7237, norm(y): 1.0009, norm:9.3993, tok/sec: 102008.76, flops:107.06, batch-reuse:1
@ 433 train 6.4092 , allloss: 9.3888, dt: 1270.78ms, fracRes: 0.0245, norm(attn): 0.0703, norm(output): 0.7422, norm(x): 0.7255, norm(y): 1.0010, norm:9.6008, tok/sec: 103143.31, flops:108.25, batch-reuse:1
@ 434 train 6.4245 , allloss: 9.2041, dt: 1262.37ms, fracRes: 0.0256, norm(attn): 0.0688, norm(output): 0.7422, norm(x): 0.7304, norm(y): 1.0010, norm:8.6155, tok/sec: 103830.15, flops:108.97, batch-reuse:1
@ 435 train 6.3318 , allloss: 9.1594, dt: 1295.05ms, fracRes: 0.0269, norm(attn): 0.0703, norm(output): 0.7461, norm(x): 0.7353, norm(y): 1.0010, norm:9.0886, tok/sec: 101209.63, flops:106.22, batch-reuse:1
@ 436 train 6.4899 , allloss: 9.3137, dt: 1254.79ms, fracRes: 0.0272, norm(attn): 0.0732, norm(output): 0.7461, norm(x): 0.7345, norm(y): 1.0010, norm:9.3363, tok/sec: 104457.43, flops:109.63, batch-reuse:1
@ 437 train 6.5099 , allloss: 9.8727, dt: 1248.67ms, fracRes: 0.0311, norm(attn): 0.0718, norm(output): 0.7500, norm(x): 0.7513, norm(y): 1.0008, norm:12.9471, tok/sec: 104969.16, flops:110.17, batch-reuse:1
@ 438 train 6.6349 , allloss: 10.1295, dt: 1280.63ms, fracRes: 0.0360, norm(attn): 0.0820, norm(output): 0.7500, norm(x): 0.7430, norm(y): 1.0010, norm:14.3247, tok/sec: 102349.96, flops:107.42, batch-reuse:1
@ 439 train 6.4996 , allloss: 11.6778, dt: 1255.16ms, fracRes: 0.0238, norm(attn): 0.0879, norm(output): 0.7461, norm(x): 0.7396, norm(y): 1.0010, norm:14.4011, tok/sec: 104426.42, flops:109.60, batch-reuse:1
@ 440 train 6.4147 , allloss: 12.8581, dt: 1259.04ms, fracRes: 0.0180, norm(attn): 0.0894, norm(output): 0.7461, norm(x): 0.7404, norm(y): 1.0009, norm:15.7691, tok/sec: 104104.90, flops:109.26, batch-reuse:1
@ 441 train 6.4701 , allloss: 12.8485, dt: 1255.20ms, fracRes: 0.0131, norm(attn): 0.0923, norm(output): 0.7461, norm(x): 0.7410, norm(y): 1.0009, norm:13.5269, tok/sec: 104422.83, flops:109.59, batch-reuse:1
@ 442 train 6.5582 , allloss: 12.7640, dt: 1249.51ms, fracRes: 0.0117, norm(attn): 0.0928, norm(output): 0.7500, norm(x): 0.7461, norm(y): 1.0008, norm:12.6394, tok/sec: 104898.84, flops:110.09, batch-reuse:1
@ 443 train 6.5170 , allloss: 12.3680, dt: 1265.56ms, fracRes: 0.0113, norm(attn): 0.0918, norm(output): 0.7539, norm(x): 0.7530, norm(y): 1.0008, norm:10.7714, tok/sec: 103568.58, flops:108.70, batch-reuse:1
@ 444 train 6.4719 , allloss: 13.0680, dt: 1267.52ms, fracRes: 0.0127, norm(attn): 0.0850, norm(output): 0.7578, norm(x): 0.7601, norm(y): 1.0007, norm:12.7917, tok/sec: 103408.60, flops:108.53, batch-reuse:1
@ 445 train 6.4174 , allloss: 13.3132, dt: 1248.38ms, fracRes: 0.0176, norm(attn): 0.0850, norm(output): 0.7617, norm(x): 0.7587, norm(y): 1.0007, norm:15.9636, tok/sec: 104993.68, flops:110.19, batch-reuse:1
@ 446 train 6.4019 , allloss: 14.4011, dt: 1253.57ms, fracRes: 0.0242, norm(attn): 0.0850, norm(output): 0.7734, norm(x): 0.7648, norm(y): 1.0006, norm:15.5212, tok/sec: 104558.83, flops:109.74, batch-reuse:1
@ 447 train 6.4449 , allloss: 15.7817, dt: 1275.23ms, fracRes: 0.0243, norm(attn): 0.0864, norm(output): 0.7930, norm(x): 0.7762, norm(y): 1.0006, norm:16.7911, tok/sec: 102783.34, flops:107.87, batch-reuse:1
@ 448 train 6.4225 , allloss: 16.3638, dt: 1268.11ms, fracRes: 0.0262, norm(attn): 0.0933, norm(output): 0.7969, norm(x): 0.7813, norm(y): 1.0005, norm:21.7992, tok/sec: 103359.80, flops:108.48, batch-reuse:1
@ 449 train 6.4146 , allloss: 16.9127, dt: 1261.55ms, fracRes: 0.0233, norm(attn): 0.0967, norm(output): 0.8047, norm(x): 0.7921, norm(y): 1.0004, norm:27.4646, tok/sec: 103897.96, flops:109.04, batch-reuse:1
@ 450 train 6.4458 , allloss: 17.0716, dt: 1270.13ms, fracRes: 0.0266, norm(attn): 0.0952, norm(output): 0.8086, norm(x): 0.7985, norm(y): 1.0004, norm:25.4216, tok/sec: 103195.94, flops:108.31, batch-reuse:1
@ 451 train 6.4516 , allloss: 17.5384, dt: 1258.63ms, fracRes: 0.0190, norm(attn): 0.0996, norm(output): 0.8164, norm(x): 0.8181, norm(y): 1.0004, norm:27.1729, tok/sec: 104139.04, flops:109.30, batch-reuse:1
@ 452 train 6.4390 , allloss: 17.6802, dt: 1263.64ms, fracRes: 0.0222, norm(attn): 0.0977, norm(output): 0.8164, norm(x): 0.8180, norm(y): 1.0005, norm:27.7386, tok/sec: 103726.02, flops:108.86, batch-reuse:1
@ 453 train 6.4516 , allloss: 19.1823, dt: 1275.30ms, fracRes: 0.0238, norm(attn): 0.0991, norm(output): 0.8242, norm(x): 0.8203, norm(y): 1.0005, norm:31.9243, tok/sec: 102777.31, flops:107.87, batch-reuse:1
@ 454 train 6.4352 , allloss: 19.2076, dt: 1279.23ms, fracRes: 0.0188, norm(attn): 0.0991, norm(output): 0.8516, norm(x): 0.8391, norm(y): 1.0004, norm:28.4102, tok/sec: 102461.55, flops:107.54, batch-reuse:1
@ 455 train 6.4726 , allloss: 19.2768, dt: 1268.77ms, fracRes: 0.0195, norm(attn): 0.0977, norm(output): 0.8633, norm(x): 0.8491, norm(y): 1.0004, norm:26.1011, tok/sec: 103306.30, flops:108.42, batch-reuse:1
@ 456 train 6.4368 , allloss: 20.0187, dt: 1251.97ms, fracRes: 0.0188, norm(attn): 0.0967, norm(output): 0.8711, norm(x): 0.8565, norm(y): 1.0005, norm:27.6272, tok/sec: 104692.72, flops:109.88, batch-reuse:1
@ 457 train 6.5149 , allloss: 20.9521, dt: 1264.54ms, fracRes: 0.0192, norm(attn): 0.0977, norm(output): 0.8750, norm(x): 0.8673, norm(y): 1.0004, norm:26.6310, tok/sec: 103652.26, flops:108.78, batch-reuse:1
@ 458 train 6.4889 , allloss: 21.5550, dt: 1289.76ms, fracRes: 0.0182, norm(attn): 0.0996, norm(output): 0.8750, norm(x): 0.8725, norm(y): 1.0004, norm:27.9278, tok/sec: 101624.99, flops:106.66, batch-reuse:1
@ 459 train 6.4053 , allloss: 21.6108, dt: 1278.99ms, fracRes: 0.0190, norm(attn): 0.0967, norm(output): 0.8750, norm(x): 0.8745, norm(y): 1.0003, norm:29.8441, tok/sec: 102481.01, flops:107.56, batch-reuse:1
@ 460 train 6.3804 , allloss: 22.1409, dt: 1290.45ms, fracRes: 0.0246, norm(attn): 0.0938, norm(output): 0.8750, norm(x): 0.8711, norm(y): 1.0003, norm:28.4314, tok/sec: 101570.78, flops:106.60, batch-reuse:1
@ 461 train 6.4167 , allloss: 21.2700, dt: 1256.07ms, fracRes: 0.0308, norm(attn): 0.0928, norm(output): 0.8711, norm(x): 0.8673, norm(y): 1.0004, norm:31.9878, tok/sec: 104350.46, flops:109.52, batch-reuse:1
@ 462 train 6.4852 , allloss: 22.6608, dt: 1262.94ms, fracRes: 0.0291, norm(attn): 0.0923, norm(output): 0.8711, norm(x): 0.8690, norm(y): 1.0003, norm:31.3225, tok/sec: 103783.10, flops:108.92, batch-reuse:1
@ 463 train 6.4739 , allloss: 23.4224, dt: 1290.72ms, fracRes: 0.0230, norm(attn): 0.0908, norm(output): 0.8750, norm(x): 0.8766, norm(y): 1.0002, norm:30.1802, tok/sec: 101549.82, flops:106.58, batch-reuse:1
@ 464 train 6.3874 , allloss: 25.1930, dt: 1257.96ms, fracRes: 0.0191, norm(attn): 0.0908, norm(output): 0.8828, norm(x): 0.8856, norm(y): 1.0002, norm:32.8929, tok/sec: 104194.46, flops:109.35, batch-reuse:1
@ 465 train 6.3604 , allloss: 25.2875, dt: 1252.36ms, fracRes: 0.0177, norm(attn): 0.0933, norm(output): 0.8828, norm(x): 0.8922, norm(y): 1.0001, norm:33.0827, tok/sec: 104659.71, flops:109.84, batch-reuse:1
@ 466 train 6.4413 , allloss: 24.1142, dt: 1272.36ms, fracRes: 0.0179, norm(attn): 0.0947, norm(output): 0.8906, norm(x): 0.8966, norm(y): 1.0000, norm:35.3124, tok/sec: 103014.79, flops:108.12, batch-reuse:1
@ 467 train 6.3628 , allloss: 23.3157, dt: 1263.83ms, fracRes: 0.0214, norm(attn): 0.0957, norm(output): 0.8906, norm(x): 0.8980, norm(y): 1.0000, norm:36.4323, tok/sec: 103710.19, flops:108.85, batch-reuse:1
@ 468 train 6.3213 , allloss: 25.6619, dt: 1237.52ms, fracRes: 0.0280, norm(attn): 0.0972, norm(output): 0.8867, norm(x): 0.9050, norm(y): 0.9999, norm:36.1836, tok/sec: 105914.94, flops:111.16, batch-reuse:1
@ 469 train 6.3081 , allloss: 26.3588, dt: 1247.51ms, fracRes: 0.0282, norm(attn): 0.0991, norm(output): 0.9062, norm(x): 0.9115, norm(y): 0.9998, norm:37.4036, tok/sec: 105066.58, flops:110.27, batch-reuse:1
@ 470 train 6.4035 , allloss: 26.6928, dt: 1265.38ms, fracRes: 0.0276, norm(attn): 0.1021, norm(output): 0.9102, norm(x): 0.9199, norm(y): 0.9999, norm:37.2819, tok/sec: 103583.00, flops:108.71, batch-reuse:1
@ 471 train 6.2809 , allloss: 25.6192, dt: 1267.02ms, fracRes: 0.0265, norm(attn): 0.1040, norm(output): 0.9180, norm(x): 0.9152, norm(y): 0.9999, norm:36.2145, tok/sec: 103449.35, flops:108.57, batch-reuse:1
@ 472 train 6.4026 , allloss: 25.4340, dt: 1255.00ms, fracRes: 0.0252, norm(attn): 0.1035, norm(output): 0.9180, norm(x): 0.9169, norm(y): 0.9999, norm:33.8270, tok/sec: 104440.15, flops:109.61, batch-reuse:1
@ 473 train 6.3634 , allloss: 24.4500, dt: 1266.73ms, fracRes: 0.0269, norm(attn): 0.1064, norm(output): 0.9141, norm(x): 0.9151, norm(y): 0.9999, norm:29.3899, tok/sec: 103472.62, flops:108.60, batch-reuse:1
@ 474 train 6.2824 , allloss: 25.1633, dt: 1255.77ms, fracRes: 0.0242, norm(attn): 0.1099, norm(output): 0.9062, norm(x): 0.9117, norm(y): 0.9998, norm:30.3221, tok/sec: 104375.90, flops:109.54, batch-reuse:1
@ 475 train 6.2954 , allloss: 25.9596, dt: 1257.84ms, fracRes: 0.0278, norm(attn): 0.1084, norm(output): 0.9023, norm(x): 0.9144, norm(y): 0.9998, norm:31.4215, tok/sec: 104203.82, flops:109.36, batch-reuse:1
@ 476 train 6.3102 , allloss: 27.3478, dt: 1266.35ms, fracRes: 0.0259, norm(attn): 0.1104, norm(output): 0.9023, norm(x): 0.9171, norm(y): 0.9999, norm:33.7587, tok/sec: 103503.51, flops:108.63, batch-reuse:1
@ 477 train 6.3844 , allloss: 27.9599, dt: 1253.91ms, fracRes: 0.0291, norm(attn): 0.1108, norm(output): 0.9141, norm(x): 0.9232, norm(y): 0.9999, norm:34.0284, tok/sec: 104530.27, flops:109.71, batch-reuse:1
@ 478 train 6.3305 , allloss: 30.0877, dt: 1247.55ms, fracRes: 0.0311, norm(attn): 0.1133, norm(output): 0.9258, norm(x): 0.9281, norm(y): 0.9999, norm:35.7023, tok/sec: 105063.82, flops:110.27, batch-reuse:1
@ 479 train 6.4283 , allloss: 26.6458, dt: 1253.98ms, fracRes: 0.0388, norm(attn): 0.1113, norm(output): 0.9336, norm(x): 0.9398, norm(y): 0.9999, norm:35.4558, tok/sec: 104524.40, flops:109.70, batch-reuse:1
@ 480 train 6.2651 , allloss: 26.7529, dt: 1249.67ms, fracRes: 0.0425, norm(attn): 0.1143, norm(output): 0.9336, norm(x): 0.9473, norm(y): 1.0000, norm:33.2786, tok/sec: 104885.19, flops:110.08, batch-reuse:1
@ 481 train 6.3711 , allloss: 27.6589, dt: 1258.80ms, fracRes: 0.0464, norm(attn): 0.1133, norm(output): 0.9453, norm(x): 0.9619, norm(y): 1.0000, norm:34.4461, tok/sec: 104124.94, flops:109.28, batch-reuse:1
@ 482 train 6.3320 , allloss: 28.8168, dt: 1284.10ms, fracRes: 0.0457, norm(attn): 0.1152, norm(output): 0.9531, norm(x): 0.9698, norm(y): 1.0000, norm:32.6301, tok/sec: 102073.29, flops:107.13, batch-reuse:1
@ 483 train 6.4117 , allloss: 29.6879, dt: 1235.88ms, fracRes: 0.0486, norm(attn): 0.1157, norm(output): 0.9727, norm(x): 0.9720, norm(y): 1.0000, norm:35.1034, tok/sec: 106055.69, flops:111.31, batch-reuse:1
@ 484 train 6.2949 , allloss: 31.3711, dt: 1266.97ms, fracRes: 0.0500, norm(attn): 0.1157, norm(output): 0.9688, norm(x): 0.9716, norm(y): 0.9999, norm:35.3126, tok/sec: 103453.03, flops:108.58, batch-reuse:1
@ 485 train 6.2355 , allloss: 36.3963, dt: 1262.20ms, fracRes: 0.0528, norm(attn): 0.1162, norm(output): 0.9766, norm(x): 0.9661, norm(y): 1.0000, norm:45.3681, tok/sec: 103844.35, flops:108.99, batch-reuse:1
@ 486 train 6.4307 , allloss: 34.8681, dt: 1259.76ms, fracRes: 0.0564, norm(attn): 0.1113, norm(output): 0.9688, norm(x): 0.9656, norm(y): 1.0001, norm:42.6687, tok/sec: 104045.30, flops:109.20, batch-reuse:1
@ 487 train 6.3480 , allloss: 33.5240, dt: 1264.43ms, fracRes: 0.0531, norm(attn): 0.1079, norm(output): 0.9844, norm(x): 0.9707, norm(y): 1.0000, norm:35.7266, tok/sec: 103661.15, flops:108.79, batch-reuse:1
@ 488 train 6.2419 , allloss: 31.7694, dt: 1261.87ms, fracRes: 0.0511, norm(attn): 0.1079, norm(output): 0.9688, norm(x): 0.9661, norm(y): 1.0000, norm:32.2090, tok/sec: 103871.56, flops:109.02, batch-reuse:1
@ 489 train 6.3291 , allloss: 30.9457, dt: 1279.56ms, fracRes: 0.0504, norm(attn): 0.1084, norm(output): 0.9531, norm(x): 0.9542, norm(y): 1.0000, norm:34.7385, tok/sec: 102435.26, flops:107.51, batch-reuse:1
@ 490 train 6.3610 , allloss: 29.7959, dt: 1255.85ms, fracRes: 0.0493, norm(attn): 0.1099, norm(output): 0.9492, norm(x): 0.9488, norm(y): 1.0000, norm:31.8933, tok/sec: 104368.93, flops:109.54, batch-reuse:1
@ 491 train 6.4157 , allloss: 27.4506, dt: 1265.43ms, fracRes: 0.0478, norm(attn): 0.1108, norm(output): 0.9453, norm(x): 0.9518, norm(y): 1.0000, norm:30.8477, tok/sec: 103578.91, flops:108.71, batch-reuse:1
@ 492 train 6.4154 , allloss: 29.0066, dt: 1265.20ms, fracRes: 0.0431, norm(attn): 0.1167, norm(output): 0.9453, norm(x): 0.9492, norm(y): 0.9999, norm:35.0267, tok/sec: 103597.96, flops:108.73, batch-reuse:1
@ 493 train 6.3627 , allloss: 28.5018, dt: 1284.22ms, fracRes: 0.0394, norm(attn): 0.1191, norm(output): 0.9531, norm(x): 0.9540, norm(y): 0.9999, norm:29.9735, tok/sec: 102063.45, flops:107.12, batch-reuse:1
@ 494 train 6.3487 , allloss: 23.8285, dt: 1243.73ms, fracRes: 0.0400, norm(attn): 0.1250, norm(output): 0.9844, norm(x): 0.9645, norm(y): 1.0000, norm:29.3032, tok/sec: 105386.58, flops:110.61, batch-reuse:1
@ 495 train 6.2278 , allloss: 25.0081, dt: 1264.05ms, fracRes: 0.0413, norm(attn): 0.1260, norm(output): 0.9648, norm(x): 0.9571, norm(y): 1.0000, norm:31.9479, tok/sec: 103692.33, flops:108.83, batch-reuse:1
@ 496 train 6.3501 , allloss: 26.0362, dt: 1278.77ms, fracRes: 0.0371, norm(attn): 0.1230, norm(output): 0.9492, norm(x): 0.9472, norm(y): 1.0000, norm:28.2655, tok/sec: 102498.13, flops:107.57, batch-reuse:1
@ 497 train 6.2524 , allloss: 27.2794, dt: 1284.35ms, fracRes: 0.0324, norm(attn): 0.1211, norm(output): 0.9492, norm(x): 0.9499, norm(y): 1.0000, norm:28.0638, tok/sec: 102053.00, flops:107.11, batch-reuse:1
@ 498 train 6.4054 , allloss: 27.5471, dt: 1266.05ms, fracRes: 0.0350, norm(attn): 0.1172, norm(output): 0.9492, norm(x): 0.9445, norm(y): 1.0001, norm:26.7761, tok/sec: 103527.90, flops:108.65, batch-reuse:1
@ 499 train 6.3993 , allloss: 27.5793, dt: 1288.83ms, fracRes: 0.0331, norm(attn): 0.1133, norm(output): 0.9453, norm(x): 0.9478, norm(y): 1.0002, norm:26.7571, tok/sec: 101698.38, flops:106.73, batch-reuse:1
@ 500 train 6.3105 , allloss: 26.4505, dt: 1286.66ms, fracRes: 0.0318, norm(attn): 0.1084, norm(output): 0.9414, norm(x): 0.9430, norm(y): 1.0001, norm:29.2618, tok/sec: 101869.98, flops:106.91, batch-reuse:1
@ 501 train 6.3410 , allloss: 28.8672, dt: 1254.44ms, fracRes: 0.0285, norm(attn): 0.1089, norm(output): 0.9414, norm(x): 0.9465, norm(y): 1.0002, norm:41.2433, tok/sec: 104486.42, flops:109.66, batch-reuse:1
@ 502 train 6.3729 , allloss: 36.7548, dt: 1247.98ms, fracRes: 0.0233, norm(attn): 0.1108, norm(output): 0.9492, norm(x): 0.9564, norm(y): 1.0002, norm:70.0040, tok/sec: 105027.66, flops:110.23, batch-reuse:1
@ 503 train 6.3585 , allloss: 31.8350, dt: 1261.05ms, fracRes: 0.0240, norm(attn): 0.1094, norm(output): 0.9492, norm(x): 0.9567, norm(y): 1.0002, norm:42.4673, tok/sec: 103939.18, flops:109.09, batch-reuse:1
@ 504 train 6.3739 , allloss: 28.0100, dt: 1259.55ms, fracRes: 0.0276, norm(attn): 0.1099, norm(output): 0.9570, norm(x): 0.9574, norm(y): 1.0002, norm:31.8262, tok/sec: 104062.85, flops:109.22, batch-reuse:1
@ 505 train 6.2846 , allloss: 24.1559, dt: 1259.80ms, fracRes: 0.0311, norm(attn): 0.1074, norm(output): 0.9453, norm(x): 0.9474, norm(y): 1.0001, norm:25.2108, tok/sec: 104042.15, flops:109.19, batch-reuse:1
@ 506 train 6.3224 , allloss: 22.5658, dt: 1263.06ms, fracRes: 0.0339, norm(attn): 0.1055, norm(output): 0.9453, norm(x): 0.9468, norm(y): 1.0001, norm:22.9829, tok/sec: 103772.98, flops:108.91, batch-reuse:1
@ 507 train 6.3141 , allloss: 21.5771, dt: 1290.42ms, fracRes: 0.0395, norm(attn): 0.1064, norm(output): 0.9492, norm(x): 0.9500, norm(y): 1.0001, norm:23.1948, tok/sec: 101573.33, flops:106.60, batch-reuse:1
@ 508 train 6.2436 , allloss: 20.3843, dt: 1278.36ms, fracRes: 0.0427, norm(attn): 0.1050, norm(output): 0.9570, norm(x): 0.9521, norm(y): 1.0001, norm:22.1192, tok/sec: 102531.22, flops:107.61, batch-reuse:1
@ 509 train 6.3220 , allloss: 22.8901, dt: 1256.77ms, fracRes: 0.0461, norm(attn): 0.1045, norm(output): 0.9453, norm(x): 0.9408, norm(y): 1.0001, norm:33.6295, tok/sec: 104292.82, flops:109.46, batch-reuse:1
@ 510 train 6.2636 , allloss: 28.8620, dt: 1249.63ms, fracRes: 0.0435, norm(attn): 0.1055, norm(output): 0.9414, norm(x): 0.9378, norm(y): 1.0000, norm:85.7247, tok/sec: 104888.41, flops:110.08, batch-reuse:1
@ 511 train 6.3665 , allloss: 41.3277, dt: 1249.00ms, fracRes: 0.0434, norm(attn): 0.1094, norm(output): 0.9414, norm(x): 0.9440, norm(y): 1.0000, norm:148.1196, tok/sec: 104941.81, flops:110.14, batch-reuse:1
@ 512 train 6.3138 , allloss: 50.4590, dt: 1267.44ms, fracRes: 0.0426, norm(attn): 0.1104, norm(output): 0.9453, norm(x): 0.9427, norm(y): 1.0000, norm:150.4661, tok/sec: 103414.73, flops:108.54, batch-reuse:1
@ 513 train 6.3328 , allloss: 50.6238, dt: 1266.95ms, fracRes: 0.0424, norm(attn): 0.1113, norm(output): 0.9414, norm(x): 0.9420, norm(y): 1.0000, norm:118.5762, tok/sec: 103454.43, flops:108.58, batch-reuse:1
@ 514 train 6.2737 , allloss: 44.6704, dt: 1277.35ms, fracRes: 0.0442, norm(attn): 0.1143, norm(output): 0.9375, norm(x): 0.9394, norm(y): 1.0000, norm:58.9486, tok/sec: 102612.56, flops:107.69, batch-reuse:1
@ 515 train 6.2708 , allloss: 42.6014, dt: 1273.83ms, fracRes: 0.0513, norm(attn): 0.1157, norm(output): 0.9336, norm(x): 0.9347, norm(y): 1.0001, norm:36.8487, tok/sec: 102896.25, flops:107.99, batch-reuse:1
@ 516 train 6.2434 , allloss: 40.0112, dt: 1281.66ms, fracRes: 0.0516, norm(attn): 0.1157, norm(output): 0.9336, norm(x): 0.9353, norm(y): 1.0001, norm:43.2763, tok/sec: 102267.06, flops:107.33, batch-reuse:1
@ 517 train 6.2678 , allloss: 32.4449, dt: 1254.73ms, fracRes: 0.0506, norm(attn): 0.1162, norm(output): 0.9375, norm(x): 0.9326, norm(y): 1.0000, norm:41.0952, tok/sec: 104462.36, flops:109.64, batch-reuse:1
@ 518 train 6.3420 , allloss: 24.5902, dt: 1258.05ms, fracRes: 0.0456, norm(attn): 0.1123, norm(output): 0.9375, norm(x): 0.9380, norm(y): 0.9999, norm:29.2863, tok/sec: 104186.42, flops:109.35, batch-reuse:1
@ 519 train 6.2628 , allloss: 19.8057, dt: 1256.88ms, fracRes: 0.0403, norm(attn): 0.1177, norm(output): 0.9414, norm(x): 0.9485, norm(y): 0.9999, norm:21.8453, tok/sec: 104283.26, flops:109.45, batch-reuse:1
@ 520 train 6.3139 , allloss: 18.7631, dt: 1252.46ms, fracRes: 0.0418, norm(attn): 0.1162, norm(output): 0.9453, norm(x): 0.9484, norm(y): 0.9997, norm:20.4882, tok/sec: 104651.63, flops:109.83, batch-reuse:1
@ 521 train 6.3985 , allloss: 17.1973, dt: 1263.21ms, fracRes: 0.0522, norm(attn): 0.1309, norm(output): 0.9375, norm(x): 0.9300, norm(y): 0.9997, norm:20.5700, tok/sec: 103761.01, flops:108.90, batch-reuse:1
@ 522 train 6.3394 , allloss: 17.0670, dt: 1263.36ms, fracRes: 0.0539, norm(attn): 0.1240, norm(output): 0.9844, norm(x): 0.9664, norm(y): 0.9996, norm:22.8203, tok/sec: 103748.65, flops:108.89, batch-reuse:1
@ 523 train 6.4033 , allloss: 16.0927, dt: 1288.43ms, fracRes: 0.0603, norm(attn): 0.1250, norm(output): 0.9766, norm(x): 0.9599, norm(y): 0.9996, norm:19.0180, tok/sec: 101730.18, flops:106.77, batch-reuse:1
@ 524 train 6.2951 , allloss: 14.3734, dt: 1287.02ms, fracRes: 0.0612, norm(attn): 0.1270, norm(output): 0.9609, norm(x): 0.9594, norm(y): 0.9997, norm:15.3525, tok/sec: 101841.31, flops:106.88, batch-reuse:1
@ 525 train 6.3245 , allloss: 14.2374, dt: 1280.14ms, fracRes: 0.0623, norm(attn): 0.1250, norm(output): 0.9922, norm(x): 0.9752, norm(y): 0.9996, norm:17.0626, tok/sec: 102388.88, flops:107.46, batch-reuse:1
@ 526 train 6.3747 , allloss: 14.5106, dt: 1259.46ms, fracRes: 0.0636, norm(attn): 0.1245, norm(output): 0.9961, norm(x): 0.9848, norm(y): 0.9997, norm:17.1780, tok/sec: 104070.30, flops:109.22, batch-reuse:1
@ 527 train 6.3712 , allloss: 12.7511, dt: 1263.70ms, fracRes: 0.0649, norm(attn): 0.1289, norm(output): 1.0000, norm(x): 0.9916, norm(y): 0.9996, norm:15.5616, tok/sec: 103720.90, flops:108.86, batch-reuse:1
@ 528 train 6.3104 , allloss: 12.8981, dt: 1281.54ms, fracRes: 0.0561, norm(attn): 0.1279, norm(output): 1.0078, norm(x): 0.9992, norm(y): 0.9996, norm:15.2428, tok/sec: 102277.28, flops:107.34, batch-reuse:1
@ 529 train 6.2908 , allloss: 12.3463, dt: 1273.06ms, fracRes: 0.0622, norm(attn): 0.1270, norm(output): 1.0078, norm(x): 1.0015, norm(y): 0.9997, norm:15.7352, tok/sec: 102957.95, flops:108.06, batch-reuse:1
@ 530 train 6.3818 , allloss: 12.7627, dt: 1255.93ms, fracRes: 0.0641, norm(attn): 0.1240, norm(output): 1.0156, norm(x): 1.0062, norm(y): 0.9997, norm:14.4829, tok/sec: 104362.71, flops:109.53, batch-reuse:1
@ 531 train 6.4442 , allloss: 11.2035, dt: 1294.72ms, fracRes: 0.0676, norm(attn): 0.1279, norm(output): 1.0156, norm(x): 1.0089, norm(y): 0.9997, norm:15.0402, tok/sec: 101236.13, flops:106.25, batch-reuse:1
@ 532 train 6.3048 , allloss: 11.4014, dt: 1262.40ms, fracRes: 0.0767, norm(attn): 0.1138, norm(output): 1.0078, norm(x): 0.9950, norm(y): 0.9998, norm:13.2538, tok/sec: 103827.91, flops:108.97, batch-reuse:1
@ 533 train 6.3337 , allloss: 12.1224, dt: 1284.19ms, fracRes: 0.0639, norm(attn): 0.1099, norm(output): 1.0078, norm(x): 0.9952, norm(y): 0.9998, norm:16.2074, tok/sec: 102065.96, flops:107.12, batch-reuse:1
@ 534 train 6.2600 , allloss: 10.7702, dt: 1257.74ms, fracRes: 0.0677, norm(attn): 0.1138, norm(output): 1.0156, norm(x): 1.0104, norm(y): 0.9999, norm:11.4115, tok/sec: 104212.36, flops:109.37, batch-reuse:1
@ 535 train 6.3470 , allloss: 10.9507, dt: 1252.39ms, fracRes: 0.0746, norm(attn): 0.1133, norm(output): 1.0312, norm(x): 1.0136, norm(y): 1.0000, norm:12.1938, tok/sec: 104657.16, flops:109.84, batch-reuse:1
@ 536 train 6.3739 , allloss: 10.7379, dt: 1260.22ms, fracRes: 0.0701, norm(attn): 0.1089, norm(output): 1.0156, norm(x): 1.0124, norm(y): 1.0000, norm:10.3927, tok/sec: 104006.98, flops:109.16, batch-reuse:1
@ 537 train 6.3274 , allloss: 10.2545, dt: 1263.14ms, fracRes: 0.0681, norm(attn): 0.1138, norm(output): 1.0547, norm(x): 1.0315, norm(y): 1.0001, norm:10.5927, tok/sec: 103767.16, flops:108.91, batch-reuse:1
@ 538 train 6.3369 , allloss: 10.2510, dt: 1285.21ms, fracRes: 0.0641, norm(attn): 0.1123, norm(output): 1.0391, norm(x): 1.0198, norm(y): 1.0000, norm:10.7841, tok/sec: 101984.92, flops:107.04, batch-reuse:1
@ 539 train 6.3376 , allloss: 10.0419, dt: 1281.40ms, fracRes: 0.0708, norm(attn): 0.1108, norm(output): 1.0547, norm(x): 1.0306, norm(y): 0.9999, norm:8.4763, tok/sec: 102288.45, flops:107.35, batch-reuse:1
@ 540 train 6.3724 , allloss: 10.0045, dt: 1291.23ms, fracRes: 0.0763, norm(attn): 0.1045, norm(output): 1.0625, norm(x): 1.0416, norm(y): 1.0000, norm:9.2018, tok/sec: 101509.66, flops:106.54, batch-reuse:1
@ 541 train 6.2984 , allloss: 9.8129, dt: 1288.01ms, fracRes: 0.0753, norm(attn): 0.1025, norm(output): 1.0625, norm(x): 1.0267, norm(y): 0.9999, norm:9.6000, tok/sec: 101763.46, flops:106.80, batch-reuse:1
@ 542 train 6.3098 , allloss: 9.6726, dt: 1257.34ms, fracRes: 0.0795, norm(attn): 0.1055, norm(output): 1.0703, norm(x): 1.0304, norm(y): 0.9998, norm:7.5484, tok/sec: 104245.22, flops:109.41, batch-reuse:1
@ 543 train 6.4196 , allloss: 9.8457, dt: 1267.90ms, fracRes: 0.0885, norm(attn): 0.1045, norm(output): 1.0625, norm(x): 1.0235, norm(y): 0.9998, norm:7.7030, tok/sec: 103377.24, flops:108.50, batch-reuse:1
@ 544 train 6.3713 , allloss: 10.1736, dt: 1265.95ms, fracRes: 0.0888, norm(attn): 0.1025, norm(output): 1.0625, norm(x): 1.0268, norm(y): 0.9999, norm:8.2454, tok/sec: 103536.09, flops:108.66, batch-reuse:1
@ 545 train 6.3558 , allloss: 10.8575, dt: 1286.57ms, fracRes: 0.0865, norm(attn): 0.1011, norm(output): 1.0625, norm(x): 1.0403, norm(y): 1.0000, norm:10.4661, tok/sec: 101877.12, flops:106.92, batch-reuse:1
@ 546 train 6.2962 , allloss: 11.3396, dt: 1264.12ms, fracRes: 0.0889, norm(attn): 0.1021, norm(output): 1.0625, norm(x): 1.0238, norm(y): 0.9999, norm:11.2490, tok/sec: 103686.35, flops:108.82, batch-reuse:1
@ 547 train 6.4270 , allloss: 11.7338, dt: 1280.51ms, fracRes: 0.0918, norm(attn): 0.1006, norm(output): 1.0703, norm(x): 1.0219, norm(y): 0.9999, norm:10.4635, tok/sec: 102359.54, flops:107.43, batch-reuse:1
@ 548 train 6.4361 , allloss: 11.9010, dt: 1281.56ms, fracRes: 0.0935, norm(attn): 0.0962, norm(output): 1.0781, norm(x): 1.0347, norm(y): 0.9998, norm:9.4985, tok/sec: 102274.99, flops:107.34, batch-reuse:1
@ 549 train 6.3315 , allloss: 11.9827, dt: 1274.72ms, fracRes: 0.0935, norm(attn): 0.0977, norm(output): 1.0781, norm(x): 1.0372, norm(y): 0.9999, norm:12.9763, tok/sec: 102824.00, flops:107.92, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5586, 0.4395, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6562, 0.1201, 0.2227, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4902, 0.2275, 0.1104, 0.1709, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5703, 0.0540, 0.0435, 0.1924, 0.1406, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2500, 0.1416, 0.0530, 0.1172, 0.3457, 0.0923, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2412, 0.0908, 0.0820, 0.1055, 0.1943, 0.1729, 0.1118, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1455, 0.0869, 0.1187, 0.1074, 0.0540, 0.0510, 0.1133, 0.3223, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2012, 0.0579, 0.0486, 0.0542, 0.1099, 0.1138, 0.0806, 0.2148, 0.1191, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1113, 0.0981, 0.0874, 0.1416, 0.0850, 0.0537, 0.1504, 0.0879, 0.0947, 0.0894, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0996, 0.0302, 0.0146, 0.0369, 0.1348, 0.1982, 0.0527, 0.0298, 0.1338, 0.0488, 0.2207, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0742, 0.1807, 0.0972, 0.0791, 0.1011, 0.0806, 0.1143, 0.0417, 0.0742, 0.0447, 0.0679, 0.0442, 0.0000, 0.0000, 0.0000],
        [0.0542, 0.1338, 0.0557, 0.0610, 0.1270, 0.1689, 0.0801, 0.0449, 0.0708, 0.0444, 0.1011, 0.0366, 0.0208, 0.0000, 0.0000],
        [0.0781, 0.0262, 0.0294, 0.0381, 0.0588, 0.0835, 0.0449, 0.0737, 0.0742, 0.0752, 0.0254, 0.2314, 0.0654, 0.0957, 0.0000],
        [0.0752, 0.0557, 0.0679, 0.0898, 0.0352, 0.1040, 0.0527, 0.0986, 0.0674, 0.0413, 0.0310, 0.0684, 0.0684, 0.0713, 0.0723]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[     0.0146,      0.0002,      0.0033,  ...,     -0.0433,      0.0000,     -0.0236],
        [    -0.0165,     -0.0032,      0.0046,  ...,     -0.0156,      0.0332,      0.0024],
        [     0.0049,      0.0085,     -0.0152,  ...,      0.0053,      0.0236,      0.0263],
        ...,
        [    -0.0439,      0.0308,     -0.0061,  ...,     -0.0059,      0.0060,      0.0054],
        [     0.0229,      0.0188,     -0.0026,  ...,      0.0035,      0.0091,      0.0215],
        [     0.0103,      0.0036,      0.0033,  ...,      0.0009,      0.0035,      0.0021]], device='cuda:0', requires_grad=True)
K: tensor([-0.5469, -0.5195,  0.6641,  0.1973, -0.9219, -0.4180,  0.5000, -1.2578, -0.0234, -0.5781, -0.0162,  0.5781, -0.1406,  0.5625,  0.1064, -0.3906, -0.1426, -0.0947, -0.7773,  0.5547, -0.4980, -0.5742, -0.3887, -0.3535, -1.0078, -0.0291, -0.4961, -1.0781, -0.0933, -0.2832, -0.1777,  0.5977,
         0.0781, -0.8594,  0.3301,  0.3418, -0.3047, -0.2363,  0.2949, -0.0742,  0.2598,  0.9492, -0.0630, -0.3398, -0.4824,  0.1157,  0.1670, -0.4277,  0.1963, -0.0435,  0.3359, -0.4609, -0.3730, -0.3262, -0.3828,  0.0265, -0.9492, -0.3008,  0.8672,  0.1787,  0.2812,  0.1689, -1.0000,  0.6250],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0225,  0.0060, -0.0074,  ..., -0.0027, -0.0032, -0.0092],
        [ 0.0079, -0.0065, -0.0281,  ..., -0.0240,  0.0040, -0.0113],
        [-0.0009, -0.0220, -0.0036,  ..., -0.0510, -0.0272,  0.0227],
        ...,
        [ 0.0054,  0.0104, -0.0067,  ...,  0.0132,  0.0255, -0.0139],
        [-0.0268, -0.0233,  0.0108,  ...,  0.0098,  0.0310,  0.0135],
        [ 0.0337,  0.0115, -0.0106,  ..., -0.0184, -0.0076, -0.0188]], device='cuda:0', requires_grad=True)
Q: tensor([-0.2812, -0.4824, -1.3281, -0.1069, -0.1279,  0.2695, -0.2871,  0.3320,  0.1992, -0.7383,  0.6680,  0.1260, -0.5430, -0.0449,  0.3086, -0.3066, -0.2812, -0.7109,  0.1787, -0.4043,  0.7773, -0.8594, -0.7422, -0.6641, -0.5508, -1.1953,  0.6250, -0.0986, -0.9102,  0.1904, -0.4629, -0.2119,
        -0.1855, -0.0327, -0.1416, -0.0253,  0.7070, -0.1211, -0.3477, -0.1357,  1.3125,  0.3262, -0.4824, -0.2217, -0.2314,  0.2969,  0.8711, -0.8906,  0.2168,  0.6445,  0.0547,  1.0391,  0.1182,  0.2930,  0.2578,  0.2773, -0.0850, -0.3242, -0.1055,  0.0986, -0.0859,  0.3926,  1.3828,  0.1230],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -0.2402,      0.2871,     -0.2197,     -0.4512,     -0.4512,     -0.0045,      0.1670,     -0.5195,     -0.1465,     -0.9570,      0.7578,      0.3203,     -0.5664,      0.5312],
        [     0.0000,     -1.7031,     -1.0781,     -0.6172,     -1.2734,     -1.4219,      0.1777,      0.5625,     -0.1914,     -0.9805,     -1.1250,      0.8477,      0.1865,     -0.8750,      0.9180],
        [     0.0000,     -0.7695,     -1.4922,     -1.0547,     -0.1963,     -2.2031,     -0.4609,     -0.2441,     -0.6055,     -0.9961,     -0.8477,      0.8477,     -0.1904,     -0.8398,      0.2930],
        [     0.0000,     -2.3594,     -2.5625,     -1.0859,     -1.3984,     -1.3984,     -0.3867,     -0.6016,     -0.3633,     -0.4570,     -0.1982,      0.6602,     -0.7891,     -0.0752,      1.1953],
        [     0.0000,     -0.5703,     -1.5547,     -0.7578,      0.3223,     -0.9961,      0.3496,     -0.5312,     -0.2676,     -0.0488,      0.4531,     -0.5000,     -0.5391,     -0.1963,      0.3926],
        [     0.0000,     -0.9766,     -1.0781,     -0.8281,     -0.2158,     -0.3320,     -0.7695,     -0.5742,      0.2539,     -0.4336,     -0.0065,      0.6211,     -0.2021,     -0.0347,      0.0947],
        [     0.0000,     -0.5117,     -0.2012,     -0.2988,     -0.9922,     -1.0469,     -0.2461,      0.8008,     -0.6641,     -0.5547,     -0.9336,      1.0078,      0.1465,     -0.8281,     -0.3047],
        [     0.0000,     -1.2500,     -1.4219,     -1.3125,     -0.6055,     -0.5703,     -0.9141,      0.0669,     -0.5234,     -0.6719,     -1.2031,      1.1328,      0.2002,     -0.0135,      0.6523],
        [     0.0000,     -0.1270,     -0.2441,      0.2432,     -0.2715,     -0.7266,      0.3027,     -0.2373,     -0.1631,     -0.2197,     -0.3262,     -0.0300,      0.3613,     -0.3555,      0.1406],
        [     0.0000,     -1.1953,     -1.9141,     -0.9922,      0.3047,      0.6914,     -0.6328,     -1.2031,      0.3008,     -0.7109,      0.7969,     -0.4453,     -1.3828,      1.0781,     -0.0618],
        [     0.0000,      0.8906,      0.2676,      0.0635,      0.3105,      0.0840,      0.4336,     -0.5742,      0.0011,     -0.5039,     -0.0874,     -0.5156,     -0.5273,     -0.4004,      0.2734],
        [     0.0000,      0.9102,      0.0275,      0.1211,      0.8555,      1.1406,      0.3926,     -0.1865,      0.2676,     -0.1992,      0.6289,     -0.3867,     -0.9570,      0.0222,     -0.5039],
        [     0.0000,     -1.0938,     -0.9766,     -0.7188,     -0.2832,      0.0654,     -0.5547,     -0.0613,     -0.0542,     -0.0408,     -1.1250,      1.0859,     -0.1807,      0.2012,      0.2676],
        [     0.0000,     -0.3027,     -0.1030,      0.1768,     -0.7617,      0.3223,     -0.3594,      0.2676,     -0.1104,     -0.6016,     -0.8906,     -0.0957,     -0.0947,     -0.0564,     -0.0437]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5281],
        [0.8083],
        [0.7026],
        [0.6688],
        [0.3643],
        [0.2712],
        [0.2269],
        [0.2292],
        [0.1431],
        [0.1384],
        [0.0740],
        [0.0643],
        [0.1044],
        [0.0737]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8398, 0.1602, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6719, 0.0845, 0.2422, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3379, 0.2930, 0.2246, 0.1445, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1602, 0.4043, 0.1729, 0.1289, 0.1328, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1885, 0.1973, 0.1187, 0.1426, 0.2314, 0.1221, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1348, 0.1631, 0.2178, 0.1245, 0.1357, 0.1050, 0.1182, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0889, 0.0610, 0.0342, 0.1865, 0.2432, 0.1562, 0.2002, 0.0304, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0991, 0.0874, 0.3027, 0.0649, 0.0491, 0.0601, 0.0645, 0.2148, 0.0571, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0869, 0.0806, 0.1758, 0.0669, 0.0415, 0.0762, 0.0513, 0.2295, 0.0688, 0.1221, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0752, 0.1533, 0.1641, 0.0488, 0.0369, 0.0693, 0.0393, 0.2715, 0.0342, 0.0820, 0.0250, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0786, 0.0493, 0.0383, 0.0908, 0.0752, 0.0649, 0.0991, 0.0287, 0.1807, 0.0510, 0.1914, 0.0520, 0.0000, 0.0000, 0.0000],
        [0.0486, 0.0811, 0.0366, 0.1079, 0.1484, 0.1230, 0.1128, 0.0237, 0.0510, 0.0476, 0.1582, 0.0277, 0.0339, 0.0000, 0.0000],
        [0.0801, 0.0579, 0.1504, 0.0491, 0.0579, 0.0605, 0.0510, 0.0991, 0.0481, 0.0928, 0.0454, 0.0801, 0.0796, 0.0479, 0.0000],
        [0.0630, 0.1357, 0.1299, 0.0454, 0.0349, 0.0713, 0.0297, 0.0864, 0.0415, 0.0679, 0.0674, 0.0566, 0.0513, 0.0581, 0.0608]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0095, -0.0075,  0.0145,  ...,  0.0156,  0.0226, -0.0343],
        [ 0.0024, -0.0094, -0.0230,  ...,  0.0449,  0.0209, -0.0250],
        [-0.0159, -0.0031, -0.0026,  ...,  0.0288,  0.0016,  0.0190],
        ...,
        [-0.0164,  0.0145,  0.0101,  ...,  0.0133,  0.0032,  0.0263],
        [ 0.0050,  0.0054,  0.0210,  ..., -0.0193,  0.0133, -0.0046],
        [-0.0117,  0.0225, -0.0155,  ..., -0.0346, -0.0004,  0.0312]], device='cuda:0', requires_grad=True)
K: tensor([     0.0084,     -1.2578,      0.6836,      0.4902,      0.2656,     -0.0009,     -1.0547,     -0.1943,      0.4766,     -0.8945,     -0.2080,      0.1299,      0.4492,      0.3828,     -0.3789,      0.0747,     -1.0938,     -1.2578,      1.1719,      0.5156,      0.8672,     -0.3750,
             0.1943,     -0.5078,      0.0869,      0.6211,     -0.4453,      0.1719,     -0.4648,      0.6992,      0.4746,     -0.4434,      0.3535,     -0.8164,     -0.0830,     -0.4180,     -0.3555,      0.0991,      1.0625,     -0.4199,     -0.2383,      0.1309,      0.3398,     -0.5820,
            -0.4375,     -0.4258,     -0.0593,      0.0291,     -0.7500,     -0.0086,     -0.3379,     -0.1045,     -0.2773,     -0.0845,      0.3027,     -0.0359,     -0.0830,      0.5234,      0.4512,      0.0640,     -0.4141,     -0.4785,     -0.0396,     -0.3906], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[-0.0292,  0.0073,  0.0106,  ..., -0.0095,  0.0068,  0.0379],
        [-0.0159, -0.0332,  0.0176,  ...,  0.0013,  0.0004, -0.0081],
        [-0.0129, -0.0139, -0.0147,  ..., -0.0448, -0.0413,  0.0256],
        ...,
        [ 0.0126,  0.0232, -0.0111,  ..., -0.0114,  0.0029, -0.0212],
        [-0.0044, -0.0059,  0.0034,  ...,  0.0405,  0.0094, -0.0623],
        [-0.0183, -0.0131, -0.0067,  ...,  0.0109,  0.0037,  0.0062]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.3320,  0.1719, -0.4941, -0.7305, -0.4707,  0.4375,  0.5078,  0.8320,  0.0635, -0.9336,  0.5391, -0.0835,  0.4062,  0.0562, -0.3281,  0.3027, -0.4941, -0.1230,  0.3281, -0.5586,  1.0234,  0.4336, -0.6445,  0.0771, -0.8125, -0.4395,  0.2441, -0.1172, -0.9844,  0.0222, -0.4707,  0.0796,
         0.3301, -0.0144,  0.9336,  0.1982, -0.5508,  0.0618, -0.2305, -0.9727, -0.4238, -0.4727, -0.1982,  1.1094, -0.2988,  0.8438, -0.5117,  0.1631,  0.9609, -0.0820, -0.7734,  0.1826, -0.0437,  0.7617,  0.5703,  0.7617, -0.2969, -0.5938,  0.6602, -0.8438,  0.0830, -0.2285, -0.6641, -0.3164],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -1.6562,  0.2246,  0.2207,  0.4355, -0.1191,  0.4102, -0.5352,  0.3457, -0.3574,  0.8711, -0.2373, -0.3750,  0.1177,  0.2988],
        [ 0.0000, -2.0781, -1.0234,  0.6797,  0.8750, -0.2578,  1.0078, -1.0312,  0.3301,  0.3301,  0.4453, -0.1592, -0.2002,  0.3340,  0.6367],
        [ 0.0000, -0.1416, -0.4102, -0.8516, -0.8945, -0.8086, -0.0337,  0.5898, -0.2021, -0.1943, -0.2090,  0.3633,  0.7656, -0.0549, -0.1436],
        [ 0.0000,  0.9297,  0.0771, -0.2129, -0.1826, -0.0435, -0.0845,  0.5391,  0.1426,  0.0933,  0.1152, -0.0786,  0.2871, -0.1846, -0.2334],
        [ 0.0000,  0.0415, -0.4648, -0.2812,  0.2041, -0.4375,  0.2197,  0.0410, -0.4453, -0.2275, -0.3750,  0.0378,  0.1455, -0.6406, -0.3066],
        [ 0.0000,  0.1895,  0.4746, -0.0815,  0.0064, -0.2500, -0.1357,  0.5156, -1.1172,  0.4551, -0.8516,  0.7344,  0.5625, -1.1172,  0.0767],
        [ 0.0000, -0.3789, -0.9570,  0.7383,  1.0078,  0.5625,  0.8086, -1.0781,  0.6016, -0.5938,  1.3438, -0.7539, -0.8516,  0.4805,  0.4395],
        [ 0.0000, -0.1260,  1.1172, -0.4277, -0.7070, -0.5000, -0.4336,  0.7734, -0.5508,  0.1387, -0.9844,  0.3945,  0.5586, -0.6211, -0.0518],
        [ 0.0000, -0.0767,  0.7031, -0.2637, -0.7422, -0.1367, -0.5312,  0.9688, -0.2354,  0.3398, -0.4043,  0.1021,  0.0586, -0.1016, -0.6328],
        [ 0.0000,  0.7109,  0.7773, -0.4336, -0.7148, -0.0825, -0.6523,  1.2812, -0.7891,  0.0835, -1.1016,  0.4844,  0.6211, -0.7500, -0.6172],
        [ 0.0000, -0.4668, -0.7188,  0.1426, -0.0435, -0.1904,  0.2285, -1.0078,  0.8320, -0.4336,  0.8906, -0.4141, -0.7188,  0.6953, -0.1436],
        [ 0.0000,  0.5156, -0.2793,  0.7969,  1.1172,  0.9297,  0.8398, -0.7188,  0.0496, -0.0194,  1.1797, -0.5586, -0.3555,  0.1641,  0.8438],
        [ 0.0000, -0.3223,  0.6328, -0.4883, -0.3223, -0.2793, -0.4492,  0.2148, -0.5078,  0.1455, -0.5664,  0.0034, -0.0077, -0.5156, -0.2852],
        [ 0.0000,  0.7695,  0.7266, -0.3242, -0.5859,  0.1279, -0.7500,  0.3203, -0.4180,  0.0732,  0.0708, -0.1045, -0.2021, -0.0801, -0.0352]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8372],
        [0.7699],
        [0.3678],
        [0.2161],
        [0.1608],
        [0.1201],
        [0.1139],
        [0.0976],
        [0.0939],
        [0.0869],
        [0.0718],
        [0.0638],
        [0.0662],
        [0.0629]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3750,     0.2393,     0.3848,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0297,     0.8828,     0.0562,     0.0327,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0038,     0.9766,     0.0138,     0.0042,     0.0018,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0010,     0.9922,     0.0036,     0.0021,     0.0006,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1406,     0.0027,     0.0476,     0.1113,     0.1504,     0.3027,     0.2451,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0099,     0.9219,     0.0332,     0.0101,     0.0051,     0.0039,     0.0069,     0.0087,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0757,     0.0000,     0.0131,     0.0317,     0.0811,     0.4922,     0.0986,     0.2012,     0.0076,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1191,     0.0015,     0.0432,     0.1011,     0.2090,     0.1846,     0.1250,     0.1582,     0.0309,     0.0277,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0820,     0.0000,     0.0245,     0.0806,     0.0625,     0.4590,     0.0723,     0.1465,     0.0106,     0.0544,     0.0069,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0864,     0.0000,     0.0122,     0.0796,     0.2061,     0.3301,     0.1060,     0.1514,     0.0086,     0.0092,     0.0113,     0.0005,     0.0000,     0.0000,     0.0000],
        [    0.0013,     0.9102,     0.0035,     0.0014,     0.0008,     0.0005,     0.0010,     0.0009,     0.0039,     0.0068,     0.0058,     0.0623,     0.0004,     0.0000,     0.0000],
        [    0.0659,     0.0001,     0.0228,     0.0300,     0.0559,     0.3008,     0.0767,     0.1826,     0.0130,     0.0408,     0.0172,     0.0058,     0.1709,     0.0183,     0.0000],
        [    0.0400,     0.0000,     0.0038,     0.0253,     0.0630,     0.2471,     0.0439,     0.1069,     0.0020,     0.0061,     0.0030,     0.0002,     0.4551,     0.0045,     0.0006]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0086, -0.0117, -0.0436,  ..., -0.0078,  0.0157,  0.0098],
        [-0.0092, -0.0072, -0.0194,  ..., -0.0576,  0.0229, -0.0363],
        [ 0.0027, -0.0235, -0.0446,  ..., -0.0280, -0.0098,  0.0152],
        ...,
        [-0.0159, -0.0121, -0.0245,  ..., -0.0151, -0.0203,  0.0130],
        [ 0.0064,  0.0336,  0.0512,  ...,  0.0129,  0.0084,  0.0380],
        [-0.0282, -0.0268, -0.0359,  ..., -0.0223,  0.0163, -0.0382]], device='cuda:0', requires_grad=True)
K: tensor([-0.5391,  0.7344,  1.1641,  0.2334, -0.5547, -0.1416,  1.1953,  0.3711,  1.3516,  0.6875, -0.5195, -0.1982,  0.4609,  0.8867,  0.6602, -0.3594, -0.2402,  0.7383,  1.5469, -1.0781, -0.3359,  0.8906,  0.8906,  0.0908,  0.9297, -1.0781,  1.4219, -0.2656, -0.3555, -0.0537,  0.5820, -0.1260,
         1.0312, -0.9609,  0.2002, -0.1377,  0.2100, -0.4395,  0.3633,  0.2676, -0.4785,  0.0151, -0.4824, -0.1709, -0.0303,  0.9219, -1.3672, -0.5820, -1.0312, -0.0625,  0.4336, -0.6055, -0.2578, -0.4082, -0.3535,  0.6836,  0.4512,  0.9062, -1.4688, -1.6641,  0.4023, -1.2891,  1.1328, -1.1016],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0003,  0.0197,  0.0434,  ...,  0.0503, -0.0147,  0.0103],
        [ 0.0227,  0.0152,  0.0081,  ...,  0.0283, -0.0077, -0.0055],
        [ 0.0135,  0.0212, -0.0196,  ...,  0.0346,  0.0074,  0.0663],
        ...,
        [ 0.0045,  0.0216,  0.0054,  ...,  0.0015,  0.0016,  0.0189],
        [-0.0377, -0.0123, -0.0240,  ...,  0.0186,  0.0199,  0.0158],
        [ 0.0215,  0.0179,  0.0107,  ..., -0.0029,  0.0116,  0.0440]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.0669, -1.0156, -0.5234, -1.5547,  1.5703, -1.7969, -1.6094,  1.2656, -0.8047, -0.6172,  0.3730,  0.7773, -0.8203,  0.0610, -0.8398,  0.8359,  0.8242, -1.2422, -1.4844,  1.0234,  0.6367, -0.5664, -0.7891, -1.4922,  0.6133,  0.5391, -1.0938,  1.2344,  0.7227,  1.3125, -0.2656,  0.4004,
        -0.4258,  0.1006, -0.9727, -0.6875, -0.4453,  0.4375, -1.3047,  0.2188,  1.5859, -1.2734,  0.5664,  0.2432, -0.1504, -1.4844,  1.4844,  0.6367,  1.0703, -1.5547, -2.0156,  0.6602,  1.5859, -0.0272, -0.1021, -1.0156, -1.6875, -1.0938,  1.1953,  1.0703, -1.5781,  0.7969, -1.3672,  0.3613],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,    -19.2500,     -4.2188,     -0.8242,      1.2031,      3.6719,      0.5703,      1.6328,     -5.0000,     -3.5000,     -4.3125,     -9.8750,      3.7969,     -3.6250,     -7.8125],
        [     0.0000,     -0.4531,      0.0244,      0.4336,      0.2021,     -0.1167,     -0.4863,      0.1953,     -0.2500,     -0.1787,     -0.3848,     -0.2500,      0.5156,     -0.2021,     -0.3242],
        [     0.0000,      3.3906,      0.6367,      0.0977,      0.1250,     -0.6992,      0.1729,     -0.2930,      0.6094,      0.0067,      0.4023,      1.7422,     -0.1465,      0.3418,      1.8516],
        [     0.0000,      5.5625,      1.2969,      0.1011,     -0.7578,     -0.6641,      0.1230,     -0.5508,      1.7188,      0.9844,      1.4062,      2.9062,     -1.3359,      1.3203,      1.7891],
        [     0.0000,      6.8750,      1.2578,      0.7148,     -0.4746,     -1.3047,     -0.3926,     -0.4629,      1.7422,      1.0156,      0.8789,      3.7969,     -1.1875,      1.2578,      3.1562],
        [     0.0000,     -3.9531,     -1.0781,     -0.2324,      0.0693,      0.7695,      0.5547,      0.3105,     -0.9258,     -0.4453,     -0.8125,     -1.7031,      0.2236,     -0.6875,     -1.2969],
        [     0.0000,      4.5312,      1.2109,      0.0272,     -0.6641,     -0.9297,     -0.3574,     -0.1299,      0.7930,      1.7656,      0.6289,      3.3906,     -0.9336,      0.4844,      1.9766],
        [     0.0000,     -9.6875,     -1.7500,     -0.8672,      0.0688,      1.8750,      0.2676,      0.9766,     -2.2969,     -1.0703,     -2.0156,     -4.0000,      1.5000,     -1.8047,     -3.4062],
        [     0.0000,     -4.4062,     -1.0156,     -0.1641,      0.5625,      0.4395,      0.0537,      0.2852,     -1.3438,     -1.4531,     -1.0547,     -2.8906,      1.4531,     -0.8555,     -1.6875],
        [     0.0000,     -7.6875,     -1.2109,     -0.0173,     -0.2695,      1.7188,     -0.1240,      0.5820,     -2.0469,     -0.4102,     -2.4844,     -2.8594,      0.9609,     -1.7266,     -3.5625],
        [     0.0000,     -8.9375,     -1.9531,     -0.0786,      0.8672,      1.3359,      0.2061,      0.5586,     -2.2969,     -2.2344,     -2.0312,     -5.2188,      2.3906,     -1.6562,     -3.3750],
        [     0.0000,      6.5938,      1.0156,      0.0913,     -0.4551,     -0.9805,     -0.2441,     -0.3320,      1.1250,      1.6875,      1.5312,      3.9062,     -1.1250,      0.7773,      2.9688],
        [     0.0000,     -6.9375,     -1.0625,     -0.7891,     -0.1680,      1.5156,      0.1504,      1.0156,     -1.6250,     -0.4824,     -1.3438,     -2.4375,      0.9531,     -1.2812,     -2.3594],
        [     0.0000,    -11.2500,     -2.3594,     -0.4609,      0.4512,      1.8203,      0.0933,      0.9844,     -2.9844,     -1.8828,     -2.6094,     -5.4062,      2.4375,     -2.1719,     -4.2188]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [1.0000],
        [0.4049],
        [0.0488],
        [0.0125],
        [0.0013],
        [0.1488],
        [0.0172],
        [0.0726],
        [0.1014],
        [0.0848],
        [0.0731],
        [0.0051],
        [0.0618],
        [0.0368]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8398, 0.1592, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2598, 0.2109, 0.5312, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2793, 0.0325, 0.4219, 0.2676, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3906, 0.0298, 0.3672, 0.2002, 0.0116, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3223, 0.0371, 0.3516, 0.1865, 0.0222, 0.0806, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0967, 0.1631, 0.0449, 0.0801, 0.3281, 0.2100, 0.0776, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1006, 0.1680, 0.1133, 0.0972, 0.1855, 0.0708, 0.1279, 0.1377, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0923, 0.0947, 0.0449, 0.0596, 0.2266, 0.1162, 0.1396, 0.0938, 0.1328, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0869, 0.0544, 0.2246, 0.1406, 0.0320, 0.0537, 0.0664, 0.1338, 0.0466, 0.1602, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1377, 0.0344, 0.0776, 0.0776, 0.0334, 0.0562, 0.3535, 0.0488, 0.0928, 0.0576, 0.0305, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1250, 0.0157, 0.2227, 0.1245, 0.0052, 0.0422, 0.1758, 0.0520, 0.0471, 0.1108, 0.0058, 0.0737, 0.0000, 0.0000, 0.0000],
        [0.0493, 0.1289, 0.0513, 0.0444, 0.1631, 0.0496, 0.0574, 0.0967, 0.0498, 0.0564, 0.0986, 0.0586, 0.0962, 0.0000, 0.0000],
        [0.0625, 0.0747, 0.0327, 0.0403, 0.1709, 0.0762, 0.1021, 0.0713, 0.0840, 0.0396, 0.0845, 0.0413, 0.0503, 0.0703, 0.0000],
        [0.0679, 0.0547, 0.0625, 0.0679, 0.0454, 0.0640, 0.1245, 0.0447, 0.0830, 0.0549, 0.0564, 0.0500, 0.0645, 0.0854, 0.0752]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0044, -0.0171, -0.0254,  ..., -0.0228, -0.0330,  0.0270],
        [ 0.0113, -0.0254, -0.0012,  ..., -0.0066,  0.0282, -0.0204],
        [-0.0177,  0.0107,  0.0012,  ..., -0.0003,  0.0415, -0.0278],
        ...,
        [ 0.0279, -0.0128, -0.0481,  ...,  0.0270,  0.0345, -0.0068],
        [ 0.0283, -0.0220, -0.0197,  ..., -0.0040, -0.0351,  0.0091],
        [ 0.0185, -0.0082,  0.0273,  ..., -0.0212,  0.0377,  0.0057]], device='cuda:0', requires_grad=True)
K: tensor([ 0.4121, -0.6445, -1.0859, -0.4043, -0.2256,  0.1147,  0.7422, -0.0659, -0.2158,  0.2129,  0.9141, -0.7422,  0.0474,  0.1079,  0.3711,  0.4824,  0.0703,  0.2734, -0.7891, -0.5469, -0.3359, -0.3574, -0.1211, -0.6602, -0.0068,  0.0591, -0.1855, -0.0148,  0.1006,  0.5547,  0.0058, -0.4043,
        -0.2969, -0.9375,  0.0630, -0.1138, -0.2236, -0.5430, -0.0908,  0.7070,  0.0143, -0.0275, -0.5469, -0.1465, -0.6953, -0.1182,  0.2832,  0.2812,  0.2773, -0.4395, -0.1055, -0.0294, -0.0508, -0.3184,  0.7969, -0.0381,  0.4004,  1.1797, -0.5586,  0.5156, -0.8164, -0.1299,  0.1416,  0.8555],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0055, -0.0069, -0.0011,  ...,  0.0188,  0.0005, -0.0400],
        [ 0.0053,  0.0164, -0.0085,  ..., -0.0166, -0.0103,  0.0467],
        [-0.0121,  0.0143, -0.0105,  ...,  0.0319, -0.0079,  0.0153],
        ...,
        [ 0.0258,  0.0251,  0.0003,  ...,  0.0015, -0.0087,  0.0363],
        [ 0.0176,  0.0216, -0.0293,  ...,  0.0349, -0.0424, -0.0073],
        [ 0.0065,  0.0326,  0.0098,  ..., -0.0223,  0.0043,  0.0173]], device='cuda:0', requires_grad=True)
Q: tensor([     1.1797,     -0.7383,     -0.3008,      0.4199,      1.0938,      0.0571,     -0.0003,     -0.4199,      0.8789,     -0.5977,     -0.3145,     -0.1650,     -0.8711,     -1.2656,     -0.8633,      0.3965,      0.2412,     -0.3398,     -0.7461,      0.0537,      0.5312,      0.4414,
             0.0381,      1.2109,     -0.2480,      0.1895,     -0.3516,     -1.2500,      0.2197,      0.1787,     -0.4531,      1.1875,     -0.8711,     -0.1445,      0.1128,     -0.3984,      0.4746,     -0.0071,     -0.7266,      0.7305,     -0.0869,     -0.4199,      0.4609,      0.1099,
             0.0898,      0.1191,     -0.0181,     -0.6289,      0.0708,     -0.1357,     -0.1807,     -0.3145,     -1.1016,      0.0952,      0.8359,     -0.1016,     -1.5078,      0.3516,     -0.2949,      0.2139,     -0.3555,      0.0264,     -0.8828,      0.1963], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -1.6641,     -0.5938,     -0.8516,     -1.9141,     -0.9961,      0.5039,     -0.4629,     -0.3965,     -0.8516,     -2.2500,     -1.1562,      0.3867,     -0.3086,     -0.6836],
        [     0.0000,     -0.2061,      0.7188,      0.4043,     -0.6055,     -0.3125,     -0.0036,      0.3496,     -0.2871,      0.4453,     -0.6523,      0.4688,      0.9336,     -0.1025,      0.5312],
        [     0.0000,     -2.1562,      0.4141,     -0.0396,     -3.1406,     -1.0938,      0.3770,     -0.8555,     -0.7891,     -0.2715,     -3.0469,     -0.6641,      0.5664,     -0.5742,     -0.2734],
        [     0.0000,     -2.5781,     -0.0613,     -0.6680,     -3.5156,     -1.3203,      0.0986,     -0.5977,     -1.1328,     -0.6250,     -3.2969,     -1.3203,      0.3223,     -0.9688,     -0.8867],
        [     0.0000,     -2.1562,      0.0923,     -0.5469,     -2.6719,     -1.3828,      0.1465,     -0.4668,     -0.9883,     -0.4062,     -3.0625,     -0.9492,      0.6641,     -0.7891,     -0.5312],
        [     0.0000,      0.5234,     -0.7617,     -0.1855,      1.2266,      0.7773,     -0.2178,     -0.0649,      0.7266,     -0.2637,      1.3984,     -0.2041,     -1.2031,      0.3965,     -0.6953],
        [     0.0000,      0.5117,      0.1211,     -0.0361,      0.6094,     -0.3496,      0.2373,      0.3125,     -0.1738,      0.0332,      0.3008,      0.2520,      0.6133,     -0.1060,      0.6289],
        [     0.0000,      0.0269,     -0.7188,     -0.4375,      0.8984,      0.2314,      0.4141,      0.0162,      0.3633,     -0.4883,      0.3340,     -0.4277,     -0.4277,      0.1318,     -0.4434],
        [     0.0000,     -0.4688,      0.9492,      0.4805,     -1.0000,     -0.4844,     -0.2676,      0.4316,     -0.6211,      0.6133,     -1.0938,      0.5820,      1.0938,     -0.3867,      0.5156],
        [     0.0000,     -1.3828,     -0.5703,     -0.5703,     -1.4141,     -0.8945,      0.9453,     -1.0391,     -0.3906,     -0.8711,     -1.5078,     -0.9805,     -0.3496,     -0.4844,     -0.3613],
        [     0.0000,     -2.0625,      0.5742,     -0.0055,     -3.1719,     -1.0859,      0.3398,     -0.8750,     -0.9727,     -0.1191,     -3.0781,     -0.5273,      0.6328,     -0.7109,     -0.1035],
        [     0.0000,      0.9648,      0.0408,     -0.1021,      1.1953,      0.0070,      0.1523,      0.6758,      0.0104,      0.1367,      0.6953,      0.1758,      0.6680,      0.1118,      0.4609],
        [     0.0000,      0.1748,     -0.6523,     -0.4453,      1.0000,      0.1953,      0.4863,      0.1260,      0.2910,     -0.4629,      0.2949,     -0.4180,     -0.2197,      0.1123,     -0.3379],
        [     0.0000,     -0.2139,     -0.0801,      0.0009,     -0.4023,     -0.0581,      0.6094,     -0.4160,      0.2021,     -0.2100,     -0.1846,     -0.3027,     -0.0486,      0.2334,      0.1030]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7826],
        [0.3763],
        [0.3802],
        [0.3569],
        [0.2976],
        [0.0913],
        [0.1025],
        [0.1013],
        [0.1116],
        [0.1551],
        [0.1579],
        [0.0521],
        [0.0649],
        [0.0819]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7617, 0.2373, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3027, 0.3008, 0.3965, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1797, 0.1865, 0.2207, 0.4121, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2080, 0.1572, 0.1416, 0.1934, 0.3008, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1006, 0.0781, 0.0859, 0.3398, 0.1221, 0.2734, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1211, 0.1523, 0.0640, 0.1309, 0.1377, 0.2129, 0.1816, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0908, 0.1162, 0.0957, 0.1021, 0.1475, 0.2676, 0.1235, 0.0559, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0972, 0.0977, 0.0630, 0.1182, 0.1865, 0.1138, 0.2383, 0.0298, 0.0557, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0898, 0.0757, 0.1191, 0.1387, 0.0623, 0.1934, 0.0554, 0.0952, 0.0520, 0.1177, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0688, 0.1299, 0.0601, 0.0564, 0.1602, 0.2041, 0.1582, 0.0309, 0.0251, 0.0796, 0.0262, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0688, 0.0564, 0.0898, 0.1201, 0.0212, 0.0923, 0.0239, 0.1328, 0.0500, 0.0613, 0.1973, 0.0864, 0.0000, 0.0000, 0.0000],
        [0.0674, 0.0962, 0.0515, 0.0796, 0.1089, 0.2139, 0.1187, 0.0242, 0.0366, 0.0757, 0.0576, 0.0476, 0.0226, 0.0000, 0.0000],
        [0.0659, 0.0728, 0.0425, 0.0728, 0.1592, 0.0879, 0.1943, 0.0249, 0.0508, 0.0410, 0.0620, 0.0664, 0.0299, 0.0299, 0.0000],
        [0.0649, 0.0718, 0.0481, 0.0635, 0.0347, 0.1191, 0.0564, 0.0664, 0.0454, 0.0469, 0.1338, 0.0398, 0.0728, 0.0542, 0.0820]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0217,  0.0217,  0.0117,  ..., -0.0152,  0.0089, -0.0214],
        [-0.0030,  0.0209, -0.0030,  ..., -0.0203,  0.0187,  0.0025],
        [ 0.0171, -0.0115,  0.0003,  ..., -0.0302,  0.0412, -0.0129],
        ...,
        [ 0.0153, -0.0194, -0.0103,  ..., -0.0068,  0.0128,  0.0252],
        [ 0.0218, -0.0007, -0.0119,  ..., -0.0506, -0.0176, -0.0214],
        [-0.0073,  0.0213,  0.0198,  ..., -0.0035,  0.0428,  0.0290]], device='cuda:0', requires_grad=True)
K: tensor([-0.5156,  0.0679, -0.0289,  0.0996, -0.4746,  0.6836,  0.1133,  0.1602, -0.7422,  0.7812,  0.0698, -0.6250,  1.0859, -0.1260,  0.3711,  0.7148, -0.4883, -0.0898,  0.1758, -0.4395, -0.6758,  0.2500,  0.3516, -0.2139,  0.2656,  0.2480,  0.0388,  0.0767,  0.6875,  0.1230,  0.5273,  0.2383,
         0.2715,  0.3203, -0.2559, -0.3828, -0.1523,  0.1250,  0.6914, -0.7617,  0.1484,  0.5117, -0.5312,  0.1016, -0.0791, -0.1318, -1.3047, -0.7734, -0.5977,  0.5938,  0.3379,  0.9297,  0.4727, -0.7734,  0.9336,  0.3887, -0.3906,  0.4961, -0.1592, -0.0374,  0.1167,  0.1279, -0.2354,  0.1641],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0244, -0.0112, -0.0277,  ..., -0.0379, -0.0186,  0.0030],
        [-0.0026,  0.0066, -0.0299,  ..., -0.0062,  0.0107,  0.0167],
        [ 0.0284, -0.0091,  0.0330,  ...,  0.0271,  0.0054, -0.0351],
        ...,
        [ 0.0231, -0.0163,  0.0294,  ...,  0.0119,  0.0109, -0.0073],
        [ 0.0007, -0.0076, -0.0182,  ...,  0.0236,  0.0258, -0.0008],
        [ 0.0137, -0.0080, -0.0230,  ...,  0.0054,  0.0230,  0.0139]], device='cuda:0', requires_grad=True)
Q: tensor([     0.5430,      0.4727,      0.8867,      0.0820,     -0.6367,     -0.0001,     -0.1426,     -0.0150,      0.5508,      0.6758,      0.5781,      1.3047,     -0.6992,     -0.2871,      0.0742,     -0.6641,     -0.2285,     -1.1406,      0.0479,     -0.1279,     -0.6172,      0.2383,
             0.0000,     -0.5430,      0.8672,     -1.1875,      1.7578,     -0.4434,      0.0747,     -0.3516,     -0.5117,      0.1396,      0.0488,      0.7773,     -0.8711,      0.2969,      0.2930,     -0.5938,     -0.0874,     -0.5039,      0.7383,      0.5703,     -0.3770,     -0.2148,
            -0.0369,     -1.3281,     -0.3301,      0.4395,     -0.2578,      0.4902,      0.6055,      0.7266,      0.4043,     -0.9727,     -0.5508,      0.1826,     -0.5430,     -0.5938,     -0.4004,     -0.8008,     -0.4629,     -0.2949,     -0.0017,     -0.3672], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -1.1641, -0.0664,  0.1953, -0.4980, -0.0302,  0.1060, -0.6133, -0.8906,  0.1514,  0.1475,  0.1030, -0.9180, -1.1562, -0.4238],
        [ 0.0000, -0.0035,  0.2734,  0.4277, -0.6562,  0.7773, -0.6641,  0.2236, -0.6289,  0.1348,  0.2617, -0.0356,  0.2871, -0.4023, -0.1182],
        [ 0.0000,  0.0396,  0.2080,  0.8320, -1.0469,  0.6211, -0.8320, -0.1230, -0.8086, -0.0096,  0.8398,  0.3066, -0.1650, -0.4375,  0.1445],
        [ 0.0000, -0.2773, -0.3828, -0.0737,  0.3672,  0.4180,  0.5469, -0.9961, -0.7930, -0.1328, -0.2773, -0.1602, -1.2109, -1.2578, -0.6211],
        [ 0.0000, -0.2500, -0.1553,  1.2188,  0.1943,  1.0078,  1.2344, -2.0000, -1.0547,  0.2598, -0.0510,  0.5742, -2.2656, -1.9531, -0.8086],
        [ 0.0000,  0.2295, -0.6406,  0.0742,  0.1260,  0.5625,  0.4043, -1.8359, -0.9023,  0.1147, -0.0972, -0.3086, -2.3281, -1.5078, -1.0547],
        [ 0.0000,  0.2480,  0.0547,  0.1152,  0.4844,  1.0859,  0.3086, -0.4863, -0.5117,  0.3613, -0.3125, -0.2393, -0.5508, -1.0156, -0.6641],
        [ 0.0000,  0.0031, -0.4355,  0.1914,  0.6523,  0.1543,  0.8945, -1.1797, -0.5586, -0.3887, -0.0116,  0.1357, -1.1484, -1.0547, -0.2041],
        [ 0.0000, -0.1729,  0.2812,  0.4336, -0.3691,  0.7656, -0.4863,  0.0530, -0.5469,  0.2656, -0.1250,  0.0562,  0.0439, -0.4707, -0.3477],
        [ 0.0000,  0.6367, -0.1338, -0.1992,  0.8477,  1.0859,  0.8320, -0.8008, -1.0078,  0.1455, -0.9648, -0.3555, -0.8125, -1.6094, -0.4570],
        [ 0.0000, -0.2002,  0.2617,  0.5547, -1.1797,  0.2910, -1.0625,  0.6523, -0.3242, -0.1172,  1.0547,  0.2227,  0.7383,  0.3105,  0.5742],
        [ 0.0000,  0.3555, -0.2676,  0.1641,  0.4785,  1.1562,  0.5664, -1.0234, -0.6094,  0.1138, -0.1572, -0.3496, -1.0938, -1.2344, -0.7695],
        [ 0.0000,  0.1006, -0.4375,  0.1006,  0.8867,  0.2910,  1.0859, -0.9688, -0.2578, -0.4688, -0.0571,  0.0093, -0.7891, -0.7891, -0.1216],
        [ 0.0000,  0.1021, -0.2969, -0.0176, -0.6289,  0.6094, -0.1387,  0.0219, -0.3555, -0.3203,  0.7266, -0.4863,  0.1196, -0.1768,  0.2393]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5332],
        [0.2744],
        [0.2048],
        [0.1446],
        [0.0980],
        [0.0917],
        [0.0556],
        [0.0663],
        [0.0686],
        [0.0484],
        [0.0616],
        [0.0386],
        [0.0445],
        [0.0523]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.1543 a:0.1543,:0.0415 and:0.1387in:0.0111,:0.1348 a:0.1040,:0.0413)
,
------
		( a:0.1543,:0.0415 and:0.1387in:0.0111,:0.1348 a:0.1040,:0.0413 and:0.1719)
 and the most of the most of the most of the most of the most
@ 550 train 6.3270 , allloss: 12.2866, dt: 1710.99ms, fracRes: 0.0927, norm(attn): 0.0947, norm(output): 1.0781, norm(x): 1.0364, norm(y): 1.0000, norm:11.9375, tok/sec: 76605.90, flops:80.40, batch-reuse:1
@ 551 train 6.3477 , allloss: 13.4018, dt: 1270.23ms, fracRes: 0.0891, norm(attn): 0.0947, norm(output): 1.0781, norm(x): 1.0420, norm(y): 1.0001, norm:13.6231, tok/sec: 103187.53, flops:108.30, batch-reuse:1
@ 552 train 6.2309 , allloss: 12.0888, dt: 1270.27ms, fracRes: 0.0874, norm(attn): 0.0947, norm(output): 1.0703, norm(x): 1.0381, norm(y): 1.0001, norm:10.6880, tok/sec: 103184.43, flops:108.29, batch-reuse:1
@ 553 train 6.3466 , allloss: 10.7976, dt: 1286.37ms, fracRes: 0.0881, norm(attn): 0.0981, norm(output): 1.0703, norm(x): 1.0410, norm(y): 1.0002, norm:8.2585, tok/sec: 101892.90, flops:106.94, batch-reuse:1
@ 554 train 6.2808 , allloss: 10.3052, dt: 1273.16ms, fracRes: 0.0889, norm(attn): 0.0977, norm(output): 1.0859, norm(x): 1.0443, norm(y): 1.0001, norm:8.0904, tok/sec: 102950.39, flops:108.05, batch-reuse:1
@ 555 train 6.2619 , allloss: 10.9473, dt: 1252.91ms, fracRes: 0.0878, norm(attn): 0.0952, norm(output): 1.0859, norm(x): 1.0428, norm(y): 1.0001, norm:11.2957, tok/sec: 104614.07, flops:109.79, batch-reuse:1
@ 556 train 6.2082 , allloss: 10.9400, dt: 1254.09ms, fracRes: 0.0898, norm(attn): 0.0957, norm(output): 1.0938, norm(x): 1.0413, norm(y): 1.0000, norm:11.1992, tok/sec: 104515.96, flops:109.69, batch-reuse:1
@ 557 train 6.3009 , allloss: 10.5541, dt: 1284.05ms, fracRes: 0.0912, norm(attn): 0.0977, norm(output): 1.0859, norm(x): 1.0378, norm(y): 1.0000, norm:9.6583, tok/sec: 102077.10, flops:107.13, batch-reuse:1
@ 558 train 6.4277 , allloss: 10.1677, dt: 1262.19ms, fracRes: 0.0912, norm(attn): 0.0986, norm(output): 1.1094, norm(x): 1.0504, norm(y): 1.0000, norm:8.2069, tok/sec: 103844.94, flops:108.99, batch-reuse:1
@ 559 train 6.5159 , allloss: 9.6460, dt: 1263.47ms, fracRes: 0.0916, norm(attn): 0.1001, norm(output): 1.1094, norm(x): 1.0560, norm(y): 1.0001, norm:7.3732, tok/sec: 103739.78, flops:108.88, batch-reuse:1
@ 560 train 6.4614 , allloss: 9.9534, dt: 1271.60ms, fracRes: 0.0888, norm(attn): 0.0981, norm(output): 1.1016, norm(x): 1.0521, norm(y): 1.0001, norm:8.4382, tok/sec: 103076.07, flops:108.18, batch-reuse:1
@ 561 train 6.5089 , allloss: 15.4250, dt: 1262.57ms, fracRes: 0.0801, norm(attn): 0.0996, norm(output): 1.1016, norm(x): 1.0531, norm(y): 1.0001, norm:27.0613, tok/sec: 103813.25, flops:108.95, batch-reuse:1
@ 562 train 6.4790 , allloss: 9.6695, dt: 1271.16ms, fracRes: 0.0863, norm(attn): 0.1001, norm(output): 1.0859, norm(x): 1.0502, norm(y): 1.0001, norm:10.3597, tok/sec: 103112.48, flops:108.22, batch-reuse:1
@ 563 train 6.5498 , allloss: 9.4897, dt: 1247.67ms, fracRes: 0.0901, norm(attn): 0.1011, norm(output): 1.0859, norm(x): 1.0526, norm(y): 1.0001, norm:6.4592, tok/sec: 105053.73, flops:110.26, batch-reuse:1
@ 564 train 6.4058 , allloss: 9.4354, dt: 1246.14ms, fracRes: 0.0903, norm(attn): 0.0967, norm(output): 1.0781, norm(x): 1.0507, norm(y): 1.0001, norm:6.3603, tok/sec: 105182.42, flops:110.39, batch-reuse:1
@ 565 train 6.2717 , allloss: 10.1215, dt: 1271.99ms, fracRes: 0.0893, norm(attn): 0.0938, norm(output): 1.1016, norm(x): 1.0598, norm(y): 1.0001, norm:8.7433, tok/sec: 103045.20, flops:108.15, batch-reuse:1
@ 566 train 6.4735 , allloss: 11.1319, dt: 1270.22ms, fracRes: 0.0902, norm(attn): 0.0894, norm(output): 1.1094, norm(x): 1.0728, norm(y): 1.0002, norm:13.4543, tok/sec: 103188.27, flops:108.30, batch-reuse:1
@ 567 train 6.4898 , allloss: 12.4833, dt: 1257.89ms, fracRes: 0.0908, norm(attn): 0.0894, norm(output): 1.1094, norm(x): 1.0787, norm(y): 1.0002, norm:18.0069, tok/sec: 104200.19, flops:109.36, batch-reuse:1
@ 568 train 6.5249 , allloss: 13.4564, dt: 1283.97ms, fracRes: 0.0910, norm(attn): 0.0884, norm(output): 1.1172, norm(x): 1.0843, norm(y): 1.0001, norm:15.5036, tok/sec: 102083.58, flops:107.14, batch-reuse:1
@ 569 train 6.4632 , allloss: 14.1484, dt: 1267.18ms, fracRes: 0.0911, norm(attn): 0.0879, norm(output): 1.1094, norm(x): 1.0886, norm(y): 1.0001, norm:16.3596, tok/sec: 103436.15, flops:108.56, batch-reuse:1
@ 570 train 6.4210 , allloss: 13.2701, dt: 1276.93ms, fracRes: 0.0911, norm(attn): 0.0903, norm(output): 1.1094, norm(x): 1.0969, norm(y): 1.0000, norm:16.2219, tok/sec: 102646.53, flops:107.73, batch-reuse:1
@ 571 train 6.3879 , allloss: 11.7698, dt: 1258.12ms, fracRes: 0.0911, norm(attn): 0.0918, norm(output): 1.1094, norm(x): 1.0979, norm(y): 1.0000, norm:12.7298, tok/sec: 104181.07, flops:109.34, batch-reuse:1
@ 572 train 6.3546 , allloss: 9.6964, dt: 1262.46ms, fracRes: 0.0907, norm(attn): 0.0952, norm(output): 1.1094, norm(x): 1.0986, norm(y): 1.0000, norm:7.0836, tok/sec: 103822.56, flops:108.96, batch-reuse:1
@ 573 train 6.3750 , allloss: 9.1309, dt: 1270.25ms, fracRes: 0.0906, norm(attn): 0.0962, norm(output): 1.1094, norm(x): 1.1036, norm(y): 1.0000, norm:4.4842, tok/sec: 103185.94, flops:108.30, batch-reuse:1
@ 574 train 6.4761 , allloss: 8.9770, dt: 1288.59ms, fracRes: 0.0925, norm(attn): 0.1060, norm(output): 1.1172, norm(x): 1.1056, norm(y): 1.0000, norm:5.7056, tok/sec: 101717.59, flops:106.75, batch-reuse:1
@ 575 train 6.4248 , allloss: 8.6172, dt: 1257.27ms, fracRes: 0.0919, norm(attn): 0.1021, norm(output): 1.1172, norm(x): 1.1223, norm(y): 0.9999, norm:4.7362, tok/sec: 104251.29, flops:109.41, batch-reuse:1
@ 576 train 6.3422 , allloss: 8.2409, dt: 1294.71ms, fracRes: 0.0931, norm(attn): 0.1064, norm(output): 1.1094, norm(x): 1.1181, norm(y): 1.0000, norm:4.8426, tok/sec: 101236.52, flops:106.25, batch-reuse:1
@ 577 train 6.4759 , allloss: 8.3281, dt: 1272.18ms, fracRes: 0.0924, norm(attn): 0.1084, norm(output): 1.1172, norm(x): 1.1282, norm(y): 1.0001, norm:5.1996, tok/sec: 103029.50, flops:108.13, batch-reuse:1
@ 578 train 6.3965 , allloss: 8.2021, dt: 1263.72ms, fracRes: 0.0927, norm(attn): 0.1089, norm(output): 1.1172, norm(x): 1.1404, norm(y): 1.0000, norm:5.5778, tok/sec: 103719.18, flops:108.86, batch-reuse:1
@ 579 train 6.4065 , allloss: 8.0131, dt: 1268.21ms, fracRes: 0.0929, norm(attn): 0.1099, norm(output): 1.1250, norm(x): 1.1404, norm(y): 1.0000, norm:3.8199, tok/sec: 103352.09, flops:108.47, batch-reuse:1
@ 580 train 6.4485 , allloss: 8.7654, dt: 1262.95ms, fracRes: 0.0933, norm(attn): 0.1104, norm(output): 1.1250, norm(x): 1.1440, norm(y): 1.0000, norm:6.9157, tok/sec: 103782.69, flops:108.92, batch-reuse:1
@ 581 train 6.4320 , allloss: 8.4926, dt: 1284.37ms, fracRes: 0.0940, norm(attn): 0.1094, norm(output): 1.1250, norm(x): 1.1454, norm(y): 1.0001, norm:4.9317, tok/sec: 102051.88, flops:107.11, batch-reuse:1
@ 582 train 6.4018 , allloss: 7.9800, dt: 1277.87ms, fracRes: 0.0938, norm(attn): 0.1045, norm(output): 1.1328, norm(x): 1.1620, norm(y): 1.0000, norm:4.3196, tok/sec: 102570.52, flops:107.65, batch-reuse:1
@ 583 train 6.3512 , allloss: 9.0134, dt: 1259.42ms, fracRes: 0.0910, norm(attn): 0.1040, norm(output): 1.1328, norm(x): 1.1679, norm(y): 1.0000, norm:4.8706, tok/sec: 104073.09, flops:109.23, batch-reuse:1
@ 584 train 6.4288 , allloss: 8.4582, dt: 1265.64ms, fracRes: 0.0924, norm(attn): 0.1025, norm(output): 1.1328, norm(x): 1.1738, norm(y): 1.0000, norm:4.4826, tok/sec: 103561.66, flops:108.69, batch-reuse:1
@ 585 train 6.3598 , allloss: 9.4445, dt: 1262.47ms, fracRes: 0.0914, norm(attn): 0.1040, norm(output): 1.1406, norm(x): 1.1775, norm(y): 1.0000, norm:6.3022, tok/sec: 103821.54, flops:108.96, batch-reuse:1
@ 586 train 6.3909 , allloss: 8.5342, dt: 1238.11ms, fracRes: 0.0929, norm(attn): 0.1025, norm(output): 1.1406, norm(x): 1.1858, norm(y): 1.0000, norm:4.8224, tok/sec: 105864.64, flops:111.11, batch-reuse:1
@ 587 train 6.3949 , allloss: 8.5075, dt: 1262.12ms, fracRes: 0.0946, norm(attn): 0.1011, norm(output): 1.1406, norm(x): 1.1813, norm(y): 1.0000, norm:5.4384, tok/sec: 103850.96, flops:108.99, batch-reuse:1
@ 588 train 6.3987 , allloss: 8.9632, dt: 1251.17ms, fracRes: 0.0961, norm(attn): 0.0967, norm(output): 1.1562, norm(x): 1.1898, norm(y): 1.0001, norm:6.1918, tok/sec: 104759.57, flops:109.95, batch-reuse:1
@ 589 train 6.3974 , allloss: 8.9962, dt: 1253.67ms, fracRes: 0.1000, norm(attn): 0.0942, norm(output): 1.1641, norm(x): 1.1893, norm(y): 1.0001, norm:6.4937, tok/sec: 104550.88, flops:109.73, batch-reuse:1
@ 590 train 6.3809 , allloss: 9.4795, dt: 1258.40ms, fracRes: 0.0991, norm(attn): 0.0947, norm(output): 1.1641, norm(x): 1.1904, norm(y): 1.0001, norm:10.5541, tok/sec: 104157.96, flops:109.32, batch-reuse:1
@ 591 train 6.3428 , allloss: 8.8686, dt: 1258.34ms, fracRes: 0.0996, norm(attn): 0.0928, norm(output): 1.1641, norm(x): 1.2004, norm(y): 1.0001, norm:5.9865, tok/sec: 104162.62, flops:109.32, batch-reuse:1
@ 592 train 6.3340 , allloss: 8.5714, dt: 1275.52ms, fracRes: 0.1097, norm(attn): 0.0923, norm(output): 1.1719, norm(x): 1.1936, norm(y): 1.0001, norm:5.9274, tok/sec: 102759.65, flops:107.85, batch-reuse:1
@ 593 train 6.3191 , allloss: 8.8607, dt: 1260.20ms, fracRes: 0.1091, norm(attn): 0.0908, norm(output): 1.1797, norm(x): 1.2017, norm(y): 1.0001, norm:7.7657, tok/sec: 104008.83, flops:109.16, batch-reuse:1
@ 594 train 6.5142 , allloss: 9.1327, dt: 1260.54ms, fracRes: 0.1109, norm(attn): 0.0889, norm(output): 1.2031, norm(x): 1.2184, norm(y): 1.0002, norm:5.8849, tok/sec: 103980.44, flops:109.13, batch-reuse:1
@ 595 train 6.2836 , allloss: 8.4321, dt: 1274.61ms, fracRes: 0.1074, norm(attn): 0.0903, norm(output): 1.1875, norm(x): 1.2192, norm(y): 1.0001, norm:5.6688, tok/sec: 102833.39, flops:107.93, batch-reuse:1
@ 596 train 6.3153 , allloss: 8.7864, dt: 1262.42ms, fracRes: 0.1056, norm(attn): 0.0913, norm(output): 1.1953, norm(x): 1.2140, norm(y): 1.0001, norm:8.0287, tok/sec: 103825.64, flops:108.97, batch-reuse:1
@ 597 train 6.2888 , allloss: 9.8120, dt: 1265.04ms, fracRes: 0.1054, norm(attn): 0.0928, norm(output): 1.2031, norm(x): 1.2189, norm(y): 1.0001, norm:5.8622, tok/sec: 103611.19, flops:108.74, batch-reuse:1
@ 598 train 6.3818 , allloss: 9.2265, dt: 1265.14ms, fracRes: 0.1089, norm(attn): 0.0938, norm(output): 1.2031, norm(x): 1.2221, norm(y): 1.0002, norm:6.1108, tok/sec: 103602.54, flops:108.73, batch-reuse:1
@ 599 train 6.3545 , allloss: 9.2367, dt: 1291.36ms, fracRes: 0.1114, norm(attn): 0.0942, norm(output): 1.2188, norm(x): 1.2279, norm(y): 1.0002, norm:6.0095, tok/sec: 101498.90, flops:106.52, batch-reuse:1
@ 600 train 6.3107 , allloss: 8.8928, dt: 1255.15ms, fracRes: 0.1096, norm(attn): 0.0947, norm(output): 1.2266, norm(x): 1.2287, norm(y): 1.0002, norm:5.7087, tok/sec: 104427.33, flops:109.60, batch-reuse:1
@ 601 train 6.3813 , allloss: 9.1384, dt: 1272.99ms, fracRes: 0.1149, norm(attn): 0.0977, norm(output): 1.2344, norm(x): 1.2289, norm(y): 1.0002, norm:6.2210, tok/sec: 102964.02, flops:108.06, batch-reuse:1
@ 602 train 6.3480 , allloss: 8.5338, dt: 1262.25ms, fracRes: 0.1075, norm(attn): 0.1006, norm(output): 1.2422, norm(x): 1.2468, norm(y): 1.0002, norm:4.9691, tok/sec: 103840.23, flops:108.98, batch-reuse:1
@ 603 train 6.3097 , allloss: 8.9633, dt: 1271.27ms, fracRes: 0.1007, norm(attn): 0.1025, norm(output): 1.2422, norm(x): 1.2551, norm(y): 1.0002, norm:5.6987, tok/sec: 103103.35, flops:108.21, batch-reuse:1
@ 604 train 6.2194 , allloss: 9.1058, dt: 1250.58ms, fracRes: 0.0991, norm(attn): 0.1016, norm(output): 1.2422, norm(x): 1.2585, norm(y): 1.0001, norm:7.4840, tok/sec: 104808.98, flops:110.00, batch-reuse:1
@ 605 train 6.2515 , allloss: 8.8260, dt: 1252.34ms, fracRes: 0.0992, norm(attn): 0.1011, norm(output): 1.2422, norm(x): 1.2642, norm(y): 1.0001, norm:8.9916, tok/sec: 104661.55, flops:109.84, batch-reuse:1
@ 606 train 6.2769 , allloss: 8.6857, dt: 1248.47ms, fracRes: 0.1004, norm(attn): 0.1016, norm(output): 1.2422, norm(x): 1.2672, norm(y): 1.0001, norm:5.8186, tok/sec: 104985.86, flops:110.18, batch-reuse:1
@ 607 train 6.2743 , allloss: 9.0806, dt: 1249.72ms, fracRes: 0.1005, norm(attn): 0.1035, norm(output): 1.2422, norm(x): 1.2652, norm(y): 1.0002, norm:8.7481, tok/sec: 104881.31, flops:110.07, batch-reuse:1
@ 608 train 6.1975 , allloss: 9.5338, dt: 1263.30ms, fracRes: 0.0969, norm(attn): 0.1060, norm(output): 1.2422, norm(x): 1.2688, norm(y): 1.0001, norm:8.5910, tok/sec: 103753.94, flops:108.89, batch-reuse:1
@ 609 train 6.2493 , allloss: 9.4367, dt: 1251.89ms, fracRes: 0.0965, norm(attn): 0.1035, norm(output): 1.2500, norm(x): 1.2763, norm(y): 1.0002, norm:7.6966, tok/sec: 104698.98, flops:109.88, batch-reuse:1
@ 610 train 6.4075 , allloss: 9.2069, dt: 1280.15ms, fracRes: 0.0964, norm(attn): 0.1035, norm(output): 1.2500, norm(x): 1.2880, norm(y): 1.0002, norm:7.5233, tok/sec: 102387.72, flops:107.46, batch-reuse:1
@ 611 train 6.3031 , allloss: 8.8733, dt: 1261.65ms, fracRes: 0.0960, norm(attn): 0.1040, norm(output): 1.2578, norm(x): 1.2880, norm(y): 1.0002, norm:10.5155, tok/sec: 103889.46, flops:109.03, batch-reuse:1
@ 612 train 6.3287 , allloss: 8.7448, dt: 1265.11ms, fracRes: 0.0949, norm(attn): 0.1050, norm(output): 1.2578, norm(x): 1.2904, norm(y): 1.0002, norm:7.0569, tok/sec: 103605.16, flops:108.74, batch-reuse:1
@ 613 train 6.4187 , allloss: 8.8010, dt: 1261.67ms, fracRes: 0.0939, norm(attn): 0.1064, norm(output): 1.2578, norm(x): 1.2952, norm(y): 1.0004, norm:7.5588, tok/sec: 103887.48, flops:109.03, batch-reuse:1
@ 614 train 6.3208 , allloss: 8.6212, dt: 1267.56ms, fracRes: 0.0938, norm(attn): 0.1069, norm(output): 1.2656, norm(x): 1.2967, norm(y): 1.0003, norm:6.2748, tok/sec: 103404.81, flops:108.53, batch-reuse:1
@ 615 train 6.3347 , allloss: 8.7528, dt: 1281.41ms, fracRes: 0.0924, norm(attn): 0.1030, norm(output): 1.2656, norm(x): 1.3009, norm(y): 1.0002, norm:5.1562, tok/sec: 102287.44, flops:107.35, batch-reuse:1
@ 616 train 6.3645 , allloss: 8.7282, dt: 1260.49ms, fracRes: 0.0922, norm(attn): 0.1025, norm(output): 1.2891, norm(x): 1.3163, norm(y): 1.0004, norm:6.1568, tok/sec: 103984.94, flops:109.13, batch-reuse:1
@ 617 train 6.1947 , allloss: 8.8494, dt: 1272.05ms, fracRes: 0.0940, norm(attn): 0.1001, norm(output): 1.2812, norm(x): 1.3014, norm(y): 1.0002, norm:5.7767, tok/sec: 103040.06, flops:108.14, batch-reuse:1
@ 618 train 6.3687 , allloss: 8.6407, dt: 1255.62ms, fracRes: 0.0954, norm(attn): 0.1001, norm(output): 1.2812, norm(x): 1.2967, norm(y): 1.0002, norm:6.4426, tok/sec: 104388.05, flops:109.56, batch-reuse:1
@ 619 train 6.3180 , allloss: 8.4642, dt: 1266.93ms, fracRes: 0.0956, norm(attn): 0.1040, norm(output): 1.3281, norm(x): 1.3301, norm(y): 1.0003, norm:5.1399, tok/sec: 103456.22, flops:108.58, batch-reuse:1
@ 620 train 6.3821 , allloss: 8.8621, dt: 1297.23ms, fracRes: 0.0979, norm(attn): 0.0996, norm(output): 1.3281, norm(x): 1.3348, norm(y): 1.0003, norm:7.8365, tok/sec: 101039.94, flops:106.04, batch-reuse:1
@ 621 train 6.3106 , allloss: 9.0976, dt: 1275.89ms, fracRes: 0.1005, norm(attn): 0.1006, norm(output): 1.3047, norm(x): 1.3209, norm(y): 1.0003, norm:6.9259, tok/sec: 102729.47, flops:107.82, batch-reuse:1
@ 622 train 6.2803 , allloss: 8.5091, dt: 1270.46ms, fracRes: 0.1040, norm(attn): 0.0991, norm(output): 1.3281, norm(x): 1.3133, norm(y): 1.0003, norm:4.8649, tok/sec: 103168.65, flops:108.28, batch-reuse:1
@ 623 train 6.2587 , allloss: 8.4513, dt: 1262.01ms, fracRes: 0.1087, norm(attn): 0.0957, norm(output): 1.3438, norm(x): 1.3183, norm(y): 1.0004, norm:4.6667, tok/sec: 103859.88, flops:109.00, batch-reuse:1
@ 624 train 6.3368 , allloss: 8.4942, dt: 1269.01ms, fracRes: 0.1115, norm(attn): 0.0938, norm(output): 1.3516, norm(x): 1.3242, norm(y): 1.0005, norm:4.3256, tok/sec: 103286.73, flops:108.40, batch-reuse:1
@ 625 train 6.3779 , allloss: 8.6369, dt: 1241.45ms, fracRes: 0.1115, norm(attn): 0.0947, norm(output): 1.3516, norm(x): 1.3339, norm(y): 1.0005, norm:4.6244, tok/sec: 105579.78, flops:110.81, batch-reuse:1
@ 626 train 6.3067 , allloss: 8.5777, dt: 1289.42ms, fracRes: 0.1011, norm(attn): 0.0947, norm(output): 1.3594, norm(x): 1.3415, norm(y): 1.0004, norm:5.4130, tok/sec: 101651.78, flops:106.69, batch-reuse:1
@ 627 train 6.2376 , allloss: 8.2644, dt: 1263.61ms, fracRes: 0.0985, norm(attn): 0.0952, norm(output): 1.3594, norm(x): 1.3457, norm(y): 1.0003, norm:4.2733, tok/sec: 103728.33, flops:108.86, batch-reuse:1
@ 628 train 6.3253 , allloss: 8.3609, dt: 1265.64ms, fracRes: 0.0976, norm(attn): 0.0957, norm(output): 1.3672, norm(x): 1.3532, norm(y): 1.0003, norm:3.8743, tok/sec: 103561.50, flops:108.69, batch-reuse:1
@ 629 train 6.3788 , allloss: 8.3666, dt: 1261.39ms, fracRes: 0.0988, norm(attn): 0.0991, norm(output): 1.3672, norm(x): 1.3629, norm(y): 1.0004, norm:4.7784, tok/sec: 103911.06, flops:109.06, batch-reuse:1
@ 630 train 6.3965 , allloss: 8.7998, dt: 1284.64ms, fracRes: 0.1009, norm(attn): 0.0967, norm(output): 1.3750, norm(x): 1.3701, norm(y): 1.0004, norm:4.6346, tok/sec: 102030.51, flops:107.08, batch-reuse:1
@ 631 train 6.3528 , allloss: 9.0086, dt: 1254.13ms, fracRes: 0.1060, norm(attn): 0.0938, norm(output): 1.3594, norm(x): 1.3544, norm(y): 1.0004, norm:5.2028, tok/sec: 104512.24, flops:109.69, batch-reuse:1
@ 632 train 6.4944 , allloss: 9.7476, dt: 1264.17ms, fracRes: 0.1145, norm(attn): 0.0942, norm(output): 1.3672, norm(x): 1.3416, norm(y): 1.0004, norm:7.7005, tok/sec: 103682.34, flops:108.82, batch-reuse:1
@ 633 train 6.4067 , allloss: 9.5528, dt: 1292.32ms, fracRes: 0.1164, norm(attn): 0.0942, norm(output): 1.3750, norm(x): 1.3539, norm(y): 1.0004, norm:7.6110, tok/sec: 101423.57, flops:106.45, batch-reuse:1
@ 634 train 6.2445 , allloss: 10.0089, dt: 1269.80ms, fracRes: 0.1190, norm(attn): 0.0952, norm(output): 1.3750, norm(x): 1.3594, norm(y): 1.0002, norm:8.2757, tok/sec: 103222.15, flops:108.33, batch-reuse:1
@ 635 train 6.3404 , allloss: 10.0461, dt: 1250.79ms, fracRes: 0.1162, norm(attn): 0.0957, norm(output): 1.3828, norm(x): 1.3691, norm(y): 1.0002, norm:7.3068, tok/sec: 104791.60, flops:109.98, batch-reuse:1
@ 636 train 6.3764 , allloss: 10.6323, dt: 1290.96ms, fracRes: 0.1176, norm(attn): 0.0977, norm(output): 1.3750, norm(x): 1.3617, norm(y): 1.0002, norm:8.6636, tok/sec: 101530.62, flops:106.56, batch-reuse:1
@ 637 train 6.2355 , allloss: 11.2587, dt: 1246.28ms, fracRes: 0.1206, norm(attn): 0.0972, norm(output): 1.3672, norm(x): 1.3563, norm(y): 1.0002, norm:9.3273, tok/sec: 105170.51, flops:110.38, batch-reuse:1
@ 638 train 6.2391 , allloss: 11.1275, dt: 1259.09ms, fracRes: 0.1295, norm(attn): 0.0962, norm(output): 1.3672, norm(x): 1.3575, norm(y): 1.0001, norm:8.3838, tok/sec: 104100.47, flops:109.26, batch-reuse:1
@ 639 train 6.3082 , allloss: 10.9590, dt: 1248.58ms, fracRes: 0.1230, norm(attn): 0.0981, norm(output): 1.3828, norm(x): 1.3761, norm(y): 1.0002, norm:7.5037, tok/sec: 104976.98, flops:110.18, batch-reuse:1
@ 640 train 6.2372 , allloss: 10.4220, dt: 1276.27ms, fracRes: 0.1139, norm(attn): 0.0981, norm(output): 1.3750, norm(x): 1.3860, norm(y): 1.0002, norm:7.1302, tok/sec: 102699.51, flops:107.79, batch-reuse:1
@ 641 train 6.2528 , allloss: 11.3794, dt: 1263.10ms, fracRes: 0.1097, norm(attn): 0.1064, norm(output): 1.3828, norm(x): 1.3961, norm(y): 1.0002, norm:13.5904, tok/sec: 103770.27, flops:108.91, batch-reuse:1
@ 642 train 6.1980 , allloss: 14.7925, dt: 1266.38ms, fracRes: 0.1084, norm(attn): 0.1128, norm(output): 1.3750, norm(x): 1.3927, norm(y): 1.0002, norm:53.8055, tok/sec: 103501.02, flops:108.63, batch-reuse:1
@ 643 train 6.2657 , allloss: 17.3491, dt: 1238.44ms, fracRes: 0.1066, norm(attn): 0.1201, norm(output): 1.3828, norm(x): 1.3981, norm(y): 1.0001, norm:50.5338, tok/sec: 105836.58, flops:111.08, batch-reuse:1
@ 644 train 6.4608 , allloss: 21.6306, dt: 1266.54ms, fracRes: 0.1036, norm(attn): 0.1279, norm(output): 1.3984, norm(x): 1.4205, norm(y): 1.0001, norm:31.4477, tok/sec: 103488.18, flops:108.61, batch-reuse:1
@ 645 train 6.3980 , allloss: 29.5808, dt: 1245.97ms, fracRes: 0.1027, norm(attn): 0.1338, norm(output): 1.4375, norm(x): 1.4383, norm(y): 1.0002, norm:46.6993, tok/sec: 105197.10, flops:110.41, batch-reuse:1
@ 646 train 6.3047 , allloss: 27.4249, dt: 1265.00ms, fracRes: 0.1029, norm(attn): 0.1396, norm(output): 1.4531, norm(x): 1.4608, norm(y): 1.0002, norm:30.2373, tok/sec: 103613.89, flops:108.74, batch-reuse:1
@ 647 train 6.3664 , allloss: 28.3417, dt: 1258.15ms, fracRes: 0.1030, norm(attn): 0.1406, norm(output): 1.4922, norm(x): 1.4867, norm(y): 1.0002, norm:28.6482, tok/sec: 104178.11, flops:109.34, batch-reuse:1
@ 648 train 6.2364 , allloss: 27.6710, dt: 1266.83ms, fracRes: 0.1030, norm(attn): 0.1426, norm(output): 1.4922, norm(x): 1.4916, norm(y): 1.0001, norm:37.7142, tok/sec: 103464.56, flops:108.59, batch-reuse:1
@ 649 train 6.3360 , allloss: 29.0356, dt: 1291.82ms, fracRes: 0.1017, norm(attn): 0.1455, norm(output): 1.5000, norm(x): 1.5107, norm(y): 1.0000, norm:35.5653, tok/sec: 101463.22, flops:106.49, batch-reuse:1
@ 650 train 6.2408 , allloss: 28.1106, dt: 1253.68ms, fracRes: 0.1033, norm(attn): 0.1445, norm(output): 1.4922, norm(x): 1.5146, norm(y): 1.0000, norm:29.3513, tok/sec: 104549.65, flops:109.73, batch-reuse:1
@ 651 train 6.3086 , allloss: 29.8078, dt: 1264.98ms, fracRes: 0.1153, norm(attn): 0.1445, norm(output): 1.4688, norm(x): 1.5449, norm(y): 1.0001, norm:45.6119, tok/sec: 103615.76, flops:108.75, batch-reuse:1
@ 652 train 6.2079 , allloss: 31.8903, dt: 1267.27ms, fracRes: 0.1253, norm(attn): 0.1445, norm(output): 1.4531, norm(x): 1.5646, norm(y): 1.0001, norm:48.2940, tok/sec: 103428.58, flops:108.55, batch-reuse:1
@ 653 train 6.2504 , allloss: 31.5466, dt: 1258.84ms, fracRes: 0.1366, norm(attn): 0.1445, norm(output): 1.4219, norm(x): 1.6184, norm(y): 1.0001, norm:51.1833, tok/sec: 104121.56, flops:109.28, batch-reuse:1
@ 654 train 6.2932 , allloss: 29.9043, dt: 1246.14ms, fracRes: 0.1421, norm(attn): 0.1445, norm(output): 1.3984, norm(x): 1.6332, norm(y): 1.0001, norm:42.1715, tok/sec: 105182.22, flops:110.39, batch-reuse:1
@ 655 train 6.3004 , allloss: 27.6138, dt: 1270.99ms, fracRes: 0.1338, norm(attn): 0.1455, norm(output): 1.3828, norm(x): 1.6046, norm(y): 0.9999, norm:31.5341, tok/sec: 103125.94, flops:108.23, batch-reuse:1
@ 656 train 6.2338 , allloss: 25.2993, dt: 1246.84ms, fracRes: 0.1285, norm(attn): 0.1426, norm(output): 1.3750, norm(x): 1.5550, norm(y): 0.9999, norm:18.7352, tok/sec: 105123.53, flops:110.33, batch-reuse:1
@ 657 train 6.2431 , allloss: 27.2889, dt: 1249.23ms, fracRes: 0.1214, norm(attn): 0.1416, norm(output): 1.3750, norm(x): 1.5366, norm(y): 1.0000, norm:20.4150, tok/sec: 104922.36, flops:110.12, batch-reuse:1
@ 658 train 6.3328 , allloss: 28.2125, dt: 1260.80ms, fracRes: 0.1113, norm(attn): 0.1416, norm(output): 1.3594, norm(x): 1.4901, norm(y): 1.0000, norm:23.0720, tok/sec: 103959.42, flops:109.11, batch-reuse:1
@ 659 train 6.3023 , allloss: 27.0489, dt: 1268.12ms, fracRes: 0.1060, norm(attn): 0.1387, norm(output): 1.3203, norm(x): 1.4635, norm(y): 1.0000, norm:26.7871, tok/sec: 103359.65, flops:108.48, batch-reuse:1
@ 660 train 6.3342 , allloss: 26.0753, dt: 1266.19ms, fracRes: 0.1037, norm(attn): 0.1318, norm(output): 1.3438, norm(x): 1.4749, norm(y): 0.9999, norm:23.3462, tok/sec: 103517.25, flops:108.64, batch-reuse:1
@ 661 train 6.2833 , allloss: 27.1217, dt: 1278.24ms, fracRes: 0.0921, norm(attn): 0.1328, norm(output): 1.3594, norm(x): 1.4680, norm(y): 1.0000, norm:28.1282, tok/sec: 102540.73, flops:107.62, batch-reuse:1
@ 662 train 6.3433 , allloss: 26.1255, dt: 1246.25ms, fracRes: 0.0926, norm(attn): 0.1279, norm(output): 1.3594, norm(x): 1.4717, norm(y): 0.9999, norm:25.7103, tok/sec: 105172.99, flops:110.38, batch-reuse:1
@ 663 train 6.3010 , allloss: 28.0679, dt: 1258.59ms, fracRes: 0.0894, norm(attn): 0.1279, norm(output): 1.3438, norm(x): 1.4592, norm(y): 0.9998, norm:30.4704, tok/sec: 104142.29, flops:109.30, batch-reuse:1
@ 664 train 6.2331 , allloss: 36.0348, dt: 1285.11ms, fracRes: 0.0980, norm(attn): 0.1270, norm(output): 1.3281, norm(x): 1.4797, norm(y): 0.9998, norm:43.6465, tok/sec: 101992.60, flops:107.04, batch-reuse:1
@ 665 train 6.2800 , allloss: 41.3152, dt: 1265.47ms, fracRes: 0.0956, norm(attn): 0.1309, norm(output): 1.3281, norm(x): 1.4825, norm(y): 0.9998, norm:37.5099, tok/sec: 103575.88, flops:108.70, batch-reuse:1
@ 666 train 6.1325 , allloss: 38.2218, dt: 1276.72ms, fracRes: 0.0883, norm(attn): 0.1348, norm(output): 1.3125, norm(x): 1.4578, norm(y): 0.9997, norm:27.5912, tok/sec: 102662.97, flops:107.75, batch-reuse:1
@ 667 train 6.1125 , allloss: 37.0643, dt: 1245.58ms, fracRes: 0.0544, norm(attn): 0.1475, norm(output): 1.3047, norm(x): 1.3793, norm(y): 0.9996, norm:29.2480, tok/sec: 105229.92, flops:110.44, batch-reuse:1
@ 668 train 6.3179 , allloss: 34.3771, dt: 1269.08ms, fracRes: 0.0769, norm(attn): 0.1406, norm(output): 1.2969, norm(x): 1.4256, norm(y): 0.9998, norm:27.9988, tok/sec: 103280.81, flops:108.40, batch-reuse:1
@ 669 train 6.2563 , allloss: 31.5681, dt: 1285.23ms, fracRes: 0.0715, norm(attn): 0.1426, norm(output): 1.3125, norm(x): 1.4164, norm(y): 0.9999, norm:30.0292, tok/sec: 101983.12, flops:107.03, batch-reuse:1
@ 670 train 6.3912 , allloss: 28.1944, dt: 1265.28ms, fracRes: 0.0832, norm(attn): 0.1406, norm(output): 1.3281, norm(x): 1.4351, norm(y): 0.9998, norm:33.5126, tok/sec: 103591.65, flops:108.72, batch-reuse:1
@ 671 train 6.2773 , allloss: 23.6693, dt: 1264.21ms, fracRes: 0.0926, norm(attn): 0.1406, norm(output): 1.2969, norm(x): 1.4007, norm(y): 0.9997, norm:31.8796, tok/sec: 103678.78, flops:108.81, batch-reuse:1
@ 672 train 6.2696 , allloss: 22.7397, dt: 1261.36ms, fracRes: 0.0956, norm(attn): 0.1416, norm(output): 1.2969, norm(x): 1.3785, norm(y): 0.9996, norm:34.1088, tok/sec: 103913.24, flops:109.06, batch-reuse:1
@ 673 train 6.3344 , allloss: 24.1339, dt: 1265.33ms, fracRes: 0.0966, norm(attn): 0.1377, norm(output): 1.3047, norm(x): 1.3649, norm(y): 0.9995, norm:36.4101, tok/sec: 103587.04, flops:108.72, batch-reuse:1
@ 674 train 6.2943 , allloss: 27.6842, dt: 1241.01ms, fracRes: 0.0944, norm(attn): 0.1406, norm(output): 1.3281, norm(x): 1.3655, norm(y): 0.9995, norm:50.9430, tok/sec: 105616.78, flops:110.85, batch-reuse:1
@ 675 train 6.2164 , allloss: 32.4734, dt: 1261.31ms, fracRes: 0.0945, norm(attn): 0.1426, norm(output): 1.3438, norm(x): 1.3654, norm(y): 0.9994, norm:59.9544, tok/sec: 103917.41, flops:109.06, batch-reuse:1
@ 676 train 6.2914 , allloss: 44.1324, dt: 1257.24ms, fracRes: 0.0955, norm(attn): 0.1426, norm(output): 1.3672, norm(x): 1.3785, norm(y): 0.9996, norm:40.8814, tok/sec: 104253.46, flops:109.42, batch-reuse:1
@ 677 train 6.3995 , allloss: 43.0218, dt: 1256.19ms, fracRes: 0.0943, norm(attn): 0.1406, norm(output): 1.3750, norm(x): 1.3851, norm(y): 0.9998, norm:30.2173, tok/sec: 104341.06, flops:109.51, batch-reuse:1
@ 678 train 6.2535 , allloss: 38.3636, dt: 1289.51ms, fracRes: 0.0936, norm(attn): 0.1396, norm(output): 1.3516, norm(x): 1.3567, norm(y): 1.0002, norm:25.2896, tok/sec: 101645.13, flops:106.68, batch-reuse:1
@ 679 train 6.2935 , allloss: 36.2839, dt: 1278.05ms, fracRes: 0.0907, norm(attn): 0.1406, norm(output): 1.3281, norm(x): 1.3413, norm(y): 1.0003, norm:30.2393, tok/sec: 102556.05, flops:107.63, batch-reuse:1
@ 680 train 6.2832 , allloss: 35.5302, dt: 1263.52ms, fracRes: 0.0903, norm(attn): 0.1426, norm(output): 1.3125, norm(x): 1.3259, norm(y): 1.0002, norm:27.4016, tok/sec: 103735.34, flops:108.87, batch-reuse:1
@ 681 train 6.2684 , allloss: 48.3895, dt: 1248.84ms, fracRes: 0.0925, norm(attn): 0.1426, norm(output): 1.3047, norm(x): 1.3199, norm(y): 1.0004, norm:49.6413, tok/sec: 104955.07, flops:110.15, batch-reuse:1
@ 682 train 6.3165 , allloss: 66.6167, dt: 1266.57ms, fracRes: 0.0863, norm(attn): 0.1484, norm(output): 1.2891, norm(x): 1.3082, norm(y): 1.0006, norm:56.7375, tok/sec: 103485.92, flops:108.61, batch-reuse:1
@ 683 train 6.3776 , allloss: 74.8881, dt: 1285.30ms, fracRes: 0.0448, norm(attn): 0.1611, norm(output): 1.2578, norm(x): 1.2637, norm(y): 1.0006, norm:70.1754, tok/sec: 101977.50, flops:107.03, batch-reuse:1
@ 684 train 6.3602 , allloss: 64.0234, dt: 1259.58ms, fracRes: 0.0485, norm(attn): 0.1582, norm(output): 1.2500, norm(x): 1.2518, norm(y): 1.0006, norm:63.6217, tok/sec: 104060.37, flops:109.21, batch-reuse:1
@ 685 train 6.4255 , allloss: 54.0837, dt: 1263.09ms, fracRes: 0.0610, norm(attn): 0.1523, norm(output): 1.2500, norm(x): 1.2467, norm(y): 1.0008, norm:37.9983, tok/sec: 103770.70, flops:108.91, batch-reuse:1
@ 686 train 6.4423 , allloss: 52.0852, dt: 1286.20ms, fracRes: 0.0419, norm(attn): 0.1504, norm(output): 1.2422, norm(x): 1.2297, norm(y): 1.0011, norm:32.3862, tok/sec: 101906.27, flops:106.95, batch-reuse:1
@ 687 train 6.2902 , allloss: 52.1993, dt: 1265.08ms, fracRes: 0.0317, norm(attn): 0.1582, norm(output): 1.2188, norm(x): 1.2237, norm(y): 1.0011, norm:34.6359, tok/sec: 103607.80, flops:108.74, batch-reuse:1
@ 688 train 6.3538 , allloss: 53.1649, dt: 1271.56ms, fracRes: 0.0228, norm(attn): 0.1641, norm(output): 1.2266, norm(x): 1.2170, norm(y): 1.0012, norm:35.9593, tok/sec: 103079.76, flops:108.18, batch-reuse:1
@ 689 train 6.3569 , allloss: 52.3787, dt: 1274.48ms, fracRes: 0.0186, norm(attn): 0.1650, norm(output): 1.2266, norm(x): 1.1906, norm(y): 1.0011, norm:36.4822, tok/sec: 102843.16, flops:107.94, batch-reuse:1
@ 690 train 6.3130 , allloss: 55.5737, dt: 1266.68ms, fracRes: 0.0178, norm(attn): 0.1699, norm(output): 1.2188, norm(x): 1.1831, norm(y): 1.0012, norm:42.4662, tok/sec: 103476.71, flops:108.60, batch-reuse:1
@ 691 train 6.3021 , allloss: 60.4829, dt: 1271.23ms, fracRes: 0.0143, norm(attn): 0.1631, norm(output): 1.2344, norm(x): 1.2013, norm(y): 1.0015, norm:46.3421, tok/sec: 103106.33, flops:108.21, batch-reuse:1
@ 692 train 6.2825 , allloss: 68.4645, dt: 1299.20ms, fracRes: 0.0115, norm(attn): 0.1602, norm(output): 1.2188, norm(x): 1.1941, norm(y): 1.0015, norm:53.0832, tok/sec: 100886.47, flops:105.88, batch-reuse:1
@ 693 train 6.3500 , allloss: 75.7906, dt: 1259.30ms, fracRes: 0.0101, norm(attn): 0.1602, norm(output): 1.2031, norm(x): 1.1869, norm(y): 1.0016, norm:51.2935, tok/sec: 104083.50, flops:109.24, batch-reuse:1
@ 694 train 6.2603 , allloss: 75.3476, dt: 1266.06ms, fracRes: 0.0093, norm(attn): 0.1660, norm(output): 1.2031, norm(x): 1.1929, norm(y): 1.0016, norm:50.0204, tok/sec: 103527.70, flops:108.65, batch-reuse:1
@ 695 train 6.3350 , allloss: 75.8647, dt: 1257.30ms, fracRes: 0.0093, norm(attn): 0.1680, norm(output): 1.2266, norm(x): 1.2140, norm(y): 1.0015, norm:49.4380, tok/sec: 104248.38, flops:109.41, batch-reuse:1
@ 696 train 6.2580 , allloss: 74.2646, dt: 1258.54ms, fracRes: 0.0089, norm(attn): 0.1670, norm(output): 1.2188, norm(x): 1.2106, norm(y): 1.0013, norm:48.2082, tok/sec: 104145.71, flops:109.30, batch-reuse:1
@ 697 train 6.2955 , allloss: 76.1246, dt: 1281.02ms, fracRes: 0.0113, norm(attn): 0.1689, norm(output): 1.2109, norm(x): 1.2080, norm(y): 1.0012, norm:50.7821, tok/sec: 102318.28, flops:107.38, batch-reuse:1
@ 698 train 6.3374 , allloss: 72.7990, dt: 1258.24ms, fracRes: 0.0117, norm(attn): 0.1680, norm(output): 1.2109, norm(x): 1.2051, norm(y): 1.0012, norm:48.9165, tok/sec: 104171.26, flops:109.33, batch-reuse:1
@ 699 train 6.3137 , allloss: 71.8321, dt: 1262.92ms, fracRes: 0.0140, norm(attn): 0.1709, norm(output): 1.2344, norm(x): 1.2220, norm(y): 1.0012, norm:45.9611, tok/sec: 103785.28, flops:108.92, batch-reuse:1
@ 700 train 6.3437 , allloss: 71.5272, dt: 1270.49ms, fracRes: 0.0119, norm(attn): 0.1719, norm(output): 1.2344, norm(x): 1.2337, norm(y): 1.0012, norm:50.2158, tok/sec: 103166.38, flops:108.28, batch-reuse:1
@ 701 train 6.3851 , allloss: 69.3183, dt: 1270.46ms, fracRes: 0.0122, norm(attn): 0.1719, norm(output): 1.2578, norm(x): 1.2602, norm(y): 1.0011, norm:51.8076, tok/sec: 103169.06, flops:108.28, batch-reuse:1
@ 702 train 6.3786 , allloss: 64.0083, dt: 1257.41ms, fracRes: 0.0115, norm(attn): 0.1709, norm(output): 1.2656, norm(x): 1.2633, norm(y): 1.0013, norm:46.6772, tok/sec: 104239.74, flops:109.40, batch-reuse:1
@ 703 train 6.3244 , allloss: 59.3489, dt: 1256.77ms, fracRes: 0.0107, norm(attn): 0.1660, norm(output): 1.2656, norm(x): 1.2657, norm(y): 1.0011, norm:49.6361, tok/sec: 104292.78, flops:109.46, batch-reuse:1
@ 704 train 6.2717 , allloss: 60.1559, dt: 1264.72ms, fracRes: 0.0140, norm(attn): 0.1621, norm(output): 1.2500, norm(x): 1.2387, norm(y): 1.0011, norm:51.0142, tok/sec: 103637.54, flops:108.77, batch-reuse:1
@ 705 train 6.3363 , allloss: 60.9481, dt: 1268.47ms, fracRes: 0.0157, norm(attn): 0.1602, norm(output): 1.2578, norm(x): 1.2466, norm(y): 1.0012, norm:47.2738, tok/sec: 103330.59, flops:108.45, batch-reuse:1
@ 706 train 6.3184 , allloss: 58.3342, dt: 1264.39ms, fracRes: 0.0154, norm(attn): 0.1660, norm(output): 1.2891, norm(x): 1.2717, norm(y): 1.0013, norm:43.8696, tok/sec: 103664.37, flops:108.80, batch-reuse:1
@ 707 train 6.2925 , allloss: 54.5508, dt: 1252.82ms, fracRes: 0.0124, norm(attn): 0.1650, norm(output): 1.2656, norm(x): 1.2613, norm(y): 1.0012, norm:43.6190, tok/sec: 104621.35, flops:109.80, batch-reuse:1
@ 708 train 6.2814 , allloss: 53.2431, dt: 1242.49ms, fracRes: 0.0112, norm(attn): 0.1641, norm(output): 1.2578, norm(x): 1.2631, norm(y): 1.0011, norm:36.8940, tok/sec: 105491.47, flops:110.72, batch-reuse:1
@ 709 train 6.2863 , allloss: 53.0209, dt: 1293.34ms, fracRes: 0.0119, norm(attn): 0.1660, norm(output): 1.2734, norm(x): 1.2691, norm(y): 1.0012, norm:43.4076, tok/sec: 101343.70, flops:106.36, batch-reuse:1
@ 710 train 6.3304 , allloss: 52.7713, dt: 1281.92ms, fracRes: 0.0127, norm(attn): 0.1729, norm(output): 1.2812, norm(x): 1.2813, norm(y): 1.0012, norm:39.9808, tok/sec: 102246.27, flops:107.31, batch-reuse:1
@ 711 train 6.3437 , allloss: 52.7643, dt: 1257.11ms, fracRes: 0.0150, norm(attn): 0.1689, norm(output): 1.2812, norm(x): 1.2824, norm(y): 1.0013, norm:43.4153, tok/sec: 104264.26, flops:109.43, batch-reuse:1
@ 712 train 6.2171 , allloss: 50.7434, dt: 1249.72ms, fracRes: 0.0138, norm(attn): 0.1699, norm(output): 1.2891, norm(x): 1.2760, norm(y): 1.0013, norm:37.9297, tok/sec: 104881.33, flops:110.07, batch-reuse:1
@ 713 train 6.2730 , allloss: 51.0475, dt: 1255.22ms, fracRes: 0.0121, norm(attn): 0.1719, norm(output): 1.3125, norm(x): 1.2923, norm(y): 1.0014, norm:46.7872, tok/sec: 104421.38, flops:109.59, batch-reuse:1
@ 714 train 6.1915 , allloss: 50.4521, dt: 1257.77ms, fracRes: 0.0112, norm(attn): 0.1729, norm(output): 1.2812, norm(x): 1.2771, norm(y): 1.0014, norm:39.4668, tok/sec: 104210.12, flops:109.37, batch-reuse:1
@ 715 train 6.2105 , allloss: 49.0154, dt: 1273.25ms, fracRes: 0.0123, norm(attn): 0.1729, norm(output): 1.2734, norm(x): 1.2707, norm(y): 1.0014, norm:34.8664, tok/sec: 102942.51, flops:108.04, batch-reuse:1
@ 716 train 6.2112 , allloss: 47.3860, dt: 1261.93ms, fracRes: 0.0098, norm(attn): 0.1807, norm(output): 1.2734, norm(x): 1.2716, norm(y): 1.0014, norm:35.5520, tok/sec: 103866.67, flops:109.01, batch-reuse:1
@ 717 train 6.0901 , allloss: 45.0875, dt: 1279.89ms, fracRes: 0.0090, norm(attn): 0.1846, norm(output): 1.2656, norm(x): 1.2568, norm(y): 1.0014, norm:36.4990, tok/sec: 102408.57, flops:107.48, batch-reuse:1
@ 718 train 6.2547 , allloss: 44.2389, dt: 1289.64ms, fracRes: 0.0090, norm(attn): 0.1846, norm(output): 1.2734, norm(x): 1.2656, norm(y): 1.0014, norm:33.1700, tok/sec: 101634.46, flops:106.67, batch-reuse:1
@ 719 train 6.2273 , allloss: 44.9900, dt: 1266.24ms, fracRes: 0.0090, norm(attn): 0.1836, norm(output): 1.2891, norm(x): 1.2794, norm(y): 1.0014, norm:35.9072, tok/sec: 103512.87, flops:108.64, batch-reuse:1
@ 720 train 6.1965 , allloss: 44.5074, dt: 1263.88ms, fracRes: 0.0084, norm(attn): 0.1836, norm(output): 1.2969, norm(x): 1.2927, norm(y): 1.0015, norm:34.7695, tok/sec: 103705.85, flops:108.84, batch-reuse:1
@ 721 train 6.1148 , allloss: 42.9319, dt: 1280.13ms, fracRes: 0.0079, norm(attn): 0.1787, norm(output): 1.3203, norm(x): 1.2972, norm(y): 1.0015, norm:33.2928, tok/sec: 102389.65, flops:107.46, batch-reuse:1
@ 722 train 6.2158 , allloss: 44.0518, dt: 1258.40ms, fracRes: 0.0076, norm(attn): 0.1768, norm(output): 1.3125, norm(x): 1.3005, norm(y): 1.0015, norm:41.7477, tok/sec: 104157.39, flops:109.32, batch-reuse:1
@ 723 train 6.2481 , allloss: 44.8005, dt: 1264.41ms, fracRes: 0.0067, norm(attn): 0.1729, norm(output): 1.3281, norm(x): 1.3110, norm(y): 1.0015, norm:38.2291, tok/sec: 103662.89, flops:108.80, batch-reuse:1
@ 724 train 6.2307 , allloss: 44.0545, dt: 1286.71ms, fracRes: 0.0062, norm(attn): 0.1729, norm(output): 1.3281, norm(x): 1.3180, norm(y): 1.0014, norm:32.3084, tok/sec: 101866.36, flops:106.91, batch-reuse:1
@ 725 train 6.2178 , allloss: 42.6188, dt: 1259.31ms, fracRes: 0.0069, norm(attn): 0.1719, norm(output): 1.3359, norm(x): 1.3215, norm(y): 1.0014, norm:37.0142, tok/sec: 104082.53, flops:109.24, batch-reuse:1
@ 726 train 6.2216 , allloss: 41.6807, dt: 1261.78ms, fracRes: 0.0080, norm(attn): 0.1709, norm(output): 1.3672, norm(x): 1.3431, norm(y): 1.0015, norm:39.1367, tok/sec: 103878.27, flops:109.02, batch-reuse:1
@ 727 train 6.2100 , allloss: 40.5846, dt: 1289.49ms, fracRes: 0.0080, norm(attn): 0.1650, norm(output): 1.3672, norm(x): 1.3517, norm(y): 1.0015, norm:33.0182, tok/sec: 101646.69, flops:106.68, batch-reuse:1
@ 728 train 6.2336 , allloss: 39.7326, dt: 1270.79ms, fracRes: 0.0086, norm(attn): 0.1582, norm(output): 1.3594, norm(x): 1.3403, norm(y): 1.0015, norm:34.6279, tok/sec: 103142.48, flops:108.25, batch-reuse:1
@ 729 train 6.1859 , allloss: 39.4618, dt: 1264.13ms, fracRes: 0.0085, norm(attn): 0.1582, norm(output): 1.3359, norm(x): 1.3302, norm(y): 1.0014, norm:34.1314, tok/sec: 103685.55, flops:108.82, batch-reuse:1
@ 730 train 6.1848 , allloss: 37.9150, dt: 1267.59ms, fracRes: 0.0091, norm(attn): 0.1592, norm(output): 1.3281, norm(x): 1.3181, norm(y): 1.0013, norm:34.8786, tok/sec: 103402.77, flops:108.52, batch-reuse:1
@ 731 train 6.2083 , allloss: 37.6849, dt: 1256.62ms, fracRes: 0.0109, norm(attn): 0.1611, norm(output): 1.3359, norm(x): 1.3266, norm(y): 1.0014, norm:39.7316, tok/sec: 104305.50, flops:109.47, batch-reuse:1
@ 732 train 6.1695 , allloss: 38.1916, dt: 1276.00ms, fracRes: 0.0119, norm(attn): 0.1611, norm(output): 1.3438, norm(x): 1.3420, norm(y): 1.0014, norm:31.3339, tok/sec: 102721.23, flops:107.81, batch-reuse:1
@ 733 train 6.1788 , allloss: 40.3183, dt: 1273.72ms, fracRes: 0.0140, norm(attn): 0.1592, norm(output): 1.3516, norm(x): 1.3503, norm(y): 1.0013, norm:31.4815, tok/sec: 102904.74, flops:108.00, batch-reuse:1
@ 734 train 6.2003 , allloss: 42.5005, dt: 1252.76ms, fracRes: 0.0159, norm(attn): 0.1611, norm(output): 1.3516, norm(x): 1.3590, norm(y): 1.0013, norm:34.1329, tok/sec: 104626.85, flops:109.81, batch-reuse:1
@ 735 train 6.2066 , allloss: 43.1864, dt: 1244.77ms, fracRes: 0.0197, norm(attn): 0.1611, norm(output): 1.3516, norm(x): 1.3579, norm(y): 1.0013, norm:37.9843, tok/sec: 105298.30, flops:110.51, batch-reuse:1
@ 736 train 6.2570 , allloss: 50.6942, dt: 1268.24ms, fracRes: 0.0186, norm(attn): 0.1641, norm(output): 1.3672, norm(x): 1.3819, norm(y): 1.0013, norm:64.8197, tok/sec: 103349.33, flops:108.47, batch-reuse:1
@ 737 train 6.2034 , allloss: 52.2697, dt: 1241.57ms, fracRes: 0.0181, norm(attn): 0.1641, norm(output): 1.3750, norm(x): 1.3890, norm(y): 1.0012, norm:56.8225, tok/sec: 105569.66, flops:110.80, batch-reuse:1
@ 738 train 6.2355 , allloss: 49.4962, dt: 1275.23ms, fracRes: 0.0185, norm(attn): 0.1641, norm(output): 1.3750, norm(x): 1.3948, norm(y): 1.0012, norm:54.4235, tok/sec: 102783.28, flops:107.87, batch-reuse:1
@ 739 train 6.2290 , allloss: 46.1405, dt: 1257.12ms, fracRes: 0.0180, norm(attn): 0.1670, norm(output): 1.3750, norm(x): 1.4043, norm(y): 1.0013, norm:38.8069, tok/sec: 104263.92, flops:109.43, batch-reuse:1
@ 740 train 6.1586 , allloss: 44.3818, dt: 1260.20ms, fracRes: 0.0172, norm(attn): 0.1650, norm(output): 1.3672, norm(x): 1.3835, norm(y): 1.0012, norm:41.0183, tok/sec: 104009.10, flops:109.16, batch-reuse:1
@ 741 train 6.2728 , allloss: 42.1885, dt: 1262.38ms, fracRes: 0.0158, norm(attn): 0.1631, norm(output): 1.3828, norm(x): 1.3910, norm(y): 1.0012, norm:40.0753, tok/sec: 103829.46, flops:108.97, batch-reuse:1
@ 742 train 6.3351 , allloss: 40.3577, dt: 1280.65ms, fracRes: 0.0143, norm(attn): 0.1699, norm(output): 1.3906, norm(x): 1.4116, norm(y): 1.0012, norm:38.6554, tok/sec: 102348.15, flops:107.42, batch-reuse:1
@ 743 train 6.2919 , allloss: 37.4851, dt: 1261.89ms, fracRes: 0.0116, norm(attn): 0.1729, norm(output): 1.3828, norm(x): 1.3902, norm(y): 1.0013, norm:39.0915, tok/sec: 103869.22, flops:109.01, batch-reuse:1
@ 744 train 6.3129 , allloss: 37.1846, dt: 1259.48ms, fracRes: 0.0092, norm(attn): 0.1709, norm(output): 1.3750, norm(x): 1.3774, norm(y): 1.0012, norm:38.2914, tok/sec: 104068.60, flops:109.22, batch-reuse:1
@ 745 train 6.4705 , allloss: 37.6672, dt: 1251.85ms, fracRes: 0.0094, norm(attn): 0.1836, norm(output): 1.3750, norm(x): 1.3653, norm(y): 1.0013, norm:42.4558, tok/sec: 104703.05, flops:109.89, batch-reuse:1
@ 746 train 7.3165 , allloss: 48.4615, dt: 1262.78ms, fracRes: 0.0133, norm(attn): 0.1855, norm(output): 1.3125, norm(x): 1.3083, norm(y): 1.0015, norm:70.6347, tok/sec: 103796.14, flops:108.94, batch-reuse:1
@ 747 train 7.2193 , allloss: 48.2872, dt: 1261.02ms, fracRes: 0.0139, norm(attn): 0.1826, norm(output): 1.3828, norm(x): 1.3822, norm(y): 1.0013, norm:62.1939, tok/sec: 103941.32, flops:109.09, batch-reuse:1
@ 748 train 7.0489 , allloss: 48.4264, dt: 1270.93ms, fracRes: 0.0147, norm(attn): 0.1885, norm(output): 1.3750, norm(x): 1.3583, norm(y): 1.0013, norm:50.9399, tok/sec: 103131.03, flops:108.24, batch-reuse:1
@ 749 train 6.8849 , allloss: 44.8361, dt: 1298.99ms, fracRes: 0.0134, norm(attn): 0.1895, norm(output): 1.3828, norm(x): 1.3852, norm(y): 1.0018, norm:49.4032, tok/sec: 100903.14, flops:105.90, batch-reuse:1
@ 750 train 6.7227 , allloss: 44.2854, dt: 1246.17ms, fracRes: 0.0110, norm(attn): 0.1885, norm(output): 1.3750, norm(x): 1.3723, norm(y): 1.0017, norm:53.1688, tok/sec: 105180.07, flops:110.39, batch-reuse:1
@ 751 train 6.6015 , allloss: 45.7990, dt: 1255.91ms, fracRes: 0.0104, norm(attn): 0.1875, norm(output): 1.3750, norm(x): 1.3778, norm(y): 1.0015, norm:61.6654, tok/sec: 104364.11, flops:109.53, batch-reuse:1
@ 752 train 6.5907 , allloss: 53.5197, dt: 1287.64ms, fracRes: 0.0109, norm(attn): 0.1826, norm(output): 1.3828, norm(x): 1.3979, norm(y): 1.0015, norm:81.9023, tok/sec: 101792.57, flops:106.83, batch-reuse:1
@ 753 train 6.5839 , allloss: 53.5620, dt: 1257.37ms, fracRes: 0.0100, norm(attn): 0.1816, norm(output): 1.4219, norm(x): 1.4202, norm(y): 1.0015, norm:69.1987, tok/sec: 104242.65, flops:109.40, batch-reuse:1
@ 754 train 6.5143 , allloss: 44.8415, dt: 1245.17ms, fracRes: 0.0112, norm(attn): 0.1816, norm(output): 1.4453, norm(x): 1.4442, norm(y): 1.0014, norm:51.3833, tok/sec: 105264.15, flops:110.48, batch-reuse:1
@ 755 train 6.6466 , allloss: 41.5516, dt: 1244.41ms, fracRes: 0.0122, norm(attn): 0.1855, norm(output): 1.4609, norm(x): 1.4461, norm(y): 1.0013, norm:37.3477, tok/sec: 105328.81, flops:110.54, batch-reuse:1
@ 756 train 6.4561 , allloss: 40.7642, dt: 1278.32ms, fracRes: 0.0125, norm(attn): 0.1855, norm(output): 1.4141, norm(x): 1.4152, norm(y): 1.0014, norm:44.2409, tok/sec: 102534.21, flops:107.61, batch-reuse:1
@ 757 train 6.4792 , allloss: 38.8491, dt: 1266.76ms, fracRes: 0.0168, norm(attn): 0.1895, norm(output): 1.3906, norm(x): 1.3992, norm(y): 1.0015, norm:39.7267, tok/sec: 103470.05, flops:108.59, batch-reuse:1
@ 758 train 6.4165 , allloss: 35.3529, dt: 1255.20ms, fracRes: 0.0203, norm(attn): 0.1973, norm(output): 1.3750, norm(x): 1.3813, norm(y): 1.0015, norm:40.5662, tok/sec: 104423.35, flops:109.59, batch-reuse:1
@ 759 train 6.4624 , allloss: 33.5624, dt: 1241.85ms, fracRes: 0.0234, norm(attn): 0.1934, norm(output): 1.3828, norm(x): 1.3763, norm(y): 1.0014, norm:34.6075, tok/sec: 105546.11, flops:110.77, batch-reuse:1
@ 760 train 6.4288 , allloss: 33.0569, dt: 1239.05ms, fracRes: 0.0175, norm(attn): 0.1875, norm(output): 1.3828, norm(x): 1.3861, norm(y): 1.0012, norm:43.6180, tok/sec: 105783.93, flops:111.02, batch-reuse:1
@ 761 train 6.4484 , allloss: 37.3018, dt: 1258.47ms, fracRes: 0.0153, norm(attn): 0.1895, norm(output): 1.3984, norm(x): 1.4072, norm(y): 1.0011, norm:65.9682, tok/sec: 104152.12, flops:109.31, batch-reuse:1
@ 762 train 6.4841 , allloss: 50.3470, dt: 1524.59ms, fracRes: 0.0134, norm(attn): 0.1895, norm(output): 1.4453, norm(x): 1.4308, norm(y): 1.0011, norm:73.8989, tok/sec: 85972.25, flops:90.23, batch-reuse:1
@ 763 train 6.4974 , allloss: 52.3171, dt: 1265.30ms, fracRes: 0.0159, norm(attn): 0.1904, norm(output): 1.4375, norm(x): 1.4370, norm(y): 1.0011, norm:50.5767, tok/sec: 103589.48, flops:108.72, batch-reuse:1
@ 764 train 6.4316 , allloss: 50.5516, dt: 1249.42ms, fracRes: 0.0165, norm(attn): 0.1904, norm(output): 1.4141, norm(x): 1.4230, norm(y): 1.0011, norm:44.8723, tok/sec: 104906.10, flops:110.10, batch-reuse:1
@ 765 train 6.4166 , allloss: 51.8443, dt: 1246.53ms, fracRes: 0.0210, norm(attn): 0.1973, norm(output): 1.3828, norm(x): 1.3932, norm(y): 1.0010, norm:47.3026, tok/sec: 105149.49, flops:110.36, batch-reuse:1
@ 766 train 6.3654 , allloss: 53.8229, dt: 1255.11ms, fracRes: 0.0249, norm(attn): 0.2002, norm(output): 1.3750, norm(x): 1.3861, norm(y): 1.0009, norm:47.2094, tok/sec: 104430.47, flops:109.60, batch-reuse:1
@ 767 train 6.4826 , allloss: 57.4662, dt: 1259.23ms, fracRes: 0.0291, norm(attn): 0.2041, norm(output): 1.3828, norm(x): 1.3922, norm(y): 1.0009, norm:50.4615, tok/sec: 104088.66, flops:109.24, batch-reuse:1
@ 768 train 6.5348 , allloss: 58.9311, dt: 1252.65ms, fracRes: 0.0308, norm(attn): 0.2148, norm(output): 1.3906, norm(x): 1.4185, norm(y): 1.0010, norm:47.1136, tok/sec: 104636.15, flops:109.82, batch-reuse:1
@ 769 train 6.4187 , allloss: 55.1069, dt: 1257.50ms, fracRes: 0.0322, norm(attn): 0.2178, norm(output): 1.3984, norm(x): 1.4316, norm(y): 1.0010, norm:48.4366, tok/sec: 104232.59, flops:109.39, batch-reuse:1
@ 770 train 6.3926 , allloss: 52.1694, dt: 1255.22ms, fracRes: 0.0323, norm(attn): 0.2168, norm(output): 1.4531, norm(x): 1.4653, norm(y): 1.0010, norm:42.2842, tok/sec: 104421.16, flops:109.59, batch-reuse:1
@ 771 train 6.3456 , allloss: 49.3648, dt: 1242.05ms, fracRes: 0.0317, norm(attn): 0.2139, norm(output): 1.4766, norm(x): 1.4804, norm(y): 1.0009, norm:40.7478, tok/sec: 105528.55, flops:110.75, batch-reuse:1
@ 772 train 6.3909 , allloss: 47.7852, dt: 1247.20ms, fracRes: 0.0333, norm(attn): 0.2041, norm(output): 1.4844, norm(x): 1.5045, norm(y): 1.0009, norm:39.4043, tok/sec: 105092.81, flops:110.30, batch-reuse:1
@ 773 train 6.4743 , allloss: 46.0302, dt: 1258.89ms, fracRes: 0.0351, norm(attn): 0.2012, norm(output): 1.5000, norm(x): 1.5250, norm(y): 1.0011, norm:38.5905, tok/sec: 104117.01, flops:109.27, batch-reuse:1
@ 774 train 6.3432 , allloss: 45.1390, dt: 1258.37ms, fracRes: 0.0381, norm(attn): 0.2021, norm(output): 1.5000, norm(x): 1.5165, norm(y): 1.0013, norm:42.9132, tok/sec: 104159.74, flops:109.32, batch-reuse:1
@ 775 train 6.4437 , allloss: 43.5906, dt: 1259.36ms, fracRes: 0.0395, norm(attn): 0.1973, norm(output): 1.4844, norm(x): 1.4942, norm(y): 1.0013, norm:46.1266, tok/sec: 104077.86, flops:109.23, batch-reuse:1
@ 776 train 6.2529 , allloss: 40.7727, dt: 1253.96ms, fracRes: 0.0379, norm(attn): 0.1953, norm(output): 1.4844, norm(x): 1.4823, norm(y): 1.0012, norm:38.8783, tok/sec: 104526.35, flops:109.70, batch-reuse:1
@ 777 train 6.3056 , allloss: 39.5618, dt: 1239.20ms, fracRes: 0.0376, norm(attn): 0.1914, norm(output): 1.5000, norm(x): 1.5074, norm(y): 1.0013, norm:37.1049, tok/sec: 105771.35, flops:111.01, batch-reuse:1
@ 778 train 6.3077 , allloss: 37.0717, dt: 1246.17ms, fracRes: 0.0383, norm(attn): 0.1914, norm(output): 1.5078, norm(x): 1.5247, norm(y): 1.0014, norm:45.8348, tok/sec: 105180.21, flops:110.39, batch-reuse:1
@ 779 train 6.3442 , allloss: 34.7169, dt: 1253.86ms, fracRes: 0.0377, norm(attn): 0.1943, norm(output): 1.5000, norm(x): 1.5322, norm(y): 1.0013, norm:35.2945, tok/sec: 104535.06, flops:109.71, batch-reuse:1
@ 780 train 6.3289 , allloss: 33.2536, dt: 1268.04ms, fracRes: 0.0390, norm(attn): 0.1973, norm(output): 1.5000, norm(x): 1.5159, norm(y): 1.0012, norm:39.4483, tok/sec: 103365.95, flops:108.48, batch-reuse:1
@ 781 train 6.3034 , allloss: 31.4161, dt: 1272.74ms, fracRes: 0.0403, norm(attn): 0.2002, norm(output): 1.5156, norm(x): 1.5302, norm(y): 1.0011, norm:38.4027, tok/sec: 102983.81, flops:108.08, batch-reuse:1
@ 782 train 6.2955 , allloss: 31.7411, dt: 1251.32ms, fracRes: 0.0462, norm(attn): 0.2021, norm(output): 1.5391, norm(x): 1.5577, norm(y): 1.0012, norm:38.8424, tok/sec: 104747.36, flops:109.93, batch-reuse:1
@ 783 train 6.2828 , allloss: 31.9126, dt: 1269.51ms, fracRes: 0.0485, norm(attn): 0.2021, norm(output): 1.5625, norm(x): 1.5696, norm(y): 1.0010, norm:61.7740, tok/sec: 103246.35, flops:108.36, batch-reuse:1
@ 784 train 6.3018 , allloss: 30.9193, dt: 1267.83ms, fracRes: 0.0515, norm(attn): 0.2031, norm(output): 1.5703, norm(x): 1.5898, norm(y): 1.0010, norm:49.3464, tok/sec: 103383.17, flops:108.50, batch-reuse:1
@ 785 train 6.2895 , allloss: 31.6884, dt: 1266.34ms, fracRes: 0.0520, norm(attn): 0.2031, norm(output): 1.5781, norm(x): 1.5886, norm(y): 1.0010, norm:33.1058, tok/sec: 103504.39, flops:108.63, batch-reuse:1
@ 786 train 6.2584 , allloss: 30.0966, dt: 1266.93ms, fracRes: 0.0528, norm(attn): 0.2031, norm(output): 1.5859, norm(x): 1.5926, norm(y): 1.0010, norm:54.5218, tok/sec: 103456.67, flops:108.58, batch-reuse:1
@ 787 train 6.3098 , allloss: 30.5858, dt: 1264.35ms, fracRes: 0.0539, norm(attn): 0.2021, norm(output): 1.6016, norm(x): 1.6103, norm(y): 1.0010, norm:54.1062, tok/sec: 103667.52, flops:108.80, batch-reuse:1
@ 788 train 6.3620 , allloss: 29.7292, dt: 1259.19ms, fracRes: 0.0536, norm(attn): 0.2021, norm(output): 1.6172, norm(x): 1.6340, norm(y): 1.0009, norm:36.5974, tok/sec: 104092.07, flops:109.25, batch-reuse:1
@ 789 train 6.2465 , allloss: 28.7628, dt: 1242.58ms, fracRes: 0.0551, norm(attn): 0.2021, norm(output): 1.6328, norm(x): 1.6508, norm(y): 1.0009, norm:48.3328, tok/sec: 105483.47, flops:110.71, batch-reuse:1
@ 790 train 6.2323 , allloss: 27.8237, dt: 1264.08ms, fracRes: 0.0554, norm(attn): 0.2031, norm(output): 1.6484, norm(x): 1.6719, norm(y): 1.0010, norm:40.6918, tok/sec: 103689.34, flops:108.82, batch-reuse:1
@ 791 train 6.3786 , allloss: 28.2679, dt: 1268.56ms, fracRes: 0.0594, norm(attn): 0.2021, norm(output): 1.6797, norm(x): 1.6947, norm(y): 1.0010, norm:41.5561, tok/sec: 103323.46, flops:108.44, batch-reuse:1
@ 792 train 6.3076 , allloss: 28.3991, dt: 1254.40ms, fracRes: 0.0632, norm(attn): 0.2002, norm(output): 1.6875, norm(x): 1.7082, norm(y): 1.0009, norm:41.3638, tok/sec: 104490.15, flops:109.66, batch-reuse:1
@ 793 train 6.3029 , allloss: 28.4439, dt: 1251.75ms, fracRes: 0.0639, norm(attn): 0.1982, norm(output): 1.7344, norm(x): 1.7315, norm(y): 1.0009, norm:54.4940, tok/sec: 104710.79, flops:109.90, batch-reuse:1
@ 794 train 6.3440 , allloss: 28.2252, dt: 1262.30ms, fracRes: 0.0664, norm(attn): 0.2021, norm(output): 1.7422, norm(x): 1.7547, norm(y): 1.0011, norm:35.4686, tok/sec: 103835.80, flops:108.98, batch-reuse:1
@ 795 train 6.2124 , allloss: 28.8422, dt: 1248.03ms, fracRes: 0.0622, norm(attn): 0.2031, norm(output): 1.7422, norm(x): 1.7548, norm(y): 1.0011, norm:58.8944, tok/sec: 105022.78, flops:110.22, batch-reuse:1
@ 796 train 6.1554 , allloss: 27.6662, dt: 1257.65ms, fracRes: 0.0644, norm(attn): 0.2061, norm(output): 1.7578, norm(x): 1.7865, norm(y): 1.0012, norm:33.4916, tok/sec: 104220.00, flops:109.38, batch-reuse:1
@ 797 train 6.2686 , allloss: 29.5394, dt: 1264.41ms, fracRes: 0.0669, norm(attn): 0.2041, norm(output): 1.8438, norm(x): 1.8367, norm(y): 1.0012, norm:67.3508, tok/sec: 103662.95, flops:108.80, batch-reuse:1
@ 798 train 6.2894 , allloss: 28.7702, dt: 1237.13ms, fracRes: 0.0704, norm(attn): 0.2041, norm(output): 1.8672, norm(x): 1.8608, norm(y): 1.0013, norm:49.1670, tok/sec: 105948.15, flops:111.19, batch-reuse:1
@ 799 train 6.3017 , allloss: 29.7683, dt: 1216.90ms, fracRes: 0.0708, norm(attn): 0.2051, norm(output): 1.8750, norm(x): 1.8804, norm(y): 1.0012, norm:61.9017, tok/sec: 107709.89, flops:113.04, batch-reuse:1
@ 800 train 6.2286 , allloss: 29.0314, dt: 1231.83ms, fracRes: 0.0716, norm(attn): 0.2148, norm(output): 1.8750, norm(x): 1.8880, norm(y): 1.0012, norm:61.9435, tok/sec: 106404.67, flops:111.67, batch-reuse:1
@ 801 train 6.2402 , allloss: 26.9910, dt: 1239.90ms, fracRes: 0.0732, norm(attn): 0.2168, norm(output): 1.8750, norm(x): 1.8882, norm(y): 1.0012, norm:39.1493, tok/sec: 105711.90, flops:110.95, batch-reuse:1
@ 802 train 6.2778 , allloss: 27.6108, dt: 1264.89ms, fracRes: 0.0754, norm(attn): 0.2109, norm(output): 1.8906, norm(x): 1.9030, norm(y): 1.0014, norm:51.6372, tok/sec: 103622.83, flops:108.75, batch-reuse:1
@ 803 train 6.3449 , allloss: 27.0239, dt: 1261.18ms, fracRes: 0.0782, norm(attn): 0.2080, norm(output): 1.8750, norm(x): 1.8758, norm(y): 1.0014, norm:42.7093, tok/sec: 103927.66, flops:109.07, batch-reuse:1
@ 804 train 6.2284 , allloss: 26.4946, dt: 1249.62ms, fracRes: 0.0787, norm(attn): 0.2031, norm(output): 1.8594, norm(x): 1.8417, norm(y): 1.0015, norm:45.8285, tok/sec: 104889.73, flops:110.08, batch-reuse:1
@ 805 train 6.3356 , allloss: 27.4905, dt: 1273.45ms, fracRes: 0.0801, norm(attn): 0.1934, norm(output): 1.8828, norm(x): 1.8760, norm(y): 1.0015, norm:44.3362, tok/sec: 102926.97, flops:108.02, batch-reuse:1
@ 806 train 6.2008 , allloss: 31.9688, dt: 1261.35ms, fracRes: 0.0813, norm(attn): 0.1904, norm(output): 1.8828, norm(x): 1.8829, norm(y): 1.0013, norm:47.1498, tok/sec: 103914.38, flops:109.06, batch-reuse:1
@ 807 train 6.2292 , allloss: 37.3645, dt: 1250.07ms, fracRes: 0.0809, norm(attn): 0.1855, norm(output): 1.8984, norm(x): 1.8941, norm(y): 1.0014, norm:49.8491, tok/sec: 104851.58, flops:110.04, batch-reuse:1
@ 808 train 6.2548 , allloss: 33.0998, dt: 1246.98ms, fracRes: 0.0819, norm(attn): 0.1758, norm(output): 1.8750, norm(x): 1.8637, norm(y): 1.0014, norm:39.4559, tok/sec: 105111.63, flops:110.32, batch-reuse:1
@ 809 train 6.2547 , allloss: 33.4038, dt: 1262.04ms, fracRes: 0.0820, norm(attn): 0.1709, norm(output): 1.8906, norm(x): 1.8973, norm(y): 1.0012, norm:44.5858, tok/sec: 103857.04, flops:109.00, batch-reuse:1
@ 810 train 6.2783 , allloss: 32.4243, dt: 1252.96ms, fracRes: 0.0830, norm(attn): 0.1631, norm(output): 1.9688, norm(x): 1.9459, norm(y): 1.0012, norm:41.7352, tok/sec: 104610.11, flops:109.79, batch-reuse:1
@ 811 train 6.2649 , allloss: 30.6937, dt: 1234.64ms, fracRes: 0.0830, norm(attn): 0.1602, norm(output): 1.9844, norm(x): 1.9547, norm(y): 1.0013, norm:38.4529, tok/sec: 106162.11, flops:111.42, batch-reuse:1
@ 812 train 6.1278 , allloss: 26.5389, dt: 1248.97ms, fracRes: 0.0832, norm(attn): 0.1602, norm(output): 1.9062, norm(x): 1.9036, norm(y): 1.0012, norm:32.2641, tok/sec: 104943.93, flops:110.14, batch-reuse:1
@ 813 train 6.3109 , allloss: 24.0321, dt: 1268.13ms, fracRes: 0.0842, norm(attn): 0.1592, norm(output): 1.9453, norm(x): 1.9291, norm(y): 1.0013, norm:30.9697, tok/sec: 103358.74, flops:108.48, batch-reuse:1
@ 814 train 6.3306 , allloss: 23.8168, dt: 1260.61ms, fracRes: 0.0840, norm(attn): 0.1562, norm(output): 1.9453, norm(x): 1.9324, norm(y): 1.0013, norm:41.2691, tok/sec: 103975.07, flops:109.12, batch-reuse:1
@ 815 train 6.1803 , allloss: 22.7169, dt: 1251.56ms, fracRes: 0.0858, norm(attn): 0.1562, norm(output): 1.9531, norm(x): 1.9506, norm(y): 1.0013, norm:38.4124, tok/sec: 104726.84, flops:109.91, batch-reuse:1
@ 816 train 6.2737 , allloss: 28.8721, dt: 1237.79ms, fracRes: 0.0870, norm(attn): 0.1543, norm(output): 1.9688, norm(x): 1.9707, norm(y): 1.0013, norm:63.9685, tok/sec: 105892.00, flops:111.14, batch-reuse:1
@ 817 train 6.3941 , allloss: 54.8323, dt: 1264.26ms, fracRes: 0.0876, norm(attn): 0.1562, norm(output): 1.9688, norm(x): 1.9781, norm(y): 1.0013, norm:69.0255, tok/sec: 103674.50, flops:108.81, batch-reuse:1
@ 818 train 6.4066 , allloss: 54.4892, dt: 1248.00ms, fracRes: 0.0872, norm(attn): 0.1562, norm(output): 1.9609, norm(x): 1.9565, norm(y): 1.0013, norm:57.1710, tok/sec: 105025.99, flops:110.23, batch-reuse:1
@ 819 train 6.5387 , allloss: 76.7692, dt: 1233.84ms, fracRes: 0.0787, norm(attn): 0.1738, norm(output): 1.9844, norm(x): 1.9540, norm(y): 1.0014, norm:120.4200, tok/sec: 106231.24, flops:111.49, batch-reuse:1
@ 820 train 6.7149 , allloss: 175.4958, dt: 1265.03ms, fracRes: 0.0709, norm(attn): 0.1895, norm(output): 1.9453, norm(x): 1.9193, norm(y): 1.0013, norm:256.9911, tok/sec: 103611.55, flops:108.74, batch-reuse:1
@ 821 train 6.5865 , allloss: 153.6697, dt: 1265.62ms, fracRes: 0.0620, norm(attn): 0.1973, norm(output): 1.8906, norm(x): 1.8782, norm(y): 1.0013, norm:181.9382, tok/sec: 103563.18, flops:108.69, batch-reuse:1
@ 822 train 6.5753 , allloss: 136.8776, dt: 1250.03ms, fracRes: 0.0552, norm(attn): 0.2051, norm(output): 1.8984, norm(x): 1.8835, norm(y): 1.0012, norm:126.1730, tok/sec: 104854.90, flops:110.05, batch-reuse:1
@ 823 train 6.4704 , allloss: 118.0667, dt: 1269.86ms, fracRes: 0.0388, norm(attn): 0.2002, norm(output): 1.8906, norm(x): 1.8825, norm(y): 1.0015, norm:119.7460, tok/sec: 103217.44, flops:108.33, batch-reuse:1
@ 824 train 6.5178 , allloss: 90.7045, dt: 1244.37ms, fracRes: 0.0670, norm(attn): 0.1992, norm(output): 1.9062, norm(x): 1.9152, norm(y): 1.0011, norm:85.1749, tok/sec: 105332.40, flops:110.55, batch-reuse:1
@ 825 train 6.4976 , allloss: 63.3639, dt: 1267.94ms, fracRes: 0.0727, norm(attn): 0.1875, norm(output): 1.8984, norm(x): 1.9077, norm(y): 1.0014, norm:71.4239, tok/sec: 103374.36, flops:108.49, batch-reuse:1
@ 826 train 6.4046 , allloss: 72.3170, dt: 1267.54ms, fracRes: 0.0731, norm(attn): 0.1816, norm(output): 1.8906, norm(x): 1.9064, norm(y): 1.0016, norm:89.4972, tok/sec: 103406.85, flops:108.53, batch-reuse:1
@ 827 train 6.4645 , allloss: 74.7345, dt: 1238.41ms, fracRes: 0.0737, norm(attn): 0.1816, norm(output): 1.9062, norm(x): 1.9346, norm(y): 1.0018, norm:80.3138, tok/sec: 105839.16, flops:111.08, batch-reuse:1
@ 828 train 6.3888 , allloss: 67.8362, dt: 1247.68ms, fracRes: 0.0687, norm(attn): 0.1797, norm(output): 1.8750, norm(x): 1.8935, norm(y): 1.0017, norm:72.4066, tok/sec: 105052.54, flops:110.25, batch-reuse:1
@ 829 train 6.4170 , allloss: 54.9683, dt: 1258.74ms, fracRes: 0.0686, norm(attn): 0.1846, norm(output): 1.8750, norm(x): 1.9077, norm(y): 1.0016, norm:51.1778, tok/sec: 104129.53, flops:109.29, batch-reuse:1
@ 830 train 6.3857 , allloss: 48.4411, dt: 1270.63ms, fracRes: 0.0715, norm(attn): 0.1816, norm(output): 1.8906, norm(x): 1.8956, norm(y): 1.0017, norm:55.4260, tok/sec: 103155.27, flops:108.26, batch-reuse:1
@ 831 train 6.3708 , allloss: 47.9792, dt: 1245.81ms, fracRes: 0.0744, norm(attn): 0.1865, norm(output): 1.8984, norm(x): 1.8798, norm(y): 1.0017, norm:49.2249, tok/sec: 105210.12, flops:110.42, batch-reuse:1
@ 832 train 6.4041 , allloss: 46.8428, dt: 1241.11ms, fracRes: 0.0778, norm(attn): 0.1895, norm(output): 1.9766, norm(x): 1.9873, norm(y): 1.0018, norm:51.5788, tok/sec: 105608.68, flops:110.84, batch-reuse:1
@ 833 train 6.2924 , allloss: 43.8955, dt: 1238.33ms, fracRes: 0.0782, norm(attn): 0.1904, norm(output): 1.9219, norm(x): 1.9375, norm(y): 1.0019, norm:62.7017, tok/sec: 105845.91, flops:111.09, batch-reuse:1
@ 834 train 6.3111 , allloss: 45.0023, dt: 1243.59ms, fracRes: 0.0759, norm(attn): 0.1934, norm(output): 1.8672, norm(x): 1.8681, norm(y): 1.0019, norm:60.1013, tok/sec: 105398.09, flops:110.62, batch-reuse:1
@ 835 train 6.2311 , allloss: 39.1006, dt: 1266.43ms, fracRes: 0.0781, norm(attn): 0.1895, norm(output): 1.8828, norm(x): 1.8867, norm(y): 1.0018, norm:47.3769, tok/sec: 103497.61, flops:108.62, batch-reuse:1
@ 836 train 6.2359 , allloss: 35.3183, dt: 1253.49ms, fracRes: 0.0801, norm(attn): 0.1865, norm(output): 1.9688, norm(x): 1.9368, norm(y): 1.0020, norm:54.3557, tok/sec: 104565.75, flops:109.74, batch-reuse:1
@ 837 train 6.2604 , allloss: 35.1594, dt: 1265.62ms, fracRes: 0.0793, norm(attn): 0.1885, norm(output): 1.9922, norm(x): 1.9640, norm(y): 1.0020, norm:43.6709, tok/sec: 103563.28, flops:108.69, batch-reuse:1
@ 838 train 6.2379 , allloss: 34.7334, dt: 1270.62ms, fracRes: 0.0778, norm(attn): 0.1904, norm(output): 1.9844, norm(x): 1.9438, norm(y): 1.0018, norm:43.8668, tok/sec: 103156.24, flops:108.26, batch-reuse:1
@ 839 train 6.0781 , allloss: 30.9655, dt: 1250.77ms, fracRes: 0.0761, norm(attn): 0.1924, norm(output): 2.0156, norm(x): 1.9727, norm(y): 1.0018, norm:39.5850, tok/sec: 104793.40, flops:109.98, batch-reuse:1
@ 840 train 6.1962 , allloss: 30.6462, dt: 1269.15ms, fracRes: 0.0766, norm(attn): 0.1865, norm(output): 2.0469, norm(x): 2.0045, norm(y): 1.0018, norm:45.5350, tok/sec: 103275.75, flops:108.39, batch-reuse:1
@ 841 train 6.1375 , allloss: 28.5685, dt: 1253.84ms, fracRes: 0.0716, norm(attn): 0.1885, norm(output): 2.0156, norm(x): 1.9656, norm(y): 1.0018, norm:38.7114, tok/sec: 104536.17, flops:109.71, batch-reuse:1
@ 842 train 6.2564 , allloss: 29.1858, dt: 1265.04ms, fracRes: 0.0683, norm(attn): 0.1914, norm(output): 1.9922, norm(x): 1.9412, norm(y): 1.0017, norm:51.1271, tok/sec: 103611.25, flops:108.74, batch-reuse:1
@ 843 train 6.2527 , allloss: 29.3953, dt: 1254.44ms, fracRes: 0.0625, norm(attn): 0.1982, norm(output): 2.0000, norm(x): 1.9366, norm(y): 1.0017, norm:43.9581, tok/sec: 104486.46, flops:109.66, batch-reuse:1
@ 844 train 6.3037 , allloss: 28.8622, dt: 1257.18ms, fracRes: 0.0609, norm(attn): 0.1934, norm(output): 2.0312, norm(x): 1.9648, norm(y): 1.0017, norm:44.4757, tok/sec: 104258.78, flops:109.42, batch-reuse:1
@ 845 train 6.2581 , allloss: 28.6046, dt: 1235.41ms, fracRes: 0.0625, norm(attn): 0.1924, norm(output): 2.0312, norm(x): 1.9725, norm(y): 1.0016, norm:40.5461, tok/sec: 106095.87, flops:111.35, batch-reuse:1
@ 846 train 6.2176 , allloss: 29.2053, dt: 1242.27ms, fracRes: 0.0651, norm(attn): 0.1875, norm(output): 2.0469, norm(x): 1.9855, norm(y): 1.0016, norm:50.3295, tok/sec: 105510.30, flops:110.74, batch-reuse:1
@ 847 train 6.2812 , allloss: 29.8062, dt: 1255.59ms, fracRes: 0.0686, norm(attn): 0.1826, norm(output): 2.0469, norm(x): 1.9908, norm(y): 1.0017, norm:49.5082, tok/sec: 104390.65, flops:109.56, batch-reuse:1
@ 848 train 6.2781 , allloss: 33.3952, dt: 1256.52ms, fracRes: 0.0713, norm(attn): 0.1807, norm(output): 2.0156, norm(x): 1.9651, norm(y): 1.0018, norm:50.5073, tok/sec: 104313.26, flops:109.48, batch-reuse:1
@ 849 train 6.2222 , allloss: 58.0554, dt: 1250.33ms, fracRes: 0.0740, norm(attn): 0.1738, norm(output): 2.0000, norm(x): 1.9684, norm(y): 1.0017, norm:98.4817, tok/sec: 104830.13, flops:110.02, batch-reuse:1
@ 850 train 6.2158 , allloss: 72.0043, dt: 1266.78ms, fracRes: 0.0765, norm(attn): 0.1738, norm(output): 2.0469, norm(x): 2.0171, norm(y): 1.0017, norm:84.8772, tok/sec: 103468.96, flops:108.59, batch-reuse:1
@ 851 train 6.4164 , allloss: 64.5363, dt: 1259.88ms, fracRes: 0.0806, norm(attn): 0.1719, norm(output): 2.1094, norm(x): 2.1064, norm(y): 1.0018, norm:83.0813, tok/sec: 104035.56, flops:109.19, batch-reuse:1
@ 852 train 6.2695 , allloss: 44.9725, dt: 1275.70ms, fracRes: 0.0801, norm(attn): 0.1729, norm(output): 2.1250, norm(x): 2.0848, norm(y): 1.0019, norm:74.9119, tok/sec: 102745.27, flops:107.83, batch-reuse:1
@ 853 train 6.2230 , allloss: 39.9125, dt: 1276.07ms, fracRes: 0.0792, norm(attn): 0.1738, norm(output): 2.0625, norm(x): 2.0446, norm(y): 1.0019, norm:61.7044, tok/sec: 102715.42, flops:107.80, batch-reuse:1
@ 854 train 6.2582 , allloss: 33.2904, dt: 1268.09ms, fracRes: 0.0786, norm(attn): 0.1748, norm(output): 2.0156, norm(x): 2.0178, norm(y): 1.0019, norm:45.8582, tok/sec: 103361.51, flops:108.48, batch-reuse:1
@ 855 train 6.2983 , allloss: 30.0354, dt: 1261.53ms, fracRes: 0.0801, norm(attn): 0.1748, norm(output): 2.0469, norm(x): 2.0448, norm(y): 1.0021, norm:42.7132, tok/sec: 103899.16, flops:109.04, batch-reuse:1
@ 856 train 6.2563 , allloss: 29.7364, dt: 1256.67ms, fracRes: 0.0816, norm(attn): 0.1748, norm(output): 2.0312, norm(x): 2.0593, norm(y): 1.0022, norm:36.3510, tok/sec: 104301.41, flops:109.47, batch-reuse:1
@ 857 train 6.2367 , allloss: 28.2394, dt: 1284.08ms, fracRes: 0.0860, norm(attn): 0.1777, norm(output): 2.0312, norm(x): 2.0509, norm(y): 1.0023, norm:41.7059, tok/sec: 102074.65, flops:107.13, batch-reuse:1
@ 858 train 6.3080 , allloss: 28.8879, dt: 1258.78ms, fracRes: 0.0865, norm(attn): 0.1768, norm(output): 2.0312, norm(x): 2.0564, norm(y): 1.0021, norm:45.0738, tok/sec: 104125.84, flops:109.28, batch-reuse:1
@ 859 train 6.2076 , allloss: 28.9802, dt: 1258.64ms, fracRes: 0.0872, norm(attn): 0.1816, norm(output): 2.0625, norm(x): 2.0752, norm(y): 1.0021, norm:40.8136, tok/sec: 104138.09, flops:109.29, batch-reuse:1
@ 860 train 6.2405 , allloss: 29.9167, dt: 1280.30ms, fracRes: 0.0878, norm(attn): 0.1777, norm(output): 2.0625, norm(x): 2.0794, norm(y): 1.0024, norm:39.3867, tok/sec: 102375.84, flops:107.45, batch-reuse:1
@ 861 train 6.2343 , allloss: 27.7355, dt: 1271.88ms, fracRes: 0.0908, norm(attn): 0.1826, norm(output): 2.1094, norm(x): 2.1098, norm(y): 1.0025, norm:36.6663, tok/sec: 103054.02, flops:108.16, batch-reuse:1
@ 862 train 6.2723 , allloss: 28.0070, dt: 1267.68ms, fracRes: 0.0931, norm(attn): 0.1875, norm(output): 2.1250, norm(x): 2.1379, norm(y): 1.0026, norm:41.8658, tok/sec: 103395.22, flops:108.52, batch-reuse:1
@ 863 train 6.2439 , allloss: 27.6098, dt: 1254.45ms, fracRes: 0.0895, norm(attn): 0.1904, norm(output): 2.1250, norm(x): 2.1238, norm(y): 1.0026, norm:36.8920, tok/sec: 104485.27, flops:109.66, batch-reuse:1
@ 864 train 6.2332 , allloss: 26.9404, dt: 1274.39ms, fracRes: 0.0888, norm(attn): 0.1885, norm(output): 2.1094, norm(x): 2.1093, norm(y): 1.0025, norm:36.6051, tok/sec: 102851.01, flops:107.94, batch-reuse:1
@ 865 train 6.1611 , allloss: 25.8246, dt: 1263.02ms, fracRes: 0.0884, norm(attn): 0.1875, norm(output): 2.1250, norm(x): 2.1220, norm(y): 1.0025, norm:35.4235, tok/sec: 103776.70, flops:108.92, batch-reuse:1
@ 866 train 6.1710 , allloss: 26.1177, dt: 1280.87ms, fracRes: 0.0886, norm(attn): 0.1885, norm(output): 2.1250, norm(x): 2.1120, norm(y): 1.0027, norm:34.7793, tok/sec: 102330.36, flops:107.40, batch-reuse:1
@ 867 train 6.2376 , allloss: 26.4389, dt: 1308.43ms, fracRes: 0.0891, norm(attn): 0.1885, norm(output): 2.1562, norm(x): 2.1543, norm(y): 1.0025, norm:40.2894, tok/sec: 100175.17, flops:105.14, batch-reuse:1
@ 868 train 6.1763 , allloss: 25.9334, dt: 1261.94ms, fracRes: 0.0899, norm(attn): 0.1865, norm(output): 2.1250, norm(x): 2.1133, norm(y): 1.0027, norm:30.6602, tok/sec: 103865.38, flops:109.01, batch-reuse:1
@ 869 train 6.2041 , allloss: 25.5053, dt: 1259.37ms, fracRes: 0.0900, norm(attn): 0.1816, norm(output): 2.1250, norm(x): 2.1043, norm(y): 1.0028, norm:40.5389, tok/sec: 104077.80, flops:109.23, batch-reuse:1
@ 870 train 6.1722 , allloss: 25.8541, dt: 1255.62ms, fracRes: 0.0895, norm(attn): 0.1836, norm(output): 2.1406, norm(x): 2.1059, norm(y): 1.0027, norm:36.2150, tok/sec: 104388.59, flops:109.56, batch-reuse:1
@ 871 train 6.2102 , allloss: 27.8116, dt: 1262.20ms, fracRes: 0.0902, norm(attn): 0.1807, norm(output): 2.1250, norm(x): 2.0984, norm(y): 1.0028, norm:36.2482, tok/sec: 103844.25, flops:108.99, batch-reuse:1
@ 872 train 6.1607 , allloss: 25.3520, dt: 1266.86ms, fracRes: 0.0902, norm(attn): 0.1855, norm(output): 2.1250, norm(x): 2.0870, norm(y): 1.0028, norm:36.2720, tok/sec: 103462.47, flops:108.59, batch-reuse:1
@ 873 train 6.1940 , allloss: 24.7057, dt: 1290.77ms, fracRes: 0.0904, norm(attn): 0.1875, norm(output): 2.1250, norm(x): 2.0778, norm(y): 1.0027, norm:32.9929, tok/sec: 101545.75, flops:106.57, batch-reuse:1
@ 874 train 6.1230 , allloss: 25.6734, dt: 1255.67ms, fracRes: 0.0914, norm(attn): 0.1885, norm(output): 2.1250, norm(x): 2.0739, norm(y): 1.0027, norm:31.0443, tok/sec: 104384.35, flops:109.55, batch-reuse:1
@ 875 train 6.1615 , allloss: 25.1109, dt: 1268.03ms, fracRes: 0.0923, norm(attn): 0.1885, norm(output): 2.1250, norm(x): 2.0886, norm(y): 1.0028, norm:35.0986, tok/sec: 103366.88, flops:108.49, batch-reuse:1
@ 876 train 6.1727 , allloss: 24.3550, dt: 1277.14ms, fracRes: 0.0926, norm(attn): 0.1895, norm(output): 2.1250, norm(x): 2.0791, norm(y): 1.0027, norm:32.0985, tok/sec: 102629.55, flops:107.71, batch-reuse:1
@ 877 train 6.1742 , allloss: 25.2841, dt: 1276.63ms, fracRes: 0.0974, norm(attn): 0.1865, norm(output): 2.1094, norm(x): 2.0555, norm(y): 1.0028, norm:32.8824, tok/sec: 102670.26, flops:107.75, batch-reuse:1
@ 878 train 6.1600 , allloss: 25.3569, dt: 1252.63ms, fracRes: 0.0984, norm(attn): 0.1836, norm(output): 2.1250, norm(x): 2.0519, norm(y): 1.0029, norm:34.3637, tok/sec: 104637.78, flops:109.82, batch-reuse:1
@ 879 train 6.1044 , allloss: 27.5718, dt: 1254.56ms, fracRes: 0.0944, norm(attn): 0.1865, norm(output): 2.1250, norm(x): 2.0535, norm(y): 1.0028, norm:33.7458, tok/sec: 104476.69, flops:109.65, batch-reuse:1
@ 880 train 6.1925 , allloss: 26.9836, dt: 1251.81ms, fracRes: 0.0940, norm(attn): 0.1885, norm(output): 2.1406, norm(x): 2.0647, norm(y): 1.0029, norm:33.5397, tok/sec: 104706.14, flops:109.89, batch-reuse:1
@ 881 train 6.1110 , allloss: 25.2806, dt: 1267.10ms, fracRes: 0.0926, norm(attn): 0.1895, norm(output): 2.2188, norm(x): 2.1220, norm(y): 1.0027, norm:33.0855, tok/sec: 103442.42, flops:108.56, batch-reuse:1
@ 882 train 6.1035 , allloss: 25.0702, dt: 1256.47ms, fracRes: 0.0930, norm(attn): 0.1943, norm(output): 2.1250, norm(x): 2.0632, norm(y): 1.0028, norm:34.9581, tok/sec: 104317.91, flops:109.48, batch-reuse:1
@ 883 train 6.0912 , allloss: 24.9985, dt: 1278.23ms, fracRes: 0.0943, norm(attn): 0.1934, norm(output): 2.0781, norm(x): 2.0051, norm(y): 1.0028, norm:32.3164, tok/sec: 102541.90, flops:107.62, batch-reuse:1
@ 884 train 6.0787 , allloss: 24.8210, dt: 1262.62ms, fracRes: 0.0926, norm(attn): 0.1934, norm(output): 2.1250, norm(x): 2.0492, norm(y): 1.0028, norm:30.5186, tok/sec: 103809.15, flops:108.95, batch-reuse:1
@ 885 train 6.1267 , allloss: 24.7893, dt: 1254.88ms, fracRes: 0.0916, norm(attn): 0.1953, norm(output): 2.1250, norm(x): 2.0527, norm(y): 1.0028, norm:35.7879, tok/sec: 104449.49, flops:109.62, batch-reuse:1
@ 886 train 6.1819 , allloss: 24.7113, dt: 1250.71ms, fracRes: 0.0913, norm(attn): 0.1953, norm(output): 2.1250, norm(x): 2.0530, norm(y): 1.0026, norm:30.5643, tok/sec: 104798.07, flops:109.99, batch-reuse:1
@ 887 train 6.1258 , allloss: 24.6629, dt: 1272.73ms, fracRes: 0.0904, norm(attn): 0.1953, norm(output): 2.0938, norm(x): 2.0048, norm(y): 1.0026, norm:33.4462, tok/sec: 102984.76, flops:108.08, batch-reuse:1
@ 888 train 6.1418 , allloss: 25.3227, dt: 1247.83ms, fracRes: 0.0901, norm(attn): 0.1943, norm(output): 2.0781, norm(x): 2.0083, norm(y): 1.0028, norm:35.2611, tok/sec: 105040.26, flops:110.24, batch-reuse:1
@ 889 train 6.1557 , allloss: 25.0981, dt: 1250.36ms, fracRes: 0.0901, norm(attn): 0.1973, norm(output): 2.1250, norm(x): 2.0353, norm(y): 1.0028, norm:32.3078, tok/sec: 104827.43, flops:110.02, batch-reuse:1
@ 890 train 6.1812 , allloss: 24.2346, dt: 1254.91ms, fracRes: 0.0905, norm(attn): 0.2021, norm(output): 2.1094, norm(x): 2.0302, norm(y): 1.0029, norm:27.3484, tok/sec: 104447.25, flops:109.62, batch-reuse:1
@ 891 train 6.1739 , allloss: 24.0187, dt: 1264.36ms, fracRes: 0.0904, norm(attn): 0.2051, norm(output): 2.1250, norm(x): 2.0572, norm(y): 1.0029, norm:32.0275, tok/sec: 103666.52, flops:108.80, batch-reuse:1
@ 892 train 6.0973 , allloss: 23.3847, dt: 1226.62ms, fracRes: 0.0905, norm(attn): 0.2031, norm(output): 2.0781, norm(x): 2.0061, norm(y): 1.0030, norm:29.8890, tok/sec: 106856.24, flops:112.15, batch-reuse:1
@ 893 train 6.0256 , allloss: 23.0328, dt: 1248.48ms, fracRes: 0.0905, norm(attn): 0.2031, norm(output): 2.0781, norm(x): 2.0074, norm(y): 1.0031, norm:23.7159, tok/sec: 104985.15, flops:110.18, batch-reuse:1
@ 894 train 6.1552 , allloss: 33.0539, dt: 1258.55ms, fracRes: 0.0903, norm(attn): 0.2031, norm(output): 2.0938, norm(x): 2.0266, norm(y): 1.0031, norm:30.6747, tok/sec: 104145.09, flops:109.30, batch-reuse:1
@ 895 train 6.1483 , allloss: 25.3684, dt: 1267.02ms, fracRes: 0.0906, norm(attn): 0.2041, norm(output): 2.1094, norm(x): 2.0275, norm(y): 1.0031, norm:30.2378, tok/sec: 103449.14, flops:108.57, batch-reuse:1
@ 896 train 6.0354 , allloss: 24.3944, dt: 1265.67ms, fracRes: 0.0907, norm(attn): 0.2031, norm(output): 2.1094, norm(x): 2.0339, norm(y): 1.0031, norm:30.3977, tok/sec: 103559.04, flops:108.69, batch-reuse:1
@ 897 train 6.1360 , allloss: 25.4658, dt: 1260.41ms, fracRes: 0.0912, norm(attn): 0.2031, norm(output): 2.0781, norm(x): 2.0042, norm(y): 1.0033, norm:28.4404, tok/sec: 103991.69, flops:109.14, batch-reuse:1
@ 898 train 6.1595 , allloss: 26.0972, dt: 1266.08ms, fracRes: 0.0914, norm(attn): 0.2051, norm(output): 2.0469, norm(x): 1.9878, norm(y): 1.0033, norm:35.3035, tok/sec: 103526.22, flops:108.65, batch-reuse:1
@ 899 train 6.1277 , allloss: 30.1945, dt: 1241.79ms, fracRes: 0.0906, norm(attn): 0.2021, norm(output): 2.0781, norm(x): 2.0137, norm(y): 1.0031, norm:37.4366, tok/sec: 105550.95, flops:110.78, batch-reuse:1
@ 900 train 6.1777 , allloss: 34.3204, dt: 1248.27ms, fracRes: 0.0905, norm(attn): 0.2031, norm(output): 2.0781, norm(x): 2.0096, norm(y): 1.0032, norm:36.3245, tok/sec: 105002.88, flops:110.20, batch-reuse:1
@ 901 train 6.1053 , allloss: 34.7720, dt: 1252.38ms, fracRes: 0.0905, norm(attn): 0.2021, norm(output): 2.0781, norm(x): 2.0149, norm(y): 1.0032, norm:42.6742, tok/sec: 104658.36, flops:109.84, batch-reuse:1
@ 902 train 6.1051 , allloss: 29.4897, dt: 1266.70ms, fracRes: 0.0899, norm(attn): 0.2002, norm(output): 2.1250, norm(x): 2.0517, norm(y): 1.0031, norm:29.5487, tok/sec: 103475.44, flops:108.60, batch-reuse:1
@ 903 train 6.0992 , allloss: 25.1287, dt: 1267.40ms, fracRes: 0.0897, norm(attn): 0.1934, norm(output): 2.1406, norm(x): 2.0810, norm(y): 1.0030, norm:30.9096, tok/sec: 103418.33, flops:108.54, batch-reuse:1
@ 904 train 6.0696 , allloss: 31.6506, dt: 1259.81ms, fracRes: 0.0907, norm(attn): 0.1895, norm(output): 2.1250, norm(x): 2.0487, norm(y): 1.0028, norm:26.6592, tok/sec: 104041.46, flops:109.19, batch-reuse:1
@ 905 train 6.2250 , allloss: 23.7754, dt: 1248.25ms, fracRes: 0.0900, norm(attn): 0.2002, norm(output): 2.0469, norm(x): 1.9904, norm(y): 1.0032, norm:27.6497, tok/sec: 105004.28, flops:110.20, batch-reuse:1
@ 906 train 6.1372 , allloss: 41.4820, dt: 1266.51ms, fracRes: 0.0903, norm(attn): 0.1885, norm(output): 2.2188, norm(x): 2.1384, norm(y): 1.0030, norm:54.2904, tok/sec: 103490.69, flops:108.62, batch-reuse:1
@ 907 train 6.1293 , allloss: 24.6291, dt: 1278.06ms, fracRes: 0.0918, norm(attn): 0.1865, norm(output): 2.2812, norm(x): 2.2490, norm(y): 1.0030, norm:26.7468, tok/sec: 102555.38, flops:107.63, batch-reuse:1
@ 908 train 6.1435 , allloss: 22.5204, dt: 1252.09ms, fracRes: 0.0906, norm(attn): 0.1875, norm(output): 2.2344, norm(x): 2.1762, norm(y): 1.0031, norm:26.4705, tok/sec: 104682.17, flops:109.87, batch-reuse:1
@ 909 train 6.3491 , allloss: 23.2316, dt: 1270.41ms, fracRes: 0.0918, norm(attn): 0.1992, norm(output): 2.2188, norm(x): 2.1427, norm(y): 1.0033, norm:23.5379, tok/sec: 103173.22, flops:108.28, batch-reuse:1
@ 910 train 6.1738 , allloss: 22.9202, dt: 1270.16ms, fracRes: 0.0921, norm(attn): 0.2031, norm(output): 2.1875, norm(x): 2.1341, norm(y): 1.0032, norm:25.5544, tok/sec: 103193.26, flops:108.30, batch-reuse:1
@ 911 train 6.2526 , allloss: 25.3188, dt: 1253.67ms, fracRes: 0.0920, norm(attn): 0.2061, norm(output): 2.2656, norm(x): 2.2238, norm(y): 1.0031, norm:24.2924, tok/sec: 104550.66, flops:109.73, batch-reuse:1
@ 912 train 6.1407 , allloss: 27.4675, dt: 1263.49ms, fracRes: 0.0928, norm(attn): 0.2119, norm(output): 2.2812, norm(x): 2.2374, norm(y): 1.0031, norm:31.8558, tok/sec: 103738.32, flops:108.88, batch-reuse:1
@ 913 train 6.1106 , allloss: 25.3727, dt: 1236.20ms, fracRes: 0.0935, norm(attn): 0.2158, norm(output): 2.2812, norm(x): 2.2215, norm(y): 1.0031, norm:24.8948, tok/sec: 106028.24, flops:111.28, batch-reuse:1
@ 914 train 6.1529 , allloss: 24.5221, dt: 1240.69ms, fracRes: 0.0931, norm(attn): 0.2197, norm(output): 2.2500, norm(x): 2.1974, norm(y): 1.0031, norm:26.4245, tok/sec: 105644.64, flops:110.88, batch-reuse:1
@ 915 train 6.1806 , allloss: 24.1059, dt: 1244.35ms, fracRes: 0.0956, norm(attn): 0.2246, norm(output): 2.2344, norm(x): 2.1605, norm(y): 1.0032, norm:27.3164, tok/sec: 105333.75, flops:110.55, batch-reuse:1
@ 916 train 6.1091 , allloss: 24.1992, dt: 1240.61ms, fracRes: 0.0960, norm(attn): 0.2236, norm(output): 2.2031, norm(x): 2.1601, norm(y): 1.0033, norm:25.9936, tok/sec: 105650.84, flops:110.88, batch-reuse:1
@ 917 train 6.1303 , allloss: 24.5030, dt: 1270.77ms, fracRes: 0.0960, norm(attn): 0.2188, norm(output): 2.2656, norm(x): 2.2140, norm(y): 1.0032, norm:27.4439, tok/sec: 103144.07, flops:108.25, batch-reuse:1
@ 918 train 6.1791 , allloss: 25.2160, dt: 1249.71ms, fracRes: 0.0945, norm(attn): 0.2188, norm(output): 2.2969, norm(x): 2.2445, norm(y): 1.0032, norm:24.6461, tok/sec: 104882.25, flops:110.08, batch-reuse:1
@ 919 train 6.1194 , allloss: 25.9265, dt: 1240.63ms, fracRes: 0.0944, norm(attn): 0.2188, norm(output): 2.3125, norm(x): 2.2530, norm(y): 1.0033, norm:25.8273, tok/sec: 105649.27, flops:110.88, batch-reuse:1
@ 920 train 6.1831 , allloss: 27.2204, dt: 1267.26ms, fracRes: 0.0945, norm(attn): 0.2207, norm(output): 2.3125, norm(x): 2.2655, norm(y): 1.0034, norm:32.2326, tok/sec: 103429.52, flops:108.55, batch-reuse:1
@ 921 train 6.1456 , allloss: 30.4242, dt: 1260.53ms, fracRes: 0.0938, norm(attn): 0.2188, norm(output): 2.3125, norm(x): 2.2750, norm(y): 1.0033, norm:32.4611, tok/sec: 103981.56, flops:109.13, batch-reuse:1
@ 922 train 6.1804 , allloss: 30.1886, dt: 1250.68ms, fracRes: 0.0954, norm(attn): 0.2188, norm(output): 2.3438, norm(x): 2.2822, norm(y): 1.0033, norm:27.4143, tok/sec: 104800.33, flops:109.99, batch-reuse:1
@ 923 train 6.1306 , allloss: 29.0874, dt: 1234.86ms, fracRes: 0.0971, norm(attn): 0.2129, norm(output): 2.4062, norm(x): 2.2913, norm(y): 1.0033, norm:27.2534, tok/sec: 106142.99, flops:111.40, batch-reuse:1
@ 924 train 6.1331 , allloss: 27.6166, dt: 1267.74ms, fracRes: 0.0953, norm(attn): 0.2168, norm(output): 2.4062, norm(x): 2.3301, norm(y): 1.0033, norm:26.4719, tok/sec: 103389.93, flops:108.51, batch-reuse:1
@ 925 train 6.1548 , allloss: 27.9727, dt: 1254.95ms, fracRes: 0.0951, norm(attn): 0.2188, norm(output): 2.4688, norm(x): 2.3915, norm(y): 1.0032, norm:24.6001, tok/sec: 104444.20, flops:109.62, batch-reuse:1
@ 926 train 6.1149 , allloss: 27.9202, dt: 1242.78ms, fracRes: 0.0962, norm(attn): 0.2188, norm(output): 2.4688, norm(x): 2.4150, norm(y): 1.0033, norm:29.0602, tok/sec: 105466.39, flops:110.69, batch-reuse:1
@ 927 train 6.0512 , allloss: 30.5463, dt: 1241.52ms, fracRes: 0.0984, norm(attn): 0.2178, norm(output): 2.4688, norm(x): 2.4145, norm(y): 1.0034, norm:23.7076, tok/sec: 105574.22, flops:110.80, batch-reuse:1
@ 928 train 6.2740 , allloss: 29.8495, dt: 1276.08ms, fracRes: 0.0991, norm(attn): 0.2168, norm(output): 2.5312, norm(x): 2.4935, norm(y): 1.0033, norm:22.6086, tok/sec: 102714.59, flops:107.80, batch-reuse:1
@ 929 train 6.2954 , allloss: 30.2581, dt: 1246.24ms, fracRes: 0.1042, norm(attn): 0.2188, norm(output): 2.4844, norm(x): 2.3979, norm(y): 1.0037, norm:22.8334, tok/sec: 105173.97, flops:110.38, batch-reuse:1
@ 930 train 6.2478 , allloss: 30.9073, dt: 1263.62ms, fracRes: 0.0991, norm(attn): 0.2217, norm(output): 2.5312, norm(x): 2.5062, norm(y): 1.0036, norm:22.5255, tok/sec: 103727.51, flops:108.86, batch-reuse:1
@ 931 train 6.4225 , allloss: 28.2337, dt: 1244.27ms, fracRes: 0.0971, norm(attn): 0.2168, norm(output): 2.5625, norm(x): 2.5451, norm(y): 1.0035, norm:23.2964, tok/sec: 105340.49, flops:110.56, batch-reuse:1
@ 932 train 6.2964 , allloss: 73.7515, dt: 1243.42ms, fracRes: 0.0952, norm(attn): 0.2188, norm(output): 2.5000, norm(x): 2.4516, norm(y): 1.0036, norm:43.7044, tok/sec: 105412.28, flops:110.63, batch-reuse:1
@ 933 train 6.4382 , allloss: 66.7006, dt: 1249.75ms, fracRes: 0.0957, norm(attn): 0.2188, norm(output): 2.4531, norm(x): 2.4263, norm(y): 1.0036, norm:43.3513, tok/sec: 104878.16, flops:110.07, batch-reuse:1
@ 934 train 6.3509 , allloss: 61.3499, dt: 1270.60ms, fracRes: 0.0957, norm(attn): 0.2168, norm(output): 2.5000, norm(x): 2.4984, norm(y): 1.0035, norm:38.5852, tok/sec: 103157.58, flops:108.27, batch-reuse:1
@ 935 train 6.2645 , allloss: 59.4063, dt: 1247.04ms, fracRes: 0.0962, norm(attn): 0.2109, norm(output): 2.5781, norm(x): 2.5777, norm(y): 1.0034, norm:46.6301, tok/sec: 105106.11, flops:110.31, batch-reuse:1
@ 936 train 6.3234 , allloss: 56.3815, dt: 1268.61ms, fracRes: 0.0953, norm(attn): 0.2061, norm(output): 2.6406, norm(x): 2.6518, norm(y): 1.0032, norm:44.6840, tok/sec: 103319.71, flops:108.44, batch-reuse:1
@ 937 train 6.3576 , allloss: 55.2155, dt: 1231.66ms, fracRes: 0.0967, norm(attn): 0.2031, norm(output): 2.6719, norm(x): 2.6777, norm(y): 1.0032, norm:43.0283, tok/sec: 106418.95, flops:111.69, batch-reuse:1
@ 938 train 6.2702 , allloss: 53.4194, dt: 1236.18ms, fracRes: 0.1004, norm(attn): 0.2041, norm(output): 2.6250, norm(x): 2.6314, norm(y): 1.0034, norm:42.7734, tok/sec: 106030.06, flops:111.28, batch-reuse:1
@ 939 train 6.3538 , allloss: 60.6953, dt: 1248.85ms, fracRes: 0.1114, norm(attn): 0.2021, norm(output): 2.5781, norm(x): 2.5824, norm(y): 1.0035, norm:43.8372, tok/sec: 104954.23, flops:110.15, batch-reuse:1
@ 940 train 6.3272 , allloss: 58.1287, dt: 1250.36ms, fracRes: 0.1002, norm(attn): 0.2021, norm(output): 2.6094, norm(x): 2.6494, norm(y): 1.0033, norm:59.5373, tok/sec: 104827.43, flops:110.02, batch-reuse:1
@ 941 train 6.3110 , allloss: 57.1811, dt: 1241.51ms, fracRes: 0.0987, norm(attn): 0.2021, norm(output): 2.6562, norm(x): 2.6694, norm(y): 1.0032, norm:43.4369, tok/sec: 105575.02, flops:110.80, batch-reuse:1
@ 942 train 6.2951 , allloss: 54.5837, dt: 1251.32ms, fracRes: 0.0963, norm(attn): 0.2031, norm(output): 2.6406, norm(x): 2.6876, norm(y): 1.0032, norm:47.1894, tok/sec: 104747.06, flops:109.93, batch-reuse:1
@ 943 train 6.2966 , allloss: 53.1467, dt: 1262.87ms, fracRes: 0.0965, norm(attn): 0.2041, norm(output): 2.6250, norm(x): 2.6892, norm(y): 1.0034, norm:40.1422, tok/sec: 103789.00, flops:108.93, batch-reuse:1
@ 944 train 6.2950 , allloss: 52.9004, dt: 1250.44ms, fracRes: 0.0960, norm(attn): 0.2070, norm(output): 2.6562, norm(x): 2.7178, norm(y): 1.0033, norm:40.1191, tok/sec: 104820.73, flops:110.01, batch-reuse:1
@ 945 train 6.3887 , allloss: 59.0239, dt: 1267.14ms, fracRes: 0.0979, norm(attn): 0.2129, norm(output): 2.6250, norm(x): 2.7221, norm(y): 1.0035, norm:39.3248, tok/sec: 103439.07, flops:108.56, batch-reuse:1
@ 946 train 6.2908 , allloss: 57.6684, dt: 1260.76ms, fracRes: 0.0972, norm(attn): 0.2119, norm(output): 2.6562, norm(x): 2.7380, norm(y): 1.0033, norm:39.9477, tok/sec: 103962.45, flops:109.11, batch-reuse:1
@ 947 train 6.2761 , allloss: 57.6813, dt: 1233.85ms, fracRes: 0.0975, norm(attn): 0.2070, norm(output): 2.6250, norm(x): 2.7199, norm(y): 1.0035, norm:40.0704, tok/sec: 106229.68, flops:111.49, batch-reuse:1
@ 948 train 6.2480 , allloss: 57.0271, dt: 1250.38ms, fracRes: 0.0975, norm(attn): 0.2051, norm(output): 2.6094, norm(x): 2.7464, norm(y): 1.0039, norm:40.7395, tok/sec: 104825.81, flops:110.02, batch-reuse:1
@ 949 train 6.3147 , allloss: 57.1677, dt: 1243.76ms, fracRes: 0.0987, norm(attn): 0.2031, norm(output): 2.7344, norm(x): 2.8629, norm(y): 1.0040, norm:41.3187, tok/sec: 105384.07, flops:110.60, batch-reuse:1
@ 950 train 6.2947 , allloss: 61.0313, dt: 1250.67ms, fracRes: 0.1008, norm(attn): 0.2051, norm(output): 2.7656, norm(x): 2.9561, norm(y): 1.0038, norm:46.9635, tok/sec: 104801.23, flops:109.99, batch-reuse:1
@ 951 train 6.3359 , allloss: 65.7684, dt: 1260.19ms, fracRes: 0.1017, norm(attn): 0.2100, norm(output): 2.8281, norm(x): 3.0328, norm(y): 1.0036, norm:52.3477, tok/sec: 104009.32, flops:109.16, batch-reuse:1
@ 952 train 6.2677 , allloss: 71.8043, dt: 1266.15ms, fracRes: 0.1043, norm(attn): 0.2168, norm(output): 2.8906, norm(x): 3.0680, norm(y): 1.0035, norm:52.7076, tok/sec: 103520.18, flops:108.65, batch-reuse:1
@ 953 train 6.2688 , allloss: 76.5010, dt: 1267.29ms, fracRes: 0.1077, norm(attn): 0.2334, norm(output): 2.8750, norm(x): 3.1198, norm(y): 1.0035, norm:52.6285, tok/sec: 103427.11, flops:108.55, batch-reuse:1
@ 954 train 6.2099 , allloss: 78.3242, dt: 1256.17ms, fracRes: 0.1053, norm(attn): 0.2461, norm(output): 3.0000, norm(x): 3.2401, norm(y): 1.0034, norm:62.2332, tok/sec: 104342.80, flops:109.51, batch-reuse:1
@ 955 train 6.2958 , allloss: 83.1182, dt: 1251.31ms, fracRes: 0.1049, norm(attn): 0.2539, norm(output): 3.2188, norm(x): 3.4248, norm(y): 1.0032, norm:67.2807, tok/sec: 104748.15, flops:109.94, batch-reuse:1
@ 956 train 6.2591 , allloss: 95.6957, dt: 1248.38ms, fracRes: 0.1051, norm(attn): 0.2754, norm(output): 3.3594, norm(x): 3.6190, norm(y): 1.0028, norm:60.4972, tok/sec: 104993.32, flops:110.19, batch-reuse:1
@ 957 train 6.2973 , allloss: 102.4047, dt: 1271.33ms, fracRes: 0.1069, norm(attn): 0.2910, norm(output): 3.5000, norm(x): 3.7055, norm(y): 1.0023, norm:63.1232, tok/sec: 103098.73, flops:108.20, batch-reuse:1
@ 958 train 6.3104 , allloss: 113.1256, dt: 1244.96ms, fracRes: 0.1070, norm(attn): 0.2988, norm(output): 3.5312, norm(x): 3.7583, norm(y): 1.0024, norm:79.6270, tok/sec: 105282.13, flops:110.50, batch-reuse:1
@ 959 train 6.1932 , allloss: 133.3007, dt: 1242.27ms, fracRes: 0.1059, norm(attn): 0.3086, norm(output): 3.7344, norm(x): 3.9255, norm(y): 1.0024, norm:110.4354, tok/sec: 105509.87, flops:110.73, batch-reuse:1
@ 960 train 6.3593 , allloss: 160.8827, dt: 1232.15ms, fracRes: 0.1047, norm(attn): 0.3184, norm(output): 3.9375, norm(x): 4.1063, norm(y): 1.0028, norm:186.4037, tok/sec: 106377.02, flops:111.64, batch-reuse:1
@ 961 train 6.3328 , allloss: 222.7718, dt: 1243.82ms, fracRes: 0.1025, norm(attn): 0.3301, norm(output): 4.0312, norm(x): 4.1726, norm(y): 1.0029, norm:220.2680, tok/sec: 105378.39, flops:110.60, batch-reuse:1
@ 962 train 6.3393 , allloss: 249.4074, dt: 1245.88ms, fracRes: 0.1018, norm(attn): 0.3340, norm(output): 3.9844, norm(x): 4.0820, norm(y): 1.0030, norm:249.6783, tok/sec: 105204.71, flops:110.41, batch-reuse:1
@ 963 train 6.3698 , allloss: 244.9922, dt: 1267.38ms, fracRes: 0.1010, norm(attn): 0.3379, norm(output): 3.9688, norm(x): 4.0144, norm(y): 1.0029, norm:586.5872, tok/sec: 103419.65, flops:108.54, batch-reuse:1
@ 964 train 6.3875 , allloss: 258.1346, dt: 1255.45ms, fracRes: 0.1000, norm(attn): 0.3301, norm(output): 3.8438, norm(x): 3.9176, norm(y): 1.0027, norm:867.1875, tok/sec: 104402.76, flops:109.57, batch-reuse:1
@ 965 train 6.4507 , allloss: 219.2258, dt: 1259.54ms, fracRes: 0.0998, norm(attn): 0.3242, norm(output): 3.7500, norm(x): 3.8093, norm(y): 1.0026, norm:653.5701, tok/sec: 104063.40, flops:109.22, batch-reuse:1
@ 966 train 6.4686 , allloss: 153.1320, dt: 1238.65ms, fracRes: 0.0993, norm(attn): 0.3184, norm(output): 3.5781, norm(x): 3.6916, norm(y): 1.0024, norm:295.8334, tok/sec: 105818.61, flops:111.06, batch-reuse:1
@ 967 train 6.4608 , allloss: 180.7060, dt: 1255.48ms, fracRes: 0.0979, norm(attn): 0.3125, norm(output): 3.5781, norm(x): 3.6952, norm(y): 1.0025, norm:323.5515, tok/sec: 104399.97, flops:109.57, batch-reuse:1
@ 968 train 6.4857 , allloss: 192.7213, dt: 1243.59ms, fracRes: 0.0989, norm(attn): 0.3027, norm(output): 3.4844, norm(x): 3.6066, norm(y): 1.0028, norm:225.7108, tok/sec: 105398.42, flops:110.62, batch-reuse:1
@ 969 train 6.3867 , allloss: 199.3113, dt: 1266.20ms, fracRes: 0.1002, norm(attn): 0.2969, norm(output): 3.4375, norm(x): 3.5502, norm(y): 1.0033, norm:184.6794, tok/sec: 103515.83, flops:108.64, batch-reuse:1
@ 970 train 6.3679 , allloss: 188.4771, dt: 1262.49ms, fracRes: 0.1006, norm(attn): 0.2969, norm(output): 3.4531, norm(x): 3.5603, norm(y): 1.0035, norm:206.6560, tok/sec: 103820.32, flops:108.96, batch-reuse:1
@ 971 train 6.4026 , allloss: 160.2134, dt: 1234.73ms, fracRes: 0.1009, norm(attn): 0.2891, norm(output): 3.4375, norm(x): 3.5283, norm(y): 1.0034, norm:198.4896, tok/sec: 106154.40, flops:111.41, batch-reuse:1
@ 972 train 6.3766 , allloss: 148.0764, dt: 1260.02ms, fracRes: 0.1010, norm(attn): 0.2871, norm(output): 3.4531, norm(x): 3.5352, norm(y): 1.0033, norm:204.8469, tok/sec: 104023.98, flops:109.18, batch-reuse:1
@ 973 train 6.3527 , allloss: 141.5683, dt: 1238.44ms, fracRes: 0.1010, norm(attn): 0.2793, norm(output): 3.5000, norm(x): 3.5868, norm(y): 1.0033, norm:204.4380, tok/sec: 105836.47, flops:111.08, batch-reuse:1
@ 974 train 6.3740 , allloss: 126.1672, dt: 1247.21ms, fracRes: 0.1022, norm(attn): 0.2676, norm(output): 3.5000, norm(x): 3.6173, norm(y): 1.0034, norm:182.7475, tok/sec: 105092.34, flops:110.30, batch-reuse:1
@ 975 train 6.3663 , allloss: 115.9117, dt: 1248.01ms, fracRes: 0.1009, norm(attn): 0.2500, norm(output): 3.5156, norm(x): 3.6717, norm(y): 1.0035, norm:152.0027, tok/sec: 105024.73, flops:110.23, batch-reuse:1
@ 976 train 6.2640 , allloss: 104.9694, dt: 1233.60ms, fracRes: 0.1040, norm(attn): 0.2393, norm(output): 3.5156, norm(x): 3.6327, norm(y): 1.0035, norm:137.5627, tok/sec: 106251.79, flops:111.51, batch-reuse:1
@ 977 train 6.2495 , allloss: 94.9064, dt: 1233.59ms, fracRes: 0.1036, norm(attn): 0.2383, norm(output): 3.5156, norm(x): 3.6008, norm(y): 1.0034, norm:123.1525, tok/sec: 106252.10, flops:111.51, batch-reuse:1
@ 978 train 6.2571 , allloss: 88.5872, dt: 1233.68ms, fracRes: 0.1038, norm(attn): 0.2383, norm(output): 3.4375, norm(x): 3.5299, norm(y): 1.0035, norm:115.6017, tok/sec: 106244.73, flops:111.51, batch-reuse:1
@ 979 train 6.1947 , allloss: 82.2587, dt: 1254.96ms, fracRes: 0.1037, norm(attn): 0.2461, norm(output): 3.3594, norm(x): 3.4880, norm(y): 1.0035, norm:82.5158, tok/sec: 104443.26, flops:109.62, batch-reuse:1
@ 980 train 6.1326 , allloss: 74.4935, dt: 1236.27ms, fracRes: 0.1052, norm(attn): 0.2500, norm(output): 3.2969, norm(x): 3.4493, norm(y): 1.0034, norm:71.2564, tok/sec: 106022.54, flops:111.27, batch-reuse:1
@ 981 train 6.1448 , allloss: 75.5176, dt: 1251.67ms, fracRes: 0.1076, norm(attn): 0.2559, norm(output): 3.3438, norm(x): 3.4922, norm(y): 1.0035, norm:73.6267, tok/sec: 104717.63, flops:109.90, batch-reuse:1
@ 982 train 6.1425 , allloss: 69.1663, dt: 1254.71ms, fracRes: 0.1089, norm(attn): 0.2520, norm(output): 3.4062, norm(x): 3.5435, norm(y): 1.0034, norm:72.4819, tok/sec: 104464.38, flops:109.64, batch-reuse:1
@ 983 train 6.2374 , allloss: 70.0219, dt: 1237.18ms, fracRes: 0.1115, norm(attn): 0.2578, norm(output): 3.3281, norm(x): 3.5344, norm(y): 1.0034, norm:73.1478, tok/sec: 105944.18, flops:111.19, batch-reuse:1
@ 984 train 6.1629 , allloss: 70.2491, dt: 1241.12ms, fracRes: 0.1124, norm(attn): 0.2637, norm(output): 3.2969, norm(x): 3.4847, norm(y): 1.0033, norm:53.2415, tok/sec: 105607.57, flops:110.84, batch-reuse:1
@ 985 train 6.1391 , allloss: 66.6021, dt: 1256.28ms, fracRes: 0.1122, norm(attn): 0.2656, norm(output): 3.3125, norm(x): 3.5129, norm(y): 1.0034, norm:66.0281, tok/sec: 104333.59, flops:109.50, batch-reuse:1
@ 986 train 6.2101 , allloss: 63.4299, dt: 1268.59ms, fracRes: 0.1122, norm(attn): 0.2656, norm(output): 3.3906, norm(x): 3.5571, norm(y): 1.0034, norm:64.9698, tok/sec: 103320.88, flops:108.44, batch-reuse:1
@ 987 train 6.1330 , allloss: 60.2225, dt: 1253.67ms, fracRes: 0.1082, norm(attn): 0.2598, norm(output): 3.4688, norm(x): 3.5765, norm(y): 1.0035, norm:49.1617, tok/sec: 104550.96, flops:109.73, batch-reuse:1
@ 988 train 6.2615 , allloss: 60.5456, dt: 1261.62ms, fracRes: 0.1060, norm(attn): 0.2520, norm(output): 3.4844, norm(x): 3.5865, norm(y): 1.0034, norm:59.1926, tok/sec: 103891.43, flops:109.04, batch-reuse:1
@ 989 train 6.2935 , allloss: 57.7838, dt: 1237.09ms, fracRes: 0.1044, norm(attn): 0.2500, norm(output): 3.5312, norm(x): 3.6288, norm(y): 1.0031, norm:60.4760, tok/sec: 105951.76, flops:111.20, batch-reuse:1
@ 990 train 6.1480 , allloss: 56.7348, dt: 1248.96ms, fracRes: 0.1017, norm(attn): 0.2500, norm(output): 3.5312, norm(x): 3.6444, norm(y): 1.0029, norm:56.2661, tok/sec: 104945.01, flops:110.14, batch-reuse:1
@ 991 train 6.1786 , allloss: 55.3075, dt: 1264.87ms, fracRes: 0.1020, norm(attn): 0.2500, norm(output): 3.6250, norm(x): 3.7599, norm(y): 1.0030, norm:56.5349, tok/sec: 103624.83, flops:108.76, batch-reuse:1
@ 992 train 6.2448 , allloss: 51.2505, dt: 1255.27ms, fracRes: 0.1028, norm(attn): 0.2490, norm(output): 3.6250, norm(x): 3.7749, norm(y): 1.0031, norm:51.5491, tok/sec: 104417.06, flops:109.59, batch-reuse:1
@ 993 train 6.1212 , allloss: 49.8003, dt: 1251.74ms, fracRes: 0.1025, norm(attn): 0.2441, norm(output): 3.5625, norm(x): 3.7182, norm(y): 1.0031, norm:51.2922, tok/sec: 104711.78, flops:109.90, batch-reuse:1
@ 994 train 6.1994 , allloss: 52.4398, dt: 1253.25ms, fracRes: 0.1075, norm(attn): 0.2461, norm(output): 3.5156, norm(x): 3.6852, norm(y): 1.0034, norm:61.1468, tok/sec: 104585.59, flops:109.76, batch-reuse:1
@ 995 train 6.1749 , allloss: 55.3505, dt: 1258.42ms, fracRes: 0.1138, norm(attn): 0.2461, norm(output): 3.4844, norm(x): 3.6533, norm(y): 1.0035, norm:50.3381, tok/sec: 104156.05, flops:109.31, batch-reuse:1
@ 996 train 6.0440 , allloss: 57.0671, dt: 1250.54ms, fracRes: 0.1178, norm(attn): 0.2432, norm(output): 3.4844, norm(x): 3.6544, norm(y): 1.0034, norm:51.9905, tok/sec: 104812.32, flops:110.00, batch-reuse:1
@ 997 train 6.1382 , allloss: 57.4925, dt: 1244.07ms, fracRes: 0.1197, norm(attn): 0.2422, norm(output): 3.4688, norm(x): 3.6506, norm(y): 1.0034, norm:54.7838, tok/sec: 105357.45, flops:110.57, batch-reuse:1
@ 998 train 6.2841 , allloss: 57.5872, dt: 1234.54ms, fracRes: 0.1221, norm(attn): 0.2383, norm(output): 3.5156, norm(x): 3.7026, norm(y): 1.0034, norm:48.8837, tok/sec: 106170.91, flops:111.43, batch-reuse:1
@ 999 train 6.1392 , allloss: 56.6363, dt: 1251.31ms, fracRes: 0.1244, norm(attn): 0.2373, norm(output): 3.5000, norm(x): 3.6488, norm(y): 1.0033, norm:47.3855, tok/sec: 104748.01, flops:109.93, batch-reuse:1
@ 1000 train 6.2052 , allloss: 54.2291, dt: 1276.14ms, fracRes: 0.1263, norm(attn): 0.2344, norm(output): 3.5312, norm(x): 3.7041, norm(y): 1.0035, norm:39.6536, tok/sec: 102710.06, flops:107.80, batch-reuse:1
@ 1001 train 6.2345 , allloss: 51.0773, dt: 1271.00ms, fracRes: 0.1273, norm(attn): 0.2305, norm(output): 3.5781, norm(x): 3.7865, norm(y): 1.0033, norm:38.1161, tok/sec: 103124.78, flops:108.23, batch-reuse:1
@ 1002 train 6.0906 , allloss: 51.5271, dt: 1235.65ms, fracRes: 0.1328, norm(attn): 0.2324, norm(output): 3.7188, norm(x): 3.8440, norm(y): 1.0031, norm:38.3205, tok/sec: 106075.18, flops:111.33, batch-reuse:1
@ 1003 train 6.2330 , allloss: 50.5033, dt: 1238.35ms, fracRes: 0.1300, norm(attn): 0.2266, norm(output): 3.7500, norm(x): 3.8969, norm(y): 1.0033, norm:37.5947, tok/sec: 105844.07, flops:111.09, batch-reuse:1
@ 1004 train 6.0841 , allloss: 49.7885, dt: 1237.68ms, fracRes: 0.1310, norm(attn): 0.2275, norm(output): 3.7656, norm(x): 3.8962, norm(y): 1.0031, norm:36.9927, tok/sec: 105901.10, flops:111.15, batch-reuse:1
@ 1005 train 6.1713 , allloss: 49.5513, dt: 1243.55ms, fracRes: 0.1305, norm(attn): 0.2285, norm(output): 3.7969, norm(x): 3.9467, norm(y): 1.0032, norm:37.0115, tok/sec: 105401.63, flops:110.62, batch-reuse:1
@ 1006 train 6.1759 , allloss: 48.0270, dt: 1251.15ms, fracRes: 0.1292, norm(attn): 0.2246, norm(output): 3.8281, norm(x): 3.9960, norm(y): 1.0034, norm:36.0908, tok/sec: 104761.37, flops:109.95, batch-reuse:1
@ 1007 train 6.1546 , allloss: 43.4870, dt: 1257.82ms, fracRes: 0.1295, norm(attn): 0.2178, norm(output): 3.8750, norm(x): 4.0354, norm(y): 1.0035, norm:32.0838, tok/sec: 104205.96, flops:109.37, batch-reuse:1
@ 1008 train 6.1753 , allloss: 44.2246, dt: 1241.21ms, fracRes: 0.1311, norm(attn): 0.2168, norm(output): 3.8438, norm(x): 4.0018, norm(y): 1.0033, norm:30.9029, tok/sec: 105600.40, flops:110.83, batch-reuse:1
@ 1009 train 6.1655 , allloss: 44.8850, dt: 1248.78ms, fracRes: 0.1317, norm(attn): 0.2188, norm(output): 3.7812, norm(x): 3.9840, norm(y): 1.0033, norm:31.8436, tok/sec: 104959.70, flops:110.16, batch-reuse:1
@ 1010 train 6.2670 , allloss: 44.8883, dt: 1241.92ms, fracRes: 0.1329, norm(attn): 0.2168, norm(output): 3.8281, norm(x): 4.0136, norm(y): 1.0034, norm:32.6367, tok/sec: 105539.69, flops:110.77, batch-reuse:1
@ 1011 train 6.1375 , allloss: 57.9196, dt: 1265.01ms, fracRes: 0.1357, norm(attn): 0.2158, norm(output): 3.8594, norm(x): 4.0154, norm(y): 1.0032, norm:67.0369, tok/sec: 103613.69, flops:108.74, batch-reuse:1
@ 1012 train 6.2353 , allloss: 56.3381, dt: 1256.50ms, fracRes: 0.1425, norm(attn): 0.2139, norm(output): 3.9062, norm(x): 4.0367, norm(y): 1.0032, norm:53.6565, tok/sec: 104315.14, flops:109.48, batch-reuse:1
@ 1013 train 6.2198 , allloss: 57.8610, dt: 1238.61ms, fracRes: 0.1683, norm(attn): 0.2051, norm(output): 3.8594, norm(x): 3.9610, norm(y): 1.0031, norm:54.7037, tok/sec: 105822.01, flops:111.06, batch-reuse:1
@ 1014 train 6.1100 , allloss: 45.8957, dt: 1255.46ms, fracRes: 0.1336, norm(attn): 0.2100, norm(output): 3.9844, norm(x): 4.1276, norm(y): 1.0030, norm:39.0225, tok/sec: 104401.69, flops:109.57, batch-reuse:1
@ 1015 train 6.1844 , allloss: 50.3079, dt: 1286.49ms, fracRes: 0.1305, norm(attn): 0.2090, norm(output): 4.0000, norm(x): 4.1539, norm(y): 1.0031, norm:66.0386, tok/sec: 101883.55, flops:106.93, batch-reuse:1
@ 1016 train 6.2510 , allloss: 54.7864, dt: 1238.84ms, fracRes: 0.1292, norm(attn): 0.2051, norm(output): 4.0000, norm(x): 4.2131, norm(y): 1.0030, norm:81.2413, tok/sec: 105802.30, flops:111.04, batch-reuse:1
@ 1017 train 6.1363 , allloss: 55.6649, dt: 1235.60ms, fracRes: 0.1294, norm(attn): 0.2051, norm(output): 4.0312, norm(x): 4.2284, norm(y): 1.0030, norm:59.0429, tok/sec: 106079.88, flops:111.33, batch-reuse:1
@ 1018 train 6.2249 , allloss: 58.0831, dt: 1263.36ms, fracRes: 0.1292, norm(attn): 0.2041, norm(output): 4.0312, norm(x): 4.2219, norm(y): 1.0031, norm:82.3182, tok/sec: 103748.81, flops:108.89, batch-reuse:1
@ 1019 train 6.2408 , allloss: 57.0044, dt: 1252.25ms, fracRes: 0.1295, norm(attn): 0.1992, norm(output): 4.0938, norm(x): 4.2809, norm(y): 1.0032, norm:73.0506, tok/sec: 104669.06, flops:109.85, batch-reuse:1
@ 1020 train 6.1573 , allloss: 47.1440, dt: 1247.00ms, fracRes: 0.1310, norm(attn): 0.2002, norm(output): 4.1562, norm(x): 4.3183, norm(y): 1.0033, norm:40.7071, tok/sec: 105109.93, flops:110.31, batch-reuse:1
@ 1021 train 6.1430 , allloss: 45.2396, dt: 1249.08ms, fracRes: 0.1317, norm(attn): 0.2041, norm(output): 4.1250, norm(x): 4.3085, norm(y): 1.0033, norm:32.6676, tok/sec: 104934.48, flops:110.13, batch-reuse:1
@ 1022 train 6.0950 , allloss: 49.1455, dt: 1245.73ms, fracRes: 0.1311, norm(attn): 0.2021, norm(output): 4.1875, norm(x): 4.3961, norm(y): 1.0032, norm:49.7724, tok/sec: 105217.13, flops:110.43, batch-reuse:1
@ 1023 train 6.1500 , allloss: 50.9919, dt: 1239.41ms, fracRes: 0.1315, norm(attn): 0.2051, norm(output): 4.1875, norm(x): 4.4110, norm(y): 1.0033, norm:45.7145, tok/sec: 105753.94, flops:110.99, batch-reuse:1
@ 1024 train 6.1075 , allloss: 47.1899, dt: 1247.97ms, fracRes: 0.1323, norm(attn): 0.2129, norm(output): 4.2188, norm(x): 4.4322, norm(y): 1.0035, norm:45.9636, tok/sec: 105028.14, flops:110.23, batch-reuse:1
@ 1025 train 6.1439 , allloss: 44.0218, dt: 1249.72ms, fracRes: 0.1326, norm(attn): 0.2168, norm(output): 4.2188, norm(x): 4.4363, norm(y): 1.0037, norm:38.4000, tok/sec: 104881.41, flops:110.07, batch-reuse:1
@ 1026 train 6.1964 , allloss: 46.3548, dt: 1247.25ms, fracRes: 0.1321, norm(attn): 0.2207, norm(output): 4.1875, norm(x): 4.4170, norm(y): 1.0038, norm:41.0199, tok/sec: 105088.85, flops:110.29, batch-reuse:1
@ 1027 train 6.1448 , allloss: 46.1430, dt: 1257.11ms, fracRes: 0.1322, norm(attn): 0.2305, norm(output): 4.2188, norm(x): 4.4600, norm(y): 1.0038, norm:36.4963, tok/sec: 104264.34, flops:109.43, batch-reuse:1
@ 1028 train 6.1148 , allloss: 46.2852, dt: 1269.51ms, fracRes: 0.1345, norm(attn): 0.2344, norm(output): 4.2500, norm(x): 4.5083, norm(y): 1.0038, norm:38.3709, tok/sec: 103245.76, flops:108.36, batch-reuse:1
@ 1029 train 6.1061 , allloss: 46.7133, dt: 1253.32ms, fracRes: 0.1354, norm(attn): 0.2344, norm(output): 4.2812, norm(x): 4.5241, norm(y): 1.0038, norm:38.0655, tok/sec: 104579.76, flops:109.76, batch-reuse:1
@ 1030 train 6.1569 , allloss: 49.6899, dt: 1265.94ms, fracRes: 0.1346, norm(attn): 0.2354, norm(output): 4.2500, norm(x): 4.5061, norm(y): 1.0041, norm:43.4448, tok/sec: 103537.67, flops:108.66, batch-reuse:1
@ 1031 train 6.1749 , allloss: 49.3403, dt: 1262.65ms, fracRes: 0.1342, norm(attn): 0.2334, norm(output): 4.2500, norm(x): 4.5280, norm(y): 1.0039, norm:46.5860, tok/sec: 103807.13, flops:108.95, batch-reuse:1
@ 1032 train 6.1076 , allloss: 46.0943, dt: 1236.15ms, fracRes: 0.1346, norm(attn): 0.2344, norm(output): 4.2812, norm(x): 4.5532, norm(y): 1.0038, norm:42.5585, tok/sec: 106032.27, flops:111.28, batch-reuse:1
@ 1033 train 6.1033 , allloss: 44.7520, dt: 1245.60ms, fracRes: 0.1345, norm(attn): 0.2363, norm(output): 4.2812, norm(x): 4.6107, norm(y): 1.0039, norm:38.7630, tok/sec: 105228.27, flops:110.44, batch-reuse:1
@ 1034 train 6.0791 , allloss: 43.9393, dt: 1276.13ms, fracRes: 0.1355, norm(attn): 0.2402, norm(output): 4.2812, norm(x): 4.5898, norm(y): 1.0042, norm:43.7034, tok/sec: 102710.91, flops:107.80, batch-reuse:1
@ 1035 train 6.1445 , allloss: 46.4387, dt: 1257.69ms, fracRes: 0.1369, norm(attn): 0.2402, norm(output): 4.3125, norm(x): 4.6172, norm(y): 1.0042, norm:48.2484, tok/sec: 104216.66, flops:109.38, batch-reuse:1
@ 1036 train 6.1698 , allloss: 48.4121, dt: 1256.01ms, fracRes: 0.1389, norm(attn): 0.2422, norm(output): 4.2812, norm(x): 4.6018, norm(y): 1.0040, norm:43.6463, tok/sec: 104355.65, flops:109.52, batch-reuse:1
@ 1037 train 6.1659 , allloss: 49.1951, dt: 1259.33ms, fracRes: 0.1430, norm(attn): 0.2393, norm(output): 4.3125, norm(x): 4.6078, norm(y): 1.0041, norm:44.3094, tok/sec: 104080.96, flops:109.23, batch-reuse:1
@ 1038 train 6.0960 , allloss: 47.9957, dt: 1249.74ms, fracRes: 0.1469, norm(attn): 0.2500, norm(output): 4.2500, norm(x): 4.5558, norm(y): 1.0041, norm:46.1998, tok/sec: 104879.54, flops:110.07, batch-reuse:1
@ 1039 train 6.1118 , allloss: 42.4391, dt: 1255.37ms, fracRes: 0.1392, norm(attn): 0.2520, norm(output): 4.2812, norm(x): 4.5241, norm(y): 1.0041, norm:45.4758, tok/sec: 104408.85, flops:109.58, batch-reuse:1
@ 1040 train 6.0091 , allloss: 41.5409, dt: 1252.97ms, fracRes: 0.1361, norm(attn): 0.2539, norm(output): 4.2812, norm(x): 4.5022, norm(y): 1.0039, norm:40.9987, tok/sec: 104609.11, flops:109.79, batch-reuse:1
@ 1041 train 6.0987 , allloss: 40.7180, dt: 1252.76ms, fracRes: 0.1375, norm(attn): 0.2637, norm(output): 4.2500, norm(x): 4.4600, norm(y): 1.0036, norm:40.5735, tok/sec: 104626.91, flops:109.81, batch-reuse:1
@ 1042 train 6.0801 , allloss: 40.2655, dt: 1282.15ms, fracRes: 0.1366, norm(attn): 0.2656, norm(output): 4.2500, norm(x): 4.4288, norm(y): 1.0036, norm:47.8971, tok/sec: 102228.61, flops:107.29, batch-reuse:1
@ 1043 train 6.1552 , allloss: 42.6396, dt: 1262.17ms, fracRes: 0.1360, norm(attn): 0.2656, norm(output): 4.2500, norm(x): 4.4020, norm(y): 1.0039, norm:59.3269, tok/sec: 103846.70, flops:108.99, batch-reuse:1
@ 1044 train 6.1907 , allloss: 47.0233, dt: 1249.03ms, fracRes: 0.1379, norm(attn): 0.2656, norm(output): 4.2500, norm(x): 4.4401, norm(y): 1.0044, norm:59.4090, tok/sec: 104939.12, flops:110.14, batch-reuse:1
@ 1045 train 6.2343 , allloss: 48.3666, dt: 1248.49ms, fracRes: 0.1382, norm(attn): 0.2773, norm(output): 4.2188, norm(x): 4.3854, norm(y): 1.0046, norm:48.0665, tok/sec: 104984.31, flops:110.18, batch-reuse:1
@ 1046 train 6.1745 , allloss: 57.9426, dt: 1264.39ms, fracRes: 0.1704, norm(attn): 0.2656, norm(output): 4.0938, norm(x): 4.1780, norm(y): 1.0051, norm:98.0835, tok/sec: 103664.14, flops:108.80, batch-reuse:1
@ 1047 train 6.1511 , allloss: 61.3905, dt: 1262.05ms, fracRes: 0.1368, norm(attn): 0.2676, norm(output): 4.2500, norm(x): 4.4047, norm(y): 1.0033, norm:127.3786, tok/sec: 103856.47, flops:109.00, batch-reuse:1
@ 1048 train 6.1543 , allloss: 57.0304, dt: 1265.37ms, fracRes: 0.1367, norm(attn): 0.2812, norm(output): 4.1875, norm(x): 4.3335, norm(y): 1.0030, norm:64.8542, tok/sec: 103584.33, flops:108.71, batch-reuse:1
@ 1049 train 6.1281 , allloss: 51.8059, dt: 1252.59ms, fracRes: 0.1366, norm(attn): 0.2910, norm(output): 4.1875, norm(x): 4.3028, norm(y): 1.0029, norm:71.1924, tok/sec: 104640.89, flops:109.82, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9805,     0.0179,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9766,     0.0192,     0.0025,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9297,     0.0187,     0.0011,     0.0498,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8281,     0.0038,     0.0227,     0.1187,     0.0256,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5781,     0.0140,     0.0109,     0.0806,     0.3008,     0.0167,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3398,     0.0825,     0.0142,     0.1650,     0.2676,     0.1001,     0.0299,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1289,     0.3164,     0.0002,     0.0527,     0.1309,     0.3691,     0.0013,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0381,     0.0195,     0.1465,     0.0204,     0.0090,     0.0038,     0.2324,     0.5273,     0.0040,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1465,     0.2344,     0.0106,     0.0947,     0.0581,     0.0276,     0.1309,     0.0112,     0.1885,     0.0967,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0222,     0.0006,     0.2988,     0.0240,     0.0092,     0.0137,     0.0061,     0.6016,     0.0049,     0.0205,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0081,     0.3086,     0.0008,     0.0067,     0.0098,     0.0566,     0.0020,     0.0003,     0.0437,     0.0010,     0.5625,     0.0003,     0.0000,     0.0000,     0.0000],
        [    0.0089,     0.0171,     0.0001,     0.0034,     0.0359,     0.0442,     0.0009,     0.0001,     0.0767,     0.0014,     0.8125,     0.0003,     0.0001,     0.0000,     0.0000],
        [    0.0222,     0.0022,     0.0193,     0.0104,     0.0096,     0.0032,     0.1226,     0.0981,     0.0053,     0.1035,     0.0009,     0.4863,     0.1079,     0.0094,     0.0000],
        [    0.0913,     0.0464,     0.0311,     0.0830,     0.0527,     0.1157,     0.1035,     0.0430,     0.0806,     0.0486,     0.0337,     0.0698,     0.0386,     0.0776,     0.0840]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0095, -0.0113,  0.0157,  ..., -0.0457,  0.0057, -0.0300],
        [-0.0173, -0.0144,  0.0057,  ..., -0.0103,  0.0211,  0.0178],
        [-0.0029,  0.0065,  0.0019,  ..., -0.0046,  0.0124,  0.0380],
        ...,
        [-0.0234,  0.0448, -0.0155,  ..., -0.0167, -0.0030,  0.0063],
        [ 0.0365,  0.0454, -0.0095,  ..., -0.0031, -0.0033,  0.0291],
        [ 0.0027, -0.0144,  0.0160,  ...,  0.0107,  0.0214, -0.0095]], device='cuda:0', requires_grad=True)
K: tensor([-0.3379, -0.7070,  1.4062,  0.5234, -0.6914, -0.6289,  0.9570, -0.8828, -0.1099, -0.4824, -0.1514,  0.5977, -0.0767,  0.5781,  0.2432, -0.0187, -0.1543,  0.0703, -0.9336,  0.5352, -0.7422, -1.0078, -0.3906, -0.4121, -0.5508,  0.3379, -0.4609, -1.2031, -0.4414, -0.7852,  0.1079,  0.6211,
        -0.8164, -0.9453,  0.2021, -0.2139, -0.8047, -0.3340,  0.2334,  0.0442,  0.8945,  0.6992,  0.0718, -0.4648, -0.9297, -0.0078,  0.1904, -0.2832,  0.1895,  0.3711,  0.7188, -0.2344, -0.2969, -0.5039, -0.7148, -0.2080, -0.7461, -0.3457,  0.7461,  0.2100,  0.1455,  0.1079, -0.7422,  0.8750],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0213,  0.0010, -0.0204,  ...,  0.0008, -0.0091,  0.0066],
        [ 0.0049, -0.0086, -0.0324,  ..., -0.0204, -0.0003,  0.0019],
        [ 0.0021, -0.0271, -0.0034,  ..., -0.0533, -0.0280,  0.0339],
        ...,
        [-0.0079,  0.0156, -0.0071,  ...,  0.0196,  0.0165, -0.0148],
        [-0.0396, -0.0395,  0.0119,  ...,  0.0228,  0.0291,  0.0161],
        [ 0.0320,  0.0084, -0.0157,  ..., -0.0148, -0.0033, -0.0175]], device='cuda:0', requires_grad=True)
Q: tensor([-0.6641, -0.2715, -1.7031,  0.0991,  0.0084,  0.6367, -0.4219,  0.1367, -0.1187, -0.5195,  0.1641,  0.3672, -0.1855,  0.1592,  1.0234, -1.0547, -0.2988, -0.3828,  0.2871,  0.1260,  0.5273, -0.4023, -0.9609, -0.4688, -0.8984, -1.0312,  0.2129,  0.0269, -0.6289,  0.0211, -1.0938,  0.0275,
         0.0728, -0.0859, -0.3242,  0.1934,  0.4941,  0.2871,  0.1406, -0.4336,  1.0156,  0.5938, -0.5664, -0.0850, -0.1582,  0.6484,  1.0234, -0.8828,  0.6914,  0.4980, -0.2520,  0.5039,  0.3535,  0.4375,  0.4414,  0.4199, -0.0239,  0.1152,  0.3203,  0.2412, -0.7305,  0.4707,  1.0234,  0.7930],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -4.0000,  2.4062, -0.0603,  2.0625, -0.2119,  0.9414,  0.3926, -0.1709,  0.3203, -1.4609,  0.4746,  0.2598,  0.3633,  0.0845],
        [ 0.0000, -3.9375, -5.9688, -0.7734,  0.6953, -0.1914, -0.7812, -4.0000,  2.1094, -1.0234,  1.1875, -2.2500, -3.5469,  1.2734,  0.2168],
        [ 0.0000, -3.9062, -6.7188, -2.9219,  1.6094, -1.3984, -1.9609, -4.3438,  2.2812, -0.8008,  0.9570, -1.5078, -3.9844,  1.5938, -0.3652],
        [ 0.0000, -5.3750, -3.5938, -1.9453, -3.4688, -3.6094, -0.3418, -0.1621, -0.6250,  1.3359, -2.8438,  2.8594, -1.1797, -0.1206,  1.5000],
        [ 0.0000, -3.7188, -3.9688, -1.9688, -0.6523, -3.5469, -0.2637, -1.3438, -0.4180,  0.6055, -1.2734,  0.7227, -1.8281,  0.0820,  0.5391],
        [ 0.0000, -1.4141, -3.1719, -0.7188, -0.2344, -1.2188, -2.4219, -1.3672,  0.8711, -0.3906, -0.7109,  0.7617, -1.4453,  0.4121,  0.5469],
        [ 0.0000,  0.8984, -6.2812, -0.8945,  0.0182,  1.0547, -4.5625, -6.1250,  2.6562, -2.4375,  4.5000, -3.4531, -5.8438,  1.7891, -0.5039],
        [ 0.0000, -0.6719,  1.3438, -0.6250, -1.4375, -2.3125,  1.8047,  2.6250, -2.2500,  1.0469, -2.9844,  3.5469,  2.7656, -1.2109,  0.8477],
        [ 0.0000,  0.4668, -2.6406, -0.4375, -0.9297, -1.6719, -0.1133, -2.5781,  0.2520, -0.4180,  1.0938, -0.5586, -1.1875,  0.1650,  0.7305],
        [ 0.0000, -3.5781,  2.5938,  0.0776, -0.8867, -0.4863, -1.2891,  3.2969, -1.5156, -0.0781, -4.1875,  3.1094,  0.9531,  0.0593,  0.6055],
        [ 0.0000,  3.6406, -2.2656, -0.1738,  0.2021,  1.9531, -1.3906, -3.4375,  1.6953, -2.0938,  4.2500, -3.2344, -2.9844,  0.6523,  0.2988],
        [ 0.0000,  0.6484, -4.2812, -0.9688,  1.3906,  1.6016, -2.2500, -5.1562,  2.1406, -1.8438,  4.5000, -3.3750, -4.9688,  1.4766, -0.0693],
        [ 0.0000, -2.2969, -0.1445, -0.7539, -0.8438, -1.9375,  1.7109,  1.4844, -1.4375,  1.5391, -3.1562,  3.0781,  1.5781, -0.8633,  0.6953],
        [ 0.0000, -0.6797, -1.0781, -0.0952, -0.5508,  0.2373,  0.1260, -0.7539, -0.1245, -0.6289, -0.9922, -0.2695, -0.8633, -0.1602, -0.0835]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9896],
        [0.9492],
        [0.9046],
        [0.9349],
        [0.8095],
        [0.5605],
        [0.3517],
        [0.1204],
        [0.1617],
        [0.0355],
        [0.0432],
        [0.0503],
        [0.0640],
        [0.0629]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9922, 0.0059, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9023, 0.0815, 0.0153, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1504, 0.7812, 0.0469, 0.0201, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0339, 0.9102, 0.0278, 0.0170, 0.0095, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0378, 0.8047, 0.0179, 0.0249, 0.0854, 0.0302, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0859, 0.6055, 0.0339, 0.0337, 0.0947, 0.1206, 0.0249, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1738, 0.2158, 0.0195, 0.0811, 0.1719, 0.2139, 0.0933, 0.0306, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0659, 0.4688, 0.1406, 0.0139, 0.0232, 0.1670, 0.0415, 0.0476, 0.0315, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0713, 0.3594, 0.1514, 0.0513, 0.0698, 0.1504, 0.0081, 0.0386, 0.0193, 0.0811, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0708, 0.0588, 0.0618, 0.2041, 0.1050, 0.0791, 0.0781, 0.0811, 0.0981, 0.1348, 0.0282, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0518, 0.4453, 0.0234, 0.0155, 0.0315, 0.0977, 0.0104, 0.0334, 0.0295, 0.0262, 0.2129, 0.0211, 0.0000, 0.0000, 0.0000],
        [0.0767, 0.1826, 0.0190, 0.0315, 0.1709, 0.0884, 0.0223, 0.0204, 0.0352, 0.0820, 0.2236, 0.0293, 0.0188, 0.0000, 0.0000],
        [0.0566, 0.2969, 0.0864, 0.0113, 0.0232, 0.1709, 0.0339, 0.0488, 0.0302, 0.0859, 0.0679, 0.0128, 0.0311, 0.0432, 0.0000],
        [0.0393, 0.6367, 0.0217, 0.0116, 0.0474, 0.0361, 0.0160, 0.0166, 0.0101, 0.0525, 0.0486, 0.0245, 0.0114, 0.0085, 0.0208]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0203,  0.0116,  0.0122,  ...,  0.0132,  0.0125, -0.0326],
        [ 0.0046, -0.0183, -0.0201,  ...,  0.0421,  0.0341, -0.0224],
        [-0.0102, -0.0059, -0.0026,  ...,  0.0287,  0.0097,  0.0123],
        ...,
        [-0.0146,  0.0161,  0.0027,  ...,  0.0183,  0.0008,  0.0139],
        [ 0.0107,  0.0090,  0.0235,  ..., -0.0220,  0.0097, -0.0046],
        [-0.0120,  0.0256, -0.0056,  ..., -0.0461,  0.0015,  0.0342]], device='cuda:0', requires_grad=True)
K: tensor([ 0.8281, -0.8398,  0.2080, -0.0845,  0.5078,  0.2969, -0.1167, -0.5820,  0.2910, -0.2539,  0.0593, -0.0713,  0.0334, -0.2275,  0.3398,  0.0488, -0.4844, -0.8281,  0.8164, -0.0562,  1.3438,  0.6289, -0.3008,  1.1562,  0.3750,  0.6836, -0.5156,  0.9102, -0.7031, -0.8125,  0.5117,  0.3223,
         0.4980, -0.8750, -0.8125,  0.7383, -0.1260,  0.1895, -0.0410,  0.2793,  0.5234, -0.6953,  0.3027, -0.6289, -0.6836,  0.3555, -0.8281,  0.3164, -0.1670, -0.3027,  0.6836, -0.4316, -1.3359, -0.2197,  0.2676, -0.2100, -0.9727,  0.2734,  0.4609,  0.5273, -0.4102,  0.4023, -0.5547,  0.8633],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0290,  0.0132,  0.0067,  ..., -0.0011, -0.0031,  0.0412],
        [-0.0245, -0.0245,  0.0222,  ...,  0.0097, -0.0055, -0.0029],
        [-0.0198, -0.0096, -0.0247,  ..., -0.0390, -0.0407,  0.0372],
        ...,
        [ 0.0022,  0.0122, -0.0073,  ..., -0.0105,  0.0095, -0.0155],
        [ 0.0017,  0.0088,  0.0105,  ...,  0.0421,  0.0080, -0.0624],
        [-0.0039, -0.0099,  0.0010,  ...,  0.0044,  0.0067,  0.0164]], device='cuda:0', requires_grad=True)
Q: tensor([-0.7344, -0.7422, -0.4102, -0.3633,  0.4395,  0.4531, -0.8359,  0.1426, -1.0781, -1.1250, -0.3047,  0.3730,  0.4395, -1.5703, -0.1992,  0.6367,  0.0845,  0.0457, -0.2012,  0.3281,  0.3730, -1.2031,  0.1084, -0.5469, -1.1953, -0.1621,  0.7500,  0.6172, -0.8867,  0.7227, -0.0579, -0.6367,
        -0.6523,  0.3125, -0.0022, -0.8008, -1.0938,  0.1084,  1.2109, -0.7812, -1.4062, -0.6875, -1.2969,  0.4902, -0.1904,  0.6953, -1.5078, -0.8516,  0.8750, -0.6641, -0.3418, -0.2334,  1.2109,  1.4609, -0.6797, -0.7422,  0.2314,  0.0991,  0.1289, -1.1172,  1.1172, -0.6719, -0.7188,  0.1050],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -5.1250,      1.6875,      0.2695,      2.3125,     -0.6641,      1.0859,     -1.4531,      1.3438,      0.1118,      0.6289,      0.4512,     -0.7383,      0.8828,      0.1035],
        [     0.0000,     -2.4062,     -4.0938,      1.1406,      2.6094,     -0.7891,     -0.1631,     -2.0625,      0.1973,      0.2676,      0.3398,      0.9844,     -2.0938,     -0.4707,     -0.3926],
        [     0.0000,      1.6484,     -1.1641,     -2.0156,     -2.5469,      0.7344,     -0.7539,     -0.4043,     -0.8359,     -0.9414,      1.6484,     -1.4141,     -0.8398,     -0.7617,      0.2520],
        [     0.0000,      3.2969,     -0.2012,     -0.6992,     -1.2734,     -0.1108,     -1.9531,     -0.0181,     -1.4531,      0.1348,      0.4551,     -1.7891,     -0.9258,     -1.5938,     -0.9492],
        [     0.0000,      3.0625,     -0.7383,     -0.4141,      0.8164,     -0.2256,     -1.7422,     -0.2695,     -1.0469,      0.3457,      0.6719,     -0.2715,     -0.5664,     -1.3750,     -0.1924],
        [     0.0000,      1.9531,     -0.9336,     -0.9414,      0.0952,      0.3379,     -1.2422,     -0.9531,     -1.2500,     -0.1060,      1.2031,     -1.0859,     -1.6250,     -1.2578,     -0.7695],
        [     0.0000,      0.2188,     -2.1875,     -0.7617,     -0.0131,      0.2090,     -0.6250,     -1.7344,     -0.5273,     -0.2695,      1.6172,     -0.7344,     -1.6875,     -1.0547,      0.0043],
        [     0.0000,      1.9531,      0.7578,     -1.5547,     -1.0469,      0.9297,     -0.4668,     -0.3281,     -0.7383,      0.3008,      0.4453,     -1.7266,     -0.5781,     -0.3652,     -0.3301],
        [     0.0000,      1.6172,      0.7578,     -0.3281,     -0.0198,      0.7461,     -2.1875,     -0.6133,     -1.3047,      0.1279,      0.6836,     -0.0080,     -1.7500,     -1.4531,     -0.3477],
        [     0.0000,     -0.1846,     -0.1338,      1.0625,      0.3945,      0.1147,      0.1021,      0.1387,      0.3262,      0.6445,     -0.9180,      0.6328,      0.1797,      0.1963,     -0.2266],
        [     0.0000,      2.1562,     -0.7969,     -1.2109,     -0.4980,      0.6328,     -1.6094,     -0.4414,     -0.5625,     -0.6797,      1.4141,     -0.9023,     -1.3281,     -0.9141,      0.1934],
        [     0.0000,      0.8633,     -1.3906,     -0.8906,      0.7969,      0.1377,     -1.2344,     -1.3281,     -0.7852,      0.0640,      1.0703,     -0.9609,     -1.4141,     -1.1172,     -0.4609],
        [     0.0000,      1.6641,      0.4258,     -1.6094,     -0.8945,      1.1016,     -0.5117,     -0.1465,     -0.6289,      0.4199,      0.1797,     -1.4844,     -0.5977,     -0.2695,     -0.0820],
        [     0.0000,      2.7812,     -0.5898,     -1.2188,      0.1895,     -0.0820,     -0.8945,     -0.8594,     -1.3516,      0.2930,      0.2148,     -0.4688,     -1.2344,     -1.5234,     -0.6367]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9870],
        [0.9316],
        [0.3458],
        [0.1686],
        [0.0889],
        [0.1208],
        [0.1435],
        [0.0710],
        [0.0902],
        [0.0617],
        [0.0771],
        [0.0856],
        [0.0524],
        [0.0619]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0009,     0.9961,     0.0000,     0.0011,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0041,     0.9922,     0.0000,     0.0036,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0021,     0.0000,     0.0000,     0.9961,     0.0006,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.1484,     0.0000,     0.0000,     0.0000,     0.8516,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0121,     0.0000,     0.0000,     0.3906,     0.0057,     0.0000,     0.0000,     0.5898,     0.0000,     0.0000,     0.0000,     0.0012,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0022, -0.0089, -0.0181,  ..., -0.0687,  0.0121, -0.0052],
        [-0.0177, -0.0073, -0.0111,  ..., -0.1138,  0.0254, -0.0548],
        [-0.0080, -0.0284, -0.0355,  ..., -0.0910, -0.0024, -0.0053],
        ...,
        [-0.0283, -0.0076, -0.0090,  ..., -0.0652, -0.0190, -0.0039],
        [ 0.0161,  0.0334,  0.0390,  ...,  0.0595,  0.0101,  0.0594],
        [-0.0239, -0.0264, -0.0205,  ..., -0.0606,  0.0145, -0.0476]], device='cuda:0', requires_grad=True)
K: tensor([ 0.2393, -0.3379, -0.9453, -1.2969,  0.7891, -1.9609, -0.4824,  0.4434, -0.0081, -0.5430,  0.4238,  0.5352, -1.6172,  0.2295, -1.3047,  0.9375, -0.0126, -0.7734, -0.0312,  0.5781,  1.5703, -0.0339, -1.0781, -0.1895, -0.0270,  1.0625,  0.0254,  1.6406, -0.1943,  0.8125, -0.8867,  0.9688,
         0.3340, -0.0903, -1.0156, -1.6016, -1.2422,  0.8594, -1.3125,  1.3438,  0.4844, -1.5781,  0.7891,  0.9688, -0.8125, -1.2734,  0.8398,  0.5039,  0.2012, -1.1328, -1.0547,  0.9922,  0.7383,  1.2891, -1.5625, -0.4199, -0.9297, -1.4844,  0.5586,  0.1426, -1.5625,  0.4492, -0.6641, -0.2754],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0016,  0.0113,  0.0316,  ...,  0.0774, -0.0111,  0.0148],
        [ 0.0270,  0.0092, -0.0030,  ...,  0.0544,  0.0002,  0.0018],
        [ 0.0173,  0.0163, -0.0247,  ...,  0.0656,  0.0116,  0.0697],
        ...,
        [ 0.0173,  0.0214, -0.0018,  ...,  0.0346,  0.0051,  0.0305],
        [-0.0489, -0.0142, -0.0172,  ..., -0.0175,  0.0144,  0.0010],
        [ 0.0310,  0.0223, -0.0011,  ...,  0.0344,  0.0082,  0.0520]], device='cuda:0', requires_grad=True)
Q: tensor([-0.9062,  1.2812,  0.5234,  1.3281, -0.2490, -0.2773,  1.4688,  0.0752,  1.3281,  0.8125, -1.1875, -0.9336,  0.9492,  1.6406,  1.4453, -0.7383, -0.4277,  0.8633,  0.1445, -0.4160, -0.1504,  0.3730,  2.2031,  1.3125,  2.5938, -1.4219,  1.4375, -1.2812,  0.1934,  0.4844,  1.6875, -1.7891,
         1.0156, -0.9258,  0.2539,  0.8047,  1.7188, -1.4453,  1.7891, -1.3672,  0.0659, -0.2041, -1.4062, -2.2500,  0.1367, -0.2910, -0.8086, -0.9141, -0.7578,  0.3320,  0.1006, -0.6211, -0.7344, -2.4219,  1.6016,  1.5547,  0.9570, -0.5234, -1.0703, -1.2500,  0.9492, -0.5391, -0.5859, -0.9297],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000, -40.5000,  34.2500,  -0.5391,  18.7500,  48.0000,  33.5000, -11.6875,  12.4375,  50.0000,  10.5625,  14.8750, -23.0000,  30.1250, -17.8750],
        [  0.0000,  18.3750, -14.9375,   0.9375,  -8.5625, -22.3750, -15.8750,   5.7812,  -5.6250, -23.3750,  -4.8125,  -6.1562,  11.3750, -13.9375,   9.4375],
        [  0.0000,   7.0625,  -5.8438,   0.2734,  -3.1250,  -7.1875,  -5.4062,   2.1094,  -2.4531,  -8.0000,  -1.6172,  -2.0156,   3.9531,  -5.2500,   3.6250],
        [  0.0000,   5.4688,  -4.6250,  -0.1377,  -3.1094,  -6.5312,  -3.8750,   1.4219,  -1.7031,  -6.5938,  -0.9648,  -2.4219,   2.9844,  -4.0938,   2.2344],
        [  0.0000,  35.5000, -30.6250,   0.8633, -16.3750, -42.2500, -30.0000,   9.9375, -11.0625, -44.2500,  -9.2500, -12.5000,  20.5000, -26.5000,  16.5000],
        [  0.0000,  26.0000, -21.3750,  -0.2812, -11.4375, -29.2500, -19.8750,   7.6250,  -8.6250, -31.2500,  -6.0625,  -8.8125,  14.5000, -19.3750,  11.6875],
        [  0.0000, -21.3750,  18.7500,  -0.3496,   9.6250,  25.0000,  17.5000,  -6.1875,   6.7500,  26.2500,   5.2188,   7.5625, -12.1875,  15.8125,  -9.6250],
        [  0.0000,  12.1250,  -9.6250,  -0.7734,  -5.9062, -14.4375, -10.1250,   3.3906,  -4.0312, -14.7500,  -2.6562,  -4.2500,   6.8438,  -9.1250,   5.4062],
        [  0.0000,  41.5000, -36.0000,   1.0078, -19.3750, -49.0000, -34.2500,  11.9375, -13.0000, -51.7500, -10.1250, -14.6875,  23.6250, -31.0000,  19.3750],
        [  0.0000,  13.1250, -10.5000,   0.3281,  -5.6250, -14.2500,  -9.6250,   4.0312,  -4.5000, -15.3125,  -3.5469,  -3.5625,   7.7188,  -9.8125,   5.5000],
        [  0.0000,  13.6875, -10.9375,   0.4199,  -7.1250, -15.6250, -11.4375,   4.2812,  -4.5000, -16.3750,  -3.2812,  -4.4062,   7.9375, -10.3750,   6.6875],
        [  0.0000, -30.7500,  26.3750,  -0.8867,  13.8125,  36.2500,  25.0000,  -8.8125,   9.7500,  38.0000,   7.3125,  10.6250, -17.5000,  22.8750, -14.0625],
        [  0.0000,  26.5000, -21.6250,  -0.6445, -12.4375, -30.8750, -21.5000,   7.5625,  -8.4375, -32.0000,  -6.0625,  -9.1875,  14.9375, -19.5000,  11.7500],
        [  0.0000, -11.1875,  10.5625,  -0.4590,   4.8438,  14.0000,   9.8125,  -2.5781,   3.2344,  14.4375,   2.5156,   4.7188,  -5.7500,   8.2500,  -5.1562]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.6556],
        [    0.3385],
        [    0.2043],
        [    0.1655],
        [    0.1583],
        [    0.1570],
        [    0.0000],
        [    0.0212],
        [    0.0001],
        [    0.0259],
        [    0.0202],
        [    0.0000],
        [    0.0000],
        [    0.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0075,     0.9922,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0121,     0.9883,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0076,     0.9922,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0859,     0.9062,     0.0043,     0.0001,     0.0049,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0042,     0.9961,     0.0000,     0.0000,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0231,     0.0742,     0.0967,     0.1162,     0.1846,     0.4727,     0.0342,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0449,     0.9062,     0.0106,     0.0002,     0.0393,     0.0001,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0359,     0.9531,     0.0059,     0.0000,     0.0065,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0007,     1.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0064,     0.9805,     0.0043,     0.0000,     0.0052,     0.0000,     0.0000,     0.0000,     0.0000,     0.0003,     0.0030,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0442,     0.9453,     0.0003,     0.0000,     0.0068,     0.0000,     0.0000,     0.0000,     0.0000,     0.0002,     0.0026,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0393,     0.9492,     0.0020,     0.0000,     0.0077,     0.0000,     0.0000,     0.0000,     0.0000,     0.0005,     0.0014,     0.0001,     0.0000,     0.0000,     0.0000],
        [    0.0229,     0.9648,     0.0029,     0.0000,     0.0037,     0.0000,     0.0000,     0.0000,     0.0000,     0.0004,     0.0043,     0.0002,     0.0001,     0.0000,     0.0000],
        [    0.0132,     0.9375,     0.0019,     0.0001,     0.0272,     0.0001,     0.0000,     0.0003,     0.0004,     0.0013,     0.0151,     0.0007,     0.0011,     0.0006,     0.0002]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0146, -0.0162, -0.0297,  ...,  0.0073, -0.0235,  0.0114],
        [-0.0013, -0.0340,  0.0116,  ..., -0.0163,  0.0391, -0.0225],
        [-0.0009,  0.0164,  0.0210,  ..., -0.0217,  0.0467, -0.0100],
        ...,
        [ 0.0100, -0.0199, -0.0432,  ..., -0.0032,  0.0308, -0.0131],
        [ 0.0203, -0.0239, -0.0412,  ...,  0.0090, -0.0218, -0.0198],
        [ 0.0170,  0.0064,  0.0203,  ..., -0.0324, -0.0010,  0.0595]], device='cuda:0', requires_grad=True)
K: tensor([ 0.7031, -1.8984,  1.2891, -1.8203, -0.8945,  1.6016,  2.7344, -0.9609,  0.4395,  0.9961,  2.5625, -0.6055, -1.5078,  0.5117,  1.7188, -0.8945, -1.6328,  1.6016, -1.2109,  1.3594,  0.7422,  1.9219,  1.2734, -2.4531,  1.2109, -0.6680,  0.7148,  1.6797, -0.1050, -2.2031,  1.1250, -1.4609,
         0.6523, -2.2344, -0.7148,  1.3203,  1.9844, -1.3984, -0.5156, -1.5625,  1.0547, -1.1484,  1.5156, -1.5625, -1.0234, -0.7695,  0.7500,  1.1484,  2.1719,  1.4062,  0.0309,  0.3887,  0.3555, -1.0625,  1.2500,  0.3730,  0.9531,  1.9609, -1.2031,  0.6719,  0.7188, -1.2500,  2.1875, -0.4062],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0405,  0.0201, -0.0203,  ..., -0.0191,  0.0118, -0.0321],
        [ 0.0404, -0.0130,  0.0147,  ...,  0.0216, -0.0242,  0.0440],
        [ 0.0211, -0.0136,  0.0084,  ...,  0.0675, -0.0196,  0.0104],
        ...,
        [ 0.0590, -0.0018,  0.0252,  ...,  0.0358, -0.0227,  0.0330],
        [ 0.0029,  0.0484, -0.0559,  ..., -0.0077, -0.0360, -0.0261],
        [-0.0424,  0.0224,  0.0081,  ..., -0.0363, -0.0194,  0.0052]], device='cuda:0', requires_grad=True)
Q: tensor([-2.3125, -0.7344, -0.5625,  1.5469,  0.3359,  0.5195,  1.5156,  0.7344, -0.8242, -0.2266, -0.8984, -0.1904, -0.2441, -0.5117, -0.3730,  0.2676,  1.5859, -1.4375,  0.2910, -1.0625,  2.2344, -0.9570, -0.0576,  1.4609, -0.7500,  1.4766,  0.2578,  0.7969,  1.1953, -0.3398, -0.9102,  0.1680,
        -0.0669, -0.3887,  0.7500, -0.9453, -2.2969,  1.5234, -0.2734, -0.9688, -1.4922,  0.0342, -0.1250,  0.5312,  1.9141, -0.8125, -2.1719, -1.0625,  0.3945, -0.8086, -1.0156, -0.2832, -0.0947,  0.5156, -1.4141, -1.9766, -0.6406, -1.2734, -1.6875,  0.2471, -0.3965,  0.3379, -0.8633, -1.4219],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000,   4.8750,  -4.6562,  -8.5000,  -3.2500, -11.3750, -11.8750,  -8.0625, -10.1250,  -5.0938,  -0.4395,  -5.2812,  -9.1250,  -9.6250,  -6.0312],
        [  0.0000,   4.4062,  -5.9062,  -8.9375,  -1.3203, -11.0000,  -9.3750,  -5.5000,  -7.7188,  -6.3125,   0.1250,  -4.8125,  -6.8125,  -7.5625,  -6.3750],
        [  0.0000,   4.8750,  -6.4688, -10.6250,  -1.3594, -12.6250, -11.4375,  -7.7812,  -9.0000,  -6.8125,  -0.4062,  -6.5000,  -7.9062,  -8.6875,  -7.8750],
        [  0.0000,   2.3594,  -3.0000,  -7.1250,  -2.8750, -11.1250, -10.9375,  -6.7500,  -9.5000,  -4.5625,  -2.1719,  -5.0000,  -6.1562,  -9.2500,  -4.9688],
        [  0.0000,   5.4688,  -5.8438,  -9.6875,  -2.1094, -13.6250, -11.8125,  -5.9375,  -9.0000,  -7.4062,   0.9844,  -4.8125,  -7.8125,  -8.8750,  -6.0000],
        [  0.0000,   1.1719,   1.4375,   1.6172,   2.0781,   3.0156,   0.3926,   0.7227,   2.5938,   0.9805,  -0.0649,   1.1406,   1.7266,   2.5156,   0.2832],
        [  0.0000,   3.0000,  -1.4453,  -5.3750,  -0.1338,  -6.4375,  -8.7500,  -6.5000,  -5.8438,  -2.0469,  -2.1562,  -4.3750,  -4.1562,  -5.3750,  -4.2812],
        [  0.0000,   3.2812,  -1.8047,  -6.9375,  -1.7031, -11.1250, -11.8750,  -6.2188,  -9.1875,  -3.8594,  -2.0156,  -4.7188,  -4.8125,  -8.8750,  -4.0625],
        [  0.0000,   7.3125,  -7.5000, -11.6875,  -1.8047, -13.6875, -12.6875,  -8.7500,  -9.0625,  -8.2500,   1.7734,  -6.5312, -10.5625,  -8.6250,  -8.7500],
        [  0.0000,   5.0312,  -0.4043,  -6.5625,  -0.2051,  -9.6250, -13.1250,  -7.2188,  -7.8125,  -3.0625,  -0.7617,  -5.0938,  -4.1562,  -7.3125,  -5.4062],
        [  0.0000,   3.0625,  -5.0000, -10.1250,  -1.8750, -12.1875, -12.8125, -10.1250, -10.3750,  -5.4375,  -2.8125,  -7.8125,  -7.7188,  -9.7500,  -8.5000],
        [  0.0000,   3.1875,  -2.9531,  -8.6875,  -1.6328, -11.8125, -13.0000,  -9.3750, -10.2500,  -4.3750,  -3.3281,  -6.6562,  -7.0000,  -9.7500,  -6.0312],
        [  0.0000,   3.7344,  -2.0781,  -7.2188,  -1.8203, -11.5000, -12.1250,  -6.4062,  -9.3750,  -4.1875,  -1.6719,  -4.7500,  -5.4062,  -9.1250,  -4.3125],
        [  0.0000,   4.2500,  -1.9609,  -4.8750,   0.7188,  -5.4062,  -7.1250,  -3.8438,  -3.3906,  -2.3281,   0.1309,  -2.9531,  -2.5000,  -3.1719,  -4.2812]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0159],
        [0.0260],
        [0.0146],
        [0.0326],
        [0.0076],
        [0.1158],
        [0.1181],
        [0.0356],
        [0.0026],
        [0.0087],
        [0.0661],
        [0.0576],
        [0.0214],
        [0.0508]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6875, 0.3145, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4902, 0.3223, 0.1875, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4180, 0.2227, 0.1748, 0.1846, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3203, 0.5000, 0.0918, 0.0669, 0.0226, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1299, 0.2500, 0.1904, 0.1348, 0.1416, 0.1533, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1011, 0.3945, 0.1240, 0.0576, 0.0408, 0.1797, 0.1021, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1562, 0.2734, 0.0540, 0.0381, 0.0352, 0.1045, 0.2559, 0.0815, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1011, 0.2188, 0.1240, 0.1006, 0.0723, 0.1021, 0.1592, 0.0781, 0.0432, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1689, 0.0952, 0.0791, 0.0840, 0.0270, 0.1016, 0.1953, 0.1021, 0.0437, 0.1021, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1416, 0.2012, 0.0420, 0.0226, 0.0088, 0.1797, 0.3086, 0.0160, 0.0032, 0.0337, 0.0417, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1377, 0.0674, 0.0679, 0.0771, 0.0133, 0.0889, 0.1494, 0.0903, 0.0298, 0.0708, 0.0972, 0.1099, 0.0000, 0.0000, 0.0000],
        [0.0679, 0.1758, 0.0488, 0.0361, 0.0752, 0.0527, 0.1089, 0.0698, 0.0547, 0.0452, 0.1729, 0.0437, 0.0481, 0.0000, 0.0000],
        [0.0684, 0.1689, 0.0981, 0.0728, 0.0513, 0.0713, 0.1167, 0.0476, 0.0249, 0.0645, 0.0835, 0.0583, 0.0483, 0.0254, 0.0000],
        [0.1235, 0.2383, 0.0684, 0.0315, 0.0028, 0.0923, 0.1934, 0.0255, 0.0015, 0.0554, 0.0447, 0.0496, 0.0070, 0.0018, 0.0645]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0161,  0.0185,  0.0177,  ..., -0.0185,  0.0093, -0.0198],
        [ 0.0031,  0.0236,  0.0009,  ..., -0.0199,  0.0198, -0.0069],
        [ 0.0041, -0.0236, -0.0104,  ..., -0.0393,  0.0465, -0.0052],
        ...,
        [ 0.0078, -0.0396, -0.0193,  ..., -0.0096,  0.0123,  0.0291],
        [ 0.0182, -0.0034, -0.0224,  ..., -0.0445, -0.0221, -0.0118],
        [ 0.0044,  0.0337,  0.0281,  ..., -0.0030,  0.0481,  0.0185]], device='cuda:0', requires_grad=True)
K: tensor([ 1.0703,  2.5938,  0.1904,  0.2266, -1.0312,  0.3027, -0.1484,  0.5586, -0.0649,  1.3047,  0.5039, -0.0591, -1.0547, -0.6641, -0.8242, -1.4297, -0.1040, -1.6875, -0.5703,  0.3184, -0.7266,  1.0703, -0.3008,  0.3555,  0.2188, -1.1250,  0.4863, -0.5938, -1.3516,  0.2109, -0.2207, -0.0698,
        -1.3359, -0.3965, -1.0625,  0.6758, -1.2812, -1.7578, -0.8477, -1.4375,  0.8711, -0.1982,  1.2891, -0.6289, -0.2334, -0.9492, -0.3633,  1.0156,  1.3125, -0.9297,  1.8672,  0.1147,  0.8047, -0.2832, -0.7148, -0.3945, -0.3262,  0.5586,  0.8047,  0.1299, -1.3047, -1.1094, -1.2891,  0.7734],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0217, -0.0021, -0.0370,  ..., -0.0388, -0.0162,  0.0006],
        [-0.0061,  0.0086, -0.0369,  ..., -0.0126,  0.0143,  0.0145],
        [ 0.0237, -0.0124,  0.0397,  ...,  0.0283, -0.0029, -0.0285],
        ...,
        [ 0.0257, -0.0257,  0.0396,  ...,  0.0162,  0.0077, -0.0159],
        [ 0.0020, -0.0151, -0.0087,  ...,  0.0290,  0.0251, -0.0094],
        [ 0.0109, -0.0007, -0.0306,  ..., -0.0043,  0.0258,  0.0178]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.4199,  1.6797, -0.7852, -1.2109,  0.4648, -1.5234,  0.6992, -0.0503, -1.4453, -2.5000, -0.1196,  1.1484,  0.6875,  0.5703,  0.5156, -0.4121, -2.7500, -1.4453, -1.1328, -0.4980, -0.9766, -2.3281,  0.6992,  0.7266, -2.2500,  1.1875, -1.9453,  0.0347, -1.3594, -0.3359,  0.2969,  0.8008,
        -0.1162,  0.6875,  1.1094,  1.4922,  0.3945, -0.2412,  0.5820,  0.8867,  0.5117,  0.8711, -0.8164,  2.4375, -1.2188, -0.3848, -1.9844,  1.0156, -0.0869, -0.0815, -0.2695,  0.3906, -1.6094, -2.5156, -0.7109,  0.8164,  0.8438, -1.0312,  1.4531, -1.9453,  0.9453, -0.0312,  0.0986, -0.5117],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.7852, -1.6016, -1.7812, -3.6094,  0.5469, -0.2207, -2.2656, -3.8125, -1.2891, -1.9297, -2.0625, -2.0312, -3.6250, -2.9219],
        [ 0.0000, -0.4160, -0.9609, -1.1250, -3.1094, -0.1973, -0.3887, -1.1484, -2.8125, -0.6641, -0.9570, -0.8906, -1.7578, -2.6719, -0.6914],
        [ 0.0000, -0.6289, -0.8711, -0.8164, -2.5000, -0.4551, -0.1895, -0.7305, -1.8281, -0.5391, -0.4023, -0.5117, -1.3906, -1.6875,  0.1357],
        [ 0.0000,  0.4453, -1.2500, -1.5625, -2.6562,  0.2500, -0.4941, -1.2344, -2.3594, -1.1250, -0.3926, -1.8359, -0.8086, -2.2812, -2.1406],
        [ 0.0000,  0.6562,  0.3828,  0.0361,  0.0825,  0.1650, -0.0454, -0.3789, -0.6641,  0.1914, -0.1299, -0.2715, -0.3516, -0.7188, -0.2051],
        [ 0.0000,  1.3672,  0.2051, -0.5586, -0.9062,  0.5742,  0.0135, -1.1875, -2.4531, -0.0400, -1.0312, -1.0625, -1.0859, -2.5000, -1.8359],
        [ 0.0000,  0.5586, -1.0625, -1.4141, -1.4922, -0.4043,  0.4941, -0.6523, -1.7109, -1.0625,  0.1455, -1.1562, -1.0078, -1.6328, -0.8750],
        [ 0.0000,  0.7734,  0.2041, -0.0051, -0.3359,  0.0114,  0.4551, -0.2578, -0.8477, -0.1348,  0.3047, -0.1777, -0.1924, -0.8242, -0.2930],
        [ 0.0000, -0.5742, -0.7617, -0.6992, -1.8359, -0.5117,  0.1445, -0.5039, -1.3594, -0.5078, -0.3613, -0.3867, -1.1094, -1.2578,  0.1982],
        [ 0.0000,  0.3496, -1.2188, -1.8438, -2.7812,  0.2373,  0.7773, -2.1875, -3.7812, -1.4375, -1.2266, -2.0625, -2.1406, -3.6250, -2.5312],
        [ 0.0000, -0.7148, -0.7070, -0.5820, -2.3438, -0.4375,  0.0791, -0.4258, -1.5312, -0.6641, -0.3496, -0.2275, -1.1094, -1.3828,  0.2578],
        [ 0.0000,  0.9531, -0.3281, -0.6328,  0.1021, -0.2500,  0.4746,  0.0315, -0.2139, -0.4043,  0.9375, -0.4395, -0.3438, -0.1934,  0.1021],
        [ 0.0000,  0.9062,  0.3633,  0.0649, -0.2891,  0.0393,  0.5352, -0.3613, -1.0078, -0.0593,  0.2021, -0.1592, -0.3438, -0.9922, -0.2773],
        [ 0.0000,  0.6562, -0.5898, -1.3672, -3.7812, -0.2910,  0.4473, -1.5781, -4.4375, -0.8047, -1.0156, -0.9141, -2.8750, -4.2500, -0.6484]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8049],
        [0.5897],
        [0.3197],
        [0.2732],
        [0.0667],
        [0.0961],
        [0.0789],
        [0.0413],
        [0.0794],
        [0.0734],
        [0.0754],
        [0.0289],
        [0.0265],
        [0.0695]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( you:0.0947 a:0.0669.:0.0339 you:0.1465ms:0.0133.:0.1221 a:0.0603s:0.0796)
s
------
		( a:0.0669.:0.0339 you:0.1465ms:0.0133.:0.1221 a:0.0603s:0.0796.:0.0977)
.
I’t have to be a good.
-t
@ 1050 train 6.1448 , allloss: 48.6766, dt: 1657.44ms, fracRes: 0.1363, norm(attn): 0.2969, norm(output): 4.2500, norm(x): 4.3952, norm(y): 1.0028, norm:65.4547, tok/sec: 79080.95, flops:83.00, batch-reuse:1
@ 1051 train 6.0871 , allloss: 66.7323, dt: 1249.94ms, fracRes: 0.1366, norm(attn): 0.3066, norm(output): 4.2500, norm(x): 4.3969, norm(y): 1.0029, norm:125.9499, tok/sec: 104862.80, flops:110.06, batch-reuse:1
@ 1052 train 6.1414 , allloss: 66.0826, dt: 1257.92ms, fracRes: 0.1370, norm(attn): 0.3145, norm(output): 4.2188, norm(x): 4.3563, norm(y): 1.0031, norm:106.0422, tok/sec: 104197.72, flops:109.36, batch-reuse:1
@ 1053 train 6.1696 , allloss: 61.7007, dt: 1255.24ms, fracRes: 0.1380, norm(attn): 0.3145, norm(output): 4.2188, norm(x): 4.3564, norm(y): 1.0031, norm:76.5049, tok/sec: 104419.52, flops:109.59, batch-reuse:1
@ 1054 train 6.1494 , allloss: 62.8108, dt: 1242.11ms, fracRes: 0.1380, norm(attn): 0.3242, norm(output): 4.2188, norm(x): 4.3610, norm(y): 1.0033, norm:79.5441, tok/sec: 105524.05, flops:110.75, batch-reuse:1
@ 1055 train 6.1393 , allloss: 59.4841, dt: 1241.91ms, fracRes: 0.1389, norm(attn): 0.3242, norm(output): 4.2188, norm(x): 4.3675, norm(y): 1.0034, norm:71.6926, tok/sec: 105540.78, flops:110.77, batch-reuse:1
@ 1056 train 6.1478 , allloss: 55.8455, dt: 1241.78ms, fracRes: 0.1414, norm(attn): 0.3301, norm(output): 4.2188, norm(x): 4.3808, norm(y): 1.0032, norm:59.7065, tok/sec: 105551.93, flops:110.78, batch-reuse:1
@ 1057 train 6.1960 , allloss: 55.9977, dt: 1237.14ms, fracRes: 0.1447, norm(attn): 0.3379, norm(output): 4.1875, norm(x): 4.4014, norm(y): 1.0031, norm:67.7443, tok/sec: 105947.72, flops:111.19, batch-reuse:1
@ 1058 train 6.1997 , allloss: 55.2715, dt: 1233.29ms, fracRes: 0.1505, norm(attn): 0.3418, norm(output): 4.2500, norm(x): 4.4985, norm(y): 1.0027, norm:66.3545, tok/sec: 106278.11, flops:111.54, batch-reuse:1
@ 1059 train 6.1681 , allloss: 54.2196, dt: 1238.51ms, fracRes: 0.1562, norm(attn): 0.3438, norm(output): 4.2188, norm(x): 4.5622, norm(y): 1.0028, norm:56.2411, tok/sec: 105830.20, flops:111.07, batch-reuse:1
@ 1060 train 6.2376 , allloss: 53.3821, dt: 1237.49ms, fracRes: 0.1562, norm(attn): 0.3438, norm(output): 4.2188, norm(x): 4.6159, norm(y): 1.0030, norm:67.1260, tok/sec: 105917.57, flops:111.16, batch-reuse:1
@ 1061 train 6.2529 , allloss: 53.6575, dt: 1234.06ms, fracRes: 0.1675, norm(attn): 0.3262, norm(output): 4.2500, norm(x): 4.7965, norm(y): 1.0028, norm:54.7650, tok/sec: 106211.77, flops:111.47, batch-reuse:1
@ 1062 train 6.1932 , allloss: 52.8893, dt: 1257.93ms, fracRes: 0.1735, norm(attn): 0.3125, norm(output): 4.3125, norm(x): 4.9016, norm(y): 1.0027, norm:48.3711, tok/sec: 104196.99, flops:109.36, batch-reuse:1
@ 1063 train 6.1940 , allloss: 64.3901, dt: 1275.53ms, fracRes: 0.1879, norm(attn): 0.2852, norm(output): 4.2188, norm(x): 4.5327, norm(y): 1.0031, norm:92.5067, tok/sec: 102758.75, flops:107.85, batch-reuse:1
@ 1064 train 6.2541 , allloss: 49.4375, dt: 1264.42ms, fracRes: 0.1572, norm(attn): 0.2832, norm(output): 4.3125, norm(x): 4.7213, norm(y): 1.0028, norm:59.3008, tok/sec: 103661.64, flops:108.79, batch-reuse:1
@ 1065 train 6.2491 , allloss: 46.3077, dt: 1261.36ms, fracRes: 0.1532, norm(attn): 0.2695, norm(output): 4.4375, norm(x): 4.8099, norm(y): 1.0029, norm:46.1516, tok/sec: 103912.83, flops:109.06, batch-reuse:1
@ 1066 train 6.2301 , allloss: 44.3985, dt: 1261.69ms, fracRes: 0.1529, norm(attn): 0.2656, norm(output): 4.4062, norm(x): 4.8152, norm(y): 1.0028, norm:39.7424, tok/sec: 103885.69, flops:109.03, batch-reuse:1
@ 1067 train 6.3105 , allloss: 42.8856, dt: 1277.77ms, fracRes: 0.1464, norm(attn): 0.2500, norm(output): 4.3125, norm(x): 4.6342, norm(y): 1.0031, norm:36.0213, tok/sec: 102578.94, flops:107.66, batch-reuse:1
@ 1068 train 6.3243 , allloss: 41.1520, dt: 1260.51ms, fracRes: 0.1514, norm(attn): 0.2500, norm(output): 4.5000, norm(x): 4.8162, norm(y): 1.0035, norm:42.2339, tok/sec: 103983.68, flops:109.13, batch-reuse:1
@ 1069 train 6.2330 , allloss: 41.9072, dt: 1258.52ms, fracRes: 0.1633, norm(attn): 0.2598, norm(output): 4.5000, norm(x): 4.9756, norm(y): 1.0028, norm:42.8855, tok/sec: 104148.11, flops:109.31, batch-reuse:1
@ 1070 train 6.2459 , allloss: 44.6719, dt: 1260.42ms, fracRes: 0.1552, norm(attn): 0.2676, norm(output): 4.4375, norm(x): 4.8168, norm(y): 1.0032, norm:57.8863, tok/sec: 103990.86, flops:109.14, batch-reuse:1
@ 1071 train 6.1302 , allloss: 48.9818, dt: 1251.73ms, fracRes: 0.1421, norm(attn): 0.2793, norm(output): 4.4375, norm(x): 4.7724, norm(y): 1.0035, norm:57.0163, tok/sec: 104712.32, flops:109.90, batch-reuse:1
@ 1072 train 6.2569 , allloss: 48.6609, dt: 1280.53ms, fracRes: 0.1401, norm(attn): 0.2773, norm(output): 4.4688, norm(x): 4.7875, norm(y): 1.0033, norm:45.0730, tok/sec: 102357.28, flops:107.43, batch-reuse:1
@ 1073 train 6.1560 , allloss: 42.8973, dt: 1263.11ms, fracRes: 0.1304, norm(attn): 0.2852, norm(output): 4.4688, norm(x): 4.7800, norm(y): 1.0031, norm:42.3556, tok/sec: 103769.61, flops:108.91, batch-reuse:1
@ 1074 train 6.1411 , allloss: 46.5327, dt: 1265.16ms, fracRes: 0.1283, norm(attn): 0.2812, norm(output): 4.5000, norm(x): 4.8636, norm(y): 1.0032, norm:49.2679, tok/sec: 103600.85, flops:108.73, batch-reuse:1
@ 1075 train 6.1934 , allloss: 53.4884, dt: 1280.67ms, fracRes: 0.1156, norm(attn): 0.2793, norm(output): 4.5312, norm(x): 4.8888, norm(y): 1.0034, norm:65.7059, tok/sec: 102346.22, flops:107.41, batch-reuse:1
@ 1076 train 6.2370 , allloss: 61.0003, dt: 1271.32ms, fracRes: 0.1053, norm(attn): 0.2832, norm(output): 4.6875, norm(x): 4.9347, norm(y): 1.0032, norm:81.7906, tok/sec: 103099.07, flops:108.20, batch-reuse:1
@ 1077 train 6.1391 , allloss: 65.4121, dt: 1251.45ms, fracRes: 0.0981, norm(attn): 0.2891, norm(output): 4.6875, norm(x): 4.9315, norm(y): 1.0029, norm:77.7577, tok/sec: 104735.84, flops:109.92, batch-reuse:1
@ 1078 train 6.4408 , allloss: 72.7445, dt: 1285.13ms, fracRes: 0.1074, norm(attn): 0.2832, norm(output): 4.7500, norm(x): 4.9428, norm(y): 1.0028, norm:102.9681, tok/sec: 101991.05, flops:107.04, batch-reuse:1
@ 1079 train 6.1231 , allloss: 76.8793, dt: 1258.60ms, fracRes: 0.0980, norm(attn): 0.2949, norm(output): 4.6875, norm(x): 4.7970, norm(y): 1.0027, norm:91.2516, tok/sec: 104141.50, flops:109.30, batch-reuse:1
@ 1080 train 6.1857 , allloss: 82.3763, dt: 1254.02ms, fracRes: 0.0958, norm(attn): 0.2930, norm(output): 4.6875, norm(x): 4.7703, norm(y): 1.0027, norm:145.2755, tok/sec: 104521.84, flops:109.70, batch-reuse:1
@ 1081 train 6.1886 , allloss: 78.5659, dt: 1269.49ms, fracRes: 0.0967, norm(attn): 0.2930, norm(output): 4.6562, norm(x): 4.7343, norm(y): 1.0028, norm:90.6799, tok/sec: 103247.45, flops:108.36, batch-reuse:1
@ 1082 train 6.3164 , allloss: 76.1271, dt: 1285.86ms, fracRes: 0.0962, norm(attn): 0.2891, norm(output): 4.6562, norm(x): 4.7146, norm(y): 1.0025, norm:87.3084, tok/sec: 101933.14, flops:106.98, batch-reuse:1
@ 1083 train 6.1678 , allloss: 71.5941, dt: 1286.72ms, fracRes: 0.0937, norm(attn): 0.2891, norm(output): 4.6562, norm(x): 4.6936, norm(y): 1.0025, norm:88.6587, tok/sec: 101864.94, flops:106.91, batch-reuse:1
@ 1084 train 6.0579 , allloss: 72.4113, dt: 1278.77ms, fracRes: 0.0935, norm(attn): 0.2930, norm(output): 4.6250, norm(x): 4.6608, norm(y): 1.0024, norm:90.7235, tok/sec: 102498.23, flops:107.57, batch-reuse:1
@ 1085 train 6.2187 , allloss: 76.4288, dt: 1295.57ms, fracRes: 0.0961, norm(attn): 0.2930, norm(output): 4.6250, norm(x): 4.6003, norm(y): 1.0027, norm:82.9512, tok/sec: 101169.58, flops:106.18, batch-reuse:1
@ 1086 train 6.1288 , allloss: 71.7240, dt: 1280.87ms, fracRes: 0.0935, norm(attn): 0.2930, norm(output): 4.6875, norm(x): 4.5910, norm(y): 1.0027, norm:81.8815, tok/sec: 102330.56, flops:107.40, batch-reuse:1
@ 1087 train 6.1003 , allloss: 72.2759, dt: 1258.27ms, fracRes: 0.0942, norm(attn): 0.2930, norm(output): 4.5938, norm(x): 4.5195, norm(y): 1.0027, norm:72.4675, tok/sec: 104168.58, flops:109.33, batch-reuse:1
@ 1088 train 6.1962 , allloss: 73.7125, dt: 1244.53ms, fracRes: 0.0939, norm(attn): 0.2949, norm(output): 4.6875, norm(x): 4.5376, norm(y): 1.0026, norm:81.8292, tok/sec: 105318.19, flops:110.53, batch-reuse:1
@ 1089 train 6.0957 , allloss: 73.8814, dt: 1244.25ms, fracRes: 0.0932, norm(attn): 0.2949, norm(output): 4.6875, norm(x): 4.5336, norm(y): 1.0024, norm:85.1063, tok/sec: 105342.03, flops:110.56, batch-reuse:1
@ 1090 train 6.0819 , allloss: 74.0989, dt: 1265.26ms, fracRes: 0.0932, norm(attn): 0.2969, norm(output): 4.7812, norm(x): 4.5879, norm(y): 1.0023, norm:74.7022, tok/sec: 103593.23, flops:108.72, batch-reuse:1
@ 1091 train 6.1126 , allloss: 74.9391, dt: 1270.02ms, fracRes: 0.0929, norm(attn): 0.2969, norm(output): 4.8438, norm(x): 4.6362, norm(y): 1.0023, norm:80.6380, tok/sec: 103204.91, flops:108.32, batch-reuse:1
@ 1092 train 6.1883 , allloss: 76.5071, dt: 1278.31ms, fracRes: 0.0942, norm(attn): 0.3086, norm(output): 4.8125, norm(x): 4.5831, norm(y): 1.0023, norm:77.2352, tok/sec: 102535.76, flops:107.61, batch-reuse:1
@ 1093 train 6.0683 , allloss: 78.9917, dt: 1249.81ms, fracRes: 0.0932, norm(attn): 0.3125, norm(output): 4.8438, norm(x): 4.5742, norm(y): 1.0020, norm:99.3594, tok/sec: 104873.20, flops:110.07, batch-reuse:1
@ 1094 train 6.0709 , allloss: 83.9841, dt: 1262.43ms, fracRes: 0.0929, norm(attn): 0.3281, norm(output): 4.8125, norm(x): 4.5606, norm(y): 1.0018, norm:130.2628, tok/sec: 103825.34, flops:108.97, batch-reuse:1
@ 1095 train 6.0487 , allloss: 90.1608, dt: 1266.76ms, fracRes: 0.0934, norm(attn): 0.3418, norm(output): 4.9375, norm(x): 4.6156, norm(y): 1.0016, norm:110.0606, tok/sec: 103469.97, flops:108.59, batch-reuse:1
@ 1096 train 6.1115 , allloss: 98.5798, dt: 1290.33ms, fracRes: 0.0936, norm(attn): 0.3613, norm(output): 4.9688, norm(x): 4.6643, norm(y): 1.0015, norm:160.0438, tok/sec: 101580.18, flops:106.61, batch-reuse:1
@ 1097 train 6.0521 , allloss: 110.4751, dt: 1288.23ms, fracRes: 0.0939, norm(attn): 0.3750, norm(output): 4.9062, norm(x): 4.6230, norm(y): 1.0015, norm:141.4482, tok/sec: 101746.11, flops:106.78, batch-reuse:1
@ 1098 train 6.0532 , allloss: 120.2377, dt: 1242.09ms, fracRes: 0.0938, norm(attn): 0.3945, norm(output): 4.9062, norm(x): 4.6089, norm(y): 1.0014, norm:181.0702, tok/sec: 105525.71, flops:110.75, batch-reuse:1
@ 1099 train 6.0869 , allloss: 136.7822, dt: 1254.60ms, fracRes: 0.0943, norm(attn): 0.4141, norm(output): 4.9062, norm(x): 4.6088, norm(y): 1.0013, norm:212.2955, tok/sec: 104473.41, flops:109.65, batch-reuse:1
@ 1100 train 6.1079 , allloss: 157.4469, dt: 1271.37ms, fracRes: 0.0945, norm(attn): 0.4375, norm(output): 4.9688, norm(x): 4.6255, norm(y): 1.0013, norm:185.6637, tok/sec: 103095.25, flops:108.20, batch-reuse:1
@ 1101 train 6.2189 , allloss: 208.2822, dt: 1263.28ms, fracRes: 0.0954, norm(attn): 0.4590, norm(output): 4.9688, norm(x): 4.6519, norm(y): 1.0013, norm:259.5380, tok/sec: 103755.15, flops:108.89, batch-reuse:1
@ 1102 train 6.1830 , allloss: 229.3879, dt: 1249.74ms, fracRes: 0.0967, norm(attn): 0.4727, norm(output): 5.1250, norm(x): 4.7782, norm(y): 1.0015, norm:209.4608, tok/sec: 104879.30, flops:110.07, batch-reuse:1
@ 1103 train 6.2516 , allloss: 237.8038, dt: 1274.73ms, fracRes: 0.0981, norm(attn): 0.4902, norm(output): 5.2812, norm(x): 4.8902, norm(y): 1.0016, norm:207.7049, tok/sec: 102823.40, flops:107.92, batch-reuse:1
@ 1104 train 6.3142 , allloss: 240.8766, dt: 1261.78ms, fracRes: 0.1108, norm(attn): 0.4902, norm(output): 5.2500, norm(x): 4.8890, norm(y): 1.0018, norm:226.6719, tok/sec: 103878.78, flops:109.02, batch-reuse:1
@ 1105 train 6.2127 , allloss: 251.0089, dt: 1253.31ms, fracRes: 0.1073, norm(attn): 0.4922, norm(output): 5.4375, norm(x): 4.9899, norm(y): 1.0015, norm:275.6788, tok/sec: 104580.97, flops:109.76, batch-reuse:1
@ 1106 train 6.1644 , allloss: 265.5814, dt: 1247.31ms, fracRes: 0.1102, norm(attn): 0.4863, norm(output): 5.5000, norm(x): 5.0740, norm(y): 1.0013, norm:458.7378, tok/sec: 105083.45, flops:110.29, batch-reuse:1
@ 1107 train 6.3106 , allloss: 224.1788, dt: 1256.84ms, fracRes: 0.1155, norm(attn): 0.4688, norm(output): 5.3438, norm(x): 4.9673, norm(y): 1.0012, norm:471.2462, tok/sec: 104286.86, flops:109.45, batch-reuse:1
@ 1108 train 6.2276 , allloss: 196.2421, dt: 1244.21ms, fracRes: 0.1167, norm(attn): 0.4668, norm(output): 5.4375, norm(x): 5.0719, norm(y): 1.0010, norm:302.3991, tok/sec: 105345.16, flops:110.56, batch-reuse:1
@ 1109 train 6.2140 , allloss: 164.2279, dt: 1265.65ms, fracRes: 0.1180, norm(attn): 0.4492, norm(output): 5.5000, norm(x): 5.1173, norm(y): 1.0007, norm:149.7342, tok/sec: 103560.76, flops:108.69, batch-reuse:1
@ 1110 train 6.1826 , allloss: 144.6113, dt: 1284.04ms, fracRes: 0.1194, norm(attn): 0.4355, norm(output): 5.5000, norm(x): 5.1725, norm(y): 1.0008, norm:137.7905, tok/sec: 102077.55, flops:107.13, batch-reuse:1
@ 1111 train 6.1033 , allloss: 127.1932, dt: 1278.21ms, fracRes: 0.1219, norm(attn): 0.4277, norm(output): 5.4688, norm(x): 5.2097, norm(y): 1.0009, norm:136.9003, tok/sec: 102543.33, flops:107.62, batch-reuse:1
@ 1112 train 6.2739 , allloss: 118.7773, dt: 1270.10ms, fracRes: 0.1275, norm(attn): 0.4180, norm(output): 5.4688, norm(x): 5.2691, norm(y): 1.0006, norm:125.9627, tok/sec: 103198.18, flops:108.31, batch-reuse:1
@ 1113 train 6.2705 , allloss: 109.5349, dt: 1293.77ms, fracRes: 0.1329, norm(attn): 0.4141, norm(output): 5.5000, norm(x): 5.3117, norm(y): 1.0003, norm:67.7860, tok/sec: 101309.93, flops:106.33, batch-reuse:1
@ 1114 train 6.3104 , allloss: 107.6106, dt: 1283.17ms, fracRes: 0.1321, norm(attn): 0.4219, norm(output): 5.4688, norm(x): 5.3847, norm(y): 1.0002, norm:102.2038, tok/sec: 102146.99, flops:107.21, batch-reuse:1
@ 1115 train 6.2736 , allloss: 110.8800, dt: 1283.41ms, fracRes: 0.1345, norm(attn): 0.4180, norm(output): 5.5000, norm(x): 5.4509, norm(y): 1.0004, norm:98.7260, tok/sec: 102127.77, flops:107.18, batch-reuse:1
@ 1116 train 6.1811 , allloss: 108.3798, dt: 1250.26ms, fracRes: 0.1363, norm(attn): 0.4121, norm(output): 5.6250, norm(x): 5.5972, norm(y): 1.0004, norm:102.7884, tok/sec: 104835.78, flops:110.03, batch-reuse:1
@ 1117 train 6.1990 , allloss: 102.6174, dt: 1256.80ms, fracRes: 0.1369, norm(attn): 0.4141, norm(output): 5.7812, norm(x): 5.7465, norm(y): 1.0003, norm:85.0751, tok/sec: 104289.87, flops:109.45, batch-reuse:1
@ 1118 train 6.2540 , allloss: 98.3003, dt: 1280.02ms, fracRes: 0.1405, norm(attn): 0.4023, norm(output): 5.9375, norm(x): 5.8161, norm(y): 1.0001, norm:108.9405, tok/sec: 102398.51, flops:107.47, batch-reuse:1
@ 1119 train 6.2379 , allloss: 90.3797, dt: 1251.92ms, fracRes: 0.1422, norm(attn): 0.3828, norm(output): 5.9375, norm(x): 5.8886, norm(y): 1.0004, norm:161.0825, tok/sec: 104696.99, flops:109.88, batch-reuse:1
@ 1120 train 6.2903 , allloss: 86.3634, dt: 1254.03ms, fracRes: 0.1425, norm(attn): 0.3652, norm(output): 5.9375, norm(x): 5.8774, norm(y): 1.0008, norm:150.3123, tok/sec: 104520.43, flops:109.70, batch-reuse:1
@ 1121 train 6.3939 , allloss: 81.6673, dt: 1281.80ms, fracRes: 0.1414, norm(attn): 0.3477, norm(output): 5.9375, norm(x): 5.8847, norm(y): 1.0006, norm:89.9077, tok/sec: 102256.22, flops:107.32, batch-reuse:1
@ 1122 train 6.3052 , allloss: 75.4202, dt: 1263.90ms, fracRes: 0.1421, norm(attn): 0.3555, norm(output): 5.7500, norm(x): 5.8292, norm(y): 1.0004, norm:54.4848, tok/sec: 103704.15, flops:108.84, batch-reuse:1
@ 1123 train 6.2294 , allloss: 68.0036, dt: 1266.90ms, fracRes: 0.1441, norm(attn): 0.3594, norm(output): 5.8438, norm(x): 5.9393, norm(y): 1.0010, norm:56.7082, tok/sec: 103458.68, flops:108.58, batch-reuse:1
@ 1124 train 6.2808 , allloss: 61.7504, dt: 1288.43ms, fracRes: 0.1435, norm(attn): 0.3555, norm(output): 5.7500, norm(x): 5.9485, norm(y): 1.0014, norm:49.4644, tok/sec: 101730.37, flops:106.77, batch-reuse:1
@ 1125 train 6.2725 , allloss: 56.6299, dt: 1292.46ms, fracRes: 0.1436, norm(attn): 0.3730, norm(output): 5.7500, norm(x): 6.0055, norm(y): 1.0014, norm:39.6704, tok/sec: 101412.68, flops:106.43, batch-reuse:1
@ 1126 train 6.2652 , allloss: 53.7289, dt: 1260.57ms, fracRes: 0.1432, norm(attn): 0.4023, norm(output): 5.8125, norm(x): 6.0311, norm(y): 1.0011, norm:57.7217, tok/sec: 103978.26, flops:109.13, batch-reuse:1
@ 1127 train 6.2567 , allloss: 50.6472, dt: 1287.87ms, fracRes: 0.1432, norm(attn): 0.4102, norm(output): 5.8125, norm(x): 6.0653, norm(y): 1.0010, norm:49.5728, tok/sec: 101774.57, flops:106.81, batch-reuse:1
@ 1128 train 6.2265 , allloss: 47.6703, dt: 1246.85ms, fracRes: 0.1411, norm(attn): 0.4219, norm(output): 5.7500, norm(x): 6.0276, norm(y): 1.0011, norm:33.1778, tok/sec: 105122.53, flops:110.33, batch-reuse:1
@ 1129 train 6.2406 , allloss: 48.0060, dt: 1271.92ms, fracRes: 0.1442, norm(attn): 0.4141, norm(output): 5.7812, norm(x): 6.0165, norm(y): 1.0007, norm:28.9161, tok/sec: 103050.82, flops:108.15, batch-reuse:1
@ 1130 train 6.2967 , allloss: 46.3150, dt: 1279.50ms, fracRes: 0.1440, norm(attn): 0.4238, norm(output): 5.6250, norm(x): 5.9743, norm(y): 1.0009, norm:37.3307, tok/sec: 102440.05, flops:107.51, batch-reuse:1
@ 1131 train 6.3538 , allloss: 46.8568, dt: 1269.72ms, fracRes: 0.1508, norm(attn): 0.4043, norm(output): 5.6250, norm(x): 6.0223, norm(y): 1.0005, norm:32.2938, tok/sec: 103229.46, flops:108.34, batch-reuse:1
@ 1132 train 6.2791 , allloss: 44.6217, dt: 1250.78ms, fracRes: 0.1498, norm(attn): 0.3984, norm(output): 5.6562, norm(x): 6.0908, norm(y): 1.0017, norm:34.9935, tok/sec: 104791.88, flops:109.98, batch-reuse:1
@ 1133 train 6.2924 , allloss: 46.9037, dt: 1257.62ms, fracRes: 0.1516, norm(attn): 0.3848, norm(output): 5.8125, norm(x): 6.1620, norm(y): 1.0019, norm:66.2389, tok/sec: 104222.27, flops:109.38, batch-reuse:1
@ 1134 train 6.2847 , allloss: 47.2069, dt: 1255.24ms, fracRes: 0.1549, norm(attn): 0.3809, norm(output): 5.9375, norm(x): 6.2695, norm(y): 1.0022, norm:45.3710, tok/sec: 104419.60, flops:109.59, batch-reuse:1
@ 1135 train 6.2332 , allloss: 50.5813, dt: 1253.35ms, fracRes: 0.1530, norm(attn): 0.3691, norm(output): 5.9375, norm(x): 6.3028, norm(y): 1.0026, norm:88.0412, tok/sec: 104577.43, flops:109.76, batch-reuse:1
@ 1136 train 6.3720 , allloss: 79.3255, dt: 1262.95ms, fracRes: 0.1560, norm(attn): 0.3555, norm(output): 5.9375, norm(x): 6.2873, norm(y): 1.0028, norm:381.5152, tok/sec: 103782.05, flops:108.92, batch-reuse:1
@ 1137 train 6.3901 , allloss: 65.1475, dt: 1266.91ms, fracRes: 0.1542, norm(attn): 0.3477, norm(output): 5.9062, norm(x): 6.2354, norm(y): 1.0028, norm:107.3110, tok/sec: 103457.82, flops:108.58, batch-reuse:1
@ 1138 train 6.4574 , allloss: 65.1637, dt: 1292.67ms, fracRes: 0.1505, norm(attn): 0.3438, norm(output): 5.9375, norm(x): 6.2560, norm(y): 1.0025, norm:75.4671, tok/sec: 101396.43, flops:106.42, batch-reuse:1
@ 1139 train 6.2925 , allloss: 77.4096, dt: 1273.47ms, fracRes: 0.1555, norm(attn): 0.3418, norm(output): 5.9375, norm(x): 6.2720, norm(y): 1.0024, norm:345.9365, tok/sec: 102925.01, flops:108.02, batch-reuse:1
@ 1140 train 6.4014 , allloss: 63.0918, dt: 1257.48ms, fracRes: 0.1545, norm(attn): 0.3418, norm(output): 5.9688, norm(x): 6.3808, norm(y): 1.0023, norm:96.1879, tok/sec: 104233.93, flops:109.40, batch-reuse:1
@ 1141 train 6.2878 , allloss: 64.3675, dt: 1270.24ms, fracRes: 0.1547, norm(attn): 0.3418, norm(output): 6.0312, norm(x): 6.4938, norm(y): 1.0026, norm:79.7172, tok/sec: 103186.79, flops:108.30, batch-reuse:1
@ 1142 train 6.2723 , allloss: 64.9159, dt: 1284.38ms, fracRes: 0.1551, norm(attn): 0.3340, norm(output): 6.0625, norm(x): 6.4456, norm(y): 1.0028, norm:66.5146, tok/sec: 102051.08, flops:107.10, batch-reuse:1
@ 1143 train 6.3200 , allloss: 66.0477, dt: 1280.98ms, fracRes: 0.1575, norm(attn): 0.3340, norm(output): 5.9375, norm(x): 6.2417, norm(y): 1.0024, norm:60.9923, tok/sec: 102321.61, flops:107.39, batch-reuse:1
@ 1144 train 6.3356 , allloss: 66.6304, dt: 1266.85ms, fracRes: 0.1620, norm(attn): 0.3379, norm(output): 5.9062, norm(x): 6.2398, norm(y): 1.0027, norm:60.3838, tok/sec: 103463.02, flops:108.59, batch-reuse:1
@ 1145 train 6.4091 , allloss: 65.5143, dt: 1254.80ms, fracRes: 0.1665, norm(attn): 0.3145, norm(output): 5.9375, norm(x): 6.2098, norm(y): 1.0024, norm:72.4597, tok/sec: 104456.52, flops:109.63, batch-reuse:1
@ 1146 train 6.3690 , allloss: 62.5407, dt: 1268.74ms, fracRes: 0.1712, norm(attn): 0.3008, norm(output): 6.0312, norm(x): 6.3029, norm(y): 1.0026, norm:52.0959, tok/sec: 103309.09, flops:108.42, batch-reuse:1
@ 1147 train 6.4929 , allloss: 114.0456, dt: 1254.68ms, fracRes: 0.1589, norm(attn): 0.3125, norm(output): 6.0938, norm(x): 6.3683, norm(y): 1.0020, norm:144.6293, tok/sec: 104466.39, flops:109.64, batch-reuse:1
@ 1148 train 6.3218 , allloss: 87.5163, dt: 1280.79ms, fracRes: 0.1590, norm(attn): 0.3008, norm(output): 6.0938, norm(x): 6.3381, norm(y): 1.0024, norm:85.2587, tok/sec: 102337.14, flops:107.40, batch-reuse:1
@ 1149 train 6.3251 , allloss: 74.5664, dt: 1279.46ms, fracRes: 0.1611, norm(attn): 0.3008, norm(output): 6.0938, norm(x): 6.3645, norm(y): 1.0023, norm:83.2642, tok/sec: 102443.41, flops:107.52, batch-reuse:1
@ 1150 train 6.3745 , allloss: 62.1519, dt: 1254.97ms, fracRes: 0.1692, norm(attn): 0.2969, norm(output): 6.0625, norm(x): 6.3060, norm(y): 1.0021, norm:69.8429, tok/sec: 104442.57, flops:109.61, batch-reuse:1
@ 1151 train 6.4056 , allloss: 56.9140, dt: 1255.74ms, fracRes: 0.1620, norm(attn): 0.3008, norm(output): 6.0312, norm(x): 6.2321, norm(y): 1.0022, norm:57.5872, tok/sec: 104378.42, flops:109.55, batch-reuse:1
@ 1152 train 6.3248 , allloss: 52.4140, dt: 1284.24ms, fracRes: 0.1732, norm(attn): 0.3105, norm(output): 6.0000, norm(x): 6.1914, norm(y): 1.0022, norm:36.7252, tok/sec: 102062.20, flops:107.12, batch-reuse:1
@ 1153 train 6.2985 , allloss: 53.4014, dt: 1260.42ms, fracRes: 0.1711, norm(attn): 0.3203, norm(output): 6.0000, norm(x): 6.2068, norm(y): 1.0024, norm:48.4144, tok/sec: 103990.73, flops:109.14, batch-reuse:1
@ 1154 train 6.2776 , allloss: 51.0250, dt: 1267.35ms, fracRes: 0.1610, norm(attn): 0.3164, norm(output): 6.0312, norm(x): 6.1919, norm(y): 1.0028, norm:39.7830, tok/sec: 103422.05, flops:108.54, batch-reuse:1
@ 1155 train 6.1910 , allloss: 62.8303, dt: 1260.19ms, fracRes: 0.1570, norm(attn): 0.3203, norm(output): 6.0000, norm(x): 6.1335, norm(y): 1.0029, norm:51.7268, tok/sec: 104009.34, flops:109.16, batch-reuse:1
@ 1156 train 6.3182 , allloss: 70.5362, dt: 1272.87ms, fracRes: 0.1556, norm(attn): 0.3242, norm(output): 6.0312, norm(x): 6.1704, norm(y): 1.0026, norm:76.9621, tok/sec: 102973.96, flops:108.07, batch-reuse:1
@ 1157 train 6.3104 , allloss: 57.0349, dt: 1267.09ms, fracRes: 0.1563, norm(attn): 0.3281, norm(output): 6.0000, norm(x): 6.1013, norm(y): 1.0028, norm:50.4880, tok/sec: 103443.24, flops:108.57, batch-reuse:1
@ 1158 train 6.3301 , allloss: 45.5084, dt: 1286.00ms, fracRes: 0.1573, norm(attn): 0.3359, norm(output): 6.0000, norm(x): 6.1041, norm(y): 1.0034, norm:33.7504, tok/sec: 101922.41, flops:106.97, batch-reuse:1
@ 1159 train 6.4738 , allloss: 43.4533, dt: 1260.73ms, fracRes: 0.1596, norm(attn): 0.3301, norm(output): 6.0938, norm(x): 6.2004, norm(y): 1.0037, norm:30.5364, tok/sec: 103965.32, flops:109.11, batch-reuse:1
@ 1160 train 6.5531 , allloss: 39.1117, dt: 1262.36ms, fracRes: 0.1610, norm(attn): 0.3457, norm(output): 5.9688, norm(x): 6.0611, norm(y): 1.0031, norm:32.6570, tok/sec: 103831.07, flops:108.97, batch-reuse:1
@ 1161 train 6.3826 , allloss: 40.7949, dt: 1285.96ms, fracRes: 0.1672, norm(attn): 0.3496, norm(output): 6.1562, norm(x): 6.2982, norm(y): 1.0040, norm:42.5406, tok/sec: 101925.09, flops:106.97, batch-reuse:1
@ 1162 train 6.2878 , allloss: 39.7528, dt: 1277.94ms, fracRes: 0.1650, norm(attn): 0.3477, norm(output): 6.0938, norm(x): 6.2055, norm(y): 1.0038, norm:39.2316, tok/sec: 102564.89, flops:107.64, batch-reuse:1
@ 1163 train 6.4393 , allloss: 50.8474, dt: 1273.86ms, fracRes: 0.1538, norm(attn): 0.3340, norm(output): 6.0000, norm(x): 6.0754, norm(y): 1.0031, norm:41.2225, tok/sec: 102893.68, flops:107.99, batch-reuse:1
@ 1164 train 6.3447 , allloss: 38.8722, dt: 1274.44ms, fracRes: 0.1578, norm(attn): 0.3477, norm(output): 5.9375, norm(x): 6.0107, norm(y): 1.0033, norm:29.5025, tok/sec: 102846.60, flops:107.94, batch-reuse:1
@ 1165 train 6.4237 , allloss: 36.6654, dt: 1260.81ms, fracRes: 0.1579, norm(attn): 0.3574, norm(output): 5.9688, norm(x): 6.0132, norm(y): 1.0036, norm:21.2440, tok/sec: 103958.18, flops:109.11, batch-reuse:1
@ 1166 train 6.4879 , allloss: 41.2883, dt: 1276.61ms, fracRes: 0.1573, norm(attn): 0.3652, norm(output): 5.9062, norm(x): 5.9682, norm(y): 1.0034, norm:26.7793, tok/sec: 102672.06, flops:107.76, batch-reuse:1
@ 1167 train 6.2948 , allloss: 39.2619, dt: 1260.83ms, fracRes: 0.1544, norm(attn): 0.3730, norm(output): 5.9688, norm(x): 5.9877, norm(y): 1.0037, norm:29.6109, tok/sec: 103957.02, flops:109.10, batch-reuse:1
@ 1168 train 6.2360 , allloss: 38.3012, dt: 1280.18ms, fracRes: 0.1538, norm(attn): 0.3789, norm(output): 5.9688, norm(x): 6.0185, norm(y): 1.0040, norm:33.6341, tok/sec: 102385.51, flops:107.46, batch-reuse:1
@ 1169 train 6.3468 , allloss: 45.8531, dt: 1304.85ms, fracRes: 0.1534, norm(attn): 0.3828, norm(output): 5.9688, norm(x): 5.9761, norm(y): 1.0038, norm:41.7178, tok/sec: 100449.71, flops:105.42, batch-reuse:1
@ 1170 train 6.2658 , allloss: 45.4871, dt: 1243.36ms, fracRes: 0.1525, norm(attn): 0.3887, norm(output): 5.8438, norm(x): 5.8720, norm(y): 1.0039, norm:38.0680, tok/sec: 105418.00, flops:110.64, batch-reuse:1
@ 1171 train 6.2349 , allloss: 40.8010, dt: 1252.25ms, fracRes: 0.1526, norm(attn): 0.3848, norm(output): 5.9375, norm(x): 5.8833, norm(y): 1.0042, norm:42.0969, tok/sec: 104669.60, flops:109.85, batch-reuse:1
@ 1172 train 6.3846 , allloss: 37.6448, dt: 1279.69ms, fracRes: 0.1567, norm(attn): 0.3770, norm(output): 5.9062, norm(x): 5.8374, norm(y): 1.0039, norm:30.4266, tok/sec: 102424.73, flops:107.50, batch-reuse:1
@ 1173 train 6.3056 , allloss: 36.6175, dt: 1253.31ms, fracRes: 0.1621, norm(attn): 0.3672, norm(output): 5.8438, norm(x): 5.7771, norm(y): 1.0038, norm:33.3762, tok/sec: 104580.65, flops:109.76, batch-reuse:1
@ 1174 train 6.2320 , allloss: 36.9073, dt: 1276.91ms, fracRes: 0.1574, norm(attn): 0.3672, norm(output): 5.7500, norm(x): 5.7511, norm(y): 1.0038, norm:34.7301, tok/sec: 102647.79, flops:107.73, batch-reuse:1
@ 1175 train 6.3885 , allloss: 34.1113, dt: 1277.62ms, fracRes: 0.1558, norm(attn): 0.3711, norm(output): 5.7812, norm(x): 5.7671, norm(y): 1.0037, norm:29.2896, tok/sec: 102590.77, flops:107.67, batch-reuse:1
@ 1176 train 6.3618 , allloss: 35.7973, dt: 1290.03ms, fracRes: 0.1539, norm(attn): 0.3594, norm(output): 5.9688, norm(x): 5.8713, norm(y): 1.0035, norm:36.1914, tok/sec: 101604.06, flops:106.64, batch-reuse:1
@ 1177 train 6.3631 , allloss: 36.7231, dt: 1281.52ms, fracRes: 0.1544, norm(attn): 0.3594, norm(output): 6.0000, norm(x): 5.9770, norm(y): 1.0035, norm:36.9904, tok/sec: 102278.15, flops:107.34, batch-reuse:1
@ 1178 train 6.4385 , allloss: 35.8350, dt: 1288.82ms, fracRes: 0.1539, norm(attn): 0.3457, norm(output): 6.0312, norm(x): 6.0213, norm(y): 1.0035, norm:40.8403, tok/sec: 101699.38, flops:106.74, batch-reuse:1
@ 1179 train 6.3350 , allloss: 35.8407, dt: 1278.63ms, fracRes: 0.1540, norm(attn): 0.3418, norm(output): 6.0000, norm(x): 5.9735, norm(y): 1.0034, norm:37.4194, tok/sec: 102509.33, flops:107.59, batch-reuse:1
@ 1180 train 6.3108 , allloss: 34.3404, dt: 1255.44ms, fracRes: 0.1542, norm(attn): 0.3379, norm(output): 6.0000, norm(x): 5.9874, norm(y): 1.0035, norm:29.5475, tok/sec: 104403.32, flops:109.57, batch-reuse:1
@ 1181 train 6.2443 , allloss: 34.2446, dt: 1268.97ms, fracRes: 0.1545, norm(attn): 0.3281, norm(output): 6.0000, norm(x): 5.9607, norm(y): 1.0036, norm:32.9387, tok/sec: 103290.26, flops:108.41, batch-reuse:1
@ 1182 train 6.3256 , allloss: 35.4894, dt: 1256.98ms, fracRes: 0.1550, norm(attn): 0.3379, norm(output): 6.0000, norm(x): 5.9697, norm(y): 1.0034, norm:42.3455, tok/sec: 104275.57, flops:109.44, batch-reuse:1
@ 1183 train 6.3156 , allloss: 34.7483, dt: 1261.55ms, fracRes: 0.1550, norm(attn): 0.3379, norm(output): 6.0000, norm(x): 5.9702, norm(y): 1.0035, norm:34.7253, tok/sec: 103897.45, flops:109.04, batch-reuse:1
@ 1184 train 6.2346 , allloss: 33.2997, dt: 1250.22ms, fracRes: 0.1548, norm(attn): 0.3379, norm(output): 6.0000, norm(x): 5.9650, norm(y): 1.0033, norm:26.1325, tok/sec: 104839.18, flops:110.03, batch-reuse:1
@ 1185 train 6.2869 , allloss: 33.5705, dt: 1276.37ms, fracRes: 0.1544, norm(attn): 0.3379, norm(output): 6.0000, norm(x): 5.9760, norm(y): 1.0031, norm:30.3761, tok/sec: 102691.18, flops:107.78, batch-reuse:1
@ 1186 train 6.2754 , allloss: 35.0845, dt: 1256.62ms, fracRes: 0.1544, norm(attn): 0.3262, norm(output): 6.0000, norm(x): 5.9400, norm(y): 1.0031, norm:34.7097, tok/sec: 104305.11, flops:109.47, batch-reuse:1
@ 1187 train 6.2758 , allloss: 34.7777, dt: 1257.75ms, fracRes: 0.1558, norm(attn): 0.3184, norm(output): 6.0625, norm(x): 6.0544, norm(y): 1.0035, norm:30.8814, tok/sec: 104211.68, flops:109.37, batch-reuse:1
@ 1188 train 6.1810 , allloss: 35.0795, dt: 1242.66ms, fracRes: 0.1562, norm(attn): 0.3242, norm(output): 6.0000, norm(x): 5.9017, norm(y): 1.0031, norm:39.3590, tok/sec: 105476.96, flops:110.70, batch-reuse:1
@ 1189 train 6.2007 , allloss: 35.4505, dt: 1269.54ms, fracRes: 0.1583, norm(attn): 0.3262, norm(output): 6.1875, norm(x): 6.1255, norm(y): 1.0038, norm:45.3366, tok/sec: 103243.46, flops:108.36, batch-reuse:1
@ 1190 train 6.3305 , allloss: 33.8843, dt: 1252.02ms, fracRes: 0.1599, norm(attn): 0.3203, norm(output): 6.1250, norm(x): 6.1005, norm(y): 1.0034, norm:32.2796, tok/sec: 104688.33, flops:109.87, batch-reuse:1
@ 1191 train 6.3729 , allloss: 32.1690, dt: 1259.96ms, fracRes: 0.1615, norm(attn): 0.3125, norm(output): 6.0625, norm(x): 6.0625, norm(y): 1.0032, norm:26.5015, tok/sec: 104028.86, flops:109.18, batch-reuse:1
@ 1192 train 6.1966 , allloss: 31.7480, dt: 1271.94ms, fracRes: 0.1700, norm(attn): 0.2988, norm(output): 6.0625, norm(x): 6.0688, norm(y): 1.0034, norm:28.4458, tok/sec: 103048.62, flops:108.15, batch-reuse:1
@ 1193 train 6.2575 , allloss: 31.5887, dt: 1283.78ms, fracRes: 0.1588, norm(attn): 0.2930, norm(output): 6.0625, norm(x): 6.0610, norm(y): 1.0033, norm:27.1878, tok/sec: 102098.22, flops:107.15, batch-reuse:1
@ 1194 train 6.2464 , allloss: 32.0936, dt: 1253.66ms, fracRes: 0.1571, norm(attn): 0.2949, norm(output): 6.1562, norm(x): 6.1324, norm(y): 1.0033, norm:30.8415, tok/sec: 104551.10, flops:109.73, batch-reuse:1
@ 1195 train 6.1641 , allloss: 32.0071, dt: 1257.75ms, fracRes: 0.1563, norm(attn): 0.3008, norm(output): 6.3125, norm(x): 6.2186, norm(y): 1.0036, norm:30.3069, tok/sec: 104211.23, flops:109.37, batch-reuse:1
@ 1196 train 6.2445 , allloss: 30.2516, dt: 1262.74ms, fracRes: 0.1554, norm(attn): 0.2988, norm(output): 6.3125, norm(x): 6.2406, norm(y): 1.0036, norm:26.7527, tok/sec: 103799.58, flops:108.94, batch-reuse:1
@ 1197 train 6.1674 , allloss: 29.9697, dt: 1286.59ms, fracRes: 0.1550, norm(attn): 0.2891, norm(output): 6.3750, norm(x): 6.2926, norm(y): 1.0034, norm:34.5840, tok/sec: 101875.34, flops:106.92, batch-reuse:1
@ 1198 train 6.2065 , allloss: 29.9096, dt: 1272.76ms, fracRes: 0.1552, norm(attn): 0.2832, norm(output): 6.3438, norm(x): 6.3295, norm(y): 1.0034, norm:33.2062, tok/sec: 102982.85, flops:108.08, batch-reuse:1
@ 1199 train 6.2076 , allloss: 29.3977, dt: 1286.57ms, fracRes: 0.1553, norm(attn): 0.2852, norm(output): 6.3750, norm(x): 6.3762, norm(y): 1.0036, norm:27.4277, tok/sec: 101876.91, flops:106.92, batch-reuse:1
@ 1200 train 6.2117 , allloss: 29.6226, dt: 1286.61ms, fracRes: 0.1551, norm(attn): 0.2891, norm(output): 6.5000, norm(x): 6.4305, norm(y): 1.0039, norm:26.2523, tok/sec: 101873.79, flops:106.92, batch-reuse:1
@ 1201 train 6.2082 , allloss: 29.9252, dt: 1286.94ms, fracRes: 0.1543, norm(attn): 0.2969, norm(output): 6.5000, norm(x): 6.4477, norm(y): 1.0038, norm:27.7624, tok/sec: 101847.41, flops:106.89, batch-reuse:1
@ 1202 train 6.2161 , allloss: 30.9099, dt: 1259.87ms, fracRes: 0.1550, norm(attn): 0.3125, norm(output): 6.5000, norm(x): 6.5104, norm(y): 1.0036, norm:30.9348, tok/sec: 104035.93, flops:109.19, batch-reuse:1
@ 1203 train 6.4801 , allloss: 30.2271, dt: 1265.30ms, fracRes: 0.1553, norm(attn): 0.3301, norm(output): 6.5625, norm(x): 6.5778, norm(y): 1.0037, norm:32.2256, tok/sec: 103590.03, flops:108.72, batch-reuse:1
@ 1204 train 6.1457 , allloss: 30.0951, dt: 1245.83ms, fracRes: 0.1554, norm(attn): 0.3379, norm(output): 6.4688, norm(x): 6.4856, norm(y): 1.0040, norm:27.4989, tok/sec: 105208.85, flops:110.42, batch-reuse:1
@ 1205 train 6.0852 , allloss: 28.8863, dt: 1266.52ms, fracRes: 0.1558, norm(attn): 0.3379, norm(output): 6.5000, norm(x): 6.5037, norm(y): 1.0042, norm:29.0153, tok/sec: 103490.03, flops:108.61, batch-reuse:1
@ 1206 train 6.1168 , allloss: 29.2658, dt: 1286.76ms, fracRes: 0.1559, norm(attn): 0.3242, norm(output): 6.5000, norm(x): 6.6228, norm(y): 1.0044, norm:30.2866, tok/sec: 101861.85, flops:106.91, batch-reuse:1
@ 1207 train 6.1709 , allloss: 28.5400, dt: 1292.06ms, fracRes: 0.1549, norm(attn): 0.3164, norm(output): 6.6250, norm(x): 6.6625, norm(y): 1.0042, norm:27.0322, tok/sec: 101444.34, flops:106.47, batch-reuse:1
@ 1208 train 6.0814 , allloss: 27.3174, dt: 1275.02ms, fracRes: 0.1562, norm(attn): 0.3047, norm(output): 6.5938, norm(x): 6.6729, norm(y): 1.0041, norm:25.7554, tok/sec: 102799.66, flops:107.89, batch-reuse:1
@ 1209 train 6.1114 , allloss: 27.9358, dt: 1296.32ms, fracRes: 0.1563, norm(attn): 0.2969, norm(output): 6.6875, norm(x): 6.7795, norm(y): 1.0039, norm:23.5695, tok/sec: 101111.14, flops:106.12, batch-reuse:1
@ 1210 train 6.0981 , allloss: 27.3853, dt: 1260.96ms, fracRes: 0.1571, norm(attn): 0.2969, norm(output): 6.6875, norm(x): 6.7609, norm(y): 1.0037, norm:26.5654, tok/sec: 103946.21, flops:109.09, batch-reuse:1
@ 1211 train 6.1462 , allloss: 27.4912, dt: 1287.75ms, fracRes: 0.1564, norm(attn): 0.2930, norm(output): 6.6875, norm(x): 6.7496, norm(y): 1.0039, norm:27.7206, tok/sec: 101783.43, flops:106.82, batch-reuse:1
@ 1212 train 6.1931 , allloss: 27.2890, dt: 1257.07ms, fracRes: 0.1567, norm(attn): 0.2969, norm(output): 6.8125, norm(x): 6.8188, norm(y): 1.0042, norm:26.2767, tok/sec: 104267.82, flops:109.43, batch-reuse:1
@ 1213 train 6.0614 , allloss: 27.6006, dt: 1250.61ms, fracRes: 0.1561, norm(attn): 0.2930, norm(output): 6.8438, norm(x): 6.8387, norm(y): 1.0044, norm:23.3920, tok/sec: 104806.54, flops:110.00, batch-reuse:1
@ 1214 train 6.1041 , allloss: 27.3289, dt: 1267.59ms, fracRes: 0.1565, norm(attn): 0.2852, norm(output): 6.7188, norm(x): 6.8200, norm(y): 1.0044, norm:25.7899, tok/sec: 103402.81, flops:108.52, batch-reuse:1
@ 1215 train 6.0969 , allloss: 27.6227, dt: 1266.58ms, fracRes: 0.1575, norm(attn): 0.2852, norm(output): 6.8438, norm(x): 6.8222, norm(y): 1.0044, norm:28.8649, tok/sec: 103484.89, flops:108.61, batch-reuse:1
@ 1216 train 6.0889 , allloss: 27.4762, dt: 1285.28ms, fracRes: 0.1578, norm(attn): 0.2832, norm(output): 6.6562, norm(x): 6.7698, norm(y): 1.0044, norm:29.8949, tok/sec: 101979.28, flops:107.03, batch-reuse:1
@ 1217 train 6.1157 , allloss: 27.4399, dt: 1253.45ms, fracRes: 0.1587, norm(attn): 0.2812, norm(output): 6.7188, norm(x): 6.7646, norm(y): 1.0042, norm:32.5362, tok/sec: 104569.14, flops:109.75, batch-reuse:1
@ 1218 train 6.0226 , allloss: 28.3687, dt: 1261.47ms, fracRes: 0.1601, norm(attn): 0.2773, norm(output): 6.8750, norm(x): 6.8942, norm(y): 1.0042, norm:29.6601, tok/sec: 103904.48, flops:109.05, batch-reuse:1
@ 1219 train 6.0425 , allloss: 27.1020, dt: 1267.21ms, fracRes: 0.1576, norm(attn): 0.2715, norm(output): 6.9375, norm(x): 6.9366, norm(y): 1.0042, norm:31.9934, tok/sec: 103433.47, flops:108.56, batch-reuse:1
@ 1220 train 6.0862 , allloss: 26.3637, dt: 1279.38ms, fracRes: 0.1581, norm(attn): 0.2734, norm(output): 6.9062, norm(x): 6.8728, norm(y): 1.0045, norm:31.8537, tok/sec: 102449.39, flops:107.52, batch-reuse:1
@ 1221 train 6.0297 , allloss: 26.4884, dt: 1273.89ms, fracRes: 0.1575, norm(attn): 0.2695, norm(output): 6.8750, norm(x): 6.8479, norm(y): 1.0044, norm:36.3733, tok/sec: 102891.14, flops:107.99, batch-reuse:1
@ 1222 train 6.0425 , allloss: 25.8053, dt: 1279.35ms, fracRes: 0.1583, norm(attn): 0.2715, norm(output): 6.8750, norm(x): 6.8528, norm(y): 1.0046, norm:31.4971, tok/sec: 102451.68, flops:107.52, batch-reuse:1
@ 1223 train 6.0357 , allloss: 25.0968, dt: 1287.40ms, fracRes: 0.1574, norm(attn): 0.2656, norm(output): 6.8438, norm(x): 6.8666, norm(y): 1.0044, norm:22.8417, tok/sec: 101811.48, flops:106.85, batch-reuse:1
@ 1224 train 6.0087 , allloss: 24.9811, dt: 1263.88ms, fracRes: 0.1574, norm(attn): 0.2617, norm(output): 6.9375, norm(x): 6.9158, norm(y): 1.0046, norm:20.5844, tok/sec: 103706.07, flops:108.84, batch-reuse:1
@ 1225 train 6.0854 , allloss: 25.5273, dt: 1289.31ms, fracRes: 0.1574, norm(attn): 0.2656, norm(output): 6.8750, norm(x): 6.8659, norm(y): 1.0047, norm:25.2830, tok/sec: 101660.96, flops:106.70, batch-reuse:1
@ 1226 train 6.1247 , allloss: 25.1250, dt: 1291.75ms, fracRes: 0.1575, norm(attn): 0.2617, norm(output): 6.8750, norm(x): 6.8503, norm(y): 1.0046, norm:25.8602, tok/sec: 101468.87, flops:106.49, batch-reuse:1
@ 1227 train 6.0685 , allloss: 26.0518, dt: 1287.21ms, fracRes: 0.1569, norm(attn): 0.2656, norm(output): 6.9375, norm(x): 6.9080, norm(y): 1.0048, norm:24.5664, tok/sec: 101826.05, flops:106.87, batch-reuse:1
@ 1228 train 6.0263 , allloss: 25.1078, dt: 1289.89ms, fracRes: 0.1580, norm(attn): 0.2656, norm(output): 6.9375, norm(x): 6.9160, norm(y): 1.0049, norm:24.0151, tok/sec: 101615.05, flops:106.65, batch-reuse:1
@ 1229 train 6.0604 , allloss: 25.5592, dt: 1274.05ms, fracRes: 0.1577, norm(attn): 0.2617, norm(output): 6.8438, norm(x): 6.8421, norm(y): 1.0049, norm:32.6268, tok/sec: 102878.30, flops:107.97, batch-reuse:1
@ 1230 train 6.0706 , allloss: 25.7982, dt: 1276.80ms, fracRes: 0.1579, norm(attn): 0.2539, norm(output): 6.9375, norm(x): 6.9020, norm(y): 1.0050, norm:36.6996, tok/sec: 102656.36, flops:107.74, batch-reuse:1
@ 1231 train 6.0721 , allloss: 25.7600, dt: 1255.10ms, fracRes: 0.1587, norm(attn): 0.2617, norm(output): 6.8750, norm(x): 6.8734, norm(y): 1.0052, norm:36.4099, tok/sec: 104431.60, flops:109.60, batch-reuse:1
@ 1232 train 6.0452 , allloss: 27.1935, dt: 1257.18ms, fracRes: 0.1585, norm(attn): 0.2656, norm(output): 6.9688, norm(x): 7.0422, norm(y): 1.0052, norm:56.6782, tok/sec: 104258.82, flops:109.42, batch-reuse:1
@ 1233 train 6.0599 , allloss: 26.7186, dt: 1288.97ms, fracRes: 0.1588, norm(attn): 0.2695, norm(output): 6.9688, norm(x): 7.0429, norm(y): 1.0054, norm:42.6602, tok/sec: 101687.56, flops:106.72, batch-reuse:1
@ 1234 train 6.0698 , allloss: 26.9128, dt: 1280.38ms, fracRes: 0.1584, norm(attn): 0.2676, norm(output): 7.0312, norm(x): 7.1014, norm(y): 1.0054, norm:47.4936, tok/sec: 102369.67, flops:107.44, batch-reuse:1
