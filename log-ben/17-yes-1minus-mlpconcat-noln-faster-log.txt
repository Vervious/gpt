Threshold: 0.1
Enable layer loss: False
MAX LEARNING RATE: 0.0006
Experiment name: 17-yes-1minus-mlpconcat-noln-faster
MLPSCALE: 4
Experiment description: Transformer, max LR 6e-4
Setting:
========
self.compiler = BenCompilerNoOp(config)
self.execute = BenExecute(config) 
========
y = self.ln_1(x)
attn, xWeights, scores = self.attn(y, y, print_weights=print_weights)
program = self.compiler(y)
machineOutput = self.execute(program, attn)
x = xWeights * x + (1-xWeights)*machineOutput
======== 
VALUEMATRIX=True
REUSE_WEIGHTS=False
MLP_SCALE=4
MEASURE_SELF_CONTRIBUTION=False
NEW_ALL_LAYER_LOSS=False
MATRIX_NUM_PARAMS=4096
MLPMAT_INNER_SIZE=64
DELETE_SELF_CONTRIBUTION=False
EXTRACT_SELF_CONTRIBUTION=False
ATTENTION_SINK=True
IDENTITY_LOSS=True

Warmup steps: 1000
total desired batch size: 131072
Mini-batch size: 8*1024
=> calculated gradient accumulation steps: 16
=> calculated gradient accumulation steps: 16
Training max steps: 300001Num GPUs: 1{'block_size': 1024, 'vocab_size': 50304, 'n_layer': 12, 'n_head': 12, 'n_embd': 768}
num decayed parameter tensors: 50, with 152,666,112 parameters
num non-decayed parameter tensors: 50, with 66,048 parameters
@ 0 train 11.0159 , allloss: 43.6101, dt: 2750.89ms, fracRes: 0.0062, norm(attn): 0.0334, norm(output): 0.0732, norm(x): 0.0732, norm(y): 0.9993, norm:30.3190, tok/sec: 47647.11, flops:50.01, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4238, 0.5781, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3320, 0.4629, 0.2041, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2373, 0.2676, 0.2520, 0.2432, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2246, 0.1108, 0.2422, 0.2412, 0.1816, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1406, 0.2256, 0.1680, 0.1235, 0.2021, 0.1406, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1250, 0.1572, 0.0781, 0.1045, 0.2119, 0.1182, 0.2051, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1523, 0.0918, 0.1523, 0.1758, 0.1069, 0.0649, 0.0967, 0.1582, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0972, 0.1396, 0.0879, 0.1816, 0.0464, 0.1279, 0.1245, 0.0825, 0.1128, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1040, 0.1084, 0.1396, 0.1089, 0.1196, 0.0364, 0.1133, 0.0898, 0.1040, 0.0757, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0962, 0.0549, 0.1289, 0.0771, 0.0918, 0.1025, 0.0598, 0.0850, 0.0947, 0.1035, 0.1055, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0791, 0.0938, 0.0674, 0.0815, 0.0669, 0.1455, 0.0972, 0.0928, 0.0840, 0.0520, 0.0664, 0.0723, 0.0000, 0.0000, 0.0000],
        [0.0771, 0.0684, 0.0918, 0.0654, 0.0854, 0.0991, 0.0762, 0.0918, 0.0432, 0.0928, 0.0679, 0.0737, 0.0674, 0.0000, 0.0000],
        [0.0635, 0.0830, 0.0476, 0.0991, 0.0405, 0.0771, 0.0596, 0.0488, 0.1406, 0.0549, 0.0588, 0.0500, 0.0732, 0.1030, 0.0000],
        [0.0664, 0.0713, 0.0605, 0.0879, 0.0649, 0.0825, 0.0486, 0.0635, 0.0625, 0.0703, 0.0581, 0.0894, 0.0601, 0.0500, 0.0640]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0048, -0.0212, -0.0030,  ..., -0.0211,  0.0017, -0.0063],
        [-0.0030, -0.0197, -0.0187,  ...,  0.0367, -0.0019, -0.0236],
        [-0.0042,  0.0216, -0.0107,  ...,  0.0273,  0.0414, -0.0013],
        ...,
        [-0.0047, -0.0007,  0.0056,  ..., -0.0068, -0.0336,  0.0034],
        [ 0.0165, -0.0087,  0.0108,  ...,  0.0110, -0.0139,  0.0095],
        [-0.0054,  0.0561, -0.0024,  ..., -0.0115,  0.0125, -0.0033]], device='cuda:0', requires_grad=True)
K: tensor([ 0.2793,  0.2012, -0.1660, -0.2207,  0.8555,  0.7891,  0.0732,  0.6250, -0.6797, -0.2129, -0.0171,  0.3047,  0.1030, -0.1172, -0.0894,  0.6484,  0.1777,  0.3770, -0.0972,  0.6992,  0.4043, -0.4023,  0.6914, -0.2480, -0.0728, -0.0459, -0.0496,  0.1289,  0.1670,  0.6406,  0.9883,  0.4121,
         0.3770, -0.1494,  0.4512,  0.0405, -0.4316,  0.2910, -0.0444,  0.8359, -0.3906,  0.5938, -0.5195,  1.2031, -0.3418, -0.2559,  0.4746,  0.6016,  0.9180, -0.4238, -0.2559, -0.8750, -0.0903, -1.1172, -0.0520,  0.1953, -0.6406,  0.3105,  0.2285, -0.3301, -0.0967,  0.6836,  0.2637,  0.1885],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0274, -0.0019,  0.0160,  ..., -0.0050, -0.0001, -0.0046],
        [-0.0063, -0.0106,  0.0092,  ...,  0.0299, -0.0004,  0.0105],
        [ 0.0097,  0.0308, -0.0075,  ..., -0.0145,  0.0261,  0.0014],
        ...,
        [ 0.0079, -0.0296, -0.0014,  ...,  0.0055,  0.0299, -0.0053],
        [ 0.0303, -0.0076, -0.0005,  ...,  0.0019,  0.0021, -0.0389],
        [ 0.0296, -0.0173,  0.0047,  ...,  0.0272,  0.0163,  0.0187]], device='cuda:0', requires_grad=True)
Q: tensor([-0.1758,  0.1738,  0.0308,  0.2793,  0.7773, -0.2793, -0.5703,  0.0894, -0.6914, -0.5312, -0.1484,  0.1641, -0.0835,  0.2559,  0.0282, -0.3477,  0.5430,  0.3164, -0.4805, -0.6445,  0.2891, -0.1953,  0.4941,  0.0820,  0.0674, -0.1543, -0.2930, -0.3809, -0.2021, -0.5703, -0.8320,  0.2637,
        -0.2021, -0.6836, -0.2217,  0.0289,  0.0654, -0.2070, -0.8789,  0.5078, -0.7969,  0.4629, -0.1650, -0.0179,  0.0037, -0.6562, -0.2598, -0.5117, -1.7812,  0.0250,  0.0388,  0.2695, -0.0029, -0.3047,  0.6484, -0.9102,  0.2061,  0.7695,  0.1836, -0.1836,  0.3164,  0.7930,  0.4375, -0.1011],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.3105,      0.7188,      0.3672,      0.0586,      0.0188,      0.2227,     -0.0188,      0.0625,     -0.2637,      0.5977,     -0.0234,     -0.0021,      0.0503,      0.0374],
        [     0.0000,      0.3320,     -0.4902,      0.1011,     -0.6172,     -0.2412,     -0.0288,     -0.5195,      0.7461,      0.4824,      0.3574,     -0.3848,     -0.1328,      0.2119,     -0.5312],
        [     0.0000,      0.1182,      0.0576,      0.0248,     -0.1504,     -0.3125,     -0.3242,     -0.1816,      0.0483,     -0.2344,      0.4922,     -0.0762,      0.4414,     -0.0981,     -0.0972],
        [     0.0000,     -0.7109,      0.0737,      0.0674,     -0.2168,     -0.7500,     -0.6172,      0.1797,      0.3047,      0.2598,      0.1260,     -0.4570,     -0.2578,      0.5742,     -0.0762],
        [     0.0000,      0.4766,      0.1787,     -0.1260,      0.3672,      0.0012,      0.1021,      0.1035,      0.0381,     -0.1807,      0.7109,     -0.0364,     -0.0762,      0.2266,      0.0732],
        [     0.0000,      0.2275,     -0.4746,     -0.1816,      0.5234,     -0.0598,      0.4902,      0.0510,     -0.2773,     -0.7500,      0.2676,      0.5195,      0.1611,     -0.1826,     -0.0703],
        [     0.0000,     -0.5078,      0.0000,      0.1426,     -0.3535,     -0.8555,     -0.4570,      0.0391,     -0.0278,      0.2334,      0.3340,     -0.1689,      0.2002,     -0.3477,      0.1689],
        [     0.0000,      0.3594,     -0.1030,      0.6250,     -0.7383,      0.2793,      0.2471,     -0.1660,      0.1465,      0.1592,      0.3945,     -0.2715,      0.2793,      0.1885,      0.1177],
        [     0.0000,      0.0393,      0.2969,      0.0432,      0.1387,     -1.0547,      0.0830,     -0.1455,     -0.0026,     -0.3203,     -0.1001,      0.3086,      0.1875,     -0.4590,     -0.1572],
        [     0.0000,     -0.5625,      0.2910,     -0.2236,     -0.0500,      0.0598,     -0.4785,     -0.1245,     -0.0193,      0.0703,      0.0903,      0.2158,     -0.2344,     -0.3789,      0.1523],
        [     0.0000,      0.1709,     -0.1621,      0.0306,     -0.1670,      0.6094,      0.2061,      0.1562,      0.0596,     -0.4180,     -0.1738,     -0.0942,     -0.0640,      0.2266,     -0.2852],
        [     0.0000,     -0.1240,      0.1738,     -0.1670,      0.1011,      0.2500,     -0.0119,      0.1758,     -0.5781,      0.1826,     -0.1309,     -0.0474,     -0.1328,     -0.0977,     -0.0491],
        [     0.0000,      0.2676,     -0.2910,      0.4453,     -0.4492,      0.1953,     -0.0645,     -0.2637,      0.7969,     -0.1475,     -0.0771,     -0.2402,      0.1436,      0.4824,     -0.0942],
        [     0.0000,      0.0684,     -0.0967,      0.2754,     -0.0253,      0.2148,     -0.3145,     -0.0496,     -0.0645,      0.0510,     -0.1367,      0.2949,     -0.1030,     -0.2871,     -0.0408]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4823],
        [0.3346],
        [0.2462],
        [0.1970],
        [0.1653],
        [0.1393],
        [0.1247],
        [0.1056],
        [0.0976],
        [0.0870],
        [0.0820],
        [0.0767],
        [0.0674],
        [0.0650]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4863, 0.5117, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2656, 0.3848, 0.3496, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3320, 0.1953, 0.1904, 0.2832, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1719, 0.2559, 0.1797, 0.1934, 0.1982, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1660, 0.1309, 0.1836, 0.1572, 0.1592, 0.2021, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0972, 0.1318, 0.0894, 0.0913, 0.1396, 0.1904, 0.2598, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1191, 0.1465, 0.0569, 0.1211, 0.1050, 0.2002, 0.1387, 0.1128, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1147, 0.1035, 0.1104, 0.0728, 0.0840, 0.1128, 0.1328, 0.1680, 0.1006, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1040, 0.1025, 0.0938, 0.0786, 0.1084, 0.1206, 0.1006, 0.0840, 0.1289, 0.0791, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1030, 0.0737, 0.0889, 0.0669, 0.0781, 0.1011, 0.0649, 0.1260, 0.0776, 0.0923, 0.1270, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0781, 0.0564, 0.0527, 0.0613, 0.1797, 0.0728, 0.0613, 0.0669, 0.0957, 0.0776, 0.0830, 0.1143, 0.0000, 0.0000, 0.0000],
        [0.0723, 0.0757, 0.0757, 0.0854, 0.0874, 0.0840, 0.0996, 0.0928, 0.0522, 0.0471, 0.0574, 0.1128, 0.0576, 0.0000, 0.0000],
        [0.0596, 0.0947, 0.0479, 0.0417, 0.0339, 0.0674, 0.0698, 0.0684, 0.0583, 0.0747, 0.1621, 0.1021, 0.0732, 0.0464, 0.0000],
        [0.0520, 0.0635, 0.0630, 0.0559, 0.0791, 0.1226, 0.0996, 0.0515, 0.0776, 0.0339, 0.0654, 0.0850, 0.0469, 0.0525, 0.0510]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0444, -0.0026,  0.0096,  ..., -0.0007, -0.0193, -0.0152],
        [-0.0018,  0.0010, -0.0312,  ...,  0.0028,  0.0170, -0.0151],
        [-0.0153,  0.0057, -0.0253,  ..., -0.0347, -0.0128,  0.0075],
        ...,
        [ 0.0497,  0.0129, -0.0081,  ..., -0.0225, -0.0311, -0.0257],
        [ 0.0031,  0.0147, -0.0059,  ..., -0.0187, -0.0194,  0.0096],
        [-0.0070, -0.0079,  0.0023,  ...,  0.0176, -0.0349,  0.0060]], device='cuda:0', requires_grad=True)
K: tensor([-0.0845,  0.0082, -0.6445, -0.3750,  0.1602, -0.9883,  1.3047,  0.0693,  0.0178,  0.0437, -0.0299,  0.0072,  0.5977,  0.3340,  0.0178,  0.6055,  0.1543,  0.0030,  0.4434,  0.6758,  0.3164,  0.2598, -0.6250, -1.5625,  0.1582, -0.0742, -0.0879, -0.4707, -0.6328, -0.0278,  0.0070,  1.1094,
         0.6758, -0.4844,  0.8125,  0.4199, -0.0510, -0.1436, -0.6562, -0.1494,  0.5039,  0.4277,  0.4238, -0.1816, -0.3828,  0.1709, -0.3008, -0.2109,  0.1709, -0.1943,  0.0310,  0.9727, -0.1904, -0.7148,  0.5938, -0.1885, -0.7266, -0.1211, -0.0645, -0.5703, -0.2949, -0.2754, -0.7578,  0.4824],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0084,  0.0092,  0.0262,  ..., -0.0254, -0.0398,  0.0122],
        [-0.0172, -0.0267,  0.0035,  ...,  0.0358, -0.0193, -0.0163],
        [-0.0228, -0.0072,  0.0343,  ...,  0.0087, -0.0033, -0.0057],
        ...,
        [-0.0156, -0.0563, -0.0017,  ..., -0.0058, -0.0055,  0.0079],
        [ 0.0140, -0.0113,  0.0346,  ...,  0.0205, -0.0046, -0.0201],
        [-0.0149,  0.0035,  0.0053,  ...,  0.0306, -0.0116, -0.0017]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.5312,  0.7852,  0.5859, -0.4023,  0.3867, -0.6953,  0.3223, -0.5781, -0.2451, -0.0105,  0.7148, -1.0156, -0.9609, -1.0312,  1.0938,  0.4238,  0.2832,  0.0659,  1.0312, -0.3887, -0.3027,  0.4277,  0.2285, -0.2773,  0.3262,  0.3418,  0.3379,  0.0415, -0.5312,  1.5547, -0.1162,  1.0156,
         0.7617,  0.6680, -0.3340,  0.5781,  0.0928,  0.1689,  0.1245, -0.6484, -0.2256, -0.1064,  0.0217,  0.8672,  1.0781,  0.5820,  0.2637,  0.5508, -0.8398, -0.1426,  0.4414, -0.2207,  0.7383, -0.1582, -0.1060,  0.1875,  0.3594,  0.3008,  0.9023, -0.4297,  0.3848,  0.4648,  0.5977, -0.7656],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.0542,     -0.4512,     -0.5195,      0.1504,     -0.2246,      0.2520,     -0.7188,     -0.4102,     -0.2578,      0.2354,      0.2490,     -0.0031,     -0.1006,     -0.1992],
        [     0.0000,      0.3711,      0.2734,     -0.0540,      0.3242,     -0.1196,     -0.0420,     -0.4414,      0.4023,     -0.2578,     -0.3398,      0.4121,      0.3809,      0.1670,      0.1279],
        [     0.0000,     -0.5273,     -0.5586,     -0.1621,      0.1699,     -0.2754,     -0.3184,     -0.2695,     -0.5195,      0.0201,      0.1484,     -0.0535,      0.1406,     -0.3281,      0.0864],
        [     0.0000,      0.4023,      0.0459,      0.1201,      0.1455,      0.3262,     -0.2656,      0.1494,      0.3066,      0.1206,      0.3027,     -0.3965,     -0.1943,      0.0674,      0.0786],
        [     0.0000,     -0.2373,      0.0991,     -0.0601,     -0.0435,      0.1953,      0.2852,      0.5625,      0.2002,      0.1230,      0.4668,     -0.0508,     -0.6562,     -0.0664,      0.2480],
        [     0.0000,      0.3066,     -0.0825,     -0.0593,      0.3652,      0.6758,      0.9844,      0.0103,      0.3047,     -0.1533,      0.0126,      0.6289,     -0.0342,     -0.3438,      0.1807],
        [     0.0000,      0.2041,     -0.7383,      0.0172,     -0.1289,      0.5195,      0.1543,     -0.0574,     -0.2285,      0.2910,      0.2637,      0.7969,      0.1621,     -0.4863,     -0.0006],
        [     0.0000,     -0.1016,     -0.0378,     -0.4531,     -0.3105,     -0.0148,      0.1475,      0.3828,     -0.1338,      0.2988,      0.4375,      0.2988,     -0.0825,      0.2246,      0.1826],
        [     0.0000,     -0.0159,     -0.1040,     -0.2812,      0.0427,      0.1494,     -0.0334,     -0.2148,      0.2129,     -0.2734,     -0.0947,     -0.1680,     -0.3613,     -0.0747,     -0.3613],
        [     0.0000,     -0.3398,     -0.1484,     -0.4336,     -0.2754,     -0.0189,     -0.4629,      0.2021,     -0.2832,     -0.1123,      0.2061,     -0.1670,     -0.2520,     -0.1367,      0.2832],
        [     0.0000,     -0.3281,     -0.3926,     -0.2451,      0.8320,     -0.0742,     -0.2461,     -0.1553,      0.2031,     -0.0084,      0.0598,      0.3770,     -0.0581,      0.5742,     -0.2520],
        [     0.0000,      0.0491,      0.0488,      0.1709,      0.1914,      0.1523,      0.3223,      0.2500,     -0.3223,     -0.4258,     -0.2275,      0.4453,     -0.2256,     -0.0354,      0.1670],
        [     0.0000,      0.4629,     -0.2188,     -0.3574,     -0.5625,      0.1240,      0.1602,      0.1348,     -0.0242,      0.2266,      0.9961,      0.5352,      0.2021,     -0.2520,      0.0840],
        [     0.0000,      0.2031,      0.1934,      0.0732,      0.4219,      0.8594,      0.6484,     -0.0096,      0.4023,     -0.4277,      0.2334,      0.4902,     -0.1050,      0.0108,     -0.0195]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5104],
        [0.3288],
        [0.2345],
        [0.1948],
        [0.1652],
        [0.1362],
        [0.1260],
        [0.1062],
        [0.0999],
        [0.0899],
        [0.0824],
        [0.0734],
        [0.0735],
        [0.0647]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4062, 0.5938, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2773, 0.3516, 0.3730, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2051, 0.3105, 0.2275, 0.2559, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1982, 0.2227, 0.1787, 0.1738, 0.2266, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1289, 0.1641, 0.0566, 0.2344, 0.2197, 0.1963, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1138, 0.1396, 0.1240, 0.1396, 0.1582, 0.1260, 0.1973, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1143, 0.1074, 0.1270, 0.1211, 0.1206, 0.1064, 0.1611, 0.1416, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1108, 0.1455, 0.0908, 0.1172, 0.0938, 0.1074, 0.1216, 0.1045, 0.1069, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1006, 0.0483, 0.0771, 0.2100, 0.1016, 0.0757, 0.1128, 0.1235, 0.0776, 0.0732, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0747, 0.0669, 0.0645, 0.0874, 0.0928, 0.1611, 0.1416, 0.0649, 0.0952, 0.0747, 0.0771, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0771, 0.0840, 0.0806, 0.0811, 0.0640, 0.0674, 0.0674, 0.0586, 0.0386, 0.0835, 0.1709, 0.1270, 0.0000, 0.0000, 0.0000],
        [0.0835, 0.0713, 0.0481, 0.0996, 0.0747, 0.0752, 0.0588, 0.0781, 0.0698, 0.0737, 0.1104, 0.0962, 0.0608, 0.0000, 0.0000],
        [0.0869, 0.0713, 0.0703, 0.0591, 0.0596, 0.0554, 0.0693, 0.0659, 0.0493, 0.0786, 0.0845, 0.1270, 0.0615, 0.0625, 0.0000],
        [0.0552, 0.0297, 0.0664, 0.0762, 0.0752, 0.0540, 0.0869, 0.0835, 0.0610, 0.0669, 0.0996, 0.0835, 0.0425, 0.0645, 0.0549]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0015, -0.0209, -0.0365,  ..., -0.0097,  0.0060,  0.0027],
        [-0.0377, -0.0018,  0.0060,  ...,  0.0096, -0.0054,  0.0012],
        [ 0.0091, -0.0074,  0.0042,  ...,  0.0294, -0.0100,  0.0150],
        ...,
        [ 0.0118, -0.0319,  0.0073,  ...,  0.0128, -0.0140, -0.0102],
        [-0.0129,  0.0143,  0.0199,  ...,  0.0134,  0.0210, -0.0146],
        [-0.0268, -0.0164, -0.0207,  ..., -0.0423, -0.0039,  0.0145]], device='cuda:0', requires_grad=True)
K: tensor([-0.2393,  0.3867,  0.2305, -0.1060, -0.1934, -0.6836, -0.2373, -0.3379,  1.7344, -0.0591,  0.1426,  0.0850,  0.5078, -0.7500,  0.1250,  0.7500,  0.0297, -0.1201, -0.3848,  0.0962,  0.6914,  0.1250,  0.1533,  0.9102,  0.4023, -0.3086,  1.1484,  0.9727, -0.1182, -0.1099,  0.1523,  0.6289,
         0.6523,  0.0530,  0.2656, -0.4355,  0.6055, -0.2891,  0.7383,  0.2969,  0.8477, -0.4160,  0.7500,  0.2246, -0.5547, -0.2891, -0.3281, -0.1235,  0.4648,  0.0364, -0.5117, -0.9805, -1.2734,  0.6719,  0.5156, -0.0248, -0.9766,  0.4883, -0.9688,  1.0391, -0.1621, -0.4941, -0.6914,  0.5195],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0189, -0.0118, -0.0281,  ..., -0.0169, -0.0218, -0.0357],
        [ 0.0249,  0.0123,  0.0191,  ...,  0.0346,  0.0152,  0.0097],
        [-0.0073,  0.0489,  0.0127,  ..., -0.0073,  0.0193,  0.0296],
        ...,
        [-0.0159,  0.0227, -0.0195,  ..., -0.0313, -0.0002, -0.0092],
        [-0.0022,  0.0103, -0.0246,  ...,  0.0044,  0.0178,  0.0119],
        [ 0.0033,  0.0108,  0.0185,  ..., -0.0225, -0.0213,  0.0074]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.4922, -0.6094, -1.0938,  0.1846, -0.4512, -0.3047, -1.0078,  0.1270,  0.2129, -0.5781,  1.2188, -0.5078, -1.0781, -0.4160, -1.0938,  0.2227,  0.0503, -0.5508,  0.0253,  0.1260, -0.1309,  0.7383, -0.1157,  0.2002, -0.5391,  0.5664,  0.7344, -0.2275,  0.0320, -0.1963,  0.3516, -0.0188,
        -0.1982, -0.4258, -0.7969,  0.6094, -0.0425,  0.4727, -0.0757, -0.6719,  0.6016,  0.7422,  0.2422,  0.5938,  0.8789, -0.8320, -0.2930, -0.4570, -0.4219, -0.6133, -0.6055, -0.3203, -0.8711,  0.4395, -0.3457, -0.0947,  0.0981,  0.3008,  0.4531, -0.7188, -0.1484, -0.1641,  0.5156, -0.7344],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.3770, -0.0776, -0.0845,  0.3887,  0.4062,  0.6016,  0.1328,  0.0447, -0.1631,  0.2158,  0.2656,  0.0864, -0.1367,  0.3145],
        [ 0.0000,  0.2383,  0.2988, -0.1406,  0.0369, -0.1367,  0.1982, -0.2061,  0.0952,  0.2480,  0.1387,  0.2598, -0.3164, -0.2168,  0.1885],
        [ 0.0000,  0.4121,  0.1025,  0.2217,  0.2598,  0.3398,  0.1621, -0.0093, -0.0679, -0.1367,  0.1729,  0.5234,  0.1953, -0.1348, -0.1562],
        [ 0.0000,  0.1128, -0.1084, -0.1328,  0.1309, -0.1270,  0.1973,  0.3262, -0.1602, -0.3906, -0.1338, -0.0376, -0.4844, -0.6523, -0.0474],
        [ 0.0000,  0.2402, -0.8203,  0.5977,  0.5352,  0.4199, -0.0845,  0.1660, -0.3262, -0.2949,  0.2031, -0.0747,  0.5820, -0.2637,  0.1680],
        [ 0.0000,  0.2070,  0.0884,  0.2051,  0.3320,  0.1050,  0.5508, -0.0374,  0.0115,  0.0447,  0.4258,  0.0613,  0.1113, -0.3301, -0.0728],
        [ 0.0000, -0.0613,  0.1025,  0.0557,  0.0537, -0.0708,  0.3398,  0.2139,  0.6758, -0.0698,  0.3086,  0.0591, -0.0021,  0.2236,  0.2949],
        [ 0.0000,  0.2734, -0.2012,  0.0557, -0.1699, -0.0304,  0.0933, -0.0583, -0.0354, -0.2852,  0.3477, -0.0923,  0.0620, -0.3516, -0.2393],
        [ 0.0000, -0.7305, -0.2637,  0.7344,  0.0089, -0.2832,  0.1152,  0.2061, -0.2617, -0.3184,  0.1445, -0.3535, -0.3203, -0.2832, -0.4180],
        [ 0.0000, -0.1113, -0.1484,  0.1553,  0.2139,  0.7656,  0.6367, -0.1436,  0.2402, -0.0035,  0.0278,  0.4023,  0.4062,  0.2490, -0.0496],
        [ 0.0000,  0.0850,  0.0400,  0.0442, -0.1875, -0.1406, -0.1387, -0.2754, -0.6992,  0.0742,  0.7930,  0.4980, -0.0298, -0.2139,  0.0591],
        [ 0.0000, -0.1562, -0.5508,  0.1787, -0.1060, -0.1016, -0.3457, -0.0669, -0.1768, -0.1196,  0.2812,  0.1426, -0.3164,  0.0233,  0.1069],
        [ 0.0000, -0.1982, -0.2080, -0.3848, -0.3789, -0.4492, -0.2217, -0.2754, -0.5664, -0.1016, -0.0286,  0.3770, -0.3457, -0.3281, -0.1338],
        [ 0.0000, -0.6250,  0.1855,  0.3203,  0.3105, -0.0255,  0.4531,  0.4121,  0.0981,  0.1934,  0.5898,  0.4121, -0.2656,  0.1523, -0.0046]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4909],
        [0.3135],
        [0.2463],
        [0.1938],
        [0.1559],
        [0.1355],
        [0.1272],
        [0.1069],
        [0.1004],
        [0.0868],
        [0.0817],
        [0.0759],
        [0.0704],
        [0.0639]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5039, 0.4961, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3652, 0.2891, 0.3457, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2402, 0.1836, 0.3828, 0.1924, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2256, 0.2031, 0.1895, 0.1475, 0.2344, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1768, 0.1621, 0.1855, 0.1299, 0.1338, 0.2109, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1348, 0.1279, 0.1357, 0.1240, 0.2090, 0.1235, 0.1455, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1260, 0.1143, 0.1064, 0.0898, 0.1455, 0.1230, 0.1279, 0.1670, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1147, 0.1172, 0.1553, 0.0698, 0.0957, 0.1157, 0.0879, 0.1436, 0.1011, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1001, 0.0991, 0.1167, 0.0879, 0.1240, 0.0830, 0.0830, 0.1128, 0.1108, 0.0825, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0830, 0.0762, 0.1162, 0.0879, 0.0898, 0.1035, 0.0874, 0.1045, 0.0981, 0.0752, 0.0781, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0806, 0.0908, 0.1035, 0.0605, 0.1045, 0.0737, 0.0830, 0.0986, 0.0737, 0.0449, 0.1064, 0.0801, 0.0000, 0.0000, 0.0000],
        [0.0908, 0.0796, 0.0918, 0.0557, 0.0859, 0.0742, 0.0781, 0.0845, 0.0688, 0.0654, 0.0796, 0.0752, 0.0708, 0.0000, 0.0000],
        [0.0781, 0.0850, 0.0991, 0.0540, 0.0776, 0.0918, 0.0771, 0.0825, 0.0728, 0.0376, 0.0864, 0.0562, 0.0547, 0.0466, 0.0000],
        [0.0752, 0.1089, 0.0854, 0.0461, 0.0530, 0.0742, 0.0479, 0.1167, 0.0615, 0.0481, 0.0535, 0.0669, 0.0554, 0.0435, 0.0635]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0151, -0.0113, -0.0438,  ..., -0.0204,  0.0012, -0.0266],
        [-0.0322, -0.0241,  0.0421,  ...,  0.0246, -0.0094, -0.0058],
        [-0.0442,  0.0072,  0.0107,  ...,  0.0045, -0.0046,  0.0288],
        ...,
        [-0.0037, -0.0271,  0.0105,  ..., -0.0080,  0.0142, -0.0016],
        [-0.0287, -0.0254,  0.0081,  ..., -0.0090, -0.0098,  0.0117],
        [-0.0066,  0.0078, -0.0183,  ..., -0.0226,  0.0093, -0.0065]], device='cuda:0', requires_grad=True)
K: tensor([     0.0195,      0.3164,     -0.5508,     -0.4707,      0.6602,     -0.2793,     -0.5625,     -0.1016,      0.2471,      1.9141,      1.5469,     -0.0162,      0.0923,      0.6172,      0.2773,      0.5469,      0.4141,      0.3633,     -0.0289,      0.2002,      0.1240,      1.0781,
             1.3047,      0.2080,     -0.6016,     -0.7070,     -0.2012,      1.1641,      0.1348,      0.5664,      0.0427,     -0.6484,     -1.6953,     -0.1475,      0.5625,     -0.3418,      0.5586,     -0.4707,      1.1172,      0.0447,     -0.4766,     -0.2832,     -0.9492,      0.5156,
             0.0933,      0.1113,     -0.2754,      1.0078,      0.3672,      0.0859,     -0.7617,     -0.7578,     -0.1270,     -0.2061,      0.6406,      0.4141,      0.5938,     -0.1660,      0.3594,      0.0002,      0.0703,     -0.0352,      0.9141,      0.5156], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[ 0.0113,  0.0053,  0.0258,  ...,  0.0176,  0.0013, -0.0379],
        [-0.0011, -0.0169, -0.0126,  ...,  0.0391,  0.0116, -0.0154],
        [ 0.0432, -0.0192, -0.0093,  ..., -0.0269, -0.0222, -0.0144],
        ...,
        [ 0.0079,  0.0445, -0.0325,  ...,  0.0134, -0.0010,  0.0200],
        [ 0.0087, -0.0054,  0.0043,  ..., -0.0066, -0.0123, -0.0338],
        [-0.0167, -0.0373,  0.0069,  ...,  0.0010, -0.0142, -0.0110]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.6797, -0.4551, -0.3281,  0.0513, -0.2236, -0.0277,  0.4336,  0.2363,  0.9492,  0.1562, -0.1768,  0.7695, -0.2891, -0.2051, -0.1992, -0.1035, -0.4727,  0.1157,  1.0312,  0.4395,  0.7227,  1.7734, -1.1094,  0.1211,  0.5352,  0.2734,  0.8906, -0.1157, -0.7188,  0.0693,  0.4922, -0.5586,
        -0.1089,  0.1807, -1.4375, -0.0085,  1.3125,  0.0918, -0.2266,  0.2490,  0.1436,  0.0591, -0.2217, -0.2539,  0.8906, -0.1670,  0.5195, -0.0698, -0.2109,  0.0623,  0.1113, -0.1738,  0.1172, -0.2197, -0.4043, -0.5977,  0.2793,  0.5625, -0.3477, -0.5469,  0.3223,  0.4688, -0.1670,  0.1494],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.0138,  0.1050, -0.4355,  0.0522, -0.0177, -0.4121,  0.0679, -0.1797, -0.4512, -0.1768, -0.2256, -0.1875, -0.2217, -0.0918],
        [ 0.0000, -0.2334, -0.0522, -0.1001, -0.0369, -0.2715, -0.1289, -0.0302, -0.3906, -0.2285,  0.1670, -0.0967,  0.1035, -0.0271,  0.2021],
        [ 0.0000, -0.2695,  0.4668, -0.2246,  0.5312, -0.0222, -0.1875, -0.1504, -0.0249, -0.2910,  0.2363, -0.1396,  0.3262,  0.5586, -0.1709],
        [ 0.0000, -0.1040, -0.1758, -0.4258,  0.0388, -0.3301, -0.4219,  0.0684, -0.1826, -0.8594, -0.2285, -0.2070, -0.1592, -0.1699, -0.4434],
        [ 0.0000, -0.0845,  0.0510, -0.3086, -0.2773,  0.1758, -0.1533,  0.2949, -0.1748, -0.5508, -0.2256, -0.2207, -0.3164, -0.3809, -0.1709],
        [ 0.0000, -0.0488,  0.0129, -0.0806,  0.4414, -0.0859,  0.0771,  0.3574,  0.1045, -0.0011,  0.1318, -0.0112,  0.1826,  0.1553, -0.0957],
        [ 0.0000, -0.0986, -0.1680, -0.3379,  0.1406, -0.0260,  0.0176,  0.2812,  0.0225, -0.4414,  0.0742, -0.0664, -0.1914, -0.0317,  0.2734],
        [ 0.0000,  0.0195,  0.3008, -0.4961, -0.1826,  0.0092, -0.2695,  0.2217, -0.1289, -0.1865,  0.1592, -0.2930, -0.1260, -0.1152, -0.1553],
        [ 0.0000, -0.0088,  0.1523, -0.1318,  0.2148, -0.1865, -0.1836,  0.1187,  0.1025, -0.1895,  0.2930, -0.2227, -0.0122,  0.4023,  0.1143],
        [ 0.0000, -0.0850,  0.3398,  0.0591,  0.0796,  0.2236,  0.0549,  0.2314,  0.1709, -0.0981, -0.0613,  0.1157, -0.0176,  0.0859,  0.2793],
        [ 0.0000,  0.1162,  0.2461, -0.2891,  0.2578, -0.0908,  0.0262,  0.1992, -0.0918, -0.5859,  0.2773, -0.0084, -0.0248,  0.0786,  0.0962],
        [ 0.0000, -0.1338,  0.0128, -0.4922, -0.0579, -0.2012, -0.1494, -0.0732, -0.2793, -0.3301, -0.1318, -0.1904, -0.2520, -0.2393, -0.1680],
        [ 0.0000,  0.0864,  0.2422, -0.3672, -0.0021,  0.1650, -0.0119,  0.0579, -0.0693, -0.7305,  0.1050, -0.3281, -0.3535, -0.5117,  0.2021],
        [ 0.0000,  0.3672,  0.1270, -0.4922, -0.3516, -0.0143, -0.4531,  0.4355, -0.2041, -0.4473, -0.3418, -0.1196, -0.3066, -0.5508, -0.1748]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4995],
        [0.3452],
        [0.2367],
        [0.2005],
        [0.1684],
        [0.1359],
        [0.1257],
        [0.1104],
        [0.1001],
        [0.0959],
        [0.0846],
        [0.0775],
        [0.0706],
        [0.0658]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4102, 0.5898, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2871, 0.3613, 0.3516, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2324, 0.2344, 0.2461, 0.2871, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1992, 0.2080, 0.2012, 0.1934, 0.1982, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1406, 0.1729, 0.1631, 0.1934, 0.1953, 0.1338, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1167, 0.1875, 0.1377, 0.1523, 0.1260, 0.1475, 0.1318, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0962, 0.0986, 0.1260, 0.1309, 0.1226, 0.1533, 0.1357, 0.1377, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0962, 0.1201, 0.1113, 0.1157, 0.1123, 0.0850, 0.1050, 0.1318, 0.1226, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0845, 0.1211, 0.0967, 0.1094, 0.1016, 0.0996, 0.0854, 0.0938, 0.1128, 0.0952, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0762, 0.0820, 0.0811, 0.0957, 0.1099, 0.1069, 0.0767, 0.0515, 0.1094, 0.0884, 0.1226, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0776, 0.0820, 0.0918, 0.0898, 0.0942, 0.0835, 0.0566, 0.0688, 0.0840, 0.0864, 0.0786, 0.1074, 0.0000, 0.0000, 0.0000],
        [0.0610, 0.0559, 0.0593, 0.0918, 0.0986, 0.0630, 0.0605, 0.1025, 0.0923, 0.0869, 0.0850, 0.0684, 0.0737, 0.0000, 0.0000],
        [0.0559, 0.0986, 0.0618, 0.0684, 0.0698, 0.0579, 0.0576, 0.0630, 0.0732, 0.0640, 0.0630, 0.0664, 0.0859, 0.1138, 0.0000],
        [0.0596, 0.0488, 0.0593, 0.0688, 0.0684, 0.0635, 0.0496, 0.0593, 0.0649, 0.0747, 0.0884, 0.0674, 0.0625, 0.0732, 0.0918]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0235,  0.0130, -0.0217,  ...,  0.0124,  0.0269, -0.0111],
        [ 0.0149,  0.0092, -0.0230,  ..., -0.0162, -0.0067, -0.0183],
        [-0.0303,  0.0353, -0.0039,  ..., -0.0115,  0.0011,  0.0042],
        ...,
        [ 0.0292,  0.0008, -0.0071,  ...,  0.0271, -0.0053, -0.0085],
        [ 0.0147,  0.0019, -0.0394,  ...,  0.0274, -0.0224,  0.0098],
        [-0.0164, -0.0076,  0.0233,  ...,  0.0159, -0.0143,  0.0083]], device='cuda:0', requires_grad=True)
K: tensor([ 0.1396, -0.1328, -0.8359,  0.5117, -0.4766, -0.1328,  0.9336, -0.6445,  0.4180,  0.0947, -0.8516, -0.3301, -0.1680,  0.2754,  0.5117, -0.0713, -0.2148, -0.4043, -0.1240,  0.6016, -0.5391, -0.8164, -1.5156,  0.0080,  0.0674, -0.0221,  0.5859, -1.0469,  0.1260, -0.4883, -0.4453,  0.0933,
        -0.0019,  0.5234, -0.5547, -0.9336, -0.0757,  0.4258,  0.4863,  0.5664, -0.6328,  0.1367,  1.4922, -0.0830, -0.2441, -0.3574, -0.3320,  0.5977, -0.2812, -0.5234,  0.3418,  0.7422, -0.9922, -1.7422,  0.6875,  0.1943, -0.1602, -0.8008, -0.4609, -0.1514, -0.5977, -0.1748,  0.8906,  0.6562],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0150, -0.0057,  0.0057,  ...,  0.0090,  0.0023,  0.0022],
        [ 0.0089, -0.0063,  0.0175,  ..., -0.0186,  0.0088,  0.0204],
        [-0.0195,  0.0227, -0.0108,  ...,  0.0259,  0.0055,  0.0093],
        ...,
        [-0.0114,  0.0329,  0.0107,  ...,  0.0027, -0.0038, -0.0181],
        [ 0.0379, -0.0056, -0.0475,  ..., -0.0291,  0.0022,  0.0296],
        [-0.0268,  0.0242, -0.0472,  ...,  0.0052,  0.0244, -0.0332]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.6445, -1.2812, -0.9961,  0.3145, -0.2891, -0.5664,  0.2373,  0.6094,  0.4629,  0.0427,  0.6797, -0.1514,  0.1689,  0.2598, -0.0723,  0.2158, -0.6094,  0.0398,  0.1553, -0.8008,  0.4297,  0.2598, -0.3320, -0.0083, -0.1729,  0.0801,  0.8828, -0.1963, -0.3359,  0.5469, -0.3535,  0.7539,
        -0.7617,  0.3438,  0.2754, -0.6445,  0.6367, -0.4004,  0.0028,  0.1846, -0.7266,  0.5117,  0.7695,  0.1836, -0.8086,  0.7656, -0.1953,  0.3652, -0.0645,  0.5273,  0.1016, -0.4355,  0.5469, -0.0986,  0.9102,  0.0889,  0.1191,  0.6719, -0.0542,  0.4727, -0.2041,  0.0630,  0.4902,  0.2676],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.3652,      0.3809,      0.5508,      0.3320,      0.0654,      0.2021,      0.2969,      0.1689,      0.6016,      0.3906,      0.5273,      0.2490,      0.8984,      0.7266],
        [     0.0000,      0.2314,      0.2002,      0.3965,      0.2832,     -0.0053,     -0.0245,     -0.0474,     -0.0752,      0.3672,      0.2852,      0.1465,      0.0825,      0.1660,      0.2061],
        [     0.0000,      0.0075,      0.0596,      0.2129,      0.3379,      0.1982,      0.0143,      0.2168,      0.1992,      0.2988,      0.5312,      0.4336,      0.0693,      0.7148,      0.6211],
        [     0.0000,      0.0459,      0.0103,     -0.0254,     -0.0004,     -0.3340,     -0.0659,     -0.0928,     -0.1523,     -0.1416,      0.0942,      0.1108,     -0.1719,      0.1758,      0.0732],
        [     0.0000,      0.2061,      0.1484,      0.3184,      0.3262,     -0.0522,     -0.0613,      0.0522,      0.2080,      0.1475,      0.2383,     -0.0664,     -0.0708,      0.7617,      0.0322],
        [     0.0000,      0.4746,      0.1689,      0.2695,      0.0771,      0.2314,      0.1250,      0.3164,      0.1982,      0.3672,      0.2617,      0.5469,      0.4668,      0.8164,      0.7383],
        [     0.0000,      0.0247,      0.2676,      0.3047,      0.2393,      0.4648,      0.3418,      0.3555,      0.5898,      0.3750,      0.3203,      0.1924,      0.5156,      0.8008,      0.2383],
        [     0.0000,      0.2188,      0.1465,      0.1836,      0.1553,     -0.1250,      0.0850,      0.3125,      0.2402,      0.2041,      0.4648,      0.2227,      0.3105,      0.3770,      0.3398],
        [     0.0000,      0.3613,      0.1377,      0.2598,      0.1865,      0.1650,      0.0123,      0.1079,      0.2930,      0.1230,      0.4668,      0.2422,      0.1172,      0.5156,      0.3887],
        [     0.0000,      0.0757,      0.0645,      0.2305,      0.3691,      0.3398,      0.0100,     -0.3867,      0.3633,      0.1484,      0.4766,      0.1943,      0.4121,      0.5625,      0.4902],
        [     0.0000,      0.0552,      0.1650,      0.1436,      0.1914,      0.0703,     -0.3145,     -0.1221,      0.0757,      0.1079,      0.0132,      0.3242,      0.1924,      0.4395,      0.4570],
        [     0.0000,     -0.0869,     -0.0278,      0.4102,      0.4805,      0.0344,     -0.0088,      0.5195,      0.4121,      0.3555,      0.3281,      0.1138,      0.1895,      0.6055,      0.5312],
        [     0.0000,      0.5664,      0.0996,      0.2041,      0.2256,      0.0337,      0.0293,      0.1196,      0.2734,      0.1377,      0.1196,      0.1768,      0.4316,      0.7109,      0.4434],
        [     0.0000,     -0.1963,     -0.0033,      0.1445,      0.1396,      0.0613,     -0.1846,     -0.0031,      0.0908,      0.2246,      0.3984,      0.1260,      0.0500,      0.2070,      0.4355]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4881],
        [0.3141],
        [0.2409],
        [0.1836],
        [0.1701],
        [0.1400],
        [0.1167],
        [0.1062],
        [0.1033],
        [0.0864],
        [0.0840],
        [0.0783],
        [0.0711],
        [0.0655]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(Lock:0.0002 monet:0.0001 Pak:0.0002 Durant:0.0002 tally:0.0002business:0.0002 800:0.0002 tour:0.0002)
 tour
------
		( monet:0.0001 Pak:0.0002 Durant:0.0002 tally:0.0002business:0.0002 800:0.0002 tour:0.0002 deems:0.0002)
 deems Mars added ccoonRankCS piv Deposit c broccoliherninspiredvered information
@ 1 train 10.9855 , allloss: 43.5509, dt: 1757.25ms, fracRes: 0.0062, norm(attn): 0.0337, norm(output): 0.0732, norm(x): 0.0732, norm(y): 0.9993, norm:30.9702, tok/sec: 74589.21, flops:78.28, batch-reuse:1
@ 2 train 10.9264 , allloss: 43.4402, dt: 1167.11ms, fracRes: 0.0062, norm(attn): 0.0347, norm(output): 0.0742, norm(x): 0.0733, norm(y): 0.9993, norm:30.9212, tok/sec: 112305.08, flops:117.87, batch-reuse:1
@ 3 train 10.8393 , allloss: 43.3010, dt: 1162.10ms, fracRes: 0.0062, norm(attn): 0.0349, norm(output): 0.0742, norm(x): 0.0736, norm(y): 0.9993, norm:31.4105, tok/sec: 112789.02, flops:118.37, batch-reuse:1
@ 4 train 10.7442 , allloss: 43.1751, dt: 1176.26ms, fracRes: 0.0062, norm(attn): 0.0354, norm(output): 0.0752, norm(x): 0.0742, norm(y): 0.9993, norm:32.1910, tok/sec: 111431.33, flops:116.95, batch-reuse:1
@ 5 train 10.6357 , allloss: 43.0618, dt: 1172.59ms, fracRes: 0.0062, norm(attn): 0.0366, norm(output): 0.0757, norm(x): 0.0751, norm(y): 0.9993, norm:33.4708, tok/sec: 111779.68, flops:117.31, batch-reuse:1
@ 6 train 10.5044 , allloss: 42.9367, dt: 1181.50ms, fracRes: 0.0063, norm(attn): 0.0386, norm(output): 0.0771, norm(x): 0.0763, norm(y): 0.9993, norm:36.2036, tok/sec: 110936.48, flops:116.43, batch-reuse:1
@ 7 train 10.4113 , allloss: 42.8406, dt: 1165.99ms, fracRes: 0.0063, norm(attn): 0.0396, norm(output): 0.0786, norm(x): 0.0777, norm(y): 0.9994, norm:38.5195, tok/sec: 112412.36, flops:117.98, batch-reuse:1
@ 8 train 10.3240 , allloss: 42.7102, dt: 1172.01ms, fracRes: 0.0063, norm(attn): 0.0415, norm(output): 0.0791, norm(x): 0.0792, norm(y): 0.9994, norm:40.8092, tok/sec: 111835.23, flops:117.37, batch-reuse:1
@ 9 train 10.2264 , allloss: 42.5189, dt: 1179.71ms, fracRes: 0.0063, norm(attn): 0.0430, norm(output): 0.0811, norm(x): 0.0808, norm(y): 0.9994, norm:42.9355, tok/sec: 111105.55, flops:116.61, batch-reuse:1
@ 10 train 10.1470 , allloss: 42.2818, dt: 1192.01ms, fracRes: 0.0063, norm(attn): 0.0439, norm(output): 0.0830, norm(x): 0.0824, norm(y): 0.9994, norm:44.5988, tok/sec: 109959.19, flops:115.40, batch-reuse:1
@ 11 train 10.1184 , allloss: 42.0096, dt: 1175.00ms, fracRes: 0.0063, norm(attn): 0.0457, norm(output): 0.0854, norm(x): 0.0840, norm(y): 0.9995, norm:45.8375, tok/sec: 111551.03, flops:117.07, batch-reuse:1
@ 12 train 10.0139 , allloss: 41.5847, dt: 1176.53ms, fracRes: 0.0064, norm(attn): 0.0466, norm(output): 0.0864, norm(x): 0.0856, norm(y): 0.9995, norm:47.0473, tok/sec: 111405.63, flops:116.92, batch-reuse:1
@ 13 train 9.9739 , allloss: 41.1300, dt: 1185.03ms, fracRes: 0.0064, norm(attn): 0.0471, norm(output): 0.0869, norm(x): 0.0872, norm(y): 0.9995, norm:47.8235, tok/sec: 110606.51, flops:116.08, batch-reuse:1
@ 14 train 9.9047 , allloss: 40.5508, dt: 1185.95ms, fracRes: 0.0064, norm(attn): 0.0474, norm(output): 0.0884, norm(x): 0.0887, norm(y): 0.9995, norm:48.4755, tok/sec: 110521.03, flops:115.99, batch-reuse:1
@ 15 train 9.8637 , allloss: 39.8988, dt: 1175.64ms, fracRes: 0.0064, norm(attn): 0.0481, norm(output): 0.0913, norm(x): 0.0902, norm(y): 0.9995, norm:48.9811, tok/sec: 111489.95, flops:117.01, batch-reuse:1
@ 16 train 9.8287 , allloss: 39.1528, dt: 1188.73ms, fracRes: 0.0064, norm(attn): 0.0496, norm(output): 0.0933, norm(x): 0.0916, norm(y): 0.9995, norm:49.2238, tok/sec: 110262.04, flops:115.72, batch-reuse:1
@ 17 train 9.7960 , allloss: 38.3167, dt: 1164.82ms, fracRes: 0.0064, norm(attn): 0.0498, norm(output): 0.0938, norm(x): 0.0931, norm(y): 0.9996, norm:49.4480, tok/sec: 112525.89, flops:118.10, batch-reuse:1
@ 18 train 9.7658 , allloss: 37.3905, dt: 1175.95ms, fracRes: 0.0064, norm(attn): 0.0505, norm(output): 0.0947, norm(x): 0.0945, norm(y): 0.9996, norm:49.5377, tok/sec: 111460.31, flops:116.98, batch-reuse:1
@ 19 train 9.6996 , allloss: 36.3411, dt: 1167.84ms, fracRes: 0.0064, norm(attn): 0.0508, norm(output): 0.0962, norm(x): 0.0959, norm(y): 0.9996, norm:49.6050, tok/sec: 112234.30, flops:117.79, batch-reuse:1
@ 20 train 9.6791 , allloss: 35.2587, dt: 1178.67ms, fracRes: 0.0064, norm(attn): 0.0510, norm(output): 0.0991, norm(x): 0.0973, norm(y): 0.9996, norm:49.6146, tok/sec: 111203.47, flops:116.71, batch-reuse:1
@ 21 train 9.6330 , allloss: 34.0781, dt: 1168.71ms, fracRes: 0.0064, norm(attn): 0.0510, norm(output): 0.0991, norm(x): 0.0987, norm(y): 0.9996, norm:49.5106, tok/sec: 112150.87, flops:117.70, batch-reuse:1
@ 22 train 9.6392 , allloss: 32.8945, dt: 1194.27ms, fracRes: 0.0064, norm(attn): 0.0510, norm(output): 0.1016, norm(x): 0.1000, norm(y): 0.9996, norm:49.3654, tok/sec: 109751.13, flops:115.19, batch-reuse:1
@ 23 train 9.6597 , allloss: 31.6906, dt: 1198.05ms, fracRes: 0.0064, norm(attn): 0.0518, norm(output): 0.1016, norm(x): 0.1013, norm(y): 0.9996, norm:49.1318, tok/sec: 109404.49, flops:114.82, batch-reuse:1
@ 24 train 9.6484 , allloss: 30.4250, dt: 1203.85ms, fracRes: 0.0064, norm(attn): 0.0532, norm(output): 0.1021, norm(x): 0.1026, norm(y): 0.9997, norm:48.8374, tok/sec: 108876.94, flops:114.27, batch-reuse:1
@ 25 train 9.5379 , allloss: 29.0534, dt: 1170.06ms, fracRes: 0.0064, norm(attn): 0.0532, norm(output): 0.1035, norm(x): 0.1039, norm(y): 0.9997, norm:48.4264, tok/sec: 112021.96, flops:117.57, batch-reuse:1
@ 26 train 9.5961 , allloss: 27.9116, dt: 1193.95ms, fracRes: 0.0065, norm(attn): 0.0537, norm(output): 0.1074, norm(x): 0.1051, norm(y): 0.9997, norm:47.9099, tok/sec: 109780.28, flops:115.22, batch-reuse:1
@ 27 train 9.5733 , allloss: 26.7585, dt: 1175.35ms, fracRes: 0.0065, norm(attn): 0.0537, norm(output): 0.1074, norm(x): 0.1063, norm(y): 0.9997, norm:47.4311, tok/sec: 111516.95, flops:117.04, batch-reuse:1
@ 28 train 9.5627 , allloss: 25.7384, dt: 1192.75ms, fracRes: 0.0065, norm(attn): 0.0540, norm(output): 0.1089, norm(x): 0.1074, norm(y): 0.9997, norm:47.0547, tok/sec: 109890.57, flops:115.33, batch-reuse:1
@ 29 train 9.5673 , allloss: 24.8987, dt: 1194.42ms, fracRes: 0.0065, norm(attn): 0.0544, norm(output): 0.1094, norm(x): 0.1084, norm(y): 0.9997, norm:46.8345, tok/sec: 109736.96, flops:115.17, batch-reuse:1
@ 30 train 9.5146 , allloss: 24.1652, dt: 1196.01ms, fracRes: 0.0065, norm(attn): 0.0544, norm(output): 0.1099, norm(x): 0.1093, norm(y): 0.9997, norm:46.8971, tok/sec: 109591.46, flops:115.02, batch-reuse:1
@ 31 train 9.5430 , allloss: 23.6875, dt: 1189.70ms, fracRes: 0.0065, norm(attn): 0.0544, norm(output): 0.1099, norm(x): 0.1101, norm(y): 0.9997, norm:47.1789, tok/sec: 110172.72, flops:115.63, batch-reuse:1
@ 32 train 9.5102 , allloss: 23.3285, dt: 1202.12ms, fracRes: 0.0065, norm(attn): 0.0544, norm(output): 0.1108, norm(x): 0.1107, norm(y): 0.9997, norm:47.4228, tok/sec: 109033.95, flops:114.43, batch-reuse:1
@ 33 train 9.4647 , allloss: 23.0311, dt: 1194.50ms, fracRes: 0.0065, norm(attn): 0.0547, norm(output): 0.1108, norm(x): 0.1112, norm(y): 0.9997, norm:47.6467, tok/sec: 109729.47, flops:115.16, batch-reuse:1
@ 34 train 9.4780 , allloss: 22.8994, dt: 1205.42ms, fracRes: 0.0065, norm(attn): 0.0547, norm(output): 0.1099, norm(x): 0.1115, norm(y): 0.9997, norm:47.5544, tok/sec: 108735.89, flops:114.12, batch-reuse:1
@ 35 train 9.4632 , allloss: 22.7433, dt: 1200.02ms, fracRes: 0.0065, norm(attn): 0.0547, norm(output): 0.1113, norm(x): 0.1117, norm(y): 0.9997, norm:47.2632, tok/sec: 109225.03, flops:114.63, batch-reuse:1
@ 36 train 9.4455 , allloss: 22.6343, dt: 1207.66ms, fracRes: 0.0066, norm(attn): 0.0547, norm(output): 0.1113, norm(x): 0.1117, norm(y): 0.9997, norm:46.5712, tok/sec: 108534.03, flops:113.91, batch-reuse:1
@ 37 train 9.4405 , allloss: 22.5269, dt: 1208.51ms, fracRes: 0.0066, norm(attn): 0.0547, norm(output): 0.1113, norm(x): 0.1116, norm(y): 0.9997, norm:45.6598, tok/sec: 108457.85, flops:113.83, batch-reuse:1
@ 38 train 9.4085 , allloss: 22.3664, dt: 1189.64ms, fracRes: 0.0066, norm(attn): 0.0544, norm(output): 0.1113, norm(x): 0.1113, norm(y): 0.9997, norm:44.6658, tok/sec: 110177.42, flops:115.63, batch-reuse:1
@ 39 train 9.4182 , allloss: 22.2682, dt: 1193.52ms, fracRes: 0.0066, norm(attn): 0.0544, norm(output): 0.1108, norm(x): 0.1109, norm(y): 0.9997, norm:43.4559, tok/sec: 109819.49, flops:115.26, batch-reuse:1
@ 40 train 9.3674 , allloss: 22.1334, dt: 1207.21ms, fracRes: 0.0066, norm(attn): 0.0544, norm(output): 0.1099, norm(x): 0.1104, norm(y): 0.9996, norm:42.1334, tok/sec: 108574.52, flops:113.95, batch-reuse:1
@ 41 train 9.3530 , allloss: 22.0706, dt: 1196.63ms, fracRes: 0.0065, norm(attn): 0.0544, norm(output): 0.1099, norm(x): 0.1098, norm(y): 0.9996, norm:40.7152, tok/sec: 109534.12, flops:114.96, batch-reuse:1
@ 42 train 9.3384 , allloss: 22.0405, dt: 1192.79ms, fracRes: 0.0065, norm(attn): 0.0544, norm(output): 0.1099, norm(x): 0.1089, norm(y): 0.9996, norm:39.1099, tok/sec: 109886.75, flops:115.33, batch-reuse:1
@ 43 train 9.3362 , allloss: 21.9962, dt: 1200.13ms, fracRes: 0.0065, norm(attn): 0.0544, norm(output): 0.1089, norm(x): 0.1080, norm(y): 0.9996, norm:37.2743, tok/sec: 109214.92, flops:114.62, batch-reuse:1
@ 44 train 9.3380 , allloss: 21.9977, dt: 1216.64ms, fracRes: 0.0065, norm(attn): 0.0544, norm(output): 0.1074, norm(x): 0.1071, norm(y): 0.9996, norm:35.5086, tok/sec: 107733.00, flops:113.07, batch-reuse:1
@ 45 train 9.2902 , allloss: 22.3170, dt: 1185.04ms, fracRes: 0.0065, norm(attn): 0.0540, norm(output): 0.1074, norm(x): 0.1062, norm(y): 0.9995, norm:34.9424, tok/sec: 110605.39, flops:116.08, batch-reuse:1
@ 46 train 9.2476 , allloss: 23.1145, dt: 1186.86ms, fracRes: 0.0065, norm(attn): 0.0537, norm(output): 0.1074, norm(x): 0.1056, norm(y): 0.9995, norm:36.1665, tok/sec: 110435.58, flops:115.90, batch-reuse:1
@ 47 train 9.2138 , allloss: 23.9357, dt: 1183.49ms, fracRes: 0.0065, norm(attn): 0.0532, norm(output): 0.1074, norm(x): 0.1051, norm(y): 0.9995, norm:37.2655, tok/sec: 110750.16, flops:116.23, batch-reuse:1
@ 48 train 9.1987 , allloss: 24.3175, dt: 1238.24ms, fracRes: 0.0065, norm(attn): 0.0518, norm(output): 0.1064, norm(x): 0.1047, norm(y): 0.9995, norm:37.2366, tok/sec: 105853.47, flops:111.10, batch-reuse:1
@ 49 train 9.1987 , allloss: 23.9918, dt: 1236.78ms, fracRes: 0.0065, norm(attn): 0.0518, norm(output): 0.1035, norm(x): 0.1044, norm(y): 0.9995, norm:36.0899, tok/sec: 105978.21, flops:111.23, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4434, 0.5586, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3340, 0.4629, 0.2031, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2402, 0.2656, 0.2500, 0.2432, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2266, 0.1128, 0.2393, 0.2383, 0.1836, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1416, 0.2256, 0.1660, 0.1221, 0.2061, 0.1387, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1260, 0.1572, 0.0791, 0.1040, 0.2158, 0.1167, 0.2021, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1514, 0.0947, 0.1533, 0.1777, 0.1045, 0.0654, 0.0962, 0.1562, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0981, 0.1377, 0.0894, 0.1797, 0.0474, 0.1270, 0.1245, 0.0845, 0.1118, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1050, 0.1074, 0.1387, 0.1074, 0.1211, 0.0361, 0.1133, 0.0923, 0.1035, 0.0752, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0972, 0.0549, 0.1270, 0.0762, 0.0933, 0.1011, 0.0601, 0.0879, 0.0957, 0.1030, 0.1035, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0786, 0.0928, 0.0684, 0.0825, 0.0684, 0.1484, 0.0981, 0.0894, 0.0835, 0.0532, 0.0679, 0.0684, 0.0000, 0.0000, 0.0000],
        [0.0771, 0.0674, 0.0903, 0.0654, 0.0845, 0.0981, 0.0762, 0.0923, 0.0432, 0.0938, 0.0688, 0.0747, 0.0674, 0.0000, 0.0000],
        [0.0645, 0.0850, 0.0476, 0.0991, 0.0403, 0.0752, 0.0601, 0.0508, 0.1416, 0.0540, 0.0576, 0.0535, 0.0718, 0.0991, 0.0000],
        [0.0664, 0.0708, 0.0603, 0.0869, 0.0664, 0.0820, 0.0486, 0.0625, 0.0625, 0.0708, 0.0583, 0.0894, 0.0603, 0.0505, 0.0645]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0045, -0.0220, -0.0025,  ..., -0.0203,  0.0010, -0.0069],
        [-0.0027, -0.0204, -0.0181,  ...,  0.0375, -0.0026, -0.0242],
        [-0.0040,  0.0212, -0.0107,  ...,  0.0274,  0.0412, -0.0014],
        ...,
        [-0.0048, -0.0002,  0.0058,  ..., -0.0064, -0.0341,  0.0031],
        [ 0.0162, -0.0091,  0.0114,  ...,  0.0116, -0.0147,  0.0091],
        [-0.0057,  0.0569, -0.0030,  ..., -0.0123,  0.0131, -0.0026]], device='cuda:0', requires_grad=True)
K: tensor([ 0.2930,  0.1934, -0.1768, -0.2080,  0.8594,  0.7695,  0.0625,  0.6289, -0.6758, -0.2217, -0.0234,  0.3008,  0.1182, -0.1128, -0.1045,  0.6680,  0.1738,  0.3594, -0.1055,  0.6875,  0.3945, -0.4121,  0.6875, -0.2412, -0.0557, -0.0388, -0.0486,  0.1118,  0.1729,  0.6406,  0.9766,  0.4102,
         0.3867, -0.1533,  0.4336,  0.0369, -0.4512,  0.2930, -0.0508,  0.8281, -0.3828,  0.5977, -0.5312,  1.1953, -0.3516, -0.2734,  0.4746,  0.6055,  0.8984, -0.4121, -0.2422, -0.8594, -0.0864, -1.1172, -0.0469,  0.1855, -0.6367,  0.3105,  0.2188, -0.3457, -0.0830,  0.6602,  0.2656,  0.1631],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0278, -0.0011,  0.0155,  ..., -0.0057,  0.0006, -0.0039],
        [-0.0068, -0.0098,  0.0085,  ...,  0.0291,  0.0003,  0.0113],
        [ 0.0094,  0.0316, -0.0080,  ..., -0.0153,  0.0268,  0.0020],
        ...,
        [ 0.0083, -0.0303, -0.0008,  ...,  0.0063,  0.0292, -0.0059],
        [ 0.0297, -0.0071, -0.0010,  ...,  0.0013,  0.0029, -0.0382],
        [ 0.0300, -0.0181,  0.0053,  ...,  0.0280,  0.0155,  0.0179]], device='cuda:0', requires_grad=True)
Q: tensor([    -0.1738,      0.1719,      0.0298,      0.2910,      0.7812,     -0.2734,     -0.5586,      0.0796,     -0.6992,     -0.5352,     -0.1445,      0.1689,     -0.0933,      0.2500,      0.0156,     -0.3262,      0.5469,      0.3125,     -0.4824,     -0.6562,      0.3145,     -0.2178,
             0.4648,      0.0767,      0.0742,     -0.1445,     -0.2969,     -0.3613,     -0.1924,     -0.5859,     -0.8398,      0.2852,     -0.2197,     -0.6914,     -0.2129,      0.0211,      0.0767,     -0.2100,     -0.8750,      0.5000,     -0.8086,      0.4492,     -0.1807,     -0.0006,
            -0.0007,     -0.6328,     -0.2559,     -0.5312,     -1.7812,      0.0236,      0.0299,      0.2490,     -0.0006,     -0.3066,      0.6445,     -0.9180,      0.1953,      0.7656,      0.1738,     -0.1787,      0.3125,      0.7695,      0.4160,     -0.1055], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.2285,  0.7188,  0.3652,  0.0830,  0.0072,  0.2217,  0.0081,  0.0630, -0.2617,  0.5586, -0.0236, -0.0011,  0.0618,  0.0464],
        [ 0.0000,  0.3242, -0.4980,  0.1055, -0.6211, -0.2656, -0.0283, -0.5000,  0.7539,  0.4648,  0.3281, -0.3496, -0.1582,  0.1914, -0.5312],
        [ 0.0000,  0.1030,  0.0420,  0.0123, -0.1245, -0.3105, -0.3184, -0.1846,  0.0540, -0.2373,  0.4883, -0.0640,  0.4316, -0.0898, -0.0874],
        [ 0.0000, -0.6953,  0.0579,  0.0510, -0.2090, -0.7617, -0.6211,  0.1865,  0.2949,  0.2539,  0.1245, -0.4336, -0.2559,  0.5547, -0.0703],
        [ 0.0000,  0.4629,  0.1582, -0.1494,  0.3750, -0.0223,  0.0928,  0.1187,  0.0303, -0.1943,  0.6953, -0.0128, -0.0864,  0.2080,  0.0718],
        [ 0.0000,  0.2227, -0.4629, -0.1914,  0.5391, -0.0762,  0.4746,  0.0588, -0.2852, -0.7617,  0.2598,  0.5312,  0.1543, -0.1973, -0.0713],
        [ 0.0000, -0.4688,  0.0099,  0.1562, -0.3711, -0.8438, -0.4551,  0.0309, -0.0105,  0.2314,  0.3320, -0.1758,  0.1787, -0.3477,  0.1631],
        [ 0.0000,  0.3398, -0.0972,  0.6016, -0.7344,  0.2520,  0.2354, -0.1514,  0.1299,  0.1338,  0.3496, -0.2480,  0.2559,  0.1592,  0.1187],
        [ 0.0000,  0.0226,  0.2812,  0.0240,  0.1445, -1.0625,  0.0742, -0.1279, -0.0142, -0.3359, -0.1123,  0.3320,  0.1738, -0.4707, -0.1553],
        [ 0.0000, -0.5742,  0.2656, -0.2432, -0.0420,  0.0386, -0.4805, -0.1040, -0.0150,  0.0562,  0.0630,  0.2539, -0.2559, -0.3945,  0.1621],
        [ 0.0000,  0.1689, -0.1357,  0.0527, -0.1387,  0.6406,  0.2217,  0.1299,  0.0623, -0.3867, -0.1455, -0.1387, -0.0295,  0.2637, -0.2754],
        [ 0.0000, -0.1348,  0.1543, -0.1670,  0.0894,  0.2383, -0.0145,  0.1787, -0.5820,  0.1914, -0.1177, -0.0337, -0.1367, -0.1108, -0.0430],
        [ 0.0000,  0.2754, -0.3027,  0.4277, -0.4707,  0.1523, -0.0737, -0.2383,  0.7852, -0.1768, -0.1128, -0.1885,  0.1035,  0.4297, -0.0986],
        [ 0.0000,  0.0635, -0.0957,  0.2734,  0.0017,  0.2158, -0.3086, -0.0554, -0.0566,  0.0630, -0.1289,  0.2969, -0.0933, -0.2695, -0.0300]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4902],
        [0.3369],
        [0.2479],
        [0.1966],
        [0.1657],
        [0.1394],
        [0.1247],
        [0.1059],
        [0.0977],
        [0.0874],
        [0.0819],
        [0.0769],
        [0.0676],
        [0.0650]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5625, 0.4355, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3105, 0.3418, 0.3477, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3340, 0.2100, 0.1670, 0.2891, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2051, 0.2168, 0.1572, 0.1875, 0.2344, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1377, 0.1196, 0.1670, 0.1631, 0.1875, 0.2246, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1133, 0.1230, 0.0908, 0.0898, 0.1523, 0.2168, 0.2148, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1289, 0.1260, 0.0571, 0.1060, 0.1147, 0.2246, 0.1348, 0.1079, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1074, 0.0947, 0.1064, 0.0815, 0.1055, 0.1406, 0.1206, 0.1426, 0.1011, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1040, 0.0894, 0.0801, 0.0815, 0.1108, 0.1416, 0.1167, 0.0840, 0.0962, 0.0957, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0869, 0.0645, 0.0776, 0.0669, 0.0820, 0.1113, 0.0728, 0.1128, 0.0786, 0.0981, 0.1484, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0659, 0.0493, 0.0496, 0.0601, 0.1426, 0.0854, 0.0737, 0.0737, 0.0825, 0.0908, 0.1030, 0.1230, 0.0000, 0.0000, 0.0000],
        [0.0728, 0.0669, 0.0654, 0.0737, 0.0952, 0.1001, 0.0947, 0.0791, 0.0554, 0.0566, 0.0825, 0.1011, 0.0562, 0.0000, 0.0000],
        [0.0635, 0.0732, 0.0488, 0.0435, 0.0457, 0.0840, 0.0601, 0.0591, 0.0583, 0.0845, 0.1729, 0.0889, 0.0688, 0.0481, 0.0000],
        [0.0464, 0.0554, 0.0530, 0.0549, 0.0933, 0.1279, 0.0942, 0.0449, 0.0630, 0.0437, 0.0859, 0.0908, 0.0449, 0.0503, 0.0515]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[     0.0448,     -0.0022,      0.0093,  ...,     -0.0000,     -0.0197,     -0.0158],
        [    -0.0010,      0.0018,     -0.0320,  ...,      0.0033,      0.0162,     -0.0159],
        [    -0.0145,      0.0065,     -0.0260,  ...,     -0.0343,     -0.0135,      0.0067],
        ...,
        [     0.0503,      0.0136,     -0.0087,  ...,     -0.0219,     -0.0316,     -0.0264],
        [     0.0023,      0.0139,     -0.0052,  ...,     -0.0191,     -0.0187,      0.0102],
        [    -0.0062,     -0.0071,      0.0014,  ...,      0.0180,     -0.0357,      0.0052]], device='cuda:0', requires_grad=True)
K: tensor([-0.2051,  0.3750, -0.9219, -0.6719, -0.1689, -0.9492,  0.8164,  0.2256, -0.6016,  0.4453,  0.1553, -0.6914,  1.1016,  0.2441, -0.3340,  0.3516, -0.1553, -0.2393,  0.2598,  0.2812,  0.4551, -0.1738, -1.0781, -1.3516,  0.2178,  0.0145,  0.1846, -0.2598, -0.5898,  0.1182,  0.0879,  1.4062,
         0.6133, -0.0527,  1.0234,  0.0208,  0.3281,  0.3574, -0.4629, -0.5078,  0.7695,  0.4238,  0.3320,  0.2441, -0.3359,  0.0337, -0.4062,  0.2236, -0.3145, -0.1709,  0.3984,  0.4531, -0.0025, -0.8281,  0.9531,  0.3477, -0.6250, -0.3535, -0.7109, -0.5469, -0.2031, -0.7266, -0.9531,  0.3828],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0092,  0.0084,  0.0269,  ..., -0.0258, -0.0390,  0.0129],
        [-0.0180, -0.0275,  0.0042,  ...,  0.0354, -0.0185, -0.0156],
        [-0.0236, -0.0080,  0.0352,  ...,  0.0083, -0.0025, -0.0050],
        ...,
        [-0.0164, -0.0571, -0.0009,  ..., -0.0063, -0.0047,  0.0086],
        [ 0.0148, -0.0105,  0.0338,  ...,  0.0209, -0.0054, -0.0208],
        [-0.0150,  0.0035,  0.0053,  ...,  0.0301, -0.0116, -0.0017]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.1875,  0.4219,  0.8477, -1.0234,  0.1348, -0.3418, -0.1167, -0.2432, -0.4570, -0.5039,  0.7617, -1.4219, -1.0312, -1.0234,  0.9336,  0.2969,  0.6680, -0.2695,  1.3516, -0.9141,  0.0752,  0.0264,  0.3477, -0.1738,  0.8750, -0.0267,  0.1436, -0.3730, -0.9492,  1.4609, -0.3477,  1.3750,
         0.3926,  0.5352, -0.2432, -0.0913,  0.1201,  0.0806,  0.2539, -0.4980,  0.0349,  0.0977, -0.5195,  0.5469,  1.0703,  0.8008,  0.1895,  1.0547, -0.6836, -0.2227,  0.0123, -0.7344,  0.2090, -0.2754,  0.1055, -0.0233,  0.6211,  0.5117,  1.1250, -0.5898,  0.4336,  0.6641,  0.2207, -0.6133],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.2578, -0.7070, -0.6680, -0.0391, -0.0437,  0.0035, -0.9648, -0.6016, -0.3203,  0.1875,  0.0654, -0.1973, -0.3008, -0.3125],
        [ 0.0000,  0.0908,  0.1094, -0.1157,  0.3516,  0.1211,  0.1006, -0.3848,  0.2197, -0.1426, -0.0249,  0.4199,  0.1475,  0.0031,  0.1240],
        [ 0.0000, -0.4629, -0.6914, -0.1436,  0.2061, -0.0625, -0.2539, -0.4258, -0.5547,  0.0952,  0.2676,  0.0298,  0.0991, -0.3613, -0.0645],
        [ 0.0000,  0.0569, -0.2656, -0.0879,  0.1328,  0.3086, -0.3164, -0.0308,  0.0718,  0.0713,  0.2715, -0.3672, -0.2891, -0.0552, -0.1309],
        [ 0.0000, -0.1426,  0.1924,  0.1689,  0.3086,  0.4883,  0.4805,  0.7500,  0.2715,  0.3750,  0.8125,  0.3418, -0.4141, -0.0058,  0.3926],
        [ 0.0000,  0.0835, -0.2217, -0.2305,  0.2949,  0.6484,  0.6445, -0.1289,  0.1553, -0.1040,  0.2734,  0.5547, -0.0383, -0.1992,  0.0500],
        [ 0.0000, -0.0253, -0.8164, -0.1992, -0.1211,  0.5508,  0.0388, -0.1787, -0.3965,  0.2812,  0.5195,  0.6562,  0.0913, -0.4707, -0.0908],
        [ 0.0000, -0.1230, -0.0054, -0.2754, -0.0188,  0.2676,  0.1172,  0.2871, -0.0608,  0.4727,  0.6211,  0.3184, -0.0388,  0.1162,  0.1650],
        [ 0.0000, -0.1523, -0.2598, -0.2461,  0.0615,  0.3066,  0.1162, -0.2178, -0.0806, -0.0825,  0.1670, -0.0698, -0.3086, -0.2227, -0.2227],
        [ 0.0000, -0.2988, -0.1138, -0.2656, -0.0623,  0.2451, -0.1797,  0.2598, -0.1045,  0.1182,  0.5312,  0.0786, -0.0986, -0.0703,  0.2969],
        [ 0.0000, -0.2891, -0.2871, -0.0933,  0.7734,  0.2598,  0.1108,  0.1123,  0.2246,  0.3203,  0.4473,  0.6250,  0.1572,  0.5859, -0.0344],
        [ 0.0000, -0.0811, -0.1045,  0.0160,  0.2754,  0.3223,  0.2676,  0.0850, -0.2676, -0.2480,  0.1318,  0.3320, -0.2539, -0.0327,  0.0923],
        [ 0.0000,  0.1406, -0.2656, -0.3809, -0.3340,  0.2773, -0.0564, -0.0747, -0.0879,  0.2832,  1.0000,  0.3320,  0.0820, -0.2793, -0.0942],
        [ 0.0000,  0.1787,  0.1348,  0.1699,  0.6992,  1.0156,  0.7109, -0.0320,  0.3047, -0.0562,  0.6172,  0.6758, -0.0306,  0.0845,  0.1040]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5257],
        [0.3376],
        [0.2585],
        [0.2009],
        [0.1694],
        [0.1397],
        [0.1354],
        [0.1094],
        [0.1023],
        [0.0953],
        [0.0865],
        [0.0777],
        [0.0736],
        [0.0661]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5078, 0.4922, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3496, 0.3008, 0.3496, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2314, 0.2148, 0.1943, 0.3594, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2178, 0.1641, 0.1738, 0.2812, 0.1641, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1455, 0.1001, 0.0825, 0.3008, 0.1553, 0.2158, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1250, 0.1172, 0.1138, 0.2158, 0.1226, 0.1475, 0.1582, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1157, 0.0854, 0.1006, 0.1953, 0.0884, 0.1475, 0.1348, 0.1328, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1201, 0.1006, 0.0791, 0.1729, 0.0835, 0.1240, 0.1133, 0.1123, 0.0938, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0728, 0.0532, 0.0762, 0.2246, 0.0884, 0.1055, 0.0923, 0.1133, 0.0894, 0.0845, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0923, 0.0620, 0.0649, 0.1475, 0.0820, 0.1094, 0.1035, 0.0835, 0.0933, 0.0752, 0.0869, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0703, 0.0771, 0.0850, 0.1021, 0.0630, 0.0938, 0.0640, 0.0820, 0.0625, 0.0801, 0.1377, 0.0820, 0.0000, 0.0000, 0.0000],
        [0.0708, 0.0571, 0.0569, 0.1172, 0.0603, 0.0981, 0.0649, 0.0962, 0.0645, 0.0752, 0.1050, 0.0747, 0.0591, 0.0000, 0.0000],
        [0.0947, 0.0630, 0.0635, 0.0908, 0.0486, 0.0737, 0.0693, 0.0762, 0.0608, 0.0679, 0.0864, 0.0815, 0.0610, 0.0623, 0.0000],
        [0.0654, 0.0299, 0.0630, 0.1094, 0.0571, 0.0767, 0.0679, 0.0859, 0.0605, 0.0620, 0.0884, 0.0559, 0.0479, 0.0618, 0.0688]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0007, -0.0202, -0.0373,  ..., -0.0100,  0.0057,  0.0019],
        [-0.0375, -0.0013,  0.0058,  ...,  0.0099, -0.0059,  0.0009],
        [ 0.0092, -0.0075,  0.0040,  ...,  0.0292, -0.0097,  0.0148],
        ...,
        [ 0.0110, -0.0325,  0.0081,  ...,  0.0132, -0.0136, -0.0094],
        [-0.0121,  0.0150,  0.0191,  ...,  0.0131,  0.0207, -0.0153],
        [-0.0276, -0.0170, -0.0200,  ..., -0.0418, -0.0035,  0.0153]], device='cuda:0', requires_grad=True)
K: tensor([ 0.0457, -0.3008,  0.1875, -0.0349, -0.3516, -0.8164,  0.1895, -0.7148,  0.8711,  0.2383, -0.1377,  0.6016,  0.4727, -0.2119,  0.5977,  0.0016,  0.5547,  0.1328, -0.3789,  0.1865,  0.5469,  0.1582, -0.5469,  0.7383,  0.1855, -0.3008,  0.8125,  0.0374, -0.1045, -0.3711,  0.4688,  0.2734,
         0.3711,  0.2598,  0.0618, -0.5703,  0.6523, -0.7031,  0.9219, -0.1992,  0.4570, -0.4023,  0.6367,  0.4004,  0.4492, -0.3457, -0.2578, -0.1689,  0.1934, -0.0693, -0.5977, -1.3594, -0.3340, -0.0134,  0.2734, -0.2578, -0.8867,  0.5078, -1.4375,  0.7695, -0.0332, -0.4102,  0.5352,  0.8711],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0196, -0.0124, -0.0273,  ..., -0.0165, -0.0214, -0.0349],
        [ 0.0243,  0.0116,  0.0196,  ...,  0.0347,  0.0159,  0.0102],
        [-0.0065,  0.0495,  0.0119,  ..., -0.0077,  0.0189,  0.0288],
        ...,
        [-0.0152,  0.0233, -0.0203,  ..., -0.0318, -0.0007, -0.0100],
        [-0.0030,  0.0097, -0.0238,  ...,  0.0048,  0.0181,  0.0128],
        [ 0.0026,  0.0103,  0.0191,  ..., -0.0221, -0.0211,  0.0081]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.8594, -1.1641, -1.3203, -0.0825,  0.2578,  0.2168, -0.9492, -0.3594,  0.0737, -0.5938,  1.0391, -0.2949, -1.0000, -0.3398, -0.7812, -0.2021,  0.0215, -1.0078,  0.1436,  0.3496,  0.4043,  0.5703,  0.2363,  0.3809, -0.7344, -0.0065,  0.3496,  0.0096,  0.1914, -0.3633,  0.4297, -0.0830,
        -1.1797, -0.4824, -0.8047,  0.6055,  0.1836, -0.1108,  0.6836, -0.6250,  0.3750,  0.2793, -0.3848,  0.8047,  0.9648, -0.8398, -0.2598, -0.2910, -1.0469, -0.7852, -0.2773, -0.5312, -1.0391,  0.4902,  0.2305, -0.3008,  0.3906,  0.6953,  0.8398, -0.0952, -0.3203, -0.3594,  0.5781, -0.5469],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -0.0286,     -0.1001,      0.3828,      0.0310,      0.1484,      0.2871,      0.1162,     -0.0918,     -0.0525,      0.1807,      0.1279,     -0.0659,     -0.1992,      0.1260],
        [     0.0000,     -0.1533,      0.0011,      0.2197,     -0.1455,     -0.0579,     -0.0281,     -0.0591,     -0.1836,      0.0737,      0.0566,     -0.2373,     -0.4023,     -0.2559,      0.0025],
        [     0.0000,     -0.0762,     -0.1758,      0.4395,     -0.1011,      0.2754,      0.0908,     -0.0130,      0.0189,     -0.2197,      0.2500,     -0.1260,     -0.1729,     -0.1973,     -0.1138],
        [     0.0000,     -0.2832,     -0.2275,      0.2539,     -0.2812,      0.0327,     -0.0044,      0.0070,     -0.1943,     -0.3555,     -0.0942,     -0.2559,     -0.4453,     -0.3711,     -0.1035],
        [     0.0000,     -0.3750,     -0.5703,      0.7266,      0.0625,      0.3926,     -0.0198,      0.2246,      0.0211,     -0.1680,      0.3848,     -0.2461,      0.0820,     -0.1069,      0.1152],
        [     0.0000,     -0.0674,     -0.0972,      0.5430,     -0.0239,      0.1641,      0.2334,      0.1396,      0.0007,     -0.1084,      0.2578,     -0.1738,     -0.1123,     -0.2676,      0.0001],
        [     0.0000,     -0.3027,     -0.1387,      0.5234,     -0.2715,      0.2402,      0.1494,      0.1406,      0.3301,     -0.0894,      0.2871,     -0.1914,     -0.1250,      0.1182,      0.1309],
        [     0.0000,     -0.1758,     -0.4180,      0.3652,     -0.3652,      0.0306,     -0.0598,     -0.0654,     -0.2480,     -0.2949,      0.1660,     -0.2988,     -0.1777,     -0.3770,     -0.2383],
        [     0.0000,     -0.3125,      0.0508,      1.1250,      0.1963,      0.3711,      0.2383,      0.4453,      0.2070,      0.1533,      0.5352,     -0.0430,     -0.0254,      0.1040,      0.0938],
        [     0.0000,     -0.3984,     -0.3477,      0.4707,     -0.1187,      0.1699,      0.1182,     -0.0967,      0.0100,     -0.2051,     -0.0605,     -0.1836,     -0.1357,     -0.1069,     -0.1196],
        [     0.0000,      0.0928,      0.1855,      0.3691,     -0.1104,      0.2891,     -0.0947,      0.1523,     -0.1157,      0.1289,      0.6719,      0.1523,     -0.0327,     -0.0613,      0.0947],
        [     0.0000,     -0.2148,     -0.2197,      0.5000,     -0.1631,      0.3262,     -0.0840,      0.3047,     -0.0918,      0.0576,      0.3906,      0.0552,     -0.1816,      0.0045,      0.2793],
        [     0.0000,     -0.4082,     -0.3984,     -0.0413,     -0.6680,     -0.2539,     -0.3105,     -0.2158,     -0.4434,     -0.3320,     -0.0889,     -0.1475,     -0.4414,     -0.4180,     -0.1611],
        [     0.0000,     -0.7852,     -0.0403,      0.5117,     -0.1377,      0.1572,      0.0400,      0.2715,     -0.0762,     -0.0530,      0.3008,     -0.1582,     -0.3125,     -0.0559,      0.0491]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4985],
        [0.3349],
        [0.2408],
        [0.1966],
        [0.1594],
        [0.1364],
        [0.1315],
        [0.1045],
        [0.0968],
        [0.0897],
        [0.0823],
        [0.0717],
        [0.0698],
        [0.0663]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4453, 0.5547, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2969, 0.3730, 0.3281, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2246, 0.2910, 0.2500, 0.2344, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1875, 0.2432, 0.2021, 0.1875, 0.1797, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1543, 0.2090, 0.1699, 0.1592, 0.1533, 0.1533, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1279, 0.1562, 0.1465, 0.1484, 0.1484, 0.1494, 0.1230, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1260, 0.1582, 0.1348, 0.1240, 0.1201, 0.1196, 0.1011, 0.1152, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1162, 0.1416, 0.1201, 0.1108, 0.1064, 0.1069, 0.0903, 0.1025, 0.1045, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1064, 0.1299, 0.1094, 0.1001, 0.0967, 0.0957, 0.0815, 0.0923, 0.0938, 0.0933, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0918, 0.1196, 0.1011, 0.0928, 0.0898, 0.0894, 0.0747, 0.0854, 0.0869, 0.0864, 0.0815, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0879, 0.1104, 0.0918, 0.0850, 0.0820, 0.0815, 0.0688, 0.0781, 0.0796, 0.0791, 0.0752, 0.0806, 0.0000, 0.0000, 0.0000],
        [0.0825, 0.1016, 0.0854, 0.0781, 0.0757, 0.0752, 0.0654, 0.0728, 0.0737, 0.0732, 0.0698, 0.0752, 0.0713, 0.0000, 0.0000],
        [0.0762, 0.0908, 0.0786, 0.0732, 0.0713, 0.0708, 0.0596, 0.0684, 0.0698, 0.0693, 0.0659, 0.0703, 0.0669, 0.0688, 0.0000],
        [0.0698, 0.0884, 0.0742, 0.0693, 0.0669, 0.0664, 0.0559, 0.0640, 0.0649, 0.0645, 0.0608, 0.0654, 0.0623, 0.0640, 0.0635]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0144, -0.0106, -0.0440,  ..., -0.0198,  0.0004, -0.0258],
        [-0.0314, -0.0248,  0.0424,  ...,  0.0240, -0.0086, -0.0065],
        [-0.0436,  0.0066,  0.0109,  ...,  0.0041, -0.0040,  0.0283],
        ...,
        [-0.0044, -0.0265,  0.0102,  ..., -0.0075,  0.0136, -0.0010],
        [-0.0295, -0.0248,  0.0079,  ..., -0.0084, -0.0106,  0.0124],
        [-0.0074,  0.0085, -0.0186,  ..., -0.0220,  0.0085, -0.0057]], device='cuda:0', requires_grad=True)
K: tensor([-0.3867, -0.4473, -0.6484,  0.1133,  0.6133, -0.4551, -0.3359, -1.0859,  0.3340, -0.2734,  0.2402,  0.3945,  0.4707,  0.8555,  0.2158,  0.3340,  0.0240,  0.0481, -0.2871,  0.2637,  0.4180,  0.1670,  0.2656,  1.0156, -0.3945, -0.2871, -0.4707, -0.2305, -1.1406,  0.4043,  0.3887,  0.3945,
         0.0986, -1.0547, -0.0820,  0.1406, -0.2617, -0.6055,  0.0469,  0.1445, -1.4375,  1.3203,  0.1973,  1.1250, -0.6875,  0.4570, -1.4688,  0.3809,  0.1299, -0.1035, -0.4199,  0.2832, -0.0913, -0.7344, -0.8711, -0.0554,  0.4707, -0.3320, -1.0547, -0.2012, -0.9258, -0.0253,  0.3203, -0.4336],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0121,  0.0047,  0.0260,  ...,  0.0171,  0.0020, -0.0387],
        [-0.0017, -0.0162, -0.0127,  ...,  0.0396,  0.0110, -0.0149],
        [ 0.0430, -0.0185, -0.0093,  ..., -0.0268, -0.0222, -0.0144],
        ...,
        [ 0.0075,  0.0449, -0.0326,  ...,  0.0137, -0.0014,  0.0203],
        [ 0.0084, -0.0052,  0.0037,  ..., -0.0063, -0.0126, -0.0337],
        [-0.0158, -0.0380,  0.0069,  ...,  0.0005, -0.0135, -0.0118]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.0332, -0.1904, -0.8203,  0.2275, -0.1050, -0.1689,  0.0479,  0.7461,  0.1030,  0.0679, -0.5156,  0.4414,  0.3398, -1.0156, -0.4141,  0.2109,  0.6719,  0.3301,  0.4727, -0.8672,  0.0247, -0.3496, -0.5273, -0.5156, -0.1108, -0.0781,  0.6602, -0.4004,  0.0210, -0.1807,  0.3223, -0.7188,
        -0.3242,  0.6484, -0.1641, -0.0447,  1.3203, -0.1943,  0.3125, -0.1572, -1.0781,  0.2500,  0.1309, -0.4141, -0.0165, -0.0234,  0.0047,  0.4297, -0.5391, -0.1035,  0.3398, -0.2344,  0.1631, -0.4707,  0.1250,  0.1875,  0.1250,  0.1260, -1.1719, -0.4746,  0.4863, -0.3672,  0.3145,  0.1484],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.2217,  0.2832,  0.3203,  0.3301,  0.2676,  0.0100,  0.2178,  0.2754,  0.2275,  0.1533,  0.2598,  0.2246,  0.2422,  0.2451],
        [ 0.0000,  0.2266,  0.0986,  0.0845,  0.0620,  0.0552, -0.1758,  0.0177,  0.0505,  0.0310, -0.0283,  0.0513,  0.0128,  0.0422,  0.0254],
        [ 0.0000,  0.2637,  0.1089,  0.0425,  0.0179,  0.0139, -0.1436, -0.0258, -0.0088, -0.0166, -0.0645,  0.0046, -0.0503, -0.0173, -0.0306],
        [ 0.0000,  0.2598,  0.0791,  0.0033, -0.0400, -0.0413, -0.2139, -0.0864, -0.0674, -0.0742, -0.1299, -0.0603, -0.1089, -0.0806, -0.0952],
        [ 0.0000,  0.3027,  0.0942,  0.0297, -0.0073, -0.0099, -0.1758, -0.0505, -0.0344, -0.0437, -0.0952, -0.0277, -0.0786, -0.0461, -0.0649],
        [ 0.0000,  0.2002,  0.1318,  0.1504,  0.1455,  0.1553, -0.0408,  0.1377,  0.1650,  0.1582,  0.1060,  0.1875,  0.1338,  0.1719,  0.1641],
        [ 0.0000,  0.2227,  0.0630, -0.0172, -0.0503, -0.0537, -0.2217, -0.0913, -0.0762, -0.0820, -0.1348, -0.0649, -0.1177, -0.0884, -0.1001],
        [ 0.0000,  0.1992,  0.0337, -0.0491, -0.0864, -0.0845, -0.2500, -0.1240, -0.1079, -0.1147, -0.1680, -0.0977, -0.1484, -0.1191, -0.1309],
        [ 0.0000,  0.1992,  0.0270, -0.0625, -0.0977, -0.1060, -0.2695, -0.1436, -0.1289, -0.1348, -0.1875, -0.1177, -0.1689, -0.1436, -0.1504],
        [ 0.0000,  0.2656,  0.0962,  0.0098, -0.0242, -0.0284, -0.2090, -0.0728, -0.0549, -0.0618, -0.1167, -0.0461, -0.0977, -0.0640, -0.0820],
        [ 0.0000,  0.2256,  0.0420, -0.0359, -0.0703, -0.0786, -0.2432, -0.1162, -0.0981, -0.1069, -0.1582, -0.0874, -0.1406, -0.1099, -0.1191],
        [ 0.0000,  0.2070,  0.0347, -0.0525, -0.0850, -0.0913, -0.2354, -0.1270, -0.1113, -0.1172, -0.1699, -0.0962, -0.1475, -0.1201, -0.1260],
        [ 0.0000,  0.1787,  0.0330, -0.0376, -0.0664, -0.0703, -0.2432, -0.1045, -0.0884, -0.0947, -0.1465, -0.0781, -0.1289, -0.1006, -0.1104],
        [ 0.0000,  0.2383,  0.0608, -0.0052, -0.0427, -0.0461, -0.2207, -0.0874, -0.0708, -0.0815, -0.1357, -0.0615, -0.1128, -0.0835, -0.0947]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4671],
        [0.3175],
        [0.2366],
        [0.1891],
        [0.1576],
        [0.1309],
        [0.1193],
        [0.1069],
        [0.0968],
        [0.0871],
        [0.0800],
        [0.0743],
        [0.0689],
        [0.0636]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4492, 0.5508, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2500, 0.3477, 0.4023, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1875, 0.2500, 0.2793, 0.2812, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1406, 0.1963, 0.2168, 0.2197, 0.2275, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1138, 0.1611, 0.1758, 0.1787, 0.1855, 0.1836, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0991, 0.1309, 0.1504, 0.1514, 0.1572, 0.1562, 0.1533, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0840, 0.1187, 0.1299, 0.1309, 0.1357, 0.1348, 0.1338, 0.1338, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0742, 0.1055, 0.1143, 0.1152, 0.1196, 0.1187, 0.1182, 0.1177, 0.1167, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0659, 0.0938, 0.1021, 0.1035, 0.1069, 0.1064, 0.1060, 0.1060, 0.1050, 0.1045, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0598, 0.0850, 0.0918, 0.0933, 0.0967, 0.0962, 0.0952, 0.0957, 0.0947, 0.0947, 0.0972, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0557, 0.0786, 0.0845, 0.0854, 0.0879, 0.0874, 0.0874, 0.0869, 0.0859, 0.0859, 0.0884, 0.0859, 0.0000, 0.0000, 0.0000],
        [0.0505, 0.0723, 0.0781, 0.0786, 0.0811, 0.0806, 0.0806, 0.0801, 0.0791, 0.0791, 0.0811, 0.0791, 0.0791, 0.0000, 0.0000],
        [0.0469, 0.0669, 0.0723, 0.0728, 0.0752, 0.0747, 0.0742, 0.0742, 0.0737, 0.0732, 0.0752, 0.0737, 0.0737, 0.0732, 0.0000],
        [0.0435, 0.0615, 0.0669, 0.0679, 0.0703, 0.0698, 0.0688, 0.0693, 0.0688, 0.0684, 0.0703, 0.0688, 0.0684, 0.0684, 0.0693]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0234,  0.0132, -0.0215,  ...,  0.0123,  0.0272, -0.0109],
        [ 0.0157,  0.0084, -0.0224,  ..., -0.0154, -0.0074, -0.0191],
        [-0.0310,  0.0361, -0.0045,  ..., -0.0122,  0.0019,  0.0050],
        ...,
        [ 0.0291,  0.0011, -0.0075,  ...,  0.0268, -0.0051, -0.0082],
        [ 0.0153,  0.0013, -0.0387,  ...,  0.0281, -0.0230,  0.0092],
        [-0.0161, -0.0076,  0.0233,  ...,  0.0159, -0.0142,  0.0084]], device='cuda:0', requires_grad=True)
K: tensor([-0.0255,  0.2314, -1.0078, -0.1650,  0.5781, -0.1582,  0.1953, -0.9609, -0.6250, -0.2305,  0.3906, -0.3809, -0.1094, -0.4746, -0.4785,  0.2871,  0.2393, -0.0703, -0.3496,  0.7891, -0.1094, -0.3301, -0.8320, -0.8164, -0.6523,  0.2227,  0.0986, -0.7500,  0.6523,  0.2256, -0.1436, -0.3184,
         0.1660, -0.3496, -0.9102, -0.9531,  0.3516,  0.2891,  0.3379,  0.5781,  0.5898, -0.2441,  0.9297,  0.9141,  0.6875, -0.3301,  0.1309,  0.5781,  0.4102,  0.6406,  0.6797,  0.7070, -0.2217,  0.3965, -0.0615,  0.8945, -0.5703,  0.1582, -1.0547, -0.4180, -1.0234, -0.7031,  0.5234, -0.9180],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0158, -0.0064,  0.0061,  ...,  0.0097,  0.0017,  0.0014],
        [ 0.0081, -0.0055,  0.0170,  ..., -0.0194,  0.0096,  0.0212],
        [-0.0188,  0.0221, -0.0106,  ...,  0.0266,  0.0050,  0.0086],
        ...,
        [-0.0121,  0.0336,  0.0103,  ...,  0.0020, -0.0033, -0.0173],
        [ 0.0372, -0.0048, -0.0480,  ..., -0.0299,  0.0029,  0.0304],
        [-0.0275,  0.0249, -0.0478,  ...,  0.0046,  0.0248, -0.0326]], device='cuda:0', requires_grad=True)
Q: tensor([-0.3105, -0.3340, -0.4277, -0.6094, -0.3984, -1.2500,  0.3223,  0.1514,  0.6836,  0.1377,  1.0781,  0.8867,  0.4512,  0.8672, -0.5898,  0.1426, -0.3359,  0.3164, -0.3457,  0.5508,  0.0894, -0.4238,  0.0188,  0.3574,  0.1245,  0.6406,  0.6094, -0.3613,  0.1348,  0.1465, -0.1602,  0.3281,
        -0.5234, -0.2188,  0.0295, -0.2793,  0.7109,  0.2314, -0.0530,  0.7969, -0.3457, -0.2949,  0.6680, -0.4316, -0.7227, -0.1357,  0.4902, -0.2129,  0.6406,  0.8242,  0.7773, -0.4688,  0.1387, -0.4355, -0.6289,  1.1797,  0.0244,  0.3340,  0.0284, -0.6602, -0.1157, -0.1025,  0.8086,  0.1533],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.2021, 0.3223, 0.3340, 0.3594, 0.3379, 0.3320, 0.3535, 0.3496, 0.3496, 0.3516, 0.3574, 0.3613, 0.3574, 0.3613],
        [0.0000, 0.3281, 0.4785, 0.4863, 0.5273, 0.5117, 0.4941, 0.5195, 0.5078, 0.5039, 0.5312, 0.5078, 0.5078, 0.5078, 0.5195],
        [0.0000, 0.2930, 0.4023, 0.4102, 0.4492, 0.4375, 0.4395, 0.4375, 0.4258, 0.4258, 0.4492, 0.4297, 0.4316, 0.4258, 0.4375],
        [0.0000, 0.3379, 0.4336, 0.4473, 0.4824, 0.4727, 0.4707, 0.4727, 0.4629, 0.4609, 0.4863, 0.4648, 0.4668, 0.4590, 0.4727],
        [0.0000, 0.3496, 0.4355, 0.4512, 0.4863, 0.4766, 0.4668, 0.4727, 0.4609, 0.4590, 0.4863, 0.4629, 0.4629, 0.4570, 0.4688],
        [0.0000, 0.2754, 0.4160, 0.4238, 0.4629, 0.4551, 0.4355, 0.4531, 0.4434, 0.4434, 0.4590, 0.4512, 0.4473, 0.4395, 0.4609],
        [0.0000, 0.3438, 0.4336, 0.4434, 0.4785, 0.4707, 0.4668, 0.4668, 0.4551, 0.4531, 0.4805, 0.4570, 0.4570, 0.4492, 0.4668],
        [0.0000, 0.3535, 0.4355, 0.4414, 0.4766, 0.4688, 0.4668, 0.4629, 0.4531, 0.4512, 0.4785, 0.4531, 0.4531, 0.4473, 0.4629],
        [0.0000, 0.3477, 0.4355, 0.4492, 0.4824, 0.4746, 0.4688, 0.4707, 0.4609, 0.4570, 0.4844, 0.4609, 0.4609, 0.4551, 0.4688],
        [0.0000, 0.3516, 0.4297, 0.4453, 0.4805, 0.4727, 0.4668, 0.4707, 0.4590, 0.4590, 0.4863, 0.4629, 0.4629, 0.4551, 0.4707],
        [0.0000, 0.3438, 0.4160, 0.4277, 0.4590, 0.4512, 0.4492, 0.4473, 0.4355, 0.4336, 0.4609, 0.4355, 0.4355, 0.4297, 0.4434],
        [0.0000, 0.3574, 0.4355, 0.4395, 0.4707, 0.4629, 0.4668, 0.4570, 0.4453, 0.4453, 0.4707, 0.4453, 0.4473, 0.4414, 0.4570],
        [0.0000, 0.3555, 0.4316, 0.4395, 0.4727, 0.4648, 0.4609, 0.4609, 0.4492, 0.4473, 0.4746, 0.4492, 0.4512, 0.4434, 0.4590],
        [0.0000, 0.3496, 0.4336, 0.4473, 0.4805, 0.4766, 0.4648, 0.4707, 0.4590, 0.4570, 0.4844, 0.4590, 0.4590, 0.4531, 0.4688]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4455],
        [0.2973],
        [0.2250],
        [0.1803],
        [0.1497],
        [0.1260],
        [0.1128],
        [0.1002],
        [0.0906],
        [0.0817],
        [0.0754],
        [0.0696],
        [0.0643],
        [0.0599]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( the:0.0178 the:0.0173 the:0.0173 the:0.0203.:0.0167.:0.0178 the:0.0173.:0.0173)
.
------
		( the:0.0173 the:0.0173 the:0.0203.:0.0167.:0.0178 the:0.0173.:0.0173
:0.1396)

 the.
.
.
.
.
.
.
@ 50 train 9.1681 , allloss: 23.3657, dt: 1631.00ms, fracRes: 0.0065, norm(attn): 0.0513, norm(output): 0.1035, norm(x): 0.1040, norm(y): 0.9994, norm:33.6403, tok/sec: 80362.98, flops:84.34, batch-reuse:1
@ 51 train 9.1844 , allloss: 23.0238, dt: 1233.51ms, fracRes: 0.0065, norm(attn): 0.0510, norm(output): 0.1021, norm(x): 0.1032, norm(y): 0.9994, norm:30.5344, tok/sec: 106259.70, flops:111.52, batch-reuse:1
@ 52 train 9.0943 , allloss: 23.2115, dt: 1237.76ms, fracRes: 0.0066, norm(attn): 0.0508, norm(output): 0.1021, norm(x): 0.1025, norm(y): 0.9994, norm:29.1999, tok/sec: 105894.21, flops:111.14, batch-reuse:1
@ 53 train 9.0914 , allloss: 22.8039, dt: 1239.80ms, fracRes: 0.0066, norm(attn): 0.0510, norm(output): 0.1035, norm(x): 0.1038, norm(y): 0.9994, norm:29.8963, tok/sec: 105720.30, flops:110.96, batch-reuse:1
@ 54 train 9.0706 , allloss: 22.3859, dt: 1227.59ms, fracRes: 0.0066, norm(attn): 0.0510, norm(output): 0.1055, norm(x): 0.1047, norm(y): 0.9994, norm:30.0323, tok/sec: 106771.82, flops:112.06, batch-reuse:1
@ 55 train 9.1080 , allloss: 22.2956, dt: 1184.82ms, fracRes: 0.0066, norm(attn): 0.0510, norm(output): 0.1069, norm(x): 0.1049, norm(y): 0.9994, norm:29.4127, tok/sec: 110625.71, flops:116.10, batch-reuse:1
@ 56 train 8.9951 , allloss: 22.1323, dt: 1216.04ms, fracRes: 0.0066, norm(attn): 0.0510, norm(output): 0.1035, norm(x): 0.1044, norm(y): 0.9994, norm:28.1068, tok/sec: 107785.96, flops:113.12, batch-reuse:1
@ 57 train 8.9310 , allloss: 22.3131, dt: 1174.84ms, fracRes: 0.0066, norm(attn): 0.0508, norm(output): 0.1035, norm(x): 0.1032, norm(y): 0.9993, norm:26.5792, tok/sec: 111565.45, flops:117.09, batch-reuse:1
@ 58 train 8.9578 , allloss: 22.7974, dt: 1186.50ms, fracRes: 0.0065, norm(attn): 0.0505, norm(output): 0.1016, norm(x): 0.1016, norm(y): 0.9993, norm:25.5173, tok/sec: 110469.02, flops:115.94, batch-reuse:1
@ 59 train 8.8373 , allloss: 23.0692, dt: 1203.40ms, fracRes: 0.0065, norm(attn): 0.0498, norm(output): 0.1011, norm(x): 0.1003, norm(y): 0.9993, norm:24.5248, tok/sec: 108917.88, flops:114.31, batch-reuse:1
@ 60 train 8.8584 , allloss: 23.2375, dt: 1218.30ms, fracRes: 0.0065, norm(attn): 0.0496, norm(output): 0.1011, norm(x): 0.0997, norm(y): 0.9993, norm:24.0002, tok/sec: 107585.66, flops:112.91, batch-reuse:1
@ 61 train 8.8377 , allloss: 23.6993, dt: 1235.17ms, fracRes: 0.0065, norm(attn): 0.0483, norm(output): 0.0991, norm(x): 0.0984, norm(y): 0.9992, norm:23.1045, tok/sec: 106116.17, flops:111.37, batch-reuse:1
@ 62 train 8.8117 , allloss: 23.8152, dt: 1217.50ms, fracRes: 0.0065, norm(attn): 0.0479, norm(output): 0.0986, norm(x): 0.0976, norm(y): 0.9992, norm:21.9855, tok/sec: 107656.84, flops:112.99, batch-reuse:1
@ 63 train 8.7885 , allloss: 23.9743, dt: 1224.62ms, fracRes: 0.0065, norm(attn): 0.0471, norm(output): 0.0991, norm(x): 0.0983, norm(y): 0.9992, norm:21.3732, tok/sec: 107030.47, flops:112.33, batch-reuse:1
@ 64 train 8.7570 , allloss: 22.2339, dt: 1203.20ms, fracRes: 0.0066, norm(attn): 0.0493, norm(output): 0.1021, norm(x): 0.1025, norm(y): 0.9992, norm:21.5244, tok/sec: 108936.07, flops:114.33, batch-reuse:1
@ 65 train 8.7557 , allloss: 21.9296, dt: 1225.21ms, fracRes: 0.0066, norm(attn): 0.0491, norm(output): 0.1035, norm(x): 0.1039, norm(y): 0.9993, norm:21.5973, tok/sec: 106979.49, flops:112.28, batch-reuse:1
@ 66 train 8.7293 , allloss: 21.7457, dt: 1221.58ms, fracRes: 0.0066, norm(attn): 0.0483, norm(output): 0.1035, norm(x): 0.1039, norm(y): 0.9992, norm:20.5416, tok/sec: 107297.38, flops:112.61, batch-reuse:1
@ 67 train 8.6109 , allloss: 21.3193, dt: 1211.97ms, fracRes: 0.0066, norm(attn): 0.0479, norm(output): 0.1035, norm(x): 0.1042, norm(y): 0.9992, norm:19.6891, tok/sec: 108148.25, flops:113.50, batch-reuse:1
@ 68 train 8.6387 , allloss: 21.2711, dt: 1188.53ms, fracRes: 0.0066, norm(attn): 0.0471, norm(output): 0.1035, norm(x): 0.1040, norm(y): 0.9992, norm:18.7777, tok/sec: 110281.08, flops:115.74, batch-reuse:1
@ 69 train 8.5628 , allloss: 20.8709, dt: 1200.93ms, fracRes: 0.0065, norm(attn): 0.0466, norm(output): 0.1035, norm(x): 0.1041, norm(y): 0.9992, norm:17.3155, tok/sec: 109142.03, flops:114.55, batch-reuse:1
@ 70 train 8.5354 , allloss: 19.9272, dt: 1191.91ms, fracRes: 0.0065, norm(attn): 0.0466, norm(output): 0.1074, norm(x): 0.1055, norm(y): 0.9992, norm:15.8715, tok/sec: 109967.86, flops:115.41, batch-reuse:1
@ 71 train 8.4936 , allloss: 19.5909, dt: 1210.68ms, fracRes: 0.0065, norm(attn): 0.0466, norm(output): 0.1074, norm(x): 0.1060, norm(y): 0.9992, norm:14.7647, tok/sec: 108263.00, flops:113.62, batch-reuse:1
@ 72 train 8.4839 , allloss: 19.6411, dt: 1212.12ms, fracRes: 0.0065, norm(attn): 0.0459, norm(output): 0.1074, norm(x): 0.1058, norm(y): 0.9992, norm:13.8845, tok/sec: 108134.27, flops:113.49, batch-reuse:1
@ 73 train 8.4904 , allloss: 18.8093, dt: 1201.16ms, fracRes: 0.0065, norm(attn): 0.0461, norm(output): 0.1084, norm(x): 0.1067, norm(y): 0.9992, norm:12.5522, tok/sec: 109120.78, flops:114.52, batch-reuse:1
@ 74 train 8.4363 , allloss: 18.9738, dt: 1211.62ms, fracRes: 0.0065, norm(attn): 0.0449, norm(output): 0.1074, norm(x): 0.1059, norm(y): 0.9992, norm:11.8972, tok/sec: 108179.19, flops:113.54, batch-reuse:1
@ 75 train 8.7900 , allloss: 18.4934, dt: 1230.54ms, fracRes: 0.0065, norm(attn): 0.0466, norm(output): 0.1089, norm(x): 0.1079, norm(y): 0.9992, norm:12.5837, tok/sec: 106515.77, flops:111.79, batch-reuse:1
@ 76 train 8.3850 , allloss: 17.9678, dt: 1225.37ms, fracRes: 0.0065, norm(attn): 0.0459, norm(output): 0.1094, norm(x): 0.1084, norm(y): 0.9993, norm:12.1518, tok/sec: 106965.33, flops:112.26, batch-reuse:1
@ 77 train 8.7837 , allloss: 18.7285, dt: 1187.21ms, fracRes: 0.0065, norm(attn): 0.0452, norm(output): 0.1084, norm(x): 0.1077, norm(y): 0.9992, norm:10.9893, tok/sec: 110403.26, flops:115.87, batch-reuse:1
@ 78 train 8.5136 , allloss: 18.7589, dt: 1219.71ms, fracRes: 0.0065, norm(attn): 0.0439, norm(output): 0.1084, norm(x): 0.1068, norm(y): 0.9992, norm:10.3733, tok/sec: 107461.60, flops:112.78, batch-reuse:1
@ 79 train 8.2541 , allloss: 17.6644, dt: 1194.82ms, fracRes: 0.0065, norm(attn): 0.0442, norm(output): 0.1094, norm(x): 0.1089, norm(y): 0.9993, norm:9.5586, tok/sec: 109700.45, flops:115.13, batch-reuse:1
@ 80 train 8.2473 , allloss: 17.3806, dt: 1215.05ms, fracRes: 0.0065, norm(attn): 0.0432, norm(output): 0.1099, norm(x): 0.1096, norm(y): 0.9993, norm:8.2886, tok/sec: 107873.35, flops:113.22, batch-reuse:1
@ 81 train 8.2501 , allloss: 18.6405, dt: 1233.37ms, fracRes: 0.0065, norm(attn): 0.0427, norm(output): 0.1094, norm(x): 0.1086, norm(y): 0.9992, norm:10.6040, tok/sec: 106271.12, flops:111.53, batch-reuse:1
@ 82 train 8.1667 , allloss: 17.9487, dt: 1229.16ms, fracRes: 0.0066, norm(attn): 0.0430, norm(output): 0.1113, norm(x): 0.1117, norm(y): 0.9993, norm:9.7764, tok/sec: 106635.21, flops:111.92, batch-reuse:1
@ 83 train 8.1585 , allloss: 16.7188, dt: 1239.12ms, fracRes: 0.0066, norm(attn): 0.0435, norm(output): 0.1152, norm(x): 0.1134, norm(y): 0.9993, norm:8.4165, tok/sec: 105778.25, flops:111.02, batch-reuse:1
@ 84 train 8.1569 , allloss: 16.8233, dt: 1215.02ms, fracRes: 0.0066, norm(attn): 0.0427, norm(output): 0.1152, norm(x): 0.1134, norm(y): 0.9993, norm:7.7863, tok/sec: 107876.55, flops:113.22, batch-reuse:1
@ 85 train 8.0900 , allloss: 17.2344, dt: 1211.48ms, fracRes: 0.0066, norm(attn): 0.0405, norm(output): 0.1123, norm(x): 0.1127, norm(y): 0.9993, norm:8.2535, tok/sec: 108191.34, flops:113.55, batch-reuse:1
@ 86 train 8.0289 , allloss: 16.2458, dt: 1208.16ms, fracRes: 0.0067, norm(attn): 0.0422, norm(output): 0.1167, norm(x): 0.1156, norm(y): 0.9993, norm:7.0589, tok/sec: 108489.25, flops:113.86, batch-reuse:1
@ 87 train 8.0714 , allloss: 16.1221, dt: 1216.90ms, fracRes: 0.0068, norm(attn): 0.0422, norm(output): 0.1177, norm(x): 0.1167, norm(y): 0.9993, norm:7.2030, tok/sec: 107709.85, flops:113.04, batch-reuse:1
@ 88 train 8.0056 , allloss: 16.3521, dt: 1200.21ms, fracRes: 0.0068, norm(attn): 0.0410, norm(output): 0.1172, norm(x): 0.1161, norm(y): 0.9993, norm:7.8303, tok/sec: 109207.63, flops:114.62, batch-reuse:1
@ 89 train 7.9389 , allloss: 16.2961, dt: 1196.76ms, fracRes: 0.0068, norm(attn): 0.0393, norm(output): 0.1167, norm(x): 0.1151, norm(y): 0.9993, norm:7.6141, tok/sec: 109522.30, flops:114.95, batch-reuse:1
@ 90 train 7.9656 , allloss: 15.4032, dt: 1218.43ms, fracRes: 0.0070, norm(attn): 0.0408, norm(output): 0.1177, norm(x): 0.1176, norm(y): 0.9994, norm:6.6181, tok/sec: 107574.39, flops:112.90, batch-reuse:1
@ 91 train 7.9211 , allloss: 15.0636, dt: 1244.07ms, fracRes: 0.0071, norm(attn): 0.0417, norm(output): 0.1187, norm(x): 0.1190, norm(y): 0.9994, norm:6.2250, tok/sec: 105357.71, flops:110.57, batch-reuse:1
@ 92 train 7.8647 , allloss: 15.0294, dt: 1237.70ms, fracRes: 0.0072, norm(attn): 0.0415, norm(output): 0.1191, norm(x): 0.1192, norm(y): 0.9994, norm:6.3695, tok/sec: 105899.98, flops:111.14, batch-reuse:1
@ 93 train 7.8476 , allloss: 14.9170, dt: 1224.17ms, fracRes: 0.0072, norm(attn): 0.0415, norm(output): 0.1196, norm(x): 0.1195, norm(y): 0.9994, norm:6.1921, tok/sec: 107069.97, flops:112.37, batch-reuse:1
@ 94 train 8.0401 , allloss: 14.6833, dt: 1228.90ms, fracRes: 0.0073, norm(attn): 0.0405, norm(output): 0.1226, norm(x): 0.1201, norm(y): 0.9994, norm:5.9601, tok/sec: 106658.34, flops:111.94, batch-reuse:1
@ 95 train 7.8104 , allloss: 14.7251, dt: 1207.62ms, fracRes: 0.0073, norm(attn): 0.0398, norm(output): 0.1191, norm(x): 0.1196, norm(y): 0.9994, norm:6.6194, tok/sec: 108537.14, flops:113.91, batch-reuse:1
@ 96 train 7.7227 , allloss: 16.1886, dt: 1194.24ms, fracRes: 0.0070, norm(attn): 0.0386, norm(output): 0.1172, norm(x): 0.1168, norm(y): 0.9994, norm:16.2036, tok/sec: 109753.06, flops:115.19, batch-reuse:1
@ 97 train 7.7419 , allloss: 13.7242, dt: 1217.69ms, fracRes: 0.0073, norm(attn): 0.0417, norm(output): 0.1230, norm(x): 0.1211, norm(y): 0.9995, norm:5.8354, tok/sec: 107639.56, flops:112.97, batch-reuse:1
@ 98 train 7.7736 , allloss: 13.3769, dt: 1216.41ms, fracRes: 0.0075, norm(attn): 0.0422, norm(output): 0.1250, norm(x): 0.1238, norm(y): 0.9995, norm:5.5436, tok/sec: 107752.73, flops:113.09, batch-reuse:1
@ 99 train 7.7010 , allloss: 13.7744, dt: 1203.25ms, fracRes: 0.0072, norm(attn): 0.0398, norm(output): 0.1240, norm(x): 0.1220, norm(y): 0.9995, norm:5.8229, tok/sec: 108931.28, flops:114.33, batch-reuse:1
@ 100 train 7.6788 , allloss: 13.7304, dt: 1213.49ms, fracRes: 0.0071, norm(attn): 0.0398, norm(output): 0.1221, norm(x): 0.1203, norm(y): 0.9995, norm:6.9117, tok/sec: 108012.28, flops:113.36, batch-reuse:1
@ 101 train 7.5775 , allloss: 12.6629, dt: 1189.21ms, fracRes: 0.0076, norm(attn): 0.0430, norm(output): 0.1260, norm(x): 0.1257, norm(y): 0.9996, norm:4.8905, tok/sec: 110218.16, flops:115.68, batch-reuse:1
@ 102 train 7.6051 , allloss: 12.7838, dt: 1179.91ms, fracRes: 0.0074, norm(attn): 0.0420, norm(output): 0.1260, norm(x): 0.1253, norm(y): 0.9996, norm:4.5351, tok/sec: 111086.58, flops:116.59, batch-reuse:1
@ 103 train 7.6146 , allloss: 12.9583, dt: 1206.29ms, fracRes: 0.0071, norm(attn): 0.0408, norm(output): 0.1250, norm(x): 0.1245, norm(y): 0.9996, norm:5.2720, tok/sec: 108657.49, flops:114.04, batch-reuse:1
@ 104 train 7.6514 , allloss: 12.6116, dt: 1218.11ms, fracRes: 0.0072, norm(attn): 0.0422, norm(output): 0.1270, norm(x): 0.1268, norm(y): 0.9996, norm:4.6476, tok/sec: 107602.42, flops:112.93, batch-reuse:1
@ 105 train 7.6057 , allloss: 12.4447, dt: 1241.34ms, fracRes: 0.0072, norm(attn): 0.0427, norm(output): 0.1270, norm(x): 0.1278, norm(y): 0.9997, norm:4.6883, tok/sec: 105589.11, flops:110.82, batch-reuse:1
@ 106 train 7.5301 , allloss: 12.6123, dt: 1226.35ms, fracRes: 0.0071, norm(attn): 0.0425, norm(output): 0.1260, norm(x): 0.1263, norm(y): 0.9997, norm:4.8924, tok/sec: 106879.88, flops:112.17, batch-reuse:1
@ 107 train 7.5106 , allloss: 12.6271, dt: 1239.51ms, fracRes: 0.0070, norm(attn): 0.0422, norm(output): 0.1260, norm(x): 0.1256, norm(y): 0.9997, norm:5.5690, tok/sec: 105744.70, flops:110.98, batch-reuse:1
@ 108 train 7.4794 , allloss: 12.7578, dt: 1245.39ms, fracRes: 0.0070, norm(attn): 0.0427, norm(output): 0.1260, norm(x): 0.1259, norm(y): 0.9997, norm:5.5635, tok/sec: 105245.51, flops:110.46, batch-reuse:1
@ 109 train 7.4271 , allloss: 12.1247, dt: 1242.88ms, fracRes: 0.0071, norm(attn): 0.0439, norm(output): 0.1309, norm(x): 0.1284, norm(y): 0.9997, norm:4.9122, tok/sec: 105458.26, flops:110.68, batch-reuse:1
@ 110 train 7.4755 , allloss: 11.8703, dt: 1242.09ms, fracRes: 0.0071, norm(attn): 0.0454, norm(output): 0.1309, norm(x): 0.1293, norm(y): 0.9998, norm:4.9155, tok/sec: 105525.47, flops:110.75, batch-reuse:1
@ 111 train 7.4531 , allloss: 11.7780, dt: 1239.51ms, fracRes: 0.0071, norm(attn): 0.0454, norm(output): 0.1309, norm(x): 0.1295, norm(y): 0.9998, norm:4.5020, tok/sec: 105745.27, flops:110.98, batch-reuse:1
@ 112 train 7.4529 , allloss: 11.7896, dt: 1208.44ms, fracRes: 0.0070, norm(attn): 0.0442, norm(output): 0.1318, norm(x): 0.1295, norm(y): 0.9998, norm:4.4708, tok/sec: 108463.88, flops:113.83, batch-reuse:1
@ 113 train 7.3967 , allloss: 11.6485, dt: 1213.75ms, fracRes: 0.0070, norm(attn): 0.0449, norm(output): 0.1309, norm(x): 0.1297, norm(y): 0.9998, norm:4.6521, tok/sec: 107989.68, flops:113.34, batch-reuse:1
@ 114 train 7.3987 , allloss: 11.4029, dt: 1206.08ms, fracRes: 0.0071, norm(attn): 0.0454, norm(output): 0.1328, norm(x): 0.1314, norm(y): 0.9998, norm:4.1438, tok/sec: 108676.41, flops:114.06, batch-reuse:1
@ 115 train 7.3483 , allloss: 11.5711, dt: 1240.39ms, fracRes: 0.0070, norm(attn): 0.0447, norm(output): 0.1318, norm(x): 0.1306, norm(y): 0.9999, norm:4.4713, tok/sec: 105670.07, flops:110.90, batch-reuse:1
@ 116 train 7.3145 , allloss: 11.6462, dt: 1235.36ms, fracRes: 0.0070, norm(attn): 0.0437, norm(output): 0.1328, norm(x): 0.1316, norm(y): 0.9999, norm:4.4572, tok/sec: 106099.91, flops:111.35, batch-reuse:1
@ 117 train 7.3072 , allloss: 11.6130, dt: 1199.61ms, fracRes: 0.0070, norm(attn): 0.0444, norm(output): 0.1328, norm(x): 0.1319, norm(y): 0.9999, norm:4.3894, tok/sec: 109262.24, flops:114.67, batch-reuse:1
@ 118 train 7.3167 , allloss: 11.5192, dt: 1226.49ms, fracRes: 0.0070, norm(attn): 0.0444, norm(output): 0.1328, norm(x): 0.1319, norm(y): 0.9999, norm:4.2329, tok/sec: 106867.33, flops:112.16, batch-reuse:1
@ 119 train 7.2708 , allloss: 11.4064, dt: 1225.17ms, fracRes: 0.0070, norm(attn): 0.0444, norm(output): 0.1318, norm(x): 0.1319, norm(y): 0.9999, norm:4.1538, tok/sec: 106982.84, flops:112.28, batch-reuse:1
@ 120 train 7.4374 , allloss: 11.1505, dt: 1205.66ms, fracRes: 0.0070, norm(attn): 0.0461, norm(output): 0.1328, norm(x): 0.1323, norm(y): 0.9999, norm:3.5751, tok/sec: 108714.34, flops:114.10, batch-reuse:1
@ 121 train 7.4830 , allloss: 11.0655, dt: 1226.03ms, fracRes: 0.0071, norm(attn): 0.0466, norm(output): 0.1328, norm(x): 0.1330, norm(y): 1.0000, norm:3.5678, tok/sec: 106908.03, flops:112.20, batch-reuse:1
@ 122 train 7.4426 , allloss: 11.0274, dt: 1213.77ms, fracRes: 0.0070, norm(attn): 0.0457, norm(output): 0.1338, norm(x): 0.1332, norm(y): 1.0000, norm:3.6662, tok/sec: 107987.67, flops:113.34, batch-reuse:1
@ 123 train 7.3064 , allloss: 10.8959, dt: 1218.81ms, fracRes: 0.0071, norm(attn): 0.0457, norm(output): 0.1338, norm(x): 0.1334, norm(y): 1.0000, norm:3.7882, tok/sec: 107541.40, flops:112.87, batch-reuse:1
@ 124 train 7.3194 , allloss: 10.6077, dt: 1233.54ms, fracRes: 0.0072, norm(attn): 0.0466, norm(output): 0.1348, norm(x): 0.1345, norm(y): 1.0000, norm:3.3121, tok/sec: 106256.99, flops:111.52, batch-reuse:1
@ 125 train 7.3325 , allloss: 10.7217, dt: 1239.61ms, fracRes: 0.0070, norm(attn): 0.0461, norm(output): 0.1338, norm(x): 0.1330, norm(y): 1.0000, norm:3.8524, tok/sec: 105736.20, flops:110.97, batch-reuse:1
@ 126 train 7.3615 , allloss: 10.7602, dt: 1217.42ms, fracRes: 0.0073, norm(attn): 0.0464, norm(output): 0.1387, norm(x): 0.1360, norm(y): 1.0000, norm:4.6389, tok/sec: 107663.74, flops:113.00, batch-reuse:1
@ 127 train 7.2359 , allloss: 10.5592, dt: 1184.88ms, fracRes: 0.0072, norm(attn): 0.0454, norm(output): 0.1387, norm(x): 0.1362, norm(y): 1.0001, norm:3.6321, tok/sec: 110620.57, flops:116.10, batch-reuse:1
@ 128 train 7.2494 , allloss: 10.7044, dt: 1197.42ms, fracRes: 0.0070, norm(attn): 0.0466, norm(output): 0.1338, norm(x): 0.1337, norm(y): 1.0001, norm:7.9949, tok/sec: 109461.96, flops:114.88, batch-reuse:1
@ 129 train 7.4066 , allloss: 10.9183, dt: 1224.74ms, fracRes: 0.0074, norm(attn): 0.0442, norm(output): 0.1406, norm(x): 0.1391, norm(y): 1.0001, norm:3.9563, tok/sec: 107020.43, flops:112.32, batch-reuse:1
@ 130 train 7.3181 , allloss: 11.5775, dt: 1235.16ms, fracRes: 0.0073, norm(attn): 0.0415, norm(output): 0.1406, norm(x): 0.1400, norm(y): 1.0001, norm:5.3931, tok/sec: 106117.60, flops:111.37, batch-reuse:1
@ 131 train 7.3083 , allloss: 11.6876, dt: 1214.55ms, fracRes: 0.0072, norm(attn): 0.0400, norm(output): 0.1416, norm(x): 0.1407, norm(y): 1.0001, norm:5.1399, tok/sec: 107918.50, flops:113.26, batch-reuse:1
@ 132 train 7.3297 , allloss: 11.3018, dt: 1230.63ms, fracRes: 0.0073, norm(attn): 0.0400, norm(output): 0.1416, norm(x): 0.1419, norm(y): 1.0001, norm:4.0744, tok/sec: 106507.73, flops:111.78, batch-reuse:1
@ 133 train 7.2499 , allloss: 11.0351, dt: 1250.24ms, fracRes: 0.0072, norm(attn): 0.0415, norm(output): 0.1416, norm(x): 0.1419, norm(y): 1.0001, norm:3.7092, tok/sec: 104837.38, flops:110.03, batch-reuse:1
@ 134 train 7.2970 , allloss: 11.2281, dt: 1225.41ms, fracRes: 0.0072, norm(attn): 0.0403, norm(output): 0.1416, norm(x): 0.1419, norm(y): 1.0001, norm:4.1605, tok/sec: 106962.02, flops:112.26, batch-reuse:1
@ 135 train 7.1846 , allloss: 11.6889, dt: 1198.06ms, fracRes: 0.0070, norm(attn): 0.0393, norm(output): 0.1416, norm(x): 0.1409, norm(y): 1.0001, norm:5.8021, tok/sec: 109403.25, flops:114.82, batch-reuse:1
@ 136 train 7.2281 , allloss: 11.2734, dt: 1199.74ms, fracRes: 0.0072, norm(attn): 0.0408, norm(output): 0.1426, norm(x): 0.1433, norm(y): 1.0002, norm:4.8692, tok/sec: 109250.47, flops:114.66, batch-reuse:1
@ 137 train 7.1176 , allloss: 10.6625, dt: 1193.04ms, fracRes: 0.0074, norm(attn): 0.0430, norm(output): 0.1455, norm(x): 0.1447, norm(y): 1.0002, norm:3.8506, tok/sec: 109863.51, flops:115.30, batch-reuse:1
@ 138 train 7.0996 , allloss: 10.3637, dt: 1222.70ms, fracRes: 0.0073, norm(attn): 0.0449, norm(output): 0.1465, norm(x): 0.1446, norm(y): 1.0002, norm:3.4487, tok/sec: 107198.56, flops:112.51, batch-reuse:1
@ 139 train 7.0874 , allloss: 10.2781, dt: 1210.26ms, fracRes: 0.0073, norm(attn): 0.0459, norm(output): 0.1465, norm(x): 0.1445, norm(y): 1.0002, norm:3.7159, tok/sec: 108300.66, flops:113.66, batch-reuse:1
@ 140 train 7.1023 , allloss: 10.5667, dt: 1210.36ms, fracRes: 0.0072, norm(attn): 0.0454, norm(output): 0.1426, norm(x): 0.1435, norm(y): 1.0002, norm:5.2858, tok/sec: 108292.19, flops:113.65, batch-reuse:1
@ 141 train 7.1157 , allloss: 9.9645, dt: 1237.02ms, fracRes: 0.0076, norm(attn): 0.0469, norm(output): 0.1475, norm(x): 0.1473, norm(y): 1.0003, norm:4.5861, tok/sec: 105957.76, flops:111.20, batch-reuse:1
@ 142 train 7.2345 , allloss: 10.0098, dt: 1228.96ms, fracRes: 0.0075, norm(attn): 0.0469, norm(output): 0.1484, norm(x): 0.1474, norm(y): 1.0003, norm:4.4542, tok/sec: 106652.61, flops:111.93, batch-reuse:1
@ 143 train 7.1624 , allloss: 10.0660, dt: 1251.70ms, fracRes: 0.0074, norm(attn): 0.0439, norm(output): 0.1504, norm(x): 0.1488, norm(y): 1.0003, norm:3.4854, tok/sec: 104715.47, flops:109.90, batch-reuse:1
@ 144 train 7.1236 , allloss: 10.1942, dt: 1249.37ms, fracRes: 0.0073, norm(attn): 0.0417, norm(output): 0.1504, norm(x): 0.1499, norm(y): 1.0003, norm:3.6387, tok/sec: 104910.49, flops:110.11, batch-reuse:1
@ 145 train 7.1052 , allloss: 10.2353, dt: 1251.84ms, fracRes: 0.0073, norm(attn): 0.0415, norm(output): 0.1533, norm(x): 0.1512, norm(y): 1.0003, norm:3.3226, tok/sec: 104703.15, flops:109.89, batch-reuse:1
@ 146 train 7.2571 , allloss: 10.6897, dt: 1260.11ms, fracRes: 0.0072, norm(attn): 0.0400, norm(output): 0.1504, norm(x): 0.1500, norm(y): 1.0003, norm:3.7599, tok/sec: 104016.42, flops:109.17, batch-reuse:1
@ 147 train 7.1088 , allloss: 10.7820, dt: 1254.34ms, fracRes: 0.0071, norm(attn): 0.0398, norm(output): 0.1504, norm(x): 0.1487, norm(y): 1.0003, norm:4.2437, tok/sec: 104494.44, flops:109.67, batch-reuse:1
@ 148 train 7.0836 , allloss: 10.0559, dt: 1230.04ms, fracRes: 0.0074, norm(attn): 0.0425, norm(output): 0.1533, norm(x): 0.1513, norm(y): 1.0004, norm:3.1127, tok/sec: 106558.84, flops:111.84, batch-reuse:1
@ 149 train 6.9711 , allloss: 9.9410, dt: 1209.13ms, fracRes: 0.0071, norm(attn): 0.0432, norm(output): 0.1543, norm(x): 0.1514, norm(y): 1.0004, norm:3.8036, tok/sec: 108401.80, flops:113.77, batch-reuse:1
@ 150 train 7.2063 , allloss: 9.8696, dt: 1247.73ms, fracRes: 0.0077, norm(attn): 0.0452, norm(output): 0.1562, norm(x): 0.1545, norm(y): 1.0004, norm:3.3604, tok/sec: 105048.43, flops:110.25, batch-reuse:1
@ 151 train 6.9836 , allloss: 9.8235, dt: 1212.38ms, fracRes: 0.0075, norm(attn): 0.0454, norm(output): 0.1553, norm(x): 0.1542, norm(y): 1.0004, norm:3.6803, tok/sec: 108111.28, flops:113.46, batch-reuse:1
@ 152 train 6.9824 , allloss: 9.6028, dt: 1237.07ms, fracRes: 0.0074, norm(attn): 0.0474, norm(output): 0.1562, norm(x): 0.1554, norm(y): 1.0004, norm:3.6823, tok/sec: 105953.78, flops:111.20, batch-reuse:1
@ 153 train 6.9682 , allloss: 9.4906, dt: 1222.00ms, fracRes: 0.0078, norm(attn): 0.0483, norm(output): 0.1572, norm(x): 0.1579, norm(y): 1.0005, norm:3.1798, tok/sec: 107260.20, flops:112.57, batch-reuse:1
@ 154 train 7.0375 , allloss: 9.8897, dt: 1222.60ms, fracRes: 0.0075, norm(attn): 0.0466, norm(output): 0.1572, norm(x): 0.1578, norm(y): 1.0004, norm:3.5722, tok/sec: 107207.82, flops:112.52, batch-reuse:1
@ 155 train 7.1735 , allloss: 9.8876, dt: 1215.82ms, fracRes: 0.0076, norm(attn): 0.0461, norm(output): 0.1582, norm(x): 0.1584, norm(y): 1.0005, norm:3.2444, tok/sec: 107805.26, flops:113.14, batch-reuse:1
@ 156 train 7.0003 , allloss: 9.8336, dt: 1217.86ms, fracRes: 0.0075, norm(attn): 0.0449, norm(output): 0.1602, norm(x): 0.1593, norm(y): 1.0005, norm:3.2006, tok/sec: 107624.70, flops:112.95, batch-reuse:1
@ 157 train 7.1162 , allloss: 10.1686, dt: 1212.58ms, fracRes: 0.0074, norm(attn): 0.0444, norm(output): 0.1611, norm(x): 0.1604, norm(y): 1.0005, norm:3.4990, tok/sec: 108093.91, flops:113.45, batch-reuse:1
@ 158 train 7.0895 , allloss: 10.0184, dt: 1212.78ms, fracRes: 0.0073, norm(attn): 0.0457, norm(output): 0.1621, norm(x): 0.1610, norm(y): 1.0005, norm:3.3237, tok/sec: 108075.49, flops:113.43, batch-reuse:1
@ 159 train 7.1209 , allloss: 10.0157, dt: 1217.45ms, fracRes: 0.0073, norm(attn): 0.0457, norm(output): 0.1611, norm(x): 0.1604, norm(y): 1.0005, norm:3.8900, tok/sec: 107661.19, flops:112.99, batch-reuse:1
@ 160 train 7.0281 , allloss: 9.5968, dt: 1210.93ms, fracRes: 0.0077, norm(attn): 0.0493, norm(output): 0.1621, norm(x): 0.1625, norm(y): 1.0005, norm:4.4199, tok/sec: 108240.85, flops:113.60, batch-reuse:1
@ 161 train 7.0253 , allloss: 9.8491, dt: 1221.87ms, fracRes: 0.0076, norm(attn): 0.0466, norm(output): 0.1660, norm(x): 0.1642, norm(y): 1.0005, norm:3.9813, tok/sec: 107271.81, flops:112.58, batch-reuse:1
@ 162 train 7.1215 , allloss: 10.2959, dt: 1248.26ms, fracRes: 0.0072, norm(attn): 0.0457, norm(output): 0.1660, norm(x): 0.1639, norm(y): 1.0005, norm:3.8522, tok/sec: 105003.44, flops:110.20, batch-reuse:1
@ 163 train 7.0267 , allloss: 9.7892, dt: 1242.85ms, fracRes: 0.0073, norm(attn): 0.0483, norm(output): 0.1650, norm(x): 0.1642, norm(y): 1.0005, norm:3.6442, tok/sec: 105460.57, flops:110.68, batch-reuse:1
@ 164 train 6.9351 , allloss: 9.4203, dt: 1210.86ms, fracRes: 0.0077, norm(attn): 0.0503, norm(output): 0.1670, norm(x): 0.1656, norm(y): 1.0006, norm:3.7000, tok/sec: 108246.90, flops:113.61, batch-reuse:1
@ 165 train 7.0469 , allloss: 9.8427, dt: 1213.90ms, fracRes: 0.0076, norm(attn): 0.0500, norm(output): 0.1689, norm(x): 0.1663, norm(y): 1.0005, norm:4.0104, tok/sec: 107975.83, flops:113.32, batch-reuse:1
@ 166 train 6.9707 , allloss: 9.9990, dt: 1207.06ms, fracRes: 0.0073, norm(attn): 0.0500, norm(output): 0.1709, norm(x): 0.1682, norm(y): 1.0005, norm:4.1969, tok/sec: 108588.21, flops:113.97, batch-reuse:1
@ 167 train 7.0015 , allloss: 9.6506, dt: 1216.55ms, fracRes: 0.0076, norm(attn): 0.0530, norm(output): 0.1719, norm(x): 0.1704, norm(y): 1.0006, norm:3.7340, tok/sec: 107740.82, flops:113.08, batch-reuse:1
@ 168 train 6.9046 , allloss: 9.5551, dt: 1199.29ms, fracRes: 0.0075, norm(attn): 0.0508, norm(output): 0.1709, norm(x): 0.1694, norm(y): 1.0006, norm:3.4041, tok/sec: 109291.37, flops:114.70, batch-reuse:1
@ 169 train 6.9495 , allloss: 9.5133, dt: 1218.43ms, fracRes: 0.0074, norm(attn): 0.0493, norm(output): 0.1719, norm(x): 0.1717, norm(y): 1.0006, norm:3.4650, tok/sec: 107574.08, flops:112.90, batch-reuse:1
@ 170 train 6.9220 , allloss: 9.4003, dt: 1225.76ms, fracRes: 0.0076, norm(attn): 0.0498, norm(output): 0.1738, norm(x): 0.1738, norm(y): 1.0007, norm:3.5855, tok/sec: 106931.42, flops:112.23, batch-reuse:1
@ 171 train 6.9033 , allloss: 9.5088, dt: 1212.69ms, fracRes: 0.0073, norm(attn): 0.0479, norm(output): 0.1729, norm(x): 0.1742, norm(y): 1.0007, norm:4.5807, tok/sec: 108083.71, flops:113.44, batch-reuse:1
@ 172 train 6.9473 , allloss: 9.4771, dt: 1201.94ms, fracRes: 0.0076, norm(attn): 0.0471, norm(output): 0.1768, norm(x): 0.1764, norm(y): 1.0007, norm:3.9104, tok/sec: 109050.41, flops:114.45, batch-reuse:1
@ 173 train 6.9183 , allloss: 9.4653, dt: 1206.72ms, fracRes: 0.0074, norm(attn): 0.0454, norm(output): 0.1777, norm(x): 0.1776, norm(y): 1.0007, norm:3.7499, tok/sec: 108618.54, flops:114.00, batch-reuse:1
@ 174 train 7.0632 , allloss: 9.5278, dt: 1209.77ms, fracRes: 0.0074, norm(attn): 0.0476, norm(output): 0.1787, norm(x): 0.1783, norm(y): 1.0007, norm:3.3443, tok/sec: 108344.39, flops:113.71, batch-reuse:1
@ 175 train 6.9782 , allloss: 9.5377, dt: 1212.15ms, fracRes: 0.0073, norm(attn): 0.0503, norm(output): 0.1836, norm(x): 0.1801, norm(y): 1.0007, norm:4.2973, tok/sec: 108131.74, flops:113.49, batch-reuse:1
@ 176 train 6.9641 , allloss: 9.2711, dt: 1220.83ms, fracRes: 0.0078, norm(attn): 0.0518, norm(output): 0.1826, norm(x): 0.1802, norm(y): 1.0007, norm:3.2979, tok/sec: 107363.17, flops:112.68, batch-reuse:1
@ 177 train 6.9415 , allloss: 9.0710, dt: 1218.27ms, fracRes: 0.0081, norm(attn): 0.0552, norm(output): 0.1816, norm(x): 0.1792, norm(y): 1.0007, norm:4.4653, tok/sec: 107588.94, flops:112.92, batch-reuse:1
@ 178 train 6.9872 , allloss: 9.3467, dt: 1231.49ms, fracRes: 0.0075, norm(attn): 0.0532, norm(output): 0.1836, norm(x): 0.1810, norm(y): 1.0007, norm:3.3703, tok/sec: 106433.31, flops:111.70, batch-reuse:1
@ 179 train 6.8354 , allloss: 9.0144, dt: 1216.07ms, fracRes: 0.0076, norm(attn): 0.0544, norm(output): 0.1865, norm(x): 0.1841, norm(y): 1.0008, norm:3.5241, tok/sec: 107783.21, flops:113.12, batch-reuse:1
@ 180 train 7.0167 , allloss: 9.1178, dt: 1197.33ms, fracRes: 0.0079, norm(attn): 0.0586, norm(output): 0.1865, norm(x): 0.1842, norm(y): 1.0008, norm:4.3245, tok/sec: 109470.61, flops:114.89, batch-reuse:1
@ 181 train 6.9110 , allloss: 9.2718, dt: 1195.69ms, fracRes: 0.0076, norm(attn): 0.0564, norm(output): 0.1865, norm(x): 0.1849, norm(y): 1.0007, norm:3.6827, tok/sec: 109620.24, flops:115.05, batch-reuse:1
@ 182 train 6.9504 , allloss: 9.1761, dt: 1209.24ms, fracRes: 0.0075, norm(attn): 0.0544, norm(output): 0.1875, norm(x): 0.1867, norm(y): 1.0008, norm:3.8915, tok/sec: 108392.37, flops:113.76, batch-reuse:1
@ 183 train 6.8973 , allloss: 9.1349, dt: 1199.56ms, fracRes: 0.0073, norm(attn): 0.0583, norm(output): 0.1885, norm(x): 0.1872, norm(y): 1.0007, norm:3.6745, tok/sec: 109266.93, flops:114.68, batch-reuse:1
@ 184 train 6.7516 , allloss: 9.1753, dt: 1193.36ms, fracRes: 0.0072, norm(attn): 0.0562, norm(output): 0.1875, norm(x): 0.1874, norm(y): 1.0007, norm:3.6929, tok/sec: 109834.72, flops:115.27, batch-reuse:1
@ 185 train 6.8054 , allloss: 9.0569, dt: 1198.81ms, fracRes: 0.0074, norm(attn): 0.0544, norm(output): 0.1895, norm(x): 0.1889, norm(y): 1.0008, norm:3.4571, tok/sec: 109334.65, flops:114.75, batch-reuse:1
@ 186 train 6.9866 , allloss: 9.2644, dt: 1225.14ms, fracRes: 0.0072, norm(attn): 0.0542, norm(output): 0.1924, norm(x): 0.1918, norm(y): 1.0008, norm:3.3197, tok/sec: 106985.75, flops:112.28, batch-reuse:1
@ 187 train 7.0901 , allloss: 9.4174, dt: 1249.94ms, fracRes: 0.0072, norm(attn): 0.0505, norm(output): 0.1973, norm(x): 0.1934, norm(y): 1.0008, norm:3.1449, tok/sec: 104862.56, flops:110.06, batch-reuse:1
@ 188 train 6.9061 , allloss: 9.0877, dt: 1241.58ms, fracRes: 0.0073, norm(attn): 0.0503, norm(output): 0.1963, norm(x): 0.1938, norm(y): 1.0008, norm:3.3309, tok/sec: 105568.51, flops:110.80, batch-reuse:1
@ 189 train 7.0294 , allloss: 8.9755, dt: 1205.19ms, fracRes: 0.0076, norm(attn): 0.0505, norm(output): 0.1992, norm(x): 0.1975, norm(y): 1.0009, norm:2.9181, tok/sec: 108756.26, flops:114.14, batch-reuse:1
@ 190 train 7.0081 , allloss: 8.9801, dt: 1211.38ms, fracRes: 0.0074, norm(attn): 0.0496, norm(output): 0.2021, norm(x): 0.1991, norm(y): 1.0009, norm:4.0759, tok/sec: 108200.84, flops:113.56, batch-reuse:1
@ 191 train 6.9729 , allloss: 8.7997, dt: 1218.29ms, fracRes: 0.0078, norm(attn): 0.0547, norm(output): 0.2031, norm(x): 0.2006, norm(y): 1.0009, norm:3.9809, tok/sec: 107586.52, flops:112.91, batch-reuse:1
@ 192 train 7.0101 , allloss: 8.8384, dt: 1240.91ms, fracRes: 0.0078, norm(attn): 0.0549, norm(output): 0.2031, norm(x): 0.2022, norm(y): 1.0009, norm:3.2810, tok/sec: 105625.67, flops:110.86, batch-reuse:1
@ 193 train 6.9159 , allloss: 8.7253, dt: 1207.04ms, fracRes: 0.0076, norm(attn): 0.0542, norm(output): 0.2031, norm(x): 0.2032, norm(y): 1.0009, norm:4.0698, tok/sec: 108589.71, flops:113.97, batch-reuse:1
@ 194 train 7.0487 , allloss: 8.7576, dt: 1217.89ms, fracRes: 0.0077, norm(attn): 0.0574, norm(output): 0.2041, norm(x): 0.2044, norm(y): 1.0009, norm:4.1094, tok/sec: 107622.30, flops:112.95, batch-reuse:1
@ 195 train 6.9834 , allloss: 8.8957, dt: 1232.17ms, fracRes: 0.0076, norm(attn): 0.0596, norm(output): 0.2051, norm(x): 0.2053, norm(y): 1.0009, norm:3.4745, tok/sec: 106374.51, flops:111.64, batch-reuse:1
@ 196 train 6.8865 , allloss: 8.7028, dt: 1213.02ms, fracRes: 0.0078, norm(attn): 0.0608, norm(output): 0.2061, norm(x): 0.2066, norm(y): 1.0009, norm:3.2475, tok/sec: 108054.16, flops:113.40, batch-reuse:1
@ 197 train 6.9006 , allloss: 8.7210, dt: 1214.98ms, fracRes: 0.0077, norm(attn): 0.0605, norm(output): 0.2070, norm(x): 0.2072, norm(y): 1.0009, norm:3.4600, tok/sec: 107879.57, flops:113.22, batch-reuse:1
@ 198 train 6.8491 , allloss: 8.7751, dt: 1215.17ms, fracRes: 0.0075, norm(attn): 0.0610, norm(output): 0.2148, norm(x): 0.2099, norm(y): 1.0009, norm:3.2473, tok/sec: 107863.25, flops:113.20, batch-reuse:1
@ 199 train 6.9426 , allloss: 8.7273, dt: 1208.10ms, fracRes: 0.0076, norm(attn): 0.0630, norm(output): 0.2109, norm(x): 0.2102, norm(y): 1.0009, norm:2.9861, tok/sec: 108494.22, flops:113.87, batch-reuse:1
@ 200 train 6.9447 , allloss: 8.7674, dt: 1215.36ms, fracRes: 0.0076, norm(attn): 0.0620, norm(output): 0.2148, norm(x): 0.2121, norm(y): 1.0009, norm:2.8269, tok/sec: 107846.18, flops:113.19, batch-reuse:1
@ 201 train 6.9404 , allloss: 8.7726, dt: 1201.40ms, fracRes: 0.0075, norm(attn): 0.0640, norm(output): 0.2158, norm(x): 0.2130, norm(y): 1.0009, norm:3.6963, tok/sec: 109099.55, flops:114.50, batch-reuse:1
@ 202 train 6.9713 , allloss: 8.7764, dt: 1214.62ms, fracRes: 0.0075, norm(attn): 0.0586, norm(output): 0.2178, norm(x): 0.2150, norm(y): 1.0009, norm:2.8969, tok/sec: 107912.18, flops:113.26, batch-reuse:1
@ 203 train 6.9382 , allloss: 8.6806, dt: 1194.47ms, fracRes: 0.0074, norm(attn): 0.0598, norm(output): 0.2178, norm(x): 0.2156, norm(y): 1.0009, norm:2.9552, tok/sec: 109732.07, flops:115.17, batch-reuse:1
@ 204 train 6.9156 , allloss: 8.6367, dt: 1212.36ms, fracRes: 0.0075, norm(attn): 0.0569, norm(output): 0.2197, norm(x): 0.2182, norm(y): 1.0010, norm:2.8298, tok/sec: 108112.98, flops:113.47, batch-reuse:1
@ 205 train 6.8869 , allloss: 8.5254, dt: 1232.50ms, fracRes: 0.0075, norm(attn): 0.0588, norm(output): 0.2207, norm(x): 0.2203, norm(y): 1.0010, norm:3.0355, tok/sec: 106346.28, flops:111.61, batch-reuse:1
@ 206 train 6.9385 , allloss: 8.5703, dt: 1208.03ms, fracRes: 0.0075, norm(attn): 0.0544, norm(output): 0.2217, norm(x): 0.2222, norm(y): 1.0010, norm:2.9165, tok/sec: 108500.23, flops:113.87, batch-reuse:1
@ 207 train 6.8044 , allloss: 8.3443, dt: 1201.22ms, fracRes: 0.0075, norm(attn): 0.0571, norm(output): 0.2217, norm(x): 0.2218, norm(y): 1.0010, norm:2.8418, tok/sec: 109115.30, flops:114.52, batch-reuse:1
@ 208 train 6.9036 , allloss: 8.5731, dt: 1208.10ms, fracRes: 0.0074, norm(attn): 0.0562, norm(output): 0.2227, norm(x): 0.2236, norm(y): 1.0010, norm:3.2309, tok/sec: 108494.71, flops:113.87, batch-reuse:1
@ 209 train 6.9262 , allloss: 8.3620, dt: 1225.39ms, fracRes: 0.0075, norm(attn): 0.0576, norm(output): 0.2227, norm(x): 0.2246, norm(y): 1.0010, norm:2.4613, tok/sec: 106963.61, flops:112.26, batch-reuse:1
@ 210 train 6.8867 , allloss: 8.2879, dt: 1229.22ms, fracRes: 0.0075, norm(attn): 0.0583, norm(output): 0.2227, norm(x): 0.2255, norm(y): 1.0010, norm:2.6746, tok/sec: 106630.39, flops:111.91, batch-reuse:1
@ 211 train 6.8128 , allloss: 8.1461, dt: 1188.29ms, fracRes: 0.0078, norm(attn): 0.0630, norm(output): 0.2246, norm(x): 0.2261, norm(y): 1.0010, norm:2.5398, tok/sec: 110303.03, flops:115.77, batch-reuse:1
@ 212 train 6.9296 , allloss: 8.3304, dt: 1226.90ms, fracRes: 0.0078, norm(attn): 0.0645, norm(output): 0.2314, norm(x): 0.2282, norm(y): 1.0010, norm:4.2689, tok/sec: 106832.13, flops:112.12, batch-reuse:1
@ 213 train 6.8107 , allloss: 8.1054, dt: 1217.38ms, fracRes: 0.0078, norm(attn): 0.0635, norm(output): 0.2314, norm(x): 0.2287, norm(y): 1.0010, norm:2.8699, tok/sec: 107667.49, flops:113.00, batch-reuse:1
@ 214 train 6.8323 , allloss: 8.1521, dt: 1195.05ms, fracRes: 0.0077, norm(attn): 0.0610, norm(output): 0.2334, norm(x): 0.2318, norm(y): 1.0010, norm:2.1521, tok/sec: 109679.40, flops:115.11, batch-reuse:1
@ 215 train 6.7376 , allloss: 8.0494, dt: 1206.03ms, fracRes: 0.0077, norm(attn): 0.0601, norm(output): 0.2334, norm(x): 0.2300, norm(y): 1.0010, norm:2.2939, tok/sec: 108680.38, flops:114.06, batch-reuse:1
@ 216 train 6.7761 , allloss: 7.9921, dt: 1199.55ms, fracRes: 0.0080, norm(attn): 0.0645, norm(output): 0.2344, norm(x): 0.2333, norm(y): 1.0011, norm:2.4625, tok/sec: 109267.48, flops:114.68, batch-reuse:1
@ 217 train 6.8388 , allloss: 8.1233, dt: 1220.69ms, fracRes: 0.0076, norm(attn): 0.0610, norm(output): 0.2344, norm(x): 0.2336, norm(y): 1.0010, norm:2.0359, tok/sec: 107375.76, flops:112.69, batch-reuse:1
@ 218 train 6.8099 , allloss: 8.0233, dt: 1229.85ms, fracRes: 0.0078, norm(attn): 0.0623, norm(output): 0.2363, norm(x): 0.2361, norm(y): 1.0011, norm:2.2366, tok/sec: 106575.28, flops:111.85, batch-reuse:1
@ 219 train 6.9393 , allloss: 8.1230, dt: 1225.24ms, fracRes: 0.0078, norm(attn): 0.0625, norm(output): 0.2373, norm(x): 0.2374, norm(y): 1.0010, norm:2.2582, tok/sec: 106976.97, flops:112.27, batch-reuse:1
@ 220 train 6.8904 , allloss: 8.1097, dt: 1204.10ms, fracRes: 0.0077, norm(attn): 0.0603, norm(output): 0.2373, norm(x): 0.2383, norm(y): 1.0010, norm:3.2663, tok/sec: 108854.97, flops:114.25, batch-reuse:1
@ 221 train 6.8874 , allloss: 8.0212, dt: 1218.37ms, fracRes: 0.0079, norm(attn): 0.0649, norm(output): 0.2402, norm(x): 0.2388, norm(y): 1.0010, norm:3.4474, tok/sec: 107579.72, flops:112.91, batch-reuse:1
@ 222 train 6.8118 , allloss: 8.0442, dt: 1201.35ms, fracRes: 0.0075, norm(attn): 0.0581, norm(output): 0.2412, norm(x): 0.2402, norm(y): 1.0010, norm:2.4454, tok/sec: 109104.36, flops:114.51, batch-reuse:1
@ 223 train 6.8551 , allloss: 7.9920, dt: 1209.03ms, fracRes: 0.0075, norm(attn): 0.0591, norm(output): 0.2480, norm(x): 0.2436, norm(y): 1.0010, norm:2.7062, tok/sec: 108410.65, flops:113.78, batch-reuse:1
@ 224 train 6.7625 , allloss: 7.8447, dt: 1205.73ms, fracRes: 0.0076, norm(attn): 0.0640, norm(output): 0.2471, norm(x): 0.2443, norm(y): 1.0010, norm:2.3642, tok/sec: 108707.68, flops:114.09, batch-reuse:1
@ 225 train 6.8322 , allloss: 7.9175, dt: 1197.61ms, fracRes: 0.0076, norm(attn): 0.0649, norm(output): 0.2490, norm(x): 0.2470, norm(y): 1.0010, norm:3.6360, tok/sec: 109444.87, flops:114.86, batch-reuse:1
@ 226 train 6.8647 , allloss: 7.9124, dt: 1195.61ms, fracRes: 0.0077, norm(attn): 0.0649, norm(output): 0.2490, norm(x): 0.2464, norm(y): 1.0010, norm:2.0749, tok/sec: 109627.50, flops:115.06, batch-reuse:1
@ 227 train 6.8452 , allloss: 7.8693, dt: 1234.19ms, fracRes: 0.0076, norm(attn): 0.0640, norm(output): 0.2500, norm(x): 0.2501, norm(y): 1.0010, norm:2.6594, tok/sec: 106201.20, flops:111.46, batch-reuse:1
@ 228 train 6.8053 , allloss: 7.8276, dt: 1230.26ms, fracRes: 0.0076, norm(attn): 0.0630, norm(output): 0.2500, norm(x): 0.2505, norm(y): 1.0010, norm:1.6819, tok/sec: 106540.03, flops:111.82, batch-reuse:1
@ 229 train 6.8674 , allloss: 7.8933, dt: 1207.73ms, fracRes: 0.0076, norm(attn): 0.0630, norm(output): 0.2520, norm(x): 0.2511, norm(y): 1.0010, norm:2.3370, tok/sec: 108527.73, flops:113.90, batch-reuse:1
@ 230 train 6.8411 , allloss: 7.8232, dt: 1196.39ms, fracRes: 0.0078, norm(attn): 0.0640, norm(output): 0.2539, norm(x): 0.2554, norm(y): 1.0010, norm:2.0525, tok/sec: 109556.67, flops:114.98, batch-reuse:1
@ 231 train 6.7617 , allloss: 7.7470, dt: 1209.16ms, fracRes: 0.0078, norm(attn): 0.0625, norm(output): 0.2578, norm(x): 0.2574, norm(y): 1.0010, norm:2.1698, tok/sec: 108399.21, flops:113.77, batch-reuse:1
@ 232 train 6.7466 , allloss: 7.7190, dt: 1201.11ms, fracRes: 0.0078, norm(attn): 0.0664, norm(output): 0.2598, norm(x): 0.2575, norm(y): 1.0010, norm:2.4732, tok/sec: 109126.13, flops:114.53, batch-reuse:1
@ 233 train 6.8306 , allloss: 7.8051, dt: 1201.74ms, fracRes: 0.0079, norm(attn): 0.0654, norm(output): 0.2598, norm(x): 0.2586, norm(y): 1.0010, norm:2.0299, tok/sec: 109068.36, flops:114.47, batch-reuse:1
@ 234 train 6.6351 , allloss: 7.6213, dt: 1194.64ms, fracRes: 0.0077, norm(attn): 0.0664, norm(output): 0.2637, norm(x): 0.2599, norm(y): 1.0010, norm:2.0844, tok/sec: 109716.63, flops:115.15, batch-reuse:1
@ 235 train 6.8144 , allloss: 7.7854, dt: 1211.38ms, fracRes: 0.0078, norm(attn): 0.0625, norm(output): 0.2637, norm(x): 0.2622, norm(y): 1.0010, norm:2.3779, tok/sec: 108200.39, flops:113.56, batch-reuse:1
@ 236 train 6.6533 , allloss: 7.6476, dt: 1200.96ms, fracRes: 0.0077, norm(attn): 0.0630, norm(output): 0.2637, norm(x): 0.2621, norm(y): 1.0010, norm:2.1620, tok/sec: 109139.21, flops:114.54, batch-reuse:1
@ 237 train 6.7750 , allloss: 7.7709, dt: 1204.17ms, fracRes: 0.0077, norm(attn): 0.0596, norm(output): 0.2656, norm(x): 0.2647, norm(y): 1.0010, norm:2.6489, tok/sec: 108847.99, flops:114.24, batch-reuse:1
@ 238 train 6.7244 , allloss: 7.7105, dt: 1217.75ms, fracRes: 0.0079, norm(attn): 0.0613, norm(output): 0.2656, norm(x): 0.2658, norm(y): 1.0011, norm:2.1171, tok/sec: 107634.73, flops:112.96, batch-reuse:1
@ 239 train 6.7236 , allloss: 7.7329, dt: 1202.01ms, fracRes: 0.0078, norm(attn): 0.0559, norm(output): 0.2695, norm(x): 0.2681, norm(y): 1.0010, norm:2.0415, tok/sec: 109044.39, flops:114.44, batch-reuse:1
@ 240 train 6.7961 , allloss: 7.8307, dt: 1212.22ms, fracRes: 0.0078, norm(attn): 0.0574, norm(output): 0.2715, norm(x): 0.2711, norm(y): 1.0010, norm:2.2896, tok/sec: 108125.15, flops:113.48, batch-reuse:1
@ 241 train 6.7713 , allloss: 7.8119, dt: 1221.79ms, fracRes: 0.0078, norm(attn): 0.0574, norm(output): 0.2734, norm(x): 0.2716, norm(y): 1.0011, norm:2.5897, tok/sec: 107278.34, flops:112.59, batch-reuse:1
@ 242 train 6.7812 , allloss: 7.8279, dt: 1203.75ms, fracRes: 0.0079, norm(attn): 0.0596, norm(output): 0.2734, norm(x): 0.2716, norm(y): 1.0010, norm:3.4058, tok/sec: 108886.08, flops:114.28, batch-reuse:1
@ 243 train 6.6175 , allloss: 7.6655, dt: 1216.49ms, fracRes: 0.0079, norm(attn): 0.0564, norm(output): 0.2773, norm(x): 0.2727, norm(y): 1.0011, norm:2.8390, tok/sec: 107745.95, flops:113.08, batch-reuse:1
@ 244 train 6.8077 , allloss: 7.8222, dt: 1216.87ms, fracRes: 0.0079, norm(attn): 0.0630, norm(output): 0.2773, norm(x): 0.2743, norm(y): 1.0011, norm:2.1736, tok/sec: 107712.49, flops:113.05, batch-reuse:1
@ 245 train 6.6209 , allloss: 7.6368, dt: 1243.71ms, fracRes: 0.0078, norm(attn): 0.0588, norm(output): 0.2793, norm(x): 0.2751, norm(y): 1.0010, norm:2.6072, tok/sec: 105387.67, flops:110.61, batch-reuse:1
@ 246 train 6.8630 , allloss: 7.8641, dt: 1201.65ms, fracRes: 0.0079, norm(attn): 0.0625, norm(output): 0.2793, norm(x): 0.2784, norm(y): 1.0010, norm:2.2767, tok/sec: 109076.59, flops:114.48, batch-reuse:1
@ 247 train 6.7355 , allloss: 7.6760, dt: 1209.61ms, fracRes: 0.0082, norm(attn): 0.0645, norm(output): 0.2812, norm(x): 0.2797, norm(y): 1.0011, norm:2.5045, tok/sec: 108359.26, flops:113.73, batch-reuse:1
@ 248 train 6.7222 , allloss: 7.6807, dt: 1198.99ms, fracRes: 0.0078, norm(attn): 0.0620, norm(output): 0.2832, norm(x): 0.2820, norm(y): 1.0010, norm:4.7673, tok/sec: 109319.12, flops:114.73, batch-reuse:1
@ 249 train 6.6607 , allloss: 7.6058, dt: 1198.84ms, fracRes: 0.0079, norm(attn): 0.0603, norm(output): 0.2812, norm(x): 0.2814, norm(y): 1.0010, norm:2.6747, tok/sec: 109331.97, flops:114.75, batch-reuse:1
@ 250 train 6.7067 , allloss: 7.6303, dt: 1243.01ms, fracRes: 0.0080, norm(attn): 0.0625, norm(output): 0.2852, norm(x): 0.2855, norm(y): 1.0011, norm:1.9151, tok/sec: 105447.52, flops:110.67, batch-reuse:1
@ 251 train 6.6305 , allloss: 7.5266, dt: 1227.77ms, fracRes: 0.0080, norm(attn): 0.0623, norm(output): 0.2832, norm(x): 0.2844, norm(y): 1.0011, norm:2.3112, tok/sec: 106756.16, flops:112.04, batch-reuse:1
@ 252 train 6.7831 , allloss: 7.6689, dt: 1231.07ms, fracRes: 0.0081, norm(attn): 0.0649, norm(output): 0.2852, norm(x): 0.2860, norm(y): 1.0011, norm:1.7413, tok/sec: 106470.00, flops:111.74, batch-reuse:1
@ 253 train 6.6547 , allloss: 7.5214, dt: 1208.76ms, fracRes: 0.0082, norm(attn): 0.0630, norm(output): 0.2871, norm(x): 0.2882, norm(y): 1.0010, norm:2.2996, tok/sec: 108434.85, flops:113.80, batch-reuse:1
@ 254 train 6.6215 , allloss: 7.4745, dt: 1205.87ms, fracRes: 0.0082, norm(attn): 0.0645, norm(output): 0.2891, norm(x): 0.2889, norm(y): 1.0011, norm:3.1309, tok/sec: 108694.97, flops:114.08, batch-reuse:1
@ 255 train 6.6131 , allloss: 7.4678, dt: 1216.37ms, fracRes: 0.0081, norm(attn): 0.0608, norm(output): 0.2910, norm(x): 0.2899, norm(y): 1.0011, norm:2.2200, tok/sec: 107756.63, flops:113.09, batch-reuse:1
@ 256 train 6.6607 , allloss: 7.5004, dt: 1249.16ms, fracRes: 0.0081, norm(attn): 0.0635, norm(output): 0.2930, norm(x): 0.2919, norm(y): 1.0011, norm:2.1327, tok/sec: 104928.53, flops:110.12, batch-reuse:1
@ 257 train 6.6883 , allloss: 7.5341, dt: 1235.71ms, fracRes: 0.0078, norm(attn): 0.0598, norm(output): 0.2949, norm(x): 0.2949, norm(y): 1.0010, norm:1.6631, tok/sec: 106070.02, flops:111.32, batch-reuse:1
@ 258 train 6.6128 , allloss: 7.4485, dt: 1204.22ms, fracRes: 0.0081, norm(attn): 0.0591, norm(output): 0.2969, norm(x): 0.2953, norm(y): 1.0010, norm:1.5237, tok/sec: 108843.53, flops:114.23, batch-reuse:1
@ 259 train 6.6446 , allloss: 7.4763, dt: 1215.95ms, fracRes: 0.0082, norm(attn): 0.0598, norm(output): 0.2949, norm(x): 0.2952, norm(y): 1.0010, norm:2.3926, tok/sec: 107794.16, flops:113.13, batch-reuse:1
@ 260 train 6.7249 , allloss: 7.5579, dt: 1215.98ms, fracRes: 0.0080, norm(attn): 0.0591, norm(output): 0.3008, norm(x): 0.2981, norm(y): 1.0010, norm:1.7840, tok/sec: 107791.22, flops:113.13, batch-reuse:1
@ 261 train 6.6597 , allloss: 7.4912, dt: 1218.17ms, fracRes: 0.0081, norm(attn): 0.0593, norm(output): 0.3008, norm(x): 0.2984, norm(y): 1.0010, norm:1.6926, tok/sec: 107597.24, flops:112.93, batch-reuse:1
@ 262 train 6.7269 , allloss: 7.5609, dt: 1234.16ms, fracRes: 0.0080, norm(attn): 0.0574, norm(output): 0.3008, norm(x): 0.2992, norm(y): 1.0009, norm:1.9078, tok/sec: 106203.43, flops:111.46, batch-reuse:1
@ 263 train 6.6810 , allloss: 7.5169, dt: 1201.67ms, fracRes: 0.0079, norm(attn): 0.0552, norm(output): 0.3008, norm(x): 0.3000, norm(y): 1.0009, norm:2.1672, tok/sec: 109074.62, flops:114.48, batch-reuse:1
@ 264 train 6.6581 , allloss: 7.4860, dt: 1207.42ms, fracRes: 0.0082, norm(attn): 0.0574, norm(output): 0.3027, norm(x): 0.3026, norm(y): 1.0009, norm:2.1816, tok/sec: 108555.70, flops:113.93, batch-reuse:1
@ 265 train 6.6557 , allloss: 7.4869, dt: 1201.39ms, fracRes: 0.0082, norm(attn): 0.0598, norm(output): 0.3105, norm(x): 0.3055, norm(y): 1.0010, norm:2.1675, tok/sec: 109100.72, flops:114.50, batch-reuse:1
@ 266 train 6.6366 , allloss: 7.4651, dt: 1193.02ms, fracRes: 0.0081, norm(attn): 0.0588, norm(output): 0.3086, norm(x): 0.3043, norm(y): 1.0010, norm:2.5871, tok/sec: 109865.73, flops:115.31, batch-reuse:1
@ 267 train 6.6294 , allloss: 7.4504, dt: 1208.73ms, fracRes: 0.0081, norm(attn): 0.0537, norm(output): 0.3105, norm(x): 0.3051, norm(y): 1.0009, norm:2.0659, tok/sec: 108437.63, flops:113.81, batch-reuse:1
@ 268 train 6.7136 , allloss: 7.5287, dt: 1225.63ms, fracRes: 0.0083, norm(attn): 0.0581, norm(output): 0.3105, norm(x): 0.3068, norm(y): 1.0009, norm:2.4543, tok/sec: 106942.96, flops:112.24, batch-reuse:1
@ 269 train 6.6512 , allloss: 7.4597, dt: 1197.10ms, fracRes: 0.0082, norm(attn): 0.0581, norm(output): 0.3125, norm(x): 0.3109, norm(y): 1.0009, norm:1.9753, tok/sec: 109491.43, flops:114.91, batch-reuse:1
@ 270 train 6.7399 , allloss: 7.5489, dt: 1218.76ms, fracRes: 0.0081, norm(attn): 0.0583, norm(output): 0.3125, norm(x): 0.3110, norm(y): 1.0009, norm:2.0268, tok/sec: 107544.95, flops:112.87, batch-reuse:1
@ 271 train 6.6043 , allloss: 7.4082, dt: 1233.35ms, fracRes: 0.0081, norm(attn): 0.0601, norm(output): 0.3145, norm(x): 0.3126, norm(y): 1.0009, norm:1.9941, tok/sec: 106273.20, flops:111.54, batch-reuse:1
@ 272 train 6.6180 , allloss: 7.4250, dt: 1217.37ms, fracRes: 0.0081, norm(attn): 0.0596, norm(output): 0.3145, norm(x): 0.3134, norm(y): 1.0009, norm:1.5809, tok/sec: 107667.94, flops:113.00, batch-reuse:1
@ 273 train 6.7538 , allloss: 7.5740, dt: 1220.69ms, fracRes: 0.0080, norm(attn): 0.0610, norm(output): 0.3164, norm(x): 0.3166, norm(y): 1.0009, norm:1.6071, tok/sec: 107375.65, flops:112.69, batch-reuse:1
@ 274 train 6.6316 , allloss: 7.4443, dt: 1217.63ms, fracRes: 0.0081, norm(attn): 0.0579, norm(output): 0.3184, norm(x): 0.3179, norm(y): 1.0009, norm:1.4910, tok/sec: 107645.08, flops:112.98, batch-reuse:1
@ 275 train 6.6046 , allloss: 7.4161, dt: 1190.95ms, fracRes: 0.0082, norm(attn): 0.0593, norm(output): 0.3145, norm(x): 0.3167, norm(y): 1.0009, norm:1.5175, tok/sec: 110056.55, flops:115.51, batch-reuse:1
@ 276 train 6.6087 , allloss: 7.4204, dt: 1207.46ms, fracRes: 0.0081, norm(attn): 0.0591, norm(output): 0.3164, norm(x): 0.3167, norm(y): 1.0009, norm:2.0129, tok/sec: 108552.21, flops:113.93, batch-reuse:1
@ 277 train 6.5153 , allloss: 7.3248, dt: 1201.77ms, fracRes: 0.0081, norm(attn): 0.0608, norm(output): 0.3184, norm(x): 0.3200, norm(y): 1.0009, norm:3.2751, tok/sec: 109065.36, flops:114.47, batch-reuse:1
@ 278 train 6.6317 , allloss: 7.4460, dt: 1196.10ms, fracRes: 0.0082, norm(attn): 0.0613, norm(output): 0.3242, norm(x): 0.3217, norm(y): 1.0009, norm:2.4902, tok/sec: 109582.66, flops:115.01, batch-reuse:1
@ 279 train 6.5291 , allloss: 7.3487, dt: 1197.60ms, fracRes: 0.0082, norm(attn): 0.0571, norm(output): 0.3223, norm(x): 0.3222, norm(y): 1.0009, norm:1.4812, tok/sec: 109445.70, flops:114.87, batch-reuse:1
@ 280 train 6.6589 , allloss: 7.4855, dt: 1223.36ms, fracRes: 0.0080, norm(attn): 0.0615, norm(output): 0.3301, norm(x): 0.3247, norm(y): 1.0009, norm:1.9689, tok/sec: 107140.63, flops:112.45, batch-reuse:1
@ 281 train 6.5519 , allloss: 7.3815, dt: 1199.37ms, fracRes: 0.0083, norm(attn): 0.0610, norm(output): 0.3242, norm(x): 0.3254, norm(y): 1.0009, norm:2.4162, tok/sec: 109283.88, flops:114.70, batch-reuse:1
@ 282 train 6.5299 , allloss: 7.3594, dt: 1187.69ms, fracRes: 0.0082, norm(attn): 0.0583, norm(output): 0.3281, norm(x): 0.3260, norm(y): 1.0009, norm:2.4641, tok/sec: 110358.61, flops:115.82, batch-reuse:1
@ 283 train 6.4717 , allloss: 7.2994, dt: 1207.23ms, fracRes: 0.0081, norm(attn): 0.0574, norm(output): 0.3242, norm(x): 0.3262, norm(y): 1.0009, norm:1.6787, tok/sec: 108572.72, flops:113.95, batch-reuse:1
@ 284 train 6.5669 , allloss: 7.3940, dt: 1242.46ms, fracRes: 0.0082, norm(attn): 0.0608, norm(output): 0.3320, norm(x): 0.3286, norm(y): 1.0009, norm:1.8908, tok/sec: 105494.36, flops:110.72, batch-reuse:1
@ 285 train 6.5781 , allloss: 7.3991, dt: 1221.31ms, fracRes: 0.0082, norm(attn): 0.0588, norm(output): 0.3340, norm(x): 0.3309, norm(y): 1.0009, norm:2.0033, tok/sec: 107321.07, flops:112.64, batch-reuse:1
@ 286 train 6.5772 , allloss: 7.4002, dt: 1202.11ms, fracRes: 0.0083, norm(attn): 0.0581, norm(output): 0.3340, norm(x): 0.3317, norm(y): 1.0009, norm:1.9804, tok/sec: 109034.90, flops:114.43, batch-reuse:1
@ 287 train 6.5917 , allloss: 7.4199, dt: 1236.28ms, fracRes: 0.0084, norm(attn): 0.0574, norm(output): 0.3340, norm(x): 0.3312, norm(y): 1.0009, norm:1.9534, tok/sec: 106020.90, flops:111.27, batch-reuse:1
@ 288 train 6.5752 , allloss: 7.4069, dt: 1204.09ms, fracRes: 0.0084, norm(attn): 0.0579, norm(output): 0.3359, norm(x): 0.3327, norm(y): 1.0009, norm:1.9022, tok/sec: 108855.29, flops:114.25, batch-reuse:1
@ 289 train 6.5696 , allloss: 7.4010, dt: 1198.68ms, fracRes: 0.0087, norm(attn): 0.0605, norm(output): 0.3359, norm(x): 0.3324, norm(y): 1.0009, norm:2.0936, tok/sec: 109347.15, flops:114.76, batch-reuse:1
@ 290 train 6.5689 , allloss: 7.4140, dt: 1205.20ms, fracRes: 0.0088, norm(attn): 0.0630, norm(output): 0.3379, norm(x): 0.3335, norm(y): 1.0009, norm:2.9100, tok/sec: 108755.35, flops:114.14, batch-reuse:1
@ 291 train 6.4764 , allloss: 7.3247, dt: 1219.05ms, fracRes: 0.0087, norm(attn): 0.0593, norm(output): 0.3379, norm(x): 0.3345, norm(y): 1.0009, norm:2.9656, tok/sec: 107519.99, flops:112.84, batch-reuse:1
@ 292 train 6.5306 , allloss: 7.3820, dt: 1219.14ms, fracRes: 0.0084, norm(attn): 0.0601, norm(output): 0.3418, norm(x): 0.3361, norm(y): 1.0009, norm:3.1769, tok/sec: 107511.85, flops:112.84, batch-reuse:1
@ 293 train 6.5853 , allloss: 7.4368, dt: 1232.55ms, fracRes: 0.0085, norm(attn): 0.0596, norm(output): 0.3418, norm(x): 0.3372, norm(y): 1.0009, norm:2.0999, tok/sec: 106341.71, flops:111.61, batch-reuse:1
@ 294 train 6.5388 , allloss: 7.3823, dt: 1223.60ms, fracRes: 0.0085, norm(attn): 0.0596, norm(output): 0.3418, norm(x): 0.3380, norm(y): 1.0009, norm:1.7228, tok/sec: 107120.17, flops:112.42, batch-reuse:1
@ 295 train 6.5630 , allloss: 7.4042, dt: 1193.09ms, fracRes: 0.0084, norm(attn): 0.0564, norm(output): 0.3418, norm(x): 0.3388, norm(y): 1.0009, norm:2.2021, tok/sec: 109858.99, flops:115.30, batch-reuse:1
@ 296 train 6.4469 , allloss: 7.2824, dt: 1212.14ms, fracRes: 0.0087, norm(attn): 0.0608, norm(output): 0.3438, norm(x): 0.3418, norm(y): 1.0009, norm:2.4369, tok/sec: 108133.14, flops:113.49, batch-reuse:1
@ 297 train 6.4270 , allloss: 7.2454, dt: 1215.07ms, fracRes: 0.0088, norm(attn): 0.0610, norm(output): 0.3457, norm(x): 0.3430, norm(y): 1.0009, norm:1.9164, tok/sec: 107872.42, flops:113.21, batch-reuse:1
@ 298 train 6.5301 , allloss: 7.3599, dt: 1204.20ms, fracRes: 0.0085, norm(attn): 0.0571, norm(output): 0.3457, norm(x): 0.3444, norm(y): 1.0009, norm:1.8898, tok/sec: 108845.29, flops:114.24, batch-reuse:1
@ 299 train 6.5159 , allloss: 7.3259, dt: 1223.95ms, fracRes: 0.0086, norm(attn): 0.0635, norm(output): 0.3457, norm(x): 0.3458, norm(y): 1.0010, norm:2.0757, tok/sec: 107088.97, flops:112.39, batch-reuse:1
@ 300 train 6.4811 , allloss: 7.3055, dt: 1206.67ms, fracRes: 0.0084, norm(attn): 0.0564, norm(output): 0.3477, norm(x): 0.3483, norm(y): 1.0009, norm:2.8320, tok/sec: 108623.24, flops:114.00, batch-reuse:1
@ 301 train 6.6841 , allloss: 7.5207, dt: 1219.87ms, fracRes: 0.0085, norm(attn): 0.0581, norm(output): 0.3496, norm(x): 0.3487, norm(y): 1.0008, norm:3.9729, tok/sec: 107447.30, flops:112.77, batch-reuse:1
@ 302 train 6.4862 , allloss: 7.3168, dt: 1206.65ms, fracRes: 0.0085, norm(attn): 0.0544, norm(output): 0.3477, norm(x): 0.3506, norm(y): 1.0008, norm:2.5987, tok/sec: 108624.81, flops:114.00, batch-reuse:1
@ 303 train 6.5231 , allloss: 7.3336, dt: 1212.61ms, fracRes: 0.0084, norm(attn): 0.0583, norm(output): 0.3496, norm(x): 0.3503, norm(y): 1.0009, norm:2.6440, tok/sec: 108091.24, flops:113.44, batch-reuse:1
@ 304 train 6.4783 , allloss: 7.2758, dt: 1236.57ms, fracRes: 0.0085, norm(attn): 0.0605, norm(output): 0.3477, norm(x): 0.3492, norm(y): 1.0008, norm:2.3666, tok/sec: 105996.64, flops:111.25, batch-reuse:1
@ 305 train 6.4200 , allloss: 7.2222, dt: 1202.87ms, fracRes: 0.0086, norm(attn): 0.0554, norm(output): 0.3496, norm(x): 0.3516, norm(y): 1.0008, norm:2.1369, tok/sec: 108966.35, flops:114.36, batch-reuse:1
@ 306 train 6.4401 , allloss: 7.2400, dt: 1214.20ms, fracRes: 0.0087, norm(attn): 0.0601, norm(output): 0.3535, norm(x): 0.3519, norm(y): 1.0008, norm:2.2066, tok/sec: 107949.48, flops:113.29, batch-reuse:1
@ 307 train 6.6402 , allloss: 7.4351, dt: 1209.53ms, fracRes: 0.0087, norm(attn): 0.0576, norm(output): 0.3574, norm(x): 0.3533, norm(y): 1.0007, norm:3.3986, tok/sec: 108366.07, flops:113.73, batch-reuse:1
@ 308 train 6.5260 , allloss: 7.3316, dt: 1196.64ms, fracRes: 0.0086, norm(attn): 0.0625, norm(output): 0.3613, norm(x): 0.3563, norm(y): 1.0008, norm:3.6074, tok/sec: 109533.12, flops:114.96, batch-reuse:1
@ 309 train 6.5166 , allloss: 7.3090, dt: 1213.11ms, fracRes: 0.0086, norm(attn): 0.0645, norm(output): 0.3574, norm(x): 0.3562, norm(y): 1.0008, norm:1.9495, tok/sec: 108046.54, flops:113.40, batch-reuse:1
@ 310 train 6.5791 , allloss: 7.3689, dt: 1231.59ms, fracRes: 0.0087, norm(attn): 0.0698, norm(output): 0.3613, norm(x): 0.3556, norm(y): 1.0008, norm:2.3670, tok/sec: 106425.00, flops:111.70, batch-reuse:1
@ 311 train 6.5951 , allloss: 7.3891, dt: 1231.82ms, fracRes: 0.0087, norm(attn): 0.0684, norm(output): 0.3633, norm(x): 0.3578, norm(y): 1.0008, norm:2.2017, tok/sec: 106405.39, flops:111.67, batch-reuse:1
@ 312 train 6.6628 , allloss: 7.4547, dt: 1226.06ms, fracRes: 0.0085, norm(attn): 0.0679, norm(output): 0.3633, norm(x): 0.3589, norm(y): 1.0007, norm:2.6245, tok/sec: 106904.72, flops:112.20, batch-reuse:1
@ 313 train 6.4695 , allloss: 7.2562, dt: 1225.45ms, fracRes: 0.0084, norm(attn): 0.0620, norm(output): 0.3652, norm(x): 0.3610, norm(y): 1.0007, norm:2.1711, tok/sec: 106958.24, flops:112.25, batch-reuse:1
@ 314 train 6.4797 , allloss: 7.2613, dt: 1237.26ms, fracRes: 0.0084, norm(attn): 0.0645, norm(output): 0.3652, norm(x): 0.3630, norm(y): 1.0007, norm:1.8689, tok/sec: 105937.61, flops:111.18, batch-reuse:1
@ 315 train 6.4923 , allloss: 7.2636, dt: 1219.32ms, fracRes: 0.0085, norm(attn): 0.0674, norm(output): 0.3711, norm(x): 0.3670, norm(y): 1.0007, norm:1.8571, tok/sec: 107496.40, flops:112.82, batch-reuse:1
@ 316 train 6.5156 , allloss: 7.2740, dt: 1219.23ms, fracRes: 0.0087, norm(attn): 0.0679, norm(output): 0.3730, norm(x): 0.3678, norm(y): 1.0007, norm:1.8270, tok/sec: 107503.82, flops:112.83, batch-reuse:1
@ 317 train 6.5512 , allloss: 7.3234, dt: 1196.85ms, fracRes: 0.0086, norm(attn): 0.0669, norm(output): 0.3730, norm(x): 0.3707, norm(y): 1.0007, norm:2.1734, tok/sec: 109514.46, flops:114.94, batch-reuse:1
@ 318 train 6.4295 , allloss: 7.2058, dt: 1198.51ms, fracRes: 0.0088, norm(attn): 0.0664, norm(output): 0.3730, norm(x): 0.3688, norm(y): 1.0007, norm:1.8223, tok/sec: 109362.49, flops:114.78, batch-reuse:1
@ 319 train 6.3831 , allloss: 7.1478, dt: 1184.86ms, fracRes: 0.0091, norm(attn): 0.0649, norm(output): 0.3730, norm(x): 0.3697, norm(y): 1.0007, norm:2.0913, tok/sec: 110622.26, flops:116.10, batch-reuse:1
@ 320 train 6.4722 , allloss: 7.2528, dt: 1206.68ms, fracRes: 0.0091, norm(attn): 0.0615, norm(output): 0.3750, norm(x): 0.3721, norm(y): 1.0007, norm:1.7497, tok/sec: 108622.32, flops:114.00, batch-reuse:1
@ 321 train 6.5051 , allloss: 7.2892, dt: 1205.80ms, fracRes: 0.0091, norm(attn): 0.0613, norm(output): 0.3750, norm(x): 0.3721, norm(y): 1.0007, norm:1.7965, tok/sec: 108701.55, flops:114.08, batch-reuse:1
@ 322 train 6.3953 , allloss: 7.2003, dt: 1202.57ms, fracRes: 0.0092, norm(attn): 0.0598, norm(output): 0.3770, norm(x): 0.3731, norm(y): 1.0007, norm:1.6988, tok/sec: 108993.13, flops:114.39, batch-reuse:1
@ 323 train 6.5011 , allloss: 7.3179, dt: 1216.59ms, fracRes: 0.0094, norm(attn): 0.0596, norm(output): 0.3770, norm(x): 0.3757, norm(y): 1.0007, norm:1.9971, tok/sec: 107737.10, flops:113.07, batch-reuse:1
@ 324 train 6.4035 , allloss: 7.2213, dt: 1209.84ms, fracRes: 0.0100, norm(attn): 0.0610, norm(output): 0.3750, norm(x): 0.3758, norm(y): 1.0007, norm:1.8937, tok/sec: 108338.24, flops:113.70, batch-reuse:1
@ 325 train 6.4286 , allloss: 7.2847, dt: 1200.75ms, fracRes: 0.0107, norm(attn): 0.0601, norm(output): 0.3770, norm(x): 0.3769, norm(y): 1.0007, norm:1.9403, tok/sec: 109158.28, flops:114.56, batch-reuse:1
@ 326 train 6.4960 , allloss: 7.3374, dt: 1209.28ms, fracRes: 0.0106, norm(attn): 0.0601, norm(output): 0.3770, norm(x): 0.3785, norm(y): 1.0006, norm:2.0406, tok/sec: 108388.55, flops:113.76, batch-reuse:1
@ 327 train 6.5259 , allloss: 7.3664, dt: 1199.30ms, fracRes: 0.0104, norm(attn): 0.0608, norm(output): 0.3770, norm(x): 0.3774, norm(y): 1.0006, norm:2.0590, tok/sec: 109290.39, flops:114.70, batch-reuse:1
@ 328 train 6.4544 , allloss: 7.3087, dt: 1198.72ms, fracRes: 0.0100, norm(attn): 0.0601, norm(output): 0.3770, norm(x): 0.3778, norm(y): 1.0006, norm:2.1523, tok/sec: 109343.56, flops:114.76, batch-reuse:1
@ 329 train 6.4463 , allloss: 7.2925, dt: 1210.55ms, fracRes: 0.0098, norm(attn): 0.0596, norm(output): 0.3809, norm(x): 0.3797, norm(y): 1.0006, norm:2.3546, tok/sec: 108275.09, flops:113.64, batch-reuse:1
@ 330 train 6.4466 , allloss: 7.3007, dt: 1214.67ms, fracRes: 0.0097, norm(attn): 0.0552, norm(output): 0.3809, norm(x): 0.3814, norm(y): 1.0006, norm:2.5272, tok/sec: 107907.48, flops:113.25, batch-reuse:1
@ 331 train 6.4116 , allloss: 7.2600, dt: 1209.89ms, fracRes: 0.0094, norm(attn): 0.0623, norm(output): 0.3828, norm(x): 0.3829, norm(y): 1.0007, norm:2.8182, tok/sec: 108334.15, flops:113.70, batch-reuse:1
@ 332 train 6.3847 , allloss: 7.2380, dt: 1220.97ms, fracRes: 0.0094, norm(attn): 0.0574, norm(output): 0.3848, norm(x): 0.3862, norm(y): 1.0006, norm:2.4292, tok/sec: 107350.53, flops:112.67, batch-reuse:1
@ 333 train 6.4412 , allloss: 7.2953, dt: 1194.14ms, fracRes: 0.0092, norm(attn): 0.0569, norm(output): 0.3906, norm(x): 0.3883, norm(y): 1.0006, norm:1.9457, tok/sec: 109762.77, flops:115.20, batch-reuse:1
@ 334 train 6.3955 , allloss: 7.2575, dt: 1197.81ms, fracRes: 0.0086, norm(attn): 0.0588, norm(output): 0.3867, norm(x): 0.3858, norm(y): 1.0006, norm:2.8165, tok/sec: 109426.46, flops:114.85, batch-reuse:1
@ 335 train 6.3746 , allloss: 7.2301, dt: 1226.50ms, fracRes: 0.0087, norm(attn): 0.0557, norm(output): 0.3867, norm(x): 0.3870, norm(y): 1.0006, norm:2.9421, tok/sec: 106866.92, flops:112.16, batch-reuse:1
@ 336 train 6.4131 , allloss: 7.2397, dt: 1192.83ms, fracRes: 0.0086, norm(attn): 0.0559, norm(output): 0.3945, norm(x): 0.3894, norm(y): 1.0006, norm:2.2650, tok/sec: 109883.12, flops:115.32, batch-reuse:1
@ 337 train 6.4030 , allloss: 7.2142, dt: 1203.44ms, fracRes: 0.0086, norm(attn): 0.0581, norm(output): 0.3965, norm(x): 0.3900, norm(y): 1.0006, norm:2.4985, tok/sec: 108914.26, flops:114.31, batch-reuse:1
@ 338 train 6.3911 , allloss: 7.1954, dt: 1214.53ms, fracRes: 0.0093, norm(attn): 0.0552, norm(output): 0.3984, norm(x): 0.3931, norm(y): 1.0006, norm:3.1225, tok/sec: 107919.83, flops:113.26, batch-reuse:1
@ 339 train 6.4957 , allloss: 7.2779, dt: 1213.74ms, fracRes: 0.0095, norm(attn): 0.0598, norm(output): 0.4023, norm(x): 0.3950, norm(y): 1.0006, norm:3.0009, tok/sec: 107990.38, flops:113.34, batch-reuse:1
@ 340 train 6.4480 , allloss: 7.2471, dt: 1194.09ms, fracRes: 0.0088, norm(attn): 0.0535, norm(output): 0.4023, norm(x): 0.3965, norm(y): 1.0005, norm:2.1945, tok/sec: 109767.35, flops:115.20, batch-reuse:1
@ 341 train 6.3700 , allloss: 7.1612, dt: 1195.63ms, fracRes: 0.0090, norm(attn): 0.0544, norm(output): 0.4023, norm(x): 0.3948, norm(y): 1.0006, norm:1.8216, tok/sec: 109625.71, flops:115.05, batch-reuse:1
@ 342 train 6.3118 , allloss: 7.0941, dt: 1201.24ms, fracRes: 0.0093, norm(attn): 0.0593, norm(output): 0.4004, norm(x): 0.3943, norm(y): 1.0007, norm:2.2393, tok/sec: 109113.72, flops:114.52, batch-reuse:1
@ 343 train 6.3690 , allloss: 7.1603, dt: 1198.96ms, fracRes: 0.0091, norm(attn): 0.0581, norm(output): 0.4004, norm(x): 0.3957, norm(y): 1.0007, norm:1.7670, tok/sec: 109321.17, flops:114.73, batch-reuse:1
@ 344 train 6.3559 , allloss: 7.1556, dt: 1204.62ms, fracRes: 0.0092, norm(attn): 0.0547, norm(output): 0.4004, norm(x): 0.3955, norm(y): 1.0006, norm:2.7108, tok/sec: 108807.94, flops:114.20, batch-reuse:1
@ 345 train 6.3561 , allloss: 7.1878, dt: 1206.43ms, fracRes: 0.0093, norm(attn): 0.0603, norm(output): 0.4043, norm(x): 0.3986, norm(y): 1.0007, norm:3.2389, tok/sec: 108644.80, flops:114.02, batch-reuse:1
@ 346 train 6.4022 , allloss: 7.2446, dt: 1200.92ms, fracRes: 0.0093, norm(attn): 0.0615, norm(output): 0.4043, norm(x): 0.4006, norm(y): 1.0006, norm:2.5943, tok/sec: 109143.09, flops:114.55, batch-reuse:1
@ 347 train 6.4271 , allloss: 7.2721, dt: 1213.58ms, fracRes: 0.0089, norm(attn): 0.0625, norm(output): 0.4062, norm(x): 0.4034, norm(y): 1.0006, norm:3.1358, tok/sec: 108004.13, flops:113.35, batch-reuse:1
@ 348 train 6.3719 , allloss: 7.1852, dt: 1197.20ms, fracRes: 0.0090, norm(attn): 0.0581, norm(output): 0.4043, norm(x): 0.4012, norm(y): 1.0006, norm:2.6132, tok/sec: 109482.12, flops:114.90, batch-reuse:1
@ 349 train 6.4154 , allloss: 7.2287, dt: 1192.30ms, fracRes: 0.0090, norm(attn): 0.0615, norm(output): 0.4062, norm(x): 0.4031, norm(y): 1.0006, norm:2.1585, tok/sec: 109932.50, flops:115.38, batch-reuse:1
@ 350 train 6.4391 , allloss: 7.2330, dt: 1217.07ms, fracRes: 0.0089, norm(attn): 0.0625, norm(output): 0.4062, norm(x): 0.4039, norm(y): 1.0006, norm:2.0960, tok/sec: 107694.55, flops:113.03, batch-reuse:1
@ 351 train 6.4242 , allloss: 7.2077, dt: 1189.30ms, fracRes: 0.0091, norm(attn): 0.0630, norm(output): 0.4062, norm(x): 0.4063, norm(y): 1.0006, norm:2.2975, tok/sec: 110209.27, flops:115.67, batch-reuse:1
@ 352 train 6.4713 , allloss: 7.2553, dt: 1221.07ms, fracRes: 0.0090, norm(attn): 0.0635, norm(output): 0.4082, norm(x): 0.4057, norm(y): 1.0006, norm:2.2030, tok/sec: 107341.73, flops:112.66, batch-reuse:1
@ 353 train 6.4153 , allloss: 7.2056, dt: 1220.84ms, fracRes: 0.0091, norm(attn): 0.0625, norm(output): 0.4062, norm(x): 0.4060, norm(y): 1.0006, norm:1.7975, tok/sec: 107362.38, flops:112.68, batch-reuse:1
@ 354 train 6.3788 , allloss: 7.1701, dt: 1206.33ms, fracRes: 0.0093, norm(attn): 0.0593, norm(output): 0.4082, norm(x): 0.4072, norm(y): 1.0005, norm:2.1998, tok/sec: 108653.64, flops:114.03, batch-reuse:1
@ 355 train 6.3660 , allloss: 7.1477, dt: 1212.61ms, fracRes: 0.0096, norm(attn): 0.0649, norm(output): 0.4082, norm(x): 0.4074, norm(y): 1.0006, norm:2.2244, tok/sec: 108091.15, flops:113.44, batch-reuse:1
@ 356 train 6.4778 , allloss: 7.2537, dt: 1204.09ms, fracRes: 0.0098, norm(attn): 0.0654, norm(output): 0.4082, norm(x): 0.4100, norm(y): 1.0006, norm:2.4273, tok/sec: 108855.88, flops:114.25, batch-reuse:1
@ 357 train 6.4217 , allloss: 7.2038, dt: 1202.75ms, fracRes: 0.0098, norm(attn): 0.0618, norm(output): 0.4102, norm(x): 0.4105, norm(y): 1.0005, norm:1.8156, tok/sec: 108976.87, flops:114.37, batch-reuse:1
@ 358 train 6.3839 , allloss: 7.1605, dt: 1212.43ms, fracRes: 0.0099, norm(attn): 0.0625, norm(output): 0.4082, norm(x): 0.4112, norm(y): 1.0005, norm:2.1145, tok/sec: 108106.56, flops:113.46, batch-reuse:1
@ 359 train 6.5632 , allloss: 7.3585, dt: 1197.78ms, fracRes: 0.0099, norm(attn): 0.0664, norm(output): 0.4102, norm(x): 0.4127, norm(y): 1.0005, norm:2.3006, tok/sec: 109429.34, flops:114.85, batch-reuse:1
@ 360 train 6.4336 , allloss: 7.2288, dt: 1212.78ms, fracRes: 0.0105, norm(attn): 0.0640, norm(output): 0.4160, norm(x): 0.4163, norm(y): 1.0005, norm:2.0266, tok/sec: 108076.06, flops:113.43, batch-reuse:1
@ 361 train 6.4147 , allloss: 7.2184, dt: 1206.73ms, fracRes: 0.0107, norm(attn): 0.0645, norm(output): 0.4141, norm(x): 0.4158, norm(y): 1.0005, norm:1.8987, tok/sec: 108617.13, flops:114.00, batch-reuse:1
@ 362 train 6.3542 , allloss: 7.1531, dt: 1212.16ms, fracRes: 0.0109, norm(attn): 0.0625, norm(output): 0.4141, norm(x): 0.4143, norm(y): 1.0005, norm:2.2244, tok/sec: 108131.06, flops:113.49, batch-reuse:1
@ 363 train 6.3647 , allloss: 7.1572, dt: 1221.39ms, fracRes: 0.0106, norm(attn): 0.0649, norm(output): 0.4180, norm(x): 0.4166, norm(y): 1.0005, norm:2.1793, tok/sec: 107314.17, flops:112.63, batch-reuse:1
@ 364 train 6.4329 , allloss: 7.2217, dt: 1239.23ms, fracRes: 0.0100, norm(attn): 0.0640, norm(output): 0.4219, norm(x): 0.4177, norm(y): 1.0005, norm:2.7267, tok/sec: 105769.16, flops:111.01, batch-reuse:1
@ 365 train 6.4014 , allloss: 7.1878, dt: 1207.26ms, fracRes: 0.0099, norm(attn): 0.0649, norm(output): 0.4258, norm(x): 0.4200, norm(y): 1.0005, norm:2.5438, tok/sec: 108570.00, flops:113.95, batch-reuse:1
@ 366 train 6.4555 , allloss: 7.2545, dt: 1217.64ms, fracRes: 0.0095, norm(attn): 0.0618, norm(output): 0.4297, norm(x): 0.4223, norm(y): 1.0004, norm:2.1903, tok/sec: 107644.11, flops:112.97, batch-reuse:1
@ 367 train 6.3529 , allloss: 7.1283, dt: 1212.04ms, fracRes: 0.0093, norm(attn): 0.0618, norm(output): 0.4297, norm(x): 0.4235, norm(y): 1.0004, norm:2.3871, tok/sec: 108141.39, flops:113.50, batch-reuse:1
@ 368 train 6.4666 , allloss: 7.2367, dt: 1222.74ms, fracRes: 0.0095, norm(attn): 0.0649, norm(output): 0.4316, norm(x): 0.4251, norm(y): 1.0004, norm:2.0651, tok/sec: 107194.92, flops:112.50, batch-reuse:1
@ 369 train 6.3918 , allloss: 7.1503, dt: 1203.71ms, fracRes: 0.0096, norm(attn): 0.0635, norm(output): 0.4336, norm(x): 0.4262, norm(y): 1.0004, norm:1.8809, tok/sec: 108889.68, flops:114.28, batch-reuse:1
@ 370 train 6.5371 , allloss: 7.2925, dt: 1222.58ms, fracRes: 0.0095, norm(attn): 0.0635, norm(output): 0.4336, norm(x): 0.4284, norm(y): 1.0004, norm:2.1534, tok/sec: 107209.72, flops:112.52, batch-reuse:1
@ 371 train 6.4648 , allloss: 7.2154, dt: 1242.23ms, fracRes: 0.0096, norm(attn): 0.0635, norm(output): 0.4355, norm(x): 0.4277, norm(y): 1.0004, norm:2.1769, tok/sec: 105513.84, flops:110.74, batch-reuse:1
@ 372 train 6.5454 , allloss: 7.3085, dt: 1194.90ms, fracRes: 0.0096, norm(attn): 0.0618, norm(output): 0.4355, norm(x): 0.4283, norm(y): 1.0004, norm:2.5724, tok/sec: 109693.06, flops:115.12, batch-reuse:1
@ 373 train 6.5213 , allloss: 7.2959, dt: 1194.70ms, fracRes: 0.0101, norm(attn): 0.0649, norm(output): 0.4355, norm(x): 0.4310, norm(y): 1.0004, norm:2.3986, tok/sec: 109710.90, flops:115.14, batch-reuse:1
@ 374 train 6.4926 , allloss: 7.2817, dt: 1193.82ms, fracRes: 0.0101, norm(attn): 0.0659, norm(output): 0.4375, norm(x): 0.4334, norm(y): 1.0003, norm:1.9017, tok/sec: 109792.01, flops:115.23, batch-reuse:1
@ 375 train 6.5622 , allloss: 7.3832, dt: 1200.62ms, fracRes: 0.0099, norm(attn): 0.0654, norm(output): 0.4375, norm(x): 0.4325, norm(y): 1.0003, norm:1.7576, tok/sec: 109170.35, flops:114.58, batch-reuse:1
@ 376 train 6.6153 , allloss: 7.4034, dt: 1202.66ms, fracRes: 0.0097, norm(attn): 0.0645, norm(output): 0.4375, norm(x): 0.4358, norm(y): 1.0002, norm:1.8549, tok/sec: 108984.82, flops:114.38, batch-reuse:1
@ 377 train 6.5150 , allloss: 7.2926, dt: 1230.17ms, fracRes: 0.0096, norm(attn): 0.0654, norm(output): 0.4395, norm(x): 0.4387, norm(y): 1.0002, norm:2.0349, tok/sec: 106548.29, flops:111.82, batch-reuse:1
@ 378 train 6.4704 , allloss: 7.2421, dt: 1202.26ms, fracRes: 0.0094, norm(attn): 0.0635, norm(output): 0.4395, norm(x): 0.4391, norm(y): 1.0002, norm:2.3930, tok/sec: 109021.58, flops:114.42, batch-reuse:1
@ 379 train 6.5616 , allloss: 7.3377, dt: 1204.77ms, fracRes: 0.0091, norm(attn): 0.0669, norm(output): 0.4395, norm(x): 0.4400, norm(y): 1.0002, norm:2.0874, tok/sec: 108794.40, flops:114.18, batch-reuse:1
@ 380 train 6.6050 , allloss: 7.3652, dt: 1210.22ms, fracRes: 0.0089, norm(attn): 0.0698, norm(output): 0.4414, norm(x): 0.4423, norm(y): 1.0002, norm:1.9237, tok/sec: 108304.31, flops:113.67, batch-reuse:1
@ 381 train 6.5338 , allloss: 7.2765, dt: 1191.40ms, fracRes: 0.0089, norm(attn): 0.0708, norm(output): 0.4414, norm(x): 0.4445, norm(y): 1.0002, norm:1.8694, tok/sec: 110014.88, flops:115.46, batch-reuse:1
@ 382 train 6.4819 , allloss: 7.2160, dt: 1214.36ms, fracRes: 0.0089, norm(attn): 0.0693, norm(output): 0.4414, norm(x): 0.4449, norm(y): 1.0001, norm:1.5056, tok/sec: 107934.64, flops:113.28, batch-reuse:1
@ 383 train 6.4652 , allloss: 7.1912, dt: 1237.40ms, fracRes: 0.0085, norm(attn): 0.0688, norm(output): 0.4453, norm(x): 0.4475, norm(y): 1.0001, norm:1.5722, tok/sec: 105925.36, flops:111.17, batch-reuse:1
@ 384 train 6.4783 , allloss: 7.1993, dt: 1209.16ms, fracRes: 0.0086, norm(attn): 0.0688, norm(output): 0.4453, norm(x): 0.4481, norm(y): 1.0001, norm:1.8411, tok/sec: 108398.93, flops:113.77, batch-reuse:1
@ 385 train 6.4418 , allloss: 7.1641, dt: 1195.34ms, fracRes: 0.0089, norm(attn): 0.0684, norm(output): 0.4453, norm(x): 0.4492, norm(y): 1.0001, norm:1.6311, tok/sec: 109652.40, flops:115.08, batch-reuse:1
@ 386 train 6.5315 , allloss: 7.2632, dt: 1204.33ms, fracRes: 0.0086, norm(attn): 0.0669, norm(output): 0.4609, norm(x): 0.4514, norm(y): 1.0001, norm:1.7282, tok/sec: 108833.96, flops:114.22, batch-reuse:1
@ 387 train 6.4839 , allloss: 7.2162, dt: 1214.50ms, fracRes: 0.0088, norm(attn): 0.0674, norm(output): 0.4609, norm(x): 0.4526, norm(y): 1.0001, norm:1.7078, tok/sec: 107922.52, flops:113.27, batch-reuse:1
@ 388 train 6.4165 , allloss: 7.1540, dt: 1216.80ms, fracRes: 0.0090, norm(attn): 0.0635, norm(output): 0.4590, norm(x): 0.4508, norm(y): 1.0001, norm:2.3264, tok/sec: 107718.63, flops:113.05, batch-reuse:1
@ 389 train 6.4915 , allloss: 7.2475, dt: 1207.96ms, fracRes: 0.0088, norm(attn): 0.0654, norm(output): 0.4609, norm(x): 0.4548, norm(y): 1.0001, norm:2.5217, tok/sec: 108506.85, flops:113.88, batch-reuse:1
@ 390 train 6.5279 , allloss: 7.3037, dt: 1218.23ms, fracRes: 0.0087, norm(attn): 0.0645, norm(output): 0.4648, norm(x): 0.4581, norm(y): 1.0001, norm:2.2616, tok/sec: 107592.06, flops:112.92, batch-reuse:1
@ 391 train 6.4221 , allloss: 7.2277, dt: 1248.94ms, fracRes: 0.0084, norm(attn): 0.0605, norm(output): 0.4668, norm(x): 0.4599, norm(y): 1.0000, norm:2.0931, tok/sec: 104946.70, flops:110.14, batch-reuse:1
@ 392 train 6.5464 , allloss: 7.3324, dt: 1250.42ms, fracRes: 0.0086, norm(attn): 0.0623, norm(output): 0.4668, norm(x): 0.4603, norm(y): 1.0000, norm:2.6217, tok/sec: 104822.25, flops:110.01, batch-reuse:1
@ 393 train 6.5006 , allloss: 7.3162, dt: 1222.34ms, fracRes: 0.0086, norm(attn): 0.0608, norm(output): 0.4668, norm(x): 0.4611, norm(y): 1.0001, norm:2.5138, tok/sec: 107230.26, flops:112.54, batch-reuse:1
@ 394 train 6.4593 , allloss: 7.2544, dt: 1219.01ms, fracRes: 0.0085, norm(attn): 0.0591, norm(output): 0.4668, norm(x): 0.4624, norm(y): 1.0001, norm:2.0284, tok/sec: 107523.24, flops:112.85, batch-reuse:1
@ 395 train 6.5492 , allloss: 7.3657, dt: 1252.15ms, fracRes: 0.0086, norm(attn): 0.0635, norm(output): 0.4688, norm(x): 0.4665, norm(y): 1.0000, norm:2.9521, tok/sec: 104677.51, flops:109.86, batch-reuse:1
@ 396 train 6.4027 , allloss: 7.2081, dt: 1202.98ms, fracRes: 0.0090, norm(attn): 0.0601, norm(output): 0.4688, norm(x): 0.4652, norm(y): 1.0000, norm:2.3271, tok/sec: 108956.28, flops:114.35, batch-reuse:1
@ 397 train 6.5367 , allloss: 7.3378, dt: 1223.64ms, fracRes: 0.0091, norm(attn): 0.0630, norm(output): 0.4668, norm(x): 0.4643, norm(y): 1.0000, norm:2.7780, tok/sec: 107116.39, flops:112.42, batch-reuse:1
@ 398 train 6.5116 , allloss: 7.3167, dt: 1231.79ms, fracRes: 0.0093, norm(attn): 0.0654, norm(output): 0.4688, norm(x): 0.4672, norm(y): 1.0000, norm:2.6286, tok/sec: 106408.07, flops:111.68, batch-reuse:1
@ 399 train 6.5043 , allloss: 7.2998, dt: 1224.86ms, fracRes: 0.0095, norm(attn): 0.0625, norm(output): 0.4688, norm(x): 0.4687, norm(y): 1.0000, norm:2.2144, tok/sec: 107009.43, flops:112.31, batch-reuse:1
@ 400 train 6.5164 , allloss: 7.2979, dt: 1212.24ms, fracRes: 0.0094, norm(attn): 0.0620, norm(output): 0.4688, norm(x): 0.4696, norm(y): 1.0001, norm:1.7649, tok/sec: 108123.57, flops:113.48, batch-reuse:1
@ 401 train 6.4977 , allloss: 7.2669, dt: 1212.66ms, fracRes: 0.0096, norm(attn): 0.0645, norm(output): 0.4707, norm(x): 0.4705, norm(y): 1.0001, norm:1.7198, tok/sec: 108086.12, flops:113.44, batch-reuse:1
@ 402 train 6.4766 , allloss: 7.2411, dt: 1233.65ms, fracRes: 0.0098, norm(attn): 0.0618, norm(output): 0.4707, norm(x): 0.4701, norm(y): 1.0000, norm:1.9130, tok/sec: 106247.65, flops:111.51, batch-reuse:1
@ 403 train 6.5248 , allloss: 7.2765, dt: 1198.43ms, fracRes: 0.0104, norm(attn): 0.0684, norm(output): 0.4707, norm(x): 0.4727, norm(y): 1.0000, norm:2.0274, tok/sec: 109369.54, flops:114.79, batch-reuse:1
@ 404 train 6.4762 , allloss: 7.2170, dt: 1206.21ms, fracRes: 0.0107, norm(attn): 0.0674, norm(output): 0.4727, norm(x): 0.4719, norm(y): 1.0001, norm:2.7737, tok/sec: 108664.75, flops:114.05, batch-reuse:1
@ 405 train 6.4669 , allloss: 7.2105, dt: 1205.23ms, fracRes: 0.0109, norm(attn): 0.0635, norm(output): 0.4707, norm(x): 0.4715, norm(y): 1.0001, norm:2.0929, tok/sec: 108752.54, flops:114.14, batch-reuse:1
@ 406 train 6.4567 , allloss: 7.1990, dt: 1229.66ms, fracRes: 0.0106, norm(attn): 0.0654, norm(output): 0.4746, norm(x): 0.4743, norm(y): 1.0001, norm:1.8699, tok/sec: 106592.35, flops:111.87, batch-reuse:1
@ 407 train 6.4309 , allloss: 7.1653, dt: 1198.77ms, fracRes: 0.0109, norm(attn): 0.0635, norm(output): 0.4766, norm(x): 0.4768, norm(y): 1.0000, norm:1.7634, tok/sec: 109338.54, flops:114.75, batch-reuse:1
@ 408 train 6.4671 , allloss: 7.1957, dt: 1201.80ms, fracRes: 0.0110, norm(attn): 0.0623, norm(output): 0.4766, norm(x): 0.4758, norm(y): 1.0000, norm:2.2940, tok/sec: 109062.89, flops:114.46, batch-reuse:1
@ 409 train 6.3977 , allloss: 7.1293, dt: 1213.96ms, fracRes: 0.0114, norm(attn): 0.0674, norm(output): 0.4785, norm(x): 0.4792, norm(y): 1.0001, norm:2.2504, tok/sec: 107970.51, flops:113.32, batch-reuse:1
@ 410 train 6.4400 , allloss: 7.1731, dt: 1223.83ms, fracRes: 0.0112, norm(attn): 0.0659, norm(output): 0.4883, norm(x): 0.4797, norm(y): 1.0000, norm:1.6240, tok/sec: 107099.47, flops:112.40, batch-reuse:1
@ 411 train 6.4319 , allloss: 7.1655, dt: 1249.41ms, fracRes: 0.0108, norm(attn): 0.0645, norm(output): 0.4902, norm(x): 0.4793, norm(y): 0.9999, norm:1.8030, tok/sec: 104907.26, flops:110.10, batch-reuse:1
@ 412 train 6.4316 , allloss: 7.1511, dt: 1215.84ms, fracRes: 0.0107, norm(attn): 0.0649, norm(output): 0.4922, norm(x): 0.4808, norm(y): 0.9999, norm:1.8078, tok/sec: 107804.03, flops:113.14, batch-reuse:1
@ 413 train 6.1379 , allloss: 6.8444, dt: 1197.41ms, fracRes: 0.0105, norm(attn): 0.0679, norm(output): 0.4922, norm(x): 0.4852, norm(y): 0.9999, norm:2.4515, tok/sec: 109463.13, flops:114.88, batch-reuse:1
@ 414 train 6.4860 , allloss: 7.1997, dt: 1229.55ms, fracRes: 0.0104, norm(attn): 0.0664, norm(output): 0.4961, norm(x): 0.4876, norm(y): 0.9999, norm:2.7224, tok/sec: 106601.72, flops:111.88, batch-reuse:1
@ 415 train 6.3793 , allloss: 7.1011, dt: 1217.53ms, fracRes: 0.0107, norm(attn): 0.0659, norm(output): 0.4941, norm(x): 0.4865, norm(y): 0.9999, norm:2.0150, tok/sec: 107653.89, flops:112.98, batch-reuse:1
@ 416 train 6.5246 , allloss: 7.2397, dt: 1192.29ms, fracRes: 0.0106, norm(attn): 0.0649, norm(output): 0.4941, norm(x): 0.4864, norm(y): 0.9998, norm:2.2731, tok/sec: 109933.00, flops:115.38, batch-reuse:1
@ 417 train 6.4076 , allloss: 7.1168, dt: 1212.22ms, fracRes: 0.0102, norm(attn): 0.0669, norm(output): 0.4980, norm(x): 0.4900, norm(y): 0.9998, norm:1.9732, tok/sec: 108125.42, flops:113.48, batch-reuse:1
@ 418 train 6.4994 , allloss: 7.2070, dt: 1211.41ms, fracRes: 0.0098, norm(attn): 0.0664, norm(output): 0.4980, norm(x): 0.4905, norm(y): 0.9998, norm:2.0995, tok/sec: 108198.07, flops:113.56, batch-reuse:1
@ 419 train 6.4357 , allloss: 7.1369, dt: 1222.55ms, fracRes: 0.0100, norm(attn): 0.0664, norm(output): 0.4980, norm(x): 0.4923, norm(y): 0.9998, norm:2.0213, tok/sec: 107212.40, flops:112.52, batch-reuse:1
@ 420 train 6.3949 , allloss: 7.0880, dt: 1219.83ms, fracRes: 0.0098, norm(attn): 0.0654, norm(output): 0.4980, norm(x): 0.4928, norm(y): 0.9997, norm:2.2198, tok/sec: 107451.46, flops:112.77, batch-reuse:1
@ 421 train 6.5383 , allloss: 7.2302, dt: 1210.45ms, fracRes: 0.0094, norm(attn): 0.0664, norm(output): 0.4980, norm(x): 0.4939, norm(y): 0.9997, norm:2.2959, tok/sec: 108283.51, flops:113.65, batch-reuse:1
@ 422 train 6.4704 , allloss: 7.1662, dt: 1209.76ms, fracRes: 0.0095, norm(attn): 0.0684, norm(output): 0.5000, norm(x): 0.4953, norm(y): 0.9997, norm:2.6435, tok/sec: 108345.25, flops:113.71, batch-reuse:1
@ 423 train 6.4735 , allloss: 7.1635, dt: 1197.85ms, fracRes: 0.0094, norm(attn): 0.0723, norm(output): 0.5000, norm(x): 0.4964, norm(y): 0.9997, norm:2.3380, tok/sec: 109422.83, flops:114.84, batch-reuse:1
@ 424 train 6.4350 , allloss: 7.1121, dt: 1200.79ms, fracRes: 0.0097, norm(attn): 0.0688, norm(output): 0.5000, norm(x): 0.4958, norm(y): 0.9997, norm:1.8880, tok/sec: 109154.99, flops:114.56, batch-reuse:1
@ 425 train 6.5283 , allloss: 7.1929, dt: 1210.16ms, fracRes: 0.0097, norm(attn): 0.0684, norm(output): 0.5000, norm(x): 0.4979, norm(y): 0.9997, norm:2.3380, tok/sec: 108309.71, flops:113.67, batch-reuse:1
@ 426 train 6.4332 , allloss: 7.0925, dt: 1248.38ms, fracRes: 0.0096, norm(attn): 0.0776, norm(output): 0.5039, norm(x): 0.5031, norm(y): 0.9997, norm:2.9845, tok/sec: 104993.80, flops:110.19, batch-reuse:1
@ 427 train 6.4382 , allloss: 7.1293, dt: 1245.45ms, fracRes: 0.0092, norm(attn): 0.0703, norm(output): 0.5039, norm(x): 0.5048, norm(y): 0.9996, norm:1.8845, tok/sec: 105240.61, flops:110.45, batch-reuse:1
@ 428 train 6.4227 , allloss: 7.0968, dt: 1225.62ms, fracRes: 0.0094, norm(attn): 0.0703, norm(output): 0.5078, norm(x): 0.5067, norm(y): 0.9996, norm:2.4674, tok/sec: 106943.01, flops:112.24, batch-reuse:1
@ 429 train 6.3805 , allloss: 7.0506, dt: 1210.15ms, fracRes: 0.0097, norm(attn): 0.0713, norm(output): 0.5078, norm(x): 0.5063, norm(y): 0.9997, norm:2.3214, tok/sec: 108310.67, flops:113.67, batch-reuse:1
@ 430 train 6.4368 , allloss: 7.1008, dt: 1234.93ms, fracRes: 0.0100, norm(attn): 0.0688, norm(output): 0.5078, norm(x): 0.5056, norm(y): 0.9997, norm:1.7227, tok/sec: 106137.27, flops:111.39, batch-reuse:1
@ 431 train 6.4093 , allloss: 7.0640, dt: 1243.03ms, fracRes: 0.0098, norm(attn): 0.0713, norm(output): 0.5078, norm(x): 0.5105, norm(y): 0.9996, norm:1.7552, tok/sec: 105445.68, flops:110.67, batch-reuse:1
@ 432 train 6.4831 , allloss: 7.1716, dt: 1252.24ms, fracRes: 0.0101, norm(attn): 0.0684, norm(output): 0.5078, norm(x): 0.5117, norm(y): 0.9996, norm:1.9300, tok/sec: 104669.64, flops:109.85, batch-reuse:1
@ 433 train 6.4612 , allloss: 7.1092, dt: 1190.78ms, fracRes: 0.0102, norm(attn): 0.0713, norm(output): 0.5273, norm(x): 0.5184, norm(y): 0.9995, norm:1.9773, tok/sec: 110072.84, flops:115.52, batch-reuse:1
@ 434 train 6.5268 , allloss: 7.2103, dt: 1234.13ms, fracRes: 0.0103, norm(attn): 0.0679, norm(output): 0.5195, norm(x): 0.5175, norm(y): 0.9995, norm:2.8389, tok/sec: 106205.98, flops:111.47, batch-reuse:1
@ 435 train 6.3994 , allloss: 7.0729, dt: 1228.56ms, fracRes: 0.0107, norm(attn): 0.0679, norm(output): 0.5234, norm(x): 0.5195, norm(y): 0.9995, norm:1.9800, tok/sec: 106687.09, flops:111.97, batch-reuse:1
@ 436 train 6.5485 , allloss: 7.2297, dt: 1223.68ms, fracRes: 0.0114, norm(attn): 0.0703, norm(output): 0.5273, norm(x): 0.5202, norm(y): 0.9995, norm:2.1922, tok/sec: 107112.99, flops:112.42, batch-reuse:1
@ 437 train 6.4377 , allloss: 7.1595, dt: 1236.75ms, fracRes: 0.0119, norm(attn): 0.0732, norm(output): 0.5273, norm(x): 0.5201, norm(y): 0.9995, norm:2.4064, tok/sec: 105981.36, flops:111.23, batch-reuse:1
@ 438 train 6.4905 , allloss: 7.1620, dt: 1249.96ms, fracRes: 0.0119, norm(attn): 0.0786, norm(output): 0.5312, norm(x): 0.5230, norm(y): 0.9995, norm:2.2415, tok/sec: 104860.58, flops:110.05, batch-reuse:1
@ 439 train 6.3653 , allloss: 7.0335, dt: 1237.15ms, fracRes: 0.0110, norm(attn): 0.0752, norm(output): 0.5273, norm(x): 0.5213, norm(y): 0.9995, norm:2.2181, tok/sec: 105947.06, flops:111.19, batch-reuse:1
@ 440 train 6.3274 , allloss: 6.9754, dt: 1200.59ms, fracRes: 0.0106, norm(attn): 0.0767, norm(output): 0.5273, norm(x): 0.5226, norm(y): 0.9995, norm:2.0111, tok/sec: 109173.35, flops:114.58, batch-reuse:1
@ 441 train 6.4049 , allloss: 7.1181, dt: 1229.06ms, fracRes: 0.0102, norm(attn): 0.0771, norm(output): 0.5312, norm(x): 0.5223, norm(y): 0.9995, norm:1.9854, tok/sec: 106644.00, flops:111.92, batch-reuse:1
@ 442 train 6.4616 , allloss: 7.1751, dt: 1191.57ms, fracRes: 0.0103, norm(attn): 0.0771, norm(output): 0.5312, norm(x): 0.5273, norm(y): 0.9995, norm:1.9815, tok/sec: 109999.08, flops:115.45, batch-reuse:1
@ 443 train 6.4542 , allloss: 7.1673, dt: 1217.64ms, fracRes: 0.0106, norm(attn): 0.0771, norm(output): 0.5352, norm(x): 0.5324, norm(y): 0.9994, norm:2.0821, tok/sec: 107644.43, flops:112.97, batch-reuse:1
@ 444 train 6.4546 , allloss: 7.1120, dt: 1223.37ms, fracRes: 0.0098, norm(attn): 0.0762, norm(output): 0.5352, norm(x): 0.5367, norm(y): 0.9994, norm:2.0049, tok/sec: 107140.34, flops:112.45, batch-reuse:1
@ 445 train 6.3750 , allloss: 7.0655, dt: 1208.03ms, fracRes: 0.0098, norm(attn): 0.0781, norm(output): 0.5391, norm(x): 0.5397, norm(y): 0.9994, norm:2.2872, tok/sec: 108500.23, flops:113.87, batch-reuse:1
@ 446 train 6.3559 , allloss: 7.0417, dt: 1216.31ms, fracRes: 0.0097, norm(attn): 0.0801, norm(output): 0.5469, norm(x): 0.5423, norm(y): 0.9993, norm:2.0404, tok/sec: 107762.19, flops:113.10, batch-reuse:1
@ 447 train 6.3934 , allloss: 7.0811, dt: 1232.15ms, fracRes: 0.0097, norm(attn): 0.0786, norm(output): 0.5547, norm(x): 0.5456, norm(y): 0.9994, norm:1.7319, tok/sec: 106376.53, flops:111.64, batch-reuse:1
@ 448 train 6.3624 , allloss: 7.0344, dt: 1248.91ms, fracRes: 0.0098, norm(attn): 0.0767, norm(output): 0.5586, norm(x): 0.5491, norm(y): 0.9994, norm:2.2538, tok/sec: 104948.84, flops:110.15, batch-reuse:1
@ 449 train 6.3262 , allloss: 7.0484, dt: 1238.89ms, fracRes: 0.0099, norm(attn): 0.0718, norm(output): 0.5586, norm(x): 0.5520, norm(y): 0.9993, norm:1.9963, tok/sec: 105798.04, flops:111.04, batch-reuse:1
@ 450 train 6.3876 , allloss: 7.1111, dt: 1190.45ms, fracRes: 0.0096, norm(attn): 0.0723, norm(output): 0.5586, norm(x): 0.5557, norm(y): 0.9993, norm:2.3179, tok/sec: 110103.15, flops:115.56, batch-reuse:1
@ 451 train 6.3865 , allloss: 7.1155, dt: 1209.09ms, fracRes: 0.0101, norm(attn): 0.0718, norm(output): 0.5625, norm(x): 0.5599, norm(y): 0.9993, norm:2.4019, tok/sec: 108405.86, flops:113.77, batch-reuse:1
@ 452 train 6.3798 , allloss: 7.1443, dt: 1237.19ms, fracRes: 0.0101, norm(attn): 0.0718, norm(output): 0.5664, norm(x): 0.5650, norm(y): 0.9993, norm:2.5756, tok/sec: 105943.55, flops:111.19, batch-reuse:1
@ 453 train 6.3900 , allloss: 7.1399, dt: 1205.81ms, fracRes: 0.0102, norm(attn): 0.0732, norm(output): 0.5664, norm(x): 0.5678, norm(y): 0.9992, norm:2.9835, tok/sec: 108700.67, flops:114.08, batch-reuse:1
@ 454 train 6.3861 , allloss: 7.1144, dt: 1222.57ms, fracRes: 0.0102, norm(attn): 0.0723, norm(output): 0.5703, norm(x): 0.5702, norm(y): 0.9992, norm:2.9145, tok/sec: 107209.81, flops:112.52, batch-reuse:1
@ 455 train 6.4275 , allloss: 7.1457, dt: 1213.33ms, fracRes: 0.0101, norm(attn): 0.0737, norm(output): 0.5703, norm(x): 0.5718, norm(y): 0.9992, norm:2.5678, tok/sec: 108026.31, flops:113.38, batch-reuse:1
@ 456 train 6.3917 , allloss: 7.1328, dt: 1225.33ms, fracRes: 0.0107, norm(attn): 0.0752, norm(output): 0.5742, norm(x): 0.5746, norm(y): 0.9992, norm:2.4363, tok/sec: 106968.93, flops:112.27, batch-reuse:1
@ 457 train 6.4593 , allloss: 7.1319, dt: 1221.64ms, fracRes: 0.0108, norm(attn): 0.0757, norm(output): 0.5781, norm(x): 0.5805, norm(y): 0.9992, norm:2.1460, tok/sec: 107291.97, flops:112.60, batch-reuse:1
@ 458 train 6.4270 , allloss: 7.1194, dt: 1204.68ms, fracRes: 0.0118, norm(attn): 0.0752, norm(output): 0.5820, norm(x): 0.5781, norm(y): 0.9992, norm:2.0593, tok/sec: 108802.25, flops:114.19, batch-reuse:1
@ 459 train 6.3628 , allloss: 7.0315, dt: 1221.27ms, fracRes: 0.0109, norm(attn): 0.0723, norm(output): 0.5859, norm(x): 0.5818, norm(y): 0.9992, norm:1.7777, tok/sec: 107324.15, flops:112.64, batch-reuse:1
@ 460 train 6.3488 , allloss: 7.0298, dt: 1204.99ms, fracRes: 0.0106, norm(attn): 0.0742, norm(output): 0.5859, norm(x): 0.5851, norm(y): 0.9992, norm:2.0986, tok/sec: 108774.76, flops:114.16, batch-reuse:1
@ 461 train 6.3725 , allloss: 7.0870, dt: 1223.09ms, fracRes: 0.0106, norm(attn): 0.0713, norm(output): 0.6016, norm(x): 0.5928, norm(y): 0.9992, norm:2.1703, tok/sec: 107164.79, flops:112.47, batch-reuse:1
@ 462 train 6.4234 , allloss: 7.1305, dt: 1217.30ms, fracRes: 0.0100, norm(attn): 0.0703, norm(output): 0.5977, norm(x): 0.5950, norm(y): 0.9992, norm:1.9255, tok/sec: 107674.60, flops:113.01, batch-reuse:1
@ 463 train 6.3982 , allloss: 7.1580, dt: 1225.73ms, fracRes: 0.0098, norm(attn): 0.0708, norm(output): 0.6055, norm(x): 0.6011, norm(y): 0.9992, norm:1.8078, tok/sec: 106934.08, flops:112.23, batch-reuse:1
@ 464 train 6.3220 , allloss: 7.0115, dt: 1209.75ms, fracRes: 0.0104, norm(attn): 0.0713, norm(output): 0.6055, norm(x): 0.6021, norm(y): 0.9992, norm:2.0684, tok/sec: 108346.02, flops:113.71, batch-reuse:1
@ 465 train 6.2941 , allloss: 7.0062, dt: 1222.77ms, fracRes: 0.0101, norm(attn): 0.0708, norm(output): 0.6055, norm(x): 0.6018, norm(y): 0.9992, norm:1.9291, tok/sec: 107193.11, flops:112.50, batch-reuse:1
@ 466 train 6.3823 , allloss: 7.0941, dt: 1210.74ms, fracRes: 0.0098, norm(attn): 0.0732, norm(output): 0.6133, norm(x): 0.6059, norm(y): 0.9992, norm:2.1166, tok/sec: 108258.16, flops:113.62, batch-reuse:1
@ 467 train 6.2970 , allloss: 6.9978, dt: 1221.48ms, fracRes: 0.0100, norm(attn): 0.0723, norm(output): 0.6172, norm(x): 0.6081, norm(y): 0.9991, norm:2.5604, tok/sec: 107305.84, flops:112.62, batch-reuse:1
@ 468 train 6.2607 , allloss: 6.9734, dt: 1228.39ms, fracRes: 0.0100, norm(attn): 0.0737, norm(output): 0.6211, norm(x): 0.6120, norm(y): 0.9991, norm:2.3586, tok/sec: 106701.96, flops:111.99, batch-reuse:1
@ 469 train 6.2587 , allloss: 7.0043, dt: 1212.17ms, fracRes: 0.0105, norm(attn): 0.0767, norm(output): 0.6211, norm(x): 0.6153, norm(y): 0.9991, norm:2.4019, tok/sec: 108130.27, flops:113.48, batch-reuse:1
@ 470 train 6.3566 , allloss: 7.0582, dt: 1199.39ms, fracRes: 0.0109, norm(attn): 0.0767, norm(output): 0.6250, norm(x): 0.6197, norm(y): 0.9991, norm:2.3744, tok/sec: 109281.77, flops:114.69, batch-reuse:1
@ 471 train 6.2305 , allloss: 6.9394, dt: 1216.96ms, fracRes: 0.0118, norm(attn): 0.0806, norm(output): 0.6250, norm(x): 0.6222, norm(y): 0.9990, norm:3.2407, tok/sec: 107704.26, flops:113.04, batch-reuse:1
@ 472 train 6.3826 , allloss: 7.0906, dt: 1226.92ms, fracRes: 0.0108, norm(attn): 0.0776, norm(output): 0.6250, norm(x): 0.6219, norm(y): 0.9990, norm:3.3366, tok/sec: 106829.83, flops:112.12, batch-reuse:1
@ 473 train 6.3500 , allloss: 7.0908, dt: 1200.64ms, fracRes: 0.0120, norm(attn): 0.0840, norm(output): 0.6250, norm(x): 0.6263, norm(y): 0.9990, norm:3.2152, tok/sec: 109168.36, flops:114.57, batch-reuse:1
@ 474 train 6.2545 , allloss: 6.9431, dt: 1203.68ms, fracRes: 0.0127, norm(attn): 0.0796, norm(output): 0.6328, norm(x): 0.6349, norm(y): 0.9991, norm:2.6829, tok/sec: 108892.51, flops:114.28, batch-reuse:1
@ 475 train 6.2631 , allloss: 6.9370, dt: 1213.02ms, fracRes: 0.0122, norm(attn): 0.0767, norm(output): 0.6367, norm(x): 0.6382, norm(y): 0.9991, norm:2.6090, tok/sec: 108054.19, flops:113.40, batch-reuse:1
@ 476 train 6.2783 , allloss: 6.9321, dt: 1211.01ms, fracRes: 0.0115, norm(attn): 0.0767, norm(output): 0.6445, norm(x): 0.6441, norm(y): 0.9991, norm:2.3119, tok/sec: 108233.75, flops:113.59, batch-reuse:1
@ 477 train 6.3458 , allloss: 7.0889, dt: 1196.74ms, fracRes: 0.0114, norm(attn): 0.0771, norm(output): 0.6484, norm(x): 0.6490, norm(y): 0.9991, norm:2.3161, tok/sec: 109523.91, flops:114.95, batch-reuse:1
@ 478 train 6.3019 , allloss: 7.0498, dt: 1205.17ms, fracRes: 0.0123, norm(attn): 0.0791, norm(output): 0.6562, norm(x): 0.6536, norm(y): 0.9991, norm:2.2890, tok/sec: 108757.89, flops:114.14, batch-reuse:1
@ 479 train 6.3896 , allloss: 7.0986, dt: 1204.27ms, fracRes: 0.0132, norm(attn): 0.0840, norm(output): 0.6523, norm(x): 0.6534, norm(y): 0.9992, norm:2.8104, tok/sec: 108839.41, flops:114.23, batch-reuse:1
@ 480 train 6.2244 , allloss: 6.9242, dt: 1186.58ms, fracRes: 0.0117, norm(attn): 0.0786, norm(output): 0.6641, norm(x): 0.6629, norm(y): 0.9992, norm:2.0536, tok/sec: 110462.18, flops:115.93, batch-reuse:1
@ 481 train 6.3551 , allloss: 7.0421, dt: 1190.69ms, fracRes: 0.0115, norm(attn): 0.0752, norm(output): 0.6836, norm(x): 0.6727, norm(y): 0.9992, norm:2.3189, tok/sec: 110080.79, flops:115.53, batch-reuse:1
@ 482 train 6.2981 , allloss: 6.9796, dt: 1196.47ms, fracRes: 0.0115, norm(attn): 0.0762, norm(output): 0.6836, norm(x): 0.6749, norm(y): 0.9991, norm:2.4527, tok/sec: 109548.81, flops:114.97, batch-reuse:1
@ 483 train 6.3598 , allloss: 7.2035, dt: 1195.68ms, fracRes: 0.0115, norm(attn): 0.0767, norm(output): 0.6875, norm(x): 0.6835, norm(y): 0.9991, norm:2.2080, tok/sec: 109621.53, flops:115.05, batch-reuse:1
@ 484 train 6.2328 , allloss: 6.9896, dt: 1194.67ms, fracRes: 0.0115, norm(attn): 0.0767, norm(output): 0.6914, norm(x): 0.6902, norm(y): 0.9991, norm:2.3893, tok/sec: 109714.27, flops:115.15, batch-reuse:1
@ 485 train 6.1792 , allloss: 6.9878, dt: 1184.58ms, fracRes: 0.0105, norm(attn): 0.0728, norm(output): 0.6992, norm(x): 0.6973, norm(y): 0.9991, norm:2.4409, tok/sec: 110648.83, flops:116.13, batch-reuse:1
@ 486 train 6.3565 , allloss: 7.1102, dt: 1196.08ms, fracRes: 0.0108, norm(attn): 0.0737, norm(output): 0.6953, norm(x): 0.6994, norm(y): 0.9991, norm:2.8086, tok/sec: 109584.49, flops:115.01, batch-reuse:1
@ 487 train 6.2923 , allloss: 7.1030, dt: 1211.72ms, fracRes: 0.0109, norm(attn): 0.0771, norm(output): 0.7070, norm(x): 0.7075, norm(y): 0.9991, norm:3.1459, tok/sec: 108170.33, flops:113.53, batch-reuse:1
@ 488 train 6.1811 , allloss: 7.1074, dt: 1200.05ms, fracRes: 0.0102, norm(attn): 0.0771, norm(output): 0.7266, norm(x): 0.7157, norm(y): 0.9991, norm:3.2975, tok/sec: 109222.56, flops:114.63, batch-reuse:1
@ 489 train 6.2472 , allloss: 7.1587, dt: 1210.03ms, fracRes: 0.0101, norm(attn): 0.0786, norm(output): 0.7305, norm(x): 0.7215, norm(y): 0.9991, norm:2.9162, tok/sec: 108321.59, flops:113.69, batch-reuse:1
@ 490 train 6.2968 , allloss: 7.3969, dt: 1217.37ms, fracRes: 0.0109, norm(attn): 0.0771, norm(output): 0.7383, norm(x): 0.7264, norm(y): 0.9991, norm:3.4023, tok/sec: 107667.98, flops:113.00, batch-reuse:1
@ 491 train 6.3564 , allloss: 7.4676, dt: 1204.18ms, fracRes: 0.0108, norm(attn): 0.0762, norm(output): 0.7461, norm(x): 0.7333, norm(y): 0.9992, norm:3.4679, tok/sec: 108847.82, flops:114.24, batch-reuse:1
@ 492 train 6.3606 , allloss: 7.6223, dt: 1212.41ms, fracRes: 0.0109, norm(attn): 0.0781, norm(output): 0.7500, norm(x): 0.7412, norm(y): 0.9992, norm:3.6470, tok/sec: 108108.48, flops:113.46, batch-reuse:1
@ 493 train 6.2914 , allloss: 7.4307, dt: 1211.45ms, fracRes: 0.0115, norm(attn): 0.0791, norm(output): 0.7500, norm(x): 0.7456, norm(y): 0.9992, norm:2.7397, tok/sec: 108194.52, flops:113.55, batch-reuse:1
@ 494 train 6.2715 , allloss: 7.3043, dt: 1208.32ms, fracRes: 0.0132, norm(attn): 0.0806, norm(output): 0.7539, norm(x): 0.7501, norm(y): 0.9992, norm:2.8956, tok/sec: 108474.67, flops:113.85, batch-reuse:1
@ 495 train 6.1726 , allloss: 7.1611, dt: 1204.63ms, fracRes: 0.0141, norm(attn): 0.0791, norm(output): 0.7539, norm(x): 0.7551, norm(y): 0.9992, norm:2.9677, tok/sec: 108806.71, flops:114.19, batch-reuse:1
@ 496 train 6.2748 , allloss: 7.1399, dt: 1199.45ms, fracRes: 0.0142, norm(attn): 0.0781, norm(output): 0.7656, norm(x): 0.7616, norm(y): 0.9992, norm:2.6231, tok/sec: 109276.47, flops:114.69, batch-reuse:1
@ 497 train 6.2164 , allloss: 7.0599, dt: 1199.83ms, fracRes: 0.0159, norm(attn): 0.0825, norm(output): 0.7656, norm(x): 0.7630, norm(y): 0.9992, norm:2.8992, tok/sec: 109242.59, flops:114.65, batch-reuse:1
@ 498 train 6.3733 , allloss: 7.3359, dt: 1185.09ms, fracRes: 0.0162, norm(attn): 0.0830, norm(output): 0.7695, norm(x): 0.7683, norm(y): 0.9992, norm:2.8404, tok/sec: 110601.03, flops:116.08, batch-reuse:1
@ 499 train 6.3450 , allloss: 7.3913, dt: 1191.57ms, fracRes: 0.0151, norm(attn): 0.0864, norm(output): 0.7734, norm(x): 0.7709, norm(y): 0.9992, norm:2.4311, tok/sec: 109999.52, flops:115.45, batch-reuse:1
@ 500 train 6.2583 , allloss: 7.3126, dt: 1188.63ms, fracRes: 0.0135, norm(attn): 0.0879, norm(output): 0.7891, norm(x): 0.7782, norm(y): 0.9991, norm:2.9289, tok/sec: 110271.55, flops:115.73, batch-reuse:1
@ 501 train 6.3206 , allloss: 7.4004, dt: 1203.59ms, fracRes: 0.0111, norm(attn): 0.0850, norm(output): 0.7969, norm(x): 0.7863, norm(y): 0.9991, norm:3.1571, tok/sec: 108901.07, flops:114.29, batch-reuse:1
@ 502 train 6.3473 , allloss: 7.4756, dt: 1234.29ms, fracRes: 0.0098, norm(attn): 0.0801, norm(output): 0.8086, norm(x): 0.7997, norm(y): 0.9991, norm:3.5067, tok/sec: 106192.46, flops:111.45, batch-reuse:1
@ 503 train 6.2800 , allloss: 7.4300, dt: 1231.11ms, fracRes: 0.0091, norm(attn): 0.0771, norm(output): 0.8125, norm(x): 0.8067, norm(y): 0.9990, norm:3.2965, tok/sec: 106466.78, flops:111.74, batch-reuse:1
@ 504 train 6.3281 , allloss: 7.5369, dt: 1235.43ms, fracRes: 0.0087, norm(attn): 0.0762, norm(output): 0.8164, norm(x): 0.8120, norm(y): 0.9990, norm:3.7970, tok/sec: 106093.87, flops:111.35, batch-reuse:1
@ 505 train 6.2204 , allloss: 7.4209, dt: 1206.01ms, fracRes: 0.0084, norm(attn): 0.0791, norm(output): 0.8203, norm(x): 0.8227, norm(y): 0.9990, norm:3.0470, tok/sec: 108682.00, flops:114.06, batch-reuse:1
@ 506 train 6.2752 , allloss: 7.4085, dt: 1204.38ms, fracRes: 0.0077, norm(attn): 0.0786, norm(output): 0.8281, norm(x): 0.8324, norm(y): 0.9991, norm:2.7951, tok/sec: 108829.48, flops:114.22, batch-reuse:1
@ 507 train 6.2553 , allloss: 7.3706, dt: 1230.49ms, fracRes: 0.0075, norm(attn): 0.0815, norm(output): 0.8320, norm(x): 0.8421, norm(y): 0.9990, norm:2.7691, tok/sec: 106520.48, flops:111.80, batch-reuse:1
@ 508 train 6.1890 , allloss: 7.2120, dt: 1229.25ms, fracRes: 0.0070, norm(attn): 0.0806, norm(output): 0.8594, norm(x): 0.8525, norm(y): 0.9990, norm:2.4858, tok/sec: 106628.02, flops:111.91, batch-reuse:1
@ 509 train 6.2534 , allloss: 7.3707, dt: 1182.85ms, fracRes: 0.0068, norm(attn): 0.0796, norm(output): 0.8633, norm(x): 0.8592, norm(y): 0.9990, norm:2.7473, tok/sec: 110810.05, flops:116.30, batch-reuse:1
@ 510 train 6.1948 , allloss: 7.1197, dt: 1227.27ms, fracRes: 0.0067, norm(attn): 0.0791, norm(output): 0.8711, norm(x): 0.8664, norm(y): 0.9989, norm:2.2498, tok/sec: 106799.68, flops:112.09, batch-reuse:1
@ 511 train 6.2780 , allloss: 7.2162, dt: 1227.46ms, fracRes: 0.0068, norm(attn): 0.0801, norm(output): 0.8750, norm(x): 0.8759, norm(y): 0.9989, norm:2.3371, tok/sec: 106782.93, flops:112.07, batch-reuse:1
@ 512 train 6.2009 , allloss: 7.1922, dt: 1215.39ms, fracRes: 0.0070, norm(attn): 0.0811, norm(output): 0.8828, norm(x): 0.8854, norm(y): 0.9989, norm:2.2132, tok/sec: 107843.96, flops:113.18, batch-reuse:1
@ 513 train 6.2199 , allloss: 7.3606, dt: 1228.29ms, fracRes: 0.0070, norm(attn): 0.0835, norm(output): 0.8828, norm(x): 0.8890, norm(y): 0.9989, norm:3.0993, tok/sec: 106710.82, flops:112.00, batch-reuse:1
@ 514 train 6.1738 , allloss: 7.9353, dt: 1229.26ms, fracRes: 0.0077, norm(attn): 0.0879, norm(output): 0.8906, norm(x): 0.8960, norm(y): 0.9989, norm:6.3094, tok/sec: 106626.90, flops:111.91, batch-reuse:1
@ 515 train 6.1922 , allloss: 8.6225, dt: 1219.55ms, fracRes: 0.0083, norm(attn): 0.0903, norm(output): 0.9062, norm(x): 0.9043, norm(y): 0.9989, norm:7.8315, tok/sec: 107475.99, flops:112.80, batch-reuse:1
@ 516 train 6.1644 , allloss: 8.4898, dt: 1214.68ms, fracRes: 0.0086, norm(attn): 0.0903, norm(output): 0.9219, norm(x): 0.9061, norm(y): 0.9989, norm:6.7497, tok/sec: 107906.40, flops:113.25, batch-reuse:1
@ 517 train 6.1726 , allloss: 8.1612, dt: 1224.92ms, fracRes: 0.0089, norm(attn): 0.0889, norm(output): 0.9219, norm(x): 0.9076, norm(y): 0.9989, norm:5.5784, tok/sec: 107004.14, flops:112.30, batch-reuse:1
@ 518 train 6.2622 , allloss: 7.9888, dt: 1222.43ms, fracRes: 0.0095, norm(attn): 0.0918, norm(output): 0.9297, norm(x): 0.9156, norm(y): 0.9989, norm:4.1831, tok/sec: 107222.88, flops:112.53, batch-reuse:1
@ 519 train 6.1748 , allloss: 7.7080, dt: 1204.04ms, fracRes: 0.0099, norm(attn): 0.0938, norm(output): 0.9336, norm(x): 0.9239, norm(y): 0.9989, norm:3.8104, tok/sec: 108859.97, flops:114.25, batch-reuse:1
@ 520 train 6.2414 , allloss: 8.5116, dt: 1214.52ms, fracRes: 0.0106, norm(attn): 0.0942, norm(output): 0.9375, norm(x): 0.9316, norm(y): 0.9989, norm:6.9180, tok/sec: 107920.97, flops:113.27, batch-reuse:1
@ 521 train 6.2987 , allloss: 8.9130, dt: 1195.57ms, fracRes: 0.0109, norm(attn): 0.0933, norm(output): 0.9414, norm(x): 0.9362, norm(y): 0.9988, norm:9.3704, tok/sec: 109631.65, flops:115.06, batch-reuse:1
@ 522 train 6.1856 , allloss: 8.7468, dt: 1206.08ms, fracRes: 0.0109, norm(attn): 0.0894, norm(output): 0.9414, norm(x): 0.9432, norm(y): 0.9988, norm:8.6129, tok/sec: 108675.98, flops:114.06, batch-reuse:1
@ 523 train 6.2479 , allloss: 8.7100, dt: 1201.87ms, fracRes: 0.0108, norm(attn): 0.0894, norm(output): 0.9531, norm(x): 0.9527, norm(y): 0.9988, norm:7.1882, tok/sec: 109056.96, flops:114.46, batch-reuse:1
@ 524 train 6.1749 , allloss: 8.2954, dt: 1199.57ms, fracRes: 0.0108, norm(attn): 0.0908, norm(output): 0.9844, norm(x): 0.9638, norm(y): 0.9988, norm:6.1514, tok/sec: 109266.13, flops:114.68, batch-reuse:1
@ 525 train 6.2002 , allloss: 8.1812, dt: 1206.07ms, fracRes: 0.0109, norm(attn): 0.0884, norm(output): 0.9844, norm(x): 0.9694, norm(y): 0.9988, norm:5.4423, tok/sec: 108676.56, flops:114.06, batch-reuse:1
@ 526 train 6.2087 , allloss: 8.3550, dt: 1208.72ms, fracRes: 0.0111, norm(attn): 0.0884, norm(output): 0.9844, norm(x): 0.9730, norm(y): 0.9988, norm:6.7832, tok/sec: 108438.36, flops:113.81, batch-reuse:1
@ 527 train 6.2307 , allloss: 8.4073, dt: 1203.27ms, fracRes: 0.0112, norm(attn): 0.0889, norm(output): 0.9922, norm(x): 0.9841, norm(y): 0.9988, norm:7.0311, tok/sec: 108929.71, flops:114.32, batch-reuse:1
@ 528 train 6.1622 , allloss: 8.5012, dt: 1184.86ms, fracRes: 0.0107, norm(attn): 0.0874, norm(output): 1.0000, norm(x): 0.9954, norm(y): 0.9988, norm:10.6508, tok/sec: 110622.53, flops:116.10, batch-reuse:1
@ 529 train 6.1435 , allloss: 8.8198, dt: 1188.37ms, fracRes: 0.0100, norm(attn): 0.0859, norm(output): 1.0078, norm(x): 1.0025, norm(y): 0.9987, norm:8.9273, tok/sec: 110295.77, flops:115.76, batch-reuse:1
@ 530 train 6.2352 , allloss: 9.0109, dt: 1201.67ms, fracRes: 0.0100, norm(attn): 0.0845, norm(output): 1.0078, norm(x): 1.0078, norm(y): 0.9987, norm:9.9228, tok/sec: 109074.42, flops:114.48, batch-reuse:1
@ 531 train 6.2797 , allloss: 8.9922, dt: 1210.17ms, fracRes: 0.0098, norm(attn): 0.0850, norm(output): 1.0234, norm(x): 1.0167, norm(y): 0.9987, norm:8.1295, tok/sec: 108308.85, flops:113.67, batch-reuse:1
@ 532 train 6.0867 , allloss: 8.6735, dt: 1209.05ms, fracRes: 0.0098, norm(attn): 0.0859, norm(output): 1.0156, norm(x): 1.0186, norm(y): 0.9987, norm:8.8886, tok/sec: 108408.87, flops:113.78, batch-reuse:1
@ 533 train 6.1601 , allloss: 8.2681, dt: 1209.62ms, fracRes: 0.0096, norm(attn): 0.0854, norm(output): 1.0156, norm(x): 1.0272, norm(y): 0.9987, norm:6.9726, tok/sec: 108358.12, flops:113.72, batch-reuse:1
@ 534 train 6.0751 , allloss: 8.1540, dt: 1205.97ms, fracRes: 0.0091, norm(attn): 0.0830, norm(output): 1.0469, norm(x): 1.0341, norm(y): 0.9987, norm:5.4144, tok/sec: 108685.65, flops:114.07, batch-reuse:1
@ 535 train 6.1742 , allloss: 8.1582, dt: 1198.92ms, fracRes: 0.0093, norm(attn): 0.0830, norm(output): 1.0391, norm(x): 1.0334, norm(y): 0.9987, norm:5.3083, tok/sec: 109324.65, flops:114.74, batch-reuse:1
@ 536 train 6.1690 , allloss: 7.9080, dt: 1215.38ms, fracRes: 0.0099, norm(attn): 0.0801, norm(output): 1.0625, norm(x): 1.0498, norm(y): 0.9986, norm:5.2379, tok/sec: 107844.59, flops:113.18, batch-reuse:1
@ 537 train 6.1608 , allloss: 7.8490, dt: 1241.03ms, fracRes: 0.0098, norm(attn): 0.0820, norm(output): 1.0625, norm(x): 1.0571, norm(y): 0.9987, norm:5.2459, tok/sec: 105615.74, flops:110.85, batch-reuse:1
@ 538 train 6.1317 , allloss: 7.6477, dt: 1235.62ms, fracRes: 0.0101, norm(attn): 0.0815, norm(output): 1.0625, norm(x): 1.0591, norm(y): 0.9987, norm:4.8811, tok/sec: 106078.29, flops:111.33, batch-reuse:1
@ 539 train 6.1900 , allloss: 8.1151, dt: 1243.54ms, fracRes: 0.0102, norm(attn): 0.0806, norm(output): 1.0703, norm(x): 1.0747, norm(y): 0.9987, norm:5.5867, tok/sec: 105401.91, flops:110.62, batch-reuse:1
@ 540 train 6.2220 , allloss: 7.8752, dt: 1243.09ms, fracRes: 0.0106, norm(attn): 0.0786, norm(output): 1.0703, norm(x): 1.0727, norm(y): 0.9986, norm:4.5114, tok/sec: 105440.12, flops:110.66, batch-reuse:1
@ 541 train 6.1702 , allloss: 7.8031, dt: 1222.13ms, fracRes: 0.0126, norm(attn): 0.0820, norm(output): 1.0781, norm(x): 1.0742, norm(y): 0.9987, norm:4.8696, tok/sec: 107248.90, flops:112.56, batch-reuse:1
@ 542 train 6.1874 , allloss: 7.9964, dt: 1201.61ms, fracRes: 0.0121, norm(attn): 0.0791, norm(output): 1.0859, norm(x): 1.0871, norm(y): 0.9987, norm:4.4243, tok/sec: 109079.96, flops:114.48, batch-reuse:1
@ 543 train 6.2377 , allloss: 7.8269, dt: 1220.28ms, fracRes: 0.0128, norm(attn): 0.0786, norm(output): 1.1016, norm(x): 1.0887, norm(y): 0.9987, norm:3.6123, tok/sec: 107411.10, flops:112.73, batch-reuse:1
@ 544 train 6.1923 , allloss: 7.5140, dt: 1219.17ms, fracRes: 0.0140, norm(attn): 0.0796, norm(output): 1.1016, norm(x): 1.0900, norm(y): 0.9986, norm:3.2059, tok/sec: 107509.09, flops:112.83, batch-reuse:1
@ 545 train 6.2120 , allloss: 7.5775, dt: 1210.35ms, fracRes: 0.0126, norm(attn): 0.0767, norm(output): 1.1172, norm(x): 1.0947, norm(y): 0.9986, norm:3.3792, tok/sec: 108292.51, flops:113.66, batch-reuse:1
@ 546 train 6.2194 , allloss: 7.3567, dt: 1223.65ms, fracRes: 0.0145, norm(attn): 0.0811, norm(output): 1.0859, norm(x): 1.0748, norm(y): 0.9985, norm:3.8185, tok/sec: 107115.31, flops:112.42, batch-reuse:1
@ 547 train 6.3437 , allloss: 7.6269, dt: 1212.53ms, fracRes: 0.0135, norm(attn): 0.0781, norm(output): 1.1172, norm(x): 1.1035, norm(y): 0.9985, norm:3.8294, tok/sec: 108098.36, flops:113.45, batch-reuse:1
@ 548 train 6.3661 , allloss: 7.5806, dt: 1219.43ms, fracRes: 0.0114, norm(attn): 0.0757, norm(output): 1.1250, norm(x): 1.1087, norm(y): 0.9984, norm:3.7617, tok/sec: 107486.33, flops:112.81, batch-reuse:1
@ 549 train 6.3170 , allloss: 7.4947, dt: 1235.07ms, fracRes: 0.0111, norm(attn): 0.0859, norm(output): 1.1094, norm(x): 1.0980, norm(y): 0.9983, norm:3.6432, tok/sec: 106125.34, flops:111.38, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3535, 0.6445, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5547, 0.3516, 0.0957, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4727, 0.3555, 0.1147, 0.0564, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4043, 0.2295, 0.0811, 0.0845, 0.2002, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2275, 0.1865, 0.0938, 0.0496, 0.2441, 0.1982, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1226, 0.1602, 0.0889, 0.0889, 0.2178, 0.1689, 0.1523, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1914, 0.1240, 0.1196, 0.1846, 0.0583, 0.0520, 0.1299, 0.1406, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1099, 0.0967, 0.0298, 0.0376, 0.1094, 0.1855, 0.1270, 0.0317, 0.2734, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0923, 0.0923, 0.0576, 0.0422, 0.2539, 0.0669, 0.0811, 0.0334, 0.1934, 0.0869, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0623, 0.0586, 0.0413, 0.0106, 0.1309, 0.1611, 0.0342, 0.0225, 0.0981, 0.1367, 0.2432, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0630, 0.0737, 0.1426, 0.1992, 0.0889, 0.0913, 0.1016, 0.0742, 0.0532, 0.0281, 0.0461, 0.0388, 0.0000, 0.0000, 0.0000],
        [0.0713, 0.1079, 0.0889, 0.0859, 0.0615, 0.0952, 0.1050, 0.0442, 0.0552, 0.0762, 0.1133, 0.0459, 0.0496, 0.0000, 0.0000],
        [0.0559, 0.0383, 0.0107, 0.0140, 0.0620, 0.1030, 0.0491, 0.0204, 0.2061, 0.0845, 0.1196, 0.0586, 0.0320, 0.1455, 0.0000],
        [0.0654, 0.0771, 0.1128, 0.1021, 0.0454, 0.0601, 0.0347, 0.1045, 0.0347, 0.0557, 0.0366, 0.1030, 0.0737, 0.0304, 0.0645]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0046, -0.0283, -0.0031,  ..., -0.0301,  0.0201, -0.0178],
        [-0.0009, -0.0318, -0.0115,  ...,  0.0400,  0.0125, -0.0345],
        [ 0.0052,  0.0077, -0.0091,  ...,  0.0072,  0.0535,  0.0025],
        ...,
        [ 0.0079,  0.0013,  0.0109,  ...,  0.0032, -0.0398,  0.0087],
        [ 0.0082, -0.0076,  0.0030,  ...,  0.0134, -0.0126,  0.0048],
        [ 0.0026,  0.0600,  0.0050,  ..., -0.0115,  0.0127, -0.0076]], device='cuda:0', requires_grad=True)
K: tensor([ 0.5430, -0.1641, -0.1787, -0.5078,  1.0859,  0.5469,  0.1582,  0.3574, -0.7539,  0.0391,  0.0178,  0.9883,  0.1377, -0.5742, -0.2598,  0.4980, -0.5391,  0.6211,  0.3809,  0.6094,  0.5547, -0.7422,  1.0547, -0.1621, -0.3418,  0.1797,  0.0258,  0.0334, -0.0247,  0.7812,  1.1250,  0.6914,
         0.4258, -0.3086,  0.0449, -0.0118,  0.0267, -0.0684,  0.2363,  0.8945, -0.3594,  0.5312, -0.8086,  1.1172, -0.2031, -0.4160,  0.7031,  0.2197,  0.9102, -0.3809, -0.2578, -0.6914, -0.3574, -1.1562, -0.0752,  0.5195, -0.4668,  0.4180,  0.3125, -0.5859, -0.0608,  0.7266,  0.3359,  0.4453],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0373,  0.0066,  0.0227,  ..., -0.0069, -0.0053, -0.0051],
        [-0.0002, -0.0005,  0.0238,  ...,  0.0247, -0.0107,  0.0017],
        [ 0.0007,  0.0385, -0.0028,  ..., -0.0174,  0.0218,  0.0007],
        ...,
        [ 0.0082, -0.0354, -0.0044,  ...,  0.0114,  0.0329, -0.0032],
        [ 0.0413,  0.0020, -0.0026,  ...,  0.0061,  0.0021, -0.0399],
        [ 0.0244, -0.0241,  0.0044,  ...,  0.0257,  0.0172,  0.0207]], device='cuda:0', requires_grad=True)
Q: tensor([-0.1650,  0.1660,  0.3945,  0.0845,  0.6328, -0.2637, -0.5195,  0.1094, -0.6914, -0.5117, -0.0400,  0.2148,  0.1455,  0.1973, -0.0972, -0.1914,  0.5703,  0.2539, -0.7539, -0.7188,  0.2598, -0.3867,  0.3496,  0.3145, -0.2373,  0.1279,  0.0452, -0.2041, -0.0933, -0.1719, -0.9609, -0.0327,
        -0.1855, -0.5078, -0.5547, -0.2100,  0.3242,  0.0074, -0.6992,  0.4863, -0.6680,  0.5664, -0.2578,  0.2217,  0.0554, -0.5977, -0.2539, -0.4922, -1.7188,  0.0227,  0.0850,  0.3145, -0.4219, -0.2988,  0.8164, -0.7188,  0.2949,  0.8008, -0.1514, -0.5469,  0.6016,  0.2891,  0.4824, -0.0077],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.6016,      0.0057,     -0.4160,      0.7344,      0.6406,      0.4668,     -1.0000,      0.8945,     -0.1211,      1.6016,     -0.2363,     -0.9102,      0.4629,      0.1709],
        [     0.0000,     -0.4570,     -1.7578,     -1.5000,      0.1289,      0.0840,     -0.0688,     -1.7734,      1.1719,      0.5703,      1.1016,      0.4824,     -0.9961,      0.8633,      0.4863],
        [     0.0000,     -0.2832,     -1.4141,     -2.1250,      0.1680,     -0.0454,     -0.6914,     -1.1484,      0.5742,      0.1426,      1.2969,      0.4785,     -0.2812,      0.4082,      0.4473],
        [     0.0000,     -0.5664,     -1.6094,     -1.5703,     -0.7031,     -0.4004,     -0.4980,     -0.0947,      0.5898,      0.7266,     -0.1211,      0.4141,      0.0109,      0.5195,     -0.1699],
        [     0.0000,     -0.1992,     -0.8867,     -1.5234,      0.0693,     -0.1377,     -0.4062,     -0.0635,      0.2070,      0.2344,      0.8867,      0.4160,     -0.1040,      0.0398,      0.0505],
        [     0.0000,      0.2715,     -0.3203,     -0.3223,      0.5781,      0.3223,      0.2148,     -0.1133,      0.0396,     -0.1826,      0.8438,      0.3789,     -0.1846,      0.0320,     -0.0271],
        [     0.0000,     -0.4336,     -0.4688,     -0.0378,     -1.1875,     -1.2969,     -0.3887,     -0.3047,     -0.5273,      0.1680,     -0.4141,      0.2314,      0.5742,     -0.5938,      0.2910],
        [     0.0000,     -0.1260,     -1.3047,     -1.0703,     -0.0014,      0.5234,      0.1445,     -1.2344,      0.9102,      0.6523,      1.1250,      0.0381,     -0.4590,      0.8828,      0.1357],
        [     0.0000,     -0.0013,     -0.4727,     -0.7773,      1.0156,     -0.3242,     -0.1309,     -1.0156,      0.7422,     -0.0608,      0.9023,      0.0815,     -0.4902,      0.3848,     -0.1982],
        [     0.0000,     -0.0635,     -0.4160,     -1.7734,      0.7461,      0.9531,     -0.6016,     -1.0234,      0.4551,      0.7852,      1.3594,      0.6367,     -1.3984,      0.0623,      0.5039],
        [     0.0000,      0.1543,      0.8125,      1.1484,      0.3418,      0.3730,      0.4785,      0.1602,     -0.1670,     -0.8086,     -0.3105,     -0.4863,     -0.0222,      0.0938,     -0.3926],
        [     0.0000,      0.4121,      0.2158,      0.1816,     -0.1523,      0.2852,      0.3828,     -0.4824,     -0.2617,      0.0640,      0.4590,     -0.4414,     -0.3652,      0.1641,      0.0474],
        [     0.0000,     -0.3789,     -1.6562,     -1.3828,      0.1060,      0.6133,     -0.1270,     -1.0078,      1.3047,      0.4141,      0.7617,      0.0471,     -0.5586,      0.9609,     -0.0391],
        [     0.0000,      0.1650,      0.5469,      0.4453,     -0.3633,     -0.0825,     -0.6328,      0.4688,     -0.6328,     -0.1582,     -0.5781,      0.4531,      0.1191,     -0.7656,     -0.0139]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3227],
        [0.4521],
        [0.3422],
        [0.3219],
        [0.2210],
        [0.1776],
        [0.1051],
        [0.1338],
        [0.1270],
        [0.1044],
        [0.0883],
        [0.0511],
        [0.0944],
        [0.0799]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7148, 0.2852, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3125, 0.4863, 0.2002, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2617, 0.1787, 0.4902, 0.0698, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2891, 0.1396, 0.4688, 0.0732, 0.0299, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2373, 0.1201, 0.4453, 0.0854, 0.0645, 0.0476, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2715, 0.0903, 0.1621, 0.0771, 0.2129, 0.1235, 0.0615, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0302, 0.1562, 0.0172, 0.1533, 0.1836, 0.2793, 0.1768, 0.0020, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1328, 0.0981, 0.2021, 0.1367, 0.0713, 0.0535, 0.0732, 0.1250, 0.1064, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1147, 0.0454, 0.1377, 0.0310, 0.0182, 0.0281, 0.0317, 0.4863, 0.0510, 0.0547, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0884, 0.0374, 0.1387, 0.0566, 0.0425, 0.0669, 0.0114, 0.3945, 0.0520, 0.0845, 0.0280, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0674, 0.1445, 0.0452, 0.0791, 0.0952, 0.0610, 0.1484, 0.0308, 0.0869, 0.0491, 0.1328, 0.0598, 0.0000, 0.0000, 0.0000],
        [0.0403, 0.1147, 0.0332, 0.0771, 0.1279, 0.1475, 0.1396, 0.0107, 0.0630, 0.0515, 0.1357, 0.0216, 0.0364, 0.0000, 0.0000],
        [0.0854, 0.0481, 0.2080, 0.0776, 0.0437, 0.0398, 0.0454, 0.0615, 0.0356, 0.0830, 0.0564, 0.1387, 0.0444, 0.0325, 0.0000],
        [0.0737, 0.0505, 0.1445, 0.0371, 0.0703, 0.0933, 0.0349, 0.1025, 0.0439, 0.0552, 0.0320, 0.1147, 0.0781, 0.0317, 0.0381]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0465, -0.0023,  0.0065,  ..., -0.0018, -0.0267, -0.0230],
        [ 0.0085,  0.0064, -0.0231,  ...,  0.0092,  0.0178, -0.0168],
        [-0.0075,  0.0195, -0.0241,  ..., -0.0275, -0.0203,  0.0056],
        ...,
        [ 0.0387,  0.0264, -0.0068,  ..., -0.0118, -0.0395, -0.0403],
        [-0.0015,  0.0169, -0.0128,  ..., -0.0273, -0.0090,  0.0079],
        [-0.0015, -0.0112,  0.0088,  ...,  0.0225, -0.0421,  0.0078]], device='cuda:0', requires_grad=True)
K: tensor([-0.7344, -0.2598, -0.7891,  0.0481,  0.4648,  0.1152, -0.0615,  0.6953, -0.6797,  1.2500,  0.2188,  0.2490, -0.4336, -0.6602,  0.7461,  0.3828,  0.4883,  0.4395,  0.2021,  0.3203, -0.3086,  0.2031,  0.0322,  1.1328,  0.4082, -0.0996, -0.4863,  0.3848,  0.4824,  0.3984, -0.2158, -0.0977,
         0.9062, -0.6719,  0.4824,  0.6016, -0.4941,  1.0938, -0.9180, -0.3926,  1.5156, -1.4219, -0.0190, -0.5781, -0.8516, -0.0262,  0.5273,  0.2002,  0.2812, -0.8633,  0.5039, -0.2617, -0.0610, -0.0442,  0.1758,  0.3242,  0.7266, -0.6523,  0.7031,  0.0574,  0.1455, -0.5508, -0.2910, -0.2812],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0093,  0.0036,  0.0233,  ..., -0.0176, -0.0422,  0.0103],
        [-0.0126, -0.0328,  0.0057,  ...,  0.0354, -0.0210, -0.0101],
        [-0.0301, -0.0141,  0.0355,  ...,  0.0100,  0.0019, -0.0049],
        ...,
        [-0.0118, -0.0643, -0.0051,  ..., -0.0186,  0.0045,  0.0048],
        [ 0.0034, -0.0052,  0.0414,  ...,  0.0350, -0.0178, -0.0195],
        [-0.0081, -0.0024, -0.0013,  ...,  0.0166, -0.0048, -0.0056]], device='cuda:0', requires_grad=True)
Q: tensor([     0.0004,     -0.6719,      1.0391,     -0.6133,     -0.0058,      0.4062,      0.5742,      1.5078,      0.1211,     -0.5117,     -0.1543,      0.3730,      0.2637,     -0.5586,     -0.8164,      0.4746,     -0.6641,     -0.1787,     -0.0284,     -0.9336,      0.2373,      0.4141,
             0.2598,      0.0579,     -0.4180,      0.3379,      0.7148,      0.0908,      0.0305,      1.0156,     -0.1855,     -0.3184,      0.0223,      0.4023,     -0.2578,     -0.3691,      0.5117,     -0.7734,      0.2119,     -0.0099,     -0.2949,      0.8984,     -0.3027,      0.6016,
             0.1260,     -0.8750,     -0.5312,      0.9727,     -0.7422,      0.1475,     -0.1797,     -0.1367,     -0.2109,      0.5977,     -0.1045,      0.6250,     -0.1738,      0.2207,      0.8516,     -0.1260,      0.3789,      0.4863,      0.0698,     -0.2988], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.9180,  0.8203, -0.3594, -0.1211, -0.2500, -1.1641,  1.4219, -1.1875,  0.0923, -0.2637,  1.0859,  0.3828, -1.1484, -0.4609],
        [ 0.0000,  0.4414, -0.4453,  0.1953,  0.2930,  0.7383,  0.5547, -0.6406,  0.2617, -0.2598,  0.2217, -0.1475, -0.2256,  0.5586,  0.5469],
        [ 0.0000, -0.3809,  0.6250, -1.3203, -1.2656, -0.7812, -0.6328,  0.6719, -0.6602, -0.5078, -0.6289,  0.2988,  0.0115, -1.1719, -0.4297],
        [ 0.0000, -0.7305,  0.4863, -1.3750, -2.2656, -2.4375, -1.2734,  1.2891, -1.0938, -0.9883, -1.3125,  0.1934, -0.3672, -1.8672, -1.0938],
        [ 0.0000, -0.6797,  0.6289, -1.0234, -1.3047, -1.6094, -1.4453,  1.5000, -1.4453, -0.8594, -0.7539,  0.2158,  0.2773, -1.4453, -1.1953],
        [ 0.0000, -1.1016, -0.5195, -1.2578, -0.2451, -0.7891, -1.4844,  1.2891, -0.2930, -0.1934, -0.5977,  0.5938,  0.4375, -0.5156, -0.7031],
        [ 0.0000,  1.6484, -0.5586,  1.6250,  1.8125,  2.2344,  1.7734, -2.7188,  1.2656,  0.7383,  2.1406, -1.1484, -0.5938,  2.2188,  1.5391],
        [ 0.0000, -0.3027,  0.4219,  0.0317, -0.6211, -0.9102, -0.5938, -0.0574, -0.2188,  0.0703,  0.0762, -0.0771, -0.4785, -0.1621, -0.1543],
        [ 0.0000, -0.9297,  0.1826, -1.3125, -1.8438, -1.4141, -1.2891,  1.4453, -0.8125, -0.7422, -2.1094,  0.7188,  0.4609, -1.6641, -1.4062],
        [ 0.0000, -0.8672,  0.4473, -0.4473, -0.7344, -0.2832, -2.0625,  1.4922, -0.5352, -0.0486, -1.1562,  0.8438,  0.8008, -0.9570, -1.0547],
        [ 0.0000,  0.7656, -0.3965,  0.1621,  0.3457, -0.0981,  0.7930, -0.7852,  0.2578, -0.3164,  0.6758, -0.1182, -0.0967,  0.7969,  0.6836],
        [ 0.0000,  1.0469, -0.1992,  0.6484,  1.1562,  1.2969,  1.2344, -1.3203,  0.4473,  0.2441,  1.2188, -0.6211, -0.1064,  1.0859,  1.1172],
        [ 0.0000, -0.5742,  0.8906, -0.0923, -0.6680, -0.7656, -0.6328, -0.3262, -0.8711, -0.0280, -0.4121,  0.4844, -0.6484, -0.9648,  0.0061],
        [ 0.0000, -0.3789,  0.6719, -0.6875, -0.0439,  0.2344, -0.7422,  0.3320, -0.5195, -0.2891, -0.8359,  0.4414,  0.0603, -0.8438, -0.6602]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6174],
        [0.4254],
        [0.3225],
        [0.2837],
        [0.2385],
        [0.1745],
        [0.0501],
        [0.1320],
        [0.0919],
        [0.0817],
        [0.0600],
        [0.0419],
        [0.0869],
        [0.0643]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4160,     0.5859,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2256,     0.4414,     0.3340,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2598,     0.1895,     0.2002,     0.3516,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2354,     0.0413,     0.1621,     0.4492,     0.1128,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1787,     0.0898,     0.2539,     0.3652,     0.0608,     0.0500,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1982,     0.0815,     0.0776,     0.3086,     0.1079,     0.0693,     0.1553,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1572,     0.0579,     0.1953,     0.3047,     0.0669,     0.0295,     0.1523,     0.0344,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2373,     0.0215,     0.1338,     0.3652,     0.0747,     0.0217,     0.1226,     0.0204,     0.0029,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1631,     0.0723,     0.0781,     0.1904,     0.0923,     0.1089,     0.1348,     0.0605,     0.0226,     0.0771,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1621,     0.0109,     0.0698,     0.6055,     0.0154,     0.0087,     0.1094,     0.0035,     0.0001,     0.0135,     0.0024,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1562,     0.0435,     0.1289,     0.2598,     0.0986,     0.0413,     0.1104,     0.0195,     0.0101,     0.0610,     0.0198,     0.0522,     0.0000,     0.0000,     0.0000],
        [    0.0613,     0.0918,     0.0615,     0.0471,     0.1309,     0.0972,     0.0776,     0.0815,     0.1289,     0.0625,     0.0703,     0.0452,     0.0439,     0.0000,     0.0000],
        [    0.1108,     0.0327,     0.0723,     0.1226,     0.0684,     0.0374,     0.0815,     0.0405,     0.0281,     0.0645,     0.0383,     0.0640,     0.1504,     0.0889,     0.0000],
        [    0.1089,     0.0322,     0.0654,     0.2412,     0.0962,     0.0403,     0.0615,     0.0176,     0.0188,     0.0742,     0.0226,     0.0223,     0.1396,     0.0444,     0.0146]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0062,  0.0151, -0.0530,  ..., -0.0249,  0.0407,  0.0271],
        [-0.0425,  0.0342, -0.0078,  ..., -0.0043,  0.0275,  0.0234],
        [ 0.0142, -0.0404,  0.0253,  ...,  0.0384, -0.0437, -0.0091],
        ...,
        [ 0.0181, -0.0589,  0.0298,  ...,  0.0173, -0.0420, -0.0292],
        [-0.0221,  0.0432, -0.0013,  ...,  0.0079,  0.0481,  0.0083],
        [-0.0201, -0.0475,  0.0003,  ..., -0.0319, -0.0322, -0.0077]], device='cuda:0', requires_grad=True)
K: tensor([ 0.2148,  0.1865, -1.0859, -0.6523,  2.0469,  0.3848,  0.9648,  0.6406, -0.2734,  0.2422,  0.1138,  1.4375,  0.6406, -0.1240,  0.5391,  0.7969, -1.1094, -0.6250,  0.5859,  0.3320, -0.8672, -0.5469, -0.2227, -0.3359, -0.4727, -0.1104, -0.9258,  1.3203,  1.0312,  0.9180, -0.5469, -0.1445,
        -0.0403, -1.0312, -1.2188,  0.2559,  1.2734,  0.6602, -0.6680, -1.5000,  0.9805, -0.6367,  0.6719, -0.9062, -1.0078, -0.2383, -0.2734,  0.4355, -0.4629, -0.7734,  1.0078,  0.3301,  0.4277, -1.0234, -0.2559,  0.3398, -0.9453,  0.3750,  0.6133,  0.6719, -0.2891,  0.9297, -0.3906,  0.9805],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0190, -0.0286, -0.0197,  ..., -0.0151, -0.0459, -0.0377],
        [ 0.0273, -0.0079,  0.0269,  ...,  0.0381, -0.0107,  0.0031],
        [-0.0089,  0.0668,  0.0052,  ..., -0.0108,  0.0433,  0.0327],
        ...,
        [-0.0182,  0.0417, -0.0297,  ..., -0.0340,  0.0277, -0.0030],
        [ 0.0017, -0.0110, -0.0161,  ...,  0.0067, -0.0116,  0.0032],
        [ 0.0008,  0.0271,  0.0100,  ..., -0.0244,  0.0055,  0.0129]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.4453, -0.0386,  0.7539,  0.4082, -0.4531, -0.6914, -0.5195, -1.0391,  0.0796,  0.9961,  0.5977, -0.9531, -0.1797,  0.3633, -1.0000, -1.5156, -0.1973,  0.7148,  0.3770, -0.6289,  1.3281,  0.5742, -0.3457, -0.3027, -0.2500,  0.4902, -1.5234, -1.1641,  0.0203, -0.8633,  0.4336,  1.4375,
         0.4902,  0.3262,  1.0703, -0.4219, -0.4395, -0.7266,  0.4043,  1.2031, -0.0845, -0.4648, -0.1592, -0.8008,  0.9922, -0.3105,  0.4805, -0.9531,  0.4102,  0.6250, -0.8711, -0.4004,  0.5625, -0.6250,  0.6289,  0.9766, -0.5469,  0.0737, -0.3594, -0.9062,  0.3555, -0.0109, -0.1846, -0.4395],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.3418,     -0.4629,     -0.9531,      0.6094,      1.2891,      0.7344,      0.9766,      2.8438,      0.9141,      1.4062,      0.9922,     -0.4004,      1.5625,      0.5703],
        [     0.0000,      0.6719,      0.3926,     -0.5703,      0.3633,     -0.0459,      0.5898,      0.8320,      1.9375,      0.8984,      1.0312,      0.7773,     -0.1953,      1.0547,      1.7031],
        [     0.0000,     -0.3145,     -0.2559,      0.3047,      0.5742,      1.1406,      0.0327,     -0.0070,      0.6523,     -0.1157,      0.1035,     -0.0864,     -0.1943,      0.6211,     -0.4121],
        [     0.0000,     -1.7422,     -0.3770,      0.6445,     -0.7344,     -1.7500,     -1.0703,     -1.8203,     -3.7656,     -0.6133,     -2.4375,     -1.0547,      0.7852,     -1.5938,     -2.4219],
        [     0.0000,     -0.6875,      0.3516,      0.7148,     -1.0781,     -1.2734,      0.0540,     -0.8867,     -1.8125,     -0.2930,     -1.1406,     -0.2451,     -0.3359,     -0.9805,     -0.9883],
        [     0.0000,     -0.8867,     -0.9375,      0.4453,     -0.6094,     -1.0547,     -0.2422,     -0.8438,     -2.3906,     -0.3789,     -1.0625,     -1.5547,      0.9570,     -1.2578,     -1.6719],
        [     0.0000,     -1.0000,      0.2168,      0.6641,     -0.8516,     -1.6719,     -0.0347,     -1.5234,     -3.5156,     -0.6719,     -2.1875,     -1.5156,      0.7891,     -2.1719,     -1.4062],
        [     0.0000,     -2.4062,     -0.5703,      0.4316,     -1.1562,     -2.3906,     -0.6602,     -2.4531,     -4.4062,     -1.3984,     -2.6562,     -1.7031,      0.9648,     -1.7266,     -3.1250],
        [     0.0000,     -0.8164,     -0.7383,      0.1514,     -0.5703,     -0.4043,     -0.1934,     -0.9922,     -1.9766,     -0.7500,     -1.1953,     -0.9336,      0.8438,     -0.9727,     -1.2188],
        [     0.0000,     -2.7031,     -0.8438,      1.3125,     -2.3594,     -2.9219,     -0.3965,     -3.8281,     -7.1562,     -2.4844,     -4.2188,     -1.9844,      1.5000,     -3.7344,     -4.4062],
        [     0.0000,     -1.2812,     -0.1943,      0.5078,     -0.4609,     -1.3281,     -0.3477,     -2.0781,     -2.7344,     -0.9414,     -2.0625,     -1.0938,      0.6367,     -1.4375,     -1.6562],
        [     0.0000,      0.4023,      0.0045,     -0.2637,      0.7578,      0.4629,      0.2373,      0.2852,      0.7461,      0.0233,      0.1406,     -0.3066,     -0.3301,      0.4043,      0.7305],
        [     0.0000,     -1.2188,     -0.4238,      0.1011,     -0.4824,     -1.0859,     -0.3066,     -1.0078,     -1.3750,     -0.5430,     -1.0625,     -0.5469,      0.3047,     -0.2197,     -1.5391],
        [     0.0000,     -1.2188,     -0.5117,      0.7969,     -0.1260,     -0.9961,     -0.5703,     -1.8203,     -1.7500,     -0.3848,     -1.5703,     -1.5781,      0.2480,     -0.8984,     -2.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2759],
        [0.2798],
        [0.2103],
        [0.1851],
        [0.1777],
        [0.1610],
        [0.1479],
        [0.1326],
        [0.1346],
        [0.1005],
        [0.1155],
        [0.0678],
        [0.1007],
        [0.1083]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5195,     0.4805,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0649,     0.4375,     0.4980,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0547,     0.2793,     0.3691,     0.2969,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0859,     0.0417,     0.0153,     0.0179,     0.8398,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0354,     0.0297,     0.0625,     0.0579,     0.6406,     0.1758,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3359,     0.2324,     0.1318,     0.1631,     0.0356,     0.0649,     0.0371,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0693,     0.0703,     0.1455,     0.1768,     0.0034,     0.0835,     0.0811,     0.3711,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0014,     0.0001,     0.0002,     0.0002,     0.9766,     0.0001,     0.0148,     0.0005,     0.0079,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0481,     0.0718,     0.1758,     0.1826,     0.0840,     0.1270,     0.0432,     0.1040,     0.0332,     0.1309,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1562,     0.0474,     0.0625,     0.0723,     0.0967,     0.0299,     0.1147,     0.1348,     0.0669,     0.1729,     0.0452,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0280,     0.1387,     0.1250,     0.0996,     0.0005,     0.2715,     0.0214,     0.1021,     0.0131,     0.0032,     0.0625,     0.1357,     0.0000,     0.0000,     0.0000],
        [    0.0374,     0.0483,     0.1055,     0.1250,     0.0020,     0.0635,     0.0417,     0.2148,     0.0073,     0.0111,     0.0222,     0.1348,     0.1865,     0.0000,     0.0000],
        [    0.0007,     0.0000,     0.0001,     0.0001,     0.9648,     0.0000,     0.0106,     0.0002,     0.0050,     0.0139,     0.0010,     0.0001,     0.0003,     0.0049,     0.0000],
        [    0.0869,     0.3633,     0.1060,     0.1045,     0.0002,     0.1118,     0.0042,     0.0603,     0.0074,     0.0037,     0.0150,     0.0659,     0.0527,     0.0089,     0.0080]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0110, -0.0075, -0.0482,  ..., -0.0115, -0.0166, -0.0048],
        [-0.0289, -0.0262,  0.0479,  ...,  0.0145,  0.0072, -0.0267],
        [-0.0447,  0.0027,  0.0124,  ..., -0.0054,  0.0101,  0.0094],
        ...,
        [-0.0065, -0.0280,  0.0130,  ...,  0.0002,  0.0044,  0.0118],
        [-0.0325, -0.0249,  0.0020,  ...,  0.0003, -0.0255,  0.0347],
        [-0.0101,  0.0091, -0.0275,  ..., -0.0080, -0.0068,  0.0137]], device='cuda:0', requires_grad=True)
K: tensor([ 0.1729,  1.2344, -1.0938, -1.0078,  0.7422,  0.8320, -1.5391,  1.2812,  0.6953,  0.5742, -0.3184, -0.5586, -1.7188, -0.8008,  0.2695, -0.1279, -0.1250,  0.9375,  0.8477,  0.8750,  0.4375,  0.8242, -0.8008,  0.3203,  0.9844,  0.9883, -1.4453,  0.7812,  1.1875,  0.3887, -0.8242,  0.6523,
        -1.1484,  1.1406, -0.5430, -0.8164,  1.2734,  0.4883,  1.6250, -1.0625, -0.8164, -0.1582, -0.9414,  0.3848, -0.9766, -0.5469, -0.7578, -0.6367, -0.2080,  0.0106,  1.3438, -0.2988,  1.0625,  1.2188, -1.6562,  2.0625, -0.6055, -1.4062, -0.4434,  1.9922,  1.2891, -0.3828, -0.7734, -1.2109],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0093,  0.0009,  0.0277,  ...,  0.0098,  0.0187, -0.0524],
        [-0.0011, -0.0135, -0.0136,  ...,  0.0456, -0.0068,  0.0006],
        [ 0.0463, -0.0134, -0.0116,  ..., -0.0202, -0.0375,  0.0011],
        ...,
        [ 0.0092,  0.0441, -0.0303,  ...,  0.0069,  0.0148,  0.0075],
        [ 0.0098, -0.0047,  0.0059,  ..., -0.0139,  0.0054, -0.0491],
        [-0.0156, -0.0387,  0.0104,  ..., -0.0085,  0.0024, -0.0257]], device='cuda:0', requires_grad=True)
Q: tensor([-0.2520, -0.6172,  0.2656,  0.4492,  0.7031, -1.8203,  0.1143,  0.1748, -0.2188, -0.4395, -0.0781, -0.3652,  0.7461,  0.2832, -1.4141,  1.5391,  0.7031, -0.9023, -0.0603,  0.9141, -1.0625, -0.3203,  0.3418, -1.0234, -1.0234,  0.2363,  0.5000, -1.8281,  0.5586, -0.8906,  0.0464, -1.4688,
         0.1660, -1.0156,  0.5117, -0.6133,  0.2061,  0.2061, -0.9219,  0.6406,  0.7266, -0.0889, -0.5820, -0.9141,  0.6992,  0.9023,  1.7266,  0.1050,  0.9023, -0.5781,  0.1533,  0.4590, -1.2422, -0.0342, -0.3594,  0.3770, -0.3027,  1.4688, -0.6445,  0.4141, -0.5742,  1.2422,  1.1484,  0.2871],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.0771,  0.9453,  0.7969,  1.2109,  1.1719,  2.2812,  1.6172,  0.6523,  0.7227,  1.1484,  1.0469,  1.4922,  0.3906,  2.6875],
        [ 0.0000,  1.9141,  2.0312,  1.7344, -3.9844,  2.7031, -0.1787,  1.6641, -0.8984, -1.7656,  0.6875,  1.9609,  1.2578, -1.1484,  1.2656],
        [ 0.0000,  1.6328,  1.9141,  1.6953, -3.4219,  2.5469,  0.1128,  1.6562, -0.7578, -1.6484,  0.8164,  2.0469,  1.2422, -0.9922,  1.5469],
        [ 0.0000, -0.7227, -1.7266, -1.5703,  2.2812, -2.3906, -1.9844, -2.6875,  0.1514,  1.4375, -1.6250, -2.1875, -2.1719,  0.5117, -3.5312],
        [ 0.0000, -0.1738,  0.5664,  0.4922,  2.8906,  1.6016,  2.4219,  0.8828,  1.5469,  1.0859,  1.6406,  1.0547,  0.7227,  1.2734,  2.7031],
        [ 0.0000, -0.3672, -0.9336, -0.7227, -2.2344, -1.6406, -2.2031, -1.1875, -1.7734, -0.8516, -2.4062, -1.3672, -0.8516, -1.4922, -2.4375],
        [ 0.0000,  0.0149,  0.7461,  0.9375, -3.0156,  0.1885,  0.1611,  1.6797, -1.7031, -1.2734, -0.6914,  0.9375,  1.5859, -1.7578,  1.3984],
        [ 0.0000, -2.8438, -2.0781, -1.8281,  6.5000, -2.6250,  2.3125, -1.1641,  1.7031,  2.7812,  0.0796, -1.8516, -0.6250,  1.7031,  0.7695],
        [ 0.0000,  0.4023,  1.2891,  1.3359,  0.5547,  0.9688, -0.1099,  0.7695, -0.3711,  1.0000, -0.0227,  1.4609,  0.7930, -0.4531,  0.6953],
        [ 0.0000, -1.1953, -0.9180, -0.7695, -0.4824, -1.6562, -0.3105, -0.1484, -0.8516,  0.0977, -1.2422, -1.2109,  0.1592, -0.8555, -0.6328],
        [ 0.0000,  1.5938,  1.4922,  1.2656, -3.9844,  2.2656, -0.2715,  1.2891, -0.7578, -2.1719,  0.8047,  1.5781,  0.8477, -0.9727,  0.9336],
        [ 0.0000,  0.2617,  1.0391,  1.2109, -2.9062,  0.5352,  0.1147,  1.7500, -1.6328, -1.2109, -0.5156,  1.2891,  1.6094, -1.6953,  1.4922],
        [ 0.0000, -2.9531, -2.0781, -1.8672,  7.3125, -2.5781,  2.7812, -1.1719,  2.0312,  3.0625,  0.4004, -1.8125, -0.6406,  2.0156,  1.1094],
        [ 0.0000,  1.4297,  0.1973,  0.1836, -6.3438,  0.2539, -3.0312, -0.3652, -2.4688, -3.1562, -1.7578, -0.2754, -0.5000, -2.2812, -2.3906]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5483],
        [0.2518],
        [0.1775],
        [0.1514],
        [0.0342],
        [0.1879],
        [0.1155],
        [0.0404],
        [0.0642],
        [0.1058],
        [0.0545],
        [0.0744],
        [0.0213],
        [0.1155]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3672, 0.6328, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3535, 0.3457, 0.3008, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2773, 0.2432, 0.2715, 0.2070, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1455, 0.1030, 0.1865, 0.2275, 0.3379, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1108, 0.1260, 0.1123, 0.1494, 0.0957, 0.4062, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1201, 0.0503, 0.0728, 0.1099, 0.0452, 0.2500, 0.3516, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0991, 0.0352, 0.0605, 0.0781, 0.0669, 0.1260, 0.2617, 0.2734, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1138, 0.0654, 0.1157, 0.1279, 0.2490, 0.0376, 0.1426, 0.0996, 0.0486, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0796, 0.0388, 0.0786, 0.1221, 0.0659, 0.1055, 0.0618, 0.1846, 0.0576, 0.2051, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0188, 0.0137, 0.0217, 0.0276, 0.0206, 0.0483, 0.0400, 0.0796, 0.6602, 0.0162, 0.0535, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0913, 0.0835, 0.0972, 0.0688, 0.1973, 0.0825, 0.0630, 0.0265, 0.0554, 0.0571, 0.0791, 0.0977, 0.0000, 0.0000, 0.0000],
        [0.0344, 0.0110, 0.0201, 0.0275, 0.0215, 0.0496, 0.0747, 0.0928, 0.4297, 0.0134, 0.0908, 0.0437, 0.0908, 0.0000, 0.0000],
        [0.0557, 0.0344, 0.0625, 0.0693, 0.1260, 0.0178, 0.0688, 0.0535, 0.0261, 0.3027, 0.0457, 0.0371, 0.0728, 0.0266, 0.0000],
        [0.0151, 0.0048, 0.0081, 0.0096, 0.0057, 0.0289, 0.0466, 0.0181, 0.3828, 0.0015, 0.0388, 0.0250, 0.0140, 0.3359, 0.0649]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0188,  0.0189, -0.0299,  ...,  0.0049,  0.0312, -0.0037],
        [ 0.0156,  0.0033, -0.0134,  ..., -0.0056, -0.0113, -0.0233],
        [-0.0243,  0.0420, -0.0087,  ..., -0.0188,  0.0058,  0.0063],
        ...,
        [ 0.0300, -0.0012, -0.0049,  ...,  0.0333, -0.0122, -0.0121],
        [ 0.0145, -0.0049, -0.0353,  ...,  0.0388, -0.0306,  0.0073],
        [-0.0168, -0.0128,  0.0269,  ...,  0.0218, -0.0173,  0.0027]], device='cuda:0', requires_grad=True)
K: tensor([-0.0625,  0.1406, -0.6953, -1.1016,  0.9492, -0.2637,  0.0157, -0.4355, -0.3730, -0.1777, -0.1221, -0.5156,  0.0630,  0.1865, -1.8125,  0.0500, -1.0859,  0.4746, -1.3906, -0.1211,  0.5547, -0.2227,  0.4980,  0.7461, -0.7656, -0.1406, -0.2314, -0.2031, -0.0801, -0.1211,  0.1934, -0.8477,
        -0.8398, -0.4062,  1.1094,  0.2734,  0.1963,  0.7578, -0.0479,  0.6445,  0.2256,  0.8242,  0.9570, -1.2656,  0.3027, -0.8086,  0.7695, -0.3770,  0.1699, -0.8672, -0.0605, -0.1426, -0.7891, -0.1846,  0.5586,  0.3555, -0.0859,  0.0564, -1.1406, -0.2217, -0.8203, -0.3066, -0.2812,  0.0732],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[     0.0100,     -0.0137,      0.0103,  ...,      0.0169,     -0.0010,     -0.0040],
        [     0.0134,     -0.0009,      0.0145,  ...,     -0.0283,      0.0126,      0.0279],
        [    -0.0248,      0.0122,     -0.0083,  ...,      0.0309,      0.0014,      0.0053],
        ...,
        [    -0.0102,      0.0393,      0.0055,  ...,     -0.0042,     -0.0016,     -0.0148],
        [     0.0393,      0.0000,     -0.0560,  ...,     -0.0406,      0.0055,      0.0351],
        [    -0.0219,      0.0255,     -0.0567,  ...,     -0.0084,      0.0303,     -0.0207]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.1118, -1.1953,  0.1138, -0.5977,  0.6875,  0.1992, -1.0547, -0.3516,  1.4609,  1.2578, -0.0270,  0.7773, -1.6953, -0.3926, -0.6953, -0.3418, -0.6094,  0.8594, -0.4316,  0.4902,  0.3496,  0.1396,  0.9141,  0.6602, -0.6602, -1.2734, -0.7969, -0.1982, -0.4805, -0.3691,  0.7812, -0.7734,
        -1.1328, -0.1777,  0.3066,  0.2559,  0.1885,  0.5547, -2.2500,  0.2539, -0.4629,  0.7539,  0.7812, -0.5039, -0.7188, -1.1250,  0.0645, -0.5430,  0.1079, -0.5117,  0.5039,  0.4160,  0.1875, -0.9492,  0.2012, -0.5352, -0.0469,  0.7578,  0.0159, -0.0483, -0.5195, -0.0500, -1.0078,  0.1230],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.5469,  0.2334,  0.1777,  0.6719,  0.7188,  0.6172,  0.6836,  0.9961,  0.5469,  0.6836,  0.1572,  0.7422,  0.9531,  0.6797],
        [ 0.0000, -0.0240, -0.1631, -0.4922,  0.9648,  0.0139, -0.1514, -1.0859, -0.2236, -0.0781,  0.0315, -0.3086, -1.1875, -0.2598, -0.5352],
        [ 0.0000, -0.1318, -0.0190, -0.2910,  0.8398, -0.0427, -0.1934, -0.8867, -0.2109, -0.0449,  0.0576, -0.1299, -0.9805, -0.2402, -0.5078],
        [ 0.0000, -0.3418,  0.2520,  0.4512,  0.8398, -1.5859,  0.5312,  0.6680, -0.6055,  1.9531, -0.1572, -0.5781,  1.1406, -0.5430, -0.0420],
        [ 0.0000,  0.1270,  0.0136,  0.3027, -0.1484,  1.2969,  1.3672,  2.0000,  2.3125,  0.6758,  1.5078,  0.2285,  2.1719,  2.1406,  1.3203],
        [ 0.0000, -0.8750, -0.5039, -0.0918, -0.9805,  0.7344,  1.0703,  1.2344,  3.6094, -1.3125,  0.9297,  0.4609,  1.2500,  3.4844,  1.5000],
        [ 0.0000, -1.0391, -0.4922, -0.2363, -0.3926,  0.2373,  0.9688,  1.0156,  2.7344, -0.9531,  0.8906,  0.1689,  1.0156,  2.6562,  1.1641],
        [ 0.0000, -0.5508,  0.0161,  0.1182,  0.7852, -1.1094,  0.2266, -0.1328, -0.8516,  1.5703, -0.2295, -0.4336,  0.1406, -0.8320, -0.2500],
        [ 0.0000, -0.7188, -0.0134,  0.4297, -0.1846,  0.2812, -0.2539,  0.8438, -0.3242,  0.9492,  0.8906,  0.3555,  0.9219, -0.2715, -0.1455],
        [ 0.0000, -0.3184,  0.1406,  0.3809,  0.0938,  0.9453,  0.7578,  1.4375,  3.5625, -0.1523,  1.0469,  0.8789,  1.5703,  3.3906,  1.1953],
        [ 0.0000, -0.0923,  0.0640, -0.2832,  0.7695, -0.1030, -0.3691, -1.2344, -0.4980, -0.4688, -0.1416,  0.0674, -1.4375, -0.4980, -0.5781],
        [ 0.0000, -1.1406, -0.5391, -0.2305, -0.4746,  0.3613,  0.7695,  0.9883,  2.5156, -0.9531,  0.9648,  0.2344,  0.9688,  2.4688,  1.0469],
        [ 0.0000, -0.4805,  0.1157,  0.2188,  0.8164, -1.1406,  0.2109, -0.0396, -0.7578,  1.6953, -0.2012, -0.4102,  0.2676, -0.7383, -0.2793],
        [ 0.0000, -1.1484, -0.6211, -0.4512, -0.9648,  0.6523,  1.1328,  0.1807,  3.2344, -2.2812,  0.9453,  0.5078, -0.0693,  3.1094,  1.4609]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4380],
        [0.3935],
        [0.3427],
        [0.1906],
        [0.1416],
        [0.0837],
        [0.1138],
        [0.1040],
        [0.0764],
        [0.0454],
        [0.0836],
        [0.0611],
        [0.0651],
        [0.0432]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(.:0.1719 a:0.1152,:0.0554 and:0.1689.:0.0192,:0.3105 a:0.1216
:0.2178)


------
		( a:0.1152,:0.0554 and:0.1689.:0.0192,:0.3105 a:0.1216
:0.2178The:0.0454)
The first.
The first.
The first.
The first.
@ 550 train 6.2273 , allloss: 7.5704, dt: 1602.01ms, fracRes: 0.0102, norm(attn): 0.0854, norm(output): 1.1172, norm(x): 1.1011, norm(y): 0.9983, norm:2.7605, tok/sec: 81817.30, flops:85.87, batch-reuse:1
@ 551 train 6.2834 , allloss: 7.4517, dt: 1244.34ms, fracRes: 0.0104, norm(attn): 0.0840, norm(output): 1.1172, norm(x): 1.1083, norm(y): 0.9983, norm:2.9756, tok/sec: 105334.16, flops:110.55, batch-reuse:1
@ 552 train 6.1460 , allloss: 7.2180, dt: 1240.10ms, fracRes: 0.0107, norm(attn): 0.0884, norm(output): 1.1172, norm(x): 1.1183, norm(y): 0.9982, norm:2.8953, tok/sec: 105694.49, flops:110.93, batch-reuse:1
@ 553 train 6.2766 , allloss: 7.5625, dt: 1235.52ms, fracRes: 0.0122, norm(attn): 0.0903, norm(output): 1.1250, norm(x): 1.1234, norm(y): 0.9982, norm:3.2323, tok/sec: 106086.27, flops:111.34, batch-reuse:1
@ 554 train 6.2285 , allloss: 7.6295, dt: 1225.09ms, fracRes: 0.0133, norm(attn): 0.0889, norm(output): 1.1562, norm(x): 1.1446, norm(y): 0.9982, norm:3.4867, tok/sec: 106990.10, flops:112.29, batch-reuse:1
@ 555 train 6.2019 , allloss: 8.1370, dt: 1196.24ms, fracRes: 0.0119, norm(attn): 0.0850, norm(output): 1.1641, norm(x): 1.1553, norm(y): 0.9982, norm:4.8665, tok/sec: 109569.60, flops:115.00, batch-reuse:1
@ 556 train 6.1500 , allloss: 8.0676, dt: 1207.82ms, fracRes: 0.0119, norm(attn): 0.0830, norm(output): 1.1641, norm(x): 1.1591, norm(y): 0.9982, norm:5.5364, tok/sec: 108519.59, flops:113.89, batch-reuse:1
@ 557 train 6.2304 , allloss: 8.3375, dt: 1215.40ms, fracRes: 0.0131, norm(attn): 0.0820, norm(output): 1.1719, norm(x): 1.1599, norm(y): 0.9982, norm:5.5531, tok/sec: 107842.94, flops:113.18, batch-reuse:1
@ 558 train 6.3768 , allloss: 8.7790, dt: 1208.89ms, fracRes: 0.0142, norm(attn): 0.0850, norm(output): 1.1719, norm(x): 1.1614, norm(y): 0.9982, norm:6.1627, tok/sec: 108423.35, flops:113.79, batch-reuse:1
@ 559 train 6.4407 , allloss: 8.6404, dt: 1211.75ms, fracRes: 0.0135, norm(attn): 0.0894, norm(output): 1.1719, norm(x): 1.1600, norm(y): 0.9981, norm:7.5550, tok/sec: 108167.69, flops:113.52, batch-reuse:1
@ 560 train 6.3973 , allloss: 9.1553, dt: 1196.40ms, fracRes: 0.0139, norm(attn): 0.0918, norm(output): 1.1641, norm(x): 1.1635, norm(y): 0.9981, norm:6.9018, tok/sec: 109555.30, flops:114.98, batch-reuse:1
@ 561 train 6.4388 , allloss: 8.9826, dt: 1187.04ms, fracRes: 0.0156, norm(attn): 0.0908, norm(output): 1.1719, norm(x): 1.1651, norm(y): 0.9981, norm:6.6263, tok/sec: 110419.10, flops:115.89, batch-reuse:1
@ 562 train 6.3588 , allloss: 8.7623, dt: 1212.04ms, fracRes: 0.0165, norm(attn): 0.0869, norm(output): 1.1719, norm(x): 1.1622, norm(y): 0.9981, norm:6.8698, tok/sec: 108141.20, flops:113.50, batch-reuse:1
@ 563 train 6.4675 , allloss: 9.0747, dt: 1204.62ms, fracRes: 0.0175, norm(attn): 0.0859, norm(output): 1.1719, norm(x): 1.1704, norm(y): 0.9982, norm:5.8301, tok/sec: 108807.57, flops:114.20, batch-reuse:1
@ 564 train 6.2811 , allloss: 8.6279, dt: 1211.38ms, fracRes: 0.0181, norm(attn): 0.0864, norm(output): 1.1719, norm(x): 1.1677, norm(y): 0.9982, norm:5.1767, tok/sec: 108200.27, flops:113.56, batch-reuse:1
@ 565 train 6.1611 , allloss: 8.5355, dt: 1203.22ms, fracRes: 0.0191, norm(attn): 0.0864, norm(output): 1.1797, norm(x): 1.1743, norm(y): 0.9982, norm:5.5216, tok/sec: 108934.24, flops:114.33, batch-reuse:1
@ 566 train 6.3693 , allloss: 8.9809, dt: 1229.51ms, fracRes: 0.0204, norm(attn): 0.0850, norm(output): 1.1875, norm(x): 1.1828, norm(y): 0.9982, norm:5.4197, tok/sec: 106605.17, flops:111.88, batch-reuse:1
@ 567 train 6.3709 , allloss: 9.6159, dt: 1258.82ms, fracRes: 0.0211, norm(attn): 0.0840, norm(output): 1.1875, norm(x): 1.1876, norm(y): 0.9982, norm:6.0566, tok/sec: 104123.00, flops:109.28, batch-reuse:1
@ 568 train 6.3976 , allloss: 9.5798, dt: 1237.22ms, fracRes: 0.0220, norm(attn): 0.0859, norm(output): 1.2031, norm(x): 1.1896, norm(y): 0.9982, norm:5.5824, tok/sec: 105940.71, flops:111.19, batch-reuse:1
@ 569 train 6.3322 , allloss: 10.0032, dt: 1221.50ms, fracRes: 0.0232, norm(attn): 0.0864, norm(output): 1.2031, norm(x): 1.1938, norm(y): 0.9982, norm:6.5240, tok/sec: 107303.72, flops:112.62, batch-reuse:1
@ 570 train 6.3088 , allloss: 10.3280, dt: 1230.17ms, fracRes: 0.0242, norm(attn): 0.0874, norm(output): 1.2031, norm(x): 1.2013, norm(y): 0.9982, norm:6.8860, tok/sec: 106547.56, flops:111.82, batch-reuse:1
@ 571 train 6.2714 , allloss: 10.0508, dt: 1230.66ms, fracRes: 0.0248, norm(attn): 0.0869, norm(output): 1.2031, norm(x): 1.2038, norm(y): 0.9982, norm:6.4923, tok/sec: 106505.60, flops:111.78, batch-reuse:1
@ 572 train 6.2450 , allloss: 9.5392, dt: 1206.64ms, fracRes: 0.0282, norm(attn): 0.0859, norm(output): 1.2031, norm(x): 1.2039, norm(y): 0.9982, norm:5.3189, tok/sec: 108625.65, flops:114.00, batch-reuse:1
@ 573 train 6.2756 , allloss: 9.7284, dt: 1232.72ms, fracRes: 0.0309, norm(attn): 0.0869, norm(output): 1.2031, norm(x): 1.1978, norm(y): 0.9982, norm:5.0967, tok/sec: 106327.48, flops:111.59, batch-reuse:1
@ 574 train 6.3124 , allloss: 8.7278, dt: 1241.91ms, fracRes: 0.0365, norm(attn): 0.0879, norm(output): 1.2031, norm(x): 1.1840, norm(y): 0.9982, norm:4.2144, tok/sec: 105540.54, flops:110.77, batch-reuse:1
@ 575 train 6.2721 , allloss: 8.6830, dt: 1247.97ms, fracRes: 0.0404, norm(attn): 0.0869, norm(output): 1.2031, norm(x): 1.1829, norm(y): 0.9983, norm:4.4545, tok/sec: 105028.08, flops:110.23, batch-reuse:1
@ 576 train 6.2281 , allloss: 8.4675, dt: 1235.38ms, fracRes: 0.0497, norm(attn): 0.0884, norm(output): 1.1719, norm(x): 1.1639, norm(y): 0.9983, norm:3.6958, tok/sec: 106098.53, flops:111.35, batch-reuse:1
@ 577 train 6.3114 , allloss: 9.3363, dt: 1227.13ms, fracRes: 0.0526, norm(attn): 0.0898, norm(output): 1.1719, norm(x): 1.1788, norm(y): 0.9984, norm:5.0524, tok/sec: 106811.90, flops:112.10, batch-reuse:1
@ 578 train 6.2545 , allloss: 11.3065, dt: 1205.57ms, fracRes: 0.0478, norm(attn): 0.0889, norm(output): 1.1719, norm(x): 1.1804, norm(y): 0.9984, norm:6.1764, tok/sec: 108721.63, flops:114.11, batch-reuse:1
@ 579 train 6.2825 , allloss: 12.0417, dt: 1220.18ms, fracRes: 0.0460, norm(attn): 0.0889, norm(output): 1.1719, norm(x): 1.1776, norm(y): 0.9984, norm:5.6948, tok/sec: 107419.92, flops:112.74, batch-reuse:1
@ 580 train 6.3116 , allloss: 12.1634, dt: 1212.44ms, fracRes: 0.0445, norm(attn): 0.0908, norm(output): 1.1562, norm(x): 1.1811, norm(y): 0.9984, norm:6.3777, tok/sec: 108105.84, flops:113.46, batch-reuse:1
@ 581 train 6.2582 , allloss: 11.1648, dt: 1228.27ms, fracRes: 0.0484, norm(attn): 0.0962, norm(output): 1.1406, norm(x): 1.1873, norm(y): 0.9984, norm:5.8257, tok/sec: 106712.83, flops:112.00, batch-reuse:1
@ 582 train 6.2623 , allloss: 11.7461, dt: 1225.39ms, fracRes: 0.0533, norm(attn): 0.0991, norm(output): 1.1484, norm(x): 1.2013, norm(y): 0.9985, norm:5.1896, tok/sec: 106963.06, flops:112.26, batch-reuse:1
@ 583 train 6.2005 , allloss: 10.7461, dt: 1205.07ms, fracRes: 0.0546, norm(attn): 0.0986, norm(output): 1.1562, norm(x): 1.2131, norm(y): 0.9985, norm:4.1702, tok/sec: 108767.27, flops:114.15, batch-reuse:1
@ 584 train 6.3147 , allloss: 11.4220, dt: 1215.77ms, fracRes: 0.0575, norm(attn): 0.1006, norm(output): 1.1484, norm(x): 1.2158, norm(y): 0.9985, norm:6.1098, tok/sec: 107809.80, flops:113.15, batch-reuse:1
@ 585 train 6.2585 , allloss: 10.9121, dt: 1193.57ms, fracRes: 0.0582, norm(attn): 0.1025, norm(output): 1.1641, norm(x): 1.2140, norm(y): 0.9986, norm:4.8951, tok/sec: 109815.52, flops:115.25, batch-reuse:1
@ 586 train 6.2758 , allloss: 10.8894, dt: 1204.20ms, fracRes: 0.0549, norm(attn): 0.1025, norm(output): 1.1641, norm(x): 1.2108, norm(y): 0.9985, norm:7.6721, tok/sec: 108846.01, flops:114.24, batch-reuse:1
@ 587 train 6.2954 , allloss: 10.7657, dt: 1222.55ms, fracRes: 0.0500, norm(attn): 0.1069, norm(output): 1.1719, norm(x): 1.2022, norm(y): 0.9986, norm:7.3806, tok/sec: 107212.28, flops:112.52, batch-reuse:1
@ 588 train 6.3076 , allloss: 10.3966, dt: 1240.78ms, fracRes: 0.0477, norm(attn): 0.1104, norm(output): 1.1719, norm(x): 1.1967, norm(y): 0.9987, norm:6.0933, tok/sec: 105636.38, flops:110.87, batch-reuse:1
@ 589 train 6.2953 , allloss: 11.2159, dt: 1240.14ms, fracRes: 0.0492, norm(attn): 0.1157, norm(output): 1.1719, norm(x): 1.1878, norm(y): 0.9987, norm:7.7894, tok/sec: 105691.30, flops:110.92, batch-reuse:1
@ 590 train 6.3138 , allloss: 10.8631, dt: 1200.64ms, fracRes: 0.0780, norm(attn): 0.1157, norm(output): 1.1641, norm(x): 1.1106, norm(y): 0.9986, norm:9.2965, tok/sec: 109168.25, flops:114.57, batch-reuse:1
@ 591 train 6.2425 , allloss: 11.2181, dt: 1205.56ms, fracRes: 0.0516, norm(attn): 0.1191, norm(output): 1.1641, norm(x): 1.1797, norm(y): 0.9984, norm:8.9288, tok/sec: 108722.81, flops:114.11, batch-reuse:1
@ 592 train 6.2447 , allloss: 10.2603, dt: 1199.58ms, fracRes: 0.0605, norm(attn): 0.1221, norm(output): 1.1406, norm(x): 1.1860, norm(y): 0.9982, norm:7.4643, tok/sec: 109264.85, flops:114.68, batch-reuse:1
@ 593 train 6.2354 , allloss: 9.6992, dt: 1203.29ms, fracRes: 0.0595, norm(attn): 0.1211, norm(output): 1.1406, norm(x): 1.1877, norm(y): 0.9981, norm:5.0074, tok/sec: 108927.87, flops:114.32, batch-reuse:1
@ 594 train 6.4371 , allloss: 9.3872, dt: 1202.33ms, fracRes: 0.0516, norm(attn): 0.1226, norm(output): 1.1719, norm(x): 1.2160, norm(y): 0.9980, norm:4.1379, tok/sec: 109015.22, flops:114.41, batch-reuse:1
@ 595 train 6.2885 , allloss: 9.8181, dt: 1190.21ms, fracRes: 0.0561, norm(attn): 0.1270, norm(output): 1.1797, norm(x): 1.2332, norm(y): 0.9980, norm:5.5610, tok/sec: 110124.85, flops:115.58, batch-reuse:1
@ 596 train 6.3072 , allloss: 9.5428, dt: 1208.66ms, fracRes: 0.0384, norm(attn): 0.1182, norm(output): 1.2031, norm(x): 1.2403, norm(y): 0.9977, norm:7.4767, tok/sec: 108443.82, flops:113.81, batch-reuse:1
@ 597 train 6.2772 , allloss: 10.5979, dt: 1199.37ms, fracRes: 0.0367, norm(attn): 0.1143, norm(output): 1.2344, norm(x): 1.2538, norm(y): 0.9976, norm:10.9939, tok/sec: 109283.90, flops:114.70, batch-reuse:1
@ 598 train 6.3437 , allloss: 11.3174, dt: 1210.92ms, fracRes: 0.0445, norm(attn): 0.1094, norm(output): 1.2422, norm(x): 1.2801, norm(y): 0.9976, norm:9.6132, tok/sec: 108241.25, flops:113.60, batch-reuse:1
@ 599 train 6.3190 , allloss: 11.6964, dt: 1213.94ms, fracRes: 0.0500, norm(attn): 0.1084, norm(output): 1.2500, norm(x): 1.2955, norm(y): 0.9976, norm:10.0787, tok/sec: 107972.29, flops:113.32, batch-reuse:1
@ 600 train 6.2658 , allloss: 15.7920, dt: 1196.66ms, fracRes: 0.0527, norm(attn): 0.1113, norm(output): 1.2578, norm(x): 1.3011, norm(y): 0.9976, norm:15.7242, tok/sec: 109531.81, flops:114.96, batch-reuse:1
@ 601 train 6.3645 , allloss: 17.2332, dt: 1200.11ms, fracRes: 0.0551, norm(attn): 0.1157, norm(output): 1.2578, norm(x): 1.3033, norm(y): 0.9976, norm:15.5634, tok/sec: 109216.64, flops:114.62, batch-reuse:1
@ 602 train 6.3347 , allloss: 17.0662, dt: 1210.27ms, fracRes: 0.0607, norm(attn): 0.1167, norm(output): 1.2578, norm(x): 1.2980, norm(y): 0.9976, norm:14.3867, tok/sec: 108299.42, flops:113.66, batch-reuse:1
@ 603 train 6.2833 , allloss: 17.0150, dt: 1228.88ms, fracRes: 0.0645, norm(attn): 0.1187, norm(output): 1.2578, norm(x): 1.2957, norm(y): 0.9977, norm:15.1812, tok/sec: 106660.00, flops:111.94, batch-reuse:1
@ 604 train 6.1921 , allloss: 16.0610, dt: 1245.48ms, fracRes: 0.0681, norm(attn): 0.1201, norm(output): 1.2578, norm(x): 1.2900, norm(y): 0.9979, norm:14.6667, tok/sec: 105238.48, flops:110.45, batch-reuse:1
@ 605 train 6.2057 , allloss: 15.0388, dt: 1245.32ms, fracRes: 0.0713, norm(attn): 0.1279, norm(output): 1.2578, norm(x): 1.2946, norm(y): 0.9980, norm:13.6880, tok/sec: 105252.06, flops:110.46, batch-reuse:1
@ 606 train 6.2473 , allloss: 14.0696, dt: 1245.85ms, fracRes: 0.0781, norm(attn): 0.1250, norm(output): 1.2578, norm(x): 1.2864, norm(y): 0.9981, norm:14.0630, tok/sec: 105206.66, flops:110.42, batch-reuse:1
@ 607 train 6.2178 , allloss: 13.4181, dt: 1241.62ms, fracRes: 0.0867, norm(attn): 0.1270, norm(output): 1.2422, norm(x): 1.2699, norm(y): 0.9982, norm:12.6955, tok/sec: 105565.06, flops:110.79, batch-reuse:1
@ 608 train 6.1698 , allloss: 13.4941, dt: 1243.36ms, fracRes: 0.0979, norm(attn): 0.1260, norm(output): 1.2344, norm(x): 1.2548, norm(y): 0.9982, norm:12.9408, tok/sec: 105417.55, flops:110.64, batch-reuse:1
@ 609 train 6.2175 , allloss: 13.2181, dt: 1224.75ms, fracRes: 0.1017, norm(attn): 0.1240, norm(output): 1.2188, norm(x): 1.2507, norm(y): 0.9980, norm:12.9529, tok/sec: 107019.10, flops:112.32, batch-reuse:1
@ 610 train 6.3679 , allloss: 13.4424, dt: 1193.27ms, fracRes: 0.1051, norm(attn): 0.1221, norm(output): 1.2266, norm(x): 1.2585, norm(y): 0.9977, norm:11.1560, tok/sec: 109843.10, flops:115.28, batch-reuse:1
@ 611 train 6.2572 , allloss: 13.4806, dt: 1214.40ms, fracRes: 0.1119, norm(attn): 0.1221, norm(output): 1.2266, norm(x): 1.2544, norm(y): 0.9977, norm:9.9955, tok/sec: 107931.65, flops:113.28, batch-reuse:1
@ 612 train 6.2829 , allloss: 13.2923, dt: 1223.51ms, fracRes: 0.1150, norm(attn): 0.1279, norm(output): 1.2344, norm(x): 1.2544, norm(y): 0.9977, norm:8.3959, tok/sec: 107128.21, flops:112.43, batch-reuse:1
@ 613 train 6.3656 , allloss: 12.5332, dt: 1214.91ms, fracRes: 0.1182, norm(attn): 0.1230, norm(output): 1.2188, norm(x): 1.2467, norm(y): 0.9977, norm:7.9985, tok/sec: 107886.07, flops:113.23, batch-reuse:1
@ 614 train 6.3097 , allloss: 12.6482, dt: 1216.61ms, fracRes: 0.1129, norm(attn): 0.1338, norm(output): 1.2188, norm(x): 1.2386, norm(y): 0.9976, norm:11.1300, tok/sec: 107735.03, flops:113.07, batch-reuse:1
@ 615 train 6.2879 , allloss: 12.8098, dt: 1200.57ms, fracRes: 0.1100, norm(attn): 0.1357, norm(output): 1.2266, norm(x): 1.2350, norm(y): 0.9976, norm:11.8554, tok/sec: 109175.04, flops:114.58, batch-reuse:1
@ 616 train 6.3203 , allloss: 13.2302, dt: 1205.16ms, fracRes: 0.1152, norm(attn): 0.1348, norm(output): 1.2031, norm(x): 1.2235, norm(y): 0.9976, norm:10.7443, tok/sec: 108758.69, flops:114.14, batch-reuse:1
@ 617 train 6.1100 , allloss: 12.5969, dt: 1209.44ms, fracRes: 0.1017, norm(attn): 0.1387, norm(output): 1.2422, norm(x): 1.2462, norm(y): 0.9976, norm:10.9767, tok/sec: 108374.42, flops:113.74, batch-reuse:1
@ 618 train 6.2473 , allloss: 13.1456, dt: 1235.34ms, fracRes: 0.0904, norm(attn): 0.1396, norm(output): 1.2500, norm(x): 1.2605, norm(y): 0.9976, norm:10.7021, tok/sec: 106101.91, flops:111.36, batch-reuse:1
@ 619 train 6.2177 , allloss: 12.4815, dt: 1237.03ms, fracRes: 0.0935, norm(attn): 0.1367, norm(output): 1.2422, norm(x): 1.2544, norm(y): 0.9975, norm:10.5120, tok/sec: 105956.64, flops:111.20, batch-reuse:1
@ 620 train 6.2015 , allloss: 12.2937, dt: 1223.55ms, fracRes: 0.0965, norm(attn): 0.1318, norm(output): 1.2344, norm(x): 1.2458, norm(y): 0.9976, norm:9.2800, tok/sec: 107124.37, flops:112.43, batch-reuse:1
@ 621 train 6.2131 , allloss: 12.3548, dt: 1216.64ms, fracRes: 0.0919, norm(attn): 0.1348, norm(output): 1.2500, norm(x): 1.2512, norm(y): 0.9978, norm:8.9203, tok/sec: 107733.07, flops:113.07, batch-reuse:1
@ 622 train 6.1580 , allloss: 11.5540, dt: 1202.26ms, fracRes: 0.0935, norm(attn): 0.1318, norm(output): 1.2422, norm(x): 1.2431, norm(y): 0.9978, norm:8.2080, tok/sec: 109021.41, flops:114.42, batch-reuse:1
@ 623 train 6.1617 , allloss: 10.3242, dt: 1206.56ms, fracRes: 0.0995, norm(attn): 0.1318, norm(output): 1.2500, norm(x): 1.2459, norm(y): 0.9978, norm:8.1501, tok/sec: 108632.45, flops:114.01, batch-reuse:1
@ 624 train 6.2343 , allloss: 10.5536, dt: 1225.51ms, fracRes: 0.0999, norm(attn): 0.1250, norm(output): 1.2422, norm(x): 1.2400, norm(y): 0.9979, norm:7.7265, tok/sec: 106952.87, flops:112.25, batch-reuse:1
@ 625 train 6.3194 , allloss: 10.6660, dt: 1225.08ms, fracRes: 0.1000, norm(attn): 0.1250, norm(output): 1.2500, norm(x): 1.2504, norm(y): 0.9979, norm:8.9313, tok/sec: 106990.85, flops:112.29, batch-reuse:1
@ 626 train 6.2646 , allloss: 10.6548, dt: 1222.06ms, fracRes: 0.1194, norm(attn): 0.1226, norm(output): 1.2031, norm(x): 1.2142, norm(y): 0.9977, norm:9.4615, tok/sec: 107254.69, flops:112.57, batch-reuse:1
@ 627 train 6.1322 , allloss: 10.9201, dt: 1216.22ms, fracRes: 0.1247, norm(attn): 0.1196, norm(output): 1.1797, norm(x): 1.2081, norm(y): 0.9977, norm:8.1280, tok/sec: 107769.98, flops:113.11, batch-reuse:1
@ 628 train 6.2906 , allloss: 10.1600, dt: 1234.10ms, fracRes: 0.1306, norm(attn): 0.1191, norm(output): 1.1641, norm(x): 1.1836, norm(y): 0.9977, norm:8.2992, tok/sec: 106208.50, flops:111.47, batch-reuse:1
@ 629 train 6.3041 , allloss: 9.9042, dt: 1228.46ms, fracRes: 0.1337, norm(attn): 0.1240, norm(output): 1.1328, norm(x): 1.1617, norm(y): 0.9976, norm:7.5820, tok/sec: 106696.31, flops:111.98, batch-reuse:1
@ 630 train 6.3717 , allloss: 9.4589, dt: 1195.53ms, fracRes: 0.1150, norm(attn): 0.1245, norm(output): 1.1562, norm(x): 1.1691, norm(y): 0.9976, norm:6.2550, tok/sec: 109635.22, flops:115.06, batch-reuse:1
@ 631 train 6.3263 , allloss: 9.3902, dt: 1200.10ms, fracRes: 0.1430, norm(attn): 0.1191, norm(output): 1.1172, norm(x): 1.1227, norm(y): 0.9976, norm:6.9570, tok/sec: 109217.72, flops:114.63, batch-reuse:1
@ 632 train 6.4947 , allloss: 9.7266, dt: 1212.80ms, fracRes: 0.1362, norm(attn): 0.1221, norm(output): 1.1172, norm(x): 1.1174, norm(y): 0.9975, norm:6.5830, tok/sec: 108073.58, flops:113.43, batch-reuse:1
@ 633 train 6.3890 , allloss: 9.5284, dt: 1209.75ms, fracRes: 0.1478, norm(attn): 0.1201, norm(output): 1.0938, norm(x): 1.1138, norm(y): 0.9976, norm:7.5742, tok/sec: 108346.40, flops:113.71, batch-reuse:1
@ 634 train 6.2530 , allloss: 9.5291, dt: 1204.17ms, fracRes: 0.1534, norm(attn): 0.1235, norm(output): 1.0781, norm(x): 1.1083, norm(y): 0.9976, norm:6.9740, tok/sec: 108848.10, flops:114.24, batch-reuse:1
@ 635 train 6.3465 , allloss: 9.4844, dt: 1198.58ms, fracRes: 0.1517, norm(attn): 0.1270, norm(output): 1.0859, norm(x): 1.1035, norm(y): 0.9974, norm:8.6953, tok/sec: 109355.83, flops:114.77, batch-reuse:1
@ 636 train 6.3514 , allloss: 10.4510, dt: 1218.00ms, fracRes: 0.1527, norm(attn): 0.1289, norm(output): 1.0781, norm(x): 1.0990, norm(y): 0.9974, norm:8.1698, tok/sec: 107612.84, flops:112.94, batch-reuse:1
@ 637 train 6.2133 , allloss: 9.4514, dt: 1202.04ms, fracRes: 0.1526, norm(attn): 0.1279, norm(output): 1.0625, norm(x): 1.0972, norm(y): 0.9975, norm:8.5146, tok/sec: 109040.91, flops:114.44, batch-reuse:1
@ 638 train 6.2081 , allloss: 9.6972, dt: 1211.51ms, fracRes: 0.1525, norm(attn): 0.1309, norm(output): 1.0625, norm(x): 1.0982, norm(y): 0.9976, norm:8.8290, tok/sec: 108188.70, flops:113.55, batch-reuse:1
@ 639 train 6.2809 , allloss: 9.6778, dt: 1215.92ms, fracRes: 0.1534, norm(attn): 0.1328, norm(output): 1.0625, norm(x): 1.1005, norm(y): 0.9975, norm:7.3376, tok/sec: 107796.25, flops:113.13, batch-reuse:1
@ 640 train 6.2008 , allloss: 10.2731, dt: 1219.39ms, fracRes: 0.1502, norm(attn): 0.1357, norm(output): 1.0625, norm(x): 1.1041, norm(y): 0.9974, norm:10.8972, tok/sec: 107489.50, flops:112.81, batch-reuse:1
@ 641 train 6.2088 , allloss: 10.1580, dt: 1197.71ms, fracRes: 0.1506, norm(attn): 0.1396, norm(output): 1.0625, norm(x): 1.1043, norm(y): 0.9974, norm:10.8497, tok/sec: 109435.44, flops:114.85, batch-reuse:1
@ 642 train 6.1808 , allloss: 9.8025, dt: 1207.18ms, fracRes: 0.1513, norm(attn): 0.1426, norm(output): 1.0547, norm(x): 1.0973, norm(y): 0.9973, norm:11.7600, tok/sec: 108577.29, flops:113.95, batch-reuse:1
@ 643 train 6.2036 , allloss: 11.4238, dt: 1210.35ms, fracRes: 0.1523, norm(attn): 0.1504, norm(output): 1.0391, norm(x): 1.0936, norm(y): 0.9973, norm:15.6608, tok/sec: 108292.81, flops:113.66, batch-reuse:1
@ 644 train 6.3717 , allloss: 15.0593, dt: 1221.31ms, fracRes: 0.1527, norm(attn): 0.1533, norm(output): 1.0469, norm(x): 1.0918, norm(y): 0.9973, norm:32.3348, tok/sec: 107320.40, flops:112.63, batch-reuse:1
@ 645 train 6.3175 , allloss: 22.0207, dt: 1242.60ms, fracRes: 0.1522, norm(attn): 0.1562, norm(output): 1.0156, norm(x): 1.0830, norm(y): 0.9972, norm:22.8924, tok/sec: 105482.18, flops:110.71, batch-reuse:1
@ 646 train 6.2346 , allloss: 23.6566, dt: 1218.86ms, fracRes: 0.1542, norm(attn): 0.1621, norm(output): 1.0078, norm(x): 1.0769, norm(y): 0.9972, norm:23.8206, tok/sec: 107536.12, flops:112.86, batch-reuse:1
@ 647 train 6.2929 , allloss: 20.2029, dt: 1224.41ms, fracRes: 0.1560, norm(attn): 0.1621, norm(output): 1.0156, norm(x): 1.0828, norm(y): 0.9972, norm:18.9410, tok/sec: 107049.35, flops:112.35, batch-reuse:1
@ 648 train 6.1742 , allloss: 17.1038, dt: 1206.05ms, fracRes: 0.1564, norm(attn): 0.1689, norm(output): 1.0078, norm(x): 1.0870, norm(y): 0.9972, norm:21.1249, tok/sec: 108678.97, flops:114.06, batch-reuse:1
@ 649 train 6.2834 , allloss: 16.7552, dt: 1208.46ms, fracRes: 0.1569, norm(attn): 0.1699, norm(output): 1.0078, norm(x): 1.0932, norm(y): 0.9972, norm:20.0086, tok/sec: 108462.09, flops:113.83, batch-reuse:1
@ 650 train 6.1774 , allloss: 16.5228, dt: 1219.21ms, fracRes: 0.1583, norm(attn): 0.1641, norm(output): 1.0078, norm(x): 1.0947, norm(y): 0.9972, norm:27.6395, tok/sec: 107505.65, flops:112.83, batch-reuse:1
@ 651 train 6.2354 , allloss: 15.4162, dt: 1210.90ms, fracRes: 0.1607, norm(attn): 0.1660, norm(output): 1.0078, norm(x): 1.0902, norm(y): 0.9972, norm:15.7333, tok/sec: 108243.11, flops:113.60, batch-reuse:1
@ 652 train 6.1333 , allloss: 11.1650, dt: 1210.83ms, fracRes: 0.1618, norm(attn): 0.1592, norm(output): 1.0078, norm(x): 1.0890, norm(y): 0.9971, norm:9.1226, tok/sec: 108249.97, flops:113.61, batch-reuse:1
@ 653 train 6.1800 , allloss: 9.4017, dt: 1212.22ms, fracRes: 0.1624, norm(attn): 0.1650, norm(output): 1.0000, norm(x): 1.0844, norm(y): 0.9971, norm:7.7135, tok/sec: 108125.87, flops:113.48, batch-reuse:1
@ 654 train 6.3327 , allloss: 10.0431, dt: 1198.45ms, fracRes: 0.1553, norm(attn): 0.1504, norm(output): 1.0078, norm(x): 1.0872, norm(y): 0.9970, norm:9.0410, tok/sec: 109367.49, flops:114.78, batch-reuse:1
@ 655 train 6.2294 , allloss: 9.2505, dt: 1226.26ms, fracRes: 0.1201, norm(attn): 0.1504, norm(output): 1.0234, norm(x): 1.0780, norm(y): 0.9970, norm:8.8372, tok/sec: 106887.86, flops:112.18, batch-reuse:1
@ 656 train 6.2093 , allloss: 9.9578, dt: 1217.67ms, fracRes: 0.1041, norm(attn): 0.1455, norm(output): 1.0547, norm(x): 1.0925, norm(y): 0.9971, norm:10.5921, tok/sec: 107641.25, flops:112.97, batch-reuse:1
@ 657 train 6.2144 , allloss: 9.4089, dt: 1214.25ms, fracRes: 0.1551, norm(attn): 0.1562, norm(output): 1.0000, norm(x): 1.0954, norm(y): 0.9970, norm:10.3514, tok/sec: 107944.81, flops:113.29, batch-reuse:1
@ 658 train 6.2615 , allloss: 10.2895, dt: 1198.57ms, fracRes: 0.1629, norm(attn): 0.1484, norm(output): 0.9961, norm(x): 1.0951, norm(y): 0.9970, norm:10.5323, tok/sec: 109357.11, flops:114.77, batch-reuse:1
@ 659 train 6.2434 , allloss: 10.0910, dt: 1191.95ms, fracRes: 0.1661, norm(attn): 0.1475, norm(output): 0.9883, norm(x): 1.0871, norm(y): 0.9969, norm:8.6099, tok/sec: 109964.67, flops:115.41, batch-reuse:1
@ 660 train 6.2398 , allloss: 9.8026, dt: 1200.97ms, fracRes: 0.1669, norm(attn): 0.1436, norm(output): 0.9961, norm(x): 1.1012, norm(y): 0.9970, norm:9.6327, tok/sec: 109138.11, flops:114.54, batch-reuse:1
@ 661 train 6.2003 , allloss: 9.8429, dt: 1206.97ms, fracRes: 0.1700, norm(attn): 0.1426, norm(output): 0.9961, norm(x): 1.1061, norm(y): 0.9971, norm:9.0315, tok/sec: 108596.21, flops:113.97, batch-reuse:1
@ 662 train 6.2593 , allloss: 8.8349, dt: 1213.68ms, fracRes: 0.1722, norm(attn): 0.1465, norm(output): 0.9961, norm(x): 1.1117, norm(y): 0.9972, norm:6.5322, tok/sec: 107995.43, flops:113.34, batch-reuse:1
@ 663 train 6.2257 , allloss: 8.9487, dt: 1203.82ms, fracRes: 0.1717, norm(attn): 0.1445, norm(output): 1.0000, norm(x): 1.1358, norm(y): 0.9974, norm:7.1691, tok/sec: 108880.11, flops:114.27, batch-reuse:1
@ 664 train 6.1547 , allloss: 8.7845, dt: 1217.87ms, fracRes: 0.1734, norm(attn): 0.1426, norm(output): 0.9961, norm(x): 1.1095, norm(y): 0.9974, norm:7.6888, tok/sec: 107624.35, flops:112.95, batch-reuse:1
@ 665 train 6.1792 , allloss: 9.1850, dt: 1203.59ms, fracRes: 0.1721, norm(attn): 0.1455, norm(output): 0.9961, norm(x): 1.1278, norm(y): 0.9976, norm:7.8401, tok/sec: 108901.07, flops:114.29, batch-reuse:1
@ 666 train 6.0168 , allloss: 9.4589, dt: 1206.87ms, fracRes: 0.1724, norm(attn): 0.1455, norm(output): 1.0000, norm(x): 1.1477, norm(y): 0.9978, norm:9.1760, tok/sec: 108605.03, flops:113.98, batch-reuse:1
@ 667 train 5.9603 , allloss: 9.2784, dt: 1196.88ms, fracRes: 0.1723, norm(attn): 0.1484, norm(output): 1.0000, norm(x): 1.1464, norm(y): 0.9978, norm:8.5998, tok/sec: 109511.30, flops:114.93, batch-reuse:1
@ 668 train 6.2142 , allloss: 9.0678, dt: 1194.89ms, fracRes: 0.1721, norm(attn): 0.1475, norm(output): 0.9922, norm(x): 1.1325, norm(y): 0.9977, norm:8.0225, tok/sec: 109694.06, flops:115.13, batch-reuse:1
@ 669 train 6.1278 , allloss: 9.3329, dt: 1198.68ms, fracRes: 0.1724, norm(attn): 0.1426, norm(output): 1.0000, norm(x): 1.1469, norm(y): 0.9979, norm:7.4058, tok/sec: 109346.63, flops:114.76, batch-reuse:1
@ 670 train 6.2337 , allloss: 9.5596, dt: 1206.64ms, fracRes: 0.1722, norm(attn): 0.1436, norm(output): 1.0000, norm(x): 1.1600, norm(y): 0.9980, norm:8.2051, tok/sec: 108625.20, flops:114.00, batch-reuse:1
@ 671 train 6.1230 , allloss: 9.4436, dt: 1223.05ms, fracRes: 0.1734, norm(attn): 0.1426, norm(output): 1.0000, norm(x): 1.1670, norm(y): 0.9980, norm:8.1222, tok/sec: 107168.26, flops:112.48, batch-reuse:1
@ 672 train 6.1329 , allloss: 9.6554, dt: 1227.28ms, fracRes: 0.1742, norm(attn): 0.1445, norm(output): 1.0078, norm(x): 1.1642, norm(y): 0.9981, norm:8.8951, tok/sec: 106799.05, flops:112.09, batch-reuse:1
@ 673 train 6.1771 , allloss: 9.6037, dt: 1224.71ms, fracRes: 0.1778, norm(attn): 0.1445, norm(output): 1.0000, norm(x): 1.1634, norm(y): 0.9982, norm:8.7849, tok/sec: 107022.62, flops:112.32, batch-reuse:1
@ 674 train 6.1594 , allloss: 10.4296, dt: 1247.56ms, fracRes: 0.1721, norm(attn): 0.1514, norm(output): 1.0156, norm(x): 1.1818, norm(y): 0.9982, norm:10.4142, tok/sec: 105062.92, flops:110.27, batch-reuse:1
@ 675 train 6.0415 , allloss: 10.8404, dt: 1250.90ms, fracRes: 0.1722, norm(attn): 0.1514, norm(output): 1.0078, norm(x): 1.1838, norm(y): 0.9982, norm:10.3864, tok/sec: 104782.25, flops:109.97, batch-reuse:1
@ 676 train 6.1204 , allloss: 10.3565, dt: 1247.93ms, fracRes: 0.1722, norm(attn): 0.1533, norm(output): 1.0156, norm(x): 1.1854, norm(y): 0.9985, norm:10.4529, tok/sec: 105031.33, flops:110.23, batch-reuse:1
@ 677 train 6.2407 , allloss: 9.1356, dt: 1223.15ms, fracRes: 0.1727, norm(attn): 0.1553, norm(output): 1.0156, norm(x): 1.1996, norm(y): 0.9986, norm:7.4527, tok/sec: 107158.96, flops:112.47, batch-reuse:1
@ 678 train 6.1081 , allloss: 8.7013, dt: 1228.98ms, fracRes: 0.1729, norm(attn): 0.1504, norm(output): 1.0391, norm(x): 1.2084, norm(y): 0.9983, norm:7.2206, tok/sec: 106651.39, flops:111.93, batch-reuse:1
@ 679 train 6.2195 , allloss: 8.9334, dt: 1235.55ms, fracRes: 0.1731, norm(attn): 0.1504, norm(output): 1.0547, norm(x): 1.2272, norm(y): 0.9984, norm:7.9551, tok/sec: 106084.00, flops:111.34, batch-reuse:1
@ 680 train 6.1301 , allloss: 8.7189, dt: 1227.91ms, fracRes: 0.1708, norm(attn): 0.1455, norm(output): 1.0547, norm(x): 1.2265, norm(y): 0.9981, norm:8.1527, tok/sec: 106743.75, flops:112.03, batch-reuse:1
@ 681 train 6.1498 , allloss: 8.6611, dt: 1258.55ms, fracRes: 0.1725, norm(attn): 0.1357, norm(output): 1.0625, norm(x): 1.2433, norm(y): 0.9984, norm:6.8780, tok/sec: 104145.00, flops:109.30, batch-reuse:1
@ 682 train 6.1727 , allloss: 8.7020, dt: 1200.34ms, fracRes: 0.1726, norm(attn): 0.1279, norm(output): 1.0703, norm(x): 1.2588, norm(y): 0.9984, norm:8.3020, tok/sec: 109195.90, flops:114.60, batch-reuse:1
@ 683 train 6.1391 , allloss: 8.4315, dt: 1222.72ms, fracRes: 0.1744, norm(attn): 0.1240, norm(output): 1.0781, norm(x): 1.2760, norm(y): 0.9985, norm:7.4284, tok/sec: 107197.43, flops:112.51, batch-reuse:1
@ 684 train 6.1071 , allloss: 8.5458, dt: 1218.94ms, fracRes: 0.1739, norm(attn): 0.1221, norm(output): 1.1016, norm(x): 1.2885, norm(y): 0.9983, norm:7.9702, tok/sec: 107529.07, flops:112.85, batch-reuse:1
@ 685 train 6.1726 , allloss: 8.6025, dt: 1205.44ms, fracRes: 0.1736, norm(attn): 0.1206, norm(output): 1.1094, norm(x): 1.3028, norm(y): 0.9983, norm:7.9082, tok/sec: 108733.35, flops:114.12, batch-reuse:1
@ 686 train 6.2611 , allloss: 9.4205, dt: 1194.71ms, fracRes: 0.1727, norm(attn): 0.1172, norm(output): 1.1016, norm(x): 1.2923, norm(y): 0.9983, norm:8.0352, tok/sec: 109710.46, flops:115.14, batch-reuse:1
@ 687 train 6.1729 , allloss: 8.7746, dt: 1217.61ms, fracRes: 0.1719, norm(attn): 0.1240, norm(output): 1.0938, norm(x): 1.2997, norm(y): 0.9981, norm:6.9011, tok/sec: 107647.02, flops:112.98, batch-reuse:1
@ 688 train 6.1465 , allloss: 8.6722, dt: 1216.38ms, fracRes: 0.1727, norm(attn): 0.1245, norm(output): 1.1172, norm(x): 1.3091, norm(y): 0.9983, norm:7.6847, tok/sec: 107755.51, flops:113.09, batch-reuse:1
@ 689 train 6.1692 , allloss: 8.6614, dt: 1219.14ms, fracRes: 0.1732, norm(attn): 0.1279, norm(output): 1.1172, norm(x): 1.3236, norm(y): 0.9983, norm:7.8440, tok/sec: 107511.66, flops:112.84, batch-reuse:1
@ 690 train 6.1007 , allloss: 8.4627, dt: 1233.05ms, fracRes: 0.1727, norm(attn): 0.1299, norm(output): 1.1250, norm(x): 1.3429, norm(y): 0.9982, norm:7.0794, tok/sec: 106299.25, flops:111.56, batch-reuse:1
@ 691 train 6.1355 , allloss: 8.5040, dt: 1214.87ms, fracRes: 0.1762, norm(attn): 0.1279, norm(output): 1.1328, norm(x): 1.3388, norm(y): 0.9982, norm:7.6115, tok/sec: 107889.38, flops:113.23, batch-reuse:1
@ 692 train 6.1150 , allloss: 8.4265, dt: 1187.53ms, fracRes: 0.1744, norm(attn): 0.1338, norm(output): 1.1328, norm(x): 1.3491, norm(y): 0.9981, norm:7.5099, tok/sec: 110374.03, flops:115.84, batch-reuse:1
@ 693 train 6.1730 , allloss: 8.7141, dt: 1212.37ms, fracRes: 0.1741, norm(attn): 0.1416, norm(output): 1.1328, norm(x): 1.3637, norm(y): 0.9982, norm:8.5720, tok/sec: 108112.22, flops:113.47, batch-reuse:1
@ 694 train 6.0651 , allloss: 8.4638, dt: 1201.91ms, fracRes: 0.1777, norm(attn): 0.1396, norm(output): 1.1328, norm(x): 1.3648, norm(y): 0.9982, norm:7.9265, tok/sec: 109053.41, flops:114.45, batch-reuse:1
@ 695 train 6.1441 , allloss: 8.5498, dt: 1191.97ms, fracRes: 0.1718, norm(attn): 0.1396, norm(output): 1.1484, norm(x): 1.3714, norm(y): 0.9980, norm:7.8473, tok/sec: 109962.42, flops:115.41, batch-reuse:1
@ 696 train 5.9985 , allloss: 8.3468, dt: 1224.45ms, fracRes: 0.1711, norm(attn): 0.1406, norm(output): 1.1641, norm(x): 1.3852, norm(y): 0.9979, norm:8.2669, tok/sec: 107045.21, flops:112.35, batch-reuse:1
@ 697 train 6.0216 , allloss: 8.4320, dt: 1205.27ms, fracRes: 0.1710, norm(attn): 0.1426, norm(output): 1.1719, norm(x): 1.3865, norm(y): 0.9979, norm:8.4184, tok/sec: 108749.42, flops:114.13, batch-reuse:1
@ 698 train 6.1288 , allloss: 8.4772, dt: 1196.26ms, fracRes: 0.1709, norm(attn): 0.1357, norm(output): 1.1875, norm(x): 1.3987, norm(y): 0.9979, norm:8.0250, tok/sec: 109567.79, flops:114.99, batch-reuse:1
@ 699 train 6.0879 , allloss: 8.3979, dt: 1205.34ms, fracRes: 0.1708, norm(attn): 0.1357, norm(output): 1.1875, norm(x): 1.4009, norm(y): 0.9981, norm:7.2538, tok/sec: 108743.16, flops:114.13, batch-reuse:1
@ 700 train 6.0827 , allloss: 8.5579, dt: 1228.51ms, fracRes: 0.1707, norm(attn): 0.1318, norm(output): 1.1875, norm(x): 1.4092, norm(y): 0.9980, norm:8.7453, tok/sec: 106691.42, flops:111.97, batch-reuse:1
@ 701 train 6.0988 , allloss: 8.7650, dt: 1236.72ms, fracRes: 0.1712, norm(attn): 0.1328, norm(output): 1.2109, norm(x): 1.4180, norm(y): 0.9980, norm:8.1788, tok/sec: 105983.95, flops:111.23, batch-reuse:1
@ 702 train 6.1293 , allloss: 8.4893, dt: 1237.97ms, fracRes: 0.1706, norm(attn): 0.1328, norm(output): 1.2344, norm(x): 1.4384, norm(y): 0.9980, norm:8.8549, tok/sec: 105876.49, flops:111.12, batch-reuse:1
@ 703 train 6.1200 , allloss: 8.6224, dt: 1219.72ms, fracRes: 0.1707, norm(attn): 0.1348, norm(output): 1.2188, norm(x): 1.4210, norm(y): 0.9979, norm:8.7387, tok/sec: 107460.70, flops:112.78, batch-reuse:1
@ 704 train 6.0359 , allloss: 8.4660, dt: 1207.66ms, fracRes: 0.1705, norm(attn): 0.1338, norm(output): 1.2422, norm(x): 1.4424, norm(y): 0.9978, norm:9.1013, tok/sec: 108534.12, flops:113.91, batch-reuse:1
@ 705 train 6.0869 , allloss: 8.5151, dt: 1211.50ms, fracRes: 0.1706, norm(attn): 0.1367, norm(output): 1.2422, norm(x): 1.4482, norm(y): 0.9978, norm:9.7789, tok/sec: 108189.64, flops:113.55, batch-reuse:1
@ 706 train 6.0670 , allloss: 8.4573, dt: 1220.09ms, fracRes: 0.1705, norm(attn): 0.1387, norm(output): 1.2500, norm(x): 1.4534, norm(y): 0.9979, norm:10.4192, tok/sec: 107428.53, flops:112.75, batch-reuse:1
@ 707 train 6.0689 , allloss: 8.4093, dt: 1238.14ms, fracRes: 0.1705, norm(attn): 0.1406, norm(output): 1.2500, norm(x): 1.4572, norm(y): 0.9979, norm:8.5967, tok/sec: 105862.15, flops:111.10, batch-reuse:1
@ 708 train 6.0607 , allloss: 8.6142, dt: 1204.92ms, fracRes: 0.1708, norm(attn): 0.1387, norm(output): 1.2500, norm(x): 1.4598, norm(y): 0.9979, norm:9.9809, tok/sec: 108780.79, flops:114.17, batch-reuse:1
@ 709 train 6.0618 , allloss: 8.5552, dt: 1224.96ms, fracRes: 0.1707, norm(attn): 0.1426, norm(output): 1.2578, norm(x): 1.4642, norm(y): 0.9979, norm:9.9355, tok/sec: 107001.12, flops:112.30, batch-reuse:1
@ 710 train 6.1469 , allloss: 8.7635, dt: 1241.49ms, fracRes: 0.1706, norm(attn): 0.1465, norm(output): 1.2656, norm(x): 1.4674, norm(y): 0.9980, norm:8.4935, tok/sec: 105576.17, flops:110.80, batch-reuse:1
@ 711 train 6.1321 , allloss: 8.8878, dt: 1245.46ms, fracRes: 0.1709, norm(attn): 0.1426, norm(output): 1.2734, norm(x): 1.4724, norm(y): 0.9979, norm:9.9443, tok/sec: 105239.97, flops:110.45, batch-reuse:1
@ 712 train 6.0229 , allloss: 8.5030, dt: 1252.14ms, fracRes: 0.1710, norm(attn): 0.1387, norm(output): 1.3125, norm(x): 1.4874, norm(y): 0.9978, norm:10.2956, tok/sec: 104678.31, flops:109.86, batch-reuse:1
@ 713 train 6.0754 , allloss: 9.0428, dt: 1233.83ms, fracRes: 0.1710, norm(attn): 0.1416, norm(output): 1.3047, norm(x): 1.4904, norm(y): 0.9980, norm:8.8802, tok/sec: 106231.53, flops:111.49, batch-reuse:1
@ 714 train 5.9895 , allloss: 8.6118, dt: 1227.33ms, fracRes: 0.1714, norm(attn): 0.1387, norm(output): 1.3047, norm(x): 1.4850, norm(y): 0.9980, norm:9.1581, tok/sec: 106794.82, flops:112.08, batch-reuse:1
@ 715 train 6.0141 , allloss: 8.6714, dt: 1220.50ms, fracRes: 0.1711, norm(attn): 0.1387, norm(output): 1.3359, norm(x): 1.4941, norm(y): 0.9980, norm:10.0084, tok/sec: 107392.18, flops:112.71, batch-reuse:1
@ 716 train 6.0570 , allloss: 8.6645, dt: 1239.66ms, fracRes: 0.1712, norm(attn): 0.1396, norm(output): 1.3359, norm(x): 1.5022, norm(y): 0.9980, norm:9.7753, tok/sec: 105732.42, flops:110.97, batch-reuse:1
@ 717 train 5.9150 , allloss: 8.5820, dt: 1239.53ms, fracRes: 0.1714, norm(attn): 0.1387, norm(output): 1.3594, norm(x): 1.5043, norm(y): 0.9980, norm:8.6995, tok/sec: 105743.46, flops:110.98, batch-reuse:1
@ 718 train 6.0711 , allloss: 8.7695, dt: 1243.56ms, fracRes: 0.1714, norm(attn): 0.1367, norm(output): 1.3672, norm(x): 1.5192, norm(y): 0.9980, norm:10.4609, tok/sec: 105400.58, flops:110.62, batch-reuse:1
@ 719 train 6.0346 , allloss: 8.6473, dt: 1239.78ms, fracRes: 0.1718, norm(attn): 0.1338, norm(output): 1.3672, norm(x): 1.5173, norm(y): 0.9981, norm:10.9259, tok/sec: 105722.35, flops:110.96, batch-reuse:1
@ 720 train 5.9756 , allloss: 8.7835, dt: 1241.50ms, fracRes: 0.1718, norm(attn): 0.1328, norm(output): 1.3750, norm(x): 1.5334, norm(y): 0.9981, norm:9.1510, tok/sec: 105575.34, flops:110.80, batch-reuse:1
@ 721 train 5.9467 , allloss: 8.7014, dt: 1230.98ms, fracRes: 0.1716, norm(attn): 0.1289, norm(output): 1.3750, norm(x): 1.5443, norm(y): 0.9981, norm:9.5346, tok/sec: 106477.53, flops:111.75, batch-reuse:1
@ 722 train 6.0201 , allloss: 8.7950, dt: 1237.94ms, fracRes: 0.1716, norm(attn): 0.1299, norm(output): 1.3828, norm(x): 1.5513, norm(y): 0.9982, norm:9.2217, tok/sec: 105879.03, flops:111.12, batch-reuse:1
@ 723 train 6.0700 , allloss: 8.9108, dt: 1234.17ms, fracRes: 0.1715, norm(attn): 0.1260, norm(output): 1.3750, norm(x): 1.5560, norm(y): 0.9983, norm:9.4029, tok/sec: 106202.43, flops:111.46, batch-reuse:1
@ 724 train 6.0446 , allloss: 8.9356, dt: 1197.29ms, fracRes: 0.1714, norm(attn): 0.1250, norm(output): 1.3750, norm(x): 1.5615, norm(y): 0.9984, norm:11.3430, tok/sec: 109473.49, flops:114.89, batch-reuse:1
@ 725 train 6.0266 , allloss: 8.7412, dt: 1217.97ms, fracRes: 0.1717, norm(attn): 0.1250, norm(output): 1.3828, norm(x): 1.5607, norm(y): 0.9984, norm:9.0136, tok/sec: 107615.24, flops:112.94, batch-reuse:1
@ 726 train 6.0295 , allloss: 8.9233, dt: 1207.72ms, fracRes: 0.1717, norm(attn): 0.1250, norm(output): 1.3828, norm(x): 1.5611, norm(y): 0.9986, norm:12.8918, tok/sec: 108528.72, flops:113.90, batch-reuse:1
@ 727 train 6.0251 , allloss: 8.9339, dt: 1225.78ms, fracRes: 0.1717, norm(attn): 0.1245, norm(output): 1.3828, norm(x): 1.5624, norm(y): 0.9986, norm:10.4486, tok/sec: 106929.34, flops:112.22, batch-reuse:1
@ 728 train 6.0500 , allloss: 9.3845, dt: 1229.67ms, fracRes: 0.1714, norm(attn): 0.1216, norm(output): 1.3906, norm(x): 1.5754, norm(y): 0.9986, norm:12.6759, tok/sec: 106591.15, flops:111.87, batch-reuse:1
@ 729 train 5.9982 , allloss: 9.3102, dt: 1226.80ms, fracRes: 0.1714, norm(attn): 0.1230, norm(output): 1.3906, norm(x): 1.5777, norm(y): 0.9987, norm:12.1785, tok/sec: 106840.31, flops:112.13, batch-reuse:1
@ 730 train 6.0174 , allloss: 9.1824, dt: 1224.25ms, fracRes: 0.1716, norm(attn): 0.1230, norm(output): 1.3828, norm(x): 1.5749, norm(y): 0.9987, norm:13.0174, tok/sec: 107063.32, flops:112.36, batch-reuse:1
@ 731 train 6.0330 , allloss: 9.2549, dt: 1227.66ms, fracRes: 0.1720, norm(attn): 0.1191, norm(output): 1.3906, norm(x): 1.5802, norm(y): 0.9988, norm:12.6203, tok/sec: 106765.89, flops:112.05, batch-reuse:1
@ 732 train 5.9720 , allloss: 9.0928, dt: 1223.92ms, fracRes: 0.1720, norm(attn): 0.1167, norm(output): 1.4141, norm(x): 1.5944, norm(y): 0.9988, norm:13.0313, tok/sec: 107091.67, flops:112.39, batch-reuse:1
@ 733 train 6.0327 , allloss: 9.6259, dt: 1213.69ms, fracRes: 0.1722, norm(attn): 0.1162, norm(output): 1.4141, norm(x): 1.5955, norm(y): 0.9989, norm:14.7271, tok/sec: 107994.50, flops:113.34, batch-reuse:1
@ 734 train 6.0359 , allloss: 9.3654, dt: 1206.63ms, fracRes: 0.1725, norm(attn): 0.1162, norm(output): 1.3984, norm(x): 1.5891, norm(y): 0.9990, norm:12.1439, tok/sec: 108626.25, flops:114.01, batch-reuse:1
@ 735 train 6.0294 , allloss: 9.2511, dt: 1196.39ms, fracRes: 0.1728, norm(attn): 0.1182, norm(output): 1.4062, norm(x): 1.6027, norm(y): 0.9990, norm:11.9895, tok/sec: 109556.52, flops:114.98, batch-reuse:1
@ 736 train 6.0820 , allloss: 9.2516, dt: 1224.82ms, fracRes: 0.1739, norm(attn): 0.1143, norm(output): 1.4141, norm(x): 1.6168, norm(y): 0.9991, norm:11.8028, tok/sec: 107013.12, flops:112.31, batch-reuse:1
@ 737 train 6.0169 , allloss: 9.1776, dt: 1221.87ms, fracRes: 0.1742, norm(attn): 0.1138, norm(output): 1.4375, norm(x): 1.6219, norm(y): 0.9991, norm:10.9375, tok/sec: 107271.69, flops:112.58, batch-reuse:1
@ 738 train 6.0464 , allloss: 9.2949, dt: 1190.63ms, fracRes: 0.1744, norm(attn): 0.1167, norm(output): 1.4219, norm(x): 1.6227, norm(y): 0.9992, norm:11.4729, tok/sec: 110086.39, flops:115.54, batch-reuse:1
@ 739 train 6.0434 , allloss: 9.2995, dt: 1206.38ms, fracRes: 0.1759, norm(attn): 0.1162, norm(output): 1.4375, norm(x): 1.6229, norm(y): 0.9993, norm:10.6216, tok/sec: 108649.37, flops:114.03, batch-reuse:1
@ 740 train 6.0071 , allloss: 9.4688, dt: 1220.51ms, fracRes: 0.1747, norm(attn): 0.1152, norm(output): 1.4531, norm(x): 1.6415, norm(y): 0.9992, norm:12.8302, tok/sec: 107391.49, flops:112.71, batch-reuse:1
@ 741 train 6.1385 , allloss: 10.0538, dt: 1239.65ms, fracRes: 0.1757, norm(attn): 0.1143, norm(output): 1.4609, norm(x): 1.6477, norm(y): 0.9993, norm:11.8267, tok/sec: 105733.15, flops:110.97, batch-reuse:1
@ 742 train 6.1799 , allloss: 9.8787, dt: 1241.27ms, fracRes: 0.1787, norm(attn): 0.1133, norm(output): 1.4609, norm(x): 1.6476, norm(y): 0.9993, norm:10.3713, tok/sec: 105594.79, flops:110.82, batch-reuse:1
@ 743 train 6.1535 , allloss: 10.1341, dt: 1245.18ms, fracRes: 0.1797, norm(attn): 0.1206, norm(output): 1.4531, norm(x): 1.6487, norm(y): 0.9994, norm:9.2584, tok/sec: 105263.28, flops:110.48, batch-reuse:1
@ 744 train 6.1640 , allloss: 10.0381, dt: 1202.57ms, fracRes: 0.1804, norm(attn): 0.1157, norm(output): 1.4766, norm(x): 1.6749, norm(y): 0.9994, norm:10.8931, tok/sec: 108993.13, flops:114.39, batch-reuse:1
@ 745 train 6.1411 , allloss: 10.2625, dt: 1210.38ms, fracRes: 0.1836, norm(attn): 0.1201, norm(output): 1.4609, norm(x): 1.6399, norm(y): 0.9993, norm:10.8076, tok/sec: 108289.57, flops:113.65, batch-reuse:1
@ 746 train 6.1727 , allloss: 10.0971, dt: 1209.19ms, fracRes: 0.1881, norm(attn): 0.1177, norm(output): 1.4766, norm(x): 1.6512, norm(y): 0.9993, norm:9.3645, tok/sec: 108396.48, flops:113.76, batch-reuse:1
@ 747 train 6.1643 , allloss: 10.4263, dt: 1199.50ms, fracRes: 0.1893, norm(attn): 0.1167, norm(output): 1.4922, norm(x): 1.6725, norm(y): 0.9992, norm:9.7272, tok/sec: 109272.30, flops:114.68, batch-reuse:1
@ 748 train 6.1669 , allloss: 10.2516, dt: 1201.63ms, fracRes: 0.1934, norm(attn): 0.1104, norm(output): 1.4844, norm(x): 1.6783, norm(y): 0.9992, norm:8.3948, tok/sec: 109078.12, flops:114.48, batch-reuse:1
@ 749 train 6.2523 , allloss: 10.3996, dt: 1212.15ms, fracRes: 0.2048, norm(attn): 0.1064, norm(output): 1.4844, norm(x): 1.6977, norm(y): 0.9994, norm:7.9586, tok/sec: 108131.55, flops:113.49, batch-reuse:1
@ 750 train 6.2404 , allloss: 10.3822, dt: 1211.88ms, fracRes: 0.1982, norm(attn): 0.1079, norm(output): 1.4922, norm(x): 1.6798, norm(y): 0.9991, norm:9.0593, tok/sec: 108156.22, flops:113.51, batch-reuse:1
@ 751 train 6.1397 , allloss: 10.2681, dt: 1200.89ms, fracRes: 0.1960, norm(attn): 0.1104, norm(output): 1.4844, norm(x): 1.6914, norm(y): 0.9990, norm:10.4177, tok/sec: 109145.41, flops:114.55, batch-reuse:1
@ 752 train 6.1237 , allloss: 10.0658, dt: 1205.45ms, fracRes: 0.1888, norm(attn): 0.1143, norm(output): 1.5000, norm(x): 1.7122, norm(y): 0.9991, norm:8.2215, tok/sec: 108733.01, flops:114.12, batch-reuse:1
@ 753 train 6.1644 , allloss: 9.9670, dt: 1208.49ms, fracRes: 0.1823, norm(attn): 0.1167, norm(output): 1.4922, norm(x): 1.7039, norm(y): 0.9991, norm:7.8979, tok/sec: 108458.92, flops:113.83, batch-reuse:1
@ 754 train 6.1743 , allloss: 10.3648, dt: 1215.64ms, fracRes: 0.1783, norm(attn): 0.1240, norm(output): 1.4922, norm(x): 1.6975, norm(y): 0.9990, norm:8.0334, tok/sec: 107821.49, flops:113.16, batch-reuse:1
@ 755 train 6.2976 , allloss: 10.4769, dt: 1217.51ms, fracRes: 0.1788, norm(attn): 0.1191, norm(output): 1.5000, norm(x): 1.7164, norm(y): 0.9991, norm:8.3588, tok/sec: 107655.73, flops:112.99, batch-reuse:1
@ 756 train 6.1638 , allloss: 9.9912, dt: 1239.28ms, fracRes: 0.1797, norm(attn): 0.1172, norm(output): 1.5000, norm(x): 1.7080, norm(y): 0.9991, norm:7.6177, tok/sec: 105764.68, flops:111.00, batch-reuse:1
@ 757 train 6.2043 , allloss: 10.1324, dt: 1224.59ms, fracRes: 0.1813, norm(attn): 0.1147, norm(output): 1.5000, norm(x): 1.7106, norm(y): 0.9991, norm:8.8860, tok/sec: 107033.68, flops:112.33, batch-reuse:1
@ 758 train 6.1569 , allloss: 10.3290, dt: 1213.17ms, fracRes: 0.1803, norm(attn): 0.1177, norm(output): 1.5000, norm(x): 1.7103, norm(y): 0.9990, norm:7.8013, tok/sec: 108041.06, flops:113.39, batch-reuse:1
@ 759 train 6.1925 , allloss: 10.1949, dt: 1219.80ms, fracRes: 0.1805, norm(attn): 0.1211, norm(output): 1.5078, norm(x): 1.7279, norm(y): 0.9991, norm:9.2359, tok/sec: 107453.89, flops:112.77, batch-reuse:1
@ 760 train 6.1955 , allloss: 10.4501, dt: 1220.62ms, fracRes: 0.1796, norm(attn): 0.1230, norm(output): 1.5000, norm(x): 1.7278, norm(y): 0.9991, norm:9.2864, tok/sec: 107381.80, flops:112.70, batch-reuse:1
@ 761 train 6.2093 , allloss: 11.0175, dt: 1236.14ms, fracRes: 0.1806, norm(attn): 0.1289, norm(output): 1.4922, norm(x): 1.7184, norm(y): 0.9991, norm:10.0257, tok/sec: 106032.93, flops:111.28, batch-reuse:1
@ 762 train 6.1776 , allloss: 12.0621, dt: 1269.73ms, fracRes: 0.1796, norm(attn): 0.1328, norm(output): 1.4922, norm(x): 1.7163, norm(y): 0.9991, norm:12.6140, tok/sec: 103227.97, flops:108.34, batch-reuse:1
@ 763 train 6.2207 , allloss: 14.5904, dt: 1239.58ms, fracRes: 0.1797, norm(attn): 0.1406, norm(output): 1.4844, norm(x): 1.7176, norm(y): 0.9991, norm:18.3776, tok/sec: 105739.15, flops:110.98, batch-reuse:1
@ 764 train 6.1857 , allloss: 20.5734, dt: 1201.44ms, fracRes: 0.1796, norm(attn): 0.1504, norm(output): 1.4922, norm(x): 1.7225, norm(y): 0.9991, norm:25.4256, tok/sec: 109095.61, flops:114.50, batch-reuse:1
@ 765 train 6.2220 , allloss: 27.5365, dt: 1217.78ms, fracRes: 0.1808, norm(attn): 0.1523, norm(output): 1.4531, norm(x): 1.6798, norm(y): 0.9991, norm:35.4826, tok/sec: 107632.04, flops:112.96, batch-reuse:1
@ 766 train 6.2832 , allloss: 24.9322, dt: 1230.40ms, fracRes: 0.1811, norm(attn): 0.1475, norm(output): 1.4062, norm(x): 1.6450, norm(y): 0.9990, norm:34.7359, tok/sec: 106527.70, flops:111.80, batch-reuse:1
@ 767 train 6.5735 , allloss: 19.6219, dt: 1237.50ms, fracRes: 0.1832, norm(attn): 0.1562, norm(output): 1.4844, norm(x): 1.7223, norm(y): 0.9992, norm:18.4754, tok/sec: 105916.34, flops:111.16, batch-reuse:1
@ 768 train 6.9798 , allloss: 22.7591, dt: 1237.49ms, fracRes: 0.1851, norm(attn): 0.1572, norm(output): 1.4844, norm(x): 1.7395, norm(y): 0.9988, norm:16.3398, tok/sec: 105917.24, flops:111.16, batch-reuse:1
@ 769 train 6.4947 , allloss: 25.2254, dt: 1241.54ms, fracRes: 0.1920, norm(attn): 0.1572, norm(output): 1.4688, norm(x): 1.7331, norm(y): 0.9989, norm:15.7865, tok/sec: 105571.81, flops:110.80, batch-reuse:1
@ 770 train 6.3789 , allloss: 24.7918, dt: 1238.81ms, fracRes: 0.2074, norm(attn): 0.1533, norm(output): 1.4922, norm(x): 1.8062, norm(y): 0.9986, norm:13.2163, tok/sec: 105805.00, flops:111.04, batch-reuse:1
@ 771 train 6.3590 , allloss: 21.7140, dt: 1230.48ms, fracRes: 0.2395, norm(attn): 0.1494, norm(output): 1.4844, norm(x): 1.8415, norm(y): 0.9985, norm:16.9743, tok/sec: 106521.26, flops:111.80, batch-reuse:1
@ 772 train 6.3809 , allloss: 22.9285, dt: 1237.75ms, fracRes: 0.2148, norm(attn): 0.1514, norm(output): 1.5078, norm(x): 1.8498, norm(y): 0.9984, norm:16.4483, tok/sec: 105895.27, flops:111.14, batch-reuse:1
@ 773 train 6.4128 , allloss: 23.0820, dt: 1195.87ms, fracRes: 0.2237, norm(attn): 0.1406, norm(output): 1.5625, norm(x): 1.9324, norm(y): 0.9985, norm:18.4161, tok/sec: 109603.57, flops:115.03, batch-reuse:1
@ 774 train 6.2455 , allloss: 17.7966, dt: 1206.94ms, fracRes: 0.2369, norm(attn): 0.1338, norm(output): 1.5859, norm(x): 1.9923, norm(y): 0.9984, norm:17.6082, tok/sec: 108598.50, flops:113.98, batch-reuse:1
@ 775 train 6.3513 , allloss: 14.7244, dt: 1219.80ms, fracRes: 0.2498, norm(attn): 0.1348, norm(output): 1.5859, norm(x): 1.9768, norm(y): 0.9985, norm:18.8018, tok/sec: 107453.58, flops:112.77, batch-reuse:1
@ 776 train 6.1834 , allloss: 13.3218, dt: 1218.64ms, fracRes: 0.2517, norm(attn): 0.1328, norm(output): 1.6250, norm(x): 2.0508, norm(y): 0.9984, norm:20.3632, tok/sec: 107555.56, flops:112.88, batch-reuse:1
@ 777 train 6.2348 , allloss: 10.5763, dt: 1206.12ms, fracRes: 0.2650, norm(attn): 0.1318, norm(output): 1.6172, norm(x): 2.0380, norm(y): 0.9983, norm:9.9406, tok/sec: 108672.29, flops:114.05, batch-reuse:1
@ 778 train 6.2862 , allloss: 10.3228, dt: 1221.34ms, fracRes: 0.2598, norm(attn): 0.1367, norm(output): 1.6250, norm(x): 2.0496, norm(y): 0.9985, norm:7.9360, tok/sec: 107318.18, flops:112.63, batch-reuse:1
@ 779 train 6.4453 , allloss: 8.7898, dt: 1194.28ms, fracRes: 0.2754, norm(attn): 0.1338, norm(output): 1.6328, norm(x): 2.1036, norm(y): 0.9981, norm:5.8620, tok/sec: 109749.88, flops:115.18, batch-reuse:1
@ 780 train 6.6742 , allloss: 13.8527, dt: 1198.57ms, fracRes: 0.2582, norm(attn): 0.1270, norm(output): 1.7500, norm(x): 2.2497, norm(y): 0.9980, norm:11.3767, tok/sec: 109356.57, flops:114.77, batch-reuse:1
@ 781 train 6.5538 , allloss: 12.4607, dt: 1239.90ms, fracRes: 0.2557, norm(attn): 0.1396, norm(output): 1.7578, norm(x): 2.2561, norm(y): 0.9980, norm:7.0978, tok/sec: 105711.82, flops:110.95, batch-reuse:1
@ 782 train 6.4699 , allloss: 16.2930, dt: 1233.80ms, fracRes: 0.2446, norm(attn): 0.1553, norm(output): 1.7344, norm(x): 2.1897, norm(y): 0.9975, norm:10.4926, tok/sec: 106234.34, flops:111.49, batch-reuse:1
@ 783 train 6.3734 , allloss: 16.9975, dt: 1206.23ms, fracRes: 0.2262, norm(attn): 0.1553, norm(output): 1.7578, norm(x): 2.2296, norm(y): 0.9974, norm:10.6906, tok/sec: 108662.62, flops:114.04, batch-reuse:1
@ 784 train 6.3880 , allloss: 16.6468, dt: 1208.86ms, fracRes: 0.2402, norm(attn): 0.1445, norm(output): 1.8047, norm(x): 2.3648, norm(y): 0.9970, norm:9.7614, tok/sec: 108426.06, flops:113.80, batch-reuse:1
@ 785 train 6.2898 , allloss: 13.8725, dt: 1219.70ms, fracRes: 0.2533, norm(attn): 0.1436, norm(output): 1.7812, norm(x): 2.4427, norm(y): 0.9967, norm:7.0486, tok/sec: 107462.78, flops:112.78, batch-reuse:1
@ 786 train 6.2620 , allloss: 13.8272, dt: 1235.82ms, fracRes: 0.2528, norm(attn): 0.1514, norm(output): 1.8047, norm(x): 2.5251, norm(y): 0.9964, norm:8.6264, tok/sec: 106061.12, flops:111.31, batch-reuse:1
@ 787 train 6.3610 , allloss: 14.5554, dt: 1236.66ms, fracRes: 0.2495, norm(attn): 0.1562, norm(output): 1.7812, norm(x): 2.5650, norm(y): 0.9963, norm:9.5070, tok/sec: 105988.67, flops:111.24, batch-reuse:1
@ 788 train 6.3610 , allloss: 13.9178, dt: 1214.72ms, fracRes: 0.2501, norm(attn): 0.1533, norm(output): 1.7734, norm(x): 2.6087, norm(y): 0.9961, norm:8.3889, tok/sec: 107902.99, flops:113.25, batch-reuse:1
@ 789 train 6.2514 , allloss: 15.3112, dt: 1205.07ms, fracRes: 0.2495, norm(attn): 0.1582, norm(output): 1.7656, norm(x): 2.6186, norm(y): 0.9960, norm:11.0649, tok/sec: 108767.12, flops:114.15, batch-reuse:1
@ 790 train 6.2417 , allloss: 16.8623, dt: 1216.27ms, fracRes: 0.2466, norm(attn): 0.1582, norm(output): 1.7891, norm(x): 2.6647, norm(y): 0.9959, norm:11.2412, tok/sec: 107765.63, flops:113.10, batch-reuse:1
@ 791 train 6.3728 , allloss: 15.2445, dt: 1239.12ms, fracRes: 0.2522, norm(attn): 0.1543, norm(output): 1.7812, norm(x): 2.7001, norm(y): 0.9955, norm:10.1056, tok/sec: 105778.44, flops:111.02, batch-reuse:1
@ 792 train 6.3012 , allloss: 16.6125, dt: 1220.83ms, fracRes: 0.2518, norm(attn): 0.1543, norm(output): 1.7734, norm(x): 2.6725, norm(y): 0.9955, norm:11.2250, tok/sec: 107362.80, flops:112.68, batch-reuse:1
@ 793 train 6.2804 , allloss: 15.9747, dt: 1217.05ms, fracRes: 0.2547, norm(attn): 0.1504, norm(output): 1.7812, norm(x): 2.6976, norm(y): 0.9956, norm:12.4296, tok/sec: 107696.30, flops:113.03, batch-reuse:1
@ 794 train 6.3131 , allloss: 18.1404, dt: 1241.26ms, fracRes: 0.2541, norm(attn): 0.1553, norm(output): 1.7969, norm(x): 2.7288, norm(y): 0.9956, norm:17.5194, tok/sec: 105595.76, flops:110.82, batch-reuse:1
@ 795 train 6.1889 , allloss: 17.9230, dt: 1248.33ms, fracRes: 0.2508, norm(attn): 0.1602, norm(output): 1.7734, norm(x): 2.6890, norm(y): 0.9956, norm:25.4678, tok/sec: 104998.01, flops:110.20, batch-reuse:1
@ 796 train 6.1732 , allloss: 19.1085, dt: 1222.04ms, fracRes: 0.2511, norm(attn): 0.1641, norm(output): 1.7656, norm(x): 2.6884, norm(y): 0.9955, norm:19.2033, tok/sec: 107257.02, flops:112.57, batch-reuse:1
@ 797 train 6.2797 , allloss: 19.6987, dt: 1200.38ms, fracRes: 0.2487, norm(attn): 0.1582, norm(output): 1.7734, norm(x): 2.6798, norm(y): 0.9957, norm:15.5270, tok/sec: 109191.82, flops:114.60, batch-reuse:1
@ 798 train 6.2378 , allloss: 14.1737, dt: 1194.32ms, fracRes: 0.2592, norm(attn): 0.1514, norm(output): 1.7734, norm(x): 2.7078, norm(y): 0.9957, norm:7.9230, tok/sec: 109746.24, flops:115.18, batch-reuse:1
@ 799 train 6.2299 , allloss: 14.3305, dt: 1202.52ms, fracRes: 0.2597, norm(attn): 0.1533, norm(output): 1.7812, norm(x): 2.6915, norm(y): 0.9958, norm:9.1189, tok/sec: 108997.85, flops:114.40, batch-reuse:1
@ 800 train 6.1469 , allloss: 12.4410, dt: 1232.34ms, fracRes: 0.2592, norm(attn): 0.1543, norm(output): 1.7969, norm(x): 2.6906, norm(y): 0.9959, norm:6.8855, tok/sec: 106360.56, flops:111.63, batch-reuse:1
@ 801 train 6.1729 , allloss: 13.4165, dt: 1213.04ms, fracRes: 0.2557, norm(attn): 0.1553, norm(output): 1.8047, norm(x): 2.6756, norm(y): 0.9961, norm:8.9350, tok/sec: 108052.66, flops:113.40, batch-reuse:1
@ 802 train 6.1763 , allloss: 12.0995, dt: 1205.40ms, fracRes: 0.2548, norm(attn): 0.1582, norm(output): 1.8125, norm(x): 2.6858, norm(y): 0.9961, norm:7.0794, tok/sec: 108737.41, flops:114.12, batch-reuse:1
@ 803 train 6.2252 , allloss: 12.2917, dt: 1207.69ms, fracRes: 0.2491, norm(attn): 0.1621, norm(output): 1.8438, norm(x): 2.6788, norm(y): 0.9962, norm:7.1568, tok/sec: 108530.76, flops:113.91, batch-reuse:1
@ 804 train 6.1357 , allloss: 12.1098, dt: 1229.68ms, fracRes: 0.2525, norm(attn): 0.1553, norm(output): 1.8594, norm(x): 2.6812, norm(y): 0.9963, norm:8.9959, tok/sec: 106590.18, flops:111.87, batch-reuse:1
@ 805 train 6.2137 , allloss: 13.6328, dt: 1221.45ms, fracRes: 0.2562, norm(attn): 0.1475, norm(output): 1.8672, norm(x): 2.7066, norm(y): 0.9964, norm:9.9597, tok/sec: 107308.77, flops:112.62, batch-reuse:1
@ 806 train 6.0972 , allloss: 14.1345, dt: 1240.62ms, fracRes: 0.2561, norm(attn): 0.1455, norm(output): 1.8750, norm(x): 2.6679, norm(y): 0.9964, norm:13.2402, tok/sec: 105650.73, flops:110.88, batch-reuse:1
@ 807 train 6.1370 , allloss: 16.1173, dt: 1232.16ms, fracRes: 0.2561, norm(attn): 0.1455, norm(output): 1.8828, norm(x): 2.6611, norm(y): 0.9965, norm:15.0576, tok/sec: 106375.54, flops:111.64, batch-reuse:1
@ 808 train 6.1439 , allloss: 16.7273, dt: 1208.63ms, fracRes: 0.2548, norm(attn): 0.1475, norm(output): 1.8750, norm(x): 2.6464, norm(y): 0.9965, norm:12.5687, tok/sec: 108446.87, flops:113.82, batch-reuse:1
@ 809 train 6.1448 , allloss: 16.2370, dt: 1216.32ms, fracRes: 0.2541, norm(attn): 0.1484, norm(output): 1.8828, norm(x): 2.6461, norm(y): 0.9967, norm:12.7591, tok/sec: 107760.86, flops:113.10, batch-reuse:1
@ 810 train 6.1631 , allloss: 16.2040, dt: 1245.85ms, fracRes: 0.2516, norm(attn): 0.1504, norm(output): 1.9141, norm(x): 2.6459, norm(y): 0.9967, norm:12.8023, tok/sec: 105207.02, flops:110.42, batch-reuse:1
@ 811 train 6.1501 , allloss: 16.0189, dt: 1238.72ms, fracRes: 0.2534, norm(attn): 0.1494, norm(output): 1.9375, norm(x): 2.6370, norm(y): 0.9968, norm:12.6410, tok/sec: 105812.76, flops:111.05, batch-reuse:1
@ 812 train 6.0395 , allloss: 15.8303, dt: 1232.29ms, fracRes: 0.2545, norm(attn): 0.1475, norm(output): 1.9375, norm(x): 2.6078, norm(y): 0.9968, norm:14.2352, tok/sec: 106364.36, flops:111.63, batch-reuse:1
@ 813 train 6.1975 , allloss: 14.9827, dt: 1233.30ms, fracRes: 0.2562, norm(attn): 0.1475, norm(output): 1.9609, norm(x): 2.6295, norm(y): 0.9969, norm:15.3886, tok/sec: 106277.22, flops:111.54, batch-reuse:1
@ 814 train 6.2182 , allloss: 15.7918, dt: 1222.04ms, fracRes: 0.2579, norm(attn): 0.1465, norm(output): 1.9531, norm(x): 2.6091, norm(y): 0.9971, norm:13.2536, tok/sec: 107256.68, flops:112.57, batch-reuse:1
@ 815 train 6.0679 , allloss: 16.3035, dt: 1231.72ms, fracRes: 0.2567, norm(attn): 0.1465, norm(output): 1.9531, norm(x): 2.5862, norm(y): 0.9971, norm:17.9005, tok/sec: 106414.02, flops:111.68, batch-reuse:1
@ 816 train 6.1382 , allloss: 20.3027, dt: 1242.25ms, fracRes: 0.2543, norm(attn): 0.1543, norm(output): 1.9453, norm(x): 2.5680, norm(y): 0.9972, norm:20.0960, tok/sec: 105511.96, flops:110.74, batch-reuse:1
@ 817 train 6.0892 , allloss: 25.7921, dt: 1248.44ms, fracRes: 0.2529, norm(attn): 0.1592, norm(output): 1.9297, norm(x): 2.5324, norm(y): 0.9973, norm:15.8955, tok/sec: 104988.54, flops:110.19, batch-reuse:1
@ 818 train 6.1094 , allloss: 29.2573, dt: 1241.84ms, fracRes: 0.2527, norm(attn): 0.1660, norm(output): 1.8984, norm(x): 2.4891, norm(y): 0.9971, norm:28.3064, tok/sec: 105546.50, flops:110.77, batch-reuse:1
@ 819 train 6.2829 , allloss: 31.3389, dt: 1209.50ms, fracRes: 0.2397, norm(attn): 0.1719, norm(output): 1.9375, norm(x): 2.4913, norm(y): 0.9970, norm:32.8922, tok/sec: 108368.89, flops:113.74, batch-reuse:1
@ 820 train 6.2790 , allloss: 32.3807, dt: 1188.73ms, fracRes: 0.2475, norm(attn): 0.1680, norm(output): 1.9531, norm(x): 2.5208, norm(y): 0.9970, norm:23.3838, tok/sec: 110262.57, flops:115.72, batch-reuse:1
@ 821 train 6.3206 , allloss: 36.3455, dt: 1210.71ms, fracRes: 0.2276, norm(attn): 0.1895, norm(output): 1.9297, norm(x): 2.4457, norm(y): 0.9971, norm:33.7978, tok/sec: 108260.35, flops:113.62, batch-reuse:1
@ 822 train 6.9384 , allloss: 42.6064, dt: 1201.96ms, fracRes: 0.2067, norm(attn): 0.2559, norm(output): 1.7891, norm(x): 2.0316, norm(y): 0.9983, norm:29.9496, tok/sec: 109048.78, flops:114.45, batch-reuse:1
@ 823 train 6.5377 , allloss: 55.4667, dt: 1205.04ms, fracRes: 0.1825, norm(attn): 0.2412, norm(output): 1.8359, norm(x): 2.1462, norm(y): 0.9976, norm:34.5711, tok/sec: 108770.12, flops:114.16, batch-reuse:1
@ 824 train 6.6087 , allloss: 60.6101, dt: 1220.44ms, fracRes: 0.1552, norm(attn): 0.2441, norm(output): 1.8047, norm(x): 2.0345, norm(y): 0.9977, norm:40.3232, tok/sec: 107397.47, flops:112.72, batch-reuse:1
@ 825 train 6.5848 , allloss: 44.4019, dt: 1220.10ms, fracRes: 0.1532, norm(attn): 0.2539, norm(output): 1.7500, norm(x): 1.9683, norm(y): 0.9980, norm:46.5519, tok/sec: 107427.43, flops:112.75, batch-reuse:1
@ 826 train 6.5014 , allloss: 44.1338, dt: 1215.33ms, fracRes: 0.1218, norm(attn): 0.2988, norm(output): 1.7031, norm(x): 1.8481, norm(y): 0.9983, norm:42.7132, tok/sec: 107849.29, flops:113.19, batch-reuse:1
@ 827 train 6.6847 , allloss: 70.6722, dt: 1196.10ms, fracRes: 0.0713, norm(attn): 0.3301, norm(output): 1.7031, norm(x): 1.8341, norm(y): 0.9981, norm:54.3408, tok/sec: 109582.83, flops:115.01, batch-reuse:1
@ 828 train 6.5051 , allloss: 45.1496, dt: 1209.36ms, fracRes: 0.1064, norm(attn): 0.3438, norm(output): 1.6328, norm(x): 1.6777, norm(y): 0.9989, norm:42.5233, tok/sec: 108381.54, flops:113.75, batch-reuse:1
@ 829 train 6.4648 , allloss: 38.0348, dt: 1213.61ms, fracRes: 0.1406, norm(attn): 0.3105, norm(output): 1.6953, norm(x): 1.8029, norm(y): 0.9985, norm:28.3842, tok/sec: 108001.90, flops:113.35, batch-reuse:1
@ 830 train 6.4542 , allloss: 38.4199, dt: 1210.51ms, fracRes: 0.1551, norm(attn): 0.3105, norm(output): 1.7188, norm(x): 1.8298, norm(y): 0.9979, norm:24.4475, tok/sec: 108278.63, flops:113.64, batch-reuse:1
@ 831 train 6.4276 , allloss: 37.9728, dt: 1231.24ms, fracRes: 0.1710, norm(attn): 0.3008, norm(output): 1.7656, norm(x): 1.9060, norm(y): 0.9980, norm:28.2865, tok/sec: 106455.07, flops:111.73, batch-reuse:1
@ 832 train 6.3941 , allloss: 36.7890, dt: 1237.11ms, fracRes: 0.1852, norm(attn): 0.2773, norm(output): 1.7578, norm(x): 1.9284, norm(y): 0.9977, norm:19.2100, tok/sec: 105949.78, flops:111.20, batch-reuse:1
@ 833 train 6.2312 , allloss: 30.2413, dt: 1205.47ms, fracRes: 0.2197, norm(attn): 0.2207, norm(output): 1.7812, norm(x): 2.0380, norm(y): 0.9973, norm:18.7575, tok/sec: 108730.90, flops:114.12, batch-reuse:1
@ 834 train 6.1897 , allloss: 28.0983, dt: 1222.01ms, fracRes: 0.2441, norm(attn): 0.1885, norm(output): 1.8047, norm(x): 2.0992, norm(y): 0.9969, norm:18.3964, tok/sec: 107259.61, flops:112.57, batch-reuse:1
@ 835 train 6.1112 , allloss: 26.4905, dt: 1243.21ms, fracRes: 0.2405, norm(attn): 0.1885, norm(output): 1.8438, norm(x): 2.1150, norm(y): 0.9970, norm:25.2900, tok/sec: 105430.72, flops:110.65, batch-reuse:1
@ 836 train 6.1574 , allloss: 25.6441, dt: 1214.55ms, fracRes: 0.2472, norm(attn): 0.1895, norm(output): 1.8516, norm(x): 2.1072, norm(y): 0.9970, norm:16.5273, tok/sec: 107917.80, flops:113.26, batch-reuse:1
@ 837 train 6.1315 , allloss: 23.5096, dt: 1201.82ms, fracRes: 0.2516, norm(attn): 0.1904, norm(output): 1.7969, norm(x): 2.0560, norm(y): 0.9970, norm:13.4797, tok/sec: 109061.14, flops:114.46, batch-reuse:1
@ 838 train 6.1224 , allloss: 21.0429, dt: 1225.40ms, fracRes: 0.2550, norm(attn): 0.1875, norm(output): 1.8438, norm(x): 2.0888, norm(y): 0.9969, norm:12.2849, tok/sec: 106962.38, flops:112.26, batch-reuse:1
@ 839 train 6.0055 , allloss: 19.1273, dt: 1252.86ms, fracRes: 0.2511, norm(attn): 0.1885, norm(output): 1.8516, norm(x): 2.0782, norm(y): 0.9968, norm:11.8223, tok/sec: 104617.85, flops:109.80, batch-reuse:1
@ 840 train 6.0912 , allloss: 21.9328, dt: 1208.25ms, fracRes: 0.2503, norm(attn): 0.1787, norm(output): 1.8594, norm(x): 2.1114, norm(y): 0.9968, norm:17.7779, tok/sec: 108480.56, flops:113.85, batch-reuse:1
@ 841 train 6.1508 , allloss: 22.4023, dt: 1215.39ms, fracRes: 0.1776, norm(attn): 0.2041, norm(output): 1.8438, norm(x): 2.1600, norm(y): 0.9967, norm:22.3820, tok/sec: 107843.24, flops:113.18, batch-reuse:1
@ 842 train 6.1853 , allloss: 21.3971, dt: 1198.06ms, fracRes: 0.2511, norm(attn): 0.1826, norm(output): 1.8594, norm(x): 2.0838, norm(y): 0.9969, norm:11.9808, tok/sec: 109403.14, flops:114.82, batch-reuse:1
@ 843 train 6.1413 , allloss: 21.1472, dt: 1220.61ms, fracRes: 0.2515, norm(attn): 0.1826, norm(output): 1.8594, norm(x): 2.1071, norm(y): 0.9967, norm:10.3317, tok/sec: 107382.19, flops:112.70, batch-reuse:1
@ 844 train 6.1732 , allloss: 21.0674, dt: 1218.79ms, fracRes: 0.2529, norm(attn): 0.1758, norm(output): 1.8828, norm(x): 2.1686, norm(y): 0.9967, norm:9.8570, tok/sec: 107543.14, flops:112.87, batch-reuse:1
@ 845 train 6.1532 , allloss: 19.2011, dt: 1225.26ms, fracRes: 0.2537, norm(attn): 0.1729, norm(output): 1.8906, norm(x): 2.2408, norm(y): 0.9970, norm:9.0776, tok/sec: 106974.68, flops:112.27, batch-reuse:1
@ 846 train 6.1073 , allloss: 20.1104, dt: 1212.15ms, fracRes: 0.2547, norm(attn): 0.1621, norm(output): 1.9375, norm(x): 2.3253, norm(y): 0.9974, norm:9.1397, tok/sec: 108131.48, flops:113.49, batch-reuse:1
@ 847 train 6.1583 , allloss: 20.6676, dt: 1218.61ms, fracRes: 0.2564, norm(attn): 0.1592, norm(output): 1.9844, norm(x): 2.3895, norm(y): 0.9978, norm:11.5400, tok/sec: 107558.54, flops:112.88, batch-reuse:1
@ 848 train 6.1438 , allloss: 17.2778, dt: 1218.88ms, fracRes: 0.2557, norm(attn): 0.1602, norm(output): 1.9688, norm(x): 2.4109, norm(y): 0.9983, norm:7.7456, tok/sec: 107534.77, flops:112.86, batch-reuse:1
@ 849 train 6.1040 , allloss: 16.7840, dt: 1194.72ms, fracRes: 0.2491, norm(attn): 0.1670, norm(output): 1.9688, norm(x): 2.4048, norm(y): 0.9986, norm:10.1151, tok/sec: 109709.54, flops:115.14, batch-reuse:1
@ 850 train 6.0607 , allloss: 14.7029, dt: 1208.09ms, fracRes: 0.2552, norm(attn): 0.1660, norm(output): 1.9844, norm(x): 2.4434, norm(y): 0.9989, norm:7.1064, tok/sec: 108495.56, flops:113.87, batch-reuse:1
@ 851 train 6.2771 , allloss: 18.1413, dt: 1212.37ms, fracRes: 0.2538, norm(attn): 0.1582, norm(output): 2.0156, norm(x): 2.4861, norm(y): 0.9989, norm:11.3670, tok/sec: 108112.43, flops:113.47, batch-reuse:1
@ 852 train 6.1809 , allloss: 18.4892, dt: 1199.83ms, fracRes: 0.2468, norm(attn): 0.1631, norm(output): 2.0000, norm(x): 2.4453, norm(y): 0.9992, norm:10.5447, tok/sec: 109241.79, flops:114.65, batch-reuse:1
@ 853 train 6.1155 , allloss: 17.3632, dt: 1210.39ms, fracRes: 0.2510, norm(attn): 0.1592, norm(output): 1.9844, norm(x): 2.4272, norm(y): 0.9996, norm:9.6876, tok/sec: 108288.99, flops:113.65, batch-reuse:1
@ 854 train 6.1121 , allloss: 18.3244, dt: 1199.19ms, fracRes: 0.2497, norm(attn): 0.1621, norm(output): 1.9844, norm(x): 2.4040, norm(y): 0.9996, norm:8.0147, tok/sec: 109300.08, flops:114.71, batch-reuse:1
@ 855 train 6.1424 , allloss: 18.4284, dt: 1221.26ms, fracRes: 0.2411, norm(attn): 0.1709, norm(output): 1.9922, norm(x): 2.3897, norm(y): 0.9996, norm:9.6347, tok/sec: 107325.03, flops:112.64, batch-reuse:1
@ 856 train 6.1120 , allloss: 18.7108, dt: 1195.61ms, fracRes: 0.2425, norm(attn): 0.1709, norm(output): 1.9844, norm(x): 2.4020, norm(y): 1.0001, norm:11.5547, tok/sec: 109628.11, flops:115.06, batch-reuse:1
@ 857 train 6.0925 , allloss: 17.6374, dt: 1207.53ms, fracRes: 0.2465, norm(attn): 0.1709, norm(output): 2.0000, norm(x): 2.4238, norm(y): 1.0001, norm:11.1226, tok/sec: 108545.61, flops:113.92, batch-reuse:1
@ 858 train 6.1506 , allloss: 18.0242, dt: 1219.06ms, fracRes: 0.2531, norm(attn): 0.1660, norm(output): 1.9922, norm(x): 2.4084, norm(y): 1.0002, norm:9.8236, tok/sec: 107519.33, flops:112.84, batch-reuse:1
@ 859 train 6.0877 , allloss: 17.3093, dt: 1228.06ms, fracRes: 0.2583, norm(attn): 0.1602, norm(output): 1.9922, norm(x): 2.4147, norm(y): 1.0006, norm:14.7939, tok/sec: 106730.71, flops:112.02, batch-reuse:1
@ 860 train 6.0914 , allloss: 20.5659, dt: 1229.90ms, fracRes: 0.2554, norm(attn): 0.1660, norm(output): 1.9844, norm(x): 2.3879, norm(y): 1.0006, norm:16.2772, tok/sec: 106570.99, flops:111.85, batch-reuse:1
@ 861 train 6.0991 , allloss: 20.4699, dt: 1184.44ms, fracRes: 0.2503, norm(attn): 0.1699, norm(output): 1.9844, norm(x): 2.3808, norm(y): 1.0007, norm:15.9169, tok/sec: 110661.25, flops:116.14, batch-reuse:1
@ 862 train 6.1353 , allloss: 20.5904, dt: 1213.90ms, fracRes: 0.2529, norm(attn): 0.1699, norm(output): 2.0000, norm(x): 2.4155, norm(y): 1.0006, norm:19.5342, tok/sec: 107975.68, flops:113.32, batch-reuse:1
@ 863 train 6.0912 , allloss: 20.0259, dt: 1221.61ms, fracRes: 0.2540, norm(attn): 0.1650, norm(output): 2.0156, norm(x): 2.4332, norm(y): 1.0007, norm:25.1278, tok/sec: 107294.49, flops:112.61, batch-reuse:1
@ 864 train 6.1018 , allloss: 23.5560, dt: 1241.74ms, fracRes: 0.2522, norm(attn): 0.1650, norm(output): 2.0156, norm(x): 2.4476, norm(y): 1.0008, norm:28.3875, tok/sec: 105555.31, flops:110.78, batch-reuse:1
@ 865 train 6.0287 , allloss: 24.4713, dt: 1233.43ms, fracRes: 0.2478, norm(attn): 0.1611, norm(output): 2.0312, norm(x): 2.4424, norm(y): 1.0010, norm:27.2283, tok/sec: 106266.11, flops:111.53, batch-reuse:1
@ 866 train 6.0057 , allloss: 23.4190, dt: 1238.62ms, fracRes: 0.2514, norm(attn): 0.1582, norm(output): 2.0156, norm(x): 2.4463, norm(y): 1.0010, norm:24.5129, tok/sec: 105820.83, flops:111.06, batch-reuse:1
@ 867 train 6.0731 , allloss: 25.5428, dt: 1252.11ms, fracRes: 0.2506, norm(attn): 0.1572, norm(output): 2.0781, norm(x): 2.4624, norm(y): 1.0006, norm:24.7673, tok/sec: 104680.82, flops:109.86, batch-reuse:1
@ 868 train 6.0512 , allloss: 25.0078, dt: 1230.98ms, fracRes: 0.2493, norm(attn): 0.1543, norm(output): 2.1094, norm(x): 2.4677, norm(y): 1.0008, norm:22.7518, tok/sec: 106477.61, flops:111.75, batch-reuse:1
@ 869 train 6.0698 , allloss: 24.5574, dt: 1222.85ms, fracRes: 0.2501, norm(attn): 0.1523, norm(output): 2.1250, norm(x): 2.4624, norm(y): 1.0006, norm:21.9200, tok/sec: 107185.52, flops:112.49, batch-reuse:1
@ 870 train 6.0452 , allloss: 22.7085, dt: 1231.76ms, fracRes: 0.2492, norm(attn): 0.1533, norm(output): 2.1250, norm(x): 2.4562, norm(y): 1.0006, norm:18.3690, tok/sec: 106410.11, flops:111.68, batch-reuse:1
@ 871 train 6.0686 , allloss: 20.0802, dt: 1233.44ms, fracRes: 0.2511, norm(attn): 0.1523, norm(output): 2.1406, norm(x): 2.4469, norm(y): 1.0004, norm:15.1854, tok/sec: 106265.45, flops:111.53, batch-reuse:1
@ 872 train 6.0138 , allloss: 18.9097, dt: 1215.29ms, fracRes: 0.2502, norm(attn): 0.1523, norm(output): 2.1406, norm(x): 2.4325, norm(y): 1.0004, norm:12.4140, tok/sec: 107852.86, flops:113.19, batch-reuse:1
@ 873 train 6.0661 , allloss: 17.7557, dt: 1235.06ms, fracRes: 0.2561, norm(attn): 0.1543, norm(output): 2.1562, norm(x): 2.4362, norm(y): 1.0004, norm:10.9837, tok/sec: 106126.08, flops:111.38, batch-reuse:1
@ 874 train 6.0268 , allloss: 19.3943, dt: 1234.52ms, fracRes: 0.2490, norm(attn): 0.1543, norm(output): 2.2188, norm(x): 2.4329, norm(y): 1.0002, norm:13.4962, tok/sec: 106172.36, flops:111.43, batch-reuse:1
@ 875 train 6.0348 , allloss: 17.2769, dt: 1204.24ms, fracRes: 0.2535, norm(attn): 0.1514, norm(output): 2.2344, norm(x): 2.4523, norm(y): 1.0004, norm:9.9817, tok/sec: 108841.65, flops:114.23, batch-reuse:1
@ 876 train 6.0358 , allloss: 16.4326, dt: 1222.52ms, fracRes: 0.2549, norm(attn): 0.1475, norm(output): 2.2500, norm(x): 2.4472, norm(y): 1.0005, norm:11.3957, tok/sec: 107214.68, flops:112.52, batch-reuse:1
@ 877 train 6.0571 , allloss: 17.4479, dt: 1245.28ms, fracRes: 0.2584, norm(attn): 0.1406, norm(output): 2.2500, norm(x): 2.4487, norm(y): 1.0002, norm:12.1893, tok/sec: 105255.18, flops:110.47, batch-reuse:1
@ 878 train 6.0278 , allloss: 17.1191, dt: 1244.24ms, fracRes: 0.2518, norm(attn): 0.1455, norm(output): 2.2656, norm(x): 2.4544, norm(y): 1.0003, norm:9.9671, tok/sec: 105343.24, flops:110.56, batch-reuse:1
@ 879 train 5.9484 , allloss: 16.6857, dt: 1241.02ms, fracRes: 0.2569, norm(attn): 0.1465, norm(output): 2.2656, norm(x): 2.4706, norm(y): 1.0003, norm:13.1404, tok/sec: 105615.97, flops:110.85, batch-reuse:1
@ 880 train 6.0756 , allloss: 17.4636, dt: 1241.57ms, fracRes: 0.2485, norm(attn): 0.1514, norm(output): 2.2812, norm(x): 2.4687, norm(y): 1.0002, norm:10.3958, tok/sec: 105569.40, flops:110.80, batch-reuse:1
@ 881 train 5.9626 , allloss: 15.8149, dt: 1248.80ms, fracRes: 0.2511, norm(attn): 0.1465, norm(output): 2.3281, norm(x): 2.4854, norm(y): 1.0004, norm:10.3783, tok/sec: 104958.50, flops:110.16, batch-reuse:1
@ 882 train 5.9633 , allloss: 15.6569, dt: 1246.39ms, fracRes: 0.2565, norm(attn): 0.1416, norm(output): 2.3594, norm(x): 2.4863, norm(y): 1.0005, norm:9.7296, tok/sec: 105161.04, flops:110.37, batch-reuse:1
@ 883 train 5.9353 , allloss: 15.6820, dt: 1240.65ms, fracRes: 0.2576, norm(attn): 0.1387, norm(output): 2.3594, norm(x): 2.4703, norm(y): 1.0005, norm:10.8599, tok/sec: 105647.65, flops:110.88, batch-reuse:1
@ 884 train 5.9219 , allloss: 15.5969, dt: 1211.20ms, fracRes: 0.2594, norm(attn): 0.1406, norm(output): 2.3438, norm(x): 2.4703, norm(y): 1.0005, norm:10.3153, tok/sec: 108216.79, flops:113.58, batch-reuse:1
@ 885 train 5.9594 , allloss: 15.4000, dt: 1213.66ms, fracRes: 0.2554, norm(attn): 0.1426, norm(output): 2.3594, norm(x): 2.4588, norm(y): 1.0003, norm:11.4985, tok/sec: 107997.47, flops:113.35, batch-reuse:1
@ 886 train 6.0304 , allloss: 16.0565, dt: 1217.29ms, fracRes: 0.2532, norm(attn): 0.1455, norm(output): 2.4062, norm(x): 2.4786, norm(y): 1.0005, norm:12.1097, tok/sec: 107675.40, flops:113.01, batch-reuse:1
@ 887 train 5.9683 , allloss: 15.8257, dt: 1197.26ms, fracRes: 0.2563, norm(attn): 0.1426, norm(output): 2.4062, norm(x): 2.4984, norm(y): 1.0006, norm:12.4961, tok/sec: 109476.19, flops:114.90, batch-reuse:1
@ 888 train 5.9609 , allloss: 15.0903, dt: 1194.64ms, fracRes: 0.2565, norm(attn): 0.1445, norm(output): 2.4219, norm(x): 2.5022, norm(y): 1.0007, norm:10.5946, tok/sec: 109716.61, flops:115.15, batch-reuse:1
@ 889 train 6.0067 , allloss: 15.5549, dt: 1217.23ms, fracRes: 0.2580, norm(attn): 0.1396, norm(output): 2.4688, norm(x): 2.5125, norm(y): 1.0007, norm:12.5517, tok/sec: 107680.21, flops:113.01, batch-reuse:1
@ 890 train 6.0369 , allloss: 15.9711, dt: 1223.93ms, fracRes: 0.2575, norm(attn): 0.1436, norm(output): 2.4531, norm(x): 2.5189, norm(y): 1.0006, norm:11.8398, tok/sec: 107090.83, flops:112.39, batch-reuse:1
@ 891 train 5.9671 , allloss: 15.0345, dt: 1220.52ms, fracRes: 0.2545, norm(attn): 0.1455, norm(output): 2.4531, norm(x): 2.5106, norm(y): 1.0006, norm:10.2608, tok/sec: 107389.96, flops:112.71, batch-reuse:1
@ 892 train 5.9175 , allloss: 15.1840, dt: 1226.04ms, fracRes: 0.2587, norm(attn): 0.1396, norm(output): 2.4844, norm(x): 2.5262, norm(y): 1.0008, norm:10.0981, tok/sec: 106906.80, flops:112.20, batch-reuse:1
@ 893 train 5.8464 , allloss: 14.8007, dt: 1245.23ms, fracRes: 0.2565, norm(attn): 0.1396, norm(output): 2.4844, norm(x): 2.5336, norm(y): 1.0009, norm:10.4391, tok/sec: 105259.15, flops:110.47, batch-reuse:1
@ 894 train 5.9655 , allloss: 14.9612, dt: 1248.74ms, fracRes: 0.2539, norm(attn): 0.1426, norm(output): 2.4844, norm(x): 2.5191, norm(y): 1.0009, norm:10.4909, tok/sec: 104963.19, flops:110.16, batch-reuse:1
@ 895 train 5.9540 , allloss: 14.9989, dt: 1247.82ms, fracRes: 0.2546, norm(attn): 0.1445, norm(output): 2.4844, norm(x): 2.5273, norm(y): 1.0007, norm:9.2043, tok/sec: 105040.82, flops:110.24, batch-reuse:1
@ 896 train 5.8535 , allloss: 14.2523, dt: 1241.19ms, fracRes: 0.2559, norm(attn): 0.1426, norm(output): 2.4844, norm(x): 2.5082, norm(y): 1.0009, norm:9.6270, tok/sec: 105601.50, flops:110.83, batch-reuse:1
@ 897 train 5.9931 , allloss: 15.2409, dt: 1244.89ms, fracRes: 0.2574, norm(attn): 0.1436, norm(output): 2.5000, norm(x): 2.5232, norm(y): 1.0010, norm:10.6222, tok/sec: 105287.96, flops:110.50, batch-reuse:1
@ 898 train 5.9782 , allloss: 13.6939, dt: 1225.12ms, fracRes: 0.2602, norm(attn): 0.1406, norm(output): 2.5000, norm(x): 2.5075, norm(y): 1.0010, norm:8.2635, tok/sec: 106987.29, flops:112.29, batch-reuse:1
@ 899 train 5.9608 , allloss: 13.8068, dt: 1216.46ms, fracRes: 0.2575, norm(attn): 0.1426, norm(output): 2.5156, norm(x): 2.5145, norm(y): 1.0010, norm:13.8057, tok/sec: 107748.61, flops:113.08, batch-reuse:1
@ 900 train 6.0063 , allloss: 13.1568, dt: 1210.99ms, fracRes: 0.2604, norm(attn): 0.1426, norm(output): 2.5156, norm(x): 2.5326, norm(y): 1.0011, norm:9.9658, tok/sec: 108235.63, flops:113.60, batch-reuse:1
@ 901 train 5.9327 , allloss: 12.9256, dt: 1202.91ms, fracRes: 0.2621, norm(attn): 0.1426, norm(output): 2.5625, norm(x): 2.5561, norm(y): 1.0013, norm:9.1518, tok/sec: 108962.20, flops:114.36, batch-reuse:1
@ 902 train 5.9289 , allloss: 13.5739, dt: 1212.82ms, fracRes: 0.2567, norm(attn): 0.1475, norm(output): 2.5781, norm(x): 2.5587, norm(y): 1.0012, norm:9.8275, tok/sec: 108072.54, flops:113.42, batch-reuse:1
@ 903 train 5.9169 , allloss: 12.4923, dt: 1216.30ms, fracRes: 0.2574, norm(attn): 0.1436, norm(output): 2.5625, norm(x): 2.5568, norm(y): 1.0012, norm:7.7426, tok/sec: 107762.65, flops:113.10, batch-reuse:1
@ 904 train 5.8957 , allloss: 12.9918, dt: 1223.78ms, fracRes: 0.2602, norm(attn): 0.1436, norm(output): 2.6250, norm(x): 2.5770, norm(y): 1.0013, norm:10.1512, tok/sec: 107103.95, flops:112.41, batch-reuse:1
@ 905 train 5.9608 , allloss: 13.2312, dt: 1210.43ms, fracRes: 0.2641, norm(attn): 0.1406, norm(output): 2.6094, norm(x): 2.5746, norm(y): 1.0012, norm:8.2423, tok/sec: 108285.32, flops:113.65, batch-reuse:1
@ 906 train 5.9471 , allloss: 13.7446, dt: 1209.84ms, fracRes: 0.2597, norm(attn): 0.1396, norm(output): 2.6562, norm(x): 2.6081, norm(y): 1.0014, norm:8.3205, tok/sec: 108338.42, flops:113.70, batch-reuse:1
@ 907 train 5.7851 , allloss: 13.5029, dt: 1192.87ms, fracRes: 0.2565, norm(attn): 0.1465, norm(output): 2.6562, norm(x): 2.6073, norm(y): 1.0016, norm:7.8166, tok/sec: 109879.17, flops:115.32, batch-reuse:1
@ 908 train 5.9537 , allloss: 12.7197, dt: 1216.09ms, fracRes: 0.2606, norm(attn): 0.1426, norm(output): 2.6406, norm(x): 2.6261, norm(y): 1.0016, norm:8.0417, tok/sec: 107781.20, flops:113.12, batch-reuse:1
@ 909 train 6.1366 , allloss: 13.5142, dt: 1211.30ms, fracRes: 0.2605, norm(attn): 0.1455, norm(output): 2.6406, norm(x): 2.6818, norm(y): 1.0012, norm:8.5630, tok/sec: 108207.85, flops:113.57, batch-reuse:1
@ 910 train 5.9677 , allloss: 12.2432, dt: 1210.01ms, fracRes: 0.2599, norm(attn): 0.1416, norm(output): 2.6719, norm(x): 2.6634, norm(y): 1.0016, norm:7.7025, tok/sec: 108323.49, flops:113.69, batch-reuse:1
@ 911 train 6.0991 , allloss: 12.7779, dt: 1226.02ms, fracRes: 0.2576, norm(attn): 0.1436, norm(output): 2.6875, norm(x): 2.6814, norm(y): 1.0012, norm:8.0259, tok/sec: 106908.52, flops:112.20, batch-reuse:1
@ 912 train 5.9929 , allloss: 11.0582, dt: 1241.28ms, fracRes: 0.2604, norm(attn): 0.1406, norm(output): 2.6562, norm(x): 2.6769, norm(y): 1.0011, norm:6.5557, tok/sec: 105593.87, flops:110.82, batch-reuse:1
@ 913 train 5.9636 , allloss: 11.1694, dt: 1249.90ms, fracRes: 0.2614, norm(attn): 0.1377, norm(output): 2.6406, norm(x): 2.6744, norm(y): 1.0012, norm:6.9120, tok/sec: 104866.28, flops:110.06, batch-reuse:1
@ 914 train 5.9877 , allloss: 11.3288, dt: 1213.43ms, fracRes: 0.2620, norm(attn): 0.1348, norm(output): 2.6562, norm(x): 2.6910, norm(y): 1.0010, norm:6.1211, tok/sec: 108017.94, flops:113.37, batch-reuse:1
@ 915 train 6.0133 , allloss: 12.4812, dt: 1218.07ms, fracRes: 0.2604, norm(attn): 0.1406, norm(output): 2.6094, norm(x): 2.6444, norm(y): 1.0010, norm:7.3290, tok/sec: 107606.27, flops:112.93, batch-reuse:1
@ 916 train 5.9014 , allloss: 11.4868, dt: 1215.52ms, fracRes: 0.2628, norm(attn): 0.1436, norm(output): 2.5938, norm(x): 2.6254, norm(y): 1.0010, norm:6.3119, tok/sec: 107831.67, flops:113.17, batch-reuse:1
@ 917 train 5.9526 , allloss: 11.9479, dt: 1208.78ms, fracRes: 0.2655, norm(attn): 0.1484, norm(output): 2.5781, norm(x): 2.6228, norm(y): 1.0008, norm:7.4232, tok/sec: 108432.93, flops:113.80, batch-reuse:1
@ 918 train 5.9927 , allloss: 11.5808, dt: 1222.54ms, fracRes: 0.2663, norm(attn): 0.1465, norm(output): 2.5938, norm(x): 2.6211, norm(y): 1.0007, norm:7.2424, tok/sec: 107213.03, flops:112.52, batch-reuse:1
@ 919 train 5.9376 , allloss: 10.8461, dt: 1213.60ms, fracRes: 0.2679, norm(attn): 0.1455, norm(output): 2.5938, norm(x): 2.6169, norm(y): 1.0008, norm:6.1997, tok/sec: 108002.77, flops:113.35, batch-reuse:1
@ 920 train 5.9983 , allloss: 10.6282, dt: 1213.35ms, fracRes: 0.2674, norm(attn): 0.1455, norm(output): 2.5781, norm(x): 2.6101, norm(y): 1.0006, norm:5.7887, tok/sec: 108024.65, flops:113.37, batch-reuse:1
@ 921 train 6.0506 , allloss: 10.7937, dt: 1217.95ms, fracRes: 0.2646, norm(attn): 0.1484, norm(output): 2.5625, norm(x): 2.5836, norm(y): 1.0004, norm:7.4407, tok/sec: 107616.78, flops:112.95, batch-reuse:1
@ 922 train 5.9626 , allloss: 10.6364, dt: 1218.10ms, fracRes: 0.2641, norm(attn): 0.1455, norm(output): 2.5625, norm(x): 2.5899, norm(y): 1.0004, norm:6.0331, tok/sec: 107603.47, flops:112.93, batch-reuse:1
@ 923 train 5.9585 , allloss: 9.9106, dt: 1220.20ms, fracRes: 0.2621, norm(attn): 0.1484, norm(output): 2.5625, norm(x): 2.5867, norm(y): 1.0005, norm:6.9067, tok/sec: 107418.87, flops:112.74, batch-reuse:1
@ 924 train 5.9242 , allloss: 9.4784, dt: 1217.02ms, fracRes: 0.2619, norm(attn): 0.1494, norm(output): 2.5312, norm(x): 2.5603, norm(y): 1.0005, norm:5.9255, tok/sec: 107698.71, flops:113.03, batch-reuse:1
@ 925 train 5.9680 , allloss: 9.3674, dt: 1224.34ms, fracRes: 0.2637, norm(attn): 0.1465, norm(output): 2.5312, norm(x): 2.5667, norm(y): 1.0003, norm:5.4205, tok/sec: 107055.00, flops:112.36, batch-reuse:1
@ 926 train 5.9392 , allloss: 9.3968, dt: 1196.34ms, fracRes: 0.2675, norm(attn): 0.1436, norm(output): 2.5156, norm(x): 2.5631, norm(y): 1.0003, norm:5.1650, tok/sec: 109560.97, flops:114.99, batch-reuse:1
@ 927 train 5.8628 , allloss: 8.7807, dt: 1211.90ms, fracRes: 0.2717, norm(attn): 0.1475, norm(output): 2.5469, norm(x): 2.5728, norm(y): 1.0002, norm:5.5517, tok/sec: 108153.97, flops:113.51, batch-reuse:1
@ 928 train 6.1002 , allloss: 9.1111, dt: 1219.46ms, fracRes: 0.2732, norm(attn): 0.1416, norm(output): 2.5312, norm(x): 2.5634, norm(y): 1.0003, norm:5.6323, tok/sec: 107483.41, flops:112.81, batch-reuse:1
@ 929 train 6.1449 , allloss: 9.3605, dt: 1229.75ms, fracRes: 0.2681, norm(attn): 0.1465, norm(output): 2.5625, norm(x): 2.5971, norm(y): 1.0000, norm:5.0963, tok/sec: 106583.84, flops:111.86, batch-reuse:1
@ 930 train 6.0769 , allloss: 8.9890, dt: 1229.25ms, fracRes: 0.2610, norm(attn): 0.1484, norm(output): 2.5938, norm(x): 2.6313, norm(y): 1.0002, norm:5.4991, tok/sec: 106627.29, flops:111.91, batch-reuse:1
@ 931 train 6.2029 , allloss: 9.1357, dt: 1226.91ms, fracRes: 0.2632, norm(attn): 0.1465, norm(output): 2.5469, norm(x): 2.6039, norm(y): 1.0002, norm:4.8010, tok/sec: 106831.30, flops:112.12, batch-reuse:1
@ 932 train 6.1482 , allloss: 8.7481, dt: 1208.01ms, fracRes: 0.2659, norm(attn): 0.1436, norm(output): 2.5781, norm(x): 2.6200, norm(y): 1.0000, norm:4.8657, tok/sec: 108502.25, flops:113.88, batch-reuse:1
@ 933 train 6.1343 , allloss: 9.0436, dt: 1194.75ms, fracRes: 0.2693, norm(attn): 0.1367, norm(output): 2.5938, norm(x): 2.6359, norm(y): 1.0001, norm:4.5641, tok/sec: 109706.65, flops:115.14, batch-reuse:1
@ 934 train 6.1187 , allloss: 8.6881, dt: 1201.62ms, fracRes: 0.2712, norm(attn): 0.1328, norm(output): 2.6094, norm(x): 2.6350, norm(y): 1.0003, norm:4.5807, tok/sec: 109079.81, flops:114.48, batch-reuse:1
@ 935 train 6.0708 , allloss: 8.9650, dt: 1220.63ms, fracRes: 0.2677, norm(attn): 0.1367, norm(output): 2.6094, norm(x): 2.6170, norm(y): 1.0001, norm:4.4442, tok/sec: 107380.75, flops:112.70, batch-reuse:1
@ 936 train 6.0937 , allloss: 8.7970, dt: 1239.75ms, fracRes: 0.2660, norm(attn): 0.1396, norm(output): 2.5938, norm(x): 2.6048, norm(y): 0.9999, norm:5.3855, tok/sec: 105724.45, flops:110.96, batch-reuse:1
@ 937 train 6.1369 , allloss: 8.9975, dt: 1241.65ms, fracRes: 0.2687, norm(attn): 0.1377, norm(output): 2.6094, norm(x): 2.6160, norm(y): 1.0000, norm:5.4726, tok/sec: 105563.14, flops:110.79, batch-reuse:1
@ 938 train 6.0570 , allloss: 8.8377, dt: 1218.56ms, fracRes: 0.2726, norm(attn): 0.1387, norm(output): 2.5938, norm(x): 2.5989, norm(y): 1.0000, norm:4.8154, tok/sec: 107563.24, flops:112.89, batch-reuse:1
@ 939 train 6.1162 , allloss: 10.0244, dt: 1196.55ms, fracRes: 0.2694, norm(attn): 0.1406, norm(output): 2.5625, norm(x): 2.5885, norm(y): 0.9999, norm:4.7423, tok/sec: 109541.15, flops:114.97, batch-reuse:1
@ 940 train 6.1136 , allloss: 9.0450, dt: 1199.13ms, fracRes: 0.2727, norm(attn): 0.1396, norm(output): 2.5938, norm(x): 2.6214, norm(y): 0.9998, norm:5.0535, tok/sec: 109306.36, flops:114.72, batch-reuse:1
@ 941 train 6.0906 , allloss: 8.8968, dt: 1218.66ms, fracRes: 0.2721, norm(attn): 0.1406, norm(output): 2.6250, norm(x): 2.6564, norm(y): 0.9997, norm:5.1100, tok/sec: 107554.19, flops:112.88, batch-reuse:1
@ 942 train 6.1141 , allloss: 8.6416, dt: 1219.45ms, fracRes: 0.2663, norm(attn): 0.1484, norm(output): 2.6250, norm(x): 2.6564, norm(y): 0.9999, norm:4.5024, tok/sec: 107484.40, flops:112.81, batch-reuse:1
@ 943 train 6.0460 , allloss: 9.0102, dt: 1226.38ms, fracRes: 0.2696, norm(attn): 0.1484, norm(output): 2.6094, norm(x): 2.6566, norm(y): 0.9998, norm:4.9177, tok/sec: 106877.29, flops:112.17, batch-reuse:1
@ 944 train 6.0845 , allloss: 8.7430, dt: 1208.34ms, fracRes: 0.2718, norm(attn): 0.1475, norm(output): 2.6094, norm(x): 2.6334, norm(y): 0.9997, norm:4.7761, tok/sec: 108473.15, flops:113.84, batch-reuse:1
@ 945 train 6.1828 , allloss: 9.0132, dt: 1209.11ms, fracRes: 0.2707, norm(attn): 0.1475, norm(output): 2.6250, norm(x): 2.6679, norm(y): 0.9993, norm:4.8891, tok/sec: 108403.46, flops:113.77, batch-reuse:1
@ 946 train 6.1014 , allloss: 9.0206, dt: 1192.54ms, fracRes: 0.2730, norm(attn): 0.1475, norm(output): 2.5938, norm(x): 2.6672, norm(y): 0.9995, norm:5.0431, tok/sec: 109909.68, flops:115.35, batch-reuse:1
@ 947 train 6.1061 , allloss: 9.1492, dt: 1199.68ms, fracRes: 0.2661, norm(attn): 0.1523, norm(output): 2.5938, norm(x): 2.6777, norm(y): 0.9995, norm:5.0508, tok/sec: 109255.40, flops:114.67, batch-reuse:1
@ 948 train 6.0998 , allloss: 8.9499, dt: 1208.58ms, fracRes: 0.2651, norm(attn): 0.1562, norm(output): 2.5938, norm(x): 2.6620, norm(y): 0.9993, norm:4.2189, tok/sec: 108451.15, flops:113.82, batch-reuse:1
@ 949 train 6.1646 , allloss: 8.8725, dt: 1218.46ms, fracRes: 0.2663, norm(attn): 0.1504, norm(output): 2.6250, norm(x): 2.7094, norm(y): 0.9993, norm:4.7991, tok/sec: 107572.10, flops:112.90, batch-reuse:1
@ 950 train 6.1008 , allloss: 8.8023, dt: 1218.57ms, fracRes: 0.2709, norm(attn): 0.1426, norm(output): 2.5938, norm(x): 2.6880, norm(y): 0.9993, norm:4.6215, tok/sec: 107562.40, flops:112.89, batch-reuse:1
@ 951 train 6.1320 , allloss: 8.5559, dt: 1219.52ms, fracRes: 0.2686, norm(attn): 0.1426, norm(output): 2.6094, norm(x): 2.7180, norm(y): 0.9990, norm:4.5383, tok/sec: 107478.24, flops:112.80, batch-reuse:1
@ 952 train 6.0430 , allloss: 8.6996, dt: 1201.09ms, fracRes: 0.2675, norm(attn): 0.1465, norm(output): 2.6250, norm(x): 2.7304, norm(y): 0.9990, norm:4.3758, tok/sec: 109127.90, flops:114.53, batch-reuse:1
@ 953 train 6.0631 , allloss: 8.4505, dt: 1214.12ms, fracRes: 0.2713, norm(attn): 0.1426, norm(output): 2.5938, norm(x): 2.7219, norm(y): 0.9990, norm:5.3074, tok/sec: 107956.13, flops:113.30, batch-reuse:1
@ 954 train 5.9994 , allloss: 8.5901, dt: 1220.62ms, fracRes: 0.2689, norm(attn): 0.1426, norm(output): 2.6406, norm(x): 2.7582, norm(y): 0.9992, norm:4.8892, tok/sec: 107381.40, flops:112.70, batch-reuse:1
@ 955 train 6.0821 , allloss: 8.5846, dt: 1239.09ms, fracRes: 0.2699, norm(attn): 0.1406, norm(output): 2.6562, norm(x): 2.7681, norm(y): 0.9991, norm:3.9905, tok/sec: 105780.47, flops:111.02, batch-reuse:1
@ 956 train 6.0293 , allloss: 8.6772, dt: 1217.61ms, fracRes: 0.2683, norm(attn): 0.1416, norm(output): 2.6406, norm(x): 2.7653, norm(y): 0.9991, norm:4.3858, tok/sec: 107647.13, flops:112.98, batch-reuse:1
@ 957 train 6.0543 , allloss: 8.5380, dt: 1217.52ms, fracRes: 0.2730, norm(attn): 0.1426, norm(output): 2.6562, norm(x): 2.7705, norm(y): 0.9991, norm:4.2268, tok/sec: 107654.53, flops:112.99, batch-reuse:1
@ 958 train 6.0792 , allloss: 8.5683, dt: 1234.22ms, fracRes: 0.2670, norm(attn): 0.1465, norm(output): 2.6562, norm(x): 2.7644, norm(y): 0.9990, norm:5.5928, tok/sec: 106198.08, flops:111.46, batch-reuse:1
@ 959 train 5.9697 , allloss: 8.7435, dt: 1228.07ms, fracRes: 0.2641, norm(attn): 0.1494, norm(output): 2.7188, norm(x): 2.8366, norm(y): 0.9990, norm:6.0835, tok/sec: 106730.46, flops:112.02, batch-reuse:1
@ 960 train 6.0874 , allloss: 8.7867, dt: 1225.99ms, fracRes: 0.2664, norm(attn): 0.1445, norm(output): 2.7344, norm(x): 2.8505, norm(y): 0.9989, norm:5.6223, tok/sec: 106911.29, flops:112.21, batch-reuse:1
@ 961 train 6.0204 , allloss: 8.7064, dt: 1197.14ms, fracRes: 0.2727, norm(attn): 0.1406, norm(output): 2.7031, norm(x): 2.8588, norm(y): 0.9988, norm:5.6011, tok/sec: 109487.37, flops:114.91, batch-reuse:1
@ 962 train 6.0446 , allloss: 9.7226, dt: 1214.26ms, fracRes: 0.2723, norm(attn): 0.1396, norm(output): 2.7188, norm(x): 2.8620, norm(y): 0.9988, norm:5.8465, tok/sec: 107944.28, flops:113.29, batch-reuse:1
@ 963 train 6.0646 , allloss: 8.4638, dt: 1211.12ms, fracRes: 0.2734, norm(attn): 0.1367, norm(output): 2.7031, norm(x): 2.8578, norm(y): 0.9985, norm:4.4764, tok/sec: 108223.44, flops:113.58, batch-reuse:1
@ 964 train 6.0543 , allloss: 8.4622, dt: 1212.91ms, fracRes: 0.2735, norm(attn): 0.1367, norm(output): 2.7344, norm(x): 2.8982, norm(y): 0.9985, norm:4.5025, tok/sec: 108064.49, flops:113.42, batch-reuse:1
@ 965 train 6.0541 , allloss: 8.2703, dt: 1204.00ms, fracRes: 0.2698, norm(attn): 0.1387, norm(output): 2.7500, norm(x): 2.9358, norm(y): 0.9988, norm:4.4579, tok/sec: 108864.07, flops:114.25, batch-reuse:1
@ 966 train 6.0257 , allloss: 8.3266, dt: 1217.85ms, fracRes: 0.2721, norm(attn): 0.1377, norm(output): 2.7500, norm(x): 2.9429, norm(y): 0.9990, norm:4.0498, tok/sec: 107625.36, flops:112.95, batch-reuse:1
@ 967 train 6.0159 , allloss: 8.8060, dt: 1199.46ms, fracRes: 0.2689, norm(attn): 0.1455, norm(output): 2.8125, norm(x): 3.0273, norm(y): 0.9991, norm:5.3322, tok/sec: 109276.08, flops:114.69, batch-reuse:1
@ 968 train 6.1341 , allloss: 8.7326, dt: 1219.17ms, fracRes: 0.2663, norm(attn): 0.1406, norm(output): 2.7812, norm(x): 3.0146, norm(y): 0.9992, norm:5.5083, tok/sec: 107509.28, flops:112.83, batch-reuse:1
@ 969 train 5.9989 , allloss: 8.3178, dt: 1208.79ms, fracRes: 0.2667, norm(attn): 0.1445, norm(output): 2.7656, norm(x): 2.9873, norm(y): 0.9990, norm:4.9833, tok/sec: 108432.24, flops:113.80, batch-reuse:1
@ 970 train 6.0419 , allloss: 8.2304, dt: 1239.99ms, fracRes: 0.2683, norm(attn): 0.1406, norm(output): 2.7656, norm(x): 3.0040, norm(y): 0.9990, norm:4.6863, tok/sec: 105704.08, flops:110.94, batch-reuse:1
@ 971 train 6.0634 , allloss: 8.6276, dt: 1237.07ms, fracRes: 0.2706, norm(attn): 0.1396, norm(output): 2.7969, norm(x): 3.0374, norm(y): 0.9990, norm:4.6615, tok/sec: 105953.94, flops:111.20, batch-reuse:1
@ 972 train 6.0747 , allloss: 8.4842, dt: 1222.35ms, fracRes: 0.2787, norm(attn): 0.1348, norm(output): 2.7969, norm(x): 3.0329, norm(y): 0.9989, norm:4.5993, tok/sec: 107229.53, flops:112.54, batch-reuse:1
@ 973 train 6.0909 , allloss: 8.3665, dt: 1215.00ms, fracRes: 0.2801, norm(attn): 0.1270, norm(output): 2.8125, norm(x): 3.0403, norm(y): 0.9991, norm:4.4526, tok/sec: 107878.28, flops:113.22, batch-reuse:1
@ 974 train 6.0593 , allloss: 8.2850, dt: 1211.15ms, fracRes: 0.2702, norm(attn): 0.1328, norm(output): 2.7969, norm(x): 3.0419, norm(y): 0.9988, norm:3.6729, tok/sec: 108221.37, flops:113.58, batch-reuse:1
@ 975 train 6.0996 , allloss: 8.2882, dt: 1212.70ms, fracRes: 0.2735, norm(attn): 0.1309, norm(output): 2.7969, norm(x): 3.0333, norm(y): 0.9988, norm:4.4536, tok/sec: 108082.76, flops:113.43, batch-reuse:1
@ 976 train 6.0055 , allloss: 8.2974, dt: 1194.18ms, fracRes: 0.2698, norm(attn): 0.1348, norm(output): 2.7969, norm(x): 3.0428, norm(y): 0.9989, norm:4.5011, tok/sec: 109758.62, flops:115.19, batch-reuse:1
@ 977 train 6.0081 , allloss: 8.6068, dt: 1203.76ms, fracRes: 0.2656, norm(attn): 0.1396, norm(output): 2.8281, norm(x): 3.0566, norm(y): 0.9989, norm:5.6817, tok/sec: 108885.09, flops:114.28, batch-reuse:1
@ 978 train 6.0247 , allloss: 11.1113, dt: 1215.41ms, fracRes: 0.2726, norm(attn): 0.1348, norm(output): 2.8281, norm(x): 3.0542, norm(y): 0.9987, norm:15.2706, tok/sec: 107841.74, flops:113.18, batch-reuse:1
@ 979 train 6.0261 , allloss: 27.3154, dt: 1218.08ms, fracRes: 0.2853, norm(attn): 0.1338, norm(output): 2.8438, norm(x): 3.0512, norm(y): 0.9987, norm:41.0729, tok/sec: 107605.74, flops:112.93, batch-reuse:1
@ 980 train 5.9952 , allloss: 31.0429, dt: 1205.42ms, fracRes: 0.2887, norm(attn): 0.1357, norm(output): 2.8125, norm(x): 3.0361, norm(y): 0.9986, norm:44.5051, tok/sec: 108735.56, flops:114.12, batch-reuse:1
@ 981 train 6.0229 , allloss: 18.1165, dt: 1213.01ms, fracRes: 0.2831, norm(attn): 0.1396, norm(output): 2.7969, norm(x): 3.0522, norm(y): 0.9986, norm:29.7088, tok/sec: 108055.27, flops:113.41, batch-reuse:1
@ 982 train 6.0440 , allloss: 12.2745, dt: 1209.45ms, fracRes: 0.2732, norm(attn): 0.1396, norm(output): 2.7500, norm(x): 3.0017, norm(y): 0.9989, norm:14.7426, tok/sec: 108372.99, flops:113.74, batch-reuse:1
@ 983 train 6.0906 , allloss: 12.7289, dt: 1212.70ms, fracRes: 0.2672, norm(attn): 0.1484, norm(output): 2.7188, norm(x): 2.9777, norm(y): 0.9989, norm:16.1886, tok/sec: 108082.67, flops:113.43, batch-reuse:1
@ 984 train 6.0462 , allloss: 16.3922, dt: 1198.47ms, fracRes: 0.2668, norm(attn): 0.1562, norm(output): 2.7344, norm(x): 2.9793, norm(y): 0.9994, norm:27.9663, tok/sec: 109365.84, flops:114.78, batch-reuse:1
@ 985 train 6.1070 , allloss: 29.9592, dt: 1206.17ms, fracRes: 0.2674, norm(attn): 0.1738, norm(output): 2.7031, norm(x): 2.9688, norm(y): 0.9997, norm:71.6903, tok/sec: 108668.38, flops:114.05, batch-reuse:1
@ 986 train 6.3619 , allloss: 33.5772, dt: 1218.36ms, fracRes: 0.2698, norm(attn): 0.1895, norm(output): 2.6562, norm(x): 2.9478, norm(y): 1.0000, norm:53.6450, tok/sec: 107581.09, flops:112.91, batch-reuse:1
@ 987 train 6.2376 , allloss: 28.6565, dt: 1210.39ms, fracRes: 0.2752, norm(attn): 0.1816, norm(output): 2.6875, norm(x): 2.9751, norm(y): 0.9999, norm:28.3819, tok/sec: 108288.99, flops:113.65, batch-reuse:1
@ 988 train 6.3202 , allloss: 37.1208, dt: 1214.16ms, fracRes: 0.2765, norm(attn): 0.1699, norm(output): 2.7500, norm(x): 3.0653, norm(y): 0.9995, norm:39.0339, tok/sec: 107952.74, flops:113.30, batch-reuse:1
@ 989 train 6.2635 , allloss: 31.8592, dt: 1218.81ms, fracRes: 0.2827, norm(attn): 0.1553, norm(output): 2.7500, norm(x): 3.0640, norm(y): 0.9998, norm:37.5132, tok/sec: 107540.91, flops:112.87, batch-reuse:1
@ 990 train 6.1333 , allloss: 23.4126, dt: 1245.07ms, fracRes: 0.2901, norm(attn): 0.1445, norm(output): 2.7500, norm(x): 3.0505, norm(y): 0.9999, norm:30.7073, tok/sec: 105273.02, flops:110.49, batch-reuse:1
@ 991 train 6.1192 , allloss: 18.0811, dt: 1242.29ms, fracRes: 0.2960, norm(attn): 0.1396, norm(output): 2.7344, norm(x): 3.0622, norm(y): 0.9999, norm:18.8689, tok/sec: 105508.05, flops:110.73, batch-reuse:1
@ 992 train 6.2032 , allloss: 17.4821, dt: 1221.78ms, fracRes: 0.2966, norm(attn): 0.1367, norm(output): 2.7656, norm(x): 3.0783, norm(y): 0.9998, norm:41.6318, tok/sec: 107279.98, flops:112.59, batch-reuse:1
@ 993 train 6.0993 , allloss: 14.6300, dt: 1208.64ms, fracRes: 0.2964, norm(attn): 0.1367, norm(output): 2.7500, norm(x): 3.0250, norm(y): 0.9998, norm:24.2959, tok/sec: 108445.59, flops:113.82, batch-reuse:1
@ 994 train 6.1601 , allloss: 14.1618, dt: 1216.67ms, fracRes: 0.2949, norm(attn): 0.1387, norm(output): 2.7656, norm(x): 3.0440, norm(y): 0.9998, norm:14.0588, tok/sec: 107730.09, flops:113.06, batch-reuse:1
@ 995 train 6.0922 , allloss: 14.6119, dt: 1241.65ms, fracRes: 0.2906, norm(attn): 0.1455, norm(output): 2.7812, norm(x): 3.0577, norm(y): 0.9999, norm:14.8889, tok/sec: 105563.16, flops:110.79, batch-reuse:1
@ 996 train 5.9652 , allloss: 14.4061, dt: 1240.09ms, fracRes: 0.2934, norm(attn): 0.1504, norm(output): 2.8281, norm(x): 3.0660, norm(y): 1.0000, norm:14.2230, tok/sec: 105695.73, flops:110.93, batch-reuse:1
@ 997 train 6.0402 , allloss: 14.8298, dt: 1234.76ms, fracRes: 0.3041, norm(attn): 0.1494, norm(output): 2.8281, norm(x): 3.0504, norm(y): 0.9999, norm:12.8598, tok/sec: 106151.59, flops:111.41, batch-reuse:1
@ 998 train 6.2104 , allloss: 14.4943, dt: 1237.90ms, fracRes: 0.3061, norm(attn): 0.1562, norm(output): 2.8594, norm(x): 3.0725, norm(y): 1.0000, norm:12.7197, tok/sec: 105882.42, flops:111.13, batch-reuse:1
@ 999 train 6.0691 , allloss: 14.6137, dt: 1237.34ms, fracRes: 0.3062, norm(attn): 0.1738, norm(output): 2.8906, norm(x): 3.0726, norm(y): 1.0001, norm:13.7909, tok/sec: 105930.45, flops:111.18, batch-reuse:1
@ 1000 train 6.1268 , allloss: 12.6246, dt: 1240.61ms, fracRes: 0.3092, norm(attn): 0.1738, norm(output): 2.9688, norm(x): 3.0985, norm(y): 1.0000, norm:13.8545, tok/sec: 105651.32, flops:110.88, batch-reuse:1
@ 1001 train 6.1472 , allloss: 11.7906, dt: 1215.91ms, fracRes: 0.3228, norm(attn): 0.1631, norm(output): 2.9219, norm(x): 3.0186, norm(y): 1.0002, norm:19.6969, tok/sec: 107797.27, flops:113.14, batch-reuse:1
@ 1002 train 6.0189 , allloss: 10.9828, dt: 1214.81ms, fracRes: 0.3245, norm(attn): 0.1562, norm(output): 2.9062, norm(x): 3.0334, norm(y): 1.0003, norm:19.0433, tok/sec: 107895.07, flops:113.24, batch-reuse:1
@ 1003 train 6.1664 , allloss: 10.3043, dt: 1233.79ms, fracRes: 0.3235, norm(attn): 0.1562, norm(output): 2.8750, norm(x): 2.9995, norm(y): 1.0003, norm:14.5899, tok/sec: 106234.88, flops:111.50, batch-reuse:1
@ 1004 train 5.9954 , allloss: 9.5214, dt: 1235.23ms, fracRes: 0.3274, norm(attn): 0.1592, norm(output): 2.8906, norm(x): 2.9913, norm(y): 1.0006, norm:12.0167, tok/sec: 106111.52, flops:111.37, batch-reuse:1
@ 1005 train 6.0314 , allloss: 9.4277, dt: 1238.51ms, fracRes: 0.3323, norm(attn): 0.1562, norm(output): 2.8750, norm(x): 2.9640, norm(y): 1.0004, norm:11.4742, tok/sec: 105830.24, flops:111.07, batch-reuse:1
@ 1006 train 6.0400 , allloss: 13.8717, dt: 1235.29ms, fracRes: 0.3334, norm(attn): 0.1553, norm(output): 2.8594, norm(x): 2.9487, norm(y): 1.0005, norm:34.2214, tok/sec: 106106.23, flops:111.36, batch-reuse:1
@ 1007 train 6.0567 , allloss: 17.8550, dt: 1240.22ms, fracRes: 0.3351, norm(attn): 0.1553, norm(output): 2.8281, norm(x): 2.9243, norm(y): 1.0007, norm:18.5839, tok/sec: 105684.75, flops:110.92, batch-reuse:1
@ 1008 train 6.0770 , allloss: 17.9650, dt: 1205.24ms, fracRes: 0.3383, norm(attn): 0.1514, norm(output): 2.8125, norm(x): 2.8948, norm(y): 1.0006, norm:31.6077, tok/sec: 108752.15, flops:114.14, batch-reuse:1
@ 1009 train 6.1008 , allloss: 11.9296, dt: 1214.32ms, fracRes: 0.3397, norm(attn): 0.1475, norm(output): 2.8125, norm(x): 2.8789, norm(y): 1.0005, norm:18.5010, tok/sec: 107938.50, flops:113.28, batch-reuse:1
@ 1010 train 6.1498 , allloss: 10.8411, dt: 1206.79ms, fracRes: 0.3384, norm(attn): 0.1426, norm(output): 2.8906, norm(x): 2.9125, norm(y): 1.0007, norm:13.0738, tok/sec: 108611.87, flops:113.99, batch-reuse:1
@ 1011 train 6.0387 , allloss: 16.9505, dt: 1218.87ms, fracRes: 0.3385, norm(attn): 0.1455, norm(output): 2.8438, norm(x): 2.8992, norm(y): 1.0008, norm:21.3086, tok/sec: 107536.10, flops:112.86, batch-reuse:1
@ 1012 train 6.1275 , allloss: 13.1499, dt: 1241.49ms, fracRes: 0.3387, norm(attn): 0.1494, norm(output): 2.8906, norm(x): 2.9103, norm(y): 1.0008, norm:13.2586, tok/sec: 105576.37, flops:110.80, batch-reuse:1
@ 1013 train 6.0992 , allloss: 9.5213, dt: 1218.00ms, fracRes: 0.3379, norm(attn): 0.1514, norm(output): 2.8438, norm(x): 2.8886, norm(y): 1.0008, norm:8.9467, tok/sec: 107612.53, flops:112.94, batch-reuse:1
@ 1014 train 6.0296 , allloss: 8.5581, dt: 1231.75ms, fracRes: 0.3383, norm(attn): 0.1572, norm(output): 2.8438, norm(x): 2.8587, norm(y): 1.0007, norm:5.6885, tok/sec: 106411.28, flops:111.68, batch-reuse:1
@ 1015 train 6.2411 , allloss: 9.1302, dt: 1246.61ms, fracRes: 0.3386, norm(attn): 0.1621, norm(output): 2.8125, norm(x): 2.8828, norm(y): 1.0006, norm:8.7149, tok/sec: 105143.10, flops:110.35, batch-reuse:1
@ 1016 train 6.2392 , allloss: 8.7040, dt: 1230.27ms, fracRes: 0.3390, norm(attn): 0.1396, norm(output): 2.8750, norm(x): 2.8902, norm(y): 1.0009, norm:5.1606, tok/sec: 106539.14, flops:111.81, batch-reuse:1
@ 1017 train 6.1402 , allloss: 8.7807, dt: 1197.38ms, fracRes: 0.3381, norm(attn): 0.1562, norm(output): 2.7812, norm(x): 2.8406, norm(y): 1.0008, norm:7.3845, tok/sec: 109465.31, flops:114.89, batch-reuse:1
@ 1018 train 6.2704 , allloss: 9.7893, dt: 1220.56ms, fracRes: 0.3355, norm(attn): 0.1699, norm(output): 2.7656, norm(x): 2.8777, norm(y): 1.0005, norm:9.2568, tok/sec: 107386.54, flops:112.70, batch-reuse:1
@ 1019 train 6.2420 , allloss: 8.9964, dt: 1240.57ms, fracRes: 0.3352, norm(attn): 0.1514, norm(output): 2.8438, norm(x): 2.9503, norm(y): 1.0005, norm:6.7304, tok/sec: 105654.37, flops:110.89, batch-reuse:1
@ 1020 train 6.1260 , allloss: 14.8270, dt: 1221.08ms, fracRes: 0.3366, norm(attn): 0.1465, norm(output): 2.8125, norm(x): 2.9081, norm(y): 1.0008, norm:22.3296, tok/sec: 107341.41, flops:112.66, batch-reuse:1
@ 1021 train 6.2222 , allloss: 14.2636, dt: 1214.15ms, fracRes: 0.3366, norm(attn): 0.1416, norm(output): 2.8281, norm(x): 2.9060, norm(y): 1.0009, norm:18.7208, tok/sec: 107954.06, flops:113.30, batch-reuse:1
@ 1022 train 6.0719 , allloss: 17.7663, dt: 1212.84ms, fracRes: 0.3359, norm(attn): 0.1357, norm(output): 2.8125, norm(x): 2.9268, norm(y): 1.0011, norm:26.0803, tok/sec: 108070.41, flops:113.42, batch-reuse:1
@ 1023 train 6.1410 , allloss: 21.7833, dt: 1227.64ms, fracRes: 0.3364, norm(attn): 0.1299, norm(output): 2.7969, norm(x): 2.9373, norm(y): 1.0009, norm:32.1348, tok/sec: 106767.75, flops:112.05, batch-reuse:1
@ 1024 train 6.1219 , allloss: 26.4578, dt: 1241.79ms, fracRes: 0.3365, norm(attn): 0.1328, norm(output): 2.7969, norm(x): 2.9402, norm(y): 1.0008, norm:34.9061, tok/sec: 105550.77, flops:110.78, batch-reuse:1
@ 1025 train 6.1937 , allloss: 27.7091, dt: 1214.31ms, fracRes: 0.3363, norm(attn): 0.1357, norm(output): 2.7656, norm(x): 2.9256, norm(y): 1.0006, norm:31.9395, tok/sec: 107939.77, flops:113.28, batch-reuse:1
@ 1026 train 6.2152 , allloss: 23.3228, dt: 1200.22ms, fracRes: 0.3365, norm(attn): 0.1367, norm(output): 2.7500, norm(x): 2.9288, norm(y): 1.0004, norm:26.7597, tok/sec: 109206.40, flops:114.61, batch-reuse:1
@ 1027 train 6.1627 , allloss: 23.4307, dt: 1199.95ms, fracRes: 0.3362, norm(attn): 0.1387, norm(output): 2.7656, norm(x): 2.9571, norm(y): 1.0005, norm:21.1273, tok/sec: 109231.20, flops:114.64, batch-reuse:1
@ 1028 train 6.0973 , allloss: 18.6478, dt: 1203.99ms, fracRes: 0.3361, norm(attn): 0.1396, norm(output): 2.7812, norm(x): 2.9627, norm(y): 1.0007, norm:13.3759, tok/sec: 108864.76, flops:114.26, batch-reuse:1
@ 1029 train 6.0783 , allloss: 15.7031, dt: 1223.75ms, fracRes: 0.3363, norm(attn): 0.1377, norm(output): 2.8125, norm(x): 2.9829, norm(y): 1.0007, norm:10.2290, tok/sec: 107107.13, flops:112.41, batch-reuse:1
@ 1030 train 6.0994 , allloss: 14.5667, dt: 1247.98ms, fracRes: 0.3364, norm(attn): 0.1318, norm(output): 2.8594, norm(x): 3.0140, norm(y): 1.0005, norm:9.0041, tok/sec: 105027.01, flops:110.23, batch-reuse:1
@ 1031 train 6.1294 , allloss: 12.8648, dt: 1236.98ms, fracRes: 0.3366, norm(attn): 0.1318, norm(output): 2.8906, norm(x): 3.0346, norm(y): 1.0006, norm:6.8008, tok/sec: 105961.34, flops:111.21, batch-reuse:1
@ 1032 train 6.0330 , allloss: 12.5481, dt: 1206.05ms, fracRes: 0.3366, norm(attn): 0.1367, norm(output): 2.8125, norm(x): 3.0102, norm(y): 1.0007, norm:9.1123, tok/sec: 108679.12, flops:114.06, batch-reuse:1
@ 1033 train 6.0317 , allloss: 11.7910, dt: 1200.21ms, fracRes: 0.3364, norm(attn): 0.1357, norm(output): 2.8438, norm(x): 3.0512, norm(y): 1.0009, norm:8.6003, tok/sec: 109207.85, flops:114.62, batch-reuse:1
@ 1034 train 5.9947 , allloss: 11.8737, dt: 1232.20ms, fracRes: 0.3365, norm(attn): 0.1377, norm(output): 2.8438, norm(x): 3.0555, norm(y): 1.0008, norm:9.1470, tok/sec: 106372.29, flops:111.64, batch-reuse:1
@ 1035 train 6.0423 , allloss: 11.2982, dt: 1220.66ms, fracRes: 0.3371, norm(attn): 0.1377, norm(output): 2.8906, norm(x): 3.0641, norm(y): 1.0010, norm:7.5558, tok/sec: 107378.38, flops:112.70, batch-reuse:1
@ 1036 train 6.1017 , allloss: 11.5091, dt: 1191.49ms, fracRes: 0.3369, norm(attn): 0.1367, norm(output): 2.9062, norm(x): 3.1217, norm(y): 1.0008, norm:8.5824, tok/sec: 110006.63, flops:115.45, batch-reuse:1
@ 1037 train 6.0516 , allloss: 11.2276, dt: 1216.95ms, fracRes: 0.3368, norm(attn): 0.1367, norm(output): 2.8438, norm(x): 3.0775, norm(y): 1.0010, norm:7.6352, tok/sec: 107705.40, flops:113.04, batch-reuse:1
@ 1038 train 5.9839 , allloss: 11.1468, dt: 1230.63ms, fracRes: 0.3369, norm(attn): 0.1328, norm(output): 2.9062, norm(x): 3.1071, norm(y): 1.0009, norm:8.2979, tok/sec: 106508.41, flops:111.78, batch-reuse:1
@ 1039 train 6.0057 , allloss: 10.7643, dt: 1226.73ms, fracRes: 0.3377, norm(attn): 0.1250, norm(output): 2.8750, norm(x): 3.1029, norm(y): 1.0007, norm:6.6841, tok/sec: 106846.46, flops:112.14, batch-reuse:1
@ 1040 train 5.9116 , allloss: 10.3116, dt: 1246.91ms, fracRes: 0.3397, norm(attn): 0.1260, norm(output): 2.9375, norm(x): 3.1284, norm(y): 1.0009, norm:6.3952, tok/sec: 105117.20, flops:110.32, batch-reuse:1
@ 1041 train 5.9997 , allloss: 10.0599, dt: 1227.23ms, fracRes: 0.3373, norm(attn): 0.1270, norm(output): 2.8750, norm(x): 3.1026, norm(y): 1.0007, norm:5.5669, tok/sec: 106803.08, flops:112.09, batch-reuse:1
@ 1042 train 5.9690 , allloss: 9.9917, dt: 1198.01ms, fracRes: 0.3368, norm(attn): 0.1260, norm(output): 2.9062, norm(x): 3.1267, norm(y): 1.0008, norm:6.1989, tok/sec: 109408.45, flops:114.83, batch-reuse:1
@ 1043 train 6.0403 , allloss: 9.5957, dt: 1201.07ms, fracRes: 0.3368, norm(attn): 0.1289, norm(output): 2.8906, norm(x): 3.1227, norm(y): 1.0008, norm:7.2714, tok/sec: 109129.79, flops:114.53, batch-reuse:1
@ 1044 train 6.0919 , allloss: 9.4754, dt: 1205.21ms, fracRes: 0.3370, norm(attn): 0.1250, norm(output): 2.9062, norm(x): 3.1527, norm(y): 1.0007, norm:6.9803, tok/sec: 108754.47, flops:114.14, batch-reuse:1
@ 1045 train 6.0476 , allloss: 9.3670, dt: 1220.90ms, fracRes: 0.3376, norm(attn): 0.1211, norm(output): 2.9375, norm(x): 3.1626, norm(y): 1.0008, norm:6.5303, tok/sec: 107356.86, flops:112.67, batch-reuse:1
@ 1046 train 5.9945 , allloss: 8.8933, dt: 1222.74ms, fracRes: 0.3375, norm(attn): 0.1182, norm(output): 2.9375, norm(x): 3.1870, norm(y): 1.0008, norm:5.3244, tok/sec: 107195.38, flops:112.50, batch-reuse:1
@ 1047 train 5.9609 , allloss: 9.0459, dt: 1224.69ms, fracRes: 0.3391, norm(attn): 0.1177, norm(output): 2.9531, norm(x): 3.2160, norm(y): 1.0008, norm:6.3664, tok/sec: 107024.35, flops:112.32, batch-reuse:1
@ 1048 train 5.9769 , allloss: 8.9140, dt: 1217.08ms, fracRes: 0.3378, norm(attn): 0.1182, norm(output): 2.9219, norm(x): 3.2160, norm(y): 1.0009, norm:5.8534, tok/sec: 107694.24, flops:113.03, batch-reuse:1
@ 1049 train 6.0050 , allloss: 9.4529, dt: 1200.44ms, fracRes: 0.3340, norm(attn): 0.1299, norm(output): 2.9844, norm(x): 3.2533, norm(y): 1.0010, norm:19.3464, tok/sec: 109186.40, flops:114.59, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4355,     0.1289,     0.4355,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5781,     0.4043,     0.0076,     0.0096,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0405,     0.9141,     0.0009,     0.0059,     0.0388,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2871,     0.0630,     0.0640,     0.0674,     0.3066,     0.2119,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1514,     0.3203,     0.1177,     0.1108,     0.0679,     0.0908,     0.1416,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0513,     0.1729,     0.5977,     0.1025,     0.0041,     0.0073,     0.0106,     0.0544,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0996,     0.0058,     0.2930,     0.1318,     0.0101,     0.0623,     0.2314,     0.1465,     0.0197,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0830,     0.0078,     0.1846,     0.2266,     0.2432,     0.0297,     0.0713,     0.0483,     0.0588,     0.0464,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0845,     0.0282,     0.0320,     0.0583,     0.0938,     0.2266,     0.1660,     0.0620,     0.1367,     0.0728,     0.0398,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0310,     0.0135,     0.5117,     0.2598,     0.0245,     0.0236,     0.0378,     0.0417,     0.0048,     0.0167,     0.0021,     0.0322,     0.0000,     0.0000,     0.0000],
        [    0.0469,     0.0386,     0.3555,     0.0732,     0.0334,     0.0226,     0.0175,     0.0811,     0.0124,     0.0542,     0.1777,     0.0483,     0.0378,     0.0000,     0.0000],
        [    0.0679,     0.0256,     0.0117,     0.0127,     0.0259,     0.0889,     0.1035,     0.0464,     0.1396,     0.1260,     0.0649,     0.0938,     0.0933,     0.0996,     0.0000],
        [    0.0325,     0.4238,     0.0625,     0.0393,     0.0547,     0.0376,     0.0130,     0.0437,     0.0432,     0.0491,     0.0017,     0.0591,     0.0864,     0.0223,     0.0317]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0009, -0.0391,  0.0020,  ..., -0.0280,  0.0116, -0.0202],
        [-0.0008, -0.0333, -0.0130,  ...,  0.0445,  0.0115, -0.0320],
        [-0.0164,  0.0065,  0.0001,  ...,  0.0002,  0.0457, -0.0070],
        ...,
        [ 0.0174,  0.0023,  0.0131,  ..., -0.0172, -0.0512,  0.0236],
        [ 0.0092, -0.0185,  0.0099,  ...,  0.0160, -0.0185, -0.0046],
        [ 0.0171,  0.0656,  0.0074,  ..., -0.0186,  0.0279,  0.0158]], device='cuda:0', requires_grad=True)
K: tensor([ 0.6133, -0.5195, -0.1680, -0.9258,  1.1016,  0.0101,  0.4980,  0.4551, -1.0312, -0.0060, -0.2441,  0.7109,  0.1719, -0.4824, -0.1543,  0.5273, -0.1611,  0.6445,  0.4297,  0.8672,  0.3691, -0.7070,  0.7070, -0.1309, -0.3340,  0.0981, -0.0708, -0.2988, -0.2812,  1.1016,  1.0625,  1.0781,
         0.4219, -0.4258, -0.2051,  0.7109, -0.0022,  0.2217,  0.2617,  0.8242, -0.5234,  0.8594, -1.0625,  0.6094,  0.0544, -0.5781,  0.7031,  0.6445,  0.6875, -0.5664,  0.4551, -0.2363, -0.5352, -0.5234,  0.4277,  0.0342, -0.0737,  0.0247, -0.3027, -0.9766,  0.5703,  0.3691,  0.6992,  0.2451],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[    -0.0394,      0.0237,      0.0250,  ...,      0.0160,      0.0069,     -0.0062],
        [    -0.0069,      0.0113,      0.0142,  ...,      0.0158,      0.0062,      0.0093],
        [     0.0000,      0.0430,      0.0041,  ...,     -0.0016,      0.0116,     -0.0178],
        ...,
        [    -0.0028,     -0.0487,     -0.0181,  ...,      0.0035,      0.0179,     -0.0136],
        [     0.0511,      0.0259,      0.0139,  ...,      0.0078,     -0.0035,     -0.0317],
        [     0.0258,     -0.0183,     -0.0020,  ...,      0.0236,      0.0124,      0.0187]], device='cuda:0', requires_grad=True)
Q: tensor([-0.0024, -0.1523,  0.5273,  0.8398,  1.3906,  0.3848, -0.8477,  0.5117, -0.6367, -0.0620, -0.0047, -0.1504, -0.5664, -0.7148, -0.5820, -0.3281,  0.1846, -0.5508, -0.2305, -0.1387, -0.2109, -0.5430,  0.1196,  0.9844,  0.2412,  0.0371, -0.9883, -0.0869, -0.7773,  0.3184, -0.9805, -1.0781,
        -0.2188,  0.5430,  0.3652, -0.3867,  0.7305,  1.0938, -1.2266,  0.8438, -0.6914,  0.3418, -0.2471,  0.4980,  0.2061, -0.0615, -0.6094, -0.7812, -1.0469,  1.1016,  0.7148, -0.1094, -0.0420,  0.0566,  0.6758, -0.5586,  0.4961,  1.0859, -0.1777, -0.0199,  0.5195,  0.5234,  0.3281,  0.7188],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,    -10.3125,      6.9375,      2.7500,     -3.1719,     -2.2500,      0.9844,      2.7812,     -5.3438,     -0.0232,     -0.7031,      1.4766,      0.4863,     -2.8438,      0.9023],
        [     0.0000,     -1.2188,     -0.0031,     -0.5430,     -4.2500,     -1.6484,     -0.5000,     -0.0505,     -1.8750,      1.7578,     -2.2969,      2.9688,      1.8438,     -2.0000,      0.2451],
        [     0.0000,     -0.3555,     -4.3438,     -4.0938,     -0.0806,      0.4199,     -0.7734,     -1.0234,      2.1719,      0.8945,      2.0469,      0.9727,      0.3535,      1.0547,      0.8008],
        [     0.0000,      3.1250,     -3.7969,     -1.9297,     -0.0376,      1.0547,      0.1040,     -1.3906,      2.8906,      0.7773,     -0.3320,      0.1797,      0.0938,      2.2500,     -0.9258],
        [     0.0000,     -1.5156,     -1.5000,     -1.4531,      0.0654,     -0.3008,      0.0356,     -0.0723,      0.7578,      0.1709,      1.2969,      0.3516,     -0.3262,      0.2520,      0.9922],
        [     0.0000,      0.7500,     -0.2500,     -0.3086,     -0.8047,     -0.5117,     -0.0693,      0.0009,     -0.2988,      0.3516,     -1.7734,      0.8984,      0.5664,     -0.5859,      0.3359],
        [     0.0000,      1.2109,      2.4531,      0.6953,     -2.5156,     -1.9453,     -1.5781,      0.0623,     -2.0156,      0.9766,     -0.9961,      1.8281,      1.1484,     -2.3594,     -0.2168],
        [     0.0000,     -2.8438,      1.0781,      0.2793,     -2.2969,     -0.4688,      0.8438,      0.3887,     -1.6250,      0.6250,     -1.1641,      0.5469,      0.9688,     -0.7539,      0.5977],
        [     0.0000,     -2.3594,      0.7969,      1.0000,      1.0703,     -1.0312,     -0.1543,     -0.5430,     -0.3457,     -0.5859,      0.4023,     -0.5352,     -0.6250,     -0.5547,      0.2715],
        [     0.0000,     -1.1016,     -0.9688,     -0.3691,      0.1045,      0.9844,      0.6719,     -0.3086,      0.4805,     -0.1523,     -0.7539,     -0.3691,     -0.2812,      0.3691,      0.4707],
        [     0.0000,     -0.8242,      2.8125,      2.1250,     -0.2334,     -0.2754,      0.2002,      0.2969,     -1.8750,     -0.6172,     -2.6875,      0.0356,      0.3770,     -0.8984,     -0.1270],
        [     0.0000,     -0.1973,      2.0312,      0.4434,     -0.3379,     -0.7344,     -0.9883,      0.5469,     -1.3281,      0.1465,      1.3281,      0.0308,     -0.2119,     -0.6484,      0.0762],
        [     0.0000,     -0.9727,     -1.7578,     -1.6797,     -0.9648,      0.2715,      0.4258,     -0.3809,      0.7266,      0.6172,     -0.0425,      0.3242,      0.3184,      0.3848,      0.4375],
        [     0.0000,      2.5625,      0.6562,      0.1895,      0.5195,      0.1494,     -0.9141,      0.2988,      0.2852,      0.4121,     -2.9375,      0.5977,      0.9766,     -0.3750,     -0.0221]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9941],
        [0.2373],
        [0.6051],
        [0.2642],
        [0.2651],
        [0.1462],
        [0.0566],
        [0.0948],
        [0.0829],
        [0.0701],
        [0.0404],
        [0.0342],
        [0.0495],
        [0.0401]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0003,     0.0020,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7109,     0.0002,     0.2793,     0.0120,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4258,     0.0781,     0.1445,     0.2637,     0.0864,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2227,     0.0228,     0.3789,     0.0371,     0.3027,     0.0361,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1123,     0.0015,     0.5430,     0.0121,     0.2656,     0.0040,     0.0601,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0688,     0.3359,     0.0175,     0.1689,     0.0148,     0.3438,     0.0361,     0.0140,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0046,     0.0003,     0.9258,     0.0025,     0.0070,     0.0007,     0.0145,     0.0417,     0.0032,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2012,     0.0339,     0.0044,     0.1123,     0.0679,     0.0249,     0.0693,     0.0830,     0.3652,     0.0374,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0442,     0.0000,     0.1060,     0.0021,     0.0063,     0.0000,     0.0359,     0.7969,     0.0045,     0.0021,     0.0006,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2598,     0.0051,     0.0091,     0.1001,     0.0352,     0.0107,     0.0947,     0.2617,     0.1348,     0.0356,     0.0128,     0.0420,     0.0000,     0.0000,     0.0000],
        [    0.0322,     0.3867,     0.0021,     0.0688,     0.0190,     0.2314,     0.0190,     0.0053,     0.0449,     0.0723,     0.0332,     0.0349,     0.0503,     0.0000,     0.0000],
        [    0.0013,     0.0000,     0.9609,     0.0004,     0.0037,     0.0001,     0.0052,     0.0198,     0.0006,     0.0007,     0.0060,     0.0016,     0.0008,     0.0002,     0.0000],
        [    0.0566,     0.0000,     0.5039,     0.0033,     0.0219,     0.0009,     0.0260,     0.3242,     0.0061,     0.0204,     0.0021,     0.0170,     0.0096,     0.0017,     0.0073]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[     0.0357,     -0.0139,      0.0061,  ...,      0.0021,     -0.0297,     -0.0306],
        [     0.0003,      0.0131,     -0.0357,  ...,     -0.0010,      0.0151,     -0.0250],
        [    -0.0173,      0.0369,     -0.0384,  ...,     -0.0342,     -0.0291,     -0.0049],
        ...,
        [     0.0359,      0.0165,     -0.0110,  ...,     -0.0176,     -0.0453,     -0.0439],
        [    -0.0056,      0.0194,     -0.0160,  ...,     -0.0303,     -0.0106,      0.0041],
        [     0.0001,     -0.0135,      0.0137,  ...,      0.0247,     -0.0378,      0.0130]], device='cuda:0', requires_grad=True)
K: tensor([-0.5312, -0.5977, -0.7070,  0.8320, -0.6133,  0.4336,  0.0354,  0.5273, -0.7812,  0.4004, -0.5469,  0.0869, -1.8047,  0.3066,  0.9180,  1.0859,  0.1631, -0.1157, -0.1157,  0.1060,  0.0967,  1.4922, -0.5664,  0.6953,  0.1592,  0.5430,  0.4961,  0.1387,  0.1182,  0.5117, -1.3047,  0.6641,
         1.4375,  0.1191,  0.3125,  0.1309, -0.1709,  0.9688, -1.3750, -1.3750,  1.2188, -1.0234,  0.6914, -0.5312, -0.6758, -0.6914,  0.5938,  0.5469,  0.6641, -0.5156,  1.0781,  0.2002,  0.2490,  0.0250, -0.0928,  0.0835,  0.6992, -0.7695,  0.3320,  0.0284,  0.4277, -0.3340, -1.0391,  0.6875],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0117,  0.0309,  0.0193,  ..., -0.0238, -0.0338,  0.0200],
        [-0.0133, -0.0215,  0.0074,  ...,  0.0360, -0.0065, -0.0080],
        [-0.0272, -0.0123,  0.0371,  ...,  0.0223,  0.0065, -0.0070],
        ...,
        [-0.0045, -0.0605, -0.0149,  ..., -0.0142, -0.0054,  0.0063],
        [-0.0019,  0.0037,  0.0298,  ...,  0.0363, -0.0160, -0.0150],
        [-0.0188, -0.0117, -0.0056,  ...,  0.0236, -0.0115, -0.0150]], device='cuda:0', requires_grad=True)
Q: tensor([-0.1191,  0.5391,  1.1641, -0.6289, -0.8203,  0.7266,  0.1494,  2.0781,  0.6250, -0.9141, -0.0786,  0.7773,  0.3340, -2.0156, -1.1016, -0.6875,  0.0483, -1.4141, -0.8086, -0.7773, -1.4453, -1.2422,  1.7109, -0.5391,  0.0166, -0.5586,  0.9805, -1.4766, -0.1885,  0.2539,  0.4629,  0.3457,
        -2.2031, -0.6914, -1.0781, -0.8789, -0.2432, -0.4375,  0.5820,  0.9883, -0.0693,  0.4297, -0.2021,  1.3125,  0.2461, -1.4688, -0.7188,  0.6914,  0.2949,  0.9180, -1.0469, -0.2520, -1.0781,  0.9961, -1.3281,  1.4766, -0.0669, -0.0126,  0.9062, -0.3164, -0.0342, -0.5117,  1.1094, -0.8008],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -8.1250,  8.1875, -2.7969,  2.4844, -4.2500,  2.1562,  5.0312, -1.7891, -0.3125,  2.1875,  0.1621, -0.3242, -2.0938, -0.1226],
        [ 0.0000, -8.1875, -6.2188, -3.3594, -2.9688, -4.9375, -1.8984,  0.1377, -2.5156, -1.0938, -6.9375, -2.2344, -2.4062, -2.9688, -2.5312],
        [ 0.0000, -8.3750, -0.9336, -4.0625, -1.8359, -5.1562, -0.0737,  1.4766, -2.5469, -2.1406, -4.0625, -2.5469, -1.7188, -2.7031, -2.4531],
        [ 0.0000, -1.6953, -1.0781, -0.4805, -1.5938, -0.2871,  0.1270, -0.9766, -0.1982, -0.5312, -1.2422, -1.1562, -0.8516, -0.4043, -0.8164],
        [ 0.0000, -2.2812,  0.5352, -1.7969,  0.3066, -1.8125,  0.3105,  0.6953, -0.6055, -1.1094,  0.0405, -1.6016, -0.7266, -0.1143, -1.2734],
        [ 0.0000, -4.3125,  1.5781, -2.2344,  0.8594, -3.3281, -0.6289,  1.8984, -0.9297,  0.1514, -1.4766,  0.1016, -0.6484, -1.7578, -0.5391],
        [ 0.0000,  1.5859, -1.3750,  0.8984, -1.5391,  1.6094, -0.6445, -1.5938, -0.4297,  0.5234, -0.3320, -0.2129,  0.3359,  0.0713,  0.3164],
        [ 0.0000, -2.8125,  5.2812, -0.6055,  0.4023, -1.8750,  1.1406,  2.2031, -0.3711, -0.6797,  2.0312, -0.3496, -0.2227, -0.8164,  0.3203],
        [ 0.0000, -1.7812, -3.8281, -0.5859, -1.0859, -2.0938, -1.0703, -0.8867,  0.5977, -1.6797, -2.4688, -1.6641, -0.8164,  0.4824, -1.7734],
        [ 0.0000, -9.6875,  0.8750, -3.0625, -1.9453, -7.5938, -0.2090,  2.8906, -2.2812, -3.0312, -4.3750, -2.7812, -0.7109, -3.3594, -1.3906],
        [ 0.0000, -3.9375, -3.3438, -0.9531, -2.0000, -3.1875, -1.0078,  0.0131, -0.6562, -1.9844, -3.0000, -1.8203, -0.5977, -0.5273, -1.1250],
        [ 0.0000,  2.4844, -2.7344,  0.7578, -0.5312,  1.9688, -0.5273, -1.7969,  0.3281,  0.8047,  0.0253,  0.0786,  0.4414,  0.8789,  0.7500],
        [ 0.0000, -4.7812,  6.5625, -1.1172,  1.0234, -2.6094,  1.3516,  2.6875, -0.7695, -0.6875,  1.4922,  0.1611, -0.5508, -1.7031,  0.3496],
        [ 0.0000, -7.8125,  2.1875, -2.8438, -0.9531, -4.1250, -0.7773,  1.7500, -2.2344, -1.0234, -3.2969, -1.2031, -1.7734, -3.4844, -2.0469]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9954],
        [0.9958],
        [0.9580],
        [0.4499],
        [0.4906],
        [0.2909],
        [0.1466],
        [0.1426],
        [0.1635],
        [0.1757],
        [0.1978],
        [0.0388],
        [0.0994],
        [0.1460]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5859,     0.3965,     0.0001,     0.0160,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.0126,     0.9805,     0.0058,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0659,     0.1035,     0.0806,     0.1084,     0.1650,     0.4766,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0036,     0.7812,     0.1738,     0.0273,     0.0123,     0.0001,     0.0006,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0014,     0.0000,     0.9805,     0.0164,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.0325,     0.9570,     0.0088,     0.0001,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.9453,     0.0003,     0.0000,     0.0540,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.7656,     0.1855,     0.0004,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0500,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.7461,     0.0007,     0.0000,     0.2480,     0.0000,     0.0046,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.9453,     0.0010,     0.0000,     0.0518,     0.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0014,     0.0332,     0.3574,     0.0212,     0.0005,     0.0000,     0.0002,     0.0014,     0.0000,     0.1006,     0.0001,     0.0096,     0.4746,     0.0003,     0.0000],
        [    0.0044,     0.0005,     0.0000,     0.0002,     0.0684,     0.1465,     0.0383,     0.0029,     0.4902,     0.0000,     0.1641,     0.0002,     0.0000,     0.0825,     0.0006]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0095,  0.0232, -0.0649,  ..., -0.0293,  0.0607,  0.0109],
        [-0.0293,  0.0428,  0.0135,  ..., -0.0232,  0.0630,  0.0474],
        [-0.0211, -0.0539, -0.0010,  ...,  0.0573, -0.0887, -0.0331],
        ...,
        [-0.0005, -0.0727,  0.0151,  ...,  0.0326, -0.0812, -0.0508],
        [-0.0151,  0.0499, -0.0114,  ...,  0.0054,  0.0800,  0.0076],
        [-0.0446, -0.0651, -0.0181,  ..., -0.0121, -0.0682, -0.0350]], device='cuda:0', requires_grad=True)
K: tensor([ 0.1152,  0.4512, -0.2139, -0.5703,  2.1250, -0.1582,  0.2500,  0.5625, -0.0280, -0.3457,  0.1270,  0.5586, -0.5820, -0.6367,  0.4375,  0.6055, -0.2988, -0.3809,  0.5977, -0.2949, -1.4219, -0.5977, -0.4922, -0.1260, -0.3379, -0.2812, -0.9961,  1.2344,  0.8477,  0.8789, -0.0240, -0.8516,
         0.3105, -0.6953, -0.7852,  0.1807,  0.1226,  0.9062,  0.1709, -1.6250,  0.9219, -0.5820,  0.6445, -1.0234, -0.5312, -0.2441, -0.4883,  0.4141, -0.0737, -1.0156,  0.0669, -0.0732,  0.5742, -0.7031, -0.1309,  0.7969, -0.3926, -0.0830,  0.7578,  0.8984,  0.2227,  0.6719, -0.8047,  1.3047],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0388, -0.0209, -0.0202,  ...,  0.0037, -0.0614, -0.0466],
        [ 0.0084,  0.0251,  0.0269,  ...,  0.0563, -0.0260, -0.0028],
        [ 0.0093,  0.0379,  0.0028,  ..., -0.0291,  0.0579,  0.0375],
        ...,
        [ 0.0068,  0.0181, -0.0203,  ..., -0.0441,  0.0431,  0.0136],
        [-0.0238, -0.0187, -0.0222,  ...,  0.0225, -0.0260, -0.0131],
        [ 0.0240,  0.0028,  0.0175,  ..., -0.0394,  0.0171,  0.0257]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.6094, -0.5156,  0.9102, -0.0503, -0.1387, -1.2109, -0.7969,  0.3379,  1.6094,  0.8633, -0.7305, -1.0078, -0.4160, -0.8789, -2.2344, -1.5391, -0.0601,  1.2031,  0.0879, -1.3359,  1.9219,  0.8516, -0.4609,  0.0464, -0.8047,  1.9922, -0.7812, -1.4297,  0.0356, -0.5859, -0.0112,  1.4922,
         0.9688,  1.2656,  0.3301, -0.2559, -0.5508, -1.2344,  0.7578,  1.8125, -0.0811,  0.1855, -0.5547,  0.1108,  0.9023,  0.2129,  0.6367, -0.7578, -0.1592,  0.4336,  0.2734, -0.0515,  1.3516, -0.5156, -0.1602, -0.0206, -0.7070,  0.3008, -0.4551, -0.3711,  0.6836,  0.1270, -0.0933, -1.2578],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     11.1875,     20.5000,      8.6250,     -5.8125,    -17.2500,     -6.7500,     -5.4375,    -15.4375,     16.2500,    -13.8750,      7.5000,     20.3750,     -6.9375,      4.8125],
        [     0.0000,      0.1338,     13.7500,      5.2188,    -12.1250,    -14.3125,     -4.0625,     -8.0625,    -14.6250,     11.0000,    -18.2500,      8.1875,     14.9375,     -8.5000,      5.2188],
        [     0.0000,     -0.3926,     -9.3125,     -3.5938,      6.5312,      7.0000,      2.8125,      0.4961,      8.1250,     -5.5312,      7.7500,     -3.9375,     -8.4375,      5.8125,     -3.8125],
        [     0.0000,      5.2500,      9.5625,      4.4688,     -2.3750,     -7.3750,     -3.4219,     -1.0938,     -6.9375,      7.6875,     -5.6562,      3.2812,      9.9375,     -3.1094,      2.1406],
        [     0.0000,      0.4492,      0.1973,      0.4941,      0.9180,      1.9766,      0.1992,      2.5312,      1.5547,     -0.3965,      2.5469,     -0.2832,      0.0349,      0.8086,     -0.3516],
        [     0.0000,      5.4062,      3.8906,      2.0312,      1.2344,     -4.1562,     -1.7344,     -0.3789,     -3.0312,      4.8438,     -1.0859,      0.3535,      4.2812,     -1.0391,      0.6172],
        [     0.0000,     -4.1250,      6.5312,      2.4375,    -10.3750,     -8.0625,     -2.3125,     -5.8125,     -9.3125,      4.5000,    -13.4375,      5.1562,      7.2812,     -6.3125,      3.0781],
        [     0.0000,      5.4688,      8.8750,      4.1562,     -0.9883,     -6.1562,     -3.0938,     -0.3691,     -5.4375,      7.0938,     -3.6250,      2.8906,      9.1875,     -2.1875,      1.7812],
        [     0.0000,    -14.2500,    -16.8750,     -7.3125,     -0.4668,     13.6250,      5.4375,      1.9453,     10.7500,    -15.0625,      6.1875,     -4.1250,    -15.7500,      4.4062,     -3.0000],
        [     0.0000,     14.1250,     12.6875,      6.4688,      4.2500,     -7.5625,     -4.4062,      1.1797,     -5.6250,     11.3750,      0.4375,      2.1094,     12.8125,     -1.1406,      0.8867],
        [     0.0000,    -11.8125,    -17.5000,     -7.7812,      1.8984,     12.8750,      5.8750,      1.3359,     11.7500,    -14.4375,      7.7812,     -5.4688,    -16.5000,      5.6875,     -3.9844],
        [     0.0000,    -14.5625,    -14.9375,     -6.6562,     -2.7812,     11.2500,      4.4375,      0.5938,      8.3125,    -13.2500,      2.6094,     -3.0938,    -14.6250,      2.3281,     -2.5938],
        [     0.0000,      3.1562,      5.5312,      2.7188,     -1.1328,     -3.7969,     -2.1250,     -0.0101,     -3.6562,      4.2812,     -2.5938,      1.9141,      5.8125,     -1.6484,      0.9805],
        [     0.0000,     -2.2500,     -6.9062,     -2.9688,      2.7500,      3.5156,      2.1719,     -0.4258,      4.7188,     -4.6562,      3.6250,     -3.2188,     -6.6250,      2.9375,     -2.0312]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0000],
        [    0.0000],
        [    0.7194],
        [    0.0031],
        [    0.0181],
        [    0.0143],
        [    0.0002],
        [    0.0057],
        [    0.0001],
        [    0.0000],
        [    0.0071],
        [    0.0020],
        [    0.0328],
        [    0.0398]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0069,     0.9922,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0000,     0.0097,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0016,     0.0000,     0.0000,     0.0066,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6328,     0.0000,     0.1260,     0.0098,     0.2070,     0.0051,     0.0209,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8203,     0.0000,     0.0058,     0.0000,     0.1699,     0.0001,     0.0045,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0084,     0.9922,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0010,     0.0000,     0.0000,     0.0308,     0.0000,     0.0000,     0.4766,     0.0000,     0.4922,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0008,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0513,     0.9414,     0.0000,     0.0012,     0.0003,     0.0000,     0.0010,     0.0002,     0.0000,     0.0008,     0.0000,     0.0051,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0009,     0.0000,     0.0000,     0.0054,     0.0000,     0.0000,     0.1006,     0.0000,     0.8633,     0.0000,     0.0000,     0.0302,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0281,  0.0036, -0.0518,  ..., -0.0374, -0.0333, -0.0179],
        [-0.0436, -0.0320,  0.0429,  ...,  0.0250,  0.0055, -0.0033],
        [-0.0641, -0.0221,  0.0380,  ...,  0.0139,  0.0231,  0.0137],
        ...,
        [ 0.0020, -0.0176,  0.0168,  ..., -0.0317, -0.0072,  0.0168],
        [-0.0138,  0.0177, -0.0262,  ..., -0.0597, -0.0673,  0.0595],
        [ 0.0227,  0.0431, -0.0093,  ..., -0.0390, -0.0043,  0.0004]], device='cuda:0', requires_grad=True)
K: tensor([ 0.4863,  0.5312,  0.1719, -0.5195, -1.7109, -0.1611, -0.3008,  2.0469, -0.7812, -0.2695, -0.3613,  0.8594, -1.3594,  0.5664,  0.5039,  0.0889, -1.0625,  0.9258,  0.3652,  2.1719,  0.5977,  0.3320,  1.5000,  0.9648,  1.1484, -0.8711, -1.0859,  1.4609, -1.1016, -0.9023, -0.2021, -0.0923,
         0.0386,  0.6562, -0.6641, -1.2734, -2.2656, -0.2930,  0.7344, -1.6953,  0.6484, -0.6406,  0.1748,  0.6992,  1.6641, -0.6133, -1.2578, -1.5078,  2.7344, -0.5547,  1.3906,  2.9375,  0.7227,  0.9844, -2.3125, -0.8281,  3.0938, -1.4844, -0.7188,  1.2500,  1.1719,  0.1855, -0.5625, -0.2119],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0051, -0.0009,  0.0447,  ...,  0.0297,  0.0256, -0.0418],
        [ 0.0003, -0.0165, -0.0202,  ...,  0.0389, -0.0183, -0.0046],
        [ 0.0511, -0.0229, -0.0262,  ..., -0.0386, -0.0396, -0.0057],
        ...,
        [-0.0079,  0.0379, -0.0170,  ...,  0.0245,  0.0233,  0.0170],
        [-0.0065, -0.0083,  0.0180,  ...,  0.0050,  0.0164, -0.0353],
        [-0.0322, -0.0457,  0.0236,  ...,  0.0091,  0.0186, -0.0152]], device='cuda:0', requires_grad=True)
Q: tensor([     1.2031,      2.2188,     -0.9531,     -1.6797,      2.8594,      0.4648,     -1.1094,     -1.0078,      0.9102,     -0.1602,      0.9688,     -3.0469,     -0.4375,     -0.9258,      0.8594,     -0.4141,      0.4922,      1.2188,      0.0036,     -3.8438,     -1.3672,      2.4062,
            -1.6953,      1.1719,     -0.2812,      1.1172,      0.3672,      0.0737,      2.6406,      1.5625,     -0.1426,      2.1719,     -1.6328,     -0.4941,     -1.9219,     -0.3164,      1.5000,      1.1484,     -0.9297,     -0.0315,     -2.2969,      1.8984,     -1.1797,      0.9141,
            -1.4141,     -1.0938,      0.6367,     -0.5039,     -1.6641,      1.9609,      0.4180,     -3.2188,      1.4531,      0.7305,      0.3203,      2.1875,     -2.3594,     -0.2832,      2.9688,     -1.8828,      0.2217,     -1.3438,     -0.7930,     -0.9648], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,    -17.7500,     50.7500,     21.7500,     25.2500,     73.0000,     19.6250,     32.2500,     44.2500,     27.0000,     24.7500,     17.2500,     41.0000,     42.7500,     11.0625],
        [     0.0000,      4.9688,    -44.2500,    -24.2500,    -17.0000,    -59.7500,    -14.9375,    -34.5000,    -26.6250,    -31.6250,    -10.5000,    -21.7500,    -39.5000,    -25.7500,    -13.4375],
        [     0.0000,    -10.6250,     -4.6250,     -8.5000,     -0.7812,     -6.4375,     -2.8594,    -12.5000,      5.1875,    -14.1250,      9.8125,     -9.7500,    -10.5000,      4.6562,     -8.1875],
        [     0.0000,    -12.5000,     24.5000,      9.3125,      8.1875,     31.6250,      6.1562,     12.1250,     19.7500,      7.7812,     14.0625,      6.0625,     17.1250,     18.7500,      2.0781],
        [     0.0000,     -6.4688,    -13.3125,    -11.1250,     -5.0000,    -18.7500,     -5.6562,    -16.3750,     -2.7969,    -17.3750,      4.5312,    -11.6250,    -15.9375,     -2.9844,     -8.6875],
        [     0.0000,    -11.4375,     -1.6172,     -4.1562,     -1.1172,     -4.8125,     -3.4062,     -8.2500,      2.3281,     -9.5625,      7.6562,     -5.1562,     -6.7188,      1.8203,     -6.0625],
        [     0.0000,    -18.5000,     -4.9688,    -11.1250,     -1.5781,     -9.3750,     -5.2188,    -17.8750,      6.7188,    -20.3750,     15.1875,    -13.0625,    -14.8750,      5.8125,    -12.5625],
        [     0.0000,      4.7812,    -16.7500,     -5.4375,     -6.6562,    -23.1250,     -5.1250,     -8.0625,    -14.8125,     -5.8750,     -9.7500,     -3.5625,    -11.5000,    -14.1250,     -1.0938],
        [     0.0000,    -27.8750,     35.5000,      6.6250,     13.2500,     45.7500,      7.5625,      7.7188,     37.2500,     -0.0001,     32.0000,      0.5859,     17.6250,     35.0000,     -4.9062],
        [     0.0000,     18.5000,    -45.2500,    -16.5000,    -17.5000,    -59.7500,    -12.8750,    -22.7500,    -37.5000,    -16.6250,    -26.0000,    -11.5625,    -31.7500,    -35.7500,     -3.7188],
        [     0.0000,    -16.1250,     11.6250,     -2.0625,      4.8750,     15.0625,      1.5938,     -3.5938,     17.7500,     -7.5312,     17.7500,     -5.1562,      1.4531,     16.6250,     -6.2500],
        [     0.0000,    -11.0000,    -14.1875,    -13.0625,     -4.2500,    -20.6250,     -6.5312,    -19.8750,     -1.8516,    -20.2500,      7.1875,    -13.5000,    -19.3750,     -2.2031,    -11.1250],
        [     0.0000,      2.9062,    -12.5625,     -3.7500,     -5.0000,    -17.5000,     -3.9062,     -5.7812,    -11.4375,     -4.1250,     -7.4688,     -2.3125,     -8.4375,    -10.9375,     -0.5977],
        [     0.0000,    -20.5000,     11.8750,     -1.4219,      5.1562,     13.6875,      0.5703,     -4.1562,     16.6250,     -7.4688,     18.7500,     -4.1875,      0.6836,     15.3750,     -6.9688]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    1.0000],
        [    0.3632],
        [    0.8289],
        [    0.0001],
        [    0.6967],
        [    0.5152],
        [    0.4928],
        [    0.1783],
        [    0.0508],
        [    0.0560],
        [    0.1020],
        [    0.2375],
        [    0.1606],
        [    0.0738]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2158,     0.7852,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3281,     0.2891,     0.3828,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1904,     0.2715,     0.3203,     0.2178,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2910,     0.1069,     0.2578,     0.0781,     0.2656,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1328,     0.2021,     0.1846,     0.1338,     0.0391,     0.3066,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0762,     0.1299,     0.2354,     0.1357,     0.1455,     0.2061,     0.0723,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0830,     0.1030,     0.1235,     0.0608,     0.0339,     0.0674,     0.0894,     0.4395,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0031,     0.0022,     0.0088,     0.0019,     0.0069,     0.0139,     0.0016,     0.0449,     0.9180,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0098,     0.0066,     0.0063,     0.0037,     0.0047,     0.0062,     0.0083,     0.0522,     0.8906,     0.0099,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0006,     0.0003,     0.0012,     0.0002,     0.0006,     0.0011,     0.0003,     0.0117,     0.9688,     0.0029,     0.0135,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0173,     0.0178,     0.0144,     0.0099,     0.0088,     0.0101,     0.0193,     0.0938,     0.7266,     0.0199,     0.0464,     0.0173,     0.0000,     0.0000,     0.0000],
        [    0.0026,     0.0029,     0.0035,     0.0014,     0.0007,     0.0021,     0.0019,     0.0211,     0.9023,     0.0041,     0.0294,     0.0043,     0.0239,     0.0000,     0.0000],
        [    0.0013,     0.0009,     0.0036,     0.0007,     0.0030,     0.0057,     0.0007,     0.0204,     0.4375,     0.0159,     0.0178,     0.0043,     0.0322,     0.4570,     0.0000],
        [    0.0090,     0.0084,     0.0159,     0.0087,     0.0123,     0.0096,     0.0081,     0.0747,     0.2812,     0.0369,     0.0605,     0.0354,     0.0977,     0.3027,     0.0405]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0202,  0.0182, -0.0362,  ...,  0.0080,  0.0243,  0.0017],
        [ 0.0171,  0.0028, -0.0080,  ..., -0.0065, -0.0074, -0.0220],
        [-0.0200,  0.0405, -0.0045,  ..., -0.0220,  0.0147,  0.0143],
        ...,
        [ 0.0270, -0.0039,  0.0004,  ...,  0.0361, -0.0093, -0.0144],
        [ 0.0146, -0.0013, -0.0282,  ...,  0.0378, -0.0330,  0.0062],
        [-0.0114, -0.0190,  0.0283,  ...,  0.0168, -0.0145, -0.0087]], device='cuda:0', requires_grad=True)
K: tensor([ 0.3945,  0.2139, -1.1406, -0.7422,  0.7773, -0.5391, -0.1118,  0.4609, -0.0576, -0.9336, -0.4570, -0.8711, -0.1006,  0.4766, -0.9414,  0.2598, -1.3359,  1.2109, -0.8164, -1.2969,  0.1367,  0.7031, -0.8008,  0.3574, -0.9297, -0.2617, -0.1846, -0.6133,  1.0469, -0.6328, -0.5000, -0.5781,
        -1.2031, -0.9570,  0.4004,  0.2812, -0.0099,  0.8750,  0.7383,  0.1104,  0.4902, -0.1631,  1.0234, -0.8359,  0.4395, -0.3887, -0.5195,  0.3203, -0.4902,  0.1875, -0.5117,  0.0099, -0.8984, -0.2520, -0.2197, -0.6797, -0.0771, -0.1641, -0.9219, -0.4180, -0.2520,  0.6289,  0.1699, -0.0369],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0124, -0.0109,  0.0136,  ...,  0.0200,  0.0087,  0.0033],
        [ 0.0139, -0.0011,  0.0174,  ..., -0.0335,  0.0065,  0.0229],
        [-0.0246,  0.0149,  0.0042,  ...,  0.0329,  0.0086,  0.0137],
        ...,
        [-0.0133,  0.0384,  0.0096,  ..., -0.0049, -0.0105, -0.0218],
        [ 0.0296, -0.0017, -0.0461,  ..., -0.0422, -0.0045,  0.0326],
        [-0.0300,  0.0171, -0.0444,  ..., -0.0082,  0.0211, -0.0259]], device='cuda:0', requires_grad=True)
Q: tensor([-0.6094, -0.7461,  0.0522,  0.3594,  0.0815,  0.1924,  0.5820,  0.4336, -0.4902,  0.7500, -0.9844, -0.9180, -1.0781, -0.3047, -2.2969, -0.8750, -0.3398,  0.7148, -0.9922, -0.4238,  0.0835,  0.0371,  0.8438,  0.3027, -0.8711,  0.1230, -0.9219, -0.3027,  1.6953, -0.3984,  0.3789, -0.2715,
        -0.0679,  0.4668,  0.9180, -1.1797,  0.8438,  0.0262, -0.4805, -0.3242,  0.1592, -0.3047,  1.5156, -0.7617,  0.6523, -1.3594,  0.7109,  0.2168, -0.6641, -0.0615, -0.2148, -0.7461, -1.5156, -0.7031,  0.1855,  0.0311, -0.6328,  0.5000, -0.7305, -0.3633, -1.0938, -0.1846, -0.2891,  0.4609],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      1.2891,      0.3535,      1.0000,     -0.7656,      0.1299,      0.3027,     -1.4453,     -3.0000,     -1.1016,     -1.1953,     -0.3906,     -1.8438,     -3.1094,     -1.3281],
        [     0.0000,     -0.1260,      0.1533,     -0.8359,     -1.5781,     -0.0591,     -0.3281,      1.9688,      6.5000,     -0.1309,      2.8281,      0.0388,      2.2812,      6.5312,      0.7383],
        [     0.0000,      0.3535,      0.5156,      0.1328,      0.2139,      0.0781,      0.3535,      0.9844,      1.3594,      0.6172,      0.4062,      0.4414,      0.7812,      1.3828,      0.3125],
        [     0.0000,     -1.0000,     -0.1162,     -1.3125,     -0.0884,      0.2324,     -0.5352,      2.9219,      7.3125,      1.3594,      2.7500,      0.2236,      3.2344,      7.4375,      1.5156],
        [     0.0000,      0.4219,      0.3340,      0.0110,     -1.2188,      0.8398,     -0.5781,      0.5625,      3.0938,     -0.1318,      1.5312,     -0.1582,      0.7305,      3.0469,     -0.2637],
        [     0.0000,      0.5352,      1.1250,      0.5742,      0.6445,      0.9961,     -0.0515,      1.7422,      2.7031,      1.7656,      1.6562,      1.2266,      1.7500,      2.7031,      0.8828],
        [     0.0000,      0.2158,      0.3965,     -0.3145,     -0.8984,     -0.2109,      0.0693,      1.6641,      4.2500,      0.3086,      1.5781,      0.2793,      1.5938,      4.2500,      0.5820],
        [     0.0000,     -0.3320,      1.0391,     -0.4980,      0.7930,      1.4922,     -0.6758,      2.6719,      5.6875,      2.4062,      2.5625,      1.1719,      3.1094,      5.7188,      1.3125],
        [     0.0000,     -0.3984,     -0.4355,     -0.9844,     -0.7383,     -0.4590,     -0.1689,      1.6719,      4.5000,      0.0175,      1.0781,     -0.6055,      1.7266,      4.5938,      0.5859],
        [     0.0000,     -0.6523,      0.6484,     -0.9180,     -0.1279,      0.5664,     -0.6797,      2.9219,      7.3438,      1.5391,      3.0781,      0.9219,      3.4375,      7.4375,      1.5469],
        [     0.0000,      0.0267,     -0.1855,     -0.5586,     -0.6836,     -0.5391,      0.1040,      1.6875,      3.7344,      0.1357,      0.9805,     -0.0008,      1.6172,      3.8125,      0.7539],
        [     0.0000,      0.1079,      0.3145,     -0.5703,     -1.3516,     -0.2158,     -0.3066,      2.1094,      5.8750,      0.4590,      2.4375,      0.5195,      2.2344,      5.8750,      0.8320],
        [     0.0000,     -0.3789,      1.0312,     -0.5391,      0.8633,      1.5078,     -0.6680,      2.7656,      5.8438,      2.5312,      2.6406,      1.2266,      3.2344,      5.8750,      1.3906],
        [     0.0000,     -0.0776,      0.5664,     -0.0396,      0.3086,      0.0613,     -0.1084,      2.1094,      3.4375,      1.4062,      1.9062,      1.3672,      2.3750,      3.5156,      1.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.1589],
        [0.1905],
        [0.1240],
        [0.1150],
        [0.0748],
        [0.0691],
        [0.0668],
        [0.0252],
        [0.0622],
        [0.0151],
        [0.0479],
        [0.0261],
        [0.0117],
        [0.0302]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.1611 not:0.0457,:0.0344 and:0.1157,:0.0216,:0.1885 the:0.0425al:0.0564)
al
------
		( not:0.0457,:0.0344 and:0.1157,:0.0216,:0.1885 the:0.0425al:0.0564,:0.0583)
, and the same, and the same, and the same, and the
@ 1050 train 6.0989 , allloss: 10.9749, dt: 1588.83ms, fracRes: 0.3426, norm(attn): 0.1279, norm(output): 3.0000, norm(x): 3.2928, norm(y): 1.0013, norm:13.6362, tok/sec: 82496.15, flops:86.58, batch-reuse:1
@ 1051 train 6.0441 , allloss: 13.5935, dt: 1221.80ms, fracRes: 0.3421, norm(attn): 0.1377, norm(output): 2.9844, norm(x): 3.2965, norm(y): 1.0016, norm:20.6450, tok/sec: 107278.13, flops:112.59, batch-reuse:1
@ 1052 train 6.0797 , allloss: 15.5416, dt: 1225.93ms, fracRes: 0.3404, norm(attn): 0.1436, norm(output): 2.9844, norm(x): 3.3200, norm(y): 1.0016, norm:17.7857, tok/sec: 106916.57, flops:112.21, batch-reuse:1
@ 1053 train 6.0800 , allloss: 16.0695, dt: 1195.43ms, fracRes: 0.3401, norm(attn): 0.1455, norm(output): 2.9844, norm(x): 3.3427, norm(y): 1.0016, norm:12.7669, tok/sec: 109644.64, flops:115.07, batch-reuse:1
@ 1054 train 6.0194 , allloss: 17.3921, dt: 1218.06ms, fracRes: 0.3408, norm(attn): 0.1455, norm(output): 2.9844, norm(x): 3.3659, norm(y): 1.0014, norm:12.6402, tok/sec: 107607.05, flops:112.94, batch-reuse:1
@ 1055 train 6.0006 , allloss: 13.7708, dt: 1192.58ms, fracRes: 0.3407, norm(attn): 0.1475, norm(output): 2.9844, norm(x): 3.3757, norm(y): 1.0014, norm:11.8181, tok/sec: 109906.47, flops:115.35, batch-reuse:1
@ 1056 train 6.0081 , allloss: 12.5713, dt: 1224.06ms, fracRes: 0.3400, norm(attn): 0.1494, norm(output): 2.9844, norm(x): 3.3754, norm(y): 1.0014, norm:9.7070, tok/sec: 107079.34, flops:112.38, batch-reuse:1
@ 1057 train 6.0487 , allloss: 13.5405, dt: 1208.68ms, fracRes: 0.3396, norm(attn): 0.1504, norm(output): 2.9844, norm(x): 3.3874, norm(y): 1.0014, norm:12.7995, tok/sec: 108442.55, flops:113.81, batch-reuse:1
@ 1058 train 6.0410 , allloss: 16.9753, dt: 1195.32ms, fracRes: 0.3391, norm(attn): 0.1533, norm(output): 2.9844, norm(x): 3.4010, norm(y): 1.0014, norm:44.5429, tok/sec: 109654.66, flops:115.08, batch-reuse:1
@ 1059 train 6.0254 , allloss: 31.3399, dt: 1199.29ms, fracRes: 0.3390, norm(attn): 0.1543, norm(output): 3.0000, norm(x): 3.4092, norm(y): 1.0013, norm:212.3488, tok/sec: 109291.78, flops:114.70, batch-reuse:1
@ 1060 train 6.1064 , allloss: 35.9363, dt: 1221.85ms, fracRes: 0.3384, norm(attn): 0.1562, norm(output): 2.9844, norm(x): 3.4114, norm(y): 1.0013, norm:212.2306, tok/sec: 107273.78, flops:112.59, batch-reuse:1
@ 1061 train 6.1828 , allloss: 29.8483, dt: 1247.61ms, fracRes: 0.3341, norm(attn): 0.1660, norm(output): 2.9844, norm(x): 3.4163, norm(y): 1.0013, norm:131.1210, tok/sec: 105058.70, flops:110.26, batch-reuse:1
@ 1062 train 6.1739 , allloss: 34.1597, dt: 1217.17ms, fracRes: 0.3255, norm(attn): 0.1797, norm(output): 2.9844, norm(x): 3.4172, norm(y): 1.0013, norm:107.5968, tok/sec: 107685.50, flops:113.02, batch-reuse:1
@ 1063 train 6.1774 , allloss: 19.7553, dt: 1198.42ms, fracRes: 0.3385, norm(attn): 0.1621, norm(output): 2.9688, norm(x): 3.4057, norm(y): 1.0014, norm:18.1045, tok/sec: 109370.95, flops:114.79, batch-reuse:1
@ 1064 train 6.1554 , allloss: 20.1616, dt: 1210.36ms, fracRes: 0.3389, norm(attn): 0.1543, norm(output): 2.9531, norm(x): 3.3806, norm(y): 1.0015, norm:13.5875, tok/sec: 108291.98, flops:113.65, batch-reuse:1
@ 1065 train 6.1513 , allloss: 18.0406, dt: 1213.77ms, fracRes: 0.3392, norm(attn): 0.1533, norm(output): 2.9531, norm(x): 3.3830, norm(y): 1.0016, norm:11.0045, tok/sec: 107987.18, flops:113.33, batch-reuse:1
@ 1066 train 6.0986 , allloss: 17.8692, dt: 1233.59ms, fracRes: 0.3396, norm(attn): 0.1484, norm(output): 2.9531, norm(x): 3.4147, norm(y): 1.0016, norm:17.6905, tok/sec: 106252.70, flops:111.51, batch-reuse:1
@ 1067 train 6.0756 , allloss: 16.9570, dt: 1245.93ms, fracRes: 0.3402, norm(attn): 0.1455, norm(output): 2.9688, norm(x): 3.4388, norm(y): 1.0016, norm:17.4893, tok/sec: 105200.07, flops:110.41, batch-reuse:1
@ 1068 train 6.0667 , allloss: 14.8192, dt: 1243.75ms, fracRes: 0.3402, norm(attn): 0.1426, norm(output): 2.9531, norm(x): 3.4241, norm(y): 1.0016, norm:13.2588, tok/sec: 105384.80, flops:110.60, batch-reuse:1
@ 1069 train 5.9711 , allloss: 13.4204, dt: 1226.26ms, fracRes: 0.3398, norm(attn): 0.1396, norm(output): 2.9688, norm(x): 3.4362, norm(y): 1.0017, norm:10.9703, tok/sec: 106887.49, flops:112.18, batch-reuse:1
@ 1070 train 6.0194 , allloss: 13.8385, dt: 1213.72ms, fracRes: 0.3389, norm(attn): 0.1406, norm(output): 2.9844, norm(x): 3.4636, norm(y): 1.0018, norm:11.2904, tok/sec: 107991.63, flops:113.34, batch-reuse:1
@ 1071 train 5.9121 , allloss: 11.7134, dt: 1241.10ms, fracRes: 0.3394, norm(attn): 0.1387, norm(output): 2.9688, norm(x): 3.4458, norm(y): 1.0018, norm:9.1208, tok/sec: 105609.82, flops:110.84, batch-reuse:1
@ 1072 train 6.0138 , allloss: 10.8755, dt: 1236.28ms, fracRes: 0.3399, norm(attn): 0.1377, norm(output): 2.9844, norm(x): 3.4696, norm(y): 1.0019, norm:7.3023, tok/sec: 106021.05, flops:111.27, batch-reuse:1
@ 1073 train 5.9998 , allloss: 10.4049, dt: 1248.67ms, fracRes: 0.3398, norm(attn): 0.1328, norm(output): 2.9844, norm(x): 3.4695, norm(y): 1.0022, norm:6.8353, tok/sec: 104968.90, flops:110.17, batch-reuse:1
@ 1074 train 6.0043 , allloss: 9.7304, dt: 1206.15ms, fracRes: 0.3408, norm(attn): 0.1357, norm(output): 3.0000, norm(x): 3.5078, norm(y): 1.0022, norm:5.8049, tok/sec: 108669.60, flops:114.05, batch-reuse:1
@ 1075 train 6.0214 , allloss: 11.7588, dt: 1227.40ms, fracRes: 0.3428, norm(attn): 0.1299, norm(output): 3.0000, norm(x): 3.4892, norm(y): 1.0023, norm:15.0155, tok/sec: 106788.62, flops:112.08, batch-reuse:1
@ 1076 train 6.1422 , allloss: 14.2234, dt: 1193.83ms, fracRes: 0.3461, norm(attn): 0.1250, norm(output): 3.0312, norm(x): 3.5161, norm(y): 1.0021, norm:22.8143, tok/sec: 109791.33, flops:115.23, batch-reuse:1
@ 1077 train 6.0477 , allloss: 14.5019, dt: 1221.18ms, fracRes: 0.3473, norm(attn): 0.1260, norm(output): 3.0312, norm(x): 3.4981, norm(y): 1.0022, norm:19.5040, tok/sec: 107331.86, flops:112.65, batch-reuse:1
@ 1078 train 6.2828 , allloss: 17.6726, dt: 1242.40ms, fracRes: 0.3484, norm(attn): 0.1250, norm(output): 3.0469, norm(x): 3.4897, norm(y): 1.0020, norm:20.7750, tok/sec: 105498.64, flops:110.72, batch-reuse:1
@ 1079 train 5.9607 , allloss: 15.6267, dt: 1239.53ms, fracRes: 0.3505, norm(attn): 0.1328, norm(output): 3.0000, norm(x): 3.3980, norm(y): 1.0021, norm:16.3442, tok/sec: 105743.12, flops:110.98, batch-reuse:1
@ 1080 train 6.0297 , allloss: 15.7905, dt: 1238.38ms, fracRes: 0.3518, norm(attn): 0.1377, norm(output): 3.0000, norm(x): 3.3707, norm(y): 1.0021, norm:18.6479, tok/sec: 105841.57, flops:111.08, batch-reuse:1
@ 1081 train 6.0419 , allloss: 15.5678, dt: 1230.67ms, fracRes: 0.3553, norm(attn): 0.1406, norm(output): 3.0156, norm(x): 3.3549, norm(y): 1.0023, norm:12.0402, tok/sec: 106504.34, flops:111.78, batch-reuse:1
@ 1082 train 6.1889 , allloss: 16.1532, dt: 1212.53ms, fracRes: 0.3585, norm(attn): 0.1338, norm(output): 3.0156, norm(x): 3.3089, norm(y): 1.0023, norm:16.5277, tok/sec: 108098.10, flops:113.45, batch-reuse:1
@ 1083 train 6.0164 , allloss: 15.7118, dt: 1218.40ms, fracRes: 0.3607, norm(attn): 0.1309, norm(output): 3.0156, norm(x): 3.2719, norm(y): 1.0024, norm:12.6952, tok/sec: 107577.15, flops:112.90, batch-reuse:1
@ 1084 train 5.9298 , allloss: 16.8101, dt: 1216.90ms, fracRes: 0.3605, norm(attn): 0.1279, norm(output): 3.0156, norm(x): 3.2875, norm(y): 1.0023, norm:18.7401, tok/sec: 107709.58, flops:113.04, batch-reuse:1
@ 1085 train 6.0987 , allloss: 15.0675, dt: 1227.05ms, fracRes: 0.3652, norm(attn): 0.1299, norm(output): 3.0312, norm(x): 3.2759, norm(y): 1.0017, norm:13.7244, tok/sec: 106818.83, flops:112.11, batch-reuse:1
@ 1086 train 6.0243 , allloss: 11.9821, dt: 1244.37ms, fracRes: 0.3609, norm(attn): 0.1260, norm(output): 3.0000, norm(x): 3.2380, norm(y): 1.0020, norm:11.1137, tok/sec: 105331.94, flops:110.55, batch-reuse:1
@ 1087 train 5.9606 , allloss: 14.0366, dt: 1222.10ms, fracRes: 0.3632, norm(attn): 0.1250, norm(output): 3.0469, norm(x): 3.2412, norm(y): 1.0021, norm:13.6991, tok/sec: 107251.53, flops:112.56, batch-reuse:1
@ 1088 train 6.0793 , allloss: 17.4981, dt: 1211.93ms, fracRes: 0.3637, norm(attn): 0.1235, norm(output): 3.0938, norm(x): 3.2661, norm(y): 1.0021, norm:18.4744, tok/sec: 108151.07, flops:113.51, batch-reuse:1
@ 1089 train 5.9935 , allloss: 18.7766, dt: 1216.97ms, fracRes: 0.3693, norm(attn): 0.1221, norm(output): 3.0625, norm(x): 3.1940, norm(y): 1.0023, norm:30.1776, tok/sec: 107703.69, flops:113.04, batch-reuse:1
@ 1090 train 6.0016 , allloss: 19.1365, dt: 1215.97ms, fracRes: 0.3730, norm(attn): 0.1240, norm(output): 3.0781, norm(x): 3.1284, norm(y): 1.0023, norm:39.6966, tok/sec: 107791.94, flops:113.13, batch-reuse:1
@ 1091 train 6.0398 , allloss: 17.1868, dt: 1228.53ms, fracRes: 0.3737, norm(attn): 0.1230, norm(output): 3.1250, norm(x): 3.1554, norm(y): 1.0022, norm:19.2070, tok/sec: 106690.09, flops:111.97, batch-reuse:1
@ 1092 train 6.1003 , allloss: 17.6488, dt: 1244.83ms, fracRes: 0.3755, norm(attn): 0.1211, norm(output): 3.1094, norm(x): 3.1405, norm(y): 1.0019, norm:28.5012, tok/sec: 105293.22, flops:110.51, batch-reuse:1
@ 1093 train 5.9683 , allloss: 17.3006, dt: 1241.60ms, fracRes: 0.3753, norm(attn): 0.1182, norm(output): 3.1562, norm(x): 3.1266, norm(y): 1.0021, norm:30.0845, tok/sec: 105567.41, flops:110.79, batch-reuse:1
@ 1094 train 5.9700 , allloss: 15.5711, dt: 1230.50ms, fracRes: 0.3755, norm(attn): 0.1162, norm(output): 3.1562, norm(x): 3.1278, norm(y): 1.0022, norm:12.4981, tok/sec: 106519.67, flops:111.79, batch-reuse:1
@ 1095 train 5.9537 , allloss: 14.7107, dt: 1220.48ms, fracRes: 0.3760, norm(attn): 0.1187, norm(output): 3.1250, norm(x): 3.1175, norm(y): 1.0026, norm:16.5859, tok/sec: 107393.42, flops:112.71, batch-reuse:1
@ 1096 train 5.9994 , allloss: 13.6486, dt: 1185.64ms, fracRes: 0.3752, norm(attn): 0.1167, norm(output): 3.1562, norm(x): 3.1368, norm(y): 1.0026, norm:13.4323, tok/sec: 110549.23, flops:116.02, batch-reuse:1
@ 1097 train 5.9131 , allloss: 12.9017, dt: 1201.05ms, fracRes: 0.3757, norm(attn): 0.1123, norm(output): 3.1562, norm(x): 3.1610, norm(y): 1.0023, norm:11.5889, tok/sec: 109131.11, flops:114.54, batch-reuse:1
@ 1098 train 5.9115 , allloss: 11.8521, dt: 1214.77ms, fracRes: 0.3766, norm(attn): 0.1133, norm(output): 3.1719, norm(x): 3.1566, norm(y): 1.0025, norm:10.0356, tok/sec: 107898.69, flops:113.24, batch-reuse:1
@ 1099 train 5.9513 , allloss: 11.3794, dt: 1224.48ms, fracRes: 0.3737, norm(attn): 0.1108, norm(output): 3.2188, norm(x): 3.2242, norm(y): 1.0022, norm:9.9746, tok/sec: 107043.41, flops:112.34, batch-reuse:1
@ 1100 train 5.9532 , allloss: 10.6691, dt: 1250.19ms, fracRes: 0.3728, norm(attn): 0.1128, norm(output): 3.2344, norm(x): 3.2354, norm(y): 1.0023, norm:8.2086, tok/sec: 104842.00, flops:110.03, batch-reuse:1
@ 1101 train 6.1398 , allloss: 10.0117, dt: 1228.39ms, fracRes: 0.3725, norm(attn): 0.1118, norm(output): 3.2500, norm(x): 3.2553, norm(y): 1.0020, norm:7.7522, tok/sec: 106702.56, flops:111.99, batch-reuse:1
@ 1102 train 6.0866 , allloss: 9.7457, dt: 1212.39ms, fracRes: 0.3700, norm(attn): 0.1123, norm(output): 3.2188, norm(x): 3.2562, norm(y): 1.0025, norm:7.1721, tok/sec: 108110.05, flops:113.46, batch-reuse:1
@ 1103 train 6.1065 , allloss: 9.1560, dt: 1230.78ms, fracRes: 0.3704, norm(attn): 0.1138, norm(output): 3.2344, norm(x): 3.2415, norm(y): 1.0022, norm:5.0958, tok/sec: 106495.18, flops:111.77, batch-reuse:1
@ 1104 train 6.1484 , allloss: 9.0685, dt: 1198.95ms, fracRes: 0.3702, norm(attn): 0.1094, norm(output): 3.2812, norm(x): 3.3052, norm(y): 1.0020, norm:4.8092, tok/sec: 109321.93, flops:114.74, batch-reuse:1
@ 1105 train 6.0297 , allloss: 8.8218, dt: 1217.80ms, fracRes: 0.3703, norm(attn): 0.1113, norm(output): 3.2188, norm(x): 3.2127, norm(y): 1.0022, norm:4.0964, tok/sec: 107630.37, flops:112.96, batch-reuse:1
@ 1106 train 5.9721 , allloss: 8.8981, dt: 1213.25ms, fracRes: 0.3708, norm(attn): 0.1172, norm(output): 3.1875, norm(x): 3.1957, norm(y): 1.0024, norm:4.2940, tok/sec: 108034.16, flops:113.38, batch-reuse:1
@ 1107 train 6.0716 , allloss: 8.8523, dt: 1202.49ms, fracRes: 0.3724, norm(attn): 0.1123, norm(output): 3.2344, norm(x): 3.2314, norm(y): 1.0021, norm:3.9118, tok/sec: 109000.29, flops:114.40, batch-reuse:1
@ 1108 train 5.9622 , allloss: 8.7308, dt: 1194.54ms, fracRes: 0.3754, norm(attn): 0.1104, norm(output): 3.2500, norm(x): 3.1866, norm(y): 1.0021, norm:3.9243, tok/sec: 109725.96, flops:115.16, batch-reuse:1
@ 1109 train 5.9634 , allloss: 8.8838, dt: 1195.16ms, fracRes: 0.3737, norm(attn): 0.1123, norm(output): 3.2500, norm(x): 3.1746, norm(y): 1.0023, norm:5.2986, tok/sec: 109668.83, flops:115.10, batch-reuse:1
@ 1110 train 6.0046 , allloss: 8.7588, dt: 1196.63ms, fracRes: 0.3761, norm(attn): 0.1128, norm(output): 3.2344, norm(x): 3.1770, norm(y): 1.0025, norm:3.2500, tok/sec: 109534.30, flops:114.96, batch-reuse:1
@ 1111 train 5.9236 , allloss: 8.5692, dt: 1212.46ms, fracRes: 0.3788, norm(attn): 0.1143, norm(output): 3.2500, norm(x): 3.1716, norm(y): 1.0026, norm:3.2346, tok/sec: 108104.14, flops:113.46, batch-reuse:1
@ 1112 train 6.1814 , allloss: 8.9895, dt: 1224.50ms, fracRes: 0.3768, norm(attn): 0.1162, norm(output): 3.2812, norm(x): 3.2345, norm(y): 1.0028, norm:3.7040, tok/sec: 107041.37, flops:112.34, batch-reuse:1
@ 1113 train 6.1463 , allloss: 8.9631, dt: 1220.59ms, fracRes: 0.3751, norm(attn): 0.1177, norm(output): 3.2500, norm(x): 3.2333, norm(y): 1.0029, norm:3.7035, tok/sec: 107384.54, flops:112.70, batch-reuse:1
@ 1114 train 6.2497 , allloss: 9.6796, dt: 1241.59ms, fracRes: 0.3747, norm(attn): 0.1235, norm(output): 3.2969, norm(x): 3.2668, norm(y): 1.0028, norm:4.0658, tok/sec: 105568.18, flops:110.80, batch-reuse:1
@ 1115 train 6.1630 , allloss: 9.7183, dt: 1247.31ms, fracRes: 0.3744, norm(attn): 0.1230, norm(output): 3.2812, norm(x): 3.2905, norm(y): 1.0026, norm:4.2333, tok/sec: 105083.57, flops:110.29, batch-reuse:1
@ 1116 train 6.0571 , allloss: 9.2175, dt: 1225.77ms, fracRes: 0.3742, norm(attn): 0.1187, norm(output): 3.2500, norm(x): 3.2804, norm(y): 1.0032, norm:3.8090, tok/sec: 106930.03, flops:112.23, batch-reuse:1
@ 1117 train 6.0619 , allloss: 9.1002, dt: 1199.92ms, fracRes: 0.3734, norm(attn): 0.1201, norm(output): 3.2969, norm(x): 3.2986, norm(y): 1.0028, norm:3.7343, tok/sec: 109234.32, flops:114.64, batch-reuse:1
@ 1118 train 6.1281 , allloss: 9.3727, dt: 1215.34ms, fracRes: 0.3735, norm(attn): 0.1187, norm(output): 3.2812, norm(x): 3.3007, norm(y): 1.0029, norm:4.3401, tok/sec: 107848.38, flops:113.19, batch-reuse:1
@ 1119 train 6.1150 , allloss: 10.5518, dt: 1211.36ms, fracRes: 0.3735, norm(attn): 0.1177, norm(output): 3.2969, norm(x): 3.3019, norm(y): 1.0030, norm:6.5247, tok/sec: 108202.76, flops:113.56, batch-reuse:1
@ 1120 train 6.1116 , allloss: 11.9238, dt: 1207.09ms, fracRes: 0.3740, norm(attn): 0.1191, norm(output): 3.3281, norm(x): 3.3064, norm(y): 1.0030, norm:8.8440, tok/sec: 108585.12, flops:113.96, batch-reuse:1
@ 1121 train 6.1725 , allloss: 12.4255, dt: 1203.86ms, fracRes: 0.3733, norm(attn): 0.1221, norm(output): 3.3125, norm(x): 3.3289, norm(y): 1.0027, norm:9.0483, tok/sec: 108876.31, flops:114.27, batch-reuse:1
@ 1122 train 6.1431 , allloss: 13.4570, dt: 1209.98ms, fracRes: 0.3736, norm(attn): 0.1226, norm(output): 3.3125, norm(x): 3.3360, norm(y): 1.0026, norm:10.4895, tok/sec: 108325.71, flops:113.69, batch-reuse:1
@ 1123 train 6.0748 , allloss: 13.7009, dt: 1245.13ms, fracRes: 0.3739, norm(attn): 0.1260, norm(output): 3.2969, norm(x): 3.3255, norm(y): 1.0026, norm:9.9359, tok/sec: 105268.02, flops:110.48, batch-reuse:1
@ 1124 train 6.1059 , allloss: 14.3806, dt: 1232.08ms, fracRes: 0.3743, norm(attn): 0.1245, norm(output): 3.3594, norm(x): 3.3317, norm(y): 1.0028, norm:15.2750, tok/sec: 106383.01, flops:111.65, batch-reuse:1
@ 1125 train 6.1429 , allloss: 13.0402, dt: 1223.57ms, fracRes: 0.3762, norm(attn): 0.1221, norm(output): 3.4375, norm(x): 3.3480, norm(y): 1.0027, norm:8.7973, tok/sec: 107122.86, flops:112.43, batch-reuse:1
@ 1126 train 6.0984 , allloss: 10.8470, dt: 1238.73ms, fracRes: 0.3767, norm(attn): 0.1226, norm(output): 3.4688, norm(x): 3.3504, norm(y): 1.0029, norm:6.6157, tok/sec: 105811.32, flops:111.05, batch-reuse:1
@ 1127 train 6.0743 , allloss: 10.6775, dt: 1221.61ms, fracRes: 0.3765, norm(attn): 0.1230, norm(output): 3.4531, norm(x): 3.3440, norm(y): 1.0028, norm:7.4506, tok/sec: 107294.34, flops:112.61, batch-reuse:1
@ 1128 train 6.0752 , allloss: 11.9248, dt: 1214.57ms, fracRes: 0.3773, norm(attn): 0.1235, norm(output): 3.5156, norm(x): 3.3608, norm(y): 1.0026, norm:8.6922, tok/sec: 107916.27, flops:113.26, batch-reuse:1
@ 1129 train 6.0957 , allloss: 12.1973, dt: 1226.47ms, fracRes: 0.3772, norm(attn): 0.1250, norm(output): 3.5000, norm(x): 3.3443, norm(y): 1.0024, norm:9.0156, tok/sec: 106869.14, flops:112.16, batch-reuse:1
@ 1130 train 6.0544 , allloss: 12.6536, dt: 1228.70ms, fracRes: 0.3767, norm(attn): 0.1250, norm(output): 3.5156, norm(x): 3.3480, norm(y): 1.0022, norm:9.8072, tok/sec: 106675.21, flops:111.96, batch-reuse:1
@ 1131 train 6.1281 , allloss: 12.3781, dt: 1188.83ms, fracRes: 0.3764, norm(attn): 0.1270, norm(output): 3.5469, norm(x): 3.3582, norm(y): 1.0022, norm:9.5578, tok/sec: 110253.01, flops:115.71, batch-reuse:1
@ 1132 train 6.1178 , allloss: 11.9567, dt: 1214.12ms, fracRes: 0.3763, norm(attn): 0.1245, norm(output): 3.5469, norm(x): 3.3561, norm(y): 1.0021, norm:10.9289, tok/sec: 107956.15, flops:113.30, batch-reuse:1
@ 1133 train 6.1060 , allloss: 10.9077, dt: 1235.79ms, fracRes: 0.3764, norm(attn): 0.1250, norm(output): 3.6094, norm(x): 3.3749, norm(y): 1.0021, norm:7.6430, tok/sec: 106063.27, flops:111.32, batch-reuse:1
@ 1134 train 6.0742 , allloss: 10.5783, dt: 1205.31ms, fracRes: 0.3765, norm(attn): 0.1216, norm(output): 3.5938, norm(x): 3.3656, norm(y): 1.0021, norm:8.3177, tok/sec: 108745.59, flops:114.13, batch-reuse:1
@ 1135 train 6.0466 , allloss: 10.2084, dt: 1218.87ms, fracRes: 0.3763, norm(attn): 0.1226, norm(output): 3.5625, norm(x): 3.3517, norm(y): 1.0020, norm:8.1071, tok/sec: 107535.78, flops:112.86, batch-reuse:1
@ 1136 train 6.1089 , allloss: 10.1585, dt: 1200.05ms, fracRes: 0.3767, norm(attn): 0.1216, norm(output): 3.7344, norm(x): 3.3775, norm(y): 1.0018, norm:7.0596, tok/sec: 109222.19, flops:114.63, batch-reuse:1
@ 1137 train 6.0784 , allloss: 10.1247, dt: 1205.07ms, fracRes: 0.3776, norm(attn): 0.1191, norm(output): 3.6719, norm(x): 3.3620, norm(y): 1.0018, norm:5.9978, tok/sec: 108766.89, flops:114.15, batch-reuse:1
@ 1138 train 6.2118 , allloss: 10.5026, dt: 1224.40ms, fracRes: 0.3777, norm(attn): 0.1245, norm(output): 3.7031, norm(x): 3.3758, norm(y): 1.0016, norm:7.3726, tok/sec: 107049.65, flops:112.35, batch-reuse:1
@ 1139 train 6.0275 , allloss: 12.5939, dt: 1211.96ms, fracRes: 0.3788, norm(attn): 0.1235, norm(output): 3.6406, norm(x): 3.3576, norm(y): 1.0017, norm:8.1870, tok/sec: 108148.48, flops:113.50, batch-reuse:1
@ 1140 train 6.0682 , allloss: 12.8788, dt: 1196.70ms, fracRes: 0.3790, norm(attn): 0.1230, norm(output): 3.6875, norm(x): 3.3922, norm(y): 1.0015, norm:8.8130, tok/sec: 109527.55, flops:114.95, batch-reuse:1
@ 1141 train 5.9835 , allloss: 11.4783, dt: 1216.85ms, fracRes: 0.3813, norm(attn): 0.1201, norm(output): 3.6250, norm(x): 3.3745, norm(y): 1.0018, norm:7.8235, tok/sec: 107714.37, flops:113.05, batch-reuse:1
@ 1142 train 6.0048 , allloss: 14.4780, dt: 1208.65ms, fracRes: 0.3821, norm(attn): 0.1240, norm(output): 3.5156, norm(x): 3.3471, norm(y): 1.0019, norm:11.6800, tok/sec: 108445.25, flops:113.82, batch-reuse:1
@ 1143 train 6.0372 , allloss: 15.2926, dt: 1221.97ms, fracRes: 0.3811, norm(attn): 0.1235, norm(output): 3.5156, norm(x): 3.3732, norm(y): 1.0009, norm:11.6934, tok/sec: 107262.50, flops:112.57, batch-reuse:1
@ 1144 train 6.0730 , allloss: 14.5261, dt: 1201.68ms, fracRes: 0.3811, norm(attn): 0.1211, norm(output): 3.5156, norm(x): 3.3653, norm(y): 1.0016, norm:10.2134, tok/sec: 109074.36, flops:114.48, batch-reuse:1
@ 1145 train 6.1067 , allloss: 11.9204, dt: 1220.02ms, fracRes: 0.3814, norm(attn): 0.1191, norm(output): 3.5312, norm(x): 3.3848, norm(y): 1.0013, norm:7.7878, tok/sec: 107434.38, flops:112.75, batch-reuse:1
@ 1146 train 6.0722 , allloss: 11.6121, dt: 1235.80ms, fracRes: 0.3806, norm(attn): 0.1191, norm(output): 3.5312, norm(x): 3.3897, norm(y): 1.0014, norm:9.0170, tok/sec: 106062.86, flops:111.31, batch-reuse:1
@ 1147 train 6.0441 , allloss: 11.5544, dt: 1213.20ms, fracRes: 0.3811, norm(attn): 0.1177, norm(output): 3.5156, norm(x): 3.3863, norm(y): 1.0014, norm:7.3616, tok/sec: 108038.45, flops:113.39, batch-reuse:1
@ 1148 train 5.9826 , allloss: 11.0937, dt: 1226.77ms, fracRes: 0.3805, norm(attn): 0.1172, norm(output): 3.5156, norm(x): 3.3835, norm(y): 1.0012, norm:7.1334, tok/sec: 106843.26, flops:112.13, batch-reuse:1
@ 1149 train 6.0143 , allloss: 10.7177, dt: 1249.39ms, fracRes: 0.3792, norm(attn): 0.1177, norm(output): 3.5156, norm(x): 3.3747, norm(y): 1.0012, norm:6.0593, tok/sec: 104909.19, flops:110.10, batch-reuse:1
@ 1150 train 6.0362 , allloss: 10.9532, dt: 1200.32ms, fracRes: 0.3788, norm(attn): 0.1182, norm(output): 3.5000, norm(x): 3.3725, norm(y): 1.0008, norm:5.5237, tok/sec: 109197.83, flops:114.61, batch-reuse:1
@ 1151 train 6.0982 , allloss: 10.9717, dt: 1230.96ms, fracRes: 0.3789, norm(attn): 0.1226, norm(output): 3.5156, norm(x): 3.3589, norm(y): 1.0011, norm:7.3008, tok/sec: 106479.79, flops:111.75, batch-reuse:1
@ 1152 train 6.0294 , allloss: 10.8412, dt: 1238.39ms, fracRes: 0.3792, norm(attn): 0.1216, norm(output): 3.5156, norm(x): 3.3509, norm(y): 1.0012, norm:6.8099, tok/sec: 105840.85, flops:111.08, batch-reuse:1
@ 1153 train 5.9977 , allloss: 11.1825, dt: 1248.79ms, fracRes: 0.3801, norm(attn): 0.1230, norm(output): 3.5156, norm(x): 3.3596, norm(y): 1.0013, norm:7.3480, tok/sec: 104958.96, flops:110.16, batch-reuse:1
@ 1154 train 6.0049 , allloss: 11.7260, dt: 1239.36ms, fracRes: 0.3802, norm(attn): 0.1250, norm(output): 3.5000, norm(x): 3.3574, norm(y): 1.0012, norm:7.6895, tok/sec: 105757.50, flops:110.99, batch-reuse:1
@ 1155 train 5.9885 , allloss: 11.8341, dt: 1219.56ms, fracRes: 0.3810, norm(attn): 0.1270, norm(output): 3.5156, norm(x): 3.3692, norm(y): 1.0012, norm:7.7850, tok/sec: 107474.73, flops:112.80, batch-reuse:1
@ 1156 train 6.0899 , allloss: 13.0276, dt: 1209.73ms, fracRes: 0.3825, norm(attn): 0.1299, norm(output): 3.5312, norm(x): 3.3535, norm(y): 1.0013, norm:8.5687, tok/sec: 108348.07, flops:113.71, batch-reuse:1
@ 1157 train 6.0643 , allloss: 13.2638, dt: 1225.35ms, fracRes: 0.3882, norm(attn): 0.1299, norm(output): 3.5000, norm(x): 3.2801, norm(y): 1.0016, norm:10.9785, tok/sec: 106967.39, flops:112.26, batch-reuse:1
@ 1158 train 6.0449 , allloss: 12.8062, dt: 1247.33ms, fracRes: 0.3881, norm(attn): 0.1309, norm(output): 3.5469, norm(x): 3.3189, norm(y): 1.0016, norm:9.4788, tok/sec: 105081.84, flops:110.29, batch-reuse:1
@ 1159 train 6.0312 , allloss: 22.0718, dt: 1231.13ms, fracRes: 0.3876, norm(attn): 0.1309, norm(output): 3.5312, norm(x): 3.3383, norm(y): 1.0014, norm:19.7032, tok/sec: 106464.76, flops:111.74, batch-reuse:1
@ 1160 train 6.0978 , allloss: 13.8441, dt: 1226.71ms, fracRes: 0.3842, norm(attn): 0.1318, norm(output): 3.4844, norm(x): 3.3553, norm(y): 1.0018, norm:10.5431, tok/sec: 106848.56, flops:112.14, batch-reuse:1
@ 1161 train 5.9194 , allloss: 15.0846, dt: 1214.59ms, fracRes: 0.3774, norm(attn): 0.1348, norm(output): 3.4688, norm(x): 3.4061, norm(y): 1.0016, norm:11.6305, tok/sec: 107914.60, flops:113.26, batch-reuse:1
@ 1162 train 5.9027 , allloss: 14.8392, dt: 1225.62ms, fracRes: 0.3745, norm(attn): 0.1338, norm(output): 3.4531, norm(x): 3.4402, norm(y): 1.0018, norm:15.2646, tok/sec: 106943.48, flops:112.24, batch-reuse:1
@ 1163 train 6.0427 , allloss: 14.4831, dt: 1233.00ms, fracRes: 0.3746, norm(attn): 0.1309, norm(output): 3.4688, norm(x): 3.4810, norm(y): 1.0017, norm:15.0428, tok/sec: 106303.24, flops:111.57, batch-reuse:1
@ 1164 train 5.9816 , allloss: 13.6054, dt: 1204.81ms, fracRes: 0.3771, norm(attn): 0.1289, norm(output): 3.4688, norm(x): 3.4516, norm(y): 1.0016, norm:13.8468, tok/sec: 108790.52, flops:114.18, batch-reuse:1
@ 1165 train 6.0363 , allloss: 12.4458, dt: 1228.45ms, fracRes: 0.3776, norm(attn): 0.1299, norm(output): 3.4844, norm(x): 3.4578, norm(y): 1.0016, norm:11.3610, tok/sec: 106697.09, flops:111.98, batch-reuse:1
@ 1166 train 5.9999 , allloss: 12.4542, dt: 1251.79ms, fracRes: 0.3777, norm(attn): 0.1299, norm(output): 3.4844, norm(x): 3.4533, norm(y): 1.0016, norm:10.8890, tok/sec: 104707.93, flops:109.89, batch-reuse:1
@ 1167 train 5.9631 , allloss: 12.3168, dt: 1248.84ms, fracRes: 0.3780, norm(attn): 0.1328, norm(output): 3.4375, norm(x): 3.4268, norm(y): 1.0017, norm:10.6346, tok/sec: 104954.69, flops:110.15, batch-reuse:1
@ 1168 train 5.8544 , allloss: 12.2526, dt: 1224.92ms, fracRes: 0.3768, norm(attn): 0.1338, norm(output): 3.4531, norm(x): 3.4547, norm(y): 1.0018, norm:10.0392, tok/sec: 107004.85, flops:112.30, batch-reuse:1
@ 1169 train 5.9850 , allloss: 12.3487, dt: 1234.72ms, fracRes: 0.3758, norm(attn): 0.1367, norm(output): 3.4219, norm(x): 3.4902, norm(y): 1.0016, norm:11.2397, tok/sec: 106155.00, flops:111.41, batch-reuse:1
@ 1170 train 5.9516 , allloss: 13.6009, dt: 1232.28ms, fracRes: 0.3750, norm(attn): 0.1357, norm(output): 3.4531, norm(x): 3.5452, norm(y): 1.0016, norm:11.0349, tok/sec: 106365.74, flops:111.63, batch-reuse:1
@ 1171 train 5.9003 , allloss: 12.7739, dt: 1207.59ms, fracRes: 0.3740, norm(attn): 0.1367, norm(output): 3.4688, norm(x): 3.5678, norm(y): 1.0013, norm:8.9948, tok/sec: 108540.10, flops:113.91, batch-reuse:1
@ 1172 train 6.0496 , allloss: 12.8807, dt: 1198.96ms, fracRes: 0.3742, norm(attn): 0.1377, norm(output): 3.4688, norm(x): 3.6144, norm(y): 1.0013, norm:10.8484, tok/sec: 109321.28, flops:114.73, batch-reuse:1
@ 1173 train 5.9633 , allloss: 12.0742, dt: 1213.12ms, fracRes: 0.3737, norm(attn): 0.1348, norm(output): 3.4844, norm(x): 3.6346, norm(y): 1.0013, norm:16.9188, tok/sec: 108045.78, flops:113.40, batch-reuse:1
@ 1174 train 5.9084 , allloss: 11.7556, dt: 1189.35ms, fracRes: 0.3734, norm(attn): 0.1348, norm(output): 3.4531, norm(x): 3.6560, norm(y): 1.0014, norm:9.9612, tok/sec: 110204.66, flops:115.66, batch-reuse:1
@ 1175 train 6.0224 , allloss: 12.2756, dt: 1214.20ms, fracRes: 0.3754, norm(attn): 0.1328, norm(output): 3.4844, norm(x): 3.6353, norm(y): 1.0013, norm:13.2683, tok/sec: 107949.03, flops:113.29, batch-reuse:1
@ 1176 train 6.0211 , allloss: 11.9868, dt: 1235.97ms, fracRes: 0.3754, norm(attn): 0.1328, norm(output): 3.4688, norm(x): 3.6716, norm(y): 1.0010, norm:14.7239, tok/sec: 106048.23, flops:111.30, batch-reuse:1
@ 1177 train 6.0082 , allloss: 13.0484, dt: 1204.21ms, fracRes: 0.3765, norm(attn): 0.1309, norm(output): 3.4688, norm(x): 3.6471, norm(y): 1.0011, norm:10.7142, tok/sec: 108844.97, flops:114.23, batch-reuse:1
@ 1178 train 6.1077 , allloss: 13.2763, dt: 1223.44ms, fracRes: 0.3779, norm(attn): 0.1299, norm(output): 3.4844, norm(x): 3.6431, norm(y): 1.0007, norm:10.1491, tok/sec: 107133.57, flops:112.44, batch-reuse:1
@ 1179 train 6.0055 , allloss: 12.6410, dt: 1241.77ms, fracRes: 0.3784, norm(attn): 0.1318, norm(output): 3.4688, norm(x): 3.6341, norm(y): 1.0008, norm:11.4900, tok/sec: 105552.41, flops:110.78, batch-reuse:1
@ 1180 train 5.9931 , allloss: 12.4359, dt: 1199.21ms, fracRes: 0.3806, norm(attn): 0.1299, norm(output): 3.4844, norm(x): 3.6540, norm(y): 1.0008, norm:8.4247, tok/sec: 109299.02, flops:114.71, batch-reuse:1
@ 1181 train 5.9570 , allloss: 12.6453, dt: 1225.17ms, fracRes: 0.3807, norm(attn): 0.1338, norm(output): 3.4844, norm(x): 3.6225, norm(y): 1.0011, norm:9.8591, tok/sec: 106982.46, flops:112.28, batch-reuse:1
@ 1182 train 5.9719 , allloss: 12.3458, dt: 1251.72ms, fracRes: 0.3811, norm(attn): 0.1338, norm(output): 3.5156, norm(x): 3.6589, norm(y): 1.0007, norm:8.6574, tok/sec: 104713.42, flops:109.90, batch-reuse:1
@ 1183 train 5.9804 , allloss: 12.6115, dt: 1251.78ms, fracRes: 0.3812, norm(attn): 0.1309, norm(output): 3.4688, norm(x): 3.6487, norm(y): 1.0011, norm:8.5320, tok/sec: 104708.11, flops:109.89, batch-reuse:1
@ 1184 train 5.9408 , allloss: 11.5615, dt: 1194.04ms, fracRes: 0.3811, norm(attn): 0.1309, norm(output): 3.4844, norm(x): 3.6531, norm(y): 1.0009, norm:8.3932, tok/sec: 109771.75, flops:115.21, batch-reuse:1
@ 1185 train 5.9772 , allloss: 12.2946, dt: 1212.09ms, fracRes: 0.3814, norm(attn): 0.1260, norm(output): 3.4844, norm(x): 3.6628, norm(y): 1.0008, norm:10.2534, tok/sec: 108136.82, flops:113.49, batch-reuse:1
@ 1186 train 5.9833 , allloss: 11.8820, dt: 1240.56ms, fracRes: 0.3815, norm(attn): 0.1245, norm(output): 3.4844, norm(x): 3.6666, norm(y): 1.0007, norm:7.8364, tok/sec: 105655.93, flops:110.89, batch-reuse:1
@ 1187 train 5.9641 , allloss: 11.6711, dt: 1241.49ms, fracRes: 0.3822, norm(attn): 0.1230, norm(output): 3.5000, norm(x): 3.7008, norm(y): 1.0009, norm:8.3940, tok/sec: 105575.95, flops:110.80, batch-reuse:1
@ 1188 train 5.8799 , allloss: 11.0350, dt: 1240.73ms, fracRes: 0.3823, norm(attn): 0.1221, norm(output): 3.5000, norm(x): 3.7107, norm(y): 1.0011, norm:5.8165, tok/sec: 105640.99, flops:110.87, batch-reuse:1
@ 1189 train 5.8919 , allloss: 9.8605, dt: 1237.60ms, fracRes: 0.3826, norm(attn): 0.1250, norm(output): 3.5000, norm(x): 3.7435, norm(y): 1.0010, norm:6.2436, tok/sec: 105907.96, flops:111.15, batch-reuse:1
@ 1190 train 6.0110 , allloss: 9.0568, dt: 1227.93ms, fracRes: 0.3841, norm(attn): 0.1260, norm(output): 3.5469, norm(x): 3.7905, norm(y): 1.0008, norm:4.2868, tok/sec: 106742.36, flops:112.03, batch-reuse:1
@ 1191 train 6.0962 , allloss: 8.9512, dt: 1230.09ms, fracRes: 0.3842, norm(attn): 0.1260, norm(output): 3.5156, norm(x): 3.7668, norm(y): 1.0010, norm:4.6729, tok/sec: 106555.04, flops:111.83, batch-reuse:1
@ 1192 train 5.9495 , allloss: 8.5971, dt: 1229.57ms, fracRes: 0.3835, norm(attn): 0.1289, norm(output): 3.5000, norm(x): 3.7460, norm(y): 1.0013, norm:4.2670, tok/sec: 106599.48, flops:111.88, batch-reuse:1
@ 1193 train 6.0128 , allloss: 8.4507, dt: 1205.18ms, fracRes: 0.3837, norm(attn): 0.1299, norm(output): 3.5000, norm(x): 3.7640, norm(y): 1.0013, norm:4.1383, tok/sec: 108757.44, flops:114.14, batch-reuse:1
@ 1194 train 6.0287 , allloss: 8.4509, dt: 1203.11ms, fracRes: 0.3835, norm(attn): 0.1260, norm(output): 3.5625, norm(x): 3.8126, norm(y): 1.0012, norm:4.4717, tok/sec: 108944.08, flops:114.34, batch-reuse:1
@ 1195 train 5.9873 , allloss: 8.3787, dt: 1211.91ms, fracRes: 0.3833, norm(attn): 0.1260, norm(output): 3.5625, norm(x): 3.8088, norm(y): 1.0013, norm:4.1887, tok/sec: 108153.52, flops:113.51, batch-reuse:1
@ 1196 train 6.1009 , allloss: 8.5688, dt: 1232.91ms, fracRes: 0.3832, norm(attn): 0.1318, norm(output): 3.5312, norm(x): 3.7892, norm(y): 1.0013, norm:4.6388, tok/sec: 106311.15, flops:111.58, batch-reuse:1
@ 1197 train 5.9650 , allloss: 8.2968, dt: 1206.16ms, fracRes: 0.3819, norm(attn): 0.1260, norm(output): 3.5469, norm(x): 3.8191, norm(y): 1.0013, norm:3.7493, tok/sec: 108668.74, flops:114.05, batch-reuse:1
@ 1198 train 5.9835 , allloss: 8.3410, dt: 1209.22ms, fracRes: 0.3827, norm(attn): 0.1177, norm(output): 3.5625, norm(x): 3.8633, norm(y): 1.0011, norm:3.5152, tok/sec: 108393.42, flops:113.76, batch-reuse:1
@ 1199 train 5.9894 , allloss: 8.3320, dt: 1230.98ms, fracRes: 0.3835, norm(attn): 0.1226, norm(output): 3.5469, norm(x): 3.8628, norm(y): 1.0012, norm:3.2494, tok/sec: 106477.48, flops:111.75, batch-reuse:1
@ 1200 train 5.9847 , allloss: 8.5333, dt: 1216.65ms, fracRes: 0.3847, norm(attn): 0.1299, norm(output): 3.5625, norm(x): 3.8837, norm(y): 1.0013, norm:4.2436, tok/sec: 107731.99, flops:113.07, batch-reuse:1
@ 1201 train 5.9929 , allloss: 8.6661, dt: 1210.28ms, fracRes: 0.3852, norm(attn): 0.1309, norm(output): 3.5938, norm(x): 3.8872, norm(y): 1.0013, norm:4.6322, tok/sec: 108298.91, flops:113.66, batch-reuse:1
@ 1202 train 5.9917 , allloss: 8.7690, dt: 1212.58ms, fracRes: 0.3863, norm(attn): 0.1289, norm(output): 3.5312, norm(x): 3.8625, norm(y): 1.0013, norm:4.2529, tok/sec: 108093.28, flops:113.45, batch-reuse:1
@ 1203 train 6.2855 , allloss: 8.7874, dt: 1211.56ms, fracRes: 0.3886, norm(attn): 0.1299, norm(output): 3.6094, norm(x): 3.8815, norm(y): 1.0009, norm:4.4219, tok/sec: 108184.25, flops:113.54, batch-reuse:1
@ 1204 train 5.9442 , allloss: 8.4232, dt: 1201.47ms, fracRes: 0.3890, norm(attn): 0.1367, norm(output): 3.5625, norm(x): 3.8242, norm(y): 1.0010, norm:4.5019, tok/sec: 109092.84, flops:114.49, batch-reuse:1
@ 1205 train 5.9116 , allloss: 8.4512, dt: 1221.26ms, fracRes: 0.3912, norm(attn): 0.1406, norm(output): 3.5156, norm(x): 3.7949, norm(y): 1.0011, norm:4.6301, tok/sec: 107325.63, flops:112.64, batch-reuse:1
@ 1206 train 5.9248 , allloss: 8.5764, dt: 1222.49ms, fracRes: 0.3927, norm(attn): 0.1475, norm(output): 3.5625, norm(x): 3.8008, norm(y): 1.0012, norm:5.5679, tok/sec: 107217.11, flops:112.53, batch-reuse:1
@ 1207 train 5.9459 , allloss: 8.5427, dt: 1216.37ms, fracRes: 0.3918, norm(attn): 0.1504, norm(output): 3.5156, norm(x): 3.7710, norm(y): 1.0012, norm:5.2293, tok/sec: 107756.95, flops:113.09, batch-reuse:1
@ 1208 train 5.8818 , allloss: 8.6181, dt: 1189.04ms, fracRes: 0.3956, norm(attn): 0.1504, norm(output): 3.5312, norm(x): 3.7105, norm(y): 1.0012, norm:4.6042, tok/sec: 110233.91, flops:115.69, batch-reuse:1
@ 1209 train 5.9693 , allloss: 8.5308, dt: 1215.27ms, fracRes: 0.4080, norm(attn): 0.1523, norm(output): 3.5000, norm(x): 3.5087, norm(y): 1.0012, norm:7.1761, tok/sec: 107854.66, flops:113.20, batch-reuse:1
@ 1210 train 5.9142 , allloss: 8.6643, dt: 1214.78ms, fracRes: 0.4081, norm(attn): 0.1572, norm(output): 3.5000, norm(x): 3.4866, norm(y): 1.0010, norm:8.5657, tok/sec: 107897.38, flops:113.24, batch-reuse:1
@ 1211 train 5.9682 , allloss: 8.9775, dt: 1212.78ms, fracRes: 0.4003, norm(attn): 0.1602, norm(output): 3.5000, norm(x): 3.5687, norm(y): 1.0009, norm:12.2663, tok/sec: 108075.64, flops:113.43, batch-reuse:1
@ 1212 train 6.0398 , allloss: 9.1513, dt: 1210.76ms, fracRes: 0.3981, norm(attn): 0.1621, norm(output): 3.5000, norm(x): 3.5607, norm(y): 1.0009, norm:8.5538, tok/sec: 108255.56, flops:113.62, batch-reuse:1
@ 1213 train 5.8799 , allloss: 9.7093, dt: 1220.81ms, fracRes: 0.3981, norm(attn): 0.1680, norm(output): 3.5000, norm(x): 3.5637, norm(y): 1.0008, norm:8.8160, tok/sec: 107364.45, flops:112.68, batch-reuse:1
@ 1214 train 5.9275 , allloss: 11.3684, dt: 1204.54ms, fracRes: 0.3968, norm(attn): 0.1729, norm(output): 3.5000, norm(x): 3.5813, norm(y): 1.0007, norm:12.4907, tok/sec: 108815.35, flops:114.20, batch-reuse:1
@ 1215 train 5.9509 , allloss: 12.6515, dt: 1229.33ms, fracRes: 0.3949, norm(attn): 0.1719, norm(output): 3.5312, norm(x): 3.6648, norm(y): 1.0004, norm:12.7941, tok/sec: 106620.76, flops:111.90, batch-reuse:1
@ 1216 train 5.9445 , allloss: 11.8834, dt: 1210.40ms, fracRes: 0.3970, norm(attn): 0.1719, norm(output): 3.5156, norm(x): 3.6722, norm(y): 1.0004, norm:9.4463, tok/sec: 108288.44, flops:113.65, batch-reuse:1
@ 1217 train 5.9459 , allloss: 12.6340, dt: 1234.23ms, fracRes: 0.3955, norm(attn): 0.1719, norm(output): 3.5156, norm(x): 3.7226, norm(y): 1.0003, norm:11.4664, tok/sec: 106197.10, flops:111.46, batch-reuse:1
@ 1218 train 5.8633 , allloss: 11.7233, dt: 1217.65ms, fracRes: 0.3948, norm(attn): 0.1748, norm(output): 3.5000, norm(x): 3.7453, norm(y): 1.0005, norm:11.4449, tok/sec: 107643.78, flops:112.97, batch-reuse:1
@ 1219 train 5.8783 , allloss: 14.4110, dt: 1195.74ms, fracRes: 0.3880, norm(attn): 0.1729, norm(output): 3.5000, norm(x): 3.8180, norm(y): 1.0001, norm:14.7916, tok/sec: 109616.15, flops:115.04, batch-reuse:1
@ 1220 train 5.9248 , allloss: 12.2812, dt: 1194.74ms, fracRes: 0.3868, norm(attn): 0.1729, norm(output): 3.5312, norm(x): 3.8578, norm(y): 1.0000, norm:11.5347, tok/sec: 109707.98, flops:115.14, batch-reuse:1
@ 1221 train 5.8794 , allloss: 12.4098, dt: 1210.39ms, fracRes: 0.3845, norm(attn): 0.1748, norm(output): 3.5312, norm(x): 3.9085, norm(y): 1.0000, norm:15.1565, tok/sec: 108289.46, flops:113.65, batch-reuse:1
@ 1222 train 5.8816 , allloss: 11.3214, dt: 1197.28ms, fracRes: 0.3792, norm(attn): 0.1777, norm(output): 3.5625, norm(x): 3.9802, norm(y): 1.0000, norm:11.6064, tok/sec: 109474.69, flops:114.90, batch-reuse:1
@ 1223 train 5.8930 , allloss: 10.6113, dt: 1222.89ms, fracRes: 0.3751, norm(attn): 0.1816, norm(output): 3.5469, norm(x): 4.0174, norm(y): 0.9997, norm:11.9853, tok/sec: 107182.51, flops:112.49, batch-reuse:1
@ 1224 train 5.8463 , allloss: 11.8138, dt: 1217.54ms, fracRes: 0.3774, norm(attn): 0.1816, norm(output): 3.6406, norm(x): 4.0225, norm(y): 1.0000, norm:12.7091, tok/sec: 107653.49, flops:112.98, batch-reuse:1
@ 1225 train 5.8677 , allloss: 9.8292, dt: 1235.97ms, fracRes: 0.3726, norm(attn): 0.1826, norm(output): 3.6250, norm(x): 4.1003, norm(y): 0.9995, norm:8.3948, tok/sec: 106047.88, flops:111.30, batch-reuse:1
@ 1226 train 5.9568 , allloss: 10.1435, dt: 1235.64ms, fracRes: 0.3651, norm(attn): 0.1855, norm(output): 3.5938, norm(x): 4.1629, norm(y): 0.9997, norm:10.3879, tok/sec: 106076.18, flops:111.33, batch-reuse:1
@ 1227 train 5.8815 , allloss: 9.6301, dt: 1240.66ms, fracRes: 0.3544, norm(attn): 0.1836, norm(output): 3.6562, norm(x): 4.3138, norm(y): 0.9996, norm:7.1395, tok/sec: 105646.75, flops:110.88, batch-reuse:1
@ 1228 train 5.8299 , allloss: 9.3493, dt: 1239.12ms, fracRes: 0.3524, norm(attn): 0.1797, norm(output): 3.6719, norm(x): 4.3542, norm(y): 0.9997, norm:7.4803, tok/sec: 105777.99, flops:111.02, batch-reuse:1
@ 1229 train 5.8825 , allloss: 8.6651, dt: 1249.48ms, fracRes: 0.3527, norm(attn): 0.1787, norm(output): 3.6719, norm(x): 4.3565, norm(y): 1.0001, norm:6.8706, tok/sec: 104901.04, flops:110.10, batch-reuse:1
@ 1230 train 5.8744 , allloss: 8.9986, dt: 1251.90ms, fracRes: 0.3642, norm(attn): 0.1680, norm(output): 3.6094, norm(x): 4.1716, norm(y): 1.0002, norm:6.2228, tok/sec: 104698.62, flops:109.88, batch-reuse:1
@ 1231 train 5.8536 , allloss: 8.5033, dt: 1241.07ms, fracRes: 0.3730, norm(attn): 0.1641, norm(output): 3.6094, norm(x): 4.0578, norm(y): 1.0002, norm:6.7057, tok/sec: 105611.85, flops:110.84, batch-reuse:1
@ 1232 train 5.8343 , allloss: 8.4102, dt: 1229.93ms, fracRes: 0.3796, norm(attn): 0.1631, norm(output): 3.5781, norm(x): 3.9731, norm(y): 1.0004, norm:5.3539, tok/sec: 106568.49, flops:111.85, batch-reuse:1
@ 1233 train 5.8329 , allloss: 8.2735, dt: 1200.74ms, fracRes: 0.3832, norm(attn): 0.1611, norm(output): 3.6406, norm(x): 3.9395, norm(y): 1.0003, norm:5.2256, tok/sec: 109159.36, flops:114.56, batch-reuse:1
@ 1234 train 5.8444 , allloss: 8.3477, dt: 1216.92ms, fracRes: 0.3841, norm(attn): 0.1641, norm(output): 3.6250, norm(x): 3.9190, norm(y): 1.0003, norm:5.1322, tok/sec: 107707.95, flops:113.04, batch-reuse:1
@ 1235 train 5.8975 , allloss: 8.4345, dt: 1221.16ms, fracRes: 0.3868, norm(attn): 0.1631, norm(output): 3.6250, norm(x): 3.9005, norm(y): 1.0004, norm:6.3113, tok/sec: 107334.41, flops:112.65, batch-reuse:1
@ 1236 train 5.8550 , allloss: 8.1995, dt: 1224.82ms, fracRes: 0.3905, norm(attn): 0.1621, norm(output): 3.6094, norm(x): 3.8562, norm(y): 1.0003, norm:5.1827, tok/sec: 107013.22, flops:112.31, batch-reuse:1
@ 1237 train 5.8845 , allloss: 8.1722, dt: 1213.94ms, fracRes: 0.3923, norm(attn): 0.1592, norm(output): 3.5938, norm(x): 3.8107, norm(y): 1.0004, norm:4.8956, tok/sec: 107972.37, flops:113.32, batch-reuse:1
@ 1238 train 5.8407 , allloss: 8.1401, dt: 1225.44ms, fracRes: 0.3921, norm(attn): 0.1562, norm(output): 3.5938, norm(x): 3.7988, norm(y): 1.0004, norm:4.0293, tok/sec: 106959.23, flops:112.26, batch-reuse:1
@ 1239 train 5.7926 , allloss: 8.1197, dt: 1227.92ms, fracRes: 0.3821, norm(attn): 0.1631, norm(output): 3.6250, norm(x): 3.9195, norm(y): 1.0005, norm:4.2828, tok/sec: 106743.25, flops:112.03, batch-reuse:1
@ 1240 train 5.8096 , allloss: 8.0711, dt: 1248.32ms, fracRes: 0.3824, norm(attn): 0.1582, norm(output): 3.5781, norm(x): 3.8893, norm(y): 1.0004, norm:4.8239, tok/sec: 104998.51, flops:110.20, batch-reuse:1
@ 1241 train 5.8300 , allloss: 8.1044, dt: 1236.84ms, fracRes: 0.3823, norm(attn): 0.1543, norm(output): 3.5625, norm(x): 3.8987, norm(y): 1.0003, norm:4.0621, tok/sec: 105973.51, flops:111.22, batch-reuse:1
@ 1242 train 5.8784 , allloss: 8.0909, dt: 1205.44ms, fracRes: 0.3829, norm(attn): 0.1543, norm(output): 3.6250, norm(x): 3.9183, norm(y): 1.0001, norm:4.0906, tok/sec: 108734.08, flops:114.12, batch-reuse:1
@ 1243 train 5.8888 , allloss: 8.1416, dt: 1214.94ms, fracRes: 0.3804, norm(attn): 0.1553, norm(output): 3.5938, norm(x): 3.9447, norm(y): 1.0005, norm:4.4565, tok/sec: 107883.60, flops:113.23, batch-reuse:1
@ 1244 train 5.8667 , allloss: 8.3592, dt: 1185.98ms, fracRes: 0.3806, norm(attn): 0.1523, norm(output): 3.6250, norm(x): 3.9543, norm(y): 1.0005, norm:3.7379, tok/sec: 110517.54, flops:115.99, batch-reuse:1
@ 1245 train 5.8518 , allloss: 8.0971, dt: 1203.69ms, fracRes: 0.3811, norm(attn): 0.1475, norm(output): 3.5625, norm(x): 3.9149, norm(y): 1.0004, norm:3.8739, tok/sec: 108891.86, flops:114.28, batch-reuse:1
@ 1246 train 5.8482 , allloss: 8.1521, dt: 1227.66ms, fracRes: 0.3821, norm(attn): 0.1504, norm(output): 3.5469, norm(x): 3.8899, norm(y): 1.0005, norm:4.2237, tok/sec: 106765.35, flops:112.05, batch-reuse:1
@ 1247 train 5.7656 , allloss: 8.0122, dt: 1252.85ms, fracRes: 0.3799, norm(attn): 0.1562, norm(output): 3.5312, norm(x): 3.9017, norm(y): 1.0008, norm:5.1988, tok/sec: 104618.86, flops:109.80, batch-reuse:1
@ 1248 train 5.8680 , allloss: 8.4237, dt: 1230.28ms, fracRes: 0.3786, norm(attn): 0.1582, norm(output): 3.5469, norm(x): 3.9115, norm(y): 1.0007, norm:6.2278, tok/sec: 106538.07, flops:111.81, batch-reuse:1
@ 1249 train 5.7682 , allloss: 8.0475, dt: 1207.10ms, fracRes: 0.3799, norm(attn): 0.1562, norm(output): 3.5625, norm(x): 3.9198, norm(y): 1.0005, norm:5.3079, tok/sec: 108584.37, flops:113.96, batch-reuse:1
@ 1250 train 5.8690 , allloss: 8.2428, dt: 1223.92ms, fracRes: 0.3786, norm(attn): 0.1533, norm(output): 3.5938, norm(x): 3.9662, norm(y): 1.0001, norm:6.7513, tok/sec: 107092.04, flops:112.40, batch-reuse:1
@ 1251 train 5.8229 , allloss: 8.1692, dt: 1223.25ms, fracRes: 0.3765, norm(attn): 0.1523, norm(output): 3.5781, norm(x): 3.9867, norm(y): 1.0001, norm:5.4931, tok/sec: 107150.67, flops:112.46, batch-reuse:1
@ 1252 train 5.8348 , allloss: 8.6384, dt: 1218.54ms, fracRes: 0.3775, norm(attn): 0.1533, norm(output): 3.5938, norm(x): 4.0403, norm(y): 0.9998, norm:7.1200, tok/sec: 107565.22, flops:112.89, batch-reuse:1
@ 1253 train 5.7508 , allloss: 8.1223, dt: 1208.69ms, fracRes: 0.3788, norm(attn): 0.1533, norm(output): 3.5625, norm(x): 4.0049, norm(y): 0.9998, norm:6.0753, tok/sec: 108441.44, flops:113.81, batch-reuse:1
@ 1254 train 5.8176 , allloss: 8.4236, dt: 1197.35ms, fracRes: 0.3810, norm(attn): 0.1504, norm(output): 3.5938, norm(x): 3.9802, norm(y): 0.9998, norm:6.4808, tok/sec: 109468.43, flops:114.89, batch-reuse:1
@ 1255 train 5.8403 , allloss: 8.1331, dt: 1201.37ms, fracRes: 0.3843, norm(attn): 0.1406, norm(output): 3.6406, norm(x): 3.9696, norm(y): 0.9993, norm:6.7825, tok/sec: 109102.19, flops:114.50, batch-reuse:1
@ 1256 train 5.7892 , allloss: 8.0611, dt: 1197.74ms, fracRes: 0.3871, norm(attn): 0.1416, norm(output): 3.6875, norm(x): 3.9714, norm(y): 0.9992, norm:4.8970, tok/sec: 109433.06, flops:114.85, batch-reuse:1
@ 1257 train 5.8183 , allloss: 8.0888, dt: 1207.08ms, fracRes: 0.3853, norm(attn): 0.1465, norm(output): 3.6875, norm(x): 3.9834, norm(y): 0.9992, norm:5.6117, tok/sec: 108586.13, flops:113.96, batch-reuse:1
@ 1258 train 5.7808 , allloss: 8.1573, dt: 1196.58ms, fracRes: 0.3842, norm(attn): 0.1543, norm(output): 3.7031, norm(x): 4.0280, norm(y): 0.9990, norm:7.1270, tok/sec: 109539.23, flops:114.96, batch-reuse:1
@ 1259 train 5.8135 , allloss: 8.2238, dt: 1209.58ms, fracRes: 0.3841, norm(attn): 0.1553, norm(output): 3.7031, norm(x): 4.0507, norm(y): 0.9988, norm:5.5520, tok/sec: 108361.61, flops:113.73, batch-reuse:1
@ 1260 train 5.7601 , allloss: 8.1292, dt: 1224.05ms, fracRes: 0.3853, norm(attn): 0.1582, norm(output): 3.6875, norm(x): 4.0266, norm(y): 0.9989, norm:7.5934, tok/sec: 107080.26, flops:112.38, batch-reuse:1
@ 1261 train 5.7693 , allloss: 8.3130, dt: 1225.97ms, fracRes: 0.3867, norm(attn): 0.1592, norm(output): 3.6719, norm(x): 4.0294, norm(y): 0.9988, norm:6.7036, tok/sec: 106912.89, flops:112.21, batch-reuse:1
@ 1262 train 5.7643 , allloss: 8.2478, dt: 1241.32ms, fracRes: 0.3868, norm(attn): 0.1611, norm(output): 3.7344, norm(x): 4.0707, norm(y): 0.9988, norm:7.9103, tok/sec: 105591.18, flops:110.82, batch-reuse:1
@ 1263 train 5.7555 , allloss: 8.0290, dt: 1230.23ms, fracRes: 0.3864, norm(attn): 0.1602, norm(output): 3.7031, norm(x): 4.0583, norm(y): 0.9988, norm:6.8970, tok/sec: 106542.49, flops:111.82, batch-reuse:1
@ 1264 train 5.8700 , allloss: 9.2836, dt: 1250.75ms, fracRes: 0.3851, norm(attn): 0.1602, norm(output): 3.7344, norm(x): 4.0995, norm(y): 0.9984, norm:8.2687, tok/sec: 104794.62, flops:109.98, batch-reuse:1
@ 1265 train 5.7913 , allloss: 8.2588, dt: 1242.05ms, fracRes: 0.3847, norm(attn): 0.1572, norm(output): 3.6875, norm(x): 4.0523, norm(y): 0.9986, norm:5.3490, tok/sec: 105528.77, flops:110.75, batch-reuse:1
@ 1266 train 5.7957 , allloss: 8.5030, dt: 1202.84ms, fracRes: 0.3865, norm(attn): 0.1572, norm(output): 3.6875, norm(x): 4.0244, norm(y): 0.9984, norm:4.9454, tok/sec: 108968.70, flops:114.36, batch-reuse:1
@ 1267 train 5.8417 , allloss: 9.3382, dt: 1199.50ms, fracRes: 0.3873, norm(attn): 0.1582, norm(output): 3.6250, norm(x): 3.9889, norm(y): 0.9985, norm:6.6516, tok/sec: 109272.51, flops:114.68, batch-reuse:1
@ 1268 train 5.8267 , allloss: 8.4154, dt: 1204.32ms, fracRes: 0.3881, norm(attn): 0.1562, norm(output): 3.7188, norm(x): 4.0274, norm(y): 0.9983, norm:6.9852, tok/sec: 108834.50, flops:114.22, batch-reuse:1
@ 1269 train 5.8142 , allloss: 9.2133, dt: 1218.04ms, fracRes: 0.3865, norm(attn): 0.1562, norm(output): 3.7344, norm(x): 4.0665, norm(y): 0.9983, norm:8.6602, tok/sec: 107608.55, flops:112.94, batch-reuse:1
@ 1270 train 5.7314 , allloss: 8.9714, dt: 1251.46ms, fracRes: 0.3859, norm(attn): 0.1592, norm(output): 3.7656, norm(x): 4.0913, norm(y): 0.9983, norm:5.5981, tok/sec: 104734.92, flops:109.92, batch-reuse:1
@ 1271 train 5.7446 , allloss: 8.6946, dt: 1195.40ms, fracRes: 0.3869, norm(attn): 0.1572, norm(output): 3.7344, norm(x): 4.0693, norm(y): 0.9983, norm:6.2850, tok/sec: 109647.22, flops:115.08, batch-reuse:1
@ 1272 train 5.7462 , allloss: 9.3863, dt: 1205.87ms, fracRes: 0.3865, norm(attn): 0.1602, norm(output): 3.7500, norm(x): 4.0896, norm(y): 0.9984, norm:6.7405, tok/sec: 108694.76, flops:114.08, batch-reuse:1
@ 1273 train 5.8540 , allloss: 8.5667, dt: 1208.12ms, fracRes: 0.3865, norm(attn): 0.1553, norm(output): 3.7500, norm(x): 4.1127, norm(y): 0.9986, norm:5.1978, tok/sec: 108492.20, flops:113.86, batch-reuse:1
@ 1274 train 5.7564 , allloss: 8.7555, dt: 1212.17ms, fracRes: 0.3857, norm(attn): 0.1553, norm(output): 3.7812, norm(x): 4.1812, norm(y): 0.9985, norm:5.7459, tok/sec: 108130.23, flops:113.48, batch-reuse:1
@ 1275 train 5.9113 , allloss: 8.6642, dt: 1209.47ms, fracRes: 0.3855, norm(attn): 0.1484, norm(output): 3.7969, norm(x): 4.1842, norm(y): 0.9985, norm:6.1916, tok/sec: 108371.45, flops:113.74, batch-reuse:1
@ 1276 train 5.7169 , allloss: 8.0959, dt: 1211.27ms, fracRes: 0.3866, norm(attn): 0.1455, norm(output): 3.7812, norm(x): 4.1591, norm(y): 0.9987, norm:6.2132, tok/sec: 108210.47, flops:113.57, batch-reuse:1
@ 1277 train 5.7023 , allloss: 8.2417, dt: 1215.62ms, fracRes: 0.3850, norm(attn): 0.1494, norm(output): 3.7812, norm(x): 4.1685, norm(y): 0.9989, norm:6.7799, tok/sec: 107822.74, flops:113.16, batch-reuse:1
@ 1278 train 5.8195 , allloss: 8.4841, dt: 1201.36ms, fracRes: 0.3856, norm(attn): 0.1533, norm(output): 3.7969, norm(x): 4.1572, norm(y): 0.9991, norm:5.1421, tok/sec: 109102.65, flops:114.51, batch-reuse:1
@ 1279 train 5.9122 , allloss: 8.8781, dt: 1224.75ms, fracRes: 0.3853, norm(attn): 0.1504, norm(output): 3.8281, norm(x): 4.1823, norm(y): 0.9989, norm:6.1307, tok/sec: 107019.22, flops:112.32, batch-reuse:1
@ 1280 train 5.7035 , allloss: 8.3123, dt: 1196.12ms, fracRes: 0.3848, norm(attn): 0.1504, norm(output): 3.8438, norm(x): 4.1743, norm(y): 0.9991, norm:4.6413, tok/sec: 109581.33, flops:115.01, batch-reuse:1
@ 1281 train 5.7082 , allloss: 8.1166, dt: 1209.28ms, fracRes: 0.3853, norm(attn): 0.1455, norm(output): 3.8750, norm(x): 4.1835, norm(y): 0.9989, norm:5.9289, tok/sec: 108388.76, flops:113.76, batch-reuse:1
@ 1282 train 5.7248 , allloss: 8.0509, dt: 1199.85ms, fracRes: 0.3847, norm(attn): 0.1475, norm(output): 3.9062, norm(x): 4.2067, norm(y): 0.9988, norm:5.1235, tok/sec: 109240.03, flops:114.65, batch-reuse:1
@ 1283 train 5.7574 , allloss: 8.4653, dt: 1220.51ms, fracRes: 0.3836, norm(attn): 0.1553, norm(output): 3.9062, norm(x): 4.2072, norm(y): 0.9988, norm:4.9830, tok/sec: 107391.26, flops:112.71, batch-reuse:1
@ 1284 train 5.7119 , allloss: 8.1494, dt: 1245.17ms, fracRes: 0.3848, norm(attn): 0.1533, norm(output): 3.9375, norm(x): 4.2183, norm(y): 0.9985, norm:4.4715, tok/sec: 105264.01, flops:110.48, batch-reuse:1
@ 1285 train 5.6496 , allloss: 8.1385, dt: 1215.92ms, fracRes: 0.3866, norm(attn): 0.1514, norm(output): 3.9688, norm(x): 4.1876, norm(y): 0.9984, norm:4.8341, tok/sec: 107796.91, flops:113.13, batch-reuse:1
@ 1286 train 5.8720 , allloss: 8.3692, dt: 1219.29ms, fracRes: 0.3867, norm(attn): 0.1475, norm(output): 3.9688, norm(x): 4.2198, norm(y): 0.9981, norm:5.8628, tok/sec: 107498.23, flops:112.82, batch-reuse:1
@ 1287 train 5.7941 , allloss: 8.3456, dt: 1234.33ms, fracRes: 0.3876, norm(attn): 0.1484, norm(output): 3.9688, norm(x): 4.2210, norm(y): 0.9982, norm:7.7910, tok/sec: 106188.66, flops:111.45, batch-reuse:1
@ 1288 train 5.7810 , allloss: 9.7323, dt: 1197.68ms, fracRes: 0.3886, norm(attn): 0.1533, norm(output): 3.9844, norm(x): 4.2039, norm(y): 0.9982, norm:8.9938, tok/sec: 109437.96, flops:114.86, batch-reuse:1
@ 1289 train 5.6997 , allloss: 10.8743, dt: 1232.24ms, fracRes: 0.3899, norm(attn): 0.1572, norm(output): 3.9844, norm(x): 4.1754, norm(y): 0.9982, norm:8.6060, tok/sec: 106368.97, flops:111.64, batch-reuse:1
@ 1290 train 5.6972 , allloss: 19.7772, dt: 1212.26ms, fracRes: 0.3889, norm(attn): 0.1621, norm(output): 4.0000, norm(x): 4.1899, norm(y): 0.9982, norm:18.9952, tok/sec: 108121.76, flops:113.48, batch-reuse:1
@ 1291 train 5.7819 , allloss: 17.0009, dt: 1217.60ms, fracRes: 0.3892, norm(attn): 0.1641, norm(output): 4.0000, norm(x): 4.1929, norm(y): 0.9980, norm:12.2235, tok/sec: 107647.84, flops:112.98, batch-reuse:1
@ 1292 train 5.7421 , allloss: 14.0212, dt: 1222.19ms, fracRes: 0.3910, norm(attn): 0.1582, norm(output): 4.0312, norm(x): 4.1971, norm(y): 0.9981, norm:9.1641, tok/sec: 107243.71, flops:112.55, batch-reuse:1
@ 1293 train 5.7532 , allloss: 9.7587, dt: 1234.21ms, fracRes: 0.3920, norm(attn): 0.1562, norm(output): 4.0312, norm(x): 4.1793, norm(y): 0.9982, norm:7.7656, tok/sec: 106199.27, flops:111.46, batch-reuse:1
@ 1294 train 5.6720 , allloss: 9.2875, dt: 1234.70ms, fracRes: 0.3919, norm(attn): 0.1572, norm(output): 4.0625, norm(x): 4.1888, norm(y): 0.9984, norm:9.9008, tok/sec: 106156.66, flops:111.41, batch-reuse:1
@ 1295 train 5.8527 , allloss: 8.5494, dt: 1236.69ms, fracRes: 0.3928, norm(attn): 0.1562, norm(output): 4.1562, norm(x): 4.2118, norm(y): 0.9982, norm:9.3728, tok/sec: 105986.34, flops:111.23, batch-reuse:1
@ 1296 train 5.7868 , allloss: 8.3135, dt: 1209.91ms, fracRes: 0.3958, norm(attn): 0.1484, norm(output): 4.1875, norm(x): 4.1926, norm(y): 0.9979, norm:8.8679, tok/sec: 108332.05, flops:113.70, batch-reuse:1
@ 1297 train 5.8611 , allloss: 8.3013, dt: 1230.65ms, fracRes: 0.3973, norm(attn): 0.1484, norm(output): 4.2188, norm(x): 4.1862, norm(y): 0.9979, norm:5.4111, tok/sec: 106506.53, flops:111.78, batch-reuse:1
@ 1298 train 5.9613 , allloss: 8.4229, dt: 1240.93ms, fracRes: 0.3938, norm(attn): 0.1553, norm(output): 4.2188, norm(x): 4.2439, norm(y): 0.9978, norm:6.3390, tok/sec: 105623.80, flops:110.85, batch-reuse:1
@ 1299 train 5.9768 , allloss: 8.4009, dt: 1244.16ms, fracRes: 0.3920, norm(attn): 0.1602, norm(output): 4.2500, norm(x): 4.2330, norm(y): 0.9984, norm:7.0473, tok/sec: 105349.84, flops:110.57, batch-reuse:1
@ 1300 train 5.8727 , allloss: 8.2252, dt: 1225.78ms, fracRes: 0.3936, norm(attn): 0.1533, norm(output): 4.2188, norm(x): 4.2439, norm(y): 0.9979, norm:7.2148, tok/sec: 106929.24, flops:112.22, batch-reuse:1
@ 1301 train 5.9718 , allloss: 8.3933, dt: 1202.81ms, fracRes: 0.3962, norm(attn): 0.1426, norm(output): 4.2812, norm(x): 4.2521, norm(y): 0.9976, norm:7.3265, tok/sec: 108971.23, flops:114.37, batch-reuse:1
@ 1302 train 5.9333 , allloss: 8.2868, dt: 1208.41ms, fracRes: 0.3957, norm(attn): 0.1436, norm(output): 4.2812, norm(x): 4.2724, norm(y): 0.9973, norm:5.4615, tok/sec: 108466.17, flops:113.84, batch-reuse:1
@ 1303 train 5.9760 , allloss: 8.3636, dt: 1252.49ms, fracRes: 0.3957, norm(attn): 0.1465, norm(output): 4.3125, norm(x): 4.2769, norm(y): 0.9975, norm:5.7139, tok/sec: 104649.55, flops:109.83, batch-reuse:1
@ 1304 train 5.9669 , allloss: 8.2830, dt: 1250.92ms, fracRes: 0.3948, norm(attn): 0.1553, norm(output): 4.3125, norm(x): 4.2418, norm(y): 0.9982, norm:4.4327, tok/sec: 104780.58, flops:109.97, batch-reuse:1
@ 1305 train 5.9675 , allloss: 8.3870, dt: 1240.72ms, fracRes: 0.3935, norm(attn): 0.1621, norm(output): 4.2812, norm(x): 4.2402, norm(y): 0.9984, norm:5.7614, tok/sec: 105641.88, flops:110.87, batch-reuse:1
@ 1306 train 5.8788 , allloss: 8.4880, dt: 1209.91ms, fracRes: 0.3990, norm(attn): 0.1455, norm(output): 4.3750, norm(x): 4.2326, norm(y): 0.9977, norm:5.7047, tok/sec: 108331.75, flops:113.70, batch-reuse:1
@ 1307 train 6.0109 , allloss: 8.4638, dt: 1220.39ms, fracRes: 0.4008, norm(attn): 0.1445, norm(output): 4.4375, norm(x): 4.2401, norm(y): 0.9972, norm:5.1521, tok/sec: 107401.73, flops:112.72, batch-reuse:1
@ 1308 train 5.9682 , allloss: 8.3513, dt: 1200.07ms, fracRes: 0.3975, norm(attn): 0.1455, norm(output): 4.4688, norm(x): 4.2797, norm(y): 0.9973, norm:4.7828, tok/sec: 109219.96, flops:114.63, batch-reuse:1
@ 1309 train 5.9202 , allloss: 8.3442, dt: 1209.86ms, fracRes: 0.3944, norm(attn): 0.1475, norm(output): 4.4688, norm(x): 4.2998, norm(y): 0.9973, norm:4.6882, tok/sec: 108336.69, flops:113.70, batch-reuse:1
@ 1310 train 5.9273 , allloss: 8.3437, dt: 1208.16ms, fracRes: 0.3926, norm(attn): 0.1553, norm(output): 4.4688, norm(x): 4.3132, norm(y): 0.9980, norm:5.0356, tok/sec: 108488.58, flops:113.86, batch-reuse:1
@ 1311 train 5.9831 , allloss: 8.4492, dt: 1197.73ms, fracRes: 0.3921, norm(attn): 0.1553, norm(output): 4.4688, norm(x): 4.3175, norm(y): 0.9981, norm:4.4847, tok/sec: 109434.09, flops:114.85, batch-reuse:1
@ 1312 train 5.9592 , allloss: 8.3387, dt: 1218.65ms, fracRes: 0.3932, norm(attn): 0.1562, norm(output): 4.4375, norm(x): 4.2903, norm(y): 0.9982, norm:4.1814, tok/sec: 107555.37, flops:112.88, batch-reuse:1
@ 1313 train 5.9777 , allloss: 8.3960, dt: 1213.66ms, fracRes: 0.3938, norm(attn): 0.1553, norm(output): 4.4688, norm(x): 4.3115, norm(y): 0.9977, norm:4.1003, tok/sec: 107997.62, flops:113.35, batch-reuse:1
@ 1314 train 5.9604 , allloss: 8.3623, dt: 1212.26ms, fracRes: 0.3995, norm(attn): 0.1504, norm(output): 4.5000, norm(x): 4.2473, norm(y): 0.9978, norm:4.3202, tok/sec: 108122.06, flops:113.48, batch-reuse:1
@ 1315 train 5.9214 , allloss: 8.3250, dt: 1213.86ms, fracRes: 0.4000, norm(attn): 0.1484, norm(output): 4.5312, norm(x): 4.2938, norm(y): 0.9976, norm:4.3022, tok/sec: 107979.71, flops:113.33, batch-reuse:1
@ 1316 train 5.8676 , allloss: 8.1895, dt: 1225.70ms, fracRes: 0.3975, norm(attn): 0.1494, norm(output): 4.5312, norm(x): 4.3347, norm(y): 0.9977, norm:3.6953, tok/sec: 106936.72, flops:112.23, batch-reuse:1
@ 1317 train 5.9595 , allloss: 8.1884, dt: 1190.12ms, fracRes: 0.3954, norm(attn): 0.1514, norm(output): 4.5000, norm(x): 4.3466, norm(y): 0.9976, norm:3.2693, tok/sec: 110133.52, flops:115.59, batch-reuse:1
@ 1318 train 5.8638 , allloss: 8.0507, dt: 1211.90ms, fracRes: 0.3950, norm(attn): 0.1504, norm(output): 4.5000, norm(x): 4.3329, norm(y): 0.9977, norm:3.5187, tok/sec: 108153.97, flops:113.51, batch-reuse:1
@ 1319 train 5.9665 , allloss: 8.1914, dt: 1221.18ms, fracRes: 0.3998, norm(attn): 0.1465, norm(output): 4.5312, norm(x): 4.2642, norm(y): 0.9978, norm:3.7908, tok/sec: 107332.67, flops:112.65, batch-reuse:1
@ 1320 train 5.9844 , allloss: 8.2967, dt: 1208.15ms, fracRes: 0.4097, norm(attn): 0.1406, norm(output): 4.5000, norm(x): 4.1633, norm(y): 0.9977, norm:4.2209, tok/sec: 108489.74, flops:113.86, batch-reuse:1
@ 1321 train 5.9329 , allloss: 8.2888, dt: 1230.91ms, fracRes: 0.4128, norm(attn): 0.1445, norm(output): 4.5000, norm(x): 4.0997, norm(y): 0.9977, norm:4.2868, tok/sec: 106484.12, flops:111.76, batch-reuse:1
@ 1322 train 5.9162 , allloss: 8.3030, dt: 1220.77ms, fracRes: 0.4126, norm(attn): 0.1426, norm(output): 4.5000, norm(x): 4.0879, norm(y): 0.9976, norm:4.7913, tok/sec: 107368.18, flops:112.68, batch-reuse:1
@ 1323 train 5.9051 , allloss: 8.3316, dt: 1209.23ms, fracRes: 0.4148, norm(attn): 0.1465, norm(output): 4.5000, norm(x): 4.0739, norm(y): 0.9977, norm:5.4109, tok/sec: 108393.23, flops:113.76, batch-reuse:1
@ 1324 train 5.9494 , allloss: 8.4810, dt: 1205.50ms, fracRes: 0.4162, norm(attn): 0.1455, norm(output): 4.4688, norm(x): 4.0514, norm(y): 0.9979, norm:6.2293, tok/sec: 108728.04, flops:114.11, batch-reuse:1
@ 1325 train 5.8660 , allloss: 8.3047, dt: 1192.03ms, fracRes: 0.4201, norm(attn): 0.1445, norm(output): 4.5000, norm(x): 3.9883, norm(y): 0.9981, norm:5.0950, tok/sec: 109956.59, flops:115.40, batch-reuse:1
@ 1326 train 5.8383 , allloss: 8.5038, dt: 1222.15ms, fracRes: 0.4222, norm(attn): 0.1406, norm(output): 4.5000, norm(x): 3.9882, norm(y): 0.9978, norm:6.2283, tok/sec: 107247.04, flops:112.56, batch-reuse:1
@ 1327 train 5.9641 , allloss: 8.6109, dt: 1221.00ms, fracRes: 0.4231, norm(attn): 0.1416, norm(output): 4.5000, norm(x): 3.9981, norm(y): 0.9976, norm:4.9916, tok/sec: 107348.39, flops:112.66, batch-reuse:1
@ 1328 train 5.8837 , allloss: 8.7281, dt: 1222.08ms, fracRes: 0.4237, norm(attn): 0.1455, norm(output): 4.5000, norm(x): 3.9807, norm(y): 0.9977, norm:5.4305, tok/sec: 107252.81, flops:112.56, batch-reuse:1
@ 1329 train 5.9085 , allloss: 9.0549, dt: 1214.82ms, fracRes: 0.4198, norm(attn): 0.1514, norm(output): 4.5000, norm(x): 4.0311, norm(y): 0.9979, norm:8.7876, tok/sec: 107894.54, flops:113.24, batch-reuse:1
@ 1330 train 5.9864 , allloss: 8.8918, dt: 1243.24ms, fracRes: 0.4196, norm(attn): 0.1484, norm(output): 4.5312, norm(x): 4.0653, norm(y): 0.9977, norm:5.4144, tok/sec: 105428.03, flops:110.65, batch-reuse:1
@ 1331 train 5.9281 , allloss: 8.8967, dt: 1240.80ms, fracRes: 0.4207, norm(attn): 0.1523, norm(output): 4.5312, norm(x): 4.0320, norm(y): 0.9977, norm:5.5754, tok/sec: 105635.10, flops:110.87, batch-reuse:1
@ 1332 train 5.8839 , allloss: 8.8324, dt: 1219.36ms, fracRes: 0.4210, norm(attn): 0.1426, norm(output): 4.5000, norm(x): 4.0217, norm(y): 0.9974, norm:7.2812, tok/sec: 107492.34, flops:112.82, batch-reuse:1
@ 1333 train 5.8657 , allloss: 8.7071, dt: 1215.82ms, fracRes: 0.4199, norm(attn): 0.1406, norm(output): 4.5312, norm(x): 4.0578, norm(y): 0.9972, norm:7.0626, tok/sec: 107805.38, flops:113.14, batch-reuse:1
@ 1334 train 5.8643 , allloss: 8.7703, dt: 1201.55ms, fracRes: 0.4229, norm(attn): 0.1396, norm(output): 4.5312, norm(x): 4.0344, norm(y): 0.9968, norm:8.6311, tok/sec: 109085.76, flops:114.49, batch-reuse:1
@ 1335 train 5.9015 , allloss: 8.7923, dt: 1222.60ms, fracRes: 0.4228, norm(attn): 0.1406, norm(output): 4.5000, norm(x): 4.0185, norm(y): 0.9970, norm:7.9108, tok/sec: 107208.01, flops:112.52, batch-reuse:1
@ 1336 train 5.9208 , allloss: 8.6702, dt: 1219.17ms, fracRes: 0.4198, norm(attn): 0.1445, norm(output): 4.5000, norm(x): 4.0684, norm(y): 0.9970, norm:8.8291, tok/sec: 107509.41, flops:112.83, batch-reuse:1
@ 1337 train 5.8912 , allloss: 8.5250, dt: 1208.46ms, fracRes: 0.4164, norm(attn): 0.1514, norm(output): 4.5000, norm(x): 4.0955, norm(y): 0.9972, norm:5.8812, tok/sec: 108462.43, flops:113.83, batch-reuse:1
@ 1338 train 5.8998 , allloss: 8.4255, dt: 1201.33ms, fracRes: 0.4193, norm(attn): 0.1523, norm(output): 4.4688, norm(x): 4.0466, norm(y): 0.9973, norm:5.3983, tok/sec: 109105.38, flops:114.51, batch-reuse:1
@ 1339 train 5.8790 , allloss: 8.4491, dt: 1203.92ms, fracRes: 0.4194, norm(attn): 0.1543, norm(output): 4.4688, norm(x): 4.0626, norm(y): 0.9973, norm:6.3700, tok/sec: 108870.58, flops:114.26, batch-reuse:1
@ 1340 train 5.8575 , allloss: 8.4191, dt: 1197.24ms, fracRes: 0.4210, norm(attn): 0.1436, norm(output): 4.5000, norm(x): 4.0454, norm(y): 0.9973, norm:6.5130, tok/sec: 109478.63, flops:114.90, batch-reuse:1
@ 1341 train 5.9081 , allloss: 8.4804, dt: 1231.62ms, fracRes: 0.4219, norm(attn): 0.1416, norm(output): 4.5000, norm(x): 4.0348, norm(y): 0.9972, norm:9.1120, tok/sec: 106422.14, flops:111.69, batch-reuse:1
@ 1342 train 5.9907 , allloss: 8.5353, dt: 1237.12ms, fracRes: 0.4238, norm(attn): 0.1396, norm(output): 4.4688, norm(x): 4.0321, norm(y): 0.9969, norm:6.9209, tok/sec: 105948.88, flops:111.20, batch-reuse:1
@ 1343 train 5.8363 , allloss: 8.3470, dt: 1256.19ms, fracRes: 0.4247, norm(attn): 0.1416, norm(output): 4.5000, norm(x): 4.0005, norm(y): 0.9971, norm:6.4525, tok/sec: 104341.22, flops:109.51, batch-reuse:1
@ 1344 train 5.8414 , allloss: 8.3751, dt: 1244.76ms, fracRes: 0.4256, norm(attn): 0.1416, norm(output): 4.4688, norm(x): 3.9912, norm(y): 0.9972, norm:6.4822, tok/sec: 105299.29, flops:110.51, batch-reuse:1
@ 1345 train 5.7433 , allloss: 8.2841, dt: 1236.05ms, fracRes: 0.4226, norm(attn): 0.1475, norm(output): 4.4688, norm(x): 4.0176, norm(y): 0.9972, norm:6.0205, tok/sec: 106040.97, flops:111.29, batch-reuse:1
@ 1346 train 5.8275 , allloss: 8.3375, dt: 1242.68ms, fracRes: 0.4215, norm(attn): 0.1484, norm(output): 4.4688, norm(x): 4.0308, norm(y): 0.9970, norm:7.0546, tok/sec: 105474.91, flops:110.70, batch-reuse:1
@ 1347 train 5.7938 , allloss: 8.4279, dt: 1238.79ms, fracRes: 0.4205, norm(attn): 0.1523, norm(output): 4.4688, norm(x): 4.0465, norm(y): 0.9972, norm:10.2899, tok/sec: 105806.59, flops:111.05, batch-reuse:1
@ 1348 train 5.8465 , allloss: 8.4172, dt: 1215.70ms, fracRes: 0.4191, norm(attn): 0.1514, norm(output): 4.4688, norm(x): 4.0828, norm(y): 0.9972, norm:8.4632, tok/sec: 107816.27, flops:113.16, batch-reuse:1
@ 1349 train 5.8764 , allloss: 8.5733, dt: 1227.05ms, fracRes: 0.4181, norm(attn): 0.1484, norm(output): 4.4688, norm(x): 4.0898, norm(y): 0.9974, norm:8.7678, tok/sec: 106818.95, flops:112.11, batch-reuse:1
@ 1350 train 5.7772 , allloss: 8.4411, dt: 1233.03ms, fracRes: 0.4223, norm(attn): 0.1465, norm(output): 4.4688, norm(x): 4.0612, norm(y): 0.9973, norm:8.6022, tok/sec: 106300.73, flops:111.56, batch-reuse:1
@ 1351 train 5.8547 , allloss: 8.4463, dt: 1209.69ms, fracRes: 0.4242, norm(attn): 0.1436, norm(output): 4.5000, norm(x): 4.0458, norm(y): 0.9973, norm:7.9305, tok/sec: 108351.46, flops:113.72, batch-reuse:1
@ 1352 train 5.9127 , allloss: 8.4279, dt: 1210.61ms, fracRes: 0.4282, norm(attn): 0.1416, norm(output): 4.4688, norm(x): 4.0220, norm(y): 0.9970, norm:7.3475, tok/sec: 108269.07, flops:113.63, batch-reuse:1
@ 1353 train 5.8522 , allloss: 8.3601, dt: 1210.40ms, fracRes: 0.4261, norm(attn): 0.1426, norm(output): 4.4688, norm(x): 4.0077, norm(y): 0.9972, norm:7.1293, tok/sec: 108288.50, flops:113.65, batch-reuse:1
@ 1354 train 5.8588 , allloss: 8.4934, dt: 1241.04ms, fracRes: 0.4283, norm(attn): 0.1436, norm(output): 4.4375, norm(x): 3.9670, norm(y): 0.9971, norm:5.7126, tok/sec: 105614.34, flops:110.84, batch-reuse:1
@ 1355 train 5.8344 , allloss: 8.5709, dt: 1207.58ms, fracRes: 0.4304, norm(attn): 0.1436, norm(output): 4.4688, norm(x): 3.9337, norm(y): 0.9971, norm:6.7757, tok/sec: 108541.41, flops:113.92, batch-reuse:1
@ 1356 train 5.9018 , allloss: 8.6170, dt: 1218.52ms, fracRes: 0.4290, norm(attn): 0.1465, norm(output): 4.4375, norm(x): 3.9681, norm(y): 0.9973, norm:6.1554, tok/sec: 107566.37, flops:112.89, batch-reuse:1
@ 1357 train 5.8435 , allloss: 8.6277, dt: 1219.41ms, fracRes: 0.4248, norm(attn): 0.1553, norm(output): 4.4375, norm(x): 4.0078, norm(y): 0.9975, norm:8.9827, tok/sec: 107487.93, flops:112.81, batch-reuse:1
@ 1358 train 5.8277 , allloss: 8.5254, dt: 1210.54ms, fracRes: 0.4239, norm(attn): 0.1533, norm(output): 4.4688, norm(x): 4.0422, norm(y): 0.9977, norm:7.8244, tok/sec: 108275.38, flops:113.64, batch-reuse:1
@ 1359 train 5.7616 , allloss: 8.6492, dt: 1217.48ms, fracRes: 0.4252, norm(attn): 0.1436, norm(output): 4.4688, norm(x): 4.0302, norm(y): 0.9974, norm:8.6446, tok/sec: 107658.81, flops:112.99, batch-reuse:1
@ 1360 train 5.7845 , allloss: 8.5102, dt: 1198.64ms, fracRes: 0.4288, norm(attn): 0.1367, norm(output): 4.4688, norm(x): 3.9939, norm(y): 0.9975, norm:7.2601, tok/sec: 109350.65, flops:114.77, batch-reuse:1
@ 1361 train 5.8310 , allloss: 8.7824, dt: 1220.90ms, fracRes: 0.4311, norm(attn): 0.1396, norm(output): 4.4688, norm(x): 3.9605, norm(y): 0.9977, norm:11.3369, tok/sec: 107356.84, flops:112.67, batch-reuse:1
@ 1362 train 5.8991 , allloss: 8.7579, dt: 1217.19ms, fracRes: 0.4294, norm(attn): 0.1406, norm(output): 4.4688, norm(x): 3.9769, norm(y): 0.9977, norm:8.6247, tok/sec: 107684.32, flops:113.02, batch-reuse:1
@ 1363 train 5.7994 , allloss: 8.5414, dt: 1212.40ms, fracRes: 0.4287, norm(attn): 0.1406, norm(output): 4.4375, norm(x): 4.0027, norm(y): 0.9976, norm:7.3045, tok/sec: 108109.28, flops:113.46, batch-reuse:1
@ 1364 train 5.7595 , allloss: 8.4295, dt: 1232.17ms, fracRes: 0.4263, norm(attn): 0.1396, norm(output): 4.4688, norm(x): 4.0473, norm(y): 0.9974, norm:7.7584, tok/sec: 106374.63, flops:111.64, batch-reuse:1
@ 1365 train 5.8666 , allloss: 8.4652, dt: 1246.04ms, fracRes: 0.4211, norm(attn): 0.1387, norm(output): 4.4375, norm(x): 4.1208, norm(y): 0.9971, norm:4.7991, tok/sec: 105190.49, flops:110.40, batch-reuse:1
@ 1366 train 5.8220 , allloss: 8.8955, dt: 1188.66ms, fracRes: 0.4149, norm(attn): 0.1436, norm(output): 4.4688, norm(x): 4.1932, norm(y): 0.9971, norm:4.2068, tok/sec: 110268.74, flops:115.73, batch-reuse:1
@ 1367 train 5.8447 , allloss: 8.5640, dt: 1218.06ms, fracRes: 0.4176, norm(attn): 0.1465, norm(output): 4.4688, norm(x): 4.1718, norm(y): 0.9973, norm:4.4544, tok/sec: 107607.47, flops:112.94, batch-reuse:1
@ 1368 train 5.9688 , allloss: 8.7619, dt: 1201.13ms, fracRes: 0.4190, norm(attn): 0.1475, norm(output): 4.5000, norm(x): 4.2075, norm(y): 0.9966, norm:4.7689, tok/sec: 109123.81, flops:114.53, batch-reuse:1
@ 1369 train 5.9270 , allloss: 8.7234, dt: 1207.10ms, fracRes: 0.4202, norm(attn): 0.1504, norm(output): 4.4688, norm(x): 4.1854, norm(y): 0.9969, norm:4.4933, tok/sec: 108584.00, flops:113.96, batch-reuse:1
@ 1370 train 5.8419 , allloss: 8.6362, dt: 1204.40ms, fracRes: 0.4233, norm(attn): 0.1504, norm(output): 4.5000, norm(x): 4.1501, norm(y): 0.9970, norm:4.1625, tok/sec: 108828.06, flops:114.22, batch-reuse:1
@ 1371 train 5.9012 , allloss: 8.7402, dt: 1229.44ms, fracRes: 0.4213, norm(attn): 0.1484, norm(output): 4.5000, norm(x): 4.1859, norm(y): 0.9968, norm:4.9429, tok/sec: 106611.25, flops:111.89, batch-reuse:1
@ 1372 train 5.8152 , allloss: 8.5847, dt: 1207.23ms, fracRes: 0.4265, norm(attn): 0.1426, norm(output): 4.5312, norm(x): 4.1476, norm(y): 0.9967, norm:4.8951, tok/sec: 108572.44, flops:113.95, batch-reuse:1
@ 1373 train 5.7981 , allloss: 8.5289, dt: 1210.31ms, fracRes: 0.4298, norm(attn): 0.1406, norm(output): 4.5000, norm(x): 4.0789, norm(y): 0.9970, norm:4.9013, tok/sec: 108296.35, flops:113.66, batch-reuse:1
@ 1374 train 5.8002 , allloss: 8.5212, dt: 1194.72ms, fracRes: 0.4318, norm(attn): 0.1426, norm(output): 4.5000, norm(x): 4.0686, norm(y): 0.9969, norm:5.0357, tok/sec: 109709.47, flops:115.14, batch-reuse:1
@ 1375 train 5.8005 , allloss: 8.6267, dt: 1211.61ms, fracRes: 0.4346, norm(attn): 0.1436, norm(output): 4.4688, norm(x): 4.0141, norm(y): 0.9970, norm:5.0490, tok/sec: 108180.29, flops:113.54, batch-reuse:1
@ 1376 train 5.7553 , allloss: 8.7828, dt: 1195.23ms, fracRes: 0.4360, norm(attn): 0.1475, norm(output): 4.5312, norm(x): 4.0178, norm(y): 0.9971, norm:7.3710, tok/sec: 109662.57, flops:115.09, batch-reuse:1
@ 1377 train 5.7996 , allloss: 8.7944, dt: 1205.69ms, fracRes: 0.4368, norm(attn): 0.1553, norm(output): 4.5000, norm(x): 4.0082, norm(y): 0.9973, norm:6.3448, tok/sec: 108711.42, flops:114.09, batch-reuse:1
@ 1378 train 5.9120 , allloss: 8.9664, dt: 1182.90ms, fracRes: 0.4379, norm(attn): 0.1553, norm(output): 4.5000, norm(x): 4.0096, norm(y): 0.9973, norm:5.9169, tok/sec: 110805.81, flops:116.29, batch-reuse:1
@ 1379 train 5.8429 , allloss: 8.8917, dt: 1218.64ms, fracRes: 0.4371, norm(attn): 0.1533, norm(output): 4.5312, norm(x): 4.0474, norm(y): 0.9973, norm:7.0510, tok/sec: 107555.87, flops:112.88, batch-reuse:1
@ 1380 train 5.7228 , allloss: 8.5823, dt: 1206.54ms, fracRes: 0.4372, norm(attn): 0.1543, norm(output): 4.5312, norm(x): 4.0240, norm(y): 0.9976, norm:4.9779, tok/sec: 108635.01, flops:114.01, batch-reuse:1
@ 1381 train 5.7893 , allloss: 8.6989, dt: 1225.42ms, fracRes: 0.4399, norm(attn): 0.1543, norm(output): 4.5000, norm(x): 3.9950, norm(y): 0.9973, norm:5.5180, tok/sec: 106960.82, flops:112.26, batch-reuse:1
@ 1382 train 5.7737 , allloss: 8.8457, dt: 1211.85ms, fracRes: 0.4414, norm(attn): 0.1543, norm(output): 4.5312, norm(x): 4.0019, norm(y): 0.9973, norm:7.2717, tok/sec: 108158.69, flops:113.51, batch-reuse:1
@ 1383 train 5.8503 , allloss: 8.6923, dt: 1233.78ms, fracRes: 0.4400, norm(attn): 0.1523, norm(output): 4.5625, norm(x): 4.0681, norm(y): 0.9970, norm:5.1549, tok/sec: 106236.27, flops:111.50, batch-reuse:1
@ 1384 train 5.7278 , allloss: 8.5553, dt: 1234.62ms, fracRes: 0.4400, norm(attn): 0.1514, norm(output): 4.5625, norm(x): 4.0700, norm(y): 0.9973, norm:5.7749, tok/sec: 106163.46, flops:111.42, batch-reuse:1
@ 1385 train 5.7951 , allloss: 8.6486, dt: 1195.83ms, fracRes: 0.4406, norm(attn): 0.1504, norm(output): 4.5312, norm(x): 4.0436, norm(y): 0.9973, norm:5.3405, tok/sec: 109607.19, flops:115.03, batch-reuse:1
@ 1386 train 5.7530 , allloss: 8.6494, dt: 1194.65ms, fracRes: 0.4406, norm(attn): 0.1543, norm(output): 4.5312, norm(x): 4.0536, norm(y): 0.9972, norm:5.2741, tok/sec: 109715.36, flops:115.15, batch-reuse:1
@ 1387 train 5.7531 , allloss: 8.8779, dt: 1213.35ms, fracRes: 0.4433, norm(attn): 0.1523, norm(output): 4.5312, norm(x): 4.0454, norm(y): 0.9971, norm:6.1090, tok/sec: 108025.16, flops:113.37, batch-reuse:1
@ 1388 train 5.8354 , allloss: 9.3212, dt: 1227.70ms, fracRes: 0.4444, norm(attn): 0.1533, norm(output): 4.5312, norm(x): 4.0426, norm(y): 0.9971, norm:12.3503, tok/sec: 106761.82, flops:112.05, batch-reuse:1
@ 1389 train 5.6592 , allloss: 9.0986, dt: 1236.21ms, fracRes: 0.4452, norm(attn): 0.1533, norm(output): 4.5938, norm(x): 4.0740, norm(y): 0.9967, norm:10.7981, tok/sec: 106027.39, flops:111.28, batch-reuse:1
@ 1390 train 5.9152 , allloss: 9.3468, dt: 1202.86ms, fracRes: 0.4498, norm(attn): 0.1523, norm(output): 4.5625, norm(x): 4.0459, norm(y): 0.9966, norm:10.7060, tok/sec: 108967.36, flops:114.36, batch-reuse:1
@ 1391 train 5.8126 , allloss: 9.0825, dt: 1244.14ms, fracRes: 0.4435, norm(attn): 0.1504, norm(output): 4.5625, norm(x): 4.0464, norm(y): 0.9969, norm:6.3965, tok/sec: 105351.82, flops:110.57, batch-reuse:1
@ 1392 train 5.7673 , allloss: 8.9641, dt: 1213.35ms, fracRes: 0.4402, norm(attn): 0.1523, norm(output): 4.5625, norm(x): 4.0669, norm(y): 0.9972, norm:5.6486, tok/sec: 108025.16, flops:113.37, batch-reuse:1
@ 1393 train 5.7576 , allloss: 9.0660, dt: 1225.98ms, fracRes: 0.4381, norm(attn): 0.1562, norm(output): 4.5938, norm(x): 4.1025, norm(y): 0.9973, norm:8.6279, tok/sec: 106911.85, flops:112.21, batch-reuse:1
@ 1394 train 5.7280 , allloss: 9.5378, dt: 1201.59ms, fracRes: 0.4418, norm(attn): 0.1504, norm(output): 4.5625, norm(x): 4.0388, norm(y): 0.9972, norm:6.9012, tok/sec: 109082.21, flops:114.48, batch-reuse:1
@ 1395 train 5.7364 , allloss: 9.0174, dt: 1224.01ms, fracRes: 0.4459, norm(attn): 0.1484, norm(output): 4.5625, norm(x): 3.9675, norm(y): 0.9973, norm:7.3517, tok/sec: 107083.76, flops:112.39, batch-reuse:1
@ 1396 train 5.7405 , allloss: 8.7851, dt: 1240.54ms, fracRes: 0.4466, norm(attn): 0.1455, norm(output): 4.5312, norm(x): 3.9630, norm(y): 0.9974, norm:6.1682, tok/sec: 105657.17, flops:110.89, batch-reuse:1
@ 1397 train 5.7718 , allloss: 9.3811, dt: 1245.08ms, fracRes: 0.4453, norm(attn): 0.1494, norm(output): 4.5312, norm(x): 3.9830, norm(y): 0.9973, norm:6.1233, tok/sec: 105271.75, flops:110.48, batch-reuse:1
@ 1398 train 5.7708 , allloss: 8.6854, dt: 1214.41ms, fracRes: 0.4446, norm(attn): 0.1504, norm(output): 4.5312, norm(x): 3.9813, norm(y): 0.9974, norm:5.0734, tok/sec: 107930.40, flops:113.27, batch-reuse:1
@ 1399 train 5.6854 , allloss: 8.6651, dt: 1218.23ms, fracRes: 0.4418, norm(attn): 0.1416, norm(output): 4.5312, norm(x): 4.0061, norm(y): 0.9972, norm:5.7135, tok/sec: 107592.41, flops:112.92, batch-reuse:1
@ 1400 train 5.8493 , allloss: 8.9553, dt: 1216.88ms, fracRes: 0.4406, norm(attn): 0.1416, norm(output): 4.5312, norm(x): 4.0167, norm(y): 0.9969, norm:6.3513, tok/sec: 107711.88, flops:113.05, batch-reuse:1
@ 1401 train 5.7142 , allloss: 8.7915, dt: 1214.15ms, fracRes: 0.4424, norm(attn): 0.1445, norm(output): 4.5312, norm(x): 4.0258, norm(y): 0.9970, norm:4.8519, tok/sec: 107953.99, flops:113.30, batch-reuse:1
@ 1402 train 5.6720 , allloss: 8.7601, dt: 1217.02ms, fracRes: 0.4454, norm(attn): 0.1455, norm(output): 4.5312, norm(x): 3.9980, norm(y): 0.9970, norm:7.0001, tok/sec: 107698.98, flops:113.03, batch-reuse:1
@ 1403 train 5.7831 , allloss: 8.9128, dt: 1226.27ms, fracRes: 0.4490, norm(attn): 0.1465, norm(output): 4.5312, norm(x): 3.9739, norm(y): 0.9971, norm:7.3954, tok/sec: 106886.35, flops:112.18, batch-reuse:1
@ 1404 train 5.7244 , allloss: 8.7027, dt: 1200.42ms, fracRes: 0.4486, norm(attn): 0.1494, norm(output): 4.5312, norm(x): 4.0058, norm(y): 0.9970, norm:5.7227, tok/sec: 109188.09, flops:114.59, batch-reuse:1
@ 1405 train 5.7506 , allloss: 8.6295, dt: 1197.87ms, fracRes: 0.4509, norm(attn): 0.1494, norm(output): 4.5000, norm(x): 4.0145, norm(y): 0.9968, norm:5.5010, tok/sec: 109421.06, flops:114.84, batch-reuse:1
@ 1406 train 5.8508 , allloss: 8.6041, dt: 1236.48ms, fracRes: 0.4467, norm(attn): 0.1445, norm(output): 4.5000, norm(x): 4.0576, norm(y): 0.9966, norm:5.4646, tok/sec: 106004.00, flops:111.25, batch-reuse:1
@ 1407 train 5.7452 , allloss: 8.4816, dt: 1214.05ms, fracRes: 0.4464, norm(attn): 0.1445, norm(output): 4.5000, norm(x): 4.0662, norm(y): 0.9968, norm:4.7111, tok/sec: 107962.88, flops:113.31, batch-reuse:1
@ 1408 train 5.7696 , allloss: 8.4825, dt: 1213.45ms, fracRes: 0.4441, norm(attn): 0.1475, norm(output): 4.5000, norm(x): 4.0917, norm(y): 0.9964, norm:4.8618, tok/sec: 108016.31, flops:113.37, batch-reuse:1
@ 1409 train 5.7888 , allloss: 8.4084, dt: 1234.74ms, fracRes: 0.4461, norm(attn): 0.1494, norm(output): 4.5312, norm(x): 4.1189, norm(y): 0.9969, norm:5.9961, tok/sec: 106153.30, flops:111.41, batch-reuse:1
@ 1410 train 5.7418 , allloss: 8.2481, dt: 1222.71ms, fracRes: 0.4467, norm(attn): 0.1523, norm(output): 4.5000, norm(x): 4.0832, norm(y): 0.9970, norm:4.2768, tok/sec: 107198.23, flops:112.51, batch-reuse:1
@ 1411 train 5.7362 , allloss: 8.2070, dt: 1209.37ms, fracRes: 0.4508, norm(attn): 0.1455, norm(output): 4.4688, norm(x): 3.9995, norm(y): 0.9970, norm:4.4029, tok/sec: 108380.45, flops:113.75, batch-reuse:1
@ 1412 train 5.6984 , allloss: 8.0915, dt: 1192.19ms, fracRes: 0.4558, norm(attn): 0.1406, norm(output): 4.4688, norm(x): 3.9277, norm(y): 0.9969, norm:4.2703, tok/sec: 109942.28, flops:115.39, batch-reuse:1
@ 1413 train 5.6865 , allloss: 8.0318, dt: 1217.86ms, fracRes: 0.4602, norm(attn): 0.1426, norm(output): 4.4375, norm(x): 3.8723, norm(y): 0.9970, norm:3.4829, tok/sec: 107624.62, flops:112.95, batch-reuse:1
@ 1414 train 5.7012 , allloss: 8.1450, dt: 1236.57ms, fracRes: 0.4578, norm(attn): 0.1475, norm(output): 4.4688, norm(x): 3.9424, norm(y): 0.9972, norm:4.0614, tok/sec: 105996.03, flops:111.24, batch-reuse:1
@ 1415 train 5.7776 , allloss: 8.1895, dt: 1228.67ms, fracRes: 0.4582, norm(attn): 0.1455, norm(output): 4.4688, norm(x): 3.9799, norm(y): 0.9973, norm:3.4761, tok/sec: 106677.88, flops:111.96, batch-reuse:1
@ 1416 train 5.8000 , allloss: 8.2253, dt: 1199.01ms, fracRes: 0.4585, norm(attn): 0.1504, norm(output): 4.4688, norm(x): 4.0531, norm(y): 0.9973, norm:3.4331, tok/sec: 109316.71, flops:114.73, batch-reuse:1
@ 1417 train 5.7160 , allloss: 8.0660, dt: 1199.63ms, fracRes: 0.4655, norm(attn): 0.1465, norm(output): 4.5000, norm(x): 4.0209, norm(y): 0.9975, norm:3.0916, tok/sec: 109260.35, flops:114.67, batch-reuse:1
@ 1418 train 5.7096 , allloss: 8.0171, dt: 1216.99ms, fracRes: 0.4729, norm(attn): 0.1396, norm(output): 4.4688, norm(x): 3.9978, norm(y): 0.9974, norm:3.1831, tok/sec: 107701.64, flops:113.03, batch-reuse:1
@ 1419 train 5.8112 , allloss: 8.2383, dt: 1235.07ms, fracRes: 0.4830, norm(attn): 0.1377, norm(output): 4.5000, norm(x): 3.9758, norm(y): 0.9975, norm:5.4451, tok/sec: 106125.53, flops:111.38, batch-reuse:1
@ 1420 train 5.7865 , allloss: 8.0796, dt: 1255.96ms, fracRes: 0.4937, norm(attn): 0.1377, norm(output): 4.4688, norm(x): 3.9271, norm(y): 0.9973, norm:5.4368, tok/sec: 104359.74, flops:109.53, batch-reuse:1
@ 1421 train 5.7702 , allloss: 8.0103, dt: 1255.71ms, fracRes: 0.5002, norm(attn): 0.1396, norm(output): 4.4688, norm(x): 3.8964, norm(y): 0.9974, norm:5.2694, tok/sec: 104380.60, flops:109.55, batch-reuse:1
@ 1422 train 5.7146 , allloss: 7.8389, dt: 1233.89ms, fracRes: 0.5032, norm(attn): 0.1416, norm(output): 4.4688, norm(x): 3.8737, norm(y): 0.9975, norm:5.9412, tok/sec: 106226.44, flops:111.49, batch-reuse:1
@ 1423 train 5.7443 , allloss: 8.5481, dt: 1216.72ms, fracRes: 0.4958, norm(attn): 0.1426, norm(output): 4.5000, norm(x): 3.9177, norm(y): 0.9975, norm:5.7778, tok/sec: 107725.57, flops:113.06, batch-reuse:1
@ 1424 train 5.7238 , allloss: 7.8546, dt: 1211.26ms, fracRes: 0.4954, norm(attn): 0.1396, norm(output): 4.4688, norm(x): 3.9545, norm(y): 0.9974, norm:6.6547, tok/sec: 108211.04, flops:113.57, batch-reuse:1
@ 1425 train 5.7115 , allloss: 12.6438, dt: 1240.70ms, fracRes: 0.4834, norm(attn): 0.1377, norm(output): 4.5312, norm(x): 4.0397, norm(y): 0.9973, norm:9.2079, tok/sec: 105643.79, flops:110.88, batch-reuse:1
@ 1426 train 5.6309 , allloss: 7.8390, dt: 1235.70ms, fracRes: 0.4796, norm(attn): 0.1406, norm(output): 4.5312, norm(x): 4.1022, norm(y): 0.9972, norm:5.0568, tok/sec: 106071.23, flops:111.32, batch-reuse:1
@ 1427 train 5.7250 , allloss: 9.0574, dt: 1222.88ms, fracRes: 0.4948, norm(attn): 0.1406, norm(output): 4.5312, norm(x): 4.1056, norm(y): 0.9972, norm:6.9275, tok/sec: 107183.03, flops:112.49, batch-reuse:1
@ 1428 train 5.6984 , allloss: 8.2252, dt: 1205.19ms, fracRes: 0.5001, norm(attn): 0.1455, norm(output): 4.5312, norm(x): 4.1231, norm(y): 0.9973, norm:5.5295, tok/sec: 108755.89, flops:114.14, batch-reuse:1
@ 1429 train 5.6963 , allloss: 9.1523, dt: 1217.53ms, fracRes: 0.5026, norm(attn): 0.1455, norm(output): 4.6250, norm(x): 4.1812, norm(y): 0.9968, norm:6.9425, tok/sec: 107653.96, flops:112.98, batch-reuse:1
@ 1430 train 5.7310 , allloss: 7.6555, dt: 1234.93ms, fracRes: 0.5050, norm(attn): 0.1484, norm(output): 4.6875, norm(x): 4.1738, norm(y): 0.9973, norm:5.4484, tok/sec: 106137.58, flops:111.39, batch-reuse:1
@ 1431 train 5.6947 , allloss: 7.5977, dt: 1242.06ms, fracRes: 0.5102, norm(attn): 0.1465, norm(output): 4.6562, norm(x): 4.1326, norm(y): 0.9975, norm:7.8125, tok/sec: 105527.49, flops:110.75, batch-reuse:1
@ 1432 train 5.6620 , allloss: 7.5418, dt: 1217.80ms, fracRes: 0.5135, norm(attn): 0.1436, norm(output): 4.7188, norm(x): 4.1166, norm(y): 0.9974, norm:7.8818, tok/sec: 107630.56, flops:112.96, batch-reuse:1
@ 1433 train 5.7162 , allloss: 7.5755, dt: 1237.25ms, fracRes: 0.5111, norm(attn): 0.1416, norm(output): 4.7500, norm(x): 4.1729, norm(y): 0.9970, norm:6.7871, tok/sec: 105938.10, flops:111.18, batch-reuse:1
@ 1434 train 5.7642 , allloss: 7.6263, dt: 1231.46ms, fracRes: 0.5122, norm(attn): 0.1387, norm(output): 4.7500, norm(x): 4.1602, norm(y): 0.9971, norm:6.4615, tok/sec: 106436.67, flops:111.71, batch-reuse:1
@ 1435 train 5.6860 , allloss: 7.5421, dt: 1224.50ms, fracRes: 0.5086, norm(attn): 0.1416, norm(output): 4.8125, norm(x): 4.2100, norm(y): 0.9972, norm:5.9824, tok/sec: 107041.08, flops:112.34, batch-reuse:1
@ 1436 train 5.6739 , allloss: 7.4472, dt: 1191.42ms, fracRes: 0.5117, norm(attn): 0.1436, norm(output): 4.7500, norm(x): 4.1974, norm(y): 0.9972, norm:6.0928, tok/sec: 110013.36, flops:115.46, batch-reuse:1
@ 1437 train 5.6854 , allloss: 9.0318, dt: 1210.47ms, fracRes: 0.5079, norm(attn): 0.1475, norm(output): 4.8125, norm(x): 4.2706, norm(y): 0.9974, norm:6.5167, tok/sec: 108282.19, flops:113.64, batch-reuse:1
@ 1438 train 5.6027 , allloss: 7.4110, dt: 1214.97ms, fracRes: 0.5104, norm(attn): 0.1455, norm(output): 4.9375, norm(x): 4.2749, norm(y): 0.9975, norm:7.0477, tok/sec: 107880.44, flops:113.22, batch-reuse:1
@ 1439 train 5.6427 , allloss: 7.3951, dt: 1211.03ms, fracRes: 0.5131, norm(attn): 0.1416, norm(output): 4.9375, norm(x): 4.2631, norm(y): 0.9973, norm:7.4158, tok/sec: 108231.43, flops:113.59, batch-reuse:1
@ 1440 train 5.6709 , allloss: 7.3776, dt: 1212.35ms, fracRes: 0.5125, norm(attn): 0.1406, norm(output): 4.9688, norm(x): 4.2829, norm(y): 0.9971, norm:6.5391, tok/sec: 108114.22, flops:113.47, batch-reuse:1
@ 1441 train 5.6432 , allloss: 7.2979, dt: 1221.55ms, fracRes: 0.5156, norm(attn): 0.1396, norm(output): 4.9688, norm(x): 4.2300, norm(y): 0.9972, norm:5.0633, tok/sec: 107299.74, flops:112.61, batch-reuse:1
@ 1442 train 5.6385 , allloss: 7.2681, dt: 1219.77ms, fracRes: 0.5189, norm(attn): 0.1348, norm(output): 5.0000, norm(x): 4.1984, norm(y): 0.9971, norm:4.4128, tok/sec: 107456.12, flops:112.78, batch-reuse:1
@ 1443 train 5.6363 , allloss: 7.1841, dt: 1208.48ms, fracRes: 0.5186, norm(attn): 0.1328, norm(output): 5.0000, norm(x): 4.1978, norm(y): 0.9970, norm:4.2399, tok/sec: 108460.25, flops:113.83, batch-reuse:1
@ 1444 train 5.6497 , allloss: 7.2015, dt: 1215.25ms, fracRes: 0.5147, norm(attn): 0.1396, norm(output): 5.0312, norm(x): 4.2662, norm(y): 0.9973, norm:5.3772, tok/sec: 107855.57, flops:113.20, batch-reuse:1
@ 1445 train 5.7147 , allloss: 7.2230, dt: 1219.17ms, fracRes: 0.5136, norm(attn): 0.1445, norm(output): 5.0312, norm(x): 4.2935, norm(y): 0.9972, norm:4.7253, tok/sec: 107509.58, flops:112.83, batch-reuse:1
@ 1446 train 5.6961 , allloss: 7.2127, dt: 1204.42ms, fracRes: 0.5160, norm(attn): 0.1416, norm(output): 5.0312, norm(x): 4.2521, norm(y): 0.9976, norm:4.5498, tok/sec: 108826.08, flops:114.21, batch-reuse:1
@ 1447 train 5.6802 , allloss: 7.2470, dt: 1245.03ms, fracRes: 0.5155, norm(attn): 0.1387, norm(output): 5.0312, norm(x): 4.2673, norm(y): 0.9973, norm:4.2883, tok/sec: 105275.92, flops:110.49, batch-reuse:1
@ 1448 train 5.6333 , allloss: 8.4890, dt: 1213.82ms, fracRes: 0.5161, norm(attn): 0.1367, norm(output): 5.0625, norm(x): 4.2340, norm(y): 0.9971, norm:3.4716, tok/sec: 107983.38, flops:113.33, batch-reuse:1
@ 1449 train 5.7459 , allloss: 7.4313, dt: 1203.62ms, fracRes: 0.5195, norm(attn): 0.1357, norm(output): 5.0625, norm(x): 4.1964, norm(y): 0.9972, norm:4.3830, tok/sec: 108898.12, flops:114.29, batch-reuse:1
@ 1450 train 5.7350 , allloss: 7.3348, dt: 1208.51ms, fracRes: 0.5245, norm(attn): 0.1289, norm(output): 5.0938, norm(x): 4.1270, norm(y): 0.9969, norm:3.6153, tok/sec: 108457.46, flops:113.83, batch-reuse:1
@ 1451 train 5.7776 , allloss: 7.3467, dt: 1202.77ms, fracRes: 0.5289, norm(attn): 0.1309, norm(output): 5.0312, norm(x): 4.0729, norm(y): 0.9966, norm:4.3468, tok/sec: 108975.20, flops:114.37, batch-reuse:1
@ 1452 train 5.6437 , allloss: 7.1428, dt: 1213.35ms, fracRes: 0.5289, norm(attn): 0.1338, norm(output): 5.0312, norm(x): 4.0431, norm(y): 0.9973, norm:4.0920, tok/sec: 108025.16, flops:113.37, batch-reuse:1
@ 1453 train 5.6721 , allloss: 7.2110, dt: 1224.43ms, fracRes: 0.5303, norm(attn): 0.1357, norm(output): 5.0000, norm(x): 4.0260, norm(y): 0.9974, norm:5.4793, tok/sec: 107047.44, flops:112.35, batch-reuse:1
@ 1454 train 5.7041 , allloss: 8.4215, dt: 1222.90ms, fracRes: 0.5314, norm(attn): 0.1377, norm(output): 5.0000, norm(x): 4.0136, norm(y): 0.9976, norm:6.1109, tok/sec: 107181.57, flops:112.49, batch-reuse:1
@ 1455 train 5.6433 , allloss: 7.1079, dt: 1215.38ms, fracRes: 0.5295, norm(attn): 0.1406, norm(output): 5.0312, norm(x): 4.0396, norm(y): 0.9978, norm:3.6426, tok/sec: 107844.08, flops:113.18, batch-reuse:1
@ 1456 train 5.6561 , allloss: 7.0772, dt: 1211.31ms, fracRes: 0.5300, norm(attn): 0.1416, norm(output): 5.0312, norm(x): 4.0108, norm(y): 0.9976, norm:3.4142, tok/sec: 108206.57, flops:113.56, batch-reuse:1
@ 1457 train 5.6626 , allloss: 7.8260, dt: 1219.53ms, fracRes: 0.5312, norm(attn): 0.1348, norm(output): 5.0000, norm(x): 3.9657, norm(y): 0.9975, norm:3.5815, tok/sec: 107477.21, flops:112.80, batch-reuse:1
@ 1458 train 5.7075 , allloss: 7.1809, dt: 1216.33ms, fracRes: 0.5323, norm(attn): 0.1279, norm(output): 5.0000, norm(x): 3.9416, norm(y): 0.9972, norm:2.8092, tok/sec: 107760.08, flops:113.10, batch-reuse:1
@ 1459 train 5.7641 , allloss: 7.3028, dt: 1210.55ms, fracRes: 0.5340, norm(attn): 0.1348, norm(output): 5.0000, norm(x): 3.9207, norm(y): 0.9971, norm:2.9979, tok/sec: 108275.17, flops:113.64, batch-reuse:1
@ 1460 train 5.6891 , allloss: 7.2189, dt: 1200.16ms, fracRes: 0.5290, norm(attn): 0.1436, norm(output): 5.0625, norm(x): 4.0319, norm(y): 0.9975, norm:3.1273, tok/sec: 109212.04, flops:114.62, batch-reuse:1
@ 1461 train 5.6243 , allloss: 9.0007, dt: 1216.10ms, fracRes: 0.5256, norm(attn): 0.1406, norm(output): 5.0938, norm(x): 4.1131, norm(y): 0.9976, norm:3.6633, tok/sec: 107780.76, flops:113.12, batch-reuse:1
@ 1462 train 5.7060 , allloss: 7.2472, dt: 1199.46ms, fracRes: 0.5222, norm(attn): 0.1484, norm(output): 5.0938, norm(x): 4.2217, norm(y): 0.9977, norm:2.8452, tok/sec: 109276.14, flops:114.69, batch-reuse:1
@ 1463 train 5.7016 , allloss: 7.2453, dt: 1205.42ms, fracRes: 0.5211, norm(attn): 0.1475, norm(output): 5.0625, norm(x): 4.2884, norm(y): 0.9976, norm:2.7862, tok/sec: 108735.93, flops:114.12, batch-reuse:1
@ 1464 train 5.6996 , allloss: 8.0677, dt: 1217.14ms, fracRes: 0.5244, norm(attn): 0.1406, norm(output): 5.0625, norm(x): 4.1974, norm(y): 0.9977, norm:2.5368, tok/sec: 107688.33, flops:113.02, batch-reuse:1
@ 1465 train 5.6126 , allloss: 7.1528, dt: 1215.59ms, fracRes: 0.5282, norm(attn): 0.1377, norm(output): 5.0312, norm(x): 4.1411, norm(y): 0.9978, norm:2.2789, tok/sec: 107825.89, flops:113.17, batch-reuse:1
@ 1466 train 5.5844 , allloss: 7.1942, dt: 1243.40ms, fracRes: 0.5239, norm(attn): 0.1377, norm(output): 5.0312, norm(x): 4.1393, norm(y): 0.9976, norm:3.9278, tok/sec: 105413.77, flops:110.63, batch-reuse:1
@ 1467 train 5.6943 , allloss: 7.3059, dt: 1234.61ms, fracRes: 0.5266, norm(attn): 0.1377, norm(output): 5.0312, norm(x): 4.1223, norm(y): 0.9974, norm:3.7238, tok/sec: 106164.88, flops:111.42, batch-reuse:1
@ 1468 train 5.7133 , allloss: 7.2609, dt: 1225.60ms, fracRes: 0.5247, norm(attn): 0.1387, norm(output): 5.0625, norm(x): 4.1429, norm(y): 0.9974, norm:2.9247, tok/sec: 106944.94, flops:112.24, batch-reuse:1
@ 1469 train 5.8240 , allloss: 7.3648, dt: 1221.46ms, fracRes: 0.5291, norm(attn): 0.1406, norm(output): 5.0625, norm(x): 4.1450, norm(y): 0.9975, norm:3.2028, tok/sec: 107307.93, flops:112.62, batch-reuse:1
@ 1470 train 5.6830 , allloss: 7.2408, dt: 1224.18ms, fracRes: 0.5284, norm(attn): 0.1387, norm(output): 5.0625, norm(x): 4.1336, norm(y): 0.9974, norm:3.2101, tok/sec: 107069.06, flops:112.37, batch-reuse:1
@ 1471 train 5.6114 , allloss: 7.1264, dt: 1196.01ms, fracRes: 0.5276, norm(attn): 0.1416, norm(output): 5.0625, norm(x): 4.1412, norm(y): 0.9975, norm:3.3432, tok/sec: 109590.70, flops:115.02, batch-reuse:1
@ 1472 train 5.6552 , allloss: 7.1328, dt: 1199.10ms, fracRes: 0.5258, norm(attn): 0.1426, norm(output): 5.0312, norm(x): 4.1712, norm(y): 0.9974, norm:2.5949, tok/sec: 109309.02, flops:114.72, batch-reuse:1
@ 1473 train 5.6893 , allloss: 7.1255, dt: 1196.25ms, fracRes: 0.5245, norm(attn): 0.1445, norm(output): 5.0312, norm(x): 4.2049, norm(y): 0.9974, norm:2.5216, tok/sec: 109569.18, flops:114.99, batch-reuse:1
@ 1474 train 5.8372 , allloss: 7.3191, dt: 1197.57ms, fracRes: 0.5231, norm(attn): 0.1445, norm(output): 5.0312, norm(x): 4.2431, norm(y): 0.9972, norm:2.6757, tok/sec: 109448.03, flops:114.87, batch-reuse:1
@ 1475 train 5.6893 , allloss: 7.1808, dt: 1198.30ms, fracRes: 0.5234, norm(attn): 0.1426, norm(output): 5.0312, norm(x): 4.2109, norm(y): 0.9976, norm:2.4460, tok/sec: 109381.33, flops:114.80, batch-reuse:1
@ 1476 train 5.6181 , allloss: 7.4511, dt: 1203.67ms, fracRes: 0.5240, norm(attn): 0.1377, norm(output): 5.0625, norm(x): 4.1970, norm(y): 0.9976, norm:2.9167, tok/sec: 108894.06, flops:114.29, batch-reuse:1
@ 1477 train 5.6526 , allloss: 7.1336, dt: 1222.09ms, fracRes: 0.5273, norm(attn): 0.1377, norm(output): 5.0625, norm(x): 4.2048, norm(y): 0.9975, norm:2.7007, tok/sec: 107252.02, flops:112.56, batch-reuse:1
@ 1478 train 5.6145 , allloss: 7.0993, dt: 1248.78ms, fracRes: 0.5260, norm(attn): 0.1396, norm(output): 5.1250, norm(x): 4.2340, norm(y): 0.9973, norm:2.7920, tok/sec: 104959.90, flops:110.16, batch-reuse:1
@ 1479 train 5.6349 , allloss: 7.1108, dt: 1250.91ms, fracRes: 0.5256, norm(attn): 0.1416, norm(output): 5.1250, norm(x): 4.2567, norm(y): 0.9973, norm:2.8316, tok/sec: 104781.16, flops:109.97, batch-reuse:1
@ 1480 train 5.6475 , allloss: 7.1194, dt: 1250.49ms, fracRes: 0.5274, norm(attn): 0.1396, norm(output): 5.1250, norm(x): 4.2355, norm(y): 0.9973, norm:3.2484, tok/sec: 104816.78, flops:110.01, batch-reuse:1
@ 1481 train 5.6374 , allloss: 7.1086, dt: 1236.96ms, fracRes: 0.5281, norm(attn): 0.1416, norm(output): 5.1562, norm(x): 4.2341, norm(y): 0.9973, norm:3.5145, tok/sec: 105962.91, flops:111.21, batch-reuse:1
@ 1482 train 5.6780 , allloss: 7.1397, dt: 1201.82ms, fracRes: 0.5271, norm(attn): 0.1416, norm(output): 5.0938, norm(x): 4.2582, norm(y): 0.9972, norm:3.1495, tok/sec: 109060.94, flops:114.46, batch-reuse:1
@ 1483 train 5.7041 , allloss: 7.2005, dt: 1216.84ms, fracRes: 0.5275, norm(attn): 0.1406, norm(output): 5.1562, norm(x): 4.2665, norm(y): 0.9971, norm:3.9673, tok/sec: 107714.83, flops:113.05, batch-reuse:1
@ 1484 train 5.7599 , allloss: 7.2512, dt: 1239.01ms, fracRes: 0.5279, norm(attn): 0.1406, norm(output): 5.0938, norm(x): 4.2749, norm(y): 0.9970, norm:3.3974, tok/sec: 105787.86, flops:111.03, batch-reuse:1
@ 1485 train 5.8127 , allloss: 7.3224, dt: 1220.09ms, fracRes: 0.5260, norm(attn): 0.1396, norm(output): 5.1250, norm(x): 4.3270, norm(y): 0.9969, norm:3.4336, tok/sec: 107428.09, flops:112.75, batch-reuse:1
@ 1486 train 5.7811 , allloss: 7.2865, dt: 1218.75ms, fracRes: 0.5232, norm(attn): 0.1436, norm(output): 5.1875, norm(x): 4.3827, norm(y): 0.9972, norm:3.1876, tok/sec: 107546.19, flops:112.87, batch-reuse:1
@ 1487 train 5.7635 , allloss: 7.2474, dt: 1222.19ms, fracRes: 0.5254, norm(attn): 0.1377, norm(output): 5.1562, norm(x): 4.3403, norm(y): 0.9972, norm:3.5047, tok/sec: 107243.71, flops:112.55, batch-reuse:1
@ 1488 train 5.7239 , allloss: 7.2494, dt: 1225.45ms, fracRes: 0.5266, norm(attn): 0.1387, norm(output): 5.1562, norm(x): 4.3303, norm(y): 0.9971, norm:3.7414, tok/sec: 106958.46, flops:112.25, batch-reuse:1
@ 1489 train 5.8814 , allloss: 7.4650, dt: 1235.18ms, fracRes: 0.5286, norm(attn): 0.1377, norm(output): 5.1250, norm(x): 4.3080, norm(y): 0.9969, norm:4.5351, tok/sec: 106116.09, flops:111.37, batch-reuse:1
@ 1490 train 5.8998 , allloss: 7.4597, dt: 1205.31ms, fracRes: 0.5304, norm(attn): 0.1396, norm(output): 5.1250, norm(x): 4.2886, norm(y): 0.9968, norm:4.1191, tok/sec: 108745.31, flops:114.13, batch-reuse:1
@ 1491 train 5.8825 , allloss: 7.3955, dt: 1220.39ms, fracRes: 0.5321, norm(attn): 0.1406, norm(output): 5.1250, norm(x): 4.2566, norm(y): 0.9970, norm:4.5330, tok/sec: 107401.91, flops:112.72, batch-reuse:1
@ 1492 train 5.7544 , allloss: 7.2264, dt: 1215.73ms, fracRes: 0.5346, norm(attn): 0.1396, norm(output): 5.0938, norm(x): 4.2193, norm(y): 0.9971, norm:4.5939, tok/sec: 107813.10, flops:113.15, batch-reuse:1
@ 1493 train 5.7366 , allloss: 7.2020, dt: 1228.00ms, fracRes: 0.5339, norm(attn): 0.1387, norm(output): 5.0938, norm(x): 4.2313, norm(y): 0.9970, norm:3.8387, tok/sec: 106736.37, flops:112.02, batch-reuse:1
@ 1494 train 5.7646 , allloss: 7.2409, dt: 1232.08ms, fracRes: 0.5340, norm(attn): 0.1396, norm(output): 5.0938, norm(x): 4.2234, norm(y): 0.9970, norm:3.7868, tok/sec: 106382.54, flops:111.65, batch-reuse:1
@ 1495 train 5.7207 , allloss: 7.1789, dt: 1203.21ms, fracRes: 0.5323, norm(attn): 0.1416, norm(output): 5.0938, norm(x): 4.2683, norm(y): 0.9970, norm:4.0794, tok/sec: 108935.25, flops:114.33, batch-reuse:1
@ 1496 train 5.7634 , allloss: 7.1926, dt: 1212.57ms, fracRes: 0.5328, norm(attn): 0.1416, norm(output): 5.1562, norm(x): 4.2761, norm(y): 0.9972, norm:3.3321, tok/sec: 108094.23, flops:113.45, batch-reuse:1
@ 1497 train 5.6168 , allloss: 7.0595, dt: 1209.43ms, fracRes: 0.5343, norm(attn): 0.1396, norm(output): 5.1250, norm(x): 4.2641, norm(y): 0.9971, norm:4.7608, tok/sec: 108374.74, flops:113.74, batch-reuse:1
@ 1498 train 5.8154 , allloss: 7.2805, dt: 1230.53ms, fracRes: 0.5371, norm(attn): 0.1387, norm(output): 5.1250, norm(x): 4.2053, norm(y): 0.9971, norm:4.3732, tok/sec: 106516.95, flops:111.79, batch-reuse:1
@ 1499 train 5.8178 , allloss: 7.2964, dt: 1243.57ms, fracRes: 0.5380, norm(attn): 0.1406, norm(output): 5.1250, norm(x): 4.2082, norm(y): 0.9965, norm:3.8136, tok/sec: 105400.17, flops:110.62, batch-reuse:1
@ 1500 train 5.8230 , allloss: 7.2695, dt: 1223.23ms, fracRes: 0.5392, norm(attn): 0.1396, norm(output): 5.0625, norm(x): 4.1570, norm(y): 0.9968, norm:3.9072, tok/sec: 107152.51, flops:112.46, batch-reuse:1
@ 1501 train 5.7077 , allloss: 7.0790, dt: 1224.09ms, fracRes: 0.5381, norm(attn): 0.1406, norm(output): 5.0625, norm(x): 4.1799, norm(y): 0.9971, norm:2.9213, tok/sec: 107076.81, flops:112.38, batch-reuse:1
@ 1502 train 5.7464 , allloss: 7.1160, dt: 1244.77ms, fracRes: 0.5366, norm(attn): 0.1416, norm(output): 5.1250, norm(x): 4.2212, norm(y): 0.9971, norm:2.9887, tok/sec: 105298.04, flops:110.51, batch-reuse:1
@ 1503 train 5.7947 , allloss: 7.2034, dt: 1244.45ms, fracRes: 0.5344, norm(attn): 0.1416, norm(output): 5.1250, norm(x): 4.2668, norm(y): 0.9970, norm:3.4015, tok/sec: 105325.38, flops:110.54, batch-reuse:1
@ 1504 train 5.8182 , allloss: 7.2503, dt: 1243.45ms, fracRes: 0.5328, norm(attn): 0.1455, norm(output): 5.1562, norm(x): 4.3194, norm(y): 0.9971, norm:4.1905, tok/sec: 105410.32, flops:110.63, batch-reuse:1
@ 1505 train 5.7593 , allloss: 7.1693, dt: 1238.41ms, fracRes: 0.5321, norm(attn): 0.1455, norm(output): 5.1562, norm(x): 4.3311, norm(y): 0.9971, norm:3.8192, tok/sec: 105839.00, flops:111.08, batch-reuse:1
@ 1506 train 5.8133 , allloss: 7.2231, dt: 1215.94ms, fracRes: 0.5326, norm(attn): 0.1436, norm(output): 5.1250, norm(x): 4.3125, norm(y): 0.9966, norm:2.9875, tok/sec: 107794.86, flops:113.13, batch-reuse:1
@ 1507 train 5.8030 , allloss: 7.2470, dt: 1208.68ms, fracRes: 0.5316, norm(attn): 0.1475, norm(output): 5.0938, norm(x): 4.3282, norm(y): 0.9968, norm:3.0492, tok/sec: 108442.62, flops:113.81, batch-reuse:1
@ 1508 train 5.7796 , allloss: 7.1684, dt: 1193.03ms, fracRes: 0.5337, norm(attn): 0.1445, norm(output): 5.0938, norm(x): 4.2832, norm(y): 0.9966, norm:3.0074, tok/sec: 109864.61, flops:115.30, batch-reuse:1
@ 1509 train 5.7770 , allloss: 7.1070, dt: 1204.06ms, fracRes: 0.5321, norm(attn): 0.1484, norm(output): 5.1250, norm(x): 4.3099, norm(y): 0.9968, norm:2.6671, tok/sec: 108858.72, flops:114.25, batch-reuse:1
@ 1510 train 5.8470 , allloss: 7.2295, dt: 1224.23ms, fracRes: 0.5283, norm(attn): 0.1504, norm(output): 5.1250, norm(x): 4.4052, norm(y): 0.9970, norm:3.8209, tok/sec: 107065.24, flops:112.37, batch-reuse:1
@ 1511 train 5.8449 , allloss: 7.2239, dt: 1211.30ms, fracRes: 0.5300, norm(attn): 0.1377, norm(output): 5.1562, norm(x): 4.3403, norm(y): 0.9970, norm:2.9563, tok/sec: 108207.70, flops:113.57, batch-reuse:1
@ 1512 train 5.8428 , allloss: 7.2644, dt: 1236.28ms, fracRes: 0.5280, norm(attn): 0.1387, norm(output): 5.1875, norm(x): 4.3809, norm(y): 0.9968, norm:3.3485, tok/sec: 106021.15, flops:111.27, batch-reuse:1
@ 1513 train 5.7883 , allloss: 7.1747, dt: 1227.39ms, fracRes: 0.5302, norm(attn): 0.1348, norm(output): 5.1875, norm(x): 4.3602, norm(y): 0.9968, norm:2.9681, tok/sec: 106789.63, flops:112.08, batch-reuse:1
@ 1514 train 5.9052 , allloss: 7.3239, dt: 1216.04ms, fracRes: 0.5349, norm(attn): 0.1377, norm(output): 5.1875, norm(x): 4.2942, norm(y): 0.9965, norm:3.0116, tok/sec: 107785.92, flops:113.12, batch-reuse:1
@ 1515 train 5.8017 , allloss: 7.2091, dt: 1246.89ms, fracRes: 0.5359, norm(attn): 0.1377, norm(output): 5.1875, norm(x): 4.2916, norm(y): 0.9965, norm:2.6403, tok/sec: 105118.93, flops:110.32, batch-reuse:1
@ 1516 train 5.6819 , allloss: 7.0373, dt: 1245.98ms, fracRes: 0.5334, norm(attn): 0.1396, norm(output): 5.1562, norm(x): 4.2919, norm(y): 0.9965, norm:2.8723, tok/sec: 105195.73, flops:110.40, batch-reuse:1
@ 1517 train 5.7486 , allloss: 7.1176, dt: 1203.72ms, fracRes: 0.5353, norm(attn): 0.1396, norm(output): 5.1250, norm(x): 4.2932, norm(y): 0.9968, norm:2.9018, tok/sec: 108889.04, flops:114.28, batch-reuse:1
@ 1518 train 5.7288 , allloss: 7.1069, dt: 1198.74ms, fracRes: 0.5333, norm(attn): 0.1416, norm(output): 5.1562, norm(x): 4.3300, norm(y): 0.9972, norm:3.5560, tok/sec: 109341.58, flops:114.76, batch-reuse:1
@ 1519 train 5.7342 , allloss: 7.1264, dt: 1206.90ms, fracRes: 0.5354, norm(attn): 0.1396, norm(output): 5.1562, norm(x): 4.3233, norm(y): 0.9970, norm:3.6840, tok/sec: 108602.00, flops:113.98, batch-reuse:1
@ 1520 train 5.7739 , allloss: 7.3246, dt: 1210.81ms, fracRes: 0.5337, norm(attn): 0.1436, norm(output): 5.1875, norm(x): 4.3546, norm(y): 0.9973, norm:7.0641, tok/sec: 108251.38, flops:113.61, batch-reuse:1
@ 1521 train 5.7563 , allloss: 7.3037, dt: 1203.28ms, fracRes: 0.5368, norm(attn): 0.1445, norm(output): 5.1562, norm(x): 4.2873, norm(y): 0.9972, norm:5.6854, tok/sec: 108929.30, flops:114.32, batch-reuse:1
@ 1522 train 5.7721 , allloss: 7.7080, dt: 1219.55ms, fracRes: 0.5397, norm(attn): 0.1436, norm(output): 5.1562, norm(x): 4.2021, norm(y): 0.9970, norm:8.4279, tok/sec: 107475.49, flops:112.80, batch-reuse:1
@ 1523 train 5.8028 , allloss: 7.8459, dt: 1249.82ms, fracRes: 0.5396, norm(attn): 0.1465, norm(output): 5.1250, norm(x): 4.1655, norm(y): 0.9969, norm:8.8123, tok/sec: 104872.40, flops:110.07, batch-reuse:1
@ 1524 train 5.7510 , allloss: 7.5763, dt: 1208.33ms, fracRes: 0.5437, norm(attn): 0.1445, norm(output): 5.1562, norm(x): 4.1057, norm(y): 0.9968, norm:8.5609, tok/sec: 108473.90, flops:113.85, batch-reuse:1
@ 1525 train 5.7329 , allloss: 7.4076, dt: 1241.65ms, fracRes: 0.5454, norm(attn): 0.1445, norm(output): 5.1250, norm(x): 4.0762, norm(y): 0.9967, norm:7.4882, tok/sec: 105562.81, flops:110.79, batch-reuse:1
@ 1526 train 5.8230 , allloss: 7.4812, dt: 1216.05ms, fracRes: 0.5464, norm(attn): 0.1445, norm(output): 5.1562, norm(x): 4.0754, norm(y): 0.9967, norm:7.2655, tok/sec: 107784.69, flops:113.12, batch-reuse:1
@ 1527 train 5.7299 , allloss: 7.4043, dt: 1214.93ms, fracRes: 0.5442, norm(attn): 0.1465, norm(output): 5.1562, norm(x): 4.1325, norm(y): 0.9969, norm:8.3544, tok/sec: 107884.08, flops:113.23, batch-reuse:1
@ 1528 train 5.7690 , allloss: 7.5018, dt: 1212.87ms, fracRes: 0.5457, norm(attn): 0.1455, norm(output): 5.1562, norm(x): 4.1236, norm(y): 0.9967, norm:7.4253, tok/sec: 108067.72, flops:113.42, batch-reuse:1
@ 1529 train 5.7057 , allloss: 7.2569, dt: 1219.34ms, fracRes: 0.5428, norm(attn): 0.1494, norm(output): 5.1875, norm(x): 4.1988, norm(y): 0.9969, norm:6.6083, tok/sec: 107493.83, flops:112.82, batch-reuse:1
@ 1530 train 5.7334 , allloss: 7.3091, dt: 1216.79ms, fracRes: 0.5434, norm(attn): 0.1475, norm(output): 5.1875, norm(x): 4.2083, norm(y): 0.9969, norm:6.7505, tok/sec: 107719.26, flops:113.05, batch-reuse:1
@ 1531 train 5.6245 , allloss: 7.2573, dt: 1222.17ms, fracRes: 0.5425, norm(attn): 0.1484, norm(output): 5.1875, norm(x): 4.1995, norm(y): 0.9968, norm:5.9534, tok/sec: 107244.94, flops:112.56, batch-reuse:1
@ 1532 train 5.6949 , allloss: 7.5701, dt: 1233.11ms, fracRes: 0.5406, norm(attn): 0.1465, norm(output): 5.1875, norm(x): 4.2421, norm(y): 0.9966, norm:6.3907, tok/sec: 106294.03, flops:111.56, batch-reuse:1
@ 1533 train 5.6623 , allloss: 7.3163, dt: 1227.69ms, fracRes: 0.5423, norm(attn): 0.1436, norm(output): 5.1875, norm(x): 4.2290, norm(y): 0.9965, norm:6.1176, tok/sec: 106763.23, flops:112.05, batch-reuse:1
@ 1534 train 5.7112 , allloss: 7.3634, dt: 1219.26ms, fracRes: 0.5392, norm(attn): 0.1445, norm(output): 5.1875, norm(x): 4.3073, norm(y): 0.9964, norm:7.4667, tok/sec: 107501.29, flops:112.82, batch-reuse:1
@ 1535 train 5.7314 , allloss: 7.2676, dt: 1220.23ms, fracRes: 0.5390, norm(attn): 0.1436, norm(output): 5.1875, norm(x): 4.3197, norm(y): 0.9962, norm:6.8472, tok/sec: 107415.58, flops:112.73, batch-reuse:1
@ 1536 train 5.6642 , allloss: 7.0902, dt: 1227.48ms, fracRes: 0.5406, norm(attn): 0.1426, norm(output): 5.1875, norm(x): 4.3070, norm(y): 0.9961, norm:5.8316, tok/sec: 106781.59, flops:112.07, batch-reuse:1
@ 1537 train 5.6635 , allloss: 7.1296, dt: 1224.17ms, fracRes: 0.5380, norm(attn): 0.1436, norm(output): 5.2812, norm(x): 4.3441, norm(y): 0.9962, norm:6.4526, tok/sec: 107070.39, flops:112.37, batch-reuse:1
@ 1538 train 5.6137 , allloss: 6.9981, dt: 1199.81ms, fracRes: 0.5391, norm(attn): 0.1436, norm(output): 5.1875, norm(x): 4.3214, norm(y): 0.9962, norm:5.7124, tok/sec: 109243.94, flops:114.65, batch-reuse:1
@ 1539 train 5.7008 , allloss: 7.1427, dt: 1212.54ms, fracRes: 0.5369, norm(attn): 0.1465, norm(output): 5.1875, norm(x): 4.3664, norm(y): 0.9960, norm:6.2920, tok/sec: 108096.72, flops:113.45, batch-reuse:1
@ 1540 train 5.6695 , allloss: 7.1141, dt: 1196.55ms, fracRes: 0.5396, norm(attn): 0.1465, norm(output): 5.1875, norm(x): 4.3234, norm(y): 0.9958, norm:6.5379, tok/sec: 109541.65, flops:114.97, batch-reuse:1
@ 1541 train 5.6410 , allloss: 7.0038, dt: 1208.84ms, fracRes: 0.5384, norm(attn): 0.1445, norm(output): 5.1875, norm(x): 4.3675, norm(y): 0.9959, norm:5.4007, tok/sec: 108427.56, flops:113.80, batch-reuse:1
@ 1542 train 5.6864 , allloss: 7.0385, dt: 1202.41ms, fracRes: 0.5393, norm(attn): 0.1416, norm(output): 5.2188, norm(x): 4.3625, norm(y): 0.9957, norm:4.9330, tok/sec: 109007.59, flops:114.41, batch-reuse:1
@ 1543 train 5.9530 , allloss: 7.2978, dt: 1204.78ms, fracRes: 0.5379, norm(attn): 0.1426, norm(output): 5.2188, norm(x): 4.3989, norm(y): 0.9949, norm:4.0407, tok/sec: 108793.04, flops:114.18, batch-reuse:1
@ 1544 train 5.6198 , allloss: 6.9014, dt: 1210.78ms, fracRes: 0.5384, norm(attn): 0.1416, norm(output): 5.3125, norm(x): 4.3625, norm(y): 0.9960, norm:5.2489, tok/sec: 108254.51, flops:113.62, batch-reuse:1
@ 1545 train 5.7054 , allloss: 6.9231, dt: 1223.31ms, fracRes: 0.5374, norm(attn): 0.1436, norm(output): 5.2812, norm(x): 4.3854, norm(y): 0.9959, norm:4.5190, tok/sec: 107145.66, flops:112.45, batch-reuse:1
@ 1546 train 6.1321 , allloss: 7.3012, dt: 1245.48ms, fracRes: 0.5381, norm(attn): 0.1455, norm(output): 5.1875, norm(x): 4.3655, norm(y): 0.9954, norm:4.3740, tok/sec: 105238.08, flops:110.45, batch-reuse:1
@ 1547 train 5.7538 , allloss: 6.9677, dt: 1248.46ms, fracRes: 0.5391, norm(attn): 0.1494, norm(output): 5.1875, norm(x): 4.3662, norm(y): 0.9956, norm:3.7017, tok/sec: 104986.78, flops:110.19, batch-reuse:1
@ 1548 train 5.8666 , allloss: 7.0415, dt: 1196.34ms, fracRes: 0.5390, norm(attn): 0.1436, norm(output): 5.2500, norm(x): 4.3902, norm(y): 0.9957, norm:3.9951, tok/sec: 109560.75, flops:114.99, batch-reuse:1
@ 1549 train 5.7644 , allloss: 6.9438, dt: 1201.52ms, fracRes: 0.5411, norm(attn): 0.1396, norm(output): 5.2500, norm(x): 4.3554, norm(y): 0.9957, norm:3.7016, tok/sec: 109088.38, flops:114.49, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2539,     0.3906,     0.3574,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6953,     0.0171,     0.2715,     0.0157,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2520,     0.0000,     0.7461,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1021,     0.0000,     0.8984,     0.0008,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1680,     0.0000,     0.7578,     0.0645,     0.0000,     0.0001,     0.0085,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.0032,     0.0006,     0.0786,     0.0001,     0.0004,     0.0001,     0.9180,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1992,     0.0000,     0.7734,     0.0106,     0.0000,     0.0000,     0.0081,     0.0074,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0193,     0.0142,     0.1108,     0.6680,     0.0045,     0.0033,     0.0020,     0.1758,     0.0027,     0.0016,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2139,     0.0000,     0.7578,     0.0041,     0.0000,     0.0000,     0.0022,     0.0179,     0.0000,     0.0031,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0048,     0.0001,     0.0151,     0.6250,     0.0000,     0.0003,     0.0003,     0.3516,     0.0000,     0.0000,     0.0001,     0.0003,     0.0000,     0.0000,     0.0000],
        [    0.0007,     0.0075,     0.0019,     0.1099,     0.0007,     0.0017,     0.0002,     0.7773,     0.0005,     0.0002,     0.0020,     0.0036,     0.0957,     0.0000,     0.0000],
        [    0.3906,     0.0000,     0.3711,     0.0006,     0.0000,     0.0001,     0.1660,     0.0016,     0.0000,     0.0623,     0.0001,     0.0073,     0.0012,     0.0000,     0.0000],
        [    0.2393,     0.0031,     0.5039,     0.0281,     0.0004,     0.0039,     0.0293,     0.0176,     0.0016,     0.0498,     0.0140,     0.0383,     0.0164,     0.0018,     0.0522]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0010, -0.0256,  0.0142,  ...,  0.0111,  0.0945,  0.0477],
        [-0.0119, -0.0463, -0.0120,  ...,  0.0195, -0.0021, -0.0380],
        [-0.0093,  0.0450,  0.0191,  ...,  0.0365,  0.0881,  0.0387],
        ...,
        [ 0.0269,  0.0093,  0.0147,  ..., -0.0150, -0.0396,  0.0166],
        [-0.0040, -0.0216,  0.0136,  ...,  0.0217, -0.0130,  0.0198],
        [ 0.0287,  0.0553, -0.0100,  ...,  0.0065,  0.0372,  0.0244]], device='cuda:0', requires_grad=True)
K: tensor([ 1.1172, -1.6875, -0.7344, -0.1943,  0.8867,  0.1299,  0.5312, -0.0112, -0.3613, -0.6719, -0.0236,  1.1328, -0.4121, -0.4102, -0.7344,  0.7695, -0.6445,  1.0938,  0.7070,  0.9336, -0.0977, -1.4922,  0.9883, -0.6836,  0.0505,  0.6641, -0.4922, -0.4512, -0.2637,  0.6445,  1.2812,  1.3828,
        -0.0884, -1.1875, -0.0649,  0.3555, -0.0172, -0.9297,  0.5234,  1.6484,  0.1128,  0.2539, -1.6172,  1.4766,  0.0864, -0.3223,  0.7578,  0.3906,  0.6641, -0.7969,  1.0703,  0.2139,  0.4512, -1.3281, -0.0229, -0.1611,  0.1367, -0.6719,  0.5703, -0.3691,  0.6641,  1.6719,  0.2793, -0.0815],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0391, -0.0199, -0.0078,  ..., -0.0061, -0.0611, -0.0490],
        [-0.0026,  0.0055,  0.0093,  ...,  0.0054, -0.0016,  0.0007],
        [-0.0028,  0.0147, -0.0321,  ..., -0.0268, -0.0449, -0.0477],
        ...,
        [ 0.0096, -0.0486, -0.0211,  ...,  0.0205,  0.0189, -0.0030],
        [ 0.0429,  0.0370,  0.0168,  ..., -0.0054,  0.0015, -0.0284],
        [ 0.0347, -0.0284, -0.0048,  ...,  0.0385,  0.0266,  0.0298]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.1553,  0.2334,  0.8008,  0.3184,  1.1016,  0.9141, -0.1611,  0.9297, -0.7109,  1.2031,  0.5625, -0.0199, -1.6484, -0.7461, -0.4805, -0.5938,  0.8242, -0.1436,  0.0913,  0.1084,  0.4629,  0.2676,  0.4082,  2.8594, -0.5117, -0.2012,  0.3809,  0.5078, -0.4590,  0.2695, -1.5156, -1.3281,
         0.4375, -0.2402,  0.8711, -0.7812,  1.6016,  1.6328, -0.9688, -0.5430, -0.4395,  0.5469,  0.1768, -0.6367,  0.7578,  0.3633,  0.5977, -0.2461, -1.5625,  0.5117,  0.1592,  0.1436, -1.7578,  0.4453,  1.6953, -0.1602,  0.2148,  1.3984, -0.0879, -0.6641,  1.2188,  0.2500,  0.3887,  1.4766],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,    -23.0000,      2.8125,     -1.0781,    -13.5625,     -9.5625,     -4.8438,     -0.2383,    -13.8750,     -5.8125,     -8.6250,     -6.8438,     -3.4844,    -12.3750,     -2.9375],
        [     0.0000,      0.4297,      0.3418,      2.3281,     -1.8438,     -1.5391,     -0.4199,      2.1250,     -1.4062,      0.2012,     -2.0781,      1.5312,      2.7188,     -1.7969,     -0.0396],
        [     0.0000,     -3.7031,     -0.9375,     -3.7969,     -2.4375,     -0.4199,      0.1719,      1.3672,     -0.4238,      1.3516,     -1.3281,      2.2031,      1.4062,     -1.4609,      0.8438],
        [     0.0000,    -14.2500,      1.0859,     -7.3125,    -15.6875,     -9.7500,     -3.0938,     -5.2188,    -10.5000,     -1.3359,     -8.1875,     -2.6406,     -5.6875,    -11.1875,     -2.7500],
        [     0.0000,     -9.8125,      2.1719,     -4.9062,    -10.5000,     -7.2188,     -3.1406,     -1.4062,     -7.9688,     -0.8203,     -6.7812,     -0.7031,     -1.8359,     -9.0000,     -1.0703],
        [     0.0000,    -14.4375,      1.5078,     -0.9570,    -12.3125,     -7.3438,     -2.9844,     -0.0046,    -10.8125,     -3.7500,     -7.1875,     -3.5625,     -2.0469,    -10.0625,     -0.8125],
        [     0.0000,      3.0938,      1.4844,      6.3125,     -0.7500,      1.0234,     -0.7422,      8.7500,     -0.3203,     -0.5820,      0.6992,      3.9844,      7.5000,     -0.0640,     -0.5508],
        [     0.0000,    -19.2500,      1.3594,     -2.9375,    -15.3750,     -9.6875,     -3.2031,     -3.2969,    -13.5000,     -4.2812,     -8.3125,     -5.4688,     -4.4688,    -12.3125,     -2.3281],
        [     0.0000,     -0.3027,      1.7500,      3.5469,     -1.4453,     -1.7500,     -2.2812,      2.2031,     -1.9688,     -2.5000,     -1.6641,     -0.8047,      1.6328,     -2.0156,     -1.0469],
        [     0.0000,    -13.9375,      1.2656,     -3.9531,    -15.1875,     -9.2500,     -4.5938,     -2.4844,    -11.6875,     -4.2188,    -11.4375,     -4.0625,     -3.3438,    -12.3125,     -3.1250],
        [     0.0000,     -3.8438,      1.1484,      4.8750,     -4.9688,     -2.8594,     -2.8281,      4.3125,     -5.7500,     -5.5312,     -4.1875,     -2.7344,      2.6406,     -4.8125,     -2.4844],
        [     0.0000,      2.4062,      1.0156,      5.0938,      0.0762,      0.9062,     -1.1953,      7.0312,     -0.3652,     -1.3047,      1.0547,      1.6562,      4.9375,      0.7461,     -1.3047],
        [     0.0000,    -18.3750,     -0.0483,     -6.5000,    -14.0625,     -8.6875,     -0.8555,     -5.5000,    -11.6250,     -1.8359,     -8.8750,     -3.9844,     -5.8125,    -11.5000,     -1.5703],
        [     0.0000,     -4.3438,      0.7461,     -2.1406,     -6.3125,     -4.1250,     -2.0938,     -2.6094,     -4.9688,     -1.5703,     -2.8438,     -1.8281,     -2.6875,     -4.8750,     -1.5234]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [1.0000],
        [0.1183],
        [0.3282],
        [0.4682],
        [0.3363],
        [0.3619],
        [0.0230],
        [0.0985],
        [0.0149],
        [0.0651],
        [0.0073],
        [0.0066],
        [0.0472],
        [0.0687]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0523, -0.0154,  0.0072,  ...,  0.0294,  0.0310, -0.0172],
        [ 0.0314, -0.0071, -0.0230,  ..., -0.0032,  0.0498, -0.0059],
        [-0.0242,  0.0441, -0.0377,  ..., -0.0431, -0.0575, -0.0277],
        ...,
        [ 0.0170,  0.0076, -0.0170,  ..., -0.0326, -0.0887, -0.0615],
        [ 0.0086,  0.0020, -0.0083,  ..., -0.0058,  0.0302,  0.0368],
        [-0.0147, -0.0293,  0.0060,  ...,  0.0186, -0.0754, -0.0095]], device='cuda:0', requires_grad=True)
K: tensor([-2.4219, -2.2812, -3.2188,  2.3594,  2.8125,  1.6953,  1.5469, -1.7344, -1.8125,  2.9844,  2.6094, -1.3828, -2.8750,  1.7188,  2.6875,  2.7344,  2.6562,  2.3281,  2.9844,  3.6406,  2.1562,  2.4062, -2.7188,  2.4219, -1.8750,  2.7812, -2.5000,  2.1406,  0.6445, -1.0547, -3.3594, -1.9688,
         3.6875,  1.8203, -0.6836,  2.1250, -2.7344,  2.9375, -2.7812, -3.2500,  3.2656, -2.0312, -0.9727, -1.1406, -2.2344,  2.5938, -0.9375, -0.8906, -2.3906, -2.2344,  1.6484, -1.4062,  2.9062, -1.7344,  1.2969, -3.0312, -0.6367, -3.6562, -2.9688, -1.7188,  2.1094,  1.4453, -2.4844,  1.7656],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0205,  0.0244,  0.0137,  ..., -0.0300, -0.0592, -0.0064],
        [-0.0290, -0.0242, -0.0091,  ...,  0.0350, -0.0360, -0.0213],
        [-0.0223, -0.0077,  0.0283,  ...,  0.0259,  0.0312,  0.0144],
        ...,
        [ 0.0152, -0.0474,  0.0067,  ..., -0.0164,  0.0162,  0.0368],
        [-0.0181,  0.0063,  0.0185,  ...,  0.0338, -0.0465, -0.0334],
        [ 0.0105,  0.0030, -0.0034,  ...,  0.0236,  0.0273,  0.0137]], device='cuda:0', requires_grad=True)
Q: tensor([ 2.4531,  2.5156,  3.5156, -2.9688, -4.0312,  0.8555, -1.7656,  2.6562,  1.8984, -2.4219, -2.3281,  0.7852,  3.1719, -3.9375, -4.4688, -2.6562, -2.2500, -3.0625, -3.2969, -2.5312, -3.0781, -2.1094,  3.1094, -2.2031,  2.3906, -2.6719,  3.6406, -3.7969, -1.3750,  1.2500,  3.0469,  2.0000,
        -4.5312, -2.4062,  1.2578, -1.9844,  2.6406, -2.1250,  2.1094,  3.0781, -2.1250,  1.7500,  2.1562,  1.8203,  2.1406, -3.7812, -0.4492,  0.1240,  3.0938,  2.1094, -2.5938,  1.7969, -3.5938,  1.8438, -1.9531,  4.3750,  0.5977,  2.2188,  4.4062,  2.0156, -1.4688, -2.7969,  3.3438, -2.0781],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[   0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000],
        [   0.0000,  -53.0000,  -35.2500,  -40.5000,  -52.5000,  -56.5000,  -51.5000,  -42.5000,  -58.5000,  -40.7500,  -39.5000,  -45.0000,  -44.5000,  -63.2500,  -41.2500],
        [   0.0000,  -43.2500,  -34.0000,  -35.2500,  -46.0000,  -50.2500,  -43.7500,  -38.0000,  -48.0000,  -35.7500,  -35.7500,  -39.5000,  -38.7500,  -53.2500,  -34.0000],
        [   0.0000,  -50.2500,  -39.7500,  -41.7500,  -54.5000,  -60.0000,  -51.7500,  -45.5000,  -57.2500,  -42.7500,  -41.7500,  -47.0000,  -45.7500,  -63.0000,  -41.5000],
        [   0.0000,  -75.5000,  -59.0000,  -63.7500,  -88.5000,  -95.0000,  -83.0000,  -70.0000,  -91.0000,  -68.5000,  -65.5000,  -74.0000,  -71.5000, -100.5000,  -65.0000],
        [   0.0000,  -77.5000,  -59.0000,  -64.0000,  -87.5000,  -94.0000,  -82.0000,  -69.0000,  -91.0000,  -67.5000,  -64.5000,  -74.0000,  -71.5000,  -99.5000,  -65.0000],
        [   0.0000,  -59.2500,  -43.7500,  -49.0000,  -66.5000,  -71.0000,  -64.0000,  -52.7500,  -70.5000,  -51.0000,  -49.0000,  -56.2500,  -54.2500,  -77.0000,  -50.0000],
        [   0.0000,  -48.2500,  -36.7500,  -39.0000,  -51.7500,  -56.2500,  -50.0000,  -43.5000,  -55.2500,  -40.2500,  -39.0000,  -44.7500,  -43.2500,  -60.2500,  -39.2500],
        [   0.0000,  -78.0000,  -57.2500,  -63.5000,  -86.5000,  -92.5000,  -83.0000,  -69.0000,  -92.5000,  -66.5000,  -64.0000,  -73.0000,  -71.0000, -100.5000,  -65.0000],
        [   0.0000,  -48.0000,  -37.5000,  -39.7500,  -54.0000,  -58.2500,  -51.7500,  -44.5000,  -56.7500,  -42.2500,  -40.2500,  -46.5000,  -45.0000,  -61.7500,  -40.5000],
        [   0.0000,  -43.2500,  -34.0000,  -36.2500,  -48.2500,  -51.7500,  -46.7500,  -39.7500,  -50.5000,  -37.2500,  -37.2500,  -41.0000,  -39.7500,  -55.5000,  -36.7500],
        [   0.0000,  -45.5000,  -37.2500,  -37.5000,  -49.7500,  -54.5000,  -48.0000,  -42.7500,  -52.5000,  -38.5000,  -37.5000,  -43.5000,  -42.0000,  -57.2500,  -37.7500],
        [   0.0000,  -53.2500,  -41.5000,  -43.7500,  -58.5000,  -63.7500,  -56.0000,  -48.0000,  -62.5000,  -45.5000,  -43.5000,  -50.5000,  -49.0000,  -68.0000,  -44.2500],
        [   0.0000,  -86.5000,  -63.2500,  -70.5000,  -96.5000, -103.0000,  -91.5000,  -76.5000, -102.5000,  -74.5000,  -71.5000,  -81.0000,  -78.5000, -112.0000,  -72.0000],
        [   0.0000,  -56.2500,  -41.7500,  -46.2500,  -62.5000,  -66.0000,  -59.7500,  -50.0000,  -66.5000,  -47.7500,  -46.7500,  -52.5000,  -51.0000,  -72.5000,  -47.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0008,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0090,     0.0005,     0.9766,     0.0142,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0028,     0.9922,     0.0001,     0.0036,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.9609,     0.0000,     0.0001,     0.0001,     0.0396,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.0000,     1.0000,     0.0001,     0.0000,     0.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1016,     0.0214,     0.0215,     0.0398,     0.6641,     0.1328,     0.0199,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0010,     0.0062,     0.0090,     0.0022,     0.0000,     0.0023,     0.0048,     0.9727,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0938,     0.0000,     0.0000,     0.0000,     0.0549,     0.0000,     0.8516,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0013,     0.0049,     0.0130,     0.0019,     0.0000,     0.0069,     0.0074,     0.9648,     0.0004,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9297,     0.0000,     0.0000,     0.0002,     0.0366,     0.0000,     0.0284,     0.0000,     0.0000,     0.0000,     0.0039,     0.0000,     0.0000,     0.0000],
        [    0.0030,     0.0569,     0.0000,     0.0019,     0.5156,     0.3770,     0.0010,     0.0027,     0.0029,     0.0183,     0.0004,     0.0187,     0.0002,     0.0000,     0.0000],
        [    0.0064,     0.0120,     0.1177,     0.0118,     0.0001,     0.0036,     0.0192,     0.6836,     0.0020,     0.0005,     0.0008,     0.0194,     0.1221,     0.0015,     0.0000],
        [    0.0001,     0.3457,     0.0000,     0.0001,     0.0009,     0.3945,     0.0001,     0.2148,     0.0000,     0.0000,     0.0000,     0.0442,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0169,  0.0221, -0.0481,  ..., -0.0211,  0.0616,  0.0057],
        [-0.0389,  0.0461,  0.0233,  ...,  0.0069,  0.0548,  0.0486],
        [-0.0029, -0.0577, -0.0007,  ...,  0.0350, -0.0848, -0.0326],
        ...,
        [ 0.0060, -0.0727, -0.0030,  ...,  0.0466, -0.0748, -0.0527],
        [-0.0173,  0.0701, -0.0079,  ..., -0.0167,  0.0667,  0.0034],
        [-0.0400, -0.0600, -0.0205,  ..., -0.0040, -0.0592, -0.0479]], device='cuda:0', requires_grad=True)
K: tensor([ 1.9062, -1.4688, -3.2188, -2.8906,  3.6562,  2.5469,  3.6562,  2.4688, -1.9922, -0.9141,  2.6406,  2.3906, -0.9688,  2.0938,  2.7344,  0.9492, -0.9570,  0.1406, -2.5625,  1.6406, -0.2676, -2.6094,  1.0000, -2.5938,  2.2031, -0.4473,  2.0312,  3.0156, -1.4531,  1.7500, -1.3594, -0.2988,
        -1.9453, -2.5781, -0.8867, -0.0278,  1.1406,  2.3906, -2.2812, -2.9062,  2.2656,  1.4141,  2.7031, -1.7422, -1.6328,  2.1719, -3.1562, -0.9609, -2.9688, -3.8906,  1.4453, -2.5312, -2.2344,  1.4531, -1.9531,  2.6094, -3.0938, -2.2812,  1.4375,  1.7188, -3.5469,  3.9531, -2.5938,  2.9219],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0523, -0.0291, -0.0050,  ...,  0.0009, -0.0569, -0.0496],
        [-0.0037,  0.0233,  0.0309,  ...,  0.0429, -0.0289, -0.0217],
        [ 0.0170,  0.0397, -0.0017,  ..., -0.0154,  0.0616,  0.0518],
        ...,
        [ 0.0033,  0.0028,  0.0046,  ..., -0.0175,  0.0450,  0.0170],
        [-0.0153, -0.0009, -0.0271,  ...,  0.0003, -0.0347, -0.0126],
        [ 0.0235, -0.0055,  0.0401,  ..., -0.0219,  0.0139,  0.0419]], device='cuda:0', requires_grad=True)
Q: tensor([-0.2852,  1.2344,  1.0391,  2.3750, -1.6797, -1.4141, -2.5000, -1.3281,  1.0391,  0.2656, -0.9258, -2.1719,  1.3359, -0.7969, -2.4844, -0.6797,  1.1250,  3.1250,  0.5078, -1.5312,  1.9062,  1.3203, -1.3359,  0.4180, -2.9688,  1.6250, -1.9453, -2.5781,  1.2812, -1.7109,  1.7500,  2.3906,
         0.8711,  1.1875,  1.1797,  0.6875, -0.8086, -2.0938,  1.6172,  1.3984, -3.1562, -0.0381, -1.1797,  0.8906,  0.7383, -0.4395,  1.6953,  0.5742,  2.1875,  1.9609, -0.3867,  1.4062,  2.3281, -1.6172, -0.1050, -2.1094,  0.0898,  1.2578, -1.0859, -2.3750,  0.9531, -1.1953,  1.2812, -1.4766],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,    -13.8750,     17.8750,     -0.2520,     -4.1875,    -17.8750,     -1.1016,    -20.8750,      9.1250,     13.8125,     11.3750,    -14.7500,      4.3750,     15.1250,     52.7500],
        [     0.0000,     -5.1250,      7.1250,      0.9297,     -2.3125,     -0.9609,     -0.7539,     -0.5234,      2.9688,      4.7500,      2.2969,     -0.8398,      2.3750,      3.9531,      9.1250],
        [     0.0000,     -2.8125,      4.6875,      0.4590,     -1.0078,     -3.6875,     -0.5664,     -4.0000,      2.6250,      3.5781,      2.2344,     -2.6875,      1.5625,      4.1562,     12.1250],
        [     0.0000,      5.8750,     -3.0781,      0.2412,     -3.4219,      5.0938,      2.1562,     11.5000,     -3.6875,     -8.5000,     -5.8125,      5.1875,      2.0156,     -5.6562,    -15.8750],
        [     0.0000,      9.2500,     -8.2500,      0.4609,     -0.2002,      6.0625,      2.1719,     14.7500,     -7.3438,    -11.7500,     -6.5625,      8.2500,     -0.6523,    -10.8750,    -26.8750],
        [     0.0000,     -5.4375,      8.4375,     -0.4434,     -3.9375,     -4.0312,     -0.3438,     -5.2500,      4.9062,      5.6250,      3.4375,     -5.6562,      3.8125,      7.3750,     19.7500],
        [     0.0000,     -1.5547,     -1.5547,     -0.9375,      1.8750,      0.2695,     -1.6328,     -6.1562,      2.8125,      6.6562,     -0.2422,     -2.3281,     -0.9102,      3.5156,      4.4688],
        [     0.0000,      1.8125,      2.1875,      0.7578,     -3.8281,      0.8164,      1.5547,      6.8750,     -1.6562,     -4.3750,     -2.3281,      2.2812,      2.9219,     -2.1094,     -3.8594],
        [     0.0000,     23.6250,    -28.8750,      0.1602,      7.3438,     23.1250,      2.7188,     25.8750,    -12.5625,    -20.8750,    -16.8750,     19.7500,     -7.1562,    -20.5000,    -72.0000],
        [     0.0000,      1.3594,      2.3438,      0.4102,     -5.4688,      1.7031,      1.7656,      6.6562,     -1.2344,     -5.1562,     -2.9688,      2.2812,      3.0625,     -2.1250,     -3.8281],
        [     0.0000,     14.1875,    -17.6250,     -0.4180,      5.5000,     10.9375,      1.2422,     10.6875,     -6.4375,    -11.7500,     -8.6875,      8.7500,     -4.7500,    -10.1250,    -36.5000],
        [     0.0000,      2.9219,     -6.9062,     -0.4961,      5.1250,      4.8125,     -1.1328,     -0.1201,     -0.0400,      1.7969,     -1.9766,      1.8203,     -2.8906,     -1.0859,    -10.5625],
        [     0.0000,      0.6250,      2.9062,      0.6055,     -3.9844,     -0.5898,      1.0938,      4.6562,     -1.1797,     -2.5000,     -2.0938,      1.1016,      2.9531,     -1.4766,     -0.3926],
        [     0.0000,      8.0000,     -9.7500,     -0.0332,      2.0469,      8.1250,      0.0840,      7.5312,     -3.4844,     -7.2500,     -6.0312,      5.9688,     -2.2500,     -5.3750,    -23.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.1660],
        [    0.1679],
        [    0.0076],
        [    0.0585],
        [    0.1025],
        [    0.0032],
        [    0.0085],
        [    0.0125],
        [    0.0004],
        [    0.0011],
        [    0.0081],
        [    0.0113],
        [    0.0114],
        [    0.0048]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6719,     0.0000,     0.0011,     0.3281,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8164,     0.0000,     0.0060,     0.1162,     0.0608,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0233,     0.0000,     0.0547,     0.8633,     0.0288,     0.0299,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5586,     0.0000,     0.0000,     0.0026,     0.4238,     0.0125,     0.0016,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0204,     0.0000,     0.0000,     0.0002,     0.1641,     0.0048,     0.1523,     0.6562,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0684,     0.0000,     0.0001,     0.0128,     0.0535,     0.0042,     0.0008,     0.8594,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0008,     0.0021,     0.0004,     0.0063,     0.1992,     0.7852,     0.0044,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.0000,     0.0002,     0.0030,     0.0464,     0.3301,     0.0000,     0.1191,     0.0001,     0.5000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.1299,     0.0037,     0.0022,     0.0654,     0.1777,     0.5664,     0.0542,     0.0011,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0123,     0.0000,     0.0000,     0.0001,     0.1260,     0.0026,     0.1816,     0.6680,     0.0003,     0.0101,     0.0000,     0.0001,     0.0005,     0.0000,     0.0000],
        [    0.0933,     0.0000,     0.0001,     0.0108,     0.0522,     0.0032,     0.0007,     0.7539,     0.0001,     0.0713,     0.0000,     0.0099,     0.0058,     0.0000,     0.0000],
        [    0.2910,     0.0000,     0.0000,     0.0004,     0.4766,     0.0047,     0.0071,     0.1377,     0.0012,     0.0605,     0.0000,     0.0015,     0.0004,     0.0011,     0.0187]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0468,  0.0227, -0.0537,  ..., -0.0375, -0.0315, -0.0291],
        [-0.0781, -0.0275,  0.0815,  ...,  0.0153,  0.0313,  0.0234],
        [-0.0618, -0.0156, -0.0099,  ...,  0.0066, -0.0148,  0.0089],
        ...,
        [ 0.0327,  0.0013, -0.0245,  ..., -0.0324, -0.0292, -0.0121],
        [-0.0028,  0.0049, -0.0290,  ..., -0.0615, -0.0518,  0.0455],
        [ 0.0043,  0.0336,  0.0297,  ..., -0.0243,  0.0156,  0.0175]], device='cuda:0', requires_grad=True)
K: tensor([ 1.5391,  4.5625, -3.3438, -4.0625, -3.1875,  1.7266, -1.6094,  3.2656,  1.9766,  1.0234,  1.2109, -2.2969, -2.5312, -0.5117,  1.5078, -0.3770,  1.6406, -2.2031,  1.9297, -0.3574,  0.9414,  1.7891,  0.2773,  1.0078,  1.2812, -1.1719, -2.4219,  2.1719,  0.5078, -0.3105, -0.3633,  1.4375,
         3.3125,  1.6094, -1.8281,  2.3906, -0.7305,  0.6523,  2.5938, -1.3828, -2.9688, -0.1875,  1.2656,  0.1318,  0.6797, -2.4062, -1.0469, -2.3438,  0.6602,  0.8242,  2.0000,  2.1719,  4.5625,  1.5703, -4.5625,  2.3281,  1.0625, -2.0781,  1.2422,  2.0000,  2.5156, -0.3477, -1.8672, -2.8281],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0248,  0.0092,  0.0603,  ...,  0.0115,  0.0212, -0.0428],
        [ 0.0224, -0.0201, -0.0470,  ...,  0.0588, -0.0162, -0.0105],
        [ 0.0643, -0.0038,  0.0204,  ..., -0.0152, -0.0744,  0.0426],
        ...,
        [-0.0266,  0.0260,  0.0052,  ...,  0.0060,  0.0154,  0.0134],
        [-0.0257, -0.0069,  0.0433,  ..., -0.0078,  0.0095, -0.0435],
        [-0.0210, -0.0506, -0.0129,  ...,  0.0161,  0.0077, -0.0070]], device='cuda:0', requires_grad=True)
Q: tensor([ 1.1094,  1.4531, -2.0781, -0.4629,  4.8438,  1.3672,  1.5938, -2.3750,  1.0625,  0.5859,  1.8047, -2.8750, -0.3457,  1.0547,  1.5625, -0.9258, -0.1260,  1.6016,  0.2119, -3.4062, -1.6641,  0.6875, -2.4062,  1.1016, -0.7812,  3.1406,  1.1953, -0.1108,  1.5703,  1.9297,  0.2090,  0.3652,
        -2.9219, -0.7461,  1.0547,  0.0581,  2.9844,  0.2637, -0.7891,  0.0063, -1.5547,  1.9922, -1.6328,  1.4766, -2.4531, -0.7422,  0.5234,  1.4922, -3.5938,  1.5547, -0.6406, -3.0625,  1.4609, -0.8594, -0.5781,  3.0469, -4.6562,  0.4121,  1.3438, -1.4688, -2.5469,  1.4219, -0.8594, -1.2500],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,   -209.0000,    -64.5000,    -23.2500,    -10.5000,    -14.5625,    -13.8125,     -7.0000,    -31.5000,    -12.6250,    -71.0000,    -18.1250,    -18.1250,    -30.7500,     -6.5625],
        [     0.0000,   -105.5000,    -32.5000,    -12.6875,     -3.6719,    -10.1250,     -7.8125,     -1.6875,    -18.5000,     -3.9688,    -45.2500,     -9.8750,    -11.3750,    -18.1250,     -3.1719],
        [     0.0000,    -52.0000,     -6.4688,     -0.7148,      4.5938,      3.0625,      5.9062,      7.2188,      0.7383,      2.8281,    -16.7500,     -2.6875,      1.0078,      0.8320,      7.1250],
        [     0.0000,    -36.7500,     -4.9062,     -1.9531,     -2.5938,     -4.4688,     -1.5391,      1.7812,     -4.3125,     -3.7344,    -15.7500,     -4.0625,     -1.8359,     -4.2188,      0.5469],
        [     0.0000,    -46.7500,      0.8516,      3.6094,      0.2090,      0.2441,      5.2188,      9.7500,     -1.0781,      0.2100,    -15.9375,     -1.9922,      4.4688,     -0.9453,      8.2500],
        [     0.0000,    -41.2500,    -10.9375,     -5.3750,     -0.2754,     -3.7969,     -5.8750,     -0.7891,     -7.2500,     -1.0078,    -23.1250,     -4.0312,     -5.9062,     -7.3125,     -3.6875],
        [     0.0000,    -62.5000,    -13.0625,     -4.4688,      2.0781,     -1.4453,      2.0156,      3.4688,     -3.6875,     -0.2051,    -22.1250,     -4.6562,     -3.1094,     -3.5312,      3.8594],
        [     0.0000,    -40.2500,     -6.1562,     -1.6719,     -0.2432,     -2.7969,     -4.4375,      2.5312,     -6.9375,      0.1089,    -22.1250,     -1.9297,     -2.2656,     -7.0312,     -1.0859],
        [     0.0000,    -36.2500,      5.6250,      6.5938,      4.9375,      7.6875,     11.1250,     12.5000,      7.3438,      3.7500,     -7.1250,      0.1787,      8.4375,      7.4062,     12.5000],
        [     0.0000,    -23.5000,      0.9570,      3.5469,      6.3125,      8.2500,     -1.4922,      7.2500,     -0.4453,      8.6875,    -18.0000,      2.7656,      2.9375,     -0.7617,      1.5391],
        [     0.0000,    -15.0000,     11.1875,      7.6250,      7.1250,     10.5000,     11.5000,     12.6875,     10.3125,      6.4375,     -1.9609,      1.2812,      8.8125,     10.2500,     11.5000],
        [     0.0000,    -66.5000,    -12.8125,     -4.5000,      2.3281,     -1.5469,      2.6875,      3.9844,     -3.7188,     -0.1992,    -22.5000,     -4.9688,     -3.1250,     -3.5312,      4.5625],
        [     0.0000,    -41.0000,     -6.8125,     -2.1562,     -0.5820,     -3.3750,     -4.9062,      2.0938,     -7.5000,     -0.2676,    -22.6250,     -2.2344,     -2.7812,     -7.5625,     -1.5547],
        [     0.0000,    -41.7500,    -11.0000,     -6.5000,      0.4941,     -4.1250,     -3.7031,     -0.7500,     -5.5312,     -1.5703,    -21.2500,     -5.2812,     -6.5625,     -5.5312,     -2.7500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [1.0000],
        [1.0000],
        [0.6002],
        [0.2491],
        [0.1503],
        [0.1344],
        [0.1566],
        [0.0835],
        [0.0827],
        [0.0325],
        [0.0740],
        [0.1468],
        [0.0766],
        [0.1029]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0496,     0.9492,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0535,     0.7500,     0.1943,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0243,     0.7617,     0.0542,     0.1592,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1260,     0.5312,     0.0737,     0.1196,     0.1514,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0204,     0.8984,     0.0080,     0.0176,     0.0006,     0.0532,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0041,     0.6641,     0.0068,     0.0393,     0.0119,     0.2363,     0.0396,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0101,     0.7148,     0.0043,     0.0111,     0.0018,     0.0422,     0.0055,     0.2100,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0127,     0.1748,     0.0050,     0.0066,     0.0026,     0.0208,     0.0039,     0.2451,     0.5273,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0094,     0.1914,     0.0054,     0.0110,     0.0033,     0.0203,     0.0032,     0.1738,     0.5703,     0.0112,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0045,     0.1484,     0.0022,     0.0058,     0.0011,     0.0165,     0.0027,     0.2041,     0.6055,     0.0027,     0.0068,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0024,     0.2168,     0.0042,     0.0149,     0.0070,     0.0124,     0.0039,     0.2598,     0.4160,     0.0212,     0.0271,     0.0143,     0.0000,     0.0000,     0.0000],
        [    0.0036,     0.2168,     0.0017,     0.0041,     0.0005,     0.0095,     0.0015,     0.0645,     0.6797,     0.0022,     0.0052,     0.0019,     0.0087,     0.0000,     0.0000],
        [    0.0086,     0.1157,     0.0033,     0.0043,     0.0016,     0.0134,     0.0025,     0.1592,     0.3457,     0.0044,     0.0065,     0.0025,     0.0205,     0.3125,     0.0000],
        [    0.0008,     0.1699,     0.0009,     0.0055,     0.0008,     0.0190,     0.0028,     0.0703,     0.3516,     0.0045,     0.0084,     0.0050,     0.0148,     0.3379,     0.0068]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0150,  0.0104, -0.0263,  ...,  0.0061,  0.0280,  0.0071],
        [ 0.0076,  0.0030, -0.0157,  ..., -0.0087, -0.0109, -0.0186],
        [-0.0183,  0.0419, -0.0015,  ..., -0.0310,  0.0120,  0.0130],
        ...,
        [ 0.0304,  0.0034,  0.0016,  ...,  0.0287, -0.0149, -0.0140],
        [ 0.0074,  0.0070, -0.0239,  ...,  0.0317, -0.0377,  0.0073],
        [-0.0121, -0.0164,  0.0252,  ...,  0.0154, -0.0078, -0.0187]], device='cuda:0', requires_grad=True)
K: tensor([ 2.1406,  0.4961,  0.6055, -1.2188, -0.6953, -0.8203,  1.1172,  1.9375, -0.7578, -1.5625, -1.3047, -1.8672,  1.2578,  0.9336,  0.4375, -0.4980,  0.9805, -1.8281,  1.2578, -1.7500, -2.1250,  0.6953, -0.4902,  0.7188,  1.2266, -1.5391,  0.7266, -0.5117, -1.5938,  0.8125, -1.4297,  0.6172,
        -0.7617,  0.9102, -0.4590,  1.2656, -1.6953,  1.3438,  0.7070, -1.6797,  1.6172,  0.8594,  0.7695,  1.5391,  1.0781,  0.2383, -1.3125,  0.3066,  0.5234, -1.2812,  1.1016,  0.1826, -1.5391,  2.4531,  0.9883, -0.5234,  0.7539, -1.4766,  0.9648, -2.2969,  1.2109,  1.6875,  0.0349,  0.2910],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0101, -0.0070,  0.0146,  ...,  0.0253,  0.0010,  0.0085],
        [ 0.0097, -0.0089,  0.0143,  ..., -0.0398,  0.0140,  0.0231],
        [-0.0231,  0.0135,  0.0010,  ...,  0.0292,  0.0043,  0.0165],
        ...,
        [-0.0108,  0.0377,  0.0094,  ..., -0.0097, -0.0059, -0.0376],
        [ 0.0275, -0.0013, -0.0503,  ..., -0.0539,  0.0032,  0.0256],
        [-0.0291,  0.0101, -0.0555,  ..., -0.0138,  0.0300, -0.0230]], device='cuda:0', requires_grad=True)
Q: tensor([-0.3984, -0.5234,  0.1074,  0.5078,  0.9102, -0.9570,  1.3750,  0.7148, -0.5859,  0.1006, -1.4141, -0.8008, -1.6406, -0.0708, -3.2812,  0.0325, -0.7500,  0.0630, -0.4004, -1.3438, -2.2344,  0.4121,  0.3828,  0.8555, -0.7500,  0.9609, -0.7773, -0.2754,  0.6328, -0.1016,  0.6289,  1.2109,
        -0.6211,  0.0471,  2.1250, -0.6094, -1.0312,  0.8086, -1.2109, -0.7148,  1.3984, -0.2295,  0.6602,  1.4922,  0.6406, -1.1797,  0.4824,  0.7539,  1.0547, -0.1514,  1.8359, -0.5781, -0.9258,  2.0312,  0.5664, -0.2793, -0.0645,  0.7305, -1.1250, -0.5547, -1.9922, -0.1572, -0.6094,  0.8047],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  2.9531,  0.6211,  1.8828,  0.9180,  1.2500,  0.3711,  1.2344,  1.6641,  1.0938,  0.5078,  1.1172,  1.0156,  1.6562,  0.5195],
        [ 0.0000,  2.6406,  1.2891,  2.0469,  2.2500,  1.5781,  2.0156,  1.8438,  1.7812,  2.2500,  2.1875,  1.9766,  1.7812,  1.7891,  1.7109],
        [ 0.0000,  3.4375,  0.8008,  1.8750,  0.8789,  1.2969,  0.5195,  2.4219,  3.0938,  1.6094,  1.4531,  1.4844,  1.5156,  3.0625,  0.8164],
        [ 0.0000,  1.4375, -0.5352, -0.0515,  0.1846,  0.7695, -0.2598,  1.9844,  2.5000,  0.8477,  0.3281, -0.0293,  0.8672,  2.4688,  0.6055],
        [ 0.0000,  3.7969, -0.9375, -0.1455, -3.5938,  0.9609, -2.1562,  2.3281,  4.8125, -1.9922, -0.6562, -1.5234,  0.4062,  4.7188, -1.2031],
        [ 0.0000,  5.0938,  0.5234,  2.2812,  1.0781,  4.0625,  2.2812,  4.2812,  6.1562,  2.5312,  2.9219,  2.2656,  3.1875,  6.1250,  2.7656],
        [ 0.0000,  4.2812, -0.8555,  0.1021, -1.7266,  1.4297, -0.5977,  3.0312,  5.5000, -0.3574,  0.4160, -0.8516,  1.0391,  5.4375,  0.3047],
        [ 0.0000,  2.6250, -0.9336, -0.6602, -1.5781,  0.4922, -1.1875,  2.9531,  3.7344, -0.5898, -0.2070, -1.1562,  0.9141,  3.6250, -0.0245],
        [ 0.0000,  3.0156, -0.5469,  0.1641, -1.0391,  0.7695, -1.0859,  2.9219,  4.0938,  0.1729,  0.3711, -0.6172,  1.0938,  4.0312, -0.0806],
        [ 0.0000,  3.5000, -0.6953,  0.2598, -1.3984,  1.3047, -0.4863,  3.8281,  4.9062, -0.5039,  0.4258, -0.5312,  1.8438,  4.8125,  0.9609],
        [ 0.0000,  4.5000,  0.5312,  1.8125,  1.0469,  1.6250,  0.4727,  4.6562,  5.1562,  2.1719,  2.4062,  1.7734,  2.7969,  5.0625,  1.3672],
        [ 0.0000,  4.0938, -0.7773,  0.1172, -1.8906,  0.9609, -0.9062,  2.8750,  5.2188, -0.5039,  0.3457, -0.6602,  0.8672,  5.1562, -0.0254],
        [ 0.0000,  2.5938, -0.9648, -0.6914, -1.6641,  0.4473, -1.2500,  2.9219,  3.6875, -0.6758, -0.2871, -1.2266,  0.8672,  3.5938, -0.0713],
        [ 0.0000,  5.3438,  0.1426,  1.9141,  0.0300,  3.1562,  1.2422,  4.4688,  6.0625,  1.7266,  2.3438,  1.8281,  2.9062,  6.0312,  2.1250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0247],
        [0.0886],
        [0.0240],
        [0.0322],
        [0.0196],
        [0.0232],
        [0.0171],
        [0.0284],
        [0.0075],
        [0.0185],
        [0.0023],
        [0.0135],
        [0.0228],
        [0.0073]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.1553 not:0.0654,:0.1289 and:0.0815ent:0.0293,:0.2002 not:0.0620
:0.1338)


------
		( not:0.0654,:0.1289 and:0.0815ent:0.0293,:0.2002 not:0.0620
:0.1338-:0.0415)
- The first time to the first time to the first time to the first
@ 1550 train 5.7447 , allloss: 6.8662, dt: 1608.87ms, fracRes: 0.5427, norm(attn): 0.1396, norm(output): 5.2500, norm(x): 4.3252, norm(y): 0.9957, norm:3.0680, tok/sec: 81468.44, flops:85.50, batch-reuse:1
@ 1551 train 5.7139 , allloss: 6.8328, dt: 1207.26ms, fracRes: 0.5429, norm(attn): 0.1377, norm(output): 5.2188, norm(x): 4.2834, norm(y): 0.9959, norm:3.4196, tok/sec: 108570.26, flops:113.95, batch-reuse:1
@ 1552 train 5.5897 , allloss: 6.6741, dt: 1196.01ms, fracRes: 0.5434, norm(attn): 0.1406, norm(output): 5.1875, norm(x): 4.2626, norm(y): 0.9957, norm:2.9073, tok/sec: 109590.65, flops:115.02, batch-reuse:1
@ 1553 train 5.6839 , allloss: 6.7755, dt: 1194.76ms, fracRes: 0.5423, norm(attn): 0.1455, norm(output): 5.2500, norm(x): 4.2923, norm(y): 0.9958, norm:3.2903, tok/sec: 109705.79, flops:115.14, batch-reuse:1
@ 1554 train 5.6795 , allloss: 6.7236, dt: 1213.74ms, fracRes: 0.5421, norm(attn): 0.1504, norm(output): 5.1875, norm(x): 4.3298, norm(y): 0.9959, norm:2.6914, tok/sec: 107989.96, flops:113.34, batch-reuse:1
@ 1555 train 5.6979 , allloss: 6.7234, dt: 1229.50ms, fracRes: 0.5429, norm(attn): 0.1416, norm(output): 5.1875, norm(x): 4.3211, norm(y): 0.9957, norm:2.4344, tok/sec: 106605.77, flops:111.88, batch-reuse:1
@ 1556 train 5.7593 , allloss: 6.7713, dt: 1236.04ms, fracRes: 0.5446, norm(attn): 0.1357, norm(output): 5.1875, norm(x): 4.2763, norm(y): 0.9958, norm:2.3693, tok/sec: 106041.76, flops:111.29, batch-reuse:1
@ 1557 train 5.7092 , allloss: 6.7240, dt: 1208.60ms, fracRes: 0.5433, norm(attn): 0.1396, norm(output): 5.1875, norm(x): 4.3353, norm(y): 0.9958, norm:2.2415, tok/sec: 108449.46, flops:113.82, batch-reuse:1
@ 1558 train 5.6698 , allloss: 6.6836, dt: 1191.04ms, fracRes: 0.5414, norm(attn): 0.1465, norm(output): 5.1875, norm(x): 4.3670, norm(y): 0.9959, norm:2.4993, tok/sec: 110048.67, flops:115.50, batch-reuse:1
@ 1559 train 5.7214 , allloss: 6.6972, dt: 1219.41ms, fracRes: 0.5398, norm(attn): 0.1514, norm(output): 5.2188, norm(x): 4.4456, norm(y): 0.9960, norm:2.0056, tok/sec: 107488.28, flops:112.81, batch-reuse:1
@ 1560 train 5.8080 , allloss: 6.7756, dt: 1225.93ms, fracRes: 0.5410, norm(attn): 0.1406, norm(output): 5.1875, norm(x): 4.3912, norm(y): 0.9959, norm:2.3439, tok/sec: 106916.72, flops:112.21, batch-reuse:1
@ 1561 train 5.7343 , allloss: 6.7209, dt: 1191.69ms, fracRes: 0.5436, norm(attn): 0.1328, norm(output): 5.1875, norm(x): 4.3220, norm(y): 0.9959, norm:2.1907, tok/sec: 109988.03, flops:115.43, batch-reuse:1
@ 1562 train 5.7084 , allloss: 6.6895, dt: 1207.04ms, fracRes: 0.5449, norm(attn): 0.1328, norm(output): 5.1875, norm(x): 4.2960, norm(y): 0.9957, norm:1.9379, tok/sec: 108589.45, flops:113.97, batch-reuse:1
@ 1563 train 5.7146 , allloss: 6.6869, dt: 1201.50ms, fracRes: 0.5458, norm(attn): 0.1357, norm(output): 5.1875, norm(x): 4.2820, norm(y): 0.9956, norm:2.5988, tok/sec: 109090.29, flops:114.49, batch-reuse:1
@ 1564 train 5.7371 , allloss: 6.7036, dt: 1209.46ms, fracRes: 0.5424, norm(attn): 0.1406, norm(output): 5.1875, norm(x): 4.3559, norm(y): 0.9957, norm:2.2093, tok/sec: 108372.63, flops:113.74, batch-reuse:1
@ 1565 train 5.7397 , allloss: 6.7573, dt: 1195.75ms, fracRes: 0.5413, norm(attn): 0.1416, norm(output): 5.1875, norm(x): 4.3828, norm(y): 0.9957, norm:2.8461, tok/sec: 109615.10, flops:115.04, batch-reuse:1
@ 1566 train 5.7461 , allloss: 6.7427, dt: 1206.19ms, fracRes: 0.5397, norm(attn): 0.1406, norm(output): 5.2500, norm(x): 4.4326, norm(y): 0.9960, norm:2.1895, tok/sec: 108666.19, flops:114.05, batch-reuse:1
@ 1567 train 5.6949 , allloss: 6.6469, dt: 1211.88ms, fracRes: 0.5394, norm(attn): 0.1416, norm(output): 5.2500, norm(x): 4.4525, norm(y): 0.9960, norm:1.7160, tok/sec: 108155.76, flops:113.51, batch-reuse:1
@ 1568 train 5.6673 , allloss: 6.5968, dt: 1232.03ms, fracRes: 0.5401, norm(attn): 0.1406, norm(output): 5.1875, norm(x): 4.4315, norm(y): 0.9962, norm:1.7556, tok/sec: 106386.80, flops:111.65, batch-reuse:1
@ 1569 train 5.5901 , allloss: 6.5021, dt: 1200.90ms, fracRes: 0.5430, norm(attn): 0.1396, norm(output): 5.1875, norm(x): 4.3843, norm(y): 0.9961, norm:2.1564, tok/sec: 109144.41, flops:114.55, batch-reuse:1
@ 1570 train 5.6639 , allloss: 6.5732, dt: 1228.19ms, fracRes: 0.5452, norm(attn): 0.1367, norm(output): 5.1875, norm(x): 4.3483, norm(y): 0.9960, norm:1.9792, tok/sec: 106719.79, flops:112.00, batch-reuse:1
@ 1571 train 5.7013 , allloss: 6.6319, dt: 1244.93ms, fracRes: 0.5461, norm(attn): 0.1367, norm(output): 5.1875, norm(x): 4.3354, norm(y): 0.9960, norm:2.0835, tok/sec: 105284.33, flops:110.50, batch-reuse:1
@ 1572 train 5.6775 , allloss: 6.6275, dt: 1245.14ms, fracRes: 0.5449, norm(attn): 0.1396, norm(output): 5.2500, norm(x): 4.3774, norm(y): 0.9962, norm:2.2460, tok/sec: 105267.03, flops:110.48, batch-reuse:1
@ 1573 train 5.7384 , allloss: 6.6901, dt: 1246.24ms, fracRes: 0.5462, norm(attn): 0.1387, norm(output): 5.2812, norm(x): 4.3626, norm(y): 0.9962, norm:2.3292, tok/sec: 105174.21, flops:110.38, batch-reuse:1
@ 1574 train 5.6942 , allloss: 6.6541, dt: 1193.49ms, fracRes: 0.5453, norm(attn): 0.1445, norm(output): 5.2500, norm(x): 4.3929, norm(y): 0.9963, norm:2.6121, tok/sec: 109822.54, flops:115.26, batch-reuse:1
@ 1575 train 5.6703 , allloss: 6.7360, dt: 1208.21ms, fracRes: 0.5448, norm(attn): 0.1475, norm(output): 5.1875, norm(x): 4.3869, norm(y): 0.9961, norm:3.1763, tok/sec: 108484.58, flops:113.86, batch-reuse:1
@ 1576 train 5.6980 , allloss: 6.7171, dt: 1217.31ms, fracRes: 0.5452, norm(attn): 0.1514, norm(output): 5.1875, norm(x): 4.3892, norm(y): 0.9962, norm:2.8732, tok/sec: 107673.46, flops:113.01, batch-reuse:1
@ 1577 train 5.5813 , allloss: 6.5178, dt: 1238.37ms, fracRes: 0.5463, norm(attn): 0.1465, norm(output): 5.2188, norm(x): 4.3541, norm(y): 0.9961, norm:2.2985, tok/sec: 105842.73, flops:111.08, batch-reuse:1
@ 1578 train 5.6831 , allloss: 6.5535, dt: 1219.11ms, fracRes: 0.5465, norm(attn): 0.1416, norm(output): 5.2500, norm(x): 4.3666, norm(y): 0.9960, norm:1.6762, tok/sec: 107514.16, flops:112.84, batch-reuse:1
@ 1579 train 5.6100 , allloss: 6.4522, dt: 1244.97ms, fracRes: 0.5462, norm(attn): 0.1426, norm(output): 5.2812, norm(x): 4.3900, norm(y): 0.9962, norm:2.0361, tok/sec: 105281.18, flops:110.49, batch-reuse:1
@ 1580 train 5.6084 , allloss: 6.4369, dt: 1227.73ms, fracRes: 0.5469, norm(attn): 0.1484, norm(output): 5.1875, norm(x): 4.3777, norm(y): 0.9962, norm:1.4590, tok/sec: 106759.61, flops:112.05, batch-reuse:1
@ 1581 train 5.5964 , allloss: 6.3899, dt: 1201.38ms, fracRes: 0.5478, norm(attn): 0.1504, norm(output): 5.1875, norm(x): 4.3707, norm(y): 0.9962, norm:1.5553, tok/sec: 109101.55, flops:114.50, batch-reuse:1
@ 1582 train 5.6258 , allloss: 6.4299, dt: 1221.08ms, fracRes: 0.5501, norm(attn): 0.1416, norm(output): 5.1875, norm(x): 4.3179, norm(y): 0.9961, norm:1.4247, tok/sec: 107341.25, flops:112.66, batch-reuse:1
@ 1583 train 5.6016 , allloss: 6.3594, dt: 1222.08ms, fracRes: 0.5508, norm(attn): 0.1387, norm(output): 5.3125, norm(x): 4.3378, norm(y): 0.9962, norm:1.2387, tok/sec: 107252.94, flops:112.56, batch-reuse:1
@ 1584 train 5.6446 , allloss: 6.3677, dt: 1233.94ms, fracRes: 0.5522, norm(attn): 0.1328, norm(output): 5.2188, norm(x): 4.3269, norm(y): 0.9961, norm:1.3185, tok/sec: 106222.54, flops:111.48, batch-reuse:1
@ 1585 train 5.6446 , allloss: 6.3887, dt: 1243.56ms, fracRes: 0.5516, norm(attn): 0.1387, norm(output): 5.1875, norm(x): 4.3473, norm(y): 0.9960, norm:1.4471, tok/sec: 105400.80, flops:110.62, batch-reuse:1
@ 1586 train 5.6304 , allloss: 6.3796, dt: 1252.04ms, fracRes: 0.5500, norm(attn): 0.1455, norm(output): 5.2500, norm(x): 4.4033, norm(y): 0.9961, norm:1.4761, tok/sec: 104687.08, flops:109.87, batch-reuse:1
@ 1587 train 5.6676 , allloss: 6.3751, dt: 1198.82ms, fracRes: 0.5512, norm(attn): 0.1416, norm(output): 5.1875, norm(x): 4.3826, norm(y): 0.9961, norm:1.2474, tok/sec: 109334.08, flops:114.75, batch-reuse:1
@ 1588 train 5.6993 , allloss: 6.3858, dt: 1215.40ms, fracRes: 0.5526, norm(attn): 0.1348, norm(output): 5.1875, norm(x): 4.3332, norm(y): 0.9961, norm:1.2834, tok/sec: 107842.94, flops:113.18, batch-reuse:1
@ 1589 train 5.6184 , allloss: 6.2874, dt: 1232.91ms, fracRes: 0.5503, norm(attn): 0.1406, norm(output): 5.1875, norm(x): 4.3732, norm(y): 0.9962, norm:1.3241, tok/sec: 106311.15, flops:111.58, batch-reuse:1
@ 1590 train 5.6874 , allloss: 6.3381, dt: 1212.19ms, fracRes: 0.5492, norm(attn): 0.1406, norm(output): 5.1875, norm(x): 4.4009, norm(y): 0.9963, norm:1.1136, tok/sec: 108128.31, flops:113.48, batch-reuse:1
@ 1591 train 5.5891 , allloss: 6.2299, dt: 1191.94ms, fracRes: 0.5482, norm(attn): 0.1406, norm(output): 5.2500, norm(x): 4.4127, norm(y): 0.9962, norm:1.0449, tok/sec: 109965.35, flops:115.41, batch-reuse:1
@ 1592 train 5.6377 , allloss: 6.2939, dt: 1201.84ms, fracRes: 0.5476, norm(attn): 0.1445, norm(output): 5.2812, norm(x): 4.4210, norm(y): 0.9962, norm:1.0722, tok/sec: 109059.41, flops:114.46, batch-reuse:1
@ 1593 train 5.6508 , allloss: 6.3318, dt: 1191.94ms, fracRes: 0.5481, norm(attn): 0.1465, norm(output): 5.2812, norm(x): 4.4108, norm(y): 0.9961, norm:1.1685, tok/sec: 109964.86, flops:115.41, batch-reuse:1
@ 1594 train 5.5313 , allloss: 6.2256, dt: 1209.03ms, fracRes: 0.5507, norm(attn): 0.1416, norm(output): 5.1875, norm(x): 4.3643, norm(y): 0.9959, norm:1.3434, tok/sec: 108411.16, flops:113.78, batch-reuse:1
@ 1595 train 5.6687 , allloss: 6.4061, dt: 1201.64ms, fracRes: 0.5500, norm(attn): 0.1406, norm(output): 5.1875, norm(x): 4.3844, norm(y): 0.9958, norm:1.2328, tok/sec: 109077.28, flops:114.48, batch-reuse:1
@ 1596 train 5.5866 , allloss: 6.3619, dt: 1210.29ms, fracRes: 0.5505, norm(attn): 0.1416, norm(output): 5.3125, norm(x): 4.3663, norm(y): 0.9959, norm:1.6702, tok/sec: 108297.76, flops:113.66, batch-reuse:1
@ 1597 train 5.6467 , allloss: 6.4409, dt: 1198.45ms, fracRes: 0.5499, norm(attn): 0.1455, norm(output): 5.2500, norm(x): 4.3894, norm(y): 0.9957, norm:1.9261, tok/sec: 109367.60, flops:114.78, batch-reuse:1
@ 1598 train 5.6465 , allloss: 6.3781, dt: 1209.90ms, fracRes: 0.5471, norm(attn): 0.1514, norm(output): 5.3125, norm(x): 4.4696, norm(y): 0.9959, norm:1.9147, tok/sec: 108332.65, flops:113.70, batch-reuse:1
@ 1599 train 5.6987 , allloss: 6.4610, dt: 1210.93ms, fracRes: 0.5479, norm(attn): 0.1504, norm(output): 5.3125, norm(x): 4.4550, norm(y): 0.9957, norm:2.5473, tok/sec: 108241.02, flops:113.60, batch-reuse:1
@ 1600 train 5.6151 , allloss: 6.3439, dt: 1219.35ms, fracRes: 0.5495, norm(attn): 0.1484, norm(output): 5.3125, norm(x): 4.4325, norm(y): 0.9959, norm:2.4079, tok/sec: 107493.24, flops:112.82, batch-reuse:1
@ 1601 train 5.7118 , allloss: 6.4834, dt: 1250.53ms, fracRes: 0.5494, norm(attn): 0.1455, norm(output): 5.3125, norm(x): 4.4251, norm(y): 0.9958, norm:2.6087, tok/sec: 104813.38, flops:110.00, batch-reuse:1
@ 1602 train 5.6186 , allloss: 6.3231, dt: 1246.56ms, fracRes: 0.5508, norm(attn): 0.1445, norm(output): 5.3125, norm(x): 4.4089, norm(y): 0.9958, norm:1.9223, tok/sec: 105146.98, flops:110.35, batch-reuse:1
@ 1603 train 5.5640 , allloss: 6.2475, dt: 1219.36ms, fracRes: 0.5513, norm(attn): 0.1445, norm(output): 5.2500, norm(x): 4.4010, norm(y): 0.9958, norm:2.8670, tok/sec: 107492.84, flops:112.82, batch-reuse:1
@ 1604 train 5.5921 , allloss: 6.2264, dt: 1193.96ms, fracRes: 0.5508, norm(attn): 0.1445, norm(output): 5.2500, norm(x): 4.4176, norm(y): 0.9958, norm:1.6789, tok/sec: 109779.34, flops:115.22, batch-reuse:1
@ 1605 train 5.6535 , allloss: 6.2918, dt: 1217.37ms, fracRes: 0.5502, norm(attn): 0.1455, norm(output): 5.3125, norm(x): 4.4256, norm(y): 0.9955, norm:1.8144, tok/sec: 107668.46, flops:113.00, batch-reuse:1
@ 1606 train 5.6111 , allloss: 6.1957, dt: 1202.99ms, fracRes: 0.5509, norm(attn): 0.1416, norm(output): 5.3125, norm(x): 4.4101, norm(y): 0.9954, norm:1.1928, tok/sec: 108955.48, flops:114.35, batch-reuse:1
@ 1607 train 5.6473 , allloss: 6.2017, dt: 1232.18ms, fracRes: 0.5504, norm(attn): 0.1406, norm(output): 5.2812, norm(x): 4.4221, norm(y): 0.9954, norm:1.4844, tok/sec: 106374.20, flops:111.64, batch-reuse:1
@ 1608 train 5.6682 , allloss: 6.1853, dt: 1240.99ms, fracRes: 0.5486, norm(attn): 0.1436, norm(output): 5.2188, norm(x): 4.4515, norm(y): 0.9953, norm:1.0098, tok/sec: 105619.29, flops:110.85, batch-reuse:1
@ 1609 train 5.6222 , allloss: 6.0848, dt: 1199.08ms, fracRes: 0.5483, norm(attn): 0.1416, norm(output): 5.3125, norm(x): 4.4622, norm(y): 0.9955, norm:0.9598, tok/sec: 109310.04, flops:114.72, batch-reuse:1
@ 1610 train 5.5760 , allloss: 6.0042, dt: 1225.65ms, fracRes: 0.5497, norm(attn): 0.1396, norm(output): 5.2500, norm(x): 4.4288, norm(y): 0.9954, norm:0.9392, tok/sec: 106940.55, flops:112.24, batch-reuse:1
@ 1611 train 5.5452 , allloss: 5.9489, dt: 1229.15ms, fracRes: 0.5483, norm(attn): 0.1436, norm(output): 5.2500, norm(x): 4.4673, norm(y): 0.9954, norm:0.9982, tok/sec: 106636.54, flops:111.92, batch-reuse:1
@ 1612 train 5.6265 , allloss: 6.0368, dt: 1240.69ms, fracRes: 0.5461, norm(attn): 0.1426, norm(output): 5.2500, norm(x): 4.5411, norm(y): 0.9954, norm:1.0642, tok/sec: 105644.38, flops:110.88, batch-reuse:1
@ 1613 train 5.5933 , allloss: 5.9968, dt: 1235.65ms, fracRes: 0.5518, norm(attn): 0.1318, norm(output): 5.2500, norm(x): 4.4154, norm(y): 0.9955, norm:0.8309, tok/sec: 106075.67, flops:111.33, batch-reuse:1
@ 1614 train 5.6639 , allloss: 6.0724, dt: 1237.76ms, fracRes: 0.5514, norm(attn): 0.1338, norm(output): 5.3125, norm(x): 4.4405, norm(y): 0.9956, norm:1.1304, tok/sec: 105894.13, flops:111.14, batch-reuse:1
@ 1615 train 5.6499 , allloss: 6.0448, dt: 1240.95ms, fracRes: 0.5495, norm(attn): 0.1396, norm(output): 5.1875, norm(x): 4.4799, norm(y): 0.9954, norm:1.3219, tok/sec: 105621.89, flops:110.85, batch-reuse:1
@ 1616 train 5.6687 , allloss: 6.0535, dt: 1225.99ms, fracRes: 0.5488, norm(attn): 0.1426, norm(output): 5.1875, norm(x): 4.5008, norm(y): 0.9951, norm:0.9256, tok/sec: 106911.54, flops:112.21, batch-reuse:1
@ 1617 train 5.6331 , allloss: 6.0087, dt: 1201.30ms, fracRes: 0.5474, norm(attn): 0.1396, norm(output): 5.2812, norm(x): 4.5638, norm(y): 0.9953, norm:1.0572, tok/sec: 109108.84, flops:114.51, batch-reuse:1
@ 1618 train 5.6286 , allloss: 5.9910, dt: 1188.22ms, fracRes: 0.5487, norm(attn): 0.1348, norm(output): 5.3125, norm(x): 4.5557, norm(y): 0.9956, norm:0.9251, tok/sec: 110309.82, flops:115.77, batch-reuse:1
@ 1619 train 5.5496 , allloss: 5.9158, dt: 1204.28ms, fracRes: 0.5452, norm(attn): 0.1396, norm(output): 5.3125, norm(x): 4.5998, norm(y): 0.9953, norm:0.7560, tok/sec: 108838.33, flops:114.23, batch-reuse:1
@ 1620 train 5.5562 , allloss: 5.9125, dt: 1218.37ms, fracRes: 0.5445, norm(attn): 0.1406, norm(output): 5.2812, norm(x): 4.6070, norm(y): 0.9950, norm:0.9021, tok/sec: 107580.06, flops:112.91, batch-reuse:1
@ 1621 train 5.6517 , allloss: 6.0406, dt: 1193.56ms, fracRes: 0.5442, norm(attn): 0.1357, norm(output): 5.3125, norm(x): 4.6223, norm(y): 0.9947, norm:1.1233, tok/sec: 109815.87, flops:115.25, batch-reuse:1
@ 1622 train 5.6216 , allloss: 6.1358, dt: 1226.61ms, fracRes: 0.5430, norm(attn): 0.1387, norm(output): 5.3125, norm(x): 4.6436, norm(y): 0.9945, norm:3.2830, tok/sec: 106857.32, flops:112.15, batch-reuse:1
@ 1623 train 5.5594 , allloss: 5.9267, dt: 1234.35ms, fracRes: 0.5432, norm(attn): 0.1387, norm(output): 5.3125, norm(x): 4.6527, norm(y): 0.9942, norm:1.2182, tok/sec: 106186.94, flops:111.45, batch-reuse:1
@ 1624 train 5.5034 , allloss: 5.8337, dt: 1239.40ms, fracRes: 0.5434, norm(attn): 0.1396, norm(output): 5.3125, norm(x): 4.6498, norm(y): 0.9943, norm:1.0998, tok/sec: 105754.79, flops:110.99, batch-reuse:1
@ 1625 train 5.6057 , allloss: 6.0058, dt: 1233.19ms, fracRes: 0.5426, norm(attn): 0.1436, norm(output): 5.3125, norm(x): 4.6860, norm(y): 0.9939, norm:1.3308, tok/sec: 106286.96, flops:111.55, batch-reuse:1
@ 1626 train 5.5615 , allloss: 5.8715, dt: 1240.26ms, fracRes: 0.5437, norm(attn): 0.1426, norm(output): 5.3125, norm(x): 4.6768, norm(y): 0.9941, norm:1.0606, tok/sec: 105680.87, flops:110.91, batch-reuse:1
@ 1627 train 5.4903 , allloss: 5.8052, dt: 1221.63ms, fracRes: 0.5452, norm(attn): 0.1426, norm(output): 5.3125, norm(x): 4.6565, norm(y): 0.9941, norm:1.6927, tok/sec: 107292.46, flops:112.61, batch-reuse:1
@ 1628 train 5.4997 , allloss: 5.7804, dt: 1194.89ms, fracRes: 0.5455, norm(attn): 0.1436, norm(output): 5.3125, norm(x): 4.6424, norm(y): 0.9942, norm:0.8871, tok/sec: 109694.11, flops:115.13, batch-reuse:1
@ 1629 train 5.5079 , allloss: 5.8950, dt: 1203.95ms, fracRes: 0.5463, norm(attn): 0.1445, norm(output): 5.2188, norm(x): 4.6211, norm(y): 0.9944, norm:2.1739, tok/sec: 108868.60, flops:114.26, batch-reuse:1
@ 1630 train 5.5760 , allloss: 5.8793, dt: 1211.45ms, fracRes: 0.5458, norm(attn): 0.1484, norm(output): 5.1875, norm(x): 4.6274, norm(y): 0.9943, norm:1.3160, tok/sec: 108194.01, flops:113.55, batch-reuse:1
@ 1631 train 5.4915 , allloss: 5.7626, dt: 1242.70ms, fracRes: 0.5459, norm(attn): 0.1475, norm(output): 5.3125, norm(x): 4.6396, norm(y): 0.9945, norm:0.9865, tok/sec: 105473.27, flops:110.70, batch-reuse:1
@ 1632 train 5.5975 , allloss: 5.8662, dt: 1242.02ms, fracRes: 0.5456, norm(attn): 0.1504, norm(output): 5.3125, norm(x): 4.6580, norm(y): 0.9943, norm:1.2225, tok/sec: 105531.02, flops:110.76, batch-reuse:1
@ 1633 train 5.5754 , allloss: 5.8052, dt: 1238.58ms, fracRes: 0.5460, norm(attn): 0.1504, norm(output): 5.2188, norm(x): 4.6509, norm(y): 0.9942, norm:1.1095, tok/sec: 105824.01, flops:111.06, batch-reuse:1
@ 1634 train 5.5656 , allloss: 5.8023, dt: 1210.32ms, fracRes: 0.5476, norm(attn): 0.1523, norm(output): 5.2812, norm(x): 4.6379, norm(y): 0.9943, norm:0.9115, tok/sec: 108295.63, flops:113.66, batch-reuse:1
@ 1635 train 5.5135 , allloss: 5.7361, dt: 1196.69ms, fracRes: 0.5491, norm(attn): 0.1455, norm(output): 5.3125, norm(x): 4.6012, norm(y): 0.9943, norm:0.8575, tok/sec: 109528.36, flops:114.95, batch-reuse:1
@ 1636 train 5.4872 , allloss: 5.6854, dt: 1190.38ms, fracRes: 0.5497, norm(attn): 0.1416, norm(output): 5.2500, norm(x): 4.5679, norm(y): 0.9944, norm:0.7999, tok/sec: 110109.61, flops:115.56, batch-reuse:1
@ 1637 train 5.5787 , allloss: 5.7793, dt: 1209.24ms, fracRes: 0.5488, norm(attn): 0.1465, norm(output): 5.2500, norm(x): 4.6016, norm(y): 0.9945, norm:0.6842, tok/sec: 108392.20, flops:113.76, batch-reuse:1
@ 1638 train 5.6136 , allloss: 5.8022, dt: 1215.23ms, fracRes: 0.5495, norm(attn): 0.1436, norm(output): 5.2500, norm(x): 4.5948, norm(y): 0.9942, norm:0.7346, tok/sec: 107857.35, flops:113.20, batch-reuse:1
@ 1639 train 5.5006 , allloss: 5.6700, dt: 1222.93ms, fracRes: 0.5487, norm(attn): 0.1465, norm(output): 5.2500, norm(x): 4.6179, norm(y): 0.9947, norm:0.7544, tok/sec: 107178.85, flops:112.49, batch-reuse:1
@ 1640 train 5.5436 , allloss: 5.7017, dt: 1216.15ms, fracRes: 0.5498, norm(attn): 0.1436, norm(output): 5.3125, norm(x): 4.6168, norm(y): 0.9945, norm:1.1057, tok/sec: 107775.79, flops:113.11, batch-reuse:1
@ 1641 train 5.5103 , allloss: 5.6530, dt: 1208.97ms, fracRes: 0.5505, norm(attn): 0.1396, norm(output): 5.3125, norm(x): 4.5964, norm(y): 0.9947, norm:0.8505, tok/sec: 108416.53, flops:113.79, batch-reuse:1
@ 1642 train 5.5114 , allloss: 5.6609, dt: 1226.36ms, fracRes: 0.5499, norm(attn): 0.1416, norm(output): 5.2812, norm(x): 4.6153, norm(y): 0.9946, norm:0.5274, tok/sec: 106878.53, flops:112.17, batch-reuse:1
@ 1643 train 5.5378 , allloss: 5.6850, dt: 1224.64ms, fracRes: 0.5494, norm(attn): 0.1426, norm(output): 5.2812, norm(x): 4.6392, norm(y): 0.9943, norm:0.7461, tok/sec: 107028.87, flops:112.33, batch-reuse:1
@ 1644 train 5.5742 , allloss: 5.7063, dt: 1226.47ms, fracRes: 0.5483, norm(attn): 0.1445, norm(output): 5.3125, norm(x): 4.6560, norm(y): 0.9942, norm:0.5777, tok/sec: 106869.41, flops:112.16, batch-reuse:1
@ 1645 train 5.5262 , allloss: 5.6644, dt: 1209.73ms, fracRes: 0.5473, norm(attn): 0.1426, norm(output): 5.2812, norm(x): 4.6941, norm(y): 0.9941, norm:0.7169, tok/sec: 108348.56, flops:113.71, batch-reuse:1
@ 1646 train 5.5451 , allloss: 5.6819, dt: 1234.10ms, fracRes: 0.5469, norm(attn): 0.1396, norm(output): 5.3125, norm(x): 4.6840, norm(y): 0.9941, norm:0.9821, tok/sec: 106208.54, flops:111.47, batch-reuse:1
@ 1647 train 5.5882 , allloss: 5.7220, dt: 1241.01ms, fracRes: 0.5450, norm(attn): 0.1426, norm(output): 5.3125, norm(x): 4.7149, norm(y): 0.9939, norm:0.8359, tok/sec: 105616.80, flops:110.85, batch-reuse:1
@ 1648 train 5.5495 , allloss: 5.6657, dt: 1234.73ms, fracRes: 0.5450, norm(attn): 0.1504, norm(output): 5.3125, norm(x): 4.7152, norm(y): 0.9940, norm:0.6921, tok/sec: 106154.32, flops:111.41, batch-reuse:1
@ 1649 train 5.5045 , allloss: 5.6011, dt: 1207.67ms, fracRes: 0.5459, norm(attn): 0.1494, norm(output): 5.3125, norm(x): 4.6978, norm(y): 0.9939, norm:0.8123, tok/sec: 108532.96, flops:113.91, batch-reuse:1
@ 1650 train 5.5113 , allloss: 5.5969, dt: 1219.42ms, fracRes: 0.5461, norm(attn): 0.1445, norm(output): 5.3125, norm(x): 4.6757, norm(y): 0.9934, norm:0.8294, tok/sec: 107487.46, flops:112.81, batch-reuse:1
@ 1651 train 5.5880 , allloss: 5.6698, dt: 1216.69ms, fracRes: 0.5448, norm(attn): 0.1426, norm(output): 5.4062, norm(x): 4.7225, norm(y): 0.9934, norm:0.8290, tok/sec: 107728.61, flops:113.06, batch-reuse:1
@ 1652 train 5.6478 , allloss: 5.7347, dt: 1174.55ms, fracRes: 0.5457, norm(attn): 0.1387, norm(output): 5.3438, norm(x): 4.7360, norm(y): 0.9938, norm:1.0600, tok/sec: 111593.44, flops:117.12, batch-reuse:1
@ 1653 train 5.5818 , allloss: 5.6536, dt: 1206.81ms, fracRes: 0.5461, norm(attn): 0.1396, norm(output): 5.4375, norm(x): 4.7077, norm(y): 0.9937, norm:1.0993, tok/sec: 108610.07, flops:113.99, batch-reuse:1
@ 1654 train 5.5319 , allloss: 5.6002, dt: 1204.21ms, fracRes: 0.5475, norm(attn): 0.1465, norm(output): 5.3750, norm(x): 4.7002, norm(y): 0.9939, norm:0.6937, tok/sec: 108845.17, flops:114.24, batch-reuse:1
@ 1655 train 5.4777 , allloss: 5.5494, dt: 1219.68ms, fracRes: 0.5483, norm(attn): 0.1523, norm(output): 5.4062, norm(x): 4.7463, norm(y): 0.9937, norm:0.7745, tok/sec: 107464.37, flops:112.79, batch-reuse:1
@ 1656 train 5.4950 , allloss: 5.5515, dt: 1209.96ms, fracRes: 0.5502, norm(attn): 0.1426, norm(output): 5.4062, norm(x): 4.7146, norm(y): 0.9938, norm:0.7786, tok/sec: 108327.66, flops:113.69, batch-reuse:1
@ 1657 train 5.6019 , allloss: 5.6471, dt: 1220.51ms, fracRes: 0.5495, norm(attn): 0.1416, norm(output): 5.4375, norm(x): 4.7585, norm(y): 0.9937, norm:0.8604, tok/sec: 107390.79, flops:112.71, batch-reuse:1
@ 1658 train 5.6040 , allloss: 5.6539, dt: 1241.50ms, fracRes: 0.5485, norm(attn): 0.1445, norm(output): 5.4062, norm(x): 4.8128, norm(y): 0.9936, norm:0.9740, tok/sec: 105575.18, flops:110.80, batch-reuse:1
@ 1659 train 5.5747 , allloss: 5.6159, dt: 1240.17ms, fracRes: 0.5508, norm(attn): 0.1396, norm(output): 5.3750, norm(x): 4.7630, norm(y): 0.9936, norm:1.3500, tok/sec: 105688.98, flops:110.92, batch-reuse:1
@ 1660 train 5.5254 , allloss: 5.5678, dt: 1212.49ms, fracRes: 0.5539, norm(attn): 0.1387, norm(output): 5.3438, norm(x): 4.6940, norm(y): 0.9932, norm:0.9993, tok/sec: 108101.69, flops:113.45, batch-reuse:1
@ 1661 train 5.6254 , allloss: 5.6619, dt: 1203.34ms, fracRes: 0.5523, norm(attn): 0.1406, norm(output): 5.3438, norm(x): 4.6963, norm(y): 0.9935, norm:1.0440, tok/sec: 108923.32, flops:114.32, batch-reuse:1
@ 1662 train 5.5799 , allloss: 5.6130, dt: 1232.60ms, fracRes: 0.5496, norm(attn): 0.1416, norm(output): 5.4688, norm(x): 4.7507, norm(y): 0.9935, norm:0.8806, tok/sec: 106338.13, flops:111.60, batch-reuse:1
@ 1663 train 5.5800 , allloss: 5.6173, dt: 1224.27ms, fracRes: 0.5483, norm(attn): 0.1416, norm(output): 5.4688, norm(x): 4.7592, norm(y): 0.9934, norm:0.9492, tok/sec: 107061.57, flops:112.36, batch-reuse:1
@ 1664 train 5.5380 , allloss: 5.5746, dt: 1218.08ms, fracRes: 0.5476, norm(attn): 0.1465, norm(output): 5.4375, norm(x): 4.7712, norm(y): 0.9937, norm:0.9394, tok/sec: 107605.72, flops:112.93, batch-reuse:1
@ 1665 train 5.5600 , allloss: 5.5902, dt: 1238.60ms, fracRes: 0.5472, norm(attn): 0.1484, norm(output): 5.4688, norm(x): 4.8052, norm(y): 0.9935, norm:0.6883, tok/sec: 105822.38, flops:111.06, batch-reuse:1
@ 1666 train 5.6376 , allloss: 5.6636, dt: 1237.40ms, fracRes: 0.5482, norm(attn): 0.1465, norm(output): 5.4688, norm(x): 4.8490, norm(y): 0.9934, norm:0.7321, tok/sec: 105925.61, flops:111.17, batch-reuse:1
@ 1667 train 5.7403 , allloss: 5.7610, dt: 1230.07ms, fracRes: 0.5514, norm(attn): 0.1377, norm(output): 5.4688, norm(x): 4.7938, norm(y): 0.9933, norm:0.5963, tok/sec: 106556.59, flops:111.83, batch-reuse:1
@ 1668 train 5.6899 , allloss: 5.7128, dt: 1214.67ms, fracRes: 0.5528, norm(attn): 0.1357, norm(output): 5.4688, norm(x): 4.7898, norm(y): 0.9934, norm:0.7316, tok/sec: 107907.71, flops:113.25, batch-reuse:1
@ 1669 train 5.7626 , allloss: 5.7840, dt: 1238.77ms, fracRes: 0.5532, norm(attn): 0.1348, norm(output): 5.4688, norm(x): 4.7899, norm(y): 0.9934, norm:1.0730, tok/sec: 105807.83, flops:111.05, batch-reuse:1
@ 1670 train 5.8222 , allloss: 5.8439, dt: 1232.79ms, fracRes: 0.5534, norm(attn): 0.1377, norm(output): 5.5000, norm(x): 4.7930, norm(y): 0.9934, norm:1.0989, tok/sec: 106321.58, flops:111.59, batch-reuse:1
@ 1671 train 5.7487 , allloss: 5.7643, dt: 1227.05ms, fracRes: 0.5521, norm(attn): 0.1445, norm(output): 5.4688, norm(x): 4.8491, norm(y): 0.9935, norm:0.7843, tok/sec: 106818.99, flops:112.11, batch-reuse:1
@ 1672 train 5.7374 , allloss: 5.7487, dt: 1200.66ms, fracRes: 0.5538, norm(attn): 0.1416, norm(output): 5.5000, norm(x): 4.8332, norm(y): 0.9931, norm:0.7879, tok/sec: 109166.93, flops:114.57, batch-reuse:1
@ 1673 train 5.6654 , allloss: 5.6764, dt: 1208.52ms, fracRes: 0.5535, norm(attn): 0.1406, norm(output): 5.5000, norm(x): 4.8722, norm(y): 0.9935, norm:0.7773, tok/sec: 108456.25, flops:113.83, batch-reuse:1
@ 1674 train 5.6816 , allloss: 5.6905, dt: 1195.52ms, fracRes: 0.5531, norm(attn): 0.1377, norm(output): 5.5000, norm(x): 4.8721, norm(y): 0.9936, norm:0.7412, tok/sec: 109636.00, flops:115.07, batch-reuse:1
@ 1675 train 5.7585 , allloss: 5.7652, dt: 1195.92ms, fracRes: 0.5519, norm(attn): 0.1426, norm(output): 5.5000, norm(x): 4.8931, norm(y): 0.9934, norm:0.7162, tok/sec: 109599.41, flops:115.03, batch-reuse:1
@ 1676 train 5.7816 , allloss: 5.7890, dt: 1204.09ms, fracRes: 0.5520, norm(attn): 0.1426, norm(output): 5.5000, norm(x): 4.9063, norm(y): 0.9934, norm:0.9146, tok/sec: 108855.53, flops:114.25, batch-reuse:1
@ 1677 train 5.7410 , allloss: 5.7474, dt: 1230.60ms, fracRes: 0.5519, norm(attn): 0.1416, norm(output): 5.5000, norm(x): 4.9159, norm(y): 0.9936, norm:0.9478, tok/sec: 106510.76, flops:111.79, batch-reuse:1
@ 1678 train 5.6787 , allloss: 5.6851, dt: 1235.55ms, fracRes: 0.5502, norm(attn): 0.1445, norm(output): 5.5000, norm(x): 4.9598, norm(y): 0.9936, norm:0.6970, tok/sec: 106084.12, flops:111.34, batch-reuse:1
@ 1679 train 5.7534 , allloss: 5.7582, dt: 1200.40ms, fracRes: 0.5509, norm(attn): 0.1416, norm(output): 5.5000, norm(x): 4.9574, norm(y): 0.9933, norm:0.6508, tok/sec: 109190.02, flops:114.60, batch-reuse:1
@ 1680 train 5.6365 , allloss: 5.6400, dt: 1210.19ms, fracRes: 0.5518, norm(attn): 0.1387, norm(output): 5.5000, norm(x): 4.9289, norm(y): 0.9931, norm:0.6216, tok/sec: 108307.36, flops:113.67, batch-reuse:1
@ 1681 train 5.6774 , allloss: 5.6806, dt: 1205.27ms, fracRes: 0.5523, norm(attn): 0.1377, norm(output): 5.5000, norm(x): 4.9321, norm(y): 0.9928, norm:0.6065, tok/sec: 108749.14, flops:114.13, batch-reuse:1
@ 1682 train 5.6783 , allloss: 5.6932, dt: 1228.84ms, fracRes: 0.5517, norm(attn): 0.1396, norm(output): 5.5000, norm(x): 4.9489, norm(y): 0.9928, norm:1.1220, tok/sec: 106663.58, flops:111.95, batch-reuse:1
@ 1683 train 5.6324 , allloss: 5.6354, dt: 1231.73ms, fracRes: 0.5506, norm(attn): 0.1436, norm(output): 5.5000, norm(x): 4.9994, norm(y): 0.9931, norm:0.7084, tok/sec: 106413.20, flops:111.68, batch-reuse:1
@ 1684 train 5.6431 , allloss: 5.6469, dt: 1205.44ms, fracRes: 0.5496, norm(attn): 0.1455, norm(output): 5.5000, norm(x): 5.0334, norm(y): 0.9930, norm:0.7042, tok/sec: 108734.12, flops:114.12, batch-reuse:1
@ 1685 train 5.6846 , allloss: 5.6866, dt: 1212.60ms, fracRes: 0.5499, norm(attn): 0.1436, norm(output): 5.5000, norm(x): 5.0412, norm(y): 0.9929, norm:0.5645, tok/sec: 108091.81, flops:113.44, batch-reuse:1
@ 1686 train 5.6808 , allloss: 5.6833, dt: 1241.05ms, fracRes: 0.5507, norm(attn): 0.1416, norm(output): 5.5000, norm(x): 5.0400, norm(y): 0.9929, norm:0.5381, tok/sec: 105614.02, flops:110.84, batch-reuse:1
@ 1687 train 5.6644 , allloss: 5.6662, dt: 1203.19ms, fracRes: 0.5524, norm(attn): 0.1377, norm(output): 5.5000, norm(x): 5.0364, norm(y): 0.9931, norm:0.5173, tok/sec: 108936.77, flops:114.33, batch-reuse:1
@ 1688 train 5.7037 , allloss: 5.7055, dt: 1199.46ms, fracRes: 0.5530, norm(attn): 0.1396, norm(output): 5.5000, norm(x): 5.0074, norm(y): 0.9930, norm:0.6234, tok/sec: 109275.66, flops:114.69, batch-reuse:1
@ 1689 train 5.6640 , allloss: 5.6689, dt: 1230.02ms, fracRes: 0.5525, norm(attn): 0.1416, norm(output): 5.5000, norm(x): 5.0458, norm(y): 0.9931, norm:0.6718, tok/sec: 106561.24, flops:111.84, batch-reuse:1
@ 1690 train 5.6451 , allloss: 5.6606, dt: 1226.16ms, fracRes: 0.5505, norm(attn): 0.1445, norm(output): 5.5000, norm(x): 5.1006, norm(y): 0.9929, norm:1.2210, tok/sec: 106895.99, flops:112.19, batch-reuse:1
@ 1691 train 5.6045 , allloss: 5.6329, dt: 1216.90ms, fracRes: 0.5486, norm(attn): 0.1475, norm(output): 5.5312, norm(x): 5.1412, norm(y): 0.9930, norm:0.9680, tok/sec: 107709.81, flops:113.04, batch-reuse:1
@ 1692 train 5.5521 , allloss: 5.5535, dt: 1210.34ms, fracRes: 0.5495, norm(attn): 0.1445, norm(output): 5.5312, norm(x): 5.1277, norm(y): 0.9928, norm:0.6980, tok/sec: 108293.73, flops:113.66, batch-reuse:1
@ 1693 train 5.8253 , allloss: 5.8268, dt: 1224.48ms, fracRes: 0.5496, norm(attn): 0.1406, norm(output): 5.5000, norm(x): 5.1445, norm(y): 0.9928, norm:0.8291, tok/sec: 107042.64, flops:112.34, batch-reuse:1
@ 1694 train 5.8387 , allloss: 5.8399, dt: 1215.21ms, fracRes: 0.5487, norm(attn): 0.1445, norm(output): 5.5312, norm(x): 5.1845, norm(y): 0.9927, norm:0.9672, tok/sec: 107859.17, flops:113.20, batch-reuse:1
@ 1695 train 5.6759 , allloss: 5.6785, dt: 1222.79ms, fracRes: 0.5465, norm(attn): 0.1523, norm(output): 5.5312, norm(x): 5.2551, norm(y): 0.9929, norm:0.7769, tok/sec: 107191.08, flops:112.50, batch-reuse:1
@ 1696 train 5.6469 , allloss: 5.6476, dt: 1243.77ms, fracRes: 0.5500, norm(attn): 0.1367, norm(output): 5.5312, norm(x): 5.1625, norm(y): 0.9929, norm:0.7081, tok/sec: 105383.14, flops:110.60, batch-reuse:1
@ 1697 train 5.7066 , allloss: 5.7305, dt: 1234.64ms, fracRes: 0.5518, norm(attn): 0.1318, norm(output): 5.5000, norm(x): 5.1426, norm(y): 0.9929, norm:0.7735, tok/sec: 106162.15, flops:111.42, batch-reuse:1
@ 1698 train 5.6354 , allloss: 5.6366, dt: 1213.06ms, fracRes: 0.5518, norm(attn): 0.1367, norm(output): 5.5000, norm(x): 5.1255, norm(y): 0.9929, norm:0.7990, tok/sec: 108051.00, flops:113.40, batch-reuse:1
@ 1699 train 5.6628 , allloss: 5.6642, dt: 1175.89ms, fracRes: 0.5519, norm(attn): 0.1426, norm(output): 5.5000, norm(x): 5.1333, norm(y): 0.9928, norm:0.7601, tok/sec: 111466.01, flops:116.99, batch-reuse:1
@ 1700 train 5.6649 , allloss: 5.6660, dt: 1211.63ms, fracRes: 0.5532, norm(attn): 0.1436, norm(output): 5.5000, norm(x): 5.1353, norm(y): 0.9928, norm:0.7847, tok/sec: 108178.66, flops:113.54, batch-reuse:1
@ 1701 train 5.6212 , allloss: 5.6225, dt: 1206.44ms, fracRes: 0.5541, norm(attn): 0.1436, norm(output): 5.5000, norm(x): 5.1285, norm(y): 0.9928, norm:0.7772, tok/sec: 108643.66, flops:114.02, batch-reuse:1
@ 1702 train 5.6671 , allloss: 5.6680, dt: 1192.45ms, fracRes: 0.5537, norm(attn): 0.1406, norm(output): 5.5000, norm(x): 5.1665, norm(y): 0.9928, norm:0.9608, tok/sec: 109918.54, flops:115.36, batch-reuse:1
@ 1703 train 5.6616 , allloss: 5.6631, dt: 1200.74ms, fracRes: 0.5526, norm(attn): 0.1396, norm(output): 5.5000, norm(x): 5.2119, norm(y): 0.9929, norm:0.9163, tok/sec: 109159.23, flops:114.56, batch-reuse:1
@ 1704 train 5.6102 , allloss: 5.6110, dt: 1206.43ms, fracRes: 0.5515, norm(attn): 0.1445, norm(output): 5.5000, norm(x): 5.2278, norm(y): 0.9932, norm:0.5805, tok/sec: 108644.09, flops:114.02, batch-reuse:1
@ 1705 train 5.6472 , allloss: 5.6661, dt: 1230.54ms, fracRes: 0.5522, norm(attn): 0.1445, norm(output): 5.5000, norm(x): 5.2166, norm(y): 0.9928, norm:1.0707, tok/sec: 106516.14, flops:111.79, batch-reuse:1
@ 1706 train 5.5771 , allloss: 5.5829, dt: 1198.10ms, fracRes: 0.5546, norm(attn): 0.1406, norm(output): 5.5000, norm(x): 5.1692, norm(y): 0.9929, norm:0.7814, tok/sec: 109399.61, flops:114.82, batch-reuse:1
@ 1707 train 5.5914 , allloss: 5.5937, dt: 1190.43ms, fracRes: 0.5539, norm(attn): 0.1396, norm(output): 5.5000, norm(x): 5.2050, norm(y): 0.9930, norm:0.9737, tok/sec: 110105.02, flops:115.56, batch-reuse:1
@ 1708 train 5.5670 , allloss: 5.5685, dt: 1193.69ms, fracRes: 0.5536, norm(attn): 0.1436, norm(output): 5.5312, norm(x): 5.2283, norm(y): 0.9929, norm:1.0672, tok/sec: 109804.51, flops:115.24, batch-reuse:1
@ 1709 train 5.6619 , allloss: 5.6639, dt: 1187.68ms, fracRes: 0.5520, norm(attn): 0.1504, norm(output): 5.5000, norm(x): 5.2590, norm(y): 0.9929, norm:0.7694, tok/sec: 110359.87, flops:115.82, batch-reuse:1
@ 1710 train 5.5965 , allloss: 5.6004, dt: 1206.29ms, fracRes: 0.5516, norm(attn): 0.1504, norm(output): 5.5000, norm(x): 5.2849, norm(y): 0.9929, norm:0.7211, tok/sec: 108656.80, flops:114.04, batch-reuse:1
@ 1711 train 5.5969 , allloss: 5.6020, dt: 1212.36ms, fracRes: 0.5531, norm(attn): 0.1436, norm(output): 5.5312, norm(x): 5.2736, norm(y): 0.9927, norm:0.6129, tok/sec: 108113.20, flops:113.47, batch-reuse:1
@ 1712 train 5.6935 , allloss: 5.6951, dt: 1211.31ms, fracRes: 0.5541, norm(attn): 0.1406, norm(output): 5.5312, norm(x): 5.2690, norm(y): 0.9925, norm:0.5664, tok/sec: 108206.38, flops:113.56, batch-reuse:1
@ 1713 train 5.4684 , allloss: 5.4703, dt: 1205.86ms, fracRes: 0.5544, norm(attn): 0.1396, norm(output): 5.5312, norm(x): 5.2985, norm(y): 0.9928, norm:0.6934, tok/sec: 108695.62, flops:114.08, batch-reuse:1
@ 1714 train 5.6091 , allloss: 5.6111, dt: 1209.50ms, fracRes: 0.5549, norm(attn): 0.1396, norm(output): 5.5312, norm(x): 5.3068, norm(y): 0.9925, norm:0.7956, tok/sec: 108368.87, flops:113.74, batch-reuse:1
@ 1715 train 5.6107 , allloss: 5.6121, dt: 1204.30ms, fracRes: 0.5551, norm(attn): 0.1426, norm(output): 5.5312, norm(x): 5.3094, norm(y): 0.9926, norm:0.7412, tok/sec: 108836.76, flops:114.23, batch-reuse:1
@ 1716 train 5.6284 , allloss: 5.6298, dt: 1216.51ms, fracRes: 0.5545, norm(attn): 0.1504, norm(output): 5.5312, norm(x): 5.3400, norm(y): 0.9922, norm:0.6162, tok/sec: 107744.26, flops:113.08, batch-reuse:1
@ 1717 train 5.7895 , allloss: 5.7908, dt: 1231.57ms, fracRes: 0.5543, norm(attn): 0.1533, norm(output): 5.5312, norm(x): 5.3812, norm(y): 0.9918, norm:0.6858, tok/sec: 106426.88, flops:111.70, batch-reuse:1
@ 1718 train 5.5671 , allloss: 5.5745, dt: 1245.89ms, fracRes: 0.5558, norm(attn): 0.1494, norm(output): 5.5625, norm(x): 5.3427, norm(y): 0.9921, norm:1.0831, tok/sec: 105203.36, flops:110.41, batch-reuse:1
@ 1719 train 5.7224 , allloss: 5.7233, dt: 1220.24ms, fracRes: 0.5556, norm(attn): 0.1416, norm(output): 5.5312, norm(x): 5.3803, norm(y): 0.9924, norm:1.2106, tok/sec: 107415.18, flops:112.73, batch-reuse:1
@ 1720 train 5.6307 , allloss: 5.6319, dt: 1188.35ms, fracRes: 0.5553, norm(attn): 0.1396, norm(output): 5.5000, norm(x): 5.3846, norm(y): 0.9922, norm:1.0798, tok/sec: 110297.65, flops:115.76, batch-reuse:1
@ 1721 train 5.6405 , allloss: 5.6415, dt: 1224.03ms, fracRes: 0.5553, norm(attn): 0.1416, norm(output): 5.5312, norm(x): 5.3688, norm(y): 0.9923, norm:0.7486, tok/sec: 107082.17, flops:112.38, batch-reuse:1
@ 1722 train 5.7534 , allloss: 5.7542, dt: 1229.99ms, fracRes: 0.5553, norm(attn): 0.1514, norm(output): 5.5312, norm(x): 5.3893, norm(y): 0.9919, norm:0.7549, tok/sec: 106563.12, flops:111.84, batch-reuse:1
@ 1723 train 5.6468 , allloss: 5.6487, dt: 1195.41ms, fracRes: 0.5546, norm(attn): 0.1543, norm(output): 5.5000, norm(x): 5.3963, norm(y): 0.9921, norm:0.7614, tok/sec: 109646.28, flops:115.08, batch-reuse:1
@ 1724 train 5.5538 , allloss: 5.5549, dt: 1217.82ms, fracRes: 0.5540, norm(attn): 0.1494, norm(output): 5.5312, norm(x): 5.4182, norm(y): 0.9922, norm:0.6321, tok/sec: 107628.43, flops:112.96, batch-reuse:1
@ 1725 train 5.6287 , allloss: 5.6295, dt: 1203.37ms, fracRes: 0.5539, norm(attn): 0.1426, norm(output): 5.5625, norm(x): 5.4293, norm(y): 0.9924, norm:0.8159, tok/sec: 108920.47, flops:114.31, batch-reuse:1
@ 1726 train 5.5952 , allloss: 5.5956, dt: 1205.86ms, fracRes: 0.5534, norm(attn): 0.1416, norm(output): 5.5312, norm(x): 5.4283, norm(y): 0.9925, norm:0.7014, tok/sec: 108695.88, flops:114.08, batch-reuse:1
@ 1727 train 5.5528 , allloss: 5.5535, dt: 1199.52ms, fracRes: 0.5533, norm(attn): 0.1426, norm(output): 5.5312, norm(x): 5.4214, norm(y): 0.9923, norm:0.9112, tok/sec: 109270.26, flops:114.68, batch-reuse:1
@ 1728 train 5.6492 , allloss: 5.6504, dt: 1202.10ms, fracRes: 0.5528, norm(attn): 0.1465, norm(output): 5.5312, norm(x): 5.4201, norm(y): 0.9921, norm:0.7925, tok/sec: 109035.55, flops:114.43, batch-reuse:1
@ 1729 train 5.7711 , allloss: 5.7729, dt: 1207.15ms, fracRes: 0.5529, norm(attn): 0.1504, norm(output): 5.5312, norm(x): 5.4382, norm(y): 0.9920, norm:0.9189, tok/sec: 108579.48, flops:113.96, batch-reuse:1
@ 1730 train 5.6561 , allloss: 5.6596, dt: 1203.61ms, fracRes: 0.5530, norm(attn): 0.1465, norm(output): 5.5625, norm(x): 5.4513, norm(y): 0.9922, norm:0.6498, tok/sec: 108899.09, flops:114.29, batch-reuse:1
@ 1731 train 5.5872 , allloss: 5.5885, dt: 1216.84ms, fracRes: 0.5535, norm(attn): 0.1455, norm(output): 5.5938, norm(x): 5.4739, norm(y): 0.9922, norm:0.5325, tok/sec: 107714.85, flops:113.05, batch-reuse:1
@ 1732 train 5.5780 , allloss: 5.5789, dt: 1216.22ms, fracRes: 0.5538, norm(attn): 0.1445, norm(output): 5.5625, norm(x): 5.4728, norm(y): 0.9923, norm:0.6860, tok/sec: 107770.05, flops:113.11, batch-reuse:1
@ 1733 train 5.5792 , allloss: 5.5834, dt: 1217.19ms, fracRes: 0.5534, norm(attn): 0.1436, norm(output): 5.5625, norm(x): 5.5074, norm(y): 0.9922, norm:0.6330, tok/sec: 107684.26, flops:113.02, batch-reuse:1
@ 1734 train 5.9147 , allloss: 5.9169, dt: 1224.05ms, fracRes: 0.5535, norm(attn): 0.1484, norm(output): 5.5625, norm(x): 5.5589, norm(y): 0.9922, norm:0.7453, tok/sec: 107080.61, flops:112.38, batch-reuse:1
@ 1735 train 5.5803 , allloss: 5.5824, dt: 1230.25ms, fracRes: 0.5532, norm(attn): 0.1484, norm(output): 5.5625, norm(x): 5.5542, norm(y): 0.9922, norm:0.6716, tok/sec: 106540.63, flops:111.82, batch-reuse:1
@ 1736 train 5.5625 , allloss: 5.5636, dt: 1241.03ms, fracRes: 0.5536, norm(attn): 0.1426, norm(output): 5.5312, norm(x): 5.5504, norm(y): 0.9921, norm:0.6398, tok/sec: 105615.78, flops:110.85, batch-reuse:1
@ 1737 train 5.5400 , allloss: 5.5417, dt: 1206.93ms, fracRes: 0.5535, norm(attn): 0.1455, norm(output): 5.5625, norm(x): 5.5539, norm(y): 0.9922, norm:0.7225, tok/sec: 108599.21, flops:113.98, batch-reuse:1
@ 1738 train 5.5029 , allloss: 5.5036, dt: 1221.59ms, fracRes: 0.5520, norm(attn): 0.1465, norm(output): 5.5625, norm(x): 5.5625, norm(y): 0.9922, norm:0.7299, tok/sec: 107296.33, flops:112.61, batch-reuse:1
@ 1739 train 5.6144 , allloss: 5.6154, dt: 1206.45ms, fracRes: 0.5516, norm(attn): 0.1504, norm(output): 5.5625, norm(x): 5.6030, norm(y): 0.9921, norm:1.0481, tok/sec: 108642.80, flops:114.02, batch-reuse:1
@ 1740 train 5.5562 , allloss: 5.5588, dt: 1206.24ms, fracRes: 0.5522, norm(attn): 0.1504, norm(output): 5.5625, norm(x): 5.6043, norm(y): 0.9922, norm:1.7568, tok/sec: 108661.35, flops:114.04, batch-reuse:1
@ 1741 train 5.5949 , allloss: 5.5965, dt: 1225.64ms, fracRes: 0.5537, norm(attn): 0.1484, norm(output): 5.5625, norm(x): 5.5928, norm(y): 0.9921, norm:0.7170, tok/sec: 106941.36, flops:112.24, batch-reuse:1
@ 1742 train 5.5736 , allloss: 5.5750, dt: 1211.35ms, fracRes: 0.5549, norm(attn): 0.1465, norm(output): 5.5625, norm(x): 5.5929, norm(y): 0.9920, norm:0.7082, tok/sec: 108203.67, flops:113.56, batch-reuse:1
@ 1743 train 5.6612 , allloss: 5.6635, dt: 1195.86ms, fracRes: 0.5547, norm(attn): 0.1455, norm(output): 5.5625, norm(x): 5.6166, norm(y): 0.9919, norm:0.7746, tok/sec: 109605.01, flops:115.03, batch-reuse:1
@ 1744 train 5.5222 , allloss: 5.5238, dt: 1222.44ms, fracRes: 0.5546, norm(attn): 0.1465, norm(output): 5.5625, norm(x): 5.6282, norm(y): 0.9920, norm:0.8083, tok/sec: 107221.81, flops:112.53, batch-reuse:1
@ 1745 train 5.5013 , allloss: 5.5024, dt: 1250.89ms, fracRes: 0.5547, norm(attn): 0.1475, norm(output): 5.5625, norm(x): 5.6491, norm(y): 0.9920, norm:0.6197, tok/sec: 104783.33, flops:109.97, batch-reuse:1
@ 1746 train 5.6012 , allloss: 5.6046, dt: 1218.47ms, fracRes: 0.5558, norm(attn): 0.1455, norm(output): 5.5938, norm(x): 5.6424, norm(y): 0.9920, norm:0.6311, tok/sec: 107570.92, flops:112.90, batch-reuse:1
@ 1747 train 5.4748 , allloss: 5.4755, dt: 1209.86ms, fracRes: 0.5565, norm(attn): 0.1484, norm(output): 5.5625, norm(x): 5.6314, norm(y): 0.9922, norm:0.5732, tok/sec: 108336.75, flops:113.70, batch-reuse:1
@ 1748 train 5.5029 , allloss: 5.5045, dt: 1223.75ms, fracRes: 0.5566, norm(attn): 0.1445, norm(output): 5.5625, norm(x): 5.6189, norm(y): 0.9921, norm:0.6127, tok/sec: 107107.13, flops:112.41, batch-reuse:1
@ 1749 train 5.5998 , allloss: 5.6011, dt: 1246.29ms, fracRes: 0.5558, norm(attn): 0.1445, norm(output): 5.5938, norm(x): 5.6535, norm(y): 0.9918, norm:0.6886, tok/sec: 105169.42, flops:110.38, batch-reuse:1
@ 1750 train 5.6128 , allloss: 5.6146, dt: 1228.42ms, fracRes: 0.5547, norm(attn): 0.1445, norm(output): 5.5625, norm(x): 5.6636, norm(y): 0.9919, norm:1.1919, tok/sec: 106699.35, flops:111.98, batch-reuse:1
@ 1751 train 5.7990 , allloss: 5.8007, dt: 1213.25ms, fracRes: 0.5523, norm(attn): 0.1504, norm(output): 5.7500, norm(x): 5.7339, norm(y): 0.9915, norm:1.1639, tok/sec: 108033.40, flops:113.38, batch-reuse:1
@ 1752 train 5.8327 , allloss: 5.8419, dt: 1235.47ms, fracRes: 0.5521, norm(attn): 0.1562, norm(output): 5.6875, norm(x): 5.7500, norm(y): 0.9917, norm:1.2435, tok/sec: 106090.73, flops:111.34, batch-reuse:1
@ 1753 train 5.6372 , allloss: 5.6392, dt: 1229.78ms, fracRes: 0.5528, norm(attn): 0.1562, norm(output): 5.5938, norm(x): 5.7167, norm(y): 0.9920, norm:0.8644, tok/sec: 106581.90, flops:111.86, batch-reuse:1
@ 1754 train 5.6144 , allloss: 5.6185, dt: 1218.37ms, fracRes: 0.5542, norm(attn): 0.1484, norm(output): 5.5938, norm(x): 5.6827, norm(y): 0.9917, norm:0.8731, tok/sec: 107579.89, flops:112.91, batch-reuse:1
@ 1755 train 5.6086 , allloss: 5.6512, dt: 1245.10ms, fracRes: 0.5549, norm(attn): 0.1455, norm(output): 5.5938, norm(x): 5.6901, norm(y): 0.9919, norm:1.4072, tok/sec: 105269.94, flops:110.48, batch-reuse:1
@ 1756 train 5.6053 , allloss: 5.6058, dt: 1238.86ms, fracRes: 0.5550, norm(attn): 0.1445, norm(output): 5.5938, norm(x): 5.7020, norm(y): 0.9918, norm:0.7194, tok/sec: 105800.58, flops:111.04, batch-reuse:1
@ 1757 train 5.6481 , allloss: 5.6486, dt: 1251.03ms, fracRes: 0.5553, norm(attn): 0.1455, norm(output): 5.6562, norm(x): 5.7170, norm(y): 0.9918, norm:0.7427, tok/sec: 104771.13, flops:109.96, batch-reuse:1
@ 1758 train 5.6496 , allloss: 5.6501, dt: 1218.91ms, fracRes: 0.5553, norm(attn): 0.1465, norm(output): 5.6562, norm(x): 5.7260, norm(y): 0.9917, norm:0.8414, tok/sec: 107532.16, flops:112.86, batch-reuse:1
@ 1759 train 5.6160 , allloss: 5.6168, dt: 1207.58ms, fracRes: 0.5547, norm(attn): 0.1504, norm(output): 5.6562, norm(x): 5.7760, norm(y): 0.9918, norm:0.8986, tok/sec: 108541.08, flops:113.92, batch-reuse:1
@ 1760 train 5.5194 , allloss: 5.5208, dt: 1213.57ms, fracRes: 0.5548, norm(attn): 0.1533, norm(output): 5.6562, norm(x): 5.7715, norm(y): 0.9921, norm:0.7612, tok/sec: 108005.47, flops:113.35, batch-reuse:1
@ 1761 train 5.4885 , allloss: 5.4893, dt: 1215.40ms, fracRes: 0.5560, norm(attn): 0.1514, norm(output): 5.6562, norm(x): 5.7572, norm(y): 0.9920, norm:0.7058, tok/sec: 107843.03, flops:113.18, batch-reuse:1
@ 1762 train 5.3628 , allloss: 5.3636, dt: 1200.35ms, fracRes: 0.5568, norm(attn): 0.1484, norm(output): 5.6250, norm(x): 5.7536, norm(y): 0.9920, norm:0.7382, tok/sec: 109194.66, flops:114.60, batch-reuse:1
@ 1763 train 5.4967 , allloss: 5.4972, dt: 1206.30ms, fracRes: 0.5572, norm(attn): 0.1504, norm(output): 5.6250, norm(x): 5.7704, norm(y): 0.9920, norm:0.7933, tok/sec: 108655.92, flops:114.04, batch-reuse:1
@ 1764 train 5.5205 , allloss: 5.5210, dt: 1200.54ms, fracRes: 0.5572, norm(attn): 0.1504, norm(output): 5.6562, norm(x): 5.7880, norm(y): 0.9922, norm:0.8513, tok/sec: 109177.27, flops:114.58, batch-reuse:1
@ 1765 train 5.5099 , allloss: 5.5113, dt: 1211.54ms, fracRes: 0.5567, norm(attn): 0.1504, norm(output): 5.6562, norm(x): 5.8167, norm(y): 0.9921, norm:0.7004, tok/sec: 108186.02, flops:113.54, batch-reuse:1
@ 1766 train 5.4575 , allloss: 5.4581, dt: 1220.30ms, fracRes: 0.5561, norm(attn): 0.1562, norm(output): 5.6562, norm(x): 5.8609, norm(y): 0.9920, norm:0.7066, tok/sec: 107409.57, flops:112.73, batch-reuse:1
@ 1767 train 5.5172 , allloss: 5.5182, dt: 1195.98ms, fracRes: 0.5561, norm(attn): 0.1553, norm(output): 5.6562, norm(x): 5.8478, norm(y): 0.9920, norm:0.8005, tok/sec: 109594.19, flops:115.02, batch-reuse:1
@ 1768 train 5.5802 , allloss: 5.5812, dt: 1217.25ms, fracRes: 0.5567, norm(attn): 0.1465, norm(output): 5.6562, norm(x): 5.8301, norm(y): 0.9917, norm:0.7077, tok/sec: 107678.75, flops:113.01, batch-reuse:1
@ 1769 train 5.4652 , allloss: 5.4680, dt: 1223.02ms, fracRes: 0.5567, norm(attn): 0.1426, norm(output): 5.6562, norm(x): 5.8339, norm(y): 0.9920, norm:0.9971, tok/sec: 107170.41, flops:112.48, batch-reuse:1
@ 1770 train 5.4824 , allloss: 5.4842, dt: 1221.79ms, fracRes: 0.5559, norm(attn): 0.1445, norm(output): 5.6562, norm(x): 5.8614, norm(y): 0.9920, norm:1.1929, tok/sec: 107278.53, flops:112.59, batch-reuse:1
@ 1771 train 5.4601 , allloss: 5.4615, dt: 1223.45ms, fracRes: 0.5534, norm(attn): 0.1553, norm(output): 5.7188, norm(x): 5.8993, norm(y): 0.9919, norm:0.8375, tok/sec: 107132.76, flops:112.44, batch-reuse:1
@ 1772 train 5.4809 , allloss: 5.4820, dt: 1248.51ms, fracRes: 0.5529, norm(attn): 0.1553, norm(output): 5.6875, norm(x): 5.9226, norm(y): 0.9920, norm:0.6486, tok/sec: 104982.55, flops:110.18, batch-reuse:1
@ 1773 train 5.3832 , allloss: 5.3850, dt: 1242.19ms, fracRes: 0.5537, norm(attn): 0.1475, norm(output): 5.7188, norm(x): 5.8873, norm(y): 0.9919, norm:0.6641, tok/sec: 105517.12, flops:110.74, batch-reuse:1
@ 1774 train 5.5207 , allloss: 5.5227, dt: 1195.89ms, fracRes: 0.5545, norm(attn): 0.1465, norm(output): 5.6875, norm(x): 5.8836, norm(y): 0.9918, norm:0.7287, tok/sec: 109601.80, flops:115.03, batch-reuse:1
@ 1775 train 5.4749 , allloss: 5.4755, dt: 1217.19ms, fracRes: 0.5543, norm(attn): 0.1504, norm(output): 5.7188, norm(x): 5.8900, norm(y): 0.9917, norm:0.5782, tok/sec: 107684.26, flops:113.02, batch-reuse:1
@ 1776 train 5.4276 , allloss: 5.4287, dt: 1193.99ms, fracRes: 0.5539, norm(attn): 0.1562, norm(output): 5.6875, norm(x): 5.9115, norm(y): 0.9917, norm:0.6293, tok/sec: 109776.64, flops:115.21, batch-reuse:1
@ 1777 train 5.4094 , allloss: 5.4105, dt: 1204.51ms, fracRes: 0.5539, norm(attn): 0.1572, norm(output): 5.8125, norm(x): 5.9382, norm(y): 0.9919, norm:0.7182, tok/sec: 108818.06, flops:114.21, batch-reuse:1
@ 1778 train 5.7526 , allloss: 5.7536, dt: 1212.36ms, fracRes: 0.5557, norm(attn): 0.1504, norm(output): 5.7188, norm(x): 5.9157, norm(y): 0.9913, norm:1.2174, tok/sec: 108112.96, flops:113.47, batch-reuse:1
@ 1779 train 5.4378 , allloss: 5.4388, dt: 1215.12ms, fracRes: 0.5564, norm(attn): 0.1475, norm(output): 5.8125, norm(x): 5.9164, norm(y): 0.9920, norm:1.0534, tok/sec: 107867.47, flops:113.21, batch-reuse:1
@ 1780 train 5.4897 , allloss: 5.4909, dt: 1191.71ms, fracRes: 0.5577, norm(attn): 0.1514, norm(output): 5.7500, norm(x): 5.9255, norm(y): 0.9919, norm:1.0102, tok/sec: 109986.53, flops:115.43, batch-reuse:1
@ 1781 train 5.5110 , allloss: 5.5127, dt: 1208.71ms, fracRes: 0.5576, norm(attn): 0.1562, norm(output): 5.6562, norm(x): 5.9250, norm(y): 0.9918, norm:0.7908, tok/sec: 108439.90, flops:113.81, batch-reuse:1
@ 1782 train 5.5166 , allloss: 5.5203, dt: 1218.01ms, fracRes: 0.5566, norm(attn): 0.1582, norm(output): 5.7500, norm(x): 5.9418, norm(y): 0.9917, norm:0.6326, tok/sec: 107611.35, flops:112.94, batch-reuse:1
@ 1783 train 5.4638 , allloss: 5.4669, dt: 1220.70ms, fracRes: 0.5570, norm(attn): 0.1523, norm(output): 5.6875, norm(x): 5.9501, norm(y): 0.9916, norm:0.7315, tok/sec: 107374.79, flops:112.69, batch-reuse:1
@ 1784 train 5.4379 , allloss: 5.4390, dt: 1230.41ms, fracRes: 0.5564, norm(attn): 0.1475, norm(output): 5.7188, norm(x): 5.9726, norm(y): 0.9915, norm:0.6169, tok/sec: 106526.88, flops:111.80, batch-reuse:1
@ 1785 train 5.4740 , allloss: 5.4770, dt: 1210.50ms, fracRes: 0.5558, norm(attn): 0.1523, norm(output): 5.6875, norm(x): 5.9942, norm(y): 0.9915, norm:0.6238, tok/sec: 108279.46, flops:113.64, batch-reuse:1
@ 1786 train 5.5264 , allloss: 5.5272, dt: 1228.59ms, fracRes: 0.5548, norm(attn): 0.1553, norm(output): 5.6875, norm(x): 5.9978, norm(y): 0.9914, norm:0.9145, tok/sec: 106685.02, flops:111.97, batch-reuse:1
@ 1787 train 5.4903 , allloss: 5.5087, dt: 1211.66ms, fracRes: 0.5558, norm(attn): 0.1602, norm(output): 5.6875, norm(x): 5.9945, norm(y): 0.9914, norm:1.0694, tok/sec: 108175.16, flops:113.53, batch-reuse:1
@ 1788 train 5.4991 , allloss: 5.5002, dt: 1215.15ms, fracRes: 0.5553, norm(attn): 0.1572, norm(output): 5.6562, norm(x): 5.9840, norm(y): 0.9914, norm:0.8489, tok/sec: 107864.71, flops:113.21, batch-reuse:1
@ 1789 train 5.5009 , allloss: 5.5066, dt: 1216.43ms, fracRes: 0.5555, norm(attn): 0.1543, norm(output): 5.7188, norm(x): 5.9937, norm(y): 0.9910, norm:0.7352, tok/sec: 107751.02, flops:113.09, batch-reuse:1
@ 1790 train 5.5817 , allloss: 5.5827, dt: 1228.73ms, fracRes: 0.5562, norm(attn): 0.1504, norm(output): 5.7500, norm(x): 6.0144, norm(y): 0.9910, norm:1.0553, tok/sec: 106672.33, flops:111.95, batch-reuse:1
@ 1791 train 5.5018 , allloss: 5.5035, dt: 1191.77ms, fracRes: 0.5565, norm(attn): 0.1494, norm(output): 5.6875, norm(x): 6.0349, norm(y): 0.9914, norm:0.8779, tok/sec: 109981.25, flops:115.43, batch-reuse:1
@ 1792 train 5.5756 , allloss: 5.5774, dt: 1205.37ms, fracRes: 0.5567, norm(attn): 0.1543, norm(output): 5.6562, norm(x): 6.0427, norm(y): 0.9914, norm:0.9779, tok/sec: 108740.32, flops:114.12, batch-reuse:1
@ 1793 train 5.5255 , allloss: 5.5304, dt: 1199.23ms, fracRes: 0.5560, norm(attn): 0.1582, norm(output): 5.6875, norm(x): 6.0447, norm(y): 0.9913, norm:0.8875, tok/sec: 109296.37, flops:114.71, batch-reuse:1
@ 1794 train 5.5337 , allloss: 5.5477, dt: 1207.88ms, fracRes: 0.5556, norm(attn): 0.1611, norm(output): 5.6562, norm(x): 6.0703, norm(y): 0.9910, norm:0.9793, tok/sec: 108514.54, flops:113.89, batch-reuse:1
@ 1795 train 5.5169 , allloss: 5.5203, dt: 1198.87ms, fracRes: 0.5558, norm(attn): 0.1582, norm(output): 5.6875, norm(x): 6.0467, norm(y): 0.9912, norm:0.7046, tok/sec: 109330.06, flops:114.74, batch-reuse:1
@ 1796 train 5.4169 , allloss: 5.4196, dt: 1217.13ms, fracRes: 0.5569, norm(attn): 0.1514, norm(output): 5.6562, norm(x): 6.0590, norm(y): 0.9915, norm:0.6868, tok/sec: 107689.47, flops:113.02, batch-reuse:1
@ 1797 train 5.4763 , allloss: 5.4778, dt: 1204.78ms, fracRes: 0.5577, norm(attn): 0.1484, norm(output): 5.6562, norm(x): 6.0640, norm(y): 0.9915, norm:0.6407, tok/sec: 108792.93, flops:114.18, batch-reuse:1
@ 1798 train 5.4561 , allloss: 5.4584, dt: 1222.28ms, fracRes: 0.5584, norm(attn): 0.1514, norm(output): 5.6250, norm(x): 6.0373, norm(y): 0.9915, norm:0.7239, tok/sec: 107235.59, flops:112.55, batch-reuse:1
@ 1799 train 5.5107 , allloss: 5.5131, dt: 1211.55ms, fracRes: 0.5589, norm(attn): 0.1553, norm(output): 5.6562, norm(x): 6.0359, norm(y): 0.9913, norm:0.6752, tok/sec: 108185.51, flops:113.54, batch-reuse:1
@ 1800 train 5.4416 , allloss: 5.4434, dt: 1187.21ms, fracRes: 0.5591, norm(attn): 0.1553, norm(output): 5.5938, norm(x): 6.0247, norm(y): 0.9914, norm:0.7899, tok/sec: 110403.60, flops:115.87, batch-reuse:1
@ 1801 train 5.4406 , allloss: 5.4454, dt: 1211.15ms, fracRes: 0.5589, norm(attn): 0.1562, norm(output): 5.6250, norm(x): 6.0415, norm(y): 0.9914, norm:0.9822, tok/sec: 108220.95, flops:113.58, batch-reuse:1
@ 1802 train 5.5371 , allloss: 5.5435, dt: 1211.13ms, fracRes: 0.5589, norm(attn): 0.1504, norm(output): 5.5938, norm(x): 6.0088, norm(y): 0.9913, norm:0.9962, tok/sec: 108222.65, flops:113.58, batch-reuse:1
@ 1803 train 5.5123 , allloss: 5.5133, dt: 1189.08ms, fracRes: 0.5593, norm(attn): 0.1533, norm(output): 5.5625, norm(x): 6.0268, norm(y): 0.9913, norm:1.2399, tok/sec: 110230.04, flops:115.69, batch-reuse:1
@ 1804 train 5.4348 , allloss: 5.4357, dt: 1198.76ms, fracRes: 0.5596, norm(attn): 0.1504, norm(output): 5.5312, norm(x): 6.0017, norm(y): 0.9911, norm:1.1181, tok/sec: 109339.28, flops:114.75, batch-reuse:1
@ 1805 train 5.5467 , allloss: 5.5490, dt: 1218.07ms, fracRes: 0.5593, norm(attn): 0.1523, norm(output): 5.5625, norm(x): 6.0599, norm(y): 0.9912, norm:1.1328, tok/sec: 107606.67, flops:112.94, batch-reuse:1
@ 1806 train 5.5000 , allloss: 5.5014, dt: 1211.47ms, fracRes: 0.5600, norm(attn): 0.1523, norm(output): 5.5625, norm(x): 6.0305, norm(y): 0.9914, norm:1.2442, tok/sec: 108192.43, flops:113.55, batch-reuse:1
@ 1807 train 5.5468 , allloss: 5.5488, dt: 1222.21ms, fracRes: 0.5606, norm(attn): 0.1553, norm(output): 5.5312, norm(x): 6.0292, norm(y): 0.9915, norm:0.9417, tok/sec: 107241.64, flops:112.55, batch-reuse:1
@ 1808 train 5.4226 , allloss: 5.4236, dt: 1216.62ms, fracRes: 0.5604, norm(attn): 0.1621, norm(output): 5.5625, norm(x): 6.1087, norm(y): 0.9915, norm:0.7296, tok/sec: 107734.69, flops:113.07, batch-reuse:1
@ 1809 train 5.3959 , allloss: 5.3969, dt: 1243.19ms, fracRes: 0.5601, norm(attn): 0.1582, norm(output): 5.5312, norm(x): 6.0746, norm(y): 0.9913, norm:0.8379, tok/sec: 105432.35, flops:110.65, batch-reuse:1
@ 1810 train 5.3669 , allloss: 5.3679, dt: 1221.89ms, fracRes: 0.5602, norm(attn): 0.1533, norm(output): 5.5625, norm(x): 6.1020, norm(y): 0.9913, norm:0.9488, tok/sec: 107270.16, flops:112.58, batch-reuse:1
@ 1811 train 5.4233 , allloss: 5.4238, dt: 1240.66ms, fracRes: 0.5601, norm(attn): 0.1504, norm(output): 5.6250, norm(x): 6.1159, norm(y): 0.9915, norm:1.1235, tok/sec: 105647.28, flops:110.88, batch-reuse:1
@ 1812 train 5.4520 , allloss: 5.4523, dt: 1219.49ms, fracRes: 0.5607, norm(attn): 0.1504, norm(output): 5.5312, norm(x): 6.0836, norm(y): 0.9913, norm:1.0245, tok/sec: 107480.93, flops:112.80, batch-reuse:1
@ 1813 train 5.4109 , allloss: 5.4115, dt: 1222.45ms, fracRes: 0.5599, norm(attn): 0.1562, norm(output): 5.5938, norm(x): 6.1420, norm(y): 0.9912, norm:0.9822, tok/sec: 107220.49, flops:112.53, batch-reuse:1
@ 1814 train 5.4678 , allloss: 5.4690, dt: 1207.97ms, fracRes: 0.5593, norm(attn): 0.1631, norm(output): 5.5938, norm(x): 6.1671, norm(y): 0.9910, norm:0.7704, tok/sec: 108506.14, flops:113.88, batch-reuse:1
@ 1815 train 5.3842 , allloss: 5.3869, dt: 1196.55ms, fracRes: 0.5605, norm(attn): 0.1572, norm(output): 5.5625, norm(x): 6.1626, norm(y): 0.9910, norm:0.7877, tok/sec: 109541.28, flops:114.97, batch-reuse:1
@ 1816 train 5.4174 , allloss: 5.4192, dt: 1221.27ms, fracRes: 0.5616, norm(attn): 0.1533, norm(output): 5.5312, norm(x): 6.1336, norm(y): 0.9909, norm:0.9103, tok/sec: 107324.27, flops:112.64, batch-reuse:1
@ 1817 train 5.4366 , allloss: 5.4375, dt: 1213.56ms, fracRes: 0.5616, norm(attn): 0.1484, norm(output): 5.5938, norm(x): 6.1767, norm(y): 0.9910, norm:0.9653, tok/sec: 108006.38, flops:113.35, batch-reuse:1
@ 1818 train 5.3781 , allloss: 5.3787, dt: 1202.59ms, fracRes: 0.5615, norm(attn): 0.1465, norm(output): 5.5938, norm(x): 6.1875, norm(y): 0.9911, norm:0.7000, tok/sec: 108991.28, flops:114.39, batch-reuse:1
@ 1819 train 5.4932 , allloss: 5.4940, dt: 1215.98ms, fracRes: 0.5614, norm(attn): 0.1484, norm(output): 5.5938, norm(x): 6.1796, norm(y): 0.9909, norm:0.8517, tok/sec: 107791.45, flops:113.13, batch-reuse:1
@ 1820 train 5.4192 , allloss: 5.4197, dt: 1228.25ms, fracRes: 0.5614, norm(attn): 0.1523, norm(output): 5.5625, norm(x): 6.1793, norm(y): 0.9910, norm:1.0414, tok/sec: 106714.30, flops:112.00, batch-reuse:1
@ 1821 train 5.3287 , allloss: 5.3292, dt: 1231.90ms, fracRes: 0.5613, norm(attn): 0.1553, norm(output): 5.5312, norm(x): 6.1919, norm(y): 0.9911, norm:0.7200, tok/sec: 106398.00, flops:111.67, batch-reuse:1
@ 1822 train 5.3000 , allloss: 5.3009, dt: 1243.76ms, fracRes: 0.5612, norm(attn): 0.1562, norm(output): 5.5938, norm(x): 6.1861, norm(y): 0.9910, norm:0.7145, tok/sec: 105383.40, flops:110.60, batch-reuse:1
@ 1823 train 5.3361 , allloss: 5.3365, dt: 1247.04ms, fracRes: 0.5606, norm(attn): 0.1543, norm(output): 5.6250, norm(x): 6.2079, norm(y): 0.9911, norm:0.8635, tok/sec: 105106.55, flops:110.31, batch-reuse:1
@ 1824 train 5.3910 , allloss: 5.3916, dt: 1247.10ms, fracRes: 0.5599, norm(attn): 0.1562, norm(output): 5.5625, norm(x): 6.2235, norm(y): 0.9910, norm:1.0609, tok/sec: 105101.71, flops:110.31, batch-reuse:1
@ 1825 train 5.4456 , allloss: 5.4463, dt: 1249.84ms, fracRes: 0.5596, norm(attn): 0.1602, norm(output): 5.5938, norm(x): 6.2421, norm(y): 0.9909, norm:1.0049, tok/sec: 104871.08, flops:110.06, batch-reuse:1
@ 1826 train 5.4264 , allloss: 5.4272, dt: 1238.15ms, fracRes: 0.5595, norm(attn): 0.1582, norm(output): 5.5938, norm(x): 6.2435, norm(y): 0.9909, norm:0.9490, tok/sec: 105860.97, flops:111.10, batch-reuse:1
@ 1827 train 5.4594 , allloss: 5.4600, dt: 1213.53ms, fracRes: 0.5598, norm(attn): 0.1543, norm(output): 5.6250, norm(x): 6.2362, norm(y): 0.9906, norm:0.8769, tok/sec: 108009.18, flops:113.36, batch-reuse:1
@ 1828 train 5.4110 , allloss: 5.4113, dt: 1185.41ms, fracRes: 0.5598, norm(attn): 0.1494, norm(output): 5.5625, norm(x): 6.2258, norm(y): 0.9908, norm:0.7859, tok/sec: 110570.96, flops:116.05, batch-reuse:1
@ 1829 train 5.4760 , allloss: 5.4766, dt: 1221.60ms, fracRes: 0.5602, norm(attn): 0.1514, norm(output): 5.5938, norm(x): 6.2424, norm(y): 0.9908, norm:1.0618, tok/sec: 107294.97, flops:112.61, batch-reuse:1
@ 1830 train 5.3039 , allloss: 5.3044, dt: 1242.49ms, fracRes: 0.5598, norm(attn): 0.1572, norm(output): 5.5625, norm(x): 6.2185, norm(y): 0.9908, norm:1.0680, tok/sec: 105491.17, flops:110.71, batch-reuse:1
@ 1831 train 5.3932 , allloss: 5.3943, dt: 1220.27ms, fracRes: 0.5591, norm(attn): 0.1621, norm(output): 5.5938, norm(x): 6.2704, norm(y): 0.9908, norm:0.8538, tok/sec: 107412.55, flops:112.73, batch-reuse:1
@ 1832 train 5.4007 , allloss: 5.4020, dt: 1233.43ms, fracRes: 0.5592, norm(attn): 0.1631, norm(output): 5.6250, norm(x): 6.2841, norm(y): 0.9907, norm:0.8194, tok/sec: 106266.58, flops:111.53, batch-reuse:1
@ 1833 train 5.4875 , allloss: 5.4883, dt: 1229.64ms, fracRes: 0.5593, norm(attn): 0.1582, norm(output): 5.5938, norm(x): 6.2781, norm(y): 0.9906, norm:0.8559, tok/sec: 106593.96, flops:111.87, batch-reuse:1
@ 1834 train 5.4034 , allloss: 5.4047, dt: 1228.67ms, fracRes: 0.5587, norm(attn): 0.1572, norm(output): 5.6562, norm(x): 6.2872, norm(y): 0.9905, norm:0.9789, tok/sec: 106677.55, flops:111.96, batch-reuse:1
@ 1835 train 5.3193 , allloss: 5.3255, dt: 1209.23ms, fracRes: 0.5579, norm(attn): 0.1553, norm(output): 5.6250, norm(x): 6.3154, norm(y): 0.9906, norm:1.1487, tok/sec: 108392.86, flops:113.76, batch-reuse:1
@ 1836 train 5.4293 , allloss: 5.4409, dt: 1193.92ms, fracRes: 0.5574, norm(attn): 0.1572, norm(output): 5.6250, norm(x): 6.3632, norm(y): 0.9903, norm:0.9301, tok/sec: 109782.82, flops:115.22, batch-reuse:1
@ 1837 train 5.4968 , allloss: 5.5033, dt: 1188.94ms, fracRes: 0.5569, norm(attn): 0.1582, norm(output): 5.6250, norm(x): 6.3759, norm(y): 0.9905, norm:0.7955, tok/sec: 110243.20, flops:115.70, batch-reuse:1
@ 1838 train 5.4064 , allloss: 5.4079, dt: 1207.94ms, fracRes: 0.5576, norm(attn): 0.1582, norm(output): 5.6250, norm(x): 6.3723, norm(y): 0.9903, norm:0.7209, tok/sec: 108509.03, flops:113.88, batch-reuse:1
@ 1839 train 5.3342 , allloss: 5.3355, dt: 1210.11ms, fracRes: 0.5582, norm(attn): 0.1592, norm(output): 5.6562, norm(x): 6.3917, norm(y): 0.9904, norm:0.7741, tok/sec: 108314.47, flops:113.68, batch-reuse:1
@ 1840 train 5.3605 , allloss: 5.3622, dt: 1205.38ms, fracRes: 0.5587, norm(attn): 0.1602, norm(output): 5.6562, norm(x): 6.4097, norm(y): 0.9906, norm:1.1688, tok/sec: 108738.88, flops:114.12, batch-reuse:1
@ 1841 train 5.4569 , allloss: 5.4585, dt: 1193.31ms, fracRes: 0.5597, norm(attn): 0.1602, norm(output): 5.6562, norm(x): 6.3879, norm(y): 0.9906, norm:1.2634, tok/sec: 109839.10, flops:115.28, batch-reuse:1
@ 1842 train 5.3627 , allloss: 5.3650, dt: 1192.53ms, fracRes: 0.5601, norm(attn): 0.1592, norm(output): 5.6250, norm(x): 6.3970, norm(y): 0.9906, norm:0.9069, tok/sec: 109911.18, flops:115.35, batch-reuse:1
@ 1843 train 5.3810 , allloss: 5.3827, dt: 1218.79ms, fracRes: 0.5608, norm(attn): 0.1572, norm(output): 5.6250, norm(x): 6.3983, norm(y): 0.9906, norm:0.9979, tok/sec: 107542.87, flops:112.87, batch-reuse:1
@ 1844 train 5.3787 , allloss: 5.3797, dt: 1201.18ms, fracRes: 0.5608, norm(attn): 0.1582, norm(output): 5.5938, norm(x): 6.3838, norm(y): 0.9906, norm:1.0628, tok/sec: 109119.78, flops:114.52, batch-reuse:1
@ 1845 train 5.3579 , allloss: 5.3602, dt: 1197.55ms, fracRes: 0.5606, norm(attn): 0.1621, norm(output): 5.6250, norm(x): 6.4228, norm(y): 0.9907, norm:1.0331, tok/sec: 109449.71, flops:114.87, batch-reuse:1
@ 1846 train 5.4053 , allloss: 5.4068, dt: 1197.48ms, fracRes: 0.5600, norm(attn): 0.1660, norm(output): 5.6562, norm(x): 6.4296, norm(y): 0.9906, norm:0.8290, tok/sec: 109456.31, flops:114.88, batch-reuse:1
@ 1847 train 5.3431 , allloss: 5.3439, dt: 1238.54ms, fracRes: 0.5605, norm(attn): 0.1631, norm(output): 5.6562, norm(x): 6.4298, norm(y): 0.9907, norm:1.0292, tok/sec: 105827.41, flops:111.07, batch-reuse:1
@ 1848 train 5.2213 , allloss: 5.2235, dt: 1220.86ms, fracRes: 0.5607, norm(attn): 0.1592, norm(output): 5.6562, norm(x): 6.4232, norm(y): 0.9907, norm:0.8167, tok/sec: 107360.64, flops:112.68, batch-reuse:1
@ 1849 train 5.4147 , allloss: 5.4153, dt: 1201.44ms, fracRes: 0.5615, norm(attn): 0.1562, norm(output): 5.6250, norm(x): 6.4110, norm(y): 0.9905, norm:1.1655, tok/sec: 109096.13, flops:114.50, batch-reuse:1
@ 1850 train 5.2454 , allloss: 5.2458, dt: 1188.61ms, fracRes: 0.5623, norm(attn): 0.1562, norm(output): 5.6250, norm(x): 6.3871, norm(y): 0.9906, norm:0.6541, tok/sec: 110272.96, flops:115.73, batch-reuse:1
@ 1851 train 5.2694 , allloss: 5.2700, dt: 1216.53ms, fracRes: 0.5625, norm(attn): 0.1562, norm(output): 5.6250, norm(x): 6.4240, norm(y): 0.9906, norm:1.0862, tok/sec: 107742.89, flops:113.08, batch-reuse:1
@ 1852 train 5.3574 , allloss: 5.3580, dt: 1234.16ms, fracRes: 0.5625, norm(attn): 0.1582, norm(output): 5.6562, norm(x): 6.4317, norm(y): 0.9906, norm:0.8736, tok/sec: 106203.41, flops:111.46, batch-reuse:1
@ 1853 train 5.3380 , allloss: 5.3389, dt: 1223.23ms, fracRes: 0.5620, norm(attn): 0.1631, norm(output): 5.6562, norm(x): 6.4535, norm(y): 0.9906, norm:0.6934, tok/sec: 107152.51, flops:112.46, batch-reuse:1
@ 1854 train 5.4292 , allloss: 5.4314, dt: 1220.75ms, fracRes: 0.5618, norm(attn): 0.1631, norm(output): 5.6875, norm(x): 6.4702, norm(y): 0.9906, norm:0.9281, tok/sec: 107370.39, flops:112.69, batch-reuse:1
@ 1855 train 5.5302 , allloss: 5.5320, dt: 1224.92ms, fracRes: 0.5616, norm(attn): 0.1611, norm(output): 5.6562, norm(x): 6.4457, norm(y): 0.9903, norm:0.9378, tok/sec: 107004.89, flops:112.30, batch-reuse:1
@ 1856 train 5.4176 , allloss: 5.4206, dt: 1221.22ms, fracRes: 0.5622, norm(attn): 0.1602, norm(output): 5.6562, norm(x): 6.4348, norm(y): 0.9906, norm:0.9397, tok/sec: 107328.36, flops:112.64, batch-reuse:1
@ 1857 train 5.4323 , allloss: 5.4330, dt: 1215.59ms, fracRes: 0.5620, norm(attn): 0.1592, norm(output): 5.6562, norm(x): 6.4269, norm(y): 0.9904, norm:0.9131, tok/sec: 107826.15, flops:113.17, batch-reuse:1
@ 1858 train 5.5073 , allloss: 5.5080, dt: 1202.92ms, fracRes: 0.5633, norm(attn): 0.1572, norm(output): 5.6875, norm(x): 6.4231, norm(y): 0.9905, norm:1.0857, tok/sec: 108961.08, flops:114.36, batch-reuse:1
@ 1859 train 5.5960 , allloss: 5.5968, dt: 1216.19ms, fracRes: 0.5626, norm(attn): 0.1611, norm(output): 5.6562, norm(x): 6.4539, norm(y): 0.9902, norm:1.6932, tok/sec: 107772.69, flops:113.11, batch-reuse:1
@ 1860 train 5.5724 , allloss: 5.5737, dt: 1216.18ms, fracRes: 0.5619, norm(attn): 0.1621, norm(output): 5.6875, norm(x): 6.4589, norm(y): 0.9900, norm:1.0656, tok/sec: 107773.55, flops:113.11, batch-reuse:1
@ 1861 train 5.4931 , allloss: 5.4945, dt: 1213.46ms, fracRes: 0.5616, norm(attn): 0.1631, norm(output): 5.6562, norm(x): 6.4467, norm(y): 0.9903, norm:1.2070, tok/sec: 108014.97, flops:113.36, batch-reuse:1
@ 1862 train 5.5354 , allloss: 5.5371, dt: 1235.66ms, fracRes: 0.5610, norm(attn): 0.1699, norm(output): 5.6875, norm(x): 6.4467, norm(y): 0.9906, norm:0.9215, tok/sec: 106074.44, flops:111.33, batch-reuse:1
@ 1863 train 5.5427 , allloss: 5.5447, dt: 1201.53ms, fracRes: 0.5607, norm(attn): 0.1660, norm(output): 5.7500, norm(x): 6.4508, norm(y): 0.9905, norm:0.9180, tok/sec: 109087.97, flops:114.49, batch-reuse:1
@ 1864 train 5.5129 , allloss: 5.5151, dt: 1212.31ms, fracRes: 0.5610, norm(attn): 0.1602, norm(output): 5.6875, norm(x): 6.4525, norm(y): 0.9905, norm:1.1476, tok/sec: 108117.66, flops:113.47, batch-reuse:1
@ 1865 train 5.4846 , allloss: 5.5187, dt: 1236.04ms, fracRes: 0.5616, norm(attn): 0.1592, norm(output): 5.6875, norm(x): 6.4634, norm(y): 0.9905, norm:2.8148, tok/sec: 106042.15, flops:111.29, batch-reuse:1
@ 1866 train 5.9054 , allloss: 5.9294, dt: 1211.37ms, fracRes: 0.5621, norm(attn): 0.1582, norm(output): 5.7500, norm(x): 6.4967, norm(y): 0.9900, norm:1.9867, tok/sec: 108201.22, flops:113.56, batch-reuse:1
@ 1867 train 5.5510 , allloss: 5.5533, dt: 1218.69ms, fracRes: 0.5632, norm(attn): 0.1572, norm(output): 5.7500, norm(x): 6.4467, norm(y): 0.9901, norm:1.1708, tok/sec: 107551.26, flops:112.88, batch-reuse:1
@ 1868 train 5.5946 , allloss: 5.5954, dt: 1183.31ms, fracRes: 0.5632, norm(attn): 0.1553, norm(output): 5.7188, norm(x): 6.4830, norm(y): 0.9901, norm:1.0448, tok/sec: 110767.14, flops:116.25, batch-reuse:1
@ 1869 train 5.5255 , allloss: 5.5376, dt: 1201.30ms, fracRes: 0.5623, norm(attn): 0.1562, norm(output): 5.8125, norm(x): 6.4991, norm(y): 0.9900, norm:1.8934, tok/sec: 109108.24, flops:114.51, batch-reuse:1
@ 1870 train 5.5094 , allloss: 5.5188, dt: 1211.74ms, fracRes: 0.5616, norm(attn): 0.1611, norm(output): 5.8125, norm(x): 6.5589, norm(y): 0.9901, norm:0.9671, tok/sec: 108168.80, flops:113.53, batch-reuse:1
@ 1871 train 5.4891 , allloss: 5.4953, dt: 1212.05ms, fracRes: 0.5612, norm(attn): 0.1670, norm(output): 5.7500, norm(x): 6.5791, norm(y): 0.9903, norm:0.8997, tok/sec: 108140.37, flops:113.50, batch-reuse:1
@ 1872 train 5.5939 , allloss: 5.6026, dt: 1197.92ms, fracRes: 0.5614, norm(attn): 0.1699, norm(output): 5.7500, norm(x): 6.5606, norm(y): 0.9901, norm:1.0760, tok/sec: 109416.21, flops:114.83, batch-reuse:1
@ 1873 train 5.6012 , allloss: 5.6029, dt: 1216.11ms, fracRes: 0.5617, norm(attn): 0.1680, norm(output): 5.7812, norm(x): 6.5275, norm(y): 0.9901, norm:1.1056, tok/sec: 107780.02, flops:113.12, batch-reuse:1
@ 1874 train 5.4460 , allloss: 5.4480, dt: 1237.66ms, fracRes: 0.5625, norm(attn): 0.1660, norm(output): 5.7500, norm(x): 6.5512, norm(y): 0.9902, norm:0.8146, tok/sec: 105902.69, flops:111.15, batch-reuse:1
@ 1875 train 5.4655 , allloss: 5.4666, dt: 1191.60ms, fracRes: 0.5631, norm(attn): 0.1611, norm(output): 5.6875, norm(x): 6.5306, norm(y): 0.9902, norm:0.8057, tok/sec: 109996.33, flops:115.44, batch-reuse:1
@ 1876 train 5.5909 , allloss: 5.5962, dt: 1212.43ms, fracRes: 0.5628, norm(attn): 0.1582, norm(output): 5.6875, norm(x): 6.5627, norm(y): 0.9901, norm:0.9377, tok/sec: 108106.46, flops:113.46, batch-reuse:1
@ 1877 train 5.5471 , allloss: 5.5489, dt: 1232.66ms, fracRes: 0.5626, norm(attn): 0.1582, norm(output): 5.7188, norm(x): 6.5662, norm(y): 0.9900, norm:0.6995, tok/sec: 106332.85, flops:111.60, batch-reuse:1
@ 1878 train 5.4929 , allloss: 5.4940, dt: 1234.27ms, fracRes: 0.5626, norm(attn): 0.1611, norm(output): 5.6875, norm(x): 6.5796, norm(y): 0.9902, norm:0.7036, tok/sec: 106193.53, flops:111.45, batch-reuse:1
@ 1879 train 5.5221 , allloss: 5.5247, dt: 1198.86ms, fracRes: 0.5624, norm(attn): 0.1621, norm(output): 5.6875, norm(x): 6.6035, norm(y): 0.9900, norm:0.8181, tok/sec: 109330.41, flops:114.74, batch-reuse:1
@ 1880 train 5.5024 , allloss: 5.5069, dt: 1186.24ms, fracRes: 0.5623, norm(attn): 0.1641, norm(output): 5.7500, norm(x): 6.6185, norm(y): 0.9901, norm:0.6216, tok/sec: 110493.26, flops:115.96, batch-reuse:1
@ 1881 train 5.4422 , allloss: 5.4454, dt: 1205.24ms, fracRes: 0.5624, norm(attn): 0.1641, norm(output): 5.7500, norm(x): 6.6387, norm(y): 0.9902, norm:0.8789, tok/sec: 108752.13, flops:114.14, batch-reuse:1
@ 1882 train 5.5136 , allloss: 5.5257, dt: 1202.51ms, fracRes: 0.5626, norm(attn): 0.1602, norm(output): 5.6875, norm(x): 6.6494, norm(y): 0.9902, norm:0.9760, tok/sec: 108998.26, flops:114.40, batch-reuse:1
@ 1883 train 5.4491 , allloss: 5.4547, dt: 1202.01ms, fracRes: 0.5627, norm(attn): 0.1602, norm(output): 5.7500, norm(x): 6.6624, norm(y): 0.9903, norm:1.0709, tok/sec: 109043.61, flops:114.44, batch-reuse:1
@ 1884 train 5.3981 , allloss: 5.3999, dt: 1191.42ms, fracRes: 0.5631, norm(attn): 0.1602, norm(output): 5.6562, norm(x): 6.6551, norm(y): 0.9902, norm:0.6556, tok/sec: 110012.97, flops:115.46, batch-reuse:1
@ 1885 train 5.4740 , allloss: 5.4822, dt: 1181.48ms, fracRes: 0.5629, norm(attn): 0.1631, norm(output): 5.6562, norm(x): 6.6616, norm(y): 0.9902, norm:1.1090, tok/sec: 110938.85, flops:116.43, batch-reuse:1
@ 1886 train 5.4356 , allloss: 5.4372, dt: 1200.62ms, fracRes: 0.5629, norm(attn): 0.1641, norm(output): 5.7500, norm(x): 6.6806, norm(y): 0.9900, norm:0.6100, tok/sec: 109169.94, flops:114.58, batch-reuse:1
@ 1887 train 5.4012 , allloss: 5.4023, dt: 1195.63ms, fracRes: 0.5628, norm(attn): 0.1621, norm(output): 5.6875, norm(x): 6.6877, norm(y): 0.9901, norm:0.7416, tok/sec: 109626.03, flops:115.05, batch-reuse:1
@ 1888 train 5.5666 , allloss: 5.5680, dt: 1211.66ms, fracRes: 0.5631, norm(attn): 0.1602, norm(output): 5.8125, norm(x): 6.7131, norm(y): 0.9899, norm:0.8976, tok/sec: 108175.85, flops:113.53, batch-reuse:1
@ 1889 train 5.4263 , allloss: 5.4277, dt: 1206.99ms, fracRes: 0.5631, norm(attn): 0.1621, norm(output): 5.6875, norm(x): 6.7144, norm(y): 0.9898, norm:1.3719, tok/sec: 108594.34, flops:113.97, batch-reuse:1
@ 1890 train 5.5826 , allloss: 5.5842, dt: 1204.87ms, fracRes: 0.5634, norm(attn): 0.1641, norm(output): 5.7500, norm(x): 6.7159, norm(y): 0.9897, norm:0.7991, tok/sec: 108785.31, flops:114.17, batch-reuse:1
@ 1891 train 5.4966 , allloss: 5.4977, dt: 1210.71ms, fracRes: 0.5637, norm(attn): 0.1631, norm(output): 5.6562, norm(x): 6.6664, norm(y): 0.9899, norm:0.8018, tok/sec: 108260.84, flops:113.62, batch-reuse:1
@ 1892 train 5.4362 , allloss: 5.4370, dt: 1211.57ms, fracRes: 0.5641, norm(attn): 0.1631, norm(output): 5.7188, norm(x): 6.6772, norm(y): 0.9899, norm:1.2395, tok/sec: 108183.25, flops:113.54, batch-reuse:1
@ 1893 train 5.5238 , allloss: 5.5243, dt: 1211.50ms, fracRes: 0.5641, norm(attn): 0.1592, norm(output): 5.6875, norm(x): 6.6891, norm(y): 0.9900, norm:1.0755, tok/sec: 108189.45, flops:113.55, batch-reuse:1
@ 1894 train 5.4306 , allloss: 5.4314, dt: 1218.73ms, fracRes: 0.5638, norm(attn): 0.1660, norm(output): 5.7188, norm(x): 6.7027, norm(y): 0.9900, norm:1.0600, tok/sec: 107547.94, flops:112.87, batch-reuse:1
@ 1895 train 5.5799 , allloss: 5.8797, dt: 1211.88ms, fracRes: 0.5640, norm(attn): 0.1719, norm(output): 5.7500, norm(x): 6.7039, norm(y): 0.9898, norm:0.8908, tok/sec: 108155.76, flops:113.51, batch-reuse:1
@ 1896 train 5.5846 , allloss: 5.5854, dt: 1220.75ms, fracRes: 0.5635, norm(attn): 0.1709, norm(output): 5.7500, norm(x): 6.7090, norm(y): 0.9898, norm:0.9985, tok/sec: 107370.09, flops:112.69, batch-reuse:1
@ 1897 train 5.5370 , allloss: 5.5692, dt: 1246.17ms, fracRes: 0.5627, norm(attn): 0.1699, norm(output): 5.7500, norm(x): 6.7373, norm(y): 0.9899, norm:0.8725, tok/sec: 105180.19, flops:110.39, batch-reuse:1
@ 1898 train 5.5259 , allloss: 5.5289, dt: 1239.16ms, fracRes: 0.5627, norm(attn): 0.1621, norm(output): 5.7188, norm(x): 6.7367, norm(y): 0.9900, norm:0.9589, tok/sec: 105774.94, flops:111.01, batch-reuse:1
@ 1899 train 5.5162 , allloss: 5.5407, dt: 1199.17ms, fracRes: 0.5632, norm(attn): 0.1602, norm(output): 5.7188, norm(x): 6.7332, norm(y): 0.9899, norm:1.3651, tok/sec: 109302.45, flops:114.71, batch-reuse:1
@ 1900 train 5.4645 , allloss: 5.4694, dt: 1242.22ms, fracRes: 0.5636, norm(attn): 0.1641, norm(output): 5.7188, norm(x): 6.7169, norm(y): 0.9899, norm:0.9595, tok/sec: 105514.06, flops:110.74, batch-reuse:1
@ 1901 train 5.5332 , allloss: 5.5444, dt: 1230.29ms, fracRes: 0.5640, norm(attn): 0.1660, norm(output): 5.6562, norm(x): 6.7230, norm(y): 0.9898, norm:0.9576, tok/sec: 106537.74, flops:111.81, batch-reuse:1
@ 1902 train 5.4881 , allloss: 5.4907, dt: 1220.93ms, fracRes: 0.5643, norm(attn): 0.1709, norm(output): 5.6875, norm(x): 6.7240, norm(y): 0.9899, norm:0.6838, tok/sec: 107354.10, flops:112.67, batch-reuse:1
@ 1903 train 5.4967 , allloss: 5.4992, dt: 1240.95ms, fracRes: 0.5641, norm(attn): 0.1699, norm(output): 5.7812, norm(x): 6.7359, norm(y): 0.9897, norm:0.8356, tok/sec: 105622.72, flops:110.85, batch-reuse:1
@ 1904 train 5.4576 , allloss: 5.4613, dt: 1238.10ms, fracRes: 0.5642, norm(attn): 0.1670, norm(output): 5.6875, norm(x): 6.7513, norm(y): 0.9898, norm:1.1713, tok/sec: 105865.41, flops:111.11, batch-reuse:1
@ 1905 train 5.3918 , allloss: 5.3925, dt: 1232.00ms, fracRes: 0.5644, norm(attn): 0.1621, norm(output): 5.6562, norm(x): 6.7248, norm(y): 0.9898, norm:0.9159, tok/sec: 106389.99, flops:111.66, batch-reuse:1
@ 1906 train 5.3893 , allloss: 5.3940, dt: 1235.33ms, fracRes: 0.5643, norm(attn): 0.1650, norm(output): 5.6562, norm(x): 6.7103, norm(y): 0.9895, norm:1.0016, tok/sec: 106103.20, flops:111.36, batch-reuse:1
@ 1907 train 5.4290 , allloss: 5.4332, dt: 1235.92ms, fracRes: 0.5644, norm(attn): 0.1660, norm(output): 5.7188, norm(x): 6.7350, norm(y): 0.9894, norm:1.1121, tok/sec: 106052.40, flops:111.30, batch-reuse:1
@ 1908 train 5.4642 , allloss: 5.4645, dt: 1235.20ms, fracRes: 0.5641, norm(attn): 0.1689, norm(output): 5.7812, norm(x): 6.7623, norm(y): 0.9895, norm:1.0558, tok/sec: 106114.06, flops:111.37, batch-reuse:1
@ 1909 train 5.5793 , allloss: 5.5797, dt: 1235.65ms, fracRes: 0.5645, norm(attn): 0.1660, norm(output): 5.7500, norm(x): 6.7257, norm(y): 0.9897, norm:1.1973, tok/sec: 106075.54, flops:111.33, batch-reuse:1
@ 1910 train 5.5276 , allloss: 5.5281, dt: 1235.12ms, fracRes: 0.5644, norm(attn): 0.1670, norm(output): 5.6875, norm(x): 6.7130, norm(y): 0.9897, norm:0.9784, tok/sec: 106120.47, flops:111.38, batch-reuse:1
@ 1911 train 5.4518 , allloss: 5.4519, dt: 1211.57ms, fracRes: 0.5641, norm(attn): 0.1621, norm(output): 5.7500, norm(x): 6.7096, norm(y): 0.9894, norm:0.7557, tok/sec: 108183.76, flops:113.54, batch-reuse:1
@ 1912 train 5.4393 , allloss: 5.4399, dt: 1202.94ms, fracRes: 0.5642, norm(attn): 0.1631, norm(output): 5.7500, norm(x): 6.7252, norm(y): 0.9896, norm:0.7936, tok/sec: 108960.00, flops:114.36, batch-reuse:1
@ 1913 train 5.4676 , allloss: 5.4688, dt: 1216.78ms, fracRes: 0.5646, norm(attn): 0.1621, norm(output): 5.7500, norm(x): 6.7400, norm(y): 0.9898, norm:0.9057, tok/sec: 107720.76, flops:113.05, batch-reuse:1
@ 1914 train 5.4479 , allloss: 5.4486, dt: 1209.86ms, fracRes: 0.5650, norm(attn): 0.1621, norm(output): 5.7500, norm(x): 6.6967, norm(y): 0.9895, norm:0.8928, tok/sec: 108336.26, flops:113.70, batch-reuse:1
@ 1915 train 5.4369 , allloss: 5.4376, dt: 1233.63ms, fracRes: 0.5656, norm(attn): 0.1650, norm(output): 5.6562, norm(x): 6.6828, norm(y): 0.9896, norm:0.9017, tok/sec: 106248.94, flops:111.51, batch-reuse:1
@ 1916 train 5.6274 , allloss: 5.6279, dt: 1230.86ms, fracRes: 0.5654, norm(attn): 0.1680, norm(output): 5.6562, norm(x): 6.6971, norm(y): 0.9895, norm:0.9925, tok/sec: 106488.29, flops:111.76, batch-reuse:1
@ 1917 train 5.4792 , allloss: 5.4798, dt: 1238.27ms, fracRes: 0.5650, norm(attn): 0.1709, norm(output): 5.6562, norm(x): 6.7084, norm(y): 0.9894, norm:0.8926, tok/sec: 105850.68, flops:111.09, batch-reuse:1
@ 1918 train 5.4969 , allloss: 5.4976, dt: 1236.88ms, fracRes: 0.5647, norm(attn): 0.1689, norm(output): 5.6562, norm(x): 6.7138, norm(y): 0.9895, norm:0.8443, tok/sec: 105969.53, flops:111.22, batch-reuse:1
@ 1919 train 5.4638 , allloss: 5.4648, dt: 1237.54ms, fracRes: 0.5648, norm(attn): 0.1689, norm(output): 5.7188, norm(x): 6.7623, norm(y): 0.9895, norm:0.9377, tok/sec: 105913.30, flops:111.16, batch-reuse:1
@ 1920 train 5.4259 , allloss: 5.4295, dt: 1239.90ms, fracRes: 0.5640, norm(attn): 0.1621, norm(output): 5.8125, norm(x): 6.7396, norm(y): 0.9895, norm:0.9254, tok/sec: 105711.52, flops:110.95, batch-reuse:1
@ 1921 train 5.4738 , allloss: 5.4748, dt: 1231.29ms, fracRes: 0.5640, norm(attn): 0.1670, norm(output): 5.8125, norm(x): 6.7348, norm(y): 0.9894, norm:0.6875, tok/sec: 106450.80, flops:111.72, batch-reuse:1
@ 1922 train 5.3964 , allloss: 5.3973, dt: 1216.80ms, fracRes: 0.5642, norm(attn): 0.1699, norm(output): 5.7188, norm(x): 6.7217, norm(y): 0.9895, norm:0.8693, tok/sec: 107718.27, flops:113.05, batch-reuse:1
@ 1923 train 5.4739 , allloss: 5.4744, dt: 1228.65ms, fracRes: 0.5643, norm(attn): 0.1689, norm(output): 5.7188, norm(x): 6.7505, norm(y): 0.9896, norm:0.9183, tok/sec: 106679.76, flops:111.96, batch-reuse:1
@ 1924 train 5.4918 , allloss: 5.4920, dt: 1229.36ms, fracRes: 0.5641, norm(attn): 0.1680, norm(output): 5.7188, norm(x): 6.7649, norm(y): 0.9895, norm:1.1333, tok/sec: 106618.13, flops:111.90, batch-reuse:1
@ 1925 train 5.4700 , allloss: 5.4701, dt: 1228.67ms, fracRes: 0.5642, norm(attn): 0.1650, norm(output): 5.7812, norm(x): 6.7766, norm(y): 0.9894, norm:0.8063, tok/sec: 106678.23, flops:111.96, batch-reuse:1
@ 1926 train 5.4933 , allloss: 5.4935, dt: 1227.31ms, fracRes: 0.5643, norm(attn): 0.1680, norm(output): 5.7500, norm(x): 6.7845, norm(y): 0.9894, norm:0.9369, tok/sec: 106796.46, flops:112.08, batch-reuse:1
@ 1927 train 5.4930 , allloss: 5.4931, dt: 1219.61ms, fracRes: 0.5645, norm(attn): 0.1689, norm(output): 5.7188, norm(x): 6.8064, norm(y): 0.9895, norm:0.9670, tok/sec: 107470.82, flops:112.79, batch-reuse:1
@ 1928 train 5.4033 , allloss: 5.4035, dt: 1226.91ms, fracRes: 0.5647, norm(attn): 0.1709, norm(output): 5.6875, norm(x): 6.7846, norm(y): 0.9893, norm:0.8279, tok/sec: 106830.72, flops:112.12, batch-reuse:1
@ 1929 train 5.4346 , allloss: 5.4346, dt: 1208.06ms, fracRes: 0.5650, norm(attn): 0.1709, norm(output): 5.7188, norm(x): 6.8060, norm(y): 0.9893, norm:0.8173, tok/sec: 108497.79, flops:113.87, batch-reuse:1
@ 1930 train 5.3682 , allloss: 5.3683, dt: 1229.11ms, fracRes: 0.5656, norm(attn): 0.1650, norm(output): 5.7500, norm(x): 6.8306, norm(y): 0.9893, norm:0.8083, tok/sec: 106639.78, flops:111.92, batch-reuse:1
@ 1931 train 5.5508 , allloss: 5.5509, dt: 1221.92ms, fracRes: 0.5662, norm(attn): 0.1611, norm(output): 5.8125, norm(x): 6.8235, norm(y): 0.9893, norm:1.4404, tok/sec: 107267.44, flops:112.58, batch-reuse:1
@ 1932 train 5.5070 , allloss: 5.5071, dt: 1220.10ms, fracRes: 0.5662, norm(attn): 0.1641, norm(output): 5.6875, norm(x): 6.8157, norm(y): 0.9894, norm:1.1415, tok/sec: 107427.50, flops:112.75, batch-reuse:1
@ 1933 train 5.5192 , allloss: 5.5407, dt: 1228.79ms, fracRes: 0.5659, norm(attn): 0.1670, norm(output): 5.8125, norm(x): 6.8469, norm(y): 0.9893, norm:1.1366, tok/sec: 106667.88, flops:111.95, batch-reuse:1
@ 1934 train 5.5475 , allloss: 5.5478, dt: 1222.10ms, fracRes: 0.5662, norm(attn): 0.1709, norm(output): 5.7812, norm(x): 6.8382, norm(y): 0.9892, norm:0.9270, tok/sec: 107251.62, flops:112.56, batch-reuse:1
@ 1935 train 5.4023 , allloss: 5.4129, dt: 1213.99ms, fracRes: 0.5662, norm(attn): 0.1719, norm(output): 5.7500, norm(x): 6.8079, norm(y): 0.9893, norm:1.1192, tok/sec: 107967.77, flops:113.31, batch-reuse:1
@ 1936 train 5.4175 , allloss: 5.4177, dt: 1219.17ms, fracRes: 0.5664, norm(attn): 0.1699, norm(output): 5.7188, norm(x): 6.7862, norm(y): 0.9894, norm:0.7264, tok/sec: 107509.43, flops:112.83, batch-reuse:1
@ 1937 train 5.3886 , allloss: 5.3898, dt: 1234.32ms, fracRes: 0.5659, norm(attn): 0.1680, norm(output): 5.6875, norm(x): 6.7843, norm(y): 0.9894, norm:0.8992, tok/sec: 106189.61, flops:111.45, batch-reuse:1
@ 1938 train 5.4465 , allloss: 5.4481, dt: 1237.90ms, fracRes: 0.5660, norm(attn): 0.1670, norm(output): 5.6875, norm(x): 6.7934, norm(y): 0.9893, norm:0.9483, tok/sec: 105882.50, flops:111.13, batch-reuse:1
@ 1939 train 5.4371 , allloss: 5.4377, dt: 1235.68ms, fracRes: 0.5663, norm(attn): 0.1670, norm(output): 5.7500, norm(x): 6.8044, norm(y): 0.9894, norm:1.0392, tok/sec: 106072.94, flops:111.33, batch-reuse:1
@ 1940 train 5.5939 , allloss: 5.5951, dt: 1184.79ms, fracRes: 0.5660, norm(attn): 0.1670, norm(output): 5.6875, norm(x): 6.8114, norm(y): 0.9892, norm:0.9244, tok/sec: 110629.08, flops:116.11, batch-reuse:1
@ 1941 train 5.4783 , allloss: 5.4806, dt: 1196.17ms, fracRes: 0.5657, norm(attn): 0.1709, norm(output): 5.6875, norm(x): 6.8282, norm(y): 0.9893, norm:0.9151, tok/sec: 109576.70, flops:115.00, batch-reuse:1
@ 1942 train 5.3826 , allloss: 5.3838, dt: 1191.29ms, fracRes: 0.5664, norm(attn): 0.1689, norm(output): 5.7188, norm(x): 6.8422, norm(y): 0.9894, norm:0.8185, tok/sec: 110024.92, flops:115.47, batch-reuse:1
@ 1943 train 5.4017 , allloss: 5.4017, dt: 1202.17ms, fracRes: 0.5665, norm(attn): 0.1660, norm(output): 5.6875, norm(x): 6.8319, norm(y): 0.9894, norm:0.8065, tok/sec: 109029.10, flops:114.43, batch-reuse:1
@ 1944 train 5.4132 , allloss: 5.4133, dt: 1217.68ms, fracRes: 0.5667, norm(attn): 0.1670, norm(output): 5.7500, norm(x): 6.8501, norm(y): 0.9894, norm:0.9439, tok/sec: 107640.93, flops:112.97, batch-reuse:1
@ 1945 train 5.3525 , allloss: 5.3530, dt: 1224.44ms, fracRes: 0.5668, norm(attn): 0.1709, norm(output): 5.8125, norm(x): 6.8663, norm(y): 0.9894, norm:1.0917, tok/sec: 107046.79, flops:112.35, batch-reuse:1
@ 1946 train 5.3890 , allloss: 5.3907, dt: 1241.07ms, fracRes: 0.5666, norm(attn): 0.1709, norm(output): 5.8125, norm(x): 6.8846, norm(y): 0.9893, norm:1.1342, tok/sec: 105612.52, flops:110.84, batch-reuse:1
@ 1947 train 5.4975 , allloss: 5.4976, dt: 1239.88ms, fracRes: 0.5667, norm(attn): 0.1670, norm(output): 5.7500, norm(x): 6.8817, norm(y): 0.9893, norm:0.7344, tok/sec: 105713.27, flops:110.95, batch-reuse:1
@ 1948 train 5.3636 , allloss: 5.3638, dt: 1239.25ms, fracRes: 0.5665, norm(attn): 0.1670, norm(output): 5.6875, norm(x): 6.8465, norm(y): 0.9892, norm:0.7917, tok/sec: 105767.14, flops:111.00, batch-reuse:1
@ 1949 train 5.4135 , allloss: 5.4136, dt: 1240.54ms, fracRes: 0.5662, norm(attn): 0.1621, norm(output): 5.6875, norm(x): 6.8453, norm(y): 0.9891, norm:0.8941, tok/sec: 105657.33, flops:110.89, batch-reuse:1
@ 1950 train 5.5255 , allloss: 5.5257, dt: 1204.01ms, fracRes: 0.5665, norm(attn): 0.1650, norm(output): 5.7188, norm(x): 6.8722, norm(y): 0.9891, norm:0.8619, tok/sec: 108862.69, flops:114.25, batch-reuse:1
@ 1951 train 5.4141 , allloss: 5.4142, dt: 1210.16ms, fracRes: 0.5667, norm(attn): 0.1719, norm(output): 5.7500, norm(x): 6.8943, norm(y): 0.9893, norm:0.9511, tok/sec: 108309.24, flops:113.67, batch-reuse:1
@ 1952 train 5.3715 , allloss: 5.3717, dt: 1228.08ms, fracRes: 0.5669, norm(attn): 0.1689, norm(output): 5.7500, norm(x): 6.8665, norm(y): 0.9892, norm:0.7846, tok/sec: 106728.93, flops:112.01, batch-reuse:1
@ 1953 train 5.3898 , allloss: 5.3900, dt: 1227.78ms, fracRes: 0.5668, norm(attn): 0.1641, norm(output): 5.7188, norm(x): 6.8598, norm(y): 0.9892, norm:0.8657, tok/sec: 106755.52, flops:112.04, batch-reuse:1
@ 1954 train 5.3613 , allloss: 5.3614, dt: 1191.53ms, fracRes: 0.5676, norm(attn): 0.1650, norm(output): 5.7188, norm(x): 6.8733, norm(y): 0.9893, norm:0.8404, tok/sec: 110003.39, flops:115.45, batch-reuse:1
@ 1955 train 5.3744 , allloss: 5.3744, dt: 1183.99ms, fracRes: 0.5671, norm(attn): 0.1699, norm(output): 5.7812, norm(x): 6.8960, norm(y): 0.9892, norm:0.8560, tok/sec: 110704.06, flops:116.19, batch-reuse:1
@ 1956 train 5.2473 , allloss: 5.2474, dt: 1209.13ms, fracRes: 0.5673, norm(attn): 0.1709, norm(output): 5.7500, norm(x): 6.8930, norm(y): 0.9894, norm:0.8209, tok/sec: 108401.95, flops:113.77, batch-reuse:1
@ 1957 train 5.3741 , allloss: 5.3746, dt: 1182.49ms, fracRes: 0.5679, norm(attn): 0.1680, norm(output): 5.7500, norm(x): 6.8754, norm(y): 0.9893, norm:1.0875, tok/sec: 110843.61, flops:116.33, batch-reuse:1
@ 1958 train 5.3597 , allloss: 5.3598, dt: 1210.66ms, fracRes: 0.5681, norm(attn): 0.1670, norm(output): 5.7188, norm(x): 6.8991, norm(y): 0.9895, norm:0.8944, tok/sec: 108265.13, flops:113.63, batch-reuse:1
@ 1959 train 5.3211 , allloss: 5.3211, dt: 1213.65ms, fracRes: 0.5685, norm(attn): 0.1689, norm(output): 5.7188, norm(x): 6.9016, norm(y): 0.9895, norm:1.0379, tok/sec: 107997.79, flops:113.35, batch-reuse:1
@ 1960 train 5.2805 , allloss: 5.2809, dt: 1175.98ms, fracRes: 0.5681, norm(attn): 0.1709, norm(output): 5.8125, norm(x): 6.9167, norm(y): 0.9895, norm:0.8159, tok/sec: 111458.03, flops:116.98, batch-reuse:1
@ 1961 train 5.4055 , allloss: 5.4059, dt: 1210.28ms, fracRes: 0.5682, norm(attn): 0.1699, norm(output): 5.8125, norm(x): 6.9027, norm(y): 0.9894, norm:0.8371, tok/sec: 108299.34, flops:113.66, batch-reuse:1
@ 1962 train 5.3080 , allloss: 5.3081, dt: 1234.23ms, fracRes: 0.5683, norm(attn): 0.1670, norm(output): 5.6562, norm(x): 6.8672, norm(y): 0.9894, norm:0.8596, tok/sec: 106197.05, flops:111.46, batch-reuse:1
@ 1963 train 5.4578 , allloss: 5.4579, dt: 1238.76ms, fracRes: 0.5677, norm(attn): 0.1621, norm(output): 5.7500, norm(x): 6.8929, norm(y): 0.9892, norm:0.9140, tok/sec: 105808.93, flops:111.05, batch-reuse:1
@ 1964 train 5.3948 , allloss: 5.3951, dt: 1232.97ms, fracRes: 0.5676, norm(attn): 0.1621, norm(output): 5.7812, norm(x): 6.9167, norm(y): 0.9893, norm:1.1571, tok/sec: 106306.20, flops:111.57, batch-reuse:1
@ 1965 train 5.3586 , allloss: 5.3588, dt: 1242.32ms, fracRes: 0.5677, norm(attn): 0.1670, norm(output): 5.6562, norm(x): 6.8863, norm(y): 0.9892, norm:1.0527, tok/sec: 105506.17, flops:110.73, batch-reuse:1
@ 1966 train 5.3658 , allloss: 5.3659, dt: 1213.09ms, fracRes: 0.5677, norm(attn): 0.1729, norm(output): 5.6875, norm(x): 6.8932, norm(y): 0.9891, norm:0.9091, tok/sec: 108047.67, flops:113.40, batch-reuse:1
@ 1967 train 5.3165 , allloss: 5.3196, dt: 1223.68ms, fracRes: 0.5683, norm(attn): 0.1729, norm(output): 5.6875, norm(x): 6.8613, norm(y): 0.9892, norm:0.9083, tok/sec: 107113.34, flops:112.42, batch-reuse:1
@ 1968 train 5.3674 , allloss: 5.3675, dt: 1219.54ms, fracRes: 0.5682, norm(attn): 0.1699, norm(output): 5.7500, norm(x): 6.8838, norm(y): 0.9893, norm:1.4605, tok/sec: 107476.79, flops:112.80, batch-reuse:1
@ 1969 train 5.4248 , allloss: 5.4249, dt: 1229.05ms, fracRes: 0.5681, norm(attn): 0.1641, norm(output): 5.7812, norm(x): 6.9019, norm(y): 0.9891, norm:1.3514, tok/sec: 106645.10, flops:111.93, batch-reuse:1
@ 1970 train 5.3305 , allloss: 5.3307, dt: 1215.53ms, fracRes: 0.5680, norm(attn): 0.1631, norm(output): 5.7812, norm(x): 6.9152, norm(y): 0.9891, norm:0.9247, tok/sec: 107831.48, flops:113.17, batch-reuse:1
@ 1971 train 5.4484 , allloss: 5.4490, dt: 1192.20ms, fracRes: 0.5683, norm(attn): 0.1602, norm(output): 5.7812, norm(x): 6.9245, norm(y): 0.9890, norm:1.0869, tok/sec: 109941.29, flops:115.39, batch-reuse:1
@ 1972 train 5.3560 , allloss: 5.3561, dt: 1198.50ms, fracRes: 0.5687, norm(attn): 0.1670, norm(output): 5.7500, norm(x): 6.9565, norm(y): 0.9890, norm:0.7077, tok/sec: 109362.94, flops:114.78, batch-reuse:1
@ 1973 train 5.3626 , allloss: 5.3630, dt: 1215.29ms, fracRes: 0.5683, norm(attn): 0.1699, norm(output): 5.7188, norm(x): 6.9496, norm(y): 0.9888, norm:0.8222, tok/sec: 107852.63, flops:113.19, batch-reuse:1
@ 1974 train 5.4006 , allloss: 5.4008, dt: 1204.48ms, fracRes: 0.5679, norm(attn): 0.1689, norm(output): 5.8125, norm(x): 6.9751, norm(y): 0.9889, norm:0.8606, tok/sec: 108820.58, flops:114.21, batch-reuse:1
@ 1975 train 5.2575 , allloss: 5.2576, dt: 1218.50ms, fracRes: 0.5679, norm(attn): 0.1719, norm(output): 5.8438, norm(x): 6.9986, norm(y): 0.9891, norm:0.9431, tok/sec: 107568.60, flops:112.90, batch-reuse:1
@ 1976 train 5.4307 , allloss: 5.4445, dt: 1223.43ms, fracRes: 0.5678, norm(attn): 0.1699, norm(output): 5.8125, norm(x): 6.9877, norm(y): 0.9890, norm:0.9595, tok/sec: 107134.97, flops:112.44, batch-reuse:1
@ 1977 train 5.2891 , allloss: 5.2893, dt: 1199.27ms, fracRes: 0.5682, norm(attn): 0.1689, norm(output): 5.8125, norm(x): 6.9980, norm(y): 0.9893, norm:0.8827, tok/sec: 109292.80, flops:114.70, batch-reuse:1
@ 1978 train 5.4264 , allloss: 5.4265, dt: 1202.78ms, fracRes: 0.5679, norm(attn): 0.1660, norm(output): 5.8125, norm(x): 6.9648, norm(y): 0.9890, norm:0.9720, tok/sec: 108974.66, flops:114.37, batch-reuse:1
@ 1979 train 5.3884 , allloss: 5.3885, dt: 1208.83ms, fracRes: 0.5683, norm(attn): 0.1699, norm(output): 5.8125, norm(x): 6.9797, norm(y): 0.9890, norm:0.9221, tok/sec: 108428.74, flops:113.80, batch-reuse:1
@ 1980 train 5.3650 , allloss: 5.3650, dt: 1193.98ms, fracRes: 0.5683, norm(attn): 0.1699, norm(output): 5.8125, norm(x): 6.9859, norm(y): 0.9891, norm:0.8637, tok/sec: 109777.03, flops:115.21, batch-reuse:1
@ 1981 train 5.3476 , allloss: 5.3477, dt: 1207.81ms, fracRes: 0.5687, norm(attn): 0.1709, norm(output): 5.8438, norm(x): 6.9837, norm(y): 0.9892, norm:0.8523, tok/sec: 108520.58, flops:113.89, batch-reuse:1
@ 1982 train 5.2912 , allloss: 5.2913, dt: 1207.74ms, fracRes: 0.5688, norm(attn): 0.1719, norm(output): 5.8125, norm(x): 7.0078, norm(y): 0.9894, norm:1.0005, tok/sec: 108526.38, flops:113.90, batch-reuse:1
@ 1983 train 5.3741 , allloss: 5.3743, dt: 1205.79ms, fracRes: 0.5682, norm(attn): 0.1729, norm(output): 5.8125, norm(x): 7.0240, norm(y): 0.9892, norm:0.8859, tok/sec: 108702.00, flops:114.08, batch-reuse:1
@ 1984 train 5.3162 , allloss: 5.3167, dt: 1230.02ms, fracRes: 0.5683, norm(attn): 0.1699, norm(output): 5.8125, norm(x): 7.0174, norm(y): 0.9892, norm:1.0446, tok/sec: 106560.84, flops:111.84, batch-reuse:1
@ 1985 train 5.3579 , allloss: 5.3581, dt: 1226.86ms, fracRes: 0.5683, norm(attn): 0.1699, norm(output): 5.8125, norm(x): 7.0288, norm(y): 0.9892, norm:1.2901, tok/sec: 106835.17, flops:112.13, batch-reuse:1
@ 1986 train 5.4304 , allloss: 5.4307, dt: 1207.77ms, fracRes: 0.5682, norm(attn): 0.1719, norm(output): 5.7812, norm(x): 7.0334, norm(y): 0.9890, norm:0.9314, tok/sec: 108524.11, flops:113.90, batch-reuse:1
@ 1987 train 5.4004 , allloss: 5.4006, dt: 1185.63ms, fracRes: 0.5679, norm(attn): 0.1699, norm(output): 5.8125, norm(x): 7.0438, norm(y): 0.9890, norm:0.8438, tok/sec: 110550.37, flops:116.02, batch-reuse:1
@ 1988 train 5.3081 , allloss: 5.3082, dt: 1192.79ms, fracRes: 0.5678, norm(attn): 0.1680, norm(output): 5.8125, norm(x): 7.0458, norm(y): 0.9891, norm:0.8300, tok/sec: 109886.51, flops:115.33, batch-reuse:1
@ 1989 train 5.3439 , allloss: 5.3442, dt: 1179.73ms, fracRes: 0.5674, norm(attn): 0.1680, norm(output): 5.8438, norm(x): 7.0704, norm(y): 0.9891, norm:1.0503, tok/sec: 111103.69, flops:116.61, batch-reuse:1
@ 1990 train 5.3903 , allloss: 5.3906, dt: 1197.46ms, fracRes: 0.5673, norm(attn): 0.1709, norm(output): 5.7812, norm(x): 7.0720, norm(y): 0.9890, norm:0.8929, tok/sec: 109458.64, flops:114.88, batch-reuse:1
@ 1991 train 5.2746 , allloss: 5.2747, dt: 1210.87ms, fracRes: 0.5671, norm(attn): 0.1729, norm(output): 5.8438, norm(x): 7.0877, norm(y): 0.9891, norm:0.7899, tok/sec: 108246.48, flops:113.61, batch-reuse:1
@ 1992 train 5.3490 , allloss: 5.3491, dt: 1215.01ms, fracRes: 0.5677, norm(attn): 0.1729, norm(output): 5.8438, norm(x): 7.0810, norm(y): 0.9891, norm:1.1031, tok/sec: 107877.03, flops:113.22, batch-reuse:1
@ 1993 train 5.2718 , allloss: 5.2719, dt: 1181.79ms, fracRes: 0.5683, norm(attn): 0.1709, norm(output): 5.8125, norm(x): 7.0939, norm(y): 0.9892, norm:1.2002, tok/sec: 110909.98, flops:116.40, batch-reuse:1
@ 1994 train 5.3255 , allloss: 5.3257, dt: 1201.61ms, fracRes: 0.5687, norm(attn): 0.1719, norm(output): 5.8125, norm(x): 7.0662, norm(y): 0.9889, norm:0.9880, tok/sec: 109080.53, flops:114.48, batch-reuse:1
@ 1995 train 5.2882 , allloss: 5.2883, dt: 1217.47ms, fracRes: 0.5691, norm(attn): 0.1729, norm(output): 5.8125, norm(x): 7.0593, norm(y): 0.9889, norm:0.7655, tok/sec: 107659.52, flops:112.99, batch-reuse:1
@ 1996 train 5.3503 , allloss: 5.3504, dt: 1192.29ms, fracRes: 0.5690, norm(attn): 0.1729, norm(output): 5.8125, norm(x): 7.0757, norm(y): 0.9890, norm:1.2306, tok/sec: 109933.35, flops:115.38, batch-reuse:1
@ 1997 train 5.2281 , allloss: 5.2288, dt: 1208.78ms, fracRes: 0.5692, norm(attn): 0.1719, norm(output): 5.8125, norm(x): 7.0696, norm(y): 0.9890, norm:1.1743, tok/sec: 108433.63, flops:113.80, batch-reuse:1
@ 1998 train 5.2751 , allloss: 5.2751, dt: 1211.86ms, fracRes: 0.5694, norm(attn): 0.1719, norm(output): 5.8125, norm(x): 7.0940, norm(y): 0.9890, norm:1.0910, tok/sec: 108158.03, flops:113.51, batch-reuse:1
@ 1999 train 5.1966 , allloss: 5.1967, dt: 1190.81ms, fracRes: 0.5696, norm(attn): 0.1729, norm(output): 5.8125, norm(x): 7.0760, norm(y): 0.9892, norm:0.9303, tok/sec: 110069.95, flops:115.52, batch-reuse:1
@ 2000 val 5.4021
@ 2000 train 5.2831 , allloss: 5.2832, dt: 1775.59ms, fracRes: 0.5694, norm(attn): 0.1729, norm(output): 5.7812, norm(x): 7.0558, norm(y): 0.9891, norm:0.9756, tok/sec: 73818.98, flops:77.47, batch-reuse:1
@ 2001 train 5.3559 , allloss: 5.3560, dt: 1209.79ms, fracRes: 0.5694, norm(attn): 0.1719, norm(output): 5.8125, norm(x): 7.0757, norm(y): 0.9891, norm:1.3913, tok/sec: 108342.66, flops:113.71, batch-reuse:1
@ 2002 train 5.3413 , allloss: 5.3417, dt: 1195.19ms, fracRes: 0.5696, norm(attn): 0.1729, norm(output): 5.8125, norm(x): 7.0778, norm(y): 0.9890, norm:1.0164, tok/sec: 109666.21, flops:115.10, batch-reuse:1
@ 2003 train 5.3394 , allloss: 5.3395, dt: 1208.01ms, fracRes: 0.5701, norm(attn): 0.1729, norm(output): 5.8125, norm(x): 7.1193, norm(y): 0.9890, norm:0.8373, tok/sec: 108502.63, flops:113.88, batch-reuse:1
@ 2004 train 5.3556 , allloss: 5.3557, dt: 1222.29ms, fracRes: 0.5703, norm(attn): 0.1719, norm(output): 5.8125, norm(x): 7.0959, norm(y): 0.9890, norm:0.9751, tok/sec: 107234.88, flops:112.55, batch-reuse:1
@ 2005 train 5.1794 , allloss: 5.1795, dt: 1218.30ms, fracRes: 0.5694, norm(attn): 0.1729, norm(output): 5.8438, norm(x): 7.1159, norm(y): 0.9891, norm:0.6206, tok/sec: 107585.66, flops:112.91, batch-reuse:1
@ 2006 train 5.3662 , allloss: 5.3663, dt: 1235.20ms, fracRes: 0.5694, norm(attn): 0.1738, norm(output): 5.8438, norm(x): 7.1429, norm(y): 0.9891, norm:0.8800, tok/sec: 106113.63, flops:111.37, batch-reuse:1
@ 2007 train 5.2155 , allloss: 5.2158, dt: 1195.41ms, fracRes: 0.5692, norm(attn): 0.1719, norm(output): 5.8438, norm(x): 7.1407, norm(y): 0.9891, norm:0.7511, tok/sec: 109646.17, flops:115.08, batch-reuse:1
@ 2008 train 5.2507 , allloss: 5.2510, dt: 1176.43ms, fracRes: 0.5690, norm(attn): 0.1738, norm(output): 5.8125, norm(x): 7.1378, norm(y): 0.9890, norm:0.9701, tok/sec: 111414.93, flops:116.93, batch-reuse:1
@ 2009 train 5.2549 , allloss: 5.2552, dt: 1207.58ms, fracRes: 0.5694, norm(attn): 0.1777, norm(output): 5.8125, norm(x): 7.1292, norm(y): 0.9888, norm:1.0931, tok/sec: 108540.68, flops:113.92, batch-reuse:1
@ 2010 train 5.3144 , allloss: 5.3148, dt: 1208.23ms, fracRes: 0.5693, norm(attn): 0.1738, norm(output): 5.8125, norm(x): 7.1366, norm(y): 0.9888, norm:0.9241, tok/sec: 108482.63, flops:113.85, batch-reuse:1
@ 2011 train 5.2369 , allloss: 5.2370, dt: 1206.29ms, fracRes: 0.5687, norm(attn): 0.1758, norm(output): 5.8750, norm(x): 7.1835, norm(y): 0.9887, norm:1.0069, tok/sec: 108657.36, flops:114.04, batch-reuse:1
@ 2012 train 5.2250 , allloss: 5.2252, dt: 1209.35ms, fracRes: 0.5687, norm(attn): 0.1719, norm(output): 5.8750, norm(x): 7.1784, norm(y): 0.9889, norm:0.9826, tok/sec: 108382.11, flops:113.75, batch-reuse:1
@ 2013 train 5.2367 , allloss: 5.2370, dt: 1205.03ms, fracRes: 0.5685, norm(attn): 0.1748, norm(output): 5.8438, norm(x): 7.1870, norm(y): 0.9890, norm:0.7485, tok/sec: 108770.37, flops:114.16, batch-reuse:1
@ 2014 train 5.2644 , allloss: 5.2645, dt: 1194.06ms, fracRes: 0.5689, norm(attn): 0.1758, norm(output): 5.8125, norm(x): 7.1665, norm(y): 0.9889, norm:0.8553, tok/sec: 109770.11, flops:115.21, batch-reuse:1
@ 2015 train 5.1775 , allloss: 5.1776, dt: 1203.43ms, fracRes: 0.5689, norm(attn): 0.1719, norm(output): 5.8438, norm(x): 7.1812, norm(y): 0.9889, norm:0.7383, tok/sec: 108915.59, flops:114.31, batch-reuse:1
@ 2016 train 5.2589 , allloss: 5.2658, dt: 1197.40ms, fracRes: 0.5688, norm(attn): 0.1729, norm(output): 5.8438, norm(x): 7.1767, norm(y): 0.9889, norm:1.1687, tok/sec: 109464.24, flops:114.88, batch-reuse:1
@ 2017 train 5.2635 , allloss: 5.2636, dt: 1214.45ms, fracRes: 0.5692, norm(attn): 0.1748, norm(output): 5.8750, norm(x): 7.2052, norm(y): 0.9889, norm:0.6567, tok/sec: 107927.35, flops:113.27, batch-reuse:1
@ 2018 train 5.3240 , allloss: 5.3242, dt: 1191.22ms, fracRes: 0.5691, norm(attn): 0.1738, norm(output): 5.8750, norm(x): 7.1893, norm(y): 0.9889, norm:0.9523, tok/sec: 110031.75, flops:115.48, batch-reuse:1
@ 2019 train 5.3174 , allloss: 5.3175, dt: 1186.13ms, fracRes: 0.5694, norm(attn): 0.1719, norm(output): 5.8750, norm(x): 7.2025, norm(y): 0.9891, norm:0.7403, tok/sec: 110503.88, flops:115.98, batch-reuse:1
@ 2020 train 5.2072 , allloss: 5.2073, dt: 1184.16ms, fracRes: 0.5699, norm(attn): 0.1709, norm(output): 5.8438, norm(x): 7.2033, norm(y): 0.9892, norm:0.7648, tok/sec: 110687.97, flops:116.17, batch-reuse:1
@ 2021 train 5.2258 , allloss: 5.2258, dt: 1209.59ms, fracRes: 0.5695, norm(attn): 0.1709, norm(output): 5.9062, norm(x): 7.2148, norm(y): 0.9892, norm:1.1500, tok/sec: 108360.28, flops:113.73, batch-reuse:1
@ 2022 train 5.3059 , allloss: 5.3060, dt: 1228.16ms, fracRes: 0.5698, norm(attn): 0.1758, norm(output): 5.9062, norm(x): 7.2034, norm(y): 0.9889, norm:1.4720, tok/sec: 106721.87, flops:112.01, batch-reuse:1
@ 2023 train 5.3067 , allloss: 5.3068, dt: 1211.58ms, fracRes: 0.5699, norm(attn): 0.1758, norm(output): 5.8750, norm(x): 7.2056, norm(y): 0.9888, norm:0.8996, tok/sec: 108182.30, flops:113.54, batch-reuse:1
@ 2024 train 5.1813 , allloss: 5.1814, dt: 1187.37ms, fracRes: 0.5694, norm(attn): 0.1729, norm(output): 5.8750, norm(x): 7.2105, norm(y): 0.9892, norm:1.0707, tok/sec: 110388.30, flops:115.85, batch-reuse:1
@ 2025 train 5.3176 , allloss: 5.3182, dt: 1187.35ms, fracRes: 0.5690, norm(attn): 0.1709, norm(output): 5.9062, norm(x): 7.2164, norm(y): 0.9891, norm:1.2185, tok/sec: 110390.27, flops:115.86, batch-reuse:1
@ 2026 train 5.2711 , allloss: 5.2712, dt: 1189.84ms, fracRes: 0.5693, norm(attn): 0.1719, norm(output): 5.9375, norm(x): 7.2418, norm(y): 0.9892, norm:1.0863, tok/sec: 110159.52, flops:115.61, batch-reuse:1
@ 2027 train 5.2633 , allloss: 5.2635, dt: 1198.50ms, fracRes: 0.5698, norm(attn): 0.1748, norm(output): 5.9062, norm(x): 7.2200, norm(y): 0.9890, norm:0.9521, tok/sec: 109363.23, flops:114.78, batch-reuse:1
@ 2028 train 5.5861 , allloss: 5.5862, dt: 1223.59ms, fracRes: 0.5701, norm(attn): 0.1738, norm(output): 5.9062, norm(x): 7.2339, norm(y): 0.9887, norm:0.8101, tok/sec: 107120.65, flops:112.43, batch-reuse:1
@ 2029 train 5.3402 , allloss: 5.3403, dt: 1208.40ms, fracRes: 0.5697, norm(attn): 0.1719, norm(output): 5.9375, norm(x): 7.2300, norm(y): 0.9887, norm:0.9132, tok/sec: 108467.78, flops:113.84, batch-reuse:1
@ 2030 train 5.1016 , allloss: 5.1018, dt: 1234.59ms, fracRes: 0.5692, norm(attn): 0.1719, norm(output): 5.9375, norm(x): 7.2523, norm(y): 0.9891, norm:0.9552, tok/sec: 106166.50, flops:111.42, batch-reuse:1
@ 2031 train 5.1582 , allloss: 5.1584, dt: 1216.97ms, fracRes: 0.5696, norm(attn): 0.1719, norm(output): 5.9375, norm(x): 7.2544, norm(y): 0.9891, norm:0.9206, tok/sec: 107703.52, flops:113.04, batch-reuse:1
@ 2032 train 5.1693 , allloss: 5.1695, dt: 1191.88ms, fracRes: 0.5694, norm(attn): 0.1729, norm(output): 5.9062, norm(x): 7.2680, norm(y): 0.9892, norm:0.8923, tok/sec: 109970.34, flops:115.42, batch-reuse:1
@ 2033 train 5.1981 , allloss: 5.1983, dt: 1206.44ms, fracRes: 0.5698, norm(attn): 0.1797, norm(output): 5.9062, norm(x): 7.2912, norm(y): 0.9891, norm:1.1984, tok/sec: 108643.36, flops:114.02, batch-reuse:1
@ 2034 train 5.1949 , allloss: 5.1950, dt: 1237.37ms, fracRes: 0.5704, norm(attn): 0.1807, norm(output): 5.8750, norm(x): 7.2618, norm(y): 0.9891, norm:0.8172, tok/sec: 105927.71, flops:111.17, batch-reuse:1
@ 2035 train 5.1907 , allloss: 5.1910, dt: 1237.02ms, fracRes: 0.5705, norm(attn): 0.1787, norm(output): 5.8750, norm(x): 7.2801, norm(y): 0.9892, norm:0.8449, tok/sec: 105957.87, flops:111.20, batch-reuse:1
@ 2036 train 5.1945 , allloss: 5.1945, dt: 1205.60ms, fracRes: 0.5708, norm(attn): 0.1738, norm(output): 5.9062, norm(x): 7.2544, norm(y): 0.9890, norm:0.8367, tok/sec: 108719.29, flops:114.10, batch-reuse:1
@ 2037 train 5.2473 , allloss: 5.2475, dt: 1209.71ms, fracRes: 0.5706, norm(attn): 0.1719, norm(output): 5.9688, norm(x): 7.2909, norm(y): 0.9889, norm:0.8686, tok/sec: 108349.77, flops:113.72, batch-reuse:1
@ 2038 train 5.2155 , allloss: 5.2170, dt: 1210.98ms, fracRes: 0.5699, norm(attn): 0.1719, norm(output): 5.9688, norm(x): 7.3134, norm(y): 0.9889, norm:0.9685, tok/sec: 108236.10, flops:113.60, batch-reuse:1
@ 2039 train 5.3169 , allloss: 5.3170, dt: 1234.14ms, fracRes: 0.5700, norm(attn): 0.1748, norm(output): 5.9688, norm(x): 7.3413, norm(y): 0.9888, norm:1.0679, tok/sec: 106205.22, flops:111.46, batch-reuse:1
@ 2040 train 5.3690 , allloss: 5.3692, dt: 1221.49ms, fracRes: 0.5701, norm(attn): 0.1758, norm(output): 5.9375, norm(x): 7.3161, norm(y): 0.9888, norm:0.9052, tok/sec: 107304.64, flops:112.62, batch-reuse:1
@ 2041 train 5.3360 , allloss: 5.3360, dt: 1211.06ms, fracRes: 0.5699, norm(attn): 0.1777, norm(output): 5.9375, norm(x): 7.3222, norm(y): 0.9889, norm:0.9135, tok/sec: 108228.92, flops:113.59, batch-reuse:1
@ 2042 train 5.4586 , allloss: 5.4588, dt: 1209.25ms, fracRes: 0.5696, norm(attn): 0.1777, norm(output): 5.9375, norm(x): 7.3387, norm(y): 0.9888, norm:0.9374, tok/sec: 108390.90, flops:113.76, batch-reuse:1
@ 2043 train 5.3939 , allloss: 5.5359, dt: 1228.04ms, fracRes: 0.5689, norm(attn): 0.1797, norm(output): 5.9688, norm(x): 7.3010, norm(y): 0.9887, norm:1.2254, tok/sec: 106732.33, flops:112.02, batch-reuse:1
@ 2044 train 5.4944 , allloss: 5.4945, dt: 1194.33ms, fracRes: 0.5694, norm(attn): 0.1787, norm(output): 5.9375, norm(x): 7.3206, norm(y): 0.9888, norm:1.0550, tok/sec: 109745.30, flops:115.18, batch-reuse:1
@ 2045 train 5.3867 , allloss: 5.3869, dt: 1219.16ms, fracRes: 0.5702, norm(attn): 0.1777, norm(output): 5.9375, norm(x): 7.3124, norm(y): 0.9889, norm:1.0323, tok/sec: 107510.29, flops:112.83, batch-reuse:1
@ 2046 train 5.4668 , allloss: 5.4668, dt: 1235.50ms, fracRes: 0.5698, norm(attn): 0.1729, norm(output): 5.9375, norm(x): 7.3085, norm(y): 0.9889, norm:0.9051, tok/sec: 106088.19, flops:111.34, batch-reuse:1
@ 2047 train 5.4003 , allloss: 5.4004, dt: 1200.31ms, fracRes: 0.5696, norm(attn): 0.1758, norm(output): 5.9375, norm(x): 7.3052, norm(y): 0.9889, norm:1.1336, tok/sec: 109198.20, flops:114.61, batch-reuse:1
@ 2048 train 5.3846 , allloss: 5.3848, dt: 1226.17ms, fracRes: 0.5700, norm(attn): 0.1787, norm(output): 5.9375, norm(x): 7.2843, norm(y): 0.9889, norm:1.1813, tok/sec: 106895.18, flops:112.19, batch-reuse:1
@ 2049 train 5.4263 , allloss: 5.4265, dt: 1235.55ms, fracRes: 0.5701, norm(attn): 0.1826, norm(output): 5.9062, norm(x): 7.2816, norm(y): 0.9889, norm:0.8682, tok/sec: 106083.59, flops:111.34, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9492,     0.0006,     0.0000,     0.0000,     0.0000,     0.0486,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1455,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.8555,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0018,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0006,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6055,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.3945,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0110, -0.0188,  0.0572,  ...,  0.0326,  0.1078,  0.0348],
        [-0.0133, -0.0441,  0.0027,  ...,  0.0268, -0.0074, -0.0320],
        [ 0.0111,  0.0411,  0.0681,  ...,  0.0591,  0.1034,  0.0353],
        ...,
        [-0.0020,  0.0325, -0.0306,  ..., -0.0618, -0.0875,  0.0025],
        [-0.0005, -0.0256,  0.0344,  ...,  0.0580,  0.0190,  0.0319],
        [ 0.0203,  0.0497, -0.0084,  ...,  0.0010,  0.0343,  0.0177]], device='cuda:0', requires_grad=True)
K: tensor([ 1.9688, -2.4219, -0.7539,  1.3359,  0.4395,  0.3535, -0.4180, -0.9961,  0.2578, -2.3594, -0.5117,  1.7578,  0.7617, -0.6055, -0.9023,  1.9062, -2.7500,  0.2471,  0.9844,  2.0469, -0.5117, -2.2969,  2.1875, -2.8281,  2.5312,  0.7539, -1.6484,  1.6719, -1.3203, -0.4805,  3.5469,  0.8594,
        -1.9062, -1.8672,  1.2422,  1.3047, -1.3672, -1.9531,  0.3242,  2.4531, -0.0742, -1.5391, -1.3516,  2.9688, -1.4062,  1.6094, -1.7109, -0.9922,  1.1328, -0.4434,  1.7578, -0.0192,  2.7344, -2.5000, -1.3203,  0.0157, -0.5859, -1.7812,  0.8516,  1.1094, -0.9648,  4.0312, -2.1719,  0.3359],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0394, -0.0335, -0.0164,  ..., -0.0044, -0.0545, -0.0311],
        [-0.0069,  0.0013, -0.0007,  ..., -0.0140, -0.0152,  0.0026],
        [-0.0037,  0.0039, -0.0387,  ..., -0.0272, -0.0424, -0.0305],
        ...,
        [ 0.0375, -0.0180,  0.0293,  ...,  0.0621,  0.0438,  0.0075],
        [ 0.0263,  0.0061, -0.0186,  ..., -0.0384, -0.0169, -0.0367],
        [ 0.0293, -0.0310, -0.0185,  ...,  0.0286,  0.0172,  0.0350]], device='cuda:0', requires_grad=True)
Q: tensor([-1.2422,  2.3438, -0.1514, -2.4062,  2.1562, -0.6953,  1.5547,  3.0156, -2.7656,  4.4688,  0.8984, -0.3066, -1.3125,  0.8281,  1.1875, -1.5156,  2.4688,  1.5391, -1.0078, -0.1777, -0.1777,  2.4688, -0.5781,  6.9375, -2.5156, -1.3594,  1.3672, -1.6484,  1.5234,  2.3906, -4.4375, -1.0234,
         3.2344,  2.2500, -1.7109,  1.0859,  1.0625,  3.1719,  0.3457, -3.3125, -2.7500,  2.3750,  0.8633, -3.7188,  1.9766, -3.1250,  3.4844,  1.5000, -1.3750,  0.6367, -2.2188, -0.2080, -6.2812,  1.4062,  3.5938,  0.6719,  0.9922,  1.5469, -1.3125, -1.5234,  1.4062, -1.8438,  2.0938,  0.6680],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[   0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000],
        [   0.0000, -111.0000,  -48.7500,  -48.2500,  -33.5000,  -42.7500,  -69.0000,   -2.5781,  -53.0000,  -55.7500,  -60.7500,  -28.2500,  -28.2500,  -57.7500,  -41.0000],
        [   0.0000,  -51.5000,  -25.8750,  -25.6250,  -14.8125,  -19.1250,  -28.6250,  -10.3750,  -23.3750,  -22.5000,  -24.8750,  -12.8750,  -18.0000,  -23.6250,  -18.8750],
        [   0.0000,  -54.0000,  -23.2500,  -28.0000,  -22.7500,  -24.0000,  -34.2500,   -1.0391,  -28.3750,  -25.8750,  -34.5000,  -13.1250,  -11.3125,  -31.7500,  -20.8750],
        [   0.0000,  -45.5000,  -18.3750,  -23.2500,  -19.5000,  -21.8750,  -31.2500,   -4.5000,  -25.1250,  -23.5000,  -28.0000,  -11.8125,  -12.6250,  -27.5000,  -19.7500],
        [   0.0000,  -46.5000,  -20.0000,  -24.7500,  -20.1250,  -23.1250,  -31.1250,   -7.1562,  -26.6250,  -23.5000,  -28.2500,  -12.8750,  -14.1875,  -28.2500,  -19.7500],
        [   0.0000,  -82.0000,  -35.5000,  -38.5000,  -28.1250,  -34.0000,  -50.7500,   -7.2188,  -42.0000,  -40.2500,  -45.2500,  -21.7500,  -23.5000,  -44.5000,  -30.1250],
        [   0.0000,   16.3750,    9.0000,    1.7109,   -2.3438,    1.7266,   13.4375,  -14.2500,    4.0938,   11.1250,    9.9375,   -1.1797,   -0.7500,    8.1250,    5.0312],
        [   0.0000,  -62.7500,  -29.1250,  -29.8750,  -21.6250,  -27.1250,  -39.7500,  -10.5625,  -32.5000,  -33.2500,  -33.0000,  -19.5000,  -21.1250,  -33.5000,  -24.8750],
        [   0.0000,  -86.0000,  -37.7500,  -38.2500,  -33.0000,  -38.0000,  -56.7500,    1.7734,  -45.5000,  -45.5000,  -55.2500,  -21.0000,  -18.6250,  -51.2500,  -34.5000],
        [   0.0000,  -72.5000,  -32.0000,  -30.1250,  -30.0000,  -34.0000,  -52.0000,    6.2812,  -40.5000,  -41.5000,  -49.7500,  -17.6250,  -14.0625,  -46.7500,  -30.7500],
        [   0.0000,  -30.8750,  -13.0000,  -16.7500,  -16.0000,  -16.2500,  -19.1250,   -7.5625,  -19.0000,  -16.2500,  -20.6250,  -11.3750,   -9.6875,  -19.0000,  -14.0000],
        [   0.0000,  -29.2500,  -13.8750,  -16.0000,  -12.0625,  -12.1875,  -14.6875,   -7.3750,  -15.0000,  -12.2500,  -15.1875,   -9.3750,   -9.9375,  -14.0625,  -10.2500],
        [   0.0000,  -69.5000,  -32.5000,  -34.0000,  -21.5000,  -28.7500,  -43.7500,  -11.2500,  -34.5000,  -35.5000,  -36.5000,  -19.7500,  -23.5000,  -36.2500,  -27.6250],
        [   0.0000,  -64.0000,  -26.0000,  -30.1250,  -26.7500,  -29.8750,  -43.2500,   -0.4297,  -36.5000,  -33.7500,  -43.2500,  -16.6250,  -13.8125,  -40.2500,  -25.7500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [1.0000],
        [0.9202],
        [0.9163],
        [0.8507],
        [0.8991],
        [0.9141],
        [0.0074],
        [0.7500],
        [0.6805],
        [0.5771],
        [0.6619],
        [0.6727],
        [0.7605],
        [0.7217]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0532, -0.0052,  0.0131,  ...,  0.0149,  0.0328, -0.0272],
        [ 0.0345, -0.0012, -0.0190,  ..., -0.0092,  0.0536, -0.0165],
        [-0.0358,  0.0463, -0.0553,  ..., -0.0362, -0.0549, -0.0148],
        ...,
        [ 0.0026,  0.0041, -0.0306,  ..., -0.0229, -0.0820, -0.0432],
        [ 0.0161,  0.0032,  0.0015,  ..., -0.0204,  0.0370,  0.0136],
        [-0.0266, -0.0291, -0.0046,  ...,  0.0255, -0.0716,  0.0097]], device='cuda:0', requires_grad=True)
K: tensor([-3.2188, -4.3438, -4.3750,  3.5469,  4.2812,  0.9258,  0.9180, -2.3281, -2.5781,  4.2812,  4.0312,  0.1855, -3.5938,  2.8438,  4.2812,  3.2188,  3.1406,  3.5469,  4.3125,  4.2500,  2.6719,  2.3906, -2.2344,  3.4531, -2.0312,  2.9531, -3.2500,  3.1562,  1.1875, -0.9219, -3.9375, -3.0469,
         4.4375,  2.9062, -1.3984,  2.7969, -3.7188,  3.6562, -3.3125, -3.9375,  4.0625, -2.3750, -2.8438, -1.2578, -3.3906,  4.0000, -0.5352, -0.1641, -3.0938, -2.0781,  2.5781, -2.5625,  4.2812, -1.7656,  1.3203, -4.1875, -0.9570, -5.3438, -4.1562, -3.0781,  2.6719,  3.2812, -3.2500,  2.4688],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0273,  0.0259,  0.0058,  ..., -0.0182, -0.0649,  0.0028],
        [-0.0381, -0.0186, -0.0139,  ...,  0.0405, -0.0451, -0.0122],
        [-0.0145, -0.0113,  0.0300,  ...,  0.0165,  0.0382,  0.0053],
        ...,
        [ 0.0178, -0.0503,  0.0128,  ..., -0.0241,  0.0142,  0.0178],
        [-0.0257,  0.0099,  0.0070,  ...,  0.0381, -0.0432, -0.0155],
        [ 0.0129,  0.0003,  0.0058,  ...,  0.0142,  0.0270, -0.0026]], device='cuda:0', requires_grad=True)
Q: tensor([ 2.9844,  4.6250,  4.5625, -3.9688, -4.7812,  0.6680, -1.3203,  3.2656,  2.8125, -3.7969, -3.9688, -0.1216,  4.3438, -3.4844, -5.6875, -2.9688, -3.3594, -3.7969, -4.6875, -3.4375, -3.9844, -2.1250,  2.8750, -2.8750,  2.9844, -3.2188,  3.8281, -4.2812, -1.6250,  1.3281,  4.4688,  2.5781,
        -5.9688, -3.4688,  2.3438, -2.4531,  4.5000, -4.0625,  3.3594,  3.5781, -4.3125,  1.9062,  3.6406,  1.3672,  3.5000, -5.4375, -0.8594,  0.3496,  4.1562,  2.5781, -3.1250,  3.0000, -4.9062,  1.0625, -2.2188,  5.5938, -0.0947,  4.2812,  5.0625,  3.0938, -2.9375, -4.3438,  5.0000, -2.5781],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[   0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000,    0.0000],
        [   0.0000, -184.0000, -139.0000,  -89.0000, -135.0000, -133.0000, -119.0000, -136.0000, -155.0000, -118.0000,  -99.0000, -115.0000, -126.0000, -156.0000, -126.5000],
        [   0.0000, -132.0000, -112.0000,  -65.5000, -100.0000, -101.5000,  -86.0000, -101.5000, -113.0000,  -88.5000,  -74.0000,  -84.5000,  -95.0000, -115.0000,  -90.5000],
        [   0.0000,  -98.0000,  -82.5000,  -54.2500,  -79.0000,  -79.0000,  -69.0000,  -81.0000,  -88.0000,  -66.0000,  -60.5000,  -64.0000,  -72.0000,  -88.5000,  -73.0000],
        [   0.0000, -130.0000, -107.5000,  -68.0000, -106.0000, -104.5000,  -92.0000, -104.5000, -118.0000,  -90.0000,  -79.0000,  -85.5000,  -96.0000, -120.0000,  -95.0000],
        [   0.0000, -129.0000, -108.5000,  -68.0000, -103.0000, -103.5000,  -88.5000, -103.5000, -115.0000,  -87.5000,  -77.0000,  -84.0000,  -94.5000, -116.0000,  -93.0000],
        [   0.0000, -117.5000,  -92.0000,  -59.5000,  -91.5000,  -89.5000,  -81.0000,  -91.0000, -104.5000,  -78.5000,  -68.0000,  -75.5000,  -84.0000, -105.5000,  -85.0000],
        [   0.0000, -138.0000, -111.5000,  -72.0000, -107.5000, -106.0000,  -94.0000, -110.0000, -121.5000,  -91.0000,  -80.5000,  -88.5000,  -99.0000, -122.0000, -100.0000],
        [   0.0000, -141.0000, -114.5000,  -72.0000, -111.0000, -110.5000,  -97.0000, -111.5000, -127.0000,  -94.5000,  -82.5000,  -90.5000, -102.0000, -128.0000, -102.0000],
        [   0.0000, -125.0000,  -97.5000,  -64.5000,  -98.0000,  -95.5000,  -85.5000,  -97.5000, -109.0000,  -85.0000,  -73.5000,  -82.0000,  -89.0000, -110.0000,  -89.5000],
        [   0.0000,  -97.5000,  -82.5000,  -51.5000,  -80.5000,  -80.0000,  -70.0000,  -79.5000,  -90.0000,  -68.0000,  -60.0000,  -64.5000,  -73.0000,  -91.5000,  -72.0000],
        [   0.0000, -115.0000,  -88.5000,  -59.2500,  -89.5000,  -87.0000,  -77.5000,  -89.5000,  -99.5000,  -76.5000,  -67.0000,  -75.0000,  -80.5000, -100.0000,  -82.5000],
        [   0.0000, -123.0000,  -99.0000,  -63.2500,  -94.0000,  -93.5000,  -82.5000,  -96.5000, -107.0000,  -81.0000,  -70.0000,  -78.5000,  -88.0000, -108.0000,  -88.0000],
        [   0.0000, -140.0000, -114.5000,  -71.0000, -110.5000, -110.5000,  -96.5000, -111.0000, -126.5000,  -94.0000,  -82.0000,  -89.5000, -102.0000, -128.0000, -101.0000],
        [   0.0000, -121.5000,  -94.0000,  -62.2500,  -93.5000,  -91.5000,  -83.0000,  -94.5000, -107.0000,  -78.0000,  -70.5000,  -76.5000,  -85.0000, -108.0000,  -88.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9609,     0.0187,     0.0199,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0018,     0.0019,     0.9961,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2305,     0.7695,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0398,     0.0000,     0.9609,     0.0000,     0.0000,     0.0000,     0.0000,     0.0006,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0007,     0.0001,     0.0006,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0334,     0.0000,     0.0000,     0.0000,     0.9648,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0322,  0.0174, -0.0489,  ...,  0.0014,  0.0587,  0.0136],
        [-0.0229,  0.0373,  0.0370,  ...,  0.0249,  0.0496,  0.0384],
        [-0.0148, -0.0630, -0.0080,  ...,  0.0304, -0.0717, -0.0257],
        ...,
        [ 0.0102, -0.0754,  0.0048,  ...,  0.0343, -0.0971, -0.0574],
        [-0.0268,  0.0591, -0.0199,  ...,  0.0018,  0.0765,  0.0057],
        [-0.0351, -0.0661, -0.0141,  ..., -0.0035, -0.0744, -0.0412]], device='cuda:0', requires_grad=True)
K: tensor([ 2.2812, -2.9062, -6.2500, -6.0625,  4.0312,  5.0938,  6.0000,  4.0938, -2.3438, -3.3906,  4.9688,  4.8125, -3.1250,  2.7344,  3.5469,  3.1562, -3.4844, -0.2656, -3.4219,  1.1719, -2.1250, -4.9375,  1.8906, -5.4062,  2.7031, -4.2500,  2.8125,  4.6562, -2.9531,  5.0000, -3.1094, -3.2188,
        -3.8125, -3.5000, -3.4844, -1.9453,  2.3750,  4.4688, -4.1250, -4.9688,  2.0000,  3.7188,  3.8594, -1.7812, -4.2500,  3.1250, -5.4375, -5.0625, -6.0312, -6.8750,  4.0000, -4.4688, -3.7812,  5.9375, -3.9375,  5.6250, -3.5938, -4.5312,  2.0469,  2.4062, -3.9688,  5.4375, -4.8125,  5.8750],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0570, -0.0034,  0.0021,  ...,  0.0041, -0.0681, -0.0265],
        [-0.0012,  0.0292,  0.0540,  ...,  0.0302, -0.0263, -0.0128],
        [ 0.0246,  0.0204, -0.0244,  ..., -0.0085,  0.0536,  0.0403],
        ...,
        [-0.0144, -0.0113,  0.0152,  ...,  0.0093,  0.0424,  0.0211],
        [-0.0044,  0.0043, -0.0485,  ..., -0.0202, -0.0369, -0.0044],
        [ 0.0012, -0.0126,  0.0324,  ..., -0.0050,  0.0075,  0.0572]], device='cuda:0', requires_grad=True)
Q: tensor([-0.5195,  0.1758,  1.9297,  3.5625, -0.7812, -1.1797, -1.6484, -0.5742,  2.1562, -0.0400, -1.2109, -2.3125,  0.2207, -0.8516, -2.0938, -0.0723,  0.4551,  0.8867,  0.2139, -0.1357,  1.4922,  1.6562, -1.0078, -0.3809, -1.3438,  1.6875, -0.8711, -2.7188,  1.2031, -0.4062,  0.5664,  1.1094,
        -0.1621,  0.9297,  0.1289,  0.9492,  0.6484, -0.8516,  1.4141,  0.0713, -1.3047,  0.2852, -1.3516,  0.9062,  0.6758,  1.7266,  3.7188,  1.9297,  2.0312,  1.4141,  1.0312,  2.2812,  3.1719, -2.0312, -0.5977, -2.1875,  0.5898,  2.6250,  0.2539, -1.2344,  1.7188, -1.3984,  0.5938, -1.2109],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,    -24.3750,    -34.7500,     43.5000,     12.3750,    -58.5000,     82.5000,     45.2500,     70.0000,   -104.0000,     81.5000,    -53.7500,     -7.7188,     82.0000,    115.0000],
        [     0.0000,     -3.9375,     -3.8750,      0.4023,     -2.3281,     -6.9062,     10.9375,      4.4375,     11.3125,    -18.8750,      7.8750,    -14.0625,     -5.6562,     13.7500,     12.5625],
        [     0.0000,      0.0461,      6.3125,    -20.0000,    -13.9375,      9.5000,    -23.6250,    -13.8125,    -25.0000,     22.8750,    -35.2500,      6.0625,     -0.8906,    -27.5000,    -35.0000],
        [     0.0000,     11.2500,     12.4375,    -38.5000,    -21.2500,     37.5000,    -51.7500,    -32.5000,    -41.0000,     52.7500,    -64.5000,     16.7500,      2.8906,    -47.0000,    -78.0000],
        [     0.0000,      2.9219,     12.1875,    -32.5000,    -20.0000,     23.5000,    -37.0000,    -22.8750,    -33.5000,     36.2500,    -51.5000,      8.8750,      0.4746,    -37.0000,    -57.2500],
        [     0.0000,      4.5625,      7.9688,    -24.5000,    -16.2500,     20.0000,    -27.3750,    -17.5000,    -21.5000,     25.3750,    -39.2500,      5.2500,      0.0952,    -23.5000,    -43.7500],
        [     0.0000,    -11.8125,      3.1875,    -12.3750,    -19.5000,    -15.0625,    -11.4375,     -4.2500,    -35.2500,     13.9375,    -34.5000,      5.1250,      0.6875,    -36.5000,    -15.3125],
        [     0.0000,     -2.2969,     -0.1895,    -21.1250,    -19.2500,      7.2500,    -15.6250,    -12.3125,    -15.3750,      5.3750,    -31.0000,     -8.1250,     -1.7266,    -15.4375,    -27.2500],
        [     0.0000,     22.3750,     32.0000,    -49.7500,    -18.0000,     59.5000,    -89.0000,    -49.0000,    -77.0000,    108.5000,    -95.0000,     53.0000,      8.3750,    -89.5000,   -125.0000],
        [     0.0000,     11.2500,     13.3125,    -44.0000,    -26.2500,     36.0000,    -56.0000,    -37.5000,    -46.5000,     51.7500,    -70.5000,     13.2500,     -0.8984,    -52.7500,    -84.5000],
        [     0.0000,     24.6250,     32.7500,    -45.2500,    -12.8125,     58.0000,    -92.0000,    -49.5000,    -83.0000,    118.0000,    -93.5000,     62.5000,      9.8125,    -97.5000,   -125.5000],
        [     0.0000,     -0.3457,     16.7500,    -23.5000,    -15.6250,     11.3750,    -39.2500,    -18.8750,    -52.7500,     53.7500,    -54.5000,     28.2500,      5.5312,    -58.7500,    -54.0000],
        [     0.0000,      1.8828,      4.8125,    -27.2500,    -20.5000,     16.5000,    -27.5000,    -18.8750,    -24.0000,     19.8750,    -42.0000,     -0.7383,     -0.6875,    -25.8750,    -43.7500],
        [     0.0000,      4.9375,      8.9375,    -15.0625,     -7.3125,     14.5625,    -26.2500,    -14.0625,    -26.3750,     33.2500,    -31.1250,     16.6250,      1.9688,    -30.3750,    -36.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.2500],
        [    0.2681],
        [    0.0751],
        [    0.1219],
        [    0.1829],
        [    0.0394],
        [    0.0198],
        [    0.0085],
        [    0.0190],
        [    0.0000],
        [    0.0000],
        [    0.0002],
        [    0.0003],
        [    0.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9883,     0.0014,     0.0087,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0001,     0.0004,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9883,     0.0001,     0.0002,     0.0000,     0.0000,     0.0020,     0.0112,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9727,     0.0001,     0.0004,     0.0000,     0.0000,     0.0002,     0.0250,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.0001,     0.0014,     0.0099,     0.0000,     0.0000,     0.0674,     0.9180,     0.0000,     0.0031,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0016,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9375,     0.0002,     0.0008,     0.0000,     0.0000,     0.0056,     0.0554,     0.0000,     0.0005,     0.0000,     0.0003,     0.0000,     0.0000,     0.0000],
        [    0.0007,     0.0000,     0.0012,     0.0068,     0.0000,     0.0000,     0.0977,     0.7266,     0.0000,     0.0008,     0.0000,     0.0017,     0.1660,     0.0000,     0.0000],
        [    0.0000,     0.0806,     0.0006,     0.0064,     0.0000,     0.0000,     0.0025,     0.4219,     0.0000,     0.0099,     0.0000,     0.0035,     0.4746,     0.0000,     0.0000],
        [    0.0000,     0.9961,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0009,     0.0000,     0.0000,     0.0000,     0.0000,     0.0007,     0.0000,     0.0003]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0451,  0.0114, -0.0495,  ..., -0.0275, -0.0311, -0.0410],
        [-0.0673, -0.0175,  0.0597,  ...,  0.0212,  0.0133,  0.0279],
        [-0.0295, -0.0047, -0.0208,  ...,  0.0082, -0.0241, -0.0077],
        ...,
        [ 0.0317, -0.0175, -0.0211,  ..., -0.0160, -0.0279, -0.0299],
        [ 0.0015, -0.0051, -0.0205,  ..., -0.0597, -0.0468,  0.0322],
        [ 0.0156,  0.0495,  0.0045,  ..., -0.0249, -0.0079,  0.0217]], device='cuda:0', requires_grad=True)
K: tensor([-0.7305,  5.1250, -3.9531, -2.0312,  1.2031,  0.4023, -0.1377, -0.1982,  3.6719, -1.1250, -1.8438, -2.4844,  1.0000, -0.4062, -1.2344,  1.1953,  3.3125, -4.3750, -0.7070, -1.4219, -0.7891, -0.4180, -2.2969, -1.7656, -0.5820,  0.8242, -0.2041, -2.0469,  3.6719,  2.4219,  0.3379,  0.4375,
         4.3750,  0.3262,  0.2480,  8.2500,  3.3750, -0.2480, -0.8281,  1.2969, -3.8438, -2.0469,  3.9844, -2.0156, -2.3281,  1.0391, -0.5156,  0.2178, -0.5938, -1.1641, -1.1719, -1.8516,  7.8125, -0.2285, -4.4062,  2.7969,  0.6133,  0.6797, -1.9922, -0.1021, -1.0234,  1.1484,  0.4961, -4.5000],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0232,  0.0068,  0.0578,  ..., -0.0047,  0.0247, -0.0140],
        [ 0.0190, -0.0199, -0.0386,  ...,  0.0710, -0.0161, -0.0256],
        [ 0.0611, -0.0106,  0.0129,  ..., -0.0255, -0.0572,  0.0584],
        ...,
        [-0.0390,  0.0197,  0.0092,  ..., -0.0004,  0.0146,  0.0491],
        [-0.0250, -0.0186,  0.0435,  ..., -0.0153,  0.0136, -0.0193],
        [-0.0323, -0.0513, -0.0058,  ...,  0.0175,  0.0124, -0.0183]], device='cuda:0', requires_grad=True)
Q: tensor([     2.3438,     -0.5547,      0.0933,     -0.0009,      0.1289,     -1.8203,      1.6641,     -2.4688,     -0.6953,      1.1250,      1.1172,     -2.0469,     -4.5625,      1.0703,      2.3594,     -0.6953,      3.8438,     -3.3281,      2.1875,     -2.2812,      0.1338,      2.5156,
            -3.4375,     -1.4766,      1.5156,      2.0781,      2.3594,     -0.0576,     -1.2578,     -1.4922,      0.2451,     -2.4531,      3.8906,     -1.0391,      3.6250,      3.1875,      4.3125,     -1.0781,      4.0625,     -1.8594,      0.7617,      3.6562,      3.5156,     -3.0938,
            -0.0491,      0.5312,      2.4062,      2.4062,     -1.9609,      2.4688,      5.0938,     -0.3203,     -0.4297,     -0.4199,      0.8125,      1.3281,     -4.5625,     -3.6250,      2.1406,     -2.0625,      1.1562,     -0.8711,     -2.5000,      0.8633], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,    -79.0000,      3.8125,      5.8750,      6.3125,      3.2344,     10.0625,     10.7500,      1.7344,      7.1562,     -4.0938,      9.8125,      9.5000,      1.9062,     12.3125],
        [     0.0000,     45.5000,      5.8438,      6.3750,     -1.4297,      3.8125,      8.2500,     10.5000,      2.8281,      7.4688,      2.9062,      4.9375,     11.6875,      3.6406,     10.3125],
        [     0.0000,     42.0000,      6.0312,      5.3438,     -1.4141,      2.5781,      7.5625,      8.8125,      2.9531,      5.0000,      3.7656,      3.1719,      9.0000,      3.5938,      9.1875],
        [     0.0000,     11.5625,      5.0000,      6.8438,     -1.3672,      2.5938,      5.5625,     10.5000,     -0.0703,      7.3750,     -1.4609,      6.2188,     11.1250,      0.4863,      8.2500],
        [     0.0000,     13.6250,      3.7500,      5.7188,     -2.9375,      0.1504,      6.5000,     10.3750,     -1.1172,      6.2188,     -2.8750,      5.4062,     10.5000,     -0.4160,      9.4375],
        [     0.0000,     13.4375,      2.2031,      4.3125,     -3.7344,     -0.6367,      3.7344,      8.0625,     -2.1094,      4.2500,     -3.4219,      3.2812,      8.1875,     -1.5547,      6.2188],
        [     0.0000,     11.1875,      1.6250,      2.6250,     -4.3125,     -2.4375,      4.9688,      6.6875,     -1.4766,      1.1328,     -2.3125,      1.0625,      5.8125,     -0.9180,      7.2500],
        [     0.0000,     14.0000,      4.2812,      6.3125,     -2.0000,      1.3203,      5.3750,     10.3750,     -0.9805,      6.9375,     -2.5312,      5.5938,     10.6875,     -0.4004,      8.0000],
        [     0.0000,     -1.2812,      2.0625,      4.0000,     -3.7344,     -1.3125,      5.9062,      8.5000,     -1.4062,      2.8438,     -3.0781,      3.1094,      7.9688,     -0.8281,      8.7500],
        [     0.0000,     17.2500,      5.0000,      6.8438,     -0.9023,      2.7031,      6.3438,     10.8750,      0.3145,      7.8750,     -1.1484,      6.2500,     11.5625,      0.9336,      8.8750],
        [     0.0000,     11.6250,      3.2500,      4.5625,     -2.5312,      0.5508,      6.5312,      8.8125,      0.2578,      4.1250,     -0.6797,      3.4844,      8.8125,      0.8594,      8.8750],
        [     0.0000,     -3.9688,      0.4961,      2.2812,     -5.1875,     -4.1562,      4.9375,      6.9375,     -2.8125,      0.0947,     -4.4062,      0.9102,      5.4688,     -2.2812,      7.6562],
        [     0.0000,      8.4375,      3.5781,      5.8750,     -2.4219,      0.4512,      4.9375,     10.0625,     -1.7344,      6.3125,     -3.5469,      5.2812,     10.1875,     -1.1719,      7.6875],
        [     0.0000,     14.6250,      1.7422,      3.5938,     -4.0625,     -1.5469,      4.0312,      7.5938,     -2.0781,      3.1875,     -3.1875,      2.3594,      7.3750,     -1.5156,      6.3438]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [1.0000],
        [0.0833],
        [0.0830],
        [0.0829],
        [0.0893],
        [0.0792],
        [0.0806],
        [0.0770],
        [0.1016],
        [0.0724],
        [0.0748],
        [0.0906],
        [0.0732],
        [0.0684]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0038,     0.9961,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0079,     0.9805,     0.0120,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0018,     0.9727,     0.0055,     0.0182,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1270,     0.7812,     0.0075,     0.0160,     0.0664,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0011,     0.9609,     0.0005,     0.0011,     0.0020,     0.0361,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0008,     0.7109,     0.0014,     0.0026,     0.0050,     0.2559,     0.0238,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0005,     0.8398,     0.0004,     0.0011,     0.0033,     0.0508,     0.0100,     0.0928,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0026,     0.1504,     0.0003,     0.0005,     0.0029,     0.0376,     0.0096,     0.0388,     0.7578,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0017,     0.3535,     0.0013,     0.0039,     0.0198,     0.0457,     0.0212,     0.1650,     0.3477,     0.0422,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0009,     0.1064,     0.0002,     0.0005,     0.0025,     0.0586,     0.0082,     0.0262,     0.7852,     0.0040,     0.0064,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0012,     0.2139,     0.0020,     0.0069,     0.0228,     0.0281,     0.0193,     0.2676,     0.3281,     0.0408,     0.0464,     0.0232,     0.0000,     0.0000,     0.0000],
        [    0.0003,     0.2676,     0.0002,     0.0006,     0.0017,     0.0103,     0.0037,     0.0452,     0.6289,     0.0076,     0.0079,     0.0074,     0.0192,     0.0000,     0.0000],
        [    0.0016,     0.0635,     0.0001,     0.0002,     0.0011,     0.0133,     0.0036,     0.0151,     0.3164,     0.0031,     0.0025,     0.0022,     0.0058,     0.5703,     0.0000],
        [    0.0001,     0.1270,     0.0004,     0.0008,     0.0008,     0.0150,     0.0034,     0.0222,     0.3594,     0.0027,     0.0034,     0.0041,     0.0092,     0.4492,     0.0027]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0131,  0.0295, -0.0301,  ...,  0.0235,  0.0166,  0.0077],
        [ 0.0180,  0.0143, -0.0121,  ..., -0.0245, -0.0162, -0.0298],
        [-0.0238,  0.0370,  0.0059,  ..., -0.0307, -0.0051,  0.0132],
        ...,
        [ 0.0287,  0.0075,  0.0069,  ...,  0.0218, -0.0148, -0.0138],
        [ 0.0038,  0.0125, -0.0245,  ...,  0.0347, -0.0403,  0.0026],
        [-0.0166, -0.0171,  0.0331,  ...,  0.0188, -0.0070, -0.0153]], device='cuda:0', requires_grad=True)
K: tensor([ 1.7812,  1.1953,  0.9961, -0.9766, -1.0469, -0.3105,  0.0713,  1.3906, -1.0781, -1.6719, -0.8398, -1.0078,  1.0156,  0.0747,  1.7266, -1.0781,  0.9062, -0.9922,  2.5781,  0.2090, -0.1650,  1.6406, -0.9648,  0.9297,  2.0781, -2.1250,  0.6602, -0.2812, -1.2109,  2.1094, -1.8125, -0.5078,
        -0.3379,  1.7812, -0.9648,  1.3672, -2.2188,  1.0781,  1.2344, -0.9688,  0.4805,  1.1484, -0.1523,  2.6719, -1.0703,  1.5625, -2.8906,  0.8633,  0.7227, -0.4531,  0.9453,  0.8789, -0.6328,  0.5430,  1.5703, -2.0312,  0.6445, -1.8672,  2.1250, -1.7734,  1.8281,  1.2891, -0.0154,  0.7344],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0060, -0.0063,  0.0153,  ...,  0.0255,  0.0016,  0.0105],
        [ 0.0109, -0.0085,  0.0154,  ..., -0.0355,  0.0141,  0.0287],
        [-0.0238,  0.0111, -0.0015,  ...,  0.0280,  0.0068,  0.0194],
        ...,
        [-0.0092,  0.0341,  0.0130,  ..., -0.0109,  0.0008, -0.0498],
        [ 0.0382, -0.0049, -0.0419,  ..., -0.0659,  0.0075,  0.0363],
        [-0.0159,  0.0095, -0.0588,  ..., -0.0100,  0.0166, -0.0229]], device='cuda:0', requires_grad=True)
Q: tensor([-1.0938, -0.9961,  1.7656, -0.4902, -0.1328, -0.2949,  1.2188,  0.8281, -0.8164, -0.0786, -1.1250, -0.4902, -1.9844, -0.7539, -1.8516, -0.2217, -1.2266, -0.0077,  2.3125, -0.1875, -0.9336,  1.1797, -0.0114,  0.9219,  0.1611,  0.4141, -0.8945,  0.3613,  0.7930,  1.4688, -0.3301,  0.1191,
        -0.7305,  0.7344,  1.7812, -1.4062, -1.0156, -0.4062, -0.8125,  0.5625, -0.1650,  0.0238, -0.2949,  1.8672, -0.4668,  0.0262, -1.2500,  0.2715,  1.6484, -0.4688,  1.3984, -0.7109, -0.6953,  1.7891,  1.9844, -1.6250,  0.1157, -0.6523,  0.2773, -0.0981, -1.7344,  0.3242, -1.2578,  0.5664],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  5.5938,  4.1250,  3.3906,  2.1875,  2.7500,  3.5781,  2.7188,  2.0469,  4.0938,  2.8438,  3.4688,  3.8594,  2.2188,  3.7812],
        [ 0.0000,  4.8125,  0.4219,  1.7891,  2.4375,  3.0938,  2.2031,  5.1875,  5.6875,  2.8281,  3.0312,  2.9062,  3.9375,  5.7188,  2.3750],
        [ 0.0000,  6.2812,  1.1172,  2.3125,  2.6562,  3.4219,  2.9844,  6.4375,  7.3750,  3.9844,  3.9219,  4.5312,  5.2812,  7.5000,  3.1094],
        [ 0.0000,  1.8203, -2.8281, -2.0781, -0.6484,  1.1953, -0.2266,  1.5078,  3.6406,  0.4492,  0.0830, -0.0144,  0.8281,  4.0938,  0.0535],
        [ 0.0000,  6.7500, -0.8320, -0.0194,  0.5820,  3.4688,  1.9688,  4.4062,  8.3125,  2.9844,  2.5156,  3.3125,  4.0625,  8.7500,  1.3984],
        [ 0.0000,  6.7812,  0.5664,  1.1953,  1.8359,  5.7812,  3.3906,  4.6562,  8.5000,  2.8125,  3.4375,  2.8281,  3.8125,  8.7500,  3.0156],
        [ 0.0000,  7.5000, -0.1050,  0.8516,  1.9688,  4.6875,  3.0781,  5.3125,  8.8125,  3.3281,  3.3906,  3.5312,  4.3438,  9.1250,  2.7812],
        [ 0.0000,  4.0625, -2.3281, -1.6016,  0.1006,  2.6719,  1.3047,  2.7031,  5.6562,  1.1562,  0.9531,  0.8320,  1.7891,  6.1875,  1.5000],
        [ 0.0000,  5.3438, -0.2188,  0.8594,  2.4688,  3.3125,  2.5469,  4.5938,  5.3438,  3.2344,  3.2812,  2.2500,  3.8906,  5.5312,  2.9062],
        [ 0.0000,  4.7812, -1.4922, -0.5820,  1.0156,  4.1875,  2.2031,  3.3750,  6.7812,  1.4922,  1.9531,  1.2109,  2.2031,  7.1875,  2.4062],
        [ 0.0000,  5.1875,  0.5508,  1.7656,  2.9688,  3.1719,  2.7969,  5.4375,  5.6250,  3.5469,  3.6719,  2.9844,  4.4688,  5.7188,  3.0469],
        [ 0.0000,  6.7812, -0.2695,  0.6055,  1.7188,  3.5000,  2.5000,  5.0000,  7.6250,  3.2031,  3.2344,  3.1875,  4.1250,  7.9688,  2.3906],
        [ 0.0000,  3.7031, -2.8438, -2.1406, -0.3945,  2.1250,  0.8164,  2.2656,  5.3125,  0.6836,  0.4805,  0.3242,  1.3047,  5.9062,  0.9922],
        [ 0.0000,  6.9062,  1.0859,  1.8203,  1.8516,  4.7812,  3.2969,  5.1875,  7.9688,  3.0781,  3.3125,  3.4844,  4.3125,  8.1875,  3.0469]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0055],
        [0.0149],
        [0.0064],
        [0.0225],
        [0.0079],
        [0.0136],
        [0.0039],
        [0.0063],
        [0.0064],
        [0.0065],
        [0.0059],
        [0.0038],
        [0.0046],
        [0.0047]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(.:0.1494 not:0.0630,:0.1631 and:0.0762ent:0.0635,:0.3789 not:0.0432ery:0.0630)
ery
------
		( not:0.0630,:0.1631 and:0.0762ent:0.0635,:0.3789 not:0.0432ery:0.0630,:0.1484)
, and blueberries.
The most common types of the most common types
@ 2050 train 5.3907 , allloss: 5.3912, dt: 1590.80ms, fracRes: 0.5701, norm(attn): 0.1768, norm(output): 5.9375, norm(x): 7.3006, norm(y): 0.9891, norm:0.9952, tok/sec: 82393.75, flops:86.47, batch-reuse:1
@ 2051 train 5.4780 , allloss: 5.4788, dt: 1222.43ms, fracRes: 0.5697, norm(attn): 0.1719, norm(output): 5.9688, norm(x): 7.3068, norm(y): 0.9889, norm:0.7198, tok/sec: 107222.37, flops:112.53, batch-reuse:1
@ 2052 train 5.4111 , allloss: 5.4112, dt: 1214.92ms, fracRes: 0.5698, norm(attn): 0.1709, norm(output): 5.9688, norm(x): 7.2887, norm(y): 0.9889, norm:1.1369, tok/sec: 107884.97, flops:113.23, batch-reuse:1
@ 2053 train 5.3949 , allloss: 5.3949, dt: 1196.67ms, fracRes: 0.5695, norm(attn): 0.1719, norm(output): 5.9688, norm(x): 7.3018, norm(y): 0.9890, norm:0.8596, tok/sec: 109530.89, flops:114.95, batch-reuse:1
@ 2054 train 5.3675 , allloss: 5.3676, dt: 1218.39ms, fracRes: 0.5695, norm(attn): 0.1758, norm(output): 5.9688, norm(x): 7.2933, norm(y): 0.9888, norm:1.0078, tok/sec: 107577.78, flops:112.90, batch-reuse:1
@ 2055 train 5.4349 , allloss: 5.4352, dt: 1211.95ms, fracRes: 0.5698, norm(attn): 0.1846, norm(output): 5.9688, norm(x): 7.2945, norm(y): 0.9887, norm:0.9727, tok/sec: 108149.97, flops:113.51, batch-reuse:1
@ 2056 train 5.4298 , allloss: 5.4299, dt: 1201.40ms, fracRes: 0.5694, norm(attn): 0.1816, norm(output): 5.9688, norm(x): 7.3129, norm(y): 0.9888, norm:0.9147, tok/sec: 109099.58, flops:114.50, batch-reuse:1
@ 2057 train 5.4845 , allloss: 5.4846, dt: 1185.56ms, fracRes: 0.5692, norm(attn): 0.1738, norm(output): 5.9688, norm(x): 7.2856, norm(y): 0.9886, norm:1.0692, tok/sec: 110556.64, flops:116.03, batch-reuse:1
@ 2058 train 5.4541 , allloss: 5.4543, dt: 1209.93ms, fracRes: 0.5693, norm(attn): 0.1699, norm(output): 5.9688, norm(x): 7.3208, norm(y): 0.9885, norm:1.2310, tok/sec: 108330.58, flops:113.69, batch-reuse:1
@ 2059 train 5.3445 , allloss: 5.3446, dt: 1203.95ms, fracRes: 0.5697, norm(attn): 0.1699, norm(output): 5.9688, norm(x): 7.3307, norm(y): 0.9886, norm:1.0265, tok/sec: 108867.88, flops:114.26, batch-reuse:1
@ 2060 train 5.3806 , allloss: 5.3833, dt: 1221.00ms, fracRes: 0.5699, norm(attn): 0.1719, norm(output): 5.9688, norm(x): 7.3331, norm(y): 0.9887, norm:1.2195, tok/sec: 107347.97, flops:112.66, batch-reuse:1
@ 2061 train 5.4424 , allloss: 5.4425, dt: 1237.43ms, fracRes: 0.5698, norm(attn): 0.1777, norm(output): 5.9688, norm(x): 7.3343, norm(y): 0.9886, norm:1.0510, tok/sec: 105922.53, flops:111.17, batch-reuse:1
@ 2062 train 5.3604 , allloss: 5.3607, dt: 1194.24ms, fracRes: 0.5700, norm(attn): 0.1836, norm(output): 5.9688, norm(x): 7.3307, norm(y): 0.9888, norm:0.8894, tok/sec: 109753.74, flops:115.19, batch-reuse:1
@ 2063 train 5.4442 , allloss: 5.4454, dt: 1212.13ms, fracRes: 0.5700, norm(attn): 0.1768, norm(output): 5.9688, norm(x): 7.3671, norm(y): 0.9889, norm:1.0594, tok/sec: 108133.50, flops:113.49, batch-reuse:1
@ 2064 train 5.3549 , allloss: 5.3553, dt: 1199.45ms, fracRes: 0.5699, norm(attn): 0.1729, norm(output): 5.9688, norm(x): 7.3712, norm(y): 0.9891, norm:1.2562, tok/sec: 109276.55, flops:114.69, batch-reuse:1
@ 2065 train 6.0499 , allloss: 6.0502, dt: 1219.76ms, fracRes: 0.5710, norm(attn): 0.1729, norm(output): 5.9688, norm(x): 7.3732, norm(y): 0.9887, norm:1.5989, tok/sec: 107457.06, flops:112.78, batch-reuse:1
@ 2066 train 5.4843 , allloss: 5.4866, dt: 1211.16ms, fracRes: 0.5710, norm(attn): 0.1777, norm(output): 5.9688, norm(x): 7.3967, norm(y): 0.9889, norm:1.3630, tok/sec: 108220.03, flops:113.58, batch-reuse:1
@ 2067 train 5.3969 , allloss: 5.3974, dt: 1207.02ms, fracRes: 0.5713, norm(attn): 0.1758, norm(output): 6.0000, norm(x): 7.4024, norm(y): 0.9890, norm:1.0699, tok/sec: 108591.04, flops:113.97, batch-reuse:1
@ 2068 train 5.4948 , allloss: 5.4949, dt: 1195.07ms, fracRes: 0.5713, norm(attn): 0.1748, norm(output): 5.9688, norm(x): 7.3725, norm(y): 0.9889, norm:1.2498, tok/sec: 109677.17, flops:115.11, batch-reuse:1
@ 2069 train 5.4865 , allloss: 5.4869, dt: 1214.26ms, fracRes: 0.5713, norm(attn): 0.1758, norm(output): 6.0000, norm(x): 7.3835, norm(y): 0.9887, norm:0.9483, tok/sec: 107943.84, flops:113.29, batch-reuse:1
@ 2070 train 5.5800 , allloss: 5.5803, dt: 1199.60ms, fracRes: 0.5710, norm(attn): 0.1777, norm(output): 5.9688, norm(x): 7.3582, norm(y): 0.9887, norm:1.2515, tok/sec: 109263.48, flops:114.67, batch-reuse:1
@ 2071 train 5.4649 , allloss: 5.4650, dt: 1191.40ms, fracRes: 0.5706, norm(attn): 0.1758, norm(output): 5.9688, norm(x): 7.3638, norm(y): 0.9889, norm:1.0051, tok/sec: 110015.13, flops:115.46, batch-reuse:1
@ 2072 train 5.4308 , allloss: 5.4309, dt: 1213.73ms, fracRes: 0.5704, norm(attn): 0.1768, norm(output): 5.9688, norm(x): 7.3587, norm(y): 0.9890, norm:1.0572, tok/sec: 107991.51, flops:113.34, batch-reuse:1
@ 2073 train 5.4014 , allloss: 5.4015, dt: 1235.48ms, fracRes: 0.5711, norm(attn): 0.1729, norm(output): 5.9688, norm(x): 7.3252, norm(y): 0.9889, norm:1.1502, tok/sec: 106090.22, flops:111.34, batch-reuse:1
@ 2074 train 5.4480 , allloss: 5.4481, dt: 1212.63ms, fracRes: 0.5712, norm(attn): 0.1719, norm(output): 5.9688, norm(x): 7.3335, norm(y): 0.9889, norm:1.0530, tok/sec: 108088.84, flops:113.44, batch-reuse:1
@ 2075 train 5.3702 , allloss: 5.3703, dt: 1210.25ms, fracRes: 0.5713, norm(attn): 0.1758, norm(output): 5.9688, norm(x): 7.2625, norm(y): 0.9887, norm:0.9310, tok/sec: 108301.81, flops:113.66, batch-reuse:1
@ 2076 train 5.3503 , allloss: 5.3503, dt: 1191.18ms, fracRes: 0.5716, norm(attn): 0.1836, norm(output): 6.0000, norm(x): 7.3254, norm(y): 0.9890, norm:0.8775, tok/sec: 110034.97, flops:115.48, batch-reuse:1
@ 2077 train 5.3962 , allloss: 5.3962, dt: 1200.00ms, fracRes: 0.5719, norm(attn): 0.1816, norm(output): 5.9688, norm(x): 7.3278, norm(y): 0.9891, norm:0.8178, tok/sec: 109226.64, flops:114.64, batch-reuse:1
@ 2078 train 5.5504 , allloss: 5.5504, dt: 1223.09ms, fracRes: 0.5720, norm(attn): 0.1768, norm(output): 6.0000, norm(x): 7.2954, norm(y): 0.9887, norm:1.0825, tok/sec: 107164.35, flops:112.47, batch-reuse:1
@ 2079 train 5.4933 , allloss: 5.4934, dt: 1204.53ms, fracRes: 0.5718, norm(attn): 0.1729, norm(output): 6.0000, norm(x): 7.3322, norm(y): 0.9889, norm:1.5971, tok/sec: 108816.17, flops:114.20, batch-reuse:1
@ 2080 train 5.4934 , allloss: 5.4935, dt: 1199.15ms, fracRes: 0.5722, norm(attn): 0.1748, norm(output): 6.0000, norm(x): 7.3531, norm(y): 0.9889, norm:1.0133, tok/sec: 109304.47, flops:114.72, batch-reuse:1
@ 2081 train 5.4706 , allloss: 5.4709, dt: 1216.80ms, fracRes: 0.5724, norm(attn): 0.1738, norm(output): 6.0000, norm(x): 7.3551, norm(y): 0.9891, norm:1.1525, tok/sec: 107718.88, flops:113.05, batch-reuse:1
@ 2082 train 5.3962 , allloss: 5.3963, dt: 1206.61ms, fracRes: 0.5727, norm(attn): 0.1797, norm(output): 6.0000, norm(x): 7.3595, norm(y): 0.9890, norm:0.8651, tok/sec: 108628.16, flops:114.01, batch-reuse:1
@ 2083 train 5.3829 , allloss: 5.3829, dt: 1218.27ms, fracRes: 0.5728, norm(attn): 0.1768, norm(output): 6.0000, norm(x): 7.4019, norm(y): 0.9889, norm:0.9911, tok/sec: 107588.25, flops:112.92, batch-reuse:1
@ 2084 train 5.4865 , allloss: 5.4865, dt: 1196.97ms, fracRes: 0.5726, norm(attn): 0.1758, norm(output): 6.0312, norm(x): 7.3798, norm(y): 0.9887, norm:1.0939, tok/sec: 109502.99, flops:114.93, batch-reuse:1
@ 2085 train 5.4486 , allloss: 5.4487, dt: 1218.45ms, fracRes: 0.5723, norm(attn): 0.1748, norm(output): 6.0000, norm(x): 7.4302, norm(y): 0.9890, norm:1.1408, tok/sec: 107572.67, flops:112.90, batch-reuse:1
@ 2086 train 5.3482 , allloss: 5.3483, dt: 1214.56ms, fracRes: 0.5723, norm(attn): 0.1758, norm(output): 6.0000, norm(x): 7.4525, norm(y): 0.9891, norm:0.8767, tok/sec: 107917.06, flops:113.26, batch-reuse:1
@ 2087 train 5.3708 , allloss: 5.3710, dt: 1225.64ms, fracRes: 0.5724, norm(attn): 0.1758, norm(output): 6.0000, norm(x): 7.4714, norm(y): 0.9891, norm:0.9744, tok/sec: 106941.80, flops:112.24, batch-reuse:1
@ 2088 train 5.4567 , allloss: 5.4567, dt: 1220.18ms, fracRes: 0.5721, norm(attn): 0.1748, norm(output): 6.0000, norm(x): 7.4808, norm(y): 0.9889, norm:1.0362, tok/sec: 107420.61, flops:112.74, batch-reuse:1
@ 2089 train 5.3766 , allloss: 5.3772, dt: 1217.47ms, fracRes: 0.5722, norm(attn): 0.1738, norm(output): 6.0000, norm(x): 7.4857, norm(y): 0.9889, norm:1.0697, tok/sec: 107659.59, flops:112.99, batch-reuse:1
@ 2090 train 5.3983 , allloss: 5.3985, dt: 1210.71ms, fracRes: 0.5719, norm(attn): 0.1758, norm(output): 6.0000, norm(x): 7.4820, norm(y): 0.9888, norm:0.9474, tok/sec: 108260.27, flops:113.62, batch-reuse:1
@ 2091 train 5.3881 , allloss: 5.3882, dt: 1234.07ms, fracRes: 0.5722, norm(attn): 0.1768, norm(output): 6.0000, norm(x): 7.4947, norm(y): 0.9889, norm:0.9406, tok/sec: 106210.84, flops:111.47, batch-reuse:1
@ 2092 train 5.4277 , allloss: 5.4281, dt: 1227.42ms, fracRes: 0.5717, norm(attn): 0.1826, norm(output): 6.0000, norm(x): 7.5294, norm(y): 0.9890, norm:1.1159, tok/sec: 106786.36, flops:112.07, batch-reuse:1
@ 2093 train 5.3388 , allloss: 5.3389, dt: 1198.13ms, fracRes: 0.5722, norm(attn): 0.1826, norm(output): 6.0000, norm(x): 7.4912, norm(y): 0.9891, norm:0.9367, tok/sec: 109396.94, flops:114.81, batch-reuse:1
@ 2094 train 5.3726 , allloss: 5.3727, dt: 1211.16ms, fracRes: 0.5720, norm(attn): 0.1738, norm(output): 6.0000, norm(x): 7.4759, norm(y): 0.9890, norm:0.9373, tok/sec: 108220.50, flops:113.58, batch-reuse:1
@ 2095 train 5.2983 , allloss: 5.2983, dt: 1203.13ms, fracRes: 0.5719, norm(attn): 0.1748, norm(output): 6.0000, norm(x): 7.4650, norm(y): 0.9891, norm:1.2432, tok/sec: 108942.40, flops:114.34, batch-reuse:1
@ 2096 train 5.4401 , allloss: 5.4403, dt: 1207.60ms, fracRes: 0.5719, norm(attn): 0.1729, norm(output): 6.0000, norm(x): 7.4578, norm(y): 0.9891, norm:0.8545, tok/sec: 108539.54, flops:113.91, batch-reuse:1
@ 2097 train 5.3215 , allloss: 5.3223, dt: 1212.59ms, fracRes: 0.5719, norm(attn): 0.1748, norm(output): 6.0000, norm(x): 7.4624, norm(y): 0.9891, norm:0.7734, tok/sec: 108092.81, flops:113.45, batch-reuse:1
@ 2098 train 5.2653 , allloss: 5.2654, dt: 1194.19ms, fracRes: 0.5714, norm(attn): 0.1787, norm(output): 6.0000, norm(x): 7.4772, norm(y): 0.9890, norm:0.8484, tok/sec: 109757.90, flops:115.19, batch-reuse:1
@ 2099 train 5.3565 , allloss: 5.3673, dt: 1214.57ms, fracRes: 0.5720, norm(attn): 0.1748, norm(output): 6.0000, norm(x): 7.4846, norm(y): 0.9890, norm:0.9223, tok/sec: 107916.17, flops:113.26, batch-reuse:1
@ 2100 train 5.3579 , allloss: 5.3580, dt: 1211.60ms, fracRes: 0.5723, norm(attn): 0.1758, norm(output): 6.0000, norm(x): 7.4875, norm(y): 0.9889, norm:1.0092, tok/sec: 108180.70, flops:113.54, batch-reuse:1
@ 2101 train 5.2709 , allloss: 5.2710, dt: 1195.32ms, fracRes: 0.5725, norm(attn): 0.1768, norm(output): 6.0000, norm(x): 7.4705, norm(y): 0.9889, norm:0.8489, tok/sec: 109654.02, flops:115.08, batch-reuse:1
@ 2102 train 5.3387 , allloss: 5.3388, dt: 1203.76ms, fracRes: 0.5718, norm(attn): 0.1768, norm(output): 6.0000, norm(x): 7.5255, norm(y): 0.9890, norm:1.0098, tok/sec: 108885.72, flops:114.28, batch-reuse:1
@ 2103 train 5.2742 , allloss: 5.2742, dt: 1202.96ms, fracRes: 0.5720, norm(attn): 0.1768, norm(output): 6.0000, norm(x): 7.5082, norm(y): 0.9889, norm:0.8203, tok/sec: 108958.10, flops:114.35, batch-reuse:1
@ 2104 train 5.3238 , allloss: 5.3238, dt: 1194.23ms, fracRes: 0.5719, norm(attn): 0.1777, norm(output): 6.0000, norm(x): 7.5374, norm(y): 0.9889, norm:0.8408, tok/sec: 109754.59, flops:115.19, batch-reuse:1
@ 2105 train 5.3834 , allloss: 5.3835, dt: 1186.65ms, fracRes: 0.5719, norm(attn): 0.1758, norm(output): 6.0000, norm(x): 7.5548, norm(y): 0.9889, norm:0.8111, tok/sec: 110455.19, flops:115.92, batch-reuse:1
@ 2106 train 5.3358 , allloss: 5.3359, dt: 1196.50ms, fracRes: 0.5717, norm(attn): 0.1738, norm(output): 6.0000, norm(x): 7.5662, norm(y): 0.9890, norm:0.9333, tok/sec: 109546.06, flops:114.97, batch-reuse:1
@ 2107 train 5.3370 , allloss: 5.3370, dt: 1204.49ms, fracRes: 0.5721, norm(attn): 0.1758, norm(output): 6.0000, norm(x): 7.5266, norm(y): 0.9890, norm:0.9188, tok/sec: 108819.46, flops:114.21, batch-reuse:1
@ 2108 train 5.4698 , allloss: 7.6183, dt: 1197.48ms, fracRes: 0.5716, norm(attn): 0.1797, norm(output): 6.0312, norm(x): 7.5218, norm(y): 0.9888, norm:2.7223, tok/sec: 109456.38, flops:114.88, batch-reuse:1
@ 2109 train 5.4299 , allloss: 5.4304, dt: 1205.05ms, fracRes: 0.5725, norm(attn): 0.1846, norm(output): 6.0000, norm(x): 7.5660, norm(y): 0.9889, norm:1.2037, tok/sec: 108769.08, flops:114.16, batch-reuse:1
@ 2110 train 5.2994 , allloss: 5.2995, dt: 1220.41ms, fracRes: 0.5728, norm(attn): 0.1826, norm(output): 5.9688, norm(x): 7.5805, norm(y): 0.9890, norm:0.7353, tok/sec: 107399.71, flops:112.72, batch-reuse:1
@ 2111 train 5.2862 , allloss: 5.2863, dt: 1202.93ms, fracRes: 0.5725, norm(attn): 0.1748, norm(output): 5.9688, norm(x): 7.6323, norm(y): 0.9893, norm:1.1073, tok/sec: 108960.19, flops:114.36, batch-reuse:1
@ 2112 train 5.3058 , allloss: 5.3240, dt: 1201.30ms, fracRes: 0.5727, norm(attn): 0.1738, norm(output): 5.9375, norm(x): 7.6320, norm(y): 0.9891, norm:0.8779, tok/sec: 109108.43, flops:114.51, batch-reuse:1
@ 2113 train 5.3263 , allloss: 5.3263, dt: 1189.33ms, fracRes: 0.5727, norm(attn): 0.1738, norm(output): 5.8438, norm(x): 7.6516, norm(y): 0.9890, norm:0.9255, tok/sec: 110206.84, flops:115.66, batch-reuse:1
@ 2114 train 5.3883 , allloss: 5.3884, dt: 1195.77ms, fracRes: 0.5728, norm(attn): 0.1758, norm(output): 5.8750, norm(x): 7.6578, norm(y): 0.9889, norm:1.1206, tok/sec: 109612.83, flops:115.04, batch-reuse:1
@ 2115 train 5.3582 , allloss: 5.3583, dt: 1192.04ms, fracRes: 0.5731, norm(attn): 0.1787, norm(output): 5.8125, norm(x): 7.6345, norm(y): 0.9889, norm:1.2306, tok/sec: 109955.87, flops:115.40, batch-reuse:1
@ 2116 train 5.3752 , allloss: 5.3753, dt: 1208.95ms, fracRes: 0.5730, norm(attn): 0.1797, norm(output): 5.8125, norm(x): 7.6781, norm(y): 0.9888, norm:0.8933, tok/sec: 108417.62, flops:113.79, batch-reuse:1
@ 2117 train 5.3072 , allloss: 5.3073, dt: 1214.39ms, fracRes: 0.5732, norm(attn): 0.1787, norm(output): 5.8125, norm(x): 7.6804, norm(y): 0.9887, norm:0.8766, tok/sec: 107932.54, flops:113.28, batch-reuse:1
@ 2118 train 5.3123 , allloss: 5.3124, dt: 1177.25ms, fracRes: 0.5722, norm(attn): 0.1719, norm(output): 5.8125, norm(x): 7.7090, norm(y): 0.9889, norm:0.7528, tok/sec: 111337.63, flops:116.85, batch-reuse:1
@ 2119 train 5.3788 , allloss: 5.3789, dt: 1215.40ms, fracRes: 0.5723, norm(attn): 0.1729, norm(output): 5.8438, norm(x): 7.7079, norm(y): 0.9889, norm:0.7366, tok/sec: 107842.98, flops:113.18, batch-reuse:1
@ 2120 train 5.3111 , allloss: 5.3111, dt: 1203.49ms, fracRes: 0.5723, norm(attn): 0.1777, norm(output): 5.8125, norm(x): 7.7611, norm(y): 0.9887, norm:0.8478, tok/sec: 108910.31, flops:114.30, batch-reuse:1
@ 2121 train 5.4042 , allloss: 5.4043, dt: 1190.33ms, fracRes: 0.5730, norm(attn): 0.1807, norm(output): 5.7500, norm(x): 7.7597, norm(y): 0.9885, norm:0.8829, tok/sec: 110114.31, flops:115.57, batch-reuse:1
@ 2122 train 5.3040 , allloss: 5.3040, dt: 1190.45ms, fracRes: 0.5732, norm(attn): 0.1836, norm(output): 5.8125, norm(x): 7.7860, norm(y): 0.9885, norm:0.8988, tok/sec: 110102.60, flops:115.55, batch-reuse:1
@ 2123 train 5.3550 , allloss: 5.3552, dt: 1199.41ms, fracRes: 0.5725, norm(attn): 0.1797, norm(output): 5.8125, norm(x): 7.7625, norm(y): 0.9887, norm:0.8262, tok/sec: 109280.10, flops:114.69, batch-reuse:1
@ 2124 train 5.2850 , allloss: 5.2852, dt: 1188.42ms, fracRes: 0.5720, norm(attn): 0.1768, norm(output): 5.7500, norm(x): 7.7765, norm(y): 0.9887, norm:0.7805, tok/sec: 110291.41, flops:115.75, batch-reuse:1
@ 2125 train 5.3318 , allloss: 5.3320, dt: 1203.10ms, fracRes: 0.5720, norm(attn): 0.1729, norm(output): 5.7500, norm(x): 7.7908, norm(y): 0.9887, norm:0.8613, tok/sec: 108945.51, flops:114.34, batch-reuse:1
@ 2126 train 5.2972 , allloss: 5.2975, dt: 1184.63ms, fracRes: 0.5717, norm(attn): 0.1729, norm(output): 5.8125, norm(x): 7.7921, norm(y): 0.9886, norm:1.0447, tok/sec: 110644.04, flops:116.12, batch-reuse:1
@ 2127 train 5.3425 , allloss: 5.3444, dt: 1190.72ms, fracRes: 0.5719, norm(attn): 0.1729, norm(output): 5.6875, norm(x): 7.7612, norm(y): 0.9886, norm:1.2030, tok/sec: 110078.04, flops:115.53, batch-reuse:1
@ 2128 train 5.2584 , allloss: 5.2589, dt: 1190.01ms, fracRes: 0.5724, norm(attn): 0.1768, norm(output): 5.7188, norm(x): 7.7501, norm(y): 0.9886, norm:0.8524, tok/sec: 110143.16, flops:115.60, batch-reuse:1
@ 2129 train 5.3035 , allloss: 5.3036, dt: 1205.35ms, fracRes: 0.5727, norm(attn): 0.1768, norm(output): 5.6875, norm(x): 7.7463, norm(y): 0.9886, norm:1.1364, tok/sec: 108741.91, flops:114.13, batch-reuse:1
@ 2130 train 5.2754 , allloss: 5.2758, dt: 1200.61ms, fracRes: 0.5723, norm(attn): 0.1729, norm(output): 5.6562, norm(x): 7.7701, norm(y): 0.9886, norm:0.9326, tok/sec: 109171.50, flops:114.58, batch-reuse:1
@ 2131 train 5.3353 , allloss: 5.3355, dt: 1202.82ms, fracRes: 0.5720, norm(attn): 0.1729, norm(output): 5.6875, norm(x): 7.8144, norm(y): 0.9887, norm:0.8748, tok/sec: 108970.62, flops:114.37, batch-reuse:1
@ 2132 train 5.3978 , allloss: 5.3978, dt: 1218.02ms, fracRes: 0.5715, norm(attn): 0.1748, norm(output): 5.8125, norm(x): 7.8644, norm(y): 0.9885, norm:1.0574, tok/sec: 107610.59, flops:112.94, batch-reuse:1
@ 2133 train 5.3520 , allloss: 5.3521, dt: 1214.79ms, fracRes: 0.5721, norm(attn): 0.1748, norm(output): 5.7500, norm(x): 7.9193, norm(y): 0.9887, norm:1.2390, tok/sec: 107896.68, flops:113.24, batch-reuse:1
@ 2134 train 5.2846 , allloss: 5.2850, dt: 1243.61ms, fracRes: 0.5730, norm(attn): 0.1777, norm(output): 5.7812, norm(x): 7.8629, norm(y): 0.9886, norm:1.0319, tok/sec: 105396.05, flops:110.62, batch-reuse:1
@ 2135 train 5.3346 , allloss: 5.3347, dt: 1253.54ms, fracRes: 0.5728, norm(attn): 0.1758, norm(output): 5.7500, norm(x): 7.8626, norm(y): 0.9885, norm:0.8897, tok/sec: 104561.72, flops:109.74, batch-reuse:1
@ 2136 train 5.2613 , allloss: 5.2616, dt: 1245.42ms, fracRes: 0.5729, norm(attn): 0.1748, norm(output): 5.7812, norm(x): 7.8863, norm(y): 0.9886, norm:0.8940, tok/sec: 105242.81, flops:110.45, batch-reuse:1
@ 2137 train 5.2351 , allloss: 5.2352, dt: 1189.30ms, fracRes: 0.5729, norm(attn): 0.1787, norm(output): 5.7500, norm(x): 7.8597, norm(y): 0.9885, norm:1.1016, tok/sec: 110209.65, flops:115.67, batch-reuse:1
@ 2138 train 5.2702 , allloss: 5.2705, dt: 1208.94ms, fracRes: 0.5729, norm(attn): 0.1816, norm(output): 5.6875, norm(x): 7.8201, norm(y): 0.9887, norm:0.9823, tok/sec: 108419.39, flops:113.79, batch-reuse:1
@ 2139 train 5.3299 , allloss: 5.3304, dt: 1212.51ms, fracRes: 0.5733, norm(attn): 0.1748, norm(output): 5.7500, norm(x): 7.8197, norm(y): 0.9886, norm:0.8647, tok/sec: 108099.50, flops:113.45, batch-reuse:1
@ 2140 train 5.2825 , allloss: 5.2827, dt: 1217.96ms, fracRes: 0.5734, norm(attn): 0.1738, norm(output): 5.7500, norm(x): 7.7847, norm(y): 0.9886, norm:0.7567, tok/sec: 107616.32, flops:112.95, batch-reuse:1
@ 2141 train 5.2745 , allloss: 5.2746, dt: 1205.29ms, fracRes: 0.5731, norm(attn): 0.1768, norm(output): 5.7500, norm(x): 7.7951, norm(y): 0.9886, norm:0.9349, tok/sec: 108747.09, flops:114.13, batch-reuse:1
@ 2142 train 5.2219 , allloss: 5.2222, dt: 1218.57ms, fracRes: 0.5732, norm(attn): 0.1797, norm(output): 5.7500, norm(x): 7.7930, norm(y): 0.9886, norm:0.9291, tok/sec: 107562.31, flops:112.89, batch-reuse:1
@ 2143 train 5.3382 , allloss: 5.3383, dt: 1198.22ms, fracRes: 0.5731, norm(attn): 0.1797, norm(output): 5.8125, norm(x): 7.8154, norm(y): 0.9886, norm:0.9988, tok/sec: 109389.01, flops:114.81, batch-reuse:1
@ 2144 train 5.2754 , allloss: 5.2754, dt: 1248.24ms, fracRes: 0.5726, norm(attn): 0.1768, norm(output): 5.8125, norm(x): 7.8492, norm(y): 0.9888, norm:1.0485, tok/sec: 105005.49, flops:110.21, batch-reuse:1
@ 2145 train 5.3171 , allloss: 5.3171, dt: 1244.54ms, fracRes: 0.5732, norm(attn): 0.1768, norm(output): 5.8125, norm(x): 7.8556, norm(y): 0.9888, norm:1.1037, tok/sec: 105317.83, flops:110.53, batch-reuse:1
@ 2146 train 5.6518 , allloss: 5.6522, dt: 1241.29ms, fracRes: 0.5734, norm(attn): 0.1748, norm(output): 5.7188, norm(x): 7.8640, norm(y): 0.9885, norm:1.1912, tok/sec: 105593.59, flops:110.82, batch-reuse:1
@ 2147 train 5.2245 , allloss: 5.2245, dt: 1218.48ms, fracRes: 0.5736, norm(attn): 0.1768, norm(output): 5.7500, norm(x): 7.8877, norm(y): 0.9886, norm:1.1686, tok/sec: 107570.04, flops:112.90, batch-reuse:1
@ 2148 train 5.2515 , allloss: 5.2515, dt: 1211.98ms, fracRes: 0.5742, norm(attn): 0.1816, norm(output): 5.7500, norm(x): 7.8721, norm(y): 0.9887, norm:1.0594, tok/sec: 108146.99, flops:113.50, batch-reuse:1
@ 2149 train 5.2536 , allloss: 5.2537, dt: 1210.71ms, fracRes: 0.5740, norm(attn): 0.1807, norm(output): 5.6562, norm(x): 7.8243, norm(y): 0.9887, norm:1.0456, tok/sec: 108260.05, flops:113.62, batch-reuse:1
@ 2150 train 5.2780 , allloss: 5.2781, dt: 1202.85ms, fracRes: 0.5737, norm(attn): 0.1777, norm(output): 5.7500, norm(x): 7.8507, norm(y): 0.9889, norm:0.8965, tok/sec: 108967.95, flops:114.36, batch-reuse:1
@ 2151 train 5.2213 , allloss: 5.2214, dt: 1198.82ms, fracRes: 0.5736, norm(attn): 0.1729, norm(output): 5.8125, norm(x): 7.8516, norm(y): 0.9888, norm:0.9270, tok/sec: 109334.23, flops:114.75, batch-reuse:1
@ 2152 train 5.2858 , allloss: 5.2861, dt: 1210.69ms, fracRes: 0.5734, norm(attn): 0.1729, norm(output): 5.8125, norm(x): 7.8534, norm(y): 0.9887, norm:1.0592, tok/sec: 108262.25, flops:113.62, batch-reuse:1
@ 2153 train 5.2574 , allloss: 5.2575, dt: 1197.90ms, fracRes: 0.5735, norm(attn): 0.1748, norm(output): 5.6875, norm(x): 7.8951, norm(y): 0.9886, norm:0.9580, tok/sec: 109418.49, flops:114.84, batch-reuse:1
@ 2154 train 5.2907 , allloss: 5.2916, dt: 1208.02ms, fracRes: 0.5735, norm(attn): 0.1787, norm(output): 5.8125, norm(x): 7.9355, norm(y): 0.9886, norm:1.0020, tok/sec: 108501.77, flops:113.87, batch-reuse:1
@ 2155 train 5.2920 , allloss: 5.2923, dt: 1193.15ms, fracRes: 0.5735, norm(attn): 0.1816, norm(output): 5.8125, norm(x): 7.9627, norm(y): 0.9887, norm:0.9472, tok/sec: 109853.61, flops:115.29, batch-reuse:1
@ 2156 train 5.2534 , allloss: 5.2537, dt: 1187.36ms, fracRes: 0.5739, norm(attn): 0.1797, norm(output): 5.8125, norm(x): 7.9483, norm(y): 0.9888, norm:0.9563, tok/sec: 110389.05, flops:115.86, batch-reuse:1
@ 2157 train 5.3238 , allloss: 5.3242, dt: 1210.27ms, fracRes: 0.5734, norm(attn): 0.1807, norm(output): 5.8125, norm(x): 7.9525, norm(y): 0.9885, norm:0.8649, tok/sec: 108299.68, flops:113.66, batch-reuse:1
@ 2158 train 5.2970 , allloss: 5.2970, dt: 1189.38ms, fracRes: 0.5737, norm(attn): 0.1787, norm(output): 5.7812, norm(x): 7.9787, norm(y): 0.9887, norm:0.6665, tok/sec: 110202.25, flops:115.66, batch-reuse:1
@ 2159 train 5.2511 , allloss: 5.2511, dt: 1203.92ms, fracRes: 0.5738, norm(attn): 0.1768, norm(output): 5.8438, norm(x): 8.0333, norm(y): 0.9887, norm:1.0664, tok/sec: 108870.77, flops:114.26, batch-reuse:1
@ 2160 train 5.2971 , allloss: 5.2972, dt: 1220.95ms, fracRes: 0.5737, norm(attn): 0.1748, norm(output): 5.7500, norm(x): 7.9738, norm(y): 0.9884, norm:0.9148, tok/sec: 107352.69, flops:112.67, batch-reuse:1
@ 2161 train 5.3131 , allloss: 5.3131, dt: 1200.13ms, fracRes: 0.5742, norm(attn): 0.1768, norm(output): 5.8125, norm(x): 8.0113, norm(y): 0.9885, norm:1.0577, tok/sec: 109215.21, flops:114.62, batch-reuse:1
@ 2162 train 5.2089 , allloss: 5.2089, dt: 1236.21ms, fracRes: 0.5741, norm(attn): 0.1797, norm(output): 5.7188, norm(x): 7.9867, norm(y): 0.9886, norm:0.8791, tok/sec: 106027.22, flops:111.28, batch-reuse:1
@ 2163 train 5.2860 , allloss: 5.2862, dt: 1217.96ms, fracRes: 0.5740, norm(attn): 0.1758, norm(output): 5.7812, norm(x): 7.9729, norm(y): 0.9886, norm:0.8170, tok/sec: 107615.77, flops:112.94, batch-reuse:1
@ 2164 train 5.1652 , allloss: 5.1653, dt: 1220.56ms, fracRes: 0.5737, norm(attn): 0.1758, norm(output): 5.6562, norm(x): 7.9007, norm(y): 0.9886, norm:0.8663, tok/sec: 107386.49, flops:112.70, batch-reuse:1
@ 2165 train 5.1571 , allloss: 5.1580, dt: 1208.58ms, fracRes: 0.5734, norm(attn): 0.1738, norm(output): 5.6875, norm(x): 7.9061, norm(y): 0.9888, norm:0.8970, tok/sec: 108451.24, flops:113.82, batch-reuse:1
@ 2166 train 5.2476 , allloss: 5.2476, dt: 1223.17ms, fracRes: 0.5734, norm(attn): 0.1758, norm(output): 5.7188, norm(x): 7.9204, norm(y): 0.9886, norm:1.1192, tok/sec: 107157.71, flops:112.46, batch-reuse:1
@ 2167 train 5.2906 , allloss: 5.2915, dt: 1218.09ms, fracRes: 0.5737, norm(attn): 0.1816, norm(output): 5.6875, norm(x): 7.9284, norm(y): 0.9884, norm:1.3387, tok/sec: 107604.38, flops:112.93, batch-reuse:1
@ 2168 train 5.2645 , allloss: 5.2656, dt: 1213.32ms, fracRes: 0.5742, norm(attn): 0.1826, norm(output): 5.7188, norm(x): 7.9109, norm(y): 0.9883, norm:0.9453, tok/sec: 108027.45, flops:113.38, batch-reuse:1
@ 2169 train 5.2885 , allloss: 5.2891, dt: 1210.99ms, fracRes: 0.5741, norm(attn): 0.1787, norm(output): 5.7500, norm(x): 7.9613, norm(y): 0.9884, norm:0.8763, tok/sec: 108235.22, flops:113.59, batch-reuse:1
@ 2170 train 5.2750 , allloss: 5.2761, dt: 1198.29ms, fracRes: 0.5743, norm(attn): 0.1816, norm(output): 5.8125, norm(x): 7.9982, norm(y): 0.9884, norm:1.0413, tok/sec: 109382.98, flops:114.80, batch-reuse:1
@ 2171 train 5.3001 , allloss: 5.3001, dt: 1214.70ms, fracRes: 0.5744, norm(attn): 0.1865, norm(output): 5.7812, norm(x): 7.9692, norm(y): 0.9884, norm:1.0754, tok/sec: 107904.52, flops:113.25, batch-reuse:1
@ 2172 train 5.2980 , allloss: 5.2980, dt: 1237.44ms, fracRes: 0.5740, norm(attn): 0.1855, norm(output): 5.7500, norm(x): 7.9849, norm(y): 0.9884, norm:0.8776, tok/sec: 105922.16, flops:111.17, batch-reuse:1
@ 2173 train 5.2274 , allloss: 5.2275, dt: 1239.14ms, fracRes: 0.5743, norm(attn): 0.1816, norm(output): 5.7812, norm(x): 7.9930, norm(y): 0.9884, norm:1.0694, tok/sec: 105776.28, flops:111.01, batch-reuse:1
@ 2174 train 5.2971 , allloss: 5.2972, dt: 1200.73ms, fracRes: 0.5743, norm(attn): 0.1797, norm(output): 5.8125, norm(x): 8.0173, norm(y): 0.9884, norm:1.0553, tok/sec: 109160.60, flops:114.57, batch-reuse:1
@ 2175 train 5.2481 , allloss: 5.2487, dt: 1206.54ms, fracRes: 0.5739, norm(attn): 0.1729, norm(output): 5.8125, norm(x): 8.0585, norm(y): 0.9885, norm:1.0746, tok/sec: 108634.56, flops:114.01, batch-reuse:1
@ 2176 train 5.2240 , allloss: 5.2241, dt: 1183.11ms, fracRes: 0.5739, norm(attn): 0.1719, norm(output): 5.8125, norm(x): 8.0516, norm(y): 0.9886, norm:0.9655, tok/sec: 110785.58, flops:116.27, batch-reuse:1
@ 2177 train 5.2181 , allloss: 5.2181, dt: 1226.38ms, fracRes: 0.5744, norm(attn): 0.1738, norm(output): 5.7500, norm(x): 8.0512, norm(y): 0.9885, norm:0.8763, tok/sec: 106877.04, flops:112.17, batch-reuse:1
@ 2178 train 5.2913 , allloss: 5.2920, dt: 1197.95ms, fracRes: 0.5746, norm(attn): 0.1787, norm(output): 5.8125, norm(x): 8.0679, norm(y): 0.9884, norm:0.9177, tok/sec: 109413.18, flops:114.83, batch-reuse:1
@ 2179 train 5.2809 , allloss: 5.2810, dt: 1189.59ms, fracRes: 0.5747, norm(attn): 0.1816, norm(output): 5.8125, norm(x): 8.0466, norm(y): 0.9884, norm:0.9762, tok/sec: 110182.81, flops:115.64, batch-reuse:1
@ 2180 train 5.1834 , allloss: 5.1835, dt: 1211.77ms, fracRes: 0.5746, norm(attn): 0.1816, norm(output): 5.7500, norm(x): 8.0622, norm(y): 0.9886, norm:1.0133, tok/sec: 108165.78, flops:113.52, batch-reuse:1
@ 2181 train 5.2117 , allloss: 5.2118, dt: 1205.39ms, fracRes: 0.5746, norm(attn): 0.1816, norm(output): 5.8125, norm(x): 8.0466, norm(y): 0.9886, norm:0.9401, tok/sec: 108738.15, flops:114.12, batch-reuse:1
@ 2182 train 5.2946 , allloss: 5.2947, dt: 1235.65ms, fracRes: 0.5745, norm(attn): 0.1816, norm(output): 5.8125, norm(x): 8.0318, norm(y): 0.9886, norm:0.7231, tok/sec: 106075.40, flops:111.33, batch-reuse:1
@ 2183 train 5.1176 , allloss: 5.1177, dt: 1218.49ms, fracRes: 0.5742, norm(attn): 0.1787, norm(output): 5.8125, norm(x): 8.0172, norm(y): 0.9887, norm:0.9882, tok/sec: 107569.05, flops:112.90, batch-reuse:1
@ 2184 train 5.1064 , allloss: 5.1066, dt: 1214.24ms, fracRes: 0.5742, norm(attn): 0.1758, norm(output): 5.7812, norm(x): 8.0073, norm(y): 0.9886, norm:1.2355, tok/sec: 107945.30, flops:113.29, batch-reuse:1
@ 2185 train 5.2552 , allloss: 5.2554, dt: 1201.92ms, fracRes: 0.5745, norm(attn): 0.1738, norm(output): 5.8125, norm(x): 7.9641, norm(y): 0.9886, norm:0.9286, tok/sec: 109051.75, flops:114.45, batch-reuse:1
@ 2186 train 5.1493 , allloss: 5.1494, dt: 1190.39ms, fracRes: 0.5746, norm(attn): 0.1758, norm(output): 5.7500, norm(x): 7.9303, norm(y): 0.9886, norm:1.1410, tok/sec: 110108.75, flops:115.56, batch-reuse:1
@ 2187 train 5.1256 , allloss: 5.1257, dt: 1212.38ms, fracRes: 0.5748, norm(attn): 0.1768, norm(output): 5.8125, norm(x): 7.9192, norm(y): 0.9885, norm:0.7913, tok/sec: 108111.07, flops:113.46, batch-reuse:1
@ 2188 train 5.0965 , allloss: 5.0966, dt: 1227.66ms, fracRes: 0.5745, norm(attn): 0.1807, norm(output): 5.8125, norm(x): 7.9312, norm(y): 0.9885, norm:1.0094, tok/sec: 106765.58, flops:112.05, batch-reuse:1
@ 2189 train 5.1496 , allloss: 5.1497, dt: 1254.70ms, fracRes: 0.5746, norm(attn): 0.1797, norm(output): 5.8125, norm(x): 7.9380, norm(y): 0.9884, norm:0.8683, tok/sec: 104464.44, flops:109.64, batch-reuse:1
@ 2190 train 5.0962 , allloss: 5.0963, dt: 1247.91ms, fracRes: 0.5742, norm(attn): 0.1816, norm(output): 5.8125, norm(x): 7.9886, norm(y): 0.9883, norm:0.9748, tok/sec: 105033.61, flops:110.23, batch-reuse:1
@ 2191 train 5.1908 , allloss: 5.1911, dt: 1238.43ms, fracRes: 0.5741, norm(attn): 0.1777, norm(output): 5.8125, norm(x): 7.9995, norm(y): 0.9884, norm:0.9850, tok/sec: 105837.45, flops:111.08, batch-reuse:1
@ 2192 train 5.1461 , allloss: 5.1462, dt: 1220.44ms, fracRes: 0.5745, norm(attn): 0.1777, norm(output): 5.7500, norm(x): 7.9877, norm(y): 0.9885, norm:0.8735, tok/sec: 107397.17, flops:112.72, batch-reuse:1
@ 2193 train 5.1300 , allloss: 5.1301, dt: 1246.26ms, fracRes: 0.5750, norm(attn): 0.1816, norm(output): 5.8125, norm(x): 7.9993, norm(y): 0.9884, norm:0.9471, tok/sec: 105172.12, flops:110.38, batch-reuse:1
@ 2194 train 5.2150 , allloss: 5.2151, dt: 1227.79ms, fracRes: 0.5751, norm(attn): 0.1816, norm(output): 5.7500, norm(x): 8.0277, norm(y): 0.9883, norm:1.0339, tok/sec: 106754.01, flops:112.04, batch-reuse:1
@ 2195 train 5.2508 , allloss: 5.2509, dt: 1195.04ms, fracRes: 0.5749, norm(attn): 0.1816, norm(output): 5.7812, norm(x): 8.0930, norm(y): 0.9883, norm:1.1587, tok/sec: 109679.55, flops:115.11, batch-reuse:1
@ 2196 train 5.2103 , allloss: 5.2103, dt: 1202.41ms, fracRes: 0.5744, norm(attn): 0.1758, norm(output): 5.8125, norm(x): 8.1035, norm(y): 0.9883, norm:0.8438, tok/sec: 109007.85, flops:114.41, batch-reuse:1
@ 2197 train 5.0938 , allloss: 5.0938, dt: 1211.92ms, fracRes: 0.5737, norm(attn): 0.1758, norm(output): 5.8125, norm(x): 8.1192, norm(y): 0.9884, norm:0.9613, tok/sec: 108152.56, flops:113.51, batch-reuse:1
@ 2198 train 5.1841 , allloss: 5.1841, dt: 1231.79ms, fracRes: 0.5732, norm(attn): 0.1777, norm(output): 5.8125, norm(x): 8.1188, norm(y): 0.9885, norm:1.0721, tok/sec: 106407.33, flops:111.68, batch-reuse:1
@ 2199 train 5.1885 , allloss: 5.1885, dt: 1238.72ms, fracRes: 0.5735, norm(attn): 0.1836, norm(output): 5.8125, norm(x): 8.0805, norm(y): 0.9884, norm:0.9732, tok/sec: 105812.33, flops:111.05, batch-reuse:1
@ 2200 train 5.1557 , allloss: 5.1558, dt: 1187.88ms, fracRes: 0.5739, norm(attn): 0.1816, norm(output): 5.8125, norm(x): 8.0838, norm(y): 0.9885, norm:0.7840, tok/sec: 110341.44, flops:115.81, batch-reuse:1
@ 2201 train 5.1741 , allloss: 5.1744, dt: 1219.58ms, fracRes: 0.5740, norm(attn): 0.1738, norm(output): 5.8125, norm(x): 8.0541, norm(y): 0.9885, norm:0.8611, tok/sec: 107472.69, flops:112.79, batch-reuse:1
@ 2202 train 5.2638 , allloss: 5.2639, dt: 1205.99ms, fracRes: 0.5742, norm(attn): 0.1738, norm(output): 5.8125, norm(x): 8.0215, norm(y): 0.9883, norm:0.9933, tok/sec: 108683.99, flops:114.07, batch-reuse:1
@ 2203 train 5.1851 , allloss: 5.1854, dt: 1225.73ms, fracRes: 0.5742, norm(attn): 0.1748, norm(output): 5.8125, norm(x): 7.9972, norm(y): 0.9883, norm:0.9450, tok/sec: 106934.02, flops:112.23, batch-reuse:1
@ 2204 train 5.2015 , allloss: 5.2016, dt: 1225.01ms, fracRes: 0.5740, norm(attn): 0.1777, norm(output): 5.7812, norm(x): 8.0239, norm(y): 0.9884, norm:1.0349, tok/sec: 106996.75, flops:112.30, batch-reuse:1
@ 2205 train 5.2168 , allloss: 5.2169, dt: 1225.53ms, fracRes: 0.5741, norm(attn): 0.1836, norm(output): 5.8125, norm(x): 8.0421, norm(y): 0.9884, norm:1.2699, tok/sec: 106950.99, flops:112.25, batch-reuse:1
@ 2206 train 5.1117 , allloss: 5.1118, dt: 1220.07ms, fracRes: 0.5741, norm(attn): 0.1846, norm(output): 5.8438, norm(x): 8.0597, norm(y): 0.9885, norm:0.9170, tok/sec: 107429.62, flops:112.75, batch-reuse:1
@ 2207 train 5.1291 , allloss: 5.1292, dt: 1193.85ms, fracRes: 0.5740, norm(attn): 0.1787, norm(output): 5.8125, norm(x): 8.0640, norm(y): 0.9886, norm:0.9764, tok/sec: 109789.51, flops:115.23, batch-reuse:1
@ 2208 train 5.2414 , allloss: 5.2414, dt: 1226.57ms, fracRes: 0.5743, norm(attn): 0.1797, norm(output): 5.8125, norm(x): 8.0622, norm(y): 0.9885, norm:1.0600, tok/sec: 106860.73, flops:112.15, batch-reuse:1
@ 2209 train 5.0861 , allloss: 5.0862, dt: 1214.71ms, fracRes: 0.5745, norm(attn): 0.1826, norm(output): 5.8125, norm(x): 8.0425, norm(y): 0.9885, norm:0.9556, tok/sec: 107903.71, flops:113.25, batch-reuse:1
@ 2210 train 5.0338 , allloss: 5.0338, dt: 1205.09ms, fracRes: 0.5743, norm(attn): 0.1816, norm(output): 5.8125, norm(x): 8.0813, norm(y): 0.9886, norm:0.9444, tok/sec: 108764.89, flops:114.15, batch-reuse:1
@ 2211 train 5.1921 , allloss: 5.1922, dt: 1197.35ms, fracRes: 0.5737, norm(attn): 0.1777, norm(output): 5.8125, norm(x): 8.1558, norm(y): 0.9887, norm:1.2143, tok/sec: 109468.52, flops:114.89, batch-reuse:1
@ 2212 train 5.0636 , allloss: 5.0638, dt: 1194.21ms, fracRes: 0.5742, norm(attn): 0.1797, norm(output): 5.8438, norm(x): 8.1801, norm(y): 0.9886, norm:1.0042, tok/sec: 109756.30, flops:115.19, batch-reuse:1
@ 2213 train 5.4285 , allloss: 5.4286, dt: 1178.42ms, fracRes: 0.5745, norm(attn): 0.1816, norm(output): 5.8750, norm(x): 8.1491, norm(y): 0.9882, norm:1.0996, tok/sec: 111227.00, flops:116.73, batch-reuse:1
@ 2214 train 5.2966 , allloss: 5.2967, dt: 1213.82ms, fracRes: 0.5752, norm(attn): 0.1787, norm(output): 5.8125, norm(x): 8.1469, norm(y): 0.9883, norm:1.3756, tok/sec: 107983.23, flops:113.33, batch-reuse:1
@ 2215 train 5.1998 , allloss: 5.1999, dt: 1182.45ms, fracRes: 0.5741, norm(attn): 0.1758, norm(output): 5.8125, norm(x): 8.1623, norm(y): 0.9884, norm:1.1932, tok/sec: 110847.41, flops:116.34, batch-reuse:1
@ 2216 train 5.2405 , allloss: 5.2406, dt: 1187.06ms, fracRes: 0.5740, norm(attn): 0.1748, norm(output): 5.8125, norm(x): 8.1767, norm(y): 0.9884, norm:1.0233, tok/sec: 110417.30, flops:115.89, batch-reuse:1
@ 2217 train 5.1317 , allloss: 5.1320, dt: 1207.79ms, fracRes: 0.5742, norm(attn): 0.1768, norm(output): 5.8125, norm(x): 8.1529, norm(y): 0.9884, norm:1.0803, tok/sec: 108521.95, flops:113.90, batch-reuse:1
