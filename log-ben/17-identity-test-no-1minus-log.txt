Threshold: 0.1
Enable layer loss: False
MAX LEARNING RATE: 0.00015
Experiment name: 17-identity-test-no-1minus
MLPSCALE: 4
Experiment description: Transformer, max LR 6e-4
Setting:
========
self.compiler = BenCompilerNoOp(config)
self.execute = VanillaExecute(config) 
========
y = self.ln_1(x)
attn, xWeights, scores = self.attn(y, y, print_weights=print_weights)
program = self.compiler(y)
machineOutput = self.execute(program, attn)
x = xWeights * x + machineOutput
======== 
VALUEMATRIX=True
REUSE_WEIGHTS=False
MLP_SCALE=4
MEASURE_SELF_CONTRIBUTION=False
NEW_ALL_LAYER_LOSS=False
MATRIX_NUM_PARAMS=4096
MLPMAT_INNER_SIZE=64
DELETE_SELF_CONTRIBUTION=False
EXTRACT_SELF_CONTRIBUTION=False
ATTENTION_SINK=True
IDENTITY_LOSS=True

Warmup steps: 1000
total desired batch size: 131072
Mini-batch size: 8*1024
=> calculated gradient accumulation steps: 16
=> calculated gradient accumulation steps: 16
Training max steps: 300001Num GPUs: 1{'block_size': 1024, 'vocab_size': 50304, 'n_layer': 12, 'n_head': 12, 'n_embd': 768}
num decayed parameter tensors: 50, with 124,354,560 parameters
num non-decayed parameter tensors: 74, with 84,480 parameters
@ 0 train 10.9777 , allloss: 21.6510, dt: 4324.53ms, fracRes: 0.0064, norm(attn): 0.0449, norm(output): 0.0864, norm(x): 0.0874, norm(y): 0.9995, norm:47.9121, tok/sec: 30308.97, flops:26.54, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3203, 0.6797, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3418, 0.2734, 0.3848, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2197, 0.3105, 0.2236, 0.2471, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1865, 0.1123, 0.2969, 0.2139, 0.1885, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1816, 0.1514, 0.2031, 0.1768, 0.1436, 0.1426, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1089, 0.1836, 0.1260, 0.1187, 0.0874, 0.1455, 0.2305, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1147, 0.2266, 0.0928, 0.0898, 0.1152, 0.1621, 0.0796, 0.1191, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0938, 0.1187, 0.0898, 0.1021, 0.0928, 0.0903, 0.1631, 0.1494, 0.1006, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0957, 0.1377, 0.0850, 0.0991, 0.0801, 0.1318, 0.0942, 0.0708, 0.0903, 0.1147, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1021, 0.0427, 0.1050, 0.0815, 0.0625, 0.1167, 0.0801, 0.0684, 0.1060, 0.0801, 0.1553, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0732, 0.0869, 0.0591, 0.1011, 0.0723, 0.1177, 0.1245, 0.0908, 0.0825, 0.0762, 0.0601, 0.0549, 0.0000, 0.0000, 0.0000],
        [0.0757, 0.0835, 0.1001, 0.0908, 0.0554, 0.0874, 0.0684, 0.0625, 0.1162, 0.0444, 0.0461, 0.0732, 0.0962, 0.0000, 0.0000],
        [0.0732, 0.1069, 0.0540, 0.0635, 0.0669, 0.0491, 0.1079, 0.1045, 0.0938, 0.0859, 0.0386, 0.0366, 0.0654, 0.0540, 0.0000],
        [0.0718, 0.0564, 0.0767, 0.0500, 0.1167, 0.0579, 0.0422, 0.0718, 0.0540, 0.0889, 0.0703, 0.0679, 0.1011, 0.0400, 0.0342]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0137,  0.0020, -0.0062,  ..., -0.0134,  0.0247, -0.0020],
        [-0.0204,  0.0038, -0.0150,  ..., -0.0056,  0.0012,  0.0225],
        [-0.0109,  0.0281, -0.0209,  ..., -0.0069,  0.0160, -0.0151],
        ...,
        [-0.0198,  0.0081,  0.0001,  ..., -0.0018,  0.0236,  0.0202],
        [-0.0144,  0.0056, -0.0194,  ..., -0.0231, -0.0164,  0.0044],
        [-0.0082,  0.0058, -0.0062,  ..., -0.0076, -0.0117,  0.0144]], device='cuda:0', requires_grad=True)
K: tensor([ 0.4355,  0.5039, -0.6445,  0.8633,  0.1436,  0.0042,  0.8008,  0.4414,  0.1826,  0.0078,  0.5117,  0.0157, -0.9180, -0.1250, -0.2344, -1.1172, -0.4277,  0.3984, -0.4004,  0.3594,  0.9766,  0.0442,  0.5703, -0.5430,  0.0361,  0.8008, -0.1118, -0.5273,  1.0938,  0.1768, -0.0483, -0.4258,
        -0.5117, -0.7148,  0.2373,  0.4824, -0.8828, -0.1973, -0.2461, -1.1328,  0.0767, -0.0684, -0.3066,  1.7734, -0.0269,  0.2451,  0.2080,  0.4473,  0.1030, -0.3027,  0.0112, -0.5859, -0.5000,  0.3320,  0.0903, -0.1416,  0.2773,  0.2676,  0.9258, -0.4160, -0.0228,  0.4258, -0.2500, -0.0398],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0010, -0.0037,  0.0101,  ...,  0.0100, -0.0092,  0.0009],
        [-0.0042, -0.0143, -0.0198,  ...,  0.0173,  0.0230, -0.0195],
        [-0.0226,  0.0494,  0.0357,  ..., -0.0278, -0.0254, -0.0098],
        ...,
        [ 0.0287,  0.0269,  0.0507,  ...,  0.0173,  0.0095,  0.0361],
        [ 0.0075, -0.0102,  0.0267,  ...,  0.0234,  0.0138,  0.0220],
        [-0.0119, -0.0191,  0.0115,  ..., -0.0311,  0.0170, -0.0113]], device='cuda:0', requires_grad=True)
Q: tensor([    -0.1035,     -0.1895,     -0.4512,     -1.2734,      0.3047,      0.0549,     -0.5547,     -0.0204,     -0.7461,      0.2773,     -0.5000,     -0.1719,     -0.0288,     -0.9805,      0.1445,      0.2559,      0.2676,     -0.0515,     -0.2354,      0.5352,     -0.3887,      0.7031,
            -0.2363,      0.3984,     -0.3105,     -0.3457,     -0.0166,     -0.2578,     -0.5312,     -0.3223,     -0.2734,      0.3242,      0.8398,     -0.1318,     -0.0011,     -0.2139,      0.0791,      0.1240,     -0.0302,      1.3203,     -0.2480,     -0.9805,      0.3984,     -0.3906,
             0.0608,      0.0371,     -0.1416,      0.2656,     -0.1895,     -0.4199,     -1.0000,     -0.0840,      0.4492,     -0.7734,     -0.1670,     -1.3047,      0.0520,     -0.4473,      0.2793,      0.1172,      1.0547,      0.5820,      0.2432,      0.0947], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.7578,  0.0437,  0.1904, -0.1357,  0.3223,  0.0874,  0.3652,  0.1660, -0.2852, -0.7773, -0.4141,  0.1572, -0.0138,  0.3047],
        [ 0.0000, -0.2227,  0.1157, -0.0718,  0.1934,  0.1562, -0.1299,  0.0493, -0.3516,  0.1562,  0.2852,  0.3496,  0.0054,  0.2334, -0.1865],
        [ 0.0000,  0.3477,  0.0164,  0.1162,  0.6016,  0.2441, -0.1494, -0.1572, -0.3242,  0.1475, -0.0067,  0.4219, -0.3262, -0.3574, -0.1582],
        [ 0.0000, -0.5078,  0.4648,  0.1367,  0.0075, -0.3594, -0.9180,  0.2871, -0.5312, -0.1074,  0.1641, -0.6211, -0.2656, -0.3262,  0.1040],
        [ 0.0000, -0.1768,  0.1157, -0.0243, -0.2305, -0.2383,  0.2695, -0.0227,  0.0684, -0.3789,  0.6328, -0.0894, -0.4746,  0.0139,  0.3496],
        [ 0.0000,  0.5234,  0.1465,  0.0869, -0.2178,  0.2930,  0.7500, -0.4531, -0.2832, -0.3535,  0.2188,  0.1631, -0.0271, -0.1816,  0.4414],
        [ 0.0000,  0.6836, -0.2109, -0.2441,  0.0058,  0.3438, -0.3633,  0.0378,  0.4004, -0.0203, -0.1357, -0.1934, -0.4375,  0.3633,  0.3594],
        [ 0.0000,  0.2344, -0.0444,  0.0835, -0.0092, -0.0383,  0.5508,  0.4688,  0.0698,  0.0131, -0.5000, -0.5547, -0.0391, -0.4199,  0.1797],
        [ 0.0000,  0.3633, -0.1226,  0.0356, -0.1787,  0.3184, -0.0153, -0.2988, -0.0579,  0.1807,  0.3105,  0.0190, -0.0248,  0.2021,  0.5078],
        [ 0.0000, -0.8711,  0.0272, -0.2236, -0.4902,  0.1338, -0.2422, -0.4004,  0.0376, -0.2441,  0.4180, -0.0049, -0.1006,  0.0640, -0.0334],
        [ 0.0000,  0.1699, -0.2148,  0.3203, -0.0139,  0.4746,  0.5312,  0.2158,  0.1196,  0.0378, -0.1992, -0.2871,  0.2305,  0.0068,  0.1836],
        [ 0.0000,  0.1025,  0.2852,  0.1865, -0.3086,  0.1455, -0.1016, -0.1865,  0.4336, -0.5273, -0.4902, -0.0327,  0.2412,  0.2148,  0.2139],
        [ 0.0000,  0.3770, -0.3066, -0.1465, -0.0952, -0.4043,  0.3867,  0.3555,  0.2480,  0.1562, -0.6406, -0.6914, -0.1143, -0.3047,  0.0850],
        [ 0.0000, -0.2451,  0.0603, -0.3633,  0.4844, -0.2178, -0.5312, -0.0049, -0.2871,  0.2090, -0.0234, -0.0557,  0.3418, -0.5859, -0.7461]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4876],
        [0.3428],
        [0.2384],
        [0.1842],
        [0.1645],
        [0.1372],
        [0.1245],
        [0.1026],
        [0.0959],
        [0.0886],
        [0.0812],
        [0.0721],
        [0.0677],
        [0.0633]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4844, 0.5156, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3535, 0.4043, 0.2412, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2461, 0.2480, 0.2207, 0.2852, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2100, 0.1187, 0.2100, 0.2441, 0.2168, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1514, 0.2041, 0.1504, 0.1758, 0.1177, 0.2002, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1289, 0.0781, 0.1138, 0.1299, 0.1543, 0.1914, 0.2031, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1211, 0.1094, 0.1011, 0.1396, 0.1260, 0.1367, 0.1250, 0.1416, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1118, 0.1045, 0.1426, 0.0889, 0.1006, 0.0786, 0.1768, 0.0972, 0.0986, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1035, 0.1328, 0.0708, 0.0786, 0.1504, 0.0618, 0.1426, 0.1025, 0.0825, 0.0732, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0801, 0.0918, 0.0608, 0.1196, 0.1045, 0.1279, 0.0669, 0.1040, 0.0771, 0.1021, 0.0645, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0859, 0.0820, 0.0596, 0.0835, 0.0571, 0.1060, 0.0806, 0.0771, 0.0825, 0.0664, 0.1123, 0.1074, 0.0000, 0.0000, 0.0000],
        [0.0767, 0.0732, 0.1108, 0.0737, 0.0596, 0.0952, 0.0752, 0.0825, 0.0518, 0.0476, 0.1035, 0.0820, 0.0684, 0.0000, 0.0000],
        [0.0835, 0.0635, 0.0972, 0.0505, 0.0515, 0.0737, 0.0947, 0.0776, 0.0635, 0.0327, 0.0796, 0.1289, 0.0476, 0.0552, 0.0000],
        [0.0640, 0.0544, 0.0781, 0.0522, 0.0513, 0.0801, 0.0928, 0.0640, 0.0708, 0.0654, 0.0493, 0.0996, 0.0425, 0.0659, 0.0688]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0314, -0.0195,  0.0021,  ..., -0.0067, -0.0251,  0.0159],
        [-0.0023,  0.0241,  0.0002,  ...,  0.0099, -0.0019, -0.0285],
        [ 0.0030,  0.0270,  0.0205,  ...,  0.0066,  0.0049,  0.0090],
        ...,
        [-0.0076,  0.0239,  0.0183,  ...,  0.0479, -0.0121, -0.0084],
        [-0.0134, -0.0192, -0.0168,  ..., -0.0100,  0.0064,  0.0082],
        [ 0.0221,  0.0224,  0.0134,  ...,  0.0134, -0.0260,  0.0174]], device='cuda:0', requires_grad=True)
K: tensor([-0.7031, -0.2578,  0.3867,  0.3398, -0.2266, -0.7266,  0.6055, -1.0547,  0.3203,  0.8711, -0.5000, -0.3984,  0.1167, -0.6250,  0.1152,  0.8594,  0.5000, -0.6953, -0.0569, -0.6797,  0.4785, -0.1904, -0.2275,  0.0996, -0.2021, -0.8594,  0.2949,  0.8555, -0.3652, -1.2969,  0.0403, -0.0315,
         0.5820,  0.4746,  1.1094,  0.1729, -0.5078,  0.4277,  0.1768,  0.6562,  1.0469,  0.7852, -0.2363,  0.1777,  0.5195,  1.0859,  0.1855, -0.2031,  0.6484, -0.6562,  0.3945,  0.1069,  0.0454,  0.3711, -0.1426, -0.7656, -0.4316,  0.3926,  0.7930, -0.0339, -1.3203,  0.3320,  1.0625, -0.8398],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0083, -0.0169, -0.0106,  ...,  0.0056,  0.0032, -0.0008],
        [ 0.0169,  0.0023, -0.0369,  ..., -0.0043, -0.0020, -0.0295],
        [ 0.0419,  0.0185,  0.0282,  ..., -0.0084,  0.0297,  0.0050],
        ...,
        [-0.0115, -0.0125,  0.0136,  ...,  0.0223, -0.0096, -0.0258],
        [ 0.0367,  0.0117, -0.0076,  ..., -0.0161,  0.0142,  0.0213],
        [ 0.0080, -0.0209, -0.0270,  ...,  0.0061, -0.0146,  0.0319]], device='cuda:0', requires_grad=True)
Q: tensor([-0.4141,  1.1797,  0.4512,  0.1533, -1.0000, -0.1660, -0.7891, -0.4414,  0.4961,  0.0359,  0.1650, -0.9805,  0.3516, -0.6211,  0.5117,  1.0078, -0.1504, -0.4453,  1.2031,  0.2266, -0.5078, -0.0845,  0.0308,  0.4609, -0.5078,  0.3848, -0.7148,  0.8320,  0.1094, -0.4082, -0.2227, -0.1934,
        -0.6719,  0.1777,  0.4453, -0.1416, -0.3770, -0.7148, -0.6836,  0.0239, -0.8672, -0.3223,  0.6680, -1.0078, -0.2275,  0.5508, -0.0776,  0.3066,  0.6953,  0.5430, -0.2119,  0.4062,  0.0044, -0.1973,  0.3809,  0.8750,  0.3789, -0.5391, -0.3379, -0.6289, -0.5625,  0.2637, -0.7695, -0.1035],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0593,  0.2090, -0.1182, -0.4766,  0.0713,  0.0991, -0.0047,  0.1982,  0.5508, -0.1455, -0.0557,  0.2559,  0.2412,  0.4043],
        [ 0.0000,  0.1318, -0.3848,  0.2734, -0.2520, -0.3164, -0.3867, -0.0085, -0.3965, -0.4277,  0.4375, -0.3379, -0.3457, -0.3516, -0.0972],
        [ 0.0000,  0.0102, -0.1060,  0.1484, -0.1953,  0.2227, -0.0356,  0.1797,  0.1309,  0.3652, -0.3457, -0.2168,  0.2070, -0.2773,  0.5078],
        [ 0.0000, -0.5664,  0.0044,  0.1543,  0.0337,  0.3828,  0.5117,  0.0184,  0.0154, -0.2080,  0.0130, -0.2109,  0.0430, -0.2080,  0.1123],
        [ 0.0000,  0.2988, -0.0090,  0.1494, -0.2520,  0.2773,  0.2383,  0.4395,  0.3594,  0.1504,  0.1279, -0.0986,  0.4336, -0.1396,  0.4805],
        [ 0.0000, -0.5000, -0.1206,  0.0111,  0.1836,  0.3984,  0.4590,  0.1162, -0.0815, -0.0356, -0.1025,  0.2197, -0.0023, -0.1060,  0.7617],
        [ 0.0000, -0.1011, -0.1777,  0.1445,  0.0378,  0.1216,  0.0339,  0.1572,  0.0752,  0.2422,  0.3867, -0.4844, -0.0126, -0.4922,  0.2734],
        [ 0.0000, -0.0654,  0.2441, -0.2275, -0.1040, -0.3496,  0.4570, -0.1387, -0.1221, -0.4375, -0.1758,  0.7852,  0.1953, -0.2012, -0.4629],
        [ 0.0000,  0.2490, -0.3828, -0.2754,  0.3750, -0.5195,  0.3223, -0.0085, -0.2305, -0.3438, -0.0732,  0.3008, -0.7031,  0.2539,  0.0430],
        [ 0.0000,  0.1387, -0.2715,  0.4043,  0.2715,  0.4746, -0.1777,  0.2656, -0.0327,  0.2451, -0.2119, -0.0278,  0.1348, -0.1055,  0.3516],
        [ 0.0000, -0.0457, -0.3672, -0.0258, -0.4082,  0.2090, -0.0635, -0.1069, -0.0417, -0.2598,  0.2676,  0.2246, -0.3516, -0.0212,  0.7109],
        [ 0.0000, -0.0491,  0.3672, -0.0383, -0.2539,  0.2168, -0.0171,  0.0762, -0.3945, -0.4785,  0.2988,  0.0684, -0.1172, -0.1240,  0.1787],
        [ 0.0000, -0.2695,  0.1533, -0.4980, -0.4805, -0.1240,  0.1299, -0.0693, -0.2695, -0.9375, -0.0481,  0.4336, -0.5586, -0.4141, -0.8008],
        [ 0.0000, -0.1631,  0.1973, -0.2061, -0.2246,  0.2227,  0.3691, -0.0028,  0.0996,  0.0183, -0.2617,  0.4395, -0.4160,  0.0306,  0.0708]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5311],
        [0.3503],
        [0.2476],
        [0.2027],
        [0.1568],
        [0.1343],
        [0.1244],
        [0.1120],
        [0.0976],
        [0.0891],
        [0.0850],
        [0.0747],
        [0.0717],
        [0.0655]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5078, 0.4922, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3145, 0.2832, 0.4023, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3027, 0.2090, 0.1982, 0.2910, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2002, 0.2197, 0.1611, 0.2305, 0.1885, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1768, 0.2080, 0.0947, 0.1572, 0.1777, 0.1846, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1543, 0.1484, 0.1309, 0.1250, 0.1777, 0.0869, 0.1768, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1309, 0.1177, 0.0918, 0.1060, 0.1826, 0.1299, 0.0996, 0.1416, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1484, 0.1060, 0.1206, 0.1079, 0.1230, 0.1055, 0.0737, 0.0776, 0.1377, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1226, 0.1152, 0.0840, 0.1040, 0.1216, 0.0923, 0.0928, 0.0908, 0.0918, 0.0854, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1177, 0.0815, 0.0752, 0.0649, 0.1035, 0.0801, 0.0830, 0.1104, 0.0542, 0.0918, 0.1377, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0801, 0.0864, 0.0737, 0.0781, 0.1035, 0.0835, 0.0596, 0.0659, 0.0544, 0.1187, 0.1089, 0.0864, 0.0000, 0.0000, 0.0000],
        [0.1016, 0.0737, 0.0566, 0.0742, 0.0791, 0.0762, 0.0845, 0.0903, 0.0762, 0.0898, 0.0625, 0.0781, 0.0562, 0.0000, 0.0000],
        [0.0825, 0.0737, 0.0664, 0.0679, 0.0903, 0.0615, 0.0557, 0.0610, 0.0654, 0.0903, 0.0811, 0.0518, 0.0957, 0.0569, 0.0000],
        [0.0815, 0.0825, 0.0493, 0.0693, 0.0620, 0.0732, 0.0654, 0.0500, 0.0496, 0.0806, 0.0625, 0.0491, 0.0923, 0.0557, 0.0762]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0098,  0.0021,  0.0095,  ..., -0.0027,  0.0138, -0.0150],
        [ 0.0277, -0.0502, -0.0375,  ...,  0.0136,  0.0055, -0.0308],
        [ 0.0382, -0.0429,  0.0263,  ...,  0.0035,  0.0040,  0.0054],
        ...,
        [ 0.0390,  0.0072, -0.0258,  ..., -0.0135,  0.0013,  0.0196],
        [ 0.0057,  0.0250, -0.0199,  ..., -0.0036, -0.0162, -0.0217],
        [ 0.0190, -0.0087,  0.0043,  ...,  0.0212,  0.0036,  0.0165]], device='cuda:0', requires_grad=True)
K: tensor([-0.4473,  0.0288, -0.0420,  0.7188,  0.5938,  0.7617,  0.6328,  0.9375,  0.1533, -1.4453,  0.2354, -0.0194,  0.3398, -0.3594,  0.3066, -0.2812, -0.2617, -0.6094,  0.1826, -0.1533,  0.0513, -0.1318, -0.6484, -0.5703,  0.0248, -0.3281, -0.0542, -0.5234,  0.9375,  0.6758,  0.0330, -0.0378,
        -0.6406,  0.5625, -0.4570, -0.2402, -0.5820, -0.3594,  0.5547, -0.0153,  0.0093, -0.8750,  0.8555, -0.2061,  1.5078, -0.0371, -1.1797, -0.0781,  0.3379,  0.5938, -0.8867,  0.2402,  0.2637, -0.5195,  0.1226, -1.4688,  0.0304,  0.9141, -0.1719,  0.1641, -0.1885, -0.1245, -0.0371, -0.4062],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0146,  0.0199,  0.0374,  ..., -0.0235,  0.0246,  0.0002],
        [ 0.0076,  0.0410,  0.0142,  ...,  0.0130,  0.0063, -0.0162],
        [-0.0107,  0.0080,  0.0239,  ..., -0.0222,  0.0334, -0.0115],
        ...,
        [-0.0130, -0.0176,  0.0094,  ..., -0.0223,  0.0115, -0.0037],
        [ 0.0157, -0.0113,  0.0228,  ...,  0.0287,  0.0009, -0.0055],
        [ 0.0316, -0.0212, -0.0146,  ...,  0.0179,  0.0160,  0.0126]], device='cuda:0', requires_grad=True)
Q: tensor([    -0.0009,      0.2852,     -0.5117,     -0.1914,      0.0889,      0.4609,      0.5234,     -0.4688,      0.2295,     -0.4746,      1.1250,      0.9766,     -0.2246,      0.4707,      0.2754,      0.2275,      0.1514,      0.4375,      0.4590,     -0.4668,      0.7148,     -0.8516,
            -0.5117,     -0.3789,      0.2910,      0.9844,      0.9258,     -0.6250,      0.2061,     -0.1650,      0.2871,      0.0732,     -0.1309,     -0.7539,      0.7305,      0.7070,      0.2227,     -0.4629,     -0.1875,     -0.4043,      0.0488,     -0.2139,     -0.3145,     -0.2617,
             0.3262,      0.3242,      0.7266,     -0.4180,     -0.2148,     -0.2324,      0.4453,      0.1084,      0.1709,      1.1250,      0.8008,      0.3008,     -0.8047,      0.2910,     -0.1318,      0.8125,      0.0879,     -0.8594,     -1.4531,     -0.3008], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -0.0317,     -0.1592,     -0.0131,      0.0957,     -0.2412,      0.0052,      0.0188,      0.0530,      0.1006,     -0.1309,     -0.2520,      0.3164,     -0.0923,      0.1924],
        [     0.0000,     -0.1060,      0.2441,      0.2598,      0.1855,      0.5625,      0.1289,      0.7070,      0.1602,      0.6797,      0.4609,     -0.1270,      0.6367,     -0.0008,      0.0825],
        [     0.0000,     -0.3691,     -0.4219,     -0.0393,     -0.2422,      0.0223,     -0.4727,     -0.3984,     -0.1426,     -0.0571,      0.0962,     -0.6289,      0.4023,     -0.0410,      0.4473],
        [     0.0000,      0.0903,     -0.2158,      0.1396,     -0.0601,      0.0762,      0.2891,      0.3867,      0.0157,     -0.1064,      0.2969,     -0.3496,      0.4590,      0.4121,      0.8359],
        [     0.0000,      0.1602,     -0.6289,     -0.1206,      0.0046,      0.0430,     -0.2441,      0.0400,     -0.0393,      0.0459,     -0.2754,     -0.2988,     -0.1006,      0.3223,     -0.1904],
        [     0.0000,     -0.0430,     -0.1660,     -0.2100,      0.1406,     -0.5781,      0.1318,     -0.0693,     -0.1357,     -0.0046,     -0.0037,     -0.2451,      0.3203,      0.2500,     -0.0121],
        [     0.0000,     -0.1089,     -0.3555,     -0.2139,      0.3281,     -0.0103,     -0.2734,      0.0791,     -0.3906,      0.3730,     -0.0894,     -0.2617,     -0.0432,     -0.2832,      0.0513],
        [     0.0000,     -0.3379,     -0.2090,     -0.3223,     -0.1885,     -0.3438,     -0.6992,     -0.6484,     -0.0757,     -0.0393,      0.0962,     -0.4434,     -0.1016,     -0.0564,      0.0962],
        [     0.0000,     -0.0596,     -0.3789,     -0.1621,     -0.0067,     -0.2832,     -0.2793,     -0.3008,     -0.2871,     -0.3594,     -0.2344,     -0.3965,      0.1318,     -0.0923,     -0.0825],
        [     0.0000,     -0.3652,     -0.4492,     -0.5898,     -0.1250,     -0.3828,     -0.3457,     -0.0620,     -0.7734,     -0.2461,      0.1602,     -0.0742,      0.2461,     -0.0439,      0.1118],
        [     0.0000,      0.0767,     -0.0786,     -0.0214,      0.2598,      0.0422,     -0.2949,     -0.1914,     -0.3848,      0.3945,      0.3105,      0.0796,      0.2598,      0.4551,      0.6562],
        [     0.0000,     -0.3184,     -0.5820,     -0.3125,     -0.2471,     -0.2871,     -0.1816,     -0.1201,     -0.2891,     -0.1206,     -0.4863,     -0.2637,     -0.5938,     -0.5391,     -0.0330],
        [     0.0000,     -0.1182,     -0.2178,     -0.1992,      0.0889,     -0.2969,     -0.3945,     -0.3047,     -0.2383,      0.0894,     -0.0223,     -0.4688,      0.1445,     -0.3770,      0.2793],
        [     0.0000,      0.0119,     -0.5039,     -0.1621,     -0.2754,     -0.1050,     -0.2197,     -0.4902,     -0.4980,     -0.0112,     -0.2656,     -0.5078,      0.1240,     -0.3848,     -0.0688]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5415],
        [0.3701],
        [0.2783],
        [0.2218],
        [0.1759],
        [0.1513],
        [0.1253],
        [0.1181],
        [0.0974],
        [0.0909],
        [0.0795],
        [0.0791],
        [0.0729],
        [0.0668]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5586, 0.4434, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3105, 0.3145, 0.3750, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2432, 0.2373, 0.2773, 0.2412, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1836, 0.1797, 0.2100, 0.1992, 0.2285, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1738, 0.1475, 0.1768, 0.1660, 0.1836, 0.1523, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1621, 0.1406, 0.1465, 0.1318, 0.1396, 0.1367, 0.1426, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1289, 0.1270, 0.1309, 0.1240, 0.1348, 0.1182, 0.1216, 0.1157, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0967, 0.0864, 0.1089, 0.0996, 0.1143, 0.1064, 0.1201, 0.1230, 0.1436, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0947, 0.0903, 0.1021, 0.0908, 0.1011, 0.0977, 0.1079, 0.1016, 0.1157, 0.0981, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0791, 0.0835, 0.0933, 0.0894, 0.0942, 0.0835, 0.0938, 0.0972, 0.1045, 0.0845, 0.0967, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0747, 0.0723, 0.0791, 0.0771, 0.0835, 0.0786, 0.0923, 0.0869, 0.0972, 0.0811, 0.0967, 0.0811, 0.0000, 0.0000, 0.0000],
        [0.0688, 0.0732, 0.0835, 0.0737, 0.0815, 0.0688, 0.0806, 0.0786, 0.0874, 0.0713, 0.0820, 0.0703, 0.0801, 0.0000, 0.0000],
        [0.0596, 0.0535, 0.0654, 0.0576, 0.0674, 0.0645, 0.0781, 0.0771, 0.0884, 0.0732, 0.0854, 0.0732, 0.0820, 0.0752, 0.0000],
        [0.0564, 0.0496, 0.0596, 0.0601, 0.0664, 0.0605, 0.0742, 0.0693, 0.0796, 0.0679, 0.0737, 0.0645, 0.0752, 0.0674, 0.0762]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0134,  0.0193,  0.0053,  ..., -0.0244,  0.0050, -0.0524],
        [-0.0182, -0.0147, -0.0212,  ..., -0.0047,  0.0197,  0.0035],
        [-0.0296, -0.0136,  0.0392,  ..., -0.0241, -0.0220, -0.0259],
        ...,
        [-0.0006, -0.0272, -0.0002,  ..., -0.0241, -0.0164, -0.0382],
        [-0.0179, -0.0395, -0.0167,  ..., -0.0167, -0.0108,  0.0153],
        [-0.0180,  0.0184,  0.0259,  ..., -0.0237, -0.0167, -0.0088]], device='cuda:0', requires_grad=True)
K: tensor([ 0.3105,  0.3555,  0.1123, -0.3340,  0.8164,  0.4219,  0.6484,  0.8633, -0.4707,  0.4160,  0.2891,  1.0703,  0.0150, -0.5391,  0.3652,  0.0107,  0.1426, -1.2891, -1.5781,  0.4902, -0.2871,  0.9727,  0.5508,  0.6016, -1.5547, -0.0564, -0.0791,  0.6055,  0.2812, -0.3887,  0.0065,  0.0481,
         0.0601,  0.4551, -0.2441,  0.2080,  0.6445,  0.5078, -0.1680,  0.6562,  0.0747, -0.5469,  0.1426, -0.2158,  0.1245,  0.0032,  1.0703, -0.1318, -0.5273,  0.3223, -0.5781,  0.2314,  0.7852, -0.3691,  0.2383, -0.1914, -0.0781, -0.2695,  0.3281, -0.3848, -0.4355,  0.3223,  0.6484,  0.0771],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0169,  0.0014,  0.0127,  ...,  0.0290, -0.0174, -0.0245],
        [ 0.0206, -0.0253,  0.0185,  ..., -0.0162, -0.0087,  0.0307],
        [-0.0240,  0.0089,  0.0397,  ...,  0.0201,  0.0220, -0.0061],
        ...,
        [ 0.0054,  0.0011, -0.0386,  ..., -0.0093, -0.0100,  0.0080],
        [-0.0030,  0.0286, -0.0161,  ...,  0.0271,  0.0095, -0.0225],
        [-0.0083,  0.0032, -0.0078,  ...,  0.0063,  0.0057, -0.0105]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.1504,  1.2578,  0.5898,  0.2295,  0.1523,  0.9023,  0.5859,  0.1572, -0.0938,  0.0253,  0.0061,  0.2129,  0.8164, -0.3105,  0.3887,  0.1011,  0.3516,  0.6289,  0.4336, -0.1299, -0.2021,  0.5234,  0.0825,  0.6211, -0.6016, -0.0796,  0.0258,  0.4121,  0.3340,  0.7422,  0.5469,  0.4766,
         1.1250,  0.3340, -0.2988,  0.3750, -0.9844, -0.8281,  0.5781, -0.0031, -1.3594, -0.3672, -0.2451, -0.4375, -0.6328,  0.4414, -0.4336, -1.5312, -0.2871, -0.6016,  0.2715, -0.1680,  0.1143, -0.4551, -0.2002,  0.0476,  0.3984,  0.7500, -0.0679, -0.3809, -0.8242, -0.1602,  0.8320,  0.8008],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.2305,  0.0474,  0.1182,  0.3359,  0.0791,  0.0981,  0.1641,  0.2158,  0.2012,  0.3008,  0.1406,  0.2227,  0.2480,  0.2617],
        [ 0.0000,  0.0128,  0.1904,  0.1484,  0.3281,  0.1445,  0.2695,  0.2461,  0.4121,  0.2275,  0.3359,  0.1582,  0.2500,  0.2363,  0.3027],
        [ 0.0000, -0.0255,  0.1338, -0.0076,  0.1216,  0.0383,  0.0762,  0.0713,  0.3281,  0.1104,  0.1748,  0.0479,  0.0864,  0.1357,  0.2012],
        [ 0.0000, -0.0216,  0.1348,  0.0796,  0.2188,  0.0898,  0.2275,  0.1631,  0.2910,  0.1279,  0.2207,  0.0635,  0.1904,  0.0752,  0.1963],
        [ 0.0000, -0.1641,  0.0165, -0.0452,  0.0520, -0.1338,  0.0081, -0.0139,  0.1279, -0.0449,  0.1060, -0.1187,  0.0234, -0.1216,  0.0425],
        [ 0.0000, -0.1436, -0.1060, -0.2109, -0.1514, -0.1709, -0.1328, -0.1865, -0.0469, -0.1670, -0.1074, -0.1758, -0.1318, -0.2314, -0.0752],
        [ 0.0000, -0.0199,  0.0120, -0.0386,  0.0410, -0.0884, -0.0613, -0.1104,  0.0312, -0.1079, -0.0214, -0.1377, -0.0413, -0.1494, -0.0530],
        [ 0.0000, -0.1113,  0.1187,  0.0299,  0.1660,  0.0967,  0.2148,  0.2402,  0.3926,  0.2109,  0.3047,  0.1826,  0.2812,  0.1992,  0.3340],
        [ 0.0000, -0.0464,  0.0762, -0.0413,  0.0664,  0.0327,  0.1299,  0.0688,  0.1982,  0.0354,  0.1514,  0.0747,  0.1533,  0.0605,  0.2402],
        [ 0.0000,  0.0503,  0.1621,  0.1196,  0.1699,  0.0540,  0.1689,  0.2012,  0.2773,  0.0640,  0.2002,  0.0193,  0.1963,  0.0732,  0.2383],
        [ 0.0000, -0.0295,  0.0618,  0.0334,  0.1123,  0.0566,  0.2148,  0.1533,  0.2656,  0.0815,  0.2598,  0.0815,  0.2295,  0.1216,  0.3027],
        [ 0.0000,  0.0623,  0.1963,  0.0703,  0.1699,  0.0025,  0.1582,  0.1328,  0.2402,  0.0398,  0.1777,  0.0229,  0.1523, -0.0043,  0.1699],
        [ 0.0000, -0.1055,  0.0967, -0.0315,  0.1270,  0.0806,  0.2734,  0.2578,  0.3945,  0.2051,  0.3594,  0.2080,  0.3184,  0.2324,  0.4082],
        [ 0.0000, -0.1260,  0.0554,  0.0630,  0.1660,  0.0708,  0.2754,  0.2070,  0.3457,  0.1836,  0.2695,  0.1357,  0.2852,  0.1816,  0.3008]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4528],
        [0.3366],
        [0.2618],
        [0.2043],
        [0.1848],
        [0.1592],
        [0.1365],
        [0.1221],
        [0.1122],
        [0.1013],
        [0.0946],
        [0.0855],
        [0.0799],
        [0.0726]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4570, 0.5430, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2637, 0.3320, 0.4023, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1631, 0.2207, 0.2539, 0.3633, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1196, 0.1641, 0.2002, 0.2949, 0.2217, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1094, 0.1226, 0.1719, 0.2139, 0.1875, 0.1953, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1094, 0.1289, 0.1494, 0.1787, 0.1436, 0.1455, 0.1445, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0830, 0.1069, 0.1387, 0.1514, 0.1318, 0.1396, 0.1216, 0.1279, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0742, 0.0903, 0.1196, 0.1357, 0.1128, 0.1133, 0.1113, 0.1211, 0.1201, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0708, 0.0806, 0.1060, 0.1216, 0.1001, 0.1035, 0.0967, 0.1060, 0.1055, 0.1094, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0527, 0.0762, 0.1006, 0.1157, 0.0923, 0.0894, 0.0923, 0.0967, 0.0957, 0.0967, 0.0913, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0515, 0.0615, 0.0874, 0.0981, 0.0845, 0.0840, 0.0835, 0.0938, 0.0898, 0.0923, 0.0869, 0.0864, 0.0000, 0.0000, 0.0000],
        [0.0488, 0.0645, 0.0864, 0.0942, 0.0820, 0.0796, 0.0767, 0.0811, 0.0815, 0.0840, 0.0767, 0.0771, 0.0674, 0.0000, 0.0000],
        [0.0452, 0.0635, 0.0811, 0.0933, 0.0737, 0.0732, 0.0703, 0.0786, 0.0728, 0.0762, 0.0728, 0.0698, 0.0610, 0.0688, 0.0000],
        [0.0442, 0.0581, 0.0713, 0.0879, 0.0645, 0.0684, 0.0659, 0.0723, 0.0713, 0.0728, 0.0664, 0.0640, 0.0571, 0.0679, 0.0684]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0361, -0.0197, -0.0036,  ..., -0.0178,  0.0044, -0.0046],
        [ 0.0043, -0.0341, -0.0034,  ..., -0.0025,  0.0170,  0.0058],
        [-0.0196,  0.0177, -0.0232,  ..., -0.0023, -0.0175,  0.0062],
        ...,
        [ 0.0359, -0.0008, -0.0327,  ...,  0.0038, -0.0162,  0.0176],
        [-0.0136,  0.0072,  0.0064,  ...,  0.0350, -0.0262,  0.0144],
        [-0.0332, -0.0005, -0.0286,  ...,  0.0197,  0.0322,  0.0249]], device='cuda:0', requires_grad=True)
K: tensor([ 0.3691,  0.1484,  0.0776, -0.4629, -0.6328, -0.4980, -0.1855,  1.3281,  0.5547, -1.2656,  0.5898,  0.2090, -0.1660,  0.7773, -0.4473, -0.1367, -1.1953,  0.6367,  0.8516,  0.1226,  0.0216, -0.7891,  0.1777,  0.2617,  0.8164,  0.2812,  1.3828,  0.0918,  0.1260,  0.1846, -0.1270, -0.8164,
        -0.6328,  0.0160,  0.0239, -0.2471, -0.3008,  0.8828, -0.1826, -0.7500,  0.2188,  0.0214, -0.0879,  0.5234, -0.9727, -0.0130, -0.7969,  0.8398, -0.5586,  0.0219,  0.5234, -0.3281,  0.7188,  0.5078,  1.2578, -0.7266,  1.1172, -0.1445,  0.5586,  0.9805,  0.7383,  0.0540,  0.0991,  0.5703],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0087, -0.0247,  0.0053,  ..., -0.0055, -0.0047, -0.0134],
        [ 0.0062, -0.0061,  0.0072,  ...,  0.0202, -0.0265,  0.0288],
        [ 0.0264, -0.0154,  0.0021,  ...,  0.0046, -0.0225, -0.0064],
        ...,
        [-0.0013, -0.0365, -0.0214,  ...,  0.0180,  0.0039, -0.0057],
        [ 0.0085, -0.0027,  0.0215,  ...,  0.0149,  0.0358,  0.0070],
        [ 0.0051, -0.0132, -0.0080,  ...,  0.0208, -0.0137, -0.0333]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.2734, -0.0962, -0.7695, -0.0649, -0.4512, -0.1533, -0.4922,  0.4473,  0.4805,  0.5000,  0.9297, -0.1787,  0.5352, -0.9375,  0.2773,  0.3848, -0.7773,  0.3262,  0.2168,  1.0859,  0.0781, -0.1826,  0.9609, -0.4844,  0.6328,  0.5859,  0.4062,  0.0518,  0.4102, -0.9531,  0.3574, -0.2051,
         0.2061, -0.5430,  0.4473, -0.5742, -1.1172,  0.3223, -0.0515,  0.2676, -0.3242, -0.1729, -0.1187,  0.4160,  0.2988,  0.9805,  0.1201,  1.0547,  0.3945,  0.4961, -1.3516,  0.6836,  0.3594,  0.2988,  0.7930, -0.7969, -0.4062,  0.6289,  0.4551, -0.0233, -0.5391, -0.0947,  0.3262, -1.6016],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1738, 0.1426, 0.5273, 0.2334, 0.3672, 0.3047, 0.3848, 0.4707, 0.2715, 0.4238, 0.2490, 0.3262, 0.2617, 0.4551],
        [0.0000, 0.2285, 0.4219, 0.8008, 0.5664, 0.5195, 0.6016, 0.5352, 0.6484, 0.5586, 0.5195, 0.4551, 0.4531, 0.5508, 0.5586],
        [0.0000, 0.2988, 0.4395, 0.7969, 0.4492, 0.4922, 0.5156, 0.4453, 0.5703, 0.5547, 0.4473, 0.5234, 0.4121, 0.5391, 0.5117],
        [0.0000, 0.3164, 0.5156, 0.9023, 0.6172, 0.6797, 0.6641, 0.6445, 0.7773, 0.7266, 0.6836, 0.6680, 0.6328, 0.7500, 0.7852],
        [0.0000, 0.1118, 0.4473, 0.6719, 0.5352, 0.5742, 0.5547, 0.5352, 0.5898, 0.5859, 0.4961, 0.5938, 0.5078, 0.6250, 0.5938],
        [0.0000, 0.1631, 0.3125, 0.4883, 0.2734, 0.2832, 0.2773, 0.2871, 0.3672, 0.3711, 0.2852, 0.3574, 0.2256, 0.3867, 0.3887],
        [0.0000, 0.2539, 0.5117, 0.6016, 0.4629, 0.5234, 0.3828, 0.4316, 0.5430, 0.4727, 0.4238, 0.4395, 0.3164, 0.4922, 0.4648],
        [0.0000, 0.1943, 0.4746, 0.6055, 0.4180, 0.4199, 0.4043, 0.4883, 0.4805, 0.4922, 0.4609, 0.4453, 0.2969, 0.4668, 0.4512],
        [0.0000, 0.1289, 0.4004, 0.5352, 0.3418, 0.3750, 0.3105, 0.3984, 0.3945, 0.4316, 0.3516, 0.4258, 0.2539, 0.3789, 0.3477],
        [0.0000, 0.3672, 0.6445, 0.7852, 0.5586, 0.5273, 0.5586, 0.6055, 0.5977, 0.6016, 0.5508, 0.5469, 0.3770, 0.5664, 0.5391],
        [0.0000, 0.1768, 0.5312, 0.6445, 0.4941, 0.4902, 0.4824, 0.6016, 0.5547, 0.5820, 0.5234, 0.5195, 0.3828, 0.5234, 0.5312],
        [0.0000, 0.2832, 0.5742, 0.6562, 0.5234, 0.4922, 0.4512, 0.5078, 0.5117, 0.5430, 0.4531, 0.4590, 0.3262, 0.4941, 0.4766],
        [0.0000, 0.3340, 0.5820, 0.7227, 0.4883, 0.4824, 0.4375, 0.5508, 0.4766, 0.5195, 0.4746, 0.4316, 0.3008, 0.4160, 0.4453],
        [0.0000, 0.2695, 0.4727, 0.6836, 0.3730, 0.4336, 0.3984, 0.4883, 0.4746, 0.4980, 0.4023, 0.3691, 0.2539, 0.4258, 0.4336]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4717],
        [0.3113],
        [0.2402],
        [0.1847],
        [0.1612],
        [0.1445],
        [0.1260],
        [0.1139],
        [0.1009],
        [0.0918],
        [0.0847],
        [0.0787],
        [0.0735],
        [0.0688]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( Engineering:0.0002 Auto:0.0002 props:0.0002 Engineering:0.0002 props:0.0002 Engineering:0.0002 props:0.0002 Engineering:0.0002)
 Engineering
------
		( Auto:0.0002 props:0.0002 Engineering:0.0002 props:0.0002 Engineering:0.0002 props:0.0002 Engineering:0.0002 Engineering:0.0002)
 Engineering props props props Engineering Engineering Engineering Engineering props props props props props props props
@ 1 train 10.9559 , allloss: 21.6105, dt: 2468.16ms, fracRes: 0.0064, norm(attn): 0.0444, norm(output): 0.0864, norm(x): 0.0874, norm(y): 0.9995, norm:48.8108, tok/sec: 53105.05, flops:46.50, batch-reuse:1
@ 2 train 10.9114 , allloss: 21.5475, dt: 1211.14ms, fracRes: 0.0064, norm(attn): 0.0442, norm(output): 0.0864, norm(x): 0.0874, norm(y): 0.9995, norm:47.6290, tok/sec: 108222.44, flops:94.77, batch-reuse:1
@ 3 train 10.8491 , allloss: 21.4518, dt: 1228.26ms, fracRes: 0.0064, norm(attn): 0.0444, norm(output): 0.0864, norm(x): 0.0876, norm(y): 0.9995, norm:45.5658, tok/sec: 106713.58, flops:93.45, batch-reuse:1
@ 4 train 10.7628 , allloss: 21.3248, dt: 1233.46ms, fracRes: 0.0064, norm(attn): 0.0454, norm(output): 0.0864, norm(x): 0.0879, norm(y): 0.9995, norm:42.0442, tok/sec: 106263.89, flops:93.05, batch-reuse:1
@ 5 train 10.6976 , allloss: 21.2118, dt: 1207.62ms, fracRes: 0.0063, norm(attn): 0.0457, norm(output): 0.0884, norm(x): 0.0884, norm(y): 0.9995, norm:37.8054, tok/sec: 108537.10, flops:95.04, batch-reuse:1
@ 6 train 10.6007 , allloss: 21.0638, dt: 1230.76ms, fracRes: 0.0063, norm(attn): 0.0464, norm(output): 0.0889, norm(x): 0.0891, norm(y): 0.9995, norm:35.6866, tok/sec: 106496.93, flops:93.26, batch-reuse:1
@ 7 train 10.5355 , allloss: 20.9529, dt: 1216.79ms, fracRes: 0.0063, norm(attn): 0.0466, norm(output): 0.0908, norm(x): 0.0899, norm(y): 0.9995, norm:33.4048, tok/sec: 107719.85, flops:94.33, batch-reuse:1
@ 8 train 10.4877 , allloss: 20.8572, dt: 1234.10ms, fracRes: 0.0063, norm(attn): 0.0469, norm(output): 0.0913, norm(x): 0.0908, norm(y): 0.9995, norm:32.0403, tok/sec: 106208.73, flops:93.01, batch-reuse:1
@ 9 train 10.4168 , allloss: 20.7329, dt: 1217.80ms, fracRes: 0.0063, norm(attn): 0.0471, norm(output): 0.0918, norm(x): 0.0916, norm(y): 0.9996, norm:31.7668, tok/sec: 107630.54, flops:94.25, batch-reuse:1
@ 10 train 10.3612 , allloss: 20.6079, dt: 1239.72ms, fracRes: 0.0063, norm(attn): 0.0479, norm(output): 0.0933, norm(x): 0.0926, norm(y): 0.9996, norm:31.3599, tok/sec: 105726.77, flops:92.58, batch-reuse:1
@ 11 train 10.3317 , allloss: 20.4966, dt: 1219.82ms, fracRes: 0.0063, norm(attn): 0.0483, norm(output): 0.0938, norm(x): 0.0933, norm(y): 0.9996, norm:30.2030, tok/sec: 107452.32, flops:94.09, batch-reuse:1
@ 12 train 10.2585 , allloss: 20.3309, dt: 1246.15ms, fracRes: 0.0063, norm(attn): 0.0496, norm(output): 0.0942, norm(x): 0.0940, norm(y): 0.9996, norm:30.4993, tok/sec: 105181.80, flops:92.11, batch-reuse:1
@ 13 train 10.2187 , allloss: 20.1832, dt: 1224.18ms, fracRes: 0.0063, norm(attn): 0.0498, norm(output): 0.0942, norm(x): 0.0947, norm(y): 0.9996, norm:29.6383, tok/sec: 107069.04, flops:93.76, batch-reuse:1
@ 14 train 10.1582 , allloss: 20.0084, dt: 1223.31ms, fracRes: 0.0063, norm(attn): 0.0503, norm(output): 0.0942, norm(x): 0.0953, norm(y): 0.9996, norm:29.1209, tok/sec: 107145.35, flops:93.83, batch-reuse:1
@ 15 train 10.1249 , allloss: 19.8426, dt: 1232.58ms, fracRes: 0.0063, norm(attn): 0.0505, norm(output): 0.0957, norm(x): 0.0960, norm(y): 0.9996, norm:28.8863, tok/sec: 106339.76, flops:93.12, batch-reuse:1
@ 16 train 10.0907 , allloss: 19.6604, dt: 1236.91ms, fracRes: 0.0063, norm(attn): 0.0505, norm(output): 0.0962, norm(x): 0.0967, norm(y): 0.9996, norm:28.4935, tok/sec: 105967.10, flops:92.79, batch-reuse:1
@ 17 train 10.0492 , allloss: 19.4593, dt: 1244.37ms, fracRes: 0.0063, norm(attn): 0.0508, norm(output): 0.0967, norm(x): 0.0973, norm(y): 0.9996, norm:28.2826, tok/sec: 105332.28, flops:92.24, batch-reuse:1
@ 18 train 10.0216 , allloss: 19.2573, dt: 1231.85ms, fracRes: 0.0064, norm(attn): 0.0508, norm(output): 0.0991, norm(x): 0.0980, norm(y): 0.9996, norm:27.8538, tok/sec: 106402.88, flops:93.18, batch-reuse:1
@ 19 train 9.9651 , allloss: 19.0053, dt: 1234.93ms, fracRes: 0.0064, norm(attn): 0.0510, norm(output): 0.0991, norm(x): 0.0987, norm(y): 0.9996, norm:27.6500, tok/sec: 106137.31, flops:92.94, batch-reuse:1
@ 20 train 9.9256 , allloss: 18.7535, dt: 1251.25ms, fracRes: 0.0064, norm(attn): 0.0515, norm(output): 0.0996, norm(x): 0.0994, norm(y): 0.9997, norm:27.2771, tok/sec: 104753.26, flops:91.73, batch-reuse:1
@ 21 train 9.8728 , allloss: 18.4720, dt: 1226.18ms, fracRes: 0.0064, norm(attn): 0.0518, norm(output): 0.1011, norm(x): 0.1003, norm(y): 0.9997, norm:26.9411, tok/sec: 106894.78, flops:93.61, batch-reuse:1
@ 22 train 9.8705 , allloss: 18.2354, dt: 1240.25ms, fracRes: 0.0064, norm(attn): 0.0518, norm(output): 0.1011, norm(x): 0.1010, norm(y): 0.9997, norm:26.4445, tok/sec: 105681.85, flops:92.54, batch-reuse:1
@ 23 train 9.8655 , allloss: 17.9815, dt: 1249.09ms, fracRes: 0.0064, norm(attn): 0.0537, norm(output): 0.1016, norm(x): 0.1019, norm(y): 0.9997, norm:26.0351, tok/sec: 104934.08, flops:91.89, batch-reuse:1
@ 24 train 9.8412 , allloss: 17.7022, dt: 1267.68ms, fracRes: 0.0064, norm(attn): 0.0537, norm(output): 0.1021, norm(x): 0.1027, norm(y): 0.9997, norm:25.6922, tok/sec: 103395.42, flops:90.54, batch-reuse:1
@ 25 train 9.7525 , allloss: 17.3530, dt: 1283.72ms, fracRes: 0.0064, norm(attn): 0.0537, norm(output): 0.1021, norm(x): 0.1036, norm(y): 0.9997, norm:25.2436, tok/sec: 102103.51, flops:89.41, batch-reuse:1
@ 26 train 9.7859 , allloss: 17.1195, dt: 1238.36ms, fracRes: 0.0064, norm(attn): 0.0544, norm(output): 0.1035, norm(x): 0.1044, norm(y): 0.9997, norm:24.6572, tok/sec: 105842.79, flops:92.69, batch-reuse:1
@ 27 train 9.7685 , allloss: 16.8320, dt: 1233.09ms, fracRes: 0.0064, norm(attn): 0.0544, norm(output): 0.1064, norm(x): 0.1052, norm(y): 0.9997, norm:24.1411, tok/sec: 106295.72, flops:93.08, batch-reuse:1
@ 28 train 9.7423 , allloss: 16.5341, dt: 1269.77ms, fracRes: 0.0064, norm(attn): 0.0544, norm(output): 0.1074, norm(x): 0.1060, norm(y): 0.9997, norm:23.6297, tok/sec: 103224.96, flops:90.39, batch-reuse:1
@ 29 train 9.7386 , allloss: 16.2480, dt: 1249.10ms, fracRes: 0.0064, norm(attn): 0.0547, norm(output): 0.1074, norm(x): 0.1069, norm(y): 0.9997, norm:23.0521, tok/sec: 104933.29, flops:91.89, batch-reuse:1
@ 30 train 9.6979 , allloss: 15.9214, dt: 1262.69ms, fracRes: 0.0064, norm(attn): 0.0547, norm(output): 0.1089, norm(x): 0.1077, norm(y): 0.9997, norm:22.4701, tok/sec: 103803.88, flops:90.90, batch-reuse:1
@ 31 train 9.7104 , allloss: 15.6449, dt: 1238.59ms, fracRes: 0.0064, norm(attn): 0.0549, norm(output): 0.1089, norm(x): 0.1085, norm(y): 0.9998, norm:21.8516, tok/sec: 105823.68, flops:92.67, batch-reuse:1
@ 32 train 9.6803 , allloss: 15.3211, dt: 1244.41ms, fracRes: 0.0064, norm(attn): 0.0552, norm(output): 0.1099, norm(x): 0.1094, norm(y): 0.9998, norm:21.2141, tok/sec: 105328.99, flops:92.24, batch-reuse:1
@ 33 train 9.6278 , allloss: 14.9736, dt: 1250.68ms, fracRes: 0.0064, norm(attn): 0.0557, norm(output): 0.1099, norm(x): 0.1103, norm(y): 0.9998, norm:20.5492, tok/sec: 104800.41, flops:91.77, batch-reuse:1
@ 34 train 9.6403 , allloss: 14.6955, dt: 1275.91ms, fracRes: 0.0064, norm(attn): 0.0557, norm(output): 0.1099, norm(x): 0.1112, norm(y): 0.9998, norm:19.7228, tok/sec: 102728.18, flops:89.96, batch-reuse:1
@ 35 train 9.6370 , allloss: 14.4015, dt: 1278.50ms, fracRes: 0.0064, norm(attn): 0.0557, norm(output): 0.1113, norm(x): 0.1121, norm(y): 0.9998, norm:19.0966, tok/sec: 102520.54, flops:89.78, batch-reuse:1
@ 36 train 9.6222 , allloss: 14.1054, dt: 1276.63ms, fracRes: 0.0064, norm(attn): 0.0571, norm(output): 0.1113, norm(x): 0.1131, norm(y): 0.9998, norm:18.2694, tok/sec: 102670.59, flops:89.91, batch-reuse:1
@ 37 train 9.6227 , allloss: 13.8263, dt: 1237.87ms, fracRes: 0.0064, norm(attn): 0.0576, norm(output): 0.1152, norm(x): 0.1140, norm(y): 0.9998, norm:17.3927, tok/sec: 105885.42, flops:92.72, batch-reuse:1
@ 38 train 9.6039 , allloss: 13.5390, dt: 1257.31ms, fracRes: 0.0064, norm(attn): 0.0581, norm(output): 0.1157, norm(x): 0.1149, norm(y): 0.9998, norm:16.7583, tok/sec: 104247.69, flops:91.29, batch-reuse:1
@ 39 train 9.6183 , allloss: 13.2912, dt: 1260.95ms, fracRes: 0.0064, norm(attn): 0.0583, norm(output): 0.1167, norm(x): 0.1158, norm(y): 0.9998, norm:15.7904, tok/sec: 103946.74, flops:91.02, batch-reuse:1
@ 40 train 9.5842 , allloss: 13.0031, dt: 1262.26ms, fracRes: 0.0064, norm(attn): 0.0583, norm(output): 0.1167, norm(x): 0.1168, norm(y): 0.9998, norm:15.0356, tok/sec: 103839.46, flops:90.93, batch-reuse:1
@ 41 train 9.5760 , allloss: 12.7495, dt: 1246.26ms, fracRes: 0.0064, norm(attn): 0.0583, norm(output): 0.1177, norm(x): 0.1177, norm(y): 0.9998, norm:14.2107, tok/sec: 105172.32, flops:92.10, batch-reuse:1
@ 42 train 9.5768 , allloss: 12.5121, dt: 1249.04ms, fracRes: 0.0064, norm(attn): 0.0586, norm(output): 0.1177, norm(x): 0.1186, norm(y): 0.9998, norm:13.4246, tok/sec: 104938.36, flops:91.89, batch-reuse:1
@ 43 train 9.5950 , allloss: 12.3041, dt: 1256.69ms, fracRes: 0.0063, norm(attn): 0.0588, norm(output): 0.1187, norm(x): 0.1196, norm(y): 0.9999, norm:12.6024, tok/sec: 104299.72, flops:91.33, batch-reuse:1
@ 44 train 9.6128 , allloss: 12.1049, dt: 1269.83ms, fracRes: 0.0063, norm(attn): 0.0588, norm(output): 0.1191, norm(x): 0.1206, norm(y): 0.9999, norm:11.7672, tok/sec: 103220.47, flops:90.39, batch-reuse:1
@ 45 train 9.5861 , allloss: 11.8769, dt: 1246.00ms, fracRes: 0.0063, norm(attn): 0.0588, norm(output): 0.1230, norm(x): 0.1215, norm(y): 0.9999, norm:11.0253, tok/sec: 105194.50, flops:92.12, batch-reuse:1
@ 46 train 9.5707 , allloss: 11.6726, dt: 1253.57ms, fracRes: 0.0063, norm(attn): 0.0593, norm(output): 0.1245, norm(x): 0.1225, norm(y): 0.9999, norm:10.2381, tok/sec: 104558.91, flops:91.56, batch-reuse:1
@ 47 train 9.5522 , allloss: 11.4794, dt: 1257.98ms, fracRes: 0.0063, norm(attn): 0.0596, norm(output): 0.1245, norm(x): 0.1234, norm(y): 0.9999, norm:9.5173, tok/sec: 104192.07, flops:91.24, batch-reuse:1
@ 48 train 9.5490 , allloss: 11.3130, dt: 1245.15ms, fracRes: 0.0062, norm(attn): 0.0596, norm(output): 0.1245, norm(x): 0.1244, norm(y): 0.9999, norm:8.7893, tok/sec: 105266.27, flops:92.18, batch-reuse:1
@ 49 train 9.5672 , allloss: 11.1878, dt: 1246.91ms, fracRes: 0.0062, norm(attn): 0.0596, norm(output): 0.1250, norm(x): 0.1253, norm(y): 0.9999, norm:8.1271, tok/sec: 105117.76, flops:92.05, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3340, 0.6641, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3438, 0.2637, 0.3926, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2207, 0.3047, 0.2246, 0.2500, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1875, 0.1108, 0.2949, 0.2168, 0.1895, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1807, 0.1504, 0.2041, 0.1777, 0.1436, 0.1426, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1089, 0.1826, 0.1260, 0.1196, 0.0879, 0.1455, 0.2295, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1147, 0.2236, 0.0928, 0.0908, 0.1157, 0.1621, 0.0801, 0.1196, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0938, 0.1196, 0.0898, 0.1016, 0.0928, 0.0898, 0.1631, 0.1494, 0.1001, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0962, 0.1357, 0.0850, 0.0996, 0.0801, 0.1318, 0.0942, 0.0713, 0.0908, 0.1152, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1025, 0.0417, 0.1055, 0.0815, 0.0620, 0.1157, 0.0806, 0.0688, 0.1064, 0.0806, 0.1543, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0732, 0.0864, 0.0588, 0.1016, 0.0723, 0.1182, 0.1250, 0.0913, 0.0825, 0.0762, 0.0601, 0.0549, 0.0000, 0.0000, 0.0000],
        [0.0757, 0.0825, 0.1001, 0.0908, 0.0557, 0.0874, 0.0684, 0.0625, 0.1157, 0.0444, 0.0466, 0.0732, 0.0967, 0.0000, 0.0000],
        [0.0732, 0.1079, 0.0542, 0.0635, 0.0664, 0.0491, 0.1074, 0.1040, 0.0938, 0.0854, 0.0388, 0.0369, 0.0654, 0.0537, 0.0000],
        [0.0718, 0.0566, 0.0767, 0.0500, 0.1167, 0.0579, 0.0425, 0.0713, 0.0540, 0.0884, 0.0708, 0.0679, 0.1006, 0.0403, 0.0342]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[    -0.0139,      0.0018,     -0.0060,  ...,     -0.0134,      0.0248,     -0.0019],
        [    -0.0205,      0.0036,     -0.0148,  ...,     -0.0056,      0.0013,      0.0226],
        [    -0.0110,      0.0281,     -0.0210,  ...,     -0.0069,      0.0160,     -0.0150],
        ...,
        [    -0.0196,      0.0082,     -0.0000,  ...,     -0.0019,      0.0234,      0.0201],
        [    -0.0143,      0.0057,     -0.0196,  ...,     -0.0232,     -0.0165,      0.0043],
        [    -0.0081,      0.0058,     -0.0063,  ...,     -0.0076,     -0.0118,      0.0143]], device='cuda:0', requires_grad=True)
K: tensor([ 0.4395,  0.4941, -0.6445,  0.8594,  0.1455,  0.0131,  0.8008,  0.4414,  0.1787,  0.0085,  0.5117,  0.0201, -0.9297, -0.1279, -0.2295, -1.1094, -0.4277,  0.4004, -0.4043,  0.3555,  0.9766,  0.0510,  0.5703, -0.5391,  0.0435,  0.8086, -0.1108, -0.5234,  1.0938,  0.1748, -0.0535, -0.4219,
        -0.5039, -0.7109,  0.2344,  0.4766, -0.8828, -0.1992, -0.2500, -1.1328,  0.0757, -0.0693, -0.3145,  1.7656, -0.0352,  0.2432,  0.2158,  0.4492,  0.1074, -0.2969,  0.0115, -0.5859, -0.5039,  0.3320,  0.0889, -0.1484,  0.2715,  0.2695,  0.9219, -0.4180, -0.0183,  0.4258, -0.2490, -0.0366],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0011, -0.0036,  0.0099,  ...,  0.0098, -0.0092,  0.0011],
        [-0.0041, -0.0144, -0.0198,  ...,  0.0175,  0.0230, -0.0197],
        [-0.0225,  0.0493,  0.0358,  ..., -0.0278, -0.0253, -0.0098],
        ...,
        [ 0.0286,  0.0268,  0.0507,  ...,  0.0172,  0.0096,  0.0361],
        [ 0.0077, -0.0101,  0.0268,  ...,  0.0235,  0.0137,  0.0219],
        [-0.0117, -0.0189,  0.0116,  ..., -0.0310,  0.0169, -0.0114]], device='cuda:0', requires_grad=True)
Q: tensor([-0.1021, -0.1914, -0.4512, -1.2812,  0.3125,  0.0608, -0.5547, -0.0193, -0.7539,  0.2734, -0.4902, -0.1689, -0.0322, -0.9844,  0.1436,  0.2559,  0.2656, -0.0518, -0.2373,  0.5312, -0.3945,  0.6992, -0.2363,  0.3965, -0.3125, -0.3438, -0.0123, -0.2520, -0.5273, -0.3184, -0.2754,  0.3203,
         0.8359, -0.1318, -0.0035, -0.2129,  0.0791,  0.1191, -0.0364,  1.3203, -0.2490, -0.9805,  0.4023, -0.3945,  0.0596,  0.0476, -0.1416,  0.2695, -0.1924, -0.4219, -1.0000, -0.0806,  0.4453, -0.7812, -0.1709, -1.3047,  0.0554, -0.4473,  0.2832,  0.1113,  1.0469,  0.5781,  0.2441,  0.0967],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.6875,  0.0337,  0.1826, -0.1484,  0.3027,  0.0835,  0.3652,  0.1768, -0.2891, -0.7695, -0.4102,  0.1660, -0.0119,  0.2949],
        [ 0.0000, -0.2617,  0.1348, -0.0713,  0.1787,  0.1455, -0.1367,  0.0530, -0.3477,  0.1650,  0.2852,  0.3477,  0.0016,  0.2295, -0.1963],
        [ 0.0000,  0.3242,  0.0199,  0.1279,  0.5898,  0.2402, -0.1582, -0.1523, -0.3242,  0.1484, -0.0097,  0.4238, -0.3242, -0.3613, -0.1611],
        [ 0.0000, -0.5273,  0.4570,  0.1484,  0.0144, -0.3691, -0.9180,  0.2832, -0.5312, -0.1099,  0.1709, -0.6133, -0.2637, -0.3281,  0.1040],
        [ 0.0000, -0.1836,  0.1187, -0.0178, -0.2295, -0.2402,  0.2637, -0.0273,  0.0659, -0.3789,  0.6406, -0.0889, -0.4785,  0.0110,  0.3496],
        [ 0.0000,  0.5117,  0.1475,  0.0918, -0.2158,  0.2891,  0.7422, -0.4551, -0.2871, -0.3574,  0.2246,  0.1641, -0.0281, -0.1875,  0.4355],
        [ 0.0000,  0.6641, -0.2119, -0.2334,  0.0101,  0.3477, -0.3574,  0.0427,  0.4004, -0.0193, -0.1318, -0.1953, -0.4375,  0.3613,  0.3594],
        [ 0.0000,  0.2441, -0.0410,  0.0830, -0.0079, -0.0430,  0.5547,  0.4648,  0.0654,  0.0085, -0.4961, -0.5508, -0.0369, -0.4238,  0.1768],
        [ 0.0000,  0.3398, -0.1230,  0.0320, -0.1826,  0.3145, -0.0200, -0.3027, -0.0608,  0.1807,  0.3066,  0.0179, -0.0219,  0.2002,  0.5039],
        [ 0.0000, -0.8984,  0.0277, -0.2266, -0.5039,  0.1230, -0.2402, -0.3984,  0.0405, -0.2422,  0.4121, -0.0019, -0.0947,  0.0679, -0.0347],
        [ 0.0000,  0.1631, -0.2197,  0.3242, -0.0141,  0.4766,  0.5312,  0.2188,  0.1172,  0.0398, -0.2012, -0.2910,  0.2344,  0.0059,  0.1807],
        [ 0.0000,  0.0898,  0.2793,  0.1846, -0.3047,  0.1436, -0.1035, -0.1904,  0.4277, -0.5312, -0.4863, -0.0322,  0.2461,  0.2148,  0.2139],
        [ 0.0000,  0.3867, -0.3047, -0.1455, -0.0967, -0.4043,  0.3828,  0.3496,  0.2432,  0.1543, -0.6406, -0.6914, -0.1162, -0.3105,  0.0869],
        [ 0.0000, -0.2363,  0.0630, -0.3633,  0.4863, -0.2178, -0.5234, -0.0114, -0.2852,  0.2090, -0.0139, -0.0552,  0.3379, -0.5820, -0.7422]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4945],
        [0.3452],
        [0.2389],
        [0.1843],
        [0.1644],
        [0.1375],
        [0.1246],
        [0.1025],
        [0.0961],
        [0.0883],
        [0.0811],
        [0.0721],
        [0.0678],
        [0.0631]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5195, 0.4805, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3594, 0.3691, 0.2715, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2520, 0.2207, 0.2236, 0.3027, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2168, 0.1270, 0.2061, 0.2578, 0.1934, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1543, 0.1797, 0.1533, 0.1963, 0.1099, 0.2070, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1367, 0.0845, 0.1182, 0.1445, 0.1318, 0.1904, 0.1943, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1396, 0.1006, 0.1016, 0.1436, 0.1079, 0.1387, 0.1279, 0.1406, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1084, 0.0996, 0.1367, 0.1040, 0.0903, 0.0903, 0.1641, 0.1040, 0.1016, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1011, 0.1113, 0.0771, 0.0947, 0.1211, 0.0747, 0.1396, 0.1089, 0.0898, 0.0815, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0776, 0.0884, 0.0664, 0.1235, 0.0913, 0.1240, 0.0728, 0.1060, 0.0786, 0.0962, 0.0757, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0806, 0.0747, 0.0625, 0.0903, 0.0532, 0.1074, 0.0835, 0.0801, 0.0815, 0.0688, 0.1123, 0.1050, 0.0000, 0.0000, 0.0000],
        [0.0815, 0.0674, 0.0981, 0.0786, 0.0552, 0.0947, 0.0771, 0.0830, 0.0559, 0.0513, 0.1079, 0.0825, 0.0664, 0.0000, 0.0000],
        [0.0898, 0.0601, 0.0894, 0.0576, 0.0493, 0.0752, 0.0894, 0.0771, 0.0654, 0.0381, 0.0874, 0.1177, 0.0491, 0.0552, 0.0000],
        [0.0645, 0.0513, 0.0747, 0.0613, 0.0474, 0.0811, 0.0884, 0.0664, 0.0698, 0.0645, 0.0566, 0.0942, 0.0449, 0.0620, 0.0732]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0315, -0.0195,  0.0021,  ..., -0.0066, -0.0253,  0.0160],
        [-0.0025,  0.0242,  0.0002,  ...,  0.0097, -0.0017, -0.0285],
        [ 0.0032,  0.0270,  0.0206,  ...,  0.0067,  0.0047,  0.0089],
        ...,
        [-0.0078,  0.0238,  0.0182,  ...,  0.0478, -0.0120, -0.0083],
        [-0.0135, -0.0191, -0.0169,  ..., -0.0100,  0.0065,  0.0082],
        [ 0.0220,  0.0225,  0.0133,  ...,  0.0133, -0.0259,  0.0175]], device='cuda:0', requires_grad=True)
K: tensor([-0.8867, -0.6094,  0.1582,  0.3984, -0.4590, -0.8711,  0.7188, -1.1094,  0.1836,  0.7695, -0.4023, -0.5156,  0.0391, -0.4688, -0.0369,  0.8633,  0.5508, -0.5586,  0.2236, -0.5586,  0.2754, -0.2324, -0.2305,  0.3359,  0.0427, -0.6914,  0.4277,  0.9219, -0.2812, -1.2109,  0.1309,  0.1211,
         0.6836,  0.3242,  1.2500,  0.2061, -0.3633,  0.3496,  0.3125,  0.6641,  0.8047,  0.6719, -0.2578,  0.3008,  0.4766,  1.0469,  0.2061,  0.0454,  0.7188, -0.4668,  0.4590,  0.0654, -0.0649,  0.7344, -0.4375, -0.9375, -0.2949,  0.3223,  0.5859, -0.1289, -1.1953,  0.4805,  1.0547, -0.7383],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0084, -0.0169, -0.0106,  ...,  0.0056,  0.0031, -0.0009],
        [ 0.0169,  0.0023, -0.0369,  ..., -0.0043, -0.0019, -0.0294],
        [ 0.0418,  0.0184,  0.0282,  ..., -0.0085,  0.0297,  0.0051],
        ...,
        [-0.0114, -0.0124,  0.0137,  ...,  0.0223, -0.0097, -0.0257],
        [ 0.0369,  0.0117, -0.0075,  ..., -0.0161,  0.0142,  0.0214],
        [ 0.0082, -0.0207, -0.0268,  ...,  0.0062, -0.0146,  0.0321]], device='cuda:0', requires_grad=True)
Q: tensor([-0.3457,  1.2188,  0.7539,  0.2061, -0.6445, -0.1099, -0.6797, -0.5625,  0.1074,  0.0625,  0.1826, -1.1172,  0.2832, -0.6680,  0.7344,  1.0625, -0.1318, -0.4355,  1.1719,  0.0752, -0.4258, -0.0194, -0.1621,  0.5117, -0.5898,  0.1904, -0.5625,  0.9297,  0.0962, -0.3105, -0.3672, -0.3242,
        -0.6914,  0.1318,  0.5117, -0.1582, -0.4766, -0.7148, -0.3789,  0.2285, -0.8047, -0.2422,  0.4453, -0.9570, -0.2246,  0.2832,  0.0874,  0.4199,  0.8242,  0.6367, -0.1309,  0.3125,  0.0344, -0.2637,  0.4570,  0.8633,  0.3848, -0.3652, -0.3691, -0.6211, -0.6367,  0.2637, -0.8281,  0.1377],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.0752,  0.1514, -0.0116, -0.5156,  0.0898,  0.1035,  0.0145,  0.1157,  0.3535, -0.0376, -0.0383,  0.1602,  0.0718,  0.3555],
        [ 0.0000,  0.0242, -0.2832,  0.3066, -0.3281, -0.1865, -0.2656,  0.0549, -0.3066, -0.3613,  0.4199, -0.2539, -0.2910, -0.3457, -0.0111],
        [ 0.0000, -0.1348, -0.1201,  0.1836, -0.3105,  0.2158, -0.0062,  0.1572,  0.0762,  0.2012, -0.1826, -0.1797,  0.1172, -0.3066,  0.4277],
        [ 0.0000, -0.5352, -0.0503,  0.1729, -0.1147,  0.3125,  0.4043,  0.0322, -0.0179, -0.2197,  0.0884, -0.1660, -0.0334, -0.2344,  0.1270],
        [ 0.0000,  0.1504, -0.0095,  0.2393, -0.3398,  0.2910,  0.2314,  0.3965,  0.2988,  0.0967,  0.1621, -0.0608,  0.3223, -0.1572,  0.4453],
        [ 0.0000, -0.4824, -0.1445,  0.0574, -0.0391,  0.3320,  0.3516,  0.0938, -0.1035, -0.1030, -0.0354,  0.1729, -0.0840, -0.1768,  0.6211],
        [ 0.0000, -0.3262, -0.3145,  0.0339, -0.2539, -0.0037, -0.0884,  0.0094, -0.0811, -0.0095,  0.2617, -0.4824, -0.1953, -0.5820,  0.1484],
        [ 0.0000, -0.0879,  0.2344, -0.0425, -0.1816, -0.1826,  0.4160, -0.0420, -0.0640, -0.3105, -0.0237,  0.6914,  0.1680, -0.1963, -0.2578],
        [ 0.0000,  0.0947, -0.2715, -0.0645,  0.1807, -0.2988,  0.3262,  0.0728, -0.1191, -0.2158,  0.0454,  0.2891, -0.5273,  0.1836,  0.1445],
        [ 0.0000,  0.1289, -0.1592,  0.4629,  0.1621,  0.4688, -0.0688,  0.3086,  0.0126,  0.2129, -0.0294,  0.0679,  0.1069, -0.1147,  0.3789],
        [ 0.0000, -0.0781, -0.2559,  0.1138, -0.4180,  0.2852,  0.0371, -0.0051,  0.0087, -0.1611,  0.3320,  0.2637, -0.2598, -0.0148,  0.6836],
        [ 0.0000, -0.1914,  0.1865, -0.0369, -0.3887,  0.1504, -0.0564,  0.0168, -0.3770, -0.4668,  0.2773,  0.0126, -0.2031, -0.2158,  0.1396],
        [ 0.0000, -0.4004, -0.0035, -0.4414, -0.5938, -0.1748, -0.0057, -0.1533, -0.3164, -0.8594, -0.0283,  0.2695, -0.6016, -0.4883, -0.6680],
        [ 0.0000, -0.2266,  0.1504, -0.0481, -0.3047,  0.2334,  0.3184,  0.0356,  0.0830,  0.0021, -0.1250,  0.3848, -0.3594, -0.0349,  0.1289]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5241],
        [0.3462],
        [0.2473],
        [0.2045],
        [0.1570],
        [0.1349],
        [0.1267],
        [0.1127],
        [0.0992],
        [0.0877],
        [0.0855],
        [0.0733],
        [0.0717],
        [0.0660]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4512, 0.5469, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3047, 0.3262, 0.3672, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2969, 0.2207, 0.1934, 0.2871, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1992, 0.2051, 0.1592, 0.2451, 0.1914, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1758, 0.1748, 0.1152, 0.1885, 0.1689, 0.1758, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1670, 0.1416, 0.1182, 0.1406, 0.1504, 0.1099, 0.1719, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1270, 0.1162, 0.0947, 0.1250, 0.1475, 0.1309, 0.1201, 0.1396, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1348, 0.1035, 0.0977, 0.1182, 0.1216, 0.1060, 0.1030, 0.1025, 0.1128, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1089, 0.1011, 0.0796, 0.1089, 0.1089, 0.0942, 0.1045, 0.1045, 0.0840, 0.1060, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1245, 0.0762, 0.0732, 0.0811, 0.0952, 0.0767, 0.0918, 0.0972, 0.0635, 0.1006, 0.1201, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0923, 0.0801, 0.0698, 0.0806, 0.0864, 0.0781, 0.0767, 0.0786, 0.0591, 0.1123, 0.1006, 0.0854, 0.0000, 0.0000, 0.0000],
        [0.0928, 0.0688, 0.0586, 0.0825, 0.0757, 0.0718, 0.0825, 0.0845, 0.0654, 0.0938, 0.0747, 0.0796, 0.0693, 0.0000, 0.0000],
        [0.0752, 0.0649, 0.0564, 0.0728, 0.0776, 0.0601, 0.0703, 0.0674, 0.0645, 0.0913, 0.0830, 0.0635, 0.0952, 0.0583, 0.0000],
        [0.0703, 0.0654, 0.0464, 0.0718, 0.0649, 0.0625, 0.0703, 0.0630, 0.0527, 0.0820, 0.0732, 0.0586, 0.0879, 0.0591, 0.0718]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0098,  0.0023,  0.0096,  ..., -0.0029,  0.0136, -0.0152],
        [ 0.0276, -0.0503, -0.0376,  ...,  0.0137,  0.0056, -0.0307],
        [ 0.0382, -0.0428,  0.0264,  ...,  0.0034,  0.0039,  0.0052],
        ...,
        [ 0.0389,  0.0074, -0.0257,  ..., -0.0137,  0.0011,  0.0195],
        [ 0.0057,  0.0249, -0.0200,  ..., -0.0034, -0.0161, -0.0216],
        [ 0.0190, -0.0086,  0.0045,  ...,  0.0210,  0.0035,  0.0163]], device='cuda:0', requires_grad=True)
K: tensor([-0.3691,  0.2188, -0.1719,  0.1689,  0.5234,  0.5430,  0.7109,  0.2988, -0.1533, -0.7188,  0.4219,  0.1250, -0.4961, -0.5391,  0.7773, -0.1816, -0.4219, -0.2891,  0.3027,  0.0225,  0.0864,  0.3203, -0.9922, -0.4453,  0.3848, -0.5273,  0.6016, -0.4395,  0.4395,  0.4375,  0.3828,  0.1729,
        -0.6328,  0.3262, -0.5859, -0.2041,  0.3672, -1.5312,  1.0859,  0.0349,  0.0669, -0.9922,  1.1641,  0.4414,  1.7188, -0.2363, -0.2451,  0.1318,  0.1396,  0.7070, -0.3887, -0.4043,  0.0059, -0.2188, -0.1660, -1.4766,  0.0508,  0.6562, -0.1035, -0.3574, -0.4355, -0.1011,  0.0767, -0.2412],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0147,  0.0198,  0.0373,  ..., -0.0233,  0.0248,  0.0004],
        [ 0.0076,  0.0409,  0.0140,  ...,  0.0132,  0.0064, -0.0160],
        [-0.0107,  0.0079,  0.0238,  ..., -0.0220,  0.0336, -0.0113],
        ...,
        [-0.0131, -0.0175,  0.0094,  ..., -0.0225,  0.0113, -0.0039],
        [ 0.0157, -0.0113,  0.0228,  ...,  0.0287,  0.0010, -0.0054],
        [ 0.0316, -0.0211, -0.0146,  ...,  0.0178,  0.0159,  0.0124]], device='cuda:0', requires_grad=True)
Q: tensor([    -0.3711,      0.2041,     -0.7344,      0.2520,      0.4355,      0.6094,      0.4277,      0.0781,      0.0486,     -0.3574,      0.9219,      0.7773,     -0.4824,      0.7656,      0.2090,      0.6836,      0.4766,     -0.1338,      0.8359,     -0.4570,      0.3184,     -0.5938,
            -0.4258,      0.3477,      0.0264,      0.5469,      1.4141,     -0.3125,      0.2773,      0.1533,      0.1611,      0.0388,      0.1895,     -0.9805,      0.0151,      0.3438,      0.3535,      0.3613,     -0.4043,     -0.4688,      0.3848,      0.3398,      0.0442,     -0.2891,
             0.4941,      0.0447,      1.0547,     -0.6055,     -0.4785,      0.1260,      0.1963,      0.2393,     -0.0486,      1.1484,      1.0156,      0.1328,     -0.5039,     -0.3223,      0.0005,      1.2734,     -0.0217,     -0.0420,     -1.8281,     -0.2988], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.1943,     -0.0100,      0.3184,      0.1885,      0.0087,      0.2852,      0.2676,      0.1318,      0.4023,      0.1465,      0.0349,      0.5430,      0.0569,      0.3164],
        [     0.0000,      0.0688,      0.1846,      0.3633,      0.2363,      0.4473,      0.3203,      0.5703,      0.1777,      0.6523,      0.4609,      0.1074,      0.6758,      0.0913,      0.2373],
        [     0.0000,     -0.2988,     -0.4316,     -0.0347,     -0.2100,     -0.0957,     -0.2324,     -0.1826,     -0.2500,      0.0576,      0.0796,     -0.3672,      0.2656,     -0.1865,      0.1021],
        [     0.0000,      0.0317,     -0.2197,      0.2080,     -0.0359,      0.0405,      0.2871,      0.2617,     -0.0583,      0.1729,      0.2773,     -0.1611,      0.3652,      0.1367,      0.4336],
        [     0.0000,     -0.0053,     -0.4219,      0.0703,     -0.0386,     -0.0033,     -0.0080,      0.0854,     -0.0869,      0.1611,     -0.0444,     -0.1641,      0.0962,      0.0378,     -0.0581],
        [     0.0000,     -0.1689,     -0.3477,     -0.1719,     -0.1099,     -0.4199,      0.0249,     -0.0410,     -0.3164,      0.0162,     -0.0177,     -0.2012,      0.1826,     -0.1396,     -0.0894],
        [     0.0000,     -0.0835,     -0.2891,     -0.0134,      0.1504,      0.0334,     -0.0503,      0.0981,     -0.2695,      0.3711,      0.1060,     -0.1270,      0.1836,     -0.2109,      0.0354],
        [     0.0000,     -0.2656,     -0.3242,     -0.1348,     -0.1069,     -0.2461,     -0.2734,     -0.2773,     -0.1816,      0.0762,      0.0947,     -0.2158,      0.0869,     -0.1885,      0.0253],
        [     0.0000,     -0.0728,     -0.3086,      0.0001,      0.0017,     -0.1436,     -0.0396,     -0.0374,     -0.2578,     -0.0272,     -0.0260,     -0.1699,      0.2002,     -0.1504,     -0.0072],
        [     0.0000,     -0.4961,     -0.5352,     -0.4297,     -0.2695,     -0.4863,     -0.3047,     -0.2490,     -0.6797,     -0.2129,     -0.0361,     -0.2266,      0.0344,     -0.3047,     -0.1689],
        [     0.0000,     -0.1445,     -0.2832,     -0.1338,     -0.0640,     -0.1670,     -0.1885,     -0.1582,     -0.4434,      0.1973,      0.0884,     -0.0796,      0.1079,     -0.0713,      0.0845],
        [     0.0000,     -0.2949,     -0.4590,     -0.1182,     -0.2051,     -0.2578,     -0.1162,     -0.0913,     -0.3457,      0.0138,     -0.2129,     -0.1533,     -0.2910,     -0.4453,     -0.1094],
        [     0.0000,     -0.1523,     -0.2910,     -0.0339,      0.0306,     -0.2285,     -0.0664,     -0.1084,     -0.1582,      0.1895,      0.0952,     -0.1748,      0.2314,     -0.2539,      0.1045],
        [     0.0000,     -0.0684,     -0.4141,      0.0204,     -0.0801,     -0.1187,     -0.0012,     -0.1084,     -0.2871,      0.1562,      0.0388,     -0.1826,      0.2256,     -0.1729,      0.0239]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5122],
        [0.3519],
        [0.2644],
        [0.2125],
        [0.1751],
        [0.1502],
        [0.1231],
        [0.1208],
        [0.0947],
        [0.0924],
        [0.0838],
        [0.0780],
        [0.0721],
        [0.0644]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3574, 0.6406, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2051, 0.3730, 0.4219, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1406, 0.2578, 0.2930, 0.3086, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1069, 0.1943, 0.2246, 0.2363, 0.2373, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0854, 0.1572, 0.1816, 0.1914, 0.1924, 0.1914, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0723, 0.1309, 0.1523, 0.1611, 0.1611, 0.1611, 0.1602, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0620, 0.1128, 0.1309, 0.1387, 0.1387, 0.1387, 0.1387, 0.1387, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0542, 0.0986, 0.1152, 0.1221, 0.1221, 0.1221, 0.1216, 0.1221, 0.1221, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0483, 0.0874, 0.1025, 0.1084, 0.1089, 0.1089, 0.1084, 0.1089, 0.1089, 0.1084, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0437, 0.0791, 0.0923, 0.0981, 0.0986, 0.0981, 0.0981, 0.0986, 0.0981, 0.0981, 0.0977, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0398, 0.0718, 0.0840, 0.0894, 0.0898, 0.0898, 0.0894, 0.0898, 0.0894, 0.0894, 0.0894, 0.0879, 0.0000, 0.0000, 0.0000],
        [0.0366, 0.0659, 0.0771, 0.0820, 0.0825, 0.0825, 0.0820, 0.0825, 0.0825, 0.0820, 0.0820, 0.0811, 0.0811, 0.0000, 0.0000],
        [0.0337, 0.0610, 0.0713, 0.0757, 0.0762, 0.0762, 0.0762, 0.0762, 0.0762, 0.0762, 0.0757, 0.0747, 0.0752, 0.0747, 0.0000],
        [0.0315, 0.0569, 0.0664, 0.0708, 0.0708, 0.0708, 0.0708, 0.0708, 0.0708, 0.0708, 0.0703, 0.0698, 0.0698, 0.0693, 0.0693]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0133,  0.0194,  0.0054,  ..., -0.0245,  0.0052, -0.0522],
        [-0.0184, -0.0148, -0.0213,  ..., -0.0045,  0.0195,  0.0033],
        [-0.0298, -0.0137,  0.0392,  ..., -0.0241, -0.0221, -0.0260],
        ...,
        [-0.0004, -0.0271, -0.0002,  ..., -0.0242, -0.0162, -0.0380],
        [-0.0181, -0.0397, -0.0167,  ..., -0.0166, -0.0110,  0.0152],
        [-0.0178,  0.0186,  0.0259,  ..., -0.0239, -0.0165, -0.0086]], device='cuda:0', requires_grad=True)
K: tensor([-0.0859,  0.8086,  0.8164,  0.2246,  0.7578,  1.2734,  1.3047, -0.6445,  0.0806, -0.7930,  0.0947, -0.1206,  0.3691, -0.5664, -0.4922, -0.0540, -0.1992,  0.2793, -0.1240,  0.2695,  0.2363, -0.7578,  0.2520,  0.5547, -0.1328, -0.3418,  0.4727,  0.0850, -0.2500, -0.0669,  1.0938,  0.7656,
         0.0815, -0.0679, -0.1465,  0.1494, -0.2871,  0.5000, -0.8086, -0.4551,  0.5742, -0.9844, -0.0620,  0.0120,  0.1680, -0.6992, -0.0234,  0.1768, -1.0156, -0.2227, -1.0391,  0.2041, -0.3789, -0.2402,  1.2891, -0.1357, -0.1367,  0.8633, -0.0253, -0.6250, -0.5234, -0.1865, -0.4707,  1.3594],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0168,  0.0015,  0.0127,  ...,  0.0289, -0.0173, -0.0244],
        [ 0.0207, -0.0253,  0.0186,  ..., -0.0163, -0.0086,  0.0308],
        [-0.0239,  0.0090,  0.0398,  ...,  0.0200,  0.0221, -0.0060],
        ...,
        [ 0.0056,  0.0013, -0.0386,  ..., -0.0092, -0.0098,  0.0082],
        [-0.0028,  0.0288, -0.0162,  ...,  0.0271,  0.0097, -0.0223],
        [-0.0081,  0.0034, -0.0078,  ...,  0.0062,  0.0059, -0.0104]], device='cuda:0', requires_grad=True)
Q: tensor([-0.1240,  0.7891,  1.8047, -0.2578, -0.5781,  0.1216,  0.6523, -0.9102, -0.0481,  0.2236,  0.9805, -0.1064,  0.4043, -0.3496, -0.1592, -0.1611, -0.1318,  0.6719, -0.0396, -0.1348,  0.0527,  0.0549,  0.0359,  0.8359, -0.0623, -0.2383,  0.3086,  0.4004, -1.1094,  0.5469, -0.0791,  1.3047,
         0.1943,  0.5469, -0.0996, -0.4590, -0.4668,  0.4902,  0.0162,  0.1611, -0.5859,  0.2871,  0.3691, -0.1108, -0.0132,  0.4824,  0.8320, -0.4023,  0.1328, -0.2578,  0.1895, -0.0747, -0.3965,  0.0454,  0.1016,  0.7656, -0.7109, -0.0713, -0.6289, -0.9258, -0.3770, -0.3086,  0.2432,  0.6719],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.5859, 0.6914, 0.7305, 0.7305, 0.7266, 0.7227, 0.7305, 0.7266, 0.7266, 0.7266, 0.7148, 0.7227, 0.7148, 0.7188],
        [0.0000, 0.5977, 0.7188, 0.7656, 0.7617, 0.7578, 0.7539, 0.7578, 0.7539, 0.7539, 0.7500, 0.7383, 0.7422, 0.7344, 0.7383],
        [0.0000, 0.6055, 0.7383, 0.7852, 0.7812, 0.7773, 0.7734, 0.7773, 0.7734, 0.7734, 0.7695, 0.7578, 0.7617, 0.7539, 0.7539],
        [0.0000, 0.6016, 0.7422, 0.7930, 0.7969, 0.7930, 0.7891, 0.7930, 0.7891, 0.7891, 0.7852, 0.7734, 0.7773, 0.7695, 0.7695],
        [0.0000, 0.6055, 0.7500, 0.8047, 0.8086, 0.8047, 0.8008, 0.8047, 0.8047, 0.8008, 0.7969, 0.7852, 0.7891, 0.7852, 0.7852],
        [0.0000, 0.5938, 0.7461, 0.8008, 0.8008, 0.8008, 0.7969, 0.8008, 0.7969, 0.7969, 0.7930, 0.7812, 0.7852, 0.7812, 0.7812],
        [0.0000, 0.5977, 0.7500, 0.8047, 0.8086, 0.8047, 0.8047, 0.8086, 0.8047, 0.8047, 0.8008, 0.7891, 0.7930, 0.7852, 0.7852],
        [0.0000, 0.6016, 0.7539, 0.8125, 0.8164, 0.8125, 0.8086, 0.8164, 0.8125, 0.8086, 0.8086, 0.7930, 0.7969, 0.7930, 0.7930],
        [0.0000, 0.5938, 0.7539, 0.8086, 0.8164, 0.8125, 0.8086, 0.8164, 0.8125, 0.8086, 0.8086, 0.7969, 0.8008, 0.7930, 0.7930],
        [0.0000, 0.5898, 0.7461, 0.8047, 0.8125, 0.8086, 0.8086, 0.8125, 0.8086, 0.8086, 0.8047, 0.7930, 0.7969, 0.7930, 0.7930],
        [0.0000, 0.5898, 0.7500, 0.8086, 0.8125, 0.8125, 0.8086, 0.8164, 0.8125, 0.8086, 0.8086, 0.7969, 0.8008, 0.7930, 0.7930],
        [0.0000, 0.5898, 0.7461, 0.8047, 0.8125, 0.8086, 0.8086, 0.8125, 0.8086, 0.8086, 0.8047, 0.7930, 0.7969, 0.7930, 0.7930],
        [0.0000, 0.5898, 0.7500, 0.8086, 0.8125, 0.8125, 0.8086, 0.8164, 0.8125, 0.8125, 0.8086, 0.7969, 0.8008, 0.7930, 0.7930],
        [0.0000, 0.5898, 0.7461, 0.8047, 0.8125, 0.8086, 0.8086, 0.8125, 0.8086, 0.8086, 0.8047, 0.7930, 0.7969, 0.7930, 0.7930]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4448],
        [0.2931],
        [0.2221],
        [0.1792],
        [0.1502],
        [0.1296],
        [0.1140],
        [0.1016],
        [0.0919],
        [0.0838],
        [0.0770],
        [0.0713],
        [0.0665],
        [0.0622]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4844, 0.5156, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2910, 0.3711, 0.3379, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2158, 0.2871, 0.2598, 0.2383, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1719, 0.2344, 0.2119, 0.1943, 0.1875, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1445, 0.1992, 0.1807, 0.1650, 0.1592, 0.1523, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1245, 0.1738, 0.1572, 0.1436, 0.1387, 0.1328, 0.1299, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1094, 0.1543, 0.1396, 0.1279, 0.1226, 0.1177, 0.1152, 0.1138, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0986, 0.1387, 0.1260, 0.1147, 0.1104, 0.1055, 0.1035, 0.1021, 0.1011, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0889, 0.1260, 0.1143, 0.1045, 0.1001, 0.0962, 0.0942, 0.0928, 0.0918, 0.0913, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0815, 0.1157, 0.1050, 0.0957, 0.0918, 0.0879, 0.0864, 0.0850, 0.0840, 0.0835, 0.0825, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0752, 0.1069, 0.0972, 0.0884, 0.0850, 0.0815, 0.0796, 0.0786, 0.0776, 0.0771, 0.0762, 0.0757, 0.0000, 0.0000, 0.0000],
        [0.0698, 0.0996, 0.0903, 0.0825, 0.0791, 0.0757, 0.0742, 0.0732, 0.0723, 0.0718, 0.0708, 0.0703, 0.0703, 0.0000, 0.0000],
        [0.0654, 0.0933, 0.0845, 0.0771, 0.0737, 0.0708, 0.0693, 0.0684, 0.0674, 0.0669, 0.0664, 0.0659, 0.0654, 0.0649, 0.0000],
        [0.0610, 0.0874, 0.0796, 0.0723, 0.0693, 0.0664, 0.0649, 0.0645, 0.0635, 0.0630, 0.0623, 0.0618, 0.0615, 0.0610, 0.0608]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0361, -0.0197, -0.0035,  ..., -0.0177,  0.0044, -0.0045],
        [ 0.0042, -0.0341, -0.0034,  ..., -0.0024,  0.0171,  0.0058],
        [-0.0197,  0.0176, -0.0232,  ..., -0.0024, -0.0177,  0.0061],
        ...,
        [ 0.0360, -0.0008, -0.0327,  ...,  0.0037, -0.0163,  0.0177],
        [-0.0135,  0.0072,  0.0065,  ...,  0.0351, -0.0262,  0.0145],
        [-0.0332, -0.0005, -0.0286,  ...,  0.0197,  0.0322,  0.0248]], device='cuda:0', requires_grad=True)
K: tensor([ 0.7539, -0.1602,  0.7188, -0.8125, -0.3164, -0.6680,  0.9766, -0.6445,  0.8203, -0.4727, -0.8438,  0.2471,  0.0791,  0.3945,  0.8516,  0.7070,  0.2598,  0.1357,  1.2734, -0.5508, -0.4844, -0.1387, -0.4551, -0.0752, -0.1797,  0.1455,  0.4941, -0.3418,  0.9570,  0.4609,  0.5391,  0.4434,
         0.7930, -0.7500,  0.2559,  0.7031, -1.4375,  1.6484, -0.6094,  0.0081,  0.7031,  0.3379,  0.5703, -0.2715,  0.9414, -0.3594, -0.6797,  0.4102, -0.6836,  0.1387,  0.7305, -0.7031,  0.1973, -0.5742, -0.1738,  0.1357, -0.1055,  1.3438,  0.0703,  0.5820,  0.5039, -0.3555,  0.1738,  0.9375],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0088, -0.0248,  0.0051,  ..., -0.0057, -0.0049, -0.0132],
        [ 0.0061, -0.0062,  0.0070,  ...,  0.0200, -0.0266,  0.0289],
        [ 0.0265, -0.0153,  0.0022,  ...,  0.0048, -0.0223, -0.0066],
        ...,
        [-0.0012, -0.0364, -0.0212,  ...,  0.0182,  0.0041, -0.0058],
        [ 0.0085, -0.0028,  0.0213,  ...,  0.0147,  0.0357,  0.0070],
        [ 0.0052, -0.0131, -0.0078,  ...,  0.0209, -0.0136, -0.0333]], device='cuda:0', requires_grad=True)
Q: tensor([     0.8945,      0.1543,     -0.2773,      0.4551,      0.3438,      0.5508,      0.0239,     -0.0942,      0.3008,      0.0074,      0.9492,      0.3379,      0.0884,     -0.5156,      0.4414,     -0.3848,     -1.1797,      0.8789,     -0.3066,      0.0075,     -1.2422,      0.2461,
            -0.7539,     -0.4277,      0.3477,     -0.2168,      0.7656,     -0.2168,     -0.5234,      0.3262,      0.2471,     -0.4590,      0.1357,     -0.7656,      0.0199,      0.5547,     -0.5039,     -0.5352,      0.1904,      0.1943,     -1.3438,     -0.4531,      0.7148,     -0.0128,
            -0.4531,      0.8125,      0.0192,     -0.6484,     -0.5469,      0.3828,      0.2100,     -0.6641,      0.0869,      0.2637,      0.6992,      0.9180,     -0.6602,      0.1050,     -0.0008,      0.1650,     -0.2598,     -0.0620,     -0.1895,      0.3691], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.0640,     -0.0388,     -0.1123,     -0.1338,     -0.1709,     -0.1826,     -0.1885,     -0.1982,     -0.1992,     -0.2109,     -0.2178,     -0.2197,     -0.2266,     -0.2285],
        [     0.0000,      0.2451,      0.1484,      0.0654,      0.0356,     -0.0039,     -0.0190,     -0.0277,     -0.0388,     -0.0417,     -0.0535,     -0.0608,     -0.0640,     -0.0723,     -0.0737],
        [     0.0000,      0.2812,      0.1826,      0.0957,      0.0618,      0.0209,      0.0037,     -0.0065,     -0.0186,     -0.0226,     -0.0344,     -0.0417,     -0.0457,     -0.0547,     -0.0557],
        [     0.0000,      0.3086,      0.2090,      0.1196,      0.0835,      0.0415,      0.0233,      0.0120,     -0.0003,     -0.0050,     -0.0168,     -0.0245,     -0.0284,     -0.0378,     -0.0391],
        [     0.0000,      0.3223,      0.2236,      0.1338,      0.0967,      0.0552,      0.0364,      0.0247,      0.0123,      0.0074,     -0.0044,     -0.0121,     -0.0161,     -0.0258,     -0.0267],
        [     0.0000,      0.3340,      0.2354,      0.1445,      0.1055,      0.0640,      0.0444,      0.0322,      0.0198,      0.0145,      0.0027,     -0.0051,     -0.0091,     -0.0189,     -0.0199],
        [     0.0000,      0.3438,      0.2451,      0.1523,      0.1133,      0.0708,      0.0508,      0.0383,      0.0256,      0.0199,      0.0082,      0.0002,     -0.0039,     -0.0139,     -0.0149],
        [     0.0000,      0.3438,      0.2451,      0.1523,      0.1118,      0.0698,      0.0493,      0.0366,      0.0239,      0.0179,      0.0063,     -0.0017,     -0.0058,     -0.0159,     -0.0168],
        [     0.0000,      0.3496,      0.2539,      0.1602,      0.1201,      0.0781,      0.0576,      0.0444,      0.0320,      0.0259,      0.0143,      0.0063,      0.0021,     -0.0079,     -0.0090],
        [     0.0000,      0.3477,      0.2500,      0.1572,      0.1167,      0.0747,      0.0542,      0.0410,      0.0283,      0.0222,      0.0106,      0.0026,     -0.0015,     -0.0116,     -0.0126],
        [     0.0000,      0.3535,      0.2578,      0.1650,      0.1240,      0.0820,      0.0615,      0.0481,      0.0354,      0.0293,      0.0178,      0.0097,      0.0056,     -0.0045,     -0.0055],
        [     0.0000,      0.3535,      0.2578,      0.1641,      0.1230,      0.0811,      0.0601,      0.0466,      0.0339,      0.0276,      0.0160,      0.0080,      0.0038,     -0.0064,     -0.0074],
        [     0.0000,      0.3555,      0.2578,      0.1641,      0.1226,      0.0806,      0.0596,      0.0461,      0.0332,      0.0269,      0.0153,      0.0072,      0.0031,     -0.0071,     -0.0082],
        [     0.0000,      0.3594,      0.2617,      0.1680,      0.1270,      0.0850,      0.0640,      0.0503,      0.0374,      0.0310,      0.0194,      0.0113,      0.0071,     -0.0031,     -0.0041]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4609],
        [0.3020],
        [0.2266],
        [0.1826],
        [0.1532],
        [0.1318],
        [0.1159],
        [0.1035],
        [0.0934],
        [0.0852],
        [0.0783],
        [0.0724],
        [0.0674],
        [0.0630]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( the:0.0114 the:0.0118 the:0.0118 the:0.0118 the:0.0118 the:0.0118 the:0.0118 the:0.0118)
 the
------
		( the:0.0118 the:0.0118 the:0.0118 the:0.0118 the:0.0118 the:0.0118 the:0.0118 the:0.0118)
 the the the the the the the the the the the the the the the
@ 50 train 9.5324 , allloss: 11.0183, dt: 1661.35ms, fracRes: 0.0062, norm(attn): 0.0615, norm(output): 0.1260, norm(x): 0.1263, norm(y): 0.9999, norm:7.5584, tok/sec: 78895.07, flops:69.09, batch-reuse:1
@ 51 train 9.5780 , allloss: 10.9450, dt: 1260.17ms, fracRes: 0.0062, norm(attn): 0.0623, norm(output): 0.1260, norm(x): 0.1273, norm(y): 0.9999, norm:6.9287, tok/sec: 104011.35, flops:91.08, batch-reuse:1
@ 52 train 9.5022 , allloss: 10.7625, dt: 1246.80ms, fracRes: 0.0062, norm(attn): 0.0623, norm(output): 0.1270, norm(x): 0.1282, norm(y): 0.9999, norm:6.3487, tok/sec: 105126.83, flops:92.06, batch-reuse:1
@ 53 train 9.5426 , allloss: 10.7087, dt: 1258.35ms, fracRes: 0.0062, norm(attn): 0.0623, norm(output): 0.1270, norm(x): 0.1291, norm(y): 0.9999, norm:5.8499, tok/sec: 104161.61, flops:91.21, batch-reuse:1
@ 54 train 9.5353 , allloss: 10.6164, dt: 1292.11ms, fracRes: 0.0061, norm(attn): 0.0623, norm(output): 0.1309, norm(x): 0.1300, norm(y): 0.9999, norm:5.3878, tok/sec: 101440.64, flops:88.83, batch-reuse:1
@ 55 train 9.5723 , allloss: 10.5806, dt: 1242.80ms, fracRes: 0.0061, norm(attn): 0.0625, norm(output): 0.1318, norm(x): 0.1309, norm(y): 0.9999, norm:5.0085, tok/sec: 105465.18, flops:92.35, batch-reuse:1
@ 56 train 9.4888 , allloss: 10.4326, dt: 1286.50ms, fracRes: 0.0061, norm(attn): 0.0630, norm(output): 0.1318, norm(x): 0.1318, norm(y): 0.9999, norm:4.5907, tok/sec: 101882.48, flops:89.22, batch-reuse:1
@ 57 train 9.4673 , allloss: 10.3553, dt: 1274.93ms, fracRes: 0.0061, norm(attn): 0.0630, norm(output): 0.1328, norm(x): 0.1327, norm(y): 0.9999, norm:4.3584, tok/sec: 102807.56, flops:90.03, batch-reuse:1
@ 58 train 9.5080 , allloss: 10.3486, dt: 1260.21ms, fracRes: 0.0061, norm(attn): 0.0630, norm(output): 0.1328, norm(x): 0.1337, norm(y): 1.0000, norm:4.0287, tok/sec: 104008.30, flops:91.08, batch-reuse:1
@ 59 train 9.4319 , allloss: 10.2318, dt: 1277.78ms, fracRes: 0.0061, norm(attn): 0.0630, norm(output): 0.1338, norm(x): 0.1346, norm(y): 1.0000, norm:3.8983, tok/sec: 102578.29, flops:89.83, batch-reuse:1
@ 60 train 9.4559 , allloss: 10.2240, dt: 1261.03ms, fracRes: 0.0060, norm(attn): 0.0635, norm(output): 0.1348, norm(x): 0.1356, norm(y): 1.0000, norm:3.5854, tok/sec: 103940.26, flops:91.02, batch-reuse:1
@ 61 train 9.4651 , allloss: 10.2055, dt: 1270.08ms, fracRes: 0.0060, norm(attn): 0.0635, norm(output): 0.1348, norm(x): 0.1365, norm(y): 1.0000, norm:3.4210, tok/sec: 103199.87, flops:90.37, batch-reuse:1
@ 62 train 9.4322 , allloss: 10.1459, dt: 1275.44ms, fracRes: 0.0060, norm(attn): 0.0635, norm(output): 0.1387, norm(x): 0.1374, norm(y): 1.0000, norm:4.8126, tok/sec: 102766.36, flops:89.99, batch-reuse:1
@ 63 train 9.4616 , allloss: 10.1597, dt: 1243.80ms, fracRes: 0.0060, norm(attn): 0.0635, norm(output): 0.1387, norm(x): 0.1383, norm(y): 1.0000, norm:3.3547, tok/sec: 105379.93, flops:92.28, batch-reuse:1
@ 64 train 9.4482 , allloss: 10.1290, dt: 1258.66ms, fracRes: 0.0060, norm(attn): 0.0654, norm(output): 0.1396, norm(x): 0.1392, norm(y): 1.0000, norm:3.2094, tok/sec: 104136.41, flops:91.19, batch-reuse:1
@ 65 train 9.4607 , allloss: 10.1263, dt: 1243.93ms, fracRes: 0.0059, norm(attn): 0.0654, norm(output): 0.1396, norm(x): 0.1402, norm(y): 1.0000, norm:3.2078, tok/sec: 105369.35, flops:92.27, batch-reuse:1
@ 66 train 9.4411 , allloss: 10.0891, dt: 1253.50ms, fracRes: 0.0059, norm(attn): 0.0659, norm(output): 0.1406, norm(x): 0.1412, norm(y): 1.0000, norm:3.4211, tok/sec: 104564.42, flops:91.57, batch-reuse:1
@ 67 train 9.3756 , allloss: 10.0089, dt: 1255.38ms, fracRes: 0.0059, norm(attn): 0.0659, norm(output): 0.1416, norm(x): 0.1422, norm(y): 1.0000, norm:3.1868, tok/sec: 104408.02, flops:91.43, batch-reuse:1
@ 68 train 9.4166 , allloss: 10.0366, dt: 1254.23ms, fracRes: 0.0059, norm(attn): 0.0664, norm(output): 0.1426, norm(x): 0.1433, norm(y): 1.0000, norm:3.0322, tok/sec: 104503.68, flops:91.51, batch-reuse:1
@ 69 train 9.3949 , allloss: 10.0029, dt: 1258.83ms, fracRes: 0.0059, norm(attn): 0.0664, norm(output): 0.1426, norm(x): 0.1444, norm(y): 1.0000, norm:3.0110, tok/sec: 104122.17, flops:91.18, batch-reuse:1
@ 70 train 9.3717 , allloss: 9.9681, dt: 1257.43ms, fracRes: 0.0058, norm(attn): 0.0669, norm(output): 0.1426, norm(x): 0.1455, norm(y): 1.0000, norm:2.9016, tok/sec: 104237.90, flops:91.28, batch-reuse:1
@ 71 train 9.3738 , allloss: 9.9581, dt: 1266.79ms, fracRes: 0.0058, norm(attn): 0.0669, norm(output): 0.1465, norm(x): 0.1466, norm(y): 1.0000, norm:2.8594, tok/sec: 103467.98, flops:90.61, batch-reuse:1
@ 72 train 9.3636 , allloss: 9.9364, dt: 1265.87ms, fracRes: 0.0058, norm(attn): 0.0669, norm(output): 0.1465, norm(x): 0.1477, norm(y): 1.0000, norm:2.7980, tok/sec: 103542.62, flops:90.67, batch-reuse:1
@ 73 train 9.3833 , allloss: 9.9471, dt: 1280.21ms, fracRes: 0.0058, norm(attn): 0.0669, norm(output): 0.1504, norm(x): 0.1489, norm(y): 1.0000, norm:3.0725, tok/sec: 102383.03, flops:89.66, batch-reuse:1
@ 74 train 9.3614 , allloss: 9.9143, dt: 1265.85ms, fracRes: 0.0058, norm(attn): 0.0674, norm(output): 0.1504, norm(x): 0.1500, norm(y): 1.0000, norm:2.6836, tok/sec: 103544.26, flops:90.67, batch-reuse:1
@ 75 train 9.5859 , allloss: 10.1351, dt: 1274.05ms, fracRes: 0.0058, norm(attn): 0.0693, norm(output): 0.1514, norm(x): 0.1512, norm(y): 1.0000, norm:3.6470, tok/sec: 102877.95, flops:90.09, batch-reuse:1
@ 76 train 9.3489 , allloss: 9.8865, dt: 1273.47ms, fracRes: 0.0058, norm(attn): 0.0693, norm(output): 0.1543, norm(x): 0.1524, norm(y): 1.0000, norm:2.6285, tok/sec: 102924.80, flops:90.13, batch-reuse:1
@ 77 train 9.5891 , allloss: 10.1263, dt: 1276.84ms, fracRes: 0.0058, norm(attn): 0.0693, norm(output): 0.1543, norm(x): 0.1536, norm(y): 1.0001, norm:4.3413, tok/sec: 102653.54, flops:89.89, batch-reuse:1
@ 78 train 9.4285 , allloss: 9.9576, dt: 1277.20ms, fracRes: 0.0057, norm(attn): 0.0698, norm(output): 0.1553, norm(x): 0.1548, norm(y): 1.0001, norm:3.3620, tok/sec: 102624.68, flops:89.87, batch-reuse:1
@ 79 train 9.2942 , allloss: 9.8181, dt: 1269.68ms, fracRes: 0.0057, norm(attn): 0.0698, norm(output): 0.1572, norm(x): 0.1559, norm(y): 1.0001, norm:2.7648, tok/sec: 103232.60, flops:90.40, batch-reuse:1
@ 80 train 9.3144 , allloss: 9.8351, dt: 1263.39ms, fracRes: 0.0057, norm(attn): 0.0703, norm(output): 0.1572, norm(x): 0.1572, norm(y): 1.0001, norm:2.7389, tok/sec: 103746.25, flops:90.85, batch-reuse:1
@ 81 train 9.3010 , allloss: 9.8155, dt: 1268.21ms, fracRes: 0.0057, norm(attn): 0.0703, norm(output): 0.1572, norm(x): 0.1585, norm(y): 1.0001, norm:2.6504, tok/sec: 103351.70, flops:90.50, batch-reuse:1
@ 82 train 9.2469 , allloss: 9.7533, dt: 1267.53ms, fracRes: 0.0057, norm(attn): 0.0708, norm(output): 0.1582, norm(x): 0.1599, norm(y): 1.0001, norm:2.6896, tok/sec: 103407.26, flops:90.55, batch-reuse:1
@ 83 train 9.2647 , allloss: 9.7659, dt: 1286.60ms, fracRes: 0.0058, norm(attn): 0.0708, norm(output): 0.1611, norm(x): 0.1612, norm(y): 1.0001, norm:2.6046, tok/sec: 101874.72, flops:89.21, batch-reuse:1
@ 84 train 9.2559 , allloss: 9.7504, dt: 1293.60ms, fracRes: 0.0058, norm(attn): 0.0708, norm(output): 0.1621, norm(x): 0.1627, norm(y): 1.0001, norm:2.5966, tok/sec: 101323.15, flops:88.73, batch-reuse:1
@ 85 train 9.2215 , allloss: 9.7112, dt: 1267.63ms, fracRes: 0.0058, norm(attn): 0.0713, norm(output): 0.1621, norm(x): 0.1641, norm(y): 1.0001, norm:2.6286, tok/sec: 103399.25, flops:90.55, batch-reuse:1
@ 86 train 9.1961 , allloss: 9.6811, dt: 1278.34ms, fracRes: 0.0058, norm(attn): 0.0728, norm(output): 0.1660, norm(x): 0.1656, norm(y): 1.0001, norm:2.5509, tok/sec: 102532.66, flops:89.79, batch-reuse:1
@ 87 train 9.2103 , allloss: 9.6949, dt: 1263.10ms, fracRes: 0.0058, norm(attn): 0.0728, norm(output): 0.1670, norm(x): 0.1670, norm(y): 1.0001, norm:2.6971, tok/sec: 103769.78, flops:90.87, batch-reuse:1
@ 88 train 9.2150 , allloss: 9.6978, dt: 1272.43ms, fracRes: 0.0058, norm(attn): 0.0732, norm(output): 0.1709, norm(x): 0.1684, norm(y): 1.0001, norm:2.4401, tok/sec: 103008.86, flops:90.20, batch-reuse:1
@ 89 train 9.1671 , allloss: 9.6489, dt: 1257.36ms, fracRes: 0.0058, norm(attn): 0.0732, norm(output): 0.1709, norm(x): 0.1698, norm(y): 1.0001, norm:2.5105, tok/sec: 104243.62, flops:91.28, batch-reuse:1
@ 90 train 9.1713 , allloss: 9.6518, dt: 1282.00ms, fracRes: 0.0059, norm(attn): 0.0732, norm(output): 0.1709, norm(x): 0.1712, norm(y): 1.0001, norm:2.7405, tok/sec: 102240.07, flops:89.53, batch-reuse:1
@ 91 train 9.1810 , allloss: 9.6599, dt: 1322.05ms, fracRes: 0.0059, norm(attn): 0.0742, norm(output): 0.1719, norm(x): 0.1726, norm(y): 1.0001, norm:2.5402, tok/sec: 99142.97, flops:86.82, batch-reuse:1
@ 92 train 9.1255 , allloss: 9.6021, dt: 1323.63ms, fracRes: 0.0059, norm(attn): 0.0752, norm(output): 0.1729, norm(x): 0.1739, norm(y): 1.0001, norm:2.4508, tok/sec: 99024.57, flops:86.71, batch-reuse:1
@ 93 train 9.1497 , allloss: 9.6235, dt: 1316.76ms, fracRes: 0.0059, norm(attn): 0.0752, norm(output): 0.1729, norm(x): 0.1753, norm(y): 1.0001, norm:2.4033, tok/sec: 99541.11, flops:87.17, batch-reuse:1
@ 94 train 9.1920 , allloss: 9.6655, dt: 1323.81ms, fracRes: 0.0060, norm(attn): 0.0752, norm(output): 0.1768, norm(x): 0.1766, norm(y): 1.0001, norm:2.8700, tok/sec: 99011.23, flops:86.70, batch-reuse:1
@ 95 train 9.1309 , allloss: 9.5971, dt: 1297.96ms, fracRes: 0.0060, norm(attn): 0.0752, norm(output): 0.1768, norm(x): 0.1780, norm(y): 1.0001, norm:2.3698, tok/sec: 100983.13, flops:88.43, batch-reuse:1
@ 96 train 9.0724 , allloss: 9.5348, dt: 1271.22ms, fracRes: 0.0060, norm(attn): 0.0771, norm(output): 0.1768, norm(x): 0.1793, norm(y): 1.0001, norm:2.3772, tok/sec: 103107.08, flops:90.29, batch-reuse:1
@ 97 train 9.0875 , allloss: 9.5462, dt: 1259.42ms, fracRes: 0.0061, norm(attn): 0.0771, norm(output): 0.1826, norm(x): 0.1806, norm(y): 1.0001, norm:2.3536, tok/sec: 104073.29, flops:91.14, batch-reuse:1
@ 98 train 9.0444 , allloss: 9.5002, dt: 1282.53ms, fracRes: 0.0061, norm(attn): 0.0771, norm(output): 0.1826, norm(x): 0.1819, norm(y): 1.0001, norm:2.4863, tok/sec: 102198.20, flops:89.49, batch-reuse:1
@ 99 train 9.0658 , allloss: 9.5207, dt: 1287.71ms, fracRes: 0.0062, norm(attn): 0.0771, norm(output): 0.1855, norm(x): 0.1832, norm(y): 1.0002, norm:2.2501, tok/sec: 101787.27, flops:89.13, batch-reuse:1
@ 100 train 9.0338 , allloss: 9.4853, dt: 1264.36ms, fracRes: 0.0062, norm(attn): 0.0776, norm(output): 0.1855, norm(x): 0.1845, norm(y): 1.0002, norm:2.2888, tok/sec: 103666.37, flops:90.78, batch-reuse:1
@ 101 train 9.0001 , allloss: 9.4502, dt: 1293.29ms, fracRes: 0.0063, norm(attn): 0.0776, norm(output): 0.1865, norm(x): 0.1858, norm(y): 1.0002, norm:2.2874, tok/sec: 101347.85, flops:88.75, batch-reuse:1
@ 102 train 9.0139 , allloss: 9.4640, dt: 1276.17ms, fracRes: 0.0063, norm(attn): 0.0776, norm(output): 0.1875, norm(x): 0.1870, norm(y): 1.0002, norm:2.2173, tok/sec: 102707.18, flops:89.94, batch-reuse:1
@ 103 train 9.0238 , allloss: 9.4736, dt: 1255.43ms, fracRes: 0.0064, norm(attn): 0.0781, norm(output): 0.1875, norm(x): 0.1883, norm(y): 1.0002, norm:2.1750, tok/sec: 104404.29, flops:91.43, batch-reuse:1
@ 104 train 9.0124 , allloss: 9.4625, dt: 1259.60ms, fracRes: 0.0064, norm(attn): 0.0786, norm(output): 0.1885, norm(x): 0.1895, norm(y): 1.0002, norm:2.1746, tok/sec: 104058.81, flops:91.12, batch-reuse:1
@ 105 train 8.9765 , allloss: 9.4261, dt: 1275.98ms, fracRes: 0.0065, norm(attn): 0.0786, norm(output): 0.1895, norm(x): 0.1907, norm(y): 1.0002, norm:2.2022, tok/sec: 102722.77, flops:89.95, batch-reuse:1
@ 106 train 8.9846 , allloss: 9.4354, dt: 1260.20ms, fracRes: 0.0065, norm(attn): 0.0786, norm(output): 0.1895, norm(x): 0.1920, norm(y): 1.0002, norm:2.1401, tok/sec: 104009.12, flops:91.08, batch-reuse:1
@ 107 train 8.9456 , allloss: 9.3963, dt: 1250.77ms, fracRes: 0.0066, norm(attn): 0.0786, norm(output): 0.1914, norm(x): 0.1932, norm(y): 1.0002, norm:2.1382, tok/sec: 104793.00, flops:91.77, batch-reuse:1
@ 108 train 8.9448 , allloss: 9.3972, dt: 1260.08ms, fracRes: 0.0066, norm(attn): 0.0786, norm(output): 0.1924, norm(x): 0.1944, norm(y): 1.0002, norm:2.1768, tok/sec: 104019.14, flops:91.09, batch-reuse:1
@ 109 train 8.8804 , allloss: 9.3325, dt: 1269.66ms, fracRes: 0.0067, norm(attn): 0.0791, norm(output): 0.1934, norm(x): 0.1955, norm(y): 1.0002, norm:2.2023, tok/sec: 103233.80, flops:90.40, batch-reuse:1
@ 110 train 8.9365 , allloss: 9.3926, dt: 1251.50ms, fracRes: 0.0067, norm(attn): 0.0806, norm(output): 0.1982, norm(x): 0.1967, norm(y): 1.0002, norm:2.0484, tok/sec: 104731.83, flops:91.71, batch-reuse:1
@ 111 train 8.9030 , allloss: 9.3606, dt: 1255.68ms, fracRes: 0.0068, norm(attn): 0.0811, norm(output): 0.1992, norm(x): 0.1979, norm(y): 1.0002, norm:2.0635, tok/sec: 104383.69, flops:91.41, batch-reuse:1
@ 112 train 8.8869 , allloss: 9.3469, dt: 1279.47ms, fracRes: 0.0068, norm(attn): 0.0811, norm(output): 0.1992, norm(x): 0.1990, norm(y): 1.0002, norm:2.0352, tok/sec: 102442.08, flops:89.71, batch-reuse:1
@ 113 train 8.8598 , allloss: 9.3222, dt: 1257.66ms, fracRes: 0.0069, norm(attn): 0.0811, norm(output): 0.2021, norm(x): 0.2001, norm(y): 1.0002, norm:2.0476, tok/sec: 104218.64, flops:91.26, batch-reuse:1
@ 114 train 8.8600 , allloss: 9.3253, dt: 1265.34ms, fracRes: 0.0070, norm(attn): 0.0811, norm(output): 0.2021, norm(x): 0.2012, norm(y): 1.0002, norm:2.0113, tok/sec: 103586.38, flops:90.71, batch-reuse:1
@ 115 train 8.8432 , allloss: 9.3127, dt: 1265.57ms, fracRes: 0.0070, norm(attn): 0.0830, norm(output): 0.2021, norm(x): 0.2023, norm(y): 1.0002, norm:2.0640, tok/sec: 103567.92, flops:90.69, batch-reuse:1
@ 116 train 8.8137 , allloss: 9.2852, dt: 1270.89ms, fracRes: 0.0071, norm(attn): 0.0830, norm(output): 0.2031, norm(x): 0.2033, norm(y): 1.0002, norm:1.9879, tok/sec: 103134.20, flops:90.31, batch-reuse:1
@ 117 train 8.7955 , allloss: 9.2691, dt: 1265.03ms, fracRes: 0.0071, norm(attn): 0.0820, norm(output): 0.2041, norm(x): 0.2044, norm(y): 1.0002, norm:2.0070, tok/sec: 103611.51, flops:90.73, batch-reuse:1
@ 118 train 8.7788 , allloss: 9.2535, dt: 1283.70ms, fracRes: 0.0072, norm(attn): 0.0830, norm(output): 0.2041, norm(x): 0.2054, norm(y): 1.0002, norm:2.0156, tok/sec: 102104.47, flops:89.41, batch-reuse:1
@ 119 train 8.7860 , allloss: 9.2641, dt: 1289.19ms, fracRes: 0.0072, norm(attn): 0.0830, norm(output): 0.2041, norm(x): 0.2063, norm(y): 1.0002, norm:2.0258, tok/sec: 101670.38, flops:89.03, batch-reuse:1
@ 120 train 8.8297 , allloss: 9.3084, dt: 1301.78ms, fracRes: 0.0073, norm(attn): 0.0830, norm(output): 0.2041, norm(x): 0.2073, norm(y): 1.0002, norm:1.8789, tok/sec: 100687.07, flops:88.17, batch-reuse:1
@ 121 train 8.8327 , allloss: 9.3104, dt: 1272.24ms, fracRes: 0.0073, norm(attn): 0.0835, norm(output): 0.2041, norm(x): 0.2082, norm(y): 1.0003, norm:1.9954, tok/sec: 103024.55, flops:90.22, batch-reuse:1
@ 122 train 8.8111 , allloss: 9.2850, dt: 1264.31ms, fracRes: 0.0074, norm(attn): 0.0835, norm(output): 0.2070, norm(x): 0.2091, norm(y): 1.0003, norm:1.8770, tok/sec: 103670.83, flops:90.78, batch-reuse:1
@ 123 train 8.7352 , allloss: 9.2047, dt: 1270.43ms, fracRes: 0.0074, norm(attn): 0.0850, norm(output): 0.2129, norm(x): 0.2100, norm(y): 1.0003, norm:1.9551, tok/sec: 103171.73, flops:90.35, batch-reuse:1
@ 124 train 8.7347 , allloss: 9.2008, dt: 1293.77ms, fracRes: 0.0074, norm(attn): 0.0854, norm(output): 0.2129, norm(x): 0.2109, norm(y): 1.0003, norm:1.8674, tok/sec: 101309.91, flops:88.72, batch-reuse:1
@ 125 train 8.7185 , allloss: 9.1805, dt: 1276.39ms, fracRes: 0.0075, norm(attn): 0.0854, norm(output): 0.2148, norm(x): 0.2117, norm(y): 1.0003, norm:1.8582, tok/sec: 102689.88, flops:89.92, batch-reuse:1
@ 126 train 8.7001 , allloss: 9.1584, dt: 1294.81ms, fracRes: 0.0075, norm(attn): 0.0854, norm(output): 0.2129, norm(x): 0.2126, norm(y): 1.0003, norm:1.8752, tok/sec: 101228.58, flops:88.64, batch-reuse:1
@ 127 train 8.6658 , allloss: 9.1201, dt: 1261.88ms, fracRes: 0.0076, norm(attn): 0.0854, norm(output): 0.2148, norm(x): 0.2133, norm(y): 1.0003, norm:1.8354, tok/sec: 103870.15, flops:90.96, batch-reuse:1
@ 128 train 8.6507 , allloss: 9.1028, dt: 1294.01ms, fracRes: 0.0076, norm(attn): 0.0854, norm(output): 0.2178, norm(x): 0.2142, norm(y): 1.0003, norm:1.8289, tok/sec: 101291.02, flops:88.70, batch-reuse:1
@ 129 train 8.7346 , allloss: 9.1871, dt: 1310.77ms, fracRes: 0.0076, norm(attn): 0.0854, norm(output): 0.2178, norm(x): 0.2149, norm(y): 1.0003, norm:1.8006, tok/sec: 99995.98, flops:87.57, batch-reuse:1
@ 130 train 8.6618 , allloss: 9.1097, dt: 1298.57ms, fracRes: 0.0076, norm(attn): 0.0854, norm(output): 0.2178, norm(x): 0.2157, norm(y): 1.0003, norm:1.7697, tok/sec: 100935.76, flops:88.39, batch-reuse:1
@ 131 train 8.6444 , allloss: 9.0905, dt: 1264.74ms, fracRes: 0.0077, norm(attn): 0.0859, norm(output): 0.2178, norm(x): 0.2165, norm(y): 1.0003, norm:1.7462, tok/sec: 103635.90, flops:90.75, batch-reuse:1
@ 132 train 8.6365 , allloss: 9.0809, dt: 1269.48ms, fracRes: 0.0077, norm(attn): 0.0859, norm(output): 0.2178, norm(x): 0.2173, norm(y): 1.0003, norm:1.8547, tok/sec: 103248.59, flops:90.41, batch-reuse:1
@ 133 train 8.6113 , allloss: 9.0535, dt: 1281.34ms, fracRes: 0.0077, norm(attn): 0.0859, norm(output): 0.2178, norm(x): 0.2181, norm(y): 1.0003, norm:1.7590, tok/sec: 102292.85, flops:89.58, batch-reuse:1
@ 134 train 8.5925 , allloss: 9.0318, dt: 1272.72ms, fracRes: 0.0077, norm(attn): 0.0859, norm(output): 0.2178, norm(x): 0.2189, norm(y): 1.0003, norm:1.8204, tok/sec: 102985.80, flops:90.18, batch-reuse:1
@ 135 train 8.5676 , allloss: 9.0020, dt: 1273.62ms, fracRes: 0.0077, norm(attn): 0.0864, norm(output): 0.2197, norm(x): 0.2197, norm(y): 1.0003, norm:1.7310, tok/sec: 102912.91, flops:90.12, batch-reuse:1
@ 136 train 8.5605 , allloss: 8.9897, dt: 1259.24ms, fracRes: 0.0077, norm(attn): 0.0864, norm(output): 0.2197, norm(x): 0.2206, norm(y): 1.0004, norm:1.7719, tok/sec: 104088.56, flops:91.15, batch-reuse:1
@ 137 train 8.5153 , allloss: 8.9375, dt: 1254.93ms, fracRes: 0.0078, norm(attn): 0.0864, norm(output): 0.2197, norm(x): 0.2213, norm(y): 1.0004, norm:1.8039, tok/sec: 104445.94, flops:91.46, batch-reuse:1
@ 138 train 8.4853 , allloss: 8.8986, dt: 1285.42ms, fracRes: 0.0078, norm(attn): 0.0864, norm(output): 0.2197, norm(x): 0.2222, norm(y): 1.0004, norm:1.7912, tok/sec: 101968.61, flops:89.29, batch-reuse:1
@ 139 train 8.4129 , allloss: 8.8143, dt: 1306.90ms, fracRes: 0.0078, norm(attn): 0.0864, norm(output): 0.2217, norm(x): 0.2230, norm(y): 1.0004, norm:1.9959, tok/sec: 100292.26, flops:87.82, batch-reuse:1
@ 140 train 8.4734 , allloss: 8.8681, dt: 1303.58ms, fracRes: 0.0078, norm(attn): 0.0864, norm(output): 0.2217, norm(x): 0.2237, norm(y): 1.0004, norm:1.7347, tok/sec: 100547.37, flops:88.05, batch-reuse:1
@ 141 train 8.4575 , allloss: 8.8418, dt: 1269.95ms, fracRes: 0.0078, norm(attn): 0.0884, norm(output): 0.2217, norm(x): 0.2245, norm(y): 1.0004, norm:1.7127, tok/sec: 103210.35, flops:90.38, batch-reuse:1
@ 142 train 8.4971 , allloss: 8.8712, dt: 1257.90ms, fracRes: 0.0079, norm(attn): 0.0884, norm(output): 0.2217, norm(x): 0.2252, norm(y): 1.0004, norm:1.6730, tok/sec: 104198.67, flops:91.25, batch-reuse:1
@ 143 train 8.4741 , allloss: 8.8372, dt: 1276.79ms, fracRes: 0.0079, norm(attn): 0.0884, norm(output): 0.2227, norm(x): 0.2260, norm(y): 1.0004, norm:1.6589, tok/sec: 102657.70, flops:89.90, batch-reuse:1
@ 144 train 8.4316 , allloss: 8.7831, dt: 1293.89ms, fracRes: 0.0079, norm(attn): 0.0884, norm(output): 0.2227, norm(x): 0.2266, norm(y): 1.0004, norm:1.7195, tok/sec: 101301.05, flops:88.71, batch-reuse:1
@ 145 train 8.4483 , allloss: 8.7902, dt: 1284.16ms, fracRes: 0.0079, norm(attn): 0.0884, norm(output): 0.2305, norm(x): 0.2273, norm(y): 1.0004, norm:1.6654, tok/sec: 102068.06, flops:89.38, batch-reuse:1
@ 146 train 8.4897 , allloss: 8.8226, dt: 1268.03ms, fracRes: 0.0079, norm(attn): 0.0884, norm(output): 0.2305, norm(x): 0.2280, norm(y): 1.0004, norm:1.6079, tok/sec: 103366.30, flops:90.52, batch-reuse:1
@ 147 train 8.4052 , allloss: 8.7276, dt: 1263.98ms, fracRes: 0.0080, norm(attn): 0.0884, norm(output): 0.2305, norm(x): 0.2287, norm(y): 1.0004, norm:1.6124, tok/sec: 103697.89, flops:90.81, batch-reuse:1
@ 148 train 8.3922 , allloss: 8.7060, dt: 1262.98ms, fracRes: 0.0080, norm(attn): 0.0884, norm(output): 0.2314, norm(x): 0.2294, norm(y): 1.0005, norm:1.6047, tok/sec: 103779.83, flops:90.88, batch-reuse:1
@ 149 train 8.3098 , allloss: 8.6147, dt: 1256.88ms, fracRes: 0.0080, norm(attn): 0.0884, norm(output): 0.2314, norm(x): 0.2300, norm(y): 1.0005, norm:1.6587, tok/sec: 104283.86, flops:91.32, batch-reuse:1
@ 150 train 8.4031 , allloss: 8.7032, dt: 1267.83ms, fracRes: 0.0080, norm(attn): 0.0898, norm(output): 0.2314, norm(x): 0.2307, norm(y): 1.0005, norm:1.5675, tok/sec: 103382.57, flops:90.53, batch-reuse:1
@ 151 train 8.2988 , allloss: 8.5899, dt: 1285.64ms, fracRes: 0.0081, norm(attn): 0.0894, norm(output): 0.2334, norm(x): 0.2314, norm(y): 1.0005, norm:1.6110, tok/sec: 101950.82, flops:89.28, batch-reuse:1
@ 152 train 8.2601 , allloss: 8.5447, dt: 1281.02ms, fracRes: 0.0081, norm(attn): 0.0908, norm(output): 0.2334, norm(x): 0.2321, norm(y): 1.0005, norm:1.8081, tok/sec: 102318.19, flops:89.60, batch-reuse:1
@ 153 train 8.2746 , allloss: 8.5539, dt: 1273.57ms, fracRes: 0.0081, norm(attn): 0.0908, norm(output): 0.2334, norm(x): 0.2327, norm(y): 1.0005, norm:1.5483, tok/sec: 102916.93, flops:90.12, batch-reuse:1
@ 154 train 8.3107 , allloss: 8.5850, dt: 1279.49ms, fracRes: 0.0081, norm(attn): 0.0908, norm(output): 0.2334, norm(x): 0.2334, norm(y): 1.0005, norm:1.4887, tok/sec: 102440.51, flops:89.71, batch-reuse:1
@ 155 train 8.3424 , allloss: 8.6113, dt: 1265.43ms, fracRes: 0.0081, norm(attn): 0.0913, norm(output): 0.2334, norm(x): 0.2341, norm(y): 1.0005, norm:1.4535, tok/sec: 103579.28, flops:90.70, batch-reuse:1
@ 156 train 8.2713 , allloss: 8.5334, dt: 1256.96ms, fracRes: 0.0082, norm(attn): 0.0913, norm(output): 0.2344, norm(x): 0.2348, norm(y): 1.0005, norm:1.4684, tok/sec: 104276.81, flops:91.31, batch-reuse:1
@ 157 train 8.3178 , allloss: 8.5756, dt: 1246.35ms, fracRes: 0.0082, norm(attn): 0.0913, norm(output): 0.2354, norm(x): 0.2355, norm(y): 1.0005, norm:1.4266, tok/sec: 105164.40, flops:92.09, batch-reuse:1
@ 158 train 8.2794 , allloss: 8.5308, dt: 1249.67ms, fracRes: 0.0082, norm(attn): 0.0923, norm(output): 0.2354, norm(x): 0.2361, norm(y): 1.0005, norm:1.4199, tok/sec: 104885.49, flops:91.85, batch-reuse:1
@ 159 train 8.2925 , allloss: 8.5392, dt: 1241.31ms, fracRes: 0.0083, norm(attn): 0.0918, norm(output): 0.2354, norm(x): 0.2367, norm(y): 1.0005, norm:1.3923, tok/sec: 105591.60, flops:92.47, batch-reuse:1
@ 160 train 8.2330 , allloss: 8.4735, dt: 1261.45ms, fracRes: 0.0083, norm(attn): 0.0928, norm(output): 0.2354, norm(x): 0.2374, norm(y): 1.0006, norm:1.3961, tok/sec: 103906.19, flops:90.99, batch-reuse:1
@ 161 train 8.2257 , allloss: 8.4605, dt: 1252.85ms, fracRes: 0.0083, norm(attn): 0.0928, norm(output): 0.2354, norm(x): 0.2380, norm(y): 1.0006, norm:1.3740, tok/sec: 104619.30, flops:91.61, batch-reuse:1
@ 162 train 8.2693 , allloss: 8.5006, dt: 1273.68ms, fracRes: 0.0084, norm(attn): 0.0928, norm(output): 0.2354, norm(x): 0.2386, norm(y): 1.0006, norm:1.3441, tok/sec: 102908.42, flops:90.12, batch-reuse:1
@ 163 train 8.2132 , allloss: 8.4392, dt: 1267.25ms, fracRes: 0.0084, norm(attn): 0.0928, norm(output): 0.2354, norm(x): 0.2392, norm(y): 1.0006, norm:1.3315, tok/sec: 103430.18, flops:90.57, batch-reuse:1
@ 164 train 8.1479 , allloss: 8.3689, dt: 1265.41ms, fracRes: 0.0084, norm(attn): 0.0928, norm(output): 0.2354, norm(x): 0.2398, norm(y): 1.0006, norm:1.3949, tok/sec: 103580.41, flops:90.70, batch-reuse:1
@ 165 train 8.2011 , allloss: 8.4195, dt: 1255.35ms, fracRes: 0.0085, norm(attn): 0.0928, norm(output): 0.2373, norm(x): 0.2405, norm(y): 1.0006, norm:1.3194, tok/sec: 104410.59, flops:91.43, batch-reuse:1
@ 166 train 8.0989 , allloss: 8.3119, dt: 1271.21ms, fracRes: 0.0085, norm(attn): 0.0933, norm(output): 0.2383, norm(x): 0.2411, norm(y): 1.0006, norm:1.6110, tok/sec: 103108.12, flops:90.29, batch-reuse:1
@ 167 train 8.1232 , allloss: 8.3334, dt: 1273.62ms, fracRes: 0.0086, norm(attn): 0.0933, norm(output): 0.2461, norm(x): 0.2418, norm(y): 1.0006, norm:1.5193, tok/sec: 102913.18, flops:90.12, batch-reuse:1
@ 168 train 8.0890 , allloss: 8.2970, dt: 1251.58ms, fracRes: 0.0086, norm(attn): 0.0933, norm(output): 0.2461, norm(x): 0.2424, norm(y): 1.0006, norm:1.3327, tok/sec: 104725.47, flops:91.71, batch-reuse:1
@ 169 train 8.1144 , allloss: 8.3204, dt: 1248.02ms, fracRes: 0.0087, norm(attn): 0.0933, norm(output): 0.2461, norm(x): 0.2431, norm(y): 1.0006, norm:1.2789, tok/sec: 105023.56, flops:91.97, batch-reuse:1
@ 170 train 8.1012 , allloss: 8.3031, dt: 1262.60ms, fracRes: 0.0087, norm(attn): 0.0933, norm(output): 0.2461, norm(x): 0.2437, norm(y): 1.0006, norm:1.2702, tok/sec: 103810.80, flops:90.91, batch-reuse:1
@ 171 train 8.0806 , allloss: 8.2797, dt: 1252.21ms, fracRes: 0.0088, norm(attn): 0.0933, norm(output): 0.2461, norm(x): 0.2443, norm(y): 1.0006, norm:1.2619, tok/sec: 104672.19, flops:91.66, batch-reuse:1
@ 172 train 8.0773 , allloss: 8.2715, dt: 1269.64ms, fracRes: 0.0088, norm(attn): 0.0933, norm(output): 0.2461, norm(x): 0.2450, norm(y): 1.0006, norm:1.2979, tok/sec: 103235.55, flops:90.40, batch-reuse:1
@ 173 train 8.0450 , allloss: 8.2351, dt: 1259.86ms, fracRes: 0.0089, norm(attn): 0.0938, norm(output): 0.2461, norm(x): 0.2456, norm(y): 1.0006, norm:1.3163, tok/sec: 104037.33, flops:91.10, batch-reuse:1
@ 174 train 8.1397 , allloss: 8.3268, dt: 1267.38ms, fracRes: 0.0089, norm(attn): 0.0938, norm(output): 0.2490, norm(x): 0.2462, norm(y): 1.0006, norm:1.2041, tok/sec: 103419.75, flops:90.56, batch-reuse:1
@ 175 train 8.0944 , allloss: 8.2772, dt: 1245.38ms, fracRes: 0.0090, norm(attn): 0.0938, norm(output): 0.2490, norm(x): 0.2469, norm(y): 1.0006, norm:2.3920, tok/sec: 105246.84, flops:92.16, batch-reuse:1
@ 176 train 8.0610 , allloss: 8.2399, dt: 1282.91ms, fracRes: 0.0090, norm(attn): 0.0938, norm(output): 0.2490, norm(x): 0.2474, norm(y): 1.0007, norm:1.1748, tok/sec: 102167.72, flops:89.47, batch-reuse:1
@ 177 train 8.0338 , allloss: 8.2087, dt: 1297.74ms, fracRes: 0.0090, norm(attn): 0.0938, norm(output): 0.2490, norm(x): 0.2481, norm(y): 1.0007, norm:1.2210, tok/sec: 101000.18, flops:88.44, batch-reuse:1
@ 178 train 8.0614 , allloss: 8.2327, dt: 1252.23ms, fracRes: 0.0091, norm(attn): 0.0942, norm(output): 0.2490, norm(x): 0.2486, norm(y): 1.0007, norm:1.1699, tok/sec: 104670.75, flops:91.66, batch-reuse:1
@ 179 train 7.9783 , allloss: 8.1447, dt: 1249.90ms, fracRes: 0.0091, norm(attn): 0.0942, norm(output): 0.2490, norm(x): 0.2492, norm(y): 1.0007, norm:1.1850, tok/sec: 104866.20, flops:91.83, batch-reuse:1
@ 180 train 8.0409 , allloss: 8.2037, dt: 1268.89ms, fracRes: 0.0091, norm(attn): 0.0942, norm(output): 0.2490, norm(x): 0.2497, norm(y): 1.0007, norm:1.1780, tok/sec: 103296.24, flops:90.46, batch-reuse:1
@ 181 train 8.0186 , allloss: 8.1783, dt: 1248.70ms, fracRes: 0.0092, norm(attn): 0.0942, norm(output): 0.2500, norm(x): 0.2502, norm(y): 1.0007, norm:1.2282, tok/sec: 104966.69, flops:91.92, batch-reuse:1
@ 182 train 8.0282 , allloss: 8.1840, dt: 1262.44ms, fracRes: 0.0092, norm(attn): 0.0942, norm(output): 0.2500, norm(x): 0.2506, norm(y): 1.0007, norm:1.0760, tok/sec: 103824.15, flops:90.92, batch-reuse:1
@ 183 train 7.9788 , allloss: 8.1304, dt: 1266.17ms, fracRes: 0.0092, norm(attn): 0.0942, norm(output): 0.2500, norm(x): 0.2511, norm(y): 1.0007, norm:1.1539, tok/sec: 103518.78, flops:90.65, batch-reuse:1
@ 184 train 7.8822 , allloss: 8.0291, dt: 1289.12ms, fracRes: 0.0092, norm(attn): 0.0942, norm(output): 0.2500, norm(x): 0.2516, norm(y): 1.0007, norm:1.2146, tok/sec: 101675.25, flops:89.04, batch-reuse:1
@ 185 train 7.9285 , allloss: 8.0731, dt: 1293.50ms, fracRes: 0.0092, norm(attn): 0.0942, norm(output): 0.2500, norm(x): 0.2520, norm(y): 1.0007, norm:1.1284, tok/sec: 101331.18, flops:88.73, batch-reuse:1
@ 186 train 8.0347 , allloss: 8.1781, dt: 1283.89ms, fracRes: 0.0092, norm(attn): 0.0942, norm(output): 0.2500, norm(x): 0.2525, norm(y): 1.0007, norm:1.1105, tok/sec: 102090.10, flops:89.40, batch-reuse:1
@ 187 train 8.0327 , allloss: 8.1732, dt: 1259.27ms, fracRes: 0.0093, norm(attn): 0.0942, norm(output): 0.2520, norm(x): 0.2529, norm(y): 1.0007, norm:1.1902, tok/sec: 104085.94, flops:91.15, batch-reuse:1
@ 188 train 7.9148 , allloss: 8.0526, dt: 1280.04ms, fracRes: 0.0093, norm(attn): 0.0942, norm(output): 0.2520, norm(x): 0.2533, norm(y): 1.0007, norm:1.1783, tok/sec: 102396.87, flops:89.67, batch-reuse:1
@ 189 train 7.9911 , allloss: 8.1278, dt: 1274.87ms, fracRes: 0.0093, norm(attn): 0.0942, norm(output): 0.2520, norm(x): 0.2537, norm(y): 1.0007, norm:0.9955, tok/sec: 102811.73, flops:90.03, batch-reuse:1
@ 190 train 7.9527 , allloss: 8.0865, dt: 1273.87ms, fracRes: 0.0093, norm(attn): 0.0942, norm(output): 0.2520, norm(x): 0.2541, norm(y): 1.0007, norm:1.0450, tok/sec: 102892.53, flops:90.10, batch-reuse:1
@ 191 train 7.9357 , allloss: 8.0666, dt: 1262.31ms, fracRes: 0.0093, norm(attn): 0.0942, norm(output): 0.2520, norm(x): 0.2545, norm(y): 1.0007, norm:1.0443, tok/sec: 103835.23, flops:90.93, batch-reuse:1
@ 192 train 7.9550 , allloss: 8.0832, dt: 1259.02ms, fracRes: 0.0094, norm(attn): 0.0942, norm(output): 0.2520, norm(x): 0.2550, norm(y): 1.0007, norm:0.8644, tok/sec: 104106.05, flops:91.16, batch-reuse:1
@ 193 train 7.8754 , allloss: 7.9998, dt: 1281.85ms, fracRes: 0.0094, norm(attn): 0.0947, norm(output): 0.2520, norm(x): 0.2554, norm(y): 1.0007, norm:0.9943, tok/sec: 102252.40, flops:89.54, batch-reuse:1
@ 194 train 7.9489 , allloss: 8.0708, dt: 1272.03ms, fracRes: 0.0094, norm(attn): 0.0952, norm(output): 0.2539, norm(x): 0.2558, norm(y): 1.0007, norm:0.9749, tok/sec: 103041.97, flops:90.23, batch-reuse:1
@ 195 train 7.9362 , allloss: 8.0547, dt: 1294.10ms, fracRes: 0.0095, norm(attn): 0.0947, norm(output): 0.2539, norm(x): 0.2562, norm(y): 1.0007, norm:0.9035, tok/sec: 101284.12, flops:88.69, batch-reuse:1
@ 196 train 7.8583 , allloss: 7.9736, dt: 1267.48ms, fracRes: 0.0095, norm(attn): 0.0947, norm(output): 0.2539, norm(x): 0.2567, norm(y): 1.0007, norm:0.9188, tok/sec: 103411.83, flops:90.56, batch-reuse:1
@ 197 train 7.8660 , allloss: 7.9789, dt: 1265.66ms, fracRes: 0.0096, norm(attn): 0.0952, norm(output): 0.2539, norm(x): 0.2571, norm(y): 1.0008, norm:0.9320, tok/sec: 103560.08, flops:90.69, batch-reuse:1
@ 198 train 7.8373 , allloss: 7.9479, dt: 1260.66ms, fracRes: 0.0096, norm(attn): 0.0952, norm(output): 0.2539, norm(x): 0.2576, norm(y): 1.0008, norm:0.8923, tok/sec: 103970.88, flops:91.05, batch-reuse:1
@ 199 train 7.8751 , allloss: 7.9845, dt: 1263.22ms, fracRes: 0.0097, norm(attn): 0.0947, norm(output): 0.2539, norm(x): 0.2582, norm(y): 1.0008, norm:0.9368, tok/sec: 103759.87, flops:90.86, batch-reuse:1
@ 200 train 7.8904 , allloss: 7.9989, dt: 1266.30ms, fracRes: 0.0098, norm(attn): 0.0957, norm(output): 0.2539, norm(x): 0.2587, norm(y): 1.0008, norm:0.8416, tok/sec: 103507.82, flops:90.64, batch-reuse:1
@ 201 train 7.8867 , allloss: 7.9935, dt: 1268.86ms, fracRes: 0.0098, norm(attn): 0.0957, norm(output): 0.2539, norm(x): 0.2594, norm(y): 1.0008, norm:0.8698, tok/sec: 103298.86, flops:90.46, batch-reuse:1
@ 202 train 7.9151 , allloss: 8.0214, dt: 1273.88ms, fracRes: 0.0099, norm(attn): 0.0962, norm(output): 0.2617, norm(x): 0.2601, norm(y): 1.0008, norm:0.7515, tok/sec: 102892.34, flops:90.10, batch-reuse:1
@ 203 train 7.8768 , allloss: 7.9822, dt: 1297.51ms, fracRes: 0.0100, norm(attn): 0.0962, norm(output): 0.2617, norm(x): 0.2607, norm(y): 1.0008, norm:0.8643, tok/sec: 101018.24, flops:88.46, batch-reuse:1
@ 204 train 7.8620 , allloss: 7.9668, dt: 1272.37ms, fracRes: 0.0101, norm(attn): 0.0962, norm(output): 0.2637, norm(x): 0.2613, norm(y): 1.0008, norm:0.7592, tok/sec: 103014.36, flops:90.21, batch-reuse:1
@ 205 train 7.8367 , allloss: 7.9407, dt: 1269.30ms, fracRes: 0.0101, norm(attn): 0.0967, norm(output): 0.2637, norm(x): 0.2620, norm(y): 1.0008, norm:0.8006, tok/sec: 103263.61, flops:90.43, batch-reuse:1
@ 206 train 7.8592 , allloss: 7.9632, dt: 1277.28ms, fracRes: 0.0102, norm(attn): 0.0962, norm(output): 0.2637, norm(x): 0.2627, norm(y): 1.0008, norm:0.7104, tok/sec: 102618.15, flops:89.86, batch-reuse:1
@ 207 train 7.7549 , allloss: 7.8578, dt: 1273.04ms, fracRes: 0.0102, norm(attn): 0.0977, norm(output): 0.2637, norm(x): 0.2634, norm(y): 1.0008, norm:0.9186, tok/sec: 102960.19, flops:90.16, batch-reuse:1
@ 208 train 7.8353 , allloss: 7.9384, dt: 1293.51ms, fracRes: 0.0103, norm(attn): 0.0967, norm(output): 0.2637, norm(x): 0.2641, norm(y): 1.0008, norm:0.6700, tok/sec: 101330.53, flops:88.73, batch-reuse:1
@ 209 train 7.8558 , allloss: 7.9589, dt: 1309.57ms, fracRes: 0.0103, norm(attn): 0.0967, norm(output): 0.2656, norm(x): 0.2649, norm(y): 1.0008, norm:0.6444, tok/sec: 100087.46, flops:87.65, batch-reuse:1
@ 210 train 7.8313 , allloss: 7.9331, dt: 1285.10ms, fracRes: 0.0104, norm(attn): 0.0991, norm(output): 0.2656, norm(x): 0.2657, norm(y): 1.0008, norm:0.6932, tok/sec: 101993.89, flops:89.31, batch-reuse:1
@ 211 train 7.7742 , allloss: 7.8748, dt: 1267.93ms, fracRes: 0.0104, norm(attn): 0.0991, norm(output): 0.2656, norm(x): 0.2665, norm(y): 1.0008, norm:0.6493, tok/sec: 103374.93, flops:90.52, batch-reuse:1
@ 212 train 7.8373 , allloss: 7.9382, dt: 1269.17ms, fracRes: 0.0104, norm(attn): 0.0991, norm(output): 0.2676, norm(x): 0.2673, norm(y): 1.0008, norm:0.6785, tok/sec: 103273.46, flops:90.44, batch-reuse:1
@ 213 train 7.7570 , allloss: 7.8564, dt: 1254.60ms, fracRes: 0.0104, norm(attn): 0.0996, norm(output): 0.2676, norm(x): 0.2681, norm(y): 1.0008, norm:0.8430, tok/sec: 104473.47, flops:91.49, batch-reuse:1
@ 214 train 7.7851 , allloss: 7.8841, dt: 1290.51ms, fracRes: 0.0103, norm(attn): 0.0996, norm(output): 0.2676, norm(x): 0.2689, norm(y): 1.0008, norm:0.6313, tok/sec: 101565.92, flops:88.94, batch-reuse:1
@ 215 train 7.7213 , allloss: 7.8194, dt: 1303.48ms, fracRes: 0.0103, norm(attn): 0.0996, norm(output): 0.2676, norm(x): 0.2696, norm(y): 1.0008, norm:0.7533, tok/sec: 100555.19, flops:88.05, batch-reuse:1
@ 216 train 7.7285 , allloss: 7.8260, dt: 1265.50ms, fracRes: 0.0103, norm(attn): 0.1006, norm(output): 0.2676, norm(x): 0.2704, norm(y): 1.0008, norm:0.7340, tok/sec: 103572.99, flops:90.70, batch-reuse:1
@ 217 train 7.7875 , allloss: 7.8851, dt: 1262.15ms, fracRes: 0.0102, norm(attn): 0.1006, norm(output): 0.2676, norm(x): 0.2711, norm(y): 1.0008, norm:0.5813, tok/sec: 103848.11, flops:90.94, batch-reuse:1
@ 218 train 7.7834 , allloss: 7.8808, dt: 1267.51ms, fracRes: 0.0102, norm(attn): 0.1001, norm(output): 0.2695, norm(x): 0.2717, norm(y): 1.0008, norm:0.6733, tok/sec: 103409.19, flops:90.55, batch-reuse:1
@ 219 train 7.8629 , allloss: 7.9606, dt: 1263.26ms, fracRes: 0.0102, norm(attn): 0.1006, norm(output): 0.2695, norm(x): 0.2723, norm(y): 1.0008, norm:0.6477, tok/sec: 103757.19, flops:90.86, batch-reuse:1
@ 220 train 7.7962 , allloss: 7.8926, dt: 1297.17ms, fracRes: 0.0102, norm(attn): 0.1011, norm(output): 0.2695, norm(x): 0.2728, norm(y): 1.0008, norm:0.6482, tok/sec: 101044.72, flops:88.48, batch-reuse:1
@ 221 train 7.7913 , allloss: 7.8870, dt: 1286.63ms, fracRes: 0.0102, norm(attn): 0.1011, norm(output): 0.2695, norm(x): 0.2731, norm(y): 1.0008, norm:0.8565, tok/sec: 101872.42, flops:89.21, batch-reuse:1
@ 222 train 7.7541 , allloss: 7.8482, dt: 1291.43ms, fracRes: 0.0102, norm(attn): 0.1011, norm(output): 0.2773, norm(x): 0.2734, norm(y): 1.0008, norm:0.7411, tok/sec: 101493.49, flops:88.88, batch-reuse:1
@ 223 train 7.7936 , allloss: 7.8869, dt: 1271.41ms, fracRes: 0.0102, norm(attn): 0.1011, norm(output): 0.2754, norm(x): 0.2736, norm(y): 1.0008, norm:0.8503, tok/sec: 103091.92, flops:90.28, batch-reuse:1
@ 224 train 7.7261 , allloss: 7.8179, dt: 1267.88ms, fracRes: 0.0103, norm(attn): 0.1011, norm(output): 0.2773, norm(x): 0.2736, norm(y): 1.0008, norm:0.5999, tok/sec: 103379.07, flops:90.53, batch-reuse:1
@ 225 train 7.7404 , allloss: 7.8313, dt: 1279.97ms, fracRes: 0.0103, norm(attn): 0.1011, norm(output): 0.2715, norm(x): 0.2733, norm(y): 1.0008, norm:0.6066, tok/sec: 102402.50, flops:89.67, batch-reuse:1
@ 226 train 7.7845 , allloss: 7.8747, dt: 1274.43ms, fracRes: 0.0103, norm(attn): 0.1006, norm(output): 0.2734, norm(x): 0.2730, norm(y): 1.0008, norm:0.8240, tok/sec: 102847.87, flops:90.06, batch-reuse:1
@ 227 train 7.7801 , allloss: 7.8699, dt: 1250.70ms, fracRes: 0.0104, norm(attn): 0.1011, norm(output): 0.2695, norm(x): 0.2726, norm(y): 1.0008, norm:0.6756, tok/sec: 104799.31, flops:91.77, batch-reuse:1
@ 228 train 7.7533 , allloss: 7.8421, dt: 1264.23ms, fracRes: 0.0104, norm(attn): 0.1006, norm(output): 0.2695, norm(x): 0.2721, norm(y): 1.0008, norm:0.5006, tok/sec: 103677.00, flops:90.79, batch-reuse:1
@ 229 train 7.7845 , allloss: 7.8731, dt: 1267.85ms, fracRes: 0.0105, norm(attn): 0.1011, norm(output): 0.2695, norm(x): 0.2718, norm(y): 1.0008, norm:0.5072, tok/sec: 103381.65, flops:90.53, batch-reuse:1
@ 230 train 7.7767 , allloss: 7.8646, dt: 1261.65ms, fracRes: 0.0105, norm(attn): 0.1011, norm(output): 0.2676, norm(x): 0.2714, norm(y): 1.0008, norm:0.6281, tok/sec: 103889.15, flops:90.97, batch-reuse:1
@ 231 train 7.7181 , allloss: 7.8050, dt: 1267.13ms, fracRes: 0.0106, norm(attn): 0.1011, norm(output): 0.2676, norm(x): 0.2712, norm(y): 1.0008, norm:0.6338, tok/sec: 103440.40, flops:90.58, batch-reuse:1
@ 232 train 7.7061 , allloss: 7.7918, dt: 1285.22ms, fracRes: 0.0108, norm(attn): 0.1006, norm(output): 0.2695, norm(x): 0.2713, norm(y): 1.0008, norm:0.5942, tok/sec: 101983.74, flops:89.31, batch-reuse:1
@ 233 train 7.7599 , allloss: 7.8450, dt: 1301.23ms, fracRes: 0.0109, norm(attn): 0.1011, norm(output): 0.2695, norm(x): 0.2716, norm(y): 1.0008, norm:0.5585, tok/sec: 100729.46, flops:88.21, batch-reuse:1
@ 234 train 7.6460 , allloss: 7.7293, dt: 1259.78ms, fracRes: 0.0110, norm(attn): 0.1011, norm(output): 0.2695, norm(x): 0.2723, norm(y): 1.0008, norm:0.6303, tok/sec: 104043.18, flops:91.11, batch-reuse:1
@ 235 train 7.7379 , allloss: 7.8205, dt: 1255.86ms, fracRes: 0.0112, norm(attn): 0.1011, norm(output): 0.2695, norm(x): 0.2734, norm(y): 1.0008, norm:0.6205, tok/sec: 104368.73, flops:91.39, batch-reuse:1
@ 236 train 7.6529 , allloss: 7.7337, dt: 1269.77ms, fracRes: 0.0113, norm(attn): 0.1011, norm(output): 0.2773, norm(x): 0.2746, norm(y): 1.0008, norm:0.5427, tok/sec: 103224.90, flops:90.39, batch-reuse:1
@ 237 train 7.7466 , allloss: 7.8268, dt: 1254.73ms, fracRes: 0.0114, norm(attn): 0.1011, norm(output): 0.2773, norm(x): 0.2762, norm(y): 1.0008, norm:0.4666, tok/sec: 104462.22, flops:91.48, batch-reuse:1
@ 238 train 7.7065 , allloss: 7.7853, dt: 1287.60ms, fracRes: 0.0116, norm(attn): 0.1021, norm(output): 0.2793, norm(x): 0.2779, norm(y): 1.0008, norm:0.5121, tok/sec: 101795.92, flops:89.14, batch-reuse:1
@ 239 train 7.7111 , allloss: 7.7885, dt: 1273.98ms, fracRes: 0.0117, norm(attn): 0.1021, norm(output): 0.2793, norm(x): 0.2799, norm(y): 1.0008, norm:0.4684, tok/sec: 102883.96, flops:90.09, batch-reuse:1
@ 240 train 7.7689 , allloss: 7.8454, dt: 1261.53ms, fracRes: 0.0118, norm(attn): 0.1021, norm(output): 0.2812, norm(x): 0.2819, norm(y): 1.0008, norm:0.4886, tok/sec: 103899.36, flops:90.98, batch-reuse:1
@ 241 train 7.7245 , allloss: 7.8001, dt: 1268.03ms, fracRes: 0.0120, norm(attn): 0.1035, norm(output): 0.2832, norm(x): 0.2838, norm(y): 1.0008, norm:0.4734, tok/sec: 103366.35, flops:90.52, batch-reuse:1
@ 242 train 7.7489 , allloss: 7.8236, dt: 1270.38ms, fracRes: 0.0121, norm(attn): 0.1035, norm(output): 0.2832, norm(x): 0.2858, norm(y): 1.0008, norm:0.5155, tok/sec: 103175.50, flops:90.35, batch-reuse:1
@ 243 train 7.6198 , allloss: 7.6932, dt: 1271.84ms, fracRes: 0.0122, norm(attn): 0.1074, norm(output): 0.2852, norm(x): 0.2876, norm(y): 1.0008, norm:0.4145, tok/sec: 103056.71, flops:90.25, batch-reuse:1
@ 244 train 7.7632 , allloss: 7.8369, dt: 1255.44ms, fracRes: 0.0123, norm(attn): 0.1074, norm(output): 0.2852, norm(x): 0.2892, norm(y): 1.0009, norm:0.4565, tok/sec: 104403.02, flops:91.42, batch-reuse:1
@ 245 train 7.6426 , allloss: 7.7151, dt: 1253.51ms, fracRes: 0.0124, norm(attn): 0.1074, norm(output): 0.2852, norm(x): 0.2905, norm(y): 1.0009, norm:0.5574, tok/sec: 104563.61, flops:91.56, batch-reuse:1
@ 246 train 7.8189 , allloss: 7.8925, dt: 1263.20ms, fracRes: 0.0125, norm(attn): 0.1079, norm(output): 0.2910, norm(x): 0.2917, norm(y): 1.0009, norm:0.3811, tok/sec: 103761.97, flops:90.86, batch-reuse:1
@ 247 train 7.7402 , allloss: 7.8130, dt: 1270.34ms, fracRes: 0.0126, norm(attn): 0.1089, norm(output): 0.2930, norm(x): 0.2927, norm(y): 1.0009, norm:0.4928, tok/sec: 103178.72, flops:90.35, batch-reuse:1
@ 248 train 7.6916 , allloss: 7.7640, dt: 1265.47ms, fracRes: 0.0126, norm(attn): 0.1089, norm(output): 0.2930, norm(x): 0.2936, norm(y): 1.0009, norm:0.4163, tok/sec: 103575.72, flops:90.70, batch-reuse:1
@ 249 train 7.6547 , allloss: 7.7270, dt: 1320.09ms, fracRes: 0.0127, norm(attn): 0.1089, norm(output): 0.2930, norm(x): 0.2943, norm(y): 1.0009, norm:0.4034, tok/sec: 99290.38, flops:86.95, batch-reuse:1
@ 250 train 7.7067 , allloss: 7.7793, dt: 1296.73ms, fracRes: 0.0128, norm(attn): 0.1094, norm(output): 0.2930, norm(x): 0.2949, norm(y): 1.0009, norm:0.3807, tok/sec: 101078.59, flops:88.51, batch-reuse:1
@ 251 train 7.6274 , allloss: 7.6990, dt: 1268.25ms, fracRes: 0.0129, norm(attn): 0.1099, norm(output): 0.2930, norm(x): 0.2955, norm(y): 1.0009, norm:0.4600, tok/sec: 103348.55, flops:90.50, batch-reuse:1
@ 252 train 7.7762 , allloss: 7.8489, dt: 1275.03ms, fracRes: 0.0130, norm(attn): 0.1099, norm(output): 0.2930, norm(x): 0.2960, norm(y): 1.0009, norm:0.5251, tok/sec: 102799.14, flops:90.02, batch-reuse:1
@ 253 train 7.6569 , allloss: 7.7284, dt: 1290.16ms, fracRes: 0.0132, norm(attn): 0.1099, norm(output): 0.2930, norm(x): 0.2965, norm(y): 1.0009, norm:0.5234, tok/sec: 101593.31, flops:88.96, batch-reuse:1
@ 254 train 7.6099 , allloss: 7.6808, dt: 1272.36ms, fracRes: 0.0134, norm(attn): 0.1099, norm(output): 0.2949, norm(x): 0.2970, norm(y): 1.0009, norm:0.4416, tok/sec: 103015.09, flops:90.21, batch-reuse:1
@ 255 train 7.6351 , allloss: 7.7067, dt: 1294.10ms, fracRes: 0.0136, norm(attn): 0.1099, norm(output): 0.2930, norm(x): 0.2975, norm(y): 1.0009, norm:0.4729, tok/sec: 101284.51, flops:88.69, batch-reuse:1
@ 256 train 7.6452 , allloss: 7.7182, dt: 1319.11ms, fracRes: 0.0139, norm(attn): 0.1099, norm(output): 0.2969, norm(x): 0.2979, norm(y): 1.0009, norm:0.3787, tok/sec: 99363.76, flops:87.01, batch-reuse:1
@ 257 train 7.6950 , allloss: 7.7703, dt: 1304.43ms, fracRes: 0.0142, norm(attn): 0.1099, norm(output): 0.2969, norm(x): 0.2983, norm(y): 1.0009, norm:0.4603, tok/sec: 100481.98, flops:87.99, batch-reuse:1
@ 258 train 7.6512 , allloss: 7.7289, dt: 1255.63ms, fracRes: 0.0144, norm(attn): 0.1099, norm(output): 0.3008, norm(x): 0.2986, norm(y): 1.0009, norm:0.4786, tok/sec: 104387.70, flops:91.41, batch-reuse:1
@ 259 train 7.6548 , allloss: 7.7361, dt: 1277.60ms, fracRes: 0.0144, norm(attn): 0.1099, norm(output): 0.2969, norm(x): 0.2987, norm(y): 1.0009, norm:0.4050, tok/sec: 102592.55, flops:89.84, batch-reuse:1
@ 260 train 7.7353 , allloss: 7.8203, dt: 1259.42ms, fracRes: 0.0143, norm(attn): 0.1099, norm(output): 0.2969, norm(x): 0.2986, norm(y): 1.0009, norm:0.4194, tok/sec: 104073.23, flops:91.14, batch-reuse:1
@ 261 train 7.6722 , allloss: 7.7599, dt: 1271.84ms, fracRes: 0.0142, norm(attn): 0.1099, norm(output): 0.2969, norm(x): 0.2983, norm(y): 1.0009, norm:0.5083, tok/sec: 103057.27, flops:90.25, batch-reuse:1
@ 262 train 7.7003 , allloss: 7.7906, dt: 1263.98ms, fracRes: 0.0142, norm(attn): 0.1108, norm(output): 0.2930, norm(x): 0.2980, norm(y): 1.0009, norm:0.5746, tok/sec: 103697.77, flops:90.81, batch-reuse:1
@ 263 train 7.6816 , allloss: 7.7744, dt: 1269.29ms, fracRes: 0.0142, norm(attn): 0.1099, norm(output): 0.2969, norm(x): 0.2973, norm(y): 1.0009, norm:0.6368, tok/sec: 103263.95, flops:90.43, batch-reuse:1
@ 264 train 7.6661 , allloss: 7.7611, dt: 1265.91ms, fracRes: 0.0143, norm(attn): 0.1099, norm(output): 0.2930, norm(x): 0.2967, norm(y): 1.0009, norm:0.5475, tok/sec: 103539.64, flops:90.67, batch-reuse:1
@ 265 train 7.6655 , allloss: 7.7644, dt: 1261.69ms, fracRes: 0.0143, norm(attn): 0.1099, norm(output): 0.2949, norm(x): 0.2962, norm(y): 1.0009, norm:0.5004, tok/sec: 103886.32, flops:90.97, batch-reuse:1
@ 266 train 7.6646 , allloss: 7.7676, dt: 1259.95ms, fracRes: 0.0144, norm(attn): 0.1099, norm(output): 0.2930, norm(x): 0.2961, norm(y): 1.0009, norm:0.5389, tok/sec: 104029.69, flops:91.10, batch-reuse:1
@ 267 train 7.6347 , allloss: 7.7405, dt: 1259.93ms, fracRes: 0.0144, norm(attn): 0.1108, norm(output): 0.2930, norm(x): 0.2961, norm(y): 1.0009, norm:0.6272, tok/sec: 104031.58, flops:91.10, batch-reuse:1
@ 268 train 7.7167 , allloss: 7.8244, dt: 1260.66ms, fracRes: 0.0144, norm(attn): 0.1099, norm(output): 0.2930, norm(x): 0.2962, norm(y): 1.0009, norm:0.6006, tok/sec: 103971.10, flops:91.05, batch-reuse:1
@ 269 train 7.6542 , allloss: 7.7593, dt: 1250.50ms, fracRes: 0.0143, norm(attn): 0.1108, norm(output): 0.2930, norm(x): 0.2970, norm(y): 1.0009, norm:0.6875, tok/sec: 104815.44, flops:91.79, batch-reuse:1
@ 270 train 7.7302 , allloss: 7.8331, dt: 1259.81ms, fracRes: 0.0142, norm(attn): 0.1113, norm(output): 0.2969, norm(x): 0.2980, norm(y): 1.0009, norm:0.6309, tok/sec: 104040.73, flops:91.11, batch-reuse:1
@ 271 train 7.6376 , allloss: 7.7371, dt: 1269.33ms, fracRes: 0.0141, norm(attn): 0.1113, norm(output): 0.2969, norm(x): 0.2990, norm(y): 1.0009, norm:0.5108, tok/sec: 103260.89, flops:90.42, batch-reuse:1
@ 272 train 7.6499 , allloss: 7.7454, dt: 1262.44ms, fracRes: 0.0141, norm(attn): 0.1113, norm(output): 0.3008, norm(x): 0.2998, norm(y): 1.0009, norm:0.5255, tok/sec: 103824.50, flops:90.92, batch-reuse:1
@ 273 train 7.7993 , allloss: 7.8930, dt: 1257.73ms, fracRes: 0.0140, norm(attn): 0.1143, norm(output): 0.2969, norm(x): 0.3005, norm(y): 1.0009, norm:0.7609, tok/sec: 104213.22, flops:91.26, batch-reuse:1
@ 274 train 7.6779 , allloss: 7.7660, dt: 1273.40ms, fracRes: 0.0139, norm(attn): 0.1152, norm(output): 0.3008, norm(x): 0.3005, norm(y): 1.0009, norm:0.5247, tok/sec: 102930.94, flops:90.14, batch-reuse:1
@ 275 train 7.6686 , allloss: 7.7525, dt: 1276.97ms, fracRes: 0.0139, norm(attn): 0.1143, norm(output): 0.3008, norm(x): 0.3003, norm(y): 1.0009, norm:0.5050, tok/sec: 102643.08, flops:89.88, batch-reuse:1
@ 276 train 7.6472 , allloss: 7.7275, dt: 1275.10ms, fracRes: 0.0138, norm(attn): 0.1113, norm(output): 0.2969, norm(x): 0.2996, norm(y): 1.0009, norm:0.5388, tok/sec: 102793.87, flops:90.02, batch-reuse:1
@ 277 train 7.5625 , allloss: 7.6398, dt: 1269.36ms, fracRes: 0.0136, norm(attn): 0.1113, norm(output): 0.2969, norm(x): 0.2983, norm(y): 1.0009, norm:0.6029, tok/sec: 103258.25, flops:90.42, batch-reuse:1
@ 278 train 7.6498 , allloss: 7.7257, dt: 1260.11ms, fracRes: 0.0135, norm(attn): 0.1113, norm(output): 0.2930, norm(x): 0.2970, norm(y): 1.0009, norm:0.5167, tok/sec: 104016.68, flops:91.09, batch-reuse:1
@ 279 train 7.6103 , allloss: 7.6842, dt: 1258.63ms, fracRes: 0.0135, norm(attn): 0.1113, norm(output): 0.2930, norm(x): 0.2958, norm(y): 1.0009, norm:0.4183, tok/sec: 104138.88, flops:91.19, batch-reuse:1
@ 280 train 7.7023 , allloss: 7.7783, dt: 1275.29ms, fracRes: 0.0134, norm(attn): 0.1108, norm(output): 0.2930, norm(x): 0.2939, norm(y): 1.0009, norm:0.7340, tok/sec: 102778.04, flops:90.00, batch-reuse:1
@ 281 train 7.6339 , allloss: 7.7211, dt: 1249.94ms, fracRes: 0.0131, norm(attn): 0.1099, norm(output): 0.2852, norm(x): 0.2904, norm(y): 1.0009, norm:0.5484, tok/sec: 104863.02, flops:91.83, batch-reuse:1
@ 282 train 7.6060 , allloss: 7.7140, dt: 1257.83ms, fracRes: 0.0128, norm(attn): 0.1094, norm(output): 0.2832, norm(x): 0.2860, norm(y): 1.0009, norm:0.7367, tok/sec: 104204.81, flops:91.25, batch-reuse:1
@ 283 train 7.5665 , allloss: 7.6936, dt: 1268.41ms, fracRes: 0.0124, norm(attn): 0.1089, norm(output): 0.2812, norm(x): 0.2815, norm(y): 1.0009, norm:0.9403, tok/sec: 103335.71, flops:90.49, batch-reuse:1
@ 284 train 7.6605 , allloss: 7.7284, dt: 1275.70ms, fracRes: 0.0167, norm(attn): 0.1152, norm(output): 0.2969, norm(x): 0.3002, norm(y): 1.0010, norm:0.4205, tok/sec: 102744.94, flops:89.97, batch-reuse:1
@ 285 train 7.6659 , allloss: 7.7354, dt: 1285.27ms, fracRes: 0.0218, norm(attn): 0.1167, norm(output): 0.3086, norm(x): 0.3088, norm(y): 1.0010, norm:0.5682, tok/sec: 101979.90, flops:89.30, batch-reuse:1
@ 286 train 7.6812 , allloss: 7.7500, dt: 1274.90ms, fracRes: 0.0281, norm(attn): 0.1167, norm(output): 0.3125, norm(x): 0.3153, norm(y): 1.0010, norm:0.4151, tok/sec: 102809.98, flops:90.03, batch-reuse:1
@ 287 train 7.6705 , allloss: 7.7369, dt: 1276.26ms, fracRes: 0.0356, norm(attn): 0.1172, norm(output): 0.3145, norm(x): 0.3215, norm(y): 1.0011, norm:0.4256, tok/sec: 102699.70, flops:89.93, batch-reuse:1
@ 288 train 7.6844 , allloss: 7.7488, dt: 1290.14ms, fracRes: 0.0439, norm(attn): 0.1177, norm(output): 0.3223, norm(x): 0.3275, norm(y): 1.0011, norm:0.4859, tok/sec: 101594.81, flops:88.97, batch-reuse:1
@ 289 train 7.6571 , allloss: 7.7199, dt: 1291.85ms, fracRes: 0.0525, norm(attn): 0.1177, norm(output): 0.3242, norm(x): 0.3332, norm(y): 1.0011, norm:0.3678, tok/sec: 101460.69, flops:88.85, batch-reuse:1
@ 290 train 7.6335 , allloss: 7.6952, dt: 1285.03ms, fracRes: 0.0616, norm(attn): 0.1177, norm(output): 0.3320, norm(x): 0.3385, norm(y): 1.0011, norm:0.4130, tok/sec: 101998.88, flops:89.32, batch-reuse:1
@ 291 train 7.5681 , allloss: 7.6289, dt: 1263.84ms, fracRes: 0.0703, norm(attn): 0.1177, norm(output): 0.3340, norm(x): 0.3433, norm(y): 1.0012, norm:0.4726, tok/sec: 103709.22, flops:90.82, batch-reuse:1
@ 292 train 7.5998 , allloss: 7.6602, dt: 1276.42ms, fracRes: 0.0791, norm(attn): 0.1177, norm(output): 0.3418, norm(x): 0.3476, norm(y): 1.0012, norm:0.3496, tok/sec: 102686.91, flops:89.92, batch-reuse:1
@ 293 train 7.6694 , allloss: 7.7297, dt: 1258.50ms, fracRes: 0.0879, norm(attn): 0.1177, norm(output): 0.3418, norm(x): 0.3511, norm(y): 1.0012, norm:0.3896, tok/sec: 104149.42, flops:91.20, batch-reuse:1
@ 294 train 7.6340 , allloss: 7.6936, dt: 1266.13ms, fracRes: 0.0966, norm(attn): 0.1172, norm(output): 0.3418, norm(x): 0.3539, norm(y): 1.0012, norm:0.4274, tok/sec: 103521.54, flops:90.65, batch-reuse:1
@ 295 train 7.6509 , allloss: 7.7100, dt: 1303.93ms, fracRes: 0.1052, norm(attn): 0.1167, norm(output): 0.3418, norm(x): 0.3559, norm(y): 1.0012, norm:0.5395, tok/sec: 100520.67, flops:88.02, batch-reuse:1
@ 296 train 7.5752 , allloss: 7.6336, dt: 1267.07ms, fracRes: 0.1143, norm(attn): 0.1157, norm(output): 0.3398, norm(x): 0.3570, norm(y): 1.0012, norm:0.4931, tok/sec: 103444.56, flops:90.58, batch-reuse:1
@ 297 train 7.5408 , allloss: 7.5984, dt: 1279.17ms, fracRes: 0.1233, norm(attn): 0.1113, norm(output): 0.3320, norm(x): 0.3573, norm(y): 1.0012, norm:0.5068, tok/sec: 102466.06, flops:89.73, batch-reuse:1
@ 298 train 7.6474 , allloss: 7.7050, dt: 1275.43ms, fracRes: 0.1321, norm(attn): 0.1099, norm(output): 0.3242, norm(x): 0.3567, norm(y): 1.0012, norm:0.4518, tok/sec: 102767.22, flops:89.99, batch-reuse:1
@ 299 train 7.6412 , allloss: 7.6981, dt: 1280.40ms, fracRes: 0.1401, norm(attn): 0.1089, norm(output): 0.3184, norm(x): 0.3553, norm(y): 1.0012, norm:0.3829, tok/sec: 102368.39, flops:89.64, batch-reuse:1
@ 300 train 7.6185 , allloss: 7.6751, dt: 1308.79ms, fracRes: 0.1474, norm(attn): 0.1079, norm(output): 0.3145, norm(x): 0.3532, norm(y): 1.0012, norm:0.5001, tok/sec: 100147.49, flops:87.70, batch-reuse:1
@ 301 train 7.7683 , allloss: 7.8253, dt: 1261.64ms, fracRes: 0.1527, norm(attn): 0.1064, norm(output): 0.3105, norm(x): 0.3508, norm(y): 1.0012, norm:0.5959, tok/sec: 103890.56, flops:90.98, batch-reuse:1
@ 302 train 7.6098 , allloss: 7.6654, dt: 1291.41ms, fracRes: 0.1554, norm(attn): 0.1035, norm(output): 0.3086, norm(x): 0.3483, norm(y): 1.0012, norm:0.4397, tok/sec: 101495.38, flops:88.88, batch-reuse:1
@ 303 train 7.6361 , allloss: 7.6915, dt: 1264.40ms, fracRes: 0.1555, norm(attn): 0.1035, norm(output): 0.3086, norm(x): 0.3456, norm(y): 1.0012, norm:0.4341, tok/sec: 103663.48, flops:90.78, batch-reuse:1
@ 304 train 7.6019 , allloss: 7.6579, dt: 1269.43ms, fracRes: 0.1528, norm(attn): 0.1035, norm(output): 0.3008, norm(x): 0.3424, norm(y): 1.0012, norm:0.4981, tok/sec: 103252.59, flops:90.42, batch-reuse:1
@ 305 train 7.5479 , allloss: 7.6055, dt: 1278.63ms, fracRes: 0.1465, norm(attn): 0.1064, norm(output): 0.3027, norm(x): 0.3387, norm(y): 1.0012, norm:0.5363, tok/sec: 102509.96, flops:89.77, batch-reuse:1
@ 306 train 7.5557 , allloss: 7.6198, dt: 1280.95ms, fracRes: 0.1364, norm(attn): 0.1089, norm(output): 0.3027, norm(x): 0.3342, norm(y): 1.0012, norm:0.5197, tok/sec: 102324.41, flops:89.60, batch-reuse:1
@ 307 train 7.7440 , allloss: 7.8219, dt: 1284.04ms, fracRes: 0.1205, norm(attn): 0.1099, norm(output): 0.3086, norm(x): 0.3293, norm(y): 1.0012, norm:0.7028, tok/sec: 102077.72, flops:89.39, batch-reuse:1
@ 308 train 7.6057 , allloss: 7.7118, dt: 1275.26ms, fracRes: 0.0997, norm(attn): 0.1113, norm(output): 0.3086, norm(x): 0.3245, norm(y): 1.0012, norm:0.9366, tok/sec: 102780.25, flops:90.00, batch-reuse:1
@ 309 train 7.6335 , allloss: 7.8083, dt: 1260.49ms, fracRes: 0.0811, norm(attn): 0.1113, norm(output): 0.3086, norm(x): 0.3196, norm(y): 1.0012, norm:1.4954, tok/sec: 103985.18, flops:91.06, batch-reuse:1
@ 310 train 7.6690 , allloss: 7.9113, dt: 1284.13ms, fracRes: 0.0699, norm(attn): 0.1104, norm(output): 0.3008, norm(x): 0.3138, norm(y): 1.0011, norm:2.1590, tok/sec: 102070.94, flops:89.38, batch-reuse:1
@ 311 train 7.6853 , allloss: 8.0316, dt: 1258.90ms, fracRes: 0.0635, norm(attn): 0.1094, norm(output): 0.2969, norm(x): 0.3069, norm(y): 1.0011, norm:2.8577, tok/sec: 104116.24, flops:91.17, batch-reuse:1
@ 312 train 7.7752 , allloss: 8.2798, dt: 1283.77ms, fracRes: 0.0595, norm(attn): 0.1074, norm(output): 0.2910, norm(x): 0.2994, norm(y): 1.0011, norm:3.4158, tok/sec: 102099.34, flops:89.41, batch-reuse:1
@ 313 train 7.5863 , allloss: 8.1213, dt: 1278.53ms, fracRes: 0.0566, norm(attn): 0.1021, norm(output): 0.2832, norm(x): 0.2921, norm(y): 1.0011, norm:3.7096, tok/sec: 102517.86, flops:89.77, batch-reuse:1
@ 314 train 7.5925 , allloss: 8.1030, dt: 1266.42ms, fracRes: 0.0541, norm(attn): 0.1011, norm(output): 0.2773, norm(x): 0.2837, norm(y): 1.0010, norm:3.6676, tok/sec: 103497.94, flops:90.63, batch-reuse:1
@ 315 train 7.6378 , allloss: 8.2897, dt: 1292.16ms, fracRes: 0.0519, norm(attn): 0.0947, norm(output): 0.2637, norm(x): 0.2699, norm(y): 1.0010, norm:3.8046, tok/sec: 101436.63, flops:88.83, batch-reuse:1
@ 316 train 7.6519 , allloss: 8.7215, dt: 1294.27ms, fracRes: 0.0499, norm(attn): 0.0864, norm(output): 0.2295, norm(x): 0.2351, norm(y): 1.0008, norm:5.7685, tok/sec: 101270.89, flops:88.68, batch-reuse:1
@ 317 train 7.6746 , allloss: 7.9250, dt: 1272.41ms, fracRes: 0.0603, norm(attn): 0.1035, norm(output): 0.2930, norm(x): 0.3018, norm(y): 1.0011, norm:1.7698, tok/sec: 103010.52, flops:90.20, batch-reuse:1
@ 318 train 7.5812 , allloss: 7.7555, dt: 1283.37ms, fracRes: 0.0705, norm(attn): 0.1094, norm(output): 0.3105, norm(x): 0.3222, norm(y): 1.0011, norm:1.2673, tok/sec: 102131.26, flops:89.43, batch-reuse:1
@ 319 train 7.5443 , allloss: 7.6868, dt: 1255.92ms, fracRes: 0.0792, norm(attn): 0.1113, norm(output): 0.3223, norm(x): 0.3363, norm(y): 1.0011, norm:0.9938, tok/sec: 104363.44, flops:91.39, batch-reuse:1
@ 320 train 7.6042 , allloss: 7.7326, dt: 1266.81ms, fracRes: 0.0875, norm(attn): 0.1152, norm(output): 0.3320, norm(x): 0.3485, norm(y): 1.0012, norm:0.8316, tok/sec: 103466.44, flops:90.60, batch-reuse:1
@ 321 train 7.6490 , allloss: 7.7738, dt: 1250.31ms, fracRes: 0.0964, norm(attn): 0.1167, norm(output): 0.3418, norm(x): 0.3605, norm(y): 1.0012, norm:0.7828, tok/sec: 104831.67, flops:91.80, batch-reuse:1
@ 322 train 7.5727 , allloss: 7.6975, dt: 1264.07ms, fracRes: 0.1073, norm(attn): 0.1172, norm(output): 0.3457, norm(x): 0.3732, norm(y): 1.0012, norm:0.7364, tok/sec: 103690.07, flops:90.80, batch-reuse:1
@ 323 train 7.6547 , allloss: 7.7802, dt: 1261.43ms, fracRes: 0.1193, norm(attn): 0.1172, norm(output): 0.3535, norm(x): 0.3866, norm(y): 1.0012, norm:0.7019, tok/sec: 103907.35, flops:90.99, batch-reuse:1
@ 324 train 7.5896 , allloss: 7.7107, dt: 1282.97ms, fracRes: 0.1315, norm(attn): 0.1177, norm(output): 0.3652, norm(x): 0.4010, norm(y): 1.0012, norm:0.6330, tok/sec: 102162.78, flops:89.46, batch-reuse:1
@ 325 train 7.6250 , allloss: 7.7431, dt: 1275.87ms, fracRes: 0.1436, norm(attn): 0.1177, norm(output): 0.3711, norm(x): 0.4155, norm(y): 1.0012, norm:0.5232, tok/sec: 102731.60, flops:89.96, batch-reuse:1
@ 326 train 7.6520 , allloss: 7.7708, dt: 1282.46ms, fracRes: 0.1544, norm(attn): 0.1177, norm(output): 0.3750, norm(x): 0.4301, norm(y): 1.0013, norm:0.5768, tok/sec: 102203.26, flops:89.50, batch-reuse:1
@ 327 train 7.7262 , allloss: 7.8503, dt: 1258.32ms, fracRes: 0.1637, norm(attn): 0.1177, norm(output): 0.3770, norm(x): 0.4441, norm(y): 1.0013, norm:0.8598, tok/sec: 104164.27, flops:91.22, batch-reuse:1
@ 328 train 7.6195 , allloss: 7.7468, dt: 1270.12ms, fracRes: 0.1717, norm(attn): 0.1177, norm(output): 0.3828, norm(x): 0.4573, norm(y): 1.0013, norm:0.8116, tok/sec: 103196.65, flops:90.37, batch-reuse:1
@ 329 train 7.6401 , allloss: 7.7683, dt: 1259.48ms, fracRes: 0.1786, norm(attn): 0.1182, norm(output): 0.3848, norm(x): 0.4692, norm(y): 1.0013, norm:0.7591, tok/sec: 104067.95, flops:91.13, batch-reuse:1
@ 330 train 7.6243 , allloss: 7.7486, dt: 1269.33ms, fracRes: 0.1849, norm(attn): 0.1187, norm(output): 0.3965, norm(x): 0.4800, norm(y): 1.0013, norm:0.7714, tok/sec: 103260.81, flops:90.42, batch-reuse:1
@ 331 train 7.5738 , allloss: 7.6943, dt: 1294.61ms, fracRes: 0.1907, norm(attn): 0.1187, norm(output): 0.4023, norm(x): 0.4895, norm(y): 1.0013, norm:0.7183, tok/sec: 101244.16, flops:88.66, batch-reuse:1
@ 332 train 7.5830 , allloss: 7.7004, dt: 1275.56ms, fracRes: 0.1958, norm(attn): 0.1191, norm(output): 0.4043, norm(x): 0.4978, norm(y): 1.0013, norm:0.7405, tok/sec: 102756.69, flops:89.98, batch-reuse:1
@ 333 train 7.6365 , allloss: 7.7527, dt: 1276.09ms, fracRes: 0.1990, norm(attn): 0.1191, norm(output): 0.4043, norm(x): 0.5046, norm(y): 1.0014, norm:0.7435, tok/sec: 102713.52, flops:89.94, batch-reuse:1
@ 334 train 7.5802 , allloss: 7.6935, dt: 1274.77ms, fracRes: 0.2006, norm(attn): 0.1230, norm(output): 0.4062, norm(x): 0.5101, norm(y): 1.0014, norm:0.7967, tok/sec: 102819.94, flops:90.04, batch-reuse:1
@ 335 train 7.5808 , allloss: 7.6888, dt: 1290.33ms, fracRes: 0.2009, norm(attn): 0.1230, norm(output): 0.4082, norm(x): 0.5143, norm(y): 1.0014, norm:0.6864, tok/sec: 101580.41, flops:88.95, batch-reuse:1
@ 336 train 7.5971 , allloss: 7.6994, dt: 1244.79ms, fracRes: 0.2002, norm(attn): 0.1230, norm(output): 0.4082, norm(x): 0.5174, norm(y): 1.0014, norm:0.7482, tok/sec: 105296.55, flops:92.21, batch-reuse:1
@ 337 train 7.6128 , allloss: 7.7092, dt: 1273.37ms, fracRes: 0.1990, norm(attn): 0.1240, norm(output): 0.4082, norm(x): 0.5197, norm(y): 1.0014, norm:0.7150, tok/sec: 102933.04, flops:90.14, batch-reuse:1
@ 338 train 7.5790 , allloss: 7.6674, dt: 1270.38ms, fracRes: 0.1971, norm(attn): 0.1245, norm(output): 0.4082, norm(x): 0.5214, norm(y): 1.0014, norm:0.6635, tok/sec: 103175.04, flops:90.35, batch-reuse:1
@ 339 train 7.6483 , allloss: 7.7320, dt: 1286.85ms, fracRes: 0.1947, norm(attn): 0.1245, norm(output): 0.4082, norm(x): 0.5224, norm(y): 1.0014, norm:0.5549, tok/sec: 101854.98, flops:89.19, batch-reuse:1
@ 340 train 7.6687 , allloss: 7.7469, dt: 1284.99ms, fracRes: 0.1921, norm(attn): 0.1245, norm(output): 0.4082, norm(x): 0.5228, norm(y): 1.0014, norm:0.5261, tok/sec: 102002.06, flops:89.32, batch-reuse:1
@ 341 train 7.5967 , allloss: 7.6694, dt: 1299.69ms, fracRes: 0.1898, norm(attn): 0.1250, norm(output): 0.4082, norm(x): 0.5226, norm(y): 1.0014, norm:0.5551, tok/sec: 100848.48, flops:88.31, batch-reuse:1
@ 342 train 7.5341 , allloss: 7.6034, dt: 1269.17ms, fracRes: 0.1875, norm(attn): 0.1250, norm(output): 0.4062, norm(x): 0.5219, norm(y): 1.0014, norm:0.5145, tok/sec: 103273.73, flops:90.44, batch-reuse:1
@ 343 train 7.5832 , allloss: 7.6504, dt: 1273.57ms, fracRes: 0.1853, norm(attn): 0.1250, norm(output): 0.4043, norm(x): 0.5205, norm(y): 1.0014, norm:0.5193, tok/sec: 102917.40, flops:90.12, batch-reuse:1
@ 344 train 7.5549 , allloss: 7.6205, dt: 1295.09ms, fracRes: 0.1832, norm(attn): 0.1250, norm(output): 0.4043, norm(x): 0.5186, norm(y): 1.0014, norm:0.4955, tok/sec: 101207.11, flops:88.63, batch-reuse:1
@ 345 train 7.5809 , allloss: 7.6450, dt: 1320.77ms, fracRes: 0.1817, norm(attn): 0.1245, norm(output): 0.4043, norm(x): 0.5165, norm(y): 1.0014, norm:0.5001, tok/sec: 99239.33, flops:86.90, batch-reuse:1
@ 346 train 7.6295 , allloss: 7.6925, dt: 1258.76ms, fracRes: 0.1804, norm(attn): 0.1245, norm(output): 0.4023, norm(x): 0.5141, norm(y): 1.0014, norm:0.5915, tok/sec: 104127.97, flops:91.18, batch-reuse:1
@ 347 train 7.6529 , allloss: 7.7153, dt: 1268.60ms, fracRes: 0.1791, norm(attn): 0.1245, norm(output): 0.3984, norm(x): 0.5116, norm(y): 1.0014, norm:0.5067, tok/sec: 103320.45, flops:90.48, batch-reuse:1
@ 348 train 7.5953 , allloss: 7.6563, dt: 1293.65ms, fracRes: 0.1787, norm(attn): 0.1235, norm(output): 0.3965, norm(x): 0.5094, norm(y): 1.0014, norm:0.6436, tok/sec: 101319.42, flops:88.72, batch-reuse:1
@ 349 train 7.6257 , allloss: 7.6867, dt: 1295.34ms, fracRes: 0.1798, norm(attn): 0.1235, norm(output): 0.3945, norm(x): 0.5072, norm(y): 1.0014, norm:0.5257, tok/sec: 101187.20, flops:88.61, batch-reuse:1
@ 350 train 7.6362 , allloss: 7.6977, dt: 1271.07ms, fracRes: 0.1818, norm(attn): 0.1230, norm(output): 0.3848, norm(x): 0.5047, norm(y): 1.0014, norm:0.5341, tok/sec: 103119.48, flops:90.30, batch-reuse:1
@ 351 train 7.6467 , allloss: 7.7076, dt: 1265.50ms, fracRes: 0.1845, norm(attn): 0.1187, norm(output): 0.3828, norm(x): 0.5018, norm(y): 1.0014, norm:0.5226, tok/sec: 103573.56, flops:90.70, batch-reuse:1
@ 352 train 7.6837 , allloss: 7.7441, dt: 1278.23ms, fracRes: 0.1875, norm(attn): 0.1172, norm(output): 0.3770, norm(x): 0.4982, norm(y): 1.0014, norm:0.6358, tok/sec: 102541.49, flops:89.79, batch-reuse:1
@ 353 train 7.6243 , allloss: 7.6828, dt: 1259.22ms, fracRes: 0.1904, norm(attn): 0.1167, norm(output): 0.3789, norm(x): 0.4943, norm(y): 1.0014, norm:0.5569, tok/sec: 104089.45, flops:91.15, batch-reuse:1
@ 354 train 7.5950 , allloss: 7.6530, dt: 1269.59ms, fracRes: 0.1925, norm(attn): 0.1167, norm(output): 0.3770, norm(x): 0.4893, norm(y): 1.0014, norm:0.5290, tok/sec: 103239.79, flops:90.41, batch-reuse:1
@ 355 train 7.5737 , allloss: 7.6333, dt: 1298.50ms, fracRes: 0.1940, norm(attn): 0.1152, norm(output): 0.3770, norm(x): 0.4836, norm(y): 1.0014, norm:0.5187, tok/sec: 100941.36, flops:88.39, batch-reuse:1
@ 356 train 7.6816 , allloss: 7.7433, dt: 1273.19ms, fracRes: 0.1948, norm(attn): 0.1113, norm(output): 0.3750, norm(x): 0.4769, norm(y): 1.0014, norm:0.5311, tok/sec: 102947.44, flops:90.15, batch-reuse:1
@ 357 train 7.6504 , allloss: 7.7086, dt: 1284.37ms, fracRes: 0.1949, norm(attn): 0.1104, norm(output): 0.3730, norm(x): 0.4698, norm(y): 1.0014, norm:0.5929, tok/sec: 102051.90, flops:89.37, batch-reuse:1
@ 358 train 7.5779 , allloss: 7.6345, dt: 1283.89ms, fracRes: 0.1944, norm(attn): 0.1099, norm(output): 0.3730, norm(x): 0.4627, norm(y): 1.0014, norm:0.7818, tok/sec: 102089.55, flops:89.40, batch-reuse:1
@ 359 train 7.7884 , allloss: 7.8500, dt: 1274.66ms, fracRes: 0.1937, norm(attn): 0.1099, norm(output): 0.3730, norm(x): 0.4585, norm(y): 1.0014, norm:0.8541, tok/sec: 102829.15, flops:90.05, batch-reuse:1
@ 360 train 7.6719 , allloss: 7.7331, dt: 1268.15ms, fracRes: 0.1928, norm(attn): 0.1108, norm(output): 0.3750, norm(x): 0.4595, norm(y): 1.0014, norm:0.5925, tok/sec: 103356.46, flops:90.51, batch-reuse:1
@ 361 train 7.6608 , allloss: 7.7154, dt: 1263.62ms, fracRes: 0.1923, norm(attn): 0.1113, norm(output): 0.3770, norm(x): 0.4641, norm(y): 1.0014, norm:0.5494, tok/sec: 103727.20, flops:90.83, batch-reuse:1
@ 362 train 7.5335 , allloss: 7.5819, dt: 1262.32ms, fracRes: 0.1916, norm(attn): 0.1157, norm(output): 0.3828, norm(x): 0.4698, norm(y): 1.0014, norm:0.5456, tok/sec: 103834.03, flops:90.93, batch-reuse:1
@ 363 train 7.6130 , allloss: 7.6587, dt: 1249.63ms, fracRes: 0.1917, norm(attn): 0.1167, norm(output): 0.3848, norm(x): 0.4755, norm(y): 1.0015, norm:0.5709, tok/sec: 104888.67, flops:91.85, batch-reuse:1
@ 364 train 7.6246 , allloss: 7.6692, dt: 1259.38ms, fracRes: 0.1919, norm(attn): 0.1172, norm(output): 0.3945, norm(x): 0.4803, norm(y): 1.0015, norm:0.4562, tok/sec: 104076.82, flops:91.14, batch-reuse:1
@ 365 train 7.6298 , allloss: 7.6750, dt: 1273.51ms, fracRes: 0.1921, norm(attn): 0.1172, norm(output): 0.4004, norm(x): 0.4839, norm(y): 1.0015, norm:0.4814, tok/sec: 102921.69, flops:90.13, batch-reuse:1
@ 366 train 7.6393 , allloss: 7.6861, dt: 1305.24ms, fracRes: 0.1919, norm(attn): 0.1172, norm(output): 0.4043, norm(x): 0.4861, norm(y): 1.0015, norm:0.3994, tok/sec: 100420.07, flops:87.94, batch-reuse:1
@ 367 train 7.5909 , allloss: 7.6392, dt: 1293.60ms, fracRes: 0.1910, norm(attn): 0.1177, norm(output): 0.4043, norm(x): 0.4869, norm(y): 1.0015, norm:0.3899, tok/sec: 101323.28, flops:88.73, batch-reuse:1
@ 368 train 7.6654 , allloss: 7.7164, dt: 1290.73ms, fracRes: 0.1884, norm(attn): 0.1177, norm(output): 0.4043, norm(x): 0.4858, norm(y): 1.0015, norm:0.3914, tok/sec: 101548.77, flops:88.92, batch-reuse:1
@ 369 train 7.6136 , allloss: 7.6660, dt: 1277.66ms, fracRes: 0.1822, norm(attn): 0.1177, norm(output): 0.4043, norm(x): 0.4829, norm(y): 1.0015, norm:0.4479, tok/sec: 102587.28, flops:89.83, batch-reuse:1
@ 370 train 7.6771 , allloss: 7.7310, dt: 1276.22ms, fracRes: 0.1718, norm(attn): 0.1191, norm(output): 0.4043, norm(x): 0.4776, norm(y): 1.0014, norm:0.6419, tok/sec: 102703.44, flops:89.94, batch-reuse:1
@ 371 train 7.6243 , allloss: 7.6790, dt: 1252.52ms, fracRes: 0.1569, norm(attn): 0.1230, norm(output): 0.4043, norm(x): 0.4708, norm(y): 1.0014, norm:0.5067, tok/sec: 104646.59, flops:91.64, batch-reuse:1
@ 372 train 7.6944 , allloss: 7.7528, dt: 1257.13ms, fracRes: 0.1408, norm(attn): 0.1245, norm(output): 0.4043, norm(x): 0.4634, norm(y): 1.0014, norm:0.4243, tok/sec: 104262.87, flops:91.30, batch-reuse:1
@ 373 train 7.6954 , allloss: 7.7592, dt: 1277.14ms, fracRes: 0.1269, norm(attn): 0.1245, norm(output): 0.4043, norm(x): 0.4567, norm(y): 1.0014, norm:0.5699, tok/sec: 102628.99, flops:89.87, batch-reuse:1
@ 374 train 7.6865 , allloss: 7.7579, dt: 1256.59ms, fracRes: 0.1168, norm(attn): 0.1250, norm(output): 0.4043, norm(x): 0.4513, norm(y): 1.0014, norm:0.4994, tok/sec: 104307.76, flops:91.34, batch-reuse:1
@ 375 train 7.7562 , allloss: 7.8404, dt: 1260.68ms, fracRes: 0.1098, norm(attn): 0.1245, norm(output): 0.4043, norm(x): 0.4461, norm(y): 1.0014, norm:0.4638, tok/sec: 103968.90, flops:91.04, batch-reuse:1
@ 376 train 7.7915 , allloss: 7.9011, dt: 1258.32ms, fracRes: 0.1047, norm(attn): 0.1245, norm(output): 0.4023, norm(x): 0.4390, norm(y): 1.0013, norm:0.6080, tok/sec: 104163.92, flops:91.21, batch-reuse:1
@ 377 train 7.6916 , allloss: 7.9309, dt: 1251.77ms, fracRes: 0.1004, norm(attn): 0.1230, norm(output): 0.3945, norm(x): 0.4236, norm(y): 1.0013, norm:1.4956, tok/sec: 104709.65, flops:91.69, batch-reuse:1
@ 378 train 7.6560 , allloss: 8.8287, dt: 1265.95ms, fracRes: 0.0472, norm(attn): 0.1245, norm(output): 0.3730, norm(x): 0.3816, norm(y): 1.0011, norm:6.6872, tok/sec: 103536.34, flops:90.67, batch-reuse:1
@ 379 train 7.7332 , allloss: 9.5507, dt: 1263.20ms, fracRes: 0.0665, norm(attn): 0.1172, norm(output): 0.3457, norm(x): 0.3751, norm(y): 1.0011, norm:7.7916, tok/sec: 103761.52, flops:90.86, batch-reuse:1
@ 380 train 7.7872 , allloss: 9.3506, dt: 1255.51ms, fracRes: 0.0879, norm(attn): 0.1104, norm(output): 0.3477, norm(x): 0.3757, norm(y): 1.0011, norm:6.7595, tok/sec: 104397.65, flops:91.42, batch-reuse:1
@ 381 train 7.7396 , allloss: 9.1866, dt: 1274.55ms, fracRes: 0.0483, norm(attn): 0.1172, norm(output): 0.3691, norm(x): 0.3760, norm(y): 1.0010, norm:5.6148, tok/sec: 102837.46, flops:90.05, batch-reuse:1
@ 382 train 7.8905 , allloss: 8.9269, dt: 1279.11ms, fracRes: 0.0180, norm(attn): 0.1118, norm(output): 0.3691, norm(x): 0.3702, norm(y): 1.0009, norm:179.3908, tok/sec: 102471.37, flops:89.73, batch-reuse:1
@ 383 train 7.6941 , allloss: 8.6310, dt: 1300.42ms, fracRes: 0.0537, norm(attn): 0.1270, norm(output): 0.3770, norm(x): 0.3985, norm(y): 1.0012, norm:4.6338, tok/sec: 100791.96, flops:88.26, batch-reuse:1
@ 384 train 7.6901 , allloss: 7.9735, dt: 1296.56ms, fracRes: 0.1125, norm(attn): 0.1260, norm(output): 0.4297, norm(x): 0.4591, norm(y): 1.0014, norm:2.1863, tok/sec: 101091.84, flops:88.52, batch-reuse:1
@ 385 train 7.6606 , allloss: 7.8351, dt: 1264.00ms, fracRes: 0.1332, norm(attn): 0.1260, norm(output): 0.4375, norm(x): 0.4846, norm(y): 1.0014, norm:1.2670, tok/sec: 103696.13, flops:90.81, batch-reuse:1
@ 386 train 7.7045 , allloss: 7.8313, dt: 1247.85ms, fracRes: 0.1592, norm(attn): 0.1250, norm(output): 0.4395, norm(x): 0.5034, norm(y): 1.0015, norm:0.9280, tok/sec: 105037.85, flops:91.98, batch-reuse:1
@ 387 train 7.6944 , allloss: 7.8103, dt: 1292.13ms, fracRes: 0.1810, norm(attn): 0.1245, norm(output): 0.4434, norm(x): 0.5179, norm(y): 1.0015, norm:0.7312, tok/sec: 101438.49, flops:88.83, batch-reuse:1
@ 388 train 7.6168 , allloss: 7.7178, dt: 1268.10ms, fracRes: 0.2052, norm(attn): 0.1230, norm(output): 0.4453, norm(x): 0.5358, norm(y): 1.0016, norm:0.6391, tok/sec: 103360.93, flops:90.51, batch-reuse:1
@ 389 train 7.6746 , allloss: 7.7668, dt: 1243.04ms, fracRes: 0.2275, norm(attn): 0.1230, norm(output): 0.4590, norm(x): 0.5538, norm(y): 1.0016, norm:0.5069, tok/sec: 105444.73, flops:92.34, batch-reuse:1
@ 390 train 7.7109 , allloss: 7.7983, dt: 1261.14ms, fracRes: 0.2413, norm(attn): 0.1230, norm(output): 0.4609, norm(x): 0.5675, norm(y): 1.0016, norm:0.4659, tok/sec: 103931.63, flops:91.01, batch-reuse:1
@ 391 train 7.6503 , allloss: 7.7329, dt: 1290.66ms, fracRes: 0.2477, norm(attn): 0.1230, norm(output): 0.4609, norm(x): 0.5773, norm(y): 1.0017, norm:0.5391, tok/sec: 101554.04, flops:88.93, batch-reuse:1
@ 392 train 7.7000 , allloss: 7.7750, dt: 1264.28ms, fracRes: 0.2614, norm(attn): 0.1235, norm(output): 0.4629, norm(x): 0.5919, norm(y): 1.0017, norm:0.8315, tok/sec: 103673.31, flops:90.79, batch-reuse:1
@ 393 train 7.6774 , allloss: 7.7485, dt: 1262.83ms, fracRes: 0.2687, norm(attn): 0.1245, norm(output): 0.4648, norm(x): 0.6021, norm(y): 1.0017, norm:0.5158, tok/sec: 103791.96, flops:90.89, batch-reuse:1
@ 394 train 7.6560 , allloss: 7.7222, dt: 1268.15ms, fracRes: 0.2780, norm(attn): 0.1250, norm(output): 0.4668, norm(x): 0.6135, norm(y): 1.0018, norm:0.5182, tok/sec: 103357.03, flops:90.51, batch-reuse:1
@ 395 train 7.7855 , allloss: 7.8476, dt: 1265.45ms, fracRes: 0.2853, norm(attn): 0.1250, norm(output): 0.4668, norm(x): 0.6221, norm(y): 1.0018, norm:0.8238, tok/sec: 103577.54, flops:90.70, batch-reuse:1
@ 396 train 7.5760 , allloss: 7.6351, dt: 1274.46ms, fracRes: 0.2889, norm(attn): 0.1260, norm(output): 0.4668, norm(x): 0.6286, norm(y): 1.0018, norm:0.8555, tok/sec: 102845.06, flops:90.06, batch-reuse:1
@ 397 train 7.6885 , allloss: 7.7450, dt: 1281.81ms, fracRes: 0.2948, norm(attn): 0.1250, norm(output): 0.4609, norm(x): 0.6347, norm(y): 1.0018, norm:0.5581, tok/sec: 102255.46, flops:89.54, batch-reuse:1
@ 398 train 7.7019 , allloss: 7.7569, dt: 1266.87ms, fracRes: 0.2994, norm(attn): 0.1250, norm(output): 0.4531, norm(x): 0.6399, norm(y): 1.0018, norm:0.5621, tok/sec: 103461.09, flops:90.60, batch-reuse:1
@ 399 train 7.6741 , allloss: 7.7282, dt: 1250.31ms, fracRes: 0.3036, norm(attn): 0.1250, norm(output): 0.4453, norm(x): 0.6448, norm(y): 1.0018, norm:0.3416, tok/sec: 104831.23, flops:91.80, batch-reuse:1
@ 400 train 7.6905 , allloss: 7.7434, dt: 1280.49ms, fracRes: 0.3078, norm(attn): 0.1245, norm(output): 0.4395, norm(x): 0.6494, norm(y): 1.0018, norm:0.5651, tok/sec: 102360.44, flops:89.64, batch-reuse:1
@ 401 train 7.7610 , allloss: 7.8125, dt: 1268.12ms, fracRes: 0.3118, norm(attn): 0.1245, norm(output): 0.4395, norm(x): 0.6538, norm(y): 1.0019, norm:0.5945, tok/sec: 103359.40, flops:90.51, batch-reuse:1
@ 402 train 7.7057 , allloss: 7.7555, dt: 1263.44ms, fracRes: 0.3154, norm(attn): 0.1245, norm(output): 0.4395, norm(x): 0.6579, norm(y): 1.0019, norm:0.5198, tok/sec: 103741.86, flops:90.85, batch-reuse:1
@ 403 train 7.7383 , allloss: 7.7864, dt: 1263.38ms, fracRes: 0.3191, norm(attn): 0.1245, norm(output): 0.4355, norm(x): 0.6609, norm(y): 1.0019, norm:0.3938, tok/sec: 103746.93, flops:90.85, batch-reuse:1
@ 404 train 7.6559 , allloss: 7.7022, dt: 1257.68ms, fracRes: 0.3229, norm(attn): 0.1230, norm(output): 0.4355, norm(x): 0.6631, norm(y): 1.0019, norm:0.5444, tok/sec: 104216.92, flops:91.26, batch-reuse:1
@ 405 train 7.6592 , allloss: 7.7034, dt: 1255.39ms, fracRes: 0.3270, norm(attn): 0.1191, norm(output): 0.4297, norm(x): 0.6643, norm(y): 1.0019, norm:0.4143, tok/sec: 104407.22, flops:91.43, batch-reuse:1
@ 406 train 7.6649 , allloss: 7.7067, dt: 1282.88ms, fracRes: 0.3312, norm(attn): 0.1177, norm(output): 0.4141, norm(x): 0.6647, norm(y): 1.0019, norm:0.4788, tok/sec: 102170.24, flops:89.47, batch-reuse:1
@ 407 train 7.6695 , allloss: 7.7087, dt: 1259.89ms, fracRes: 0.3354, norm(attn): 0.1167, norm(output): 0.4082, norm(x): 0.6642, norm(y): 1.0019, norm:0.3825, tok/sec: 104034.85, flops:91.10, batch-reuse:1
@ 408 train 7.6962 , allloss: 7.7332, dt: 1256.20ms, fracRes: 0.3392, norm(attn): 0.1113, norm(output): 0.4043, norm(x): 0.6627, norm(y): 1.0019, norm:0.3172, tok/sec: 104340.42, flops:91.37, batch-reuse:1
@ 409 train 7.6319 , allloss: 7.6666, dt: 1241.35ms, fracRes: 0.3425, norm(attn): 0.1099, norm(output): 0.4023, norm(x): 0.6603, norm(y): 1.0019, norm:0.3348, tok/sec: 105588.54, flops:92.46, batch-reuse:1
@ 410 train 7.6529 , allloss: 7.6861, dt: 1287.77ms, fracRes: 0.3445, norm(attn): 0.1089, norm(output): 0.3965, norm(x): 0.6565, norm(y): 1.0018, norm:0.4903, tok/sec: 101782.49, flops:89.13, batch-reuse:1
@ 411 train 7.6576 , allloss: 7.6899, dt: 1307.78ms, fracRes: 0.3452, norm(attn): 0.1064, norm(output): 0.3848, norm(x): 0.6511, norm(y): 1.0018, norm:0.4997, tok/sec: 100224.50, flops:87.77, batch-reuse:1
@ 412 train 7.6754 , allloss: 7.7073, dt: 1294.49ms, fracRes: 0.3451, norm(attn): 0.1035, norm(output): 0.3789, norm(x): 0.6439, norm(y): 1.0018, norm:0.4656, tok/sec: 101253.67, flops:88.67, batch-reuse:1
@ 413 train 7.4762 , allloss: 7.5076, dt: 1253.50ms, fracRes: 0.3434, norm(attn): 0.1025, norm(output): 0.3789, norm(x): 0.6358, norm(y): 1.0018, norm:1.0206, tok/sec: 104565.08, flops:91.57, batch-reuse:1
@ 414 train 7.6548 , allloss: 7.6867, dt: 1259.67ms, fracRes: 0.3413, norm(attn): 0.1021, norm(output): 0.3770, norm(x): 0.6262, norm(y): 1.0018, norm:0.3701, tok/sec: 104052.25, flops:91.12, batch-reuse:1
@ 415 train 7.5838 , allloss: 7.6154, dt: 1264.68ms, fracRes: 0.3372, norm(attn): 0.1035, norm(output): 0.3770, norm(x): 0.6176, norm(y): 1.0018, norm:0.4453, tok/sec: 103640.83, flops:90.76, batch-reuse:1
@ 416 train 7.6914 , allloss: 7.7231, dt: 1261.91ms, fracRes: 0.3341, norm(attn): 0.1035, norm(output): 0.3789, norm(x): 0.6095, norm(y): 1.0018, norm:0.4165, tok/sec: 103867.95, flops:90.96, batch-reuse:1
@ 417 train 7.6437 , allloss: 7.6749, dt: 1249.47ms, fracRes: 0.3291, norm(attn): 0.1074, norm(output): 0.3828, norm(x): 0.6039, norm(y): 1.0018, norm:0.4969, tok/sec: 104902.04, flops:91.86, batch-reuse:1
@ 418 train 7.7084 , allloss: 7.7395, dt: 1264.82ms, fracRes: 0.3252, norm(attn): 0.1089, norm(output): 0.3867, norm(x): 0.5997, norm(y): 1.0018, norm:0.3423, tok/sec: 103629.12, flops:90.75, batch-reuse:1
@ 419 train 7.6693 , allloss: 7.7001, dt: 1275.11ms, fracRes: 0.3218, norm(attn): 0.1099, norm(output): 0.3965, norm(x): 0.5973, norm(y): 1.0018, norm:0.3130, tok/sec: 102792.53, flops:90.01, batch-reuse:1
@ 420 train 7.6130 , allloss: 7.6436, dt: 1266.03ms, fracRes: 0.3188, norm(attn): 0.1113, norm(output): 0.4023, norm(x): 0.5964, norm(y): 1.0018, norm:0.4124, tok/sec: 103529.69, flops:90.66, batch-reuse:1
@ 421 train 7.7716 , allloss: 7.8031, dt: 1290.80ms, fracRes: 0.3166, norm(attn): 0.1147, norm(output): 0.4043, norm(x): 0.5960, norm(y): 1.0019, norm:0.4830, tok/sec: 101543.07, flops:88.92, batch-reuse:1
@ 422 train 7.7066 , allloss: 7.7381, dt: 1278.82ms, fracRes: 0.3139, norm(attn): 0.1167, norm(output): 0.4062, norm(x): 0.5971, norm(y): 1.0019, norm:0.3135, tok/sec: 102494.48, flops:89.75, batch-reuse:1
@ 423 train 7.7482 , allloss: 7.7800, dt: 1266.18ms, fracRes: 0.3139, norm(attn): 0.1167, norm(output): 0.4082, norm(x): 0.5987, norm(y): 1.0019, norm:0.3650, tok/sec: 103518.05, flops:90.65, batch-reuse:1
@ 424 train 7.6511 , allloss: 7.6824, dt: 1263.29ms, fracRes: 0.3150, norm(attn): 0.1172, norm(output): 0.4082, norm(x): 0.6009, norm(y): 1.0019, norm:0.2981, tok/sec: 103754.76, flops:90.86, batch-reuse:1
@ 425 train 7.7201 , allloss: 7.7521, dt: 1277.21ms, fracRes: 0.3154, norm(attn): 0.1172, norm(output): 0.4141, norm(x): 0.6013, norm(y): 1.0019, norm:0.4166, tok/sec: 102623.30, flops:89.87, batch-reuse:1
@ 426 train 7.6090 , allloss: 7.6399, dt: 1271.91ms, fracRes: 0.3194, norm(attn): 0.1177, norm(output): 0.4141, norm(x): 0.6032, norm(y): 1.0019, norm:0.4582, tok/sec: 103051.30, flops:90.24, batch-reuse:1
@ 427 train 7.6916 , allloss: 7.7233, dt: 1280.12ms, fracRes: 0.3221, norm(attn): 0.1177, norm(output): 0.4141, norm(x): 0.6025, norm(y): 1.0019, norm:0.4226, tok/sec: 102390.45, flops:89.66, batch-reuse:1
@ 428 train 7.6472 , allloss: 7.6801, dt: 1269.87ms, fracRes: 0.3250, norm(attn): 0.1172, norm(output): 0.4141, norm(x): 0.6005, norm(y): 1.0019, norm:0.3129, tok/sec: 103216.59, flops:90.39, batch-reuse:1
@ 429 train 7.5956 , allloss: 7.6288, dt: 1287.71ms, fracRes: 0.3262, norm(attn): 0.1172, norm(output): 0.4141, norm(x): 0.5979, norm(y): 1.0019, norm:0.3240, tok/sec: 101786.93, flops:89.13, batch-reuse:1
@ 430 train 8.0393 , allloss: 8.0957, dt: 1284.62ms, fracRes: 0.3256, norm(attn): 0.1167, norm(output): 0.4082, norm(x): 0.5910, norm(y): 1.0019, norm:0.4005, tok/sec: 102031.71, flops:89.35, batch-reuse:1
@ 431 train 7.7973 , allloss: 7.8401, dt: 1259.38ms, fracRes: 0.3336, norm(attn): 0.1157, norm(output): 0.4082, norm(x): 0.5927, norm(y): 1.0019, norm:0.3380, tok/sec: 104076.88, flops:91.14, batch-reuse:1
@ 432 train 8.3687 , allloss: 8.4516, dt: 1282.13ms, fracRes: 0.3166, norm(attn): 0.1172, norm(output): 0.4141, norm(x): 0.5814, norm(y): 1.0018, norm:0.5492, tok/sec: 102229.73, flops:89.52, batch-reuse:1
@ 433 train 7.9789 , allloss: 8.0404, dt: 1251.51ms, fracRes: 0.3250, norm(attn): 0.1172, norm(output): 0.4141, norm(x): 0.5876, norm(y): 1.0018, norm:0.5013, tok/sec: 104731.09, flops:91.71, batch-reuse:1
@ 434 train 8.0145 , allloss: 8.0809, dt: 1259.37ms, fracRes: 0.3181, norm(attn): 0.1191, norm(output): 0.4258, norm(x): 0.5888, norm(y): 1.0018, norm:0.5280, tok/sec: 104077.13, flops:91.14, batch-reuse:1
@ 435 train 8.1692 , allloss: 8.2517, dt: 1283.95ms, fracRes: 0.3026, norm(attn): 0.1250, norm(output): 0.4297, norm(x): 0.5877, norm(y): 1.0018, norm:0.5206, tok/sec: 102085.25, flops:89.39, batch-reuse:1
@ 436 train 7.7799 , allloss: 7.8899, dt: 1283.72ms, fracRes: 0.3082, norm(attn): 0.1245, norm(output): 0.4375, norm(x): 0.6015, norm(y): 1.0019, norm:0.8704, tok/sec: 102102.96, flops:89.41, batch-reuse:1
@ 437 train 7.6950 , allloss: 7.7504, dt: 1305.99ms, fracRes: 0.3210, norm(attn): 0.1245, norm(output): 0.4395, norm(x): 0.6203, norm(y): 1.0019, norm:0.5401, tok/sec: 100361.90, flops:87.89, batch-reuse:1
@ 438 train 7.8043 , allloss: 7.8528, dt: 1308.79ms, fracRes: 0.3276, norm(attn): 0.1230, norm(output): 0.4395, norm(x): 0.6329, norm(y): 1.0019, norm:0.5168, tok/sec: 100147.30, flops:87.70, batch-reuse:1
@ 439 train 7.6204 , allloss: 7.6631, dt: 1311.61ms, fracRes: 0.3336, norm(attn): 0.1230, norm(output): 0.4453, norm(x): 0.6466, norm(y): 1.0019, norm:0.5207, tok/sec: 99932.20, flops:87.51, batch-reuse:1
@ 440 train 7.5925 , allloss: 7.6327, dt: 1306.30ms, fracRes: 0.3409, norm(attn): 0.1230, norm(output): 0.4492, norm(x): 0.6592, norm(y): 1.0019, norm:0.5818, tok/sec: 100338.66, flops:87.87, batch-reuse:1
@ 441 train 7.6317 , allloss: 7.6706, dt: 1290.63ms, fracRes: 0.3503, norm(attn): 0.1191, norm(output): 0.4609, norm(x): 0.6718, norm(y): 1.0019, norm:0.3626, tok/sec: 101556.26, flops:88.93, batch-reuse:1
@ 442 train 7.7069 , allloss: 7.7454, dt: 1283.75ms, fracRes: 0.3614, norm(attn): 0.1177, norm(output): 0.4609, norm(x): 0.6839, norm(y): 1.0019, norm:0.4448, tok/sec: 102100.76, flops:89.41, batch-reuse:1
@ 443 train 7.7236 , allloss: 7.7614, dt: 1286.84ms, fracRes: 0.3735, norm(attn): 0.1172, norm(output): 0.4609, norm(x): 0.6969, norm(y): 1.0020, norm:0.4781, tok/sec: 101855.49, flops:89.19, batch-reuse:1
@ 444 train 7.6908 , allloss: 7.7283, dt: 1259.37ms, fracRes: 0.3877, norm(attn): 0.1152, norm(output): 0.4609, norm(x): 0.7101, norm(y): 1.0020, norm:0.3567, tok/sec: 104077.59, flops:91.14, batch-reuse:1
@ 445 train 7.6235 , allloss: 7.6605, dt: 1271.78ms, fracRes: 0.4028, norm(attn): 0.1113, norm(output): 0.4609, norm(x): 0.7239, norm(y): 1.0020, norm:0.4521, tok/sec: 103061.79, flops:90.25, batch-reuse:1
@ 446 train 7.6809 , allloss: 7.7181, dt: 1278.89ms, fracRes: 0.4183, norm(attn): 0.1089, norm(output): 0.4590, norm(x): 0.7368, norm(y): 1.0020, norm:0.4382, tok/sec: 102489.10, flops:89.75, batch-reuse:1
@ 447 train 7.6589 , allloss: 7.6958, dt: 1272.40ms, fracRes: 0.4338, norm(attn): 0.1035, norm(output): 0.4453, norm(x): 0.7506, norm(y): 1.0020, norm:0.3692, tok/sec: 103011.81, flops:90.21, batch-reuse:1
@ 448 train 7.6528 , allloss: 7.6893, dt: 1301.67ms, fracRes: 0.4487, norm(attn): 0.1016, norm(output): 0.4395, norm(x): 0.7639, norm(y): 1.0020, norm:0.3382, tok/sec: 100695.13, flops:88.18, batch-reuse:1
@ 449 train 7.5941 , allloss: 7.6294, dt: 1252.72ms, fracRes: 0.4625, norm(attn): 0.0991, norm(output): 0.4395, norm(x): 0.7764, norm(y): 1.0020, norm:0.3284, tok/sec: 104630.09, flops:91.62, batch-reuse:1
@ 450 train 7.6737 , allloss: 7.7083, dt: 1262.26ms, fracRes: 0.4742, norm(attn): 0.0942, norm(output): 0.4355, norm(x): 0.7861, norm(y): 1.0020, norm:0.4045, tok/sec: 103838.80, flops:90.93, batch-reuse:1
@ 451 train 7.6498 , allloss: 7.6828, dt: 1258.47ms, fracRes: 0.4850, norm(attn): 0.0933, norm(output): 0.4355, norm(x): 0.7948, norm(y): 1.0020, norm:0.3372, tok/sec: 104152.10, flops:91.20, batch-reuse:1
@ 452 train 7.6906 , allloss: 7.7224, dt: 1266.47ms, fracRes: 0.4935, norm(attn): 0.0913, norm(output): 0.4316, norm(x): 0.7997, norm(y): 1.0020, norm:0.3190, tok/sec: 103494.34, flops:90.63, batch-reuse:1
@ 453 train 7.6791 , allloss: 7.7093, dt: 1271.99ms, fracRes: 0.5005, norm(attn): 0.0884, norm(output): 0.4297, norm(x): 0.8025, norm(y): 1.0020, norm:0.3827, tok/sec: 103044.71, flops:90.23, batch-reuse:1
@ 454 train 7.6657 , allloss: 7.6947, dt: 1258.66ms, fracRes: 0.5051, norm(attn): 0.0869, norm(output): 0.4258, norm(x): 0.8025, norm(y): 1.0021, norm:0.5067, tok/sec: 104135.94, flops:91.19, batch-reuse:1
@ 455 train 7.7257 , allloss: 7.7539, dt: 1269.39ms, fracRes: 0.5090, norm(attn): 0.0864, norm(output): 0.4141, norm(x): 0.7997, norm(y): 1.0021, norm:0.3402, tok/sec: 103255.75, flops:90.42, batch-reuse:1
@ 456 train 7.6630 , allloss: 7.6902, dt: 1278.31ms, fracRes: 0.5120, norm(attn): 0.0864, norm(output): 0.4141, norm(x): 0.7966, norm(y): 1.0021, norm:0.3198, tok/sec: 102535.51, flops:89.79, batch-reuse:1
@ 457 train 7.7609 , allloss: 7.7882, dt: 1268.04ms, fracRes: 0.5137, norm(attn): 0.0859, norm(output): 0.4102, norm(x): 0.7905, norm(y): 1.0021, norm:0.5133, tok/sec: 103365.44, flops:90.52, batch-reuse:1
@ 458 train 7.7567 , allloss: 7.7831, dt: 1268.01ms, fracRes: 0.5157, norm(attn): 0.0859, norm(output): 0.4082, norm(x): 0.7853, norm(y): 1.0021, norm:0.4703, tok/sec: 103368.43, flops:90.52, batch-reuse:1
@ 459 train 7.6572 , allloss: 7.6828, dt: 1260.96ms, fracRes: 0.5178, norm(attn): 0.0864, norm(output): 0.4082, norm(x): 0.7803, norm(y): 1.0021, norm:0.3720, tok/sec: 103946.43, flops:91.02, batch-reuse:1
@ 460 train 7.6235 , allloss: 7.6486, dt: 1263.51ms, fracRes: 0.5178, norm(attn): 0.0864, norm(output): 0.4062, norm(x): 0.7735, norm(y): 1.0021, norm:0.5546, tok/sec: 103736.10, flops:90.84, batch-reuse:1
@ 461 train 7.6792 , allloss: 7.7056, dt: 1269.07ms, fracRes: 0.5163, norm(attn): 0.0869, norm(output): 0.4062, norm(x): 0.7651, norm(y): 1.0021, norm:0.3435, tok/sec: 103281.71, flops:90.44, batch-reuse:1
@ 462 train 7.7117 , allloss: 7.7376, dt: 1300.46ms, fracRes: 0.5154, norm(attn): 0.0879, norm(output): 0.4062, norm(x): 0.7590, norm(y): 1.0021, norm:0.4032, tok/sec: 100788.65, flops:88.26, batch-reuse:1
@ 463 train 7.6986 , allloss: 7.7229, dt: 1272.51ms, fracRes: 0.5160, norm(attn): 0.0874, norm(output): 0.4043, norm(x): 0.7537, norm(y): 1.0021, norm:0.3537, tok/sec: 103002.36, flops:90.20, batch-reuse:1
@ 464 train 7.6407 , allloss: 7.6647, dt: 1238.40ms, fracRes: 0.5176, norm(attn): 0.0884, norm(output): 0.4023, norm(x): 0.7477, norm(y): 1.0021, norm:0.4322, tok/sec: 105839.41, flops:92.68, batch-reuse:1
@ 465 train 7.6306 , allloss: 7.6544, dt: 1268.53ms, fracRes: 0.5188, norm(attn): 0.0879, norm(output): 0.3984, norm(x): 0.7365, norm(y): 1.0021, norm:0.4554, tok/sec: 103326.27, flops:90.48, batch-reuse:1
@ 466 train 7.6702 , allloss: 7.6945, dt: 1271.00ms, fracRes: 0.5179, norm(attn): 0.0874, norm(output): 0.3965, norm(x): 0.7206, norm(y): 1.0021, norm:0.7875, tok/sec: 103125.49, flops:90.31, batch-reuse:1
@ 467 train 7.6212 , allloss: 7.6458, dt: 1263.02ms, fracRes: 0.5182, norm(attn): 0.0869, norm(output): 0.3848, norm(x): 0.7063, norm(y): 1.0021, norm:0.3459, tok/sec: 103776.38, flops:90.88, batch-reuse:1
@ 468 train 7.5555 , allloss: 7.5815, dt: 1262.40ms, fracRes: 0.5167, norm(attn): 0.0864, norm(output): 0.3789, norm(x): 0.6904, norm(y): 1.0021, norm:0.4577, tok/sec: 103827.79, flops:90.92, batch-reuse:1
@ 469 train 7.5643 , allloss: 7.5924, dt: 1273.21ms, fracRes: 0.5158, norm(attn): 0.0864, norm(output): 0.3770, norm(x): 0.6780, norm(y): 1.0021, norm:0.5088, tok/sec: 102946.36, flops:90.15, batch-reuse:1
@ 470 train 7.6441 , allloss: 7.6713, dt: 1272.40ms, fracRes: 0.5175, norm(attn): 0.0864, norm(output): 0.3770, norm(x): 0.6718, norm(y): 1.0021, norm:0.4337, tok/sec: 103011.35, flops:90.21, batch-reuse:1
@ 471 train 7.5335 , allloss: 7.5573, dt: 1262.66ms, fracRes: 0.5246, norm(attn): 0.0859, norm(output): 0.3750, norm(x): 0.6715, norm(y): 1.0021, norm:0.3981, tok/sec: 103805.95, flops:90.90, batch-reuse:1
@ 472 train 7.6521 , allloss: 7.6758, dt: 1263.21ms, fracRes: 0.5293, norm(attn): 0.0859, norm(output): 0.3750, norm(x): 0.6693, norm(y): 1.0021, norm:0.5320, tok/sec: 103760.99, flops:90.86, batch-reuse:1
@ 473 train 7.6483 , allloss: 7.6716, dt: 1295.19ms, fracRes: 0.5358, norm(attn): 0.0854, norm(output): 0.3750, norm(x): 0.6686, norm(y): 1.0021, norm:0.4367, tok/sec: 101199.08, flops:88.62, batch-reuse:1
@ 474 train 7.5774 , allloss: 7.6002, dt: 1327.26ms, fracRes: 0.5421, norm(attn): 0.0854, norm(output): 0.3750, norm(x): 0.6684, norm(y): 1.0021, norm:0.4954, tok/sec: 98753.82, flops:86.48, batch-reuse:1
@ 475 train 7.5856 , allloss: 7.6084, dt: 1274.59ms, fracRes: 0.5471, norm(attn): 0.0850, norm(output): 0.3730, norm(x): 0.6655, norm(y): 1.0021, norm:0.4206, tok/sec: 102834.40, flops:90.05, batch-reuse:1
@ 476 train 7.6074 , allloss: 7.6302, dt: 1283.64ms, fracRes: 0.5508, norm(attn): 0.0850, norm(output): 0.3730, norm(x): 0.6621, norm(y): 1.0021, norm:0.3440, tok/sec: 102109.58, flops:89.42, batch-reuse:1
@ 477 train 7.6692 , allloss: 7.6924, dt: 1297.87ms, fracRes: 0.5529, norm(attn): 0.0850, norm(output): 0.3730, norm(x): 0.6572, norm(y): 1.0021, norm:0.4158, tok/sec: 100989.96, flops:88.44, batch-reuse:1
@ 478 train 7.6424 , allloss: 7.6659, dt: 1258.24ms, fracRes: 0.5550, norm(attn): 0.0854, norm(output): 0.3730, norm(x): 0.6511, norm(y): 1.0021, norm:0.3568, tok/sec: 104170.61, flops:91.22, batch-reuse:1
@ 479 train 7.7454 , allloss: 7.7694, dt: 1296.46ms, fracRes: 0.5568, norm(attn): 0.0854, norm(output): 0.3711, norm(x): 0.6484, norm(y): 1.0021, norm:0.4765, tok/sec: 101099.78, flops:88.53, batch-reuse:1
@ 480 train 7.5742 , allloss: 7.5984, dt: 1260.65ms, fracRes: 0.5599, norm(attn): 0.0854, norm(output): 0.3711, norm(x): 0.6461, norm(y): 1.0022, norm:0.3735, tok/sec: 103971.57, flops:91.05, batch-reuse:1
@ 481 train 7.6362 , allloss: 7.6608, dt: 1279.30ms, fracRes: 0.5629, norm(attn): 0.0859, norm(output): 0.3711, norm(x): 0.6468, norm(y): 1.0022, norm:0.3681, tok/sec: 102455.98, flops:89.72, batch-reuse:1
@ 482 train 7.6199 , allloss: 7.6450, dt: 1256.87ms, fracRes: 0.5659, norm(attn): 0.0859, norm(output): 0.3711, norm(x): 0.6449, norm(y): 1.0022, norm:0.3260, tok/sec: 104284.13, flops:91.32, batch-reuse:1
@ 483 train 7.6921 , allloss: 7.7180, dt: 1264.12ms, fracRes: 0.5677, norm(attn): 0.0859, norm(output): 0.3691, norm(x): 0.6411, norm(y): 1.0022, norm:0.3939, tok/sec: 103686.74, flops:90.80, batch-reuse:1
@ 484 train 7.5679 , allloss: 7.5945, dt: 1273.94ms, fracRes: 0.5699, norm(attn): 0.0864, norm(output): 0.3652, norm(x): 0.6329, norm(y): 1.0022, norm:0.5145, tok/sec: 102886.96, flops:90.10, batch-reuse:1
@ 485 train 7.5587 , allloss: 7.5862, dt: 1288.30ms, fracRes: 0.5712, norm(attn): 0.0864, norm(output): 0.3652, norm(x): 0.6261, norm(y): 1.0022, norm:0.4080, tok/sec: 101740.63, flops:89.09, batch-reuse:1
@ 486 train 7.7045 , allloss: 7.7329, dt: 1274.36ms, fracRes: 0.5731, norm(attn): 0.0869, norm(output): 0.3652, norm(x): 0.6223, norm(y): 1.0022, norm:0.3720, tok/sec: 102853.36, flops:90.07, batch-reuse:1
@ 487 train 7.7085 , allloss: 7.7378, dt: 1300.70ms, fracRes: 0.5751, norm(attn): 0.0874, norm(output): 0.3633, norm(x): 0.6178, norm(y): 1.0023, norm:0.4114, tok/sec: 100770.51, flops:88.24, batch-reuse:1
@ 488 train 7.5779 , allloss: 7.6077, dt: 1258.15ms, fracRes: 0.5772, norm(attn): 0.0884, norm(output): 0.3633, norm(x): 0.6117, norm(y): 1.0023, norm:0.4187, tok/sec: 104178.07, flops:91.23, batch-reuse:1
@ 489 train 7.6278 , allloss: 7.6582, dt: 1266.68ms, fracRes: 0.5785, norm(attn): 0.0889, norm(output): 0.3555, norm(x): 0.6018, norm(y): 1.0023, norm:0.4247, tok/sec: 103477.06, flops:90.61, batch-reuse:1
@ 490 train 7.6245 , allloss: 7.6556, dt: 1264.27ms, fracRes: 0.5791, norm(attn): 0.0898, norm(output): 0.3496, norm(x): 0.5887, norm(y): 1.0023, norm:0.3466, tok/sec: 103674.23, flops:90.79, batch-reuse:1
@ 491 train 7.7186 , allloss: 7.7505, dt: 1292.60ms, fracRes: 0.5787, norm(attn): 0.0908, norm(output): 0.3477, norm(x): 0.5768, norm(y): 1.0023, norm:0.4939, tok/sec: 101401.81, flops:88.80, batch-reuse:1
@ 492 train 7.6831 , allloss: 7.7172, dt: 1280.89ms, fracRes: 0.5778, norm(attn): 0.0908, norm(output): 0.3457, norm(x): 0.5620, norm(y): 1.0023, norm:0.6429, tok/sec: 102328.70, flops:89.61, batch-reuse:1
@ 493 train 7.6487 , allloss: 7.6839, dt: 1277.89ms, fracRes: 0.5763, norm(attn): 0.0913, norm(output): 0.3418, norm(x): 0.5442, norm(y): 1.0023, norm:0.3353, tok/sec: 102568.87, flops:89.82, batch-reuse:1
@ 494 train 7.6074 , allloss: 7.6429, dt: 1280.79ms, fracRes: 0.5751, norm(attn): 0.0913, norm(output): 0.3379, norm(x): 0.5341, norm(y): 1.0023, norm:0.3871, tok/sec: 102336.98, flops:89.62, batch-reuse:1
@ 495 train 7.5542 , allloss: 7.5900, dt: 1260.12ms, fracRes: 0.5740, norm(attn): 0.0908, norm(output): 0.3320, norm(x): 0.5245, norm(y): 1.0023, norm:0.3786, tok/sec: 104015.52, flops:91.08, batch-reuse:1
@ 496 train 7.6563 , allloss: 7.6949, dt: 1261.34ms, fracRes: 0.5691, norm(attn): 0.0908, norm(output): 0.3223, norm(x): 0.5089, norm(y): 1.0022, norm:0.3234, tok/sec: 103914.54, flops:91.00, batch-reuse:1
@ 497 train 7.5537 , allloss: 7.5959, dt: 1258.04ms, fracRes: 0.5572, norm(attn): 0.0908, norm(output): 0.3164, norm(x): 0.4853, norm(y): 1.0022, norm:0.4183, tok/sec: 104187.83, flops:91.24, batch-reuse:1
@ 498 train 7.7018 , allloss: 7.7479, dt: 1262.84ms, fracRes: 0.5462, norm(attn): 0.0903, norm(output): 0.3145, norm(x): 0.4722, norm(y): 1.0022, norm:0.4859, tok/sec: 103791.82, flops:90.89, batch-reuse:1
@ 499 train 7.7166 , allloss: 7.7656, dt: 1314.30ms, fracRes: 0.5468, norm(attn): 0.0884, norm(output): 0.3164, norm(x): 0.4807, norm(y): 1.0022, norm:0.3963, tok/sec: 99727.66, flops:87.33, batch-reuse:1
@ 500 train 7.6337 , allloss: 7.6846, dt: 1298.87ms, fracRes: 0.5512, norm(attn): 0.0884, norm(output): 0.3242, norm(x): 0.4954, norm(y): 1.0022, norm:0.4608, tok/sec: 100912.25, flops:88.37, batch-reuse:1
@ 501 train 7.6280 , allloss: 7.6815, dt: 1274.92ms, fracRes: 0.5572, norm(attn): 0.0884, norm(output): 0.3340, norm(x): 0.5183, norm(y): 1.0022, norm:0.4025, tok/sec: 102808.19, flops:90.03, batch-reuse:1
@ 502 train 7.6947 , allloss: 7.7507, dt: 1281.31ms, fracRes: 0.5532, norm(attn): 0.0913, norm(output): 0.3418, norm(x): 0.5354, norm(y): 1.0022, norm:0.4005, tok/sec: 102295.70, flops:89.58, batch-reuse:1
@ 503 train 7.6546 , allloss: 7.7071, dt: 1246.23ms, fracRes: 0.5433, norm(attn): 0.0938, norm(output): 0.3438, norm(x): 0.5415, norm(y): 1.0022, norm:0.3917, tok/sec: 105174.64, flops:92.10, batch-reuse:1
@ 504 train 7.7056 , allloss: 7.7595, dt: 1249.82ms, fracRes: 0.5378, norm(attn): 0.0942, norm(output): 0.3457, norm(x): 0.5412, norm(y): 1.0022, norm:0.4592, tok/sec: 104872.30, flops:91.84, batch-reuse:1
@ 505 train 7.6161 , allloss: 7.6661, dt: 1247.58ms, fracRes: 0.5459, norm(attn): 0.0957, norm(output): 0.3516, norm(x): 0.5567, norm(y): 1.0022, norm:0.3895, tok/sec: 105061.09, flops:92.00, batch-reuse:1
@ 506 train 7.6246 , allloss: 7.6680, dt: 1270.91ms, fracRes: 0.5588, norm(attn): 0.0962, norm(output): 0.3652, norm(x): 0.5849, norm(y): 1.0022, norm:0.3991, tok/sec: 103132.11, flops:90.31, batch-reuse:1
@ 507 train 7.6797 , allloss: 7.7209, dt: 1258.09ms, fracRes: 0.5644, norm(attn): 0.0967, norm(output): 0.3770, norm(x): 0.6072, norm(y): 1.0022, norm:0.3706, tok/sec: 104183.66, flops:91.23, batch-reuse:1
@ 508 train 7.5975 , allloss: 7.6375, dt: 1271.12ms, fracRes: 0.5685, norm(attn): 0.0991, norm(output): 0.3828, norm(x): 0.6207, norm(y): 1.0022, norm:0.3708, tok/sec: 103115.61, flops:90.30, batch-reuse:1
@ 509 train 7.6208 , allloss: 7.6606, dt: 1257.26ms, fracRes: 0.5703, norm(attn): 0.0991, norm(output): 0.3848, norm(x): 0.6280, norm(y): 1.0022, norm:0.3667, tok/sec: 104252.49, flops:91.29, batch-reuse:1
@ 510 train 7.6018 , allloss: 7.6418, dt: 1252.66ms, fracRes: 0.5695, norm(attn): 0.0996, norm(output): 0.3887, norm(x): 0.6275, norm(y): 1.0022, norm:0.3970, tok/sec: 104634.73, flops:91.63, batch-reuse:1
@ 511 train 7.6673 , allloss: 7.7087, dt: 1255.97ms, fracRes: 0.5655, norm(attn): 0.1006, norm(output): 0.3965, norm(x): 0.6231, norm(y): 1.0022, norm:0.3809, tok/sec: 104359.20, flops:91.39, batch-reuse:1
@ 512 train 7.6228 , allloss: 7.6654, dt: 1266.53ms, fracRes: 0.5615, norm(attn): 0.1011, norm(output): 0.3965, norm(x): 0.6119, norm(y): 1.0022, norm:0.3566, tok/sec: 103489.17, flops:90.62, batch-reuse:1
@ 513 train 7.6312 , allloss: 7.6751, dt: 1250.94ms, fracRes: 0.5557, norm(attn): 0.1016, norm(output): 0.3906, norm(x): 0.5963, norm(y): 1.0022, norm:0.4615, tok/sec: 104778.84, flops:91.75, batch-reuse:1
@ 514 train 7.6106 , allloss: 7.6560, dt: 1265.94ms, fracRes: 0.5472, norm(attn): 0.1021, norm(output): 0.3867, norm(x): 0.5745, norm(y): 1.0022, norm:0.4068, tok/sec: 103537.20, flops:90.67, batch-reuse:1
@ 515 train 7.5765 , allloss: 7.6233, dt: 1256.70ms, fracRes: 0.5358, norm(attn): 0.1074, norm(output): 0.3867, norm(x): 0.5502, norm(y): 1.0022, norm:0.4181, tok/sec: 104298.70, flops:91.33, batch-reuse:1
@ 516 train 7.5666 , allloss: 7.6145, dt: 1256.38ms, fracRes: 0.5231, norm(attn): 0.1089, norm(output): 0.3867, norm(x): 0.5276, norm(y): 1.0022, norm:0.3827, tok/sec: 104325.53, flops:91.36, batch-reuse:1
@ 517 train 7.5585 , allloss: 7.6106, dt: 1247.06ms, fracRes: 0.5136, norm(attn): 0.1094, norm(output): 0.3867, norm(x): 0.5109, norm(y): 1.0022, norm:0.3554, tok/sec: 105104.84, flops:92.04, batch-reuse:1
@ 518 train 7.6558 , allloss: 7.7114, dt: 1267.73ms, fracRes: 0.5095, norm(attn): 0.1099, norm(output): 0.3867, norm(x): 0.5121, norm(y): 1.0023, norm:0.4827, tok/sec: 103391.18, flops:90.54, batch-reuse:1
@ 519 train 7.6021 , allloss: 7.6568, dt: 1288.32ms, fracRes: 0.5110, norm(attn): 0.1094, norm(output): 0.3965, norm(x): 0.5180, norm(y): 1.0023, norm:0.3618, tok/sec: 101738.60, flops:89.09, batch-reuse:1
@ 520 train 7.6685 , allloss: 7.7277, dt: 1300.37ms, fracRes: 0.5159, norm(attn): 0.1089, norm(output): 0.3984, norm(x): 0.5338, norm(y): 1.0023, norm:0.4015, tok/sec: 100795.98, flops:88.27, batch-reuse:1
@ 521 train 7.7241 , allloss: 7.8162, dt: 1271.63ms, fracRes: 0.5200, norm(attn): 0.1074, norm(output): 0.4004, norm(x): 0.5523, norm(y): 1.0024, norm:0.4432, tok/sec: 103074.00, flops:90.26, batch-reuse:1
@ 522 train 7.5873 , allloss: 7.6996, dt: 1286.90ms, fracRes: 0.5244, norm(attn): 0.1055, norm(output): 0.4043, norm(x): 0.5662, norm(y): 1.0023, norm:0.3876, tok/sec: 101850.86, flops:89.19, batch-reuse:1
@ 523 train 7.6768 , allloss: 7.8068, dt: 1251.08ms, fracRes: 0.5281, norm(attn): 0.1045, norm(output): 0.4043, norm(x): 0.5687, norm(y): 1.0023, norm:0.5448, tok/sec: 104767.00, flops:91.74, batch-reuse:1
@ 524 train 7.6190 , allloss: 7.7383, dt: 1242.07ms, fracRes: 0.5323, norm(attn): 0.1035, norm(output): 0.4023, norm(x): 0.5683, norm(y): 1.0023, norm:0.6201, tok/sec: 105527.21, flops:92.41, batch-reuse:1
@ 525 train 7.6286 , allloss: 7.7756, dt: 1275.66ms, fracRes: 0.5311, norm(attn): 0.1035, norm(output): 0.3984, norm(x): 0.5715, norm(y): 1.0023, norm:0.6118, tok/sec: 102748.21, flops:89.98, batch-reuse:1
@ 526 train 7.6326 , allloss: 7.7890, dt: 1254.63ms, fracRes: 0.5253, norm(attn): 0.1030, norm(output): 0.3984, norm(x): 0.5785, norm(y): 1.0023, norm:0.7432, tok/sec: 104470.40, flops:91.48, batch-reuse:1
@ 527 train 7.6380 , allloss: 7.7838, dt: 1240.78ms, fracRes: 0.5314, norm(attn): 0.1025, norm(output): 0.3945, norm(x): 0.5816, norm(y): 1.0023, norm:0.7192, tok/sec: 105636.69, flops:92.50, batch-reuse:1
@ 528 train 7.6289 , allloss: 7.7514, dt: 1260.72ms, fracRes: 0.5474, norm(attn): 0.1016, norm(output): 0.3887, norm(x): 0.5790, norm(y): 1.0023, norm:0.6452, tok/sec: 103966.24, flops:91.04, batch-reuse:1
@ 529 train 7.5664 , allloss: 7.6565, dt: 1250.99ms, fracRes: 0.5567, norm(attn): 0.1011, norm(output): 0.3809, norm(x): 0.5699, norm(y): 1.0023, norm:0.5007, tok/sec: 104775.01, flops:91.75, batch-reuse:1
@ 530 train 7.6800 , allloss: 7.7699, dt: 1265.15ms, fracRes: 0.5444, norm(attn): 0.1025, norm(output): 0.3770, norm(x): 0.5490, norm(y): 1.0023, norm:0.4471, tok/sec: 103601.94, flops:90.72, batch-reuse:1
@ 531 train 7.6928 , allloss: 7.7826, dt: 1268.86ms, fracRes: 0.5213, norm(attn): 0.1074, norm(output): 0.3750, norm(x): 0.5151, norm(y): 1.0023, norm:1.0941, tok/sec: 103299.38, flops:90.46, batch-reuse:1
@ 532 train 7.5459 , allloss: 7.6136, dt: 1276.53ms, fracRes: 0.5445, norm(attn): 0.1050, norm(output): 0.3750, norm(x): 0.5312, norm(y): 1.0024, norm:0.6207, tok/sec: 102678.58, flops:89.91, batch-reuse:1
@ 533 train 7.5932 , allloss: 7.6571, dt: 1278.31ms, fracRes: 0.5351, norm(attn): 0.1079, norm(output): 0.3770, norm(x): 0.5247, norm(y): 1.0025, norm:0.5129, tok/sec: 102535.22, flops:89.79, batch-reuse:1
@ 534 train 7.5463 , allloss: 7.6089, dt: 1265.06ms, fracRes: 0.5207, norm(attn): 0.1094, norm(output): 0.3770, norm(x): 0.5120, norm(y): 1.0025, norm:0.4667, tok/sec: 103609.57, flops:90.73, batch-reuse:1
@ 535 train 7.6203 , allloss: 7.6815, dt: 1262.71ms, fracRes: 0.5148, norm(attn): 0.1094, norm(output): 0.3770, norm(x): 0.5047, norm(y): 1.0025, norm:0.9295, tok/sec: 103802.23, flops:90.90, batch-reuse:1
@ 536 train 7.5968 , allloss: 7.6614, dt: 1280.23ms, fracRes: 0.5163, norm(attn): 0.1094, norm(output): 0.3770, norm(x): 0.5048, norm(y): 1.0025, norm:0.4246, tok/sec: 102381.49, flops:89.65, batch-reuse:1
@ 537 train 7.5966 , allloss: 7.6596, dt: 1258.46ms, fracRes: 0.5309, norm(attn): 0.1084, norm(output): 0.3770, norm(x): 0.5131, norm(y): 1.0025, norm:0.5019, tok/sec: 104152.69, flops:91.21, batch-reuse:1
@ 538 train 7.4514 , allloss: 7.5136, dt: 1256.34ms, fracRes: 0.5500, norm(attn): 0.1021, norm(output): 0.3770, norm(x): 0.5274, norm(y): 1.0025, norm:0.8149, tok/sec: 104328.62, flops:91.36, batch-reuse:1
@ 539 train 7.5982 , allloss: 7.6692, dt: 1293.02ms, fracRes: 0.5665, norm(attn): 0.0957, norm(output): 0.3750, norm(x): 0.5557, norm(y): 1.0025, norm:0.4860, tok/sec: 101369.17, flops:88.77, batch-reuse:1
@ 540 train 7.6521 , allloss: 7.7227, dt: 1271.73ms, fracRes: 0.5661, norm(attn): 0.0942, norm(output): 0.3633, norm(x): 0.5267, norm(y): 1.0024, norm:0.5021, tok/sec: 103065.85, flops:90.25, batch-reuse:1
@ 541 train 7.5465 , allloss: 7.6369, dt: 1271.62ms, fracRes: 0.5151, norm(attn): 0.0986, norm(output): 0.3340, norm(x): 0.4482, norm(y): 1.0023, norm:0.6430, tok/sec: 103074.80, flops:90.26, batch-reuse:1
@ 542 train 7.6658 , allloss: 7.7505, dt: 1254.63ms, fracRes: 0.5863, norm(attn): 0.0859, norm(output): 0.3418, norm(x): 0.5434, norm(y): 1.0025, norm:0.6123, tok/sec: 104470.34, flops:91.48, batch-reuse:1
@ 543 train 12.4632 , allloss: 13.3881, dt: 1255.82ms, fracRes: 0.4394, norm(attn): 0.0781, norm(output): 0.2676, norm(x): 0.3374, norm(y): 1.0020, norm:514.2977, tok/sec: 104371.76, flops:91.40, batch-reuse:1
@ 544 train 7.6261 , allloss: 7.7063, dt: 1265.85ms, fracRes: 0.6235, norm(attn): 0.0732, norm(output): 0.3477, norm(x): 0.6392, norm(y): 1.0027, norm:0.8253, tok/sec: 103544.57, flops:90.67, batch-reuse:1
@ 545 train 7.5955 , allloss: 7.6657, dt: 1269.77ms, fracRes: 0.6361, norm(attn): 0.0732, norm(output): 0.3438, norm(x): 0.6193, norm(y): 1.0028, norm:0.6353, tok/sec: 103224.81, flops:90.39, batch-reuse:1
@ 546 train 7.5446 , allloss: 7.6584, dt: 1264.13ms, fracRes: 0.6048, norm(attn): 0.0781, norm(output): 0.3125, norm(x): 0.4994, norm(y): 1.0027, norm:0.9174, tok/sec: 103685.33, flops:90.80, batch-reuse:1
@ 547 train 7.6762 , allloss: 7.7741, dt: 1282.31ms, fracRes: 0.6168, norm(attn): 0.0703, norm(output): 0.3125, norm(x): 0.5414, norm(y): 1.0027, norm:0.8311, tok/sec: 102215.21, flops:89.51, batch-reuse:1
@ 548 train 7.6509 , allloss: 7.7370, dt: 1261.44ms, fracRes: 0.6164, norm(attn): 0.0669, norm(output): 0.3125, norm(x): 0.5560, norm(y): 1.0026, norm:0.7494, tok/sec: 103906.90, flops:90.99, batch-reuse:1
@ 549 train 7.6979 , allloss: 7.7985, dt: 1277.46ms, fracRes: 0.5761, norm(attn): 0.0732, norm(output): 0.2793, norm(x): 0.4572, norm(y): 1.0024, norm:10.2203, tok/sec: 102603.35, flops:89.85, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7773, 0.2236, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6875, 0.1113, 0.2012, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3027, 0.2432, 0.1963, 0.2578, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4629, 0.0364, 0.1230, 0.3496, 0.0280, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3066, 0.1030, 0.1514, 0.2246, 0.0713, 0.1416, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4336, 0.0569, 0.0557, 0.2871, 0.0103, 0.1396, 0.0176, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0757, 0.2656, 0.0894, 0.0664, 0.1748, 0.1523, 0.1211, 0.0549, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1187, 0.0889, 0.0762, 0.1348, 0.0625, 0.0913, 0.1104, 0.2295, 0.0884, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0991, 0.1357, 0.0923, 0.0952, 0.0771, 0.1191, 0.0996, 0.0684, 0.0933, 0.1211, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1494, 0.0063, 0.0237, 0.0806, 0.0034, 0.0461, 0.0033, 0.5938, 0.0325, 0.0591, 0.0033, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0732, 0.0884, 0.0540, 0.1123, 0.0732, 0.1240, 0.1260, 0.0938, 0.0664, 0.0752, 0.0635, 0.0496, 0.0000, 0.0000, 0.0000],
        [0.0317, 0.1143, 0.1084, 0.0427, 0.1133, 0.0669, 0.1650, 0.0124, 0.0986, 0.0258, 0.1621, 0.0430, 0.0170, 0.0000, 0.0000],
        [0.0806, 0.0186, 0.0124, 0.0586, 0.0059, 0.0205, 0.0072, 0.3613, 0.0280, 0.0547, 0.0018, 0.0253, 0.3223, 0.0027, 0.0000],
        [0.0923, 0.0371, 0.0461, 0.0613, 0.0537, 0.0549, 0.0175, 0.1484, 0.0408, 0.0947, 0.0222, 0.0608, 0.2324, 0.0135, 0.0231]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0011, -0.0067, -0.0048,  ..., -0.0093,  0.0220, -0.0037],
        [-0.0344,  0.0119, -0.0084,  ..., -0.0089,  0.0086,  0.0295],
        [ 0.0030,  0.0221, -0.0236,  ..., -0.0021,  0.0116, -0.0176],
        ...,
        [-0.0053,  0.0020, -0.0007,  ...,  0.0005,  0.0176,  0.0167],
        [-0.0274,  0.0165, -0.0175,  ..., -0.0292, -0.0137,  0.0056],
        [-0.0206,  0.0133, -0.0082,  ..., -0.0116, -0.0069,  0.0157]], device='cuda:0', requires_grad=True)
K: tensor([ 0.7266,  0.2656, -0.9297,  0.6172, -0.0923,  0.3301,  0.5117,  0.6680,  0.3457,  0.3066,  0.7344, -0.2832, -1.1406,  0.1699, -0.0977, -0.8359, -0.2227,  0.1060, -0.1553,  0.5938,  0.7383,  0.2852,  0.7812, -0.7734,  0.3105,  1.0703, -0.3418, -0.2754,  1.3516, -0.1289, -0.2451, -0.1348,
        -0.2793, -0.9062,  0.5859,  0.7461, -1.1328, -0.3926, -0.4766, -1.3906,  0.2793, -0.2188, -0.5078,  1.5156, -0.3438,  0.4844, -0.0320,  0.8125, -0.2070, -0.5547,  0.2559, -0.8555, -0.8203,  0.5508,  0.4219,  0.0918,  0.0129,  0.2305,  1.2344, -0.1709,  0.1992,  0.1084, -0.0603,  0.2520],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0105,  0.0029,  0.0081,  ...,  0.0072, -0.0022,  0.0025],
        [ 0.0065, -0.0222, -0.0209,  ...,  0.0211,  0.0135, -0.0237],
        [-0.0326,  0.0560,  0.0354,  ..., -0.0314, -0.0175, -0.0076],
        ...,
        [ 0.0189,  0.0346,  0.0459,  ...,  0.0151,  0.0168,  0.0383],
        [ 0.0187, -0.0171,  0.0275,  ...,  0.0268,  0.0062,  0.0198],
        [-0.0010, -0.0268,  0.0128,  ..., -0.0277,  0.0089, -0.0141]], device='cuda:0', requires_grad=True)
Q: tensor([-0.3535,  0.0806, -0.0962, -1.0078,  0.5469, -0.2676, -0.2988, -0.4062, -0.9141, -0.0371, -0.7031,  0.0786,  0.2100, -1.1328,  0.0157,  0.0732,  0.0947,  0.1924, -0.4688,  0.2988, -0.2451,  0.4004, -0.4746,  0.6914, -0.6094, -0.5977,  0.2617, -0.4434, -0.7500, -0.0112, -0.0540,  0.0583,
         0.6641,  0.0461, -0.2539, -0.4609,  0.3926,  0.3223,  0.1650,  1.5703, -0.4707, -0.7695,  0.7148, -0.1348,  0.2539, -0.1768, -0.0050,  0.0197,  0.0933, -0.1416, -1.3125,  0.2129,  0.6484, -1.0703, -0.4258, -1.5703,  0.2539, -0.2734,  0.0820, -0.1953,  0.8594,  0.9297, -0.0114, -0.2402],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -1.2422,     -1.5156,     -0.1162,     -2.6719,     -0.6797,     -2.6562,      1.5625,     -0.9883,     -0.8008,     -3.9062,     -0.7656,      1.4453,     -2.9219,     -0.8867],
        [     0.0000,     -1.8203,     -1.2266,     -0.2520,     -2.0000,     -0.6562,     -2.6562,      1.2031,     -1.3906,     -0.3301,     -2.5312,     -0.0320,      1.1250,     -2.3594,     -1.2500],
        [     0.0000,     -0.2197,     -0.4316,     -0.1621,     -0.2422,     -0.2139,     -1.0469,      0.2715,     -0.6250,     -0.0393,     -1.0234,      0.3262,      0.1436,     -1.1406,     -0.5078],
        [     0.0000,     -2.5469,     -1.3203,     -0.2793,     -2.8125,     -1.4609,     -3.9219,      1.6250,     -1.6797,     -0.6406,     -3.3906,     -1.0781,      1.2266,     -3.3906,     -1.1797],
        [     0.0000,     -1.0938,     -0.7070,     -0.3145,     -1.4609,     -0.7734,     -1.1016,      0.5508,     -0.3301,     -0.5820,     -0.9297,     -0.3438,      0.1768,     -1.2109,     -0.1709],
        [     0.0000,     -2.0312,     -2.0469,     -0.4160,     -3.7500,     -1.1328,     -3.2031,      1.3203,     -1.8203,     -1.1250,     -4.1250,     -0.4355,      1.7891,     -4.1875,     -1.1641],
        [     0.0000,      1.2500,      0.1631,     -0.1309,      0.8320,      0.6953,      0.4668,     -0.3223,      0.7812,      0.1807,      0.7812,     -0.0608,     -0.8398,      1.2734,      0.7266],
        [     0.0000,     -0.2891,     -0.4473,      0.1260,     -0.6445,     -0.2656,     -0.0752,      0.6562,     -0.2949,     -0.1074,     -1.2812,     -0.7070,      0.4043,     -1.2109,     -0.1523],
        [     0.0000,      0.3105,     -0.0703,     -0.0417,     -0.2500,      0.1826,      0.0019,     -0.3750,     -0.0635,      0.1982,      0.3398,     -0.0354,     -0.0474,      0.1826,      0.4902],
        [     0.0000,     -3.1719,     -1.8438,     -0.6211,     -3.7969,     -1.1797,     -3.8281,      1.3750,     -1.5312,     -0.9297,     -3.7969,     -0.4805,      1.6250,     -3.6562,     -1.5469],
        [     0.0000,      0.1855,     -0.3105,      0.4219,     -0.0024,      0.5234,      0.5391,      0.2461,     -0.1001,      0.0223,     -0.1475,     -0.3945,      0.2871,     -0.2891,     -0.0004],
        [     0.0000,      1.2812,      1.2266,      0.2988,      1.2734,      0.7500,      1.6484,     -0.9375,      1.1328,     -0.2061,      1.6328,      0.3027,     -0.6289,      2.0781,      1.0078],
        [     0.0000,     -1.4688,     -1.8750,     -0.3203,     -2.6250,     -1.3750,     -2.4219,      1.4922,     -1.0625,     -0.3906,     -3.8125,     -1.1562,      1.3828,     -3.4219,     -1.2500],
        [     0.0000,     -0.9102,     -0.6914,     -0.4062,     -0.5391,     -0.5156,     -1.6641,      0.4785,     -0.8125,      0.0262,     -1.4219,     -0.4141,      0.9258,     -1.9219,     -1.3828]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7474],
        [0.7266],
        [0.2856],
        [0.4460],
        [0.2325],
        [0.4717],
        [0.0806],
        [0.1299],
        [0.1049],
        [0.1429],
        [0.0871],
        [0.0301],
        [0.0722],
        [0.0828]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9492,     0.0115,     0.0381,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9844,     0.0004,     0.0076,     0.0059,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7812,     0.0115,     0.0396,     0.0417,     0.1260,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8633,     0.0036,     0.0142,     0.0161,     0.0557,     0.0486,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3281,     0.0564,     0.1177,     0.1138,     0.1416,     0.1250,     0.1172,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6445,     0.0059,     0.0253,     0.0229,     0.1025,     0.0359,     0.1211,     0.0410,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6523,     0.0045,     0.0304,     0.0231,     0.0483,     0.0396,     0.1187,     0.0398,     0.0452,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6953,     0.0035,     0.0220,     0.0157,     0.0674,     0.0245,     0.0713,     0.0156,     0.0649,     0.0214,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0967,     0.1226,     0.0737,     0.1001,     0.1387,     0.0664,     0.0684,     0.0601,     0.0649,     0.0923,     0.1167,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1436,     0.0270,     0.0508,     0.0461,     0.0991,     0.0630,     0.1455,     0.0417,     0.0625,     0.0703,     0.1562,     0.0942,     0.0000,     0.0000,     0.0000],
        [    0.1768,     0.0128,     0.0334,     0.0356,     0.0552,     0.1006,     0.1289,     0.0527,     0.0400,     0.0635,     0.1216,     0.0752,     0.1030,     0.0000,     0.0000],
        [    0.1074,     0.0330,     0.0640,     0.0669,     0.0476,     0.0762,     0.0898,     0.0771,     0.0540,     0.0972,     0.0508,     0.0649,     0.1074,     0.0635,     0.0000],
        [    0.2676,     0.0074,     0.0262,     0.0198,     0.0391,     0.0315,     0.0879,     0.0155,     0.0410,     0.0259,     0.0859,     0.0544,     0.0986,     0.1631,     0.0366]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[     0.0251,     -0.0119,      0.0001,  ...,     -0.0083,     -0.0239,      0.0222],
        [     0.0004,      0.0157,      0.0008,  ...,      0.0153,     -0.0006,     -0.0365],
        [     0.0059,      0.0172,      0.0213,  ...,      0.0114,      0.0053,      0.0009],
        ...,
        [    -0.0090,      0.0298,      0.0146,  ...,      0.0417,     -0.0115,     -0.0042],
        [    -0.0160,     -0.0095,     -0.0180,  ...,     -0.0146,      0.0063,      0.0161],
        [     0.0205,      0.0305,      0.0114,  ...,      0.0081,     -0.0267,      0.0240]], device='cuda:0', requires_grad=True)
K: tensor([ 0.7305,  0.6641, -0.3203,  1.0156, -1.5938, -0.2002,  0.5156,  0.1709,  0.8203,  1.1484,  0.6992,  0.6914, -0.4531,  0.2031,  0.3105, -0.5820,  0.1562,  0.6797,  0.1050, -1.2500,  1.3359,  0.2197, -0.0615, -0.2988,  0.2949,  0.1816, -0.7578,  0.6875, -0.7578, -0.8086,  0.4082, -0.5078,
         0.0933,  1.0000, -0.3770, -0.7930,  0.8906,  0.1514, -0.0165,  1.0312,  1.4219, -0.9492, -1.1562,  0.1387,  0.7383,  0.2520,  0.1982, -1.7812,  0.3867, -0.5703,  0.7930,  0.4531, -0.5195, -0.4395,  0.9883, -0.8750,  0.1904, -0.1836, -0.0938,  1.2188,  0.1484,  0.7344,  0.5000,  0.2656],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0126, -0.0248, -0.0074,  ...,  0.0094,  0.0020, -0.0057],
        [ 0.0148,  0.0114, -0.0379,  ..., -0.0094, -0.0028, -0.0223],
        [ 0.0401,  0.0268,  0.0261,  ..., -0.0133,  0.0301,  0.0110],
        ...,
        [-0.0095, -0.0207,  0.0160,  ...,  0.0273, -0.0096, -0.0315],
        [ 0.0388,  0.0030, -0.0050,  ..., -0.0113,  0.0143,  0.0149],
        [ 0.0099, -0.0292, -0.0245,  ...,  0.0112, -0.0142,  0.0258]], device='cuda:0', requires_grad=True)
Q: tensor([-0.5078, -0.5859,  1.0391, -0.1621,  0.2500,  0.3496, -0.2676, -0.2031, -0.2520, -0.0187, -0.5938, -1.7812, -0.1621, -0.0757, -1.6484,  0.7461,  0.7383, -1.0859, -0.1621, -0.3203,  0.3770, -0.3398,  0.0674,  0.8984, -2.1094,  0.0640,  0.6406, -0.3828,  1.2344, -0.0295, -1.5547,  0.2217,
         0.1226, -1.1719,  1.2656,  1.2266,  0.0801,  0.3320, -0.1279, -0.0139,  0.0291, -0.0972,  0.7773, -0.4395, -0.6758,  0.3594,  0.0075,  0.8281,  0.6328,  0.0957,  0.0461, -0.6328, -0.3926, -0.0762, -0.5508,  0.7930, -0.5703,  0.0062,  0.0332, -0.6094,  0.1953, -0.2617, -1.3047, -0.6719],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,    -10.6875,     -6.7188,     -7.5625,     -5.0938,     -6.2500,     -4.1875,     -6.4688,     -4.5312,     -6.8125,     -2.8594,     -4.3438,     -2.3594,     -0.8125,     -4.8438],
        [     0.0000,     -4.4062,     -3.2188,     -3.2656,     -2.2812,     -2.0469,     -1.0938,     -2.9062,     -1.8828,     -2.9219,     -1.3984,     -1.7891,     -0.5078,     -0.1201,     -2.2344],
        [     0.0000,     -7.7812,     -4.8750,     -5.1250,     -3.7812,     -4.2500,     -2.6406,     -4.8438,     -3.8438,     -4.9062,     -2.4375,     -3.5781,     -1.7266,     -0.7852,     -3.5938],
        [     0.0000,     -4.2188,     -2.9844,     -2.9219,     -1.8281,     -2.6250,     -1.1797,     -2.4062,     -1.8672,     -1.8984,     -0.3223,     -1.5859,     -0.8359,     -0.0605,     -1.7266],
        [     0.0000,     -5.4688,     -4.0938,     -3.9844,     -2.7344,     -2.8750,     -2.1250,     -3.6094,     -2.8281,     -3.5781,     -2.0625,     -2.7812,     -1.3750,     -0.8633,     -2.7500],
        [     0.0000,     -1.7656,     -1.0234,     -1.0547,     -0.8359,     -0.9648,     -1.0312,     -1.0156,     -0.0825,     -0.9961,     -0.6562,     -0.1680,     -0.2793,      0.3223,     -1.1719],
        [     0.0000,     -4.6875,     -3.2344,     -3.3281,     -1.8359,     -2.8906,     -1.6719,     -2.7500,     -1.2578,     -2.6094,     -0.7227,     -1.6641,     -1.0859,      0.0022,     -1.7188],
        [     0.0000,     -4.9688,     -3.0625,     -3.3438,     -2.5938,     -2.7969,     -1.7031,     -2.7969,     -2.6719,     -3.0000,     -1.2500,     -1.9375,     -0.7617,     -0.7266,     -2.0156],
        [     0.0000,     -5.2812,     -3.4531,     -3.7812,     -2.3281,     -3.3438,     -2.2812,     -3.7969,     -2.3594,     -3.4844,     -1.1328,     -1.9688,     -1.3828,     -0.4219,     -2.5000],
        [     0.0000,      0.2344,     -0.2754,      0.0356,      0.3594,     -0.3730,     -0.3438,     -0.4766,     -0.4004,     -0.0481,      0.1865,     -0.0854,     -0.3613,     -0.1582,     -0.1348],
        [     0.0000,     -1.6719,     -1.0391,     -1.1328,     -0.3711,     -0.8203,      0.0105,     -1.2344,     -0.8320,     -0.7109,      0.0854,     -0.4238,      0.2598,     -0.2539,     -0.9922],
        [     0.0000,     -2.6250,     -1.6719,     -1.6016,     -1.1641,     -0.5625,     -0.3145,     -1.2109,     -1.4844,     -1.0234,     -0.3750,     -0.8555,     -0.5391,     -0.5938,     -0.6719],
        [     0.0000,     -1.1797,     -0.5156,     -0.4727,     -0.8125,     -0.3398,     -0.1777,     -0.3320,     -0.6875,     -0.1006,     -0.7500,     -0.5039,      0.0004,     -0.5234,     -0.2500],
        [     0.0000,     -3.5938,     -2.3281,     -2.6094,     -1.9219,     -2.1406,     -1.1094,     -2.8438,     -1.8750,     -2.3438,     -1.1328,     -1.5938,     -0.9961,     -0.4941,     -1.9844]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [1.0000],
        [0.9105],
        [0.9661],
        [0.6937],
        [0.8206],
        [0.3319],
        [0.5288],
        [0.5659],
        [0.4969],
        [0.1501],
        [0.1883],
        [0.1994],
        [0.1182],
        [0.2432]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0023,     0.0069,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0011,     0.0052,     0.0050,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0002,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9766,     0.0009,     0.0070,     0.0077,     0.0009,     0.0074,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0005,     0.0003,     0.0000,     0.0007,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9766,     0.0014,     0.0049,     0.0035,     0.0012,     0.0090,     0.0003,     0.0024,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9844,     0.0005,     0.0035,     0.0044,     0.0005,     0.0046,     0.0001,     0.0011,     0.0014,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0004,     0.0004,     0.0000,     0.0007,     0.0000,     0.0001,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0005,     0.0036,     0.0027,     0.0003,     0.0033,     0.0001,     0.0008,     0.0010,     0.0001,     0.0013,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0001,     0.0008,     0.0005,     0.0001,     0.0013,     0.0000,     0.0001,     0.0002,     0.0000,     0.0012,     0.0001,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0001,     0.0006,     0.0006,     0.0000,     0.0007,     0.0000,     0.0001,     0.0001,     0.0000,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0003,     0.0004,     0.0000,     0.0005,     0.0000,     0.0000,     0.0001,     0.0000,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0002,     0.0001,     0.0000,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0106,  0.0112,  0.0146,  ..., -0.0056,  0.0069, -0.0187],
        [ 0.0282, -0.0432, -0.0327,  ...,  0.0095, -0.0014, -0.0350],
        [ 0.0392, -0.0347,  0.0293,  ..., -0.0016, -0.0032,  0.0025],
        ...,
        [ 0.0377,  0.0015, -0.0287,  ..., -0.0127,  0.0058,  0.0223],
        [ 0.0064,  0.0308, -0.0170,  ..., -0.0080, -0.0226, -0.0259],
        [ 0.0193, -0.0012,  0.0094,  ...,  0.0168, -0.0036,  0.0141]], device='cuda:0', requires_grad=True)
K: tensor([-0.6211, -1.7500, -1.8203, -1.2891, -1.0234,  2.0938, -1.6328,  1.1875, -1.4141, -1.2734,  1.1719, -1.2266, -1.7812, -2.0156, -1.1094,  0.9727,  0.8945,  1.1562, -2.4688,  1.2109,  1.0312,  0.6250, -1.3750, -2.4375,  1.5312,  0.8750, -0.9219, -2.0312,  0.7539,  1.1484,  1.8281,  1.3672,
        -1.0938,  0.7812,  1.0781, -1.3281, -0.4570, -1.0547,  2.0625,  1.9375, -0.6094, -1.7734, -1.5469,  0.7461,  0.3926,  1.3594, -2.3750, -2.4688,  1.7422,  0.4648, -1.3359, -2.0469,  2.0156,  1.8203,  1.5547, -1.5234, -0.7305, -0.0708, -1.5312, -1.5312, -2.0938, -0.9141,  1.8125,  1.3984],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0164,  0.0118,  0.0333,  ..., -0.0216,  0.0306,  0.0038],
        [ 0.0091,  0.0334,  0.0103,  ...,  0.0151,  0.0119, -0.0127],
        [-0.0089, -0.0009,  0.0196,  ..., -0.0212,  0.0388, -0.0090],
        ...,
        [-0.0140, -0.0107,  0.0128,  ..., -0.0254,  0.0062, -0.0068],
        [ 0.0173, -0.0185,  0.0191,  ...,  0.0303,  0.0055, -0.0023],
        [ 0.0337, -0.0298, -0.0188,  ...,  0.0183,  0.0216,  0.0136]], device='cuda:0', requires_grad=True)
Q: tensor([ 1.1719,  1.8594,  1.2031,  1.0000,  1.0938, -0.3867,  2.2344, -1.4453,  1.2266,  0.6641, -0.6875,  1.3750,  0.8906,  1.7969,  1.4062, -0.1177, -0.0762, -0.7109,  1.5938, -1.1406, -1.3984, -0.5469,  1.0625,  1.1328, -0.9648, -0.9648,  0.6289,  0.9258, -1.2344, -1.0469, -1.5234, -0.9844,
         0.2002, -1.0078, -1.5000,  1.7812,  2.3438,  0.8281, -1.7344, -0.2656, -0.5469,  1.4297,  1.5078, -0.4238, -1.0312, -0.9062,  2.0469,  0.8594, -1.5234, -1.1875,  1.0859,  1.5625, -1.8047, -1.1250, -0.5273,  0.9336,  0.2129,  0.7070,  2.1250,  1.6250,  2.3438,  0.9688, -1.0859, -1.2031],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000, -10.4375,  -7.4688,  -7.7812, -10.6250,  -7.2188, -12.2500,  -9.8750,  -9.1875, -12.6875,  -7.9375, -10.0000, -11.6875, -11.9375, -12.0000],
        [  0.0000,  -6.0625,  -4.9688,  -4.4062,  -6.4688,  -4.5000,  -7.1875,  -5.5938,  -5.1562,  -7.2500,  -4.9688,  -5.9688,  -6.8125,  -7.1875,  -7.1562],
        [  0.0000,  -6.8125,  -5.2500,  -5.2812,  -6.9062,  -5.2188,  -7.9688,  -6.3438,  -5.9688,  -8.4375,  -5.2188,  -7.0000,  -8.1875,  -8.0625,  -8.2500],
        [  0.0000, -11.5000,  -8.5000,  -8.3125, -11.6250,  -8.3750, -13.2500, -10.5625,  -9.7500, -14.0625,  -8.5625, -10.8750, -13.0000, -12.9375, -13.4375],
        [  0.0000,  -7.0000,  -4.9375,  -4.8438,  -7.0000,  -4.8750,  -8.1875,  -6.4688,  -5.8438,  -8.5000,  -5.2812,  -6.7500,  -7.2500,  -7.5000,  -7.8125],
        [  0.0000, -10.0625,  -7.6875,  -8.0625, -10.5000,  -7.2812, -12.1875,  -9.8125,  -9.1875, -12.8750,  -7.8438, -10.3125, -12.5000, -12.1250, -12.0625],
        [  0.0000,  -6.5625,  -5.2812,  -5.6250,  -6.6875,  -4.6875,  -8.1250,  -6.0000,  -6.0312,  -8.6250,  -5.1875,  -6.9375,  -8.1250,  -8.1875,  -7.6562],
        [  0.0000,  -7.5938,  -5.6562,  -5.4062,  -7.6562,  -5.3750,  -9.0625,  -6.8125,  -6.5625,  -9.5625,  -5.5000,  -7.7500,  -8.9375,  -8.7500,  -8.6250],
        [  0.0000, -10.2500,  -7.9062,  -7.9062, -10.5000,  -7.2188, -12.1875,  -9.5625,  -9.0625, -13.1875,  -7.6250, -10.2500, -11.8750, -11.8750, -12.0000],
        [  0.0000,  -7.6562,  -5.6250,  -5.9062,  -8.1875,  -5.7188,  -9.2500,  -7.0938,  -6.9062,  -9.5625,  -6.5938,  -7.8750,  -8.6250,  -9.0625,  -9.1250],
        [  0.0000,  -9.3750,  -7.1562,  -7.5938,  -9.6875,  -6.6562, -11.1875,  -8.8750,  -8.6875, -12.1250,  -6.7500,  -9.8750, -11.3750, -11.2500, -11.0625],
        [  0.0000,  -9.5625,  -7.4375,  -7.5000, -10.1875,  -7.2500, -11.9375,  -9.2500,  -8.8125, -12.6250,  -7.6250, -10.2500, -11.5625, -11.8125, -11.5625],
        [  0.0000, -10.6875,  -7.9688,  -7.8438, -10.6875,  -7.6562, -12.6875, -10.0000,  -9.0625, -13.4375,  -8.0000, -10.8125, -12.3125, -12.4375, -12.5000],
        [  0.0000, -11.0625,  -8.3750,  -8.8125, -11.6875,  -7.6250, -13.5000, -10.8125, -10.0625, -14.3750,  -8.5000, -11.5000, -13.1875, -13.1250, -13.1875]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [1.0000],
        [0.9824],
        [0.9912],
        [0.9987],
        [0.9896],
        [1.0000],
        [0.9863],
        [0.9948],
        [1.0000],
        [0.9854],
        [0.9967],
        [0.9993],
        [1.0000],
        [1.0000]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2266, 0.7734, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0991, 0.4180, 0.4824, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0669, 0.2852, 0.3223, 0.3262, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0645, 0.2246, 0.2490, 0.2490, 0.2139, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0549, 0.1836, 0.2041, 0.2021, 0.1719, 0.1836, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0476, 0.1572, 0.1729, 0.1719, 0.1484, 0.1582, 0.1445, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0289, 0.1318, 0.1504, 0.1533, 0.1260, 0.1367, 0.1196, 0.1543, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0352, 0.1162, 0.1309, 0.1289, 0.1099, 0.1182, 0.1064, 0.1328, 0.1211, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0280, 0.1040, 0.1172, 0.1177, 0.0991, 0.1064, 0.0957, 0.1196, 0.1089, 0.1040, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0244, 0.0967, 0.1060, 0.1079, 0.0884, 0.0962, 0.0874, 0.1079, 0.0991, 0.0928, 0.0938, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0198, 0.0850, 0.0962, 0.0972, 0.0806, 0.0874, 0.0776, 0.0986, 0.0894, 0.0859, 0.0869, 0.0957, 0.0000, 0.0000, 0.0000],
        [0.0179, 0.0776, 0.0879, 0.0889, 0.0732, 0.0801, 0.0708, 0.0894, 0.0815, 0.0786, 0.0786, 0.0869, 0.0884, 0.0000, 0.0000],
        [0.0209, 0.0728, 0.0820, 0.0806, 0.0684, 0.0737, 0.0659, 0.0820, 0.0762, 0.0718, 0.0718, 0.0791, 0.0811, 0.0728, 0.0000],
        [0.0183, 0.0679, 0.0762, 0.0762, 0.0640, 0.0688, 0.0620, 0.0767, 0.0708, 0.0674, 0.0674, 0.0747, 0.0757, 0.0669, 0.0679]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0126,  0.0191,  0.0036,  ..., -0.0255,  0.0043, -0.0531],
        [-0.0195, -0.0168, -0.0216,  ..., -0.0051,  0.0174,  0.0008],
        [-0.0307, -0.0151,  0.0381,  ..., -0.0259, -0.0239, -0.0284],
        ...,
        [-0.0001, -0.0281, -0.0020,  ..., -0.0246, -0.0175, -0.0392],
        [-0.0191, -0.0409, -0.0175,  ..., -0.0174, -0.0134,  0.0125],
        [-0.0178,  0.0200,  0.0267,  ..., -0.0240, -0.0151, -0.0063]], device='cuda:0', requires_grad=True)
K: tensor([ 0.2500,  0.4785, -0.3828, -1.4141, -1.0859, -0.2812, -0.7383,  0.3828, -0.5000, -1.3203,  0.3281, -1.1797, -0.0640, -0.0854,  0.6641, -0.6641,  0.3711,  0.0527,  0.2285,  0.5586,  0.3516, -0.6289, -1.1250,  1.2891,  0.2256, -0.1855, -0.0483,  0.9141, -0.2393,  0.1021, -1.3125,  0.9141,
        -0.9453, -0.5234,  1.3203,  0.3516, -0.7969,  0.0698, -0.2158,  1.1172,  0.2734,  0.1924,  0.6875,  0.1729, -0.0757, -0.1934, -0.9648, -0.2559,  0.7344,  1.4844,  0.3945, -0.9375, -0.2246, -0.6953,  0.6914,  0.1611, -0.6250, -0.0270,  0.0082, -0.0962, -0.6758,  0.6016, -0.7344,  0.6211],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0169,  0.0027,  0.0146,  ...,  0.0299, -0.0152, -0.0240],
        [ 0.0216, -0.0232,  0.0200,  ..., -0.0138, -0.0059,  0.0322],
        [-0.0237,  0.0127,  0.0414,  ...,  0.0208,  0.0249, -0.0044],
        ...,
        [ 0.0057,  0.0032, -0.0369,  ..., -0.0068, -0.0074,  0.0093],
        [-0.0023,  0.0303, -0.0151,  ...,  0.0276,  0.0117, -0.0205],
        [-0.0095,  0.0026, -0.0093,  ...,  0.0028,  0.0030, -0.0115]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.3379,  0.9141, -0.4863, -0.2295, -1.0781,  0.5430,  0.5391,  0.2129,  0.0527, -0.0118,  1.1953,  0.2559,  0.7461, -0.2559,  0.3262,  0.2949,  0.0067,  0.8203,  0.0618,  1.1172,  0.6094, -0.4980, -0.6914,  1.1641, -0.3027,  0.1729, -0.1641, -0.1992, -0.6602, -0.1201, -1.4453,  0.5195,
        -0.3613,  0.1670,  0.9570,  0.0242, -0.3457, -0.2539,  0.1836,  0.9297, -0.1523,  0.2012,  0.5820,  0.4980, -0.6445,  0.7070,  0.6914, -0.6797,  0.1768, -0.0596, -1.0781,  0.0496,  0.5859, -0.0874, -0.6133, -0.0152,  0.3438, -0.4922, -0.4199, -0.2441, -1.8359,  0.9414,  0.9297,  0.3926],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 1.2266, 1.3516, 1.3359, 1.1719, 1.2422, 1.1328, 1.3516, 1.2656, 1.2109, 1.2188, 1.3281, 1.3359, 1.2109, 1.2266],
        [0.0000, 1.4375, 1.5781, 1.6016, 1.3984, 1.4844, 1.3438, 1.6016, 1.5000, 1.4609, 1.4688, 1.5625, 1.5781, 1.4219, 1.4609],
        [0.0000, 1.4453, 1.5703, 1.5859, 1.3906, 1.4766, 1.3594, 1.5781, 1.4922, 1.4375, 1.4688, 1.5547, 1.5625, 1.4453, 1.4531],
        [0.0000, 1.2500, 1.3516, 1.3516, 1.1953, 1.2578, 1.1719, 1.3438, 1.2812, 1.2109, 1.2344, 1.3203, 1.3281, 1.2500, 1.2344],
        [0.0000, 1.2031, 1.3125, 1.3047, 1.1406, 1.2031, 1.1172, 1.3125, 1.2422, 1.1797, 1.1641, 1.2812, 1.2969, 1.2031, 1.1953],
        [0.0000, 1.1953, 1.2891, 1.2812, 1.1328, 1.2031, 1.1016, 1.2969, 1.2266, 1.1719, 1.1719, 1.2656, 1.2812, 1.1875, 1.1875],
        [0.0000, 1.5156, 1.6484, 1.6641, 1.4688, 1.5469, 1.4141, 1.6719, 1.5703, 1.5312, 1.5391, 1.6328, 1.6484, 1.5078, 1.5312],
        [0.0000, 1.1953, 1.3125, 1.2969, 1.1406, 1.2109, 1.1094, 1.3281, 1.2344, 1.1875, 1.1797, 1.2969, 1.3047, 1.1953, 1.1953],
        [0.0000, 1.3125, 1.4375, 1.4375, 1.2656, 1.3359, 1.2344, 1.4531, 1.3594, 1.3125, 1.3203, 1.4219, 1.4375, 1.3125, 1.3203],
        [0.0000, 1.3750, 1.4688, 1.4844, 1.2891, 1.3672, 1.2812, 1.4844, 1.3984, 1.3359, 1.3438, 1.4531, 1.4688, 1.3516, 1.3516],
        [0.0000, 1.4609, 1.5859, 1.5938, 1.4062, 1.4844, 1.3750, 1.6094, 1.5156, 1.4688, 1.4766, 1.5781, 1.5859, 1.4531, 1.4766],
        [0.0000, 1.4609, 1.5859, 1.5938, 1.4062, 1.4922, 1.3672, 1.6016, 1.5156, 1.4688, 1.4766, 1.5781, 1.5859, 1.4609, 1.4766],
        [0.0000, 1.2422, 1.3672, 1.3516, 1.1875, 1.2656, 1.1562, 1.3672, 1.2969, 1.2344, 1.2344, 1.3359, 1.3516, 1.2500, 1.2500],
        [0.0000, 1.3125, 1.4297, 1.4219, 1.2578, 1.3281, 1.2188, 1.4297, 1.3516, 1.3047, 1.3047, 1.4062, 1.4219, 1.2969, 1.3125]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2958],
        [0.1394],
        [0.0958],
        [0.1000],
        [0.0799],
        [0.0685],
        [0.0415],
        [0.0494],
        [0.0397],
        [0.0388],
        [0.0295],
        [0.0265],
        [0.0325],
        [0.0271]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0703, 0.9297, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0201, 0.3164, 0.6641, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0134, 0.1875, 0.3926, 0.4082, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0124, 0.1475, 0.2871, 0.2969, 0.2559, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0097, 0.1152, 0.2295, 0.2373, 0.2041, 0.2051, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0076, 0.0923, 0.1865, 0.1943, 0.1680, 0.1689, 0.1826, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0057, 0.0708, 0.1543, 0.1621, 0.1377, 0.1396, 0.1523, 0.1768, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0061, 0.0659, 0.1348, 0.1396, 0.1206, 0.1216, 0.1328, 0.1504, 0.1289, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0052, 0.0569, 0.1182, 0.1230, 0.1060, 0.1069, 0.1167, 0.1338, 0.1133, 0.1201, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0043, 0.0493, 0.1045, 0.1094, 0.0938, 0.0947, 0.1035, 0.1187, 0.1006, 0.1069, 0.1147, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0040, 0.0437, 0.0933, 0.0977, 0.0840, 0.0850, 0.0928, 0.1069, 0.0908, 0.0962, 0.1035, 0.1030, 0.0000, 0.0000, 0.0000],
        [0.0038, 0.0403, 0.0845, 0.0889, 0.0762, 0.0771, 0.0845, 0.0967, 0.0820, 0.0874, 0.0938, 0.0938, 0.0913, 0.0000, 0.0000],
        [0.0022, 0.0339, 0.0752, 0.0801, 0.0679, 0.0693, 0.0752, 0.0874, 0.0742, 0.0786, 0.0850, 0.0845, 0.0825, 0.1040, 0.0000],
        [0.0033, 0.0339, 0.0703, 0.0737, 0.0635, 0.0640, 0.0698, 0.0801, 0.0684, 0.0723, 0.0776, 0.0776, 0.0757, 0.0967, 0.0737]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0352, -0.0189, -0.0011,  ..., -0.0164,  0.0053, -0.0082],
        [ 0.0039, -0.0334, -0.0014,  ..., -0.0013,  0.0183,  0.0016],
        [-0.0228,  0.0140, -0.0262,  ..., -0.0060, -0.0209,  0.0051],
        ...,
        [ 0.0371, -0.0004, -0.0338,  ...,  0.0041, -0.0163,  0.0216],
        [-0.0144,  0.0068,  0.0072,  ...,  0.0346, -0.0264,  0.0112],
        [-0.0359, -0.0032, -0.0318,  ...,  0.0180,  0.0299,  0.0272]], device='cuda:0', requires_grad=True)
K: tensor([    -0.4434,     -1.2500,      0.2832,     -1.3359,      0.1904,      0.2578,      2.1875,      0.4707,      1.6562,     -0.9922,     -1.3359,      0.9023,     -0.3945,      0.3691,      0.8594,     -0.1289,     -0.5234,      0.5039,      0.7383,     -0.7812,     -2.2656,      0.6211,
            -0.8984,      0.0165,      0.9766,      1.5078,      1.2969,     -0.4863,      1.1641,     -0.4102,      0.5586,      0.0205,      1.4297,     -1.5078,      0.0771,      1.2969,     -2.4219,      1.0000,     -1.0469,      0.2012,      0.5234,      0.0016,      0.1079,     -0.0942,
             1.3594,     -1.7578,     -0.1436,     -0.4941,      0.3594,      1.0312,      1.1094,     -1.6641,      0.8398,      0.5781,     -0.0525,      0.7383,      0.2617,      0.3086,     -0.6953,      2.0625,     -1.0625,     -1.8984,      1.2656,     -0.2871], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[-0.0090, -0.0272,  0.0013,  ..., -0.0078, -0.0061, -0.0102],
        [ 0.0055, -0.0086,  0.0038,  ...,  0.0180, -0.0277,  0.0297],
        [ 0.0228, -0.0176,  0.0031,  ...,  0.0036, -0.0252, -0.0104],
        ...,
        [ 0.0017, -0.0312, -0.0161,  ...,  0.0232,  0.0089, -0.0053],
        [ 0.0074, -0.0056,  0.0178,  ...,  0.0121,  0.0333,  0.0081],
        [ 0.0038, -0.0125, -0.0053,  ...,  0.0211, -0.0134, -0.0347]], device='cuda:0', requires_grad=True)
Q: tensor([ 1.1797, -0.6758, -0.4844, -0.7891, -0.6758, -0.1719,  0.2656, -0.7383,  0.7109, -0.5742,  0.7969,  0.0033,  0.8320, -0.0806, -0.2930, -0.3516, -1.3828,  0.4688,  1.4219, -0.8320, -1.2734,  0.3301, -0.4766, -0.0327,  0.1543,  0.1221,  1.4531, -2.6094,  0.8984, -0.0260, -0.2012, -0.0938,
         1.5938, -1.3203, -0.2812,  0.8359, -0.3359,  1.3672,  0.0767,  0.1758, -0.8125,  0.3281,  0.5820, -0.3262,  0.2637, -0.4043, -0.5625, -0.1069, -1.7969, -0.3906, -0.3965, -0.5781,  0.9180,  0.9531,  1.2812,  0.6758, -0.5547,  1.6641,  0.0605, -0.0527, -1.1953, -0.9336,  0.2217,  0.9141],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 2.5781, 3.1250, 3.1406, 3.0000, 2.9844, 3.0469, 3.1250, 2.9844, 3.0312, 3.0938, 3.0625, 3.0469, 3.2969, 3.0156],
        [0.0000, 2.7500, 3.5000, 3.5312, 3.3750, 3.3750, 3.4688, 3.5938, 3.4219, 3.4844, 3.5625, 3.5469, 3.5156, 3.7656, 3.4844],
        [0.0000, 2.6406, 3.3750, 3.4219, 3.2656, 3.2656, 3.3438, 3.4844, 3.3125, 3.3750, 3.4531, 3.4375, 3.4062, 3.6719, 3.3906],
        [0.0000, 2.4688, 3.1406, 3.1719, 3.0312, 3.0312, 3.1094, 3.2188, 3.0625, 3.1250, 3.1875, 3.1719, 3.1562, 3.4219, 3.1250],
        [0.0000, 2.4688, 3.1562, 3.1875, 3.0469, 3.0469, 3.1250, 3.2500, 3.0938, 3.1406, 3.2188, 3.2031, 3.1875, 3.4375, 3.1562],
        [0.0000, 2.5000, 3.1875, 3.2344, 3.0938, 3.0938, 3.1719, 3.2969, 3.1406, 3.2031, 3.2656, 3.2656, 3.2344, 3.4844, 3.2188],
        [0.0000, 2.5156, 3.2969, 3.3438, 3.1875, 3.2031, 3.2969, 3.4375, 3.2656, 3.3281, 3.4062, 3.3906, 3.3750, 3.6250, 3.3438],
        [0.0000, 2.3750, 3.0938, 3.1406, 2.9844, 3.0000, 3.0781, 3.2031, 3.0469, 3.1094, 3.1719, 3.1719, 3.1406, 3.3906, 3.1250],
        [0.0000, 2.3906, 3.1250, 3.1562, 3.0156, 3.0156, 3.1094, 3.2344, 3.0781, 3.1406, 3.2031, 3.2031, 3.1875, 3.4219, 3.1562],
        [0.0000, 2.4375, 3.1875, 3.2344, 3.0781, 3.0938, 3.1719, 3.3125, 3.1562, 3.2031, 3.2812, 3.2812, 3.2500, 3.5000, 3.2344],
        [0.0000, 2.3906, 3.1562, 3.2031, 3.0469, 3.0625, 3.1406, 3.2812, 3.1250, 3.1875, 3.2500, 3.2500, 3.2344, 3.4688, 3.2031],
        [0.0000, 2.3594, 3.1094, 3.1562, 3.0000, 3.0156, 3.0938, 3.2344, 3.0781, 3.1406, 3.2031, 3.2031, 3.1875, 3.4219, 3.1562],
        [0.0000, 2.7031, 3.5156, 3.5781, 3.4062, 3.4219, 3.5156, 3.6562, 3.5000, 3.5469, 3.6250, 3.6250, 3.6094, 3.8281, 3.5781],
        [0.0000, 2.3281, 3.0625, 3.1094, 2.9531, 2.9688, 3.0625, 3.1875, 3.0312, 3.0938, 3.1562, 3.1562, 3.1406, 3.3750, 3.1094]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0947],
        [0.0445],
        [0.0392],
        [0.0344],
        [0.0304],
        [0.0255],
        [0.0257],
        [0.0238],
        [0.0229],
        [0.0202],
        [0.0202],
        [0.0194],
        [0.0117],
        [0.0166]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.0598,:0.0601,:0.0601,:0.0601,:0.0601,:0.0598,:0.0535,:0.0601)
,
------
		(,:0.0601,:0.0601,:0.0601,:0.0601,:0.0598,:0.0535,:0.0601,:0.0583)
,,,,,,,,,,,,,,,
@ 550 train 7.6292 , allloss: 7.7020, dt: 1717.48ms, fracRes: 0.5968, norm(attn): 0.0698, norm(output): 0.3242, norm(x): 0.5900, norm(y): 1.0025, norm:1.0613, tok/sec: 76316.58, flops:66.83, batch-reuse:1
@ 551 train 7.6119 , allloss: 7.6974, dt: 1259.92ms, fracRes: 0.5747, norm(attn): 0.0752, norm(output): 0.3320, norm(x): 0.5859, norm(y): 1.0025, norm:1.5560, tok/sec: 104032.05, flops:91.10, batch-reuse:1
@ 552 train 7.4876 , allloss: 7.6600, dt: 1291.55ms, fracRes: 0.5180, norm(attn): 0.0864, norm(output): 0.3086, norm(x): 0.4534, norm(y): 1.0023, norm:3.1465, tok/sec: 101483.89, flops:88.87, batch-reuse:1
@ 553 train 7.6010 , allloss: 7.8096, dt: 1258.80ms, fracRes: 0.4693, norm(attn): 0.0854, norm(output): 0.3418, norm(x): 0.4510, norm(y): 1.0025, norm:1.0819, tok/sec: 104124.58, flops:91.18, batch-reuse:1
@ 554 train 7.5736 , allloss: 7.8448, dt: 1262.99ms, fracRes: 0.4629, norm(attn): 0.0776, norm(output): 0.3438, norm(x): 0.4438, norm(y): 1.0024, norm:1.2428, tok/sec: 103778.85, flops:90.88, batch-reuse:1
@ 555 train 7.5097 , allloss: 7.9417, dt: 1282.79ms, fracRes: 0.4680, norm(attn): 0.0801, norm(output): 0.3418, norm(x): 0.4418, norm(y): 1.0024, norm:1.5174, tok/sec: 102177.21, flops:89.48, batch-reuse:1
@ 556 train 7.4727 , allloss: 7.7934, dt: 1281.23ms, fracRes: 0.4826, norm(attn): 0.0786, norm(output): 0.3438, norm(x): 0.4556, norm(y): 1.0024, norm:1.2813, tok/sec: 102301.85, flops:89.58, batch-reuse:1
@ 557 train 7.5240 , allloss: 7.7094, dt: 1316.57ms, fracRes: 0.4969, norm(attn): 0.0786, norm(output): 0.3438, norm(x): 0.4664, norm(y): 1.0025, norm:0.8764, tok/sec: 99555.44, flops:87.18, batch-reuse:1
@ 558 train 7.6117 , allloss: 7.7384, dt: 1321.01ms, fracRes: 0.5019, norm(attn): 0.0791, norm(output): 0.3418, norm(x): 0.4715, norm(y): 1.0025, norm:0.8044, tok/sec: 99220.93, flops:86.89, batch-reuse:1
@ 559 train 7.7357 , allloss: 7.8619, dt: 1291.24ms, fracRes: 0.4962, norm(attn): 0.0781, norm(output): 0.3242, norm(x): 0.4538, norm(y): 1.0024, norm:2.4143, tok/sec: 101508.97, flops:88.89, batch-reuse:1
@ 560 train 7.6709 , allloss: 7.7795, dt: 1275.90ms, fracRes: 0.4908, norm(attn): 0.0693, norm(output): 0.3438, norm(x): 0.4700, norm(y): 1.0025, norm:2.2399, tok/sec: 102729.33, flops:89.96, batch-reuse:1
@ 561 train 7.7307 , allloss: 7.8477, dt: 1272.36ms, fracRes: 0.4867, norm(attn): 0.0703, norm(output): 0.3418, norm(x): 0.4647, norm(y): 1.0025, norm:1.6507, tok/sec: 103015.11, flops:90.21, batch-reuse:1
@ 562 train 7.7675 , allloss: 7.9733, dt: 1272.01ms, fracRes: 0.4802, norm(attn): 0.0732, norm(output): 0.3223, norm(x): 0.4399, norm(y): 1.0022, norm:9.6560, tok/sec: 103043.61, flops:90.23, batch-reuse:1
@ 563 train 7.7906 , allloss: 7.9470, dt: 1285.00ms, fracRes: 0.4812, norm(attn): 0.0757, norm(output): 0.3398, norm(x): 0.4558, norm(y): 1.0023, norm:5.7531, tok/sec: 102001.59, flops:89.32, batch-reuse:1
@ 564 train 7.5674 , allloss: 7.6755, dt: 1280.11ms, fracRes: 0.4932, norm(attn): 0.0781, norm(output): 0.3652, norm(x): 0.4957, norm(y): 1.0025, norm:1.4575, tok/sec: 102391.02, flops:89.66, batch-reuse:1
@ 565 train 7.4615 , allloss: 7.5615, dt: 1245.43ms, fracRes: 0.5297, norm(attn): 0.0703, norm(output): 0.3730, norm(x): 0.5423, norm(y): 1.0026, norm:1.7255, tok/sec: 105242.51, flops:92.16, batch-reuse:1
@ 566 train 7.6276 , allloss: 7.7217, dt: 1255.02ms, fracRes: 0.5273, norm(attn): 0.0674, norm(output): 0.3750, norm(x): 0.5430, norm(y): 1.0026, norm:1.2535, tok/sec: 104437.99, flops:91.45, batch-reuse:1
@ 567 train 7.6079 , allloss: 7.6902, dt: 1264.87ms, fracRes: 0.4912, norm(attn): 0.0708, norm(output): 0.3730, norm(x): 0.5099, norm(y): 1.0025, norm:0.6546, tok/sec: 103625.10, flops:90.74, batch-reuse:1
@ 568 train 7.6759 , allloss: 7.7498, dt: 1270.84ms, fracRes: 0.4967, norm(attn): 0.0752, norm(output): 0.3730, norm(x): 0.5159, norm(y): 1.0025, norm:1.7142, tok/sec: 103137.82, flops:90.32, batch-reuse:1
@ 569 train 7.5995 , allloss: 7.6653, dt: 1309.20ms, fracRes: 0.5040, norm(attn): 0.0762, norm(output): 0.3750, norm(x): 0.5312, norm(y): 1.0025, norm:1.1564, tok/sec: 100115.73, flops:87.67, batch-reuse:1
@ 570 train 7.5990 , allloss: 7.6598, dt: 1287.69ms, fracRes: 0.5059, norm(attn): 0.0723, norm(output): 0.3809, norm(x): 0.5475, norm(y): 1.0026, norm:0.7234, tok/sec: 101788.46, flops:89.13, batch-reuse:1
@ 571 train 7.5648 , allloss: 7.6202, dt: 1272.30ms, fracRes: 0.5077, norm(attn): 0.0708, norm(output): 0.3887, norm(x): 0.5595, norm(y): 1.0026, norm:0.9973, tok/sec: 103019.42, flops:90.21, batch-reuse:1
@ 572 train 7.5260 , allloss: 7.5781, dt: 1269.23ms, fracRes: 0.5077, norm(attn): 0.0742, norm(output): 0.3945, norm(x): 0.5640, norm(y): 1.0026, norm:0.6705, tok/sec: 103269.09, flops:90.43, batch-reuse:1
@ 573 train 7.5335 , allloss: 7.5871, dt: 1293.78ms, fracRes: 0.4984, norm(attn): 0.0742, norm(output): 0.3867, norm(x): 0.5517, norm(y): 1.0026, norm:0.6234, tok/sec: 101309.15, flops:88.71, batch-reuse:1
@ 574 train 7.5539 , allloss: 7.6278, dt: 1273.30ms, fracRes: 0.4704, norm(attn): 0.0698, norm(output): 0.3848, norm(x): 0.5282, norm(y): 1.0025, norm:1.3178, tok/sec: 102938.75, flops:90.14, batch-reuse:1
@ 575 train 7.4855 , allloss: 7.5545, dt: 1265.39ms, fracRes: 0.4804, norm(attn): 0.0703, norm(output): 0.3848, norm(x): 0.5373, norm(y): 1.0025, norm:0.5708, tok/sec: 103582.20, flops:90.71, batch-reuse:1
@ 576 train 7.4344 , allloss: 7.4919, dt: 1284.58ms, fracRes: 0.4949, norm(attn): 0.0703, norm(output): 0.3867, norm(x): 0.5514, norm(y): 1.0026, norm:0.6795, tok/sec: 102034.60, flops:89.35, batch-reuse:1
@ 577 train 7.5672 , allloss: 7.6294, dt: 1252.70ms, fracRes: 0.4851, norm(attn): 0.0669, norm(output): 0.3848, norm(x): 0.5434, norm(y): 1.0026, norm:1.1357, tok/sec: 104631.99, flops:91.62, batch-reuse:1
@ 578 train 7.5009 , allloss: 7.5528, dt: 1281.58ms, fracRes: 0.4998, norm(attn): 0.0713, norm(output): 0.3848, norm(x): 0.5492, norm(y): 1.0026, norm:0.7986, tok/sec: 102273.97, flops:89.56, batch-reuse:1
@ 579 train 7.4984 , allloss: 7.5574, dt: 1269.60ms, fracRes: 0.4812, norm(attn): 0.0698, norm(output): 0.3828, norm(x): 0.5319, norm(y): 1.0026, norm:0.8990, tok/sec: 103239.09, flops:90.41, batch-reuse:1
@ 580 train 7.5461 , allloss: 7.6018, dt: 1253.16ms, fracRes: 0.4787, norm(attn): 0.0718, norm(output): 0.3867, norm(x): 0.5329, norm(y): 1.0026, norm:0.5424, tok/sec: 104593.23, flops:91.59, batch-reuse:1
@ 581 train 7.4447 , allloss: 7.4929, dt: 1269.99ms, fracRes: 0.4883, norm(attn): 0.0732, norm(output): 0.3848, norm(x): 0.5413, norm(y): 1.0026, norm:0.6829, tok/sec: 103207.08, flops:90.38, batch-reuse:1
@ 582 train 7.5060 , allloss: 7.5531, dt: 1267.46ms, fracRes: 0.4885, norm(attn): 0.0708, norm(output): 0.3848, norm(x): 0.5426, norm(y): 1.0026, norm:0.6489, tok/sec: 103413.45, flops:90.56, batch-reuse:1
@ 583 train 7.4480 , allloss: 7.5029, dt: 1289.86ms, fracRes: 0.4827, norm(attn): 0.0693, norm(output): 0.3828, norm(x): 0.5339, norm(y): 1.0026, norm:0.7005, tok/sec: 101617.02, flops:88.98, batch-reuse:1
@ 584 train 7.4990 , allloss: 7.5448, dt: 1279.16ms, fracRes: 0.5016, norm(attn): 0.0713, norm(output): 0.3770, norm(x): 0.5400, norm(y): 1.0026, norm:1.9180, tok/sec: 102467.19, flops:89.73, batch-reuse:1
@ 585 train 7.4620 , allloss: 7.5184, dt: 1272.42ms, fracRes: 0.4773, norm(attn): 0.0669, norm(output): 0.3809, norm(x): 0.5263, norm(y): 1.0025, norm:1.3135, tok/sec: 103010.23, flops:90.20, batch-reuse:1
@ 586 train 7.4683 , allloss: 7.5132, dt: 1317.04ms, fracRes: 0.4911, norm(attn): 0.0698, norm(output): 0.3828, norm(x): 0.5414, norm(y): 1.0026, norm:0.6171, tok/sec: 99520.44, flops:87.15, batch-reuse:1
@ 587 train 7.4729 , allloss: 7.5146, dt: 1323.15ms, fracRes: 0.4933, norm(attn): 0.0713, norm(output): 0.3848, norm(x): 0.5441, norm(y): 1.0026, norm:0.7765, tok/sec: 99060.92, flops:86.75, batch-reuse:1
@ 588 train 7.4715 , allloss: 7.5202, dt: 1268.89ms, fracRes: 0.4709, norm(attn): 0.0718, norm(output): 0.3965, norm(x): 0.5326, norm(y): 1.0025, norm:0.9985, tok/sec: 103296.59, flops:90.46, batch-reuse:1
@ 589 train 7.4831 , allloss: 7.5194, dt: 1266.89ms, fracRes: 0.4983, norm(attn): 0.0713, norm(output): 0.3906, norm(x): 0.5565, norm(y): 1.0026, norm:1.1224, tok/sec: 103459.67, flops:90.60, batch-reuse:1
@ 590 train 7.4647 , allloss: 7.5042, dt: 1262.94ms, fracRes: 0.4822, norm(attn): 0.0698, norm(output): 0.3965, norm(x): 0.5437, norm(y): 1.0026, norm:0.6300, tok/sec: 103783.03, flops:90.88, batch-reuse:1
@ 591 train 7.4130 , allloss: 7.4537, dt: 1284.71ms, fracRes: 0.4693, norm(attn): 0.0698, norm(output): 0.3984, norm(x): 0.5321, norm(y): 1.0025, norm:0.9359, tok/sec: 102024.91, flops:89.34, batch-reuse:1
@ 592 train 7.3998 , allloss: 7.4333, dt: 1243.29ms, fracRes: 0.4890, norm(attn): 0.0698, norm(output): 0.3965, norm(x): 0.5483, norm(y): 1.0026, norm:0.7797, tok/sec: 105423.15, flops:92.32, batch-reuse:1
@ 593 train 7.3998 , allloss: 7.4318, dt: 1260.93ms, fracRes: 0.4915, norm(attn): 0.0718, norm(output): 0.3906, norm(x): 0.5466, norm(y): 1.0026, norm:1.0689, tok/sec: 103948.27, flops:91.03, batch-reuse:1
@ 594 train 7.5527 , allloss: 7.5935, dt: 1259.96ms, fracRes: 0.4482, norm(attn): 0.0703, norm(output): 0.4062, norm(x): 0.5229, norm(y): 1.0025, norm:1.0576, tok/sec: 104028.37, flops:91.10, batch-reuse:1
@ 595 train 7.4071 , allloss: 7.4420, dt: 1265.63ms, fracRes: 0.4572, norm(attn): 0.0693, norm(output): 0.4043, norm(x): 0.5272, norm(y): 1.0025, norm:1.7569, tok/sec: 103562.59, flops:90.69, batch-reuse:1
@ 596 train 7.3795 , allloss: 7.4080, dt: 1272.24ms, fracRes: 0.4771, norm(attn): 0.0693, norm(output): 0.4043, norm(x): 0.5492, norm(y): 1.0026, norm:0.4725, tok/sec: 103024.81, flops:90.22, batch-reuse:1
@ 597 train 7.3624 , allloss: 7.3898, dt: 1286.33ms, fracRes: 0.4968, norm(attn): 0.0684, norm(output): 0.4023, norm(x): 0.5657, norm(y): 1.0026, norm:0.7602, tok/sec: 101895.72, flops:89.23, batch-reuse:1
@ 598 train 7.4713 , allloss: 7.5005, dt: 1261.22ms, fracRes: 0.4924, norm(attn): 0.0664, norm(output): 0.4062, norm(x): 0.5650, norm(y): 1.0026, norm:0.7671, tok/sec: 103924.56, flops:91.01, batch-reuse:1
@ 599 train 7.5080 , allloss: 7.5402, dt: 1264.01ms, fracRes: 0.4748, norm(attn): 0.0649, norm(output): 0.4043, norm(x): 0.5472, norm(y): 1.0026, norm:0.8559, tok/sec: 103695.50, flops:90.80, batch-reuse:1
@ 600 train 7.3890 , allloss: 7.4221, dt: 1265.50ms, fracRes: 0.4669, norm(attn): 0.0635, norm(output): 0.4062, norm(x): 0.5426, norm(y): 1.0026, norm:0.9406, tok/sec: 103573.62, flops:90.70, batch-reuse:1
@ 601 train 7.4563 , allloss: 7.4873, dt: 1270.93ms, fracRes: 0.4745, norm(attn): 0.0669, norm(output): 0.4023, norm(x): 0.5446, norm(y): 1.0026, norm:1.3589, tok/sec: 103131.10, flops:90.31, batch-reuse:1
@ 602 train 7.4386 , allloss: 7.4705, dt: 1288.03ms, fracRes: 0.4619, norm(attn): 0.0664, norm(output): 0.4062, norm(x): 0.5424, norm(y): 1.0026, norm:0.8441, tok/sec: 101761.22, flops:89.11, batch-reuse:1
@ 603 train 7.3839 , allloss: 7.4156, dt: 1261.89ms, fracRes: 0.4615, norm(attn): 0.0654, norm(output): 0.4062, norm(x): 0.5409, norm(y): 1.0026, norm:0.4572, tok/sec: 103869.91, flops:90.96, batch-reuse:1
@ 604 train 7.3251 , allloss: 7.3560, dt: 1283.68ms, fracRes: 0.4647, norm(attn): 0.0640, norm(output): 0.4062, norm(x): 0.5411, norm(y): 1.0025, norm:1.0239, tok/sec: 102106.24, flops:89.41, batch-reuse:1
@ 605 train 7.3737 , allloss: 7.4041, dt: 1257.12ms, fracRes: 0.4645, norm(attn): 0.0623, norm(output): 0.4082, norm(x): 0.5481, norm(y): 1.0026, norm:1.2870, tok/sec: 104263.76, flops:91.30, batch-reuse:1
@ 606 train 7.3611 , allloss: 7.3886, dt: 1257.23ms, fracRes: 0.4859, norm(attn): 0.0649, norm(output): 0.4062, norm(x): 0.5614, norm(y): 1.0026, norm:0.5481, tok/sec: 104254.53, flops:91.29, batch-reuse:1
@ 607 train 7.3511 , allloss: 7.3810, dt: 1269.17ms, fracRes: 0.4818, norm(attn): 0.0659, norm(output): 0.4062, norm(x): 0.5568, norm(y): 1.0026, norm:1.0734, tok/sec: 103273.81, flops:90.44, batch-reuse:1
@ 608 train 7.2845 , allloss: 7.3207, dt: 1292.50ms, fracRes: 0.4507, norm(attn): 0.0625, norm(output): 0.4141, norm(x): 0.5433, norm(y): 1.0025, norm:1.4140, tok/sec: 101409.50, flops:88.80, batch-reuse:1
@ 609 train 7.3086 , allloss: 7.3406, dt: 1283.96ms, fracRes: 0.4663, norm(attn): 0.0640, norm(output): 0.4141, norm(x): 0.5537, norm(y): 1.0025, norm:0.5572, tok/sec: 102084.36, flops:89.39, batch-reuse:1
@ 610 train 7.4744 , allloss: 7.5047, dt: 1248.72ms, fracRes: 0.4801, norm(attn): 0.0664, norm(output): 0.4082, norm(x): 0.5607, norm(y): 1.0026, norm:1.4104, tok/sec: 104964.87, flops:91.92, batch-reuse:1
@ 611 train 7.3705 , allloss: 7.4021, dt: 1260.39ms, fracRes: 0.4667, norm(attn): 0.0654, norm(output): 0.4141, norm(x): 0.5547, norm(y): 1.0026, norm:0.5219, tok/sec: 103993.01, flops:91.07, batch-reuse:1
@ 612 train 7.4385 , allloss: 7.4761, dt: 1255.62ms, fracRes: 0.4362, norm(attn): 0.0605, norm(output): 0.4277, norm(x): 0.5380, norm(y): 1.0025, norm:1.1747, tok/sec: 104387.87, flops:91.41, batch-reuse:1
@ 613 train 7.4844 , allloss: 7.5200, dt: 1260.09ms, fracRes: 0.4417, norm(attn): 0.0613, norm(output): 0.4258, norm(x): 0.5429, norm(y): 1.0025, norm:0.6712, tok/sec: 104017.98, flops:91.09, batch-reuse:1
@ 614 train 7.3976 , allloss: 7.4303, dt: 1260.43ms, fracRes: 0.4608, norm(attn): 0.0645, norm(output): 0.4180, norm(x): 0.5560, norm(y): 1.0026, norm:1.1051, tok/sec: 103989.88, flops:91.06, batch-reuse:1
@ 615 train 7.3499 , allloss: 7.3812, dt: 1269.76ms, fracRes: 0.4550, norm(attn): 0.0623, norm(output): 0.4258, norm(x): 0.5502, norm(y): 1.0026, norm:0.5420, tok/sec: 103226.13, flops:90.39, batch-reuse:1
@ 616 train 7.3924 , allloss: 7.4228, dt: 1267.16ms, fracRes: 0.4512, norm(attn): 0.0598, norm(output): 0.4258, norm(x): 0.5471, norm(y): 1.0026, norm:0.9512, tok/sec: 103437.75, flops:90.58, batch-reuse:1
@ 617 train 7.2064 , allloss: 7.2323, dt: 1285.60ms, fracRes: 0.4756, norm(attn): 0.0630, norm(output): 0.4141, norm(x): 0.5623, norm(y): 1.0027, norm:0.6928, tok/sec: 101954.01, flops:89.28, batch-reuse:1
@ 618 train 7.3463 , allloss: 7.3732, dt: 1264.78ms, fracRes: 0.4738, norm(attn): 0.0649, norm(output): 0.4102, norm(x): 0.5540, norm(y): 1.0027, norm:1.9733, tok/sec: 103632.07, flops:90.75, batch-reuse:1
@ 619 train 7.3104 , allloss: 7.3355, dt: 1267.24ms, fracRes: 0.4790, norm(attn): 0.0630, norm(output): 0.4141, norm(x): 0.5652, norm(y): 1.0027, norm:0.6174, tok/sec: 103431.37, flops:90.57, batch-reuse:1
@ 620 train 7.3136 , allloss: 7.3399, dt: 1285.09ms, fracRes: 0.4668, norm(attn): 0.0591, norm(output): 0.4258, norm(x): 0.5607, norm(y): 1.0027, norm:1.5384, tok/sec: 101994.57, flops:89.32, batch-reuse:1
@ 621 train 7.2964 , allloss: 7.3278, dt: 1292.72ms, fracRes: 0.4479, norm(attn): 0.0596, norm(output): 0.4258, norm(x): 0.5436, norm(y): 1.0026, norm:1.2413, tok/sec: 101392.78, flops:88.79, batch-reuse:1
@ 622 train 7.2149 , allloss: 7.2394, dt: 1277.83ms, fracRes: 0.4787, norm(attn): 0.0649, norm(output): 0.4141, norm(x): 0.5650, norm(y): 1.0027, norm:0.8072, tok/sec: 102574.15, flops:89.82, batch-reuse:1
@ 623 train 7.2677 , allloss: 7.2936, dt: 1265.50ms, fracRes: 0.4747, norm(attn): 0.0645, norm(output): 0.4141, norm(x): 0.5640, norm(y): 1.0027, norm:0.9221, tok/sec: 103573.13, flops:90.70, batch-reuse:1
@ 624 train 7.3633 , allloss: 7.4042, dt: 1266.81ms, fracRes: 0.4187, norm(attn): 0.0610, norm(output): 0.4297, norm(x): 0.5259, norm(y): 1.0026, norm:1.6480, tok/sec: 103466.02, flops:90.60, batch-reuse:1
@ 625 train 7.4178 , allloss: 7.4511, dt: 1271.44ms, fracRes: 0.4310, norm(attn): 0.0591, norm(output): 0.4297, norm(x): 0.5386, norm(y): 1.0026, norm:1.4369, tok/sec: 103089.25, flops:90.27, batch-reuse:1
@ 626 train 7.2778 , allloss: 7.3060, dt: 1299.54ms, fracRes: 0.4300, norm(attn): 0.0618, norm(output): 0.4297, norm(x): 0.5336, norm(y): 1.0026, norm:0.4771, tok/sec: 100860.41, flops:88.32, batch-reuse:1
@ 627 train 7.3256 , allloss: 7.3546, dt: 1301.98ms, fracRes: 0.4334, norm(attn): 0.0649, norm(output): 0.4160, norm(x): 0.5294, norm(y): 1.0026, norm:1.7067, tok/sec: 100671.08, flops:88.16, batch-reuse:1
@ 628 train 7.3130 , allloss: 7.3382, dt: 1256.49ms, fracRes: 0.4482, norm(attn): 0.0645, norm(output): 0.4219, norm(x): 0.5426, norm(y): 1.0027, norm:1.0098, tok/sec: 104316.09, flops:91.35, batch-reuse:1
@ 629 train 7.3562 , allloss: 7.3811, dt: 1286.46ms, fracRes: 0.4906, norm(attn): 0.0562, norm(output): 0.4160, norm(x): 0.5752, norm(y): 1.0028, norm:0.8023, tok/sec: 101885.93, flops:89.22, batch-reuse:1
@ 630 train 7.4455 , allloss: 7.4694, dt: 1261.72ms, fracRes: 0.5111, norm(attn): 0.0574, norm(output): 0.4121, norm(x): 0.5927, norm(y): 1.0028, norm:0.9369, tok/sec: 103883.51, flops:90.97, batch-reuse:1
@ 631 train 7.3448 , allloss: 7.3686, dt: 1272.09ms, fracRes: 0.5010, norm(attn): 0.0574, norm(output): 0.4082, norm(x): 0.5758, norm(y): 1.0028, norm:1.9098, tok/sec: 103036.97, flops:90.23, batch-reuse:1
@ 632 train 7.4210 , allloss: 7.4444, dt: 1264.42ms, fracRes: 0.5060, norm(attn): 0.0576, norm(output): 0.4082, norm(x): 0.5807, norm(y): 1.0029, norm:0.9150, tok/sec: 103661.52, flops:90.77, batch-reuse:1
@ 633 train 7.3851 , allloss: 7.4108, dt: 1256.55ms, fracRes: 0.5042, norm(attn): 0.0542, norm(output): 0.4082, norm(x): 0.5770, norm(y): 1.0029, norm:1.1009, tok/sec: 104311.40, flops:91.34, batch-reuse:1
@ 634 train 7.1868 , allloss: 7.2093, dt: 1281.37ms, fracRes: 0.5106, norm(attn): 0.0610, norm(output): 0.4043, norm(x): 0.5749, norm(y): 1.0029, norm:1.9998, tok/sec: 102290.24, flops:89.57, batch-reuse:1
@ 635 train 7.3469 , allloss: 7.3695, dt: 1274.75ms, fracRes: 0.5117, norm(attn): 0.0576, norm(output): 0.4062, norm(x): 0.5815, norm(y): 1.0029, norm:1.0277, tok/sec: 102821.75, flops:90.04, batch-reuse:1
@ 636 train 7.3944 , allloss: 7.4219, dt: 1277.55ms, fracRes: 0.5092, norm(attn): 0.0518, norm(output): 0.4160, norm(x): 0.5925, norm(y): 1.0029, norm:2.4486, tok/sec: 102596.40, flops:89.84, batch-reuse:1
@ 637 train 7.2512 , allloss: 7.2796, dt: 1265.99ms, fracRes: 0.5079, norm(attn): 0.0525, norm(output): 0.4258, norm(x): 0.5967, norm(y): 1.0028, norm:2.5259, tok/sec: 103533.38, flops:90.66, batch-reuse:1
@ 638 train 7.1966 , allloss: 7.2302, dt: 1297.28ms, fracRes: 0.5055, norm(attn): 0.0581, norm(output): 0.4219, norm(x): 0.5974, norm(y): 1.0028, norm:0.6660, tok/sec: 101035.95, flops:88.48, batch-reuse:1
@ 639 train 7.3375 , allloss: 7.3726, dt: 1279.75ms, fracRes: 0.5073, norm(attn): 0.0620, norm(output): 0.4160, norm(x): 0.6030, norm(y): 1.0028, norm:1.7759, tok/sec: 102419.67, flops:89.69, batch-reuse:1
@ 640 train 7.2411 , allloss: 7.2782, dt: 1267.91ms, fracRes: 0.4986, norm(attn): 0.0645, norm(output): 0.4180, norm(x): 0.5956, norm(y): 1.0027, norm:1.4457, tok/sec: 103376.03, flops:90.52, batch-reuse:1
@ 641 train 7.3242 , allloss: 7.3620, dt: 1257.11ms, fracRes: 0.4870, norm(attn): 0.0610, norm(output): 0.4336, norm(x): 0.5945, norm(y): 1.0027, norm:0.9331, tok/sec: 104264.20, flops:91.30, batch-reuse:1
@ 642 train 7.2160 , allloss: 7.2504, dt: 1265.55ms, fracRes: 0.4853, norm(attn): 0.0583, norm(output): 0.4375, norm(x): 0.6003, norm(y): 1.0027, norm:2.6577, tok/sec: 103569.27, flops:90.69, batch-reuse:1
@ 643 train 7.2181 , allloss: 7.2520, dt: 1260.66ms, fracRes: 0.4786, norm(attn): 0.0579, norm(output): 0.4355, norm(x): 0.5916, norm(y): 1.0027, norm:2.0628, tok/sec: 103970.76, flops:91.05, batch-reuse:1
@ 644 train 7.4167 , allloss: 7.4494, dt: 1265.07ms, fracRes: 0.4806, norm(attn): 0.0586, norm(output): 0.4336, norm(x): 0.5891, norm(y): 1.0027, norm:3.1258, tok/sec: 103608.52, flops:90.73, batch-reuse:1
@ 645 train 7.3074 , allloss: 7.3359, dt: 1255.19ms, fracRes: 0.4901, norm(attn): 0.0630, norm(output): 0.4316, norm(x): 0.5952, norm(y): 1.0028, norm:1.1190, tok/sec: 104424.34, flops:91.44, batch-reuse:1
@ 646 train 7.2452 , allloss: 7.2699, dt: 1290.08ms, fracRes: 0.4996, norm(attn): 0.0645, norm(output): 0.4336, norm(x): 0.6088, norm(y): 1.0029, norm:2.5918, tok/sec: 101599.65, flops:88.97, batch-reuse:1
@ 647 train 7.2614 , allloss: 7.2866, dt: 1316.90ms, fracRes: 0.4969, norm(attn): 0.0625, norm(output): 0.4355, norm(x): 0.6055, norm(y): 1.0029, norm:2.0520, tok/sec: 99530.68, flops:87.16, batch-reuse:1
@ 648 train 7.1373 , allloss: 7.1681, dt: 1307.06ms, fracRes: 0.4888, norm(attn): 0.0620, norm(output): 0.4297, norm(x): 0.5898, norm(y): 1.0029, norm:1.8524, tok/sec: 100280.27, flops:87.81, batch-reuse:1
@ 649 train 7.2597 , allloss: 7.2895, dt: 1313.06ms, fracRes: 0.4857, norm(attn): 0.0613, norm(output): 0.4355, norm(x): 0.5926, norm(y): 1.0029, norm:1.6323, tok/sec: 99821.48, flops:87.41, batch-reuse:1
@ 650 train 7.1553 , allloss: 7.1801, dt: 1321.28ms, fracRes: 0.4979, norm(attn): 0.0610, norm(output): 0.4355, norm(x): 0.6084, norm(y): 1.0030, norm:1.2386, tok/sec: 99200.97, flops:86.87, batch-reuse:1
@ 651 train 7.2094 , allloss: 7.2335, dt: 1307.73ms, fracRes: 0.5010, norm(attn): 0.0615, norm(output): 0.4355, norm(x): 0.6087, norm(y): 1.0030, norm:0.8343, tok/sec: 100228.66, flops:87.77, batch-reuse:1
@ 652 train 7.0849 , allloss: 7.1127, dt: 1266.88ms, fracRes: 0.4954, norm(attn): 0.0603, norm(output): 0.4297, norm(x): 0.5971, norm(y): 1.0030, norm:0.7788, tok/sec: 103460.49, flops:90.60, batch-reuse:1
@ 653 train 7.1385 , allloss: 7.1739, dt: 1263.48ms, fracRes: 0.4765, norm(attn): 0.0593, norm(output): 0.4316, norm(x): 0.5804, norm(y): 1.0030, norm:1.5185, tok/sec: 103738.57, flops:90.84, batch-reuse:1
@ 654 train 7.1735 , allloss: 7.2052, dt: 1258.35ms, fracRes: 0.4818, norm(attn): 0.0605, norm(output): 0.4297, norm(x): 0.5829, norm(y): 1.0029, norm:0.9458, tok/sec: 104161.53, flops:91.21, batch-reuse:1
@ 655 train 7.1730 , allloss: 7.2033, dt: 1258.13ms, fracRes: 0.4860, norm(attn): 0.0586, norm(output): 0.4316, norm(x): 0.5903, norm(y): 1.0029, norm:0.8313, tok/sec: 104180.15, flops:91.23, batch-reuse:1
@ 656 train 7.1442 , allloss: 7.1732, dt: 1261.63ms, fracRes: 0.4889, norm(attn): 0.0579, norm(output): 0.4336, norm(x): 0.5951, norm(y): 1.0029, norm:1.1422, tok/sec: 103890.74, flops:90.98, batch-reuse:1
@ 657 train 7.1569 , allloss: 7.1845, dt: 1255.94ms, fracRes: 0.4986, norm(attn): 0.0596, norm(output): 0.4258, norm(x): 0.5994, norm(y): 1.0029, norm:1.6642, tok/sec: 104361.85, flops:91.39, batch-reuse:1
@ 658 train 7.2366 , allloss: 7.2674, dt: 1257.45ms, fracRes: 0.4962, norm(attn): 0.0579, norm(output): 0.4297, norm(x): 0.6007, norm(y): 1.0029, norm:0.7355, tok/sec: 104236.68, flops:91.28, batch-reuse:1
@ 659 train 7.1861 , allloss: 7.2239, dt: 1310.80ms, fracRes: 0.4865, norm(attn): 0.0549, norm(output): 0.4355, norm(x): 0.5971, norm(y): 1.0028, norm:2.0529, tok/sec: 99993.75, flops:87.56, batch-reuse:1
@ 660 train 7.2209 , allloss: 7.2643, dt: 1298.36ms, fracRes: 0.4776, norm(attn): 0.0566, norm(output): 0.4375, norm(x): 0.5916, norm(y): 1.0028, norm:1.3382, tok/sec: 100951.91, flops:88.40, batch-reuse:1
@ 661 train 7.1785 , allloss: 7.2136, dt: 1269.68ms, fracRes: 0.4890, norm(attn): 0.0596, norm(output): 0.4316, norm(x): 0.5986, norm(y): 1.0028, norm:1.3828, tok/sec: 103232.60, flops:90.40, batch-reuse:1
@ 662 train 7.2182 , allloss: 7.2512, dt: 1276.58ms, fracRes: 0.4922, norm(attn): 0.0588, norm(output): 0.4336, norm(x): 0.6053, norm(y): 1.0028, norm:1.3712, tok/sec: 102674.71, flops:89.91, batch-reuse:1
@ 663 train 7.1719 , allloss: 7.2082, dt: 1263.11ms, fracRes: 0.4810, norm(attn): 0.0564, norm(output): 0.4375, norm(x): 0.5989, norm(y): 1.0028, norm:0.6804, tok/sec: 103769.27, flops:90.87, batch-reuse:1
@ 664 train 7.1337 , allloss: 7.1775, dt: 1273.96ms, fracRes: 0.4502, norm(attn): 0.0557, norm(output): 0.4375, norm(x): 0.5687, norm(y): 1.0027, norm:2.5676, tok/sec: 102885.42, flops:90.10, batch-reuse:1
@ 665 train 7.1434 , allloss: 7.1786, dt: 1260.35ms, fracRes: 0.4830, norm(attn): 0.0552, norm(output): 0.4355, norm(x): 0.5994, norm(y): 1.0028, norm:1.1556, tok/sec: 103996.88, flops:91.07, batch-reuse:1
@ 666 train 6.9866 , allloss: 7.0173, dt: 1269.91ms, fracRes: 0.4987, norm(attn): 0.0574, norm(output): 0.4316, norm(x): 0.6118, norm(y): 1.0028, norm:1.5459, tok/sec: 103213.80, flops:90.38, batch-reuse:1
@ 667 train 6.9998 , allloss: 7.0303, dt: 1254.77ms, fracRes: 0.4973, norm(attn): 0.0591, norm(output): 0.4297, norm(x): 0.6080, norm(y): 1.0029, norm:1.8287, tok/sec: 104458.82, flops:91.47, batch-reuse:1
@ 668 train 7.1217 , allloss: 7.1523, dt: 1283.52ms, fracRes: 0.4956, norm(attn): 0.0566, norm(output): 0.4336, norm(x): 0.6063, norm(y): 1.0029, norm:0.6799, tok/sec: 102118.91, flops:89.42, batch-reuse:1
@ 669 train 7.1091 , allloss: 7.1449, dt: 1311.82ms, fracRes: 0.4874, norm(attn): 0.0566, norm(output): 0.4375, norm(x): 0.6029, norm(y): 1.0029, norm:1.6404, tok/sec: 99916.05, flops:87.50, batch-reuse:1
@ 670 train 7.1940 , allloss: 7.2349, dt: 1256.34ms, fracRes: 0.4780, norm(attn): 0.0583, norm(output): 0.4395, norm(x): 0.5997, norm(y): 1.0029, norm:1.3607, tok/sec: 104328.78, flops:91.36, batch-reuse:1
@ 671 train 7.0622 , allloss: 7.0996, dt: 1253.99ms, fracRes: 0.4780, norm(attn): 0.0615, norm(output): 0.4336, norm(x): 0.5917, norm(y): 1.0029, norm:1.1787, tok/sec: 104524.30, flops:91.53, batch-reuse:1
@ 672 train 7.1084 , allloss: 7.1430, dt: 1280.68ms, fracRes: 0.4829, norm(attn): 0.0583, norm(output): 0.4316, norm(x): 0.5966, norm(y): 1.0029, norm:1.6644, tok/sec: 102345.42, flops:89.62, batch-reuse:1
@ 673 train 7.0992 , allloss: 7.1310, dt: 1294.16ms, fracRes: 0.4860, norm(attn): 0.0588, norm(output): 0.4258, norm(x): 0.5948, norm(y): 1.0029, norm:1.1658, tok/sec: 101279.58, flops:88.69, batch-reuse:1
@ 674 train 7.1239 , allloss: 7.1570, dt: 1268.19ms, fracRes: 0.4845, norm(attn): 0.0581, norm(output): 0.4355, norm(x): 0.6016, norm(y): 1.0029, norm:0.5700, tok/sec: 103353.33, flops:90.51, batch-reuse:1
@ 675 train 7.0058 , allloss: 7.0418, dt: 1263.65ms, fracRes: 0.4760, norm(attn): 0.0593, norm(output): 0.4355, norm(x): 0.5961, norm(y): 1.0029, norm:1.2498, tok/sec: 103724.81, flops:90.83, batch-reuse:1
@ 676 train 7.1095 , allloss: 7.1452, dt: 1285.09ms, fracRes: 0.4775, norm(attn): 0.0596, norm(output): 0.4316, norm(x): 0.5927, norm(y): 1.0029, norm:1.5538, tok/sec: 101994.36, flops:89.32, batch-reuse:1
@ 677 train 7.2459 , allloss: 7.2825, dt: 1270.23ms, fracRes: 0.4793, norm(attn): 0.0552, norm(output): 0.4375, norm(x): 0.5967, norm(y): 1.0029, norm:1.4848, tok/sec: 103187.39, flops:90.36, batch-reuse:1
@ 678 train 7.0235 , allloss: 7.0577, dt: 1270.68ms, fracRes: 0.4830, norm(attn): 0.0576, norm(output): 0.4297, norm(x): 0.5893, norm(y): 1.0030, norm:1.1620, tok/sec: 103151.00, flops:90.33, batch-reuse:1
@ 679 train 7.0964 , allloss: 7.1292, dt: 1260.52ms, fracRes: 0.4852, norm(attn): 0.0576, norm(output): 0.4316, norm(x): 0.5977, norm(y): 1.0030, norm:0.7386, tok/sec: 103982.13, flops:91.06, batch-reuse:1
@ 680 train 7.0676 , allloss: 7.1010, dt: 1268.45ms, fracRes: 0.4888, norm(attn): 0.0566, norm(output): 0.4316, norm(x): 0.6010, norm(y): 1.0030, norm:0.9916, tok/sec: 103332.31, flops:90.49, batch-reuse:1
@ 681 train 7.0697 , allloss: 7.1023, dt: 1264.45ms, fracRes: 0.4851, norm(attn): 0.0571, norm(output): 0.4219, norm(x): 0.5906, norm(y): 1.0030, norm:1.5657, tok/sec: 103659.33, flops:90.77, batch-reuse:1
@ 682 train 7.1145 , allloss: 7.1479, dt: 1267.75ms, fracRes: 0.4832, norm(attn): 0.0547, norm(output): 0.4297, norm(x): 0.5931, norm(y): 1.0030, norm:1.7913, tok/sec: 103389.45, flops:90.54, batch-reuse:1
@ 683 train 7.0715 , allloss: 7.1067, dt: 1281.15ms, fracRes: 0.4794, norm(attn): 0.0557, norm(output): 0.4180, norm(x): 0.5854, norm(y): 1.0030, norm:1.2429, tok/sec: 102307.79, flops:89.59, batch-reuse:1
@ 684 train 7.0063 , allloss: 7.0400, dt: 1266.46ms, fracRes: 0.4834, norm(attn): 0.0571, norm(output): 0.4219, norm(x): 0.5896, norm(y): 1.0030, norm:0.9042, tok/sec: 103494.59, flops:90.63, batch-reuse:1
@ 685 train 7.1272 , allloss: 7.1596, dt: 1273.52ms, fracRes: 0.4870, norm(attn): 0.0547, norm(output): 0.4316, norm(x): 0.6009, norm(y): 1.0030, norm:2.7084, tok/sec: 102921.29, flops:90.13, batch-reuse:1
@ 686 train 7.1745 , allloss: 7.2062, dt: 1283.06ms, fracRes: 0.5008, norm(attn): 0.0547, norm(output): 0.4258, norm(x): 0.6133, norm(y): 1.0031, norm:1.7175, tok/sec: 102155.55, flops:89.46, batch-reuse:1
@ 687 train 7.0793 , allloss: 7.1120, dt: 1284.66ms, fracRes: 0.4805, norm(attn): 0.0588, norm(output): 0.4258, norm(x): 0.5904, norm(y): 1.0030, norm:1.7091, tok/sec: 102028.34, flops:89.34, batch-reuse:1
@ 688 train 7.0959 , allloss: 7.1353, dt: 1295.07ms, fracRes: 0.4602, norm(attn): 0.0559, norm(output): 0.4316, norm(x): 0.5742, norm(y): 1.0030, norm:1.6815, tok/sec: 101208.30, flops:88.63, batch-reuse:1
@ 689 train 7.0730 , allloss: 7.1279, dt: 1295.84ms, fracRes: 0.4249, norm(attn): 0.0583, norm(output): 0.4316, norm(x): 0.5369, norm(y): 1.0029, norm:2.1594, tok/sec: 101148.42, flops:88.57, batch-reuse:1
@ 690 train 7.1026 , allloss: 7.1449, dt: 1269.16ms, fracRes: 0.4338, norm(attn): 0.0581, norm(output): 0.4238, norm(x): 0.5430, norm(y): 1.0030, norm:2.0952, tok/sec: 103274.72, flops:90.44, batch-reuse:1
@ 691 train 7.0635 , allloss: 7.1031, dt: 1252.58ms, fracRes: 0.4361, norm(attn): 0.0559, norm(output): 0.4336, norm(x): 0.5541, norm(y): 1.0030, norm:1.5815, tok/sec: 104641.33, flops:91.63, batch-reuse:1
@ 692 train 6.9925 , allloss: 7.0224, dt: 1251.75ms, fracRes: 0.4474, norm(attn): 0.0593, norm(output): 0.4277, norm(x): 0.5636, norm(y): 1.0031, norm:0.8945, tok/sec: 104710.59, flops:91.69, batch-reuse:1
@ 693 train 7.0574 , allloss: 7.0885, dt: 1244.87ms, fracRes: 0.4547, norm(attn): 0.0586, norm(output): 0.4297, norm(x): 0.5702, norm(y): 1.0031, norm:1.9296, tok/sec: 105289.43, flops:92.20, batch-reuse:1
@ 694 train 6.9829 , allloss: 7.0131, dt: 1277.72ms, fracRes: 0.4472, norm(attn): 0.0586, norm(output): 0.4297, norm(x): 0.5652, norm(y): 1.0031, norm:1.2147, tok/sec: 102582.50, flops:89.83, batch-reuse:1
@ 695 train 7.0930 , allloss: 7.1243, dt: 1267.20ms, fracRes: 0.4489, norm(attn): 0.0623, norm(output): 0.4160, norm(x): 0.5594, norm(y): 1.0031, norm:3.1521, tok/sec: 103434.34, flops:90.58, batch-reuse:1
@ 696 train 6.9336 , allloss: 6.9647, dt: 1272.38ms, fracRes: 0.4433, norm(attn): 0.0610, norm(output): 0.4180, norm(x): 0.5551, norm(y): 1.0030, norm:1.6810, tok/sec: 103013.59, flops:90.21, batch-reuse:1
@ 697 train 7.0688 , allloss: 7.1017, dt: 1255.13ms, fracRes: 0.4371, norm(attn): 0.0557, norm(output): 0.4375, norm(x): 0.5645, norm(y): 1.0030, norm:5.1399, tok/sec: 104429.08, flops:91.45, batch-reuse:1
@ 698 train 7.1274 , allloss: 7.1594, dt: 1272.97ms, fracRes: 0.4369, norm(attn): 0.0557, norm(output): 0.4375, norm(x): 0.5673, norm(y): 1.0030, norm:4.4113, tok/sec: 102965.26, flops:90.17, batch-reuse:1
@ 699 train 7.0893 , allloss: 7.1210, dt: 1294.54ms, fracRes: 0.4403, norm(attn): 0.0588, norm(output): 0.4355, norm(x): 0.5684, norm(y): 1.0030, norm:1.0276, tok/sec: 101249.61, flops:88.66, batch-reuse:1
@ 700 train 7.0898 , allloss: 7.1186, dt: 1273.56ms, fracRes: 0.4444, norm(attn): 0.0610, norm(output): 0.4297, norm(x): 0.5635, norm(y): 1.0031, norm:4.2224, tok/sec: 102917.47, flops:90.12, batch-reuse:1
@ 701 train 7.1258 , allloss: 7.1508, dt: 1266.41ms, fracRes: 0.4493, norm(attn): 0.0608, norm(output): 0.4297, norm(x): 0.5708, norm(y): 1.0032, norm:2.2092, tok/sec: 103498.70, flops:90.63, batch-reuse:1
@ 702 train 7.1478 , allloss: 7.1733, dt: 1276.25ms, fracRes: 0.4505, norm(attn): 0.0581, norm(output): 0.4414, norm(x): 0.5844, norm(y): 1.0032, norm:2.6128, tok/sec: 102701.18, flops:89.93, batch-reuse:1
@ 703 train 7.0865 , allloss: 7.1124, dt: 1267.54ms, fracRes: 0.4524, norm(attn): 0.0586, norm(output): 0.4414, norm(x): 0.5859, norm(y): 1.0033, norm:2.7519, tok/sec: 103406.91, flops:90.55, batch-reuse:1
@ 704 train 6.9545 , allloss: 6.9801, dt: 1291.44ms, fracRes: 0.4528, norm(attn): 0.0615, norm(output): 0.4375, norm(x): 0.5781, norm(y): 1.0033, norm:1.0025, tok/sec: 101492.87, flops:88.88, batch-reuse:1
@ 705 train 7.0526 , allloss: 7.0787, dt: 1273.98ms, fracRes: 0.4771, norm(attn): 0.0588, norm(output): 0.4316, norm(x): 0.5985, norm(y): 1.0034, norm:3.8598, tok/sec: 102884.17, flops:90.09, batch-reuse:1
@ 706 train 7.0489 , allloss: 7.0725, dt: 1250.40ms, fracRes: 0.4832, norm(attn): 0.0583, norm(output): 0.4375, norm(x): 0.6107, norm(y): 1.0034, norm:2.2524, tok/sec: 104823.93, flops:91.79, batch-reuse:1
@ 707 train 7.0708 , allloss: 7.0917, dt: 1259.49ms, fracRes: 0.4887, norm(attn): 0.0571, norm(output): 0.4375, norm(x): 0.6257, norm(y): 1.0034, norm:1.9773, tok/sec: 104067.81, flops:91.13, batch-reuse:1
@ 708 train 7.0238 , allloss: 7.0466, dt: 1282.79ms, fracRes: 0.4900, norm(attn): 0.0557, norm(output): 0.4375, norm(x): 0.6300, norm(y): 1.0034, norm:1.4549, tok/sec: 102177.57, flops:89.48, batch-reuse:1
@ 709 train 7.0204 , allloss: 7.0484, dt: 1258.47ms, fracRes: 0.4826, norm(attn): 0.0547, norm(output): 0.4375, norm(x): 0.6193, norm(y): 1.0033, norm:1.7257, tok/sec: 104151.51, flops:91.20, batch-reuse:1
@ 710 train 7.0607 , allloss: 7.0881, dt: 1284.68ms, fracRes: 0.4875, norm(attn): 0.0547, norm(output): 0.4375, norm(x): 0.6252, norm(y): 1.0033, norm:1.5016, tok/sec: 102026.86, flops:89.34, batch-reuse:1
@ 711 train 7.0831 , allloss: 7.1062, dt: 1296.02ms, fracRes: 0.5031, norm(attn): 0.0527, norm(output): 0.4375, norm(x): 0.6425, norm(y): 1.0033, norm:1.1837, tok/sec: 101134.54, flops:88.56, batch-reuse:1
@ 712 train 6.9558 , allloss: 6.9772, dt: 1259.45ms, fracRes: 0.5056, norm(attn): 0.0520, norm(output): 0.4355, norm(x): 0.6465, norm(y): 1.0034, norm:1.4823, tok/sec: 104071.04, flops:91.13, batch-reuse:1
@ 713 train 7.0630 , allloss: 7.0848, dt: 1282.82ms, fracRes: 0.5003, norm(attn): 0.0542, norm(output): 0.4395, norm(x): 0.6436, norm(y): 1.0033, norm:2.0162, tok/sec: 102174.76, flops:89.47, batch-reuse:1
@ 714 train 6.9253 , allloss: 6.9477, dt: 1265.25ms, fracRes: 0.4966, norm(attn): 0.0540, norm(output): 0.4375, norm(x): 0.6416, norm(y): 1.0033, norm:1.3522, tok/sec: 103593.91, flops:90.72, batch-reuse:1
@ 715 train 6.9465 , allloss: 6.9678, dt: 1249.18ms, fracRes: 0.4975, norm(attn): 0.0532, norm(output): 0.4414, norm(x): 0.6490, norm(y): 1.0033, norm:1.2287, tok/sec: 104926.08, flops:91.88, batch-reuse:1
@ 716 train 7.0155 , allloss: 7.0355, dt: 1250.73ms, fracRes: 0.5009, norm(attn): 0.0547, norm(output): 0.4375, norm(x): 0.6531, norm(y): 1.0033, norm:2.3112, tok/sec: 104796.02, flops:91.77, batch-reuse:1
@ 717 train 6.8500 , allloss: 6.8694, dt: 1263.90ms, fracRes: 0.5010, norm(attn): 0.0542, norm(output): 0.4375, norm(x): 0.6506, norm(y): 1.0033, norm:1.0616, tok/sec: 103704.01, flops:90.81, batch-reuse:1
@ 718 train 7.0892 , allloss: 7.1105, dt: 1290.45ms, fracRes: 0.4956, norm(attn): 0.0505, norm(output): 0.4453, norm(x): 0.6491, norm(y): 1.0033, norm:3.9103, tok/sec: 101571.08, flops:88.94, batch-reuse:1
@ 719 train 7.0213 , allloss: 7.0437, dt: 1280.07ms, fracRes: 0.4942, norm(attn): 0.0510, norm(output): 0.4453, norm(x): 0.6489, norm(y): 1.0032, norm:3.5617, tok/sec: 102394.11, flops:89.67, batch-reuse:1
@ 720 train 6.9501 , allloss: 6.9705, dt: 1264.34ms, fracRes: 0.4983, norm(attn): 0.0542, norm(output): 0.4395, norm(x): 0.6493, norm(y): 1.0032, norm:1.7407, tok/sec: 103668.46, flops:90.78, batch-reuse:1
@ 721 train 6.9276 , allloss: 6.9472, dt: 1265.96ms, fracRes: 0.5019, norm(attn): 0.0549, norm(output): 0.4375, norm(x): 0.6592, norm(y): 1.0032, norm:2.7299, tok/sec: 103535.46, flops:90.66, batch-reuse:1
@ 722 train 7.0026 , allloss: 7.0225, dt: 1292.10ms, fracRes: 0.5004, norm(attn): 0.0537, norm(output): 0.4414, norm(x): 0.6652, norm(y): 1.0032, norm:1.5421, tok/sec: 101440.90, flops:88.83, batch-reuse:1
@ 723 train 7.0206 , allloss: 7.0434, dt: 1305.11ms, fracRes: 0.4909, norm(attn): 0.0520, norm(output): 0.4492, norm(x): 0.6602, norm(y): 1.0031, norm:2.5478, tok/sec: 100429.50, flops:87.94, batch-reuse:1
@ 724 train 6.9717 , allloss: 6.9968, dt: 1269.05ms, fracRes: 0.4816, norm(attn): 0.0547, norm(output): 0.4473, norm(x): 0.6472, norm(y): 1.0031, norm:1.3159, tok/sec: 103283.94, flops:90.44, batch-reuse:1
@ 725 train 7.0289 , allloss: 7.0553, dt: 1271.75ms, fracRes: 0.4795, norm(attn): 0.0586, norm(output): 0.4395, norm(x): 0.6379, norm(y): 1.0031, norm:3.8309, tok/sec: 103064.13, flops:90.25, batch-reuse:1
@ 726 train 7.0940 , allloss: 7.1216, dt: 1292.11ms, fracRes: 0.4781, norm(attn): 0.0596, norm(output): 0.4414, norm(x): 0.6362, norm(y): 1.0031, norm:4.2115, tok/sec: 101439.95, flops:88.83, batch-reuse:1
@ 727 train 7.0042 , allloss: 7.0305, dt: 1278.06ms, fracRes: 0.4749, norm(attn): 0.0581, norm(output): 0.4453, norm(x): 0.6392, norm(y): 1.0031, norm:1.3679, tok/sec: 102555.76, flops:89.81, batch-reuse:1
@ 728 train 7.0367 , allloss: 7.0638, dt: 1271.13ms, fracRes: 0.4682, norm(attn): 0.0552, norm(output): 0.4648, norm(x): 0.6417, norm(y): 1.0030, norm:2.6950, tok/sec: 103114.74, flops:90.30, batch-reuse:1
@ 729 train 7.0032 , allloss: 7.0321, dt: 1276.56ms, fracRes: 0.4612, norm(attn): 0.0574, norm(output): 0.4629, norm(x): 0.6386, norm(y): 1.0030, norm:2.8919, tok/sec: 102676.09, flops:89.91, batch-reuse:1
@ 730 train 6.9750 , allloss: 7.0036, dt: 1260.13ms, fracRes: 0.4570, norm(attn): 0.0598, norm(output): 0.4609, norm(x): 0.6364, norm(y): 1.0030, norm:1.5524, tok/sec: 104014.69, flops:91.08, batch-reuse:1
@ 731 train 7.0222 , allloss: 7.0489, dt: 1262.22ms, fracRes: 0.4569, norm(attn): 0.0596, norm(output): 0.4570, norm(x): 0.6321, norm(y): 1.0030, norm:2.1899, tok/sec: 103842.35, flops:90.93, batch-reuse:1
@ 732 train 6.9428 , allloss: 6.9676, dt: 1270.74ms, fracRes: 0.4625, norm(attn): 0.0588, norm(output): 0.4531, norm(x): 0.6351, norm(y): 1.0031, norm:0.7852, tok/sec: 103146.51, flops:90.32, batch-reuse:1
@ 733 train 6.9849 , allloss: 7.0082, dt: 1275.69ms, fracRes: 0.4696, norm(attn): 0.0586, norm(output): 0.4590, norm(x): 0.6446, norm(y): 1.0032, norm:1.3404, tok/sec: 102745.92, flops:89.97, batch-reuse:1
@ 734 train 6.9721 , allloss: 6.9946, dt: 1293.19ms, fracRes: 0.4720, norm(attn): 0.0605, norm(output): 0.4609, norm(x): 0.6501, norm(y): 1.0032, norm:1.1646, tok/sec: 101355.45, flops:88.76, batch-reuse:1
@ 735 train 6.9599 , allloss: 6.9820, dt: 1274.74ms, fracRes: 0.4664, norm(attn): 0.0620, norm(output): 0.4453, norm(x): 0.6412, norm(y): 1.0032, norm:0.9574, tok/sec: 102822.50, flops:90.04, batch-reuse:1
@ 736 train 7.0191 , allloss: 7.0470, dt: 1274.15ms, fracRes: 0.4558, norm(attn): 0.0620, norm(output): 0.4531, norm(x): 0.6342, norm(y): 1.0031, norm:1.4973, tok/sec: 102869.87, flops:90.08, batch-reuse:1
@ 737 train 6.9083 , allloss: 6.9265, dt: 1263.99ms, fracRes: 0.4664, norm(attn): 0.0591, norm(output): 0.4531, norm(x): 0.6489, norm(y): 1.0032, norm:0.8758, tok/sec: 103696.95, flops:90.81, batch-reuse:1
@ 738 train 6.9572 , allloss: 6.9741, dt: 1274.68ms, fracRes: 0.4723, norm(attn): 0.0586, norm(output): 0.4492, norm(x): 0.6550, norm(y): 1.0034, norm:1.0318, tok/sec: 102827.77, flops:90.04, batch-reuse:1
@ 739 train 6.9879 , allloss: 7.0079, dt: 1276.98ms, fracRes: 0.4697, norm(attn): 0.0562, norm(output): 0.4531, norm(x): 0.6508, norm(y): 1.0034, norm:1.6445, tok/sec: 102642.47, flops:89.88, batch-reuse:1
@ 740 train 6.8904 , allloss: 6.9094, dt: 1265.68ms, fracRes: 0.4731, norm(attn): 0.0583, norm(output): 0.4473, norm(x): 0.6550, norm(y): 1.0035, norm:0.8406, tok/sec: 103558.96, flops:90.69, batch-reuse:1
@ 741 train 7.0231 , allloss: 7.0398, dt: 1269.03ms, fracRes: 0.4773, norm(attn): 0.0588, norm(output): 0.4453, norm(x): 0.6634, norm(y): 1.0036, norm:2.1921, tok/sec: 103285.33, flops:90.45, batch-reuse:1
@ 742 train 7.0695 , allloss: 7.0857, dt: 1285.15ms, fracRes: 0.4781, norm(attn): 0.0583, norm(output): 0.4512, norm(x): 0.6663, norm(y): 1.0036, norm:1.0666, tok/sec: 101989.89, flops:89.31, batch-reuse:1
@ 743 train 7.0944 , allloss: 7.1106, dt: 1241.14ms, fracRes: 0.4764, norm(attn): 0.0576, norm(output): 0.4609, norm(x): 0.6645, norm(y): 1.0035, norm:2.8335, tok/sec: 105605.80, flops:92.48, batch-reuse:1
@ 744 train 7.0568 , allloss: 7.0725, dt: 1266.90ms, fracRes: 0.4793, norm(attn): 0.0581, norm(output): 0.4492, norm(x): 0.6621, norm(y): 1.0035, norm:2.4334, tok/sec: 103458.54, flops:90.60, batch-reuse:1
@ 745 train 6.9950 , allloss: 7.0097, dt: 1281.83ms, fracRes: 0.4891, norm(attn): 0.0586, norm(output): 0.4434, norm(x): 0.6769, norm(y): 1.0035, norm:1.7676, tok/sec: 102254.07, flops:89.54, batch-reuse:1
@ 746 train 7.0536 , allloss: 7.0684, dt: 1276.61ms, fracRes: 0.4901, norm(attn): 0.0557, norm(output): 0.4551, norm(x): 0.6858, norm(y): 1.0035, norm:1.6864, tok/sec: 102671.83, flops:89.91, batch-reuse:1
@ 747 train 7.0252 , allloss: 7.0398, dt: 1266.51ms, fracRes: 0.4878, norm(attn): 0.0562, norm(output): 0.4590, norm(x): 0.6861, norm(y): 1.0035, norm:1.3158, tok/sec: 103490.73, flops:90.63, batch-reuse:1
@ 748 train 7.0762 , allloss: 7.0911, dt: 1294.30ms, fracRes: 0.4890, norm(attn): 0.0579, norm(output): 0.4492, norm(x): 0.6814, norm(y): 1.0035, norm:2.2985, tok/sec: 101268.95, flops:88.68, batch-reuse:1
@ 749 train 7.1669 , allloss: 7.1827, dt: 1291.33ms, fracRes: 0.4870, norm(attn): 0.0557, norm(output): 0.4512, norm(x): 0.6812, norm(y): 1.0034, norm:1.7255, tok/sec: 101501.68, flops:88.88, batch-reuse:1
@ 750 train 7.0886 , allloss: 7.1046, dt: 1284.82ms, fracRes: 0.4858, norm(attn): 0.0547, norm(output): 0.4629, norm(x): 0.6855, norm(y): 1.0034, norm:2.7237, tok/sec: 102015.48, flops:89.33, batch-reuse:1
@ 751 train 7.0461 , allloss: 7.0624, dt: 1285.92ms, fracRes: 0.4853, norm(attn): 0.0547, norm(output): 0.4629, norm(x): 0.6860, norm(y): 1.0034, norm:2.4605, tok/sec: 101928.27, flops:89.26, batch-reuse:1
@ 752 train 7.0350 , allloss: 7.0510, dt: 1308.62ms, fracRes: 0.4815, norm(attn): 0.0552, norm(output): 0.4590, norm(x): 0.6795, norm(y): 1.0034, norm:1.8329, tok/sec: 100160.71, flops:87.71, batch-reuse:1
@ 753 train 7.0266 , allloss: 7.0429, dt: 1312.73ms, fracRes: 0.4815, norm(attn): 0.0566, norm(output): 0.4629, norm(x): 0.6801, norm(y): 1.0034, norm:1.4397, tok/sec: 99847.11, flops:87.43, batch-reuse:1
@ 754 train 7.0075 , allloss: 7.0265, dt: 1257.65ms, fracRes: 0.4870, norm(attn): 0.0576, norm(output): 0.4668, norm(x): 0.6928, norm(y): 1.0033, norm:2.1535, tok/sec: 104219.47, flops:91.26, batch-reuse:1
@ 755 train 7.0833 , allloss: 7.1025, dt: 1269.43ms, fracRes: 0.4913, norm(attn): 0.0579, norm(output): 0.4668, norm(x): 0.7004, norm(y): 1.0033, norm:1.5439, tok/sec: 103252.88, flops:90.42, batch-reuse:1
@ 756 train 6.9868 , allloss: 7.0041, dt: 1256.75ms, fracRes: 0.4964, norm(attn): 0.0581, norm(output): 0.4609, norm(x): 0.7035, norm(y): 1.0033, norm:1.8036, tok/sec: 104294.44, flops:91.33, batch-reuse:1
@ 757 train 7.0455 , allloss: 7.0628, dt: 1292.88ms, fracRes: 0.4941, norm(attn): 0.0576, norm(output): 0.4629, norm(x): 0.7020, norm(y): 1.0033, norm:1.7712, tok/sec: 101380.10, flops:88.78, batch-reuse:1
@ 758 train 6.9364 , allloss: 6.9551, dt: 1314.95ms, fracRes: 0.4894, norm(attn): 0.0579, norm(output): 0.4668, norm(x): 0.6975, norm(y): 1.0033, norm:1.1188, tok/sec: 99678.59, flops:87.29, batch-reuse:1
@ 759 train 7.0282 , allloss: 7.0479, dt: 1304.62ms, fracRes: 0.4815, norm(attn): 0.0588, norm(output): 0.4688, norm(x): 0.6926, norm(y): 1.0032, norm:1.1635, tok/sec: 100467.60, flops:87.98, batch-reuse:1
@ 760 train 7.0018 , allloss: 7.0190, dt: 1277.25ms, fracRes: 0.4765, norm(attn): 0.0593, norm(output): 0.4688, norm(x): 0.6914, norm(y): 1.0032, norm:1.0923, tok/sec: 102620.39, flops:89.86, batch-reuse:1
@ 761 train 7.0184 , allloss: 7.0338, dt: 1255.01ms, fracRes: 0.4777, norm(attn): 0.0586, norm(output): 0.4668, norm(x): 0.6922, norm(y): 1.0032, norm:0.9922, tok/sec: 104438.70, flops:91.46, batch-reuse:1
@ 762 train 7.0262 , allloss: 7.0416, dt: 1560.42ms, fracRes: 0.4790, norm(attn): 0.0586, norm(output): 0.4668, norm(x): 0.6891, norm(y): 1.0032, norm:1.4297, tok/sec: 83997.81, flops:73.56, batch-reuse:1
@ 763 train 7.0321 , allloss: 7.0466, dt: 1277.58ms, fracRes: 0.4779, norm(attn): 0.0588, norm(output): 0.4688, norm(x): 0.6917, norm(y): 1.0032, norm:0.7052, tok/sec: 102593.66, flops:89.84, batch-reuse:1
@ 764 train 7.0108 , allloss: 7.0257, dt: 1294.38ms, fracRes: 0.4766, norm(attn): 0.0591, norm(output): 0.4688, norm(x): 0.6936, norm(y): 1.0032, norm:0.9846, tok/sec: 101262.44, flops:88.67, batch-reuse:1
@ 765 train 6.9635 , allloss: 6.9777, dt: 1301.72ms, fracRes: 0.4783, norm(attn): 0.0591, norm(output): 0.4629, norm(x): 0.6928, norm(y): 1.0032, norm:0.7615, tok/sec: 100691.77, flops:88.17, batch-reuse:1
@ 766 train 6.9334 , allloss: 6.9473, dt: 1313.86ms, fracRes: 0.4817, norm(attn): 0.0579, norm(output): 0.4609, norm(x): 0.6916, norm(y): 1.0033, norm:1.1947, tok/sec: 99761.27, flops:87.36, batch-reuse:1
@ 767 train 6.9979 , allloss: 7.0116, dt: 1276.89ms, fracRes: 0.4840, norm(attn): 0.0576, norm(output): 0.4609, norm(x): 0.6948, norm(y): 1.0033, norm:0.7576, tok/sec: 102649.59, flops:89.89, batch-reuse:1
@ 768 train 7.0752 , allloss: 7.0895, dt: 1272.02ms, fracRes: 0.4823, norm(attn): 0.0557, norm(output): 0.4648, norm(x): 0.6999, norm(y): 1.0033, norm:1.0746, tok/sec: 103042.73, flops:90.23, batch-reuse:1
@ 769 train 6.9601 , allloss: 6.9735, dt: 1280.28ms, fracRes: 0.4801, norm(attn): 0.0576, norm(output): 0.4570, norm(x): 0.6945, norm(y): 1.0033, norm:1.5349, tok/sec: 102377.58, flops:89.65, batch-reuse:1
@ 770 train 6.9549 , allloss: 6.9690, dt: 1290.74ms, fracRes: 0.4794, norm(attn): 0.0557, norm(output): 0.4629, norm(x): 0.6959, norm(y): 1.0033, norm:1.2917, tok/sec: 101548.32, flops:88.92, batch-reuse:1
@ 771 train 6.9184 , allloss: 6.9315, dt: 1249.74ms, fracRes: 0.4833, norm(attn): 0.0554, norm(output): 0.4570, norm(x): 0.6948, norm(y): 1.0033, norm:0.9695, tok/sec: 104879.30, flops:91.84, batch-reuse:1
@ 772 train 6.9544 , allloss: 6.9680, dt: 1246.93ms, fracRes: 0.4843, norm(attn): 0.0547, norm(output): 0.4590, norm(x): 0.6986, norm(y): 1.0033, norm:1.5920, tok/sec: 105115.55, flops:92.05, batch-reuse:1
@ 773 train 7.0531 , allloss: 7.0666, dt: 1293.62ms, fracRes: 0.4816, norm(attn): 0.0552, norm(output): 0.4609, norm(x): 0.6944, norm(y): 1.0033, norm:0.9171, tok/sec: 101321.60, flops:88.73, batch-reuse:1
@ 774 train 6.9957 , allloss: 7.0114, dt: 1251.14ms, fracRes: 0.4771, norm(attn): 0.0576, norm(output): 0.4688, norm(x): 0.6965, norm(y): 1.0032, norm:2.2528, tok/sec: 104762.15, flops:91.74, batch-reuse:1
@ 775 train 7.0522 , allloss: 7.0670, dt: 1266.50ms, fracRes: 0.4789, norm(attn): 0.0583, norm(output): 0.4648, norm(x): 0.6975, norm(y): 1.0033, norm:1.0950, tok/sec: 103491.20, flops:90.63, batch-reuse:1
@ 776 train 6.8730 , allloss: 6.8855, dt: 1275.36ms, fracRes: 0.4841, norm(attn): 0.0569, norm(output): 0.4609, norm(x): 0.7048, norm(y): 1.0033, norm:1.6296, tok/sec: 102772.64, flops:90.00, batch-reuse:1
@ 777 train 6.9514 , allloss: 6.9648, dt: 1288.61ms, fracRes: 0.4875, norm(attn): 0.0552, norm(output): 0.4609, norm(x): 0.7068, norm(y): 1.0033, norm:1.8808, tok/sec: 101715.69, flops:89.07, batch-reuse:1
@ 778 train 6.9337 , allloss: 6.9486, dt: 1276.25ms, fracRes: 0.4877, norm(attn): 0.0562, norm(output): 0.4609, norm(x): 0.7033, norm(y): 1.0033, norm:1.5259, tok/sec: 102700.95, flops:89.93, batch-reuse:1
@ 779 train 6.9750 , allloss: 6.9928, dt: 1262.36ms, fracRes: 0.4791, norm(attn): 0.0574, norm(output): 0.4629, norm(x): 0.6964, norm(y): 1.0032, norm:1.3470, tok/sec: 103830.70, flops:90.92, batch-reuse:1
@ 780 train 6.9388 , allloss: 6.9557, dt: 1274.58ms, fracRes: 0.4778, norm(attn): 0.0586, norm(output): 0.4609, norm(x): 0.6988, norm(y): 1.0032, norm:1.4050, tok/sec: 102835.54, flops:90.05, batch-reuse:1
@ 781 train 6.9314 , allloss: 6.9468, dt: 1277.90ms, fracRes: 0.4802, norm(attn): 0.0564, norm(output): 0.4648, norm(x): 0.7046, norm(y): 1.0033, norm:1.7010, tok/sec: 102568.60, flops:89.82, batch-reuse:1
@ 782 train 6.9028 , allloss: 6.9178, dt: 1273.06ms, fracRes: 0.4816, norm(attn): 0.0574, norm(output): 0.4629, norm(x): 0.7053, norm(y): 1.0033, norm:0.7818, tok/sec: 102958.49, flops:90.16, batch-reuse:1
@ 783 train 6.9001 , allloss: 6.9165, dt: 1281.98ms, fracRes: 0.4800, norm(attn): 0.0583, norm(output): 0.4629, norm(x): 0.6984, norm(y): 1.0032, norm:1.3070, tok/sec: 102241.80, flops:89.53, batch-reuse:1
@ 784 train 6.9107 , allloss: 6.9286, dt: 1323.90ms, fracRes: 0.4788, norm(attn): 0.0579, norm(output): 0.4688, norm(x): 0.7004, norm(y): 1.0032, norm:1.9676, tok/sec: 99004.56, flops:86.70, batch-reuse:1
@ 785 train 6.9218 , allloss: 6.9397, dt: 1319.08ms, fracRes: 0.4781, norm(attn): 0.0586, norm(output): 0.4648, norm(x): 0.6989, norm(y): 1.0032, norm:0.8326, tok/sec: 99366.29, flops:87.01, batch-reuse:1
@ 786 train 6.8979 , allloss: 6.9149, dt: 1307.90ms, fracRes: 0.4784, norm(attn): 0.0586, norm(output): 0.4629, norm(x): 0.7003, norm(y): 1.0032, norm:0.6375, tok/sec: 100215.69, flops:87.76, batch-reuse:1
@ 787 train 6.9140 , allloss: 6.9298, dt: 1270.43ms, fracRes: 0.4788, norm(attn): 0.0586, norm(output): 0.4648, norm(x): 0.6990, norm(y): 1.0032, norm:0.5775, tok/sec: 103171.34, flops:90.35, batch-reuse:1
@ 788 train 6.9657 , allloss: 6.9812, dt: 1295.08ms, fracRes: 0.4787, norm(attn): 0.0583, norm(output): 0.4668, norm(x): 0.7027, norm(y): 1.0032, norm:0.9629, tok/sec: 101207.50, flops:88.63, batch-reuse:1
@ 789 train 6.8799 , allloss: 6.8947, dt: 1287.08ms, fracRes: 0.4797, norm(attn): 0.0596, norm(output): 0.4629, norm(x): 0.7026, norm(y): 1.0032, norm:2.0666, tok/sec: 101836.66, flops:89.18, batch-reuse:1
@ 790 train 6.8903 , allloss: 6.9039, dt: 1287.87ms, fracRes: 0.4818, norm(attn): 0.0579, norm(output): 0.4629, norm(x): 0.7070, norm(y): 1.0032, norm:0.9304, tok/sec: 101773.93, flops:89.12, batch-reuse:1
@ 791 train 7.0070 , allloss: 7.0226, dt: 1260.77ms, fracRes: 0.4779, norm(attn): 0.0581, norm(output): 0.4648, norm(x): 0.7019, norm(y): 1.0032, norm:0.6894, tok/sec: 103962.07, flops:91.04, batch-reuse:1
@ 792 train 6.9663 , allloss: 6.9821, dt: 1261.69ms, fracRes: 0.4763, norm(attn): 0.0583, norm(output): 0.4609, norm(x): 0.6982, norm(y): 1.0031, norm:1.2835, tok/sec: 103886.05, flops:90.97, batch-reuse:1
@ 793 train 6.9759 , allloss: 6.9908, dt: 1304.70ms, fracRes: 0.4775, norm(attn): 0.0576, norm(output): 0.4668, norm(x): 0.7048, norm(y): 1.0032, norm:2.6169, tok/sec: 100461.78, flops:87.97, batch-reuse:1
@ 794 train 7.0411 , allloss: 7.0553, dt: 1258.36ms, fracRes: 0.4799, norm(attn): 0.0588, norm(output): 0.4668, norm(x): 0.7097, norm(y): 1.0032, norm:0.9500, tok/sec: 104161.22, flops:91.21, batch-reuse:1
@ 795 train 6.8957 , allloss: 6.9110, dt: 1272.40ms, fracRes: 0.4768, norm(attn): 0.0591, norm(output): 0.4629, norm(x): 0.6987, norm(y): 1.0032, norm:2.4256, tok/sec: 103011.89, flops:90.21, batch-reuse:1
@ 796 train 6.8560 , allloss: 6.8745, dt: 1293.99ms, fracRes: 0.4724, norm(attn): 0.0593, norm(output): 0.4668, norm(x): 0.6972, norm(y): 1.0031, norm:1.5241, tok/sec: 101292.74, flops:88.70, batch-reuse:1
@ 797 train 6.9335 , allloss: 6.9486, dt: 1279.88ms, fracRes: 0.4768, norm(attn): 0.0583, norm(output): 0.4648, norm(x): 0.7036, norm(y): 1.0032, norm:0.7873, tok/sec: 102409.60, flops:89.68, batch-reuse:1
@ 798 train 6.9445 , allloss: 6.9582, dt: 1276.62ms, fracRes: 0.4815, norm(attn): 0.0583, norm(output): 0.4648, norm(x): 0.7075, norm(y): 1.0032, norm:1.2758, tok/sec: 102671.08, flops:89.91, batch-reuse:1
@ 799 train 6.9595 , allloss: 6.9726, dt: 1303.67ms, fracRes: 0.4828, norm(attn): 0.0562, norm(output): 0.4688, norm(x): 0.7095, norm(y): 1.0032, norm:2.3148, tok/sec: 100540.93, flops:88.04, batch-reuse:1
@ 800 train 6.8578 , allloss: 6.8712, dt: 1267.85ms, fracRes: 0.4827, norm(attn): 0.0576, norm(output): 0.4629, norm(x): 0.7071, norm(y): 1.0032, norm:1.0062, tok/sec: 103381.20, flops:90.53, batch-reuse:1
@ 801 train 6.9331 , allloss: 6.9474, dt: 1265.17ms, fracRes: 0.4827, norm(attn): 0.0586, norm(output): 0.4590, norm(x): 0.7092, norm(y): 1.0032, norm:3.3471, tok/sec: 103600.06, flops:90.72, batch-reuse:1
@ 802 train 6.9717 , allloss: 6.9856, dt: 1283.15ms, fracRes: 0.4818, norm(attn): 0.0579, norm(output): 0.4668, norm(x): 0.7124, norm(y): 1.0032, norm:2.1140, tok/sec: 102148.89, flops:89.45, batch-reuse:1
@ 803 train 6.9955 , allloss: 7.0096, dt: 1283.32ms, fracRes: 0.4824, norm(attn): 0.0557, norm(output): 0.4688, norm(x): 0.7145, norm(y): 1.0032, norm:3.1041, tok/sec: 102135.15, flops:89.44, batch-reuse:1
@ 804 train 6.8880 , allloss: 6.9035, dt: 1252.41ms, fracRes: 0.4824, norm(attn): 0.0586, norm(output): 0.4668, norm(x): 0.7139, norm(y): 1.0032, norm:2.0038, tok/sec: 104655.75, flops:91.65, batch-reuse:1
@ 805 train 6.9780 , allloss: 6.9932, dt: 1246.02ms, fracRes: 0.4838, norm(attn): 0.0596, norm(output): 0.4648, norm(x): 0.7171, norm(y): 1.0032, norm:2.6111, tok/sec: 105192.79, flops:92.12, batch-reuse:1
@ 806 train 6.8387 , allloss: 6.8516, dt: 1272.70ms, fracRes: 0.4841, norm(attn): 0.0588, norm(output): 0.4668, norm(x): 0.7208, norm(y): 1.0032, norm:1.1654, tok/sec: 102987.40, flops:90.18, batch-reuse:1
@ 807 train 6.9496 , allloss: 6.9638, dt: 1276.98ms, fracRes: 0.4828, norm(attn): 0.0559, norm(output): 0.4688, norm(x): 0.7191, norm(y): 1.0032, norm:3.1864, tok/sec: 102641.79, flops:89.88, batch-reuse:1
@ 808 train 6.9109 , allloss: 6.9262, dt: 1292.69ms, fracRes: 0.4819, norm(attn): 0.0564, norm(output): 0.4688, norm(x): 0.7187, norm(y): 1.0031, norm:2.6838, tok/sec: 101394.39, flops:88.79, batch-reuse:1
@ 809 train 6.9050 , allloss: 6.9197, dt: 1282.96ms, fracRes: 0.4828, norm(attn): 0.0583, norm(output): 0.4668, norm(x): 0.7189, norm(y): 1.0031, norm:1.8830, tok/sec: 102163.69, flops:89.46, batch-reuse:1
@ 810 train 6.9453 , allloss: 6.9597, dt: 1281.99ms, fracRes: 0.4831, norm(attn): 0.0586, norm(output): 0.4668, norm(x): 0.7239, norm(y): 1.0031, norm:1.6679, tok/sec: 102241.39, flops:89.53, batch-reuse:1
@ 811 train 6.9623 , allloss: 6.9778, dt: 1262.98ms, fracRes: 0.4816, norm(attn): 0.0586, norm(output): 0.4707, norm(x): 0.7292, norm(y): 1.0031, norm:1.8881, tok/sec: 103779.70, flops:90.88, batch-reuse:1
@ 812 train 6.8162 , allloss: 6.8305, dt: 1272.05ms, fracRes: 0.4817, norm(attn): 0.0583, norm(output): 0.4707, norm(x): 0.7293, norm(y): 1.0031, norm:1.6415, tok/sec: 103039.85, flops:90.23, batch-reuse:1
@ 813 train 7.0647 , allloss: 7.0802, dt: 1282.04ms, fracRes: 0.4817, norm(attn): 0.0593, norm(output): 0.4707, norm(x): 0.7277, norm(y): 1.0031, norm:2.5223, tok/sec: 102237.15, flops:89.53, batch-reuse:1
@ 814 train 6.9837 , allloss: 6.9991, dt: 1272.40ms, fracRes: 0.4814, norm(attn): 0.0598, norm(output): 0.4707, norm(x): 0.7300, norm(y): 1.0031, norm:2.1351, tok/sec: 103011.91, flops:90.21, batch-reuse:1
@ 815 train 6.8573 , allloss: 6.8740, dt: 1281.95ms, fracRes: 0.4765, norm(attn): 0.0598, norm(output): 0.4727, norm(x): 0.7309, norm(y): 1.0031, norm:1.7319, tok/sec: 102243.95, flops:89.53, batch-reuse:1
@ 816 train 6.8977 , allloss: 6.9127, dt: 1269.13ms, fracRes: 0.4818, norm(attn): 0.0586, norm(output): 0.4727, norm(x): 0.7332, norm(y): 1.0031, norm:1.7864, tok/sec: 103277.32, flops:90.44, batch-reuse:1
@ 817 train 6.8520 , allloss: 6.8654, dt: 1281.43ms, fracRes: 0.4842, norm(attn): 0.0588, norm(output): 0.4707, norm(x): 0.7328, norm(y): 1.0032, norm:1.1715, tok/sec: 102285.71, flops:89.57, batch-reuse:1
@ 818 train 6.8755 , allloss: 6.8889, dt: 1277.88ms, fracRes: 0.4813, norm(attn): 0.0605, norm(output): 0.4707, norm(x): 0.7392, norm(y): 1.0032, norm:1.7969, tok/sec: 102569.67, flops:89.82, batch-reuse:1
@ 819 train 6.9412 , allloss: 6.9553, dt: 1249.85ms, fracRes: 0.4789, norm(attn): 0.0598, norm(output): 0.4746, norm(x): 0.7385, norm(y): 1.0031, norm:1.1447, tok/sec: 104870.26, flops:91.83, batch-reuse:1
@ 820 train 7.0156 , allloss: 7.0298, dt: 1263.52ms, fracRes: 0.4802, norm(attn): 0.0586, norm(output): 0.4727, norm(x): 0.7312, norm(y): 1.0031, norm:1.4643, tok/sec: 103735.77, flops:90.84, batch-reuse:1
@ 821 train 6.9523 , allloss: 6.9665, dt: 1250.96ms, fracRes: 0.4817, norm(attn): 0.0586, norm(output): 0.4727, norm(x): 0.7314, norm(y): 1.0031, norm:1.4874, tok/sec: 104777.26, flops:91.75, batch-reuse:1
@ 822 train 7.0322 , allloss: 7.0472, dt: 1276.35ms, fracRes: 0.4803, norm(attn): 0.0593, norm(output): 0.4727, norm(x): 0.7364, norm(y): 1.0031, norm:1.5282, tok/sec: 102693.16, flops:89.93, batch-reuse:1
@ 823 train 6.8560 , allloss: 6.8705, dt: 1280.21ms, fracRes: 0.4768, norm(attn): 0.0588, norm(output): 0.4727, norm(x): 0.7350, norm(y): 1.0031, norm:1.3194, tok/sec: 102382.88, flops:89.66, batch-reuse:1
@ 824 train 7.0283 , allloss: 7.0441, dt: 1303.23ms, fracRes: 0.4786, norm(attn): 0.0596, norm(output): 0.4766, norm(x): 0.7394, norm(y): 1.0031, norm:1.0389, tok/sec: 100574.59, flops:88.07, batch-reuse:1
@ 825 train 6.8945 , allloss: 6.9074, dt: 1251.00ms, fracRes: 0.4856, norm(attn): 0.0559, norm(output): 0.4688, norm(x): 0.7433, norm(y): 1.0032, norm:0.8440, tok/sec: 104773.57, flops:91.75, batch-reuse:1
@ 826 train 6.8522 , allloss: 6.8656, dt: 1276.07ms, fracRes: 0.4826, norm(attn): 0.0557, norm(output): 0.4688, norm(x): 0.7392, norm(y): 1.0032, norm:0.7647, tok/sec: 102715.67, flops:89.95, batch-reuse:1
@ 827 train 6.9604 , allloss: 6.9754, dt: 1276.07ms, fracRes: 0.4752, norm(attn): 0.0571, norm(output): 0.4727, norm(x): 0.7341, norm(y): 1.0031, norm:1.1947, tok/sec: 102715.69, flops:89.95, batch-reuse:1
@ 828 train 6.8613 , allloss: 6.8750, dt: 1279.50ms, fracRes: 0.4757, norm(attn): 0.0571, norm(output): 0.4688, norm(x): 0.7334, norm(y): 1.0031, norm:1.6341, tok/sec: 102439.73, flops:89.71, batch-reuse:1
@ 829 train 6.9005 , allloss: 6.9135, dt: 1297.25ms, fracRes: 0.4787, norm(attn): 0.0559, norm(output): 0.4688, norm(x): 0.7392, norm(y): 1.0032, norm:2.3488, tok/sec: 101038.33, flops:88.48, batch-reuse:1
@ 830 train 6.8796 , allloss: 6.8919, dt: 1289.66ms, fracRes: 0.4787, norm(attn): 0.0571, norm(output): 0.4688, norm(x): 0.7390, norm(y): 1.0032, norm:0.7845, tok/sec: 101633.05, flops:89.00, batch-reuse:1
@ 831 train 6.9235 , allloss: 6.9359, dt: 1271.55ms, fracRes: 0.4776, norm(attn): 0.0579, norm(output): 0.4707, norm(x): 0.7386, norm(y): 1.0032, norm:0.8347, tok/sec: 103080.54, flops:90.27, batch-reuse:1
@ 832 train 6.9261 , allloss: 6.9405, dt: 1263.68ms, fracRes: 0.4725, norm(attn): 0.0576, norm(output): 0.4727, norm(x): 0.7342, norm(y): 1.0031, norm:1.8096, tok/sec: 103722.27, flops:90.83, batch-reuse:1
@ 833 train 6.8321 , allloss: 6.8460, dt: 1265.74ms, fracRes: 0.4732, norm(attn): 0.0581, norm(output): 0.4688, norm(x): 0.7310, norm(y): 1.0031, norm:1.4821, tok/sec: 103553.27, flops:90.68, batch-reuse:1
@ 834 train 6.8427 , allloss: 6.8553, dt: 1280.71ms, fracRes: 0.4765, norm(attn): 0.0574, norm(output): 0.4707, norm(x): 0.7400, norm(y): 1.0032, norm:1.3427, tok/sec: 102343.27, flops:89.62, batch-reuse:1
@ 835 train 6.7885 , allloss: 6.8010, dt: 1254.35ms, fracRes: 0.4773, norm(attn): 0.0574, norm(output): 0.4707, norm(x): 0.7390, norm(y): 1.0032, norm:0.9965, tok/sec: 104494.20, flops:91.50, batch-reuse:1
@ 836 train 6.8305 , allloss: 6.8425, dt: 1265.12ms, fracRes: 0.4766, norm(attn): 0.0557, norm(output): 0.4707, norm(x): 0.7425, norm(y): 1.0032, norm:1.7623, tok/sec: 103604.63, flops:90.73, batch-reuse:1
@ 837 train 6.8688 , allloss: 6.8817, dt: 1289.00ms, fracRes: 0.4753, norm(attn): 0.0576, norm(output): 0.4707, norm(x): 0.7412, norm(y): 1.0032, norm:1.7375, tok/sec: 101685.29, flops:89.04, batch-reuse:1
@ 838 train 6.8081 , allloss: 6.8202, dt: 1261.96ms, fracRes: 0.4759, norm(attn): 0.0564, norm(output): 0.4688, norm(x): 0.7418, norm(y): 1.0032, norm:0.8528, tok/sec: 103864.18, flops:90.95, batch-reuse:1
@ 839 train 6.6798 , allloss: 6.6924, dt: 1269.07ms, fracRes: 0.4759, norm(attn): 0.0576, norm(output): 0.4688, norm(x): 0.7399, norm(y): 1.0032, norm:0.8304, tok/sec: 103282.02, flops:90.44, batch-reuse:1
@ 840 train 6.8026 , allloss: 6.8154, dt: 1257.91ms, fracRes: 0.4764, norm(attn): 0.0579, norm(output): 0.4707, norm(x): 0.7419, norm(y): 1.0032, norm:1.1737, tok/sec: 104198.35, flops:91.25, batch-reuse:1
@ 841 train 6.7601 , allloss: 6.7723, dt: 1261.60ms, fracRes: 0.4758, norm(attn): 0.0566, norm(output): 0.4707, norm(x): 0.7437, norm(y): 1.0032, norm:2.8864, tok/sec: 103893.17, flops:90.98, batch-reuse:1
@ 842 train 6.8599 , allloss: 6.8735, dt: 1261.12ms, fracRes: 0.4741, norm(attn): 0.0581, norm(output): 0.4707, norm(x): 0.7426, norm(y): 1.0031, norm:1.3131, tok/sec: 103932.95, flops:91.01, batch-reuse:1
@ 843 train 6.9429 , allloss: 6.9567, dt: 1279.33ms, fracRes: 0.4746, norm(attn): 0.0591, norm(output): 0.4688, norm(x): 0.7395, norm(y): 1.0031, norm:4.1282, tok/sec: 102453.63, flops:89.72, batch-reuse:1
@ 844 train 6.9460 , allloss: 6.9593, dt: 1274.79ms, fracRes: 0.4752, norm(attn): 0.0598, norm(output): 0.4707, norm(x): 0.7397, norm(y): 1.0032, norm:3.5944, tok/sec: 102818.90, flops:90.04, batch-reuse:1
@ 845 train 6.8707 , allloss: 6.8826, dt: 1265.77ms, fracRes: 0.4764, norm(attn): 0.0581, norm(output): 0.4707, norm(x): 0.7468, norm(y): 1.0032, norm:1.7641, tok/sec: 103550.79, flops:90.68, batch-reuse:1
@ 846 train 6.8518 , allloss: 6.8638, dt: 1259.66ms, fracRes: 0.4766, norm(attn): 0.0583, norm(output): 0.4746, norm(x): 0.7497, norm(y): 1.0032, norm:2.0733, tok/sec: 104053.45, flops:91.12, batch-reuse:1
@ 847 train 6.9241 , allloss: 6.9372, dt: 1263.41ms, fracRes: 0.4764, norm(attn): 0.0591, norm(output): 0.4727, norm(x): 0.7502, norm(y): 1.0032, norm:2.1938, tok/sec: 103744.37, flops:90.85, batch-reuse:1
@ 848 train 6.8930 , allloss: 6.9054, dt: 1262.22ms, fracRes: 0.4765, norm(attn): 0.0596, norm(output): 0.4746, norm(x): 0.7519, norm(y): 1.0032, norm:1.5139, tok/sec: 103842.11, flops:90.93, batch-reuse:1
@ 849 train 6.8429 , allloss: 6.8554, dt: 1263.32ms, fracRes: 0.4761, norm(attn): 0.0586, norm(output): 0.4746, norm(x): 0.7532, norm(y): 1.0032, norm:2.2295, tok/sec: 103751.65, flops:90.85, batch-reuse:1
@ 850 train 6.8230 , allloss: 6.8356, dt: 1277.88ms, fracRes: 0.4770, norm(attn): 0.0593, norm(output): 0.4766, norm(x): 0.7526, norm(y): 1.0032, norm:1.6743, tok/sec: 102569.60, flops:89.82, batch-reuse:1
@ 851 train 7.0478 , allloss: 7.0610, dt: 1291.75ms, fracRes: 0.4782, norm(attn): 0.0598, norm(output): 0.4746, norm(x): 0.7536, norm(y): 1.0031, norm:2.4221, tok/sec: 101468.54, flops:88.85, batch-reuse:1
@ 852 train 6.9114 , allloss: 6.9249, dt: 1287.03ms, fracRes: 0.4756, norm(attn): 0.0620, norm(output): 0.4766, norm(x): 0.7552, norm(y): 1.0031, norm:1.7217, tok/sec: 101840.43, flops:89.18, batch-reuse:1
@ 853 train 6.8561 , allloss: 6.8708, dt: 1275.68ms, fracRes: 0.4732, norm(attn): 0.0615, norm(output): 0.4805, norm(x): 0.7570, norm(y): 1.0031, norm:2.0331, tok/sec: 102747.13, flops:89.97, batch-reuse:1
@ 854 train 6.8775 , allloss: 6.8910, dt: 1273.91ms, fracRes: 0.4781, norm(attn): 0.0601, norm(output): 0.4863, norm(x): 0.7644, norm(y): 1.0031, norm:1.8226, tok/sec: 102889.89, flops:90.10, batch-reuse:1
@ 855 train 6.9410 , allloss: 6.9534, dt: 1274.66ms, fracRes: 0.4838, norm(attn): 0.0593, norm(output): 0.4746, norm(x): 0.7680, norm(y): 1.0032, norm:2.0859, tok/sec: 102828.62, flops:90.05, batch-reuse:1
@ 856 train 6.8752 , allloss: 6.8867, dt: 1277.88ms, fracRes: 0.4823, norm(attn): 0.0598, norm(output): 0.4766, norm(x): 0.7678, norm(y): 1.0032, norm:1.5293, tok/sec: 102570.25, flops:89.82, batch-reuse:1
@ 857 train 6.8723 , allloss: 6.8852, dt: 1272.68ms, fracRes: 0.4751, norm(attn): 0.0608, norm(output): 0.4883, norm(x): 0.7650, norm(y): 1.0031, norm:1.5893, tok/sec: 102988.96, flops:90.19, batch-reuse:1
@ 858 train 6.9107 , allloss: 6.9242, dt: 1270.68ms, fracRes: 0.4733, norm(attn): 0.0608, norm(output): 0.4863, norm(x): 0.7636, norm(y): 1.0031, norm:1.4512, tok/sec: 103150.70, flops:90.33, batch-reuse:1
@ 859 train 6.8115 , allloss: 6.8239, dt: 1279.61ms, fracRes: 0.4775, norm(attn): 0.0615, norm(output): 0.4805, norm(x): 0.7666, norm(y): 1.0031, norm:1.4385, tok/sec: 102431.14, flops:89.70, batch-reuse:1
@ 860 train 6.8512 , allloss: 6.8632, dt: 1274.88ms, fracRes: 0.4829, norm(attn): 0.0596, norm(output): 0.4785, norm(x): 0.7760, norm(y): 1.0032, norm:1.0717, tok/sec: 102811.15, flops:90.03, batch-reuse:1
@ 861 train 6.8607 , allloss: 6.8727, dt: 1266.27ms, fracRes: 0.4853, norm(attn): 0.0586, norm(output): 0.4844, norm(x): 0.7781, norm(y): 1.0032, norm:1.7541, tok/sec: 103510.30, flops:90.64, batch-reuse:1
@ 862 train 6.9174 , allloss: 6.9297, dt: 1270.19ms, fracRes: 0.4838, norm(attn): 0.0596, norm(output): 0.4824, norm(x): 0.7767, norm(y): 1.0032, norm:0.7358, tok/sec: 103190.47, flops:90.36, batch-reuse:1
@ 863 train 6.8739 , allloss: 6.8868, dt: 1254.54ms, fracRes: 0.4828, norm(attn): 0.0598, norm(output): 0.4766, norm(x): 0.7724, norm(y): 1.0032, norm:1.9670, tok/sec: 104478.02, flops:91.49, batch-reuse:1
@ 864 train 6.8746 , allloss: 6.8869, dt: 1242.30ms, fracRes: 0.4869, norm(attn): 0.0581, norm(output): 0.4805, norm(x): 0.7767, norm(y): 1.0032, norm:0.6730, tok/sec: 105507.32, flops:92.39, batch-reuse:1
@ 865 train 6.8093 , allloss: 6.8210, dt: 1289.64ms, fracRes: 0.4877, norm(attn): 0.0569, norm(output): 0.4766, norm(x): 0.7801, norm(y): 1.0032, norm:1.8816, tok/sec: 101634.40, flops:89.00, batch-reuse:1
@ 866 train 6.7633 , allloss: 6.7744, dt: 1291.47ms, fracRes: 0.4881, norm(attn): 0.0569, norm(output): 0.4727, norm(x): 0.7822, norm(y): 1.0033, norm:0.9013, tok/sec: 101490.40, flops:88.87, batch-reuse:1
@ 867 train 6.8612 , allloss: 6.8732, dt: 1264.45ms, fracRes: 0.4892, norm(attn): 0.0574, norm(output): 0.4746, norm(x): 0.7822, norm(y): 1.0033, norm:1.9580, tok/sec: 103659.19, flops:90.77, batch-reuse:1
@ 868 train 6.7897 , allloss: 6.8017, dt: 1285.73ms, fracRes: 0.4879, norm(attn): 0.0557, norm(output): 0.4727, norm(x): 0.7779, norm(y): 1.0032, norm:1.1791, tok/sec: 101943.58, flops:89.27, batch-reuse:1
@ 869 train 6.8291 , allloss: 6.8409, dt: 1277.72ms, fracRes: 0.4875, norm(attn): 0.0569, norm(output): 0.4746, norm(x): 0.7812, norm(y): 1.0032, norm:1.4870, tok/sec: 102582.80, flops:89.83, batch-reuse:1
@ 870 train 6.8125 , allloss: 6.8237, dt: 1295.70ms, fracRes: 0.4896, norm(attn): 0.0562, norm(output): 0.4727, norm(x): 0.7914, norm(y): 1.0032, norm:1.5318, tok/sec: 101158.92, flops:88.58, batch-reuse:1
@ 871 train 6.8387 , allloss: 6.8502, dt: 1307.21ms, fracRes: 0.4889, norm(attn): 0.0566, norm(output): 0.4746, norm(x): 0.7909, norm(y): 1.0032, norm:1.0874, tok/sec: 100268.26, flops:87.80, batch-reuse:1
@ 872 train 6.7955 , allloss: 6.8069, dt: 1292.94ms, fracRes: 0.4879, norm(attn): 0.0559, norm(output): 0.4727, norm(x): 0.7841, norm(y): 1.0032, norm:1.6579, tok/sec: 101375.41, flops:88.77, batch-reuse:1
@ 873 train 6.8692 , allloss: 6.8809, dt: 1282.58ms, fracRes: 0.4878, norm(attn): 0.0552, norm(output): 0.4844, norm(x): 0.7869, norm(y): 1.0032, norm:1.8377, tok/sec: 102194.08, flops:89.49, batch-reuse:1
@ 874 train 6.7946 , allloss: 6.8066, dt: 1272.87ms, fracRes: 0.4849, norm(attn): 0.0557, norm(output): 0.4727, norm(x): 0.7830, norm(y): 1.0032, norm:1.7774, tok/sec: 102973.67, flops:90.17, batch-reuse:1
@ 875 train 6.7804 , allloss: 6.7925, dt: 1259.58ms, fracRes: 0.4840, norm(attn): 0.0566, norm(output): 0.4766, norm(x): 0.7861, norm(y): 1.0032, norm:0.9101, tok/sec: 104059.86, flops:91.12, batch-reuse:1
@ 876 train 6.8049 , allloss: 6.8162, dt: 1263.60ms, fracRes: 0.4856, norm(attn): 0.0552, norm(output): 0.4785, norm(x): 0.7893, norm(y): 1.0032, norm:2.0856, tok/sec: 103728.88, flops:90.83, batch-reuse:1
@ 877 train 6.8124 , allloss: 6.8237, dt: 1260.39ms, fracRes: 0.4850, norm(attn): 0.0564, norm(output): 0.4824, norm(x): 0.7906, norm(y): 1.0032, norm:1.2591, tok/sec: 103993.03, flops:91.07, batch-reuse:1
@ 878 train 6.7729 , allloss: 6.7840, dt: 1297.73ms, fracRes: 0.4848, norm(attn): 0.0562, norm(output): 0.4766, norm(x): 0.7908, norm(y): 1.0032, norm:1.0253, tok/sec: 101000.93, flops:88.45, batch-reuse:1
@ 879 train 6.7754 , allloss: 6.7875, dt: 1271.65ms, fracRes: 0.4835, norm(attn): 0.0562, norm(output): 0.4785, norm(x): 0.7877, norm(y): 1.0032, norm:1.3504, tok/sec: 103072.36, flops:90.26, batch-reuse:1
@ 880 train 6.8247 , allloss: 6.8365, dt: 1270.71ms, fracRes: 0.4844, norm(attn): 0.0571, norm(output): 0.4785, norm(x): 0.7914, norm(y): 1.0032, norm:1.0389, tok/sec: 103148.81, flops:90.33, batch-reuse:1
@ 881 train 6.7703 , allloss: 6.7812, dt: 1280.54ms, fracRes: 0.4843, norm(attn): 0.0569, norm(output): 0.4805, norm(x): 0.7919, norm(y): 1.0032, norm:1.6600, tok/sec: 102356.61, flops:89.63, batch-reuse:1
@ 882 train 6.7774 , allloss: 6.7876, dt: 1259.08ms, fracRes: 0.4846, norm(attn): 0.0562, norm(output): 0.4824, norm(x): 0.7968, norm(y): 1.0032, norm:1.3088, tok/sec: 104101.27, flops:91.16, batch-reuse:1
@ 883 train 6.7239 , allloss: 6.7347, dt: 1278.72ms, fracRes: 0.4837, norm(attn): 0.0566, norm(output): 0.4824, norm(x): 0.7946, norm(y): 1.0032, norm:1.3462, tok/sec: 102502.15, flops:89.76, batch-reuse:1
@ 884 train 6.7262 , allloss: 6.7369, dt: 1298.53ms, fracRes: 0.4818, norm(attn): 0.0566, norm(output): 0.4824, norm(x): 0.7956, norm(y): 1.0032, norm:1.4346, tok/sec: 100938.88, flops:88.39, batch-reuse:1
@ 885 train 6.7820 , allloss: 6.7936, dt: 1281.99ms, fracRes: 0.4819, norm(attn): 0.0571, norm(output): 0.4805, norm(x): 0.7924, norm(y): 1.0032, norm:1.5780, tok/sec: 102240.74, flops:89.53, batch-reuse:1
@ 886 train 6.8097 , allloss: 6.8209, dt: 1263.15ms, fracRes: 0.4838, norm(attn): 0.0559, norm(output): 0.4844, norm(x): 0.7938, norm(y): 1.0032, norm:1.0715, tok/sec: 103765.73, flops:90.87, batch-reuse:1
@ 887 train 6.7411 , allloss: 6.7515, dt: 1256.41ms, fracRes: 0.4845, norm(attn): 0.0562, norm(output): 0.4785, norm(x): 0.7990, norm(y): 1.0032, norm:0.6362, tok/sec: 104322.94, flops:91.35, batch-reuse:1
@ 888 train 6.7756 , allloss: 6.7853, dt: 1289.05ms, fracRes: 0.4862, norm(attn): 0.0559, norm(output): 0.4844, norm(x): 0.8019, norm(y): 1.0033, norm:1.0333, tok/sec: 101681.19, flops:89.04, batch-reuse:1
@ 889 train 6.8009 , allloss: 6.8109, dt: 1259.02ms, fracRes: 0.4862, norm(attn): 0.0552, norm(output): 0.4785, norm(x): 0.8007, norm(y): 1.0032, norm:2.0526, tok/sec: 104106.48, flops:91.16, batch-reuse:1
@ 890 train 6.8762 , allloss: 6.8868, dt: 1271.54ms, fracRes: 0.4859, norm(attn): 0.0562, norm(output): 0.4844, norm(x): 0.7989, norm(y): 1.0032, norm:1.5207, tok/sec: 103081.44, flops:90.27, batch-reuse:1
@ 891 train 6.7833 , allloss: 6.7936, dt: 1283.36ms, fracRes: 0.4858, norm(attn): 0.0562, norm(output): 0.4824, norm(x): 0.8016, norm(y): 1.0032, norm:1.3625, tok/sec: 102131.87, flops:89.44, batch-reuse:1
@ 892 train 6.7076 , allloss: 6.7177, dt: 1259.55ms, fracRes: 0.4851, norm(attn): 0.0559, norm(output): 0.4824, norm(x): 0.8005, norm(y): 1.0032, norm:0.8315, tok/sec: 104062.32, flops:91.13, batch-reuse:1
@ 893 train 6.6516 , allloss: 6.6617, dt: 1274.22ms, fracRes: 0.4864, norm(attn): 0.0559, norm(output): 0.4824, norm(x): 0.8024, norm(y): 1.0032, norm:1.7007, tok/sec: 102864.65, flops:90.08, batch-reuse:1
@ 894 train 6.7958 , allloss: 6.8057, dt: 1264.54ms, fracRes: 0.4869, norm(attn): 0.0566, norm(output): 0.4785, norm(x): 0.8041, norm(y): 1.0033, norm:2.1630, tok/sec: 103652.28, flops:90.77, batch-reuse:1
@ 895 train 6.8138 , allloss: 6.8238, dt: 1284.41ms, fracRes: 0.4874, norm(attn): 0.0562, norm(output): 0.4863, norm(x): 0.8083, norm(y): 1.0033, norm:1.7022, tok/sec: 102048.22, flops:89.36, batch-reuse:1
@ 896 train 6.6627 , allloss: 6.6728, dt: 1281.35ms, fracRes: 0.4850, norm(attn): 0.0562, norm(output): 0.4805, norm(x): 0.8025, norm(y): 1.0032, norm:1.1455, tok/sec: 102292.06, flops:89.58, batch-reuse:1
@ 897 train 6.7916 , allloss: 6.8025, dt: 1258.22ms, fracRes: 0.4843, norm(attn): 0.0569, norm(output): 0.4766, norm(x): 0.7964, norm(y): 1.0032, norm:2.5459, tok/sec: 104172.78, flops:91.22, batch-reuse:1
@ 898 train 6.7968 , allloss: 6.8075, dt: 1252.57ms, fracRes: 0.4848, norm(attn): 0.0569, norm(output): 0.4844, norm(x): 0.8008, norm(y): 1.0032, norm:0.9455, tok/sec: 104642.82, flops:91.63, batch-reuse:1
@ 899 train 6.7874 , allloss: 6.7975, dt: 1243.95ms, fracRes: 0.4856, norm(attn): 0.0557, norm(output): 0.4883, norm(x): 0.8099, norm(y): 1.0032, norm:4.0464, tok/sec: 105367.89, flops:92.27, batch-reuse:1
@ 900 train 6.8327 , allloss: 6.8434, dt: 1272.05ms, fracRes: 0.4852, norm(attn): 0.0574, norm(output): 0.4883, norm(x): 0.8109, norm(y): 1.0032, norm:1.9603, tok/sec: 103040.02, flops:90.23, batch-reuse:1
@ 901 train 6.7627 , allloss: 6.7731, dt: 1294.70ms, fracRes: 0.4857, norm(attn): 0.0579, norm(output): 0.4805, norm(x): 0.8079, norm(y): 1.0032, norm:2.9450, tok/sec: 101237.15, flops:88.65, batch-reuse:1
@ 902 train 6.7245 , allloss: 6.7354, dt: 1270.63ms, fracRes: 0.4863, norm(attn): 0.0579, norm(output): 0.4785, norm(x): 0.8065, norm(y): 1.0032, norm:2.5180, tok/sec: 103155.18, flops:90.33, batch-reuse:1
@ 903 train 6.7376 , allloss: 6.7487, dt: 1293.59ms, fracRes: 0.4874, norm(attn): 0.0566, norm(output): 0.4844, norm(x): 0.8094, norm(y): 1.0032, norm:2.6512, tok/sec: 101324.20, flops:88.73, batch-reuse:1
@ 904 train 6.7388 , allloss: 6.7507, dt: 1311.66ms, fracRes: 0.4868, norm(attn): 0.0576, norm(output): 0.4824, norm(x): 0.8107, norm(y): 1.0032, norm:2.3200, tok/sec: 99928.33, flops:87.51, batch-reuse:1
@ 905 train 6.7976 , allloss: 6.8094, dt: 1288.41ms, fracRes: 0.4854, norm(attn): 0.0581, norm(output): 0.4883, norm(x): 0.8072, norm(y): 1.0032, norm:1.9092, tok/sec: 101731.71, flops:89.09, batch-reuse:1
@ 906 train 6.7628 , allloss: 6.7749, dt: 1271.01ms, fracRes: 0.4857, norm(attn): 0.0566, norm(output): 0.4922, norm(x): 0.8112, norm(y): 1.0032, norm:2.3594, tok/sec: 103124.18, flops:90.30, batch-reuse:1
@ 907 train 6.6439 , allloss: 6.6552, dt: 1261.52ms, fracRes: 0.4871, norm(attn): 0.0576, norm(output): 0.4922, norm(x): 0.8148, norm(y): 1.0032, norm:1.3099, tok/sec: 103900.44, flops:90.98, batch-reuse:1
@ 908 train 6.7799 , allloss: 6.7905, dt: 1276.77ms, fracRes: 0.4877, norm(attn): 0.0588, norm(output): 0.4922, norm(x): 0.8208, norm(y): 1.0033, norm:2.9170, tok/sec: 102659.16, flops:89.90, batch-reuse:1
@ 909 train 6.9661 , allloss: 6.9775, dt: 1267.01ms, fracRes: 0.4852, norm(attn): 0.0593, norm(output): 0.4980, norm(x): 0.8221, norm(y): 1.0031, norm:2.2164, tok/sec: 103449.80, flops:90.59, batch-reuse:1
@ 910 train 6.8016 , allloss: 6.8135, dt: 1283.71ms, fracRes: 0.4852, norm(attn): 0.0581, norm(output): 0.4980, norm(x): 0.8172, norm(y): 1.0031, norm:3.3077, tok/sec: 102104.17, flops:89.41, batch-reuse:1
@ 911 train 6.8645 , allloss: 6.8767, dt: 1277.31ms, fracRes: 0.4874, norm(attn): 0.0586, norm(output): 0.4980, norm(x): 0.8204, norm(y): 1.0031, norm:2.3180, tok/sec: 102615.89, flops:89.86, batch-reuse:1
@ 912 train 6.8357 , allloss: 6.8482, dt: 1282.18ms, fracRes: 0.4900, norm(attn): 0.0579, norm(output): 0.4922, norm(x): 0.8236, norm(y): 1.0032, norm:3.7084, tok/sec: 102226.18, flops:89.52, batch-reuse:1
@ 913 train 6.8115 , allloss: 6.8234, dt: 1275.22ms, fracRes: 0.4876, norm(attn): 0.0588, norm(output): 0.4961, norm(x): 0.8293, norm(y): 1.0032, norm:3.0393, tok/sec: 102783.71, flops:90.01, batch-reuse:1
@ 914 train 6.7743 , allloss: 6.7856, dt: 1287.09ms, fracRes: 0.4859, norm(attn): 0.0581, norm(output): 0.5039, norm(x): 0.8355, norm(y): 1.0032, norm:1.4800, tok/sec: 101836.22, flops:89.18, batch-reuse:1
@ 915 train 6.8265 , allloss: 6.9994, dt: 1272.02ms, fracRes: 0.4611, norm(attn): 0.0625, norm(output): 0.5000, norm(x): 0.8088, norm(y): 1.0031, norm:8.0538, tok/sec: 103042.07, flops:90.23, batch-reuse:1
@ 916 train 6.7539 , allloss: 6.7665, dt: 1248.09ms, fracRes: 0.4797, norm(attn): 0.0596, norm(output): 0.5000, norm(x): 0.8278, norm(y): 1.0031, norm:2.6046, tok/sec: 105017.84, flops:91.96, batch-reuse:1
@ 917 train 6.7800 , allloss: 6.7928, dt: 1257.84ms, fracRes: 0.4753, norm(attn): 0.0620, norm(output): 0.5000, norm(x): 0.8241, norm(y): 1.0032, norm:1.7590, tok/sec: 104204.08, flops:91.25, batch-reuse:1
@ 918 train 6.7813 , allloss: 6.7942, dt: 1295.07ms, fracRes: 0.4744, norm(attn): 0.0625, norm(output): 0.5000, norm(x): 0.8270, norm(y): 1.0032, norm:1.5987, tok/sec: 101208.10, flops:88.63, batch-reuse:1
@ 919 train 6.7765 , allloss: 6.7885, dt: 1291.53ms, fracRes: 0.4796, norm(attn): 0.0605, norm(output): 0.5000, norm(x): 0.8369, norm(y): 1.0033, norm:3.3110, tok/sec: 101485.79, flops:88.87, batch-reuse:1
@ 920 train 6.7920 , allloss: 6.8044, dt: 1280.84ms, fracRes: 0.4805, norm(attn): 0.0608, norm(output): 0.5039, norm(x): 0.8446, norm(y): 1.0033, norm:1.8349, tok/sec: 102332.83, flops:89.61, batch-reuse:1
@ 921 train 6.7992 , allloss: 6.8113, dt: 1277.12ms, fracRes: 0.4789, norm(attn): 0.0618, norm(output): 0.5039, norm(x): 0.8440, norm(y): 1.0033, norm:2.6932, tok/sec: 102630.55, flops:89.87, batch-reuse:1
@ 922 train 6.8207 , allloss: 6.8336, dt: 1269.46ms, fracRes: 0.4768, norm(attn): 0.0625, norm(output): 0.5039, norm(x): 0.8448, norm(y): 1.0033, norm:2.6379, tok/sec: 103249.89, flops:90.41, batch-reuse:1
@ 923 train 6.7357 , allloss: 6.7484, dt: 1269.71ms, fracRes: 0.4772, norm(attn): 0.0620, norm(output): 0.5039, norm(x): 0.8461, norm(y): 1.0033, norm:1.2536, tok/sec: 103229.69, flops:90.40, batch-reuse:1
@ 924 train 6.7087 , allloss: 6.7215, dt: 1266.43ms, fracRes: 0.4795, norm(attn): 0.0623, norm(output): 0.5039, norm(x): 0.8508, norm(y): 1.0033, norm:1.3364, tok/sec: 103497.49, flops:90.63, batch-reuse:1
@ 925 train 6.7644 , allloss: 6.7770, dt: 1242.47ms, fracRes: 0.4805, norm(attn): 0.0630, norm(output): 0.5000, norm(x): 0.8516, norm(y): 1.0033, norm:1.9872, tok/sec: 105493.21, flops:92.38, batch-reuse:1
@ 926 train 6.7242 , allloss: 6.7366, dt: 1253.64ms, fracRes: 0.4787, norm(attn): 0.0625, norm(output): 0.5039, norm(x): 0.8534, norm(y): 1.0033, norm:1.2640, tok/sec: 104553.50, flops:91.56, batch-reuse:1
@ 927 train 6.7187 , allloss: 6.7308, dt: 1279.99ms, fracRes: 0.4799, norm(attn): 0.0625, norm(output): 0.5039, norm(x): 0.8597, norm(y): 1.0033, norm:2.4965, tok/sec: 102401.09, flops:89.67, batch-reuse:1
@ 928 train 6.8487 , allloss: 6.8598, dt: 1282.45ms, fracRes: 0.4826, norm(attn): 0.0623, norm(output): 0.5039, norm(x): 0.8670, norm(y): 1.0033, norm:1.4048, tok/sec: 102204.53, flops:89.50, batch-reuse:1
@ 929 train 6.9271 , allloss: 6.9389, dt: 1263.47ms, fracRes: 0.4864, norm(attn): 0.0630, norm(output): 0.5039, norm(x): 0.8698, norm(y): 1.0033, norm:2.1789, tok/sec: 103739.92, flops:90.84, batch-reuse:1
@ 930 train 6.8306 , allloss: 6.8421, dt: 1266.93ms, fracRes: 0.4879, norm(attn): 0.0620, norm(output): 0.5039, norm(x): 0.8731, norm(y): 1.0034, norm:2.1414, tok/sec: 103456.05, flops:90.59, batch-reuse:1
@ 931 train 6.9697 , allloss: 6.9818, dt: 1268.45ms, fracRes: 0.4886, norm(attn): 0.0618, norm(output): 0.5078, norm(x): 0.8795, norm(y): 1.0033, norm:1.8348, tok/sec: 103332.14, flops:90.49, batch-reuse:1
@ 932 train 6.8781 , allloss: 6.8901, dt: 1270.19ms, fracRes: 0.4861, norm(attn): 0.0630, norm(output): 0.5117, norm(x): 0.8778, norm(y): 1.0033, norm:1.5725, tok/sec: 103190.69, flops:90.36, batch-reuse:1
@ 933 train 6.8917 , allloss: 6.9028, dt: 1265.34ms, fracRes: 0.4837, norm(attn): 0.0635, norm(output): 0.5117, norm(x): 0.8724, norm(y): 1.0033, norm:1.9529, tok/sec: 103586.22, flops:90.71, batch-reuse:1
@ 934 train 6.8837 , allloss: 6.8941, dt: 1245.79ms, fracRes: 0.4866, norm(attn): 0.0635, norm(output): 0.5078, norm(x): 0.8782, norm(y): 1.0034, norm:1.6521, tok/sec: 105212.36, flops:92.13, batch-reuse:1
@ 935 train 6.8546 , allloss: 6.8657, dt: 1295.32ms, fracRes: 0.4871, norm(attn): 0.0640, norm(output): 0.5117, norm(x): 0.8759, norm(y): 1.0034, norm:1.4952, tok/sec: 101188.61, flops:88.61, batch-reuse:1
@ 936 train 6.8681 , allloss: 6.8795, dt: 1262.87ms, fracRes: 0.4874, norm(attn): 0.0645, norm(output): 0.5078, norm(x): 0.8746, norm(y): 1.0035, norm:1.6099, tok/sec: 103789.39, flops:90.89, batch-reuse:1
@ 937 train 6.8703 , allloss: 6.8809, dt: 1269.52ms, fracRes: 0.4891, norm(attn): 0.0635, norm(output): 0.5039, norm(x): 0.8808, norm(y): 1.0035, norm:0.9200, tok/sec: 103245.32, flops:90.41, batch-reuse:1
@ 938 train 6.8141 , allloss: 6.8247, dt: 1288.99ms, fracRes: 0.4883, norm(attn): 0.0625, norm(output): 0.5039, norm(x): 0.8768, norm(y): 1.0035, norm:0.6609, tok/sec: 101685.72, flops:89.04, batch-reuse:1
@ 939 train 6.8543 , allloss: 6.8649, dt: 1266.02ms, fracRes: 0.4881, norm(attn): 0.0625, norm(output): 0.5039, norm(x): 0.8781, norm(y): 1.0035, norm:0.8240, tok/sec: 103530.88, flops:90.66, batch-reuse:1
@ 940 train 6.8607 , allloss: 6.8709, dt: 1257.12ms, fracRes: 0.4891, norm(attn): 0.0625, norm(output): 0.5039, norm(x): 0.8815, norm(y): 1.0035, norm:0.9019, tok/sec: 104263.68, flops:91.30, batch-reuse:1
@ 941 train 6.8690 , allloss: 6.8797, dt: 1266.74ms, fracRes: 0.4893, norm(attn): 0.0625, norm(output): 0.5078, norm(x): 0.8836, norm(y): 1.0035, norm:0.9600, tok/sec: 103471.61, flops:90.61, batch-reuse:1
@ 942 train 6.8387 , allloss: 6.8489, dt: 1289.04ms, fracRes: 0.4886, norm(attn): 0.0625, norm(output): 0.5039, norm(x): 0.8797, norm(y): 1.0035, norm:1.8746, tok/sec: 101682.24, flops:89.04, batch-reuse:1
@ 943 train 6.8464 , allloss: 6.8571, dt: 1259.93ms, fracRes: 0.4893, norm(attn): 0.0610, norm(output): 0.5039, norm(x): 0.8821, norm(y): 1.0035, norm:1.3838, tok/sec: 104031.50, flops:91.10, batch-reuse:1
@ 944 train 6.8371 , allloss: 6.8473, dt: 1263.78ms, fracRes: 0.4893, norm(attn): 0.0620, norm(output): 0.5039, norm(x): 0.8845, norm(y): 1.0035, norm:0.8223, tok/sec: 103714.22, flops:90.82, batch-reuse:1
@ 945 train 6.9196 , allloss: 6.9304, dt: 1263.17ms, fracRes: 0.4899, norm(attn): 0.0635, norm(output): 0.5078, norm(x): 0.8876, norm(y): 1.0035, norm:0.7516, tok/sec: 103764.51, flops:90.87, batch-reuse:1
@ 946 train 6.8430 , allloss: 6.8539, dt: 1267.19ms, fracRes: 0.4865, norm(attn): 0.0630, norm(output): 0.5078, norm(x): 0.8801, norm(y): 1.0035, norm:0.7130, tok/sec: 103435.22, flops:90.58, batch-reuse:1
@ 947 train 6.8101 , allloss: 6.8200, dt: 1268.56ms, fracRes: 0.4874, norm(attn): 0.0620, norm(output): 0.5039, norm(x): 0.8807, norm(y): 1.0035, norm:1.2162, tok/sec: 103323.30, flops:90.48, batch-reuse:1
@ 948 train 6.8203 , allloss: 6.8296, dt: 1276.25ms, fracRes: 0.4878, norm(attn): 0.0620, norm(output): 0.5078, norm(x): 0.8862, norm(y): 1.0035, norm:1.5717, tok/sec: 102700.99, flops:89.93, batch-reuse:1
@ 949 train 6.8770 , allloss: 6.8865, dt: 1268.95ms, fracRes: 0.4899, norm(attn): 0.0618, norm(output): 0.5039, norm(x): 0.8850, norm(y): 1.0035, norm:1.3001, tok/sec: 103291.99, flops:90.45, batch-reuse:1
@ 950 train 6.8454 , allloss: 6.8552, dt: 1271.06ms, fracRes: 0.4905, norm(attn): 0.0605, norm(output): 0.5039, norm(x): 0.8861, norm(y): 1.0036, norm:2.0325, tok/sec: 103119.90, flops:90.30, batch-reuse:1
@ 951 train 6.8944 , allloss: 6.9043, dt: 1262.24ms, fracRes: 0.4881, norm(attn): 0.0620, norm(output): 0.5078, norm(x): 0.8825, norm(y): 1.0035, norm:0.9079, tok/sec: 103840.80, flops:90.93, batch-reuse:1
@ 952 train 6.8467 , allloss: 6.8568, dt: 1284.93ms, fracRes: 0.4880, norm(attn): 0.0630, norm(output): 0.5078, norm(x): 0.8839, norm(y): 1.0035, norm:1.7930, tok/sec: 102007.17, flops:89.33, batch-reuse:1
@ 953 train 6.8188 , allloss: 6.8283, dt: 1259.72ms, fracRes: 0.4901, norm(attn): 0.0605, norm(output): 0.5039, norm(x): 0.8884, norm(y): 1.0035, norm:0.9013, tok/sec: 104048.26, flops:91.11, batch-reuse:1
@ 954 train 6.7654 , allloss: 6.7748, dt: 1265.13ms, fracRes: 0.4889, norm(attn): 0.0608, norm(output): 0.5039, norm(x): 0.8845, norm(y): 1.0036, norm:1.6310, tok/sec: 103603.42, flops:90.72, batch-reuse:1
@ 955 train 6.8382 , allloss: 6.8481, dt: 1267.41ms, fracRes: 0.4865, norm(attn): 0.0620, norm(output): 0.5078, norm(x): 0.8842, norm(y): 1.0035, norm:1.7257, tok/sec: 103417.20, flops:90.56, batch-reuse:1
@ 956 train 6.7795 , allloss: 6.7888, dt: 1255.52ms, fracRes: 0.4883, norm(attn): 0.0603, norm(output): 0.5039, norm(x): 0.8856, norm(y): 1.0035, norm:0.6939, tok/sec: 104396.91, flops:91.42, batch-reuse:1
@ 957 train 6.8158 , allloss: 6.8248, dt: 1286.95ms, fracRes: 0.4912, norm(attn): 0.0593, norm(output): 0.5039, norm(x): 0.8912, norm(y): 1.0036, norm:1.1342, tok/sec: 101847.01, flops:89.19, batch-reuse:1
@ 958 train 6.8355 , allloss: 6.8445, dt: 1313.31ms, fracRes: 0.4922, norm(attn): 0.0601, norm(output): 0.5078, norm(x): 0.8926, norm(y): 1.0035, norm:1.4202, tok/sec: 99802.41, flops:87.40, batch-reuse:1
@ 959 train 6.7357 , allloss: 6.7450, dt: 1314.63ms, fracRes: 0.4904, norm(attn): 0.0598, norm(output): 0.5039, norm(x): 0.8898, norm(y): 1.0035, norm:1.5348, tok/sec: 99702.94, flops:87.31, batch-reuse:1
@ 960 train 6.9059 , allloss: 6.9150, dt: 1267.67ms, fracRes: 0.4905, norm(attn): 0.0601, norm(output): 0.5039, norm(x): 0.8914, norm(y): 1.0035, norm:3.2627, tok/sec: 103396.29, flops:90.54, batch-reuse:1
@ 961 train 6.8088 , allloss: 6.8178, dt: 1265.60ms, fracRes: 0.4900, norm(attn): 0.0591, norm(output): 0.5039, norm(x): 0.8893, norm(y): 1.0035, norm:1.3608, tok/sec: 103564.78, flops:90.69, batch-reuse:1
@ 962 train 6.8716 , allloss: 6.8809, dt: 1282.32ms, fracRes: 0.4905, norm(attn): 0.0596, norm(output): 0.5039, norm(x): 0.8888, norm(y): 1.0035, norm:3.8332, tok/sec: 102214.64, flops:89.51, batch-reuse:1
@ 963 train 6.9006 , allloss: 6.9103, dt: 1272.27ms, fracRes: 0.4918, norm(attn): 0.0608, norm(output): 0.5117, norm(x): 0.8953, norm(y): 1.0035, norm:2.5740, tok/sec: 103022.41, flops:90.22, batch-reuse:1
@ 964 train 6.8210 , allloss: 6.8302, dt: 1293.49ms, fracRes: 0.4938, norm(attn): 0.0593, norm(output): 0.5039, norm(x): 0.9010, norm(y): 1.0035, norm:1.0082, tok/sec: 101331.97, flops:88.73, batch-reuse:1
@ 965 train 6.8470 , allloss: 6.8567, dt: 1291.13ms, fracRes: 0.4897, norm(attn): 0.0601, norm(output): 0.5039, norm(x): 0.8918, norm(y): 1.0035, norm:2.6408, tok/sec: 101517.63, flops:88.90, batch-reuse:1
@ 966 train 6.8365 , allloss: 6.8481, dt: 1278.51ms, fracRes: 0.4871, norm(attn): 0.0608, norm(output): 0.5078, norm(x): 0.8885, norm(y): 1.0034, norm:1.8444, tok/sec: 102519.60, flops:89.77, batch-reuse:1
@ 967 train 6.8535 , allloss: 6.8645, dt: 1254.89ms, fracRes: 0.4863, norm(attn): 0.0623, norm(output): 0.5234, norm(x): 0.8957, norm(y): 1.0033, norm:1.4072, tok/sec: 104448.80, flops:91.46, batch-reuse:1
@ 968 train 6.8779 , allloss: 6.8882, dt: 1256.71ms, fracRes: 0.4869, norm(attn): 0.0620, norm(output): 0.5117, norm(x): 0.9011, norm(y): 1.0034, norm:2.0617, tok/sec: 104297.69, flops:91.33, batch-reuse:1
@ 969 train 6.8134 , allloss: 6.8232, dt: 1262.98ms, fracRes: 0.4862, norm(attn): 0.0625, norm(output): 0.5156, norm(x): 0.9077, norm(y): 1.0034, norm:1.5937, tok/sec: 103779.83, flops:90.88, batch-reuse:1
@ 970 train 6.8154 , allloss: 6.8243, dt: 1275.64ms, fracRes: 0.4870, norm(attn): 0.0603, norm(output): 0.5156, norm(x): 0.9060, norm(y): 1.0034, norm:0.9891, tok/sec: 102749.80, flops:89.98, batch-reuse:1
@ 971 train 6.8502 , allloss: 6.8601, dt: 1274.28ms, fracRes: 0.4879, norm(attn): 0.0593, norm(output): 0.5078, norm(x): 0.8995, norm(y): 1.0034, norm:2.7795, tok/sec: 102859.30, flops:90.07, batch-reuse:1
@ 972 train 6.8715 , allloss: 6.8831, dt: 1299.56ms, fracRes: 0.4892, norm(attn): 0.0603, norm(output): 0.5078, norm(x): 0.8998, norm(y): 1.0034, norm:2.6009, tok/sec: 100858.91, flops:88.32, batch-reuse:1
@ 973 train 6.8787 , allloss: 6.8911, dt: 1288.32ms, fracRes: 0.4905, norm(attn): 0.0603, norm(output): 0.5117, norm(x): 0.9094, norm(y): 1.0034, norm:2.7236, tok/sec: 101739.03, flops:89.09, batch-reuse:1
@ 974 train 6.8883 , allloss: 6.9007, dt: 1257.73ms, fracRes: 0.4909, norm(attn): 0.0598, norm(output): 0.5156, norm(x): 0.9153, norm(y): 1.0034, norm:2.8147, tok/sec: 104213.56, flops:91.26, batch-reuse:1
@ 975 train 6.8615 , allloss: 6.8728, dt: 1266.31ms, fracRes: 0.4941, norm(attn): 0.0588, norm(output): 0.5156, norm(x): 0.9285, norm(y): 1.0034, norm:1.2499, tok/sec: 103507.02, flops:90.64, batch-reuse:1
@ 976 train 6.7846 , allloss: 6.7953, dt: 1287.21ms, fracRes: 0.4933, norm(attn): 0.0574, norm(output): 0.5156, norm(x): 0.9327, norm(y): 1.0034, norm:2.0996, tok/sec: 101826.17, flops:89.17, batch-reuse:1
@ 977 train 6.7600 , allloss: 6.7709, dt: 1283.92ms, fracRes: 0.4908, norm(attn): 0.0574, norm(output): 0.5195, norm(x): 0.9314, norm(y): 1.0033, norm:1.0436, tok/sec: 102087.14, flops:89.40, batch-reuse:1
@ 978 train 6.8349 , allloss: 6.8459, dt: 1271.67ms, fracRes: 0.4880, norm(attn): 0.0583, norm(output): 0.5273, norm(x): 0.9273, norm(y): 1.0034, norm:2.3325, tok/sec: 103070.47, flops:90.26, batch-reuse:1
@ 979 train 6.7935 , allloss: 6.8042, dt: 1244.51ms, fracRes: 0.4875, norm(attn): 0.0583, norm(output): 0.5273, norm(x): 0.9260, norm(y): 1.0034, norm:2.3799, tok/sec: 105319.91, flops:92.23, batch-reuse:1
@ 980 train 6.6983 , allloss: 6.7090, dt: 1270.42ms, fracRes: 0.4873, norm(attn): 0.0583, norm(output): 0.5273, norm(x): 0.9277, norm(y): 1.0034, norm:2.5367, tok/sec: 103172.56, flops:90.35, batch-reuse:1
@ 981 train 6.7715 , allloss: 6.7822, dt: 1262.04ms, fracRes: 0.4898, norm(attn): 0.0593, norm(output): 0.5195, norm(x): 0.9284, norm(y): 1.0034, norm:3.1571, tok/sec: 103857.20, flops:90.95, batch-reuse:1
@ 982 train 6.7451 , allloss: 6.7550, dt: 1276.03ms, fracRes: 0.4900, norm(attn): 0.0588, norm(output): 0.5273, norm(x): 0.9345, norm(y): 1.0035, norm:1.2193, tok/sec: 102718.26, flops:89.95, batch-reuse:1
@ 983 train 6.8333 , allloss: 6.8452, dt: 1266.90ms, fracRes: 0.4865, norm(attn): 0.0605, norm(output): 0.5312, norm(x): 0.9334, norm(y): 1.0034, norm:1.4732, tok/sec: 103459.10, flops:90.60, batch-reuse:1
@ 984 train 6.7492 , allloss: 6.7592, dt: 1284.04ms, fracRes: 0.4878, norm(attn): 0.0598, norm(output): 0.5273, norm(x): 0.9384, norm(y): 1.0035, norm:1.2203, tok/sec: 102077.91, flops:89.39, batch-reuse:1
@ 985 train 6.7410 , allloss: 6.7508, dt: 1298.83ms, fracRes: 0.4878, norm(attn): 0.0601, norm(output): 0.5273, norm(x): 0.9382, norm(y): 1.0034, norm:1.0876, tok/sec: 100915.57, flops:88.37, batch-reuse:1
@ 986 train 6.8298 , allloss: 6.8397, dt: 1325.42ms, fracRes: 0.4887, norm(attn): 0.0598, norm(output): 0.5273, norm(x): 0.9401, norm(y): 1.0034, norm:2.4130, tok/sec: 98890.55, flops:86.60, batch-reuse:1
@ 987 train 6.7364 , allloss: 6.7460, dt: 1255.84ms, fracRes: 0.4882, norm(attn): 0.0593, norm(output): 0.5312, norm(x): 0.9420, norm(y): 1.0035, norm:1.7073, tok/sec: 104369.66, flops:91.40, batch-reuse:1
@ 988 train 6.8329 , allloss: 6.8426, dt: 1265.86ms, fracRes: 0.4875, norm(attn): 0.0596, norm(output): 0.5312, norm(x): 0.9431, norm(y): 1.0034, norm:1.4267, tok/sec: 103544.16, flops:90.67, batch-reuse:1
@ 989 train 6.9064 , allloss: 6.9160, dt: 1256.42ms, fracRes: 0.4891, norm(attn): 0.0613, norm(output): 0.5312, norm(x): 0.9491, norm(y): 1.0034, norm:0.9207, tok/sec: 104322.11, flops:91.35, batch-reuse:1
@ 990 train 6.7564 , allloss: 6.7667, dt: 1285.59ms, fracRes: 0.4878, norm(attn): 0.0615, norm(output): 0.5312, norm(x): 0.9474, norm(y): 1.0034, norm:2.6014, tok/sec: 101954.60, flops:89.28, batch-reuse:1
@ 991 train 6.8342 , allloss: 6.8449, dt: 1252.59ms, fracRes: 0.4878, norm(attn): 0.0613, norm(output): 0.5312, norm(x): 0.9451, norm(y): 1.0034, norm:2.8580, tok/sec: 104641.09, flops:91.63, batch-reuse:1
@ 992 train 6.8630 , allloss: 6.8734, dt: 1266.47ms, fracRes: 0.4885, norm(attn): 0.0618, norm(output): 0.5273, norm(x): 0.9473, norm(y): 1.0034, norm:1.3536, tok/sec: 103493.69, flops:90.63, batch-reuse:1
@ 993 train 6.7623 , allloss: 6.7727, dt: 1249.99ms, fracRes: 0.4866, norm(attn): 0.0615, norm(output): 0.5312, norm(x): 0.9487, norm(y): 1.0034, norm:3.7041, tok/sec: 104858.42, flops:91.82, batch-reuse:1
@ 994 train 6.8415 , allloss: 6.8519, dt: 1263.17ms, fracRes: 0.4860, norm(attn): 0.0623, norm(output): 0.5352, norm(x): 0.9483, norm(y): 1.0034, norm:1.3953, tok/sec: 103764.46, flops:90.87, batch-reuse:1
@ 995 train 6.8369 , allloss: 6.8463, dt: 1264.71ms, fracRes: 0.4909, norm(attn): 0.0605, norm(output): 0.5273, norm(x): 0.9500, norm(y): 1.0035, norm:3.3456, tok/sec: 103638.09, flops:90.75, batch-reuse:1
@ 996 train 6.7579 , allloss: 6.7677, dt: 1261.49ms, fracRes: 0.4932, norm(attn): 0.0601, norm(output): 0.5312, norm(x): 0.9559, norm(y): 1.0035, norm:1.8401, tok/sec: 103902.42, flops:90.99, batch-reuse:1
@ 997 train 6.7490 , allloss: 6.7584, dt: 1262.43ms, fracRes: 0.4902, norm(attn): 0.0605, norm(output): 0.5312, norm(x): 0.9536, norm(y): 1.0035, norm:3.2019, tok/sec: 103825.52, flops:90.92, batch-reuse:1
@ 998 train 6.8786 , allloss: 6.8892, dt: 1268.43ms, fracRes: 0.4861, norm(attn): 0.0625, norm(output): 0.5352, norm(x): 0.9516, norm(y): 1.0034, norm:1.6225, tok/sec: 103333.97, flops:90.49, batch-reuse:1
@ 999 train 6.7581 , allloss: 6.7687, dt: 1267.03ms, fracRes: 0.4844, norm(attn): 0.0618, norm(output): 0.5312, norm(x): 0.9480, norm(y): 1.0035, norm:2.4761, tok/sec: 103447.87, flops:90.59, batch-reuse:1
@ 1000 train 6.8713 , allloss: 6.8823, dt: 1269.13ms, fracRes: 0.4846, norm(attn): 0.0645, norm(output): 0.5391, norm(x): 0.9532, norm(y): 1.0034, norm:2.4894, tok/sec: 103277.11, flops:90.44, batch-reuse:1
@ 1001 train 6.8035 , allloss: 6.8131, dt: 1276.97ms, fracRes: 0.4875, norm(attn): 0.0625, norm(output): 0.5352, norm(x): 0.9583, norm(y): 1.0034, norm:1.3911, tok/sec: 102643.10, flops:89.88, batch-reuse:1
@ 1002 train 6.7691 , allloss: 6.7794, dt: 1279.92ms, fracRes: 0.4884, norm(attn): 0.0625, norm(output): 0.5352, norm(x): 0.9585, norm(y): 1.0034, norm:4.5743, tok/sec: 102406.05, flops:89.68, batch-reuse:1
@ 1003 train 6.8798 , allloss: 6.8905, dt: 1300.24ms, fracRes: 0.4896, norm(attn): 0.0623, norm(output): 0.5352, norm(x): 0.9624, norm(y): 1.0034, norm:2.6889, tok/sec: 100805.91, flops:88.27, batch-reuse:1
@ 1004 train 6.7138 , allloss: 6.7235, dt: 1282.72ms, fracRes: 0.4897, norm(attn): 0.0623, norm(output): 0.5352, norm(x): 0.9675, norm(y): 1.0034, norm:1.7712, tok/sec: 102182.57, flops:89.48, batch-reuse:1
@ 1005 train 6.7752 , allloss: 6.7851, dt: 1268.29ms, fracRes: 0.4890, norm(attn): 0.0620, norm(output): 0.5352, norm(x): 0.9662, norm(y): 1.0034, norm:2.3293, tok/sec: 103345.54, flops:90.50, batch-reuse:1
@ 1006 train 6.7678 , allloss: 6.7783, dt: 1270.81ms, fracRes: 0.4885, norm(attn): 0.0625, norm(output): 0.5312, norm(x): 0.9636, norm(y): 1.0034, norm:1.5083, tok/sec: 103140.87, flops:90.32, batch-reuse:1
@ 1007 train 6.7770 , allloss: 6.7916, dt: 1263.31ms, fracRes: 0.4859, norm(attn): 0.0625, norm(output): 0.5391, norm(x): 0.9610, norm(y): 1.0034, norm:2.6981, tok/sec: 103752.57, flops:90.85, batch-reuse:1
@ 1008 train 6.8092 , allloss: 6.8215, dt: 1281.63ms, fracRes: 0.4878, norm(attn): 0.0630, norm(output): 0.5352, norm(x): 0.9667, norm(y): 1.0034, norm:1.8725, tok/sec: 102270.03, flops:89.56, batch-reuse:1
@ 1009 train 6.9369 , allloss: 6.9476, dt: 1279.08ms, fracRes: 0.4916, norm(attn): 0.0625, norm(output): 0.5391, norm(x): 0.9741, norm(y): 1.0034, norm:2.6817, tok/sec: 102474.04, flops:89.74, batch-reuse:1
@ 1010 train 6.8677 , allloss: 6.8778, dt: 1281.70ms, fracRes: 0.4931, norm(attn): 0.0605, norm(output): 0.5312, norm(x): 0.9771, norm(y): 1.0035, norm:1.7196, tok/sec: 102263.88, flops:89.55, batch-reuse:1
@ 1011 train 6.7943 , allloss: 6.8047, dt: 1268.64ms, fracRes: 0.4940, norm(attn): 0.0596, norm(output): 0.5391, norm(x): 0.9819, norm(y): 1.0035, norm:3.2109, tok/sec: 103317.34, flops:90.47, batch-reuse:1
@ 1012 train 6.8579 , allloss: 6.8691, dt: 1268.54ms, fracRes: 0.4940, norm(attn): 0.0608, norm(output): 0.5430, norm(x): 0.9835, norm(y): 1.0034, norm:2.4634, tok/sec: 103325.44, flops:90.48, batch-reuse:1
@ 1013 train 6.8414 , allloss: 6.8524, dt: 1263.47ms, fracRes: 0.4920, norm(attn): 0.0586, norm(output): 0.5312, norm(x): 0.9747, norm(y): 1.0035, norm:3.9308, tok/sec: 103739.86, flops:90.84, batch-reuse:1
@ 1014 train 6.7081 , allloss: 6.7186, dt: 1269.08ms, fracRes: 0.4925, norm(attn): 0.0588, norm(output): 0.5312, norm(x): 0.9816, norm(y): 1.0035, norm:2.4988, tok/sec: 103280.79, flops:90.44, batch-reuse:1
@ 1015 train 6.8118 , allloss: 6.8219, dt: 1312.23ms, fracRes: 0.4938, norm(attn): 0.0598, norm(output): 0.5391, norm(x): 0.9904, norm(y): 1.0035, norm:3.5576, tok/sec: 99885.28, flops:87.47, batch-reuse:1
@ 1016 train 6.8284 , allloss: 6.8384, dt: 1262.16ms, fracRes: 0.4941, norm(attn): 0.0591, norm(output): 0.5391, norm(x): 0.9938, norm(y): 1.0035, norm:2.5318, tok/sec: 103847.70, flops:90.94, batch-reuse:1
@ 1017 train 6.6890 , allloss: 6.6992, dt: 1258.33ms, fracRes: 0.4930, norm(attn): 0.0593, norm(output): 0.5391, norm(x): 0.9900, norm(y): 1.0035, norm:1.0552, tok/sec: 104163.54, flops:91.21, batch-reuse:1
@ 1018 train 6.7852 , allloss: 6.7957, dt: 1258.53ms, fracRes: 0.4937, norm(attn): 0.0591, norm(output): 0.5391, norm(x): 0.9929, norm(y): 1.0034, norm:0.9879, tok/sec: 104146.59, flops:91.20, batch-reuse:1
@ 1019 train 6.8064 , allloss: 6.8163, dt: 1272.58ms, fracRes: 0.4950, norm(attn): 0.0593, norm(output): 0.5391, norm(x): 0.9984, norm(y): 1.0035, norm:1.5579, tok/sec: 102996.76, flops:90.19, batch-reuse:1
@ 1020 train 6.7418 , allloss: 6.7516, dt: 1255.07ms, fracRes: 0.4954, norm(attn): 0.0598, norm(output): 0.5391, norm(x): 0.9984, norm(y): 1.0035, norm:1.2381, tok/sec: 104433.60, flops:91.45, batch-reuse:1
@ 1021 train 6.7343 , allloss: 6.7442, dt: 1275.86ms, fracRes: 0.4932, norm(attn): 0.0598, norm(output): 0.5391, norm(x): 0.9916, norm(y): 1.0034, norm:1.0113, tok/sec: 102732.46, flops:89.96, batch-reuse:1
@ 1022 train 6.6723 , allloss: 6.6816, dt: 1268.46ms, fracRes: 0.4939, norm(attn): 0.0593, norm(output): 0.5391, norm(x): 0.9936, norm(y): 1.0035, norm:1.0906, tok/sec: 103331.89, flops:90.49, batch-reuse:1
@ 1023 train 6.7019 , allloss: 6.7112, dt: 1290.22ms, fracRes: 0.4952, norm(attn): 0.0596, norm(output): 0.5391, norm(x): 0.9971, norm(y): 1.0035, norm:1.1655, tok/sec: 101588.72, flops:88.96, batch-reuse:1
@ 1024 train 6.6545 , allloss: 6.6637, dt: 1301.36ms, fracRes: 0.4948, norm(attn): 0.0588, norm(output): 0.5391, norm(x): 0.9956, norm(y): 1.0035, norm:0.9222, tok/sec: 100718.91, flops:88.20, batch-reuse:1
@ 1025 train 6.7414 , allloss: 6.7512, dt: 1271.51ms, fracRes: 0.4940, norm(attn): 0.0591, norm(output): 0.5352, norm(x): 0.9890, norm(y): 1.0034, norm:2.2696, tok/sec: 103083.80, flops:90.27, batch-reuse:1
@ 1026 train 6.7748 , allloss: 6.7851, dt: 1268.13ms, fracRes: 0.4936, norm(attn): 0.0593, norm(output): 0.5391, norm(x): 0.9930, norm(y): 1.0034, norm:1.0393, tok/sec: 103358.27, flops:90.51, batch-reuse:1
@ 1027 train 6.7947 , allloss: 6.8049, dt: 1250.76ms, fracRes: 0.4951, norm(attn): 0.0593, norm(output): 0.5430, norm(x): 1.0027, norm(y): 1.0034, norm:2.2177, tok/sec: 104794.12, flops:91.77, batch-reuse:1
@ 1028 train 6.7082 , allloss: 6.7182, dt: 1269.01ms, fracRes: 0.4949, norm(attn): 0.0581, norm(output): 0.5391, norm(x): 1.0016, norm(y): 1.0034, norm:1.8736, tok/sec: 103286.91, flops:90.45, batch-reuse:1
@ 1029 train 6.6902 , allloss: 6.7003, dt: 1284.48ms, fracRes: 0.4935, norm(attn): 0.0588, norm(output): 0.5391, norm(x): 0.9950, norm(y): 1.0034, norm:1.5062, tok/sec: 102042.94, flops:89.36, batch-reuse:1
@ 1030 train 6.7908 , allloss: 6.8027, dt: 1272.51ms, fracRes: 0.4917, norm(attn): 0.0618, norm(output): 0.5508, norm(x): 0.9917, norm(y): 1.0033, norm:2.0217, tok/sec: 103002.59, flops:90.20, batch-reuse:1
@ 1031 train 6.7651 , allloss: 6.7764, dt: 1290.36ms, fracRes: 0.4916, norm(attn): 0.0605, norm(output): 0.5430, norm(x): 0.9928, norm(y): 1.0033, norm:1.0322, tok/sec: 101577.97, flops:88.95, batch-reuse:1
@ 1032 train 6.7151 , allloss: 6.7257, dt: 1289.64ms, fracRes: 0.4918, norm(attn): 0.0591, norm(output): 0.5430, norm(x): 0.9972, norm(y): 1.0034, norm:1.5805, tok/sec: 101634.21, flops:89.00, batch-reuse:1
@ 1033 train 6.7230 , allloss: 6.7331, dt: 1266.62ms, fracRes: 0.4916, norm(attn): 0.0586, norm(output): 0.5508, norm(x): 1.0038, norm(y): 1.0034, norm:1.7617, tok/sec: 103481.42, flops:90.62, batch-reuse:1
@ 1034 train 6.7115 , allloss: 6.7219, dt: 1262.05ms, fracRes: 0.4913, norm(attn): 0.0598, norm(output): 0.5508, norm(x): 1.0089, norm(y): 1.0034, norm:1.0775, tok/sec: 103856.39, flops:90.95, batch-reuse:1
@ 1035 train 6.7101 , allloss: 6.7210, dt: 1284.36ms, fracRes: 0.4876, norm(attn): 0.0588, norm(output): 0.5469, norm(x): 0.9950, norm(y): 1.0034, norm:0.8609, tok/sec: 102052.01, flops:89.37, batch-reuse:1
@ 1036 train 6.7821 , allloss: 6.7954, dt: 1266.15ms, fracRes: 0.4856, norm(attn): 0.0615, norm(output): 0.5508, norm(x): 0.9936, norm(y): 1.0033, norm:1.7849, tok/sec: 103519.98, flops:90.65, batch-reuse:1
@ 1037 train 6.7608 , allloss: 6.7731, dt: 1265.62ms, fracRes: 0.4888, norm(attn): 0.0605, norm(output): 0.5469, norm(x): 0.9972, norm(y): 1.0034, norm:1.0934, tok/sec: 103563.43, flops:90.69, batch-reuse:1
@ 1038 train 6.7031 , allloss: 6.7132, dt: 1263.25ms, fracRes: 0.4931, norm(attn): 0.0593, norm(output): 0.5547, norm(x): 1.0092, norm(y): 1.0034, norm:1.5609, tok/sec: 103757.88, flops:90.86, batch-reuse:1
@ 1039 train 6.6803 , allloss: 6.6898, dt: 1282.37ms, fracRes: 0.4951, norm(attn): 0.0574, norm(output): 0.5469, norm(x): 1.0165, norm(y): 1.0035, norm:1.4387, tok/sec: 102210.90, flops:89.50, batch-reuse:1
@ 1040 train 6.5219 , allloss: 6.5313, dt: 1281.65ms, fracRes: 0.4961, norm(attn): 0.0557, norm(output): 0.5391, norm(x): 1.0171, norm(y): 1.0036, norm:1.0621, tok/sec: 102267.94, flops:89.55, batch-reuse:1
@ 1041 train 6.6536 , allloss: 6.6631, dt: 1265.34ms, fracRes: 0.4997, norm(attn): 0.0566, norm(output): 0.5430, norm(x): 1.0234, norm(y): 1.0036, norm:1.0001, tok/sec: 103586.54, flops:90.71, batch-reuse:1
@ 1042 train 6.6666 , allloss: 6.6761, dt: 1281.32ms, fracRes: 0.4995, norm(attn): 0.0566, norm(output): 0.5430, norm(x): 1.0210, norm(y): 1.0035, norm:1.7765, tok/sec: 102294.86, flops:89.58, batch-reuse:1
@ 1043 train 6.7218 , allloss: 6.7318, dt: 1264.81ms, fracRes: 0.4983, norm(attn): 0.0579, norm(output): 0.5430, norm(x): 1.0177, norm(y): 1.0035, norm:1.4318, tok/sec: 103630.14, flops:90.75, batch-reuse:1
@ 1044 train 6.7510 , allloss: 6.7618, dt: 1284.16ms, fracRes: 0.4963, norm(attn): 0.0605, norm(output): 0.5508, norm(x): 1.0152, norm(y): 1.0035, norm:1.2237, tok/sec: 102068.10, flops:89.38, batch-reuse:1
@ 1045 train 6.7174 , allloss: 6.7277, dt: 1275.24ms, fracRes: 0.4950, norm(attn): 0.0596, norm(output): 0.5508, norm(x): 1.0175, norm(y): 1.0035, norm:1.7205, tok/sec: 102782.17, flops:90.00, batch-reuse:1
@ 1046 train 6.6808 , allloss: 6.6914, dt: 1271.64ms, fracRes: 0.4936, norm(attn): 0.0591, norm(output): 0.5469, norm(x): 1.0192, norm(y): 1.0035, norm:1.6048, tok/sec: 103073.35, flops:90.26, batch-reuse:1
@ 1047 train 6.6795 , allloss: 6.6902, dt: 1284.37ms, fracRes: 0.4929, norm(attn): 0.0588, norm(output): 0.5469, norm(x): 1.0141, norm(y): 1.0035, norm:1.7855, tok/sec: 102051.82, flops:89.37, batch-reuse:1
@ 1048 train 6.6732 , allloss: 6.6831, dt: 1271.86ms, fracRes: 0.4934, norm(attn): 0.0591, norm(output): 0.5508, norm(x): 1.0176, norm(y): 1.0035, norm:0.9820, tok/sec: 103055.57, flops:90.24, batch-reuse:1
@ 1049 train 6.6538 , allloss: 6.6632, dt: 1285.30ms, fracRes: 0.4934, norm(attn): 0.0591, norm(output): 0.5469, norm(x): 1.0191, norm(y): 1.0035, norm:1.6083, tok/sec: 101977.54, flops:89.30, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7070,     0.2930,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2197,     0.7266,     0.0535,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1562,     0.7539,     0.0461,     0.0417,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0520,     0.0015,     0.6953,     0.2520,     0.0008,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1748,     0.0371,     0.4473,     0.2656,     0.0245,     0.0500,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0703,     0.0099,     0.5859,     0.3203,     0.0011,     0.0109,     0.0011,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0854,     0.2598,     0.0649,     0.0728,     0.1494,     0.1631,     0.1167,     0.0879,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0830,     0.0201,     0.2363,     0.2695,     0.0099,     0.0211,     0.0094,     0.3359,     0.0139,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0659,     0.1436,     0.0366,     0.0444,     0.1230,     0.1187,     0.2021,     0.0253,     0.1631,     0.0771,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0496,     0.0013,     0.4082,     0.1689,     0.0005,     0.0049,     0.0002,     0.3281,     0.0019,     0.0364,     0.0011,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0013,     0.0280,     0.0001,     0.0003,     0.0947,     0.0188,     0.6797,     0.0002,     0.0537,     0.0015,     0.1206,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0630,     0.0339,     0.1748,     0.1348,     0.0161,     0.0527,     0.0124,     0.1455,     0.0233,     0.0359,     0.0096,     0.2168,     0.0811,     0.0000,     0.0000],
        [    0.0620,     0.0171,     0.1396,     0.1475,     0.0074,     0.0127,     0.0057,     0.1914,     0.0111,     0.0820,     0.0049,     0.2637,     0.0461,     0.0096,     0.0000],
        [    0.0086,     0.0449,     0.0015,     0.0016,     0.2910,     0.0352,     0.2256,     0.0015,     0.0933,     0.0116,     0.2188,     0.0004,     0.0131,     0.0520,     0.0022]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0035, -0.0123,  0.0028,  ..., -0.0240,  0.0271, -0.0100],
        [-0.0401,  0.0169, -0.0130,  ..., -0.0012,  0.0014,  0.0367],
        [ 0.0114,  0.0152, -0.0173,  ..., -0.0156,  0.0192, -0.0277],
        ...,
        [-0.0017, -0.0005,  0.0096,  ..., -0.0114,  0.0190,  0.0100],
        [-0.0308,  0.0202, -0.0243,  ..., -0.0174, -0.0155,  0.0100],
        [-0.0222,  0.0175, -0.0131,  ..., -0.0031, -0.0110,  0.0210]], device='cuda:0', requires_grad=True)
K: tensor([ 0.3242,  0.8086, -0.4805,  1.0781,  0.2891,  0.0154,  0.5820,  0.2031, -0.0493, -0.1641,  0.3262,  0.1758, -0.5664, -0.1660, -0.5352, -1.2891, -0.5977,  0.5508, -0.5312,  0.2207,  1.2344, -0.2715,  0.2695, -0.4629,  0.0089,  0.5117, -0.1758, -0.8867,  0.8828,  0.4863, -0.2158, -0.4375,
        -0.8242, -0.4395,  0.3711,  0.3262, -0.5938,  0.2119, -0.3105, -0.9648, -0.3750,  0.0117, -0.0148,  1.8672,  0.0249, -0.1118,  0.3301,  0.2695,  0.1572,  0.0786, -0.2520, -0.6836, -0.4727,  0.1914, -0.1445, -0.3750,  0.3965,  0.6094,  0.8477, -0.7656, -0.2236,  0.7031, -0.5977, -0.1621],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0200,  0.0018,  0.0033,  ...,  0.0180, -0.0098, -0.0006],
        [ 0.0168, -0.0214, -0.0159,  ...,  0.0101,  0.0236, -0.0221],
        [-0.0430,  0.0541,  0.0281,  ..., -0.0215, -0.0277, -0.0078],
        ...,
        [ 0.0097,  0.0320,  0.0384,  ...,  0.0209,  0.0090,  0.0389],
        [ 0.0293, -0.0155,  0.0322,  ...,  0.0201,  0.0123,  0.0181],
        [ 0.0098, -0.0241,  0.0179,  ..., -0.0313,  0.0183, -0.0168]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.5273, -0.8203, -0.9375, -1.8594, -0.2285,  0.5352, -0.8477,  0.4414, -0.0079,  0.8281,  0.2812, -0.8242, -0.8086, -0.3438,  0.8867,  0.8516,  0.8594, -0.7109,  0.4922,  1.0547, -1.1797,  1.1562,  0.5000,  0.0282,  0.2715,  0.4121, -0.6680,  0.3730,  0.1147, -0.7500,  0.0479,  1.0547,
         1.4219, -0.9805,  0.3750,  0.4766, -0.4629, -0.5273, -0.7461,  0.7305,  0.6328, -1.3594, -0.3047, -0.6992, -0.6484,  0.8125, -0.8711,  0.4434, -0.7188, -0.9141, -0.4844, -0.3887, -0.3574,  0.0243,  0.2852, -0.5586, -0.8125, -1.2188,  0.8945,  0.6797,  1.7656,  0.0571,  0.7031,  0.5977],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.8750,  0.8633,  0.9648, -2.5625, -0.8594, -2.9688,  1.2891, -1.6562, -0.5312, -3.0312,  1.6562, -0.0835, -1.5703,  0.9453],
        [ 0.0000,  1.1953, -1.4141, -1.4609,  2.8125,  1.6953,  3.1562, -1.4531,  2.1562,  0.1187,  3.0781, -2.3281,  0.1641,  2.3281, -0.6016],
        [ 0.0000,  1.5781, -1.2266, -1.3203,  2.5469,  1.3594,  2.4219, -1.1562,  1.8438, -0.0549,  2.0625, -1.7188,  0.0840,  1.5469, -0.6133],
        [ 0.0000, -3.5156,  2.5938,  1.5781, -4.1875, -2.6875, -6.1562,  2.1719, -3.8750, -0.0222, -3.9844,  3.2188, -0.9023, -3.1719,  0.9609],
        [ 0.0000, -1.5547,  0.9414,  0.4199, -1.9609, -1.2500, -2.0625,  0.8086, -1.2734, -0.2246, -1.2266,  1.5547, -0.8008, -1.0391,  0.7852],
        [ 0.0000, -1.9609,  2.1250,  1.5156, -4.1875, -1.8672, -4.1875,  1.4531, -3.3750, -0.4336, -3.9375,  3.6562, -0.3750, -2.7969,  1.3750],
        [ 0.0000,  1.1094, -0.2754, -0.1631,  0.5586,  0.6484,  0.3105,  0.0267,  0.5117, -0.0265,  0.0103, -0.4121, -0.3516,  0.4082,  0.3438],
        [ 0.0000, -1.4219,  1.0469,  1.1797, -2.1250, -1.3750, -2.1875,  1.3984, -1.7891,  0.1270, -2.6406,  1.5312, -0.1445, -1.9297,  0.4629],
        [ 0.0000,  0.7812, -0.5859, -0.3926,  0.6289,  0.5898,  1.1172, -0.9570,  0.9062,  0.1592,  1.3672, -0.9609, -0.1133,  0.9453,  0.4785],
        [ 0.0000, -3.6562,  2.1094,  1.2266, -4.6562, -2.2969, -5.6562,  1.8906, -3.2344, -0.3066, -3.8281,  3.6719, -0.6719, -2.8125,  0.9766],
        [ 0.0000,  3.0781, -2.6562, -1.5781,  4.3125,  2.6875,  6.2812, -2.0156,  3.7344,  0.1514,  4.5312, -4.4375,  0.6406,  3.2188, -0.8398],
        [ 0.0000, -0.6133,  1.0234,  0.7656, -1.3594, -0.1777, -1.6250,  0.8398, -0.9922, -0.5586, -1.8828,  1.2344,  0.2559, -0.9492,  0.3672],
        [ 0.0000, -1.2891,  0.8125,  0.8633, -2.1250, -1.5859, -2.3750,  1.1250, -1.7188,  0.2773, -2.5312,  1.4453, -0.2969, -1.8672,  0.3613],
        [ 0.0000,  1.6484, -1.7578, -1.6875,  3.5156,  1.4062,  3.2656, -1.7734,  2.3750,  0.2988,  3.2344, -2.9531,  0.4180,  1.8047, -1.3516]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6732],
        [0.2669],
        [0.1941],
        [0.1283],
        [0.1777],
        [0.1444],
        [0.0937],
        [0.0975],
        [0.0779],
        [0.0728],
        [0.0021],
        [0.0696],
        [0.0438],
        [0.0080]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7344, 0.2637, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5391, 0.2695, 0.1914, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3125, 0.1367, 0.2246, 0.3262, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1660, 0.2148, 0.2559, 0.2891, 0.0732, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1650, 0.1699, 0.0574, 0.1855, 0.1426, 0.2793, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1074, 0.1709, 0.1621, 0.1680, 0.0967, 0.1963, 0.0991, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1099, 0.1001, 0.1709, 0.1348, 0.1104, 0.1011, 0.1279, 0.1455, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0972, 0.1396, 0.1533, 0.1777, 0.0376, 0.1099, 0.1270, 0.1113, 0.0459, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1494, 0.0427, 0.0266, 0.0820, 0.1602, 0.0913, 0.1533, 0.0388, 0.2402, 0.0156, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0649, 0.1270, 0.0620, 0.1172, 0.0581, 0.0781, 0.1104, 0.0420, 0.0747, 0.0850, 0.1807, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0840, 0.0262, 0.0179, 0.0308, 0.1641, 0.0466, 0.1147, 0.0442, 0.1338, 0.0197, 0.3027, 0.0145, 0.0000, 0.0000, 0.0000],
        [0.0669, 0.0371, 0.0796, 0.0942, 0.0294, 0.1089, 0.0815, 0.0623, 0.0342, 0.0957, 0.1196, 0.1309, 0.0596, 0.0000, 0.0000],
        [0.0566, 0.0693, 0.1128, 0.1299, 0.0208, 0.0574, 0.0757, 0.0669, 0.0223, 0.1338, 0.0493, 0.1367, 0.0442, 0.0248, 0.0000],
        [0.0708, 0.0234, 0.0140, 0.0281, 0.0737, 0.0376, 0.0869, 0.0265, 0.1045, 0.0129, 0.2539, 0.0122, 0.0835, 0.1631, 0.0087]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0254, -0.0103,  0.0006,  ..., -0.0036, -0.0242,  0.0222],
        [ 0.0023,  0.0142,  0.0021,  ...,  0.0114, -0.0002, -0.0370],
        [ 0.0080,  0.0162,  0.0215,  ...,  0.0089,  0.0063,  0.0035],
        ...,
        [-0.0097,  0.0305,  0.0122,  ...,  0.0434, -0.0127, -0.0047],
        [-0.0148, -0.0080, -0.0162,  ..., -0.0123,  0.0071,  0.0139],
        [ 0.0209,  0.0325,  0.0138,  ...,  0.0130, -0.0247,  0.0209]], device='cuda:0', requires_grad=True)
K: tensor([     0.5039,      1.0781,     -0.4688,      1.0938,     -1.3984,     -0.2598,      0.6992,      0.1748,      1.0625,      0.6797,      0.8906,      0.1992,     -1.1641,      0.0776,      0.7188,     -0.4707,      0.1660,      0.6016,     -0.0869,     -0.9492,      1.2500,      0.5547,
             0.0008,     -0.3203,     -0.0240,     -0.2402,     -0.7188,      0.4688,     -1.0156,     -0.3555,      1.0312,     -0.5898,     -0.2910,      1.0938,     -0.4219,     -0.7070,      1.1719,      0.3945,      0.0615,      1.5625,      1.0312,     -0.8516,     -0.3301,      0.2002,
             0.1494,      0.0811,     -0.5977,     -1.8047,      1.0625,     -0.6367,      0.6406,      0.7070,     -0.4258,     -0.1650,      1.2031,     -0.8164,      0.6016,     -0.2598,      0.2617,      0.7188,     -0.3301,      0.8867,      0.0231,      0.2012], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[ 0.0126, -0.0193, -0.0087,  ...,  0.0050,  0.0033, -0.0047],
        [ 0.0130,  0.0118, -0.0392,  ..., -0.0075, -0.0029, -0.0209],
        [ 0.0390,  0.0326,  0.0249,  ..., -0.0106,  0.0318,  0.0132],
        ...,
        [-0.0099, -0.0231,  0.0178,  ...,  0.0261, -0.0077, -0.0315],
        [ 0.0423, -0.0004, -0.0003,  ..., -0.0110,  0.0131,  0.0080],
        [ 0.0144, -0.0321, -0.0218,  ...,  0.0104, -0.0157,  0.0227]], device='cuda:0', requires_grad=True)
Q: tensor([-0.3145, -0.5195,  0.0693,  0.1826,  0.3027,  0.1260, -1.1875, -0.4199, -0.8359, -0.1299, -1.3750, -1.6484,  0.1699,  0.4688, -1.1172, -0.1406,  0.5664, -0.2793,  0.0356,  0.5938,  0.5234, -0.3945, -0.9297,  0.5898, -2.2188,  0.3164,  1.2188, -0.1309,  1.5625,  0.6562, -1.1797,  0.4492,
         0.5039, -0.4688,  1.5781,  0.8633, -0.1943,  0.0400, -0.0437, -0.3906, -0.5078, -0.0552,  0.4199, -0.5742, -0.2559, -0.0659, -0.0417,  0.9492,  0.8242,  0.6680, -0.1328, -0.3145, -1.0625, -0.5469, -0.1533,  0.8633, -0.5195,  0.2676,  0.0388,  0.4531,  0.6602, -1.0078, -1.2812, -1.1719],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -1.0234, -1.9531, -0.6289,  0.1699, -0.2656, -0.2275, -0.7852,  0.9102, -2.2031,  0.8281, -1.7422, -0.4648,  0.9375, -1.9219],
        [ 0.0000, -0.6914, -1.0312, -0.4590,  0.2812,  0.5508,  0.3633, -0.1367,  0.5820, -0.6367,  0.5898, -0.7109,  0.7266,  0.8477, -1.0703],
        [ 0.0000, -0.8281, -0.3320,  0.0403, -0.0540,  0.2832,  0.1680, -0.2305,  0.3262, -0.6133,  0.1855, -0.4414,  0.3906,  0.5742, -0.8516],
        [ 0.0000,  0.2559,  0.4336,  0.5586, -0.8164,  0.2715, -0.0179,  0.3652, -0.1973,  1.2031,  0.9805,  0.7305, -0.1914, -0.0069,  0.5000],
        [ 0.0000,  0.0306, -1.0547,  0.1182, -0.1445,  0.5234,  0.6680, -0.4473,  0.2080, -0.7695,  0.9375, -1.2578, -0.3848,  0.3105, -1.2734],
        [ 0.0000,  0.4668,  0.4102,  0.4512, -0.1035,  0.6055, -0.0801,  0.4883,  0.5391,  0.7188,  0.0432,  0.8750,  0.1592,  0.3613,  0.2051],
        [ 0.0000, -0.0933,  0.4434,  0.2041,  0.0067, -0.0801,  0.1533,  0.2852,  0.5430,  0.6562,  0.5039,  0.9297,  0.4160,  0.4004,  0.4922],
        [ 0.0000,  0.3633,  0.4590,  0.6055, -0.9492,  0.1235,  0.2656,  0.1377, -0.7461,  0.3203,  0.3047,  0.4707, -0.3223, -0.5820,  0.2910],
        [ 0.0000, -1.2500, -1.7266, -0.5977,  0.0742, -0.4902,  0.0293, -1.3438,  0.4766, -2.2500,  1.6875, -1.6094, -0.2500,  1.0859, -2.0625],
        [ 0.0000,  0.6719, -0.0474,  0.5898, -0.1138,  0.1807,  0.5273, -0.4355,  0.1377,  0.2656,  1.0156,  0.2012, -0.6445,  0.2812,  0.0669],
        [ 0.0000, -1.1641, -1.5391, -1.0000,  0.6719, -0.5859,  0.3086, -0.6406,  0.4648, -1.4531,  1.2812, -1.7578,  0.6289,  0.9102, -2.0781],
        [ 0.0000, -0.5859,  0.1768,  0.3477, -0.8164,  0.4883,  0.2031, -0.0674, -0.6641,  0.3613,  0.5820,  0.6758, -0.1143, -0.4199,  0.3340],
        [ 0.0000,  0.2002,  0.6836,  0.8242, -1.0078,  0.0118,  0.2871,  0.1631, -0.9336,  0.8594, -0.1396,  0.8789, -0.2480, -0.8281,  0.5469],
        [ 0.0000, -1.1094, -1.6172, -0.9258,  0.0408, -0.6367,  0.2031, -0.9883,  0.3867, -1.7109,  1.2734, -1.7578,  0.1621,  0.8359, -2.1094]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7135],
        [0.5158],
        [0.3314],
        [0.1790],
        [0.2225],
        [0.1442],
        [0.1267],
        [0.1080],
        [0.1322],
        [0.0923],
        [0.1006],
        [0.0794],
        [0.0691],
        [0.0828]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0107,  0.0121,  0.0122,  ..., -0.0053,  0.0045, -0.0168],
        [ 0.0276, -0.0412, -0.0346,  ...,  0.0104, -0.0052, -0.0329],
        [ 0.0383, -0.0328,  0.0267,  ..., -0.0010, -0.0071,  0.0056],
        ...,
        [ 0.0376,  0.0005, -0.0264,  ..., -0.0146,  0.0071,  0.0211],
        [ 0.0042,  0.0321, -0.0197,  ..., -0.0071, -0.0260, -0.0228],
        [ 0.0174,  0.0003,  0.0069,  ...,  0.0177, -0.0073,  0.0163]], device='cuda:0', requires_grad=True)
K: tensor([-1.7734, -2.5781, -1.8906, -1.8047, -1.2031,  0.4473, -2.5625,  2.9062, -1.9844, -2.6719,  1.5938, -2.6406, -2.3594, -2.8438, -2.0156,  0.2969,  1.8516,  1.5938, -2.6250,  1.3359,  0.9961,  2.1875, -1.6172, -2.4531,  2.7656,  0.7852, -0.7734, -1.7734,  2.5000,  3.0781,  1.4375,  2.6719,
        -2.8281,  1.4844,  2.5312, -2.0625, -1.9531, -2.2500,  2.9062,  0.9531, -1.3281, -2.6094, -1.5625,  2.5781,  2.1406,  1.9219, -2.6250, -2.2656,  2.0469,  1.5547, -1.4297, -1.3281,  3.0156,  2.0625,  1.4844, -1.7734, -2.1719, -1.6562, -2.1562, -1.5000, -1.9609, -2.4062,  3.0312,  1.8594],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0185,  0.0086,  0.0349,  ..., -0.0229,  0.0313,  0.0002],
        [ 0.0111,  0.0299,  0.0116,  ...,  0.0132,  0.0138, -0.0169],
        [-0.0068, -0.0040,  0.0212,  ..., -0.0227,  0.0405, -0.0131],
        ...,
        [-0.0150, -0.0070,  0.0122,  ..., -0.0234,  0.0048, -0.0037],
        [ 0.0191, -0.0224,  0.0195,  ...,  0.0280,  0.0069, -0.0055],
        [ 0.0350, -0.0329, -0.0174,  ...,  0.0168,  0.0219,  0.0100]], device='cuda:0', requires_grad=True)
Q: tensor([ 2.2031,  1.6328,  1.9297,  1.2344,  1.5703, -1.4453,  2.3125, -2.1406,  3.5000,  1.9922, -3.0625,  2.7344,  2.2500,  1.9453,  3.0469, -1.1328, -2.5156, -1.9141,  2.2812, -2.0469, -1.0312, -2.0781,  1.6094,  1.6641, -3.3281, -1.9062,  2.2188,  1.6797, -2.8906, -2.5781, -1.8984, -2.5781,
         2.9062, -2.0000, -2.9219,  2.5781,  2.8281,  1.5312, -1.9531, -0.9688,  0.4961,  2.5938,  1.7812, -2.7656, -1.2344, -2.6875,  2.5156,  2.6719, -2.3125, -1.6250,  2.0156,  2.3906, -2.9375, -2.6250, -2.4688,  2.4844,  2.2969,  2.6250,  3.0781,  1.5781,  2.5000,  1.6797, -2.3281, -1.8047],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000, -61.5000, -24.5000, -30.6250, -46.0000, -40.2500, -59.0000, -46.7500, -40.7500, -44.5000, -35.7500, -33.2500, -49.2500, -41.5000, -43.7500],
        [  0.0000, -33.7500, -13.5625, -17.0000, -25.2500, -21.7500, -32.0000, -25.5000, -22.0000, -24.3750, -19.1250, -18.3750, -26.8750, -22.5000, -24.2500],
        [  0.0000, -40.0000, -16.1250, -20.2500, -29.7500, -25.7500, -38.0000, -30.3750, -26.0000, -29.0000, -22.7500, -21.8750, -31.8750, -26.6250, -28.7500],
        [  0.0000, -38.5000, -15.0000, -18.8750, -29.1250, -25.8750, -37.0000, -29.3750, -26.0000, -27.8750, -23.0000, -20.5000, -31.1250, -26.5000, -27.0000],
        [  0.0000, -43.0000, -17.1250, -21.5000, -32.2500, -28.7500, -41.2500, -33.0000, -28.7500, -31.3750, -25.5000, -23.3750, -34.7500, -29.3750, -30.6250],
        [  0.0000, -57.7500, -22.6250, -28.5000, -43.7500, -38.2500, -55.5000, -43.7500, -38.7500, -41.5000, -34.0000, -30.8750, -46.2500, -39.5000, -40.7500],
        [  0.0000, -50.5000, -20.6250, -25.6250, -37.2500, -33.0000, -48.2500, -38.7500, -33.0000, -37.0000, -28.8750, -27.7500, -40.2500, -33.5000, -36.2500],
        [  0.0000, -38.5000, -15.1875, -19.0000, -29.0000, -25.8750, -37.0000, -29.5000, -25.8750, -28.0000, -22.8750, -20.7500, -31.1250, -26.3750, -27.2500],
        [  0.0000, -52.2500, -21.3750, -26.6250, -38.7500, -34.0000, -49.7500, -40.0000, -34.0000, -38.2500, -29.8750, -28.7500, -41.7500, -34.7500, -37.7500],
        [  0.0000, -38.5000, -15.2500, -19.1250, -29.1250, -25.8750, -37.0000, -29.6250, -26.0000, -28.1250, -23.0000, -20.8750, -31.2500, -26.5000, -27.3750],
        [  0.0000, -42.2500, -17.2500, -21.5000, -31.3750, -27.2500, -40.2500, -32.2500, -27.5000, -30.7500, -23.8750, -23.2500, -33.7500, -28.0000, -30.5000],
        [  0.0000, -50.0000, -20.2500, -25.2500, -37.0000, -33.0000, -47.7500, -38.5000, -32.7500, -36.7500, -29.0000, -27.3750, -40.2500, -33.5000, -35.7500],
        [  0.0000, -38.7500, -15.3125, -19.2500, -29.1250, -26.0000, -37.2500, -29.7500, -26.1250, -28.2500, -23.1250, -20.8750, -31.3750, -26.6250, -27.5000],
        [  0.0000, -50.5000, -20.5000, -25.5000, -37.5000, -32.5000, -48.0000, -38.2500, -32.7500, -36.5000, -28.6250, -27.6250, -40.2500, -33.5000, -36.2500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4355, 0.5664, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2344, 0.4336, 0.3320, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1963, 0.3691, 0.1865, 0.2471, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1787, 0.1650, 0.0713, 0.0879, 0.4961, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1094, 0.1104, 0.0322, 0.0437, 0.3809, 0.3242, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1206, 0.1787, 0.1621, 0.1670, 0.1167, 0.1191, 0.1357, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0991, 0.1104, 0.0413, 0.0535, 0.2598, 0.2471, 0.0515, 0.1367, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0703, 0.0698, 0.0219, 0.0289, 0.2490, 0.1914, 0.0291, 0.0840, 0.2559, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0732, 0.0850, 0.0356, 0.0454, 0.1729, 0.1660, 0.0400, 0.1025, 0.1953, 0.0840, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0518, 0.0518, 0.0151, 0.0204, 0.1865, 0.1533, 0.0221, 0.0649, 0.2021, 0.0486, 0.1826, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0688, 0.0913, 0.0654, 0.0757, 0.0967, 0.0981, 0.0481, 0.0938, 0.1035, 0.0889, 0.1030, 0.0664, 0.0000, 0.0000, 0.0000],
        [0.0471, 0.0476, 0.0150, 0.0198, 0.1494, 0.1328, 0.0229, 0.0615, 0.1689, 0.0464, 0.1572, 0.0189, 0.1113, 0.0000, 0.0000],
        [0.0405, 0.0405, 0.0127, 0.0168, 0.1445, 0.1108, 0.0170, 0.0491, 0.1475, 0.0374, 0.1309, 0.0165, 0.0874, 0.1484, 0.0000],
        [0.0515, 0.0645, 0.0378, 0.0454, 0.0874, 0.0864, 0.0334, 0.0708, 0.0952, 0.0635, 0.0938, 0.0403, 0.0864, 0.0962, 0.0474]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0119,  0.0202,  0.0040,  ..., -0.0275,  0.0038, -0.0520],
        [-0.0194, -0.0164, -0.0205,  ..., -0.0055,  0.0172,  0.0009],
        [-0.0320, -0.0140,  0.0380,  ..., -0.0250, -0.0213, -0.0246],
        ...,
        [-0.0008, -0.0275, -0.0002,  ..., -0.0229, -0.0155, -0.0376],
        [-0.0180, -0.0399, -0.0160,  ..., -0.0153, -0.0114,  0.0131],
        [-0.0171,  0.0211,  0.0261,  ..., -0.0218, -0.0146, -0.0075]], device='cuda:0', requires_grad=True)
K: tensor([-0.2676,  0.1865,  0.2754, -0.8281,  0.1875, -0.2480,  0.2295,  0.0186, -0.6641, -0.2500, -0.4004, -0.1079, -0.2695,  0.1787,  0.0688,  0.2100, -0.2275, -0.4355,  0.3145,  0.1846,  0.0415, -0.4746,  0.8164,  0.2168,  0.7031, -0.7148, -0.1719, -0.0938,  0.0564,  0.0437,  0.6445,  0.5664,
        -0.2852, -0.7344,  0.2451,  0.3125,  0.0508,  0.7070,  0.2314,  0.2969,  0.5195,  0.2148, -0.2236,  0.2021,  1.1484, -1.1016, -0.7305,  0.0474, -0.4082,  0.2080, -0.7227,  0.3242, -0.1846, -0.3203,  0.4707, -0.1475, -0.1035,  0.9258,  0.2178, -0.0864,  0.1865,  0.1045,  0.1270,  0.5352],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0181,  0.0022,  0.0145,  ...,  0.0299, -0.0140, -0.0236],
        [ 0.0204, -0.0230,  0.0195,  ..., -0.0132, -0.0045,  0.0317],
        [-0.0242,  0.0115,  0.0412,  ...,  0.0202,  0.0236, -0.0055],
        ...,
        [ 0.0049,  0.0025, -0.0379,  ..., -0.0069, -0.0080,  0.0082],
        [-0.0037,  0.0289, -0.0164,  ...,  0.0265,  0.0115, -0.0211],
        [-0.0081,  0.0033, -0.0083,  ...,  0.0029,  0.0035, -0.0109]], device='cuda:0', requires_grad=True)
Q: tensor([-0.6289,  0.8281, -0.0369,  0.0278, -0.0508,  0.1455, -0.0908, -0.1299,  0.1206,  0.0092,  0.1289,  0.3867,  0.1289, -0.5625, -0.0342,  0.1748, -0.4297,  1.0859, -0.0060,  0.0635,  0.5820, -0.5742, -0.8242,  0.3438, -0.0771, -0.0747, -0.0117,  0.0415, -0.0265, -0.0101, -0.1943,  0.1104,
         0.2051,  0.0186,  0.1436,  0.1523,  0.0796,  0.0515, -0.0674, -0.0972,  0.1348, -0.0356,  0.4395,  0.0796, -0.5977, -0.1475,  0.2207, -0.0923, -0.1133, -0.0023, -0.8203, -0.1201,  0.1621,  0.3203,  0.1094,  0.4766, -0.1807,  0.1943, -0.0381, -0.1152,  0.1099, -0.1221,  0.2227,  0.2598],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.2637,     -0.7109,     -0.4180,      0.9609,      0.9375,     -0.8242,      0.4141,      1.1094,      0.2090,      1.0703,     -0.5156,      0.8281,      1.1172,     -0.2773],
        [     0.0000,      0.6172,      0.3477,      0.5195,      0.3223,      0.3945,     -0.4805,      0.6211,      0.3730,      0.6406,      0.4043,      0.4688,      0.5234,      0.3848,      0.5664],
        [     0.0000,      0.6289,     -0.0525,      0.2295,      0.7188,      0.7695,     -0.8203,      0.6875,      0.8320,      0.6055,      0.8320,      0.1338,      0.8047,      0.8438,      0.3203],
        [     0.0000,     -0.0801,     -0.9180,     -0.7109,      1.0156,      0.6484,     -0.7500,      0.0094,      0.9258,     -0.1846,      0.7812,     -0.7422,      0.4336,      0.9297,     -0.5820],
        [     0.0000,      0.0101,     -1.2188,     -0.9180,      1.2500,      1.0938,     -0.8828,      0.2266,      1.3594,     -0.0684,      1.2656,     -0.9727,      0.8594,      1.3672,     -0.6992],
        [     0.0000,      0.3887,      0.2910,      0.3262,     -0.0364,     -0.0143,      0.1187,      0.4395,     -0.1201,      0.5195,     -0.0598,      0.5391,      0.2080,     -0.1191,      0.5898],
        [     0.0000,      0.1055,     -0.8750,     -0.6172,      0.9648,      0.9102,     -0.6562,      0.3223,      1.1016,      0.0903,      1.0547,     -0.6953,      0.7969,      1.1016,     -0.4414],
        [     0.0000,     -0.0056,     -1.1719,     -0.8828,      1.2656,      1.0000,     -0.8828,      0.1807,      1.2891,     -0.0908,      1.1719,     -0.9141,      0.7617,      1.2969,     -0.6680],
        [     0.0000,      0.1523,     -0.7188,     -0.4766,      0.8594,      0.8203,     -0.6055,      0.3379,      0.9844,      0.1387,      0.9492,     -0.5703,      0.7422,      0.9922,     -0.3340],
        [     0.0000,     -0.0002,     -1.2266,     -0.9336,      1.2812,      1.0859,     -0.8516,      0.2266,      1.3594,     -0.0659,      1.2578,     -0.9688,      0.8516,      1.3672,     -0.6914],
        [     0.0000,      0.2832,     -0.0554,      0.0923,      0.3398,      0.3535,     -0.3613,      0.3086,      0.4043,      0.2559,      0.4023,     -0.0393,      0.3867,      0.4160,      0.0728],
        [     0.0000,      0.0112,     -1.1484,     -0.8672,      1.1562,      1.0391,     -0.7188,      0.2695,      1.2812,     -0.0117,      1.2109,     -0.9102,      0.8633,      1.2812,     -0.6289],
        [     0.0000,     -0.0003,     -1.1641,     -0.8789,      1.2734,      1.0000,     -0.8750,      0.1875,      1.2891,     -0.0820,      1.1719,     -0.9023,      0.7656,      1.2891,     -0.6562],
        [     0.0000,      0.2275,     -0.3047,     -0.1245,      0.5273,      0.5195,     -0.4297,      0.3203,      0.6133,      0.2109,      0.5977,     -0.2451,      0.5156,      0.6250,     -0.0835]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2961],
        [0.2158],
        [0.1666],
        [0.1510],
        [0.0714],
        [0.1289],
        [0.0635],
        [0.0523],
        [0.0461],
        [0.0365],
        [0.0483],
        [0.0308],
        [0.0304],
        [0.0335]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9805,     0.0000,     0.0188,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0000,     0.0119,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3555,     0.0000,     0.0015,     0.0007,     0.6406,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0306,     0.4414,     0.0618,     0.1445,     0.0535,     0.2617,     0.0062,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0586,     0.0004,     0.0057,     0.0015,     0.0505,     0.0007,     0.8828,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0393,     0.0000,     0.0000,     0.0000,     0.0635,     0.0000,     0.8984,     0.0004,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0026,     0.0000,     0.0001,     0.0000,     0.0006,     0.0000,     0.9961,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0449,     0.0000,     0.0001,     0.0000,     0.0742,     0.0000,     0.5039,     0.0016,     0.3555,     0.0186,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0008,     0.0850,     0.0005,     0.0035,     0.0062,     0.1445,     0.0000,     0.2412,     0.0393,     0.1895,     0.0854,     0.0106,     0.1924,     0.0000,     0.0000],
        [    0.0000,     0.0206,     0.0000,     0.0000,     0.0000,     0.0317,     0.0000,     0.4746,     0.0002,     0.3203,     0.0050,     0.0001,     0.1465,     0.0001,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0315, -0.0222,  0.0026,  ..., -0.0111,  0.0072, -0.0168],
        [-0.0001, -0.0371,  0.0001,  ..., -0.0005,  0.0175, -0.0049],
        [-0.0219,  0.0131, -0.0263,  ..., -0.0068, -0.0205,  0.0047],
        ...,
        [ 0.0362, -0.0019, -0.0353,  ...,  0.0032, -0.0170,  0.0210],
        [-0.0135,  0.0084,  0.0090,  ...,  0.0354, -0.0253,  0.0117],
        [-0.0355, -0.0034, -0.0342,  ...,  0.0173,  0.0294,  0.0278]], device='cuda:0', requires_grad=True)
K: tensor([    -0.8750,     -1.1562,      0.2578,     -0.6211,      1.4531,      2.0000,      3.5781,      0.8281,      0.9805,      0.0000,     -0.3574,      2.7344,     -0.7422,      0.5039,      1.7344,      0.3574,     -0.6172,      0.8984,      1.1016,     -1.2578,     -2.4844,      3.5938,
            -0.6719,      0.1953,      2.3438,      2.6094,      0.8398,      0.4375,      0.6680,     -2.0000,      1.1562,     -0.0830,      0.8164,     -1.0781,     -0.2178,      1.5156,     -1.7734,      0.0332,     -1.5703,      1.2500,      0.8633,     -0.2988,      1.2422,     -1.1797,
             2.6406,     -2.2656,      0.1050,     -1.0312,      0.9727,      0.8164,      1.8281,     -1.3047,     -0.3672,     -0.6953,     -0.8945,      1.2344,      0.5703,      0.1533,     -1.8594,      2.1562,     -1.2344,     -2.9375,      2.7344,     -0.4062], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[-0.0081, -0.0269, -0.0031,  ..., -0.0128, -0.0092, -0.0067],
        [ 0.0066, -0.0091,  0.0012,  ...,  0.0155, -0.0291,  0.0312],
        [ 0.0219, -0.0186,  0.0023,  ...,  0.0033, -0.0253, -0.0118],
        ...,
        [ 0.0057, -0.0308, -0.0133,  ...,  0.0259,  0.0132, -0.0036],
        [ 0.0042, -0.0057,  0.0143,  ...,  0.0083,  0.0283,  0.0088],
        [ 0.0034, -0.0133, -0.0046,  ...,  0.0214, -0.0134, -0.0353]], device='cuda:0', requires_grad=True)
Q: tensor([ 1.7969,  1.1016, -1.0156,  1.6250, -1.5781, -2.2031, -2.9375, -2.2969, -1.1875, -0.5898,  2.2969, -2.1094,  1.6016, -1.0234, -1.7891, -0.5195,  1.3750, -1.9375, -1.3594,  1.5547,  2.2031, -2.3594,  0.6836, -0.7617, -1.6875, -2.3438, -0.9922, -1.0469, -1.0859,  1.8516, -0.9766,  0.5391,
        -1.5703,  0.7656,  0.2471, -1.6172,  1.5156,  0.2617,  3.2500, -1.3125, -1.1406,  1.6484, -1.2578,  1.6016, -2.7969,  1.8672, -1.8203,  1.2188, -3.7188, -1.6250, -2.5469,  1.7344,  1.6094,  0.7422,  1.9688, -2.3125, -1.4453, -0.3848,  2.4375, -1.7969,  1.5312,  2.7969, -1.8125,  1.1797],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000,  -8.1250,  -3.0625,  -5.4688,  -0.6406,  -7.5625,   4.8125,  -9.3750,  -4.7812,  -9.5000,  -6.6875,  -6.9062,  -8.5625,  -4.5625,  -8.2500],
        [  0.0000, -23.0000,  -3.9531, -11.8750,  -5.8438, -23.5000,  15.0625, -27.1250, -16.5000, -26.6250, -21.1250, -16.5000, -25.6250, -15.6250, -21.2500],
        [  0.0000, -22.6250,  -4.4062, -12.1250,  -5.3125, -22.8750,  14.6875, -26.6250, -15.8125, -26.2500, -20.5000, -16.5000, -25.0000, -15.0625, -21.1250],
        [  0.0000,  19.5000,   3.2656,  10.0000,   4.8438,  20.0000, -12.8750,  23.0000,  13.9375,  22.6250,  17.8750,  13.8750,  21.7500,  13.1875,  18.0000],
        [  0.0000,   9.5000,   0.4512,   4.0625,   3.2500,  10.0625,  -6.8125,  11.3750,   7.3125,  11.0625,   9.0625,   6.0938,  10.8125,   6.9062,   8.3125],
        [  0.0000,   2.6719,   0.6992,   1.5547,   0.5547,   2.1562,  -1.6016,   2.7031,   1.3984,   2.7188,   1.8281,   1.8906,   2.3594,   1.3047,   2.3281],
        [  0.0000,  -4.9062,  -2.3281,  -3.6406,  -0.1494,  -4.4062,   2.7031,  -5.5312,  -2.7188,  -5.6250,  -3.8906,  -4.4062,  -5.0312,  -2.6094,  -5.0625],
        [  0.0000,  16.8750,   2.3281,   8.3125,   4.5312,  17.3750, -11.5000,  20.0000,  12.1875,  19.5000,  15.5000,  11.7500,  18.8750,  11.5000,  15.3750],
        [  0.0000,  -9.7500,  -3.1094,  -6.1250,  -1.4375,  -9.3125,   5.9375, -11.2500,  -6.1875, -11.1875,  -8.3125,  -7.8438, -10.4375,  -5.9062,  -9.5000],
        [  0.0000,  12.7500,   1.3047,   5.9688,   3.7812,  13.2500,  -8.9375,  15.1875,   9.4375,  14.8125,  11.8750,   8.6250,  14.3125,   8.8750,  11.4375],
        [  0.0000, -22.6250,  -4.5625, -12.1875,  -5.3438, -22.7500,  14.6875, -26.6250, -15.8125, -26.2500, -20.3750, -16.6250, -25.0000, -15.0625, -21.1250],
        [  0.0000,   4.7188,  -0.4609,   1.5234,   2.0938,   5.2500,  -3.6875,   5.7500,   3.9375,   5.5000,   4.7188,   2.6250,   5.5312,   3.7031,   3.8906],
        [  0.0000,  17.0000,   2.4375,   8.4375,   4.4688,  17.3750, -11.5625,  20.1250,  12.1875,  19.7500,  15.5625,  11.8750,  18.8750,  11.5000,  15.5000],
        [  0.0000, -19.6250,  -4.3750, -10.9375,  -4.3125, -19.5000,  12.5625, -23.0000, -13.5000, -22.6250, -17.5000, -14.6875, -21.5000, -12.8125, -18.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6237],
        [0.4438],
        [0.4190],
        [0.0814],
        [0.0442],
        [0.0782],
        [0.0334],
        [0.0338],
        [0.0154],
        [0.0228],
        [0.0262],
        [0.0152],
        [0.0258],
        [0.0160]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(.:0.1157 the:0.1426.:0.0752 the:0.1226.:0.1416 to:0.1865 the:0.1074.:0.1602)
.
------
		( the:0.1426.:0.0752 the:0.1226.:0.1416 to:0.1865 the:0.1074.:0.1602
:0.2295)

The first the first the first the first the first the first the first
@ 1050 train 6.6736 , allloss: 6.6824, dt: 1671.88ms, fracRes: 0.4943, norm(attn): 0.0588, norm(output): 0.5547, norm(x): 1.0216, norm(y): 1.0035, norm:0.7801, tok/sec: 78398.03, flops:68.65, batch-reuse:1
@ 1051 train 6.6500 , allloss: 6.6593, dt: 1278.51ms, fracRes: 0.4941, norm(attn): 0.0586, norm(output): 0.5547, norm(x): 1.0196, norm(y): 1.0035, norm:1.9136, tok/sec: 102519.27, flops:89.77, batch-reuse:1
@ 1052 train 6.6129 , allloss: 6.6223, dt: 1282.13ms, fracRes: 0.4943, norm(attn): 0.0583, norm(output): 0.5508, norm(x): 1.0235, norm(y): 1.0035, norm:1.1355, tok/sec: 102229.73, flops:89.52, batch-reuse:1
@ 1053 train 6.6806 , allloss: 6.6901, dt: 1269.67ms, fracRes: 0.4944, norm(attn): 0.0591, norm(output): 0.5508, norm(x): 1.0244, norm(y): 1.0035, norm:1.2930, tok/sec: 103233.01, flops:90.40, batch-reuse:1
@ 1054 train 6.6666 , allloss: 6.6758, dt: 1263.47ms, fracRes: 0.4944, norm(attn): 0.0591, norm(output): 0.5547, norm(x): 1.0256, norm(y): 1.0035, norm:1.7484, tok/sec: 103739.33, flops:90.84, batch-reuse:1
@ 1055 train 6.6346 , allloss: 6.6438, dt: 1264.83ms, fracRes: 0.4943, norm(attn): 0.0593, norm(output): 0.5508, norm(x): 1.0222, norm(y): 1.0035, norm:0.9874, tok/sec: 103628.34, flops:90.75, batch-reuse:1
@ 1056 train 6.6605 , allloss: 6.6692, dt: 1255.22ms, fracRes: 0.4946, norm(attn): 0.0593, norm(output): 0.5547, norm(x): 1.0246, norm(y): 1.0035, norm:1.8501, tok/sec: 104421.32, flops:91.44, batch-reuse:1
@ 1057 train 6.6782 , allloss: 6.6875, dt: 1257.61ms, fracRes: 0.4948, norm(attn): 0.0601, norm(output): 0.5547, norm(x): 1.0226, norm(y): 1.0035, norm:0.7542, tok/sec: 104222.92, flops:91.27, batch-reuse:1
@ 1058 train 6.6923 , allloss: 6.7011, dt: 1241.30ms, fracRes: 0.4953, norm(attn): 0.0598, norm(output): 0.5508, norm(x): 1.0269, norm(y): 1.0035, norm:1.8077, tok/sec: 105592.13, flops:92.47, batch-reuse:1
@ 1059 train 6.6596 , allloss: 6.6686, dt: 1258.96ms, fracRes: 0.4954, norm(attn): 0.0601, norm(output): 0.5586, norm(x): 1.0315, norm(y): 1.0035, norm:0.9298, tok/sec: 104111.15, flops:91.17, batch-reuse:1
@ 1060 train 6.6799 , allloss: 6.6886, dt: 1265.10ms, fracRes: 0.4946, norm(attn): 0.0588, norm(output): 0.5547, norm(x): 1.0272, norm(y): 1.0035, norm:1.8024, tok/sec: 103605.98, flops:90.73, batch-reuse:1
@ 1061 train 6.7322 , allloss: 6.7412, dt: 1275.32ms, fracRes: 0.4950, norm(attn): 0.0603, norm(output): 0.5547, norm(x): 1.0268, norm(y): 1.0034, norm:2.5462, tok/sec: 102775.50, flops:90.00, batch-reuse:1
@ 1062 train 6.6815 , allloss: 6.6902, dt: 1262.62ms, fracRes: 0.4954, norm(attn): 0.0591, norm(output): 0.5508, norm(x): 1.0267, norm(y): 1.0035, norm:1.2997, tok/sec: 103809.89, flops:90.90, batch-reuse:1
@ 1063 train 6.7537 , allloss: 6.7633, dt: 1254.28ms, fracRes: 0.4958, norm(attn): 0.0605, norm(output): 0.5508, norm(x): 1.0326, norm(y): 1.0035, norm:3.3130, tok/sec: 104499.81, flops:91.51, batch-reuse:1
@ 1064 train 6.7369 , allloss: 6.7458, dt: 1269.15ms, fracRes: 0.4958, norm(attn): 0.0588, norm(output): 0.5547, norm(x): 1.0372, norm(y): 1.0035, norm:2.0826, tok/sec: 103275.63, flops:90.44, batch-reuse:1
@ 1065 train 6.7368 , allloss: 6.7463, dt: 1282.94ms, fracRes: 0.4957, norm(attn): 0.0593, norm(output): 0.5586, norm(x): 1.0369, norm(y): 1.0034, norm:2.9250, tok/sec: 102165.29, flops:89.46, batch-reuse:1
@ 1066 train 6.7665 , allloss: 6.7768, dt: 1289.87ms, fracRes: 0.4954, norm(attn): 0.0603, norm(output): 0.5586, norm(x): 1.0351, norm(y): 1.0034, norm:2.4785, tok/sec: 101616.08, flops:88.98, batch-reuse:1
@ 1067 train 6.7420 , allloss: 6.7524, dt: 1290.58ms, fracRes: 0.4966, norm(attn): 0.0596, norm(output): 0.5547, norm(x): 1.0341, norm(y): 1.0034, norm:2.0433, tok/sec: 101560.74, flops:88.94, batch-reuse:1
@ 1068 train 6.7604 , allloss: 6.7705, dt: 1278.59ms, fracRes: 0.4965, norm(attn): 0.0581, norm(output): 0.5547, norm(x): 1.0367, norm(y): 1.0035, norm:5.9420, tok/sec: 102512.70, flops:89.77, batch-reuse:1
@ 1069 train 6.6679 , allloss: 6.6779, dt: 1275.29ms, fracRes: 0.4955, norm(attn): 0.0583, norm(output): 0.5547, norm(x): 1.0371, norm(y): 1.0035, norm:3.0704, tok/sec: 102778.54, flops:90.00, batch-reuse:1
@ 1070 train 6.6810 , allloss: 6.6908, dt: 1249.10ms, fracRes: 0.4945, norm(attn): 0.0596, norm(output): 0.5547, norm(x): 1.0325, norm(y): 1.0034, norm:2.2780, tok/sec: 104933.41, flops:91.89, batch-reuse:1
@ 1071 train 6.6313 , allloss: 6.6420, dt: 1288.23ms, fracRes: 0.4929, norm(attn): 0.0593, norm(output): 0.5547, norm(x): 1.0322, norm(y): 1.0034, norm:2.5094, tok/sec: 101745.42, flops:89.10, batch-reuse:1
@ 1072 train 6.7176 , allloss: 6.7278, dt: 1284.42ms, fracRes: 0.4932, norm(attn): 0.0603, norm(output): 0.5586, norm(x): 1.0380, norm(y): 1.0034, norm:2.2954, tok/sec: 102047.60, flops:89.36, batch-reuse:1
@ 1073 train 6.6264 , allloss: 6.6360, dt: 1268.89ms, fracRes: 0.4943, norm(attn): 0.0591, norm(output): 0.5586, norm(x): 1.0411, norm(y): 1.0034, norm:1.2250, tok/sec: 103296.75, flops:90.46, batch-reuse:1
@ 1074 train 6.6238 , allloss: 6.6337, dt: 1276.43ms, fracRes: 0.4939, norm(attn): 0.0596, norm(output): 0.5547, norm(x): 1.0352, norm(y): 1.0034, norm:1.3279, tok/sec: 102686.08, flops:89.92, batch-reuse:1
@ 1075 train 6.6864 , allloss: 6.6976, dt: 1276.28ms, fracRes: 0.4920, norm(attn): 0.0605, norm(output): 0.5586, norm(x): 1.0332, norm(y): 1.0034, norm:1.9887, tok/sec: 102698.32, flops:89.93, batch-reuse:1
@ 1076 train 6.6905 , allloss: 6.7018, dt: 1272.55ms, fracRes: 0.4929, norm(attn): 0.0610, norm(output): 0.5586, norm(x): 1.0372, norm(y): 1.0033, norm:1.3121, tok/sec: 102999.52, flops:90.20, batch-reuse:1
@ 1077 train 6.6256 , allloss: 6.6351, dt: 1276.79ms, fracRes: 0.4956, norm(attn): 0.0586, norm(output): 0.5586, norm(x): 1.0481, norm(y): 1.0034, norm:1.3267, tok/sec: 102657.05, flops:89.90, batch-reuse:1
@ 1078 train 6.8947 , allloss: 6.9062, dt: 1278.66ms, fracRes: 0.4966, norm(attn): 0.0623, norm(output): 0.5625, norm(x): 1.0499, norm(y): 1.0034, norm:1.4376, tok/sec: 102507.21, flops:89.76, batch-reuse:1
@ 1079 train 6.5936 , allloss: 6.6041, dt: 1269.03ms, fracRes: 0.4956, norm(attn): 0.0598, norm(output): 0.5625, norm(x): 1.0483, norm(y): 1.0034, norm:1.3988, tok/sec: 103285.08, flops:90.45, batch-reuse:1
@ 1080 train 6.6820 , allloss: 6.6927, dt: 1272.24ms, fracRes: 0.4959, norm(attn): 0.0579, norm(output): 0.5586, norm(x): 1.0464, norm(y): 1.0034, norm:2.6562, tok/sec: 103024.90, flops:90.22, batch-reuse:1
@ 1081 train 6.6605 , allloss: 6.6715, dt: 1283.15ms, fracRes: 0.4965, norm(attn): 0.0586, norm(output): 0.5586, norm(x): 1.0472, norm(y): 1.0034, norm:1.5099, tok/sec: 102148.51, flops:89.45, batch-reuse:1
@ 1082 train 6.8466 , allloss: 6.8573, dt: 1266.83ms, fracRes: 0.4981, norm(attn): 0.0603, norm(output): 0.5625, norm(x): 1.0557, norm(y): 1.0034, norm:3.2266, tok/sec: 103464.73, flops:90.60, batch-reuse:1
@ 1083 train 6.6577 , allloss: 6.6678, dt: 1253.49ms, fracRes: 0.4985, norm(attn): 0.0581, norm(output): 0.5625, norm(x): 1.0595, norm(y): 1.0034, norm:2.4929, tok/sec: 104565.52, flops:91.57, batch-reuse:1
@ 1084 train 6.6121 , allloss: 6.6220, dt: 1260.67ms, fracRes: 0.4980, norm(attn): 0.0571, norm(output): 0.5586, norm(x): 1.0599, norm(y): 1.0034, norm:4.7454, tok/sec: 103969.86, flops:91.04, batch-reuse:1
@ 1085 train 6.7972 , allloss: 6.8093, dt: 1254.67ms, fracRes: 0.4982, norm(attn): 0.0640, norm(output): 0.5703, norm(x): 1.0616, norm(y): 1.0032, norm:2.5788, tok/sec: 104467.60, flops:91.48, batch-reuse:1
@ 1086 train 6.6962 , allloss: 6.7070, dt: 1269.90ms, fracRes: 0.4988, norm(attn): 0.0576, norm(output): 0.5625, norm(x): 1.0629, norm(y): 1.0034, norm:5.7249, tok/sec: 103214.44, flops:90.38, batch-reuse:1
@ 1087 train 6.6093 , allloss: 6.6208, dt: 1258.13ms, fracRes: 0.4981, norm(attn): 0.0586, norm(output): 0.5664, norm(x): 1.0638, norm(y): 1.0034, norm:2.1887, tok/sec: 104180.17, flops:91.23, batch-reuse:1
@ 1088 train 6.7354 , allloss: 6.7476, dt: 1273.58ms, fracRes: 0.4966, norm(attn): 0.0581, norm(output): 0.5625, norm(x): 1.0618, norm(y): 1.0033, norm:3.2646, tok/sec: 102916.38, flops:90.12, batch-reuse:1
@ 1089 train 6.6267 , allloss: 6.6383, dt: 1287.61ms, fracRes: 0.4973, norm(attn): 0.0576, norm(output): 0.5625, norm(x): 1.0652, norm(y): 1.0034, norm:2.6652, tok/sec: 101794.91, flops:89.14, batch-reuse:1
@ 1090 train 6.6485 , allloss: 6.6595, dt: 1271.13ms, fracRes: 0.4997, norm(attn): 0.0566, norm(output): 0.5625, norm(x): 1.0744, norm(y): 1.0034, norm:2.0099, tok/sec: 103114.35, flops:90.30, batch-reuse:1
@ 1091 train 6.6552 , allloss: 6.6664, dt: 1263.23ms, fracRes: 0.5002, norm(attn): 0.0566, norm(output): 0.5625, norm(x): 1.0781, norm(y): 1.0034, norm:1.7127, tok/sec: 103759.01, flops:90.86, batch-reuse:1
@ 1092 train 6.7559 , allloss: 6.7676, dt: 1300.75ms, fracRes: 0.4990, norm(attn): 0.0586, norm(output): 0.5664, norm(x): 1.0757, norm(y): 1.0033, norm:1.6932, tok/sec: 100766.65, flops:88.24, batch-reuse:1
@ 1093 train 6.5753 , allloss: 6.5871, dt: 1263.90ms, fracRes: 0.4981, norm(attn): 0.0574, norm(output): 0.5625, norm(x): 1.0739, norm(y): 1.0034, norm:1.2305, tok/sec: 103704.78, flops:90.81, batch-reuse:1
@ 1094 train 6.6187 , allloss: 6.6309, dt: 1264.28ms, fracRes: 0.4982, norm(attn): 0.0583, norm(output): 0.5664, norm(x): 1.0734, norm(y): 1.0033, norm:2.0182, tok/sec: 103673.03, flops:90.78, batch-reuse:1
@ 1095 train 6.6194 , allloss: 6.6308, dt: 1259.16ms, fracRes: 0.4992, norm(attn): 0.0571, norm(output): 0.5664, norm(x): 1.0749, norm(y): 1.0034, norm:1.4994, tok/sec: 104094.61, flops:91.15, batch-reuse:1
@ 1096 train 6.6423 , allloss: 6.6528, dt: 1261.12ms, fracRes: 0.4994, norm(attn): 0.0566, norm(output): 0.5625, norm(x): 1.0797, norm(y): 1.0034, norm:1.8445, tok/sec: 103933.34, flops:91.01, batch-reuse:1
@ 1097 train 6.5767 , allloss: 6.5881, dt: 1269.94ms, fracRes: 0.4987, norm(attn): 0.0591, norm(output): 0.5664, norm(x): 1.0833, norm(y): 1.0033, norm:1.4934, tok/sec: 103210.95, flops:90.38, batch-reuse:1
@ 1098 train 6.5825 , allloss: 6.5937, dt: 1271.68ms, fracRes: 0.4983, norm(attn): 0.0571, norm(output): 0.5664, norm(x): 1.0825, norm(y): 1.0033, norm:1.6264, tok/sec: 103069.58, flops:90.26, batch-reuse:1
@ 1099 train 6.6384 , allloss: 6.6509, dt: 1257.60ms, fracRes: 0.4968, norm(attn): 0.0586, norm(output): 0.5664, norm(x): 1.0795, norm(y): 1.0033, norm:1.1237, tok/sec: 104224.03, flops:91.27, batch-reuse:1
@ 1100 train 6.6298 , allloss: 6.6406, dt: 1254.58ms, fracRes: 0.4991, norm(attn): 0.0569, norm(output): 0.5664, norm(x): 1.0861, norm(y): 1.0034, norm:0.8786, tok/sec: 104474.68, flops:91.49, batch-reuse:1
@ 1101 train 6.6829 , allloss: 6.6934, dt: 1268.12ms, fracRes: 0.5011, norm(attn): 0.0586, norm(output): 0.5664, norm(x): 1.0958, norm(y): 1.0033, norm:1.3263, tok/sec: 103358.97, flops:90.51, batch-reuse:1
@ 1102 train 6.6380 , allloss: 6.6478, dt: 1268.49ms, fracRes: 0.5019, norm(attn): 0.0576, norm(output): 0.5664, norm(x): 1.0993, norm(y): 1.0034, norm:1.8588, tok/sec: 103329.44, flops:90.48, batch-reuse:1
@ 1103 train 6.7075 , allloss: 6.7177, dt: 1297.41ms, fracRes: 0.5010, norm(attn): 0.0576, norm(output): 0.5664, norm(x): 1.1005, norm(y): 1.0034, norm:1.7104, tok/sec: 101025.63, flops:88.47, batch-reuse:1
@ 1104 train 6.8377 , allloss: 6.8508, dt: 1273.88ms, fracRes: 0.4977, norm(attn): 0.0635, norm(output): 0.5742, norm(x): 1.0910, norm(y): 1.0033, norm:0.8748, tok/sec: 102891.62, flops:90.10, batch-reuse:1
@ 1105 train 6.6742 , allloss: 6.6846, dt: 1297.16ms, fracRes: 0.4989, norm(attn): 0.0586, norm(output): 0.5703, norm(x): 1.0924, norm(y): 1.0033, norm:1.3349, tok/sec: 101045.14, flops:88.48, batch-reuse:1
@ 1106 train 6.5873 , allloss: 6.5966, dt: 1266.64ms, fracRes: 0.5014, norm(attn): 0.0569, norm(output): 0.5664, norm(x): 1.1006, norm(y): 1.0034, norm:0.7907, tok/sec: 103480.08, flops:90.62, batch-reuse:1
@ 1107 train 6.7310 , allloss: 6.7411, dt: 1277.88ms, fracRes: 0.5032, norm(attn): 0.0608, norm(output): 0.5703, norm(x): 1.1067, norm(y): 1.0034, norm:1.1360, tok/sec: 102570.15, flops:89.82, batch-reuse:1
@ 1108 train 6.6190 , allloss: 6.6284, dt: 1257.33ms, fracRes: 0.5016, norm(attn): 0.0583, norm(output): 0.5664, norm(x): 1.1055, norm(y): 1.0034, norm:0.8731, tok/sec: 104246.13, flops:91.29, batch-reuse:1
@ 1109 train 6.6338 , allloss: 6.6440, dt: 1268.85ms, fracRes: 0.5000, norm(attn): 0.0579, norm(output): 0.5703, norm(x): 1.0982, norm(y): 1.0034, norm:1.6971, tok/sec: 103299.52, flops:90.46, batch-reuse:1
@ 1110 train 6.6373 , allloss: 6.6476, dt: 1257.44ms, fracRes: 0.4994, norm(attn): 0.0571, norm(output): 0.5664, norm(x): 1.0994, norm(y): 1.0034, norm:0.8039, tok/sec: 104237.31, flops:91.28, batch-reuse:1
@ 1111 train 6.5974 , allloss: 6.6075, dt: 1286.13ms, fracRes: 0.5003, norm(attn): 0.0559, norm(output): 0.5664, norm(x): 1.1059, norm(y): 1.0034, norm:1.1143, tok/sec: 101911.85, flops:89.24, batch-reuse:1
@ 1112 train 6.7507 , allloss: 6.7600, dt: 1289.20ms, fracRes: 0.5001, norm(attn): 0.0559, norm(output): 0.5664, norm(x): 1.1050, norm(y): 1.0034, norm:1.2701, tok/sec: 101669.36, flops:89.03, batch-reuse:1
@ 1113 train 6.7516 , allloss: 6.7613, dt: 1271.78ms, fracRes: 0.4986, norm(attn): 0.0576, norm(output): 0.5703, norm(x): 1.1045, norm(y): 1.0034, norm:1.4642, tok/sec: 103061.79, flops:90.25, batch-reuse:1
@ 1114 train 6.7709 , allloss: 6.7804, dt: 1268.77ms, fracRes: 0.4986, norm(attn): 0.0566, norm(output): 0.5664, norm(x): 1.1054, norm(y): 1.0034, norm:1.0078, tok/sec: 103306.16, flops:90.46, batch-reuse:1
@ 1115 train 6.7512 , allloss: 6.7613, dt: 1262.17ms, fracRes: 0.4985, norm(attn): 0.0581, norm(output): 0.5703, norm(x): 1.1057, norm(y): 1.0034, norm:0.9862, tok/sec: 103846.94, flops:90.94, batch-reuse:1
@ 1116 train 6.6883 , allloss: 6.6987, dt: 1266.81ms, fracRes: 0.4988, norm(attn): 0.0586, norm(output): 0.5703, norm(x): 1.1092, norm(y): 1.0034, norm:1.6979, tok/sec: 103466.48, flops:90.60, batch-reuse:1
@ 1117 train 6.6769 , allloss: 6.6862, dt: 1260.99ms, fracRes: 0.5004, norm(attn): 0.0583, norm(output): 0.5703, norm(x): 1.1136, norm(y): 1.0034, norm:0.9735, tok/sec: 103943.73, flops:91.02, batch-reuse:1
@ 1118 train 6.7636 , allloss: 6.7722, dt: 1263.64ms, fracRes: 0.5018, norm(attn): 0.0576, norm(output): 0.5703, norm(x): 1.1179, norm(y): 1.0034, norm:1.1022, tok/sec: 103725.91, flops:90.83, batch-reuse:1
@ 1119 train 6.7281 , allloss: 6.7364, dt: 1248.81ms, fracRes: 0.5010, norm(attn): 0.0564, norm(output): 0.5781, norm(x): 1.1185, norm(y): 1.0034, norm:1.9651, tok/sec: 104957.56, flops:91.91, batch-reuse:1
@ 1120 train 6.7388 , allloss: 6.7477, dt: 1255.64ms, fracRes: 0.4995, norm(attn): 0.0579, norm(output): 0.5781, norm(x): 1.1114, norm(y): 1.0034, norm:0.9345, tok/sec: 104386.78, flops:91.41, batch-reuse:1
@ 1121 train 6.8550 , allloss: 6.8640, dt: 1258.88ms, fracRes: 0.5003, norm(attn): 0.0569, norm(output): 0.5742, norm(x): 1.1120, norm(y): 1.0034, norm:3.3317, tok/sec: 104118.13, flops:91.17, batch-reuse:1
@ 1122 train 6.7650 , allloss: 6.7744, dt: 1267.14ms, fracRes: 0.5004, norm(attn): 0.0576, norm(output): 0.5742, norm(x): 1.1154, norm(y): 1.0034, norm:1.7138, tok/sec: 103438.92, flops:90.58, batch-reuse:1
@ 1123 train 6.7160 , allloss: 6.7250, dt: 1281.82ms, fracRes: 0.5004, norm(attn): 0.0583, norm(output): 0.5781, norm(x): 1.1227, norm(y): 1.0034, norm:2.7976, tok/sec: 102254.83, flops:89.54, batch-reuse:1
@ 1124 train 6.7504 , allloss: 6.7597, dt: 1276.47ms, fracRes: 0.4994, norm(attn): 0.0586, norm(output): 0.5820, norm(x): 1.1210, norm(y): 1.0033, norm:2.7043, tok/sec: 102683.53, flops:89.92, batch-reuse:1
@ 1125 train 6.7771 , allloss: 6.7867, dt: 1273.39ms, fracRes: 0.4980, norm(attn): 0.0601, norm(output): 0.5781, norm(x): 1.1178, norm(y): 1.0033, norm:2.0443, tok/sec: 102931.17, flops:90.14, batch-reuse:1
@ 1126 train 6.7550 , allloss: 6.7644, dt: 1259.04ms, fracRes: 0.4977, norm(attn): 0.0576, norm(output): 0.5742, norm(x): 1.1193, norm(y): 1.0034, norm:3.4517, tok/sec: 104104.35, flops:91.16, batch-reuse:1
@ 1127 train 6.7518 , allloss: 6.7614, dt: 1260.66ms, fracRes: 0.4978, norm(attn): 0.0586, norm(output): 0.5820, norm(x): 1.1184, norm(y): 1.0034, norm:2.4829, tok/sec: 103970.88, flops:91.05, batch-reuse:1
@ 1128 train 6.7224 , allloss: 6.7324, dt: 1278.61ms, fracRes: 0.4979, norm(attn): 0.0605, norm(output): 0.5781, norm(x): 1.1184, norm(y): 1.0033, norm:1.1967, tok/sec: 102511.13, flops:89.77, batch-reuse:1
@ 1129 train 6.7580 , allloss: 6.7679, dt: 1276.39ms, fracRes: 0.4981, norm(attn): 0.0603, norm(output): 0.5859, norm(x): 1.1240, norm(y): 1.0033, norm:1.8347, tok/sec: 102689.80, flops:89.92, batch-reuse:1
@ 1130 train 6.6973 , allloss: 6.7069, dt: 1264.54ms, fracRes: 0.4987, norm(attn): 0.0598, norm(output): 0.5859, norm(x): 1.1293, norm(y): 1.0033, norm:1.3450, tok/sec: 103652.16, flops:90.77, batch-reuse:1
@ 1131 train 6.7656 , allloss: 6.7748, dt: 1266.71ms, fracRes: 0.5002, norm(attn): 0.0596, norm(output): 0.5781, norm(x): 1.1301, norm(y): 1.0034, norm:1.9570, tok/sec: 103474.37, flops:90.61, batch-reuse:1
@ 1132 train 6.7709 , allloss: 6.7797, dt: 1278.26ms, fracRes: 0.5004, norm(attn): 0.0588, norm(output): 0.5859, norm(x): 1.1305, norm(y): 1.0034, norm:1.4590, tok/sec: 102539.03, flops:89.79, batch-reuse:1
@ 1133 train 6.7916 , allloss: 6.8016, dt: 1292.34ms, fracRes: 0.4990, norm(attn): 0.0618, norm(output): 0.5820, norm(x): 1.1278, norm(y): 1.0033, norm:1.5880, tok/sec: 101421.92, flops:88.81, batch-reuse:1
@ 1134 train 6.7371 , allloss: 6.7465, dt: 1262.14ms, fracRes: 0.5012, norm(attn): 0.0605, norm(output): 0.5898, norm(x): 1.1332, norm(y): 1.0034, norm:1.4744, tok/sec: 103849.09, flops:90.94, batch-reuse:1
@ 1135 train 6.6935 , allloss: 6.7019, dt: 1248.16ms, fracRes: 0.5026, norm(attn): 0.0581, norm(output): 0.5820, norm(x): 1.1413, norm(y): 1.0034, norm:0.9759, tok/sec: 105011.95, flops:91.96, batch-reuse:1
@ 1136 train 6.7843 , allloss: 6.7939, dt: 1269.67ms, fracRes: 0.5009, norm(attn): 0.0591, norm(output): 0.5781, norm(x): 1.1331, norm(y): 1.0034, norm:1.4013, tok/sec: 103232.81, flops:90.40, batch-reuse:1
@ 1137 train 6.7436 , allloss: 6.7536, dt: 1260.10ms, fracRes: 0.5000, norm(attn): 0.0586, norm(output): 0.5742, norm(x): 1.1269, norm(y): 1.0034, norm:1.0004, tok/sec: 104017.07, flops:91.09, batch-reuse:1
@ 1138 train 6.8643 , allloss: 6.8740, dt: 1281.07ms, fracRes: 0.5030, norm(attn): 0.0593, norm(output): 0.5898, norm(x): 1.1388, norm(y): 1.0034, norm:2.5111, tok/sec: 102314.34, flops:89.60, batch-reuse:1
@ 1139 train 6.7520 , allloss: 6.7623, dt: 1255.19ms, fracRes: 0.5043, norm(attn): 0.0603, norm(output): 0.5859, norm(x): 1.1463, norm(y): 1.0034, norm:1.2569, tok/sec: 104423.86, flops:91.44, batch-reuse:1
@ 1140 train 6.7573 , allloss: 6.7675, dt: 1269.59ms, fracRes: 0.5048, norm(attn): 0.0596, norm(output): 0.5859, norm(x): 1.1496, norm(y): 1.0034, norm:1.1635, tok/sec: 103239.44, flops:90.41, batch-reuse:1
@ 1141 train 6.6824 , allloss: 6.6915, dt: 1255.90ms, fracRes: 0.5040, norm(attn): 0.0583, norm(output): 0.5820, norm(x): 1.1429, norm(y): 1.0035, norm:1.4337, tok/sec: 104365.10, flops:91.39, batch-reuse:1
@ 1142 train 6.6957 , allloss: 6.7051, dt: 1270.40ms, fracRes: 0.5040, norm(attn): 0.0581, norm(output): 0.5859, norm(x): 1.1453, norm(y): 1.0034, norm:0.9118, tok/sec: 103173.53, flops:90.35, batch-reuse:1
@ 1143 train 6.7764 , allloss: 6.7866, dt: 1242.16ms, fracRes: 0.5052, norm(attn): 0.0623, norm(output): 0.5898, norm(x): 1.1488, norm(y): 1.0033, norm:2.2455, tok/sec: 105519.05, flops:92.40, batch-reuse:1
@ 1144 train 6.7046 , allloss: 6.7143, dt: 1281.00ms, fracRes: 0.5053, norm(attn): 0.0583, norm(output): 0.5859, norm(x): 1.1492, norm(y): 1.0034, norm:1.4546, tok/sec: 102319.90, flops:89.60, batch-reuse:1
@ 1145 train 6.7961 , allloss: 6.8060, dt: 1305.00ms, fracRes: 0.5051, norm(attn): 0.0596, norm(output): 0.5898, norm(x): 1.1517, norm(y): 1.0034, norm:2.0769, tok/sec: 100438.33, flops:87.95, batch-reuse:1
@ 1146 train 6.7869 , allloss: 6.7975, dt: 1267.56ms, fracRes: 0.5039, norm(attn): 0.0601, norm(output): 0.5859, norm(x): 1.1481, norm(y): 1.0034, norm:1.7603, tok/sec: 103404.77, flops:90.55, batch-reuse:1
@ 1147 train 6.7218 , allloss: 6.7321, dt: 1266.86ms, fracRes: 0.5024, norm(attn): 0.0596, norm(output): 0.5859, norm(x): 1.1467, norm(y): 1.0034, norm:1.0120, tok/sec: 103462.34, flops:90.60, batch-reuse:1
@ 1148 train 6.7016 , allloss: 6.7111, dt: 1284.10ms, fracRes: 0.5033, norm(attn): 0.0586, norm(output): 0.5859, norm(x): 1.1490, norm(y): 1.0035, norm:2.9527, tok/sec: 102073.06, flops:89.38, batch-reuse:1
@ 1149 train 6.7071 , allloss: 6.7165, dt: 1270.39ms, fracRes: 0.5037, norm(attn): 0.0591, norm(output): 0.5938, norm(x): 1.1566, norm(y): 1.0035, norm:1.3597, tok/sec: 103174.59, flops:90.35, batch-reuse:1
@ 1150 train 6.7429 , allloss: 6.7525, dt: 1268.38ms, fracRes: 0.5026, norm(attn): 0.0591, norm(output): 0.5898, norm(x): 1.1597, norm(y): 1.0034, norm:3.0190, tok/sec: 103338.34, flops:90.49, batch-reuse:1
@ 1151 train 6.7870 , allloss: 6.7973, dt: 1254.94ms, fracRes: 0.5024, norm(attn): 0.0593, norm(output): 0.5898, norm(x): 1.1591, norm(y): 1.0034, norm:1.4700, tok/sec: 104444.93, flops:91.46, batch-reuse:1
@ 1152 train 6.7087 , allloss: 6.7181, dt: 1268.36ms, fracRes: 0.5042, norm(attn): 0.0588, norm(output): 0.5859, norm(x): 1.1623, norm(y): 1.0035, norm:1.1474, tok/sec: 103340.01, flops:90.49, batch-reuse:1
@ 1153 train 6.7406 , allloss: 6.7499, dt: 1270.23ms, fracRes: 0.5045, norm(attn): 0.0588, norm(output): 0.5938, norm(x): 1.1624, norm(y): 1.0035, norm:1.5123, tok/sec: 103187.36, flops:90.36, batch-reuse:1
@ 1154 train 6.7008 , allloss: 6.7094, dt: 1282.97ms, fracRes: 0.5053, norm(attn): 0.0591, norm(output): 0.5859, norm(x): 1.1656, norm(y): 1.0035, norm:1.0281, tok/sec: 102163.14, flops:89.46, batch-reuse:1
@ 1155 train 6.6191 , allloss: 6.6278, dt: 1275.24ms, fracRes: 0.5049, norm(attn): 0.0596, norm(output): 0.5859, norm(x): 1.1645, norm(y): 1.0035, norm:1.1049, tok/sec: 102781.92, flops:90.00, batch-reuse:1
@ 1156 train 6.7566 , allloss: 6.7655, dt: 1260.30ms, fracRes: 0.5053, norm(attn): 0.0596, norm(output): 0.5859, norm(x): 1.1621, norm(y): 1.0035, norm:0.8169, tok/sec: 104001.03, flops:91.07, batch-reuse:1
@ 1157 train 6.6863 , allloss: 6.6954, dt: 1251.70ms, fracRes: 0.5049, norm(attn): 0.0588, norm(output): 0.5859, norm(x): 1.1627, norm(y): 1.0035, norm:1.0197, tok/sec: 104715.01, flops:91.70, batch-reuse:1
@ 1158 train 6.6855 , allloss: 6.6950, dt: 1254.17ms, fracRes: 0.5044, norm(attn): 0.0591, norm(output): 0.5859, norm(x): 1.1631, norm(y): 1.0035, norm:0.7111, tok/sec: 104508.59, flops:91.52, batch-reuse:1
@ 1159 train 6.7238 , allloss: 6.7335, dt: 1287.83ms, fracRes: 0.5054, norm(attn): 0.0601, norm(output): 0.5898, norm(x): 1.1699, norm(y): 1.0034, norm:0.9045, tok/sec: 101777.32, flops:89.12, batch-reuse:1
@ 1160 train 6.7097 , allloss: 6.7188, dt: 1310.08ms, fracRes: 0.5053, norm(attn): 0.0574, norm(output): 0.5938, norm(x): 1.1661, norm(y): 1.0035, norm:0.8223, tok/sec: 100048.79, flops:87.61, batch-reuse:1
@ 1161 train 6.5849 , allloss: 6.5940, dt: 1298.58ms, fracRes: 0.5045, norm(attn): 0.0579, norm(output): 0.5859, norm(x): 1.1643, norm(y): 1.0035, norm:1.9407, tok/sec: 100934.59, flops:88.39, batch-reuse:1
@ 1162 train 6.5575 , allloss: 6.5665, dt: 1274.83ms, fracRes: 0.5046, norm(attn): 0.0579, norm(output): 0.5859, norm(x): 1.1648, norm(y): 1.0035, norm:0.9083, tok/sec: 102815.27, flops:90.03, batch-reuse:1
@ 1163 train 6.7333 , allloss: 6.7423, dt: 1285.12ms, fracRes: 0.5062, norm(attn): 0.0571, norm(output): 0.5859, norm(x): 1.1681, norm(y): 1.0035, norm:0.9460, tok/sec: 101992.22, flops:89.31, batch-reuse:1
@ 1164 train 6.6288 , allloss: 6.6378, dt: 1279.21ms, fracRes: 0.5064, norm(attn): 0.0576, norm(output): 0.5859, norm(x): 1.1699, norm(y): 1.0035, norm:0.6566, tok/sec: 102463.33, flops:89.73, batch-reuse:1
@ 1165 train 6.7357 , allloss: 6.7450, dt: 1275.42ms, fracRes: 0.5070, norm(attn): 0.0581, norm(output): 0.5859, norm(x): 1.1695, norm(y): 1.0035, norm:0.8703, tok/sec: 102767.83, flops:89.99, batch-reuse:1
@ 1166 train 6.6753 , allloss: 6.6848, dt: 1253.13ms, fracRes: 0.5061, norm(attn): 0.0566, norm(output): 0.5859, norm(x): 1.1651, norm(y): 1.0035, norm:0.7891, tok/sec: 104595.84, flops:91.59, batch-reuse:1
@ 1167 train 6.6228 , allloss: 6.6321, dt: 1286.39ms, fracRes: 0.5057, norm(attn): 0.0564, norm(output): 0.5859, norm(x): 1.1635, norm(y): 1.0035, norm:0.8599, tok/sec: 101891.37, flops:89.22, batch-reuse:1
@ 1168 train 6.5869 , allloss: 6.5963, dt: 1291.14ms, fracRes: 0.5056, norm(attn): 0.0564, norm(output): 0.5781, norm(x): 1.1638, norm(y): 1.0036, norm:1.2137, tok/sec: 101516.75, flops:88.90, batch-reuse:1
@ 1169 train 6.6662 , allloss: 6.6758, dt: 1271.90ms, fracRes: 0.5053, norm(attn): 0.0591, norm(output): 0.5859, norm(x): 1.1590, norm(y): 1.0035, norm:0.6574, tok/sec: 103052.00, flops:90.24, batch-reuse:1
@ 1170 train 6.6033 , allloss: 6.6123, dt: 1285.07ms, fracRes: 0.5052, norm(attn): 0.0566, norm(output): 0.5781, norm(x): 1.1579, norm(y): 1.0035, norm:0.9821, tok/sec: 101995.78, flops:89.32, batch-reuse:1
@ 1171 train 6.5668 , allloss: 6.5751, dt: 1250.94ms, fracRes: 0.5059, norm(attn): 0.0552, norm(output): 0.5820, norm(x): 1.1675, norm(y): 1.0036, norm:1.2997, tok/sec: 104778.78, flops:91.75, batch-reuse:1
@ 1172 train 6.7069 , allloss: 6.7163, dt: 1269.05ms, fracRes: 0.5055, norm(attn): 0.0583, norm(output): 0.5859, norm(x): 1.1655, norm(y): 1.0035, norm:0.9521, tok/sec: 103283.26, flops:90.44, batch-reuse:1
@ 1173 train 6.6489 , allloss: 6.6588, dt: 1293.67ms, fracRes: 0.5030, norm(attn): 0.0571, norm(output): 0.5820, norm(x): 1.1564, norm(y): 1.0035, norm:1.9609, tok/sec: 101318.30, flops:88.72, batch-reuse:1
@ 1174 train 6.5663 , allloss: 6.5760, dt: 1289.08ms, fracRes: 0.5016, norm(attn): 0.0576, norm(output): 0.5820, norm(x): 1.1576, norm(y): 1.0035, norm:1.6966, tok/sec: 101678.35, flops:89.04, batch-reuse:1
@ 1175 train 6.7069 , allloss: 6.7172, dt: 1288.19ms, fracRes: 0.5012, norm(attn): 0.0605, norm(output): 0.5820, norm(x): 1.1560, norm(y): 1.0035, norm:1.4741, tok/sec: 101748.80, flops:89.10, batch-reuse:1
@ 1176 train 6.7330 , allloss: 6.7437, dt: 1278.82ms, fracRes: 0.5016, norm(attn): 0.0635, norm(output): 0.5938, norm(x): 1.1608, norm(y): 1.0034, norm:1.1810, tok/sec: 102494.62, flops:89.75, batch-reuse:1
@ 1177 train 6.7109 , allloss: 6.7214, dt: 1256.22ms, fracRes: 0.5018, norm(attn): 0.0610, norm(output): 0.5859, norm(x): 1.1622, norm(y): 1.0034, norm:1.2163, tok/sec: 104338.48, flops:91.37, batch-reuse:1
@ 1178 train 6.8000 , allloss: 6.8099, dt: 1258.98ms, fracRes: 0.5020, norm(attn): 0.0603, norm(output): 0.5820, norm(x): 1.1592, norm(y): 1.0034, norm:4.0008, tok/sec: 104109.83, flops:91.17, batch-reuse:1
@ 1179 train 6.7630 , allloss: 6.7729, dt: 1261.40ms, fracRes: 0.5017, norm(attn): 0.0601, norm(output): 0.5820, norm(x): 1.1592, norm(y): 1.0034, norm:3.9918, tok/sec: 103909.61, flops:90.99, batch-reuse:1
@ 1180 train 6.7200 , allloss: 6.7302, dt: 1278.16ms, fracRes: 0.5008, norm(attn): 0.0608, norm(output): 0.5859, norm(x): 1.1606, norm(y): 1.0034, norm:2.1248, tok/sec: 102547.42, flops:89.80, batch-reuse:1
@ 1181 train 6.6401 , allloss: 6.6498, dt: 1254.70ms, fracRes: 0.5016, norm(attn): 0.0581, norm(output): 0.5859, norm(x): 1.1656, norm(y): 1.0035, norm:1.5853, tok/sec: 104465.19, flops:91.48, batch-reuse:1
@ 1182 train 6.7593 , allloss: 6.7699, dt: 1283.00ms, fracRes: 0.5026, norm(attn): 0.0654, norm(output): 0.5898, norm(x): 1.1731, norm(y): 1.0034, norm:2.1095, tok/sec: 102160.83, flops:89.46, batch-reuse:1
@ 1183 train 6.7105 , allloss: 6.7201, dt: 1280.65ms, fracRes: 0.5036, norm(attn): 0.0579, norm(output): 0.5938, norm(x): 1.1782, norm(y): 1.0035, norm:1.9248, tok/sec: 102347.69, flops:89.62, batch-reuse:1
@ 1184 train 6.6546 , allloss: 6.6644, dt: 1262.85ms, fracRes: 0.5027, norm(attn): 0.0574, norm(output): 0.5859, norm(x): 1.1762, norm(y): 1.0034, norm:2.4696, tok/sec: 103790.31, flops:90.89, batch-reuse:1
@ 1185 train 6.7304 , allloss: 6.7413, dt: 1276.99ms, fracRes: 0.5018, norm(attn): 0.0613, norm(output): 0.5938, norm(x): 1.1717, norm(y): 1.0034, norm:1.7187, tok/sec: 102641.10, flops:89.88, batch-reuse:1
@ 1186 train 6.7197 , allloss: 6.7301, dt: 1274.29ms, fracRes: 0.5035, norm(attn): 0.0610, norm(output): 0.5898, norm(x): 1.1757, norm(y): 1.0034, norm:3.0202, tok/sec: 102859.24, flops:90.07, batch-reuse:1
@ 1187 train 6.7199 , allloss: 6.7295, dt: 1278.07ms, fracRes: 0.5050, norm(attn): 0.0596, norm(output): 0.5898, norm(x): 1.1802, norm(y): 1.0035, norm:1.4589, tok/sec: 102554.77, flops:89.81, batch-reuse:1
@ 1188 train 6.6085 , allloss: 6.6180, dt: 1278.80ms, fracRes: 0.5041, norm(attn): 0.0581, norm(output): 0.5859, norm(x): 1.1798, norm(y): 1.0035, norm:2.2018, tok/sec: 102495.88, flops:89.75, batch-reuse:1
@ 1189 train 6.6273 , allloss: 6.6372, dt: 1247.95ms, fracRes: 0.5033, norm(attn): 0.0615, norm(output): 0.5898, norm(x): 1.1823, norm(y): 1.0034, norm:1.3464, tok/sec: 105029.52, flops:91.97, batch-reuse:1
@ 1190 train 6.7739 , allloss: 6.7840, dt: 1263.22ms, fracRes: 0.5038, norm(attn): 0.0645, norm(output): 0.6016, norm(x): 1.1827, norm(y): 1.0034, norm:1.1532, tok/sec: 103760.21, flops:90.86, batch-reuse:1
@ 1191 train 6.7956 , allloss: 6.8051, dt: 1263.06ms, fracRes: 0.5051, norm(attn): 0.0605, norm(output): 0.5938, norm(x): 1.1854, norm(y): 1.0035, norm:1.3692, tok/sec: 103773.02, flops:90.87, batch-reuse:1
@ 1192 train 6.6148 , allloss: 6.6237, dt: 1274.67ms, fracRes: 0.5049, norm(attn): 0.0593, norm(output): 0.5938, norm(x): 1.1835, norm(y): 1.0035, norm:0.7787, tok/sec: 102828.19, flops:90.05, batch-reuse:1
@ 1193 train 6.6544 , allloss: 6.6635, dt: 1260.93ms, fracRes: 0.5048, norm(attn): 0.0608, norm(output): 0.5938, norm(x): 1.1843, norm(y): 1.0035, norm:1.3464, tok/sec: 103948.39, flops:91.03, batch-reuse:1
@ 1194 train 6.6786 , allloss: 6.6883, dt: 1275.78ms, fracRes: 0.5060, norm(attn): 0.0618, norm(output): 0.5898, norm(x): 1.1876, norm(y): 1.0034, norm:0.7731, tok/sec: 102738.55, flops:89.97, batch-reuse:1
@ 1195 train 6.6159 , allloss: 6.6255, dt: 1290.47ms, fracRes: 0.5071, norm(attn): 0.0618, norm(output): 0.5898, norm(x): 1.1925, norm(y): 1.0035, norm:1.7155, tok/sec: 101569.39, flops:88.94, batch-reuse:1
@ 1196 train 6.7099 , allloss: 6.7196, dt: 1302.11ms, fracRes: 0.5069, norm(attn): 0.0610, norm(output): 0.5938, norm(x): 1.1917, norm(y): 1.0035, norm:1.0387, tok/sec: 100661.31, flops:88.15, batch-reuse:1
@ 1197 train 6.6956 , allloss: 6.7058, dt: 1262.95ms, fracRes: 0.5052, norm(attn): 0.0620, norm(output): 0.6016, norm(x): 1.1935, norm(y): 1.0034, norm:1.7754, tok/sec: 103782.09, flops:90.88, batch-reuse:1
@ 1198 train 6.6680 , allloss: 6.6781, dt: 1269.19ms, fracRes: 0.5070, norm(attn): 0.0593, norm(output): 0.5898, norm(x): 1.1945, norm(y): 1.0035, norm:1.7573, tok/sec: 103271.93, flops:90.43, batch-reuse:1
@ 1199 train 6.6750 , allloss: 6.6852, dt: 1265.23ms, fracRes: 0.5084, norm(attn): 0.0603, norm(output): 0.5938, norm(x): 1.2013, norm(y): 1.0035, norm:1.1244, tok/sec: 103595.05, flops:90.72, batch-reuse:1
@ 1200 train 6.7210 , allloss: 6.7309, dt: 1246.56ms, fracRes: 0.5084, norm(attn): 0.0610, norm(output): 0.5938, norm(x): 1.1982, norm(y): 1.0034, norm:2.1898, tok/sec: 105147.36, flops:92.08, batch-reuse:1
@ 1201 train 6.6799 , allloss: 6.6896, dt: 1264.00ms, fracRes: 0.5074, norm(attn): 0.0605, norm(output): 0.6016, norm(x): 1.1933, norm(y): 1.0034, norm:1.2471, tok/sec: 103696.21, flops:90.81, batch-reuse:1
@ 1202 train 6.7847 , allloss: 6.7945, dt: 1253.13ms, fracRes: 0.5083, norm(attn): 0.0588, norm(output): 0.5938, norm(x): 1.1980, norm(y): 1.0035, norm:3.0480, tok/sec: 104596.05, flops:91.59, batch-reuse:1
@ 1203 train 6.9564 , allloss: 6.9672, dt: 1263.75ms, fracRes: 0.5092, norm(attn): 0.0625, norm(output): 0.5977, norm(x): 1.1985, norm(y): 1.0034, norm:2.7058, tok/sec: 103716.89, flops:90.82, batch-reuse:1
@ 1204 train 6.6597 , allloss: 6.6697, dt: 1266.87ms, fracRes: 0.5083, norm(attn): 0.0598, norm(output): 0.6016, norm(x): 1.2029, norm(y): 1.0034, norm:1.2757, tok/sec: 103460.93, flops:90.60, batch-reuse:1
@ 1205 train 6.6141 , allloss: 6.6235, dt: 1268.67ms, fracRes: 0.5094, norm(attn): 0.0593, norm(output): 0.6016, norm(x): 1.2069, norm(y): 1.0034, norm:1.5011, tok/sec: 103314.18, flops:90.47, batch-reuse:1
@ 1206 train 6.6153 , allloss: 6.6247, dt: 1284.96ms, fracRes: 0.5095, norm(attn): 0.0588, norm(output): 0.6016, norm(x): 1.2055, norm(y): 1.0035, norm:1.3315, tok/sec: 102004.96, flops:89.32, batch-reuse:1
@ 1207 train 6.6769 , allloss: 6.6868, dt: 1301.67ms, fracRes: 0.5095, norm(attn): 0.0598, norm(output): 0.6016, norm(x): 1.2056, norm(y): 1.0035, norm:2.1902, tok/sec: 100694.90, flops:88.18, batch-reuse:1
@ 1208 train 6.5822 , allloss: 6.5918, dt: 1269.13ms, fracRes: 0.5083, norm(attn): 0.0593, norm(output): 0.6016, norm(x): 1.2050, norm(y): 1.0035, norm:0.8697, tok/sec: 103277.17, flops:90.44, batch-reuse:1
@ 1209 train 6.6051 , allloss: 6.6148, dt: 1280.86ms, fracRes: 0.5075, norm(attn): 0.0601, norm(output): 0.6016, norm(x): 1.2072, norm(y): 1.0034, norm:2.1877, tok/sec: 102330.95, flops:89.61, batch-reuse:1
@ 1210 train 6.6547 , allloss: 6.6651, dt: 1278.25ms, fracRes: 0.5078, norm(attn): 0.0608, norm(output): 0.6016, norm(x): 1.2100, norm(y): 1.0034, norm:4.7079, tok/sec: 102540.02, flops:89.79, batch-reuse:1
@ 1211 train 6.7035 , allloss: 6.7139, dt: 1258.09ms, fracRes: 0.5071, norm(attn): 0.0608, norm(output): 0.6016, norm(x): 1.2146, norm(y): 1.0034, norm:2.7118, tok/sec: 104183.46, flops:91.23, batch-reuse:1
@ 1212 train 6.7333 , allloss: 6.7437, dt: 1283.40ms, fracRes: 0.5061, norm(attn): 0.0593, norm(output): 0.6016, norm(x): 1.2114, norm(y): 1.0035, norm:2.7842, tok/sec: 102128.47, flops:89.43, batch-reuse:1
@ 1213 train 6.6333 , allloss: 6.6437, dt: 1251.28ms, fracRes: 0.5053, norm(attn): 0.0576, norm(output): 0.6016, norm(x): 1.2106, norm(y): 1.0034, norm:2.9240, tok/sec: 104750.43, flops:91.73, batch-reuse:1
@ 1214 train 6.6404 , allloss: 6.6513, dt: 1267.92ms, fracRes: 0.5056, norm(attn): 0.0593, norm(output): 0.6016, norm(x): 1.2127, norm(y): 1.0034, norm:1.3688, tok/sec: 103375.26, flops:90.52, batch-reuse:1
@ 1215 train 6.6448 , allloss: 6.6548, dt: 1282.73ms, fracRes: 0.5078, norm(attn): 0.0596, norm(output): 0.6016, norm(x): 1.2207, norm(y): 1.0034, norm:0.8091, tok/sec: 102181.90, flops:89.48, batch-reuse:1
@ 1216 train 6.6488 , allloss: 6.6586, dt: 1272.94ms, fracRes: 0.5094, norm(attn): 0.0596, norm(output): 0.6016, norm(x): 1.2218, norm(y): 1.0035, norm:0.9085, tok/sec: 102967.73, flops:90.17, batch-reuse:1
@ 1217 train 6.6355 , allloss: 6.6455, dt: 1284.95ms, fracRes: 0.5087, norm(attn): 0.0605, norm(output): 0.6016, norm(x): 1.2181, norm(y): 1.0034, norm:1.4822, tok/sec: 102005.79, flops:89.33, batch-reuse:1
@ 1218 train 6.7324 , allloss: 6.7437, dt: 1269.05ms, fracRes: 0.5086, norm(attn): 0.0630, norm(output): 0.6016, norm(x): 1.2179, norm(y): 1.0034, norm:1.2302, tok/sec: 103283.94, flops:90.44, batch-reuse:1
@ 1219 train 6.5828 , allloss: 6.5918, dt: 1294.32ms, fracRes: 0.5099, norm(attn): 0.0579, norm(output): 0.5977, norm(x): 1.2213, norm(y): 1.0035, norm:1.1027, tok/sec: 101266.95, flops:88.68, batch-reuse:1
@ 1220 train 6.6317 , allloss: 6.6408, dt: 1263.14ms, fracRes: 0.5100, norm(attn): 0.0574, norm(output): 0.6016, norm(x): 1.2223, norm(y): 1.0035, norm:0.8168, tok/sec: 103766.85, flops:90.87, batch-reuse:1
@ 1221 train 6.5672 , allloss: 6.5769, dt: 1253.61ms, fracRes: 0.5100, norm(attn): 0.0581, norm(output): 0.6016, norm(x): 1.2234, norm(y): 1.0035, norm:0.9960, tok/sec: 104555.45, flops:91.56, batch-reuse:1
@ 1222 train 6.6204 , allloss: 6.6298, dt: 1281.99ms, fracRes: 0.5103, norm(attn): 0.0571, norm(output): 0.6016, norm(x): 1.2241, norm(y): 1.0035, norm:1.2058, tok/sec: 102240.83, flops:89.53, batch-reuse:1
@ 1223 train 6.6281 , allloss: 6.6388, dt: 1269.33ms, fracRes: 0.5105, norm(attn): 0.0610, norm(output): 0.6055, norm(x): 1.2235, norm(y): 1.0034, norm:1.3216, tok/sec: 103260.93, flops:90.42, batch-reuse:1
@ 1224 train 6.5521 , allloss: 6.5611, dt: 1286.52ms, fracRes: 0.5117, norm(attn): 0.0576, norm(output): 0.6016, norm(x): 1.2332, norm(y): 1.0035, norm:1.2155, tok/sec: 101880.76, flops:89.22, batch-reuse:1
@ 1225 train 6.5921 , allloss: 6.6017, dt: 1262.25ms, fracRes: 0.5103, norm(attn): 0.0596, norm(output): 0.6016, norm(x): 1.2242, norm(y): 1.0035, norm:1.5045, tok/sec: 103840.31, flops:90.93, batch-reuse:1
@ 1226 train 6.6721 , allloss: 6.6816, dt: 1295.44ms, fracRes: 0.5092, norm(attn): 0.0574, norm(output): 0.6016, norm(x): 1.2248, norm(y): 1.0034, norm:1.5557, tok/sec: 101179.67, flops:88.60, batch-reuse:1
@ 1227 train 6.6081 , allloss: 6.6175, dt: 1256.32ms, fracRes: 0.5088, norm(attn): 0.0581, norm(output): 0.6016, norm(x): 1.2266, norm(y): 1.0034, norm:0.9267, tok/sec: 104330.09, flops:91.36, batch-reuse:1
@ 1228 train 6.5996 , allloss: 6.6090, dt: 1265.74ms, fracRes: 0.5089, norm(attn): 0.0579, norm(output): 0.6016, norm(x): 1.2292, norm(y): 1.0035, norm:1.7708, tok/sec: 103553.76, flops:90.68, batch-reuse:1
@ 1229 train 6.6157 , allloss: 6.6256, dt: 1278.56ms, fracRes: 0.5075, norm(attn): 0.0586, norm(output): 0.6016, norm(x): 1.2272, norm(y): 1.0035, norm:1.2842, tok/sec: 102515.01, flops:89.77, batch-reuse:1
@ 1230 train 6.5993 , allloss: 6.6096, dt: 1261.21ms, fracRes: 0.5046, norm(attn): 0.0586, norm(output): 0.6016, norm(x): 1.2220, norm(y): 1.0034, norm:1.7396, tok/sec: 103925.60, flops:91.01, batch-reuse:1
@ 1231 train 6.6455 , allloss: 6.6557, dt: 1266.36ms, fracRes: 0.5058, norm(attn): 0.0588, norm(output): 0.6016, norm(x): 1.2199, norm(y): 1.0034, norm:3.3327, tok/sec: 103502.89, flops:90.64, batch-reuse:1
@ 1232 train 6.5974 , allloss: 6.6072, dt: 1265.61ms, fracRes: 0.5063, norm(attn): 0.0581, norm(output): 0.6016, norm(x): 1.2207, norm(y): 1.0035, norm:1.7199, tok/sec: 103563.90, flops:90.69, batch-reuse:1
@ 1233 train 6.6009 , allloss: 6.6104, dt: 1291.26ms, fracRes: 0.5078, norm(attn): 0.0579, norm(output): 0.6016, norm(x): 1.2269, norm(y): 1.0035, norm:3.2512, tok/sec: 101506.96, flops:88.89, batch-reuse:1
@ 1234 train 6.6422 , allloss: 6.6514, dt: 1245.11ms, fracRes: 0.5089, norm(attn): 0.0576, norm(output): 0.6016, norm(x): 1.2315, norm(y): 1.0035, norm:1.7378, tok/sec: 105269.67, flops:92.18, batch-reuse:1
@ 1235 train 6.5999 , allloss: 6.6096, dt: 1260.27ms, fracRes: 0.5093, norm(attn): 0.0613, norm(output): 0.6055, norm(x): 1.2361, norm(y): 1.0035, norm:0.9094, tok/sec: 104002.84, flops:91.07, batch-reuse:1
@ 1236 train 6.7098 , allloss: 6.7209, dt: 1269.66ms, fracRes: 0.5085, norm(attn): 0.0620, norm(output): 0.6055, norm(x): 1.2305, norm(y): 1.0034, norm:1.9999, tok/sec: 103233.55, flops:90.40, batch-reuse:1
@ 1237 train 6.6528 , allloss: 6.6637, dt: 1258.75ms, fracRes: 0.5092, norm(attn): 0.0613, norm(output): 0.6055, norm(x): 1.2357, norm(y): 1.0035, norm:1.5006, tok/sec: 104128.82, flops:91.18, batch-reuse:1
@ 1238 train 6.5792 , allloss: 6.5899, dt: 1264.92ms, fracRes: 0.5114, norm(attn): 0.0586, norm(output): 0.6016, norm(x): 1.2422, norm(y): 1.0036, norm:1.0582, tok/sec: 103621.00, flops:90.74, batch-reuse:1
@ 1239 train 6.6031 , allloss: 6.6138, dt: 1255.96ms, fracRes: 0.5132, norm(attn): 0.0608, norm(output): 0.6016, norm(x): 1.2525, norm(y): 1.0036, norm:1.3344, tok/sec: 104360.21, flops:91.39, batch-reuse:1
@ 1240 train 6.5786 , allloss: 6.5882, dt: 1263.24ms, fracRes: 0.5124, norm(attn): 0.0601, norm(output): 0.6016, norm(x): 1.2521, norm(y): 1.0036, norm:0.8845, tok/sec: 103758.50, flops:90.86, batch-reuse:1
@ 1241 train 6.5517 , allloss: 6.5611, dt: 1267.93ms, fracRes: 0.5107, norm(attn): 0.0586, norm(output): 0.6016, norm(x): 1.2470, norm(y): 1.0036, norm:0.8331, tok/sec: 103374.61, flops:90.52, batch-reuse:1
@ 1242 train 6.6003 , allloss: 6.6103, dt: 1264.31ms, fracRes: 0.5098, norm(attn): 0.0581, norm(output): 0.6016, norm(x): 1.2426, norm(y): 1.0035, norm:0.9122, tok/sec: 103670.61, flops:90.78, batch-reuse:1
@ 1243 train 6.6165 , allloss: 6.6268, dt: 1289.35ms, fracRes: 0.5088, norm(attn): 0.0588, norm(output): 0.6055, norm(x): 1.2459, norm(y): 1.0035, norm:0.9628, tok/sec: 101657.14, flops:89.02, batch-reuse:1
@ 1244 train 6.6015 , allloss: 6.6117, dt: 1314.03ms, fracRes: 0.5088, norm(attn): 0.0586, norm(output): 0.6055, norm(x): 1.2478, norm(y): 1.0035, norm:0.6735, tok/sec: 99747.95, flops:87.35, batch-reuse:1
@ 1245 train 6.5418 , allloss: 6.5520, dt: 1316.07ms, fracRes: 0.5088, norm(attn): 0.0586, norm(output): 0.6055, norm(x): 1.2499, norm(y): 1.0035, norm:0.7898, tok/sec: 99593.82, flops:87.21, batch-reuse:1
@ 1246 train 6.5776 , allloss: 6.5881, dt: 1308.32ms, fracRes: 0.5081, norm(attn): 0.0603, norm(output): 0.6055, norm(x): 1.2472, norm(y): 1.0035, norm:1.3414, tok/sec: 100183.40, flops:87.73, batch-reuse:1
@ 1247 train 6.5290 , allloss: 6.5394, dt: 1279.34ms, fracRes: 0.5077, norm(attn): 0.0605, norm(output): 0.6094, norm(x): 1.2485, norm(y): 1.0035, norm:1.7465, tok/sec: 102452.65, flops:89.72, batch-reuse:1
@ 1248 train 6.6144 , allloss: 6.6248, dt: 1250.29ms, fracRes: 0.5070, norm(attn): 0.0596, norm(output): 0.6055, norm(x): 1.2474, norm(y): 1.0035, norm:0.7498, tok/sec: 104832.93, flops:91.80, batch-reuse:1
@ 1249 train 6.4994 , allloss: 6.5090, dt: 1267.92ms, fracRes: 0.5081, norm(attn): 0.0588, norm(output): 0.6055, norm(x): 1.2508, norm(y): 1.0036, norm:1.2477, tok/sec: 103375.98, flops:90.52, batch-reuse:1
@ 1250 train 6.6535 , allloss: 6.6636, dt: 1266.39ms, fracRes: 0.5077, norm(attn): 0.0605, norm(output): 0.6055, norm(x): 1.2527, norm(y): 1.0035, norm:1.9133, tok/sec: 103500.55, flops:90.63, batch-reuse:1
@ 1251 train 6.5690 , allloss: 6.5786, dt: 1241.10ms, fracRes: 0.5097, norm(attn): 0.0586, norm(output): 0.6055, norm(x): 1.2532, norm(y): 1.0035, norm:1.2970, tok/sec: 105609.45, flops:92.48, batch-reuse:1
@ 1252 train 6.6544 , allloss: 6.6653, dt: 1256.31ms, fracRes: 0.5104, norm(attn): 0.0618, norm(output): 0.6094, norm(x): 1.2484, norm(y): 1.0035, norm:1.4441, tok/sec: 104331.04, flops:91.36, batch-reuse:1
@ 1253 train 6.5639 , allloss: 6.5749, dt: 1252.18ms, fracRes: 0.5116, norm(attn): 0.0603, norm(output): 0.6016, norm(x): 1.2471, norm(y): 1.0035, norm:2.2662, tok/sec: 104675.36, flops:91.66, batch-reuse:1
@ 1254 train 6.5932 , allloss: 6.6035, dt: 1254.94ms, fracRes: 0.5123, norm(attn): 0.0588, norm(output): 0.6055, norm(x): 1.2542, norm(y): 1.0035, norm:1.2668, tok/sec: 104444.97, flops:91.46, batch-reuse:1
@ 1255 train 6.6175 , allloss: 6.6272, dt: 1252.42ms, fracRes: 0.5124, norm(attn): 0.0591, norm(output): 0.6016, norm(x): 1.2550, norm(y): 1.0036, norm:2.2047, tok/sec: 104655.03, flops:91.64, batch-reuse:1
@ 1256 train 6.5589 , allloss: 6.5685, dt: 1249.27ms, fracRes: 0.5135, norm(attn): 0.0586, norm(output): 0.6055, norm(x): 1.2587, norm(y): 1.0036, norm:1.0628, tok/sec: 104918.94, flops:91.88, batch-reuse:1
@ 1257 train 6.6367 , allloss: 6.6468, dt: 1258.39ms, fracRes: 0.5133, norm(attn): 0.0581, norm(output): 0.6055, norm(x): 1.2601, norm(y): 1.0035, norm:3.8726, tok/sec: 104158.63, flops:91.21, batch-reuse:1
@ 1258 train 6.6042 , allloss: 6.6144, dt: 1256.33ms, fracRes: 0.5114, norm(attn): 0.0576, norm(output): 0.6094, norm(x): 1.2568, norm(y): 1.0035, norm:2.4434, tok/sec: 104329.55, flops:91.36, batch-reuse:1
@ 1259 train 6.5799 , allloss: 6.5904, dt: 1273.34ms, fracRes: 0.5097, norm(attn): 0.0591, norm(output): 0.6094, norm(x): 1.2551, norm(y): 1.0035, norm:2.0247, tok/sec: 102935.53, flops:90.14, batch-reuse:1
@ 1260 train 6.5740 , allloss: 6.5840, dt: 1279.66ms, fracRes: 0.5097, norm(attn): 0.0571, norm(output): 0.6055, norm(x): 1.2549, norm(y): 1.0035, norm:1.6893, tok/sec: 102426.85, flops:89.69, batch-reuse:1
@ 1261 train 6.5958 , allloss: 6.6062, dt: 1278.74ms, fracRes: 0.5104, norm(attn): 0.0591, norm(output): 0.6055, norm(x): 1.2554, norm(y): 1.0035, norm:2.9266, tok/sec: 102500.50, flops:89.76, batch-reuse:1
@ 1262 train 6.5884 , allloss: 6.5992, dt: 1275.59ms, fracRes: 0.5105, norm(attn): 0.0593, norm(output): 0.6055, norm(x): 1.2550, norm(y): 1.0035, norm:1.3311, tok/sec: 102753.77, flops:89.98, batch-reuse:1
@ 1263 train 6.5484 , allloss: 6.5592, dt: 1303.03ms, fracRes: 0.5115, norm(attn): 0.0596, norm(output): 0.6094, norm(x): 1.2588, norm(y): 1.0035, norm:1.1541, tok/sec: 100590.14, flops:88.09, batch-reuse:1
@ 1264 train 6.6673 , allloss: 6.6781, dt: 1308.97ms, fracRes: 0.5135, norm(attn): 0.0620, norm(output): 0.6094, norm(x): 1.2619, norm(y): 1.0035, norm:1.4242, tok/sec: 100133.69, flops:87.69, batch-reuse:1
@ 1265 train 6.5373 , allloss: 6.5474, dt: 1301.87ms, fracRes: 0.5150, norm(attn): 0.0581, norm(output): 0.6055, norm(x): 1.2654, norm(y): 1.0036, norm:0.9913, tok/sec: 100679.80, flops:88.16, batch-reuse:1
@ 1266 train 6.5847 , allloss: 6.5952, dt: 1282.94ms, fracRes: 0.5149, norm(attn): 0.0581, norm(output): 0.6016, norm(x): 1.2636, norm(y): 1.0036, norm:1.4972, tok/sec: 102165.21, flops:89.46, batch-reuse:1
@ 1267 train 6.5870 , allloss: 6.5974, dt: 1275.92ms, fracRes: 0.5150, norm(attn): 0.0574, norm(output): 0.6016, norm(x): 1.2650, norm(y): 1.0036, norm:0.7131, tok/sec: 102727.12, flops:89.96, batch-reuse:1
@ 1268 train 6.6218 , allloss: 6.6320, dt: 1258.82ms, fracRes: 0.5164, norm(attn): 0.0583, norm(output): 0.6055, norm(x): 1.2711, norm(y): 1.0036, norm:1.0859, tok/sec: 104122.90, flops:91.18, batch-reuse:1
@ 1269 train 6.5843 , allloss: 6.5945, dt: 1264.72ms, fracRes: 0.5171, norm(attn): 0.0586, norm(output): 0.6055, norm(x): 1.2724, norm(y): 1.0036, norm:0.9353, tok/sec: 103637.23, flops:90.75, batch-reuse:1
@ 1270 train 6.5325 , allloss: 6.5427, dt: 1268.37ms, fracRes: 0.5152, norm(attn): 0.0598, norm(output): 0.6055, norm(x): 1.2687, norm(y): 1.0035, norm:1.0122, tok/sec: 103338.90, flops:90.49, batch-reuse:1
@ 1271 train 6.5374 , allloss: 6.5474, dt: 1289.78ms, fracRes: 0.5152, norm(attn): 0.0591, norm(output): 0.6016, norm(x): 1.2682, norm(y): 1.0036, norm:1.1418, tok/sec: 101623.77, flops:88.99, batch-reuse:1
@ 1272 train 6.5428 , allloss: 6.5528, dt: 1311.07ms, fracRes: 0.5157, norm(attn): 0.0601, norm(output): 0.6055, norm(x): 1.2704, norm(y): 1.0036, norm:0.6602, tok/sec: 99973.34, flops:87.55, batch-reuse:1
@ 1273 train 6.5830 , allloss: 6.5932, dt: 1312.76ms, fracRes: 0.5157, norm(attn): 0.0593, norm(output): 0.6016, norm(x): 1.2703, norm(y): 1.0035, norm:1.2935, tok/sec: 99844.87, flops:87.43, batch-reuse:1
@ 1274 train 6.5762 , allloss: 6.5869, dt: 1312.75ms, fracRes: 0.5157, norm(attn): 0.0635, norm(output): 0.6094, norm(x): 1.2689, norm(y): 1.0035, norm:1.0699, tok/sec: 99845.21, flops:87.43, batch-reuse:1
@ 1275 train 6.6544 , allloss: 6.6647, dt: 1293.05ms, fracRes: 0.5167, norm(attn): 0.0620, norm(output): 0.6055, norm(x): 1.2736, norm(y): 1.0036, norm:0.9445, tok/sec: 101366.48, flops:88.77, batch-reuse:1
@ 1276 train 6.5130 , allloss: 6.5227, dt: 1285.57ms, fracRes: 0.5152, norm(attn): 0.0586, norm(output): 0.6055, norm(x): 1.2709, norm(y): 1.0036, norm:1.2437, tok/sec: 101956.58, flops:89.28, batch-reuse:1
@ 1277 train 6.4891 , allloss: 6.4986, dt: 1259.53ms, fracRes: 0.5151, norm(attn): 0.0591, norm(output): 0.6016, norm(x): 1.2705, norm(y): 1.0036, norm:1.0087, tok/sec: 104064.21, flops:91.13, batch-reuse:1
@ 1278 train 6.5959 , allloss: 6.6054, dt: 1274.02ms, fracRes: 0.5156, norm(attn): 0.0588, norm(output): 0.6055, norm(x): 1.2695, norm(y): 1.0036, norm:1.5227, tok/sec: 102880.67, flops:90.09, batch-reuse:1
@ 1279 train 6.6620 , allloss: 6.6726, dt: 1274.06ms, fracRes: 0.5165, norm(attn): 0.0630, norm(output): 0.6094, norm(x): 1.2708, norm(y): 1.0035, norm:1.2480, tok/sec: 102877.38, flops:90.09, batch-reuse:1
@ 1280 train 6.5076 , allloss: 6.5172, dt: 1266.52ms, fracRes: 0.5154, norm(attn): 0.0588, norm(output): 0.6055, norm(x): 1.2703, norm(y): 1.0036, norm:1.2203, tok/sec: 103489.62, flops:90.62, batch-reuse:1
@ 1281 train 6.5099 , allloss: 6.5196, dt: 1290.01ms, fracRes: 0.5153, norm(attn): 0.0598, norm(output): 0.6094, norm(x): 1.2705, norm(y): 1.0036, norm:0.8804, tok/sec: 101605.47, flops:88.97, batch-reuse:1
@ 1282 train 6.5034 , allloss: 6.5132, dt: 1281.38ms, fracRes: 0.5155, norm(attn): 0.0593, norm(output): 0.6055, norm(x): 1.2735, norm(y): 1.0036, norm:0.7892, tok/sec: 102290.03, flops:89.57, batch-reuse:1
@ 1283 train 6.5319 , allloss: 6.5413, dt: 1252.61ms, fracRes: 0.5173, norm(attn): 0.0596, norm(output): 0.6055, norm(x): 1.2804, norm(y): 1.0036, norm:0.6484, tok/sec: 104638.96, flops:91.63, batch-reuse:1
@ 1284 train 6.5023 , allloss: 6.5119, dt: 1256.92ms, fracRes: 0.5181, norm(attn): 0.0615, norm(output): 0.6133, norm(x): 1.2801, norm(y): 1.0036, norm:1.0359, tok/sec: 104280.55, flops:91.32, batch-reuse:1
@ 1285 train 6.4665 , allloss: 6.4759, dt: 1278.31ms, fracRes: 0.5172, norm(attn): 0.0586, norm(output): 0.6055, norm(x): 1.2765, norm(y): 1.0036, norm:1.6303, tok/sec: 102535.11, flops:89.79, batch-reuse:1
@ 1286 train 6.6186 , allloss: 6.6289, dt: 1273.65ms, fracRes: 0.5167, norm(attn): 0.0618, norm(output): 0.6055, norm(x): 1.2758, norm(y): 1.0035, norm:0.9199, tok/sec: 102910.23, flops:90.12, batch-reuse:1
@ 1287 train 6.5781 , allloss: 6.5878, dt: 1258.62ms, fracRes: 0.5178, norm(attn): 0.0618, norm(output): 0.6055, norm(x): 1.2832, norm(y): 1.0036, norm:1.1599, tok/sec: 104139.81, flops:91.19, batch-reuse:1
@ 1288 train 6.5707 , allloss: 6.5807, dt: 1289.12ms, fracRes: 0.5166, norm(attn): 0.0618, norm(output): 0.6055, norm(x): 1.2800, norm(y): 1.0035, norm:0.6944, tok/sec: 101675.94, flops:89.04, batch-reuse:1
@ 1289 train 6.4713 , allloss: 6.4812, dt: 1271.00ms, fracRes: 0.5149, norm(attn): 0.0603, norm(output): 0.6055, norm(x): 1.2729, norm(y): 1.0035, norm:1.0025, tok/sec: 103125.42, flops:90.31, batch-reuse:1
@ 1290 train 6.4731 , allloss: 6.4835, dt: 1276.45ms, fracRes: 0.5158, norm(attn): 0.0605, norm(output): 0.6016, norm(x): 1.2721, norm(y): 1.0036, norm:1.0933, tok/sec: 102684.74, flops:89.92, batch-reuse:1
@ 1291 train 6.5177 , allloss: 6.5277, dt: 1284.27ms, fracRes: 0.5173, norm(attn): 0.0608, norm(output): 0.6016, norm(x): 1.2798, norm(y): 1.0036, norm:0.8366, tok/sec: 102059.34, flops:89.37, batch-reuse:1
@ 1292 train 6.5940 , allloss: 6.6052, dt: 1275.55ms, fracRes: 0.5172, norm(attn): 0.0618, norm(output): 0.6055, norm(x): 1.2790, norm(y): 1.0036, norm:1.9559, tok/sec: 102757.10, flops:89.98, batch-reuse:1
@ 1293 train 6.5602 , allloss: 6.5706, dt: 1281.75ms, fracRes: 0.5189, norm(attn): 0.0581, norm(output): 0.6016, norm(x): 1.2859, norm(y): 1.0036, norm:1.0458, tok/sec: 102259.81, flops:89.55, batch-reuse:1
@ 1294 train 6.4739 , allloss: 6.4841, dt: 1296.65ms, fracRes: 0.5187, norm(attn): 0.0591, norm(output): 0.6016, norm(x): 1.2820, norm(y): 1.0036, norm:1.0087, tok/sec: 101085.13, flops:88.52, batch-reuse:1
@ 1295 train 6.6128 , allloss: 6.6247, dt: 1274.21ms, fracRes: 0.5186, norm(attn): 0.0608, norm(output): 0.6016, norm(x): 1.2820, norm(y): 1.0036, norm:1.5475, tok/sec: 102864.90, flops:90.08, batch-reuse:1
@ 1296 train 6.5740 , allloss: 6.5854, dt: 1258.67ms, fracRes: 0.5189, norm(attn): 0.0605, norm(output): 0.6016, norm(x): 1.2819, norm(y): 1.0036, norm:0.8645, tok/sec: 104135.59, flops:91.19, batch-reuse:1
@ 1297 train 6.6071 , allloss: 6.6176, dt: 1287.29ms, fracRes: 0.5200, norm(attn): 0.0586, norm(output): 0.6016, norm(x): 1.2867, norm(y): 1.0036, norm:1.1589, tok/sec: 101820.00, flops:89.16, batch-reuse:1
@ 1298 train 6.7304 , allloss: 6.7412, dt: 1264.94ms, fracRes: 0.5202, norm(attn): 0.0620, norm(output): 0.6016, norm(x): 1.2849, norm(y): 1.0036, norm:1.0994, tok/sec: 103618.77, flops:90.74, batch-reuse:1
@ 1299 train 6.7054 , allloss: 6.7164, dt: 1291.73ms, fracRes: 0.5197, norm(attn): 0.0630, norm(output): 0.6016, norm(x): 1.2852, norm(y): 1.0035, norm:0.7377, tok/sec: 101469.83, flops:88.86, batch-reuse:1
@ 1300 train 6.6618 , allloss: 6.6734, dt: 1267.81ms, fracRes: 0.5199, norm(attn): 0.0635, norm(output): 0.6016, norm(x): 1.2851, norm(y): 1.0036, norm:1.9051, tok/sec: 103384.72, flops:90.53, batch-reuse:1
@ 1301 train 6.8344 , allloss: 6.8465, dt: 1278.82ms, fracRes: 0.5204, norm(attn): 0.0623, norm(output): 0.6016, norm(x): 1.2875, norm(y): 1.0036, norm:2.6977, tok/sec: 102494.31, flops:89.75, batch-reuse:1
@ 1302 train 6.8042 , allloss: 6.8164, dt: 1288.53ms, fracRes: 0.5213, norm(attn): 0.0615, norm(output): 0.6016, norm(x): 1.2916, norm(y): 1.0036, norm:1.8591, tok/sec: 101722.07, flops:89.08, batch-reuse:1
@ 1303 train 6.7873 , allloss: 6.8008, dt: 1290.63ms, fracRes: 0.5222, norm(attn): 0.0640, norm(output): 0.6016, norm(x): 1.2900, norm(y): 1.0035, norm:1.8659, tok/sec: 101556.24, flops:88.93, batch-reuse:1
@ 1304 train 6.7582 , allloss: 6.7711, dt: 1288.86ms, fracRes: 0.5225, norm(attn): 0.0640, norm(output): 0.6016, norm(x): 1.2902, norm(y): 1.0035, norm:1.9569, tok/sec: 101696.37, flops:89.05, batch-reuse:1
@ 1305 train 6.7705 , allloss: 6.7857, dt: 1268.85ms, fracRes: 0.5228, norm(attn): 0.0640, norm(output): 0.6016, norm(x): 1.2862, norm(y): 1.0035, norm:4.2662, tok/sec: 103300.16, flops:90.46, batch-reuse:1
@ 1306 train 6.7184 , allloss: 6.7331, dt: 1283.41ms, fracRes: 0.5240, norm(attn): 0.0649, norm(output): 0.6016, norm(x): 1.2862, norm(y): 1.0036, norm:2.1416, tok/sec: 102127.98, flops:89.43, batch-reuse:1
@ 1307 train 6.7394 , allloss: 6.7527, dt: 1292.79ms, fracRes: 0.5266, norm(attn): 0.0635, norm(output): 0.6016, norm(x): 1.3011, norm(y): 1.0036, norm:0.9400, tok/sec: 101386.67, flops:88.78, batch-reuse:1
@ 1308 train 6.7318 , allloss: 6.7454, dt: 1279.89ms, fracRes: 0.5282, norm(attn): 0.0630, norm(output): 0.6016, norm(x): 1.3031, norm(y): 1.0036, norm:1.5099, tok/sec: 102408.95, flops:89.68, batch-reuse:1
@ 1309 train 6.7126 , allloss: 6.7259, dt: 1279.71ms, fracRes: 0.5278, norm(attn): 0.0620, norm(output): 0.6016, norm(x): 1.3068, norm(y): 1.0036, norm:2.0485, tok/sec: 102422.86, flops:89.69, batch-reuse:1
@ 1310 train 6.7254 , allloss: 6.7392, dt: 1269.99ms, fracRes: 0.5266, norm(attn): 0.0610, norm(output): 0.6055, norm(x): 1.3049, norm(y): 1.0036, norm:1.6002, tok/sec: 103207.10, flops:90.38, batch-reuse:1
@ 1311 train 6.7712 , allloss: 6.7840, dt: 1268.44ms, fracRes: 0.5277, norm(attn): 0.0635, norm(output): 0.6016, norm(x): 1.3115, norm(y): 1.0036, norm:1.2075, tok/sec: 103333.09, flops:90.49, batch-reuse:1
@ 1312 train 6.7157 , allloss: 6.7280, dt: 1265.83ms, fracRes: 0.5273, norm(attn): 0.0588, norm(output): 0.6094, norm(x): 1.3233, norm(y): 1.0036, norm:1.7215, tok/sec: 103546.36, flops:90.67, batch-reuse:1
@ 1313 train 6.7368 , allloss: 6.7498, dt: 1270.85ms, fracRes: 0.5251, norm(attn): 0.0630, norm(output): 0.6094, norm(x): 1.3122, norm(y): 1.0036, norm:1.0374, tok/sec: 103136.91, flops:90.32, batch-reuse:1
@ 1314 train 6.7106 , allloss: 6.7224, dt: 1245.55ms, fracRes: 0.5213, norm(attn): 0.0615, norm(output): 0.6133, norm(x): 1.3088, norm(y): 1.0036, norm:1.4822, tok/sec: 105232.60, flops:92.15, batch-reuse:1
@ 1315 train 6.6555 , allloss: 6.6676, dt: 1272.77ms, fracRes: 0.5188, norm(attn): 0.0620, norm(output): 0.6133, norm(x): 1.3053, norm(y): 1.0036, norm:1.1561, tok/sec: 102981.42, flops:90.18, batch-reuse:1
@ 1316 train 6.6447 , allloss: 6.6571, dt: 1296.23ms, fracRes: 0.5175, norm(attn): 0.0635, norm(output): 0.6133, norm(x): 1.3065, norm(y): 1.0036, norm:1.2787, tok/sec: 101117.55, flops:88.55, batch-reuse:1
@ 1317 train 6.7489 , allloss: 6.7616, dt: 1263.02ms, fracRes: 0.5147, norm(attn): 0.0669, norm(output): 0.6211, norm(x): 1.3010, norm(y): 1.0035, norm:1.0669, tok/sec: 103776.33, flops:90.88, batch-reuse:1
@ 1318 train 6.6240 , allloss: 6.6375, dt: 1246.64ms, fracRes: 0.5108, norm(attn): 0.0635, norm(output): 0.6172, norm(x): 1.3003, norm(y): 1.0036, norm:1.4772, tok/sec: 105139.84, flops:92.07, batch-reuse:1
@ 1319 train 6.7165 , allloss: 6.7308, dt: 1247.21ms, fracRes: 0.5105, norm(attn): 0.0645, norm(output): 0.6172, norm(x): 1.3024, norm(y): 1.0035, norm:1.0100, tok/sec: 105091.76, flops:92.03, batch-reuse:1
@ 1320 train 6.7081 , allloss: 6.7207, dt: 1252.94ms, fracRes: 0.5146, norm(attn): 0.0625, norm(output): 0.6172, norm(x): 1.3141, norm(y): 1.0035, norm:1.4844, tok/sec: 104611.76, flops:91.61, batch-reuse:1
@ 1321 train 6.6978 , allloss: 6.7098, dt: 1265.23ms, fracRes: 0.5169, norm(attn): 0.0605, norm(output): 0.6172, norm(x): 1.3170, norm(y): 1.0036, norm:2.0388, tok/sec: 103595.11, flops:90.72, batch-reuse:1
@ 1322 train 6.6653 , allloss: 6.6763, dt: 1248.03ms, fracRes: 0.5177, norm(attn): 0.0605, norm(output): 0.6172, norm(x): 1.3222, norm(y): 1.0036, norm:1.1564, tok/sec: 105023.24, flops:91.97, batch-reuse:1
@ 1323 train 6.6769 , allloss: 6.6886, dt: 1261.01ms, fracRes: 0.5156, norm(attn): 0.0649, norm(output): 0.6211, norm(x): 1.3131, norm(y): 1.0035, norm:1.3982, tok/sec: 103942.48, flops:91.02, batch-reuse:1
@ 1324 train 6.7146 , allloss: 6.7265, dt: 1255.90ms, fracRes: 0.5175, norm(attn): 0.0635, norm(output): 0.6172, norm(x): 1.3162, norm(y): 1.0036, norm:1.0375, tok/sec: 104365.40, flops:91.39, batch-reuse:1
@ 1325 train 6.6458 , allloss: 6.6565, dt: 1269.25ms, fracRes: 0.5191, norm(attn): 0.0605, norm(output): 0.6133, norm(x): 1.3256, norm(y): 1.0037, norm:1.1960, tok/sec: 103267.14, flops:90.43, batch-reuse:1
@ 1326 train 6.5638 , allloss: 6.5749, dt: 1266.41ms, fracRes: 0.5191, norm(attn): 0.0618, norm(output): 0.6133, norm(x): 1.3239, norm(y): 1.0036, norm:1.3896, tok/sec: 103498.68, flops:90.63, batch-reuse:1
@ 1327 train 6.7065 , allloss: 6.7181, dt: 1266.44ms, fracRes: 0.5193, norm(attn): 0.0645, norm(output): 0.6172, norm(x): 1.3203, norm(y): 1.0036, norm:1.8225, tok/sec: 103496.01, flops:90.63, batch-reuse:1
@ 1328 train 6.6412 , allloss: 6.6527, dt: 1269.08ms, fracRes: 0.5205, norm(attn): 0.0630, norm(output): 0.6133, norm(x): 1.3273, norm(y): 1.0036, norm:1.1768, tok/sec: 103281.03, flops:90.44, batch-reuse:1
@ 1329 train 6.6390 , allloss: 6.6500, dt: 1263.80ms, fracRes: 0.5223, norm(attn): 0.0610, norm(output): 0.6133, norm(x): 1.3330, norm(y): 1.0037, norm:0.7911, tok/sec: 103712.91, flops:90.82, batch-reuse:1
@ 1330 train 6.7089 , allloss: 6.7210, dt: 1268.34ms, fracRes: 0.5217, norm(attn): 0.0635, norm(output): 0.6133, norm(x): 1.3273, norm(y): 1.0036, norm:1.3147, tok/sec: 103341.72, flops:90.49, batch-reuse:1
@ 1331 train 6.6707 , allloss: 6.6823, dt: 1284.57ms, fracRes: 0.5215, norm(attn): 0.0623, norm(output): 0.6172, norm(x): 1.3281, norm(y): 1.0036, norm:0.6443, tok/sec: 102035.95, flops:89.35, batch-reuse:1
@ 1332 train 6.6458 , allloss: 6.6572, dt: 1262.08ms, fracRes: 0.5211, norm(attn): 0.0613, norm(output): 0.6094, norm(x): 1.3256, norm(y): 1.0037, norm:1.1186, tok/sec: 103854.16, flops:90.94, batch-reuse:1
@ 1333 train 6.6163 , allloss: 6.6275, dt: 1286.39ms, fracRes: 0.5215, norm(attn): 0.0608, norm(output): 0.6133, norm(x): 1.3286, norm(y): 1.0037, norm:1.1388, tok/sec: 101890.96, flops:89.22, batch-reuse:1
@ 1334 train 6.6337 , allloss: 6.6446, dt: 1267.70ms, fracRes: 0.5207, norm(attn): 0.0601, norm(output): 0.6172, norm(x): 1.3287, norm(y): 1.0036, norm:1.1465, tok/sec: 103393.20, flops:90.54, batch-reuse:1
@ 1335 train 6.6552 , allloss: 6.6665, dt: 1286.81ms, fracRes: 0.5201, norm(attn): 0.0625, norm(output): 0.6094, norm(x): 1.3207, norm(y): 1.0036, norm:0.9610, tok/sec: 101858.45, flops:89.20, batch-reuse:1
@ 1336 train 6.7207 , allloss: 6.7338, dt: 1299.74ms, fracRes: 0.5216, norm(attn): 0.0654, norm(output): 0.6094, norm(x): 1.3214, norm(y): 1.0036, norm:0.8512, tok/sec: 100844.76, flops:88.31, batch-reuse:1
@ 1337 train 6.6839 , allloss: 6.6958, dt: 1280.45ms, fracRes: 0.5218, norm(attn): 0.0645, norm(output): 0.6094, norm(x): 1.3233, norm(y): 1.0036, norm:0.8141, tok/sec: 102364.29, flops:89.64, batch-reuse:1
@ 1338 train 6.6487 , allloss: 6.6601, dt: 1300.41ms, fracRes: 0.5214, norm(attn): 0.0610, norm(output): 0.6055, norm(x): 1.3218, norm(y): 1.0036, norm:1.5449, tok/sec: 100793.19, flops:88.26, batch-reuse:1
@ 1339 train 6.7168 , allloss: 6.7288, dt: 1283.85ms, fracRes: 0.5199, norm(attn): 0.0640, norm(output): 0.6094, norm(x): 1.3183, norm(y): 1.0036, norm:1.2036, tok/sec: 102092.87, flops:89.40, batch-reuse:1
@ 1340 train 6.6236 , allloss: 6.6352, dt: 1256.61ms, fracRes: 0.5190, norm(attn): 0.0613, norm(output): 0.6094, norm(x): 1.3179, norm(y): 1.0036, norm:0.8125, tok/sec: 104305.88, flops:91.34, batch-reuse:1
@ 1341 train 6.6343 , allloss: 6.6457, dt: 1260.49ms, fracRes: 0.5196, norm(attn): 0.0596, norm(output): 0.6055, norm(x): 1.3235, norm(y): 1.0036, norm:1.1928, tok/sec: 103985.30, flops:91.06, batch-reuse:1
@ 1342 train 6.7524 , allloss: 6.7644, dt: 1267.44ms, fracRes: 0.5213, norm(attn): 0.0635, norm(output): 0.6055, norm(x): 1.3170, norm(y): 1.0036, norm:1.1275, tok/sec: 103414.75, flops:90.56, batch-reuse:1
@ 1343 train 6.5695 , allloss: 6.5810, dt: 1264.34ms, fracRes: 0.5209, norm(attn): 0.0601, norm(output): 0.6016, norm(x): 1.3187, norm(y): 1.0037, norm:1.0347, tok/sec: 103668.13, flops:90.78, batch-reuse:1
@ 1344 train 6.5957 , allloss: 6.6072, dt: 1258.00ms, fracRes: 0.5216, norm(attn): 0.0610, norm(output): 0.6016, norm(x): 1.3156, norm(y): 1.0036, norm:1.0757, tok/sec: 104191.18, flops:91.24, batch-reuse:1
@ 1345 train 6.4934 , allloss: 6.5051, dt: 1253.94ms, fracRes: 0.5230, norm(attn): 0.0598, norm(output): 0.6016, norm(x): 1.3211, norm(y): 1.0037, norm:1.2061, tok/sec: 104527.76, flops:91.53, batch-reuse:1
@ 1346 train 6.6174 , allloss: 6.6294, dt: 1276.97ms, fracRes: 0.5249, norm(attn): 0.0615, norm(output): 0.6016, norm(x): 1.3250, norm(y): 1.0036, norm:1.6484, tok/sec: 102643.21, flops:89.88, batch-reuse:1
@ 1347 train 6.5733 , allloss: 6.5845, dt: 1278.30ms, fracRes: 0.5231, norm(attn): 0.0598, norm(output): 0.6016, norm(x): 1.3258, norm(y): 1.0037, norm:0.8308, tok/sec: 102536.41, flops:89.79, batch-reuse:1
@ 1348 train 6.6048 , allloss: 6.6164, dt: 1274.37ms, fracRes: 0.5216, norm(attn): 0.0623, norm(output): 0.6016, norm(x): 1.3183, norm(y): 1.0036, norm:0.8126, tok/sec: 102852.16, flops:90.07, batch-reuse:1
@ 1349 train 6.6158 , allloss: 6.6266, dt: 1260.27ms, fracRes: 0.5201, norm(attn): 0.0610, norm(output): 0.6016, norm(x): 1.3181, norm(y): 1.0036, norm:1.2778, tok/sec: 104003.42, flops:91.07, batch-reuse:1
@ 1350 train 6.5992 , allloss: 6.6101, dt: 1263.16ms, fracRes: 0.5185, norm(attn): 0.0620, norm(output): 0.6016, norm(x): 1.3127, norm(y): 1.0036, norm:1.3634, tok/sec: 103765.32, flops:90.87, batch-reuse:1
@ 1351 train 6.6819 , allloss: 6.6930, dt: 1274.94ms, fracRes: 0.5196, norm(attn): 0.0630, norm(output): 0.6016, norm(x): 1.3132, norm(y): 1.0036, norm:0.7790, tok/sec: 102806.06, flops:90.03, batch-reuse:1
@ 1352 train 6.6340 , allloss: 6.6468, dt: 1282.10ms, fracRes: 0.5213, norm(attn): 0.0654, norm(output): 0.6016, norm(x): 1.3129, norm(y): 1.0036, norm:0.7648, tok/sec: 102232.58, flops:89.52, batch-reuse:1
@ 1353 train 6.6451 , allloss: 6.6560, dt: 1299.77ms, fracRes: 0.5229, norm(attn): 0.0625, norm(output): 0.6016, norm(x): 1.3182, norm(y): 1.0037, norm:1.3061, tok/sec: 100842.60, flops:88.31, batch-reuse:1
@ 1354 train 6.6349 , allloss: 6.6462, dt: 1251.43ms, fracRes: 0.5234, norm(attn): 0.0635, norm(output): 0.6016, norm(x): 1.3157, norm(y): 1.0037, norm:0.9706, tok/sec: 104737.78, flops:91.72, batch-reuse:1
@ 1355 train 6.5304 , allloss: 6.5417, dt: 1276.57ms, fracRes: 0.5195, norm(attn): 0.0635, norm(output): 0.5938, norm(x): 1.3083, norm(y): 1.0037, norm:1.2929, tok/sec: 102675.23, flops:89.91, batch-reuse:1
@ 1356 train 6.6765 , allloss: 6.6887, dt: 1253.79ms, fracRes: 0.5182, norm(attn): 0.0664, norm(output): 0.5938, norm(x): 1.2948, norm(y): 1.0036, norm:1.2929, tok/sec: 104540.66, flops:91.54, batch-reuse:1
@ 1357 train 6.5857 , allloss: 6.5967, dt: 1256.40ms, fracRes: 0.5171, norm(attn): 0.0635, norm(output): 0.5938, norm(x): 1.2997, norm(y): 1.0036, norm:1.1995, tok/sec: 104323.28, flops:91.35, batch-reuse:1
@ 1358 train 6.5810 , allloss: 6.5924, dt: 1257.98ms, fracRes: 0.5196, norm(attn): 0.0625, norm(output): 0.5938, norm(x): 1.3068, norm(y): 1.0037, norm:0.8206, tok/sec: 104192.21, flops:91.24, batch-reuse:1
@ 1359 train 6.5614 , allloss: 6.5726, dt: 1257.73ms, fracRes: 0.5196, norm(attn): 0.0625, norm(output): 0.6016, norm(x): 1.3052, norm(y): 1.0036, norm:1.1499, tok/sec: 104213.54, flops:91.26, batch-reuse:1
@ 1360 train 6.5482 , allloss: 6.5600, dt: 1255.85ms, fracRes: 0.5179, norm(attn): 0.0625, norm(output): 0.6016, norm(x): 1.3007, norm(y): 1.0036, norm:1.9911, tok/sec: 104369.01, flops:91.39, batch-reuse:1
@ 1361 train 6.6171 , allloss: 6.6290, dt: 1246.72ms, fracRes: 0.5184, norm(attn): 0.0625, norm(output): 0.5938, norm(x): 1.3025, norm(y): 1.0036, norm:1.1798, tok/sec: 105133.46, flops:92.06, batch-reuse:1
@ 1362 train 6.7412 , allloss: 6.7528, dt: 1234.26ms, fracRes: 0.5205, norm(attn): 0.0620, norm(output): 0.5938, norm(x): 1.3119, norm(y): 1.0036, norm:2.5756, tok/sec: 106194.84, flops:92.99, batch-reuse:1
@ 1363 train 6.5826 , allloss: 6.5938, dt: 1260.65ms, fracRes: 0.5213, norm(attn): 0.0615, norm(output): 0.5938, norm(x): 1.3192, norm(y): 1.0037, norm:1.7902, tok/sec: 103971.63, flops:91.05, batch-reuse:1
@ 1364 train 6.5638 , allloss: 6.5751, dt: 1278.65ms, fracRes: 0.5194, norm(attn): 0.0610, norm(output): 0.5938, norm(x): 1.3071, norm(y): 1.0036, norm:2.1304, tok/sec: 102507.96, flops:89.76, batch-reuse:1
@ 1365 train 6.6947 , allloss: 6.7075, dt: 1269.02ms, fracRes: 0.5171, norm(attn): 0.0645, norm(output): 0.5938, norm(x): 1.2916, norm(y): 1.0036, norm:1.5397, tok/sec: 103286.32, flops:90.45, batch-reuse:1
@ 1366 train 6.6328 , allloss: 6.6451, dt: 1269.19ms, fracRes: 0.5172, norm(attn): 0.0645, norm(output): 0.6016, norm(x): 1.2977, norm(y): 1.0036, norm:1.5109, tok/sec: 103271.77, flops:90.43, batch-reuse:1
@ 1367 train 6.5967 , allloss: 6.6089, dt: 1272.03ms, fracRes: 0.5208, norm(attn): 0.0645, norm(output): 0.6016, norm(x): 1.3110, norm(y): 1.0036, norm:1.3519, tok/sec: 103041.59, flops:90.23, batch-reuse:1
@ 1368 train 6.6657 , allloss: 6.6784, dt: 1288.04ms, fracRes: 0.5211, norm(attn): 0.0640, norm(output): 0.6016, norm(x): 1.3168, norm(y): 1.0036, norm:1.0270, tok/sec: 101760.75, flops:89.11, batch-reuse:1
@ 1369 train 6.6140 , allloss: 6.6276, dt: 1309.61ms, fracRes: 0.5200, norm(attn): 0.0620, norm(output): 0.6016, norm(x): 1.3130, norm(y): 1.0036, norm:1.1511, tok/sec: 100084.53, flops:87.64, batch-reuse:1
@ 1370 train 6.5718 , allloss: 6.5856, dt: 1265.78ms, fracRes: 0.5206, norm(attn): 0.0625, norm(output): 0.5977, norm(x): 1.3054, norm(y): 1.0036, norm:1.5975, tok/sec: 103550.75, flops:90.68, batch-reuse:1
@ 1371 train 6.5778 , allloss: 6.5913, dt: 1285.10ms, fracRes: 0.5206, norm(attn): 0.0635, norm(output): 0.5938, norm(x): 1.3025, norm(y): 1.0036, norm:1.4120, tok/sec: 101993.66, flops:89.31, batch-reuse:1
@ 1372 train 6.5610 , allloss: 6.5734, dt: 1296.28ms, fracRes: 0.5238, norm(attn): 0.0625, norm(output): 0.5938, norm(x): 1.3127, norm(y): 1.0036, norm:2.0617, tok/sec: 101113.57, flops:88.54, batch-reuse:1
@ 1373 train 6.5527 , allloss: 6.5654, dt: 1278.02ms, fracRes: 0.5254, norm(attn): 0.0620, norm(output): 0.5938, norm(x): 1.3187, norm(y): 1.0037, norm:1.7134, tok/sec: 102558.54, flops:89.81, batch-reuse:1
@ 1374 train 6.5579 , allloss: 6.5713, dt: 1280.76ms, fracRes: 0.5247, norm(attn): 0.0620, norm(output): 0.5938, norm(x): 1.3145, norm(y): 1.0036, norm:1.3350, tok/sec: 102339.02, flops:89.62, batch-reuse:1
@ 1375 train 6.5387 , allloss: 6.5520, dt: 1264.16ms, fracRes: 0.5239, norm(attn): 0.0625, norm(output): 0.5898, norm(x): 1.3088, norm(y): 1.0037, norm:1.4054, tok/sec: 103683.20, flops:90.79, batch-reuse:1
@ 1376 train 6.5243 , allloss: 6.5372, dt: 1270.02ms, fracRes: 0.5248, norm(attn): 0.0615, norm(output): 0.5938, norm(x): 1.3115, norm(y): 1.0037, norm:1.5423, tok/sec: 103204.69, flops:90.37, batch-reuse:1
@ 1377 train 6.5475 , allloss: 6.5606, dt: 1292.71ms, fracRes: 0.5260, norm(attn): 0.0630, norm(output): 0.5898, norm(x): 1.3116, norm(y): 1.0037, norm:1.4620, tok/sec: 101393.23, flops:88.79, batch-reuse:1
@ 1378 train 6.6859 , allloss: 6.6996, dt: 1292.97ms, fracRes: 0.5273, norm(attn): 0.0645, norm(output): 0.5898, norm(x): 1.3110, norm(y): 1.0036, norm:1.0036, tok/sec: 101373.15, flops:88.77, batch-reuse:1
@ 1379 train 6.6490 , allloss: 6.6624, dt: 1275.57ms, fracRes: 0.5278, norm(attn): 0.0640, norm(output): 0.5898, norm(x): 1.3195, norm(y): 1.0036, norm:1.8494, tok/sec: 102755.60, flops:89.98, batch-reuse:1
@ 1380 train 6.4473 , allloss: 6.4604, dt: 1292.37ms, fracRes: 0.5273, norm(attn): 0.0625, norm(output): 0.5859, norm(x): 1.3230, norm(y): 1.0037, norm:1.1469, tok/sec: 101420.03, flops:88.81, batch-reuse:1
@ 1381 train 6.5678 , allloss: 6.5813, dt: 1312.95ms, fracRes: 0.5279, norm(attn): 0.0605, norm(output): 0.5859, norm(x): 1.3209, norm(y): 1.0037, norm:4.0490, tok/sec: 99829.96, flops:87.42, batch-reuse:1
@ 1382 train 6.5865 , allloss: 6.6002, dt: 1324.29ms, fracRes: 0.5273, norm(attn): 0.0615, norm(output): 0.5859, norm(x): 1.3195, norm(y): 1.0037, norm:2.0173, tok/sec: 98975.51, flops:86.67, batch-reuse:1
@ 1383 train 6.6464 , allloss: 6.6604, dt: 1282.90ms, fracRes: 0.5274, norm(attn): 0.0640, norm(output): 0.5898, norm(x): 1.3160, norm(y): 1.0036, norm:1.8964, tok/sec: 102168.92, flops:89.47, batch-reuse:1
@ 1384 train 6.5663 , allloss: 6.5793, dt: 1277.85ms, fracRes: 0.5267, norm(attn): 0.0630, norm(output): 0.5898, norm(x): 1.3254, norm(y): 1.0037, norm:1.8143, tok/sec: 102572.51, flops:89.82, batch-reuse:1
@ 1385 train 6.6181 , allloss: 6.6300, dt: 1261.70ms, fracRes: 0.5250, norm(attn): 0.0620, norm(output): 0.5859, norm(x): 1.3259, norm(y): 1.0037, norm:1.1741, tok/sec: 103885.14, flops:90.97, batch-reuse:1
@ 1386 train 6.5561 , allloss: 6.5689, dt: 1269.82ms, fracRes: 0.5238, norm(attn): 0.0630, norm(output): 0.5938, norm(x): 1.3227, norm(y): 1.0036, norm:1.1428, tok/sec: 103220.58, flops:90.39, batch-reuse:1
@ 1387 train 6.5270 , allloss: 6.5395, dt: 1252.21ms, fracRes: 0.5253, norm(attn): 0.0635, norm(output): 0.5938, norm(x): 1.3226, norm(y): 1.0037, norm:1.2615, tok/sec: 104672.31, flops:91.66, batch-reuse:1
@ 1388 train 6.5967 , allloss: 6.6098, dt: 1256.25ms, fracRes: 0.5284, norm(attn): 0.0645, norm(output): 0.5859, norm(x): 1.3282, norm(y): 1.0037, norm:1.3434, tok/sec: 104335.67, flops:91.37, batch-reuse:1
@ 1389 train 6.4699 , allloss: 6.4833, dt: 1270.35ms, fracRes: 0.5303, norm(attn): 0.0645, norm(output): 0.5859, norm(x): 1.3294, norm(y): 1.0037, norm:1.2109, tok/sec: 103177.61, flops:90.35, batch-reuse:1
@ 1390 train 6.7076 , allloss: 6.7233, dt: 1276.06ms, fracRes: 0.5323, norm(attn): 0.0679, norm(output): 0.5859, norm(x): 1.3224, norm(y): 1.0036, norm:1.3612, tok/sec: 102716.55, flops:89.95, batch-reuse:1
@ 1391 train 6.5784 , allloss: 6.5918, dt: 1250.02ms, fracRes: 0.5269, norm(attn): 0.0645, norm(output): 0.5859, norm(x): 1.3255, norm(y): 1.0037, norm:1.3728, tok/sec: 104855.78, flops:91.82, batch-reuse:1
@ 1392 train 6.5161 , allloss: 6.5282, dt: 1284.90ms, fracRes: 0.5242, norm(attn): 0.0635, norm(output): 0.5898, norm(x): 1.3296, norm(y): 1.0037, norm:1.1173, tok/sec: 102009.25, flops:89.33, batch-reuse:1
@ 1393 train 6.4730 , allloss: 6.4852, dt: 1296.76ms, fracRes: 0.5227, norm(attn): 0.0645, norm(output): 0.5938, norm(x): 1.3309, norm(y): 1.0037, norm:1.1464, tok/sec: 101076.71, flops:88.51, batch-reuse:1
@ 1394 train 6.4757 , allloss: 6.4881, dt: 1273.25ms, fracRes: 0.5222, norm(attn): 0.0654, norm(output): 0.5898, norm(x): 1.3270, norm(y): 1.0037, norm:0.7539, tok/sec: 102943.18, flops:90.15, batch-reuse:1
@ 1395 train 6.4899 , allloss: 6.5017, dt: 1266.89ms, fracRes: 0.5218, norm(attn): 0.0645, norm(output): 0.5938, norm(x): 1.3254, norm(y): 1.0037, norm:1.0371, tok/sec: 103459.92, flops:90.60, batch-reuse:1
@ 1396 train 6.4915 , allloss: 6.5029, dt: 1270.57ms, fracRes: 0.5242, norm(attn): 0.0635, norm(output): 0.5898, norm(x): 1.3308, norm(y): 1.0037, norm:0.6514, tok/sec: 103160.15, flops:90.34, batch-reuse:1
@ 1397 train 6.5599 , allloss: 6.5716, dt: 1290.97ms, fracRes: 0.5256, norm(attn): 0.0645, norm(output): 0.5938, norm(x): 1.3329, norm(y): 1.0037, norm:1.0288, tok/sec: 101530.09, flops:88.91, batch-reuse:1
@ 1398 train 6.5332 , allloss: 6.5457, dt: 1258.81ms, fracRes: 0.5234, norm(attn): 0.0654, norm(output): 0.5938, norm(x): 1.3268, norm(y): 1.0037, norm:1.5457, tok/sec: 104123.79, flops:91.18, batch-reuse:1
@ 1399 train 6.4717 , allloss: 6.4848, dt: 1269.73ms, fracRes: 0.5200, norm(attn): 0.0654, norm(output): 0.5898, norm(x): 1.3206, norm(y): 1.0037, norm:2.0097, tok/sec: 103228.39, flops:90.40, batch-reuse:1
@ 1400 train 6.6004 , allloss: 6.6136, dt: 1257.36ms, fracRes: 0.5192, norm(attn): 0.0659, norm(output): 0.5898, norm(x): 1.3141, norm(y): 1.0037, norm:1.2476, tok/sec: 104243.87, flops:91.28, batch-reuse:1
@ 1401 train 6.4986 , allloss: 6.5114, dt: 1270.25ms, fracRes: 0.5213, norm(attn): 0.0674, norm(output): 0.5898, norm(x): 1.3189, norm(y): 1.0037, norm:1.7476, tok/sec: 103185.88, flops:90.36, batch-reuse:1
@ 1402 train 6.4682 , allloss: 6.4805, dt: 1279.26ms, fracRes: 0.5216, norm(attn): 0.0645, norm(output): 0.5859, norm(x): 1.3216, norm(y): 1.0037, norm:1.3952, tok/sec: 102459.45, flops:89.72, batch-reuse:1
@ 1403 train 6.5335 , allloss: 6.5457, dt: 1267.99ms, fracRes: 0.5227, norm(attn): 0.0635, norm(output): 0.5859, norm(x): 1.3215, norm(y): 1.0037, norm:1.9704, tok/sec: 103369.68, flops:90.52, batch-reuse:1
@ 1404 train 6.5177 , allloss: 6.5308, dt: 1272.62ms, fracRes: 0.5259, norm(attn): 0.0645, norm(output): 0.5859, norm(x): 1.3236, norm(y): 1.0037, norm:1.8516, tok/sec: 102993.46, flops:90.19, batch-reuse:1
@ 1405 train 6.5577 , allloss: 6.5713, dt: 1281.33ms, fracRes: 0.5284, norm(attn): 0.0654, norm(output): 0.5859, norm(x): 1.3263, norm(y): 1.0037, norm:1.3748, tok/sec: 102293.61, flops:89.58, batch-reuse:1
@ 1406 train 6.6017 , allloss: 6.6154, dt: 1268.21ms, fracRes: 0.5316, norm(attn): 0.0640, norm(output): 0.5820, norm(x): 1.3349, norm(y): 1.0037, norm:1.7529, tok/sec: 103352.27, flops:90.50, batch-reuse:1
@ 1407 train 6.5172 , allloss: 6.5305, dt: 1256.21ms, fracRes: 0.5339, norm(attn): 0.0635, norm(output): 0.5859, norm(x): 1.3459, norm(y): 1.0038, norm:1.5601, tok/sec: 104339.45, flops:91.37, batch-reuse:1
@ 1408 train 6.5056 , allloss: 6.5192, dt: 1274.63ms, fracRes: 0.5320, norm(attn): 0.0654, norm(output): 0.5859, norm(x): 1.3380, norm(y): 1.0037, norm:1.0018, tok/sec: 102831.44, flops:90.05, batch-reuse:1
@ 1409 train 6.5434 , allloss: 6.5564, dt: 1286.59ms, fracRes: 0.5292, norm(attn): 0.0649, norm(output): 0.5859, norm(x): 1.3367, norm(y): 1.0037, norm:3.1211, tok/sec: 101875.81, flops:89.21, batch-reuse:1
@ 1410 train 6.4695 , allloss: 6.4822, dt: 1256.91ms, fracRes: 0.5279, norm(attn): 0.0645, norm(output): 0.5859, norm(x): 1.3332, norm(y): 1.0037, norm:1.7864, tok/sec: 104281.32, flops:91.32, batch-reuse:1
@ 1411 train 6.5665 , allloss: 6.5792, dt: 1259.28ms, fracRes: 0.5277, norm(attn): 0.0654, norm(output): 0.5859, norm(x): 1.3317, norm(y): 1.0037, norm:5.4895, tok/sec: 104085.03, flops:91.15, batch-reuse:1
@ 1412 train 6.5206 , allloss: 6.5347, dt: 1266.45ms, fracRes: 0.5252, norm(attn): 0.0684, norm(output): 0.5898, norm(x): 1.3245, norm(y): 1.0037, norm:1.9166, tok/sec: 103495.41, flops:90.63, batch-reuse:1
@ 1413 train 6.4809 , allloss: 6.4940, dt: 1291.86ms, fracRes: 0.5228, norm(attn): 0.0669, norm(output): 0.5859, norm(x): 1.3236, norm(y): 1.0038, norm:1.9895, tok/sec: 101460.13, flops:88.85, batch-reuse:1
@ 1414 train 6.5146 , allloss: 6.5275, dt: 1279.90ms, fracRes: 0.5261, norm(attn): 0.0664, norm(output): 0.5859, norm(x): 1.3294, norm(y): 1.0037, norm:1.6462, tok/sec: 102408.34, flops:89.68, batch-reuse:1
@ 1415 train 6.5332 , allloss: 6.5462, dt: 1265.09ms, fracRes: 0.5316, norm(attn): 0.0645, norm(output): 0.5859, norm(x): 1.3405, norm(y): 1.0037, norm:1.8865, tok/sec: 103607.17, flops:90.73, batch-reuse:1
@ 1416 train 6.5918 , allloss: 6.6079, dt: 1253.49ms, fracRes: 0.5369, norm(attn): 0.0674, norm(output): 0.5859, norm(x): 1.3406, norm(y): 1.0036, norm:1.5105, tok/sec: 104565.69, flops:91.57, batch-reuse:1
@ 1417 train 6.4958 , allloss: 6.5088, dt: 1264.16ms, fracRes: 0.5343, norm(attn): 0.0625, norm(output): 0.5859, norm(x): 1.3438, norm(y): 1.0038, norm:2.3003, tok/sec: 103682.69, flops:90.79, batch-reuse:1
@ 1418 train 6.5226 , allloss: 6.5368, dt: 1258.51ms, fracRes: 0.5350, norm(attn): 0.0645, norm(output): 0.5820, norm(x): 1.3393, norm(y): 1.0037, norm:1.8302, tok/sec: 104148.33, flops:91.20, batch-reuse:1
@ 1419 train 6.5494 , allloss: 6.5618, dt: 1261.17ms, fracRes: 0.5304, norm(attn): 0.0649, norm(output): 0.5859, norm(x): 1.3361, norm(y): 1.0037, norm:1.7846, tok/sec: 103928.53, flops:91.01, batch-reuse:1
@ 1420 train 6.5658 , allloss: 6.5788, dt: 1274.20ms, fracRes: 0.5257, norm(attn): 0.0679, norm(output): 0.5859, norm(x): 1.3257, norm(y): 1.0037, norm:1.2583, tok/sec: 102865.90, flops:90.08, batch-reuse:1
@ 1421 train 6.5467 , allloss: 6.5594, dt: 1268.44ms, fracRes: 0.5243, norm(attn): 0.0669, norm(output): 0.5859, norm(x): 1.3266, norm(y): 1.0037, norm:1.6261, tok/sec: 103333.38, flops:90.49, batch-reuse:1
@ 1422 train 6.4572 , allloss: 6.4697, dt: 1258.18ms, fracRes: 0.5239, norm(attn): 0.0664, norm(output): 0.5859, norm(x): 1.3281, norm(y): 1.0037, norm:1.1590, tok/sec: 104176.22, flops:91.23, batch-reuse:1
@ 1423 train 6.5233 , allloss: 6.5355, dt: 1272.26ms, fracRes: 0.5262, norm(attn): 0.0669, norm(output): 0.5859, norm(x): 1.3350, norm(y): 1.0037, norm:1.5254, tok/sec: 103022.72, flops:90.22, batch-reuse:1
@ 1424 train 6.4916 , allloss: 6.5042, dt: 1273.59ms, fracRes: 0.5276, norm(attn): 0.0654, norm(output): 0.5859, norm(x): 1.3382, norm(y): 1.0037, norm:1.2479, tok/sec: 102915.37, flops:90.12, batch-reuse:1
@ 1425 train 6.4536 , allloss: 6.4659, dt: 1269.89ms, fracRes: 0.5280, norm(attn): 0.0640, norm(output): 0.5859, norm(x): 1.3372, norm(y): 1.0037, norm:1.4864, tok/sec: 103215.62, flops:90.38, batch-reuse:1
@ 1426 train 6.4193 , allloss: 6.4319, dt: 1268.46ms, fracRes: 0.5278, norm(attn): 0.0649, norm(output): 0.5859, norm(x): 1.3310, norm(y): 1.0037, norm:1.1679, tok/sec: 103331.67, flops:90.49, batch-reuse:1
@ 1427 train 6.4988 , allloss: 6.5123, dt: 1262.53ms, fracRes: 0.5335, norm(attn): 0.0654, norm(output): 0.5781, norm(x): 1.3407, norm(y): 1.0037, norm:1.3639, tok/sec: 103816.93, flops:90.91, batch-reuse:1
@ 1428 train 6.4413 , allloss: 6.4544, dt: 1258.19ms, fracRes: 0.5357, norm(attn): 0.0640, norm(output): 0.5742, norm(x): 1.3491, norm(y): 1.0038, norm:1.1590, tok/sec: 104175.39, flops:91.22, batch-reuse:1
@ 1429 train 6.4704 , allloss: 6.4850, dt: 1284.46ms, fracRes: 0.5341, norm(attn): 0.0693, norm(output): 0.5820, norm(x): 1.3415, norm(y): 1.0037, norm:1.0095, tok/sec: 102044.09, flops:89.36, batch-reuse:1
@ 1430 train 6.5094 , allloss: 6.5232, dt: 1282.46ms, fracRes: 0.5317, norm(attn): 0.0664, norm(output): 0.5859, norm(x): 1.3352, norm(y): 1.0037, norm:3.9260, tok/sec: 102203.96, flops:89.50, batch-reuse:1
@ 1431 train 6.4744 , allloss: 6.4882, dt: 1263.93ms, fracRes: 0.5281, norm(attn): 0.0645, norm(output): 0.5859, norm(x): 1.3306, norm(y): 1.0037, norm:1.3418, tok/sec: 103702.31, flops:90.81, batch-reuse:1
@ 1432 train 6.4268 , allloss: 6.4410, dt: 1258.73ms, fracRes: 0.5252, norm(attn): 0.0649, norm(output): 0.5859, norm(x): 1.3293, norm(y): 1.0037, norm:2.4800, tok/sec: 104130.64, flops:91.19, batch-reuse:1
@ 1433 train 6.5466 , allloss: 6.5612, dt: 1272.97ms, fracRes: 0.5266, norm(attn): 0.0679, norm(output): 0.5820, norm(x): 1.3243, norm(y): 1.0037, norm:2.0708, tok/sec: 102965.74, flops:90.17, batch-reuse:1
@ 1434 train 6.5513 , allloss: 6.5657, dt: 1279.69ms, fracRes: 0.5300, norm(attn): 0.0679, norm(output): 0.5820, norm(x): 1.3294, norm(y): 1.0036, norm:1.4552, tok/sec: 102425.13, flops:89.69, batch-reuse:1
@ 1435 train 6.4741 , allloss: 6.4884, dt: 1298.84ms, fracRes: 0.5333, norm(attn): 0.0645, norm(output): 0.5781, norm(x): 1.3416, norm(y): 1.0037, norm:1.2058, tok/sec: 100914.33, flops:88.37, batch-reuse:1
@ 1436 train 6.4691 , allloss: 6.4831, dt: 1276.26ms, fracRes: 0.5362, norm(attn): 0.0635, norm(output): 0.5742, norm(x): 1.3506, norm(y): 1.0037, norm:1.7268, tok/sec: 102700.20, flops:89.93, batch-reuse:1
@ 1437 train 6.4589 , allloss: 6.4734, dt: 1278.95ms, fracRes: 0.5344, norm(attn): 0.0649, norm(output): 0.5742, norm(x): 1.3474, norm(y): 1.0037, norm:0.9778, tok/sec: 102484.28, flops:89.74, batch-reuse:1
@ 1438 train 6.4448 , allloss: 6.4585, dt: 1259.24ms, fracRes: 0.5307, norm(attn): 0.0679, norm(output): 0.5820, norm(x): 1.3395, norm(y): 1.0037, norm:1.9919, tok/sec: 104087.83, flops:91.15, batch-reuse:1
@ 1439 train 6.4420 , allloss: 6.4562, dt: 1263.56ms, fracRes: 0.5285, norm(attn): 0.0679, norm(output): 0.5859, norm(x): 1.3317, norm(y): 1.0037, norm:1.4527, tok/sec: 103731.95, flops:90.84, batch-reuse:1
@ 1440 train 6.4705 , allloss: 6.4847, dt: 1280.93ms, fracRes: 0.5266, norm(attn): 0.0674, norm(output): 0.5820, norm(x): 1.3337, norm(y): 1.0037, norm:1.2738, tok/sec: 102325.38, flops:89.60, batch-reuse:1
@ 1441 train 6.4674 , allloss: 6.4813, dt: 1281.17ms, fracRes: 0.5251, norm(attn): 0.0669, norm(output): 0.5859, norm(x): 1.3381, norm(y): 1.0037, norm:1.6910, tok/sec: 102306.49, flops:89.59, batch-reuse:1
@ 1442 train 6.4556 , allloss: 6.4718, dt: 1276.66ms, fracRes: 0.5254, norm(attn): 0.0693, norm(output): 0.5859, norm(x): 1.3344, norm(y): 1.0036, norm:1.2327, tok/sec: 102668.09, flops:89.90, batch-reuse:1
@ 1443 train 6.3949 , allloss: 6.4081, dt: 1256.44ms, fracRes: 0.5291, norm(attn): 0.0659, norm(output): 0.5820, norm(x): 1.3417, norm(y): 1.0037, norm:1.1680, tok/sec: 104320.27, flops:91.35, batch-reuse:1
@ 1444 train 6.4354 , allloss: 6.4488, dt: 1264.40ms, fracRes: 0.5315, norm(attn): 0.0664, norm(output): 0.5859, norm(x): 1.3484, norm(y): 1.0037, norm:1.1467, tok/sec: 103663.42, flops:90.78, batch-reuse:1
@ 1445 train 6.4946 , allloss: 6.5080, dt: 1264.89ms, fracRes: 0.5309, norm(attn): 0.0669, norm(output): 0.5859, norm(x): 1.3442, norm(y): 1.0037, norm:0.6955, tok/sec: 103623.24, flops:90.74, batch-reuse:1
@ 1446 train 6.4976 , allloss: 6.5110, dt: 1266.80ms, fracRes: 0.5271, norm(attn): 0.0688, norm(output): 0.5859, norm(x): 1.3412, norm(y): 1.0037, norm:1.0811, tok/sec: 103467.09, flops:90.60, batch-reuse:1
@ 1447 train 6.4760 , allloss: 6.4896, dt: 1299.26ms, fracRes: 0.5263, norm(attn): 0.0693, norm(output): 0.5859, norm(x): 1.3381, norm(y): 1.0037, norm:0.7700, tok/sec: 100881.77, flops:88.34, batch-reuse:1
@ 1448 train 6.4350 , allloss: 6.4482, dt: 1293.03ms, fracRes: 0.5282, norm(attn): 0.0669, norm(output): 0.5859, norm(x): 1.3408, norm(y): 1.0037, norm:0.8393, tok/sec: 101368.07, flops:88.77, batch-reuse:1
@ 1449 train 6.5140 , allloss: 6.5275, dt: 1279.20ms, fracRes: 0.5298, norm(attn): 0.0679, norm(output): 0.5820, norm(x): 1.3366, norm(y): 1.0036, norm:0.6492, tok/sec: 102463.94, flops:89.73, batch-reuse:1
@ 1450 train 6.4869 , allloss: 6.5003, dt: 1267.01ms, fracRes: 0.5299, norm(attn): 0.0684, norm(output): 0.5859, norm(x): 1.3383, norm(y): 1.0037, norm:1.0690, tok/sec: 103449.66, flops:90.59, batch-reuse:1
@ 1451 train 6.5387 , allloss: 6.5529, dt: 1294.45ms, fracRes: 0.5342, norm(attn): 0.0684, norm(output): 0.5781, norm(x): 1.3436, norm(y): 1.0037, norm:1.1845, tok/sec: 101256.71, flops:88.67, batch-reuse:1
@ 1452 train 6.4054 , allloss: 6.4191, dt: 1285.35ms, fracRes: 0.5336, norm(attn): 0.0659, norm(output): 0.5781, norm(x): 1.3502, norm(y): 1.0037, norm:0.9647, tok/sec: 101973.51, flops:89.30, batch-reuse:1
@ 1453 train 6.4006 , allloss: 6.4146, dt: 1279.23ms, fracRes: 0.5339, norm(attn): 0.0664, norm(output): 0.5781, norm(x): 1.3481, norm(y): 1.0037, norm:0.8723, tok/sec: 102461.78, flops:89.72, batch-reuse:1
@ 1454 train 6.4580 , allloss: 6.4714, dt: 1275.76ms, fracRes: 0.5324, norm(attn): 0.0654, norm(output): 0.5703, norm(x): 1.3397, norm(y): 1.0037, norm:0.7929, tok/sec: 102740.43, flops:89.97, batch-reuse:1
@ 1455 train 6.3827 , allloss: 6.3956, dt: 1261.00ms, fracRes: 0.5299, norm(attn): 0.0654, norm(output): 0.5742, norm(x): 1.3367, norm(y): 1.0037, norm:0.7770, tok/sec: 103942.71, flops:91.02, batch-reuse:1
@ 1456 train 6.4607 , allloss: 6.4753, dt: 1260.82ms, fracRes: 0.5348, norm(attn): 0.0684, norm(output): 0.5703, norm(x): 1.3403, norm(y): 1.0037, norm:1.1173, tok/sec: 103957.85, flops:91.03, batch-reuse:1
@ 1457 train 6.4199 , allloss: 6.4360, dt: 1272.84ms, fracRes: 0.5322, norm(attn): 0.0669, norm(output): 0.5703, norm(x): 1.3338, norm(y): 1.0037, norm:1.3529, tok/sec: 102975.85, flops:90.17, batch-reuse:1
@ 1458 train 6.4497 , allloss: 6.4639, dt: 1280.88ms, fracRes: 0.5323, norm(attn): 0.0679, norm(output): 0.5703, norm(x): 1.3287, norm(y): 1.0037, norm:0.8476, tok/sec: 102329.46, flops:89.61, batch-reuse:1
@ 1459 train 6.4911 , allloss: 6.5044, dt: 1255.56ms, fracRes: 0.5321, norm(attn): 0.0674, norm(output): 0.5703, norm(x): 1.3326, norm(y): 1.0037, norm:0.9101, tok/sec: 104392.91, flops:91.42, batch-reuse:1
@ 1460 train 6.3683 , allloss: 6.3809, dt: 1263.89ms, fracRes: 0.5300, norm(attn): 0.0659, norm(output): 0.5703, norm(x): 1.3367, norm(y): 1.0037, norm:1.4636, tok/sec: 103705.30, flops:90.81, batch-reuse:1
@ 1461 train 6.3395 , allloss: 6.3538, dt: 1280.60ms, fracRes: 0.5312, norm(attn): 0.0664, norm(output): 0.5703, norm(x): 1.3352, norm(y): 1.0037, norm:1.0578, tok/sec: 102352.13, flops:89.63, batch-reuse:1
@ 1462 train 6.4191 , allloss: 6.4341, dt: 1269.67ms, fracRes: 0.5324, norm(attn): 0.0669, norm(output): 0.5664, norm(x): 1.3324, norm(y): 1.0037, norm:0.8669, tok/sec: 103232.74, flops:90.40, batch-reuse:1
@ 1463 train 6.3942 , allloss: 6.4102, dt: 1241.43ms, fracRes: 0.5349, norm(attn): 0.0698, norm(output): 0.5664, norm(x): 1.3329, norm(y): 1.0037, norm:1.1546, tok/sec: 105581.18, flops:92.46, batch-reuse:1
@ 1464 train 6.4391 , allloss: 6.4522, dt: 1286.14ms, fracRes: 0.5314, norm(attn): 0.0679, norm(output): 0.5664, norm(x): 1.3297, norm(y): 1.0037, norm:1.2304, tok/sec: 101911.39, flops:89.24, batch-reuse:1
@ 1465 train 6.3620 , allloss: 6.3755, dt: 1268.57ms, fracRes: 0.5365, norm(attn): 0.0679, norm(output): 0.5664, norm(x): 1.3377, norm(y): 1.0037, norm:0.8853, tok/sec: 103322.93, flops:90.48, batch-reuse:1
@ 1466 train 6.3736 , allloss: 6.3867, dt: 1254.74ms, fracRes: 0.5380, norm(attn): 0.0659, norm(output): 0.5664, norm(x): 1.3432, norm(y): 1.0038, norm:0.9185, tok/sec: 104461.46, flops:91.48, batch-reuse:1
@ 1467 train 6.4136 , allloss: 6.4276, dt: 1265.33ms, fracRes: 0.5380, norm(attn): 0.0654, norm(output): 0.5625, norm(x): 1.3380, norm(y): 1.0038, norm:0.9540, tok/sec: 103587.04, flops:90.71, batch-reuse:1
@ 1468 train 6.4376 , allloss: 6.4520, dt: 1277.95ms, fracRes: 0.5374, norm(attn): 0.0669, norm(output): 0.5625, norm(x): 1.3345, norm(y): 1.0037, norm:0.8774, tok/sec: 102564.05, flops:89.81, batch-reuse:1
@ 1469 train 6.5373 , allloss: 6.5559, dt: 1294.64ms, fracRes: 0.5386, norm(attn): 0.0708, norm(output): 0.5625, norm(x): 1.3415, norm(y): 1.0037, norm:1.0331, tok/sec: 101241.83, flops:88.66, batch-reuse:1
@ 1470 train 6.3895 , allloss: 6.4050, dt: 1296.55ms, fracRes: 0.5309, norm(attn): 0.0708, norm(output): 0.5664, norm(x): 1.3273, norm(y): 1.0037, norm:0.6312, tok/sec: 101093.14, flops:88.53, batch-reuse:1
@ 1471 train 6.3326 , allloss: 6.3465, dt: 1249.09ms, fracRes: 0.5323, norm(attn): 0.0693, norm(output): 0.5586, norm(x): 1.3256, norm(y): 1.0038, norm:1.0310, tok/sec: 104934.36, flops:91.89, batch-reuse:1
@ 1472 train 6.4009 , allloss: 6.4149, dt: 1241.78ms, fracRes: 0.5397, norm(attn): 0.0664, norm(output): 0.5625, norm(x): 1.3397, norm(y): 1.0038, norm:1.0176, tok/sec: 105551.30, flops:92.43, batch-reuse:1
@ 1473 train 6.3928 , allloss: 6.4066, dt: 1271.88ms, fracRes: 0.5410, norm(attn): 0.0664, norm(output): 0.5625, norm(x): 1.3421, norm(y): 1.0038, norm:1.0989, tok/sec: 103053.72, flops:90.24, batch-reuse:1
@ 1474 train 6.6150 , allloss: 6.6310, dt: 1271.59ms, fracRes: 0.5456, norm(attn): 0.0693, norm(output): 0.5586, norm(x): 1.3373, norm(y): 1.0037, norm:1.0134, tok/sec: 103077.27, flops:90.26, batch-reuse:1
@ 1475 train 6.4509 , allloss: 6.4645, dt: 1246.69ms, fracRes: 0.5392, norm(attn): 0.0684, norm(output): 0.5625, norm(x): 1.3322, norm(y): 1.0037, norm:0.9873, tok/sec: 105136.20, flops:92.07, batch-reuse:1
@ 1476 train 6.3958 , allloss: 6.4098, dt: 1238.52ms, fracRes: 0.5356, norm(attn): 0.0688, norm(output): 0.5625, norm(x): 1.3270, norm(y): 1.0037, norm:1.9692, tok/sec: 105829.85, flops:92.67, batch-reuse:1
@ 1477 train 6.4247 , allloss: 6.4394, dt: 1255.69ms, fracRes: 0.5339, norm(attn): 0.0693, norm(output): 0.5625, norm(x): 1.3212, norm(y): 1.0037, norm:1.2595, tok/sec: 104382.82, flops:91.41, batch-reuse:1
@ 1478 train 6.3654 , allloss: 6.3789, dt: 1244.16ms, fracRes: 0.5332, norm(attn): 0.0693, norm(output): 0.5625, norm(x): 1.3212, norm(y): 1.0038, norm:1.7679, tok/sec: 105350.00, flops:92.25, batch-reuse:1
@ 1479 train 6.4002 , allloss: 6.4156, dt: 1241.01ms, fracRes: 0.5372, norm(attn): 0.0693, norm(output): 0.5625, norm(x): 1.3291, norm(y): 1.0037, norm:1.4135, tok/sec: 105616.98, flops:92.49, batch-reuse:1
@ 1480 train 6.4046 , allloss: 6.4196, dt: 1245.02ms, fracRes: 0.5428, norm(attn): 0.0669, norm(output): 0.5586, norm(x): 1.3427, norm(y): 1.0037, norm:1.2163, tok/sec: 105276.75, flops:92.19, batch-reuse:1
@ 1481 train 6.3953 , allloss: 6.4101, dt: 1261.14ms, fracRes: 0.5444, norm(attn): 0.0679, norm(output): 0.5586, norm(x): 1.3425, norm(y): 1.0038, norm:1.0826, tok/sec: 103931.55, flops:91.01, batch-reuse:1
@ 1482 train 6.4342 , allloss: 6.4476, dt: 1281.84ms, fracRes: 0.5366, norm(attn): 0.0693, norm(output): 0.5625, norm(x): 1.3276, norm(y): 1.0037, norm:1.0041, tok/sec: 102252.85, flops:89.54, batch-reuse:1
@ 1483 train 6.4800 , allloss: 6.4956, dt: 1262.06ms, fracRes: 0.5262, norm(attn): 0.0771, norm(output): 0.5625, norm(x): 1.3068, norm(y): 1.0037, norm:3.1024, tok/sec: 103855.25, flops:90.94, batch-reuse:1
@ 1484 train 6.5192 , allloss: 6.5356, dt: 1249.59ms, fracRes: 0.5240, norm(attn): 0.0791, norm(output): 0.5625, norm(x): 1.3024, norm(y): 1.0037, norm:1.4721, tok/sec: 104892.15, flops:91.85, batch-reuse:1
@ 1485 train 6.5627 , allloss: 6.5773, dt: 1259.47ms, fracRes: 0.5298, norm(attn): 0.0723, norm(output): 0.5625, norm(x): 1.3095, norm(y): 1.0037, norm:1.9523, tok/sec: 104069.19, flops:91.13, batch-reuse:1
@ 1486 train 6.5166 , allloss: 6.5302, dt: 1282.19ms, fracRes: 0.5367, norm(attn): 0.0674, norm(output): 0.5586, norm(x): 1.3260, norm(y): 1.0037, norm:1.2491, tok/sec: 102224.86, flops:89.52, batch-reuse:1
@ 1487 train 6.4879 , allloss: 6.5024, dt: 1260.88ms, fracRes: 0.5430, norm(attn): 0.0679, norm(output): 0.5586, norm(x): 1.3395, norm(y): 1.0037, norm:1.5609, tok/sec: 103952.44, flops:91.03, batch-reuse:1
@ 1488 train 6.4800 , allloss: 6.4944, dt: 1259.66ms, fracRes: 0.5464, norm(attn): 0.0674, norm(output): 0.5586, norm(x): 1.3486, norm(y): 1.0037, norm:1.0728, tok/sec: 104053.30, flops:91.12, batch-reuse:1
@ 1489 train 6.6315 , allloss: 6.6454, dt: 1246.84ms, fracRes: 0.5451, norm(attn): 0.0674, norm(output): 0.5586, norm(x): 1.3411, norm(y): 1.0037, norm:1.7107, tok/sec: 105123.11, flops:92.05, batch-reuse:1
@ 1490 train 6.6048 , allloss: 6.6190, dt: 1287.30ms, fracRes: 0.5423, norm(attn): 0.0679, norm(output): 0.5586, norm(x): 1.3354, norm(y): 1.0037, norm:1.0160, tok/sec: 101819.04, flops:89.16, batch-reuse:1
@ 1491 train 6.6340 , allloss: 6.6478, dt: 1306.67ms, fracRes: 0.5400, norm(attn): 0.0688, norm(output): 0.5625, norm(x): 1.3383, norm(y): 1.0037, norm:1.2485, tok/sec: 100310.28, flops:87.84, batch-reuse:1
@ 1492 train 6.5096 , allloss: 6.5236, dt: 1268.52ms, fracRes: 0.5363, norm(attn): 0.0688, norm(output): 0.5625, norm(x): 1.3358, norm(y): 1.0037, norm:1.1115, tok/sec: 103327.01, flops:90.48, batch-reuse:1
@ 1493 train 6.5218 , allloss: 6.5357, dt: 1271.49ms, fracRes: 0.5323, norm(attn): 0.0693, norm(output): 0.5625, norm(x): 1.3283, norm(y): 1.0037, norm:1.9093, tok/sec: 103085.12, flops:90.27, batch-reuse:1
@ 1494 train 6.5373 , allloss: 6.5521, dt: 1260.97ms, fracRes: 0.5265, norm(attn): 0.0713, norm(output): 0.5664, norm(x): 1.3179, norm(y): 1.0036, norm:1.4222, tok/sec: 103945.03, flops:91.02, batch-reuse:1
@ 1495 train 6.5002 , allloss: 6.5146, dt: 1291.94ms, fracRes: 0.5265, norm(attn): 0.0713, norm(output): 0.5664, norm(x): 1.3203, norm(y): 1.0037, norm:1.6656, tok/sec: 101453.99, flops:88.84, batch-reuse:1
@ 1496 train 6.5541 , allloss: 6.5680, dt: 1288.94ms, fracRes: 0.5299, norm(attn): 0.0713, norm(output): 0.5625, norm(x): 1.3258, norm(y): 1.0037, norm:1.7766, tok/sec: 101689.90, flops:89.05, batch-reuse:1
@ 1497 train 6.4057 , allloss: 6.4196, dt: 1270.42ms, fracRes: 0.5284, norm(attn): 0.0703, norm(output): 0.5625, norm(x): 1.3246, norm(y): 1.0037, norm:0.9880, tok/sec: 103171.84, flops:90.35, batch-reuse:1
@ 1498 train 6.5787 , allloss: 6.5920, dt: 1268.91ms, fracRes: 0.5359, norm(attn): 0.0693, norm(output): 0.5625, norm(x): 1.3370, norm(y): 1.0037, norm:1.2324, tok/sec: 103295.19, flops:90.45, batch-reuse:1
@ 1499 train 6.6051 , allloss: 6.6206, dt: 1274.97ms, fracRes: 0.5455, norm(attn): 0.0737, norm(output): 0.5625, norm(x): 1.3462, norm(y): 1.0036, norm:1.0483, tok/sec: 102803.60, flops:90.02, batch-reuse:1
@ 1500 train 6.6034 , allloss: 6.6181, dt: 1289.28ms, fracRes: 0.5445, norm(attn): 0.0698, norm(output): 0.5625, norm(x): 1.3481, norm(y): 1.0037, norm:1.1152, tok/sec: 101663.00, flops:89.02, batch-reuse:1
@ 1501 train 6.4533 , allloss: 6.4671, dt: 1271.70ms, fracRes: 0.5431, norm(attn): 0.0659, norm(output): 0.5586, norm(x): 1.3493, norm(y): 1.0037, norm:1.0748, tok/sec: 103068.65, flops:90.26, batch-reuse:1
@ 1502 train 6.4983 , allloss: 6.5123, dt: 1281.13ms, fracRes: 0.5434, norm(attn): 0.0674, norm(output): 0.5586, norm(x): 1.3469, norm(y): 1.0037, norm:1.0567, tok/sec: 102309.98, flops:89.59, batch-reuse:1
@ 1503 train 6.5345 , allloss: 6.5473, dt: 1292.57ms, fracRes: 0.5403, norm(attn): 0.0674, norm(output): 0.5625, norm(x): 1.3452, norm(y): 1.0037, norm:1.2027, tok/sec: 101404.00, flops:88.80, batch-reuse:1
@ 1504 train 6.5561 , allloss: 6.5689, dt: 1265.21ms, fracRes: 0.5392, norm(attn): 0.0669, norm(output): 0.5625, norm(x): 1.3481, norm(y): 1.0037, norm:0.8908, tok/sec: 103597.08, flops:90.72, batch-reuse:1
@ 1505 train 6.5081 , allloss: 6.5212, dt: 1273.66ms, fracRes: 0.5376, norm(attn): 0.0664, norm(output): 0.5625, norm(x): 1.3402, norm(y): 1.0037, norm:1.1847, tok/sec: 102910.06, flops:90.12, batch-reuse:1
@ 1506 train 6.5343 , allloss: 6.5485, dt: 1266.57ms, fracRes: 0.5352, norm(attn): 0.0688, norm(output): 0.5625, norm(x): 1.3278, norm(y): 1.0036, norm:0.9144, tok/sec: 103485.73, flops:90.62, batch-reuse:1
@ 1507 train 6.5883 , allloss: 6.6026, dt: 1261.38ms, fracRes: 0.5337, norm(attn): 0.0703, norm(output): 0.5625, norm(x): 1.3240, norm(y): 1.0036, norm:1.1408, tok/sec: 103911.47, flops:90.99, batch-reuse:1
@ 1508 train 6.5233 , allloss: 6.5367, dt: 1279.98ms, fracRes: 0.5324, norm(attn): 0.0684, norm(output): 0.5625, norm(x): 1.3310, norm(y): 1.0036, norm:1.3946, tok/sec: 102401.70, flops:89.67, batch-reuse:1
@ 1509 train 6.5018 , allloss: 6.5146, dt: 1282.51ms, fracRes: 0.5307, norm(attn): 0.0688, norm(output): 0.5625, norm(x): 1.3299, norm(y): 1.0037, norm:1.2499, tok/sec: 102199.40, flops:89.49, batch-reuse:1
@ 1510 train 6.5600 , allloss: 6.5741, dt: 1302.32ms, fracRes: 0.5311, norm(attn): 0.0703, norm(output): 0.5625, norm(x): 1.3245, norm(y): 1.0037, norm:0.8662, tok/sec: 100645.15, flops:88.13, batch-reuse:1
@ 1511 train 6.5815 , allloss: 6.5951, dt: 1322.70ms, fracRes: 0.5337, norm(attn): 0.0713, norm(output): 0.5625, norm(x): 1.3315, norm(y): 1.0037, norm:1.7745, tok/sec: 99094.26, flops:86.78, batch-reuse:1
@ 1512 train 6.5635 , allloss: 6.5775, dt: 1274.51ms, fracRes: 0.5348, norm(attn): 0.0732, norm(output): 0.5625, norm(x): 1.3300, norm(y): 1.0037, norm:1.2809, tok/sec: 102841.33, flops:90.06, batch-reuse:1
@ 1513 train 6.5490 , allloss: 6.5630, dt: 1254.27ms, fracRes: 0.5353, norm(attn): 0.0708, norm(output): 0.5625, norm(x): 1.3326, norm(y): 1.0037, norm:1.1376, tok/sec: 104500.30, flops:91.51, batch-reuse:1
@ 1514 train 6.6429 , allloss: 6.6568, dt: 1241.52ms, fracRes: 0.5384, norm(attn): 0.0698, norm(output): 0.5625, norm(x): 1.3367, norm(y): 1.0037, norm:1.2997, tok/sec: 105574.08, flops:92.45, batch-reuse:1
@ 1515 train 6.5142 , allloss: 6.5276, dt: 1243.76ms, fracRes: 0.5395, norm(attn): 0.0688, norm(output): 0.5625, norm(x): 1.3393, norm(y): 1.0037, norm:0.6859, tok/sec: 105383.95, flops:92.28, batch-reuse:1
@ 1516 train 6.4016 , allloss: 6.4151, dt: 1266.06ms, fracRes: 0.5360, norm(attn): 0.0693, norm(output): 0.5625, norm(x): 1.3319, norm(y): 1.0037, norm:1.1730, tok/sec: 103527.12, flops:90.66, batch-reuse:1
@ 1517 train 6.4764 , allloss: 6.4902, dt: 1282.27ms, fracRes: 0.5373, norm(attn): 0.0688, norm(output): 0.5586, norm(x): 1.3307, norm(y): 1.0037, norm:0.8488, tok/sec: 102219.11, flops:89.51, batch-reuse:1
@ 1518 train 6.4717 , allloss: 6.4853, dt: 1254.24ms, fracRes: 0.5363, norm(attn): 0.0684, norm(output): 0.5625, norm(x): 1.3341, norm(y): 1.0037, norm:1.0231, tok/sec: 104502.76, flops:91.51, batch-reuse:1
@ 1519 train 6.4581 , allloss: 6.4719, dt: 1313.93ms, fracRes: 0.5355, norm(attn): 0.0698, norm(output): 0.5625, norm(x): 1.3278, norm(y): 1.0037, norm:0.8762, tok/sec: 99755.35, flops:87.35, batch-reuse:1
@ 1520 train 6.4988 , allloss: 6.5129, dt: 1274.66ms, fracRes: 0.5371, norm(attn): 0.0708, norm(output): 0.5586, norm(x): 1.3311, norm(y): 1.0037, norm:1.2307, tok/sec: 102828.73, flops:90.05, batch-reuse:1
@ 1521 train 6.4896 , allloss: 6.5032, dt: 1261.46ms, fracRes: 0.5410, norm(attn): 0.0688, norm(output): 0.5586, norm(x): 1.3399, norm(y): 1.0037, norm:0.7896, tok/sec: 103904.76, flops:90.99, batch-reuse:1
@ 1522 train 6.5093 , allloss: 6.5233, dt: 1248.98ms, fracRes: 0.5439, norm(attn): 0.0679, norm(output): 0.5586, norm(x): 1.3423, norm(y): 1.0037, norm:0.7456, tok/sec: 104943.53, flops:91.90, batch-reuse:1
@ 1523 train 6.4829 , allloss: 6.4973, dt: 1279.72ms, fracRes: 0.5424, norm(attn): 0.0688, norm(output): 0.5547, norm(x): 1.3357, norm(y): 1.0037, norm:0.9031, tok/sec: 102422.25, flops:89.69, batch-reuse:1
@ 1524 train 6.4370 , allloss: 6.4510, dt: 1309.28ms, fracRes: 0.5424, norm(attn): 0.0703, norm(output): 0.5547, norm(x): 1.3368, norm(y): 1.0037, norm:0.8040, tok/sec: 100110.25, flops:87.67, batch-reuse:1
@ 1525 train 6.4324 , allloss: 6.4462, dt: 1530.12ms, fracRes: 0.5423, norm(attn): 0.0693, norm(output): 0.5586, norm(x): 1.3416, norm(y): 1.0037, norm:0.8549, tok/sec: 85661.15, flops:75.01, batch-reuse:1
@ 1526 train 6.5242 , allloss: 6.5384, dt: 1279.04ms, fracRes: 0.5431, norm(attn): 0.0713, norm(output): 0.5586, norm(x): 1.3355, norm(y): 1.0037, norm:0.7366, tok/sec: 102476.98, flops:89.74, batch-reuse:1
@ 1527 train 6.4511 , allloss: 6.4652, dt: 1272.38ms, fracRes: 0.5392, norm(attn): 0.0708, norm(output): 0.5547, norm(x): 1.3269, norm(y): 1.0037, norm:0.7759, tok/sec: 103013.01, flops:90.21, batch-reuse:1
@ 1528 train 6.5200 , allloss: 6.5340, dt: 1288.32ms, fracRes: 0.5415, norm(attn): 0.0718, norm(output): 0.5547, norm(x): 1.3261, norm(y): 1.0037, norm:0.6427, tok/sec: 101738.58, flops:89.09, batch-reuse:1
@ 1529 train 6.4408 , allloss: 6.4552, dt: 1286.63ms, fracRes: 0.5425, norm(attn): 0.0718, norm(output): 0.5547, norm(x): 1.3296, norm(y): 1.0037, norm:0.9750, tok/sec: 101872.32, flops:89.21, batch-reuse:1
@ 1530 train 6.4998 , allloss: 6.5151, dt: 1270.38ms, fracRes: 0.5492, norm(attn): 0.0693, norm(output): 0.5430, norm(x): 1.3414, norm(y): 1.0037, norm:1.4076, tok/sec: 103175.58, flops:90.35, batch-reuse:1
@ 1531 train 6.3763 , allloss: 6.3907, dt: 1293.30ms, fracRes: 0.5466, norm(attn): 0.0693, norm(output): 0.5391, norm(x): 1.3375, norm(y): 1.0038, norm:1.1491, tok/sec: 101347.29, flops:88.75, batch-reuse:1
@ 1532 train 6.4344 , allloss: 6.4488, dt: 1269.00ms, fracRes: 0.5416, norm(attn): 0.0703, norm(output): 0.5430, norm(x): 1.3236, norm(y): 1.0038, norm:1.1453, tok/sec: 103287.66, flops:90.45, batch-reuse:1
@ 1533 train 6.4086 , allloss: 6.4225, dt: 1280.27ms, fracRes: 0.5410, norm(attn): 0.0713, norm(output): 0.5508, norm(x): 1.3253, norm(y): 1.0037, norm:1.0292, tok/sec: 102378.53, flops:89.65, batch-reuse:1
@ 1534 train 6.4488 , allloss: 6.4626, dt: 1291.59ms, fracRes: 0.5430, norm(attn): 0.0708, norm(output): 0.5430, norm(x): 1.3280, norm(y): 1.0037, norm:0.6920, tok/sec: 101481.40, flops:88.87, batch-reuse:1
@ 1535 train 6.4630 , allloss: 6.4774, dt: 1289.60ms, fracRes: 0.5438, norm(attn): 0.0703, norm(output): 0.5391, norm(x): 1.3261, norm(y): 1.0037, norm:0.7357, tok/sec: 101637.46, flops:89.00, batch-reuse:1
@ 1536 train 6.3812 , allloss: 6.3953, dt: 1322.83ms, fracRes: 0.5440, norm(attn): 0.0693, norm(output): 0.5430, norm(x): 1.3312, norm(y): 1.0037, norm:0.9554, tok/sec: 99084.88, flops:86.77, batch-reuse:1
@ 1537 train 6.3781 , allloss: 6.3916, dt: 1295.83ms, fracRes: 0.5446, norm(attn): 0.0693, norm(output): 0.5391, norm(x): 1.3301, norm(y): 1.0037, norm:0.8036, tok/sec: 101149.03, flops:88.57, batch-reuse:1
@ 1538 train 6.4082 , allloss: 6.4223, dt: 1260.84ms, fracRes: 0.5415, norm(attn): 0.0718, norm(output): 0.5391, norm(x): 1.3208, norm(y): 1.0037, norm:0.8440, tok/sec: 103956.10, flops:91.03, batch-reuse:1
@ 1539 train 6.4783 , allloss: 6.4928, dt: 1278.93ms, fracRes: 0.5428, norm(attn): 0.0718, norm(output): 0.5391, norm(x): 1.3181, norm(y): 1.0037, norm:1.0611, tok/sec: 102485.77, flops:89.75, batch-reuse:1
@ 1540 train 6.4251 , allloss: 6.4397, dt: 1272.99ms, fracRes: 0.5401, norm(attn): 0.0718, norm(output): 0.5352, norm(x): 1.3110, norm(y): 1.0038, norm:0.8894, tok/sec: 102964.14, flops:90.16, batch-reuse:1
@ 1541 train 6.4113 , allloss: 6.4256, dt: 1263.69ms, fracRes: 0.5430, norm(attn): 0.0708, norm(output): 0.5352, norm(x): 1.3154, norm(y): 1.0037, norm:0.8231, tok/sec: 103721.48, flops:90.83, batch-reuse:1
@ 1542 train 6.4398 , allloss: 6.4544, dt: 1252.67ms, fracRes: 0.5485, norm(attn): 0.0693, norm(output): 0.5352, norm(x): 1.3264, norm(y): 1.0037, norm:0.9314, tok/sec: 104634.08, flops:91.63, batch-reuse:1
@ 1543 train 6.6968 , allloss: 6.7134, dt: 1264.09ms, fracRes: 0.5495, norm(attn): 0.0752, norm(output): 0.5312, norm(x): 1.3091, norm(y): 1.0036, norm:1.2486, tok/sec: 103688.72, flops:90.80, batch-reuse:1
@ 1544 train 6.3856 , allloss: 6.3999, dt: 1250.68ms, fracRes: 0.5409, norm(attn): 0.0723, norm(output): 0.5312, norm(x): 1.3055, norm(y): 1.0037, norm:1.5035, tok/sec: 104800.23, flops:91.77, batch-reuse:1
@ 1545 train 6.4224 , allloss: 6.4395, dt: 1261.80ms, fracRes: 0.5368, norm(attn): 0.0757, norm(output): 0.5391, norm(x): 1.3031, norm(y): 1.0037, norm:1.2830, tok/sec: 103877.31, flops:90.96, batch-reuse:1
@ 1546 train 6.7477 , allloss: 6.7627, dt: 1264.00ms, fracRes: 0.5430, norm(attn): 0.0718, norm(output): 0.5352, norm(x): 1.3120, norm(y): 1.0037, norm:1.1968, tok/sec: 103696.40, flops:90.81, batch-reuse:1
@ 1547 train 6.4177 , allloss: 6.4341, dt: 1282.81ms, fracRes: 0.5452, norm(attn): 0.0732, norm(output): 0.5352, norm(x): 1.3114, norm(y): 1.0037, norm:1.4142, tok/sec: 102175.98, flops:89.47, batch-reuse:1
@ 1548 train 6.5079 , allloss: 6.5251, dt: 1291.29ms, fracRes: 0.5529, norm(attn): 0.0723, norm(output): 0.5312, norm(x): 1.3223, norm(y): 1.0037, norm:1.0373, tok/sec: 101504.60, flops:88.89, batch-reuse:1
@ 1549 train 6.5099 , allloss: 6.5257, dt: 1263.12ms, fracRes: 0.5566, norm(attn): 0.0684, norm(output): 0.5312, norm(x): 1.3329, norm(y): 1.0038, norm:1.2823, tok/sec: 103768.33, flops:90.87, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3848,     0.6133,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4883,     0.4355,     0.0771,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2988,     0.5781,     0.0630,     0.0610,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0281,     0.0056,     0.7305,     0.2363,     0.0009,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1836,     0.1396,     0.0981,     0.0786,     0.3223,     0.1768,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0364,     0.0447,     0.5742,     0.3281,     0.0008,     0.0117,     0.0018,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0889,     0.2285,     0.0732,     0.0986,     0.1465,     0.1445,     0.1201,     0.0996,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1040,     0.0598,     0.1484,     0.1641,     0.0762,     0.0635,     0.1025,     0.1650,     0.1167,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0645,     0.1011,     0.0153,     0.0201,     0.1875,     0.1050,     0.2676,     0.0153,     0.1914,     0.0317,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0457,     0.0087,     0.3574,     0.1328,     0.0025,     0.0126,     0.0015,     0.2520,     0.0167,     0.1611,     0.0096,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0019,     0.0076,     0.0000,     0.0001,     0.2129,     0.0184,     0.6250,     0.0001,     0.0422,     0.0001,     0.0913,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0297,     0.0273,     0.2188,     0.1660,     0.0047,     0.0266,     0.0052,     0.1416,     0.0081,     0.0537,     0.0041,     0.2324,     0.0820,     0.0000,     0.0000],
        [    0.0562,     0.0361,     0.1250,     0.1309,     0.0145,     0.0209,     0.0151,     0.1543,     0.0317,     0.1729,     0.0153,     0.1445,     0.0684,     0.0134,     0.0000],
        [    0.0535,     0.0391,     0.1396,     0.0913,     0.0166,     0.0215,     0.0044,     0.1660,     0.0129,     0.1309,     0.0084,     0.1729,     0.1240,     0.0073,     0.0122]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0008, -0.0116,  0.0050,  ..., -0.0310,  0.0228, -0.0068],
        [-0.0368,  0.0169, -0.0146,  ...,  0.0005,  0.0039,  0.0331],
        [ 0.0139,  0.0204, -0.0142,  ..., -0.0193,  0.0169, -0.0283],
        ...,
        [ 0.0062,  0.0063,  0.0108,  ..., -0.0275,  0.0102,  0.0134],
        [-0.0378,  0.0119, -0.0299,  ..., -0.0075, -0.0031, -0.0037],
        [-0.0242,  0.0126, -0.0124,  ...,  0.0008, -0.0077,  0.0219]], device='cuda:0', requires_grad=True)
K: tensor([ 0.9727,  0.2520, -0.8555,  0.3477, -0.2559,  0.8242,  0.5508,  0.6641,  0.4609,  0.3008,  0.8438, -0.3770, -0.9648,  0.3398, -0.1475, -0.6836,  0.1030, -0.0137,  0.2656,  0.7344,  0.4512,  0.2158,  0.7383, -0.9219,  0.5312,  1.1250, -0.9414, -0.3105,  1.3125, -0.0850,  0.4883,  0.0767,
        -0.3203, -0.9570,  0.8594,  0.9766, -1.0391, -0.2178, -0.8828, -1.5859, -0.0151, -0.5078, -0.5234,  1.2734, -0.7305,  0.4570, -0.2695,  1.0000, -0.3535, -0.3535,  0.3809, -0.9609, -1.0938,  0.6562,  0.4238, -0.0064, -0.0613,  0.1895,  1.3516, -0.3359,  0.0933,  0.0630,  0.1157,  0.3828],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[    -0.0242,      0.0002,     -0.0001,  ...,      0.0232,     -0.0039,     -0.0060],
        [     0.0199,     -0.0205,     -0.0129,  ...,      0.0065,      0.0201,     -0.0186],
        [    -0.0458,      0.0518,      0.0218,  ...,     -0.0197,     -0.0251,     -0.0115],
        ...,
        [     0.0039,      0.0243,      0.0323,  ...,      0.0268,      0.0150,      0.0358],
        [     0.0338,     -0.0079,      0.0389,  ...,      0.0127,      0.0080,      0.0230],
        [     0.0135,     -0.0189,      0.0218,  ...,     -0.0289,      0.0197,     -0.0160]], device='cuda:0', requires_grad=True)
Q: tensor([-0.4707, -0.2197, -0.1455, -0.7656,  0.7539, -0.3887, -1.0469, -0.0544, -0.5234,  0.4160, -0.4160, -0.1064, -0.2695, -1.0859, -0.2021, -0.5352, -0.7148,  0.3008, -0.7617,  0.5820,  0.0566,  0.2266, -0.0090,  0.5938, -0.4883, -0.6602,  0.4082, -0.4609, -0.7617,  0.6055, -1.1328,  0.5273,
         0.4043, -0.0918, -0.4160, -0.4648,  0.1748,  0.2832, -0.0304,  2.0781,  0.2227, -0.3809,  0.7344,  0.1885,  0.2480, -0.0354,  0.3320, -0.4961,  0.1245, -0.0137, -1.7969, -0.2139,  0.5742, -0.8555, -0.6562, -1.3203, -0.1514, -0.6992,  0.0669, -0.4902,  1.3516,  0.8242, -0.4375,  0.1543],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.4648,  2.2031,  2.2031, -3.2500, -0.8555, -3.5156,  2.6562, -2.0781,  1.1250, -3.4688,  2.6406,  1.1797, -3.0781, -1.1797],
        [ 0.0000, -0.1133, -1.8438, -1.9141,  2.1406,  1.0625,  2.0156, -1.5859,  1.0312, -1.1328,  1.8281, -2.3281, -0.3711,  2.0938,  1.2578],
        [ 0.0000,  0.6602, -1.5547, -1.5859,  1.7891,  0.7578,  1.1797, -0.7773,  0.6172, -1.2500,  0.4043, -1.6641,  0.0471,  0.9766,  0.9570],
        [ 0.0000, -1.6094,  3.2656,  2.1406, -3.4375, -1.7031, -4.4062,  2.5781, -2.2344,  1.9219, -2.5156,  2.8750,  0.1807, -3.0312, -1.9219],
        [ 0.0000, -0.2715, -0.6289, -0.8477,  0.5586, -0.0381,  0.6914, -0.6484,  0.8281, -0.4395,  1.2031, -0.6484, -1.0781,  0.8750,  0.6523],
        [ 0.0000,  0.2051,  2.7656,  2.2031, -3.8438, -1.1406, -3.0000,  2.3594, -2.7656,  1.4141, -3.5469,  3.5312,  1.2109, -3.3594, -1.0781],
        [ 0.0000,  0.9414, -0.1982,  0.1011,  0.4941,  0.4844,  0.2969,  0.1138, -0.0205, -0.0928, -0.1504, -0.1641, -0.1250,  0.2295,  0.5273],
        [ 0.0000, -0.5547,  0.3555,  0.4551, -0.3105, -0.4902, -0.0125,  0.4648,  0.1152,  0.4512, -0.4570,  0.0933, -0.1128, -0.4902, -0.3965],
        [ 0.0000,  0.4551, -1.4375, -1.1562,  1.0703,  0.4941,  1.4297, -1.4297,  1.0938, -0.7070,  1.4844, -1.8594, -0.4082,  1.4453,  1.3750],
        [ 0.0000, -1.6562,  2.0469,  1.0625, -2.9219, -1.2891, -3.3906,  1.7031, -1.0078,  1.2578, -1.5547,  2.5156,  0.0825, -2.1094, -1.6250],
        [ 0.0000,  1.3594, -4.5000, -3.1562,  4.6875,  2.2500,  5.7812, -3.2344,  3.0781, -2.7500,  3.8438, -5.5625, -0.8086,  4.4375,  3.0312],
        [ 0.0000, -0.0815,  2.0000,  1.7188, -1.8516, -0.1079, -1.7500,  1.5625, -1.3047,  0.5938, -1.9688,  2.0625,  1.0156, -1.7578, -0.9492],
        [ 0.0000, -0.4375,  0.8047,  0.8477, -1.3594, -0.9844, -1.3125,  1.0156, -0.5664,  1.1250, -1.2969,  0.9492,  0.1953, -1.4297, -1.0312],
        [ 0.0000, -0.3125,  0.9609,  0.5352, -1.1719, -0.9062, -2.5000,  1.1328, -1.4141,  0.8945, -1.8516,  1.1797,  0.8438, -1.9844, -1.4766]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5096],
        [0.4454],
        [0.4256],
        [0.0720],
        [0.1161],
        [0.1087],
        [0.0640],
        [0.0577],
        [0.0582],
        [0.0263],
        [0.0046],
        [0.0517],
        [0.0232],
        [0.0383]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9297, 0.0718, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8555, 0.0879, 0.0554, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4082, 0.0518, 0.0713, 0.4688, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0535, 0.3965, 0.3984, 0.1309, 0.0221, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0977, 0.0579, 0.0288, 0.1562, 0.0679, 0.5898, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1011, 0.0427, 0.0291, 0.1416, 0.1074, 0.4414, 0.1377, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0615, 0.1807, 0.4395, 0.1055, 0.0635, 0.0366, 0.0767, 0.0369, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0835, 0.1572, 0.1543, 0.1660, 0.0383, 0.1465, 0.1206, 0.0806, 0.0540, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0957, 0.0228, 0.0330, 0.1162, 0.0703, 0.2070, 0.1504, 0.0564, 0.2148, 0.0334, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0258, 0.0410, 0.0217, 0.0493, 0.0229, 0.1240, 0.1426, 0.0062, 0.0840, 0.0260, 0.4570, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0884, 0.0334, 0.0649, 0.0747, 0.0894, 0.0703, 0.1050, 0.0747, 0.0791, 0.0579, 0.1641, 0.0981, 0.0000, 0.0000, 0.0000],
        [0.0649, 0.0928, 0.2295, 0.0981, 0.0320, 0.0527, 0.0791, 0.0437, 0.0198, 0.0840, 0.0080, 0.1455, 0.0498, 0.0000, 0.0000],
        [0.0479, 0.1113, 0.1309, 0.1143, 0.0233, 0.0654, 0.0771, 0.0454, 0.0248, 0.1318, 0.0292, 0.1191, 0.0593, 0.0205, 0.0000],
        [0.0464, 0.0134, 0.0146, 0.0308, 0.0481, 0.0566, 0.0669, 0.0232, 0.0796, 0.0176, 0.3887, 0.0403, 0.0255, 0.1167, 0.0317]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0236, -0.0107, -0.0045,  ..., -0.0038, -0.0238,  0.0233],
        [ 0.0030,  0.0141,  0.0039,  ...,  0.0103, -0.0003, -0.0387],
        [ 0.0097,  0.0231,  0.0208,  ...,  0.0084,  0.0054,  0.0068],
        ...,
        [-0.0109,  0.0294,  0.0135,  ...,  0.0436, -0.0120, -0.0065],
        [-0.0143, -0.0104, -0.0100,  ..., -0.0118,  0.0059,  0.0142],
        [ 0.0223,  0.0341,  0.0179,  ...,  0.0120, -0.0256,  0.0194]], device='cuda:0', requires_grad=True)
K: tensor([ 0.0432,  0.6133, -0.0347, -0.1226, -0.5195,  0.1270, -0.5586,  0.1113,  0.1357,  0.8359,  0.1631, -0.2373, -0.2656,  0.1221,  0.2910,  0.0554,  0.6797, -0.0684, -0.4844, -0.3555,  0.7656,  0.2969, -0.2949,  0.3008, -0.1855,  0.3789, -0.6016, -0.2139, -0.0364,  0.2637,  0.3984, -0.2461,
        -0.0510,  0.0496, -0.1465, -0.0864,  0.6094,  0.2676, -0.5586,  0.8320,  0.4082, -0.7930,  0.0576, -0.5781, -0.4102,  0.7344,  0.2793, -0.8906,  0.3770, -1.4141, -0.5195, -0.1040,  0.1797, -0.3906,  1.0859, -0.0457,  0.5859, -0.7617,  0.7500,  0.0188, -0.1079,  0.3809, -0.1533, -0.4824],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0140, -0.0157, -0.0041,  ...,  0.0046,  0.0025, -0.0042],
        [ 0.0128,  0.0119, -0.0398,  ..., -0.0079, -0.0031, -0.0205],
        [ 0.0379,  0.0317,  0.0206,  ..., -0.0111,  0.0327,  0.0137],
        ...,
        [-0.0144, -0.0238,  0.0166,  ...,  0.0261, -0.0063, -0.0310],
        [ 0.0430,  0.0024,  0.0026,  ..., -0.0105,  0.0127,  0.0057],
        [ 0.0163, -0.0295, -0.0198,  ...,  0.0107, -0.0165,  0.0198]], device='cuda:0', requires_grad=True)
Q: tensor([-0.3672, -0.1245, -0.0177,  0.1426,  0.0923,  0.1982, -0.2324, -0.0137, -0.5156, -0.6484, -1.3750, -0.5742,  0.0452,  0.2383, -0.5039, -0.1592,  0.6445, -0.2578,  0.2773,  0.4648,  0.4902, -1.2500, -0.6484,  0.0544, -1.6250,  0.5508,  0.7578,  0.3457,  0.9180,  0.5859, -0.8672,  0.3945,
        -0.7031, -0.0830,  1.4766,  0.2598, -0.4512,  0.7227, -0.3887, -0.2715, -0.7969,  0.3027,  0.1846, -0.5273, -0.1729, -0.2324,  0.0063,  0.6094,  0.3594,  0.7539, -0.1182, -0.1445, -0.7617,  0.0913,  0.5703,  0.7500, -0.5938,  0.7734, -0.3848,  0.3262,  0.0654,  0.0205, -1.0391, -0.9648],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -2.5625,     -3.3906,     -0.6367,      0.0150,      0.9492,     -0.1309,      0.2461,      1.9453,     -1.3359,      4.3750,     -0.6992,      0.5039,      2.5625,     -0.1699],
        [     0.0000,     -2.2812,     -2.7344,     -0.4785,     -0.1660,      0.9297,      0.1494,      0.1807,      1.3750,     -0.9062,      3.3594,     -0.4707,      0.8438,      2.1094,     -0.3496],
        [     0.0000,     -2.0625,     -1.7422,      0.1426,     -0.1963,      0.8750,      0.1816,     -0.2715,      1.1172,     -1.1094,      2.5469,     -0.3125,      0.1367,      1.7500,     -0.2910],
        [     0.0000,      2.0000,      2.0000,      0.8906,     -0.8828,      0.0481,     -0.1904,      0.4668,     -1.0781,      1.8984,     -2.3594,      1.0156,      0.7500,     -1.5469,      0.4199],
        [     0.0000,     -0.5234,     -1.2266,      0.4668,     -0.3613,      1.7969,      1.2578,     -0.4297,      1.1094,     -0.0698,      3.1406,     -0.1104,      0.1553,      1.5312,      0.0266],
        [     0.0000,     -0.8594,     -1.2500,      0.3340,      0.0605,      1.4688,      0.3105,      0.1416,      1.6641,     -0.0737,      2.5156,      0.2383,      0.5977,      1.8984,     -0.1113],
        [     0.0000,      1.0781,      1.9688,      0.5430,      0.0332,     -0.5156,      0.2197,     -0.5078,     -0.5234,      0.5234,     -2.5312,      0.9805,     -0.4727,     -1.2500,     -0.0593],
        [     0.0000,      0.6328,      0.6172,      0.6875,     -0.7734,      0.5625,      0.3711,     -0.0361,     -0.4316,      0.5859,      0.2236,      0.6328,      0.2090,     -0.4531,      0.2441],
        [     0.0000,     -1.4375,     -1.0703,      0.1904,     -0.3086,      0.7656,      0.4492,     -0.5312,      0.8086,     -1.0469,      2.6562,      0.1758,     -0.1318,      1.4219,      0.0029],
        [     0.0000,      0.4668,     -0.1738,      0.6484,     -0.1187,      1.5703,      1.7109,     -1.4297,      1.1797,      0.0085,      2.8750,      0.2363,     -0.9883,      1.4609,      0.1201],
        [     0.0000,     -0.9688,     -0.3066,     -0.1650,      0.0105,     -0.2256,      0.1719,     -0.1650,     -0.1094,     -0.4219,      0.6211,      0.1089,      0.0320,      0.2002,     -0.3281],
        [     0.0000,      0.3555,      1.2578,      0.4102,     -0.7070,     -0.2090,      0.1963,     -0.3945,     -1.1875,      0.2578,     -2.0938,      0.8086,     -0.2676,     -1.5391,      0.3555],
        [     0.0000,      0.8477,      1.0078,      0.8711,     -0.7188,      0.3164,      0.4785,     -0.0513,     -0.6562,      1.0156,     -0.4941,      0.9141,      0.2168,     -0.8438,      0.2490],
        [     0.0000,     -1.2344,     -1.1484,     -0.4102,      0.0366,      0.2012,      0.3711,     -0.6914,      0.5430,     -0.9648,      2.1250,     -0.1396,     -0.5977,      0.9258,     -0.3789]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8646],
        [0.7354],
        [0.3917],
        [0.1350],
        [0.1828],
        [0.1783],
        [0.0886],
        [0.0769],
        [0.0963],
        [0.0493],
        [0.0806],
        [0.0679],
        [0.0515],
        [0.0699]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[    -0.0106,      0.0118,      0.0112,  ...,     -0.0058,      0.0022,     -0.0148],
        [     0.0269,     -0.0400,     -0.0340,  ...,      0.0110,     -0.0076,     -0.0307],
        [     0.0375,     -0.0314,      0.0270,  ...,     -0.0001,     -0.0096,      0.0070],
        ...,
        [     0.0374,     -0.0002,     -0.0269,  ...,     -0.0160,      0.0092,      0.0183],
        [     0.0043,      0.0324,     -0.0194,  ...,     -0.0059,     -0.0278,     -0.0199],
        [     0.0177,     -0.0008,      0.0052,  ...,      0.0161,     -0.0083,      0.0181]], device='cuda:0', requires_grad=True)
K: tensor([-2.7500, -2.9375, -2.5469, -1.7266, -2.2188,  0.6367, -2.3125,  3.1094, -2.6875, -3.5000,  1.9297, -3.4531, -2.7969, -3.2344, -2.8281,  1.1562,  2.5938,  2.5000, -3.4062,  2.5938,  1.7109,  3.0000, -1.8125, -2.4844,  3.4688,  1.9609, -1.7500, -2.2969,  3.3281,  3.6562,  2.2812,  3.4219,
        -3.4531,  1.7578,  2.9844, -3.0781, -2.7656, -2.3125,  2.5469,  1.2266, -0.0928, -3.2969, -1.8906,  2.9844,  2.7500,  2.8594, -3.5000, -2.3281,  2.8125,  2.2500, -2.1875, -1.4219,  3.6875,  2.8281,  2.3594, -2.4062, -2.7344, -2.5781, -3.0938, -2.1094, -2.9844, -2.8125,  3.6094,  1.4844],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0187,  0.0083,  0.0344,  ..., -0.0230,  0.0326,  0.0007],
        [ 0.0112,  0.0305,  0.0131,  ...,  0.0147,  0.0181, -0.0182],
        [-0.0067, -0.0029,  0.0229,  ..., -0.0206,  0.0449, -0.0147],
        ...,
        [-0.0151, -0.0072,  0.0112,  ..., -0.0242,  0.0008, -0.0027],
        [ 0.0188, -0.0214,  0.0207,  ...,  0.0291,  0.0097, -0.0065],
        [ 0.0356, -0.0333, -0.0176,  ...,  0.0163,  0.0236,  0.0105]], device='cuda:0', requires_grad=True)
Q: tensor([ 2.5938,  1.8359,  2.6250,  1.6719,  2.1719, -1.2344,  2.8438, -1.8047,  4.2188,  2.9062, -3.3906,  2.5938,  2.7031,  2.1406,  3.3125, -0.8320, -2.6250, -2.0938,  3.3281, -2.1562, -1.9141, -2.4844,  1.3047,  2.0781, -3.1406, -2.4688,  2.2188,  2.1719, -3.2656, -2.9375, -2.7344, -2.9219,
         2.7031, -2.4688, -3.1250,  2.1094,  2.3125,  1.4297, -1.9062, -0.6758,  0.2305,  3.0156,  2.4062, -2.4844, -1.3516, -3.0625,  2.5781,  2.8594, -2.6094, -2.1250,  2.7344,  2.2500, -3.0156, -3.0469, -3.3438,  2.5469,  2.1094,  3.0469,  3.3906,  2.1875,  2.8906,  1.9141, -2.8438, -2.0000],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000, -67.0000, -48.5000, -49.2500, -43.0000, -44.2500, -55.0000, -54.0000, -42.5000, -57.2500, -42.7500, -47.0000, -53.2500, -42.0000, -59.0000],
        [  0.0000, -45.7500, -33.0000, -33.7500, -29.7500, -30.0000, -37.5000, -36.7500, -29.0000, -39.0000, -29.2500, -32.2500, -36.0000, -28.8750, -40.7500],
        [  0.0000, -46.7500, -33.7500, -34.5000, -30.3750, -30.7500, -38.5000, -37.7500, -29.6250, -40.0000, -29.8750, -33.0000, -37.0000, -29.5000, -41.7500],
        [  0.0000, -40.5000, -29.5000, -30.0000, -25.5000, -27.3750, -33.7500, -32.2500, -25.7500, -34.7500, -26.5000, -28.6250, -32.0000, -25.6250, -35.5000],
        [  0.0000, -48.0000, -34.5000, -35.0000, -31.5000, -32.0000, -39.5000, -38.5000, -31.1250, -40.7500, -31.3750, -33.2500, -38.0000, -31.0000, -42.0000],
        [  0.0000, -50.5000, -36.5000, -37.2500, -33.0000, -33.7500, -42.0000, -40.2500, -32.5000, -43.0000, -33.0000, -35.7500, -39.7500, -32.5000, -45.0000],
        [  0.0000, -53.7500, -39.0000, -39.7500, -34.0000, -35.5000, -43.7500, -43.7500, -33.5000, -46.2500, -33.7500, -38.0000, -43.0000, -33.2500, -47.5000],
        [  0.0000, -43.0000, -31.0000, -31.5000, -28.0000, -29.3750, -35.7500, -34.5000, -28.1250, -36.7500, -28.6250, -30.0000, -34.2500, -28.0000, -37.5000],
        [  0.0000, -56.0000, -40.5000, -41.2500, -36.0000, -36.7500, -45.7500, -45.2500, -35.2500, -48.0000, -35.5000, -39.5000, -44.5000, -35.0000, -49.5000],
        [  0.0000, -47.0000, -33.5000, -34.2500, -31.0000, -31.6250, -38.7500, -37.5000, -30.8750, -39.7500, -31.1250, -32.5000, -37.2500, -30.7500, -41.0000],
        [  0.0000, -44.5000, -32.5000, -33.0000, -28.7500, -29.1250, -36.7500, -36.0000, -28.0000, -38.0000, -28.3750, -31.6250, -35.0000, -27.8750, -39.7500],
        [  0.0000, -55.2500, -39.7500, -40.5000, -35.0000, -36.5000, -45.0000, -44.7500, -34.7500, -47.5000, -35.0000, -38.7500, -44.2500, -34.5000, -48.5000],
        [  0.0000, -43.0000, -30.8750, -31.5000, -27.8750, -29.2500, -35.5000, -34.2500, -28.1250, -36.7500, -28.5000, -29.8750, -34.2500, -28.0000, -37.2500],
        [  0.0000, -58.5000, -42.5000, -43.2500, -37.7500, -38.2500, -48.0000, -47.2500, -36.7500, -50.0000, -37.2500, -41.5000, -46.2500, -36.5000, -52.2500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3633, 0.6367, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2676, 0.5078, 0.2236, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2158, 0.4414, 0.1846, 0.1582, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1729, 0.1797, 0.1807, 0.1963, 0.2715, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1875, 0.2314, 0.1235, 0.1196, 0.1807, 0.1582, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1650, 0.1040, 0.1191, 0.0903, 0.0311, 0.0498, 0.4414, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1157, 0.1660, 0.0850, 0.0830, 0.1436, 0.0972, 0.0742, 0.2363, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0938, 0.1060, 0.0815, 0.0898, 0.1602, 0.1279, 0.0508, 0.1221, 0.1689, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0928, 0.1582, 0.0674, 0.0601, 0.0718, 0.0781, 0.0913, 0.2246, 0.0564, 0.0996, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0928, 0.1123, 0.0679, 0.0684, 0.0962, 0.0908, 0.0688, 0.1484, 0.0864, 0.0986, 0.0688, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0752, 0.1562, 0.0679, 0.0593, 0.0479, 0.0603, 0.0908, 0.2148, 0.0356, 0.0913, 0.0342, 0.0659, 0.0000, 0.0000, 0.0000],
        [0.0708, 0.0903, 0.0505, 0.0515, 0.1045, 0.0674, 0.0396, 0.1260, 0.0845, 0.0752, 0.0549, 0.0522, 0.1338, 0.0000, 0.0000],
        [0.0557, 0.0679, 0.0488, 0.0535, 0.0947, 0.0776, 0.0303, 0.0796, 0.0996, 0.0723, 0.0732, 0.0476, 0.0986, 0.1006, 0.0000],
        [0.0522, 0.1147, 0.0439, 0.0410, 0.0530, 0.0439, 0.0425, 0.1660, 0.0359, 0.0645, 0.0264, 0.0459, 0.1396, 0.0309, 0.0996]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0128,  0.0183,  0.0046,  ..., -0.0280,  0.0023, -0.0516],
        [-0.0200, -0.0158, -0.0184,  ..., -0.0060,  0.0175,  0.0007],
        [-0.0307, -0.0122,  0.0405,  ..., -0.0236, -0.0212, -0.0256],
        ...,
        [-0.0005, -0.0266, -0.0020,  ..., -0.0220, -0.0150, -0.0371],
        [-0.0178, -0.0407, -0.0166,  ..., -0.0149, -0.0105,  0.0135],
        [-0.0163,  0.0229,  0.0243,  ..., -0.0230, -0.0162, -0.0081]], device='cuda:0', requires_grad=True)
K: tensor([-0.3242,  0.4766, -0.0554, -0.4375,  0.1787, -0.0023, -0.2734, -0.3184, -0.5781,  0.1279, -0.2871,  0.4336,  0.1699, -0.3574,  0.5000, -0.5664, -0.3398,  0.0554, -0.1592,  0.7344, -0.2119,  0.0962,  0.5078,  0.1758,  0.7656, -0.4609,  0.2754,  0.0305,  0.4004,  0.5039,  0.7344, -0.1904,
        -0.9414, -0.2793, -0.0420,  0.1455,  0.9844,  1.2031, -0.4531,  0.7109, -0.2051,  0.2852, -0.5391,  0.4141, -0.1670,  0.0791, -0.5039,  0.4316, -0.5781, -0.0874, -0.4258,  0.0835, -0.7539,  0.3438,  0.5781,  0.5352, -0.1270,  1.0938, -0.4473, -0.1406,  0.2480, -0.2852,  0.0374,  0.7383],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0168,  0.0033,  0.0155,  ...,  0.0306, -0.0137, -0.0248],
        [ 0.0202, -0.0237,  0.0216,  ..., -0.0127, -0.0050,  0.0300],
        [-0.0225,  0.0134,  0.0448,  ...,  0.0225,  0.0254, -0.0048],
        ...,
        [ 0.0060,  0.0022, -0.0363,  ..., -0.0074, -0.0090,  0.0053],
        [-0.0020,  0.0295, -0.0148,  ...,  0.0279,  0.0100, -0.0246],
        [-0.0082,  0.0041, -0.0078,  ...,  0.0039,  0.0040, -0.0113]], device='cuda:0', requires_grad=True)
Q: tensor([     0.1338,      0.4512,      0.4824,     -0.7695,      0.6367,     -0.0801,     -0.0708,     -0.6562,     -0.9609,     -0.7773,     -0.2471,     -0.4453,      0.2598,     -0.1650,     -0.7617,     -0.9141,     -0.1592,      0.4141,      0.4512,     -0.3457,     -0.1270,      0.8945,
             0.0737,      0.7773,      0.6523,     -0.9023,     -0.7539,      0.0583,      0.0009,     -0.5938,      0.4199,      0.6484,      0.2490,      0.4355,     -0.1416,      0.8672,      0.4141,      0.5820,      0.0211,     -0.4590,      0.0228,     -0.4551,     -0.6758,     -0.5898,
            -0.0527,     -0.0586,     -0.0771,     -0.0737,      0.2461,      0.3418,     -0.0376,     -0.0718,     -0.3828,     -0.4395,      0.5000,      0.6562,     -0.4785,      1.3750,      0.6055,      0.0322,      0.7422,     -0.0454,     -0.8398,      0.6914], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.5586, -0.3965, -0.4766, -0.0056, -0.2754, -0.2754,  1.0156, -0.4102,  0.0513, -0.7930, -0.4062,  0.9219, -0.5742,  0.1543],
        [ 0.0000,  0.6445, -0.1787, -0.3516, -0.6680, -0.3770,  0.3047,  1.0000, -1.0078,  0.0952, -1.0078, -0.2354,  0.7539, -1.1797,  0.4590],
        [ 0.0000,  0.7148, -0.1562, -0.3105, -0.5508, -0.2617,  0.2500,  1.0469, -0.8477,  0.1553, -0.8672, -0.2207,  0.8359, -1.0156,  0.4531],
        [ 0.0000,  0.0398,  0.0422,  0.1289,  0.4492,  0.2637, -0.4883,  0.1128,  0.5000,  0.2461,  0.2871,  0.0540,  0.2617,  0.5430, -0.1455],
        [ 0.0000,  0.2129, -0.4160, -0.4492, -0.0376, -0.1689, -0.2969,  0.5859, -0.2334, -0.0076, -0.4922, -0.4531,  0.6250, -0.3281, -0.2412],
        [ 0.0000, -0.4648, -0.3262, -0.6055, -1.6719, -1.1953,  0.9805, -0.1797, -2.0781, -0.6641, -1.7109, -0.3516, -0.5820, -2.2656,  0.0430],
        [ 0.0000,  0.3613, -0.3047, -0.3301,  0.2188, -0.1748, -0.4453,  0.7148, -0.0938,  0.0510, -0.4941, -0.2617,  0.6719, -0.1992,  0.1270],
        [ 0.0000,  0.1201, -0.1387, -0.0437,  0.5312,  0.3066, -0.6133,  0.2637,  0.5859,  0.2139,  0.2910, -0.1533,  0.4805,  0.6055, -0.3184],
        [ 0.0000,  0.5312, -0.3223, -0.4375, -0.2559, -0.1709, -0.0173,  0.8828, -0.4980,  0.0688, -0.6523, -0.3828,  0.7969, -0.6445,  0.1270],
        [ 0.0000,  0.1885, -0.3125, -0.3086,  0.0366, -0.0217, -0.3027,  0.4688, -0.0703,  0.0601, -0.2988, -0.3555,  0.5703, -0.1416, -0.2539],
        [ 0.0000,  0.7344, -0.0981, -0.2334, -0.4473, -0.2207,  0.1885,  1.0469, -0.7422,  0.1982, -0.7812, -0.1299,  0.8281, -0.8945,  0.5742],
        [ 0.0000,  0.2422, -0.3398, -0.3184,  0.3848, -0.0552, -0.5898,  0.5703,  0.1709,  0.0566, -0.2598, -0.3066,  0.6289,  0.1030, -0.1201],
        [ 0.0000,  0.1973, -0.1318, -0.0400,  0.5312,  0.3359, -0.6094,  0.3594,  0.5820,  0.2598,  0.2773, -0.1543,  0.5742,  0.5938, -0.2812],
        [ 0.0000,  0.7891, -0.1709, -0.2373,  0.0166, -0.1699, -0.2061,  1.1562, -0.3750,  0.2109, -0.6836, -0.1270,  0.9844, -0.5273,  0.6445]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3161],
        [0.1524],
        [0.1124],
        [0.2068],
        [0.1271],
        [0.1074],
        [0.1104],
        [0.1331],
        [0.0568],
        [0.0982],
        [0.0447],
        [0.0689],
        [0.0962],
        [0.0482]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0024,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0008,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0004,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1226,     0.1787,     0.2617,     0.1943,     0.0148,     0.0312,     0.1953,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1221,     0.0000,     0.0001,     0.0000,     0.0001,     0.0000,     0.8789,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0021,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.9961,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0259,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.9727,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0042,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.9961,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0034,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.9961,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0049,     0.0596,     0.0008,     0.0010,     0.0625,     0.1348,     0.0010,     0.0339,     0.4004,     0.0096,     0.1914,     0.0006,     0.0991,     0.0000,     0.0000],
        [    0.0000,     0.0011,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.5664,     0.0000,     0.0000,     0.0000,     0.0000,     0.4316,     0.0000,     0.0000],
        [    0.0008,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0289, -0.0236,  0.0054,  ..., -0.0079,  0.0091, -0.0211],
        [ 0.0007, -0.0356,  0.0051,  ...,  0.0004,  0.0190, -0.0025],
        [-0.0228,  0.0136, -0.0258,  ..., -0.0050, -0.0204,  0.0024],
        ...,
        [ 0.0361, -0.0030, -0.0354,  ...,  0.0032, -0.0166,  0.0213],
        [-0.0136,  0.0092,  0.0093,  ...,  0.0353, -0.0253,  0.0111],
        [-0.0343, -0.0012, -0.0334,  ...,  0.0175,  0.0298,  0.0294]], device='cuda:0', requires_grad=True)
K: tensor([-1.9375, -0.5664, -0.1216,  0.2207,  1.9609,  3.2500,  4.2188,  2.7500,  1.2109,  0.1748, -1.3438,  2.9375, -2.5156,  0.6719,  1.8984,  0.3770, -0.7891,  2.8594,  0.3516, -2.5000, -1.9453,  3.5000, -3.7188,  1.8516,  3.4219,  3.0000, -0.3340,  1.3203, -0.4609, -3.3594,  0.1533, -0.0112,
        -0.0884,  0.7070,  0.3516,  2.7031, -0.3848, -1.6016, -2.7656,  2.1250,  1.6484, -1.9609,  0.9219, -1.8828,  3.0625, -2.4844,  1.0547, -1.7109,  2.7188,  2.3125,  2.9844, -1.5625, -1.2812, -2.3750, -1.7812,  2.2969,  2.0000, -0.6562, -2.7031,  1.8516, -2.0156, -3.4844,  3.6094, -2.2188],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0068, -0.0251, -0.0076,  ..., -0.0162, -0.0121, -0.0047],
        [ 0.0094, -0.0074,  0.0010,  ...,  0.0181, -0.0267,  0.0331],
        [ 0.0207, -0.0173,  0.0037,  ...,  0.0034, -0.0262, -0.0115],
        ...,
        [ 0.0102, -0.0314, -0.0107,  ...,  0.0272,  0.0187, -0.0005],
        [ 0.0006, -0.0055,  0.0111,  ...,  0.0062,  0.0230,  0.0066],
        [-0.0015, -0.0136,  0.0021,  ...,  0.0245, -0.0063, -0.0358]], device='cuda:0', requires_grad=True)
Q: tensor([ 3.2812,  2.0469, -0.8281,  2.2188, -2.5312, -3.9219, -4.1875, -3.4219, -2.8750, -0.2148,  2.8438, -3.0312,  2.5781, -1.7891, -2.7188, -3.2344,  1.3359, -3.5000, -2.0625,  3.2344,  3.8906, -3.3281,  4.8438, -1.2969, -2.6562, -3.8281, -2.0000, -0.7578, -2.3750,  3.4062, -2.3281, -0.7578,
        -2.2500,  1.6328, -1.6250, -3.0469,  2.4062,  1.8516,  3.9062, -2.8750, -1.4062,  2.6719, -1.5938,  2.9062, -3.9062,  3.3594, -2.1094,  1.9219, -3.8594, -2.6250, -3.9531,  3.0469,  1.9844,  1.6875,  2.5938, -3.7344, -2.2031, -0.1729,  3.6875, -3.2188,  2.6094,  3.8594, -2.9844,  1.8750],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -6.0312,     -4.2188,     -4.6875,     -0.6133,     -1.5000,      0.3672,     -8.2500,     -0.9375,     -7.7188,      0.2324,     -5.2188,     -6.8125,     -0.7500,     -8.0625],
        [     0.0000,    -28.0000,     -7.0938,     -9.8750,    -14.7500,    -18.8750,      4.9688,    -34.5000,    -21.7500,    -28.5000,    -15.1875,    -10.7500,    -34.0000,    -21.1250,    -22.8750],
        [     0.0000,    -29.3750,     -7.7188,    -10.6250,    -15.5000,    -19.8750,      4.8125,    -36.5000,    -22.7500,    -30.1250,    -15.9375,    -11.6875,    -35.7500,    -22.1250,    -24.3750],
        [     0.0000,     22.6250,      4.0625,      5.9062,      8.8750,     12.4375,     -7.1250,     25.7500,     14.8750,     19.7500,      8.9375,      5.2188,     25.3750,     14.1875,     14.6875],
        [     0.0000,     26.1250,      4.1562,      6.3438,     12.3125,     17.2500,     -6.4375,     30.0000,     20.1250,     23.2500,     13.8125,      5.6562,     30.3750,     19.5000,     16.2500],
        [     0.0000,      0.3770,      0.7617,      0.4629,     -2.1094,     -1.3672,      0.4668,     -0.1157,     -2.1094,     -0.3164,     -1.9141,      0.0522,     -0.5352,     -2.1562,     -0.1240],
        [     0.0000,    -18.0000,     -7.1250,     -8.7500,     -7.1562,     -9.9375,      1.9766,    -23.0000,    -10.6250,    -19.7500,     -6.6562,     -9.5625,    -21.3750,    -10.1250,    -17.3750],
        [     0.0000,     37.7500,      6.9688,     10.1875,     16.8750,     23.2500,     -9.8750,     44.0000,     27.3750,     34.2500,     17.8750,      9.5625,     43.7500,     26.3750,     25.3750],
        [     0.0000,    -27.1250,     -8.7500,    -11.3750,    -12.9375,    -16.7500,      3.6250,    -34.2500,    -18.8750,    -28.7500,    -12.6875,    -12.6250,    -32.7500,    -18.1250,    -24.3750],
        [     0.0000,     34.7500,      6.2812,      9.1875,     15.4375,     21.7500,     -8.6875,     40.2500,     25.3750,     31.3750,     16.8750,      8.4375,     40.2500,     24.5000,     22.6250],
        [     0.0000,    -38.2500,    -10.1250,    -13.8750,    -20.5000,    -26.2500,      5.6875,    -47.5000,    -30.0000,    -39.2500,    -21.3750,    -15.3125,    -46.5000,    -29.2500,    -31.7500],
        [     0.0000,      2.5000,     -1.8203,     -1.5781,      2.5469,      3.3125,     -1.5781,      1.9375,      4.4062,      0.6758,      3.6562,     -2.0781,      3.0000,      4.3750,     -1.2500],
        [     0.0000,     38.2500,      7.1250,     10.3750,     16.8750,     23.3750,     -9.8125,     44.2500,     27.5000,     34.7500,     18.0000,      9.6875,     44.0000,     26.3750,     25.6250],
        [     0.0000,    -51.2500,    -14.9375,    -19.7500,    -25.3750,    -33.5000,      7.0938,    -63.7500,    -37.7500,    -53.0000,    -26.2500,    -21.6250,    -62.0000,    -36.5000,    -43.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5168],
        [0.5200],
        [0.4958],
        [0.1580],
        [0.2020],
        [0.3437],
        [0.1680],
        [0.0982],
        [0.1947],
        [0.1311],
        [0.2269],
        [0.1069],
        [0.0792],
        [0.2713]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( of:0.1670 a:0.1260,:0.0598 and:0.0508ic:0.0074,:0.1875 a:0.0889.:0.0593)
.
------
		( a:0.1260,:0.0598 and:0.0508ic:0.0074,:0.1875 a:0.0889.:0.0593
:0.2158)

-in, and the
-
-
-
-

@ 1550 train 6.4332 , allloss: 6.4481, dt: 1675.05ms, fracRes: 0.5513, norm(attn): 0.0684, norm(output): 0.5312, norm(x): 1.3218, norm(y): 1.0038, norm:1.1588, tok/sec: 78249.55, flops:68.52, batch-reuse:1
@ 1551 train 6.4390 , allloss: 6.4540, dt: 1236.55ms, fracRes: 0.5422, norm(attn): 0.0737, norm(output): 0.5312, norm(x): 1.3064, norm(y): 1.0037, norm:1.1091, tok/sec: 105997.76, flops:92.82, batch-reuse:1
@ 1552 train 6.3589 , allloss: 6.3729, dt: 1278.56ms, fracRes: 0.5417, norm(attn): 0.0718, norm(output): 0.5352, norm(x): 1.3104, norm(y): 1.0038, norm:1.1248, tok/sec: 102515.01, flops:89.77, batch-reuse:1
@ 1553 train 6.4112 , allloss: 6.4260, dt: 1272.48ms, fracRes: 0.5437, norm(attn): 0.0713, norm(output): 0.5352, norm(x): 1.3116, norm(y): 1.0037, norm:1.2177, tok/sec: 103005.12, flops:90.20, batch-reuse:1
@ 1554 train 6.4216 , allloss: 6.4355, dt: 1272.81ms, fracRes: 0.5415, norm(attn): 0.0708, norm(output): 0.5352, norm(x): 1.3080, norm(y): 1.0037, norm:1.1587, tok/sec: 102978.55, flops:90.18, batch-reuse:1
@ 1555 train 6.4210 , allloss: 6.4352, dt: 1301.05ms, fracRes: 0.5423, norm(attn): 0.0718, norm(output): 0.5312, norm(x): 1.3064, norm(y): 1.0037, norm:0.8932, tok/sec: 100743.36, flops:88.22, batch-reuse:1
@ 1556 train 6.4351 , allloss: 6.4496, dt: 1266.82ms, fracRes: 0.5424, norm(attn): 0.0713, norm(output): 0.5312, norm(x): 1.3118, norm(y): 1.0037, norm:0.8651, tok/sec: 103465.02, flops:90.60, batch-reuse:1
@ 1557 train 6.4296 , allloss: 6.4436, dt: 1268.30ms, fracRes: 0.5431, norm(attn): 0.0713, norm(output): 0.5312, norm(x): 1.3082, norm(y): 1.0037, norm:1.0354, tok/sec: 103344.80, flops:90.50, batch-reuse:1
@ 1558 train 6.3687 , allloss: 6.3825, dt: 1306.48ms, fracRes: 0.5442, norm(attn): 0.0718, norm(output): 0.5312, norm(x): 1.3072, norm(y): 1.0037, norm:1.0820, tok/sec: 100324.40, flops:87.85, batch-reuse:1
@ 1559 train 6.4271 , allloss: 6.4408, dt: 1275.55ms, fracRes: 0.5467, norm(attn): 0.0708, norm(output): 0.5312, norm(x): 1.3093, norm(y): 1.0038, norm:1.0854, tok/sec: 102757.64, flops:89.98, batch-reuse:1
@ 1560 train 6.4591 , allloss: 6.4727, dt: 1261.22ms, fracRes: 0.5453, norm(attn): 0.0708, norm(output): 0.5312, norm(x): 1.3082, norm(y): 1.0038, norm:0.8468, tok/sec: 103925.11, flops:91.01, batch-reuse:1
@ 1561 train 6.4557 , allloss: 6.4699, dt: 1246.16ms, fracRes: 0.5451, norm(attn): 0.0708, norm(output): 0.5273, norm(x): 1.3045, norm(y): 1.0038, norm:0.8288, tok/sec: 105180.55, flops:92.11, batch-reuse:1
@ 1562 train 6.4026 , allloss: 6.4168, dt: 1266.08ms, fracRes: 0.5415, norm(attn): 0.0732, norm(output): 0.5312, norm(x): 1.2953, norm(y): 1.0038, norm:0.8066, tok/sec: 103525.91, flops:90.66, batch-reuse:1
@ 1563 train 6.4513 , allloss: 6.4654, dt: 1269.64ms, fracRes: 0.5409, norm(attn): 0.0747, norm(output): 0.5312, norm(x): 1.2963, norm(y): 1.0038, norm:0.9176, tok/sec: 103235.31, flops:90.40, batch-reuse:1
@ 1564 train 6.4459 , allloss: 6.4601, dt: 1282.05ms, fracRes: 0.5426, norm(attn): 0.0723, norm(output): 0.5312, norm(x): 1.2969, norm(y): 1.0038, norm:0.8855, tok/sec: 102236.65, flops:89.53, batch-reuse:1
@ 1565 train 6.4147 , allloss: 6.4294, dt: 1268.84ms, fracRes: 0.5472, norm(attn): 0.0713, norm(output): 0.5312, norm(x): 1.3045, norm(y): 1.0037, norm:1.1795, tok/sec: 103300.84, flops:90.46, batch-reuse:1
@ 1566 train 6.4882 , allloss: 6.5036, dt: 1239.76ms, fracRes: 0.5509, norm(attn): 0.0703, norm(output): 0.5234, norm(x): 1.3090, norm(y): 1.0038, norm:1.1105, tok/sec: 105724.02, flops:92.58, batch-reuse:1
@ 1567 train 6.4075 , allloss: 6.4215, dt: 1273.71ms, fracRes: 0.5500, norm(attn): 0.0693, norm(output): 0.5234, norm(x): 1.3096, norm(y): 1.0038, norm:1.0360, tok/sec: 102905.40, flops:90.11, batch-reuse:1
@ 1568 train 6.4042 , allloss: 6.4179, dt: 1293.44ms, fracRes: 0.5451, norm(attn): 0.0713, norm(output): 0.5273, norm(x): 1.2971, norm(y): 1.0038, norm:0.9249, tok/sec: 101335.85, flops:88.74, batch-reuse:1
@ 1569 train 6.3339 , allloss: 6.3482, dt: 1301.70ms, fracRes: 0.5410, norm(attn): 0.0728, norm(output): 0.5273, norm(x): 1.2871, norm(y): 1.0038, norm:1.2701, tok/sec: 100693.02, flops:88.18, batch-reuse:1
@ 1570 train 6.3445 , allloss: 6.3588, dt: 1297.59ms, fracRes: 0.5414, norm(attn): 0.0737, norm(output): 0.5273, norm(x): 1.2847, norm(y): 1.0038, norm:0.7639, tok/sec: 101011.76, flops:88.45, batch-reuse:1
@ 1571 train 6.4223 , allloss: 6.4370, dt: 1297.10ms, fracRes: 0.5460, norm(attn): 0.0713, norm(output): 0.5234, norm(x): 1.2932, norm(y): 1.0038, norm:1.1150, tok/sec: 101049.71, flops:88.49, batch-reuse:1
@ 1572 train 6.4287 , allloss: 6.4441, dt: 1297.05ms, fracRes: 0.5507, norm(attn): 0.0708, norm(output): 0.5117, norm(x): 1.3021, norm(y): 1.0038, norm:0.7641, tok/sec: 101053.80, flops:88.49, batch-reuse:1
@ 1573 train 6.4606 , allloss: 6.4764, dt: 1275.60ms, fracRes: 0.5533, norm(attn): 0.0708, norm(output): 0.5156, norm(x): 1.3053, norm(y): 1.0038, norm:0.8688, tok/sec: 102753.20, flops:89.98, batch-reuse:1
@ 1574 train 6.4403 , allloss: 6.4549, dt: 1259.98ms, fracRes: 0.5520, norm(attn): 0.0698, norm(output): 0.5156, norm(x): 1.3065, norm(y): 1.0038, norm:0.9649, tok/sec: 104027.43, flops:91.10, batch-reuse:1
@ 1575 train 6.3783 , allloss: 6.3930, dt: 1245.83ms, fracRes: 0.5479, norm(attn): 0.0713, norm(output): 0.5234, norm(x): 1.2953, norm(y): 1.0038, norm:0.6719, tok/sec: 105208.35, flops:92.13, batch-reuse:1
@ 1576 train 6.4205 , allloss: 6.4353, dt: 1248.80ms, fracRes: 0.5457, norm(attn): 0.0737, norm(output): 0.5234, norm(x): 1.2900, norm(y): 1.0038, norm:0.9456, tok/sec: 104958.48, flops:91.91, batch-reuse:1
@ 1577 train 6.2514 , allloss: 6.2656, dt: 1257.91ms, fracRes: 0.5453, norm(attn): 0.0723, norm(output): 0.5234, norm(x): 1.2960, norm(y): 1.0038, norm:0.7113, tok/sec: 104198.51, flops:91.25, batch-reuse:1
@ 1578 train 6.4162 , allloss: 6.4309, dt: 1265.99ms, fracRes: 0.5513, norm(attn): 0.0708, norm(output): 0.5078, norm(x): 1.2980, norm(y): 1.0038, norm:1.1737, tok/sec: 103533.24, flops:90.66, batch-reuse:1
@ 1579 train 6.2716 , allloss: 6.2860, dt: 1261.83ms, fracRes: 0.5534, norm(attn): 0.0693, norm(output): 0.5078, norm(x): 1.3045, norm(y): 1.0039, norm:1.3350, tok/sec: 103874.17, flops:90.96, batch-reuse:1
@ 1580 train 6.3298 , allloss: 6.3446, dt: 1245.04ms, fracRes: 0.5527, norm(attn): 0.0688, norm(output): 0.5078, norm(x): 1.3007, norm(y): 1.0039, norm:0.7015, tok/sec: 105274.95, flops:92.19, batch-reuse:1
@ 1581 train 6.3066 , allloss: 6.3216, dt: 1264.88ms, fracRes: 0.5490, norm(attn): 0.0728, norm(output): 0.5156, norm(x): 1.2929, norm(y): 1.0038, norm:1.1565, tok/sec: 103623.75, flops:90.74, batch-reuse:1
@ 1582 train 6.3366 , allloss: 6.3515, dt: 1258.36ms, fracRes: 0.5435, norm(attn): 0.0752, norm(output): 0.5195, norm(x): 1.2848, norm(y): 1.0038, norm:1.4027, tok/sec: 104160.60, flops:91.21, batch-reuse:1
@ 1583 train 6.2996 , allloss: 6.3146, dt: 1273.56ms, fracRes: 0.5435, norm(attn): 0.0732, norm(output): 0.5117, norm(x): 1.2813, norm(y): 1.0038, norm:1.0970, tok/sec: 102917.72, flops:90.12, batch-reuse:1
@ 1584 train 6.2832 , allloss: 6.2979, dt: 1259.38ms, fracRes: 0.5448, norm(attn): 0.0713, norm(output): 0.5195, norm(x): 1.2863, norm(y): 1.0038, norm:0.8561, tok/sec: 104076.50, flops:91.14, batch-reuse:1
@ 1585 train 6.3304 , allloss: 6.3458, dt: 1254.06ms, fracRes: 0.5480, norm(attn): 0.0708, norm(output): 0.5078, norm(x): 1.2894, norm(y): 1.0038, norm:1.0011, tok/sec: 104518.28, flops:91.53, batch-reuse:1
@ 1586 train 6.3532 , allloss: 6.3679, dt: 1275.34ms, fracRes: 0.5459, norm(attn): 0.0708, norm(output): 0.5078, norm(x): 1.2813, norm(y): 1.0038, norm:2.9304, tok/sec: 102773.98, flops:90.00, batch-reuse:1
@ 1587 train 6.3520 , allloss: 6.3679, dt: 1277.06ms, fracRes: 0.5447, norm(attn): 0.0732, norm(output): 0.5078, norm(x): 1.2830, norm(y): 1.0038, norm:1.0664, tok/sec: 102635.66, flops:89.88, batch-reuse:1
@ 1588 train 6.4288 , allloss: 6.4439, dt: 1286.28ms, fracRes: 0.5470, norm(attn): 0.0718, norm(output): 0.5078, norm(x): 1.2839, norm(y): 1.0038, norm:4.4535, tok/sec: 101899.98, flops:89.23, batch-reuse:1
@ 1589 train 6.3816 , allloss: 6.3961, dt: 1265.84ms, fracRes: 0.5477, norm(attn): 0.0698, norm(output): 0.5078, norm(x): 1.2853, norm(y): 1.0038, norm:2.3095, tok/sec: 103545.41, flops:90.67, batch-reuse:1
@ 1590 train 6.3953 , allloss: 6.4098, dt: 1258.14ms, fracRes: 0.5476, norm(attn): 0.0703, norm(output): 0.5078, norm(x): 1.2846, norm(y): 1.0038, norm:1.8065, tok/sec: 104179.41, flops:91.23, batch-reuse:1
@ 1591 train 6.3277 , allloss: 6.3422, dt: 1270.25ms, fracRes: 0.5473, norm(attn): 0.0713, norm(output): 0.5117, norm(x): 1.2868, norm(y): 1.0038, norm:1.6862, tok/sec: 103185.81, flops:90.36, batch-reuse:1
@ 1592 train 6.3572 , allloss: 6.3719, dt: 1287.53ms, fracRes: 0.5520, norm(attn): 0.0713, norm(output): 0.5078, norm(x): 1.2957, norm(y): 1.0039, norm:1.7194, tok/sec: 101801.13, flops:89.15, batch-reuse:1
@ 1593 train 6.3736 , allloss: 6.3883, dt: 1244.95ms, fracRes: 0.5532, norm(attn): 0.0698, norm(output): 0.5039, norm(x): 1.2983, norm(y): 1.0039, norm:1.5526, tok/sec: 105282.90, flops:92.19, batch-reuse:1
@ 1594 train 6.2813 , allloss: 6.2969, dt: 1263.90ms, fracRes: 0.5481, norm(attn): 0.0728, norm(output): 0.5078, norm(x): 1.2886, norm(y): 1.0039, norm:1.4897, tok/sec: 103704.44, flops:90.81, batch-reuse:1
@ 1595 train 6.4132 , allloss: 6.4304, dt: 1281.37ms, fracRes: 0.5459, norm(attn): 0.0762, norm(output): 0.5078, norm(x): 1.2800, norm(y): 1.0038, norm:1.1237, tok/sec: 102290.20, flops:89.57, batch-reuse:1
@ 1596 train 6.2925 , allloss: 6.3073, dt: 1267.66ms, fracRes: 0.5485, norm(attn): 0.0737, norm(output): 0.5078, norm(x): 1.2877, norm(y): 1.0039, norm:0.9328, tok/sec: 103397.03, flops:90.54, batch-reuse:1
@ 1597 train 6.3510 , allloss: 6.3659, dt: 1281.04ms, fracRes: 0.5557, norm(attn): 0.0708, norm(output): 0.5039, norm(x): 1.3014, norm(y): 1.0038, norm:0.9096, tok/sec: 102316.66, flops:89.60, batch-reuse:1
@ 1598 train 6.4057 , allloss: 6.4215, dt: 1280.51ms, fracRes: 0.5589, norm(attn): 0.0703, norm(output): 0.5039, norm(x): 1.3015, norm(y): 1.0038, norm:0.9375, tok/sec: 102358.88, flops:89.63, batch-reuse:1
@ 1599 train 6.4137 , allloss: 6.4298, dt: 1290.59ms, fracRes: 0.5545, norm(attn): 0.0713, norm(output): 0.5039, norm(x): 1.2897, norm(y): 1.0038, norm:0.9117, tok/sec: 101559.62, flops:88.93, batch-reuse:1
@ 1600 train 6.3215 , allloss: 6.3378, dt: 1313.26ms, fracRes: 0.5482, norm(attn): 0.0752, norm(output): 0.5078, norm(x): 1.2822, norm(y): 1.0038, norm:1.0037, tok/sec: 99806.64, flops:87.40, batch-reuse:1
@ 1601 train 6.3875 , allloss: 6.4029, dt: 1274.49ms, fracRes: 0.5472, norm(attn): 0.0762, norm(output): 0.5078, norm(x): 1.2872, norm(y): 1.0038, norm:0.8301, tok/sec: 102843.00, flops:90.06, batch-reuse:1
@ 1602 train 6.3259 , allloss: 6.3409, dt: 1276.47ms, fracRes: 0.5483, norm(attn): 0.0747, norm(output): 0.5078, norm(x): 1.2889, norm(y): 1.0038, norm:0.8501, tok/sec: 102683.38, flops:89.92, batch-reuse:1
@ 1603 train 6.2885 , allloss: 6.3030, dt: 1242.40ms, fracRes: 0.5537, norm(attn): 0.0703, norm(output): 0.5039, norm(x): 1.2956, norm(y): 1.0039, norm:1.2802, tok/sec: 105498.96, flops:92.38, batch-reuse:1
@ 1604 train 6.3163 , allloss: 6.3317, dt: 1260.67ms, fracRes: 0.5575, norm(attn): 0.0708, norm(output): 0.5000, norm(x): 1.2996, norm(y): 1.0039, norm:0.9187, tok/sec: 103970.27, flops:91.05, batch-reuse:1
@ 1605 train 6.3513 , allloss: 6.3669, dt: 1280.56ms, fracRes: 0.5583, norm(attn): 0.0688, norm(output): 0.5000, norm(x): 1.3049, norm(y): 1.0039, norm:1.3314, tok/sec: 102355.01, flops:89.63, batch-reuse:1
@ 1606 train 6.3042 , allloss: 6.3200, dt: 1255.08ms, fracRes: 0.5551, norm(attn): 0.0703, norm(output): 0.5000, norm(x): 1.2972, norm(y): 1.0038, norm:0.9013, tok/sec: 104433.22, flops:91.45, batch-reuse:1
@ 1607 train 6.3318 , allloss: 6.3467, dt: 1286.05ms, fracRes: 0.5523, norm(attn): 0.0723, norm(output): 0.5039, norm(x): 1.2897, norm(y): 1.0038, norm:1.0129, tok/sec: 101918.33, flops:89.25, batch-reuse:1
@ 1608 train 6.3772 , allloss: 6.3928, dt: 1250.99ms, fracRes: 0.5458, norm(attn): 0.0762, norm(output): 0.5078, norm(x): 1.2813, norm(y): 1.0038, norm:1.1102, tok/sec: 104774.99, flops:91.75, batch-reuse:1
@ 1609 train 6.3581 , allloss: 6.3733, dt: 1274.52ms, fracRes: 0.5471, norm(attn): 0.0752, norm(output): 0.5078, norm(x): 1.2866, norm(y): 1.0038, norm:1.3654, tok/sec: 102840.62, flops:90.06, batch-reuse:1
@ 1610 train 6.3066 , allloss: 6.3216, dt: 1260.11ms, fracRes: 0.5526, norm(attn): 0.0718, norm(output): 0.5039, norm(x): 1.2932, norm(y): 1.0038, norm:1.0198, tok/sec: 104016.34, flops:91.09, batch-reuse:1
@ 1611 train 6.2687 , allloss: 6.2840, dt: 1274.60ms, fracRes: 0.5549, norm(attn): 0.0713, norm(output): 0.5000, norm(x): 1.2970, norm(y): 1.0039, norm:0.9573, tok/sec: 102833.77, flops:90.05, batch-reuse:1
@ 1612 train 6.3293 , allloss: 6.3442, dt: 1292.23ms, fracRes: 0.5507, norm(attn): 0.0718, norm(output): 0.5039, norm(x): 1.2857, norm(y): 1.0038, norm:0.8892, tok/sec: 101431.11, flops:88.82, batch-reuse:1
@ 1613 train 6.2958 , allloss: 6.3113, dt: 1263.92ms, fracRes: 0.5493, norm(attn): 0.0708, norm(output): 0.5039, norm(x): 1.2863, norm(y): 1.0038, norm:1.2054, tok/sec: 103702.94, flops:90.81, batch-reuse:1
@ 1614 train 6.3293 , allloss: 6.3455, dt: 1282.04ms, fracRes: 0.5483, norm(attn): 0.0742, norm(output): 0.5039, norm(x): 1.2852, norm(y): 1.0038, norm:0.8194, tok/sec: 102237.05, flops:89.53, batch-reuse:1
@ 1615 train 6.3666 , allloss: 6.3821, dt: 1287.31ms, fracRes: 0.5481, norm(attn): 0.0752, norm(output): 0.5039, norm(x): 1.2812, norm(y): 1.0038, norm:1.1265, tok/sec: 101818.66, flops:89.16, batch-reuse:1
@ 1616 train 6.3692 , allloss: 6.3854, dt: 1258.82ms, fracRes: 0.5506, norm(attn): 0.0752, norm(output): 0.5039, norm(x): 1.2844, norm(y): 1.0038, norm:1.2295, tok/sec: 104122.81, flops:91.18, batch-reuse:1
@ 1617 train 6.3375 , allloss: 6.3536, dt: 1257.68ms, fracRes: 0.5511, norm(attn): 0.0737, norm(output): 0.5000, norm(x): 1.2843, norm(y): 1.0038, norm:0.7377, tok/sec: 104217.08, flops:91.26, batch-reuse:1
@ 1618 train 6.3003 , allloss: 6.3154, dt: 1259.19ms, fracRes: 0.5493, norm(attn): 0.0737, norm(output): 0.5000, norm(x): 1.2834, norm(y): 1.0038, norm:0.8172, tok/sec: 104092.48, flops:91.15, batch-reuse:1
@ 1619 train 6.2665 , allloss: 6.2825, dt: 1250.20ms, fracRes: 0.5501, norm(attn): 0.0757, norm(output): 0.5000, norm(x): 1.2798, norm(y): 1.0038, norm:1.0972, tok/sec: 104840.56, flops:91.81, batch-reuse:1
@ 1620 train 6.2669 , allloss: 6.2831, dt: 1262.79ms, fracRes: 0.5515, norm(attn): 0.0752, norm(output): 0.5000, norm(x): 1.2781, norm(y): 1.0039, norm:0.9449, tok/sec: 103795.17, flops:90.89, batch-reuse:1
@ 1621 train 6.3194 , allloss: 6.3356, dt: 1271.46ms, fracRes: 0.5561, norm(attn): 0.0728, norm(output): 0.4980, norm(x): 1.2882, norm(y): 1.0039, norm:0.7217, tok/sec: 103087.59, flops:90.27, batch-reuse:1
@ 1622 train 6.3111 , allloss: 6.3278, dt: 1276.97ms, fracRes: 0.5581, norm(attn): 0.0723, norm(output): 0.4980, norm(x): 1.2931, norm(y): 1.0039, norm:1.0550, tok/sec: 102643.23, flops:89.88, batch-reuse:1
@ 1623 train 6.2450 , allloss: 6.2606, dt: 1262.08ms, fracRes: 0.5533, norm(attn): 0.0728, norm(output): 0.5000, norm(x): 1.2829, norm(y): 1.0039, norm:1.1796, tok/sec: 103853.80, flops:90.94, batch-reuse:1
@ 1624 train 6.1965 , allloss: 6.2119, dt: 1292.01ms, fracRes: 0.5481, norm(attn): 0.0752, norm(output): 0.5000, norm(x): 1.2755, norm(y): 1.0039, norm:1.0592, tok/sec: 101448.52, flops:88.84, batch-reuse:1
@ 1625 train 6.3388 , allloss: 6.3557, dt: 1289.13ms, fracRes: 0.5485, norm(attn): 0.0791, norm(output): 0.5000, norm(x): 1.2684, norm(y): 1.0038, norm:0.9411, tok/sec: 101674.64, flops:89.04, batch-reuse:1
@ 1626 train 6.2653 , allloss: 6.2813, dt: 1289.87ms, fracRes: 0.5533, norm(attn): 0.0737, norm(output): 0.5000, norm(x): 1.2791, norm(y): 1.0038, norm:0.8443, tok/sec: 101616.36, flops:88.98, batch-reuse:1
@ 1627 train 6.2150 , allloss: 6.2309, dt: 1278.66ms, fracRes: 0.5583, norm(attn): 0.0718, norm(output): 0.4980, norm(x): 1.2865, norm(y): 1.0039, norm:0.9958, tok/sec: 102507.48, flops:89.76, batch-reuse:1
@ 1628 train 6.1976 , allloss: 6.2135, dt: 1273.78ms, fracRes: 0.5568, norm(attn): 0.0718, norm(output): 0.4980, norm(x): 1.2808, norm(y): 1.0039, norm:1.3710, tok/sec: 102899.75, flops:90.11, batch-reuse:1
@ 1629 train 6.2096 , allloss: 6.2253, dt: 1279.59ms, fracRes: 0.5560, norm(attn): 0.0713, norm(output): 0.4961, norm(x): 1.2791, norm(y): 1.0039, norm:1.0213, tok/sec: 102432.91, flops:89.70, batch-reuse:1
@ 1630 train 6.2669 , allloss: 6.2840, dt: 1290.89ms, fracRes: 0.5508, norm(attn): 0.0767, norm(output): 0.4980, norm(x): 1.2650, norm(y): 1.0039, norm:0.8018, tok/sec: 101535.87, flops:88.91, batch-reuse:1
@ 1631 train 6.2121 , allloss: 6.2282, dt: 1259.47ms, fracRes: 0.5513, norm(attn): 0.0747, norm(output): 0.4980, norm(x): 1.2665, norm(y): 1.0039, norm:0.6784, tok/sec: 104069.37, flops:91.13, batch-reuse:1
@ 1632 train 6.2770 , allloss: 6.2927, dt: 1274.19ms, fracRes: 0.5535, norm(attn): 0.0718, norm(output): 0.4961, norm(x): 1.2702, norm(y): 1.0039, norm:0.9605, tok/sec: 102866.88, flops:90.08, batch-reuse:1
@ 1633 train 6.2292 , allloss: 6.2448, dt: 1262.33ms, fracRes: 0.5516, norm(attn): 0.0732, norm(output): 0.4980, norm(x): 1.2686, norm(y): 1.0039, norm:1.0442, tok/sec: 103833.56, flops:90.93, batch-reuse:1
@ 1634 train 6.2830 , allloss: 6.2993, dt: 1270.39ms, fracRes: 0.5522, norm(attn): 0.0747, norm(output): 0.4941, norm(x): 1.2631, norm(y): 1.0039, norm:0.8352, tok/sec: 103174.54, flops:90.35, batch-reuse:1
@ 1635 train 6.2434 , allloss: 6.2590, dt: 1284.74ms, fracRes: 0.5545, norm(attn): 0.0742, norm(output): 0.4922, norm(x): 1.2676, norm(y): 1.0039, norm:0.8232, tok/sec: 102022.33, flops:89.34, batch-reuse:1
@ 1636 train 6.2285 , allloss: 6.2436, dt: 1296.33ms, fracRes: 0.5552, norm(attn): 0.0723, norm(output): 0.4922, norm(x): 1.2692, norm(y): 1.0039, norm:1.5389, tok/sec: 101110.10, flops:88.54, batch-reuse:1
@ 1637 train 6.3024 , allloss: 6.3176, dt: 1308.12ms, fracRes: 0.5576, norm(attn): 0.0708, norm(output): 0.4922, norm(x): 1.2722, norm(y): 1.0039, norm:0.8301, tok/sec: 100198.81, flops:87.74, batch-reuse:1
@ 1638 train 6.3225 , allloss: 6.3389, dt: 1304.97ms, fracRes: 0.5542, norm(attn): 0.0752, norm(output): 0.4922, norm(x): 1.2632, norm(y): 1.0038, norm:1.0148, tok/sec: 100440.33, flops:87.95, batch-reuse:1
@ 1639 train 6.2306 , allloss: 6.2479, dt: 1279.06ms, fracRes: 0.5450, norm(attn): 0.0781, norm(output): 0.4980, norm(x): 1.2488, norm(y): 1.0039, norm:1.2623, tok/sec: 102475.65, flops:89.74, batch-reuse:1
@ 1640 train 6.2536 , allloss: 6.2708, dt: 1282.57ms, fracRes: 0.5476, norm(attn): 0.0767, norm(output): 0.4941, norm(x): 1.2477, norm(y): 1.0038, norm:0.9788, tok/sec: 102194.56, flops:89.49, batch-reuse:1
@ 1641 train 6.1914 , allloss: 6.2074, dt: 1277.93ms, fracRes: 0.5505, norm(attn): 0.0732, norm(output): 0.4922, norm(x): 1.2612, norm(y): 1.0039, norm:1.4384, tok/sec: 102566.08, flops:89.82, batch-reuse:1
@ 1642 train 6.2796 , allloss: 6.2958, dt: 1289.65ms, fracRes: 0.5571, norm(attn): 0.0708, norm(output): 0.4805, norm(x): 1.2686, norm(y): 1.0039, norm:1.2811, tok/sec: 101633.50, flops:89.00, batch-reuse:1
@ 1643 train 6.2700 , allloss: 6.2868, dt: 1307.29ms, fracRes: 0.5578, norm(attn): 0.0728, norm(output): 0.4824, norm(x): 1.2667, norm(y): 1.0038, norm:0.9640, tok/sec: 100262.33, flops:87.80, batch-reuse:1
@ 1644 train 6.3047 , allloss: 6.3219, dt: 1272.81ms, fracRes: 0.5593, norm(attn): 0.0708, norm(output): 0.4746, norm(x): 1.2662, norm(y): 1.0039, norm:1.3631, tok/sec: 102978.39, flops:90.18, batch-reuse:1
@ 1645 train 6.3128 , allloss: 6.3304, dt: 1263.02ms, fracRes: 0.5561, norm(attn): 0.0752, norm(output): 0.4805, norm(x): 1.2515, norm(y): 1.0038, norm:0.9294, tok/sec: 103776.84, flops:90.88, batch-reuse:1
@ 1646 train 6.3130 , allloss: 6.3307, dt: 1259.64ms, fracRes: 0.5499, norm(attn): 0.0811, norm(output): 0.4922, norm(x): 1.2446, norm(y): 1.0039, norm:1.5976, tok/sec: 104055.05, flops:91.12, batch-reuse:1
@ 1647 train 6.3259 , allloss: 6.3437, dt: 1267.67ms, fracRes: 0.5496, norm(attn): 0.0811, norm(output): 0.4922, norm(x): 1.2488, norm(y): 1.0039, norm:1.1408, tok/sec: 103395.65, flops:90.54, batch-reuse:1
@ 1648 train 6.3079 , allloss: 6.3239, dt: 1277.27ms, fracRes: 0.5611, norm(attn): 0.0703, norm(output): 0.4746, norm(x): 1.2651, norm(y): 1.0040, norm:0.9827, tok/sec: 102618.82, flops:89.86, batch-reuse:1
@ 1649 train 6.2415 , allloss: 6.2580, dt: 1284.09ms, fracRes: 0.5638, norm(attn): 0.0693, norm(output): 0.4707, norm(x): 1.2705, norm(y): 1.0040, norm:1.1697, tok/sec: 102073.71, flops:89.38, batch-reuse:1
@ 1650 train 6.2013 , allloss: 6.2191, dt: 1273.83ms, fracRes: 0.5614, norm(attn): 0.0708, norm(output): 0.4727, norm(x): 1.2678, norm(y): 1.0039, norm:1.1808, tok/sec: 102896.30, flops:90.10, batch-reuse:1
@ 1651 train 6.3141 , allloss: 6.3313, dt: 1245.93ms, fracRes: 0.5613, norm(attn): 0.0688, norm(output): 0.4727, norm(x): 1.2659, norm(y): 1.0039, norm:1.5584, tok/sec: 105200.42, flops:92.12, batch-reuse:1
@ 1652 train 6.3760 , allloss: 6.3928, dt: 1254.26ms, fracRes: 0.5586, norm(attn): 0.0723, norm(output): 0.4766, norm(x): 1.2608, norm(y): 1.0039, norm:1.9120, tok/sec: 104501.53, flops:91.51, batch-reuse:1
@ 1653 train 6.3937 , allloss: 6.4119, dt: 1256.32ms, fracRes: 0.5524, norm(attn): 0.0757, norm(output): 0.4883, norm(x): 1.2453, norm(y): 1.0039, norm:1.8439, tok/sec: 104330.11, flops:91.36, batch-reuse:1
@ 1654 train 6.2573 , allloss: 6.2765, dt: 1251.10ms, fracRes: 0.5468, norm(attn): 0.0786, norm(output): 0.4941, norm(x): 1.2464, norm(y): 1.0039, norm:1.3324, tok/sec: 104765.54, flops:91.74, batch-reuse:1
@ 1655 train 6.2561 , allloss: 6.2765, dt: 1241.59ms, fracRes: 0.5458, norm(attn): 0.0830, norm(output): 0.4961, norm(x): 1.2390, norm(y): 1.0038, norm:1.0611, tok/sec: 105567.70, flops:92.44, batch-reuse:1
@ 1656 train 6.2359 , allloss: 6.2530, dt: 1251.82ms, fracRes: 0.5496, norm(attn): 0.0762, norm(output): 0.4883, norm(x): 1.2480, norm(y): 1.0039, norm:1.4936, tok/sec: 104705.38, flops:91.69, batch-reuse:1
@ 1657 train 6.2910 , allloss: 6.3077, dt: 1247.31ms, fracRes: 0.5605, norm(attn): 0.0703, norm(output): 0.4727, norm(x): 1.2664, norm(y): 1.0039, norm:0.9898, tok/sec: 105083.85, flops:92.02, batch-reuse:1
@ 1658 train 6.2813 , allloss: 6.2992, dt: 1262.53ms, fracRes: 0.5673, norm(attn): 0.0703, norm(output): 0.4707, norm(x): 1.2819, norm(y): 1.0039, norm:1.1576, tok/sec: 103817.07, flops:90.91, batch-reuse:1
@ 1659 train 6.2747 , allloss: 6.2917, dt: 1273.15ms, fracRes: 0.5654, norm(attn): 0.0698, norm(output): 0.4707, norm(x): 1.2777, norm(y): 1.0040, norm:1.3043, tok/sec: 102950.87, flops:90.15, batch-reuse:1
@ 1660 train 6.2591 , allloss: 6.2774, dt: 1258.48ms, fracRes: 0.5603, norm(attn): 0.0737, norm(output): 0.4727, norm(x): 1.2599, norm(y): 1.0039, norm:1.3120, tok/sec: 104151.25, flops:91.20, batch-reuse:1
@ 1661 train 6.3098 , allloss: 6.3279, dt: 1277.09ms, fracRes: 0.5545, norm(attn): 0.0742, norm(output): 0.4805, norm(x): 1.2564, norm(y): 1.0038, norm:1.0996, tok/sec: 102633.08, flops:89.87, batch-reuse:1
@ 1662 train 6.2292 , allloss: 6.2468, dt: 1288.83ms, fracRes: 0.5551, norm(attn): 0.0723, norm(output): 0.4766, norm(x): 1.2615, norm(y): 1.0038, norm:1.2781, tok/sec: 101698.12, flops:89.06, batch-reuse:1
@ 1663 train 6.2902 , allloss: 6.3079, dt: 1252.54ms, fracRes: 0.5534, norm(attn): 0.0728, norm(output): 0.4766, norm(x): 1.2558, norm(y): 1.0038, norm:0.9730, tok/sec: 104645.09, flops:91.64, batch-reuse:1
@ 1664 train 6.2116 , allloss: 6.2301, dt: 1292.53ms, fracRes: 0.5495, norm(attn): 0.0752, norm(output): 0.4844, norm(x): 1.2473, norm(y): 1.0038, norm:0.9443, tok/sec: 101407.01, flops:88.80, batch-reuse:1
@ 1665 train 6.2908 , allloss: 6.3090, dt: 1276.37ms, fracRes: 0.5473, norm(attn): 0.0767, norm(output): 0.4922, norm(x): 1.2429, norm(y): 1.0038, norm:1.5490, tok/sec: 102691.20, flops:89.93, batch-reuse:1
@ 1666 train 6.3246 , allloss: 6.3434, dt: 1283.75ms, fracRes: 0.5488, norm(attn): 0.0776, norm(output): 0.4902, norm(x): 1.2453, norm(y): 1.0038, norm:0.9081, tok/sec: 102100.68, flops:89.41, batch-reuse:1
@ 1667 train 6.4062 , allloss: 6.4248, dt: 1312.24ms, fracRes: 0.5500, norm(attn): 0.0767, norm(output): 0.4844, norm(x): 1.2467, norm(y): 1.0038, norm:1.6286, tok/sec: 99883.83, flops:87.47, batch-reuse:1
@ 1668 train 6.3594 , allloss: 6.3775, dt: 1263.15ms, fracRes: 0.5525, norm(attn): 0.0762, norm(output): 0.4785, norm(x): 1.2588, norm(y): 1.0038, norm:1.1870, tok/sec: 103765.81, flops:90.87, batch-reuse:1
@ 1669 train 6.4126 , allloss: 6.4310, dt: 1276.97ms, fracRes: 0.5538, norm(attn): 0.0767, norm(output): 0.4785, norm(x): 1.2576, norm(y): 1.0038, norm:1.0380, tok/sec: 102643.23, flops:89.88, batch-reuse:1
@ 1670 train 6.4361 , allloss: 6.4567, dt: 1261.36ms, fracRes: 0.5528, norm(attn): 0.0801, norm(output): 0.4805, norm(x): 1.2557, norm(y): 1.0038, norm:1.0473, tok/sec: 103913.38, flops:91.00, batch-reuse:1
@ 1671 train 6.4277 , allloss: 6.4462, dt: 1270.95ms, fracRes: 0.5554, norm(attn): 0.0762, norm(output): 0.4727, norm(x): 1.2531, norm(y): 1.0039, norm:1.1451, tok/sec: 103129.56, flops:90.31, batch-reuse:1
@ 1672 train 6.3717 , allloss: 6.3915, dt: 1277.78ms, fracRes: 0.5577, norm(attn): 0.0752, norm(output): 0.4727, norm(x): 1.2584, norm(y): 1.0039, norm:1.5942, tok/sec: 102578.17, flops:89.83, batch-reuse:1
@ 1673 train 6.3815 , allloss: 6.3987, dt: 1290.59ms, fracRes: 0.5639, norm(attn): 0.0723, norm(output): 0.4707, norm(x): 1.2754, norm(y): 1.0039, norm:1.3380, tok/sec: 101559.73, flops:88.93, batch-reuse:1
@ 1674 train 6.3589 , allloss: 6.3759, dt: 1299.21ms, fracRes: 0.5646, norm(attn): 0.0723, norm(output): 0.4707, norm(x): 1.2768, norm(y): 1.0039, norm:1.0780, tok/sec: 100886.20, flops:88.34, batch-reuse:1
@ 1675 train 6.4020 , allloss: 6.4211, dt: 1307.41ms, fracRes: 0.5588, norm(attn): 0.0781, norm(output): 0.4746, norm(x): 1.2611, norm(y): 1.0039, norm:0.9864, tok/sec: 100253.32, flops:87.79, batch-reuse:1
@ 1676 train 6.4437 , allloss: 6.4625, dt: 1273.69ms, fracRes: 0.5521, norm(attn): 0.0835, norm(output): 0.4785, norm(x): 1.2486, norm(y): 1.0039, norm:1.2939, tok/sec: 102907.05, flops:90.11, batch-reuse:1
@ 1677 train 6.4064 , allloss: 6.4248, dt: 1291.98ms, fracRes: 0.5501, norm(attn): 0.0825, norm(output): 0.4805, norm(x): 1.2447, norm(y): 1.0039, norm:1.0563, tok/sec: 101450.24, flops:88.84, batch-reuse:1
@ 1678 train 6.3693 , allloss: 6.3872, dt: 1271.37ms, fracRes: 0.5544, norm(attn): 0.0781, norm(output): 0.4766, norm(x): 1.2538, norm(y): 1.0039, norm:0.6068, tok/sec: 103095.30, flops:90.28, batch-reuse:1
@ 1679 train 6.4007 , allloss: 6.4195, dt: 1297.32ms, fracRes: 0.5607, norm(attn): 0.0762, norm(output): 0.4727, norm(x): 1.2645, norm(y): 1.0039, norm:0.9446, tok/sec: 101032.87, flops:88.47, batch-reuse:1
@ 1680 train 6.2933 , allloss: 6.3103, dt: 1315.83ms, fracRes: 0.5641, norm(attn): 0.0718, norm(output): 0.4707, norm(x): 1.2751, norm(y): 1.0039, norm:1.0517, tok/sec: 99611.85, flops:87.23, batch-reuse:1
@ 1681 train 6.3538 , allloss: 6.3727, dt: 1290.20ms, fracRes: 0.5657, norm(attn): 0.0732, norm(output): 0.4707, norm(x): 1.2688, norm(y): 1.0039, norm:0.8586, tok/sec: 101590.34, flops:88.96, batch-reuse:1
@ 1682 train 6.3409 , allloss: 6.3590, dt: 1260.96ms, fracRes: 0.5620, norm(attn): 0.0747, norm(output): 0.4707, norm(x): 1.2608, norm(y): 1.0039, norm:0.7074, tok/sec: 103946.23, flops:91.02, batch-reuse:1
@ 1683 train 6.3401 , allloss: 6.3583, dt: 1274.68ms, fracRes: 0.5595, norm(attn): 0.0781, norm(output): 0.4707, norm(x): 1.2562, norm(y): 1.0039, norm:1.0794, tok/sec: 102827.65, flops:90.04, batch-reuse:1
@ 1684 train 6.3406 , allloss: 6.3589, dt: 1249.36ms, fracRes: 0.5573, norm(attn): 0.0801, norm(output): 0.4727, norm(x): 1.2527, norm(y): 1.0039, norm:1.4713, tok/sec: 104911.57, flops:91.87, batch-reuse:1
@ 1685 train 6.3627 , allloss: 6.3811, dt: 1273.83ms, fracRes: 0.5589, norm(attn): 0.0801, norm(output): 0.4707, norm(x): 1.2496, norm(y): 1.0039, norm:0.9013, tok/sec: 102896.34, flops:90.10, batch-reuse:1
@ 1686 train 6.3985 , allloss: 6.4172, dt: 1299.90ms, fracRes: 0.5652, norm(attn): 0.0767, norm(output): 0.4668, norm(x): 1.2551, norm(y): 1.0039, norm:1.3064, tok/sec: 100832.02, flops:88.30, batch-reuse:1
@ 1687 train 6.3958 , allloss: 6.4137, dt: 1260.32ms, fracRes: 0.5655, norm(attn): 0.0747, norm(output): 0.4668, norm(x): 1.2554, norm(y): 1.0039, norm:1.0702, tok/sec: 103998.61, flops:91.07, batch-reuse:1
@ 1688 train 6.3556 , allloss: 6.3747, dt: 1289.82ms, fracRes: 0.5629, norm(attn): 0.0767, norm(output): 0.4688, norm(x): 1.2554, norm(y): 1.0039, norm:1.5784, tok/sec: 101620.44, flops:88.99, batch-reuse:1
@ 1689 train 6.3930 , allloss: 6.4112, dt: 1271.47ms, fracRes: 0.5577, norm(attn): 0.0776, norm(output): 0.4707, norm(x): 1.2411, norm(y): 1.0039, norm:1.1028, tok/sec: 103086.80, flops:90.27, batch-reuse:1
@ 1690 train 6.4176 , allloss: 6.4370, dt: 1266.83ms, fracRes: 0.5524, norm(attn): 0.0840, norm(output): 0.4746, norm(x): 1.2309, norm(y): 1.0039, norm:1.6328, tok/sec: 103464.48, flops:90.60, batch-reuse:1
@ 1691 train 6.3540 , allloss: 6.3720, dt: 1293.80ms, fracRes: 0.5522, norm(attn): 0.0811, norm(output): 0.4727, norm(x): 1.2334, norm(y): 1.0040, norm:1.5312, tok/sec: 101308.16, flops:88.71, batch-reuse:1
@ 1692 train 6.2452 , allloss: 6.2622, dt: 1283.99ms, fracRes: 0.5555, norm(attn): 0.0781, norm(output): 0.4707, norm(x): 1.2442, norm(y): 1.0040, norm:1.1993, tok/sec: 102081.46, flops:89.39, batch-reuse:1
@ 1693 train 6.4952 , allloss: 6.5118, dt: 1277.26ms, fracRes: 0.5620, norm(attn): 0.0757, norm(output): 0.4688, norm(x): 1.2593, norm(y): 1.0039, norm:1.5171, tok/sec: 102619.40, flops:89.86, batch-reuse:1
@ 1694 train 6.5211 , allloss: 6.5382, dt: 1284.84ms, fracRes: 0.5677, norm(attn): 0.0737, norm(output): 0.4668, norm(x): 1.2667, norm(y): 1.0039, norm:1.2691, tok/sec: 102014.55, flops:89.33, batch-reuse:1
@ 1695 train 6.3545 , allloss: 6.3719, dt: 1277.75ms, fracRes: 0.5708, norm(attn): 0.0713, norm(output): 0.4629, norm(x): 1.2705, norm(y): 1.0040, norm:1.1407, tok/sec: 102580.09, flops:89.83, batch-reuse:1
@ 1696 train 6.3290 , allloss: 6.3459, dt: 1272.03ms, fracRes: 0.5667, norm(attn): 0.0732, norm(output): 0.4668, norm(x): 1.2659, norm(y): 1.0040, norm:1.1345, tok/sec: 103041.51, flops:90.23, batch-reuse:1
@ 1697 train 6.4266 , allloss: 6.4431, dt: 1295.96ms, fracRes: 0.5599, norm(attn): 0.0767, norm(output): 0.4688, norm(x): 1.2551, norm(y): 1.0040, norm:1.5269, tok/sec: 101139.11, flops:88.57, batch-reuse:1
@ 1698 train 6.2997 , allloss: 6.3171, dt: 1280.44ms, fracRes: 0.5557, norm(attn): 0.0801, norm(output): 0.4727, norm(x): 1.2532, norm(y): 1.0039, norm:0.9857, tok/sec: 102364.80, flops:89.64, batch-reuse:1
@ 1699 train 6.3697 , allloss: 6.3874, dt: 1266.06ms, fracRes: 0.5573, norm(attn): 0.0801, norm(output): 0.4707, norm(x): 1.2469, norm(y): 1.0039, norm:1.4091, tok/sec: 103527.65, flops:90.66, batch-reuse:1
@ 1700 train 6.3631 , allloss: 6.3803, dt: 1292.78ms, fracRes: 0.5594, norm(attn): 0.0752, norm(output): 0.4688, norm(x): 1.2474, norm(y): 1.0039, norm:1.1022, tok/sec: 101387.73, flops:88.78, batch-reuse:1
@ 1701 train 6.2942 , allloss: 6.3107, dt: 1260.82ms, fracRes: 0.5613, norm(attn): 0.0742, norm(output): 0.4688, norm(x): 1.2577, norm(y): 1.0039, norm:1.2466, tok/sec: 103957.36, flops:91.03, batch-reuse:1
@ 1702 train 6.3681 , allloss: 6.3852, dt: 1267.48ms, fracRes: 0.5609, norm(attn): 0.0752, norm(output): 0.4688, norm(x): 1.2582, norm(y): 1.0039, norm:0.8306, tok/sec: 103411.87, flops:90.56, batch-reuse:1
@ 1703 train 6.3791 , allloss: 6.3966, dt: 1268.68ms, fracRes: 0.5577, norm(attn): 0.0796, norm(output): 0.4707, norm(x): 1.2487, norm(y): 1.0039, norm:0.9501, tok/sec: 103313.44, flops:90.47, batch-reuse:1
@ 1704 train 6.3187 , allloss: 6.3354, dt: 1265.34ms, fracRes: 0.5567, norm(attn): 0.0762, norm(output): 0.4688, norm(x): 1.2443, norm(y): 1.0040, norm:1.5112, tok/sec: 103586.01, flops:90.71, batch-reuse:1
@ 1705 train 6.3901 , allloss: 6.4070, dt: 1271.98ms, fracRes: 0.5559, norm(attn): 0.0791, norm(output): 0.4688, norm(x): 1.2290, norm(y): 1.0040, norm:1.0998, tok/sec: 103045.89, flops:90.24, batch-reuse:1
@ 1706 train 6.2581 , allloss: 6.2755, dt: 1281.19ms, fracRes: 0.5556, norm(attn): 0.0786, norm(output): 0.4688, norm(x): 1.2413, norm(y): 1.0039, norm:1.5689, tok/sec: 102304.51, flops:89.59, batch-reuse:1
@ 1707 train 6.3196 , allloss: 6.3369, dt: 1273.50ms, fracRes: 0.5587, norm(attn): 0.0786, norm(output): 0.4688, norm(x): 1.2445, norm(y): 1.0040, norm:1.1730, tok/sec: 102922.46, flops:90.13, batch-reuse:1
@ 1708 train 6.3012 , allloss: 6.3184, dt: 1266.66ms, fracRes: 0.5613, norm(attn): 0.0762, norm(output): 0.4668, norm(x): 1.2501, norm(y): 1.0040, norm:1.2659, tok/sec: 103478.54, flops:90.61, batch-reuse:1
@ 1709 train 6.3704 , allloss: 6.3884, dt: 1294.52ms, fracRes: 0.5627, norm(attn): 0.0776, norm(output): 0.4668, norm(x): 1.2503, norm(y): 1.0040, norm:1.2875, tok/sec: 101251.19, flops:88.66, batch-reuse:1
@ 1710 train 6.3137 , allloss: 6.3314, dt: 1271.20ms, fracRes: 0.5616, norm(attn): 0.0781, norm(output): 0.4668, norm(x): 1.2442, norm(y): 1.0040, norm:1.0353, tok/sec: 103108.63, flops:90.29, batch-reuse:1
@ 1711 train 6.3078 , allloss: 6.3260, dt: 1256.87ms, fracRes: 0.5593, norm(attn): 0.0796, norm(output): 0.4668, norm(x): 1.2416, norm(y): 1.0039, norm:1.0883, tok/sec: 104284.05, flops:91.32, batch-reuse:1
@ 1712 train 6.3390 , allloss: 6.3579, dt: 1266.46ms, fracRes: 0.5567, norm(attn): 0.0845, norm(output): 0.4688, norm(x): 1.2415, norm(y): 1.0039, norm:1.0040, tok/sec: 103494.61, flops:90.63, batch-reuse:1
@ 1713 train 6.1698 , allloss: 6.1880, dt: 1301.10ms, fracRes: 0.5564, norm(attn): 0.0801, norm(output): 0.4688, norm(x): 1.2398, norm(y): 1.0040, norm:1.3904, tok/sec: 100739.48, flops:88.22, batch-reuse:1
@ 1714 train 6.2881 , allloss: 6.3064, dt: 1264.68ms, fracRes: 0.5615, norm(attn): 0.0781, norm(output): 0.4668, norm(x): 1.2421, norm(y): 1.0040, norm:0.8166, tok/sec: 103640.51, flops:90.76, batch-reuse:1
@ 1715 train 6.3228 , allloss: 6.3399, dt: 1280.61ms, fracRes: 0.5621, norm(attn): 0.0771, norm(output): 0.4668, norm(x): 1.2403, norm(y): 1.0040, norm:1.4133, tok/sec: 102350.89, flops:89.63, batch-reuse:1
@ 1716 train 6.3146 , allloss: 6.3326, dt: 1254.94ms, fracRes: 0.5630, norm(attn): 0.0781, norm(output): 0.4648, norm(x): 1.2391, norm(y): 1.0040, norm:1.2490, tok/sec: 104444.75, flops:91.46, batch-reuse:1
@ 1717 train 6.4786 , allloss: 6.4986, dt: 1259.66ms, fracRes: 0.5657, norm(attn): 0.0806, norm(output): 0.4648, norm(x): 1.2433, norm(y): 1.0039, norm:1.4008, tok/sec: 104053.53, flops:91.12, batch-reuse:1
@ 1718 train 6.2176 , allloss: 6.2407, dt: 1272.08ms, fracRes: 0.5654, norm(attn): 0.0830, norm(output): 0.4688, norm(x): 1.2511, norm(y): 1.0039, norm:1.6325, tok/sec: 103037.86, flops:90.23, batch-reuse:1
@ 1719 train 6.3904 , allloss: 6.4091, dt: 1280.30ms, fracRes: 0.5632, norm(attn): 0.0771, norm(output): 0.4629, norm(x): 1.2431, norm(y): 1.0040, norm:1.3246, tok/sec: 102375.90, flops:89.65, batch-reuse:1
@ 1720 train 6.3067 , allloss: 6.3266, dt: 1273.81ms, fracRes: 0.5595, norm(attn): 0.0806, norm(output): 0.4668, norm(x): 1.2367, norm(y): 1.0040, norm:1.1634, tok/sec: 102897.31, flops:90.11, batch-reuse:1
@ 1721 train 6.3161 , allloss: 6.3357, dt: 1260.65ms, fracRes: 0.5551, norm(attn): 0.0845, norm(output): 0.4688, norm(x): 1.2298, norm(y): 1.0040, norm:1.3235, tok/sec: 103971.69, flops:91.05, batch-reuse:1
@ 1722 train 6.4211 , allloss: 6.4414, dt: 1270.29ms, fracRes: 0.5555, norm(attn): 0.0850, norm(output): 0.4668, norm(x): 1.2219, norm(y): 1.0040, norm:1.2030, tok/sec: 103182.36, flops:90.36, batch-reuse:1
@ 1723 train 6.3055 , allloss: 6.3246, dt: 1289.67ms, fracRes: 0.5593, norm(attn): 0.0801, norm(output): 0.4668, norm(x): 1.2369, norm(y): 1.0040, norm:1.3257, tok/sec: 101632.14, flops:89.00, batch-reuse:1
@ 1724 train 6.2719 , allloss: 6.2916, dt: 1282.82ms, fracRes: 0.5637, norm(attn): 0.0781, norm(output): 0.4648, norm(x): 1.2405, norm(y): 1.0040, norm:0.9733, tok/sec: 102174.86, flops:89.47, batch-reuse:1
@ 1725 train 6.3193 , allloss: 6.3384, dt: 1257.31ms, fracRes: 0.5678, norm(attn): 0.0752, norm(output): 0.4609, norm(x): 1.2459, norm(y): 1.0040, norm:1.0851, tok/sec: 104248.22, flops:91.29, batch-reuse:1
@ 1726 train 6.2774 , allloss: 6.2959, dt: 1269.70ms, fracRes: 0.5679, norm(attn): 0.0747, norm(output): 0.4609, norm(x): 1.2468, norm(y): 1.0040, norm:0.9749, tok/sec: 103230.39, flops:90.40, batch-reuse:1
@ 1727 train 6.2434 , allloss: 6.2616, dt: 1263.73ms, fracRes: 0.5652, norm(attn): 0.0781, norm(output): 0.4609, norm(x): 1.2462, norm(y): 1.0040, norm:1.4776, tok/sec: 103718.61, flops:90.82, batch-reuse:1
@ 1728 train 6.3243 , allloss: 6.3440, dt: 1274.65ms, fracRes: 0.5613, norm(attn): 0.0830, norm(output): 0.4668, norm(x): 1.2404, norm(y): 1.0039, norm:0.9057, tok/sec: 102829.71, flops:90.05, batch-reuse:1
@ 1729 train 6.4219 , allloss: 6.4423, dt: 1276.43ms, fracRes: 0.5591, norm(attn): 0.0850, norm(output): 0.4668, norm(x): 1.2299, norm(y): 1.0039, norm:1.3768, tok/sec: 102686.22, flops:89.92, batch-reuse:1
@ 1730 train 6.3864 , allloss: 6.4051, dt: 1278.78ms, fracRes: 0.5628, norm(attn): 0.0796, norm(output): 0.4648, norm(x): 1.2342, norm(y): 1.0040, norm:1.2446, tok/sec: 102498.06, flops:89.76, batch-reuse:1
@ 1731 train 6.3419 , allloss: 6.3604, dt: 1273.99ms, fracRes: 0.5667, norm(attn): 0.0781, norm(output): 0.4590, norm(x): 1.2419, norm(y): 1.0040, norm:0.9957, tok/sec: 102883.34, flops:90.09, batch-reuse:1
@ 1732 train 6.2942 , allloss: 6.3122, dt: 1267.93ms, fracRes: 0.5681, norm(attn): 0.0781, norm(output): 0.4609, norm(x): 1.2422, norm(y): 1.0040, norm:0.9727, tok/sec: 103374.71, flops:90.52, batch-reuse:1
@ 1733 train 6.2579 , allloss: 6.2755, dt: 1300.62ms, fracRes: 0.5675, norm(attn): 0.0767, norm(output): 0.4609, norm(x): 1.2427, norm(y): 1.0040, norm:1.0312, tok/sec: 100776.93, flops:88.25, batch-reuse:1
@ 1734 train 6.5475 , allloss: 6.5660, dt: 1273.88ms, fracRes: 0.5651, norm(attn): 0.0791, norm(output): 0.4629, norm(x): 1.2329, norm(y): 1.0041, norm:1.2097, tok/sec: 102891.99, flops:90.10, batch-reuse:1
@ 1735 train 6.2788 , allloss: 6.2968, dt: 1282.11ms, fracRes: 0.5646, norm(attn): 0.0781, norm(output): 0.4629, norm(x): 1.2360, norm(y): 1.0041, norm:0.9198, tok/sec: 102231.73, flops:89.52, batch-reuse:1
@ 1736 train 6.2852 , allloss: 6.3028, dt: 1281.24ms, fracRes: 0.5650, norm(attn): 0.0781, norm(output): 0.4629, norm(x): 1.2397, norm(y): 1.0041, norm:1.2113, tok/sec: 102301.11, flops:89.58, batch-reuse:1
@ 1737 train 6.2531 , allloss: 6.2707, dt: 1269.31ms, fracRes: 0.5653, norm(attn): 0.0786, norm(output): 0.4590, norm(x): 1.2389, norm(y): 1.0041, norm:1.2411, tok/sec: 103262.34, flops:90.43, batch-reuse:1
@ 1738 train 6.2102 , allloss: 6.2279, dt: 1289.79ms, fracRes: 0.5652, norm(attn): 0.0776, norm(output): 0.4590, norm(x): 1.2391, norm(y): 1.0041, norm:0.8835, tok/sec: 101623.13, flops:88.99, batch-reuse:1
@ 1739 train 6.3184 , allloss: 6.3364, dt: 1270.37ms, fracRes: 0.5671, norm(attn): 0.0771, norm(output): 0.4531, norm(x): 1.2413, norm(y): 1.0040, norm:1.3827, tok/sec: 103176.20, flops:90.35, batch-reuse:1
@ 1740 train 6.2347 , allloss: 6.2514, dt: 1262.02ms, fracRes: 0.5632, norm(attn): 0.0781, norm(output): 0.4570, norm(x): 1.2332, norm(y): 1.0041, norm:0.7339, tok/sec: 103858.92, flops:90.95, batch-reuse:1
@ 1741 train 6.2399 , allloss: 6.2568, dt: 1262.65ms, fracRes: 0.5617, norm(attn): 0.0801, norm(output): 0.4629, norm(x): 1.2377, norm(y): 1.0041, norm:1.1968, tok/sec: 103807.01, flops:90.90, batch-reuse:1
@ 1742 train 6.2827 , allloss: 6.2999, dt: 1264.84ms, fracRes: 0.5638, norm(attn): 0.0791, norm(output): 0.4531, norm(x): 1.2360, norm(y): 1.0041, norm:1.1122, tok/sec: 103627.31, flops:90.74, batch-reuse:1
@ 1743 train 6.3183 , allloss: 6.3365, dt: 1298.90ms, fracRes: 0.5629, norm(attn): 0.0806, norm(output): 0.4609, norm(x): 1.2354, norm(y): 1.0040, norm:0.8970, tok/sec: 100909.69, flops:88.37, batch-reuse:1
@ 1744 train 6.2276 , allloss: 6.2455, dt: 1289.46ms, fracRes: 0.5621, norm(attn): 0.0820, norm(output): 0.4629, norm(x): 1.2356, norm(y): 1.0040, norm:1.5429, tok/sec: 101648.89, flops:89.01, batch-reuse:1
@ 1745 train 6.1997 , allloss: 6.2175, dt: 1262.98ms, fracRes: 0.5651, norm(attn): 0.0791, norm(output): 0.4512, norm(x): 1.2344, norm(y): 1.0041, norm:0.9172, tok/sec: 103779.56, flops:90.88, batch-reuse:1
@ 1746 train 6.3168 , allloss: 6.3355, dt: 1257.10ms, fracRes: 0.5705, norm(attn): 0.0776, norm(output): 0.4492, norm(x): 1.2453, norm(y): 1.0040, norm:1.4290, tok/sec: 104265.17, flops:91.30, batch-reuse:1
@ 1747 train 6.2118 , allloss: 6.2294, dt: 1257.72ms, fracRes: 0.5704, norm(attn): 0.0771, norm(output): 0.4434, norm(x): 1.2429, norm(y): 1.0041, norm:1.0943, tok/sec: 104213.94, flops:91.26, batch-reuse:1
@ 1748 train 6.1798 , allloss: 6.1978, dt: 1284.35ms, fracRes: 0.5635, norm(attn): 0.0815, norm(output): 0.4590, norm(x): 1.2315, norm(y): 1.0041, norm:1.4583, tok/sec: 102052.90, flops:89.37, batch-reuse:1
@ 1749 train 6.2909 , allloss: 6.3082, dt: 1282.94ms, fracRes: 0.5607, norm(attn): 0.0850, norm(output): 0.4609, norm(x): 1.2276, norm(y): 1.0041, norm:1.1613, tok/sec: 102165.29, flops:89.46, batch-reuse:1
@ 1750 train 6.3050 , allloss: 6.3228, dt: 1283.63ms, fracRes: 0.5616, norm(attn): 0.0835, norm(output): 0.4570, norm(x): 1.2279, norm(y): 1.0040, norm:1.0879, tok/sec: 102110.73, flops:89.42, batch-reuse:1
@ 1751 train 6.4251 , allloss: 6.4433, dt: 1296.67ms, fracRes: 0.5690, norm(attn): 0.0801, norm(output): 0.4551, norm(x): 1.2428, norm(y): 1.0039, norm:1.5518, tok/sec: 101083.19, flops:88.52, batch-reuse:1
@ 1752 train 6.4579 , allloss: 6.4771, dt: 1281.72ms, fracRes: 0.5776, norm(attn): 0.0762, norm(output): 0.4453, norm(x): 1.2626, norm(y): 1.0040, norm:1.4196, tok/sec: 102262.31, flops:89.55, batch-reuse:1
@ 1753 train 6.3094 , allloss: 6.3268, dt: 1269.96ms, fracRes: 0.5766, norm(attn): 0.0728, norm(output): 0.4395, norm(x): 1.2596, norm(y): 1.0041, norm:1.4686, tok/sec: 103209.81, flops:90.38, batch-reuse:1
@ 1754 train 6.3059 , allloss: 6.3228, dt: 1278.28ms, fracRes: 0.5735, norm(attn): 0.0742, norm(output): 0.4414, norm(x): 1.2489, norm(y): 1.0041, norm:1.3524, tok/sec: 102537.63, flops:89.79, batch-reuse:1
@ 1755 train 6.3118 , allloss: 6.3289, dt: 1318.69ms, fracRes: 0.5662, norm(attn): 0.0796, norm(output): 0.4473, norm(x): 1.2385, norm(y): 1.0041, norm:1.0799, tok/sec: 99395.99, flops:87.04, batch-reuse:1
@ 1756 train 6.2945 , allloss: 6.3124, dt: 1301.94ms, fracRes: 0.5608, norm(attn): 0.0859, norm(output): 0.4590, norm(x): 1.2280, norm(y): 1.0041, norm:1.4717, tok/sec: 100674.05, flops:88.16, batch-reuse:1
@ 1757 train 6.3387 , allloss: 6.3560, dt: 1316.84ms, fracRes: 0.5638, norm(attn): 0.0825, norm(output): 0.4590, norm(x): 1.2330, norm(y): 1.0041, norm:0.9711, tok/sec: 99535.00, flops:87.16, batch-reuse:1
@ 1758 train 6.2825 , allloss: 6.2999, dt: 1308.72ms, fracRes: 0.5653, norm(attn): 0.0811, norm(output): 0.4512, norm(x): 1.2400, norm(y): 1.0040, norm:1.4573, tok/sec: 100152.94, flops:87.70, batch-reuse:1
@ 1759 train 6.2943 , allloss: 6.3112, dt: 1264.36ms, fracRes: 0.5679, norm(attn): 0.0771, norm(output): 0.4492, norm(x): 1.2415, norm(y): 1.0041, norm:1.3030, tok/sec: 103666.52, flops:90.78, batch-reuse:1
@ 1760 train 6.2140 , allloss: 6.2304, dt: 1284.49ms, fracRes: 0.5725, norm(attn): 0.0747, norm(output): 0.4414, norm(x): 1.2496, norm(y): 1.0041, norm:1.2147, tok/sec: 102042.41, flops:89.36, batch-reuse:1
@ 1761 train 6.2068 , allloss: 6.2238, dt: 1285.17ms, fracRes: 0.5732, norm(attn): 0.0742, norm(output): 0.4395, norm(x): 1.2471, norm(y): 1.0042, norm:1.0818, tok/sec: 101987.83, flops:89.31, batch-reuse:1
@ 1762 train 6.0640 , allloss: 6.0808, dt: 1257.99ms, fracRes: 0.5692, norm(attn): 0.0767, norm(output): 0.4414, norm(x): 1.2379, norm(y): 1.0041, norm:0.8475, tok/sec: 104191.72, flops:91.24, batch-reuse:1
@ 1763 train 6.1913 , allloss: 6.2087, dt: 1260.14ms, fracRes: 0.5673, norm(attn): 0.0801, norm(output): 0.4453, norm(x): 1.2360, norm(y): 1.0041, norm:1.1970, tok/sec: 104013.53, flops:91.08, batch-reuse:1
@ 1764 train 6.2076 , allloss: 6.2260, dt: 1267.35ms, fracRes: 0.5614, norm(attn): 0.0850, norm(output): 0.4570, norm(x): 1.2297, norm(y): 1.0041, norm:0.9754, tok/sec: 103422.12, flops:90.57, batch-reuse:1
@ 1765 train 6.2337 , allloss: 6.2527, dt: 1286.35ms, fracRes: 0.5614, norm(attn): 0.0854, norm(output): 0.4531, norm(x): 1.2251, norm(y): 1.0041, norm:1.2061, tok/sec: 101894.43, flops:89.23, batch-reuse:1
@ 1766 train 6.2063 , allloss: 6.2235, dt: 1267.48ms, fracRes: 0.5707, norm(attn): 0.0771, norm(output): 0.4434, norm(x): 1.2430, norm(y): 1.0041, norm:1.2146, tok/sec: 103411.42, flops:90.56, batch-reuse:1
@ 1767 train 6.1871 , allloss: 6.2046, dt: 1263.18ms, fracRes: 0.5749, norm(attn): 0.0737, norm(output): 0.4375, norm(x): 1.2527, norm(y): 1.0041, norm:0.6729, tok/sec: 103763.44, flops:90.86, batch-reuse:1
@ 1768 train 6.2717 , allloss: 6.2894, dt: 1295.67ms, fracRes: 0.5761, norm(attn): 0.0742, norm(output): 0.4395, norm(x): 1.2511, norm(y): 1.0041, norm:0.9214, tok/sec: 101161.45, flops:88.59, batch-reuse:1
@ 1769 train 6.1673 , allloss: 6.1854, dt: 1291.18ms, fracRes: 0.5701, norm(attn): 0.0786, norm(output): 0.4414, norm(x): 1.2399, norm(y): 1.0041, norm:1.2926, tok/sec: 101513.17, flops:88.89, batch-reuse:1
@ 1770 train 6.1960 , allloss: 6.2132, dt: 1253.54ms, fracRes: 0.5643, norm(attn): 0.0825, norm(output): 0.4414, norm(x): 1.2241, norm(y): 1.0042, norm:1.2446, tok/sec: 104561.84, flops:91.56, batch-reuse:1
@ 1771 train 6.1555 , allloss: 6.1735, dt: 1291.93ms, fracRes: 0.5632, norm(attn): 0.0845, norm(output): 0.4434, norm(x): 1.2245, norm(y): 1.0041, norm:1.0256, tok/sec: 101454.79, flops:88.84, batch-reuse:1
@ 1772 train 6.2141 , allloss: 6.2314, dt: 1268.56ms, fracRes: 0.5669, norm(attn): 0.0815, norm(output): 0.4414, norm(x): 1.2305, norm(y): 1.0041, norm:1.0200, tok/sec: 103323.85, flops:90.48, batch-reuse:1
@ 1773 train 6.0970 , allloss: 6.1136, dt: 1276.96ms, fracRes: 0.5699, norm(attn): 0.0776, norm(output): 0.4395, norm(x): 1.2360, norm(y): 1.0041, norm:0.9213, tok/sec: 102643.81, flops:89.88, batch-reuse:1
@ 1774 train 6.2010 , allloss: 6.2179, dt: 1320.43ms, fracRes: 0.5699, norm(attn): 0.0762, norm(output): 0.4395, norm(x): 1.2351, norm(y): 1.0041, norm:0.9097, tok/sec: 99264.67, flops:86.92, batch-reuse:1
@ 1775 train 6.1883 , allloss: 6.2059, dt: 1314.21ms, fracRes: 0.5662, norm(attn): 0.0786, norm(output): 0.4395, norm(x): 1.2247, norm(y): 1.0041, norm:0.7523, tok/sec: 99734.37, flops:87.34, batch-reuse:1
@ 1776 train 6.1373 , allloss: 6.1554, dt: 1272.82ms, fracRes: 0.5621, norm(attn): 0.0830, norm(output): 0.4434, norm(x): 1.2209, norm(y): 1.0041, norm:0.7625, tok/sec: 102977.35, flops:90.18, batch-reuse:1
@ 1777 train 6.1561 , allloss: 6.1733, dt: 1277.56ms, fracRes: 0.5649, norm(attn): 0.0801, norm(output): 0.4414, norm(x): 1.2257, norm(y): 1.0041, norm:0.8686, tok/sec: 102595.61, flops:89.84, batch-reuse:1
@ 1778 train 6.3776 , allloss: 6.3973, dt: 1274.82ms, fracRes: 0.5717, norm(attn): 0.0801, norm(output): 0.4395, norm(x): 1.2305, norm(y): 1.0040, norm:1.0423, tok/sec: 102815.90, flops:90.03, batch-reuse:1
@ 1779 train 6.1274 , allloss: 6.1440, dt: 1274.25ms, fracRes: 0.5706, norm(attn): 0.0771, norm(output): 0.4375, norm(x): 1.2332, norm(y): 1.0042, norm:1.4207, tok/sec: 102861.71, flops:90.07, batch-reuse:1
@ 1780 train 6.2113 , allloss: 6.2279, dt: 1264.99ms, fracRes: 0.5705, norm(attn): 0.0762, norm(output): 0.4375, norm(x): 1.2297, norm(y): 1.0042, norm:1.0446, tok/sec: 103615.10, flops:90.73, batch-reuse:1
@ 1781 train 6.2283 , allloss: 6.2450, dt: 1274.38ms, fracRes: 0.5678, norm(attn): 0.0791, norm(output): 0.4395, norm(x): 1.2259, norm(y): 1.0042, norm:1.2868, tok/sec: 102851.34, flops:90.07, batch-reuse:1
@ 1782 train 6.2085 , allloss: 6.2260, dt: 1261.53ms, fracRes: 0.5664, norm(attn): 0.0811, norm(output): 0.4395, norm(x): 1.2261, norm(y): 1.0042, norm:1.4833, tok/sec: 103899.02, flops:90.98, batch-reuse:1
@ 1783 train 6.1517 , allloss: 6.1693, dt: 1260.61ms, fracRes: 0.5633, norm(attn): 0.0840, norm(output): 0.4414, norm(x): 1.2217, norm(y): 1.0042, norm:0.8696, tok/sec: 103974.93, flops:91.05, batch-reuse:1
@ 1784 train 6.1737 , allloss: 6.1909, dt: 1246.43ms, fracRes: 0.5642, norm(attn): 0.0840, norm(output): 0.4395, norm(x): 1.2169, norm(y): 1.0042, norm:1.4374, tok/sec: 105157.52, flops:92.08, batch-reuse:1
@ 1785 train 6.2035 , allloss: 6.2202, dt: 1274.35ms, fracRes: 0.5715, norm(attn): 0.0781, norm(output): 0.4375, norm(x): 1.2329, norm(y): 1.0042, norm:0.8921, tok/sec: 102853.89, flops:90.07, batch-reuse:1
@ 1786 train 6.2324 , allloss: 6.2493, dt: 1277.96ms, fracRes: 0.5755, norm(attn): 0.0737, norm(output): 0.4375, norm(x): 1.2431, norm(y): 1.0042, norm:1.7314, tok/sec: 102563.34, flops:89.81, batch-reuse:1
@ 1787 train 6.2185 , allloss: 6.2355, dt: 1252.57ms, fracRes: 0.5785, norm(attn): 0.0728, norm(output): 0.4355, norm(x): 1.2425, norm(y): 1.0042, norm:0.9995, tok/sec: 104642.84, flops:91.63, batch-reuse:1
@ 1788 train 6.2089 , allloss: 6.2253, dt: 1256.00ms, fracRes: 0.5740, norm(attn): 0.0762, norm(output): 0.4355, norm(x): 1.2398, norm(y): 1.0042, norm:1.9492, tok/sec: 104356.84, flops:91.38, batch-reuse:1
@ 1789 train 6.1620 , allloss: 6.1799, dt: 1277.69ms, fracRes: 0.5661, norm(attn): 0.0835, norm(output): 0.4395, norm(x): 1.2270, norm(y): 1.0041, norm:1.6737, tok/sec: 102584.74, flops:89.83, batch-reuse:1
@ 1790 train 6.2820 , allloss: 6.3050, dt: 1274.81ms, fracRes: 0.5550, norm(attn): 0.0986, norm(output): 0.4551, norm(x): 1.2039, norm(y): 1.0041, norm:1.9083, tok/sec: 102816.88, flops:90.04, batch-reuse:1
@ 1791 train 6.2525 , allloss: 6.2742, dt: 1270.08ms, fracRes: 0.5556, norm(attn): 0.0967, norm(output): 0.4453, norm(x): 1.2027, norm(y): 1.0041, norm:1.5488, tok/sec: 103199.87, flops:90.37, batch-reuse:1
@ 1792 train 6.2626 , allloss: 6.2800, dt: 1272.47ms, fracRes: 0.5656, norm(attn): 0.0835, norm(output): 0.4395, norm(x): 1.2220, norm(y): 1.0042, norm:1.1487, tok/sec: 103006.33, flops:90.20, batch-reuse:1
@ 1793 train 6.2035 , allloss: 6.2200, dt: 1293.66ms, fracRes: 0.5768, norm(attn): 0.0742, norm(output): 0.4336, norm(x): 1.2438, norm(y): 1.0042, norm:1.3237, tok/sec: 101318.61, flops:88.72, batch-reuse:1
@ 1794 train 6.3135 , allloss: 6.3311, dt: 1308.67ms, fracRes: 0.5855, norm(attn): 0.0737, norm(output): 0.4277, norm(x): 1.2513, norm(y): 1.0042, norm:1.4771, tok/sec: 100156.50, flops:87.71, batch-reuse:1
@ 1795 train 6.2642 , allloss: 6.2820, dt: 1263.60ms, fracRes: 0.5878, norm(attn): 0.0732, norm(output): 0.4297, norm(x): 1.2569, norm(y): 1.0042, norm:1.6703, tok/sec: 103728.63, flops:90.83, batch-reuse:1
@ 1796 train 6.1806 , allloss: 6.1984, dt: 1271.04ms, fracRes: 0.5882, norm(attn): 0.0728, norm(output): 0.4258, norm(x): 1.2618, norm(y): 1.0042, norm:1.3710, tok/sec: 103121.49, flops:90.30, batch-reuse:1
@ 1797 train 6.2353 , allloss: 6.2521, dt: 1282.07ms, fracRes: 0.5860, norm(attn): 0.0718, norm(output): 0.4297, norm(x): 1.2602, norm(y): 1.0042, norm:1.0553, tok/sec: 102234.92, flops:89.53, batch-reuse:1
@ 1798 train 6.1862 , allloss: 6.2026, dt: 1262.92ms, fracRes: 0.5820, norm(attn): 0.0718, norm(output): 0.4355, norm(x): 1.2531, norm(y): 1.0042, norm:1.3698, tok/sec: 103785.24, flops:90.88, batch-reuse:1
@ 1799 train 6.2111 , allloss: 6.2275, dt: 1259.61ms, fracRes: 0.5779, norm(attn): 0.0737, norm(output): 0.4375, norm(x): 1.2478, norm(y): 1.0042, norm:0.8451, tok/sec: 104057.91, flops:91.12, batch-reuse:1
@ 1800 train 6.1716 , allloss: 6.1891, dt: 1284.96ms, fracRes: 0.5740, norm(attn): 0.0767, norm(output): 0.4395, norm(x): 1.2434, norm(y): 1.0042, norm:1.6637, tok/sec: 102004.67, flops:89.32, batch-reuse:1
@ 1801 train 6.2144 , allloss: 6.2335, dt: 1260.09ms, fracRes: 0.5712, norm(attn): 0.0796, norm(output): 0.4395, norm(x): 1.2281, norm(y): 1.0041, norm:1.1327, tok/sec: 104018.04, flops:91.09, batch-reuse:1
@ 1802 train 6.2236 , allloss: 6.2427, dt: 1271.45ms, fracRes: 0.5656, norm(attn): 0.0825, norm(output): 0.4434, norm(x): 1.2154, norm(y): 1.0041, norm:1.7517, tok/sec: 103088.60, flops:90.27, batch-reuse:1
@ 1803 train 6.2439 , allloss: 6.2629, dt: 1267.03ms, fracRes: 0.5643, norm(attn): 0.0869, norm(output): 0.4434, norm(x): 1.2139, norm(y): 1.0041, norm:1.2706, tok/sec: 103448.26, flops:90.59, batch-reuse:1
@ 1804 train 6.0712 , allloss: 6.0901, dt: 1268.94ms, fracRes: 0.5635, norm(attn): 0.0879, norm(output): 0.4492, norm(x): 1.2239, norm(y): 1.0041, norm:1.2787, tok/sec: 103292.42, flops:90.45, batch-reuse:1
@ 1805 train 6.2912 , allloss: 6.3105, dt: 1259.33ms, fracRes: 0.5676, norm(attn): 0.0874, norm(output): 0.4434, norm(x): 1.2195, norm(y): 1.0041, norm:1.6504, tok/sec: 104080.62, flops:91.14, batch-reuse:1
@ 1806 train 6.1790 , allloss: 6.1977, dt: 1278.55ms, fracRes: 0.5709, norm(attn): 0.0825, norm(output): 0.4375, norm(x): 1.2260, norm(y): 1.0042, norm:1.2382, tok/sec: 102516.35, flops:89.77, batch-reuse:1
@ 1807 train 6.2512 , allloss: 6.2699, dt: 1271.60ms, fracRes: 0.5769, norm(attn): 0.0771, norm(output): 0.4355, norm(x): 1.2303, norm(y): 1.0042, norm:1.6563, tok/sec: 103076.69, flops:90.26, batch-reuse:1
@ 1808 train 6.1777 , allloss: 6.2008, dt: 1293.79ms, fracRes: 0.5772, norm(attn): 0.0806, norm(output): 0.4375, norm(x): 1.2242, norm(y): 1.0042, norm:1.1431, tok/sec: 101308.36, flops:88.71, batch-reuse:1
@ 1809 train 6.1367 , allloss: 6.1551, dt: 1283.35ms, fracRes: 0.5772, norm(attn): 0.0776, norm(output): 0.4375, norm(x): 1.2353, norm(y): 1.0043, norm:1.2750, tok/sec: 102132.87, flops:89.44, batch-reuse:1
@ 1810 train 6.1507 , allloss: 6.1696, dt: 1270.96ms, fracRes: 0.5749, norm(attn): 0.0806, norm(output): 0.4375, norm(x): 1.2347, norm(y): 1.0043, norm:1.3206, tok/sec: 103128.26, flops:90.31, batch-reuse:1
@ 1811 train 6.1808 , allloss: 6.1993, dt: 1284.01ms, fracRes: 0.5721, norm(attn): 0.0820, norm(output): 0.4395, norm(x): 1.2300, norm(y): 1.0042, norm:0.8125, tok/sec: 102080.06, flops:89.39, batch-reuse:1
@ 1812 train 6.1521 , allloss: 6.1705, dt: 1280.00ms, fracRes: 0.5717, norm(attn): 0.0811, norm(output): 0.4395, norm(x): 1.2317, norm(y): 1.0043, norm:1.0185, tok/sec: 102399.85, flops:89.67, batch-reuse:1
@ 1813 train 6.1281 , allloss: 6.1464, dt: 1297.49ms, fracRes: 0.5765, norm(attn): 0.0781, norm(output): 0.4375, norm(x): 1.2453, norm(y): 1.0042, norm:0.7364, tok/sec: 101019.97, flops:88.46, batch-reuse:1
@ 1814 train 6.1754 , allloss: 6.1942, dt: 1260.41ms, fracRes: 0.5780, norm(attn): 0.0776, norm(output): 0.4375, norm(x): 1.2516, norm(y): 1.0042, norm:0.8085, tok/sec: 103991.47, flops:91.06, batch-reuse:1
@ 1815 train 6.0929 , allloss: 6.1100, dt: 1268.45ms, fracRes: 0.5782, norm(attn): 0.0752, norm(output): 0.4355, norm(x): 1.2560, norm(y): 1.0042, norm:0.8682, tok/sec: 103332.02, flops:90.49, batch-reuse:1
@ 1816 train 6.1013 , allloss: 6.1191, dt: 1275.33ms, fracRes: 0.5775, norm(attn): 0.0762, norm(output): 0.4336, norm(x): 1.2487, norm(y): 1.0042, norm:0.8136, tok/sec: 102774.77, flops:90.00, batch-reuse:1
@ 1817 train 6.1815 , allloss: 6.1993, dt: 1297.47ms, fracRes: 0.5771, norm(attn): 0.0776, norm(output): 0.4355, norm(x): 1.2429, norm(y): 1.0042, norm:0.8092, tok/sec: 101021.40, flops:88.46, batch-reuse:1
@ 1818 train 6.1213 , allloss: 6.1392, dt: 1284.91ms, fracRes: 0.5747, norm(attn): 0.0791, norm(output): 0.4355, norm(x): 1.2433, norm(y): 1.0042, norm:0.8317, tok/sec: 102008.74, flops:89.33, batch-reuse:1
@ 1819 train 6.1908 , allloss: 6.2087, dt: 1278.41ms, fracRes: 0.5734, norm(attn): 0.0811, norm(output): 0.4375, norm(x): 1.2420, norm(y): 1.0042, norm:1.0707, tok/sec: 102527.65, flops:89.78, batch-reuse:1
@ 1820 train 6.1115 , allloss: 6.1296, dt: 1289.29ms, fracRes: 0.5705, norm(attn): 0.0830, norm(output): 0.4375, norm(x): 1.2346, norm(y): 1.0042, norm:1.1241, tok/sec: 101662.16, flops:89.02, batch-reuse:1
@ 1821 train 6.0680 , allloss: 6.0855, dt: 1275.83ms, fracRes: 0.5704, norm(attn): 0.0825, norm(output): 0.4375, norm(x): 1.2339, norm(y): 1.0042, norm:0.8285, tok/sec: 102734.71, flops:89.96, batch-reuse:1
@ 1822 train 6.0542 , allloss: 6.0711, dt: 1263.97ms, fracRes: 0.5742, norm(attn): 0.0791, norm(output): 0.4355, norm(x): 1.2409, norm(y): 1.0042, norm:0.8282, tok/sec: 103698.71, flops:90.81, batch-reuse:1
@ 1823 train 6.0757 , allloss: 6.0927, dt: 1298.19ms, fracRes: 0.5736, norm(attn): 0.0791, norm(output): 0.4355, norm(x): 1.2386, norm(y): 1.0042, norm:0.7716, tok/sec: 100964.98, flops:88.41, batch-reuse:1
@ 1824 train 6.1213 , allloss: 6.1385, dt: 1272.88ms, fracRes: 0.5738, norm(attn): 0.0801, norm(output): 0.4355, norm(x): 1.2368, norm(y): 1.0042, norm:0.9278, tok/sec: 102973.17, flops:90.17, batch-reuse:1
@ 1825 train 6.1456 , allloss: 6.1630, dt: 1276.64ms, fracRes: 0.5754, norm(attn): 0.0791, norm(output): 0.4355, norm(x): 1.2418, norm(y): 1.0042, norm:1.1042, tok/sec: 102669.44, flops:89.91, batch-reuse:1
@ 1826 train 6.1563 , allloss: 6.1732, dt: 1286.20ms, fracRes: 0.5758, norm(attn): 0.0806, norm(output): 0.4336, norm(x): 1.2387, norm(y): 1.0042, norm:0.8043, tok/sec: 101906.50, flops:89.24, batch-reuse:1
@ 1827 train 6.1964 , allloss: 6.2146, dt: 1273.55ms, fracRes: 0.5751, norm(attn): 0.0830, norm(output): 0.4316, norm(x): 1.2297, norm(y): 1.0042, norm:0.9039, tok/sec: 102918.84, flops:90.12, batch-reuse:1
@ 1828 train 6.1363 , allloss: 6.1541, dt: 1260.22ms, fracRes: 0.5707, norm(attn): 0.0840, norm(output): 0.4355, norm(x): 1.2280, norm(y): 1.0042, norm:0.9513, tok/sec: 104007.45, flops:91.08, batch-reuse:1
@ 1829 train 6.1879 , allloss: 6.2058, dt: 1269.60ms, fracRes: 0.5710, norm(attn): 0.0840, norm(output): 0.4375, norm(x): 1.2321, norm(y): 1.0042, norm:1.3596, tok/sec: 103238.67, flops:90.40, batch-reuse:1
@ 1830 train 5.9613 , allloss: 5.9791, dt: 1271.17ms, fracRes: 0.5706, norm(attn): 0.0830, norm(output): 0.4355, norm(x): 1.2338, norm(y): 1.0042, norm:0.7459, tok/sec: 103111.14, flops:90.29, batch-reuse:1
@ 1831 train 6.1325 , allloss: 6.1493, dt: 1294.89ms, fracRes: 0.5754, norm(attn): 0.0801, norm(output): 0.4336, norm(x): 1.2340, norm(y): 1.0042, norm:1.1743, tok/sec: 101222.47, flops:88.64, batch-reuse:1
@ 1832 train 6.1151 , allloss: 6.1325, dt: 1316.76ms, fracRes: 0.5771, norm(attn): 0.0791, norm(output): 0.4297, norm(x): 1.2341, norm(y): 1.0042, norm:0.9139, tok/sec: 99541.65, flops:87.17, batch-reuse:1
@ 1833 train 6.1882 , allloss: 6.2059, dt: 1280.11ms, fracRes: 0.5747, norm(attn): 0.0811, norm(output): 0.4297, norm(x): 1.2282, norm(y): 1.0043, norm:1.0330, tok/sec: 102391.31, flops:89.66, batch-reuse:1
@ 1834 train 6.1239 , allloss: 6.1411, dt: 1257.26ms, fracRes: 0.5725, norm(attn): 0.0830, norm(output): 0.4316, norm(x): 1.2309, norm(y): 1.0042, norm:1.1401, tok/sec: 104252.31, flops:91.29, batch-reuse:1
@ 1835 train 6.0474 , allloss: 6.0638, dt: 1270.11ms, fracRes: 0.5701, norm(attn): 0.0840, norm(output): 0.4355, norm(x): 1.2270, norm(y): 1.0043, norm:1.0901, tok/sec: 103196.98, flops:90.37, batch-reuse:1
@ 1836 train 6.1971 , allloss: 6.2140, dt: 1276.50ms, fracRes: 0.5747, norm(attn): 0.0811, norm(output): 0.4316, norm(x): 1.2306, norm(y): 1.0042, norm:0.9203, tok/sec: 102680.85, flops:89.92, batch-reuse:1
@ 1837 train 6.1846 , allloss: 6.2003, dt: 1270.35ms, fracRes: 0.5756, norm(attn): 0.0786, norm(output): 0.4297, norm(x): 1.2345, norm(y): 1.0043, norm:0.8444, tok/sec: 103177.65, flops:90.35, batch-reuse:1
@ 1838 train 6.1226 , allloss: 6.1394, dt: 1268.57ms, fracRes: 0.5736, norm(attn): 0.0801, norm(output): 0.4297, norm(x): 1.2273, norm(y): 1.0042, norm:0.8253, tok/sec: 103322.90, flops:90.48, batch-reuse:1
@ 1839 train 6.0948 , allloss: 6.1116, dt: 1282.75ms, fracRes: 0.5749, norm(attn): 0.0811, norm(output): 0.4297, norm(x): 1.2265, norm(y): 1.0043, norm:1.2841, tok/sec: 102180.71, flops:89.48, batch-reuse:1
@ 1840 train 6.0754 , allloss: 6.0920, dt: 1277.68ms, fracRes: 0.5750, norm(attn): 0.0811, norm(output): 0.4277, norm(x): 1.2296, norm(y): 1.0043, norm:0.7733, tok/sec: 102585.71, flops:89.83, batch-reuse:1
@ 1841 train 6.1124 , allloss: 6.1286, dt: 1279.26ms, fracRes: 0.5748, norm(attn): 0.0806, norm(output): 0.4297, norm(x): 1.2321, norm(y): 1.0043, norm:1.0604, tok/sec: 102459.39, flops:89.72, batch-reuse:1
@ 1842 train 6.0901 , allloss: 6.1061, dt: 1278.62ms, fracRes: 0.5742, norm(attn): 0.0825, norm(output): 0.4297, norm(x): 1.2287, norm(y): 1.0043, norm:1.2240, tok/sec: 102510.40, flops:89.77, batch-reuse:1
@ 1843 train 6.1115 , allloss: 6.1286, dt: 1281.75ms, fracRes: 0.5731, norm(attn): 0.0854, norm(output): 0.4316, norm(x): 1.2214, norm(y): 1.0043, norm:0.6676, tok/sec: 102260.57, flops:89.55, batch-reuse:1
@ 1844 train 6.0759 , allloss: 6.0923, dt: 1286.44ms, fracRes: 0.5727, norm(attn): 0.0850, norm(output): 0.4336, norm(x): 1.2253, norm(y): 1.0043, norm:1.2123, tok/sec: 101887.44, flops:89.22, batch-reuse:1
@ 1845 train 6.0794 , allloss: 6.0957, dt: 1305.27ms, fracRes: 0.5759, norm(attn): 0.0815, norm(output): 0.4297, norm(x): 1.2282, norm(y): 1.0043, norm:1.0471, tok/sec: 100417.43, flops:87.93, batch-reuse:1
@ 1846 train 6.0803 , allloss: 6.0973, dt: 1268.15ms, fracRes: 0.5788, norm(attn): 0.0796, norm(output): 0.4219, norm(x): 1.2285, norm(y): 1.0043, norm:0.8580, tok/sec: 103357.14, flops:90.51, batch-reuse:1
@ 1847 train 6.0897 , allloss: 6.1062, dt: 1275.02ms, fracRes: 0.5777, norm(attn): 0.0811, norm(output): 0.4160, norm(x): 1.2303, norm(y): 1.0044, norm:0.8284, tok/sec: 102800.23, flops:90.02, batch-reuse:1
@ 1848 train 5.9785 , allloss: 5.9943, dt: 1268.42ms, fracRes: 0.5745, norm(attn): 0.0811, norm(output): 0.4219, norm(x): 1.2213, norm(y): 1.0044, norm:0.8919, tok/sec: 103334.57, flops:90.49, batch-reuse:1
@ 1849 train 6.1096 , allloss: 6.1261, dt: 1236.51ms, fracRes: 0.5730, norm(attn): 0.0835, norm(output): 0.4258, norm(x): 1.2141, norm(y): 1.0043, norm:1.0016, tok/sec: 106001.73, flops:92.82, batch-reuse:1
@ 1850 train 5.9745 , allloss: 5.9906, dt: 1290.58ms, fracRes: 0.5707, norm(attn): 0.0850, norm(output): 0.4297, norm(x): 1.2161, norm(y): 1.0043, norm:1.0646, tok/sec: 101560.80, flops:88.94, batch-reuse:1
@ 1851 train 6.0204 , allloss: 6.0368, dt: 1291.78ms, fracRes: 0.5746, norm(attn): 0.0815, norm(output): 0.4219, norm(x): 1.2201, norm(y): 1.0044, norm:1.1192, tok/sec: 101465.82, flops:88.85, batch-reuse:1
@ 1852 train 6.0986 , allloss: 6.1162, dt: 1305.94ms, fracRes: 0.5753, norm(attn): 0.0820, norm(output): 0.4219, norm(x): 1.2160, norm(y): 1.0043, norm:0.9868, tok/sec: 100366.32, flops:87.89, batch-reuse:1
@ 1853 train 6.1121 , allloss: 6.1286, dt: 1266.12ms, fracRes: 0.5750, norm(attn): 0.0820, norm(output): 0.4219, norm(x): 1.2183, norm(y): 1.0043, norm:1.0771, tok/sec: 103522.77, flops:90.65, batch-reuse:1
@ 1854 train 6.1727 , allloss: 6.1891, dt: 1252.47ms, fracRes: 0.5754, norm(attn): 0.0815, norm(output): 0.4199, norm(x): 1.2218, norm(y): 1.0043, norm:0.8933, tok/sec: 104650.97, flops:91.64, batch-reuse:1
@ 1855 train 6.2261 , allloss: 6.2441, dt: 1262.69ms, fracRes: 0.5761, norm(attn): 0.0845, norm(output): 0.4297, norm(x): 1.2215, norm(y): 1.0042, norm:1.3482, tok/sec: 103803.56, flops:90.90, batch-reuse:1
@ 1856 train 6.1278 , allloss: 6.1440, dt: 1276.86ms, fracRes: 0.5742, norm(attn): 0.0820, norm(output): 0.4180, norm(x): 1.2203, norm(y): 1.0043, norm:0.8669, tok/sec: 102652.01, flops:89.89, batch-reuse:1
@ 1857 train 6.1917 , allloss: 6.2099, dt: 1255.38ms, fracRes: 0.5741, norm(attn): 0.0859, norm(output): 0.4258, norm(x): 1.2153, norm(y): 1.0043, norm:1.8013, tok/sec: 104408.49, flops:91.43, batch-reuse:1
@ 1858 train 6.0837 , allloss: 6.0995, dt: 1273.31ms, fracRes: 0.5778, norm(attn): 0.0796, norm(output): 0.4141, norm(x): 1.2359, norm(y): 1.0043, norm:1.3998, tok/sec: 102938.11, flops:90.14, batch-reuse:1
@ 1859 train 6.2951 , allloss: 6.3116, dt: 1278.11ms, fracRes: 0.5777, norm(attn): 0.0830, norm(output): 0.4180, norm(x): 1.2296, norm(y): 1.0043, norm:1.8498, tok/sec: 102551.34, flops:89.80, batch-reuse:1
@ 1860 train 6.3106 , allloss: 6.3293, dt: 1289.10ms, fracRes: 0.5763, norm(attn): 0.0850, norm(output): 0.4277, norm(x): 1.2189, norm(y): 1.0042, norm:1.3530, tok/sec: 101676.96, flops:89.04, batch-reuse:1
@ 1861 train 6.1992 , allloss: 6.2163, dt: 1272.76ms, fracRes: 0.5720, norm(attn): 0.0889, norm(output): 0.4297, norm(x): 1.2165, norm(y): 1.0043, norm:1.4053, tok/sec: 102982.25, flops:90.18, batch-reuse:1
@ 1862 train 6.2153 , allloss: 6.2321, dt: 1282.45ms, fracRes: 0.5737, norm(attn): 0.0859, norm(output): 0.4297, norm(x): 1.2254, norm(y): 1.0043, norm:1.5885, tok/sec: 102204.09, flops:89.50, batch-reuse:1
@ 1863 train 6.2536 , allloss: 6.2703, dt: 1275.39ms, fracRes: 0.5773, norm(attn): 0.0830, norm(output): 0.4258, norm(x): 1.2300, norm(y): 1.0043, norm:1.2460, tok/sec: 102770.27, flops:89.99, batch-reuse:1
@ 1864 train 6.2159 , allloss: 6.2313, dt: 1270.28ms, fracRes: 0.5807, norm(attn): 0.0776, norm(output): 0.4219, norm(x): 1.2418, norm(y): 1.0044, norm:1.3755, tok/sec: 103183.17, flops:90.36, batch-reuse:1
@ 1865 train 6.1897 , allloss: 6.2048, dt: 1268.76ms, fracRes: 0.5813, norm(attn): 0.0767, norm(output): 0.4141, norm(x): 1.2408, norm(y): 1.0044, norm:1.1778, tok/sec: 103307.07, flops:90.46, batch-reuse:1
@ 1866 train 6.5317 , allloss: 6.5488, dt: 1281.77ms, fracRes: 0.5840, norm(attn): 0.0786, norm(output): 0.4102, norm(x): 1.2264, norm(y): 1.0042, norm:1.3529, tok/sec: 102258.63, flops:89.55, batch-reuse:1
@ 1867 train 6.1251 , allloss: 6.1419, dt: 1278.58ms, fracRes: 0.5757, norm(attn): 0.0840, norm(output): 0.4297, norm(x): 1.2332, norm(y): 1.0043, norm:1.2707, tok/sec: 102513.92, flops:89.77, batch-reuse:1
@ 1868 train 6.2391 , allloss: 6.2562, dt: 1275.52ms, fracRes: 0.5738, norm(attn): 0.0854, norm(output): 0.4297, norm(x): 1.2294, norm(y): 1.0043, norm:1.1217, tok/sec: 102759.75, flops:89.99, batch-reuse:1
@ 1869 train 6.1648 , allloss: 6.1825, dt: 1263.29ms, fracRes: 0.5712, norm(attn): 0.0889, norm(output): 0.4336, norm(x): 1.2193, norm(y): 1.0043, norm:1.1666, tok/sec: 103754.14, flops:90.86, batch-reuse:1
@ 1870 train 6.2252 , allloss: 6.2419, dt: 1273.31ms, fracRes: 0.5758, norm(attn): 0.0854, norm(output): 0.4277, norm(x): 1.2242, norm(y): 1.0043, norm:1.2433, tok/sec: 102937.98, flops:90.14, batch-reuse:1
@ 1871 train 6.1719 , allloss: 6.1874, dt: 1299.43ms, fracRes: 0.5804, norm(attn): 0.0791, norm(output): 0.4180, norm(x): 1.2359, norm(y): 1.0044, norm:0.9180, tok/sec: 100868.46, flops:88.33, batch-reuse:1
@ 1872 train 6.2618 , allloss: 6.2783, dt: 1279.27ms, fracRes: 0.5848, norm(attn): 0.0786, norm(output): 0.4141, norm(x): 1.2399, norm(y): 1.0043, norm:1.0282, tok/sec: 102458.52, flops:89.72, batch-reuse:1
@ 1873 train 6.2376 , allloss: 6.2541, dt: 1259.99ms, fracRes: 0.5828, norm(attn): 0.0801, norm(output): 0.4141, norm(x): 1.2406, norm(y): 1.0043, norm:0.8262, tok/sec: 104025.81, flops:91.09, batch-reuse:1
@ 1874 train 6.1617 , allloss: 6.1778, dt: 1258.44ms, fracRes: 0.5780, norm(attn): 0.0825, norm(output): 0.4160, norm(x): 1.2321, norm(y): 1.0044, norm:0.7466, tok/sec: 104154.70, flops:91.21, batch-reuse:1
@ 1875 train 6.1130 , allloss: 6.1297, dt: 1280.08ms, fracRes: 0.5757, norm(attn): 0.0850, norm(output): 0.4297, norm(x): 1.2349, norm(y): 1.0043, norm:0.7548, tok/sec: 102393.44, flops:89.66, batch-reuse:1
@ 1876 train 6.2895 , allloss: 6.3072, dt: 1287.25ms, fracRes: 0.5734, norm(attn): 0.0889, norm(output): 0.4297, norm(x): 1.2226, norm(y): 1.0043, norm:1.0629, tok/sec: 101823.47, flops:89.17, batch-reuse:1
@ 1877 train 6.2846 , allloss: 6.3024, dt: 1300.96ms, fracRes: 0.5751, norm(attn): 0.0864, norm(output): 0.4297, norm(x): 1.2201, norm(y): 1.0043, norm:1.2906, tok/sec: 100750.23, flops:88.23, batch-reuse:1
@ 1878 train 6.1819 , allloss: 6.1991, dt: 1306.16ms, fracRes: 0.5747, norm(attn): 0.0859, norm(output): 0.4297, norm(x): 1.2264, norm(y): 1.0044, norm:0.6991, tok/sec: 100349.41, flops:87.87, batch-reuse:1
@ 1879 train 6.2216 , allloss: 6.2389, dt: 1277.64ms, fracRes: 0.5743, norm(attn): 0.0854, norm(output): 0.4297, norm(x): 1.2296, norm(y): 1.0043, norm:1.1278, tok/sec: 102589.54, flops:89.84, batch-reuse:1
@ 1880 train 6.2034 , allloss: 6.2198, dt: 1264.09ms, fracRes: 0.5749, norm(attn): 0.0840, norm(output): 0.4297, norm(x): 1.2345, norm(y): 1.0043, norm:1.3256, tok/sec: 103688.72, flops:90.80, batch-reuse:1
@ 1881 train 6.1465 , allloss: 6.1623, dt: 1273.75ms, fracRes: 0.5763, norm(attn): 0.0830, norm(output): 0.4258, norm(x): 1.2373, norm(y): 1.0044, norm:0.8302, tok/sec: 102902.06, flops:90.11, batch-reuse:1
@ 1882 train 6.1976 , allloss: 6.2130, dt: 1273.70ms, fracRes: 0.5783, norm(attn): 0.0820, norm(output): 0.4219, norm(x): 1.2438, norm(y): 1.0044, norm:1.1778, tok/sec: 102906.28, flops:90.11, batch-reuse:1
@ 1883 train 6.1623 , allloss: 6.1781, dt: 1249.18ms, fracRes: 0.5785, norm(attn): 0.0830, norm(output): 0.4199, norm(x): 1.2309, norm(y): 1.0044, norm:1.0015, tok/sec: 104926.53, flops:91.88, batch-reuse:1
@ 1884 train 6.1284 , allloss: 6.1442, dt: 1282.75ms, fracRes: 0.5765, norm(attn): 0.0835, norm(output): 0.4180, norm(x): 1.2269, norm(y): 1.0045, norm:0.9498, tok/sec: 102180.12, flops:89.48, batch-reuse:1
@ 1885 train 6.1745 , allloss: 6.1903, dt: 1286.39ms, fracRes: 0.5745, norm(attn): 0.0859, norm(output): 0.4258, norm(x): 1.2264, norm(y): 1.0044, norm:1.2829, tok/sec: 101891.18, flops:89.22, batch-reuse:1
@ 1886 train 6.1986 , allloss: 6.2152, dt: 1288.15ms, fracRes: 0.5763, norm(attn): 0.0859, norm(output): 0.4160, norm(x): 1.2221, norm(y): 1.0044, norm:1.1823, tok/sec: 101752.29, flops:89.10, batch-reuse:1
@ 1887 train 6.1474 , allloss: 6.1639, dt: 1293.95ms, fracRes: 0.5775, norm(attn): 0.0830, norm(output): 0.4180, norm(x): 1.2262, norm(y): 1.0044, norm:1.1085, tok/sec: 101295.75, flops:88.70, batch-reuse:1
@ 1888 train 6.2439 , allloss: 6.2612, dt: 1288.07ms, fracRes: 0.5799, norm(attn): 0.0830, norm(output): 0.4141, norm(x): 1.2262, norm(y): 1.0043, norm:0.7586, tok/sec: 101758.24, flops:89.11, batch-reuse:1
@ 1889 train 6.1790 , allloss: 6.1953, dt: 1278.06ms, fracRes: 0.5782, norm(attn): 0.0835, norm(output): 0.4141, norm(x): 1.2187, norm(y): 1.0044, norm:1.2090, tok/sec: 102555.25, flops:89.81, batch-reuse:1
@ 1890 train 6.2842 , allloss: 6.3017, dt: 1301.46ms, fracRes: 0.5746, norm(attn): 0.0884, norm(output): 0.4258, norm(x): 1.2150, norm(y): 1.0043, norm:0.9669, tok/sec: 100711.82, flops:88.19, batch-reuse:1
@ 1891 train 6.1975 , allloss: 6.2144, dt: 1260.47ms, fracRes: 0.5750, norm(attn): 0.0874, norm(output): 0.4238, norm(x): 1.2266, norm(y): 1.0044, norm:1.0272, tok/sec: 103986.63, flops:91.06, batch-reuse:1
@ 1892 train 6.1691 , allloss: 6.1864, dt: 1285.14ms, fracRes: 0.5780, norm(attn): 0.0859, norm(output): 0.4160, norm(x): 1.2259, norm(y): 1.0044, norm:1.2647, tok/sec: 101990.65, flops:89.31, batch-reuse:1
@ 1893 train 6.2156 , allloss: 6.2321, dt: 1264.76ms, fracRes: 0.5810, norm(attn): 0.0811, norm(output): 0.4121, norm(x): 1.2296, norm(y): 1.0044, norm:1.2570, tok/sec: 103634.18, flops:90.75, batch-reuse:1
@ 1894 train 6.1376 , allloss: 6.1539, dt: 1264.95ms, fracRes: 0.5828, norm(attn): 0.0796, norm(output): 0.4102, norm(x): 1.2313, norm(y): 1.0044, norm:0.9925, tok/sec: 103618.11, flops:90.74, batch-reuse:1
@ 1895 train 6.2509 , allloss: 6.2669, dt: 1275.97ms, fracRes: 0.5811, norm(attn): 0.0815, norm(output): 0.4121, norm(x): 1.2331, norm(y): 1.0044, norm:0.7929, tok/sec: 102723.15, flops:89.95, batch-reuse:1
@ 1896 train 6.1966 , allloss: 6.2137, dt: 1258.71ms, fracRes: 0.5773, norm(attn): 0.0859, norm(output): 0.4180, norm(x): 1.2252, norm(y): 1.0044, norm:0.9216, tok/sec: 104132.41, flops:91.19, batch-reuse:1
@ 1897 train 6.2213 , allloss: 6.2385, dt: 1273.42ms, fracRes: 0.5730, norm(attn): 0.0869, norm(output): 0.4219, norm(x): 1.2206, norm(y): 1.0044, norm:0.8746, tok/sec: 102928.88, flops:90.13, batch-reuse:1
@ 1898 train 6.1962 , allloss: 6.2120, dt: 1285.70ms, fracRes: 0.5770, norm(attn): 0.0845, norm(output): 0.4141, norm(x): 1.2307, norm(y): 1.0044, norm:1.2939, tok/sec: 101945.86, flops:89.27, batch-reuse:1
@ 1899 train 6.2135 , allloss: 6.2293, dt: 1262.51ms, fracRes: 0.5816, norm(attn): 0.0806, norm(output): 0.4102, norm(x): 1.2344, norm(y): 1.0044, norm:1.1859, tok/sec: 103818.23, flops:90.91, batch-reuse:1
@ 1900 train 6.1430 , allloss: 6.1591, dt: 1268.75ms, fracRes: 0.5831, norm(attn): 0.0791, norm(output): 0.4102, norm(x): 1.2333, norm(y): 1.0044, norm:1.0357, tok/sec: 103308.22, flops:90.47, batch-reuse:1
@ 1901 train 6.2264 , allloss: 6.2426, dt: 1298.86ms, fracRes: 0.5781, norm(attn): 0.0845, norm(output): 0.4141, norm(x): 1.2247, norm(y): 1.0044, norm:1.3583, tok/sec: 100912.77, flops:88.37, batch-reuse:1
@ 1902 train 6.2043 , allloss: 6.2215, dt: 1272.92ms, fracRes: 0.5730, norm(attn): 0.0898, norm(output): 0.4141, norm(x): 1.2166, norm(y): 1.0044, norm:1.0985, tok/sec: 102969.58, flops:90.17, batch-reuse:1
@ 1903 train 6.1880 , allloss: 6.2055, dt: 1274.15ms, fracRes: 0.5747, norm(attn): 0.0884, norm(output): 0.4141, norm(x): 1.2182, norm(y): 1.0045, norm:1.0587, tok/sec: 102870.45, flops:90.08, batch-reuse:1
@ 1904 train 6.1276 , allloss: 6.1440, dt: 1265.41ms, fracRes: 0.5787, norm(attn): 0.0830, norm(output): 0.4082, norm(x): 1.2217, norm(y): 1.0045, norm:0.8790, tok/sec: 103580.43, flops:90.70, batch-reuse:1
@ 1905 train 6.0671 , allloss: 6.0821, dt: 1277.41ms, fracRes: 0.5831, norm(attn): 0.0781, norm(output): 0.4062, norm(x): 1.2341, norm(y): 1.0045, norm:0.9427, tok/sec: 102607.71, flops:89.85, batch-reuse:1
@ 1906 train 6.0616 , allloss: 6.0768, dt: 1276.02ms, fracRes: 0.5868, norm(attn): 0.0771, norm(output): 0.4062, norm(x): 1.2431, norm(y): 1.0045, norm:1.1912, tok/sec: 102719.35, flops:89.95, batch-reuse:1
@ 1907 train 6.0876 , allloss: 6.1037, dt: 1271.99ms, fracRes: 0.5838, norm(attn): 0.0796, norm(output): 0.4082, norm(x): 1.2388, norm(y): 1.0045, norm:1.0356, tok/sec: 103044.85, flops:90.23, batch-reuse:1
@ 1908 train 6.1668 , allloss: 6.1829, dt: 1268.68ms, fracRes: 0.5790, norm(attn): 0.0845, norm(output): 0.4121, norm(x): 1.2205, norm(y): 1.0045, norm:0.9906, tok/sec: 103313.59, flops:90.47, batch-reuse:1
@ 1909 train 6.1936 , allloss: 6.2094, dt: 1285.53ms, fracRes: 0.5757, norm(attn): 0.0879, norm(output): 0.4160, norm(x): 1.2228, norm(y): 1.0045, norm:1.3591, tok/sec: 101959.21, flops:89.28, batch-reuse:1
@ 1910 train 6.1766 , allloss: 6.1926, dt: 1293.97ms, fracRes: 0.5745, norm(attn): 0.0903, norm(output): 0.4180, norm(x): 1.2204, norm(y): 1.0045, norm:0.9556, tok/sec: 101294.74, flops:88.70, batch-reuse:1
@ 1911 train 6.0788 , allloss: 6.0949, dt: 1271.77ms, fracRes: 0.5750, norm(attn): 0.0898, norm(output): 0.4160, norm(x): 1.2238, norm(y): 1.0044, norm:1.1193, tok/sec: 103062.89, flops:90.25, batch-reuse:1
@ 1912 train 6.1174 , allloss: 6.1332, dt: 1293.11ms, fracRes: 0.5776, norm(attn): 0.0845, norm(output): 0.4121, norm(x): 1.2195, norm(y): 1.0044, norm:0.8565, tok/sec: 101361.95, flops:88.76, batch-reuse:1
@ 1913 train 6.1712 , allloss: 6.1870, dt: 1278.93ms, fracRes: 0.5810, norm(attn): 0.0796, norm(output): 0.4062, norm(x): 1.2194, norm(y): 1.0045, norm:1.0044, tok/sec: 102485.87, flops:89.75, batch-reuse:1
@ 1914 train 6.1225 , allloss: 6.1381, dt: 1263.30ms, fracRes: 0.5833, norm(attn): 0.0791, norm(output): 0.4043, norm(x): 1.2251, norm(y): 1.0044, norm:1.3157, tok/sec: 103753.59, flops:90.86, batch-reuse:1
@ 1915 train 6.1005 , allloss: 6.1159, dt: 1281.26ms, fracRes: 0.5835, norm(attn): 0.0776, norm(output): 0.4062, norm(x): 1.2285, norm(y): 1.0045, norm:1.3653, tok/sec: 102299.34, flops:89.58, batch-reuse:1
@ 1916 train 6.2811 , allloss: 6.2965, dt: 1283.55ms, fracRes: 0.5813, norm(attn): 0.0806, norm(output): 0.4062, norm(x): 1.2268, norm(y): 1.0045, norm:1.3060, tok/sec: 102116.57, flops:89.42, batch-reuse:1
@ 1917 train 6.1771 , allloss: 6.1932, dt: 1275.32ms, fracRes: 0.5756, norm(attn): 0.0854, norm(output): 0.4121, norm(x): 1.2156, norm(y): 1.0045, norm:0.9029, tok/sec: 102775.62, flops:90.00, batch-reuse:1
@ 1918 train 6.1447 , allloss: 6.1620, dt: 1262.26ms, fracRes: 0.5696, norm(attn): 0.0923, norm(output): 0.4199, norm(x): 1.2086, norm(y): 1.0044, norm:0.9495, tok/sec: 103839.09, flops:90.93, batch-reuse:1
@ 1919 train 6.1448 , allloss: 6.1649, dt: 1290.79ms, fracRes: 0.5754, norm(attn): 0.0889, norm(output): 0.4141, norm(x): 1.2126, norm(y): 1.0044, norm:0.9149, tok/sec: 101543.78, flops:88.92, batch-reuse:1
@ 1920 train 6.0893 , allloss: 6.1053, dt: 1268.78ms, fracRes: 0.5802, norm(attn): 0.0811, norm(output): 0.4082, norm(x): 1.2256, norm(y): 1.0045, norm:1.0221, tok/sec: 103305.77, flops:90.46, batch-reuse:1
@ 1921 train 6.1691 , allloss: 6.1847, dt: 1268.41ms, fracRes: 0.5842, norm(attn): 0.0786, norm(output): 0.4062, norm(x): 1.2290, norm(y): 1.0045, norm:0.7333, tok/sec: 103335.31, flops:90.49, batch-reuse:1
@ 1922 train 6.0839 , allloss: 6.0996, dt: 1276.07ms, fracRes: 0.5823, norm(attn): 0.0796, norm(output): 0.4062, norm(x): 1.2261, norm(y): 1.0045, norm:0.6876, tok/sec: 102715.67, flops:89.95, batch-reuse:1
@ 1923 train 6.1798 , allloss: 6.1967, dt: 1275.92ms, fracRes: 0.5807, norm(attn): 0.0825, norm(output): 0.4062, norm(x): 1.2122, norm(y): 1.0045, norm:0.8587, tok/sec: 102727.68, flops:89.96, batch-reuse:1
@ 1924 train 6.1705 , allloss: 6.1868, dt: 1296.85ms, fracRes: 0.5785, norm(attn): 0.0845, norm(output): 0.4082, norm(x): 1.2162, norm(y): 1.0045, norm:0.8553, tok/sec: 101069.31, flops:88.50, batch-reuse:1
@ 1925 train 6.1792 , allloss: 6.1958, dt: 1271.73ms, fracRes: 0.5775, norm(attn): 0.0869, norm(output): 0.4082, norm(x): 1.2157, norm(y): 1.0045, norm:0.9244, tok/sec: 103065.75, flops:90.25, batch-reuse:1
@ 1926 train 6.1605 , allloss: 6.1770, dt: 1258.96ms, fracRes: 0.5781, norm(attn): 0.0869, norm(output): 0.4082, norm(x): 1.2214, norm(y): 1.0045, norm:0.9077, tok/sec: 104111.19, flops:91.17, batch-reuse:1
@ 1927 train 6.2000 , allloss: 6.2157, dt: 1268.22ms, fracRes: 0.5786, norm(attn): 0.0859, norm(output): 0.4102, norm(x): 1.2221, norm(y): 1.0045, norm:0.8636, tok/sec: 103351.29, flops:90.50, batch-reuse:1
@ 1928 train 6.1058 , allloss: 6.1213, dt: 1289.02ms, fracRes: 0.5797, norm(attn): 0.0845, norm(output): 0.4082, norm(x): 1.2193, norm(y): 1.0046, norm:1.0232, tok/sec: 101683.39, flops:89.04, batch-reuse:1
@ 1929 train 6.0949 , allloss: 6.1104, dt: 1266.70ms, fracRes: 0.5822, norm(attn): 0.0820, norm(output): 0.4062, norm(x): 1.2261, norm(y): 1.0046, norm:0.8594, tok/sec: 103475.01, flops:90.61, batch-reuse:1
@ 1930 train 6.0871 , allloss: 6.1035, dt: 1291.75ms, fracRes: 0.5840, norm(attn): 0.0811, norm(output): 0.4062, norm(x): 1.2249, norm(y): 1.0046, norm:0.9692, tok/sec: 101468.76, flops:88.85, batch-reuse:1
@ 1931 train 6.1825 , allloss: 6.1983, dt: 1266.53ms, fracRes: 0.5834, norm(attn): 0.0806, norm(output): 0.4062, norm(x): 1.2242, norm(y): 1.0045, norm:1.1518, tok/sec: 103488.80, flops:90.62, batch-reuse:1
@ 1932 train 6.1393 , allloss: 6.1562, dt: 1275.47ms, fracRes: 0.5797, norm(attn): 0.0850, norm(output): 0.4062, norm(x): 1.2142, norm(y): 1.0045, norm:1.2650, tok/sec: 102763.57, flops:89.99, batch-reuse:1
@ 1933 train 6.2120 , allloss: 6.2292, dt: 1282.29ms, fracRes: 0.5769, norm(attn): 0.0864, norm(output): 0.4062, norm(x): 1.2063, norm(y): 1.0045, norm:1.0467, tok/sec: 102217.34, flops:89.51, batch-reuse:1
@ 1934 train 6.2403 , allloss: 6.2588, dt: 1298.72ms, fracRes: 0.5766, norm(attn): 0.0884, norm(output): 0.4082, norm(x): 1.2037, norm(y): 1.0045, norm:1.6280, tok/sec: 100923.92, flops:88.38, batch-reuse:1
@ 1935 train 6.0895 , allloss: 6.1068, dt: 1302.01ms, fracRes: 0.5775, norm(attn): 0.0874, norm(output): 0.4082, norm(x): 1.2126, norm(y): 1.0046, norm:1.1058, tok/sec: 100669.00, flops:88.15, batch-reuse:1
@ 1936 train 6.1254 , allloss: 6.1423, dt: 1297.09ms, fracRes: 0.5778, norm(attn): 0.0869, norm(output): 0.4062, norm(x): 1.2110, norm(y): 1.0045, norm:1.5875, tok/sec: 101050.51, flops:88.49, batch-reuse:1
@ 1937 train 6.0813 , allloss: 6.0976, dt: 1273.47ms, fracRes: 0.5808, norm(attn): 0.0830, norm(output): 0.4062, norm(x): 1.2142, norm(y): 1.0046, norm:1.0101, tok/sec: 102925.22, flops:90.13, batch-reuse:1
@ 1938 train 6.1360 , allloss: 6.1529, dt: 1274.30ms, fracRes: 0.5848, norm(attn): 0.0815, norm(output): 0.4043, norm(x): 1.2258, norm(y): 1.0046, norm:1.4826, tok/sec: 102857.65, flops:90.07, batch-reuse:1
@ 1939 train 6.1558 , allloss: 6.1717, dt: 1272.06ms, fracRes: 0.5828, norm(attn): 0.0830, norm(output): 0.4062, norm(x): 1.2247, norm(y): 1.0046, norm:1.0697, tok/sec: 103039.19, flops:90.23, batch-reuse:1
@ 1940 train 6.2724 , allloss: 6.2888, dt: 1258.99ms, fracRes: 0.5787, norm(attn): 0.0874, norm(output): 0.4062, norm(x): 1.2114, norm(y): 1.0045, norm:1.3922, tok/sec: 104108.90, flops:91.17, batch-reuse:1
@ 1941 train 6.1527 , allloss: 6.1692, dt: 1263.23ms, fracRes: 0.5744, norm(attn): 0.0894, norm(output): 0.4082, norm(x): 1.2109, norm(y): 1.0045, norm:1.1924, tok/sec: 103759.66, flops:90.86, batch-reuse:1
@ 1942 train 6.0720 , allloss: 6.0875, dt: 1273.49ms, fracRes: 0.5783, norm(attn): 0.0864, norm(output): 0.4082, norm(x): 1.2247, norm(y): 1.0045, norm:1.0603, tok/sec: 102923.74, flops:90.13, batch-reuse:1
@ 1943 train 6.0607 , allloss: 6.0759, dt: 1281.82ms, fracRes: 0.5844, norm(attn): 0.0801, norm(output): 0.4023, norm(x): 1.2358, norm(y): 1.0046, norm:1.1363, tok/sec: 102254.26, flops:89.54, batch-reuse:1
@ 1944 train 6.0912 , allloss: 6.1069, dt: 1252.18ms, fracRes: 0.5865, norm(attn): 0.0801, norm(output): 0.4043, norm(x): 1.2366, norm(y): 1.0046, norm:1.2162, tok/sec: 104674.68, flops:91.66, batch-reuse:1
@ 1945 train 6.0545 , allloss: 6.0702, dt: 1263.44ms, fracRes: 0.5844, norm(attn): 0.0811, norm(output): 0.4043, norm(x): 1.2266, norm(y): 1.0046, norm:0.8301, tok/sec: 103741.88, flops:90.85, batch-reuse:1
@ 1946 train 6.1100 , allloss: 6.1256, dt: 1270.75ms, fracRes: 0.5802, norm(attn): 0.0859, norm(output): 0.4062, norm(x): 1.2179, norm(y): 1.0045, norm:1.0499, tok/sec: 103145.25, flops:90.32, batch-reuse:1
@ 1947 train 6.1768 , allloss: 6.1929, dt: 1279.93ms, fracRes: 0.5759, norm(attn): 0.0903, norm(output): 0.4102, norm(x): 1.2160, norm(y): 1.0045, norm:0.8481, tok/sec: 102405.55, flops:89.68, batch-reuse:1
@ 1948 train 6.0504 , allloss: 6.0674, dt: 1271.02ms, fracRes: 0.5758, norm(attn): 0.0918, norm(output): 0.4082, norm(x): 1.2114, norm(y): 1.0045, norm:0.9155, tok/sec: 103123.36, flops:90.30, batch-reuse:1
@ 1949 train 6.0658 , allloss: 6.0819, dt: 1268.29ms, fracRes: 0.5792, norm(attn): 0.0869, norm(output): 0.4062, norm(x): 1.2207, norm(y): 1.0045, norm:0.8756, tok/sec: 103345.66, flops:90.50, batch-reuse:1
@ 1950 train 6.1609 , allloss: 6.1763, dt: 1274.87ms, fracRes: 0.5816, norm(attn): 0.0845, norm(output): 0.4062, norm(x): 1.2228, norm(y): 1.0045, norm:0.7255, tok/sec: 102812.27, flops:90.03, batch-reuse:1
@ 1951 train 6.0973 , allloss: 6.1125, dt: 1262.88ms, fracRes: 0.5809, norm(attn): 0.0845, norm(output): 0.4062, norm(x): 1.2182, norm(y): 1.0046, norm:0.8615, tok/sec: 103788.28, flops:90.89, batch-reuse:1
@ 1952 train 6.0680 , allloss: 6.0847, dt: 1259.78ms, fracRes: 0.5829, norm(attn): 0.0830, norm(output): 0.4043, norm(x): 1.2176, norm(y): 1.0046, norm:0.9374, tok/sec: 104043.82, flops:91.11, batch-reuse:1
@ 1953 train 6.1068 , allloss: 6.1236, dt: 1268.25ms, fracRes: 0.5810, norm(attn): 0.0850, norm(output): 0.4043, norm(x): 1.2125, norm(y): 1.0045, norm:1.0494, tok/sec: 103348.34, flops:90.50, batch-reuse:1
@ 1954 train 6.0422 , allloss: 6.0583, dt: 1299.51ms, fracRes: 0.5786, norm(attn): 0.0859, norm(output): 0.4062, norm(x): 1.2122, norm(y): 1.0046, norm:0.9751, tok/sec: 100862.91, flops:88.32, batch-reuse:1
@ 1955 train 6.0729 , allloss: 6.0892, dt: 1255.91ms, fracRes: 0.5781, norm(attn): 0.0874, norm(output): 0.4062, norm(x): 1.2066, norm(y): 1.0045, norm:0.9545, tok/sec: 104363.90, flops:91.39, batch-reuse:1
@ 1956 train 5.9522 , allloss: 5.9684, dt: 1275.50ms, fracRes: 0.5761, norm(attn): 0.0884, norm(output): 0.4062, norm(x): 1.2090, norm(y): 1.0046, norm:0.9610, tok/sec: 102761.59, flops:89.99, batch-reuse:1
@ 1957 train 6.0770 , allloss: 6.0932, dt: 1279.65ms, fracRes: 0.5775, norm(attn): 0.0874, norm(output): 0.4043, norm(x): 1.2102, norm(y): 1.0045, norm:1.2974, tok/sec: 102427.72, flops:89.69, batch-reuse:1
@ 1958 train 6.0993 , allloss: 6.1146, dt: 1272.77ms, fracRes: 0.5810, norm(attn): 0.0845, norm(output): 0.4043, norm(x): 1.2151, norm(y): 1.0046, norm:1.0451, tok/sec: 102981.54, flops:90.18, batch-reuse:1
@ 1959 train 6.0152 , allloss: 6.0301, dt: 1287.67ms, fracRes: 0.5840, norm(attn): 0.0820, norm(output): 0.4004, norm(x): 1.2215, norm(y): 1.0046, norm:0.7965, tok/sec: 101789.82, flops:89.14, batch-reuse:1
@ 1960 train 5.9970 , allloss: 6.0123, dt: 1266.61ms, fracRes: 0.5815, norm(attn): 0.0840, norm(output): 0.4004, norm(x): 1.2147, norm(y): 1.0046, norm:0.8333, tok/sec: 103482.49, flops:90.62, batch-reuse:1
@ 1961 train 6.1355 , allloss: 6.1516, dt: 1261.47ms, fracRes: 0.5795, norm(attn): 0.0859, norm(output): 0.4004, norm(x): 1.2067, norm(y): 1.0046, norm:0.9992, tok/sec: 103903.89, flops:90.99, batch-reuse:1
@ 1962 train 5.9922 , allloss: 6.0079, dt: 1270.59ms, fracRes: 0.5786, norm(attn): 0.0859, norm(output): 0.4043, norm(x): 1.2131, norm(y): 1.0046, norm:1.1584, tok/sec: 103158.43, flops:90.33, batch-reuse:1
@ 1963 train 6.1692 , allloss: 6.1864, dt: 1280.32ms, fracRes: 0.5770, norm(attn): 0.0908, norm(output): 0.4043, norm(x): 1.2081, norm(y): 1.0045, norm:1.7223, tok/sec: 102374.62, flops:89.65, batch-reuse:1
@ 1964 train 6.1196 , allloss: 6.1368, dt: 1298.88ms, fracRes: 0.5780, norm(attn): 0.0874, norm(output): 0.4043, norm(x): 1.2103, norm(y): 1.0046, norm:0.9285, tok/sec: 100911.21, flops:88.37, batch-reuse:1
@ 1965 train 6.0485 , allloss: 6.0644, dt: 1273.43ms, fracRes: 0.5794, norm(attn): 0.0850, norm(output): 0.4043, norm(x): 1.2110, norm(y): 1.0046, norm:1.9635, tok/sec: 102928.55, flops:90.13, batch-reuse:1
@ 1966 train 6.1035 , allloss: 6.1191, dt: 1259.17ms, fracRes: 0.5838, norm(attn): 0.0811, norm(output): 0.3965, norm(x): 1.2132, norm(y): 1.0046, norm:1.3604, tok/sec: 104093.88, flops:91.15, batch-reuse:1
@ 1967 train 6.0029 , allloss: 6.0186, dt: 1271.27ms, fracRes: 0.5886, norm(attn): 0.0786, norm(output): 0.3867, norm(x): 1.2235, norm(y): 1.0046, norm:1.2378, tok/sec: 103103.10, flops:90.29, batch-reuse:1
@ 1968 train 6.0577 , allloss: 6.0733, dt: 1268.92ms, fracRes: 0.5917, norm(attn): 0.0776, norm(output): 0.3828, norm(x): 1.2266, norm(y): 1.0047, norm:1.4473, tok/sec: 103294.18, flops:90.45, batch-reuse:1
@ 1969 train 6.0722 , allloss: 6.0877, dt: 1276.06ms, fracRes: 0.5871, norm(attn): 0.0811, norm(output): 0.3906, norm(x): 1.2165, norm(y): 1.0046, norm:0.9727, tok/sec: 102716.51, flops:89.95, batch-reuse:1
@ 1970 train 6.0347 , allloss: 6.0511, dt: 1273.00ms, fracRes: 0.5775, norm(attn): 0.0894, norm(output): 0.4062, norm(x): 1.2031, norm(y): 1.0045, norm:1.3514, tok/sec: 102962.75, flops:90.16, batch-reuse:1
@ 1971 train 6.0997 , allloss: 6.1174, dt: 1257.10ms, fracRes: 0.5713, norm(attn): 0.0947, norm(output): 0.4062, norm(x): 1.1926, norm(y): 1.0045, norm:1.1202, tok/sec: 104265.32, flops:91.30, batch-reuse:1
@ 1972 train 6.0806 , allloss: 6.0981, dt: 1259.95ms, fracRes: 0.5743, norm(attn): 0.0947, norm(output): 0.4062, norm(x): 1.1980, norm(y): 1.0045, norm:0.8525, tok/sec: 104029.91, flops:91.10, batch-reuse:1
@ 1973 train 6.0599 , allloss: 6.0761, dt: 1292.77ms, fracRes: 0.5821, norm(attn): 0.0854, norm(output): 0.4004, norm(x): 1.2169, norm(y): 1.0046, norm:0.7921, tok/sec: 101388.44, flops:88.78, batch-reuse:1
@ 1974 train 6.1276 , allloss: 6.1443, dt: 1288.16ms, fracRes: 0.5871, norm(attn): 0.0806, norm(output): 0.3945, norm(x): 1.2250, norm(y): 1.0046, norm:0.9713, tok/sec: 101751.12, flops:89.10, batch-reuse:1
@ 1975 train 6.0011 , allloss: 6.0170, dt: 1264.74ms, fracRes: 0.5892, norm(attn): 0.0801, norm(output): 0.3867, norm(x): 1.2245, norm(y): 1.0047, norm:0.8929, tok/sec: 103635.16, flops:90.75, batch-reuse:1
@ 1976 train 6.1386 , allloss: 6.1553, dt: 1271.70ms, fracRes: 0.5899, norm(attn): 0.0801, norm(output): 0.3906, norm(x): 1.2248, norm(y): 1.0046, norm:0.9450, tok/sec: 103068.71, flops:90.26, batch-reuse:1
@ 1977 train 6.0167 , allloss: 6.0324, dt: 1263.15ms, fracRes: 0.5894, norm(attn): 0.0801, norm(output): 0.3867, norm(x): 1.2321, norm(y): 1.0047, norm:0.9303, tok/sec: 103765.65, flops:90.87, batch-reuse:1
@ 1978 train 6.0777 , allloss: 6.0940, dt: 1299.38ms, fracRes: 0.5866, norm(attn): 0.0825, norm(output): 0.3965, norm(x): 1.2251, norm(y): 1.0046, norm:1.0311, tok/sec: 100872.92, flops:88.33, batch-reuse:1
@ 1979 train 6.0967 , allloss: 6.1139, dt: 1273.68ms, fracRes: 0.5838, norm(attn): 0.0864, norm(output): 0.4023, norm(x): 1.2206, norm(y): 1.0046, norm:1.4882, tok/sec: 102907.73, flops:90.11, batch-reuse:1
@ 1980 train 6.0684 , allloss: 6.0857, dt: 1283.15ms, fracRes: 0.5822, norm(attn): 0.0889, norm(output): 0.4023, norm(x): 1.2158, norm(y): 1.0046, norm:1.1865, tok/sec: 102148.70, flops:89.45, batch-reuse:1
@ 1981 train 6.0401 , allloss: 6.0577, dt: 1285.12ms, fracRes: 0.5806, norm(attn): 0.0903, norm(output): 0.4023, norm(x): 1.2073, norm(y): 1.0046, norm:1.4174, tok/sec: 101992.33, flops:89.31, batch-reuse:1
@ 1982 train 5.9646 , allloss: 5.9811, dt: 1294.73ms, fracRes: 0.5802, norm(attn): 0.0908, norm(output): 0.4043, norm(x): 1.2129, norm(y): 1.0046, norm:1.1577, tok/sec: 101234.66, flops:88.65, batch-reuse:1
@ 1983 train 6.0515 , allloss: 6.0679, dt: 1261.73ms, fracRes: 0.5828, norm(attn): 0.0879, norm(output): 0.3965, norm(x): 1.2125, norm(y): 1.0046, norm:1.2958, tok/sec: 103882.61, flops:90.97, batch-reuse:1
@ 1984 train 5.9750 , allloss: 5.9919, dt: 1259.00ms, fracRes: 0.5868, norm(attn): 0.0854, norm(output): 0.3867, norm(x): 1.2148, norm(y): 1.0047, norm:0.9791, tok/sec: 104107.98, flops:91.17, batch-reuse:1
@ 1985 train 6.0150 , allloss: 6.0310, dt: 1284.23ms, fracRes: 0.5877, norm(attn): 0.0840, norm(output): 0.3848, norm(x): 1.2129, norm(y): 1.0047, norm:0.7587, tok/sec: 102062.43, flops:89.37, batch-reuse:1
@ 1986 train 6.0989 , allloss: 6.1153, dt: 1277.86ms, fracRes: 0.5862, norm(attn): 0.0850, norm(output): 0.3887, norm(x): 1.2105, norm(y): 1.0046, norm:1.0944, tok/sec: 102571.72, flops:89.82, batch-reuse:1
@ 1987 train 6.0947 , allloss: 6.1115, dt: 1253.77ms, fracRes: 0.5848, norm(attn): 0.0864, norm(output): 0.3926, norm(x): 1.2076, norm(y): 1.0046, norm:1.0121, tok/sec: 104542.61, flops:91.55, batch-reuse:1
@ 1988 train 6.0112 , allloss: 6.0271, dt: 1251.93ms, fracRes: 0.5829, norm(attn): 0.0869, norm(output): 0.3984, norm(x): 1.2169, norm(y): 1.0046, norm:1.1359, tok/sec: 104696.09, flops:91.68, batch-reuse:1
@ 1989 train 6.0497 , allloss: 6.0666, dt: 1257.78ms, fracRes: 0.5797, norm(attn): 0.0918, norm(output): 0.4043, norm(x): 1.2076, norm(y): 1.0046, norm:0.7977, tok/sec: 104208.72, flops:91.25, batch-reuse:1
@ 1990 train 6.0690 , allloss: 6.0858, dt: 1315.85ms, fracRes: 0.5793, norm(attn): 0.0918, norm(output): 0.4023, norm(x): 1.2070, norm(y): 1.0046, norm:1.1329, tok/sec: 99610.06, flops:87.23, batch-reuse:1
@ 1991 train 5.9953 , allloss: 6.0114, dt: 1325.39ms, fracRes: 0.5799, norm(attn): 0.0894, norm(output): 0.4043, norm(x): 1.2125, norm(y): 1.0046, norm:0.8558, tok/sec: 98893.18, flops:86.60, batch-reuse:1
@ 1992 train 6.0097 , allloss: 6.0260, dt: 1310.09ms, fracRes: 0.5806, norm(attn): 0.0874, norm(output): 0.4004, norm(x): 1.2135, norm(y): 1.0046, norm:0.7537, tok/sec: 100047.72, flops:87.61, batch-reuse:1
@ 1993 train 5.9845 , allloss: 6.0008, dt: 1274.52ms, fracRes: 0.5825, norm(attn): 0.0850, norm(output): 0.3945, norm(x): 1.2068, norm(y): 1.0047, norm:1.0837, tok/sec: 102840.37, flops:90.06, batch-reuse:1
@ 1994 train 6.0187 , allloss: 6.0350, dt: 1268.65ms, fracRes: 0.5836, norm(attn): 0.0845, norm(output): 0.3945, norm(x): 1.2088, norm(y): 1.0047, norm:0.8093, tok/sec: 103316.41, flops:90.47, batch-reuse:1
@ 1995 train 5.9815 , allloss: 5.9974, dt: 1268.19ms, fracRes: 0.5831, norm(attn): 0.0835, norm(output): 0.3945, norm(x): 1.2138, norm(y): 1.0046, norm:0.7059, tok/sec: 103353.28, flops:90.50, batch-reuse:1
@ 1996 train 6.0443 , allloss: 6.0603, dt: 1254.81ms, fracRes: 0.5820, norm(attn): 0.0850, norm(output): 0.3945, norm(x): 1.2110, norm(y): 1.0046, norm:0.8374, tok/sec: 104455.75, flops:91.47, batch-reuse:1
@ 1997 train 5.9341 , allloss: 5.9505, dt: 1277.78ms, fracRes: 0.5799, norm(attn): 0.0869, norm(output): 0.3984, norm(x): 1.2054, norm(y): 1.0046, norm:1.0250, tok/sec: 102578.25, flops:89.83, batch-reuse:1
@ 1998 train 5.9732 , allloss: 5.9893, dt: 1297.87ms, fracRes: 0.5790, norm(attn): 0.0894, norm(output): 0.3984, norm(x): 1.2069, norm(y): 1.0046, norm:0.9177, tok/sec: 100990.15, flops:88.44, batch-reuse:1
@ 1999 train 5.9399 , allloss: 5.9556, dt: 1257.88ms, fracRes: 0.5813, norm(attn): 0.0874, norm(output): 0.3965, norm(x): 1.2113, norm(y): 1.0047, norm:0.8546, tok/sec: 104200.76, flops:91.25, batch-reuse:1
@ 2000 val 6.0831
@ 2000 train 5.9697 , allloss: 5.9854, dt: 2037.71ms, fracRes: 0.5836, norm(attn): 0.0859, norm(output): 0.3906, norm(x): 1.2160, norm(y): 1.0047, norm:0.9493, tok/sec: 64323.26, flops:56.33, batch-reuse:1
@ 2001 train 6.0483 , allloss: 6.0647, dt: 1303.00ms, fracRes: 0.5856, norm(attn): 0.0850, norm(output): 0.3867, norm(x): 1.2116, norm(y): 1.0047, norm:1.0496, tok/sec: 100592.19, flops:88.09, batch-reuse:1
@ 2002 train 6.0055 , allloss: 6.0217, dt: 1287.12ms, fracRes: 0.5847, norm(attn): 0.0854, norm(output): 0.3867, norm(x): 1.2140, norm(y): 1.0046, norm:0.9982, tok/sec: 101833.35, flops:89.17, batch-reuse:1
@ 2003 train 6.0612 , allloss: 6.0772, dt: 1264.05ms, fracRes: 0.5831, norm(attn): 0.0864, norm(output): 0.3945, norm(x): 1.2064, norm(y): 1.0047, norm:1.0509, tok/sec: 103692.02, flops:90.80, batch-reuse:1
@ 2004 train 6.0577 , allloss: 6.0744, dt: 1282.33ms, fracRes: 0.5831, norm(attn): 0.0874, norm(output): 0.3926, norm(x): 1.2069, norm(y): 1.0047, norm:1.8257, tok/sec: 102213.67, flops:89.51, batch-reuse:1
@ 2005 train 5.9196 , allloss: 5.9359, dt: 1289.31ms, fracRes: 0.5835, norm(attn): 0.0889, norm(output): 0.3926, norm(x): 1.2074, norm(y): 1.0048, norm:1.0439, tok/sec: 101660.79, flops:89.02, batch-reuse:1
@ 2006 train 6.0848 , allloss: 6.1017, dt: 1271.14ms, fracRes: 0.5835, norm(attn): 0.0903, norm(output): 0.3945, norm(x): 1.2059, norm(y): 1.0047, norm:1.5262, tok/sec: 103114.08, flops:90.30, batch-reuse:1
@ 2007 train 5.9529 , allloss: 5.9686, dt: 1259.90ms, fracRes: 0.5821, norm(attn): 0.0884, norm(output): 0.3867, norm(x): 1.2047, norm(y): 1.0047, norm:1.4092, tok/sec: 104033.49, flops:91.10, batch-reuse:1
@ 2008 train 5.9583 , allloss: 5.9743, dt: 1269.10ms, fracRes: 0.5836, norm(attn): 0.0864, norm(output): 0.3867, norm(x): 1.2049, norm(y): 1.0047, norm:0.9240, tok/sec: 103279.84, flops:90.44, batch-reuse:1
@ 2009 train 5.9678 , allloss: 5.9840, dt: 1277.48ms, fracRes: 0.5847, norm(attn): 0.0859, norm(output): 0.3867, norm(x): 1.2055, norm(y): 1.0047, norm:1.1915, tok/sec: 102601.66, flops:89.85, batch-reuse:1
@ 2010 train 5.9863 , allloss: 6.0025, dt: 1310.94ms, fracRes: 0.5838, norm(attn): 0.0859, norm(output): 0.3867, norm(x): 1.2114, norm(y): 1.0047, norm:0.8654, tok/sec: 99983.60, flops:87.55, batch-reuse:1
@ 2011 train 6.0214 , allloss: 6.0391, dt: 1287.54ms, fracRes: 0.5839, norm(attn): 0.0889, norm(output): 0.3867, norm(x): 1.1978, norm(y): 1.0046, norm:1.4596, tok/sec: 101800.69, flops:89.15, batch-reuse:1
@ 2012 train 5.9566 , allloss: 5.9732, dt: 1254.53ms, fracRes: 0.5833, norm(attn): 0.0889, norm(output): 0.3867, norm(x): 1.2039, norm(y): 1.0046, norm:0.8980, tok/sec: 104478.97, flops:91.49, batch-reuse:1
@ 2013 train 5.9827 , allloss: 5.9985, dt: 1269.90ms, fracRes: 0.5841, norm(attn): 0.0864, norm(output): 0.3867, norm(x): 1.2047, norm(y): 1.0047, norm:1.3512, tok/sec: 103214.36, flops:90.38, batch-reuse:1
@ 2014 train 5.9539 , allloss: 5.9701, dt: 1254.03ms, fracRes: 0.5829, norm(attn): 0.0879, norm(output): 0.3848, norm(x): 1.2007, norm(y): 1.0047, norm:1.1749, tok/sec: 104520.59, flops:91.53, batch-reuse:1
@ 2015 train 5.9227 , allloss: 5.9390, dt: 1283.61ms, fracRes: 0.5837, norm(attn): 0.0874, norm(output): 0.3828, norm(x): 1.2043, norm(y): 1.0047, norm:0.9754, tok/sec: 102111.68, flops:89.42, batch-reuse:1
@ 2016 train 5.9639 , allloss: 5.9810, dt: 1271.04ms, fracRes: 0.5843, norm(attn): 0.0859, norm(output): 0.3848, norm(x): 1.2081, norm(y): 1.0047, norm:1.5869, tok/sec: 103122.07, flops:90.30, batch-reuse:1
@ 2017 train 5.9995 , allloss: 6.0169, dt: 1285.10ms, fracRes: 0.5855, norm(attn): 0.0874, norm(output): 0.3828, norm(x): 1.2069, norm(y): 1.0047, norm:0.9401, tok/sec: 101993.60, flops:89.31, batch-reuse:1
@ 2018 train 6.0370 , allloss: 6.0538, dt: 1274.35ms, fracRes: 0.5852, norm(attn): 0.0874, norm(output): 0.3828, norm(x): 1.2083, norm(y): 1.0047, norm:1.5863, tok/sec: 102853.68, flops:90.07, batch-reuse:1
@ 2019 train 6.0407 , allloss: 6.0578, dt: 1297.11ms, fracRes: 0.5854, norm(attn): 0.0874, norm(output): 0.3789, norm(x): 1.2024, norm(y): 1.0047, norm:1.2921, tok/sec: 101048.95, flops:88.49, batch-reuse:1
@ 2020 train 5.9302 , allloss: 5.9461, dt: 1291.58ms, fracRes: 0.5851, norm(attn): 0.0869, norm(output): 0.3809, norm(x): 1.2030, norm(y): 1.0048, norm:1.4287, tok/sec: 101481.57, flops:88.87, batch-reuse:1
@ 2021 train 5.9553 , allloss: 5.9710, dt: 1317.51ms, fracRes: 0.5839, norm(attn): 0.0884, norm(output): 0.3828, norm(x): 1.2042, norm(y): 1.0047, norm:1.2605, tok/sec: 99484.61, flops:87.12, batch-reuse:1
@ 2022 train 6.0227 , allloss: 6.0390, dt: 1300.12ms, fracRes: 0.5829, norm(attn): 0.0894, norm(output): 0.3828, norm(x): 1.2068, norm(y): 1.0047, norm:1.2394, tok/sec: 100815.34, flops:88.28, batch-reuse:1
@ 2023 train 5.9964 , allloss: 6.0128, dt: 1281.96ms, fracRes: 0.5837, norm(attn): 0.0894, norm(output): 0.3828, norm(x): 1.2023, norm(y): 1.0047, norm:0.9505, tok/sec: 102243.19, flops:89.53, batch-reuse:1
@ 2024 train 5.8982 , allloss: 5.9147, dt: 1275.66ms, fracRes: 0.5809, norm(attn): 0.0908, norm(output): 0.3887, norm(x): 1.1971, norm(y): 1.0047, norm:1.1480, tok/sec: 102748.55, flops:89.98, batch-reuse:1
@ 2025 train 6.0079 , allloss: 6.0243, dt: 1268.23ms, fracRes: 0.5847, norm(attn): 0.0894, norm(output): 0.3828, norm(x): 1.2078, norm(y): 1.0047, norm:0.9466, tok/sec: 103350.19, flops:90.50, batch-reuse:1
@ 2026 train 6.0091 , allloss: 6.0259, dt: 1278.87ms, fracRes: 0.5855, norm(attn): 0.0879, norm(output): 0.3828, norm(x): 1.2147, norm(y): 1.0047, norm:1.1467, tok/sec: 102490.66, flops:89.75, batch-reuse:1
@ 2027 train 5.9590 , allloss: 5.9747, dt: 1268.73ms, fracRes: 0.5860, norm(attn): 0.0859, norm(output): 0.3789, norm(x): 1.2126, norm(y): 1.0048, norm:1.4838, tok/sec: 103309.77, flops:90.47, batch-reuse:1
@ 2028 train 6.2386 , allloss: 6.2553, dt: 1293.43ms, fracRes: 0.5900, norm(attn): 0.0854, norm(output): 0.3789, norm(x): 1.2067, norm(y): 1.0048, norm:1.4712, tok/sec: 101336.41, flops:88.74, batch-reuse:1
@ 2029 train 6.0684 , allloss: 6.0855, dt: 1263.10ms, fracRes: 0.5867, norm(attn): 0.0879, norm(output): 0.3809, norm(x): 1.1953, norm(y): 1.0047, norm:1.1171, tok/sec: 103769.98, flops:90.87, batch-reuse:1
@ 2030 train 5.8658 , allloss: 5.8821, dt: 1266.98ms, fracRes: 0.5834, norm(attn): 0.0918, norm(output): 0.3867, norm(x): 1.2010, norm(y): 1.0048, norm:1.1408, tok/sec: 103452.64, flops:90.59, batch-reuse:1
@ 2031 train 5.9045 , allloss: 5.9217, dt: 1247.77ms, fracRes: 0.5835, norm(attn): 0.0923, norm(output): 0.3867, norm(x): 1.2016, norm(y): 1.0048, norm:1.1733, tok/sec: 105045.01, flops:91.99, batch-reuse:1
@ 2032 train 5.8980 , allloss: 5.9140, dt: 1248.19ms, fracRes: 0.5856, norm(attn): 0.0884, norm(output): 0.3828, norm(x): 1.2116, norm(y): 1.0048, norm:1.0179, tok/sec: 105009.64, flops:91.96, batch-reuse:1
@ 2033 train 5.9348 , allloss: 5.9507, dt: 1270.39ms, fracRes: 0.5895, norm(attn): 0.0854, norm(output): 0.3789, norm(x): 1.2152, norm(y): 1.0048, norm:1.5900, tok/sec: 103174.71, flops:90.35, batch-reuse:1
@ 2034 train 5.8917 , allloss: 5.9075, dt: 1270.22ms, fracRes: 0.5895, norm(attn): 0.0845, norm(output): 0.3789, norm(x): 1.2180, norm(y): 1.0049, norm:0.8990, tok/sec: 103188.81, flops:90.36, batch-reuse:1
@ 2035 train 5.9433 , allloss: 5.9595, dt: 1293.90ms, fracRes: 0.5857, norm(attn): 0.0864, norm(output): 0.3809, norm(x): 1.2129, norm(y): 1.0048, norm:1.1278, tok/sec: 101299.98, flops:88.71, batch-reuse:1
@ 2036 train 5.8795 , allloss: 5.8956, dt: 1319.46ms, fracRes: 0.5823, norm(attn): 0.0908, norm(output): 0.3867, norm(x): 1.2074, norm(y): 1.0048, norm:0.9664, tok/sec: 99337.74, flops:86.99, batch-reuse:1
@ 2037 train 6.0053 , allloss: 6.0220, dt: 1297.63ms, fracRes: 0.5824, norm(attn): 0.0938, norm(output): 0.3867, norm(x): 1.2022, norm(y): 1.0048, norm:1.5070, tok/sec: 101009.09, flops:88.45, batch-reuse:1
@ 2038 train 5.9701 , allloss: 5.9867, dt: 1277.15ms, fracRes: 0.5856, norm(attn): 0.0908, norm(output): 0.3828, norm(x): 1.2092, norm(y): 1.0048, norm:1.1227, tok/sec: 102628.48, flops:89.87, batch-reuse:1
@ 2039 train 6.0456 , allloss: 6.0614, dt: 1303.35ms, fracRes: 0.5871, norm(attn): 0.0884, norm(output): 0.3789, norm(x): 1.2152, norm(y): 1.0048, norm:1.0227, tok/sec: 100565.28, flops:88.06, batch-reuse:1
@ 2040 train 6.0466 , allloss: 6.0626, dt: 1284.02ms, fracRes: 0.5877, norm(attn): 0.0859, norm(output): 0.3770, norm(x): 1.2209, norm(y): 1.0048, norm:1.4778, tok/sec: 102079.62, flops:89.39, batch-reuse:1
@ 2041 train 6.0598 , allloss: 6.0756, dt: 1273.14ms, fracRes: 0.5886, norm(attn): 0.0859, norm(output): 0.3789, norm(x): 1.2245, norm(y): 1.0048, norm:0.9605, tok/sec: 102951.43, flops:90.15, batch-reuse:1
@ 2042 train 6.1773 , allloss: 6.1940, dt: 1273.74ms, fracRes: 0.5894, norm(attn): 0.0859, norm(output): 0.3770, norm(x): 1.2200, norm(y): 1.0048, norm:1.5172, tok/sec: 102903.43, flops:90.11, batch-reuse:1
@ 2043 train 6.0118 , allloss: 6.0278, dt: 1261.87ms, fracRes: 0.5860, norm(attn): 0.0908, norm(output): 0.3828, norm(x): 1.2179, norm(y): 1.0047, norm:1.0562, tok/sec: 103871.52, flops:90.96, batch-reuse:1
@ 2044 train 6.1578 , allloss: 6.1733, dt: 1279.64ms, fracRes: 0.5849, norm(attn): 0.0923, norm(output): 0.3945, norm(x): 1.2247, norm(y): 1.0047, norm:1.2524, tok/sec: 102428.68, flops:89.70, batch-reuse:1
@ 2045 train 6.0792 , allloss: 6.0954, dt: 1278.06ms, fracRes: 0.5834, norm(attn): 0.0923, norm(output): 0.3906, norm(x): 1.2199, norm(y): 1.0048, norm:1.2322, tok/sec: 102555.36, flops:89.81, batch-reuse:1
@ 2046 train 6.1106 , allloss: 6.1271, dt: 1293.38ms, fracRes: 0.5840, norm(attn): 0.0938, norm(output): 0.3906, norm(x): 1.2189, norm(y): 1.0047, norm:1.0922, tok/sec: 101340.75, flops:88.74, batch-reuse:1
@ 2047 train 6.1344 , allloss: 6.1507, dt: 1289.97ms, fracRes: 0.5869, norm(attn): 0.0898, norm(output): 0.3867, norm(x): 1.2185, norm(y): 1.0048, norm:1.3017, tok/sec: 101608.68, flops:88.98, batch-reuse:1
@ 2048 train 6.0844 , allloss: 6.1005, dt: 1271.45ms, fracRes: 0.5896, norm(attn): 0.0859, norm(output): 0.3809, norm(x): 1.2201, norm(y): 1.0048, norm:1.0646, tok/sec: 103088.58, flops:90.27, batch-reuse:1
@ 2049 train 6.0909 , allloss: 6.1062, dt: 1265.19ms, fracRes: 0.5896, norm(attn): 0.0845, norm(output): 0.3789, norm(x): 1.2255, norm(y): 1.0048, norm:1.2116, tok/sec: 103598.81, flops:90.72, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0713,     0.9297,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5352,     0.1133,     0.3496,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2021,     0.2041,     0.3594,     0.2354,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0840,     0.0952,     0.5430,     0.2715,     0.0081,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1475,     0.0615,     0.0466,     0.0737,     0.4551,     0.2158,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0500,     0.4961,     0.2754,     0.1543,     0.0034,     0.0199,     0.0016,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0530,     0.3555,     0.2227,     0.0728,     0.0177,     0.0284,     0.0040,     0.2451,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1279,     0.0581,     0.1147,     0.1826,     0.0830,     0.0752,     0.1055,     0.1279,     0.1245,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0952,     0.0718,     0.0859,     0.0679,     0.0747,     0.0825,     0.1914,     0.1357,     0.1299,     0.0645,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0496,     0.1167,     0.3242,     0.1001,     0.0016,     0.0109,     0.0004,     0.1377,     0.0209,     0.2285,     0.0088,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0237,     0.0062,     0.0042,     0.0112,     0.1123,     0.0654,     0.6758,     0.0212,     0.0354,     0.0046,     0.0374,     0.0041,     0.0000,     0.0000,     0.0000],
        [    0.0087,     0.1152,     0.1084,     0.0199,     0.0008,     0.0041,     0.0002,     0.0649,     0.0074,     0.0903,     0.0008,     0.0598,     0.5195,     0.0000,     0.0000],
        [    0.0786,     0.0981,     0.0693,     0.0991,     0.0388,     0.0366,     0.0306,     0.0825,     0.0693,     0.1445,     0.0420,     0.0674,     0.1025,     0.0398,     0.0000],
        [    0.0183,     0.1104,     0.0747,     0.0334,     0.0013,     0.0038,     0.0002,     0.1006,     0.0025,     0.0864,     0.0010,     0.0967,     0.4688,     0.0010,     0.0011]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0010, -0.0118,  0.0067,  ..., -0.0344,  0.0199, -0.0036],
        [-0.0340,  0.0150, -0.0157,  ..., -0.0022,  0.0050,  0.0268],
        [ 0.0154,  0.0233, -0.0060,  ..., -0.0203,  0.0146, -0.0266],
        ...,
        [ 0.0145,  0.0160,  0.0158,  ..., -0.0295,  0.0112,  0.0180],
        [-0.0409,  0.0050, -0.0375,  ...,  0.0015, -0.0017, -0.0090],
        [-0.0221,  0.0142, -0.0289,  ..., -0.0177, -0.0130,  0.0167]], device='cuda:0', requires_grad=True)
K: tensor([ 1.2344,  0.1182, -1.2500, -0.2432, -0.3281,  1.3203,  0.6484,  0.7148,  0.4082,  0.4902,  1.1953, -0.4961, -1.2344,  0.5703,  0.1816, -0.4180,  0.3145, -0.4688,  0.4062,  0.8008,  0.1328,  0.2500,  0.7461, -0.8164,  0.7734,  1.0703, -1.2031, -0.1846,  1.3047, -0.4746,  1.2188,  0.1670,
        -0.2246, -1.2266,  1.2812,  1.3047, -1.1016, -0.2559, -1.3594, -1.7031,  0.0977, -0.9453, -0.8047,  0.9180, -1.0234,  0.7539, -0.5352,  1.5000, -0.4121, -0.4492,  0.7461, -1.0391, -1.2344,  0.8125,  0.6055,  0.0190, -0.2354, -0.1157,  1.4062, -0.1885,  0.0508, -0.2773,  0.4180,  0.5938],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0229, -0.0028, -0.0118,  ...,  0.0079, -0.0092, -0.0126],
        [ 0.0182, -0.0182, -0.0023,  ...,  0.0199,  0.0275, -0.0132],
        [-0.0434,  0.0471,  0.0122,  ..., -0.0344, -0.0271, -0.0197],
        ...,
        [ 0.0073,  0.0205,  0.0201,  ...,  0.0057,  0.0107,  0.0301],
        [ 0.0327, -0.0059,  0.0499,  ...,  0.0358,  0.0168,  0.0294],
        [ 0.0128, -0.0184,  0.0234,  ..., -0.0108,  0.0210, -0.0149]], device='cuda:0', requires_grad=True)
Q: tensor([    -0.7773,     -0.2832,     -0.3008,     -0.5703,      1.0234,     -0.7266,     -1.3828,      0.1768,     -0.1992,      0.5625,     -0.0830,     -0.4199,     -0.2715,     -1.2344,     -0.9336,     -1.0859,     -1.6641,      0.6133,     -0.3398,      0.5742,      0.5664,     -0.5547,
             0.0874,      0.4043,     -0.0669,     -0.7812,      0.8477,     -0.5586,     -1.1797,      1.5000,     -1.9609,      0.4785,     -0.1299,     -0.0002,     -0.7031,     -0.5469,      0.6484,      0.7070,     -0.0547,      2.7188,      0.3574,     -0.3418,      1.0156,      0.7539,
             0.2061,     -0.2480,      0.8047,     -1.3438,     -0.0918,      0.2520,     -2.5781,     -0.8203,      0.2598,     -1.0312,     -0.9961,     -1.2266,     -0.3262,     -0.6484,     -0.6328,     -1.2031,      1.6172,      0.9531,     -0.9844,      0.5742], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      2.5625,      1.3203,      1.2500,     -3.0781,     -0.8164,     -3.6562,      2.3281,     -1.5156,      1.0625,     -3.0000,      1.5703,      3.5000,     -2.5312,     -1.9453],
        [     0.0000,     -1.5547,     -0.4258,     -0.6914,      0.4746,      0.1777,      0.2852,     -0.2002,     -0.3750,     -0.3438,      0.1206,     -0.3574,     -0.2041,      0.5039,      0.7617],
        [     0.0000,      0.0077,      0.5742,      0.1504,     -1.3594,     -0.4473,     -1.6641,      2.1875,     -1.6641,     -0.0864,     -2.6406,      1.0938,      2.4531,     -1.9766,     -0.4121],
        [     0.0000,      0.1279,      1.8672,      1.1797,     -2.3281,     -1.2812,     -4.3750,      0.8086,     -1.1562,      1.8203,     -1.2422,      1.0469,      1.1484,     -1.8672,     -2.9219],
        [     0.0000,     -0.8711,     -1.1484,     -0.6914,      1.1250,      0.3848,      1.7109,     -1.0938,      0.5234,     -1.6484,      1.5312,     -0.9688,     -2.3438,      1.0547,      2.2656],
        [     0.0000,      2.2969,      1.7031,      1.1250,     -2.7031,     -0.9219,     -3.4688,      0.6875,     -1.5703,      1.6172,     -1.8125,      2.1562,      2.2031,     -2.2188,     -1.8828],
        [     0.0000,      1.9062,      1.4375,      0.3184,     -1.0938,     -0.6250,     -2.5938,      1.5312,      0.0947,      1.9219,     -1.5625,      1.2344,      2.3594,     -0.8711,     -2.3438],
        [     0.0000,     -0.7852,     -0.1060,      0.3574,     -0.4316,     -0.5312,     -0.1943,      0.0044,     -0.0273,      0.1631,     -0.4473,     -0.2637,     -0.5117,     -0.4258,     -0.2930],
        [     0.0000,     -0.2832,     -0.0996,     -0.3340,     -0.2402,     -0.1416,      0.7031,      0.3574,      0.3145,     -0.3887,     -0.0469,     -0.4570,      0.2793,      0.0967,      0.9258],
        [     0.0000,      0.8555,      1.8828,      0.7031,     -3.4062,     -1.5078,     -4.9062,      1.0234,     -0.8633,      1.5312,     -1.7266,      1.6719,      1.8516,     -2.2812,     -3.0781],
        [     0.0000,     -1.3438,     -1.7344,     -0.7422,      1.5547,      1.0156,      3.3594,     -0.1050,      0.4082,     -1.6406,      0.4590,     -1.7656,     -0.8984,      1.3359,      2.4844],
        [     0.0000,      2.5938,      2.5312,      0.8320,     -2.3438,     -0.7500,     -3.6406,      2.0156,     -0.1543,      2.3438,     -2.3594,      1.9297,      4.0938,     -1.6172,     -3.6094],
        [     0.0000,      0.2178,     -0.1279,      0.2285,     -0.7070,     -0.7617,     -0.9453,      0.0444,     -0.1260,      0.6094,     -0.6289,     -0.1592,      0.2637,     -0.6797,     -0.9180],
        [     0.0000,      1.7969,      1.3984,      0.5977,     -2.6719,     -1.5703,     -4.6562,      1.7031,     -2.0156,      1.5469,     -2.9219,      1.6562,      3.2344,     -2.9531,     -2.8594]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2789],
        [0.5685],
        [0.5608],
        [0.1092],
        [0.1170],
        [0.0907],
        [0.0853],
        [0.0701],
        [0.0659],
        [0.0433],
        [0.0216],
        [0.0320],
        [0.0332],
        [0.0356]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8828,     0.1177,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2871,     0.2695,     0.4453,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1455,     0.1177,     0.3594,     0.3789,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1099,     0.2314,     0.2793,     0.2969,     0.0820,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1270,     0.1611,     0.0427,     0.0791,     0.1011,     0.4883,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0679,     0.1396,     0.3535,     0.2344,     0.0518,     0.1006,     0.0520,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1455,     0.0977,     0.1182,     0.1514,     0.1206,     0.0515,     0.0693,     0.2461,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1309,     0.0957,     0.0593,     0.0830,     0.1387,     0.1602,     0.1104,     0.0566,     0.1660,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1455,     0.0596,     0.0310,     0.0942,     0.0840,     0.2217,     0.1118,     0.0282,     0.1855,     0.0391,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0227,     0.0093,     0.0006,     0.0032,     0.0396,     0.1279,     0.0322,     0.0004,     0.2178,     0.0004,     0.5469,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0210,     0.0320,     0.1211,     0.0698,     0.0113,     0.0120,     0.0157,     0.1055,     0.0048,     0.4141,     0.0032,     0.1895,     0.0000,     0.0000,     0.0000],
        [    0.0845,     0.0405,     0.0486,     0.0491,     0.0483,     0.0625,     0.0439,     0.1191,     0.0461,     0.1602,     0.0264,     0.1035,     0.1670,     0.0000,     0.0000],
        [    0.0579,     0.0781,     0.0693,     0.0781,     0.0569,     0.0669,     0.0708,     0.0537,     0.0649,     0.1030,     0.0957,     0.0835,     0.0601,     0.0618,     0.0000],
        [    0.0737,     0.0613,     0.0776,     0.0635,     0.0742,     0.0967,     0.0483,     0.0510,     0.0400,     0.1240,     0.0251,     0.1338,     0.0669,     0.0317,     0.0317]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0226, -0.0110, -0.0049,  ..., -0.0116, -0.0265,  0.0247],
        [ 0.0038,  0.0134,  0.0042,  ...,  0.0104,  0.0014, -0.0394],
        [ 0.0113,  0.0249,  0.0198,  ...,  0.0116,  0.0092,  0.0085],
        ...,
        [-0.0112,  0.0275,  0.0143,  ...,  0.0412, -0.0122, -0.0070],
        [-0.0165, -0.0122, -0.0054,  ..., -0.0097,  0.0058,  0.0119],
        [ 0.0212,  0.0343,  0.0177,  ...,  0.0106, -0.0268,  0.0175]], device='cuda:0', requires_grad=True)
K: tensor([ 0.3984,  0.2275,  0.3066, -0.1289, -0.1309, -0.5781, -0.5039, -0.0067,  0.1494,  0.6484,  0.1660,  0.1709, -0.2949,  0.1973,  0.6719, -0.3516,  0.7070, -0.0415, -1.0234, -0.2207,  0.5195,  0.4062,  0.0796, -0.5977,  0.1826,  0.3691, -0.7656,  0.0542, -0.0713,  0.0532,  0.9570, -0.2578,
        -0.0728, -0.4570, -0.2158,  0.2793,  0.7617,  0.3906, -0.3750,  0.6836,  0.4375, -0.6289,  0.1104, -0.4238, -0.7227,  1.1016, -0.2871, -1.0234,  0.4258, -1.2344, -1.0234,  0.2324,  0.4512, -0.5430,  1.3125, -0.1147,  0.9258, -0.2949,  0.9219,  0.6133,  0.0742,  0.7852,  0.5391, -0.7617],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0146, -0.0150, -0.0019,  ...,  0.0019,  0.0036, -0.0050],
        [ 0.0141,  0.0132, -0.0406,  ..., -0.0061, -0.0054, -0.0183],
        [ 0.0380,  0.0313,  0.0203,  ..., -0.0091,  0.0322,  0.0151],
        ...,
        [-0.0139, -0.0252,  0.0190,  ...,  0.0276, -0.0050, -0.0330],
        [ 0.0463,  0.0036, -0.0033,  ..., -0.0114,  0.0140,  0.0047],
        [ 0.0164, -0.0289, -0.0207,  ...,  0.0107, -0.0138,  0.0187]], device='cuda:0', requires_grad=True)
Q: tensor([-0.4395, -0.1099,  0.0535,  0.5430, -0.0737, -0.3965,  0.7500, -0.0796,  0.2109,  0.0103,  0.2451, -0.3379, -0.0615,  0.3203, -0.1924,  0.9492, -0.2852, -0.1465,  0.2324, -0.4570,  0.2422, -1.3203, -0.2090,  0.2432, -0.6250,  0.0232,  0.9961,  0.4004,  0.1338, -0.4258, -0.7031, -0.4395,
        -0.7969,  0.2734,  1.1719, -0.0850,  0.0325,  0.7461, -0.0535,  0.2148, -0.7734, -0.1699, -0.0884,  0.4004,  0.4980, -0.6602, -0.2158, -0.4102,  0.8203,  0.6797,  0.6016,  0.3535, -1.6484,  0.2012,  0.2656,  0.6797, -0.5117,  1.1094, -0.8398,  0.3730, -0.1885,  0.5547, -0.4648, -0.0182],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -2.0156, -2.7031, -1.7891, -0.4199,  0.1201, -0.8672, -2.3281,  0.0398, -2.6562, -0.7188, -1.6406, -1.0078,  0.3262, -1.2344],
        [ 0.0000, -0.0645,  0.4395,  0.2227, -0.5039, -0.1348, -0.4062,  0.6289, -1.0547,  1.6328, -2.0000,  1.1406,  0.9531, -1.4297, -0.6406],
        [ 0.0000, -0.2119,  0.9062,  0.9570, -0.4336,  0.0186, -0.0732,  0.0547, -0.8750,  1.1250, -1.7578,  1.3750,  0.1484, -1.1719, -0.1514],
        [ 0.0000,  0.7461,  0.9336,  0.9961, -0.2871, -0.5195, -0.2080,  1.7109, -0.5820,  2.1562, -0.3848,  1.3828,  1.0391, -0.6914,  0.2285],
        [ 0.0000,  0.2383, -1.0938, -0.4746, -0.2295,  1.3438,  0.4336, -1.2891,  0.5781, -0.1934,  0.4375, -0.5664,  0.1396,  0.6328, -0.4941],
        [ 0.0000,  0.7227,  1.6484,  1.2422, -0.2715,  0.3945, -0.2676,  1.3672, -0.7461,  3.0625, -2.2969,  2.4062,  1.1328, -1.5703, -0.1748],
        [ 0.0000, -0.4004, -0.2070,  0.0408, -0.1885, -1.0391, -0.7422,  0.5234, -0.7539,  0.8125, -1.0938,  0.7812,  0.3770, -1.0234, -0.1475],
        [ 0.0000, -0.3145, -0.7930, -0.4531,  0.0588,  0.1982, -0.1729, -0.8398,  0.2344, -0.7461,  0.6055, -0.5117, -0.4434,  0.3984, -0.4531],
        [ 0.0000, -0.8867, -1.5469, -0.4336, -0.5469,  0.4258, -0.2617, -1.6406,  0.2451, -1.3125,  0.6641, -0.3867, -0.3047,  0.8438, -0.2041],
        [ 0.0000, -0.8984, -3.6875, -1.9531,  0.5508,  1.7266,  0.3477, -4.0625,  2.2500, -3.9375,  3.1719, -2.7188, -1.5938,  3.2656, -1.0156],
        [ 0.0000,  0.4219,  1.7500,  1.2031, -0.6211, -0.5664, -0.2910,  1.6094, -1.4766,  2.9844, -1.8750,  2.2031,  1.2422, -1.9844,  0.2012],
        [ 0.0000, -0.7344, -0.5547, -0.5430, -0.5586, -0.2988, -0.6562,  0.3457, -0.6055,  0.6367, -1.1641,  0.2041,  0.6836, -0.7891, -0.3184],
        [ 0.0000,  0.3008,  0.1816,  0.3008, -0.0195,  0.1416,  0.1982, -0.0762,  0.1128,  0.5742,  0.5000,  0.3652,  0.0344,  0.0630, -0.0923],
        [ 0.0000, -0.1846,  0.0505, -0.1455,  0.0077,  0.2734, -0.4199, -0.3672, -0.6133,  0.5234, -1.0703,  0.5977, -0.0952, -0.8438, -0.8438]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7062],
        [0.4972],
        [0.3497],
        [0.1531],
        [0.1949],
        [0.1454],
        [0.1523],
        [0.0772],
        [0.1630],
        [0.0571],
        [0.0805],
        [0.0890],
        [0.0424],
        [0.0827]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0142,  0.0108,  0.0111,  ..., -0.0083, -0.0036, -0.0133],
        [ 0.0238, -0.0404, -0.0342,  ...,  0.0087, -0.0131, -0.0297],
        [ 0.0346, -0.0303,  0.0279,  ..., -0.0010, -0.0143,  0.0065],
        ...,
        [ 0.0417,  0.0022, -0.0251,  ..., -0.0122,  0.0151,  0.0167],
        [-0.0008,  0.0309, -0.0202,  ..., -0.0096, -0.0337, -0.0179],
        [ 0.0132, -0.0015,  0.0053,  ...,  0.0141, -0.0115,  0.0180]], device='cuda:0', requires_grad=True)
K: tensor([-2.9844, -2.3281, -2.2188, -1.4453, -2.6250,  0.7969, -1.9219,  2.5156, -2.8750, -3.5938,  1.6484, -2.9844, -2.8125, -2.3750, -2.5312,  1.1875,  2.4531,  2.5625, -3.8125,  2.2188,  2.1719,  2.5938, -1.7500, -2.1562,  2.7031,  2.1250, -1.8828, -2.4844,  2.9844,  2.7969,  2.6406,  3.1250,
        -3.0938,  1.5703,  2.3750, -3.2031, -2.5000, -2.0625,  2.2812,  1.2188, -0.0601, -2.4062, -2.3750,  2.6094,  2.3125,  2.9688, -3.0156, -1.8594,  2.3750,  2.4531, -1.9688, -1.3828,  3.2500,  2.3438,  2.6719, -2.5625, -2.4688, -2.7969, -3.0469, -2.4688, -3.3750, -2.0625,  3.5469,  1.6875],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0203,  0.0067,  0.0341,  ..., -0.0226,  0.0365, -0.0021],
        [ 0.0123,  0.0285,  0.0120,  ...,  0.0143,  0.0211, -0.0200],
        [-0.0055, -0.0041,  0.0218,  ..., -0.0208,  0.0471, -0.0160],
        ...,
        [-0.0154, -0.0051,  0.0118,  ..., -0.0241, -0.0010, -0.0030],
        [ 0.0201, -0.0236,  0.0200,  ...,  0.0299,  0.0130, -0.0072],
        [ 0.0369, -0.0331, -0.0186,  ...,  0.0184,  0.0263,  0.0097]], device='cuda:0', requires_grad=True)
Q: tensor([ 2.7031,  1.8125,  2.3281,  1.6719,  2.0312, -1.2266,  2.2500, -1.4062,  3.7344,  2.8125, -2.6250,  2.1562,  2.1250,  2.3594,  2.9375, -1.0156, -2.0781, -2.1250,  3.8125, -2.1250, -2.0312, -2.8594,  1.2812,  1.4375, -1.9609, -2.0625,  2.0781,  1.8984, -2.4375, -2.5938, -2.5781, -2.3438,
         1.8906, -2.2031, -2.6094,  1.5234,  1.6719,  0.4902, -1.0391, -0.0378,  0.0598,  2.8594,  1.7266, -1.9922, -1.3125, -2.9688,  2.2656,  2.5156, -2.4062, -2.2812,  2.9688,  1.7656, -2.5156, -2.4219, -3.2344,  1.8828,  1.8828,  3.1094,  3.5156,  2.2344,  3.2031,  2.2969, -2.5938, -1.1562],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000, -66.5000, -41.7500, -47.7500, -52.5000, -53.0000, -39.2500, -47.7500, -49.0000, -52.2500, -48.2500, -46.2500, -68.0000, -48.7500, -52.5000],
        [  0.0000, -43.5000, -27.5000, -31.6250, -33.7500, -34.5000, -25.6250, -31.1250, -31.7500, -34.2500, -31.5000, -30.5000, -44.5000, -31.6250, -34.7500],
        [  0.0000, -52.5000, -33.0000, -38.0000, -40.7500, -41.5000, -30.8750, -37.5000, -38.2500, -41.5000, -38.0000, -36.7500, -53.7500, -38.0000, -42.0000],
        [  0.0000, -48.7500, -30.5000, -35.0000, -38.2500, -39.0000, -28.7500, -35.0000, -36.0000, -38.2500, -35.7500, -34.0000, -50.0000, -36.0000, -38.5000],
        [  0.0000, -47.5000, -29.5000, -33.7500, -38.0000, -38.5000, -28.2500, -33.7500, -36.0000, -37.0000, -35.2500, -32.5000, -48.7500, -35.7500, -37.5000],
        [  0.0000, -34.5000, -21.3750, -24.7500, -27.3750, -27.8750, -20.6250, -24.2500, -26.0000, -26.7500, -25.6250, -23.7500, -35.2500, -25.8750, -27.5000],
        [  0.0000, -49.2500, -31.2500, -35.7500, -38.5000, -38.5000, -28.7500, -36.0000, -35.5000, -39.2500, -35.0000, -34.7500, -50.7500, -35.2500, -39.0000],
        [  0.0000, -42.2500, -26.0000, -29.8750, -34.0000, -34.2500, -25.1250, -30.2500, -32.2500, -32.7500, -31.6250, -28.8750, -43.5000, -32.0000, -33.2500],
        [  0.0000, -58.5000, -37.0000, -42.2500, -45.5000, -46.0000, -34.2500, -42.2500, -42.5000, -46.5000, -42.0000, -41.0000, -60.0000, -42.2500, -46.2500],
        [  0.0000, -41.7500, -25.8750, -29.6250, -33.5000, -34.0000, -24.8750, -29.6250, -31.6250, -32.2500, -31.1250, -28.6250, -42.7500, -31.6250, -33.0000],
        [  0.0000, -52.5000, -33.2500, -38.2500, -40.7500, -41.5000, -31.0000, -37.7500, -38.0000, -41.7500, -38.0000, -37.0000, -53.7500, -38.0000, -42.0000],
        [  0.0000, -70.0000, -44.0000, -50.5000, -55.2500, -55.5000, -41.0000, -50.5000, -51.2500, -55.2500, -50.5000, -48.7500, -72.0000, -51.2500, -55.2500],
        [  0.0000, -42.2500, -26.0000, -29.8750, -34.0000, -34.2500, -25.1250, -30.2500, -32.2500, -32.7500, -31.6250, -28.8750, -43.5000, -32.0000, -33.2500],
        [  0.0000, -54.5000, -34.5000, -39.5000, -42.7500, -43.2500, -32.2500, -39.0000, -40.0000, -43.0000, -39.7500, -38.2500, -55.7500, -39.7500, -43.7500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.],
        [1.]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5781,     0.4219,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5586,     0.2559,     0.1865,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4688,     0.2500,     0.1797,     0.1021,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2344,     0.1846,     0.1309,     0.1543,     0.2969,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4707,     0.1680,     0.1260,     0.0742,     0.0771,     0.0845,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7930,     0.0415,     0.1060,     0.0293,     0.0034,     0.0134,     0.0125,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1206,     0.1455,     0.1299,     0.1084,     0.0747,     0.0747,     0.0674,     0.2793,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1504,     0.0986,     0.0645,     0.0562,     0.1138,     0.1030,     0.0654,     0.2715,     0.0762,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0859,     0.0317,     0.0128,     0.0071,     0.0070,     0.0041,     0.0025,     0.8203,     0.0009,     0.0275,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2432,     0.0796,     0.0688,     0.0405,     0.0242,     0.0457,     0.0330,     0.3438,     0.0082,     0.1045,     0.0089,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1650,     0.0623,     0.0371,     0.0205,     0.0150,     0.0135,     0.0093,     0.5938,     0.0030,     0.0486,     0.0045,     0.0261,     0.0000,     0.0000,     0.0000],
        [    0.1016,     0.0420,     0.0256,     0.0159,     0.0099,     0.0096,     0.0067,     0.5664,     0.0020,     0.0447,     0.0034,     0.0214,     0.1494,     0.0000,     0.0000],
        [    0.0947,     0.0605,     0.0403,     0.0347,     0.0703,     0.0640,     0.0400,     0.1738,     0.0459,     0.0957,     0.0327,     0.0461,     0.1533,     0.0471,     0.0000],
        [    0.1221,     0.0903,     0.1040,     0.0640,     0.0199,     0.0552,     0.0549,     0.0933,     0.0112,     0.0500,     0.0181,     0.0649,     0.0713,     0.0117,     0.1689]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0140,  0.0182,  0.0061,  ..., -0.0274,  0.0004, -0.0492],
        [-0.0204, -0.0154, -0.0154,  ..., -0.0062,  0.0179,  0.0015],
        [-0.0307, -0.0110,  0.0407,  ..., -0.0231, -0.0219, -0.0266],
        ...,
        [-0.0003, -0.0276, -0.0056,  ..., -0.0220, -0.0158, -0.0376],
        [-0.0188, -0.0383, -0.0190,  ..., -0.0165, -0.0078,  0.0153],
        [-0.0182,  0.0211,  0.0243,  ..., -0.0242, -0.0188, -0.0107]], device='cuda:0', requires_grad=True)
K: tensor([-0.7188, -0.3789, -0.1309, -0.8555,  0.0292,  0.0542, -0.5664,  0.1172, -0.7461, -0.0869,  0.9922,  0.1279,  0.5547, -1.2266,  1.4844, -0.8945, -0.3418, -0.0476, -0.2930,  0.8125, -0.9805, -0.4688, -0.0076,  0.1650,  0.4629,  0.3926, -0.0039,  0.7422, -1.4688,  0.2793, -0.4043, -1.0391,
        -1.4062,  1.2500, -0.2422,  0.5078,  1.4922, -0.1328, -1.1797, -0.0143, -1.3125,  0.9570, -0.8359,  0.3184,  0.8164,  0.4902, -0.6055, -0.3125,  0.1641,  0.8008, -0.2891, -1.6719, -0.5703,  0.1504,  0.1709,  0.4609,  0.6953, -0.3555,  0.0115,  0.0889,  0.5469,  0.2949,  0.4707, -0.1348],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0156,  0.0027,  0.0157,  ...,  0.0295, -0.0141, -0.0216],
        [ 0.0220, -0.0243,  0.0209,  ..., -0.0134, -0.0059,  0.0290],
        [-0.0224,  0.0118,  0.0455,  ...,  0.0219,  0.0255, -0.0048],
        ...,
        [ 0.0099,  0.0026, -0.0369,  ..., -0.0110, -0.0105,  0.0035],
        [ 0.0007,  0.0301, -0.0157,  ...,  0.0264,  0.0077, -0.0271],
        [-0.0086,  0.0033, -0.0074,  ...,  0.0057,  0.0052, -0.0106]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.2461, -0.3906,  0.2070, -0.0708,  0.7812,  0.3320,  0.1689, -0.7969, -1.1641, -0.5469, -0.2852, -0.5078,  0.2520, -0.1514, -0.7305, -0.6172,  0.1533,  0.1367,  0.4453, -0.3066, -0.1133,  1.2266,  0.4336, -0.2617,  0.2344,  0.1050, -1.1172, -0.1621, -1.0156,  0.0610,  0.6172, -0.0088,
        -0.3145,  1.0703, -1.2578,  0.7031,  0.5547,  0.4434, -0.0364, -0.3438,  0.0144, -1.0312, -0.7031, -0.6523,  0.3691, -0.0583,  0.7812, -0.9023, -0.3652, -0.6523, -0.7305, -0.3379,  0.5508, -0.4004,  0.7539,  0.1963, -0.8359,  0.0300,  0.6250,  0.7305, -0.0564, -0.1836, -0.3086, -0.1592],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -0.3184,     -0.8164,     -1.4297,     -1.8281,     -1.6016,     -1.9531,      1.4844,     -3.2656,     -0.6836,     -2.7812,     -1.2109,      0.5156,     -3.1875,      0.2236],
        [     0.0000,     -0.7852,     -1.0938,     -1.6797,     -2.2500,     -2.0469,     -2.3438,      0.9219,     -3.6250,     -0.9922,     -3.1875,     -1.4453,      0.0483,     -3.5625,      0.1021],
        [     0.0000,     -0.6289,     -0.9570,     -1.5234,     -2.0312,     -1.8438,     -2.1094,      0.8164,     -3.3125,     -1.0469,     -2.9375,     -1.3750,     -0.0039,     -3.2656,      0.2119],
        [     0.0000,     -0.2402,     -0.5820,     -0.4199,      0.2383,      0.1279,     -0.1416,     -0.0143,      0.4941,      0.4102,      0.1475,     -0.2100,      0.3887,      0.4961,     -0.8906],
        [     0.0000,     -1.0312,     -1.3203,     -1.8516,     -1.8125,     -1.7188,     -2.1406,      1.0859,     -3.1719,     -0.6602,     -3.0469,     -1.4062,      0.2656,     -3.1094,     -0.7773],
        [     0.0000,     -2.9531,     -2.0156,     -3.2969,     -5.4375,     -4.0938,     -4.1562,     -0.3730,     -8.1250,     -2.1250,     -7.6875,     -2.4375,     -1.5703,     -7.9688,     -1.6406],
        [     0.0000,      0.1855,      0.0728,     -0.1074,     -0.4766,     -0.4805,     -0.5820,      0.8398,     -1.0312,     -0.0598,     -0.7031,     -0.1157,      0.2559,     -1.0078,      0.4727],
        [     0.0000,     -0.4180,     -0.8438,     -0.9844,     -0.2773,     -0.3730,     -0.8281,      0.5977,     -0.6758,      0.0243,     -1.0078,     -0.7070,      0.4941,     -0.6523,     -0.9414],
        [     0.0000,     -0.9961,     -1.9062,     -2.5000,     -2.5000,     -3.0312,     -3.5312,      2.2500,     -4.5312,     -1.1406,     -4.0938,     -2.1875,      0.6406,     -4.4375,      0.0664],
        [     0.0000,     -1.1172,     -1.2578,     -1.7891,     -2.3125,     -1.6719,     -2.0000,      0.3438,     -3.3906,     -0.8438,     -3.3125,     -1.3984,     -0.1211,     -3.3281,     -0.8203],
        [     0.0000,     -0.9766,     -1.5000,     -2.0781,     -2.3906,     -2.5000,     -2.8750,      1.2812,     -4.0000,     -1.2266,     -3.6094,     -1.8438,      0.1187,     -3.9531,      0.0942],
        [     0.0000,     -0.8867,     -1.3828,     -1.8594,     -2.3281,     -2.3594,     -2.7188,      1.7188,     -3.9062,     -0.8203,     -3.3906,     -1.5625,      0.3867,     -3.8281,     -0.0469],
        [     0.0000,     -0.4492,     -0.8555,     -1.0000,     -0.2969,     -0.3945,     -0.8594,      0.6055,     -0.7227,      0.0128,     -1.0625,     -0.7188,      0.4844,     -0.6953,     -0.9648],
        [     0.0000,     -0.3027,     -0.1582,     -0.6445,     -1.8125,     -0.7930,     -0.7969,     -0.2656,     -2.3906,     -0.8906,     -1.9141,     -0.6289,     -0.5352,     -2.3438,      0.3242]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3197],
        [0.1820],
        [0.1777],
        [0.2519],
        [0.1779],
        [0.2426],
        [0.1830],
        [0.1822],
        [0.1207],
        [0.1672],
        [0.0722],
        [0.1381],
        [0.1279],
        [0.0878]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0030,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0000,     0.0034,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9805,     0.0000,     0.0035,     0.0145,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0013,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9219,     0.0001,     0.0000,     0.0034,     0.0732,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0012,     0.3672,     0.3145,     0.1406,     0.0287,     0.1318,     0.0178,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0486,     0.0073,     0.0014,     0.0027,     0.8203,     0.0791,     0.0369,     0.0026,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0051,     0.0000,     0.0000,     0.0001,     0.0003,     0.0000,     0.9961,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0026,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.6914,     0.0002,     0.3066,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0013,     0.0065,     0.0003,     0.0004,     0.1279,     0.0408,     0.0017,     0.0070,     0.7148,     0.0017,     0.0889,     0.0003,     0.0096,     0.0000,     0.0000],
        [    0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.5352,     0.0000,     0.1201,     0.0000,     0.0000,     0.3457,     0.0000,     0.0000],
        [    0.0074,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.9922,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0002]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0282, -0.0281,  0.0025,  ..., -0.0039,  0.0121, -0.0266],
        [ 0.0025, -0.0372,  0.0034,  ..., -0.0006,  0.0213, -0.0097],
        [-0.0239,  0.0167, -0.0220,  ..., -0.0037, -0.0197,  0.0059],
        ...,
        [ 0.0358, -0.0054, -0.0355,  ...,  0.0021, -0.0170,  0.0218],
        [-0.0132,  0.0120,  0.0091,  ...,  0.0362, -0.0244,  0.0106],
        [-0.0362,  0.0074, -0.0297,  ...,  0.0150,  0.0262,  0.0317]], device='cuda:0', requires_grad=True)
K: tensor([-1.6406,  0.6133, -1.3984,  2.5938, -0.4355,  0.7031,  0.5742,  1.2266,  0.2246, -1.7188, -1.3438, -0.3984, -1.2031, -2.2031,  0.3711,  1.7734,  2.2500,  2.4844, -2.3281, -1.2578,  1.2188,  0.0903, -4.0938,  2.5469,  1.6562,  1.2656, -0.6172,  1.5000, -1.1484, -1.5469, -0.2051,  1.5156,
        -1.4531,  2.6875,  2.0625, -0.6484,  1.7578, -2.3750, -0.2520,  0.8711,  0.2969, -0.7305, -1.3984,  0.3711,  0.0952, -1.1953,  1.1172,  0.2266,  0.8867,  0.0491,  0.6250,  1.1094, -0.7695, -2.2188, -0.4941, -0.2930,  1.8125, -1.8984, -0.8125, -0.8477, -0.1621, -0.3516,  1.6875, -2.9531],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0046, -0.0213, -0.0074,  ..., -0.0182, -0.0147, -0.0016],
        [ 0.0092, -0.0089, -0.0013,  ...,  0.0178, -0.0268,  0.0317],
        [ 0.0164, -0.0168,  0.0031,  ...,  0.0017, -0.0288, -0.0115],
        ...,
        [ 0.0101, -0.0316, -0.0083,  ...,  0.0310,  0.0206,  0.0026],
        [ 0.0019, -0.0058,  0.0084,  ...,  0.0038,  0.0222,  0.0022],
        [-0.0027, -0.0155,  0.0034,  ...,  0.0270, -0.0034, -0.0375]], device='cuda:0', requires_grad=True)
Q: tensor([ 1.2109,  0.6719,  0.1328,  0.2148, -1.3203, -1.6094, -2.0312, -1.9844, -1.3828, -0.5977,  0.7422, -1.2344,  1.4297, -1.1875, -0.8008, -1.6875,  0.3359, -0.7227, -0.9141,  1.5078,  1.9141, -2.0156,  2.7344, -1.1641, -0.8945, -1.1797, -1.1641,  1.0156, -1.8281,  2.0938, -1.6250, -0.4629,
        -0.4902,  1.2031, -2.0781, -2.1250,  0.6953,  0.8906,  2.6094, -1.3125, -0.7188,  1.5625, -0.1187,  2.7031, -1.4766,  0.8242, -0.5859,  1.1094, -1.0781, -1.9922, -2.0000,  2.4844,  0.6992, -0.1138,  1.2578, -2.0156, -1.0000, -0.4727,  1.4531, -0.7930,  0.7695,  1.1406, -0.9102,  0.1318],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -5.8125,     -3.2344,     -2.5156,     -0.0254,     -1.8125,      3.6875,     -9.7500,     -0.6523,    -10.8125,      0.9570,     -6.0312,     -9.3125,     -0.8555,     -0.2734],
        [     0.0000,    -18.0000,     -5.6875,     -4.2500,     -7.8750,    -11.3750,      8.0625,    -28.1250,    -12.9375,    -27.7500,     -5.4062,    -12.6875,    -27.5000,    -13.2500,     -0.3164],
        [     0.0000,    -16.5000,     -5.6250,     -4.2188,     -7.7812,    -10.8125,      6.8438,    -26.1250,    -12.2500,    -25.6250,     -5.1250,    -12.0000,    -25.5000,    -12.5625,     -0.5664],
        [     0.0000,      9.9375,     -0.6250,     -1.3438,      3.2812,      5.9688,     -6.5938,     15.8125,      6.7188,     14.6875,      2.0156,      3.3281,     15.2500,      6.6250,     -4.3438],
        [     0.0000,     14.2500,      5.4062,      4.1562,      8.6250,     11.6875,     -1.7578,     20.5000,     12.8125,     19.2500,      7.7812,      9.2500,     20.7500,     13.1250,      2.4531],
        [     0.0000,      5.7500,      5.5938,      4.8125,      3.2031,      4.7188,      2.7344,      7.0625,      3.3750,      7.5000,      3.5625,      6.2812,      7.7812,      3.6719,      4.9688],
        [     0.0000,     -1.8984,     -3.5156,     -2.8750,      2.8281,      0.4863,     -0.2793,     -2.9375,      3.0156,     -4.5000,      2.0312,     -4.2500,     -2.8281,      2.8281,     -1.5547],
        [     0.0000,     16.1250,      0.7070,     -0.3789,      5.9375,     10.5000,     -8.4375,     24.7500,     12.1250,     23.1250,      4.9688,      6.6875,     24.2500,     12.0625,     -4.2500],
        [     0.0000,    -12.6250,     -5.9688,     -4.5938,     -3.0000,     -6.5312,      5.2812,    -20.0000,     -5.2188,    -20.6250,     -1.4297,    -10.8125,    -19.3750,     -5.5000,     -0.9492],
        [     0.0000,     13.3750,      3.7500,      2.7969,      6.2812,      9.8125,     -3.2031,     19.0000,     10.6875,     18.1250,      6.2500,      7.7188,     19.2500,     10.8125,      0.8672],
        [     0.0000,    -21.8750,     -8.3750,     -6.3750,     -9.8750,    -14.3125,      8.0625,    -33.7500,    -15.3750,    -33.2500,     -6.9688,    -16.1250,    -33.0000,    -15.7500,     -1.9297],
        [     0.0000,      1.5938,     -1.4766,     -1.1875,      4.5938,      3.4375,      0.2656,      1.6797,      6.3125,      0.2432,      4.2188,     -1.3984,      2.0000,      6.1875,     -0.1543],
        [     0.0000,     16.5000,      1.0625,     -0.0608,      6.1875,     10.8125,     -8.2500,     25.0000,     12.3750,     23.5000,      5.2812,      7.0625,     24.6250,     12.3750,     -3.8750],
        [     0.0000,    -16.1250,     -7.5938,     -6.0000,     -9.5000,    -11.6250,      4.9062,    -24.7500,    -12.8750,    -24.2500,     -6.5000,    -13.1250,    -24.3750,    -13.3750,     -3.7188]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5598],
        [0.4222],
        [0.3673],
        [0.2632],
        [0.1297],
        [0.0926],
        [0.1707],
        [0.1236],
        [0.1370],
        [0.0337],
        [0.1040],
        [0.1113],
        [0.1023],
        [0.2551]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.1641 the:0.0266,:0.1079 and:0.0957ers:0.0229,:0.0718 the:0.0226
:0.1113)


------
		( the:0.0266,:0.1079 and:0.0957ers:0.0229,:0.0718 the:0.0226
:0.1113The:0.0933)
The first time, and the first time, and the first, and the
@ 2050 train 6.0877 , allloss: 6.1034, dt: 1679.46ms, fracRes: 0.5883, norm(attn): 0.0874, norm(output): 0.3809, norm(x): 1.2186, norm(y): 1.0048, norm:1.0470, tok/sec: 78044.32, flops:68.34, batch-reuse:1
@ 2051 train 6.1942 , allloss: 6.2105, dt: 1306.37ms, fracRes: 0.5889, norm(attn): 0.0869, norm(output): 0.3809, norm(x): 1.2196, norm(y): 1.0048, norm:1.0924, tok/sec: 100332.95, flops:87.86, batch-reuse:1
@ 2052 train 6.0639 , allloss: 6.0803, dt: 1280.77ms, fracRes: 0.5869, norm(attn): 0.0898, norm(output): 0.3809, norm(x): 1.2186, norm(y): 1.0047, norm:0.9560, tok/sec: 102338.32, flops:89.62, batch-reuse:1
@ 2053 train 6.0859 , allloss: 6.1022, dt: 1291.76ms, fracRes: 0.5835, norm(attn): 0.0947, norm(output): 0.3867, norm(x): 1.2162, norm(y): 1.0047, norm:1.1697, tok/sec: 101467.54, flops:88.85, batch-reuse:1
@ 2054 train 6.0484 , allloss: 6.0643, dt: 1281.76ms, fracRes: 0.5858, norm(attn): 0.0923, norm(output): 0.3828, norm(x): 1.2176, norm(y): 1.0047, norm:1.0099, tok/sec: 102259.03, flops:89.55, batch-reuse:1
@ 2055 train 6.1102 , allloss: 6.1263, dt: 1271.87ms, fracRes: 0.5870, norm(attn): 0.0918, norm(output): 0.3828, norm(x): 1.2168, norm(y): 1.0048, norm:1.2085, tok/sec: 103054.43, flops:90.24, batch-reuse:1
@ 2056 train 6.1336 , allloss: 6.1495, dt: 1267.78ms, fracRes: 0.5904, norm(attn): 0.0874, norm(output): 0.3770, norm(x): 1.2162, norm(y): 1.0048, norm:0.7861, tok/sec: 103386.80, flops:90.53, batch-reuse:1
@ 2057 train 6.1218 , allloss: 6.1375, dt: 1282.33ms, fracRes: 0.5911, norm(attn): 0.0864, norm(output): 0.3770, norm(x): 1.2186, norm(y): 1.0048, norm:1.0385, tok/sec: 102213.76, flops:89.51, batch-reuse:1
@ 2058 train 6.1644 , allloss: 6.1812, dt: 1271.47ms, fracRes: 0.5930, norm(attn): 0.0854, norm(output): 0.3750, norm(x): 1.2217, norm(y): 1.0048, norm:1.3435, tok/sec: 103087.22, flops:90.27, batch-reuse:1
@ 2059 train 6.0462 , allloss: 6.0630, dt: 1278.34ms, fracRes: 0.5891, norm(attn): 0.0879, norm(output): 0.3770, norm(x): 1.2101, norm(y): 1.0048, norm:0.8725, tok/sec: 102532.81, flops:89.79, batch-reuse:1
@ 2060 train 5.9998 , allloss: 6.0154, dt: 1269.33ms, fracRes: 0.5869, norm(attn): 0.0894, norm(output): 0.3809, norm(x): 1.2157, norm(y): 1.0048, norm:0.7945, tok/sec: 103261.12, flops:90.42, batch-reuse:1
@ 2061 train 6.1409 , allloss: 6.1574, dt: 1282.81ms, fracRes: 0.5860, norm(attn): 0.0942, norm(output): 0.3809, norm(x): 1.2089, norm(y): 1.0047, norm:1.1424, tok/sec: 102176.00, flops:89.47, batch-reuse:1
@ 2062 train 6.0457 , allloss: 6.0620, dt: 1287.80ms, fracRes: 0.5863, norm(attn): 0.0923, norm(output): 0.3828, norm(x): 1.2197, norm(y): 1.0048, norm:1.1038, tok/sec: 101779.68, flops:89.13, batch-reuse:1
@ 2063 train 6.1284 , allloss: 6.1454, dt: 1270.24ms, fracRes: 0.5867, norm(attn): 0.0913, norm(output): 0.3809, norm(x): 1.2179, norm(y): 1.0048, norm:1.1795, tok/sec: 103186.76, flops:90.36, batch-reuse:1
@ 2064 train 6.0224 , allloss: 6.0388, dt: 1271.82ms, fracRes: 0.5864, norm(attn): 0.0908, norm(output): 0.3789, norm(x): 1.2166, norm(y): 1.0048, norm:0.6382, tok/sec: 103058.35, flops:90.25, batch-reuse:1
@ 2065 train 6.5384 , allloss: 6.5558, dt: 1272.19ms, fracRes: 0.5903, norm(attn): 0.0845, norm(output): 0.3770, norm(x): 1.2177, norm(y): 1.0047, norm:1.6886, tok/sec: 103028.61, flops:90.22, batch-reuse:1
@ 2066 train 6.1372 , allloss: 6.1543, dt: 1265.46ms, fracRes: 0.5882, norm(attn): 0.0879, norm(output): 0.3770, norm(x): 1.2164, norm(y): 1.0048, norm:1.8773, tok/sec: 103576.49, flops:90.70, batch-reuse:1
@ 2067 train 6.0976 , allloss: 6.1144, dt: 1269.30ms, fracRes: 0.5888, norm(attn): 0.0864, norm(output): 0.3750, norm(x): 1.2135, norm(y): 1.0048, norm:1.2248, tok/sec: 103263.24, flops:90.43, batch-reuse:1
@ 2068 train 6.1622 , allloss: 6.1777, dt: 1293.34ms, fracRes: 0.5882, norm(attn): 0.0864, norm(output): 0.3770, norm(x): 1.2182, norm(y): 1.0048, norm:1.7088, tok/sec: 101343.96, flops:88.75, batch-reuse:1
@ 2069 train 6.1791 , allloss: 6.1954, dt: 1271.05ms, fracRes: 0.5863, norm(attn): 0.0928, norm(output): 0.3809, norm(x): 1.2141, norm(y): 1.0048, norm:1.2701, tok/sec: 103121.22, flops:90.30, batch-reuse:1
@ 2070 train 6.2407 , allloss: 6.2577, dt: 1276.89ms, fracRes: 0.5832, norm(attn): 0.0967, norm(output): 0.3887, norm(x): 1.2188, norm(y): 1.0048, norm:1.4810, tok/sec: 102649.23, flops:89.89, batch-reuse:1
@ 2071 train 6.1648 , allloss: 6.1828, dt: 1308.29ms, fracRes: 0.5831, norm(attn): 0.0962, norm(output): 0.3867, norm(x): 1.2164, norm(y): 1.0047, norm:1.4056, tok/sec: 100186.10, flops:87.73, batch-reuse:1
@ 2072 train 6.1512 , allloss: 6.1679, dt: 1284.47ms, fracRes: 0.5845, norm(attn): 0.0938, norm(output): 0.3887, norm(x): 1.2175, norm(y): 1.0048, norm:1.1670, tok/sec: 102043.49, flops:89.36, batch-reuse:1
@ 2073 train 6.0778 , allloss: 6.0933, dt: 1291.98ms, fracRes: 0.5855, norm(attn): 0.0894, norm(output): 0.3828, norm(x): 1.2173, norm(y): 1.0048, norm:1.1708, tok/sec: 101450.39, flops:88.84, batch-reuse:1
@ 2074 train 6.1355 , allloss: 6.1508, dt: 1285.79ms, fracRes: 0.5906, norm(attn): 0.0850, norm(output): 0.3770, norm(x): 1.2257, norm(y): 1.0049, norm:1.1569, tok/sec: 101939.08, flops:89.27, batch-reuse:1
@ 2075 train 6.0332 , allloss: 6.0491, dt: 1336.11ms, fracRes: 0.5946, norm(attn): 0.0835, norm(output): 0.3750, norm(x): 1.2320, norm(y): 1.0048, norm:1.2805, tok/sec: 98100.01, flops:85.90, batch-reuse:1
@ 2076 train 6.0639 , allloss: 6.0811, dt: 1299.75ms, fracRes: 0.5964, norm(attn): 0.0820, norm(output): 0.3750, norm(x): 1.2276, norm(y): 1.0049, norm:1.0623, tok/sec: 100843.74, flops:88.31, batch-reuse:1
@ 2077 train 6.0760 , allloss: 6.0915, dt: 1285.12ms, fracRes: 0.5913, norm(attn): 0.0854, norm(output): 0.3770, norm(x): 1.2205, norm(y): 1.0049, norm:0.9411, tok/sec: 101991.96, flops:89.31, batch-reuse:1
@ 2078 train 6.1204 , allloss: 6.1378, dt: 1261.12ms, fracRes: 0.5869, norm(attn): 0.0908, norm(output): 0.3789, norm(x): 1.2084, norm(y): 1.0047, norm:1.6356, tok/sec: 103933.42, flops:91.01, batch-reuse:1
@ 2079 train 6.1015 , allloss: 6.1198, dt: 1301.46ms, fracRes: 0.5802, norm(attn): 0.0972, norm(output): 0.3867, norm(x): 1.2069, norm(y): 1.0048, norm:1.0249, tok/sec: 100711.62, flops:88.19, batch-reuse:1
@ 2080 train 6.1449 , allloss: 6.1627, dt: 1291.72ms, fracRes: 0.5841, norm(attn): 0.0967, norm(output): 0.3867, norm(x): 1.2146, norm(y): 1.0049, norm:1.1476, tok/sec: 101470.91, flops:88.86, batch-reuse:1
@ 2081 train 6.1005 , allloss: 6.1172, dt: 1274.11ms, fracRes: 0.5867, norm(attn): 0.0938, norm(output): 0.3848, norm(x): 1.2233, norm(y): 1.0049, norm:0.9174, tok/sec: 102873.12, flops:90.08, batch-reuse:1
@ 2082 train 6.0438 , allloss: 6.0596, dt: 1300.78ms, fracRes: 0.5881, norm(attn): 0.0908, norm(output): 0.3828, norm(x): 1.2248, norm(y): 1.0049, norm:1.3237, tok/sec: 100764.00, flops:88.24, batch-reuse:1
@ 2083 train 6.0914 , allloss: 6.1074, dt: 1291.54ms, fracRes: 0.5921, norm(attn): 0.0859, norm(output): 0.3770, norm(x): 1.2282, norm(y): 1.0049, norm:1.5831, tok/sec: 101485.06, flops:88.87, batch-reuse:1
@ 2084 train 6.0966 , allloss: 6.1122, dt: 1258.49ms, fracRes: 0.5951, norm(attn): 0.0845, norm(output): 0.3750, norm(x): 1.2359, norm(y): 1.0048, norm:1.2329, tok/sec: 104149.95, flops:91.20, batch-reuse:1
@ 2085 train 6.1077 , allloss: 6.1233, dt: 1289.70ms, fracRes: 0.5964, norm(attn): 0.0825, norm(output): 0.3750, norm(x): 1.2368, norm(y): 1.0050, norm:1.3270, tok/sec: 101629.55, flops:89.00, batch-reuse:1
@ 2086 train 6.0619 , allloss: 6.0776, dt: 1250.92ms, fracRes: 0.5950, norm(attn): 0.0850, norm(output): 0.3750, norm(x): 1.2317, norm(y): 1.0049, norm:1.1386, tok/sec: 104780.14, flops:91.75, batch-reuse:1
@ 2087 train 6.0600 , allloss: 6.0759, dt: 1267.67ms, fracRes: 0.5925, norm(attn): 0.0874, norm(output): 0.3770, norm(x): 1.2306, norm(y): 1.0049, norm:1.3066, tok/sec: 103395.90, flops:90.54, batch-reuse:1
@ 2088 train 6.1343 , allloss: 6.1502, dt: 1272.96ms, fracRes: 0.5898, norm(attn): 0.0918, norm(output): 0.3828, norm(x): 1.2309, norm(y): 1.0049, norm:1.3427, tok/sec: 102966.26, flops:90.17, batch-reuse:1
@ 2089 train 6.0662 , allloss: 6.0835, dt: 1267.89ms, fracRes: 0.5857, norm(attn): 0.0962, norm(output): 0.3828, norm(x): 1.2200, norm(y): 1.0049, norm:0.9820, tok/sec: 103377.69, flops:90.53, batch-reuse:1
@ 2090 train 6.0848 , allloss: 6.1020, dt: 1263.37ms, fracRes: 0.5870, norm(attn): 0.0972, norm(output): 0.3809, norm(x): 1.2176, norm(y): 1.0049, norm:1.0833, tok/sec: 103747.54, flops:90.85, batch-reuse:1
@ 2091 train 6.0577 , allloss: 6.0737, dt: 1293.38ms, fracRes: 0.5893, norm(attn): 0.0933, norm(output): 0.3789, norm(x): 1.2209, norm(y): 1.0049, norm:0.9477, tok/sec: 101341.05, flops:88.74, batch-reuse:1
@ 2092 train 6.1407 , allloss: 6.1565, dt: 1272.53ms, fracRes: 0.5930, norm(attn): 0.0889, norm(output): 0.3770, norm(x): 1.2273, norm(y): 1.0049, norm:1.0155, tok/sec: 103001.12, flops:90.20, batch-reuse:1
@ 2093 train 5.9869 , allloss: 6.0023, dt: 1293.18ms, fracRes: 0.5930, norm(attn): 0.0864, norm(output): 0.3770, norm(x): 1.2286, norm(y): 1.0049, norm:1.1993, tok/sec: 101355.99, flops:88.76, batch-reuse:1
@ 2094 train 6.0528 , allloss: 6.0681, dt: 1289.65ms, fracRes: 0.5933, norm(attn): 0.0864, norm(output): 0.3770, norm(x): 1.2290, norm(y): 1.0049, norm:1.1238, tok/sec: 101633.54, flops:89.00, batch-reuse:1
@ 2095 train 5.9725 , allloss: 5.9874, dt: 1281.03ms, fracRes: 0.5920, norm(attn): 0.0874, norm(output): 0.3750, norm(x): 1.2304, norm(y): 1.0050, norm:1.0418, tok/sec: 102317.77, flops:89.60, batch-reuse:1
@ 2096 train 6.0682 , allloss: 6.0830, dt: 1270.54ms, fracRes: 0.5909, norm(attn): 0.0874, norm(output): 0.3770, norm(x): 1.2273, norm(y): 1.0049, norm:0.8779, tok/sec: 103162.20, flops:90.34, batch-reuse:1
@ 2097 train 5.9859 , allloss: 6.0012, dt: 1274.12ms, fracRes: 0.5882, norm(attn): 0.0918, norm(output): 0.3789, norm(x): 1.2256, norm(y): 1.0049, norm:1.0012, tok/sec: 102872.41, flops:90.08, batch-reuse:1
@ 2098 train 5.9693 , allloss: 5.9848, dt: 1291.22ms, fracRes: 0.5872, norm(attn): 0.0938, norm(output): 0.3809, norm(x): 1.2270, norm(y): 1.0049, norm:1.0051, tok/sec: 101510.52, flops:88.89, batch-reuse:1
@ 2099 train 6.0283 , allloss: 6.0443, dt: 1279.57ms, fracRes: 0.5870, norm(attn): 0.0938, norm(output): 0.3809, norm(x): 1.2256, norm(y): 1.0049, norm:1.0196, tok/sec: 102434.75, flops:89.70, batch-reuse:1
@ 2100 train 6.0200 , allloss: 6.0361, dt: 1278.29ms, fracRes: 0.5880, norm(attn): 0.0933, norm(output): 0.3789, norm(x): 1.2235, norm(y): 1.0049, norm:0.8071, tok/sec: 102537.08, flops:89.79, batch-reuse:1
@ 2101 train 5.9222 , allloss: 5.9376, dt: 1269.08ms, fracRes: 0.5877, norm(attn): 0.0923, norm(output): 0.3789, norm(x): 1.2204, norm(y): 1.0049, norm:0.8813, tok/sec: 103280.99, flops:90.44, batch-reuse:1
@ 2102 train 6.0235 , allloss: 6.0389, dt: 1273.96ms, fracRes: 0.5881, norm(attn): 0.0923, norm(output): 0.3789, norm(x): 1.2229, norm(y): 1.0049, norm:1.0578, tok/sec: 102885.42, flops:90.10, batch-reuse:1
@ 2103 train 5.9431 , allloss: 5.9581, dt: 1297.44ms, fracRes: 0.5908, norm(attn): 0.0884, norm(output): 0.3770, norm(x): 1.2285, norm(y): 1.0049, norm:0.8176, tok/sec: 101023.94, flops:88.47, batch-reuse:1
@ 2104 train 6.0014 , allloss: 6.0168, dt: 1265.15ms, fracRes: 0.5924, norm(attn): 0.0874, norm(output): 0.3750, norm(x): 1.2263, norm(y): 1.0049, norm:0.9334, tok/sec: 103602.15, flops:90.72, batch-reuse:1
@ 2105 train 6.0760 , allloss: 6.0917, dt: 1266.62ms, fracRes: 0.5937, norm(attn): 0.0879, norm(output): 0.3750, norm(x): 1.2244, norm(y): 1.0049, norm:0.9183, tok/sec: 103481.93, flops:90.62, batch-reuse:1
@ 2106 train 6.0490 , allloss: 6.0642, dt: 1253.72ms, fracRes: 0.5903, norm(attn): 0.0894, norm(output): 0.3770, norm(x): 1.2225, norm(y): 1.0050, norm:1.1987, tok/sec: 104546.80, flops:91.55, batch-reuse:1
@ 2107 train 6.0100 , allloss: 6.0254, dt: 1270.75ms, fracRes: 0.5882, norm(attn): 0.0918, norm(output): 0.3770, norm(x): 1.2168, norm(y): 1.0049, norm:0.8219, tok/sec: 103145.34, flops:90.32, batch-reuse:1
@ 2108 train 6.1073 , allloss: 6.1235, dt: 1295.34ms, fracRes: 0.5873, norm(attn): 0.0933, norm(output): 0.3770, norm(x): 1.2117, norm(y): 1.0049, norm:1.0760, tok/sec: 101187.70, flops:88.61, batch-reuse:1
@ 2109 train 6.0589 , allloss: 6.0747, dt: 1263.36ms, fracRes: 0.5900, norm(attn): 0.0908, norm(output): 0.3770, norm(x): 1.2175, norm(y): 1.0049, norm:0.8005, tok/sec: 103749.10, flops:90.85, batch-reuse:1
@ 2110 train 5.9563 , allloss: 5.9719, dt: 1270.69ms, fracRes: 0.5891, norm(attn): 0.0898, norm(output): 0.3750, norm(x): 1.2152, norm(y): 1.0050, norm:1.0121, tok/sec: 103150.49, flops:90.33, batch-reuse:1
@ 2111 train 5.9712 , allloss: 5.9864, dt: 1280.27ms, fracRes: 0.5884, norm(attn): 0.0903, norm(output): 0.3770, norm(x): 1.2153, norm(y): 1.0050, norm:1.0473, tok/sec: 102378.76, flops:89.65, batch-reuse:1
@ 2112 train 5.9413 , allloss: 5.9569, dt: 1273.20ms, fracRes: 0.5885, norm(attn): 0.0908, norm(output): 0.3770, norm(x): 1.2149, norm(y): 1.0049, norm:0.7644, tok/sec: 102946.56, flops:90.15, batch-reuse:1
@ 2113 train 6.0179 , allloss: 6.0334, dt: 1262.87ms, fracRes: 0.5890, norm(attn): 0.0918, norm(output): 0.3750, norm(x): 1.2152, norm(y): 1.0050, norm:0.7967, tok/sec: 103788.83, flops:90.89, batch-reuse:1
@ 2114 train 6.0645 , allloss: 6.0794, dt: 1273.82ms, fracRes: 0.5906, norm(attn): 0.0898, norm(output): 0.3730, norm(x): 1.2203, norm(y): 1.0050, norm:1.1638, tok/sec: 102896.90, flops:90.11, batch-reuse:1
@ 2115 train 6.0010 , allloss: 6.0165, dt: 1261.36ms, fracRes: 0.5892, norm(attn): 0.0908, norm(output): 0.3750, norm(x): 1.2120, norm(y): 1.0049, norm:1.1582, tok/sec: 103913.20, flops:91.00, batch-reuse:1
@ 2116 train 6.0252 , allloss: 6.0409, dt: 1267.80ms, fracRes: 0.5875, norm(attn): 0.0928, norm(output): 0.3750, norm(x): 1.2124, norm(y): 1.0049, norm:0.9571, tok/sec: 103385.46, flops:90.53, batch-reuse:1
@ 2117 train 6.0205 , allloss: 6.0366, dt: 1270.06ms, fracRes: 0.5871, norm(attn): 0.0938, norm(output): 0.3770, norm(x): 1.2139, norm(y): 1.0049, norm:1.0578, tok/sec: 103201.50, flops:90.37, batch-reuse:1
@ 2118 train 5.9921 , allloss: 6.0078, dt: 1280.88ms, fracRes: 0.5873, norm(attn): 0.0933, norm(output): 0.3770, norm(x): 1.2177, norm(y): 1.0049, norm:0.6805, tok/sec: 102329.65, flops:89.61, batch-reuse:1
@ 2119 train 6.0433 , allloss: 6.0585, dt: 1285.16ms, fracRes: 0.5876, norm(attn): 0.0933, norm(output): 0.3770, norm(x): 1.2195, norm(y): 1.0049, norm:1.1750, tok/sec: 101989.19, flops:89.31, batch-reuse:1
@ 2120 train 5.9794 , allloss: 5.9947, dt: 1269.97ms, fracRes: 0.5863, norm(attn): 0.0928, norm(output): 0.3770, norm(x): 1.2165, norm(y): 1.0049, norm:0.7952, tok/sec: 103209.05, flops:90.38, batch-reuse:1
@ 2121 train 6.0500 , allloss: 6.0663, dt: 1293.94ms, fracRes: 0.5860, norm(attn): 0.0933, norm(output): 0.3770, norm(x): 1.2121, norm(y): 1.0049, norm:0.9231, tok/sec: 101296.87, flops:88.70, batch-reuse:1
@ 2122 train 6.0029 , allloss: 6.0191, dt: 1283.53ms, fracRes: 0.5898, norm(attn): 0.0913, norm(output): 0.3750, norm(x): 1.2184, norm(y): 1.0049, norm:1.0370, tok/sec: 102118.17, flops:89.42, batch-reuse:1
@ 2123 train 6.0373 , allloss: 6.0527, dt: 1264.97ms, fracRes: 0.5909, norm(attn): 0.0889, norm(output): 0.3730, norm(x): 1.2212, norm(y): 1.0050, norm:1.5126, tok/sec: 103616.97, flops:90.74, batch-reuse:1
@ 2124 train 5.9770 , allloss: 5.9929, dt: 1293.65ms, fracRes: 0.5915, norm(attn): 0.0879, norm(output): 0.3730, norm(x): 1.2180, norm(y): 1.0050, norm:0.8804, tok/sec: 101319.60, flops:88.72, batch-reuse:1
@ 2125 train 5.9815 , allloss: 5.9968, dt: 1263.89ms, fracRes: 0.5893, norm(attn): 0.0923, norm(output): 0.3750, norm(x): 1.2175, norm(y): 1.0049, norm:0.9971, tok/sec: 103705.07, flops:90.81, batch-reuse:1
@ 2126 train 5.9544 , allloss: 5.9700, dt: 1273.61ms, fracRes: 0.5873, norm(attn): 0.0942, norm(output): 0.3750, norm(x): 1.2115, norm(y): 1.0050, norm:1.1210, tok/sec: 102913.83, flops:90.12, batch-reuse:1
@ 2127 train 5.9909 , allloss: 6.0078, dt: 1283.65ms, fracRes: 0.5867, norm(attn): 0.0967, norm(output): 0.3750, norm(x): 1.2106, norm(y): 1.0049, norm:1.1641, tok/sec: 102108.68, flops:89.42, batch-reuse:1
@ 2128 train 5.9375 , allloss: 5.9532, dt: 1241.74ms, fracRes: 0.5892, norm(attn): 0.0942, norm(output): 0.3750, norm(x): 1.2113, norm(y): 1.0049, norm:0.9229, tok/sec: 105555.41, flops:92.43, batch-reuse:1
@ 2129 train 5.9758 , allloss: 5.9908, dt: 1298.11ms, fracRes: 0.5891, norm(attn): 0.0913, norm(output): 0.3730, norm(x): 1.2108, norm(y): 1.0050, norm:0.8088, tok/sec: 100971.41, flops:88.42, batch-reuse:1
@ 2130 train 5.9654 , allloss: 5.9807, dt: 1269.45ms, fracRes: 0.5901, norm(attn): 0.0894, norm(output): 0.3730, norm(x): 1.2124, norm(y): 1.0050, norm:0.8993, tok/sec: 103250.65, flops:90.42, batch-reuse:1
@ 2131 train 5.9889 , allloss: 6.0042, dt: 1307.25ms, fracRes: 0.5920, norm(attn): 0.0869, norm(output): 0.3730, norm(x): 1.2176, norm(y): 1.0050, norm:0.9743, tok/sec: 100265.31, flops:87.80, batch-reuse:1
@ 2132 train 6.0786 , allloss: 6.0948, dt: 1276.39ms, fracRes: 0.5912, norm(attn): 0.0898, norm(output): 0.3730, norm(x): 1.2130, norm(y): 1.0049, norm:1.1151, tok/sec: 102689.28, flops:89.92, batch-reuse:1
@ 2133 train 5.9960 , allloss: 6.0117, dt: 1282.27ms, fracRes: 0.5896, norm(attn): 0.0908, norm(output): 0.3730, norm(x): 1.2162, norm(y): 1.0050, norm:1.0116, tok/sec: 102218.61, flops:89.51, batch-reuse:1
@ 2134 train 5.9414 , allloss: 5.9571, dt: 1297.80ms, fracRes: 0.5865, norm(attn): 0.0928, norm(output): 0.3750, norm(x): 1.2077, norm(y): 1.0050, norm:0.9495, tok/sec: 100995.41, flops:88.44, batch-reuse:1
@ 2135 train 6.0046 , allloss: 6.0202, dt: 1266.69ms, fracRes: 0.5843, norm(attn): 0.0947, norm(output): 0.3770, norm(x): 1.2042, norm(y): 1.0049, norm:0.8528, tok/sec: 103476.22, flops:90.61, batch-reuse:1
@ 2136 train 5.9449 , allloss: 5.9606, dt: 1293.20ms, fracRes: 0.5844, norm(attn): 0.0957, norm(output): 0.3750, norm(x): 1.2032, norm(y): 1.0050, norm:0.9589, tok/sec: 101355.06, flops:88.76, batch-reuse:1
@ 2137 train 5.8890 , allloss: 5.9040, dt: 1291.44ms, fracRes: 0.5885, norm(attn): 0.0918, norm(output): 0.3750, norm(x): 1.2123, norm(y): 1.0050, norm:1.1597, tok/sec: 101493.19, flops:88.88, batch-reuse:1
@ 2138 train 5.9474 , allloss: 5.9620, dt: 1305.16ms, fracRes: 0.5909, norm(attn): 0.0889, norm(output): 0.3730, norm(x): 1.2160, norm(y): 1.0051, norm:0.8639, tok/sec: 100425.74, flops:87.94, batch-reuse:1
@ 2139 train 6.0306 , allloss: 6.0460, dt: 1251.22ms, fracRes: 0.5927, norm(attn): 0.0879, norm(output): 0.3691, norm(x): 1.2117, norm(y): 1.0050, norm:1.1662, tok/sec: 104755.64, flops:91.73, batch-reuse:1
@ 2140 train 5.9703 , allloss: 5.9852, dt: 1274.18ms, fracRes: 0.5918, norm(attn): 0.0874, norm(output): 0.3691, norm(x): 1.2110, norm(y): 1.0050, norm:0.8342, tok/sec: 102867.81, flops:90.08, batch-reuse:1
@ 2141 train 5.9620 , allloss: 5.9771, dt: 1267.96ms, fracRes: 0.5895, norm(attn): 0.0898, norm(output): 0.3730, norm(x): 1.2085, norm(y): 1.0050, norm:0.8530, tok/sec: 103372.20, flops:90.52, batch-reuse:1
@ 2142 train 5.8996 , allloss: 5.9152, dt: 1265.77ms, fracRes: 0.5888, norm(attn): 0.0923, norm(output): 0.3730, norm(x): 1.2043, norm(y): 1.0050, norm:1.2658, tok/sec: 103550.83, flops:90.68, batch-reuse:1
@ 2143 train 5.9858 , allloss: 6.0019, dt: 1301.41ms, fracRes: 0.5887, norm(attn): 0.0938, norm(output): 0.3730, norm(x): 1.2049, norm(y): 1.0050, norm:1.0495, tok/sec: 100715.18, flops:88.19, batch-reuse:1
@ 2144 train 6.0015 , allloss: 6.0177, dt: 1269.30ms, fracRes: 0.5887, norm(attn): 0.0942, norm(output): 0.3730, norm(x): 1.2024, norm(y): 1.0050, norm:0.9381, tok/sec: 103263.49, flops:90.43, batch-reuse:1
@ 2145 train 6.0207 , allloss: 6.0381, dt: 1277.02ms, fracRes: 0.5884, norm(attn): 0.0947, norm(output): 0.3730, norm(x): 1.1994, norm(y): 1.0050, norm:1.2195, tok/sec: 102638.77, flops:89.88, batch-reuse:1
@ 2146 train 6.2368 , allloss: 6.2543, dt: 1264.67ms, fracRes: 0.5895, norm(attn): 0.0918, norm(output): 0.3691, norm(x): 1.1945, norm(y): 1.0049, norm:1.1076, tok/sec: 103641.51, flops:90.76, batch-reuse:1
@ 2147 train 5.8964 , allloss: 5.9109, dt: 1258.62ms, fracRes: 0.5885, norm(attn): 0.0898, norm(output): 0.3691, norm(x): 1.2050, norm(y): 1.0050, norm:1.5070, tok/sec: 104139.29, flops:91.19, batch-reuse:1
@ 2148 train 5.9104 , allloss: 5.9257, dt: 1256.88ms, fracRes: 0.5892, norm(attn): 0.0898, norm(output): 0.3711, norm(x): 1.2021, norm(y): 1.0051, norm:1.1362, tok/sec: 104284.00, flops:91.32, batch-reuse:1
@ 2149 train 5.9090 , allloss: 5.9247, dt: 1268.75ms, fracRes: 0.5874, norm(attn): 0.0908, norm(output): 0.3711, norm(x): 1.2029, norm(y): 1.0050, norm:1.0176, tok/sec: 103308.08, flops:90.47, batch-reuse:1
@ 2150 train 5.9717 , allloss: 5.9879, dt: 1264.61ms, fracRes: 0.5871, norm(attn): 0.0918, norm(output): 0.3730, norm(x): 1.2012, norm(y): 1.0051, norm:1.2774, tok/sec: 103645.87, flops:90.76, batch-reuse:1
@ 2151 train 5.9086 , allloss: 5.9243, dt: 1262.68ms, fracRes: 0.5852, norm(attn): 0.0938, norm(output): 0.3730, norm(x): 1.2016, norm(y): 1.0050, norm:0.9908, tok/sec: 103804.21, flops:90.90, batch-reuse:1
@ 2152 train 5.9546 , allloss: 5.9703, dt: 1286.60ms, fracRes: 0.5854, norm(attn): 0.0938, norm(output): 0.3730, norm(x): 1.2063, norm(y): 1.0050, norm:1.3082, tok/sec: 101874.68, flops:89.21, batch-reuse:1
@ 2153 train 5.9045 , allloss: 5.9203, dt: 1249.58ms, fracRes: 0.5868, norm(attn): 0.0938, norm(output): 0.3730, norm(x): 1.2066, norm(y): 1.0050, norm:0.9324, tok/sec: 104892.89, flops:91.85, batch-reuse:1
@ 2154 train 5.9866 , allloss: 6.0022, dt: 1262.35ms, fracRes: 0.5882, norm(attn): 0.0923, norm(output): 0.3691, norm(x): 1.2055, norm(y): 1.0050, norm:2.3310, tok/sec: 103831.76, flops:90.92, batch-reuse:1
@ 2155 train 5.9953 , allloss: 6.0112, dt: 1265.40ms, fracRes: 0.5891, norm(attn): 0.0923, norm(output): 0.3730, norm(x): 1.2076, norm(y): 1.0050, norm:1.4417, tok/sec: 103581.52, flops:90.70, batch-reuse:1
@ 2156 train 5.9318 , allloss: 5.9474, dt: 1268.78ms, fracRes: 0.5907, norm(attn): 0.0898, norm(output): 0.3711, norm(x): 1.2144, norm(y): 1.0050, norm:3.3958, tok/sec: 103305.44, flops:90.46, batch-reuse:1
@ 2157 train 6.0283 , allloss: 6.0445, dt: 1303.33ms, fracRes: 0.5919, norm(attn): 0.0908, norm(output): 0.3691, norm(x): 1.2192, norm(y): 1.0050, norm:1.6619, tok/sec: 100567.07, flops:88.07, batch-reuse:1
@ 2158 train 5.9963 , allloss: 6.0119, dt: 1252.51ms, fracRes: 0.5926, norm(attn): 0.0884, norm(output): 0.3691, norm(x): 1.2225, norm(y): 1.0050, norm:2.9087, tok/sec: 104647.66, flops:91.64, batch-reuse:1
@ 2159 train 5.9576 , allloss: 5.9736, dt: 1260.92ms, fracRes: 0.5937, norm(attn): 0.0879, norm(output): 0.3652, norm(x): 1.2205, norm(y): 1.0050, norm:1.4745, tok/sec: 103949.77, flops:91.03, batch-reuse:1
@ 2160 train 6.0866 , allloss: 6.1041, dt: 1270.12ms, fracRes: 0.5932, norm(attn): 0.0908, norm(output): 0.3672, norm(x): 1.2045, norm(y): 1.0050, norm:1.4145, tok/sec: 103196.75, flops:90.37, batch-reuse:1
@ 2161 train 6.0507 , allloss: 6.0671, dt: 1282.01ms, fracRes: 0.5909, norm(attn): 0.0947, norm(output): 0.3711, norm(x): 1.2064, norm(y): 1.0050, norm:1.2024, tok/sec: 102239.48, flops:89.53, batch-reuse:1
@ 2162 train 5.9015 , allloss: 5.9175, dt: 1249.99ms, fracRes: 0.5858, norm(attn): 0.0962, norm(output): 0.3750, norm(x): 1.2093, norm(y): 1.0050, norm:1.1692, tok/sec: 104858.22, flops:91.82, batch-reuse:1
@ 2163 train 5.9482 , allloss: 5.9643, dt: 1264.40ms, fracRes: 0.5854, norm(attn): 0.0981, norm(output): 0.3770, norm(x): 1.2104, norm(y): 1.0050, norm:1.0854, tok/sec: 103663.24, flops:90.78, batch-reuse:1
@ 2164 train 5.8716 , allloss: 5.8873, dt: 1272.09ms, fracRes: 0.5865, norm(attn): 0.0962, norm(output): 0.3770, norm(x): 1.2131, norm(y): 1.0051, norm:0.9934, tok/sec: 103036.95, flops:90.23, batch-reuse:1
@ 2165 train 5.8333 , allloss: 5.8477, dt: 1271.11ms, fracRes: 0.5895, norm(attn): 0.0918, norm(output): 0.3730, norm(x): 1.2169, norm(y): 1.0051, norm:0.8982, tok/sec: 103116.21, flops:90.30, batch-reuse:1
@ 2166 train 5.9208 , allloss: 5.9354, dt: 1278.75ms, fracRes: 0.5948, norm(attn): 0.0874, norm(output): 0.3691, norm(x): 1.2231, norm(y): 1.0051, norm:1.1214, tok/sec: 102499.93, flops:89.76, batch-reuse:1
@ 2167 train 5.9452 , allloss: 5.9605, dt: 1283.73ms, fracRes: 0.5968, norm(attn): 0.0850, norm(output): 0.3652, norm(x): 1.2281, norm(y): 1.0051, norm:0.9383, tok/sec: 102102.77, flops:89.41, batch-reuse:1
@ 2168 train 5.8988 , allloss: 5.9139, dt: 1257.43ms, fracRes: 0.5957, norm(attn): 0.0864, norm(output): 0.3652, norm(x): 1.2258, norm(y): 1.0051, norm:0.7827, tok/sec: 104237.63, flops:91.28, batch-reuse:1
@ 2169 train 5.9736 , allloss: 5.9893, dt: 1287.40ms, fracRes: 0.5946, norm(attn): 0.0889, norm(output): 0.3711, norm(x): 1.2203, norm(y): 1.0051, norm:0.8364, tok/sec: 101811.29, flops:89.15, batch-reuse:1
@ 2170 train 5.9687 , allloss: 5.9838, dt: 1271.32ms, fracRes: 0.5923, norm(attn): 0.0928, norm(output): 0.3711, norm(x): 1.2176, norm(y): 1.0051, norm:0.9005, tok/sec: 103099.27, flops:90.28, batch-reuse:1
@ 2171 train 5.9721 , allloss: 5.9876, dt: 1263.43ms, fracRes: 0.5892, norm(attn): 0.0962, norm(output): 0.3730, norm(x): 1.2169, norm(y): 1.0051, norm:1.0044, tok/sec: 103742.58, flops:90.85, batch-reuse:1
@ 2172 train 5.9589 , allloss: 5.9749, dt: 1262.05ms, fracRes: 0.5875, norm(attn): 0.0996, norm(output): 0.3750, norm(x): 1.2196, norm(y): 1.0051, norm:0.9787, tok/sec: 103856.33, flops:90.95, batch-reuse:1
@ 2173 train 5.9020 , allloss: 5.9179, dt: 1273.62ms, fracRes: 0.5873, norm(attn): 0.0962, norm(output): 0.3730, norm(x): 1.2112, norm(y): 1.0051, norm:1.2645, tok/sec: 102913.29, flops:90.12, batch-reuse:1
@ 2174 train 5.9777 , allloss: 5.9929, dt: 1273.62ms, fracRes: 0.5902, norm(attn): 0.0923, norm(output): 0.3730, norm(x): 1.2208, norm(y): 1.0051, norm:1.0451, tok/sec: 102913.29, flops:90.12, batch-reuse:1
@ 2175 train 5.9317 , allloss: 5.9468, dt: 1273.29ms, fracRes: 0.5931, norm(attn): 0.0889, norm(output): 0.3691, norm(x): 1.2249, norm(y): 1.0051, norm:0.8071, tok/sec: 102939.56, flops:90.14, batch-reuse:1
@ 2176 train 5.8944 , allloss: 5.9086, dt: 1282.86ms, fracRes: 0.5944, norm(attn): 0.0869, norm(output): 0.3691, norm(x): 1.2289, norm(y): 1.0052, norm:0.8099, tok/sec: 102171.90, flops:89.47, batch-reuse:1
@ 2177 train 5.8780 , allloss: 5.8919, dt: 1267.09ms, fracRes: 0.5934, norm(attn): 0.0894, norm(output): 0.3691, norm(x): 1.2262, norm(y): 1.0052, norm:1.0296, tok/sec: 103443.71, flops:90.58, batch-reuse:1
@ 2178 train 5.9721 , allloss: 5.9868, dt: 1258.80ms, fracRes: 0.5909, norm(attn): 0.0933, norm(output): 0.3730, norm(x): 1.2217, norm(y): 1.0051, norm:0.9781, tok/sec: 104124.62, flops:91.18, batch-reuse:1
@ 2179 train 5.9301 , allloss: 5.9455, dt: 1280.38ms, fracRes: 0.5903, norm(attn): 0.0942, norm(output): 0.3730, norm(x): 1.2197, norm(y): 1.0051, norm:1.2305, tok/sec: 102369.82, flops:89.64, batch-reuse:1
@ 2180 train 5.8803 , allloss: 5.8951, dt: 1251.84ms, fracRes: 0.5886, norm(attn): 0.0947, norm(output): 0.3730, norm(x): 1.2175, norm(y): 1.0051, norm:0.9670, tok/sec: 104703.59, flops:91.69, batch-reuse:1
@ 2181 train 5.8910 , allloss: 5.9065, dt: 1268.16ms, fracRes: 0.5895, norm(attn): 0.0947, norm(output): 0.3730, norm(x): 1.2177, norm(y): 1.0051, norm:1.2275, tok/sec: 103355.82, flops:90.51, batch-reuse:1
@ 2182 train 6.0061 , allloss: 6.0207, dt: 1275.26ms, fracRes: 0.5926, norm(attn): 0.0923, norm(output): 0.3711, norm(x): 1.2223, norm(y): 1.0051, norm:0.9801, tok/sec: 102780.55, flops:90.00, batch-reuse:1
@ 2183 train 5.8448 , allloss: 5.8591, dt: 1258.29ms, fracRes: 0.5924, norm(attn): 0.0928, norm(output): 0.3711, norm(x): 1.2232, norm(y): 1.0052, norm:0.9678, tok/sec: 104166.98, flops:91.22, batch-reuse:1
@ 2184 train 5.8341 , allloss: 5.8490, dt: 1297.52ms, fracRes: 0.5909, norm(attn): 0.0933, norm(output): 0.3711, norm(x): 1.2204, norm(y): 1.0052, norm:1.1304, tok/sec: 101016.98, flops:88.46, batch-reuse:1
@ 2185 train 5.9547 , allloss: 5.9707, dt: 1310.10ms, fracRes: 0.5891, norm(attn): 0.0942, norm(output): 0.3730, norm(x): 1.2172, norm(y): 1.0051, norm:1.4489, tok/sec: 100047.45, flops:87.61, batch-reuse:1
@ 2186 train 5.8380 , allloss: 5.8532, dt: 1297.37ms, fracRes: 0.5887, norm(attn): 0.0938, norm(output): 0.3711, norm(x): 1.2170, norm(y): 1.0051, norm:0.8383, tok/sec: 101028.80, flops:88.47, batch-reuse:1
@ 2187 train 5.8266 , allloss: 5.8418, dt: 1286.15ms, fracRes: 0.5900, norm(attn): 0.0938, norm(output): 0.3691, norm(x): 1.2165, norm(y): 1.0051, norm:1.0148, tok/sec: 101910.47, flops:89.24, batch-reuse:1
@ 2188 train 5.7884 , allloss: 5.8033, dt: 1268.33ms, fracRes: 0.5921, norm(attn): 0.0918, norm(output): 0.3652, norm(x): 1.2222, norm(y): 1.0052, norm:1.2714, tok/sec: 103341.99, flops:90.50, batch-reuse:1
@ 2189 train 5.8443 , allloss: 5.8591, dt: 1276.19ms, fracRes: 0.5921, norm(attn): 0.0918, norm(output): 0.3652, norm(x): 1.2183, norm(y): 1.0052, norm:0.7774, tok/sec: 102705.84, flops:89.94, batch-reuse:1
@ 2190 train 5.8190 , allloss: 5.8347, dt: 1272.99ms, fracRes: 0.5922, norm(attn): 0.0913, norm(output): 0.3652, norm(x): 1.2078, norm(y): 1.0052, norm:1.4483, tok/sec: 102963.50, flops:90.16, batch-reuse:1
@ 2191 train 5.9061 , allloss: 5.9215, dt: 1270.39ms, fracRes: 0.5920, norm(attn): 0.0918, norm(output): 0.3652, norm(x): 1.2125, norm(y): 1.0052, norm:0.7726, tok/sec: 103174.83, flops:90.35, batch-reuse:1
@ 2192 train 5.8516 , allloss: 5.8672, dt: 1275.92ms, fracRes: 0.5925, norm(attn): 0.0928, norm(output): 0.3652, norm(x): 1.2163, norm(y): 1.0052, norm:1.4748, tok/sec: 102727.53, flops:89.96, batch-reuse:1
@ 2193 train 5.8328 , allloss: 5.8484, dt: 1265.96ms, fracRes: 0.5912, norm(attn): 0.0933, norm(output): 0.3652, norm(x): 1.2143, norm(y): 1.0052, norm:0.9918, tok/sec: 103535.33, flops:90.66, batch-reuse:1
@ 2194 train 5.8855 , allloss: 5.9008, dt: 1262.27ms, fracRes: 0.5897, norm(attn): 0.0952, norm(output): 0.3691, norm(x): 1.2185, norm(y): 1.0051, norm:1.1767, tok/sec: 103838.54, flops:90.93, batch-reuse:1
@ 2195 train 5.9441 , allloss: 5.9597, dt: 1275.20ms, fracRes: 0.5889, norm(attn): 0.0962, norm(output): 0.3711, norm(x): 1.2135, norm(y): 1.0051, norm:1.1194, tok/sec: 102785.61, flops:90.01, batch-reuse:1
@ 2196 train 5.8639 , allloss: 5.8784, dt: 1270.65ms, fracRes: 0.5895, norm(attn): 0.0938, norm(output): 0.3691, norm(x): 1.2189, norm(y): 1.0052, norm:1.0644, tok/sec: 103153.55, flops:90.33, batch-reuse:1
@ 2197 train 5.8359 , allloss: 5.8516, dt: 1288.49ms, fracRes: 0.5916, norm(attn): 0.0918, norm(output): 0.3672, norm(x): 1.2154, norm(y): 1.0052, norm:1.1569, tok/sec: 101725.18, flops:89.08, batch-reuse:1
@ 2198 train 5.8870 , allloss: 5.9023, dt: 1264.50ms, fracRes: 0.5916, norm(attn): 0.0908, norm(output): 0.3652, norm(x): 1.2198, norm(y): 1.0052, norm:1.2848, tok/sec: 103655.44, flops:90.77, batch-reuse:1
@ 2199 train 5.8793 , allloss: 5.8944, dt: 1265.10ms, fracRes: 0.5904, norm(attn): 0.0889, norm(output): 0.3633, norm(x): 1.2117, norm(y): 1.0051, norm:0.9834, tok/sec: 103605.71, flops:90.73, batch-reuse:1
@ 2200 train 5.8787 , allloss: 5.8938, dt: 1265.28ms, fracRes: 0.5890, norm(attn): 0.0933, norm(output): 0.3633, norm(x): 1.2111, norm(y): 1.0052, norm:1.3846, tok/sec: 103591.34, flops:90.71, batch-reuse:1
@ 2201 train 5.8592 , allloss: 5.8745, dt: 1306.80ms, fracRes: 0.5885, norm(attn): 0.0947, norm(output): 0.3691, norm(x): 1.2118, norm(y): 1.0052, norm:0.9316, tok/sec: 100300.01, flops:87.83, batch-reuse:1
@ 2202 train 5.9474 , allloss: 5.9621, dt: 1273.79ms, fracRes: 0.5898, norm(attn): 0.0952, norm(output): 0.3711, norm(x): 1.2218, norm(y): 1.0052, norm:1.1318, tok/sec: 102899.10, flops:90.11, batch-reuse:1
@ 2203 train 5.8570 , allloss: 5.8720, dt: 1275.32ms, fracRes: 0.5883, norm(attn): 0.0957, norm(output): 0.3711, norm(x): 1.2142, norm(y): 1.0051, norm:0.9959, tok/sec: 102775.79, flops:90.00, batch-reuse:1
@ 2204 train 5.8633 , allloss: 5.8784, dt: 1261.34ms, fracRes: 0.5885, norm(attn): 0.0947, norm(output): 0.3652, norm(x): 1.2130, norm(y): 1.0052, norm:0.8101, tok/sec: 103915.23, flops:91.00, batch-reuse:1
@ 2205 train 5.8957 , allloss: 5.9102, dt: 1282.42ms, fracRes: 0.5918, norm(attn): 0.0918, norm(output): 0.3633, norm(x): 1.2166, norm(y): 1.0052, norm:1.0216, tok/sec: 102207.06, flops:89.50, batch-reuse:1
@ 2206 train 5.8052 , allloss: 5.8200, dt: 1311.77ms, fracRes: 0.5921, norm(attn): 0.0918, norm(output): 0.3633, norm(x): 1.2160, norm(y): 1.0052, norm:1.0677, tok/sec: 99919.72, flops:87.50, batch-reuse:1
@ 2207 train 5.8374 , allloss: 5.8522, dt: 1269.93ms, fracRes: 0.5914, norm(attn): 0.0928, norm(output): 0.3652, norm(x): 1.2221, norm(y): 1.0052, norm:1.4158, tok/sec: 103212.15, flops:90.38, batch-reuse:1
@ 2208 train 5.9292 , allloss: 5.9455, dt: 1264.59ms, fracRes: 0.5915, norm(attn): 0.0938, norm(output): 0.3652, norm(x): 1.2182, norm(y): 1.0052, norm:0.7877, tok/sec: 103648.13, flops:90.76, batch-reuse:1
@ 2209 train 5.7749 , allloss: 5.7902, dt: 1295.79ms, fracRes: 0.5888, norm(attn): 0.0957, norm(output): 0.3691, norm(x): 1.2128, norm(y): 1.0052, norm:1.1528, tok/sec: 101151.94, flops:88.58, batch-reuse:1
@ 2210 train 5.7843 , allloss: 5.7992, dt: 1311.72ms, fracRes: 0.5874, norm(attn): 0.0986, norm(output): 0.3711, norm(x): 1.2110, norm(y): 1.0052, norm:1.2965, tok/sec: 99923.95, flops:87.50, batch-reuse:1
@ 2211 train 5.8544 , allloss: 5.8697, dt: 1292.74ms, fracRes: 0.5889, norm(attn): 0.0981, norm(output): 0.3691, norm(x): 1.2151, norm(y): 1.0052, norm:0.8309, tok/sec: 101390.48, flops:88.79, batch-reuse:1
@ 2212 train 5.7681 , allloss: 5.7830, dt: 1276.01ms, fracRes: 0.5901, norm(attn): 0.0942, norm(output): 0.3652, norm(x): 1.2176, norm(y): 1.0053, norm:1.0183, tok/sec: 102719.83, flops:89.95, batch-reuse:1
@ 2213 train 6.1438 , allloss: 6.1602, dt: 1280.08ms, fracRes: 0.5958, norm(attn): 0.0913, norm(output): 0.3613, norm(x): 1.2207, norm(y): 1.0052, norm:1.4066, tok/sec: 102393.88, flops:89.66, batch-reuse:1
@ 2214 train 5.9655 , allloss: 5.9803, dt: 1267.61ms, fracRes: 0.5931, norm(attn): 0.0913, norm(output): 0.3613, norm(x): 1.2195, norm(y): 1.0052, norm:1.1479, tok/sec: 103400.61, flops:90.55, batch-reuse:1
@ 2215 train 5.8803 , allloss: 5.8956, dt: 1291.71ms, fracRes: 0.5949, norm(attn): 0.0879, norm(output): 0.3555, norm(x): 1.2141, norm(y): 1.0052, norm:1.5619, tok/sec: 101472.04, flops:88.86, batch-reuse:1
@ 2216 train 5.9082 , allloss: 5.9244, dt: 1261.23ms, fracRes: 0.5959, norm(attn): 0.0879, norm(output): 0.3535, norm(x): 1.2121, norm(y): 1.0052, norm:1.0994, tok/sec: 103923.57, flops:91.00, batch-reuse:1
@ 2217 train 5.8020 , allloss: 5.8170, dt: 1286.14ms, fracRes: 0.5922, norm(attn): 0.0928, norm(output): 0.3594, norm(x): 1.2099, norm(y): 1.0052, norm:1.3059, tok/sec: 101910.85, flops:89.24, batch-reuse:1
@ 2218 train 5.8024 , allloss: 5.8187, dt: 1291.63ms, fracRes: 0.5860, norm(attn): 0.1011, norm(output): 0.3672, norm(x): 1.1967, norm(y): 1.0052, norm:0.8303, tok/sec: 101478.27, flops:88.86, batch-reuse:1
@ 2219 train 5.8776 , allloss: 5.8928, dt: 1322.86ms, fracRes: 0.5869, norm(attn): 0.0986, norm(output): 0.3711, norm(x): 1.2001, norm(y): 1.0052, norm:1.0644, tok/sec: 99082.40, flops:86.77, batch-reuse:1
@ 2220 train 5.8303 , allloss: 5.8450, dt: 1275.84ms, fracRes: 0.5889, norm(attn): 0.0947, norm(output): 0.3652, norm(x): 1.2060, norm(y): 1.0052, norm:1.0443, tok/sec: 102734.23, flops:89.96, batch-reuse:1
@ 2221 train 5.7847 , allloss: 5.8005, dt: 1256.54ms, fracRes: 0.5905, norm(attn): 0.0947, norm(output): 0.3652, norm(x): 1.2062, norm(y): 1.0052, norm:1.0237, tok/sec: 104311.88, flops:91.34, batch-reuse:1
@ 2222 train 5.8521 , allloss: 5.8674, dt: 1267.17ms, fracRes: 0.5926, norm(attn): 0.0918, norm(output): 0.3594, norm(x): 1.2100, norm(y): 1.0052, norm:1.1014, tok/sec: 103437.09, flops:90.58, batch-reuse:1
@ 2223 train 5.7960 , allloss: 5.8106, dt: 1274.76ms, fracRes: 0.5935, norm(attn): 0.0913, norm(output): 0.3594, norm(x): 1.2159, norm(y): 1.0053, norm:1.3241, tok/sec: 102821.08, flops:90.04, batch-reuse:1
@ 2224 train 5.9991 , allloss: 6.0150, dt: 1270.29ms, fracRes: 0.5967, norm(attn): 0.0908, norm(output): 0.3516, norm(x): 1.2071, norm(y): 1.0052, norm:1.5802, tok/sec: 103182.55, flops:90.36, batch-reuse:1
@ 2225 train 5.8663 , allloss: 5.8813, dt: 1271.78ms, fracRes: 0.5940, norm(attn): 0.0913, norm(output): 0.3555, norm(x): 1.2125, norm(y): 1.0052, norm:1.2228, tok/sec: 103062.12, flops:90.25, batch-reuse:1
@ 2226 train 5.8574 , allloss: 5.8726, dt: 1265.55ms, fracRes: 0.5917, norm(attn): 0.0933, norm(output): 0.3633, norm(x): 1.2102, norm(y): 1.0052, norm:1.1480, tok/sec: 103569.03, flops:90.69, batch-reuse:1
@ 2227 train 5.8022 , allloss: 5.8167, dt: 1299.16ms, fracRes: 0.5903, norm(attn): 0.0977, norm(output): 0.3633, norm(x): 1.2134, norm(y): 1.0052, norm:1.4148, tok/sec: 100890.18, flops:88.35, batch-reuse:1
@ 2228 train 5.8505 , allloss: 5.8653, dt: 1267.12ms, fracRes: 0.5906, norm(attn): 0.0986, norm(output): 0.3652, norm(x): 1.2153, norm(y): 1.0053, norm:1.1137, tok/sec: 103440.59, flops:90.58, batch-reuse:1
@ 2229 train 6.0023 , allloss: 6.0187, dt: 1278.36ms, fracRes: 0.5900, norm(attn): 0.0991, norm(output): 0.3652, norm(x): 1.2055, norm(y): 1.0052, norm:1.0710, tok/sec: 102531.76, flops:89.79, batch-reuse:1
@ 2230 train 6.0168 , allloss: 6.0324, dt: 1298.70ms, fracRes: 0.5923, norm(attn): 0.0962, norm(output): 0.3613, norm(x): 1.2083, norm(y): 1.0051, norm:1.3709, tok/sec: 100925.74, flops:88.38, batch-reuse:1
@ 2231 train 6.0389 , allloss: 6.0543, dt: 1283.50ms, fracRes: 0.5935, norm(attn): 0.0942, norm(output): 0.3555, norm(x): 1.2114, norm(y): 1.0052, norm:1.0039, tok/sec: 102120.99, flops:89.43, batch-reuse:1
@ 2232 train 5.9945 , allloss: 6.0087, dt: 1260.01ms, fracRes: 0.5937, norm(attn): 0.0928, norm(output): 0.3555, norm(x): 1.2135, norm(y): 1.0053, norm:1.0380, tok/sec: 104024.81, flops:91.09, batch-reuse:1
@ 2233 train 5.9421 , allloss: 5.9566, dt: 1277.00ms, fracRes: 0.5929, norm(attn): 0.0923, norm(output): 0.3594, norm(x): 1.2091, norm(y): 1.0052, norm:1.1776, tok/sec: 102640.61, flops:89.88, batch-reuse:1
@ 2234 train 6.0900 , allloss: 6.1063, dt: 1275.68ms, fracRes: 0.5926, norm(attn): 0.0947, norm(output): 0.3633, norm(x): 1.2083, norm(y): 1.0052, norm:1.0311, tok/sec: 102747.17, flops:89.97, batch-reuse:1
@ 2235 train 6.0069 , allloss: 6.0232, dt: 1273.04ms, fracRes: 0.5904, norm(attn): 0.0967, norm(output): 0.3633, norm(x): 1.2046, norm(y): 1.0052, norm:1.1845, tok/sec: 102959.99, flops:90.16, batch-reuse:1
@ 2236 train 5.9450 , allloss: 5.9608, dt: 1312.90ms, fracRes: 0.5905, norm(attn): 0.0981, norm(output): 0.3652, norm(x): 1.2117, norm(y): 1.0052, norm:0.9262, tok/sec: 99833.68, flops:87.42, batch-reuse:1
@ 2237 train 6.0370 , allloss: 6.0532, dt: 1272.72ms, fracRes: 0.5913, norm(attn): 0.0981, norm(output): 0.3652, norm(x): 1.2115, norm(y): 1.0052, norm:0.9439, tok/sec: 102985.97, flops:90.18, batch-reuse:1
@ 2238 train 5.9183 , allloss: 5.9330, dt: 1260.78ms, fracRes: 0.5913, norm(attn): 0.0957, norm(output): 0.3633, norm(x): 1.2121, norm(y): 1.0052, norm:0.9363, tok/sec: 103960.95, flops:91.04, batch-reuse:1
@ 2239 train 5.9140 , allloss: 5.9288, dt: 1274.52ms, fracRes: 0.5930, norm(attn): 0.0933, norm(output): 0.3633, norm(x): 1.2105, norm(y): 1.0053, norm:1.0509, tok/sec: 102840.56, flops:90.06, batch-reuse:1
@ 2240 train 5.9830 , allloss: 5.9979, dt: 1262.39ms, fracRes: 0.5922, norm(attn): 0.0933, norm(output): 0.3594, norm(x): 1.2042, norm(y): 1.0052, norm:1.0231, tok/sec: 103828.38, flops:90.92, batch-reuse:1
@ 2241 train 6.0545 , allloss: 6.0693, dt: 1299.40ms, fracRes: 0.5936, norm(attn): 0.0938, norm(output): 0.3574, norm(x): 1.2073, norm(y): 1.0052, norm:1.1894, tok/sec: 100871.28, flops:88.33, batch-reuse:1
@ 2242 train 5.9421 , allloss: 5.9567, dt: 1289.30ms, fracRes: 0.5926, norm(attn): 0.0933, norm(output): 0.3535, norm(x): 1.2068, norm(y): 1.0053, norm:1.1542, tok/sec: 101661.24, flops:89.02, batch-reuse:1
@ 2243 train 6.0390 , allloss: 6.0545, dt: 1283.85ms, fracRes: 0.5928, norm(attn): 0.0938, norm(output): 0.3613, norm(x): 1.2064, norm(y): 1.0053, norm:1.1748, tok/sec: 102093.04, flops:89.40, batch-reuse:1
@ 2244 train 6.0126 , allloss: 6.0287, dt: 1284.22ms, fracRes: 0.5893, norm(attn): 0.0981, norm(output): 0.3613, norm(x): 1.1978, norm(y): 1.0052, norm:1.0481, tok/sec: 102063.70, flops:89.38, batch-reuse:1
@ 2245 train 5.9576 , allloss: 5.9729, dt: 1270.29ms, fracRes: 0.5906, norm(attn): 0.0967, norm(output): 0.3633, norm(x): 1.2101, norm(y): 1.0052, norm:1.0291, tok/sec: 103182.86, flops:90.36, batch-reuse:1
@ 2246 train 5.9121 , allloss: 5.9273, dt: 1277.28ms, fracRes: 0.5904, norm(attn): 0.0972, norm(output): 0.3633, norm(x): 1.2069, norm(y): 1.0052, norm:1.0472, tok/sec: 102617.71, flops:89.86, batch-reuse:1
@ 2247 train 5.9606 , allloss: 5.9756, dt: 1282.01ms, fracRes: 0.5921, norm(attn): 0.0942, norm(output): 0.3633, norm(x): 1.2148, norm(y): 1.0052, norm:0.9309, tok/sec: 102239.50, flops:89.53, batch-reuse:1
@ 2248 train 6.0135 , allloss: 6.0279, dt: 1262.41ms, fracRes: 0.5933, norm(attn): 0.0942, norm(output): 0.3594, norm(x): 1.2187, norm(y): 1.0053, norm:1.0847, tok/sec: 103827.01, flops:90.92, batch-reuse:1
@ 2249 train 5.8857 , allloss: 5.9002, dt: 1265.63ms, fracRes: 0.5923, norm(attn): 0.0942, norm(output): 0.3594, norm(x): 1.2202, norm(y): 1.0053, norm:1.3482, tok/sec: 103562.61, flops:90.69, batch-reuse:1
@ 2250 train 6.0632 , allloss: 6.0778, dt: 1276.36ms, fracRes: 0.5940, norm(attn): 0.0933, norm(output): 0.3574, norm(x): 1.2203, norm(y): 1.0053, norm:0.9597, tok/sec: 102691.68, flops:89.93, batch-reuse:1
@ 2251 train 5.9338 , allloss: 5.9500, dt: 1294.63ms, fracRes: 0.5901, norm(attn): 0.0942, norm(output): 0.3633, norm(x): 1.1982, norm(y): 1.0052, norm:1.9133, tok/sec: 101242.58, flops:88.66, batch-reuse:1
@ 2252 train 5.9407 , allloss: 5.9561, dt: 1248.72ms, fracRes: 0.5906, norm(attn): 0.0947, norm(output): 0.3633, norm(x): 1.2083, norm(y): 1.0053, norm:1.2745, tok/sec: 104965.05, flops:91.92, batch-reuse:1
@ 2253 train 5.9107 , allloss: 5.9255, dt: 1258.23ms, fracRes: 0.5909, norm(attn): 0.0942, norm(output): 0.3574, norm(x): 1.2119, norm(y): 1.0053, norm:1.3231, tok/sec: 104172.13, flops:91.22, batch-reuse:1
@ 2254 train 5.9873 , allloss: 6.0020, dt: 1305.18ms, fracRes: 0.5916, norm(attn): 0.0938, norm(output): 0.3555, norm(x): 1.2140, norm(y): 1.0052, norm:1.2980, tok/sec: 100424.11, flops:87.94, batch-reuse:1
@ 2255 train 5.9546 , allloss: 5.9698, dt: 1293.55ms, fracRes: 0.5926, norm(attn): 0.0928, norm(output): 0.3574, norm(x): 1.2158, norm(y): 1.0053, norm:0.9036, tok/sec: 101327.09, flops:88.73, batch-reuse:1
@ 2256 train 6.0613 , allloss: 6.0778, dt: 1263.18ms, fracRes: 0.5914, norm(attn): 0.0952, norm(output): 0.3594, norm(x): 1.2082, norm(y): 1.0052, norm:1.2845, tok/sec: 103763.16, flops:90.86, batch-reuse:1
@ 2257 train 5.9796 , allloss: 5.9946, dt: 1263.00ms, fracRes: 0.5935, norm(attn): 0.0928, norm(output): 0.3555, norm(x): 1.2156, norm(y): 1.0053, norm:1.0574, tok/sec: 103778.21, flops:90.88, batch-reuse:1
@ 2258 train 5.9273 , allloss: 5.9413, dt: 1272.00ms, fracRes: 0.5941, norm(attn): 0.0942, norm(output): 0.3594, norm(x): 1.2238, norm(y): 1.0054, norm:1.1437, tok/sec: 103044.19, flops:90.23, batch-reuse:1
@ 2259 train 5.9870 , allloss: 6.0018, dt: 1298.16ms, fracRes: 0.5925, norm(attn): 0.0952, norm(output): 0.3574, norm(x): 1.2156, norm(y): 1.0052, norm:1.0577, tok/sec: 100967.31, flops:88.42, batch-reuse:1
@ 2260 train 5.9503 , allloss: 5.9664, dt: 1305.93ms, fracRes: 0.5900, norm(attn): 0.0972, norm(output): 0.3633, norm(x): 1.2095, norm(y): 1.0053, norm:1.5351, tok/sec: 100366.81, flops:87.89, batch-reuse:1
@ 2261 train 5.9682 , allloss: 5.9848, dt: 1303.34ms, fracRes: 0.5908, norm(attn): 0.0957, norm(output): 0.3633, norm(x): 1.2086, norm(y): 1.0053, norm:1.1473, tok/sec: 100566.48, flops:88.06, batch-reuse:1
@ 2262 train 5.9891 , allloss: 6.0046, dt: 1257.87ms, fracRes: 0.5936, norm(attn): 0.0947, norm(output): 0.3555, norm(x): 1.2180, norm(y): 1.0054, norm:1.3340, tok/sec: 104201.55, flops:91.25, batch-reuse:1
@ 2263 train 6.0197 , allloss: 6.0346, dt: 1292.51ms, fracRes: 0.5945, norm(attn): 0.0928, norm(output): 0.3555, norm(x): 1.2200, norm(y): 1.0054, norm:1.4480, tok/sec: 101408.90, flops:88.80, batch-reuse:1
@ 2264 train 5.9933 , allloss: 6.0087, dt: 1288.15ms, fracRes: 0.5936, norm(attn): 0.0952, norm(output): 0.3555, norm(x): 1.2174, norm(y): 1.0053, norm:1.1179, tok/sec: 101752.38, flops:89.10, batch-reuse:1
@ 2265 train 5.9668 , allloss: 5.9840, dt: 1288.71ms, fracRes: 0.5926, norm(attn): 0.0952, norm(output): 0.3594, norm(x): 1.2066, norm(y): 1.0052, norm:1.3973, tok/sec: 101708.18, flops:89.06, batch-reuse:1
@ 2266 train 5.8903 , allloss: 5.9062, dt: 1312.88ms, fracRes: 0.5922, norm(attn): 0.0957, norm(output): 0.3555, norm(x): 1.2050, norm(y): 1.0053, norm:1.2552, tok/sec: 99835.31, flops:87.42, batch-reuse:1
@ 2267 train 5.9913 , allloss: 6.0061, dt: 1287.86ms, fracRes: 0.5927, norm(attn): 0.0947, norm(output): 0.3594, norm(x): 1.2087, norm(y): 1.0053, norm:1.3157, tok/sec: 101774.89, flops:89.12, batch-reuse:1
@ 2268 train 6.0172 , allloss: 6.0313, dt: 1270.32ms, fracRes: 0.5942, norm(attn): 0.0947, norm(output): 0.3594, norm(x): 1.2195, norm(y): 1.0053, norm:1.0064, tok/sec: 103180.56, flops:90.35, batch-reuse:1
@ 2269 train 6.0238 , allloss: 6.0388, dt: 1294.12ms, fracRes: 0.5929, norm(attn): 0.0942, norm(output): 0.3574, norm(x): 1.2126, norm(y): 1.0053, norm:1.1473, tok/sec: 101282.81, flops:88.69, batch-reuse:1
@ 2270 train 6.0721 , allloss: 6.0878, dt: 1297.87ms, fracRes: 0.5919, norm(attn): 0.0952, norm(output): 0.3594, norm(x): 1.2101, norm(y): 1.0053, norm:1.1194, tok/sec: 100989.81, flops:88.44, batch-reuse:1
@ 2271 train 5.9822 , allloss: 5.9972, dt: 1272.28ms, fracRes: 0.5925, norm(attn): 0.0967, norm(output): 0.3633, norm(x): 1.2178, norm(y): 1.0053, norm:1.0626, tok/sec: 103021.74, flops:90.21, batch-reuse:1
@ 2272 train 5.8590 , allloss: 5.8735, dt: 1293.70ms, fracRes: 0.5932, norm(attn): 0.0933, norm(output): 0.3574, norm(x): 1.2240, norm(y): 1.0053, norm:1.2137, tok/sec: 101315.31, flops:88.72, batch-reuse:1
@ 2273 train 5.9987 , allloss: 6.0133, dt: 1267.72ms, fracRes: 0.5929, norm(attn): 0.0942, norm(output): 0.3633, norm(x): 1.2181, norm(y): 1.0053, norm:1.1700, tok/sec: 103391.78, flops:90.54, batch-reuse:1
@ 2274 train 5.9513 , allloss: 5.9657, dt: 1274.66ms, fracRes: 0.5930, norm(attn): 0.0952, norm(output): 0.3594, norm(x): 1.2157, norm(y): 1.0054, norm:1.3603, tok/sec: 102828.79, flops:90.05, batch-reuse:1
@ 2275 train 5.9396 , allloss: 5.9546, dt: 1310.69ms, fracRes: 0.5927, norm(attn): 0.0986, norm(output): 0.3633, norm(x): 1.2147, norm(y): 1.0053, norm:1.0922, tok/sec: 100002.48, flops:87.57, batch-reuse:1
@ 2276 train 5.9117 , allloss: 5.9268, dt: 1305.16ms, fracRes: 0.5950, norm(attn): 0.0952, norm(output): 0.3594, norm(x): 1.2242, norm(y): 1.0053, norm:0.9416, tok/sec: 100425.96, flops:87.94, batch-reuse:1
@ 2277 train 5.9069 , allloss: 5.9217, dt: 1278.67ms, fracRes: 0.5947, norm(attn): 0.0947, norm(output): 0.3594, norm(x): 1.2168, norm(y): 1.0053, norm:1.0298, tok/sec: 102506.50, flops:89.76, batch-reuse:1
@ 2278 train 6.0595 , allloss: 6.0744, dt: 1289.84ms, fracRes: 0.5946, norm(attn): 0.0967, norm(output): 0.3535, norm(x): 1.2128, norm(y): 1.0053, norm:1.0839, tok/sec: 101619.09, flops:88.99, batch-reuse:1
@ 2279 train 5.9001 , allloss: 5.9146, dt: 1306.67ms, fracRes: 0.5917, norm(attn): 0.0957, norm(output): 0.3594, norm(x): 1.2136, norm(y): 1.0053, norm:1.2486, tok/sec: 100309.77, flops:87.84, batch-reuse:1
@ 2280 train 5.8746 , allloss: 5.8886, dt: 1283.42ms, fracRes: 0.5921, norm(attn): 0.0952, norm(output): 0.3633, norm(x): 1.2182, norm(y): 1.0053, norm:1.2932, tok/sec: 102127.50, flops:89.43, batch-reuse:1
@ 2281 train 5.8486 , allloss: 5.8629, dt: 1319.78ms, fracRes: 0.5944, norm(attn): 0.0952, norm(output): 0.3555, norm(x): 1.2327, norm(y): 1.0054, norm:1.2014, tok/sec: 99313.41, flops:86.97, batch-reuse:1
@ 2282 train 5.9622 , allloss: 5.9766, dt: 1274.70ms, fracRes: 0.5928, norm(attn): 0.0952, norm(output): 0.3633, norm(x): 1.2213, norm(y): 1.0053, norm:1.0113, tok/sec: 102825.38, flops:90.04, batch-reuse:1
@ 2283 train 5.8996 , allloss: 5.9140, dt: 1259.56ms, fracRes: 0.5914, norm(attn): 0.0952, norm(output): 0.3633, norm(x): 1.2171, norm(y): 1.0053, norm:1.2619, tok/sec: 104061.77, flops:91.13, batch-reuse:1
@ 2284 train 5.8504 , allloss: 5.8649, dt: 1260.06ms, fracRes: 0.5915, norm(attn): 0.0957, norm(output): 0.3633, norm(x): 1.2164, norm(y): 1.0053, norm:1.1372, tok/sec: 104020.52, flops:91.09, batch-reuse:1
@ 2285 train 5.8712 , allloss: 5.8852, dt: 1253.03ms, fracRes: 0.5923, norm(attn): 0.0962, norm(output): 0.3594, norm(x): 1.2170, norm(y): 1.0054, norm:0.9595, tok/sec: 104603.72, flops:91.60, batch-reuse:1
@ 2286 train 5.9200 , allloss: 5.9339, dt: 1262.88ms, fracRes: 0.5924, norm(attn): 0.0967, norm(output): 0.3594, norm(x): 1.2205, norm(y): 1.0053, norm:0.9554, tok/sec: 103788.49, flops:90.89, batch-reuse:1
@ 2287 train 5.8630 , allloss: 5.8775, dt: 1260.42ms, fracRes: 0.5924, norm(attn): 0.0952, norm(output): 0.3574, norm(x): 1.2204, norm(y): 1.0053, norm:1.1076, tok/sec: 103990.94, flops:91.06, batch-reuse:1
@ 2288 train 5.9001 , allloss: 5.9149, dt: 1550.84ms, fracRes: 0.5923, norm(attn): 0.0947, norm(output): 0.3594, norm(x): 1.2206, norm(y): 1.0053, norm:0.9822, tok/sec: 84517.02, flops:74.01, batch-reuse:1
@ 2289 train 5.8602 , allloss: 5.8764, dt: 1271.04ms, fracRes: 0.5922, norm(attn): 0.0977, norm(output): 0.3613, norm(x): 1.2154, norm(y): 1.0053, norm:1.0509, tok/sec: 103121.80, flops:90.30, batch-reuse:1
@ 2290 train 5.8413 , allloss: 5.8552, dt: 1283.76ms, fracRes: 0.5930, norm(attn): 0.0967, norm(output): 0.3574, norm(x): 1.2195, norm(y): 1.0054, norm:0.9498, tok/sec: 102100.32, flops:89.41, batch-reuse:1
@ 2291 train 5.9375 , allloss: 5.9520, dt: 1270.52ms, fracRes: 0.5931, norm(attn): 0.0938, norm(output): 0.3535, norm(x): 1.2182, norm(y): 1.0053, norm:0.9199, tok/sec: 103164.12, flops:90.34, batch-reuse:1
@ 2292 train 5.9136 , allloss: 5.9285, dt: 1270.18ms, fracRes: 0.5942, norm(attn): 0.0933, norm(output): 0.3535, norm(x): 1.2167, norm(y): 1.0054, norm:0.9028, tok/sec: 103191.58, flops:90.36, batch-reuse:1
@ 2293 train 5.9391 , allloss: 5.9537, dt: 1270.44ms, fracRes: 0.5939, norm(attn): 0.0938, norm(output): 0.3535, norm(x): 1.2177, norm(y): 1.0053, norm:1.0252, tok/sec: 103170.35, flops:90.34, batch-reuse:1
@ 2294 train 5.9312 , allloss: 5.9452, dt: 1270.75ms, fracRes: 0.5938, norm(attn): 0.0938, norm(output): 0.3535, norm(x): 1.2210, norm(y): 1.0054, norm:1.2917, tok/sec: 103145.46, flops:90.32, batch-reuse:1
@ 2295 train 5.8432 , allloss: 5.8577, dt: 1270.00ms, fracRes: 0.5925, norm(attn): 0.0957, norm(output): 0.3555, norm(x): 1.2134, norm(y): 1.0054, norm:0.9831, tok/sec: 103206.05, flops:90.38, batch-reuse:1
@ 2296 train 5.8873 , allloss: 5.9029, dt: 1264.77ms, fracRes: 0.5893, norm(attn): 0.1006, norm(output): 0.3555, norm(x): 1.2052, norm(y): 1.0053, norm:1.0112, tok/sec: 103632.83, flops:90.75, batch-reuse:1
@ 2297 train 5.8573 , allloss: 5.8731, dt: 1281.21ms, fracRes: 0.5894, norm(attn): 0.1006, norm(output): 0.3613, norm(x): 1.2055, norm(y): 1.0053, norm:0.7824, tok/sec: 102303.66, flops:89.59, batch-reuse:1
@ 2298 train 5.9226 , allloss: 5.9377, dt: 1272.04ms, fracRes: 0.5943, norm(attn): 0.0947, norm(output): 0.3535, norm(x): 1.2179, norm(y): 1.0054, norm:0.9797, tok/sec: 103040.91, flops:90.23, batch-reuse:1
@ 2299 train 5.8889 , allloss: 5.9034, dt: 1310.20ms, fracRes: 0.5956, norm(attn): 0.0928, norm(output): 0.3516, norm(x): 1.2199, norm(y): 1.0054, norm:1.0380, tok/sec: 100039.78, flops:87.60, batch-reuse:1
@ 2300 train 5.8868 , allloss: 5.9015, dt: 1257.74ms, fracRes: 0.5959, norm(attn): 0.0928, norm(output): 0.3516, norm(x): 1.2189, norm(y): 1.0054, norm:1.1154, tok/sec: 104212.39, flops:91.26, batch-reuse:1
@ 2301 train 5.9231 , allloss: 5.9378, dt: 1272.54ms, fracRes: 0.5952, norm(attn): 0.0928, norm(output): 0.3535, norm(x): 1.2186, norm(y): 1.0054, norm:0.8971, tok/sec: 103000.25, flops:90.20, batch-reuse:1
@ 2302 train 5.9040 , allloss: 5.9186, dt: 1268.98ms, fracRes: 0.5961, norm(attn): 0.0928, norm(output): 0.3535, norm(x): 1.2201, norm(y): 1.0054, norm:1.2349, tok/sec: 103288.90, flops:90.45, batch-reuse:1
@ 2303 train 5.8492 , allloss: 5.8632, dt: 1258.28ms, fracRes: 0.5927, norm(attn): 0.0942, norm(output): 0.3594, norm(x): 1.2191, norm(y): 1.0053, norm:0.9015, tok/sec: 104167.37, flops:91.22, batch-reuse:1
@ 2304 train 5.9194 , allloss: 5.9346, dt: 1272.45ms, fracRes: 0.5892, norm(attn): 0.1006, norm(output): 0.3574, norm(x): 1.2125, norm(y): 1.0053, norm:1.0422, tok/sec: 103007.88, flops:90.20, batch-reuse:1
@ 2305 train 5.8595 , allloss: 5.8742, dt: 1262.61ms, fracRes: 0.5880, norm(attn): 0.1006, norm(output): 0.3652, norm(x): 1.2077, norm(y): 1.0054, norm:0.8169, tok/sec: 103810.33, flops:90.91, batch-reuse:1
@ 2306 train 5.9383 , allloss: 5.9537, dt: 1261.15ms, fracRes: 0.5927, norm(attn): 0.0972, norm(output): 0.3535, norm(x): 1.2100, norm(y): 1.0054, norm:0.8490, tok/sec: 103930.94, flops:91.01, batch-reuse:1
@ 2307 train 5.8903 , allloss: 5.9047, dt: 1318.59ms, fracRes: 0.5945, norm(attn): 0.0938, norm(output): 0.3516, norm(x): 1.2201, norm(y): 1.0054, norm:0.8650, tok/sec: 99403.21, flops:87.05, batch-reuse:1
@ 2308 train 5.9093 , allloss: 5.9236, dt: 1289.40ms, fracRes: 0.5961, norm(attn): 0.0923, norm(output): 0.3516, norm(x): 1.2273, norm(y): 1.0054, norm:0.8359, tok/sec: 101653.46, flops:89.02, batch-reuse:1
@ 2309 train 5.7535 , allloss: 5.7680, dt: 1293.98ms, fracRes: 0.5936, norm(attn): 0.0933, norm(output): 0.3477, norm(x): 1.2115, norm(y): 1.0053, norm:1.2029, tok/sec: 101293.58, flops:88.70, batch-reuse:1
@ 2310 train 5.9270 , allloss: 5.9414, dt: 1265.83ms, fracRes: 0.5923, norm(attn): 0.0947, norm(output): 0.3516, norm(x): 1.2075, norm(y): 1.0053, norm:1.2099, tok/sec: 103546.13, flops:90.67, batch-reuse:1
@ 2311 train 5.9058 , allloss: 5.9211, dt: 1273.28ms, fracRes: 0.5915, norm(attn): 0.0967, norm(output): 0.3496, norm(x): 1.2036, norm(y): 1.0054, norm:0.8100, tok/sec: 102940.44, flops:90.14, batch-reuse:1
@ 2312 train 5.9003 , allloss: 5.9147, dt: 1282.44ms, fracRes: 0.5931, norm(attn): 0.0957, norm(output): 0.3535, norm(x): 1.2100, norm(y): 1.0054, norm:0.9907, tok/sec: 102204.78, flops:89.50, batch-reuse:1
@ 2313 train 5.8916 , allloss: 5.9059, dt: 1258.14ms, fracRes: 0.5925, norm(attn): 0.0981, norm(output): 0.3535, norm(x): 1.2091, norm(y): 1.0054, norm:0.9627, tok/sec: 104179.53, flops:91.23, batch-reuse:1
@ 2314 train 5.8951 , allloss: 5.9097, dt: 1269.17ms, fracRes: 0.5927, norm(attn): 0.0977, norm(output): 0.3535, norm(x): 1.2109, norm(y): 1.0054, norm:0.9561, tok/sec: 103274.16, flops:90.44, batch-reuse:1
@ 2315 train 5.8292 , allloss: 5.8434, dt: 1289.40ms, fracRes: 0.5944, norm(attn): 0.0957, norm(output): 0.3535, norm(x): 1.2130, norm(y): 1.0055, norm:1.1736, tok/sec: 101653.79, flops:89.02, batch-reuse:1
@ 2316 train 5.8113 , allloss: 5.8244, dt: 1292.41ms, fracRes: 0.5957, norm(attn): 0.0923, norm(output): 0.3516, norm(x): 1.2217, norm(y): 1.0055, norm:1.5415, tok/sec: 101416.40, flops:88.81, batch-reuse:1
@ 2317 train 5.8494 , allloss: 5.8628, dt: 1300.93ms, fracRes: 0.5953, norm(attn): 0.0928, norm(output): 0.3496, norm(x): 1.2215, norm(y): 1.0055, norm:1.3837, tok/sec: 100752.70, flops:88.23, batch-reuse:1
@ 2318 train 5.8932 , allloss: 5.9078, dt: 1261.12ms, fracRes: 0.5947, norm(attn): 0.0942, norm(output): 0.3496, norm(x): 1.2150, norm(y): 1.0054, norm:1.1812, tok/sec: 103933.32, flops:91.01, batch-reuse:1
@ 2319 train 5.9144 , allloss: 5.9291, dt: 1256.57ms, fracRes: 0.5918, norm(attn): 0.0957, norm(output): 0.3516, norm(x): 1.2048, norm(y): 1.0054, norm:1.3562, tok/sec: 104309.46, flops:91.34, batch-reuse:1
@ 2320 train 5.8654 , allloss: 5.8796, dt: 1254.27ms, fracRes: 0.5913, norm(attn): 0.0962, norm(output): 0.3535, norm(x): 1.2024, norm(y): 1.0054, norm:1.1597, tok/sec: 104500.22, flops:91.51, batch-reuse:1
@ 2321 train 5.8578 , allloss: 5.8748, dt: 1266.30ms, fracRes: 0.5928, norm(attn): 0.0977, norm(output): 0.3516, norm(x): 1.1972, norm(y): 1.0054, norm:1.5001, tok/sec: 103507.45, flops:90.64, batch-reuse:1
@ 2322 train 5.8630 , allloss: 5.8778, dt: 1283.69ms, fracRes: 0.5957, norm(attn): 0.0947, norm(output): 0.3477, norm(x): 1.2128, norm(y): 1.0054, norm:1.1520, tok/sec: 102105.76, flops:89.41, batch-reuse:1
@ 2323 train 5.7913 , allloss: 5.8061, dt: 1278.44ms, fracRes: 0.5935, norm(attn): 0.0981, norm(output): 0.3496, norm(x): 1.2021, norm(y): 1.0055, norm:1.1506, tok/sec: 102524.63, flops:89.78, batch-reuse:1
@ 2324 train 5.8484 , allloss: 5.8626, dt: 1255.48ms, fracRes: 0.5919, norm(attn): 0.0957, norm(output): 0.3496, norm(x): 1.2022, norm(y): 1.0055, norm:1.0698, tok/sec: 104399.57, flops:91.42, batch-reuse:1
@ 2325 train 5.9150 , allloss: 5.9294, dt: 1276.32ms, fracRes: 0.5931, norm(attn): 0.0962, norm(output): 0.3496, norm(x): 1.2058, norm(y): 1.0055, norm:1.1261, tok/sec: 102695.15, flops:89.93, batch-reuse:1
@ 2326 train 5.8250 , allloss: 5.8402, dt: 1297.88ms, fracRes: 0.5929, norm(attn): 0.0986, norm(output): 0.3535, norm(x): 1.2141, norm(y): 1.0054, norm:0.9100, tok/sec: 100989.00, flops:88.43, batch-reuse:1
@ 2327 train 5.8085 , allloss: 5.8227, dt: 1300.36ms, fracRes: 0.5924, norm(attn): 0.0986, norm(output): 0.3535, norm(x): 1.2191, norm(y): 1.0055, norm:1.2093, tok/sec: 100796.85, flops:88.27, batch-reuse:1
@ 2328 train 5.7867 , allloss: 5.8013, dt: 1268.42ms, fracRes: 0.5926, norm(attn): 0.0977, norm(output): 0.3516, norm(x): 1.2100, norm(y): 1.0055, norm:1.0036, tok/sec: 103335.25, flops:90.49, batch-reuse:1
@ 2329 train 5.7659 , allloss: 5.8089, dt: 1265.60ms, fracRes: 0.5939, norm(attn): 0.1055, norm(output): 0.3535, norm(x): 1.1532, norm(y): 1.0051, norm:2.7676, tok/sec: 103565.48, flops:90.69, batch-reuse:1
@ 2330 train 5.9175 , allloss: 5.9358, dt: 1274.04ms, fracRes: 0.5948, norm(attn): 0.0947, norm(output): 0.3496, norm(x): 1.2046, norm(y): 1.0054, norm:1.7228, tok/sec: 102878.92, flops:90.09, batch-reuse:1
@ 2331 train 5.8310 , allloss: 5.8510, dt: 1295.60ms, fracRes: 0.5977, norm(attn): 0.0938, norm(output): 0.3457, norm(x): 1.2094, norm(y): 1.0055, norm:1.2877, tok/sec: 101167.09, flops:88.59, batch-reuse:1
@ 2332 train 5.8912 , allloss: 5.9061, dt: 1283.53ms, fracRes: 0.5980, norm(attn): 0.0918, norm(output): 0.3457, norm(x): 1.2170, norm(y): 1.0055, norm:1.3852, tok/sec: 102118.66, flops:89.42, batch-reuse:1
@ 2333 train 5.7702 , allloss: 5.7875, dt: 1307.71ms, fracRes: 0.5964, norm(attn): 0.0947, norm(output): 0.3477, norm(x): 1.2181, norm(y): 1.0055, norm:1.5277, tok/sec: 100230.20, flops:87.77, batch-reuse:1
@ 2334 train 5.7475 , allloss: 5.7620, dt: 1286.32ms, fracRes: 0.5924, norm(attn): 0.0967, norm(output): 0.3535, norm(x): 1.2138, norm(y): 1.0054, norm:1.1637, tok/sec: 101896.79, flops:89.23, batch-reuse:1
@ 2335 train 5.8536 , allloss: 5.8693, dt: 1286.52ms, fracRes: 0.5909, norm(attn): 0.1001, norm(output): 0.3574, norm(x): 1.2101, norm(y): 1.0054, norm:1.1179, tok/sec: 101881.23, flops:89.22, batch-reuse:1
@ 2336 train 5.9130 , allloss: 5.9276, dt: 1297.08ms, fracRes: 0.5910, norm(attn): 0.1001, norm(output): 0.3555, norm(x): 1.2120, norm(y): 1.0054, norm:1.0976, tok/sec: 101051.66, flops:88.49, batch-reuse:1
@ 2337 train 5.7833 , allloss: 5.7972, dt: 1304.84ms, fracRes: 0.5912, norm(attn): 0.1006, norm(output): 0.3594, norm(x): 1.2154, norm(y): 1.0055, norm:0.9808, tok/sec: 100450.66, flops:87.96, batch-reuse:1
@ 2338 train 5.8404 , allloss: 5.8559, dt: 1258.66ms, fracRes: 0.5941, norm(attn): 0.0967, norm(output): 0.3535, norm(x): 1.2211, norm(y): 1.0055, norm:0.9873, tok/sec: 104136.12, flops:91.19, batch-reuse:1
@ 2339 train 5.8179 , allloss: 5.8331, dt: 1263.15ms, fracRes: 0.5952, norm(attn): 0.0942, norm(output): 0.3496, norm(x): 1.2173, norm(y): 1.0055, norm:1.1600, tok/sec: 103766.38, flops:90.87, batch-reuse:1
@ 2340 train 5.7988 , allloss: 5.8135, dt: 1289.17ms, fracRes: 0.5956, norm(attn): 0.0928, norm(output): 0.3457, norm(x): 1.2198, norm(y): 1.0055, norm:0.8551, tok/sec: 101671.80, flops:89.03, batch-reuse:1
@ 2341 train 5.8281 , allloss: 5.8427, dt: 1276.31ms, fracRes: 0.5964, norm(attn): 0.0928, norm(output): 0.3457, norm(x): 1.2198, norm(y): 1.0055, norm:0.9993, tok/sec: 102695.83, flops:89.93, batch-reuse:1
@ 2342 train 5.7762 , allloss: 5.7912, dt: 1285.67ms, fracRes: 0.5971, norm(attn): 0.0928, norm(output): 0.3457, norm(x): 1.2192, norm(y): 1.0055, norm:1.3122, tok/sec: 101948.78, flops:89.28, batch-reuse:1
@ 2343 train 5.8206 , allloss: 5.8347, dt: 1266.61ms, fracRes: 0.5961, norm(attn): 0.0947, norm(output): 0.3496, norm(x): 1.2246, norm(y): 1.0055, norm:0.9722, tok/sec: 103482.82, flops:90.62, batch-reuse:1
@ 2344 train 5.9230 , allloss: 5.9386, dt: 1269.89ms, fracRes: 0.5942, norm(attn): 0.0996, norm(output): 0.3535, norm(x): 1.2179, norm(y): 1.0054, norm:0.9393, tok/sec: 103214.88, flops:90.38, batch-reuse:1
@ 2345 train 5.7471 , allloss: 5.7617, dt: 1289.83ms, fracRes: 0.5916, norm(attn): 0.1016, norm(output): 0.3613, norm(x): 1.2178, norm(y): 1.0054, norm:1.0684, tok/sec: 101619.61, flops:88.99, batch-reuse:1
@ 2346 train 5.8767 , allloss: 5.8923, dt: 1277.92ms, fracRes: 0.5921, norm(attn): 0.1021, norm(output): 0.3594, norm(x): 1.2148, norm(y): 1.0054, norm:1.7344, tok/sec: 102566.29, flops:89.82, batch-reuse:1
@ 2347 train 5.7547 , allloss: 5.7692, dt: 1265.03ms, fracRes: 0.5928, norm(attn): 0.1001, norm(output): 0.3535, norm(x): 1.2169, norm(y): 1.0055, norm:0.9624, tok/sec: 103611.72, flops:90.73, batch-reuse:1
@ 2348 train 5.8711 , allloss: 5.8861, dt: 1264.43ms, fracRes: 0.5960, norm(attn): 0.0947, norm(output): 0.3477, norm(x): 1.2203, norm(y): 1.0055, norm:1.4347, tok/sec: 103660.76, flops:90.77, batch-reuse:1
@ 2349 train 5.8602 , allloss: 5.8743, dt: 1264.70ms, fracRes: 0.5968, norm(attn): 0.0938, norm(output): 0.3496, norm(x): 1.2268, norm(y): 1.0055, norm:1.4286, tok/sec: 103638.93, flops:90.76, batch-reuse:1
@ 2350 train 5.7593 , allloss: 5.7746, dt: 1279.12ms, fracRes: 0.5968, norm(attn): 0.0933, norm(output): 0.3457, norm(x): 1.2229, norm(y): 1.0055, norm:1.0966, tok/sec: 102470.32, flops:89.73, batch-reuse:1
@ 2351 train 5.9023 , allloss: 5.9186, dt: 1279.49ms, fracRes: 0.5966, norm(attn): 0.0942, norm(output): 0.3457, norm(x): 1.2163, norm(y): 1.0055, norm:1.4089, tok/sec: 102441.03, flops:89.71, batch-reuse:1
@ 2352 train 5.8620 , allloss: 5.8768, dt: 1253.17ms, fracRes: 0.5933, norm(attn): 0.0977, norm(output): 0.3496, norm(x): 1.2135, norm(y): 1.0055, norm:1.1258, tok/sec: 104592.39, flops:91.59, batch-reuse:1
@ 2353 train 5.8675 , allloss: 5.8830, dt: 1267.07ms, fracRes: 0.5922, norm(attn): 0.1006, norm(output): 0.3516, norm(x): 1.2086, norm(y): 1.0054, norm:1.0624, tok/sec: 103445.24, flops:90.59, batch-reuse:1
@ 2354 train 5.8625 , allloss: 5.8784, dt: 1268.08ms, fracRes: 0.5949, norm(attn): 0.0967, norm(output): 0.3496, norm(x): 1.2232, norm(y): 1.0055, norm:1.0532, tok/sec: 103362.39, flops:90.51, batch-reuse:1
@ 2355 train 5.8228 , allloss: 5.8369, dt: 1302.21ms, fracRes: 0.5956, norm(attn): 0.0967, norm(output): 0.3535, norm(x): 1.2332, norm(y): 1.0055, norm:0.8151, tok/sec: 100653.61, flops:88.14, batch-reuse:1
@ 2356 train 5.8485 , allloss: 5.8626, dt: 1284.44ms, fracRes: 0.5945, norm(attn): 0.0972, norm(output): 0.3555, norm(x): 1.2291, norm(y): 1.0055, norm:0.8785, tok/sec: 102045.70, flops:89.36, batch-reuse:1
@ 2357 train 5.8660 , allloss: 5.8801, dt: 1264.50ms, fracRes: 0.5934, norm(attn): 0.0996, norm(output): 0.3555, norm(x): 1.2312, norm(y): 1.0055, norm:1.0028, tok/sec: 103655.13, flops:90.77, batch-reuse:1
@ 2358 train 5.8670 , allloss: 5.8816, dt: 1298.33ms, fracRes: 0.5931, norm(attn): 0.0996, norm(output): 0.3535, norm(x): 1.2200, norm(y): 1.0054, norm:1.0262, tok/sec: 100954.65, flops:88.40, batch-reuse:1
@ 2359 train 5.8548 , allloss: 5.8694, dt: 1266.87ms, fracRes: 0.5939, norm(attn): 0.0967, norm(output): 0.3496, norm(x): 1.2159, norm(y): 1.0055, norm:1.1514, tok/sec: 103461.09, flops:90.60, batch-reuse:1
@ 2360 train 5.7758 , allloss: 5.7908, dt: 1262.03ms, fracRes: 0.5935, norm(attn): 0.0947, norm(output): 0.3496, norm(x): 1.2162, norm(y): 1.0055, norm:1.0910, tok/sec: 103857.92, flops:90.95, batch-reuse:1
@ 2361 train 5.8105 , allloss: 5.8247, dt: 1269.82ms, fracRes: 0.5947, norm(attn): 0.0942, norm(output): 0.3496, norm(x): 1.2216, norm(y): 1.0055, norm:0.8643, tok/sec: 103221.24, flops:90.39, batch-reuse:1
@ 2362 train 5.8342 , allloss: 5.8482, dt: 1263.15ms, fracRes: 0.5971, norm(attn): 0.0928, norm(output): 0.3457, norm(x): 1.2279, norm(y): 1.0055, norm:1.0798, tok/sec: 103766.34, flops:90.87, batch-reuse:1
@ 2363 train 5.8418 , allloss: 5.8561, dt: 1280.26ms, fracRes: 0.5966, norm(attn): 0.0947, norm(output): 0.3477, norm(x): 1.2243, norm(y): 1.0055, norm:1.0847, tok/sec: 102379.52, flops:89.65, batch-reuse:1
@ 2364 train 5.9225 , allloss: 5.9386, dt: 1291.57ms, fracRes: 0.5938, norm(attn): 0.0996, norm(output): 0.3516, norm(x): 1.2113, norm(y): 1.0054, norm:1.0223, tok/sec: 101482.96, flops:88.87, batch-reuse:1
@ 2365 train 5.8578 , allloss: 5.8738, dt: 1278.89ms, fracRes: 0.5926, norm(attn): 0.1025, norm(output): 0.3535, norm(x): 1.2112, norm(y): 1.0055, norm:1.1091, tok/sec: 102488.66, flops:89.75, batch-reuse:1
@ 2366 train 5.8535 , allloss: 5.8689, dt: 1289.26ms, fracRes: 0.5940, norm(attn): 0.1001, norm(output): 0.3516, norm(x): 1.2163, norm(y): 1.0055, norm:0.9696, tok/sec: 101664.40, flops:89.03, batch-reuse:1
@ 2367 train 5.7227 , allloss: 5.7369, dt: 1293.49ms, fracRes: 0.5967, norm(attn): 0.0952, norm(output): 0.3496, norm(x): 1.2242, norm(y): 1.0055, norm:0.8822, tok/sec: 101331.71, flops:88.73, batch-reuse:1
@ 2368 train 5.7492 , allloss: 5.7632, dt: 1307.50ms, fracRes: 0.5976, norm(attn): 0.0942, norm(output): 0.3457, norm(x): 1.2270, norm(y): 1.0056, norm:1.0638, tok/sec: 100246.12, flops:87.78, batch-reuse:1
@ 2369 train 5.7544 , allloss: 5.7685, dt: 1291.35ms, fracRes: 0.5957, norm(attn): 0.0952, norm(output): 0.3477, norm(x): 1.2240, norm(y): 1.0056, norm:1.3116, tok/sec: 101499.90, flops:88.88, batch-reuse:1
@ 2370 train 5.8442 , allloss: 5.8595, dt: 1316.13ms, fracRes: 0.5949, norm(attn): 0.0967, norm(output): 0.3477, norm(x): 1.2153, norm(y): 1.0055, norm:0.9034, tok/sec: 99588.88, flops:87.21, batch-reuse:1
@ 2371 train 5.6447 , allloss: 5.6596, dt: 1307.39ms, fracRes: 0.5917, norm(attn): 0.1006, norm(output): 0.3496, norm(x): 1.2128, norm(y): 1.0055, norm:1.2032, tok/sec: 100254.76, flops:87.79, batch-reuse:1
@ 2372 train 5.6686 , allloss: 5.6831, dt: 1263.89ms, fracRes: 0.5917, norm(attn): 0.1001, norm(output): 0.3516, norm(x): 1.2117, norm(y): 1.0055, norm:1.1969, tok/sec: 103705.21, flops:90.81, batch-reuse:1
@ 2373 train 5.7282 , allloss: 5.7431, dt: 1270.67ms, fracRes: 0.5943, norm(attn): 0.0967, norm(output): 0.3457, norm(x): 1.2171, norm(y): 1.0056, norm:1.0933, tok/sec: 103152.23, flops:90.33, batch-reuse:1
@ 2374 train 5.7071 , allloss: 5.7227, dt: 1290.06ms, fracRes: 0.5939, norm(attn): 0.0962, norm(output): 0.3457, norm(x): 1.2148, norm(y): 1.0056, norm:1.4130, tok/sec: 101601.27, flops:88.97, batch-reuse:1
@ 2375 train 5.7191 , allloss: 5.7328, dt: 1271.50ms, fracRes: 0.5951, norm(attn): 0.0942, norm(output): 0.3457, norm(x): 1.2202, norm(y): 1.0056, norm:0.9611, tok/sec: 103084.48, flops:90.27, batch-reuse:1
@ 2376 train 5.7519 , allloss: 5.7660, dt: 1267.08ms, fracRes: 0.5963, norm(attn): 0.0938, norm(output): 0.3457, norm(x): 1.2203, norm(y): 1.0056, norm:1.4227, tok/sec: 103444.46, flops:90.58, batch-reuse:1
@ 2377 train 5.8027 , allloss: 5.8171, dt: 1277.56ms, fracRes: 0.5971, norm(attn): 0.0938, norm(output): 0.3457, norm(x): 1.2236, norm(y): 1.0056, norm:1.1258, tok/sec: 102595.21, flops:89.84, batch-reuse:1
@ 2378 train 5.7446 , allloss: 5.7588, dt: 1276.45ms, fracRes: 0.5949, norm(attn): 0.0957, norm(output): 0.3457, norm(x): 1.2200, norm(y): 1.0055, norm:1.1276, tok/sec: 102684.43, flops:89.92, batch-reuse:1
@ 2379 train 5.7018 , allloss: 5.7165, dt: 1266.01ms, fracRes: 0.5928, norm(attn): 0.0996, norm(output): 0.3496, norm(x): 1.2139, norm(y): 1.0056, norm:0.9846, tok/sec: 103531.37, flops:90.66, batch-reuse:1
@ 2380 train 5.9713 , allloss: 5.9877, dt: 1301.28ms, fracRes: 0.5946, norm(attn): 0.1006, norm(output): 0.3496, norm(x): 1.2046, norm(y): 1.0054, norm:1.3374, tok/sec: 100725.57, flops:88.20, batch-reuse:1
@ 2381 train 5.7760 , allloss: 5.7913, dt: 1323.46ms, fracRes: 0.5942, norm(attn): 0.0967, norm(output): 0.3457, norm(x): 1.2098, norm(y): 1.0055, norm:1.2416, tok/sec: 99037.10, flops:86.73, batch-reuse:1
@ 2382 train 5.7311 , allloss: 5.7464, dt: 1286.92ms, fracRes: 0.5958, norm(attn): 0.0957, norm(output): 0.3457, norm(x): 1.2156, norm(y): 1.0056, norm:1.1543, tok/sec: 101849.20, flops:89.19, batch-reuse:1
@ 2383 train 5.7249 , allloss: 5.7392, dt: 1292.67ms, fracRes: 0.5975, norm(attn): 0.0942, norm(output): 0.3457, norm(x): 1.2206, norm(y): 1.0057, norm:1.0839, tok/sec: 101395.96, flops:88.79, batch-reuse:1
@ 2384 train 5.7750 , allloss: 5.7887, dt: 1299.58ms, fracRes: 0.5976, norm(attn): 0.0942, norm(output): 0.3457, norm(x): 1.2230, norm(y): 1.0057, norm:1.1122, tok/sec: 100857.10, flops:88.32, batch-reuse:1
@ 2385 train 5.7381 , allloss: 5.7524, dt: 1280.86ms, fracRes: 0.5960, norm(attn): 0.0952, norm(output): 0.3457, norm(x): 1.2216, norm(y): 1.0057, norm:1.1701, tok/sec: 102331.36, flops:89.61, batch-reuse:1
@ 2386 train 5.7035 , allloss: 5.7183, dt: 1257.26ms, fracRes: 0.5958, norm(attn): 0.0967, norm(output): 0.3457, norm(x): 1.2127, norm(y): 1.0056, norm:1.0641, tok/sec: 104251.86, flops:91.29, batch-reuse:1
@ 2387 train 5.7313 , allloss: 5.7460, dt: 1283.32ms, fracRes: 0.5937, norm(attn): 0.0996, norm(output): 0.3457, norm(x): 1.2070, norm(y): 1.0056, norm:1.0711, tok/sec: 102135.43, flops:89.44, batch-reuse:1
@ 2388 train 5.7557 , allloss: 5.7715, dt: 1274.08ms, fracRes: 0.5945, norm(attn): 0.0996, norm(output): 0.3457, norm(x): 1.2134, norm(y): 1.0056, norm:0.9387, tok/sec: 102875.74, flops:90.09, batch-reuse:1
@ 2389 train 5.6915 , allloss: 5.7056, dt: 1290.05ms, fracRes: 0.5940, norm(attn): 0.1001, norm(output): 0.3477, norm(x): 1.2175, norm(y): 1.0056, norm:1.3976, tok/sec: 101602.66, flops:88.97, batch-reuse:1
@ 2390 train 5.8130 , allloss: 5.8285, dt: 1282.46ms, fracRes: 0.5958, norm(attn): 0.0981, norm(output): 0.3457, norm(x): 1.2154, norm(y): 1.0055, norm:1.0956, tok/sec: 102203.62, flops:89.50, batch-reuse:1
@ 2391 train 5.8499 , allloss: 5.8651, dt: 1277.20ms, fracRes: 0.5957, norm(attn): 0.0981, norm(output): 0.3457, norm(x): 1.2147, norm(y): 1.0056, norm:1.4580, tok/sec: 102624.13, flops:89.87, batch-reuse:1
@ 2392 train 5.7555 , allloss: 5.7702, dt: 1298.00ms, fracRes: 0.5931, norm(attn): 0.0996, norm(output): 0.3477, norm(x): 1.2123, norm(y): 1.0056, norm:1.3584, tok/sec: 100980.04, flops:88.43, batch-reuse:1
@ 2393 train 5.9081 , allloss: 5.9232, dt: 1266.55ms, fracRes: 0.5961, norm(attn): 0.0967, norm(output): 0.3457, norm(x): 1.2140, norm(y): 1.0055, norm:1.3838, tok/sec: 103487.15, flops:90.62, batch-reuse:1
@ 2394 train 5.7805 , allloss: 5.7956, dt: 1295.84ms, fracRes: 0.5930, norm(attn): 0.0981, norm(output): 0.3496, norm(x): 1.2147, norm(y): 1.0055, norm:1.4143, tok/sec: 101148.18, flops:88.57, batch-reuse:1
@ 2395 train 5.7969 , allloss: 5.8121, dt: 1280.18ms, fracRes: 0.5953, norm(attn): 0.0967, norm(output): 0.3457, norm(x): 1.2193, norm(y): 1.0056, norm:1.4437, tok/sec: 102385.58, flops:89.66, batch-reuse:1
@ 2396 train 5.7341 , allloss: 5.7482, dt: 1283.06ms, fracRes: 0.5948, norm(attn): 0.0947, norm(output): 0.3457, norm(x): 1.2207, norm(y): 1.0056, norm:1.0452, tok/sec: 102155.70, flops:89.46, batch-reuse:1
@ 2397 train 5.6947 , allloss: 5.7087, dt: 1283.88ms, fracRes: 0.5957, norm(attn): 0.0957, norm(output): 0.3457, norm(x): 1.2192, norm(y): 1.0056, norm:1.2634, tok/sec: 102090.41, flops:89.40, batch-reuse:1
@ 2398 train 5.8116 , allloss: 5.8263, dt: 1262.64ms, fracRes: 0.5962, norm(attn): 0.0967, norm(output): 0.3457, norm(x): 1.2131, norm(y): 1.0056, norm:1.0952, tok/sec: 103807.64, flops:90.90, batch-reuse:1
@ 2399 train 5.6830 , allloss: 5.6979, dt: 1280.57ms, fracRes: 0.5937, norm(attn): 0.0996, norm(output): 0.3457, norm(x): 1.2135, norm(y): 1.0056, norm:0.9918, tok/sec: 102354.48, flops:89.63, batch-reuse:1
@ 2400 train 5.7044 , allloss: 5.7195, dt: 1265.29ms, fracRes: 0.5939, norm(attn): 0.0991, norm(output): 0.3457, norm(x): 1.2108, norm(y): 1.0057, norm:1.1038, tok/sec: 103590.71, flops:90.71, batch-reuse:1
@ 2401 train 5.7733 , allloss: 5.7882, dt: 1289.73ms, fracRes: 0.5956, norm(attn): 0.0977, norm(output): 0.3457, norm(x): 1.2194, norm(y): 1.0057, norm:1.4029, tok/sec: 101627.50, flops:88.99, batch-reuse:1
@ 2402 train 5.8141 , allloss: 5.8295, dt: 1267.30ms, fracRes: 0.5968, norm(attn): 0.0991, norm(output): 0.3457, norm(x): 1.2172, norm(y): 1.0056, norm:1.1722, tok/sec: 103426.15, flops:90.57, batch-reuse:1
@ 2403 train 5.6849 , allloss: 5.7011, dt: 1289.46ms, fracRes: 0.5968, norm(attn): 0.1001, norm(output): 0.3477, norm(x): 1.2195, norm(y): 1.0056, norm:1.0081, tok/sec: 101648.36, flops:89.01, batch-reuse:1
@ 2404 train 5.6653 , allloss: 5.6805, dt: 1267.09ms, fracRes: 0.5949, norm(attn): 0.0996, norm(output): 0.3457, norm(x): 1.2246, norm(y): 1.0057, norm:1.1441, tok/sec: 103443.41, flops:90.58, batch-reuse:1
@ 2405 train 5.7579 , allloss: 5.7728, dt: 1261.59ms, fracRes: 0.5957, norm(attn): 0.0967, norm(output): 0.3457, norm(x): 1.2224, norm(y): 1.0056, norm:1.0960, tok/sec: 103894.17, flops:90.98, batch-reuse:1
@ 2406 train 5.6865 , allloss: 5.7006, dt: 1273.86ms, fracRes: 0.5960, norm(attn): 0.0967, norm(output): 0.3457, norm(x): 1.2211, norm(y): 1.0057, norm:1.1324, tok/sec: 102893.86, flops:90.10, batch-reuse:1
@ 2407 train 5.6827 , allloss: 5.6971, dt: 1273.68ms, fracRes: 0.5967, norm(attn): 0.0967, norm(output): 0.3438, norm(x): 1.2204, norm(y): 1.0057, norm:0.7865, tok/sec: 102908.50, flops:90.12, batch-reuse:1
@ 2408 train 5.7062 , allloss: 5.7208, dt: 1289.63ms, fracRes: 0.5942, norm(attn): 0.0996, norm(output): 0.3457, norm(x): 1.2140, norm(y): 1.0056, norm:0.8533, tok/sec: 101635.02, flops:89.00, batch-reuse:1
@ 2409 train 5.7028 , allloss: 5.7170, dt: 1258.90ms, fracRes: 0.5931, norm(attn): 0.0996, norm(output): 0.3457, norm(x): 1.2140, norm(y): 1.0056, norm:0.9459, tok/sec: 104116.57, flops:91.17, batch-reuse:1
@ 2410 train 5.7084 , allloss: 5.7226, dt: 1274.80ms, fracRes: 0.5943, norm(attn): 0.0996, norm(output): 0.3457, norm(x): 1.2153, norm(y): 1.0056, norm:0.9739, tok/sec: 102817.63, flops:90.04, batch-reuse:1
@ 2411 train 5.6465 , allloss: 5.6611, dt: 1279.47ms, fracRes: 0.5938, norm(attn): 0.0996, norm(output): 0.3457, norm(x): 1.2154, norm(y): 1.0056, norm:1.2359, tok/sec: 102442.08, flops:89.71, batch-reuse:1
@ 2412 train 5.7580 , allloss: 5.7731, dt: 1274.76ms, fracRes: 0.5967, norm(attn): 0.0962, norm(output): 0.3457, norm(x): 1.2158, norm(y): 1.0056, norm:1.0195, tok/sec: 102820.86, flops:90.04, batch-reuse:1
@ 2413 train 5.7751 , allloss: 5.7901, dt: 1291.74ms, fracRes: 0.5980, norm(attn): 0.0952, norm(output): 0.3438, norm(x): 1.2210, norm(y): 1.0057, norm:0.8828, tok/sec: 101468.98, flops:88.85, batch-reuse:1
@ 2414 train 5.8174 , allloss: 5.8321, dt: 1276.36ms, fracRes: 0.5977, norm(attn): 0.0947, norm(output): 0.3438, norm(x): 1.2216, norm(y): 1.0057, norm:0.9129, tok/sec: 102691.87, flops:89.93, batch-reuse:1
@ 2415 train 5.8519 , allloss: 5.8666, dt: 1252.08ms, fracRes: 0.5958, norm(attn): 0.0967, norm(output): 0.3457, norm(x): 1.2179, norm(y): 1.0056, norm:1.1342, tok/sec: 104683.79, flops:91.67, batch-reuse:1
@ 2416 train 5.8174 , allloss: 5.8324, dt: 1268.71ms, fracRes: 0.5944, norm(attn): 0.1006, norm(output): 0.3457, norm(x): 1.2127, norm(y): 1.0057, norm:0.9362, tok/sec: 103311.27, flops:90.47, batch-reuse:1
@ 2417 train 5.8306 , allloss: 5.8460, dt: 1290.50ms, fracRes: 0.5953, norm(attn): 0.1001, norm(output): 0.3457, norm(x): 1.2161, norm(y): 1.0056, norm:1.2471, tok/sec: 101566.65, flops:88.94, batch-reuse:1
@ 2418 train 5.9143 , allloss: 5.9300, dt: 1283.76ms, fracRes: 0.5957, norm(attn): 0.1001, norm(output): 0.3438, norm(x): 1.2067, norm(y): 1.0056, norm:1.2255, tok/sec: 102100.02, flops:89.41, batch-reuse:1
@ 2419 train 5.9258 , allloss: 5.9410, dt: 1282.02ms, fracRes: 0.5966, norm(attn): 0.0986, norm(output): 0.3438, norm(x): 1.2076, norm(y): 1.0056, norm:1.0551, tok/sec: 102239.01, flops:89.53, batch-reuse:1
@ 2420 train 5.8744 , allloss: 5.8891, dt: 1274.83ms, fracRes: 0.5974, norm(attn): 0.0952, norm(output): 0.3438, norm(x): 1.2155, norm(y): 1.0056, norm:1.4100, tok/sec: 102815.27, flops:90.03, batch-reuse:1
@ 2421 train 5.9056 , allloss: 5.9208, dt: 1273.95ms, fracRes: 0.5987, norm(attn): 0.0942, norm(output): 0.3418, norm(x): 1.2170, norm(y): 1.0057, norm:1.2394, tok/sec: 102886.44, flops:90.10, batch-reuse:1
@ 2422 train 5.9158 , allloss: 5.9307, dt: 1267.86ms, fracRes: 0.5979, norm(attn): 0.0972, norm(output): 0.3438, norm(x): 1.2097, norm(y): 1.0056, norm:0.8738, tok/sec: 103380.15, flops:90.53, batch-reuse:1
@ 2423 train 5.8712 , allloss: 5.8859, dt: 1281.07ms, fracRes: 0.5963, norm(attn): 0.0967, norm(output): 0.3438, norm(x): 1.2095, norm(y): 1.0056, norm:1.0193, tok/sec: 102314.85, flops:89.60, batch-reuse:1
@ 2424 train 5.8299 , allloss: 5.8456, dt: 1262.05ms, fracRes: 0.5944, norm(attn): 0.1006, norm(output): 0.3438, norm(x): 1.2070, norm(y): 1.0056, norm:1.1533, tok/sec: 103856.63, flops:90.95, batch-reuse:1
@ 2425 train 5.8338 , allloss: 5.8501, dt: 1299.43ms, fracRes: 0.5937, norm(attn): 0.1021, norm(output): 0.3438, norm(x): 1.1959, norm(y): 1.0056, norm:1.1808, tok/sec: 100869.05, flops:88.33, batch-reuse:1
@ 2426 train 5.8659 , allloss: 5.8823, dt: 1265.34ms, fracRes: 0.5931, norm(attn): 0.1016, norm(output): 0.3457, norm(x): 1.1990, norm(y): 1.0056, norm:1.0883, tok/sec: 103586.48, flops:90.71, batch-reuse:1
@ 2427 train 5.9020 , allloss: 5.9168, dt: 1275.64ms, fracRes: 0.5952, norm(attn): 0.0977, norm(output): 0.3438, norm(x): 1.2059, norm(y): 1.0056, norm:1.1238, tok/sec: 102749.95, flops:89.98, batch-reuse:1
@ 2428 train 5.8667 , allloss: 5.8812, dt: 1300.02ms, fracRes: 0.5973, norm(attn): 0.0957, norm(output): 0.3418, norm(x): 1.2099, norm(y): 1.0057, norm:0.7885, tok/sec: 100822.84, flops:88.29, batch-reuse:1
@ 2429 train 5.8386 , allloss: 5.8529, dt: 1259.63ms, fracRes: 0.5975, norm(attn): 0.0942, norm(output): 0.3418, norm(x): 1.2078, norm(y): 1.0057, norm:0.9679, tok/sec: 104055.82, flops:91.12, batch-reuse:1
@ 2430 train 5.8215 , allloss: 5.8360, dt: 1264.98ms, fracRes: 0.5969, norm(attn): 0.0947, norm(output): 0.3418, norm(x): 1.2053, norm(y): 1.0056, norm:0.9111, tok/sec: 103615.47, flops:90.73, batch-reuse:1
@ 2431 train 5.8455 , allloss: 5.8607, dt: 1288.23ms, fracRes: 0.5952, norm(attn): 0.0977, norm(output): 0.3418, norm(x): 1.1987, norm(y): 1.0056, norm:0.9317, tok/sec: 101745.58, flops:89.10, batch-reuse:1
@ 2432 train 5.7941 , allloss: 5.8100, dt: 1292.57ms, fracRes: 0.5948, norm(attn): 0.0996, norm(output): 0.3438, norm(x): 1.2026, norm(y): 1.0057, norm:1.1536, tok/sec: 101404.56, flops:88.80, batch-reuse:1
@ 2433 train 5.8188 , allloss: 5.8344, dt: 1286.13ms, fracRes: 0.5931, norm(attn): 0.1021, norm(output): 0.3457, norm(x): 1.2023, norm(y): 1.0056, norm:1.2285, tok/sec: 101912.11, flops:89.24, batch-reuse:1
@ 2434 train 5.9183 , allloss: 5.9340, dt: 1280.04ms, fracRes: 0.5965, norm(attn): 0.1006, norm(output): 0.3438, norm(x): 1.2069, norm(y): 1.0057, norm:0.9242, tok/sec: 102396.65, flops:89.67, batch-reuse:1
@ 2435 train 5.8570 , allloss: 5.8734, dt: 1283.12ms, fracRes: 0.5984, norm(attn): 0.0952, norm(output): 0.3438, norm(x): 1.2135, norm(y): 1.0056, norm:1.2304, tok/sec: 102151.18, flops:89.45, batch-reuse:1
@ 2436 train 5.9234 , allloss: 5.9393, dt: 1308.35ms, fracRes: 0.5999, norm(attn): 0.0938, norm(output): 0.3418, norm(x): 1.2142, norm(y): 1.0057, norm:1.2188, tok/sec: 100180.92, flops:87.73, batch-reuse:1
@ 2437 train 5.8544 , allloss: 5.8705, dt: 1290.18ms, fracRes: 0.5982, norm(attn): 0.0942, norm(output): 0.3418, norm(x): 1.2072, norm(y): 1.0057, norm:1.1912, tok/sec: 101592.16, flops:88.96, batch-reuse:1
@ 2438 train 5.8209 , allloss: 5.8365, dt: 1261.03ms, fracRes: 0.5969, norm(attn): 0.0942, norm(output): 0.3418, norm(x): 1.2047, norm(y): 1.0056, norm:0.9834, tok/sec: 103940.26, flops:91.02, batch-reuse:1
@ 2439 train 5.8549 , allloss: 5.8708, dt: 1262.38ms, fracRes: 0.5972, norm(attn): 0.0957, norm(output): 0.3438, norm(x): 1.2120, norm(y): 1.0057, norm:0.9269, tok/sec: 103829.13, flops:90.92, batch-reuse:1
@ 2440 train 5.9201 , allloss: 5.9372, dt: 1279.30ms, fracRes: 0.5958, norm(attn): 0.1006, norm(output): 0.3438, norm(x): 1.2082, norm(y): 1.0057, norm:1.5324, tok/sec: 102456.07, flops:89.72, batch-reuse:1
@ 2441 train 5.7801 , allloss: 5.7973, dt: 1269.00ms, fracRes: 0.5925, norm(attn): 0.1045, norm(output): 0.3457, norm(x): 1.2011, norm(y): 1.0056, norm:1.4130, tok/sec: 103287.60, flops:90.45, batch-reuse:1
@ 2442 train 5.8372 , allloss: 5.8539, dt: 1259.08ms, fracRes: 0.5924, norm(attn): 0.1025, norm(output): 0.3438, norm(x): 1.2004, norm(y): 1.0056, norm:1.2866, tok/sec: 104101.53, flops:91.16, batch-reuse:1
@ 2443 train 5.9401 , allloss: 5.9567, dt: 1295.08ms, fracRes: 0.5955, norm(attn): 0.0991, norm(output): 0.3438, norm(x): 1.2036, norm(y): 1.0056, norm:1.2585, tok/sec: 101207.78, flops:88.63, batch-reuse:1
@ 2444 train 5.7864 , allloss: 5.8008, dt: 1261.07ms, fracRes: 0.5981, norm(attn): 0.0947, norm(output): 0.3418, norm(x): 1.2140, norm(y): 1.0057, norm:1.1823, tok/sec: 103937.31, flops:91.02, batch-reuse:1
@ 2445 train 5.7723 , allloss: 5.7870, dt: 1266.79ms, fracRes: 0.5991, norm(attn): 0.0933, norm(output): 0.3418, norm(x): 1.2125, norm(y): 1.0057, norm:0.9424, tok/sec: 103467.77, flops:90.61, batch-reuse:1
@ 2446 train 5.9169 , allloss: 5.9322, dt: 1256.30ms, fracRes: 0.5979, norm(attn): 0.0938, norm(output): 0.3418, norm(x): 1.2178, norm(y): 1.0057, norm:1.5353, tok/sec: 104332.05, flops:91.36, batch-reuse:1
@ 2447 train 5.8643 , allloss: 5.8793, dt: 1271.06ms, fracRes: 0.5980, norm(attn): 0.0933, norm(output): 0.3418, norm(x): 1.2157, norm(y): 1.0057, norm:1.4176, tok/sec: 103120.21, flops:90.30, batch-reuse:1
@ 2448 train 5.8264 , allloss: 5.8410, dt: 1264.58ms, fracRes: 0.5974, norm(attn): 0.0952, norm(output): 0.3418, norm(x): 1.2125, norm(y): 1.0057, norm:1.1934, tok/sec: 103648.91, flops:90.76, batch-reuse:1
@ 2449 train 5.8533 , allloss: 5.8685, dt: 1271.82ms, fracRes: 0.5959, norm(attn): 0.0991, norm(output): 0.3418, norm(x): 1.2056, norm(y): 1.0057, norm:1.1085, tok/sec: 103058.35, flops:90.25, batch-reuse:1
@ 2450 train 5.8340 , allloss: 5.8489, dt: 1285.99ms, fracRes: 0.5938, norm(attn): 0.1025, norm(output): 0.3438, norm(x): 1.2021, norm(y): 1.0057, norm:1.1860, tok/sec: 101923.35, flops:89.25, batch-reuse:1
@ 2451 train 5.9220 , allloss: 5.9378, dt: 1251.87ms, fracRes: 0.5956, norm(attn): 0.1025, norm(output): 0.3438, norm(x): 1.2065, norm(y): 1.0057, norm:1.3488, tok/sec: 104700.97, flops:91.69, batch-reuse:1
@ 2452 train 5.8843 , allloss: 5.9001, dt: 1273.98ms, fracRes: 0.5970, norm(attn): 0.1030, norm(output): 0.3438, norm(x): 1.2043, norm(y): 1.0057, norm:1.1800, tok/sec: 102883.77, flops:90.09, batch-reuse:1
@ 2453 train 5.7726 , allloss: 5.7872, dt: 1278.70ms, fracRes: 0.5955, norm(attn): 0.1011, norm(output): 0.3438, norm(x): 1.2073, norm(y): 1.0057, norm:1.1064, tok/sec: 102503.94, flops:89.76, batch-reuse:1
@ 2454 train 5.7952 , allloss: 5.8106, dt: 1271.75ms, fracRes: 0.5970, norm(attn): 0.0977, norm(output): 0.3418, norm(x): 1.2039, norm(y): 1.0057, norm:1.0493, tok/sec: 103064.59, flops:90.25, batch-reuse:1
@ 2455 train 5.8567 , allloss: 5.8720, dt: 1263.00ms, fracRes: 0.5962, norm(attn): 0.0952, norm(output): 0.3418, norm(x): 1.1996, norm(y): 1.0057, norm:1.1257, tok/sec: 103777.93, flops:90.88, batch-reuse:1
@ 2456 train 5.8004 , allloss: 5.8150, dt: 1284.93ms, fracRes: 0.5962, norm(attn): 0.0947, norm(output): 0.3418, norm(x): 1.2006, norm(y): 1.0057, norm:1.1588, tok/sec: 102006.74, flops:89.33, batch-reuse:1
@ 2457 train 5.9719 , allloss: 5.9867, dt: 1273.08ms, fracRes: 0.5971, norm(attn): 0.0947, norm(output): 0.3418, norm(x): 1.2027, norm(y): 1.0057, norm:1.1494, tok/sec: 102956.54, flops:90.16, batch-reuse:1
@ 2458 train 5.7805 , allloss: 5.7958, dt: 1280.62ms, fracRes: 0.5962, norm(attn): 0.0957, norm(output): 0.3398, norm(x): 1.1998, norm(y): 1.0058, norm:1.5036, tok/sec: 102350.57, flops:89.63, batch-reuse:1
@ 2459 train 5.8697 , allloss: 5.8855, dt: 1269.60ms, fracRes: 0.5953, norm(attn): 0.0981, norm(output): 0.3418, norm(x): 1.1980, norm(y): 1.0058, norm:1.1000, tok/sec: 103239.13, flops:90.41, batch-reuse:1
@ 2460 train 5.9095 , allloss: 5.9255, dt: 1273.63ms, fracRes: 0.5940, norm(attn): 0.1016, norm(output): 0.3418, norm(x): 1.1868, norm(y): 1.0056, norm:1.0599, tok/sec: 102911.81, flops:90.12, batch-reuse:1
@ 2461 train 5.8222 , allloss: 5.8371, dt: 1276.50ms, fracRes: 0.5936, norm(attn): 0.1006, norm(output): 0.3438, norm(x): 1.1967, norm(y): 1.0057, norm:1.2914, tok/sec: 102681.04, flops:89.92, batch-reuse:1
@ 2462 train 5.8424 , allloss: 5.8573, dt: 1274.80ms, fracRes: 0.5966, norm(attn): 0.0991, norm(output): 0.3418, norm(x): 1.2058, norm(y): 1.0057, norm:1.1228, tok/sec: 102817.58, flops:90.04, batch-reuse:1
@ 2463 train 5.8463 , allloss: 5.8612, dt: 1295.76ms, fracRes: 0.5979, norm(attn): 0.0972, norm(output): 0.3398, norm(x): 1.2102, norm(y): 1.0057, norm:1.0417, tok/sec: 101154.32, flops:88.58, batch-reuse:1
@ 2464 train 5.7943 , allloss: 5.8089, dt: 1266.05ms, fracRes: 0.5978, norm(attn): 0.0952, norm(output): 0.3438, norm(x): 1.2116, norm(y): 1.0057, norm:0.9405, tok/sec: 103528.70, flops:90.66, batch-reuse:1
@ 2465 train 5.6466 , allloss: 5.6612, dt: 1270.93ms, fracRes: 0.5964, norm(attn): 0.0977, norm(output): 0.3438, norm(x): 1.2088, norm(y): 1.0057, norm:1.0448, tok/sec: 103130.45, flops:90.31, batch-reuse:1
@ 2466 train 5.8527 , allloss: 5.8671, dt: 1270.22ms, fracRes: 0.5959, norm(attn): 0.1001, norm(output): 0.3418, norm(x): 1.2095, norm(y): 1.0057, norm:1.1003, tok/sec: 103188.21, flops:90.36, batch-reuse:1
@ 2467 train 5.7356 , allloss: 5.7501, dt: 1283.20ms, fracRes: 0.5941, norm(attn): 0.1006, norm(output): 0.3438, norm(x): 1.2016, norm(y): 1.0057, norm:1.2163, tok/sec: 102144.37, flops:89.45, batch-reuse:1
@ 2468 train 5.8155 , allloss: 5.8301, dt: 1321.79ms, fracRes: 0.5950, norm(attn): 0.0996, norm(output): 0.3418, norm(x): 1.1988, norm(y): 1.0057, norm:1.0229, tok/sec: 99162.21, flops:86.83, batch-reuse:1
@ 2469 train 5.8716 , allloss: 5.8859, dt: 1296.06ms, fracRes: 0.5958, norm(attn): 0.0986, norm(output): 0.3418, norm(x): 1.2005, norm(y): 1.0056, norm:1.6362, tok/sec: 101131.23, flops:88.56, batch-reuse:1
@ 2470 train 5.7694 , allloss: 5.7842, dt: 1264.69ms, fracRes: 0.5959, norm(attn): 0.0986, norm(output): 0.3418, norm(x): 1.1954, norm(y): 1.0057, norm:1.1473, tok/sec: 103639.85, flops:90.76, batch-reuse:1
@ 2471 train 5.7311 , allloss: 5.7464, dt: 1280.53ms, fracRes: 0.5960, norm(attn): 0.0986, norm(output): 0.3418, norm(x): 1.1960, norm(y): 1.0057, norm:1.4155, tok/sec: 102357.91, flops:89.63, batch-reuse:1
@ 2472 train 5.7956 , allloss: 5.8099, dt: 1271.84ms, fracRes: 0.5972, norm(attn): 0.0981, norm(output): 0.3398, norm(x): 1.2003, norm(y): 1.0057, norm:1.0686, tok/sec: 103056.59, flops:90.25, batch-reuse:1
@ 2473 train 5.7325 , allloss: 5.7466, dt: 1268.08ms, fracRes: 0.5972, norm(attn): 0.0986, norm(output): 0.3418, norm(x): 1.2011, norm(y): 1.0057, norm:1.3361, tok/sec: 103362.93, flops:90.51, batch-reuse:1
@ 2474 train 5.7746 , allloss: 5.7893, dt: 1272.82ms, fracRes: 0.5963, norm(attn): 0.1006, norm(output): 0.3418, norm(x): 1.1996, norm(y): 1.0057, norm:1.3518, tok/sec: 102977.43, flops:90.18, batch-reuse:1
@ 2475 train 5.8280 , allloss: 5.8430, dt: 1272.83ms, fracRes: 0.5961, norm(attn): 0.1011, norm(output): 0.3418, norm(x): 1.1956, norm(y): 1.0057, norm:0.8675, tok/sec: 102976.73, flops:90.18, batch-reuse:1
@ 2476 train 5.8546 , allloss: 5.8696, dt: 1280.92ms, fracRes: 0.5973, norm(attn): 0.0996, norm(output): 0.3398, norm(x): 1.1981, norm(y): 1.0058, norm:1.1587, tok/sec: 102326.76, flops:89.61, batch-reuse:1
@ 2477 train 5.7946 , allloss: 5.8096, dt: 1276.95ms, fracRes: 0.5976, norm(attn): 0.0986, norm(output): 0.3379, norm(x): 1.1945, norm(y): 1.0057, norm:1.0501, tok/sec: 102644.53, flops:89.88, batch-reuse:1
@ 2478 train 5.7484 , allloss: 5.7639, dt: 1275.37ms, fracRes: 0.5967, norm(attn): 0.0977, norm(output): 0.3418, norm(x): 1.1935, norm(y): 1.0058, norm:1.4254, tok/sec: 102771.72, flops:90.00, batch-reuse:1
@ 2479 train 5.7243 , allloss: 5.7392, dt: 1270.38ms, fracRes: 0.5954, norm(attn): 0.0972, norm(output): 0.3398, norm(x): 1.1896, norm(y): 1.0057, norm:1.1474, tok/sec: 103175.14, flops:90.35, batch-reuse:1
@ 2480 train 5.8551 , allloss: 5.8695, dt: 1277.64ms, fracRes: 0.5954, norm(attn): 0.0991, norm(output): 0.3418, norm(x): 1.1950, norm(y): 1.0058, norm:1.3425, tok/sec: 102588.93, flops:89.84, batch-reuse:1
@ 2481 train 5.8190 , allloss: 5.8340, dt: 1274.19ms, fracRes: 0.5954, norm(attn): 0.1006, norm(output): 0.3418, norm(x): 1.1981, norm(y): 1.0058, norm:1.2269, tok/sec: 102867.21, flops:90.08, batch-reuse:1
@ 2482 train 5.8635 , allloss: 5.8786, dt: 1264.89ms, fracRes: 0.5964, norm(attn): 0.1001, norm(output): 0.3418, norm(x): 1.2008, norm(y): 1.0057, norm:1.1035, tok/sec: 103623.34, flops:90.74, batch-reuse:1
@ 2483 train 5.8476 , allloss: 5.8625, dt: 1275.73ms, fracRes: 0.5960, norm(attn): 0.1001, norm(output): 0.3418, norm(x): 1.1990, norm(y): 1.0057, norm:1.2564, tok/sec: 102742.96, flops:89.97, batch-reuse:1
@ 2484 train 5.8097 , allloss: 5.8243, dt: 1272.50ms, fracRes: 0.5939, norm(attn): 0.1025, norm(output): 0.3418, norm(x): 1.1979, norm(y): 1.0057, norm:1.1461, tok/sec: 103003.48, flops:90.20, batch-reuse:1
@ 2485 train 5.7011 , allloss: 5.7163, dt: 1295.25ms, fracRes: 0.5944, norm(attn): 0.1021, norm(output): 0.3418, norm(x): 1.1976, norm(y): 1.0058, norm:1.2658, tok/sec: 101194.26, flops:88.61, batch-reuse:1
@ 2486 train 5.7710 , allloss: 5.7858, dt: 1270.07ms, fracRes: 0.5970, norm(attn): 0.0991, norm(output): 0.3418, norm(x): 1.2039, norm(y): 1.0058, norm:0.9007, tok/sec: 103200.33, flops:90.37, batch-reuse:1
@ 2487 train 5.8731 , allloss: 5.8881, dt: 1264.56ms, fracRes: 0.5990, norm(attn): 0.0957, norm(output): 0.3379, norm(x): 1.2026, norm(y): 1.0058, norm:1.3983, tok/sec: 103650.40, flops:90.77, batch-reuse:1
@ 2488 train 5.8430 , allloss: 5.8574, dt: 1257.04ms, fracRes: 0.6009, norm(attn): 0.0952, norm(output): 0.3320, norm(x): 1.2056, norm(y): 1.0058, norm:1.0891, tok/sec: 104270.03, flops:91.31, batch-reuse:1
@ 2489 train 5.7690 , allloss: 5.7836, dt: 1271.36ms, fracRes: 0.5976, norm(attn): 0.0967, norm(output): 0.3359, norm(x): 1.2014, norm(y): 1.0057, norm:1.0776, tok/sec: 103095.79, flops:90.28, batch-reuse:1
@ 2490 train 5.7421 , allloss: 5.7572, dt: 1277.53ms, fracRes: 0.5955, norm(attn): 0.1001, norm(output): 0.3398, norm(x): 1.1936, norm(y): 1.0057, norm:1.0830, tok/sec: 102597.87, flops:89.84, batch-reuse:1
@ 2491 train 5.8693 , allloss: 5.8847, dt: 1294.48ms, fracRes: 0.5946, norm(attn): 0.1030, norm(output): 0.3418, norm(x): 1.1942, norm(y): 1.0057, norm:1.4112, tok/sec: 101254.27, flops:88.67, batch-reuse:1
@ 2492 train 5.8542 , allloss: 5.8695, dt: 1259.06ms, fracRes: 0.5953, norm(attn): 0.1025, norm(output): 0.3418, norm(x): 1.1978, norm(y): 1.0058, norm:0.9924, tok/sec: 104102.89, flops:91.16, batch-reuse:1
@ 2493 train 5.7636 , allloss: 5.7786, dt: 1263.97ms, fracRes: 0.5955, norm(attn): 0.1011, norm(output): 0.3418, norm(x): 1.1996, norm(y): 1.0057, norm:1.1112, tok/sec: 103698.46, flops:90.81, batch-reuse:1
@ 2494 train 5.7507 , allloss: 5.7658, dt: 1281.95ms, fracRes: 0.5952, norm(attn): 0.1001, norm(output): 0.3418, norm(x): 1.1995, norm(y): 1.0057, norm:1.1661, tok/sec: 102244.35, flops:89.53, batch-reuse:1
@ 2495 train 5.8031 , allloss: 5.8182, dt: 1265.64ms, fracRes: 0.5970, norm(attn): 0.0981, norm(output): 0.3398, norm(x): 1.2048, norm(y): 1.0058, norm:1.1383, tok/sec: 103561.68, flops:90.69, batch-reuse:1
@ 2496 train 5.7407 , allloss: 5.7557, dt: 1263.01ms, fracRes: 0.5976, norm(attn): 0.0972, norm(output): 0.3418, norm(x): 1.2031, norm(y): 1.0058, norm:0.9911, tok/sec: 103777.83, flops:90.88, batch-reuse:1
@ 2497 train 5.7700 , allloss: 5.7845, dt: 1252.17ms, fracRes: 0.5993, norm(attn): 0.0972, norm(output): 0.3340, norm(x): 1.2065, norm(y): 1.0058, norm:1.2251, tok/sec: 104675.90, flops:91.66, batch-reuse:1
@ 2498 train 5.8225 , allloss: 5.8374, dt: 1274.43ms, fracRes: 0.5980, norm(attn): 0.0996, norm(output): 0.3379, norm(x): 1.2046, norm(y): 1.0058, norm:1.5001, tok/sec: 102847.18, flops:90.06, batch-reuse:1
@ 2499 train 5.7854 , allloss: 5.7998, dt: 1253.73ms, fracRes: 0.5967, norm(attn): 0.1006, norm(output): 0.3398, norm(x): 1.2007, norm(y): 1.0058, norm:1.1062, tok/sec: 104545.93, flops:91.55, batch-reuse:1
@ 2500 train 5.8222 , allloss: 5.8376, dt: 1272.68ms, fracRes: 0.5963, norm(attn): 0.1011, norm(output): 0.3398, norm(x): 1.1933, norm(y): 1.0057, norm:1.0952, tok/sec: 102989.23, flops:90.19, batch-reuse:1
@ 2501 train 5.7672 , allloss: 5.7826, dt: 1282.47ms, fracRes: 0.5963, norm(attn): 0.1016, norm(output): 0.3398, norm(x): 1.1965, norm(y): 1.0058, norm:1.0309, tok/sec: 102202.71, flops:89.50, batch-reuse:1
@ 2502 train 5.8570 , allloss: 5.8739, dt: 1248.99ms, fracRes: 0.5974, norm(attn): 0.1001, norm(output): 0.3398, norm(x): 1.1903, norm(y): 1.0057, norm:1.0878, tok/sec: 104942.33, flops:91.90, batch-reuse:1
@ 2503 train 5.7857 , allloss: 5.8004, dt: 1297.08ms, fracRes: 0.5976, norm(attn): 0.1006, norm(output): 0.3379, norm(x): 1.1971, norm(y): 1.0058, norm:1.2090, tok/sec: 101051.96, flops:88.49, batch-reuse:1
@ 2504 train 5.8427 , allloss: 5.8579, dt: 1285.89ms, fracRes: 0.5973, norm(attn): 0.0986, norm(output): 0.3340, norm(x): 1.1917, norm(y): 1.0058, norm:1.4379, tok/sec: 101930.76, flops:89.26, batch-reuse:1
@ 2505 train 5.8149 , allloss: 5.8307, dt: 1268.68ms, fracRes: 0.5998, norm(attn): 0.0967, norm(output): 0.3340, norm(x): 1.1920, norm(y): 1.0058, norm:1.0419, tok/sec: 103313.58, flops:90.47, batch-reuse:1
@ 2506 train 5.8523 , allloss: 5.8670, dt: 1258.47ms, fracRes: 0.5990, norm(attn): 0.0962, norm(output): 0.3340, norm(x): 1.1980, norm(y): 1.0058, norm:1.4439, tok/sec: 104151.98, flops:91.20, batch-reuse:1
@ 2507 train 5.8935 , allloss: 5.9088, dt: 1249.83ms, fracRes: 0.5985, norm(attn): 0.0991, norm(output): 0.3379, norm(x): 1.1977, norm(y): 1.0058, norm:1.1136, tok/sec: 104872.02, flops:91.83, batch-reuse:1
@ 2508 train 5.7320 , allloss: 5.7478, dt: 1298.66ms, fracRes: 0.5935, norm(attn): 0.1035, norm(output): 0.3418, norm(x): 1.1928, norm(y): 1.0058, norm:1.5497, tok/sec: 100928.52, flops:88.38, batch-reuse:1
@ 2509 train 5.6908 , allloss: 5.7063, dt: 1274.60ms, fracRes: 0.5903, norm(attn): 0.1084, norm(output): 0.3438, norm(x): 1.1854, norm(y): 1.0058, norm:1.2570, tok/sec: 102834.06, flops:90.05, batch-reuse:1
@ 2510 train 5.7564 , allloss: 5.7713, dt: 1270.90ms, fracRes: 0.5916, norm(attn): 0.1055, norm(output): 0.3418, norm(x): 1.1875, norm(y): 1.0057, norm:1.2676, tok/sec: 103133.15, flops:90.31, batch-reuse:1
@ 2511 train 5.7328 , allloss: 5.7479, dt: 1289.45ms, fracRes: 0.5941, norm(attn): 0.1025, norm(output): 0.3418, norm(x): 1.1941, norm(y): 1.0058, norm:1.5236, tok/sec: 101649.32, flops:89.01, batch-reuse:1
@ 2512 train 5.7318 , allloss: 5.7469, dt: 1264.70ms, fracRes: 0.5983, norm(attn): 0.0972, norm(output): 0.3398, norm(x): 1.2021, norm(y): 1.0059, norm:1.0198, tok/sec: 103638.50, flops:90.75, batch-reuse:1
@ 2513 train 5.7704 , allloss: 5.7863, dt: 1266.77ms, fracRes: 0.6006, norm(attn): 0.0942, norm(output): 0.3320, norm(x): 1.2028, norm(y): 1.0059, norm:1.0055, tok/sec: 103469.15, flops:90.61, batch-reuse:1
@ 2514 train 5.8900 , allloss: 5.9050, dt: 1278.57ms, fracRes: 0.6022, norm(attn): 0.0938, norm(output): 0.3301, norm(x): 1.2084, norm(y): 1.0059, norm:1.1969, tok/sec: 102514.53, flops:89.77, batch-reuse:1
@ 2515 train 5.6630 , allloss: 5.6772, dt: 1270.28ms, fracRes: 0.6008, norm(attn): 0.0942, norm(output): 0.3301, norm(x): 1.2095, norm(y): 1.0060, norm:1.0934, tok/sec: 103183.50, flops:90.36, batch-reuse:1
@ 2516 train 5.5999 , allloss: 5.6149, dt: 1292.70ms, fracRes: 0.5980, norm(attn): 0.0996, norm(output): 0.3340, norm(x): 1.1922, norm(y): 1.0058, norm:1.1377, tok/sec: 101394.16, flops:88.79, batch-reuse:1
@ 2517 train 5.6768 , allloss: 5.6922, dt: 1313.51ms, fracRes: 0.5960, norm(attn): 0.1030, norm(output): 0.3398, norm(x): 1.1930, norm(y): 1.0058, norm:1.1263, tok/sec: 99787.67, flops:87.38, batch-reuse:1
@ 2518 train 5.7843 , allloss: 5.8001, dt: 1276.82ms, fracRes: 0.5947, norm(attn): 0.1050, norm(output): 0.3418, norm(x): 1.1919, norm(y): 1.0058, norm:0.9750, tok/sec: 102654.96, flops:89.89, batch-reuse:1
@ 2519 train 5.7590 , allloss: 5.7752, dt: 1267.03ms, fracRes: 0.5951, norm(attn): 0.1030, norm(output): 0.3398, norm(x): 1.1914, norm(y): 1.0058, norm:1.0406, tok/sec: 103448.30, flops:90.59, batch-reuse:1
@ 2520 train 5.7915 , allloss: 5.8070, dt: 1263.92ms, fracRes: 0.5966, norm(attn): 0.1011, norm(output): 0.3379, norm(x): 1.1921, norm(y): 1.0058, norm:1.3563, tok/sec: 103702.70, flops:90.81, batch-reuse:1
@ 2521 train 5.7321 , allloss: 5.7473, dt: 1263.86ms, fracRes: 0.5966, norm(attn): 0.0991, norm(output): 0.3359, norm(x): 1.1944, norm(y): 1.0059, norm:1.2345, tok/sec: 103707.79, flops:90.82, batch-reuse:1
@ 2522 train 5.8170 , allloss: 5.8323, dt: 1269.01ms, fracRes: 0.5983, norm(attn): 0.0967, norm(output): 0.3340, norm(x): 1.1954, norm(y): 1.0059, norm:1.3732, tok/sec: 103287.20, flops:90.45, batch-reuse:1
@ 2523 train 5.7256 , allloss: 5.7400, dt: 1297.50ms, fracRes: 0.5968, norm(attn): 0.0977, norm(output): 0.3340, norm(x): 1.1999, norm(y): 1.0058, norm:1.3643, tok/sec: 101019.24, flops:88.46, batch-reuse:1
@ 2524 train 5.6506 , allloss: 5.6652, dt: 1287.09ms, fracRes: 0.5978, norm(attn): 0.0981, norm(output): 0.3359, norm(x): 1.2015, norm(y): 1.0059, norm:0.9309, tok/sec: 101835.77, flops:89.18, batch-reuse:1
@ 2525 train 5.7272 , allloss: 5.7433, dt: 1284.67ms, fracRes: 0.5983, norm(attn): 0.1001, norm(output): 0.3340, norm(x): 1.1875, norm(y): 1.0058, norm:1.1778, tok/sec: 102028.09, flops:89.34, batch-reuse:1
@ 2526 train 5.8139 , allloss: 5.8293, dt: 1329.98ms, fracRes: 0.5960, norm(attn): 0.1016, norm(output): 0.3359, norm(x): 1.1859, norm(y): 1.0058, norm:1.0852, tok/sec: 98551.85, flops:86.30, batch-reuse:1
@ 2527 train 5.6713 , allloss: 5.6867, dt: 1301.65ms, fracRes: 0.5959, norm(attn): 0.1021, norm(output): 0.3340, norm(x): 1.1850, norm(y): 1.0059, norm:1.3215, tok/sec: 100696.71, flops:88.18, batch-reuse:1
@ 2528 train 5.7265 , allloss: 5.7415, dt: 1325.91ms, fracRes: 0.5959, norm(attn): 0.1025, norm(output): 0.3320, norm(x): 1.1858, norm(y): 1.0059, norm:1.1616, tok/sec: 98854.35, flops:86.57, batch-reuse:1
@ 2529 train 5.7263 , allloss: 5.7413, dt: 1285.23ms, fracRes: 0.5956, norm(attn): 0.1025, norm(output): 0.3340, norm(x): 1.1840, norm(y): 1.0059, norm:1.0913, tok/sec: 101983.29, flops:89.31, batch-reuse:1
@ 2530 train 5.7142 , allloss: 5.7298, dt: 1271.27ms, fracRes: 0.5955, norm(attn): 0.1021, norm(output): 0.3340, norm(x): 1.1848, norm(y): 1.0059, norm:1.2577, tok/sec: 103103.46, flops:90.29, batch-reuse:1
@ 2531 train 5.6534 , allloss: 5.6677, dt: 1277.22ms, fracRes: 0.5970, norm(attn): 0.1006, norm(output): 0.3359, norm(x): 1.1963, norm(y): 1.0059, norm:1.3806, tok/sec: 102623.25, flops:89.87, batch-reuse:1
@ 2532 train 5.7475 , allloss: 5.7620, dt: 1277.03ms, fracRes: 0.5978, norm(attn): 0.0991, norm(output): 0.3359, norm(x): 1.1970, norm(y): 1.0059, norm:0.9432, tok/sec: 102638.13, flops:89.88, batch-reuse:1
@ 2533 train 5.8609 , allloss: 5.8766, dt: 1280.69ms, fracRes: 0.5992, norm(attn): 0.0981, norm(output): 0.3320, norm(x): 1.1954, norm(y): 1.0058, norm:1.1000, tok/sec: 102344.91, flops:89.62, batch-reuse:1
@ 2534 train 5.7812 , allloss: 5.7961, dt: 1268.68ms, fracRes: 0.5977, norm(attn): 0.1001, norm(output): 0.3340, norm(x): 1.1910, norm(y): 1.0059, norm:1.3425, tok/sec: 103313.81, flops:90.47, batch-reuse:1
@ 2535 train 5.6662 , allloss: 5.6814, dt: 1294.52ms, fracRes: 0.5967, norm(attn): 0.1016, norm(output): 0.3340, norm(x): 1.1901, norm(y): 1.0059, norm:1.7481, tok/sec: 101251.64, flops:88.66, batch-reuse:1
@ 2536 train 5.7535 , allloss: 5.7694, dt: 1292.99ms, fracRes: 0.5966, norm(attn): 0.1016, norm(output): 0.3320, norm(x): 1.1857, norm(y): 1.0059, norm:0.9237, tok/sec: 101371.26, flops:88.77, batch-reuse:1
@ 2537 train 5.7298 , allloss: 5.7457, dt: 1285.45ms, fracRes: 0.5959, norm(attn): 0.1030, norm(output): 0.3340, norm(x): 1.1852, norm(y): 1.0059, norm:1.5295, tok/sec: 101966.06, flops:89.29, batch-reuse:1
@ 2538 train 5.7880 , allloss: 5.8037, dt: 1256.83ms, fracRes: 0.5956, norm(attn): 0.1030, norm(output): 0.3359, norm(x): 1.1873, norm(y): 1.0059, norm:1.0804, tok/sec: 104288.07, flops:91.32, batch-reuse:1
@ 2539 train 5.7720 , allloss: 5.7880, dt: 1258.88ms, fracRes: 0.5961, norm(attn): 0.1030, norm(output): 0.3340, norm(x): 1.1852, norm(y): 1.0058, norm:1.1294, tok/sec: 104118.15, flops:91.17, batch-reuse:1
@ 2540 train 5.8260 , allloss: 5.8417, dt: 1291.14ms, fracRes: 0.5957, norm(attn): 0.1016, norm(output): 0.3359, norm(x): 1.1886, norm(y): 1.0058, norm:1.3003, tok/sec: 101516.88, flops:88.90, batch-reuse:1
@ 2541 train 5.7006 , allloss: 5.7155, dt: 1260.63ms, fracRes: 0.5957, norm(attn): 0.0996, norm(output): 0.3359, norm(x): 1.1877, norm(y): 1.0059, norm:1.0343, tok/sec: 103973.75, flops:91.05, batch-reuse:1
@ 2542 train 5.8343 , allloss: 5.8502, dt: 1262.01ms, fracRes: 0.5968, norm(attn): 0.1006, norm(output): 0.3340, norm(x): 1.1814, norm(y): 1.0058, norm:1.5857, tok/sec: 103859.79, flops:90.95, batch-reuse:1
@ 2543 train 5.6857 , allloss: 5.7006, dt: 1289.35ms, fracRes: 0.5965, norm(attn): 0.0981, norm(output): 0.3340, norm(x): 1.1911, norm(y): 1.0059, norm:1.4536, tok/sec: 101657.70, flops:89.02, batch-reuse:1
@ 2544 train 5.8292 , allloss: 5.8445, dt: 1268.68ms, fracRes: 0.5989, norm(attn): 0.0986, norm(output): 0.3281, norm(x): 1.1914, norm(y): 1.0059, norm:1.4293, tok/sec: 103313.77, flops:90.47, batch-reuse:1
@ 2545 train 5.7650 , allloss: 5.7799, dt: 1258.22ms, fracRes: 0.5970, norm(attn): 0.1011, norm(output): 0.3320, norm(x): 1.1880, norm(y): 1.0059, norm:1.1794, tok/sec: 104172.23, flops:91.22, batch-reuse:1
@ 2546 train 5.7361 , allloss: 5.7513, dt: 1288.14ms, fracRes: 0.5953, norm(attn): 0.1025, norm(output): 0.3340, norm(x): 1.1819, norm(y): 1.0059, norm:1.0630, tok/sec: 101753.06, flops:89.10, batch-reuse:1
@ 2547 train 5.7426 , allloss: 5.7583, dt: 1279.20ms, fracRes: 0.5940, norm(attn): 0.1030, norm(output): 0.3340, norm(x): 1.1797, norm(y): 1.0059, norm:1.1262, tok/sec: 102463.73, flops:89.73, batch-reuse:1
@ 2548 train 5.9734 , allloss: 5.9899, dt: 1264.43ms, fracRes: 0.5991, norm(attn): 0.1006, norm(output): 0.3281, norm(x): 1.1812, norm(y): 1.0059, norm:1.4894, tok/sec: 103661.09, flops:90.77, batch-reuse:1
@ 2549 train 5.8687 , allloss: 5.8844, dt: 1268.38ms, fracRes: 0.5972, norm(attn): 0.1016, norm(output): 0.3340, norm(x): 1.1917, norm(y): 1.0058, norm:1.3694, tok/sec: 103337.73, flops:90.49, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2412,     0.7578,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5703,     0.1216,     0.3066,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1982,     0.1699,     0.4629,     0.1680,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2080,     0.0518,     0.5234,     0.1484,     0.0703,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1226,     0.0422,     0.0549,     0.1260,     0.4082,     0.2461,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1689,     0.3672,     0.2109,     0.1099,     0.0640,     0.0640,     0.0167,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0894,     0.6172,     0.0986,     0.0361,     0.0413,     0.0259,     0.0027,     0.0889,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1245,     0.0476,     0.0879,     0.0996,     0.1377,     0.0737,     0.1299,     0.1216,     0.1787,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0889,     0.0776,     0.1328,     0.0791,     0.0459,     0.0615,     0.1143,     0.2031,     0.1074,     0.0889,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0938,     0.0469,     0.2754,     0.0280,     0.0111,     0.0139,     0.0033,     0.2412,     0.0322,     0.2363,     0.0175,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0615,     0.0396,     0.0312,     0.0981,     0.0408,     0.1299,     0.2637,     0.2002,     0.0500,     0.0248,     0.0203,     0.0410,     0.0000,     0.0000,     0.0000],
        [    0.0226,     0.2520,     0.0330,     0.0069,     0.0092,     0.0067,     0.0006,     0.0181,     0.0140,     0.2148,     0.0188,     0.0366,     0.3672,     0.0000,     0.0000],
        [    0.0806,     0.0623,     0.0479,     0.0569,     0.1064,     0.0530,     0.0850,     0.0598,     0.1172,     0.0903,     0.0771,     0.0330,     0.0530,     0.0776,     0.0000],
        [    0.0283,     0.0806,     0.0574,     0.0099,     0.0030,     0.0025,     0.0002,     0.0742,     0.0015,     0.1748,     0.0027,     0.0752,     0.4863,     0.0014,     0.0012]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[     0.0001,     -0.0107,      0.0056,  ...,     -0.0358,      0.0194,     -0.0031],
        [    -0.0321,      0.0152,     -0.0151,  ...,     -0.0037,      0.0051,      0.0222],
        [     0.0145,      0.0224,     -0.0054,  ...,     -0.0233,      0.0178,     -0.0226],
        ...,
        [     0.0201,      0.0221,      0.0161,  ...,     -0.0331,      0.0115,      0.0160],
        [    -0.0443,      0.0001,     -0.0381,  ...,      0.0051,      0.0002,     -0.0090],
        [    -0.0211,      0.0088,     -0.0347,  ...,     -0.0245,     -0.0151,      0.0022]], device='cuda:0', requires_grad=True)
K: tensor([ 1.2656,  0.2051, -1.2109, -0.3867, -0.1689,  1.3516,  0.6797,  0.6250,  0.4316,  0.3418,  1.1641, -0.3984, -1.1953,  0.6172,  0.3027, -0.3320,  0.3867, -0.6289,  0.2734,  0.8008,  0.1030,  0.2188,  0.6758, -0.7422,  0.8633,  0.9648, -1.3672, -0.1582,  1.2891, -0.5352,  1.5469,  0.4297,
        -0.0850, -1.2812,  1.5078,  1.3359, -1.0234, -0.2471, -1.4219, -1.7266,  0.0679, -1.0078, -0.8164,  0.7695, -1.0391,  0.6484, -0.6094,  1.6250, -0.3887, -0.4395,  0.8711, -0.8438, -1.3750,  0.9141,  0.6523, -0.0051, -0.1670, -0.2637,  1.2812, -0.2314, -0.1001, -0.4375,  0.4414,  0.5977],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0177, -0.0035, -0.0157,  ...,  0.0050, -0.0101, -0.0146],
        [ 0.0133, -0.0164,  0.0028,  ...,  0.0221,  0.0315, -0.0101],
        [-0.0381,  0.0438,  0.0069,  ..., -0.0388, -0.0284, -0.0246],
        ...,
        [ 0.0140,  0.0201,  0.0158,  ...,  0.0062,  0.0103,  0.0249],
        [ 0.0286, -0.0054,  0.0516,  ...,  0.0415,  0.0172,  0.0308],
        [ 0.0151, -0.0185,  0.0237,  ..., -0.0111,  0.0234, -0.0140]], device='cuda:0', requires_grad=True)
Q: tensor([-0.8594, -0.3164, -0.3672, -0.6250,  0.8633, -0.7578, -1.6719,  0.0986, -0.1914,  0.5234, -0.1035, -0.6016, -0.2227, -1.0938, -0.9336, -1.0547, -1.8750,  0.5547, -0.4551,  0.5703,  0.7031, -0.4883,  0.2051,  0.2832, -0.1206, -0.6875,  0.6797, -0.6914, -1.0625,  1.6484, -1.8750,  0.4297,
        -0.3965,  0.0752, -0.6758, -0.5547,  0.7422,  0.8438, -0.0469,  2.6250,  0.4023, -0.2139,  1.0547,  1.0703,  0.2090, -0.2832,  0.7695, -1.3047, -0.0757,  0.4043, -2.8281, -0.9688,  0.3066, -1.1406, -0.9414, -1.2266, -0.1816, -0.5742, -0.7617, -1.3047,  1.6172,  1.0703, -1.0078,  0.5117],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      1.1484,      0.2539,     -0.2090,     -1.8672,     -1.1406,     -3.0312,      1.2344,     -1.8047,      0.8008,     -1.8672,      0.5039,      2.2188,     -2.0312,     -1.6016],
        [     0.0000,     -1.5469,     -0.6211,      0.1494,      0.6133,      0.5430,      0.4629,     -0.8203,      0.0215,     -0.5469,      0.6211,     -0.2930,     -0.9062,      0.7266,      1.0156],
        [     0.0000,     -0.1562,      0.8477,     -0.1670,     -2.0000,     -1.0078,     -2.7344,      1.8906,     -2.3906,      0.7109,     -2.3906,      1.3203,      2.5469,     -2.6406,     -1.2500],
        [     0.0000,     -1.3906,      0.9219,     -0.3398,     -1.0781,     -1.0312,     -2.2812,      0.8711,     -1.0859,      0.8164,     -1.1875,     -0.1250,      0.4746,     -0.9258,     -1.5625],
        [     0.0000,     -1.0703,     -0.8008,      0.0309,      1.2031,      0.6992,      1.9297,     -0.7266,      1.1562,     -1.8750,      1.2188,     -0.7422,     -2.2500,      1.2031,      2.4062],
        [     0.0000,      0.7734,      0.2207,     -0.4297,     -0.9688,     -0.9727,     -2.3125,     -0.7812,     -1.5703,      1.0391,     -0.1738,      0.6992,      0.4004,     -1.1875,     -1.1719],
        [     0.0000,      1.9297,      0.0996,     -0.9102,     -0.7695,     -1.2422,     -3.5000,     -0.0047,     -0.7188,      1.9297,     -0.2773,      0.4473,      1.7422,     -0.7500,     -2.7969],
        [     0.0000,     -0.9609,     -0.3496,     -0.2217,      0.0986,     -0.5234,      0.0417,     -0.0223,      0.3613,      0.0474,     -0.3105,     -0.6875,     -0.5938,     -0.1299,     -0.3145],
        [     0.0000,     -0.1328,      0.4043,     -0.1143,     -0.6602,     -0.3672,      0.2539,      0.8281,      0.1924,     -0.0006,     -0.6016,      0.1436,      0.8672,     -0.2754,      0.5078],
        [     0.0000,     -0.6953,      1.0781,     -1.2109,     -2.1250,     -1.9141,     -3.3438,      0.9492,     -1.0625,      0.9258,     -1.6797,      0.5234,      1.1953,     -1.6484,     -2.0312],
        [     0.0000,     -0.4395,     -0.6758,      0.4688,     -0.4102,      0.7500,      1.4531,      1.1797,     -0.2051,     -0.9062,     -1.1094,     -0.4043,      0.9805,     -0.0420,      1.3125],
        [     0.0000,      2.4062,      0.3789,     -1.1875,     -0.9062,     -1.2188,     -3.6406,     -0.2275,     -0.4766,      2.2500,     -0.1836,      0.4805,      2.7812,     -0.5195,     -3.7344],
        [     0.0000,     -0.2539,     -0.5195,     -0.3477,      0.2793,     -0.4180,      0.0579,     -0.2949,      0.3770,      0.1152,     -0.0391,     -0.8945,     -0.4180,     -0.0322,     -0.3281],
        [     0.0000,      1.0391,      0.7031,     -1.0469,     -2.2500,     -2.4219,     -5.0312,      0.9609,     -2.9219,      1.8203,     -2.3594,      0.9766,      2.8438,     -3.0000,     -3.1719]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4811],
        [0.5493],
        [0.4094],
        [0.1896],
        [0.1510],
        [0.1390],
        [0.1087],
        [0.0985],
        [0.0771],
        [0.0736],
        [0.0525],
        [0.0374],
        [0.0420],
        [0.0437]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9766,     0.0231,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4395,     0.2207,     0.3398,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4609,     0.1504,     0.1826,     0.2061,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3047,     0.1631,     0.1064,     0.2617,     0.1650,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1553,     0.1582,     0.1875,     0.1504,     0.0649,     0.2832,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1387,     0.0703,     0.3477,     0.1758,     0.0698,     0.1455,     0.0530,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2256,     0.0762,     0.1377,     0.0732,     0.0771,     0.0342,     0.0378,     0.3379,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2559,     0.0415,     0.0270,     0.0352,     0.1270,     0.2324,     0.0786,     0.0386,     0.1631,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2773,     0.0859,     0.0378,     0.0630,     0.0796,     0.1709,     0.0688,     0.0566,     0.0913,     0.0693,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0435,     0.0063,     0.0004,     0.0024,     0.0306,     0.1465,     0.0189,     0.0005,     0.1973,     0.0003,     0.5547,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0474,     0.0337,     0.0659,     0.0427,     0.0171,     0.0262,     0.0171,     0.1079,     0.0144,     0.3965,     0.0106,     0.2207,     0.0000,     0.0000,     0.0000],
        [    0.3262,     0.0205,     0.0064,     0.0132,     0.0613,     0.1514,     0.0396,     0.0322,     0.1230,     0.0237,     0.1396,     0.0165,     0.0471,     0.0000,     0.0000],
        [    0.1011,     0.0364,     0.0233,     0.0361,     0.0693,     0.1533,     0.0752,     0.0237,     0.1152,     0.0337,     0.1279,     0.0293,     0.0347,     0.1416,     0.0000],
        [    0.0542,     0.0430,     0.1045,     0.0439,     0.0479,     0.0356,     0.0189,     0.0723,     0.0176,     0.1475,     0.0097,     0.1953,     0.1533,     0.0146,     0.0420]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0221, -0.0098, -0.0037,  ..., -0.0145, -0.0264,  0.0247],
        [ 0.0043,  0.0108,  0.0040,  ...,  0.0161,  0.0024, -0.0386],
        [ 0.0103,  0.0236,  0.0216,  ...,  0.0133,  0.0151,  0.0078],
        ...,
        [-0.0135,  0.0248,  0.0139,  ...,  0.0414, -0.0123, -0.0069],
        [-0.0158, -0.0140, -0.0026,  ..., -0.0096,  0.0069,  0.0096],
        [ 0.0231,  0.0376,  0.0159,  ...,  0.0072, -0.0284,  0.0188]], device='cuda:0', requires_grad=True)
K: tensor([ 0.5234,  0.3398, -0.2021,  0.0245, -0.3008, -0.9102, -0.3223,  0.1001,  0.2598,  0.2344,  0.3691,  0.6211, -0.5391,  0.1650,  0.7617, -0.8477,  0.6172,  0.0047, -1.1719,  0.2637,  0.4023,  0.8516,  0.3242, -0.8906,  0.0315,  0.3789, -0.5273,  0.3516, -0.3125,  0.0486,  1.6484, -0.3672,
        -0.0850, -0.5586, -0.3105,  0.8477,  1.1016,  0.3086, -0.1348,  0.7969,  0.9375, -0.5859, -0.0620, -0.3086, -0.4512,  0.6406, -0.6914, -1.1172,  0.8711, -0.5195, -1.4688,  0.8555, -0.2598, -0.6875,  0.9102, -0.2490,  1.0781, -0.2324,  0.5508,  1.1016, -0.2695,  0.7734,  0.8047, -0.5156],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0143, -0.0149, -0.0040,  ...,  0.0001,  0.0049, -0.0065],
        [ 0.0144,  0.0131, -0.0439,  ..., -0.0076, -0.0071, -0.0152],
        [ 0.0383,  0.0309,  0.0205,  ..., -0.0098,  0.0328,  0.0166],
        ...,
        [-0.0148, -0.0258,  0.0178,  ...,  0.0270, -0.0045, -0.0333],
        [ 0.0459,  0.0052, -0.0064,  ..., -0.0125,  0.0146,  0.0044],
        [ 0.0150, -0.0256, -0.0189,  ...,  0.0113, -0.0120,  0.0204]], device='cuda:0', requires_grad=True)
Q: tensor([-0.4297,  0.5312, -0.0505,  0.8320, -0.3418, -0.4453,  1.0156,  0.9219,  0.5312,  0.0645,  0.5742, -0.2354, -0.6406,  0.1729, -0.2354,  1.1641, -0.2969,  0.0923,  0.0623, -1.1172,  0.6641, -0.7539, -0.0457,  0.0112, -0.4551, -0.0752,  0.8359,  0.6172, -0.5391, -0.5742, -0.4180, -0.6055,
        -0.5234,  0.4570,  0.8125, -0.1050,  0.2578,  0.8477, -0.0991,  0.4609, -0.8125, -0.3281,  0.2871,  0.4453,  0.5469, -1.1016, -0.3320, -0.6406,  1.0859,  0.6523,  0.6367,  0.5703, -1.9531,  0.6914,  0.3672,  1.0000, -0.4062,  0.8750, -0.6992,  0.7578, -0.5391,  0.2910,  0.0048,  0.6055],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -3.7500, -4.5625, -3.9844, -2.1094, -0.9922, -2.5781, -3.5156, -1.2734, -4.4688, -2.3438, -3.8438, -3.6250, -1.0312, -2.4531],
        [ 0.0000, -0.6914, -0.2617, -0.4121, -1.4453, -0.4023, -0.8555,  0.0903, -1.4609,  1.3516, -1.9766,  1.0312,  1.3438, -1.3594, -0.6133],
        [ 0.0000, -1.1172, -0.9258, -0.8047, -0.6914, -0.1270, -0.8750, -1.1953, -0.6055, -0.7148, -1.1094, -0.3574, -0.7109, -0.5938, -0.5391],
        [ 0.0000, -0.6250, -1.0469, -0.1484, -0.6133,  0.1377, -0.1836, -0.6602, -0.2412, -0.2129,  0.5859, -0.5508, -0.8594,  0.0059, -0.4414],
        [ 0.0000,  0.0211,  0.1885, -0.0303, -0.8711,  0.6016,  0.2090, -0.2324, -0.8398,  1.2266, -1.9141,  1.0859,  0.8125, -0.9844, -0.6211],
        [ 0.0000, -0.6758,  0.9219,  0.2393, -0.6836,  0.0500, -0.9570,  0.9766, -0.9570,  2.3750, -3.0000,  2.2344,  1.8125, -1.2188, -0.4004],
        [ 0.0000, -1.0859, -0.4980, -1.1250, -1.0703, -1.8906, -1.7891,  0.4023, -2.0781,  0.8203, -2.8125,  0.7734,  0.9219, -2.2500, -0.5391],
        [ 0.0000, -1.8203, -2.2500, -1.9844, -0.7031, -0.1006, -1.1797, -1.8984, -0.4531, -2.2344, -0.7305, -2.0469, -1.7812, -0.2520, -1.4453],
        [ 0.0000, -1.1719, -1.9922, -1.4766, -1.2422, -0.4824, -1.3906, -1.5859, -1.1094, -1.3828, -0.5352, -1.2891, -0.9414, -0.7148, -1.0156],
        [ 0.0000, -1.9297, -4.7188, -2.9062, -0.3457,  1.2188, -0.8281, -4.4375,  1.5156, -5.0312,  2.5469, -4.7188, -4.6562,  2.0625, -2.0625],
        [ 0.0000, -0.3438,  0.3262, -0.1045, -1.0234, -0.5938, -1.0234,  0.8203, -1.1953,  2.1250, -1.5078,  1.5391,  2.1719, -1.0234, -0.0776],
        [ 0.0000, -2.7656, -3.9219, -3.2031, -1.6719, -0.7695, -2.1094, -2.3125, -0.9766, -2.6250, -0.8516, -2.9844, -1.9375, -0.4980, -1.8906],
        [ 0.0000, -1.0234, -1.4609, -1.0312, -0.3789,  0.4160, -0.2949, -1.4531,  0.1289, -1.1016,  0.2344, -1.2344, -1.0703,  0.3359, -1.0156],
        [ 0.0000, -0.2314,  0.6562, -0.2109, -0.1260, -0.4180, -1.0547,  0.2871, -1.1250,  1.0000, -1.7266,  1.2812,  1.0391, -1.3125, -0.2578]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7569],
        [0.4407],
        [0.3576],
        [0.1914],
        [0.2125],
        [0.1605],
        [0.2077],
        [0.1168],
        [0.2121],
        [0.0856],
        [0.1182],
        [0.1915],
        [0.0610],
        [0.1073]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0121,  0.0093,  0.0115,  ..., -0.0131, -0.0056, -0.0119],
        [ 0.0262, -0.0419, -0.0334,  ...,  0.0047, -0.0150, -0.0284],
        [ 0.0362, -0.0313,  0.0281,  ..., -0.0052, -0.0162,  0.0081],
        ...,
        [ 0.0399,  0.0038, -0.0265,  ..., -0.0087,  0.0161,  0.0139],
        [ 0.0007,  0.0290, -0.0183,  ..., -0.0132, -0.0353, -0.0162],
        [ 0.0140, -0.0031,  0.0070,  ...,  0.0106, -0.0131,  0.0192]], device='cuda:0', requires_grad=True)
K: tensor([-2.7500, -2.2656, -1.9062, -1.4922, -2.6250,  1.0000, -1.9766,  2.2344, -2.9375, -3.3438,  1.5703, -2.1875, -2.6875, -1.9531, -2.5469,  1.0625,  2.2812,  2.2969, -3.6406,  2.0312,  2.4531,  2.2344, -1.5078, -2.0625,  2.5469,  1.7656, -1.3359, -2.4531,  3.1875,  2.6719,  2.4062,  3.1094,
        -2.3906,  1.5938,  2.3125, -2.7500, -2.0156, -1.8281,  1.9688,  0.7539, -0.0967, -1.7891, -1.8281,  2.4688,  1.9844,  2.8906, -2.4219, -1.8125,  2.0469,  2.1719, -1.7422, -1.2188,  2.6875,  2.2031,  2.9531, -2.1562, -2.3906, -2.9219, -2.8438, -2.4062, -3.2500, -1.9375,  3.3281,  1.3984],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0188,  0.0084,  0.0342,  ..., -0.0189,  0.0385, -0.0030],
        [ 0.0119,  0.0293,  0.0116,  ...,  0.0165,  0.0218, -0.0195],
        [-0.0062, -0.0030,  0.0216,  ..., -0.0186,  0.0481, -0.0167],
        ...,
        [-0.0138, -0.0074,  0.0103,  ..., -0.0282, -0.0048,  0.0002],
        [ 0.0193, -0.0219,  0.0205,  ...,  0.0338,  0.0165, -0.0098],
        [ 0.0360, -0.0317, -0.0179,  ...,  0.0203,  0.0282,  0.0086]], device='cuda:0', requires_grad=True)
Q: tensor([ 2.4375,  1.8281,  1.7266,  1.3359,  1.9375, -0.9883,  2.0312, -1.3359,  3.5000,  2.7656, -2.1406,  1.5312,  1.8047,  2.3594,  3.0000, -1.0469, -1.8672, -2.3594,  3.7188, -1.5469, -1.7188, -2.5000,  1.0703,  1.2578, -1.4062, -2.0000,  1.6328,  1.6016, -2.3281, -2.3438, -2.3906, -2.1094,
         1.5781, -2.3594, -1.8203,  0.9688,  1.6562,  0.0791, -0.8008, -0.0076, -0.5820,  2.4844,  1.4297, -1.2891, -1.1562, -2.6719,  1.6094,  2.1719, -1.9062, -1.9141,  2.4375,  1.1406, -2.3281, -2.0781, -2.8438,  1.9531,  1.5391,  2.8281,  3.0781,  2.0469,  2.9375,  1.9297, -2.7188, -1.0859],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000, -49.7500, -28.0000, -37.7500, -38.7500, -32.7500, -23.0000, -37.2500, -31.5000, -37.5000, -31.1250, -40.0000, -50.5000, -33.2500, -41.0000],
        [  0.0000, -27.7500, -16.0000, -21.3750, -21.2500, -18.2500, -13.2500, -20.5000, -17.3750, -20.8750, -17.3750, -22.5000, -27.8750, -18.2500, -22.8750],
        [  0.0000, -39.2500, -22.3750, -30.1250, -30.1250, -25.6250, -18.1250, -29.2500, -24.3750, -29.7500, -24.3750, -31.8750, -39.7500, -25.7500, -32.7500],
        [  0.0000, -40.2500, -22.6250, -30.5000, -31.8750, -26.7500, -18.6250, -30.5000, -25.6250, -30.3750, -25.3750, -32.5000, -41.0000, -27.1250, -33.5000],
        [  0.0000, -32.2500, -17.8750, -24.2500, -25.2500, -21.8750, -15.1250, -23.6250, -21.0000, -24.0000, -20.6250, -25.5000, -32.5000, -22.1250, -26.1250],
        [  0.0000, -25.2500, -14.2500, -19.1250, -19.7500, -17.1250, -12.4375, -18.0000, -16.6250, -18.3750, -16.2500, -20.0000, -25.1250, -17.5000, -20.6250],
        [  0.0000, -26.7500, -15.1875, -20.5000, -20.8750, -16.8750, -12.1250, -20.8750, -16.5000, -20.6250, -16.3750, -21.7500, -27.3750, -17.2500, -22.5000],
        [  0.0000, -31.6250, -17.3750, -23.7500, -25.3750, -21.3750, -14.8750, -23.5000, -20.8750, -23.2500, -20.3750, -25.0000, -32.0000, -22.0000, -26.0000],
        [  0.0000, -32.2500, -18.3750, -24.7500, -24.8750, -20.7500, -14.7500, -24.5000, -19.8750, -24.8750, -19.8750, -26.3750, -33.0000, -21.0000, -26.7500],
        [  0.0000, -30.8750, -17.2500, -23.3750, -24.0000, -20.7500, -14.5625, -22.6250, -20.0000, -22.7500, -19.8750, -24.5000, -31.0000, -21.1250, -25.2500],
        [  0.0000, -41.0000, -23.3750, -31.5000, -31.5000, -26.6250, -19.0000, -30.7500, -25.3750, -31.1250, -25.2500, -33.5000, -41.5000, -26.7500, -34.0000],
        [  0.0000, -44.2500, -24.7500, -33.7500, -34.5000, -28.6250, -20.0000, -33.7500, -27.6250, -33.7500, -27.3750, -35.7500, -45.2500, -29.1250, -36.7500],
        [  0.0000, -33.7500, -18.6250, -25.3750, -27.0000, -22.7500, -15.7500, -25.1250, -22.1250, -24.8750, -21.7500, -26.7500, -34.2500, -23.3750, -27.7500],
        [  0.0000, -42.7500, -24.1250, -32.7500, -32.7500, -27.6250, -19.3750, -32.0000, -26.2500, -32.2500, -26.6250, -34.5000, -43.2500, -27.7500, -36.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [1.0000],
        [0.9980],
        [1.0000],
        [1.0000],
        [1.0000],
        [0.9507],
        [0.9971],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8867,     0.1143,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5469,     0.2305,     0.2236,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4863,     0.1895,     0.2383,     0.0859,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2695,     0.3320,     0.1079,     0.1572,     0.1348,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7461,     0.0649,     0.0952,     0.0280,     0.0312,     0.0359,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9062,     0.0061,     0.0654,     0.0028,     0.0008,     0.0030,     0.0153,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3555,     0.1069,     0.0776,     0.0347,     0.0374,     0.0356,     0.0894,     0.2617,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2969,     0.1128,     0.0645,     0.0442,     0.0515,     0.0708,     0.1001,     0.2188,     0.0398,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4863,     0.0603,     0.0223,     0.0085,     0.0134,     0.0071,     0.0261,     0.3105,     0.0064,     0.0583,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5547,     0.0549,     0.0811,     0.0203,     0.0108,     0.0305,     0.0708,     0.1250,     0.0045,     0.0422,     0.0038,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3496,     0.0845,     0.0591,     0.0221,     0.0269,     0.0160,     0.0515,     0.2598,     0.0114,     0.0703,     0.0082,     0.0420,     0.0000,     0.0000,     0.0000],
        [    0.3613,     0.0645,     0.0255,     0.0125,     0.0145,     0.0137,     0.0369,     0.2471,     0.0090,     0.0566,     0.0063,     0.0193,     0.1328,     0.0000,     0.0000],
        [    0.2207,     0.0796,     0.0452,     0.0311,     0.0347,     0.0500,     0.0698,     0.1592,     0.0275,     0.0747,     0.0247,     0.0342,     0.1211,     0.0277,     0.0000],
        [    0.1611,     0.0796,     0.1260,     0.0537,     0.0306,     0.0469,     0.1133,     0.0615,     0.0149,     0.0315,     0.0194,     0.0566,     0.0396,     0.0146,     0.1504]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0139,  0.0182,  0.0071,  ..., -0.0278,  0.0010, -0.0474],
        [-0.0217, -0.0150, -0.0160,  ..., -0.0066,  0.0168,  0.0010],
        [-0.0302, -0.0104,  0.0389,  ..., -0.0240, -0.0231, -0.0278],
        ...,
        [ 0.0033, -0.0277, -0.0078,  ..., -0.0223, -0.0140, -0.0396],
        [-0.0195, -0.0378, -0.0201,  ..., -0.0155, -0.0056,  0.0163],
        [-0.0209,  0.0206,  0.0250,  ..., -0.0253, -0.0215, -0.0098]], device='cuda:0', requires_grad=True)
K: tensor([-1.3828, -0.8281, -0.4023, -0.9453, -0.5430, -0.3828, -0.5234,  0.5273, -0.4473,  0.3203,  1.2031,  0.5547,  0.9844, -1.4141,  1.8828, -0.3730, -0.5625,  0.6680, -0.8398,  0.9570, -1.5078, -0.7617, -0.7422,  0.0154, -0.1138,  0.1953,  0.7148,  0.8320, -2.2812,  0.8320, -0.7969, -1.4453,
        -1.9219,  0.8633,  0.3516,  0.7461,  1.5156, -0.7930, -1.5469,  0.7305, -1.7969,  1.3281, -0.1484,  1.1016,  0.8164, -0.1621, -1.1016, -0.9102,  1.0625,  1.5469,  0.0554, -2.0781, -0.7773, -0.6172, -0.7344,  0.4512,  1.6016, -1.1094, -0.1040,  0.3359, -0.3730,  0.4023,  0.6562, -0.3125],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0122,  0.0020,  0.0153,  ...,  0.0285, -0.0138, -0.0207],
        [ 0.0276, -0.0260,  0.0192,  ..., -0.0155, -0.0028,  0.0281],
        [-0.0212,  0.0112,  0.0453,  ...,  0.0223,  0.0263, -0.0064],
        ...,
        [ 0.0119, -0.0004, -0.0365,  ..., -0.0117, -0.0100, -0.0030],
        [ 0.0023,  0.0287, -0.0162,  ...,  0.0240,  0.0070, -0.0268],
        [-0.0096,  0.0040, -0.0066,  ...,  0.0064,  0.0054, -0.0071]], device='cuda:0', requires_grad=True)
Q: tensor([-0.2715, -1.0625,  0.4023,  0.0981,  0.5820, -0.1826,  0.6289, -1.0781, -1.1094, -0.2871, -0.0801, -0.1553, -0.2207, -0.0559,  0.0430, -1.2578, -0.9102,  0.2637,  0.5781,  0.2832,  0.0107,  0.8867,  0.1328, -0.2451, -0.1226,  0.1699, -0.2773, -0.0071, -1.3594, -0.3047,  0.5312,  0.6875,
        -0.6445,  1.0938, -1.3203,  0.8281,  0.5078,  0.3594, -0.0962, -0.5664, -0.2109, -1.1094, -0.6602, -0.4238,  0.4785, -0.6797,  1.0859, -1.0703, -0.5820, -0.2227, -0.4785,  0.0732,  0.3496,  0.1533,  1.1562,  0.2539, -0.9453, -0.1226,  0.7930,  0.0771,  0.4434,  0.6484, -0.0513, -0.8984],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000,  -2.0469,  -1.9688,  -3.3750,  -3.1406,  -3.1719,  -2.2812,  -0.3320,  -4.2188,  -1.9219,  -4.8438,  -2.7656,  -1.2109,  -4.2500,  -1.4141],
        [  0.0000,  -0.8594,  -0.8945,  -1.7344,  -1.8438,  -2.0781,  -1.2344,   0.0306,  -2.4844,  -0.9648,  -2.7500,  -1.2578,  -0.6055,  -2.5469,  -0.2637],
        [  0.0000,  -0.9414,  -0.7109,  -1.7344,  -2.0312,  -1.9688,  -1.0234,  -0.6445,  -2.8906,  -1.6406,  -2.9844,  -1.4297,  -1.2734,  -2.9219,  -0.3145],
        [  0.0000,   0.2090,  -0.9141,  -0.5391,  -0.6875,  -0.2100,   0.1836,  -0.2695,  -0.2598,  -0.2930,   0.2021,  -0.7383,  -0.1045,  -0.2412,  -0.1953],
        [  0.0000,  -2.4375,  -2.0625,  -3.2812,  -3.1719,  -3.0312,  -2.4688,  -0.4746,  -4.0625,  -1.5391,  -4.9688,  -2.5156,  -1.1797,  -4.0938,  -1.6562],
        [  0.0000,  -5.0000,  -2.6250,  -5.7812,  -7.0000,  -5.7188,  -4.0938,  -2.6875,  -8.9375,  -3.8281, -10.5000,  -4.0000,  -3.9531,  -9.0625,  -3.3906],
        [  0.0000,  -1.2031,  -1.5156,  -2.3281,  -2.2500,  -2.2969,  -1.3828,  -0.3027,  -2.9375,  -1.3828,  -2.9531,  -2.0000,  -0.9648,  -2.9688,  -0.9805],
        [  0.0000,  -0.9688,  -1.5312,  -1.9062,  -1.7500,  -1.4297,  -1.0859,  -0.3047,  -2.0156,  -1.0547,  -2.0781,  -1.8281,  -0.5781,  -2.0000,  -0.8555],
        [  0.0000,  -2.0938,  -3.0781,  -4.0312,  -3.5938,  -4.2188,  -2.9219,  -0.4473,  -4.3125,  -2.1250,  -4.8438,  -3.1875,  -1.1797,  -4.3438,  -1.6328],
        [  0.0000,  -2.3125,  -1.9219,  -3.3125,  -3.9375,  -2.9062,  -2.0625,  -1.4922,  -4.8125,  -2.5781,  -5.0000,  -2.7812,  -2.2344,  -4.8438,  -1.3438],
        [  0.0000,  -1.4219,  -1.7734,  -2.7656,  -2.5625,  -3.0781,  -1.9141,  -0.2988,  -3.4219,  -1.6016,  -3.7500,  -2.1250,  -0.9453,  -3.4688,  -0.8516],
        [  0.0000,  -1.7266,  -2.6562,  -3.3594,  -3.2188,  -3.2656,  -2.2812,  -0.3828,  -3.6875,  -1.8594,  -4.0625,  -2.9375,  -1.0000,  -3.7031,  -1.4688],
        [  0.0000,  -1.0156,  -1.5859,  -1.9609,  -1.8516,  -1.4844,  -1.1484,  -0.3242,  -2.0781,  -1.0859,  -2.1875,  -1.8672,  -0.5977,  -2.0781,  -0.8828],
        [  0.0000,  -0.7031,  -0.2402,  -1.0938,  -1.6562,  -1.2344,  -0.3496,  -0.9570,  -2.3750,  -1.6328,  -2.1094,  -1.0469,  -1.3984,  -2.3906,  -0.0649]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4445],
        [0.1990],
        [0.2133],
        [0.3483],
        [0.3059],
        [0.3600],
        [0.2074],
        [0.2293],
        [0.1316],
        [0.1734],
        [0.0696],
        [0.1540],
        [0.1687],
        [0.0945]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8984,     0.1006,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9844,     0.0002,     0.0137,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1260,     0.0123,     0.0708,     0.7891,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.3633,     0.0014,     0.0010,     0.6328,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0615,     0.0094,     0.0026,     0.0491,     0.8789,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.0623,     0.4746,     0.2715,     0.0090,     0.0237,     0.1582,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0297,     0.0302,     0.0026,     0.0703,     0.3281,     0.0471,     0.4922,     0.0004,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     1.0000,     0.0010,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0042,     0.0001,     0.0002,     0.0045,     0.0008,     0.0001,     0.9883,     0.0000,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0002,     0.0000,     0.2480,     0.0018,     0.7500,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0005,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.0073,     0.0004,     0.0042,     0.0659,     0.0344,     0.0033,     0.0079,     0.7227,     0.0115,     0.1235,     0.0028,     0.0172,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.1982,     0.0001,     0.5508,     0.0000,     0.0000,     0.2490,     0.0002,     0.0000],
        [    0.0088,     0.0001,     0.0006,     0.0070,     0.0000,     0.0000,     0.9102,     0.0000,     0.0000,     0.0000,     0.0013,     0.0000,     0.0000,     0.0000,     0.0737]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0306, -0.0289, -0.0040,  ..., -0.0003,  0.0161, -0.0257],
        [ 0.0049, -0.0386, -0.0008,  ..., -0.0022,  0.0246, -0.0101],
        [-0.0266,  0.0159, -0.0281,  ..., -0.0059, -0.0211,  0.0006],
        ...,
        [ 0.0345, -0.0045, -0.0361,  ...,  0.0007, -0.0177,  0.0209],
        [-0.0117,  0.0126,  0.0104,  ...,  0.0381, -0.0227,  0.0106],
        [-0.0416,  0.0114, -0.0347,  ...,  0.0023,  0.0193,  0.0285]], device='cuda:0', requires_grad=True)
K: tensor([-1.7344,  0.6055, -2.7344,  2.2188, -0.9258,  0.8672,  0.9883,  1.2891,  0.3945, -2.5312, -1.9141, -0.7734, -0.9648, -1.5859, -0.3145,  2.4375,  2.5625,  3.0781, -3.0312, -1.5000,  1.6406,  0.2168, -4.3125,  3.2031,  1.8672,  1.5859, -0.9531,  1.8594, -1.6250, -1.9297, -0.2520,  1.8281,
        -1.1406,  2.8438,  2.8125, -0.9375,  2.0312, -3.0938, -0.7305,  1.1406, -0.1602, -1.1328, -1.8125,  0.2461,  0.0791, -1.8047,  0.9414,  0.6406,  1.2734, -0.0439,  0.6523,  1.8047, -0.9766, -2.4375, -0.8203, -0.8438,  1.6875, -2.3438, -0.4824, -0.2891, -0.0991, -0.8438,  1.8516, -3.7188],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0042, -0.0177, -0.0045,  ..., -0.0199, -0.0162, -0.0021],
        [ 0.0100, -0.0091, -0.0016,  ...,  0.0178, -0.0258,  0.0313],
        [ 0.0130, -0.0157,  0.0033,  ...,  0.0015, -0.0310, -0.0106],
        ...,
        [ 0.0109, -0.0304, -0.0078,  ...,  0.0304,  0.0196,  0.0052],
        [ 0.0010, -0.0064,  0.0119,  ...,  0.0045,  0.0206, -0.0017],
        [-0.0047, -0.0167,  0.0023,  ...,  0.0263, -0.0030, -0.0373]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.9805,  0.7852, -0.8203,  0.5117, -1.1719, -1.3203, -1.5469, -1.6641, -1.1328, -1.0156, -0.3828, -0.8984,  0.4355, -1.1875, -0.1211, -0.7773,  0.3418,  0.8594, -0.9453,  0.8242,  1.6797, -1.3047,  1.0000, -1.0859, -0.2812, -0.7461, -1.1797,  1.7266, -2.2500,  1.3984, -1.4453,  0.3301,
        -0.7656,  1.3047, -1.4453, -1.8750,  0.6719, -0.6484,  2.0781, -1.2812, -0.7695,  1.7188, -0.8203,  2.4375, -0.6758,  0.6289, -0.2207,  0.9062,  0.0312, -1.6562, -1.7891,  2.3125, -0.4805, -0.3730,  0.1357, -1.0781, -0.5195, -0.6719,  0.9609, -0.3945,  0.4316,  0.5859, -0.4434, -1.2500],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -2.1875,     -1.4219,      0.7461,     -1.1484,     -2.3594,      5.1250,     -9.1875,     -1.6641,     -9.6250,      1.0156,     -5.3125,     -8.7500,     -1.7734,      2.7656],
        [     0.0000,     -8.6250,     -4.2812,     -1.5547,     -9.0625,    -11.5625,      7.9062,    -24.7500,    -13.5625,    -25.7500,     -4.8750,    -14.6250,    -24.0000,    -13.6875,      2.5312],
        [     0.0000,     -2.3281,     -0.5781,      1.8359,     -3.2500,     -4.4688,      6.5938,    -11.0000,     -4.6875,    -11.3750,      0.7852,     -5.4062,    -10.5000,     -4.8125,      4.5625],
        [     0.0000,      7.6250,      2.0781,      1.7344,      8.1875,     10.3125,     -1.8672,     17.6250,     12.0000,     18.5000,      7.3125,      9.3750,     18.0000,     12.1250,     -0.4473],
        [     0.0000,      9.1875,      7.2812,      6.0000,      8.9375,     11.8125,      3.8438,     17.7500,     12.8125,     18.7500,      9.3750,     12.9375,     18.3750,     13.1250,      4.4062],
        [     0.0000,      6.6250,      8.6875,      8.1250,      4.6875,      5.6562,      7.5625,      9.9375,      5.8438,     10.8750,      7.4375,     10.8125,     10.0000,      5.9062,      8.6250],
        [     0.0000,      0.0177,     -2.4219,      0.8594,      2.4062,      0.4629,      2.8125,     -4.3438,      2.8438,     -4.6875,      3.1875,     -3.5312,     -3.6406,      2.6719,      2.1875],
        [     0.0000,      9.2500,      3.1562,      2.5469,      9.2500,     12.1250,     -2.1250,     21.2500,     14.3125,     22.0000,      8.5000,     11.8125,     21.3750,     14.3125,     -0.0157],
        [     0.0000,     -3.4531,     -3.1406,      0.0623,     -1.6172,     -3.4219,      5.4688,    -12.5625,     -2.5469,    -12.6875,      0.6641,     -7.8125,    -11.7500,     -2.5625,      2.6562],
        [     0.0000,      9.6875,      7.7188,      7.5625,      9.3125,     10.7500,      4.1562,     18.0000,     13.1250,     19.1250,     10.5625,     13.8750,     18.2500,     13.2500,      6.6875],
        [     0.0000,    -11.5000,     -7.5625,     -3.2656,    -10.6250,    -14.3750,      7.5312,    -31.1250,    -15.5625,    -32.2500,     -6.3125,    -19.5000,    -30.2500,    -15.7500,      1.7266],
        [     0.0000,      4.2188,      1.3672,      3.6875,      6.4375,      5.7812,      3.4531,      4.3125,      8.8125,      4.6875,      7.0625,      3.2656,      5.0938,      8.8750,      4.3438],
        [     0.0000,      9.8125,      3.7188,      2.9688,      9.7500,     12.8750,     -1.7266,     22.2500,     14.9375,     23.2500,      9.0625,     12.7500,     22.5000,     15.0625,      0.3594],
        [     0.0000,     -4.3125,     -2.7188,     -0.2354,     -5.9375,     -7.2500,      4.6250,    -13.4375,     -7.9062,    -13.8750,     -1.9453,     -7.9688,    -13.1875,     -8.1875,      2.1250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4871],
        [0.2741],
        [0.1030],
        [0.1501],
        [0.0999],
        [0.0326],
        [0.0415],
        [0.0490],
        [0.0215],
        [0.0178],
        [0.0181],
        [0.0395],
        [0.0300],
        [0.0393]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.2119 the:0.0688,:0.1807 and:0.1226,:0.0918,:0.2451 a:0.0481
:0.0391)


------
		( the:0.0688,:0.1807 and:0.1226,:0.0918,:0.2451 a:0.0481
:0.0391The:0.0645)
The most common in the most common in the most of the most of the
@ 2550 train 5.7508 , allloss: 5.7659, dt: 1683.86ms, fracRes: 0.5975, norm(attn): 0.1016, norm(output): 0.3340, norm(x): 1.1950, norm(y): 1.0059, norm:1.2753, tok/sec: 77840.31, flops:68.16, batch-reuse:1
@ 2551 train 6.6806 , allloss: 6.6995, dt: 1259.69ms, fracRes: 0.6058, norm(attn): 0.0942, norm(output): 0.3223, norm(x): 1.2056, norm(y): 1.0059, norm:2.0455, tok/sec: 104050.60, flops:91.12, batch-reuse:1
@ 2552 train 5.8078 , allloss: 5.8243, dt: 1279.46ms, fracRes: 0.5988, norm(attn): 0.1001, norm(output): 0.3340, norm(x): 1.1971, norm(y): 1.0059, norm:3.0985, tok/sec: 102443.03, flops:89.71, batch-reuse:1
@ 2553 train 5.8122 , allloss: 5.8283, dt: 1306.74ms, fracRes: 0.5974, norm(attn): 0.1011, norm(output): 0.3359, norm(x): 1.1892, norm(y): 1.0059, norm:1.7834, tok/sec: 100304.37, flops:87.84, batch-reuse:1
@ 2554 train 5.7326 , allloss: 5.7474, dt: 1314.85ms, fracRes: 0.5955, norm(attn): 0.1016, norm(output): 0.3379, norm(x): 1.1860, norm(y): 1.0059, norm:1.8870, tok/sec: 99685.94, flops:87.29, batch-reuse:1
@ 2555 train 5.6599 , allloss: 5.6747, dt: 1335.25ms, fracRes: 0.5959, norm(attn): 0.1040, norm(output): 0.3340, norm(x): 1.1849, norm(y): 1.0059, norm:1.6734, tok/sec: 98163.11, flops:85.96, batch-reuse:1
@ 2556 train 5.7347 , allloss: 5.7508, dt: 1290.01ms, fracRes: 0.5992, norm(attn): 0.1025, norm(output): 0.3340, norm(x): 1.1882, norm(y): 1.0059, norm:1.1888, tok/sec: 101605.10, flops:88.97, batch-reuse:1
@ 2557 train 5.7190 , allloss: 5.7349, dt: 1280.97ms, fracRes: 0.5982, norm(attn): 0.1025, norm(output): 0.3320, norm(x): 1.1927, norm(y): 1.0059, norm:1.4166, tok/sec: 102322.74, flops:89.60, batch-reuse:1
@ 2558 train 5.7155 , allloss: 5.7319, dt: 1289.81ms, fracRes: 0.5985, norm(attn): 0.1025, norm(output): 0.3320, norm(x): 1.1883, norm(y): 1.0059, norm:1.1914, tok/sec: 101620.84, flops:88.99, batch-reuse:1
@ 2559 train 5.7206 , allloss: 5.7369, dt: 1259.52ms, fracRes: 0.5993, norm(attn): 0.1016, norm(output): 0.3301, norm(x): 1.1859, norm(y): 1.0059, norm:1.0235, tok/sec: 104065.21, flops:91.13, batch-reuse:1
@ 2560 train 5.5948 , allloss: 5.6111, dt: 1267.02ms, fracRes: 0.5986, norm(attn): 0.1016, norm(output): 0.3320, norm(x): 1.1891, norm(y): 1.0059, norm:1.2310, tok/sec: 103449.27, flops:90.59, batch-reuse:1
@ 2561 train 5.5211 , allloss: 5.5365, dt: 1274.88ms, fracRes: 0.5965, norm(attn): 0.1021, norm(output): 0.3379, norm(x): 1.1843, norm(y): 1.0058, norm:1.3528, tok/sec: 102811.58, flops:90.03, batch-reuse:1
@ 2562 train 5.5504 , allloss: 5.5648, dt: 1271.81ms, fracRes: 0.5970, norm(attn): 0.1045, norm(output): 0.3340, norm(x): 1.1945, norm(y): 1.0059, norm:1.3865, tok/sec: 103059.59, flops:90.25, batch-reuse:1
@ 2563 train 5.4951 , allloss: 5.5104, dt: 1278.87ms, fracRes: 0.5966, norm(attn): 0.1035, norm(output): 0.3379, norm(x): 1.1947, norm(y): 1.0059, norm:1.3119, tok/sec: 102490.87, flops:89.75, batch-reuse:1
@ 2564 train 5.5677 , allloss: 5.5839, dt: 1256.84ms, fracRes: 0.5956, norm(attn): 0.1060, norm(output): 0.3379, norm(x): 1.1901, norm(y): 1.0060, norm:1.3536, tok/sec: 104287.26, flops:91.32, batch-reuse:1
@ 2565 train 5.7128 , allloss: 5.7292, dt: 1276.20ms, fracRes: 0.5944, norm(attn): 0.1074, norm(output): 0.3398, norm(x): 1.1871, norm(y): 1.0059, norm:1.7006, tok/sec: 102704.98, flops:89.94, batch-reuse:1
@ 2566 train 5.7023 , allloss: 5.7189, dt: 1282.43ms, fracRes: 0.5973, norm(attn): 0.1050, norm(output): 0.3340, norm(x): 1.1929, norm(y): 1.0060, norm:1.3718, tok/sec: 102206.09, flops:89.50, batch-reuse:1
@ 2567 train 5.7176 , allloss: 5.7338, dt: 1291.13ms, fracRes: 0.5990, norm(attn): 0.1021, norm(output): 0.3320, norm(x): 1.1963, norm(y): 1.0060, norm:1.1203, tok/sec: 101517.03, flops:88.90, batch-reuse:1
@ 2568 train 5.6866 , allloss: 5.7023, dt: 1284.90ms, fracRes: 0.5996, norm(attn): 0.1011, norm(output): 0.3320, norm(x): 1.1966, norm(y): 1.0060, norm:1.4827, tok/sec: 102009.10, flops:89.33, batch-reuse:1
@ 2569 train 5.7167 , allloss: 5.7319, dt: 1281.83ms, fracRes: 0.5993, norm(attn): 0.0977, norm(output): 0.3281, norm(x): 1.1973, norm(y): 1.0060, norm:1.1892, tok/sec: 102254.18, flops:89.54, batch-reuse:1
@ 2570 train 5.6762 , allloss: 5.6908, dt: 1304.13ms, fracRes: 0.6000, norm(attn): 0.1006, norm(output): 0.3301, norm(x): 1.2006, norm(y): 1.0061, norm:1.1627, tok/sec: 100505.04, flops:88.01, batch-reuse:1
@ 2571 train 5.6505 , allloss: 5.6657, dt: 1287.22ms, fracRes: 0.5990, norm(attn): 0.1006, norm(output): 0.3320, norm(x): 1.2045, norm(y): 1.0061, norm:1.1370, tok/sec: 101825.45, flops:89.17, batch-reuse:1
@ 2572 train 5.6940 , allloss: 5.7106, dt: 1288.03ms, fracRes: 0.5991, norm(attn): 0.1021, norm(output): 0.3340, norm(x): 1.2037, norm(y): 1.0060, norm:1.6315, tok/sec: 101761.39, flops:89.11, batch-reuse:1
@ 2573 train 5.6769 , allloss: 5.6928, dt: 1280.92ms, fracRes: 0.5969, norm(attn): 0.1064, norm(output): 0.3398, norm(x): 1.2039, norm(y): 1.0059, norm:1.2696, tok/sec: 102326.36, flops:89.61, batch-reuse:1
@ 2574 train 5.6453 , allloss: 5.6618, dt: 1291.05ms, fracRes: 0.5974, norm(attn): 0.1084, norm(output): 0.3398, norm(x): 1.2049, norm(y): 1.0060, norm:1.2866, tok/sec: 101523.42, flops:88.90, batch-reuse:1
@ 2575 train 5.6941 , allloss: 5.7099, dt: 1311.88ms, fracRes: 0.5983, norm(attn): 0.1064, norm(output): 0.3379, norm(x): 1.2031, norm(y): 1.0060, norm:0.9653, tok/sec: 99911.39, flops:87.49, batch-reuse:1
@ 2576 train 5.6045 , allloss: 5.6198, dt: 1276.55ms, fracRes: 0.5981, norm(attn): 0.1035, norm(output): 0.3340, norm(x): 1.2004, norm(y): 1.0060, norm:1.3132, tok/sec: 102676.70, flops:89.91, batch-reuse:1
@ 2577 train 5.6913 , allloss: 5.7070, dt: 1260.13ms, fracRes: 0.6001, norm(attn): 0.1011, norm(output): 0.3320, norm(x): 1.1979, norm(y): 1.0059, norm:1.0476, tok/sec: 104014.63, flops:91.08, batch-reuse:1
@ 2578 train 5.6026 , allloss: 5.6176, dt: 1291.04ms, fracRes: 0.5994, norm(attn): 0.1011, norm(output): 0.3281, norm(x): 1.1983, norm(y): 1.0061, norm:0.7677, tok/sec: 101524.43, flops:88.90, batch-reuse:1
@ 2579 train 5.6868 , allloss: 5.7020, dt: 1283.29ms, fracRes: 0.5985, norm(attn): 0.1016, norm(output): 0.3301, norm(x): 1.1987, norm(y): 1.0060, norm:1.8024, tok/sec: 102137.60, flops:89.44, batch-reuse:1
@ 2580 train 5.6116 , allloss: 5.6272, dt: 1275.78ms, fracRes: 0.5973, norm(attn): 0.1011, norm(output): 0.3320, norm(x): 1.1958, norm(y): 1.0060, norm:1.1862, tok/sec: 102739.10, flops:89.97, batch-reuse:1
@ 2581 train 5.6035 , allloss: 5.6195, dt: 1262.54ms, fracRes: 0.5970, norm(attn): 0.1025, norm(output): 0.3320, norm(x): 1.1956, norm(y): 1.0059, norm:0.9217, tok/sec: 103816.25, flops:90.91, batch-reuse:1
@ 2582 train 5.6260 , allloss: 5.6416, dt: 1254.70ms, fracRes: 0.5964, norm(attn): 0.1064, norm(output): 0.3340, norm(x): 1.1919, norm(y): 1.0060, norm:0.8948, tok/sec: 104464.88, flops:91.48, batch-reuse:1
@ 2583 train 5.5875 , allloss: 5.6024, dt: 1271.79ms, fracRes: 0.5976, norm(attn): 0.1050, norm(output): 0.3340, norm(x): 1.1949, norm(y): 1.0060, norm:0.8572, tok/sec: 103061.35, flops:90.25, batch-reuse:1
@ 2584 train 5.6053 , allloss: 5.6204, dt: 1266.12ms, fracRes: 0.5980, norm(attn): 0.1025, norm(output): 0.3320, norm(x): 1.1985, norm(y): 1.0060, norm:0.8851, tok/sec: 103522.30, flops:90.65, batch-reuse:1
@ 2585 train 5.6456 , allloss: 5.6604, dt: 1277.23ms, fracRes: 0.5984, norm(attn): 0.1016, norm(output): 0.3320, norm(x): 1.1996, norm(y): 1.0060, norm:0.8517, tok/sec: 102622.29, flops:89.86, batch-reuse:1
@ 2586 train 5.5778 , allloss: 5.5941, dt: 1248.55ms, fracRes: 0.5980, norm(attn): 0.1030, norm(output): 0.3340, norm(x): 1.1923, norm(y): 1.0060, norm:0.8635, tok/sec: 104979.76, flops:91.93, batch-reuse:1
@ 2587 train 5.6164 , allloss: 5.6320, dt: 1267.72ms, fracRes: 0.5981, norm(attn): 0.1016, norm(output): 0.3301, norm(x): 1.1921, norm(y): 1.0060, norm:1.0560, tok/sec: 103391.82, flops:90.54, batch-reuse:1
@ 2588 train 5.6065 , allloss: 5.6215, dt: 1282.13ms, fracRes: 0.5991, norm(attn): 0.1021, norm(output): 0.3320, norm(x): 1.1980, norm(y): 1.0061, norm:2.0729, tok/sec: 102230.11, flops:89.52, batch-reuse:1
@ 2589 train 5.6211 , allloss: 5.6365, dt: 1289.17ms, fracRes: 0.5989, norm(attn): 0.1011, norm(output): 0.3281, norm(x): 1.1955, norm(y): 1.0060, norm:1.4191, tok/sec: 101671.35, flops:89.03, batch-reuse:1
@ 2590 train 5.6369 , allloss: 5.6525, dt: 1316.82ms, fracRes: 0.5982, norm(attn): 0.1011, norm(output): 0.3242, norm(x): 1.1905, norm(y): 1.0060, norm:1.1781, tok/sec: 99537.02, flops:87.16, batch-reuse:1
@ 2591 train 5.6971 , allloss: 5.7121, dt: 1261.31ms, fracRes: 0.5976, norm(attn): 0.1016, norm(output): 0.3320, norm(x): 1.1875, norm(y): 1.0060, norm:1.6283, tok/sec: 103917.03, flops:91.00, batch-reuse:1
@ 2592 train 5.7005 , allloss: 5.7160, dt: 1270.21ms, fracRes: 0.5966, norm(attn): 0.1045, norm(output): 0.3320, norm(x): 1.1859, norm(y): 1.0060, norm:1.0839, tok/sec: 103188.90, flops:90.36, batch-reuse:1
@ 2593 train 5.7116 , allloss: 5.7286, dt: 1273.25ms, fracRes: 0.5972, norm(attn): 0.1040, norm(output): 0.3320, norm(x): 1.1878, norm(y): 1.0060, norm:1.7164, tok/sec: 102942.55, flops:90.15, batch-reuse:1
@ 2594 train 5.6034 , allloss: 5.6206, dt: 1270.00ms, fracRes: 0.5975, norm(attn): 0.1060, norm(output): 0.3340, norm(x): 1.1901, norm(y): 1.0060, norm:1.0452, tok/sec: 103206.15, flops:90.38, batch-reuse:1
@ 2595 train 5.6517 , allloss: 5.6669, dt: 1257.40ms, fracRes: 0.5982, norm(attn): 0.1064, norm(output): 0.3320, norm(x): 1.1911, norm(y): 1.0061, norm:2.2292, tok/sec: 104240.81, flops:91.28, batch-reuse:1
@ 2596 train 5.7583 , allloss: 5.7744, dt: 1288.23ms, fracRes: 0.6002, norm(attn): 0.1040, norm(output): 0.3320, norm(x): 1.1926, norm(y): 1.0060, norm:1.8164, tok/sec: 101745.85, flops:89.10, batch-reuse:1
@ 2597 train 5.6757 , allloss: 5.6910, dt: 1318.68ms, fracRes: 0.6010, norm(attn): 0.1016, norm(output): 0.3262, norm(x): 1.1968, norm(y): 1.0061, norm:1.5485, tok/sec: 99396.74, flops:87.04, batch-reuse:1
@ 2598 train 5.6061 , allloss: 5.6217, dt: 1316.19ms, fracRes: 0.6008, norm(attn): 0.1016, norm(output): 0.3281, norm(x): 1.2005, norm(y): 1.0061, norm:1.8042, tok/sec: 99584.14, flops:87.20, batch-reuse:1
@ 2599 train 5.6245 , allloss: 5.6408, dt: 1278.90ms, fracRes: 0.6015, norm(attn): 0.1025, norm(output): 0.3281, norm(x): 1.1970, norm(y): 1.0061, norm:1.2240, tok/sec: 102488.10, flops:89.75, batch-reuse:1
@ 2600 train 5.6047 , allloss: 5.6199, dt: 1252.52ms, fracRes: 0.5994, norm(attn): 0.1035, norm(output): 0.3301, norm(x): 1.1942, norm(y): 1.0061, norm:1.6242, tok/sec: 104646.63, flops:91.64, batch-reuse:1
@ 2601 train 5.7258 , allloss: 5.7410, dt: 1266.04ms, fracRes: 0.5977, norm(attn): 0.1040, norm(output): 0.3320, norm(x): 1.1870, norm(y): 1.0060, norm:1.3666, tok/sec: 103529.32, flops:90.66, batch-reuse:1
@ 2602 train 5.7360 , allloss: 5.7515, dt: 1273.82ms, fracRes: 0.5973, norm(attn): 0.1050, norm(output): 0.3320, norm(x): 1.1881, norm(y): 1.0060, norm:1.0074, tok/sec: 102896.84, flops:90.11, batch-reuse:1
@ 2603 train 5.8273 , allloss: 5.8426, dt: 1245.84ms, fracRes: 0.5982, norm(attn): 0.1045, norm(output): 0.3301, norm(x): 1.1927, norm(y): 1.0059, norm:1.3809, tok/sec: 105207.68, flops:92.13, batch-reuse:1
@ 2604 train 5.8067 , allloss: 5.8220, dt: 1288.60ms, fracRes: 0.5999, norm(attn): 0.1021, norm(output): 0.3320, norm(x): 1.1980, norm(y): 1.0060, norm:1.1936, tok/sec: 101716.65, flops:89.07, batch-reuse:1
@ 2605 train 5.7595 , allloss: 5.7752, dt: 1264.23ms, fracRes: 0.6006, norm(attn): 0.1016, norm(output): 0.3242, norm(x): 1.1936, norm(y): 1.0060, norm:1.1442, tok/sec: 103677.65, flops:90.79, batch-reuse:1
@ 2606 train 5.7997 , allloss: 5.8143, dt: 1279.47ms, fracRes: 0.5996, norm(attn): 0.1011, norm(output): 0.3242, norm(x): 1.1953, norm(y): 1.0060, norm:1.7148, tok/sec: 102442.13, flops:89.71, batch-reuse:1
@ 2607 train 5.7969 , allloss: 5.8131, dt: 1262.00ms, fracRes: 0.5997, norm(attn): 0.1025, norm(output): 0.3281, norm(x): 1.1865, norm(y): 1.0059, norm:1.2969, tok/sec: 103860.75, flops:90.95, batch-reuse:1
@ 2608 train 5.7452 , allloss: 5.7608, dt: 1266.16ms, fracRes: 0.5973, norm(attn): 0.1016, norm(output): 0.3301, norm(x): 1.1868, norm(y): 1.0059, norm:1.1987, tok/sec: 103519.05, flops:90.65, batch-reuse:1
@ 2609 train 5.8830 , allloss: 5.8996, dt: 1295.24ms, fracRes: 0.5973, norm(attn): 0.1030, norm(output): 0.3340, norm(x): 1.1877, norm(y): 1.0058, norm:1.3841, tok/sec: 101194.85, flops:88.61, batch-reuse:1
@ 2610 train 5.9446 , allloss: 5.9614, dt: 1305.15ms, fracRes: 0.5993, norm(attn): 0.1030, norm(output): 0.3262, norm(x): 1.1880, norm(y): 1.0059, norm:1.3593, tok/sec: 100426.55, flops:87.94, batch-reuse:1
@ 2611 train 5.8099 , allloss: 5.8259, dt: 1306.78ms, fracRes: 0.5993, norm(attn): 0.1035, norm(output): 0.3281, norm(x): 1.1931, norm(y): 1.0060, norm:1.3978, tok/sec: 100301.70, flops:87.83, batch-reuse:1
@ 2612 train 5.7968 , allloss: 5.8118, dt: 1264.99ms, fracRes: 0.5978, norm(attn): 0.1040, norm(output): 0.3301, norm(x): 1.1887, norm(y): 1.0060, norm:1.3396, tok/sec: 103615.12, flops:90.73, batch-reuse:1
@ 2613 train 5.7307 , allloss: 5.7464, dt: 1304.86ms, fracRes: 0.5965, norm(attn): 0.1060, norm(output): 0.3301, norm(x): 1.1817, norm(y): 1.0060, norm:1.1572, tok/sec: 100449.38, flops:87.96, batch-reuse:1
@ 2614 train 5.7770 , allloss: 5.7929, dt: 1297.32ms, fracRes: 0.5968, norm(attn): 0.1040, norm(output): 0.3320, norm(x): 1.1839, norm(y): 1.0060, norm:0.9223, tok/sec: 101033.20, flops:88.47, batch-reuse:1
@ 2615 train 5.8255 , allloss: 5.8418, dt: 1250.09ms, fracRes: 0.5977, norm(attn): 0.1030, norm(output): 0.3301, norm(x): 1.1856, norm(y): 1.0060, norm:1.1275, tok/sec: 104850.22, flops:91.82, batch-reuse:1
@ 2616 train 5.7959 , allloss: 5.8113, dt: 1257.67ms, fracRes: 0.5996, norm(attn): 0.1025, norm(output): 0.3320, norm(x): 1.1951, norm(y): 1.0060, norm:0.8926, tok/sec: 104217.81, flops:91.26, batch-reuse:1
@ 2617 train 5.7367 , allloss: 5.7521, dt: 1246.35ms, fracRes: 0.6000, norm(attn): 0.1045, norm(output): 0.3301, norm(x): 1.1951, norm(y): 1.0061, norm:1.1025, tok/sec: 105164.58, flops:92.09, batch-reuse:1
@ 2618 train 5.7265 , allloss: 5.7431, dt: 1256.52ms, fracRes: 0.5992, norm(attn): 0.1055, norm(output): 0.3320, norm(x): 1.1871, norm(y): 1.0060, norm:0.9508, tok/sec: 104313.40, flops:91.35, batch-reuse:1
@ 2619 train 5.7740 , allloss: 5.7896, dt: 1256.07ms, fracRes: 0.5984, norm(attn): 0.1055, norm(output): 0.3281, norm(x): 1.1847, norm(y): 1.0060, norm:0.9408, tok/sec: 104350.98, flops:91.38, batch-reuse:1
@ 2620 train 5.8196 , allloss: 5.8356, dt: 1263.40ms, fracRes: 0.5979, norm(attn): 0.1060, norm(output): 0.3320, norm(x): 1.1839, norm(y): 1.0060, norm:1.0312, tok/sec: 103745.29, flops:90.85, batch-reuse:1
@ 2621 train 5.8044 , allloss: 5.8212, dt: 1257.79ms, fracRes: 0.5977, norm(attn): 0.1060, norm(output): 0.3281, norm(x): 1.1814, norm(y): 1.0060, norm:1.2855, tok/sec: 104207.81, flops:91.25, batch-reuse:1
@ 2622 train 5.7898 , allloss: 5.8062, dt: 1277.61ms, fracRes: 0.5973, norm(attn): 0.1055, norm(output): 0.3262, norm(x): 1.1794, norm(y): 1.0060, norm:1.2857, tok/sec: 102591.32, flops:89.84, batch-reuse:1
@ 2623 train 5.8025 , allloss: 5.8180, dt: 1307.46ms, fracRes: 0.5987, norm(attn): 0.1030, norm(output): 0.3281, norm(x): 1.1859, norm(y): 1.0060, norm:1.0893, tok/sec: 100249.44, flops:87.79, batch-reuse:1
@ 2624 train 5.8410 , allloss: 5.8568, dt: 1259.75ms, fracRes: 0.6002, norm(attn): 0.1016, norm(output): 0.3242, norm(x): 1.1865, norm(y): 1.0060, norm:1.0620, tok/sec: 104045.68, flops:91.11, batch-reuse:1
@ 2625 train 5.7768 , allloss: 5.7923, dt: 1260.46ms, fracRes: 0.5984, norm(attn): 0.1030, norm(output): 0.3242, norm(x): 1.1822, norm(y): 1.0059, norm:1.1302, tok/sec: 103987.40, flops:91.06, batch-reuse:1
@ 2626 train 5.7469 , allloss: 5.7624, dt: 1271.69ms, fracRes: 0.5985, norm(attn): 0.1025, norm(output): 0.3242, norm(x): 1.1820, norm(y): 1.0060, norm:1.0315, tok/sec: 103069.06, flops:90.26, batch-reuse:1
@ 2627 train 5.7636 , allloss: 5.7794, dt: 1283.47ms, fracRes: 0.5978, norm(attn): 0.1035, norm(output): 0.3262, norm(x): 1.1803, norm(y): 1.0060, norm:0.9156, tok/sec: 102123.04, flops:89.43, batch-reuse:1
@ 2628 train 5.7514 , allloss: 5.7679, dt: 1319.12ms, fracRes: 0.5980, norm(attn): 0.1045, norm(output): 0.3262, norm(x): 1.1779, norm(y): 1.0060, norm:1.2976, tok/sec: 99363.11, flops:87.01, batch-reuse:1
@ 2629 train 5.6989 , allloss: 5.7152, dt: 1268.40ms, fracRes: 0.5963, norm(attn): 0.1064, norm(output): 0.3301, norm(x): 1.1769, norm(y): 1.0060, norm:1.3435, tok/sec: 103336.14, flops:90.49, batch-reuse:1
@ 2630 train 5.7951 , allloss: 5.8103, dt: 1261.52ms, fracRes: 0.5982, norm(attn): 0.1055, norm(output): 0.3301, norm(x): 1.1802, norm(y): 1.0060, norm:1.6577, tok/sec: 103900.22, flops:90.98, batch-reuse:1
@ 2631 train 5.7247 , allloss: 5.7398, dt: 1281.60ms, fracRes: 0.5979, norm(attn): 0.1064, norm(output): 0.3242, norm(x): 1.1795, norm(y): 1.0061, norm:1.2879, tok/sec: 102271.99, flops:89.56, batch-reuse:1
@ 2632 train 5.7485 , allloss: 5.7645, dt: 1288.01ms, fracRes: 0.6000, norm(attn): 0.1030, norm(output): 0.3262, norm(x): 1.1823, norm(y): 1.0060, norm:1.3085, tok/sec: 101762.91, flops:89.11, batch-reuse:1
@ 2633 train 5.7432 , allloss: 5.7585, dt: 1282.89ms, fracRes: 0.5999, norm(attn): 0.1016, norm(output): 0.3242, norm(x): 1.1835, norm(y): 1.0060, norm:1.1831, tok/sec: 102169.11, flops:89.47, batch-reuse:1
@ 2634 train 5.7284 , allloss: 5.7439, dt: 1287.36ms, fracRes: 0.5998, norm(attn): 0.1021, norm(output): 0.3242, norm(x): 1.1791, norm(y): 1.0061, norm:1.2405, tok/sec: 101814.76, flops:89.16, batch-reuse:1
@ 2635 train 5.7268 , allloss: 5.7426, dt: 1287.80ms, fracRes: 0.5993, norm(attn): 0.1025, norm(output): 0.3242, norm(x): 1.1751, norm(y): 1.0061, norm:0.8891, tok/sec: 101779.49, flops:89.13, batch-reuse:1
@ 2636 train 5.7534 , allloss: 5.7684, dt: 1271.63ms, fracRes: 0.5991, norm(attn): 0.1016, norm(output): 0.3242, norm(x): 1.1803, norm(y): 1.0060, norm:1.1823, tok/sec: 103073.62, flops:90.26, batch-reuse:1
@ 2637 train 5.7166 , allloss: 5.7321, dt: 1292.37ms, fracRes: 0.5973, norm(attn): 0.1045, norm(output): 0.3242, norm(x): 1.1768, norm(y): 1.0060, norm:1.6081, tok/sec: 101419.49, flops:88.81, batch-reuse:1
@ 2638 train 5.7597 , allloss: 5.7749, dt: 1291.78ms, fracRes: 0.5965, norm(attn): 0.1064, norm(output): 0.3242, norm(x): 1.1712, norm(y): 1.0060, norm:0.9847, tok/sec: 101466.46, flops:88.85, batch-reuse:1
@ 2639 train 5.9232 , allloss: 5.9393, dt: 1273.02ms, fracRes: 0.5991, norm(attn): 0.1060, norm(output): 0.3281, norm(x): 1.1711, norm(y): 1.0060, norm:1.2804, tok/sec: 102961.59, flops:90.16, batch-reuse:1
@ 2640 train 5.7355 , allloss: 5.7521, dt: 1273.69ms, fracRes: 0.5977, norm(attn): 0.1069, norm(output): 0.3242, norm(x): 1.1738, norm(y): 1.0060, norm:1.2919, tok/sec: 102907.65, flops:90.11, batch-reuse:1
@ 2641 train 5.8047 , allloss: 5.8213, dt: 1269.52ms, fracRes: 0.5991, norm(attn): 0.1025, norm(output): 0.3242, norm(x): 1.1790, norm(y): 1.0060, norm:1.3879, tok/sec: 103245.18, flops:90.41, batch-reuse:1
@ 2642 train 5.7300 , allloss: 5.7458, dt: 1272.02ms, fracRes: 0.5984, norm(attn): 0.1045, norm(output): 0.3262, norm(x): 1.1802, norm(y): 1.0060, norm:1.0209, tok/sec: 103042.15, flops:90.23, batch-reuse:1
@ 2643 train 5.6946 , allloss: 5.7102, dt: 1262.50ms, fracRes: 0.5980, norm(attn): 0.1040, norm(output): 0.3223, norm(x): 1.1753, norm(y): 1.0061, norm:1.6231, tok/sec: 103819.81, flops:90.91, batch-reuse:1
@ 2644 train 5.7160 , allloss: 5.7311, dt: 1264.53ms, fracRes: 0.5973, norm(attn): 0.1030, norm(output): 0.3242, norm(x): 1.1714, norm(y): 1.0061, norm:1.4256, tok/sec: 103652.63, flops:90.77, batch-reuse:1
@ 2645 train 5.7900 , allloss: 5.8051, dt: 1262.39ms, fracRes: 0.6003, norm(attn): 0.1021, norm(output): 0.3242, norm(x): 1.1830, norm(y): 1.0060, norm:1.0655, tok/sec: 103828.46, flops:90.92, batch-reuse:1
@ 2646 train 5.7339 , allloss: 5.7501, dt: 1284.78ms, fracRes: 0.5980, norm(attn): 0.1055, norm(output): 0.3242, norm(x): 1.1764, norm(y): 1.0061, norm:1.2393, tok/sec: 102018.66, flops:89.34, batch-reuse:1
@ 2647 train 5.6863 , allloss: 5.7023, dt: 1296.09ms, fracRes: 0.5964, norm(attn): 0.1069, norm(output): 0.3242, norm(x): 1.1717, norm(y): 1.0061, norm:1.3578, tok/sec: 101129.01, flops:88.56, batch-reuse:1
@ 2648 train 5.6716 , allloss: 5.6880, dt: 1291.10ms, fracRes: 0.5966, norm(attn): 0.1069, norm(output): 0.3242, norm(x): 1.1687, norm(y): 1.0061, norm:1.8731, tok/sec: 101519.28, flops:88.90, batch-reuse:1
@ 2649 train 5.7577 , allloss: 5.7735, dt: 1286.81ms, fracRes: 0.5976, norm(attn): 0.1050, norm(output): 0.3223, norm(x): 1.1656, norm(y): 1.0061, norm:1.2767, tok/sec: 101857.96, flops:89.20, batch-reuse:1
@ 2650 train 5.6752 , allloss: 5.6901, dt: 1254.23ms, fracRes: 0.5985, norm(attn): 0.1030, norm(output): 0.3242, norm(x): 1.1706, norm(y): 1.0061, norm:1.2339, tok/sec: 104503.92, flops:91.51, batch-reuse:1
@ 2651 train 5.7165 , allloss: 5.7319, dt: 1282.06ms, fracRes: 0.5995, norm(attn): 0.1025, norm(output): 0.3203, norm(x): 1.1709, norm(y): 1.0061, norm:1.4756, tok/sec: 102235.51, flops:89.53, batch-reuse:1
@ 2652 train 5.6875 , allloss: 5.7031, dt: 1317.95ms, fracRes: 0.5987, norm(attn): 0.1030, norm(output): 0.3184, norm(x): 1.1695, norm(y): 1.0060, norm:1.5680, tok/sec: 99451.08, flops:87.09, batch-reuse:1
@ 2653 train 5.7009 , allloss: 5.7161, dt: 1319.91ms, fracRes: 0.5980, norm(attn): 0.1025, norm(output): 0.3223, norm(x): 1.1651, norm(y): 1.0060, norm:0.9558, tok/sec: 99304.08, flops:86.96, batch-reuse:1
@ 2654 train 5.6966 , allloss: 5.7119, dt: 1290.87ms, fracRes: 0.5974, norm(attn): 0.1035, norm(output): 0.3203, norm(x): 1.1636, norm(y): 1.0060, norm:1.4239, tok/sec: 101537.45, flops:88.91, batch-reuse:1
@ 2655 train 5.6990 , allloss: 5.7149, dt: 1269.29ms, fracRes: 0.5967, norm(attn): 0.1074, norm(output): 0.3223, norm(x): 1.1651, norm(y): 1.0060, norm:1.2798, tok/sec: 103263.82, flops:90.43, batch-reuse:1
@ 2656 train 5.7415 , allloss: 5.7572, dt: 1286.00ms, fracRes: 0.5981, norm(attn): 0.1040, norm(output): 0.3223, norm(x): 1.1733, norm(y): 1.0060, norm:1.2297, tok/sec: 101922.33, flops:89.25, batch-reuse:1
@ 2657 train 5.5904 , allloss: 5.6051, dt: 1291.02ms, fracRes: 0.5978, norm(attn): 0.1040, norm(output): 0.3223, norm(x): 1.1717, norm(y): 1.0061, norm:1.1910, tok/sec: 101525.99, flops:88.90, batch-reuse:1
@ 2658 train 5.7140 , allloss: 5.7295, dt: 1281.54ms, fracRes: 0.5986, norm(attn): 0.1045, norm(output): 0.3164, norm(x): 1.1655, norm(y): 1.0061, norm:1.5885, tok/sec: 102276.73, flops:89.56, batch-reuse:1
@ 2659 train 5.6509 , allloss: 5.6664, dt: 1283.14ms, fracRes: 0.5981, norm(attn): 0.1021, norm(output): 0.3164, norm(x): 1.1619, norm(y): 1.0061, norm:1.4315, tok/sec: 102149.25, flops:89.45, batch-reuse:1
@ 2660 train 5.7917 , allloss: 5.8075, dt: 1286.57ms, fracRes: 0.5990, norm(attn): 0.1035, norm(output): 0.3164, norm(x): 1.1589, norm(y): 1.0061, norm:1.3310, tok/sec: 101877.25, flops:89.21, batch-reuse:1
@ 2661 train 5.6895 , allloss: 5.7049, dt: 1280.65ms, fracRes: 0.5986, norm(attn): 0.1011, norm(output): 0.3164, norm(x): 1.1621, norm(y): 1.0061, norm:1.2289, tok/sec: 102347.63, flops:89.62, batch-reuse:1
@ 2662 train 5.6732 , allloss: 5.6890, dt: 1268.16ms, fracRes: 0.5997, norm(attn): 0.1030, norm(output): 0.3184, norm(x): 1.1656, norm(y): 1.0061, norm:1.5831, tok/sec: 103356.15, flops:90.51, batch-reuse:1
@ 2663 train 5.6948 , allloss: 5.7104, dt: 1275.88ms, fracRes: 0.5979, norm(attn): 0.1055, norm(output): 0.3203, norm(x): 1.1637, norm(y): 1.0061, norm:1.1084, tok/sec: 102730.91, flops:89.96, batch-reuse:1
@ 2664 train 5.7073 , allloss: 5.7231, dt: 1287.84ms, fracRes: 0.5976, norm(attn): 0.1064, norm(output): 0.3184, norm(x): 1.1608, norm(y): 1.0061, norm:1.4411, tok/sec: 101776.63, flops:89.12, batch-reuse:1
@ 2665 train 5.6674 , allloss: 5.6836, dt: 1305.14ms, fracRes: 0.5964, norm(attn): 0.1069, norm(output): 0.3203, norm(x): 1.1613, norm(y): 1.0061, norm:1.2525, tok/sec: 100427.23, flops:87.94, batch-reuse:1
@ 2666 train 5.7411 , allloss: 5.7583, dt: 1264.54ms, fracRes: 0.5970, norm(attn): 0.1055, norm(output): 0.3223, norm(x): 1.1637, norm(y): 1.0061, norm:1.3114, tok/sec: 103652.12, flops:90.77, batch-reuse:1
@ 2667 train 5.7213 , allloss: 5.7368, dt: 1300.52ms, fracRes: 0.5971, norm(attn): 0.1060, norm(output): 0.3223, norm(x): 1.1613, norm(y): 1.0060, norm:0.8941, tok/sec: 100784.29, flops:88.26, batch-reuse:1
@ 2668 train 5.7084 , allloss: 5.7236, dt: 1287.87ms, fracRes: 0.5976, norm(attn): 0.1040, norm(output): 0.3203, norm(x): 1.1630, norm(y): 1.0060, norm:1.2593, tok/sec: 101774.03, flops:89.12, batch-reuse:1
@ 2669 train 5.6513 , allloss: 5.6668, dt: 1297.21ms, fracRes: 0.5974, norm(attn): 0.1040, norm(output): 0.3203, norm(x): 1.1665, norm(y): 1.0060, norm:1.5359, tok/sec: 101041.11, flops:88.48, batch-reuse:1
@ 2670 train 5.6388 , allloss: 5.6550, dt: 1285.91ms, fracRes: 0.5980, norm(attn): 0.1045, norm(output): 0.3203, norm(x): 1.1669, norm(y): 1.0061, norm:1.0965, tok/sec: 101929.04, flops:89.26, batch-reuse:1
@ 2671 train 5.6719 , allloss: 5.6877, dt: 1274.18ms, fracRes: 0.5993, norm(attn): 0.1050, norm(output): 0.3164, norm(x): 1.1687, norm(y): 1.0062, norm:1.0170, tok/sec: 102867.71, flops:90.08, batch-reuse:1
@ 2672 train 5.6280 , allloss: 5.6439, dt: 1280.02ms, fracRes: 0.5973, norm(attn): 0.1064, norm(output): 0.3184, norm(x): 1.1636, norm(y): 1.0061, norm:1.2308, tok/sec: 102398.27, flops:89.67, batch-reuse:1
@ 2673 train 5.5722 , allloss: 5.5889, dt: 1275.67ms, fracRes: 0.5955, norm(attn): 0.1084, norm(output): 0.3223, norm(x): 1.1607, norm(y): 1.0061, norm:1.2010, tok/sec: 102747.97, flops:89.97, batch-reuse:1
@ 2674 train 5.7562 , allloss: 5.7726, dt: 1300.34ms, fracRes: 0.5982, norm(attn): 0.1050, norm(output): 0.3203, norm(x): 1.1663, norm(y): 1.0060, norm:1.4269, tok/sec: 100798.13, flops:88.27, batch-reuse:1
@ 2675 train 5.7091 , allloss: 5.7261, dt: 1284.13ms, fracRes: 0.5968, norm(attn): 0.1074, norm(output): 0.3203, norm(x): 1.1623, norm(y): 1.0061, norm:1.2116, tok/sec: 102071.05, flops:89.38, batch-reuse:1
@ 2676 train 5.6294 , allloss: 5.6448, dt: 1273.18ms, fracRes: 0.5982, norm(attn): 0.1050, norm(output): 0.3203, norm(x): 1.1656, norm(y): 1.0062, norm:1.3601, tok/sec: 102948.93, flops:90.15, batch-reuse:1
@ 2677 train 5.6601 , allloss: 5.6757, dt: 1282.77ms, fracRes: 0.5993, norm(attn): 0.1030, norm(output): 0.3184, norm(x): 1.1676, norm(y): 1.0062, norm:1.8572, tok/sec: 102179.09, flops:89.48, batch-reuse:1
@ 2678 train 5.7296 , allloss: 5.7457, dt: 1274.75ms, fracRes: 0.6002, norm(attn): 0.1006, norm(output): 0.3184, norm(x): 1.1717, norm(y): 1.0061, norm:1.3075, tok/sec: 102821.77, flops:90.04, batch-reuse:1
@ 2679 train 5.6791 , allloss: 5.6941, dt: 1261.78ms, fracRes: 0.6002, norm(attn): 0.1016, norm(output): 0.3164, norm(x): 1.1667, norm(y): 1.0061, norm:1.1568, tok/sec: 103878.65, flops:90.97, batch-reuse:1
@ 2680 train 5.5788 , allloss: 5.5946, dt: 1255.53ms, fracRes: 0.5993, norm(attn): 0.1021, norm(output): 0.3145, norm(x): 1.1601, norm(y): 1.0061, norm:1.1446, tok/sec: 104395.76, flops:91.42, batch-reuse:1
@ 2681 train 5.6719 , allloss: 5.6881, dt: 1267.00ms, fracRes: 0.5981, norm(attn): 0.1045, norm(output): 0.3145, norm(x): 1.1527, norm(y): 1.0061, norm:1.1856, tok/sec: 103450.56, flops:90.59, batch-reuse:1
@ 2682 train 5.5061 , allloss: 5.5218, dt: 1282.70ms, fracRes: 0.5961, norm(attn): 0.1064, norm(output): 0.3203, norm(x): 1.1491, norm(y): 1.0061, norm:1.2313, tok/sec: 102184.39, flops:89.48, batch-reuse:1
@ 2683 train 5.6477 , allloss: 5.6645, dt: 1265.92ms, fracRes: 0.5969, norm(attn): 0.1074, norm(output): 0.3184, norm(x): 1.1504, norm(y): 1.0061, norm:1.2498, tok/sec: 103538.91, flops:90.67, batch-reuse:1
@ 2684 train 5.6603 , allloss: 5.6767, dt: 1262.40ms, fracRes: 0.5972, norm(attn): 0.1069, norm(output): 0.3203, norm(x): 1.1563, norm(y): 1.0062, norm:1.1984, tok/sec: 103827.97, flops:90.92, batch-reuse:1
@ 2685 train 5.6339 , allloss: 5.6491, dt: 1281.20ms, fracRes: 0.5994, norm(attn): 0.1040, norm(output): 0.3164, norm(x): 1.1643, norm(y): 1.0062, norm:1.4829, tok/sec: 102303.90, flops:89.59, batch-reuse:1
@ 2686 train 5.6925 , allloss: 5.7074, dt: 1252.51ms, fracRes: 0.6002, norm(attn): 0.1035, norm(output): 0.3145, norm(x): 1.1661, norm(y): 1.0061, norm:1.4411, tok/sec: 104647.48, flops:91.64, batch-reuse:1
@ 2687 train 5.7087 , allloss: 5.7243, dt: 1257.04ms, fracRes: 0.6018, norm(attn): 0.1021, norm(output): 0.3145, norm(x): 1.1653, norm(y): 1.0062, norm:1.0143, tok/sec: 104270.60, flops:91.31, batch-reuse:1
@ 2688 train 5.6372 , allloss: 5.6537, dt: 1277.35ms, fracRes: 0.6008, norm(attn): 0.1030, norm(output): 0.3164, norm(x): 1.1669, norm(y): 1.0062, norm:1.6431, tok/sec: 102612.39, flops:89.86, batch-reuse:1
@ 2689 train 5.7363 , allloss: 5.7524, dt: 1260.27ms, fracRes: 0.6009, norm(attn): 0.1035, norm(output): 0.3164, norm(x): 1.1639, norm(y): 1.0061, norm:1.2906, tok/sec: 104002.83, flops:91.07, batch-reuse:1
@ 2690 train 5.6967 , allloss: 5.7121, dt: 1285.38ms, fracRes: 0.5992, norm(attn): 0.1060, norm(output): 0.3164, norm(x): 1.1609, norm(y): 1.0062, norm:1.2954, tok/sec: 101971.75, flops:89.30, batch-reuse:1
@ 2691 train 5.6734 , allloss: 5.6894, dt: 1279.94ms, fracRes: 0.5971, norm(attn): 0.1079, norm(output): 0.3184, norm(x): 1.1600, norm(y): 1.0061, norm:1.1832, tok/sec: 102405.11, flops:89.67, batch-reuse:1
@ 2692 train 5.5891 , allloss: 5.6049, dt: 1266.00ms, fracRes: 0.5963, norm(attn): 0.1069, norm(output): 0.3184, norm(x): 1.1566, norm(y): 1.0061, norm:1.1508, tok/sec: 103531.99, flops:90.66, batch-reuse:1
@ 2693 train 5.7265 , allloss: 5.7423, dt: 1278.99ms, fracRes: 0.5966, norm(attn): 0.1064, norm(output): 0.3164, norm(x): 1.1506, norm(y): 1.0061, norm:0.9993, tok/sec: 102480.73, flops:89.74, batch-reuse:1
@ 2694 train 5.6465 , allloss: 5.6613, dt: 1309.07ms, fracRes: 0.5986, norm(attn): 0.1035, norm(output): 0.3164, norm(x): 1.1622, norm(y): 1.0061, norm:1.6192, tok/sec: 100125.82, flops:87.68, batch-reuse:1
@ 2695 train 5.6711 , allloss: 5.6862, dt: 1289.53ms, fracRes: 0.6010, norm(attn): 0.1021, norm(output): 0.3164, norm(x): 1.1685, norm(y): 1.0062, norm:1.2132, tok/sec: 101643.57, flops:89.01, batch-reuse:1
@ 2696 train 5.6164 , allloss: 5.6318, dt: 1289.81ms, fracRes: 0.5999, norm(attn): 0.1030, norm(output): 0.3145, norm(x): 1.1687, norm(y): 1.0062, norm:1.0888, tok/sec: 101620.91, flops:88.99, batch-reuse:1
@ 2697 train 5.6083 , allloss: 5.6243, dt: 1276.33ms, fracRes: 0.5982, norm(attn): 0.1069, norm(output): 0.3164, norm(x): 1.1600, norm(y): 1.0062, norm:1.5998, tok/sec: 102694.77, flops:89.93, batch-reuse:1
@ 2698 train 5.6013 , allloss: 5.6184, dt: 1281.52ms, fracRes: 0.5974, norm(attn): 0.1064, norm(output): 0.3164, norm(x): 1.1551, norm(y): 1.0062, norm:1.3896, tok/sec: 102278.67, flops:89.56, batch-reuse:1
@ 2699 train 5.6560 , allloss: 5.6726, dt: 1274.70ms, fracRes: 0.5976, norm(attn): 0.1045, norm(output): 0.3145, norm(x): 1.1540, norm(y): 1.0062, norm:1.6549, tok/sec: 102825.79, flops:90.04, batch-reuse:1
@ 2700 train 5.6275 , allloss: 5.6436, dt: 1298.46ms, fracRes: 0.5986, norm(attn): 0.1064, norm(output): 0.3145, norm(x): 1.1520, norm(y): 1.0062, norm:1.1934, tok/sec: 100944.19, flops:88.40, batch-reuse:1
@ 2701 train 5.5594 , allloss: 5.5750, dt: 1302.29ms, fracRes: 0.5962, norm(attn): 0.1089, norm(output): 0.3145, norm(x): 1.1502, norm(y): 1.0062, norm:1.7817, tok/sec: 100647.64, flops:88.14, batch-reuse:1
@ 2702 train 5.6867 , allloss: 5.7031, dt: 1272.74ms, fracRes: 0.5956, norm(attn): 0.1084, norm(output): 0.3164, norm(x): 1.1471, norm(y): 1.0061, norm:1.2881, tok/sec: 102984.18, flops:90.18, batch-reuse:1
@ 2703 train 5.6474 , allloss: 5.6629, dt: 1312.49ms, fracRes: 0.5976, norm(attn): 0.1064, norm(output): 0.3145, norm(x): 1.1555, norm(y): 1.0062, norm:0.9342, tok/sec: 99865.49, flops:87.45, batch-reuse:1
@ 2704 train 5.7924 , allloss: 5.8095, dt: 1306.47ms, fracRes: 0.6005, norm(attn): 0.1040, norm(output): 0.3145, norm(x): 1.1599, norm(y): 1.0062, norm:1.6132, tok/sec: 100325.40, flops:87.85, batch-reuse:1
@ 2705 train 5.6139 , allloss: 5.6303, dt: 1323.83ms, fracRes: 0.6002, norm(attn): 0.1030, norm(output): 0.3145, norm(x): 1.1554, norm(y): 1.0062, norm:1.2294, tok/sec: 99009.61, flops:86.70, batch-reuse:1
@ 2706 train 5.6193 , allloss: 5.6346, dt: 1285.29ms, fracRes: 0.5992, norm(attn): 0.1060, norm(output): 0.3145, norm(x): 1.1532, norm(y): 1.0062, norm:1.3888, tok/sec: 101978.22, flops:89.30, batch-reuse:1
@ 2707 train 5.6278 , allloss: 5.6434, dt: 1266.63ms, fracRes: 0.5989, norm(attn): 0.1074, norm(output): 0.3164, norm(x): 1.1559, norm(y): 1.0062, norm:1.3261, tok/sec: 103480.74, flops:90.62, batch-reuse:1
@ 2708 train 5.6085 , allloss: 5.6241, dt: 1258.31ms, fracRes: 0.5990, norm(attn): 0.1074, norm(output): 0.3145, norm(x): 1.1597, norm(y): 1.0062, norm:1.0146, tok/sec: 104164.95, flops:91.22, batch-reuse:1
@ 2709 train 5.6410 , allloss: 5.6573, dt: 1260.47ms, fracRes: 0.5983, norm(attn): 0.1079, norm(output): 0.3164, norm(x): 1.1604, norm(y): 1.0062, norm:1.2720, tok/sec: 103986.69, flops:91.06, batch-reuse:1
@ 2710 train 5.7309 , allloss: 5.7470, dt: 1285.93ms, fracRes: 0.5981, norm(attn): 0.1064, norm(output): 0.3164, norm(x): 1.1558, norm(y): 1.0062, norm:1.5185, tok/sec: 101928.04, flops:89.26, batch-reuse:1
@ 2711 train 5.6918 , allloss: 5.7073, dt: 1259.65ms, fracRes: 0.5992, norm(attn): 0.1035, norm(output): 0.3145, norm(x): 1.1548, norm(y): 1.0061, norm:1.2067, tok/sec: 104054.36, flops:91.12, batch-reuse:1
@ 2712 train 5.6634 , allloss: 5.6792, dt: 1267.59ms, fracRes: 0.6013, norm(attn): 0.1030, norm(output): 0.3145, norm(x): 1.1627, norm(y): 1.0062, norm:1.2297, tok/sec: 103402.57, flops:90.55, batch-reuse:1
@ 2713 train 5.6697 , allloss: 5.6860, dt: 1267.57ms, fracRes: 0.6019, norm(attn): 0.1030, norm(output): 0.3125, norm(x): 1.1591, norm(y): 1.0062, norm:1.5273, tok/sec: 103404.54, flops:90.55, batch-reuse:1
@ 2714 train 5.6870 , allloss: 5.7031, dt: 1254.40ms, fracRes: 0.6001, norm(attn): 0.1040, norm(output): 0.3125, norm(x): 1.1540, norm(y): 1.0062, norm:1.0311, tok/sec: 104490.01, flops:91.50, batch-reuse:1
@ 2715 train 5.6063 , allloss: 5.6225, dt: 1273.64ms, fracRes: 0.5966, norm(attn): 0.1089, norm(output): 0.3145, norm(x): 1.1463, norm(y): 1.0062, norm:1.3784, tok/sec: 102911.48, flops:90.12, batch-reuse:1
@ 2716 train 5.5762 , allloss: 5.5927, dt: 1286.62ms, fracRes: 0.5957, norm(attn): 0.1094, norm(output): 0.3164, norm(x): 1.1444, norm(y): 1.0061, norm:1.2477, tok/sec: 101873.15, flops:89.21, batch-reuse:1
@ 2717 train 5.6426 , allloss: 5.6586, dt: 1297.00ms, fracRes: 0.5963, norm(attn): 0.1084, norm(output): 0.3164, norm(x): 1.1494, norm(y): 1.0062, norm:1.6746, tok/sec: 101057.59, flops:88.49, batch-reuse:1
@ 2718 train 5.5685 , allloss: 5.5841, dt: 1296.94ms, fracRes: 0.5993, norm(attn): 0.1040, norm(output): 0.3145, norm(x): 1.1587, norm(y): 1.0062, norm:1.4613, tok/sec: 101062.88, flops:88.50, batch-reuse:1
@ 2719 train 5.7012 , allloss: 5.7172, dt: 1261.52ms, fracRes: 0.6003, norm(attn): 0.1030, norm(output): 0.3145, norm(x): 1.1601, norm(y): 1.0062, norm:1.1013, tok/sec: 103900.42, flops:90.98, batch-reuse:1
@ 2720 train 5.6527 , allloss: 5.6684, dt: 1256.30ms, fracRes: 0.6001, norm(attn): 0.1035, norm(output): 0.3145, norm(x): 1.1598, norm(y): 1.0062, norm:1.2570, tok/sec: 104331.73, flops:91.36, batch-reuse:1
@ 2721 train 5.5908 , allloss: 5.6062, dt: 1273.85ms, fracRes: 0.5989, norm(attn): 0.1055, norm(output): 0.3145, norm(x): 1.1568, norm(y): 1.0063, norm:1.0977, tok/sec: 102894.61, flops:90.10, batch-reuse:1
@ 2722 train 5.5813 , allloss: 5.5973, dt: 1263.51ms, fracRes: 0.5956, norm(attn): 0.1089, norm(output): 0.3184, norm(x): 1.1518, norm(y): 1.0062, norm:1.4057, tok/sec: 103736.34, flops:90.84, batch-reuse:1
@ 2723 train 5.6301 , allloss: 5.6464, dt: 1249.55ms, fracRes: 0.5960, norm(attn): 0.1089, norm(output): 0.3164, norm(x): 1.1515, norm(y): 1.0061, norm:1.2837, tok/sec: 104895.51, flops:91.86, batch-reuse:1
@ 2724 train 5.5832 , allloss: 5.5999, dt: 1260.00ms, fracRes: 0.5973, norm(attn): 0.1060, norm(output): 0.3145, norm(x): 1.1510, norm(y): 1.0062, norm:1.4137, tok/sec: 104024.98, flops:91.09, batch-reuse:1
@ 2725 train 5.5572 , allloss: 5.5729, dt: 1269.47ms, fracRes: 0.5981, norm(attn): 0.1055, norm(output): 0.3125, norm(x): 1.1513, norm(y): 1.0062, norm:1.0672, tok/sec: 103249.18, flops:90.41, batch-reuse:1
@ 2726 train 5.5777 , allloss: 5.5938, dt: 1262.89ms, fracRes: 0.5988, norm(attn): 0.1064, norm(output): 0.3125, norm(x): 1.1479, norm(y): 1.0063, norm:1.1294, tok/sec: 103787.36, flops:90.89, batch-reuse:1
@ 2727 train 5.6717 , allloss: 5.6900, dt: 1257.89ms, fracRes: 0.5999, norm(attn): 0.1069, norm(output): 0.3125, norm(x): 1.1435, norm(y): 1.0063, norm:1.1736, tok/sec: 104199.48, flops:91.25, batch-reuse:1
@ 2728 train 5.6641 , allloss: 5.6795, dt: 1262.81ms, fracRes: 0.5997, norm(attn): 0.1055, norm(output): 0.3125, norm(x): 1.1489, norm(y): 1.0063, norm:1.0375, tok/sec: 103793.98, flops:90.89, batch-reuse:1
@ 2729 train 5.6781 , allloss: 5.6957, dt: 1275.07ms, fracRes: 0.5992, norm(attn): 0.1074, norm(output): 0.3125, norm(x): 1.1448, norm(y): 1.0061, norm:1.2412, tok/sec: 102796.04, flops:90.02, batch-reuse:1
@ 2730 train 5.6398 , allloss: 5.6561, dt: 1288.81ms, fracRes: 0.5964, norm(attn): 0.1089, norm(output): 0.3145, norm(x): 1.1466, norm(y): 1.0062, norm:1.1727, tok/sec: 101699.98, flops:89.06, batch-reuse:1
@ 2731 train 5.5892 , allloss: 5.6056, dt: 1310.75ms, fracRes: 0.5967, norm(attn): 0.1084, norm(output): 0.3145, norm(x): 1.1467, norm(y): 1.0062, norm:1.2617, tok/sec: 99997.46, flops:87.57, batch-reuse:1
@ 2732 train 5.6388 , allloss: 5.6549, dt: 1276.18ms, fracRes: 0.5977, norm(attn): 0.1074, norm(output): 0.3145, norm(x): 1.1461, norm(y): 1.0062, norm:1.3081, tok/sec: 102706.32, flops:89.94, batch-reuse:1
@ 2733 train 5.6233 , allloss: 5.6391, dt: 1290.31ms, fracRes: 0.5986, norm(attn): 0.1060, norm(output): 0.3125, norm(x): 1.1483, norm(y): 1.0062, norm:1.1491, tok/sec: 101581.46, flops:88.95, batch-reuse:1
@ 2734 train 5.6093 , allloss: 5.6259, dt: 1306.36ms, fracRes: 0.5981, norm(attn): 0.1069, norm(output): 0.3125, norm(x): 1.1427, norm(y): 1.0062, norm:1.1692, tok/sec: 100333.97, flops:87.86, batch-reuse:1
@ 2735 train 5.6729 , allloss: 5.6884, dt: 1279.89ms, fracRes: 0.5997, norm(attn): 0.1035, norm(output): 0.3125, norm(x): 1.1447, norm(y): 1.0062, norm:1.0904, tok/sec: 102408.74, flops:89.68, batch-reuse:1
@ 2736 train 5.7082 , allloss: 5.7244, dt: 1302.35ms, fracRes: 0.5997, norm(attn): 0.1030, norm(output): 0.3125, norm(x): 1.1447, norm(y): 1.0063, norm:1.2372, tok/sec: 100642.44, flops:88.13, batch-reuse:1
@ 2737 train 5.6264 , allloss: 5.6425, dt: 1299.10ms, fracRes: 0.5993, norm(attn): 0.1030, norm(output): 0.3125, norm(x): 1.1444, norm(y): 1.0062, norm:1.3694, tok/sec: 100894.55, flops:88.35, batch-reuse:1
@ 2738 train 5.6419 , allloss: 5.6584, dt: 1260.60ms, fracRes: 0.5987, norm(attn): 0.1064, norm(output): 0.3125, norm(x): 1.1380, norm(y): 1.0062, norm:2.4819, tok/sec: 103976.23, flops:91.05, batch-reuse:1
@ 2739 train 5.6488 , allloss: 5.6651, dt: 1288.09ms, fracRes: 0.5971, norm(attn): 0.1079, norm(output): 0.3125, norm(x): 1.1410, norm(y): 1.0062, norm:1.2763, tok/sec: 101757.15, flops:89.11, batch-reuse:1
@ 2740 train 5.5204 , allloss: 5.5371, dt: 1261.78ms, fracRes: 0.5980, norm(attn): 0.1084, norm(output): 0.3125, norm(x): 1.1489, norm(y): 1.0063, norm:2.1648, tok/sec: 103878.41, flops:90.96, batch-reuse:1
@ 2741 train 5.5779 , allloss: 5.5949, dt: 1272.70ms, fracRes: 0.5999, norm(attn): 0.1074, norm(output): 0.3125, norm(x): 1.1562, norm(y): 1.0063, norm:1.4998, tok/sec: 102987.44, flops:90.18, batch-reuse:1
@ 2742 train 5.6026 , allloss: 5.6184, dt: 1268.09ms, fracRes: 0.6007, norm(attn): 0.1069, norm(output): 0.3125, norm(x): 1.1542, norm(y): 1.0062, norm:1.7274, tok/sec: 103361.36, flops:90.51, batch-reuse:1
@ 2743 train 5.5593 , allloss: 5.5758, dt: 1282.68ms, fracRes: 0.5999, norm(attn): 0.1069, norm(output): 0.3125, norm(x): 1.1547, norm(y): 1.0062, norm:1.3822, tok/sec: 102186.35, flops:89.48, batch-reuse:1
@ 2744 train 5.6029 , allloss: 5.6193, dt: 1260.19ms, fracRes: 0.5991, norm(attn): 0.1084, norm(output): 0.3125, norm(x): 1.1488, norm(y): 1.0063, norm:1.2971, tok/sec: 104009.67, flops:91.08, batch-reuse:1
@ 2745 train 5.5985 , allloss: 5.6155, dt: 1264.93ms, fracRes: 0.5994, norm(attn): 0.1074, norm(output): 0.3125, norm(x): 1.1458, norm(y): 1.0063, norm:1.3949, tok/sec: 103619.81, flops:90.74, batch-reuse:1
@ 2746 train 5.5380 , allloss: 5.5539, dt: 1264.12ms, fracRes: 0.5993, norm(attn): 0.1040, norm(output): 0.3125, norm(x): 1.1506, norm(y): 1.0063, norm:1.3648, tok/sec: 103686.37, flops:90.80, batch-reuse:1
@ 2747 train 5.5849 , allloss: 5.6013, dt: 1262.22ms, fracRes: 0.6004, norm(attn): 0.1045, norm(output): 0.3125, norm(x): 1.1488, norm(y): 1.0063, norm:1.2208, tok/sec: 103842.09, flops:90.93, batch-reuse:1
@ 2748 train 5.5301 , allloss: 5.5454, dt: 1308.63ms, fracRes: 0.5997, norm(attn): 0.1050, norm(output): 0.3125, norm(x): 1.1505, norm(y): 1.0062, norm:1.3222, tok/sec: 100160.00, flops:87.71, batch-reuse:1
@ 2749 train 5.5296 , allloss: 5.5467, dt: 1291.45ms, fracRes: 0.5985, norm(attn): 0.1069, norm(output): 0.3145, norm(x): 1.1463, norm(y): 1.0063, norm:1.2254, tok/sec: 101492.42, flops:88.88, batch-reuse:1
@ 2750 train 5.6258 , allloss: 5.6439, dt: 1272.55ms, fracRes: 0.5991, norm(attn): 0.1084, norm(output): 0.3125, norm(x): 1.1387, norm(y): 1.0062, norm:1.4407, tok/sec: 102999.31, flops:90.20, batch-reuse:1
@ 2751 train 5.5938 , allloss: 5.6107, dt: 1284.20ms, fracRes: 0.5976, norm(attn): 0.1089, norm(output): 0.3125, norm(x): 1.1413, norm(y): 1.0063, norm:1.0422, tok/sec: 102065.01, flops:89.38, batch-reuse:1
@ 2752 train 5.5455 , allloss: 5.5618, dt: 1281.98ms, fracRes: 0.5987, norm(attn): 0.1074, norm(output): 0.3125, norm(x): 1.1400, norm(y): 1.0063, norm:2.1346, tok/sec: 102241.75, flops:89.53, batch-reuse:1
@ 2753 train 5.6025 , allloss: 5.6187, dt: 1280.86ms, fracRes: 0.6008, norm(attn): 0.1055, norm(output): 0.3105, norm(x): 1.1431, norm(y): 1.0063, norm:1.3560, tok/sec: 102331.52, flops:89.61, batch-reuse:1
@ 2754 train 5.5798 , allloss: 5.5964, dt: 1260.11ms, fracRes: 0.6014, norm(attn): 0.1045, norm(output): 0.3105, norm(x): 1.1484, norm(y): 1.0063, norm:1.2686, tok/sec: 104016.42, flops:91.09, batch-reuse:1
@ 2755 train 5.5844 , allloss: 5.6006, dt: 1261.88ms, fracRes: 0.6006, norm(attn): 0.1055, norm(output): 0.3105, norm(x): 1.1492, norm(y): 1.0063, norm:1.3277, tok/sec: 103870.28, flops:90.96, batch-reuse:1
@ 2756 train 5.5545 , allloss: 5.5713, dt: 1261.21ms, fracRes: 0.5998, norm(attn): 0.1074, norm(output): 0.3125, norm(x): 1.1472, norm(y): 1.0063, norm:1.2777, tok/sec: 103925.77, flops:91.01, batch-reuse:1
@ 2757 train 5.5385 , allloss: 5.5551, dt: 1266.67ms, fracRes: 0.5983, norm(attn): 0.1104, norm(output): 0.3145, norm(x): 1.1430, norm(y): 1.0062, norm:1.1068, tok/sec: 103477.27, flops:90.61, batch-reuse:1
@ 2758 train 5.5242 , allloss: 5.5405, dt: 1264.29ms, fracRes: 0.6002, norm(attn): 0.1094, norm(output): 0.3145, norm(x): 1.1500, norm(y): 1.0064, norm:1.1247, tok/sec: 103672.19, flops:90.78, batch-reuse:1
@ 2759 train 5.5507 , allloss: 5.5670, dt: 1286.80ms, fracRes: 0.6016, norm(attn): 0.1040, norm(output): 0.3125, norm(x): 1.1513, norm(y): 1.0063, norm:1.3729, tok/sec: 101859.00, flops:89.20, batch-reuse:1
@ 2760 train 5.4877 , allloss: 5.5034, dt: 1253.65ms, fracRes: 0.6015, norm(attn): 0.1045, norm(output): 0.3105, norm(x): 1.1500, norm(y): 1.0064, norm:1.5451, tok/sec: 104552.61, flops:91.56, batch-reuse:1
@ 2761 train 5.5499 , allloss: 5.5658, dt: 1272.24ms, fracRes: 0.6010, norm(attn): 0.1040, norm(output): 0.3105, norm(x): 1.1473, norm(y): 1.0064, norm:1.1615, tok/sec: 103024.48, flops:90.22, batch-reuse:1
@ 2762 train 5.5848 , allloss: 5.6012, dt: 1319.62ms, fracRes: 0.5991, norm(attn): 0.1074, norm(output): 0.3125, norm(x): 1.1432, norm(y): 1.0063, norm:1.2757, tok/sec: 99325.23, flops:86.98, batch-reuse:1
@ 2763 train 5.6128 , allloss: 5.6302, dt: 1312.57ms, fracRes: 0.5992, norm(attn): 0.1079, norm(output): 0.3125, norm(x): 1.1410, norm(y): 1.0063, norm:1.0258, tok/sec: 99858.74, flops:87.44, batch-reuse:1
@ 2764 train 5.5149 , allloss: 5.5319, dt: 1265.79ms, fracRes: 0.5984, norm(attn): 0.1084, norm(output): 0.3125, norm(x): 1.1402, norm(y): 1.0063, norm:1.6461, tok/sec: 103549.70, flops:90.68, batch-reuse:1
@ 2765 train 5.6330 , allloss: 5.6492, dt: 1265.48ms, fracRes: 0.5998, norm(attn): 0.1074, norm(output): 0.3125, norm(x): 1.1454, norm(y): 1.0063, norm:1.1200, tok/sec: 103574.98, flops:90.70, batch-reuse:1
@ 2766 train 5.5764 , allloss: 5.5942, dt: 1274.84ms, fracRes: 0.5982, norm(attn): 0.1074, norm(output): 0.3125, norm(x): 1.1419, norm(y): 1.0063, norm:1.7669, tok/sec: 102814.79, flops:90.03, batch-reuse:1
@ 2767 train 5.5624 , allloss: 5.5792, dt: 1272.33ms, fracRes: 0.5981, norm(attn): 0.1074, norm(output): 0.3125, norm(x): 1.1433, norm(y): 1.0063, norm:1.6226, tok/sec: 103017.26, flops:90.21, batch-reuse:1
@ 2768 train 5.5393 , allloss: 5.5548, dt: 1254.91ms, fracRes: 0.6003, norm(attn): 0.1040, norm(output): 0.3105, norm(x): 1.1475, norm(y): 1.0064, norm:1.9049, tok/sec: 104447.67, flops:91.46, batch-reuse:1
@ 2769 train 5.6216 , allloss: 5.6374, dt: 1266.28ms, fracRes: 0.6011, norm(attn): 0.1035, norm(output): 0.3105, norm(x): 1.1478, norm(y): 1.0063, norm:1.3288, tok/sec: 103509.22, flops:90.64, batch-reuse:1
@ 2770 train 5.5114 , allloss: 5.5278, dt: 1281.09ms, fracRes: 0.5990, norm(attn): 0.1074, norm(output): 0.3125, norm(x): 1.1407, norm(y): 1.0063, norm:1.0810, tok/sec: 102312.55, flops:89.59, batch-reuse:1
@ 2771 train 5.6295 , allloss: 5.6459, dt: 1241.37ms, fracRes: 0.5985, norm(attn): 0.1084, norm(output): 0.3125, norm(x): 1.1412, norm(y): 1.0062, norm:1.2170, tok/sec: 105586.19, flops:92.46, batch-reuse:1
@ 2772 train 5.4800 , allloss: 5.4968, dt: 1277.85ms, fracRes: 0.5983, norm(attn): 0.1099, norm(output): 0.3125, norm(x): 1.1442, norm(y): 1.0064, norm:1.3654, tok/sec: 102572.18, flops:89.82, batch-reuse:1
@ 2773 train 5.5519 , allloss: 5.5681, dt: 1296.81ms, fracRes: 0.6010, norm(attn): 0.1084, norm(output): 0.3125, norm(x): 1.1490, norm(y): 1.0064, norm:1.4218, tok/sec: 101072.42, flops:88.51, batch-reuse:1
@ 2774 train 5.4913 , allloss: 5.5082, dt: 1306.24ms, fracRes: 0.6018, norm(attn): 0.1074, norm(output): 0.3125, norm(x): 1.1448, norm(y): 1.0064, norm:1.4649, tok/sec: 100342.83, flops:87.87, batch-reuse:1
@ 2775 train 5.5525 , allloss: 5.5681, dt: 1261.24ms, fracRes: 0.6008, norm(attn): 0.1055, norm(output): 0.3105, norm(x): 1.1444, norm(y): 1.0064, norm:1.2494, tok/sec: 103923.36, flops:91.00, batch-reuse:1
@ 2776 train 5.6373 , allloss: 5.6549, dt: 1267.38ms, fracRes: 0.5996, norm(attn): 0.1050, norm(output): 0.3105, norm(x): 1.1360, norm(y): 1.0063, norm:1.4995, tok/sec: 103419.63, flops:90.56, batch-reuse:1
@ 2777 train 5.5284 , allloss: 5.5443, dt: 1259.65ms, fracRes: 0.5978, norm(attn): 0.1079, norm(output): 0.3125, norm(x): 1.1412, norm(y): 1.0062, norm:1.1992, tok/sec: 104053.97, flops:91.12, batch-reuse:1
@ 2778 train 5.6304 , allloss: 5.6467, dt: 1281.53ms, fracRes: 0.5980, norm(attn): 0.1079, norm(output): 0.3125, norm(x): 1.1395, norm(y): 1.0062, norm:1.3317, tok/sec: 102277.89, flops:89.56, batch-reuse:1
@ 2779 train 5.5160 , allloss: 5.5326, dt: 1266.19ms, fracRes: 0.5967, norm(attn): 0.1099, norm(output): 0.3125, norm(x): 1.1354, norm(y): 1.0062, norm:1.2678, tok/sec: 103516.46, flops:90.65, batch-reuse:1
@ 2780 train 5.4458 , allloss: 5.4627, dt: 1267.31ms, fracRes: 0.5980, norm(attn): 0.1079, norm(output): 0.3125, norm(x): 1.1408, norm(y): 1.0063, norm:1.5425, tok/sec: 103424.96, flops:90.57, batch-reuse:1
@ 2781 train 5.3706 , allloss: 5.3865, dt: 1267.66ms, fracRes: 0.5988, norm(attn): 0.1074, norm(output): 0.3125, norm(x): 1.1414, norm(y): 1.0063, norm:0.9427, tok/sec: 103396.55, flops:90.54, batch-reuse:1
@ 2782 train 5.5581 , allloss: 5.5747, dt: 1269.42ms, fracRes: 0.6000, norm(attn): 0.1074, norm(output): 0.3125, norm(x): 1.1374, norm(y): 1.0062, norm:1.2772, tok/sec: 103253.73, flops:90.42, batch-reuse:1
@ 2783 train 5.4572 , allloss: 5.4741, dt: 1267.64ms, fracRes: 0.5979, norm(attn): 0.1084, norm(output): 0.3125, norm(x): 1.1360, norm(y): 1.0063, norm:1.2693, tok/sec: 103398.67, flops:90.54, batch-reuse:1
@ 2784 train 5.5765 , allloss: 5.5930, dt: 1268.02ms, fracRes: 0.5994, norm(attn): 0.1074, norm(output): 0.3105, norm(x): 1.1375, norm(y): 1.0063, norm:1.4700, tok/sec: 103367.11, flops:90.52, batch-reuse:1
@ 2785 train 5.6216 , allloss: 5.6393, dt: 1290.22ms, fracRes: 0.5992, norm(attn): 0.1055, norm(output): 0.3105, norm(x): 1.1296, norm(y): 1.0062, norm:1.4584, tok/sec: 101588.65, flops:88.96, batch-reuse:1
@ 2786 train 5.5569 , allloss: 5.5746, dt: 1243.91ms, fracRes: 0.5990, norm(attn): 0.1079, norm(output): 0.3105, norm(x): 1.1266, norm(y): 1.0062, norm:1.3626, tok/sec: 105370.86, flops:92.27, batch-reuse:1
@ 2787 train 5.6912 , allloss: 5.7075, dt: 1261.80ms, fracRes: 0.5988, norm(attn): 0.1079, norm(output): 0.3125, norm(x): 1.1275, norm(y): 1.0063, norm:1.1118, tok/sec: 103877.10, flops:90.96, batch-reuse:1
@ 2788 train 5.6493 , allloss: 5.6655, dt: 1276.64ms, fracRes: 0.5997, norm(attn): 0.1055, norm(output): 0.3105, norm(x): 1.1351, norm(y): 1.0063, norm:1.7375, tok/sec: 102669.49, flops:89.91, batch-reuse:1
@ 2789 train 5.6825 , allloss: 5.6988, dt: 1283.15ms, fracRes: 0.6013, norm(attn): 0.1055, norm(output): 0.3105, norm(x): 1.1416, norm(y): 1.0063, norm:1.2098, tok/sec: 102148.26, flops:89.45, batch-reuse:1
@ 2790 train 5.7964 , allloss: 5.8134, dt: 1250.34ms, fracRes: 0.6014, norm(attn): 0.1079, norm(output): 0.3105, norm(x): 1.1381, norm(y): 1.0063, norm:1.3491, tok/sec: 104828.75, flops:91.80, batch-reuse:1
@ 2791 train 5.6505 , allloss: 5.6669, dt: 1290.90ms, fracRes: 0.5989, norm(attn): 0.1094, norm(output): 0.3105, norm(x): 1.1359, norm(y): 1.0063, norm:1.3556, tok/sec: 101535.31, flops:88.91, batch-reuse:1
@ 2792 train 6.2027 , allloss: 6.2199, dt: 1268.10ms, fracRes: 0.6035, norm(attn): 0.1040, norm(output): 0.3086, norm(x): 1.1467, norm(y): 1.0062, norm:1.7478, tok/sec: 103361.30, flops:90.51, batch-reuse:1
@ 2793 train 5.6952 , allloss: 5.7123, dt: 1251.24ms, fracRes: 0.5977, norm(attn): 0.1094, norm(output): 0.3125, norm(x): 1.1413, norm(y): 1.0062, norm:1.7267, tok/sec: 104754.00, flops:91.73, batch-reuse:1
@ 2794 train 5.6447 , allloss: 5.6611, dt: 1251.11ms, fracRes: 0.5991, norm(attn): 0.1089, norm(output): 0.3125, norm(x): 1.1429, norm(y): 1.0063, norm:1.4885, tok/sec: 104764.60, flops:91.74, batch-reuse:1
@ 2795 train 5.6375 , allloss: 5.6538, dt: 1278.22ms, fracRes: 0.6006, norm(attn): 0.1089, norm(output): 0.3125, norm(x): 1.1433, norm(y): 1.0063, norm:1.4669, tok/sec: 102542.24, flops:89.79, batch-reuse:1
@ 2796 train 5.7138 , allloss: 5.7300, dt: 1285.59ms, fracRes: 0.6018, norm(attn): 0.1064, norm(output): 0.3125, norm(x): 1.1499, norm(y): 1.0063, norm:1.2415, tok/sec: 101954.69, flops:89.28, batch-reuse:1
@ 2797 train 5.6539 , allloss: 5.6697, dt: 1247.14ms, fracRes: 0.6018, norm(attn): 0.1060, norm(output): 0.3105, norm(x): 1.1501, norm(y): 1.0065, norm:1.4239, tok/sec: 105097.65, flops:92.03, batch-reuse:1
@ 2798 train 5.6680 , allloss: 5.6846, dt: 1256.47ms, fracRes: 0.6009, norm(attn): 0.1074, norm(output): 0.3105, norm(x): 1.1450, norm(y): 1.0065, norm:1.5011, tok/sec: 104317.50, flops:91.35, batch-reuse:1
@ 2799 train 5.6916 , allloss: 5.7084, dt: 1274.20ms, fracRes: 0.6004, norm(attn): 0.1064, norm(output): 0.3086, norm(x): 1.1361, norm(y): 1.0064, norm:1.2497, tok/sec: 102865.96, flops:90.08, batch-reuse:1
@ 2800 train 5.8702 , allloss: 5.8868, dt: 1290.45ms, fracRes: 0.6041, norm(attn): 0.1035, norm(output): 0.3066, norm(x): 1.1420, norm(y): 1.0063, norm:1.5321, tok/sec: 101571.16, flops:88.94, batch-reuse:1
@ 2801 train 5.7952 , allloss: 5.8138, dt: 1298.44ms, fracRes: 0.6021, norm(attn): 0.1050, norm(output): 0.3105, norm(x): 1.1325, norm(y): 1.0062, norm:1.5304, tok/sec: 100945.88, flops:88.40, batch-reuse:1
@ 2802 train 5.6190 , allloss: 5.6360, dt: 1262.59ms, fracRes: 0.6004, norm(attn): 0.1074, norm(output): 0.3105, norm(x): 1.1350, norm(y): 1.0064, norm:1.0689, tok/sec: 103811.87, flops:90.91, batch-reuse:1
@ 2803 train 5.6056 , allloss: 5.6244, dt: 1252.02ms, fracRes: 0.6002, norm(attn): 0.1074, norm(output): 0.3105, norm(x): 1.1357, norm(y): 1.0064, norm:1.1771, tok/sec: 104688.15, flops:91.67, batch-reuse:1
@ 2804 train 5.7662 , allloss: 5.7860, dt: 1238.24ms, fracRes: 0.6003, norm(attn): 0.1084, norm(output): 0.3105, norm(x): 1.1348, norm(y): 1.0063, norm:1.5962, tok/sec: 105853.22, flops:92.69, batch-reuse:1
@ 2805 train 5.6507 , allloss: 5.6737, dt: 1258.71ms, fracRes: 0.5981, norm(attn): 0.1084, norm(output): 0.3125, norm(x): 1.1296, norm(y): 1.0063, norm:1.9422, tok/sec: 104132.21, flops:91.19, batch-reuse:1
@ 2806 train 5.6095 , allloss: 5.6269, dt: 1258.49ms, fracRes: 0.5980, norm(attn): 0.1089, norm(output): 0.3125, norm(x): 1.1336, norm(y): 1.0063, norm:1.2521, tok/sec: 104150.28, flops:91.20, batch-reuse:1
@ 2807 train 5.8094 , allloss: 5.8252, dt: 1271.27ms, fracRes: 0.6014, norm(attn): 0.1050, norm(output): 0.3105, norm(x): 1.1382, norm(y): 1.0064, norm:1.3507, tok/sec: 103103.52, flops:90.29, batch-reuse:1
@ 2808 train 5.6560 , allloss: 5.6728, dt: 1293.23ms, fracRes: 0.6022, norm(attn): 0.1074, norm(output): 0.3105, norm(x): 1.1441, norm(y): 1.0065, norm:1.9120, tok/sec: 101352.78, flops:88.75, batch-reuse:1
@ 2809 train 5.6041 , allloss: 5.6205, dt: 1293.69ms, fracRes: 0.6010, norm(attn): 0.1079, norm(output): 0.3105, norm(x): 1.1430, norm(y): 1.0064, norm:1.4374, tok/sec: 101316.15, flops:88.72, batch-reuse:1
@ 2810 train 5.5831 , allloss: 5.5996, dt: 1246.66ms, fracRes: 0.5989, norm(attn): 0.1089, norm(output): 0.3125, norm(x): 1.1312, norm(y): 1.0063, norm:1.7065, tok/sec: 105138.61, flops:92.07, batch-reuse:1
@ 2811 train 5.6454 , allloss: 5.6625, dt: 1264.08ms, fracRes: 0.5989, norm(attn): 0.1079, norm(output): 0.3105, norm(x): 1.1299, norm(y): 1.0063, norm:1.3246, tok/sec: 103689.64, flops:90.80, batch-reuse:1
@ 2812 train 5.6768 , allloss: 5.6942, dt: 1263.95ms, fracRes: 0.6005, norm(attn): 0.1074, norm(output): 0.3105, norm(x): 1.1324, norm(y): 1.0063, norm:1.3398, tok/sec: 103700.65, flops:90.81, batch-reuse:1
@ 2813 train 5.7779 , allloss: 5.7946, dt: 1257.37ms, fracRes: 0.6015, norm(attn): 0.1074, norm(output): 0.3105, norm(x): 1.1356, norm(y): 1.0063, norm:1.2823, tok/sec: 104242.81, flops:91.28, batch-reuse:1
@ 2814 train 5.6957 , allloss: 5.7142, dt: 1248.71ms, fracRes: 0.6020, norm(attn): 0.1055, norm(output): 0.3105, norm(x): 1.1423, norm(y): 1.0064, norm:1.4339, tok/sec: 104965.71, flops:91.92, batch-reuse:1
@ 2815 train 5.6961 , allloss: 5.7114, dt: 1267.56ms, fracRes: 0.6028, norm(attn): 0.1079, norm(output): 0.3105, norm(x): 1.1485, norm(y): 1.0064, norm:1.4757, tok/sec: 103404.89, flops:90.55, batch-reuse:1
@ 2816 train 5.6643 , allloss: 5.6817, dt: 1242.17ms, fracRes: 0.6008, norm(attn): 0.1113, norm(output): 0.3125, norm(x): 1.1440, norm(y): 1.0064, norm:1.4367, tok/sec: 105518.50, flops:92.40, batch-reuse:1
@ 2817 train 5.6795 , allloss: 5.6960, dt: 1279.48ms, fracRes: 0.6004, norm(attn): 0.1104, norm(output): 0.3125, norm(x): 1.1465, norm(y): 1.0064, norm:1.3131, tok/sec: 102441.79, flops:89.71, batch-reuse:1
@ 2818 train 5.6940 , allloss: 5.7122, dt: 1306.89ms, fracRes: 0.6010, norm(attn): 0.1089, norm(output): 0.3125, norm(x): 1.1485, norm(y): 1.0063, norm:1.6670, tok/sec: 100293.08, flops:87.83, batch-reuse:1
@ 2819 train 5.6538 , allloss: 5.6716, dt: 1270.34ms, fracRes: 0.6008, norm(attn): 0.1079, norm(output): 0.3125, norm(x): 1.1431, norm(y): 1.0063, norm:0.9648, tok/sec: 103179.03, flops:90.35, batch-reuse:1
@ 2820 train 5.6540 , allloss: 5.6698, dt: 1247.62ms, fracRes: 0.6019, norm(attn): 0.1064, norm(output): 0.3086, norm(x): 1.1478, norm(y): 1.0065, norm:1.6116, tok/sec: 105057.62, flops:92.00, batch-reuse:1
@ 2821 train 5.6460 , allloss: 5.6616, dt: 1243.68ms, fracRes: 0.6005, norm(attn): 0.1079, norm(output): 0.3105, norm(x): 1.1431, norm(y): 1.0064, norm:1.0993, tok/sec: 105390.72, flops:92.29, batch-reuse:1
@ 2822 train 5.5845 , allloss: 5.6000, dt: 1273.91ms, fracRes: 0.6006, norm(attn): 0.1079, norm(output): 0.3105, norm(x): 1.1424, norm(y): 1.0064, norm:1.3396, tok/sec: 102889.87, flops:90.10, batch-reuse:1
@ 2823 train 5.6135 , allloss: 5.6293, dt: 1252.14ms, fracRes: 0.5995, norm(attn): 0.1084, norm(output): 0.3105, norm(x): 1.1395, norm(y): 1.0064, norm:1.7716, tok/sec: 104678.67, flops:91.67, batch-reuse:1
@ 2824 train 5.6327 , allloss: 5.6491, dt: 1253.89ms, fracRes: 0.5988, norm(attn): 0.1094, norm(output): 0.3125, norm(x): 1.1381, norm(y): 1.0064, norm:1.0879, tok/sec: 104532.27, flops:91.54, batch-reuse:1
@ 2825 train 5.6254 , allloss: 5.6424, dt: 1287.51ms, fracRes: 0.5991, norm(attn): 0.1094, norm(output): 0.3105, norm(x): 1.1363, norm(y): 1.0064, norm:1.4328, tok/sec: 101803.09, flops:89.15, batch-reuse:1
@ 2826 train 5.6833 , allloss: 5.7001, dt: 1258.08ms, fracRes: 0.6010, norm(attn): 0.1079, norm(output): 0.3105, norm(x): 1.1384, norm(y): 1.0064, norm:1.3860, tok/sec: 104184.05, flops:91.23, batch-reuse:1
@ 2827 train 5.6892 , allloss: 5.7060, dt: 1261.72ms, fracRes: 0.6017, norm(attn): 0.1074, norm(output): 0.3105, norm(x): 1.1417, norm(y): 1.0064, norm:1.3571, tok/sec: 103883.95, flops:90.97, batch-reuse:1
@ 2828 train 5.7088 , allloss: 5.7252, dt: 1260.32ms, fracRes: 0.6024, norm(attn): 0.1079, norm(output): 0.3105, norm(x): 1.1425, norm(y): 1.0065, norm:1.2527, tok/sec: 103998.83, flops:91.07, batch-reuse:1
@ 2829 train 5.5914 , allloss: 5.6071, dt: 1263.92ms, fracRes: 0.5991, norm(attn): 0.1089, norm(output): 0.3105, norm(x): 1.1378, norm(y): 1.0064, norm:1.4332, tok/sec: 103702.86, flops:90.81, batch-reuse:1
@ 2830 train 5.8267 , allloss: 5.8431, dt: 1305.99ms, fracRes: 0.6001, norm(attn): 0.1089, norm(output): 0.3086, norm(x): 1.1328, norm(y): 1.0063, norm:1.2842, tok/sec: 100362.53, flops:87.89, batch-reuse:1
@ 2831 train 5.7097 , allloss: 5.7261, dt: 1268.53ms, fracRes: 0.5990, norm(attn): 0.1084, norm(output): 0.3105, norm(x): 1.1350, norm(y): 1.0063, norm:1.2192, tok/sec: 103325.96, flops:90.48, batch-reuse:1
@ 2832 train 5.6115 , allloss: 5.6280, dt: 1282.16ms, fracRes: 0.5996, norm(attn): 0.1084, norm(output): 0.3086, norm(x): 1.1390, norm(y): 1.0064, norm:1.0846, tok/sec: 102227.85, flops:89.52, batch-reuse:1
@ 2833 train 5.6764 , allloss: 5.6932, dt: 1277.42ms, fracRes: 0.5994, norm(attn): 0.1094, norm(output): 0.3105, norm(x): 1.1381, norm(y): 1.0064, norm:1.2790, tok/sec: 102606.93, flops:89.85, batch-reuse:1
@ 2834 train 5.6437 , allloss: 5.6604, dt: 1258.68ms, fracRes: 0.5990, norm(attn): 0.1104, norm(output): 0.3105, norm(x): 1.1348, norm(y): 1.0064, norm:1.1057, tok/sec: 104134.42, flops:91.19, batch-reuse:1
@ 2835 train 5.6783 , allloss: 5.6963, dt: 1294.02ms, fracRes: 0.5996, norm(attn): 0.1104, norm(output): 0.3105, norm(x): 1.1322, norm(y): 1.0064, norm:1.9538, tok/sec: 101290.56, flops:88.70, batch-reuse:1
@ 2836 train 5.6407 , allloss: 5.6570, dt: 1289.20ms, fracRes: 0.6000, norm(attn): 0.1104, norm(output): 0.3105, norm(x): 1.1373, norm(y): 1.0064, norm:1.8011, tok/sec: 101669.21, flops:89.03, batch-reuse:1
@ 2837 train 5.7032 , allloss: 5.7194, dt: 1285.53ms, fracRes: 0.6031, norm(attn): 0.1050, norm(output): 0.3086, norm(x): 1.1434, norm(y): 1.0064, norm:1.2128, tok/sec: 101959.69, flops:89.28, batch-reuse:1
@ 2838 train 5.6801 , allloss: 5.6956, dt: 1283.08ms, fracRes: 0.6026, norm(attn): 0.1045, norm(output): 0.3086, norm(x): 1.1410, norm(y): 1.0064, norm:1.0809, tok/sec: 102153.86, flops:89.45, batch-reuse:1
@ 2839 train 5.6180 , allloss: 5.6345, dt: 1263.70ms, fracRes: 0.6009, norm(attn): 0.1064, norm(output): 0.3105, norm(x): 1.1325, norm(y): 1.0065, norm:1.0806, tok/sec: 103720.49, flops:90.83, batch-reuse:1
@ 2840 train 5.6331 , allloss: 5.6494, dt: 1282.02ms, fracRes: 0.6004, norm(attn): 0.1074, norm(output): 0.3086, norm(x): 1.1359, norm(y): 1.0065, norm:1.1753, tok/sec: 102238.38, flops:89.53, batch-reuse:1
@ 2841 train 5.6092 , allloss: 5.6256, dt: 1268.39ms, fracRes: 0.5980, norm(attn): 0.1094, norm(output): 0.3105, norm(x): 1.1342, norm(y): 1.0064, norm:1.2796, tok/sec: 103337.15, flops:90.49, batch-reuse:1
@ 2842 train 5.6203 , allloss: 5.6375, dt: 1273.46ms, fracRes: 0.5972, norm(attn): 0.1118, norm(output): 0.3105, norm(x): 1.1270, norm(y): 1.0063, norm:1.7181, tok/sec: 102925.93, flops:90.13, batch-reuse:1
@ 2843 train 5.5980 , allloss: 5.6149, dt: 1273.52ms, fracRes: 0.5978, norm(attn): 0.1104, norm(output): 0.3105, norm(x): 1.1251, norm(y): 1.0064, norm:1.3411, tok/sec: 102920.92, flops:90.13, batch-reuse:1
@ 2844 train 5.5902 , allloss: 5.6059, dt: 1272.41ms, fracRes: 0.6007, norm(attn): 0.1079, norm(output): 0.3086, norm(x): 1.1336, norm(y): 1.0064, norm:1.1818, tok/sec: 103010.77, flops:90.21, batch-reuse:1
@ 2845 train 5.6434 , allloss: 5.6592, dt: 1252.52ms, fracRes: 0.6030, norm(attn): 0.1069, norm(output): 0.3066, norm(x): 1.1405, norm(y): 1.0065, norm:1.9547, tok/sec: 104646.33, flops:91.64, batch-reuse:1
@ 2846 train 5.6194 , allloss: 5.6350, dt: 1263.92ms, fracRes: 0.6028, norm(attn): 0.1064, norm(output): 0.3086, norm(x): 1.1411, norm(y): 1.0065, norm:1.3183, tok/sec: 103702.37, flops:90.81, batch-reuse:1
@ 2847 train 5.6758 , allloss: 5.6915, dt: 1288.29ms, fracRes: 0.6026, norm(attn): 0.1060, norm(output): 0.3066, norm(x): 1.1372, norm(y): 1.0065, norm:1.5584, tok/sec: 101741.33, flops:89.09, batch-reuse:1
@ 2848 train 5.5961 , allloss: 5.6117, dt: 1298.06ms, fracRes: 0.5995, norm(attn): 0.1074, norm(output): 0.3105, norm(x): 1.1297, norm(y): 1.0064, norm:1.8170, tok/sec: 100974.94, flops:88.42, batch-reuse:1
@ 2849 train 5.5830 , allloss: 5.5994, dt: 1299.07ms, fracRes: 0.5986, norm(attn): 0.1089, norm(output): 0.3105, norm(x): 1.1249, norm(y): 1.0064, norm:1.2161, tok/sec: 100896.49, flops:88.35, batch-reuse:1
@ 2850 train 5.5740 , allloss: 5.5905, dt: 1314.37ms, fracRes: 0.5981, norm(attn): 0.1108, norm(output): 0.3105, norm(x): 1.1225, norm(y): 1.0064, norm:1.4834, tok/sec: 99721.94, flops:87.33, batch-reuse:1
@ 2851 train 5.5482 , allloss: 5.5649, dt: 1315.98ms, fracRes: 0.5980, norm(attn): 0.1123, norm(output): 0.3086, norm(x): 1.1209, norm(y): 1.0064, norm:1.4712, tok/sec: 99600.57, flops:87.22, batch-reuse:1
@ 2852 train 5.5641 , allloss: 5.5807, dt: 1310.03ms, fracRes: 0.5986, norm(attn): 0.1094, norm(output): 0.3105, norm(x): 1.1272, norm(y): 1.0064, norm:1.5045, tok/sec: 100052.54, flops:87.61, batch-reuse:1
@ 2853 train 5.7085 , allloss: 5.7255, dt: 1258.59ms, fracRes: 0.6002, norm(attn): 0.1079, norm(output): 0.3086, norm(x): 1.1290, norm(y): 1.0065, norm:1.3003, tok/sec: 104141.88, flops:91.20, batch-reuse:1
@ 2854 train 5.6887 , allloss: 5.7063, dt: 1271.10ms, fracRes: 0.6014, norm(attn): 0.1074, norm(output): 0.3027, norm(x): 1.1267, norm(y): 1.0064, norm:1.3230, tok/sec: 103117.25, flops:90.30, batch-reuse:1
@ 2855 train 5.6012 , allloss: 5.6175, dt: 1275.44ms, fracRes: 0.6006, norm(attn): 0.1074, norm(output): 0.3066, norm(x): 1.1343, norm(y): 1.0065, norm:1.6976, tok/sec: 102766.01, flops:89.99, batch-reuse:1
@ 2856 train 5.6100 , allloss: 5.6254, dt: 1263.41ms, fracRes: 0.6008, norm(attn): 0.1074, norm(output): 0.3105, norm(x): 1.1378, norm(y): 1.0065, norm:1.3121, tok/sec: 103744.33, flops:90.85, batch-reuse:1
@ 2857 train 5.5554 , allloss: 5.5714, dt: 1265.18ms, fracRes: 0.5991, norm(attn): 0.1089, norm(output): 0.3105, norm(x): 1.1360, norm(y): 1.0064, norm:1.4445, tok/sec: 103599.38, flops:90.72, batch-reuse:1
@ 2858 train 5.5686 , allloss: 5.5857, dt: 1271.24ms, fracRes: 0.6001, norm(attn): 0.1094, norm(output): 0.3086, norm(x): 1.1350, norm(y): 1.0065, norm:1.1590, tok/sec: 103105.69, flops:90.29, batch-reuse:1
@ 2859 train 5.5489 , allloss: 5.5643, dt: 1288.10ms, fracRes: 0.6009, norm(attn): 0.1094, norm(output): 0.3086, norm(x): 1.1478, norm(y): 1.0065, norm:1.9091, tok/sec: 101755.98, flops:89.11, batch-reuse:1
@ 2860 train 5.6396 , allloss: 5.6566, dt: 1269.94ms, fracRes: 0.5999, norm(attn): 0.1094, norm(output): 0.3105, norm(x): 1.1294, norm(y): 1.0064, norm:1.7068, tok/sec: 103210.89, flops:90.38, batch-reuse:1
@ 2861 train 5.5322 , allloss: 5.5482, dt: 1263.66ms, fracRes: 0.6013, norm(attn): 0.1060, norm(output): 0.3105, norm(x): 1.1412, norm(y): 1.0064, norm:1.4076, tok/sec: 103723.70, flops:90.83, batch-reuse:1
@ 2862 train 5.6709 , allloss: 5.6872, dt: 1285.19ms, fracRes: 0.6020, norm(attn): 0.1074, norm(output): 0.3086, norm(x): 1.1361, norm(y): 1.0065, norm:1.3949, tok/sec: 101986.62, flops:89.31, batch-reuse:1
@ 2863 train 5.6204 , allloss: 5.6371, dt: 1284.52ms, fracRes: 0.6008, norm(attn): 0.1084, norm(output): 0.3086, norm(x): 1.1328, norm(y): 1.0064, norm:1.3356, tok/sec: 102039.76, flops:89.35, batch-reuse:1
@ 2864 train 5.5390 , allloss: 5.5554, dt: 1275.53ms, fracRes: 0.5989, norm(attn): 0.1099, norm(output): 0.3105, norm(x): 1.1267, norm(y): 1.0065, norm:1.2875, tok/sec: 102759.02, flops:89.98, batch-reuse:1
@ 2865 train 5.5932 , allloss: 5.6098, dt: 1298.03ms, fracRes: 0.5966, norm(attn): 0.1118, norm(output): 0.3105, norm(x): 1.1193, norm(y): 1.0064, norm:1.1376, tok/sec: 100977.29, flops:88.42, batch-reuse:1
@ 2866 train 5.6425 , allloss: 5.6597, dt: 1278.76ms, fracRes: 0.5972, norm(attn): 0.1113, norm(output): 0.3125, norm(x): 1.1287, norm(y): 1.0065, norm:1.6325, tok/sec: 102499.62, flops:89.76, batch-reuse:1
@ 2867 train 5.5358 , allloss: 5.5517, dt: 1285.38ms, fracRes: 0.5989, norm(attn): 0.1099, norm(output): 0.3105, norm(x): 1.1324, norm(y): 1.0064, norm:1.6661, tok/sec: 101971.69, flops:89.30, batch-reuse:1
@ 2868 train 5.6451 , allloss: 5.6611, dt: 1272.61ms, fracRes: 0.6016, norm(attn): 0.1074, norm(output): 0.3105, norm(x): 1.1366, norm(y): 1.0065, norm:1.4762, tok/sec: 102994.60, flops:90.19, batch-reuse:1
@ 2869 train 5.6256 , allloss: 5.6423, dt: 1264.49ms, fracRes: 0.6036, norm(attn): 0.1064, norm(output): 0.3027, norm(x): 1.1359, norm(y): 1.0065, norm:1.1297, tok/sec: 103656.15, flops:90.77, batch-reuse:1
@ 2870 train 5.6257 , allloss: 5.6424, dt: 1259.06ms, fracRes: 0.6022, norm(attn): 0.1084, norm(output): 0.3047, norm(x): 1.1329, norm(y): 1.0065, norm:1.6623, tok/sec: 104103.23, flops:91.16, batch-reuse:1
@ 2871 train 5.5875 , allloss: 5.6044, dt: 1271.04ms, fracRes: 0.6019, norm(attn): 0.1084, norm(output): 0.3066, norm(x): 1.1312, norm(y): 1.0065, norm:1.2014, tok/sec: 103121.89, flops:90.30, batch-reuse:1
@ 2872 train 5.6634 , allloss: 5.6799, dt: 1256.44ms, fracRes: 0.5997, norm(attn): 0.1104, norm(output): 0.3105, norm(x): 1.1278, norm(y): 1.0065, norm:1.4776, tok/sec: 104320.41, flops:91.35, batch-reuse:1
@ 2873 train 5.7294 , allloss: 5.7463, dt: 1286.28ms, fracRes: 0.6008, norm(attn): 0.1094, norm(output): 0.3086, norm(x): 1.1316, norm(y): 1.0064, norm:1.2269, tok/sec: 101899.97, flops:89.23, batch-reuse:1
@ 2874 train 5.6017 , allloss: 5.6177, dt: 1283.00ms, fracRes: 0.5983, norm(attn): 0.1118, norm(output): 0.3105, norm(x): 1.1343, norm(y): 1.0065, norm:1.2980, tok/sec: 102160.50, flops:89.46, batch-reuse:1
@ 2875 train 5.6637 , allloss: 5.6798, dt: 1277.72ms, fracRes: 0.5986, norm(attn): 0.1094, norm(output): 0.3105, norm(x): 1.1349, norm(y): 1.0064, norm:1.3741, tok/sec: 102583.05, flops:89.83, batch-reuse:1
@ 2876 train 5.6402 , allloss: 5.6570, dt: 1262.76ms, fracRes: 0.5977, norm(attn): 0.1099, norm(output): 0.3105, norm(x): 1.1305, norm(y): 1.0064, norm:1.1601, tok/sec: 103797.78, flops:90.89, batch-reuse:1
@ 2877 train 5.6408 , allloss: 5.6567, dt: 1254.83ms, fracRes: 0.5992, norm(attn): 0.1089, norm(output): 0.3105, norm(x): 1.1312, norm(y): 1.0064, norm:1.0536, tok/sec: 104453.94, flops:91.47, batch-reuse:1
@ 2878 train 5.5809 , allloss: 5.5964, dt: 1265.62ms, fracRes: 0.5987, norm(attn): 0.1099, norm(output): 0.3105, norm(x): 1.1306, norm(y): 1.0065, norm:1.1259, tok/sec: 103563.08, flops:90.69, batch-reuse:1
@ 2879 train 5.5882 , allloss: 5.6048, dt: 1270.57ms, fracRes: 0.6006, norm(attn): 0.1094, norm(output): 0.3086, norm(x): 1.1320, norm(y): 1.0066, norm:1.4611, tok/sec: 103159.90, flops:90.34, batch-reuse:1
@ 2880 train 5.5868 , allloss: 5.6034, dt: 1260.01ms, fracRes: 0.6003, norm(attn): 0.1089, norm(output): 0.3086, norm(x): 1.1309, norm(y): 1.0066, norm:1.4744, tok/sec: 104024.30, flops:91.09, batch-reuse:1
@ 2881 train 5.5833 , allloss: 5.5992, dt: 1263.29ms, fracRes: 0.6000, norm(attn): 0.1089, norm(output): 0.3047, norm(x): 1.1324, norm(y): 1.0065, norm:1.5922, tok/sec: 103754.61, flops:90.86, batch-reuse:1
@ 2882 train 5.5375 , allloss: 5.5536, dt: 1282.87ms, fracRes: 0.5991, norm(attn): 0.1094, norm(output): 0.3066, norm(x): 1.1278, norm(y): 1.0065, norm:0.9259, tok/sec: 102170.91, flops:89.47, batch-reuse:1
@ 2883 train 5.5904 , allloss: 5.6079, dt: 1273.64ms, fracRes: 0.5989, norm(attn): 0.1113, norm(output): 0.3086, norm(x): 1.1224, norm(y): 1.0064, norm:1.3694, tok/sec: 102911.00, flops:90.12, batch-reuse:1
@ 2884 train 5.4965 , allloss: 5.5127, dt: 1280.02ms, fracRes: 0.5986, norm(attn): 0.1118, norm(output): 0.3086, norm(x): 1.1239, norm(y): 1.0065, norm:1.4241, tok/sec: 102398.25, flops:89.67, batch-reuse:1
@ 2885 train 5.4842 , allloss: 5.4998, dt: 1268.04ms, fracRes: 0.5992, norm(attn): 0.1099, norm(output): 0.3047, norm(x): 1.1271, norm(y): 1.0065, norm:1.2058, tok/sec: 103366.14, flops:90.52, batch-reuse:1
@ 2886 train 5.5429 , allloss: 5.5602, dt: 1260.88ms, fracRes: 0.6003, norm(attn): 0.1104, norm(output): 0.3086, norm(x): 1.1344, norm(y): 1.0066, norm:1.0902, tok/sec: 103952.80, flops:91.03, batch-reuse:1
@ 2887 train 5.5612 , allloss: 5.5777, dt: 1274.71ms, fracRes: 0.6016, norm(attn): 0.1089, norm(output): 0.3047, norm(x): 1.1331, norm(y): 1.0066, norm:1.0801, tok/sec: 102824.85, flops:90.04, batch-reuse:1
@ 2888 train 5.5142 , allloss: 5.5301, dt: 1272.29ms, fracRes: 0.6007, norm(attn): 0.1079, norm(output): 0.3047, norm(x): 1.1341, norm(y): 1.0066, norm:1.5036, tok/sec: 103020.29, flops:90.21, batch-reuse:1
@ 2889 train 5.5191 , allloss: 5.5355, dt: 1290.74ms, fracRes: 0.6001, norm(attn): 0.1094, norm(output): 0.3066, norm(x): 1.1321, norm(y): 1.0065, norm:1.3864, tok/sec: 101547.67, flops:88.92, batch-reuse:1
@ 2890 train 5.5700 , allloss: 5.5858, dt: 1260.97ms, fracRes: 0.5998, norm(attn): 0.1094, norm(output): 0.3066, norm(x): 1.1277, norm(y): 1.0065, norm:1.4227, tok/sec: 103945.54, flops:91.02, batch-reuse:1
@ 2891 train 5.5219 , allloss: 5.5385, dt: 1264.68ms, fracRes: 0.5989, norm(attn): 0.1094, norm(output): 0.3066, norm(x): 1.1236, norm(y): 1.0065, norm:1.3084, tok/sec: 103640.53, flops:90.76, batch-reuse:1
@ 2892 train 5.4861 , allloss: 5.5077, dt: 1271.74ms, fracRes: 0.5998, norm(attn): 0.1094, norm(output): 0.3047, norm(x): 1.1227, norm(y): 1.0065, norm:1.3079, tok/sec: 103064.77, flops:90.25, batch-reuse:1
@ 2893 train 5.4998 , allloss: 5.5167, dt: 1270.42ms, fracRes: 0.5997, norm(attn): 0.1099, norm(output): 0.3047, norm(x): 1.1258, norm(y): 1.0066, norm:1.2859, tok/sec: 103172.44, flops:90.35, batch-reuse:1
@ 2894 train 5.4982 , allloss: 5.5152, dt: 1265.65ms, fracRes: 0.5986, norm(attn): 0.1113, norm(output): 0.3066, norm(x): 1.1190, norm(y): 1.0066, norm:1.4725, tok/sec: 103560.92, flops:90.69, batch-reuse:1
@ 2895 train 5.6499 , allloss: 5.6679, dt: 1272.28ms, fracRes: 0.6001, norm(attn): 0.1104, norm(output): 0.3066, norm(x): 1.1236, norm(y): 1.0065, norm:1.3947, tok/sec: 103021.74, flops:90.21, batch-reuse:1
@ 2896 train 5.6089 , allloss: 5.6261, dt: 1292.03ms, fracRes: 0.6007, norm(attn): 0.1094, norm(output): 0.3027, norm(x): 1.1297, norm(y): 1.0066, norm:1.5684, tok/sec: 101446.55, flops:88.84, batch-reuse:1
@ 2897 train 5.5468 , allloss: 5.5632, dt: 1316.36ms, fracRes: 0.6004, norm(attn): 0.1084, norm(output): 0.3027, norm(x): 1.1266, norm(y): 1.0066, norm:1.3197, tok/sec: 99571.33, flops:87.19, batch-reuse:1
@ 2898 train 5.5492 , allloss: 5.5657, dt: 1309.41ms, fracRes: 0.5998, norm(attn): 0.1099, norm(output): 0.3027, norm(x): 1.1194, norm(y): 1.0065, norm:1.1876, tok/sec: 100099.75, flops:87.66, batch-reuse:1
@ 2899 train 5.5656 , allloss: 5.5826, dt: 1263.14ms, fracRes: 0.5998, norm(attn): 0.1094, norm(output): 0.3047, norm(x): 1.1175, norm(y): 1.0065, norm:1.9198, tok/sec: 103767.06, flops:90.87, batch-reuse:1
@ 2900 train 5.5456 , allloss: 5.5629, dt: 1263.93ms, fracRes: 0.5998, norm(attn): 0.1104, norm(output): 0.3027, norm(x): 1.1143, norm(y): 1.0064, norm:1.2108, tok/sec: 103702.00, flops:90.81, batch-reuse:1
@ 2901 train 5.5066 , allloss: 5.5232, dt: 1262.58ms, fracRes: 0.5987, norm(attn): 0.1113, norm(output): 0.3008, norm(x): 1.1143, norm(y): 1.0066, norm:1.5120, tok/sec: 103813.03, flops:90.91, batch-reuse:1
@ 2902 train 5.5713 , allloss: 5.5884, dt: 1281.53ms, fracRes: 0.5992, norm(attn): 0.1118, norm(output): 0.3027, norm(x): 1.1124, norm(y): 1.0065, norm:1.6638, tok/sec: 102277.43, flops:89.56, batch-reuse:1
@ 2903 train 5.6743 , allloss: 5.6917, dt: 1257.28ms, fracRes: 0.5993, norm(attn): 0.1118, norm(output): 0.3047, norm(x): 1.1121, norm(y): 1.0065, norm:1.1287, tok/sec: 104250.46, flops:91.29, batch-reuse:1
@ 2904 train 5.4988 , allloss: 5.5166, dt: 1264.02ms, fracRes: 0.5984, norm(attn): 0.1108, norm(output): 0.3066, norm(x): 1.1149, norm(y): 1.0064, norm:1.9241, tok/sec: 103694.56, flops:90.80, batch-reuse:1
@ 2905 train 5.7534 , allloss: 5.7700, dt: 1255.48ms, fracRes: 0.6019, norm(attn): 0.1099, norm(output): 0.3027, norm(x): 1.1248, norm(y): 1.0065, norm:1.2657, tok/sec: 104399.77, flops:91.42, batch-reuse:1
@ 2906 train 5.4987 , allloss: 5.5148, dt: 1264.42ms, fracRes: 0.6006, norm(attn): 0.1094, norm(output): 0.3047, norm(x): 1.1247, norm(y): 1.0066, norm:2.0777, tok/sec: 103661.38, flops:90.77, batch-reuse:1
@ 2907 train 5.6024 , allloss: 5.6184, dt: 1272.77ms, fracRes: 0.6020, norm(attn): 0.1079, norm(output): 0.3008, norm(x): 1.1253, norm(y): 1.0066, norm:1.5627, tok/sec: 102981.50, flops:90.18, batch-reuse:1
@ 2908 train 5.5029 , allloss: 5.5196, dt: 1275.81ms, fracRes: 0.5997, norm(attn): 0.1099, norm(output): 0.3047, norm(x): 1.1187, norm(y): 1.0066, norm:1.6586, tok/sec: 102736.34, flops:89.96, batch-reuse:1
@ 2909 train 5.5880 , allloss: 5.6059, dt: 1283.75ms, fracRes: 0.5994, norm(attn): 0.1104, norm(output): 0.3027, norm(x): 1.1172, norm(y): 1.0065, norm:1.5882, tok/sec: 102100.76, flops:89.41, batch-reuse:1
@ 2910 train 5.5967 , allloss: 5.6145, dt: 1283.35ms, fracRes: 0.5979, norm(attn): 0.1147, norm(output): 0.3086, norm(x): 1.1153, norm(y): 1.0065, norm:1.1408, tok/sec: 102132.91, flops:89.44, batch-reuse:1
@ 2911 train 5.4869 , allloss: 5.5044, dt: 1254.55ms, fracRes: 0.5979, norm(attn): 0.1152, norm(output): 0.3086, norm(x): 1.1126, norm(y): 1.0066, norm:1.5171, tok/sec: 104476.93, flops:91.49, batch-reuse:1
@ 2912 train 5.5898 , allloss: 5.6071, dt: 1271.29ms, fracRes: 0.6013, norm(attn): 0.1099, norm(output): 0.3008, norm(x): 1.1185, norm(y): 1.0066, norm:1.0401, tok/sec: 103101.88, flops:90.28, batch-reuse:1
@ 2913 train 5.5257 , allloss: 5.5419, dt: 1285.88ms, fracRes: 0.6011, norm(attn): 0.1084, norm(output): 0.3008, norm(x): 1.1234, norm(y): 1.0066, norm:1.4141, tok/sec: 101932.07, flops:89.26, batch-reuse:1
@ 2914 train 5.4684 , allloss: 5.4846, dt: 1250.19ms, fracRes: 0.5994, norm(attn): 0.1089, norm(output): 0.3047, norm(x): 1.1190, norm(y): 1.0065, norm:1.3170, tok/sec: 104841.54, flops:91.81, batch-reuse:1
@ 2915 train 5.5002 , allloss: 5.5171, dt: 1268.37ms, fracRes: 0.5988, norm(attn): 0.1108, norm(output): 0.3027, norm(x): 1.1177, norm(y): 1.0066, norm:1.3486, tok/sec: 103338.94, flops:90.49, batch-reuse:1
@ 2916 train 5.5557 , allloss: 5.5742, dt: 1269.57ms, fracRes: 0.6005, norm(attn): 0.1104, norm(output): 0.3008, norm(x): 1.1189, norm(y): 1.0066, norm:1.5900, tok/sec: 103240.90, flops:90.41, batch-reuse:1
@ 2917 train 5.5622 , allloss: 5.5796, dt: 1288.62ms, fracRes: 0.6010, norm(attn): 0.1094, norm(output): 0.3047, norm(x): 1.1256, norm(y): 1.0065, norm:1.1397, tok/sec: 101715.16, flops:89.07, batch-reuse:1
@ 2918 train 5.6042 , allloss: 5.6205, dt: 1269.10ms, fracRes: 0.6009, norm(attn): 0.1089, norm(output): 0.3027, norm(x): 1.1273, norm(y): 1.0065, norm:1.6255, tok/sec: 103279.80, flops:90.44, batch-reuse:1
@ 2919 train 5.5161 , allloss: 5.5331, dt: 1262.20ms, fracRes: 0.6001, norm(attn): 0.1094, norm(output): 0.3027, norm(x): 1.1217, norm(y): 1.0066, norm:1.5653, tok/sec: 103844.37, flops:90.94, batch-reuse:1
@ 2920 train 5.6033 , allloss: 5.6206, dt: 1246.54ms, fracRes: 0.5988, norm(attn): 0.1099, norm(output): 0.3027, norm(x): 1.1150, norm(y): 1.0065, norm:1.2765, tok/sec: 105148.91, flops:92.08, batch-reuse:1
@ 2921 train 5.5267 , allloss: 5.5436, dt: 1240.80ms, fracRes: 0.5991, norm(attn): 0.1113, norm(output): 0.3027, norm(x): 1.1195, norm(y): 1.0065, norm:1.3108, tok/sec: 105635.20, flops:92.50, batch-reuse:1
@ 2922 train 5.5007 , allloss: 5.5181, dt: 1268.98ms, fracRes: 0.6005, norm(attn): 0.1094, norm(output): 0.3047, norm(x): 1.1250, norm(y): 1.0065, norm:1.3423, tok/sec: 103289.23, flops:90.45, batch-reuse:1
@ 2923 train 5.4939 , allloss: 5.5115, dt: 1280.43ms, fracRes: 0.6003, norm(attn): 0.1099, norm(output): 0.3027, norm(x): 1.1245, norm(y): 1.0065, norm:0.9960, tok/sec: 102365.61, flops:89.64, batch-reuse:1
@ 2924 train 5.5622 , allloss: 5.5801, dt: 1266.61ms, fracRes: 0.5994, norm(attn): 0.1113, norm(output): 0.3086, norm(x): 1.1243, norm(y): 1.0065, norm:1.4592, tok/sec: 103482.92, flops:90.62, batch-reuse:1
@ 2925 train 5.7173 , allloss: 5.7360, dt: 1254.04ms, fracRes: 0.6017, norm(attn): 0.1104, norm(output): 0.3008, norm(x): 1.1220, norm(y): 1.0065, norm:1.3529, tok/sec: 104519.99, flops:91.53, batch-reuse:1
@ 2926 train 5.5139 , allloss: 5.5312, dt: 1250.31ms, fracRes: 0.6000, norm(attn): 0.1099, norm(output): 0.3027, norm(x): 1.1243, norm(y): 1.0066, norm:1.3619, tok/sec: 104831.31, flops:91.80, batch-reuse:1
@ 2927 train 5.4576 , allloss: 5.4748, dt: 1258.89ms, fracRes: 0.6017, norm(attn): 0.1089, norm(output): 0.3008, norm(x): 1.1274, norm(y): 1.0066, norm:1.4213, tok/sec: 104117.01, flops:91.17, batch-reuse:1
@ 2928 train 5.4826 , allloss: 5.5003, dt: 1255.20ms, fracRes: 0.6006, norm(attn): 0.1094, norm(output): 0.3008, norm(x): 1.1246, norm(y): 1.0066, norm:1.3629, tok/sec: 104423.29, flops:91.44, batch-reuse:1
@ 2929 train 5.4732 , allloss: 5.4909, dt: 1250.03ms, fracRes: 0.5993, norm(attn): 0.1113, norm(output): 0.3027, norm(x): 1.1173, norm(y): 1.0066, norm:1.2320, tok/sec: 104854.72, flops:91.82, batch-reuse:1
@ 2930 train 5.4890 , allloss: 5.5059, dt: 1255.87ms, fracRes: 0.5992, norm(attn): 0.1104, norm(output): 0.3008, norm(x): 1.1124, norm(y): 1.0066, norm:1.5815, tok/sec: 104367.34, flops:91.39, batch-reuse:1
@ 2931 train 5.4959 , allloss: 5.5141, dt: 1286.18ms, fracRes: 0.5997, norm(attn): 0.1104, norm(output): 0.3008, norm(x): 1.1130, norm(y): 1.0066, norm:1.3363, tok/sec: 101908.24, flops:89.24, batch-reuse:1
@ 2932 train 5.4212 , allloss: 5.4388, dt: 1273.46ms, fracRes: 0.6009, norm(attn): 0.1099, norm(output): 0.3008, norm(x): 1.1142, norm(y): 1.0066, norm:1.3710, tok/sec: 102925.84, flops:90.13, batch-reuse:1
@ 2933 train 5.4905 , allloss: 5.5070, dt: 1283.01ms, fracRes: 0.6022, norm(attn): 0.1089, norm(output): 0.2988, norm(x): 1.1197, norm(y): 1.0067, norm:1.8707, tok/sec: 102159.95, flops:89.46, batch-reuse:1
@ 2934 train 5.5384 , allloss: 5.5550, dt: 1266.45ms, fracRes: 0.6006, norm(attn): 0.1094, norm(output): 0.3027, norm(x): 1.1187, norm(y): 1.0066, norm:1.4234, tok/sec: 103495.76, flops:90.63, batch-reuse:1
@ 2935 train 5.4445 , allloss: 5.4627, dt: 1284.16ms, fracRes: 0.5981, norm(attn): 0.1108, norm(output): 0.3027, norm(x): 1.1089, norm(y): 1.0065, norm:1.5539, tok/sec: 102068.48, flops:89.38, batch-reuse:1
@ 2936 train 5.3732 , allloss: 5.3905, dt: 1269.06ms, fracRes: 0.5966, norm(attn): 0.1143, norm(output): 0.3047, norm(x): 1.1081, norm(y): 1.0066, norm:1.3109, tok/sec: 103282.89, flops:90.44, batch-reuse:1
@ 2937 train 5.4392 , allloss: 5.4559, dt: 1268.51ms, fracRes: 0.5974, norm(attn): 0.1128, norm(output): 0.3027, norm(x): 1.1097, norm(y): 1.0066, norm:1.4040, tok/sec: 103327.83, flops:90.48, batch-reuse:1
@ 2938 train 5.4529 , allloss: 5.4704, dt: 1267.07ms, fracRes: 0.6002, norm(attn): 0.1104, norm(output): 0.3008, norm(x): 1.1097, norm(y): 1.0066, norm:1.2031, tok/sec: 103445.15, flops:90.59, batch-reuse:1
@ 2939 train 5.4696 , allloss: 5.4859, dt: 1267.24ms, fracRes: 0.6011, norm(attn): 0.1099, norm(output): 0.3008, norm(x): 1.1174, norm(y): 1.0067, norm:1.6321, tok/sec: 103431.42, flops:90.57, batch-reuse:1
@ 2940 train 5.4500 , allloss: 5.4666, dt: 1262.90ms, fracRes: 0.6014, norm(attn): 0.1089, norm(output): 0.2988, norm(x): 1.1159, norm(y): 1.0067, norm:1.2568, tok/sec: 103786.18, flops:90.88, batch-reuse:1
@ 2941 train 5.3914 , allloss: 5.4082, dt: 1269.09ms, fracRes: 0.6010, norm(attn): 0.1094, norm(output): 0.3008, norm(x): 1.1166, norm(y): 1.0067, norm:1.6471, tok/sec: 103280.35, flops:90.44, batch-reuse:1
@ 2942 train 5.4513 , allloss: 5.4676, dt: 1284.87ms, fracRes: 0.6006, norm(attn): 0.1094, norm(output): 0.2969, norm(x): 1.1126, norm(y): 1.0066, norm:1.3118, tok/sec: 102011.77, flops:89.33, batch-reuse:1
@ 2943 train 5.4883 , allloss: 5.5054, dt: 1288.48ms, fracRes: 0.5998, norm(attn): 0.1094, norm(output): 0.3008, norm(x): 1.1133, norm(y): 1.0066, norm:1.6285, tok/sec: 101726.04, flops:89.08, batch-reuse:1
@ 2944 train 5.4878 , allloss: 5.5051, dt: 1272.11ms, fracRes: 0.5984, norm(attn): 0.1104, norm(output): 0.3008, norm(x): 1.1104, norm(y): 1.0066, norm:1.0494, tok/sec: 103034.96, flops:90.23, batch-reuse:1
@ 2945 train 5.4772 , allloss: 5.4950, dt: 1259.57ms, fracRes: 0.5977, norm(attn): 0.1123, norm(output): 0.3008, norm(x): 1.1069, norm(y): 1.0066, norm:1.8309, tok/sec: 104060.78, flops:91.12, batch-reuse:1
@ 2946 train 5.3993 , allloss: 5.4167, dt: 1279.94ms, fracRes: 0.5971, norm(attn): 0.1147, norm(output): 0.3027, norm(x): 1.1072, norm(y): 1.0066, norm:1.3278, tok/sec: 102404.92, flops:89.67, batch-reuse:1
@ 2947 train 5.4503 , allloss: 5.4679, dt: 1266.09ms, fracRes: 0.5984, norm(attn): 0.1123, norm(output): 0.3008, norm(x): 1.1075, norm(y): 1.0066, norm:1.5118, tok/sec: 103525.27, flops:90.66, batch-reuse:1
@ 2948 train 5.3787 , allloss: 5.3950, dt: 1256.85ms, fracRes: 0.5991, norm(attn): 0.1108, norm(output): 0.3008, norm(x): 1.1090, norm(y): 1.0067, norm:1.5301, tok/sec: 104285.82, flops:91.32, batch-reuse:1
@ 2949 train 5.3889 , allloss: 5.4063, dt: 1241.49ms, fracRes: 0.5998, norm(attn): 0.1089, norm(output): 0.2988, norm(x): 1.1065, norm(y): 1.0067, norm:1.3279, tok/sec: 105576.64, flops:92.45, batch-reuse:1
@ 2950 train 5.5740 , allloss: 5.5920, dt: 1266.50ms, fracRes: 0.6015, norm(attn): 0.1094, norm(output): 0.3008, norm(x): 1.1078, norm(y): 1.0066, norm:1.2410, tok/sec: 103491.26, flops:90.63, batch-reuse:1
@ 2951 train 5.3805 , allloss: 5.3980, dt: 1286.33ms, fracRes: 0.6000, norm(attn): 0.1099, norm(output): 0.3008, norm(x): 1.1081, norm(y): 1.0066, norm:1.2011, tok/sec: 101896.40, flops:89.23, batch-reuse:1
@ 2952 train 5.5057 , allloss: 5.5213, dt: 1285.20ms, fracRes: 0.6000, norm(attn): 0.1099, norm(output): 0.2988, norm(x): 1.1144, norm(y): 1.0066, norm:2.0776, tok/sec: 101985.84, flops:89.31, batch-reuse:1
@ 2953 train 5.5101 , allloss: 5.5272, dt: 1256.57ms, fracRes: 0.6009, norm(attn): 0.1094, norm(output): 0.3008, norm(x): 1.1110, norm(y): 1.0066, norm:1.3849, tok/sec: 104308.97, flops:91.34, batch-reuse:1
@ 2954 train 5.4942 , allloss: 5.5116, dt: 1259.90ms, fracRes: 0.6010, norm(attn): 0.1104, norm(output): 0.3008, norm(x): 1.1125, norm(y): 1.0066, norm:1.2175, tok/sec: 104033.82, flops:91.10, batch-reuse:1
@ 2955 train 5.4604 , allloss: 5.4777, dt: 1261.15ms, fracRes: 0.6004, norm(attn): 0.1118, norm(output): 0.3008, norm(x): 1.1092, norm(y): 1.0067, norm:1.5372, tok/sec: 103930.57, flops:91.01, batch-reuse:1
@ 2956 train 5.3889 , allloss: 5.4061, dt: 1281.57ms, fracRes: 0.5993, norm(attn): 0.1113, norm(output): 0.3008, norm(x): 1.1066, norm(y): 1.0067, norm:1.3320, tok/sec: 102274.65, flops:89.56, batch-reuse:1
@ 2957 train 5.4138 , allloss: 5.4303, dt: 1275.57ms, fracRes: 0.6001, norm(attn): 0.1099, norm(output): 0.3008, norm(x): 1.1102, norm(y): 1.0067, norm:1.3347, tok/sec: 102755.73, flops:89.98, batch-reuse:1
@ 2958 train 5.4525 , allloss: 5.4695, dt: 1265.49ms, fracRes: 0.5996, norm(attn): 0.1099, norm(output): 0.2988, norm(x): 1.1027, norm(y): 1.0066, norm:1.3315, tok/sec: 103574.07, flops:90.70, batch-reuse:1
@ 2959 train 5.4420 , allloss: 5.4589, dt: 1285.48ms, fracRes: 0.5988, norm(attn): 0.1113, norm(output): 0.3008, norm(x): 1.0989, norm(y): 1.0066, norm:1.4033, tok/sec: 101963.37, flops:89.29, batch-reuse:1
@ 2960 train 5.4163 , allloss: 5.4326, dt: 1288.03ms, fracRes: 0.5987, norm(attn): 0.1108, norm(output): 0.3008, norm(x): 1.1006, norm(y): 1.0067, norm:0.9396, tok/sec: 101761.40, flops:89.11, batch-reuse:1
@ 2961 train 5.4170 , allloss: 5.4351, dt: 1302.58ms, fracRes: 0.5992, norm(attn): 0.1118, norm(output): 0.2988, norm(x): 1.0966, norm(y): 1.0067, norm:1.1897, tok/sec: 100625.29, flops:88.12, batch-reuse:1
@ 2962 train 5.3574 , allloss: 5.3754, dt: 1266.14ms, fracRes: 0.5988, norm(attn): 0.1118, norm(output): 0.3008, norm(x): 1.1012, norm(y): 1.0067, norm:1.1839, tok/sec: 103521.33, flops:90.65, batch-reuse:1
@ 2963 train 5.4681 , allloss: 5.4853, dt: 1265.45ms, fracRes: 0.5992, norm(attn): 0.1123, norm(output): 0.3008, norm(x): 1.1033, norm(y): 1.0066, norm:1.4700, tok/sec: 103577.73, flops:90.70, batch-reuse:1
@ 2964 train 5.4843 , allloss: 5.5023, dt: 1279.83ms, fracRes: 0.6008, norm(attn): 0.1108, norm(output): 0.3008, norm(x): 1.1040, norm(y): 1.0066, norm:1.2230, tok/sec: 102413.79, flops:89.68, batch-reuse:1
@ 2965 train 5.4747 , allloss: 5.4919, dt: 1298.00ms, fracRes: 0.6004, norm(attn): 0.1108, norm(output): 0.3008, norm(x): 1.1054, norm(y): 1.0066, norm:1.4406, tok/sec: 100979.78, flops:88.43, batch-reuse:1
@ 2966 train 5.4009 , allloss: 5.4178, dt: 1264.36ms, fracRes: 0.6003, norm(attn): 0.1104, norm(output): 0.2969, norm(x): 1.1018, norm(y): 1.0067, norm:1.3130, tok/sec: 103666.66, flops:90.78, batch-reuse:1
@ 2967 train 5.4171 , allloss: 5.4350, dt: 1271.05ms, fracRes: 0.5998, norm(attn): 0.1104, norm(output): 0.2969, norm(x): 1.0978, norm(y): 1.0066, norm:1.2006, tok/sec: 103121.18, flops:90.30, batch-reuse:1
@ 2968 train 5.4406 , allloss: 5.4576, dt: 1241.41ms, fracRes: 0.5999, norm(attn): 0.1104, norm(output): 0.2969, norm(x): 1.0998, norm(y): 1.0067, norm:1.6823, tok/sec: 105583.27, flops:92.46, batch-reuse:1
@ 2969 train 5.4229 , allloss: 5.4412, dt: 1265.52ms, fracRes: 0.6000, norm(attn): 0.1123, norm(output): 0.2969, norm(x): 1.0968, norm(y): 1.0067, norm:1.9322, tok/sec: 103571.80, flops:90.70, batch-reuse:1
@ 2970 train 5.4147 , allloss: 5.4332, dt: 1297.72ms, fracRes: 0.5995, norm(attn): 0.1147, norm(output): 0.2988, norm(x): 1.1005, norm(y): 1.0067, norm:1.2369, tok/sec: 101001.52, flops:88.45, batch-reuse:1
@ 2971 train 5.4567 , allloss: 5.4745, dt: 1260.32ms, fracRes: 0.5993, norm(attn): 0.1143, norm(output): 0.2988, norm(x): 1.0986, norm(y): 1.0067, norm:1.3773, tok/sec: 103998.93, flops:91.07, batch-reuse:1
@ 2972 train 5.3560 , allloss: 5.3733, dt: 1270.96ms, fracRes: 0.5987, norm(attn): 0.1133, norm(output): 0.3008, norm(x): 1.1003, norm(y): 1.0066, norm:1.2578, tok/sec: 103128.05, flops:90.31, batch-reuse:1
@ 2973 train 5.4630 , allloss: 5.4802, dt: 1272.61ms, fracRes: 0.6012, norm(attn): 0.1099, norm(output): 0.2969, norm(x): 1.1066, norm(y): 1.0067, norm:1.6109, tok/sec: 102994.42, flops:90.19, batch-reuse:1
@ 2974 train 5.3938 , allloss: 5.4103, dt: 1247.76ms, fracRes: 0.6019, norm(attn): 0.1084, norm(output): 0.2969, norm(x): 1.1095, norm(y): 1.0068, norm:1.5372, tok/sec: 105045.46, flops:91.99, batch-reuse:1
@ 2975 train 5.5016 , allloss: 5.5189, dt: 1272.08ms, fracRes: 0.6011, norm(attn): 0.1084, norm(output): 0.2969, norm(x): 1.1025, norm(y): 1.0067, norm:1.4783, tok/sec: 103037.24, flops:90.23, batch-reuse:1
@ 2976 train 5.5874 , allloss: 5.6050, dt: 1292.58ms, fracRes: 0.6007, norm(attn): 0.1099, norm(output): 0.2988, norm(x): 1.1007, norm(y): 1.0066, norm:1.0742, tok/sec: 101403.22, flops:88.80, batch-reuse:1
@ 2977 train 5.5722 , allloss: 5.5896, dt: 1279.85ms, fracRes: 0.5991, norm(attn): 0.1099, norm(output): 0.3008, norm(x): 1.0980, norm(y): 1.0066, norm:1.8594, tok/sec: 102411.71, flops:89.68, batch-reuse:1
@ 2978 train 5.6221 , allloss: 5.6405, dt: 1277.76ms, fracRes: 0.5994, norm(attn): 0.1138, norm(output): 0.3008, norm(x): 1.0973, norm(y): 1.0067, norm:1.3885, tok/sec: 102579.19, flops:89.83, batch-reuse:1
@ 2979 train 5.6088 , allloss: 5.6266, dt: 1254.71ms, fracRes: 0.5996, norm(attn): 0.1133, norm(output): 0.3008, norm(x): 1.0985, norm(y): 1.0066, norm:1.4277, tok/sec: 104463.57, flops:91.48, batch-reuse:1
@ 2980 train 5.5397 , allloss: 5.5576, dt: 1263.90ms, fracRes: 0.6004, norm(attn): 0.1138, norm(output): 0.2969, norm(x): 1.0991, norm(y): 1.0066, norm:1.9450, tok/sec: 103704.52, flops:90.81, batch-reuse:1
@ 2981 train 5.5295 , allloss: 5.5467, dt: 1272.88ms, fracRes: 0.6013, norm(attn): 0.1108, norm(output): 0.2969, norm(x): 1.1074, norm(y): 1.0066, norm:1.0647, tok/sec: 102972.72, flops:90.17, batch-reuse:1
@ 2982 train 5.6377 , allloss: 5.6552, dt: 1279.84ms, fracRes: 0.6019, norm(attn): 0.1094, norm(output): 0.2969, norm(x): 1.1054, norm(y): 1.0067, norm:1.7921, tok/sec: 102412.92, flops:89.68, batch-reuse:1
@ 2983 train 5.5840 , allloss: 5.6022, dt: 1264.07ms, fracRes: 0.6014, norm(attn): 0.1094, norm(output): 0.2969, norm(x): 1.0976, norm(y): 1.0066, norm:1.3608, tok/sec: 103690.54, flops:90.80, batch-reuse:1
@ 2984 train 5.5407 , allloss: 5.5581, dt: 1245.84ms, fracRes: 0.5995, norm(attn): 0.1094, norm(output): 0.2969, norm(x): 1.0919, norm(y): 1.0066, norm:2.1543, tok/sec: 105208.13, flops:92.13, batch-reuse:1
@ 2985 train 5.6092 , allloss: 5.6264, dt: 1275.19ms, fracRes: 0.5994, norm(attn): 0.1123, norm(output): 0.3008, norm(x): 1.0948, norm(y): 1.0066, norm:1.4832, tok/sec: 102786.15, flops:90.01, batch-reuse:1
@ 2986 train 5.5301 , allloss: 5.5471, dt: 1289.11ms, fracRes: 0.5990, norm(attn): 0.1143, norm(output): 0.3008, norm(x): 1.0936, norm(y): 1.0066, norm:1.4506, tok/sec: 101676.28, flops:89.04, batch-reuse:1
@ 2987 train 5.5723 , allloss: 5.5893, dt: 1281.48ms, fracRes: 0.6003, norm(attn): 0.1123, norm(output): 0.2969, norm(x): 1.0980, norm(y): 1.0066, norm:1.6746, tok/sec: 102281.69, flops:89.57, batch-reuse:1
@ 2988 train 5.7034 , allloss: 5.7203, dt: 1269.26ms, fracRes: 0.6015, norm(attn): 0.1108, norm(output): 0.2969, norm(x): 1.0987, norm(y): 1.0066, norm:1.3111, tok/sec: 103266.48, flops:90.43, batch-reuse:1
@ 2989 train 5.6117 , allloss: 5.6287, dt: 1269.40ms, fracRes: 0.6013, norm(attn): 0.1113, norm(output): 0.2949, norm(x): 1.1013, norm(y): 1.0066, norm:1.2367, tok/sec: 103255.25, flops:90.42, batch-reuse:1
@ 2990 train 5.6282 , allloss: 5.6457, dt: 1262.02ms, fracRes: 0.6012, norm(attn): 0.1104, norm(output): 0.2969, norm(x): 1.0991, norm(y): 1.0067, norm:1.4966, tok/sec: 103858.71, flops:90.95, batch-reuse:1
@ 2991 train 5.5477 , allloss: 5.5645, dt: 1278.79ms, fracRes: 0.6003, norm(attn): 0.1108, norm(output): 0.2969, norm(x): 1.0959, norm(y): 1.0066, norm:1.4325, tok/sec: 102496.91, flops:89.76, batch-reuse:1
@ 2992 train 5.5892 , allloss: 5.6059, dt: 1265.10ms, fracRes: 0.6006, norm(attn): 0.1104, norm(output): 0.2969, norm(x): 1.0959, norm(y): 1.0067, norm:1.2383, tok/sec: 103606.31, flops:90.73, batch-reuse:1
@ 2993 train 5.6497 , allloss: 5.6682, dt: 1248.01ms, fracRes: 0.6007, norm(attn): 0.1113, norm(output): 0.2949, norm(x): 1.0962, norm(y): 1.0066, norm:1.5084, tok/sec: 105024.69, flops:91.97, batch-reuse:1
@ 2994 train 5.6057 , allloss: 5.6230, dt: 1255.65ms, fracRes: 0.6004, norm(attn): 0.1133, norm(output): 0.3008, norm(x): 1.0961, norm(y): 1.0066, norm:1.5093, tok/sec: 104385.40, flops:91.41, batch-reuse:1
@ 2995 train 5.5259 , allloss: 5.5435, dt: 1263.52ms, fracRes: 0.6005, norm(attn): 0.1128, norm(output): 0.2988, norm(x): 1.1000, norm(y): 1.0067, norm:1.3620, tok/sec: 103735.38, flops:90.84, batch-reuse:1
@ 2996 train 5.5257 , allloss: 5.5439, dt: 1266.68ms, fracRes: 0.6006, norm(attn): 0.1128, norm(output): 0.2969, norm(x): 1.0979, norm(y): 1.0066, norm:1.4126, tok/sec: 103476.75, flops:90.61, batch-reuse:1
@ 2997 train 5.5785 , allloss: 5.5959, dt: 1296.20ms, fracRes: 0.6013, norm(attn): 0.1113, norm(output): 0.2949, norm(x): 1.0981, norm(y): 1.0066, norm:1.2378, tok/sec: 101120.05, flops:88.55, batch-reuse:1
@ 2998 train 5.5751 , allloss: 5.5924, dt: 1272.69ms, fracRes: 0.6016, norm(attn): 0.1104, norm(output): 0.2969, norm(x): 1.1001, norm(y): 1.0066, norm:0.9825, tok/sec: 102987.92, flops:90.19, batch-reuse:1
@ 2999 train 5.4678 , allloss: 5.4847, dt: 1264.92ms, fracRes: 0.6014, norm(attn): 0.1094, norm(output): 0.2969, norm(x): 1.0974, norm(y): 1.0066, norm:1.2391, tok/sec: 103620.55, flops:90.74, batch-reuse:1
@ 3000 train 5.6506 , allloss: 5.6674, dt: 1257.62ms, fracRes: 0.6025, norm(attn): 0.1094, norm(output): 0.2949, norm(x): 1.0983, norm(y): 1.0067, norm:1.5427, tok/sec: 104222.35, flops:91.27, batch-reuse:1
@ 3001 train 5.6366 , allloss: 5.6544, dt: 1258.99ms, fracRes: 0.5997, norm(attn): 0.1113, norm(output): 0.2969, norm(x): 1.0944, norm(y): 1.0067, norm:1.2402, tok/sec: 104109.16, flops:91.17, batch-reuse:1
@ 3002 train 5.5545 , allloss: 5.5749, dt: 1244.90ms, fracRes: 0.5989, norm(attn): 0.1143, norm(output): 0.2969, norm(x): 1.0828, norm(y): 1.0066, norm:1.4008, tok/sec: 105287.07, flops:92.20, batch-reuse:1
@ 3003 train 5.5892 , allloss: 5.6070, dt: 1271.50ms, fracRes: 0.5982, norm(attn): 0.1123, norm(output): 0.2969, norm(x): 1.0820, norm(y): 1.0066, norm:1.5970, tok/sec: 103084.92, flops:90.27, batch-reuse:1
@ 3004 train 5.6219 , allloss: 5.6387, dt: 1253.74ms, fracRes: 0.6012, norm(attn): 0.1094, norm(output): 0.2930, norm(x): 1.0903, norm(y): 1.0067, norm:1.3390, tok/sec: 104545.21, flops:91.55, batch-reuse:1
@ 3005 train 5.7931 , allloss: 5.8110, dt: 1238.42ms, fracRes: 0.6035, norm(attn): 0.1084, norm(output): 0.2930, norm(x): 1.0924, norm(y): 1.0066, norm:1.7607, tok/sec: 105838.23, flops:92.68, batch-reuse:1
@ 3006 train 5.5743 , allloss: 5.5911, dt: 1272.22ms, fracRes: 0.6020, norm(attn): 0.1094, norm(output): 0.2930, norm(x): 1.0955, norm(y): 1.0067, norm:1.5820, tok/sec: 103026.31, flops:90.22, batch-reuse:1
@ 3007 train 5.6163 , allloss: 5.6336, dt: 1275.51ms, fracRes: 0.6009, norm(attn): 0.1099, norm(output): 0.2969, norm(x): 1.0919, norm(y): 1.0067, norm:1.8826, tok/sec: 102760.59, flops:89.99, batch-reuse:1
@ 3008 train 5.5520 , allloss: 5.5696, dt: 1249.90ms, fracRes: 0.5983, norm(attn): 0.1157, norm(output): 0.2988, norm(x): 1.0840, norm(y): 1.0066, norm:1.3595, tok/sec: 104866.08, flops:91.83, batch-reuse:1
@ 3009 train 5.5373 , allloss: 5.5545, dt: 1270.75ms, fracRes: 0.5993, norm(attn): 0.1162, norm(output): 0.2969, norm(x): 1.0904, norm(y): 1.0067, norm:1.4249, tok/sec: 103145.75, flops:90.32, batch-reuse:1
@ 3010 train 5.6151 , allloss: 5.6325, dt: 1271.18ms, fracRes: 0.6009, norm(attn): 0.1133, norm(output): 0.2969, norm(x): 1.0925, norm(y): 1.0066, norm:1.2433, tok/sec: 103110.10, flops:90.29, batch-reuse:1
@ 3011 train 5.5822 , allloss: 5.5984, dt: 1257.71ms, fracRes: 0.6022, norm(attn): 0.1089, norm(output): 0.2949, norm(x): 1.1010, norm(y): 1.0067, norm:1.1365, tok/sec: 104214.45, flops:91.26, batch-reuse:1
@ 3012 train 5.6643 , allloss: 5.6808, dt: 1259.96ms, fracRes: 0.6038, norm(attn): 0.1074, norm(output): 0.2930, norm(x): 1.1037, norm(y): 1.0068, norm:1.7837, tok/sec: 104028.68, flops:91.10, batch-reuse:1
@ 3013 train 5.6258 , allloss: 5.6417, dt: 1268.80ms, fracRes: 0.6033, norm(attn): 0.1060, norm(output): 0.2891, norm(x): 1.0995, norm(y): 1.0068, norm:1.5411, tok/sec: 103304.00, flops:90.46, batch-reuse:1
@ 3014 train 5.5604 , allloss: 5.5774, dt: 1277.12ms, fracRes: 0.6034, norm(attn): 0.1069, norm(output): 0.2910, norm(x): 1.0976, norm(y): 1.0068, norm:1.0648, tok/sec: 102630.97, flops:89.87, batch-reuse:1
@ 3015 train 5.5762 , allloss: 5.5935, dt: 1285.90ms, fracRes: 0.6024, norm(attn): 0.1094, norm(output): 0.2930, norm(x): 1.0978, norm(y): 1.0068, norm:1.7011, tok/sec: 101930.52, flops:89.26, batch-reuse:1
@ 3016 train 5.5279 , allloss: 5.5447, dt: 1257.06ms, fracRes: 0.6012, norm(attn): 0.1104, norm(output): 0.2930, norm(x): 1.0927, norm(y): 1.0068, norm:1.4313, tok/sec: 104268.67, flops:91.31, batch-reuse:1
@ 3017 train 5.5494 , allloss: 5.5668, dt: 1251.48ms, fracRes: 0.6009, norm(attn): 0.1113, norm(output): 0.2930, norm(x): 1.0880, norm(y): 1.0067, norm:1.2695, tok/sec: 104733.23, flops:91.71, batch-reuse:1
@ 3018 train 5.5298 , allloss: 5.5471, dt: 1261.14ms, fracRes: 0.5989, norm(attn): 0.1152, norm(output): 0.2969, norm(x): 1.0874, norm(y): 1.0067, norm:1.2119, tok/sec: 103931.06, flops:91.01, batch-reuse:1
@ 3019 train 5.6952 , allloss: 5.7127, dt: 1267.23ms, fracRes: 0.5995, norm(attn): 0.1143, norm(output): 0.2969, norm(x): 1.0874, norm(y): 1.0066, norm:1.3782, tok/sec: 103431.70, flops:90.57, batch-reuse:1
@ 3020 train 5.4984 , allloss: 5.5150, dt: 1275.47ms, fracRes: 0.5994, norm(attn): 0.1123, norm(output): 0.2930, norm(x): 1.0883, norm(y): 1.0068, norm:1.3490, tok/sec: 102763.86, flops:89.99, batch-reuse:1
@ 3021 train 5.5027 , allloss: 5.5194, dt: 1296.41ms, fracRes: 0.6012, norm(attn): 0.1099, norm(output): 0.2930, norm(x): 1.0898, norm(y): 1.0068, norm:1.5214, tok/sec: 101103.62, flops:88.54, batch-reuse:1
@ 3022 train 5.6117 , allloss: 5.6289, dt: 1285.95ms, fracRes: 0.6026, norm(attn): 0.1094, norm(output): 0.2930, norm(x): 1.0901, norm(y): 1.0067, norm:1.3612, tok/sec: 101925.85, flops:89.26, batch-reuse:1
@ 3023 train 5.5992 , allloss: 5.6165, dt: 1255.24ms, fracRes: 0.6028, norm(attn): 0.1089, norm(output): 0.2930, norm(x): 1.0977, norm(y): 1.0067, norm:1.5266, tok/sec: 104419.60, flops:91.44, batch-reuse:1
@ 3024 train 5.5306 , allloss: 5.5481, dt: 1280.50ms, fracRes: 0.6025, norm(attn): 0.1094, norm(output): 0.2930, norm(x): 1.0971, norm(y): 1.0068, norm:1.6186, tok/sec: 102359.66, flops:89.63, batch-reuse:1
@ 3025 train 5.5196 , allloss: 5.5371, dt: 1262.95ms, fracRes: 0.6023, norm(attn): 0.1104, norm(output): 0.2910, norm(x): 1.0939, norm(y): 1.0068, norm:1.1683, tok/sec: 103782.22, flops:90.88, batch-reuse:1
@ 3026 train 5.6264 , allloss: 5.6442, dt: 1276.78ms, fracRes: 0.6022, norm(attn): 0.1123, norm(output): 0.2930, norm(x): 1.0907, norm(y): 1.0068, norm:1.3945, tok/sec: 102658.35, flops:89.90, batch-reuse:1
@ 3027 train 5.6014 , allloss: 5.6189, dt: 1259.82ms, fracRes: 0.6006, norm(attn): 0.1143, norm(output): 0.2949, norm(x): 1.0879, norm(y): 1.0067, norm:1.2159, tok/sec: 104040.56, flops:91.11, batch-reuse:1
@ 3028 train 5.5503 , allloss: 5.5675, dt: 1268.20ms, fracRes: 0.5990, norm(attn): 0.1152, norm(output): 0.2988, norm(x): 1.0876, norm(y): 1.0067, norm:1.4612, tok/sec: 103352.81, flops:90.50, batch-reuse:1
@ 3029 train 5.4448 , allloss: 5.4620, dt: 1271.21ms, fracRes: 0.5994, norm(attn): 0.1138, norm(output): 0.2969, norm(x): 1.0871, norm(y): 1.0067, norm:1.2548, tok/sec: 103108.26, flops:90.29, batch-reuse:1
@ 3030 train 5.4921 , allloss: 5.5091, dt: 1245.01ms, fracRes: 0.6009, norm(attn): 0.1108, norm(output): 0.2949, norm(x): 1.0885, norm(y): 1.0067, norm:1.3639, tok/sec: 105277.62, flops:92.19, batch-reuse:1
@ 3031 train 5.5071 , allloss: 5.5245, dt: 1280.60ms, fracRes: 0.6014, norm(attn): 0.1104, norm(output): 0.2930, norm(x): 1.0880, norm(y): 1.0068, norm:1.2647, tok/sec: 102352.34, flops:89.63, batch-reuse:1
@ 3032 train 5.5229 , allloss: 5.5395, dt: 1288.04ms, fracRes: 0.6008, norm(attn): 0.1094, norm(output): 0.2930, norm(x): 1.0889, norm(y): 1.0067, norm:1.3195, tok/sec: 101760.54, flops:89.11, batch-reuse:1
@ 3033 train 5.4940 , allloss: 5.5111, dt: 1268.64ms, fracRes: 0.6000, norm(attn): 0.1104, norm(output): 0.2930, norm(x): 1.0842, norm(y): 1.0067, norm:1.4820, tok/sec: 103316.60, flops:90.47, batch-reuse:1
@ 3034 train 5.5228 , allloss: 5.5400, dt: 1304.01ms, fracRes: 0.5991, norm(attn): 0.1123, norm(output): 0.2930, norm(x): 1.0803, norm(y): 1.0067, norm:1.0307, tok/sec: 100514.37, flops:88.02, batch-reuse:1
@ 3035 train 5.5821 , allloss: 5.5997, dt: 1297.08ms, fracRes: 0.6000, norm(attn): 0.1128, norm(output): 0.2949, norm(x): 1.0825, norm(y): 1.0067, norm:1.3987, tok/sec: 101051.46, flops:88.49, batch-reuse:1
@ 3036 train 5.4857 , allloss: 5.5038, dt: 1272.50ms, fracRes: 0.5993, norm(attn): 0.1147, norm(output): 0.2930, norm(x): 1.0841, norm(y): 1.0067, norm:1.1553, tok/sec: 103003.75, flops:90.20, batch-reuse:1
@ 3037 train 5.5392 , allloss: 5.5559, dt: 1263.02ms, fracRes: 0.6004, norm(attn): 0.1118, norm(output): 0.2949, norm(x): 1.0879, norm(y): 1.0067, norm:1.0474, tok/sec: 103776.56, flops:90.88, batch-reuse:1
@ 3038 train 5.5007 , allloss: 5.5176, dt: 1250.00ms, fracRes: 0.6000, norm(attn): 0.1113, norm(output): 0.2930, norm(x): 1.0838, norm(y): 1.0066, norm:1.4340, tok/sec: 104857.84, flops:91.82, batch-reuse:1
@ 3039 train 5.6138 , allloss: 5.6306, dt: 1270.67ms, fracRes: 0.6011, norm(attn): 0.1104, norm(output): 0.2930, norm(x): 1.0850, norm(y): 1.0066, norm:1.9480, tok/sec: 103151.61, flops:90.33, batch-reuse:1
@ 3040 train 5.5619 , allloss: 5.5787, dt: 1261.44ms, fracRes: 0.6006, norm(attn): 0.1113, norm(output): 0.2910, norm(x): 1.0838, norm(y): 1.0068, norm:2.0485, tok/sec: 103907.02, flops:90.99, batch-reuse:1
@ 3041 train 5.5834 , allloss: 5.6010, dt: 1247.30ms, fracRes: 0.6004, norm(attn): 0.1123, norm(output): 0.2930, norm(x): 1.0878, norm(y): 1.0068, norm:1.4787, tok/sec: 105084.25, flops:92.02, batch-reuse:1
@ 3042 train 5.4526 , allloss: 5.4722, dt: 1265.27ms, fracRes: 0.5985, norm(attn): 0.1138, norm(output): 0.2930, norm(x): 1.0800, norm(y): 1.0067, norm:1.5555, tok/sec: 103592.08, flops:90.71, batch-reuse:1
@ 3043 train 5.4838 , allloss: 5.5026, dt: 1288.59ms, fracRes: 0.5986, norm(attn): 0.1147, norm(output): 0.2969, norm(x): 1.0810, norm(y): 1.0067, norm:1.5237, tok/sec: 101717.14, flops:89.07, batch-reuse:1
@ 3044 train 5.5216 , allloss: 5.5395, dt: 1273.22ms, fracRes: 0.5992, norm(attn): 0.1147, norm(output): 0.2969, norm(x): 1.0857, norm(y): 1.0068, norm:1.3874, tok/sec: 102945.51, flops:90.15, batch-reuse:1
@ 3045 train 5.6304 , allloss: 5.6480, dt: 1267.35ms, fracRes: 0.6007, norm(attn): 0.1143, norm(output): 0.2949, norm(x): 1.0838, norm(y): 1.0066, norm:1.3638, tok/sec: 103422.03, flops:90.57, batch-reuse:1
@ 3046 train 5.5092 , allloss: 5.5256, dt: 1258.41ms, fracRes: 0.6017, norm(attn): 0.1138, norm(output): 0.2930, norm(x): 1.0890, norm(y): 1.0067, norm:1.6517, tok/sec: 104156.93, flops:91.21, batch-reuse:1
@ 3047 train 5.6920 , allloss: 5.7091, dt: 1259.37ms, fracRes: 0.6034, norm(attn): 0.1104, norm(output): 0.2930, norm(x): 1.0985, norm(y): 1.0067, norm:1.5498, tok/sec: 104077.29, flops:91.14, batch-reuse:1
@ 3048 train 5.5119 , allloss: 5.5288, dt: 1271.59ms, fracRes: 0.6021, norm(attn): 0.1094, norm(output): 0.2949, norm(x): 1.0958, norm(y): 1.0067, norm:1.7159, tok/sec: 103077.56, flops:90.26, batch-reuse:1
@ 3049 train 5.6281 , allloss: 5.6446, dt: 1288.71ms, fracRes: 0.6017, norm(attn): 0.1094, norm(output): 0.2949, norm(x): 1.0963, norm(y): 1.0067, norm:1.3217, tok/sec: 101707.88, flops:89.06, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4727,     0.5273,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5938,     0.1416,     0.2637,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2178,     0.1260,     0.4688,     0.1885,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2012,     0.0330,     0.3086,     0.1816,     0.2754,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0913,     0.0393,     0.0574,     0.1357,     0.4746,     0.2021,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1895,     0.1416,     0.0767,     0.1104,     0.2793,     0.1436,     0.0596,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1934,     0.4180,     0.0610,     0.0376,     0.0510,     0.0508,     0.0059,     0.1816,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1079,     0.0408,     0.0723,     0.0811,     0.1914,     0.0728,     0.1357,     0.0947,     0.2021,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1035,     0.1113,     0.1216,     0.0391,     0.0293,     0.0315,     0.0238,     0.2334,     0.0581,     0.2480,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1157,     0.0422,     0.2119,     0.0248,     0.0334,     0.0226,     0.0087,     0.2012,     0.0508,     0.2637,     0.0253,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0498,     0.0359,     0.0371,     0.1348,     0.0315,     0.0962,     0.3633,     0.1416,     0.0527,     0.0155,     0.0249,     0.0183,     0.0000,     0.0000,     0.0000],
        [    0.0566,     0.1670,     0.0138,     0.0093,     0.0405,     0.0309,     0.0035,     0.0266,     0.0591,     0.1680,     0.0786,     0.1045,     0.2412,     0.0000,     0.0000],
        [    0.0752,     0.0596,     0.0437,     0.0435,     0.1387,     0.0530,     0.0688,     0.0491,     0.1196,     0.0972,     0.0815,     0.0276,     0.0598,     0.0830,     0.0000],
        [    0.0444,     0.0552,     0.0579,     0.0120,     0.0054,     0.0045,     0.0008,     0.0830,     0.0024,     0.1245,     0.0048,     0.1670,     0.4316,     0.0017,     0.0034]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0013, -0.0076,  0.0040,  ..., -0.0360,  0.0196, -0.0020],
        [-0.0314,  0.0121, -0.0132,  ..., -0.0026,  0.0053,  0.0196],
        [ 0.0190,  0.0242, -0.0067,  ..., -0.0229,  0.0213, -0.0205],
        ...,
        [ 0.0256,  0.0228,  0.0166,  ..., -0.0350,  0.0117,  0.0156],
        [-0.0465, -0.0003, -0.0381,  ...,  0.0075, -0.0003, -0.0099],
        [-0.0243,  0.0062, -0.0310,  ..., -0.0192, -0.0119, -0.0051]], device='cuda:0', requires_grad=True)
K: tensor([ 1.2109,  0.2656, -0.8750, -0.1582, -0.0139,  1.0469,  0.7656,  0.4492,  0.2412,  0.0942,  0.7852, -0.2432, -1.0234,  0.3965,  0.3027, -0.2734,  0.2217, -0.3516, -0.0483,  0.6094,  0.2598,  0.3047,  0.3262, -0.6016,  0.5156,  0.7812, -1.2422, -0.2852,  1.2031, -0.5742,  1.7422,  0.3965,
         0.0942, -1.2266,  1.4375,  1.2188, -0.8789, -0.0791, -1.1250, -1.5000,  0.0273, -0.7539, -0.7734,  0.7734, -0.8438,  0.4648, -0.5469,  1.7266, -0.1309, -0.2393,  0.7930, -0.5156, -1.3906,  0.8906,  0.6719, -0.1030, -0.0400, -0.1650,  1.2266, -0.1670, -0.4023, -0.4492,  0.1953,  0.4375],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0196, -0.0036, -0.0153,  ...,  0.0067, -0.0070, -0.0190],
        [ 0.0149, -0.0161,  0.0067,  ...,  0.0195,  0.0300, -0.0036],
        [-0.0394,  0.0421,  0.0050,  ..., -0.0354, -0.0272, -0.0349],
        ...,
        [ 0.0148,  0.0212,  0.0189,  ...,  0.0111,  0.0147,  0.0199],
        [ 0.0251, -0.0114,  0.0487,  ...,  0.0368,  0.0127,  0.0344],
        [ 0.0120, -0.0172,  0.0206,  ..., -0.0141,  0.0215, -0.0108]], device='cuda:0', requires_grad=True)
Q: tensor([-0.7617, -0.3613, -0.6289, -0.8281,  0.6953, -0.5820, -1.8594, -0.0459, -0.0991,  0.5078, -0.1045, -0.7266, -0.2578, -0.8750, -0.7812, -0.8633, -1.6641,  0.2344, -0.2773,  0.5938,  0.4258, -0.4668,  0.3652,  0.4180,  0.0581, -0.6211,  0.3828, -0.6992, -1.0547,  1.5469, -1.6875,  0.5586,
        -0.5938, -0.0603, -0.5820, -0.5703,  0.9844,  0.6797, -0.0547,  2.2344,  0.5664, -0.1777,  0.9375,  1.0781,  0.0903, -0.1631,  0.5391, -1.0078, -0.1270,  0.2773, -2.7031, -1.0469,  0.2969, -1.0625, -0.7305, -1.1641,  0.1216, -0.7461, -0.5547, -1.1250,  1.4688,  1.0391, -0.8242,  0.3770],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.1104, -0.2773, -0.9609, -2.0781, -1.5703, -3.1562,  0.9609, -2.1719,  0.4824, -1.9453,  0.9141,  2.0938, -2.6719, -1.7344],
        [ 0.0000, -1.4297, -0.8125,  0.4434,  0.7969,  0.3926,  0.2520, -1.6172,  0.2080, -0.4980,  1.4688, -0.7891, -1.7188,  1.2266,  0.9258],
        [ 0.0000, -0.5508,  0.7656, -0.1465, -1.8984, -0.8984, -1.7500,  1.3281, -2.4375,  0.0198, -1.6562,  1.2422,  1.6016, -2.5469, -0.6523],
        [ 0.0000, -1.8047,  0.4297, -0.1001,  0.3145, -0.4141, -0.6445,  0.0938, -0.1211,  0.3047, -0.4785, -0.5703, -0.4473,  0.1602, -0.5352],
        [ 0.0000, -0.8438, -0.4648,  0.3984,  1.6484,  0.7930,  1.8047, -1.1172,  1.5859, -1.5312,  1.5781, -1.2266, -2.4219,  1.9375,  1.8594],
        [ 0.0000, -0.2910, -0.9023, -0.5430,  0.3848, -0.2754, -1.1562, -2.0469, -0.4746,  0.3438,  1.0938,  0.0698, -1.2969, -0.2061, -0.2119],
        [ 0.0000,  0.7734, -1.1562, -1.6328, -1.3359, -1.3359, -3.4844, -0.0598, -1.0391,  1.0000, -0.5156,  0.8711,  1.3203, -1.5859, -1.8359],
        [ 0.0000, -0.9727, -0.4004, -0.2871,  0.5742, -0.3965,  0.2295, -0.1299,  0.6250,  0.0359, -0.2227, -0.8945, -0.6055,  0.1543, -0.2910],
        [ 0.0000,  0.0757,  0.1641, -0.9727, -1.2578, -1.1875, -1.4688,  0.8164, -0.5781,  0.8750, -0.8633,  0.6875,  1.7891, -1.3047, -0.8906],
        [ 0.0000, -1.0078,  0.6055, -1.5391, -1.2422, -1.6328, -2.5938,  0.5547, -0.8242,  0.8203, -1.5234,  0.7188,  1.1562, -1.5781, -1.8047],
        [ 0.0000, -0.3320, -0.2969,  0.9922, -0.4629,  0.6523,  1.9844,  1.0391,  0.0540, -1.1719, -0.6914, -1.0000,  0.2715,  0.5430,  1.8047],
        [ 0.0000,  1.0781, -1.4141, -1.8125, -0.3340, -0.6055, -2.7812, -0.7539,  0.0400,  1.0859,  0.3301,  0.6133,  1.4531, -0.5430, -1.7891],
        [ 0.0000, -0.2334, -0.5469, -0.5508,  0.6094, -0.3535, -0.0903, -0.4297,  0.4609,  0.2578,  0.0825, -1.0078, -0.2305,  0.0947, -0.5508],
        [ 0.0000,  0.2188,  0.2617, -1.3125, -2.1094, -2.2812, -3.9844,  0.6250, -2.9219,  1.0312, -2.2188,  1.3281,  2.2812, -3.2500, -2.5781]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6006],
        [0.4969],
        [0.3385],
        [0.2201],
        [0.1853],
        [0.1986],
        [0.1518],
        [0.1260],
        [0.0918],
        [0.0790],
        [0.0554],
        [0.0438],
        [0.0479],
        [0.0545]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9922, 0.0093, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8125, 0.0884, 0.1006, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7305, 0.0903, 0.1167, 0.0625, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3633, 0.1328, 0.0703, 0.1328, 0.3008, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1885, 0.1484, 0.2715, 0.1006, 0.0522, 0.2383, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2129, 0.0649, 0.3262, 0.1099, 0.0610, 0.1729, 0.0522, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6719, 0.0403, 0.0327, 0.0139, 0.1025, 0.0574, 0.0278, 0.0518, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2324, 0.0386, 0.0320, 0.0287, 0.1250, 0.2109, 0.1060, 0.0251, 0.2012, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4160, 0.0938, 0.0605, 0.0432, 0.0483, 0.0986, 0.0640, 0.0449, 0.0442, 0.0874, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0977, 0.0115, 0.0015, 0.0042, 0.0496, 0.1128, 0.0386, 0.0011, 0.2773, 0.0011, 0.4043, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3613, 0.0427, 0.0270, 0.0215, 0.0325, 0.0693, 0.0216, 0.0703, 0.0393, 0.1680, 0.0811, 0.0654, 0.0000, 0.0000, 0.0000],
        [0.3711, 0.0085, 0.0024, 0.0034, 0.0933, 0.1045, 0.0300, 0.0044, 0.1709, 0.0045, 0.1963, 0.0019, 0.0098, 0.0000, 0.0000],
        [0.1113, 0.0315, 0.0291, 0.0349, 0.0811, 0.1562, 0.1016, 0.0187, 0.1348, 0.0289, 0.0894, 0.0234, 0.0267, 0.1318, 0.0000],
        [0.0952, 0.0530, 0.0737, 0.0303, 0.0119, 0.0177, 0.0096, 0.0732, 0.0044, 0.1758, 0.0084, 0.2148, 0.1040, 0.0045, 0.1240]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0230, -0.0089, -0.0035,  ..., -0.0197, -0.0263,  0.0235],
        [ 0.0006,  0.0107, -0.0006,  ...,  0.0243,  0.0057, -0.0339],
        [ 0.0106,  0.0267,  0.0182,  ...,  0.0157,  0.0196,  0.0092],
        ...,
        [-0.0169,  0.0215,  0.0169,  ...,  0.0403, -0.0120, -0.0053],
        [-0.0142, -0.0139, -0.0017,  ..., -0.0101,  0.0046,  0.0054],
        [ 0.0251,  0.0380,  0.0169,  ...,  0.0074, -0.0316,  0.0176]], device='cuda:0', requires_grad=True)
K: tensor([ 0.8672,  0.3711, -0.5820, -0.0957, -0.8398, -1.0391, -0.1768,  0.1777,  0.4082,  0.2324,  0.4512,  0.5664, -0.8008,  0.1992,  0.4688, -1.0156,  0.5391,  0.1226, -1.3984,  0.1465,  0.6367,  0.8438,  0.5117, -1.1406,  0.0286,  0.1602, -0.3828,  0.5156, -0.4277, -0.2812,  1.8984, -0.0698,
        -0.3691, -0.3496, -0.4141,  1.1406,  1.0859,  0.5938, -0.1924,  1.2109,  1.3672, -0.3984, -0.5469, -0.1494,  0.2871,  0.2949, -0.7344, -1.3359,  0.9844,  0.1064, -1.0938,  1.3281, -0.6875, -0.7148,  0.6523, -0.1216,  1.2734, -0.1445,  0.1025,  1.1953, -0.3398,  1.0547,  1.0312, -0.3203],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0150, -0.0146, -0.0056,  ..., -0.0008,  0.0039, -0.0076],
        [ 0.0132,  0.0118, -0.0474,  ..., -0.0106, -0.0084, -0.0144],
        [ 0.0395,  0.0317,  0.0217,  ..., -0.0116,  0.0329,  0.0174],
        ...,
        [-0.0149, -0.0255,  0.0161,  ...,  0.0271, -0.0042, -0.0339],
        [ 0.0456,  0.0084, -0.0093,  ..., -0.0131,  0.0133,  0.0034],
        [ 0.0155, -0.0243, -0.0195,  ...,  0.0123, -0.0116,  0.0207]], device='cuda:0', requires_grad=True)
Q: tensor([-0.2695,  0.9297,  0.3164,  0.6250, -0.5078, -0.2852,  1.1016,  1.2969,  0.5625,  0.3574,  0.6992, -1.1250, -0.1562,  0.0342,  0.0131,  1.6641, -0.0566,  0.6914, -0.4629, -1.5625,  1.1875, -0.8477,  0.2930, -0.3574, -0.1963, -0.2480,  0.8906,  0.9102, -0.3770, -0.3809, -0.4727, -0.5078,
        -0.2207,  0.6875,  0.9219,  0.8633,  0.1328,  0.6836, -0.2285,  0.7266, -1.1641, -0.1060,  0.7070,  0.2451,  0.5430, -1.5000, -0.2656, -0.6641,  1.1016,  0.1807,  0.8047,  0.5898, -1.2734,  0.3945,  0.4609,  1.3750, -0.4551,  0.7773, -0.3477,  0.7969, -0.8555, -0.5820,  0.3262,  0.6992],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -4.6562, -5.4375, -5.5625, -3.1719, -2.3906, -3.3438, -5.5312, -2.1094, -5.8750, -2.8281, -6.1250, -5.5000, -2.0625, -3.2188],
        [ 0.0000, -2.2188, -2.0938, -2.6094, -2.7188, -1.5859, -2.3438, -1.6953, -2.6562, -0.5508, -2.5156, -1.3047, -0.6602, -2.4062, -1.2344],
        [ 0.0000, -2.0938, -1.8359, -2.4531, -1.9844, -1.7109, -2.2188, -2.3281, -2.3125, -1.7734, -2.5156, -1.5781, -1.9609, -2.3125, -0.9609],
        [ 0.0000, -1.0078, -1.6406, -1.0078, -0.1885,  0.0264, -0.2314, -1.6016,  0.4277, -1.0469,  1.1094, -1.5391, -1.3594,  0.6641, -0.5312],
        [ 0.0000, -0.2422,  0.3672, -0.6328, -1.2812,  0.2324,  0.1904, -0.2227, -1.1172,  0.8477, -2.9375,  0.9102,  0.3340, -1.4375, -0.7031],
        [ 0.0000, -1.1953,  0.4258, -0.6641, -1.2500, -0.2109, -1.4062,  0.3496, -1.5078,  1.1953, -3.2344,  1.2422,  0.8828, -1.7891, -0.4570],
        [ 0.0000, -2.8125, -3.0312, -3.8750, -1.8828, -2.4688, -3.1875, -2.5625, -2.4219, -2.2344, -2.6406, -2.4844, -1.8750, -2.4688, -1.4922],
        [ 0.0000, -1.7969, -1.9844, -2.0938, -0.6172, -0.0981, -0.7852, -2.2188, -0.1406, -2.2188, -0.7148, -2.3125, -1.8984, -0.1387, -1.1562],
        [ 0.0000, -1.4844, -1.9297, -2.2656, -2.1562, -1.4375, -1.8750, -2.2188, -2.2344, -1.5625, -1.7969, -1.5703, -1.4297, -2.0156, -1.3047],
        [ 0.0000, -2.1406, -4.1875, -3.1562, -0.6797,  0.1426, -0.9297, -4.4688,  1.0469, -4.5000,  1.4219, -4.6875, -4.0938,  1.2734, -2.2344],
        [ 0.0000, -2.1406, -2.5938, -2.8281, -2.4062, -1.6484, -2.8125, -1.6406, -2.2188, -0.7695, -1.4922, -1.7109, -0.4844, -1.8750, -1.0469],
        [ 0.0000, -3.7812, -5.0625, -4.6875, -1.3828, -1.2656, -2.5156, -4.4375, -0.7773, -4.4062, -0.6367, -5.2500, -3.6250, -0.5898, -2.7969],
        [ 0.0000, -1.2656, -1.3438, -1.1641, -0.3203,  0.3398, -0.0933, -1.7891,  0.1865, -1.3516, -0.2246, -1.5625, -1.4297,  0.1689, -0.8672],
        [ 0.0000, -0.5859, -0.2578, -1.1484, -2.0781, -1.6797, -2.2969, -0.2598, -3.0781,  0.6172, -2.4375,  0.8125,  0.0869, -3.0469,  0.2637]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7835],
        [0.5420],
        [0.3592],
        [0.2152],
        [0.2293],
        [0.1923],
        [0.3382],
        [0.1422],
        [0.3136],
        [0.1192],
        [0.2125],
        [0.2663],
        [0.0720],
        [0.0971]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0118,  0.0062,  0.0129,  ..., -0.0165, -0.0059, -0.0115],
        [ 0.0263, -0.0438, -0.0320,  ...,  0.0013, -0.0148, -0.0284],
        [ 0.0359, -0.0331,  0.0298,  ..., -0.0077, -0.0164,  0.0083],
        ...,
        [ 0.0386,  0.0048, -0.0274,  ..., -0.0065,  0.0169,  0.0152],
        [ 0.0026,  0.0273, -0.0169,  ..., -0.0164, -0.0363, -0.0165],
        [ 0.0157, -0.0051,  0.0074,  ...,  0.0073, -0.0139,  0.0180]], device='cuda:0', requires_grad=True)
K: tensor([-2.7188, -2.4531, -1.9922, -1.6016, -2.7188,  1.3438, -2.0312,  2.4688, -3.2188, -3.4219,  1.3125, -1.5938, -2.7344, -1.9141, -2.8594,  0.9180,  1.8828,  2.5000, -3.5781,  1.8125,  2.3750,  1.8828, -1.5156, -2.1875,  2.5625,  1.3906, -1.2109, -2.4531,  3.2969,  2.5625,  2.1406,  3.3594,
        -2.6094,  1.6094,  2.2188, -2.4062, -2.0312, -1.3984,  1.9844,  0.3066,  0.1660, -1.5234, -1.1562,  2.1875,  1.9219,  3.0156, -2.0312, -2.0469,  1.7891,  1.8594, -1.5625, -1.2266,  2.5625,  2.0625,  2.9531, -1.8203, -2.5625, -3.0781, -2.6094, -2.4531, -3.5938, -2.1719,  3.5938,  1.4297],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0181,  0.0089,  0.0323,  ..., -0.0153,  0.0398, -0.0040],
        [ 0.0124,  0.0301,  0.0099,  ...,  0.0199,  0.0218, -0.0184],
        [-0.0062, -0.0031,  0.0196,  ..., -0.0167,  0.0489, -0.0174],
        ...,
        [-0.0120, -0.0074,  0.0113,  ..., -0.0299, -0.0057,  0.0019],
        [ 0.0167, -0.0212,  0.0181,  ...,  0.0366,  0.0166, -0.0125],
        [ 0.0354, -0.0304, -0.0200,  ...,  0.0222,  0.0282,  0.0079]], device='cuda:0', requires_grad=True)
Q: tensor([ 2.4844,  1.8594,  1.2812,  0.9414,  1.6250, -0.9766,  1.7656, -1.3281,  3.5000,  2.5000, -1.5938,  0.8594,  1.6016,  2.1250,  2.9688, -1.0312, -1.7109, -2.0938,  3.5781, -0.9805, -1.8438, -1.8125,  1.0625,  1.0391, -1.6172, -1.4297,  1.2969,  1.4141, -2.1875, -1.9297, -2.0938, -1.7812,
         1.1641, -2.2344, -1.2188,  0.9141,  1.7969, -0.0309, -0.6797,  0.2930, -0.7344,  1.9531,  1.2734, -1.5000, -0.9688, -2.3750,  1.5938,  2.1406, -1.6875, -1.6094,  2.1094,  0.6758, -2.3906, -1.5000, -2.3438,  2.0469,  1.2266,  2.7812,  2.9062,  1.9844,  2.8906,  1.6406, -2.7031, -0.9414],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000, -29.3750, -19.5000, -22.5000, -29.0000, -21.5000, -18.1250, -23.7500, -22.1250, -26.8750, -23.3750, -27.2500, -28.8750, -22.5000, -29.6250],
        [  0.0000, -18.6250, -12.9375, -14.8125, -18.2500, -13.6875, -11.9375, -15.2500, -13.8125, -17.0000, -14.9375, -17.5000, -18.1250, -14.0625, -19.0000],
        [  0.0000, -22.1250, -15.3125, -17.6250, -21.6250, -16.2500, -14.0000, -18.3750, -16.3750, -20.5000, -17.8750, -21.1250, -21.8750, -16.6250, -22.8750],
        [  0.0000, -28.1250, -19.0000, -22.0000, -28.3750, -20.7500, -17.7500, -23.3750, -21.5000, -25.8750, -22.8750, -26.3750, -27.8750, -21.7500, -28.8750],
        [  0.0000, -18.8750, -12.2500, -14.2500, -18.6250, -14.1250, -11.7500, -14.9375, -14.6250, -16.8750, -15.3125, -17.1250, -18.5000, -14.9375, -18.3750],
        [  0.0000, -14.5625,  -9.8750, -11.4375, -14.5625, -11.1875,  -9.8125, -11.6250, -11.6250, -12.8125, -12.0625, -13.4375, -14.1875, -11.8125, -14.5000],
        [  0.0000, -23.6250, -16.1250, -18.7500, -23.7500, -17.0000, -14.9375, -19.7500, -17.7500, -21.8750, -19.0000, -22.3750, -23.3750, -18.0000, -24.6250],
        [  0.0000, -20.0000, -13.1250, -15.3125, -20.3750, -15.1250, -12.8750, -16.2500, -15.9375, -17.8750, -16.6250, -18.2500, -19.7500, -16.2500, -20.0000],
        [  0.0000, -29.1250, -19.6250, -22.7500, -28.6250, -20.8750, -17.7500, -24.1250, -21.3750, -27.2500, -23.1250, -27.5000, -29.0000, -21.7500, -29.8750],
        [  0.0000, -19.6250, -13.2500, -15.1875, -19.1250, -14.6875, -12.5625, -15.6250, -15.0000, -17.5000, -16.0000, -18.0000, -19.0000, -15.3125, -19.5000],
        [  0.0000, -29.0000, -19.7500, -22.8750, -28.6250, -21.0000, -18.1250, -24.0000, -21.5000, -26.8750, -23.1250, -27.3750, -28.7500, -21.7500, -29.7500],
        [  0.0000, -30.0000, -19.8750, -23.2500, -30.1250, -21.6250, -18.3750, -24.6250, -22.5000, -27.7500, -23.8750, -28.0000, -29.8750, -22.8750, -30.7500],
        [  0.0000, -20.2500, -13.3125, -15.5000, -20.6250, -15.3125, -13.0000, -16.3750, -16.1250, -18.1250, -16.7500, -18.5000, -20.0000, -16.3750, -20.2500],
        [  0.0000, -30.7500, -21.0000, -24.2500, -30.1250, -22.2500, -18.8750, -25.2500, -22.5000, -28.5000, -24.6250, -29.1250, -30.2500, -22.8750, -32.2500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [1.0000],
        [0.9997],
        [0.9993],
        [1.0000],
        [1.0000],
        [0.9990],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7617, 0.2373, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5508, 0.2002, 0.2490, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5000, 0.2109, 0.2148, 0.0732, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4824, 0.2217, 0.1064, 0.0486, 0.1406, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5586, 0.1167, 0.1035, 0.0388, 0.0535, 0.1279, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7070, 0.0229, 0.1670, 0.0070, 0.0015, 0.0262, 0.0674, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3867, 0.0986, 0.0527, 0.0165, 0.0359, 0.0403, 0.1582, 0.2100, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3105, 0.1025, 0.0400, 0.0168, 0.0496, 0.1006, 0.1406, 0.1777, 0.0613, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2891, 0.1177, 0.0398, 0.0223, 0.0466, 0.0405, 0.1367, 0.1982, 0.0569, 0.0527, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3984, 0.0742, 0.0952, 0.0137, 0.0093, 0.1108, 0.1602, 0.0698, 0.0107, 0.0430, 0.0151, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2852, 0.1113, 0.0723, 0.0303, 0.0330, 0.0303, 0.1250, 0.1631, 0.0332, 0.0513, 0.0359, 0.0295, 0.0000, 0.0000, 0.0000],
        [0.3691, 0.0894, 0.0284, 0.0113, 0.0220, 0.0283, 0.1001, 0.1270, 0.0272, 0.0327, 0.0315, 0.0130, 0.1211, 0.0000, 0.0000],
        [0.2480, 0.0732, 0.0287, 0.0112, 0.0304, 0.0693, 0.0981, 0.1157, 0.0391, 0.0474, 0.0452, 0.0137, 0.1348, 0.0452, 0.0000],
        [0.1523, 0.0737, 0.0996, 0.0356, 0.0322, 0.0361, 0.1318, 0.0928, 0.0267, 0.0361, 0.0315, 0.0381, 0.0664, 0.0271, 0.1206]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0135,  0.0166,  0.0069,  ..., -0.0285,  0.0006, -0.0469],
        [-0.0229, -0.0140, -0.0177,  ..., -0.0041,  0.0148,  0.0013],
        [-0.0314, -0.0099,  0.0388,  ..., -0.0248, -0.0227, -0.0274],
        ...,
        [ 0.0039, -0.0262, -0.0071,  ..., -0.0173, -0.0133, -0.0439],
        [-0.0212, -0.0361, -0.0197,  ..., -0.0151, -0.0040,  0.0170],
        [-0.0172,  0.0191,  0.0229,  ..., -0.0267, -0.0201, -0.0096]], device='cuda:0', requires_grad=True)
K: tensor([    -1.5234,     -1.2422,     -0.7227,     -1.0234,     -0.5625,     -0.6172,     -0.8203,      0.9453,     -0.5977,     -0.1118,      1.1562,      0.5391,      1.2969,     -1.7422,      1.6797,     -0.0277,     -0.3945,      0.7383,     -0.5898,      1.1641,     -1.9531,     -0.4785,
            -1.0469,     -0.3340,     -0.3965,      0.6641,      0.8555,      1.0781,     -2.3438,      0.9805,     -0.8516,     -1.9141,     -2.0156,      0.6602,      0.2637,      0.1807,      2.1094,     -0.6953,     -1.6641,      0.9062,     -1.7969,      1.3125,      0.3301,      1.4453,
             1.0234,     -0.6211,     -0.7773,     -1.2891,      1.6328,      1.4375,      0.3379,     -1.6250,     -0.8750,     -1.2109,     -1.2578,      0.0001,      1.6875,     -1.3672,     -0.4531,      0.6914,     -0.7578,      0.8086,      0.4062,     -0.8711], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[-0.0120,  0.0020,  0.0152,  ...,  0.0286, -0.0140, -0.0197],
        [ 0.0300, -0.0269,  0.0190,  ..., -0.0156, -0.0025,  0.0264],
        [-0.0206,  0.0107,  0.0449,  ...,  0.0218,  0.0268, -0.0072],
        ...,
        [ 0.0153, -0.0007, -0.0356,  ..., -0.0113, -0.0088, -0.0051],
        [ 0.0034,  0.0261, -0.0159,  ...,  0.0243,  0.0065, -0.0271],
        [-0.0110,  0.0025, -0.0067,  ...,  0.0059,  0.0043, -0.0050]], device='cuda:0', requires_grad=True)
Q: tensor([-0.3027, -0.7070,  1.0781, -0.0732,  0.6523, -0.0513,  0.6250, -1.3047, -1.0312,  0.0601,  0.1865,  0.2168, -0.2217, -0.2520,  0.1973, -1.5625, -1.4453,  1.1250,  0.7461, -0.0552, -0.0142,  0.4180, -0.3496,  0.5781,  0.5312, -0.2871,  0.4316, -0.1543, -1.1328, -0.9141,  0.0165,  0.7344,
        -1.1562,  1.1094, -1.0000,  1.0312,  0.5352,  0.3750,  0.0835,  0.1338, -0.1650, -1.2422, -0.9336, -0.5664, -0.3164, -0.9883,  0.9766, -0.1719, -0.6445,  0.3242, -0.0830, -0.1816, -0.1611, -0.1777,  1.3516,  0.6016, -1.0156,  0.6836,  0.6953, -0.5039, -0.1797,  0.4023, -0.1377, -0.5781],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -1.1641, -1.3516, -2.4219, -2.1406, -1.6328, -0.6992, -0.5273, -2.1250, -1.6328, -2.3906, -2.6094, -0.8008, -2.0781, -0.6875],
        [ 0.0000, -1.0156, -0.7969, -1.7266, -2.2656, -1.8125, -0.8359, -0.5547, -2.0625, -1.3672, -2.4062, -1.9297, -0.9609, -2.0781, -0.6133],
        [ 0.0000, -0.8672, -0.8438, -1.9297, -2.2812, -1.7734, -0.7109, -0.9023, -2.3125, -1.6797, -2.2812, -2.0625, -1.1328, -2.2969, -0.6758],
        [ 0.0000, -0.7812, -1.5156, -2.2969, -1.2344, -0.7695, -0.0938, -0.1768, -1.1719, -0.8359, -0.8555, -1.8047,  0.0417, -0.9844, -0.9688],
        [ 0.0000, -1.5703, -1.6875, -2.6719, -2.3438, -1.4766, -1.1094, -0.7266, -2.1094, -1.5000, -2.6406, -2.6094, -0.8633, -2.0625, -1.3906],
        [ 0.0000, -3.4219, -1.4453, -4.6250, -6.1562, -3.2969, -2.3438, -2.9531, -6.3438, -3.5938, -6.9688, -4.3125, -3.5781, -6.3438, -2.2500],
        [ 0.0000, -1.3672, -2.0000, -3.1562, -2.3750, -2.2656, -0.8945, -0.6133, -2.5156, -2.1094, -2.2812, -3.1094, -0.9727, -2.4375, -1.3203],
        [ 0.0000, -1.1094, -2.0469, -2.9219, -1.8359, -1.1250, -0.7930, -0.5586, -1.6250, -1.4531, -1.4922, -2.7344, -0.4277, -1.4766, -1.3438],
        [ 0.0000, -0.8945, -1.9766, -2.5625, -1.8203, -1.9609, -0.7461, -0.3770, -1.6250, -1.7031, -1.5078, -2.5938, -0.5156, -1.5078, -1.0469],
        [ 0.0000, -1.6797, -1.4297, -3.3594, -3.7500, -1.2734, -0.9102, -1.7422, -3.6094, -2.2188, -3.2656, -3.2344, -1.8672, -3.5000, -1.2109],
        [ 0.0000, -0.9375, -1.3672, -2.2344, -2.1562, -2.2344, -0.8203, -0.5547, -2.1406, -1.7188, -2.0625, -2.2656, -0.8359, -2.0938, -0.7617],
        [ 0.0000, -1.4141, -2.5625, -3.4844, -2.8125, -2.5625, -1.3047, -1.0625, -2.6094, -2.4219, -2.4531, -3.3438, -1.1094, -2.4688, -1.7891],
        [ 0.0000, -1.2188, -2.1562, -3.0938, -2.0938, -1.2734, -0.9258, -0.7617, -1.8438, -1.6562, -1.7031, -2.8906, -0.6133, -1.7031, -1.5000],
        [ 0.0000, -0.7266, -0.4238, -1.4531, -1.5547, -1.4375, -0.1475, -0.4961, -1.7422, -1.4375, -1.5781, -1.3828, -0.8320, -1.7266, -0.2344]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4392],
        [0.2262],
        [0.2089],
        [0.3110],
        [0.2540],
        [0.3426],
        [0.1556],
        [0.1832],
        [0.1022],
        [0.1516],
        [0.0713],
        [0.1317],
        [0.1402],
        [0.0899]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4004,     0.6016,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1187,     0.0153,     0.8672,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0168,     0.0381,     0.1797,     0.7656,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0003,     0.1514,     0.0008,     0.0002,     0.8477,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.0723,     0.0049,     0.0005,     0.0403,     0.8828,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1143,     0.3008,     0.0562,     0.0157,     0.3594,     0.1523,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0243,     0.0388,     0.0087,     0.1216,     0.5938,     0.0305,     0.1777,     0.0035,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0002,     0.0057,     0.0000,     0.9844,     0.0114,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0112,     0.0010,     0.0023,     0.0288,     0.0011,     0.0001,     0.9570,     0.0000,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0003,     0.0000,     0.0000,     0.0006,     0.0085,     0.0000,     0.2930,     0.0101,     0.6875,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0003,     0.0000,     0.0000,     0.0005,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0017,     0.0147,     0.0012,     0.0031,     0.1465,     0.0688,     0.0033,     0.0299,     0.6016,     0.0164,     0.0376,     0.0058,     0.0688,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0014,     0.0000,     0.1377,     0.0023,     0.1865,     0.0000,     0.0001,     0.6680,     0.0022,     0.0000],
        [    0.0029,     0.0002,     0.0030,     0.0403,     0.0000,     0.0000,     0.9219,     0.0000,     0.0000,     0.0000,     0.0009,     0.0000,     0.0000,     0.0000,     0.0309]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[     0.0282,     -0.0306,     -0.0088,  ...,      0.0030,      0.0217,     -0.0250],
        [     0.0061,     -0.0407,     -0.0002,  ...,     -0.0073,      0.0264,     -0.0074],
        [    -0.0266,      0.0132,     -0.0348,  ...,      0.0043,     -0.0229,     -0.0076],
        ...,
        [     0.0340,     -0.0000,     -0.0317,  ...,      0.0011,     -0.0192,      0.0204],
        [    -0.0108,      0.0086,      0.0087,  ...,      0.0383,     -0.0196,      0.0104],
        [    -0.0410,      0.0289,     -0.0361,  ...,      0.0009,      0.0162,      0.0275]], device='cuda:0', requires_grad=True)
K: tensor([-1.7812,  0.5469, -2.5156,  1.2734, -1.1484,  0.7891,  1.1328,  1.7344,  0.2197, -2.0312, -1.5000, -0.2871, -0.2344, -0.9180, -0.5742,  1.1641,  2.3594,  1.4844, -3.2188, -0.6406,  1.6719,  0.2500, -2.9844,  2.7344,  2.1094,  1.7812, -1.6719,  1.5859, -1.6016, -2.0938, -0.6250,  0.5859,
        -0.7891,  2.4531,  1.9531, -0.0349,  2.1875, -2.8281, -1.4922,  1.3359,  0.4043, -1.8125, -1.6094,  0.4473, -0.3887, -1.5234,  0.4434,  0.6133,  1.5781, -0.2393,  1.0391,  1.6094, -1.8516, -1.2656, -0.8789, -0.8828,  0.8047, -2.5938, -1.0078, -0.7109, -0.0190, -0.6953,  1.6094, -3.2031],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0079, -0.0108, -0.0035,  ..., -0.0203, -0.0192, -0.0038],
        [ 0.0107, -0.0076, -0.0015,  ...,  0.0178, -0.0261,  0.0311],
        [ 0.0107, -0.0160,  0.0034,  ...,  0.0010, -0.0311, -0.0098],
        ...,
        [ 0.0145, -0.0318, -0.0085,  ...,  0.0314,  0.0204,  0.0054],
        [-0.0007, -0.0061,  0.0131,  ...,  0.0039,  0.0189, -0.0026],
        [-0.0061, -0.0160,  0.0014,  ...,  0.0276, -0.0021, -0.0379]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.4609,  0.7148, -0.8633,  0.9727, -1.2109, -1.6016, -2.0625, -1.6719, -1.5078, -0.1689, -0.3574, -0.7852,  0.1875, -1.0703,  0.0540, -0.3242,  0.8164,  1.1172, -1.0469,  0.7695,  1.5312, -1.1250,  0.0544, -0.9023, -0.4277, -0.5156, -1.6562,  1.7344, -2.2812,  1.2891, -1.6484,  0.2754,
        -1.2734,  1.7578, -1.4453, -1.7656,  0.6484, -1.2422,  2.2969, -1.4531, -0.6953,  1.7578, -0.6758,  2.2188, -0.5156,  0.8203, -0.0200,  1.0781,  0.0184, -1.2734, -1.6562,  2.3906, -0.4492, -0.6758, -0.1904, -0.8008, -0.8516, -0.0684,  1.1250, -0.3516,  0.8125,  0.5625, -0.2656, -1.4219],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.4043,      1.5391,      2.2344,     -0.0036,     -1.1016,      4.8750,     -3.2500,     -0.6367,     -3.6875,      1.6562,     -0.7500,     -3.3594,     -0.4238,      2.1719],
        [     0.0000,     -2.0469,      1.9922,      3.4219,     -7.0000,     -8.8125,      9.9375,    -13.3125,    -11.0625,    -13.8750,     -0.8242,     -6.6250,    -14.7500,    -10.8750,      3.4688],
        [     0.0000,      0.8164,      2.3594,      3.8125,     -1.6719,     -2.5000,      6.2188,     -3.5469,     -2.9688,     -3.8750,      2.1094,     -0.3457,     -4.5938,     -2.7656,      4.0625],
        [     0.0000,      6.1875,      0.9805,     -0.3379,      7.9062,     10.5625,     -2.3281,     14.7500,     11.4375,     14.7500,      5.4062,      7.5312,     16.0000,     11.3125,     -0.5742],
        [     0.0000,      6.0938,      3.4219,      1.0391,      5.5000,      8.6250,      1.7812,     11.4375,      8.2500,     11.5000,      4.9688,      7.1562,     12.8125,      8.2500,      0.6211],
        [     0.0000,      7.9688,      8.9375,      7.2500,      5.9688,      9.1250,      8.2500,     11.6875,      6.8438,     12.5000,      7.9062,     12.3125,     11.7500,      7.2812,      8.5000],
        [     0.0000,      0.4668,     -1.0234,      1.6094,      3.2031,      0.2314,      1.9922,     -1.9375,      3.2188,     -3.2344,      2.2969,     -1.5859,     -1.9688,      3.1406,      1.1641],
        [     0.0000,      6.5000,      1.6719,     -0.5625,      7.8438,     11.3125,     -2.8594,     16.5000,     12.0000,     16.3750,      5.1875,      9.0625,     17.8750,     11.8125,     -0.8359],
        [     0.0000,     -2.3750,     -1.5703,      0.9453,     -2.3281,     -5.3750,      4.4375,    -10.0625,     -3.7188,    -10.6250,     -0.2002,     -6.1875,    -10.1250,     -3.4531,      0.5000],
        [     0.0000,      5.8750,      3.7031,      1.9453,      6.7812,      9.3750,      1.1016,     12.9375,      9.5625,     13.8125,      5.5938,      9.4375,     14.2500,      9.9375,      2.0938],
        [     0.0000,     -9.0000,     -4.1562,      0.4902,    -12.6875,    -18.5000,      8.1250,    -27.0000,    -18.2500,    -27.8750,     -5.5625,    -17.2500,    -29.0000,    -17.8750,     -0.0315],
        [     0.0000,      2.1719,     -0.3691,      0.6016,      4.4688,      3.7188,      0.6875,      2.8750,      5.8750,      2.2812,      3.1094,      1.2344,      3.7188,      5.9688,      0.4258],
        [     0.0000,      5.8750,      1.0938,     -1.0859,      6.9062,     10.3750,     -2.8594,     15.0000,     10.9375,     15.3125,      4.5938,      8.0000,     16.6250,     10.8750,     -1.3672],
        [     0.0000,     -2.7656,      0.0065,      2.6094,     -6.1250,     -8.6250,      5.7500,    -11.1250,     -8.9375,    -11.3750,     -1.1562,     -5.8125,    -12.6875,     -8.6875,      2.3594]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2651],
        [0.0990],
        [0.0890],
        [0.1309],
        [0.1734],
        [0.0058],
        [0.0236],
        [0.0896],
        [0.0212],
        [0.0298],
        [0.0182],
        [0.0431],
        [0.0544],
        [0.0120]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.0688 the:0.0723-:0.1055 but:0.1079,:0.0491,:0.2520 a:0.0386
:0.0371)


------
		( the:0.0723-:0.1055 but:0.1079,:0.0491,:0.2520 a:0.0386
:0.0371-:0.1216)
- The most common in the most common species.
- The most common
@ 3050 train 5.6365 , allloss: 5.6529, dt: 1656.03ms, fracRes: 0.6007, norm(attn): 0.1123, norm(output): 0.2949, norm(x): 1.0943, norm(y): 1.0067, norm:1.8715, tok/sec: 79148.53, flops:69.31, batch-reuse:1
@ 3051 train 5.5295 , allloss: 5.5474, dt: 1532.54ms, fracRes: 0.5991, norm(attn): 0.1143, norm(output): 0.2969, norm(x): 1.0908, norm(y): 1.0067, norm:1.5441, tok/sec: 85526.24, flops:74.89, batch-reuse:1
@ 3052 train 5.5065 , allloss: 5.5258, dt: 1264.05ms, fracRes: 0.5988, norm(attn): 0.1147, norm(output): 0.2969, norm(x): 1.0903, norm(y): 1.0067, norm:1.5328, tok/sec: 103691.94, flops:90.80, batch-reuse:1
@ 3053 train 5.5748 , allloss: 5.5932, dt: 1292.35ms, fracRes: 0.6010, norm(attn): 0.1152, norm(output): 0.2930, norm(x): 1.0905, norm(y): 1.0067, norm:1.4860, tok/sec: 101421.12, flops:88.81, batch-reuse:1
@ 3054 train 5.5470 , allloss: 5.5644, dt: 1294.18ms, fracRes: 0.6011, norm(attn): 0.1133, norm(output): 0.2949, norm(x): 1.0890, norm(y): 1.0067, norm:1.4281, tok/sec: 101277.77, flops:88.69, batch-reuse:1
@ 3055 train 5.5013 , allloss: 5.5186, dt: 1276.89ms, fracRes: 0.6013, norm(attn): 0.1123, norm(output): 0.2949, norm(x): 1.0916, norm(y): 1.0067, norm:1.3443, tok/sec: 102649.40, flops:89.89, batch-reuse:1
@ 3056 train 5.5584 , allloss: 5.5760, dt: 1256.18ms, fracRes: 0.6014, norm(attn): 0.1123, norm(output): 0.2930, norm(x): 1.0872, norm(y): 1.0067, norm:1.2975, tok/sec: 104341.73, flops:91.37, batch-reuse:1
@ 3057 train 5.5811 , allloss: 5.5980, dt: 1258.37ms, fracRes: 0.6023, norm(attn): 0.1113, norm(output): 0.2910, norm(x): 1.0876, norm(y): 1.0068, norm:1.4717, tok/sec: 104160.01, flops:91.21, batch-reuse:1
@ 3058 train 5.5421 , allloss: 5.5592, dt: 1293.51ms, fracRes: 0.6013, norm(attn): 0.1143, norm(output): 0.2930, norm(x): 1.0896, norm(y): 1.0068, norm:1.4185, tok/sec: 101330.19, flops:88.73, batch-reuse:1
@ 3059 train 5.5011 , allloss: 5.5185, dt: 1276.59ms, fracRes: 0.6012, norm(attn): 0.1138, norm(output): 0.2969, norm(x): 1.0908, norm(y): 1.0068, norm:1.4030, tok/sec: 102673.27, flops:89.91, batch-reuse:1
@ 3060 train 5.6418 , allloss: 5.6586, dt: 1254.76ms, fracRes: 0.6028, norm(attn): 0.1123, norm(output): 0.2930, norm(x): 1.0941, norm(y): 1.0068, norm:1.2620, tok/sec: 104459.60, flops:91.47, batch-reuse:1
@ 3061 train 5.4815 , allloss: 5.5066, dt: 1263.45ms, fracRes: 0.6036, norm(attn): 0.1147, norm(output): 0.2949, norm(x): 1.0840, norm(y): 1.0067, norm:1.8957, tok/sec: 103741.59, flops:90.85, batch-reuse:1
@ 3062 train 5.4673 , allloss: 5.4846, dt: 1269.11ms, fracRes: 0.6009, norm(attn): 0.1147, norm(output): 0.2949, norm(x): 1.0895, norm(y): 1.0068, norm:1.2727, tok/sec: 103278.81, flops:90.44, batch-reuse:1
@ 3063 train 5.4575 , allloss: 5.4742, dt: 1274.24ms, fracRes: 0.6008, norm(attn): 0.1157, norm(output): 0.2949, norm(x): 1.0918, norm(y): 1.0068, norm:1.1902, tok/sec: 102863.29, flops:90.08, batch-reuse:1
@ 3064 train 5.4628 , allloss: 5.4805, dt: 1286.91ms, fracRes: 0.6012, norm(attn): 0.1138, norm(output): 0.2949, norm(x): 1.0883, norm(y): 1.0068, norm:1.4610, tok/sec: 101850.22, flops:89.19, batch-reuse:1
@ 3065 train 5.5396 , allloss: 5.5565, dt: 1273.00ms, fracRes: 0.6011, norm(attn): 0.1118, norm(output): 0.2930, norm(x): 1.0896, norm(y): 1.0068, norm:1.2733, tok/sec: 102962.96, flops:90.16, batch-reuse:1
@ 3066 train 5.5483 , allloss: 5.5652, dt: 1281.95ms, fracRes: 0.6020, norm(attn): 0.1104, norm(output): 0.2930, norm(x): 1.0900, norm(y): 1.0068, norm:1.5182, tok/sec: 102244.10, flops:89.53, batch-reuse:1
@ 3067 train 5.5611 , allloss: 5.5780, dt: 1273.85ms, fracRes: 0.6026, norm(attn): 0.1099, norm(output): 0.2930, norm(x): 1.0901, norm(y): 1.0067, norm:1.1887, tok/sec: 102894.26, flops:90.10, batch-reuse:1
@ 3068 train 5.5123 , allloss: 5.5296, dt: 1255.91ms, fracRes: 0.6040, norm(attn): 0.1104, norm(output): 0.2910, norm(x): 1.0873, norm(y): 1.0069, norm:1.2512, tok/sec: 104364.17, flops:91.39, batch-reuse:1
@ 3069 train 5.5083 , allloss: 5.5252, dt: 1257.91ms, fracRes: 0.6031, norm(attn): 0.1118, norm(output): 0.2930, norm(x): 1.0880, norm(y): 1.0068, norm:1.2384, tok/sec: 104198.11, flops:91.24, batch-reuse:1
@ 3070 train 5.5157 , allloss: 5.5333, dt: 1262.92ms, fracRes: 0.6025, norm(attn): 0.1138, norm(output): 0.2910, norm(x): 1.0847, norm(y): 1.0068, norm:1.2224, tok/sec: 103784.48, flops:90.88, batch-reuse:1
@ 3071 train 5.5171 , allloss: 5.5353, dt: 1263.02ms, fracRes: 0.6011, norm(attn): 0.1162, norm(output): 0.2930, norm(x): 1.0773, norm(y): 1.0068, norm:1.3939, tok/sec: 103776.38, flops:90.88, batch-reuse:1
@ 3072 train 5.4872 , allloss: 5.5055, dt: 1245.37ms, fracRes: 0.6013, norm(attn): 0.1133, norm(output): 0.2910, norm(x): 1.0763, norm(y): 1.0068, norm:1.3093, tok/sec: 105247.22, flops:92.16, batch-reuse:1
@ 3073 train 5.4418 , allloss: 5.4595, dt: 1259.18ms, fracRes: 0.6010, norm(attn): 0.1143, norm(output): 0.2910, norm(x): 1.0805, norm(y): 1.0068, norm:1.2813, tok/sec: 104092.88, flops:91.15, batch-reuse:1
@ 3074 train 5.4488 , allloss: 5.4659, dt: 1251.59ms, fracRes: 0.6013, norm(attn): 0.1143, norm(output): 0.2910, norm(x): 1.0818, norm(y): 1.0068, norm:1.4455, tok/sec: 104724.53, flops:91.71, batch-reuse:1
@ 3075 train 5.4962 , allloss: 5.5132, dt: 1285.33ms, fracRes: 0.6009, norm(attn): 0.1143, norm(output): 0.2930, norm(x): 1.0850, norm(y): 1.0068, norm:1.6422, tok/sec: 101975.31, flops:89.30, batch-reuse:1
@ 3076 train 5.4576 , allloss: 5.4750, dt: 1297.61ms, fracRes: 0.6008, norm(attn): 0.1123, norm(output): 0.2930, norm(x): 1.0826, norm(y): 1.0068, norm:1.8188, tok/sec: 101010.54, flops:88.45, batch-reuse:1
@ 3077 train 5.4437 , allloss: 5.4615, dt: 1257.55ms, fracRes: 0.6003, norm(attn): 0.1123, norm(output): 0.2930, norm(x): 1.0818, norm(y): 1.0069, norm:1.4685, tok/sec: 104228.20, flops:91.27, batch-reuse:1
@ 3078 train 5.4492 , allloss: 5.4671, dt: 1270.85ms, fracRes: 0.6012, norm(attn): 0.1128, norm(output): 0.2910, norm(x): 1.0795, norm(y): 1.0068, norm:1.5094, tok/sec: 103137.55, flops:90.32, batch-reuse:1
@ 3079 train 5.3990 , allloss: 5.4163, dt: 1282.38ms, fracRes: 0.5995, norm(attn): 0.1147, norm(output): 0.2930, norm(x): 1.0786, norm(y): 1.0068, norm:1.1829, tok/sec: 102209.96, flops:89.50, batch-reuse:1
@ 3080 train 5.5138 , allloss: 5.5310, dt: 1262.51ms, fracRes: 0.6006, norm(attn): 0.1138, norm(output): 0.2930, norm(x): 1.0844, norm(y): 1.0068, norm:1.3670, tok/sec: 103818.66, flops:90.91, batch-reuse:1
@ 3081 train 5.5012 , allloss: 5.5182, dt: 1249.00ms, fracRes: 0.6013, norm(attn): 0.1133, norm(output): 0.2930, norm(x): 1.0855, norm(y): 1.0068, norm:1.7932, tok/sec: 104941.19, flops:91.90, batch-reuse:1
@ 3082 train 5.5301 , allloss: 5.5482, dt: 1265.91ms, fracRes: 0.6018, norm(attn): 0.1138, norm(output): 0.2930, norm(x): 1.0812, norm(y): 1.0069, norm:1.1513, tok/sec: 103539.48, flops:90.67, batch-reuse:1
@ 3083 train 5.3962 , allloss: 5.4141, dt: 1247.35ms, fracRes: 0.6024, norm(attn): 0.1113, norm(output): 0.2871, norm(x): 1.0798, norm(y): 1.0069, norm:1.2985, tok/sec: 105080.61, flops:92.02, batch-reuse:1
@ 3084 train 5.4023 , allloss: 5.4204, dt: 1271.42ms, fracRes: 0.6025, norm(attn): 0.1118, norm(output): 0.2891, norm(x): 1.0780, norm(y): 1.0068, norm:1.4149, tok/sec: 103091.24, flops:90.28, batch-reuse:1
@ 3085 train 5.5679 , allloss: 5.5856, dt: 1265.07ms, fracRes: 0.6039, norm(attn): 0.1104, norm(output): 0.2891, norm(x): 1.0835, norm(y): 1.0069, norm:1.9449, tok/sec: 103608.48, flops:90.73, batch-reuse:1
@ 3086 train 5.4614 , allloss: 5.4795, dt: 1278.72ms, fracRes: 0.6019, norm(attn): 0.1113, norm(output): 0.2910, norm(x): 1.0801, norm(y): 1.0068, norm:1.4737, tok/sec: 102502.74, flops:89.76, batch-reuse:1
@ 3087 train 5.4713 , allloss: 5.4891, dt: 1297.96ms, fracRes: 0.6006, norm(attn): 0.1143, norm(output): 0.2930, norm(x): 1.0809, norm(y): 1.0068, norm:1.0217, tok/sec: 100982.99, flops:88.43, batch-reuse:1
@ 3088 train 5.4599 , allloss: 5.4774, dt: 1291.44ms, fracRes: 0.5993, norm(attn): 0.1143, norm(output): 0.2930, norm(x): 1.0754, norm(y): 1.0069, norm:1.2524, tok/sec: 101493.15, flops:88.88, batch-reuse:1
@ 3089 train 5.4732 , allloss: 5.4909, dt: 1308.79ms, fracRes: 0.5997, norm(attn): 0.1157, norm(output): 0.2930, norm(x): 1.0711, norm(y): 1.0068, norm:1.4455, tok/sec: 100147.19, flops:87.70, batch-reuse:1
@ 3090 train 5.4151 , allloss: 5.4332, dt: 1311.43ms, fracRes: 0.5988, norm(attn): 0.1147, norm(output): 0.2910, norm(x): 1.0706, norm(y): 1.0068, norm:1.4451, tok/sec: 99946.23, flops:87.52, batch-reuse:1
@ 3091 train 5.5856 , allloss: 5.6041, dt: 1254.26ms, fracRes: 0.6003, norm(attn): 0.1143, norm(output): 0.2891, norm(x): 1.0723, norm(y): 1.0068, norm:1.0814, tok/sec: 104501.31, flops:91.51, batch-reuse:1
@ 3092 train 5.4640 , allloss: 5.4826, dt: 1255.51ms, fracRes: 0.5999, norm(attn): 0.1152, norm(output): 0.2910, norm(x): 1.0715, norm(y): 1.0069, norm:1.3891, tok/sec: 104397.07, flops:91.42, batch-reuse:1
@ 3093 train 5.4904 , allloss: 5.5078, dt: 1257.46ms, fracRes: 0.5999, norm(attn): 0.1147, norm(output): 0.2910, norm(x): 1.0715, norm(y): 1.0069, norm:1.3091, tok/sec: 104235.20, flops:91.28, batch-reuse:1
@ 3094 train 5.4401 , allloss: 5.4578, dt: 1244.09ms, fracRes: 0.6003, norm(attn): 0.1123, norm(output): 0.2910, norm(x): 1.0723, norm(y): 1.0068, norm:1.2115, tok/sec: 105355.84, flops:92.26, batch-reuse:1
@ 3095 train 5.4577 , allloss: 5.4747, dt: 1253.05ms, fracRes: 0.6000, norm(attn): 0.1152, norm(output): 0.2930, norm(x): 1.0753, norm(y): 1.0068, norm:1.6191, tok/sec: 104602.24, flops:91.60, batch-reuse:1
@ 3096 train 5.5638 , allloss: 5.5814, dt: 1257.98ms, fracRes: 0.6006, norm(attn): 0.1143, norm(output): 0.2910, norm(x): 1.0757, norm(y): 1.0068, norm:1.1630, tok/sec: 104192.53, flops:91.24, batch-reuse:1
@ 3097 train 5.5064 , allloss: 5.5237, dt: 1255.47ms, fracRes: 0.6018, norm(attn): 0.1118, norm(output): 0.2871, norm(x): 1.0765, norm(y): 1.0069, norm:1.6459, tok/sec: 104401.10, flops:91.42, batch-reuse:1
@ 3098 train 5.4220 , allloss: 5.4386, dt: 1275.01ms, fracRes: 0.6001, norm(attn): 0.1133, norm(output): 0.2910, norm(x): 1.0719, norm(y): 1.0069, norm:1.2053, tok/sec: 102800.62, flops:90.02, batch-reuse:1
@ 3099 train 5.4847 , allloss: 5.5022, dt: 1262.35ms, fracRes: 0.6002, norm(attn): 0.1143, norm(output): 0.2910, norm(x): 1.0713, norm(y): 1.0069, norm:1.3280, tok/sec: 103831.34, flops:90.92, batch-reuse:1
@ 3100 train 5.4125 , allloss: 5.4304, dt: 1253.84ms, fracRes: 0.5994, norm(attn): 0.1128, norm(output): 0.2910, norm(x): 1.0727, norm(y): 1.0069, norm:1.4877, tok/sec: 104536.55, flops:91.54, batch-reuse:1
@ 3101 train 5.4300 , allloss: 5.4471, dt: 1271.62ms, fracRes: 0.6005, norm(attn): 0.1138, norm(output): 0.2930, norm(x): 1.0739, norm(y): 1.0068, norm:1.6331, tok/sec: 103074.87, flops:90.26, batch-reuse:1
@ 3102 train 5.4853 , allloss: 5.5031, dt: 1299.59ms, fracRes: 0.6012, norm(attn): 0.1147, norm(output): 0.2910, norm(x): 1.0740, norm(y): 1.0068, norm:1.2570, tok/sec: 100856.30, flops:88.32, batch-reuse:1
@ 3103 train 5.5001 , allloss: 5.5194, dt: 1288.74ms, fracRes: 0.6022, norm(attn): 0.1147, norm(output): 0.2871, norm(x): 1.0742, norm(y): 1.0069, norm:1.8249, tok/sec: 101705.42, flops:89.06, batch-reuse:1
@ 3104 train 5.3704 , allloss: 5.3888, dt: 1278.61ms, fracRes: 0.6019, norm(attn): 0.1143, norm(output): 0.2871, norm(x): 1.0683, norm(y): 1.0069, norm:1.3363, tok/sec: 102511.28, flops:89.77, batch-reuse:1
@ 3105 train 5.5738 , allloss: 5.5913, dt: 1259.61ms, fracRes: 0.6013, norm(attn): 0.1138, norm(output): 0.2871, norm(x): 1.0688, norm(y): 1.0068, norm:1.4743, tok/sec: 104057.61, flops:91.12, batch-reuse:1
@ 3106 train 5.4058 , allloss: 5.4237, dt: 1269.00ms, fracRes: 0.5995, norm(attn): 0.1147, norm(output): 0.2910, norm(x): 1.0671, norm(y): 1.0069, norm:1.3711, tok/sec: 103287.24, flops:90.45, batch-reuse:1
@ 3107 train 5.3941 , allloss: 5.4114, dt: 1270.66ms, fracRes: 0.5998, norm(attn): 0.1113, norm(output): 0.2891, norm(x): 1.0693, norm(y): 1.0068, norm:1.2625, tok/sec: 103152.74, flops:90.33, batch-reuse:1
@ 3108 train 5.4422 , allloss: 5.4595, dt: 1280.83ms, fracRes: 0.6016, norm(attn): 0.1108, norm(output): 0.2871, norm(x): 1.0735, norm(y): 1.0069, norm:1.5237, tok/sec: 102333.56, flops:89.61, batch-reuse:1
@ 3109 train 5.4023 , allloss: 5.4198, dt: 1266.77ms, fracRes: 0.6021, norm(attn): 0.1118, norm(output): 0.2871, norm(x): 1.0712, norm(y): 1.0069, norm:1.1967, tok/sec: 103469.81, flops:90.61, batch-reuse:1
@ 3110 train 5.4078 , allloss: 5.4258, dt: 1257.05ms, fracRes: 0.6022, norm(attn): 0.1138, norm(output): 0.2852, norm(x): 1.0739, norm(y): 1.0070, norm:1.7897, tok/sec: 104269.64, flops:91.31, batch-reuse:1
@ 3111 train 5.5099 , allloss: 5.5283, dt: 1289.75ms, fracRes: 0.6023, norm(attn): 0.1128, norm(output): 0.2871, norm(x): 1.0750, norm(y): 1.0069, norm:1.3130, tok/sec: 101625.61, flops:88.99, batch-reuse:1
@ 3112 train 5.3395 , allloss: 5.3569, dt: 1280.30ms, fracRes: 0.6004, norm(attn): 0.1133, norm(output): 0.2871, norm(x): 1.0739, norm(y): 1.0070, norm:1.6075, tok/sec: 102376.39, flops:89.65, batch-reuse:1
@ 3113 train 5.4130 , allloss: 5.4308, dt: 1252.95ms, fracRes: 0.6004, norm(attn): 0.1133, norm(output): 0.2891, norm(x): 1.0713, norm(y): 1.0069, norm:1.7697, tok/sec: 104610.30, flops:91.61, batch-reuse:1
@ 3114 train 5.4496 , allloss: 5.4680, dt: 1259.63ms, fracRes: 0.6019, norm(attn): 0.1133, norm(output): 0.2852, norm(x): 1.0689, norm(y): 1.0069, norm:1.2712, tok/sec: 104055.58, flops:91.12, batch-reuse:1
@ 3115 train 5.4118 , allloss: 5.4301, dt: 1267.77ms, fracRes: 0.6004, norm(attn): 0.1138, norm(output): 0.2891, norm(x): 1.0720, norm(y): 1.0069, norm:1.9339, tok/sec: 103388.22, flops:90.54, batch-reuse:1
@ 3116 train 5.3862 , allloss: 5.4051, dt: 1261.37ms, fracRes: 0.5999, norm(attn): 0.1157, norm(output): 0.2891, norm(x): 1.0642, norm(y): 1.0069, norm:1.5371, tok/sec: 103912.67, flops:90.99, batch-reuse:1
@ 3117 train 5.4024 , allloss: 5.4212, dt: 1266.75ms, fracRes: 0.6005, norm(attn): 0.1138, norm(output): 0.2852, norm(x): 1.0631, norm(y): 1.0069, norm:1.4676, tok/sec: 103471.39, flops:90.61, batch-reuse:1
@ 3118 train 5.3350 , allloss: 5.3522, dt: 1274.70ms, fracRes: 0.6005, norm(attn): 0.1143, norm(output): 0.2891, norm(x): 1.0651, norm(y): 1.0069, norm:1.4896, tok/sec: 102825.92, flops:90.04, batch-reuse:1
@ 3119 train 5.5602 , allloss: 5.5786, dt: 1292.67ms, fracRes: 0.6014, norm(attn): 0.1147, norm(output): 0.2871, norm(x): 1.0610, norm(y): 1.0067, norm:1.3020, tok/sec: 101396.09, flops:88.79, batch-reuse:1
@ 3120 train 5.4094 , allloss: 5.4274, dt: 1275.42ms, fracRes: 0.6006, norm(attn): 0.1152, norm(output): 0.2852, norm(x): 1.0676, norm(y): 1.0068, norm:1.8665, tok/sec: 102767.76, flops:89.99, batch-reuse:1
@ 3121 train 5.3032 , allloss: 5.3213, dt: 1293.32ms, fracRes: 0.6011, norm(attn): 0.1152, norm(output): 0.2832, norm(x): 1.0670, norm(y): 1.0069, norm:1.8020, tok/sec: 101345.08, flops:88.75, batch-reuse:1
@ 3122 train 5.3486 , allloss: 5.3665, dt: 1275.09ms, fracRes: 0.6020, norm(attn): 0.1128, norm(output): 0.2852, norm(x): 1.0676, norm(y): 1.0069, norm:1.4056, tok/sec: 102794.68, flops:90.02, batch-reuse:1
@ 3123 train 5.5532 , allloss: 5.5713, dt: 1281.66ms, fracRes: 0.6021, norm(attn): 0.1123, norm(output): 0.2852, norm(x): 1.0672, norm(y): 1.0068, norm:1.4392, tok/sec: 102267.06, flops:89.55, batch-reuse:1
@ 3124 train 5.4183 , allloss: 5.4372, dt: 1292.17ms, fracRes: 0.6011, norm(attn): 0.1128, norm(output): 0.2871, norm(x): 1.0683, norm(y): 1.0069, norm:1.5815, tok/sec: 101435.60, flops:88.83, batch-reuse:1
@ 3125 train 5.4460 , allloss: 5.4656, dt: 1304.39ms, fracRes: 0.6007, norm(attn): 0.1143, norm(output): 0.2871, norm(x): 1.0692, norm(y): 1.0069, norm:1.4607, tok/sec: 100485.47, flops:87.99, batch-reuse:1
@ 3126 train 5.3164 , allloss: 5.3372, dt: 1272.67ms, fracRes: 0.5996, norm(attn): 0.1157, norm(output): 0.2891, norm(x): 1.0674, norm(y): 1.0070, norm:1.5299, tok/sec: 102989.39, flops:90.19, batch-reuse:1
@ 3127 train 5.3958 , allloss: 5.4145, dt: 1280.53ms, fracRes: 0.6001, norm(attn): 0.1152, norm(output): 0.2871, norm(x): 1.0680, norm(y): 1.0069, norm:1.4597, tok/sec: 102357.75, flops:89.63, batch-reuse:1
@ 3128 train 5.3946 , allloss: 5.4131, dt: 1305.39ms, fracRes: 0.5997, norm(attn): 0.1143, norm(output): 0.2871, norm(x): 1.0671, norm(y): 1.0068, norm:1.5561, tok/sec: 100408.61, flops:87.93, batch-reuse:1
@ 3129 train 5.3061 , allloss: 5.3261, dt: 1264.32ms, fracRes: 0.5999, norm(attn): 0.1152, norm(output): 0.2871, norm(x): 1.0699, norm(y): 1.0069, norm:1.6528, tok/sec: 103669.83, flops:90.78, batch-reuse:1
@ 3130 train 5.3703 , allloss: 5.3893, dt: 1248.69ms, fracRes: 0.6018, norm(attn): 0.1138, norm(output): 0.2852, norm(x): 1.0673, norm(y): 1.0069, norm:1.1006, tok/sec: 104967.88, flops:91.92, batch-reuse:1
@ 3131 train 5.2648 , allloss: 5.2822, dt: 1281.07ms, fracRes: 0.6019, norm(attn): 0.1147, norm(output): 0.2852, norm(x): 1.0663, norm(y): 1.0069, norm:1.6218, tok/sec: 102314.15, flops:89.60, batch-reuse:1
@ 3132 train 5.3005 , allloss: 5.3179, dt: 1256.35ms, fracRes: 0.6018, norm(attn): 0.1152, norm(output): 0.2852, norm(x): 1.0684, norm(y): 1.0070, norm:1.3108, tok/sec: 104327.34, flops:91.36, batch-reuse:1
@ 3133 train 5.3550 , allloss: 5.3732, dt: 1299.97ms, fracRes: 0.6024, norm(attn): 0.1147, norm(output): 0.2871, norm(x): 1.0683, norm(y): 1.0068, norm:1.4626, tok/sec: 100826.75, flops:88.29, batch-reuse:1
@ 3134 train 5.3320 , allloss: 5.3503, dt: 1300.52ms, fracRes: 0.6007, norm(attn): 0.1172, norm(output): 0.2930, norm(x): 1.0681, norm(y): 1.0068, norm:1.2632, tok/sec: 100784.21, flops:88.26, batch-reuse:1
@ 3135 train 5.3372 , allloss: 5.3559, dt: 1273.75ms, fracRes: 0.6003, norm(attn): 0.1167, norm(output): 0.2891, norm(x): 1.0670, norm(y): 1.0069, norm:1.4705, tok/sec: 102902.62, flops:90.11, batch-reuse:1
@ 3136 train 5.3616 , allloss: 5.3810, dt: 1255.10ms, fracRes: 0.6014, norm(attn): 0.1162, norm(output): 0.2891, norm(x): 1.0640, norm(y): 1.0069, norm:1.7645, tok/sec: 104431.76, flops:91.45, batch-reuse:1
@ 3137 train 5.3777 , allloss: 5.3960, dt: 1271.20ms, fracRes: 0.6024, norm(attn): 0.1133, norm(output): 0.2832, norm(x): 1.0665, norm(y): 1.0070, norm:1.2610, tok/sec: 103109.21, flops:90.29, batch-reuse:1
@ 3138 train 5.4232 , allloss: 5.4405, dt: 1276.92ms, fracRes: 0.6034, norm(attn): 0.1108, norm(output): 0.2832, norm(x): 1.0723, norm(y): 1.0070, norm:1.3441, tok/sec: 102646.62, flops:89.89, batch-reuse:1
@ 3139 train 5.3356 , allloss: 5.3535, dt: 1288.59ms, fracRes: 0.6033, norm(attn): 0.1104, norm(output): 0.2852, norm(x): 1.0720, norm(y): 1.0070, norm:1.4941, tok/sec: 101717.52, flops:89.07, batch-reuse:1
@ 3140 train 5.3863 , allloss: 5.4041, dt: 1282.82ms, fracRes: 0.6033, norm(attn): 0.1104, norm(output): 0.2852, norm(x): 1.0741, norm(y): 1.0070, norm:1.3458, tok/sec: 102174.80, flops:89.47, batch-reuse:1
@ 3141 train 5.3877 , allloss: 5.4057, dt: 1303.10ms, fracRes: 0.6012, norm(attn): 0.1143, norm(output): 0.2852, norm(x): 1.0686, norm(y): 1.0069, norm:1.5366, tok/sec: 100584.55, flops:88.08, batch-reuse:1
@ 3142 train 5.3146 , allloss: 5.3335, dt: 1266.61ms, fracRes: 0.6003, norm(attn): 0.1152, norm(output): 0.2910, norm(x): 1.0701, norm(y): 1.0070, norm:1.2897, tok/sec: 103482.90, flops:90.62, batch-reuse:1
@ 3143 train 5.6172 , allloss: 5.6350, dt: 1267.79ms, fracRes: 0.6042, norm(attn): 0.1138, norm(output): 0.2871, norm(x): 1.0774, norm(y): 1.0067, norm:1.3861, tok/sec: 103386.28, flops:90.53, batch-reuse:1
@ 3144 train 5.3517 , allloss: 5.3690, dt: 1260.52ms, fracRes: 0.6024, norm(attn): 0.1128, norm(output): 0.2871, norm(x): 1.0785, norm(y): 1.0070, norm:1.5237, tok/sec: 103982.33, flops:91.06, batch-reuse:1
@ 3145 train 5.3535 , allloss: 5.3709, dt: 1284.80ms, fracRes: 0.6022, norm(attn): 0.1118, norm(output): 0.2852, norm(x): 1.0771, norm(y): 1.0070, norm:1.6407, tok/sec: 102017.20, flops:89.34, batch-reuse:1
@ 3146 train 5.3145 , allloss: 5.3323, dt: 1277.21ms, fracRes: 0.6007, norm(attn): 0.1147, norm(output): 0.2891, norm(x): 1.0707, norm(y): 1.0070, norm:2.0601, tok/sec: 102623.55, flops:89.87, batch-reuse:1
@ 3147 train 5.3330 , allloss: 5.3528, dt: 1251.56ms, fracRes: 0.6000, norm(attn): 0.1167, norm(output): 0.2910, norm(x): 1.0685, norm(y): 1.0070, norm:1.4603, tok/sec: 104727.30, flops:91.71, batch-reuse:1
@ 3148 train 5.3868 , allloss: 5.4061, dt: 1274.78ms, fracRes: 0.6004, norm(attn): 0.1167, norm(output): 0.2871, norm(x): 1.0678, norm(y): 1.0070, norm:1.6901, tok/sec: 102819.35, flops:90.04, batch-reuse:1
@ 3149 train 5.4045 , allloss: 5.4228, dt: 1273.91ms, fracRes: 0.6018, norm(attn): 0.1157, norm(output): 0.2852, norm(x): 1.0726, norm(y): 1.0070, norm:1.3042, tok/sec: 102889.78, flops:90.10, batch-reuse:1
@ 3150 train 5.3754 , allloss: 5.3941, dt: 1280.61ms, fracRes: 0.6025, norm(attn): 0.1147, norm(output): 0.2832, norm(x): 1.0707, norm(y): 1.0070, norm:1.4441, tok/sec: 102351.12, flops:89.63, batch-reuse:1
@ 3151 train 5.3587 , allloss: 5.3764, dt: 1324.31ms, fracRes: 0.6012, norm(attn): 0.1157, norm(output): 0.2871, norm(x): 1.0673, norm(y): 1.0070, norm:1.3290, tok/sec: 98973.50, flops:86.67, batch-reuse:1
@ 3152 train 5.3751 , allloss: 5.3928, dt: 1313.77ms, fracRes: 0.6010, norm(attn): 0.1147, norm(output): 0.2852, norm(x): 1.0684, norm(y): 1.0070, norm:1.4846, tok/sec: 99767.69, flops:87.37, batch-reuse:1
@ 3153 train 5.2999 , allloss: 5.3168, dt: 1268.18ms, fracRes: 0.5990, norm(attn): 0.1167, norm(output): 0.2891, norm(x): 1.0670, norm(y): 1.0070, norm:1.4133, tok/sec: 103354.29, flops:90.51, batch-reuse:1
@ 3154 train 5.4221 , allloss: 5.4402, dt: 1284.54ms, fracRes: 0.5997, norm(attn): 0.1167, norm(output): 0.2891, norm(x): 1.0674, norm(y): 1.0070, norm:1.5197, tok/sec: 102037.84, flops:89.35, batch-reuse:1
@ 3155 train 5.3100 , allloss: 5.3283, dt: 1271.13ms, fracRes: 0.5996, norm(attn): 0.1172, norm(output): 0.2891, norm(x): 1.0667, norm(y): 1.0070, norm:1.5352, tok/sec: 103114.80, flops:90.30, batch-reuse:1
@ 3156 train 5.3511 , allloss: 5.3692, dt: 1280.08ms, fracRes: 0.6003, norm(attn): 0.1162, norm(output): 0.2910, norm(x): 1.0680, norm(y): 1.0069, norm:1.4077, tok/sec: 102393.84, flops:89.66, batch-reuse:1
@ 3157 train 5.4128 , allloss: 5.4302, dt: 1262.94ms, fracRes: 0.6018, norm(attn): 0.1128, norm(output): 0.2852, norm(x): 1.0744, norm(y): 1.0069, norm:1.4814, tok/sec: 103783.57, flops:90.88, batch-reuse:1
@ 3158 train 5.3330 , allloss: 5.3509, dt: 1267.90ms, fracRes: 0.6021, norm(attn): 0.1104, norm(output): 0.2852, norm(x): 1.0765, norm(y): 1.0070, norm:1.5161, tok/sec: 103376.85, flops:90.53, batch-reuse:1
@ 3159 train 5.3017 , allloss: 5.3191, dt: 1274.85ms, fracRes: 0.6019, norm(attn): 0.1113, norm(output): 0.2832, norm(x): 1.0698, norm(y): 1.0070, norm:1.2473, tok/sec: 102813.40, flops:90.03, batch-reuse:1
@ 3160 train 5.5201 , allloss: 5.5382, dt: 1264.35ms, fracRes: 0.6035, norm(attn): 0.1104, norm(output): 0.2832, norm(x): 1.0689, norm(y): 1.0069, norm:1.1734, tok/sec: 103667.11, flops:90.78, batch-reuse:1
@ 3161 train 5.5377 , allloss: 5.5574, dt: 1287.83ms, fracRes: 0.6038, norm(attn): 0.1133, norm(output): 0.2832, norm(x): 1.0688, norm(y): 1.0069, norm:1.5823, tok/sec: 101777.51, flops:89.13, batch-reuse:1
@ 3162 train 5.4209 , allloss: 5.4394, dt: 1276.81ms, fracRes: 0.6030, norm(attn): 0.1138, norm(output): 0.2832, norm(x): 1.0654, norm(y): 1.0069, norm:1.5272, tok/sec: 102655.73, flops:89.89, batch-reuse:1
@ 3163 train 5.5234 , allloss: 5.5416, dt: 1290.06ms, fracRes: 0.6023, norm(attn): 0.1152, norm(output): 0.2832, norm(x): 1.0628, norm(y): 1.0069, norm:1.3181, tok/sec: 101601.55, flops:88.97, batch-reuse:1
@ 3164 train 5.5222 , allloss: 5.5419, dt: 1266.92ms, fracRes: 0.6015, norm(attn): 0.1157, norm(output): 0.2852, norm(x): 1.0620, norm(y): 1.0069, norm:1.7495, tok/sec: 103457.12, flops:90.60, batch-reuse:1
@ 3165 train 5.4686 , allloss: 5.4868, dt: 1278.00ms, fracRes: 0.6012, norm(attn): 0.1152, norm(output): 0.2871, norm(x): 1.0619, norm(y): 1.0069, norm:1.1844, tok/sec: 102559.86, flops:89.81, batch-reuse:1
@ 3166 train 5.6001 , allloss: 5.6172, dt: 1263.52ms, fracRes: 0.6021, norm(attn): 0.1128, norm(output): 0.2891, norm(x): 1.0649, norm(y): 1.0068, norm:1.5376, tok/sec: 103735.52, flops:90.84, batch-reuse:1
@ 3167 train 5.4748 , allloss: 5.4925, dt: 1308.24ms, fracRes: 0.6029, norm(attn): 0.1143, norm(output): 0.2832, norm(x): 1.0669, norm(y): 1.0070, norm:1.4549, tok/sec: 100189.86, flops:87.73, batch-reuse:1
@ 3168 train 5.4748 , allloss: 5.4926, dt: 1275.12ms, fracRes: 0.6028, norm(attn): 0.1143, norm(output): 0.2832, norm(x): 1.0641, norm(y): 1.0070, norm:1.5052, tok/sec: 102791.58, flops:90.01, batch-reuse:1
@ 3169 train 5.5795 , allloss: 5.5978, dt: 1265.70ms, fracRes: 0.6035, norm(attn): 0.1143, norm(output): 0.2832, norm(x): 1.0664, norm(y): 1.0070, norm:1.4492, tok/sec: 103556.53, flops:90.68, batch-reuse:1
@ 3170 train 5.4854 , allloss: 5.5032, dt: 1253.02ms, fracRes: 0.6020, norm(attn): 0.1147, norm(output): 0.2832, norm(x): 1.0640, norm(y): 1.0069, norm:1.2485, tok/sec: 104605.17, flops:91.60, batch-reuse:1
@ 3171 train 5.5067 , allloss: 5.5244, dt: 1262.17ms, fracRes: 0.6014, norm(attn): 0.1133, norm(output): 0.2832, norm(x): 1.0646, norm(y): 1.0070, norm:1.3777, tok/sec: 103846.48, flops:90.94, batch-reuse:1
@ 3172 train 5.5076 , allloss: 5.5261, dt: 1261.42ms, fracRes: 0.6023, norm(attn): 0.1147, norm(output): 0.2852, norm(x): 1.0653, norm(y): 1.0069, norm:1.2552, tok/sec: 103908.55, flops:90.99, batch-reuse:1
@ 3173 train 5.4891 , allloss: 5.5068, dt: 1275.64ms, fracRes: 0.6019, norm(attn): 0.1152, norm(output): 0.2852, norm(x): 1.0636, norm(y): 1.0069, norm:1.2641, tok/sec: 102750.24, flops:89.98, batch-reuse:1
@ 3174 train 5.5104 , allloss: 5.5288, dt: 1297.30ms, fracRes: 0.6023, norm(attn): 0.1138, norm(output): 0.2852, norm(x): 1.0653, norm(y): 1.0069, norm:1.3195, tok/sec: 101034.73, flops:88.47, batch-reuse:1
@ 3175 train 5.4985 , allloss: 5.5167, dt: 1291.44ms, fracRes: 0.6024, norm(attn): 0.1157, norm(output): 0.2832, norm(x): 1.0635, norm(y): 1.0069, norm:1.1332, tok/sec: 101492.78, flops:88.88, batch-reuse:1
@ 3176 train 5.5261 , allloss: 5.5443, dt: 1301.88ms, fracRes: 0.6031, norm(attn): 0.1128, norm(output): 0.2832, norm(x): 1.0616, norm(y): 1.0070, norm:1.6553, tok/sec: 100678.95, flops:88.16, batch-reuse:1
@ 3177 train 5.4329 , allloss: 5.4501, dt: 1308.65ms, fracRes: 0.6023, norm(attn): 0.1133, norm(output): 0.2832, norm(x): 1.0654, norm(y): 1.0070, norm:1.3568, tok/sec: 100158.38, flops:87.71, batch-reuse:1
@ 3178 train 5.5740 , allloss: 5.5916, dt: 1296.10ms, fracRes: 0.6031, norm(attn): 0.1133, norm(output): 0.2832, norm(x): 1.0658, norm(y): 1.0069, norm:1.1422, tok/sec: 101127.88, flops:88.56, batch-reuse:1
@ 3179 train 5.4725 , allloss: 5.4912, dt: 1264.20ms, fracRes: 0.6018, norm(attn): 0.1152, norm(output): 0.2832, norm(x): 1.0623, norm(y): 1.0070, norm:1.6699, tok/sec: 103679.60, flops:90.79, batch-reuse:1
@ 3180 train 5.5047 , allloss: 5.5231, dt: 1264.70ms, fracRes: 0.6017, norm(attn): 0.1162, norm(output): 0.2832, norm(x): 1.0606, norm(y): 1.0070, norm:1.3333, tok/sec: 103639.05, flops:90.76, batch-reuse:1
@ 3181 train 5.5158 , allloss: 5.5341, dt: 1273.68ms, fracRes: 0.6015, norm(attn): 0.1157, norm(output): 0.2832, norm(x): 1.0559, norm(y): 1.0070, norm:1.5062, tok/sec: 102907.82, flops:90.11, batch-reuse:1
@ 3182 train 5.4927 , allloss: 5.5200, dt: 1281.90ms, fracRes: 0.6038, norm(attn): 0.1167, norm(output): 0.2852, norm(x): 1.0486, norm(y): 1.0067, norm:2.0192, tok/sec: 102248.12, flops:89.54, batch-reuse:1
@ 3183 train 5.5188 , allloss: 5.5369, dt: 1281.23ms, fracRes: 0.5999, norm(attn): 0.1172, norm(output): 0.2852, norm(x): 1.0595, norm(y): 1.0069, norm:1.4720, tok/sec: 102301.51, flops:89.58, batch-reuse:1
@ 3184 train 5.5941 , allloss: 5.6119, dt: 1264.81ms, fracRes: 0.6021, norm(attn): 0.1162, norm(output): 0.2852, norm(x): 1.0634, norm(y): 1.0069, norm:1.5175, tok/sec: 103629.46, flops:90.75, batch-reuse:1
@ 3185 train 5.5864 , allloss: 5.6043, dt: 1258.89ms, fracRes: 0.6025, norm(attn): 0.1152, norm(output): 0.2832, norm(x): 1.0611, norm(y): 1.0069, norm:1.3607, tok/sec: 104117.13, flops:91.17, batch-reuse:1
@ 3186 train 5.5264 , allloss: 5.5444, dt: 1255.03ms, fracRes: 0.6022, norm(attn): 0.1152, norm(output): 0.2852, norm(x): 1.0578, norm(y): 1.0069, norm:1.3806, tok/sec: 104437.49, flops:91.45, batch-reuse:1
@ 3187 train 5.4536 , allloss: 5.4718, dt: 1291.85ms, fracRes: 0.6024, norm(attn): 0.1123, norm(output): 0.2832, norm(x): 1.0585, norm(y): 1.0070, norm:1.6037, tok/sec: 101460.46, flops:88.85, batch-reuse:1
@ 3188 train 5.4145 , allloss: 5.4327, dt: 1265.19ms, fracRes: 0.6015, norm(attn): 0.1157, norm(output): 0.2832, norm(x): 1.0575, norm(y): 1.0070, norm:1.5444, tok/sec: 103599.07, flops:90.72, batch-reuse:1
@ 3189 train 5.4566 , allloss: 5.4752, dt: 1264.70ms, fracRes: 0.6016, norm(attn): 0.1147, norm(output): 0.2832, norm(x): 1.0558, norm(y): 1.0070, norm:1.3330, tok/sec: 103639.13, flops:90.76, batch-reuse:1
@ 3190 train 5.4961 , allloss: 5.5141, dt: 1253.45ms, fracRes: 0.6024, norm(attn): 0.1147, norm(output): 0.2832, norm(x): 1.0558, norm(y): 1.0070, norm:1.4132, tok/sec: 104568.98, flops:91.57, batch-reuse:1
@ 3191 train 5.3814 , allloss: 5.3991, dt: 1255.92ms, fracRes: 0.6024, norm(attn): 0.1133, norm(output): 0.2832, norm(x): 1.0543, norm(y): 1.0070, norm:1.3289, tok/sec: 104363.74, flops:91.39, batch-reuse:1
@ 3192 train 5.4358 , allloss: 5.4532, dt: 1249.75ms, fracRes: 0.6008, norm(attn): 0.1152, norm(output): 0.2832, norm(x): 1.0521, norm(y): 1.0069, norm:1.1570, tok/sec: 104878.96, flops:91.84, batch-reuse:1
@ 3193 train 5.4608 , allloss: 5.4786, dt: 1275.06ms, fracRes: 0.6001, norm(attn): 0.1167, norm(output): 0.2832, norm(x): 1.0511, norm(y): 1.0069, norm:1.1955, tok/sec: 102796.93, flops:90.02, batch-reuse:1
@ 3194 train 5.4568 , allloss: 5.4754, dt: 1263.06ms, fracRes: 0.6006, norm(attn): 0.1143, norm(output): 0.2832, norm(x): 1.0548, norm(y): 1.0070, norm:1.5936, tok/sec: 103773.62, flops:90.87, batch-reuse:1
@ 3195 train 5.4957 , allloss: 5.5132, dt: 1259.95ms, fracRes: 0.6021, norm(attn): 0.1143, norm(output): 0.2832, norm(x): 1.0531, norm(y): 1.0070, norm:1.3026, tok/sec: 104029.87, flops:91.10, batch-reuse:1
@ 3196 train 5.4905 , allloss: 5.5083, dt: 1264.68ms, fracRes: 0.6023, norm(attn): 0.1133, norm(output): 0.2832, norm(x): 1.0563, norm(y): 1.0070, norm:1.1737, tok/sec: 103640.63, flops:90.76, batch-reuse:1
@ 3197 train 5.4518 , allloss: 5.4701, dt: 1266.39ms, fracRes: 0.6014, norm(attn): 0.1143, norm(output): 0.2812, norm(x): 1.0555, norm(y): 1.0070, norm:1.5176, tok/sec: 103500.32, flops:90.63, batch-reuse:1
@ 3198 train 5.3922 , allloss: 5.4100, dt: 1253.74ms, fracRes: 0.6015, norm(attn): 0.1152, norm(output): 0.2832, norm(x): 1.0511, norm(y): 1.0070, norm:1.2410, tok/sec: 104544.56, flops:91.55, batch-reuse:1
@ 3199 train 5.4492 , allloss: 5.4670, dt: 1261.50ms, fracRes: 0.6012, norm(attn): 0.1152, norm(output): 0.2832, norm(x): 1.0534, norm(y): 1.0070, norm:1.5034, tok/sec: 103901.36, flops:90.98, batch-reuse:1
@ 3200 train 5.5288 , allloss: 5.5495, dt: 1270.77ms, fracRes: 0.6035, norm(attn): 0.1143, norm(output): 0.2832, norm(x): 1.0525, norm(y): 1.0069, norm:1.5837, tok/sec: 103143.82, flops:90.32, batch-reuse:1
@ 3201 train 5.4875 , allloss: 5.5066, dt: 1262.47ms, fracRes: 0.6011, norm(attn): 0.1143, norm(output): 0.2832, norm(x): 1.0501, norm(y): 1.0070, norm:1.3840, tok/sec: 103821.95, flops:90.92, batch-reuse:1
@ 3202 train 5.5003 , allloss: 5.5183, dt: 1247.43ms, fracRes: 0.6008, norm(attn): 0.1147, norm(output): 0.2832, norm(x): 1.0492, norm(y): 1.0070, norm:1.4561, tok/sec: 105073.42, flops:92.01, batch-reuse:1
@ 3203 train 5.5042 , allloss: 5.5216, dt: 1264.84ms, fracRes: 0.6012, norm(attn): 0.1128, norm(output): 0.2832, norm(x): 1.0500, norm(y): 1.0070, norm:1.4461, tok/sec: 103627.07, flops:90.74, batch-reuse:1
@ 3204 train 5.4358 , allloss: 5.4542, dt: 1273.21ms, fracRes: 0.6008, norm(attn): 0.1152, norm(output): 0.2812, norm(x): 1.0476, norm(y): 1.0071, norm:1.5635, tok/sec: 102946.25, flops:90.15, batch-reuse:1
@ 3205 train 5.4294 , allloss: 5.4472, dt: 1263.46ms, fracRes: 0.6009, norm(attn): 0.1162, norm(output): 0.2832, norm(x): 1.0471, norm(y): 1.0070, norm:1.4449, tok/sec: 103740.65, flops:90.84, batch-reuse:1
@ 3206 train 5.3094 , allloss: 5.3288, dt: 1255.47ms, fracRes: 0.6004, norm(attn): 0.1167, norm(output): 0.2832, norm(x): 1.0446, norm(y): 1.0070, norm:1.8989, tok/sec: 104400.80, flops:91.42, batch-reuse:1
@ 3207 train 5.4871 , allloss: 5.5059, dt: 1260.46ms, fracRes: 0.6023, norm(attn): 0.1147, norm(output): 0.2812, norm(x): 1.0484, norm(y): 1.0070, norm:1.0581, tok/sec: 103987.44, flops:91.06, batch-reuse:1
@ 3208 train 5.5007 , allloss: 5.5192, dt: 1274.62ms, fracRes: 0.6022, norm(attn): 0.1152, norm(output): 0.2832, norm(x): 1.0493, norm(y): 1.0070, norm:1.5847, tok/sec: 102831.89, flops:90.05, batch-reuse:1
@ 3209 train 5.4962 , allloss: 5.5143, dt: 1270.94ms, fracRes: 0.6027, norm(attn): 0.1133, norm(output): 0.2812, norm(x): 1.0553, norm(y): 1.0071, norm:1.3206, tok/sec: 103130.31, flops:90.31, batch-reuse:1
@ 3210 train 5.4245 , allloss: 5.4427, dt: 1256.51ms, fracRes: 0.6023, norm(attn): 0.1118, norm(output): 0.2812, norm(x): 1.0511, norm(y): 1.0070, norm:1.2146, tok/sec: 104314.53, flops:91.35, batch-reuse:1
@ 3211 train 5.4279 , allloss: 5.4451, dt: 1278.80ms, fracRes: 0.6020, norm(attn): 0.1133, norm(output): 0.2832, norm(x): 1.0541, norm(y): 1.0071, norm:1.7691, tok/sec: 102495.90, flops:89.75, batch-reuse:1
@ 3212 train 5.5437 , allloss: 5.5610, dt: 1268.16ms, fracRes: 0.6027, norm(attn): 0.1152, norm(output): 0.2812, norm(x): 1.0523, norm(y): 1.0070, norm:1.4746, tok/sec: 103355.92, flops:90.51, batch-reuse:1
@ 3213 train 5.4666 , allloss: 5.4847, dt: 1256.15ms, fracRes: 0.6019, norm(attn): 0.1138, norm(output): 0.2812, norm(x): 1.0500, norm(y): 1.0071, norm:1.5035, tok/sec: 104344.38, flops:91.37, batch-reuse:1
@ 3214 train 5.5520 , allloss: 5.5710, dt: 1273.79ms, fracRes: 0.6023, norm(attn): 0.1147, norm(output): 0.2812, norm(x): 1.0500, norm(y): 1.0070, norm:1.6813, tok/sec: 102899.62, flops:90.11, batch-reuse:1
@ 3215 train 5.4666 , allloss: 5.4851, dt: 1293.94ms, fracRes: 0.6015, norm(attn): 0.1157, norm(output): 0.2812, norm(x): 1.0457, norm(y): 1.0070, norm:1.3615, tok/sec: 101297.18, flops:88.70, batch-reuse:1
@ 3216 train 5.4264 , allloss: 5.4437, dt: 1264.79ms, fracRes: 0.6013, norm(attn): 0.1143, norm(output): 0.2812, norm(x): 1.0471, norm(y): 1.0070, norm:1.4943, tok/sec: 103631.37, flops:90.75, batch-reuse:1
@ 3217 train 5.4458 , allloss: 5.4639, dt: 1272.59ms, fracRes: 0.6015, norm(attn): 0.1157, norm(output): 0.2832, norm(x): 1.0456, norm(y): 1.0070, norm:1.3557, tok/sec: 102995.93, flops:90.19, batch-reuse:1
@ 3218 train 5.4745 , allloss: 5.4929, dt: 1274.55ms, fracRes: 0.6014, norm(attn): 0.1162, norm(output): 0.2812, norm(x): 1.0400, norm(y): 1.0070, norm:1.4731, tok/sec: 102838.23, flops:90.05, batch-reuse:1
@ 3219 train 5.5024 , allloss: 5.5205, dt: 1294.44ms, fracRes: 0.6023, norm(attn): 0.1152, norm(output): 0.2812, norm(x): 1.0415, norm(y): 1.0070, norm:1.2825, tok/sec: 101257.70, flops:88.67, batch-reuse:1
@ 3220 train 5.4461 , allloss: 5.4643, dt: 1283.29ms, fracRes: 0.6018, norm(attn): 0.1147, norm(output): 0.2832, norm(x): 1.0425, norm(y): 1.0070, norm:1.2708, tok/sec: 102137.77, flops:89.44, batch-reuse:1
@ 3221 train 5.3651 , allloss: 5.3823, dt: 1262.94ms, fracRes: 0.6010, norm(attn): 0.1152, norm(output): 0.2812, norm(x): 1.0421, norm(y): 1.0070, norm:1.6013, tok/sec: 103783.56, flops:90.88, batch-reuse:1
@ 3222 train 5.4526 , allloss: 5.4703, dt: 1275.87ms, fracRes: 0.6009, norm(attn): 0.1152, norm(output): 0.2832, norm(x): 1.0410, norm(y): 1.0069, norm:1.4230, tok/sec: 102731.14, flops:89.96, batch-reuse:1
@ 3223 train 5.4469 , allloss: 5.4650, dt: 1276.56ms, fracRes: 0.6002, norm(attn): 0.1157, norm(output): 0.2832, norm(x): 1.0437, norm(y): 1.0070, norm:1.1739, tok/sec: 102676.09, flops:89.91, batch-reuse:1
@ 3224 train 5.4698 , allloss: 5.4884, dt: 1281.03ms, fracRes: 0.5994, norm(attn): 0.1167, norm(output): 0.2832, norm(x): 1.0423, norm(y): 1.0070, norm:1.4118, tok/sec: 102317.52, flops:89.60, batch-reuse:1
@ 3225 train 5.4884 , allloss: 5.5070, dt: 1291.47ms, fracRes: 0.6007, norm(attn): 0.1157, norm(output): 0.2832, norm(x): 1.0432, norm(y): 1.0070, norm:1.1152, tok/sec: 101490.45, flops:88.87, batch-reuse:1
@ 3226 train 5.4070 , allloss: 5.4242, dt: 1293.91ms, fracRes: 0.6021, norm(attn): 0.1133, norm(output): 0.2812, norm(x): 1.0445, norm(y): 1.0071, norm:1.4887, tok/sec: 101299.03, flops:88.71, batch-reuse:1
@ 3227 train 5.3673 , allloss: 5.3847, dt: 1283.09ms, fracRes: 0.6029, norm(attn): 0.1123, norm(output): 0.2812, norm(x): 1.0445, norm(y): 1.0071, norm:1.1942, tok/sec: 102153.75, flops:89.45, batch-reuse:1
@ 3228 train 5.3828 , allloss: 5.4004, dt: 1254.74ms, fracRes: 0.6032, norm(attn): 0.1113, norm(output): 0.2812, norm(x): 1.0464, norm(y): 1.0071, norm:1.4420, tok/sec: 104461.16, flops:91.48, batch-reuse:1
@ 3229 train 5.4746 , allloss: 5.4922, dt: 1278.25ms, fracRes: 0.6019, norm(attn): 0.1123, norm(output): 0.2812, norm(x): 1.0478, norm(y): 1.0070, norm:1.4660, tok/sec: 102540.25, flops:89.79, batch-reuse:1
@ 3230 train 5.5453 , allloss: 5.5647, dt: 1272.62ms, fracRes: 0.6022, norm(attn): 0.1138, norm(output): 0.2812, norm(x): 1.0407, norm(y): 1.0069, norm:1.6106, tok/sec: 102993.48, flops:90.19, batch-reuse:1
@ 3231 train 5.3696 , allloss: 5.3888, dt: 1269.50ms, fracRes: 0.5997, norm(attn): 0.1172, norm(output): 0.2832, norm(x): 1.0378, norm(y): 1.0069, norm:1.7988, tok/sec: 103246.97, flops:90.41, batch-reuse:1
@ 3232 train 5.4009 , allloss: 5.4200, dt: 1269.96ms, fracRes: 0.6003, norm(attn): 0.1167, norm(output): 0.2832, norm(x): 1.0452, norm(y): 1.0070, norm:1.0432, tok/sec: 103209.65, flops:90.38, batch-reuse:1
@ 3233 train 5.4267 , allloss: 5.4452, dt: 1275.39ms, fracRes: 0.6017, norm(attn): 0.1147, norm(output): 0.2812, norm(x): 1.0471, norm(y): 1.0069, norm:1.8472, tok/sec: 102769.99, flops:89.99, batch-reuse:1
@ 3234 train 5.6123 , allloss: 5.6296, dt: 1261.16ms, fracRes: 0.6028, norm(attn): 0.1128, norm(output): 0.2812, norm(x): 1.0502, norm(y): 1.0069, norm:2.0742, tok/sec: 103929.61, flops:91.01, batch-reuse:1
@ 3235 train 5.4731 , allloss: 5.4908, dt: 1271.13ms, fracRes: 0.6023, norm(attn): 0.1133, norm(output): 0.2832, norm(x): 1.0551, norm(y): 1.0069, norm:1.6928, tok/sec: 103114.74, flops:90.30, batch-reuse:1
@ 3236 train 5.4718 , allloss: 5.4903, dt: 1264.09ms, fracRes: 0.6017, norm(attn): 0.1123, norm(output): 0.2812, norm(x): 1.0530, norm(y): 1.0070, norm:2.2912, tok/sec: 103689.09, flops:90.80, batch-reuse:1
@ 3237 train 5.3890 , allloss: 5.4066, dt: 1279.08ms, fracRes: 0.6014, norm(attn): 0.1138, norm(output): 0.2812, norm(x): 1.0510, norm(y): 1.0071, norm:1.4938, tok/sec: 102473.97, flops:89.73, batch-reuse:1
@ 3238 train 5.4260 , allloss: 5.4438, dt: 1282.06ms, fracRes: 0.6000, norm(attn): 0.1162, norm(output): 0.2832, norm(x): 1.0473, norm(y): 1.0070, norm:1.5989, tok/sec: 102235.07, flops:89.53, batch-reuse:1
@ 3239 train 5.4767 , allloss: 5.4954, dt: 1277.22ms, fracRes: 0.6005, norm(attn): 0.1157, norm(output): 0.2832, norm(x): 1.0481, norm(y): 1.0070, norm:1.7204, tok/sec: 102622.50, flops:89.87, batch-reuse:1
@ 3240 train 5.5171 , allloss: 5.5356, dt: 1246.99ms, fracRes: 0.6012, norm(attn): 0.1157, norm(output): 0.2812, norm(x): 1.0469, norm(y): 1.0070, norm:1.4302, tok/sec: 105110.99, flops:92.04, batch-reuse:1
@ 3241 train 5.4657 , allloss: 5.4828, dt: 1276.87ms, fracRes: 0.6021, norm(attn): 0.1133, norm(output): 0.2812, norm(x): 1.0482, norm(y): 1.0070, norm:1.4604, tok/sec: 102650.67, flops:89.89, batch-reuse:1
@ 3242 train 5.4357 , allloss: 5.4535, dt: 1269.96ms, fracRes: 0.6026, norm(attn): 0.1133, norm(output): 0.2812, norm(x): 1.0441, norm(y): 1.0070, norm:1.2898, tok/sec: 103209.54, flops:90.38, batch-reuse:1
@ 3243 train 5.4293 , allloss: 5.4474, dt: 1278.00ms, fracRes: 0.6019, norm(attn): 0.1143, norm(output): 0.2812, norm(x): 1.0423, norm(y): 1.0071, norm:1.4106, tok/sec: 102560.36, flops:89.81, batch-reuse:1
@ 3244 train 5.4080 , allloss: 5.4261, dt: 1267.99ms, fracRes: 0.6010, norm(attn): 0.1133, norm(output): 0.2812, norm(x): 1.0398, norm(y): 1.0070, norm:1.1905, tok/sec: 103369.85, flops:90.52, batch-reuse:1
@ 3245 train 5.3831 , allloss: 5.4017, dt: 1249.27ms, fracRes: 0.5992, norm(attn): 0.1162, norm(output): 0.2832, norm(x): 1.0379, norm(y): 1.0070, norm:1.3351, tok/sec: 104919.06, flops:91.88, batch-reuse:1
@ 3246 train 5.3894 , allloss: 5.4081, dt: 1274.56ms, fracRes: 0.5996, norm(attn): 0.1172, norm(output): 0.2812, norm(x): 1.0388, norm(y): 1.0070, norm:1.8521, tok/sec: 102836.69, flops:90.05, batch-reuse:1
@ 3247 train 5.3907 , allloss: 5.4091, dt: 1263.27ms, fracRes: 0.6006, norm(attn): 0.1162, norm(output): 0.2812, norm(x): 1.0421, norm(y): 1.0070, norm:1.3400, tok/sec: 103756.52, flops:90.86, batch-reuse:1
@ 3248 train 5.4790 , allloss: 5.4961, dt: 1252.62ms, fracRes: 0.6024, norm(attn): 0.1152, norm(output): 0.2812, norm(x): 1.0478, norm(y): 1.0071, norm:1.4302, tok/sec: 104638.06, flops:91.63, batch-reuse:1
@ 3249 train 5.3955 , allloss: 5.4122, dt: 1266.09ms, fracRes: 0.6023, norm(attn): 0.1152, norm(output): 0.2812, norm(x): 1.0460, norm(y): 1.0070, norm:1.6663, tok/sec: 103525.23, flops:90.66, batch-reuse:1
@ 3250 train 5.3505 , allloss: 5.3674, dt: 1262.84ms, fracRes: 0.6020, norm(attn): 0.1138, norm(output): 0.2812, norm(x): 1.0483, norm(y): 1.0071, norm:1.4036, tok/sec: 103791.51, flops:90.89, batch-reuse:1
@ 3251 train 5.3645 , allloss: 5.3821, dt: 1245.76ms, fracRes: 0.6019, norm(attn): 0.1138, norm(output): 0.2793, norm(x): 1.0423, norm(y): 1.0071, norm:1.3704, tok/sec: 105214.83, flops:92.14, batch-reuse:1
@ 3252 train 5.3633 , allloss: 5.3819, dt: 1262.52ms, fracRes: 0.6014, norm(attn): 0.1162, norm(output): 0.2812, norm(x): 1.0443, norm(y): 1.0071, norm:1.5161, tok/sec: 103818.09, flops:90.91, batch-reuse:1
@ 3253 train 5.5066 , allloss: 5.5263, dt: 1278.36ms, fracRes: 0.6023, norm(attn): 0.1162, norm(output): 0.2812, norm(x): 1.0390, norm(y): 1.0070, norm:1.1973, tok/sec: 102531.55, flops:89.79, batch-reuse:1
@ 3254 train 5.3103 , allloss: 5.3283, dt: 1265.02ms, fracRes: 0.6013, norm(attn): 0.1162, norm(output): 0.2832, norm(x): 1.0447, norm(y): 1.0071, norm:1.2783, tok/sec: 103612.54, flops:90.73, batch-reuse:1
@ 3255 train 5.3732 , allloss: 5.3902, dt: 1281.97ms, fracRes: 0.6015, norm(attn): 0.1152, norm(output): 0.2812, norm(x): 1.0478, norm(y): 1.0071, norm:1.1644, tok/sec: 102242.62, flops:89.53, batch-reuse:1
@ 3256 train 5.4457 , allloss: 5.4633, dt: 1294.89ms, fracRes: 0.6026, norm(attn): 0.1157, norm(output): 0.2812, norm(x): 1.0473, norm(y): 1.0071, norm:1.4285, tok/sec: 101222.32, flops:88.64, batch-reuse:1
@ 3257 train 5.3818 , allloss: 5.3998, dt: 1291.45ms, fracRes: 0.6011, norm(attn): 0.1157, norm(output): 0.2812, norm(x): 1.0436, norm(y): 1.0071, norm:1.2436, tok/sec: 101492.44, flops:88.88, batch-reuse:1
@ 3258 train 5.3486 , allloss: 5.3661, dt: 1276.07ms, fracRes: 0.6004, norm(attn): 0.1152, norm(output): 0.2812, norm(x): 1.0375, norm(y): 1.0070, norm:1.6364, tok/sec: 102715.36, flops:89.95, batch-reuse:1
@ 3259 train 5.3854 , allloss: 5.4032, dt: 1305.30ms, fracRes: 0.6014, norm(attn): 0.1138, norm(output): 0.2793, norm(x): 1.0389, norm(y): 1.0071, norm:1.5282, tok/sec: 100415.49, flops:87.93, batch-reuse:1
@ 3260 train 5.3696 , allloss: 5.3876, dt: 1285.06ms, fracRes: 0.6009, norm(attn): 0.1152, norm(output): 0.2812, norm(x): 1.0389, norm(y): 1.0071, norm:1.7790, tok/sec: 101996.86, flops:89.32, batch-reuse:1
@ 3261 train 5.4285 , allloss: 5.4474, dt: 1266.79ms, fracRes: 0.6010, norm(attn): 0.1162, norm(output): 0.2812, norm(x): 1.0415, norm(y): 1.0071, norm:1.3182, tok/sec: 103468.04, flops:90.61, batch-reuse:1
@ 3262 train 5.3069 , allloss: 5.3253, dt: 1257.98ms, fracRes: 0.5992, norm(attn): 0.1157, norm(output): 0.2812, norm(x): 1.0350, norm(y): 1.0070, norm:1.5728, tok/sec: 104192.53, flops:91.24, batch-reuse:1
@ 3263 train 5.3721 , allloss: 5.3902, dt: 1267.09ms, fracRes: 0.6003, norm(attn): 0.1147, norm(output): 0.2812, norm(x): 1.0360, norm(y): 1.0071, norm:1.3440, tok/sec: 103442.99, flops:90.58, batch-reuse:1
@ 3264 train 5.4599 , allloss: 5.4784, dt: 1270.11ms, fracRes: 0.6014, norm(attn): 0.1152, norm(output): 0.2812, norm(x): 1.0385, norm(y): 1.0071, norm:1.4508, tok/sec: 103197.74, flops:90.37, batch-reuse:1
@ 3265 train 5.3294 , allloss: 5.3471, dt: 1283.10ms, fracRes: 0.6011, norm(attn): 0.1167, norm(output): 0.2812, norm(x): 1.0417, norm(y): 1.0071, norm:1.3670, tok/sec: 102152.89, flops:89.45, batch-reuse:1
@ 3266 train 5.3810 , allloss: 5.3985, dt: 1269.62ms, fracRes: 0.6023, norm(attn): 0.1152, norm(output): 0.2793, norm(x): 1.0425, norm(y): 1.0071, norm:1.7042, tok/sec: 103237.52, flops:90.40, batch-reuse:1
@ 3267 train 5.3091 , allloss: 5.3264, dt: 1293.29ms, fracRes: 0.6011, norm(attn): 0.1157, norm(output): 0.2812, norm(x): 1.0401, norm(y): 1.0071, norm:1.2352, tok/sec: 101347.92, flops:88.75, batch-reuse:1
@ 3268 train 5.3648 , allloss: 5.3824, dt: 1267.42ms, fracRes: 0.6001, norm(attn): 0.1167, norm(output): 0.2812, norm(x): 1.0384, norm(y): 1.0071, norm:1.4679, tok/sec: 103416.25, flops:90.56, batch-reuse:1
@ 3269 train 5.3403 , allloss: 5.3579, dt: 1252.94ms, fracRes: 0.5995, norm(attn): 0.1167, norm(output): 0.2812, norm(x): 1.0358, norm(y): 1.0070, norm:1.3532, tok/sec: 104611.92, flops:91.61, batch-reuse:1
@ 3270 train 5.3532 , allloss: 5.3713, dt: 1259.47ms, fracRes: 0.6018, norm(attn): 0.1152, norm(output): 0.2812, norm(x): 1.0392, norm(y): 1.0071, norm:1.1958, tok/sec: 104069.25, flops:91.13, batch-reuse:1
@ 3271 train 5.3054 , allloss: 5.3219, dt: 1312.42ms, fracRes: 0.6024, norm(attn): 0.1133, norm(output): 0.2793, norm(x): 1.0421, norm(y): 1.0072, norm:1.4702, tok/sec: 99870.15, flops:87.45, batch-reuse:1
@ 3272 train 5.3922 , allloss: 5.4108, dt: 1262.63ms, fracRes: 0.6024, norm(attn): 0.1152, norm(output): 0.2793, norm(x): 1.0367, norm(y): 1.0071, norm:1.7279, tok/sec: 103808.89, flops:90.90, batch-reuse:1
@ 3273 train 5.3730 , allloss: 5.3910, dt: 1280.34ms, fracRes: 0.6010, norm(attn): 0.1167, norm(output): 0.2793, norm(x): 1.0342, norm(y): 1.0071, norm:1.3301, tok/sec: 102372.85, flops:89.65, batch-reuse:1
@ 3274 train 5.3420 , allloss: 5.3601, dt: 1297.88ms, fracRes: 0.6016, norm(attn): 0.1162, norm(output): 0.2793, norm(x): 1.0339, norm(y): 1.0071, norm:1.6329, tok/sec: 100989.38, flops:88.43, batch-reuse:1
@ 3275 train 5.3398 , allloss: 5.3578, dt: 1288.82ms, fracRes: 0.6004, norm(attn): 0.1172, norm(output): 0.2793, norm(x): 1.0323, norm(y): 1.0071, norm:1.2559, tok/sec: 101699.00, flops:89.06, batch-reuse:1
@ 3276 train 5.3819 , allloss: 5.4004, dt: 1261.58ms, fracRes: 0.6006, norm(attn): 0.1157, norm(output): 0.2812, norm(x): 1.0334, norm(y): 1.0071, norm:1.8286, tok/sec: 103895.49, flops:90.98, batch-reuse:1
@ 3277 train 5.3638 , allloss: 5.3818, dt: 1270.69ms, fracRes: 0.6002, norm(attn): 0.1167, norm(output): 0.2812, norm(x): 1.0330, norm(y): 1.0070, norm:1.4685, tok/sec: 103150.51, flops:90.33, batch-reuse:1
@ 3278 train 5.3712 , allloss: 5.3890, dt: 1254.20ms, fracRes: 0.6005, norm(attn): 0.1162, norm(output): 0.2793, norm(x): 1.0364, norm(y): 1.0071, norm:1.2433, tok/sec: 104506.10, flops:91.51, batch-reuse:1
@ 3279 train 5.4310 , allloss: 5.4493, dt: 1287.61ms, fracRes: 0.6018, norm(attn): 0.1162, norm(output): 0.2793, norm(x): 1.0347, norm(y): 1.0072, norm:1.4689, tok/sec: 101794.98, flops:89.14, batch-reuse:1
@ 3280 train 5.3474 , allloss: 5.3652, dt: 1296.05ms, fracRes: 0.6020, norm(attn): 0.1157, norm(output): 0.2793, norm(x): 1.0340, norm(y): 1.0071, norm:1.3304, tok/sec: 101132.08, flops:88.56, batch-reuse:1
@ 3281 train 5.3368 , allloss: 5.3542, dt: 1273.63ms, fracRes: 0.6023, norm(attn): 0.1157, norm(output): 0.2793, norm(x): 1.0358, norm(y): 1.0071, norm:1.4151, tok/sec: 102912.23, flops:90.12, batch-reuse:1
@ 3282 train 5.3222 , allloss: 5.3414, dt: 1265.82ms, fracRes: 0.6010, norm(attn): 0.1157, norm(output): 0.2793, norm(x): 1.0313, norm(y): 1.0071, norm:1.3011, tok/sec: 103547.52, flops:90.68, batch-reuse:1
@ 3283 train 5.3574 , allloss: 5.3756, dt: 1260.04ms, fracRes: 0.6009, norm(attn): 0.1157, norm(output): 0.2793, norm(x): 1.0318, norm(y): 1.0070, norm:1.3358, tok/sec: 104022.50, flops:91.09, batch-reuse:1
@ 3284 train 5.3649 , allloss: 5.3828, dt: 1272.58ms, fracRes: 0.6014, norm(attn): 0.1162, norm(output): 0.2793, norm(x): 1.0354, norm(y): 1.0071, norm:1.5019, tok/sec: 102997.26, flops:90.19, batch-reuse:1
@ 3285 train 5.3140 , allloss: 5.3323, dt: 1272.71ms, fracRes: 0.6017, norm(attn): 0.1147, norm(output): 0.2793, norm(x): 1.0319, norm(y): 1.0071, norm:1.2220, tok/sec: 102986.24, flops:90.18, batch-reuse:1
@ 3286 train 5.3835 , allloss: 5.4014, dt: 1294.46ms, fracRes: 0.6017, norm(attn): 0.1138, norm(output): 0.2793, norm(x): 1.0326, norm(y): 1.0071, norm:1.2818, tok/sec: 101255.89, flops:88.67, batch-reuse:1
@ 3287 train 5.3006 , allloss: 5.3182, dt: 1291.49ms, fracRes: 0.6001, norm(attn): 0.1162, norm(output): 0.2793, norm(x): 1.0278, norm(y): 1.0071, norm:1.6068, tok/sec: 101489.05, flops:88.87, batch-reuse:1
@ 3288 train 5.5241 , allloss: 5.5429, dt: 1272.32ms, fracRes: 0.6019, norm(attn): 0.1152, norm(output): 0.2754, norm(x): 1.0307, norm(y): 1.0070, norm:1.6575, tok/sec: 103018.13, flops:90.21, batch-reuse:1
@ 3289 train 5.4784 , allloss: 5.4971, dt: 1273.59ms, fracRes: 0.6029, norm(attn): 0.1138, norm(output): 0.2754, norm(x): 1.0324, norm(y): 1.0071, norm:1.3823, tok/sec: 102915.68, flops:90.12, batch-reuse:1
@ 3290 train 5.3725 , allloss: 5.3900, dt: 1309.73ms, fracRes: 0.6011, norm(attn): 0.1157, norm(output): 0.2773, norm(x): 1.0304, norm(y): 1.0071, norm:1.2758, tok/sec: 100075.73, flops:87.63, batch-reuse:1
@ 3291 train 5.2763 , allloss: 5.2950, dt: 1273.18ms, fracRes: 0.6013, norm(attn): 0.1162, norm(output): 0.2793, norm(x): 1.0314, norm(y): 1.0071, norm:1.1929, tok/sec: 102948.31, flops:90.15, batch-reuse:1
@ 3292 train 5.4445 , allloss: 5.4619, dt: 1268.51ms, fracRes: 0.6008, norm(attn): 0.1152, norm(output): 0.2812, norm(x): 1.0335, norm(y): 1.0071, norm:1.4584, tok/sec: 103327.15, flops:90.48, batch-reuse:1
@ 3293 train 5.4301 , allloss: 5.4482, dt: 1259.11ms, fracRes: 0.6005, norm(attn): 0.1167, norm(output): 0.2793, norm(x): 1.0313, norm(y): 1.0071, norm:1.5762, tok/sec: 104099.32, flops:91.16, batch-reuse:1
@ 3294 train 5.4193 , allloss: 5.4380, dt: 1269.67ms, fracRes: 0.6022, norm(attn): 0.1157, norm(output): 0.2773, norm(x): 1.0291, norm(y): 1.0070, norm:1.3336, tok/sec: 103233.26, flops:90.40, batch-reuse:1
@ 3295 train 5.2235 , allloss: 5.2416, dt: 1262.00ms, fracRes: 0.6013, norm(attn): 0.1167, norm(output): 0.2793, norm(x): 1.0316, norm(y): 1.0072, norm:1.3899, tok/sec: 103860.69, flops:90.95, batch-reuse:1
@ 3296 train 5.3327 , allloss: 5.3503, dt: 1275.64ms, fracRes: 0.6025, norm(attn): 0.1162, norm(output): 0.2773, norm(x): 1.0295, norm(y): 1.0072, norm:1.8085, tok/sec: 102750.07, flops:89.98, batch-reuse:1
@ 3297 train 5.2227 , allloss: 5.2407, dt: 1268.26ms, fracRes: 0.6011, norm(attn): 0.1167, norm(output): 0.2793, norm(x): 1.0270, norm(y): 1.0071, norm:1.4475, tok/sec: 103347.76, flops:90.50, batch-reuse:1
@ 3298 train 5.2975 , allloss: 5.3155, dt: 1262.00ms, fracRes: 0.6010, norm(attn): 0.1152, norm(output): 0.2773, norm(x): 1.0265, norm(y): 1.0072, norm:1.5788, tok/sec: 103860.49, flops:90.95, batch-reuse:1
@ 3299 train 5.2303 , allloss: 5.2480, dt: 1286.84ms, fracRes: 0.6001, norm(attn): 0.1162, norm(output): 0.2793, norm(x): 1.0237, norm(y): 1.0072, norm:1.2085, tok/sec: 101855.73, flops:89.19, batch-reuse:1
@ 3300 train 5.2413 , allloss: 5.2604, dt: 1303.99ms, fracRes: 0.5998, norm(attn): 0.1152, norm(output): 0.2773, norm(x): 1.0211, norm(y): 1.0072, norm:1.3739, tok/sec: 100516.30, flops:88.02, batch-reuse:1
@ 3301 train 5.2688 , allloss: 5.2871, dt: 1262.86ms, fracRes: 0.6001, norm(attn): 0.1157, norm(output): 0.2793, norm(x): 1.0203, norm(y): 1.0071, norm:1.2189, tok/sec: 103789.96, flops:90.89, batch-reuse:1
@ 3302 train 5.2906 , allloss: 5.3092, dt: 1260.56ms, fracRes: 0.6022, norm(attn): 0.1143, norm(output): 0.2754, norm(x): 1.0253, norm(y): 1.0072, norm:1.5369, tok/sec: 103979.50, flops:91.05, batch-reuse:1
@ 3303 train 5.2299 , allloss: 5.2479, dt: 1267.18ms, fracRes: 0.6017, norm(attn): 0.1147, norm(output): 0.2793, norm(x): 1.0257, norm(y): 1.0072, norm:1.6327, tok/sec: 103435.67, flops:90.58, batch-reuse:1
@ 3304 train 5.3291 , allloss: 5.3475, dt: 1265.31ms, fracRes: 0.6018, norm(attn): 0.1162, norm(output): 0.2793, norm(x): 1.0293, norm(y): 1.0072, norm:1.4043, tok/sec: 103588.57, flops:90.71, batch-reuse:1
@ 3305 train 5.3271 , allloss: 5.3446, dt: 1250.75ms, fracRes: 0.6006, norm(attn): 0.1147, norm(output): 0.2793, norm(x): 1.0256, norm(y): 1.0072, norm:1.3111, tok/sec: 104794.56, flops:91.77, batch-reuse:1
@ 3306 train 5.2113 , allloss: 5.2303, dt: 1259.35ms, fracRes: 0.5994, norm(attn): 0.1167, norm(output): 0.2793, norm(x): 1.0238, norm(y): 1.0072, norm:1.3456, tok/sec: 104079.06, flops:91.14, batch-reuse:1
@ 3307 train 5.2555 , allloss: 5.2740, dt: 1267.16ms, fracRes: 0.5999, norm(attn): 0.1162, norm(output): 0.2773, norm(x): 1.0256, norm(y): 1.0072, norm:1.3626, tok/sec: 103437.98, flops:90.58, batch-reuse:1
@ 3308 train 5.3171 , allloss: 5.3356, dt: 1284.08ms, fracRes: 0.6005, norm(attn): 0.1147, norm(output): 0.2773, norm(x): 1.0257, norm(y): 1.0072, norm:1.4884, tok/sec: 102074.98, flops:89.39, batch-reuse:1
@ 3309 train 5.2382 , allloss: 5.2570, dt: 1281.79ms, fracRes: 0.6001, norm(attn): 0.1162, norm(output): 0.2773, norm(x): 1.0241, norm(y): 1.0072, norm:1.2847, tok/sec: 102257.38, flops:89.55, batch-reuse:1
@ 3310 train 5.3019 , allloss: 5.3203, dt: 1280.09ms, fracRes: 0.6005, norm(attn): 0.1147, norm(output): 0.2773, norm(x): 1.0253, norm(y): 1.0072, norm:1.2645, tok/sec: 102392.56, flops:89.66, batch-reuse:1
@ 3311 train 5.3595 , allloss: 5.3795, dt: 1283.25ms, fracRes: 0.6010, norm(attn): 0.1147, norm(output): 0.2754, norm(x): 1.0171, norm(y): 1.0071, norm:1.6429, tok/sec: 102140.88, flops:89.44, batch-reuse:1
@ 3312 train 5.3260 , allloss: 5.3452, dt: 1286.81ms, fracRes: 0.6023, norm(attn): 0.1147, norm(output): 0.2773, norm(x): 1.0194, norm(y): 1.0071, norm:1.1843, tok/sec: 101857.84, flops:89.20, batch-reuse:1
@ 3313 train 5.2921 , allloss: 5.3102, dt: 1299.99ms, fracRes: 0.6010, norm(attn): 0.1152, norm(output): 0.2773, norm(x): 1.0212, norm(y): 1.0071, norm:1.5014, tok/sec: 100825.19, flops:88.29, batch-reuse:1
@ 3314 train 5.2545 , allloss: 5.2732, dt: 1263.56ms, fracRes: 0.6015, norm(attn): 0.1157, norm(output): 0.2773, norm(x): 1.0220, norm(y): 1.0072, norm:1.3536, tok/sec: 103732.60, flops:90.84, batch-reuse:1
@ 3315 train 5.3622 , allloss: 5.3819, dt: 1286.65ms, fracRes: 0.6008, norm(attn): 0.1157, norm(output): 0.2754, norm(x): 1.0214, norm(y): 1.0072, norm:1.8503, tok/sec: 101870.36, flops:89.21, batch-reuse:1
@ 3316 train 5.3174 , allloss: 5.3370, dt: 1290.21ms, fracRes: 0.6001, norm(attn): 0.1167, norm(output): 0.2773, norm(x): 1.0184, norm(y): 1.0071, norm:1.5115, tok/sec: 101589.79, flops:88.96, batch-reuse:1
@ 3317 train 5.3061 , allloss: 5.3247, dt: 1300.13ms, fracRes: 0.6011, norm(attn): 0.1143, norm(output): 0.2773, norm(x): 1.0224, norm(y): 1.0072, norm:1.3879, tok/sec: 100814.23, flops:88.28, batch-reuse:1
@ 3318 train 5.1101 , allloss: 5.1290, dt: 1289.51ms, fracRes: 0.6020, norm(attn): 0.1143, norm(output): 0.2754, norm(x): 1.0205, norm(y): 1.0073, norm:1.2498, tok/sec: 101645.15, flops:89.01, batch-reuse:1
@ 3319 train 5.3121 , allloss: 5.3312, dt: 1388.88ms, fracRes: 0.6025, norm(attn): 0.1133, norm(output): 0.2754, norm(x): 1.0251, norm(y): 1.0072, norm:1.4527, tok/sec: 94372.26, flops:82.64, batch-reuse:1
@ 3320 train 5.3785 , allloss: 5.3971, dt: 1288.34ms, fracRes: 0.6027, norm(attn): 0.1133, norm(output): 0.2754, norm(x): 1.0236, norm(y): 1.0072, norm:1.2801, tok/sec: 101737.17, flops:89.09, batch-reuse:1
@ 3321 train 5.2519 , allloss: 5.2702, dt: 1297.40ms, fracRes: 0.6014, norm(attn): 0.1157, norm(output): 0.2773, norm(x): 1.0213, norm(y): 1.0073, norm:1.2943, tok/sec: 101027.02, flops:88.47, batch-reuse:1
@ 3322 train 5.2151 , allloss: 5.2335, dt: 1286.93ms, fracRes: 0.6017, norm(attn): 0.1157, norm(output): 0.2793, norm(x): 1.0200, norm(y): 1.0072, norm:1.3730, tok/sec: 101848.88, flops:89.19, batch-reuse:1
@ 3323 train 5.1261 , allloss: 5.1447, dt: 1264.23ms, fracRes: 0.6004, norm(attn): 0.1172, norm(output): 0.2793, norm(x): 1.0161, norm(y): 1.0072, norm:1.3007, tok/sec: 103677.47, flops:90.79, batch-reuse:1
@ 3324 train 5.2223 , allloss: 5.2405, dt: 1251.78ms, fracRes: 0.6009, norm(attn): 0.1157, norm(output): 0.2773, norm(x): 1.0231, norm(y): 1.0072, norm:1.2027, tok/sec: 104708.73, flops:91.69, batch-reuse:1
@ 3325 train 5.3028 , allloss: 5.3209, dt: 1277.04ms, fracRes: 0.6014, norm(attn): 0.1152, norm(output): 0.2773, norm(x): 1.0223, norm(y): 1.0072, norm:1.6749, tok/sec: 102637.56, flops:89.88, batch-reuse:1
@ 3326 train 5.2528 , allloss: 5.2729, dt: 1273.46ms, fracRes: 0.6014, norm(attn): 0.1152, norm(output): 0.2773, norm(x): 1.0198, norm(y): 1.0073, norm:1.5519, tok/sec: 102926.07, flops:90.13, batch-reuse:1
@ 3327 train 5.2657 , allloss: 5.2851, dt: 1294.63ms, fracRes: 0.6013, norm(attn): 0.1143, norm(output): 0.2754, norm(x): 1.0165, norm(y): 1.0072, norm:1.5889, tok/sec: 101243.20, flops:88.66, batch-reuse:1
@ 3328 train 5.2125 , allloss: 5.2312, dt: 1295.32ms, fracRes: 0.6013, norm(attn): 0.1133, norm(output): 0.2773, norm(x): 1.0174, norm(y): 1.0072, norm:1.3460, tok/sec: 101188.61, flops:88.61, batch-reuse:1
@ 3329 train 5.2037 , allloss: 5.2224, dt: 1284.67ms, fracRes: 0.6013, norm(attn): 0.1157, norm(output): 0.2754, norm(x): 1.0196, norm(y): 1.0072, norm:1.3706, tok/sec: 102027.50, flops:89.34, batch-reuse:1
@ 3330 train 5.2323 , allloss: 5.2516, dt: 1263.25ms, fracRes: 0.6012, norm(attn): 0.1162, norm(output): 0.2754, norm(x): 1.0229, norm(y): 1.0072, norm:1.2063, tok/sec: 103757.97, flops:90.86, batch-reuse:1
@ 3331 train 5.1347 , allloss: 5.1538, dt: 1289.94ms, fracRes: 0.6006, norm(attn): 0.1162, norm(output): 0.2773, norm(x): 1.0196, norm(y): 1.0072, norm:1.2935, tok/sec: 101610.67, flops:88.98, batch-reuse:1
@ 3332 train 5.2214 , allloss: 5.2403, dt: 1298.19ms, fracRes: 0.6000, norm(attn): 0.1167, norm(output): 0.2754, norm(x): 1.0193, norm(y): 1.0072, norm:1.4697, tok/sec: 100965.35, flops:88.41, batch-reuse:1
@ 3333 train 5.2084 , allloss: 5.2273, dt: 1285.39ms, fracRes: 0.6000, norm(attn): 0.1172, norm(output): 0.2773, norm(x): 1.0173, norm(y): 1.0072, norm:1.6223, tok/sec: 101970.41, flops:89.29, batch-reuse:1
@ 3334 train 5.2976 , allloss: 5.3169, dt: 1286.17ms, fracRes: 0.6020, norm(attn): 0.1152, norm(output): 0.2754, norm(x): 1.0206, norm(y): 1.0073, norm:1.5969, tok/sec: 101908.86, flops:89.24, batch-reuse:1
@ 3335 train 5.2647 , allloss: 5.2836, dt: 1275.64ms, fracRes: 0.6020, norm(attn): 0.1147, norm(output): 0.2754, norm(x): 1.0201, norm(y): 1.0073, norm:1.4820, tok/sec: 102749.74, flops:89.98, batch-reuse:1
@ 3336 train 5.3261 , allloss: 5.3454, dt: 1264.18ms, fracRes: 0.6018, norm(attn): 0.1152, norm(output): 0.2754, norm(x): 1.0161, norm(y): 1.0071, norm:1.2428, tok/sec: 103681.70, flops:90.79, batch-reuse:1
@ 3337 train 5.2463 , allloss: 5.2656, dt: 1267.74ms, fracRes: 0.6010, norm(attn): 0.1152, norm(output): 0.2773, norm(x): 1.0185, norm(y): 1.0072, norm:1.3220, tok/sec: 103390.52, flops:90.54, batch-reuse:1
@ 3338 train 5.2333 , allloss: 5.2528, dt: 1282.03ms, fracRes: 0.6004, norm(attn): 0.1157, norm(output): 0.2754, norm(x): 1.0153, norm(y): 1.0072, norm:1.4173, tok/sec: 102237.64, flops:89.53, batch-reuse:1
@ 3339 train 5.2390 , allloss: 5.2576, dt: 1273.71ms, fracRes: 0.6002, norm(attn): 0.1157, norm(output): 0.2773, norm(x): 1.0112, norm(y): 1.0072, norm:1.8965, tok/sec: 102905.90, flops:90.11, batch-reuse:1
@ 3340 train 5.1878 , allloss: 5.2067, dt: 1267.32ms, fracRes: 0.6014, norm(attn): 0.1157, norm(output): 0.2754, norm(x): 1.0135, norm(y): 1.0073, norm:1.4209, tok/sec: 103424.34, flops:90.57, batch-reuse:1
@ 3341 train 5.4062 , allloss: 5.4241, dt: 1290.46ms, fracRes: 0.6036, norm(attn): 0.1128, norm(output): 0.2695, norm(x): 1.0236, norm(y): 1.0072, norm:1.8364, tok/sec: 101570.20, flops:88.94, batch-reuse:1
@ 3342 train 5.3730 , allloss: 5.3909, dt: 1275.18ms, fracRes: 0.6038, norm(attn): 0.1138, norm(output): 0.2754, norm(x): 1.0281, norm(y): 1.0071, norm:1.7964, tok/sec: 102787.28, flops:90.01, batch-reuse:1
@ 3343 train 5.4387 , allloss: 5.4578, dt: 1251.23ms, fracRes: 0.6043, norm(attn): 0.1123, norm(output): 0.2734, norm(x): 1.0237, norm(y): 1.0072, norm:1.4363, tok/sec: 104754.22, flops:91.73, batch-reuse:1
@ 3344 train 5.4544 , allloss: 5.4730, dt: 1282.93ms, fracRes: 0.6021, norm(attn): 0.1152, norm(output): 0.2734, norm(x): 1.0172, norm(y): 1.0072, norm:1.6593, tok/sec: 102165.90, flops:89.47, batch-reuse:1
@ 3345 train 5.3880 , allloss: 5.4074, dt: 1280.57ms, fracRes: 0.6001, norm(attn): 0.1172, norm(output): 0.2754, norm(x): 1.0115, norm(y): 1.0071, norm:1.3047, tok/sec: 102354.70, flops:89.63, batch-reuse:1
@ 3346 train 5.3807 , allloss: 5.4000, dt: 1256.63ms, fracRes: 0.6012, norm(attn): 0.1167, norm(output): 0.2734, norm(x): 1.0118, norm(y): 1.0071, norm:1.2352, tok/sec: 104304.69, flops:91.34, batch-reuse:1
@ 3347 train 5.4001 , allloss: 5.4188, dt: 1268.41ms, fracRes: 0.6016, norm(attn): 0.1157, norm(output): 0.2734, norm(x): 1.0141, norm(y): 1.0072, norm:1.2627, tok/sec: 103335.64, flops:90.49, batch-reuse:1
@ 3348 train 5.3903 , allloss: 5.4086, dt: 1278.99ms, fracRes: 0.6023, norm(attn): 0.1147, norm(output): 0.2715, norm(x): 1.0161, norm(y): 1.0072, norm:1.1417, tok/sec: 102480.75, flops:89.74, batch-reuse:1
@ 3349 train 5.3585 , allloss: 5.3762, dt: 1286.73ms, fracRes: 0.6029, norm(attn): 0.1133, norm(output): 0.2754, norm(x): 1.0227, norm(y): 1.0073, norm:1.2231, tok/sec: 101864.13, flops:89.20, batch-reuse:1
@ 3350 train 5.4400 , allloss: 5.4597, dt: 1308.47ms, fracRes: 0.6023, norm(attn): 0.1143, norm(output): 0.2734, norm(x): 1.0175, norm(y): 1.0072, norm:1.8759, tok/sec: 100171.72, flops:87.72, batch-reuse:1
@ 3351 train 5.4908 , allloss: 5.5094, dt: 1272.16ms, fracRes: 0.6012, norm(attn): 0.1152, norm(output): 0.2773, norm(x): 1.0171, norm(y): 1.0071, norm:1.5756, tok/sec: 103031.10, flops:90.22, batch-reuse:1
@ 3352 train 5.3710 , allloss: 5.3901, dt: 1270.64ms, fracRes: 0.5994, norm(attn): 0.1167, norm(output): 0.2793, norm(x): 1.0137, norm(y): 1.0071, norm:1.5565, tok/sec: 103154.42, flops:90.33, batch-reuse:1
@ 3353 train 5.3967 , allloss: 5.4149, dt: 1286.73ms, fracRes: 0.5996, norm(attn): 0.1152, norm(output): 0.2773, norm(x): 1.0141, norm(y): 1.0072, norm:1.3521, tok/sec: 101864.07, flops:89.20, batch-reuse:1
@ 3354 train 5.4516 , allloss: 5.4721, dt: 1279.24ms, fracRes: 0.6015, norm(attn): 0.1157, norm(output): 0.2773, norm(x): 1.0189, norm(y): 1.0071, norm:1.9103, tok/sec: 102460.83, flops:89.72, batch-reuse:1
@ 3355 train 5.4538 , allloss: 5.4727, dt: 1291.74ms, fracRes: 0.6019, norm(attn): 0.1147, norm(output): 0.2754, norm(x): 1.0150, norm(y): 1.0071, norm:1.3411, tok/sec: 101469.70, flops:88.86, batch-reuse:1
@ 3356 train 5.4104 , allloss: 5.4296, dt: 1269.13ms, fracRes: 0.6020, norm(attn): 0.1143, norm(output): 0.2715, norm(x): 1.0101, norm(y): 1.0072, norm:1.2979, tok/sec: 103276.84, flops:90.44, batch-reuse:1
@ 3357 train 5.4055 , allloss: 5.4251, dt: 1273.18ms, fracRes: 0.6018, norm(attn): 0.1152, norm(output): 0.2754, norm(x): 1.0131, norm(y): 1.0072, norm:1.6289, tok/sec: 102948.16, flops:90.15, batch-reuse:1
@ 3358 train 5.4548 , allloss: 5.4734, dt: 1272.75ms, fracRes: 0.6018, norm(attn): 0.1152, norm(output): 0.2734, norm(x): 1.0136, norm(y): 1.0072, norm:1.1229, tok/sec: 102983.50, flops:90.18, batch-reuse:1
@ 3359 train 5.4103 , allloss: 5.4297, dt: 1269.98ms, fracRes: 0.6010, norm(attn): 0.1167, norm(output): 0.2773, norm(x): 1.0110, norm(y): 1.0071, norm:1.9667, tok/sec: 103208.04, flops:90.38, batch-reuse:1
@ 3360 train 5.3796 , allloss: 5.3982, dt: 1269.16ms, fracRes: 0.6001, norm(attn): 0.1167, norm(output): 0.2773, norm(x): 1.0111, norm(y): 1.0071, norm:1.1878, tok/sec: 103274.31, flops:90.44, batch-reuse:1
@ 3361 train 5.4188 , allloss: 5.4373, dt: 1265.55ms, fracRes: 0.6008, norm(attn): 0.1172, norm(output): 0.2754, norm(x): 1.0115, norm(y): 1.0071, norm:1.7481, tok/sec: 103569.36, flops:90.69, batch-reuse:1
@ 3362 train 5.3318 , allloss: 5.3504, dt: 1282.18ms, fracRes: 0.6012, norm(attn): 0.1167, norm(output): 0.2754, norm(x): 1.0119, norm(y): 1.0072, norm:1.3576, tok/sec: 102225.80, flops:89.52, batch-reuse:1
@ 3363 train 5.3942 , allloss: 5.4124, dt: 1248.99ms, fracRes: 0.6027, norm(attn): 0.1147, norm(output): 0.2754, norm(x): 1.0177, norm(y): 1.0072, norm:1.4560, tok/sec: 104942.09, flops:91.90, batch-reuse:1
@ 3364 train 5.4255 , allloss: 5.4453, dt: 1269.28ms, fracRes: 0.6029, norm(attn): 0.1138, norm(output): 0.2754, norm(x): 1.0131, norm(y): 1.0072, norm:1.4717, tok/sec: 103265.16, flops:90.43, batch-reuse:1
@ 3365 train 5.4216 , allloss: 5.4406, dt: 1281.65ms, fracRes: 0.6035, norm(attn): 0.1138, norm(output): 0.2734, norm(x): 1.0152, norm(y): 1.0072, norm:1.3390, tok/sec: 102268.35, flops:89.55, batch-reuse:1
@ 3366 train 5.4952 , allloss: 5.5134, dt: 1266.58ms, fracRes: 0.6042, norm(attn): 0.1138, norm(output): 0.2734, norm(x): 1.0143, norm(y): 1.0072, norm:1.3789, tok/sec: 103484.73, flops:90.62, batch-reuse:1
@ 3367 train 5.4390 , allloss: 5.4574, dt: 1288.17ms, fracRes: 0.6024, norm(attn): 0.1157, norm(output): 0.2734, norm(x): 1.0134, norm(y): 1.0072, norm:1.3718, tok/sec: 101750.54, flops:89.10, batch-reuse:1
@ 3368 train 5.4584 , allloss: 5.4772, dt: 1262.77ms, fracRes: 0.6006, norm(attn): 0.1177, norm(output): 0.2734, norm(x): 1.0069, norm(y): 1.0071, norm:1.3683, tok/sec: 103797.55, flops:90.89, batch-reuse:1
@ 3369 train 5.4099 , allloss: 5.4288, dt: 1275.42ms, fracRes: 0.6016, norm(attn): 0.1172, norm(output): 0.2734, norm(x): 1.0111, norm(y): 1.0072, norm:1.2470, tok/sec: 102767.45, flops:89.99, batch-reuse:1
@ 3370 train 5.4185 , allloss: 5.4377, dt: 1296.29ms, fracRes: 0.6026, norm(attn): 0.1162, norm(output): 0.2734, norm(x): 1.0107, norm(y): 1.0072, norm:1.2160, tok/sec: 101113.44, flops:88.54, batch-reuse:1
@ 3371 train 5.3593 , allloss: 5.3779, dt: 1270.50ms, fracRes: 0.6020, norm(attn): 0.1157, norm(output): 0.2715, norm(x): 1.0069, norm(y): 1.0073, norm:1.4367, tok/sec: 103165.32, flops:90.34, batch-reuse:1
@ 3372 train 5.3843 , allloss: 5.4031, dt: 1272.79ms, fracRes: 0.6015, norm(attn): 0.1162, norm(output): 0.2715, norm(x): 1.0056, norm(y): 1.0072, norm:1.3431, tok/sec: 102980.05, flops:90.18, batch-reuse:1
@ 3373 train 5.4205 , allloss: 5.4381, dt: 1275.84ms, fracRes: 0.6018, norm(attn): 0.1157, norm(output): 0.2734, norm(x): 1.0068, norm(y): 1.0072, norm:1.2744, tok/sec: 102734.13, flops:89.96, batch-reuse:1
@ 3374 train 5.3783 , allloss: 5.3967, dt: 1279.22ms, fracRes: 0.6018, norm(attn): 0.1152, norm(output): 0.2715, norm(x): 1.0039, norm(y): 1.0072, norm:1.5562, tok/sec: 102462.35, flops:89.72, batch-reuse:1
@ 3375 train 5.3183 , allloss: 5.3362, dt: 1261.11ms, fracRes: 0.6018, norm(attn): 0.1152, norm(output): 0.2695, norm(x): 1.0060, norm(y): 1.0073, norm:1.4990, tok/sec: 103933.93, flops:91.01, batch-reuse:1
@ 3376 train 5.5172 , allloss: 5.5366, dt: 1268.67ms, fracRes: 0.6024, norm(attn): 0.1162, norm(output): 0.2695, norm(x): 1.0042, norm(y): 1.0072, norm:1.3421, tok/sec: 103314.22, flops:90.47, batch-reuse:1
@ 3377 train 5.6122 , allloss: 5.6338, dt: 1292.08ms, fracRes: 0.6066, norm(attn): 0.1167, norm(output): 0.2715, norm(x): 1.0003, norm(y): 1.0067, norm:1.6789, tok/sec: 101442.79, flops:88.83, batch-reuse:1
@ 3378 train 5.4940 , allloss: 5.5127, dt: 1257.80ms, fracRes: 0.6029, norm(attn): 0.1147, norm(output): 0.2754, norm(x): 1.0106, norm(y): 1.0072, norm:2.0008, tok/sec: 104207.65, flops:91.25, batch-reuse:1
@ 3379 train 5.3528 , allloss: 5.3731, dt: 1271.44ms, fracRes: 0.6017, norm(attn): 0.1157, norm(output): 0.2754, norm(x): 1.0078, norm(y): 1.0072, norm:1.8969, tok/sec: 103089.47, flops:90.27, batch-reuse:1
@ 3380 train 5.4219 , allloss: 5.4416, dt: 1267.52ms, fracRes: 0.6011, norm(attn): 0.1162, norm(output): 0.2754, norm(x): 1.0045, norm(y): 1.0072, norm:1.2772, tok/sec: 103408.51, flops:90.55, batch-reuse:1
@ 3381 train 5.3933 , allloss: 5.4123, dt: 1264.80ms, fracRes: 0.6008, norm(attn): 0.1167, norm(output): 0.2734, norm(x): 1.0040, norm(y): 1.0072, norm:1.7028, tok/sec: 103630.22, flops:90.75, batch-reuse:1
@ 3382 train 5.4481 , allloss: 5.4679, dt: 1282.99ms, fracRes: 0.6010, norm(attn): 0.1162, norm(output): 0.2754, norm(x): 1.0042, norm(y): 1.0072, norm:1.7593, tok/sec: 102161.72, flops:89.46, batch-reuse:1
@ 3383 train 5.4388 , allloss: 5.4574, dt: 1271.36ms, fracRes: 0.6021, norm(attn): 0.1147, norm(output): 0.2734, norm(x): 1.0075, norm(y): 1.0073, norm:1.3232, tok/sec: 103096.16, flops:90.28, batch-reuse:1
@ 3384 train 5.4017 , allloss: 5.4195, dt: 1263.00ms, fracRes: 0.6026, norm(attn): 0.1138, norm(output): 0.2715, norm(x): 1.0092, norm(y): 1.0073, norm:1.4701, tok/sec: 103778.30, flops:90.88, batch-reuse:1
@ 3385 train 5.3741 , allloss: 5.3924, dt: 1263.40ms, fracRes: 0.6034, norm(attn): 0.1113, norm(output): 0.2715, norm(x): 1.0113, norm(y): 1.0073, norm:1.1423, tok/sec: 103745.32, flops:90.85, batch-reuse:1
@ 3386 train 5.5547 , allloss: 5.5740, dt: 1267.42ms, fracRes: 0.6044, norm(attn): 0.1123, norm(output): 0.2695, norm(x): 1.0096, norm(y): 1.0072, norm:1.8232, tok/sec: 103416.58, flops:90.56, batch-reuse:1
@ 3387 train 5.4068 , allloss: 5.4257, dt: 1249.65ms, fracRes: 0.6029, norm(attn): 0.1147, norm(output): 0.2715, norm(x): 1.0143, norm(y): 1.0073, norm:1.5390, tok/sec: 104887.13, flops:91.85, batch-reuse:1
@ 3388 train 5.2991 , allloss: 5.3186, dt: 1272.67ms, fracRes: 0.6016, norm(attn): 0.1172, norm(output): 0.2754, norm(x): 1.0109, norm(y): 1.0073, norm:1.2506, tok/sec: 102990.05, flops:90.19, batch-reuse:1
@ 3389 train 5.3566 , allloss: 5.3758, dt: 1259.95ms, fracRes: 0.6019, norm(attn): 0.1162, norm(output): 0.2773, norm(x): 1.0151, norm(y): 1.0073, norm:1.6255, tok/sec: 104029.16, flops:91.10, batch-reuse:1
@ 3390 train 5.4568 , allloss: 5.4763, dt: 1276.64ms, fracRes: 0.6025, norm(attn): 0.1162, norm(output): 0.2734, norm(x): 1.0132, norm(y): 1.0073, norm:1.3680, tok/sec: 102669.78, flops:89.91, batch-reuse:1
@ 3391 train 5.4284 , allloss: 5.4465, dt: 1279.07ms, fracRes: 0.6022, norm(attn): 0.1157, norm(output): 0.2715, norm(x): 1.0170, norm(y): 1.0074, norm:1.4591, tok/sec: 102474.46, flops:89.74, batch-reuse:1
@ 3392 train 5.3419 , allloss: 5.3602, dt: 1294.59ms, fracRes: 0.6010, norm(attn): 0.1133, norm(output): 0.2734, norm(x): 1.0153, norm(y): 1.0073, norm:1.4866, tok/sec: 101245.67, flops:88.66, batch-reuse:1
@ 3393 train 5.4448 , allloss: 5.4628, dt: 1273.82ms, fracRes: 0.6011, norm(attn): 0.1157, norm(output): 0.2754, norm(x): 1.0152, norm(y): 1.0072, norm:1.9128, tok/sec: 102896.80, flops:90.11, batch-reuse:1
@ 3394 train 5.3743 , allloss: 5.3921, dt: 1288.77ms, fracRes: 0.6008, norm(attn): 0.1152, norm(output): 0.2734, norm(x): 1.0127, norm(y): 1.0073, norm:1.2025, tok/sec: 101702.84, flops:89.06, batch-reuse:1
@ 3395 train 5.3701 , allloss: 5.3882, dt: 1274.17ms, fracRes: 0.6012, norm(attn): 0.1157, norm(output): 0.2754, norm(x): 1.0156, norm(y): 1.0073, norm:1.6088, tok/sec: 102868.60, flops:90.08, batch-reuse:1
@ 3396 train 5.3767 , allloss: 5.3951, dt: 1289.60ms, fracRes: 0.6009, norm(attn): 0.1167, norm(output): 0.2734, norm(x): 1.0157, norm(y): 1.0073, norm:1.3820, tok/sec: 101637.67, flops:89.00, batch-reuse:1
@ 3397 train 5.3579 , allloss: 5.3768, dt: 1265.74ms, fracRes: 0.6009, norm(attn): 0.1162, norm(output): 0.2754, norm(x): 1.0109, norm(y): 1.0073, norm:1.4110, tok/sec: 103554.05, flops:90.68, batch-reuse:1
@ 3398 train 5.4415 , allloss: 5.4602, dt: 1281.13ms, fracRes: 0.6013, norm(attn): 0.1152, norm(output): 0.2754, norm(x): 1.0080, norm(y): 1.0072, norm:1.3810, tok/sec: 102309.43, flops:89.59, batch-reuse:1
@ 3399 train 5.3286 , allloss: 5.3471, dt: 1313.87ms, fracRes: 0.6009, norm(attn): 0.1157, norm(output): 0.2734, norm(x): 1.0084, norm(y): 1.0072, norm:1.3994, tok/sec: 99759.95, flops:87.36, batch-reuse:1
@ 3400 train 5.3707 , allloss: 5.3881, dt: 1313.14ms, fracRes: 0.6010, norm(attn): 0.1162, norm(output): 0.2734, norm(x): 1.0120, norm(y): 1.0073, norm:1.5143, tok/sec: 99815.93, flops:87.41, batch-reuse:1
@ 3401 train 5.3541 , allloss: 5.3719, dt: 1276.53ms, fracRes: 0.6016, norm(attn): 0.1162, norm(output): 0.2734, norm(x): 1.0124, norm(y): 1.0073, norm:1.4022, tok/sec: 102677.99, flops:89.91, batch-reuse:1
@ 3402 train 5.4120 , allloss: 5.4315, dt: 1274.52ms, fracRes: 0.6032, norm(attn): 0.1162, norm(output): 0.2754, norm(x): 1.0126, norm(y): 1.0073, norm:1.4692, tok/sec: 102840.35, flops:90.06, batch-reuse:1
@ 3403 train 5.3526 , allloss: 5.3717, dt: 1264.10ms, fracRes: 0.6017, norm(attn): 0.1167, norm(output): 0.2773, norm(x): 1.0128, norm(y): 1.0073, norm:1.3621, tok/sec: 103688.17, flops:90.80, batch-reuse:1
@ 3404 train 5.3214 , allloss: 5.3397, dt: 1280.95ms, fracRes: 0.6012, norm(attn): 0.1172, norm(output): 0.2754, norm(x): 1.0125, norm(y): 1.0072, norm:1.7206, tok/sec: 102324.37, flops:89.60, batch-reuse:1
@ 3405 train 5.3430 , allloss: 5.3620, dt: 1279.80ms, fracRes: 0.6016, norm(attn): 0.1167, norm(output): 0.2715, norm(x): 1.0128, norm(y): 1.0073, norm:1.3678, tok/sec: 102415.82, flops:89.68, batch-reuse:1
@ 3406 train 5.3359 , allloss: 5.3542, dt: 1294.19ms, fracRes: 0.6016, norm(attn): 0.1162, norm(output): 0.2754, norm(x): 1.0107, norm(y): 1.0073, norm:1.6177, tok/sec: 101277.38, flops:88.69, batch-reuse:1
@ 3407 train 5.3246 , allloss: 5.3424, dt: 1293.65ms, fracRes: 0.6022, norm(attn): 0.1162, norm(output): 0.2734, norm(x): 1.0103, norm(y): 1.0073, norm:1.4094, tok/sec: 101319.62, flops:88.72, batch-reuse:1
@ 3408 train 5.3124 , allloss: 5.3313, dt: 1315.34ms, fracRes: 0.6024, norm(attn): 0.1152, norm(output): 0.2734, norm(x): 1.0081, norm(y): 1.0073, norm:1.4479, tok/sec: 99648.90, flops:87.26, batch-reuse:1
@ 3409 train 5.4144 , allloss: 5.4324, dt: 1265.59ms, fracRes: 0.6033, norm(attn): 0.1152, norm(output): 0.2695, norm(x): 1.0086, norm(y): 1.0073, norm:1.5789, tok/sec: 103566.12, flops:90.69, batch-reuse:1
@ 3410 train 5.4266 , allloss: 5.4454, dt: 1230.54ms, fracRes: 0.6028, norm(attn): 0.1157, norm(output): 0.2695, norm(x): 1.0067, norm(y): 1.0072, norm:1.3562, tok/sec: 106515.61, flops:93.27, batch-reuse:1
@ 3411 train 5.3695 , allloss: 5.3877, dt: 1268.28ms, fracRes: 0.6010, norm(attn): 0.1167, norm(output): 0.2734, norm(x): 1.0039, norm(y): 1.0073, norm:1.4902, tok/sec: 103346.07, flops:90.50, batch-reuse:1
@ 3412 train 5.3982 , allloss: 5.4167, dt: 1276.45ms, fracRes: 0.6011, norm(attn): 0.1167, norm(output): 0.2715, norm(x): 1.0013, norm(y): 1.0073, norm:1.5785, tok/sec: 102684.99, flops:89.92, batch-reuse:1
@ 3413 train 5.4410 , allloss: 5.4598, dt: 1296.04ms, fracRes: 0.6008, norm(attn): 0.1167, norm(output): 0.2695, norm(x): 1.0005, norm(y): 1.0073, norm:1.3435, tok/sec: 101132.30, flops:88.56, batch-reuse:1
@ 3414 train 5.2867 , allloss: 5.3050, dt: 1263.73ms, fracRes: 0.6003, norm(attn): 0.1162, norm(output): 0.2715, norm(x): 0.9979, norm(y): 1.0072, norm:1.4066, tok/sec: 103718.55, flops:90.82, batch-reuse:1
@ 3415 train 5.3186 , allloss: 5.3369, dt: 1255.29ms, fracRes: 0.5995, norm(attn): 0.1172, norm(output): 0.2715, norm(x): 0.9968, norm(y): 1.0073, norm:1.4619, tok/sec: 104415.39, flops:91.44, batch-reuse:1
@ 3416 train 5.4091 , allloss: 5.4283, dt: 1263.12ms, fracRes: 0.6016, norm(attn): 0.1157, norm(output): 0.2695, norm(x): 1.0028, norm(y): 1.0073, norm:1.3173, tok/sec: 103768.37, flops:90.87, batch-reuse:1
@ 3417 train 5.3243 , allloss: 5.3430, dt: 1299.43ms, fracRes: 0.6017, norm(attn): 0.1162, norm(output): 0.2715, norm(x): 0.9989, norm(y): 1.0072, norm:1.3728, tok/sec: 100869.07, flops:88.33, batch-reuse:1
@ 3418 train 5.2994 , allloss: 5.3180, dt: 1285.70ms, fracRes: 0.6014, norm(attn): 0.1167, norm(output): 0.2695, norm(x): 0.9963, norm(y): 1.0073, norm:1.1898, tok/sec: 101945.71, flops:89.27, batch-reuse:1
@ 3419 train 5.3390 , allloss: 5.3577, dt: 1266.11ms, fracRes: 0.6014, norm(attn): 0.1162, norm(output): 0.2695, norm(x): 1.0004, norm(y): 1.0074, norm:1.2927, tok/sec: 103523.24, flops:90.65, batch-reuse:1
@ 3420 train 5.3019 , allloss: 5.3196, dt: 1258.70ms, fracRes: 0.6013, norm(attn): 0.1162, norm(output): 0.2715, norm(x): 0.9962, norm(y): 1.0073, norm:1.1622, tok/sec: 104132.43, flops:91.19, batch-reuse:1
@ 3421 train 5.3517 , allloss: 5.3700, dt: 1275.29ms, fracRes: 0.6018, norm(attn): 0.1157, norm(output): 0.2715, norm(x): 0.9978, norm(y): 1.0072, norm:1.3237, tok/sec: 102778.34, flops:90.00, batch-reuse:1
@ 3422 train 5.3767 , allloss: 5.3951, dt: 1276.90ms, fracRes: 0.6034, norm(attn): 0.1143, norm(output): 0.2676, norm(x): 1.0021, norm(y): 1.0074, norm:1.2626, tok/sec: 102648.60, flops:89.89, batch-reuse:1
@ 3423 train 5.3248 , allloss: 5.3437, dt: 1274.18ms, fracRes: 0.6019, norm(attn): 0.1167, norm(output): 0.2695, norm(x): 0.9976, norm(y): 1.0073, norm:1.5143, tok/sec: 102867.56, flops:90.08, batch-reuse:1
@ 3424 train 5.3723 , allloss: 5.3919, dt: 1270.14ms, fracRes: 0.6000, norm(attn): 0.1172, norm(output): 0.2695, norm(x): 0.9946, norm(y): 1.0073, norm:1.2780, tok/sec: 103194.97, flops:90.37, batch-reuse:1
@ 3425 train 5.3862 , allloss: 5.4053, dt: 1272.34ms, fracRes: 0.6003, norm(attn): 0.1162, norm(output): 0.2695, norm(x): 0.9941, norm(y): 1.0073, norm:1.5597, tok/sec: 103016.47, flops:90.21, batch-reuse:1
@ 3426 train 5.3098 , allloss: 5.3276, dt: 1272.27ms, fracRes: 0.6002, norm(attn): 0.1167, norm(output): 0.2695, norm(x): 0.9925, norm(y): 1.0073, norm:1.3751, tok/sec: 103022.45, flops:90.22, batch-reuse:1
@ 3427 train 5.3370 , allloss: 5.3556, dt: 1289.29ms, fracRes: 0.6008, norm(attn): 0.1167, norm(output): 0.2695, norm(x): 0.9941, norm(y): 1.0073, norm:1.4315, tok/sec: 101662.40, flops:89.02, batch-reuse:1
@ 3428 train 5.2677 , allloss: 5.2865, dt: 1266.56ms, fracRes: 0.6014, norm(attn): 0.1152, norm(output): 0.2676, norm(x): 0.9939, norm(y): 1.0073, norm:1.4237, tok/sec: 103486.80, flops:90.62, batch-reuse:1
@ 3429 train 5.2728 , allloss: 5.2919, dt: 1280.60ms, fracRes: 0.6013, norm(attn): 0.1167, norm(output): 0.2715, norm(x): 0.9912, norm(y): 1.0072, norm:1.3743, tok/sec: 102351.77, flops:89.63, batch-reuse:1
@ 3430 train 5.3786 , allloss: 5.3962, dt: 1277.06ms, fracRes: 0.6010, norm(attn): 0.1157, norm(output): 0.2695, norm(x): 0.9924, norm(y): 1.0071, norm:1.3364, tok/sec: 102635.91, flops:89.88, batch-reuse:1
@ 3431 train 5.4847 , allloss: 5.5036, dt: 1281.52ms, fracRes: 0.6022, norm(attn): 0.1147, norm(output): 0.2676, norm(x): 1.0009, norm(y): 1.0073, norm:2.0818, tok/sec: 102278.57, flops:89.56, batch-reuse:1
@ 3432 train 5.3848 , allloss: 5.4048, dt: 1267.05ms, fracRes: 0.6002, norm(attn): 0.1167, norm(output): 0.2715, norm(x): 0.9886, norm(y): 1.0072, norm:2.3023, tok/sec: 103446.26, flops:90.59, batch-reuse:1
@ 3433 train 5.3187 , allloss: 5.3376, dt: 1268.74ms, fracRes: 0.6006, norm(attn): 0.1172, norm(output): 0.2695, norm(x): 0.9919, norm(y): 1.0073, norm:2.0007, tok/sec: 103309.19, flops:90.47, batch-reuse:1
@ 3434 train 5.3446 , allloss: 5.3636, dt: 1290.95ms, fracRes: 0.6021, norm(attn): 0.1167, norm(output): 0.2695, norm(x): 0.9958, norm(y): 1.0074, norm:1.6495, tok/sec: 101531.05, flops:88.91, batch-reuse:1
@ 3435 train 5.3250 , allloss: 5.3443, dt: 1284.73ms, fracRes: 0.6016, norm(attn): 0.1162, norm(output): 0.2695, norm(x): 0.9967, norm(y): 1.0074, norm:1.9576, tok/sec: 102022.64, flops:89.34, batch-reuse:1
@ 3436 train 5.3311 , allloss: 5.3498, dt: 1283.97ms, fracRes: 0.6009, norm(attn): 0.1157, norm(output): 0.2695, norm(x): 0.9971, norm(y): 1.0074, norm:1.3911, tok/sec: 102083.18, flops:89.39, batch-reuse:1
@ 3437 train 5.2809 , allloss: 5.2995, dt: 1259.99ms, fracRes: 0.6003, norm(attn): 0.1162, norm(output): 0.2734, norm(x): 0.9949, norm(y): 1.0073, norm:1.7025, tok/sec: 104026.18, flops:91.09, batch-reuse:1
@ 3438 train 5.3313 , allloss: 5.3509, dt: 1273.29ms, fracRes: 0.6007, norm(attn): 0.1167, norm(output): 0.2695, norm(x): 0.9944, norm(y): 1.0073, norm:1.6679, tok/sec: 102939.81, flops:90.14, batch-reuse:1
@ 3439 train 5.2815 , allloss: 5.3010, dt: 1267.78ms, fracRes: 0.6014, norm(attn): 0.1162, norm(output): 0.2676, norm(x): 0.9922, norm(y): 1.0074, norm:1.5234, tok/sec: 103387.33, flops:90.53, batch-reuse:1
@ 3440 train 5.2125 , allloss: 5.2315, dt: 1263.05ms, fracRes: 0.6011, norm(attn): 0.1157, norm(output): 0.2676, norm(x): 0.9874, norm(y): 1.0074, norm:1.3887, tok/sec: 103774.35, flops:90.87, batch-reuse:1
@ 3441 train 5.3240 , allloss: 5.3424, dt: 1277.90ms, fracRes: 0.6011, norm(attn): 0.1147, norm(output): 0.2676, norm(x): 0.9885, norm(y): 1.0073, norm:1.2858, tok/sec: 102568.32, flops:89.82, batch-reuse:1
@ 3442 train 5.3311 , allloss: 5.3498, dt: 1261.04ms, fracRes: 0.6021, norm(attn): 0.1157, norm(output): 0.2676, norm(x): 0.9893, norm(y): 1.0074, norm:1.2628, tok/sec: 103939.37, flops:91.02, batch-reuse:1
@ 3443 train 5.3151 , allloss: 5.3341, dt: 1280.35ms, fracRes: 0.6033, norm(attn): 0.1152, norm(output): 0.2676, norm(x): 0.9947, norm(y): 1.0074, norm:1.6364, tok/sec: 102372.33, flops:89.65, batch-reuse:1
@ 3444 train 5.2711 , allloss: 5.2893, dt: 1284.36ms, fracRes: 0.6023, norm(attn): 0.1172, norm(output): 0.2695, norm(x): 0.9904, norm(y): 1.0074, norm:1.4949, tok/sec: 102052.58, flops:89.37, batch-reuse:1
@ 3445 train 5.3042 , allloss: 5.3230, dt: 1264.10ms, fracRes: 0.6012, norm(attn): 0.1177, norm(output): 0.2695, norm(x): 0.9912, norm(y): 1.0072, norm:1.3582, tok/sec: 103688.40, flops:90.80, batch-reuse:1
@ 3446 train 5.3288 , allloss: 5.3478, dt: 1263.16ms, fracRes: 0.6019, norm(attn): 0.1167, norm(output): 0.2695, norm(x): 0.9963, norm(y): 1.0073, norm:1.4896, tok/sec: 103764.85, flops:90.87, batch-reuse:1
@ 3447 train 5.3179 , allloss: 5.3361, dt: 1274.42ms, fracRes: 0.6021, norm(attn): 0.1157, norm(output): 0.2676, norm(x): 0.9988, norm(y): 1.0074, norm:1.3705, tok/sec: 102848.53, flops:90.06, batch-reuse:1
@ 3448 train 5.2895 , allloss: 5.3091, dt: 1268.66ms, fracRes: 0.6025, norm(attn): 0.1157, norm(output): 0.2695, norm(x): 0.9971, norm(y): 1.0074, norm:1.4771, tok/sec: 103315.61, flops:90.47, batch-reuse:1
@ 3449 train 5.3206 , allloss: 5.3392, dt: 1275.90ms, fracRes: 0.6019, norm(attn): 0.1162, norm(output): 0.2676, norm(x): 0.9949, norm(y): 1.0074, norm:1.3050, tok/sec: 102729.02, flops:89.96, batch-reuse:1
@ 3450 train 5.2310 , allloss: 5.2504, dt: 1263.69ms, fracRes: 0.6010, norm(attn): 0.1167, norm(output): 0.2695, norm(x): 0.9925, norm(y): 1.0073, norm:1.2428, tok/sec: 103721.84, flops:90.83, batch-reuse:1
@ 3451 train 5.3072 , allloss: 5.3254, dt: 1264.14ms, fracRes: 0.6014, norm(attn): 0.1167, norm(output): 0.2695, norm(x): 0.9937, norm(y): 1.0073, norm:1.1106, tok/sec: 103684.65, flops:90.80, batch-reuse:1
@ 3452 train 5.3222 , allloss: 5.3399, dt: 1279.16ms, fracRes: 0.6012, norm(attn): 0.1167, norm(output): 0.2715, norm(x): 0.9993, norm(y): 1.0073, norm:1.6386, tok/sec: 102467.38, flops:89.73, batch-reuse:1
@ 3453 train 5.3370 , allloss: 5.3558, dt: 1279.79ms, fracRes: 0.6018, norm(attn): 0.1172, norm(output): 0.2676, norm(x): 0.9958, norm(y): 1.0074, norm:1.7112, tok/sec: 102417.19, flops:89.69, batch-reuse:1
@ 3454 train 5.2788 , allloss: 5.2969, dt: 1270.21ms, fracRes: 0.6020, norm(attn): 0.1167, norm(output): 0.2676, norm(x): 0.9886, norm(y): 1.0072, norm:1.6889, tok/sec: 103189.60, flops:90.36, batch-reuse:1
@ 3455 train 5.3047 , allloss: 5.3238, dt: 1259.91ms, fracRes: 0.6028, norm(attn): 0.1167, norm(output): 0.2695, norm(x): 0.9956, norm(y): 1.0074, norm:1.4995, tok/sec: 104033.09, flops:91.10, batch-reuse:1
@ 3456 train 5.2411 , allloss: 5.2598, dt: 1287.86ms, fracRes: 0.6025, norm(attn): 0.1157, norm(output): 0.2676, norm(x): 0.9950, norm(y): 1.0073, norm:1.7550, tok/sec: 101775.19, flops:89.12, batch-reuse:1
@ 3457 train 5.2669 , allloss: 5.2858, dt: 1294.85ms, fracRes: 0.6030, norm(attn): 0.1152, norm(output): 0.2656, norm(x): 0.9967, norm(y): 1.0074, norm:1.3782, tok/sec: 101225.63, flops:88.64, batch-reuse:1
@ 3458 train 5.2325 , allloss: 5.2518, dt: 1276.32ms, fracRes: 0.6020, norm(attn): 0.1162, norm(output): 0.2676, norm(x): 0.9920, norm(y): 1.0073, norm:1.6837, tok/sec: 102695.46, flops:89.93, batch-reuse:1
@ 3459 train 5.3084 , allloss: 5.3277, dt: 1272.31ms, fracRes: 0.6007, norm(attn): 0.1167, norm(output): 0.2695, norm(x): 0.9944, norm(y): 1.0073, norm:1.3581, tok/sec: 103019.32, flops:90.21, batch-reuse:1
@ 3460 train 5.3504 , allloss: 5.3709, dt: 1266.23ms, fracRes: 0.6000, norm(attn): 0.1167, norm(output): 0.2695, norm(x): 0.9922, norm(y): 1.0073, norm:1.3563, tok/sec: 103513.77, flops:90.65, batch-reuse:1
@ 3461 train 5.2249 , allloss: 5.2432, dt: 1280.96ms, fracRes: 0.5994, norm(attn): 0.1167, norm(output): 0.2695, norm(x): 0.9914, norm(y): 1.0074, norm:2.0111, tok/sec: 102323.37, flops:89.60, batch-reuse:1
@ 3462 train 5.2834 , allloss: 5.3024, dt: 1278.21ms, fracRes: 0.6006, norm(attn): 0.1167, norm(output): 0.2676, norm(x): 0.9894, norm(y): 1.0074, norm:1.2243, tok/sec: 102543.22, flops:89.80, batch-reuse:1
@ 3463 train 5.3311 , allloss: 5.3505, dt: 1271.80ms, fracRes: 0.6015, norm(attn): 0.1152, norm(output): 0.2695, norm(x): 0.9866, norm(y): 1.0074, norm:1.1921, tok/sec: 103060.63, flops:90.25, batch-reuse:1
@ 3464 train 5.1586 , allloss: 5.1773, dt: 1269.32ms, fracRes: 0.6022, norm(attn): 0.1162, norm(output): 0.2676, norm(x): 0.9916, norm(y): 1.0074, norm:1.4298, tok/sec: 103261.76, flops:90.42, batch-reuse:1
@ 3465 train 5.3367 , allloss: 5.3554, dt: 1290.43ms, fracRes: 0.6036, norm(attn): 0.1152, norm(output): 0.2676, norm(x): 0.9958, norm(y): 1.0074, norm:1.4211, tok/sec: 101572.36, flops:88.95, batch-reuse:1
@ 3466 train 5.2743 , allloss: 5.2934, dt: 1272.68ms, fracRes: 0.6030, norm(attn): 0.1162, norm(output): 0.2676, norm(x): 0.9969, norm(y): 1.0075, norm:1.1472, tok/sec: 102988.79, flops:90.19, batch-reuse:1
@ 3467 train 5.3015 , allloss: 5.3214, dt: 1282.15ms, fracRes: 0.6020, norm(attn): 0.1172, norm(output): 0.2695, norm(x): 0.9966, norm(y): 1.0074, norm:1.4365, tok/sec: 102228.25, flops:89.52, batch-reuse:1
@ 3468 train 5.1586 , allloss: 5.1769, dt: 1276.70ms, fracRes: 0.6006, norm(attn): 0.1177, norm(output): 0.2676, norm(x): 0.9891, norm(y): 1.0073, norm:1.4651, tok/sec: 102664.60, flops:89.90, batch-reuse:1
@ 3469 train 5.2563 , allloss: 5.2743, dt: 1266.73ms, fracRes: 0.6012, norm(attn): 0.1167, norm(output): 0.2676, norm(x): 0.9935, norm(y): 1.0074, norm:1.3132, tok/sec: 103472.83, flops:90.61, batch-reuse:1
@ 3470 train 5.3556 , allloss: 5.3738, dt: 1269.55ms, fracRes: 0.6013, norm(attn): 0.1167, norm(output): 0.2676, norm(x): 0.9930, norm(y): 1.0074, norm:1.6865, tok/sec: 103243.24, flops:90.41, batch-reuse:1
@ 3471 train 5.3001 , allloss: 5.3193, dt: 1254.91ms, fracRes: 0.6015, norm(attn): 0.1162, norm(output): 0.2676, norm(x): 0.9942, norm(y): 1.0074, norm:1.4466, tok/sec: 104447.39, flops:91.46, batch-reuse:1
@ 3472 train 5.2748 , allloss: 5.2928, dt: 1277.01ms, fracRes: 0.6006, norm(attn): 0.1157, norm(output): 0.2676, norm(x): 0.9889, norm(y): 1.0073, norm:1.4872, tok/sec: 102640.09, flops:89.88, batch-reuse:1
@ 3473 train 5.2321 , allloss: 5.2505, dt: 1271.94ms, fracRes: 0.6011, norm(attn): 0.1162, norm(output): 0.2656, norm(x): 0.9873, norm(y): 1.0073, norm:1.1694, tok/sec: 103048.60, flops:90.24, batch-reuse:1
@ 3474 train 5.2873 , allloss: 5.3061, dt: 1290.72ms, fracRes: 0.6016, norm(attn): 0.1167, norm(output): 0.2676, norm(x): 0.9891, norm(y): 1.0074, norm:1.6520, tok/sec: 101549.19, flops:88.93, batch-reuse:1
@ 3475 train 5.1380 , allloss: 5.1563, dt: 1272.24ms, fracRes: 0.6014, norm(attn): 0.1172, norm(output): 0.2676, norm(x): 0.9922, norm(y): 1.0075, norm:1.4146, tok/sec: 103024.38, flops:90.22, batch-reuse:1
@ 3476 train 5.2494 , allloss: 5.2677, dt: 1246.31ms, fracRes: 0.6019, norm(attn): 0.1172, norm(output): 0.2676, norm(x): 0.9954, norm(y): 1.0074, norm:1.3674, tok/sec: 105167.94, flops:92.09, batch-reuse:1
@ 3477 train 5.1545 , allloss: 5.1736, dt: 1271.39ms, fracRes: 0.6006, norm(attn): 0.1177, norm(output): 0.2676, norm(x): 0.9921, norm(y): 1.0074, norm:1.4233, tok/sec: 103093.37, flops:90.28, batch-reuse:1
@ 3478 train 5.2212 , allloss: 5.2394, dt: 1269.73ms, fracRes: 0.6011, norm(attn): 0.1167, norm(output): 0.2676, norm(x): 0.9907, norm(y): 1.0074, norm:1.5939, tok/sec: 103228.65, flops:90.40, batch-reuse:1
@ 3479 train 5.1445 , allloss: 5.1636, dt: 1268.99ms, fracRes: 0.6021, norm(attn): 0.1157, norm(output): 0.2656, norm(x): 0.9891, norm(y): 1.0075, norm:1.4913, tok/sec: 103288.83, flops:90.45, batch-reuse:1
@ 3480 train 5.2317 , allloss: 5.2500, dt: 1262.01ms, fracRes: 0.6020, norm(attn): 0.1162, norm(output): 0.2656, norm(x): 0.9910, norm(y): 1.0073, norm:1.4077, tok/sec: 103859.53, flops:90.95, batch-reuse:1
@ 3481 train 5.2730 , allloss: 5.2915, dt: 1266.07ms, fracRes: 0.6023, norm(attn): 0.1152, norm(output): 0.2695, norm(x): 0.9902, norm(y): 1.0074, norm:1.3876, tok/sec: 103526.77, flops:90.66, batch-reuse:1
@ 3482 train 5.2654 , allloss: 5.2855, dt: 1251.44ms, fracRes: 0.6012, norm(attn): 0.1167, norm(output): 0.2656, norm(x): 0.9846, norm(y): 1.0073, norm:1.5190, tok/sec: 104737.24, flops:91.72, batch-reuse:1
@ 3483 train 5.1851 , allloss: 5.2044, dt: 1272.23ms, fracRes: 0.5999, norm(attn): 0.1162, norm(output): 0.2676, norm(x): 0.9854, norm(y): 1.0074, norm:1.4961, tok/sec: 103025.40, flops:90.22, batch-reuse:1
@ 3484 train 5.2134 , allloss: 5.2319, dt: 1265.29ms, fracRes: 0.6004, norm(attn): 0.1172, norm(output): 0.2676, norm(x): 0.9871, norm(y): 1.0074, norm:1.6078, tok/sec: 103590.42, flops:90.71, batch-reuse:1
@ 3485 train 5.2006 , allloss: 5.2208, dt: 1249.93ms, fracRes: 0.6009, norm(attn): 0.1172, norm(output): 0.2676, norm(x): 0.9841, norm(y): 1.0074, norm:1.3491, tok/sec: 104863.82, flops:91.83, batch-reuse:1
@ 3486 train 5.2439 , allloss: 5.2636, dt: 1275.51ms, fracRes: 0.6012, norm(attn): 0.1167, norm(output): 0.2676, norm(x): 0.9854, norm(y): 1.0074, norm:1.7910, tok/sec: 102760.38, flops:89.99, batch-reuse:1
@ 3487 train 5.0949 , allloss: 5.1135, dt: 1279.98ms, fracRes: 0.6012, norm(attn): 0.1167, norm(output): 0.2656, norm(x): 0.9842, norm(y): 1.0074, norm:1.1702, tok/sec: 102401.72, flops:89.67, batch-reuse:1
@ 3488 train 5.2075 , allloss: 5.2257, dt: 1269.06ms, fracRes: 0.6016, norm(attn): 0.1162, norm(output): 0.2656, norm(x): 0.9865, norm(y): 1.0075, norm:1.6632, tok/sec: 103282.58, flops:90.44, batch-reuse:1
@ 3489 train 5.2213 , allloss: 5.2411, dt: 1243.38ms, fracRes: 0.6021, norm(attn): 0.1157, norm(output): 0.2656, norm(x): 0.9828, norm(y): 1.0075, norm:1.1678, tok/sec: 105416.26, flops:92.31, batch-reuse:1
@ 3490 train 5.1759 , allloss: 5.1961, dt: 1243.19ms, fracRes: 0.6009, norm(attn): 0.1167, norm(output): 0.2656, norm(x): 0.9794, norm(y): 1.0074, norm:1.6319, tok/sec: 105432.05, flops:92.33, batch-reuse:1
@ 3491 train 5.1483 , allloss: 5.1676, dt: 1262.77ms, fracRes: 0.6005, norm(attn): 0.1167, norm(output): 0.2656, norm(x): 0.9772, norm(y): 1.0074, norm:1.2538, tok/sec: 103797.29, flops:90.89, batch-reuse:1
@ 3492 train 5.1785 , allloss: 5.1971, dt: 1283.24ms, fracRes: 0.6004, norm(attn): 0.1167, norm(output): 0.2656, norm(x): 0.9815, norm(y): 1.0074, norm:1.1446, tok/sec: 102141.39, flops:89.44, batch-reuse:1
@ 3493 train 5.1995 , allloss: 5.2183, dt: 1277.62ms, fracRes: 0.6012, norm(attn): 0.1162, norm(output): 0.2656, norm(x): 0.9854, norm(y): 1.0075, norm:1.3345, tok/sec: 102590.88, flops:89.84, batch-reuse:1
@ 3494 train 5.1795 , allloss: 5.1984, dt: 1273.22ms, fracRes: 0.6005, norm(attn): 0.1167, norm(output): 0.2656, norm(x): 0.9813, norm(y): 1.0074, norm:1.3023, tok/sec: 102945.46, flops:90.15, batch-reuse:1
@ 3495 train 5.1949 , allloss: 5.2132, dt: 1241.91ms, fracRes: 0.6012, norm(attn): 0.1162, norm(output): 0.2656, norm(x): 0.9839, norm(y): 1.0075, norm:1.3138, tok/sec: 105540.78, flops:92.42, batch-reuse:1
@ 3496 train 5.1861 , allloss: 5.2048, dt: 1239.21ms, fracRes: 0.6004, norm(attn): 0.1167, norm(output): 0.2656, norm(x): 0.9792, norm(y): 1.0074, norm:1.3302, tok/sec: 105770.72, flops:92.62, batch-reuse:1
@ 3497 train 5.1537 , allloss: 5.1729, dt: 1281.75ms, fracRes: 0.6000, norm(attn): 0.1167, norm(output): 0.2656, norm(x): 0.9784, norm(y): 1.0075, norm:1.5623, tok/sec: 102260.46, flops:89.55, batch-reuse:1
@ 3498 train 5.1802 , allloss: 5.1993, dt: 1246.10ms, fracRes: 0.6011, norm(attn): 0.1167, norm(output): 0.2656, norm(x): 0.9796, norm(y): 1.0074, norm:1.4141, tok/sec: 105185.50, flops:92.11, batch-reuse:1
@ 3499 train 5.1816 , allloss: 5.2009, dt: 1247.90ms, fracRes: 0.6014, norm(attn): 0.1162, norm(output): 0.2656, norm(x): 0.9797, norm(y): 1.0074, norm:1.3035, tok/sec: 105034.40, flops:91.98, batch-reuse:1
@ 3500 train 5.1829 , allloss: 5.2034, dt: 1268.24ms, fracRes: 0.6015, norm(attn): 0.1167, norm(output): 0.2656, norm(x): 0.9743, norm(y): 1.0074, norm:1.4199, tok/sec: 103349.58, flops:90.50, batch-reuse:1
@ 3501 train 5.1176 , allloss: 5.1374, dt: 1268.86ms, fracRes: 0.6002, norm(attn): 0.1172, norm(output): 0.2656, norm(x): 0.9731, norm(y): 1.0074, norm:1.3700, tok/sec: 103298.69, flops:90.46, batch-reuse:1
@ 3502 train 5.1839 , allloss: 5.2045, dt: 1250.28ms, fracRes: 0.6013, norm(attn): 0.1167, norm(output): 0.2656, norm(x): 0.9714, norm(y): 1.0074, norm:1.4760, tok/sec: 104833.75, flops:91.80, batch-reuse:1
@ 3503 train 5.1121 , allloss: 5.1318, dt: 1260.18ms, fracRes: 0.6002, norm(attn): 0.1167, norm(output): 0.2656, norm(x): 0.9710, norm(y): 1.0074, norm:1.5728, tok/sec: 104010.85, flops:91.08, batch-reuse:1
@ 3504 train 5.1541 , allloss: 5.1736, dt: 1270.15ms, fracRes: 0.6013, norm(attn): 0.1162, norm(output): 0.2656, norm(x): 0.9753, norm(y): 1.0075, norm:1.3896, tok/sec: 103193.79, flops:90.37, batch-reuse:1
@ 3505 train 5.1108 , allloss: 5.1302, dt: 1267.74ms, fracRes: 0.6010, norm(attn): 0.1172, norm(output): 0.2656, norm(x): 0.9749, norm(y): 1.0074, norm:1.4213, tok/sec: 103390.19, flops:90.54, batch-reuse:1
@ 3506 train 5.1043 , allloss: 5.1241, dt: 1255.51ms, fracRes: 0.6019, norm(attn): 0.1167, norm(output): 0.2637, norm(x): 0.9730, norm(y): 1.0074, norm:1.1883, tok/sec: 104397.55, flops:91.42, batch-reuse:1
@ 3507 train 5.1503 , allloss: 5.1692, dt: 1259.82ms, fracRes: 0.6023, norm(attn): 0.1157, norm(output): 0.2656, norm(x): 0.9760, norm(y): 1.0074, norm:1.4206, tok/sec: 104040.40, flops:91.11, batch-reuse:1
@ 3508 train 5.2061 , allloss: 5.2250, dt: 1270.32ms, fracRes: 0.6016, norm(attn): 0.1157, norm(output): 0.2637, norm(x): 0.9760, norm(y): 1.0074, norm:1.3369, tok/sec: 103180.21, flops:90.35, batch-reuse:1
@ 3509 train 5.2425 , allloss: 5.2625, dt: 1288.80ms, fracRes: 0.6021, norm(attn): 0.1162, norm(output): 0.2637, norm(x): 0.9748, norm(y): 1.0074, norm:1.7894, tok/sec: 101700.58, flops:89.06, batch-reuse:1
@ 3510 train 5.1356 , allloss: 5.1554, dt: 1270.79ms, fracRes: 0.6009, norm(attn): 0.1167, norm(output): 0.2656, norm(x): 0.9802, norm(y): 1.0074, norm:1.6396, tok/sec: 103142.34, flops:90.32, batch-reuse:1
@ 3511 train 5.2211 , allloss: 5.2418, dt: 1257.67ms, fracRes: 0.6011, norm(attn): 0.1172, norm(output): 0.2656, norm(x): 0.9811, norm(y): 1.0074, norm:1.4356, tok/sec: 104217.73, flops:91.26, batch-reuse:1
@ 3512 train 5.2212 , allloss: 5.2440, dt: 1273.65ms, fracRes: 0.6006, norm(attn): 0.1182, norm(output): 0.2656, norm(x): 0.9715, norm(y): 1.0073, norm:1.4688, tok/sec: 102910.35, flops:90.12, batch-reuse:1
@ 3513 train 5.1707 , allloss: 5.1891, dt: 1292.15ms, fracRes: 0.6001, norm(attn): 0.1172, norm(output): 0.2656, norm(x): 0.9760, norm(y): 1.0074, norm:1.5364, tok/sec: 101437.18, flops:88.83, batch-reuse:1
@ 3514 train 5.2999 , allloss: 5.3192, dt: 1277.27ms, fracRes: 0.6011, norm(attn): 0.1157, norm(output): 0.2656, norm(x): 0.9764, norm(y): 1.0074, norm:1.9447, tok/sec: 102618.73, flops:89.86, batch-reuse:1
@ 3515 train 5.1515 , allloss: 5.1712, dt: 1277.09ms, fracRes: 0.6009, norm(attn): 0.1167, norm(output): 0.2656, norm(x): 0.9768, norm(y): 1.0074, norm:1.3239, tok/sec: 102633.59, flops:89.87, batch-reuse:1
@ 3516 train 5.2685 , allloss: 5.2885, dt: 1266.94ms, fracRes: 0.6022, norm(attn): 0.1162, norm(output): 0.2656, norm(x): 0.9806, norm(y): 1.0075, norm:1.6696, tok/sec: 103455.40, flops:90.59, batch-reuse:1
@ 3517 train 5.1634 , allloss: 5.1824, dt: 1290.09ms, fracRes: 0.6016, norm(attn): 0.1167, norm(output): 0.2656, norm(x): 0.9800, norm(y): 1.0074, norm:1.3271, tok/sec: 101599.26, flops:88.97, batch-reuse:1
@ 3518 train 5.2920 , allloss: 5.3120, dt: 1275.40ms, fracRes: 0.6014, norm(attn): 0.1172, norm(output): 0.2656, norm(x): 0.9776, norm(y): 1.0074, norm:1.4468, tok/sec: 102769.33, flops:89.99, batch-reuse:1
@ 3519 train 5.1361 , allloss: 5.1564, dt: 1251.16ms, fracRes: 0.6004, norm(attn): 0.1177, norm(output): 0.2656, norm(x): 0.9741, norm(y): 1.0075, norm:1.9738, tok/sec: 104760.11, flops:91.74, batch-reuse:1
@ 3520 train 5.1302 , allloss: 5.1510, dt: 1255.74ms, fracRes: 0.6008, norm(attn): 0.1177, norm(output): 0.2656, norm(x): 0.9684, norm(y): 1.0074, norm:1.5236, tok/sec: 104378.02, flops:91.40, batch-reuse:1
@ 3521 train 5.1796 , allloss: 5.1990, dt: 1259.37ms, fracRes: 0.6011, norm(attn): 0.1172, norm(output): 0.2656, norm(x): 0.9742, norm(y): 1.0075, norm:1.2856, tok/sec: 104077.15, flops:91.14, batch-reuse:1
@ 3522 train 5.1043 , allloss: 5.1219, dt: 1283.35ms, fracRes: 0.6018, norm(attn): 0.1152, norm(output): 0.2656, norm(x): 0.9804, norm(y): 1.0074, norm:1.6569, tok/sec: 102132.59, flops:89.44, batch-reuse:1
@ 3523 train 5.1717 , allloss: 5.1920, dt: 1269.89ms, fracRes: 0.6026, norm(attn): 0.1162, norm(output): 0.2656, norm(x): 0.9837, norm(y): 1.0075, norm:1.8148, tok/sec: 103215.18, flops:90.38, batch-reuse:1
@ 3524 train 5.2389 , allloss: 5.2586, dt: 1266.38ms, fracRes: 0.6030, norm(attn): 0.1162, norm(output): 0.2656, norm(x): 0.9802, norm(y): 1.0075, norm:1.6219, tok/sec: 103501.62, flops:90.63, batch-reuse:1
@ 3525 train 5.1855 , allloss: 5.2055, dt: 1263.08ms, fracRes: 0.5999, norm(attn): 0.1177, norm(output): 0.2656, norm(x): 0.9737, norm(y): 1.0074, norm:1.2091, tok/sec: 103771.43, flops:90.87, batch-reuse:1
@ 3526 train 5.3167 , allloss: 5.3361, dt: 1268.73ms, fracRes: 0.6007, norm(attn): 0.1172, norm(output): 0.2656, norm(x): 0.9755, norm(y): 1.0074, norm:1.3806, tok/sec: 103309.32, flops:90.47, batch-reuse:1
@ 3527 train 5.3454 , allloss: 5.3642, dt: 1281.30ms, fracRes: 0.6011, norm(attn): 0.1162, norm(output): 0.2656, norm(x): 0.9778, norm(y): 1.0074, norm:2.0183, tok/sec: 102296.39, flops:89.58, batch-reuse:1
@ 3528 train 5.3462 , allloss: 5.3650, dt: 1255.87ms, fracRes: 0.6014, norm(attn): 0.1162, norm(output): 0.2656, norm(x): 0.9759, norm(y): 1.0073, norm:1.3780, tok/sec: 104367.82, flops:91.39, batch-reuse:1
@ 3529 train 5.3641 , allloss: 5.3828, dt: 1268.63ms, fracRes: 0.6004, norm(attn): 0.1167, norm(output): 0.2656, norm(x): 0.9760, norm(y): 1.0073, norm:1.3591, tok/sec: 103317.77, flops:90.47, batch-reuse:1
@ 3530 train 5.3791 , allloss: 5.3982, dt: 1272.94ms, fracRes: 0.6013, norm(attn): 0.1167, norm(output): 0.2656, norm(x): 0.9803, norm(y): 1.0074, norm:1.5784, tok/sec: 102968.23, flops:90.17, batch-reuse:1
@ 3531 train 5.4377 , allloss: 5.4566, dt: 1290.10ms, fracRes: 0.6018, norm(attn): 0.1172, norm(output): 0.2656, norm(x): 0.9806, norm(y): 1.0073, norm:1.3547, tok/sec: 101598.09, flops:88.97, batch-reuse:1
@ 3532 train 5.3453 , allloss: 5.3637, dt: 1315.21ms, fracRes: 0.6032, norm(attn): 0.1162, norm(output): 0.2656, norm(x): 0.9855, norm(y): 1.0075, norm:2.0622, tok/sec: 99658.51, flops:87.27, batch-reuse:1
@ 3533 train 5.4403 , allloss: 5.4587, dt: 1289.32ms, fracRes: 0.6041, norm(attn): 0.1152, norm(output): 0.2656, norm(x): 0.9870, norm(y): 1.0075, norm:1.4298, tok/sec: 101659.88, flops:89.02, batch-reuse:1
@ 3534 train 5.3494 , allloss: 5.3686, dt: 1256.75ms, fracRes: 0.6030, norm(attn): 0.1172, norm(output): 0.2656, norm(x): 0.9842, norm(y): 1.0075, norm:1.6247, tok/sec: 104294.68, flops:91.33, batch-reuse:1
@ 3535 train 5.5569 , allloss: 5.5785, dt: 1258.48ms, fracRes: 0.6043, norm(attn): 0.1167, norm(output): 0.2637, norm(x): 0.9804, norm(y): 1.0075, norm:1.5713, tok/sec: 104151.45, flops:91.20, batch-reuse:1
@ 3536 train 5.2997 , allloss: 5.3193, dt: 1245.61ms, fracRes: 0.6017, norm(attn): 0.1167, norm(output): 0.2656, norm(x): 0.9792, norm(y): 1.0074, norm:2.3206, tok/sec: 105227.04, flops:92.15, batch-reuse:1
@ 3537 train 5.3672 , allloss: 5.3853, dt: 1270.45ms, fracRes: 0.6021, norm(attn): 0.1162, norm(output): 0.2656, norm(x): 0.9833, norm(y): 1.0074, norm:1.4184, tok/sec: 103169.39, flops:90.34, batch-reuse:1
@ 3538 train 5.3379 , allloss: 5.3563, dt: 1290.88ms, fracRes: 0.6023, norm(attn): 0.1157, norm(output): 0.2656, norm(x): 0.9834, norm(y): 1.0073, norm:1.9697, tok/sec: 101536.68, flops:88.91, batch-reuse:1
@ 3539 train 5.3352 , allloss: 5.3540, dt: 1302.99ms, fracRes: 0.6029, norm(attn): 0.1157, norm(output): 0.2656, norm(x): 0.9833, norm(y): 1.0075, norm:1.5648, tok/sec: 100593.51, flops:88.09, batch-reuse:1
@ 3540 train 5.3596 , allloss: 5.3787, dt: 1303.40ms, fracRes: 0.6021, norm(attn): 0.1172, norm(output): 0.2656, norm(x): 0.9811, norm(y): 1.0074, norm:1.6713, tok/sec: 100561.75, flops:88.06, batch-reuse:1
@ 3541 train 5.3691 , allloss: 5.3886, dt: 1274.49ms, fracRes: 0.6016, norm(attn): 0.1172, norm(output): 0.2676, norm(x): 0.9789, norm(y): 1.0074, norm:1.4157, tok/sec: 102842.37, flops:90.06, batch-reuse:1
@ 3542 train 5.3776 , allloss: 5.3967, dt: 1275.74ms, fracRes: 0.6015, norm(attn): 0.1182, norm(output): 0.2676, norm(x): 0.9806, norm(y): 1.0074, norm:1.5743, tok/sec: 102741.81, flops:89.97, batch-reuse:1
@ 3543 train 5.4121 , allloss: 5.4310, dt: 1276.24ms, fracRes: 0.6022, norm(attn): 0.1172, norm(output): 0.2656, norm(x): 0.9830, norm(y): 1.0075, norm:1.3445, tok/sec: 102701.35, flops:89.93, batch-reuse:1
@ 3544 train 5.2970 , allloss: 5.3162, dt: 1287.28ms, fracRes: 0.6020, norm(attn): 0.1177, norm(output): 0.2676, norm(x): 0.9848, norm(y): 1.0074, norm:1.5286, tok/sec: 101820.89, flops:89.16, batch-reuse:1
@ 3545 train 5.3245 , allloss: 5.3427, dt: 1281.74ms, fracRes: 0.6028, norm(attn): 0.1167, norm(output): 0.2656, norm(x): 0.9841, norm(y): 1.0075, norm:1.2649, tok/sec: 102260.65, flops:89.55, batch-reuse:1
@ 3546 train 5.2931 , allloss: 5.3114, dt: 1297.98ms, fracRes: 0.6018, norm(attn): 0.1172, norm(output): 0.2656, norm(x): 0.9827, norm(y): 1.0075, norm:1.6000, tok/sec: 100981.87, flops:88.43, batch-reuse:1
@ 3547 train 5.3271 , allloss: 5.3458, dt: 1319.32ms, fracRes: 0.6010, norm(attn): 0.1177, norm(output): 0.2656, norm(x): 0.9793, norm(y): 1.0075, norm:1.2754, tok/sec: 99348.13, flops:87.00, batch-reuse:1
@ 3548 train 5.2897 , allloss: 5.3091, dt: 1279.82ms, fracRes: 0.6007, norm(attn): 0.1182, norm(output): 0.2656, norm(x): 0.9773, norm(y): 1.0074, norm:1.5113, tok/sec: 102414.39, flops:89.68, batch-reuse:1
@ 3549 train 5.3047 , allloss: 5.3237, dt: 1277.82ms, fracRes: 0.6003, norm(attn): 0.1177, norm(output): 0.2676, norm(x): 0.9770, norm(y): 1.0074, norm:1.2456, tok/sec: 102575.05, flops:89.82, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6016, 0.4004, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7188, 0.0830, 0.1992, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2617, 0.1138, 0.3418, 0.2832, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1768, 0.0291, 0.2080, 0.2061, 0.3809, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0933, 0.0245, 0.0347, 0.1689, 0.4648, 0.2148, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1338, 0.0859, 0.0459, 0.0874, 0.4434, 0.1484, 0.0569, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1602, 0.4590, 0.0913, 0.0198, 0.0271, 0.0449, 0.0039, 0.1934, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1074, 0.0420, 0.0713, 0.0933, 0.1973, 0.0684, 0.1436, 0.0933, 0.1846, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1006, 0.1846, 0.1484, 0.0159, 0.0139, 0.0150, 0.0052, 0.3145, 0.0200, 0.1816, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1060, 0.0496, 0.2441, 0.0442, 0.0400, 0.0242, 0.0232, 0.2422, 0.0530, 0.1445, 0.0295, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0317, 0.0137, 0.0123, 0.1099, 0.0452, 0.1021, 0.5156, 0.0312, 0.0972, 0.0137, 0.0221, 0.0054, 0.0000, 0.0000, 0.0000],
        [0.0649, 0.1602, 0.0248, 0.0115, 0.0771, 0.0588, 0.0057, 0.0212, 0.0850, 0.0918, 0.2695, 0.0889, 0.0400, 0.0000, 0.0000],
        [0.0732, 0.0562, 0.0391, 0.0459, 0.1533, 0.0540, 0.0713, 0.0417, 0.1211, 0.0884, 0.0913, 0.0249, 0.0525, 0.0869, 0.0000],
        [0.0737, 0.0913, 0.1235, 0.0447, 0.0140, 0.0115, 0.0053, 0.1060, 0.0067, 0.0723, 0.0175, 0.2148, 0.1875, 0.0074, 0.0242]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0025, -0.0066,  0.0033,  ..., -0.0373,  0.0196, -0.0003],
        [-0.0311,  0.0098, -0.0121,  ..., -0.0005,  0.0054,  0.0173],
        [ 0.0216,  0.0275, -0.0079,  ..., -0.0216,  0.0220, -0.0187],
        ...,
        [ 0.0282,  0.0233,  0.0166,  ..., -0.0359,  0.0123,  0.0169],
        [-0.0484, -0.0007, -0.0382,  ...,  0.0085, -0.0010, -0.0111],
        [-0.0303,  0.0059, -0.0255,  ..., -0.0122, -0.0120, -0.0084]], device='cuda:0', requires_grad=True)
K: tensor([ 0.8984,  0.6797, -0.6328,  0.1885,  0.3301,  0.7266,  0.8125,  0.2051, -0.0464, -0.2148,  0.6758,  0.0503, -0.7266,  0.0623,  0.0298, -0.5820, -0.0991, -0.0574, -0.3984,  0.3848,  0.5391,  0.0908,  0.0557, -0.2236,  0.3691,  0.2812, -0.8555, -0.5547,  0.8477, -0.3145,  1.5312,  0.1504,
        -0.0125, -0.8906,  1.0859,  0.8398, -0.6250,  0.1953, -0.6172, -1.2344, -0.1553, -0.4844, -0.4746,  1.0000, -0.5312,  0.1562, -0.2969,  1.3359,  0.2080, -0.1128,  0.4922, -0.4160, -1.0859,  0.6836,  0.5703, -0.4082,  0.1406,  0.0036,  1.0547, -0.3945, -0.5391, -0.2715, -0.2891,  0.2520],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0179, -0.0064, -0.0161,  ...,  0.0083, -0.0047, -0.0203],
        [ 0.0135, -0.0141,  0.0093,  ...,  0.0168,  0.0275,  0.0002],
        [-0.0370,  0.0408,  0.0042,  ..., -0.0296, -0.0247, -0.0439],
        ...,
        [ 0.0160,  0.0181,  0.0206,  ...,  0.0143,  0.0192,  0.0180],
        [ 0.0221, -0.0116,  0.0465,  ...,  0.0340,  0.0089,  0.0342],
        [ 0.0107, -0.0167,  0.0193,  ..., -0.0151,  0.0186, -0.0092]], device='cuda:0', requires_grad=True)
Q: tensor([-0.5391, -0.4492, -0.9688, -1.2031,  0.4785, -0.3770, -2.0938,  0.1816,  0.0483,  0.6172, -0.1445, -0.8672, -0.3789, -0.5742, -0.5195, -0.5586, -1.2734, -0.0986, -0.0864,  0.5820,  0.0583, -0.4512,  0.5430,  0.3066,  0.2754, -0.4082, -0.0854, -0.6055, -0.8477,  1.1875, -1.2188,  0.6914,
        -0.4824, -0.2969, -0.3516, -0.4219,  1.1719,  0.5469, -0.3164,  1.7344,  0.7109, -0.3906,  0.6172,  0.9375, -0.1338,  0.0197,  0.2373, -0.6055, -0.2832,  0.1641, -2.4688, -1.0703,  0.0498, -0.7539, -0.5195, -1.0156,  0.2266, -0.9219, -0.1592, -0.8867,  1.2891,  0.8281, -0.4746,  0.4121],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -0.4043,     -0.1719,     -0.1416,     -1.4844,     -1.0234,     -1.2812,      0.6211,     -1.3359,     -0.5195,     -1.3984,      0.3008,      0.7070,     -1.5000,     -0.2295],
        [     0.0000,     -2.1562,     -1.2812,      1.0703,      1.4766,      0.9922,      1.8047,     -2.1875,      1.2266,     -0.3984,      1.4844,     -1.6719,     -1.9453,      2.2188,      0.7031],
        [     0.0000,     -0.8359,      0.2656,      0.0776,     -0.9492,     -0.4707,     -0.6016,     -0.0288,     -1.5156,     -0.4336,     -0.2637,      0.5703,      0.1318,     -1.3906,     -0.1230],
        [     0.0000,     -1.8047,      0.1660,      0.1572,      0.7656,     -0.3789,     -0.2383,     -0.4062,      0.3496,      0.4199,     -0.1006,     -0.6914,     -0.8047,      0.6797,     -0.1602],
        [     0.0000,     -1.3359,     -0.9883,      0.5938,      1.6016,      0.8320,      2.1094,     -1.1250,      1.8672,     -1.1094,      1.0156,     -1.3984,     -1.7578,      1.9922,      1.1484],
        [     0.0000,     -0.4395,     -1.0703,     -0.4258,      1.2031,      0.1050,     -0.8516,     -2.5938,      0.2910,      0.2578,      2.1094,     -0.5312,     -2.2344,      0.6133,      0.3809],
        [     0.0000,      1.0469,     -0.5625,     -2.0938,     -1.7812,     -1.2734,     -3.7188,      0.1885,     -1.4844,      0.1455,     -0.0330,      0.8516,      0.5352,     -1.8125,     -0.9023],
        [     0.0000,     -0.9414,     -0.4160,     -0.1465,      0.6055,     -0.4512,      0.2852,     -0.1426,      0.5352,      0.0035,     -0.2715,     -0.8359,     -0.4453,      0.0962,     -0.1846],
        [     0.0000,      0.6055,      0.3887,     -1.8516,     -1.9844,     -1.9062,     -2.9688,      1.1406,     -1.6172,      0.5898,     -0.6914,      1.3125,      1.7656,     -2.2969,     -0.7773],
        [     0.0000,     -0.7578,      0.8320,     -0.8750,     -0.9727,     -1.4844,     -1.5234,      0.8242,     -0.6953,      0.3086,     -1.2812,      0.7070,      0.7109,     -1.1406,     -0.5430],
        [     0.0000,     -0.8438,     -0.9453,      1.2422,      0.3496,      1.1719,      2.7812,     -0.0165,      1.1172,     -0.8438,     -0.3613,     -1.7656,      0.0586,      1.5469,      1.1953],
        [     0.0000,      0.9023,     -0.9609,     -1.7266,      0.1699,     -0.0991,     -2.4375,     -1.1172,      0.2715,      0.3457,      1.4297,      0.3164,     -0.4844,      0.0659,     -0.2197],
        [     0.0000,     -0.2656,     -0.6250,     -0.4688,      0.7383,     -0.3047,     -0.0242,     -0.5586,      0.5039,      0.1895,      0.2207,     -1.0781,     -0.3320,      0.1709,     -0.3770],
        [     0.0000,      0.2158,      0.5195,     -0.4980,     -1.6641,     -1.8594,     -2.6250,      0.3672,     -2.3906,     -0.0140,     -1.4375,      1.0703,      0.9375,     -2.2969,     -1.1172]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6935],
        [0.6413],
        [0.4218],
        [0.2284],
        [0.2164],
        [0.2002],
        [0.1673],
        [0.1320],
        [0.1110],
        [0.0844],
        [0.0572],
        [0.0555],
        [0.0568],
        [0.0706]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0090,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8359,     0.0728,     0.0913,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8633,     0.0579,     0.0564,     0.0239,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5000,     0.1426,     0.0571,     0.1582,     0.1416,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4414,     0.1182,     0.1865,     0.0566,     0.0654,     0.1318,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3926,     0.0557,     0.2188,     0.0884,     0.0564,     0.1445,     0.0425,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7734,     0.0374,     0.0286,     0.0084,     0.0649,     0.0347,     0.0217,     0.0306,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4922,     0.0381,     0.0176,     0.0192,     0.0344,     0.1514,     0.1035,     0.0092,     0.1357,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6328,     0.0659,     0.0347,     0.0248,     0.0312,     0.0771,     0.0476,     0.0211,     0.0403,     0.0247,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3457,     0.0198,     0.0010,     0.0036,     0.0063,     0.0547,     0.0422,     0.0007,     0.1904,     0.0007,     0.3359,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6914,     0.0322,     0.0137,     0.0101,     0.0194,     0.0659,     0.0140,     0.0219,     0.0330,     0.0364,     0.0452,     0.0156,     0.0000,     0.0000,     0.0000],
        [    0.6289,     0.0138,     0.0035,     0.0035,     0.0447,     0.0669,     0.0337,     0.0066,     0.1157,     0.0038,     0.0559,     0.0027,     0.0216,     0.0000,     0.0000],
        [    0.1621,     0.0337,     0.0250,     0.0386,     0.0327,     0.1328,     0.1089,     0.0119,     0.0981,     0.0267,     0.1484,     0.0238,     0.0193,     0.1377,     0.0000],
        [    0.1289,     0.0669,     0.0640,     0.0337,     0.0090,     0.0288,     0.0113,     0.0383,     0.0056,     0.2363,     0.0288,     0.1602,     0.0776,     0.0076,     0.1025]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0261, -0.0092, -0.0044,  ..., -0.0238, -0.0276,  0.0267],
        [-0.0026,  0.0083, -0.0025,  ...,  0.0271,  0.0072, -0.0340],
        [ 0.0106,  0.0299,  0.0176,  ...,  0.0163,  0.0192,  0.0073],
        ...,
        [-0.0142,  0.0196,  0.0169,  ...,  0.0371, -0.0163, -0.0038],
        [-0.0130, -0.0107,  0.0003,  ..., -0.0067,  0.0047,  0.0035],
        [ 0.0245,  0.0367,  0.0180,  ...,  0.0073, -0.0292,  0.0179]], device='cuda:0', requires_grad=True)
K: tensor([ 1.3906,  0.3516, -0.8633,  0.0234, -1.2734, -0.9609,  0.1650,  0.2275,  0.4258,  0.0417,  0.3965,  0.5859, -0.8477,  0.4512,  0.3516, -1.1016,  0.3320,  0.1865, -1.0234,  0.0435,  0.6211,  0.7891,  0.7266, -1.3984,  0.2852,  0.1387, -0.3965,  0.6953, -0.2070, -0.3359,  1.8672,  0.2812,
        -0.6758,  0.0664, -0.6406,  1.0547,  0.9180,  0.5859,  0.1553,  1.2422,  1.6094, -0.5273, -0.5391,  0.3066,  0.6719,  0.3438, -0.7656, -1.3438,  0.9062,  0.4180, -1.0000,  1.7266, -0.8906, -0.4922,  0.3535, -0.4453,  1.2422, -0.1484, -0.1855,  1.3125, -0.4199,  1.1875,  1.0312,  0.0752],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0160, -0.0153, -0.0071,  ..., -0.0037,  0.0033, -0.0085],
        [ 0.0145,  0.0107, -0.0490,  ..., -0.0129, -0.0141, -0.0146],
        [ 0.0394,  0.0333,  0.0229,  ..., -0.0125,  0.0316,  0.0178],
        ...,
        [-0.0148, -0.0243,  0.0159,  ...,  0.0261, -0.0035, -0.0351],
        [ 0.0463,  0.0092, -0.0103,  ..., -0.0124,  0.0132,  0.0013],
        [ 0.0162, -0.0248, -0.0192,  ...,  0.0126, -0.0099,  0.0194]], device='cuda:0', requires_grad=True)
Q: tensor([-0.6758,  0.8555,  0.6602,  0.0369, -0.3750, -0.0503,  0.8008,  0.8672,  0.6680,  0.5898,  0.6094, -1.7891,  0.1270, -0.2490,  0.1016,  1.9141,  0.1719,  0.8594, -0.8398, -1.3828,  1.3906, -0.9727,  0.5156,  0.1245, -0.4629, -0.4551,  1.2031,  0.7344, -0.0544, -0.3457, -0.4453, -0.6719,
        -0.0613,  0.5664,  0.8828,  1.4297,  0.4238,  0.3750, -0.0525,  0.5625, -1.1797,  0.0640,  0.5820,  0.1807,  0.3535, -1.5938, -0.2432, -0.8203,  0.7930, -0.4180,  0.8828,  0.2773, -0.6836,  0.1650,  0.3164,  1.6172, -0.4277,  0.7344,  0.2031,  0.6406, -0.6484, -0.8984,  0.4473,  0.3691],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -4.6875, -6.3750, -6.5625, -5.2812, -3.7812, -3.8438, -6.1562, -2.8281, -7.3125, -4.5312, -7.2812, -5.3438, -2.8281, -3.5781],
        [ 0.0000, -2.4375, -2.2188, -3.0781, -3.1875, -2.0625, -2.9062, -2.1406, -3.1094, -1.2969, -3.1250, -1.9375, -1.0859, -2.8125, -1.3359],
        [ 0.0000, -2.7031, -2.7344, -3.5938, -3.2188, -2.5781, -2.9062, -3.5938, -2.9531, -2.9375, -3.7031, -2.8594, -2.7344, -2.9531, -1.5938],
        [ 0.0000, -1.2578, -2.1719, -1.1562, -1.2656, -0.2637, -0.6250, -2.1250,  0.2715, -1.2031,  1.5938, -1.6953, -1.5547,  0.8789, -0.9531],
        [ 0.0000, -1.3203, -0.8633, -2.0469, -1.9062, -1.2109, -0.6875, -1.4844, -1.7734, -0.6094, -3.9219, -0.6289, -1.1953, -2.0938, -1.2812],
        [ 0.0000, -1.9531, -0.5820, -1.4922, -1.9375, -0.9961, -2.2188, -0.7148, -1.9609,  0.1484, -3.5312,  0.0317, -0.0649, -2.2031, -0.6680],
        [ 0.0000, -3.0312, -3.2969, -4.5312, -2.4844, -3.1094, -3.5781, -3.2344, -2.8906, -2.8438, -3.6719, -3.1406, -2.0469, -3.0469, -1.6875],
        [ 0.0000, -2.5625, -3.3281, -3.2344, -2.6562, -1.1797, -1.5625, -3.9844, -1.2891, -3.8125, -1.2422, -3.8906, -3.3906, -0.9844, -2.0156],
        [ 0.0000, -2.2656, -2.9062, -3.2500, -3.0156, -2.1094, -2.5938, -3.4062, -2.7500, -3.2500, -2.6406, -3.2969, -2.4375, -2.4375, -2.3281],
        [ 0.0000, -2.8594, -5.8750, -4.5625, -4.0000, -1.8438, -2.1094, -6.1875, -0.5938, -6.1875, -0.0282, -6.1562, -4.9375,  0.0289, -3.4531],
        [ 0.0000, -3.0625, -3.9219, -4.2188, -3.5781, -2.3594, -3.9062, -3.4531, -3.0469, -2.9531, -2.7344, -3.7969, -1.8672, -2.7031, -2.0781],
        [ 0.0000, -3.8125, -5.1875, -5.1875, -2.6406, -2.2344, -2.9219, -4.5625, -1.6953, -5.0938, -2.4219, -5.4375, -3.3750, -1.5234, -3.1094],
        [ 0.0000, -1.5781, -1.8672, -1.4375, -1.6016, -0.1992, -0.3984, -2.6094, -0.5039, -1.8047, -0.0894, -1.9141, -2.1250, -0.1641, -1.3047],
        [ 0.0000, -0.6602, -0.7031, -1.3516, -2.6719, -1.5000, -2.4375, -1.2188, -3.1250,  0.6055, -1.5000,  0.2139, -0.5117, -2.8281, -0.2324]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7980],
        [0.5372],
        [0.4321],
        [0.2914],
        [0.3024],
        [0.2625],
        [0.3528],
        [0.2568],
        [0.3915],
        [0.2238],
        [0.3238],
        [0.2951],
        [0.1027],
        [0.1117]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0003,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0118,  0.0065,  0.0142,  ..., -0.0164, -0.0059, -0.0132],
        [ 0.0265, -0.0429, -0.0307,  ...,  0.0006, -0.0150, -0.0294],
        [ 0.0358, -0.0323,  0.0313,  ..., -0.0078, -0.0167,  0.0068],
        ...,
        [ 0.0369,  0.0027, -0.0291,  ..., -0.0046,  0.0180,  0.0166],
        [ 0.0031,  0.0287, -0.0140,  ..., -0.0187, -0.0373, -0.0180],
        [ 0.0165, -0.0037,  0.0091,  ...,  0.0047, -0.0151,  0.0163]], device='cuda:0', requires_grad=True)
K: tensor([-2.8906, -2.1875, -1.8828, -1.5938, -2.8281,  1.6094, -2.0781,  2.0625, -2.8750, -3.3906,  1.1406, -0.9297, -2.6719, -2.3125, -2.5312,  1.3047,  1.8047,  2.6094, -3.5156,  1.8984,  2.3594,  1.5391, -1.6719, -1.8438,  2.6562,  1.0938, -1.0312, -2.5625,  3.2656,  2.0625,  1.8750,  3.4062,
        -1.9219,  1.5625,  2.2344, -2.1562, -2.0781, -0.7617,  1.8281, -0.0947,  0.7852, -1.9453, -0.9102,  1.8984,  1.4688,  3.3281, -2.0000, -2.2656,  1.6641,  2.0000, -1.9375, -1.2891,  2.7031,  1.6172,  2.8281, -1.7500, -2.1562, -2.9531, -2.5625, -2.5312, -3.5781, -2.0000,  3.4531,  0.9609],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0171,  0.0090,  0.0303,  ..., -0.0150,  0.0401, -0.0038],
        [ 0.0114,  0.0308,  0.0094,  ...,  0.0198,  0.0222, -0.0179],
        [-0.0069, -0.0023,  0.0183,  ..., -0.0166,  0.0480, -0.0179],
        ...,
        [-0.0117, -0.0059,  0.0142,  ..., -0.0303, -0.0057, -0.0004],
        [ 0.0150, -0.0212,  0.0153,  ...,  0.0358,  0.0170, -0.0128],
        [ 0.0347, -0.0302, -0.0221,  ...,  0.0246,  0.0282,  0.0110]], device='cuda:0', requires_grad=True)
Q: tensor([ 2.0000,  1.6484,  0.6523,  0.7656,  1.3203, -1.1016,  1.5625, -1.1797,  2.8750,  2.0625, -1.3516,  0.5664,  1.5000,  1.8672,  2.7812, -0.9766, -1.4922, -2.2188,  3.4375, -0.7617, -1.6797, -1.3906,  0.9102,  0.9648, -1.3203, -1.1406,  0.9492,  1.3047, -1.8672, -1.7031, -1.7578, -1.7344,
         0.7695, -2.1875, -0.9883,  0.8086,  1.8828, -0.2598, -0.5273,  0.3594, -1.8281,  2.1094,  1.0547, -1.2500, -0.6836, -2.2188,  1.5547,  1.9531, -1.1797, -1.9297,  2.0000,  0.3633, -2.2031, -1.1875, -2.2031,  2.3750,  0.9297,  2.4219,  2.8281,  2.0156,  2.4844,  1.7031, -2.5000, -0.8867],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000, -20.2500, -15.4375, -17.3750, -22.1250, -13.6250, -13.5000, -15.6250, -16.5000, -19.0000, -20.1250, -19.8750, -17.3750, -16.8750, -22.6250],
        [  0.0000, -16.1250, -12.8125, -14.3125, -17.5000, -10.8750, -11.3125, -12.8125, -13.1875, -15.2500, -16.1250, -16.0000, -14.1250, -13.5000, -18.1250],
        [  0.0000, -18.2500, -14.2500, -16.0000, -19.5000, -12.1875, -12.3125, -14.4375, -14.6875, -17.3750, -18.2500, -18.1250, -15.9375, -15.0000, -20.7500],
        [  0.0000, -21.2500, -16.3750, -18.2500, -23.7500, -14.3125, -14.3125, -16.8750, -17.5000, -20.0000, -21.5000, -20.8750, -18.5000, -17.8750, -24.5000],
        [  0.0000, -13.5000, -10.1250, -11.5625, -14.6250,  -9.4375,  -9.2500, -10.1250, -11.5000, -12.5625, -13.6875, -13.0000, -11.7500, -11.7500, -14.3750],
        [  0.0000, -11.3125,  -8.9375, -10.1250, -12.3125,  -8.0000,  -8.3125,  -8.8750,  -9.6875, -10.6875, -11.5625, -11.1875, -10.0625,  -9.8750, -12.4375],
        [  0.0000, -15.0625, -12.1250, -13.4375, -16.7500, -10.0000, -10.9375, -12.0000, -12.5000, -14.0625, -15.2500, -14.8750, -13.0625, -12.7500, -17.0000],
        [  0.0000, -15.1250, -11.6875, -13.0625, -16.8750, -10.6875, -10.6250, -11.9375, -12.8750, -14.1250, -15.5625, -14.8125, -13.3125, -13.1875, -16.7500],
        [  0.0000, -22.7500, -17.6250, -19.7500, -24.7500, -15.0625, -15.1250, -17.6250, -18.2500, -21.5000, -22.7500, -22.3750, -19.6250, -18.7500, -25.7500],
        [  0.0000, -15.7500, -12.5000, -13.7500, -16.8750, -11.0000, -11.1875, -12.1875, -13.1250, -14.6875, -15.9375, -15.4375, -13.6875, -13.4375, -17.2500],
        [  0.0000, -22.7500, -17.3750, -19.7500, -25.0000, -15.0000, -15.1250, -18.0000, -18.3750, -21.6250, -22.6250, -22.3750, -19.7500, -18.7500, -26.0000],
        [  0.0000, -19.0000, -14.7500, -16.5000, -21.0000, -12.7500, -13.0625, -14.7500, -15.5000, -17.6250, -19.0000, -18.6250, -16.5000, -15.8750, -21.2500],
        [  0.0000, -15.8750, -12.3125, -13.6875, -17.6250, -11.2500, -11.1250, -12.4375, -13.4375, -14.8125, -16.2500, -15.5625, -14.0000, -13.7500, -17.5000],
        [  0.0000, -24.3750, -19.0000, -21.3750, -26.0000, -16.0000, -16.1250, -19.0000, -19.2500, -22.8750, -24.5000, -24.0000, -20.7500, -19.7500, -28.2500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [1.0000],
        [0.9997],
        [0.9977],
        [1.0000],
        [1.0000],
        [0.9967],
        [0.9948],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8359, 0.1631, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5195, 0.2539, 0.2256, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5859, 0.2275, 0.1348, 0.0530, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7344, 0.0991, 0.0623, 0.0162, 0.0879, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7383, 0.0544, 0.0413, 0.0095, 0.0254, 0.1318, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5625, 0.0378, 0.1162, 0.0070, 0.0033, 0.0461, 0.2285, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2715, 0.0289, 0.0238, 0.0043, 0.0137, 0.0503, 0.3047, 0.3027, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2695, 0.0320, 0.0182, 0.0048, 0.0244, 0.1006, 0.3008, 0.2217, 0.0284, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2354, 0.0449, 0.0210, 0.0079, 0.0248, 0.0620, 0.2559, 0.2715, 0.0356, 0.0420, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3027, 0.0276, 0.0322, 0.0036, 0.0054, 0.0708, 0.3008, 0.1982, 0.0057, 0.0415, 0.0118, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2773, 0.0569, 0.0447, 0.0102, 0.0142, 0.0410, 0.1924, 0.2500, 0.0181, 0.0327, 0.0327, 0.0287, 0.0000, 0.0000, 0.0000],
        [0.3457, 0.0312, 0.0204, 0.0038, 0.0098, 0.0393, 0.1885, 0.1689, 0.0125, 0.0250, 0.0223, 0.0135, 0.1172, 0.0000, 0.0000],
        [0.2285, 0.0228, 0.0129, 0.0032, 0.0156, 0.0698, 0.2148, 0.1494, 0.0187, 0.0381, 0.0289, 0.0145, 0.1582, 0.0234, 0.0000],
        [0.1021, 0.0286, 0.0347, 0.0069, 0.0112, 0.0293, 0.1689, 0.2021, 0.0118, 0.0244, 0.0209, 0.0286, 0.1060, 0.0121, 0.2129]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0145,  0.0164,  0.0065,  ..., -0.0280, -0.0005, -0.0462],
        [-0.0253, -0.0135, -0.0166,  ..., -0.0030,  0.0113, -0.0004],
        [-0.0324, -0.0086,  0.0399,  ..., -0.0237, -0.0219, -0.0270],
        ...,
        [ 0.0027, -0.0299, -0.0073,  ..., -0.0206, -0.0123, -0.0473],
        [-0.0226, -0.0364, -0.0188,  ..., -0.0117, -0.0010,  0.0168],
        [-0.0159,  0.0204,  0.0246,  ..., -0.0245, -0.0194, -0.0082]], device='cuda:0', requires_grad=True)
K: tensor([-1.5312, -1.9297, -0.9062, -1.2344, -1.1094, -0.9727, -1.4922,  1.4453, -0.2500, -0.6602,  1.1406,  0.5430,  1.6562, -2.1250,  1.6875,  0.7969, -0.2461,  1.1016, -0.5273,  1.5547, -1.6641, -0.3809, -1.2812, -0.3750, -0.7148,  0.6836,  1.0234,  1.5938, -2.6875,  1.2422, -1.1484, -2.5312,
        -2.4219,  0.5547,  0.1396, -0.3535,  2.8125, -0.8867, -1.8203,  1.1797, -2.3281,  1.4922,  1.0469,  1.9922,  1.1172, -1.2344, -0.9219, -1.4219,  2.3906,  1.6953,  0.6445, -1.1875, -0.9141, -1.8438, -1.7188, -0.6211,  2.0156, -1.5469, -0.9805,  1.0000, -1.3281,  1.3594,  0.5781, -1.7734],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0122,  0.0031,  0.0153,  ...,  0.0289, -0.0136, -0.0191],
        [ 0.0308, -0.0254,  0.0180,  ..., -0.0143,  0.0003,  0.0240],
        [-0.0198,  0.0097,  0.0443,  ...,  0.0211,  0.0260, -0.0075],
        ...,
        [ 0.0151, -0.0012, -0.0344,  ..., -0.0108, -0.0067, -0.0065],
        [ 0.0044,  0.0284, -0.0158,  ...,  0.0239,  0.0097, -0.0282],
        [-0.0098,  0.0033, -0.0070,  ...,  0.0066,  0.0036, -0.0026]], device='cuda:0', requires_grad=True)
Q: tensor([-0.4082, -0.4766,  1.2266, -1.0156,  0.4473,  0.6406,  1.4766, -1.3906, -0.9219,  0.3730,  0.5039,  0.7656, -0.3281, -0.0845,  0.6797, -2.3906, -2.3438,  2.0312,  0.2773, -0.2139, -1.1562,  1.0000, -1.7031,  0.8828,  1.0391, -0.9062,  0.7734, -0.2988, -1.5391, -2.0938, -0.3398,  0.2109,
        -2.4375,  2.2500, -1.1719,  1.6953,  0.5469,  0.8086, -0.0261,  0.5117, -0.7891, -0.9414, -0.6250, -0.5195, -0.7930, -1.7344,  0.3809, -0.5156, -0.7773,  0.9961, -0.0413, -0.6836, -0.8516, -0.3008,  1.9453,  0.6797, -1.3906,  1.3906,  0.4492, -1.1875, -0.6953,  1.3672, -0.0569, -0.5586],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -1.6328,     -1.8047,     -3.3281,     -2.7188,     -1.7891,     -0.3242,      0.2344,     -2.5000,     -1.9922,     -2.2188,     -2.2031,     -0.3828,     -2.5000,     -0.2090],
        [     0.0000,     -0.7109,     -0.8320,     -2.0156,     -1.9609,     -1.1406,      0.0564,      0.5508,     -1.6172,     -1.2422,     -1.3203,     -1.3203,     -0.1328,     -1.6797,      0.2793],
        [     0.0000,     -0.9453,     -1.4688,     -2.4062,     -2.2812,     -1.3438,     -0.1475,      0.1309,     -1.9453,     -1.4609,     -1.5469,     -1.7188,     -0.2471,     -1.9531,     -0.1807],
        [     0.0000,     -2.0000,     -2.4688,     -3.8125,     -2.1250,     -1.0391,      0.6250,     -0.0122,     -2.1875,     -1.4141,     -1.3828,     -2.2969,     -0.0046,     -1.9219,     -0.5039],
        [     0.0000,     -2.6094,     -2.8750,     -4.3438,     -3.3750,     -1.7188,     -0.6758,     -0.6211,     -3.1406,     -2.1562,     -3.2500,     -3.0469,     -0.9336,     -3.0156,     -1.3281],
        [     0.0000,     -2.7031,     -1.5781,     -4.3750,     -5.1250,     -2.5000,     -0.8984,     -1.0469,     -5.4688,     -2.3906,     -5.2812,     -2.5625,     -1.8047,     -5.4375,     -0.0640],
        [     0.0000,     -2.2500,     -2.4375,     -4.1562,     -2.9844,     -1.6875,      0.1104,      0.1040,     -2.8594,     -2.3125,     -2.1719,     -2.9375,     -0.6836,     -2.7812,     -0.3203],
        [     0.0000,     -2.1250,     -2.7031,     -4.0312,     -2.4062,     -0.9883,      0.1089,     -0.1963,     -2.2500,     -1.6172,     -1.8203,     -2.5938,     -0.2012,     -2.0312,     -0.9727],
        [     0.0000,     -1.6562,     -2.4219,     -3.3906,     -2.2500,     -1.3281,      0.0811,      0.1436,     -1.8906,     -1.7266,     -1.4609,     -2.4219,     -0.1836,     -1.7812,     -0.6992],
        [     0.0000,     -2.3906,     -2.2500,     -4.4375,     -4.0312,     -1.4609,     -0.0114,     -0.4238,     -3.9688,     -1.9844,     -3.2500,     -2.5156,     -0.7969,     -3.8125,     -0.1201],
        [     0.0000,     -1.5859,     -1.8281,     -3.3125,     -2.9688,     -1.9062,     -0.3672,     -0.1025,     -2.7344,     -2.1406,     -2.1406,     -2.2656,     -0.7109,     -2.7500,     -0.3574],
        [     0.0000,     -2.4062,     -2.8281,     -4.5000,     -3.5625,     -2.1719,     -0.6055,     -0.7148,     -3.3281,     -2.6250,     -2.7500,     -3.2500,     -1.0859,     -3.2188,     -1.2500],
        [     0.0000,     -2.3125,     -2.8750,     -4.2500,     -2.6875,     -1.1875,     -0.0610,     -0.4258,     -2.5000,     -1.7891,     -2.0625,     -2.7656,     -0.3652,     -2.2812,     -1.2344],
        [     0.0000,     -1.2734,     -1.0781,     -2.7031,     -2.2188,     -1.2500,      0.5000,      0.6836,     -2.1562,     -1.4375,     -1.5938,     -1.2734,      0.0342,     -2.1406,      0.7344]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4870],
        [0.2209],
        [0.2539],
        [0.3421],
        [0.2900],
        [0.2443],
        [0.1460],
        [0.1581],
        [0.0977],
        [0.1435],
        [0.0826],
        [0.1206],
        [0.1168],
        [0.0917]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8516,     0.1484,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0233,     0.0022,     0.9727,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0236,     0.0239,     0.2412,     0.7109,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0016,     0.1245,     0.0018,     0.0014,     0.8711,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0016,     0.0732,     0.0038,     0.0013,     0.1523,     0.7656,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0003,     0.1387,     0.2891,     0.0757,     0.0042,     0.3359,     0.1562,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0262,     0.0320,     0.0059,     0.0291,     0.8008,     0.0481,     0.0123,     0.0457,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0003,     0.0000,     0.0000,     0.0017,     0.0073,     0.0000,     0.9844,     0.0052,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0266,     0.0013,     0.0044,     0.0095,     0.0003,     0.0002,     0.9570,     0.0000,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0028,     0.0026,     0.0007,     0.0003,     0.0089,     0.0115,     0.0001,     0.1084,     0.0147,     0.8477,     0.0014,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0201,     0.0104,     0.0014,     0.0036,     0.2178,     0.0374,     0.0017,     0.0330,     0.4980,     0.0544,     0.0165,     0.0077,     0.0967,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0002,     0.0009,     0.0000,     0.0630,     0.0005,     0.3047,     0.0000,     0.0002,     0.6289,     0.0005,     0.0000],
        [    0.0003,     0.0001,     0.0034,     0.0119,     0.0000,     0.0000,     0.8594,     0.0000,     0.0000,     0.0000,     0.0009,     0.0000,     0.0000,     0.0000,     0.1230]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0268, -0.0311, -0.0091,  ...,  0.0067,  0.0307, -0.0235],
        [ 0.0054, -0.0456, -0.0036,  ..., -0.0082,  0.0216, -0.0071],
        [-0.0284,  0.0041, -0.0374,  ...,  0.0189, -0.0316, -0.0082],
        ...,
        [ 0.0330,  0.0023, -0.0300,  ..., -0.0016, -0.0207,  0.0186],
        [-0.0102,  0.0070,  0.0100,  ...,  0.0393, -0.0164,  0.0115],
        [-0.0420,  0.0398, -0.0380,  ..., -0.0007,  0.0112,  0.0305]], device='cuda:0', requires_grad=True)
K: tensor([    -1.8125,      0.3184,     -2.4375,      1.0703,     -1.9219,      0.0021,      0.1533,      1.6172,     -0.3125,     -1.7891,     -1.4609,     -0.8359,      0.8047,     -0.3027,     -0.9648,      0.0659,      2.8750,     -0.0391,     -3.7969,      0.8984,      2.2031,     -0.8789,
            -1.9453,      2.8281,      1.2422,      1.0781,     -2.5781,      1.4219,     -1.5547,     -1.6016,     -1.5156,     -0.1484,     -1.3203,      2.9219,      1.2500,     -0.4355,      3.3281,     -2.0000,     -1.7891,      0.5625,      0.2373,     -2.1250,     -1.4688,      1.3906,
            -1.4141,     -0.6797,     -0.1006,      1.2188,      1.4688,     -0.7188,      0.9414,      2.2656,     -2.0000,     -0.0752,     -0.3418,     -1.6797,      0.5430,     -3.2188,     -0.8008,     -1.5547,      0.8477,      0.3047,      0.4375,     -2.5781], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[-0.0112, -0.0085, -0.0049,  ..., -0.0208, -0.0223, -0.0058],
        [ 0.0100, -0.0061, -0.0018,  ...,  0.0173, -0.0272,  0.0321],
        [ 0.0110, -0.0151,  0.0038,  ...,  0.0019, -0.0289, -0.0081],
        ...,
        [ 0.0196, -0.0338, -0.0059,  ...,  0.0317,  0.0199,  0.0091],
        [-0.0032, -0.0046,  0.0109,  ...,  0.0038,  0.0174, -0.0070],
        [-0.0088, -0.0161, -0.0018,  ...,  0.0271, -0.0003, -0.0368]], device='cuda:0', requires_grad=True)
Q: tensor([-0.1055,  0.7227, -0.3828,  0.8359, -0.8633, -1.3906, -1.9844, -1.2812, -1.5391,  0.7734, -0.5859, -0.0537,  0.7422, -0.7188,  0.1816, -0.9727,  1.2656,  0.5977, -1.0625,  0.3789,  1.4375, -1.0781, -0.4102, -0.6406, -0.3281, -0.4023, -2.3906,  1.8828, -2.0938,  1.2812, -1.9922, -0.2236,
        -1.5234,  1.9609, -1.3672, -1.3594,  0.5547, -1.3125,  1.4766, -1.4844, -0.2295,  1.3750, -0.4238,  2.3125, -0.8828,  0.8945,  0.1357,  1.6875,  0.2188, -0.7695, -1.1562,  2.2500, -0.9531, -0.7852, -0.2236, -0.6797, -1.5156,  0.0437,  0.5156, -0.1143,  0.8984,  0.4180, -0.4746, -1.3125],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -1.7500,      0.8281,      1.1953,     -3.6875,     -3.9219,      6.7188,     -6.6875,     -3.8281,     -8.0625,      0.2178,     -3.2031,     -8.0625,     -3.6562,      2.8750],
        [     0.0000,     -2.3750,      3.7344,      3.7031,     -9.6875,     -7.4375,     14.6875,    -12.3125,    -10.7500,    -15.6250,      0.4395,     -5.7812,    -16.1250,    -10.6875,      7.6875],
        [     0.0000,      0.0172,      2.3281,      3.4062,     -3.2500,     -2.1094,      7.3125,     -3.8281,     -2.7500,     -5.1875,      2.2500,     -0.6914,     -5.5938,     -2.4688,      5.3438],
        [     0.0000,      4.3438,      0.1328,     -0.1611,      6.3125,      7.7812,     -3.6719,     12.0625,      7.1250,     13.5000,      3.3125,      5.8750,     13.7500,      6.9062,     -3.5781],
        [     0.0000,      3.8125,      0.8633,     -0.2393,      4.5312,      6.1562,     -0.9062,      8.6250,      5.1875,      9.6250,      2.7344,      4.9375,     10.5625,      5.2812,     -2.1094],
        [     0.0000,      6.0000,      6.7188,      5.4062,      2.4844,      6.8750,      6.1250,      8.4375,      3.3281,      9.2500,      5.4688,      9.5625,      9.3750,      4.0938,      5.9688],
        [     0.0000,      0.1982,     -1.4922,      0.1025,      3.4219,      0.6055,     -0.7578,      0.5508,      3.7500,      0.0170,      0.8789,     -0.0115,      0.7266,      3.5938,     -0.7227],
        [     0.0000,      3.8438,     -0.3164,     -1.5000,      5.6562,      7.1250,     -5.8125,     12.0000,      6.7500,     13.1875,      2.1250,      5.9375,     14.1250,      6.5625,     -4.5938],
        [     0.0000,     -3.0312,     -1.8047,     -1.0312,     -4.4688,     -4.9062,      3.5781,     -7.7188,     -3.9219,     -8.0625,     -1.0859,     -5.0000,     -8.1875,     -3.5625,      0.1953],
        [     0.0000,     -0.0544,     -1.4297,     -2.1562,      1.1719,      1.4297,     -3.7344,      3.6719,      1.6719,      5.7188,     -0.6484,      1.9766,      5.8438,      2.2031,     -4.1562],
        [     0.0000,     -6.2188,     -0.5195,      1.4062,    -11.3750,    -11.6875,     11.8750,    -18.1250,    -11.6250,    -21.0000,     -1.9688,    -10.6250,    -21.7500,    -11.5000,      5.5312],
        [     0.0000,     -0.6602,     -2.6562,     -1.7109,      2.3750,      0.6133,     -2.4844,      0.4902,      3.2031,      0.9922,     -0.2012,     -0.9609,      1.5625,      3.2344,     -2.8750],
        [     0.0000,      2.7344,     -1.1953,     -2.3281,      4.2188,      5.8438,     -5.9062,     10.0625,      5.3125,     11.6875,      1.1953,      4.4062,     12.3750,      5.3125,     -5.3125],
        [     0.0000,     -1.3984,      2.3438,      3.6094,     -5.6562,     -4.6562,      7.8750,     -6.6875,     -5.6562,     -8.2500,      1.0625,     -2.4531,     -9.1875,     -5.4375,      5.9375]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2869],
        [0.1042],
        [0.0513],
        [0.0458],
        [0.0759],
        [0.0184],
        [0.0211],
        [0.0485],
        [0.0278],
        [0.0262],
        [0.0083],
        [0.0282],
        [0.0279],
        [0.0085]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( of:0.0654 the:0.1040,:0.1533 and:0.0698,:0.0432,:0.2520 also:0.0576
:0.0815)


------
		( the:0.1040,:0.1533 and:0.0698,:0.0432,:0.2520 also:0.0576
:0.0815-:0.1250)
- The flowers of the flowers of the flowers.
- The flowers of
@ 3550 train 5.3302 , allloss: 5.3487, dt: 1693.06ms, fracRes: 0.6000, norm(attn): 0.1187, norm(output): 0.2676, norm(x): 0.9766, norm(y): 1.0074, norm:1.3502, tok/sec: 77417.16, flops:67.79, batch-reuse:1
@ 3551 train 5.4412 , allloss: 5.4598, dt: 1277.12ms, fracRes: 0.6017, norm(attn): 0.1172, norm(output): 0.2676, norm(x): 0.9818, norm(y): 1.0074, norm:1.3319, tok/sec: 102630.85, flops:89.87, batch-reuse:1
@ 3552 train 5.3317 , allloss: 5.3513, dt: 1275.33ms, fracRes: 0.6018, norm(attn): 0.1172, norm(output): 0.2656, norm(x): 0.9827, norm(y): 1.0074, norm:1.6349, tok/sec: 102775.35, flops:90.00, batch-reuse:1
@ 3553 train 5.3456 , allloss: 5.3655, dt: 1287.15ms, fracRes: 0.6020, norm(attn): 0.1177, norm(output): 0.2656, norm(x): 0.9803, norm(y): 1.0075, norm:1.4823, tok/sec: 101830.92, flops:89.17, batch-reuse:1
@ 3554 train 5.3207 , allloss: 5.3397, dt: 1268.19ms, fracRes: 0.6025, norm(attn): 0.1167, norm(output): 0.2637, norm(x): 0.9788, norm(y): 1.0075, norm:1.3427, tok/sec: 103353.80, flops:90.51, batch-reuse:1
@ 3555 train 5.3779 , allloss: 5.3968, dt: 1263.12ms, fracRes: 0.6030, norm(attn): 0.1167, norm(output): 0.2656, norm(x): 0.9801, norm(y): 1.0075, norm:1.4362, tok/sec: 103768.43, flops:90.87, batch-reuse:1
@ 3556 train 5.3113 , allloss: 5.3304, dt: 1291.48ms, fracRes: 0.6020, norm(attn): 0.1172, norm(output): 0.2656, norm(x): 0.9821, norm(y): 1.0076, norm:1.4484, tok/sec: 101489.40, flops:88.87, batch-reuse:1
@ 3557 train 5.4984 , allloss: 5.5191, dt: 1286.77ms, fracRes: 0.6030, norm(attn): 0.1177, norm(output): 0.2656, norm(x): 0.9849, norm(y): 1.0075, norm:2.4470, tok/sec: 101861.15, flops:89.20, batch-reuse:1
@ 3558 train 5.2126 , allloss: 5.2305, dt: 1285.41ms, fracRes: 0.6011, norm(attn): 0.1177, norm(output): 0.2676, norm(x): 0.9799, norm(y): 1.0074, norm:1.5476, tok/sec: 101969.08, flops:89.29, batch-reuse:1
@ 3559 train 5.3505 , allloss: 5.3685, dt: 1282.55ms, fracRes: 0.6019, norm(attn): 0.1167, norm(output): 0.2656, norm(x): 0.9781, norm(y): 1.0074, norm:1.8596, tok/sec: 102196.21, flops:89.49, batch-reuse:1
@ 3560 train 5.2931 , allloss: 5.3128, dt: 1287.70ms, fracRes: 0.6008, norm(attn): 0.1177, norm(output): 0.2656, norm(x): 0.9726, norm(y): 1.0074, norm:1.2643, tok/sec: 101787.58, flops:89.13, batch-reuse:1
@ 3561 train 5.3656 , allloss: 5.3858, dt: 1262.80ms, fracRes: 0.6005, norm(attn): 0.1177, norm(output): 0.2656, norm(x): 0.9741, norm(y): 1.0074, norm:2.1365, tok/sec: 103794.92, flops:90.89, batch-reuse:1
@ 3562 train 5.3556 , allloss: 5.3751, dt: 1269.47ms, fracRes: 0.6019, norm(attn): 0.1172, norm(output): 0.2656, norm(x): 0.9783, norm(y): 1.0075, norm:1.6003, tok/sec: 103249.54, flops:90.41, batch-reuse:1
@ 3563 train 5.3201 , allloss: 5.3393, dt: 1266.67ms, fracRes: 0.6019, norm(attn): 0.1172, norm(output): 0.2656, norm(x): 0.9782, norm(y): 1.0074, norm:1.6056, tok/sec: 103477.39, flops:90.61, batch-reuse:1
@ 3564 train 5.2680 , allloss: 5.2860, dt: 1269.07ms, fracRes: 0.6021, norm(attn): 0.1167, norm(output): 0.2656, norm(x): 0.9779, norm(y): 1.0075, norm:1.2680, tok/sec: 103281.94, flops:90.44, batch-reuse:1
@ 3565 train 5.3147 , allloss: 5.3331, dt: 1287.86ms, fracRes: 0.6018, norm(attn): 0.1167, norm(output): 0.2656, norm(x): 0.9785, norm(y): 1.0075, norm:1.4295, tok/sec: 101774.97, flops:89.12, batch-reuse:1
@ 3566 train 5.3618 , allloss: 5.3805, dt: 1263.36ms, fracRes: 0.6018, norm(attn): 0.1167, norm(output): 0.2656, norm(x): 0.9803, norm(y): 1.0075, norm:1.1662, tok/sec: 103749.06, flops:90.85, batch-reuse:1
@ 3567 train 5.3742 , allloss: 5.3931, dt: 1269.95ms, fracRes: 0.6010, norm(attn): 0.1177, norm(output): 0.2656, norm(x): 0.9801, norm(y): 1.0074, norm:1.3736, tok/sec: 103210.23, flops:90.38, batch-reuse:1
@ 3568 train 5.2793 , allloss: 5.2986, dt: 1292.41ms, fracRes: 0.6018, norm(attn): 0.1182, norm(output): 0.2656, norm(x): 0.9787, norm(y): 1.0075, norm:1.3161, tok/sec: 101416.91, flops:88.81, batch-reuse:1
@ 3569 train 5.3579 , allloss: 5.3767, dt: 1265.00ms, fracRes: 0.6025, norm(attn): 0.1162, norm(output): 0.2656, norm(x): 0.9794, norm(y): 1.0075, norm:1.3162, tok/sec: 103614.24, flops:90.73, batch-reuse:1
@ 3570 train 5.3542 , allloss: 5.3730, dt: 1286.47ms, fracRes: 0.6021, norm(attn): 0.1172, norm(output): 0.2656, norm(x): 0.9814, norm(y): 1.0075, norm:1.3204, tok/sec: 101884.82, flops:89.22, batch-reuse:1
@ 3571 train 5.2573 , allloss: 5.2759, dt: 1272.82ms, fracRes: 0.6010, norm(attn): 0.1167, norm(output): 0.2656, norm(x): 0.9782, norm(y): 1.0075, norm:1.4160, tok/sec: 102977.56, flops:90.18, batch-reuse:1
@ 3572 train 5.2892 , allloss: 5.3072, dt: 1293.26ms, fracRes: 0.6014, norm(attn): 0.1177, norm(output): 0.2656, norm(x): 0.9744, norm(y): 1.0074, norm:1.3278, tok/sec: 101350.42, flops:88.75, batch-reuse:1
@ 3573 train 5.3470 , allloss: 5.3656, dt: 1279.87ms, fracRes: 0.6019, norm(attn): 0.1177, norm(output): 0.2637, norm(x): 0.9713, norm(y): 1.0074, norm:1.1031, tok/sec: 102410.06, flops:89.68, batch-reuse:1
@ 3574 train 5.2153 , allloss: 5.2343, dt: 1303.15ms, fracRes: 0.6011, norm(attn): 0.1177, norm(output): 0.2656, norm(x): 0.9714, norm(y): 1.0075, norm:1.1318, tok/sec: 100581.02, flops:88.08, batch-reuse:1
@ 3575 train 5.2607 , allloss: 5.2794, dt: 1290.49ms, fracRes: 0.6003, norm(attn): 0.1187, norm(output): 0.2656, norm(x): 0.9668, norm(y): 1.0074, norm:1.3105, tok/sec: 101567.80, flops:88.94, batch-reuse:1
@ 3576 train 5.2046 , allloss: 5.2242, dt: 1263.51ms, fracRes: 0.6009, norm(attn): 0.1177, norm(output): 0.2656, norm(x): 0.9689, norm(y): 1.0075, norm:1.1953, tok/sec: 103736.12, flops:90.84, batch-reuse:1
@ 3577 train 5.4237 , allloss: 5.4425, dt: 1284.55ms, fracRes: 0.6019, norm(attn): 0.1172, norm(output): 0.2656, norm(x): 0.9715, norm(y): 1.0075, norm:1.5386, tok/sec: 102037.14, flops:89.35, batch-reuse:1
@ 3578 train 5.2959 , allloss: 5.3140, dt: 1315.77ms, fracRes: 0.6022, norm(attn): 0.1162, norm(output): 0.2656, norm(x): 0.9716, norm(y): 1.0076, norm:1.2344, tok/sec: 99616.36, flops:87.23, batch-reuse:1
@ 3579 train 5.3045 , allloss: 5.3230, dt: 1317.56ms, fracRes: 0.6015, norm(attn): 0.1167, norm(output): 0.2637, norm(x): 0.9725, norm(y): 1.0076, norm:1.4497, tok/sec: 99480.72, flops:87.11, batch-reuse:1
@ 3580 train 5.3054 , allloss: 5.3252, dt: 1296.76ms, fracRes: 0.6003, norm(attn): 0.1167, norm(output): 0.2656, norm(x): 0.9703, norm(y): 1.0074, norm:1.1757, tok/sec: 101076.56, flops:88.51, batch-reuse:1
@ 3581 train 5.2431 , allloss: 5.2626, dt: 1264.06ms, fracRes: 0.5994, norm(attn): 0.1177, norm(output): 0.2656, norm(x): 0.9718, norm(y): 1.0075, norm:1.4433, tok/sec: 103691.32, flops:90.80, batch-reuse:1
@ 3582 train 5.2866 , allloss: 5.3056, dt: 1257.32ms, fracRes: 0.5999, norm(attn): 0.1182, norm(output): 0.2656, norm(x): 0.9710, norm(y): 1.0075, norm:1.5077, tok/sec: 104247.21, flops:91.29, batch-reuse:1
@ 3583 train 5.3804 , allloss: 5.4000, dt: 1271.13ms, fracRes: 0.6014, norm(attn): 0.1182, norm(output): 0.2656, norm(x): 0.9730, norm(y): 1.0074, norm:1.6118, tok/sec: 103114.62, flops:90.30, batch-reuse:1
@ 3584 train 5.2735 , allloss: 5.2919, dt: 1257.56ms, fracRes: 0.6026, norm(attn): 0.1177, norm(output): 0.2637, norm(x): 0.9742, norm(y): 1.0075, norm:1.5484, tok/sec: 104227.21, flops:91.27, batch-reuse:1
@ 3585 train 5.2718 , allloss: 5.2900, dt: 1293.16ms, fracRes: 0.6036, norm(attn): 0.1172, norm(output): 0.2637, norm(x): 0.9747, norm(y): 1.0075, norm:1.3609, tok/sec: 101357.99, flops:88.76, batch-reuse:1
@ 3586 train 5.1792 , allloss: 5.1978, dt: 1317.09ms, fracRes: 0.6027, norm(attn): 0.1167, norm(output): 0.2637, norm(x): 0.9721, norm(y): 1.0076, norm:1.1935, tok/sec: 99516.64, flops:87.15, batch-reuse:1
@ 3587 train 5.3306 , allloss: 5.3513, dt: 1299.52ms, fracRes: 0.6025, norm(attn): 0.1167, norm(output): 0.2637, norm(x): 0.9678, norm(y): 1.0075, norm:1.4490, tok/sec: 100861.74, flops:88.32, batch-reuse:1
@ 3588 train 5.2431 , allloss: 5.2619, dt: 1282.85ms, fracRes: 0.6004, norm(attn): 0.1177, norm(output): 0.2637, norm(x): 0.9640, norm(y): 1.0075, norm:1.6455, tok/sec: 102172.58, flops:89.47, batch-reuse:1
@ 3589 train 5.3131 , allloss: 5.3324, dt: 1273.45ms, fracRes: 0.5996, norm(attn): 0.1177, norm(output): 0.2656, norm(x): 0.9619, norm(y): 1.0074, norm:1.1944, tok/sec: 102926.80, flops:90.13, batch-reuse:1
@ 3590 train 5.1916 , allloss: 5.2107, dt: 1269.00ms, fracRes: 0.6006, norm(attn): 0.1177, norm(output): 0.2656, norm(x): 0.9639, norm(y): 1.0075, norm:1.3429, tok/sec: 103287.88, flops:90.45, batch-reuse:1
@ 3591 train 5.3063 , allloss: 5.3255, dt: 1296.35ms, fracRes: 0.6020, norm(attn): 0.1172, norm(output): 0.2656, norm(x): 0.9686, norm(y): 1.0075, norm:1.4636, tok/sec: 101108.46, flops:88.54, batch-reuse:1
@ 3592 train 5.1598 , allloss: 5.1780, dt: 1311.71ms, fracRes: 0.6012, norm(attn): 0.1177, norm(output): 0.2656, norm(x): 0.9703, norm(y): 1.0076, norm:1.4173, tok/sec: 99924.88, flops:87.50, batch-reuse:1
@ 3593 train 5.2995 , allloss: 5.3182, dt: 1305.80ms, fracRes: 0.6022, norm(attn): 0.1162, norm(output): 0.2637, norm(x): 0.9727, norm(y): 1.0076, norm:1.1908, tok/sec: 100376.66, flops:87.90, batch-reuse:1
@ 3594 train 5.2582 , allloss: 5.2786, dt: 1282.57ms, fracRes: 0.6008, norm(attn): 0.1172, norm(output): 0.2637, norm(x): 0.9652, norm(y): 1.0075, norm:1.2613, tok/sec: 102194.56, flops:89.49, batch-reuse:1
@ 3595 train 5.3210 , allloss: 5.3410, dt: 1285.42ms, fracRes: 0.5999, norm(attn): 0.1182, norm(output): 0.2656, norm(x): 0.9655, norm(y): 1.0074, norm:1.6283, tok/sec: 101968.57, flops:89.29, batch-reuse:1
@ 3596 train 5.2571 , allloss: 5.2757, dt: 1273.60ms, fracRes: 0.6000, norm(attn): 0.1172, norm(output): 0.2656, norm(x): 0.9655, norm(y): 1.0075, norm:1.2394, tok/sec: 102914.51, flops:90.12, batch-reuse:1
@ 3597 train 5.2500 , allloss: 5.2683, dt: 1301.59ms, fracRes: 0.6009, norm(attn): 0.1177, norm(output): 0.2637, norm(x): 0.9652, norm(y): 1.0075, norm:1.0966, tok/sec: 100701.08, flops:88.18, batch-reuse:1
@ 3598 train 5.2890 , allloss: 5.3072, dt: 1291.27ms, fracRes: 0.6023, norm(attn): 0.1172, norm(output): 0.2656, norm(x): 0.9698, norm(y): 1.0075, norm:1.3393, tok/sec: 101505.91, flops:88.89, batch-reuse:1
@ 3599 train 5.2651 , allloss: 5.2843, dt: 1262.34ms, fracRes: 0.6037, norm(attn): 0.1172, norm(output): 0.2637, norm(x): 0.9731, norm(y): 1.0075, norm:1.5964, tok/sec: 103832.48, flops:90.92, batch-reuse:1
@ 3600 train 5.1765 , allloss: 5.1945, dt: 1269.54ms, fracRes: 0.6023, norm(attn): 0.1182, norm(output): 0.2637, norm(x): 0.9687, norm(y): 1.0075, norm:1.2052, tok/sec: 103243.46, flops:90.41, batch-reuse:1
@ 3601 train 5.2544 , allloss: 5.2737, dt: 1315.72ms, fracRes: 0.6020, norm(attn): 0.1177, norm(output): 0.2637, norm(x): 0.9644, norm(y): 1.0075, norm:1.6572, tok/sec: 99619.92, flops:87.24, batch-reuse:1
@ 3602 train 5.3162 , allloss: 5.3352, dt: 1270.31ms, fracRes: 0.6026, norm(attn): 0.1172, norm(output): 0.2617, norm(x): 0.9660, norm(y): 1.0076, norm:1.4407, tok/sec: 103180.87, flops:90.35, batch-reuse:1
@ 3603 train 5.2649 , allloss: 5.2827, dt: 1267.50ms, fracRes: 0.6027, norm(attn): 0.1172, norm(output): 0.2637, norm(x): 0.9659, norm(y): 1.0076, norm:1.3062, tok/sec: 103409.69, flops:90.55, batch-reuse:1
@ 3604 train 5.2449 , allloss: 5.2636, dt: 1260.34ms, fracRes: 0.6020, norm(attn): 0.1182, norm(output): 0.2637, norm(x): 0.9613, norm(y): 1.0075, norm:1.3161, tok/sec: 103997.24, flops:91.07, batch-reuse:1
@ 3605 train 5.2466 , allloss: 5.2648, dt: 1269.16ms, fracRes: 0.6027, norm(attn): 0.1172, norm(output): 0.2637, norm(x): 0.9658, norm(y): 1.0076, norm:1.1256, tok/sec: 103274.95, flops:90.44, batch-reuse:1
@ 3606 train 5.1773 , allloss: 5.1951, dt: 1270.52ms, fracRes: 0.6024, norm(attn): 0.1172, norm(output): 0.2637, norm(x): 0.9646, norm(y): 1.0076, norm:1.4979, tok/sec: 103164.29, flops:90.34, batch-reuse:1
@ 3607 train 5.2334 , allloss: 5.2524, dt: 1297.26ms, fracRes: 0.6013, norm(attn): 0.1182, norm(output): 0.2617, norm(x): 0.9622, norm(y): 1.0076, norm:1.3872, tok/sec: 101037.85, flops:88.48, batch-reuse:1
@ 3608 train 5.2841 , allloss: 5.3032, dt: 1278.74ms, fracRes: 0.6010, norm(attn): 0.1182, norm(output): 0.2637, norm(x): 0.9604, norm(y): 1.0076, norm:1.6206, tok/sec: 102500.50, flops:89.76, batch-reuse:1
@ 3609 train 5.2973 , allloss: 5.3154, dt: 1280.81ms, fracRes: 0.6010, norm(attn): 0.1172, norm(output): 0.2637, norm(x): 0.9602, norm(y): 1.0075, norm:1.1527, tok/sec: 102335.36, flops:89.61, batch-reuse:1
@ 3610 train 5.3302 , allloss: 5.3490, dt: 1272.69ms, fracRes: 0.6023, norm(attn): 0.1177, norm(output): 0.2617, norm(x): 0.9601, norm(y): 1.0075, norm:1.2718, tok/sec: 102987.83, flops:90.18, batch-reuse:1
@ 3611 train 5.2706 , allloss: 5.2893, dt: 1281.64ms, fracRes: 0.6010, norm(attn): 0.1177, norm(output): 0.2637, norm(x): 0.9629, norm(y): 1.0075, norm:1.5507, tok/sec: 102269.06, flops:89.56, batch-reuse:1
@ 3612 train 5.2818 , allloss: 5.3017, dt: 1283.54ms, fracRes: 0.6003, norm(attn): 0.1191, norm(output): 0.2656, norm(x): 0.9616, norm(y): 1.0075, norm:1.2376, tok/sec: 102117.90, flops:89.42, batch-reuse:1
@ 3613 train 5.2672 , allloss: 5.2860, dt: 1280.62ms, fracRes: 0.6008, norm(attn): 0.1177, norm(output): 0.2637, norm(x): 0.9615, norm(y): 1.0076, norm:1.2954, tok/sec: 102350.09, flops:89.63, batch-reuse:1
@ 3614 train 5.2881 , allloss: 5.3068, dt: 1288.61ms, fracRes: 0.6017, norm(attn): 0.1167, norm(output): 0.2617, norm(x): 0.9591, norm(y): 1.0075, norm:1.6352, tok/sec: 101715.94, flops:89.07, batch-reuse:1
@ 3615 train 5.2186 , allloss: 5.2370, dt: 1290.31ms, fracRes: 0.6011, norm(attn): 0.1182, norm(output): 0.2637, norm(x): 0.9572, norm(y): 1.0075, norm:1.3372, tok/sec: 101581.84, flops:88.95, batch-reuse:1
@ 3616 train 5.2106 , allloss: 5.2295, dt: 1308.73ms, fracRes: 0.6021, norm(attn): 0.1177, norm(output): 0.2637, norm(x): 0.9599, norm(y): 1.0075, norm:1.4854, tok/sec: 100152.28, flops:87.70, batch-reuse:1
@ 3617 train 5.1919 , allloss: 5.2101, dt: 1267.01ms, fracRes: 0.6011, norm(attn): 0.1172, norm(output): 0.2637, norm(x): 0.9624, norm(y): 1.0076, norm:1.1787, tok/sec: 103449.93, flops:90.59, batch-reuse:1
@ 3618 train 5.1231 , allloss: 5.1421, dt: 1276.50ms, fracRes: 0.5994, norm(attn): 0.1191, norm(output): 0.2656, norm(x): 0.9565, norm(y): 1.0075, norm:1.2880, tok/sec: 102681.15, flops:89.92, batch-reuse:1
@ 3619 train 5.1954 , allloss: 5.2142, dt: 1255.33ms, fracRes: 0.6001, norm(attn): 0.1177, norm(output): 0.2637, norm(x): 0.9581, norm(y): 1.0075, norm:1.1316, tok/sec: 104412.46, flops:91.43, batch-reuse:1
@ 3620 train 5.2598 , allloss: 5.2806, dt: 1267.29ms, fracRes: 0.6005, norm(attn): 0.1182, norm(output): 0.2637, norm(x): 0.9571, norm(y): 1.0076, norm:1.2159, tok/sec: 103426.91, flops:90.57, batch-reuse:1
@ 3621 train 5.1900 , allloss: 5.2094, dt: 1272.44ms, fracRes: 0.6012, norm(attn): 0.1172, norm(output): 0.2617, norm(x): 0.9622, norm(y): 1.0076, norm:1.4783, tok/sec: 103008.22, flops:90.20, batch-reuse:1
@ 3622 train 5.2582 , allloss: 5.2766, dt: 1273.36ms, fracRes: 0.6028, norm(attn): 0.1172, norm(output): 0.2637, norm(x): 0.9657, norm(y): 1.0076, norm:1.3292, tok/sec: 102933.74, flops:90.14, batch-reuse:1
@ 3623 train 5.2907 , allloss: 5.3099, dt: 1278.80ms, fracRes: 0.6024, norm(attn): 0.1167, norm(output): 0.2637, norm(x): 0.9621, norm(y): 1.0076, norm:1.6981, tok/sec: 102496.26, flops:89.75, batch-reuse:1
@ 3624 train 5.1669 , allloss: 5.1857, dt: 1279.98ms, fracRes: 0.6013, norm(attn): 0.1172, norm(output): 0.2637, norm(x): 0.9628, norm(y): 1.0076, norm:1.3411, tok/sec: 102401.43, flops:89.67, batch-reuse:1
@ 3625 train 5.2528 , allloss: 5.2718, dt: 1278.11ms, fracRes: 0.6003, norm(attn): 0.1177, norm(output): 0.2656, norm(x): 0.9607, norm(y): 1.0076, norm:1.5053, tok/sec: 102551.54, flops:89.80, batch-reuse:1
@ 3626 train 5.1563 , allloss: 5.1764, dt: 1291.36ms, fracRes: 0.5986, norm(attn): 0.1187, norm(output): 0.2637, norm(x): 0.9549, norm(y): 1.0075, norm:1.4511, tok/sec: 101499.33, flops:88.88, batch-reuse:1
@ 3627 train 5.2630 , allloss: 5.2816, dt: 1321.10ms, fracRes: 0.5997, norm(attn): 0.1177, norm(output): 0.2637, norm(x): 0.9600, norm(y): 1.0076, norm:1.4083, tok/sec: 99214.42, flops:86.88, batch-reuse:1
@ 3628 train 5.2751 , allloss: 5.2938, dt: 1305.86ms, fracRes: 0.6013, norm(attn): 0.1167, norm(output): 0.2617, norm(x): 0.9611, norm(y): 1.0076, norm:1.2459, tok/sec: 100372.02, flops:87.89, batch-reuse:1
@ 3629 train 5.2094 , allloss: 5.2284, dt: 1292.45ms, fracRes: 0.6019, norm(attn): 0.1167, norm(output): 0.2637, norm(x): 0.9624, norm(y): 1.0075, norm:1.4629, tok/sec: 101413.21, flops:88.81, batch-reuse:1
@ 3630 train 5.2435 , allloss: 5.2632, dt: 1314.54ms, fracRes: 0.6022, norm(attn): 0.1177, norm(output): 0.2617, norm(x): 0.9589, norm(y): 1.0076, norm:1.2376, tok/sec: 99709.54, flops:87.31, batch-reuse:1
@ 3631 train 5.1872 , allloss: 5.2063, dt: 1259.92ms, fracRes: 0.6013, norm(attn): 0.1172, norm(output): 0.2637, norm(x): 0.9577, norm(y): 1.0076, norm:1.4771, tok/sec: 104032.15, flops:91.10, batch-reuse:1
@ 3632 train 5.2430 , allloss: 5.2632, dt: 1287.59ms, fracRes: 0.6028, norm(attn): 0.1167, norm(output): 0.2578, norm(x): 0.9593, norm(y): 1.0076, norm:1.2536, tok/sec: 101796.57, flops:89.14, batch-reuse:1
@ 3633 train 5.2706 , allloss: 5.2911, dt: 1265.24ms, fracRes: 0.6020, norm(attn): 0.1167, norm(output): 0.2617, norm(x): 0.9556, norm(y): 1.0075, norm:1.2017, tok/sec: 103594.27, flops:90.72, batch-reuse:1
@ 3634 train 5.1405 , allloss: 5.1604, dt: 1273.72ms, fracRes: 0.6016, norm(attn): 0.1177, norm(output): 0.2617, norm(x): 0.9578, norm(y): 1.0077, norm:1.2397, tok/sec: 102904.87, flops:90.11, batch-reuse:1
@ 3635 train 5.2535 , allloss: 5.2721, dt: 1323.43ms, fracRes: 0.6017, norm(attn): 0.1177, norm(output): 0.2637, norm(x): 0.9621, norm(y): 1.0076, norm:1.5443, tok/sec: 99039.56, flops:86.73, batch-reuse:1
@ 3636 train 5.1526 , allloss: 5.1710, dt: 1317.35ms, fracRes: 0.6018, norm(attn): 0.1177, norm(output): 0.2617, norm(x): 0.9614, norm(y): 1.0077, norm:1.1666, tok/sec: 99496.36, flops:87.13, batch-reuse:1
@ 3637 train 5.2341 , allloss: 5.2535, dt: 1258.31ms, fracRes: 0.6004, norm(attn): 0.1177, norm(output): 0.2637, norm(x): 0.9593, norm(y): 1.0076, norm:1.5398, tok/sec: 104165.36, flops:91.22, batch-reuse:1
@ 3638 train 5.1784 , allloss: 5.1971, dt: 1259.46ms, fracRes: 0.5997, norm(attn): 0.1177, norm(output): 0.2637, norm(x): 0.9565, norm(y): 1.0076, norm:1.2308, tok/sec: 104070.08, flops:91.13, batch-reuse:1
@ 3639 train 5.2214 , allloss: 5.2406, dt: 1278.27ms, fracRes: 0.5997, norm(attn): 0.1177, norm(output): 0.2637, norm(x): 0.9555, norm(y): 1.0076, norm:1.5430, tok/sec: 102538.43, flops:89.79, batch-reuse:1
@ 3640 train 5.1543 , allloss: 5.1730, dt: 1296.95ms, fracRes: 0.6002, norm(attn): 0.1177, norm(output): 0.2637, norm(x): 0.9548, norm(y): 1.0076, norm:1.3186, tok/sec: 101061.34, flops:88.50, batch-reuse:1
@ 3641 train 5.2519 , allloss: 5.2708, dt: 1283.39ms, fracRes: 0.6017, norm(attn): 0.1172, norm(output): 0.2617, norm(x): 0.9571, norm(y): 1.0076, norm:1.2051, tok/sec: 102129.84, flops:89.43, batch-reuse:1
@ 3642 train 5.3383 , allloss: 5.3565, dt: 1264.48ms, fracRes: 0.6019, norm(attn): 0.1172, norm(output): 0.2617, norm(x): 0.9594, norm(y): 1.0077, norm:1.4652, tok/sec: 103657.01, flops:90.77, batch-reuse:1
@ 3643 train 5.1801 , allloss: 5.1983, dt: 1288.95ms, fracRes: 0.6015, norm(attn): 0.1177, norm(output): 0.2637, norm(x): 0.9595, norm(y): 1.0076, norm:1.1371, tok/sec: 101688.58, flops:89.05, batch-reuse:1
@ 3644 train 5.2740 , allloss: 5.2925, dt: 1283.14ms, fracRes: 0.6010, norm(attn): 0.1177, norm(output): 0.2637, norm(x): 0.9603, norm(y): 1.0076, norm:1.7271, tok/sec: 102149.67, flops:89.45, batch-reuse:1
@ 3645 train 5.2085 , allloss: 5.2276, dt: 1277.11ms, fracRes: 0.6010, norm(attn): 0.1177, norm(output): 0.2617, norm(x): 0.9565, norm(y): 1.0076, norm:1.7368, tok/sec: 102632.02, flops:89.87, batch-reuse:1
@ 3646 train 5.2255 , allloss: 5.2445, dt: 1289.77ms, fracRes: 0.6017, norm(attn): 0.1182, norm(output): 0.2617, norm(x): 0.9517, norm(y): 1.0075, norm:1.3999, tok/sec: 101624.09, flops:88.99, batch-reuse:1
@ 3647 train 5.2138 , allloss: 5.2323, dt: 1290.53ms, fracRes: 0.6014, norm(attn): 0.1187, norm(output): 0.2617, norm(x): 0.9523, norm(y): 1.0076, norm:1.5429, tok/sec: 101564.21, flops:88.94, batch-reuse:1
@ 3648 train 5.2435 , allloss: 5.2622, dt: 1286.02ms, fracRes: 0.6017, norm(attn): 0.1182, norm(output): 0.2637, norm(x): 0.9591, norm(y): 1.0076, norm:1.3856, tok/sec: 101921.03, flops:89.25, batch-reuse:1
@ 3649 train 5.2589 , allloss: 5.2772, dt: 1282.13ms, fracRes: 0.6015, norm(attn): 0.1182, norm(output): 0.2617, norm(x): 0.9606, norm(y): 1.0076, norm:1.4869, tok/sec: 102230.21, flops:89.52, batch-reuse:1
@ 3650 train 5.2853 , allloss: 5.3036, dt: 1257.73ms, fracRes: 0.6022, norm(attn): 0.1172, norm(output): 0.2617, norm(x): 0.9590, norm(y): 1.0077, norm:1.6013, tok/sec: 104213.01, flops:91.26, batch-reuse:1
@ 3651 train 5.2364 , allloss: 5.2560, dt: 1279.29ms, fracRes: 0.6024, norm(attn): 0.1177, norm(output): 0.2598, norm(x): 0.9552, norm(y): 1.0077, norm:1.5497, tok/sec: 102456.80, flops:89.72, batch-reuse:1
@ 3652 train 5.1350 , allloss: 5.1534, dt: 1277.83ms, fracRes: 0.6021, norm(attn): 0.1172, norm(output): 0.2598, norm(x): 0.9535, norm(y): 1.0076, norm:1.1597, tok/sec: 102573.96, flops:89.82, batch-reuse:1
@ 3653 train 5.2074 , allloss: 5.2257, dt: 1263.55ms, fracRes: 0.6011, norm(attn): 0.1172, norm(output): 0.2617, norm(x): 0.9538, norm(y): 1.0077, norm:1.7799, tok/sec: 103732.82, flops:90.84, batch-reuse:1
@ 3654 train 5.2967 , allloss: 5.3150, dt: 1273.54ms, fracRes: 0.6010, norm(attn): 0.1172, norm(output): 0.2637, norm(x): 0.9543, norm(y): 1.0076, norm:1.2823, tok/sec: 102919.38, flops:90.13, batch-reuse:1
@ 3655 train 5.3283 , allloss: 5.3467, dt: 1269.52ms, fracRes: 0.6010, norm(attn): 0.1167, norm(output): 0.2617, norm(x): 0.9524, norm(y): 1.0076, norm:1.4842, tok/sec: 103244.95, flops:90.41, batch-reuse:1
@ 3656 train 5.2642 , allloss: 5.2839, dt: 1282.53ms, fracRes: 0.6005, norm(attn): 0.1177, norm(output): 0.2617, norm(x): 0.9523, norm(y): 1.0076, norm:1.7544, tok/sec: 102197.73, flops:89.49, batch-reuse:1
@ 3657 train 5.2373 , allloss: 5.2565, dt: 1255.83ms, fracRes: 0.6010, norm(attn): 0.1177, norm(output): 0.2617, norm(x): 0.9499, norm(y): 1.0076, norm:1.6942, tok/sec: 104370.95, flops:91.40, batch-reuse:1
@ 3658 train 5.1374 , allloss: 5.1564, dt: 1282.05ms, fracRes: 0.6007, norm(attn): 0.1177, norm(output): 0.2617, norm(x): 0.9493, norm(y): 1.0076, norm:1.4093, tok/sec: 102235.97, flops:89.53, batch-reuse:1
@ 3659 train 5.2219 , allloss: 5.2402, dt: 1264.93ms, fracRes: 0.6017, norm(attn): 0.1172, norm(output): 0.2617, norm(x): 0.9504, norm(y): 1.0076, norm:1.1921, tok/sec: 103620.02, flops:90.74, batch-reuse:1
@ 3660 train 5.1223 , allloss: 5.1411, dt: 1268.62ms, fracRes: 0.6019, norm(attn): 0.1177, norm(output): 0.2578, norm(x): 0.9538, norm(y): 1.0076, norm:1.3519, tok/sec: 103318.25, flops:90.47, batch-reuse:1
@ 3661 train 5.1275 , allloss: 5.1459, dt: 1301.65ms, fracRes: 0.6011, norm(attn): 0.1177, norm(output): 0.2598, norm(x): 0.9490, norm(y): 1.0075, norm:1.4507, tok/sec: 100696.80, flops:88.18, batch-reuse:1
@ 3662 train 4.9972 , allloss: 5.0164, dt: 1281.04ms, fracRes: 0.5995, norm(attn): 0.1191, norm(output): 0.2617, norm(x): 0.9443, norm(y): 1.0076, norm:1.2436, tok/sec: 102316.74, flops:89.60, batch-reuse:1
@ 3663 train 5.0730 , allloss: 5.0921, dt: 1275.73ms, fracRes: 0.5996, norm(attn): 0.1187, norm(output): 0.2617, norm(x): 0.9447, norm(y): 1.0077, norm:1.3026, tok/sec: 102742.96, flops:89.97, batch-reuse:1
@ 3664 train 5.1049 , allloss: 5.1238, dt: 1260.45ms, fracRes: 0.6002, norm(attn): 0.1177, norm(output): 0.2598, norm(x): 0.9446, norm(y): 1.0077, norm:1.3471, tok/sec: 103988.42, flops:91.06, batch-reuse:1
@ 3665 train 5.1422 , allloss: 5.1604, dt: 1282.73ms, fracRes: 0.6008, norm(attn): 0.1177, norm(output): 0.2559, norm(x): 0.9485, norm(y): 1.0076, norm:1.4802, tok/sec: 102181.71, flops:89.48, batch-reuse:1
@ 3666 train 5.0666 , allloss: 5.0861, dt: 1264.80ms, fracRes: 0.6012, norm(attn): 0.1172, norm(output): 0.2617, norm(x): 0.9482, norm(y): 1.0077, norm:1.2042, tok/sec: 103630.69, flops:90.75, batch-reuse:1
@ 3667 train 5.1669 , allloss: 5.1868, dt: 1263.35ms, fracRes: 0.6013, norm(attn): 0.1172, norm(output): 0.2539, norm(x): 0.9445, norm(y): 1.0076, norm:1.2839, tok/sec: 103749.63, flops:90.85, batch-reuse:1
@ 3668 train 5.1495 , allloss: 5.1690, dt: 1276.76ms, fracRes: 0.6019, norm(attn): 0.1167, norm(output): 0.2578, norm(x): 0.9524, norm(y): 1.0077, norm:1.6756, tok/sec: 102659.81, flops:89.90, batch-reuse:1
@ 3669 train 5.2548 , allloss: 5.2735, dt: 1267.33ms, fracRes: 0.6018, norm(attn): 0.1177, norm(output): 0.2578, norm(x): 0.9493, norm(y): 1.0076, norm:2.1619, tok/sec: 103423.78, flops:90.57, batch-reuse:1
@ 3670 train 5.1885 , allloss: 5.2076, dt: 1258.07ms, fracRes: 0.6005, norm(attn): 0.1182, norm(output): 0.2598, norm(x): 0.9450, norm(y): 1.0076, norm:1.2812, tok/sec: 104184.84, flops:91.23, batch-reuse:1
@ 3671 train 5.0520 , allloss: 5.0711, dt: 1255.72ms, fracRes: 0.5997, norm(attn): 0.1172, norm(output): 0.2598, norm(x): 0.9453, norm(y): 1.0076, norm:1.9914, tok/sec: 104379.89, flops:91.40, batch-reuse:1
@ 3672 train 5.1149 , allloss: 5.1338, dt: 1260.53ms, fracRes: 0.5996, norm(attn): 0.1177, norm(output): 0.2617, norm(x): 0.9467, norm(y): 1.0077, norm:1.5329, tok/sec: 103981.78, flops:91.06, batch-reuse:1
@ 3673 train 5.1044 , allloss: 5.1231, dt: 1271.12ms, fracRes: 0.5999, norm(attn): 0.1172, norm(output): 0.2617, norm(x): 0.9471, norm(y): 1.0077, norm:1.3622, tok/sec: 103115.28, flops:90.30, batch-reuse:1
@ 3674 train 5.1222 , allloss: 5.1416, dt: 1292.15ms, fracRes: 0.6016, norm(attn): 0.1167, norm(output): 0.2598, norm(x): 0.9484, norm(y): 1.0077, norm:1.3908, tok/sec: 101437.44, flops:88.83, batch-reuse:1
@ 3675 train 5.1350 , allloss: 5.1530, dt: 1257.61ms, fracRes: 0.6020, norm(attn): 0.1167, norm(output): 0.2559, norm(x): 0.9465, norm(y): 1.0077, norm:1.4400, tok/sec: 104223.40, flops:91.27, batch-reuse:1
@ 3676 train 5.1583 , allloss: 5.1769, dt: 1254.41ms, fracRes: 0.6022, norm(attn): 0.1167, norm(output): 0.2559, norm(x): 0.9441, norm(y): 1.0078, norm:1.4533, tok/sec: 104489.20, flops:91.50, batch-reuse:1
@ 3677 train 5.1414 , allloss: 5.1613, dt: 1284.56ms, fracRes: 0.6011, norm(attn): 0.1172, norm(output): 0.2578, norm(x): 0.9441, norm(y): 1.0077, norm:1.2341, tok/sec: 102036.63, flops:89.35, batch-reuse:1
@ 3678 train 5.1296 , allloss: 5.1490, dt: 1259.05ms, fracRes: 0.6010, norm(attn): 0.1182, norm(output): 0.2559, norm(x): 0.9471, norm(y): 1.0077, norm:1.3286, tok/sec: 104103.98, flops:91.16, batch-reuse:1
@ 3679 train 5.0798 , allloss: 5.1005, dt: 1277.65ms, fracRes: 0.6017, norm(attn): 0.1177, norm(output): 0.2578, norm(x): 0.9455, norm(y): 1.0077, norm:1.3723, tok/sec: 102588.18, flops:89.84, batch-reuse:1
@ 3680 train 4.9769 , allloss: 4.9952, dt: 1290.35ms, fracRes: 0.6006, norm(attn): 0.1187, norm(output): 0.2559, norm(x): 0.9457, norm(y): 1.0077, norm:1.5863, tok/sec: 101578.87, flops:88.95, batch-reuse:1
@ 3681 train 5.0678 , allloss: 5.0860, dt: 1259.08ms, fracRes: 0.6009, norm(attn): 0.1177, norm(output): 0.2578, norm(x): 0.9503, norm(y): 1.0077, norm:1.4280, tok/sec: 104101.04, flops:91.16, batch-reuse:1
@ 3682 train 5.0485 , allloss: 5.0690, dt: 1272.90ms, fracRes: 0.6011, norm(attn): 0.1172, norm(output): 0.2598, norm(x): 0.9481, norm(y): 1.0076, norm:2.0987, tok/sec: 102971.29, flops:90.17, batch-reuse:1
@ 3683 train 5.1442 , allloss: 5.1642, dt: 1254.22ms, fracRes: 0.6001, norm(attn): 0.1182, norm(output): 0.2617, norm(x): 0.9444, norm(y): 1.0076, norm:1.3231, tok/sec: 104504.43, flops:91.51, batch-reuse:1
@ 3684 train 5.1704 , allloss: 5.1887, dt: 1259.60ms, fracRes: 0.6004, norm(attn): 0.1177, norm(output): 0.2617, norm(x): 0.9456, norm(y): 1.0076, norm:2.0645, tok/sec: 104058.34, flops:91.12, batch-reuse:1
@ 3685 train 5.0602 , allloss: 5.0785, dt: 1270.30ms, fracRes: 0.6002, norm(attn): 0.1182, norm(output): 0.2617, norm(x): 0.9436, norm(y): 1.0076, norm:1.5730, tok/sec: 103181.99, flops:90.35, batch-reuse:1
@ 3686 train 5.0853 , allloss: 5.1042, dt: 1277.34ms, fracRes: 0.6006, norm(attn): 0.1172, norm(output): 0.2559, norm(x): 0.9434, norm(y): 1.0076, norm:1.8008, tok/sec: 102613.10, flops:89.86, batch-reuse:1
@ 3687 train 5.1038 , allloss: 5.1224, dt: 1270.69ms, fracRes: 0.5999, norm(attn): 0.1177, norm(output): 0.2598, norm(x): 0.9438, norm(y): 1.0076, norm:1.4741, tok/sec: 103150.36, flops:90.33, batch-reuse:1
@ 3688 train 5.1474 , allloss: 5.1660, dt: 1258.26ms, fracRes: 0.6003, norm(attn): 0.1177, norm(output): 0.2578, norm(x): 0.9443, norm(y): 1.0076, norm:1.5631, tok/sec: 104168.91, flops:91.22, batch-reuse:1
@ 3689 train 5.1437 , allloss: 5.1628, dt: 1285.21ms, fracRes: 0.6008, norm(attn): 0.1172, norm(output): 0.2578, norm(x): 0.9415, norm(y): 1.0076, norm:1.5258, tok/sec: 101985.05, flops:89.31, batch-reuse:1
@ 3690 train 5.0260 , allloss: 5.0448, dt: 1277.10ms, fracRes: 0.6009, norm(attn): 0.1182, norm(output): 0.2539, norm(x): 0.9392, norm(y): 1.0077, norm:1.3679, tok/sec: 102632.35, flops:89.87, batch-reuse:1
@ 3691 train 5.1575 , allloss: 5.1769, dt: 1270.67ms, fracRes: 0.6018, norm(attn): 0.1177, norm(output): 0.2559, norm(x): 0.9414, norm(y): 1.0077, norm:1.5148, tok/sec: 103151.77, flops:90.33, batch-reuse:1
@ 3692 train 5.2000 , allloss: 5.2199, dt: 1264.55ms, fracRes: 0.6038, norm(attn): 0.1172, norm(output): 0.2539, norm(x): 0.9457, norm(y): 1.0078, norm:1.3940, tok/sec: 103650.87, flops:90.77, batch-reuse:1
@ 3693 train 5.1055 , allloss: 5.1245, dt: 1289.93ms, fracRes: 0.6021, norm(attn): 0.1167, norm(output): 0.2559, norm(x): 0.9476, norm(y): 1.0077, norm:1.3168, tok/sec: 101611.95, flops:88.98, batch-reuse:1
@ 3694 train 5.1222 , allloss: 5.1408, dt: 1271.91ms, fracRes: 0.6012, norm(attn): 0.1177, norm(output): 0.2559, norm(x): 0.9429, norm(y): 1.0076, norm:1.5874, tok/sec: 103051.07, flops:90.24, batch-reuse:1
@ 3695 train 5.0953 , allloss: 5.1139, dt: 1260.38ms, fracRes: 0.6004, norm(attn): 0.1177, norm(output): 0.2559, norm(x): 0.9413, norm(y): 1.0077, norm:1.2028, tok/sec: 103994.37, flops:91.07, batch-reuse:1
@ 3696 train 5.1365 , allloss: 5.1565, dt: 1259.80ms, fracRes: 0.6010, norm(attn): 0.1177, norm(output): 0.2539, norm(x): 0.9417, norm(y): 1.0077, norm:1.5230, tok/sec: 104041.50, flops:91.11, batch-reuse:1
@ 3697 train 5.0654 , allloss: 5.0847, dt: 1269.07ms, fracRes: 0.5997, norm(attn): 0.1196, norm(output): 0.2578, norm(x): 0.9401, norm(y): 1.0077, norm:1.5020, tok/sec: 103282.31, flops:90.44, batch-reuse:1
@ 3698 train 5.1872 , allloss: 5.2066, dt: 1264.86ms, fracRes: 0.6006, norm(attn): 0.1187, norm(output): 0.2578, norm(x): 0.9379, norm(y): 1.0075, norm:1.3090, tok/sec: 103625.43, flops:90.74, batch-reuse:1
@ 3699 train 5.0124 , allloss: 5.0313, dt: 1304.98ms, fracRes: 0.6009, norm(attn): 0.1182, norm(output): 0.2539, norm(x): 0.9391, norm(y): 1.0077, norm:1.2790, tok/sec: 100439.96, flops:87.95, batch-reuse:1
@ 3700 train 5.1450 , allloss: 5.1639, dt: 1324.35ms, fracRes: 0.6027, norm(attn): 0.1172, norm(output): 0.2539, norm(x): 0.9419, norm(y): 1.0077, norm:1.2111, tok/sec: 98971.09, flops:86.67, batch-reuse:1
@ 3701 train 5.1613 , allloss: 5.1803, dt: 1288.42ms, fracRes: 0.6030, norm(attn): 0.1157, norm(output): 0.2520, norm(x): 0.9422, norm(y): 1.0077, norm:1.4029, tok/sec: 101730.96, flops:89.08, batch-reuse:1
@ 3702 train 5.0754 , allloss: 5.0947, dt: 1254.83ms, fracRes: 0.6009, norm(attn): 0.1177, norm(output): 0.2559, norm(x): 0.9375, norm(y): 1.0077, norm:1.3360, tok/sec: 104454.38, flops:91.47, batch-reuse:1
@ 3703 train 5.0289 , allloss: 5.0491, dt: 1300.41ms, fracRes: 0.6001, norm(attn): 0.1172, norm(output): 0.2559, norm(x): 0.9369, norm(y): 1.0078, norm:1.2108, tok/sec: 100793.05, flops:88.26, batch-reuse:1
@ 3704 train 5.0638 , allloss: 5.0837, dt: 1271.83ms, fracRes: 0.5996, norm(attn): 0.1182, norm(output): 0.2559, norm(x): 0.9351, norm(y): 1.0077, norm:1.5540, tok/sec: 103057.79, flops:90.25, batch-reuse:1
@ 3705 train 5.1110 , allloss: 5.1293, dt: 1262.96ms, fracRes: 0.5986, norm(attn): 0.1187, norm(output): 0.2598, norm(x): 0.9368, norm(y): 1.0076, norm:1.4332, tok/sec: 103781.81, flops:90.88, batch-reuse:1
@ 3706 train 5.0793 , allloss: 5.0984, dt: 1267.27ms, fracRes: 0.5998, norm(attn): 0.1177, norm(output): 0.2539, norm(x): 0.9374, norm(y): 1.0077, norm:1.3158, tok/sec: 103428.80, flops:90.57, batch-reuse:1
@ 3707 train 5.3014 , allloss: 5.3221, dt: 1273.80ms, fracRes: 0.6013, norm(attn): 0.1172, norm(output): 0.2539, norm(x): 0.9354, norm(y): 1.0076, norm:1.6175, tok/sec: 102898.36, flops:90.11, batch-reuse:1
@ 3708 train 5.2726 , allloss: 5.2926, dt: 1288.69ms, fracRes: 0.6012, norm(attn): 0.1177, norm(output): 0.2539, norm(x): 0.9362, norm(y): 1.0076, norm:1.3951, tok/sec: 101709.50, flops:89.07, batch-reuse:1
@ 3709 train 5.2800 , allloss: 5.2995, dt: 1321.99ms, fracRes: 0.6012, norm(attn): 0.1182, norm(output): 0.2539, norm(x): 0.9378, norm(y): 1.0076, norm:1.6195, tok/sec: 99147.62, flops:86.82, batch-reuse:1
@ 3710 train 5.3220 , allloss: 5.3414, dt: 1269.62ms, fracRes: 0.6010, norm(attn): 0.1172, norm(output): 0.2539, norm(x): 0.9392, norm(y): 1.0077, norm:1.2526, tok/sec: 103237.25, flops:90.40, batch-reuse:1
@ 3711 train 5.3673 , allloss: 5.3865, dt: 1260.08ms, fracRes: 0.6019, norm(attn): 0.1172, norm(output): 0.2539, norm(x): 0.9398, norm(y): 1.0077, norm:1.2493, tok/sec: 104018.41, flops:91.09, batch-reuse:1
@ 3712 train 5.3240 , allloss: 5.3451, dt: 1280.65ms, fracRes: 0.6008, norm(attn): 0.1177, norm(output): 0.2559, norm(x): 0.9359, norm(y): 1.0075, norm:1.4190, tok/sec: 102348.19, flops:89.62, batch-reuse:1
@ 3713 train 5.4239 , allloss: 5.4447, dt: 1257.00ms, fracRes: 0.6024, norm(attn): 0.1172, norm(output): 0.2539, norm(x): 0.9406, norm(y): 1.0077, norm:1.4059, tok/sec: 104273.31, flops:91.31, batch-reuse:1
@ 3714 train 5.3795 , allloss: 5.3999, dt: 1253.27ms, fracRes: 0.6021, norm(attn): 0.1177, norm(output): 0.2578, norm(x): 0.9377, norm(y): 1.0076, norm:1.6202, tok/sec: 104584.08, flops:91.58, batch-reuse:1
@ 3715 train 5.3145 , allloss: 5.3350, dt: 1271.54ms, fracRes: 0.6019, norm(attn): 0.1177, norm(output): 0.2539, norm(x): 0.9350, norm(y): 1.0076, norm:1.4957, tok/sec: 103080.90, flops:90.27, batch-reuse:1
@ 3716 train 5.3032 , allloss: 5.3242, dt: 1268.44ms, fracRes: 0.6022, norm(attn): 0.1177, norm(output): 0.2559, norm(x): 0.9357, norm(y): 1.0076, norm:1.4879, tok/sec: 103332.84, flops:90.49, batch-reuse:1
@ 3717 train 5.2549 , allloss: 5.2747, dt: 1284.83ms, fracRes: 0.6017, norm(attn): 0.1182, norm(output): 0.2559, norm(x): 0.9375, norm(y): 1.0077, norm:1.6736, tok/sec: 102015.35, flops:89.33, batch-reuse:1
@ 3718 train 5.2330 , allloss: 5.2524, dt: 1265.60ms, fracRes: 0.6016, norm(attn): 0.1177, norm(output): 0.2539, norm(x): 0.9353, norm(y): 1.0077, norm:1.3463, tok/sec: 103564.84, flops:90.69, batch-reuse:1
@ 3719 train 5.2519 , allloss: 5.2707, dt: 1263.50ms, fracRes: 0.6005, norm(attn): 0.1191, norm(output): 0.2559, norm(x): 0.9309, norm(y): 1.0077, norm:1.6027, tok/sec: 103737.08, flops:90.84, batch-reuse:1
@ 3720 train 5.2230 , allloss: 5.2435, dt: 1271.94ms, fracRes: 0.6002, norm(attn): 0.1191, norm(output): 0.2559, norm(x): 0.9297, norm(y): 1.0077, norm:1.6014, tok/sec: 103048.93, flops:90.24, batch-reuse:1
@ 3721 train 5.2325 , allloss: 5.2519, dt: 1275.45ms, fracRes: 0.6007, norm(attn): 0.1182, norm(output): 0.2559, norm(x): 0.9317, norm(y): 1.0076, norm:1.2081, tok/sec: 102765.63, flops:89.99, batch-reuse:1
@ 3722 train 5.2198 , allloss: 5.2384, dt: 1264.07ms, fracRes: 0.6017, norm(attn): 0.1172, norm(output): 0.2520, norm(x): 0.9364, norm(y): 1.0077, norm:1.5930, tok/sec: 103690.65, flops:90.80, batch-reuse:1
@ 3723 train 5.2705 , allloss: 5.2896, dt: 1266.80ms, fracRes: 0.6012, norm(attn): 0.1172, norm(output): 0.2559, norm(x): 0.9357, norm(y): 1.0077, norm:1.3777, tok/sec: 103467.36, flops:90.60, batch-reuse:1
@ 3724 train 5.2971 , allloss: 5.3168, dt: 1275.38ms, fracRes: 0.6014, norm(attn): 0.1167, norm(output): 0.2539, norm(x): 0.9333, norm(y): 1.0077, norm:1.3602, tok/sec: 102770.54, flops:89.99, batch-reuse:1
@ 3725 train 5.3189 , allloss: 5.3379, dt: 1262.51ms, fracRes: 0.6007, norm(attn): 0.1182, norm(output): 0.2598, norm(x): 0.9323, norm(y): 1.0076, norm:1.2126, tok/sec: 103818.77, flops:90.91, batch-reuse:1
@ 3726 train 5.3095 , allloss: 5.3291, dt: 1257.66ms, fracRes: 0.6005, norm(attn): 0.1187, norm(output): 0.2578, norm(x): 0.9307, norm(y): 1.0077, norm:1.2697, tok/sec: 104218.62, flops:91.26, batch-reuse:1
@ 3727 train 5.2970 , allloss: 5.3169, dt: 1273.63ms, fracRes: 0.6015, norm(attn): 0.1177, norm(output): 0.2539, norm(x): 0.9359, norm(y): 1.0077, norm:1.2381, tok/sec: 102911.87, flops:90.12, batch-reuse:1
@ 3728 train 5.2577 , allloss: 5.2767, dt: 1304.67ms, fracRes: 0.6015, norm(attn): 0.1182, norm(output): 0.2539, norm(x): 0.9369, norm(y): 1.0077, norm:1.3277, tok/sec: 100464.06, flops:87.97, batch-reuse:1
@ 3729 train 5.2770 , allloss: 5.2958, dt: 1265.25ms, fracRes: 0.6022, norm(attn): 0.1177, norm(output): 0.2559, norm(x): 0.9375, norm(y): 1.0077, norm:1.4102, tok/sec: 103594.11, flops:90.72, batch-reuse:1
@ 3730 train 5.2975 , allloss: 5.3171, dt: 1296.56ms, fracRes: 0.6012, norm(attn): 0.1182, norm(output): 0.2559, norm(x): 0.9351, norm(y): 1.0076, norm:1.3007, tok/sec: 101091.75, flops:88.52, batch-reuse:1
@ 3731 train 5.2865 , allloss: 5.3056, dt: 1266.77ms, fracRes: 0.6010, norm(attn): 0.1182, norm(output): 0.2539, norm(x): 0.9337, norm(y): 1.0077, norm:1.6216, tok/sec: 103469.13, flops:90.61, batch-reuse:1
@ 3732 train 5.2816 , allloss: 5.3007, dt: 1267.27ms, fracRes: 0.6006, norm(attn): 0.1182, norm(output): 0.2559, norm(x): 0.9356, norm(y): 1.0076, norm:1.3565, tok/sec: 103428.23, flops:90.57, batch-reuse:1
@ 3733 train 5.2954 , allloss: 5.3145, dt: 1281.89ms, fracRes: 0.6013, norm(attn): 0.1182, norm(output): 0.2539, norm(x): 0.9350, norm(y): 1.0077, norm:1.5727, tok/sec: 102249.24, flops:89.54, batch-reuse:1
@ 3734 train 5.2576 , allloss: 5.2763, dt: 1262.17ms, fracRes: 0.6016, norm(attn): 0.1167, norm(output): 0.2539, norm(x): 0.9371, norm(y): 1.0077, norm:1.2354, tok/sec: 103846.21, flops:90.94, batch-reuse:1
@ 3735 train 5.3933 , allloss: 5.4126, dt: 1260.97ms, fracRes: 0.6018, norm(attn): 0.1177, norm(output): 0.2559, norm(x): 0.9355, norm(y): 1.0076, norm:1.5443, tok/sec: 103945.60, flops:91.02, batch-reuse:1
@ 3736 train 5.3377 , allloss: 5.3578, dt: 1288.17ms, fracRes: 0.6019, norm(attn): 0.1162, norm(output): 0.2539, norm(x): 0.9337, norm(y): 1.0076, norm:1.2806, tok/sec: 101750.63, flops:89.10, batch-reuse:1
@ 3737 train 5.2433 , allloss: 5.2630, dt: 1303.32ms, fracRes: 0.6004, norm(attn): 0.1172, norm(output): 0.2539, norm(x): 0.9311, norm(y): 1.0077, norm:1.3593, tok/sec: 100567.47, flops:88.07, batch-reuse:1
@ 3738 train 5.2745 , allloss: 5.2933, dt: 1252.52ms, fracRes: 0.6011, norm(attn): 0.1172, norm(output): 0.2539, norm(x): 0.9347, norm(y): 1.0076, norm:1.2143, tok/sec: 104647.00, flops:91.64, batch-reuse:1
@ 3739 train 5.2203 , allloss: 5.2396, dt: 1276.21ms, fracRes: 0.6014, norm(attn): 0.1182, norm(output): 0.2539, norm(x): 0.9318, norm(y): 1.0077, norm:1.3375, tok/sec: 102704.04, flops:89.94, batch-reuse:1
@ 3740 train 5.2976 , allloss: 5.3164, dt: 1288.11ms, fracRes: 0.6012, norm(attn): 0.1182, norm(output): 0.2539, norm(x): 0.9367, norm(y): 1.0077, norm:1.3915, tok/sec: 101754.96, flops:89.11, batch-reuse:1
@ 3741 train 5.4548 , allloss: 5.4749, dt: 1276.39ms, fracRes: 0.6017, norm(attn): 0.1187, norm(output): 0.2539, norm(x): 0.9314, norm(y): 1.0076, norm:1.7339, tok/sec: 102689.86, flops:89.92, batch-reuse:1
@ 3742 train 5.2245 , allloss: 5.2439, dt: 1296.61ms, fracRes: 0.6012, norm(attn): 0.1182, norm(output): 0.2559, norm(x): 0.9333, norm(y): 1.0077, norm:1.7273, tok/sec: 101087.88, flops:88.52, batch-reuse:1
@ 3743 train 5.2879 , allloss: 5.3072, dt: 1290.45ms, fracRes: 0.6019, norm(attn): 0.1172, norm(output): 0.2539, norm(x): 0.9341, norm(y): 1.0078, norm:1.4698, tok/sec: 101570.39, flops:88.94, batch-reuse:1
@ 3744 train 5.4019 , allloss: 5.4202, dt: 1299.18ms, fracRes: 0.6034, norm(attn): 0.1182, norm(output): 0.2539, norm(x): 0.9355, norm(y): 1.0077, norm:1.5038, tok/sec: 100888.56, flops:88.35, batch-reuse:1
@ 3745 train 5.3289 , allloss: 5.3481, dt: 1316.52ms, fracRes: 0.6020, norm(attn): 0.1187, norm(output): 0.2559, norm(x): 0.9359, norm(y): 1.0077, norm:1.5386, tok/sec: 99559.34, flops:87.18, batch-reuse:1
@ 3746 train 5.2635 , allloss: 5.2827, dt: 1260.96ms, fracRes: 0.6008, norm(attn): 0.1182, norm(output): 0.2559, norm(x): 0.9345, norm(y): 1.0077, norm:1.4158, tok/sec: 103946.31, flops:91.02, batch-reuse:1
@ 3747 train 5.2571 , allloss: 5.2775, dt: 1276.34ms, fracRes: 0.5996, norm(attn): 0.1182, norm(output): 0.2559, norm(x): 0.9319, norm(y): 1.0077, norm:1.3660, tok/sec: 102693.26, flops:89.93, batch-reuse:1
@ 3748 train 5.2496 , allloss: 5.2694, dt: 1260.53ms, fracRes: 0.6002, norm(attn): 0.1177, norm(output): 0.2559, norm(x): 0.9320, norm(y): 1.0077, norm:1.2187, tok/sec: 103981.64, flops:91.06, batch-reuse:1
@ 3749 train 5.2666 , allloss: 5.2855, dt: 1259.08ms, fracRes: 0.6017, norm(attn): 0.1167, norm(output): 0.2539, norm(x): 0.9328, norm(y): 1.0077, norm:1.4151, tok/sec: 104101.22, flops:91.16, batch-reuse:1
@ 3750 train 5.2851 , allloss: 5.3037, dt: 1276.60ms, fracRes: 0.6022, norm(attn): 0.1167, norm(output): 0.2539, norm(x): 0.9353, norm(y): 1.0078, norm:1.3564, tok/sec: 102673.10, flops:89.91, batch-reuse:1
@ 3751 train 5.2557 , allloss: 5.2740, dt: 1259.31ms, fracRes: 0.6022, norm(attn): 0.1167, norm(output): 0.2559, norm(x): 0.9344, norm(y): 1.0078, norm:1.3836, tok/sec: 104082.77, flops:91.14, batch-reuse:1
@ 3752 train 5.2057 , allloss: 5.2250, dt: 1260.26ms, fracRes: 0.6010, norm(attn): 0.1177, norm(output): 0.2559, norm(x): 0.9310, norm(y): 1.0076, norm:1.2330, tok/sec: 104004.18, flops:91.07, batch-reuse:1
@ 3753 train 5.2062 , allloss: 5.2256, dt: 1248.52ms, fracRes: 0.5994, norm(attn): 0.1206, norm(output): 0.2578, norm(x): 0.9260, norm(y): 1.0076, norm:1.2646, tok/sec: 104981.93, flops:91.93, batch-reuse:1
@ 3754 train 5.1617 , allloss: 5.1809, dt: 1269.40ms, fracRes: 0.5995, norm(attn): 0.1177, norm(output): 0.2539, norm(x): 0.9273, norm(y): 1.0077, norm:1.4051, tok/sec: 103255.44, flops:90.42, batch-reuse:1
@ 3755 train 5.2068 , allloss: 5.2262, dt: 1260.61ms, fracRes: 0.6012, norm(attn): 0.1172, norm(output): 0.2520, norm(x): 0.9291, norm(y): 1.0078, norm:1.5648, tok/sec: 103974.78, flops:91.05, batch-reuse:1
@ 3756 train 5.2897 , allloss: 5.3082, dt: 1265.35ms, fracRes: 0.6015, norm(attn): 0.1162, norm(output): 0.2559, norm(x): 0.9330, norm(y): 1.0077, norm:1.3038, tok/sec: 103585.56, flops:90.71, batch-reuse:1
@ 3757 train 5.2374 , allloss: 5.2561, dt: 1268.78ms, fracRes: 0.6007, norm(attn): 0.1177, norm(output): 0.2539, norm(x): 0.9286, norm(y): 1.0076, norm:1.5784, tok/sec: 103305.54, flops:90.46, batch-reuse:1
@ 3758 train 5.2103 , allloss: 5.2295, dt: 1255.66ms, fracRes: 0.6003, norm(attn): 0.1182, norm(output): 0.2578, norm(x): 0.9309, norm(y): 1.0076, norm:1.3752, tok/sec: 104384.82, flops:91.41, batch-reuse:1
@ 3759 train 5.2346 , allloss: 5.2543, dt: 1266.83ms, fracRes: 0.6005, norm(attn): 0.1187, norm(output): 0.2539, norm(x): 0.9315, norm(y): 1.0077, norm:1.7547, tok/sec: 103464.34, flops:90.60, batch-reuse:1
@ 3760 train 5.2592 , allloss: 5.2781, dt: 1294.99ms, fracRes: 0.6010, norm(attn): 0.1187, norm(output): 0.2559, norm(x): 0.9312, norm(y): 1.0078, norm:1.3343, tok/sec: 101214.94, flops:88.63, batch-reuse:1
@ 3761 train 5.3542 , allloss: 5.3734, dt: 1274.52ms, fracRes: 0.6020, norm(attn): 0.1177, norm(output): 0.2539, norm(x): 0.9307, norm(y): 1.0077, norm:1.6137, tok/sec: 102840.21, flops:90.06, batch-reuse:1
@ 3762 train 5.1991 , allloss: 5.2188, dt: 1282.39ms, fracRes: 0.6028, norm(attn): 0.1177, norm(output): 0.2539, norm(x): 0.9303, norm(y): 1.0078, norm:1.5995, tok/sec: 102209.51, flops:89.50, batch-reuse:1
@ 3763 train 5.3247 , allloss: 5.3443, dt: 1296.84ms, fracRes: 0.6027, norm(attn): 0.1167, norm(output): 0.2559, norm(x): 0.9373, norm(y): 1.0077, norm:1.3253, tok/sec: 101070.06, flops:88.51, batch-reuse:1
@ 3764 train 5.2065 , allloss: 5.2246, dt: 1292.54ms, fracRes: 0.6023, norm(attn): 0.1172, norm(output): 0.2539, norm(x): 0.9365, norm(y): 1.0077, norm:1.4462, tok/sec: 101406.40, flops:88.80, batch-reuse:1
@ 3765 train 5.1794 , allloss: 5.1980, dt: 1275.21ms, fracRes: 0.6013, norm(attn): 0.1177, norm(output): 0.2539, norm(x): 0.9329, norm(y): 1.0078, norm:1.5832, tok/sec: 102784.67, flops:90.01, batch-reuse:1
@ 3766 train 5.1977 , allloss: 5.2173, dt: 1277.62ms, fracRes: 0.6010, norm(attn): 0.1187, norm(output): 0.2539, norm(x): 0.9312, norm(y): 1.0078, norm:1.2655, tok/sec: 102590.67, flops:89.84, batch-reuse:1
@ 3767 train 5.1980 , allloss: 5.2165, dt: 1266.90ms, fracRes: 0.6015, norm(attn): 0.1177, norm(output): 0.2539, norm(x): 0.9328, norm(y): 1.0078, norm:1.6709, tok/sec: 103459.18, flops:90.60, batch-reuse:1
@ 3768 train 5.1719 , allloss: 5.1912, dt: 1271.25ms, fracRes: 0.6011, norm(attn): 0.1177, norm(output): 0.2539, norm(x): 0.9297, norm(y): 1.0077, norm:1.6584, tok/sec: 103104.53, flops:90.29, batch-reuse:1
@ 3769 train 5.3854 , allloss: 5.4057, dt: 1252.17ms, fracRes: 0.6017, norm(attn): 0.1172, norm(output): 0.2539, norm(x): 0.9336, norm(y): 1.0078, norm:1.3260, tok/sec: 104675.94, flops:91.66, batch-reuse:1
@ 3770 train 5.2512 , allloss: 5.2699, dt: 1262.00ms, fracRes: 0.6011, norm(attn): 0.1172, norm(output): 0.2539, norm(x): 0.9316, norm(y): 1.0077, norm:1.4007, tok/sec: 103860.24, flops:90.95, batch-reuse:1
@ 3771 train 5.2323 , allloss: 5.2516, dt: 1249.43ms, fracRes: 0.6016, norm(attn): 0.1172, norm(output): 0.2539, norm(x): 0.9268, norm(y): 1.0079, norm:1.1178, tok/sec: 104905.72, flops:91.86, batch-reuse:1
@ 3772 train 5.2092 , allloss: 5.2275, dt: 1249.67ms, fracRes: 0.6015, norm(attn): 0.1172, norm(output): 0.2539, norm(x): 0.9303, norm(y): 1.0078, norm:1.3077, tok/sec: 104885.31, flops:91.85, batch-reuse:1
@ 3773 train 5.2371 , allloss: 5.2556, dt: 1273.78ms, fracRes: 0.6019, norm(attn): 0.1167, norm(output): 0.2539, norm(x): 0.9314, norm(y): 1.0079, norm:1.2500, tok/sec: 102900.08, flops:90.11, batch-reuse:1
@ 3774 train 5.1988 , allloss: 5.2168, dt: 1295.08ms, fracRes: 0.6015, norm(attn): 0.1177, norm(output): 0.2539, norm(x): 0.9327, norm(y): 1.0078, norm:1.2256, tok/sec: 101207.67, flops:88.63, batch-reuse:1
@ 3775 train 5.3169 , allloss: 5.3361, dt: 1289.85ms, fracRes: 0.6030, norm(attn): 0.1172, norm(output): 0.2520, norm(x): 0.9301, norm(y): 1.0078, norm:1.4209, tok/sec: 101617.72, flops:88.99, batch-reuse:1
@ 3776 train 5.2874 , allloss: 5.3075, dt: 1271.10ms, fracRes: 0.6013, norm(attn): 0.1182, norm(output): 0.2539, norm(x): 0.9253, norm(y): 1.0078, norm:1.4018, tok/sec: 103116.81, flops:90.30, batch-reuse:1
@ 3777 train 5.2409 , allloss: 5.2604, dt: 1292.00ms, fracRes: 0.6003, norm(attn): 0.1191, norm(output): 0.2539, norm(x): 0.9238, norm(y): 1.0077, norm:1.4351, tok/sec: 101448.63, flops:88.84, batch-reuse:1
@ 3778 train 5.1520 , allloss: 5.1707, dt: 1261.34ms, fracRes: 0.5984, norm(attn): 0.1206, norm(output): 0.2559, norm(x): 0.9220, norm(y): 1.0077, norm:1.5282, tok/sec: 103915.13, flops:91.00, batch-reuse:1
@ 3779 train 5.1712 , allloss: 5.1899, dt: 1269.34ms, fracRes: 0.5999, norm(attn): 0.1182, norm(output): 0.2539, norm(x): 0.9214, norm(y): 1.0078, norm:1.4113, tok/sec: 103260.06, flops:90.42, batch-reuse:1
@ 3780 train 5.1907 , allloss: 5.2095, dt: 1272.86ms, fracRes: 0.6006, norm(attn): 0.1177, norm(output): 0.2539, norm(x): 0.9196, norm(y): 1.0077, norm:1.1302, tok/sec: 102974.11, flops:90.17, batch-reuse:1
@ 3781 train 5.1401 , allloss: 5.1599, dt: 1274.23ms, fracRes: 0.6016, norm(attn): 0.1177, norm(output): 0.2520, norm(x): 0.9198, norm(y): 1.0078, norm:1.4044, tok/sec: 102863.96, flops:90.08, batch-reuse:1
@ 3782 train 5.4224 , allloss: 5.4427, dt: 1274.88ms, fracRes: 0.6022, norm(attn): 0.1177, norm(output): 0.2520, norm(x): 0.9234, norm(y): 1.0078, norm:1.4275, tok/sec: 102811.62, flops:90.03, batch-reuse:1
@ 3783 train 5.1518 , allloss: 5.1703, dt: 1301.10ms, fracRes: 0.6010, norm(attn): 0.1177, norm(output): 0.2520, norm(x): 0.9264, norm(y): 1.0079, norm:1.7098, tok/sec: 100739.32, flops:88.22, batch-reuse:1
@ 3784 train 5.1903 , allloss: 5.2090, dt: 1295.06ms, fracRes: 0.6011, norm(attn): 0.1177, norm(output): 0.2539, norm(x): 0.9288, norm(y): 1.0078, norm:1.3807, tok/sec: 101209.07, flops:88.63, batch-reuse:1
@ 3785 train 5.1864 , allloss: 5.2047, dt: 1299.42ms, fracRes: 0.6010, norm(attn): 0.1191, norm(output): 0.2559, norm(x): 0.9303, norm(y): 1.0077, norm:1.4066, tok/sec: 100869.48, flops:88.33, batch-reuse:1
@ 3786 train 5.2149 , allloss: 5.2339, dt: 1287.48ms, fracRes: 0.6012, norm(attn): 0.1196, norm(output): 0.2539, norm(x): 0.9244, norm(y): 1.0078, norm:1.3177, tok/sec: 101804.90, flops:89.15, batch-reuse:1
@ 3787 train 5.2288 , allloss: 5.2479, dt: 1290.21ms, fracRes: 0.6017, norm(attn): 0.1187, norm(output): 0.2539, norm(x): 0.9263, norm(y): 1.0078, norm:1.2548, tok/sec: 101589.63, flops:88.96, batch-reuse:1
@ 3788 train 5.1775 , allloss: 5.1958, dt: 1257.55ms, fracRes: 0.6009, norm(attn): 0.1182, norm(output): 0.2520, norm(x): 0.9246, norm(y): 1.0078, norm:1.2106, tok/sec: 104228.10, flops:91.27, batch-reuse:1
@ 3789 train 5.2216 , allloss: 5.2408, dt: 1274.42ms, fracRes: 0.6017, norm(attn): 0.1177, norm(output): 0.2520, norm(x): 0.9251, norm(y): 1.0076, norm:1.2771, tok/sec: 102848.12, flops:90.06, batch-reuse:1
@ 3790 train 5.2758 , allloss: 5.2946, dt: 1270.27ms, fracRes: 0.6012, norm(attn): 0.1177, norm(output): 0.2520, norm(x): 0.9287, norm(y): 1.0078, norm:1.3618, tok/sec: 103184.62, flops:90.36, batch-reuse:1
@ 3791 train 5.2690 , allloss: 5.2892, dt: 1266.49ms, fracRes: 0.6008, norm(attn): 0.1177, norm(output): 0.2539, norm(x): 0.9265, norm(y): 1.0077, norm:1.5370, tok/sec: 103492.53, flops:90.63, batch-reuse:1
@ 3792 train 5.3218 , allloss: 5.3413, dt: 1271.17ms, fracRes: 0.6013, norm(attn): 0.1177, norm(output): 0.2520, norm(x): 0.9270, norm(y): 1.0078, norm:1.7871, tok/sec: 103111.24, flops:90.29, batch-reuse:1
@ 3793 train 5.2433 , allloss: 5.2635, dt: 1266.42ms, fracRes: 0.6006, norm(attn): 0.1177, norm(output): 0.2520, norm(x): 0.9224, norm(y): 1.0078, norm:1.4663, tok/sec: 103498.29, flops:90.63, batch-reuse:1
@ 3794 train 5.1595 , allloss: 5.1782, dt: 1278.04ms, fracRes: 0.6007, norm(attn): 0.1196, norm(output): 0.2539, norm(x): 0.9237, norm(y): 1.0078, norm:1.3748, tok/sec: 102557.43, flops:89.81, batch-reuse:1
@ 3795 train 5.1500 , allloss: 5.1692, dt: 1283.31ms, fracRes: 0.6019, norm(attn): 0.1191, norm(output): 0.2520, norm(x): 0.9272, norm(y): 1.0078, norm:1.2293, tok/sec: 102135.58, flops:89.44, batch-reuse:1
@ 3796 train 5.2516 , allloss: 5.2706, dt: 1274.00ms, fracRes: 0.6020, norm(attn): 0.1191, norm(output): 0.2539, norm(x): 0.9275, norm(y): 1.0078, norm:1.6601, tok/sec: 102882.32, flops:90.09, batch-reuse:1
@ 3797 train 5.3782 , allloss: 5.3973, dt: 1266.24ms, fracRes: 0.6038, norm(attn): 0.1167, norm(output): 0.2520, norm(x): 0.9265, norm(y): 1.0077, norm:1.3830, tok/sec: 103512.95, flops:90.64, batch-reuse:1
@ 3798 train 5.2292 , allloss: 5.2477, dt: 1263.63ms, fracRes: 0.6024, norm(attn): 0.1172, norm(output): 0.2539, norm(x): 0.9272, norm(y): 1.0078, norm:1.0987, tok/sec: 103726.49, flops:90.83, batch-reuse:1
@ 3799 train 5.1976 , allloss: 5.2163, dt: 1261.20ms, fracRes: 0.6022, norm(attn): 0.1177, norm(output): 0.2520, norm(x): 0.9257, norm(y): 1.0077, norm:1.2546, tok/sec: 103926.80, flops:91.01, batch-reuse:1
@ 3800 train 5.1775 , allloss: 5.1962, dt: 1269.71ms, fracRes: 0.6025, norm(attn): 0.1172, norm(output): 0.2520, norm(x): 0.9260, norm(y): 1.0079, norm:1.1408, tok/sec: 103229.77, flops:90.40, batch-reuse:1
@ 3801 train 5.1342 , allloss: 5.1533, dt: 1255.87ms, fracRes: 0.6017, norm(attn): 0.1177, norm(output): 0.2520, norm(x): 0.9235, norm(y): 1.0079, norm:1.4755, tok/sec: 104367.14, flops:91.39, batch-reuse:1
@ 3802 train 5.1431 , allloss: 5.1624, dt: 1241.74ms, fracRes: 0.6002, norm(attn): 0.1211, norm(output): 0.2520, norm(x): 0.9226, norm(y): 1.0078, norm:1.1439, tok/sec: 105554.72, flops:92.43, batch-reuse:1
@ 3803 train 5.1826 , allloss: 5.2022, dt: 1248.93ms, fracRes: 0.6003, norm(attn): 0.1187, norm(output): 0.2520, norm(x): 0.9212, norm(y): 1.0078, norm:1.2178, tok/sec: 104947.80, flops:91.90, batch-reuse:1
@ 3804 train 5.1848 , allloss: 5.2043, dt: 1269.26ms, fracRes: 0.6020, norm(attn): 0.1177, norm(output): 0.2520, norm(x): 0.9204, norm(y): 1.0078, norm:1.2843, tok/sec: 103266.17, flops:90.43, batch-reuse:1
@ 3805 train 5.2191 , allloss: 5.2383, dt: 1272.58ms, fracRes: 0.6019, norm(attn): 0.1172, norm(output): 0.2520, norm(x): 0.9243, norm(y): 1.0078, norm:1.2933, tok/sec: 102996.89, flops:90.19, batch-reuse:1
@ 3806 train 5.2033 , allloss: 5.2218, dt: 1287.90ms, fracRes: 0.6023, norm(attn): 0.1172, norm(output): 0.2520, norm(x): 0.9285, norm(y): 1.0079, norm:1.2451, tok/sec: 101771.84, flops:89.12, batch-reuse:1
@ 3807 train 5.1301 , allloss: 5.1493, dt: 1280.62ms, fracRes: 0.6011, norm(attn): 0.1187, norm(output): 0.2520, norm(x): 0.9241, norm(y): 1.0078, norm:1.2936, tok/sec: 102350.04, flops:89.63, batch-reuse:1
@ 3808 train 5.1734 , allloss: 5.1935, dt: 1256.32ms, fracRes: 0.6010, norm(attn): 0.1191, norm(output): 0.2520, norm(x): 0.9243, norm(y): 1.0078, norm:1.2161, tok/sec: 104329.91, flops:91.36, batch-reuse:1
@ 3809 train 5.1229 , allloss: 5.1420, dt: 1291.95ms, fracRes: 0.6001, norm(attn): 0.1191, norm(output): 0.2539, norm(x): 0.9224, norm(y): 1.0079, norm:1.4247, tok/sec: 101452.68, flops:88.84, batch-reuse:1
@ 3810 train 5.1369 , allloss: 5.1553, dt: 1293.87ms, fracRes: 0.6017, norm(attn): 0.1182, norm(output): 0.2520, norm(x): 0.9274, norm(y): 1.0080, norm:1.1823, tok/sec: 101302.50, flops:88.71, batch-reuse:1
@ 3811 train 5.1429 , allloss: 5.1622, dt: 1277.25ms, fracRes: 0.6011, norm(attn): 0.1191, norm(output): 0.2539, norm(x): 0.9213, norm(y): 1.0078, norm:1.2762, tok/sec: 102620.74, flops:89.86, batch-reuse:1
@ 3812 train 5.0746 , allloss: 5.0931, dt: 1273.30ms, fracRes: 0.6009, norm(attn): 0.1187, norm(output): 0.2539, norm(x): 0.9235, norm(y): 1.0078, norm:1.2771, tok/sec: 102939.11, flops:90.14, batch-reuse:1
@ 3813 train 5.0266 , allloss: 5.0463, dt: 1279.93ms, fracRes: 0.6012, norm(attn): 0.1187, norm(output): 0.2520, norm(x): 0.9239, norm(y): 1.0079, norm:1.2922, tok/sec: 102405.69, flops:89.68, batch-reuse:1
@ 3814 train 5.1483 , allloss: 5.1671, dt: 1521.15ms, fracRes: 0.6009, norm(attn): 0.1187, norm(output): 0.2539, norm(x): 0.9260, norm(y): 1.0079, norm:1.4526, tok/sec: 86166.49, flops:75.45, batch-reuse:1
@ 3815 train 5.2284 , allloss: 5.2483, dt: 1266.96ms, fracRes: 0.6027, norm(attn): 0.1187, norm(output): 0.2539, norm(x): 0.9237, norm(y): 1.0079, norm:1.2738, tok/sec: 103454.33, flops:90.59, batch-reuse:1
@ 3816 train 5.1661 , allloss: 5.1847, dt: 1277.11ms, fracRes: 0.6022, norm(attn): 0.1177, norm(output): 0.2520, norm(x): 0.9240, norm(y): 1.0079, norm:1.2883, tok/sec: 102631.72, flops:89.87, batch-reuse:1
@ 3817 train 5.1357 , allloss: 5.1545, dt: 1262.45ms, fracRes: 0.6013, norm(attn): 0.1182, norm(output): 0.2520, norm(x): 0.9235, norm(y): 1.0078, norm:1.1264, tok/sec: 103823.52, flops:90.92, batch-reuse:1
@ 3818 train 5.1574 , allloss: 5.1762, dt: 1263.74ms, fracRes: 0.6004, norm(attn): 0.1196, norm(output): 0.2520, norm(x): 0.9191, norm(y): 1.0077, norm:1.4897, tok/sec: 103717.41, flops:90.82, batch-reuse:1
@ 3819 train 5.1813 , allloss: 5.2004, dt: 1268.12ms, fracRes: 0.6004, norm(attn): 0.1196, norm(output): 0.2520, norm(x): 0.9190, norm(y): 1.0078, norm:1.4088, tok/sec: 103359.57, flops:90.51, batch-reuse:1
@ 3820 train 5.1964 , allloss: 5.2155, dt: 1276.51ms, fracRes: 0.5997, norm(attn): 0.1196, norm(output): 0.2520, norm(x): 0.9201, norm(y): 1.0077, norm:1.4339, tok/sec: 102679.64, flops:89.92, batch-reuse:1
@ 3821 train 5.1893 , allloss: 5.2081, dt: 1272.59ms, fracRes: 0.6004, norm(attn): 0.1182, norm(output): 0.2520, norm(x): 0.9233, norm(y): 1.0078, norm:1.2360, tok/sec: 102995.87, flops:90.19, batch-reuse:1
@ 3822 train 5.1013 , allloss: 5.1201, dt: 1300.85ms, fracRes: 0.6007, norm(attn): 0.1177, norm(output): 0.2520, norm(x): 0.9228, norm(y): 1.0078, norm:1.1580, tok/sec: 100759.04, flops:88.23, batch-reuse:1
@ 3823 train 5.1545 , allloss: 5.1730, dt: 1299.34ms, fracRes: 0.6013, norm(attn): 0.1172, norm(output): 0.2520, norm(x): 0.9239, norm(y): 1.0079, norm:1.1378, tok/sec: 100875.92, flops:88.34, batch-reuse:1
@ 3824 train 5.0941 , allloss: 5.1129, dt: 1279.57ms, fracRes: 0.6006, norm(attn): 0.1187, norm(output): 0.2520, norm(x): 0.9177, norm(y): 1.0079, norm:1.3452, tok/sec: 102434.42, flops:89.70, batch-reuse:1
@ 3825 train 5.1621 , allloss: 5.1817, dt: 1270.95ms, fracRes: 0.5997, norm(attn): 0.1187, norm(output): 0.2539, norm(x): 0.9110, norm(y): 1.0078, norm:1.2167, tok/sec: 103128.76, flops:90.31, batch-reuse:1
@ 3826 train 5.1679 , allloss: 5.1872, dt: 1257.15ms, fracRes: 0.5993, norm(attn): 0.1201, norm(output): 0.2520, norm(x): 0.9147, norm(y): 1.0079, norm:1.3734, tok/sec: 104261.13, flops:91.30, batch-reuse:1
@ 3827 train 5.1489 , allloss: 5.1679, dt: 1251.05ms, fracRes: 0.5997, norm(attn): 0.1191, norm(output): 0.2520, norm(x): 0.9146, norm(y): 1.0079, norm:1.4790, tok/sec: 104769.19, flops:91.74, batch-reuse:1
@ 3828 train 5.0831 , allloss: 5.1015, dt: 1275.76ms, fracRes: 0.5997, norm(attn): 0.1191, norm(output): 0.2520, norm(x): 0.9114, norm(y): 1.0079, norm:1.1683, tok/sec: 102740.56, flops:89.97, batch-reuse:1
@ 3829 train 5.1371 , allloss: 5.1555, dt: 1266.40ms, fracRes: 0.6011, norm(attn): 0.1182, norm(output): 0.2520, norm(x): 0.9119, norm(y): 1.0078, norm:1.1657, tok/sec: 103499.95, flops:90.63, batch-reuse:1
@ 3830 train 5.2629 , allloss: 5.2831, dt: 1289.04ms, fracRes: 0.6019, norm(attn): 0.1177, norm(output): 0.2500, norm(x): 0.9149, norm(y): 1.0080, norm:1.5460, tok/sec: 101681.85, flops:89.04, batch-reuse:1
@ 3831 train 5.0718 , allloss: 5.0913, dt: 1288.21ms, fracRes: 0.6004, norm(attn): 0.1187, norm(output): 0.2500, norm(x): 0.9105, norm(y): 1.0079, norm:1.4059, tok/sec: 101747.69, flops:89.10, batch-reuse:1
@ 3832 train 5.1822 , allloss: 5.2031, dt: 1268.19ms, fracRes: 0.6021, norm(attn): 0.1172, norm(output): 0.2500, norm(x): 0.9142, norm(y): 1.0079, norm:1.6025, tok/sec: 103353.39, flops:90.51, batch-reuse:1
@ 3833 train 5.1024 , allloss: 5.1216, dt: 1263.76ms, fracRes: 0.6024, norm(attn): 0.1177, norm(output): 0.2520, norm(x): 0.9137, norm(y): 1.0079, norm:1.2778, tok/sec: 103716.26, flops:90.82, batch-reuse:1
@ 3834 train 5.1152 , allloss: 5.1341, dt: 1271.03ms, fracRes: 0.6014, norm(attn): 0.1177, norm(output): 0.2520, norm(x): 0.9157, norm(y): 1.0079, norm:1.3437, tok/sec: 103122.28, flops:90.30, batch-reuse:1
@ 3835 train 5.0825 , allloss: 5.1032, dt: 1263.94ms, fracRes: 0.6009, norm(attn): 0.1187, norm(output): 0.2520, norm(x): 0.9123, norm(y): 1.0079, norm:1.3575, tok/sec: 103700.80, flops:90.81, batch-reuse:1
@ 3836 train 5.1259 , allloss: 5.1453, dt: 1283.36ms, fracRes: 0.6006, norm(attn): 0.1187, norm(output): 0.2520, norm(x): 0.9130, norm(y): 1.0079, norm:1.3311, tok/sec: 102132.21, flops:89.44, batch-reuse:1
@ 3837 train 5.2059 , allloss: 5.2253, dt: 1266.00ms, fracRes: 0.6000, norm(attn): 0.1191, norm(output): 0.2520, norm(x): 0.9123, norm(y): 1.0078, norm:1.4278, tok/sec: 103532.68, flops:90.66, batch-reuse:1
@ 3838 train 5.1219 , allloss: 5.1418, dt: 1265.89ms, fracRes: 0.6002, norm(attn): 0.1187, norm(output): 0.2500, norm(x): 0.9134, norm(y): 1.0079, norm:1.3241, tok/sec: 103541.02, flops:90.67, batch-reuse:1
@ 3839 train 5.1116 , allloss: 5.1304, dt: 1263.81ms, fracRes: 0.6006, norm(attn): 0.1191, norm(output): 0.2520, norm(x): 0.9159, norm(y): 1.0079, norm:1.5874, tok/sec: 103712.05, flops:90.82, batch-reuse:1
@ 3840 train 5.2287 , allloss: 5.2477, dt: 1249.88ms, fracRes: 0.6023, norm(attn): 0.1177, norm(output): 0.2500, norm(x): 0.9178, norm(y): 1.0078, norm:1.1872, tok/sec: 104867.72, flops:91.83, batch-reuse:1
@ 3841 train 5.0810 , allloss: 5.0990, dt: 1268.86ms, fracRes: 0.6012, norm(attn): 0.1196, norm(output): 0.2520, norm(x): 0.9134, norm(y): 1.0078, norm:1.3017, tok/sec: 103298.98, flops:90.46, batch-reuse:1
@ 3842 train 4.8696 , allloss: 4.8877, dt: 1261.48ms, fracRes: 0.5977, norm(attn): 0.1230, norm(output): 0.2539, norm(x): 0.9030, norm(y): 1.0075, norm:1.3409, tok/sec: 103903.66, flops:90.99, batch-reuse:1
@ 3843 train 5.1325 , allloss: 5.1522, dt: 1261.82ms, fracRes: 0.6000, norm(attn): 0.1182, norm(output): 0.2520, norm(x): 0.9144, norm(y): 1.0078, norm:1.5412, tok/sec: 103875.70, flops:90.96, batch-reuse:1
@ 3844 train 5.1187 , allloss: 5.1382, dt: 1257.31ms, fracRes: 0.5998, norm(attn): 0.1191, norm(output): 0.2520, norm(x): 0.9156, norm(y): 1.0079, norm:1.3900, tok/sec: 104247.77, flops:91.29, batch-reuse:1
@ 3845 train 5.0944 , allloss: 5.1143, dt: 1296.98ms, fracRes: 0.6014, norm(attn): 0.1182, norm(output): 0.2500, norm(x): 0.9147, norm(y): 1.0079, norm:1.5781, tok/sec: 101059.15, flops:88.50, batch-reuse:1
@ 3846 train 4.9856 , allloss: 5.0063, dt: 1286.04ms, fracRes: 0.6015, norm(attn): 0.1182, norm(output): 0.2500, norm(x): 0.9114, norm(y): 1.0080, norm:1.2898, tok/sec: 101919.23, flops:89.25, batch-reuse:1
@ 3847 train 5.1949 , allloss: 5.2142, dt: 1302.75ms, fracRes: 0.6023, norm(attn): 0.1177, norm(output): 0.2520, norm(x): 0.9186, norm(y): 1.0078, norm:1.3183, tok/sec: 100611.70, flops:88.10, batch-reuse:1
@ 3848 train 5.0924 , allloss: 5.1115, dt: 1261.35ms, fracRes: 0.6004, norm(attn): 0.1182, norm(output): 0.2520, norm(x): 0.9180, norm(y): 1.0080, norm:1.5559, tok/sec: 103914.28, flops:91.00, batch-reuse:1
@ 3849 train 5.0292 , allloss: 5.0476, dt: 1278.34ms, fracRes: 0.5993, norm(attn): 0.1201, norm(output): 0.2520, norm(x): 0.9173, norm(y): 1.0080, norm:1.4573, tok/sec: 102533.08, flops:89.79, batch-reuse:1
@ 3850 train 5.1329 , allloss: 5.1521, dt: 1286.75ms, fracRes: 0.5995, norm(attn): 0.1191, norm(output): 0.2520, norm(x): 0.9154, norm(y): 1.0079, norm:1.2128, tok/sec: 101862.54, flops:89.20, batch-reuse:1
@ 3851 train 5.0742 , allloss: 5.0927, dt: 1285.55ms, fracRes: 0.6003, norm(attn): 0.1196, norm(output): 0.2539, norm(x): 0.9161, norm(y): 1.0079, norm:1.3927, tok/sec: 101957.66, flops:89.28, batch-reuse:1
@ 3852 train 5.0552 , allloss: 5.0742, dt: 1262.47ms, fracRes: 0.6008, norm(attn): 0.1182, norm(output): 0.2520, norm(x): 0.9171, norm(y): 1.0079, norm:1.3587, tok/sec: 103821.54, flops:90.92, batch-reuse:1
@ 3853 train 5.0996 , allloss: 5.1185, dt: 1252.78ms, fracRes: 0.6015, norm(attn): 0.1187, norm(output): 0.2520, norm(x): 0.9183, norm(y): 1.0080, norm:1.1783, tok/sec: 104624.92, flops:91.62, batch-reuse:1
@ 3854 train 5.0364 , allloss: 5.0550, dt: 1275.36ms, fracRes: 0.6012, norm(attn): 0.1177, norm(output): 0.2500, norm(x): 0.9189, norm(y): 1.0081, norm:1.3543, tok/sec: 102772.27, flops:90.00, batch-reuse:1
@ 3855 train 4.9978 , allloss: 5.0179, dt: 1296.80ms, fracRes: 0.6005, norm(attn): 0.1182, norm(output): 0.2520, norm(x): 0.9159, norm(y): 1.0080, norm:1.6322, tok/sec: 101073.66, flops:88.51, batch-reuse:1
@ 3856 train 4.9839 , allloss: 5.0037, dt: 1315.13ms, fracRes: 0.6002, norm(attn): 0.1196, norm(output): 0.2520, norm(x): 0.9131, norm(y): 1.0079, norm:1.2310, tok/sec: 99664.94, flops:87.28, batch-reuse:1
@ 3857 train 4.9722 , allloss: 4.9917, dt: 1316.72ms, fracRes: 0.6003, norm(attn): 0.1187, norm(output): 0.2500, norm(x): 0.9093, norm(y): 1.0080, norm:1.3295, tok/sec: 99544.02, flops:87.17, batch-reuse:1
@ 3858 train 4.9880 , allloss: 5.0078, dt: 1261.27ms, fracRes: 0.5995, norm(attn): 0.1187, norm(output): 0.2500, norm(x): 0.9105, norm(y): 1.0080, norm:1.3193, tok/sec: 103920.37, flops:91.00, batch-reuse:1
@ 3859 train 4.9556 , allloss: 4.9743, dt: 1273.53ms, fracRes: 0.5996, norm(attn): 0.1182, norm(output): 0.2520, norm(x): 0.9100, norm(y): 1.0080, norm:1.2829, tok/sec: 102920.50, flops:90.13, batch-reuse:1
@ 3860 train 5.1969 , allloss: 5.2159, dt: 1263.28ms, fracRes: 0.6034, norm(attn): 0.1162, norm(output): 0.2520, norm(x): 0.9160, norm(y): 1.0081, norm:1.4578, tok/sec: 103755.31, flops:90.86, batch-reuse:1
@ 3861 train 5.1067 , allloss: 5.1255, dt: 1263.67ms, fracRes: 0.6016, norm(attn): 0.1182, norm(output): 0.2500, norm(x): 0.9168, norm(y): 1.0079, norm:1.4491, tok/sec: 103723.42, flops:90.83, batch-reuse:1
@ 3862 train 5.0904 , allloss: 5.1103, dt: 1252.73ms, fracRes: 0.6014, norm(attn): 0.1187, norm(output): 0.2500, norm(x): 0.9165, norm(y): 1.0079, norm:1.3981, tok/sec: 104628.76, flops:91.62, batch-reuse:1
@ 3863 train 5.0811 , allloss: 5.1011, dt: 1284.73ms, fracRes: 0.6012, norm(attn): 0.1201, norm(output): 0.2520, norm(x): 0.9163, norm(y): 1.0080, norm:1.3556, tok/sec: 102022.83, flops:89.34, batch-reuse:1
@ 3864 train 5.0467 , allloss: 5.0663, dt: 1259.60ms, fracRes: 0.6008, norm(attn): 0.1177, norm(output): 0.2500, norm(x): 0.9106, norm(y): 1.0080, norm:1.2838, tok/sec: 104058.81, flops:91.12, batch-reuse:1
@ 3865 train 5.1029 , allloss: 5.1222, dt: 1268.79ms, fracRes: 0.6015, norm(attn): 0.1182, norm(output): 0.2520, norm(x): 0.9146, norm(y): 1.0079, norm:1.4358, tok/sec: 103304.63, flops:90.46, batch-reuse:1
@ 3866 train 5.0230 , allloss: 5.0422, dt: 1261.67ms, fracRes: 0.6016, norm(attn): 0.1177, norm(output): 0.2520, norm(x): 0.9173, norm(y): 1.0080, norm:1.3180, tok/sec: 103887.56, flops:90.97, batch-reuse:1
@ 3867 train 5.0535 , allloss: 5.0730, dt: 1261.47ms, fracRes: 0.6006, norm(attn): 0.1182, norm(output): 0.2520, norm(x): 0.9128, norm(y): 1.0079, norm:1.5195, tok/sec: 103904.17, flops:90.99, batch-reuse:1
@ 3868 train 4.9559 , allloss: 4.9749, dt: 1246.51ms, fracRes: 0.5999, norm(attn): 0.1191, norm(output): 0.2520, norm(x): 0.9135, norm(y): 1.0080, norm:1.5038, tok/sec: 105151.18, flops:92.08, batch-reuse:1
@ 3869 train 5.0154 , allloss: 5.0360, dt: 1252.86ms, fracRes: 0.6011, norm(attn): 0.1191, norm(output): 0.2500, norm(x): 0.9099, norm(y): 1.0080, norm:1.2869, tok/sec: 104617.99, flops:91.61, batch-reuse:1
@ 3870 train 5.0270 , allloss: 5.0458, dt: 1249.61ms, fracRes: 0.6004, norm(attn): 0.1182, norm(output): 0.2520, norm(x): 0.9105, norm(y): 1.0080, norm:1.3673, tok/sec: 104890.27, flops:91.85, batch-reuse:1
@ 3871 train 5.1459 , allloss: 5.1645, dt: 1269.06ms, fracRes: 0.6006, norm(attn): 0.1182, norm(output): 0.2520, norm(x): 0.9108, norm(y): 1.0078, norm:1.6583, tok/sec: 103282.97, flops:90.44, batch-reuse:1
@ 3872 train 5.1179 , allloss: 5.1376, dt: 1270.62ms, fracRes: 0.6014, norm(attn): 0.1177, norm(output): 0.2500, norm(x): 0.9110, norm(y): 1.0079, norm:1.3863, tok/sec: 103155.66, flops:90.33, batch-reuse:1
@ 3873 train 5.0165 , allloss: 5.0354, dt: 1288.30ms, fracRes: 0.6016, norm(attn): 0.1182, norm(output): 0.2500, norm(x): 0.9122, norm(y): 1.0080, norm:1.5805, tok/sec: 101740.44, flops:89.09, batch-reuse:1
@ 3874 train 5.0083 , allloss: 5.0273, dt: 1286.67ms, fracRes: 0.6016, norm(attn): 0.1177, norm(output): 0.2500, norm(x): 0.9131, norm(y): 1.0079, norm:1.1548, tok/sec: 101869.30, flops:89.21, batch-reuse:1
@ 3875 train 4.9907 , allloss: 5.0096, dt: 1290.16ms, fracRes: 0.6005, norm(attn): 0.1196, norm(output): 0.2520, norm(x): 0.9144, norm(y): 1.0080, norm:1.5357, tok/sec: 101593.79, flops:88.96, batch-reuse:1
@ 3876 train 5.0881 , allloss: 5.1078, dt: 1270.53ms, fracRes: 0.6007, norm(attn): 0.1191, norm(output): 0.2500, norm(x): 0.9121, norm(y): 1.0079, norm:1.4311, tok/sec: 103163.38, flops:90.34, batch-reuse:1
@ 3877 train 5.0975 , allloss: 5.1175, dt: 1254.30ms, fracRes: 0.6012, norm(attn): 0.1187, norm(output): 0.2500, norm(x): 0.9118, norm(y): 1.0080, norm:1.3438, tok/sec: 104498.41, flops:91.51, batch-reuse:1
@ 3878 train 4.9793 , allloss: 4.9980, dt: 1286.79ms, fracRes: 0.6013, norm(attn): 0.1177, norm(output): 0.2500, norm(x): 0.9139, norm(y): 1.0081, norm:1.3711, tok/sec: 101859.35, flops:89.20, batch-reuse:1
@ 3879 train 5.0273 , allloss: 5.0461, dt: 1309.12ms, fracRes: 0.6005, norm(attn): 0.1177, norm(output): 0.2520, norm(x): 0.9133, norm(y): 1.0080, norm:1.3529, tok/sec: 100122.57, flops:87.68, batch-reuse:1
@ 3880 train 5.1619 , allloss: 5.1816, dt: 1257.64ms, fracRes: 0.6000, norm(attn): 0.1196, norm(output): 0.2520, norm(x): 0.9105, norm(y): 1.0079, norm:1.6368, tok/sec: 104220.57, flops:91.26, batch-reuse:1
@ 3881 train 5.0535 , allloss: 5.0740, dt: 1253.25ms, fracRes: 0.5999, norm(attn): 0.1211, norm(output): 0.2520, norm(x): 0.9098, norm(y): 1.0079, norm:1.2085, tok/sec: 104585.53, flops:91.58, batch-reuse:1
@ 3882 train 5.0231 , allloss: 5.0416, dt: 1253.60ms, fracRes: 0.6002, norm(attn): 0.1211, norm(output): 0.2520, norm(x): 0.9098, norm(y): 1.0080, norm:1.5859, tok/sec: 104556.41, flops:91.56, batch-reuse:1
@ 3883 train 4.9680 , allloss: 4.9875, dt: 1293.72ms, fracRes: 0.6007, norm(attn): 0.1221, norm(output): 0.2500, norm(x): 0.9102, norm(y): 1.0080, norm:1.4364, tok/sec: 101314.15, flops:88.72, batch-reuse:1
@ 3884 train 5.0282 , allloss: 5.0471, dt: 1255.20ms, fracRes: 0.6014, norm(attn): 0.1201, norm(output): 0.2520, norm(x): 0.9111, norm(y): 1.0079, norm:1.2057, tok/sec: 104423.45, flops:91.44, batch-reuse:1
@ 3885 train 5.0931 , allloss: 5.1115, dt: 1264.49ms, fracRes: 0.6020, norm(attn): 0.1177, norm(output): 0.2520, norm(x): 0.9110, norm(y): 1.0079, norm:1.6600, tok/sec: 103655.97, flops:90.77, batch-reuse:1
@ 3886 train 5.0153 , allloss: 5.0342, dt: 1270.20ms, fracRes: 0.6010, norm(attn): 0.1172, norm(output): 0.2500, norm(x): 0.9144, norm(y): 1.0080, norm:1.3856, tok/sec: 103190.24, flops:90.36, batch-reuse:1
@ 3887 train 4.9922 , allloss: 5.0119, dt: 1250.49ms, fracRes: 0.5998, norm(attn): 0.1177, norm(output): 0.2500, norm(x): 0.9093, norm(y): 1.0079, norm:1.6433, tok/sec: 104816.14, flops:91.79, batch-reuse:1
@ 3888 train 5.0727 , allloss: 5.0910, dt: 1284.56ms, fracRes: 0.5995, norm(attn): 0.1187, norm(output): 0.2520, norm(x): 0.9071, norm(y): 1.0079, norm:1.5932, tok/sec: 102036.19, flops:89.35, batch-reuse:1
@ 3889 train 5.0788 , allloss: 5.0979, dt: 1269.70ms, fracRes: 0.5999, norm(attn): 0.1191, norm(output): 0.2500, norm(x): 0.9065, norm(y): 1.0079, norm:1.5601, tok/sec: 103230.68, flops:90.40, batch-reuse:1
@ 3890 train 5.1179 , allloss: 5.1390, dt: 1244.26ms, fracRes: 0.6013, norm(attn): 0.1211, norm(output): 0.2520, norm(x): 0.9073, norm(y): 1.0078, norm:1.3027, tok/sec: 105341.50, flops:92.25, batch-reuse:1
@ 3891 train 4.9590 , allloss: 4.9774, dt: 1250.40ms, fracRes: 0.6018, norm(attn): 0.1182, norm(output): 0.2520, norm(x): 0.9137, norm(y): 1.0079, norm:1.5857, tok/sec: 104824.31, flops:91.79, batch-reuse:1
@ 3892 train 5.0823 , allloss: 5.1006, dt: 1261.07ms, fracRes: 0.6028, norm(attn): 0.1172, norm(output): 0.2500, norm(x): 0.9195, norm(y): 1.0080, norm:1.3710, tok/sec: 103937.37, flops:91.02, batch-reuse:1
@ 3893 train 5.0715 , allloss: 5.0903, dt: 1256.28ms, fracRes: 0.6018, norm(attn): 0.1177, norm(output): 0.2500, norm(x): 0.9184, norm(y): 1.0081, norm:1.5812, tok/sec: 104333.59, flops:91.36, batch-reuse:1
@ 3894 train 5.2746 , allloss: 5.2936, dt: 1258.64ms, fracRes: 0.6017, norm(attn): 0.1172, norm(output): 0.2500, norm(x): 0.9175, norm(y): 1.0080, norm:1.5137, tok/sec: 104137.74, flops:91.19, batch-reuse:1
@ 3895 train 5.1964 , allloss: 5.2165, dt: 1252.93ms, fracRes: 0.6017, norm(attn): 0.1182, norm(output): 0.2500, norm(x): 0.9119, norm(y): 1.0079, norm:1.8621, tok/sec: 104612.57, flops:91.61, batch-reuse:1
@ 3896 train 5.1792 , allloss: 5.1987, dt: 1265.58ms, fracRes: 0.6022, norm(attn): 0.1172, norm(output): 0.2500, norm(x): 0.9136, norm(y): 1.0080, norm:1.1599, tok/sec: 103567.12, flops:90.69, batch-reuse:1
@ 3897 train 5.1534 , allloss: 5.1725, dt: 1248.51ms, fracRes: 0.6006, norm(attn): 0.1187, norm(output): 0.2500, norm(x): 0.9091, norm(y): 1.0079, norm:1.3958, tok/sec: 104982.53, flops:91.93, batch-reuse:1
@ 3898 train 5.3188 , allloss: 5.3380, dt: 1256.86ms, fracRes: 0.6004, norm(attn): 0.1201, norm(output): 0.2520, norm(x): 0.9073, norm(y): 1.0078, norm:1.4717, tok/sec: 104285.04, flops:91.32, batch-reuse:1
@ 3899 train 5.1637 , allloss: 5.1822, dt: 1254.81ms, fracRes: 0.6003, norm(attn): 0.1221, norm(output): 0.2520, norm(x): 0.9080, norm(y): 1.0079, norm:1.2280, tok/sec: 104455.94, flops:91.47, batch-reuse:1
@ 3900 train 5.1617 , allloss: 5.1811, dt: 1271.81ms, fracRes: 0.6016, norm(attn): 0.1191, norm(output): 0.2520, norm(x): 0.9118, norm(y): 1.0080, norm:1.2159, tok/sec: 103059.63, flops:90.25, batch-reuse:1
@ 3901 train 5.2191 , allloss: 5.2385, dt: 1269.28ms, fracRes: 0.6024, norm(attn): 0.1187, norm(output): 0.2500, norm(x): 0.9103, norm(y): 1.0079, norm:1.3494, tok/sec: 103264.59, flops:90.43, batch-reuse:1
@ 3902 train 5.1218 , allloss: 5.1412, dt: 1292.66ms, fracRes: 0.6023, norm(attn): 0.1177, norm(output): 0.2500, norm(x): 0.9117, norm(y): 1.0080, norm:1.1922, tok/sec: 101397.34, flops:88.79, batch-reuse:1
@ 3903 train 5.1665 , allloss: 5.1859, dt: 1293.18ms, fracRes: 0.6026, norm(attn): 0.1172, norm(output): 0.2500, norm(x): 0.9100, norm(y): 1.0080, norm:1.6095, tok/sec: 101356.37, flops:88.76, batch-reuse:1
@ 3904 train 5.2645 , allloss: 5.2839, dt: 1269.21ms, fracRes: 0.6029, norm(attn): 0.1172, norm(output): 0.2500, norm(x): 0.9088, norm(y): 1.0079, norm:1.2992, tok/sec: 103270.39, flops:90.43, batch-reuse:1
@ 3905 train 5.2221 , allloss: 5.2418, dt: 1275.69ms, fracRes: 0.6028, norm(attn): 0.1177, norm(output): 0.2500, norm(x): 0.9099, norm(y): 1.0078, norm:1.5104, tok/sec: 102745.90, flops:89.97, batch-reuse:1
@ 3906 train 5.2343 , allloss: 5.2535, dt: 1259.78ms, fracRes: 0.6018, norm(attn): 0.1177, norm(output): 0.2500, norm(x): 0.9089, norm(y): 1.0078, norm:1.2369, tok/sec: 104043.23, flops:91.11, batch-reuse:1
@ 3907 train 5.1849 , allloss: 5.2051, dt: 1301.31ms, fracRes: 0.6013, norm(attn): 0.1191, norm(output): 0.2500, norm(x): 0.9046, norm(y): 1.0078, norm:1.2873, tok/sec: 100723.44, flops:88.20, batch-reuse:1
@ 3908 train 5.1129 , allloss: 5.1329, dt: 1276.92ms, fracRes: 0.6003, norm(attn): 0.1211, norm(output): 0.2539, norm(x): 0.9067, norm(y): 1.0077, norm:1.3199, tok/sec: 102646.76, flops:89.89, batch-reuse:1
@ 3909 train 5.0904 , allloss: 5.1094, dt: 1256.62ms, fracRes: 0.6002, norm(attn): 0.1201, norm(output): 0.2539, norm(x): 0.9059, norm(y): 1.0077, norm:1.9802, tok/sec: 104305.19, flops:91.34, batch-reuse:1
@ 3910 train 5.2240 , allloss: 5.2445, dt: 1269.61ms, fracRes: 0.6008, norm(attn): 0.1211, norm(output): 0.2500, norm(x): 0.9027, norm(y): 1.0078, norm:1.4261, tok/sec: 103238.36, flops:90.40, batch-reuse:1
@ 3911 train 5.2005 , allloss: 5.2208, dt: 1310.85ms, fracRes: 0.6006, norm(attn): 0.1206, norm(output): 0.2520, norm(x): 0.9053, norm(y): 1.0079, norm:1.5552, tok/sec: 99990.07, flops:87.56, batch-reuse:1
@ 3912 train 5.1451 , allloss: 5.1650, dt: 1276.15ms, fracRes: 0.6005, norm(attn): 0.1187, norm(output): 0.2500, norm(x): 0.9049, norm(y): 1.0079, norm:1.2874, tok/sec: 102708.68, flops:89.94, batch-reuse:1
@ 3913 train 5.2544 , allloss: 5.2735, dt: 1261.92ms, fracRes: 0.6012, norm(attn): 0.1196, norm(output): 0.2520, norm(x): 0.9069, norm(y): 1.0079, norm:1.6414, tok/sec: 103867.36, flops:90.96, batch-reuse:1
@ 3914 train 5.2662 , allloss: 5.2853, dt: 1253.49ms, fracRes: 0.6022, norm(attn): 0.1177, norm(output): 0.2520, norm(x): 0.9108, norm(y): 1.0079, norm:1.5357, tok/sec: 104565.34, flops:91.57, batch-reuse:1
@ 3915 train 5.2004 , allloss: 5.2201, dt: 1267.65ms, fracRes: 0.6020, norm(attn): 0.1182, norm(output): 0.2500, norm(x): 0.9042, norm(y): 1.0079, norm:1.2853, tok/sec: 103397.85, flops:90.54, batch-reuse:1
@ 3916 train 5.2383 , allloss: 5.2567, dt: 1278.15ms, fracRes: 0.6021, norm(attn): 0.1177, norm(output): 0.2500, norm(x): 0.9039, norm(y): 1.0080, norm:1.4545, tok/sec: 102548.19, flops:89.80, batch-reuse:1
@ 3917 train 5.3143 , allloss: 5.3335, dt: 1279.75ms, fracRes: 0.6021, norm(attn): 0.1182, norm(output): 0.2500, norm(x): 0.9034, norm(y): 1.0079, norm:1.3706, tok/sec: 102420.36, flops:89.69, batch-reuse:1
@ 3918 train 5.2136 , allloss: 5.2336, dt: 1253.78ms, fracRes: 0.6022, norm(attn): 0.1177, norm(output): 0.2500, norm(x): 0.9075, norm(y): 1.0079, norm:1.3469, tok/sec: 104541.16, flops:91.55, batch-reuse:1
@ 3919 train 5.1876 , allloss: 5.2058, dt: 1276.33ms, fracRes: 0.6011, norm(attn): 0.1177, norm(output): 0.2500, norm(x): 0.9066, norm(y): 1.0080, norm:1.5871, tok/sec: 102694.08, flops:89.93, batch-reuse:1
@ 3920 train 5.1335 , allloss: 5.1519, dt: 1250.80ms, fracRes: 0.6005, norm(attn): 0.1191, norm(output): 0.2520, norm(x): 0.9030, norm(y): 1.0079, norm:1.2344, tok/sec: 104790.36, flops:91.76, batch-reuse:1
@ 3921 train 5.2953 , allloss: 5.3145, dt: 1252.97ms, fracRes: 0.6023, norm(attn): 0.1177, norm(output): 0.2490, norm(x): 0.9028, norm(y): 1.0080, norm:1.3941, tok/sec: 104608.75, flops:91.60, batch-reuse:1
@ 3922 train 5.2154 , allloss: 5.2340, dt: 1261.45ms, fracRes: 0.6023, norm(attn): 0.1177, norm(output): 0.2500, norm(x): 0.9068, norm(y): 1.0080, norm:1.3312, tok/sec: 103905.96, flops:90.99, batch-reuse:1
@ 3923 train 5.1567 , allloss: 5.1749, dt: 1261.93ms, fracRes: 0.6005, norm(attn): 0.1187, norm(output): 0.2500, norm(x): 0.9055, norm(y): 1.0079, norm:1.5644, tok/sec: 103866.38, flops:90.95, batch-reuse:1
@ 3924 train 5.2141 , allloss: 5.2331, dt: 1269.05ms, fracRes: 0.6009, norm(attn): 0.1182, norm(output): 0.2500, norm(x): 0.9028, norm(y): 1.0080, norm:1.2945, tok/sec: 103283.53, flops:90.44, batch-reuse:1
@ 3925 train 5.2523 , allloss: 5.2721, dt: 1257.51ms, fracRes: 0.6005, norm(attn): 0.1201, norm(output): 0.2500, norm(x): 0.9012, norm(y): 1.0080, norm:1.2280, tok/sec: 104231.24, flops:91.27, batch-reuse:1
@ 3926 train 5.1898 , allloss: 5.2089, dt: 1262.39ms, fracRes: 0.6002, norm(attn): 0.1201, norm(output): 0.2500, norm(x): 0.9007, norm(y): 1.0080, norm:1.3309, tok/sec: 103828.50, flops:90.92, batch-reuse:1
@ 3927 train 5.1535 , allloss: 5.1726, dt: 1246.45ms, fracRes: 0.6008, norm(attn): 0.1187, norm(output): 0.2500, norm(x): 0.8977, norm(y): 1.0079, norm:1.2282, tok/sec: 105156.39, flops:92.08, batch-reuse:1
@ 3928 train 5.1380 , allloss: 5.1574, dt: 1274.53ms, fracRes: 0.6001, norm(attn): 0.1196, norm(output): 0.2500, norm(x): 0.8964, norm(y): 1.0079, norm:1.2483, tok/sec: 102839.23, flops:90.05, batch-reuse:1
@ 3929 train 5.2076 , allloss: 5.2278, dt: 1247.02ms, fracRes: 0.6007, norm(attn): 0.1191, norm(output): 0.2500, norm(x): 0.8989, norm(y): 1.0079, norm:1.3068, tok/sec: 105108.58, flops:92.04, batch-reuse:1
@ 3930 train 5.2120 , allloss: 5.2319, dt: 1260.37ms, fracRes: 0.6013, norm(attn): 0.1201, norm(output): 0.2500, norm(x): 0.9012, norm(y): 1.0079, norm:1.2354, tok/sec: 103994.68, flops:91.07, batch-reuse:1
@ 3931 train 5.1010 , allloss: 5.1196, dt: 1284.64ms, fracRes: 0.6009, norm(attn): 0.1182, norm(output): 0.2500, norm(x): 0.9007, norm(y): 1.0080, norm:1.2931, tok/sec: 102029.81, flops:89.35, batch-reuse:1
@ 3932 train 5.1432 , allloss: 5.1625, dt: 1312.36ms, fracRes: 0.6012, norm(attn): 0.1191, norm(output): 0.2500, norm(x): 0.8985, norm(y): 1.0079, norm:1.2288, tok/sec: 99875.19, flops:87.46, batch-reuse:1
@ 3933 train 5.1917 , allloss: 5.2108, dt: 1271.59ms, fracRes: 0.6015, norm(attn): 0.1196, norm(output): 0.2490, norm(x): 0.8979, norm(y): 1.0080, norm:1.1977, tok/sec: 103076.98, flops:90.26, batch-reuse:1
@ 3934 train 5.1920 , allloss: 5.2106, dt: 1307.05ms, fracRes: 0.6006, norm(attn): 0.1201, norm(output): 0.2500, norm(x): 0.8957, norm(y): 1.0079, norm:1.2146, tok/sec: 100280.97, flops:87.81, batch-reuse:1
@ 3935 train 5.1781 , allloss: 5.1969, dt: 1269.96ms, fracRes: 0.6016, norm(attn): 0.1191, norm(output): 0.2500, norm(x): 0.8975, norm(y): 1.0080, norm:1.1302, tok/sec: 103209.59, flops:90.38, batch-reuse:1
@ 3936 train 5.1727 , allloss: 5.1912, dt: 1255.96ms, fracRes: 0.6011, norm(attn): 0.1187, norm(output): 0.2500, norm(x): 0.8995, norm(y): 1.0080, norm:1.1153, tok/sec: 104360.07, flops:91.39, batch-reuse:1
@ 3937 train 5.2166 , allloss: 5.2359, dt: 1276.91ms, fracRes: 0.6006, norm(attn): 0.1182, norm(output): 0.2500, norm(x): 0.8937, norm(y): 1.0080, norm:1.2368, tok/sec: 102647.74, flops:89.89, batch-reuse:1
@ 3938 train 5.1090 , allloss: 5.1279, dt: 1254.83ms, fracRes: 0.5996, norm(attn): 0.1196, norm(output): 0.2500, norm(x): 0.8920, norm(y): 1.0080, norm:1.4063, tok/sec: 104454.28, flops:91.47, batch-reuse:1
@ 3939 train 5.2103 , allloss: 5.2310, dt: 1277.45ms, fracRes: 0.6016, norm(attn): 0.1201, norm(output): 0.2500, norm(x): 0.8915, norm(y): 1.0079, norm:1.2708, tok/sec: 102604.42, flops:89.85, batch-reuse:1
@ 3940 train 5.1069 , allloss: 5.1253, dt: 1256.60ms, fracRes: 0.6012, norm(attn): 0.1187, norm(output): 0.2500, norm(x): 0.8969, norm(y): 1.0080, norm:1.2926, tok/sec: 104307.11, flops:91.34, batch-reuse:1
@ 3941 train 5.1687 , allloss: 5.1879, dt: 1279.78ms, fracRes: 0.6012, norm(attn): 0.1196, norm(output): 0.2500, norm(x): 0.8973, norm(y): 1.0080, norm:1.4867, tok/sec: 102417.76, flops:89.69, batch-reuse:1
@ 3942 train 5.0922 , allloss: 5.1119, dt: 1264.41ms, fracRes: 0.6002, norm(attn): 0.1211, norm(output): 0.2500, norm(x): 0.8918, norm(y): 1.0081, norm:1.1726, tok/sec: 103662.32, flops:90.78, batch-reuse:1
@ 3943 train 5.1680 , allloss: 5.1880, dt: 1263.65ms, fracRes: 0.6003, norm(attn): 0.1201, norm(output): 0.2490, norm(x): 0.8920, norm(y): 1.0080, norm:1.6146, tok/sec: 103724.81, flops:90.83, batch-reuse:1
@ 3944 train 5.1088 , allloss: 5.1295, dt: 1272.64ms, fracRes: 0.6001, norm(attn): 0.1206, norm(output): 0.2490, norm(x): 0.8889, norm(y): 1.0079, norm:1.2374, tok/sec: 102992.07, flops:90.19, batch-reuse:1
@ 3945 train 5.2244 , allloss: 5.2436, dt: 1267.16ms, fracRes: 0.6011, norm(attn): 0.1182, norm(output): 0.2490, norm(x): 0.8923, norm(y): 1.0079, norm:1.2056, tok/sec: 103437.32, flops:90.58, batch-reuse:1
@ 3946 train 5.1384 , allloss: 5.1574, dt: 1248.79ms, fracRes: 0.6010, norm(attn): 0.1182, norm(output): 0.2490, norm(x): 0.8942, norm(y): 1.0081, norm:1.2970, tok/sec: 104959.40, flops:91.91, batch-reuse:1
@ 3947 train 5.1459 , allloss: 5.1647, dt: 1260.79ms, fracRes: 0.6011, norm(attn): 0.1187, norm(output): 0.2500, norm(x): 0.8964, norm(y): 1.0080, norm:1.2884, tok/sec: 103960.19, flops:91.04, batch-reuse:1
@ 3948 train 5.1491 , allloss: 5.1685, dt: 1273.59ms, fracRes: 0.6010, norm(attn): 0.1196, norm(output): 0.2500, norm(x): 0.8934, norm(y): 1.0080, norm:1.1912, tok/sec: 102915.30, flops:90.12, batch-reuse:1
@ 3949 train 5.1349 , allloss: 5.1550, dt: 1286.61ms, fracRes: 0.6010, norm(attn): 0.1201, norm(output): 0.2500, norm(x): 0.8946, norm(y): 1.0080, norm:1.3929, tok/sec: 101873.85, flops:89.21, batch-reuse:1
@ 3950 train 5.1621 , allloss: 5.1815, dt: 1288.48ms, fracRes: 0.6009, norm(attn): 0.1206, norm(output): 0.2500, norm(x): 0.8979, norm(y): 1.0080, norm:1.3140, tok/sec: 101726.25, flops:89.08, batch-reuse:1
@ 3951 train 5.1127 , allloss: 5.1334, dt: 1287.24ms, fracRes: 0.6009, norm(attn): 0.1187, norm(output): 0.2500, norm(x): 0.8994, norm(y): 1.0081, norm:1.2816, tok/sec: 101823.72, flops:89.17, batch-reuse:1
@ 3952 train 5.1621 , allloss: 5.1815, dt: 1259.62ms, fracRes: 0.6012, norm(attn): 0.1196, norm(output): 0.2500, norm(x): 0.8975, norm(y): 1.0080, norm:1.1512, tok/sec: 104056.90, flops:91.12, batch-reuse:1
@ 3953 train 5.3157 , allloss: 5.3353, dt: 1291.97ms, fracRes: 0.6020, norm(attn): 0.1201, norm(output): 0.2490, norm(x): 0.8957, norm(y): 1.0079, norm:1.4024, tok/sec: 101451.66, flops:88.84, batch-reuse:1
@ 3954 train 5.1517 , allloss: 5.1702, dt: 1244.55ms, fracRes: 0.6009, norm(attn): 0.1191, norm(output): 0.2500, norm(x): 0.8951, norm(y): 1.0080, norm:1.2748, tok/sec: 105316.72, flops:92.22, batch-reuse:1
@ 3955 train 5.1233 , allloss: 5.1413, dt: 1247.81ms, fracRes: 0.6005, norm(attn): 0.1191, norm(output): 0.2500, norm(x): 0.8971, norm(y): 1.0080, norm:1.3475, tok/sec: 105041.76, flops:91.98, batch-reuse:1
@ 3956 train 5.2318 , allloss: 5.2512, dt: 1258.30ms, fracRes: 0.6003, norm(attn): 0.1191, norm(output): 0.2500, norm(x): 0.8921, norm(y): 1.0080, norm:1.4118, tok/sec: 104165.89, flops:91.22, batch-reuse:1
@ 3957 train 5.1727 , allloss: 5.1926, dt: 1260.17ms, fracRes: 0.5995, norm(attn): 0.1187, norm(output): 0.2500, norm(x): 0.8915, norm(y): 1.0080, norm:1.4472, tok/sec: 104010.97, flops:91.08, batch-reuse:1
@ 3958 train 5.1479 , allloss: 5.1672, dt: 1260.68ms, fracRes: 0.6001, norm(attn): 0.1201, norm(output): 0.2500, norm(x): 0.8900, norm(y): 1.0079, norm:1.5651, tok/sec: 103969.43, flops:91.04, batch-reuse:1
@ 3959 train 5.2044 , allloss: 5.2247, dt: 1265.11ms, fracRes: 0.6028, norm(attn): 0.1172, norm(output): 0.2480, norm(x): 0.8920, norm(y): 1.0079, norm:1.3234, tok/sec: 103604.95, flops:90.73, batch-reuse:1
@ 3960 train 5.1087 , allloss: 5.1278, dt: 1283.19ms, fracRes: 0.6021, norm(attn): 0.1172, norm(output): 0.2500, norm(x): 0.8953, norm(y): 1.0080, norm:1.4960, tok/sec: 102145.51, flops:89.45, batch-reuse:1
@ 3961 train 5.1097 , allloss: 5.1286, dt: 1265.05ms, fracRes: 0.6014, norm(attn): 0.1177, norm(output): 0.2490, norm(x): 0.8944, norm(y): 1.0080, norm:1.3507, tok/sec: 103610.51, flops:90.73, batch-reuse:1
@ 3962 train 5.1879 , allloss: 5.2072, dt: 1286.45ms, fracRes: 0.6001, norm(attn): 0.1196, norm(output): 0.2500, norm(x): 0.8944, norm(y): 1.0080, norm:1.3030, tok/sec: 101886.27, flops:89.22, batch-reuse:1
@ 3963 train 5.0982 , allloss: 5.1181, dt: 1257.44ms, fracRes: 0.5999, norm(attn): 0.1187, norm(output): 0.2490, norm(x): 0.8952, norm(y): 1.0081, norm:1.2407, tok/sec: 104237.09, flops:91.28, batch-reuse:1
@ 3964 train 5.1170 , allloss: 5.1361, dt: 1251.21ms, fracRes: 0.6010, norm(attn): 0.1187, norm(output): 0.2500, norm(x): 0.8962, norm(y): 1.0080, norm:1.3472, tok/sec: 104755.88, flops:91.73, batch-reuse:1
@ 3965 train 5.1541 , allloss: 5.1734, dt: 1262.19ms, fracRes: 0.6027, norm(attn): 0.1177, norm(output): 0.2490, norm(x): 0.8982, norm(y): 1.0081, norm:1.3071, tok/sec: 103845.21, flops:90.94, batch-reuse:1
@ 3966 train 5.1961 , allloss: 5.2155, dt: 1264.63ms, fracRes: 0.6025, norm(attn): 0.1177, norm(output): 0.2490, norm(x): 0.8997, norm(y): 1.0080, norm:1.3356, tok/sec: 103644.91, flops:90.76, batch-reuse:1
@ 3967 train 5.1796 , allloss: 5.1986, dt: 1279.42ms, fracRes: 0.6014, norm(attn): 0.1201, norm(output): 0.2490, norm(x): 0.8956, norm(y): 1.0079, norm:1.5120, tok/sec: 102446.20, flops:89.71, batch-reuse:1
@ 3968 train 5.1320 , allloss: 5.1510, dt: 1259.00ms, fracRes: 0.6009, norm(attn): 0.1191, norm(output): 0.2500, norm(x): 0.8933, norm(y): 1.0079, norm:1.4893, tok/sec: 104108.16, flops:91.17, batch-reuse:1
@ 3969 train 5.2085 , allloss: 5.2272, dt: 1261.48ms, fracRes: 0.6015, norm(attn): 0.1187, norm(output): 0.2490, norm(x): 0.8940, norm(y): 1.0081, norm:1.1895, tok/sec: 103903.11, flops:90.99, batch-reuse:1
@ 3970 train 5.1279 , allloss: 5.1475, dt: 1271.79ms, fracRes: 0.6007, norm(attn): 0.1187, norm(output): 0.2490, norm(x): 0.8913, norm(y): 1.0081, norm:1.2653, tok/sec: 103061.13, flops:90.25, batch-reuse:1
@ 3971 train 5.0956 , allloss: 5.1153, dt: 1280.38ms, fracRes: 0.6001, norm(attn): 0.1196, norm(output): 0.2490, norm(x): 0.8875, norm(y): 1.0079, norm:1.4218, tok/sec: 102369.28, flops:89.64, batch-reuse:1
@ 3972 train 5.2565 , allloss: 5.2775, dt: 1258.39ms, fracRes: 0.6013, norm(attn): 0.1191, norm(output): 0.2480, norm(x): 0.8904, norm(y): 1.0078, norm:1.4869, tok/sec: 104158.87, flops:91.21, batch-reuse:1
@ 3973 train 5.0912 , allloss: 5.1108, dt: 1279.21ms, fracRes: 0.6004, norm(attn): 0.1191, norm(output): 0.2500, norm(x): 0.8904, norm(y): 1.0079, norm:1.3413, tok/sec: 102463.37, flops:89.73, batch-reuse:1
@ 3974 train 5.1679 , allloss: 5.1867, dt: 1254.92ms, fracRes: 0.6004, norm(attn): 0.1191, norm(output): 0.2500, norm(x): 0.8891, norm(y): 1.0080, norm:1.3120, tok/sec: 104446.48, flops:91.46, batch-reuse:1
@ 3975 train 5.0624 , allloss: 5.0814, dt: 1272.81ms, fracRes: 0.6002, norm(attn): 0.1196, norm(output): 0.2490, norm(x): 0.8895, norm(y): 1.0080, norm:1.2173, tok/sec: 102978.06, flops:90.18, batch-reuse:1
@ 3976 train 5.1601 , allloss: 5.1789, dt: 1295.67ms, fracRes: 0.6007, norm(attn): 0.1177, norm(output): 0.2490, norm(x): 0.8909, norm(y): 1.0081, norm:1.4625, tok/sec: 101161.80, flops:88.59, batch-reuse:1
@ 3977 train 4.8767 , allloss: 4.9008, dt: 1292.13ms, fracRes: 0.6014, norm(attn): 0.1172, norm(output): 0.2480, norm(x): 0.8882, norm(y): 1.0079, norm:1.3308, tok/sec: 101438.82, flops:88.83, batch-reuse:1
@ 3978 train 5.1140 , allloss: 5.1332, dt: 1275.38ms, fracRes: 0.6006, norm(attn): 0.1177, norm(output): 0.2490, norm(x): 0.8873, norm(y): 1.0081, norm:1.2607, tok/sec: 102770.72, flops:89.99, batch-reuse:1
@ 3979 train 5.1767 , allloss: 5.1969, dt: 1251.84ms, fracRes: 0.6007, norm(attn): 0.1187, norm(output): 0.2490, norm(x): 0.8884, norm(y): 1.0081, norm:1.5368, tok/sec: 104703.53, flops:91.69, batch-reuse:1
@ 3980 train 5.1182 , allloss: 5.1385, dt: 1273.06ms, fracRes: 0.6014, norm(attn): 0.1182, norm(output): 0.2471, norm(x): 0.8865, norm(y): 1.0079, norm:1.3680, tok/sec: 102958.16, flops:90.16, batch-reuse:1
@ 3981 train 5.1491 , allloss: 5.1682, dt: 1279.84ms, fracRes: 0.6009, norm(attn): 0.1177, norm(output): 0.2490, norm(x): 0.8862, norm(y): 1.0080, norm:1.4015, tok/sec: 102412.86, flops:89.68, batch-reuse:1
@ 3982 train 5.1187 , allloss: 5.1374, dt: 1292.60ms, fracRes: 0.6012, norm(attn): 0.1177, norm(output): 0.2480, norm(x): 0.8866, norm(y): 1.0081, norm:1.2110, tok/sec: 101401.44, flops:88.80, batch-reuse:1
@ 3983 train 5.1658 , allloss: 5.1847, dt: 1270.07ms, fracRes: 0.6008, norm(attn): 0.1172, norm(output): 0.2480, norm(x): 0.8829, norm(y): 1.0080, norm:1.3078, tok/sec: 103200.37, flops:90.37, batch-reuse:1
@ 3984 train 5.0919 , allloss: 5.1105, dt: 1290.19ms, fracRes: 0.5995, norm(attn): 0.1187, norm(output): 0.2471, norm(x): 0.8839, norm(y): 1.0081, norm:1.4078, tok/sec: 101590.88, flops:88.96, batch-reuse:1
@ 3985 train 5.1267 , allloss: 5.1462, dt: 1252.35ms, fracRes: 0.5995, norm(attn): 0.1191, norm(output): 0.2490, norm(x): 0.8863, norm(y): 1.0081, norm:1.6044, tok/sec: 104661.25, flops:91.65, batch-reuse:1
@ 3986 train 5.0727 , allloss: 5.0931, dt: 1261.47ms, fracRes: 0.6011, norm(attn): 0.1191, norm(output): 0.2471, norm(x): 0.8841, norm(y): 1.0081, norm:1.3136, tok/sec: 103904.23, flops:90.99, batch-reuse:1
@ 3987 train 4.9182 , allloss: 4.9374, dt: 1272.09ms, fracRes: 0.6005, norm(attn): 0.1201, norm(output): 0.2490, norm(x): 0.8871, norm(y): 1.0081, norm:1.1117, tok/sec: 103036.41, flops:90.23, batch-reuse:1
@ 3988 train 5.0412 , allloss: 5.0609, dt: 1254.54ms, fracRes: 0.6009, norm(attn): 0.1201, norm(output): 0.2480, norm(x): 0.8874, norm(y): 1.0081, norm:1.4800, tok/sec: 104478.04, flops:91.49, batch-reuse:1
@ 3989 train 5.1168 , allloss: 5.1363, dt: 1267.76ms, fracRes: 0.6014, norm(attn): 0.1182, norm(output): 0.2490, norm(x): 0.8860, norm(y): 1.0081, norm:1.7654, tok/sec: 103388.26, flops:90.54, batch-reuse:1
@ 3990 train 5.0656 , allloss: 5.0857, dt: 1263.17ms, fracRes: 0.6012, norm(attn): 0.1191, norm(output): 0.2480, norm(x): 0.8827, norm(y): 1.0081, norm:1.1182, tok/sec: 103763.99, flops:90.86, batch-reuse:1
@ 3991 train 5.0790 , allloss: 5.0992, dt: 1294.27ms, fracRes: 0.6011, norm(attn): 0.1182, norm(output): 0.2490, norm(x): 0.8817, norm(y): 1.0081, norm:1.4935, tok/sec: 101271.08, flops:88.68, batch-reuse:1
@ 3992 train 5.0848 , allloss: 5.1039, dt: 1264.26ms, fracRes: 0.6008, norm(attn): 0.1182, norm(output): 0.2480, norm(x): 0.8816, norm(y): 1.0080, norm:1.3033, tok/sec: 103675.01, flops:90.79, batch-reuse:1
@ 3993 train 5.0577 , allloss: 5.0770, dt: 1267.55ms, fracRes: 0.6001, norm(attn): 0.1196, norm(output): 0.2490, norm(x): 0.8818, norm(y): 1.0080, norm:1.4058, tok/sec: 103405.61, flops:90.55, batch-reuse:1
@ 3994 train 5.0852 , allloss: 5.1042, dt: 1278.30ms, fracRes: 0.5999, norm(attn): 0.1196, norm(output): 0.2490, norm(x): 0.8844, norm(y): 1.0081, norm:1.3262, tok/sec: 102536.52, flops:89.79, batch-reuse:1
@ 3995 train 5.0499 , allloss: 5.0690, dt: 1276.99ms, fracRes: 0.5996, norm(attn): 0.1196, norm(output): 0.2490, norm(x): 0.8835, norm(y): 1.0081, norm:1.3335, tok/sec: 102641.18, flops:89.88, batch-reuse:1
@ 3996 train 5.1178 , allloss: 5.1371, dt: 1277.26ms, fracRes: 0.5998, norm(attn): 0.1226, norm(output): 0.2480, norm(x): 0.8823, norm(y): 1.0081, norm:1.3796, tok/sec: 102619.97, flops:89.86, batch-reuse:1
@ 3997 train 5.0574 , allloss: 5.0769, dt: 1253.58ms, fracRes: 0.6001, norm(attn): 0.1196, norm(output): 0.2490, norm(x): 0.8836, norm(y): 1.0081, norm:1.2787, tok/sec: 104558.00, flops:91.56, batch-reuse:1
@ 3998 train 5.0583 , allloss: 5.0789, dt: 1264.21ms, fracRes: 0.6009, norm(attn): 0.1187, norm(output): 0.2490, norm(x): 0.8830, norm(y): 1.0081, norm:1.2229, tok/sec: 103678.74, flops:90.79, batch-reuse:1
@ 3999 train 5.1209 , allloss: 5.1412, dt: 1235.54ms, fracRes: 0.6012, norm(attn): 0.1177, norm(output): 0.2471, norm(x): 0.8832, norm(y): 1.0082, norm:1.2584, tok/sec: 106085.19, flops:92.90, batch-reuse:1
@ 4000 val 5.1090
@ 4000 train 5.0804 , allloss: 5.0997, dt: 1844.34ms, fracRes: 0.6010, norm(attn): 0.1182, norm(output): 0.2471, norm(x): 0.8803, norm(y): 1.0082, norm:1.2797, tok/sec: 71067.33, flops:62.23, batch-reuse:1
@ 4001 train 5.0223 , allloss: 5.0421, dt: 1278.50ms, fracRes: 0.6010, norm(attn): 0.1177, norm(output): 0.2461, norm(x): 0.8815, norm(y): 1.0082, norm:1.3774, tok/sec: 102520.54, flops:89.78, batch-reuse:1
@ 4002 train 5.0431 , allloss: 5.0619, dt: 1266.94ms, fracRes: 0.5999, norm(attn): 0.1187, norm(output): 0.2480, norm(x): 0.8819, norm(y): 1.0082, norm:1.3022, tok/sec: 103455.19, flops:90.59, batch-reuse:1
@ 4003 train 5.1469 , allloss: 5.1662, dt: 1264.59ms, fracRes: 0.6005, norm(attn): 0.1177, norm(output): 0.2471, norm(x): 0.8801, norm(y): 1.0081, norm:1.4748, tok/sec: 103647.74, flops:90.76, batch-reuse:1
@ 4004 train 5.0417 , allloss: 5.0614, dt: 1297.59ms, fracRes: 0.5998, norm(attn): 0.1187, norm(output): 0.2480, norm(x): 0.8782, norm(y): 1.0081, norm:1.2201, tok/sec: 101011.69, flops:88.45, batch-reuse:1
@ 4005 train 5.4291 , allloss: 5.4504, dt: 1255.82ms, fracRes: 0.6038, norm(attn): 0.1177, norm(output): 0.2441, norm(x): 0.8797, norm(y): 1.0080, norm:2.0563, tok/sec: 104371.39, flops:91.40, batch-reuse:1
@ 4006 train 5.1499 , allloss: 5.1690, dt: 1251.08ms, fracRes: 0.6001, norm(attn): 0.1191, norm(output): 0.2490, norm(x): 0.8818, norm(y): 1.0079, norm:1.7655, tok/sec: 104767.02, flops:91.74, batch-reuse:1
@ 4007 train 5.1290 , allloss: 5.1483, dt: 1271.03ms, fracRes: 0.6013, norm(attn): 0.1191, norm(output): 0.2471, norm(x): 0.8816, norm(y): 1.0081, norm:1.5502, tok/sec: 103122.28, flops:90.30, batch-reuse:1
@ 4008 train 5.1266 , allloss: 5.1472, dt: 1287.57ms, fracRes: 0.6014, norm(attn): 0.1182, norm(output): 0.2471, norm(x): 0.8807, norm(y): 1.0081, norm:1.4005, tok/sec: 101798.11, flops:89.14, batch-reuse:1
@ 4009 train 5.0642 , allloss: 5.0842, dt: 1281.72ms, fracRes: 0.6006, norm(attn): 0.1191, norm(output): 0.2480, norm(x): 0.8788, norm(y): 1.0081, norm:1.2510, tok/sec: 102262.91, flops:89.55, batch-reuse:1
@ 4010 train 5.1592 , allloss: 5.1788, dt: 1246.72ms, fracRes: 0.6019, norm(attn): 0.1172, norm(output): 0.2461, norm(x): 0.8793, norm(y): 1.0081, norm:1.6072, tok/sec: 105133.48, flops:92.06, batch-reuse:1
@ 4011 train 5.0995 , allloss: 5.1200, dt: 1263.04ms, fracRes: 0.6024, norm(attn): 0.1177, norm(output): 0.2471, norm(x): 0.8808, norm(y): 1.0081, norm:1.7950, tok/sec: 103775.15, flops:90.87, batch-reuse:1
@ 4012 train 5.1156 , allloss: 5.1347, dt: 1253.46ms, fracRes: 0.6022, norm(attn): 0.1182, norm(output): 0.2480, norm(x): 0.8817, norm(y): 1.0081, norm:1.4722, tok/sec: 104568.50, flops:91.57, batch-reuse:1
@ 4013 train 5.1272 , allloss: 5.1460, dt: 1278.02ms, fracRes: 0.6011, norm(attn): 0.1187, norm(output): 0.2490, norm(x): 0.8833, norm(y): 1.0081, norm:1.4251, tok/sec: 102558.60, flops:89.81, batch-reuse:1
@ 4014 train 5.2220 , allloss: 5.2429, dt: 1267.59ms, fracRes: 0.6007, norm(attn): 0.1201, norm(output): 0.2480, norm(x): 0.8832, norm(y): 1.0079, norm:1.5350, tok/sec: 103402.52, flops:90.55, batch-reuse:1
@ 4015 train 5.0849 , allloss: 5.1052, dt: 1266.25ms, fracRes: 0.5998, norm(attn): 0.1216, norm(output): 0.2490, norm(x): 0.8850, norm(y): 1.0081, norm:1.4941, tok/sec: 103511.56, flops:90.64, batch-reuse:1
@ 4016 train 5.1219 , allloss: 5.1434, dt: 1260.09ms, fracRes: 0.5996, norm(attn): 0.1211, norm(output): 0.2490, norm(x): 0.8859, norm(y): 1.0081, norm:1.3946, tok/sec: 104017.94, flops:91.09, batch-reuse:1
@ 4017 train 5.0491 , allloss: 5.0690, dt: 1277.64ms, fracRes: 0.6003, norm(attn): 0.1191, norm(output): 0.2490, norm(x): 0.8867, norm(y): 1.0081, norm:1.1122, tok/sec: 102589.18, flops:89.84, batch-reuse:1
@ 4018 train 5.0263 , allloss: 5.0441, dt: 1265.27ms, fracRes: 0.6011, norm(attn): 0.1177, norm(output): 0.2490, norm(x): 0.8919, norm(y): 1.0082, norm:1.4243, tok/sec: 103591.90, flops:90.71, batch-reuse:1
@ 4019 train 5.2291 , allloss: 5.2474, dt: 1276.57ms, fracRes: 0.6031, norm(attn): 0.1177, norm(output): 0.2490, norm(x): 0.8915, norm(y): 1.0082, norm:1.3435, tok/sec: 102675.15, flops:89.91, batch-reuse:1
@ 4020 train 5.0938 , allloss: 5.1132, dt: 1280.81ms, fracRes: 0.6028, norm(attn): 0.1177, norm(output): 0.2471, norm(x): 0.8911, norm(y): 1.0082, norm:1.5007, tok/sec: 102335.46, flops:89.61, batch-reuse:1
@ 4021 train 5.0884 , allloss: 5.1074, dt: 1292.04ms, fracRes: 0.6017, norm(attn): 0.1187, norm(output): 0.2461, norm(x): 0.8859, norm(y): 1.0081, norm:1.1548, tok/sec: 101446.10, flops:88.83, batch-reuse:1
@ 4022 train 4.9394 , allloss: 4.9595, dt: 1266.93ms, fracRes: 0.5997, norm(attn): 0.1211, norm(output): 0.2471, norm(x): 0.8764, norm(y): 1.0082, norm:1.3314, tok/sec: 103456.13, flops:90.60, batch-reuse:1
@ 4023 train 5.1882 , allloss: 5.2080, dt: 1312.07ms, fracRes: 0.6000, norm(attn): 0.1191, norm(output): 0.2490, norm(x): 0.8827, norm(y): 1.0081, norm:1.1267, tok/sec: 99897.48, flops:87.48, batch-reuse:1
@ 4024 train 5.1478 , allloss: 5.1674, dt: 1251.22ms, fracRes: 0.6007, norm(attn): 0.1182, norm(output): 0.2471, norm(x): 0.8825, norm(y): 1.0081, norm:1.3177, tok/sec: 104755.12, flops:91.73, batch-reuse:1
@ 4025 train 5.0525 , allloss: 5.0717, dt: 1277.81ms, fracRes: 0.6007, norm(attn): 0.1187, norm(output): 0.2480, norm(x): 0.8819, norm(y): 1.0081, norm:1.1944, tok/sec: 102575.13, flops:89.82, batch-reuse:1
@ 4026 train 4.9931 , allloss: 5.0129, dt: 1262.53ms, fracRes: 0.6014, norm(attn): 0.1182, norm(output): 0.2480, norm(x): 0.8808, norm(y): 1.0082, norm:1.3947, tok/sec: 103817.07, flops:90.91, batch-reuse:1
@ 4027 train 5.0782 , allloss: 5.0971, dt: 1264.72ms, fracRes: 0.6014, norm(attn): 0.1187, norm(output): 0.2480, norm(x): 0.8810, norm(y): 1.0081, norm:1.3500, tok/sec: 103636.84, flops:90.75, batch-reuse:1
@ 4028 train 5.0997 , allloss: 5.1196, dt: 1272.15ms, fracRes: 0.6014, norm(attn): 0.1201, norm(output): 0.2471, norm(x): 0.8791, norm(y): 1.0082, norm:1.1119, tok/sec: 103031.70, flops:90.22, batch-reuse:1
@ 4029 train 5.0813 , allloss: 5.1007, dt: 1264.91ms, fracRes: 0.6011, norm(attn): 0.1216, norm(output): 0.2480, norm(x): 0.8806, norm(y): 1.0081, norm:1.1396, tok/sec: 103621.70, flops:90.74, batch-reuse:1
@ 4030 train 4.9606 , allloss: 4.9804, dt: 1279.97ms, fracRes: 0.6016, norm(attn): 0.1187, norm(output): 0.2461, norm(x): 0.8792, norm(y): 1.0082, norm:1.1724, tok/sec: 102402.50, flops:89.67, batch-reuse:1
@ 4031 train 4.9733 , allloss: 4.9923, dt: 1253.08ms, fracRes: 0.6012, norm(attn): 0.1187, norm(output): 0.2471, norm(x): 0.8821, norm(y): 1.0082, norm:1.4149, tok/sec: 104599.89, flops:91.60, batch-reuse:1
@ 4032 train 4.9706 , allloss: 4.9899, dt: 1261.48ms, fracRes: 0.6014, norm(attn): 0.1177, norm(output): 0.2461, norm(x): 0.8799, norm(y): 1.0082, norm:1.3900, tok/sec: 103903.76, flops:90.99, batch-reuse:1
@ 4033 train 5.0264 , allloss: 5.0457, dt: 1284.68ms, fracRes: 0.6006, norm(attn): 0.1182, norm(output): 0.2471, norm(x): 0.8805, norm(y): 1.0082, norm:1.2740, tok/sec: 102026.86, flops:89.34, batch-reuse:1
@ 4034 train 5.0427 , allloss: 5.0629, dt: 1261.81ms, fracRes: 0.6007, norm(attn): 0.1187, norm(output): 0.2451, norm(x): 0.8770, norm(y): 1.0081, norm:1.2844, tok/sec: 103875.86, flops:90.96, batch-reuse:1
@ 4035 train 4.9985 , allloss: 5.0183, dt: 1273.20ms, fracRes: 0.5994, norm(attn): 0.1182, norm(output): 0.2480, norm(x): 0.8796, norm(y): 1.0082, norm:1.4132, tok/sec: 102946.56, flops:90.15, batch-reuse:1
@ 4036 train 4.9274 , allloss: 4.9471, dt: 1262.86ms, fracRes: 0.5998, norm(attn): 0.1201, norm(output): 0.2471, norm(x): 0.8783, norm(y): 1.0082, norm:1.2282, tok/sec: 103789.86, flops:90.89, batch-reuse:1
@ 4037 train 4.9357 , allloss: 4.9549, dt: 1265.22ms, fracRes: 0.6001, norm(attn): 0.1191, norm(output): 0.2480, norm(x): 0.8789, norm(y): 1.0081, norm:1.2498, tok/sec: 103595.81, flops:90.72, batch-reuse:1
@ 4038 train 4.9574 , allloss: 4.9772, dt: 1286.07ms, fracRes: 0.6019, norm(attn): 0.1191, norm(output): 0.2471, norm(x): 0.8808, norm(y): 1.0081, norm:1.2959, tok/sec: 101916.85, flops:89.25, batch-reuse:1
@ 4039 train 4.9230 , allloss: 4.9424, dt: 1254.16ms, fracRes: 0.6010, norm(attn): 0.1201, norm(output): 0.2471, norm(x): 0.8798, norm(y): 1.0081, norm:1.3909, tok/sec: 104509.46, flops:91.52, batch-reuse:1
@ 4040 train 4.9926 , allloss: 5.0120, dt: 1275.06ms, fracRes: 0.6016, norm(attn): 0.1182, norm(output): 0.2461, norm(x): 0.8813, norm(y): 1.0082, norm:1.1089, tok/sec: 102797.01, flops:90.02, batch-reuse:1
@ 4041 train 4.8919 , allloss: 4.9115, dt: 1271.13ms, fracRes: 0.6012, norm(attn): 0.1177, norm(output): 0.2451, norm(x): 0.8801, norm(y): 1.0083, norm:1.2747, tok/sec: 103114.22, flops:90.30, batch-reuse:1
@ 4042 train 4.9678 , allloss: 4.9871, dt: 1270.64ms, fracRes: 0.6007, norm(attn): 0.1187, norm(output): 0.2471, norm(x): 0.8772, norm(y): 1.0082, norm:1.1380, tok/sec: 103154.67, flops:90.33, batch-reuse:1
@ 4043 train 4.9854 , allloss: 5.0040, dt: 1263.03ms, fracRes: 0.6002, norm(attn): 0.1187, norm(output): 0.2441, norm(x): 0.8748, norm(y): 1.0082, norm:1.3041, tok/sec: 103775.93, flops:90.88, batch-reuse:1
@ 4044 train 5.0162 , allloss: 5.0356, dt: 1270.31ms, fracRes: 0.5999, norm(attn): 0.1187, norm(output): 0.2471, norm(x): 0.8737, norm(y): 1.0082, norm:1.3834, tok/sec: 103181.29, flops:90.35, batch-reuse:1
@ 4045 train 4.9625 , allloss: 4.9814, dt: 1272.35ms, fracRes: 0.6002, norm(attn): 0.1201, norm(output): 0.2471, norm(x): 0.8767, norm(y): 1.0082, norm:1.2558, tok/sec: 103015.73, flops:90.21, batch-reuse:1
@ 4046 train 5.0270 , allloss: 5.0469, dt: 1247.12ms, fracRes: 0.6001, norm(attn): 0.1201, norm(output): 0.2480, norm(x): 0.8760, norm(y): 1.0081, norm:1.2659, tok/sec: 105100.10, flops:92.03, batch-reuse:1
@ 4047 train 5.0886 , allloss: 5.1088, dt: 1261.37ms, fracRes: 0.6002, norm(attn): 0.1211, norm(output): 0.2480, norm(x): 0.8769, norm(y): 1.0081, norm:1.5142, tok/sec: 103912.24, flops:90.99, batch-reuse:1
@ 4048 train 5.0292 , allloss: 5.0499, dt: 1254.28ms, fracRes: 0.6008, norm(attn): 0.1201, norm(output): 0.2480, norm(x): 0.8780, norm(y): 1.0081, norm:1.6286, tok/sec: 104500.02, flops:91.51, batch-reuse:1
@ 4049 train 4.9310 , allloss: 4.9516, dt: 1310.91ms, fracRes: 0.6014, norm(attn): 0.1201, norm(output): 0.2441, norm(x): 0.8755, norm(y): 1.0082, norm:1.4362, tok/sec: 99985.18, flops:87.56, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6367, 0.3633, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7188, 0.0972, 0.1836, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2734, 0.1138, 0.2793, 0.3320, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1270, 0.0194, 0.1216, 0.1562, 0.5781, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0869, 0.0209, 0.0209, 0.1611, 0.4648, 0.2461, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0918, 0.0603, 0.0315, 0.0933, 0.4961, 0.1562, 0.0698, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1826, 0.5039, 0.1709, 0.0175, 0.0129, 0.0240, 0.0018, 0.0869, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0972, 0.0337, 0.0525, 0.0791, 0.2305, 0.0664, 0.1729, 0.0703, 0.1982, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1387, 0.1982, 0.2393, 0.0178, 0.0181, 0.0145, 0.0068, 0.1816, 0.0267, 0.1592, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1221, 0.0530, 0.2207, 0.0327, 0.0569, 0.0239, 0.0239, 0.1992, 0.0659, 0.1572, 0.0444, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0271, 0.0154, 0.0088, 0.1367, 0.0510, 0.1328, 0.4453, 0.0432, 0.0972, 0.0195, 0.0194, 0.0033, 0.0000, 0.0000, 0.0000],
        [0.0723, 0.1592, 0.0518, 0.0247, 0.0491, 0.0562, 0.0099, 0.0201, 0.0737, 0.0742, 0.1807, 0.1826, 0.0454, 0.0000, 0.0000],
        [0.0703, 0.0466, 0.0304, 0.0352, 0.1660, 0.0549, 0.0825, 0.0361, 0.1318, 0.0757, 0.0996, 0.0190, 0.0520, 0.0996, 0.0000],
        [0.0986, 0.0830, 0.1230, 0.0679, 0.0364, 0.0165, 0.0105, 0.0645, 0.0146, 0.0874, 0.0417, 0.1826, 0.1245, 0.0181, 0.0305]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0022, -0.0053,  0.0027,  ..., -0.0385,  0.0195,  0.0009],
        [-0.0328,  0.0073, -0.0109,  ...,  0.0015,  0.0052,  0.0151],
        [ 0.0241,  0.0286, -0.0092,  ..., -0.0201,  0.0214, -0.0173],
        ...,
        [ 0.0285,  0.0233,  0.0159,  ..., -0.0363,  0.0131,  0.0165],
        [-0.0486, -0.0005, -0.0370,  ...,  0.0086, -0.0017, -0.0108],
        [-0.0277,  0.0063, -0.0213,  ..., -0.0070, -0.0134, -0.0079]], device='cuda:0', requires_grad=True)
K: tensor([ 1.1484,  0.6406, -0.2930,  0.3398,  0.3457,  0.5234,  0.9141,  0.1152, -0.1484, -0.3086,  0.4512,  0.0684, -0.6016, -0.1426,  0.1138, -0.4727, -0.3145,  0.2402, -0.5664,  0.3320,  0.6875,  0.2793, -0.1670, -0.0859, -0.0050,  0.1133, -0.7930, -0.4609,  0.9141, -0.5039,  1.6953,  0.1123,
         0.3906, -0.8008,  1.0625,  0.7383, -0.7344,  0.3359, -0.5000, -1.1016, -0.0334, -0.1689, -0.6758,  0.9375, -0.3535,  0.1641, -0.3105,  1.5234,  0.4766,  0.1069,  0.4375, -0.0479, -0.9609,  0.6094,  0.5820, -0.3477,  0.0967,  0.1572,  1.0156, -0.1270, -0.7812, -0.4219, -0.4141,  0.1216],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0186, -0.0095, -0.0166,  ...,  0.0097, -0.0035, -0.0212],
        [ 0.0142, -0.0120,  0.0113,  ...,  0.0127,  0.0269,  0.0049],
        [-0.0358,  0.0402,  0.0029,  ..., -0.0236, -0.0248, -0.0481],
        ...,
        [ 0.0163,  0.0141,  0.0222,  ...,  0.0159,  0.0206,  0.0183],
        [ 0.0201, -0.0083,  0.0447,  ...,  0.0312,  0.0078,  0.0342],
        [ 0.0110, -0.0174,  0.0183,  ..., -0.0153,  0.0179, -0.0079]], device='cuda:0', requires_grad=True)
Q: tensor([    -0.5938,     -0.5273,     -1.1016,     -1.3672,      0.1836,     -0.1084,     -2.2500,      0.2988,     -0.0674,      0.5312,     -0.2246,     -0.9805,     -0.4961,     -0.4727,     -0.2441,     -0.3438,     -0.9844,     -0.2578,      0.0359,      0.4375,     -0.1079,     -0.4688,
             0.5078,      0.3086,      0.1162,     -0.2559,     -0.0525,     -0.6562,     -0.7383,      0.9297,     -0.8477,      0.6523,     -0.4961,     -0.4375,     -0.1289,     -0.2520,      1.1406,      0.7109,     -0.4727,      1.5469,      0.8164,     -0.3691,      0.3125,      1.0703,
            -0.3965,     -0.0047,      0.0120,     -0.2324,     -0.3066,      0.2168,     -2.1875,     -0.9727,      0.1108,     -0.8438,     -0.4609,     -1.0469,      0.3633,     -0.8516,     -0.0011,     -0.6758,      1.1250,      0.6328,     -0.1709,      0.3672], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.5586, -0.2676,  0.0820, -1.2266, -0.8906, -0.4863,  0.6094, -1.0625, -0.6641, -1.5547, -0.1592,  0.6602, -1.1406, -0.3945],
        [ 0.0000, -2.0000, -1.3672,  1.9453,  1.8594,  1.7109,  2.8750, -1.1406,  1.5859,  0.0266,  1.0469, -2.1406, -2.2500,  2.7188,  0.8242],
        [ 0.0000, -0.8789,  0.0211,  0.1895, -0.3906, -0.2422, -0.2227, -0.5977, -1.1953, -0.5117,  0.2988,  0.1523, -0.6484, -0.9258, -0.0645],
        [ 0.0000, -1.8750, -0.0410,  0.2100,  1.5156, -0.0618,  0.2256, -0.7031,  1.0234,  0.7969,  0.1270, -1.1953, -1.1406,  1.3906, -0.0840],
        [ 0.0000, -1.4297, -1.4297,  0.6172,  1.6719,  1.0391,  2.8281, -0.3145,  2.0000, -1.0859,  0.6758, -1.9141, -1.5781,  2.0938,  0.8359],
        [ 0.0000, -0.4219, -1.0703,  0.0135,  1.6875,  0.5273, -0.2773, -2.7344,  0.8477,  0.4121,  2.3438, -0.8320, -2.6406,  1.1406,  0.6445],
        [ 0.0000,  1.0156, -0.0674, -2.3594, -2.6562, -2.0312, -4.5938, -0.7422, -2.1875, -0.4551, -0.2051,  1.5938,  0.5703, -2.5469, -0.8398],
        [ 0.0000, -1.0625, -0.6133, -0.2051,  0.8633, -0.3809,  0.5742, -0.3223,  0.7188, -0.0317, -0.0289, -1.1172, -0.5156,  0.3477, -0.3125],
        [ 0.0000,  0.3574,  0.5469, -2.0469, -2.0312, -2.2500, -3.0156,  0.2695, -1.6406,  0.1426, -0.4785,  1.4297,  1.6016, -2.2344, -0.6367],
        [ 0.0000, -0.8359,  0.5938, -1.3125, -0.7656, -1.6328, -1.6328,  0.4883, -0.6133,  0.2520, -1.0156,  0.5508,  0.8984, -1.0469, -0.7852],
        [ 0.0000, -0.5664, -1.1250,  1.6172,  0.6328,  1.5859,  2.7969,  0.4648,  1.2734, -0.3281, -0.3340, -2.1094, -0.2266,  1.7812,  1.2578],
        [ 0.0000,  0.7891, -0.3379, -1.0781, -0.3867, -0.2539, -1.9922, -1.2812,  0.0210,  0.0251,  0.9141,  0.9258, -0.4648, -0.1660,  0.3496],
        [ 0.0000, -0.4121, -0.8359, -0.6875,  0.8633, -0.2471,  0.1592, -0.6680,  0.6328,  0.0718,  0.3516, -1.3047, -0.3008,  0.3516, -0.4277],
        [ 0.0000, -0.1709,  0.2246, -0.3711, -0.9961, -1.7891, -2.2344, -0.4238, -1.9141, -0.1182, -0.8594,  0.6211,  0.2354, -1.6953, -1.1719]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7719],
        [0.7074],
        [0.5012],
        [0.2520],
        [0.2672],
        [0.2476],
        [0.2519],
        [0.1557],
        [0.1435],
        [0.0893],
        [0.0547],
        [0.0680],
        [0.0644],
        [0.0758]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9844,     0.0173,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8633,     0.0732,     0.0654,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9102,     0.0410,     0.0376,     0.0111,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6328,     0.0776,     0.0234,     0.0845,     0.1807,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5547,     0.0854,     0.0933,     0.0449,     0.0889,     0.1338,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4668,     0.0557,     0.1455,     0.0525,     0.0571,     0.1748,     0.0481,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7305,     0.0400,     0.0200,     0.0050,     0.0889,     0.0356,     0.0275,     0.0510,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5234,     0.0410,     0.0334,     0.0283,     0.0393,     0.1104,     0.0874,     0.0182,     0.1187,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6914,     0.0557,     0.0356,     0.0265,     0.0172,     0.0645,     0.0415,     0.0220,     0.0327,     0.0148,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2871,     0.0227,     0.0015,     0.0063,     0.0078,     0.0403,     0.0369,     0.0017,     0.2500,     0.0009,     0.3457,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7188,     0.0347,     0.0103,     0.0044,     0.0227,     0.0581,     0.0176,     0.0347,     0.0403,     0.0179,     0.0306,     0.0087,     0.0000,     0.0000,     0.0000],
        [    0.6406,     0.0228,     0.0054,     0.0034,     0.0322,     0.0537,     0.0408,     0.0137,     0.1011,     0.0038,     0.0302,     0.0039,     0.0486,     0.0000,     0.0000],
        [    0.2070,     0.0269,     0.0361,     0.0415,     0.0437,     0.1016,     0.1001,     0.0198,     0.0972,     0.0371,     0.1128,     0.0366,     0.0270,     0.1123,     0.0000],
        [    0.2129,     0.0601,     0.0396,     0.0293,     0.0111,     0.0510,     0.0247,     0.0364,     0.0148,     0.1484,     0.0713,     0.1074,     0.0928,     0.0214,     0.0781]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0279, -0.0110, -0.0085,  ..., -0.0231, -0.0278,  0.0297],
        [-0.0071,  0.0103, -0.0084,  ...,  0.0263,  0.0100, -0.0344],
        [ 0.0131,  0.0328,  0.0193,  ...,  0.0148,  0.0171,  0.0063],
        ...,
        [-0.0102,  0.0171,  0.0175,  ...,  0.0352, -0.0195, -0.0046],
        [-0.0117, -0.0066, -0.0005,  ..., -0.0036,  0.0019,  0.0042],
        [ 0.0230,  0.0329,  0.0191,  ...,  0.0063, -0.0290,  0.0204]], device='cuda:0', requires_grad=True)
K: tensor([ 1.9219,  0.1167, -0.8906,  0.1592, -1.2969, -1.0469,  0.3242,  0.5312,  0.5664,  0.0067,  0.7148,  0.6289, -1.1094,  0.6523,  0.6133, -1.4297, -0.0942,  0.3984, -1.0625, -0.2344,  0.8242,  0.9219,  1.0547, -1.5234,  0.4219,  0.1973, -0.5742,  0.7695, -0.1309, -0.4414,  2.0156,  0.5352,
        -1.0391,  0.3672, -1.0547,  0.7227,  0.8945,  0.8359,  0.3203,  1.2656,  1.7969, -0.9180, -0.7695,  0.6680,  0.6406,  0.4688, -0.9414, -1.6797,  0.9609,  0.7422, -1.1484,  1.9609, -0.9648, -0.0903,  0.0923, -0.9570,  1.4062,  0.1245, -0.1553,  1.5156, -0.3008,  1.4453,  1.0938,  0.3086],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0160, -0.0151, -0.0087,  ..., -0.0052,  0.0036, -0.0092],
        [ 0.0176,  0.0088, -0.0534,  ..., -0.0162, -0.0150, -0.0168],
        [ 0.0385,  0.0335,  0.0249,  ..., -0.0130,  0.0317,  0.0179],
        ...,
        [-0.0142, -0.0224,  0.0156,  ...,  0.0231, -0.0009, -0.0374],
        [ 0.0466,  0.0110, -0.0109,  ..., -0.0113,  0.0128, -0.0004],
        [ 0.0162, -0.0250, -0.0192,  ...,  0.0122, -0.0096,  0.0193]], device='cuda:0', requires_grad=True)
Q: tensor([-0.7969,  0.4473,  0.5117, -0.1777,  0.0981,  0.0344,  0.5430,  0.8125,  0.6523,  0.5820,  0.3652, -1.8984,  0.1846, -0.5078,  0.1055,  1.7031,  0.0466,  0.5273, -0.9180, -1.4688,  1.3750, -0.9453,  0.4199,  0.5508, -0.6172, -0.4512,  1.4688,  0.4355, -0.0479, -0.3340, -0.6016, -0.4414,
        -0.1030,  0.5156,  0.8516,  1.0859,  0.6250,  0.2168, -0.1797,  0.1797, -0.9609,  0.0835,  0.3379, -0.0189,  0.2100, -1.3594, -0.0767, -0.9297,  0.4629, -0.3730,  0.6055, -0.1562, -0.6055,  0.1797,  0.2139,  1.5781, -0.4414,  0.7812,  0.5234,  0.4180, -0.4043, -0.7305,  0.2031,  0.0031],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -4.0312, -6.7500, -7.0312, -5.7812, -4.3750, -4.0312, -5.9688, -2.6562, -8.2500, -5.4688, -7.8125, -4.6875, -2.5938, -3.9531],
        [ 0.0000, -2.4688, -2.5781, -3.6719, -3.0000, -2.0156, -2.8438, -1.8750, -2.6562, -1.6953, -2.7969, -2.1875, -0.8750, -2.4375, -1.3281],
        [ 0.0000, -3.0938, -3.1875, -4.4062, -3.5469, -2.9375, -2.9531, -3.5938, -3.0000, -3.6875, -4.6562, -3.4531, -2.6875, -3.1250, -2.1250],
        [ 0.0000, -2.0938, -3.2969, -2.0156, -1.2500, -0.8047, -1.2188, -2.6406,  0.5664, -2.3281,  1.7891, -2.7969, -2.0781,  1.1641, -1.4453],
        [ 0.0000, -1.8672, -1.7812, -2.5156, -1.8281, -1.4219, -1.0703, -1.7266, -1.2891, -1.1484, -3.1719, -1.1484, -1.4609, -1.5234, -1.3750],
        [ 0.0000, -2.1250, -1.1719, -2.1875, -2.1094, -0.9844, -2.2812, -0.9492, -1.5312, -0.2148, -3.2969, -0.4082, -0.1797, -1.8438, -0.5625],
        [ 0.0000, -2.9062, -3.5938, -4.9688, -2.1094, -3.0312, -3.2812, -2.6562, -2.0781, -3.0312, -3.7031, -3.0781, -1.5547, -2.4062, -1.6641],
        [ 0.0000, -2.5469, -2.7500, -2.9219, -2.5938, -1.5547, -1.7891, -3.3594, -1.4844, -3.2031, -1.5312, -3.1562, -2.9062, -1.3203, -1.8828],
        [ 0.0000, -2.5156, -2.9688, -3.2656, -3.6875, -2.3750, -2.8125, -3.4531, -3.0469, -3.8438, -2.4531, -3.5938, -2.3281, -2.5781, -3.1250],
        [ 0.0000, -2.5312, -5.2812, -3.8125, -3.6094, -1.9609, -2.0469, -5.1562, -0.1377, -5.7812,  0.1846, -5.4375, -3.8750,  0.5625, -3.5156],
        [ 0.0000, -3.0312, -4.2500, -5.0938, -3.4531, -2.5156, -3.7188, -3.0312, -2.8750, -3.6875, -3.1562, -4.4062, -1.5312, -2.5938, -2.4375],
        [ 0.0000, -3.3281, -4.7812, -5.2188, -2.9844, -2.4844, -2.7500, -3.8438, -1.8438, -5.1250, -3.0625, -5.0938, -2.5781, -1.6953, -3.5000],
        [ 0.0000, -2.0469, -1.7500, -1.6016, -1.5547, -0.7109, -0.7266, -2.3438, -0.7578, -1.7188, -0.6055, -1.7344, -2.0312, -0.6133, -1.4688],
        [ 0.0000, -1.2656, -1.6875, -1.9844, -2.9531, -1.4297, -2.1562, -1.7734, -2.6719, -0.3594, -1.0938, -0.6875, -0.8320, -2.2969, -1.0078]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8091],
        [0.5863],
        [0.5151],
        [0.3884],
        [0.3662],
        [0.3184],
        [0.3810],
        [0.2628],
        [0.4373],
        [0.2591],
        [0.3667],
        [0.2716],
        [0.1305],
        [0.1781]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0117,  0.0067,  0.0159,  ..., -0.0157, -0.0057, -0.0119],
        [ 0.0266, -0.0423, -0.0289,  ...,  0.0005, -0.0154, -0.0286],
        [ 0.0352, -0.0310,  0.0327,  ..., -0.0069, -0.0167,  0.0082],
        ...,
        [ 0.0373,  0.0065, -0.0258,  ..., -0.0027,  0.0189,  0.0183],
        [ 0.0037,  0.0273, -0.0169,  ..., -0.0166, -0.0376, -0.0198],
        [ 0.0149, -0.0047,  0.0045,  ...,  0.0026, -0.0162,  0.0149]], device='cuda:0', requires_grad=True)
K: tensor([-2.4219, -1.9609, -2.1250, -1.9922, -2.8906,  1.7656, -1.9922,  2.0469, -2.2188, -3.2188,  1.3516, -0.9258, -2.3438, -2.2812, -2.4219,  1.0625,  1.8594,  2.5625, -3.4219,  2.0938,  2.5000,  1.8906, -1.6641, -1.5625,  2.5938,  0.9766, -0.8633, -2.9375,  2.7188,  1.8047,  1.9844,  3.3281,
        -1.7266,  1.6172,  2.3125, -2.0469, -1.8438, -0.2695,  1.5625, -0.2393,  0.5352, -2.0312, -0.7578,  1.5938,  1.4688,  3.2500, -2.1719, -2.4219,  2.0938,  2.3906, -2.3125, -1.7891,  2.3750,  1.7109,  2.9688, -1.7266, -2.0469, -2.9531, -2.5156, -2.2812, -3.6406, -2.1250,  2.7500,  1.2031],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0155,  0.0106,  0.0293,  ..., -0.0140,  0.0406, -0.0058],
        [ 0.0102,  0.0310,  0.0094,  ...,  0.0208,  0.0227, -0.0194],
        [-0.0084, -0.0024,  0.0179,  ..., -0.0180,  0.0483, -0.0208],
        ...,
        [-0.0107, -0.0052,  0.0123,  ..., -0.0284, -0.0047,  0.0009],
        [ 0.0146, -0.0187,  0.0182,  ...,  0.0341,  0.0173, -0.0116],
        [ 0.0326, -0.0276, -0.0239,  ...,  0.0232,  0.0274,  0.0104]], device='cuda:0', requires_grad=True)
Q: tensor([ 2.0156,  1.5312,  0.3125,  0.3340,  1.2656, -0.9609,  1.3125, -1.1641,  2.7656,  1.7188, -1.2812,  0.6289,  1.7578,  1.9453,  2.2969, -1.0781, -0.9023, -2.0781,  3.0625, -0.8203, -1.7422, -0.7500,  0.9844,  0.8789, -1.1719, -1.0234,  1.0156,  1.0547, -1.6953, -1.4688, -2.0156, -1.4609,
         0.6758, -2.3125, -0.7227,  0.6406,  1.8438, -0.1279, -0.6367, -0.1270, -1.8281,  2.1562,  1.1406, -1.2188, -0.5547, -1.6875,  1.8828,  1.4453, -1.1484, -1.7500,  1.8984, -0.1787, -1.9141, -1.2734, -1.9766,  2.2812,  0.8008,  2.2812,  2.2188,  2.3125,  2.5312,  1.3281, -2.5938, -0.3867],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000, -20.1250, -17.0000, -18.6250, -21.7500, -13.8750, -15.5000, -18.2500, -16.0000, -19.1250, -21.2500, -20.0000, -17.5000, -15.7500, -21.6250],
        [  0.0000, -14.2500, -12.1875, -13.2500, -15.4375,  -9.7500, -11.2500, -12.8750, -11.3125, -13.3125, -14.8750, -14.2500, -12.4375, -11.1250, -15.0625],
        [  0.0000, -17.7500, -15.1250, -16.5000, -18.6250, -12.1875, -13.8125, -16.2500, -14.0625, -17.1250, -18.6250, -17.8750, -15.8125, -13.8750, -18.7500],
        [  0.0000, -19.2500, -16.2500, -17.5000, -20.6250, -13.1250, -14.8125, -17.8750, -15.1875, -18.3750, -20.2500, -19.1250, -16.8750, -14.9375, -20.7500],
        [  0.0000, -12.2500, -10.3125, -11.5625, -13.3125,  -8.8750,  -9.6875, -10.9375, -10.2500, -11.7500, -13.1250, -12.1875, -10.9375, -10.0625, -12.3125],
        [  0.0000, -12.5000, -10.7500, -11.8750, -13.8750,  -9.0000, -10.1875, -11.3125, -10.3750, -12.0000, -13.5000, -12.5625, -11.2500, -10.1875, -13.0625],
        [  0.0000, -15.3750, -13.4375, -14.3750, -17.0000, -10.7500, -12.5625, -14.3125, -12.1875, -14.5000, -16.2500, -15.6250, -13.7500, -12.0625, -16.3750],
        [  0.0000, -14.0000, -12.1250, -13.1250, -15.4375, -10.1875, -11.3750, -12.9375, -11.3750, -13.3125, -15.1250, -14.0625, -12.6250, -11.2500, -14.3750],
        [  0.0000, -19.7500, -17.0000, -18.3750, -21.3750, -13.6250, -15.2500, -18.2500, -15.3750, -18.8750, -21.0000, -19.8750, -17.5000, -15.1875, -21.3750],
        [  0.0000, -15.6250, -13.8125, -14.8750, -16.8750, -11.4375, -12.9375, -14.2500, -12.8125, -14.8750, -16.7500, -15.8125, -14.0625, -12.6250, -16.1250],
        [  0.0000, -19.6250, -16.6250, -18.0000, -21.3750, -13.2500, -15.1875, -18.5000, -15.4375, -19.0000, -20.6250, -19.7500, -17.3750, -15.1875, -21.6250],
        [  0.0000, -17.1250, -14.8750, -16.0000, -19.0000, -12.0625, -13.6875, -16.0000, -13.5000, -16.2500, -18.1250, -17.2500, -15.3125, -13.3125, -18.3750],
        [  0.0000, -13.8750, -12.1250, -13.0625, -15.3125, -10.1875, -11.3125, -12.9375, -11.2500, -13.1875, -15.0000, -14.0000, -12.5625, -11.1250, -14.1875],
        [  0.0000, -23.1250, -20.1250, -21.6250, -24.0000, -15.7500, -17.6250, -21.5000, -17.6250, -22.0000, -24.3750, -23.2500, -20.3750, -17.3750, -25.1250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [0.9997],
        [0.9941],
        [0.9990],
        [0.9974],
        [0.9993],
        [1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [0.9990],
        [1.0000]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6250, 0.3750, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1504, 0.3828, 0.4668, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2021, 0.3457, 0.3555, 0.0981, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2402, 0.2363, 0.3398, 0.0369, 0.1465, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3418, 0.0952, 0.1660, 0.0195, 0.0361, 0.3418, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1602, 0.0542, 0.3496, 0.0112, 0.0067, 0.1030, 0.3145, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1118, 0.0398, 0.0938, 0.0071, 0.0134, 0.0981, 0.3457, 0.2910, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1001, 0.0339, 0.0537, 0.0042, 0.0215, 0.1787, 0.2852, 0.2373, 0.0850, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0618, 0.0422, 0.0457, 0.0066, 0.0214, 0.1050, 0.2793, 0.2500, 0.0928, 0.0938, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1099, 0.0212, 0.0728, 0.0023, 0.0046, 0.1094, 0.2266, 0.2715, 0.0229, 0.0713, 0.0879, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0698, 0.0471, 0.0596, 0.0081, 0.0155, 0.0635, 0.1621, 0.1631, 0.0420, 0.0522, 0.2012, 0.1162, 0.0000, 0.0000, 0.0000],
        [0.1377, 0.0227, 0.0474, 0.0025, 0.0058, 0.0537, 0.1299, 0.1338, 0.0267, 0.0415, 0.0913, 0.0693, 0.2373, 0.0000, 0.0000],
        [0.0811, 0.0147, 0.0251, 0.0016, 0.0077, 0.0762, 0.1133, 0.1001, 0.0330, 0.0522, 0.0977, 0.0596, 0.2402, 0.0972, 0.0000],
        [0.0188, 0.0138, 0.0210, 0.0026, 0.0045, 0.0240, 0.0786, 0.0811, 0.0146, 0.0195, 0.0588, 0.0532, 0.1309, 0.0366, 0.4414]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0144,  0.0162,  0.0060,  ..., -0.0277, -0.0013, -0.0455],
        [-0.0277, -0.0138, -0.0136,  ..., -0.0012,  0.0083, -0.0024],
        [-0.0314, -0.0072,  0.0400,  ..., -0.0229, -0.0195, -0.0259],
        ...,
        [-0.0012, -0.0349, -0.0068,  ..., -0.0313, -0.0101, -0.0520],
        [-0.0243, -0.0374, -0.0210,  ..., -0.0068, -0.0011,  0.0144],
        [-0.0140,  0.0216,  0.0236,  ..., -0.0186, -0.0184, -0.0066]], device='cuda:0', requires_grad=True)
K: tensor([-1.7969, -2.0625, -1.2656, -1.2969, -1.6250, -1.4141, -2.1094,  1.8281,  0.4277, -0.7852,  1.4453,  0.5039,  1.7969, -2.3125,  1.9062,  1.6406,  0.2090,  1.1016, -0.6484,  1.7344, -1.6719, -0.7344, -1.7031, -0.2354, -1.0391,  0.5938,  1.3047,  1.8047, -2.6250,  1.3828, -1.6641, -2.9375,
        -2.5156,  0.2656,  0.4727, -0.6055,  3.0938, -1.0781, -1.7422,  1.4766, -2.9375,  1.6797,  1.5312,  2.2812,  0.8945, -1.4375, -1.1797, -1.6875,  2.9062,  2.1719,  0.9961, -1.3516, -0.9375, -2.3281, -2.2344, -0.6602,  2.2500, -2.0625, -1.5625,  1.4844, -1.6484,  1.5938,  0.7383, -2.2031],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0123,  0.0038,  0.0151,  ...,  0.0277, -0.0131, -0.0191],
        [ 0.0335, -0.0240,  0.0179,  ..., -0.0123,  0.0045,  0.0217],
        [-0.0195,  0.0095,  0.0440,  ...,  0.0218,  0.0252, -0.0078],
        ...,
        [ 0.0156, -0.0015, -0.0333,  ..., -0.0097, -0.0027, -0.0074],
        [ 0.0032,  0.0300, -0.0150,  ...,  0.0244,  0.0118, -0.0296],
        [-0.0079,  0.0016, -0.0071,  ...,  0.0082,  0.0018, -0.0023]], device='cuda:0', requires_grad=True)
Q: tensor([-0.7734, -0.0718,  0.1709, -1.4766, -0.3555,  0.7422,  1.2031, -0.9805, -0.5312,  0.6211,  1.1562,  2.3125, -1.1328, -0.2852,  2.2969, -2.8594, -4.0312,  1.3281, -0.2910,  0.1250, -2.1094,  1.3828, -3.3906,  0.8477,  0.9062, -0.9258,  1.6875, -0.3496, -2.3125, -2.6875, -0.5938,  0.3105,
        -3.2500,  3.2969, -1.3281,  2.1406,  0.2520,  0.2637, -0.3887,  1.3828, -0.4414, -0.4258, -0.3047, -0.0913, -1.4062, -1.7344,  0.0864, -1.4922, -0.5625,  1.7266, -0.1157, -1.3984, -0.6680,  0.2910,  2.1562,  1.1797, -1.3828,  1.1875,  0.2441, -1.4219, -1.5703,  2.8750,  0.1396, -1.5469],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -0.5117,     -0.2969,     -2.2969,     -1.7422,     -0.4434,      0.4473,      0.7656,     -0.8359,     -0.7734,      0.3613,      0.2227,      0.9492,     -0.1221,      2.3594],
        [     0.0000,      0.9297,      1.1328,     -0.2500,      0.2676,      1.1250,      2.2188,      2.3281,      1.0938,      0.9883,      2.4219,      1.7109,      2.5156,      1.7109,      3.3750],
        [     0.0000,      0.5352,      0.5664,     -0.7227,     -0.2988,      0.8867,      1.7031,      1.8281,      0.5898,      0.9102,      2.1094,      1.3906,      2.3594,      1.2891,      3.1094],
        [     0.0000,     -0.0161,      0.3496,     -1.8672,     -0.4922,      1.3594,      2.3125,      1.8750,      0.7500,      1.2344,      2.5781,      1.3203,      2.6562,      1.8672,      4.0625],
        [     0.0000,     -1.2812,     -0.7227,     -2.8594,     -2.2500,     -0.0031,      0.5898,      0.2617,     -0.7539,     -0.1387,      0.3281,     -0.1562,      0.9688,      0.1826,      2.0312],
        [     0.0000,     -1.0781,      0.7852,     -2.6562,     -3.1719,     -0.4375,      0.6758,      1.1641,     -2.1875,     -0.3340,     -1.2812,      0.6367,      1.2031,     -1.2734,      3.2344],
        [     0.0000,     -1.0312,     -0.1768,     -2.7656,     -2.1250,     -0.1309,      1.1250,      0.9570,     -0.6797,     -0.4297,      0.6836,      0.2080,      1.2734,      0.2617,      2.6094],
        [     0.0000,     -1.0859,     -0.6250,     -3.1719,     -1.5391,      0.5781,      1.0469,      0.8633,     -0.1631,      0.1484,      1.0469,      0.2988,      1.7031,      0.8984,      2.4688],
        [     0.0000,     -0.3828,     -0.3027,     -2.2344,     -1.0625,      0.5312,      1.5078,      1.3984,      0.4082,      0.4160,      1.8359,      0.5352,      2.0938,      1.3281,      2.6562],
        [     0.0000,     -1.6406,     -0.4121,     -3.8438,     -3.1719,     -0.0004,      0.7227,      0.9102,     -1.5625,     -0.4336,     -0.2197,      0.2910,      1.4531,     -0.3691,      3.2812],
        [     0.0000,     -0.3945,     -0.1621,     -2.1562,     -1.5078,     -0.0991,      0.8359,      0.8438,     -0.5117,     -0.2949,      1.0547,      0.5078,      1.2891,      0.2891,      2.3594],
        [     0.0000,     -1.8047,     -1.0703,     -4.0000,     -3.1719,     -0.9414,     -0.0618,     -0.0294,     -1.6406,     -1.2031,     -0.4141,     -0.6875,      0.5430,     -0.6484,      1.4453],
        [     0.0000,     -1.7031,     -1.1641,     -3.9062,     -2.3594,     -0.0596,      0.3359,      0.2109,     -0.8984,     -0.4395,      0.1865,     -0.3086,      1.0859,      0.1797,      1.7500],
        [     0.0000,     -0.3086,      0.1099,     -1.9922,     -1.4219,      0.2432,      1.4297,      1.4609,     -0.2539,      0.0371,      1.1406,      1.0391,      1.9375,      0.6641,      3.1562]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4755],
        [0.2030],
        [0.2613],
        [0.3283],
        [0.3081],
        [0.2364],
        [0.1456],
        [0.1790],
        [0.1091],
        [0.1805],
        [0.0840],
        [0.1188],
        [0.1281],
        [0.1081]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8242,     0.1748,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0703,     0.0177,     0.9141,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0238,     0.0327,     0.2236,     0.7188,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0118,     0.0178,     0.0112,     0.0090,     0.9492,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0071,     0.0552,     0.0149,     0.0030,     0.2217,     0.6992,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0046,     0.0094,     0.1416,     0.0623,     0.0002,     0.0092,     0.7734,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0059,     0.0062,     0.0031,     0.0239,     0.8750,     0.0106,     0.0015,     0.0723,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0012,     0.0004,     0.0004,     0.0001,     0.0084,     0.0052,     0.0000,     0.9766,     0.0064,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0579,     0.0019,     0.0034,     0.0157,     0.0001,     0.0002,     0.9219,     0.0001,     0.0008,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1465,     0.0005,     0.0020,     0.0011,     0.0045,     0.0020,     0.0013,     0.0645,     0.0113,     0.7539,     0.0131,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.0000,     0.0001,     0.0012,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0295,     0.0025,     0.0013,     0.0146,     0.1875,     0.0022,     0.0100,     0.0029,     0.6992,     0.0036,     0.0410,     0.0037,     0.0030,     0.0000,     0.0000],
        [    0.0005,     0.0001,     0.0000,     0.0000,     0.0013,     0.0009,     0.0000,     0.1084,     0.0017,     0.4238,     0.0004,     0.0029,     0.4570,     0.0022,     0.0000],
        [    0.0104,     0.0010,     0.0166,     0.0525,     0.0000,     0.0001,     0.7148,     0.0000,     0.0000,     0.0000,     0.0051,     0.0001,     0.0000,     0.0000,     0.1992]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0257, -0.0330, -0.0063,  ...,  0.0137,  0.0369, -0.0210],
        [ 0.0040, -0.0498, -0.0082,  ..., -0.0019,  0.0145, -0.0066],
        [-0.0273, -0.0053, -0.0327,  ...,  0.0240, -0.0363, -0.0109],
        ...,
        [ 0.0338,  0.0054, -0.0310,  ..., -0.0038, -0.0197,  0.0182],
        [-0.0107,  0.0075,  0.0124,  ...,  0.0398, -0.0158,  0.0124],
        [-0.0398,  0.0455, -0.0428,  ...,  0.0013,  0.0132,  0.0342]], device='cuda:0', requires_grad=True)
K: tensor([-1.2656, -0.2373, -2.6875,  0.3965, -2.0781, -0.7930,  0.3027,  1.0391,  0.2383, -1.9531, -1.7656, -0.9258,  1.0312, -0.2539, -1.5234, -0.2471,  2.2656,  0.1406, -3.9062,  0.6992,  2.0625, -1.4922, -1.9922,  2.5781,  1.0547,  0.6484, -2.5938,  1.2578, -0.6055, -2.3438, -1.1953,  0.4746,
        -0.6133,  3.0156,  1.2266, -0.1865,  3.2188, -1.6562, -1.0938,  0.0928, -0.1611, -1.6719, -1.2422,  0.5000, -0.9062, -0.5312, -0.6445,  0.9961,  0.8516, -1.0938,  1.1484,  1.7500, -1.5469,  0.7266,  0.2021, -1.4844, -0.0452, -3.0781, -1.0781, -1.6094,  0.8555, -0.2871,  0.5664, -1.8516],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0120, -0.0084, -0.0059,  ..., -0.0202, -0.0242, -0.0075],
        [ 0.0105, -0.0054, -0.0034,  ...,  0.0169, -0.0264,  0.0324],
        [ 0.0112, -0.0146,  0.0041,  ...,  0.0033, -0.0261, -0.0077],
        ...,
        [ 0.0219, -0.0372, -0.0039,  ...,  0.0313,  0.0175,  0.0080],
        [-0.0040, -0.0005,  0.0069,  ...,  0.0028,  0.0168, -0.0078],
        [-0.0102, -0.0150, -0.0035,  ...,  0.0265,  0.0007, -0.0349]], device='cuda:0', requires_grad=True)
Q: tensor([    -0.1484,      0.6992,      0.2949,      0.6328,     -0.2910,     -1.1953,     -1.5625,     -1.4531,     -1.3047,      1.4609,     -1.7734,      0.6914,      1.0469,     -0.9375,      0.4336,     -1.5156,      0.9062,      0.2773,     -0.4727,     -0.0542,      0.7969,     -0.9258,
            -0.2471,     -0.8594,      0.2168,      0.0977,     -2.1562,      2.3125,     -2.0781,      1.2578,     -2.6406,     -0.8555,     -1.5469,      1.5703,     -1.5156,     -1.7109,     -0.4199,     -0.5078,      1.8203,     -1.1406,      0.1377,      1.7812,     -0.5781,      2.3594,
            -0.6406,      0.8125,      0.1230,      1.8594,      0.8828,     -1.2812,     -1.0703,      2.1562,     -1.1562,     -0.6484,     -0.2412,      0.0452,     -1.8906,      0.7266,     -0.2393,     -0.1177,      1.1406,      0.0001,     -0.7109,     -1.0938], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000,  -1.5469,   0.2539,   0.5859,  -4.5000,  -3.0781,   4.0938,  -3.5312,  -3.6562,  -4.4375,  -0.5078,  -2.8438,  -4.1875,  -3.6562,   0.7383],
        [  0.0000,  -1.3828,   2.5625,   2.8594, -13.0625,  -7.5000,  11.4375, -10.9375, -12.9375, -16.0000,  -2.5156,  -8.1250, -15.1250, -13.5625,   3.7812],
        [  0.0000,   0.3203,   2.2500,   3.4062,  -4.0312,  -1.6953,   5.7500,  -1.7109,  -3.3750,  -3.9062,   1.1875,  -1.3672,  -3.4844,  -3.4688,   3.5938],
        [  0.0000,   0.4199,  -0.0483,  -0.2598,   4.4062,   3.4688,  -3.3125,   8.9375,   4.0000,   9.5625,   1.7344,   4.0000,   9.3750,   3.4844,  -4.0625],
        [  0.0000,   2.0469,   0.7344,  -0.8555,   3.4375,   4.5938,  -0.8945,   7.7812,   3.0938,   7.2188,   1.8672,   4.1562,   8.3750,   3.1562,  -1.7578],
        [  0.0000,   0.7109,   3.4219,   2.5938,  -2.9531,   0.6875,   5.1250,   1.7891,  -2.1406,   1.3438,   1.2969,   1.6875,   2.0781,  -1.7969,   3.0938],
        [  0.0000,   0.0515,  -0.6289,   1.4062,   5.0000,   0.5859,  -1.3359,   2.5156,   4.8125,   1.8672,   1.6250,   1.3047,   2.0781,   4.3750,  -0.3555],
        [  0.0000,  -1.1719,  -1.2109,  -2.9062,   1.9531,   1.4844,  -4.8438,   6.7188,   1.6875,   7.1562,   0.0815,   2.6562,   7.5312,   1.5938,  -5.0000],
        [  0.0000,  -3.4375,  -2.8438,  -1.3047,  -6.6562,  -5.8750,   2.7656,  -6.9062,  -4.2500,  -6.5000,  -0.5859,  -5.1250,  -7.0938,  -3.7812,  -0.1123],
        [  0.0000,  -5.7188,  -4.2812,  -4.9062,  -3.4688,  -4.2812,  -4.7500,  -0.8203,  -2.5625,   1.6406,  -2.4219,  -2.3125,   0.9609,  -1.7500,  -5.5312],
        [  0.0000,  -3.3594,  -1.0938,   1.6875, -11.6875,  -9.7500,   8.3750, -13.8125, -10.0625, -16.6250,  -2.1875,  -9.4375, -16.7500, -10.4375,   3.0625],
        [  0.0000,  -2.4531,  -3.1250,  -0.7031,   1.8438,  -2.6094,  -1.0859,  -2.3125,   3.1562,  -2.1094,   0.3281,  -2.0938,  -2.2969,   3.0781,  -1.2422],
        [  0.0000,  -2.0000,  -2.5000,  -4.0312,   0.9844,   0.5820,  -5.5000,   5.3750,   1.2188,   6.7500,  -0.3418,   1.7578,   6.8125,   1.4688,  -5.7812],
        [  0.0000,  -2.2969,   0.4707,   1.6172,  -8.1875,  -5.2812,   4.2188,  -5.6875,  -7.0625,  -6.6562,  -0.7070,  -4.3438,  -7.3750,  -6.7500,   2.9531]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2756],
        [0.1370],
        [0.0514],
        [0.0850],
        [0.0887],
        [0.0356],
        [0.0316],
        [0.0239],
        [0.0210],
        [0.0396],
        [0.0156],
        [0.0366],
        [0.0147],
        [0.0367]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.0835 a:0.0952 and:0.1147 and:0.0859,:0.0420,:0.4863 a:0.0938ery:0.0850)
ery
------
		( a:0.0952 and:0.1147 and:0.0859,:0.0420,:0.4863 a:0.0938ery:0.0850,:0.0830)
, and you can be able to get rid of the leaves of the leaves
@ 4050 train 4.9638 , allloss: 4.9833, dt: 1738.70ms, fracRes: 0.6005, norm(attn): 0.1211, norm(output): 0.2471, norm(x): 0.8798, norm(y): 1.0082, norm:1.3544, tok/sec: 75384.97, flops:66.01, batch-reuse:1
@ 4051 train 4.9602 , allloss: 4.9794, dt: 1274.37ms, fracRes: 0.6008, norm(attn): 0.1201, norm(output): 0.2471, norm(x): 0.8774, norm(y): 1.0082, norm:1.6274, tok/sec: 102852.14, flops:90.07, batch-reuse:1
@ 4052 train 4.8893 , allloss: 4.9092, dt: 1285.98ms, fracRes: 0.5996, norm(attn): 0.1216, norm(output): 0.2480, norm(x): 0.8739, norm(y): 1.0081, norm:1.1791, tok/sec: 101923.77, flops:89.25, batch-reuse:1
@ 4053 train 4.8924 , allloss: 4.9121, dt: 1282.24ms, fracRes: 0.5997, norm(attn): 0.1196, norm(output): 0.2461, norm(x): 0.8738, norm(y): 1.0082, norm:1.4627, tok/sec: 102221.33, flops:89.51, batch-reuse:1
@ 4054 train 5.0137 , allloss: 5.0332, dt: 1252.93ms, fracRes: 0.6012, norm(attn): 0.1182, norm(output): 0.2451, norm(x): 0.8777, norm(y): 1.0082, norm:1.3495, tok/sec: 104612.30, flops:91.61, batch-reuse:1
@ 4055 train 5.0525 , allloss: 5.0719, dt: 1264.68ms, fracRes: 0.6022, norm(attn): 0.1182, norm(output): 0.2461, norm(x): 0.8773, norm(y): 1.0082, norm:1.2148, tok/sec: 103640.26, flops:90.76, batch-reuse:1
@ 4056 train 5.0480 , allloss: 5.0664, dt: 1257.29ms, fracRes: 0.6022, norm(attn): 0.1177, norm(output): 0.2461, norm(x): 0.8780, norm(y): 1.0082, norm:1.2887, tok/sec: 104249.72, flops:91.29, batch-reuse:1
@ 4057 train 4.8851 , allloss: 4.9041, dt: 1253.09ms, fracRes: 0.6015, norm(attn): 0.1191, norm(output): 0.2461, norm(x): 0.8775, norm(y): 1.0082, norm:1.1925, tok/sec: 104599.38, flops:91.60, batch-reuse:1
@ 4058 train 5.0574 , allloss: 5.0767, dt: 1260.04ms, fracRes: 0.5996, norm(attn): 0.1226, norm(output): 0.2471, norm(x): 0.8736, norm(y): 1.0080, norm:1.4077, tok/sec: 104021.93, flops:91.09, batch-reuse:1
@ 4059 train 4.9068 , allloss: 4.9264, dt: 1244.10ms, fracRes: 0.5993, norm(attn): 0.1221, norm(output): 0.2471, norm(x): 0.8727, norm(y): 1.0082, norm:1.2402, tok/sec: 105354.91, flops:92.26, batch-reuse:1
@ 4060 train 4.8928 , allloss: 4.9115, dt: 1275.38ms, fracRes: 0.5999, norm(attn): 0.1211, norm(output): 0.2471, norm(x): 0.8753, norm(y): 1.0082, norm:1.3742, tok/sec: 102771.08, flops:90.00, batch-reuse:1
@ 4061 train 4.9991 , allloss: 5.0192, dt: 1298.30ms, fracRes: 0.6002, norm(attn): 0.1206, norm(output): 0.2490, norm(x): 0.8750, norm(y): 1.0081, norm:1.2600, tok/sec: 100956.56, flops:88.41, batch-reuse:1
@ 4062 train 4.9618 , allloss: 4.9808, dt: 1272.58ms, fracRes: 0.6011, norm(attn): 0.1191, norm(output): 0.2471, norm(x): 0.8772, norm(y): 1.0082, norm:1.2069, tok/sec: 102997.01, flops:90.19, batch-reuse:1
@ 4063 train 4.9215 , allloss: 4.9403, dt: 1264.53ms, fracRes: 0.6003, norm(attn): 0.1191, norm(output): 0.2480, norm(x): 0.8752, norm(y): 1.0082, norm:1.3750, tok/sec: 103652.88, flops:90.77, batch-reuse:1
@ 4064 train 4.9797 , allloss: 4.9996, dt: 1265.34ms, fracRes: 0.6004, norm(attn): 0.1211, norm(output): 0.2461, norm(x): 0.8716, norm(y): 1.0083, norm:1.2752, tok/sec: 103586.69, flops:90.71, batch-reuse:1
@ 4065 train 4.9731 , allloss: 4.9925, dt: 1265.70ms, fracRes: 0.6012, norm(attn): 0.1191, norm(output): 0.2441, norm(x): 0.8713, norm(y): 1.0082, norm:1.4869, tok/sec: 103557.07, flops:90.68, batch-reuse:1
@ 4066 train 4.8897 , allloss: 4.9102, dt: 1291.89ms, fracRes: 0.6015, norm(attn): 0.1187, norm(output): 0.2451, norm(x): 0.8712, norm(y): 1.0081, norm:1.4137, tok/sec: 101457.32, flops:88.84, batch-reuse:1
@ 4067 train 5.0868 , allloss: 5.1060, dt: 1254.37ms, fracRes: 0.6012, norm(attn): 0.1191, norm(output): 0.2461, norm(x): 0.8708, norm(y): 1.0081, norm:1.2899, tok/sec: 104492.36, flops:91.50, batch-reuse:1
@ 4068 train 4.9183 , allloss: 4.9373, dt: 1274.35ms, fracRes: 0.5996, norm(attn): 0.1191, norm(output): 0.2441, norm(x): 0.8684, norm(y): 1.0082, norm:1.2667, tok/sec: 102854.05, flops:90.07, batch-reuse:1
@ 4069 train 5.0343 , allloss: 5.0546, dt: 1285.20ms, fracRes: 0.5993, norm(attn): 0.1196, norm(output): 0.2471, norm(x): 0.8675, norm(y): 1.0081, norm:1.4480, tok/sec: 101985.31, flops:89.31, batch-reuse:1
@ 4070 train 5.0036 , allloss: 5.0231, dt: 1284.98ms, fracRes: 0.5997, norm(attn): 0.1196, norm(output): 0.2461, norm(x): 0.8667, norm(y): 1.0082, norm:1.2824, tok/sec: 102003.08, flops:89.32, batch-reuse:1
@ 4071 train 4.8924 , allloss: 4.9116, dt: 1293.53ms, fracRes: 0.6002, norm(attn): 0.1187, norm(output): 0.2422, norm(x): 0.8684, norm(y): 1.0083, norm:1.4535, tok/sec: 101328.64, flops:88.73, batch-reuse:1
@ 4072 train 4.9400 , allloss: 4.9588, dt: 1261.85ms, fracRes: 0.6008, norm(attn): 0.1182, norm(output): 0.2441, norm(x): 0.8713, norm(y): 1.0082, norm:1.3010, tok/sec: 103873.09, flops:90.96, batch-reuse:1
@ 4073 train 4.9448 , allloss: 4.9641, dt: 1279.91ms, fracRes: 0.6012, norm(attn): 0.1182, norm(output): 0.2441, norm(x): 0.8715, norm(y): 1.0082, norm:1.2193, tok/sec: 102407.44, flops:89.68, batch-reuse:1
@ 4074 train 4.9906 , allloss: 5.0094, dt: 1263.43ms, fracRes: 0.6008, norm(attn): 0.1177, norm(output): 0.2422, norm(x): 0.8697, norm(y): 1.0082, norm:1.2977, tok/sec: 103742.96, flops:90.85, batch-reuse:1
@ 4075 train 4.9210 , allloss: 4.9403, dt: 1291.00ms, fracRes: 0.5994, norm(attn): 0.1177, norm(output): 0.2461, norm(x): 0.8673, norm(y): 1.0082, norm:1.3535, tok/sec: 101527.43, flops:88.91, batch-reuse:1
@ 4076 train 5.1893 , allloss: 5.2087, dt: 1261.46ms, fracRes: 0.5997, norm(attn): 0.1187, norm(output): 0.2432, norm(x): 0.8674, norm(y): 1.0082, norm:1.2172, tok/sec: 103904.60, flops:90.99, batch-reuse:1
@ 4077 train 5.1577 , allloss: 5.1769, dt: 1277.61ms, fracRes: 0.5998, norm(attn): 0.1182, norm(output): 0.2441, norm(x): 0.8688, norm(y): 1.0081, norm:1.1993, tok/sec: 102591.48, flops:89.84, batch-reuse:1
@ 4078 train 5.1036 , allloss: 5.1229, dt: 1290.52ms, fracRes: 0.5993, norm(attn): 0.1187, norm(output): 0.2441, norm(x): 0.8658, norm(y): 1.0081, norm:1.2227, tok/sec: 101565.45, flops:88.94, batch-reuse:1
@ 4079 train 5.1095 , allloss: 5.1288, dt: 1278.74ms, fracRes: 0.5993, norm(attn): 0.1187, norm(output): 0.2461, norm(x): 0.8639, norm(y): 1.0081, norm:1.1151, tok/sec: 102500.56, flops:89.76, batch-reuse:1
@ 4080 train 5.2606 , allloss: 5.2789, dt: 1264.12ms, fracRes: 0.6011, norm(attn): 0.1177, norm(output): 0.2461, norm(x): 0.8706, norm(y): 1.0081, norm:1.2246, tok/sec: 103686.62, flops:90.80, batch-reuse:1
@ 4081 train 5.1812 , allloss: 5.2007, dt: 1259.23ms, fracRes: 0.6010, norm(attn): 0.1182, norm(output): 0.2451, norm(x): 0.8707, norm(y): 1.0082, norm:1.3139, tok/sec: 104088.98, flops:91.15, batch-reuse:1
@ 4082 train 5.1287 , allloss: 5.1480, dt: 1270.77ms, fracRes: 0.6003, norm(attn): 0.1201, norm(output): 0.2461, norm(x): 0.8691, norm(y): 1.0081, norm:1.3211, tok/sec: 103143.45, flops:90.32, batch-reuse:1
@ 4083 train 5.2549 , allloss: 5.2755, dt: 1281.81ms, fracRes: 0.6014, norm(attn): 0.1201, norm(output): 0.2422, norm(x): 0.8626, norm(y): 1.0080, norm:1.2466, tok/sec: 102255.08, flops:89.54, batch-reuse:1
@ 4084 train 5.1764 , allloss: 5.1952, dt: 1270.18ms, fracRes: 0.5997, norm(attn): 0.1201, norm(output): 0.2471, norm(x): 0.8660, norm(y): 1.0081, norm:1.2656, tok/sec: 103191.48, flops:90.36, batch-reuse:1
@ 4085 train 5.0538 , allloss: 5.0737, dt: 1261.06ms, fracRes: 0.5998, norm(attn): 0.1211, norm(output): 0.2461, norm(x): 0.8642, norm(y): 1.0081, norm:1.3442, tok/sec: 103937.74, flops:91.02, batch-reuse:1
@ 4086 train 5.1129 , allloss: 5.1328, dt: 1255.36ms, fracRes: 0.6009, norm(attn): 0.1191, norm(output): 0.2461, norm(x): 0.8674, norm(y): 1.0081, norm:1.3370, tok/sec: 104409.56, flops:91.43, batch-reuse:1
@ 4087 train 5.2043 , allloss: 5.2247, dt: 1268.04ms, fracRes: 0.6010, norm(attn): 0.1211, norm(output): 0.2461, norm(x): 0.8645, norm(y): 1.0079, norm:1.2314, tok/sec: 103366.08, flops:90.52, batch-reuse:1
@ 4088 train 5.0789 , allloss: 5.0978, dt: 1256.97ms, fracRes: 0.6006, norm(attn): 0.1196, norm(output): 0.2461, norm(x): 0.8695, norm(y): 1.0081, norm:1.3371, tok/sec: 104275.92, flops:91.31, batch-reuse:1
@ 4089 train 5.1223 , allloss: 5.1417, dt: 1260.57ms, fracRes: 0.6010, norm(attn): 0.1187, norm(output): 0.2461, norm(x): 0.8697, norm(y): 1.0081, norm:1.3631, tok/sec: 103978.65, flops:91.05, batch-reuse:1
@ 4090 train 5.1803 , allloss: 5.1989, dt: 1260.70ms, fracRes: 0.6017, norm(attn): 0.1182, norm(output): 0.2441, norm(x): 0.8683, norm(y): 1.0081, norm:1.2454, tok/sec: 103967.82, flops:91.04, batch-reuse:1
@ 4091 train 5.1564 , allloss: 5.1752, dt: 1278.98ms, fracRes: 0.6018, norm(attn): 0.1182, norm(output): 0.2451, norm(x): 0.8657, norm(y): 1.0081, norm:1.2962, tok/sec: 102481.95, flops:89.74, batch-reuse:1
@ 4092 train 5.1592 , allloss: 5.1795, dt: 1277.04ms, fracRes: 0.6013, norm(attn): 0.1191, norm(output): 0.2441, norm(x): 0.8644, norm(y): 1.0080, norm:1.2317, tok/sec: 102637.37, flops:89.88, batch-reuse:1
@ 4093 train 5.2656 , allloss: 5.2857, dt: 1271.42ms, fracRes: 0.6014, norm(attn): 0.1191, norm(output): 0.2441, norm(x): 0.8618, norm(y): 1.0081, norm:1.4086, tok/sec: 103090.84, flops:90.28, batch-reuse:1
@ 4094 train 5.1266 , allloss: 5.1481, dt: 1255.30ms, fracRes: 0.6001, norm(attn): 0.1196, norm(output): 0.2432, norm(x): 0.8592, norm(y): 1.0081, norm:1.3371, tok/sec: 104414.76, flops:91.43, batch-reuse:1
@ 4095 train 5.0601 , allloss: 5.0790, dt: 1268.71ms, fracRes: 0.5994, norm(attn): 0.1211, norm(output): 0.2461, norm(x): 0.8624, norm(y): 1.0081, norm:1.1811, tok/sec: 103310.99, flops:90.47, batch-reuse:1
@ 4096 train 5.1991 , allloss: 5.2185, dt: 1250.76ms, fracRes: 0.6012, norm(attn): 0.1182, norm(output): 0.2441, norm(x): 0.8647, norm(y): 1.0081, norm:1.5395, tok/sec: 104793.62, flops:91.77, batch-reuse:1
@ 4097 train 5.1193 , allloss: 5.1383, dt: 1275.33ms, fracRes: 0.6011, norm(attn): 0.1191, norm(output): 0.2471, norm(x): 0.8665, norm(y): 1.0081, norm:1.2854, tok/sec: 102774.77, flops:90.00, batch-reuse:1
@ 4098 train 5.0277 , allloss: 5.0466, dt: 1268.99ms, fracRes: 0.6009, norm(attn): 0.1187, norm(output): 0.2461, norm(x): 0.8644, norm(y): 1.0082, norm:1.3224, tok/sec: 103288.28, flops:90.45, batch-reuse:1
@ 4099 train 5.1652 , allloss: 5.1842, dt: 1292.79ms, fracRes: 0.6009, norm(attn): 0.1201, norm(output): 0.2471, norm(x): 0.8663, norm(y): 1.0082, norm:1.2219, tok/sec: 101386.97, flops:88.78, batch-reuse:1
@ 4100 train 5.1955 , allloss: 5.2151, dt: 1254.18ms, fracRes: 0.6016, norm(attn): 0.1191, norm(output): 0.2441, norm(x): 0.8645, norm(y): 1.0082, norm:1.4344, tok/sec: 104508.39, flops:91.52, batch-reuse:1
@ 4101 train 5.2458 , allloss: 5.2651, dt: 1262.31ms, fracRes: 0.6020, norm(attn): 0.1187, norm(output): 0.2412, norm(x): 0.8635, norm(y): 1.0083, norm:1.6086, tok/sec: 103835.40, flops:90.93, batch-reuse:1
@ 4102 train 5.1325 , allloss: 5.1514, dt: 1270.53ms, fracRes: 0.6013, norm(attn): 0.1177, norm(output): 0.2451, norm(x): 0.8668, norm(y): 1.0082, norm:1.6054, tok/sec: 103163.21, flops:90.34, batch-reuse:1
@ 4103 train 5.1660 , allloss: 5.1863, dt: 1266.33ms, fracRes: 0.6019, norm(attn): 0.1177, norm(output): 0.2441, norm(x): 0.8638, norm(y): 1.0082, norm:1.1612, tok/sec: 103505.41, flops:90.64, batch-reuse:1
@ 4104 train 5.0643 , allloss: 5.0834, dt: 1258.38ms, fracRes: 0.6006, norm(attn): 0.1182, norm(output): 0.2461, norm(x): 0.8601, norm(y): 1.0082, norm:1.3014, tok/sec: 104159.03, flops:91.21, batch-reuse:1
@ 4105 train 5.1721 , allloss: 5.1915, dt: 1267.75ms, fracRes: 0.6010, norm(attn): 0.1182, norm(output): 0.2471, norm(x): 0.8636, norm(y): 1.0082, norm:1.3743, tok/sec: 103389.31, flops:90.54, batch-reuse:1
@ 4106 train 5.2269 , allloss: 5.2461, dt: 1271.76ms, fracRes: 0.6012, norm(attn): 0.1187, norm(output): 0.2461, norm(x): 0.8619, norm(y): 1.0081, norm:1.3978, tok/sec: 103063.24, flops:90.25, batch-reuse:1
@ 4107 train 5.0535 , allloss: 5.0749, dt: 1274.12ms, fracRes: 0.6006, norm(attn): 0.1191, norm(output): 0.2471, norm(x): 0.8620, norm(y): 1.0082, norm:1.3194, tok/sec: 102872.45, flops:90.08, batch-reuse:1
@ 4108 train 5.1121 , allloss: 5.1314, dt: 1277.00ms, fracRes: 0.6010, norm(attn): 0.1187, norm(output): 0.2441, norm(x): 0.8634, norm(y): 1.0082, norm:1.3098, tok/sec: 102640.53, flops:89.88, batch-reuse:1
@ 4109 train 5.2040 , allloss: 5.2224, dt: 1283.78ms, fracRes: 0.6018, norm(attn): 0.1182, norm(output): 0.2441, norm(x): 0.8656, norm(y): 1.0082, norm:1.5030, tok/sec: 102098.27, flops:89.41, batch-reuse:1
@ 4110 train 5.1445 , allloss: 5.1638, dt: 1258.86ms, fracRes: 0.6017, norm(attn): 0.1177, norm(output): 0.2441, norm(x): 0.8647, norm(y): 1.0082, norm:1.3962, tok/sec: 104119.55, flops:91.18, batch-reuse:1
@ 4111 train 5.1320 , allloss: 5.1520, dt: 1292.47ms, fracRes: 0.6011, norm(attn): 0.1187, norm(output): 0.2422, norm(x): 0.8635, norm(y): 1.0081, norm:1.2308, tok/sec: 101411.93, flops:88.80, batch-reuse:1
@ 4112 train 5.1543 , allloss: 5.1741, dt: 1274.83ms, fracRes: 0.6009, norm(attn): 0.1182, norm(output): 0.2412, norm(x): 0.8618, norm(y): 1.0081, norm:1.3071, tok/sec: 102815.44, flops:90.03, batch-reuse:1
@ 4113 train 5.0648 , allloss: 5.0840, dt: 1265.03ms, fracRes: 0.5996, norm(attn): 0.1196, norm(output): 0.2461, norm(x): 0.8611, norm(y): 1.0081, norm:1.1200, tok/sec: 103611.39, flops:90.73, batch-reuse:1
@ 4114 train 5.2713 , allloss: 5.2904, dt: 1263.16ms, fracRes: 0.6016, norm(attn): 0.1182, norm(output): 0.2461, norm(x): 0.8653, norm(y): 1.0080, norm:1.2343, tok/sec: 103765.12, flops:90.87, batch-reuse:1
@ 4115 train 5.0644 , allloss: 5.0828, dt: 1269.25ms, fracRes: 0.6012, norm(attn): 0.1177, norm(output): 0.2441, norm(x): 0.8659, norm(y): 1.0082, norm:1.3831, tok/sec: 103267.10, flops:90.43, batch-reuse:1
@ 4116 train 5.1366 , allloss: 5.1548, dt: 1263.94ms, fracRes: 0.5997, norm(attn): 0.1182, norm(output): 0.2461, norm(x): 0.8609, norm(y): 1.0081, norm:1.2794, tok/sec: 103701.02, flops:90.81, batch-reuse:1
@ 4117 train 5.0663 , allloss: 5.0861, dt: 1271.05ms, fracRes: 0.5994, norm(attn): 0.1196, norm(output): 0.2461, norm(x): 0.8588, norm(y): 1.0081, norm:1.4332, tok/sec: 103121.28, flops:90.30, batch-reuse:1
@ 4118 train 5.2005 , allloss: 5.2202, dt: 1269.08ms, fracRes: 0.5995, norm(attn): 0.1216, norm(output): 0.2480, norm(x): 0.8604, norm(y): 1.0079, norm:1.1936, tok/sec: 103281.30, flops:90.44, batch-reuse:1
@ 4119 train 5.2294 , allloss: 5.2490, dt: 1285.85ms, fracRes: 0.6010, norm(attn): 0.1201, norm(output): 0.2441, norm(x): 0.8643, norm(y): 1.0082, norm:1.5329, tok/sec: 101933.88, flops:89.26, batch-reuse:1
@ 4120 train 5.0944 , allloss: 5.1141, dt: 1276.66ms, fracRes: 0.6010, norm(attn): 0.1216, norm(output): 0.2432, norm(x): 0.8598, norm(y): 1.0081, norm:1.4240, tok/sec: 102667.83, flops:89.90, batch-reuse:1
@ 4121 train 5.0680 , allloss: 5.0867, dt: 1296.64ms, fracRes: 0.6014, norm(attn): 0.1206, norm(output): 0.2412, norm(x): 0.8600, norm(y): 1.0082, norm:1.4517, tok/sec: 101085.78, flops:88.52, batch-reuse:1
@ 4122 train 5.1902 , allloss: 5.2100, dt: 1276.51ms, fracRes: 0.6016, norm(attn): 0.1196, norm(output): 0.2441, norm(x): 0.8589, norm(y): 1.0081, norm:1.2256, tok/sec: 102680.25, flops:89.92, batch-reuse:1
@ 4123 train 5.1520 , allloss: 5.1716, dt: 1273.38ms, fracRes: 0.6012, norm(attn): 0.1196, norm(output): 0.2422, norm(x): 0.8618, norm(y): 1.0083, norm:1.2873, tok/sec: 102932.29, flops:90.14, batch-reuse:1
@ 4124 train 5.1153 , allloss: 5.1344, dt: 1254.95ms, fracRes: 0.6012, norm(attn): 0.1191, norm(output): 0.2393, norm(x): 0.8577, norm(y): 1.0083, norm:1.4387, tok/sec: 104443.60, flops:91.46, batch-reuse:1
@ 4125 train 5.0721 , allloss: 5.0912, dt: 1263.05ms, fracRes: 0.6005, norm(attn): 0.1196, norm(output): 0.2441, norm(x): 0.8590, norm(y): 1.0083, norm:1.3067, tok/sec: 103774.60, flops:90.87, batch-reuse:1
@ 4126 train 4.9782 , allloss: 4.9984, dt: 1250.23ms, fracRes: 0.5995, norm(attn): 0.1221, norm(output): 0.2461, norm(x): 0.8568, norm(y): 1.0082, norm:1.2961, tok/sec: 104837.96, flops:91.81, batch-reuse:1
@ 4127 train 5.1329 , allloss: 5.1523, dt: 1302.70ms, fracRes: 0.6000, norm(attn): 0.1201, norm(output): 0.2451, norm(x): 0.8603, norm(y): 1.0083, norm:1.2274, tok/sec: 100615.77, flops:88.11, batch-reuse:1
@ 4128 train 5.0203 , allloss: 5.0383, dt: 1254.67ms, fracRes: 0.6006, norm(attn): 0.1216, norm(output): 0.2441, norm(x): 0.8616, norm(y): 1.0083, norm:1.2978, tok/sec: 104467.52, flops:91.48, batch-reuse:1
@ 4129 train 5.0497 , allloss: 5.0685, dt: 1269.92ms, fracRes: 0.6005, norm(attn): 0.1191, norm(output): 0.2461, norm(x): 0.8605, norm(y): 1.0082, norm:1.4095, tok/sec: 103212.46, flops:90.38, batch-reuse:1
@ 4130 train 5.2024 , allloss: 5.2213, dt: 1263.46ms, fracRes: 0.6011, norm(attn): 0.1201, norm(output): 0.2441, norm(x): 0.8590, norm(y): 1.0081, norm:1.0427, tok/sec: 103740.86, flops:90.84, batch-reuse:1
@ 4131 train 5.0469 , allloss: 5.0657, dt: 1259.58ms, fracRes: 0.6007, norm(attn): 0.1191, norm(output): 0.2441, norm(x): 0.8594, norm(y): 1.0082, norm:1.2326, tok/sec: 104060.11, flops:91.12, batch-reuse:1
@ 4132 train 5.0643 , allloss: 5.0835, dt: 1271.04ms, fracRes: 0.6000, norm(attn): 0.1206, norm(output): 0.2441, norm(x): 0.8564, norm(y): 1.0081, norm:1.1922, tok/sec: 103121.55, flops:90.30, batch-reuse:1
@ 4133 train 5.0910 , allloss: 5.1105, dt: 1273.42ms, fracRes: 0.6001, norm(attn): 0.1206, norm(output): 0.2441, norm(x): 0.8557, norm(y): 1.0081, norm:1.2287, tok/sec: 102928.75, flops:90.13, batch-reuse:1
@ 4134 train 5.1664 , allloss: 5.1851, dt: 1276.87ms, fracRes: 0.5999, norm(attn): 0.1206, norm(output): 0.2451, norm(x): 0.8557, norm(y): 1.0081, norm:1.2329, tok/sec: 102651.13, flops:89.89, batch-reuse:1
@ 4135 train 5.0750 , allloss: 5.0940, dt: 1251.47ms, fracRes: 0.5998, norm(attn): 0.1216, norm(output): 0.2441, norm(x): 0.8561, norm(y): 1.0082, norm:1.1318, tok/sec: 104734.74, flops:91.71, batch-reuse:1
@ 4136 train 5.1782 , allloss: 5.1983, dt: 1255.70ms, fracRes: 0.6003, norm(attn): 0.1216, norm(output): 0.2432, norm(x): 0.8552, norm(y): 1.0082, norm:1.4362, tok/sec: 104381.97, flops:91.41, batch-reuse:1
@ 4137 train 5.0797 , allloss: 5.0984, dt: 1269.58ms, fracRes: 0.6002, norm(attn): 0.1211, norm(output): 0.2441, norm(x): 0.8571, norm(y): 1.0083, norm:1.1863, tok/sec: 103240.26, flops:90.41, batch-reuse:1
@ 4138 train 5.1542 , allloss: 5.1729, dt: 1264.45ms, fracRes: 0.6010, norm(attn): 0.1206, norm(output): 0.2441, norm(x): 0.8574, norm(y): 1.0082, norm:1.0774, tok/sec: 103658.96, flops:90.77, batch-reuse:1
@ 4139 train 5.1202 , allloss: 5.1393, dt: 1250.78ms, fracRes: 0.6015, norm(attn): 0.1191, norm(output): 0.2412, norm(x): 0.8561, norm(y): 1.0082, norm:1.1976, tok/sec: 104792.20, flops:91.77, batch-reuse:1
@ 4140 train 5.2206 , allloss: 5.2398, dt: 1303.54ms, fracRes: 0.6013, norm(attn): 0.1201, norm(output): 0.2422, norm(x): 0.8569, norm(y): 1.0081, norm:1.1868, tok/sec: 100550.55, flops:88.05, batch-reuse:1
@ 4141 train 5.0833 , allloss: 5.1024, dt: 1248.06ms, fracRes: 0.6002, norm(attn): 0.1206, norm(output): 0.2422, norm(x): 0.8538, norm(y): 1.0082, norm:1.1194, tok/sec: 105020.41, flops:91.96, batch-reuse:1
@ 4142 train 5.0785 , allloss: 5.0977, dt: 1277.01ms, fracRes: 0.6001, norm(attn): 0.1196, norm(output): 0.2412, norm(x): 0.8532, norm(y): 1.0083, norm:1.3452, tok/sec: 102639.90, flops:89.88, batch-reuse:1
@ 4143 train 5.1303 , allloss: 5.1499, dt: 1320.91ms, fracRes: 0.6002, norm(attn): 0.1191, norm(output): 0.2402, norm(x): 0.8507, norm(y): 1.0083, norm:1.3853, tok/sec: 99228.60, flops:86.89, batch-reuse:1
@ 4144 train 5.1054 , allloss: 5.1243, dt: 1267.38ms, fracRes: 0.6020, norm(attn): 0.1177, norm(output): 0.2373, norm(x): 0.8517, norm(y): 1.0082, norm:1.2867, tok/sec: 103419.50, flops:90.56, batch-reuse:1
@ 4145 train 5.0616 , allloss: 5.0804, dt: 1262.41ms, fracRes: 0.6020, norm(attn): 0.1177, norm(output): 0.2393, norm(x): 0.8520, norm(y): 1.0082, norm:1.1034, tok/sec: 103826.42, flops:90.92, batch-reuse:1
@ 4146 train 5.1154 , allloss: 5.1357, dt: 1266.12ms, fracRes: 0.6015, norm(attn): 0.1191, norm(output): 0.2383, norm(x): 0.8494, norm(y): 1.0082, norm:1.4760, tok/sec: 103522.56, flops:90.65, batch-reuse:1
@ 4147 train 5.3248 , allloss: 5.3435, dt: 1289.65ms, fracRes: 0.6004, norm(attn): 0.1201, norm(output): 0.2373, norm(x): 0.8446, norm(y): 1.0082, norm:1.5397, tok/sec: 101633.50, flops:89.00, batch-reuse:1
@ 4148 train 5.1686 , allloss: 5.1885, dt: 1273.61ms, fracRes: 0.5993, norm(attn): 0.1216, norm(output): 0.2422, norm(x): 0.8495, norm(y): 1.0082, norm:1.3318, tok/sec: 102913.99, flops:90.12, batch-reuse:1
@ 4149 train 5.1462 , allloss: 5.1655, dt: 1288.70ms, fracRes: 0.5996, norm(attn): 0.1201, norm(output): 0.2422, norm(x): 0.8516, norm(y): 1.0082, norm:1.1618, tok/sec: 101708.41, flops:89.06, batch-reuse:1
@ 4150 train 5.0069 , allloss: 5.0253, dt: 1269.74ms, fracRes: 0.5995, norm(attn): 0.1196, norm(output): 0.2402, norm(x): 0.8514, norm(y): 1.0082, norm:1.4889, tok/sec: 103227.11, flops:90.39, batch-reuse:1
@ 4151 train 5.0957 , allloss: 5.1144, dt: 1300.51ms, fracRes: 0.6002, norm(attn): 0.1191, norm(output): 0.2432, norm(x): 0.8514, norm(y): 1.0082, norm:1.3216, tok/sec: 100784.92, flops:88.26, batch-reuse:1
@ 4152 train 5.0421 , allloss: 5.0618, dt: 1292.59ms, fracRes: 0.6005, norm(attn): 0.1187, norm(output): 0.2432, norm(x): 0.8522, norm(y): 1.0082, norm:1.2560, tok/sec: 101402.64, flops:88.80, batch-reuse:1
@ 4153 train 4.9884 , allloss: 5.0101, dt: 1284.48ms, fracRes: 0.6000, norm(attn): 0.1196, norm(output): 0.2441, norm(x): 0.8513, norm(y): 1.0081, norm:1.3943, tok/sec: 102042.48, flops:89.36, batch-reuse:1
@ 4154 train 5.1399 , allloss: 5.1599, dt: 1296.49ms, fracRes: 0.6004, norm(attn): 0.1206, norm(output): 0.2451, norm(x): 0.8546, norm(y): 1.0082, norm:1.2492, tok/sec: 101097.73, flops:88.53, batch-reuse:1
@ 4155 train 5.0937 , allloss: 5.1130, dt: 1269.08ms, fracRes: 0.6004, norm(attn): 0.1191, norm(output): 0.2412, norm(x): 0.8546, norm(y): 1.0082, norm:1.3251, tok/sec: 103281.47, flops:90.44, batch-reuse:1
@ 4156 train 5.0780 , allloss: 5.0971, dt: 1277.26ms, fracRes: 0.6000, norm(attn): 0.1206, norm(output): 0.2432, norm(x): 0.8513, norm(y): 1.0082, norm:1.2925, tok/sec: 102619.70, flops:89.86, batch-reuse:1
@ 4157 train 5.1048 , allloss: 5.1239, dt: 1306.66ms, fracRes: 0.6000, norm(attn): 0.1201, norm(output): 0.2402, norm(x): 0.8492, norm(y): 1.0082, norm:1.2444, tok/sec: 100310.79, flops:87.84, batch-reuse:1
@ 4158 train 5.0066 , allloss: 5.0265, dt: 1267.03ms, fracRes: 0.5998, norm(attn): 0.1187, norm(output): 0.2402, norm(x): 0.8494, norm(y): 1.0082, norm:1.1900, tok/sec: 103447.99, flops:90.59, batch-reuse:1
@ 4159 train 5.1111 , allloss: 5.1350, dt: 1277.62ms, fracRes: 0.6001, norm(attn): 0.1201, norm(output): 0.2451, norm(x): 0.8483, norm(y): 1.0081, norm:1.3405, tok/sec: 102590.92, flops:89.84, batch-reuse:1
@ 4160 train 5.1386 , allloss: 5.1589, dt: 1251.91ms, fracRes: 0.6009, norm(attn): 0.1187, norm(output): 0.2373, norm(x): 0.8483, norm(y): 1.0083, norm:1.2383, tok/sec: 104697.27, flops:91.68, batch-reuse:1
@ 4161 train 5.0218 , allloss: 5.0407, dt: 1276.92ms, fracRes: 0.6004, norm(attn): 0.1182, norm(output): 0.2373, norm(x): 0.8465, norm(y): 1.0083, norm:1.1731, tok/sec: 102647.06, flops:89.89, batch-reuse:1
@ 4162 train 5.0608 , allloss: 5.0801, dt: 1266.03ms, fracRes: 0.6011, norm(attn): 0.1177, norm(output): 0.2383, norm(x): 0.8470, norm(y): 1.0082, norm:1.3224, tok/sec: 103530.20, flops:90.66, batch-reuse:1
@ 4163 train 4.9983 , allloss: 5.0176, dt: 1258.65ms, fracRes: 0.5995, norm(attn): 0.1201, norm(output): 0.2402, norm(x): 0.8442, norm(y): 1.0082, norm:1.1193, tok/sec: 104136.79, flops:91.19, batch-reuse:1
@ 4164 train 5.0961 , allloss: 5.1172, dt: 1277.94ms, fracRes: 0.5990, norm(attn): 0.1211, norm(output): 0.2412, norm(x): 0.8422, norm(y): 1.0082, norm:1.4532, tok/sec: 102565.39, flops:89.82, batch-reuse:1
@ 4165 train 5.0483 , allloss: 5.0676, dt: 1253.69ms, fracRes: 0.5989, norm(attn): 0.1206, norm(output): 0.2402, norm(x): 0.8440, norm(y): 1.0082, norm:1.2333, tok/sec: 104548.77, flops:91.55, batch-reuse:1
@ 4166 train 5.0657 , allloss: 5.0851, dt: 1274.24ms, fracRes: 0.6004, norm(attn): 0.1187, norm(output): 0.2402, norm(x): 0.8479, norm(y): 1.0083, norm:1.0792, tok/sec: 102863.00, flops:90.08, batch-reuse:1
@ 4167 train 4.9654 , allloss: 4.9840, dt: 1250.72ms, fracRes: 0.5999, norm(attn): 0.1182, norm(output): 0.2393, norm(x): 0.8462, norm(y): 1.0083, norm:1.1428, tok/sec: 104797.11, flops:91.77, batch-reuse:1
@ 4168 train 4.9755 , allloss: 4.9943, dt: 1256.59ms, fracRes: 0.6002, norm(attn): 0.1187, norm(output): 0.2373, norm(x): 0.8461, norm(y): 1.0083, norm:1.0893, tok/sec: 104307.82, flops:91.34, batch-reuse:1
@ 4169 train 5.0258 , allloss: 5.0452, dt: 1249.60ms, fracRes: 0.5995, norm(attn): 0.1187, norm(output): 0.2383, norm(x): 0.8445, norm(y): 1.0083, norm:1.2590, tok/sec: 104891.15, flops:91.85, batch-reuse:1
@ 4170 train 5.0096 , allloss: 5.0290, dt: 1257.79ms, fracRes: 0.5990, norm(attn): 0.1206, norm(output): 0.2393, norm(x): 0.8431, norm(y): 1.0083, norm:1.2777, tok/sec: 104207.95, flops:91.25, batch-reuse:1
@ 4171 train 4.9874 , allloss: 5.0066, dt: 1250.71ms, fracRes: 0.5996, norm(attn): 0.1191, norm(output): 0.2422, norm(x): 0.8461, norm(y): 1.0083, norm:1.3899, tok/sec: 104798.31, flops:91.77, batch-reuse:1
@ 4172 train 5.0126 , allloss: 5.0304, dt: 1265.23ms, fracRes: 0.6010, norm(attn): 0.1182, norm(output): 0.2402, norm(x): 0.8499, norm(y): 1.0083, norm:1.2002, tok/sec: 103595.13, flops:90.72, batch-reuse:1
@ 4173 train 4.9520 , allloss: 4.9706, dt: 1254.92ms, fracRes: 0.6005, norm(attn): 0.1191, norm(output): 0.2393, norm(x): 0.8477, norm(y): 1.0083, norm:1.2042, tok/sec: 104446.64, flops:91.46, batch-reuse:1
@ 4174 train 4.9940 , allloss: 5.0132, dt: 1274.27ms, fracRes: 0.6006, norm(attn): 0.1187, norm(output): 0.2393, norm(x): 0.8472, norm(y): 1.0083, norm:1.0249, tok/sec: 102860.61, flops:90.07, batch-reuse:1
@ 4175 train 4.9815 , allloss: 5.0015, dt: 1259.58ms, fracRes: 0.5994, norm(attn): 0.1196, norm(output): 0.2393, norm(x): 0.8449, norm(y): 1.0083, norm:1.2350, tok/sec: 104060.23, flops:91.12, batch-reuse:1
@ 4176 train 4.9410 , allloss: 4.9614, dt: 1272.47ms, fracRes: 0.5989, norm(attn): 0.1206, norm(output): 0.2422, norm(x): 0.8409, norm(y): 1.0082, norm:1.2043, tok/sec: 103005.75, flops:90.20, batch-reuse:1
@ 4177 train 4.9061 , allloss: 4.9250, dt: 1259.09ms, fracRes: 0.5994, norm(attn): 0.1196, norm(output): 0.2373, norm(x): 0.8451, norm(y): 1.0083, norm:1.3170, tok/sec: 104100.92, flops:91.16, batch-reuse:1
@ 4178 train 5.0196 , allloss: 5.0392, dt: 1288.94ms, fracRes: 0.6002, norm(attn): 0.1182, norm(output): 0.2383, norm(x): 0.8440, norm(y): 1.0083, norm:1.1364, tok/sec: 101689.97, flops:89.05, batch-reuse:1
@ 4179 train 4.9945 , allloss: 5.0129, dt: 1261.74ms, fracRes: 0.6004, norm(attn): 0.1187, norm(output): 0.2393, norm(x): 0.8448, norm(y): 1.0083, norm:1.1700, tok/sec: 103882.12, flops:90.97, batch-reuse:1
@ 4180 train 4.9724 , allloss: 4.9910, dt: 1261.36ms, fracRes: 0.6018, norm(attn): 0.1172, norm(output): 0.2373, norm(x): 0.8461, norm(y): 1.0084, norm:1.1471, tok/sec: 103912.93, flops:91.00, batch-reuse:1
@ 4181 train 4.9904 , allloss: 5.0090, dt: 1249.40ms, fracRes: 0.6006, norm(attn): 0.1187, norm(output): 0.2383, norm(x): 0.8434, norm(y): 1.0083, norm:1.2296, tok/sec: 104907.64, flops:91.87, batch-reuse:1
@ 4182 train 4.9441 , allloss: 4.9633, dt: 1254.05ms, fracRes: 0.5995, norm(attn): 0.1196, norm(output): 0.2363, norm(x): 0.8421, norm(y): 1.0083, norm:1.1663, tok/sec: 104518.80, flops:91.53, batch-reuse:1
@ 4183 train 5.0316 , allloss: 5.0512, dt: 1256.24ms, fracRes: 0.6004, norm(attn): 0.1196, norm(output): 0.2373, norm(x): 0.8383, norm(y): 1.0081, norm:1.3255, tok/sec: 104337.14, flops:91.37, batch-reuse:1
@ 4184 train 4.9854 , allloss: 5.0046, dt: 1254.78ms, fracRes: 0.6007, norm(attn): 0.1187, norm(output): 0.2383, norm(x): 0.8442, norm(y): 1.0083, norm:1.2994, tok/sec: 104458.11, flops:91.47, batch-reuse:1
@ 4185 train 4.9905 , allloss: 5.0092, dt: 1270.87ms, fracRes: 0.6007, norm(attn): 0.1196, norm(output): 0.2383, norm(x): 0.8450, norm(y): 1.0083, norm:1.2326, tok/sec: 103135.61, flops:90.31, batch-reuse:1
@ 4186 train 5.1095 , allloss: 5.1301, dt: 1287.54ms, fracRes: 0.6026, norm(attn): 0.1191, norm(output): 0.2383, norm(x): 0.8484, norm(y): 1.0083, norm:1.5289, tok/sec: 101800.67, flops:89.15, batch-reuse:1
@ 4187 train 4.9894 , allloss: 5.0088, dt: 1263.42ms, fracRes: 0.6015, norm(attn): 0.1191, norm(output): 0.2402, norm(x): 0.8446, norm(y): 1.0082, norm:1.2688, tok/sec: 103744.01, flops:90.85, batch-reuse:1
@ 4188 train 5.0063 , allloss: 5.0264, dt: 1290.50ms, fracRes: 0.5993, norm(attn): 0.1196, norm(output): 0.2412, norm(x): 0.8403, norm(y): 1.0082, norm:1.2803, tok/sec: 101566.86, flops:88.94, batch-reuse:1
@ 4189 train 4.9759 , allloss: 4.9956, dt: 1271.76ms, fracRes: 0.5997, norm(attn): 0.1206, norm(output): 0.2383, norm(x): 0.8429, norm(y): 1.0084, norm:1.4504, tok/sec: 103063.49, flops:90.25, batch-reuse:1
@ 4190 train 4.9812 , allloss: 5.0014, dt: 1262.86ms, fracRes: 0.6014, norm(attn): 0.1182, norm(output): 0.2373, norm(x): 0.8460, norm(y): 1.0084, norm:1.1429, tok/sec: 103789.51, flops:90.89, batch-reuse:1
@ 4191 train 4.9820 , allloss: 5.0019, dt: 1270.07ms, fracRes: 0.6014, norm(attn): 0.1187, norm(output): 0.2363, norm(x): 0.8436, norm(y): 1.0084, norm:1.2068, tok/sec: 103200.55, flops:90.37, batch-reuse:1
@ 4192 train 4.9805 , allloss: 5.0004, dt: 1261.41ms, fracRes: 0.6005, norm(attn): 0.1201, norm(output): 0.2383, norm(x): 0.8427, norm(y): 1.0083, norm:1.3152, tok/sec: 103908.72, flops:90.99, batch-reuse:1
@ 4193 train 4.9636 , allloss: 4.9838, dt: 1249.69ms, fracRes: 0.6007, norm(attn): 0.1201, norm(output): 0.2383, norm(x): 0.8409, norm(y): 1.0082, norm:1.4679, tok/sec: 104883.85, flops:91.85, batch-reuse:1
@ 4194 train 4.9386 , allloss: 4.9595, dt: 1248.55ms, fracRes: 0.6009, norm(attn): 0.1191, norm(output): 0.2363, norm(x): 0.8383, norm(y): 1.0083, norm:1.2855, tok/sec: 104979.38, flops:91.93, batch-reuse:1
@ 4195 train 4.9225 , allloss: 4.9416, dt: 1243.77ms, fracRes: 0.6009, norm(attn): 0.1187, norm(output): 0.2373, norm(x): 0.8401, norm(y): 1.0083, norm:1.2954, tok/sec: 105382.88, flops:92.28, batch-reuse:1
@ 4196 train 5.0398 , allloss: 5.0587, dt: 1262.90ms, fracRes: 0.6011, norm(attn): 0.1187, norm(output): 0.2402, norm(x): 0.8417, norm(y): 1.0083, norm:1.1948, tok/sec: 103786.55, flops:90.88, batch-reuse:1
@ 4197 train 4.9688 , allloss: 4.9879, dt: 1258.80ms, fracRes: 0.5998, norm(attn): 0.1201, norm(output): 0.2393, norm(x): 0.8429, norm(y): 1.0082, norm:1.4952, tok/sec: 104124.25, flops:91.18, batch-reuse:1
@ 4198 train 4.9814 , allloss: 5.0005, dt: 1284.28ms, fracRes: 0.5989, norm(attn): 0.1216, norm(output): 0.2412, norm(x): 0.8433, norm(y): 1.0082, norm:1.2414, tok/sec: 102059.08, flops:89.37, batch-reuse:1
@ 4199 train 5.0826 , allloss: 5.1018, dt: 1264.89ms, fracRes: 0.6001, norm(attn): 0.1211, norm(output): 0.2402, norm(x): 0.8465, norm(y): 1.0082, norm:1.4276, tok/sec: 103622.85, flops:90.74, batch-reuse:1
@ 4200 train 5.1298 , allloss: 5.1492, dt: 1285.16ms, fracRes: 0.6013, norm(attn): 0.1187, norm(output): 0.2383, norm(x): 0.8469, norm(y): 1.0084, norm:1.2145, tok/sec: 101988.70, flops:89.31, batch-reuse:1
@ 4201 train 4.9444 , allloss: 4.9629, dt: 1273.87ms, fracRes: 0.6007, norm(attn): 0.1187, norm(output): 0.2373, norm(x): 0.8470, norm(y): 1.0084, norm:1.0910, tok/sec: 102892.65, flops:90.10, batch-reuse:1
@ 4202 train 5.0063 , allloss: 5.0251, dt: 1271.22ms, fracRes: 0.6008, norm(attn): 0.1187, norm(output): 0.2393, norm(x): 0.8447, norm(y): 1.0083, norm:1.3365, tok/sec: 103106.85, flops:90.29, batch-reuse:1
@ 4203 train 4.8936 , allloss: 4.9162, dt: 1237.62ms, fracRes: 0.6013, norm(attn): 0.1187, norm(output): 0.2402, norm(x): 0.8448, norm(y): 1.0081, norm:1.6395, tok/sec: 105906.90, flops:92.74, batch-reuse:1
@ 4204 train 5.0679 , allloss: 5.0880, dt: 1268.92ms, fracRes: 0.6007, norm(attn): 0.1191, norm(output): 0.2402, norm(x): 0.8461, norm(y): 1.0083, norm:1.3066, tok/sec: 103293.76, flops:90.45, batch-reuse:1
@ 4205 train 4.9523 , allloss: 4.9723, dt: 1268.99ms, fracRes: 0.5998, norm(attn): 0.1201, norm(output): 0.2402, norm(x): 0.8436, norm(y): 1.0083, norm:1.3813, tok/sec: 103288.61, flops:90.45, batch-reuse:1
@ 4206 train 4.9912 , allloss: 5.0099, dt: 1264.64ms, fracRes: 0.6002, norm(attn): 0.1206, norm(output): 0.2393, norm(x): 0.8419, norm(y): 1.0083, norm:1.0945, tok/sec: 103643.66, flops:90.76, batch-reuse:1
@ 4207 train 5.0766 , allloss: 5.0959, dt: 1252.24ms, fracRes: 0.6008, norm(attn): 0.1201, norm(output): 0.2383, norm(x): 0.8400, norm(y): 1.0082, norm:1.1828, tok/sec: 104670.06, flops:91.66, batch-reuse:1
@ 4208 train 4.9871 , allloss: 5.0065, dt: 1268.99ms, fracRes: 0.5998, norm(attn): 0.1196, norm(output): 0.2383, norm(x): 0.8405, norm(y): 1.0083, norm:1.2381, tok/sec: 103288.15, flops:90.45, batch-reuse:1
@ 4209 train 5.0206 , allloss: 5.0395, dt: 1261.33ms, fracRes: 0.5995, norm(attn): 0.1201, norm(output): 0.2383, norm(x): 0.8395, norm(y): 1.0083, norm:1.1444, tok/sec: 103915.72, flops:91.00, batch-reuse:1
@ 4210 train 5.1297 , allloss: 5.1489, dt: 1262.97ms, fracRes: 0.6001, norm(attn): 0.1201, norm(output): 0.2402, norm(x): 0.8394, norm(y): 1.0082, norm:1.2931, tok/sec: 103781.13, flops:90.88, batch-reuse:1
@ 4211 train 4.9329 , allloss: 4.9513, dt: 1261.37ms, fracRes: 0.6013, norm(attn): 0.1196, norm(output): 0.2373, norm(x): 0.8446, norm(y): 1.0084, norm:1.3037, tok/sec: 103912.10, flops:90.99, batch-reuse:1
@ 4212 train 4.9632 , allloss: 4.9825, dt: 1269.70ms, fracRes: 0.6012, norm(attn): 0.1201, norm(output): 0.2363, norm(x): 0.8447, norm(y): 1.0084, norm:1.2328, tok/sec: 103231.03, flops:90.40, batch-reuse:1
@ 4213 train 4.8557 , allloss: 4.8755, dt: 1285.24ms, fracRes: 0.6002, norm(attn): 0.1196, norm(output): 0.2383, norm(x): 0.8424, norm(y): 1.0084, norm:1.1501, tok/sec: 101982.33, flops:89.30, batch-reuse:1
@ 4214 train 4.9139 , allloss: 4.9329, dt: 1274.19ms, fracRes: 0.5995, norm(attn): 0.1196, norm(output): 0.2393, norm(x): 0.8400, norm(y): 1.0083, norm:1.2480, tok/sec: 102867.06, flops:90.08, batch-reuse:1
@ 4215 train 4.9099 , allloss: 4.9292, dt: 1265.54ms, fracRes: 0.5993, norm(attn): 0.1196, norm(output): 0.2393, norm(x): 0.8402, norm(y): 1.0084, norm:1.2366, tok/sec: 103570.42, flops:90.70, batch-reuse:1
@ 4216 train 4.9163 , allloss: 4.9352, dt: 1287.94ms, fracRes: 0.5994, norm(attn): 0.1211, norm(output): 0.2383, norm(x): 0.8420, norm(y): 1.0083, norm:1.4254, tok/sec: 101768.34, flops:89.12, batch-reuse:1
@ 4217 train 4.8916 , allloss: 4.9114, dt: 1274.77ms, fracRes: 0.5995, norm(attn): 0.1191, norm(output): 0.2383, norm(x): 0.8402, norm(y): 1.0083, norm:1.4016, tok/sec: 102819.79, flops:90.04, batch-reuse:1
@ 4218 train 4.8796 , allloss: 4.8988, dt: 1266.82ms, fracRes: 0.6003, norm(attn): 0.1201, norm(output): 0.2373, norm(x): 0.8412, norm(y): 1.0084, norm:1.2658, tok/sec: 103465.16, flops:90.60, batch-reuse:1
@ 4219 train 4.9655 , allloss: 4.9844, dt: 1290.71ms, fracRes: 0.6002, norm(attn): 0.1206, norm(output): 0.2373, norm(x): 0.8416, norm(y): 1.0083, norm:1.4394, tok/sec: 101550.41, flops:88.93, batch-reuse:1
@ 4220 train 4.9204 , allloss: 4.9410, dt: 1280.88ms, fracRes: 0.6008, norm(attn): 0.1191, norm(output): 0.2373, norm(x): 0.8406, norm(y): 1.0083, norm:1.2535, tok/sec: 102329.46, flops:89.61, batch-reuse:1
@ 4221 train 4.9708 , allloss: 4.9903, dt: 1265.73ms, fracRes: 0.6002, norm(attn): 0.1196, norm(output): 0.2363, norm(x): 0.8381, norm(y): 1.0083, norm:1.2415, tok/sec: 103554.81, flops:90.68, batch-reuse:1
@ 4222 train 4.8237 , allloss: 4.8421, dt: 1277.85ms, fracRes: 0.5994, norm(attn): 0.1187, norm(output): 0.2383, norm(x): 0.8385, norm(y): 1.0084, norm:1.5333, tok/sec: 102572.20, flops:89.82, batch-reuse:1
@ 4223 train 4.8951 , allloss: 4.9175, dt: 1267.96ms, fracRes: 0.6007, norm(attn): 0.1191, norm(output): 0.2383, norm(x): 0.8396, norm(y): 1.0083, norm:1.3230, tok/sec: 103372.40, flops:90.52, batch-reuse:1
@ 4224 train 4.8292 , allloss: 4.8498, dt: 1289.10ms, fracRes: 0.5984, norm(attn): 0.1216, norm(output): 0.2393, norm(x): 0.8373, norm(y): 1.0084, norm:1.4533, tok/sec: 101677.48, flops:89.04, batch-reuse:1
@ 4225 train 4.9326 , allloss: 4.9528, dt: 1282.77ms, fracRes: 0.5990, norm(attn): 0.1206, norm(output): 0.2393, norm(x): 0.8353, norm(y): 1.0083, norm:1.3439, tok/sec: 102178.68, flops:89.48, batch-reuse:1
@ 4226 train 4.9977 , allloss: 5.0181, dt: 1278.03ms, fracRes: 0.6002, norm(attn): 0.1201, norm(output): 0.2393, norm(x): 0.8350, norm(y): 1.0082, norm:1.2706, tok/sec: 102557.91, flops:89.81, batch-reuse:1
@ 4227 train 4.9412 , allloss: 4.9608, dt: 1247.45ms, fracRes: 0.6003, norm(attn): 0.1187, norm(output): 0.2363, norm(x): 0.8346, norm(y): 1.0083, norm:1.2377, tok/sec: 105071.74, flops:92.01, batch-reuse:1
@ 4228 train 5.1408 , allloss: 5.1603, dt: 1264.54ms, fracRes: 0.6007, norm(attn): 0.1196, norm(output): 0.2383, norm(x): 0.8332, norm(y): 1.0082, norm:1.3317, tok/sec: 103651.57, flops:90.77, batch-reuse:1
@ 4229 train 5.0296 , allloss: 5.0504, dt: 1283.74ms, fracRes: 0.6014, norm(attn): 0.1196, norm(output): 0.2363, norm(x): 0.8328, norm(y): 1.0082, norm:1.4750, tok/sec: 102101.40, flops:89.41, batch-reuse:1
@ 4230 train 4.8934 , allloss: 4.9117, dt: 1283.15ms, fracRes: 0.6009, norm(attn): 0.1191, norm(output): 0.2363, norm(x): 0.8378, norm(y): 1.0084, norm:1.4095, tok/sec: 102148.96, flops:89.45, batch-reuse:1
@ 4231 train 4.9177 , allloss: 4.9373, dt: 1254.72ms, fracRes: 0.6009, norm(attn): 0.1182, norm(output): 0.2363, norm(x): 0.8359, norm(y): 1.0084, norm:1.2103, tok/sec: 104463.45, flops:91.48, batch-reuse:1
@ 4232 train 4.9921 , allloss: 5.0125, dt: 1273.93ms, fracRes: 0.6003, norm(attn): 0.1187, norm(output): 0.2363, norm(x): 0.8349, norm(y): 1.0084, norm:1.1136, tok/sec: 102888.12, flops:90.10, batch-reuse:1
@ 4233 train 4.9807 , allloss: 5.0015, dt: 1289.68ms, fracRes: 0.5992, norm(attn): 0.1201, norm(output): 0.2363, norm(x): 0.8324, norm(y): 1.0084, norm:1.0960, tok/sec: 101631.43, flops:89.00, batch-reuse:1
@ 4234 train 4.9703 , allloss: 4.9901, dt: 1259.38ms, fracRes: 0.6006, norm(attn): 0.1187, norm(output): 0.2354, norm(x): 0.8378, norm(y): 1.0085, norm:1.3384, tok/sec: 104076.42, flops:91.14, batch-reuse:1
@ 4235 train 4.9375 , allloss: 4.9559, dt: 1275.59ms, fracRes: 0.6008, norm(attn): 0.1187, norm(output): 0.2354, norm(x): 0.8368, norm(y): 1.0085, norm:1.6534, tok/sec: 102754.25, flops:89.98, batch-reuse:1
@ 4236 train 5.1056 , allloss: 5.1253, dt: 1295.20ms, fracRes: 0.6031, norm(attn): 0.1177, norm(output): 0.2363, norm(x): 0.8358, norm(y): 1.0085, norm:1.5749, tok/sec: 101198.50, flops:88.62, batch-reuse:1
@ 4237 train 4.9814 , allloss: 5.0023, dt: 1275.48ms, fracRes: 0.6012, norm(attn): 0.1187, norm(output): 0.2354, norm(x): 0.8336, norm(y): 1.0084, norm:1.6652, tok/sec: 102762.99, flops:89.99, batch-reuse:1
@ 4238 train 4.9990 , allloss: 5.0186, dt: 1270.34ms, fracRes: 0.5990, norm(attn): 0.1201, norm(output): 0.2383, norm(x): 0.8313, norm(y): 1.0083, norm:1.6824, tok/sec: 103178.52, flops:90.35, batch-reuse:1
@ 4239 train 4.9121 , allloss: 4.9317, dt: 1264.95ms, fracRes: 0.5983, norm(attn): 0.1191, norm(output): 0.2383, norm(x): 0.8353, norm(y): 1.0083, norm:1.2486, tok/sec: 103618.05, flops:90.74, batch-reuse:1
@ 4240 train 4.9430 , allloss: 4.9631, dt: 1295.07ms, fracRes: 0.6001, norm(attn): 0.1187, norm(output): 0.2373, norm(x): 0.8375, norm(y): 1.0083, norm:1.3252, tok/sec: 101208.32, flops:88.63, batch-reuse:1
@ 4241 train 4.9945 , allloss: 5.0156, dt: 1293.31ms, fracRes: 0.6007, norm(attn): 0.1182, norm(output): 0.2373, norm(x): 0.8372, norm(y): 1.0083, norm:1.2366, tok/sec: 101346.07, flops:88.75, batch-reuse:1
@ 4242 train 5.0188 , allloss: 5.0382, dt: 1262.86ms, fracRes: 0.5996, norm(attn): 0.1201, norm(output): 0.2402, norm(x): 0.8397, norm(y): 1.0081, norm:1.2843, tok/sec: 103789.71, flops:90.89, batch-reuse:1
@ 4243 train 4.9174 , allloss: 4.9366, dt: 1282.25ms, fracRes: 0.6005, norm(attn): 0.1196, norm(output): 0.2383, norm(x): 0.8428, norm(y): 1.0084, norm:1.5278, tok/sec: 102220.36, flops:89.51, batch-reuse:1
@ 4244 train 4.7985 , allloss: 4.8176, dt: 1264.05ms, fracRes: 0.6002, norm(attn): 0.1196, norm(output): 0.2373, norm(x): 0.8425, norm(y): 1.0085, norm:1.3530, tok/sec: 103692.45, flops:90.80, batch-reuse:1
@ 4245 train 4.8408 , allloss: 4.8599, dt: 1266.98ms, fracRes: 0.6005, norm(attn): 0.1191, norm(output): 0.2383, norm(x): 0.8426, norm(y): 1.0084, norm:1.2661, tok/sec: 103452.68, flops:90.59, batch-reuse:1
@ 4246 train 5.1915 , allloss: 5.2103, dt: 1275.08ms, fracRes: 0.6034, norm(attn): 0.1172, norm(output): 0.2363, norm(x): 0.8473, norm(y): 1.0085, norm:1.8295, tok/sec: 102795.41, flops:90.02, batch-reuse:1
@ 4247 train 4.9497 , allloss: 4.9696, dt: 1251.09ms, fracRes: 0.6019, norm(attn): 0.1182, norm(output): 0.2354, norm(x): 0.8412, norm(y): 1.0085, norm:1.7954, tok/sec: 104765.88, flops:91.74, batch-reuse:1
@ 4248 train 4.9688 , allloss: 4.9881, dt: 1290.94ms, fracRes: 0.6011, norm(attn): 0.1187, norm(output): 0.2373, norm(x): 0.8434, norm(y): 1.0083, norm:1.3113, tok/sec: 101531.91, flops:88.91, batch-reuse:1
@ 4249 train 4.9224 , allloss: 4.9416, dt: 1262.10ms, fracRes: 0.5993, norm(attn): 0.1216, norm(output): 0.2422, norm(x): 0.8411, norm(y): 1.0083, norm:1.2024, tok/sec: 103852.23, flops:90.94, batch-reuse:1
@ 4250 train 4.8558 , allloss: 4.8766, dt: 1270.91ms, fracRes: 0.5983, norm(attn): 0.1230, norm(output): 0.2432, norm(x): 0.8398, norm(y): 1.0084, norm:1.2556, tok/sec: 103132.28, flops:90.31, batch-reuse:1
@ 4251 train 4.9627 , allloss: 4.9826, dt: 1260.87ms, fracRes: 0.5994, norm(attn): 0.1230, norm(output): 0.2402, norm(x): 0.8421, norm(y): 1.0084, norm:1.1786, tok/sec: 103953.97, flops:91.03, batch-reuse:1
@ 4252 train 4.8197 , allloss: 4.8400, dt: 1272.84ms, fracRes: 0.6008, norm(attn): 0.1206, norm(output): 0.2393, norm(x): 0.8435, norm(y): 1.0085, norm:1.4919, tok/sec: 102975.75, flops:90.17, batch-reuse:1
@ 4253 train 4.8601 , allloss: 4.8786, dt: 1249.47ms, fracRes: 0.6022, norm(attn): 0.1187, norm(output): 0.2383, norm(x): 0.8460, norm(y): 1.0085, norm:1.1961, tok/sec: 104901.86, flops:91.86, batch-reuse:1
@ 4254 train 4.9338 , allloss: 4.9531, dt: 1262.15ms, fracRes: 0.6020, norm(attn): 0.1187, norm(output): 0.2383, norm(x): 0.8466, norm(y): 1.0084, norm:1.1845, tok/sec: 103848.43, flops:90.94, batch-reuse:1
@ 4255 train 4.8807 , allloss: 4.9003, dt: 1283.61ms, fracRes: 0.6003, norm(attn): 0.1211, norm(output): 0.2402, norm(x): 0.8447, norm(y): 1.0084, norm:1.2164, tok/sec: 102112.36, flops:89.42, batch-reuse:1
@ 4256 train 4.8637 , allloss: 4.8849, dt: 1307.51ms, fracRes: 0.5995, norm(attn): 0.1221, norm(output): 0.2402, norm(x): 0.8436, norm(y): 1.0084, norm:1.4401, tok/sec: 100245.49, flops:87.78, batch-reuse:1
@ 4257 train 4.8715 , allloss: 4.8911, dt: 1317.97ms, fracRes: 0.5997, norm(attn): 0.1201, norm(output): 0.2402, norm(x): 0.8442, norm(y): 1.0085, norm:1.3824, tok/sec: 99449.75, flops:87.09, batch-reuse:1
@ 4258 train 4.9715 , allloss: 4.9910, dt: 1265.89ms, fracRes: 0.6007, norm(attn): 0.1182, norm(output): 0.2383, norm(x): 0.8437, norm(y): 1.0085, norm:1.3092, tok/sec: 103541.29, flops:90.67, batch-reuse:1
@ 4259 train 4.9671 , allloss: 4.9862, dt: 1272.26ms, fracRes: 0.6013, norm(attn): 0.1177, norm(output): 0.2363, norm(x): 0.8421, norm(y): 1.0085, norm:1.5301, tok/sec: 103023.20, flops:90.22, batch-reuse:1
@ 4260 train 5.0363 , allloss: 5.0559, dt: 1246.75ms, fracRes: 0.6005, norm(attn): 0.1182, norm(output): 0.2383, norm(x): 0.8424, norm(y): 1.0084, norm:1.3148, tok/sec: 105131.01, flops:92.06, batch-reuse:1
@ 4261 train 5.1850 , allloss: 5.2041, dt: 1267.20ms, fracRes: 0.6011, norm(attn): 0.1187, norm(output): 0.2383, norm(x): 0.8440, norm(y): 1.0083, norm:1.4047, tok/sec: 103434.17, flops:90.58, batch-reuse:1
@ 4262 train 5.0311 , allloss: 5.0500, dt: 1283.73ms, fracRes: 0.6002, norm(attn): 0.1196, norm(output): 0.2402, norm(x): 0.8418, norm(y): 1.0083, norm:1.2595, tok/sec: 102102.35, flops:89.41, batch-reuse:1
@ 4263 train 5.0765 , allloss: 5.0951, dt: 1267.29ms, fracRes: 0.6006, norm(attn): 0.1211, norm(output): 0.2383, norm(x): 0.8443, norm(y): 1.0084, norm:1.2827, tok/sec: 103427.11, flops:90.57, batch-reuse:1
@ 4264 train 5.2196 , allloss: 5.2392, dt: 1251.48ms, fracRes: 0.6005, norm(attn): 0.1211, norm(output): 0.2383, norm(x): 0.8422, norm(y): 1.0081, norm:1.6528, tok/sec: 104733.81, flops:91.71, batch-reuse:1
@ 4265 train 5.1910 , allloss: 5.2098, dt: 1252.51ms, fracRes: 0.6012, norm(attn): 0.1191, norm(output): 0.2383, norm(x): 0.8436, norm(y): 1.0082, norm:1.6842, tok/sec: 104647.08, flops:91.64, batch-reuse:1
@ 4266 train 5.0408 , allloss: 5.0601, dt: 1251.77ms, fracRes: 0.5997, norm(attn): 0.1206, norm(output): 0.2402, norm(x): 0.8389, norm(y): 1.0082, norm:1.2001, tok/sec: 104709.03, flops:91.69, batch-reuse:1
@ 4267 train 5.1152 , allloss: 5.1348, dt: 1260.68ms, fracRes: 0.6004, norm(attn): 0.1201, norm(output): 0.2383, norm(x): 0.8397, norm(y): 1.0082, norm:1.4145, tok/sec: 103969.05, flops:91.04, batch-reuse:1
@ 4268 train 5.1288 , allloss: 5.1478, dt: 1287.05ms, fracRes: 0.6006, norm(attn): 0.1196, norm(output): 0.2393, norm(x): 0.8431, norm(y): 1.0084, norm:1.1725, tok/sec: 101839.18, flops:89.18, batch-reuse:1
@ 4269 train 5.1256 , allloss: 5.1453, dt: 1249.49ms, fracRes: 0.6007, norm(attn): 0.1201, norm(output): 0.2402, norm(x): 0.8446, norm(y): 1.0083, norm:1.4757, tok/sec: 104900.66, flops:91.86, batch-reuse:1
@ 4270 train 5.1344 , allloss: 5.1532, dt: 1263.52ms, fracRes: 0.6001, norm(attn): 0.1226, norm(output): 0.2451, norm(x): 0.8428, norm(y): 1.0081, norm:2.0231, tok/sec: 103735.73, flops:90.84, batch-reuse:1
@ 4271 train 5.0655 , allloss: 5.0846, dt: 1253.25ms, fracRes: 0.6026, norm(attn): 0.1182, norm(output): 0.2363, norm(x): 0.8486, norm(y): 1.0085, norm:1.9051, tok/sec: 104585.85, flops:91.58, batch-reuse:1
@ 4272 train 5.1519 , allloss: 5.1710, dt: 1253.90ms, fracRes: 0.6029, norm(attn): 0.1172, norm(output): 0.2383, norm(x): 0.8488, norm(y): 1.0085, norm:1.4107, tok/sec: 104531.44, flops:91.54, batch-reuse:1
@ 4273 train 5.1416 , allloss: 5.1614, dt: 1280.09ms, fracRes: 0.6026, norm(attn): 0.1182, norm(output): 0.2393, norm(x): 0.8478, norm(y): 1.0084, norm:1.7188, tok/sec: 102392.95, flops:89.66, batch-reuse:1
@ 4274 train 5.0727 , allloss: 5.0930, dt: 1258.19ms, fracRes: 0.6011, norm(attn): 0.1191, norm(output): 0.2383, norm(x): 0.8434, norm(y): 1.0084, norm:1.5052, tok/sec: 104175.03, flops:91.22, batch-reuse:1
@ 4275 train 5.0188 , allloss: 5.0385, dt: 1260.31ms, fracRes: 0.6010, norm(attn): 0.1201, norm(output): 0.2393, norm(x): 0.8418, norm(y): 1.0083, norm:1.6230, tok/sec: 103999.85, flops:91.07, batch-reuse:1
@ 4276 train 5.0357 , allloss: 5.0564, dt: 1296.14ms, fracRes: 0.6019, norm(attn): 0.1206, norm(output): 0.2412, norm(x): 0.8448, norm(y): 1.0083, norm:1.4527, tok/sec: 101125.25, flops:88.55, batch-reuse:1
@ 4277 train 5.0908 , allloss: 5.1095, dt: 1270.89ms, fracRes: 0.6012, norm(attn): 0.1196, norm(output): 0.2383, norm(x): 0.8460, norm(y): 1.0084, norm:1.2889, tok/sec: 103133.75, flops:90.31, batch-reuse:1
@ 4278 train 5.0622 , allloss: 5.0813, dt: 1236.50ms, fracRes: 0.6015, norm(attn): 0.1187, norm(output): 0.2402, norm(x): 0.8453, norm(y): 1.0084, norm:1.4210, tok/sec: 106002.85, flops:92.83, batch-reuse:1
@ 4279 train 5.0890 , allloss: 5.1076, dt: 1287.30ms, fracRes: 0.6017, norm(attn): 0.1187, norm(output): 0.2441, norm(x): 0.8501, norm(y): 1.0084, norm:1.4499, tok/sec: 101819.62, flops:89.16, batch-reuse:1
@ 4280 train 4.9837 , allloss: 5.0045, dt: 1312.41ms, fracRes: 0.6020, norm(attn): 0.1196, norm(output): 0.2402, norm(x): 0.8446, norm(y): 1.0083, norm:1.2288, tok/sec: 99871.18, flops:87.46, batch-reuse:1
@ 4281 train 5.0635 , allloss: 5.0840, dt: 1289.10ms, fracRes: 0.6007, norm(attn): 0.1201, norm(output): 0.2422, norm(x): 0.8419, norm(y): 1.0083, norm:1.1257, tok/sec: 101676.86, flops:89.04, batch-reuse:1
@ 4282 train 5.1085 , allloss: 5.1289, dt: 1312.78ms, fracRes: 0.6010, norm(attn): 0.1196, norm(output): 0.2383, norm(x): 0.8419, norm(y): 1.0084, norm:1.1383, tok/sec: 99843.38, flops:87.43, batch-reuse:1
@ 4283 train 5.2118 , allloss: 5.2307, dt: 1275.41ms, fracRes: 0.6018, norm(attn): 0.1191, norm(output): 0.2383, norm(x): 0.8434, norm(y): 1.0085, norm:1.3842, tok/sec: 102768.28, flops:89.99, batch-reuse:1
@ 4284 train 5.0802 , allloss: 5.0986, dt: 1264.64ms, fracRes: 0.6024, norm(attn): 0.1182, norm(output): 0.2373, norm(x): 0.8434, norm(y): 1.0085, norm:1.2472, tok/sec: 103643.35, flops:90.76, batch-reuse:1
@ 4285 train 5.0270 , allloss: 5.0461, dt: 1309.26ms, fracRes: 0.6021, norm(attn): 0.1191, norm(output): 0.2383, norm(x): 0.8443, norm(y): 1.0084, norm:1.3440, tok/sec: 100111.14, flops:87.67, batch-reuse:1
@ 4286 train 5.1061 , allloss: 5.1250, dt: 1267.45ms, fracRes: 0.6010, norm(attn): 0.1201, norm(output): 0.2402, norm(x): 0.8440, norm(y): 1.0084, norm:1.2242, tok/sec: 103413.80, flops:90.56, batch-reuse:1
@ 4287 train 5.0512 , allloss: 5.0704, dt: 1268.40ms, fracRes: 0.6000, norm(attn): 0.1216, norm(output): 0.2432, norm(x): 0.8430, norm(y): 1.0084, norm:1.3926, tok/sec: 103336.35, flops:90.49, batch-reuse:1
@ 4288 train 5.0329 , allloss: 5.0522, dt: 1252.98ms, fracRes: 0.6004, norm(attn): 0.1221, norm(output): 0.2402, norm(x): 0.8433, norm(y): 1.0084, norm:1.1713, tok/sec: 104608.49, flops:91.60, batch-reuse:1
@ 4289 train 5.0926 , allloss: 5.1109, dt: 1283.75ms, fracRes: 0.6011, norm(attn): 0.1226, norm(output): 0.2402, norm(x): 0.8441, norm(y): 1.0083, norm:1.2084, tok/sec: 102101.12, flops:89.41, batch-reuse:1
@ 4290 train 5.0458 , allloss: 5.0646, dt: 1282.24ms, fracRes: 0.6020, norm(attn): 0.1201, norm(output): 0.2402, norm(x): 0.8469, norm(y): 1.0084, norm:1.2723, tok/sec: 102220.82, flops:89.51, batch-reuse:1
@ 4291 train 5.0942 , allloss: 5.1133, dt: 1267.28ms, fracRes: 0.6025, norm(attn): 0.1191, norm(output): 0.2393, norm(x): 0.8465, norm(y): 1.0085, norm:1.1696, tok/sec: 103428.18, flops:90.57, batch-reuse:1
@ 4292 train 5.1293 , allloss: 5.1484, dt: 1251.56ms, fracRes: 0.6024, norm(attn): 0.1191, norm(output): 0.2383, norm(x): 0.8458, norm(y): 1.0084, norm:1.1385, tok/sec: 104727.06, flops:91.71, batch-reuse:1
@ 4293 train 5.0147 , allloss: 5.0334, dt: 1286.18ms, fracRes: 0.6006, norm(attn): 0.1230, norm(output): 0.2422, norm(x): 0.8426, norm(y): 1.0083, norm:1.1492, tok/sec: 101908.28, flops:89.24, batch-reuse:1
@ 4294 train 4.9276 , allloss: 4.9477, dt: 1258.07ms, fracRes: 0.5997, norm(attn): 0.1240, norm(output): 0.2422, norm(x): 0.8408, norm(y): 1.0083, norm:1.3701, tok/sec: 104184.84, flops:91.23, batch-reuse:1
@ 4295 train 5.1487 , allloss: 5.1680, dt: 1266.63ms, fracRes: 0.6007, norm(attn): 0.1206, norm(output): 0.2393, norm(x): 0.8400, norm(y): 1.0083, norm:1.2858, tok/sec: 103480.74, flops:90.62, batch-reuse:1
@ 4296 train 5.0707 , allloss: 5.0896, dt: 1265.82ms, fracRes: 0.6009, norm(attn): 0.1191, norm(output): 0.2402, norm(x): 0.8400, norm(y): 1.0084, norm:1.2750, tok/sec: 103546.93, flops:90.67, batch-reuse:1
@ 4297 train 5.1306 , allloss: 5.1497, dt: 1270.30ms, fracRes: 0.6015, norm(attn): 0.1182, norm(output): 0.2393, norm(x): 0.8428, norm(y): 1.0084, norm:1.1692, tok/sec: 103181.97, flops:90.35, batch-reuse:1
@ 4298 train 5.0997 , allloss: 5.1177, dt: 1281.07ms, fracRes: 0.6003, norm(attn): 0.1206, norm(output): 0.2422, norm(x): 0.8436, norm(y): 1.0084, norm:1.2073, tok/sec: 102314.81, flops:89.60, batch-reuse:1
@ 4299 train 5.0883 , allloss: 5.1073, dt: 1272.47ms, fracRes: 0.5993, norm(attn): 0.1221, norm(output): 0.2441, norm(x): 0.8420, norm(y): 1.0083, norm:1.2883, tok/sec: 103005.83, flops:90.20, batch-reuse:1
@ 4300 train 5.0603 , allloss: 5.0803, dt: 1258.65ms, fracRes: 0.5992, norm(attn): 0.1230, norm(output): 0.2441, norm(x): 0.8414, norm(y): 1.0083, norm:1.3967, tok/sec: 104137.30, flops:91.19, batch-reuse:1
@ 4301 train 4.9681 , allloss: 4.9880, dt: 1300.31ms, fracRes: 0.6000, norm(attn): 0.1226, norm(output): 0.2422, norm(x): 0.8401, norm(y): 1.0084, norm:1.2469, tok/sec: 100800.77, flops:88.27, batch-reuse:1
@ 4302 train 5.0136 , allloss: 5.0323, dt: 1250.48ms, fracRes: 0.5997, norm(attn): 0.1230, norm(output): 0.2432, norm(x): 0.8408, norm(y): 1.0084, norm:1.2847, tok/sec: 104817.10, flops:91.79, batch-reuse:1
@ 4303 train 5.1037 , allloss: 5.1229, dt: 1268.02ms, fracRes: 0.6011, norm(attn): 0.1201, norm(output): 0.2393, norm(x): 0.8430, norm(y): 1.0083, norm:1.0847, tok/sec: 103367.42, flops:90.52, batch-reuse:1
@ 4304 train 5.0138 , allloss: 5.0333, dt: 1268.04ms, fracRes: 0.6010, norm(attn): 0.1206, norm(output): 0.2393, norm(x): 0.8421, norm(y): 1.0084, norm:1.3242, tok/sec: 103365.81, flops:90.52, batch-reuse:1
@ 4305 train 5.0460 , allloss: 5.0654, dt: 1289.87ms, fracRes: 0.6005, norm(attn): 0.1201, norm(output): 0.2402, norm(x): 0.8406, norm(y): 1.0084, norm:1.0924, tok/sec: 101616.36, flops:88.98, batch-reuse:1
@ 4306 train 5.0589 , allloss: 5.0780, dt: 1315.04ms, fracRes: 0.5997, norm(attn): 0.1230, norm(output): 0.2393, norm(x): 0.8370, norm(y): 1.0083, norm:1.2111, tok/sec: 99671.45, flops:87.28, batch-reuse:1
@ 4307 train 4.9831 , allloss: 5.0021, dt: 1296.02ms, fracRes: 0.6014, norm(attn): 0.1221, norm(output): 0.2393, norm(x): 0.8384, norm(y): 1.0084, norm:1.1445, tok/sec: 101134.37, flops:88.56, batch-reuse:1
@ 4308 train 4.9546 , allloss: 4.9735, dt: 1286.33ms, fracRes: 0.6018, norm(attn): 0.1187, norm(output): 0.2383, norm(x): 0.8409, norm(y): 1.0084, norm:1.4018, tok/sec: 101896.26, flops:89.23, batch-reuse:1
@ 4309 train 5.0031 , allloss: 5.0227, dt: 1250.99ms, fracRes: 0.6014, norm(attn): 0.1201, norm(output): 0.2402, norm(x): 0.8401, norm(y): 1.0083, norm:1.2228, tok/sec: 104774.75, flops:91.75, batch-reuse:1
@ 4310 train 4.9836 , allloss: 5.0030, dt: 1275.57ms, fracRes: 0.6003, norm(attn): 0.1216, norm(output): 0.2402, norm(x): 0.8396, norm(y): 1.0084, norm:1.2570, tok/sec: 102755.68, flops:89.98, batch-reuse:1
@ 4311 train 5.0631 , allloss: 5.0819, dt: 1285.44ms, fracRes: 0.6007, norm(attn): 0.1211, norm(output): 0.2402, norm(x): 0.8434, norm(y): 1.0084, norm:1.2853, tok/sec: 101966.47, flops:89.29, batch-reuse:1
@ 4312 train 5.0353 , allloss: 5.0555, dt: 1274.70ms, fracRes: 0.6002, norm(attn): 0.1230, norm(output): 0.2422, norm(x): 0.8402, norm(y): 1.0082, norm:1.2861, tok/sec: 102825.65, flops:90.04, batch-reuse:1
@ 4313 train 5.0122 , allloss: 5.0318, dt: 1271.47ms, fracRes: 0.5999, norm(attn): 0.1221, norm(output): 0.2402, norm(x): 0.8380, norm(y): 1.0082, norm:1.1581, tok/sec: 103087.38, flops:90.27, batch-reuse:1
@ 4314 train 5.0586 , allloss: 5.0791, dt: 1255.89ms, fracRes: 0.6007, norm(attn): 0.1206, norm(output): 0.2412, norm(x): 0.8391, norm(y): 1.0082, norm:1.6301, tok/sec: 104365.58, flops:91.39, batch-reuse:1
@ 4315 train 5.0539 , allloss: 5.0727, dt: 1258.99ms, fracRes: 0.6005, norm(attn): 0.1196, norm(output): 0.2393, norm(x): 0.8390, norm(y): 1.0083, norm:1.4877, tok/sec: 104108.94, flops:91.17, batch-reuse:1
@ 4316 train 5.0574 , allloss: 5.0761, dt: 1255.83ms, fracRes: 0.6000, norm(attn): 0.1221, norm(output): 0.2422, norm(x): 0.8364, norm(y): 1.0083, norm:1.2554, tok/sec: 104370.85, flops:91.40, batch-reuse:1
@ 4317 train 5.0494 , allloss: 5.0685, dt: 1285.08ms, fracRes: 0.6003, norm(attn): 0.1226, norm(output): 0.2402, norm(x): 0.8364, norm(y): 1.0083, norm:1.1413, tok/sec: 101995.53, flops:89.32, batch-reuse:1
@ 4318 train 4.9959 , allloss: 5.0149, dt: 1262.94ms, fracRes: 0.6005, norm(attn): 0.1221, norm(output): 0.2383, norm(x): 0.8380, norm(y): 1.0084, norm:1.1923, tok/sec: 103783.32, flops:90.88, batch-reuse:1
@ 4319 train 5.0500 , allloss: 5.0690, dt: 1272.18ms, fracRes: 0.6005, norm(attn): 0.1201, norm(output): 0.2383, norm(x): 0.8372, norm(y): 1.0084, norm:1.4421, tok/sec: 103029.75, flops:90.22, batch-reuse:1
@ 4320 train 5.0956 , allloss: 5.1149, dt: 1276.12ms, fracRes: 0.6013, norm(attn): 0.1191, norm(output): 0.2373, norm(x): 0.8373, norm(y): 1.0084, norm:1.1571, tok/sec: 102711.52, flops:89.94, batch-reuse:1
@ 4321 train 5.0254 , allloss: 5.0441, dt: 1279.45ms, fracRes: 0.6005, norm(attn): 0.1187, norm(output): 0.2383, norm(x): 0.8367, norm(y): 1.0084, norm:1.3241, tok/sec: 102444.37, flops:89.71, batch-reuse:1
@ 4322 train 5.0342 , allloss: 5.0533, dt: 1287.41ms, fracRes: 0.5998, norm(attn): 0.1206, norm(output): 0.2383, norm(x): 0.8348, norm(y): 1.0084, norm:1.4100, tok/sec: 101810.27, flops:89.15, batch-reuse:1
@ 4323 train 5.0603 , allloss: 5.0788, dt: 1292.88ms, fracRes: 0.5998, norm(attn): 0.1206, norm(output): 0.2383, norm(x): 0.8348, norm(y): 1.0085, norm:1.3284, tok/sec: 101380.03, flops:88.78, batch-reuse:1
@ 4324 train 5.0842 , allloss: 5.1037, dt: 1281.43ms, fracRes: 0.6004, norm(attn): 0.1216, norm(output): 0.2373, norm(x): 0.8329, norm(y): 1.0085, norm:1.2162, tok/sec: 102285.57, flops:89.57, batch-reuse:1
@ 4325 train 5.1507 , allloss: 5.1701, dt: 1287.29ms, fracRes: 0.6003, norm(attn): 0.1196, norm(output): 0.2373, norm(x): 0.8313, norm(y): 1.0084, norm:1.1840, tok/sec: 101820.15, flops:89.16, batch-reuse:1
@ 4326 train 5.0533 , allloss: 5.0718, dt: 1270.29ms, fracRes: 0.6018, norm(attn): 0.1211, norm(output): 0.2363, norm(x): 0.8353, norm(y): 1.0085, norm:1.3076, tok/sec: 103182.82, flops:90.36, batch-reuse:1
@ 4327 train 4.9949 , allloss: 5.0139, dt: 1276.72ms, fracRes: 0.6014, norm(attn): 0.1211, norm(output): 0.2383, norm(x): 0.8343, norm(y): 1.0084, norm:1.1585, tok/sec: 102663.30, flops:89.90, batch-reuse:1
@ 4328 train 5.0234 , allloss: 5.0426, dt: 1282.70ms, fracRes: 0.6011, norm(attn): 0.1206, norm(output): 0.2383, norm(x): 0.8328, norm(y): 1.0083, norm:1.1051, tok/sec: 102184.22, flops:89.48, batch-reuse:1
@ 4329 train 4.9623 , allloss: 4.9820, dt: 1268.58ms, fracRes: 0.5987, norm(attn): 0.1230, norm(output): 0.2383, norm(x): 0.8292, norm(y): 1.0083, norm:1.1245, tok/sec: 103321.42, flops:90.48, batch-reuse:1
@ 4330 train 4.9988 , allloss: 5.0183, dt: 1269.30ms, fracRes: 0.5986, norm(attn): 0.1196, norm(output): 0.2373, norm(x): 0.8269, norm(y): 1.0083, norm:1.2449, tok/sec: 103263.06, flops:90.43, batch-reuse:1
@ 4331 train 5.0088 , allloss: 5.0279, dt: 1281.50ms, fracRes: 0.5985, norm(attn): 0.1201, norm(output): 0.2383, norm(x): 0.8278, norm(y): 1.0083, norm:1.2523, tok/sec: 102280.04, flops:89.57, batch-reuse:1
@ 4332 train 4.9525 , allloss: 4.9711, dt: 1268.55ms, fracRes: 0.5998, norm(attn): 0.1201, norm(output): 0.2393, norm(x): 0.8284, norm(y): 1.0083, norm:1.0849, tok/sec: 103324.08, flops:90.48, batch-reuse:1
@ 4333 train 5.0381 , allloss: 5.0561, dt: 1268.69ms, fracRes: 0.6007, norm(attn): 0.1187, norm(output): 0.2373, norm(x): 0.8325, norm(y): 1.0084, norm:1.2206, tok/sec: 103312.70, flops:90.47, batch-reuse:1
@ 4334 train 5.0436 , allloss: 5.0628, dt: 1283.58ms, fracRes: 0.6004, norm(attn): 0.1221, norm(output): 0.2363, norm(x): 0.8302, norm(y): 1.0083, norm:1.3364, tok/sec: 102114.47, flops:89.42, batch-reuse:1
@ 4335 train 5.0007 , allloss: 5.0198, dt: 1246.34ms, fracRes: 0.6001, norm(attn): 0.1230, norm(output): 0.2393, norm(x): 0.8325, norm(y): 1.0082, norm:1.1454, tok/sec: 105165.56, flops:92.09, batch-reuse:1
@ 4336 train 5.0049 , allloss: 5.0237, dt: 1266.83ms, fracRes: 0.6001, norm(attn): 0.1230, norm(output): 0.2373, norm(x): 0.8313, norm(y): 1.0083, norm:1.1872, tok/sec: 103464.95, flops:90.60, batch-reuse:1
@ 4337 train 5.0287 , allloss: 5.0487, dt: 1252.78ms, fracRes: 0.6002, norm(attn): 0.1221, norm(output): 0.2363, norm(x): 0.8297, norm(y): 1.0084, norm:1.1286, tok/sec: 104625.32, flops:91.62, batch-reuse:1
@ 4338 train 4.9468 , allloss: 4.9664, dt: 1254.03ms, fracRes: 0.5996, norm(attn): 0.1211, norm(output): 0.2363, norm(x): 0.8267, norm(y): 1.0084, norm:1.2232, tok/sec: 104520.59, flops:91.53, batch-reuse:1
@ 4339 train 4.9971 , allloss: 5.0165, dt: 1269.43ms, fracRes: 0.5988, norm(attn): 0.1211, norm(output): 0.2383, norm(x): 0.8255, norm(y): 1.0083, norm:1.0777, tok/sec: 103252.49, flops:90.42, batch-reuse:1
@ 4340 train 4.9768 , allloss: 4.9960, dt: 1252.62ms, fracRes: 0.5994, norm(attn): 0.1201, norm(output): 0.2354, norm(x): 0.8258, norm(y): 1.0084, norm:1.1648, tok/sec: 104637.96, flops:91.63, batch-reuse:1
@ 4341 train 5.1062 , allloss: 5.1264, dt: 1267.46ms, fracRes: 0.6003, norm(attn): 0.1216, norm(output): 0.2363, norm(x): 0.8261, norm(y): 1.0084, norm:1.2752, tok/sec: 103412.77, flops:90.56, batch-reuse:1
@ 4342 train 4.9862 , allloss: 5.0060, dt: 1273.78ms, fracRes: 0.6002, norm(attn): 0.1201, norm(output): 0.2373, norm(x): 0.8253, norm(y): 1.0083, norm:1.2627, tok/sec: 102899.73, flops:90.11, batch-reuse:1
@ 4343 train 5.0871 , allloss: 5.1060, dt: 1260.09ms, fracRes: 0.6007, norm(attn): 0.1206, norm(output): 0.2354, norm(x): 0.8267, norm(y): 1.0083, norm:1.4211, tok/sec: 104018.15, flops:91.09, batch-reuse:1
@ 4344 train 5.1161 , allloss: 5.1355, dt: 1265.52ms, fracRes: 0.6021, norm(attn): 0.1191, norm(output): 0.2354, norm(x): 0.8295, norm(y): 1.0084, norm:1.2582, tok/sec: 103571.72, flops:90.70, batch-reuse:1
@ 4345 train 4.9732 , allloss: 4.9921, dt: 1248.42ms, fracRes: 0.6004, norm(attn): 0.1191, norm(output): 0.2363, norm(x): 0.8262, norm(y): 1.0083, norm:1.2914, tok/sec: 104990.19, flops:91.94, batch-reuse:1
@ 4346 train 5.0137 , allloss: 5.0329, dt: 1258.07ms, fracRes: 0.5993, norm(attn): 0.1201, norm(output): 0.2363, norm(x): 0.8251, norm(y): 1.0084, norm:1.1485, tok/sec: 104185.06, flops:91.23, batch-reuse:1
@ 4347 train 5.0077 , allloss: 5.0277, dt: 1270.77ms, fracRes: 0.5987, norm(attn): 0.1201, norm(output): 0.2363, norm(x): 0.8241, norm(y): 1.0084, norm:1.2661, tok/sec: 103143.85, flops:90.32, batch-reuse:1
@ 4348 train 5.2080 , allloss: 5.2271, dt: 1279.27ms, fracRes: 0.6003, norm(attn): 0.1196, norm(output): 0.2363, norm(x): 0.8248, norm(y): 1.0083, norm:1.1963, tok/sec: 102458.63, flops:89.72, batch-reuse:1
@ 4349 train 5.1110 , allloss: 5.1296, dt: 1268.12ms, fracRes: 0.6006, norm(attn): 0.1191, norm(output): 0.2373, norm(x): 0.8260, norm(y): 1.0084, norm:1.5055, tok/sec: 103359.53, flops:90.51, batch-reuse:1
@ 4350 train 5.0311 , allloss: 5.0500, dt: 1249.99ms, fracRes: 0.6008, norm(attn): 0.1191, norm(output): 0.2363, norm(x): 0.8244, norm(y): 1.0084, norm:1.5077, tok/sec: 104858.26, flops:91.82, batch-reuse:1
@ 4351 train 5.0459 , allloss: 5.0644, dt: 1244.07ms, fracRes: 0.6006, norm(attn): 0.1187, norm(output): 0.2363, norm(x): 0.8258, norm(y): 1.0084, norm:1.4604, tok/sec: 105357.65, flops:92.26, batch-reuse:1
@ 4352 train 4.9117 , allloss: 4.9310, dt: 1242.43ms, fracRes: 0.6010, norm(attn): 0.1201, norm(output): 0.2383, norm(x): 0.8255, norm(y): 1.0083, norm:1.2288, tok/sec: 105496.45, flops:92.38, batch-reuse:1
@ 4353 train 4.9551 , allloss: 4.9746, dt: 1259.41ms, fracRes: 0.6011, norm(attn): 0.1201, norm(output): 0.2373, norm(x): 0.8267, norm(y): 1.0083, norm:1.0934, tok/sec: 104074.18, flops:91.14, batch-reuse:1
@ 4354 train 4.9511 , allloss: 4.9708, dt: 1249.90ms, fracRes: 0.6012, norm(attn): 0.1206, norm(output): 0.2363, norm(x): 0.8267, norm(y): 1.0085, norm:1.1479, tok/sec: 104865.92, flops:91.83, batch-reuse:1
@ 4355 train 4.9394 , allloss: 4.9587, dt: 1272.62ms, fracRes: 0.6002, norm(attn): 0.1226, norm(output): 0.2383, norm(x): 0.8265, norm(y): 1.0084, norm:1.2637, tok/sec: 102994.19, flops:90.19, batch-reuse:1
@ 4356 train 5.0169 , allloss: 5.0364, dt: 1268.52ms, fracRes: 0.6012, norm(attn): 0.1216, norm(output): 0.2373, norm(x): 0.8255, norm(y): 1.0085, norm:1.3534, tok/sec: 103327.09, flops:90.48, batch-reuse:1
@ 4357 train 4.9601 , allloss: 4.9790, dt: 1304.19ms, fracRes: 0.6000, norm(attn): 0.1226, norm(output): 0.2373, norm(x): 0.8251, norm(y): 1.0084, norm:1.4163, tok/sec: 100500.98, flops:88.01, batch-reuse:1
@ 4358 train 4.9631 , allloss: 4.9810, dt: 1307.31ms, fracRes: 0.5998, norm(attn): 0.1226, norm(output): 0.2383, norm(x): 0.8265, norm(y): 1.0084, norm:1.2350, tok/sec: 100260.94, flops:87.80, batch-reuse:1
@ 4359 train 4.9198 , allloss: 4.9386, dt: 1303.23ms, fracRes: 0.5999, norm(attn): 0.1201, norm(output): 0.2363, norm(x): 0.8253, norm(y): 1.0085, norm:1.3360, tok/sec: 100574.43, flops:88.07, batch-reuse:1
@ 4360 train 5.1350 , allloss: 5.1544, dt: 1289.07ms, fracRes: 0.6006, norm(attn): 0.1211, norm(output): 0.2354, norm(x): 0.8262, norm(y): 1.0084, norm:1.4866, tok/sec: 101679.48, flops:89.04, batch-reuse:1
@ 4361 train 5.0469 , allloss: 5.0658, dt: 1258.24ms, fracRes: 0.5994, norm(attn): 0.1226, norm(output): 0.2383, norm(x): 0.8272, norm(y): 1.0084, norm:1.4592, tok/sec: 104171.22, flops:91.22, batch-reuse:1
@ 4362 train 5.0181 , allloss: 5.0379, dt: 1269.64ms, fracRes: 0.5998, norm(attn): 0.1221, norm(output): 0.2383, norm(x): 0.8276, norm(y): 1.0084, norm:1.2781, tok/sec: 103235.39, flops:90.40, batch-reuse:1
@ 4363 train 4.9435 , allloss: 4.9620, dt: 1273.36ms, fracRes: 0.5989, norm(attn): 0.1221, norm(output): 0.2402, norm(x): 0.8272, norm(y): 1.0084, norm:1.1462, tok/sec: 102934.24, flops:90.14, batch-reuse:1
@ 4364 train 4.9783 , allloss: 4.9968, dt: 1258.67ms, fracRes: 0.6002, norm(attn): 0.1216, norm(output): 0.2373, norm(x): 0.8282, norm(y): 1.0085, norm:1.3253, tok/sec: 104135.65, flops:91.19, batch-reuse:1
@ 4365 train 5.0105 , allloss: 5.0298, dt: 1269.11ms, fracRes: 0.6015, norm(attn): 0.1216, norm(output): 0.2354, norm(x): 0.8286, norm(y): 1.0084, norm:1.2684, tok/sec: 103278.79, flops:90.44, batch-reuse:1
@ 4366 train 5.0328 , allloss: 5.0545, dt: 1275.61ms, fracRes: 0.6016, norm(attn): 0.1230, norm(output): 0.2363, norm(x): 0.8288, norm(y): 1.0083, norm:1.3019, tok/sec: 102752.37, flops:89.98, batch-reuse:1
@ 4367 train 4.9205 , allloss: 4.9484, dt: 1271.95ms, fracRes: 0.6005, norm(attn): 0.1230, norm(output): 0.2363, norm(x): 0.8292, norm(y): 1.0084, norm:1.5121, tok/sec: 103048.15, flops:90.24, batch-reuse:1
@ 4368 train 5.0376 , allloss: 5.0574, dt: 1251.41ms, fracRes: 0.5999, norm(attn): 0.1211, norm(output): 0.2363, norm(x): 0.8277, norm(y): 1.0084, norm:1.3352, tok/sec: 104739.65, flops:91.72, batch-reuse:1
@ 4369 train 4.9354 , allloss: 4.9556, dt: 1259.93ms, fracRes: 0.6001, norm(attn): 0.1196, norm(output): 0.2373, norm(x): 0.8268, norm(y): 1.0085, norm:1.1039, tok/sec: 104031.46, flops:91.10, batch-reuse:1
@ 4370 train 4.9054 , allloss: 4.9274, dt: 1271.37ms, fracRes: 0.5998, norm(attn): 0.1206, norm(output): 0.2373, norm(x): 0.8253, norm(y): 1.0085, norm:1.1584, tok/sec: 103094.98, flops:90.28, batch-reuse:1
@ 4371 train 4.9966 , allloss: 5.0165, dt: 1261.07ms, fracRes: 0.6009, norm(attn): 0.1196, norm(output): 0.2363, norm(x): 0.8253, norm(y): 1.0085, norm:1.2579, tok/sec: 103937.31, flops:91.02, batch-reuse:1
@ 4372 train 4.9404 , allloss: 4.9597, dt: 1259.40ms, fracRes: 0.6000, norm(attn): 0.1206, norm(output): 0.2354, norm(x): 0.8263, norm(y): 1.0085, norm:1.3475, tok/sec: 104075.20, flops:91.14, batch-reuse:1
@ 4373 train 5.0042 , allloss: 5.0230, dt: 1261.50ms, fracRes: 0.6010, norm(attn): 0.1221, norm(output): 0.2363, norm(x): 0.8272, norm(y): 1.0084, norm:1.2553, tok/sec: 103902.03, flops:90.99, batch-reuse:1
@ 4374 train 5.0094 , allloss: 5.0282, dt: 1257.85ms, fracRes: 0.6011, norm(attn): 0.1216, norm(output): 0.2363, norm(x): 0.8289, norm(y): 1.0085, norm:1.1696, tok/sec: 104202.83, flops:91.25, batch-reuse:1
@ 4375 train 4.9404 , allloss: 4.9594, dt: 1258.39ms, fracRes: 0.6016, norm(attn): 0.1196, norm(output): 0.2363, norm(x): 0.8275, norm(y): 1.0085, norm:1.1908, tok/sec: 104158.12, flops:91.21, batch-reuse:1
@ 4376 train 5.0029 , allloss: 5.0217, dt: 1251.16ms, fracRes: 0.6013, norm(attn): 0.1201, norm(output): 0.2354, norm(x): 0.8263, norm(y): 1.0084, norm:1.2626, tok/sec: 104760.43, flops:91.74, batch-reuse:1
@ 4377 train 5.0782 , allloss: 5.0978, dt: 1293.94ms, fracRes: 0.6011, norm(attn): 0.1206, norm(output): 0.2363, norm(x): 0.8230, norm(y): 1.0084, norm:1.2849, tok/sec: 101296.44, flops:88.70, batch-reuse:1
@ 4378 train 4.9549 , allloss: 4.9749, dt: 1286.63ms, fracRes: 0.6003, norm(attn): 0.1211, norm(output): 0.2354, norm(x): 0.8217, norm(y): 1.0085, norm:1.2189, tok/sec: 101872.53, flops:89.21, batch-reuse:1
@ 4379 train 4.9283 , allloss: 4.9477, dt: 1265.98ms, fracRes: 0.5994, norm(attn): 0.1211, norm(output): 0.2373, norm(x): 0.8211, norm(y): 1.0084, norm:1.1648, tok/sec: 103533.71, flops:90.66, batch-reuse:1
@ 4380 train 4.9664 , allloss: 4.9869, dt: 1263.75ms, fracRes: 0.6008, norm(attn): 0.1206, norm(output): 0.2363, norm(x): 0.8222, norm(y): 1.0085, norm:1.1980, tok/sec: 103717.08, flops:90.82, batch-reuse:1
@ 4381 train 4.9843 , allloss: 5.0050, dt: 1308.94ms, fracRes: 0.6007, norm(attn): 0.1221, norm(output): 0.2354, norm(x): 0.8214, norm(y): 1.0085, norm:1.1739, tok/sec: 100136.18, flops:87.69, batch-reuse:1
@ 4382 train 5.0249 , allloss: 5.0447, dt: 1275.42ms, fracRes: 0.6008, norm(attn): 0.1206, norm(output): 0.2363, norm(x): 0.8245, norm(y): 1.0084, norm:1.3036, tok/sec: 102767.76, flops:89.99, batch-reuse:1
@ 4383 train 4.8920 , allloss: 4.9101, dt: 1253.19ms, fracRes: 0.6002, norm(attn): 0.1221, norm(output): 0.2363, norm(x): 0.8273, norm(y): 1.0084, norm:1.0960, tok/sec: 104590.52, flops:91.59, batch-reuse:1
@ 4384 train 4.9797 , allloss: 4.9987, dt: 1254.50ms, fracRes: 0.6002, norm(attn): 0.1216, norm(output): 0.2383, norm(x): 0.8251, norm(y): 1.0084, norm:1.2813, tok/sec: 104481.87, flops:91.49, batch-reuse:1
@ 4385 train 5.0070 , allloss: 5.0273, dt: 1257.20ms, fracRes: 0.6000, norm(attn): 0.1221, norm(output): 0.2363, norm(x): 0.8229, norm(y): 1.0083, norm:1.2541, tok/sec: 104256.94, flops:91.30, batch-reuse:1
@ 4386 train 4.9134 , allloss: 4.9325, dt: 1282.13ms, fracRes: 0.5992, norm(attn): 0.1221, norm(output): 0.2363, norm(x): 0.8227, norm(y): 1.0084, norm:1.2721, tok/sec: 102229.92, flops:89.52, batch-reuse:1
@ 4387 train 5.0089 , allloss: 5.0280, dt: 1273.01ms, fracRes: 0.6003, norm(attn): 0.1216, norm(output): 0.2363, norm(x): 0.8225, norm(y): 1.0084, norm:1.2008, tok/sec: 102962.56, flops:90.16, batch-reuse:1
@ 4388 train 5.0185 , allloss: 5.0372, dt: 1274.49ms, fracRes: 0.6005, norm(attn): 0.1191, norm(output): 0.2354, norm(x): 0.8221, norm(y): 1.0085, norm:1.5007, tok/sec: 102842.50, flops:90.06, batch-reuse:1
@ 4389 train 4.9315 , allloss: 4.9504, dt: 1275.67ms, fracRes: 0.6005, norm(attn): 0.1187, norm(output): 0.2354, norm(x): 0.8233, norm(y): 1.0085, norm:1.2103, tok/sec: 102747.88, flops:89.97, batch-reuse:1
@ 4390 train 4.9456 , allloss: 4.9641, dt: 1279.04ms, fracRes: 0.5996, norm(attn): 0.1211, norm(output): 0.2373, norm(x): 0.8220, norm(y): 1.0084, norm:1.5196, tok/sec: 102476.47, flops:89.74, batch-reuse:1
@ 4391 train 4.8584 , allloss: 4.8773, dt: 1260.21ms, fracRes: 0.5990, norm(attn): 0.1206, norm(output): 0.2383, norm(x): 0.8217, norm(y): 1.0085, norm:1.1841, tok/sec: 104008.41, flops:91.08, batch-reuse:1
@ 4392 train 4.8949 , allloss: 4.9145, dt: 1257.90ms, fracRes: 0.5993, norm(attn): 0.1226, norm(output): 0.2363, norm(x): 0.8202, norm(y): 1.0085, norm:1.3099, tok/sec: 104199.46, flops:91.25, batch-reuse:1
@ 4393 train 4.8996 , allloss: 4.9188, dt: 1271.97ms, fracRes: 0.5990, norm(attn): 0.1216, norm(output): 0.2363, norm(x): 0.8180, norm(y): 1.0084, norm:1.1271, tok/sec: 103046.78, flops:90.24, batch-reuse:1
@ 4394 train 5.0586 , allloss: 5.0782, dt: 1264.67ms, fracRes: 0.6018, norm(attn): 0.1187, norm(output): 0.2354, norm(x): 0.8201, norm(y): 1.0084, norm:1.1707, tok/sec: 103641.31, flops:90.76, batch-reuse:1
@ 4395 train 4.8161 , allloss: 4.8356, dt: 1261.54ms, fracRes: 0.6002, norm(attn): 0.1216, norm(output): 0.2363, norm(x): 0.8201, norm(y): 1.0084, norm:1.1173, tok/sec: 103898.22, flops:90.98, batch-reuse:1
@ 4396 train 4.9284 , allloss: 4.9475, dt: 1254.60ms, fracRes: 0.6003, norm(attn): 0.1221, norm(output): 0.2354, norm(x): 0.8199, norm(y): 1.0085, norm:1.0957, tok/sec: 104473.29, flops:91.49, batch-reuse:1
@ 4397 train 4.8350 , allloss: 4.8539, dt: 1249.06ms, fracRes: 0.6004, norm(attn): 0.1226, norm(output): 0.2354, norm(x): 0.8186, norm(y): 1.0084, norm:1.1453, tok/sec: 104936.22, flops:91.89, batch-reuse:1
@ 4398 train 4.7532 , allloss: 4.7721, dt: 1244.25ms, fracRes: 0.5999, norm(attn): 0.1206, norm(output): 0.2363, norm(x): 0.8196, norm(y): 1.0085, norm:1.0155, tok/sec: 105342.15, flops:92.25, batch-reuse:1
@ 4399 train 4.8087 , allloss: 4.8299, dt: 1273.34ms, fracRes: 0.6001, norm(attn): 0.1211, norm(output): 0.2363, norm(x): 0.8146, norm(y): 1.0085, norm:1.2635, tok/sec: 102935.66, flops:90.14, batch-reuse:1
@ 4400 train 4.8544 , allloss: 4.8751, dt: 1296.12ms, fracRes: 0.6003, norm(attn): 0.1182, norm(output): 0.2354, norm(x): 0.8182, norm(y): 1.0086, norm:1.2925, tok/sec: 101126.37, flops:88.55, batch-reuse:1
@ 4401 train 4.7649 , allloss: 4.7847, dt: 1280.73ms, fracRes: 0.5994, norm(attn): 0.1206, norm(output): 0.2354, norm(x): 0.8171, norm(y): 1.0085, norm:1.2551, tok/sec: 102341.80, flops:89.62, batch-reuse:1
@ 4402 train 4.9144 , allloss: 4.9340, dt: 1259.46ms, fracRes: 0.6005, norm(attn): 0.1182, norm(output): 0.2354, norm(x): 0.8200, norm(y): 1.0085, norm:1.3006, tok/sec: 104070.28, flops:91.13, batch-reuse:1
@ 4403 train 4.8618 , allloss: 4.8801, dt: 1294.27ms, fracRes: 0.6002, norm(attn): 0.1196, norm(output): 0.2354, norm(x): 0.8198, norm(y): 1.0086, norm:1.1531, tok/sec: 101270.70, flops:88.68, batch-reuse:1
@ 4404 train 4.8396 , allloss: 4.8589, dt: 1289.15ms, fracRes: 0.6006, norm(attn): 0.1187, norm(output): 0.2354, norm(x): 0.8195, norm(y): 1.0085, norm:1.0890, tok/sec: 101673.38, flops:89.03, batch-reuse:1
@ 4405 train 4.9191 , allloss: 4.9380, dt: 1309.47ms, fracRes: 0.6008, norm(attn): 0.1196, norm(output): 0.2354, norm(x): 0.8180, norm(y): 1.0085, norm:1.1108, tok/sec: 100095.70, flops:87.65, batch-reuse:1
@ 4406 train 4.8090 , allloss: 4.8282, dt: 1307.14ms, fracRes: 0.6001, norm(attn): 0.1201, norm(output): 0.2354, norm(x): 0.8171, norm(y): 1.0086, norm:1.3165, tok/sec: 100273.89, flops:87.81, batch-reuse:1
@ 4407 train 4.8655 , allloss: 4.8844, dt: 1296.50ms, fracRes: 0.5992, norm(attn): 0.1201, norm(output): 0.2354, norm(x): 0.8157, norm(y): 1.0085, norm:1.0310, tok/sec: 101096.58, flops:88.53, batch-reuse:1
@ 4408 train 4.8366 , allloss: 4.8566, dt: 1280.48ms, fracRes: 0.6000, norm(attn): 0.1187, norm(output): 0.2344, norm(x): 0.8136, norm(y): 1.0085, norm:1.1539, tok/sec: 102361.30, flops:89.64, batch-reuse:1
@ 4409 train 4.8156 , allloss: 4.8352, dt: 1272.47ms, fracRes: 0.5996, norm(attn): 0.1196, norm(output): 0.2354, norm(x): 0.8135, norm(y): 1.0085, norm:1.2431, tok/sec: 103006.35, flops:90.20, batch-reuse:1
@ 4410 train 4.7925 , allloss: 4.8125, dt: 1294.53ms, fracRes: 0.5991, norm(attn): 0.1221, norm(output): 0.2354, norm(x): 0.8127, norm(y): 1.0085, norm:1.1053, tok/sec: 101250.80, flops:88.66, batch-reuse:1
@ 4411 train 4.8015 , allloss: 4.8219, dt: 1276.50ms, fracRes: 0.5992, norm(attn): 0.1211, norm(output): 0.2354, norm(x): 0.8120, norm(y): 1.0086, norm:1.2009, tok/sec: 102680.83, flops:89.92, batch-reuse:1
@ 4412 train 4.9042 , allloss: 4.9237, dt: 1258.61ms, fracRes: 0.6003, norm(attn): 0.1211, norm(output): 0.2344, norm(x): 0.8144, norm(y): 1.0086, norm:1.0525, tok/sec: 104140.60, flops:91.19, batch-reuse:1
@ 4413 train 4.8615 , allloss: 4.8812, dt: 1294.09ms, fracRes: 0.6009, norm(attn): 0.1206, norm(output): 0.2354, norm(x): 0.8129, norm(y): 1.0086, norm:1.1618, tok/sec: 101285.20, flops:88.69, batch-reuse:1
@ 4414 train 4.7646 , allloss: 4.7847, dt: 1287.09ms, fracRes: 0.5996, norm(attn): 0.1226, norm(output): 0.2363, norm(x): 0.8102, norm(y): 1.0085, norm:1.2625, tok/sec: 101836.28, flops:89.18, batch-reuse:1
@ 4415 train 4.7939 , allloss: 4.8132, dt: 1266.81ms, fracRes: 0.5992, norm(attn): 0.1221, norm(output): 0.2354, norm(x): 0.8108, norm(y): 1.0085, norm:1.4474, tok/sec: 103466.48, flops:90.60, batch-reuse:1
@ 4416 train 4.8193 , allloss: 4.8389, dt: 1262.36ms, fracRes: 0.5999, norm(attn): 0.1187, norm(output): 0.2354, norm(x): 0.8115, norm(y): 1.0086, norm:1.1130, tok/sec: 103830.91, flops:90.92, batch-reuse:1
@ 4417 train 4.8213 , allloss: 4.8405, dt: 1268.13ms, fracRes: 0.5994, norm(attn): 0.1201, norm(output): 0.2354, norm(x): 0.8078, norm(y): 1.0085, norm:1.1702, tok/sec: 103358.17, flops:90.51, batch-reuse:1
@ 4418 train 4.7841 , allloss: 4.8047, dt: 1287.30ms, fracRes: 0.5993, norm(attn): 0.1230, norm(output): 0.2354, norm(x): 0.8053, norm(y): 1.0084, norm:1.3288, tok/sec: 101819.04, flops:89.16, batch-reuse:1
@ 4419 train 4.7613 , allloss: 4.7807, dt: 1255.09ms, fracRes: 0.5998, norm(attn): 0.1216, norm(output): 0.2344, norm(x): 0.8092, norm(y): 1.0086, norm:1.3204, tok/sec: 104432.61, flops:91.45, batch-reuse:1
@ 4420 train 4.8484 , allloss: 4.8690, dt: 1242.34ms, fracRes: 0.6004, norm(attn): 0.1201, norm(output): 0.2354, norm(x): 0.8139, norm(y): 1.0085, norm:1.3758, tok/sec: 105503.84, flops:92.39, batch-reuse:1
@ 4421 train 4.9015 , allloss: 4.9216, dt: 1285.58ms, fracRes: 0.6010, norm(attn): 0.1201, norm(output): 0.2344, norm(x): 0.8133, norm(y): 1.0085, norm:1.1869, tok/sec: 101955.15, flops:89.28, batch-reuse:1
@ 4422 train 4.7686 , allloss: 4.7884, dt: 1250.04ms, fracRes: 0.5997, norm(attn): 0.1216, norm(output): 0.2354, norm(x): 0.8093, norm(y): 1.0085, norm:1.1717, tok/sec: 104853.96, flops:91.82, batch-reuse:1
@ 4423 train 4.8002 , allloss: 4.8203, dt: 1256.86ms, fracRes: 0.5992, norm(attn): 0.1221, norm(output): 0.2344, norm(x): 0.8082, norm(y): 1.0084, norm:1.0515, tok/sec: 104285.66, flops:91.32, batch-reuse:1
@ 4424 train 4.8137 , allloss: 4.8334, dt: 1263.01ms, fracRes: 0.5999, norm(attn): 0.1191, norm(output): 0.2344, norm(x): 0.8100, norm(y): 1.0086, norm:1.1088, tok/sec: 103777.13, flops:90.88, batch-reuse:1
@ 4425 train 4.9124 , allloss: 4.9321, dt: 1286.49ms, fracRes: 0.6006, norm(attn): 0.1201, norm(output): 0.2354, norm(x): 0.8089, norm(y): 1.0082, norm:1.6084, tok/sec: 101883.44, flops:89.22, batch-reuse:1
@ 4426 train 5.0953 , allloss: 5.1167, dt: 1255.69ms, fracRes: 0.6026, norm(attn): 0.1191, norm(output): 0.2334, norm(x): 0.8109, norm(y): 1.0085, norm:1.6011, tok/sec: 104382.28, flops:91.41, batch-reuse:1
@ 4427 train 4.8651 , allloss: 4.8854, dt: 1265.71ms, fracRes: 0.6011, norm(attn): 0.1187, norm(output): 0.2344, norm(x): 0.8099, norm(y): 1.0086, norm:1.5839, tok/sec: 103556.27, flops:90.68, batch-reuse:1
@ 4428 train 4.9458 , allloss: 4.9681, dt: 1268.65ms, fracRes: 0.6011, norm(attn): 0.1182, norm(output): 0.2334, norm(x): 0.8049, norm(y): 1.0085, norm:1.3594, tok/sec: 103316.20, flops:90.47, batch-reuse:1
@ 4429 train 4.8590 , allloss: 4.8795, dt: 1283.81ms, fracRes: 0.5995, norm(attn): 0.1187, norm(output): 0.2344, norm(x): 0.8070, norm(y): 1.0085, norm:1.4223, tok/sec: 102096.42, flops:89.40, batch-reuse:1
@ 4430 train 4.8894 , allloss: 4.9100, dt: 1304.95ms, fracRes: 0.6000, norm(attn): 0.1191, norm(output): 0.2344, norm(x): 0.8093, norm(y): 1.0085, norm:1.3652, tok/sec: 100442.53, flops:87.96, batch-reuse:1
@ 4431 train 5.0250 , allloss: 5.0448, dt: 1287.01ms, fracRes: 0.6004, norm(attn): 0.1196, norm(output): 0.2344, norm(x): 0.8108, norm(y): 1.0083, norm:1.2876, tok/sec: 101842.31, flops:89.18, batch-reuse:1
@ 4432 train 5.0674 , allloss: 5.0879, dt: 1279.00ms, fracRes: 0.6022, norm(attn): 0.1196, norm(output): 0.2354, norm(x): 0.8148, norm(y): 1.0082, norm:1.2377, tok/sec: 102480.10, flops:89.74, batch-reuse:1
@ 4433 train 4.7947 , allloss: 4.8143, dt: 1279.50ms, fracRes: 0.6009, norm(attn): 0.1206, norm(output): 0.2354, norm(x): 0.8150, norm(y): 1.0086, norm:1.3151, tok/sec: 102440.30, flops:89.71, batch-reuse:1
@ 4434 train 4.8326 , allloss: 4.8521, dt: 1269.51ms, fracRes: 0.6005, norm(attn): 0.1201, norm(output): 0.2354, norm(x): 0.8145, norm(y): 1.0086, norm:1.0929, tok/sec: 103246.17, flops:90.41, batch-reuse:1
@ 4435 train 4.8295 , allloss: 4.8489, dt: 1295.28ms, fracRes: 0.5994, norm(attn): 0.1221, norm(output): 0.2363, norm(x): 0.8126, norm(y): 1.0085, norm:1.1994, tok/sec: 101191.76, flops:88.61, batch-reuse:1
@ 4436 train 4.9011 , allloss: 4.9212, dt: 1302.34ms, fracRes: 0.6004, norm(attn): 0.1201, norm(output): 0.2344, norm(x): 0.8101, norm(y): 1.0084, norm:1.2375, tok/sec: 100643.10, flops:88.13, batch-reuse:1
@ 4437 train 4.8328 , allloss: 4.8540, dt: 1306.07ms, fracRes: 0.6011, norm(attn): 0.1201, norm(output): 0.2334, norm(x): 0.8081, norm(y): 1.0085, norm:1.1575, tok/sec: 100356.21, flops:87.88, batch-reuse:1
@ 4438 train 4.8183 , allloss: 4.8384, dt: 1325.26ms, fracRes: 0.5997, norm(attn): 0.1216, norm(output): 0.2344, norm(x): 0.8097, norm(y): 1.0086, norm:1.2815, tok/sec: 98902.92, flops:86.61, batch-reuse:1
@ 4439 train 4.8698 , allloss: 4.8906, dt: 1305.10ms, fracRes: 0.5994, norm(attn): 0.1206, norm(output): 0.2354, norm(x): 0.8112, norm(y): 1.0085, norm:1.1243, tok/sec: 100430.53, flops:87.95, batch-reuse:1
@ 4440 train 4.9162 , allloss: 4.9368, dt: 1270.96ms, fracRes: 0.6001, norm(attn): 0.1201, norm(output): 0.2354, norm(x): 0.8121, norm(y): 1.0084, norm:1.3233, tok/sec: 103128.70, flops:90.31, batch-reuse:1
@ 4441 train 4.9959 , allloss: 5.0165, dt: 1282.66ms, fracRes: 0.6008, norm(attn): 0.1206, norm(output): 0.2344, norm(x): 0.8125, norm(y): 1.0085, norm:1.2245, tok/sec: 102187.47, flops:89.48, batch-reuse:1
@ 4442 train 4.8156 , allloss: 4.8350, dt: 1279.88ms, fracRes: 0.6007, norm(attn): 0.1201, norm(output): 0.2344, norm(x): 0.8150, norm(y): 1.0087, norm:1.3734, tok/sec: 102409.92, flops:89.68, batch-reuse:1
@ 4443 train 4.8951 , allloss: 4.9154, dt: 1291.44ms, fracRes: 0.6015, norm(attn): 0.1206, norm(output): 0.2354, norm(x): 0.8147, norm(y): 1.0085, norm:1.3206, tok/sec: 101493.19, flops:88.88, batch-reuse:1
@ 4444 train 5.0807 , allloss: 5.1009, dt: 1260.85ms, fracRes: 0.6024, norm(attn): 0.1182, norm(output): 0.2354, norm(x): 0.8115, norm(y): 1.0087, norm:1.4977, tok/sec: 103955.00, flops:91.03, batch-reuse:1
@ 4445 train 5.1319 , allloss: 5.1531, dt: 1266.82ms, fracRes: 0.6024, norm(attn): 0.1196, norm(output): 0.2344, norm(x): 0.8136, norm(y): 1.0086, norm:1.7048, tok/sec: 103465.63, flops:90.60, batch-reuse:1
@ 4446 train 5.0902 , allloss: 5.1101, dt: 1266.59ms, fracRes: 0.6010, norm(attn): 0.1191, norm(output): 0.2344, norm(x): 0.8128, norm(y): 1.0084, norm:1.4447, tok/sec: 103483.86, flops:90.62, batch-reuse:1
@ 4447 train 4.9829 , allloss: 5.0037, dt: 1253.66ms, fracRes: 0.5994, norm(attn): 0.1230, norm(output): 0.2363, norm(x): 0.8146, norm(y): 1.0084, norm:1.2119, tok/sec: 104551.38, flops:91.55, batch-reuse:1
@ 4448 train 4.8862 , allloss: 4.9073, dt: 1251.26ms, fracRes: 0.5997, norm(attn): 0.1230, norm(output): 0.2363, norm(x): 0.8123, norm(y): 1.0085, norm:1.1215, tok/sec: 104752.39, flops:91.73, batch-reuse:1
@ 4449 train 5.0991 , allloss: 5.1198, dt: 1266.84ms, fracRes: 0.6014, norm(attn): 0.1196, norm(output): 0.2354, norm(x): 0.8132, norm(y): 1.0085, norm:1.2273, tok/sec: 103463.91, flops:90.60, batch-reuse:1
@ 4450 train 5.0004 , allloss: 5.0207, dt: 1277.23ms, fracRes: 0.6019, norm(attn): 0.1206, norm(output): 0.2354, norm(x): 0.8167, norm(y): 1.0085, norm:1.1994, tok/sec: 102621.96, flops:89.86, batch-reuse:1
@ 4451 train 5.0922 , allloss: 5.1116, dt: 1267.86ms, fracRes: 0.6010, norm(attn): 0.1206, norm(output): 0.2354, norm(x): 0.8153, norm(y): 1.0084, norm:1.3097, tok/sec: 103380.21, flops:90.53, batch-reuse:1
@ 4452 train 4.9523 , allloss: 4.9729, dt: 1266.32ms, fracRes: 0.6014, norm(attn): 0.1196, norm(output): 0.2354, norm(x): 0.8143, norm(y): 1.0085, norm:1.5192, tok/sec: 103506.24, flops:90.64, batch-reuse:1
@ 4453 train 5.0100 , allloss: 5.0299, dt: 1280.74ms, fracRes: 0.6016, norm(attn): 0.1230, norm(output): 0.2354, norm(x): 0.8158, norm(y): 1.0085, norm:1.3157, tok/sec: 102340.95, flops:89.62, batch-reuse:1
@ 4454 train 4.9629 , allloss: 4.9832, dt: 1278.28ms, fracRes: 0.6014, norm(attn): 0.1216, norm(output): 0.2363, norm(x): 0.8146, norm(y): 1.0084, norm:1.1233, tok/sec: 102537.94, flops:89.79, batch-reuse:1
@ 4455 train 4.9527 , allloss: 4.9740, dt: 1278.75ms, fracRes: 0.6020, norm(attn): 0.1201, norm(output): 0.2354, norm(x): 0.8137, norm(y): 1.0084, norm:1.2306, tok/sec: 102500.35, flops:89.76, batch-reuse:1
@ 4456 train 5.0067 , allloss: 5.0269, dt: 1257.32ms, fracRes: 0.6022, norm(attn): 0.1221, norm(output): 0.2344, norm(x): 0.8144, norm(y): 1.0085, norm:1.2002, tok/sec: 104246.74, flops:91.29, batch-reuse:1
@ 4457 train 5.0449 , allloss: 5.0651, dt: 1266.38ms, fracRes: 0.6023, norm(attn): 0.1206, norm(output): 0.2354, norm(x): 0.8137, norm(y): 1.0084, norm:1.2771, tok/sec: 103501.16, flops:90.63, batch-reuse:1
@ 4458 train 4.8938 , allloss: 4.9145, dt: 1286.56ms, fracRes: 0.6018, norm(attn): 0.1201, norm(output): 0.2354, norm(x): 0.8129, norm(y): 1.0084, norm:1.1880, tok/sec: 101877.80, flops:89.21, batch-reuse:1
@ 4459 train 4.9498 , allloss: 4.9706, dt: 1267.13ms, fracRes: 0.6021, norm(attn): 0.1191, norm(output): 0.2354, norm(x): 0.8142, norm(y): 1.0085, norm:1.3779, tok/sec: 103440.03, flops:90.58, batch-reuse:1
@ 4460 train 5.0889 , allloss: 5.1092, dt: 1256.03ms, fracRes: 0.6010, norm(attn): 0.1201, norm(output): 0.2354, norm(x): 0.8147, norm(y): 1.0084, norm:1.1950, tok/sec: 104354.35, flops:91.38, batch-reuse:1
@ 4461 train 4.9830 , allloss: 5.0023, dt: 1264.59ms, fracRes: 0.5994, norm(attn): 0.1221, norm(output): 0.2373, norm(x): 0.8147, norm(y): 1.0085, norm:1.2860, tok/sec: 103647.92, flops:90.76, batch-reuse:1
@ 4462 train 4.9959 , allloss: 5.0163, dt: 1275.48ms, fracRes: 0.5999, norm(attn): 0.1211, norm(output): 0.2363, norm(x): 0.8110, norm(y): 1.0084, norm:1.2256, tok/sec: 102762.51, flops:89.99, batch-reuse:1
@ 4463 train 4.9762 , allloss: 4.9962, dt: 1265.13ms, fracRes: 0.5987, norm(attn): 0.1221, norm(output): 0.2373, norm(x): 0.8119, norm(y): 1.0085, norm:1.1368, tok/sec: 103603.85, flops:90.72, batch-reuse:1
@ 4464 train 5.0001 , allloss: 5.0205, dt: 1258.53ms, fracRes: 0.6000, norm(attn): 0.1221, norm(output): 0.2363, norm(x): 0.8120, norm(y): 1.0085, norm:1.3454, tok/sec: 104146.69, flops:91.20, batch-reuse:1
@ 4465 train 4.9525 , allloss: 4.9723, dt: 1263.84ms, fracRes: 0.6006, norm(attn): 0.1216, norm(output): 0.2354, norm(x): 0.8122, norm(y): 1.0085, norm:1.4103, tok/sec: 103709.65, flops:90.82, batch-reuse:1
@ 4466 train 4.9240 , allloss: 4.9443, dt: 1260.06ms, fracRes: 0.6003, norm(attn): 0.1230, norm(output): 0.2354, norm(x): 0.8131, norm(y): 1.0085, norm:1.0443, tok/sec: 104020.46, flops:91.09, batch-reuse:1
@ 4467 train 4.9452 , allloss: 4.9655, dt: 1274.40ms, fracRes: 0.6014, norm(attn): 0.1216, norm(output): 0.2354, norm(x): 0.8138, norm(y): 1.0085, norm:1.1377, tok/sec: 102850.18, flops:90.06, batch-reuse:1
@ 4468 train 4.9624 , allloss: 4.9829, dt: 1300.17ms, fracRes: 0.6009, norm(attn): 0.1211, norm(output): 0.2354, norm(x): 0.8121, norm(y): 1.0085, norm:1.2363, tok/sec: 100811.79, flops:88.28, batch-reuse:1
@ 4469 train 4.9440 , allloss: 4.9633, dt: 1266.24ms, fracRes: 0.6001, norm(attn): 0.1221, norm(output): 0.2354, norm(x): 0.8128, norm(y): 1.0085, norm:1.1737, tok/sec: 103512.65, flops:90.64, batch-reuse:1
@ 4470 train 5.0364 , allloss: 5.0561, dt: 1262.08ms, fracRes: 0.6001, norm(attn): 0.1240, norm(output): 0.2363, norm(x): 0.8086, norm(y): 1.0083, norm:1.2069, tok/sec: 103853.88, flops:90.94, batch-reuse:1
@ 4471 train 4.9297 , allloss: 4.9499, dt: 1280.09ms, fracRes: 0.6011, norm(attn): 0.1206, norm(output): 0.2354, norm(x): 0.8108, norm(y): 1.0085, norm:1.2987, tok/sec: 102392.58, flops:89.66, batch-reuse:1
@ 4472 train 4.9806 , allloss: 5.0005, dt: 1261.16ms, fracRes: 0.6025, norm(attn): 0.1201, norm(output): 0.2344, norm(x): 0.8112, norm(y): 1.0086, norm:1.5399, tok/sec: 103929.90, flops:91.01, batch-reuse:1
@ 4473 train 5.0781 , allloss: 5.0995, dt: 1257.24ms, fracRes: 0.6015, norm(attn): 0.1221, norm(output): 0.2354, norm(x): 0.8114, norm(y): 1.0085, norm:1.4152, tok/sec: 104253.70, flops:91.29, batch-reuse:1
@ 4474 train 5.0000 , allloss: 5.0208, dt: 1272.03ms, fracRes: 0.5992, norm(attn): 0.1230, norm(output): 0.2373, norm(x): 0.8113, norm(y): 1.0084, norm:1.3430, tok/sec: 103041.45, flops:90.23, batch-reuse:1
@ 4475 train 4.9156 , allloss: 4.9372, dt: 1290.73ms, fracRes: 0.5998, norm(attn): 0.1226, norm(output): 0.2363, norm(x): 0.8080, norm(y): 1.0085, norm:1.3372, tok/sec: 101548.55, flops:88.92, batch-reuse:1
@ 4476 train 4.9472 , allloss: 4.9712, dt: 1256.59ms, fracRes: 0.6012, norm(attn): 0.1221, norm(output): 0.2344, norm(x): 0.8055, norm(y): 1.0085, norm:1.3094, tok/sec: 104307.58, flops:91.34, batch-reuse:1
@ 4477 train 5.0099 , allloss: 5.0304, dt: 1266.34ms, fracRes: 0.6006, norm(attn): 0.1216, norm(output): 0.2354, norm(x): 0.8105, norm(y): 1.0085, norm:1.2365, tok/sec: 103504.33, flops:90.64, batch-reuse:1
@ 4478 train 4.8757 , allloss: 4.8967, dt: 1268.45ms, fracRes: 0.6008, norm(attn): 0.1230, norm(output): 0.2354, norm(x): 0.8105, norm(y): 1.0085, norm:1.1827, tok/sec: 103332.28, flops:90.49, batch-reuse:1
@ 4479 train 4.9039 , allloss: 4.9237, dt: 1269.84ms, fracRes: 0.6015, norm(attn): 0.1221, norm(output): 0.2363, norm(x): 0.8147, norm(y): 1.0085, norm:1.3243, tok/sec: 103219.57, flops:90.39, batch-reuse:1
@ 4480 train 5.0110 , allloss: 5.0327, dt: 1269.86ms, fracRes: 0.6022, norm(attn): 0.1206, norm(output): 0.2354, norm(x): 0.8146, norm(y): 1.0086, norm:1.1914, tok/sec: 103217.95, flops:90.39, batch-reuse:1
@ 4481 train 4.9714 , allloss: 4.9923, dt: 1251.05ms, fracRes: 0.6017, norm(attn): 0.1221, norm(output): 0.2354, norm(x): 0.8106, norm(y): 1.0085, norm:1.3199, tok/sec: 104769.95, flops:91.75, batch-reuse:1
@ 4482 train 5.0284 , allloss: 5.0477, dt: 1270.13ms, fracRes: 0.6016, norm(attn): 0.1230, norm(output): 0.2363, norm(x): 0.8119, norm(y): 1.0085, norm:1.2115, tok/sec: 103196.09, flops:90.37, batch-reuse:1
@ 4483 train 5.0591 , allloss: 5.0779, dt: 1269.36ms, fracRes: 0.6018, norm(attn): 0.1211, norm(output): 0.2354, norm(x): 0.8135, norm(y): 1.0085, norm:1.1256, tok/sec: 103258.14, flops:90.42, batch-reuse:1
@ 4484 train 4.9236 , allloss: 4.9432, dt: 1278.51ms, fracRes: 0.6021, norm(attn): 0.1211, norm(output): 0.2354, norm(x): 0.8140, norm(y): 1.0085, norm:1.2306, tok/sec: 102519.27, flops:89.77, batch-reuse:1
@ 4485 train 5.0195 , allloss: 5.0390, dt: 1255.99ms, fracRes: 0.6015, norm(attn): 0.1235, norm(output): 0.2354, norm(x): 0.8138, norm(y): 1.0085, norm:1.3292, tok/sec: 104357.46, flops:91.38, batch-reuse:1
@ 4486 train 4.9326 , allloss: 4.9528, dt: 1243.61ms, fracRes: 0.6015, norm(attn): 0.1230, norm(output): 0.2354, norm(x): 0.8119, norm(y): 1.0086, norm:1.3886, tok/sec: 105395.97, flops:92.29, batch-reuse:1
@ 4487 train 4.9610 , allloss: 4.9827, dt: 1255.10ms, fracRes: 0.6000, norm(attn): 0.1235, norm(output): 0.2363, norm(x): 0.8083, norm(y): 1.0085, norm:1.2990, tok/sec: 104431.62, flops:91.45, batch-reuse:1
@ 4488 train 5.0013 , allloss: 5.0215, dt: 1261.91ms, fracRes: 0.6004, norm(attn): 0.1201, norm(output): 0.2354, norm(x): 0.8109, norm(y): 1.0086, norm:1.2304, tok/sec: 103868.34, flops:90.96, batch-reuse:1
@ 4489 train 4.9748 , allloss: 4.9939, dt: 1285.77ms, fracRes: 0.6002, norm(attn): 0.1201, norm(output): 0.2354, norm(x): 0.8103, norm(y): 1.0085, norm:1.2282, tok/sec: 101940.21, flops:89.27, batch-reuse:1
@ 4490 train 5.0176 , allloss: 5.0376, dt: 1306.87ms, fracRes: 0.6010, norm(attn): 0.1201, norm(output): 0.2354, norm(x): 0.8102, norm(y): 1.0084, norm:1.0983, tok/sec: 100294.78, flops:87.83, batch-reuse:1
@ 4491 train 4.9483 , allloss: 4.9679, dt: 1312.29ms, fracRes: 0.5995, norm(attn): 0.1230, norm(output): 0.2363, norm(x): 0.8094, norm(y): 1.0085, norm:1.2247, tok/sec: 99880.42, flops:87.46, batch-reuse:1
@ 4492 train 5.0461 , allloss: 5.0661, dt: 1262.11ms, fracRes: 0.5990, norm(attn): 0.1250, norm(output): 0.2363, norm(x): 0.8081, norm(y): 1.0084, norm:1.1626, tok/sec: 103851.78, flops:90.94, batch-reuse:1
@ 4493 train 4.9206 , allloss: 4.9398, dt: 1269.21ms, fracRes: 0.6008, norm(attn): 0.1230, norm(output): 0.2354, norm(x): 0.8106, norm(y): 1.0085, norm:1.2525, tok/sec: 103270.72, flops:90.43, batch-reuse:1
@ 4494 train 5.0126 , allloss: 5.0351, dt: 1259.73ms, fracRes: 0.6038, norm(attn): 0.1206, norm(output): 0.2334, norm(x): 0.8130, norm(y): 1.0085, norm:1.2341, tok/sec: 104047.39, flops:91.11, batch-reuse:1
@ 4495 train 5.0106 , allloss: 5.0303, dt: 1267.35ms, fracRes: 0.6015, norm(attn): 0.1216, norm(output): 0.2354, norm(x): 0.8120, norm(y): 1.0086, norm:1.1793, tok/sec: 103422.09, flops:90.57, batch-reuse:1
@ 4496 train 4.9812 , allloss: 5.0010, dt: 1280.10ms, fracRes: 0.6003, norm(attn): 0.1230, norm(output): 0.2354, norm(x): 0.8104, norm(y): 1.0086, norm:1.2965, tok/sec: 102392.07, flops:89.66, batch-reuse:1
@ 4497 train 4.9995 , allloss: 5.0190, dt: 1265.26ms, fracRes: 0.6004, norm(attn): 0.1221, norm(output): 0.2354, norm(x): 0.8089, norm(y): 1.0086, norm:1.1047, tok/sec: 103592.88, flops:90.71, batch-reuse:1
@ 4498 train 4.9586 , allloss: 4.9781, dt: 1268.42ms, fracRes: 0.6001, norm(attn): 0.1230, norm(output): 0.2354, norm(x): 0.8085, norm(y): 1.0086, norm:1.2500, tok/sec: 103334.65, flops:90.49, batch-reuse:1
@ 4499 train 5.0025 , allloss: 5.0227, dt: 1275.90ms, fracRes: 0.6009, norm(attn): 0.1221, norm(output): 0.2354, norm(x): 0.8091, norm(y): 1.0086, norm:1.3085, tok/sec: 102728.72, flops:89.96, batch-reuse:1
@ 4500 train 4.9595 , allloss: 4.9793, dt: 1267.58ms, fracRes: 0.6011, norm(attn): 0.1216, norm(output): 0.2344, norm(x): 0.8081, norm(y): 1.0086, norm:1.2011, tok/sec: 103403.08, flops:90.55, batch-reuse:1
@ 4501 train 4.9499 , allloss: 4.9701, dt: 1250.29ms, fracRes: 0.6007, norm(attn): 0.1221, norm(output): 0.2354, norm(x): 0.8069, norm(y): 1.0086, norm:1.0754, tok/sec: 104833.55, flops:91.80, batch-reuse:1
@ 4502 train 4.9918 , allloss: 5.0120, dt: 1253.79ms, fracRes: 0.5998, norm(attn): 0.1230, norm(output): 0.2344, norm(x): 0.8061, norm(y): 1.0085, norm:1.1067, tok/sec: 104540.28, flops:91.54, batch-reuse:1
@ 4503 train 4.9454 , allloss: 4.9649, dt: 1259.04ms, fracRes: 0.5988, norm(attn): 0.1240, norm(output): 0.2354, norm(x): 0.8046, norm(y): 1.0085, norm:1.1607, tok/sec: 104104.59, flops:91.16, batch-reuse:1
@ 4504 train 4.8677 , allloss: 4.8866, dt: 1266.98ms, fracRes: 0.5996, norm(attn): 0.1240, norm(output): 0.2363, norm(x): 0.8054, norm(y): 1.0086, norm:1.1247, tok/sec: 103452.64, flops:90.59, batch-reuse:1
@ 4505 train 4.9354 , allloss: 4.9551, dt: 1252.64ms, fracRes: 0.5997, norm(attn): 0.1240, norm(output): 0.2354, norm(x): 0.8035, norm(y): 1.0086, norm:1.3449, tok/sec: 104636.97, flops:91.63, batch-reuse:1
@ 4506 train 4.9715 , allloss: 4.9923, dt: 1276.01ms, fracRes: 0.6002, norm(attn): 0.1230, norm(output): 0.2354, norm(x): 0.8045, norm(y): 1.0086, norm:1.4082, tok/sec: 102720.29, flops:89.95, batch-reuse:1
@ 4507 train 4.9181 , allloss: 4.9376, dt: 1251.85ms, fracRes: 0.6004, norm(attn): 0.1226, norm(output): 0.2354, norm(x): 0.8047, norm(y): 1.0085, norm:1.0323, tok/sec: 104702.95, flops:91.69, batch-reuse:1
@ 4508 train 4.9189 , allloss: 4.9390, dt: 1251.33ms, fracRes: 0.6009, norm(attn): 0.1206, norm(output): 0.2354, norm(x): 0.8035, norm(y): 1.0086, norm:1.1538, tok/sec: 104746.34, flops:91.72, batch-reuse:1
@ 4509 train 4.9660 , allloss: 4.9859, dt: 1276.43ms, fracRes: 0.5997, norm(attn): 0.1235, norm(output): 0.2354, norm(x): 0.8054, norm(y): 1.0086, norm:1.3267, tok/sec: 102686.23, flops:89.92, batch-reuse:1
@ 4510 train 5.0198 , allloss: 5.0395, dt: 1252.87ms, fracRes: 0.6001, norm(attn): 0.1230, norm(output): 0.2354, norm(x): 0.8063, norm(y): 1.0086, norm:1.3098, tok/sec: 104617.03, flops:91.61, batch-reuse:1
@ 4511 train 4.8798 , allloss: 4.8993, dt: 1256.49ms, fracRes: 0.6001, norm(attn): 0.1226, norm(output): 0.2363, norm(x): 0.8067, norm(y): 1.0086, norm:1.2404, tok/sec: 104316.37, flops:91.35, batch-reuse:1
@ 4512 train 4.9377 , allloss: 4.9573, dt: 1279.02ms, fracRes: 0.6014, norm(attn): 0.1191, norm(output): 0.2354, norm(x): 0.8078, norm(y): 1.0085, norm:1.0890, tok/sec: 102478.24, flops:89.74, batch-reuse:1
@ 4513 train 4.9517 , allloss: 4.9711, dt: 1256.74ms, fracRes: 0.6013, norm(attn): 0.1201, norm(output): 0.2344, norm(x): 0.8056, norm(y): 1.0086, norm:1.2154, tok/sec: 104295.65, flops:91.33, batch-reuse:1
@ 4514 train 4.8666 , allloss: 4.8861, dt: 1263.99ms, fracRes: 0.5997, norm(attn): 0.1226, norm(output): 0.2354, norm(x): 0.8057, norm(y): 1.0085, norm:1.1266, tok/sec: 103696.79, flops:90.81, batch-reuse:1
@ 4515 train 4.9929 , allloss: 5.0133, dt: 1254.67ms, fracRes: 0.5995, norm(attn): 0.1230, norm(output): 0.2344, norm(x): 0.8033, norm(y): 1.0085, norm:1.3390, tok/sec: 104466.94, flops:91.48, batch-reuse:1
@ 4516 train 4.9236 , allloss: 4.9430, dt: 1246.55ms, fracRes: 0.5995, norm(attn): 0.1230, norm(output): 0.2354, norm(x): 0.8049, norm(y): 1.0085, norm:1.1522, tok/sec: 105147.78, flops:92.08, batch-reuse:1
@ 4517 train 4.9443 , allloss: 4.9640, dt: 1254.92ms, fracRes: 0.6012, norm(attn): 0.1221, norm(output): 0.2344, norm(x): 0.8081, norm(y): 1.0086, norm:1.1190, tok/sec: 104446.24, flops:91.46, batch-reuse:1
@ 4518 train 4.9327 , allloss: 4.9518, dt: 1247.07ms, fracRes: 0.6006, norm(attn): 0.1226, norm(output): 0.2344, norm(x): 0.8070, norm(y): 1.0086, norm:1.1459, tok/sec: 105104.08, flops:92.04, batch-reuse:1
@ 4519 train 5.0216 , allloss: 5.0411, dt: 1266.94ms, fracRes: 0.6010, norm(attn): 0.1206, norm(output): 0.2344, norm(x): 0.8077, norm(y): 1.0086, norm:1.2422, tok/sec: 103455.54, flops:90.59, batch-reuse:1
@ 4520 train 5.0152 , allloss: 5.0342, dt: 1278.10ms, fracRes: 0.6007, norm(attn): 0.1211, norm(output): 0.2354, norm(x): 0.8064, norm(y): 1.0086, norm:1.1340, tok/sec: 102551.94, flops:89.80, batch-reuse:1
@ 4521 train 4.9658 , allloss: 4.9842, dt: 1258.03ms, fracRes: 0.6006, norm(attn): 0.1226, norm(output): 0.2354, norm(x): 0.8069, norm(y): 1.0086, norm:1.1162, tok/sec: 104188.60, flops:91.24, batch-reuse:1
@ 4522 train 5.0284 , allloss: 5.0470, dt: 1249.15ms, fracRes: 0.6006, norm(attn): 0.1221, norm(output): 0.2344, norm(x): 0.8080, norm(y): 1.0087, norm:1.1451, tok/sec: 104929.21, flops:91.89, batch-reuse:1
@ 4523 train 4.9945 , allloss: 5.0141, dt: 1254.36ms, fracRes: 0.5996, norm(attn): 0.1240, norm(output): 0.2354, norm(x): 0.8033, norm(y): 1.0085, norm:1.4155, tok/sec: 104493.51, flops:91.50, batch-reuse:1
@ 4524 train 4.9938 , allloss: 5.0138, dt: 1252.90ms, fracRes: 0.6007, norm(attn): 0.1216, norm(output): 0.2344, norm(x): 0.8033, norm(y): 1.0085, norm:1.0917, tok/sec: 104614.76, flops:91.61, batch-reuse:1
@ 4525 train 4.9206 , allloss: 4.9404, dt: 1239.41ms, fracRes: 0.5991, norm(attn): 0.1230, norm(output): 0.2354, norm(x): 0.8016, norm(y): 1.0085, norm:1.3297, tok/sec: 105753.65, flops:92.61, batch-reuse:1
@ 4526 train 5.1183 , allloss: 5.1388, dt: 1286.11ms, fracRes: 0.6007, norm(attn): 0.1230, norm(output): 0.2344, norm(x): 0.8030, norm(y): 1.0084, norm:1.5601, tok/sec: 101913.60, flops:89.24, batch-reuse:1
@ 4527 train 4.8776 , allloss: 4.8976, dt: 1238.17ms, fracRes: 0.6007, norm(attn): 0.1230, norm(output): 0.2354, norm(x): 0.8030, norm(y): 1.0084, norm:1.4658, tok/sec: 105859.83, flops:92.70, batch-reuse:1
@ 4528 train 4.9086 , allloss: 4.9278, dt: 1247.04ms, fracRes: 0.6009, norm(attn): 0.1201, norm(output): 0.2344, norm(x): 0.8014, norm(y): 1.0085, norm:1.1928, tok/sec: 105106.35, flops:92.04, batch-reuse:1
@ 4529 train 4.9651 , allloss: 4.9844, dt: 1257.02ms, fracRes: 0.6001, norm(attn): 0.1230, norm(output): 0.2354, norm(x): 0.8001, norm(y): 1.0085, norm:1.3972, tok/sec: 104272.25, flops:91.31, batch-reuse:1
@ 4530 train 4.9171 , allloss: 4.9371, dt: 1242.88ms, fracRes: 0.6002, norm(attn): 0.1230, norm(output): 0.2344, norm(x): 0.8001, norm(y): 1.0085, norm:1.0975, tok/sec: 105458.28, flops:92.35, batch-reuse:1
@ 4531 train 4.9744 , allloss: 4.9943, dt: 1252.00ms, fracRes: 0.6002, norm(attn): 0.1230, norm(output): 0.2354, norm(x): 0.8012, norm(y): 1.0085, norm:1.3421, tok/sec: 104689.75, flops:91.68, batch-reuse:1
@ 4532 train 4.9445 , allloss: 4.9633, dt: 1256.73ms, fracRes: 0.6005, norm(attn): 0.1230, norm(output): 0.2344, norm(x): 0.8002, norm(y): 1.0086, norm:1.3349, tok/sec: 104296.08, flops:91.33, batch-reuse:1
@ 4533 train 5.0201 , allloss: 5.0391, dt: 1268.31ms, fracRes: 0.6006, norm(attn): 0.1230, norm(output): 0.2354, norm(x): 0.7989, norm(y): 1.0085, norm:1.1856, tok/sec: 103344.18, flops:90.50, batch-reuse:1
@ 4534 train 5.0341 , allloss: 5.0536, dt: 1245.51ms, fracRes: 0.6006, norm(attn): 0.1221, norm(output): 0.2354, norm(x): 0.7962, norm(y): 1.0085, norm:1.1658, tok/sec: 105235.24, flops:92.15, batch-reuse:1
@ 4535 train 5.0129 , allloss: 5.0319, dt: 1266.53ms, fracRes: 0.6000, norm(attn): 0.1211, norm(output): 0.2334, norm(x): 0.7943, norm(y): 1.0086, norm:1.2789, tok/sec: 103489.19, flops:90.62, batch-reuse:1
@ 4536 train 4.9804 , allloss: 5.0004, dt: 1262.31ms, fracRes: 0.6000, norm(attn): 0.1216, norm(output): 0.2354, norm(x): 0.7953, norm(y): 1.0085, norm:1.1666, tok/sec: 103834.93, flops:90.93, batch-reuse:1
@ 4537 train 4.9231 , allloss: 4.9429, dt: 1240.71ms, fracRes: 0.5992, norm(attn): 0.1226, norm(output): 0.2354, norm(x): 0.7945, norm(y): 1.0085, norm:1.1856, tok/sec: 105642.53, flops:92.51, batch-reuse:1
@ 4538 train 4.9005 , allloss: 4.9202, dt: 1251.92ms, fracRes: 0.5994, norm(attn): 0.1235, norm(output): 0.2354, norm(x): 0.7952, norm(y): 1.0085, norm:1.1980, tok/sec: 104696.93, flops:91.68, batch-reuse:1
@ 4539 train 4.9512 , allloss: 4.9714, dt: 1248.96ms, fracRes: 0.5999, norm(attn): 0.1230, norm(output): 0.2344, norm(x): 0.7980, norm(y): 1.0086, norm:1.0724, tok/sec: 104945.03, flops:91.90, batch-reuse:1
@ 4540 train 4.8509 , allloss: 4.8708, dt: 1241.00ms, fracRes: 0.5994, norm(attn): 0.1240, norm(output): 0.2344, norm(x): 0.7981, norm(y): 1.0086, norm:1.1473, tok/sec: 105618.26, flops:92.49, batch-reuse:1
@ 4541 train 4.9043 , allloss: 4.9233, dt: 1265.94ms, fracRes: 0.6001, norm(attn): 0.1226, norm(output): 0.2344, norm(x): 0.8001, norm(y): 1.0086, norm:1.1352, tok/sec: 103537.53, flops:90.67, batch-reuse:1
@ 4542 train 4.8139 , allloss: 4.8353, dt: 1278.37ms, fracRes: 0.6014, norm(attn): 0.1211, norm(output): 0.2344, norm(x): 0.7982, norm(y): 1.0087, norm:1.2980, tok/sec: 102530.71, flops:89.78, batch-reuse:1
@ 4543 train 4.9094 , allloss: 4.9293, dt: 1255.99ms, fracRes: 0.6002, norm(attn): 0.1221, norm(output): 0.2344, norm(x): 0.7979, norm(y): 1.0085, norm:1.2426, tok/sec: 104357.28, flops:91.38, batch-reuse:1
@ 4544 train 4.8973 , allloss: 4.9167, dt: 1254.61ms, fracRes: 0.6008, norm(attn): 0.1201, norm(output): 0.2344, norm(x): 0.7980, norm(y): 1.0086, norm:1.1149, tok/sec: 104472.26, flops:91.48, batch-reuse:1
@ 4545 train 4.9051 , allloss: 4.9249, dt: 1267.48ms, fracRes: 0.6002, norm(attn): 0.1230, norm(output): 0.2344, norm(x): 0.7959, norm(y): 1.0086, norm:1.2537, tok/sec: 103411.21, flops:90.56, batch-reuse:1
@ 4546 train 4.8237 , allloss: 4.8432, dt: 1240.41ms, fracRes: 0.6000, norm(attn): 0.1230, norm(output): 0.2354, norm(x): 0.7974, norm(y): 1.0085, norm:1.2224, tok/sec: 105668.06, flops:92.53, batch-reuse:1
@ 4547 train 4.9178 , allloss: 4.9367, dt: 1245.22ms, fracRes: 0.6001, norm(attn): 0.1226, norm(output): 0.2344, norm(x): 0.7981, norm(y): 1.0085, norm:1.1702, tok/sec: 105260.28, flops:92.17, batch-reuse:1
@ 4548 train 4.8949 , allloss: 4.9137, dt: 1242.69ms, fracRes: 0.5999, norm(attn): 0.1240, norm(output): 0.2344, norm(x): 0.7980, norm(y): 1.0086, norm:1.5335, tok/sec: 105474.39, flops:92.36, batch-reuse:1
@ 4549 train 4.8665 , allloss: 4.8859, dt: 1245.76ms, fracRes: 0.6008, norm(attn): 0.1221, norm(output): 0.2344, norm(x): 0.7981, norm(y): 1.0086, norm:1.3304, tok/sec: 105214.69, flops:92.14, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6406, 0.3594, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6953, 0.0957, 0.2100, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3047, 0.1084, 0.2578, 0.3281, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1196, 0.0184, 0.0918, 0.1543, 0.6172, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1157, 0.0267, 0.0238, 0.1250, 0.4785, 0.2305, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0591, 0.0396, 0.0199, 0.0908, 0.5742, 0.1504, 0.0679, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2012, 0.4902, 0.1494, 0.0132, 0.0102, 0.0220, 0.0051, 0.1094, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1543, 0.0581, 0.0674, 0.0713, 0.2275, 0.0618, 0.1074, 0.0588, 0.1924, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1436, 0.2676, 0.2354, 0.0095, 0.0065, 0.0075, 0.0054, 0.1895, 0.0120, 0.1235, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1504, 0.0771, 0.2207, 0.0302, 0.0356, 0.0193, 0.0154, 0.1748, 0.0505, 0.1670, 0.0579, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0269, 0.0129, 0.0090, 0.1348, 0.1030, 0.1592, 0.3086, 0.0371, 0.1514, 0.0266, 0.0275, 0.0033, 0.0000, 0.0000, 0.0000],
        [0.0605, 0.0879, 0.0354, 0.0422, 0.0952, 0.0986, 0.0439, 0.0177, 0.1318, 0.0747, 0.1943, 0.0991, 0.0183, 0.0000, 0.0000],
        [0.0806, 0.0471, 0.0267, 0.0280, 0.1621, 0.0483, 0.0625, 0.0242, 0.1270, 0.0703, 0.1465, 0.0214, 0.0481, 0.1074, 0.0000],
        [0.1157, 0.1079, 0.1123, 0.0708, 0.0479, 0.0189, 0.0101, 0.0457, 0.0178, 0.0903, 0.0718, 0.1387, 0.0889, 0.0270, 0.0366]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0022, -0.0053,  0.0019,  ..., -0.0395,  0.0197,  0.0034],
        [-0.0353,  0.0071, -0.0098,  ...,  0.0033,  0.0042,  0.0117],
        [ 0.0255,  0.0300, -0.0095,  ..., -0.0201,  0.0218, -0.0159],
        ...,
        [ 0.0298,  0.0232,  0.0150,  ..., -0.0375,  0.0132,  0.0165],
        [-0.0500, -0.0006, -0.0358,  ...,  0.0097, -0.0019, -0.0101],
        [-0.0265,  0.0077, -0.0209,  ..., -0.0049, -0.0155, -0.0086]], device='cuda:0', requires_grad=True)
K: tensor([ 1.2266,  0.5938, -0.2969,  0.2275,  0.3438,  0.5156,  0.8906,  0.0586, -0.1436, -0.3730,  0.5742, -0.0461, -0.7344, -0.1670,  0.0898, -0.5156, -0.2578,  0.2178, -0.5078,  0.4980,  0.5352,  0.3164, -0.1377,  0.0796,  0.0159,  0.0454, -0.8477, -0.2578,  0.8398, -0.5195,  1.6484,  0.0388,
         0.5898, -0.6953,  1.0234,  0.8281, -0.8828,  0.2227, -0.5430, -1.2734,  0.0972, -0.2002, -0.7109,  0.9883, -0.4082,  0.2236, -0.2988,  1.3984,  0.4727, -0.2217,  0.6094, -0.0177, -1.0469,  0.5977,  0.7500, -0.4961, -0.1138,  0.1069,  1.1172, -0.1138, -0.5742, -0.4902, -0.3652,  0.0537],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0187, -0.0066, -0.0171,  ...,  0.0103, -0.0031, -0.0204],
        [ 0.0170, -0.0132,  0.0126,  ...,  0.0102,  0.0275,  0.0066],
        [-0.0352,  0.0416,  0.0023,  ..., -0.0191, -0.0250, -0.0479],
        ...,
        [ 0.0137,  0.0117,  0.0214,  ...,  0.0180,  0.0203,  0.0200],
        [ 0.0212, -0.0084,  0.0425,  ...,  0.0288,  0.0071,  0.0321],
        [ 0.0131, -0.0180,  0.0185,  ..., -0.0180,  0.0192, -0.0052]], device='cuda:0', requires_grad=True)
Q: tensor([-0.5586, -0.4844, -1.1016, -1.4141,  0.0752, -0.0383, -2.3281,  0.2402, -0.2021,  0.4844, -0.3047, -1.0156, -0.4668, -0.4961, -0.2344, -0.3535, -1.0156, -0.1357,  0.0344,  0.3613,  0.1157, -0.5938,  0.4863,  0.3691,  0.0369, -0.3086,  0.1465, -0.7500, -0.7578,  0.8984, -0.6484,  0.4824,
        -0.6055, -0.4395,  0.0036, -0.2246,  1.3438,  0.9141, -0.5352,  1.6875,  0.8711, -0.3066,  0.2188,  1.2422, -0.5469, -0.0835, -0.0062, -0.1216, -0.3145,  0.2852, -2.0625, -0.9805,  0.1416, -1.0703, -0.5078, -1.0547,  0.6328, -0.7539,  0.0046, -0.5898,  0.8086,  0.4512, -0.0869,  0.3496],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -0.5742,     -0.4277,     -0.0299,     -1.1250,     -0.7148,     -0.3984,      0.1099,     -0.8477,     -0.7695,     -1.4297,     -0.6523,      0.4062,     -0.8594,     -0.3438],
        [     0.0000,     -1.9844,     -1.1953,      1.5312,      2.0312,      1.4766,      1.6641,     -1.1016,      1.3672,      0.2471,      0.9922,     -1.7969,     -1.8281,      2.2656,      0.7266],
        [     0.0000,     -1.0312,     -0.1680,      0.0752,     -0.0254,     -0.3164,     -0.4688,     -1.2109,     -0.9648,     -0.3633,      0.7734,     -0.1260,     -1.3359,     -0.5977,      0.0123],
        [     0.0000,     -1.8672,     -0.2656,      0.2539,      1.6406,     -0.1436,     -0.3359,     -1.1328,      1.1172,      0.9180,      0.3887,     -1.2500,     -1.2109,      1.6172,      0.0258],
        [     0.0000,     -1.4688,     -1.5781,      0.0752,      1.4141,      0.6875,      1.8438,     -0.6992,      1.7344,     -1.1562,      0.7344,     -1.8359,     -1.3594,      1.7578,      0.7383],
        [     0.0000,     -0.4023,     -1.0859,      0.4277,      2.2656,      0.9336,      0.1348,     -2.5938,      1.3047,      0.6797,      2.6875,     -1.1094,     -2.7500,      1.6250,      0.8398],
        [     0.0000,      0.8906,     -0.2969,     -2.7188,     -2.9844,     -2.2188,     -3.6719,     -0.6094,     -2.4688,     -0.7031,     -0.5430,      1.2500,      0.1172,     -2.7812,     -1.2969],
        [     0.0000,     -0.9766,     -0.8281,     -0.7695,      0.3887,     -0.9180,     -0.3633,     -0.9648,      0.2217,     -0.2217,      0.2354,     -1.0469,     -0.5977,     -0.0033,     -0.5703],
        [     0.0000,      0.6211,      0.4922,     -2.7188,     -3.0938,     -2.9531,     -3.2656,      0.2793,     -2.4844,     -0.1494,     -0.8672,      1.5938,      1.5703,     -2.9531,     -1.1094],
        [     0.0000,     -0.6680,      0.3828,     -1.6094,     -1.4453,     -2.0625,     -2.2812,      0.1494,     -1.0938,      0.1040,     -0.9570,      0.6914,      0.7969,     -1.3203,     -0.9922],
        [     0.0000,     -0.7344,     -1.0938,      1.6172,      1.3438,      1.7734,      2.4375,      0.3203,      1.7266,     -0.0096,      0.0189,     -2.1094,     -0.1934,      1.9219,      1.4844],
        [     0.0000,      0.3691,     -0.5391,     -0.3613,      0.4531,      0.4863,     -0.3223,     -1.2344,      0.7773,      0.2070,      1.1641,      0.4902,     -1.1953,      0.6797,      0.5547],
        [     0.0000,     -0.5352,     -1.1016,     -1.0547,      0.6992,     -0.5078,     -0.2520,     -1.2031,      0.4590,     -0.1318,      0.5977,     -1.3281,     -0.5117,      0.2871,     -0.5469],
        [     0.0000,     -0.0723,     -0.0315,     -0.4941,     -0.8828,     -1.8125,     -2.4375,     -0.9336,     -1.8672,     -0.2500,     -0.4805,      0.1807,     -0.2656,     -1.4609,     -1.1484]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7924],
        [0.7321],
        [0.5905],
        [0.3257],
        [0.3596],
        [0.3022],
        [0.3153],
        [0.2288],
        [0.1733],
        [0.0970],
        [0.0595],
        [0.0922],
        [0.0886],
        [0.0891]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9883, 0.0121, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9180, 0.0505, 0.0332, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9375, 0.0315, 0.0254, 0.0065, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7422, 0.0540, 0.0276, 0.0535, 0.1245, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7812, 0.0503, 0.0378, 0.0175, 0.0413, 0.0703, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5820, 0.0613, 0.0830, 0.0277, 0.0410, 0.1436, 0.0625, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7734, 0.0457, 0.0195, 0.0058, 0.0461, 0.0356, 0.0281, 0.0461, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7266, 0.0325, 0.0227, 0.0151, 0.0135, 0.0530, 0.0649, 0.0089, 0.0635, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5430, 0.0613, 0.0498, 0.0425, 0.0209, 0.0728, 0.0513, 0.0518, 0.0500, 0.0559, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3770, 0.0200, 0.0020, 0.0047, 0.0065, 0.0212, 0.0437, 0.0015, 0.1885, 0.0015, 0.3340, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6562, 0.0327, 0.0112, 0.0049, 0.0189, 0.0610, 0.0299, 0.0535, 0.0400, 0.0225, 0.0581, 0.0107, 0.0000, 0.0000, 0.0000],
        [0.6719, 0.0214, 0.0075, 0.0035, 0.0195, 0.0518, 0.0403, 0.0141, 0.0713, 0.0085, 0.0327, 0.0084, 0.0481, 0.0000, 0.0000],
        [0.4004, 0.0262, 0.0299, 0.0239, 0.0172, 0.0630, 0.0825, 0.0117, 0.0613, 0.0232, 0.1201, 0.0238, 0.0211, 0.0952, 0.0000],
        [0.2676, 0.0703, 0.0231, 0.0212, 0.0112, 0.0435, 0.0383, 0.0415, 0.0261, 0.0767, 0.1035, 0.0781, 0.0723, 0.0376, 0.0889]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0304, -0.0115, -0.0097,  ..., -0.0235, -0.0281,  0.0330],
        [-0.0099,  0.0154, -0.0149,  ...,  0.0237,  0.0099, -0.0370],
        [ 0.0142,  0.0305,  0.0192,  ...,  0.0131,  0.0166,  0.0101],
        ...,
        [-0.0087,  0.0127,  0.0185,  ...,  0.0369, -0.0209, -0.0054],
        [-0.0097, -0.0012, -0.0020,  ..., -0.0018, -0.0007,  0.0022],
        [ 0.0234,  0.0313,  0.0203,  ...,  0.0040, -0.0290,  0.0199]], device='cuda:0', requires_grad=True)
K: tensor([ 2.2656, -0.1357, -1.2422,  0.2217, -1.2969, -1.1562,  0.6641,  0.9219,  0.7852,  0.1475,  0.9570,  0.9492, -1.5703,  0.6719,  0.7266, -1.4219, -0.3516,  0.2314, -0.6875, -0.0256,  0.9727,  1.0469,  1.1328, -2.1094,  0.3848,  0.1338, -1.0000,  0.5664, -0.2500, -0.5547,  2.0312,  0.0388,
        -1.5312,  0.1680, -1.3594,  0.7031,  1.0391,  1.3672,  0.7109,  1.3125,  2.0312, -1.2188, -1.2812,  1.1016,  0.8867,  0.2090, -1.3125, -2.0469,  1.1328,  1.1250, -1.0312,  2.0469, -1.2422,  0.0403,  0.2383, -0.9727,  1.4141,  0.4922, -0.3789,  1.5547, -0.3223,  1.7812,  1.4141,  0.4219],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[     0.0177,     -0.0135,     -0.0098,  ...,     -0.0043,      0.0044,     -0.0100],
        [     0.0197,      0.0055,     -0.0562,  ...,     -0.0160,     -0.0105,     -0.0183],
        [     0.0397,      0.0321,      0.0258,  ...,     -0.0155,      0.0293,      0.0167],
        ...,
        [    -0.0150,     -0.0206,      0.0157,  ...,      0.0208,     -0.0000,     -0.0392],
        [     0.0466,      0.0138,     -0.0112,  ...,     -0.0105,      0.0115,     -0.0016],
        [     0.0149,     -0.0256,     -0.0195,  ...,      0.0106,     -0.0087,      0.0194]], device='cuda:0', requires_grad=True)
Q: tensor([-0.8984,  0.1689,  0.1787, -0.0454,  0.2852, -0.1709,  0.5430,  0.9102,  0.4551,  0.5039,  0.2090, -1.9453,  0.2363, -0.7148,  0.0850,  1.7109, -0.2266,  0.4043, -0.9375, -1.3594,  1.2812, -0.7188, -0.2031,  0.8047, -0.3945,  0.0312,  1.5000,  0.1504, -0.2070, -0.1279, -0.4863, -0.4453,
        -0.3887,  0.4590,  1.0938,  1.1641,  0.7578,  0.3711,  0.0398,  0.2734, -0.4668,  0.6328, -0.1309,  0.0835,  0.0571, -1.4062,  0.2852, -0.9102,  0.6836, -0.0742,  0.3750, -0.2695, -0.8711,  0.1582,  0.2832,  1.7734, -0.6992,  0.6562,  0.6484,  0.3477, -0.7188, -0.2949,  0.0796, -0.4238],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -4.4062, -7.0312, -7.5938, -6.1250, -4.5625, -4.1562, -5.9688, -2.8750, -8.2500, -5.9688, -7.7500, -4.7500, -3.0938, -3.9844],
        [ 0.0000, -2.9062, -3.3281, -4.5312, -3.6406, -2.6094, -2.7656, -2.1875, -2.9219, -2.7969, -3.1562, -2.8750, -1.6797, -2.7031, -2.1094],
        [ 0.0000, -3.3906, -3.6094, -4.9688, -4.2500, -3.4688, -2.8125, -3.9688, -3.5156, -4.2500, -5.0312, -3.8281, -3.3281, -3.6250, -2.7812],
        [ 0.0000, -2.6250, -3.2969, -2.6250, -1.7812, -1.5312, -1.4922, -2.8438,  0.1504, -2.5000,  1.1562, -2.7656, -2.1562,  0.8945, -1.1719],
        [ 0.0000, -2.7500, -3.0312, -3.8125, -2.9375, -2.4062, -1.8906, -2.7344, -1.8516, -2.6875, -3.1719, -2.3594, -2.4375, -1.7891, -1.8125],
        [ 0.0000, -2.2500, -1.9453, -3.0469, -2.6562, -1.3984, -2.2344, -1.2422, -1.4766, -1.6406, -3.7812, -1.3828, -0.8945, -1.7344, -1.0312],
        [ 0.0000, -2.8281, -3.6719, -4.9062, -2.8281, -3.0781, -3.3125, -2.8125, -2.4219, -3.4219, -3.7188, -3.3125, -2.1875, -2.5938, -2.0000],
        [ 0.0000, -3.1094, -3.4688, -3.8750, -3.9844, -2.6094, -2.4062, -4.4062, -2.4375, -4.1250, -2.0938, -4.0312, -3.7031, -1.9844, -2.3438],
        [ 0.0000, -2.1875, -2.3906, -2.5469, -3.2656, -2.0156, -2.3594, -2.3594, -2.3906, -2.2812, -1.6172, -2.0625, -1.4219, -2.0312, -2.7344],
        [ 0.0000, -2.9375, -5.2500, -4.3750, -4.0625, -2.8750, -2.1562, -5.5000, -0.6914, -5.5625, -0.1191, -5.0000, -4.1875, -0.0962, -3.3125],
        [ 0.0000, -3.0000, -4.0625, -4.9062, -3.5469, -2.3750, -3.0938, -2.5156, -2.7969, -3.3750, -2.4219, -4.1250, -1.6484, -2.4219, -2.5312],
        [ 0.0000, -3.4531, -4.5000, -5.2812, -3.5312, -2.5625, -2.8125, -3.8594, -2.2500, -4.3750, -3.0312, -4.3750, -2.6406, -2.1875, -3.5625],
        [ 0.0000, -2.7188, -2.5938, -2.8125, -3.1406, -1.8516, -1.5859, -3.5312, -1.8828, -2.8438, -1.2031, -2.8281, -2.9375, -1.4375, -2.0625],
        [ 0.0000, -1.3359, -2.4531, -2.5312, -3.1719, -1.8203, -1.9453, -1.8594, -2.3281, -1.2500, -0.9492, -1.2344, -1.3047, -1.9609, -1.1016]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8441],
        [0.6792],
        [0.6144],
        [0.4730],
        [0.4309],
        [0.3885],
        [0.4926],
        [0.3555],
        [0.3651],
        [0.3172],
        [0.3874],
        [0.3298],
        [0.2444],
        [0.2618]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0002,     0.0000,     0.0000,     0.0004,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0087,  0.0042,  0.0175,  ..., -0.0152, -0.0064, -0.0132],
        [ 0.0281, -0.0438, -0.0261,  ..., -0.0001, -0.0174, -0.0295],
        [ 0.0390, -0.0331,  0.0339,  ..., -0.0051, -0.0171,  0.0083],
        ...,
        [ 0.0368,  0.0114, -0.0268,  ..., -0.0031,  0.0208,  0.0178],
        [ 0.0060,  0.0269, -0.0185,  ..., -0.0168, -0.0411, -0.0186],
        [ 0.0178, -0.0070,  0.0043,  ...,  0.0033, -0.0202,  0.0166]], device='cuda:0', requires_grad=True)
K: tensor([-1.5234, -1.4297, -2.1875, -2.1406, -2.4531,  2.2344, -1.6328,  2.2500, -1.6016, -2.7500,  0.9844, -0.8242, -1.9219, -1.8828, -2.4844,  0.4707,  2.0312,  2.5938, -3.0312,  1.7969,  2.3438,  1.9922, -1.4453, -0.9062,  2.0469, -0.3320, -0.3496, -2.8125,  1.9844,  1.7500,  1.0156,  3.1406,
        -1.3359,  1.4297,  2.5000, -1.7812, -1.4531,  0.2314,  1.5781, -1.4219,  1.0938, -1.8906, -0.3145,  1.5391,  1.4062,  3.0312, -1.6875, -2.5625,  1.9766,  2.5625, -2.1562, -2.0312,  1.9844,  1.4297,  2.7344, -1.3359, -1.7578, -2.8750, -2.0781, -2.0000, -3.3125, -2.1875,  2.1094,  1.5703],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0149,  0.0120,  0.0264,  ..., -0.0138,  0.0391, -0.0064],
        [ 0.0102,  0.0325,  0.0074,  ...,  0.0212,  0.0221, -0.0196],
        [-0.0095, -0.0024,  0.0167,  ..., -0.0199,  0.0486, -0.0239],
        ...,
        [-0.0062, -0.0046,  0.0127,  ..., -0.0322, -0.0028,  0.0041],
        [ 0.0152, -0.0148,  0.0171,  ...,  0.0303,  0.0218, -0.0126],
        [ 0.0300, -0.0277, -0.0263,  ...,  0.0227,  0.0273,  0.0072]], device='cuda:0', requires_grad=True)
Q: tensor([ 1.9531,  1.4688, -0.2197,  0.0276,  0.9609, -0.7461,  1.0078, -0.8945,  2.2500,  1.1953, -1.0156,  0.4668,  1.6250,  1.8672,  1.3047, -1.2031, -0.8281, -2.1562,  2.4062, -0.4941, -1.6328,  0.0806,  1.1250,  0.8203, -0.9844, -0.9805,  0.8164,  0.8555, -1.3672, -1.1094, -1.9766, -1.1250,
         0.4160, -2.1719, -0.3809,  0.6094,  1.8047, -0.3594, -0.4551, -0.2061, -1.5625,  2.1562,  1.3359, -1.0234, -0.3809, -1.1172,  1.8438,  1.1094, -1.0000, -1.5547,  1.5781, -0.1348, -1.8438, -1.0234, -1.6406,  2.1406,  0.5898,  1.9062,  1.9297,  2.3906,  2.3281,  0.9922, -2.2500, -0.0679],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000, -15.4375, -14.1875, -15.7500, -17.8750, -12.0625, -13.8750, -16.6250, -13.1250, -16.2500, -18.6250, -15.6875, -14.6250, -12.7500, -17.3750],
        [  0.0000, -12.1250, -10.8750, -12.1875, -14.2500,  -9.3750, -10.9375, -12.6250, -10.0625, -12.3750, -14.4375, -12.1875, -11.2500,  -9.8750, -13.5000],
        [  0.0000, -16.1250, -14.8750, -16.3750, -18.7500, -12.9375, -14.3750, -17.6250, -13.5625, -17.1250, -19.5000, -16.6250, -15.5625, -13.3125, -17.8750],
        [  0.0000, -13.5000, -12.2500, -13.5625, -15.6875, -10.6250, -12.0625, -14.8750, -11.3125, -14.3125, -16.3750, -13.6875, -12.8125, -11.0625, -15.0000],
        [  0.0000,  -9.3750,  -8.4375, -10.2500, -11.1875,  -7.7812,  -8.9375, -10.0000,  -8.7500, -10.1875, -11.7500,  -9.9375,  -9.1875,  -8.5625, -10.3750],
        [  0.0000, -11.8750, -10.8125, -12.3750, -14.3125,  -9.5000, -10.9375, -12.7500, -10.6250, -12.7500, -14.8125, -12.3125, -11.6875, -10.3750, -13.3125],
        [  0.0000, -11.1875, -10.0625, -11.5000, -13.8750,  -9.4375, -10.6875, -12.1250,  -9.4375, -11.3125, -13.8750, -11.3750, -10.9375,  -9.3750, -12.1875],
        [  0.0000, -10.6250,  -9.4375, -11.1250, -13.1250,  -9.1875, -10.1250, -11.6250,  -9.5000, -11.1875, -13.5625, -10.9375, -10.5000,  -9.3750, -11.4375],
        [  0.0000, -13.3750, -12.0000, -13.6875, -16.6250, -11.3750, -12.2500, -14.6250, -11.2500, -13.8750, -16.7500, -13.5000, -12.8750, -11.0625, -14.9375],
        [  0.0000, -13.9375, -13.0000, -14.8125, -16.6250, -11.8125, -13.5000, -15.1875, -12.4375, -14.6875, -17.5000, -14.5625, -13.8125, -12.2500, -15.3125],
        [  0.0000, -14.6250, -13.2500, -14.7500, -17.7500, -11.8125, -13.4375, -16.2500, -12.1875, -15.5000, -17.7500, -14.8125, -13.8750, -11.9375, -16.8750],
        [  0.0000, -11.0000,  -9.8750, -11.6250, -13.8750,  -9.5625, -10.6875, -12.3125,  -9.5000, -11.4375, -13.8750, -11.1875, -10.8125,  -9.3750, -12.4375],
        [  0.0000, -10.3125,  -9.1250, -10.9375, -12.8125,  -8.9375,  -9.9375, -11.3125,  -9.3125, -10.8125, -13.2500, -10.6250, -10.2500,  -9.1250, -11.1875],
        [  0.0000, -17.0000, -15.6250, -17.3750, -18.8750, -13.6250, -15.0625, -18.3750, -13.9375, -17.6250, -20.7500, -17.2500, -16.5000, -13.6875, -18.1250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [1.0000],
        [1.0000],
        [1.0000],
        [0.9980],
        [0.9945],
        [0.9993],
        [0.9993],
        [0.9990],
        [1.0000],
        [0.9993],
        [1.0000],
        [1.0000],
        [0.9974],
        [0.9997]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4180, 0.5820, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0991, 0.2793, 0.6211, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0613, 0.2988, 0.3906, 0.2500, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0737, 0.1611, 0.4277, 0.1104, 0.2275, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0767, 0.1108, 0.3320, 0.1069, 0.1260, 0.2461, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0311, 0.0535, 0.3711, 0.0449, 0.0209, 0.0532, 0.4258, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0393, 0.0415, 0.1514, 0.0226, 0.0388, 0.0664, 0.4219, 0.2168, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0522, 0.0304, 0.0811, 0.0165, 0.0513, 0.0796, 0.3750, 0.1582, 0.1562, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0349, 0.0312, 0.0635, 0.0136, 0.0461, 0.0513, 0.2539, 0.2158, 0.1514, 0.1396, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0248, 0.0199, 0.1016, 0.0129, 0.0225, 0.0461, 0.3281, 0.1738, 0.0820, 0.1133, 0.0747, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0625, 0.0403, 0.0771, 0.0165, 0.0339, 0.0376, 0.1543, 0.1328, 0.0811, 0.0845, 0.1074, 0.1729, 0.0000, 0.0000, 0.0000],
        [0.0479, 0.0226, 0.0713, 0.0079, 0.0193, 0.0330, 0.1562, 0.1113, 0.0698, 0.0674, 0.0674, 0.0967, 0.2305, 0.0000, 0.0000],
        [0.0474, 0.0142, 0.0396, 0.0062, 0.0199, 0.0327, 0.1543, 0.0713, 0.0640, 0.0564, 0.0684, 0.0732, 0.1465, 0.2061, 0.0000],
        [0.0304, 0.0176, 0.0242, 0.0065, 0.0104, 0.0151, 0.0713, 0.0503, 0.0349, 0.0339, 0.0398, 0.1011, 0.1299, 0.0967, 0.3379]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0148,  0.0147,  0.0052,  ..., -0.0283, -0.0007, -0.0444],
        [-0.0301, -0.0156, -0.0109,  ...,  0.0009,  0.0058, -0.0039],
        [-0.0308, -0.0051,  0.0403,  ..., -0.0194, -0.0172, -0.0253],
        ...,
        [-0.0064, -0.0362, -0.0055,  ..., -0.0380, -0.0129, -0.0555],
        [-0.0258, -0.0314, -0.0235,  ..., -0.0022, -0.0085,  0.0161],
        [-0.0146,  0.0178,  0.0219,  ..., -0.0139, -0.0092, -0.0059]], device='cuda:0', requires_grad=True)
K: tensor([-1.9453, -1.9844, -1.5000, -0.8125, -1.7500, -1.8281, -2.2812,  1.8359,  0.6406, -1.3984,  1.5156, -0.2754,  2.0312, -2.6250,  1.4453,  2.2031,  0.7695,  0.5195, -0.3652,  1.4531, -1.1719, -0.8125, -1.3828, -0.7773, -1.1016,  0.6250,  1.2734,  2.0625, -2.2812,  1.8828, -1.6953, -2.9219,
        -2.5312, -0.2227,  0.5352, -1.3594,  3.2812, -0.7461, -1.7188,  1.4062, -3.2656,  1.7109,  1.9297,  2.3281,  1.1875, -1.4141, -1.3672, -1.5234,  2.9688,  1.8828,  1.0312, -0.9883, -1.0234, -2.5781, -2.4219, -0.9766,  2.3125, -2.1406, -1.7188,  1.6641, -1.3281,  1.3125,  0.9258, -2.3438],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0134,  0.0024,  0.0149,  ...,  0.0260, -0.0136, -0.0197],
        [ 0.0355, -0.0238,  0.0188,  ..., -0.0110,  0.0083,  0.0200],
        [-0.0190,  0.0109,  0.0442,  ...,  0.0220,  0.0236, -0.0073],
        ...,
        [ 0.0163, -0.0006, -0.0330,  ..., -0.0088,  0.0004, -0.0077],
        [-0.0002,  0.0327, -0.0152,  ...,  0.0229,  0.0120, -0.0303],
        [-0.0075, -0.0005, -0.0067,  ...,  0.0094,  0.0015, -0.0031]], device='cuda:0', requires_grad=True)
Q: tensor([-0.6562,  0.1011, -0.4668, -1.2969, -1.4766,  0.7539,  0.7148, -0.6055, -0.5352,  1.2422,  1.4453,  2.7812, -1.3438, -0.2773,  2.7969, -2.5312, -4.7500,  0.6562, -0.7656,  0.0981, -2.4375,  1.3516, -3.9531,  0.8555,  0.4883, -0.6953,  2.1875,  0.2617, -2.6562, -2.7812, -0.5117,  0.5898,
        -3.3594,  3.2031, -1.1328,  1.8984,  0.0125, -0.4023, -0.6719,  1.8359,  0.1289, -0.1865,  0.3672,  0.0679, -2.1094, -1.8672,  0.4102, -1.6875, -0.5156,  2.2344,  0.2637, -1.6797, -0.9180,  0.0325,  1.8828,  1.3516, -1.1016,  0.7617, -0.2500, -1.2109, -2.0938,  3.2344,  0.1279, -1.8281],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.3301,  0.9453, -0.2715,  0.2969,  0.2539,  1.3516,  1.2656,  0.8789,  0.5859,  1.0703,  1.3281,  1.6641,  1.5859,  3.7344],
        [ 0.0000,  1.0391,  1.8359,  0.9062,  1.4219,  1.4219,  2.6719,  2.6406,  2.0938,  2.1406,  2.2969,  2.7031,  3.1562,  2.9375,  4.0938],
        [ 0.0000,  1.5781,  1.8516,  1.4062,  1.7969,  1.7188,  2.8281,  2.7188,  2.5156,  2.5625,  3.2812,  3.3281,  3.6406,  3.4375,  4.6875],
        [ 0.0000,  0.7812,  1.7578,  0.4023,  1.1250,  1.4609,  3.2812,  2.6875,  2.2812,  2.6250,  2.8594,  2.6562,  3.3906,  3.5000,  5.7812],
        [ 0.0000,  0.3633,  1.4609,  0.3320,  0.4961,  1.1641,  2.8125,  2.1875,  1.7969,  2.1719,  2.3281,  2.1875,  2.7656,  2.8750,  5.2812],
        [ 0.0000,  0.5430,  2.4844,  0.3672, -0.4004,  0.5352,  2.6094,  2.4062,  0.3242,  1.6562, -0.1875,  2.5469,  2.7969,  1.3125,  5.6875],
        [ 0.0000,  0.0544,  1.3516, -0.5547, -0.0106,  0.5273,  2.3750,  1.7031,  1.1328,  1.1562,  1.3281,  1.8203,  2.3750,  2.2344,  4.2812],
        [ 0.0000, -0.5430,  0.4414, -1.1562, -0.0195,  0.4219,  1.9688,  1.1094,  1.0938,  0.8750,  1.2578,  1.1328,  1.8047,  2.2344,  4.4062],
        [ 0.0000, -0.1060,  0.6016, -0.9414,  0.2832,  0.3887,  1.9844,  1.8203,  1.4688,  1.3906,  1.7500,  1.6797,  2.6719,  2.6250,  3.6875],
        [ 0.0000, -0.2236,  1.4062, -0.6562, -0.1021,  0.6172,  2.5781,  1.9453,  1.1953,  1.5156,  1.1016,  2.3438,  2.8906,  2.4844,  5.7500],
        [ 0.0000, -0.4355,  0.2109, -1.3281, -0.6094, -0.5078,  0.9023,  0.7539,  0.2617,  0.3027,  0.5430,  1.0156,  1.4844,  1.2422,  2.7812],
        [ 0.0000, -0.7461,  0.4023, -1.7969, -0.9023, -0.3730,  1.1797,  0.8438,  0.3789,  0.3457,  0.3418,  0.7070,  1.5703,  1.4922,  3.4375],
        [ 0.0000, -1.2031, -0.1807, -2.0312, -0.8711, -0.3711,  1.1797,  0.4102,  0.3008,  0.1748,  0.3691,  0.4336,  1.1250,  1.4688,  3.7344],
        [ 0.0000, -0.5430, -0.2295, -1.5391, -1.0703, -0.6992,  0.8516,  0.5039,  0.1426,  0.1118,  0.2695,  1.2031,  1.4531,  1.1641,  2.4062]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4738],
        [0.2174],
        [0.2376],
        [0.2740],
        [0.2042],
        [0.2625],
        [0.1279],
        [0.1709],
        [0.0981],
        [0.1555],
        [0.0805],
        [0.0968],
        [0.1219],
        [0.1033]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1973,     0.8047,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0038,     0.2578,     0.7383,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0028,     0.0204,     0.0302,     0.9453,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0461,     0.0649,     0.0574,     0.0084,     0.8242,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0021,     0.0605,     0.0167,     0.0011,     0.0630,     0.8555,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0074,     0.0295,     0.2129,     0.1069,     0.0026,     0.0197,     0.6211,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0028,     0.0022,     0.0015,     0.0247,     0.9297,     0.0034,     0.0059,     0.0303,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0025,     0.0005,     0.0010,     0.0001,     0.0054,     0.0019,     0.0001,     0.9727,     0.0146,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0442,     0.0120,     0.0072,     0.1191,     0.0012,     0.0007,     0.7109,     0.0069,     0.0103,     0.0874,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0767,     0.0001,     0.0005,     0.0002,     0.0012,     0.0001,     0.0007,     0.0261,     0.0071,     0.8477,     0.0400,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.0003,     0.0003,     0.0566,     0.0000,     0.0000,     0.9414,     0.0000,     0.0000,     0.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0003,     0.0000,     0.0000,     0.0003,     0.1650,     0.0001,     0.0001,     0.0004,     0.8164,     0.0023,     0.0084,     0.0019,     0.0052,     0.0000,     0.0000],
        [    0.0006,     0.0001,     0.0001,     0.0000,     0.0005,     0.0001,     0.0000,     0.0486,     0.0022,     0.5117,     0.0021,     0.0060,     0.4238,     0.0050,     0.0000],
        [    0.0152,     0.0052,     0.0160,     0.1001,     0.0000,     0.0001,     0.5742,     0.0000,     0.0000,     0.0000,     0.0045,     0.0001,     0.0000,     0.0000,     0.2832]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0249, -0.0370, -0.0008,  ...,  0.0211,  0.0430, -0.0209],
        [ 0.0045, -0.0546, -0.0071,  ...,  0.0060,  0.0124, -0.0068],
        [-0.0268, -0.0042, -0.0274,  ...,  0.0298, -0.0380, -0.0113],
        ...,
        [ 0.0359,  0.0104, -0.0300,  ..., -0.0053, -0.0183,  0.0207],
        [-0.0107,  0.0067,  0.0163,  ...,  0.0398, -0.0196,  0.0139],
        [-0.0376,  0.0514, -0.0453,  ...,  0.0042,  0.0181,  0.0361]], device='cuda:0', requires_grad=True)
K: tensor([-0.2275, -0.6875, -2.1875,  0.1943, -1.7891, -0.7461,  0.1670,  0.2393, -0.1719, -1.8047, -1.4297, -0.9688,  1.2656, -0.6836, -1.7109, -0.0757,  2.2656,  0.6523, -3.4531,  0.9023,  1.9531, -1.7500, -1.9766,  1.8047,  0.6914,  0.7734, -2.0625,  1.5703, -0.5625, -2.3281, -1.3438,  0.9648,
        -0.4434,  2.5625,  1.1484, -0.4512,  2.2500, -1.1719, -0.1514, -0.5859, -0.2773, -1.1719, -1.1875,  0.1943, -0.8672, -0.6211, -1.1328,  0.5273, -0.1797, -1.7031,  0.9180,  1.4297, -1.2266,  0.2539,  0.3555, -1.1094, -0.5039, -2.7812, -0.8672, -1.5938,  1.0156, -0.2246,  0.4395, -1.0156],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0121, -0.0081, -0.0075,  ..., -0.0209, -0.0248, -0.0083],
        [ 0.0102, -0.0065, -0.0050,  ...,  0.0163, -0.0251,  0.0332],
        [ 0.0114, -0.0137,  0.0034,  ...,  0.0023, -0.0245, -0.0068],
        ...,
        [ 0.0227, -0.0399, -0.0060,  ...,  0.0287,  0.0138,  0.0085],
        [-0.0056,  0.0022,  0.0038,  ...,  0.0003,  0.0189, -0.0102],
        [-0.0083, -0.0105, -0.0061,  ...,  0.0271,  0.0023, -0.0335]], device='cuda:0', requires_grad=True)
Q: tensor([-0.6484,  0.7969,  0.6836,  1.0781, -0.1514, -1.4141, -1.5469, -1.7734, -1.0312,  0.9023, -1.9219,  0.8047,  0.8906, -1.3906,  0.5742, -1.3281,  0.4648, -0.3008, -0.1235,  0.6445,  0.6602, -1.1797, -0.2871, -0.4746,  0.1963,  0.5547, -1.9141,  1.9062, -1.7344,  1.6328, -2.7188, -1.4766,
        -1.2578,  1.2891, -1.2266, -1.6797, -0.4434,  0.2471,  2.0156, -0.5195, -0.3594,  1.9141, -0.7969,  2.6094, -0.6992,  0.8125, -0.5273,  1.8516,  0.9062, -2.0156, -1.0000,  2.4531, -0.8047, -0.0757, -0.7305,  0.1816, -1.8047,  0.4141, -0.4629,  0.2891,  1.0938, -0.0530, -1.1719, -1.2812],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000,   1.4062,   1.8359,   2.4844,  -0.6484,  -0.1318,   4.5000,  -0.1436,  -0.5547,   0.0718,   0.9062,  -0.2119,   0.1963,  -0.5312,   1.2500],
        [  0.0000,   4.2188,   5.2812,   7.1562,  -7.0938,  -1.1953,  11.7500,  -4.9375,  -9.3125,  -8.6250,  -1.3516,  -5.1250,  -7.2188, -10.0625,   3.7188],
        [  0.0000,   1.9766,   2.3594,   5.8125,  -1.4453,  -0.9219,   7.2812,  -2.5000,  -1.8359,  -4.0938,   1.7266,  -1.9609,  -3.7500,  -1.9766,   4.8125],
        [  0.0000,   0.3438,   0.2217,  -1.7109,   2.8906,   2.2031,  -2.2812,   8.0625,   2.6562,   8.5000,   1.4609,   2.8125,   8.6875,   2.3750,  -4.2500],
        [  0.0000,   3.3438,   2.0625,  -0.6719,   3.3906,   6.0000,   0.3262,   8.3125,   3.1562,   7.1562,   2.0781,   4.2812,   8.5625,   3.0625,  -1.3594],
        [  0.0000,   1.3906,   3.3594,   2.6719,  -1.0391,   0.9844,   4.4375,   2.0625,  -1.3516,   1.7344,   0.6367,   0.3672,   2.1719,  -1.4922,   3.1250],
        [  0.0000,  -0.2295,  -0.6055,   2.1719,   5.8125,   0.1855,   0.7422,   2.3906,   6.3750,   1.8047,   2.7344,   1.4062,   3.0469,   6.1250,   0.9180],
        [  0.0000,  -1.6328,  -0.9180,  -3.7656,   0.7539,  -0.2910,  -3.2812,   5.9375,   1.7500,   6.4688,   0.8711,   2.2344,   6.9062,   1.7031,  -4.3750],
        [  0.0000,  -1.3047,  -1.8203,   0.9883,  -3.6094,  -4.1250,   2.7812,  -1.8594,  -1.4609,   0.6797,   2.6875,  -0.9453,  -0.5586,  -0.3926,   0.6953],
        [  0.0000,  -6.5000,  -5.0625,  -5.8750,  -4.1250,  -6.8438,  -4.7188,  -1.0781,  -2.3750,   2.4062,  -0.6484,  -1.4922,   0.7031,  -1.0078,  -4.0000],
        [  0.0000,   0.6562,   0.8555,   6.0000,  -6.0938,  -5.5000,   8.8125,  -8.1875,  -5.9062,  -7.7188,   0.4258,  -4.8750,  -8.2500,  -5.5625,   3.5625],
        [  0.0000,  -2.0000,  -3.2344,  -0.0342,   6.1562,  -1.6797,  -1.1406,   0.2334,   7.7812,   1.9141,   3.1875,   1.7031,   2.7031,   8.5000,  -0.0260],
        [  0.0000,  -2.4062,  -2.4375,  -4.9062,  -0.1797,  -1.4922,  -4.0625,   4.3438,   1.2266,   6.6875,   1.1797,   2.2500,   6.5000,   2.0781,  -4.9375],
        [  0.0000,  -1.0625,   0.0488,   1.8828,  -7.0625,  -5.0938,   3.6250,  -6.3750,  -7.2188,  -5.9688,  -1.2266,  -5.0000,  -6.9688,  -6.8125,   2.9219]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2571],
        [0.1098],
        [0.0900],
        [0.0849],
        [0.0744],
        [0.0740],
        [0.0404],
        [0.0190],
        [0.0247],
        [0.0769],
        [0.0173],
        [0.0404],
        [0.0175],
        [0.0870]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.1211 a:0.1729 and:0.1406 and:0.1187atoes:0.0762,:0.4688 a:0.1030vern:0.1079)
vern
------
		( a:0.1729 and:0.1406 and:0.1187atoes:0.0762,:0.4688 a:0.1030vern:0.1079al:0.0820)
al, and the most common of the most common and most common in the
@ 4550 train 4.9336 , allloss: 4.9526, dt: 1685.67ms, fracRes: 0.6006, norm(attn): 0.1206, norm(output): 0.2344, norm(x): 0.7984, norm(y): 1.0086, norm:1.2503, tok/sec: 77756.39, flops:68.09, batch-reuse:1
@ 4551 train 4.8780 , allloss: 4.8977, dt: 1268.70ms, fracRes: 0.6013, norm(attn): 0.1201, norm(output): 0.2344, norm(x): 0.7990, norm(y): 1.0087, norm:1.3189, tok/sec: 103312.02, flops:90.47, batch-reuse:1
@ 4552 train 4.9770 , allloss: 4.9967, dt: 1239.20ms, fracRes: 0.6010, norm(attn): 0.1201, norm(output): 0.2344, norm(x): 0.8014, norm(y): 1.0086, norm:1.1904, tok/sec: 105771.74, flops:92.62, batch-reuse:1
@ 4553 train 4.8571 , allloss: 4.8766, dt: 1255.58ms, fracRes: 0.6005, norm(attn): 0.1211, norm(output): 0.2344, norm(x): 0.8019, norm(y): 1.0087, norm:1.2617, tok/sec: 104391.48, flops:91.41, batch-reuse:1
@ 4554 train 5.0360 , allloss: 5.0561, dt: 1280.05ms, fracRes: 0.5998, norm(attn): 0.1216, norm(output): 0.2354, norm(x): 0.7999, norm(y): 1.0085, norm:1.1597, tok/sec: 102396.23, flops:89.67, batch-reuse:1
@ 4555 train 4.8850 , allloss: 4.9053, dt: 1265.64ms, fracRes: 0.5988, norm(attn): 0.1226, norm(output): 0.2344, norm(x): 0.7985, norm(y): 1.0087, norm:1.2253, tok/sec: 103561.54, flops:90.69, batch-reuse:1
@ 4556 train 4.9498 , allloss: 4.9694, dt: 1260.33ms, fracRes: 0.5997, norm(attn): 0.1216, norm(output): 0.2354, norm(x): 0.7975, norm(y): 1.0085, norm:1.2796, tok/sec: 103998.14, flops:91.07, batch-reuse:1
@ 4557 train 4.8934 , allloss: 4.9129, dt: 1246.97ms, fracRes: 0.6011, norm(attn): 0.1196, norm(output): 0.2344, norm(x): 0.7992, norm(y): 1.0086, norm:1.3700, tok/sec: 105112.78, flops:92.05, batch-reuse:1
@ 4558 train 4.8491 , allloss: 4.8686, dt: 1250.69ms, fracRes: 0.6002, norm(attn): 0.1211, norm(output): 0.2354, norm(x): 0.7981, norm(y): 1.0085, norm:1.0783, tok/sec: 104799.55, flops:91.77, batch-reuse:1
@ 4559 train 4.9254 , allloss: 4.9449, dt: 1261.52ms, fracRes: 0.6005, norm(attn): 0.1221, norm(output): 0.2344, norm(x): 0.8000, norm(y): 1.0086, norm:1.1655, tok/sec: 103899.83, flops:90.98, batch-reuse:1
@ 4560 train 4.8816 , allloss: 4.9019, dt: 1244.43ms, fracRes: 0.6007, norm(attn): 0.1221, norm(output): 0.2354, norm(x): 0.8001, norm(y): 1.0086, norm:1.1794, tok/sec: 105326.65, flops:92.23, batch-reuse:1
@ 4561 train 4.9918 , allloss: 5.0114, dt: 1238.95ms, fracRes: 0.6016, norm(attn): 0.1221, norm(output): 0.2344, norm(x): 0.8005, norm(y): 1.0086, norm:1.1610, tok/sec: 105792.87, flops:92.64, batch-reuse:1
@ 4562 train 5.0022 , allloss: 5.0214, dt: 1247.99ms, fracRes: 0.6010, norm(attn): 0.1211, norm(output): 0.2354, norm(x): 0.8018, norm(y): 1.0086, norm:1.2724, tok/sec: 105026.19, flops:91.97, batch-reuse:1
@ 4563 train 4.8940 , allloss: 4.9131, dt: 1271.22ms, fracRes: 0.6004, norm(attn): 0.1216, norm(output): 0.2354, norm(x): 0.7983, norm(y): 1.0085, norm:1.0270, tok/sec: 103106.93, flops:90.29, batch-reuse:1
@ 4564 train 4.9008 , allloss: 4.9205, dt: 1256.34ms, fracRes: 0.5998, norm(attn): 0.1230, norm(output): 0.2354, norm(x): 0.7975, norm(y): 1.0086, norm:1.1549, tok/sec: 104328.29, flops:91.36, batch-reuse:1
@ 4565 train 4.9213 , allloss: 4.9413, dt: 1243.28ms, fracRes: 0.5989, norm(attn): 0.1230, norm(output): 0.2344, norm(x): 0.7935, norm(y): 1.0085, norm:1.2387, tok/sec: 105424.71, flops:92.32, batch-reuse:1
@ 4566 train 4.8724 , allloss: 4.8926, dt: 1248.71ms, fracRes: 0.5991, norm(attn): 0.1226, norm(output): 0.2344, norm(x): 0.7920, norm(y): 1.0085, norm:1.1944, tok/sec: 104965.67, flops:91.92, batch-reuse:1
@ 4567 train 4.9453 , allloss: 4.9651, dt: 1231.29ms, fracRes: 0.6004, norm(attn): 0.1221, norm(output): 0.2334, norm(x): 0.7927, norm(y): 1.0086, norm:1.0653, tok/sec: 106450.64, flops:93.22, batch-reuse:1
@ 4568 train 4.8934 , allloss: 4.9134, dt: 1247.96ms, fracRes: 0.6005, norm(attn): 0.1226, norm(output): 0.2344, norm(x): 0.7919, norm(y): 1.0085, norm:1.0181, tok/sec: 105029.32, flops:91.97, batch-reuse:1
@ 4569 train 4.8528 , allloss: 4.8720, dt: 1247.16ms, fracRes: 0.6013, norm(attn): 0.1206, norm(output): 0.2334, norm(x): 0.7939, norm(y): 1.0087, norm:1.0841, tok/sec: 105096.62, flops:92.03, batch-reuse:1
@ 4570 train 4.8365 , allloss: 4.8559, dt: 1260.72ms, fracRes: 0.6017, norm(attn): 0.1201, norm(output): 0.2334, norm(x): 0.7925, norm(y): 1.0088, norm:1.1011, tok/sec: 103965.69, flops:91.04, batch-reuse:1
@ 4571 train 4.9443 , allloss: 4.9636, dt: 1252.96ms, fracRes: 0.6002, norm(attn): 0.1221, norm(output): 0.2334, norm(x): 0.7921, norm(y): 1.0087, norm:1.2752, tok/sec: 104610.19, flops:91.61, batch-reuse:1
@ 4572 train 4.9032 , allloss: 4.9236, dt: 1247.30ms, fracRes: 0.5997, norm(attn): 0.1221, norm(output): 0.2344, norm(x): 0.7922, norm(y): 1.0087, norm:1.0635, tok/sec: 105084.89, flops:92.02, batch-reuse:1
@ 4573 train 4.8755 , allloss: 4.8949, dt: 1252.34ms, fracRes: 0.5995, norm(attn): 0.1221, norm(output): 0.2344, norm(x): 0.7911, norm(y): 1.0087, norm:1.3143, tok/sec: 104661.93, flops:91.65, batch-reuse:1
@ 4574 train 4.9624 , allloss: 4.9836, dt: 1258.63ms, fracRes: 0.6021, norm(attn): 0.1196, norm(output): 0.2344, norm(x): 0.7941, norm(y): 1.0085, norm:1.1693, tok/sec: 104138.60, flops:91.19, batch-reuse:1
@ 4575 train 4.8658 , allloss: 4.8855, dt: 1263.23ms, fracRes: 0.6003, norm(attn): 0.1226, norm(output): 0.2344, norm(x): 0.7928, norm(y): 1.0087, norm:1.2426, tok/sec: 103759.58, flops:90.86, batch-reuse:1
@ 4576 train 4.9037 , allloss: 4.9235, dt: 1269.62ms, fracRes: 0.6014, norm(attn): 0.1221, norm(output): 0.2334, norm(x): 0.7911, norm(y): 1.0086, norm:1.2377, tok/sec: 103236.94, flops:90.40, batch-reuse:1
@ 4577 train 4.8778 , allloss: 4.8982, dt: 1541.12ms, fracRes: 0.6014, norm(attn): 0.1216, norm(output): 0.2334, norm(x): 0.7891, norm(y): 1.0086, norm:1.4041, tok/sec: 85049.74, flops:74.48, batch-reuse:1
@ 4578 train 4.8719 , allloss: 4.8917, dt: 1272.07ms, fracRes: 0.6000, norm(attn): 0.1226, norm(output): 0.2344, norm(x): 0.7878, norm(y): 1.0086, norm:1.2390, tok/sec: 103038.05, flops:90.23, batch-reuse:1
@ 4579 train 4.8770 , allloss: 4.8969, dt: 1294.17ms, fracRes: 0.6007, norm(attn): 0.1221, norm(output): 0.2334, norm(x): 0.7904, norm(y): 1.0087, norm:1.3646, tok/sec: 101278.73, flops:88.69, batch-reuse:1
@ 4580 train 5.0087 , allloss: 5.0284, dt: 1293.55ms, fracRes: 0.6009, norm(attn): 0.1211, norm(output): 0.2334, norm(x): 0.7921, norm(y): 1.0087, norm:1.2931, tok/sec: 101327.24, flops:88.73, batch-reuse:1
@ 4581 train 4.8859 , allloss: 4.9064, dt: 1293.19ms, fracRes: 0.6009, norm(attn): 0.1226, norm(output): 0.2344, norm(x): 0.7906, norm(y): 1.0087, norm:1.3474, tok/sec: 101355.79, flops:88.76, batch-reuse:1
@ 4582 train 4.8154 , allloss: 4.8367, dt: 1290.78ms, fracRes: 0.6005, norm(attn): 0.1211, norm(output): 0.2334, norm(x): 0.7878, norm(y): 1.0087, norm:1.1881, tok/sec: 101545.17, flops:88.92, batch-reuse:1
@ 4583 train 4.9032 , allloss: 4.9232, dt: 1249.13ms, fracRes: 0.6013, norm(attn): 0.1206, norm(output): 0.2334, norm(x): 0.7897, norm(y): 1.0086, norm:1.1573, tok/sec: 104930.33, flops:91.89, batch-reuse:1
@ 4584 train 4.9318 , allloss: 4.9518, dt: 1249.07ms, fracRes: 0.6010, norm(attn): 0.1221, norm(output): 0.2344, norm(x): 0.7912, norm(y): 1.0085, norm:1.3040, tok/sec: 104935.50, flops:91.89, batch-reuse:1
@ 4585 train 4.7127 , allloss: 4.7332, dt: 1264.83ms, fracRes: 0.5999, norm(attn): 0.1221, norm(output): 0.2334, norm(x): 0.7899, norm(y): 1.0086, norm:1.1271, tok/sec: 103627.79, flops:90.75, batch-reuse:1
@ 4586 train 4.7484 , allloss: 4.7678, dt: 1287.21ms, fracRes: 0.6005, norm(attn): 0.1211, norm(output): 0.2334, norm(x): 0.7894, norm(y): 1.0086, norm:1.2612, tok/sec: 101826.07, flops:89.17, batch-reuse:1
@ 4587 train 4.7670 , allloss: 4.7866, dt: 1277.87ms, fracRes: 0.6002, norm(attn): 0.1201, norm(output): 0.2334, norm(x): 0.7893, norm(y): 1.0086, norm:1.1062, tok/sec: 102570.34, flops:89.82, batch-reuse:1
@ 4588 train 4.7865 , allloss: 4.8064, dt: 1278.70ms, fracRes: 0.5997, norm(attn): 0.1226, norm(output): 0.2344, norm(x): 0.7897, norm(y): 1.0086, norm:1.2150, tok/sec: 102504.31, flops:89.76, batch-reuse:1
@ 4589 train 4.7118 , allloss: 4.7320, dt: 1278.05ms, fracRes: 0.5989, norm(attn): 0.1226, norm(output): 0.2344, norm(x): 0.7877, norm(y): 1.0086, norm:1.2071, tok/sec: 102555.94, flops:89.81, batch-reuse:1
@ 4590 train 4.7200 , allloss: 4.7402, dt: 1278.93ms, fracRes: 0.5990, norm(attn): 0.1221, norm(output): 0.2344, norm(x): 0.7882, norm(y): 1.0086, norm:1.2558, tok/sec: 102485.54, flops:89.75, batch-reuse:1
@ 4591 train 4.7895 , allloss: 4.8105, dt: 1276.05ms, fracRes: 0.6003, norm(attn): 0.1226, norm(output): 0.2324, norm(x): 0.7881, norm(y): 1.0086, norm:1.1102, tok/sec: 102717.03, flops:89.95, batch-reuse:1
@ 4592 train 4.9370 , allloss: 4.9571, dt: 1247.91ms, fracRes: 0.6004, norm(attn): 0.1211, norm(output): 0.2334, norm(x): 0.7891, norm(y): 1.0085, norm:1.1924, tok/sec: 105033.27, flops:91.98, batch-reuse:1
@ 4593 train 4.7511 , allloss: 4.7726, dt: 1263.65ms, fracRes: 0.6000, norm(attn): 0.1211, norm(output): 0.2334, norm(x): 0.7859, norm(y): 1.0086, norm:1.4314, tok/sec: 103725.20, flops:90.83, batch-reuse:1
@ 4594 train 4.8523 , allloss: 4.8727, dt: 1239.49ms, fracRes: 0.5994, norm(attn): 0.1230, norm(output): 0.2344, norm(x): 0.7903, norm(y): 1.0087, norm:1.2449, tok/sec: 105746.90, flops:92.60, batch-reuse:1
@ 4595 train 4.8191 , allloss: 4.8399, dt: 1242.67ms, fracRes: 0.6001, norm(attn): 0.1230, norm(output): 0.2334, norm(x): 0.7883, norm(y): 1.0086, norm:1.5075, tok/sec: 105475.99, flops:92.36, batch-reuse:1
@ 4596 train 4.8833 , allloss: 4.9035, dt: 1255.75ms, fracRes: 0.6006, norm(attn): 0.1226, norm(output): 0.2334, norm(x): 0.7893, norm(y): 1.0086, norm:1.2012, tok/sec: 104377.85, flops:91.40, batch-reuse:1
@ 4597 train 4.8356 , allloss: 4.8554, dt: 1266.37ms, fracRes: 0.6005, norm(attn): 0.1230, norm(output): 0.2344, norm(x): 0.7921, norm(y): 1.0086, norm:1.1773, tok/sec: 103501.86, flops:90.64, batch-reuse:1
@ 4598 train 4.7266 , allloss: 4.7472, dt: 1246.95ms, fracRes: 0.6013, norm(attn): 0.1226, norm(output): 0.2334, norm(x): 0.7900, norm(y): 1.0087, norm:1.2587, tok/sec: 105114.43, flops:92.05, batch-reuse:1
@ 4599 train 4.7679 , allloss: 4.7886, dt: 1245.25ms, fracRes: 0.6009, norm(attn): 0.1206, norm(output): 0.2334, norm(x): 0.7888, norm(y): 1.0087, norm:1.1045, tok/sec: 105257.42, flops:92.17, batch-reuse:1
@ 4600 train 4.7669 , allloss: 4.7872, dt: 1273.14ms, fracRes: 0.6008, norm(attn): 0.1216, norm(output): 0.2334, norm(x): 0.7909, norm(y): 1.0086, norm:1.1228, tok/sec: 102952.01, flops:90.15, batch-reuse:1
@ 4601 train 4.7905 , allloss: 4.8109, dt: 1253.49ms, fracRes: 0.6009, norm(attn): 0.1201, norm(output): 0.2334, norm(x): 0.7908, norm(y): 1.0088, norm:1.2217, tok/sec: 104565.34, flops:91.57, batch-reuse:1
@ 4602 train 4.6890 , allloss: 4.7086, dt: 1274.17ms, fracRes: 0.6008, norm(attn): 0.1211, norm(output): 0.2344, norm(x): 0.7909, norm(y): 1.0087, norm:1.2922, tok/sec: 102868.81, flops:90.08, batch-reuse:1
@ 4603 train 4.6703 , allloss: 4.6897, dt: 1271.39ms, fracRes: 0.6010, norm(attn): 0.1216, norm(output): 0.2334, norm(x): 0.7898, norm(y): 1.0087, norm:1.1038, tok/sec: 103093.35, flops:90.28, batch-reuse:1
@ 4604 train 4.7948 , allloss: 4.8144, dt: 1261.24ms, fracRes: 0.6003, norm(attn): 0.1221, norm(output): 0.2334, norm(x): 0.7886, norm(y): 1.0087, norm:1.2433, tok/sec: 103923.20, flops:91.00, batch-reuse:1
@ 4605 train 4.8208 , allloss: 4.8410, dt: 1263.58ms, fracRes: 0.6005, norm(attn): 0.1230, norm(output): 0.2334, norm(x): 0.7867, norm(y): 1.0085, norm:1.3211, tok/sec: 103730.62, flops:90.84, batch-reuse:1
@ 4606 train 4.7926 , allloss: 4.8129, dt: 1282.86ms, fracRes: 0.6008, norm(attn): 0.1211, norm(output): 0.2334, norm(x): 0.7864, norm(y): 1.0087, norm:1.2207, tok/sec: 102171.63, flops:89.47, batch-reuse:1
@ 4607 train 4.9984 , allloss: 5.0195, dt: 1279.56ms, fracRes: 0.6008, norm(attn): 0.1221, norm(output): 0.2334, norm(x): 0.7843, norm(y): 1.0084, norm:1.4337, tok/sec: 102435.40, flops:89.70, batch-reuse:1
@ 4608 train 4.7155 , allloss: 4.7359, dt: 1271.35ms, fracRes: 0.6003, norm(attn): 0.1216, norm(output): 0.2334, norm(x): 0.7853, norm(y): 1.0086, norm:1.2901, tok/sec: 103096.46, flops:90.28, batch-reuse:1
@ 4609 train 4.6988 , allloss: 4.7192, dt: 1285.63ms, fracRes: 0.6006, norm(attn): 0.1206, norm(output): 0.2334, norm(x): 0.7864, norm(y): 1.0087, norm:1.1569, tok/sec: 101951.63, flops:89.28, batch-reuse:1
@ 4610 train 4.7658 , allloss: 4.7864, dt: 1274.58ms, fracRes: 0.6014, norm(attn): 0.1187, norm(output): 0.2334, norm(x): 0.7872, norm(y): 1.0087, norm:1.1154, tok/sec: 102835.62, flops:90.05, batch-reuse:1
@ 4611 train 4.7310 , allloss: 4.7515, dt: 1274.22ms, fracRes: 0.5998, norm(attn): 0.1221, norm(output): 0.2334, norm(x): 0.7865, norm(y): 1.0088, norm:1.1456, tok/sec: 102864.61, flops:90.08, batch-reuse:1
@ 4612 train 4.8129 , allloss: 4.8357, dt: 1253.85ms, fracRes: 0.6004, norm(attn): 0.1240, norm(output): 0.2344, norm(x): 0.7867, norm(y): 1.0087, norm:1.2879, tok/sec: 104535.81, flops:91.54, batch-reuse:1
@ 4613 train 4.7188 , allloss: 4.7384, dt: 1272.02ms, fracRes: 0.5992, norm(attn): 0.1221, norm(output): 0.2334, norm(x): 0.7871, norm(y): 1.0087, norm:1.3089, tok/sec: 103042.22, flops:90.23, batch-reuse:1
@ 4614 train 4.7122 , allloss: 4.7332, dt: 1276.93ms, fracRes: 0.5998, norm(attn): 0.1206, norm(output): 0.2344, norm(x): 0.7850, norm(y): 1.0085, norm:1.1522, tok/sec: 102646.32, flops:89.89, batch-reuse:1
@ 4615 train 4.7776 , allloss: 4.7976, dt: 1246.18ms, fracRes: 0.6009, norm(attn): 0.1191, norm(output): 0.2334, norm(x): 0.7871, norm(y): 1.0087, norm:1.3019, tok/sec: 105179.18, flops:92.10, batch-reuse:1
@ 4616 train 4.7772 , allloss: 4.7972, dt: 1262.11ms, fracRes: 0.6006, norm(attn): 0.1191, norm(output): 0.2334, norm(x): 0.7865, norm(y): 1.0087, norm:1.2876, tok/sec: 103851.74, flops:90.94, batch-reuse:1
@ 4617 train 4.8356 , allloss: 4.8572, dt: 1259.33ms, fracRes: 0.6007, norm(attn): 0.1206, norm(output): 0.2334, norm(x): 0.7837, norm(y): 1.0087, norm:1.3180, tok/sec: 104080.58, flops:91.14, batch-reuse:1
@ 4618 train 4.7464 , allloss: 4.7669, dt: 1232.47ms, fracRes: 0.5992, norm(attn): 0.1235, norm(output): 0.2344, norm(x): 0.7860, norm(y): 1.0086, norm:1.2012, tok/sec: 106349.32, flops:93.13, batch-reuse:1
@ 4619 train 4.7667 , allloss: 4.7868, dt: 1279.67ms, fracRes: 0.5998, norm(attn): 0.1235, norm(output): 0.2344, norm(x): 0.7866, norm(y): 1.0086, norm:1.4115, tok/sec: 102426.56, flops:89.69, batch-reuse:1
@ 4620 train 4.8254 , allloss: 4.8455, dt: 1258.96ms, fracRes: 0.6004, norm(attn): 0.1216, norm(output): 0.2334, norm(x): 0.7862, norm(y): 1.0087, norm:1.3025, tok/sec: 104111.29, flops:91.17, batch-reuse:1
@ 4621 train 4.7185 , allloss: 4.7409, dt: 1242.92ms, fracRes: 0.6006, norm(attn): 0.1221, norm(output): 0.2344, norm(x): 0.7849, norm(y): 1.0086, norm:1.1710, tok/sec: 105454.74, flops:92.35, batch-reuse:1
@ 4622 train 4.7334 , allloss: 4.7535, dt: 1241.96ms, fracRes: 0.5993, norm(attn): 0.1221, norm(output): 0.2344, norm(x): 0.7838, norm(y): 1.0087, norm:1.2903, tok/sec: 105536.08, flops:92.42, batch-reuse:1
@ 4623 train 4.7898 , allloss: 4.8109, dt: 1274.25ms, fracRes: 0.5989, norm(attn): 0.1235, norm(output): 0.2344, norm(x): 0.7828, norm(y): 1.0086, norm:1.2198, tok/sec: 102861.90, flops:90.07, batch-reuse:1
@ 4624 train 4.7516 , allloss: 4.7755, dt: 1255.98ms, fracRes: 0.5997, norm(attn): 0.1240, norm(output): 0.2334, norm(x): 0.7831, norm(y): 1.0086, norm:1.3239, tok/sec: 104358.37, flops:91.39, batch-reuse:1
@ 4625 train 4.7413 , allloss: 4.7624, dt: 1258.24ms, fracRes: 0.5997, norm(attn): 0.1226, norm(output): 0.2334, norm(x): 0.7829, norm(y): 1.0086, norm:1.2572, tok/sec: 104171.22, flops:91.22, batch-reuse:1
@ 4626 train 4.7149 , allloss: 4.7350, dt: 1254.62ms, fracRes: 0.5999, norm(attn): 0.1235, norm(output): 0.2334, norm(x): 0.7820, norm(y): 1.0086, norm:1.2008, tok/sec: 104471.88, flops:91.48, batch-reuse:1
@ 4627 train 4.7713 , allloss: 4.7908, dt: 1251.76ms, fracRes: 0.6003, norm(attn): 0.1221, norm(output): 0.2334, norm(x): 0.7844, norm(y): 1.0086, norm:1.0512, tok/sec: 104709.99, flops:91.69, batch-reuse:1
@ 4628 train 4.5737 , allloss: 4.5944, dt: 1244.03ms, fracRes: 0.5997, norm(attn): 0.1230, norm(output): 0.2334, norm(x): 0.7801, norm(y): 1.0085, norm:1.8301, tok/sec: 105360.88, flops:92.26, batch-reuse:1
@ 4629 train 4.8848 , allloss: 4.9058, dt: 1276.75ms, fracRes: 0.5999, norm(attn): 0.1221, norm(output): 0.2334, norm(x): 0.7823, norm(y): 1.0086, norm:1.4516, tok/sec: 102660.27, flops:89.90, batch-reuse:1
@ 4630 train 4.7891 , allloss: 4.8092, dt: 1268.44ms, fracRes: 0.5998, norm(attn): 0.1221, norm(output): 0.2334, norm(x): 0.7857, norm(y): 1.0087, norm:1.3193, tok/sec: 103333.09, flops:90.49, batch-reuse:1
@ 4631 train 4.9098 , allloss: 4.9303, dt: 1301.58ms, fracRes: 0.6006, norm(attn): 0.1206, norm(output): 0.2334, norm(x): 0.7868, norm(y): 1.0086, norm:1.2733, tok/sec: 100702.04, flops:88.18, batch-reuse:1
@ 4632 train 4.9771 , allloss: 4.9976, dt: 1268.24ms, fracRes: 0.6007, norm(attn): 0.1221, norm(output): 0.2334, norm(x): 0.7863, norm(y): 1.0085, norm:1.2428, tok/sec: 103349.78, flops:90.50, batch-reuse:1
@ 4633 train 4.9234 , allloss: 4.9450, dt: 1252.97ms, fracRes: 0.6005, norm(attn): 0.1230, norm(output): 0.2334, norm(x): 0.7852, norm(y): 1.0084, norm:1.2459, tok/sec: 104609.15, flops:91.60, batch-reuse:1
@ 4634 train 4.9382 , allloss: 4.9589, dt: 1262.15ms, fracRes: 0.6003, norm(attn): 0.1230, norm(output): 0.2334, norm(x): 0.7827, norm(y): 1.0086, norm:1.1198, tok/sec: 103848.41, flops:90.94, batch-reuse:1
@ 4635 train 4.8807 , allloss: 4.9011, dt: 1268.11ms, fracRes: 0.5999, norm(attn): 0.1240, norm(output): 0.2334, norm(x): 0.7836, norm(y): 1.0087, norm:1.3558, tok/sec: 103360.15, flops:90.51, batch-reuse:1
@ 4636 train 4.8850 , allloss: 4.9055, dt: 1278.81ms, fracRes: 0.6007, norm(attn): 0.1216, norm(output): 0.2334, norm(x): 0.7840, norm(y): 1.0086, norm:1.1586, tok/sec: 102495.54, flops:89.75, batch-reuse:1
@ 4637 train 4.7831 , allloss: 4.8044, dt: 1264.11ms, fracRes: 0.6008, norm(attn): 0.1211, norm(output): 0.2334, norm(x): 0.7830, norm(y): 1.0086, norm:1.2040, tok/sec: 103687.13, flops:90.80, batch-reuse:1
@ 4638 train 4.9151 , allloss: 4.9359, dt: 1253.93ms, fracRes: 0.6006, norm(attn): 0.1226, norm(output): 0.2334, norm(x): 0.7834, norm(y): 1.0086, norm:1.0555, tok/sec: 104529.13, flops:91.53, batch-reuse:1
@ 4639 train 4.8992 , allloss: 4.9202, dt: 1255.59ms, fracRes: 0.5999, norm(attn): 0.1216, norm(output): 0.2334, norm(x): 0.7837, norm(y): 1.0086, norm:1.0717, tok/sec: 104390.39, flops:91.41, batch-reuse:1
@ 4640 train 4.9019 , allloss: 4.9229, dt: 1244.56ms, fracRes: 0.5993, norm(attn): 0.1226, norm(output): 0.2334, norm(x): 0.7838, norm(y): 1.0086, norm:1.2368, tok/sec: 105316.32, flops:92.22, batch-reuse:1
@ 4641 train 4.9000 , allloss: 4.9205, dt: 1245.92ms, fracRes: 0.6000, norm(attn): 0.1221, norm(output): 0.2344, norm(x): 0.7833, norm(y): 1.0086, norm:1.4738, tok/sec: 105200.74, flops:92.12, batch-reuse:1
@ 4642 train 4.9336 , allloss: 4.9562, dt: 1254.00ms, fracRes: 0.6016, norm(attn): 0.1211, norm(output): 0.2334, norm(x): 0.7837, norm(y): 1.0087, norm:1.2763, tok/sec: 104522.73, flops:91.53, batch-reuse:1
@ 4643 train 5.0996 , allloss: 5.1210, dt: 1252.74ms, fracRes: 0.6022, norm(attn): 0.1211, norm(output): 0.2334, norm(x): 0.7859, norm(y): 1.0086, norm:1.2697, tok/sec: 104628.38, flops:91.62, batch-reuse:1
@ 4644 train 4.9248 , allloss: 4.9450, dt: 1275.86ms, fracRes: 0.6018, norm(attn): 0.1216, norm(output): 0.2334, norm(x): 0.7864, norm(y): 1.0086, norm:1.3098, tok/sec: 102732.08, flops:89.96, batch-reuse:1
@ 4645 train 4.9530 , allloss: 4.9738, dt: 1252.60ms, fracRes: 0.6017, norm(attn): 0.1230, norm(output): 0.2334, norm(x): 0.7850, norm(y): 1.0085, norm:1.3789, tok/sec: 104639.73, flops:91.63, batch-reuse:1
@ 4646 train 5.0060 , allloss: 5.0259, dt: 1251.61ms, fracRes: 0.6012, norm(attn): 0.1230, norm(output): 0.2334, norm(x): 0.7825, norm(y): 1.0084, norm:1.4505, tok/sec: 104722.65, flops:91.70, batch-reuse:1
@ 4647 train 4.9384 , allloss: 4.9595, dt: 1271.70ms, fracRes: 0.5999, norm(attn): 0.1216, norm(output): 0.2334, norm(x): 0.7801, norm(y): 1.0085, norm:1.1993, tok/sec: 103068.28, flops:90.26, batch-reuse:1
@ 4648 train 4.9513 , allloss: 4.9735, dt: 1268.81ms, fracRes: 0.5994, norm(attn): 0.1230, norm(output): 0.2344, norm(x): 0.7801, norm(y): 1.0085, norm:1.1378, tok/sec: 103303.46, flops:90.46, batch-reuse:1
@ 4649 train 4.9159 , allloss: 4.9372, dt: 1262.14ms, fracRes: 0.6003, norm(attn): 0.1226, norm(output): 0.2334, norm(x): 0.7797, norm(y): 1.0086, norm:1.1209, tok/sec: 103849.15, flops:90.94, batch-reuse:1
@ 4650 train 4.8244 , allloss: 4.8459, dt: 1241.25ms, fracRes: 0.6008, norm(attn): 0.1201, norm(output): 0.2344, norm(x): 0.7823, norm(y): 1.0086, norm:1.0987, tok/sec: 105597.18, flops:92.47, batch-reuse:1
@ 4651 train 4.9394 , allloss: 4.9616, dt: 1239.70ms, fracRes: 0.6002, norm(attn): 0.1221, norm(output): 0.2334, norm(x): 0.7840, norm(y): 1.0086, norm:1.1168, tok/sec: 105729.21, flops:92.59, batch-reuse:1
@ 4652 train 4.9721 , allloss: 4.9932, dt: 1244.92ms, fracRes: 0.5994, norm(attn): 0.1240, norm(output): 0.2344, norm(x): 0.7828, norm(y): 1.0086, norm:1.1920, tok/sec: 105285.50, flops:92.20, batch-reuse:1
@ 4653 train 4.9904 , allloss: 5.0128, dt: 1242.36ms, fracRes: 0.5999, norm(attn): 0.1235, norm(output): 0.2344, norm(x): 0.7815, norm(y): 1.0085, norm:1.2248, tok/sec: 105502.52, flops:92.39, batch-reuse:1
@ 4654 train 4.9386 , allloss: 4.9592, dt: 1250.10ms, fracRes: 0.6001, norm(attn): 0.1230, norm(output): 0.2344, norm(x): 0.7815, norm(y): 1.0085, norm:1.3559, tok/sec: 104849.40, flops:91.82, batch-reuse:1
@ 4655 train 4.9228 , allloss: 4.9434, dt: 1245.38ms, fracRes: 0.6004, norm(attn): 0.1240, norm(output): 0.2344, norm(x): 0.7824, norm(y): 1.0085, norm:1.1767, tok/sec: 105246.64, flops:92.16, batch-reuse:1
@ 4656 train 4.8552 , allloss: 4.8762, dt: 1256.52ms, fracRes: 0.6003, norm(attn): 0.1235, norm(output): 0.2334, norm(x): 0.7827, norm(y): 1.0086, norm:1.0795, tok/sec: 104313.48, flops:91.35, batch-reuse:1
@ 4657 train 4.8681 , allloss: 4.8890, dt: 1258.18ms, fracRes: 0.6000, norm(attn): 0.1230, norm(output): 0.2334, norm(x): 0.7822, norm(y): 1.0086, norm:1.4489, tok/sec: 104175.51, flops:91.23, batch-reuse:1
@ 4658 train 4.9827 , allloss: 5.0031, dt: 1254.57ms, fracRes: 0.5999, norm(attn): 0.1211, norm(output): 0.2344, norm(x): 0.7804, norm(y): 1.0086, norm:1.2137, tok/sec: 104475.87, flops:91.49, batch-reuse:1
@ 4659 train 4.9452 , allloss: 4.9672, dt: 1250.22ms, fracRes: 0.6009, norm(attn): 0.1240, norm(output): 0.2344, norm(x): 0.7824, norm(y): 1.0085, norm:1.3075, tok/sec: 104838.82, flops:91.81, batch-reuse:1
@ 4660 train 4.8482 , allloss: 4.8694, dt: 1263.17ms, fracRes: 0.5999, norm(attn): 0.1240, norm(output): 0.2354, norm(x): 0.7818, norm(y): 1.0085, norm:1.2624, tok/sec: 103764.03, flops:90.86, batch-reuse:1
@ 4661 train 4.8969 , allloss: 4.9178, dt: 1247.99ms, fracRes: 0.6011, norm(attn): 0.1221, norm(output): 0.2334, norm(x): 0.7817, norm(y): 1.0087, norm:1.3205, tok/sec: 105026.75, flops:91.97, batch-reuse:1
@ 4662 train 4.9390 , allloss: 4.9591, dt: 1241.81ms, fracRes: 0.6021, norm(attn): 0.1211, norm(output): 0.2344, norm(x): 0.7826, norm(y): 1.0086, norm:1.1497, tok/sec: 105548.99, flops:92.43, batch-reuse:1
@ 4663 train 4.9013 , allloss: 4.9223, dt: 1240.58ms, fracRes: 0.6006, norm(attn): 0.1235, norm(output): 0.2344, norm(x): 0.7810, norm(y): 1.0086, norm:1.2616, tok/sec: 105654.08, flops:92.52, batch-reuse:1
@ 4664 train 4.8089 , allloss: 4.8301, dt: 1249.39ms, fracRes: 0.5989, norm(attn): 0.1235, norm(output): 0.2334, norm(x): 0.7791, norm(y): 1.0086, norm:1.2805, tok/sec: 104908.64, flops:91.87, batch-reuse:1
@ 4665 train 4.9070 , allloss: 4.9272, dt: 1276.50ms, fracRes: 0.5990, norm(attn): 0.1240, norm(output): 0.2344, norm(x): 0.7791, norm(y): 1.0085, norm:1.1833, tok/sec: 102680.50, flops:89.92, batch-reuse:1
@ 4666 train 4.8290 , allloss: 4.8488, dt: 1249.05ms, fracRes: 0.6000, norm(attn): 0.1216, norm(output): 0.2344, norm(x): 0.7813, norm(y): 1.0086, norm:1.1586, tok/sec: 104937.30, flops:91.89, batch-reuse:1
@ 4667 train 4.9557 , allloss: 4.9762, dt: 1253.23ms, fracRes: 0.6016, norm(attn): 0.1206, norm(output): 0.2334, norm(x): 0.7822, norm(y): 1.0086, norm:1.3017, tok/sec: 104587.00, flops:91.59, batch-reuse:1
@ 4668 train 4.8612 , allloss: 4.8816, dt: 1254.05ms, fracRes: 0.6009, norm(attn): 0.1221, norm(output): 0.2324, norm(x): 0.7786, norm(y): 1.0086, norm:1.1626, tok/sec: 104518.94, flops:91.53, batch-reuse:1
@ 4669 train 4.9088 , allloss: 4.9294, dt: 1238.77ms, fracRes: 0.5997, norm(attn): 0.1250, norm(output): 0.2334, norm(x): 0.7757, norm(y): 1.0086, norm:1.5459, tok/sec: 105808.24, flops:92.65, batch-reuse:1
@ 4670 train 4.9300 , allloss: 4.9504, dt: 1255.97ms, fracRes: 0.5995, norm(attn): 0.1235, norm(output): 0.2334, norm(x): 0.7755, norm(y): 1.0085, norm:1.2558, tok/sec: 104359.22, flops:91.39, batch-reuse:1
@ 4671 train 4.8534 , allloss: 4.8742, dt: 1263.40ms, fracRes: 0.5999, norm(attn): 0.1230, norm(output): 0.2344, norm(x): 0.7738, norm(y): 1.0085, norm:1.2201, tok/sec: 103745.72, flops:90.85, batch-reuse:1
@ 4672 train 4.9968 , allloss: 5.0180, dt: 1253.65ms, fracRes: 0.6002, norm(attn): 0.1221, norm(output): 0.2324, norm(x): 0.7739, norm(y): 1.0085, norm:1.1594, tok/sec: 104552.55, flops:91.56, batch-reuse:1
@ 4673 train 4.8694 , allloss: 4.8905, dt: 1280.26ms, fracRes: 0.6001, norm(attn): 0.1230, norm(output): 0.2324, norm(x): 0.7737, norm(y): 1.0087, norm:1.2939, tok/sec: 102379.16, flops:89.65, batch-reuse:1
@ 4674 train 4.9757 , allloss: 4.9974, dt: 1260.33ms, fracRes: 0.6007, norm(attn): 0.1221, norm(output): 0.2334, norm(x): 0.7740, norm(y): 1.0086, norm:1.4173, tok/sec: 103997.91, flops:91.07, batch-reuse:1
@ 4675 train 4.8727 , allloss: 4.8933, dt: 1248.74ms, fracRes: 0.6001, norm(attn): 0.1221, norm(output): 0.2334, norm(x): 0.7738, norm(y): 1.0086, norm:1.2661, tok/sec: 104963.27, flops:91.91, batch-reuse:1
@ 4676 train 4.9173 , allloss: 4.9380, dt: 1258.63ms, fracRes: 0.6008, norm(attn): 0.1235, norm(output): 0.2334, norm(x): 0.7780, norm(y): 1.0086, norm:1.1733, tok/sec: 104138.96, flops:91.19, batch-reuse:1
@ 4677 train 5.0072 , allloss: 5.0275, dt: 1245.36ms, fracRes: 0.6013, norm(attn): 0.1240, norm(output): 0.2334, norm(x): 0.7796, norm(y): 1.0086, norm:1.2710, tok/sec: 105248.61, flops:92.16, batch-reuse:1
@ 4678 train 4.8753 , allloss: 4.8961, dt: 1249.67ms, fracRes: 0.6005, norm(attn): 0.1230, norm(output): 0.2334, norm(x): 0.7777, norm(y): 1.0087, norm:1.1436, tok/sec: 104885.13, flops:91.85, batch-reuse:1
@ 4679 train 4.9279 , allloss: 4.9481, dt: 1251.33ms, fracRes: 0.6000, norm(attn): 0.1226, norm(output): 0.2334, norm(x): 0.7757, norm(y): 1.0087, norm:1.2920, tok/sec: 104746.04, flops:91.72, batch-reuse:1
@ 4680 train 5.0410 , allloss: 5.0603, dt: 1266.13ms, fracRes: 0.5995, norm(attn): 0.1240, norm(output): 0.2334, norm(x): 0.7745, norm(y): 1.0084, norm:1.2164, tok/sec: 103521.48, flops:90.65, batch-reuse:1
@ 4681 train 4.8600 , allloss: 4.8803, dt: 1256.09ms, fracRes: 0.6002, norm(attn): 0.1221, norm(output): 0.2334, norm(x): 0.7762, norm(y): 1.0086, norm:1.4213, tok/sec: 104349.12, flops:91.38, batch-reuse:1
@ 4682 train 4.9141 , allloss: 4.9352, dt: 1280.26ms, fracRes: 0.6013, norm(attn): 0.1211, norm(output): 0.2314, norm(x): 0.7773, norm(y): 1.0087, norm:1.3480, tok/sec: 102379.56, flops:89.65, batch-reuse:1
@ 4683 train 4.8661 , allloss: 4.8872, dt: 1302.34ms, fracRes: 0.6004, norm(attn): 0.1221, norm(output): 0.2334, norm(x): 0.7752, norm(y): 1.0087, norm:1.2734, tok/sec: 100643.55, flops:88.13, batch-reuse:1
@ 4684 train 4.9003 , allloss: 4.9204, dt: 1301.71ms, fracRes: 0.6007, norm(attn): 0.1216, norm(output): 0.2324, norm(x): 0.7778, norm(y): 1.0087, norm:1.1475, tok/sec: 100692.14, flops:88.17, batch-reuse:1
@ 4685 train 4.8482 , allloss: 4.8685, dt: 1303.87ms, fracRes: 0.6012, norm(attn): 0.1211, norm(output): 0.2324, norm(x): 0.7783, norm(y): 1.0087, norm:1.0865, tok/sec: 100525.07, flops:88.03, batch-reuse:1
@ 4686 train 4.9221 , allloss: 4.9428, dt: 1286.51ms, fracRes: 0.6004, norm(attn): 0.1211, norm(output): 0.2334, norm(x): 0.7768, norm(y): 1.0086, norm:1.1894, tok/sec: 101881.59, flops:89.22, batch-reuse:1
@ 4687 train 4.9126 , allloss: 4.9343, dt: 1256.37ms, fracRes: 0.6009, norm(attn): 0.1221, norm(output): 0.2324, norm(x): 0.7772, norm(y): 1.0086, norm:1.3469, tok/sec: 104326.17, flops:91.36, batch-reuse:1
@ 4688 train 4.8374 , allloss: 4.8584, dt: 1257.32ms, fracRes: 0.5988, norm(attn): 0.1230, norm(output): 0.2334, norm(x): 0.7737, norm(y): 1.0087, norm:1.1606, tok/sec: 104247.02, flops:91.29, batch-reuse:1
@ 4689 train 4.8117 , allloss: 4.8325, dt: 1264.33ms, fracRes: 0.5992, norm(attn): 0.1226, norm(output): 0.2334, norm(x): 0.7722, norm(y): 1.0086, norm:1.2626, tok/sec: 103669.26, flops:90.78, batch-reuse:1
@ 4690 train 4.8073 , allloss: 4.8278, dt: 1255.07ms, fracRes: 0.5999, norm(attn): 0.1230, norm(output): 0.2334, norm(x): 0.7750, norm(y): 1.0086, norm:1.0465, tok/sec: 104434.39, flops:91.45, batch-reuse:1
@ 4691 train 4.9216 , allloss: 4.9429, dt: 1286.50ms, fracRes: 0.6003, norm(attn): 0.1230, norm(output): 0.2334, norm(x): 0.7737, norm(y): 1.0085, norm:1.1570, tok/sec: 101882.76, flops:89.22, batch-reuse:1
@ 4692 train 4.8787 , allloss: 4.8982, dt: 1283.79ms, fracRes: 0.6006, norm(attn): 0.1226, norm(output): 0.2334, norm(x): 0.7761, norm(y): 1.0087, norm:1.2609, tok/sec: 102097.99, flops:89.41, batch-reuse:1
@ 4693 train 4.8990 , allloss: 4.9221, dt: 1264.35ms, fracRes: 0.6008, norm(attn): 0.1226, norm(output): 0.2334, norm(x): 0.7736, norm(y): 1.0086, norm:1.2506, tok/sec: 103667.70, flops:90.78, batch-reuse:1
@ 4694 train 4.8810 , allloss: 4.9025, dt: 1273.56ms, fracRes: 0.6008, norm(attn): 0.1230, norm(output): 0.2344, norm(x): 0.7743, norm(y): 1.0086, norm:1.1099, tok/sec: 102918.19, flops:90.12, batch-reuse:1
@ 4695 train 4.9254 , allloss: 4.9462, dt: 1263.45ms, fracRes: 0.6002, norm(attn): 0.1240, norm(output): 0.2344, norm(x): 0.7756, norm(y): 1.0086, norm:1.3114, tok/sec: 103741.14, flops:90.84, batch-reuse:1
@ 4696 train 4.7802 , allloss: 4.8005, dt: 1262.07ms, fracRes: 0.5995, norm(attn): 0.1240, norm(output): 0.2334, norm(x): 0.7766, norm(y): 1.0087, norm:1.0819, tok/sec: 103854.45, flops:90.94, batch-reuse:1
@ 4697 train 4.7966 , allloss: 4.8165, dt: 1282.41ms, fracRes: 0.5996, norm(attn): 0.1230, norm(output): 0.2334, norm(x): 0.7762, norm(y): 1.0087, norm:1.2577, tok/sec: 102207.25, flops:89.50, batch-reuse:1
@ 4698 train 4.8722 , allloss: 4.8928, dt: 1271.76ms, fracRes: 0.5998, norm(attn): 0.1235, norm(output): 0.2344, norm(x): 0.7766, norm(y): 1.0086, norm:1.2866, tok/sec: 103063.28, flops:90.25, batch-reuse:1
@ 4699 train 4.7976 , allloss: 4.8179, dt: 1293.10ms, fracRes: 0.6006, norm(attn): 0.1230, norm(output): 0.2334, norm(x): 0.7775, norm(y): 1.0087, norm:1.1106, tok/sec: 101362.96, flops:88.76, batch-reuse:1
@ 4700 train 4.8154 , allloss: 4.8352, dt: 1267.73ms, fracRes: 0.6010, norm(attn): 0.1230, norm(output): 0.2334, norm(x): 0.7780, norm(y): 1.0087, norm:1.1549, tok/sec: 103390.93, flops:90.54, batch-reuse:1
@ 4701 train 4.8003 , allloss: 4.8212, dt: 1272.03ms, fracRes: 0.6014, norm(attn): 0.1230, norm(output): 0.2334, norm(x): 0.7780, norm(y): 1.0087, norm:1.2093, tok/sec: 103041.45, flops:90.23, batch-reuse:1
@ 4702 train 4.8522 , allloss: 4.8723, dt: 1248.64ms, fracRes: 0.6004, norm(attn): 0.1230, norm(output): 0.2334, norm(x): 0.7779, norm(y): 1.0086, norm:1.1231, tok/sec: 104971.44, flops:91.92, batch-reuse:1
@ 4703 train 4.9390 , allloss: 4.9605, dt: 1267.69ms, fracRes: 0.6000, norm(attn): 0.1230, norm(output): 0.2334, norm(x): 0.7743, norm(y): 1.0086, norm:1.1211, tok/sec: 103394.50, flops:90.54, batch-reuse:1
@ 4704 train 4.8307 , allloss: 4.8524, dt: 1256.26ms, fracRes: 0.5997, norm(attn): 0.1221, norm(output): 0.2334, norm(x): 0.7759, norm(y): 1.0087, norm:1.1622, tok/sec: 104335.37, flops:91.36, batch-reuse:1
@ 4705 train 4.8419 , allloss: 4.8620, dt: 1252.25ms, fracRes: 0.5999, norm(attn): 0.1235, norm(output): 0.2334, norm(x): 0.7763, norm(y): 1.0087, norm:1.3280, tok/sec: 104669.48, flops:91.66, batch-reuse:1
@ 4706 train 4.9587 , allloss: 4.9795, dt: 1268.76ms, fracRes: 0.5999, norm(attn): 0.1240, norm(output): 0.2334, norm(x): 0.7764, norm(y): 1.0086, norm:1.2669, tok/sec: 103307.48, flops:90.46, batch-reuse:1
@ 4707 train 4.8507 , allloss: 4.8717, dt: 1259.99ms, fracRes: 0.6002, norm(attn): 0.1230, norm(output): 0.2334, norm(x): 0.7753, norm(y): 1.0087, norm:1.2463, tok/sec: 104025.99, flops:91.09, batch-reuse:1
@ 4708 train 4.8560 , allloss: 4.8776, dt: 1262.95ms, fracRes: 0.5996, norm(attn): 0.1245, norm(output): 0.2344, norm(x): 0.7734, norm(y): 1.0086, norm:1.4095, tok/sec: 103782.73, flops:90.88, batch-reuse:1
@ 4709 train 4.8828 , allloss: 4.9029, dt: 1273.88ms, fracRes: 0.5996, norm(attn): 0.1240, norm(output): 0.2334, norm(x): 0.7724, norm(y): 1.0086, norm:1.2041, tok/sec: 102892.07, flops:90.10, batch-reuse:1
@ 4710 train 4.9356 , allloss: 4.9573, dt: 1265.61ms, fracRes: 0.6009, norm(attn): 0.1226, norm(output): 0.2314, norm(x): 0.7711, norm(y): 1.0086, norm:1.4956, tok/sec: 103564.35, flops:90.69, batch-reuse:1
@ 4711 train 4.8867 , allloss: 4.9091, dt: 1247.90ms, fracRes: 0.6009, norm(attn): 0.1235, norm(output): 0.2314, norm(x): 0.7727, norm(y): 1.0087, norm:1.6966, tok/sec: 105034.18, flops:91.98, batch-reuse:1
@ 4712 train 4.8684 , allloss: 4.8884, dt: 1258.09ms, fracRes: 0.6015, norm(attn): 0.1230, norm(output): 0.2314, norm(x): 0.7739, norm(y): 1.0087, norm:1.2216, tok/sec: 104183.60, flops:91.23, batch-reuse:1
@ 4713 train 4.8457 , allloss: 4.8666, dt: 1274.85ms, fracRes: 0.6013, norm(attn): 0.1226, norm(output): 0.2334, norm(x): 0.7752, norm(y): 1.0086, norm:1.3035, tok/sec: 102813.56, flops:90.03, batch-reuse:1
@ 4714 train 4.8397 , allloss: 4.8604, dt: 1240.80ms, fracRes: 0.6010, norm(attn): 0.1240, norm(output): 0.2344, norm(x): 0.7758, norm(y): 1.0086, norm:1.1505, tok/sec: 105635.14, flops:92.50, batch-reuse:1
@ 4715 train 4.8911 , allloss: 4.9128, dt: 1245.65ms, fracRes: 0.6000, norm(attn): 0.1250, norm(output): 0.2344, norm(x): 0.7736, norm(y): 1.0085, norm:1.7183, tok/sec: 105223.51, flops:92.14, batch-reuse:1
@ 4716 train 4.9054 , allloss: 4.9264, dt: 1243.34ms, fracRes: 0.5994, norm(attn): 0.1250, norm(output): 0.2334, norm(x): 0.7736, norm(y): 1.0085, norm:1.3807, tok/sec: 105419.09, flops:92.31, batch-reuse:1
@ 4717 train 4.8712 , allloss: 4.8908, dt: 1235.63ms, fracRes: 0.5996, norm(attn): 0.1240, norm(output): 0.2344, norm(x): 0.7768, norm(y): 1.0086, norm:1.2521, tok/sec: 106076.96, flops:92.89, batch-reuse:1
@ 4718 train 4.8971 , allloss: 4.9176, dt: 1244.18ms, fracRes: 0.6005, norm(attn): 0.1230, norm(output): 0.2334, norm(x): 0.7771, norm(y): 1.0086, norm:1.1240, tok/sec: 105347.84, flops:92.25, batch-reuse:1
@ 4719 train 4.7835 , allloss: 4.8033, dt: 1236.20ms, fracRes: 0.6007, norm(attn): 0.1230, norm(output): 0.2334, norm(x): 0.7753, norm(y): 1.0087, norm:1.1473, tok/sec: 106027.98, flops:92.85, batch-reuse:1
@ 4720 train 4.8372 , allloss: 4.8581, dt: 1254.02ms, fracRes: 0.6014, norm(attn): 0.1240, norm(output): 0.2324, norm(x): 0.7749, norm(y): 1.0087, norm:1.3041, tok/sec: 104521.68, flops:91.53, batch-reuse:1
@ 4721 train 4.8000 , allloss: 4.8201, dt: 1280.09ms, fracRes: 0.6002, norm(attn): 0.1240, norm(output): 0.2334, norm(x): 0.7749, norm(y): 1.0087, norm:1.2891, tok/sec: 102392.41, flops:89.66, batch-reuse:1
@ 4722 train 4.7866 , allloss: 4.8066, dt: 1265.33ms, fracRes: 0.6000, norm(attn): 0.1240, norm(output): 0.2344, norm(x): 0.7733, norm(y): 1.0086, norm:1.3048, tok/sec: 103587.04, flops:90.71, batch-reuse:1
@ 4723 train 4.8829 , allloss: 4.9039, dt: 1242.38ms, fracRes: 0.6010, norm(attn): 0.1240, norm(output): 0.2334, norm(x): 0.7751, norm(y): 1.0086, norm:1.4315, tok/sec: 105500.32, flops:92.39, batch-reuse:1
@ 4724 train 4.8023 , allloss: 4.8231, dt: 1254.72ms, fracRes: 0.6008, norm(attn): 0.1235, norm(output): 0.2334, norm(x): 0.7747, norm(y): 1.0087, norm:1.2993, tok/sec: 104463.19, flops:91.48, batch-reuse:1
@ 4725 train 4.8901 , allloss: 4.9104, dt: 1252.73ms, fracRes: 0.6007, norm(attn): 0.1240, norm(output): 0.2324, norm(x): 0.7755, norm(y): 1.0087, norm:1.2768, tok/sec: 104628.82, flops:91.62, batch-reuse:1
@ 4726 train 4.9175 , allloss: 4.9380, dt: 1241.62ms, fracRes: 0.6006, norm(attn): 0.1226, norm(output): 0.2334, norm(x): 0.7756, norm(y): 1.0087, norm:1.2197, tok/sec: 105565.71, flops:92.44, batch-reuse:1
@ 4727 train 4.7717 , allloss: 4.7915, dt: 1260.01ms, fracRes: 0.6001, norm(attn): 0.1230, norm(output): 0.2324, norm(x): 0.7763, norm(y): 1.0088, norm:1.2043, tok/sec: 104024.69, flops:91.09, batch-reuse:1
@ 4728 train 4.8716 , allloss: 4.8922, dt: 1250.80ms, fracRes: 0.6001, norm(attn): 0.1230, norm(output): 0.2334, norm(x): 0.7754, norm(y): 1.0087, norm:1.1662, tok/sec: 104790.60, flops:91.76, batch-reuse:1
@ 4729 train 4.7845 , allloss: 4.8048, dt: 1239.10ms, fracRes: 0.5996, norm(attn): 0.1240, norm(output): 0.2324, norm(x): 0.7725, norm(y): 1.0087, norm:1.2442, tok/sec: 105780.35, flops:92.63, batch-reuse:1
@ 4730 train 4.8493 , allloss: 4.8699, dt: 1244.62ms, fracRes: 0.6011, norm(attn): 0.1221, norm(output): 0.2314, norm(x): 0.7717, norm(y): 1.0087, norm:1.5008, tok/sec: 105310.59, flops:92.22, batch-reuse:1
@ 4731 train 4.8668 , allloss: 4.8873, dt: 1282.97ms, fracRes: 0.6009, norm(attn): 0.1221, norm(output): 0.2324, norm(x): 0.7723, norm(y): 1.0088, norm:1.3778, tok/sec: 102162.76, flops:89.46, batch-reuse:1
@ 4732 train 4.8203 , allloss: 4.8419, dt: 1233.46ms, fracRes: 0.6005, norm(attn): 0.1226, norm(output): 0.2324, norm(x): 0.7720, norm(y): 1.0088, norm:1.3366, tok/sec: 106263.89, flops:93.05, batch-reuse:1
@ 4733 train 4.8084 , allloss: 4.8297, dt: 1245.94ms, fracRes: 0.6005, norm(attn): 0.1230, norm(output): 0.2334, norm(x): 0.7734, norm(y): 1.0087, norm:1.1976, tok/sec: 105199.17, flops:92.12, batch-reuse:1
@ 4734 train 4.7186 , allloss: 4.7385, dt: 1256.65ms, fracRes: 0.5998, norm(attn): 0.1230, norm(output): 0.2334, norm(x): 0.7727, norm(y): 1.0088, norm:1.2207, tok/sec: 104302.55, flops:91.34, batch-reuse:1
@ 4735 train 4.8097 , allloss: 4.8303, dt: 1274.30ms, fracRes: 0.5999, norm(attn): 0.1235, norm(output): 0.2334, norm(x): 0.7718, norm(y): 1.0085, norm:1.2719, tok/sec: 102858.42, flops:90.07, batch-reuse:1
@ 4736 train 4.7667 , allloss: 4.7878, dt: 1247.31ms, fracRes: 0.6011, norm(attn): 0.1230, norm(output): 0.2334, norm(x): 0.7732, norm(y): 1.0087, norm:1.4123, tok/sec: 105083.57, flops:92.02, batch-reuse:1
@ 4737 train 4.7881 , allloss: 4.8086, dt: 1255.83ms, fracRes: 0.6006, norm(attn): 0.1240, norm(output): 0.2334, norm(x): 0.7722, norm(y): 1.0087, norm:1.2166, tok/sec: 104370.63, flops:91.40, batch-reuse:1
@ 4738 train 4.8693 , allloss: 4.8904, dt: 1250.45ms, fracRes: 0.5997, norm(attn): 0.1240, norm(output): 0.2344, norm(x): 0.7720, norm(y): 1.0086, norm:1.1969, tok/sec: 104819.89, flops:91.79, batch-reuse:1
@ 4739 train 4.6977 , allloss: 4.7181, dt: 1262.06ms, fracRes: 0.5994, norm(attn): 0.1245, norm(output): 0.2334, norm(x): 0.7731, norm(y): 1.0086, norm:1.3677, tok/sec: 103855.63, flops:90.94, batch-reuse:1
@ 4740 train 4.8238 , allloss: 4.8435, dt: 1253.88ms, fracRes: 0.5998, norm(attn): 0.1240, norm(output): 0.2334, norm(x): 0.7740, norm(y): 1.0087, norm:1.1521, tok/sec: 104533.45, flops:91.54, batch-reuse:1
@ 4741 train 4.8954 , allloss: 4.9159, dt: 1251.58ms, fracRes: 0.6003, norm(attn): 0.1240, norm(output): 0.2334, norm(x): 0.7741, norm(y): 1.0086, norm:1.2901, tok/sec: 104725.19, flops:91.71, batch-reuse:1
@ 4742 train 4.7861 , allloss: 4.8066, dt: 1277.41ms, fracRes: 0.6007, norm(attn): 0.1240, norm(output): 0.2334, norm(x): 0.7762, norm(y): 1.0087, norm:1.1543, tok/sec: 102608.02, flops:89.85, batch-reuse:1
@ 4743 train 4.9372 , allloss: 4.9577, dt: 1307.96ms, fracRes: 0.6014, norm(attn): 0.1216, norm(output): 0.2334, norm(x): 0.7746, norm(y): 1.0087, norm:1.2974, tok/sec: 100210.70, flops:87.75, batch-reuse:1
@ 4744 train 4.9231 , allloss: 4.9469, dt: 1266.30ms, fracRes: 0.6013, norm(attn): 0.1235, norm(output): 0.2324, norm(x): 0.7708, norm(y): 1.0088, norm:1.6842, tok/sec: 103507.86, flops:90.64, batch-reuse:1
@ 4745 train 4.8117 , allloss: 4.8322, dt: 1275.12ms, fracRes: 0.5995, norm(attn): 0.1240, norm(output): 0.2324, norm(x): 0.7715, norm(y): 1.0087, norm:1.3214, tok/sec: 102792.03, flops:90.01, batch-reuse:1
@ 4746 train 4.8517 , allloss: 4.8724, dt: 1270.24ms, fracRes: 0.5999, norm(attn): 0.1211, norm(output): 0.2334, norm(x): 0.7691, norm(y): 1.0087, norm:1.4129, tok/sec: 103186.81, flops:90.36, batch-reuse:1
@ 4747 train 4.8002 , allloss: 4.8212, dt: 1246.61ms, fracRes: 0.5995, norm(attn): 0.1240, norm(output): 0.2334, norm(x): 0.7708, norm(y): 1.0086, norm:1.2886, tok/sec: 105142.45, flops:92.07, batch-reuse:1
@ 4748 train 4.8075 , allloss: 4.8285, dt: 1275.23ms, fracRes: 0.6001, norm(attn): 0.1235, norm(output): 0.2334, norm(x): 0.7704, norm(y): 1.0087, norm:1.2824, tok/sec: 102783.42, flops:90.01, batch-reuse:1
@ 4749 train 4.7465 , allloss: 4.7681, dt: 1276.49ms, fracRes: 0.6003, norm(attn): 0.1245, norm(output): 0.2324, norm(x): 0.7672, norm(y): 1.0087, norm:1.4291, tok/sec: 102681.77, flops:89.92, batch-reuse:1
@ 4750 train 4.8713 , allloss: 4.8924, dt: 1290.17ms, fracRes: 0.5998, norm(attn): 0.1245, norm(output): 0.2334, norm(x): 0.7672, norm(y): 1.0087, norm:1.3237, tok/sec: 101592.48, flops:88.96, batch-reuse:1
@ 4751 train 4.7027 , allloss: 4.7242, dt: 1258.38ms, fracRes: 0.6009, norm(attn): 0.1230, norm(output): 0.2324, norm(x): 0.7700, norm(y): 1.0088, norm:1.2771, tok/sec: 104159.08, flops:91.21, batch-reuse:1
@ 4752 train 4.7790 , allloss: 4.7999, dt: 1265.97ms, fracRes: 0.6021, norm(attn): 0.1211, norm(output): 0.2305, norm(x): 0.7703, norm(y): 1.0088, norm:1.3473, tok/sec: 103534.47, flops:90.66, batch-reuse:1
@ 4753 train 4.7117 , allloss: 4.7324, dt: 1279.76ms, fracRes: 0.6013, norm(attn): 0.1230, norm(output): 0.2314, norm(x): 0.7687, norm(y): 1.0087, norm:1.1872, tok/sec: 102419.21, flops:89.69, batch-reuse:1
@ 4754 train 4.8144 , allloss: 4.8347, dt: 1278.33ms, fracRes: 0.5999, norm(attn): 0.1250, norm(output): 0.2324, norm(x): 0.7691, norm(y): 1.0087, norm:1.1433, tok/sec: 102533.44, flops:89.79, batch-reuse:1
@ 4755 train 4.7070 , allloss: 4.7281, dt: 1257.75ms, fracRes: 0.5989, norm(attn): 0.1250, norm(output): 0.2334, norm(x): 0.7691, norm(y): 1.0087, norm:1.1869, tok/sec: 104211.90, flops:91.26, batch-reuse:1
@ 4756 train 4.7426 , allloss: 4.7627, dt: 1262.30ms, fracRes: 0.5995, norm(attn): 0.1240, norm(output): 0.2334, norm(x): 0.7709, norm(y): 1.0086, norm:1.1753, tok/sec: 103835.64, flops:90.93, batch-reuse:1
@ 4757 train 4.7019 , allloss: 4.7233, dt: 1265.72ms, fracRes: 0.6004, norm(attn): 0.1235, norm(output): 0.2334, norm(x): 0.7719, norm(y): 1.0088, norm:1.2764, tok/sec: 103555.26, flops:90.68, batch-reuse:1
@ 4758 train 4.8530 , allloss: 4.8742, dt: 1265.76ms, fracRes: 0.6005, norm(attn): 0.1235, norm(output): 0.2334, norm(x): 0.7727, norm(y): 1.0087, norm:1.1421, tok/sec: 103551.69, flops:90.68, batch-reuse:1
@ 4759 train 4.7218 , allloss: 4.7432, dt: 1274.86ms, fracRes: 0.6009, norm(attn): 0.1226, norm(output): 0.2334, norm(x): 0.7717, norm(y): 1.0088, norm:1.3734, tok/sec: 102813.25, flops:90.03, batch-reuse:1
@ 4760 train 4.7826 , allloss: 4.8045, dt: 1255.88ms, fracRes: 0.6010, norm(attn): 0.1240, norm(output): 0.2324, norm(x): 0.7695, norm(y): 1.0086, norm:1.2938, tok/sec: 104366.43, flops:91.39, batch-reuse:1
@ 4761 train 4.8429 , allloss: 4.8648, dt: 1270.68ms, fracRes: 0.5996, norm(attn): 0.1240, norm(output): 0.2334, norm(x): 0.7686, norm(y): 1.0086, norm:1.2552, tok/sec: 103151.17, flops:90.33, batch-reuse:1
@ 4762 train 4.8188 , allloss: 4.8394, dt: 1252.61ms, fracRes: 0.5998, norm(attn): 0.1235, norm(output): 0.2324, norm(x): 0.7689, norm(y): 1.0087, norm:1.2087, tok/sec: 104639.14, flops:91.63, batch-reuse:1
@ 4763 train 4.8040 , allloss: 4.8249, dt: 1250.31ms, fracRes: 0.6001, norm(attn): 0.1240, norm(output): 0.2334, norm(x): 0.7726, norm(y): 1.0087, norm:1.2618, tok/sec: 104831.75, flops:91.80, batch-reuse:1
@ 4764 train 4.8483 , allloss: 4.8690, dt: 1260.57ms, fracRes: 0.6004, norm(attn): 0.1245, norm(output): 0.2344, norm(x): 0.7713, norm(y): 1.0087, norm:1.1401, tok/sec: 103978.32, flops:91.05, batch-reuse:1
@ 4765 train 4.7484 , allloss: 4.7683, dt: 1256.11ms, fracRes: 0.6007, norm(attn): 0.1240, norm(output): 0.2334, norm(x): 0.7718, norm(y): 1.0088, norm:1.1564, tok/sec: 104347.85, flops:91.38, batch-reuse:1
@ 4766 train 4.8241 , allloss: 4.8448, dt: 1259.87ms, fracRes: 0.6004, norm(attn): 0.1245, norm(output): 0.2324, norm(x): 0.7713, norm(y): 1.0087, norm:1.1698, tok/sec: 104036.21, flops:91.10, batch-reuse:1
@ 4767 train 4.7884 , allloss: 4.8091, dt: 1259.45ms, fracRes: 0.5998, norm(attn): 0.1240, norm(output): 0.2334, norm(x): 0.7705, norm(y): 1.0087, norm:1.3931, tok/sec: 104070.93, flops:91.13, batch-reuse:1
@ 4768 train 4.6547 , allloss: 4.6768, dt: 1260.14ms, fracRes: 0.5998, norm(attn): 0.1235, norm(output): 0.2324, norm(x): 0.7707, norm(y): 1.0088, norm:1.5001, tok/sec: 104013.88, flops:91.08, batch-reuse:1
@ 4769 train 4.7424 , allloss: 4.7630, dt: 1250.65ms, fracRes: 0.6003, norm(attn): 0.1230, norm(output): 0.2334, norm(x): 0.7691, norm(y): 1.0088, norm:1.4270, tok/sec: 104803.29, flops:91.77, batch-reuse:1
@ 4770 train 4.7193 , allloss: 4.7414, dt: 1260.14ms, fracRes: 0.6001, norm(attn): 0.1235, norm(output): 0.2314, norm(x): 0.7658, norm(y): 1.0088, norm:1.6066, tok/sec: 104014.20, flops:91.08, batch-reuse:1
@ 4771 train 4.8600 , allloss: 4.8830, dt: 1257.37ms, fracRes: 0.5995, norm(attn): 0.1240, norm(output): 0.2334, norm(x): 0.7667, norm(y): 1.0085, norm:1.5508, tok/sec: 104243.18, flops:91.28, batch-reuse:1
@ 4772 train 4.7221 , allloss: 4.7436, dt: 1256.48ms, fracRes: 0.5995, norm(attn): 0.1240, norm(output): 0.2334, norm(x): 0.7653, norm(y): 1.0085, norm:1.3528, tok/sec: 104316.88, flops:91.35, batch-reuse:1
@ 4773 train 4.7105 , allloss: 4.7331, dt: 1270.73ms, fracRes: 0.6013, norm(attn): 0.1221, norm(output): 0.2334, norm(x): 0.7663, norm(y): 1.0087, norm:1.3819, tok/sec: 103146.89, flops:90.32, batch-reuse:1
@ 4774 train 4.7228 , allloss: 4.7459, dt: 1268.81ms, fracRes: 0.6013, norm(attn): 0.1240, norm(output): 0.2334, norm(x): 0.7671, norm(y): 1.0087, norm:1.3379, tok/sec: 103302.78, flops:90.46, batch-reuse:1
@ 4775 train 4.6232 , allloss: 4.6433, dt: 1266.22ms, fracRes: 0.6007, norm(attn): 0.1240, norm(output): 0.2334, norm(x): 0.7694, norm(y): 1.0087, norm:1.3310, tok/sec: 103514.19, flops:90.65, batch-reuse:1
@ 4776 train 4.6677 , allloss: 4.6894, dt: 1287.05ms, fracRes: 0.6001, norm(attn): 0.1250, norm(output): 0.2334, norm(x): 0.7684, norm(y): 1.0088, norm:1.1746, tok/sec: 101838.71, flops:89.18, batch-reuse:1
@ 4777 train 4.5970 , allloss: 4.6185, dt: 1275.24ms, fracRes: 0.5986, norm(attn): 0.1250, norm(output): 0.2334, norm(x): 0.7661, norm(y): 1.0088, norm:1.4333, tok/sec: 102781.96, flops:90.00, batch-reuse:1
@ 4778 train 4.6347 , allloss: 4.6562, dt: 1280.98ms, fracRes: 0.5984, norm(attn): 0.1250, norm(output): 0.2334, norm(x): 0.7662, norm(y): 1.0087, norm:1.4192, tok/sec: 102321.97, flops:89.60, batch-reuse:1
@ 4779 train 4.6791 , allloss: 4.6998, dt: 1250.28ms, fracRes: 0.5986, norm(attn): 0.1245, norm(output): 0.2334, norm(x): 0.7675, norm(y): 1.0088, norm:1.1189, tok/sec: 104833.73, flops:91.80, batch-reuse:1
@ 4780 train 4.7443 , allloss: 4.7650, dt: 1273.56ms, fracRes: 0.6000, norm(attn): 0.1240, norm(output): 0.2334, norm(x): 0.7691, norm(y): 1.0087, norm:1.2517, tok/sec: 102917.99, flops:90.12, batch-reuse:1
@ 4781 train 4.6225 , allloss: 4.6437, dt: 1263.85ms, fracRes: 0.5996, norm(attn): 0.1245, norm(output): 0.2334, norm(x): 0.7670, norm(y): 1.0086, norm:1.2429, tok/sec: 103708.67, flops:90.82, batch-reuse:1
@ 4782 train 4.7005 , allloss: 4.7219, dt: 1261.86ms, fracRes: 0.5997, norm(attn): 0.1240, norm(output): 0.2324, norm(x): 0.7646, norm(y): 1.0087, norm:1.1852, tok/sec: 103872.23, flops:90.96, batch-reuse:1
@ 4783 train 4.6635 , allloss: 4.6866, dt: 1268.70ms, fracRes: 0.5997, norm(attn): 0.1240, norm(output): 0.2334, norm(x): 0.7639, norm(y): 1.0087, norm:1.4137, tok/sec: 103312.00, flops:90.47, batch-reuse:1
@ 4784 train 4.7167 , allloss: 4.7381, dt: 1288.05ms, fracRes: 0.5990, norm(attn): 0.1240, norm(output): 0.2314, norm(x): 0.7654, norm(y): 1.0087, norm:1.1086, tok/sec: 101759.67, flops:89.11, batch-reuse:1
@ 4785 train 4.7694 , allloss: 4.7909, dt: 1253.55ms, fracRes: 0.6004, norm(attn): 0.1230, norm(output): 0.2334, norm(x): 0.7661, norm(y): 1.0086, norm:1.6282, tok/sec: 104560.33, flops:91.56, batch-reuse:1
@ 4786 train 4.7493 , allloss: 4.7700, dt: 1262.08ms, fracRes: 0.6007, norm(attn): 0.1230, norm(output): 0.2324, norm(x): 0.7672, norm(y): 1.0087, norm:1.2622, tok/sec: 103853.82, flops:90.94, batch-reuse:1
@ 4787 train 4.6778 , allloss: 4.6981, dt: 1285.74ms, fracRes: 0.6005, norm(attn): 0.1240, norm(output): 0.2344, norm(x): 0.7688, norm(y): 1.0087, norm:1.6754, tok/sec: 101942.59, flops:89.27, batch-reuse:1
@ 4788 train 4.6381 , allloss: 4.6583, dt: 1280.92ms, fracRes: 0.6012, norm(attn): 0.1240, norm(output): 0.2334, norm(x): 0.7662, norm(y): 1.0087, norm:1.7400, tok/sec: 102326.30, flops:89.61, batch-reuse:1
@ 4789 train 4.8132 , allloss: 4.8342, dt: 1289.72ms, fracRes: 0.6004, norm(attn): 0.1245, norm(output): 0.2334, norm(x): 0.7664, norm(y): 1.0087, norm:1.3890, tok/sec: 101628.33, flops:88.99, batch-reuse:1
@ 4790 train 4.7224 , allloss: 4.7450, dt: 1298.51ms, fracRes: 0.5993, norm(attn): 0.1250, norm(output): 0.2334, norm(x): 0.7644, norm(y): 1.0086, norm:1.4916, tok/sec: 100940.30, flops:88.39, batch-reuse:1
@ 4791 train 4.6733 , allloss: 4.6948, dt: 1270.24ms, fracRes: 0.5996, norm(attn): 0.1240, norm(output): 0.2334, norm(x): 0.7661, norm(y): 1.0086, norm:1.2919, tok/sec: 103187.08, flops:90.36, batch-reuse:1
@ 4792 train 4.6731 , allloss: 4.6957, dt: 1280.99ms, fracRes: 0.6002, norm(attn): 0.1240, norm(output): 0.2334, norm(x): 0.7651, norm(y): 1.0087, norm:1.2208, tok/sec: 102320.64, flops:89.60, batch-reuse:1
@ 4793 train 4.6902 , allloss: 4.7113, dt: 1272.66ms, fracRes: 0.6002, norm(attn): 0.1240, norm(output): 0.2334, norm(x): 0.7662, norm(y): 1.0087, norm:1.5591, tok/sec: 102990.97, flops:90.19, batch-reuse:1
@ 4794 train 4.6229 , allloss: 4.6431, dt: 1298.15ms, fracRes: 0.6008, norm(attn): 0.1230, norm(output): 0.2324, norm(x): 0.7659, norm(y): 1.0088, norm:1.3156, tok/sec: 100968.41, flops:88.42, batch-reuse:1
@ 4795 train 4.7083 , allloss: 4.7296, dt: 1283.20ms, fracRes: 0.6002, norm(attn): 0.1240, norm(output): 0.2324, norm(x): 0.7642, norm(y): 1.0088, norm:1.2488, tok/sec: 102144.90, flops:89.45, batch-reuse:1
@ 4796 train 4.6864 , allloss: 4.7075, dt: 1269.07ms, fracRes: 0.6001, norm(attn): 0.1245, norm(output): 0.2314, norm(x): 0.7637, norm(y): 1.0088, norm:1.3047, tok/sec: 103281.88, flops:90.44, batch-reuse:1
@ 4797 train 4.7305 , allloss: 4.7522, dt: 1290.67ms, fracRes: 0.6006, norm(attn): 0.1245, norm(output): 0.2305, norm(x): 0.7614, norm(y): 1.0088, norm:1.3806, tok/sec: 101553.82, flops:88.93, batch-reuse:1
@ 4798 train 4.6912 , allloss: 4.7122, dt: 1282.41ms, fracRes: 0.6004, norm(attn): 0.1240, norm(output): 0.2324, norm(x): 0.7626, norm(y): 1.0087, norm:1.3299, tok/sec: 102207.23, flops:89.50, batch-reuse:1
@ 4799 train 4.6259 , allloss: 4.6462, dt: 1284.76ms, fracRes: 0.6008, norm(attn): 0.1240, norm(output): 0.2334, norm(x): 0.7636, norm(y): 1.0088, norm:1.1015, tok/sec: 102020.88, flops:89.34, batch-reuse:1
@ 4800 train 4.7082 , allloss: 4.7290, dt: 1281.69ms, fracRes: 0.6006, norm(attn): 0.1230, norm(output): 0.2324, norm(x): 0.7629, norm(y): 1.0088, norm:1.1050, tok/sec: 102264.59, flops:89.55, batch-reuse:1
@ 4801 train 4.7499 , allloss: 4.7719, dt: 1272.33ms, fracRes: 0.6012, norm(attn): 0.1240, norm(output): 0.2324, norm(x): 0.7604, norm(y): 1.0088, norm:1.4525, tok/sec: 103017.53, flops:90.21, batch-reuse:1
@ 4802 train 4.6061 , allloss: 4.6287, dt: 1255.74ms, fracRes: 0.6005, norm(attn): 0.1240, norm(output): 0.2314, norm(x): 0.7623, norm(y): 1.0088, norm:1.3651, tok/sec: 104378.42, flops:91.40, batch-reuse:1
@ 4803 train 4.6982 , allloss: 4.7219, dt: 1254.56ms, fracRes: 0.6016, norm(attn): 0.1230, norm(output): 0.2305, norm(x): 0.7589, norm(y): 1.0088, norm:1.4956, tok/sec: 104476.37, flops:91.49, batch-reuse:1
@ 4804 train 4.6998 , allloss: 4.7206, dt: 1259.33ms, fracRes: 0.6000, norm(attn): 0.1230, norm(output): 0.2314, norm(x): 0.7607, norm(y): 1.0087, norm:1.2495, tok/sec: 104081.13, flops:91.14, batch-reuse:1
@ 4805 train 4.7575 , allloss: 4.7788, dt: 1273.57ms, fracRes: 0.5991, norm(attn): 0.1240, norm(output): 0.2324, norm(x): 0.7614, norm(y): 1.0087, norm:1.3480, tok/sec: 102916.66, flops:90.12, batch-reuse:1
@ 4806 train 4.7101 , allloss: 4.7333, dt: 1283.75ms, fracRes: 0.5990, norm(attn): 0.1250, norm(output): 0.2324, norm(x): 0.7567, norm(y): 1.0086, norm:1.6941, tok/sec: 102100.49, flops:89.41, batch-reuse:1
@ 4807 train 4.6734 , allloss: 4.6958, dt: 1296.21ms, fracRes: 0.5991, norm(attn): 0.1245, norm(output): 0.2324, norm(x): 0.7608, norm(y): 1.0087, norm:1.4561, tok/sec: 101119.23, flops:88.55, batch-reuse:1
@ 4808 train 4.7737 , allloss: 4.7948, dt: 1286.74ms, fracRes: 0.5993, norm(attn): 0.1245, norm(output): 0.2334, norm(x): 0.7612, norm(y): 1.0086, norm:1.1574, tok/sec: 101863.51, flops:89.20, batch-reuse:1
@ 4809 train 4.6517 , allloss: 4.6728, dt: 1267.86ms, fracRes: 0.6001, norm(attn): 0.1240, norm(output): 0.2334, norm(x): 0.7634, norm(y): 1.0088, norm:1.2883, tok/sec: 103380.23, flops:90.53, batch-reuse:1
@ 4810 train 4.7831 , allloss: 4.8047, dt: 1284.06ms, fracRes: 0.5996, norm(attn): 0.1240, norm(output): 0.2324, norm(x): 0.7626, norm(y): 1.0087, norm:1.2857, tok/sec: 102076.32, flops:89.39, batch-reuse:1
@ 4811 train 4.6830 , allloss: 4.7041, dt: 1292.71ms, fracRes: 0.5994, norm(attn): 0.1240, norm(output): 0.2324, norm(x): 0.7618, norm(y): 1.0087, norm:1.1723, tok/sec: 101392.84, flops:88.79, batch-reuse:1
@ 4812 train 4.7493 , allloss: 4.7724, dt: 1289.41ms, fracRes: 0.6018, norm(attn): 0.1226, norm(output): 0.2305, norm(x): 0.7622, norm(y): 1.0086, norm:1.6141, tok/sec: 101652.59, flops:89.02, batch-reuse:1
@ 4813 train 4.6688 , allloss: 4.6904, dt: 1297.99ms, fracRes: 0.6004, norm(attn): 0.1240, norm(output): 0.2314, norm(x): 0.7616, norm(y): 1.0086, norm:1.4856, tok/sec: 100980.57, flops:88.43, batch-reuse:1
@ 4814 train 4.7236 , allloss: 4.7463, dt: 1287.63ms, fracRes: 0.5999, norm(attn): 0.1240, norm(output): 0.2324, norm(x): 0.7600, norm(y): 1.0086, norm:1.3579, tok/sec: 101793.53, flops:89.14, batch-reuse:1
@ 4815 train 4.6703 , allloss: 4.6928, dt: 1288.42ms, fracRes: 0.5983, norm(attn): 0.1245, norm(output): 0.2334, norm(x): 0.7594, norm(y): 1.0087, norm:1.3807, tok/sec: 101730.96, flops:89.08, batch-reuse:1
@ 4816 train 4.6925 , allloss: 4.7141, dt: 1285.53ms, fracRes: 0.5994, norm(attn): 0.1235, norm(output): 0.2314, norm(x): 0.7587, norm(y): 1.0088, norm:1.4324, tok/sec: 101959.31, flops:89.28, batch-reuse:1
@ 4817 train 4.7225 , allloss: 4.7443, dt: 1298.14ms, fracRes: 0.6018, norm(attn): 0.1216, norm(output): 0.2305, norm(x): 0.7594, norm(y): 1.0088, norm:1.6067, tok/sec: 100969.22, flops:88.42, batch-reuse:1
@ 4818 train 4.6500 , allloss: 4.6716, dt: 1269.39ms, fracRes: 0.6020, norm(attn): 0.1226, norm(output): 0.2295, norm(x): 0.7622, norm(y): 1.0088, norm:1.2544, tok/sec: 103255.81, flops:90.42, batch-reuse:1
@ 4819 train 4.6930 , allloss: 4.7145, dt: 1300.06ms, fracRes: 0.6009, norm(attn): 0.1235, norm(output): 0.2314, norm(x): 0.7631, norm(y): 1.0088, norm:1.2965, tok/sec: 100819.74, flops:88.29, batch-reuse:1
@ 4820 train 4.6708 , allloss: 4.6917, dt: 1280.75ms, fracRes: 0.6006, norm(attn): 0.1245, norm(output): 0.2334, norm(x): 0.7632, norm(y): 1.0088, norm:1.2358, tok/sec: 102340.38, flops:89.62, batch-reuse:1
@ 4821 train 4.8487 , allloss: 4.8698, dt: 1257.89ms, fracRes: 0.6002, norm(attn): 0.1250, norm(output): 0.2334, norm(x): 0.7621, norm(y): 1.0086, norm:1.3215, tok/sec: 104200.25, flops:91.25, batch-reuse:1
@ 4822 train 4.7657 , allloss: 4.7868, dt: 1274.39ms, fracRes: 0.6010, norm(attn): 0.1221, norm(output): 0.2324, norm(x): 0.7645, norm(y): 1.0088, norm:1.3863, tok/sec: 102850.87, flops:90.07, batch-reuse:1
@ 4823 train 4.8213 , allloss: 4.8427, dt: 1284.60ms, fracRes: 0.6010, norm(attn): 0.1230, norm(output): 0.2324, norm(x): 0.7645, norm(y): 1.0087, norm:1.1825, tok/sec: 102033.56, flops:89.35, batch-reuse:1
@ 4824 train 4.8162 , allloss: 4.8380, dt: 1288.05ms, fracRes: 0.5996, norm(attn): 0.1245, norm(output): 0.2324, norm(x): 0.7600, norm(y): 1.0086, norm:1.3121, tok/sec: 101759.71, flops:89.11, batch-reuse:1
@ 4825 train 4.8836 , allloss: 4.9053, dt: 1277.30ms, fracRes: 0.6001, norm(attn): 0.1240, norm(output): 0.2324, norm(x): 0.7593, norm(y): 1.0087, norm:1.2258, tok/sec: 102616.35, flops:89.86, batch-reuse:1
@ 4826 train 4.8187 , allloss: 4.8407, dt: 1266.18ms, fracRes: 0.5997, norm(attn): 0.1250, norm(output): 0.2334, norm(x): 0.7612, norm(y): 1.0087, norm:1.1733, tok/sec: 103518.03, flops:90.65, batch-reuse:1
@ 4827 train 4.8523 , allloss: 4.8745, dt: 1280.59ms, fracRes: 0.6006, norm(attn): 0.1240, norm(output): 0.2334, norm(x): 0.7607, norm(y): 1.0087, norm:1.4403, tok/sec: 102352.46, flops:89.63, batch-reuse:1
@ 4828 train 4.8324 , allloss: 4.8542, dt: 1305.68ms, fracRes: 0.6011, norm(attn): 0.1235, norm(output): 0.2324, norm(x): 0.7607, norm(y): 1.0087, norm:1.3053, tok/sec: 100386.13, flops:87.91, batch-reuse:1
@ 4829 train 5.0365 , allloss: 5.0597, dt: 1275.73ms, fracRes: 0.6025, norm(attn): 0.1221, norm(output): 0.2324, norm(x): 0.7614, norm(y): 1.0086, norm:1.4302, tok/sec: 102742.77, flops:89.97, batch-reuse:1
@ 4830 train 4.8750 , allloss: 4.8976, dt: 1268.27ms, fracRes: 0.6014, norm(attn): 0.1245, norm(output): 0.2334, norm(x): 0.7597, norm(y): 1.0087, norm:1.4445, tok/sec: 103347.10, flops:90.50, batch-reuse:1
@ 4831 train 4.8130 , allloss: 4.8355, dt: 1261.83ms, fracRes: 0.6020, norm(attn): 0.1245, norm(output): 0.2324, norm(x): 0.7625, norm(y): 1.0087, norm:1.3611, tok/sec: 103874.82, flops:90.96, batch-reuse:1
@ 4832 train 4.9492 , allloss: 4.9715, dt: 1275.43ms, fracRes: 0.6019, norm(attn): 0.1250, norm(output): 0.2324, norm(x): 0.7616, norm(y): 1.0086, norm:1.5627, tok/sec: 102767.30, flops:89.99, batch-reuse:1
@ 4833 train 4.8143 , allloss: 4.8363, dt: 1297.12ms, fracRes: 0.6017, norm(attn): 0.1240, norm(output): 0.2314, norm(x): 0.7597, norm(y): 1.0087, norm:1.2065, tok/sec: 101048.84, flops:88.49, batch-reuse:1
@ 4834 train 4.9181 , allloss: 4.9404, dt: 1263.74ms, fracRes: 0.6004, norm(attn): 0.1230, norm(output): 0.2334, norm(x): 0.7591, norm(y): 1.0087, norm:1.4226, tok/sec: 103717.81, flops:90.82, batch-reuse:1
@ 4835 train 4.8302 , allloss: 4.8524, dt: 1286.42ms, fracRes: 0.5988, norm(attn): 0.1250, norm(output): 0.2334, norm(x): 0.7587, norm(y): 1.0086, norm:1.2351, tok/sec: 101888.63, flops:89.22, batch-reuse:1
@ 4836 train 4.7885 , allloss: 4.8109, dt: 1275.33ms, fracRes: 0.5982, norm(attn): 0.1250, norm(output): 0.2334, norm(x): 0.7568, norm(y): 1.0085, norm:1.4869, tok/sec: 102775.06, flops:90.00, batch-reuse:1
@ 4837 train 4.8812 , allloss: 4.9043, dt: 1267.70ms, fracRes: 0.5995, norm(attn): 0.1245, norm(output): 0.2324, norm(x): 0.7574, norm(y): 1.0086, norm:1.2483, tok/sec: 103393.57, flops:90.54, batch-reuse:1
@ 4838 train 4.8810 , allloss: 4.9037, dt: 1264.09ms, fracRes: 0.6006, norm(attn): 0.1235, norm(output): 0.2334, norm(x): 0.7586, norm(y): 1.0087, norm:1.3890, tok/sec: 103688.74, flops:90.80, batch-reuse:1
@ 4839 train 4.8264 , allloss: 4.8480, dt: 1252.37ms, fracRes: 0.6008, norm(attn): 0.1245, norm(output): 0.2314, norm(x): 0.7597, norm(y): 1.0088, norm:1.5177, tok/sec: 104659.08, flops:91.65, batch-reuse:1
@ 4840 train 4.9025 , allloss: 4.9249, dt: 1270.83ms, fracRes: 0.6018, norm(attn): 0.1221, norm(output): 0.2324, norm(x): 0.7607, norm(y): 1.0089, norm:1.4579, tok/sec: 103139.04, flops:90.32, batch-reuse:1
@ 4841 train 4.8984 , allloss: 4.9198, dt: 1258.17ms, fracRes: 0.6009, norm(attn): 0.1245, norm(output): 0.2314, norm(x): 0.7587, norm(y): 1.0087, norm:1.3762, tok/sec: 104176.85, flops:91.23, batch-reuse:1
@ 4842 train 4.8256 , allloss: 4.8463, dt: 1270.99ms, fracRes: 0.6005, norm(attn): 0.1250, norm(output): 0.2334, norm(x): 0.7585, norm(y): 1.0086, norm:1.3200, tok/sec: 103126.01, flops:90.31, batch-reuse:1
@ 4843 train 4.8632 , allloss: 4.8843, dt: 1288.76ms, fracRes: 0.6006, norm(attn): 0.1245, norm(output): 0.2334, norm(x): 0.7578, norm(y): 1.0087, norm:1.2060, tok/sec: 101704.17, flops:89.06, batch-reuse:1
@ 4844 train 4.7985 , allloss: 4.8206, dt: 1288.46ms, fracRes: 0.6005, norm(attn): 0.1245, norm(output): 0.2324, norm(x): 0.7581, norm(y): 1.0087, norm:1.1728, tok/sec: 101727.27, flops:89.08, batch-reuse:1
@ 4845 train 4.7540 , allloss: 4.7763, dt: 1294.44ms, fracRes: 0.5999, norm(attn): 0.1250, norm(output): 0.2334, norm(x): 0.7571, norm(y): 1.0088, norm:1.2603, tok/sec: 101257.52, flops:88.67, batch-reuse:1
@ 4846 train 4.8688 , allloss: 4.8916, dt: 1290.78ms, fracRes: 0.5992, norm(attn): 0.1250, norm(output): 0.2334, norm(x): 0.7549, norm(y): 1.0087, norm:1.4073, tok/sec: 101545.08, flops:88.92, batch-reuse:1
@ 4847 train 4.8548 , allloss: 4.8765, dt: 1283.77ms, fracRes: 0.5997, norm(attn): 0.1245, norm(output): 0.2334, norm(x): 0.7581, norm(y): 1.0087, norm:1.2181, tok/sec: 102099.58, flops:89.41, batch-reuse:1
@ 4848 train 4.7816 , allloss: 4.8032, dt: 1289.54ms, fracRes: 0.6006, norm(attn): 0.1230, norm(output): 0.2314, norm(x): 0.7573, norm(y): 1.0088, norm:1.3548, tok/sec: 101642.59, flops:89.01, batch-reuse:1
@ 4849 train 4.8742 , allloss: 4.8962, dt: 1279.26ms, fracRes: 0.6004, norm(attn): 0.1235, norm(output): 0.2334, norm(x): 0.7574, norm(y): 1.0087, norm:1.3216, tok/sec: 102459.60, flops:89.72, batch-reuse:1
@ 4850 train 5.0844 , allloss: 5.1070, dt: 1285.96ms, fracRes: 0.6007, norm(attn): 0.1245, norm(output): 0.2324, norm(x): 0.7582, norm(y): 1.0086, norm:1.4473, tok/sec: 101925.41, flops:89.25, batch-reuse:1
@ 4851 train 4.7924 , allloss: 4.8147, dt: 1285.11ms, fracRes: 0.5992, norm(attn): 0.1250, norm(output): 0.2334, norm(x): 0.7561, norm(y): 1.0086, norm:1.2831, tok/sec: 101992.71, flops:89.31, batch-reuse:1
@ 4852 train 4.8557 , allloss: 4.8777, dt: 1267.23ms, fracRes: 0.5995, norm(attn): 0.1245, norm(output): 0.2334, norm(x): 0.7548, norm(y): 1.0086, norm:1.4297, tok/sec: 103431.50, flops:90.57, batch-reuse:1
@ 4853 train 4.8205 , allloss: 4.8434, dt: 1261.72ms, fracRes: 0.5999, norm(attn): 0.1250, norm(output): 0.2324, norm(x): 0.7533, norm(y): 1.0086, norm:1.1143, tok/sec: 103883.45, flops:90.97, batch-reuse:1
@ 4854 train 4.7461 , allloss: 4.7709, dt: 1276.03ms, fracRes: 0.5999, norm(attn): 0.1250, norm(output): 0.2314, norm(x): 0.7515, norm(y): 1.0087, norm:1.8765, tok/sec: 102718.87, flops:89.95, batch-reuse:1
@ 4855 train 4.9808 , allloss: 5.0037, dt: 1268.88ms, fracRes: 0.6013, norm(attn): 0.1250, norm(output): 0.2305, norm(x): 0.7521, norm(y): 1.0087, norm:1.5481, tok/sec: 103297.13, flops:90.46, batch-reuse:1
@ 4856 train 4.8680 , allloss: 4.8902, dt: 1269.53ms, fracRes: 0.6001, norm(attn): 0.1240, norm(output): 0.2334, norm(x): 0.7537, norm(y): 1.0087, norm:1.4336, tok/sec: 103244.89, flops:90.41, batch-reuse:1
@ 4857 train 4.7895 , allloss: 4.8118, dt: 1282.23ms, fracRes: 0.5998, norm(attn): 0.1245, norm(output): 0.2334, norm(x): 0.7539, norm(y): 1.0087, norm:1.2610, tok/sec: 102221.75, flops:89.51, batch-reuse:1
@ 4858 train 4.8146 , allloss: 4.8365, dt: 1275.03ms, fracRes: 0.6004, norm(attn): 0.1240, norm(output): 0.2324, norm(x): 0.7556, norm(y): 1.0087, norm:1.4299, tok/sec: 102799.35, flops:90.02, batch-reuse:1
@ 4859 train 4.8709 , allloss: 4.8938, dt: 1271.25ms, fracRes: 0.6006, norm(attn): 0.1250, norm(output): 0.2334, norm(x): 0.7565, norm(y): 1.0086, norm:1.5389, tok/sec: 103105.20, flops:90.29, batch-reuse:1
@ 4860 train 4.7910 , allloss: 4.8130, dt: 1264.43ms, fracRes: 0.6000, norm(attn): 0.1250, norm(output): 0.2334, norm(x): 0.7570, norm(y): 1.0086, norm:1.5076, tok/sec: 103661.21, flops:90.77, batch-reuse:1
@ 4861 train 4.7810 , allloss: 4.8024, dt: 1261.17ms, fracRes: 0.5997, norm(attn): 0.1250, norm(output): 0.2334, norm(x): 0.7578, norm(y): 1.0086, norm:1.2616, tok/sec: 103928.70, flops:91.01, batch-reuse:1
@ 4862 train 4.8385 , allloss: 4.8617, dt: 1279.39ms, fracRes: 0.6000, norm(attn): 0.1250, norm(output): 0.2334, norm(x): 0.7562, norm(y): 1.0086, norm:1.4543, tok/sec: 102448.68, flops:89.71, batch-reuse:1
@ 4863 train 4.9171 , allloss: 4.9394, dt: 1272.64ms, fracRes: 0.6006, norm(attn): 0.1240, norm(output): 0.2314, norm(x): 0.7544, norm(y): 1.0086, norm:1.3489, tok/sec: 102992.40, flops:90.19, batch-reuse:1
@ 4864 train 4.8645 , allloss: 4.8871, dt: 1296.32ms, fracRes: 0.6016, norm(attn): 0.1235, norm(output): 0.2324, norm(x): 0.7588, norm(y): 1.0087, norm:1.3445, tok/sec: 101110.45, flops:88.54, batch-reuse:1
@ 4865 train 4.7686 , allloss: 4.7916, dt: 1259.56ms, fracRes: 0.6020, norm(attn): 0.1240, norm(output): 0.2334, norm(x): 0.7583, norm(y): 1.0088, norm:1.4197, tok/sec: 104061.37, flops:91.13, batch-reuse:1
@ 4866 train 4.8475 , allloss: 4.8687, dt: 1276.24ms, fracRes: 0.6017, norm(attn): 0.1230, norm(output): 0.2324, norm(x): 0.7572, norm(y): 1.0088, norm:1.5098, tok/sec: 102701.81, flops:89.93, batch-reuse:1
@ 4867 train 4.7902 , allloss: 4.8126, dt: 1297.83ms, fracRes: 0.6015, norm(attn): 0.1240, norm(output): 0.2314, norm(x): 0.7565, norm(y): 1.0086, norm:1.2198, tok/sec: 100993.34, flops:88.44, batch-reuse:1
@ 4868 train 4.7446 , allloss: 4.7666, dt: 1278.24ms, fracRes: 0.6004, norm(attn): 0.1245, norm(output): 0.2314, norm(x): 0.7554, norm(y): 1.0087, norm:1.4042, tok/sec: 102541.32, flops:89.79, batch-reuse:1
@ 4869 train 4.7843 , allloss: 4.8072, dt: 1280.24ms, fracRes: 0.6002, norm(attn): 0.1250, norm(output): 0.2324, norm(x): 0.7551, norm(y): 1.0087, norm:1.1998, tok/sec: 102380.55, flops:89.65, batch-reuse:1
@ 4870 train 4.7733 , allloss: 4.7947, dt: 1289.37ms, fracRes: 0.6005, norm(attn): 0.1245, norm(output): 0.2324, norm(x): 0.7571, norm(y): 1.0087, norm:1.2264, tok/sec: 101656.16, flops:89.02, batch-reuse:1
@ 4871 train 4.8693 , allloss: 4.8919, dt: 1271.58ms, fracRes: 0.6002, norm(attn): 0.1250, norm(output): 0.2334, norm(x): 0.7588, norm(y): 1.0086, norm:1.3488, tok/sec: 103078.37, flops:90.26, batch-reuse:1
@ 4872 train 4.7705 , allloss: 4.7918, dt: 1285.73ms, fracRes: 0.5993, norm(attn): 0.1250, norm(output): 0.2334, norm(x): 0.7571, norm(y): 1.0087, norm:1.3280, tok/sec: 101943.90, flops:89.27, batch-reuse:1
@ 4873 train 4.6579 , allloss: 4.6800, dt: 1309.32ms, fracRes: 0.6001, norm(attn): 0.1250, norm(output): 0.2324, norm(x): 0.7577, norm(y): 1.0088, norm:1.4100, tok/sec: 100106.64, flops:87.66, batch-reuse:1
@ 4874 train 4.8159 , allloss: 4.8374, dt: 1264.72ms, fracRes: 0.6001, norm(attn): 0.1250, norm(output): 0.2334, norm(x): 0.7589, norm(y): 1.0087, norm:1.2427, tok/sec: 103637.21, flops:90.75, batch-reuse:1
@ 4875 train 4.8359 , allloss: 4.8644, dt: 1266.21ms, fracRes: 0.6005, norm(attn): 0.1250, norm(output): 0.2324, norm(x): 0.7573, norm(y): 1.0087, norm:1.5297, tok/sec: 103515.13, flops:90.65, batch-reuse:1
@ 4876 train 4.8035 , allloss: 4.8255, dt: 1274.97ms, fracRes: 0.6000, norm(attn): 0.1250, norm(output): 0.2334, norm(x): 0.7562, norm(y): 1.0087, norm:1.2925, tok/sec: 102803.69, flops:90.02, batch-reuse:1
@ 4877 train 4.8391 , allloss: 4.8627, dt: 1261.95ms, fracRes: 0.6006, norm(attn): 0.1245, norm(output): 0.2334, norm(x): 0.7543, norm(y): 1.0087, norm:1.2662, tok/sec: 103864.55, flops:90.95, batch-reuse:1
@ 4878 train 4.6778 , allloss: 4.6992, dt: 1277.29ms, fracRes: 0.6004, norm(attn): 0.1245, norm(output): 0.2324, norm(x): 0.7551, norm(y): 1.0088, norm:1.2565, tok/sec: 102616.93, flops:89.86, batch-reuse:1
@ 4879 train 4.7736 , allloss: 4.7946, dt: 1290.16ms, fracRes: 0.6001, norm(attn): 0.1235, norm(output): 0.2324, norm(x): 0.7541, norm(y): 1.0087, norm:1.1814, tok/sec: 101593.53, flops:88.96, batch-reuse:1
@ 4880 train 4.7334 , allloss: 4.7558, dt: 1323.35ms, fracRes: 0.5993, norm(attn): 0.1250, norm(output): 0.2334, norm(x): 0.7552, norm(y): 1.0087, norm:1.3662, tok/sec: 99045.66, flops:86.73, batch-reuse:1
@ 4881 train 4.8581 , allloss: 4.8809, dt: 1316.79ms, fracRes: 0.5993, norm(attn): 0.1260, norm(output): 0.2334, norm(x): 0.7587, norm(y): 1.0087, norm:1.4101, tok/sec: 99538.95, flops:87.16, batch-reuse:1
@ 4882 train 4.8846 , allloss: 4.9074, dt: 1291.53ms, fracRes: 0.6002, norm(attn): 0.1250, norm(output): 0.2324, norm(x): 0.7571, norm(y): 1.0087, norm:1.1973, tok/sec: 101485.92, flops:88.87, batch-reuse:1
@ 4883 train 4.7426 , allloss: 4.7644, dt: 1281.74ms, fracRes: 0.6002, norm(attn): 0.1250, norm(output): 0.2334, norm(x): 0.7580, norm(y): 1.0088, norm:1.2616, tok/sec: 102260.90, flops:89.55, batch-reuse:1
@ 4884 train 4.7061 , allloss: 4.7280, dt: 1273.23ms, fracRes: 0.6000, norm(attn): 0.1250, norm(output): 0.2344, norm(x): 0.7593, norm(y): 1.0088, norm:1.3720, tok/sec: 102944.51, flops:90.15, batch-reuse:1
@ 4885 train 4.9467 , allloss: 4.9687, dt: 1277.02ms, fracRes: 0.6004, norm(attn): 0.1245, norm(output): 0.2334, norm(x): 0.7588, norm(y): 1.0087, norm:1.6864, tok/sec: 102638.67, flops:89.88, batch-reuse:1
@ 4886 train 4.7354 , allloss: 4.7575, dt: 1270.47ms, fracRes: 0.6000, norm(attn): 0.1245, norm(output): 0.2324, norm(x): 0.7567, norm(y): 1.0088, norm:1.3664, tok/sec: 103167.97, flops:90.34, batch-reuse:1
@ 4887 train 4.9297 , allloss: 4.9519, dt: 1271.51ms, fracRes: 0.6013, norm(attn): 0.1240, norm(output): 0.2324, norm(x): 0.7542, norm(y): 1.0088, norm:1.6774, tok/sec: 103083.96, flops:90.27, batch-reuse:1
@ 4888 train 4.7280 , allloss: 4.7501, dt: 1276.75ms, fracRes: 0.6002, norm(attn): 0.1250, norm(output): 0.2324, norm(x): 0.7558, norm(y): 1.0088, norm:1.5648, tok/sec: 102660.85, flops:89.90, batch-reuse:1
@ 4889 train 4.7457 , allloss: 4.7676, dt: 1253.52ms, fracRes: 0.6009, norm(attn): 0.1250, norm(output): 0.2324, norm(x): 0.7574, norm(y): 1.0088, norm:1.3049, tok/sec: 104563.37, flops:91.56, batch-reuse:1
@ 4890 train 4.7396 , allloss: 4.7617, dt: 1245.41ms, fracRes: 0.6012, norm(attn): 0.1250, norm(output): 0.2324, norm(x): 0.7592, norm(y): 1.0088, norm:1.2057, tok/sec: 105244.26, flops:92.16, batch-reuse:1
@ 4891 train 4.7819 , allloss: 4.8028, dt: 1261.24ms, fracRes: 0.6012, norm(attn): 0.1250, norm(output): 0.2324, norm(x): 0.7569, norm(y): 1.0088, norm:1.4910, tok/sec: 103922.79, flops:91.00, batch-reuse:1
@ 4892 train 4.8431 , allloss: 4.8650, dt: 1273.62ms, fracRes: 0.6010, norm(attn): 0.1245, norm(output): 0.2324, norm(x): 0.7567, norm(y): 1.0087, norm:1.3614, tok/sec: 102912.68, flops:90.12, batch-reuse:1
@ 4893 train 4.7750 , allloss: 4.7970, dt: 1290.63ms, fracRes: 0.6003, norm(attn): 0.1250, norm(output): 0.2314, norm(x): 0.7548, norm(y): 1.0087, norm:1.4795, tok/sec: 101556.35, flops:88.93, batch-reuse:1
@ 4894 train 4.8908 , allloss: 4.9140, dt: 1262.20ms, fracRes: 0.6007, norm(attn): 0.1250, norm(output): 0.2324, norm(x): 0.7552, norm(y): 1.0086, norm:1.4370, tok/sec: 103843.95, flops:90.93, batch-reuse:1
@ 4895 train 4.7764 , allloss: 4.8008, dt: 1252.88ms, fracRes: 0.6000, norm(attn): 0.1260, norm(output): 0.2334, norm(x): 0.7541, norm(y): 1.0087, norm:1.2641, tok/sec: 104616.65, flops:91.61, batch-reuse:1
@ 4896 train 4.8156 , allloss: 4.8372, dt: 1256.66ms, fracRes: 0.6009, norm(attn): 0.1250, norm(output): 0.2324, norm(x): 0.7569, norm(y): 1.0090, norm:1.3793, tok/sec: 104302.00, flops:91.34, batch-reuse:1
@ 4897 train 4.7863 , allloss: 4.8071, dt: 1263.94ms, fracRes: 0.6000, norm(attn): 0.1250, norm(output): 0.2324, norm(x): 0.7541, norm(y): 1.0087, norm:1.4047, tok/sec: 103701.23, flops:90.81, batch-reuse:1
@ 4898 train 4.8242 , allloss: 4.8460, dt: 1272.89ms, fracRes: 0.6006, norm(attn): 0.1245, norm(output): 0.2324, norm(x): 0.7540, norm(y): 1.0088, norm:1.4766, tok/sec: 102972.20, flops:90.17, batch-reuse:1
@ 4899 train 4.8113 , allloss: 4.8331, dt: 1255.94ms, fracRes: 0.6002, norm(attn): 0.1235, norm(output): 0.2314, norm(x): 0.7511, norm(y): 1.0086, norm:1.3425, tok/sec: 104361.52, flops:91.39, batch-reuse:1
@ 4900 train 4.7534 , allloss: 4.7755, dt: 1268.64ms, fracRes: 0.6004, norm(attn): 0.1240, norm(output): 0.2324, norm(x): 0.7520, norm(y): 1.0086, norm:1.2562, tok/sec: 103316.86, flops:90.47, batch-reuse:1
@ 4901 train 4.8102 , allloss: 4.8324, dt: 1275.48ms, fracRes: 0.6008, norm(attn): 0.1240, norm(output): 0.2324, norm(x): 0.7522, norm(y): 1.0087, norm:1.2292, tok/sec: 102762.65, flops:89.99, batch-reuse:1
@ 4902 train 4.5871 , allloss: 4.6124, dt: 1272.52ms, fracRes: 0.5998, norm(attn): 0.1260, norm(output): 0.2334, norm(x): 0.7492, norm(y): 1.0088, norm:1.4959, tok/sec: 103002.01, flops:90.20, batch-reuse:1
@ 4903 train 4.6748 , allloss: 4.6978, dt: 1281.30ms, fracRes: 0.5984, norm(attn): 0.1260, norm(output): 0.2334, norm(x): 0.7502, norm(y): 1.0086, norm:1.5075, tok/sec: 102296.25, flops:89.58, batch-reuse:1
@ 4904 train 4.7766 , allloss: 4.7997, dt: 1265.96ms, fracRes: 0.5993, norm(attn): 0.1250, norm(output): 0.2334, norm(x): 0.7518, norm(y): 1.0087, norm:1.2792, tok/sec: 103535.74, flops:90.66, batch-reuse:1
@ 4905 train 4.6940 , allloss: 4.7160, dt: 1266.98ms, fracRes: 0.5997, norm(attn): 0.1245, norm(output): 0.2314, norm(x): 0.7518, norm(y): 1.0088, norm:1.3209, tok/sec: 103452.48, flops:90.59, batch-reuse:1
@ 4906 train 4.8058 , allloss: 4.8280, dt: 1273.48ms, fracRes: 0.5999, norm(attn): 0.1240, norm(output): 0.2324, norm(x): 0.7515, norm(y): 1.0088, norm:1.1798, tok/sec: 102924.33, flops:90.13, batch-reuse:1
@ 4907 train 4.8235 , allloss: 4.8450, dt: 1290.92ms, fracRes: 0.5997, norm(attn): 0.1245, norm(output): 0.2324, norm(x): 0.7526, norm(y): 1.0088, norm:1.2843, tok/sec: 101533.73, flops:88.91, batch-reuse:1
@ 4908 train 4.8306 , allloss: 4.8519, dt: 1246.58ms, fracRes: 0.6004, norm(attn): 0.1250, norm(output): 0.2324, norm(x): 0.7532, norm(y): 1.0088, norm:1.2573, tok/sec: 105145.23, flops:92.07, batch-reuse:1
@ 4909 train 4.7242 , allloss: 4.7460, dt: 1274.10ms, fracRes: 0.5998, norm(attn): 0.1250, norm(output): 0.2324, norm(x): 0.7528, norm(y): 1.0087, norm:1.2243, tok/sec: 102874.03, flops:90.09, batch-reuse:1
@ 4910 train 4.9211 , allloss: 4.9465, dt: 1264.85ms, fracRes: 0.6025, norm(attn): 0.1245, norm(output): 0.2314, norm(x): 0.7564, norm(y): 1.0088, norm:1.9601, tok/sec: 103626.84, flops:90.74, batch-reuse:1
@ 4911 train 4.7972 , allloss: 4.8216, dt: 1264.31ms, fracRes: 0.6011, norm(attn): 0.1250, norm(output): 0.2324, norm(x): 0.7541, norm(y): 1.0088, norm:1.8168, tok/sec: 103671.18, flops:90.78, batch-reuse:1
@ 4912 train 4.8395 , allloss: 4.8627, dt: 1256.89ms, fracRes: 0.6012, norm(attn): 0.1245, norm(output): 0.2324, norm(x): 0.7562, norm(y): 1.0087, norm:1.4383, tok/sec: 104282.87, flops:91.32, batch-reuse:1
@ 4913 train 4.8424 , allloss: 4.8671, dt: 1282.82ms, fracRes: 0.6014, norm(attn): 0.1245, norm(output): 0.2324, norm(x): 0.7553, norm(y): 1.0086, norm:1.8431, tok/sec: 102174.92, flops:89.47, batch-reuse:1
@ 4914 train 4.7584 , allloss: 4.7799, dt: 1315.41ms, fracRes: 0.6007, norm(attn): 0.1250, norm(output): 0.2334, norm(x): 0.7561, norm(y): 1.0086, norm:1.9055, tok/sec: 99643.32, flops:87.26, batch-reuse:1
@ 4915 train 4.7659 , allloss: 4.7890, dt: 1297.13ms, fracRes: 0.6006, norm(attn): 0.1260, norm(output): 0.2334, norm(x): 0.7563, norm(y): 1.0086, norm:1.4935, tok/sec: 101048.08, flops:88.49, batch-reuse:1
@ 4916 train 4.7392 , allloss: 4.7626, dt: 1268.59ms, fracRes: 0.6001, norm(attn): 0.1260, norm(output): 0.2344, norm(x): 0.7558, norm(y): 1.0086, norm:1.5662, tok/sec: 103321.21, flops:90.48, batch-reuse:1
@ 4917 train 4.6813 , allloss: 4.7047, dt: 1247.71ms, fracRes: 0.6002, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7550, norm(y): 1.0088, norm:1.4365, tok/sec: 105049.71, flops:91.99, batch-reuse:1
@ 4918 train 4.6880 , allloss: 4.7104, dt: 1260.73ms, fracRes: 0.5997, norm(attn): 0.1250, norm(output): 0.2334, norm(x): 0.7553, norm(y): 1.0089, norm:1.5560, tok/sec: 103964.94, flops:91.04, batch-reuse:1
@ 4919 train 4.6978 , allloss: 4.7205, dt: 1269.40ms, fracRes: 0.5994, norm(attn): 0.1260, norm(output): 0.2334, norm(x): 0.7551, norm(y): 1.0088, norm:1.4347, tok/sec: 103254.70, flops:90.42, batch-reuse:1
@ 4920 train 4.7121 , allloss: 4.7347, dt: 1286.68ms, fracRes: 0.6014, norm(attn): 0.1235, norm(output): 0.2305, norm(x): 0.7539, norm(y): 1.0089, norm:1.3764, tok/sec: 101868.38, flops:89.20, batch-reuse:1
@ 4921 train 4.7127 , allloss: 4.7349, dt: 1263.71ms, fracRes: 0.6018, norm(attn): 0.1230, norm(output): 0.2324, norm(x): 0.7567, norm(y): 1.0089, norm:1.4424, tok/sec: 103720.35, flops:90.83, batch-reuse:1
@ 4922 train 4.6515 , allloss: 4.6725, dt: 1251.23ms, fracRes: 0.6014, norm(attn): 0.1235, norm(output): 0.2314, norm(x): 0.7572, norm(y): 1.0089, norm:1.3572, tok/sec: 104754.92, flops:91.73, batch-reuse:1
@ 4923 train 4.7081 , allloss: 4.7297, dt: 1274.89ms, fracRes: 0.6006, norm(attn): 0.1250, norm(output): 0.2334, norm(x): 0.7566, norm(y): 1.0088, norm:1.2854, tok/sec: 102810.14, flops:90.03, batch-reuse:1
@ 4924 train 4.7038 , allloss: 4.7265, dt: 1267.93ms, fracRes: 0.5999, norm(attn): 0.1260, norm(output): 0.2334, norm(x): 0.7547, norm(y): 1.0088, norm:1.3248, tok/sec: 103374.60, flops:90.52, batch-reuse:1
@ 4925 train 4.6579 , allloss: 4.6801, dt: 1261.92ms, fracRes: 0.5996, norm(attn): 0.1250, norm(output): 0.2334, norm(x): 0.7554, norm(y): 1.0087, norm:1.2427, tok/sec: 103867.20, flops:90.96, batch-reuse:1
@ 4926 train 4.7603 , allloss: 4.7829, dt: 1266.81ms, fracRes: 0.6000, norm(attn): 0.1260, norm(output): 0.2334, norm(x): 0.7539, norm(y): 1.0086, norm:1.2512, tok/sec: 103466.33, flops:90.60, batch-reuse:1
@ 4927 train 4.8286 , allloss: 4.8516, dt: 1281.95ms, fracRes: 0.5998, norm(attn): 0.1250, norm(output): 0.2334, norm(x): 0.7542, norm(y): 1.0087, norm:1.2017, tok/sec: 102244.35, flops:89.53, batch-reuse:1
@ 4928 train 4.6764 , allloss: 4.6982, dt: 1264.19ms, fracRes: 0.5994, norm(attn): 0.1270, norm(output): 0.2334, norm(x): 0.7539, norm(y): 1.0086, norm:1.4794, tok/sec: 103680.76, flops:90.79, batch-reuse:1
@ 4929 train 4.6504 , allloss: 4.6732, dt: 1267.05ms, fracRes: 0.6001, norm(attn): 0.1250, norm(output): 0.2324, norm(x): 0.7539, norm(y): 1.0088, norm:1.3503, tok/sec: 103446.96, flops:90.59, batch-reuse:1
@ 4930 train 4.6866 , allloss: 4.7091, dt: 1247.88ms, fracRes: 0.6000, norm(attn): 0.1250, norm(output): 0.2334, norm(x): 0.7546, norm(y): 1.0088, norm:1.6062, tok/sec: 105035.92, flops:91.98, batch-reuse:1
@ 4931 train 4.6997 , allloss: 4.7212, dt: 1269.70ms, fracRes: 0.6000, norm(attn): 0.1250, norm(output): 0.2334, norm(x): 0.7551, norm(y): 1.0088, norm:1.2933, tok/sec: 103230.74, flops:90.40, batch-reuse:1
@ 4932 train 4.7319 , allloss: 4.7540, dt: 1277.79ms, fracRes: 0.6010, norm(attn): 0.1245, norm(output): 0.2324, norm(x): 0.7560, norm(y): 1.0088, norm:1.2393, tok/sec: 102576.81, flops:89.83, batch-reuse:1
@ 4933 train 4.6860 , allloss: 4.7092, dt: 1269.87ms, fracRes: 0.5998, norm(attn): 0.1250, norm(output): 0.2334, norm(x): 0.7557, norm(y): 1.0088, norm:1.2427, tok/sec: 103217.00, flops:90.39, batch-reuse:1
@ 4934 train 4.6673 , allloss: 4.6889, dt: 1278.42ms, fracRes: 0.6005, norm(attn): 0.1250, norm(output): 0.2334, norm(x): 0.7566, norm(y): 1.0089, norm:1.4307, tok/sec: 102526.48, flops:89.78, batch-reuse:1
@ 4935 train 4.7091 , allloss: 4.7303, dt: 1262.70ms, fracRes: 0.6006, norm(attn): 0.1250, norm(output): 0.2334, norm(x): 0.7573, norm(y): 1.0089, norm:1.2774, tok/sec: 103803.11, flops:90.90, batch-reuse:1
@ 4936 train 4.7333 , allloss: 4.7563, dt: 1286.04ms, fracRes: 0.6004, norm(attn): 0.1250, norm(output): 0.2334, norm(x): 0.7554, norm(y): 1.0088, norm:1.2787, tok/sec: 101919.03, flops:89.25, batch-reuse:1
@ 4937 train 4.6858 , allloss: 4.7078, dt: 1278.53ms, fracRes: 0.6000, norm(attn): 0.1250, norm(output): 0.2334, norm(x): 0.7549, norm(y): 1.0088, norm:1.2504, tok/sec: 102517.95, flops:89.77, batch-reuse:1
@ 4938 train 4.6586 , allloss: 4.6800, dt: 1258.08ms, fracRes: 0.5997, norm(attn): 0.1260, norm(output): 0.2334, norm(x): 0.7559, norm(y): 1.0088, norm:1.2160, tok/sec: 104183.76, flops:91.23, batch-reuse:1
@ 4939 train 4.7523 , allloss: 4.7742, dt: 1270.80ms, fracRes: 0.6011, norm(attn): 0.1250, norm(output): 0.2334, norm(x): 0.7584, norm(y): 1.0088, norm:1.3051, tok/sec: 103141.26, flops:90.32, batch-reuse:1
@ 4940 train 4.6244 , allloss: 4.6462, dt: 1286.75ms, fracRes: 0.6012, norm(attn): 0.1250, norm(output): 0.2324, norm(x): 0.7563, norm(y): 1.0089, norm:1.5489, tok/sec: 101862.45, flops:89.20, batch-reuse:1
@ 4941 train 4.6886 , allloss: 4.7096, dt: 1280.22ms, fracRes: 0.6007, norm(attn): 0.1250, norm(output): 0.2324, norm(x): 0.7563, norm(y): 1.0088, norm:1.2346, tok/sec: 102382.17, flops:89.65, batch-reuse:1
@ 4942 train 4.6826 , allloss: 4.7043, dt: 1271.67ms, fracRes: 0.6007, norm(attn): 0.1260, norm(output): 0.2334, norm(x): 0.7560, norm(y): 1.0088, norm:1.3771, tok/sec: 103071.03, flops:90.26, batch-reuse:1
@ 4943 train 4.7424 , allloss: 4.7645, dt: 1273.44ms, fracRes: 0.6009, norm(attn): 0.1250, norm(output): 0.2324, norm(x): 0.7548, norm(y): 1.0087, norm:1.0848, tok/sec: 102927.72, flops:90.13, batch-reuse:1
@ 4944 train 4.6681 , allloss: 4.6898, dt: 1274.12ms, fracRes: 0.6015, norm(attn): 0.1240, norm(output): 0.2324, norm(x): 0.7533, norm(y): 1.0088, norm:1.4877, tok/sec: 102872.43, flops:90.08, batch-reuse:1
@ 4945 train 4.7350 , allloss: 4.7577, dt: 1257.50ms, fracRes: 0.6009, norm(attn): 0.1245, norm(output): 0.2314, norm(x): 0.7517, norm(y): 1.0088, norm:1.2869, tok/sec: 104231.84, flops:91.27, batch-reuse:1
@ 4946 train 4.6491 , allloss: 4.6705, dt: 1279.43ms, fracRes: 0.5999, norm(attn): 0.1250, norm(output): 0.2324, norm(x): 0.7517, norm(y): 1.0089, norm:1.2917, tok/sec: 102445.55, flops:89.71, batch-reuse:1
@ 4947 train 4.6883 , allloss: 4.7099, dt: 1275.81ms, fracRes: 0.6000, norm(attn): 0.1250, norm(output): 0.2324, norm(x): 0.7537, norm(y): 1.0088, norm:1.2553, tok/sec: 102736.53, flops:89.96, batch-reuse:1
@ 4948 train 4.6592 , allloss: 4.6821, dt: 1282.97ms, fracRes: 0.5998, norm(attn): 0.1270, norm(output): 0.2324, norm(x): 0.7508, norm(y): 1.0087, norm:1.2039, tok/sec: 102162.67, flops:89.46, batch-reuse:1
@ 4949 train 4.5966 , allloss: 4.6193, dt: 1262.43ms, fracRes: 0.5998, norm(attn): 0.1250, norm(output): 0.2324, norm(x): 0.7517, norm(y): 1.0088, norm:1.2884, tok/sec: 103825.07, flops:90.92, batch-reuse:1
@ 4950 train 4.6285 , allloss: 4.6502, dt: 1257.58ms, fracRes: 0.5995, norm(attn): 0.1245, norm(output): 0.2324, norm(x): 0.7527, norm(y): 1.0088, norm:1.3253, tok/sec: 104225.30, flops:91.27, batch-reuse:1
@ 4951 train 4.5720 , allloss: 4.5949, dt: 1269.98ms, fracRes: 0.6002, norm(attn): 0.1250, norm(output): 0.2324, norm(x): 0.7529, norm(y): 1.0088, norm:1.1869, tok/sec: 103207.97, flops:90.38, batch-reuse:1
@ 4952 train 4.6995 , allloss: 4.7213, dt: 1285.14ms, fracRes: 0.6000, norm(attn): 0.1250, norm(output): 0.2324, norm(x): 0.7529, norm(y): 1.0088, norm:1.1711, tok/sec: 101990.10, flops:89.31, batch-reuse:1
@ 4953 train 4.5938 , allloss: 4.6167, dt: 1259.07ms, fracRes: 0.6004, norm(attn): 0.1250, norm(output): 0.2314, norm(x): 0.7517, norm(y): 1.0089, norm:1.3317, tok/sec: 104102.34, flops:91.16, batch-reuse:1
@ 4954 train 4.7089 , allloss: 4.7310, dt: 1282.38ms, fracRes: 0.5999, norm(attn): 0.1250, norm(output): 0.2324, norm(x): 0.7533, norm(y): 1.0088, norm:1.3402, tok/sec: 102209.95, flops:89.50, batch-reuse:1
@ 4955 train 4.7468 , allloss: 4.7687, dt: 1276.21ms, fracRes: 0.5999, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7519, norm(y): 1.0087, norm:1.2293, tok/sec: 102704.23, flops:89.94, batch-reuse:1
@ 4956 train 4.6430 , allloss: 4.6644, dt: 1260.43ms, fracRes: 0.6003, norm(attn): 0.1260, norm(output): 0.2334, norm(x): 0.7518, norm(y): 1.0088, norm:1.5952, tok/sec: 103989.88, flops:91.06, batch-reuse:1
@ 4957 train 4.8041 , allloss: 4.8277, dt: 1276.61ms, fracRes: 0.6021, norm(attn): 0.1250, norm(output): 0.2324, norm(x): 0.7512, norm(y): 1.0088, norm:1.5752, tok/sec: 102671.77, flops:89.91, batch-reuse:1
@ 4958 train 4.6553 , allloss: 4.6770, dt: 1301.11ms, fracRes: 0.6013, norm(attn): 0.1245, norm(output): 0.2324, norm(x): 0.7532, norm(y): 1.0089, norm:1.2979, tok/sec: 100738.97, flops:88.22, batch-reuse:1
@ 4959 train 4.7377 , allloss: 4.7600, dt: 1277.71ms, fracRes: 0.6006, norm(attn): 0.1250, norm(output): 0.2334, norm(x): 0.7525, norm(y): 1.0088, norm:1.6074, tok/sec: 102583.36, flops:89.83, batch-reuse:1
@ 4960 train 4.6939 , allloss: 4.7162, dt: 1255.04ms, fracRes: 0.6004, norm(attn): 0.1250, norm(output): 0.2324, norm(x): 0.7512, norm(y): 1.0089, norm:1.3286, tok/sec: 104436.64, flops:91.45, batch-reuse:1
@ 4961 train 4.6523 , allloss: 4.6743, dt: 1276.47ms, fracRes: 0.6009, norm(attn): 0.1250, norm(output): 0.2334, norm(x): 0.7509, norm(y): 1.0089, norm:1.3672, tok/sec: 102683.32, flops:89.92, batch-reuse:1
@ 4962 train 4.6345 , allloss: 4.6556, dt: 1260.13ms, fracRes: 0.6008, norm(attn): 0.1245, norm(output): 0.2324, norm(x): 0.7519, norm(y): 1.0089, norm:1.2158, tok/sec: 104014.59, flops:91.08, batch-reuse:1
@ 4963 train 4.6734 , allloss: 4.6948, dt: 1264.07ms, fracRes: 0.6009, norm(attn): 0.1250, norm(output): 0.2334, norm(x): 0.7518, norm(y): 1.0088, norm:1.2880, tok/sec: 103690.54, flops:90.80, batch-reuse:1
@ 4964 train 4.5821 , allloss: 4.6058, dt: 1263.35ms, fracRes: 0.6015, norm(attn): 0.1250, norm(output): 0.2324, norm(x): 0.7536, norm(y): 1.0088, norm:1.3603, tok/sec: 103749.48, flops:90.85, batch-reuse:1
@ 4965 train 4.6000 , allloss: 4.6216, dt: 1273.04ms, fracRes: 0.6001, norm(attn): 0.1260, norm(output): 0.2334, norm(x): 0.7527, norm(y): 1.0088, norm:1.2073, tok/sec: 102959.94, flops:90.16, batch-reuse:1
@ 4966 train 4.7154 , allloss: 4.7397, dt: 1282.54ms, fracRes: 0.6004, norm(attn): 0.1250, norm(output): 0.2334, norm(x): 0.7510, norm(y): 1.0088, norm:1.4762, tok/sec: 102197.29, flops:89.49, batch-reuse:1
@ 4967 train 4.5703 , allloss: 4.5927, dt: 1292.63ms, fracRes: 0.5995, norm(attn): 0.1250, norm(output): 0.2324, norm(x): 0.7505, norm(y): 1.0090, norm:1.4098, tok/sec: 101399.70, flops:88.79, batch-reuse:1
@ 4968 train 4.5908 , allloss: 4.6132, dt: 1282.61ms, fracRes: 0.6000, norm(attn): 0.1245, norm(output): 0.2334, norm(x): 0.7493, norm(y): 1.0089, norm:1.4094, tok/sec: 102191.61, flops:89.49, batch-reuse:1
@ 4969 train 4.6327 , allloss: 4.6560, dt: 1267.36ms, fracRes: 0.6007, norm(attn): 0.1245, norm(output): 0.2314, norm(x): 0.7482, norm(y): 1.0089, norm:1.2424, tok/sec: 103421.50, flops:90.56, batch-reuse:1
@ 4970 train 4.7428 , allloss: 4.7653, dt: 1271.80ms, fracRes: 0.6006, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7480, norm(y): 1.0089, norm:1.3270, tok/sec: 103059.99, flops:90.25, batch-reuse:1
@ 4971 train 4.5966 , allloss: 4.6190, dt: 1271.14ms, fracRes: 0.5995, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7481, norm(y): 1.0088, norm:1.4204, tok/sec: 103113.85, flops:90.30, batch-reuse:1
@ 4972 train 4.5987 , allloss: 4.6206, dt: 1252.41ms, fracRes: 0.6006, norm(attn): 0.1250, norm(output): 0.2324, norm(x): 0.7492, norm(y): 1.0089, norm:1.3719, tok/sec: 104655.77, flops:91.65, batch-reuse:1
@ 4973 train 4.5754 , allloss: 4.5993, dt: 1271.17ms, fracRes: 0.6019, norm(attn): 0.1245, norm(output): 0.2295, norm(x): 0.7502, norm(y): 1.0090, norm:1.2254, tok/sec: 103111.41, flops:90.29, batch-reuse:1
@ 4974 train 4.5784 , allloss: 4.6016, dt: 1272.93ms, fracRes: 0.6020, norm(attn): 0.1240, norm(output): 0.2305, norm(x): 0.7482, norm(y): 1.0089, norm:1.7425, tok/sec: 102968.61, flops:90.17, batch-reuse:1
@ 4975 train 4.6639 , allloss: 4.6863, dt: 1252.46ms, fracRes: 0.6012, norm(attn): 0.1245, norm(output): 0.2324, norm(x): 0.7487, norm(y): 1.0089, norm:1.3480, tok/sec: 104651.65, flops:91.64, batch-reuse:1
@ 4976 train 4.6011 , allloss: 4.6240, dt: 1254.67ms, fracRes: 0.6004, norm(attn): 0.1250, norm(output): 0.2324, norm(x): 0.7486, norm(y): 1.0087, norm:1.3088, tok/sec: 104467.54, flops:91.48, batch-reuse:1
@ 4977 train 4.6677 , allloss: 4.6895, dt: 1267.52ms, fracRes: 0.6004, norm(attn): 0.1250, norm(output): 0.2314, norm(x): 0.7476, norm(y): 1.0088, norm:1.2375, tok/sec: 103408.45, flops:90.55, batch-reuse:1
@ 4978 train 4.5274 , allloss: 4.5486, dt: 1272.37ms, fracRes: 0.6003, norm(attn): 0.1250, norm(output): 0.2334, norm(x): 0.7490, norm(y): 1.0088, norm:1.4061, tok/sec: 103014.28, flops:90.21, batch-reuse:1
@ 4979 train 4.5869 , allloss: 4.6087, dt: 1282.80ms, fracRes: 0.6004, norm(attn): 0.1250, norm(output): 0.2324, norm(x): 0.7478, norm(y): 1.0088, norm:1.4955, tok/sec: 102176.26, flops:89.47, batch-reuse:1
@ 4980 train 4.5852 , allloss: 4.6082, dt: 1268.60ms, fracRes: 0.6003, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7475, norm(y): 1.0088, norm:1.5200, tok/sec: 103320.00, flops:90.48, batch-reuse:1
@ 4981 train 4.7245 , allloss: 4.7502, dt: 1274.08ms, fracRes: 0.6005, norm(attn): 0.1250, norm(output): 0.2324, norm(x): 0.7462, norm(y): 1.0088, norm:1.5054, tok/sec: 102875.60, flops:90.09, batch-reuse:1
@ 4982 train 4.6329 , allloss: 4.6554, dt: 1279.08ms, fracRes: 0.6006, norm(attn): 0.1250, norm(output): 0.2324, norm(x): 0.7479, norm(y): 1.0087, norm:1.2568, tok/sec: 102473.93, flops:89.73, batch-reuse:1
@ 4983 train 4.5773 , allloss: 4.5985, dt: 1261.71ms, fracRes: 0.6015, norm(attn): 0.1245, norm(output): 0.2314, norm(x): 0.7492, norm(y): 1.0089, norm:1.2966, tok/sec: 103884.30, flops:90.97, batch-reuse:1
@ 4984 train 4.5771 , allloss: 4.5995, dt: 1270.86ms, fracRes: 0.6001, norm(attn): 0.1250, norm(output): 0.2334, norm(x): 0.7462, norm(y): 1.0087, norm:1.2862, tok/sec: 103136.25, flops:90.31, batch-reuse:1
@ 4985 train 4.6155 , allloss: 4.6376, dt: 1277.49ms, fracRes: 0.6012, norm(attn): 0.1250, norm(output): 0.2305, norm(x): 0.7465, norm(y): 1.0090, norm:1.7446, tok/sec: 102601.11, flops:89.85, batch-reuse:1
@ 4986 train 4.6032 , allloss: 4.6262, dt: 1297.64ms, fracRes: 0.5995, norm(attn): 0.1250, norm(output): 0.2314, norm(x): 0.7449, norm(y): 1.0089, norm:1.4135, tok/sec: 101008.03, flops:88.45, batch-reuse:1
@ 4987 train 4.6790 , allloss: 4.7020, dt: 1296.19ms, fracRes: 0.6002, norm(attn): 0.1250, norm(output): 0.2314, norm(x): 0.7465, norm(y): 1.0088, norm:1.4177, tok/sec: 101120.77, flops:88.55, batch-reuse:1
@ 4988 train 4.5104 , allloss: 4.5326, dt: 1272.76ms, fracRes: 0.6013, norm(attn): 0.1250, norm(output): 0.2314, norm(x): 0.7487, norm(y): 1.0088, norm:1.4716, tok/sec: 102982.27, flops:90.18, batch-reuse:1
@ 4989 train 4.7630 , allloss: 4.7851, dt: 1247.49ms, fracRes: 0.6018, norm(attn): 0.1245, norm(output): 0.2324, norm(x): 0.7498, norm(y): 1.0088, norm:1.4454, tok/sec: 105068.72, flops:92.01, batch-reuse:1
@ 4990 train 4.6370 , allloss: 4.6592, dt: 1277.51ms, fracRes: 0.6013, norm(attn): 0.1250, norm(output): 0.2324, norm(x): 0.7505, norm(y): 1.0088, norm:1.4326, tok/sec: 102599.40, flops:89.84, batch-reuse:1
@ 4991 train 4.5830 , allloss: 4.6052, dt: 1269.54ms, fracRes: 0.6002, norm(attn): 0.1260, norm(output): 0.2334, norm(x): 0.7505, norm(y): 1.0087, norm:1.2107, tok/sec: 103243.71, flops:90.41, batch-reuse:1
@ 4992 train 4.6258 , allloss: 4.6485, dt: 1263.37ms, fracRes: 0.6009, norm(attn): 0.1250, norm(output): 0.2324, norm(x): 0.7510, norm(y): 1.0089, norm:1.4129, tok/sec: 103747.54, flops:90.85, batch-reuse:1
@ 4993 train 4.6158 , allloss: 4.6378, dt: 1268.81ms, fracRes: 0.6008, norm(attn): 0.1250, norm(output): 0.2324, norm(x): 0.7506, norm(y): 1.0089, norm:1.3388, tok/sec: 103303.09, flops:90.46, batch-reuse:1
@ 4994 train 4.5645 , allloss: 4.5863, dt: 1251.33ms, fracRes: 0.6007, norm(attn): 0.1245, norm(output): 0.2314, norm(x): 0.7486, norm(y): 1.0089, norm:1.2075, tok/sec: 104746.50, flops:91.73, batch-reuse:1
@ 4995 train 4.5319 , allloss: 4.5562, dt: 1267.14ms, fracRes: 0.6004, norm(attn): 0.1250, norm(output): 0.2314, norm(x): 0.7456, norm(y): 1.0088, norm:1.2904, tok/sec: 103438.86, flops:90.58, batch-reuse:1
@ 4996 train 4.6326 , allloss: 4.6548, dt: 1295.37ms, fracRes: 0.5991, norm(attn): 0.1250, norm(output): 0.2324, norm(x): 0.7466, norm(y): 1.0088, norm:1.2817, tok/sec: 101184.83, flops:88.61, batch-reuse:1
@ 4997 train 4.5646 , allloss: 4.5862, dt: 1277.48ms, fracRes: 0.5995, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7451, norm(y): 1.0087, norm:1.3020, tok/sec: 102602.12, flops:89.85, batch-reuse:1
@ 4998 train 4.6691 , allloss: 4.6914, dt: 1266.15ms, fracRes: 0.6000, norm(attn): 0.1250, norm(output): 0.2314, norm(x): 0.7451, norm(y): 1.0088, norm:1.3401, tok/sec: 103520.35, flops:90.65, batch-reuse:1
@ 4999 train 4.5250 , allloss: 4.5478, dt: 1268.33ms, fracRes: 0.5999, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7423, norm(y): 1.0089, norm:1.3484, tok/sec: 103342.16, flops:90.50, batch-reuse:1
@ 5000 train 4.6074 , allloss: 4.6304, dt: 2594.01ms, fracRes: 0.5990, norm(attn): 0.1250, norm(output): 0.2314, norm(x): 0.7414, norm(y): 1.0088, norm:1.6136, tok/sec: 50528.78, flops:44.25, batch-reuse:1
@ 5001 train 4.4880 , allloss: 4.5107, dt: 1258.89ms, fracRes: 0.5986, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7395, norm(y): 1.0087, norm:1.4043, tok/sec: 104117.44, flops:91.17, batch-reuse:1
@ 5002 train 4.7316 , allloss: 4.7547, dt: 1247.56ms, fracRes: 0.5994, norm(attn): 0.1270, norm(output): 0.2334, norm(x): 0.7405, norm(y): 1.0086, norm:1.4864, tok/sec: 105062.98, flops:92.00, batch-reuse:1
@ 5003 train 4.6072 , allloss: 4.6315, dt: 1269.31ms, fracRes: 0.6009, norm(attn): 0.1250, norm(output): 0.2305, norm(x): 0.7412, norm(y): 1.0089, norm:1.7389, tok/sec: 103262.71, flops:90.43, batch-reuse:1
@ 5004 train 4.6841 , allloss: 4.7072, dt: 1269.14ms, fracRes: 0.6005, norm(attn): 0.1250, norm(output): 0.2295, norm(x): 0.7404, norm(y): 1.0089, norm:1.3409, tok/sec: 103276.02, flops:90.44, batch-reuse:1
@ 5005 train 4.5538 , allloss: 4.5759, dt: 1262.18ms, fracRes: 0.6002, norm(attn): 0.1250, norm(output): 0.2314, norm(x): 0.7439, norm(y): 1.0089, norm:1.6276, tok/sec: 103845.99, flops:90.94, batch-reuse:1
@ 5006 train 4.6601 , allloss: 4.6824, dt: 1280.26ms, fracRes: 0.5998, norm(attn): 0.1250, norm(output): 0.2314, norm(x): 0.7446, norm(y): 1.0088, norm:1.6334, tok/sec: 102379.60, flops:89.65, batch-reuse:1
@ 5007 train 4.6006 , allloss: 4.6237, dt: 1274.36ms, fracRes: 0.6002, norm(attn): 0.1245, norm(output): 0.2305, norm(x): 0.7414, norm(y): 1.0088, norm:1.3740, tok/sec: 102852.95, flops:90.07, batch-reuse:1
@ 5008 train 4.7049 , allloss: 4.7284, dt: 1269.16ms, fracRes: 0.6003, norm(attn): 0.1250, norm(output): 0.2285, norm(x): 0.7419, norm(y): 1.0089, norm:1.6972, tok/sec: 103274.22, flops:90.44, batch-reuse:1
@ 5009 train 4.5206 , allloss: 4.5439, dt: 1289.18ms, fracRes: 0.6001, norm(attn): 0.1250, norm(output): 0.2305, norm(x): 0.7444, norm(y): 1.0089, norm:1.6340, tok/sec: 101671.05, flops:89.03, batch-reuse:1
@ 5010 train 4.6326 , allloss: 4.6555, dt: 1281.59ms, fracRes: 0.6001, norm(attn): 0.1250, norm(output): 0.2314, norm(x): 0.7440, norm(y): 1.0088, norm:1.5185, tok/sec: 102273.00, flops:89.56, batch-reuse:1
@ 5011 train 4.5697 , allloss: 4.5918, dt: 1253.10ms, fracRes: 0.5999, norm(attn): 0.1245, norm(output): 0.2324, norm(x): 0.7445, norm(y): 1.0088, norm:1.3753, tok/sec: 104598.46, flops:91.60, batch-reuse:1
@ 5012 train 4.6633 , allloss: 4.6871, dt: 1260.00ms, fracRes: 0.6001, norm(attn): 0.1250, norm(output): 0.2314, norm(x): 0.7423, norm(y): 1.0089, norm:1.5185, tok/sec: 104025.77, flops:91.09, batch-reuse:1
@ 5013 train 4.8441 , allloss: 4.8671, dt: 1264.46ms, fracRes: 0.5994, norm(attn): 0.1270, norm(output): 0.2324, norm(x): 0.7465, norm(y): 1.0086, norm:1.4642, tok/sec: 103658.30, flops:90.77, batch-reuse:1
@ 5014 train 4.8226 , allloss: 4.8463, dt: 1254.73ms, fracRes: 0.6014, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7460, norm(y): 1.0086, norm:1.6246, tok/sec: 104462.00, flops:91.48, batch-reuse:1
@ 5015 train 4.7377 , allloss: 4.7605, dt: 1269.98ms, fracRes: 0.6018, norm(attn): 0.1250, norm(output): 0.2334, norm(x): 0.7461, norm(y): 1.0088, norm:1.3898, tok/sec: 103207.72, flops:90.38, batch-reuse:1
@ 5016 train 4.7530 , allloss: 4.7782, dt: 1268.49ms, fracRes: 0.6008, norm(attn): 0.1270, norm(output): 0.2324, norm(x): 0.7434, norm(y): 1.0086, norm:1.5886, tok/sec: 103329.52, flops:90.48, batch-reuse:1
@ 5017 train 4.8042 , allloss: 4.8282, dt: 1285.35ms, fracRes: 0.6000, norm(attn): 0.1270, norm(output): 0.2324, norm(x): 0.7435, norm(y): 1.0086, norm:1.6876, tok/sec: 101973.76, flops:89.30, batch-reuse:1
@ 5018 train 4.7621 , allloss: 4.7850, dt: 1283.08ms, fracRes: 0.5992, norm(attn): 0.1270, norm(output): 0.2334, norm(x): 0.7421, norm(y): 1.0087, norm:1.8276, tok/sec: 102154.56, flops:89.46, batch-reuse:1
@ 5019 train 4.7582 , allloss: 4.7806, dt: 1264.43ms, fracRes: 0.5992, norm(attn): 0.1260, norm(output): 0.2334, norm(x): 0.7447, norm(y): 1.0087, norm:1.4983, tok/sec: 103661.17, flops:90.77, batch-reuse:1
@ 5020 train 4.7602 , allloss: 4.7834, dt: 1267.48ms, fracRes: 0.6000, norm(attn): 0.1250, norm(output): 0.2334, norm(x): 0.7417, norm(y): 1.0087, norm:1.2650, tok/sec: 103411.19, flops:90.56, batch-reuse:1
@ 5021 train 4.7549 , allloss: 4.7779, dt: 1307.97ms, fracRes: 0.5998, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7437, norm(y): 1.0087, norm:1.4360, tok/sec: 100210.43, flops:87.75, batch-reuse:1
@ 5022 train 4.8158 , allloss: 4.8391, dt: 1259.88ms, fracRes: 0.5997, norm(attn): 0.1260, norm(output): 0.2334, norm(x): 0.7435, norm(y): 1.0086, norm:1.4526, tok/sec: 104035.28, flops:91.10, batch-reuse:1
@ 5023 train 4.8102 , allloss: 4.8339, dt: 1254.42ms, fracRes: 0.5996, norm(attn): 0.1270, norm(output): 0.2324, norm(x): 0.7434, norm(y): 1.0087, norm:1.4884, tok/sec: 104488.50, flops:91.50, batch-reuse:1
@ 5024 train 4.7984 , allloss: 4.8228, dt: 1280.75ms, fracRes: 0.6000, norm(attn): 0.1250, norm(output): 0.2314, norm(x): 0.7432, norm(y): 1.0088, norm:1.4852, tok/sec: 102339.88, flops:89.62, batch-reuse:1
@ 5025 train 4.7386 , allloss: 4.7608, dt: 1301.48ms, fracRes: 0.6008, norm(attn): 0.1250, norm(output): 0.2314, norm(x): 0.7439, norm(y): 1.0088, norm:1.3001, tok/sec: 100710.07, flops:88.19, batch-reuse:1
@ 5026 train 4.7586 , allloss: 4.7810, dt: 1301.11ms, fracRes: 0.6011, norm(attn): 0.1245, norm(output): 0.2305, norm(x): 0.7442, norm(y): 1.0088, norm:1.3600, tok/sec: 100738.30, flops:88.22, batch-reuse:1
@ 5027 train 4.7078 , allloss: 4.7323, dt: 1256.24ms, fracRes: 0.6004, norm(attn): 0.1250, norm(output): 0.2324, norm(x): 0.7411, norm(y): 1.0087, norm:1.3686, tok/sec: 104336.90, flops:91.37, batch-reuse:1
@ 5028 train 4.7424 , allloss: 4.7653, dt: 1254.17ms, fracRes: 0.5997, norm(attn): 0.1260, norm(output): 0.2334, norm(x): 0.7443, norm(y): 1.0087, norm:1.7849, tok/sec: 104509.14, flops:91.52, batch-reuse:1
@ 5029 train 4.7369 , allloss: 4.7613, dt: 1274.91ms, fracRes: 0.6004, norm(attn): 0.1270, norm(output): 0.2334, norm(x): 0.7439, norm(y): 1.0086, norm:1.5500, tok/sec: 102808.46, flops:90.03, batch-reuse:1
@ 5030 train 4.7890 , allloss: 4.8119, dt: 1260.36ms, fracRes: 0.6009, norm(attn): 0.1270, norm(output): 0.2324, norm(x): 0.7448, norm(y): 1.0087, norm:1.5835, tok/sec: 103995.74, flops:91.07, batch-reuse:1
@ 5031 train 4.7974 , allloss: 4.8214, dt: 1272.07ms, fracRes: 0.6026, norm(attn): 0.1250, norm(output): 0.2324, norm(x): 0.7452, norm(y): 1.0087, norm:1.4655, tok/sec: 103038.65, flops:90.23, batch-reuse:1
@ 5032 train 4.7343 , allloss: 4.7584, dt: 1279.43ms, fracRes: 0.6032, norm(attn): 0.1240, norm(output): 0.2305, norm(x): 0.7418, norm(y): 1.0087, norm:1.5775, tok/sec: 102445.63, flops:89.71, batch-reuse:1
@ 5033 train 4.6805 , allloss: 4.7044, dt: 1244.28ms, fracRes: 0.6021, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7420, norm(y): 1.0087, norm:1.3849, tok/sec: 105339.54, flops:92.24, batch-reuse:1
@ 5034 train 4.7771 , allloss: 4.8007, dt: 1258.45ms, fracRes: 0.6016, norm(attn): 0.1250, norm(output): 0.2324, norm(x): 0.7445, norm(y): 1.0088, norm:1.4649, tok/sec: 104153.30, flops:91.21, batch-reuse:1
@ 5035 train 5.0036 , allloss: 5.0285, dt: 1268.41ms, fracRes: 0.6016, norm(attn): 0.1250, norm(output): 0.2314, norm(x): 0.7440, norm(y): 1.0087, norm:1.5613, tok/sec: 103335.58, flops:90.49, batch-reuse:1
@ 5036 train 4.7136 , allloss: 4.7358, dt: 1244.41ms, fracRes: 0.6015, norm(attn): 0.1250, norm(output): 0.2324, norm(x): 0.7473, norm(y): 1.0088, norm:1.6842, tok/sec: 105328.69, flops:92.23, batch-reuse:1
@ 5037 train 4.7723 , allloss: 4.7948, dt: 1289.29ms, fracRes: 0.6009, norm(attn): 0.1260, norm(output): 0.2334, norm(x): 0.7447, norm(y): 1.0087, norm:1.4104, tok/sec: 101662.50, flops:89.02, batch-reuse:1
@ 5038 train 4.7325 , allloss: 4.7544, dt: 1291.37ms, fracRes: 0.6007, norm(attn): 0.1250, norm(output): 0.2334, norm(x): 0.7427, norm(y): 1.0087, norm:1.5742, tok/sec: 101498.36, flops:88.88, batch-reuse:1
@ 5039 train 4.7290 , allloss: 4.7525, dt: 1259.90ms, fracRes: 0.6000, norm(attn): 0.1279, norm(output): 0.2324, norm(x): 0.7430, norm(y): 1.0087, norm:1.4394, tok/sec: 104033.39, flops:91.10, batch-reuse:1
@ 5040 train 4.8075 , allloss: 4.8298, dt: 1269.76ms, fracRes: 0.6012, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7453, norm(y): 1.0087, norm:1.2587, tok/sec: 103225.60, flops:90.39, batch-reuse:1
@ 5041 train 4.7980 , allloss: 4.8207, dt: 1276.16ms, fracRes: 0.6014, norm(attn): 0.1250, norm(output): 0.2324, norm(x): 0.7444, norm(y): 1.0088, norm:1.3390, tok/sec: 102707.80, flops:89.94, batch-reuse:1
@ 5042 train 4.8896 , allloss: 4.9125, dt: 1283.56ms, fracRes: 0.6011, norm(attn): 0.1250, norm(output): 0.2324, norm(x): 0.7441, norm(y): 1.0087, norm:1.3828, tok/sec: 102116.20, flops:89.42, batch-reuse:1
@ 5043 train 4.7248 , allloss: 4.7481, dt: 1271.78ms, fracRes: 0.6013, norm(attn): 0.1260, norm(output): 0.2334, norm(x): 0.7451, norm(y): 1.0088, norm:1.5209, tok/sec: 103061.87, flops:90.25, batch-reuse:1
@ 5044 train 4.6915 , allloss: 4.7147, dt: 1258.80ms, fracRes: 0.6007, norm(attn): 0.1260, norm(output): 0.2334, norm(x): 0.7445, norm(y): 1.0088, norm:1.2695, tok/sec: 104124.48, flops:91.18, batch-reuse:1
@ 5045 train 4.6712 , allloss: 4.6944, dt: 1275.44ms, fracRes: 0.6002, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7452, norm(y): 1.0088, norm:1.3920, tok/sec: 102765.78, flops:89.99, batch-reuse:1
@ 5046 train 4.7801 , allloss: 4.8027, dt: 1269.90ms, fracRes: 0.6005, norm(attn): 0.1260, norm(output): 0.2334, norm(x): 0.7448, norm(y): 1.0087, norm:1.3340, tok/sec: 103214.69, flops:90.38, batch-reuse:1
@ 5047 train 4.7633 , allloss: 4.7861, dt: 1263.17ms, fracRes: 0.6008, norm(attn): 0.1250, norm(output): 0.2324, norm(x): 0.7457, norm(y): 1.0087, norm:1.5566, tok/sec: 103764.59, flops:90.87, batch-reuse:1
@ 5048 train 4.6671 , allloss: 4.6906, dt: 1271.73ms, fracRes: 0.6011, norm(attn): 0.1250, norm(output): 0.2314, norm(x): 0.7455, norm(y): 1.0088, norm:1.4667, tok/sec: 103066.10, flops:90.25, batch-reuse:1
@ 5049 train 4.7024 , allloss: 4.7252, dt: 1278.06ms, fracRes: 0.6016, norm(attn): 0.1250, norm(output): 0.2314, norm(x): 0.7465, norm(y): 1.0088, norm:1.2792, tok/sec: 102555.42, flops:89.81, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6836, 0.3164, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7422, 0.1016, 0.1572, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3887, 0.0640, 0.1572, 0.3906, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1064, 0.0186, 0.0664, 0.2656, 0.5430, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2285, 0.0569, 0.0383, 0.1396, 0.2930, 0.2432, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0718, 0.0327, 0.0216, 0.1338, 0.5039, 0.1748, 0.0635, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3145, 0.3594, 0.2090, 0.0092, 0.0225, 0.0261, 0.0108, 0.0508, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2109, 0.0796, 0.0962, 0.0801, 0.1660, 0.0527, 0.0957, 0.0693, 0.1494, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1992, 0.2207, 0.3066, 0.0078, 0.0104, 0.0085, 0.0104, 0.0884, 0.0139, 0.1348, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1514, 0.0732, 0.2236, 0.0483, 0.0435, 0.0244, 0.0189, 0.1235, 0.0464, 0.1670, 0.0806, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0320, 0.0165, 0.0100, 0.1426, 0.1084, 0.1631, 0.1611, 0.0815, 0.2168, 0.0410, 0.0209, 0.0077, 0.0000, 0.0000, 0.0000],
        [0.0703, 0.0688, 0.0469, 0.0388, 0.0850, 0.0898, 0.0620, 0.0210, 0.1309, 0.0762, 0.1924, 0.0952, 0.0228, 0.0000, 0.0000],
        [0.0908, 0.0530, 0.0369, 0.0359, 0.1245, 0.0476, 0.0613, 0.0287, 0.1138, 0.0874, 0.1230, 0.0298, 0.0564, 0.1108, 0.0000],
        [0.1279, 0.0742, 0.0718, 0.0713, 0.0933, 0.0221, 0.0152, 0.0364, 0.0289, 0.1040, 0.1055, 0.0840, 0.0806, 0.0425, 0.0427]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[    -0.0017,     -0.0059,      0.0011,  ...,     -0.0398,      0.0188,      0.0049],
        [    -0.0372,      0.0068,     -0.0091,  ...,      0.0053,      0.0045,      0.0087],
        [     0.0261,      0.0320,     -0.0094,  ...,     -0.0210,      0.0231,     -0.0140],
        ...,
        [     0.0301,      0.0229,      0.0147,  ...,     -0.0376,      0.0128,      0.0175],
        [    -0.0494,      0.0000,     -0.0353,  ...,      0.0098,     -0.0013,     -0.0111],
        [    -0.0248,      0.0069,     -0.0207,  ...,     -0.0039,     -0.0185,     -0.0104]], device='cuda:0', requires_grad=True)
K: tensor([ 1.2109,  0.5781, -0.1660,  0.2734,  0.3965,  0.5039,  0.9141, -0.1187, -0.3379, -0.3125,  0.7383, -0.0386, -0.5586, -0.2793,  0.0405, -0.4160, -0.3242,  0.2832, -0.5703,  0.6406,  0.6016,  0.4805, -0.1963,  0.3008,  0.0361, -0.1226, -0.7266, -0.1021,  0.7812, -0.4062,  1.3906, -0.0693,
         0.7031, -0.6211,  0.9453,  0.8477, -1.1562,  0.1660, -0.4043, -1.4219,  0.1230, -0.1582, -0.6523,  1.0312, -0.3340,  0.2236, -0.1455,  1.0781,  0.5977, -0.3887,  0.6445, -0.1113, -1.0938,  0.5312,  0.8672, -0.6445, -0.1836,  0.3086,  1.1094, -0.1475, -0.3730, -0.4453, -0.3691, -0.0275],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0221, -0.0054, -0.0180,  ...,  0.0102, -0.0022, -0.0212],
        [ 0.0192, -0.0126,  0.0142,  ...,  0.0080,  0.0281,  0.0089],
        [-0.0392,  0.0403,  0.0023,  ..., -0.0167, -0.0265, -0.0502],
        ...,
        [ 0.0104,  0.0091,  0.0197,  ...,  0.0197,  0.0195,  0.0211],
        [ 0.0233, -0.0078,  0.0434,  ...,  0.0281,  0.0086,  0.0297],
        [ 0.0163, -0.0159,  0.0213,  ..., -0.0193,  0.0211, -0.0018]], device='cuda:0', requires_grad=True)
Q: tensor([-0.5508, -0.5469, -1.1250, -1.5469, -0.0236,  0.0047, -2.4062,  0.2188, -0.1865,  0.4121, -0.4023, -1.0547, -0.4805, -0.5469, -0.0576, -0.1680, -0.8594, -0.1206,  0.0903,  0.2910, -0.0085, -0.5664,  0.4609,  0.3652, -0.0034, -0.1523,  0.0869, -0.9141, -0.7305,  0.6328, -0.3828,  0.4297,
        -0.7500, -0.5039,  0.0801, -0.1025,  1.1562,  0.9023, -0.4082,  1.5859,  0.7930, -0.2773,  0.1050,  1.1250, -0.6758, -0.0903, -0.1406,  0.1338, -0.2480,  0.2324, -1.8672, -0.8594,  0.1533, -1.0234, -0.5586, -1.0938,  0.5352, -0.6484,  0.1465, -0.3887,  0.6094,  0.4082,  0.0728,  0.2676],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.7656, -0.5703, -0.8477, -1.8203, -1.1875, -0.7148,  0.4492, -1.3125, -0.8633, -2.2031, -0.6367,  0.9961, -1.4922, -0.7070],
        [ 0.0000, -1.9922, -1.5547,  0.5586,  1.2578,  0.6992,  0.2471, -0.6328,  0.9141,  0.2031,  0.4062, -1.1016, -1.3984,  1.6484, -0.0435],
        [ 0.0000, -1.8047, -0.9023,  0.0046,  0.8125, -0.0265, -0.2969, -1.7031, -0.0178, -0.2637,  1.1484, -0.5234, -2.0156,  0.3965, -0.1279],
        [ 0.0000, -1.7422, -0.4707,  0.9141,  1.6328, -0.0253, -0.5156, -0.6914,  1.2188,  1.0234,  0.1855, -1.0938, -1.2188,  1.7578,  0.1406],
        [ 0.0000, -1.3906, -1.7812, -0.4961,  0.2480,  0.0615,  1.3047, -0.2051,  0.9258, -1.2266, -0.2695, -1.4609, -0.9219,  0.9531,  0.3242],
        [ 0.0000, -0.7812, -1.1953,  0.6250,  1.9453,  0.8906, -0.1177, -2.2188,  1.3359,  0.7656,  2.4375, -0.8555, -2.5625,  1.7266,  0.6250],
        [ 0.0000,  0.1338, -0.4062, -3.5312, -2.6406, -2.4844, -3.3594, -1.8203, -2.4062, -0.9688,  0.1787,  0.2539, -0.3809, -2.6562, -1.5000],
        [ 0.0000, -0.9727, -0.7852, -0.9648, -0.2393, -1.3828, -0.7891, -1.1094, -0.3438, -0.2598, -0.0242, -0.9648, -0.5195, -0.4727, -0.6641],
        [ 0.0000,  0.1060,  0.4316, -3.2344, -2.9531, -3.1562, -2.9531, -0.8086, -2.6562, -0.3926, -0.0630,  0.8945,  1.0703, -3.0625, -0.9336],
        [ 0.0000, -0.7266,  0.3945, -1.1406, -1.2500, -1.8203, -2.0781, -0.2002, -1.1797,  0.0991, -0.6289,  0.5508,  0.4883, -1.2344, -0.5703],
        [ 0.0000, -0.6641, -1.1641,  1.4922,  1.2188,  1.6250,  1.6094,  0.9297,  1.9062,  0.2441, -0.4297, -1.4219,  0.0325,  1.9688,  1.0000],
        [ 0.0000, -0.0260, -0.4062, -0.5977,  0.1895,  0.2422, -0.1299, -1.2109,  0.6172,  0.0806,  1.0000,  0.3008, -1.1250,  0.5156,  0.2754],
        [ 0.0000, -0.5391, -0.9023, -0.9258,  0.3145, -0.6445, -0.3926, -1.1484,  0.2246, -0.0415,  0.3027, -1.1172, -0.4746,  0.2012, -0.4375],
        [ 0.0000, -0.5391, -0.5742, -0.5820, -0.3125, -1.7578, -2.1250, -1.2500, -1.4844, -0.2021, -0.1885, -0.4199, -0.4609, -1.1016, -1.0938]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8158],
        [0.7803],
        [0.6758],
        [0.3893],
        [0.4795],
        [0.3641],
        [0.4342],
        [0.3140],
        [0.2240],
        [0.1101],
        [0.0642],
        [0.1070],
        [0.1161],
        [0.1050]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9922, 0.0086, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9297, 0.0439, 0.0249, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9492, 0.0264, 0.0178, 0.0068, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7500, 0.0635, 0.0352, 0.0522, 0.1001, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7852, 0.0461, 0.0566, 0.0215, 0.0415, 0.0483, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7773, 0.0532, 0.0264, 0.0092, 0.0193, 0.0752, 0.0376, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8320, 0.0415, 0.0172, 0.0065, 0.0247, 0.0298, 0.0226, 0.0242, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7305, 0.0452, 0.0288, 0.0192, 0.0114, 0.0381, 0.0588, 0.0140, 0.0549, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7344, 0.0391, 0.0289, 0.0267, 0.0078, 0.0554, 0.0337, 0.0289, 0.0299, 0.0140, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6602, 0.0247, 0.0026, 0.0045, 0.0052, 0.0122, 0.0204, 0.0032, 0.0952, 0.0014, 0.1719, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6992, 0.0344, 0.0099, 0.0052, 0.0094, 0.0408, 0.0312, 0.0270, 0.0306, 0.0131, 0.0898, 0.0084, 0.0000, 0.0000, 0.0000],
        [0.7344, 0.0216, 0.0087, 0.0044, 0.0118, 0.0508, 0.0286, 0.0148, 0.0532, 0.0085, 0.0176, 0.0087, 0.0374, 0.0000, 0.0000],
        [0.4355, 0.0272, 0.0200, 0.0184, 0.0095, 0.0376, 0.0669, 0.0130, 0.0493, 0.0125, 0.1641, 0.0182, 0.0281, 0.1006, 0.0000],
        [0.2305, 0.0623, 0.0176, 0.0175, 0.0117, 0.0281, 0.0430, 0.0396, 0.0297, 0.0469, 0.2119, 0.0698, 0.0571, 0.0493, 0.0850]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0341, -0.0117, -0.0127,  ..., -0.0246, -0.0271,  0.0292],
        [-0.0119,  0.0176, -0.0180,  ...,  0.0203,  0.0081, -0.0406],
        [ 0.0116,  0.0281,  0.0180,  ...,  0.0103,  0.0186,  0.0139],
        ...,
        [-0.0060,  0.0073,  0.0202,  ...,  0.0401, -0.0213, -0.0063],
        [-0.0087, -0.0010, -0.0025,  ...,  0.0004,  0.0002, -0.0008],
        [ 0.0238,  0.0311,  0.0206,  ...,  0.0009, -0.0278,  0.0216]], device='cuda:0', requires_grad=True)
K: tensor([ 2.3906, -0.2988, -1.3672,  0.2910, -1.1172, -1.0547,  0.4941,  0.9648,  0.7422,  0.3223,  0.9570,  1.1250, -1.8203,  0.8086,  0.8945, -1.5000, -0.6328, -0.0635, -0.3359,  0.2490,  0.8594,  1.1953,  1.2344, -2.1250,  0.4883,  0.0464, -1.3828,  0.2578, -0.0339, -0.6094,  2.2188, -0.0049,
        -1.5859,  0.0400, -1.5625,  0.3555,  1.0078,  1.6719,  0.5508,  1.1406,  1.9609, -1.4297, -1.5078,  1.3125,  0.9688,  0.1816, -1.5391, -2.3750,  1.1953,  1.3594, -0.8750,  2.2188, -1.1719,  0.3125,  0.3418, -0.4746,  1.3906,  0.5156, -0.5352,  1.7031, -0.2451,  1.8281,  1.7891,  0.2109],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0187, -0.0118, -0.0128,  ..., -0.0032,  0.0084, -0.0107],
        [ 0.0195,  0.0049, -0.0563,  ..., -0.0142, -0.0074, -0.0184],
        [ 0.0399,  0.0301,  0.0273,  ..., -0.0185,  0.0268,  0.0173],
        ...,
        [-0.0169, -0.0187,  0.0168,  ...,  0.0207,  0.0010, -0.0396],
        [ 0.0450,  0.0157, -0.0113,  ..., -0.0099,  0.0103, -0.0035],
        [ 0.0127, -0.0306, -0.0192,  ...,  0.0090, -0.0052,  0.0176]], device='cuda:0', requires_grad=True)
Q: tensor([-0.9531, -0.0500, -0.2754, -0.2832,  0.3848, -0.2793,  0.2520,  0.9180,  0.5000,  0.4570, -0.1064, -1.6719,  0.3301, -0.8398,  0.0112,  1.8359, -0.5195,  0.3203, -1.1562, -1.3359,  1.2891, -0.4746, -0.5156,  0.7148, -0.6133,  0.0427,  1.4844, -0.0359, -0.5312, -0.1328, -0.3711, -1.0234,
        -0.6289,  0.2598,  1.0078,  1.1094,  0.9883,  0.3770,  0.1592,  0.4180,  0.0991,  0.8008, -0.4863, -0.1709,  0.2031, -1.6484,  0.2949, -0.8789,  0.7500,  0.0334,  0.1553, -0.2930, -1.0312,  0.0625,  0.1963,  1.6016, -0.5430,  0.8555,  0.6367,  0.3652, -0.5664, -0.2559, -0.2012, -0.8320],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -4.7500, -6.8438, -7.8750, -6.6875, -4.9688, -5.7812, -6.1562, -3.7656, -8.0625, -7.0938, -8.0625, -5.7500, -4.1250, -4.2500],
        [ 0.0000, -3.0469, -3.6250, -5.0000, -4.3125, -3.0469, -3.3438, -2.7500, -3.6562, -3.6250, -4.0000, -3.7500, -2.3906, -3.6562, -2.8438],
        [ 0.0000, -3.5781, -3.9688, -4.9375, -4.9375, -3.6875, -3.4062, -5.0938, -4.0938, -5.0312, -5.0000, -5.0938, -4.5312, -4.4062, -3.5000],
        [ 0.0000, -2.4688, -3.0625, -2.6719, -2.0156, -2.1406, -1.8672, -2.2344, -0.2412, -2.5781,  0.6133, -2.3281, -1.6719,  0.7305, -0.6250],
        [ 0.0000, -2.8438, -2.6250, -3.5938, -2.9375, -2.7812, -2.3125, -2.0781, -2.4062, -2.5625, -3.6406, -2.2031, -2.4844, -2.3594, -1.7109],
        [ 0.0000, -2.6875, -3.3906, -4.4375, -3.7031, -2.3281, -3.0312, -2.6562, -2.1250, -3.4062, -4.1562, -3.2969, -2.2656, -2.4688, -2.1719],
        [ 0.0000, -3.0000, -3.8906, -4.8438, -3.5156, -3.3281, -3.6094, -3.5312, -2.9375, -4.0625, -4.0312, -4.1875, -3.1094, -3.3438, -2.6562],
        [ 0.0000, -2.7812, -3.2344, -3.6406, -4.1562, -2.9531, -2.5156, -3.9531, -2.5938, -4.0625, -1.6562, -3.7500, -3.4375, -1.9453, -1.9375],
        [ 0.0000, -2.9375, -3.2344, -3.3125, -4.5312, -2.5781, -3.0781, -3.2344, -3.2031, -3.9688, -2.7500, -3.5625, -2.3594, -2.9688, -4.1875],
        [ 0.0000, -3.2812, -5.5312, -4.9688, -4.8438, -3.9844, -3.4688, -5.3438, -1.9375, -6.1875, -1.3438, -5.3750, -4.7500, -1.1719, -3.5938],
        [ 0.0000, -3.0156, -4.2500, -4.9062, -4.3125, -2.8438, -3.1094, -3.2500, -3.1250, -3.9844, -2.0625, -4.4375, -2.2344, -2.6094, -2.7188],
        [ 0.0000, -3.5156, -4.4375, -5.1250, -4.1250, -2.6719, -3.2500, -3.9062, -2.6250, -4.4688, -3.7344, -4.4375, -2.9844, -2.6562, -3.3125],
        [ 0.0000, -2.7656, -3.0781, -3.1562, -3.8281, -2.4531, -1.8672, -3.5156, -2.1719, -3.5469, -0.9727, -3.1719, -2.7344, -1.4688, -2.0781],
        [ 0.0000, -1.3047, -2.5781, -2.5781, -2.9844, -2.1094, -1.6797, -1.7578, -2.0469, -1.5938, -0.0835, -1.1953, -1.3984, -1.5469, -1.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8376],
        [0.6595],
        [0.5938],
        [0.5664],
        [0.4029],
        [0.4683],
        [0.4468],
        [0.3966],
        [0.4730],
        [0.3934],
        [0.3943],
        [0.3347],
        [0.2957],
        [0.2688]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0002,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0020,     0.0052,     0.0008,     0.0004,     0.0021,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0006,     0.0011,     0.0003,     0.0001,     0.0008,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0009,     0.0019,     0.0005,     0.0001,     0.0008,     0.0004,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0004,     0.0013,     0.0002,     0.0000,     0.0004,     0.0002,     0.0001,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0002,     0.0001,     0.0000,     0.0001,     0.0001,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9844,     0.0016,     0.0049,     0.0010,     0.0002,     0.0014,     0.0009,     0.0003,     0.0013,     0.0012,     0.0001,     0.0012,     0.0011,     0.0000,     0.0000],
        [    0.9961,     0.0005,     0.0017,     0.0002,     0.0000,     0.0005,     0.0003,     0.0001,     0.0004,     0.0002,     0.0000,     0.0003,     0.0004,     0.0003,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0079,  0.0024,  0.0186,  ..., -0.0178, -0.0021, -0.0137],
        [ 0.0287, -0.0444, -0.0240,  ..., -0.0044, -0.0151, -0.0306],
        [ 0.0396, -0.0350,  0.0323,  ..., -0.0055, -0.0147,  0.0082],
        ...,
        [ 0.0360,  0.0154, -0.0273,  ..., -0.0037,  0.0205,  0.0180],
        [ 0.0097,  0.0269, -0.0179,  ..., -0.0167, -0.0424, -0.0183],
        [ 0.0184, -0.0093,  0.0066,  ...,  0.0022, -0.0237,  0.0168]], device='cuda:0', requires_grad=True)
K: tensor([    -1.2656,     -0.8281,     -1.9766,     -2.1719,     -2.3281,      2.6875,     -1.5078,      2.3594,     -1.5781,     -2.4375,      0.8789,     -0.7578,     -1.8281,     -1.5000,     -2.5156,     -0.2715,      1.9766,      3.3594,     -2.8438,      1.6484,      2.3594,      1.9297,
            -1.2188,     -0.4922,      1.9219,     -1.4062,     -0.2910,     -2.7812,      1.7422,      1.8984,      0.7383,      3.1875,     -1.4375,      1.6641,      2.5156,     -1.5625,     -1.3594,      0.5508,      1.8281,     -2.0781,      1.4609,     -1.7422,     -0.0030,      1.5391,
             1.3125,      2.9531,     -1.3594,     -2.8438,      1.7031,      2.6719,     -1.8203,     -2.6094,      1.9922,      1.5156,      2.4062,     -1.1016,     -1.4844,     -2.7344,     -1.7656,     -1.8203,     -3.2812,     -1.7734,      1.9219,      2.1562], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[ 0.0140,  0.0130,  0.0268,  ..., -0.0137,  0.0396, -0.0056],
        [ 0.0093,  0.0334,  0.0077,  ...,  0.0215,  0.0228, -0.0170],
        [-0.0098, -0.0024,  0.0184,  ..., -0.0195,  0.0487, -0.0234],
        ...,
        [-0.0007, -0.0063,  0.0151,  ..., -0.0328, -0.0035,  0.0047],
        [ 0.0156, -0.0091,  0.0176,  ...,  0.0258,  0.0211, -0.0130],
        [ 0.0265, -0.0293, -0.0237,  ...,  0.0195,  0.0250,  0.0088]], device='cuda:0', requires_grad=True)
Q: tensor([ 1.9062,  1.6484, -0.3398,  0.1738,  0.9922, -0.1533,  1.2266, -0.6406,  1.7266,  1.0391, -0.7930,  0.3770,  1.5547,  1.9219,  0.9297, -1.7500, -1.0625, -2.0156,  2.0000, -0.0991, -1.5625,  0.4707,  1.3047,  1.1094, -0.9023, -0.8438,  0.7227,  0.8398, -1.3828, -1.1016, -1.5234, -0.7070,
         0.2637, -2.0000, -0.6094,  0.5234,  1.9844,  0.1436, -0.2910, -0.5273, -1.7188,  2.3906,  1.1719, -0.8164, -0.1699, -1.0625,  1.8984,  1.0078, -1.1562, -1.5078,  1.6328, -0.2344, -2.0625, -0.5820, -1.4766,  1.8750,  0.3770,  1.6797,  2.2500,  2.6562,  2.0469,  1.2266, -2.2031,  0.2754],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000,  -8.3750,  -7.9062,  -8.9375, -10.1875,  -7.8125,  -8.5625,  -9.9375,  -8.4375,  -9.5625, -11.0625,  -9.0625,  -8.4375,  -8.3750, -10.7500],
        [  0.0000,  -8.4375,  -8.1875,  -9.1875, -10.7500,  -7.9375,  -8.8750,  -9.6250,  -8.2500,  -9.5625, -11.1875,  -9.3125,  -8.6875,  -8.3750, -10.2500],
        [  0.0000,  -9.6250,  -9.2500, -10.3750, -12.5625,  -9.3750, -10.3750, -11.8125, -10.0000, -10.9375, -13.1250, -10.9375, -10.1875, -10.1875, -12.1875],
        [  0.0000, -11.3125, -10.1250, -11.6875, -13.5000, -10.4375, -11.1875, -14.0625, -11.1250, -12.8750, -15.0625, -12.1250, -11.4375, -11.1875, -14.6875],
        [  0.0000,  -6.1875,  -5.2500,  -7.1875,  -7.7188,  -6.1562,  -6.3125,  -7.1875,  -6.6250,  -7.2188,  -8.6250,  -6.6875,  -6.3438,  -6.6562,  -7.4688],
        [  0.0000,  -7.3750,  -6.7812,  -8.2500,  -9.7500,  -7.1562,  -7.5938,  -8.6875,  -7.8438,  -8.7500, -10.3750,  -8.0625,  -7.8438,  -7.8750,  -9.0625],
        [  0.0000,  -6.9688,  -6.2500,  -7.6250,  -9.7500,  -7.1875,  -7.9375,  -8.5000,  -7.1250,  -7.1250,  -9.9375,  -7.5625,  -7.6250,  -7.3438,  -7.8750],
        [  0.0000,  -7.9375,  -6.6250,  -8.6875, -10.2500,  -7.8438,  -8.3125,  -9.6250,  -8.1250,  -8.8125, -11.1875,  -8.3750,  -8.2500,  -8.2500,  -9.6875],
        [  0.0000,  -9.1250,  -8.3750,  -9.6250, -11.9375,  -9.0625,  -9.6250, -11.4375,  -9.3125, -10.0000, -12.6875, -10.1875,  -9.8125,  -9.5000, -11.5000],
        [  0.0000, -10.1250,  -9.3125, -11.3750, -13.0625, -10.1250, -11.0000, -12.3125, -10.7500, -11.4375, -14.2500, -11.2500, -10.6875, -10.8125, -12.6875],
        [  0.0000, -10.0625,  -9.4375, -10.4375, -12.7500,  -9.5625, -10.6875, -12.5625,  -9.9375, -11.6250, -13.4375, -10.8125, -10.4375, -10.0625, -13.3750],
        [  0.0000,  -6.4375,  -5.3125,  -6.9375,  -8.4375,  -6.5938,  -7.0312,  -8.1875,  -6.6250,  -6.7500,  -9.1250,  -6.7188,  -6.8125,  -6.7500,  -7.8750],
        [  0.0000,  -7.6250,  -6.3438,  -8.5000,  -9.9375,  -7.5625,  -8.0625,  -9.2500,  -7.9062,  -8.5000, -10.8125,  -8.0625,  -7.9375,  -8.0000,  -9.3750],
        [  0.0000, -13.3750, -12.1250, -14.1250, -15.9375, -12.5625, -13.2500, -15.9375, -13.3125, -14.8750, -18.0000, -14.8125, -14.2500, -13.6250, -15.5625]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9993],
        [0.9990],
        [0.9997],
        [0.9990],
        [0.9938],
        [0.9951],
        [0.9961],
        [0.9984],
        [1.0000],
        [0.9987],
        [0.9987],
        [0.9977],
        [0.9984],
        [1.0000]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3105, 0.6875, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0420, 0.4688, 0.4883, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0168, 0.3125, 0.3457, 0.3242, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0986, 0.3320, 0.3477, 0.0776, 0.1455, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0442, 0.1777, 0.2314, 0.0942, 0.1152, 0.3379, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0273, 0.1050, 0.1699, 0.0400, 0.0166, 0.0786, 0.5625, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0120, 0.0591, 0.0564, 0.0142, 0.0269, 0.0732, 0.4512, 0.3066, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0469, 0.0369, 0.0322, 0.0064, 0.0209, 0.0554, 0.4219, 0.2422, 0.1377, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0152, 0.0425, 0.0267, 0.0081, 0.0228, 0.0403, 0.1895, 0.2871, 0.2158, 0.1523, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0527, 0.0261, 0.0488, 0.0074, 0.0072, 0.0275, 0.2852, 0.2910, 0.0752, 0.1235, 0.0552, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0322, 0.0364, 0.0297, 0.0076, 0.0161, 0.0215, 0.1128, 0.1250, 0.0879, 0.0830, 0.2002, 0.2471, 0.0000, 0.0000, 0.0000],
        [0.0150, 0.0227, 0.0190, 0.0032, 0.0075, 0.0181, 0.0845, 0.0859, 0.0645, 0.0640, 0.1309, 0.2061, 0.2793, 0.0000, 0.0000],
        [0.0449, 0.0153, 0.0121, 0.0018, 0.0061, 0.0159, 0.1270, 0.0801, 0.0405, 0.0581, 0.0879, 0.1309, 0.2012, 0.1787, 0.0000],
        [0.0082, 0.0075, 0.0043, 0.0012, 0.0028, 0.0046, 0.0258, 0.0233, 0.0247, 0.0193, 0.0388, 0.1069, 0.1240, 0.1104, 0.4980]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[    -0.0129,      0.0123,      0.0055,  ...,     -0.0313,     -0.0042,     -0.0406],
        [    -0.0311,     -0.0161,     -0.0083,  ...,      0.0029,     -0.0001,     -0.0029],
        [    -0.0351,     -0.0050,      0.0410,  ...,     -0.0155,     -0.0165,     -0.0262],
        ...,
        [    -0.0138,     -0.0316,     -0.0054,  ...,     -0.0404,     -0.0237,     -0.0578],
        [    -0.0208,     -0.0277,     -0.0230,  ...,      0.0011,     -0.0109,      0.0242],
        [    -0.0168,      0.0145,      0.0183,  ...,     -0.0126,      0.0005,     -0.0076]], device='cuda:0', requires_grad=True)
K: tensor([-1.9375, -2.2656, -1.5469, -0.2256, -1.7969, -2.1094, -2.5625,  1.8828,  0.8438, -1.8359,  1.4219, -1.0938,  1.7109, -2.7500,  0.8594,  2.2969,  1.3984, -0.4023, -0.2539,  0.9531, -0.4082, -1.1484, -0.5703, -1.1094, -1.1406,  0.7344,  0.7070,  2.5000, -1.3281,  2.1094, -1.7578, -2.7188,
        -1.9453, -0.4902,  0.9336, -1.7734,  3.3438, -0.5117, -2.1406,  1.3750, -3.2031,  1.6406,  1.9922,  2.3594,  1.0781, -0.9414, -1.8516, -1.2812,  3.2812,  1.3594,  1.3438, -0.6484, -1.0312, -2.6719, -2.4062, -1.7891,  2.5156, -2.0938, -1.4453,  1.6562, -0.9609,  0.9492,  0.7109, -2.4375],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0135,  0.0018,  0.0148,  ...,  0.0247, -0.0131, -0.0191],
        [ 0.0368, -0.0226,  0.0190,  ..., -0.0100,  0.0132,  0.0188],
        [-0.0191,  0.0120,  0.0445,  ...,  0.0224,  0.0227, -0.0074],
        ...,
        [ 0.0177,  0.0008, -0.0329,  ..., -0.0090,  0.0017, -0.0082],
        [-0.0025,  0.0361, -0.0141,  ...,  0.0195,  0.0097, -0.0292],
        [-0.0068, -0.0029, -0.0062,  ...,  0.0113,  0.0022, -0.0032]], device='cuda:0', requires_grad=True)
Q: tensor([-0.6797, -0.1328, -1.0547, -1.0859, -2.4375,  0.6094, -0.0723, -0.0703, -0.0630,  0.5781,  1.5859,  3.0469, -1.0391, -0.6133,  3.3438, -1.7266, -4.6250,  0.0737, -0.8164,  0.1348, -2.5781,  1.8359, -4.6562,  0.4258, -0.0464, -1.0234,  2.6406,  1.3359, -3.8906, -1.5391, -0.4922, -0.0613,
        -4.0000,  3.1250, -1.7031,  0.8008,  0.4922, -0.5547, -0.8320,  1.9844, -0.2256,  0.1875,  1.3203, -0.0908, -1.9688, -1.9766,  0.1748, -2.7188, -0.0549,  2.1875,  0.0282, -1.4922, -0.9570, -0.2754,  1.0156,  0.8945, -0.7969,  0.2793, -0.5195, -0.5859, -2.7500,  2.9531,  1.0781, -2.5625],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.7930,  1.2422,  0.4707,  0.9766,  1.1953,  2.2812,  2.2344,  2.0625,  1.8672,  2.2500,  2.6875,  2.8750,  2.9688,  5.1875],
        [ 0.0000,  2.4062,  2.4531,  2.3281,  2.7500,  2.9531,  4.0312,  4.2188,  4.2500,  3.9688,  4.6562,  4.8438,  5.5312,  5.4688,  6.4375],
        [ 0.0000,  2.9219,  3.0156,  2.9531,  3.3750,  3.7969,  4.5312,  4.7500,  5.2188,  5.1250,  6.0000,  6.3125,  6.4375,  6.6562,  7.6875],
        [ 0.0000,  1.2109,  1.2578, -0.2412,  0.3848,  1.3516,  3.2812,  3.3594,  2.4375,  3.1406,  2.6406,  3.5469,  4.3750,  3.7969,  6.7188],
        [ 0.0000,  1.3906,  1.6562,  0.7539,  0.9570,  2.0312,  4.2500,  4.1250,  3.5625,  3.6562,  4.1562,  4.4375,  5.1250,  5.0000,  8.1250],
        [ 0.0000,  1.3438,  1.8281,  0.3809, -0.4961,  1.0547,  3.0312,  3.5625,  1.8125,  2.7031,  0.7344,  4.0000,  4.8750,  3.0938,  7.4062],
        [ 0.0000,  1.5938,  1.5469,  0.1641,  0.8047,  1.8047,  3.6250,  3.2344,  3.0312,  3.1406,  3.6719,  4.2500,  4.6875,  4.5938,  6.7500],
        [ 0.0000, -0.2441, -0.3789, -1.9922, -0.8086,  0.1670,  2.1875,  1.6406,  1.0781,  1.3750,  1.7344,  2.0781,  2.5469,  2.5469,  5.9688],
        [ 0.0000,  1.0312,  0.5625, -0.6289,  0.4082,  0.9766,  2.5312,  2.9375,  2.6562,  2.3125,  3.3594,  3.3438,  4.2500,  4.0938,  5.5312],
        [ 0.0000, -0.7031, -0.0771, -1.9609, -1.9922, -0.6562,  1.6875,  1.7109,  0.3516,  0.8516,  0.0430,  2.3125,  3.0156,  1.7656,  6.0625],
        [ 0.0000,  0.1245, -0.0796, -1.4453, -0.6875, -0.4043,  1.2578,  1.3594,  1.0000,  0.9492,  1.8281,  2.0312,  2.4844,  2.3281,  4.1250],
        [ 0.0000,  0.4141,  0.2383, -1.5312, -0.6875,  0.1875,  1.7266,  1.7500,  1.4609,  1.4531,  2.1719,  2.6250,  2.9219,  2.9531,  5.3438],
        [ 0.0000, -1.0781, -1.3047, -3.1875, -2.0000, -1.0391,  1.0391,  0.5781, -0.1006,  0.2617,  0.6719,  1.0703,  1.5000,  1.3828,  5.0312],
        [ 0.0000, -0.0874, -0.6367, -1.8828, -1.0859, -0.5820,  1.1406,  1.0391,  1.1016,  0.8516,  1.5469,  2.5625,  2.7188,  2.5938,  4.0938]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4751],
        [0.1746],
        [0.1612],
        [0.2508],
        [0.2023],
        [0.3070],
        [0.0967],
        [0.1567],
        [0.0795],
        [0.1861],
        [0.0672],
        [0.0673],
        [0.1035],
        [0.0851]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0593,     0.9414,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0056,     0.9414,     0.0532,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0157,     0.4023,     0.0317,     0.5508,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1230,     0.5312,     0.0996,     0.0199,     0.2256,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0072,     0.1523,     0.0332,     0.0087,     0.1021,     0.6953,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0109,     0.1855,     0.3750,     0.0522,     0.0266,     0.2441,     0.1055,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0044,     0.0072,     0.0027,     0.0023,     0.2793,     0.0095,     0.0028,     0.6914,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0182,     0.0074,     0.0047,     0.0005,     0.0079,     0.0026,     0.0020,     0.9023,     0.0557,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0403,     0.0679,     0.0126,     0.0306,     0.0053,     0.0035,     0.0869,     0.4707,     0.0320,     0.2490,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0723,     0.0014,     0.0041,     0.0002,     0.0019,     0.0005,     0.0013,     0.2695,     0.0119,     0.6250,     0.0125,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0172,     0.0898,     0.0299,     0.1611,     0.0008,     0.0016,     0.6328,     0.0188,     0.0017,     0.0103,     0.0347,     0.0032,     0.0000,     0.0000,     0.0000],
        [    0.0008,     0.0003,     0.0001,     0.0001,     0.0269,     0.0001,     0.0003,     0.0029,     0.9258,     0.0058,     0.0159,     0.0017,     0.0194,     0.0000,     0.0000],
        [    0.0058,     0.0012,     0.0004,     0.0000,     0.0015,     0.0002,     0.0004,     0.0859,     0.0137,     0.2539,     0.0077,     0.0049,     0.5859,     0.0386,     0.0000],
        [    0.0593,     0.1807,     0.0344,     0.0713,     0.0006,     0.0008,     0.5977,     0.0027,     0.0001,     0.0019,     0.0069,     0.0015,     0.0026,     0.0001,     0.0403]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0243, -0.0382,  0.0092,  ...,  0.0318,  0.0420, -0.0189],
        [ 0.0073, -0.0532, -0.0119,  ...,  0.0106,  0.0104, -0.0073],
        [-0.0250, -0.0016, -0.0222,  ...,  0.0286, -0.0374, -0.0130],
        ...,
        [ 0.0359,  0.0116, -0.0292,  ..., -0.0076, -0.0131,  0.0206],
        [-0.0089,  0.0029,  0.0212,  ...,  0.0481, -0.0279,  0.0161],
        [-0.0358,  0.0468, -0.0471,  ..., -0.0006,  0.0243,  0.0339]], device='cuda:0', requires_grad=True)
K: tensor([ 0.2871, -0.8164, -1.1953,  0.4414, -1.1562, -0.1504,  0.5781, -0.3867,  0.1250, -2.5781, -1.2656, -0.9805,  0.3359, -0.6914, -1.0938,  0.6914,  1.0469,  1.0781, -3.2031,  0.8711,  1.1484, -1.1641, -2.1719,  1.6328,  0.9570,  0.5625, -1.1094,  1.2734, -0.5977, -2.8750, -0.6914,  1.4062,
        -0.4707,  2.2344,  1.3047,  0.8203,  1.2266, -1.2031, -0.4785, -0.9727, -0.6953, -1.4766, -1.3828, -0.5039,  0.0603, -1.4062, -0.4648,  0.6836, -0.7344, -1.9688,  0.9258,  1.1719, -0.6094, -0.4961,  0.6250, -0.0635,  0.1641, -2.9375, -1.2891, -0.2910,  0.2812, -0.5938,  0.7070, -1.3594],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0112, -0.0079, -0.0079,  ..., -0.0245, -0.0266, -0.0078],
        [ 0.0104, -0.0066, -0.0049,  ...,  0.0162, -0.0241,  0.0339],
        [ 0.0125, -0.0139,  0.0027,  ...,  0.0009, -0.0225, -0.0079],
        ...,
        [ 0.0250, -0.0425, -0.0084,  ...,  0.0256,  0.0123,  0.0091],
        [-0.0043,  0.0071,  0.0125,  ...,  0.0069,  0.0181, -0.0159],
        [-0.0087, -0.0134, -0.0090,  ...,  0.0279,  0.0015, -0.0332]], device='cuda:0', requires_grad=True)
Q: tensor([-0.7773,  0.6172,  1.1875,  0.8320,  0.0605, -1.2656, -0.7695, -2.3125, -1.0547,  0.9062, -1.3203,  1.3203,  0.3594, -1.3047,  0.0791, -1.8438,  0.0029, -0.1641, -0.3809,  1.5938,  0.7695, -1.1172,  0.6914, -1.0703,  0.1445,  0.9844, -1.7344,  1.9062, -1.8828,  2.1719, -2.5312, -2.1562,
        -1.2344,  0.8242, -1.3047, -1.3906, -0.6875,  0.5625,  1.9844, -1.0078, -0.0292,  1.3125, -0.6289,  2.4375, -0.4766,  1.1797, -1.0781,  1.8125,  0.3965, -1.6172, -1.2109,  2.5312, -1.1406,  0.3965, -0.8281,  0.2676, -1.8359,  0.1436, -0.2188,  0.6875,  0.6094,  0.0479, -0.9727, -0.8398],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      2.7656,      2.0469,      1.6016,      1.4688,      2.1719,      2.6094,      3.1719,      1.7422,      3.1094,      2.5469,      1.3125,      3.3125,      1.9141,      1.0234],
        [     0.0000,      5.1250,      2.2500,      5.1250,     -2.4375,      0.2012,      6.8125,      0.1455,     -5.6250,     -2.5156,      0.2490,     -3.2031,     -0.8711,     -6.5312,     -0.8477],
        [     0.0000,      3.2500,      0.7031,      3.5469,      0.3867,      0.0152,      4.7812,     -0.7344,     -0.4395,     -2.4688,      1.7812,     -1.9141,     -2.0781,     -1.2109,      1.2578],
        [     0.0000,      1.4688,     -0.2129,     -1.8203,      0.6055,      0.6172,     -0.7852,      5.0000,      1.0312,      4.3125,      0.8867,      0.0060,      4.2812,      0.5898,     -2.2188],
        [     0.0000,      3.0625,      1.5391,      0.1875,      2.6562,      4.5625,      2.2031,      5.3438,      2.3594,      4.6250,      2.1250,      2.0312,      4.2500,      1.9609,      0.5117],
        [     0.0000,      2.8281,      3.5312,      1.5625,      0.8906,      3.1094,      2.2656,      5.9688,      1.1484,      4.8750,      1.3672,      2.1875,      5.0625,      0.3984,      2.3125],
        [     0.0000,      0.5000,     -0.4824,     -0.6445,      4.1562,      0.7773,     -0.4375,      5.0625,      6.9062,      4.1250,      2.7812,      1.0703,      4.5312,      6.0625,      1.5391],
        [     0.0000,     -0.9062,     -1.3594,     -3.6719,     -0.8398,     -1.9297,     -2.2188,      3.9062,      1.1172,      3.9688,      0.3711,     -0.2139,      4.1875,      1.2109,     -1.3359],
        [     0.0000,      0.5234,     -1.1641,     -0.2754,     -2.0312,     -2.4375,      0.7695,      2.4531,     -0.2363,      1.8203,      1.5078,     -0.6758,      3.0781,      0.1328,     -0.0322],
        [     0.0000,     -3.9062,     -2.8750,     -5.8438,     -3.6562,     -4.9062,     -4.0312,      1.3125,     -1.8047,      2.1562,     -1.7500,     -0.1089,      2.0156,     -1.1719,     -2.3281],
        [     0.0000,      1.6562,      0.5508,      2.2344,     -3.0156,     -2.3594,      3.6094,      0.0859,     -2.2812,     -0.5195,      0.7031,     -1.6797,      0.6680,     -2.2188,      0.2197],
        [     0.0000,     -0.9414,     -2.6875,     -1.7031,      3.5156,     -1.9609,     -1.0078,      1.2812,      7.0625,      1.9922,      3.0000,      0.7773,      3.2031,      7.6875,      2.2031],
        [     0.0000,     -1.5547,     -2.6719,     -4.9062,     -1.3359,     -3.2031,     -2.6719,      2.7031,      0.8633,      3.7812,      0.2832,     -0.1680,      4.6250,      1.8984,     -1.5938],
        [     0.0000,      1.1094,     -0.5469,      0.1836,     -4.5312,     -4.3438,      2.3125,     -3.0781,     -6.0000,     -3.4531,     -2.1562,     -3.6406,     -3.1406,     -6.1250,     -0.3887]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.1541],
        [0.1282],
        [0.0629],
        [0.1127],
        [0.0836],
        [0.0278],
        [0.0386],
        [0.0245],
        [0.0305],
        [0.0382],
        [0.0310],
        [0.0373],
        [0.0188],
        [0.0575]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.1133 a:0.0801-:0.1602 and:0.0500atoes:0.0752,:0.4883 a:0.0522iced:0.1621)
iced
------
		( a:0.0801-:0.1602 and:0.0500atoes:0.0752,:0.4883 a:0.0522iced:0.1621 with:0.1318)
 with a white-brown-brown-brown-brown-brown-brown
@ 5050 train 4.6643 , allloss: 4.6869, dt: 1673.17ms, fracRes: 0.6008, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7430, norm(y): 1.0088, norm:1.4158, tok/sec: 78337.53, flops:68.60, batch-reuse:1
@ 5051 train 4.8271 , allloss: 4.8508, dt: 1270.59ms, fracRes: 0.6024, norm(attn): 0.1240, norm(output): 0.2305, norm(x): 0.7430, norm(y): 1.0088, norm:1.2014, tok/sec: 103158.54, flops:90.33, batch-reuse:1
@ 5052 train 4.7663 , allloss: 4.7897, dt: 1262.62ms, fracRes: 0.6014, norm(attn): 0.1250, norm(output): 0.2324, norm(x): 0.7438, norm(y): 1.0088, norm:1.4253, tok/sec: 103809.17, flops:90.90, batch-reuse:1
@ 5053 train 4.7922 , allloss: 4.8152, dt: 1261.40ms, fracRes: 0.6006, norm(attn): 0.1270, norm(output): 0.2324, norm(x): 0.7459, norm(y): 1.0088, norm:1.3239, tok/sec: 103910.08, flops:90.99, batch-reuse:1
@ 5054 train 4.7765 , allloss: 4.7989, dt: 1269.16ms, fracRes: 0.6005, norm(attn): 0.1260, norm(output): 0.2334, norm(x): 0.7443, norm(y): 1.0088, norm:1.4176, tok/sec: 103274.55, flops:90.44, batch-reuse:1
@ 5055 train 4.6734 , allloss: 4.6962, dt: 1274.67ms, fracRes: 0.6007, norm(attn): 0.1250, norm(output): 0.2334, norm(x): 0.7450, norm(y): 1.0089, norm:1.3643, tok/sec: 102827.87, flops:90.04, batch-reuse:1
@ 5056 train 4.7004 , allloss: 4.7236, dt: 1260.24ms, fracRes: 0.6005, norm(attn): 0.1270, norm(output): 0.2334, norm(x): 0.7423, norm(y): 1.0087, norm:1.3330, tok/sec: 104005.60, flops:91.08, batch-reuse:1
@ 5057 train 4.7560 , allloss: 4.7793, dt: 1291.57ms, fracRes: 0.6012, norm(attn): 0.1260, norm(output): 0.2334, norm(x): 0.7436, norm(y): 1.0088, norm:1.4668, tok/sec: 101482.32, flops:88.87, batch-reuse:1
@ 5058 train 4.8155 , allloss: 4.8377, dt: 1286.73ms, fracRes: 0.6015, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7438, norm(y): 1.0088, norm:1.4436, tok/sec: 101864.20, flops:89.20, batch-reuse:1
@ 5059 train 4.7246 , allloss: 4.7470, dt: 1270.41ms, fracRes: 0.6006, norm(attn): 0.1279, norm(output): 0.2324, norm(x): 0.7424, norm(y): 1.0088, norm:1.3695, tok/sec: 103173.37, flops:90.35, batch-reuse:1
@ 5060 train 4.6739 , allloss: 4.6955, dt: 1293.49ms, fracRes: 0.6002, norm(attn): 0.1260, norm(output): 0.2334, norm(x): 0.7430, norm(y): 1.0088, norm:1.3268, tok/sec: 101332.08, flops:88.74, batch-reuse:1
@ 5061 train 4.6003 , allloss: 4.6229, dt: 1277.78ms, fracRes: 0.6000, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7395, norm(y): 1.0086, norm:1.2590, tok/sec: 102578.04, flops:89.83, batch-reuse:1
@ 5062 train 4.6814 , allloss: 4.7045, dt: 1254.90ms, fracRes: 0.5999, norm(attn): 0.1250, norm(output): 0.2324, norm(x): 0.7408, norm(y): 1.0088, norm:1.3637, tok/sec: 104447.83, flops:91.46, batch-reuse:1
@ 5063 train 4.7213 , allloss: 4.7445, dt: 1275.65ms, fracRes: 0.6004, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7424, norm(y): 1.0088, norm:1.4499, tok/sec: 102749.53, flops:89.98, batch-reuse:1
@ 5064 train 4.7031 , allloss: 4.7258, dt: 1274.94ms, fracRes: 0.6003, norm(attn): 0.1270, norm(output): 0.2344, norm(x): 0.7445, norm(y): 1.0087, norm:1.2547, tok/sec: 102806.33, flops:90.03, batch-reuse:1
@ 5065 train 4.6944 , allloss: 4.7157, dt: 1298.03ms, fracRes: 0.6003, norm(attn): 0.1270, norm(output): 0.2334, norm(x): 0.7437, norm(y): 1.0087, norm:1.3656, tok/sec: 100977.31, flops:88.42, batch-reuse:1
@ 5066 train 4.6860 , allloss: 4.7072, dt: 1273.26ms, fracRes: 0.6005, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7447, norm(y): 1.0089, norm:1.1669, tok/sec: 102942.20, flops:90.15, batch-reuse:1
@ 5067 train 4.7862 , allloss: 4.8080, dt: 1276.38ms, fracRes: 0.6007, norm(attn): 0.1250, norm(output): 0.2324, norm(x): 0.7433, norm(y): 1.0088, norm:1.3654, tok/sec: 102690.49, flops:89.92, batch-reuse:1
@ 5068 train 4.6669 , allloss: 4.6899, dt: 1273.27ms, fracRes: 0.6005, norm(attn): 0.1270, norm(output): 0.2324, norm(x): 0.7431, norm(y): 1.0088, norm:1.4120, tok/sec: 102941.27, flops:90.14, batch-reuse:1
@ 5069 train 4.6645 , allloss: 4.6871, dt: 1275.11ms, fracRes: 0.6000, norm(attn): 0.1260, norm(output): 0.2334, norm(x): 0.7430, norm(y): 1.0088, norm:1.2727, tok/sec: 102792.45, flops:90.01, batch-reuse:1
@ 5070 train 4.7149 , allloss: 4.7380, dt: 1259.54ms, fracRes: 0.5996, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7408, norm(y): 1.0087, norm:1.3574, tok/sec: 104063.13, flops:91.13, batch-reuse:1
@ 5071 train 4.7224 , allloss: 4.7448, dt: 1262.10ms, fracRes: 0.5997, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7387, norm(y): 1.0088, norm:1.3876, tok/sec: 103852.17, flops:90.94, batch-reuse:1
@ 5072 train 4.6829 , allloss: 4.7057, dt: 1263.54ms, fracRes: 0.5998, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7404, norm(y): 1.0087, norm:1.3512, tok/sec: 103733.79, flops:90.84, batch-reuse:1
@ 5073 train 4.6994 , allloss: 4.7217, dt: 1278.90ms, fracRes: 0.6009, norm(attn): 0.1250, norm(output): 0.2314, norm(x): 0.7390, norm(y): 1.0088, norm:1.3289, tok/sec: 102488.22, flops:89.75, batch-reuse:1
@ 5074 train 4.7272 , allloss: 4.7495, dt: 1253.74ms, fracRes: 0.6018, norm(attn): 0.1250, norm(output): 0.2305, norm(x): 0.7391, norm(y): 1.0088, norm:1.3337, tok/sec: 104544.44, flops:91.55, batch-reuse:1
@ 5075 train 4.5821 , allloss: 4.6081, dt: 1284.23ms, fracRes: 0.6017, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7404, norm(y): 1.0089, norm:1.6117, tok/sec: 102062.75, flops:89.37, batch-reuse:1
@ 5076 train 4.7070 , allloss: 4.7296, dt: 1259.06ms, fracRes: 0.6009, norm(attn): 0.1270, norm(output): 0.2314, norm(x): 0.7403, norm(y): 1.0088, norm:1.4458, tok/sec: 104102.79, flops:91.16, batch-reuse:1
@ 5077 train 4.7256 , allloss: 4.7491, dt: 1257.58ms, fracRes: 0.6014, norm(attn): 0.1260, norm(output): 0.2334, norm(x): 0.7419, norm(y): 1.0088, norm:1.6174, tok/sec: 104225.36, flops:91.27, batch-reuse:1
@ 5078 train 4.7187 , allloss: 4.7409, dt: 1268.29ms, fracRes: 0.6008, norm(attn): 0.1260, norm(output): 0.2334, norm(x): 0.7435, norm(y): 1.0089, norm:1.2965, tok/sec: 103345.83, flops:90.50, batch-reuse:1
@ 5079 train 4.6666 , allloss: 4.6885, dt: 1272.24ms, fracRes: 0.6004, norm(attn): 0.1260, norm(output): 0.2334, norm(x): 0.7437, norm(y): 1.0089, norm:1.3294, tok/sec: 103024.38, flops:90.22, batch-reuse:1
@ 5080 train 4.6326 , allloss: 4.6539, dt: 1275.98ms, fracRes: 0.6013, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7432, norm(y): 1.0089, norm:1.2867, tok/sec: 102722.44, flops:89.95, batch-reuse:1
@ 5081 train 4.7214 , allloss: 4.7430, dt: 1274.20ms, fracRes: 0.6015, norm(attn): 0.1250, norm(output): 0.2314, norm(x): 0.7425, norm(y): 1.0088, norm:1.3750, tok/sec: 102866.25, flops:90.08, batch-reuse:1
@ 5082 train 4.5847 , allloss: 4.6075, dt: 1274.43ms, fracRes: 0.6012, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7413, norm(y): 1.0089, norm:1.3898, tok/sec: 102847.95, flops:90.06, batch-reuse:1
@ 5083 train 4.7258 , allloss: 4.7497, dt: 1296.61ms, fracRes: 0.6005, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7380, norm(y): 1.0087, norm:1.6859, tok/sec: 101087.97, flops:88.52, batch-reuse:1
@ 5084 train 4.6261 , allloss: 4.6486, dt: 1253.38ms, fracRes: 0.6003, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7382, norm(y): 1.0088, norm:1.5541, tok/sec: 104574.76, flops:91.57, batch-reuse:1
@ 5085 train 4.6985 , allloss: 4.7214, dt: 1258.20ms, fracRes: 0.6007, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7390, norm(y): 1.0088, norm:1.4567, tok/sec: 104174.14, flops:91.22, batch-reuse:1
@ 5086 train 4.8079 , allloss: 4.8297, dt: 1253.59ms, fracRes: 0.6006, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7392, norm(y): 1.0089, norm:1.3092, tok/sec: 104557.18, flops:91.56, batch-reuse:1
@ 5087 train 4.7474 , allloss: 4.7697, dt: 1284.84ms, fracRes: 0.6004, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7401, norm(y): 1.0088, norm:1.3842, tok/sec: 102014.12, flops:89.33, batch-reuse:1
@ 5088 train 4.6800 , allloss: 4.7025, dt: 1295.49ms, fracRes: 0.6001, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7402, norm(y): 1.0089, norm:1.4161, tok/sec: 101175.56, flops:88.60, batch-reuse:1
@ 5089 train 4.6259 , allloss: 4.6504, dt: 1265.39ms, fracRes: 0.6008, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7408, norm(y): 1.0089, norm:1.4291, tok/sec: 103582.44, flops:90.71, batch-reuse:1
@ 5090 train 4.7036 , allloss: 4.7251, dt: 1273.15ms, fracRes: 0.6002, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7397, norm(y): 1.0088, norm:1.3932, tok/sec: 102950.95, flops:90.15, batch-reuse:1
@ 5091 train 4.6625 , allloss: 4.6846, dt: 1264.60ms, fracRes: 0.6011, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7415, norm(y): 1.0089, norm:1.4242, tok/sec: 103646.61, flops:90.76, batch-reuse:1
@ 5092 train 4.7161 , allloss: 4.7375, dt: 1284.80ms, fracRes: 0.5999, norm(attn): 0.1270, norm(output): 0.2334, norm(x): 0.7406, norm(y): 1.0088, norm:1.4377, tok/sec: 102017.32, flops:89.34, batch-reuse:1
@ 5093 train 4.6516 , allloss: 4.6734, dt: 1272.84ms, fracRes: 0.5995, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7376, norm(y): 1.0087, norm:1.5709, tok/sec: 102976.41, flops:90.17, batch-reuse:1
@ 5094 train 4.7163 , allloss: 4.7382, dt: 1271.32ms, fracRes: 0.6004, norm(attn): 0.1250, norm(output): 0.2314, norm(x): 0.7379, norm(y): 1.0088, norm:1.3132, tok/sec: 103098.92, flops:90.28, batch-reuse:1
@ 5095 train 4.7156 , allloss: 4.7380, dt: 1263.69ms, fracRes: 0.6006, norm(attn): 0.1250, norm(output): 0.2314, norm(x): 0.7370, norm(y): 1.0089, norm:1.4280, tok/sec: 103721.46, flops:90.83, batch-reuse:1
@ 5096 train 4.6301 , allloss: 4.6526, dt: 1270.29ms, fracRes: 0.6004, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7383, norm(y): 1.0088, norm:1.3263, tok/sec: 103182.92, flops:90.36, batch-reuse:1
@ 5097 train 4.6370 , allloss: 4.6593, dt: 1254.10ms, fracRes: 0.6009, norm(attn): 0.1250, norm(output): 0.2305, norm(x): 0.7389, norm(y): 1.0089, norm:1.2441, tok/sec: 104514.90, flops:91.52, batch-reuse:1
@ 5098 train 4.6976 , allloss: 4.7193, dt: 1272.46ms, fracRes: 0.6009, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7385, norm(y): 1.0089, norm:1.3715, tok/sec: 103006.81, flops:90.20, batch-reuse:1
@ 5099 train 4.6144 , allloss: 4.6361, dt: 1303.97ms, fracRes: 0.6009, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7387, norm(y): 1.0088, norm:1.4193, tok/sec: 100517.33, flops:88.02, batch-reuse:1
@ 5100 train 4.7358 , allloss: 4.7591, dt: 1303.30ms, fracRes: 0.6022, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7398, norm(y): 1.0088, norm:1.5523, tok/sec: 100569.44, flops:88.07, batch-reuse:1
@ 5101 train 4.6192 , allloss: 4.6410, dt: 1285.46ms, fracRes: 0.6004, norm(attn): 0.1260, norm(output): 0.2334, norm(x): 0.7385, norm(y): 1.0089, norm:1.3217, tok/sec: 101964.79, flops:89.29, batch-reuse:1
@ 5102 train 4.6643 , allloss: 4.6874, dt: 1295.06ms, fracRes: 0.5997, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7375, norm(y): 1.0089, norm:1.3462, tok/sec: 101209.20, flops:88.63, batch-reuse:1
@ 5103 train 4.7092 , allloss: 4.7309, dt: 1274.76ms, fracRes: 0.5999, norm(attn): 0.1279, norm(output): 0.2324, norm(x): 0.7336, norm(y): 1.0086, norm:1.2746, tok/sec: 102820.79, flops:90.04, batch-reuse:1
@ 5104 train 4.6980 , allloss: 4.7198, dt: 1292.29ms, fracRes: 0.6003, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7358, norm(y): 1.0087, norm:1.1738, tok/sec: 101426.10, flops:88.82, batch-reuse:1
@ 5105 train 4.6204 , allloss: 4.6425, dt: 1246.64ms, fracRes: 0.6003, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7359, norm(y): 1.0089, norm:1.4652, tok/sec: 105140.08, flops:92.07, batch-reuse:1
@ 5106 train 4.6481 , allloss: 4.6704, dt: 1263.16ms, fracRes: 0.6001, norm(attn): 0.1270, norm(output): 0.2324, norm(x): 0.7354, norm(y): 1.0087, norm:1.2914, tok/sec: 103764.77, flops:90.87, batch-reuse:1
@ 5107 train 4.6479 , allloss: 4.6713, dt: 1284.32ms, fracRes: 0.5992, norm(attn): 0.1279, norm(output): 0.2334, norm(x): 0.7349, norm(y): 1.0087, norm:1.3750, tok/sec: 102055.31, flops:89.37, batch-reuse:1
@ 5108 train 4.5980 , allloss: 4.6221, dt: 1320.23ms, fracRes: 0.5998, norm(attn): 0.1260, norm(output): 0.2334, norm(x): 0.7332, norm(y): 1.0088, norm:1.3025, tok/sec: 99279.33, flops:86.94, batch-reuse:1
@ 5109 train 4.5874 , allloss: 4.6094, dt: 1277.10ms, fracRes: 0.6004, norm(attn): 0.1250, norm(output): 0.2295, norm(x): 0.7335, norm(y): 1.0089, norm:1.4933, tok/sec: 102632.81, flops:89.87, batch-reuse:1
@ 5110 train 4.6310 , allloss: 4.6543, dt: 1271.15ms, fracRes: 0.6004, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7349, norm(y): 1.0088, norm:1.8190, tok/sec: 103113.25, flops:90.29, batch-reuse:1
@ 5111 train 4.5689 , allloss: 4.5901, dt: 1267.66ms, fracRes: 0.6001, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7343, norm(y): 1.0088, norm:1.5210, tok/sec: 103396.93, flops:90.54, batch-reuse:1
@ 5112 train 4.5798 , allloss: 4.6027, dt: 1256.51ms, fracRes: 0.6005, norm(attn): 0.1270, norm(output): 0.2324, norm(x): 0.7358, norm(y): 1.0088, norm:1.4638, tok/sec: 104314.49, flops:91.35, batch-reuse:1
@ 5113 train 4.5932 , allloss: 4.6155, dt: 1264.93ms, fracRes: 0.6008, norm(attn): 0.1250, norm(output): 0.2314, norm(x): 0.7375, norm(y): 1.0088, norm:1.6190, tok/sec: 103619.69, flops:90.74, batch-reuse:1
@ 5114 train 4.5503 , allloss: 4.5730, dt: 1277.63ms, fracRes: 0.6006, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7372, norm(y): 1.0089, norm:1.4980, tok/sec: 102590.21, flops:89.84, batch-reuse:1
@ 5115 train 4.5939 , allloss: 4.6153, dt: 1278.61ms, fracRes: 0.6003, norm(attn): 0.1260, norm(output): 0.2334, norm(x): 0.7359, norm(y): 1.0089, norm:1.3617, tok/sec: 102511.34, flops:89.77, batch-reuse:1
@ 5116 train 4.5696 , allloss: 4.5918, dt: 1289.55ms, fracRes: 0.6007, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7365, norm(y): 1.0089, norm:1.5973, tok/sec: 101641.67, flops:89.01, batch-reuse:1
@ 5117 train 4.6500 , allloss: 4.6723, dt: 1257.53ms, fracRes: 0.6012, norm(attn): 0.1250, norm(output): 0.2285, norm(x): 0.7367, norm(y): 1.0089, norm:1.5682, tok/sec: 104230.06, flops:91.27, batch-reuse:1
@ 5118 train 4.5767 , allloss: 4.5990, dt: 1265.38ms, fracRes: 0.6010, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7380, norm(y): 1.0089, norm:1.3599, tok/sec: 103583.39, flops:90.71, batch-reuse:1
@ 5119 train 4.5847 , allloss: 4.6059, dt: 1269.97ms, fracRes: 0.6005, norm(attn): 0.1250, norm(output): 0.2314, norm(x): 0.7381, norm(y): 1.0090, norm:1.5090, tok/sec: 103208.84, flops:90.38, batch-reuse:1
@ 5120 train 4.6093 , allloss: 4.6315, dt: 1284.39ms, fracRes: 0.6000, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7363, norm(y): 1.0090, norm:1.7426, tok/sec: 102049.81, flops:89.36, batch-reuse:1
@ 5121 train 4.6046 , allloss: 4.6277, dt: 1286.96ms, fracRes: 0.6004, norm(attn): 0.1250, norm(output): 0.2324, norm(x): 0.7353, norm(y): 1.0090, norm:1.3752, tok/sec: 101846.48, flops:89.19, batch-reuse:1
@ 5122 train 4.5631 , allloss: 4.5864, dt: 1269.56ms, fracRes: 0.6003, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7333, norm(y): 1.0089, norm:1.4877, tok/sec: 103242.20, flops:90.41, batch-reuse:1
@ 5123 train 4.7834 , allloss: 4.8059, dt: 1270.85ms, fracRes: 0.6012, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7363, norm(y): 1.0087, norm:1.4457, tok/sec: 103137.02, flops:90.32, batch-reuse:1
@ 5124 train 4.6236 , allloss: 4.6456, dt: 1273.66ms, fracRes: 0.6014, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7377, norm(y): 1.0088, norm:1.4511, tok/sec: 102909.65, flops:90.12, batch-reuse:1
@ 5125 train 4.5662 , allloss: 4.5874, dt: 1282.32ms, fracRes: 0.6008, norm(attn): 0.1270, norm(output): 0.2324, norm(x): 0.7385, norm(y): 1.0088, norm:1.4269, tok/sec: 102214.35, flops:89.51, batch-reuse:1
@ 5126 train 4.6314 , allloss: 4.6535, dt: 1292.41ms, fracRes: 0.6005, norm(attn): 0.1270, norm(output): 0.2324, norm(x): 0.7364, norm(y): 1.0088, norm:1.5091, tok/sec: 101416.65, flops:88.81, batch-reuse:1
@ 5127 train 4.6013 , allloss: 4.6240, dt: 1283.26ms, fracRes: 0.6006, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7363, norm(y): 1.0088, norm:1.5035, tok/sec: 102139.80, flops:89.44, batch-reuse:1
@ 5128 train 4.6345 , allloss: 4.6562, dt: 1267.32ms, fracRes: 0.6010, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7374, norm(y): 1.0089, norm:1.4186, tok/sec: 103424.56, flops:90.57, batch-reuse:1
@ 5129 train 4.6872 , allloss: 4.7094, dt: 1257.50ms, fracRes: 0.6002, norm(attn): 0.1279, norm(output): 0.2334, norm(x): 0.7353, norm(y): 1.0088, norm:1.4562, tok/sec: 104231.92, flops:91.27, batch-reuse:1
@ 5130 train 4.5880 , allloss: 4.6104, dt: 1259.89ms, fracRes: 0.6007, norm(attn): 0.1250, norm(output): 0.2314, norm(x): 0.7351, norm(y): 1.0089, norm:1.2577, tok/sec: 104034.41, flops:91.10, batch-reuse:1
@ 5131 train 4.5496 , allloss: 4.5719, dt: 1280.35ms, fracRes: 0.6013, norm(attn): 0.1250, norm(output): 0.2305, norm(x): 0.7346, norm(y): 1.0088, norm:1.3756, tok/sec: 102371.99, flops:89.65, batch-reuse:1
@ 5132 train 4.5916 , allloss: 4.6140, dt: 1297.71ms, fracRes: 0.6019, norm(attn): 0.1250, norm(output): 0.2314, norm(x): 0.7366, norm(y): 1.0089, norm:1.4242, tok/sec: 101002.52, flops:88.45, batch-reuse:1
@ 5133 train 4.5931 , allloss: 4.6152, dt: 1324.17ms, fracRes: 0.6013, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7357, norm(y): 1.0088, norm:1.2528, tok/sec: 98984.15, flops:86.68, batch-reuse:1
@ 5134 train 4.6649 , allloss: 4.6877, dt: 1303.37ms, fracRes: 0.5999, norm(attn): 0.1270, norm(output): 0.2324, norm(x): 0.7321, norm(y): 1.0087, norm:1.6112, tok/sec: 100564.09, flops:88.06, batch-reuse:1
@ 5135 train 4.6573 , allloss: 4.6806, dt: 1277.16ms, fracRes: 0.6000, norm(attn): 0.1270, norm(output): 0.2324, norm(x): 0.7340, norm(y): 1.0089, norm:1.7602, tok/sec: 102628.07, flops:89.87, batch-reuse:1
@ 5136 train 4.6160 , allloss: 4.6378, dt: 1293.80ms, fracRes: 0.6000, norm(attn): 0.1250, norm(output): 0.2324, norm(x): 0.7341, norm(y): 1.0089, norm:1.3811, tok/sec: 101308.12, flops:88.71, batch-reuse:1
@ 5137 train 4.5912 , allloss: 4.6133, dt: 1285.98ms, fracRes: 0.6008, norm(attn): 0.1250, norm(output): 0.2314, norm(x): 0.7343, norm(y): 1.0089, norm:1.5258, tok/sec: 101923.90, flops:89.25, batch-reuse:1
@ 5138 train 4.6847 , allloss: 4.7080, dt: 1260.64ms, fracRes: 0.6018, norm(attn): 0.1270, norm(output): 0.2314, norm(x): 0.7336, norm(y): 1.0088, norm:1.3997, tok/sec: 103972.79, flops:91.05, batch-reuse:1
@ 5139 train 4.6663 , allloss: 4.6901, dt: 1283.63ms, fracRes: 0.6016, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7361, norm(y): 1.0087, norm:1.6350, tok/sec: 102110.60, flops:89.42, batch-reuse:1
@ 5140 train 4.7130 , allloss: 4.7350, dt: 1261.24ms, fracRes: 0.6015, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7341, norm(y): 1.0088, norm:1.3942, tok/sec: 103922.95, flops:91.00, batch-reuse:1
@ 5141 train 4.6048 , allloss: 4.6277, dt: 1298.54ms, fracRes: 0.6006, norm(attn): 0.1270, norm(output): 0.2324, norm(x): 0.7339, norm(y): 1.0088, norm:1.4932, tok/sec: 100938.30, flops:88.39, batch-reuse:1
@ 5142 train 4.5588 , allloss: 4.5816, dt: 1292.50ms, fracRes: 0.6002, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7326, norm(y): 1.0088, norm:1.2243, tok/sec: 101409.50, flops:88.80, batch-reuse:1
@ 5143 train 4.5989 , allloss: 4.6216, dt: 1298.99ms, fracRes: 0.5998, norm(attn): 0.1279, norm(output): 0.2314, norm(x): 0.7325, norm(y): 1.0087, norm:1.4300, tok/sec: 100902.80, flops:88.36, batch-reuse:1
@ 5144 train 4.6843 , allloss: 4.7064, dt: 1257.00ms, fracRes: 0.6007, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7349, norm(y): 1.0088, norm:1.3834, tok/sec: 104273.57, flops:91.31, batch-reuse:1
@ 5145 train 4.6421 , allloss: 4.6644, dt: 1295.94ms, fracRes: 0.6010, norm(attn): 0.1250, norm(output): 0.2305, norm(x): 0.7358, norm(y): 1.0088, norm:1.3653, tok/sec: 101140.30, flops:88.57, batch-reuse:1
@ 5146 train 4.5903 , allloss: 4.6131, dt: 1310.05ms, fracRes: 0.6006, norm(attn): 0.1250, norm(output): 0.2314, norm(x): 0.7346, norm(y): 1.0088, norm:1.3463, tok/sec: 100051.51, flops:87.61, batch-reuse:1
@ 5147 train 4.5505 , allloss: 4.5730, dt: 1274.78ms, fracRes: 0.6008, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7371, norm(y): 1.0089, norm:1.4999, tok/sec: 102819.35, flops:90.04, batch-reuse:1
@ 5148 train 4.6489 , allloss: 4.6704, dt: 1271.99ms, fracRes: 0.6006, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7375, norm(y): 1.0088, norm:1.3864, tok/sec: 103044.54, flops:90.23, batch-reuse:1
@ 5149 train 4.5225 , allloss: 4.5449, dt: 1259.53ms, fracRes: 0.6002, norm(attn): 0.1279, norm(output): 0.2324, norm(x): 0.7362, norm(y): 1.0088, norm:1.4555, tok/sec: 104064.52, flops:91.13, batch-reuse:1
@ 5150 train 4.5908 , allloss: 4.6150, dt: 1272.78ms, fracRes: 0.6009, norm(attn): 0.1270, norm(output): 0.2324, norm(x): 0.7349, norm(y): 1.0088, norm:1.1946, tok/sec: 102980.77, flops:90.18, batch-reuse:1
@ 5151 train 4.6362 , allloss: 4.6581, dt: 1256.13ms, fracRes: 0.6012, norm(attn): 0.1250, norm(output): 0.2305, norm(x): 0.7346, norm(y): 1.0090, norm:1.5289, tok/sec: 104345.85, flops:91.37, batch-reuse:1
@ 5152 train 4.5690 , allloss: 4.5904, dt: 1262.36ms, fracRes: 0.6006, norm(attn): 0.1250, norm(output): 0.2314, norm(x): 0.7332, norm(y): 1.0089, norm:1.4012, tok/sec: 103830.58, flops:90.92, batch-reuse:1
@ 5153 train 4.5456 , allloss: 4.5676, dt: 1252.69ms, fracRes: 0.6009, norm(attn): 0.1250, norm(output): 0.2305, norm(x): 0.7341, norm(y): 1.0089, norm:1.5233, tok/sec: 104632.64, flops:91.63, batch-reuse:1
@ 5154 train 4.7974 , allloss: 4.8218, dt: 1275.59ms, fracRes: 0.6009, norm(attn): 0.1270, norm(output): 0.2324, norm(x): 0.7335, norm(y): 1.0087, norm:1.6058, tok/sec: 102754.31, flops:89.98, batch-reuse:1
@ 5155 train 4.5906 , allloss: 4.6136, dt: 1284.71ms, fracRes: 0.6014, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7338, norm(y): 1.0088, norm:1.6197, tok/sec: 102024.62, flops:89.34, batch-reuse:1
@ 5156 train 4.6142 , allloss: 4.6365, dt: 1266.69ms, fracRes: 0.6013, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7369, norm(y): 1.0088, norm:1.4395, tok/sec: 103475.81, flops:90.61, batch-reuse:1
@ 5157 train 4.4855 , allloss: 4.5067, dt: 1271.81ms, fracRes: 0.6005, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7377, norm(y): 1.0089, norm:1.6760, tok/sec: 103059.43, flops:90.25, batch-reuse:1
@ 5158 train 4.6031 , allloss: 4.6255, dt: 1247.88ms, fracRes: 0.6003, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7362, norm(y): 1.0089, norm:1.4021, tok/sec: 105035.66, flops:91.98, batch-reuse:1
@ 5159 train 4.5329 , allloss: 4.5554, dt: 1269.93ms, fracRes: 0.5997, norm(attn): 0.1260, norm(output): 0.2334, norm(x): 0.7347, norm(y): 1.0088, norm:1.4304, tok/sec: 103211.71, flops:90.38, batch-reuse:1
@ 5160 train 4.5392 , allloss: 4.5626, dt: 1257.30ms, fracRes: 0.6014, norm(attn): 0.1260, norm(output): 0.2295, norm(x): 0.7342, norm(y): 1.0089, norm:1.4699, tok/sec: 104248.78, flops:91.29, batch-reuse:1
@ 5161 train 4.5654 , allloss: 4.5884, dt: 1270.08ms, fracRes: 0.6009, norm(attn): 0.1270, norm(output): 0.2305, norm(x): 0.7350, norm(y): 1.0088, norm:1.4133, tok/sec: 103200.10, flops:90.37, batch-reuse:1
@ 5162 train 4.5644 , allloss: 4.5870, dt: 1265.31ms, fracRes: 0.6006, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7360, norm(y): 1.0088, norm:1.2478, tok/sec: 103589.02, flops:90.71, batch-reuse:1
@ 5163 train 4.4676 , allloss: 4.4907, dt: 1269.63ms, fracRes: 0.6011, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7370, norm(y): 1.0090, norm:1.6092, tok/sec: 103236.32, flops:90.40, batch-reuse:1
@ 5164 train 4.5998 , allloss: 4.6232, dt: 1260.05ms, fracRes: 0.6015, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7374, norm(y): 1.0089, norm:1.4694, tok/sec: 104021.26, flops:91.09, batch-reuse:1
@ 5165 train 4.5060 , allloss: 4.5281, dt: 1269.53ms, fracRes: 0.5995, norm(attn): 0.1270, norm(output): 0.2334, norm(x): 0.7351, norm(y): 1.0088, norm:1.6353, tok/sec: 103244.50, flops:90.41, batch-reuse:1
@ 5166 train 4.5079 , allloss: 4.5302, dt: 1298.27ms, fracRes: 0.5997, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7360, norm(y): 1.0089, norm:1.3310, tok/sec: 100959.14, flops:88.41, batch-reuse:1
@ 5167 train 4.5212 , allloss: 4.5435, dt: 1280.45ms, fracRes: 0.6003, norm(attn): 0.1270, norm(output): 0.2324, norm(x): 0.7371, norm(y): 1.0088, norm:1.4029, tok/sec: 102364.06, flops:89.64, batch-reuse:1
@ 5168 train 4.4805 , allloss: 4.5018, dt: 1269.55ms, fracRes: 0.6002, norm(attn): 0.1270, norm(output): 0.2314, norm(x): 0.7364, norm(y): 1.0089, norm:1.4556, tok/sec: 103242.97, flops:90.41, batch-reuse:1
@ 5169 train 4.5576 , allloss: 4.5801, dt: 1274.45ms, fracRes: 0.6007, norm(attn): 0.1279, norm(output): 0.2324, norm(x): 0.7365, norm(y): 1.0088, norm:1.4495, tok/sec: 102845.97, flops:90.06, batch-reuse:1
@ 5170 train 4.5211 , allloss: 4.5434, dt: 1294.30ms, fracRes: 0.6009, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7349, norm(y): 1.0089, norm:1.5246, tok/sec: 101268.65, flops:88.68, batch-reuse:1
@ 5171 train 4.5106 , allloss: 4.5333, dt: 1304.39ms, fracRes: 0.6006, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7326, norm(y): 1.0089, norm:1.3618, tok/sec: 100484.94, flops:87.99, batch-reuse:1
@ 5172 train 4.5511 , allloss: 4.5733, dt: 1274.93ms, fracRes: 0.6004, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7334, norm(y): 1.0088, norm:1.4494, tok/sec: 102807.00, flops:90.03, batch-reuse:1
@ 5173 train 4.5809 , allloss: 4.6039, dt: 1293.84ms, fracRes: 0.6012, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7352, norm(y): 1.0088, norm:1.4260, tok/sec: 101304.56, flops:88.71, batch-reuse:1
@ 5174 train 4.5310 , allloss: 4.5537, dt: 1264.41ms, fracRes: 0.6004, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7345, norm(y): 1.0089, norm:1.4666, tok/sec: 103662.42, flops:90.78, batch-reuse:1
@ 5175 train 4.5440 , allloss: 4.5660, dt: 1272.95ms, fracRes: 0.6002, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7362, norm(y): 1.0088, norm:1.6169, tok/sec: 102967.13, flops:90.17, batch-reuse:1
@ 5176 train 4.5207 , allloss: 4.5426, dt: 1261.86ms, fracRes: 0.5999, norm(attn): 0.1270, norm(output): 0.2334, norm(x): 0.7353, norm(y): 1.0087, norm:1.3386, tok/sec: 103872.27, flops:90.96, batch-reuse:1
@ 5177 train 4.4986 , allloss: 4.5204, dt: 1289.83ms, fracRes: 0.6000, norm(attn): 0.1270, norm(output): 0.2324, norm(x): 0.7335, norm(y): 1.0089, norm:1.3046, tok/sec: 101619.56, flops:88.99, batch-reuse:1
@ 5178 train 4.4795 , allloss: 4.5023, dt: 1257.49ms, fracRes: 0.6005, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7329, norm(y): 1.0089, norm:1.3154, tok/sec: 104232.63, flops:91.28, batch-reuse:1
@ 5179 train 4.5217 , allloss: 4.5445, dt: 1288.05ms, fracRes: 0.6001, norm(attn): 0.1279, norm(output): 0.2324, norm(x): 0.7326, norm(y): 1.0088, norm:1.4130, tok/sec: 101759.97, flops:89.11, batch-reuse:1
@ 5180 train 4.4659 , allloss: 4.4894, dt: 1303.87ms, fracRes: 0.6006, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7308, norm(y): 1.0091, norm:1.5144, tok/sec: 100525.07, flops:88.03, batch-reuse:1
@ 5181 train 4.5237 , allloss: 4.5468, dt: 1270.90ms, fracRes: 0.6014, norm(attn): 0.1260, norm(output): 0.2305, norm(x): 0.7307, norm(y): 1.0090, norm:1.5996, tok/sec: 103132.90, flops:90.31, batch-reuse:1
@ 5182 train 4.5087 , allloss: 4.5313, dt: 1300.06ms, fracRes: 0.6010, norm(attn): 0.1260, norm(output): 0.2305, norm(x): 0.7305, norm(y): 1.0089, norm:1.4629, tok/sec: 100820.24, flops:88.29, batch-reuse:1
@ 5183 train 4.5434 , allloss: 4.5673, dt: 1258.21ms, fracRes: 0.6007, norm(attn): 0.1270, norm(output): 0.2314, norm(x): 0.7287, norm(y): 1.0088, norm:1.6544, tok/sec: 104173.30, flops:91.22, batch-reuse:1
@ 5184 train 4.4875 , allloss: 4.5106, dt: 1250.44ms, fracRes: 0.6003, norm(attn): 0.1279, norm(output): 0.2324, norm(x): 0.7306, norm(y): 1.0088, norm:1.3427, tok/sec: 104820.91, flops:91.79, batch-reuse:1
@ 5185 train 4.4926 , allloss: 4.5147, dt: 1283.46ms, fracRes: 0.5991, norm(attn): 0.1270, norm(output): 0.2324, norm(x): 0.7298, norm(y): 1.0089, norm:1.7020, tok/sec: 102124.12, flops:89.43, batch-reuse:1
@ 5186 train 4.4528 , allloss: 4.4750, dt: 1269.19ms, fracRes: 0.5992, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7319, norm(y): 1.0089, norm:1.4466, tok/sec: 103271.91, flops:90.43, batch-reuse:1
@ 5187 train 4.5189 , allloss: 4.5415, dt: 1286.51ms, fracRes: 0.5997, norm(attn): 0.1270, norm(output): 0.2314, norm(x): 0.7308, norm(y): 1.0089, norm:1.4461, tok/sec: 101881.69, flops:89.22, batch-reuse:1
@ 5188 train 4.4091 , allloss: 4.4310, dt: 1253.43ms, fracRes: 0.6009, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7332, norm(y): 1.0090, norm:1.5761, tok/sec: 104570.79, flops:91.57, batch-reuse:1
@ 5189 train 4.4839 , allloss: 4.5072, dt: 1266.31ms, fracRes: 0.6016, norm(attn): 0.1260, norm(output): 0.2295, norm(x): 0.7321, norm(y): 1.0089, norm:1.4367, tok/sec: 103506.67, flops:90.64, batch-reuse:1
@ 5190 train 4.5165 , allloss: 4.5387, dt: 1257.01ms, fracRes: 0.6011, norm(attn): 0.1260, norm(output): 0.2295, norm(x): 0.7320, norm(y): 1.0090, norm:1.4967, tok/sec: 104272.82, flops:91.31, batch-reuse:1
@ 5191 train 4.6137 , allloss: 4.6356, dt: 1261.78ms, fracRes: 0.5999, norm(attn): 0.1270, norm(output): 0.2314, norm(x): 0.7294, norm(y): 1.0089, norm:1.3567, tok/sec: 103878.74, flops:90.97, batch-reuse:1
@ 5192 train 4.5676 , allloss: 4.5901, dt: 1264.29ms, fracRes: 0.6005, norm(attn): 0.1250, norm(output): 0.2305, norm(x): 0.7290, norm(y): 1.0089, norm:1.4650, tok/sec: 103672.31, flops:90.78, batch-reuse:1
@ 5193 train 4.5243 , allloss: 4.5452, dt: 1255.55ms, fracRes: 0.6006, norm(attn): 0.1250, norm(output): 0.2295, norm(x): 0.7299, norm(y): 1.0090, norm:1.5617, tok/sec: 104393.86, flops:91.42, batch-reuse:1
@ 5194 train 4.5615 , allloss: 4.5836, dt: 1280.81ms, fracRes: 0.6012, norm(attn): 0.1260, norm(output): 0.2305, norm(x): 0.7295, norm(y): 1.0089, norm:1.5914, tok/sec: 102335.38, flops:89.61, batch-reuse:1
@ 5195 train 4.4771 , allloss: 4.4999, dt: 1286.89ms, fracRes: 0.6009, norm(attn): 0.1260, norm(output): 0.2295, norm(x): 0.7288, norm(y): 1.0089, norm:1.4133, tok/sec: 101851.54, flops:89.19, batch-reuse:1
@ 5196 train 4.4590 , allloss: 4.4820, dt: 1267.00ms, fracRes: 0.6014, norm(attn): 0.1260, norm(output): 0.2305, norm(x): 0.7292, norm(y): 1.0089, norm:1.4546, tok/sec: 103450.56, flops:90.59, batch-reuse:1
@ 5197 train 4.5378 , allloss: 4.5607, dt: 1254.56ms, fracRes: 0.6016, norm(attn): 0.1270, norm(output): 0.2305, norm(x): 0.7287, norm(y): 1.0088, norm:1.3929, tok/sec: 104476.31, flops:91.49, batch-reuse:1
@ 5198 train 4.5279 , allloss: 4.5502, dt: 1274.82ms, fracRes: 0.6011, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7306, norm(y): 1.0089, norm:1.3639, tok/sec: 102815.90, flops:90.03, batch-reuse:1
@ 5199 train 4.5698 , allloss: 4.5916, dt: 1266.29ms, fracRes: 0.6006, norm(attn): 0.1270, norm(output): 0.2305, norm(x): 0.7289, norm(y): 1.0088, norm:1.2905, tok/sec: 103508.91, flops:90.64, batch-reuse:1
@ 5200 train 4.4743 , allloss: 4.4986, dt: 1252.01ms, fracRes: 0.6013, norm(attn): 0.1270, norm(output): 0.2305, norm(x): 0.7280, norm(y): 1.0089, norm:1.8930, tok/sec: 104688.89, flops:91.67, batch-reuse:1
@ 5201 train 4.5690 , allloss: 4.5928, dt: 1283.61ms, fracRes: 0.6013, norm(attn): 0.1260, norm(output): 0.2295, norm(x): 0.7256, norm(y): 1.0089, norm:1.5173, tok/sec: 102112.08, flops:89.42, batch-reuse:1
@ 5202 train 4.5656 , allloss: 4.5885, dt: 1314.80ms, fracRes: 0.6010, norm(attn): 0.1250, norm(output): 0.2295, norm(x): 0.7256, norm(y): 1.0088, norm:1.4914, tok/sec: 99689.41, flops:87.30, batch-reuse:1
@ 5203 train 4.6793 , allloss: 4.7019, dt: 1276.09ms, fracRes: 0.6004, norm(attn): 0.1270, norm(output): 0.2285, norm(x): 0.7212, norm(y): 1.0086, norm:1.6824, tok/sec: 102713.61, flops:89.94, batch-reuse:1
@ 5204 train 4.7083 , allloss: 4.7333, dt: 1289.68ms, fracRes: 0.6001, norm(attn): 0.1270, norm(output): 0.2305, norm(x): 0.7268, norm(y): 1.0088, norm:1.5233, tok/sec: 101631.07, flops:89.00, batch-reuse:1
@ 5205 train 4.7231 , allloss: 4.7527, dt: 1273.38ms, fracRes: 0.6026, norm(attn): 0.1270, norm(output): 0.2314, norm(x): 0.7288, norm(y): 1.0087, norm:1.5227, tok/sec: 102932.10, flops:90.14, batch-reuse:1
@ 5206 train 4.6716 , allloss: 4.6938, dt: 1263.01ms, fracRes: 0.6019, norm(attn): 0.1250, norm(output): 0.2305, norm(x): 0.7284, norm(y): 1.0089, norm:1.4552, tok/sec: 103777.64, flops:90.88, batch-reuse:1
@ 5207 train 4.6837 , allloss: 4.7068, dt: 1255.66ms, fracRes: 0.6002, norm(attn): 0.1270, norm(output): 0.2314, norm(x): 0.7271, norm(y): 1.0088, norm:1.4812, tok/sec: 104385.12, flops:91.41, batch-reuse:1
@ 5208 train 4.6647 , allloss: 4.6882, dt: 1269.88ms, fracRes: 0.5995, norm(attn): 0.1279, norm(output): 0.2305, norm(x): 0.7243, norm(y): 1.0088, norm:1.9236, tok/sec: 103216.18, flops:90.38, batch-reuse:1
@ 5209 train 4.7464 , allloss: 4.7694, dt: 1279.72ms, fracRes: 0.5998, norm(attn): 0.1279, norm(output): 0.2305, norm(x): 0.7233, norm(y): 1.0088, norm:1.6587, tok/sec: 102422.38, flops:89.69, batch-reuse:1
@ 5210 train 4.8396 , allloss: 4.8639, dt: 1282.90ms, fracRes: 0.6013, norm(attn): 0.1279, norm(output): 0.2314, norm(x): 0.7260, norm(y): 1.0087, norm:1.6661, tok/sec: 102168.50, flops:89.47, batch-reuse:1
@ 5211 train 4.6667 , allloss: 4.6897, dt: 1290.53ms, fracRes: 0.6015, norm(attn): 0.1270, norm(output): 0.2324, norm(x): 0.7301, norm(y): 1.0087, norm:1.3774, tok/sec: 101564.59, flops:88.94, batch-reuse:1
@ 5212 train 4.6419 , allloss: 4.6651, dt: 1286.20ms, fracRes: 0.6015, norm(attn): 0.1270, norm(output): 0.2324, norm(x): 0.7309, norm(y): 1.0088, norm:1.3775, tok/sec: 101906.18, flops:89.24, batch-reuse:1
@ 5213 train 4.6671 , allloss: 4.6902, dt: 1273.19ms, fracRes: 0.6010, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7300, norm(y): 1.0088, norm:1.5312, tok/sec: 102947.71, flops:90.15, batch-reuse:1
@ 5214 train 4.7102 , allloss: 4.7327, dt: 1260.78ms, fracRes: 0.6015, norm(attn): 0.1260, norm(output): 0.2295, norm(x): 0.7303, norm(y): 1.0089, norm:1.4475, tok/sec: 103960.80, flops:91.04, batch-reuse:1
@ 5215 train 4.7497 , allloss: 4.7714, dt: 1247.82ms, fracRes: 0.6020, norm(attn): 0.1270, norm(output): 0.2305, norm(x): 0.7298, norm(y): 1.0088, norm:1.5215, tok/sec: 105040.84, flops:91.98, batch-reuse:1
@ 5216 train 4.6229 , allloss: 4.6457, dt: 1265.63ms, fracRes: 0.6017, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7300, norm(y): 1.0088, norm:1.4574, tok/sec: 103562.36, flops:90.69, batch-reuse:1
@ 5217 train 4.6241 , allloss: 4.6470, dt: 1293.42ms, fracRes: 0.6009, norm(attn): 0.1270, norm(output): 0.2314, norm(x): 0.7288, norm(y): 1.0088, norm:1.2661, tok/sec: 101337.53, flops:88.74, batch-reuse:1
@ 5218 train 4.7260 , allloss: 4.7488, dt: 1286.14ms, fracRes: 0.6000, norm(attn): 0.1289, norm(output): 0.2324, norm(x): 0.7289, norm(y): 1.0087, norm:1.3929, tok/sec: 101911.02, flops:89.24, batch-reuse:1
@ 5219 train 4.6207 , allloss: 4.6430, dt: 1264.24ms, fracRes: 0.6012, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7315, norm(y): 1.0088, norm:1.4985, tok/sec: 103676.83, flops:90.79, batch-reuse:1
@ 5220 train 4.7937 , allloss: 4.8159, dt: 1269.95ms, fracRes: 0.6022, norm(attn): 0.1250, norm(output): 0.2305, norm(x): 0.7339, norm(y): 1.0089, norm:1.3606, tok/sec: 103210.21, flops:90.38, batch-reuse:1
@ 5221 train 4.6589 , allloss: 4.6815, dt: 1282.22ms, fracRes: 0.6010, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7326, norm(y): 1.0088, norm:1.7261, tok/sec: 102222.37, flops:89.51, batch-reuse:1
@ 5222 train 4.6526 , allloss: 4.6744, dt: 1289.14ms, fracRes: 0.5999, norm(attn): 0.1279, norm(output): 0.2334, norm(x): 0.7322, norm(y): 1.0087, norm:1.6432, tok/sec: 101674.32, flops:89.03, batch-reuse:1
@ 5223 train 4.7344 , allloss: 4.7569, dt: 1263.05ms, fracRes: 0.6003, norm(attn): 0.1270, norm(output): 0.2334, norm(x): 0.7321, norm(y): 1.0087, norm:1.3024, tok/sec: 103774.47, flops:90.87, batch-reuse:1
@ 5224 train 4.6510 , allloss: 4.6735, dt: 1288.42ms, fracRes: 0.6011, norm(attn): 0.1250, norm(output): 0.2334, norm(x): 0.7321, norm(y): 1.0088, norm:1.2066, tok/sec: 101730.56, flops:89.08, batch-reuse:1
@ 5225 train 4.7755 , allloss: 4.8004, dt: 1262.86ms, fracRes: 0.6021, norm(attn): 0.1270, norm(output): 0.2285, norm(x): 0.7296, norm(y): 1.0088, norm:1.6472, tok/sec: 103789.73, flops:90.89, batch-reuse:1
@ 5226 train 4.6051 , allloss: 4.6320, dt: 1271.88ms, fracRes: 0.6006, norm(attn): 0.1270, norm(output): 0.2314, norm(x): 0.7275, norm(y): 1.0088, norm:1.6737, tok/sec: 103053.85, flops:90.24, batch-reuse:1
@ 5227 train 4.6627 , allloss: 4.6862, dt: 1251.28ms, fracRes: 0.6006, norm(attn): 0.1250, norm(output): 0.2295, norm(x): 0.7268, norm(y): 1.0087, norm:1.9407, tok/sec: 104750.17, flops:91.73, batch-reuse:1
@ 5228 train 4.6645 , allloss: 4.6895, dt: 1258.70ms, fracRes: 0.6009, norm(attn): 0.1260, norm(output): 0.2295, norm(x): 0.7273, norm(y): 1.0088, norm:1.6800, tok/sec: 104132.63, flops:91.19, batch-reuse:1
@ 5229 train 4.6628 , allloss: 4.6870, dt: 1299.17ms, fracRes: 0.6004, norm(attn): 0.1250, norm(output): 0.2305, norm(x): 0.7273, norm(y): 1.0087, norm:1.6814, tok/sec: 100889.03, flops:88.35, batch-reuse:1
@ 5230 train 4.6614 , allloss: 4.6838, dt: 1305.62ms, fracRes: 0.5999, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7283, norm(y): 1.0087, norm:1.6186, tok/sec: 100390.64, flops:87.91, batch-reuse:1
@ 5231 train 4.7115 , allloss: 4.7343, dt: 1311.04ms, fracRes: 0.6005, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7303, norm(y): 1.0087, norm:1.5153, tok/sec: 99975.43, flops:87.55, batch-reuse:1
@ 5232 train 4.7956 , allloss: 4.8194, dt: 1283.00ms, fracRes: 0.6011, norm(attn): 0.1289, norm(output): 0.2314, norm(x): 0.7318, norm(y): 1.0086, norm:1.4488, tok/sec: 102160.43, flops:89.46, batch-reuse:1
@ 5233 train 4.6596 , allloss: 4.6825, dt: 1307.36ms, fracRes: 0.6015, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7344, norm(y): 1.0088, norm:1.4187, tok/sec: 100257.34, flops:87.79, batch-reuse:1
@ 5234 train 4.6556 , allloss: 4.6787, dt: 1300.48ms, fracRes: 0.6013, norm(attn): 0.1260, norm(output): 0.2334, norm(x): 0.7338, norm(y): 1.0088, norm:1.3520, tok/sec: 100787.37, flops:88.26, batch-reuse:1
@ 5235 train 4.6686 , allloss: 4.6916, dt: 1263.27ms, fracRes: 0.6009, norm(attn): 0.1289, norm(output): 0.2324, norm(x): 0.7311, norm(y): 1.0087, norm:1.4364, tok/sec: 103755.88, flops:90.86, batch-reuse:1
@ 5236 train 4.7003 , allloss: 4.7243, dt: 1269.86ms, fracRes: 0.6004, norm(attn): 0.1289, norm(output): 0.2314, norm(x): 0.7290, norm(y): 1.0088, norm:1.6654, tok/sec: 103217.40, flops:90.39, batch-reuse:1
@ 5237 train 4.7405 , allloss: 4.7629, dt: 1305.09ms, fracRes: 0.6006, norm(attn): 0.1279, norm(output): 0.2324, norm(x): 0.7263, norm(y): 1.0088, norm:1.3413, tok/sec: 100431.70, flops:87.95, batch-reuse:1
@ 5238 train 4.7341 , allloss: 4.7573, dt: 1270.02ms, fracRes: 0.6009, norm(attn): 0.1270, norm(output): 0.2324, norm(x): 0.7280, norm(y): 1.0087, norm:1.4750, tok/sec: 103205.04, flops:90.38, batch-reuse:1
@ 5239 train 4.6218 , allloss: 4.6436, dt: 1250.59ms, fracRes: 0.6009, norm(attn): 0.1270, norm(output): 0.2314, norm(x): 0.7296, norm(y): 1.0088, norm:1.3485, tok/sec: 104808.50, flops:91.78, batch-reuse:1
@ 5240 train 4.7374 , allloss: 4.7597, dt: 1256.94ms, fracRes: 0.6012, norm(attn): 0.1279, norm(output): 0.2324, norm(x): 0.7302, norm(y): 1.0087, norm:1.5680, tok/sec: 104278.34, flops:91.32, batch-reuse:1
@ 5241 train 4.6778 , allloss: 4.7007, dt: 1259.83ms, fracRes: 0.6010, norm(attn): 0.1270, norm(output): 0.2324, norm(x): 0.7322, norm(y): 1.0088, norm:1.5055, tok/sec: 104039.59, flops:91.11, batch-reuse:1
@ 5242 train 4.7971 , allloss: 4.8194, dt: 1270.18ms, fracRes: 0.6015, norm(attn): 0.1270, norm(output): 0.2334, norm(x): 0.7326, norm(y): 1.0088, norm:1.5784, tok/sec: 103191.85, flops:90.36, batch-reuse:1
@ 5243 train 4.6815 , allloss: 4.7033, dt: 1263.62ms, fracRes: 0.6009, norm(attn): 0.1270, norm(output): 0.2314, norm(x): 0.7303, norm(y): 1.0088, norm:1.3793, tok/sec: 103727.75, flops:90.83, batch-reuse:1
@ 5244 train 4.6898 , allloss: 4.7135, dt: 1262.10ms, fracRes: 0.6009, norm(attn): 0.1270, norm(output): 0.2314, norm(x): 0.7303, norm(y): 1.0089, norm:1.4902, tok/sec: 103852.68, flops:90.94, batch-reuse:1
@ 5245 train 4.6566 , allloss: 4.6802, dt: 1286.93ms, fracRes: 0.6008, norm(attn): 0.1279, norm(output): 0.2314, norm(x): 0.7302, norm(y): 1.0089, norm:1.7910, tok/sec: 101848.30, flops:89.19, batch-reuse:1
@ 5246 train 4.5630 , allloss: 4.5857, dt: 1260.20ms, fracRes: 0.6015, norm(attn): 0.1260, norm(output): 0.2305, norm(x): 0.7285, norm(y): 1.0089, norm:1.5204, tok/sec: 104009.28, flops:91.08, batch-reuse:1
@ 5247 train 4.6484 , allloss: 4.6721, dt: 1268.30ms, fracRes: 0.6015, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7283, norm(y): 1.0089, norm:1.3943, tok/sec: 103344.46, flops:90.50, batch-reuse:1
@ 5248 train 4.6064 , allloss: 4.6291, dt: 1276.87ms, fracRes: 0.6011, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7302, norm(y): 1.0089, norm:1.6448, tok/sec: 102651.19, flops:89.89, batch-reuse:1
@ 5249 train 4.6474 , allloss: 4.6693, dt: 1260.83ms, fracRes: 0.6001, norm(attn): 0.1270, norm(output): 0.2305, norm(x): 0.7277, norm(y): 1.0088, norm:1.3812, tok/sec: 103957.22, flops:91.03, batch-reuse:1
@ 5250 train 4.6341 , allloss: 4.6566, dt: 1265.99ms, fracRes: 0.5995, norm(attn): 0.1289, norm(output): 0.2324, norm(x): 0.7264, norm(y): 1.0087, norm:1.4122, tok/sec: 103533.28, flops:90.66, batch-reuse:1
@ 5251 train 4.5536 , allloss: 4.5753, dt: 1281.20ms, fracRes: 0.5985, norm(attn): 0.1299, norm(output): 0.2334, norm(x): 0.7256, norm(y): 1.0088, norm:1.3573, tok/sec: 102304.40, flops:89.59, batch-reuse:1
@ 5252 train 4.5980 , allloss: 4.6203, dt: 1258.17ms, fracRes: 0.6000, norm(attn): 0.1270, norm(output): 0.2324, norm(x): 0.7257, norm(y): 1.0088, norm:1.3145, tok/sec: 104176.43, flops:91.23, batch-reuse:1
@ 5253 train 4.7051 , allloss: 4.7269, dt: 1273.29ms, fracRes: 0.6008, norm(attn): 0.1270, norm(output): 0.2324, norm(x): 0.7261, norm(y): 1.0087, norm:1.3342, tok/sec: 102939.42, flops:90.14, batch-reuse:1
@ 5254 train 4.6808 , allloss: 4.7031, dt: 1273.37ms, fracRes: 0.6005, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7290, norm(y): 1.0088, norm:1.4681, tok/sec: 102933.22, flops:90.14, batch-reuse:1
@ 5255 train 4.6439 , allloss: 4.6668, dt: 1270.70ms, fracRes: 0.6016, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7295, norm(y): 1.0088, norm:1.4753, tok/sec: 103149.83, flops:90.33, batch-reuse:1
@ 5256 train 4.5848 , allloss: 4.6091, dt: 1272.56ms, fracRes: 0.6008, norm(attn): 0.1289, norm(output): 0.2314, norm(x): 0.7302, norm(y): 1.0088, norm:1.6460, tok/sec: 102999.06, flops:90.19, batch-reuse:1
@ 5257 train 4.5816 , allloss: 4.6041, dt: 1287.38ms, fracRes: 0.6016, norm(attn): 0.1279, norm(output): 0.2324, norm(x): 0.7289, norm(y): 1.0088, norm:1.3520, tok/sec: 101813.19, flops:89.16, batch-reuse:1
@ 5258 train 4.6743 , allloss: 4.6968, dt: 1253.47ms, fracRes: 0.6011, norm(attn): 0.1279, norm(output): 0.2324, norm(x): 0.7299, norm(y): 1.0088, norm:1.4069, tok/sec: 104567.09, flops:91.57, batch-reuse:1
@ 5259 train 4.6024 , allloss: 4.6248, dt: 1279.62ms, fracRes: 0.6002, norm(attn): 0.1279, norm(output): 0.2334, norm(x): 0.7285, norm(y): 1.0087, norm:1.4051, tok/sec: 102430.43, flops:89.70, batch-reuse:1
@ 5260 train 4.6380 , allloss: 4.6597, dt: 1287.34ms, fracRes: 0.6000, norm(attn): 0.1279, norm(output): 0.2324, norm(x): 0.7292, norm(y): 1.0088, norm:1.2428, tok/sec: 101815.81, flops:89.16, batch-reuse:1
@ 5261 train 4.5696 , allloss: 4.5910, dt: 1260.55ms, fracRes: 0.5999, norm(attn): 0.1270, norm(output): 0.2334, norm(x): 0.7296, norm(y): 1.0088, norm:1.2367, tok/sec: 103980.18, flops:91.05, batch-reuse:1
@ 5262 train 4.6545 , allloss: 4.6766, dt: 1274.90ms, fracRes: 0.6005, norm(attn): 0.1270, norm(output): 0.2324, norm(x): 0.7301, norm(y): 1.0088, norm:1.4285, tok/sec: 102809.79, flops:90.03, batch-reuse:1
@ 5263 train 4.7097 , allloss: 4.7317, dt: 1277.21ms, fracRes: 0.6012, norm(attn): 0.1270, norm(output): 0.2314, norm(x): 0.7277, norm(y): 1.0089, norm:1.4665, tok/sec: 102623.55, flops:89.87, batch-reuse:1
@ 5264 train 4.6311 , allloss: 4.6528, dt: 1266.20ms, fracRes: 0.6008, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7272, norm(y): 1.0088, norm:1.2525, tok/sec: 103515.79, flops:90.65, batch-reuse:1
@ 5265 train 4.6478 , allloss: 4.6703, dt: 1283.23ms, fracRes: 0.6020, norm(attn): 0.1260, norm(output): 0.2305, norm(x): 0.7287, norm(y): 1.0089, norm:1.6166, tok/sec: 102142.30, flops:89.44, batch-reuse:1
@ 5266 train 4.5895 , allloss: 4.6120, dt: 1258.25ms, fracRes: 0.6023, norm(attn): 0.1270, norm(output): 0.2305, norm(x): 0.7284, norm(y): 1.0088, norm:1.2638, tok/sec: 104170.41, flops:91.22, batch-reuse:1
@ 5267 train 4.6519 , allloss: 4.6737, dt: 1266.12ms, fracRes: 0.6013, norm(attn): 0.1289, norm(output): 0.2334, norm(x): 0.7298, norm(y): 1.0087, norm:1.4579, tok/sec: 103522.97, flops:90.65, batch-reuse:1
@ 5268 train 4.6554 , allloss: 4.6765, dt: 1256.68ms, fracRes: 0.6013, norm(attn): 0.1270, norm(output): 0.2334, norm(x): 0.7301, norm(y): 1.0088, norm:1.4766, tok/sec: 104300.16, flops:91.33, batch-reuse:1
@ 5269 train 4.6463 , allloss: 4.6686, dt: 1281.64ms, fracRes: 0.6017, norm(attn): 0.1270, norm(output): 0.2305, norm(x): 0.7279, norm(y): 1.0089, norm:1.5209, tok/sec: 102268.83, flops:89.56, batch-reuse:1
@ 5270 train 4.5852 , allloss: 4.6071, dt: 1275.11ms, fracRes: 0.6011, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7288, norm(y): 1.0088, norm:1.5384, tok/sec: 102792.39, flops:90.01, batch-reuse:1
@ 5271 train 4.7057 , allloss: 4.7278, dt: 1274.43ms, fracRes: 0.6007, norm(attn): 0.1279, norm(output): 0.2324, norm(x): 0.7286, norm(y): 1.0087, norm:1.2749, tok/sec: 102847.74, flops:90.06, batch-reuse:1
@ 5272 train 4.7242 , allloss: 4.7461, dt: 1286.51ms, fracRes: 0.6009, norm(attn): 0.1270, norm(output): 0.2334, norm(x): 0.7294, norm(y): 1.0087, norm:1.2622, tok/sec: 101881.82, flops:89.22, batch-reuse:1
@ 5273 train 4.6198 , allloss: 4.6422, dt: 1275.18ms, fracRes: 0.6007, norm(attn): 0.1270, norm(output): 0.2314, norm(x): 0.7297, norm(y): 1.0089, norm:1.3379, tok/sec: 102786.91, flops:90.01, batch-reuse:1
@ 5274 train 4.6655 , allloss: 4.6871, dt: 1321.91ms, fracRes: 0.6004, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7279, norm(y): 1.0089, norm:1.5337, tok/sec: 99153.13, flops:86.83, batch-reuse:1
@ 5275 train 4.5053 , allloss: 4.5268, dt: 1263.86ms, fracRes: 0.6002, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7282, norm(y): 1.0089, norm:1.4402, tok/sec: 103707.81, flops:90.82, batch-reuse:1
@ 5276 train 4.6068 , allloss: 4.6283, dt: 1280.63ms, fracRes: 0.6001, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7260, norm(y): 1.0088, norm:1.3861, tok/sec: 102349.69, flops:89.63, batch-reuse:1
@ 5277 train 4.6168 , allloss: 4.6393, dt: 1272.43ms, fracRes: 0.6007, norm(attn): 0.1279, norm(output): 0.2324, norm(x): 0.7253, norm(y): 1.0088, norm:1.4351, tok/sec: 103008.90, flops:90.20, batch-reuse:1
@ 5278 train 4.6265 , allloss: 4.6503, dt: 1268.07ms, fracRes: 0.6009, norm(attn): 0.1289, norm(output): 0.2305, norm(x): 0.7244, norm(y): 1.0088, norm:1.2844, tok/sec: 103363.65, flops:90.51, batch-reuse:1
@ 5279 train 4.6183 , allloss: 4.6401, dt: 1278.16ms, fracRes: 0.6003, norm(attn): 0.1289, norm(output): 0.2324, norm(x): 0.7265, norm(y): 1.0087, norm:1.3911, tok/sec: 102547.08, flops:89.80, batch-reuse:1
@ 5280 train 4.7054 , allloss: 4.7269, dt: 1282.43ms, fracRes: 0.6005, norm(attn): 0.1260, norm(output): 0.2334, norm(x): 0.7268, norm(y): 1.0086, norm:1.2249, tok/sec: 102205.95, flops:89.50, batch-reuse:1
@ 5281 train 4.5886 , allloss: 4.6100, dt: 1271.44ms, fracRes: 0.5996, norm(attn): 0.1270, norm(output): 0.2314, norm(x): 0.7265, norm(y): 1.0088, norm:1.4117, tok/sec: 103089.70, flops:90.27, batch-reuse:1
@ 5282 train 4.6450 , allloss: 4.6680, dt: 1270.38ms, fracRes: 0.5998, norm(attn): 0.1279, norm(output): 0.2314, norm(x): 0.7247, norm(y): 1.0087, norm:1.4919, tok/sec: 103175.74, flops:90.35, batch-reuse:1
@ 5283 train 4.6274 , allloss: 4.6505, dt: 1276.52ms, fracRes: 0.5995, norm(attn): 0.1279, norm(output): 0.2324, norm(x): 0.7242, norm(y): 1.0088, norm:1.4291, tok/sec: 102679.16, flops:89.91, batch-reuse:1
@ 5284 train 4.5893 , allloss: 4.6116, dt: 1263.59ms, fracRes: 0.6006, norm(attn): 0.1270, norm(output): 0.2314, norm(x): 0.7238, norm(y): 1.0089, norm:1.5659, tok/sec: 103730.12, flops:90.83, batch-reuse:1
@ 5285 train 4.6105 , allloss: 4.6332, dt: 1272.17ms, fracRes: 0.6018, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7254, norm(y): 1.0089, norm:1.4049, tok/sec: 103030.56, flops:90.22, batch-reuse:1
@ 5286 train 4.4998 , allloss: 4.5213, dt: 1264.16ms, fracRes: 0.6025, norm(attn): 0.1270, norm(output): 0.2314, norm(x): 0.7260, norm(y): 1.0089, norm:1.5094, tok/sec: 103683.44, flops:90.79, batch-reuse:1
@ 5287 train 4.6565 , allloss: 4.6778, dt: 1263.22ms, fracRes: 0.6023, norm(attn): 0.1270, norm(output): 0.2305, norm(x): 0.7249, norm(y): 1.0089, norm:1.7998, tok/sec: 103759.87, flops:90.86, batch-reuse:1
@ 5288 train 4.4577 , allloss: 4.4842, dt: 1267.84ms, fracRes: 0.6010, norm(attn): 0.1289, norm(output): 0.2314, norm(x): 0.7252, norm(y): 1.0089, norm:1.7986, tok/sec: 103382.33, flops:90.53, batch-reuse:1
@ 5289 train 4.5183 , allloss: 4.5400, dt: 1296.51ms, fracRes: 0.6010, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7249, norm(y): 1.0088, norm:1.3800, tok/sec: 101096.02, flops:88.53, batch-reuse:1
@ 5290 train 4.6785 , allloss: 4.6998, dt: 1292.37ms, fracRes: 0.6008, norm(attn): 0.1270, norm(output): 0.2324, norm(x): 0.7235, norm(y): 1.0087, norm:1.5198, tok/sec: 101420.11, flops:88.81, batch-reuse:1
@ 5291 train 4.5972 , allloss: 4.6198, dt: 1288.69ms, fracRes: 0.6006, norm(attn): 0.1279, norm(output): 0.2314, norm(x): 0.7234, norm(y): 1.0088, norm:1.4995, tok/sec: 101709.50, flops:89.07, batch-reuse:1
@ 5292 train 4.5569 , allloss: 4.5791, dt: 1278.52ms, fracRes: 0.6000, norm(attn): 0.1279, norm(output): 0.2324, norm(x): 0.7240, norm(y): 1.0088, norm:1.3697, tok/sec: 102518.45, flops:89.77, batch-reuse:1
@ 5293 train 4.6168 , allloss: 4.6394, dt: 1271.75ms, fracRes: 0.6006, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7258, norm(y): 1.0087, norm:1.4528, tok/sec: 103064.13, flops:90.25, batch-reuse:1
@ 5294 train 4.6071 , allloss: 4.6295, dt: 1284.30ms, fracRes: 0.6016, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7272, norm(y): 1.0089, norm:1.6346, tok/sec: 102057.05, flops:89.37, batch-reuse:1
@ 5295 train 4.6220 , allloss: 4.6440, dt: 1259.48ms, fracRes: 0.6013, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7247, norm(y): 1.0088, norm:1.7729, tok/sec: 104068.01, flops:91.13, batch-reuse:1
@ 5296 train 4.5352 , allloss: 4.5573, dt: 1269.46ms, fracRes: 0.6016, norm(attn): 0.1270, norm(output): 0.2314, norm(x): 0.7284, norm(y): 1.0089, norm:1.5337, tok/sec: 103250.28, flops:90.41, batch-reuse:1
@ 5297 train 4.6149 , allloss: 4.6360, dt: 1246.53ms, fracRes: 0.6007, norm(attn): 0.1270, norm(output): 0.2314, norm(x): 0.7272, norm(y): 1.0088, norm:1.3708, tok/sec: 105149.35, flops:92.08, batch-reuse:1
@ 5298 train 4.5895 , allloss: 4.6115, dt: 1295.12ms, fracRes: 0.6006, norm(attn): 0.1260, norm(output): 0.2334, norm(x): 0.7288, norm(y): 1.0088, norm:1.8430, tok/sec: 101204.50, flops:88.62, batch-reuse:1
@ 5299 train 4.5447 , allloss: 4.5709, dt: 1263.69ms, fracRes: 0.5998, norm(attn): 0.1279, norm(output): 0.2324, norm(x): 0.7258, norm(y): 1.0086, norm:1.7322, tok/sec: 103721.48, flops:90.83, batch-reuse:1
@ 5300 train 4.5503 , allloss: 4.5729, dt: 1309.61ms, fracRes: 0.6002, norm(attn): 0.1279, norm(output): 0.2314, norm(x): 0.7248, norm(y): 1.0088, norm:1.8494, tok/sec: 100084.99, flops:87.64, batch-reuse:1
@ 5301 train 4.5711 , allloss: 4.5935, dt: 1264.69ms, fracRes: 0.6015, norm(attn): 0.1270, norm(output): 0.2324, norm(x): 0.7279, norm(y): 1.0088, norm:1.5765, tok/sec: 103639.71, flops:90.76, batch-reuse:1
@ 5302 train 4.5732 , allloss: 4.5951, dt: 1267.15ms, fracRes: 0.6022, norm(attn): 0.1270, norm(output): 0.2324, norm(x): 0.7312, norm(y): 1.0088, norm:1.2905, tok/sec: 103438.59, flops:90.58, batch-reuse:1
@ 5303 train 4.5936 , allloss: 4.6150, dt: 1273.88ms, fracRes: 0.6015, norm(attn): 0.1270, norm(output): 0.2324, norm(x): 0.7329, norm(y): 1.0088, norm:1.6068, tok/sec: 102891.62, flops:90.10, batch-reuse:1
@ 5304 train 4.5713 , allloss: 4.5925, dt: 1307.81ms, fracRes: 0.6009, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7305, norm(y): 1.0088, norm:1.3806, tok/sec: 100222.34, flops:87.76, batch-reuse:1
@ 5305 train 4.5871 , allloss: 4.6085, dt: 1308.26ms, fracRes: 0.6006, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7296, norm(y): 1.0089, norm:1.5307, tok/sec: 100187.98, flops:87.73, batch-reuse:1
@ 5306 train 4.5587 , allloss: 4.5804, dt: 1262.98ms, fracRes: 0.6010, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7298, norm(y): 1.0089, norm:1.2308, tok/sec: 103780.11, flops:90.88, batch-reuse:1
@ 5307 train 4.4522 , allloss: 4.4737, dt: 1271.84ms, fracRes: 0.6013, norm(attn): 0.1270, norm(output): 0.2324, norm(x): 0.7298, norm(y): 1.0090, norm:1.4307, tok/sec: 103057.19, flops:90.25, batch-reuse:1
@ 5308 train 4.6528 , allloss: 4.6745, dt: 1268.25ms, fracRes: 0.6011, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7297, norm(y): 1.0090, norm:1.3807, tok/sec: 103348.71, flops:90.50, batch-reuse:1
@ 5309 train 4.5572 , allloss: 4.5807, dt: 1276.01ms, fracRes: 0.6005, norm(attn): 0.1270, norm(output): 0.2334, norm(x): 0.7280, norm(y): 1.0089, norm:1.3189, tok/sec: 102720.50, flops:89.95, batch-reuse:1
@ 5310 train 4.5840 , allloss: 4.6057, dt: 1274.81ms, fracRes: 0.6009, norm(attn): 0.1270, norm(output): 0.2314, norm(x): 0.7262, norm(y): 1.0088, norm:1.3032, tok/sec: 102817.11, flops:90.04, batch-reuse:1
@ 5311 train 4.5446 , allloss: 4.5675, dt: 1267.58ms, fracRes: 0.6012, norm(attn): 0.1270, norm(output): 0.2314, norm(x): 0.7247, norm(y): 1.0087, norm:1.1963, tok/sec: 103403.14, flops:90.55, batch-reuse:1
@ 5312 train 4.4759 , allloss: 4.4982, dt: 1285.77ms, fracRes: 0.6008, norm(attn): 0.1270, norm(output): 0.2305, norm(x): 0.7244, norm(y): 1.0090, norm:1.2368, tok/sec: 101940.57, flops:89.27, batch-reuse:1
@ 5313 train 4.6239 , allloss: 4.6467, dt: 1277.53ms, fracRes: 0.6002, norm(attn): 0.1279, norm(output): 0.2324, norm(x): 0.7258, norm(y): 1.0089, norm:1.7893, tok/sec: 102597.91, flops:89.84, batch-reuse:1
@ 5314 train 4.6122 , allloss: 4.6337, dt: 1282.64ms, fracRes: 0.6001, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7258, norm(y): 1.0088, norm:1.3867, tok/sec: 102189.54, flops:89.49, batch-reuse:1
@ 5315 train 4.5798 , allloss: 4.6007, dt: 1249.65ms, fracRes: 0.5997, norm(attn): 0.1270, norm(output): 0.2314, norm(x): 0.7240, norm(y): 1.0088, norm:1.4850, tok/sec: 104887.33, flops:91.85, batch-reuse:1
@ 5316 train 4.5507 , allloss: 4.5719, dt: 1259.65ms, fracRes: 0.6006, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7240, norm(y): 1.0088, norm:1.2478, tok/sec: 104054.03, flops:91.12, batch-reuse:1
@ 5317 train 4.4790 , allloss: 4.5007, dt: 1269.49ms, fracRes: 0.6004, norm(attn): 0.1270, norm(output): 0.2314, norm(x): 0.7224, norm(y): 1.0088, norm:1.1903, tok/sec: 103247.74, flops:90.41, batch-reuse:1
@ 5318 train 4.5610 , allloss: 4.5836, dt: 1265.60ms, fracRes: 0.6007, norm(attn): 0.1279, norm(output): 0.2314, norm(x): 0.7241, norm(y): 1.0089, norm:1.3468, tok/sec: 103564.76, flops:90.69, batch-reuse:1
@ 5319 train 4.5778 , allloss: 4.5993, dt: 1284.94ms, fracRes: 0.6005, norm(attn): 0.1279, norm(output): 0.2324, norm(x): 0.7259, norm(y): 1.0089, norm:1.3841, tok/sec: 102005.96, flops:89.33, batch-reuse:1
@ 5320 train 4.6126 , allloss: 4.6354, dt: 1261.53ms, fracRes: 0.6006, norm(attn): 0.1279, norm(output): 0.2324, norm(x): 0.7257, norm(y): 1.0089, norm:1.3891, tok/sec: 103898.95, flops:90.98, batch-reuse:1
@ 5321 train 4.4992 , allloss: 4.5208, dt: 1268.62ms, fracRes: 0.6000, norm(attn): 0.1279, norm(output): 0.2324, norm(x): 0.7251, norm(y): 1.0089, norm:1.4053, tok/sec: 103318.78, flops:90.47, batch-reuse:1
@ 5322 train 4.6043 , allloss: 4.6263, dt: 1261.22ms, fracRes: 0.6008, norm(attn): 0.1270, norm(output): 0.2305, norm(x): 0.7250, norm(y): 1.0089, norm:1.4091, tok/sec: 103924.79, flops:91.01, batch-reuse:1
@ 5323 train 4.5584 , allloss: 4.5811, dt: 1279.32ms, fracRes: 0.6011, norm(attn): 0.1279, norm(output): 0.2314, norm(x): 0.7254, norm(y): 1.0089, norm:1.5383, tok/sec: 102454.66, flops:89.72, batch-reuse:1
@ 5324 train 4.5193 , allloss: 4.5408, dt: 1270.33ms, fracRes: 0.6016, norm(attn): 0.1270, norm(output): 0.2314, norm(x): 0.7272, norm(y): 1.0089, norm:1.3694, tok/sec: 103179.38, flops:90.35, batch-reuse:1
@ 5325 train 4.5100 , allloss: 4.5319, dt: 1260.64ms, fracRes: 0.6019, norm(attn): 0.1270, norm(output): 0.2314, norm(x): 0.7265, norm(y): 1.0089, norm:1.4834, tok/sec: 103972.75, flops:91.05, batch-reuse:1
@ 5326 train 4.5123 , allloss: 4.5333, dt: 1264.14ms, fracRes: 0.6017, norm(attn): 0.1270, norm(output): 0.2324, norm(x): 0.7274, norm(y): 1.0089, norm:1.4490, tok/sec: 103684.90, flops:90.80, batch-reuse:1
@ 5327 train 4.4629 , allloss: 4.4864, dt: 1298.53ms, fracRes: 0.6013, norm(attn): 0.1279, norm(output): 0.2314, norm(x): 0.7241, norm(y): 1.0089, norm:1.5838, tok/sec: 100938.49, flops:88.39, batch-reuse:1
@ 5328 train 4.4955 , allloss: 4.5182, dt: 1313.03ms, fracRes: 0.6000, norm(attn): 0.1270, norm(output): 0.2324, norm(x): 0.7244, norm(y): 1.0089, norm:1.3311, tok/sec: 99824.05, flops:87.41, batch-reuse:1
@ 5329 train 4.6077 , allloss: 4.6288, dt: 1278.66ms, fracRes: 0.6004, norm(attn): 0.1279, norm(output): 0.2324, norm(x): 0.7253, norm(y): 1.0089, norm:1.3831, tok/sec: 102507.44, flops:89.76, batch-reuse:1
@ 5330 train 4.4939 , allloss: 4.5143, dt: 1254.67ms, fracRes: 0.6005, norm(attn): 0.1279, norm(output): 0.2314, norm(x): 0.7244, norm(y): 1.0088, norm:1.4045, tok/sec: 104467.54, flops:91.48, batch-reuse:1
@ 5331 train 4.5645 , allloss: 4.5855, dt: 1281.20ms, fracRes: 0.6017, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7250, norm(y): 1.0089, norm:1.3247, tok/sec: 102303.96, flops:89.59, batch-reuse:1
@ 5332 train 4.5664 , allloss: 4.5910, dt: 1280.14ms, fracRes: 0.6014, norm(attn): 0.1270, norm(output): 0.2314, norm(x): 0.7254, norm(y): 1.0089, norm:1.5760, tok/sec: 102389.17, flops:89.66, batch-reuse:1
@ 5333 train 4.5619 , allloss: 4.5834, dt: 1249.48ms, fracRes: 0.6005, norm(attn): 0.1270, norm(output): 0.2324, norm(x): 0.7257, norm(y): 1.0089, norm:1.4104, tok/sec: 104900.84, flops:91.86, batch-reuse:1
@ 5334 train 4.4632 , allloss: 4.4842, dt: 1277.63ms, fracRes: 0.6010, norm(attn): 0.1270, norm(output): 0.2314, norm(x): 0.7244, norm(y): 1.0091, norm:1.5430, tok/sec: 102589.83, flops:89.84, batch-reuse:1
@ 5335 train 4.4953 , allloss: 4.5167, dt: 1272.58ms, fracRes: 0.6012, norm(attn): 0.1270, norm(output): 0.2305, norm(x): 0.7238, norm(y): 1.0090, norm:1.3513, tok/sec: 102996.76, flops:90.19, batch-reuse:1
@ 5336 train 4.5554 , allloss: 4.5776, dt: 1297.87ms, fracRes: 0.6012, norm(attn): 0.1279, norm(output): 0.2305, norm(x): 0.7231, norm(y): 1.0088, norm:1.2514, tok/sec: 100989.94, flops:88.44, batch-reuse:1
@ 5337 train 4.4968 , allloss: 4.5181, dt: 1268.63ms, fracRes: 0.6009, norm(attn): 0.1270, norm(output): 0.2305, norm(x): 0.7227, norm(y): 1.0089, norm:1.2814, tok/sec: 103317.71, flops:90.47, batch-reuse:1
@ 5338 train 4.5182 , allloss: 4.5432, dt: 1283.07ms, fracRes: 0.6010, norm(attn): 0.1289, norm(output): 0.2314, norm(x): 0.7224, norm(y): 1.0089, norm:1.6279, tok/sec: 102154.64, flops:89.46, batch-reuse:1
@ 5339 train 4.6061 , allloss: 4.6281, dt: 1265.43ms, fracRes: 0.5988, norm(attn): 0.1299, norm(output): 0.2314, norm(x): 0.7234, norm(y): 1.0086, norm:1.4143, tok/sec: 103579.00, flops:90.70, batch-reuse:1
@ 5340 train 4.5727 , allloss: 4.5940, dt: 1507.80ms, fracRes: 0.6007, norm(attn): 0.1270, norm(output): 0.2334, norm(x): 0.7263, norm(y): 1.0088, norm:1.5572, tok/sec: 86929.21, flops:76.12, batch-reuse:1
@ 5341 train 4.6218 , allloss: 4.6433, dt: 1291.46ms, fracRes: 0.6014, norm(attn): 0.1260, norm(output): 0.2305, norm(x): 0.7245, norm(y): 1.0089, norm:1.3968, tok/sec: 101491.50, flops:88.87, batch-reuse:1
@ 5342 train 4.5165 , allloss: 4.5378, dt: 1270.66ms, fracRes: 0.5994, norm(attn): 0.1279, norm(output): 0.2305, norm(x): 0.7211, norm(y): 1.0089, norm:1.4882, tok/sec: 103152.29, flops:90.33, batch-reuse:1
@ 5343 train 4.4284 , allloss: 4.4513, dt: 1317.32ms, fracRes: 0.5988, norm(attn): 0.1270, norm(output): 0.2314, norm(x): 0.7207, norm(y): 1.0089, norm:1.4517, tok/sec: 99498.78, flops:87.13, batch-reuse:1
@ 5344 train 4.5562 , allloss: 4.5786, dt: 1309.78ms, fracRes: 0.5996, norm(attn): 0.1279, norm(output): 0.2314, norm(x): 0.7215, norm(y): 1.0088, norm:1.6251, tok/sec: 100071.89, flops:87.63, batch-reuse:1
@ 5345 train 4.5347 , allloss: 4.5554, dt: 1255.94ms, fracRes: 0.6009, norm(attn): 0.1270, norm(output): 0.2314, norm(x): 0.7258, norm(y): 1.0089, norm:1.4364, tok/sec: 104361.52, flops:91.39, batch-reuse:1
@ 5346 train 4.3235 , allloss: 4.3449, dt: 1254.81ms, fracRes: 0.6024, norm(attn): 0.1270, norm(output): 0.2314, norm(x): 0.7287, norm(y): 1.0091, norm:1.8178, tok/sec: 104456.02, flops:91.47, batch-reuse:1
@ 5347 train 4.4918 , allloss: 4.5134, dt: 1290.80ms, fracRes: 0.6023, norm(attn): 0.1279, norm(output): 0.2314, norm(x): 0.7267, norm(y): 1.0089, norm:1.5868, tok/sec: 101542.90, flops:88.92, batch-reuse:1
@ 5348 train 4.5203 , allloss: 4.5437, dt: 1280.72ms, fracRes: 0.6023, norm(attn): 0.1279, norm(output): 0.2314, norm(x): 0.7280, norm(y): 1.0089, norm:1.6641, tok/sec: 102342.30, flops:89.62, batch-reuse:1
@ 5349 train 4.5826 , allloss: 4.6049, dt: 1271.08ms, fracRes: 0.6011, norm(attn): 0.1299, norm(output): 0.2305, norm(x): 0.7242, norm(y): 1.0088, norm:1.8474, tok/sec: 103118.47, flops:90.30, batch-reuse:1
@ 5350 train 4.6576 , allloss: 4.6790, dt: 1284.91ms, fracRes: 0.6000, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7240, norm(y): 1.0087, norm:1.8513, tok/sec: 102008.70, flops:89.33, batch-reuse:1
@ 5351 train 4.4281 , allloss: 4.4503, dt: 1290.51ms, fracRes: 0.6014, norm(attn): 0.1270, norm(output): 0.2314, norm(x): 0.7261, norm(y): 1.0090, norm:1.3813, tok/sec: 101566.07, flops:88.94, batch-reuse:1
@ 5352 train 4.4418 , allloss: 4.4636, dt: 1311.44ms, fracRes: 0.6017, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7269, norm(y): 1.0089, norm:1.6141, tok/sec: 99944.81, flops:87.52, batch-reuse:1
@ 5353 train 4.4235 , allloss: 4.4457, dt: 1298.23ms, fracRes: 0.6016, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7238, norm(y): 1.0089, norm:1.4841, tok/sec: 100961.95, flops:88.41, batch-reuse:1
@ 5354 train 4.4965 , allloss: 4.5189, dt: 1267.85ms, fracRes: 0.6012, norm(attn): 0.1270, norm(output): 0.2314, norm(x): 0.7252, norm(y): 1.0087, norm:1.4685, tok/sec: 103381.24, flops:90.53, batch-reuse:1
@ 5355 train 4.4176 , allloss: 4.4392, dt: 1286.61ms, fracRes: 0.6006, norm(attn): 0.1279, norm(output): 0.2324, norm(x): 0.7262, norm(y): 1.0089, norm:1.5963, tok/sec: 101873.98, flops:89.21, batch-reuse:1
@ 5356 train 4.4426 , allloss: 4.4646, dt: 1285.30ms, fracRes: 0.5999, norm(attn): 0.1270, norm(output): 0.2324, norm(x): 0.7259, norm(y): 1.0089, norm:1.5863, tok/sec: 101977.71, flops:89.30, batch-reuse:1
@ 5357 train 4.4269 , allloss: 4.4486, dt: 1268.73ms, fracRes: 0.5999, norm(attn): 0.1279, norm(output): 0.2334, norm(x): 0.7269, norm(y): 1.0088, norm:1.6046, tok/sec: 103309.71, flops:90.47, batch-reuse:1
@ 5358 train 4.5773 , allloss: 4.5991, dt: 1271.51ms, fracRes: 0.6003, norm(attn): 0.1279, norm(output): 0.2324, norm(x): 0.7256, norm(y): 1.0088, norm:1.4621, tok/sec: 103084.00, flops:90.27, batch-reuse:1
@ 5359 train 4.5597 , allloss: 4.5820, dt: 1281.57ms, fracRes: 0.6007, norm(attn): 0.1279, norm(output): 0.2324, norm(x): 0.7248, norm(y): 1.0088, norm:1.6709, tok/sec: 102274.65, flops:89.56, batch-reuse:1
@ 5360 train 4.4484 , allloss: 4.4699, dt: 1260.94ms, fracRes: 0.6009, norm(attn): 0.1270, norm(output): 0.2314, norm(x): 0.7264, norm(y): 1.0089, norm:1.3394, tok/sec: 103947.82, flops:91.03, batch-reuse:1
@ 5361 train 4.5323 , allloss: 4.5540, dt: 1263.64ms, fracRes: 0.6015, norm(attn): 0.1270, norm(output): 0.2314, norm(x): 0.7269, norm(y): 1.0089, norm:1.5047, tok/sec: 103725.69, flops:90.83, batch-reuse:1
@ 5362 train 4.5876 , allloss: 4.6106, dt: 1274.43ms, fracRes: 0.6018, norm(attn): 0.1270, norm(output): 0.2314, norm(x): 0.7263, norm(y): 1.0089, norm:1.6243, tok/sec: 102847.31, flops:90.06, batch-reuse:1
@ 5363 train 4.4479 , allloss: 4.4697, dt: 1292.44ms, fracRes: 0.6021, norm(attn): 0.1289, norm(output): 0.2314, norm(x): 0.7260, norm(y): 1.0090, norm:1.4371, tok/sec: 101414.37, flops:88.81, batch-reuse:1
@ 5364 train 4.5989 , allloss: 4.6211, dt: 1300.86ms, fracRes: 0.6016, norm(attn): 0.1279, norm(output): 0.2314, norm(x): 0.7266, norm(y): 1.0087, norm:1.6781, tok/sec: 100757.63, flops:88.23, batch-reuse:1
@ 5365 train 4.3576 , allloss: 4.3811, dt: 1254.65ms, fracRes: 0.6015, norm(attn): 0.1279, norm(output): 0.2324, norm(x): 0.7267, norm(y): 1.0090, norm:1.7411, tok/sec: 104468.99, flops:91.48, batch-reuse:1
@ 5366 train 4.4814 , allloss: 4.5037, dt: 1251.55ms, fracRes: 0.6016, norm(attn): 0.1270, norm(output): 0.2324, norm(x): 0.7266, norm(y): 1.0090, norm:1.4292, tok/sec: 104727.46, flops:91.71, batch-reuse:1
@ 5367 train 4.4626 , allloss: 4.4842, dt: 1283.90ms, fracRes: 0.6012, norm(attn): 0.1270, norm(output): 0.2324, norm(x): 0.7247, norm(y): 1.0089, norm:1.7540, tok/sec: 102089.19, flops:89.40, batch-reuse:1
@ 5368 train 4.4046 , allloss: 4.4275, dt: 1266.94ms, fracRes: 0.6008, norm(attn): 0.1289, norm(output): 0.2314, norm(x): 0.7258, norm(y): 1.0089, norm:2.1122, tok/sec: 103455.50, flops:90.59, batch-reuse:1
@ 5369 train 4.4851 , allloss: 4.5066, dt: 1265.97ms, fracRes: 0.6008, norm(attn): 0.1289, norm(output): 0.2324, norm(x): 0.7282, norm(y): 1.0088, norm:1.3637, tok/sec: 103534.63, flops:90.66, batch-reuse:1
@ 5370 train 4.3973 , allloss: 4.4184, dt: 1274.18ms, fracRes: 0.6010, norm(attn): 0.1289, norm(output): 0.2324, norm(x): 0.7279, norm(y): 1.0089, norm:1.5600, tok/sec: 102867.77, flops:90.08, batch-reuse:1
@ 5371 train 4.4624 , allloss: 4.4832, dt: 1259.01ms, fracRes: 0.6014, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7271, norm(y): 1.0090, norm:1.3699, tok/sec: 104106.81, flops:91.16, batch-reuse:1
@ 5372 train 4.4718 , allloss: 4.4969, dt: 1264.03ms, fracRes: 0.6009, norm(attn): 0.1270, norm(output): 0.2324, norm(x): 0.7272, norm(y): 1.0089, norm:1.4384, tok/sec: 103693.86, flops:90.80, batch-reuse:1
@ 5373 train 4.6161 , allloss: 4.6380, dt: 1289.52ms, fracRes: 0.6010, norm(attn): 0.1270, norm(output): 0.2314, norm(x): 0.7257, norm(y): 1.0089, norm:1.4004, tok/sec: 101644.11, flops:89.01, batch-reuse:1
@ 5374 train 4.4247 , allloss: 4.4467, dt: 1256.11ms, fracRes: 0.6013, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7259, norm(y): 1.0090, norm:1.5665, tok/sec: 104347.22, flops:91.38, batch-reuse:1
@ 5375 train 4.4385 , allloss: 4.4606, dt: 1269.47ms, fracRes: 0.6009, norm(attn): 0.1270, norm(output): 0.2314, norm(x): 0.7246, norm(y): 1.0090, norm:1.3466, tok/sec: 103249.76, flops:90.41, batch-reuse:1
@ 5376 train 4.4079 , allloss: 4.4304, dt: 1264.92ms, fracRes: 0.6002, norm(attn): 0.1309, norm(output): 0.2324, norm(x): 0.7232, norm(y): 1.0089, norm:1.5471, tok/sec: 103620.61, flops:90.74, batch-reuse:1
@ 5377 train 4.5342 , allloss: 4.5559, dt: 1263.71ms, fracRes: 0.6009, norm(attn): 0.1270, norm(output): 0.2324, norm(x): 0.7234, norm(y): 1.0088, norm:1.4723, tok/sec: 103719.66, flops:90.83, batch-reuse:1
@ 5378 train 4.4616 , allloss: 4.4822, dt: 1264.32ms, fracRes: 0.6010, norm(attn): 0.1279, norm(output): 0.2334, norm(x): 0.7247, norm(y): 1.0088, norm:1.3571, tok/sec: 103670.14, flops:90.78, batch-reuse:1
@ 5379 train 4.4170 , allloss: 4.4381, dt: 1275.04ms, fracRes: 0.6005, norm(attn): 0.1279, norm(output): 0.2334, norm(x): 0.7242, norm(y): 1.0089, norm:1.3428, tok/sec: 102798.04, flops:90.02, batch-reuse:1
@ 5380 train 4.4134 , allloss: 4.4359, dt: 1256.39ms, fracRes: 0.6006, norm(attn): 0.1270, norm(output): 0.2314, norm(x): 0.7214, norm(y): 1.0089, norm:1.5488, tok/sec: 104324.33, flops:91.36, batch-reuse:1
@ 5381 train 4.4357 , allloss: 4.4583, dt: 1275.53ms, fracRes: 0.6006, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7217, norm(y): 1.0089, norm:1.4770, tok/sec: 102759.00, flops:89.98, batch-reuse:1
@ 5382 train 4.3421 , allloss: 4.3638, dt: 1267.18ms, fracRes: 0.6002, norm(attn): 0.1279, norm(output): 0.2314, norm(x): 0.7210, norm(y): 1.0089, norm:1.4950, tok/sec: 103436.23, flops:90.58, batch-reuse:1
@ 5383 train 4.5317 , allloss: 4.5536, dt: 1279.73ms, fracRes: 0.6001, norm(attn): 0.1279, norm(output): 0.2324, norm(x): 0.7221, norm(y): 1.0089, norm:1.3520, tok/sec: 102421.94, flops:89.69, batch-reuse:1
@ 5384 train 4.4197 , allloss: 4.4411, dt: 1291.68ms, fracRes: 0.6002, norm(attn): 0.1289, norm(output): 0.2314, norm(x): 0.7223, norm(y): 1.0089, norm:1.6187, tok/sec: 101474.06, flops:88.86, batch-reuse:1
@ 5385 train 4.4681 , allloss: 4.4899, dt: 1274.86ms, fracRes: 0.6012, norm(attn): 0.1270, norm(output): 0.2295, norm(x): 0.7225, norm(y): 1.0089, norm:1.4714, tok/sec: 102812.92, flops:90.03, batch-reuse:1
@ 5386 train 4.4514 , allloss: 4.4732, dt: 1261.74ms, fracRes: 0.6005, norm(attn): 0.1279, norm(output): 0.2314, norm(x): 0.7213, norm(y): 1.0090, norm:1.4190, tok/sec: 103882.32, flops:90.97, batch-reuse:1
@ 5387 train 4.4213 , allloss: 4.4429, dt: 1274.27ms, fracRes: 0.6000, norm(attn): 0.1279, norm(output): 0.2324, norm(x): 0.7208, norm(y): 1.0090, norm:1.3832, tok/sec: 102860.44, flops:90.07, batch-reuse:1
@ 5388 train 4.4839 , allloss: 4.5060, dt: 1290.42ms, fracRes: 0.6010, norm(attn): 0.1270, norm(output): 0.2314, norm(x): 0.7217, norm(y): 1.0089, norm:1.3457, tok/sec: 101573.37, flops:88.95, batch-reuse:1
@ 5389 train 4.8326 , allloss: 4.8560, dt: 1264.51ms, fracRes: 0.6015, norm(attn): 0.1279, norm(output): 0.2314, norm(x): 0.7218, norm(y): 1.0087, norm:1.4798, tok/sec: 103654.72, flops:90.77, batch-reuse:1
@ 5390 train 4.6569 , allloss: 4.6797, dt: 1257.42ms, fracRes: 0.6018, norm(attn): 0.1270, norm(output): 0.2305, norm(x): 0.7215, norm(y): 1.0089, norm:1.5283, tok/sec: 104238.66, flops:91.28, batch-reuse:1
@ 5391 train 4.5308 , allloss: 4.5538, dt: 1277.16ms, fracRes: 0.6011, norm(attn): 0.1289, norm(output): 0.2314, norm(x): 0.7218, norm(y): 1.0088, norm:1.6849, tok/sec: 102627.50, flops:89.87, batch-reuse:1
@ 5392 train 4.5929 , allloss: 4.6154, dt: 1269.43ms, fracRes: 0.6002, norm(attn): 0.1289, norm(output): 0.2334, norm(x): 0.7231, norm(y): 1.0087, norm:1.6325, tok/sec: 103252.63, flops:90.42, batch-reuse:1
@ 5393 train 4.5806 , allloss: 4.6022, dt: 1264.28ms, fracRes: 0.6014, norm(attn): 0.1270, norm(output): 0.2324, norm(x): 0.7236, norm(y): 1.0088, norm:1.2731, tok/sec: 103672.94, flops:90.78, batch-reuse:1
@ 5394 train 4.5795 , allloss: 4.6035, dt: 1279.39ms, fracRes: 0.6016, norm(attn): 0.1289, norm(output): 0.2324, norm(x): 0.7221, norm(y): 1.0088, norm:1.8808, tok/sec: 102449.08, flops:89.71, batch-reuse:1
@ 5395 train 4.7816 , allloss: 4.8085, dt: 1272.67ms, fracRes: 0.6011, norm(attn): 0.1279, norm(output): 0.2334, norm(x): 0.7212, norm(y): 1.0087, norm:1.5817, tok/sec: 102989.41, flops:90.19, batch-reuse:1
@ 5396 train 4.6546 , allloss: 4.6770, dt: 1298.02ms, fracRes: 0.6010, norm(attn): 0.1270, norm(output): 0.2324, norm(x): 0.7225, norm(y): 1.0088, norm:1.5698, tok/sec: 100978.50, flops:88.43, batch-reuse:1
@ 5397 train 4.6613 , allloss: 4.6833, dt: 1298.09ms, fracRes: 0.6011, norm(attn): 0.1270, norm(output): 0.2324, norm(x): 0.7232, norm(y): 1.0088, norm:1.5492, tok/sec: 100972.71, flops:88.42, batch-reuse:1
@ 5398 train 4.6517 , allloss: 4.6731, dt: 1239.55ms, fracRes: 0.6003, norm(attn): 0.1289, norm(output): 0.2324, norm(x): 0.7220, norm(y): 1.0088, norm:1.5001, tok/sec: 105741.61, flops:92.60, batch-reuse:1
@ 5399 train 4.7023 , allloss: 4.7252, dt: 1285.70ms, fracRes: 0.6015, norm(attn): 0.1299, norm(output): 0.2324, norm(x): 0.7210, norm(y): 1.0087, norm:1.5924, tok/sec: 101946.36, flops:89.27, batch-reuse:1
@ 5400 train 4.6503 , allloss: 4.6734, dt: 1302.07ms, fracRes: 0.6013, norm(attn): 0.1270, norm(output): 0.2314, norm(x): 0.7210, norm(y): 1.0087, norm:1.3780, tok/sec: 100664.06, flops:88.15, batch-reuse:1
@ 5401 train 4.6099 , allloss: 4.6329, dt: 1244.53ms, fracRes: 0.5998, norm(attn): 0.1299, norm(output): 0.2334, norm(x): 0.7203, norm(y): 1.0087, norm:1.6413, tok/sec: 105318.50, flops:92.23, batch-reuse:1
@ 5402 train 4.6730 , allloss: 4.6948, dt: 1261.65ms, fracRes: 0.6004, norm(attn): 0.1270, norm(output): 0.2324, norm(x): 0.7218, norm(y): 1.0087, norm:1.6410, tok/sec: 103889.09, flops:90.97, batch-reuse:1
@ 5403 train 4.6532 , allloss: 4.6751, dt: 1259.81ms, fracRes: 0.6013, norm(attn): 0.1260, norm(output): 0.2314, norm(x): 0.7237, norm(y): 1.0087, norm:1.6125, tok/sec: 104041.15, flops:91.11, batch-reuse:1
@ 5404 train 4.5640 , allloss: 4.5853, dt: 1257.14ms, fracRes: 0.6016, norm(attn): 0.1270, norm(output): 0.2305, norm(x): 0.7237, norm(y): 1.0087, norm:1.4378, tok/sec: 104261.82, flops:91.30, batch-reuse:1
@ 5405 train 4.5989 , allloss: 4.6208, dt: 1270.28ms, fracRes: 0.6007, norm(attn): 0.1270, norm(output): 0.2324, norm(x): 0.7219, norm(y): 1.0087, norm:1.7656, tok/sec: 103183.73, flops:90.36, batch-reuse:1
@ 5406 train 4.6554 , allloss: 4.6786, dt: 1272.16ms, fracRes: 0.6012, norm(attn): 0.1279, norm(output): 0.2314, norm(x): 0.7226, norm(y): 1.0089, norm:1.6901, tok/sec: 103031.31, flops:90.22, batch-reuse:1
@ 5407 train 4.6252 , allloss: 4.6471, dt: 1270.44ms, fracRes: 0.6012, norm(attn): 0.1279, norm(output): 0.2314, norm(x): 0.7228, norm(y): 1.0089, norm:1.5452, tok/sec: 103170.35, flops:90.34, batch-reuse:1
@ 5408 train 4.6087 , allloss: 4.6305, dt: 1293.47ms, fracRes: 0.6020, norm(attn): 0.1270, norm(output): 0.2324, norm(x): 0.7255, norm(y): 1.0089, norm:1.7583, tok/sec: 101333.61, flops:88.74, batch-reuse:1
@ 5409 train 4.6180 , allloss: 4.6398, dt: 1264.97ms, fracRes: 0.6023, norm(attn): 0.1260, norm(output): 0.2324, norm(x): 0.7258, norm(y): 1.0088, norm:1.8330, tok/sec: 103617.03, flops:90.74, batch-reuse:1
@ 5410 train 4.5903 , allloss: 4.6119, dt: 1283.64ms, fracRes: 0.6022, norm(attn): 0.1279, norm(output): 0.2324, norm(x): 0.7258, norm(y): 1.0088, norm:1.3174, tok/sec: 102109.54, flops:89.42, batch-reuse:1
@ 5411 train 4.7002 , allloss: 4.7213, dt: 1293.68ms, fracRes: 0.6018, norm(attn): 0.1309, norm(output): 0.2314, norm(x): 0.7233, norm(y): 1.0088, norm:1.8967, tok/sec: 101316.82, flops:88.72, batch-reuse:1
@ 5412 train 4.5594 , allloss: 4.5817, dt: 1298.36ms, fracRes: 0.6009, norm(attn): 0.1279, norm(output): 0.2334, norm(x): 0.7231, norm(y): 1.0088, norm:1.6912, tok/sec: 100952.28, flops:88.40, batch-reuse:1
@ 5413 train 4.5674 , allloss: 4.5900, dt: 1277.15ms, fracRes: 0.6011, norm(attn): 0.1279, norm(output): 0.2324, norm(x): 0.7217, norm(y): 1.0088, norm:1.9146, tok/sec: 102628.52, flops:89.87, batch-reuse:1
@ 5414 train 4.5042 , allloss: 4.5261, dt: 1279.08ms, fracRes: 0.6002, norm(attn): 0.1279, norm(output): 0.2324, norm(x): 0.7203, norm(y): 1.0090, norm:1.4414, tok/sec: 102473.91, flops:89.73, batch-reuse:1
@ 5415 train 4.5258 , allloss: 4.5482, dt: 1301.34ms, fracRes: 0.6003, norm(attn): 0.1289, norm(output): 0.2334, norm(x): 0.7218, norm(y): 1.0087, norm:1.5530, tok/sec: 100720.60, flops:88.20, batch-reuse:1
@ 5416 train 4.6010 , allloss: 4.6227, dt: 1282.83ms, fracRes: 0.6007, norm(attn): 0.1279, norm(output): 0.2324, norm(x): 0.7208, norm(y): 1.0088, norm:1.3163, tok/sec: 102174.02, flops:89.47, batch-reuse:1
@ 5417 train 4.6197 , allloss: 4.6417, dt: 1267.18ms, fracRes: 0.6014, norm(attn): 0.1289, norm(output): 0.2314, norm(x): 0.7229, norm(y): 1.0087, norm:1.4621, tok/sec: 103435.65, flops:90.58, batch-reuse:1
@ 5418 train 4.5704 , allloss: 4.5917, dt: 1270.11ms, fracRes: 0.6020, norm(attn): 0.1270, norm(output): 0.2314, norm(x): 0.7231, norm(y): 1.0088, norm:1.3187, tok/sec: 103197.23, flops:90.37, batch-reuse:1
@ 5419 train 4.5648 , allloss: 4.5852, dt: 1300.39ms, fracRes: 0.6008, norm(attn): 0.1289, norm(output): 0.2324, norm(x): 0.7231, norm(y): 1.0088, norm:1.3567, tok/sec: 100794.01, flops:88.26, batch-reuse:1
@ 5420 train 4.5526 , allloss: 4.5740, dt: 1270.20ms, fracRes: 0.6013, norm(attn): 0.1279, norm(output): 0.2334, norm(x): 0.7225, norm(y): 1.0088, norm:1.5926, tok/sec: 103189.87, flops:90.36, batch-reuse:1
@ 5421 train 4.6052 , allloss: 4.6268, dt: 1265.35ms, fracRes: 0.6017, norm(attn): 0.1279, norm(output): 0.2314, norm(x): 0.7205, norm(y): 1.0088, norm:1.5616, tok/sec: 103585.31, flops:90.71, batch-reuse:1
@ 5422 train 4.6265 , allloss: 4.6492, dt: 1244.47ms, fracRes: 0.6016, norm(attn): 0.1289, norm(output): 0.2324, norm(x): 0.7214, norm(y): 1.0087, norm:1.4025, tok/sec: 105323.58, flops:92.23, batch-reuse:1
@ 5423 train 4.7422 , allloss: 4.7641, dt: 1262.61ms, fracRes: 0.6002, norm(attn): 0.1309, norm(output): 0.2334, norm(x): 0.7187, norm(y): 1.0086, norm:1.4350, tok/sec: 103810.50, flops:90.91, batch-reuse:1
@ 5424 train 4.6631 , allloss: 4.6853, dt: 1265.66ms, fracRes: 0.6004, norm(attn): 0.1289, norm(output): 0.2334, norm(x): 0.7175, norm(y): 1.0088, norm:1.6781, tok/sec: 103560.14, flops:90.69, batch-reuse:1
@ 5425 train 4.5514 , allloss: 4.5734, dt: 1273.09ms, fracRes: 0.6000, norm(attn): 0.1279, norm(output): 0.2314, norm(x): 0.7178, norm(y): 1.0088, norm:1.6721, tok/sec: 102955.54, flops:90.16, batch-reuse:1
@ 5426 train 4.5639 , allloss: 4.5857, dt: 1263.53ms, fracRes: 0.6001, norm(attn): 0.1279, norm(output): 0.2324, norm(x): 0.7176, norm(y): 1.0088, norm:1.4256, tok/sec: 103734.40, flops:90.84, batch-reuse:1
@ 5427 train 4.5463 , allloss: 4.5679, dt: 1282.64ms, fracRes: 0.6009, norm(attn): 0.1279, norm(output): 0.2324, norm(x): 0.7195, norm(y): 1.0087, norm:1.2959, tok/sec: 102188.88, flops:89.49, batch-reuse:1
@ 5428 train 4.5127 , allloss: 4.5358, dt: 1267.36ms, fracRes: 0.6010, norm(attn): 0.1279, norm(output): 0.2324, norm(x): 0.7217, norm(y): 1.0088, norm:1.4833, tok/sec: 103421.33, flops:90.56, batch-reuse:1
@ 5429 train 4.6014 , allloss: 4.6233, dt: 1295.78ms, fracRes: 0.6008, norm(attn): 0.1289, norm(output): 0.2324, norm(x): 0.7209, norm(y): 1.0089, norm:2.1252, tok/sec: 101153.29, flops:88.58, batch-reuse:1
@ 5430 train 4.6816 , allloss: 4.7046, dt: 1278.35ms, fracRes: 0.6007, norm(attn): 0.1279, norm(output): 0.2324, norm(x): 0.7202, norm(y): 1.0087, norm:1.5958, tok/sec: 102532.12, flops:89.79, batch-reuse:1
@ 5431 train 4.6195 , allloss: 4.6425, dt: 1284.74ms, fracRes: 0.6015, norm(attn): 0.1289, norm(output): 0.2324, norm(x): 0.7211, norm(y): 1.0088, norm:1.4009, tok/sec: 102022.58, flops:89.34, batch-reuse:1
@ 5432 train 4.6184 , allloss: 4.6405, dt: 1279.31ms, fracRes: 0.6014, norm(attn): 0.1289, norm(output): 0.2314, norm(x): 0.7210, norm(y): 1.0088, norm:1.4033, tok/sec: 102455.52, flops:89.72, batch-reuse:1
@ 5433 train 4.5941 , allloss: 4.6164, dt: 1304.00ms, fracRes: 0.6013, norm(attn): 0.1299, norm(output): 0.2324, norm(x): 0.7210, norm(y): 1.0087, norm:1.3773, tok/sec: 100515.71, flops:88.02, batch-reuse:1
@ 5434 train 4.6407 , allloss: 4.6631, dt: 1282.71ms, fracRes: 0.6018, norm(attn): 0.1299, norm(output): 0.2324, norm(x): 0.7218, norm(y): 1.0088, norm:1.4310, tok/sec: 102183.69, flops:89.48, batch-reuse:1
@ 5435 train 4.6374 , allloss: 4.6597, dt: 1257.59ms, fracRes: 0.6014, norm(attn): 0.1270, norm(output): 0.2334, norm(x): 0.7236, norm(y): 1.0088, norm:1.3973, tok/sec: 104224.37, flops:91.27, batch-reuse:1
@ 5436 train 4.5622 , allloss: 4.5834, dt: 1294.20ms, fracRes: 0.6006, norm(attn): 0.1279, norm(output): 0.2334, norm(x): 0.7221, norm(y): 1.0088, norm:1.2279, tok/sec: 101276.21, flops:88.69, batch-reuse:1
@ 5437 train 4.5436 , allloss: 4.5659, dt: 1272.73ms, fracRes: 0.6003, norm(attn): 0.1289, norm(output): 0.2334, norm(x): 0.7221, norm(y): 1.0087, norm:1.4745, tok/sec: 102985.24, flops:90.18, batch-reuse:1
@ 5438 train 4.5050 , allloss: 4.5277, dt: 1261.75ms, fracRes: 0.6009, norm(attn): 0.1289, norm(output): 0.2324, norm(x): 0.7209, norm(y): 1.0087, norm:1.3400, tok/sec: 103881.24, flops:90.97, batch-reuse:1
@ 5439 train 4.5627 , allloss: 4.5846, dt: 1264.86ms, fracRes: 0.6010, norm(attn): 0.1289, norm(output): 0.2324, norm(x): 0.7202, norm(y): 1.0088, norm:1.4679, tok/sec: 103625.98, flops:90.74, batch-reuse:1
@ 5440 train 4.5818 , allloss: 4.6035, dt: 1248.71ms, fracRes: 0.6017, norm(attn): 0.1270, norm(output): 0.2314, norm(x): 0.7195, norm(y): 1.0089, norm:1.3590, tok/sec: 104966.17, flops:91.92, batch-reuse:1
@ 5441 train 4.5781 , allloss: 4.6002, dt: 1272.13ms, fracRes: 0.6007, norm(attn): 0.1299, norm(output): 0.2324, norm(x): 0.7178, norm(y): 1.0088, norm:1.3687, tok/sec: 103033.59, flops:90.23, batch-reuse:1
@ 5442 train 4.7265 , allloss: 4.7478, dt: 1263.26ms, fracRes: 0.6016, norm(attn): 0.1270, norm(output): 0.2324, norm(x): 0.7205, norm(y): 1.0088, norm:1.3444, tok/sec: 103756.58, flops:90.86, batch-reuse:1
@ 5443 train 4.5905 , allloss: 4.6127, dt: 1280.37ms, fracRes: 0.6017, norm(attn): 0.1270, norm(output): 0.2324, norm(x): 0.7204, norm(y): 1.0088, norm:1.5532, tok/sec: 102370.10, flops:89.64, batch-reuse:1
@ 5444 train 4.6859 , allloss: 4.7100, dt: 1275.80ms, fracRes: 0.6024, norm(attn): 0.1289, norm(output): 0.2324, norm(x): 0.7191, norm(y): 1.0088, norm:1.4645, tok/sec: 102736.76, flops:89.97, batch-reuse:1
@ 5445 train 4.5637 , allloss: 4.5863, dt: 1255.79ms, fracRes: 0.6022, norm(attn): 0.1279, norm(output): 0.2324, norm(x): 0.7216, norm(y): 1.0088, norm:1.3446, tok/sec: 104374.50, flops:91.40, batch-reuse:1
@ 5446 train 4.6358 , allloss: 4.6570, dt: 1263.07ms, fracRes: 0.6016, norm(attn): 0.1289, norm(output): 0.2324, norm(x): 0.7221, norm(y): 1.0089, norm:1.5088, tok/sec: 103772.19, flops:90.87, batch-reuse:1
@ 5447 train 4.6062 , allloss: 4.6283, dt: 1269.75ms, fracRes: 0.5997, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7161, norm(y): 1.0087, norm:1.9449, tok/sec: 103226.69, flops:90.39, batch-reuse:1
@ 5448 train 4.6468 , allloss: 4.6681, dt: 1274.84ms, fracRes: 0.6002, norm(attn): 0.1289, norm(output): 0.2334, norm(x): 0.7206, norm(y): 1.0088, norm:1.6617, tok/sec: 102814.63, flops:90.03, batch-reuse:1
@ 5449 train 4.5568 , allloss: 4.5781, dt: 1280.79ms, fracRes: 0.6009, norm(attn): 0.1289, norm(output): 0.2324, norm(x): 0.7221, norm(y): 1.0089, norm:1.5002, tok/sec: 102337.23, flops:89.62, batch-reuse:1
@ 5450 train 4.5346 , allloss: 4.5557, dt: 1264.13ms, fracRes: 0.6005, norm(attn): 0.1279, norm(output): 0.2334, norm(x): 0.7221, norm(y): 1.0089, norm:1.5288, tok/sec: 103685.22, flops:90.80, batch-reuse:1
@ 5451 train 4.5455 , allloss: 4.5689, dt: 1268.78ms, fracRes: 0.6011, norm(attn): 0.1289, norm(output): 0.2334, norm(x): 0.7230, norm(y): 1.0088, norm:1.5210, tok/sec: 103305.71, flops:90.46, batch-reuse:1
@ 5452 train 4.5518 , allloss: 4.5731, dt: 1265.27ms, fracRes: 0.6018, norm(attn): 0.1270, norm(output): 0.2334, norm(x): 0.7240, norm(y): 1.0089, norm:1.4714, tok/sec: 103592.20, flops:90.71, batch-reuse:1
@ 5453 train 4.6722 , allloss: 4.6936, dt: 1269.99ms, fracRes: 0.6022, norm(attn): 0.1270, norm(output): 0.2324, norm(x): 0.7240, norm(y): 1.0089, norm:1.3113, tok/sec: 103206.96, flops:90.38, batch-reuse:1
@ 5454 train 4.6022 , allloss: 4.6249, dt: 1256.03ms, fracRes: 0.6015, norm(attn): 0.1299, norm(output): 0.2324, norm(x): 0.7234, norm(y): 1.0089, norm:1.6077, tok/sec: 104354.05, flops:91.38, batch-reuse:1
@ 5455 train 4.7229 , allloss: 4.7439, dt: 1273.44ms, fracRes: 0.6004, norm(attn): 0.1309, norm(output): 0.2334, norm(x): 0.7233, norm(y): 1.0087, norm:1.5957, tok/sec: 102927.71, flops:90.13, batch-reuse:1
@ 5456 train 4.5977 , allloss: 4.6189, dt: 1275.77ms, fracRes: 0.6010, norm(attn): 0.1299, norm(output): 0.2334, norm(x): 0.7254, norm(y): 1.0089, norm:1.4705, tok/sec: 102739.72, flops:89.97, batch-reuse:1
@ 5457 train 4.5513 , allloss: 4.5726, dt: 1309.31ms, fracRes: 0.6011, norm(attn): 0.1299, norm(output): 0.2314, norm(x): 0.7238, norm(y): 1.0090, norm:1.5594, tok/sec: 100107.44, flops:87.66, batch-reuse:1
@ 5458 train 4.5499 , allloss: 4.5717, dt: 1272.84ms, fracRes: 0.6009, norm(attn): 0.1279, norm(output): 0.2334, norm(x): 0.7238, norm(y): 1.0089, norm:1.2227, tok/sec: 102975.89, flops:90.17, batch-reuse:1
@ 5459 train 4.5831 , allloss: 4.6050, dt: 1288.95ms, fracRes: 0.6009, norm(attn): 0.1289, norm(output): 0.2344, norm(x): 0.7236, norm(y): 1.0089, norm:1.2793, tok/sec: 101688.94, flops:89.05, batch-reuse:1
@ 5460 train 4.5504 , allloss: 4.5715, dt: 1279.49ms, fracRes: 0.6011, norm(attn): 0.1279, norm(output): 0.2324, norm(x): 0.7235, norm(y): 1.0088, norm:1.4122, tok/sec: 102440.99, flops:89.71, batch-reuse:1
@ 5461 train 4.7466 , allloss: 4.7681, dt: 1283.30ms, fracRes: 0.6016, norm(attn): 0.1279, norm(output): 0.2324, norm(x): 0.7219, norm(y): 1.0088, norm:1.3161, tok/sec: 102136.91, flops:89.44, batch-reuse:1
@ 5462 train 4.5922 , allloss: 4.6132, dt: 1299.60ms, fracRes: 0.6006, norm(attn): 0.1299, norm(output): 0.2324, norm(x): 0.7220, norm(y): 1.0088, norm:1.4245, tok/sec: 100855.71, flops:88.32, batch-reuse:1
@ 5463 train 4.6227 , allloss: 4.6437, dt: 1293.48ms, fracRes: 0.6002, norm(attn): 0.1299, norm(output): 0.2334, norm(x): 0.7204, norm(y): 1.0088, norm:1.4503, tok/sec: 101332.84, flops:88.74, batch-reuse:1
@ 5464 train 4.5697 , allloss: 4.5905, dt: 1324.25ms, fracRes: 0.6011, norm(attn): 0.1289, norm(output): 0.2324, norm(x): 0.7211, norm(y): 1.0088, norm:1.4067, tok/sec: 98978.22, flops:86.67, batch-reuse:1
@ 5465 train 4.5597 , allloss: 4.5815, dt: 1284.40ms, fracRes: 0.6010, norm(attn): 0.1279, norm(output): 0.2334, norm(x): 0.7205, norm(y): 1.0087, norm:1.5430, tok/sec: 102049.34, flops:89.36, batch-reuse:1
@ 5466 train 4.5520 , allloss: 4.5735, dt: 1265.59ms, fracRes: 0.6008, norm(attn): 0.1299, norm(output): 0.2334, norm(x): 0.7195, norm(y): 1.0088, norm:1.3549, tok/sec: 103565.70, flops:90.69, batch-reuse:1
@ 5467 train 4.5529 , allloss: 4.5766, dt: 1262.78ms, fracRes: 0.6004, norm(attn): 0.1309, norm(output): 0.2334, norm(x): 0.7197, norm(y): 1.0089, norm:1.3321, tok/sec: 103796.68, flops:90.89, batch-reuse:1
@ 5468 train 4.5431 , allloss: 4.5641, dt: 1263.39ms, fracRes: 0.6010, norm(attn): 0.1299, norm(output): 0.2334, norm(x): 0.7190, norm(y): 1.0089, norm:1.4208, tok/sec: 103746.68, flops:90.85, batch-reuse:1
@ 5469 train 4.5718 , allloss: 4.5944, dt: 1282.80ms, fracRes: 0.6011, norm(attn): 0.1279, norm(output): 0.2324, norm(x): 0.7177, norm(y): 1.0088, norm:1.6673, tok/sec: 102176.44, flops:89.47, batch-reuse:1
@ 5470 train 4.5971 , allloss: 4.6193, dt: 1257.86ms, fracRes: 0.6017, norm(attn): 0.1270, norm(output): 0.2324, norm(x): 0.7181, norm(y): 1.0089, norm:1.3751, tok/sec: 104202.28, flops:91.25, batch-reuse:1
@ 5471 train 4.5314 , allloss: 4.5528, dt: 1270.29ms, fracRes: 0.6020, norm(attn): 0.1279, norm(output): 0.2305, norm(x): 0.7184, norm(y): 1.0089, norm:1.2709, tok/sec: 103183.09, flops:90.36, batch-reuse:1
@ 5472 train 4.6378 , allloss: 4.6597, dt: 1310.92ms, fracRes: 0.6019, norm(attn): 0.1289, norm(output): 0.2314, norm(x): 0.7198, norm(y): 1.0089, norm:1.4770, tok/sec: 99985.03, flops:87.56, batch-reuse:1
@ 5473 train 4.6086 , allloss: 4.6309, dt: 1280.37ms, fracRes: 0.6010, norm(attn): 0.1309, norm(output): 0.2334, norm(x): 0.7206, norm(y): 1.0089, norm:1.7118, tok/sec: 102370.18, flops:89.64, batch-reuse:1
@ 5474 train 4.5968 , allloss: 4.6179, dt: 1265.02ms, fracRes: 0.6010, norm(attn): 0.1309, norm(output): 0.2324, norm(x): 0.7201, norm(y): 1.0088, norm:1.4730, tok/sec: 103612.33, flops:90.73, batch-reuse:1
@ 5475 train 4.4993 , allloss: 4.5218, dt: 1276.16ms, fracRes: 0.6017, norm(attn): 0.1299, norm(output): 0.2334, norm(x): 0.7208, norm(y): 1.0089, norm:1.3047, tok/sec: 102708.18, flops:89.94, batch-reuse:1
@ 5476 train 4.5845 , allloss: 4.6062, dt: 1265.93ms, fracRes: 0.6022, norm(attn): 0.1289, norm(output): 0.2324, norm(x): 0.7211, norm(y): 1.0088, norm:1.4135, tok/sec: 103538.15, flops:90.67, batch-reuse:1
@ 5477 train 4.5241 , allloss: 4.5448, dt: 1289.91ms, fracRes: 0.6010, norm(attn): 0.1309, norm(output): 0.2334, norm(x): 0.7205, norm(y): 1.0089, norm:1.1683, tok/sec: 101613.15, flops:88.98, batch-reuse:1
@ 5478 train 4.5018 , allloss: 4.5224, dt: 1247.77ms, fracRes: 0.6011, norm(attn): 0.1279, norm(output): 0.2334, norm(x): 0.7208, norm(y): 1.0089, norm:1.3583, tok/sec: 105045.38, flops:91.99, batch-reuse:1
@ 5479 train 4.6151 , allloss: 4.6412, dt: 1270.18ms, fracRes: 0.6025, norm(attn): 0.1289, norm(output): 0.2324, norm(x): 0.7215, norm(y): 1.0087, norm:1.3939, tok/sec: 103191.36, flops:90.36, batch-reuse:1
@ 5480 train 4.5134 , allloss: 4.5352, dt: 1276.02ms, fracRes: 0.6020, norm(attn): 0.1279, norm(output): 0.2324, norm(x): 0.7206, norm(y): 1.0089, norm:1.5689, tok/sec: 102719.66, flops:89.95, batch-reuse:1
@ 5481 train 4.5973 , allloss: 4.6185, dt: 1272.85ms, fracRes: 0.6014, norm(attn): 0.1309, norm(output): 0.2324, norm(x): 0.7205, norm(y): 1.0089, norm:1.8884, tok/sec: 102974.98, flops:90.17, batch-reuse:1
@ 5482 train 4.4901 , allloss: 4.5112, dt: 1275.21ms, fracRes: 0.6009, norm(attn): 0.1279, norm(output): 0.2324, norm(x): 0.7196, norm(y): 1.0089, norm:1.2639, tok/sec: 102784.76, flops:90.01, batch-reuse:1
@ 5483 train 4.4869 , allloss: 4.5088, dt: 1254.46ms, fracRes: 0.6011, norm(attn): 0.1270, norm(output): 0.2324, norm(x): 0.7191, norm(y): 1.0089, norm:1.5249, tok/sec: 104485.07, flops:91.50, batch-reuse:1
@ 5484 train 4.5080 , allloss: 4.5299, dt: 1254.71ms, fracRes: 0.6018, norm(attn): 0.1279, norm(output): 0.2314, norm(x): 0.7201, norm(y): 1.0089, norm:1.3346, tok/sec: 104464.04, flops:91.48, batch-reuse:1
@ 5485 train 4.5305 , allloss: 4.5520, dt: 1271.50ms, fracRes: 0.6018, norm(attn): 0.1279, norm(output): 0.2334, norm(x): 0.7216, norm(y): 1.0087, norm:1.3191, tok/sec: 103084.69, flops:90.27, batch-reuse:1
@ 5486 train 4.5744 , allloss: 4.5963, dt: 1269.11ms, fracRes: 0.6007, norm(attn): 0.1299, norm(output): 0.2324, norm(x): 0.7203, norm(y): 1.0089, norm:1.4051, tok/sec: 103278.70, flops:90.44, batch-reuse:1
@ 5487 train 4.4844 , allloss: 4.5060, dt: 1282.60ms, fracRes: 0.6000, norm(attn): 0.1299, norm(output): 0.2334, norm(x): 0.7198, norm(y): 1.0089, norm:1.4257, tok/sec: 102192.18, flops:89.49, batch-reuse:1
@ 5488 train 4.5366 , allloss: 4.5581, dt: 1259.92ms, fracRes: 0.6010, norm(attn): 0.1299, norm(output): 0.2324, norm(x): 0.7199, norm(y): 1.0089, norm:1.5787, tok/sec: 104031.68, flops:91.10, batch-reuse:1
@ 5489 train 4.4821 , allloss: 4.5031, dt: 1275.51ms, fracRes: 0.6008, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7200, norm(y): 1.0089, norm:1.4588, tok/sec: 102760.52, flops:89.99, batch-reuse:1
@ 5490 train 4.4762 , allloss: 4.4978, dt: 1289.61ms, fracRes: 0.6012, norm(attn): 0.1318, norm(output): 0.2324, norm(x): 0.7181, norm(y): 1.0089, norm:1.4450, tok/sec: 101636.79, flops:89.00, batch-reuse:1
@ 5491 train 4.5096 , allloss: 4.5307, dt: 1256.40ms, fracRes: 0.6018, norm(attn): 0.1289, norm(output): 0.2324, norm(x): 0.7201, norm(y): 1.0089, norm:1.5380, tok/sec: 104323.20, flops:91.35, batch-reuse:1
@ 5492 train 4.6126 , allloss: 4.6340, dt: 1269.45ms, fracRes: 0.6027, norm(attn): 0.1279, norm(output): 0.2305, norm(x): 0.7197, norm(y): 1.0089, norm:1.4021, tok/sec: 103251.10, flops:90.42, batch-reuse:1
@ 5493 train 4.4411 , allloss: 4.4628, dt: 1260.32ms, fracRes: 0.6022, norm(attn): 0.1279, norm(output): 0.2324, norm(x): 0.7188, norm(y): 1.0089, norm:1.5318, tok/sec: 103998.75, flops:91.07, batch-reuse:1
@ 5494 train 4.5469 , allloss: 4.5681, dt: 1281.93ms, fracRes: 0.6013, norm(attn): 0.1279, norm(output): 0.2314, norm(x): 0.7192, norm(y): 1.0089, norm:1.7534, tok/sec: 102245.44, flops:89.53, batch-reuse:1
@ 5495 train 4.5122 , allloss: 4.5335, dt: 1295.95ms, fracRes: 0.6014, norm(attn): 0.1299, norm(output): 0.2314, norm(x): 0.7202, norm(y): 1.0089, norm:1.3673, tok/sec: 101139.95, flops:88.57, batch-reuse:1
@ 5496 train 4.4735 , allloss: 4.4947, dt: 1270.53ms, fracRes: 0.6020, norm(attn): 0.1299, norm(output): 0.2324, norm(x): 0.7211, norm(y): 1.0089, norm:1.4610, tok/sec: 103163.19, flops:90.34, batch-reuse:1
@ 5497 train 4.4799 , allloss: 4.5011, dt: 1273.81ms, fracRes: 0.6021, norm(attn): 0.1289, norm(output): 0.2334, norm(x): 0.7214, norm(y): 1.0089, norm:1.5660, tok/sec: 102897.38, flops:90.11, batch-reuse:1
@ 5498 train 4.4516 , allloss: 4.4729, dt: 1314.01ms, fracRes: 0.6022, norm(attn): 0.1279, norm(output): 0.2314, norm(x): 0.7191, norm(y): 1.0088, norm:1.3402, tok/sec: 99749.43, flops:87.35, batch-reuse:1
@ 5499 train 4.5481 , allloss: 4.5694, dt: 1304.13ms, fracRes: 0.6013, norm(attn): 0.1289, norm(output): 0.2324, norm(x): 0.7189, norm(y): 1.0088, norm:1.4762, tok/sec: 100505.22, flops:88.01, batch-reuse:1
@ 5500 train 4.5143 , allloss: 4.5359, dt: 1286.44ms, fracRes: 0.6012, norm(attn): 0.1309, norm(output): 0.2314, norm(x): 0.7173, norm(y): 1.0089, norm:1.3663, tok/sec: 101887.41, flops:89.22, batch-reuse:1
@ 5501 train 4.5976 , allloss: 4.6245, dt: 1266.95ms, fracRes: 0.6023, norm(attn): 0.1309, norm(output): 0.2305, norm(x): 0.7184, norm(y): 1.0089, norm:1.9552, tok/sec: 103454.45, flops:90.59, batch-reuse:1
@ 5502 train 4.4897 , allloss: 4.5109, dt: 1270.31ms, fracRes: 0.6004, norm(attn): 0.1309, norm(output): 0.2334, norm(x): 0.7201, norm(y): 1.0088, norm:1.7347, tok/sec: 103180.91, flops:90.35, batch-reuse:1
@ 5503 train 4.5942 , allloss: 4.6163, dt: 1289.49ms, fracRes: 0.6014, norm(attn): 0.1318, norm(output): 0.2314, norm(x): 0.7182, norm(y): 1.0087, norm:1.8377, tok/sec: 101646.28, flops:89.01, batch-reuse:1
@ 5504 train 4.4737 , allloss: 4.4967, dt: 1289.92ms, fracRes: 0.6013, norm(attn): 0.1289, norm(output): 0.2324, norm(x): 0.7167, norm(y): 1.0088, norm:1.4846, tok/sec: 101612.35, flops:88.98, batch-reuse:1
@ 5505 train 4.5046 , allloss: 4.5270, dt: 1248.72ms, fracRes: 0.6005, norm(attn): 0.1299, norm(output): 0.2324, norm(x): 0.7179, norm(y): 1.0088, norm:1.7221, tok/sec: 104964.91, flops:91.92, batch-reuse:1
@ 5506 train 4.4727 , allloss: 4.4951, dt: 1254.83ms, fracRes: 0.6003, norm(attn): 0.1309, norm(output): 0.2314, norm(x): 0.7171, norm(y): 1.0087, norm:1.5425, tok/sec: 104453.76, flops:91.47, batch-reuse:1
@ 5507 train 4.4810 , allloss: 4.5028, dt: 1277.11ms, fracRes: 0.6006, norm(attn): 0.1309, norm(output): 0.2334, norm(x): 0.7196, norm(y): 1.0088, norm:1.1831, tok/sec: 102631.66, flops:89.87, batch-reuse:1
@ 5508 train 4.5740 , allloss: 4.5961, dt: 1252.88ms, fracRes: 0.6017, norm(attn): 0.1289, norm(output): 0.2324, norm(x): 0.7211, norm(y): 1.0088, norm:1.5696, tok/sec: 104616.62, flops:91.61, batch-reuse:1
@ 5509 train 4.5281 , allloss: 4.5499, dt: 1287.10ms, fracRes: 0.6020, norm(attn): 0.1299, norm(output): 0.2334, norm(x): 0.7210, norm(y): 1.0088, norm:1.3768, tok/sec: 101835.05, flops:89.18, batch-reuse:1
@ 5510 train 4.4487 , allloss: 4.4710, dt: 1270.95ms, fracRes: 0.6004, norm(attn): 0.1309, norm(output): 0.2314, norm(x): 0.7131, norm(y): 1.0086, norm:1.5591, tok/sec: 103128.86, flops:90.31, batch-reuse:1
@ 5511 train 4.5208 , allloss: 4.5434, dt: 1268.26ms, fracRes: 0.6012, norm(attn): 0.1299, norm(output): 0.2344, norm(x): 0.7169, norm(y): 1.0088, norm:1.7895, tok/sec: 103347.74, flops:90.50, batch-reuse:1
@ 5512 train 4.5508 , allloss: 4.5723, dt: 1298.45ms, fracRes: 0.6022, norm(attn): 0.1279, norm(output): 0.2314, norm(x): 0.7176, norm(y): 1.0089, norm:1.4699, tok/sec: 100944.79, flops:88.40, batch-reuse:1
@ 5513 train 4.4497 , allloss: 4.4720, dt: 1319.40ms, fracRes: 0.6023, norm(attn): 0.1289, norm(output): 0.2314, norm(x): 0.7192, norm(y): 1.0088, norm:1.4071, tok/sec: 99342.28, flops:86.99, batch-reuse:1
@ 5514 train 4.4943 , allloss: 4.5205, dt: 1285.47ms, fracRes: 0.6011, norm(attn): 0.1309, norm(output): 0.2314, norm(x): 0.7202, norm(y): 1.0089, norm:1.3581, tok/sec: 101964.34, flops:89.29, batch-reuse:1
@ 5515 train 4.5205 , allloss: 4.5416, dt: 1317.52ms, fracRes: 0.6012, norm(attn): 0.1309, norm(output): 0.2334, norm(x): 0.7202, norm(y): 1.0088, norm:1.3142, tok/sec: 99483.56, flops:87.12, batch-reuse:1
@ 5516 train 4.5413 , allloss: 4.5622, dt: 1318.40ms, fracRes: 0.6016, norm(attn): 0.1289, norm(output): 0.2334, norm(x): 0.7221, norm(y): 1.0088, norm:1.4167, tok/sec: 99417.77, flops:87.06, batch-reuse:1
@ 5517 train 4.5483 , allloss: 4.5692, dt: 1299.42ms, fracRes: 0.6028, norm(attn): 0.1279, norm(output): 0.2314, norm(x): 0.7215, norm(y): 1.0090, norm:1.3219, tok/sec: 100869.28, flops:88.33, batch-reuse:1
@ 5518 train 4.5449 , allloss: 4.5671, dt: 1266.20ms, fracRes: 0.6023, norm(attn): 0.1289, norm(output): 0.2324, norm(x): 0.7211, norm(y): 1.0089, norm:1.5219, tok/sec: 103515.83, flops:90.65, batch-reuse:1
@ 5519 train 4.4192 , allloss: 4.4408, dt: 1261.71ms, fracRes: 0.6020, norm(attn): 0.1299, norm(output): 0.2324, norm(x): 0.7216, norm(y): 1.0089, norm:1.4374, tok/sec: 103884.48, flops:90.97, batch-reuse:1
@ 5520 train 4.4227 , allloss: 4.4434, dt: 1252.66ms, fracRes: 0.6020, norm(attn): 0.1279, norm(output): 0.2334, norm(x): 0.7214, norm(y): 1.0089, norm:1.4930, tok/sec: 104635.07, flops:91.63, batch-reuse:1
@ 5521 train 4.5862 , allloss: 4.6085, dt: 1278.09ms, fracRes: 0.6025, norm(attn): 0.1289, norm(output): 0.2324, norm(x): 0.7206, norm(y): 1.0089, norm:1.8660, tok/sec: 102553.09, flops:89.80, batch-reuse:1
@ 5522 train 4.5182 , allloss: 4.5390, dt: 1269.15ms, fracRes: 0.6020, norm(attn): 0.1309, norm(output): 0.2334, norm(x): 0.7188, norm(y): 1.0088, norm:1.2615, tok/sec: 103275.73, flops:90.44, batch-reuse:1
@ 5523 train 4.4999 , allloss: 4.5212, dt: 1263.17ms, fracRes: 0.6015, norm(attn): 0.1309, norm(output): 0.2324, norm(x): 0.7201, norm(y): 1.0089, norm:1.8557, tok/sec: 103764.57, flops:90.87, batch-reuse:1
@ 5524 train 4.5043 , allloss: 4.5260, dt: 1247.76ms, fracRes: 0.6018, norm(attn): 0.1299, norm(output): 0.2334, norm(x): 0.7200, norm(y): 1.0088, norm:1.5085, tok/sec: 105045.62, flops:91.99, batch-reuse:1
@ 5525 train 4.4650 , allloss: 4.4867, dt: 1270.10ms, fracRes: 0.6018, norm(attn): 0.1309, norm(output): 0.2324, norm(x): 0.7198, norm(y): 1.0089, norm:1.5587, tok/sec: 103197.82, flops:90.37, batch-reuse:1
@ 5526 train 4.5442 , allloss: 4.5654, dt: 1264.44ms, fracRes: 0.6014, norm(attn): 0.1289, norm(output): 0.2324, norm(x): 0.7193, norm(y): 1.0088, norm:1.3210, tok/sec: 103659.82, flops:90.77, batch-reuse:1
@ 5527 train 4.4732 , allloss: 4.4945, dt: 1275.82ms, fracRes: 0.6015, norm(attn): 0.1309, norm(output): 0.2334, norm(x): 0.7189, norm(y): 1.0088, norm:1.2552, tok/sec: 102735.63, flops:89.96, batch-reuse:1
@ 5528 train 4.5434 , allloss: 4.5650, dt: 1261.56ms, fracRes: 0.6017, norm(attn): 0.1299, norm(output): 0.2314, norm(x): 0.7186, norm(y): 1.0089, norm:1.3853, tok/sec: 103896.37, flops:90.98, batch-reuse:1
@ 5529 train 4.4343 , allloss: 4.4551, dt: 1270.48ms, fracRes: 0.6010, norm(attn): 0.1309, norm(output): 0.2324, norm(x): 0.7194, norm(y): 1.0089, norm:1.2927, tok/sec: 103167.29, flops:90.34, batch-reuse:1
@ 5530 train 4.4895 , allloss: 4.5111, dt: 1291.03ms, fracRes: 0.6014, norm(attn): 0.1309, norm(output): 0.2334, norm(x): 0.7186, norm(y): 1.0088, norm:1.3849, tok/sec: 101524.94, flops:88.90, batch-reuse:1
@ 5531 train 4.4396 , allloss: 4.4634, dt: 1313.58ms, fracRes: 0.6010, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7163, norm(y): 1.0087, norm:1.4731, tok/sec: 99781.98, flops:87.38, batch-reuse:1
@ 5532 train 4.4379 , allloss: 4.4593, dt: 1304.78ms, fracRes: 0.6009, norm(attn): 0.1309, norm(output): 0.2334, norm(x): 0.7164, norm(y): 1.0090, norm:1.6572, tok/sec: 100455.23, flops:87.97, batch-reuse:1
@ 5533 train 4.4525 , allloss: 4.4744, dt: 1266.00ms, fracRes: 0.6005, norm(attn): 0.1309, norm(output): 0.2314, norm(x): 0.7164, norm(y): 1.0089, norm:1.5096, tok/sec: 103532.56, flops:90.66, batch-reuse:1
@ 5534 train 4.4575 , allloss: 4.4804, dt: 1252.66ms, fracRes: 0.6002, norm(attn): 0.1299, norm(output): 0.2324, norm(x): 0.7157, norm(y): 1.0088, norm:1.7024, tok/sec: 104635.05, flops:91.63, batch-reuse:1
@ 5535 train 4.3657 , allloss: 4.3873, dt: 1274.98ms, fracRes: 0.6001, norm(attn): 0.1279, norm(output): 0.2334, norm(x): 0.7177, norm(y): 1.0089, norm:1.7472, tok/sec: 102803.08, flops:90.02, batch-reuse:1
@ 5536 train 4.4964 , allloss: 4.5170, dt: 1265.85ms, fracRes: 0.6010, norm(attn): 0.1279, norm(output): 0.2324, norm(x): 0.7186, norm(y): 1.0088, norm:1.2406, tok/sec: 103544.63, flops:90.67, batch-reuse:1
@ 5537 train 4.5819 , allloss: 4.6035, dt: 1255.77ms, fracRes: 0.6006, norm(attn): 0.1309, norm(output): 0.2324, norm(x): 0.7179, norm(y): 1.0087, norm:1.4052, tok/sec: 104376.02, flops:91.40, batch-reuse:1
@ 5538 train 4.4939 , allloss: 4.5163, dt: 1266.09ms, fracRes: 0.6006, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7205, norm(y): 1.0088, norm:1.6064, tok/sec: 103525.33, flops:90.66, batch-reuse:1
@ 5539 train 4.3988 , allloss: 4.4197, dt: 1258.42ms, fracRes: 0.6011, norm(attn): 0.1289, norm(output): 0.2324, norm(x): 0.7190, norm(y): 1.0090, norm:1.5838, tok/sec: 104155.97, flops:91.21, batch-reuse:1
@ 5540 train 4.4582 , allloss: 4.4790, dt: 1269.42ms, fracRes: 0.6005, norm(attn): 0.1289, norm(output): 0.2324, norm(x): 0.7183, norm(y): 1.0089, norm:1.3229, tok/sec: 103253.29, flops:90.42, batch-reuse:1
@ 5541 train 4.3951 , allloss: 4.4160, dt: 1283.06ms, fracRes: 0.6013, norm(attn): 0.1289, norm(output): 0.2314, norm(x): 0.7201, norm(y): 1.0090, norm:1.4787, tok/sec: 102155.74, flops:89.46, batch-reuse:1
@ 5542 train 4.4239 , allloss: 4.4443, dt: 1270.10ms, fracRes: 0.6027, norm(attn): 0.1270, norm(output): 0.2314, norm(x): 0.7197, norm(y): 1.0090, norm:1.5360, tok/sec: 103198.38, flops:90.37, batch-reuse:1
@ 5543 train 4.3818 , allloss: 4.4033, dt: 1295.46ms, fracRes: 0.6035, norm(attn): 0.1289, norm(output): 0.2324, norm(x): 0.7197, norm(y): 1.0088, norm:1.6672, tok/sec: 101178.11, flops:88.60, batch-reuse:1
@ 5544 train 4.3684 , allloss: 4.3894, dt: 1277.16ms, fracRes: 0.6021, norm(attn): 0.1309, norm(output): 0.2334, norm(x): 0.7207, norm(y): 1.0089, norm:1.2703, tok/sec: 102627.69, flops:89.87, batch-reuse:1
@ 5545 train 4.5687 , allloss: 4.5908, dt: 1253.92ms, fracRes: 0.6022, norm(attn): 0.1309, norm(output): 0.2314, norm(x): 0.7170, norm(y): 1.0088, norm:1.4851, tok/sec: 104530.17, flops:91.54, batch-reuse:1
@ 5546 train 4.4175 , allloss: 4.4387, dt: 1258.78ms, fracRes: 0.6007, norm(attn): 0.1309, norm(output): 0.2334, norm(x): 0.7190, norm(y): 1.0088, norm:1.7734, tok/sec: 104125.82, flops:91.18, batch-reuse:1
@ 5547 train 4.5297 , allloss: 4.5505, dt: 1281.52ms, fracRes: 0.6011, norm(attn): 0.1289, norm(output): 0.2324, norm(x): 0.7165, norm(y): 1.0087, norm:1.4838, tok/sec: 102278.55, flops:89.56, batch-reuse:1
@ 5548 train 4.3832 , allloss: 4.4059, dt: 1275.50ms, fracRes: 0.6005, norm(attn): 0.1309, norm(output): 0.2324, norm(x): 0.7147, norm(y): 1.0087, norm:1.4900, tok/sec: 102761.59, flops:89.99, batch-reuse:1
@ 5549 train 4.4452 , allloss: 4.4676, dt: 1250.75ms, fracRes: 0.6021, norm(attn): 0.1279, norm(output): 0.2324, norm(x): 0.7157, norm(y): 1.0089, norm:1.4930, tok/sec: 104794.90, flops:91.77, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7227, 0.2793, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7500, 0.0850, 0.1631, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5859, 0.0713, 0.1748, 0.1680, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1826, 0.0295, 0.0933, 0.2539, 0.4395, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2832, 0.0496, 0.0564, 0.1797, 0.2598, 0.1719, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0913, 0.0356, 0.0206, 0.1367, 0.4648, 0.1816, 0.0698, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3242, 0.4141, 0.1191, 0.0047, 0.0153, 0.0354, 0.0181, 0.0698, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3359, 0.1216, 0.0918, 0.0471, 0.1196, 0.0454, 0.0806, 0.0664, 0.0908, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2129, 0.2676, 0.1465, 0.0075, 0.0165, 0.0217, 0.0240, 0.0913, 0.0148, 0.1973, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1846, 0.0938, 0.1465, 0.0388, 0.0530, 0.0298, 0.0232, 0.0884, 0.0410, 0.1709, 0.1299, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0236, 0.0103, 0.0155, 0.2002, 0.1045, 0.0977, 0.0723, 0.0752, 0.3438, 0.0356, 0.0181, 0.0044, 0.0000, 0.0000, 0.0000],
        [0.0815, 0.0845, 0.0554, 0.0300, 0.0486, 0.0737, 0.0605, 0.0332, 0.0811, 0.1016, 0.1348, 0.1758, 0.0388, 0.0000, 0.0000],
        [0.1367, 0.0786, 0.0469, 0.0291, 0.0854, 0.0396, 0.0571, 0.0381, 0.0757, 0.0913, 0.1157, 0.0457, 0.0820, 0.0786, 0.0000],
        [0.1226, 0.0791, 0.0767, 0.1099, 0.0767, 0.0251, 0.0194, 0.0623, 0.0311, 0.0835, 0.0618, 0.0728, 0.0898, 0.0437, 0.0459]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0001, -0.0056,  0.0008,  ..., -0.0396,  0.0184,  0.0054],
        [-0.0393,  0.0058, -0.0098,  ...,  0.0066,  0.0042,  0.0063],
        [ 0.0272,  0.0338, -0.0087,  ..., -0.0223,  0.0236, -0.0124],
        ...,
        [ 0.0309,  0.0221,  0.0141,  ..., -0.0373,  0.0128,  0.0182],
        [-0.0501,  0.0006, -0.0350,  ...,  0.0094, -0.0014, -0.0117],
        [-0.0253,  0.0060, -0.0205,  ...,  0.0003, -0.0206, -0.0128]], device='cuda:0', requires_grad=True)
K: tensor([ 1.1562,  0.5781, -0.1387,  0.3730,  0.4727,  0.3438,  0.8164, -0.2910, -0.4355, -0.4531,  0.5586, -0.0664, -0.3555, -0.4102, -0.0121, -0.5469, -0.3320,  0.2969, -0.6445,  0.6055,  0.7070,  0.5312, -0.3242,  0.4375, -0.1289, -0.2305, -0.7461, -0.0903,  0.7344, -0.3594,  1.3203, -0.2344,
         0.7539, -0.4883,  0.8984,  1.0000, -1.2109,  0.0874, -0.3770, -1.7031,  0.1426, -0.0703, -0.6797,  1.0859, -0.2773,  0.1289, -0.1289,  0.9258,  0.6523, -0.3652,  0.5742, -0.0518, -1.3203,  0.4395,  0.8359, -0.6992, -0.3203,  0.3105,  1.0938, -0.1865, -0.2217, -0.3906, -0.4824, -0.0060],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0235, -0.0052, -0.0176,  ...,  0.0105, -0.0021, -0.0202],
        [ 0.0205, -0.0130,  0.0143,  ...,  0.0067,  0.0300,  0.0087],
        [-0.0383,  0.0409,  0.0036,  ..., -0.0164, -0.0299, -0.0506],
        ...,
        [ 0.0092,  0.0074,  0.0200,  ...,  0.0209,  0.0196,  0.0205],
        [ 0.0231, -0.0082,  0.0417,  ...,  0.0265,  0.0087,  0.0291],
        [ 0.0154, -0.0136,  0.0214,  ..., -0.0212,  0.0220,  0.0012]], device='cuda:0', requires_grad=True)
Q: tensor([-0.3633, -0.5508, -1.2422, -1.5156, -0.1387,  0.1045, -2.4062,  0.2031, -0.0483,  0.6055, -0.4043, -0.9180, -0.4336, -0.5273, -0.0359, -0.0742, -0.5820, -0.1123,  0.3086,  0.4473,  0.0703, -0.4590,  0.6562,  0.3574,  0.1445, -0.1299, -0.1582, -0.7695, -0.5703,  0.4629, -0.1865,  0.5039,
        -0.6914, -0.7461,  0.2051,  0.0820,  1.0938,  0.9180, -0.5156,  1.5391,  1.0625, -0.2832, -0.0072,  0.9297, -0.8242,  0.0693, -0.3691,  0.1592, -0.4219,  0.1738, -1.6328, -0.8672,  0.1196, -0.8242, -0.4512, -0.8359,  0.4375, -0.7969,  0.1582, -0.3027,  0.3066,  0.2188,  0.1895,  0.6719],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -0.9531,     -0.4258,     -0.3184,     -1.7812,     -1.1719,     -0.3613,      0.7266,     -1.1484,     -1.1562,     -2.5781,     -1.1328,      1.0000,     -1.3984,     -0.6680],
        [     0.0000,     -2.1875,     -1.5234,     -0.5664,     -0.2324,     -0.7188,     -1.2812,     -0.8047,     -0.1040,     -0.4180,      0.0072,     -1.0781,     -0.8750,      0.4668,     -0.7539],
        [     0.0000,     -2.1094,     -1.2109,     -1.2500,     -0.4453,     -1.1016,     -1.3672,     -2.2656,     -0.7539,     -0.9375,      0.9844,     -0.5547,     -2.1406,     -0.3613,     -0.7656],
        [     0.0000,     -1.8203,     -0.6719,      0.3320,      0.8789,     -0.7578,     -1.3438,     -1.0469,      0.6914,      0.6172,      0.2324,     -1.0938,     -1.1641,      1.1719,     -0.2119],
        [     0.0000,     -1.7422,     -1.6172,     -0.4590,     -0.0869,     -0.5039,      0.7148,     -0.5352,      0.7969,     -1.3516,     -0.4297,     -1.7812,     -1.1328,      0.7578,      0.0179],
        [     0.0000,     -0.9453,     -1.4844,      0.4023,      1.6250,      0.6836,     -0.2676,     -2.2812,      1.5391,      0.8086,      2.5469,     -0.8438,     -2.5312,      1.8359,      0.6602],
        [     0.0000,      0.2461,     -0.9961,     -4.2188,     -3.0469,     -2.2031,     -2.8750,     -1.5312,     -3.0625,     -0.9492,     -0.4258,      0.5938,     -0.4082,     -2.9375,     -1.2188],
        [     0.0000,     -1.0156,     -1.2969,     -1.9609,     -1.0312,     -2.0000,     -1.4297,     -1.6172,     -1.3047,     -0.7539,     -0.2656,     -0.9609,     -0.8438,     -1.2656,     -1.0469],
        [     0.0000,      0.2275,     -0.3789,     -3.3438,     -2.5625,     -2.2812,     -2.1875,     -0.8438,     -2.6719,     -0.0801,     -0.0835,      0.9922,      0.4727,     -2.6406,     -0.4062],
        [     0.0000,     -0.6758,     -0.2266,     -1.5547,     -1.2422,     -1.8203,     -2.0625,     -0.7305,     -1.5000,     -0.0742,     -0.3477,      0.3496,     -0.1318,     -1.3906,     -0.6914],
        [     0.0000,     -0.8320,     -0.4199,      2.1406,      1.4922,      1.4219,      1.1172,      1.1641,      2.6719,      0.4121,     -0.2676,     -1.6719,      0.5352,      2.5000,      1.0781],
        [     0.0000,      0.0381,     -0.3867,     -0.9961,     -0.5156,     -0.1001,     -0.2969,     -0.8945,     -0.0025,      0.2207,      0.5039,      0.7656,     -0.7422,      0.0172,      0.3418],
        [     0.0000,     -0.5469,     -1.0703,     -1.5469,     -0.4668,     -1.2344,     -0.8672,     -1.2734,     -0.5859,     -0.4004,     -0.1631,     -1.0938,     -0.5117,     -0.5508,     -0.7266],
        [     0.0000,     -0.4414,     -0.4707,     -0.1118,     -0.4688,     -1.5859,     -1.8438,     -0.6797,     -1.3750,     -0.3848,     -0.6836,     -0.5195,     -0.3145,     -1.0312,     -0.9805]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8115],
        [0.8193],
        [0.7660],
        [0.4646],
        [0.5164],
        [0.3945],
        [0.4827],
        [0.4098],
        [0.2533],
        [0.1366],
        [0.0637],
        [0.1467],
        [0.1611],
        [0.1184]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9844,     0.0151,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7344,     0.1709,     0.0962,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7852,     0.1104,     0.0654,     0.0383,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6211,     0.1299,     0.0427,     0.0752,     0.1309,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6172,     0.0918,     0.0574,     0.0503,     0.0835,     0.0986,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6914,     0.1025,     0.0193,     0.0107,     0.0287,     0.1030,     0.0461,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7344,     0.0579,     0.0282,     0.0181,     0.0447,     0.0530,     0.0349,     0.0280,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5742,     0.0615,     0.0381,     0.0306,     0.0201,     0.0544,     0.0801,     0.0210,     0.1206,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5156,     0.0461,     0.0505,     0.0664,     0.0226,     0.0728,     0.0327,     0.0659,     0.0811,     0.0449,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6680,     0.0287,     0.0014,     0.0027,     0.0050,     0.0085,     0.0134,     0.0020,     0.0981,     0.0009,     0.1709,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3926,     0.0645,     0.0354,     0.0255,     0.0293,     0.0635,     0.0620,     0.0649,     0.0486,     0.0479,     0.1318,     0.0337,     0.0000,     0.0000,     0.0000],
        [    0.5703,     0.0198,     0.0155,     0.0140,     0.0188,     0.0620,     0.0388,     0.0309,     0.0835,     0.0270,     0.0376,     0.0258,     0.0552,     0.0000,     0.0000],
        [    0.2930,     0.0287,     0.0204,     0.0294,     0.0137,     0.0413,     0.0723,     0.0162,     0.0903,     0.0165,     0.1592,     0.0292,     0.0292,     0.1611,     0.0000],
        [    0.2656,     0.0542,     0.0117,     0.0142,     0.0181,     0.0376,     0.0559,     0.0261,     0.0522,     0.0186,     0.2393,     0.0386,     0.0298,     0.0820,     0.0571]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0346, -0.0136, -0.0138,  ..., -0.0232, -0.0250,  0.0252],
        [-0.0157,  0.0182, -0.0203,  ...,  0.0180,  0.0056, -0.0434],
        [ 0.0101,  0.0315,  0.0165,  ...,  0.0105,  0.0166,  0.0154],
        ...,
        [-0.0046,  0.0003,  0.0201,  ...,  0.0408, -0.0219, -0.0118],
        [-0.0104, -0.0038, -0.0011,  ...,  0.0025, -0.0002, -0.0044],
        [ 0.0266,  0.0350,  0.0212,  ..., -0.0008, -0.0260,  0.0238]], device='cuda:0', requires_grad=True)
K: tensor([ 2.3750, -0.1572, -1.3359, -0.0040, -1.0156, -1.0625,  0.6250,  0.9727,  1.0234,  0.6641,  0.8750,  1.1562, -1.8047,  0.7695,  0.9727, -1.5859, -0.3828, -0.3164, -0.0374,  0.2109,  0.7930,  1.2891,  1.2109, -2.6562,  0.5352, -0.2422, -1.5625,  0.6367,  0.0173, -0.9297,  2.3438,  0.0903,
        -1.6484,  0.1895, -1.5078,  0.4219,  0.9648,  1.9453,  0.5234,  1.2266,  2.2812, -1.1719, -1.3750,  1.6562,  1.1172, -0.2080, -1.3906, -2.5938,  1.3203,  1.4375, -0.9023,  2.2500, -1.2969,  0.2373,  0.6367,  0.1094,  1.5234,  0.5469, -0.9648,  1.6172, -0.0317,  1.7422,  1.9922,  0.1011],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0200, -0.0092, -0.0141,  ..., -0.0005,  0.0105, -0.0103],
        [ 0.0187,  0.0030, -0.0556,  ..., -0.0129, -0.0083, -0.0178],
        [ 0.0409,  0.0279,  0.0306,  ..., -0.0191,  0.0242,  0.0167],
        ...,
        [-0.0192, -0.0194,  0.0164,  ...,  0.0195,  0.0012, -0.0404],
        [ 0.0430,  0.0167, -0.0110,  ..., -0.0075,  0.0058, -0.0060],
        [ 0.0102, -0.0306, -0.0203,  ...,  0.0089, -0.0049,  0.0157]], device='cuda:0', requires_grad=True)
Q: tensor([    -0.7734,     -0.0247,     -0.4922,     -0.4199,      0.6289,     -0.0361,     -0.0289,      0.8633,      0.4219,      0.2100,     -0.1602,     -1.4688,      0.2637,     -1.0000,     -0.1914,      2.1562,     -0.4805,     -0.0038,     -1.3359,     -1.1406,      0.9688,     -0.3086,
            -0.6250,      0.7930,     -0.6250,      0.2139,      1.0547,     -0.6133,     -0.2930,      0.0021,     -0.7695,     -1.1094,     -0.6719,      0.1270,      1.0547,      1.0391,      1.0156,     -0.0151,      0.3555,      0.0664,      0.3750,      0.8516,     -0.6992,     -0.0752,
             0.3242,     -1.3672,      0.6914,     -0.8555,      0.6992,     -0.0579,      0.0786,     -0.8008,     -1.1484,     -0.2383,      0.2129,      1.4609,     -0.6445,      0.6797,      0.8125,      0.1084,     -0.5742,     -0.1865,     -0.6328,     -0.8320], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -4.1875, -6.9062, -7.7188, -6.5000, -4.9062, -5.5938, -6.9688, -3.5000, -8.1875, -6.4062, -7.9375, -6.5938, -3.8906, -4.0938],
        [ 0.0000, -1.4531, -2.0312, -3.0938, -2.5625, -1.7422, -1.8750, -1.3516, -2.2188, -1.8281, -2.1562, -1.7188, -1.3672, -2.1250, -0.9414],
        [ 0.0000, -1.9609, -2.4844, -3.0156, -3.4219, -2.6406, -2.6406, -3.8906, -2.6562, -3.3906, -3.2188, -3.3281, -3.6406, -2.9219, -1.2734],
        [ 0.0000, -1.5625, -2.6719, -2.1094, -1.5547, -1.7422, -1.7422, -1.8594,  0.6484, -2.3594,  0.9492, -1.8906, -1.4297,  1.4844, -0.1670],
        [ 0.0000, -1.9062, -2.3750, -2.5156, -2.0000, -1.8359, -1.6016, -1.9219, -1.3438, -1.8906, -1.6406, -1.5625, -2.0938, -1.1875, -0.8438],
        [ 0.0000, -1.9062, -3.5781, -4.1562, -3.1719, -1.8984, -2.7031, -3.0000, -1.0234, -3.7656, -3.3594, -3.3906, -2.5781, -1.3906, -1.8281],
        [ 0.0000, -2.5469, -3.2656, -3.7031, -2.7969, -2.6250, -3.0469, -3.2656, -1.9062, -3.3594, -3.1406, -3.4688, -2.9688, -2.2031, -2.3750],
        [ 0.0000, -2.2344, -2.7188, -2.9219, -3.3438, -2.3594, -1.9688, -3.3125, -1.5625, -3.4062, -1.2734, -2.8281, -2.9375, -1.0625, -1.2188],
        [ 0.0000, -2.4219, -2.3281, -2.0469, -3.1250, -1.9609, -2.7500, -2.0625, -1.8516, -2.4375, -1.7031, -1.9531, -1.5312, -1.6250, -3.0625],
        [ 0.0000, -3.1406, -6.1562, -5.5000, -4.9062, -4.3750, -3.9062, -5.8125, -1.9141, -6.5938, -1.3672, -5.6875, -5.6562, -1.3906, -3.8281],
        [ 0.0000, -1.8125, -2.4062, -2.7344, -2.5938, -1.8203, -1.8438, -1.7969, -2.0938, -2.1094, -1.0938, -2.4531, -1.2109, -1.6172, -1.3906],
        [ 0.0000, -3.3594, -3.6094, -3.7031, -3.4219, -2.2188, -2.6875, -2.9219, -1.9219, -3.0469, -2.7188, -3.0938, -2.3438, -1.7891, -3.0312],
        [ 0.0000, -2.3281, -2.6719, -2.2969, -3.0625, -1.9609, -1.3984, -2.8906, -1.1797, -2.8750, -0.6133, -2.3125, -2.3125, -0.6016, -1.4922],
        [ 0.0000, -1.5859, -3.1094, -2.9219, -2.6875, -1.9531, -1.5547, -2.3125, -1.6250, -2.6562, -0.1011, -1.9297, -2.1875, -1.1719, -1.5391]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8271],
        [0.5621],
        [0.5188],
        [0.5955],
        [0.4486],
        [0.4724],
        [0.3734],
        [0.3896],
        [0.3442],
        [0.4511],
        [0.2420],
        [0.3022],
        [0.2649],
        [0.2809]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0015,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0049,     0.0056,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0023,     0.0016,     0.0007,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0002,     0.0003,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0013,     0.0021,     0.0003,     0.0001,     0.0010,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9844,     0.0042,     0.0055,     0.0011,     0.0004,     0.0024,     0.0040,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0034,     0.0037,     0.0009,     0.0002,     0.0016,     0.0015,     0.0018,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0004,     0.0007,     0.0001,     0.0000,     0.0003,     0.0003,     0.0001,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0009,     0.0007,     0.0002,     0.0000,     0.0004,     0.0004,     0.0003,     0.0003,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0002,     0.0002,     0.0000,     0.0000,     0.0001,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0013,     0.0012,     0.0005,     0.0001,     0.0006,     0.0008,     0.0003,     0.0006,     0.0002,     0.0000,     0.0014,     0.0000,     0.0000,     0.0000],
        [    0.9805,     0.0029,     0.0039,     0.0010,     0.0003,     0.0015,     0.0019,     0.0013,     0.0014,     0.0011,     0.0001,     0.0029,     0.0028,     0.0000,     0.0000],
        [    0.9961,     0.0004,     0.0007,     0.0001,     0.0000,     0.0003,     0.0003,     0.0001,     0.0002,     0.0001,     0.0000,     0.0003,     0.0002,     0.0001,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0071,  0.0011,  0.0193,  ..., -0.0186,  0.0001, -0.0130],
        [ 0.0293, -0.0430, -0.0224,  ..., -0.0062, -0.0125, -0.0308],
        [ 0.0412, -0.0377,  0.0326,  ..., -0.0042, -0.0160,  0.0084],
        ...,
        [ 0.0357,  0.0146, -0.0282,  ..., -0.0020,  0.0224,  0.0171],
        [ 0.0115,  0.0257, -0.0155,  ..., -0.0168, -0.0412, -0.0172],
        [ 0.0212, -0.0100,  0.0089,  ...,  0.0002, -0.0234,  0.0195]], device='cuda:0', requires_grad=True)
K: tensor([-1.1875, -0.6719, -1.8984, -1.5234, -1.8750,  2.5469, -1.5156,  2.4219, -1.6016, -2.1094,  1.1875, -0.1807, -1.6484, -1.4297, -2.0312, -0.0393,  1.6172,  3.1406, -2.4531,  1.8125,  2.3594,  1.3594, -1.1875, -0.3398,  1.8906, -1.2812,  0.0669, -2.4375,  1.7031,  1.7031,  0.9688,  2.8906,
        -1.3750,  1.8672,  2.0625, -1.4844, -1.4922,  1.0938,  1.9297, -2.0625,  1.5234, -2.0781, -0.0884,  1.2109,  0.7734,  2.4531, -1.2969, -2.4375,  1.4688,  2.5156, -1.5234, -2.5312,  1.8281,  1.4453,  2.0312, -1.1484, -1.4922, -2.4844, -1.5547, -1.6172, -2.9844, -1.7734,  1.7109,  1.9766],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0099,  0.0176,  0.0256,  ..., -0.0160,  0.0398, -0.0070],
        [ 0.0068,  0.0366,  0.0078,  ...,  0.0207,  0.0229, -0.0183],
        [-0.0103, -0.0029,  0.0204,  ..., -0.0198,  0.0476, -0.0231],
        ...,
        [ 0.0044, -0.0071,  0.0176,  ..., -0.0292, -0.0030,  0.0016],
        [ 0.0152, -0.0059,  0.0167,  ...,  0.0260,  0.0204, -0.0140],
        [ 0.0237, -0.0318, -0.0243,  ...,  0.0232,  0.0274,  0.0097]], device='cuda:0', requires_grad=True)
Q: tensor([ 1.7266,  1.4688, -0.6445,  0.3652,  0.7891, -0.2236,  0.7109, -0.7305,  1.3828,  0.8750, -0.5000,  0.4395,  1.3906,  1.8203,  0.5391, -1.8047, -1.2656, -2.0938,  1.7188, -0.1709, -1.2031,  0.4863,  1.1016,  0.8398, -0.8203, -0.7344,  0.6367,  0.6367, -1.1797, -1.2500, -1.3125, -0.5625,
         0.2188, -1.7422, -0.7070,  0.1797,  1.6328,  0.0310, -0.4961, -0.4316, -1.7578,  2.3281,  1.3281, -0.9062, -0.3613, -0.8438,  1.6797,  0.6875, -1.3516, -1.4609,  1.3438, -0.5234, -1.4766, -0.5273, -1.2578,  1.5625,  0.4668,  1.5859,  1.7734,  2.6406,  1.8906,  1.1484, -1.9062, -0.0184],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000,  -6.5000,  -6.3438,  -7.5000,  -8.6250,  -6.9062,  -6.9062,  -7.4688,  -7.5938,  -7.8750,  -9.5000,  -6.8125,  -6.7188,  -7.8438,  -8.4375],
        [  0.0000,  -5.2812,  -5.1562,  -6.4375,  -7.3125,  -5.7188,  -5.7500,  -5.7500,  -5.9062,  -6.1562,  -7.8750,  -5.4375,  -5.4688,  -6.1875,  -6.0938],
        [  0.0000,  -6.0625,  -6.4375,  -7.3125,  -8.8750,  -6.7500,  -6.9688,  -7.2500,  -7.3125,  -7.5000,  -9.2500,  -6.8125,  -6.6562,  -7.6875,  -8.0000],
        [  0.0000,  -8.5625,  -8.1250,  -9.8125, -10.1875,  -8.8125,  -8.3125, -10.0625,  -9.2500, -10.9375, -12.0625,  -8.6875,  -8.8750,  -9.6875, -11.1875],
        [  0.0000,  -6.6250,  -6.1875,  -8.1250,  -8.8750,  -6.9375,  -6.6875,  -7.4688,  -7.6250,  -8.4375,  -9.7500,  -7.1250,  -7.0625,  -7.8750,  -8.2500],
        [  0.0000,  -5.4688,  -5.1875,  -6.7812,  -7.8438,  -6.0312,  -5.5000,  -6.2500,  -6.4688,  -7.0625,  -8.6250,  -5.4375,  -5.8750,  -6.6250,  -6.7812],
        [  0.0000,  -5.6875,  -5.5938,  -6.9688,  -8.6875,  -6.4062,  -6.5000,  -6.2812,  -6.4688,  -6.2812,  -9.3750,  -5.7812,  -5.7812,  -6.9062,  -6.5938],
        [  0.0000,  -7.7812,  -7.3125,  -9.1250, -10.6250,  -8.1875,  -8.0625,  -9.1250,  -8.5000,  -9.7500, -11.8125,  -8.0000,  -8.2500,  -8.9375,  -9.7500],
        [  0.0000,  -7.0625,  -7.3125,  -8.3125, -10.1875,  -7.7188,  -7.7188,  -8.2500,  -8.1875,  -8.3125, -11.0000,  -7.8438,  -7.6562,  -8.6875,  -9.3750],
        [  0.0000,  -8.6250,  -8.4375, -10.3750, -11.8125,  -9.3750,  -9.6250, -10.0625, -10.0625, -10.6250, -13.1875,  -9.0625,  -9.1250, -10.4375, -11.1875],
        [  0.0000,  -6.6875,  -6.7188,  -7.6562,  -8.8125,  -7.3750,  -7.1875,  -8.1250,  -7.4062,  -8.7500, -10.0000,  -6.5625,  -7.1562,  -7.8750,  -9.0625],
        [  0.0000,  -5.8125,  -5.5312,  -6.8750,  -8.2500,  -6.4375,  -6.2188,  -6.5938,  -6.5938,  -6.7812,  -9.2500,  -5.8125,  -5.8750,  -6.9375,  -7.2500],
        [  0.0000,  -7.8125,  -7.3125,  -9.2500, -10.6875,  -8.1875,  -8.1250,  -9.1250,  -8.5625,  -9.7500, -11.8125,  -8.0625,  -8.3125,  -9.0000,  -9.8125],
        [  0.0000, -10.3750, -10.1875, -12.5625, -12.8125, -11.1875, -10.5625, -12.2500, -12.1250, -13.5000, -15.5625, -11.5000, -11.6250, -12.8125, -12.9375]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9948],
        [0.9886],
        [0.9964],
        [0.9964],
        [0.9967],
        [0.9915],
        [0.9922],
        [0.9987],
        [0.9990],
        [0.9984],
        [0.9938],
        [0.9967],
        [0.9987],
        [0.9993]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1797, 0.8203, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0435, 0.4980, 0.4590, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0166, 0.3359, 0.4336, 0.2148, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0688, 0.4160, 0.3066, 0.0718, 0.1367, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0391, 0.3027, 0.2217, 0.0840, 0.0850, 0.2695, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0079, 0.1001, 0.0294, 0.0121, 0.0023, 0.0135, 0.8359, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0114, 0.0581, 0.0430, 0.0063, 0.0104, 0.0513, 0.7109, 0.1079, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0195, 0.0361, 0.0129, 0.0026, 0.0072, 0.0247, 0.8438, 0.0312, 0.0201, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0181, 0.0688, 0.0310, 0.0082, 0.0137, 0.0430, 0.3984, 0.1396, 0.0874, 0.1914, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0122, 0.0280, 0.0161, 0.0037, 0.0033, 0.0162, 0.6797, 0.0608, 0.0281, 0.1196, 0.0310, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0200, 0.0386, 0.0292, 0.0059, 0.0072, 0.0212, 0.2061, 0.0618, 0.0295, 0.1064, 0.0938, 0.3789, 0.0000, 0.0000, 0.0000],
        [0.0172, 0.0349, 0.0210, 0.0022, 0.0033, 0.0165, 0.1943, 0.0344, 0.0164, 0.0723, 0.0535, 0.3184, 0.2158, 0.0000, 0.0000],
        [0.0437, 0.0253, 0.0079, 0.0011, 0.0027, 0.0113, 0.4258, 0.0126, 0.0066, 0.0386, 0.0396, 0.2246, 0.1035, 0.0571, 0.0000],
        [0.0280, 0.0162, 0.0058, 0.0016, 0.0016, 0.0056, 0.1040, 0.0111, 0.0104, 0.0215, 0.0168, 0.1357, 0.1069, 0.0728, 0.4629]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0121,  0.0100,  0.0034,  ..., -0.0333, -0.0059, -0.0376],
        [-0.0334, -0.0168, -0.0045,  ...,  0.0044, -0.0038, -0.0006],
        [-0.0377, -0.0067,  0.0452,  ..., -0.0138, -0.0182, -0.0267],
        ...,
        [-0.0220, -0.0261, -0.0060,  ..., -0.0397, -0.0302, -0.0582],
        [-0.0162, -0.0227, -0.0252,  ..., -0.0008, -0.0138,  0.0288],
        [-0.0091,  0.0098,  0.0165,  ..., -0.0118,  0.0079, -0.0093]], device='cuda:0', requires_grad=True)
K: tensor([-1.8750, -1.8125, -1.2344, -0.1758, -1.3906, -1.9922, -2.2344,  1.7891,  0.9453, -2.0781,  1.0703, -1.2578,  1.3750, -2.7188,  0.3770,  2.2344,  1.7734, -0.5859,  0.1787,  0.5078,  0.0771, -1.2109, -0.1396, -1.2578, -1.2109,  0.6094,  0.3184,  2.3594, -0.6680,  1.8047, -1.4531, -2.1250,
        -1.5781, -0.7422,  0.6562, -1.8281,  3.0312,  0.0417, -1.6719,  0.8945, -2.6719,  1.3672,  1.6250,  2.1719,  0.7617, -0.6250, -1.9922, -0.9844,  2.8906,  0.7305,  1.2734, -0.5078, -0.9180, -2.2969, -2.1250, -1.9688,  2.5938, -1.7031, -1.6094,  1.5547, -0.7852,  0.3965,  0.8711, -1.9375],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[    -0.0142,     -0.0000,      0.0148,  ...,      0.0256,     -0.0132,     -0.0182],
        [     0.0384,     -0.0184,      0.0186,  ...,     -0.0092,      0.0167,      0.0187],
        [    -0.0189,      0.0132,      0.0452,  ...,      0.0203,      0.0228,     -0.0074],
        ...,
        [     0.0184,      0.0004,     -0.0328,  ...,     -0.0090,      0.0026,     -0.0077],
        [    -0.0039,      0.0381,     -0.0120,  ...,      0.0184,      0.0081,     -0.0287],
        [    -0.0076,     -0.0047,     -0.0050,  ...,      0.0134,      0.0023,     -0.0032]], device='cuda:0', requires_grad=True)
Q: tensor([-0.0082, -0.3730, -1.1328, -0.4473, -2.8125,  0.6367,  0.2139,  0.0194,  0.0786,  0.1729,  1.2109,  2.3281, -1.6719, -0.6758,  2.3125, -1.1719, -3.7344, -0.4648, -0.7070, -0.1768, -2.0625,  2.0312, -3.8438, -0.3145, -0.6094, -1.1641,  2.4531,  1.4609, -3.6562, -0.4863, -0.2139, -0.1582,
        -3.7344,  2.6406, -1.9531, -0.2773,  1.0625, -0.8516, -1.2188,  1.6641, -0.0114, -0.0081,  1.5156, -0.1719, -1.8281, -2.2812,  0.0116, -2.5000,  0.4004,  1.9766,  0.0439, -0.6562, -1.0391, -0.2949,  0.6133,  0.4277, -0.9609,  0.3477, -0.7578, -0.5547, -2.7500,  2.8438,  1.0156, -2.8906],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  1.5156,  1.7031,  0.6836,  0.9922,  1.5312,  3.5000,  2.2969,  1.8906,  2.4531,  1.7656,  3.2812,  3.3750,  3.0156,  5.3438],
        [ 0.0000,  2.4375,  2.3594,  1.8750,  2.0312,  2.6250,  4.2500,  3.7031,  3.4219,  4.0625,  3.7812,  4.9688,  5.5312,  4.9688,  6.2812],
        [ 0.0000,  3.0000,  3.2656,  2.5625,  2.9531,  3.7500,  4.8125,  4.3438,  4.7188,  5.6875,  5.3125,  6.8438,  6.6562,  6.6250,  7.9375],
        [ 0.0000,  1.7969,  1.4922,  0.0437,  0.6875,  1.8281,  4.5938,  2.8906,  2.2188,  3.9062,  2.6094,  4.8750,  4.8750,  4.2188,  7.2812],
        [ 0.0000,  2.0469,  1.7344,  0.7695,  0.7773,  1.9297,  5.1250,  3.3125,  2.8594,  3.9062,  3.6875,  5.1875,  5.0938,  4.8438,  8.2500],
        [ 0.0000,  2.5312,  1.3125,  0.4238, -1.2422,  0.5352,  4.6562,  2.6094,  0.8867,  2.5469, -1.0234,  4.1562,  4.9062,  2.6875,  6.7188],
        [ 0.0000,  1.6250,  1.3281, -0.5938, -0.0962,  1.5000,  4.1250,  2.2500,  1.5938,  3.0938,  2.6719,  4.5000,  4.4062,  3.7500,  7.0000],
        [ 0.0000,  0.6094, -0.4199, -2.0312, -1.0078,  0.2314,  3.7656,  0.4668,  0.0254,  1.5625,  1.6328,  3.2812,  2.5625,  2.1875,  6.3750],
        [ 0.0000,  1.3359,  0.5430, -0.7852, -0.2734,  0.8711,  3.0938,  2.0469,  1.5781,  2.3594,  2.5312,  3.7969,  3.9688,  3.5312,  5.7812],
        [ 0.0000,  0.8281,  0.2773, -1.1953, -1.2969,  0.2812,  4.0312,  1.6094,  0.8359,  2.2812,  0.9336,  4.3750,  4.0625,  3.1094,  6.8750],
        [ 0.0000,  0.6562,  0.3770, -1.2266, -1.0234,  0.0586,  2.3281,  1.1250,  0.3906,  1.6719,  1.5469,  2.9375,  3.0938,  2.3281,  4.4688],
        [ 0.0000,  0.7109,  0.2012, -2.0625, -1.6328, -0.0427,  2.4219,  0.6953, -0.0444,  1.4375,  1.1406,  2.9219,  2.5312,  1.9922,  5.4375],
        [ 0.0000, -0.5469, -1.7109, -3.6406, -2.7656, -1.3516,  2.2812, -1.2500, -1.8984, -0.1270, -0.1006,  1.6406,  0.8633,  0.2695,  4.7812],
        [ 0.0000, -0.5469, -1.5703, -2.8906, -2.8438, -1.6016,  1.3125, -0.9258, -0.9883, -0.2637, -0.5078,  1.5781,  1.3438,  0.9570,  2.7969]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4670],
        [0.1652],
        [0.1416],
        [0.2017],
        [0.1742],
        [0.3094],
        [0.0810],
        [0.1231],
        [0.0741],
        [0.1247],
        [0.0674],
        [0.0624],
        [0.0896],
        [0.0975]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0408,     0.9609,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0168,     0.9375,     0.0471,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0369,     0.5078,     0.0381,     0.4180,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0236,     0.8477,     0.0664,     0.0189,     0.0432,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0093,     0.3379,     0.0576,     0.0100,     0.0669,     0.5195,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0084,     0.2832,     0.3652,     0.0347,     0.0190,     0.2090,     0.0796,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0140,     0.0522,     0.0275,     0.0090,     0.3594,     0.0225,     0.0121,     0.5039,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0354,     0.0884,     0.0243,     0.0018,     0.0130,     0.0126,     0.0128,     0.7305,     0.0820,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0153,     0.1133,     0.0165,     0.0403,     0.0092,     0.0065,     0.1138,     0.3066,     0.0312,     0.3477,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0569,     0.0071,     0.0063,     0.0008,     0.0020,     0.0018,     0.0044,     0.1992,     0.0160,     0.6797,     0.0243,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0112,     0.1689,     0.0181,     0.1357,     0.0047,     0.0099,     0.4473,     0.0364,     0.0039,     0.0369,     0.1162,     0.0110,     0.0000,     0.0000,     0.0000],
        [    0.0103,     0.0110,     0.0008,     0.0008,     0.0483,     0.0011,     0.0047,     0.0098,     0.3164,     0.1182,     0.0767,     0.0439,     0.3574,     0.0000,     0.0000],
        [    0.0085,     0.0172,     0.0011,     0.0001,     0.0024,     0.0009,     0.0028,     0.0297,     0.0062,     0.2295,     0.0068,     0.0131,     0.6445,     0.0386,     0.0000],
        [    0.0310,     0.3281,     0.0134,     0.0618,     0.0062,     0.0057,     0.4512,     0.0058,     0.0012,     0.0021,     0.0226,     0.0025,     0.0053,     0.0014,     0.0620]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0232, -0.0455,  0.0087,  ...,  0.0341,  0.0376, -0.0231],
        [ 0.0067, -0.0521, -0.0155,  ...,  0.0130,  0.0069, -0.0053],
        [-0.0232,  0.0020, -0.0181,  ...,  0.0257, -0.0333, -0.0118],
        ...,
        [ 0.0360,  0.0152, -0.0332,  ..., -0.0080, -0.0104,  0.0210],
        [-0.0077,  0.0014,  0.0298,  ...,  0.0488, -0.0324,  0.0116],
        [-0.0341,  0.0440, -0.0493,  ..., -0.0030,  0.0226,  0.0349]], device='cuda:0', requires_grad=True)
K: tensor([ 0.8750, -0.9961, -0.5938,  0.1631, -0.8164,  0.2910,  0.5000, -0.3848, -0.4922, -2.4219, -1.5625, -0.6562,  0.3125, -0.7969, -0.8320,  0.4727,  0.9414,  1.3750, -2.9375,  0.8867,  0.7031, -0.9531, -2.4219,  0.9922,  0.8984,  0.6797, -0.8828,  1.1562, -0.9453, -2.1406, -0.3770,  1.5625,
        -0.5391,  2.0938,  0.9883,  0.8398,  0.7109, -1.0469, -0.5039, -1.2891, -0.4805, -1.5469, -1.7188, -0.3066,  0.2412, -1.3047, -0.1602,  0.2871, -0.8359, -1.6641,  1.0234,  0.8789, -0.6367, -0.2637,  1.1172,  0.4336,  0.4512, -3.2344, -0.9531,  0.1836,  0.0090, -0.7227,  1.2344, -1.2109],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0115, -0.0079, -0.0076,  ..., -0.0285, -0.0295, -0.0070],
        [ 0.0068, -0.0039, -0.0038,  ...,  0.0144, -0.0219,  0.0351],
        [ 0.0143, -0.0143, -0.0004,  ..., -0.0018, -0.0217, -0.0079],
        ...,
        [ 0.0265, -0.0426, -0.0104,  ...,  0.0239,  0.0125,  0.0074],
        [ 0.0007,  0.0040,  0.0132,  ...,  0.0144,  0.0142, -0.0156],
        [-0.0088, -0.0154, -0.0123,  ...,  0.0270, -0.0013, -0.0318]], device='cuda:0', requires_grad=True)
Q: tensor([-0.6406,  0.6758,  1.1953,  0.1270,  0.0074, -1.2344, -0.2158, -2.7031, -0.8711,  0.4355, -1.0547,  1.5391,  0.5000, -0.8633, -0.4082, -1.2344,  0.0476,  0.0918, -1.1094,  1.5078,  1.0156, -1.3984,  1.1094, -1.1094,  0.5508,  1.2578, -2.0469,  1.6328, -1.4375,  1.9062, -2.0469, -2.2031,
        -1.2812,  0.9258, -0.9414, -1.3750, -0.7734,  0.0518,  2.0156, -1.5391, -0.0918,  0.8516, -0.6250,  2.1406, -0.5469,  1.5391, -1.3516,  1.6875, -0.1055, -1.5703, -0.6719,  2.3281, -1.0156,  0.4512, -0.5234, -0.0149, -1.4297, -0.2402, -0.0525,  0.9961,  0.7031, -0.4688, -0.7227, -0.9570],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  3.1562,  1.7109,  1.2031,  1.2422,  2.5312,  1.7344,  2.6562,  1.1797,  2.5625,  1.9766,  1.8672,  2.6719,  1.1875,  1.0391],
        [ 0.0000,  4.0312,  1.0312,  4.6250, -0.0261,  0.5234,  4.5938, -0.1855, -3.6719, -2.5625,  1.2734, -2.4375, -0.6250, -3.9531, -0.5664],
        [ 0.0000,  2.6250,  0.0332,  2.4219,  1.5469, -0.2695,  2.8438, -0.4844,  0.0200, -1.4297,  1.9531, -1.4062, -0.8867, -0.1650,  0.3105],
        [ 0.0000,  3.5781,  1.0312, -0.2217,  0.6055,  2.2344,  0.9766,  4.2500,  0.6602,  4.4375,  1.1250,  1.8359,  4.3125,  0.3047, -0.3691],
        [ 0.0000,  3.5938,  1.8203,  0.0718,  1.9766,  4.0312,  1.9375,  4.1250,  1.2656,  3.7344,  0.9883,  1.7891,  3.0625,  0.7266,  0.8242],
        [ 0.0000,  3.5312,  3.7812,  1.4219,  0.8242,  3.2188,  2.2500,  5.9688,  2.4219,  4.6562,  1.4844,  2.9062,  3.8281,  0.7188,  2.9375],
        [ 0.0000,  1.3203,  0.6758, -0.4395,  3.2500,  0.4727, -0.1445,  3.5938,  6.0938,  4.6250,  2.4531,  2.3438,  3.3906,  5.6875,  2.3438],
        [ 0.0000,  0.9180, -0.3730, -3.0000, -1.0000, -1.0312, -1.0156,  3.0312,  0.8438,  4.0938, -0.0522,  0.7305,  3.6719,  1.1094,  0.6133],
        [ 0.0000,  2.0000,  0.0684,  0.9648, -0.5078, -0.8594,  2.0000,  3.0000,  0.7148,  3.1250,  2.8281,  1.3594,  4.1250,  1.6328,  1.3516],
        [ 0.0000, -2.0781, -2.2031, -4.2812, -3.3438, -3.4219, -2.5469,  1.2578, -1.2656,  2.4844, -0.8477,  1.0078,  2.2344, -0.5977, -0.7695],
        [ 0.0000,  2.7031,  0.4805,  2.5000, -0.8672, -0.1221,  3.6875,  1.1797, -1.0547,  1.1875,  2.3438, -0.0129,  3.1562, -0.1953,  1.0703],
        [ 0.0000,  0.0718, -2.5000, -2.5000,  1.5469, -2.2656, -0.7734, -0.0474,  3.4219,  2.4375,  2.0156,  1.4531,  3.5469,  5.6562,  1.6562],
        [ 0.0000,  0.7070, -2.0781, -4.0312, -1.2500, -2.1875, -1.1016,  1.2500, -0.3125,  3.2969, -0.2168,  0.4355,  4.3438,  1.5156,  0.0332],
        [ 0.0000,  2.3594, -0.8359,  0.6875, -1.6094, -1.6953,  2.6719, -1.6875, -3.2344, -2.7031, -0.3203, -2.5312, -1.7734, -3.0781,  0.6914]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.1235],
        [0.1060],
        [0.0504],
        [0.0526],
        [0.0799],
        [0.0072],
        [0.0148],
        [0.0201],
        [0.0291],
        [0.0256],
        [0.0217],
        [0.0338],
        [0.0205],
        [0.0291]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.1191 a:0.1118,:0.0684 and:0.0806atoes:0.1689,:0.6016 a:0.1182iced:0.1973)
iced
------
		( a:0.1118,:0.0684 and:0.0806atoes:0.1689,:0.6016 a:0.1182iced:0.1973 with:0.1138)
 with a white, white, and white.
The most common type of
@ 5550 train 4.4378 , allloss: 4.4585, dt: 1664.95ms, fracRes: 0.6017, norm(attn): 0.1289, norm(output): 0.2324, norm(x): 0.7154, norm(y): 1.0089, norm:1.4835, tok/sec: 78724.32, flops:68.94, batch-reuse:1
@ 5551 train 4.3959 , allloss: 4.4187, dt: 1283.83ms, fracRes: 0.6016, norm(attn): 0.1299, norm(output): 0.2324, norm(x): 0.7181, norm(y): 1.0089, norm:1.7628, tok/sec: 102094.65, flops:89.40, batch-reuse:1
@ 5552 train 4.4484 , allloss: 4.4695, dt: 1254.68ms, fracRes: 0.6023, norm(attn): 0.1299, norm(output): 0.2334, norm(x): 0.7194, norm(y): 1.0089, norm:1.2755, tok/sec: 104466.76, flops:91.48, batch-reuse:1
@ 5553 train 4.4371 , allloss: 4.4591, dt: 1261.89ms, fracRes: 0.6029, norm(attn): 0.1279, norm(output): 0.2314, norm(x): 0.7183, norm(y): 1.0089, norm:1.6632, tok/sec: 103869.26, flops:90.96, batch-reuse:1
@ 5554 train 4.3998 , allloss: 4.4208, dt: 1267.96ms, fracRes: 0.6019, norm(attn): 0.1270, norm(output): 0.2334, norm(x): 0.7189, norm(y): 1.0089, norm:1.6806, tok/sec: 103372.52, flops:90.52, batch-reuse:1
@ 5555 train 4.3823 , allloss: 4.4036, dt: 1262.60ms, fracRes: 0.6006, norm(attn): 0.1299, norm(output): 0.2324, norm(x): 0.7169, norm(y): 1.0089, norm:1.5932, tok/sec: 103811.15, flops:90.91, batch-reuse:1
@ 5556 train 4.4227 , allloss: 4.4442, dt: 1260.41ms, fracRes: 0.6003, norm(attn): 0.1309, norm(output): 0.2334, norm(x): 0.7182, norm(y): 1.0088, norm:1.3552, tok/sec: 103991.61, flops:91.06, batch-reuse:1
@ 5557 train 4.4014 , allloss: 4.4231, dt: 1260.27ms, fracRes: 0.6010, norm(attn): 0.1289, norm(output): 0.2334, norm(x): 0.7182, norm(y): 1.0088, norm:1.5463, tok/sec: 104003.26, flops:91.07, batch-reuse:1
@ 5558 train 4.3712 , allloss: 4.3934, dt: 1290.10ms, fracRes: 0.6018, norm(attn): 0.1299, norm(output): 0.2314, norm(x): 0.7184, norm(y): 1.0089, norm:1.3696, tok/sec: 101598.45, flops:88.97, batch-reuse:1
@ 5559 train 4.4807 , allloss: 4.5023, dt: 1291.36ms, fracRes: 0.6022, norm(attn): 0.1318, norm(output): 0.2314, norm(x): 0.7205, norm(y): 1.0089, norm:1.8381, tok/sec: 101498.98, flops:88.88, batch-reuse:1
@ 5560 train 4.4065 , allloss: 4.4273, dt: 1302.13ms, fracRes: 0.6018, norm(attn): 0.1318, norm(output): 0.2324, norm(x): 0.7210, norm(y): 1.0089, norm:1.4313, tok/sec: 100659.69, flops:88.15, batch-reuse:1
@ 5561 train 4.3865 , allloss: 4.4114, dt: 1264.52ms, fracRes: 0.6012, norm(attn): 0.1309, norm(output): 0.2324, norm(x): 0.7180, norm(y): 1.0089, norm:1.5254, tok/sec: 103653.35, flops:90.77, batch-reuse:1
@ 5562 train 4.2713 , allloss: 4.2929, dt: 1269.55ms, fracRes: 0.6012, norm(attn): 0.1279, norm(output): 0.2305, norm(x): 0.7162, norm(y): 1.0089, norm:1.4309, tok/sec: 103242.86, flops:90.41, batch-reuse:1
@ 5563 train 4.4228 , allloss: 4.4442, dt: 1247.15ms, fracRes: 0.6005, norm(attn): 0.1289, norm(output): 0.2324, norm(x): 0.7153, norm(y): 1.0087, norm:1.4342, tok/sec: 105096.97, flops:92.03, batch-reuse:1
@ 5564 train 4.4638 , allloss: 4.4855, dt: 1263.18ms, fracRes: 0.6011, norm(attn): 0.1309, norm(output): 0.2314, norm(x): 0.7202, norm(y): 1.0089, norm:1.5451, tok/sec: 103763.85, flops:90.86, batch-reuse:1
@ 5565 train 4.4185 , allloss: 4.4414, dt: 1260.21ms, fracRes: 0.6013, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7212, norm(y): 1.0088, norm:1.7659, tok/sec: 104008.33, flops:91.08, batch-reuse:1
@ 5566 train 4.4478 , allloss: 4.4694, dt: 1269.46ms, fracRes: 0.6014, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7189, norm(y): 1.0088, norm:1.4833, tok/sec: 103250.59, flops:90.42, batch-reuse:1
@ 5567 train 4.4200 , allloss: 4.4412, dt: 1250.19ms, fracRes: 0.6012, norm(attn): 0.1299, norm(output): 0.2334, norm(x): 0.7175, norm(y): 1.0088, norm:1.6512, tok/sec: 104841.80, flops:91.81, batch-reuse:1
@ 5568 train 4.5136 , allloss: 4.5376, dt: 1248.96ms, fracRes: 0.6022, norm(attn): 0.1309, norm(output): 0.2334, norm(x): 0.7155, norm(y): 1.0089, norm:1.6532, tok/sec: 104944.61, flops:91.90, batch-reuse:1
@ 5569 train 4.4072 , allloss: 4.4284, dt: 1277.95ms, fracRes: 0.6001, norm(attn): 0.1309, norm(output): 0.2334, norm(x): 0.7167, norm(y): 1.0089, norm:1.5254, tok/sec: 102564.62, flops:89.81, batch-reuse:1
@ 5570 train 4.3279 , allloss: 4.3498, dt: 1275.63ms, fracRes: 0.6009, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7162, norm(y): 1.0087, norm:1.3569, tok/sec: 102750.64, flops:89.98, batch-reuse:1
@ 5571 train 4.4358 , allloss: 4.4570, dt: 1259.93ms, fracRes: 0.6016, norm(attn): 0.1299, norm(output): 0.2334, norm(x): 0.7195, norm(y): 1.0088, norm:1.3580, tok/sec: 104031.50, flops:91.10, batch-reuse:1
@ 5572 train 4.4364 , allloss: 4.4573, dt: 1285.22ms, fracRes: 0.6025, norm(attn): 0.1289, norm(output): 0.2314, norm(x): 0.7188, norm(y): 1.0090, norm:1.3983, tok/sec: 101983.74, flops:89.31, batch-reuse:1
@ 5573 train 4.3807 , allloss: 4.4019, dt: 1266.13ms, fracRes: 0.6023, norm(attn): 0.1279, norm(output): 0.2314, norm(x): 0.7197, norm(y): 1.0090, norm:1.7041, tok/sec: 103521.95, flops:90.65, batch-reuse:1
@ 5574 train 4.4691 , allloss: 4.4900, dt: 1278.11ms, fracRes: 0.6015, norm(attn): 0.1289, norm(output): 0.2324, norm(x): 0.7179, norm(y): 1.0088, norm:1.5370, tok/sec: 102551.57, flops:89.80, batch-reuse:1
@ 5575 train 4.4433 , allloss: 4.4660, dt: 1281.66ms, fracRes: 0.6013, norm(attn): 0.1299, norm(output): 0.2314, norm(x): 0.7169, norm(y): 1.0089, norm:1.5859, tok/sec: 102267.08, flops:89.55, batch-reuse:1
@ 5576 train 4.3231 , allloss: 4.3442, dt: 1259.99ms, fracRes: 0.6003, norm(attn): 0.1309, norm(output): 0.2334, norm(x): 0.7152, norm(y): 1.0088, norm:1.2738, tok/sec: 104026.11, flops:91.09, batch-reuse:1
@ 5577 train 4.3180 , allloss: 4.3394, dt: 1277.72ms, fracRes: 0.6006, norm(attn): 0.1299, norm(output): 0.2324, norm(x): 0.7150, norm(y): 1.0089, norm:1.3005, tok/sec: 102582.78, flops:89.83, batch-reuse:1
@ 5578 train 4.4329 , allloss: 4.4540, dt: 1281.52ms, fracRes: 0.6006, norm(attn): 0.1299, norm(output): 0.2334, norm(x): 0.7149, norm(y): 1.0089, norm:1.4228, tok/sec: 102278.59, flops:89.56, batch-reuse:1
@ 5579 train 4.4824 , allloss: 4.5030, dt: 1256.65ms, fracRes: 0.6006, norm(attn): 0.1309, norm(output): 0.2324, norm(x): 0.7158, norm(y): 1.0087, norm:1.2330, tok/sec: 104302.43, flops:91.34, batch-reuse:1
@ 5580 train 4.6877 , allloss: 4.7078, dt: 1251.33ms, fracRes: 0.6003, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7138, norm(y): 1.0084, norm:1.4105, tok/sec: 104746.06, flops:91.72, batch-reuse:1
@ 5581 train 4.6346 , allloss: 4.6559, dt: 1276.09ms, fracRes: 0.6005, norm(attn): 0.1318, norm(output): 0.2344, norm(x): 0.7124, norm(y): 1.0086, norm:1.8474, tok/sec: 102713.77, flops:89.94, batch-reuse:1
@ 5582 train 4.5437 , allloss: 4.5661, dt: 1252.49ms, fracRes: 0.6004, norm(attn): 0.1309, norm(output): 0.2334, norm(x): 0.7150, norm(y): 1.0087, norm:1.7662, tok/sec: 104649.04, flops:91.64, batch-reuse:1
@ 5583 train 4.6609 , allloss: 4.6830, dt: 1249.28ms, fracRes: 0.6004, norm(attn): 0.1309, norm(output): 0.2334, norm(x): 0.7145, norm(y): 1.0087, norm:1.4948, tok/sec: 104918.07, flops:91.88, batch-reuse:1
@ 5584 train 4.4962 , allloss: 4.5185, dt: 1257.48ms, fracRes: 0.6013, norm(attn): 0.1299, norm(output): 0.2324, norm(x): 0.7163, norm(y): 1.0089, norm:1.4930, tok/sec: 104233.56, flops:91.28, batch-reuse:1
@ 5585 train 4.5647 , allloss: 4.5867, dt: 1262.13ms, fracRes: 0.6015, norm(attn): 0.1289, norm(output): 0.2334, norm(x): 0.7179, norm(y): 1.0088, norm:1.5553, tok/sec: 103849.92, flops:90.94, batch-reuse:1
@ 5586 train 4.5856 , allloss: 4.6074, dt: 1275.22ms, fracRes: 0.6012, norm(attn): 0.1309, norm(output): 0.2334, norm(x): 0.7169, norm(y): 1.0088, norm:1.3605, tok/sec: 102784.01, flops:90.01, batch-reuse:1
@ 5587 train 4.5207 , allloss: 4.5426, dt: 1281.72ms, fracRes: 0.6014, norm(attn): 0.1309, norm(output): 0.2334, norm(x): 0.7204, norm(y): 1.0087, norm:1.4348, tok/sec: 102262.76, flops:89.55, batch-reuse:1
@ 5588 train 4.4623 , allloss: 4.4842, dt: 1265.90ms, fracRes: 0.6027, norm(attn): 0.1299, norm(output): 0.2334, norm(x): 0.7189, norm(y): 1.0088, norm:1.2507, tok/sec: 103540.38, flops:90.67, batch-reuse:1
@ 5589 train 4.6106 , allloss: 4.6330, dt: 1277.45ms, fracRes: 0.6025, norm(attn): 0.1299, norm(output): 0.2324, norm(x): 0.7184, norm(y): 1.0088, norm:1.4647, tok/sec: 102604.59, flops:89.85, batch-reuse:1
@ 5590 train 4.5452 , allloss: 4.5668, dt: 1281.45ms, fracRes: 0.6017, norm(attn): 0.1309, norm(output): 0.2334, norm(x): 0.7177, norm(y): 1.0088, norm:1.4625, tok/sec: 102283.98, flops:89.57, batch-reuse:1
@ 5591 train 4.6242 , allloss: 4.6450, dt: 1253.50ms, fracRes: 0.6009, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7168, norm(y): 1.0088, norm:1.4721, tok/sec: 104564.70, flops:91.57, batch-reuse:1
@ 5592 train 4.4962 , allloss: 4.5169, dt: 1267.46ms, fracRes: 0.6012, norm(attn): 0.1299, norm(output): 0.2334, norm(x): 0.7184, norm(y): 1.0087, norm:1.5731, tok/sec: 103413.00, flops:90.56, batch-reuse:1
@ 5593 train 4.4873 , allloss: 4.5087, dt: 1253.36ms, fracRes: 0.6019, norm(attn): 0.1309, norm(output): 0.2334, norm(x): 0.7188, norm(y): 1.0088, norm:1.4396, tok/sec: 104576.34, flops:91.58, batch-reuse:1
@ 5594 train 4.5976 , allloss: 4.6193, dt: 1267.20ms, fracRes: 0.6020, norm(attn): 0.1318, norm(output): 0.2324, norm(x): 0.7175, norm(y): 1.0088, norm:1.3986, tok/sec: 103434.03, flops:90.58, batch-reuse:1
@ 5595 train 4.5910 , allloss: 4.6124, dt: 1253.02ms, fracRes: 0.6024, norm(attn): 0.1309, norm(output): 0.2334, norm(x): 0.7165, norm(y): 1.0087, norm:1.1679, tok/sec: 104604.67, flops:91.60, batch-reuse:1
@ 5596 train 4.5639 , allloss: 4.5852, dt: 1267.29ms, fracRes: 0.6017, norm(attn): 0.1309, norm(output): 0.2334, norm(x): 0.7164, norm(y): 1.0087, norm:1.3076, tok/sec: 103426.64, flops:90.57, batch-reuse:1
@ 5597 train 4.6419 , allloss: 4.6636, dt: 1242.99ms, fracRes: 0.6019, norm(attn): 0.1309, norm(output): 0.2334, norm(x): 0.7186, norm(y): 1.0087, norm:1.4314, tok/sec: 105449.10, flops:92.34, batch-reuse:1
@ 5598 train 4.6148 , allloss: 4.6358, dt: 1244.31ms, fracRes: 0.6019, norm(attn): 0.1299, norm(output): 0.2334, norm(x): 0.7191, norm(y): 1.0087, norm:1.4095, tok/sec: 105337.22, flops:92.24, batch-reuse:1
@ 5599 train 4.5600 , allloss: 4.5821, dt: 1257.77ms, fracRes: 0.6027, norm(attn): 0.1289, norm(output): 0.2334, norm(x): 0.7203, norm(y): 1.0088, norm:1.4479, tok/sec: 104209.61, flops:91.25, batch-reuse:1
@ 5600 train 4.5709 , allloss: 4.5915, dt: 1250.29ms, fracRes: 0.6027, norm(attn): 0.1299, norm(output): 0.2324, norm(x): 0.7179, norm(y): 1.0089, norm:1.1325, tok/sec: 104833.47, flops:91.80, batch-reuse:1
@ 5601 train 4.6516 , allloss: 4.6720, dt: 1246.25ms, fracRes: 0.6018, norm(attn): 0.1318, norm(output): 0.2324, norm(x): 0.7152, norm(y): 1.0089, norm:1.3186, tok/sec: 105172.78, flops:92.10, batch-reuse:1
@ 5602 train 4.7570 , allloss: 4.7795, dt: 1258.49ms, fracRes: 0.6011, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7168, norm(y): 1.0087, norm:1.5230, tok/sec: 104150.24, flops:91.20, batch-reuse:1
@ 5603 train 4.5901 , allloss: 4.6104, dt: 1261.21ms, fracRes: 0.6015, norm(attn): 0.1309, norm(output): 0.2334, norm(x): 0.7172, norm(y): 1.0087, norm:1.3608, tok/sec: 103925.79, flops:91.01, batch-reuse:1
@ 5604 train 4.5803 , allloss: 4.6014, dt: 1247.80ms, fracRes: 0.6020, norm(attn): 0.1299, norm(output): 0.2334, norm(x): 0.7151, norm(y): 1.0088, norm:1.3954, tok/sec: 105042.73, flops:91.98, batch-reuse:1
@ 5605 train 4.4988 , allloss: 4.5200, dt: 1247.12ms, fracRes: 0.6009, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7141, norm(y): 1.0088, norm:1.2809, tok/sec: 105099.84, flops:92.03, batch-reuse:1
@ 5606 train 4.7402 , allloss: 4.7625, dt: 1262.11ms, fracRes: 0.6023, norm(attn): 0.1318, norm(output): 0.2324, norm(x): 0.7151, norm(y): 1.0087, norm:1.8608, tok/sec: 103851.09, flops:90.94, batch-reuse:1
@ 5607 train 4.6202 , allloss: 4.6415, dt: 1251.80ms, fracRes: 0.6021, norm(attn): 0.1299, norm(output): 0.2334, norm(x): 0.7171, norm(y): 1.0087, norm:1.7996, tok/sec: 104706.54, flops:91.69, batch-reuse:1
@ 5608 train 4.5981 , allloss: 4.6194, dt: 1249.57ms, fracRes: 0.6029, norm(attn): 0.1289, norm(output): 0.2324, norm(x): 0.7167, norm(y): 1.0089, norm:1.8619, tok/sec: 104893.45, flops:91.85, batch-reuse:1
@ 5609 train 4.7149 , allloss: 4.7396, dt: 1256.08ms, fracRes: 0.6027, norm(attn): 0.1309, norm(output): 0.2334, norm(x): 0.7183, norm(y): 1.0086, norm:2.0052, tok/sec: 104349.97, flops:91.38, batch-reuse:1
@ 5610 train 4.6233 , allloss: 4.6452, dt: 1278.01ms, fracRes: 0.6021, norm(attn): 0.1289, norm(output): 0.2324, norm(x): 0.7199, norm(y): 1.0088, norm:1.6964, tok/sec: 102559.48, flops:89.81, batch-reuse:1
@ 5611 train 4.5602 , allloss: 4.5816, dt: 1269.20ms, fracRes: 0.6020, norm(attn): 0.1299, norm(output): 0.2334, norm(x): 0.7208, norm(y): 1.0089, norm:1.8313, tok/sec: 103271.66, flops:90.43, batch-reuse:1
@ 5612 train 4.4435 , allloss: 4.4654, dt: 1285.32ms, fracRes: 0.6020, norm(attn): 0.1309, norm(output): 0.2334, norm(x): 0.7227, norm(y): 1.0088, norm:1.4819, tok/sec: 101976.08, flops:89.30, batch-reuse:1
@ 5613 train 4.5991 , allloss: 4.6207, dt: 1276.42ms, fracRes: 0.6024, norm(attn): 0.1299, norm(output): 0.2334, norm(x): 0.7219, norm(y): 1.0088, norm:1.3842, tok/sec: 102687.58, flops:89.92, batch-reuse:1
@ 5614 train 4.4998 , allloss: 4.5219, dt: 1265.24ms, fracRes: 0.6019, norm(attn): 0.1309, norm(output): 0.2344, norm(x): 0.7192, norm(y): 1.0088, norm:1.3031, tok/sec: 103594.60, flops:90.72, batch-reuse:1
@ 5615 train 4.5037 , allloss: 4.5257, dt: 1289.66ms, fracRes: 0.6013, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7192, norm(y): 1.0088, norm:1.5098, tok/sec: 101632.65, flops:89.00, batch-reuse:1
@ 5616 train 4.5014 , allloss: 4.5239, dt: 1292.17ms, fracRes: 0.6015, norm(attn): 0.1318, norm(output): 0.2324, norm(x): 0.7190, norm(y): 1.0088, norm:1.4270, tok/sec: 101435.87, flops:88.83, batch-reuse:1
@ 5617 train 4.4230 , allloss: 4.4449, dt: 1259.65ms, fracRes: 0.6018, norm(attn): 0.1309, norm(output): 0.2324, norm(x): 0.7197, norm(y): 1.0088, norm:1.4256, tok/sec: 104054.14, flops:91.12, batch-reuse:1
@ 5618 train 4.5272 , allloss: 4.5481, dt: 1274.93ms, fracRes: 0.6016, norm(attn): 0.1299, norm(output): 0.2334, norm(x): 0.7196, norm(y): 1.0087, norm:1.3026, tok/sec: 102807.31, flops:90.03, batch-reuse:1
@ 5619 train 4.5700 , allloss: 4.5921, dt: 1280.39ms, fracRes: 0.6015, norm(attn): 0.1309, norm(output): 0.2334, norm(x): 0.7199, norm(y): 1.0087, norm:1.3445, tok/sec: 102368.75, flops:89.64, batch-reuse:1
@ 5620 train 4.4392 , allloss: 4.4613, dt: 1241.08ms, fracRes: 0.6019, norm(attn): 0.1309, norm(output): 0.2324, norm(x): 0.7176, norm(y): 1.0088, norm:1.4262, tok/sec: 105611.26, flops:92.48, batch-reuse:1
@ 5621 train 4.5331 , allloss: 4.5551, dt: 1250.99ms, fracRes: 0.6016, norm(attn): 0.1309, norm(output): 0.2334, norm(x): 0.7183, norm(y): 1.0087, norm:1.2188, tok/sec: 104774.61, flops:91.75, batch-reuse:1
@ 5622 train 4.5513 , allloss: 4.5726, dt: 1244.24ms, fracRes: 0.6011, norm(attn): 0.1309, norm(output): 0.2334, norm(x): 0.7164, norm(y): 1.0087, norm:1.2858, tok/sec: 105342.63, flops:92.25, batch-reuse:1
@ 5623 train 4.5087 , allloss: 4.5318, dt: 1243.79ms, fracRes: 0.6000, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7126, norm(y): 1.0087, norm:1.5375, tok/sec: 105380.88, flops:92.28, batch-reuse:1
@ 5624 train 4.5516 , allloss: 4.5740, dt: 1240.34ms, fracRes: 0.6008, norm(attn): 0.1318, norm(output): 0.2344, norm(x): 0.7171, norm(y): 1.0088, norm:1.2227, tok/sec: 105674.07, flops:92.54, batch-reuse:1
@ 5625 train 4.5062 , allloss: 4.5264, dt: 1262.40ms, fracRes: 0.6020, norm(attn): 0.1299, norm(output): 0.2334, norm(x): 0.7191, norm(y): 1.0088, norm:1.2685, tok/sec: 103827.68, flops:90.92, batch-reuse:1
@ 5626 train 4.4335 , allloss: 4.4539, dt: 1276.16ms, fracRes: 0.6018, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7208, norm(y): 1.0088, norm:1.2835, tok/sec: 102708.03, flops:89.94, batch-reuse:1
@ 5627 train 4.6009 , allloss: 4.6214, dt: 1266.14ms, fracRes: 0.6013, norm(attn): 0.1328, norm(output): 0.2344, norm(x): 0.7207, norm(y): 1.0087, norm:1.4437, tok/sec: 103520.72, flops:90.65, batch-reuse:1
@ 5628 train 4.4887 , allloss: 4.5101, dt: 1254.13ms, fracRes: 0.6011, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7189, norm(y): 1.0087, norm:1.3445, tok/sec: 104512.14, flops:91.52, batch-reuse:1
@ 5629 train 4.6192 , allloss: 4.6397, dt: 1268.92ms, fracRes: 0.6018, norm(attn): 0.1289, norm(output): 0.2334, norm(x): 0.7164, norm(y): 1.0087, norm:1.5023, tok/sec: 103293.97, flops:90.45, batch-reuse:1
@ 5630 train 4.5496 , allloss: 4.5710, dt: 1272.31ms, fracRes: 0.6023, norm(attn): 0.1309, norm(output): 0.2334, norm(x): 0.7178, norm(y): 1.0086, norm:1.4282, tok/sec: 103019.30, flops:90.21, batch-reuse:1
@ 5631 train 4.5740 , allloss: 4.5948, dt: 1250.98ms, fracRes: 0.6016, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7184, norm(y): 1.0087, norm:1.1674, tok/sec: 104775.40, flops:91.75, batch-reuse:1
@ 5632 train 4.4256 , allloss: 4.4477, dt: 1254.56ms, fracRes: 0.6016, norm(attn): 0.1318, norm(output): 0.2324, norm(x): 0.7169, norm(y): 1.0088, norm:1.2635, tok/sec: 104476.39, flops:91.49, batch-reuse:1
@ 5633 train 4.4797 , allloss: 4.5005, dt: 1273.54ms, fracRes: 0.6010, norm(attn): 0.1299, norm(output): 0.2334, norm(x): 0.7157, norm(y): 1.0088, norm:1.2699, tok/sec: 102919.54, flops:90.13, batch-reuse:1
@ 5634 train 4.4520 , allloss: 4.4737, dt: 1274.08ms, fracRes: 0.6012, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7158, norm(y): 1.0088, norm:1.2903, tok/sec: 102875.78, flops:90.09, batch-reuse:1
@ 5635 train 4.6247 , allloss: 4.6456, dt: 1263.81ms, fracRes: 0.6006, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7145, norm(y): 1.0087, norm:1.3815, tok/sec: 103711.52, flops:90.82, batch-reuse:1
@ 5636 train 4.4477 , allloss: 4.4703, dt: 1261.20ms, fracRes: 0.6008, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7162, norm(y): 1.0088, norm:1.4450, tok/sec: 103926.50, flops:91.01, batch-reuse:1
@ 5637 train 4.5802 , allloss: 4.6017, dt: 1283.07ms, fracRes: 0.6013, norm(attn): 0.1309, norm(output): 0.2334, norm(x): 0.7172, norm(y): 1.0087, norm:1.2970, tok/sec: 102154.66, flops:89.46, batch-reuse:1
@ 5638 train 4.5381 , allloss: 4.5586, dt: 1311.29ms, fracRes: 0.6014, norm(attn): 0.1289, norm(output): 0.2334, norm(x): 0.7171, norm(y): 1.0087, norm:1.3166, tok/sec: 99956.35, flops:87.53, batch-reuse:1
@ 5639 train 4.3899 , allloss: 4.4094, dt: 1289.34ms, fracRes: 0.5997, norm(attn): 0.1338, norm(output): 0.2344, norm(x): 0.7158, norm(y): 1.0087, norm:1.5744, tok/sec: 101657.97, flops:89.02, batch-reuse:1
@ 5640 train 4.5150 , allloss: 4.5364, dt: 1309.36ms, fracRes: 0.6009, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7174, norm(y): 1.0088, norm:1.6693, tok/sec: 100103.79, flops:87.66, batch-reuse:1
@ 5641 train 4.5405 , allloss: 4.5615, dt: 1265.12ms, fracRes: 0.6016, norm(attn): 0.1309, norm(output): 0.2324, norm(x): 0.7188, norm(y): 1.0088, norm:1.4619, tok/sec: 103604.24, flops:90.72, batch-reuse:1
@ 5642 train 4.4961 , allloss: 4.5155, dt: 1263.79ms, fracRes: 0.6017, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7171, norm(y): 1.0088, norm:1.6074, tok/sec: 103713.77, flops:90.82, batch-reuse:1
@ 5643 train 4.5815 , allloss: 4.6016, dt: 1307.07ms, fracRes: 0.6020, norm(attn): 0.1309, norm(output): 0.2334, norm(x): 0.7189, norm(y): 1.0088, norm:1.3532, tok/sec: 100279.47, flops:87.81, batch-reuse:1
@ 5644 train 4.5712 , allloss: 4.5917, dt: 1266.01ms, fracRes: 0.6018, norm(attn): 0.1309, norm(output): 0.2334, norm(x): 0.7192, norm(y): 1.0087, norm:1.5666, tok/sec: 103531.86, flops:90.66, batch-reuse:1
@ 5645 train 4.4331 , allloss: 4.4540, dt: 1281.79ms, fracRes: 0.6014, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7199, norm(y): 1.0088, norm:1.5696, tok/sec: 102257.06, flops:89.55, batch-reuse:1
@ 5646 train 4.4948 , allloss: 4.5160, dt: 1269.18ms, fracRes: 0.6017, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7207, norm(y): 1.0088, norm:1.7032, tok/sec: 103273.36, flops:90.44, batch-reuse:1
@ 5647 train 4.6019 , allloss: 4.6231, dt: 1296.18ms, fracRes: 0.6015, norm(attn): 0.1318, norm(output): 0.2344, norm(x): 0.7194, norm(y): 1.0087, norm:1.4568, tok/sec: 101121.65, flops:88.55, batch-reuse:1
@ 5648 train 4.4582 , allloss: 4.4793, dt: 1268.00ms, fracRes: 0.6008, norm(attn): 0.1318, norm(output): 0.2344, norm(x): 0.7184, norm(y): 1.0087, norm:1.5509, tok/sec: 103368.74, flops:90.52, batch-reuse:1
@ 5649 train 4.5561 , allloss: 4.5766, dt: 1262.72ms, fracRes: 0.6003, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7162, norm(y): 1.0085, norm:1.4175, tok/sec: 103801.50, flops:90.90, batch-reuse:1
@ 5650 train 4.3490 , allloss: 4.3697, dt: 1249.31ms, fracRes: 0.6005, norm(attn): 0.1318, norm(output): 0.2344, norm(x): 0.7154, norm(y): 1.0087, norm:1.3867, tok/sec: 104915.15, flops:91.87, batch-reuse:1
@ 5651 train 4.4872 , allloss: 4.5075, dt: 1259.95ms, fracRes: 0.6013, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7199, norm(y): 1.0087, norm:1.2941, tok/sec: 104029.67, flops:91.10, batch-reuse:1
@ 5652 train 4.4660 , allloss: 4.4867, dt: 1281.48ms, fracRes: 0.6018, norm(attn): 0.1309, norm(output): 0.2334, norm(x): 0.7180, norm(y): 1.0088, norm:1.1648, tok/sec: 102281.67, flops:89.57, batch-reuse:1
@ 5653 train 4.4814 , allloss: 4.5031, dt: 1262.01ms, fracRes: 0.6012, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7166, norm(y): 1.0088, norm:1.4146, tok/sec: 103859.96, flops:90.95, batch-reuse:1
@ 5654 train 4.5585 , allloss: 4.5807, dt: 1255.90ms, fracRes: 0.6010, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7162, norm(y): 1.0088, norm:1.6085, tok/sec: 104365.20, flops:91.39, batch-reuse:1
@ 5655 train 4.5402 , allloss: 4.5611, dt: 1276.05ms, fracRes: 0.6017, norm(attn): 0.1299, norm(output): 0.2334, norm(x): 0.7151, norm(y): 1.0087, norm:1.2363, tok/sec: 102717.12, flops:89.95, batch-reuse:1
@ 5656 train 4.5394 , allloss: 4.5604, dt: 1254.39ms, fracRes: 0.6022, norm(attn): 0.1289, norm(output): 0.2334, norm(x): 0.7158, norm(y): 1.0086, norm:1.5409, tok/sec: 104490.23, flops:91.50, batch-reuse:1
@ 5657 train 4.5570 , allloss: 4.5787, dt: 1285.75ms, fracRes: 0.6012, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7156, norm(y): 1.0087, norm:1.6918, tok/sec: 101942.35, flops:89.27, batch-reuse:1
@ 5658 train 4.4683 , allloss: 4.4897, dt: 1264.16ms, fracRes: 0.6014, norm(attn): 0.1309, norm(output): 0.2324, norm(x): 0.7159, norm(y): 1.0087, norm:1.3681, tok/sec: 103682.87, flops:90.79, batch-reuse:1
@ 5659 train 4.5036 , allloss: 4.5243, dt: 1261.30ms, fracRes: 0.6020, norm(attn): 0.1279, norm(output): 0.2324, norm(x): 0.7173, norm(y): 1.0087, norm:1.3536, tok/sec: 103918.53, flops:91.00, batch-reuse:1
@ 5660 train 4.4915 , allloss: 4.5120, dt: 1255.73ms, fracRes: 0.6023, norm(attn): 0.1279, norm(output): 0.2334, norm(x): 0.7200, norm(y): 1.0088, norm:1.6219, tok/sec: 104379.11, flops:91.40, batch-reuse:1
@ 5661 train 4.5943 , allloss: 4.6152, dt: 1268.67ms, fracRes: 0.6023, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7206, norm(y): 1.0088, norm:1.3190, tok/sec: 103314.70, flops:90.47, batch-reuse:1
@ 5662 train 4.5339 , allloss: 4.5541, dt: 1260.93ms, fracRes: 0.6019, norm(attn): 0.1318, norm(output): 0.2344, norm(x): 0.7214, norm(y): 1.0087, norm:1.3423, tok/sec: 103948.92, flops:91.03, batch-reuse:1
@ 5663 train 4.5555 , allloss: 4.5751, dt: 1247.51ms, fracRes: 0.6016, norm(attn): 0.1328, norm(output): 0.2344, norm(x): 0.7207, norm(y): 1.0087, norm:1.1808, tok/sec: 105066.82, flops:92.01, batch-reuse:1
@ 5664 train 4.4521 , allloss: 4.4725, dt: 1288.67ms, fracRes: 0.6014, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7203, norm(y): 1.0088, norm:1.3341, tok/sec: 101711.21, flops:89.07, batch-reuse:1
@ 5665 train 4.5199 , allloss: 4.5410, dt: 1242.13ms, fracRes: 0.6018, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7189, norm(y): 1.0086, norm:1.2304, tok/sec: 105521.90, flops:92.40, batch-reuse:1
@ 5666 train 4.5331 , allloss: 4.5535, dt: 1278.29ms, fracRes: 0.6012, norm(attn): 0.1309, norm(output): 0.2334, norm(x): 0.7145, norm(y): 1.0087, norm:1.2307, tok/sec: 102536.87, flops:89.79, batch-reuse:1
@ 5667 train 4.4893 , allloss: 4.5100, dt: 1306.15ms, fracRes: 0.6005, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7144, norm(y): 1.0087, norm:1.3853, tok/sec: 100349.90, flops:87.87, batch-reuse:1
@ 5668 train 4.4786 , allloss: 4.4988, dt: 1262.68ms, fracRes: 0.6001, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7139, norm(y): 1.0087, norm:1.3125, tok/sec: 103804.76, flops:90.90, batch-reuse:1
@ 5669 train 4.4627 , allloss: 4.4836, dt: 1264.09ms, fracRes: 0.6008, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7143, norm(y): 1.0088, norm:1.3682, tok/sec: 103688.64, flops:90.80, batch-reuse:1
@ 5670 train 4.5048 , allloss: 4.5261, dt: 1274.46ms, fracRes: 0.6011, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7140, norm(y): 1.0088, norm:1.4960, tok/sec: 102845.18, flops:90.06, batch-reuse:1
@ 5671 train 4.5762 , allloss: 4.5975, dt: 1255.00ms, fracRes: 0.6013, norm(attn): 0.1318, norm(output): 0.2344, norm(x): 0.7160, norm(y): 1.0087, norm:1.4262, tok/sec: 104440.21, flops:91.46, batch-reuse:1
@ 5672 train 4.4643 , allloss: 4.4846, dt: 1281.34ms, fracRes: 0.6014, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7162, norm(y): 1.0087, norm:1.4508, tok/sec: 102292.54, flops:89.58, batch-reuse:1
@ 5673 train 4.4111 , allloss: 4.4313, dt: 1254.63ms, fracRes: 0.6018, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7154, norm(y): 1.0087, norm:1.1205, tok/sec: 104470.34, flops:91.48, batch-reuse:1
@ 5674 train 4.4218 , allloss: 4.4422, dt: 1254.23ms, fracRes: 0.6014, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7168, norm(y): 1.0088, norm:1.5211, tok/sec: 104503.70, flops:91.51, batch-reuse:1
@ 5675 train 4.4395 , allloss: 4.4597, dt: 1273.11ms, fracRes: 0.6012, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7164, norm(y): 1.0088, norm:1.6028, tok/sec: 102954.02, flops:90.16, batch-reuse:1
@ 5676 train 4.5665 , allloss: 4.5879, dt: 1266.10ms, fracRes: 0.6015, norm(attn): 0.1318, norm(output): 0.2344, norm(x): 0.7179, norm(y): 1.0088, norm:1.5007, tok/sec: 103523.88, flops:90.65, batch-reuse:1
@ 5677 train 4.4159 , allloss: 4.4366, dt: 1254.88ms, fracRes: 0.6021, norm(attn): 0.1299, norm(output): 0.2334, norm(x): 0.7167, norm(y): 1.0089, norm:1.4397, tok/sec: 104449.55, flops:91.46, batch-reuse:1
@ 5678 train 4.3805 , allloss: 4.4007, dt: 1271.07ms, fracRes: 0.6018, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7170, norm(y): 1.0088, norm:1.4084, tok/sec: 103119.15, flops:90.30, batch-reuse:1
@ 5679 train 4.3915 , allloss: 4.4124, dt: 1254.44ms, fracRes: 0.6019, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7168, norm(y): 1.0089, norm:1.4358, tok/sec: 104486.64, flops:91.50, batch-reuse:1
@ 5680 train 4.4703 , allloss: 4.4913, dt: 1245.07ms, fracRes: 0.6018, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7148, norm(y): 1.0087, norm:1.4059, tok/sec: 105272.84, flops:92.19, batch-reuse:1
@ 5681 train 4.4158 , allloss: 4.4366, dt: 1314.51ms, fracRes: 0.6010, norm(attn): 0.1328, norm(output): 0.2344, norm(x): 0.7149, norm(y): 1.0086, norm:1.4593, tok/sec: 99711.33, flops:87.32, batch-reuse:1
@ 5682 train 4.4064 , allloss: 4.4284, dt: 1258.12ms, fracRes: 0.6016, norm(attn): 0.1318, norm(output): 0.2324, norm(x): 0.7126, norm(y): 1.0089, norm:1.3466, tok/sec: 104180.72, flops:91.23, batch-reuse:1
@ 5683 train 4.4403 , allloss: 4.4613, dt: 1263.83ms, fracRes: 0.6014, norm(attn): 0.1309, norm(output): 0.2334, norm(x): 0.7135, norm(y): 1.0088, norm:1.4387, tok/sec: 103709.80, flops:90.82, batch-reuse:1
@ 5684 train 4.4463 , allloss: 4.4682, dt: 1254.84ms, fracRes: 0.6015, norm(attn): 0.1309, norm(output): 0.2334, norm(x): 0.7140, norm(y): 1.0088, norm:1.3226, tok/sec: 104453.52, flops:91.47, batch-reuse:1
@ 5685 train 4.4576 , allloss: 4.4786, dt: 1265.50ms, fracRes: 0.6012, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7142, norm(y): 1.0087, norm:1.6518, tok/sec: 103573.70, flops:90.70, batch-reuse:1
@ 5686 train 4.3939 , allloss: 4.4149, dt: 1257.51ms, fracRes: 0.6018, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7152, norm(y): 1.0087, norm:1.3814, tok/sec: 104231.68, flops:91.27, batch-reuse:1
@ 5687 train 4.4347 , allloss: 4.4547, dt: 1254.39ms, fracRes: 0.6016, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7147, norm(y): 1.0088, norm:1.3675, tok/sec: 104490.43, flops:91.50, batch-reuse:1
@ 5688 train 4.4228 , allloss: 4.4438, dt: 1237.12ms, fracRes: 0.6006, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7119, norm(y): 1.0088, norm:1.4847, tok/sec: 105949.15, flops:92.78, batch-reuse:1
@ 5689 train 4.4360 , allloss: 4.4566, dt: 1256.17ms, fracRes: 0.5997, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7099, norm(y): 1.0087, norm:1.5850, tok/sec: 104342.92, flops:91.37, batch-reuse:1
@ 5690 train 4.3705 , allloss: 4.3931, dt: 1254.56ms, fracRes: 0.6006, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7117, norm(y): 1.0087, norm:1.5128, tok/sec: 104476.71, flops:91.49, batch-reuse:1
@ 5691 train 4.4082 , allloss: 4.4282, dt: 1275.06ms, fracRes: 0.6016, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7142, norm(y): 1.0088, norm:1.1674, tok/sec: 102796.33, flops:90.02, batch-reuse:1
@ 5692 train 4.3837 , allloss: 4.4039, dt: 1257.83ms, fracRes: 0.6018, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7155, norm(y): 1.0088, norm:1.3536, tok/sec: 104205.15, flops:91.25, batch-reuse:1
@ 5693 train 4.4116 , allloss: 4.4323, dt: 1257.40ms, fracRes: 0.6013, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7158, norm(y): 1.0087, norm:1.4789, tok/sec: 104240.63, flops:91.28, batch-reuse:1
@ 5694 train 4.4319 , allloss: 4.4532, dt: 1283.64ms, fracRes: 0.6011, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7141, norm(y): 1.0086, norm:1.4186, tok/sec: 102109.33, flops:89.42, batch-reuse:1
@ 5695 train 4.4051 , allloss: 4.4250, dt: 1250.49ms, fracRes: 0.6012, norm(attn): 0.1299, norm(output): 0.2334, norm(x): 0.7134, norm(y): 1.0088, norm:1.3854, tok/sec: 104816.76, flops:91.79, batch-reuse:1
@ 5696 train 4.4204 , allloss: 4.4406, dt: 1274.98ms, fracRes: 0.6017, norm(attn): 0.1299, norm(output): 0.2334, norm(x): 0.7139, norm(y): 1.0088, norm:1.3335, tok/sec: 102803.46, flops:90.02, batch-reuse:1
@ 5697 train 4.4497 , allloss: 4.4707, dt: 1251.42ms, fracRes: 0.6016, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7136, norm(y): 1.0088, norm:1.4124, tok/sec: 104739.03, flops:91.72, batch-reuse:1
@ 5698 train 4.4609 , allloss: 4.4814, dt: 1255.43ms, fracRes: 0.6007, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7125, norm(y): 1.0087, norm:1.5932, tok/sec: 104403.75, flops:91.42, batch-reuse:1
@ 5699 train 4.4673 , allloss: 4.4882, dt: 1257.10ms, fracRes: 0.6007, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7091, norm(y): 1.0088, norm:1.6258, tok/sec: 104265.07, flops:91.30, batch-reuse:1
@ 5700 train 4.4974 , allloss: 4.5214, dt: 1255.31ms, fracRes: 0.6004, norm(attn): 0.1309, norm(output): 0.2334, norm(x): 0.7072, norm(y): 1.0087, norm:1.8939, tok/sec: 104414.22, flops:91.43, batch-reuse:1
@ 5701 train 4.4027 , allloss: 4.4236, dt: 1244.16ms, fracRes: 0.6006, norm(attn): 0.1318, norm(output): 0.2324, norm(x): 0.7101, norm(y): 1.0087, norm:1.4156, tok/sec: 105349.52, flops:92.25, batch-reuse:1
@ 5702 train 4.4569 , allloss: 4.4769, dt: 1259.31ms, fracRes: 0.6019, norm(attn): 0.1309, norm(output): 0.2314, norm(x): 0.7116, norm(y): 1.0088, norm:1.8558, tok/sec: 104082.43, flops:91.14, batch-reuse:1
@ 5703 train 4.4746 , allloss: 4.4960, dt: 1297.09ms, fracRes: 0.6028, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7162, norm(y): 1.0088, norm:1.5023, tok/sec: 101051.11, flops:88.49, batch-reuse:1
@ 5704 train 4.4231 , allloss: 4.4434, dt: 1250.78ms, fracRes: 0.6025, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7171, norm(y): 1.0089, norm:1.4377, tok/sec: 104792.50, flops:91.77, batch-reuse:1
@ 5705 train 4.4347 , allloss: 4.4552, dt: 1241.59ms, fracRes: 0.6022, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7152, norm(y): 1.0088, norm:1.7366, tok/sec: 105567.74, flops:92.44, batch-reuse:1
@ 5706 train 4.4964 , allloss: 4.5171, dt: 1281.59ms, fracRes: 0.6017, norm(attn): 0.1318, norm(output): 0.2324, norm(x): 0.7154, norm(y): 1.0089, norm:1.5359, tok/sec: 102273.02, flops:89.56, batch-reuse:1
@ 5707 train 4.4115 , allloss: 4.4323, dt: 1274.83ms, fracRes: 0.6009, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7137, norm(y): 1.0088, norm:1.3885, tok/sec: 102815.33, flops:90.03, batch-reuse:1
@ 5708 train 4.4434 , allloss: 4.4636, dt: 1267.58ms, fracRes: 0.6011, norm(attn): 0.1309, norm(output): 0.2334, norm(x): 0.7128, norm(y): 1.0088, norm:1.3517, tok/sec: 103403.43, flops:90.55, batch-reuse:1
@ 5709 train 4.3236 , allloss: 4.3455, dt: 1257.67ms, fracRes: 0.6018, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7123, norm(y): 1.0087, norm:1.2875, tok/sec: 104218.34, flops:91.26, batch-reuse:1
@ 5710 train 4.3847 , allloss: 4.4047, dt: 1267.79ms, fracRes: 0.6021, norm(attn): 0.1309, norm(output): 0.2334, norm(x): 0.7137, norm(y): 1.0088, norm:1.2696, tok/sec: 103386.59, flops:90.53, batch-reuse:1
@ 5711 train 4.5305 , allloss: 4.5514, dt: 1267.45ms, fracRes: 0.6019, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7118, norm(y): 1.0088, norm:1.5218, tok/sec: 103413.72, flops:90.56, batch-reuse:1
@ 5712 train 4.4253 , allloss: 4.4451, dt: 1266.01ms, fracRes: 0.6013, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7122, norm(y): 1.0088, norm:1.6108, tok/sec: 103531.72, flops:90.66, batch-reuse:1
@ 5713 train 4.4446 , allloss: 4.4645, dt: 1247.74ms, fracRes: 0.6009, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7109, norm(y): 1.0087, norm:1.3882, tok/sec: 105047.60, flops:91.99, batch-reuse:1
@ 5714 train 4.4807 , allloss: 4.5010, dt: 1244.52ms, fracRes: 0.6014, norm(attn): 0.1318, norm(output): 0.2324, norm(x): 0.7108, norm(y): 1.0088, norm:1.4438, tok/sec: 105319.14, flops:92.23, batch-reuse:1
@ 5715 train 4.4675 , allloss: 4.4874, dt: 1255.28ms, fracRes: 0.6015, norm(attn): 0.1309, norm(output): 0.2314, norm(x): 0.7106, norm(y): 1.0087, norm:1.3394, tok/sec: 104416.42, flops:91.44, batch-reuse:1
@ 5716 train 4.4346 , allloss: 4.4543, dt: 1244.77ms, fracRes: 0.6018, norm(attn): 0.1289, norm(output): 0.2324, norm(x): 0.7106, norm(y): 1.0087, norm:1.3669, tok/sec: 105298.55, flops:92.21, batch-reuse:1
@ 5717 train 4.4495 , allloss: 4.4702, dt: 1227.60ms, fracRes: 0.6016, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7098, norm(y): 1.0087, norm:1.4351, tok/sec: 106771.03, flops:93.50, batch-reuse:1
@ 5718 train 4.4226 , allloss: 4.4441, dt: 1250.44ms, fracRes: 0.6009, norm(attn): 0.1338, norm(output): 0.2324, norm(x): 0.7066, norm(y): 1.0086, norm:1.6087, tok/sec: 104820.73, flops:91.79, batch-reuse:1
@ 5719 train 4.2866 , allloss: 4.3072, dt: 1283.67ms, fracRes: 0.6020, norm(attn): 0.1318, norm(output): 0.2324, norm(x): 0.7096, norm(y): 1.0089, norm:1.9275, tok/sec: 102107.17, flops:89.41, batch-reuse:1
@ 5720 train 4.3380 , allloss: 4.3580, dt: 1294.63ms, fracRes: 0.6019, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7106, norm(y): 1.0088, norm:1.2370, tok/sec: 101242.45, flops:88.66, batch-reuse:1
@ 5721 train 4.2841 , allloss: 4.3076, dt: 1273.86ms, fracRes: 0.6011, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7117, norm(y): 1.0088, norm:1.8260, tok/sec: 102893.67, flops:90.10, batch-reuse:1
@ 5722 train 4.4496 , allloss: 4.4697, dt: 1269.81ms, fracRes: 0.6011, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7083, norm(y): 1.0088, norm:1.4285, tok/sec: 103221.90, flops:90.39, batch-reuse:1
@ 5723 train 4.5201 , allloss: 4.5403, dt: 1282.49ms, fracRes: 0.6014, norm(attn): 0.1309, norm(output): 0.2324, norm(x): 0.7099, norm(y): 1.0086, norm:1.3784, tok/sec: 102201.45, flops:89.50, batch-reuse:1
@ 5724 train 4.3420 , allloss: 4.3623, dt: 1293.94ms, fracRes: 0.6021, norm(attn): 0.1299, norm(output): 0.2324, norm(x): 0.7112, norm(y): 1.0088, norm:1.4893, tok/sec: 101296.66, flops:88.70, batch-reuse:1
@ 5725 train 4.6411 , allloss: 4.6607, dt: 1238.66ms, fracRes: 0.6019, norm(attn): 0.1279, norm(output): 0.2324, norm(x): 0.7114, norm(y): 1.0087, norm:1.3382, tok/sec: 105817.28, flops:92.66, batch-reuse:1
@ 5726 train 4.3657 , allloss: 4.3873, dt: 1260.05ms, fracRes: 0.6019, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7130, norm(y): 1.0088, norm:2.1556, tok/sec: 104021.32, flops:91.09, batch-reuse:1
@ 5727 train 4.3224 , allloss: 4.3435, dt: 1278.84ms, fracRes: 0.6021, norm(attn): 0.1309, norm(output): 0.2324, norm(x): 0.7129, norm(y): 1.0089, norm:1.4407, tok/sec: 102493.11, flops:89.75, batch-reuse:1
@ 5728 train 4.3097 , allloss: 4.3304, dt: 1266.06ms, fracRes: 0.6020, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7143, norm(y): 1.0089, norm:1.9143, tok/sec: 103527.47, flops:90.66, batch-reuse:1
@ 5729 train 4.3797 , allloss: 4.3997, dt: 1277.38ms, fracRes: 0.6027, norm(attn): 0.1289, norm(output): 0.2324, norm(x): 0.7136, norm(y): 1.0089, norm:1.4635, tok/sec: 102610.15, flops:89.85, batch-reuse:1
@ 5730 train 4.4407 , allloss: 4.4605, dt: 1272.39ms, fracRes: 0.6025, norm(attn): 0.1299, norm(output): 0.2324, norm(x): 0.7128, norm(y): 1.0087, norm:1.6171, tok/sec: 103012.43, flops:90.21, batch-reuse:1
@ 5731 train 4.4012 , allloss: 4.4222, dt: 1261.10ms, fracRes: 0.6022, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7116, norm(y): 1.0088, norm:1.3232, tok/sec: 103935.05, flops:91.01, batch-reuse:1
@ 5732 train 4.2726 , allloss: 4.2939, dt: 1257.48ms, fracRes: 0.6021, norm(attn): 0.1309, norm(output): 0.2324, norm(x): 0.7109, norm(y): 1.0089, norm:1.6374, tok/sec: 104234.11, flops:91.28, batch-reuse:1
@ 5733 train 4.3647 , allloss: 4.3853, dt: 1255.43ms, fracRes: 0.6018, norm(attn): 0.1289, norm(output): 0.2314, norm(x): 0.7090, norm(y): 1.0087, norm:1.3453, tok/sec: 104404.29, flops:91.43, batch-reuse:1
@ 5734 train 4.3781 , allloss: 4.3986, dt: 1262.04ms, fracRes: 0.6014, norm(attn): 0.1318, norm(output): 0.2324, norm(x): 0.7090, norm(y): 1.0086, norm:1.4121, tok/sec: 103857.49, flops:90.95, batch-reuse:1
@ 5735 train 4.3428 , allloss: 4.3645, dt: 1260.94ms, fracRes: 0.6012, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7101, norm(y): 1.0088, norm:1.3254, tok/sec: 103948.06, flops:91.03, batch-reuse:1
@ 5736 train 4.3266 , allloss: 4.3477, dt: 1279.01ms, fracRes: 0.6014, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7111, norm(y): 1.0088, norm:1.3259, tok/sec: 102479.24, flops:89.74, batch-reuse:1
@ 5737 train 4.4558 , allloss: 4.4760, dt: 1259.65ms, fracRes: 0.6019, norm(attn): 0.1299, norm(output): 0.2314, norm(x): 0.7121, norm(y): 1.0087, norm:1.3555, tok/sec: 104054.40, flops:91.12, batch-reuse:1
@ 5738 train 4.3807 , allloss: 4.4010, dt: 1270.32ms, fracRes: 0.6017, norm(attn): 0.1309, norm(output): 0.2334, norm(x): 0.7136, norm(y): 1.0088, norm:1.4945, tok/sec: 103180.64, flops:90.35, batch-reuse:1
@ 5739 train 4.3305 , allloss: 4.3510, dt: 1275.96ms, fracRes: 0.6022, norm(attn): 0.1318, norm(output): 0.2324, norm(x): 0.7125, norm(y): 1.0087, norm:1.2383, tok/sec: 102724.48, flops:89.95, batch-reuse:1
@ 5740 train 4.3070 , allloss: 4.3278, dt: 1252.12ms, fracRes: 0.6018, norm(attn): 0.1309, norm(output): 0.2334, norm(x): 0.7116, norm(y): 1.0088, norm:1.6142, tok/sec: 104680.26, flops:91.67, batch-reuse:1
@ 5741 train 4.2931 , allloss: 4.3151, dt: 1255.57ms, fracRes: 0.6015, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7105, norm(y): 1.0087, norm:1.5198, tok/sec: 104392.23, flops:91.41, batch-reuse:1
@ 5742 train 4.3734 , allloss: 4.3941, dt: 1279.61ms, fracRes: 0.6009, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7118, norm(y): 1.0086, norm:1.5277, tok/sec: 102430.97, flops:89.70, batch-reuse:1
@ 5743 train 4.4339 , allloss: 4.4555, dt: 1263.81ms, fracRes: 0.6020, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7121, norm(y): 1.0087, norm:1.5157, tok/sec: 103711.47, flops:90.82, batch-reuse:1
@ 5744 train 4.3262 , allloss: 4.3465, dt: 1246.59ms, fracRes: 0.6013, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7123, norm(y): 1.0088, norm:1.6269, tok/sec: 105144.84, flops:92.07, batch-reuse:1
@ 5745 train 4.3424 , allloss: 4.3633, dt: 1275.82ms, fracRes: 0.6018, norm(attn): 0.1318, norm(output): 0.2324, norm(x): 0.7141, norm(y): 1.0089, norm:1.6212, tok/sec: 102735.48, flops:89.96, batch-reuse:1
@ 5746 train 4.4177 , allloss: 4.4395, dt: 1261.99ms, fracRes: 0.6015, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7121, norm(y): 1.0087, norm:1.4828, tok/sec: 103861.75, flops:90.95, batch-reuse:1
@ 5747 train 4.3660 , allloss: 4.3867, dt: 1275.50ms, fracRes: 0.6014, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7121, norm(y): 1.0087, norm:1.4943, tok/sec: 102761.40, flops:89.99, batch-reuse:1
@ 5748 train 4.2776 , allloss: 4.2995, dt: 1275.29ms, fracRes: 0.6021, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7104, norm(y): 1.0088, norm:1.4841, tok/sec: 102778.40, flops:90.00, batch-reuse:1
@ 5749 train 4.3349 , allloss: 4.3557, dt: 1257.55ms, fracRes: 0.6015, norm(attn): 0.1318, norm(output): 0.2324, norm(x): 0.7100, norm(y): 1.0088, norm:1.4952, tok/sec: 104227.73, flops:91.27, batch-reuse:1
@ 5750 train 4.3274 , allloss: 4.3494, dt: 1262.07ms, fracRes: 0.6017, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7112, norm(y): 1.0088, norm:1.5743, tok/sec: 103855.08, flops:90.94, batch-reuse:1
@ 5751 train 4.5049 , allloss: 4.5253, dt: 1255.90ms, fracRes: 0.6017, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7108, norm(y): 1.0086, norm:1.2569, tok/sec: 104364.87, flops:91.39, batch-reuse:1
@ 5752 train 4.4331 , allloss: 4.4536, dt: 1260.33ms, fracRes: 0.6016, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7096, norm(y): 1.0087, norm:1.4882, tok/sec: 103998.04, flops:91.07, batch-reuse:1
@ 5753 train 4.2979 , allloss: 4.3184, dt: 1267.59ms, fracRes: 0.6020, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7104, norm(y): 1.0088, norm:1.3783, tok/sec: 103402.71, flops:90.55, batch-reuse:1
@ 5754 train 4.3422 , allloss: 4.3626, dt: 1249.41ms, fracRes: 0.6022, norm(attn): 0.1309, norm(output): 0.2324, norm(x): 0.7109, norm(y): 1.0087, norm:1.4635, tok/sec: 104907.20, flops:91.87, batch-reuse:1
@ 5755 train 4.3759 , allloss: 4.3954, dt: 1272.01ms, fracRes: 0.6029, norm(attn): 0.1299, norm(output): 0.2324, norm(x): 0.7107, norm(y): 1.0087, norm:1.2718, tok/sec: 103043.19, flops:90.23, batch-reuse:1
@ 5756 train 4.4066 , allloss: 4.4268, dt: 1266.71ms, fracRes: 0.6023, norm(attn): 0.1309, norm(output): 0.2324, norm(x): 0.7096, norm(y): 1.0086, norm:1.3280, tok/sec: 103474.74, flops:90.61, batch-reuse:1
@ 5757 train 4.3309 , allloss: 4.3523, dt: 1264.39ms, fracRes: 0.6013, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7090, norm(y): 1.0087, norm:1.2637, tok/sec: 103664.43, flops:90.78, batch-reuse:1
@ 5758 train 4.4006 , allloss: 4.4221, dt: 1265.50ms, fracRes: 0.6004, norm(attn): 0.1328, norm(output): 0.2344, norm(x): 0.7072, norm(y): 1.0087, norm:1.1945, tok/sec: 103573.32, flops:90.70, batch-reuse:1
@ 5759 train 4.2698 , allloss: 4.2908, dt: 1254.39ms, fracRes: 0.5997, norm(attn): 0.1328, norm(output): 0.2344, norm(x): 0.7066, norm(y): 1.0088, norm:1.2734, tok/sec: 104490.53, flops:91.50, batch-reuse:1
@ 5760 train 4.3301 , allloss: 4.3509, dt: 1239.47ms, fracRes: 0.6004, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7066, norm(y): 1.0088, norm:1.3864, tok/sec: 105748.73, flops:92.60, batch-reuse:1
@ 5761 train 4.1717 , allloss: 4.1925, dt: 1263.01ms, fracRes: 0.6017, norm(attn): 0.1309, norm(output): 0.2314, norm(x): 0.7083, norm(y): 1.0089, norm:1.5152, tok/sec: 103777.56, flops:90.88, batch-reuse:1
@ 5762 train 4.2959 , allloss: 4.3165, dt: 1273.81ms, fracRes: 0.6028, norm(attn): 0.1299, norm(output): 0.2314, norm(x): 0.7105, norm(y): 1.0088, norm:1.2690, tok/sec: 102897.98, flops:90.11, batch-reuse:1
@ 5763 train 4.2513 , allloss: 4.2717, dt: 1241.57ms, fracRes: 0.6029, norm(attn): 0.1309, norm(output): 0.2324, norm(x): 0.7126, norm(y): 1.0089, norm:1.3136, tok/sec: 105569.68, flops:92.45, batch-reuse:1
@ 5764 train 4.4201 , allloss: 4.4402, dt: 1257.01ms, fracRes: 0.6017, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7108, norm(y): 1.0088, norm:1.5683, tok/sec: 104272.44, flops:91.31, batch-reuse:1
@ 5765 train 4.3915 , allloss: 4.4122, dt: 1282.42ms, fracRes: 0.6010, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7089, norm(y): 1.0089, norm:1.7102, tok/sec: 102206.45, flops:89.50, batch-reuse:1
@ 5766 train 4.5744 , allloss: 4.5964, dt: 1269.48ms, fracRes: 0.6010, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7096, norm(y): 1.0086, norm:1.4515, tok/sec: 103248.77, flops:90.41, batch-reuse:1
@ 5767 train 4.6437 , allloss: 4.6661, dt: 1280.70ms, fracRes: 0.6016, norm(attn): 0.1328, norm(output): 0.2344, norm(x): 0.7106, norm(y): 1.0085, norm:1.4097, tok/sec: 102343.79, flops:89.62, batch-reuse:1
@ 5768 train 4.5142 , allloss: 4.5358, dt: 1305.00ms, fracRes: 0.6015, norm(attn): 0.1338, norm(output): 0.2344, norm(x): 0.7099, norm(y): 1.0087, norm:1.4501, tok/sec: 100438.20, flops:87.95, batch-reuse:1
@ 5769 train 4.6162 , allloss: 4.6368, dt: 1306.18ms, fracRes: 0.6029, norm(attn): 0.1318, norm(output): 0.2324, norm(x): 0.7112, norm(y): 1.0085, norm:1.6717, tok/sec: 100347.63, flops:87.87, batch-reuse:1
@ 5770 train 4.6695 , allloss: 4.6912, dt: 1238.71ms, fracRes: 0.6041, norm(attn): 0.1299, norm(output): 0.2314, norm(x): 0.7134, norm(y): 1.0087, norm:1.5389, tok/sec: 105813.21, flops:92.66, batch-reuse:1
@ 5771 train 4.5506 , allloss: 4.5718, dt: 1243.57ms, fracRes: 0.6042, norm(attn): 0.1299, norm(output): 0.2324, norm(x): 0.7122, norm(y): 1.0088, norm:1.7800, tok/sec: 105399.63, flops:92.30, batch-reuse:1
@ 5772 train 4.5408 , allloss: 4.5622, dt: 1255.62ms, fracRes: 0.6029, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7116, norm(y): 1.0086, norm:1.6174, tok/sec: 104388.35, flops:91.41, batch-reuse:1
@ 5773 train 4.4668 , allloss: 4.4883, dt: 1255.37ms, fracRes: 0.6017, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7087, norm(y): 1.0085, norm:1.5933, tok/sec: 104409.23, flops:91.43, batch-reuse:1
@ 5774 train 4.5506 , allloss: 4.5723, dt: 1238.33ms, fracRes: 0.6017, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7099, norm(y): 1.0085, norm:1.4862, tok/sec: 105845.58, flops:92.69, batch-reuse:1
@ 5775 train 4.6407 , allloss: 4.6621, dt: 1252.64ms, fracRes: 0.6023, norm(attn): 0.1309, norm(output): 0.2334, norm(x): 0.7116, norm(y): 1.0086, norm:1.4785, tok/sec: 104636.29, flops:91.63, batch-reuse:1
@ 5776 train 4.5379 , allloss: 4.5584, dt: 1260.43ms, fracRes: 0.6022, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7117, norm(y): 1.0087, norm:1.4489, tok/sec: 103989.94, flops:91.06, batch-reuse:1
@ 5777 train 4.4414 , allloss: 4.4622, dt: 1247.00ms, fracRes: 0.6019, norm(attn): 0.1299, norm(output): 0.2334, norm(x): 0.7104, norm(y): 1.0087, norm:1.3754, tok/sec: 105110.17, flops:92.04, batch-reuse:1
@ 5778 train 4.4922 , allloss: 4.5137, dt: 1277.10ms, fracRes: 0.6023, norm(attn): 0.1309, norm(output): 0.2334, norm(x): 0.7116, norm(y): 1.0087, norm:1.4225, tok/sec: 102632.86, flops:89.87, batch-reuse:1
@ 5779 train 4.5987 , allloss: 4.6195, dt: 1274.10ms, fracRes: 0.6028, norm(attn): 0.1309, norm(output): 0.2314, norm(x): 0.7111, norm(y): 1.0087, norm:1.5140, tok/sec: 102874.03, flops:90.09, batch-reuse:1
@ 5780 train 4.5604 , allloss: 4.5809, dt: 1278.61ms, fracRes: 0.6022, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7099, norm(y): 1.0087, norm:1.7949, tok/sec: 102511.65, flops:89.77, batch-reuse:1
@ 5781 train 4.4780 , allloss: 4.4987, dt: 1252.83ms, fracRes: 0.6018, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7093, norm(y): 1.0086, norm:1.7172, tok/sec: 104620.88, flops:91.62, batch-reuse:1
@ 5782 train 4.5208 , allloss: 4.5415, dt: 1255.81ms, fracRes: 0.6026, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7102, norm(y): 1.0086, norm:1.5800, tok/sec: 104372.36, flops:91.40, batch-reuse:1
@ 5783 train 4.4301 , allloss: 4.4523, dt: 1259.88ms, fracRes: 0.6022, norm(attn): 0.1309, norm(output): 0.2324, norm(x): 0.7090, norm(y): 1.0088, norm:1.2575, tok/sec: 104035.36, flops:91.10, batch-reuse:1
@ 5784 train 4.5228 , allloss: 4.5438, dt: 1280.71ms, fracRes: 0.6016, norm(attn): 0.1318, norm(output): 0.2324, norm(x): 0.7080, norm(y): 1.0087, norm:1.5317, tok/sec: 102343.33, flops:89.62, batch-reuse:1
@ 5785 train 4.5568 , allloss: 4.5792, dt: 1280.26ms, fracRes: 0.6020, norm(attn): 0.1318, norm(output): 0.2324, norm(x): 0.7067, norm(y): 1.0086, norm:1.6775, tok/sec: 102379.04, flops:89.65, batch-reuse:1
@ 5786 train 4.4910 , allloss: 4.5121, dt: 1285.53ms, fracRes: 0.6016, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7069, norm(y): 1.0086, norm:1.4569, tok/sec: 101959.44, flops:89.28, batch-reuse:1
@ 5787 train 4.4847 , allloss: 4.5053, dt: 1260.89ms, fracRes: 0.6019, norm(attn): 0.1309, norm(output): 0.2324, norm(x): 0.7055, norm(y): 1.0087, norm:1.3398, tok/sec: 103951.66, flops:91.03, batch-reuse:1
@ 5788 train 4.5049 , allloss: 4.5256, dt: 1252.09ms, fracRes: 0.6011, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7075, norm(y): 1.0086, norm:1.4914, tok/sec: 104682.47, flops:91.67, batch-reuse:1
@ 5789 train 4.4788 , allloss: 4.4992, dt: 1256.37ms, fracRes: 0.6022, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7122, norm(y): 1.0086, norm:1.2655, tok/sec: 104325.79, flops:91.36, batch-reuse:1
@ 5790 train 4.4950 , allloss: 4.5152, dt: 1258.99ms, fracRes: 0.6021, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7122, norm(y): 1.0086, norm:1.3796, tok/sec: 104109.04, flops:91.17, batch-reuse:1
@ 5791 train 4.5146 , allloss: 4.5346, dt: 1270.24ms, fracRes: 0.6020, norm(attn): 0.1328, norm(output): 0.2344, norm(x): 0.7125, norm(y): 1.0087, norm:1.1957, tok/sec: 103186.48, flops:90.36, batch-reuse:1
@ 5792 train 4.5930 , allloss: 4.6129, dt: 1252.52ms, fracRes: 0.6016, norm(attn): 0.1328, norm(output): 0.2344, norm(x): 0.7121, norm(y): 1.0086, norm:1.3993, tok/sec: 104646.86, flops:91.64, batch-reuse:1
@ 5793 train 4.4877 , allloss: 4.5089, dt: 1247.55ms, fracRes: 0.6016, norm(attn): 0.1328, norm(output): 0.2324, norm(x): 0.7097, norm(y): 1.0087, norm:1.5017, tok/sec: 105063.46, flops:92.00, batch-reuse:1
@ 5794 train 4.4614 , allloss: 4.4830, dt: 1266.17ms, fracRes: 0.6013, norm(attn): 0.1309, norm(output): 0.2334, norm(x): 0.7076, norm(y): 1.0087, norm:1.3214, tok/sec: 103518.78, flops:90.65, batch-reuse:1
@ 5795 train 4.4522 , allloss: 4.4727, dt: 1253.87ms, fracRes: 0.6008, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7080, norm(y): 1.0086, norm:1.3721, tok/sec: 104534.18, flops:91.54, batch-reuse:1
@ 5796 train 4.5738 , allloss: 4.5954, dt: 1273.09ms, fracRes: 0.6006, norm(attn): 0.1328, norm(output): 0.2344, norm(x): 0.7097, norm(y): 1.0085, norm:1.4395, tok/sec: 102955.73, flops:90.16, batch-reuse:1
@ 5797 train 4.4994 , allloss: 4.5244, dt: 1294.83ms, fracRes: 0.6013, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7102, norm(y): 1.0086, norm:1.3942, tok/sec: 101227.11, flops:88.64, batch-reuse:1
@ 5798 train 4.5285 , allloss: 4.5493, dt: 1263.10ms, fracRes: 0.6026, norm(attn): 0.1318, norm(output): 0.2324, norm(x): 0.7089, norm(y): 1.0087, norm:1.5187, tok/sec: 103769.90, flops:90.87, batch-reuse:1
@ 5799 train 4.3607 , allloss: 4.3812, dt: 1274.72ms, fracRes: 0.6024, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7106, norm(y): 1.0087, norm:1.3380, tok/sec: 102824.29, flops:90.04, batch-reuse:1
@ 5800 train 4.4408 , allloss: 4.4614, dt: 1247.62ms, fracRes: 0.6022, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7105, norm(y): 1.0086, norm:1.2590, tok/sec: 105057.60, flops:92.00, batch-reuse:1
@ 5801 train 4.4843 , allloss: 4.5066, dt: 1239.19ms, fracRes: 0.6016, norm(attn): 0.1328, norm(output): 0.2344, norm(x): 0.7103, norm(y): 1.0086, norm:1.3925, tok/sec: 105772.05, flops:92.62, batch-reuse:1
@ 5802 train 4.6411 , allloss: 4.6615, dt: 1251.49ms, fracRes: 0.6010, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7103, norm(y): 1.0085, norm:1.4405, tok/sec: 104732.37, flops:91.71, batch-reuse:1
@ 5803 train 4.4490 , allloss: 4.4695, dt: 1236.54ms, fracRes: 0.6014, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7118, norm(y): 1.0087, norm:1.3975, tok/sec: 105999.17, flops:92.82, batch-reuse:1
@ 5804 train 4.5863 , allloss: 4.6066, dt: 1255.12ms, fracRes: 0.6025, norm(attn): 0.1309, norm(output): 0.2324, norm(x): 0.7107, norm(y): 1.0086, norm:1.3078, tok/sec: 104429.69, flops:91.45, batch-reuse:1
@ 5805 train 4.5959 , allloss: 4.6167, dt: 1271.46ms, fracRes: 0.6021, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7109, norm(y): 1.0087, norm:1.4575, tok/sec: 103087.55, flops:90.27, batch-reuse:1
@ 5806 train 4.4673 , allloss: 4.4881, dt: 1253.65ms, fracRes: 0.6027, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7126, norm(y): 1.0087, norm:1.2451, tok/sec: 104552.71, flops:91.56, batch-reuse:1
@ 5807 train 4.4524 , allloss: 4.4721, dt: 1261.59ms, fracRes: 0.6017, norm(attn): 0.1328, norm(output): 0.2344, norm(x): 0.7115, norm(y): 1.0085, norm:1.3651, tok/sec: 103894.21, flops:90.98, batch-reuse:1
@ 5808 train 4.4676 , allloss: 4.4883, dt: 1252.21ms, fracRes: 0.6026, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7120, norm(y): 1.0087, norm:1.2060, tok/sec: 104672.71, flops:91.66, batch-reuse:1
@ 5809 train 4.5454 , allloss: 4.5668, dt: 1261.87ms, fracRes: 0.6013, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7092, norm(y): 1.0086, norm:1.4836, tok/sec: 103871.62, flops:90.96, batch-reuse:1
@ 5810 train 4.5242 , allloss: 4.5443, dt: 1256.37ms, fracRes: 0.6004, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7063, norm(y): 1.0086, norm:1.4332, tok/sec: 104326.17, flops:91.36, batch-reuse:1
@ 5811 train 4.5201 , allloss: 4.5410, dt: 1248.27ms, fracRes: 0.6010, norm(attn): 0.1309, norm(output): 0.2324, norm(x): 0.7067, norm(y): 1.0086, norm:1.4188, tok/sec: 105003.06, flops:91.95, batch-reuse:1
@ 5812 train 4.4894 , allloss: 4.5103, dt: 1244.99ms, fracRes: 0.6018, norm(attn): 0.1318, norm(output): 0.2324, norm(x): 0.7083, norm(y): 1.0086, norm:1.4354, tok/sec: 105279.49, flops:92.19, batch-reuse:1
@ 5813 train 4.4743 , allloss: 4.4952, dt: 1266.85ms, fracRes: 0.6019, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7095, norm(y): 1.0085, norm:1.2525, tok/sec: 103463.06, flops:90.60, batch-reuse:1
@ 5814 train 4.5247 , allloss: 4.5451, dt: 1242.35ms, fracRes: 0.6016, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7088, norm(y): 1.0087, norm:1.2562, tok/sec: 105502.89, flops:92.39, batch-reuse:1
@ 5815 train 4.4655 , allloss: 4.4862, dt: 1264.31ms, fracRes: 0.6018, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7089, norm(y): 1.0086, norm:1.3502, tok/sec: 103670.94, flops:90.78, batch-reuse:1
@ 5816 train 4.4384 , allloss: 4.4590, dt: 1241.33ms, fracRes: 0.6017, norm(attn): 0.1318, norm(output): 0.2324, norm(x): 0.7073, norm(y): 1.0086, norm:1.3909, tok/sec: 105589.86, flops:92.46, batch-reuse:1
@ 5817 train 4.4650 , allloss: 4.4857, dt: 1251.48ms, fracRes: 0.6010, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7062, norm(y): 1.0085, norm:1.3393, tok/sec: 104733.87, flops:91.71, batch-reuse:1
@ 5818 train 4.5978 , allloss: 4.6187, dt: 1257.93ms, fracRes: 0.6007, norm(attn): 0.1328, norm(output): 0.2344, norm(x): 0.7064, norm(y): 1.0085, norm:2.0227, tok/sec: 104196.81, flops:91.24, batch-reuse:1
@ 5819 train 4.5122 , allloss: 4.5325, dt: 1268.71ms, fracRes: 0.6012, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7089, norm(y): 1.0086, norm:1.3966, tok/sec: 103311.15, flops:90.47, batch-reuse:1
@ 5820 train 4.4499 , allloss: 4.4690, dt: 1260.00ms, fracRes: 0.6012, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7092, norm(y): 1.0086, norm:1.4201, tok/sec: 104025.77, flops:91.09, batch-reuse:1
@ 5821 train 4.4737 , allloss: 4.4935, dt: 1248.65ms, fracRes: 0.6013, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7069, norm(y): 1.0086, norm:1.5810, tok/sec: 104970.58, flops:91.92, batch-reuse:1
@ 5822 train 4.4265 , allloss: 4.4475, dt: 1254.23ms, fracRes: 0.6000, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7070, norm(y): 1.0085, norm:1.5559, tok/sec: 104504.08, flops:91.51, batch-reuse:1
@ 5823 train 4.4633 , allloss: 4.4838, dt: 1251.45ms, fracRes: 0.6009, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7087, norm(y): 1.0087, norm:1.5758, tok/sec: 104735.76, flops:91.72, batch-reuse:1
@ 5824 train 4.4836 , allloss: 4.5037, dt: 1255.90ms, fracRes: 0.6019, norm(attn): 0.1309, norm(output): 0.2324, norm(x): 0.7073, norm(y): 1.0087, norm:1.3777, tok/sec: 104365.18, flops:91.39, batch-reuse:1
@ 5825 train 4.4634 , allloss: 4.4844, dt: 1263.28ms, fracRes: 0.6022, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7080, norm(y): 1.0085, norm:1.4309, tok/sec: 103754.98, flops:90.86, batch-reuse:1
@ 5826 train 4.4881 , allloss: 4.5076, dt: 1264.26ms, fracRes: 0.6010, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7081, norm(y): 1.0086, norm:1.2825, tok/sec: 103674.76, flops:90.79, batch-reuse:1
@ 5827 train 4.4720 , allloss: 4.4924, dt: 1267.45ms, fracRes: 0.6004, norm(attn): 0.1338, norm(output): 0.2344, norm(x): 0.7071, norm(y): 1.0085, norm:1.3518, tok/sec: 103413.56, flops:90.56, batch-reuse:1
@ 5828 train 4.4652 , allloss: 4.4861, dt: 1278.63ms, fracRes: 0.6014, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7091, norm(y): 1.0086, norm:1.6167, tok/sec: 102509.66, flops:89.77, batch-reuse:1
@ 5829 train 4.5277 , allloss: 4.5479, dt: 1244.26ms, fracRes: 0.6003, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7055, norm(y): 1.0085, norm:1.3091, tok/sec: 105341.00, flops:92.25, batch-reuse:1
@ 5830 train 4.4865 , allloss: 4.5076, dt: 1259.42ms, fracRes: 0.5999, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.7063, norm(y): 1.0085, norm:1.5961, tok/sec: 104073.49, flops:91.14, batch-reuse:1
@ 5831 train 4.4956 , allloss: 4.5160, dt: 1269.19ms, fracRes: 0.6014, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7070, norm(y): 1.0085, norm:1.6150, tok/sec: 103272.22, flops:90.43, batch-reuse:1
@ 5832 train 4.4728 , allloss: 4.4920, dt: 1262.81ms, fracRes: 0.6026, norm(attn): 0.1318, norm(output): 0.2324, norm(x): 0.7102, norm(y): 1.0086, norm:1.1637, tok/sec: 103794.06, flops:90.89, batch-reuse:1
@ 5833 train 4.5103 , allloss: 4.5296, dt: 1251.22ms, fracRes: 0.6032, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7114, norm(y): 1.0086, norm:1.2779, tok/sec: 104755.46, flops:91.73, batch-reuse:1
@ 5834 train 4.4723 , allloss: 4.4914, dt: 1249.30ms, fracRes: 0.6023, norm(attn): 0.1338, norm(output): 0.2344, norm(x): 0.7108, norm(y): 1.0086, norm:1.2785, tok/sec: 104916.17, flops:91.87, batch-reuse:1
@ 5835 train 4.4467 , allloss: 4.4667, dt: 1249.88ms, fracRes: 0.6024, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7096, norm(y): 1.0086, norm:1.4223, tok/sec: 104867.58, flops:91.83, batch-reuse:1
@ 5836 train 4.4051 , allloss: 4.4261, dt: 1233.60ms, fracRes: 0.6025, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7077, norm(y): 1.0087, norm:1.2260, tok/sec: 106251.44, flops:93.04, batch-reuse:1
@ 5837 train 4.5587 , allloss: 4.5798, dt: 1284.68ms, fracRes: 0.6019, norm(attn): 0.1318, norm(output): 0.2324, norm(x): 0.7050, norm(y): 1.0086, norm:1.2586, tok/sec: 102027.31, flops:89.34, batch-reuse:1
@ 5838 train 4.3936 , allloss: 4.4167, dt: 1258.51ms, fracRes: 0.6023, norm(attn): 0.1328, norm(output): 0.2324, norm(x): 0.7036, norm(y): 1.0087, norm:1.5684, tok/sec: 104148.25, flops:91.20, batch-reuse:1
@ 5839 train 4.3994 , allloss: 4.4200, dt: 1252.97ms, fracRes: 0.6004, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7027, norm(y): 1.0086, norm:1.3204, tok/sec: 104609.31, flops:91.60, batch-reuse:1
@ 5840 train 4.4431 , allloss: 4.4652, dt: 1255.58ms, fracRes: 0.6006, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7030, norm(y): 1.0086, norm:1.3395, tok/sec: 104391.84, flops:91.41, batch-reuse:1
@ 5841 train 4.5107 , allloss: 4.5304, dt: 1253.22ms, fracRes: 0.6009, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7034, norm(y): 1.0085, norm:1.4082, tok/sec: 104587.82, flops:91.59, batch-reuse:1
@ 5842 train 4.5483 , allloss: 4.5686, dt: 1241.53ms, fracRes: 0.6019, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7041, norm(y): 1.0085, norm:1.2711, tok/sec: 105572.81, flops:92.45, batch-reuse:1
@ 5843 train 4.4022 , allloss: 4.4226, dt: 1254.54ms, fracRes: 0.6018, norm(attn): 0.1328, norm(output): 0.2324, norm(x): 0.7027, norm(y): 1.0084, norm:1.2441, tok/sec: 104478.30, flops:91.49, batch-reuse:1
@ 5844 train 4.4273 , allloss: 4.4485, dt: 1260.27ms, fracRes: 0.6014, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7041, norm(y): 1.0086, norm:1.4221, tok/sec: 104003.02, flops:91.07, batch-reuse:1
@ 5845 train 4.4327 , allloss: 4.4534, dt: 1247.79ms, fracRes: 0.6005, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7039, norm(y): 1.0086, norm:1.3928, tok/sec: 105042.91, flops:91.98, batch-reuse:1
@ 5846 train 4.4831 , allloss: 4.5035, dt: 1272.75ms, fracRes: 0.6016, norm(attn): 0.1309, norm(output): 0.2324, norm(x): 0.7055, norm(y): 1.0085, norm:1.3583, tok/sec: 102983.62, flops:90.18, batch-reuse:1
@ 5847 train 4.4276 , allloss: 4.4484, dt: 1254.67ms, fracRes: 0.6019, norm(attn): 0.1309, norm(output): 0.2324, norm(x): 0.7068, norm(y): 1.0084, norm:1.4972, tok/sec: 104467.60, flops:91.48, batch-reuse:1
@ 5848 train 4.4561 , allloss: 4.4764, dt: 1267.01ms, fracRes: 0.6019, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7061, norm(y): 1.0086, norm:1.2920, tok/sec: 103450.07, flops:90.59, batch-reuse:1
@ 5849 train 4.4267 , allloss: 4.4464, dt: 1256.19ms, fracRes: 0.6012, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7068, norm(y): 1.0086, norm:1.3801, tok/sec: 104340.62, flops:91.37, batch-reuse:1
@ 5850 train 4.5147 , allloss: 4.5343, dt: 1276.93ms, fracRes: 0.6013, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7064, norm(y): 1.0085, norm:1.2801, tok/sec: 102646.41, flops:89.89, batch-reuse:1
@ 5851 train 4.5133 , allloss: 4.5333, dt: 1283.07ms, fracRes: 0.6020, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7084, norm(y): 1.0086, norm:1.3572, tok/sec: 102155.38, flops:89.46, batch-reuse:1
@ 5852 train 4.5217 , allloss: 4.5431, dt: 1299.53ms, fracRes: 0.6022, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7075, norm(y): 1.0086, norm:1.4982, tok/sec: 100860.75, flops:88.32, batch-reuse:1
@ 5853 train 4.4444 , allloss: 4.4647, dt: 1303.30ms, fracRes: 0.6020, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7073, norm(y): 1.0086, norm:1.3915, tok/sec: 100569.61, flops:88.07, batch-reuse:1
@ 5854 train 4.4850 , allloss: 4.5055, dt: 1256.82ms, fracRes: 0.6014, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7072, norm(y): 1.0086, norm:1.4187, tok/sec: 104288.49, flops:91.32, batch-reuse:1
@ 5855 train 4.6363 , allloss: 4.6571, dt: 1266.22ms, fracRes: 0.6024, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7070, norm(y): 1.0085, norm:1.4519, tok/sec: 103514.47, flops:90.65, batch-reuse:1
@ 5856 train 4.5516 , allloss: 4.5720, dt: 1270.32ms, fracRes: 0.6020, norm(attn): 0.1318, norm(output): 0.2324, norm(x): 0.7056, norm(y): 1.0085, norm:1.6162, tok/sec: 103180.05, flops:90.35, batch-reuse:1
@ 5857 train 4.5163 , allloss: 4.5376, dt: 1260.56ms, fracRes: 0.6024, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7029, norm(y): 1.0085, norm:1.9940, tok/sec: 103979.30, flops:91.05, batch-reuse:1
@ 5858 train 4.4223 , allloss: 4.4435, dt: 1238.90ms, fracRes: 0.6021, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7052, norm(y): 1.0086, norm:1.5498, tok/sec: 105797.43, flops:92.65, batch-reuse:1
@ 5859 train 4.4093 , allloss: 4.4302, dt: 1270.77ms, fracRes: 0.6020, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7059, norm(y): 1.0087, norm:1.3012, tok/sec: 103144.09, flops:90.32, batch-reuse:1
@ 5860 train 4.4382 , allloss: 4.4598, dt: 1249.51ms, fracRes: 0.6019, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7049, norm(y): 1.0086, norm:1.3788, tok/sec: 104898.80, flops:91.86, batch-reuse:1
@ 5861 train 4.4145 , allloss: 4.4346, dt: 1267.60ms, fracRes: 0.6026, norm(attn): 0.1318, norm(output): 0.2324, norm(x): 0.7043, norm(y): 1.0087, norm:1.2755, tok/sec: 103402.01, flops:90.55, batch-reuse:1
@ 5862 train 4.3479 , allloss: 4.3694, dt: 1262.65ms, fracRes: 0.6022, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7049, norm(y): 1.0085, norm:1.2441, tok/sec: 103806.99, flops:90.90, batch-reuse:1
@ 5863 train 4.3258 , allloss: 4.3456, dt: 1266.96ms, fracRes: 0.6015, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7058, norm(y): 1.0087, norm:1.3831, tok/sec: 103453.93, flops:90.59, batch-reuse:1
@ 5864 train 4.4898 , allloss: 4.5097, dt: 1273.12ms, fracRes: 0.6011, norm(attn): 0.1328, norm(output): 0.2344, norm(x): 0.7060, norm(y): 1.0085, norm:1.4088, tok/sec: 102953.44, flops:90.15, batch-reuse:1
@ 5865 train 4.4583 , allloss: 4.4773, dt: 1264.21ms, fracRes: 0.6022, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7059, norm(y): 1.0087, norm:1.4830, tok/sec: 103678.86, flops:90.79, batch-reuse:1
@ 5866 train 4.3789 , allloss: 4.3990, dt: 1259.81ms, fracRes: 0.6027, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7092, norm(y): 1.0087, norm:1.6701, tok/sec: 104040.89, flops:91.11, batch-reuse:1
@ 5867 train 4.3368 , allloss: 4.3566, dt: 1257.57ms, fracRes: 0.6028, norm(attn): 0.1309, norm(output): 0.2324, norm(x): 0.7086, norm(y): 1.0087, norm:1.2300, tok/sec: 104226.64, flops:91.27, batch-reuse:1
@ 5868 train 4.4331 , allloss: 4.4530, dt: 1238.69ms, fracRes: 0.6019, norm(attn): 0.1318, norm(output): 0.2324, norm(x): 0.7080, norm(y): 1.0086, norm:1.1157, tok/sec: 105814.90, flops:92.66, batch-reuse:1
@ 5869 train 4.4591 , allloss: 4.4806, dt: 1268.84ms, fracRes: 0.6012, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7045, norm(y): 1.0086, norm:1.4656, tok/sec: 103300.49, flops:90.46, batch-reuse:1
@ 5870 train 4.4587 , allloss: 4.4786, dt: 1295.54ms, fracRes: 0.6011, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7071, norm(y): 1.0085, norm:1.6142, tok/sec: 101171.84, flops:88.59, batch-reuse:1
@ 5871 train 4.3929 , allloss: 4.4133, dt: 1232.85ms, fracRes: 0.6014, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7067, norm(y): 1.0085, norm:1.3684, tok/sec: 106316.01, flops:93.10, batch-reuse:1
@ 5872 train 4.3874 , allloss: 4.4075, dt: 1272.63ms, fracRes: 0.6014, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7069, norm(y): 1.0086, norm:1.4452, tok/sec: 102992.77, flops:90.19, batch-reuse:1
@ 5873 train 4.4099 , allloss: 4.4295, dt: 1258.94ms, fracRes: 0.6011, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7072, norm(y): 1.0085, norm:1.5004, tok/sec: 104112.95, flops:91.17, batch-reuse:1
@ 5874 train 4.3053 , allloss: 4.3249, dt: 1257.91ms, fracRes: 0.6012, norm(attn): 0.1318, norm(output): 0.2324, norm(x): 0.7081, norm(y): 1.0086, norm:1.4346, tok/sec: 104198.55, flops:91.25, batch-reuse:1
@ 5875 train 4.4069 , allloss: 4.4270, dt: 1267.47ms, fracRes: 0.6011, norm(attn): 0.1318, norm(output): 0.2324, norm(x): 0.7065, norm(y): 1.0086, norm:1.4632, tok/sec: 103412.47, flops:90.56, batch-reuse:1
@ 5876 train 4.4004 , allloss: 4.4214, dt: 1253.23ms, fracRes: 0.6005, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7059, norm(y): 1.0085, norm:1.3575, tok/sec: 104587.72, flops:91.59, batch-reuse:1
@ 5877 train 4.4535 , allloss: 4.4731, dt: 1276.88ms, fracRes: 0.6010, norm(attn): 0.1338, norm(output): 0.2344, norm(x): 0.7081, norm(y): 1.0086, norm:1.1553, tok/sec: 102650.07, flops:89.89, batch-reuse:1
@ 5878 train 4.5248 , allloss: 4.5455, dt: 1264.58ms, fracRes: 0.6019, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7093, norm(y): 1.0086, norm:1.4427, tok/sec: 103648.93, flops:90.76, batch-reuse:1
@ 5879 train 4.4958 , allloss: 4.5151, dt: 1266.66ms, fracRes: 0.6019, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7080, norm(y): 1.0086, norm:1.2025, tok/sec: 103478.29, flops:90.61, batch-reuse:1
@ 5880 train 4.3736 , allloss: 4.3940, dt: 1260.80ms, fracRes: 0.6013, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7069, norm(y): 1.0087, norm:1.3434, tok/sec: 103959.01, flops:91.04, batch-reuse:1
@ 5881 train 4.3091 , allloss: 4.3325, dt: 1264.46ms, fracRes: 0.6014, norm(attn): 0.1328, norm(output): 0.2344, norm(x): 0.7047, norm(y): 1.0085, norm:1.3442, tok/sec: 103658.35, flops:90.77, batch-reuse:1
@ 5882 train 4.3893 , allloss: 4.4088, dt: 1259.31ms, fracRes: 0.6011, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7074, norm(y): 1.0087, norm:1.3637, tok/sec: 104082.57, flops:91.14, batch-reuse:1
@ 5883 train 4.5208 , allloss: 4.5398, dt: 1272.22ms, fracRes: 0.6012, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7078, norm(y): 1.0086, norm:1.2347, tok/sec: 103025.96, flops:90.22, batch-reuse:1
@ 5884 train 4.3640 , allloss: 4.3833, dt: 1244.26ms, fracRes: 0.6013, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.7088, norm(y): 1.0086, norm:1.2917, tok/sec: 105341.26, flops:92.25, batch-reuse:1
@ 5885 train 4.3820 , allloss: 4.4017, dt: 1269.45ms, fracRes: 0.6023, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7074, norm(y): 1.0086, norm:1.3182, tok/sec: 103251.37, flops:90.42, batch-reuse:1
@ 5886 train 4.4423 , allloss: 4.4611, dt: 1255.77ms, fracRes: 0.6028, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7076, norm(y): 1.0087, norm:1.3029, tok/sec: 104375.49, flops:91.40, batch-reuse:1
@ 5887 train 4.4584 , allloss: 4.4777, dt: 1277.77ms, fracRes: 0.6019, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.7076, norm(y): 1.0084, norm:1.2667, tok/sec: 102578.55, flops:89.83, batch-reuse:1
@ 5888 train 4.3768 , allloss: 4.3974, dt: 1266.18ms, fracRes: 0.6021, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7044, norm(y): 1.0086, norm:1.3935, tok/sec: 103517.33, flops:90.65, batch-reuse:1
@ 5889 train 4.4736 , allloss: 4.4939, dt: 1265.52ms, fracRes: 0.6009, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7029, norm(y): 1.0086, norm:1.3379, tok/sec: 103571.43, flops:90.70, batch-reuse:1
@ 5890 train 4.4291 , allloss: 4.4490, dt: 1268.75ms, fracRes: 0.6017, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7041, norm(y): 1.0088, norm:1.3464, tok/sec: 103308.08, flops:90.47, batch-reuse:1
@ 5891 train 4.3851 , allloss: 4.4048, dt: 1259.77ms, fracRes: 0.6017, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7078, norm(y): 1.0086, norm:1.3950, tok/sec: 104044.57, flops:91.11, batch-reuse:1
@ 5892 train 4.4629 , allloss: 4.4821, dt: 1275.98ms, fracRes: 0.6013, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7070, norm(y): 1.0085, norm:1.8575, tok/sec: 102722.82, flops:89.95, batch-reuse:1
@ 5893 train 4.4115 , allloss: 4.4308, dt: 1254.00ms, fracRes: 0.6014, norm(attn): 0.1328, norm(output): 0.2344, norm(x): 0.7078, norm(y): 1.0085, norm:1.1386, tok/sec: 104522.91, flops:91.53, batch-reuse:1
@ 5894 train 4.3778 , allloss: 4.3979, dt: 1278.81ms, fracRes: 0.6023, norm(attn): 0.1318, norm(output): 0.2324, norm(x): 0.7055, norm(y): 1.0086, norm:1.3159, tok/sec: 102495.21, flops:89.75, batch-reuse:1
@ 5895 train 4.3613 , allloss: 4.3814, dt: 1306.44ms, fracRes: 0.6013, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7043, norm(y): 1.0087, norm:1.3498, tok/sec: 100327.49, flops:87.86, batch-reuse:1
@ 5896 train 4.4461 , allloss: 4.4662, dt: 1304.46ms, fracRes: 0.6012, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7057, norm(y): 1.0087, norm:1.3235, tok/sec: 100480.02, flops:87.99, batch-reuse:1
@ 5897 train 4.4166 , allloss: 4.4356, dt: 1308.48ms, fracRes: 0.6018, norm(attn): 0.1318, norm(output): 0.2324, norm(x): 0.7069, norm(y): 1.0087, norm:1.3212, tok/sec: 100171.26, flops:87.72, batch-reuse:1
@ 5898 train 4.3973 , allloss: 4.4165, dt: 1303.52ms, fracRes: 0.6022, norm(attn): 0.1318, norm(output): 0.2324, norm(x): 0.7050, norm(y): 1.0087, norm:1.4762, tok/sec: 100552.45, flops:88.05, batch-reuse:1
@ 5899 train 4.2825 , allloss: 4.3027, dt: 1277.33ms, fracRes: 0.6022, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7064, norm(y): 1.0086, norm:1.3676, tok/sec: 102614.30, flops:89.86, batch-reuse:1
@ 5900 train 4.3856 , allloss: 4.4056, dt: 1259.36ms, fracRes: 0.6027, norm(attn): 0.1328, norm(output): 0.2324, norm(x): 0.7040, norm(y): 1.0086, norm:1.4477, tok/sec: 104077.94, flops:91.14, batch-reuse:1
@ 5901 train 4.3472 , allloss: 4.3689, dt: 1255.49ms, fracRes: 0.6030, norm(attn): 0.1318, norm(output): 0.2324, norm(x): 0.7051, norm(y): 1.0086, norm:1.3703, tok/sec: 104399.41, flops:91.42, batch-reuse:1
@ 5902 train 4.3396 , allloss: 4.3598, dt: 1253.11ms, fracRes: 0.6028, norm(attn): 0.1309, norm(output): 0.2324, norm(x): 0.7065, norm(y): 1.0085, norm:1.3659, tok/sec: 104597.01, flops:91.59, batch-reuse:1
@ 5903 train 4.4496 , allloss: 4.4694, dt: 1257.30ms, fracRes: 0.6026, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7066, norm(y): 1.0085, norm:1.4359, tok/sec: 104248.52, flops:91.29, batch-reuse:1
@ 5904 train 4.4479 , allloss: 4.4671, dt: 1273.13ms, fracRes: 0.6021, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7062, norm(y): 1.0086, norm:1.2710, tok/sec: 102952.36, flops:90.15, batch-reuse:1
@ 5905 train 4.2545 , allloss: 4.2743, dt: 1257.85ms, fracRes: 0.6013, norm(attn): 0.1328, norm(output): 0.2344, norm(x): 0.7044, norm(y): 1.0085, norm:1.5975, tok/sec: 104203.23, flops:91.25, batch-reuse:1
@ 5906 train 4.2781 , allloss: 4.2987, dt: 1256.22ms, fracRes: 0.6018, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7036, norm(y): 1.0087, norm:1.3770, tok/sec: 104338.70, flops:91.37, batch-reuse:1
@ 5907 train 4.3459 , allloss: 4.3663, dt: 1273.39ms, fracRes: 0.6023, norm(attn): 0.1338, norm(output): 0.2344, norm(x): 0.7066, norm(y): 1.0086, norm:1.5519, tok/sec: 102931.48, flops:90.14, batch-reuse:1
@ 5908 train 4.3631 , allloss: 4.3823, dt: 1258.68ms, fracRes: 0.6024, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7059, norm(y): 1.0086, norm:1.4524, tok/sec: 104134.32, flops:91.19, batch-reuse:1
@ 5909 train 4.4344 , allloss: 4.4551, dt: 1274.80ms, fracRes: 0.6026, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7072, norm(y): 1.0085, norm:1.4939, tok/sec: 102817.46, flops:90.04, batch-reuse:1
@ 5910 train 4.3891 , allloss: 4.4095, dt: 1263.08ms, fracRes: 0.6019, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.7043, norm(y): 1.0085, norm:1.2542, tok/sec: 103771.45, flops:90.87, batch-reuse:1
@ 5911 train 4.3821 , allloss: 4.4018, dt: 1263.12ms, fracRes: 0.6022, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7035, norm(y): 1.0086, norm:1.4414, tok/sec: 103768.35, flops:90.87, batch-reuse:1
@ 5912 train 4.3387 , allloss: 4.3593, dt: 1263.57ms, fracRes: 0.6022, norm(attn): 0.1318, norm(output): 0.2324, norm(x): 0.7030, norm(y): 1.0085, norm:1.2956, tok/sec: 103731.09, flops:90.84, batch-reuse:1
@ 5913 train 4.4945 , allloss: 4.5167, dt: 1271.86ms, fracRes: 0.6013, norm(attn): 0.1318, norm(output): 0.2324, norm(x): 0.6996, norm(y): 1.0086, norm:1.8937, tok/sec: 103055.57, flops:90.24, batch-reuse:1
@ 5914 train 4.2936 , allloss: 4.3145, dt: 1285.83ms, fracRes: 0.6001, norm(attn): 0.1328, norm(output): 0.2324, norm(x): 0.6993, norm(y): 1.0086, norm:1.6222, tok/sec: 101935.54, flops:89.26, batch-reuse:1
@ 5915 train 4.3272 , allloss: 4.3465, dt: 1272.26ms, fracRes: 0.6003, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7005, norm(y): 1.0087, norm:1.3761, tok/sec: 103022.76, flops:90.22, batch-reuse:1
@ 5916 train 4.1684 , allloss: 4.1888, dt: 1297.92ms, fracRes: 0.6006, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7033, norm(y): 1.0086, norm:1.2578, tok/sec: 100986.36, flops:88.43, batch-reuse:1
@ 5917 train 4.3072 , allloss: 4.3268, dt: 1259.49ms, fracRes: 0.6015, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7031, norm(y): 1.0085, norm:1.3208, tok/sec: 104067.50, flops:91.13, batch-reuse:1
@ 5918 train 4.3584 , allloss: 4.3786, dt: 1263.97ms, fracRes: 0.6017, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7043, norm(y): 1.0086, norm:1.3775, tok/sec: 103698.55, flops:90.81, batch-reuse:1
@ 5919 train 4.4126 , allloss: 4.4324, dt: 1254.50ms, fracRes: 0.6020, norm(attn): 0.1328, norm(output): 0.2324, norm(x): 0.7053, norm(y): 1.0086, norm:1.4096, tok/sec: 104481.59, flops:91.49, batch-reuse:1
@ 5920 train 4.3092 , allloss: 4.3285, dt: 1262.21ms, fracRes: 0.6019, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7075, norm(y): 1.0086, norm:1.3838, tok/sec: 103842.97, flops:90.93, batch-reuse:1
@ 5921 train 4.3022 , allloss: 4.3216, dt: 1254.58ms, fracRes: 0.6020, norm(attn): 0.1318, norm(output): 0.2324, norm(x): 0.7058, norm(y): 1.0086, norm:1.3932, tok/sec: 104474.90, flops:91.49, batch-reuse:1
@ 5922 train 4.3054 , allloss: 4.3254, dt: 1262.46ms, fracRes: 0.6027, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7070, norm(y): 1.0086, norm:1.3672, tok/sec: 103822.58, flops:90.92, batch-reuse:1
@ 5923 train 4.3517 , allloss: 4.3716, dt: 1287.22ms, fracRes: 0.6021, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7059, norm(y): 1.0087, norm:1.2453, tok/sec: 101825.70, flops:89.17, batch-reuse:1
@ 5924 train 4.3289 , allloss: 4.3492, dt: 1281.85ms, fracRes: 0.6019, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7055, norm(y): 1.0087, norm:1.3475, tok/sec: 102251.90, flops:89.54, batch-reuse:1
@ 5925 train 4.5011 , allloss: 4.5225, dt: 1266.45ms, fracRes: 0.6026, norm(attn): 0.1328, norm(output): 0.2324, norm(x): 0.7051, norm(y): 1.0087, norm:1.6360, tok/sec: 103495.21, flops:90.63, batch-reuse:1
@ 5926 train 4.2801 , allloss: 4.2993, dt: 1268.24ms, fracRes: 0.6019, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7074, norm(y): 1.0086, norm:1.5089, tok/sec: 103349.88, flops:90.50, batch-reuse:1
@ 5927 train 4.4553 , allloss: 4.4763, dt: 1277.70ms, fracRes: 0.6018, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.7085, norm(y): 1.0084, norm:1.5010, tok/sec: 102584.57, flops:89.83, batch-reuse:1
@ 5928 train 4.2949 , allloss: 4.3146, dt: 1248.63ms, fracRes: 0.6017, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7080, norm(y): 1.0086, norm:1.3374, tok/sec: 104972.57, flops:91.92, batch-reuse:1
@ 5929 train 4.3278 , allloss: 4.3478, dt: 1265.97ms, fracRes: 0.6016, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7066, norm(y): 1.0084, norm:1.3315, tok/sec: 103534.76, flops:90.66, batch-reuse:1
@ 5930 train 4.3193 , allloss: 4.3397, dt: 1245.91ms, fracRes: 0.6017, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7047, norm(y): 1.0085, norm:1.3264, tok/sec: 105201.42, flops:92.12, batch-reuse:1
@ 5931 train 4.3156 , allloss: 4.3366, dt: 1258.52ms, fracRes: 0.6017, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7042, norm(y): 1.0085, norm:1.3992, tok/sec: 104147.72, flops:91.20, batch-reuse:1
@ 5932 train 4.2632 , allloss: 4.2836, dt: 1288.47ms, fracRes: 0.6007, norm(attn): 0.1318, norm(output): 0.2324, norm(x): 0.7022, norm(y): 1.0087, norm:1.2029, tok/sec: 101726.64, flops:89.08, batch-reuse:1
@ 5933 train 4.3230 , allloss: 4.3424, dt: 1282.15ms, fracRes: 0.6005, norm(attn): 0.1318, norm(output): 0.2324, norm(x): 0.7008, norm(y): 1.0086, norm:1.5511, tok/sec: 102228.48, flops:89.52, batch-reuse:1
@ 5934 train 4.4317 , allloss: 4.4509, dt: 1258.78ms, fracRes: 0.6014, norm(attn): 0.1309, norm(output): 0.2324, norm(x): 0.7026, norm(y): 1.0087, norm:1.4221, tok/sec: 104126.02, flops:91.18, batch-reuse:1
@ 5935 train 4.2906 , allloss: 4.3109, dt: 1269.65ms, fracRes: 0.6011, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7043, norm(y): 1.0087, norm:1.5290, tok/sec: 103234.75, flops:90.40, batch-reuse:1
@ 5936 train 4.1613 , allloss: 4.1820, dt: 1263.85ms, fracRes: 0.6009, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7048, norm(y): 1.0087, norm:1.4244, tok/sec: 103708.53, flops:90.82, batch-reuse:1
@ 5937 train 4.3021 , allloss: 4.3244, dt: 1261.89ms, fracRes: 0.6014, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7049, norm(y): 1.0086, norm:1.3244, tok/sec: 103869.22, flops:90.96, batch-reuse:1
@ 5938 train 4.3847 , allloss: 4.4053, dt: 1269.80ms, fracRes: 0.6020, norm(attn): 0.1328, norm(output): 0.2314, norm(x): 0.7046, norm(y): 1.0085, norm:1.2874, tok/sec: 103222.46, flops:90.39, batch-reuse:1
@ 5939 train 4.2139 , allloss: 4.2349, dt: 1269.72ms, fracRes: 0.6024, norm(attn): 0.1328, norm(output): 0.2324, norm(x): 0.7044, norm(y): 1.0085, norm:1.4294, tok/sec: 103229.21, flops:90.40, batch-reuse:1
@ 5940 train 4.2535 , allloss: 4.2726, dt: 1256.48ms, fracRes: 0.6021, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7037, norm(y): 1.0087, norm:1.6101, tok/sec: 104316.65, flops:91.35, batch-reuse:1
@ 5941 train 4.1730 , allloss: 4.1950, dt: 1276.43ms, fracRes: 0.6019, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7033, norm(y): 1.0085, norm:1.4868, tok/sec: 102686.77, flops:89.92, batch-reuse:1
@ 5942 train 4.3455 , allloss: 4.3654, dt: 1276.50ms, fracRes: 0.6024, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7046, norm(y): 1.0085, norm:1.3357, tok/sec: 102680.46, flops:89.92, batch-reuse:1
@ 5943 train 4.3279 , allloss: 4.3478, dt: 1274.13ms, fracRes: 0.6020, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.7077, norm(y): 1.0085, norm:1.3334, tok/sec: 102871.39, flops:90.08, batch-reuse:1
@ 5944 train 4.3075 , allloss: 4.3269, dt: 1273.22ms, fracRes: 0.6024, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7064, norm(y): 1.0085, norm:1.4551, tok/sec: 102945.65, flops:90.15, batch-reuse:1
@ 5945 train 4.3066 , allloss: 4.3262, dt: 1242.84ms, fracRes: 0.6027, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7067, norm(y): 1.0086, norm:1.4105, tok/sec: 105462.02, flops:92.35, batch-reuse:1
@ 5946 train 4.2256 , allloss: 4.2451, dt: 1275.52ms, fracRes: 0.6026, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7053, norm(y): 1.0087, norm:1.2757, tok/sec: 102759.84, flops:89.99, batch-reuse:1
@ 5947 train 4.3217 , allloss: 4.3417, dt: 1253.83ms, fracRes: 0.6021, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7034, norm(y): 1.0086, norm:1.4182, tok/sec: 104537.18, flops:91.54, batch-reuse:1
@ 5948 train 4.1895 , allloss: 4.2088, dt: 1261.12ms, fracRes: 0.5998, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.7003, norm(y): 1.0085, norm:1.1878, tok/sec: 103933.22, flops:91.01, batch-reuse:1
@ 5949 train 4.3079 , allloss: 4.3278, dt: 1265.65ms, fracRes: 0.6003, norm(attn): 0.1328, norm(output): 0.2324, norm(x): 0.6993, norm(y): 1.0086, norm:1.3009, tok/sec: 103561.03, flops:90.69, batch-reuse:1
@ 5950 train 4.3217 , allloss: 4.3420, dt: 1261.71ms, fracRes: 0.6012, norm(attn): 0.1328, norm(output): 0.2324, norm(x): 0.7005, norm(y): 1.0085, norm:1.2479, tok/sec: 103884.79, flops:90.97, batch-reuse:1
@ 5951 train 4.4406 , allloss: 4.4610, dt: 1268.47ms, fracRes: 0.6022, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7013, norm(y): 1.0084, norm:1.3220, tok/sec: 103331.09, flops:90.49, batch-reuse:1
@ 5952 train 4.4878 , allloss: 4.5076, dt: 1259.62ms, fracRes: 0.6017, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.7046, norm(y): 1.0084, norm:1.3178, tok/sec: 104056.59, flops:91.12, batch-reuse:1
@ 5953 train 4.5063 , allloss: 4.5254, dt: 1269.43ms, fracRes: 0.6013, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7040, norm(y): 1.0085, norm:1.5001, tok/sec: 103252.78, flops:90.42, batch-reuse:1
@ 5954 train 4.4558 , allloss: 4.4768, dt: 1287.60ms, fracRes: 0.6024, norm(attn): 0.1318, norm(output): 0.2324, norm(x): 0.7050, norm(y): 1.0086, norm:1.7287, tok/sec: 101795.77, flops:89.14, batch-reuse:1
@ 5955 train 4.5108 , allloss: 4.5305, dt: 1260.88ms, fracRes: 0.6012, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7037, norm(y): 1.0084, norm:1.3715, tok/sec: 103952.95, flops:91.03, batch-reuse:1
@ 5956 train 4.5399 , allloss: 4.5602, dt: 1266.23ms, fracRes: 0.6016, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7030, norm(y): 1.0085, norm:1.2498, tok/sec: 103513.53, flops:90.65, batch-reuse:1
@ 5957 train 4.4166 , allloss: 4.4371, dt: 1257.18ms, fracRes: 0.6021, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7031, norm(y): 1.0086, norm:1.4804, tok/sec: 104258.92, flops:91.30, batch-reuse:1
@ 5958 train 4.5097 , allloss: 4.5291, dt: 1243.88ms, fracRes: 0.6021, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7048, norm(y): 1.0084, norm:1.2667, tok/sec: 105373.91, flops:92.27, batch-reuse:1
@ 5959 train 4.4646 , allloss: 4.4842, dt: 1247.00ms, fracRes: 0.6016, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7040, norm(y): 1.0083, norm:1.4776, tok/sec: 105109.99, flops:92.04, batch-reuse:1
@ 5960 train 4.4499 , allloss: 4.4697, dt: 1250.07ms, fracRes: 0.6014, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7013, norm(y): 1.0083, norm:1.3562, tok/sec: 104851.48, flops:91.82, batch-reuse:1
@ 5961 train 4.4787 , allloss: 4.5031, dt: 1266.10ms, fracRes: 0.6016, norm(attn): 0.1348, norm(output): 0.2324, norm(x): 0.6998, norm(y): 1.0084, norm:1.5978, tok/sec: 103524.29, flops:90.65, batch-reuse:1
@ 5962 train 4.4671 , allloss: 4.4880, dt: 1264.74ms, fracRes: 0.6007, norm(attn): 0.1328, norm(output): 0.2324, norm(x): 0.6967, norm(y): 1.0083, norm:1.4889, tok/sec: 103635.57, flops:90.75, batch-reuse:1
@ 5963 train 4.4944 , allloss: 4.5153, dt: 1255.13ms, fracRes: 0.6009, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.6974, norm(y): 1.0083, norm:1.6178, tok/sec: 104429.38, flops:91.45, batch-reuse:1
@ 5964 train 4.5761 , allloss: 4.5969, dt: 1270.99ms, fracRes: 0.6015, norm(attn): 0.1328, norm(output): 0.2324, norm(x): 0.6997, norm(y): 1.0084, norm:1.4072, tok/sec: 103125.74, flops:90.31, batch-reuse:1
@ 5965 train 4.4891 , allloss: 4.5098, dt: 1273.84ms, fracRes: 0.6016, norm(attn): 0.1328, norm(output): 0.2324, norm(x): 0.7020, norm(y): 1.0085, norm:1.4799, tok/sec: 102895.32, flops:90.10, batch-reuse:1
@ 5966 train 4.5381 , allloss: 4.5582, dt: 1275.57ms, fracRes: 0.6020, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7041, norm(y): 1.0085, norm:1.5578, tok/sec: 102755.39, flops:89.98, batch-reuse:1
@ 5967 train 4.4467 , allloss: 4.4661, dt: 1250.75ms, fracRes: 0.6018, norm(attn): 0.1328, norm(output): 0.2324, norm(x): 0.7029, norm(y): 1.0085, norm:1.4159, tok/sec: 104794.84, flops:91.77, batch-reuse:1
@ 5968 train 4.4287 , allloss: 4.4495, dt: 1252.92ms, fracRes: 0.6011, norm(attn): 0.1338, norm(output): 0.2344, norm(x): 0.7040, norm(y): 1.0084, norm:1.4002, tok/sec: 104613.17, flops:91.61, batch-reuse:1
@ 5969 train 4.4118 , allloss: 4.4320, dt: 1260.62ms, fracRes: 0.6016, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7023, norm(y): 1.0084, norm:1.5513, tok/sec: 103974.01, flops:91.05, batch-reuse:1
@ 5970 train 4.4901 , allloss: 4.5102, dt: 1259.74ms, fracRes: 0.6025, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7043, norm(y): 1.0085, norm:1.5485, tok/sec: 104047.19, flops:91.11, batch-reuse:1
@ 5971 train 4.3769 , allloss: 4.3974, dt: 1263.49ms, fracRes: 0.6027, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7043, norm(y): 1.0085, norm:1.7177, tok/sec: 103737.85, flops:90.84, batch-reuse:1
@ 5972 train 4.4251 , allloss: 4.4454, dt: 1254.55ms, fracRes: 0.6029, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7047, norm(y): 1.0085, norm:1.2933, tok/sec: 104477.30, flops:91.49, batch-reuse:1
@ 5973 train 4.4604 , allloss: 4.4797, dt: 1270.84ms, fracRes: 0.6028, norm(attn): 0.1318, norm(output): 0.2324, norm(x): 0.7032, norm(y): 1.0085, norm:1.5228, tok/sec: 103138.20, flops:90.32, batch-reuse:1
@ 5974 train 4.4650 , allloss: 4.4853, dt: 1264.34ms, fracRes: 0.6026, norm(attn): 0.1328, norm(output): 0.2324, norm(x): 0.7038, norm(y): 1.0085, norm:1.3377, tok/sec: 103668.62, flops:90.78, batch-reuse:1
@ 5975 train 4.5476 , allloss: 4.5673, dt: 1291.24ms, fracRes: 0.6024, norm(attn): 0.1318, norm(output): 0.2324, norm(x): 0.7040, norm(y): 1.0085, norm:1.3864, tok/sec: 101508.82, flops:88.89, batch-reuse:1
@ 5976 train 4.6813 , allloss: 4.7016, dt: 1274.25ms, fracRes: 0.6016, norm(attn): 0.1328, norm(output): 0.2344, norm(x): 0.7035, norm(y): 1.0083, norm:1.4932, tok/sec: 102861.90, flops:90.07, batch-reuse:1
@ 5977 train 4.5332 , allloss: 4.5527, dt: 1274.00ms, fracRes: 0.6014, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7037, norm(y): 1.0083, norm:1.6495, tok/sec: 102882.38, flops:90.09, batch-reuse:1
@ 5978 train 4.4263 , allloss: 4.4461, dt: 1263.25ms, fracRes: 0.6011, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7012, norm(y): 1.0085, norm:1.2673, tok/sec: 103757.37, flops:90.86, batch-reuse:1
@ 5979 train 4.4735 , allloss: 4.4938, dt: 1266.76ms, fracRes: 0.6013, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.6996, norm(y): 1.0084, norm:1.3884, tok/sec: 103470.42, flops:90.61, batch-reuse:1
@ 5980 train 4.5475 , allloss: 4.5670, dt: 1267.63ms, fracRes: 0.6007, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.7018, norm(y): 1.0083, norm:1.6054, tok/sec: 103398.94, flops:90.54, batch-reuse:1
@ 5981 train 4.4440 , allloss: 4.4637, dt: 1295.52ms, fracRes: 0.6021, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.7090, norm(y): 1.0083, norm:1.8841, tok/sec: 101173.29, flops:88.60, batch-reuse:1
@ 5982 train 4.4569 , allloss: 4.4768, dt: 1281.31ms, fracRes: 0.6023, norm(attn): 0.1328, norm(output): 0.2344, norm(x): 0.7096, norm(y): 1.0084, norm:1.2952, tok/sec: 102295.24, flops:89.58, batch-reuse:1
@ 5983 train 4.4913 , allloss: 4.5132, dt: 1257.89ms, fracRes: 0.6031, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7096, norm(y): 1.0085, norm:1.4362, tok/sec: 104199.89, flops:91.25, batch-reuse:1
@ 5984 train 4.3844 , allloss: 4.4052, dt: 1272.25ms, fracRes: 0.6030, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7088, norm(y): 1.0086, norm:1.5202, tok/sec: 103023.43, flops:90.22, batch-reuse:1
@ 5985 train 4.4385 , allloss: 4.4590, dt: 1291.53ms, fracRes: 0.6031, norm(attn): 0.1299, norm(output): 0.2324, norm(x): 0.7068, norm(y): 1.0085, norm:1.4014, tok/sec: 101486.09, flops:88.87, batch-reuse:1
@ 5986 train 4.4900 , allloss: 4.5099, dt: 1247.22ms, fracRes: 0.6021, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7054, norm(y): 1.0085, norm:1.3263, tok/sec: 105091.08, flops:92.03, batch-reuse:1
@ 5987 train 4.4899 , allloss: 4.5093, dt: 1254.22ms, fracRes: 0.6009, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7029, norm(y): 1.0084, norm:1.2801, tok/sec: 104504.55, flops:91.51, batch-reuse:1
@ 5988 train 4.4880 , allloss: 4.5082, dt: 1252.11ms, fracRes: 0.6014, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7042, norm(y): 1.0085, norm:1.5432, tok/sec: 104680.90, flops:91.67, batch-reuse:1
@ 5989 train 4.3860 , allloss: 4.4069, dt: 1258.13ms, fracRes: 0.6026, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7041, norm(y): 1.0085, norm:1.3424, tok/sec: 104179.73, flops:91.23, batch-reuse:1
@ 5990 train 4.3964 , allloss: 4.4163, dt: 1279.15ms, fracRes: 0.6024, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7029, norm(y): 1.0085, norm:1.2983, tok/sec: 102468.27, flops:89.73, batch-reuse:1
@ 5991 train 4.4174 , allloss: 4.4371, dt: 1259.75ms, fracRes: 0.6022, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7045, norm(y): 1.0085, norm:1.3873, tok/sec: 104045.91, flops:91.11, batch-reuse:1
@ 5992 train 4.4072 , allloss: 4.4274, dt: 1277.14ms, fracRes: 0.6022, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7037, norm(y): 1.0086, norm:1.4238, tok/sec: 102629.53, flops:89.87, batch-reuse:1
@ 5993 train 4.5438 , allloss: 4.5645, dt: 1309.45ms, fracRes: 0.6022, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7003, norm(y): 1.0084, norm:1.3528, tok/sec: 100097.09, flops:87.65, batch-reuse:1
@ 5994 train 4.3823 , allloss: 4.4022, dt: 1267.24ms, fracRes: 0.6021, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7035, norm(y): 1.0086, norm:1.2413, tok/sec: 103430.92, flops:90.57, batch-reuse:1
@ 5995 train 4.4644 , allloss: 4.4843, dt: 1263.70ms, fracRes: 0.6025, norm(attn): 0.1328, norm(output): 0.2344, norm(x): 0.7049, norm(y): 1.0085, norm:1.3894, tok/sec: 103720.72, flops:90.83, batch-reuse:1
@ 5996 train 4.5318 , allloss: 4.5516, dt: 1266.46ms, fracRes: 0.6026, norm(attn): 0.1328, norm(output): 0.2344, norm(x): 0.7048, norm(y): 1.0084, norm:1.3964, tok/sec: 103494.80, flops:90.63, batch-reuse:1
@ 5997 train 4.5127 , allloss: 4.5329, dt: 1277.83ms, fracRes: 0.6033, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7061, norm(y): 1.0085, norm:1.3700, tok/sec: 102574.29, flops:89.82, batch-reuse:1
@ 5998 train 4.4411 , allloss: 4.4602, dt: 1302.89ms, fracRes: 0.6033, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7049, norm(y): 1.0086, norm:1.4694, tok/sec: 100600.84, flops:88.09, batch-reuse:1
@ 5999 train 4.4495 , allloss: 4.4690, dt: 1296.10ms, fracRes: 0.6020, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.7044, norm(y): 1.0085, norm:1.5389, tok/sec: 101127.99, flops:88.56, batch-reuse:1
@ 6000 val 4.4014
@ 6000 train 4.6262 , allloss: 4.6467, dt: 1852.20ms, fracRes: 0.6024, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7044, norm(y): 1.0086, norm:1.2801, tok/sec: 70765.71, flops:61.97, batch-reuse:1
@ 6001 train 4.4520 , allloss: 4.4714, dt: 1298.27ms, fracRes: 0.6027, norm(attn): 0.1318, norm(output): 0.2324, norm(x): 0.7051, norm(y): 1.0085, norm:1.3308, tok/sec: 100958.64, flops:88.41, batch-reuse:1
@ 6002 train 4.5467 , allloss: 4.5670, dt: 1285.63ms, fracRes: 0.6037, norm(attn): 0.1328, norm(output): 0.2324, norm(x): 0.7082, norm(y): 1.0083, norm:1.7974, tok/sec: 101951.23, flops:89.28, batch-reuse:1
@ 6003 train 4.4344 , allloss: 4.4537, dt: 1249.81ms, fracRes: 0.6026, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7083, norm(y): 1.0085, norm:1.2878, tok/sec: 104873.16, flops:91.84, batch-reuse:1
@ 6004 train 4.4253 , allloss: 4.4452, dt: 1266.27ms, fracRes: 0.6027, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7073, norm(y): 1.0086, norm:1.4990, tok/sec: 103510.47, flops:90.64, batch-reuse:1
@ 6005 train 4.4833 , allloss: 4.5024, dt: 1270.59ms, fracRes: 0.6024, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7061, norm(y): 1.0085, norm:1.5012, tok/sec: 103158.39, flops:90.33, batch-reuse:1
@ 6006 train 4.4525 , allloss: 4.4727, dt: 1276.01ms, fracRes: 0.6023, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7063, norm(y): 1.0086, norm:1.7811, tok/sec: 102720.41, flops:89.95, batch-reuse:1
@ 6007 train 4.4487 , allloss: 4.4687, dt: 1299.23ms, fracRes: 0.6022, norm(attn): 0.1328, norm(output): 0.2344, norm(x): 0.7062, norm(y): 1.0084, norm:1.3171, tok/sec: 100884.01, flops:88.34, batch-reuse:1
@ 6008 train 4.4970 , allloss: 4.5160, dt: 1311.64ms, fracRes: 0.6019, norm(attn): 0.1328, norm(output): 0.2344, norm(x): 0.7044, norm(y): 1.0084, norm:1.5575, tok/sec: 99929.82, flops:87.51, batch-reuse:1
@ 6009 train 4.5238 , allloss: 4.5437, dt: 1252.65ms, fracRes: 0.6020, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7038, norm(y): 1.0083, norm:1.5805, tok/sec: 104635.73, flops:91.63, batch-reuse:1
@ 6010 train 4.4378 , allloss: 4.4564, dt: 1256.33ms, fracRes: 0.6013, norm(attn): 0.1338, norm(output): 0.2344, norm(x): 0.7042, norm(y): 1.0083, norm:1.4541, tok/sec: 104329.53, flops:91.36, batch-reuse:1
@ 6011 train 4.4327 , allloss: 4.4520, dt: 1280.02ms, fracRes: 0.6017, norm(attn): 0.1328, norm(output): 0.2344, norm(x): 0.7028, norm(y): 1.0084, norm:1.3095, tok/sec: 102398.65, flops:89.67, batch-reuse:1
@ 6012 train 4.4290 , allloss: 4.4486, dt: 1256.52ms, fracRes: 0.6014, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.7022, norm(y): 1.0084, norm:1.3259, tok/sec: 104313.54, flops:91.35, batch-reuse:1
@ 6013 train 4.4512 , allloss: 4.4703, dt: 1263.95ms, fracRes: 0.6018, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7020, norm(y): 1.0085, norm:1.2724, tok/sec: 103700.51, flops:90.81, batch-reuse:1
@ 6014 train 4.4060 , allloss: 4.4250, dt: 1265.88ms, fracRes: 0.6021, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.7039, norm(y): 1.0085, norm:1.4056, tok/sec: 103541.92, flops:90.67, batch-reuse:1
@ 6015 train 4.4722 , allloss: 4.4918, dt: 1281.66ms, fracRes: 0.6024, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7044, norm(y): 1.0084, norm:1.0771, tok/sec: 102267.38, flops:89.55, batch-reuse:1
@ 6016 train 4.4259 , allloss: 4.4464, dt: 1298.63ms, fracRes: 0.6024, norm(attn): 0.1328, norm(output): 0.2324, norm(x): 0.7010, norm(y): 1.0084, norm:1.2082, tok/sec: 100930.85, flops:88.38, batch-reuse:1
@ 6017 train 4.4926 , allloss: 4.5109, dt: 1283.86ms, fracRes: 0.6017, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.6998, norm(y): 1.0084, norm:1.2263, tok/sec: 102092.45, flops:89.40, batch-reuse:1
@ 6018 train 4.3219 , allloss: 4.3416, dt: 1307.76ms, fracRes: 0.6018, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7019, norm(y): 1.0086, norm:1.5162, tok/sec: 100226.71, flops:87.77, batch-reuse:1
@ 6019 train 4.3283 , allloss: 4.3481, dt: 1285.99ms, fracRes: 0.6015, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7007, norm(y): 1.0085, norm:1.3364, tok/sec: 101923.32, flops:89.25, batch-reuse:1
@ 6020 train 4.4659 , allloss: 4.4862, dt: 1257.46ms, fracRes: 0.6014, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7007, norm(y): 1.0084, norm:1.1937, tok/sec: 104235.45, flops:91.28, batch-reuse:1
@ 6021 train 4.4103 , allloss: 4.4304, dt: 1282.64ms, fracRes: 0.6013, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.6999, norm(y): 1.0084, norm:1.3482, tok/sec: 102189.43, flops:89.49, batch-reuse:1
@ 6022 train 4.3419 , allloss: 4.3614, dt: 1273.66ms, fracRes: 0.6009, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.7009, norm(y): 1.0084, norm:1.1954, tok/sec: 102909.59, flops:90.12, batch-reuse:1
@ 6023 train 4.4313 , allloss: 4.4514, dt: 1288.00ms, fracRes: 0.6012, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.7014, norm(y): 1.0083, norm:1.3677, tok/sec: 101764.00, flops:89.11, batch-reuse:1
@ 6024 train 4.4004 , allloss: 4.4217, dt: 1265.73ms, fracRes: 0.6017, norm(attn): 0.1357, norm(output): 0.2334, norm(x): 0.7025, norm(y): 1.0083, norm:1.4035, tok/sec: 103554.22, flops:90.68, batch-reuse:1
@ 6025 train 4.4407 , allloss: 4.4600, dt: 1258.31ms, fracRes: 0.6019, norm(attn): 0.1328, norm(output): 0.2314, norm(x): 0.7005, norm(y): 1.0084, norm:1.2419, tok/sec: 104165.18, flops:91.22, batch-reuse:1
@ 6026 train 4.3776 , allloss: 4.3968, dt: 1278.12ms, fracRes: 0.6013, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.7003, norm(y): 1.0084, norm:1.4623, tok/sec: 102550.58, flops:89.80, batch-reuse:1
@ 6027 train 4.4238 , allloss: 4.4432, dt: 1288.36ms, fracRes: 0.6018, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7004, norm(y): 1.0085, norm:1.4676, tok/sec: 101735.19, flops:89.09, batch-reuse:1
@ 6028 train 4.4889 , allloss: 4.5084, dt: 1307.44ms, fracRes: 0.6029, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7005, norm(y): 1.0084, norm:1.3725, tok/sec: 100251.07, flops:87.79, batch-reuse:1
@ 6029 train 4.3934 , allloss: 4.4131, dt: 1256.05ms, fracRes: 0.6033, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7017, norm(y): 1.0085, norm:1.6479, tok/sec: 104352.47, flops:91.38, batch-reuse:1
@ 6030 train 4.4074 , allloss: 4.4269, dt: 1264.94ms, fracRes: 0.6022, norm(attn): 0.1328, norm(output): 0.2344, norm(x): 0.7025, norm(y): 1.0085, norm:1.6003, tok/sec: 103619.45, flops:90.74, batch-reuse:1
@ 6031 train 4.5947 , allloss: 4.6142, dt: 1272.12ms, fracRes: 0.6009, norm(attn): 0.1338, norm(output): 0.2344, norm(x): 0.7003, norm(y): 1.0084, norm:1.9285, tok/sec: 103034.23, flops:90.23, batch-reuse:1
@ 6032 train 4.4159 , allloss: 4.4356, dt: 1240.54ms, fracRes: 0.6021, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7001, norm(y): 1.0086, norm:1.3434, tok/sec: 105657.05, flops:92.52, batch-reuse:1
@ 6033 train 4.4649 , allloss: 4.4844, dt: 1269.33ms, fracRes: 0.6023, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7013, norm(y): 1.0084, norm:1.5930, tok/sec: 103260.87, flops:90.42, batch-reuse:1
@ 6034 train 4.4869 , allloss: 4.5067, dt: 1256.89ms, fracRes: 0.6020, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7004, norm(y): 1.0084, norm:1.4299, tok/sec: 104282.47, flops:91.32, batch-reuse:1
@ 6035 train 4.3965 , allloss: 4.4162, dt: 1292.47ms, fracRes: 0.6013, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.7008, norm(y): 1.0085, norm:1.4321, tok/sec: 101411.90, flops:88.80, batch-reuse:1
@ 6036 train 4.4758 , allloss: 4.4951, dt: 1258.04ms, fracRes: 0.6017, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7000, norm(y): 1.0085, norm:1.5126, tok/sec: 104187.83, flops:91.24, batch-reuse:1
@ 6037 train 4.3141 , allloss: 4.3366, dt: 1288.88ms, fracRes: 0.6028, norm(attn): 0.1328, norm(output): 0.2324, norm(x): 0.7002, norm(y): 1.0087, norm:1.9288, tok/sec: 101694.77, flops:89.05, batch-reuse:1
@ 6038 train 4.3969 , allloss: 4.4180, dt: 1298.46ms, fracRes: 0.6022, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7004, norm(y): 1.0086, norm:1.5135, tok/sec: 100943.94, flops:88.40, batch-reuse:1
@ 6039 train 4.4108 , allloss: 4.4303, dt: 1254.71ms, fracRes: 0.6025, norm(attn): 0.1328, norm(output): 0.2344, norm(x): 0.7022, norm(y): 1.0086, norm:1.4754, tok/sec: 104464.28, flops:91.48, batch-reuse:1
@ 6040 train 4.4695 , allloss: 4.4888, dt: 1292.33ms, fracRes: 0.6021, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7029, norm(y): 1.0084, norm:1.3812, tok/sec: 101422.77, flops:88.81, batch-reuse:1
@ 6041 train 4.4548 , allloss: 4.4765, dt: 1266.54ms, fracRes: 0.6024, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.6999, norm(y): 1.0084, norm:1.6009, tok/sec: 103488.61, flops:90.62, batch-reuse:1
@ 6042 train 4.4028 , allloss: 4.4226, dt: 1269.06ms, fracRes: 0.6023, norm(attn): 0.1309, norm(output): 0.2314, norm(x): 0.6981, norm(y): 1.0085, norm:1.6538, tok/sec: 103282.95, flops:90.44, batch-reuse:1
@ 6043 train 4.2816 , allloss: 4.3014, dt: 1265.41ms, fracRes: 0.6021, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.6993, norm(y): 1.0085, norm:1.6318, tok/sec: 103581.05, flops:90.70, batch-reuse:1
@ 6044 train 4.4505 , allloss: 4.4704, dt: 1273.94ms, fracRes: 0.6026, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7017, norm(y): 1.0083, norm:1.3486, tok/sec: 102886.93, flops:90.10, batch-reuse:1
@ 6045 train 4.4006 , allloss: 4.4201, dt: 1287.15ms, fracRes: 0.6033, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7019, norm(y): 1.0085, norm:1.4970, tok/sec: 101831.35, flops:89.17, batch-reuse:1
@ 6046 train 4.3914 , allloss: 4.4110, dt: 1276.75ms, fracRes: 0.6023, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7016, norm(y): 1.0084, norm:1.5806, tok/sec: 102660.29, flops:89.90, batch-reuse:1
@ 6047 train 4.3800 , allloss: 4.3993, dt: 1268.92ms, fracRes: 0.6026, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7022, norm(y): 1.0085, norm:1.2346, tok/sec: 103293.95, flops:90.45, batch-reuse:1
@ 6048 train 4.4597 , allloss: 4.4787, dt: 1281.35ms, fracRes: 0.6030, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7029, norm(y): 1.0085, norm:1.4778, tok/sec: 102292.10, flops:89.58, batch-reuse:1
@ 6049 train 4.4212 , allloss: 4.4398, dt: 1275.09ms, fracRes: 0.6033, norm(attn): 0.1318, norm(output): 0.2324, norm(x): 0.7023, norm(y): 1.0085, norm:1.3673, tok/sec: 102794.68, flops:90.02, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6484, 0.3535, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7422, 0.1045, 0.1523, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6602, 0.0815, 0.1641, 0.0962, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2129, 0.0349, 0.0869, 0.2393, 0.4258, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4512, 0.0698, 0.0767, 0.0947, 0.1982, 0.1089, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1416, 0.0374, 0.0258, 0.1152, 0.4609, 0.1523, 0.0679, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2773, 0.3145, 0.1455, 0.0137, 0.0334, 0.0654, 0.0282, 0.1230, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4453, 0.1187, 0.0874, 0.0258, 0.0732, 0.0344, 0.0781, 0.0630, 0.0732, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1846, 0.2031, 0.1475, 0.0099, 0.0157, 0.0267, 0.0327, 0.1270, 0.0243, 0.2285, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2002, 0.0889, 0.1406, 0.0347, 0.0454, 0.0267, 0.0282, 0.0918, 0.0437, 0.1543, 0.1465, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0209, 0.0105, 0.0129, 0.2930, 0.1484, 0.0771, 0.0544, 0.0415, 0.2910, 0.0303, 0.0167, 0.0021, 0.0000, 0.0000, 0.0000],
        [0.0557, 0.0625, 0.0583, 0.0552, 0.0703, 0.0874, 0.0645, 0.0444, 0.1187, 0.1318, 0.0991, 0.1216, 0.0311, 0.0000, 0.0000],
        [0.1875, 0.0815, 0.0518, 0.0187, 0.0554, 0.0300, 0.0525, 0.0410, 0.0554, 0.0757, 0.1167, 0.0649, 0.1079, 0.0605, 0.0000],
        [0.1182, 0.0933, 0.0908, 0.0928, 0.0684, 0.0187, 0.0220, 0.0718, 0.0308, 0.0835, 0.0461, 0.0625, 0.1221, 0.0361, 0.0437]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[     0.0017,     -0.0056,     -0.0000,  ...,     -0.0389,      0.0180,      0.0060],
        [    -0.0444,      0.0052,     -0.0096,  ...,      0.0072,      0.0045,      0.0041],
        [     0.0292,      0.0344,     -0.0081,  ...,     -0.0235,      0.0240,     -0.0103],
        ...,
        [     0.0318,      0.0227,      0.0136,  ...,     -0.0376,      0.0122,      0.0202],
        [    -0.0509,      0.0009,     -0.0347,  ...,      0.0097,     -0.0011,     -0.0141],
        [    -0.0257,      0.0068,     -0.0211,  ...,      0.0043,     -0.0231,     -0.0134]], device='cuda:0', requires_grad=True)
K: tensor([ 1.1641,  0.5547,  0.0581,  0.5078,  0.5898,  0.1162,  0.6992, -0.5312, -0.6289, -0.4746,  0.3438, -0.0815, -0.1494, -0.5781, -0.1299, -0.6172, -0.3320,  0.4180, -0.8711,  0.5859,  0.8555,  0.6602, -0.5000,  0.5000, -0.2871, -0.4746, -0.7266, -0.1680,  0.6602, -0.3105,  1.3125, -0.1787,
         0.6992, -0.3496,  0.8008,  1.1172, -1.2188,  0.1973, -0.1221, -1.8594,  0.1318,  0.1250, -0.5234,  1.1719, -0.0544,  0.1299, -0.0500,  0.8828,  0.7852, -0.4648,  0.3770,  0.0469, -1.3516,  0.3672,  1.1719, -0.6719, -0.2852,  0.4512,  1.0078, -0.2451,  0.0042, -0.3652, -0.4863, -0.0182],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0261, -0.0042, -0.0186,  ...,  0.0103, -0.0028, -0.0197],
        [ 0.0240, -0.0131,  0.0173,  ...,  0.0062,  0.0330,  0.0100],
        [-0.0466,  0.0418,  0.0018,  ..., -0.0153, -0.0338, -0.0507],
        ...,
        [ 0.0069,  0.0063,  0.0213,  ...,  0.0214,  0.0182,  0.0196],
        [ 0.0225, -0.0077,  0.0401,  ...,  0.0267,  0.0094,  0.0275],
        [ 0.0194, -0.0101,  0.0228,  ..., -0.0221,  0.0238,  0.0049]], device='cuda:0', requires_grad=True)
Q: tensor([    -0.4395,     -0.4648,     -1.2500,     -1.4375,     -0.0869,      0.1064,     -2.3281,     -0.0255,      0.1641,      0.6562,     -0.4902,     -0.9570,     -0.4453,     -0.5938,     -0.1377,     -0.0297,     -0.4785,     -0.1621,      0.3848,      0.6055,     -0.0231,     -0.1309,
             0.8203,      0.4062,      0.2715,     -0.1211,     -0.3145,     -0.8086,     -0.5156,      0.4375,     -0.1113,      0.5039,     -0.6602,     -0.8203,      0.2080,     -0.0019,      1.0078,      0.7617,     -0.4785,      1.3594,      1.1406,     -0.2197,      0.0723,      0.7578,
            -0.7539,      0.2559,     -0.4473,      0.2500,     -0.4902,      0.1875,     -1.6016,     -0.8242,      0.0718,     -0.7227,     -0.3457,     -0.8242,      0.4766,     -0.8242,      0.1650,     -0.2656,      0.1963,      0.2910,      0.2158,      0.8320], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.6055, -0.3887, -0.7070, -1.9297, -1.5547, -0.2871,  0.2363, -1.5625, -1.3125, -2.6250, -1.5625,  0.8516, -1.7266, -1.1094],
        [ 0.0000, -1.9609, -1.5781, -0.6641,  0.1108, -1.0078, -1.5859, -1.2812, -0.0554, -0.4570,  0.1748, -1.1875, -1.1172,  0.5000, -0.8906],
        [ 0.0000, -2.0938, -1.3906, -1.9219, -0.4824, -1.7031, -1.6875, -2.7031, -0.9102, -1.2578,  1.0781, -0.6641, -2.3594, -0.5859, -1.1172],
        [ 0.0000, -1.8047, -0.8945,  0.1162,  0.6953, -1.1641, -1.5703, -1.3750,  0.4082,  0.3594,  0.2930, -1.3438, -1.4219,  0.9648, -0.2832],
        [ 0.0000, -1.8672, -1.7734, -1.5625, -0.8242, -1.4219,  0.2041, -1.2734, -0.2451, -1.9766, -0.7969, -2.0938, -1.4375, -0.1270, -0.8828],
        [ 0.0000, -1.3281, -1.7031, -0.2051,  1.1797,  0.0747, -0.7344, -2.3594,  1.1641,  0.5273,  2.4844, -0.6875, -2.7188,  1.4062,  0.3828],
        [ 0.0000,  0.1250, -0.6445, -3.0000, -2.1250, -1.4453, -2.2812, -0.8125, -1.6094, -0.2109, -0.0815,  0.7695, -0.1211, -1.7188, -0.4062],
        [ 0.0000, -1.3281, -1.6328, -2.8594, -1.8047, -2.5625, -1.7422, -1.9531, -1.8125, -1.2656, -0.4297, -0.9648, -0.8789, -1.7500, -1.2578],
        [ 0.0000,  0.0942, -0.2256, -2.9219, -2.4688, -1.9297, -1.7344, -0.3750, -2.0312,  0.2139, -0.0103,  1.2500,  0.9297, -2.1562,  0.0310],
        [ 0.0000, -0.8086, -0.3555, -1.7500, -1.4844, -2.0156, -1.9609, -0.7812, -1.5234, -0.2617, -0.3125,  0.3477, -0.0488, -1.4219, -0.6328],
        [ 0.0000, -0.6875, -0.4805,  2.6406,  1.9609,  1.3047,  0.9609,  0.6836,  2.6406,  0.3730, -0.2246, -2.2969, -0.0830,  2.5938,  0.8828],
        [ 0.0000,  0.1196,  0.0454, -0.0107,  0.2324,  0.4492,  0.1465, -0.2236,  0.7578,  0.8594,  0.5781,  0.7812, -0.5820,  0.7188,  0.7578],
        [ 0.0000, -0.8320, -1.2891, -2.3125, -1.2188, -1.8281, -1.2734, -1.5156, -1.2188, -0.9062, -0.4727, -1.0625, -0.5508, -1.1328, -1.0156],
        [ 0.0000, -0.2373, -0.2637, -0.2393, -0.5469, -1.8438, -1.6797, -0.4980, -1.3438, -0.3457, -0.9414, -0.6328,  0.0337, -1.1797, -0.9922]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8197],
        [0.8164],
        [0.7905],
        [0.4712],
        [0.5785],
        [0.4185],
        [0.4643],
        [0.4103],
        [0.2914],
        [0.1493],
        [0.0737],
        [0.1472],
        [0.1655],
        [0.1253]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9805, 0.0199, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7969, 0.1406, 0.0630, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7812, 0.1299, 0.0574, 0.0306, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6719, 0.1123, 0.0388, 0.0532, 0.1240, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7930, 0.0664, 0.0209, 0.0146, 0.0359, 0.0684, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7305, 0.0854, 0.0093, 0.0077, 0.0259, 0.1069, 0.0347, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6602, 0.0981, 0.0266, 0.0154, 0.0376, 0.0703, 0.0369, 0.0537, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5430, 0.0630, 0.0223, 0.0134, 0.0190, 0.0535, 0.0884, 0.0181, 0.1807, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5664, 0.0581, 0.0332, 0.0322, 0.0160, 0.0723, 0.0229, 0.0977, 0.0791, 0.0220, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6211, 0.0459, 0.0016, 0.0027, 0.0094, 0.0105, 0.0179, 0.0029, 0.1348, 0.0010, 0.1523, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2520, 0.0593, 0.0610, 0.0332, 0.0437, 0.1006, 0.1064, 0.0908, 0.0635, 0.0752, 0.0781, 0.0364, 0.0000, 0.0000, 0.0000],
        [0.2617, 0.0251, 0.0225, 0.0240, 0.0240, 0.0874, 0.0737, 0.0679, 0.1216, 0.0510, 0.0796, 0.0410, 0.1206, 0.0000, 0.0000],
        [0.2344, 0.0217, 0.0112, 0.0120, 0.0084, 0.0359, 0.0825, 0.0113, 0.1177, 0.0118, 0.1768, 0.0171, 0.0259, 0.2334, 0.0000],
        [0.2520, 0.0586, 0.0088, 0.0076, 0.0210, 0.0425, 0.0430, 0.0420, 0.0845, 0.0197, 0.1426, 0.0444, 0.0337, 0.1543, 0.0469]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0349, -0.0147, -0.0155,  ..., -0.0219, -0.0241,  0.0221],
        [-0.0170,  0.0190, -0.0180,  ...,  0.0161,  0.0035, -0.0473],
        [ 0.0115,  0.0300,  0.0164,  ...,  0.0116,  0.0205,  0.0137],
        ...,
        [-0.0046, -0.0037,  0.0231,  ...,  0.0409, -0.0218, -0.0139],
        [-0.0121, -0.0049,  0.0014,  ...,  0.0056, -0.0027, -0.0085],
        [ 0.0301,  0.0368,  0.0193,  ..., -0.0017, -0.0241,  0.0234]], device='cuda:0', requires_grad=True)
K: tensor([ 2.4375, -0.1807, -1.0078, -0.2910, -1.0625, -1.3047,  0.4766,  0.4316,  0.7891,  0.6953,  0.7148,  1.2969, -1.8047,  0.7461,  0.8906, -2.1406, -0.1064, -0.3457, -0.2275,  0.9609,  0.3867,  1.5078,  1.1719, -2.4375,  0.2871, -0.2295, -1.5859,  0.5938,  0.6055, -0.8242,  2.9688,  0.5586,
        -1.7422,  0.0894, -1.7266,  0.9023,  1.2266,  2.0469, -0.3867,  1.5312,  2.2969, -0.6172, -1.2188,  2.2188,  1.0547, -0.1963, -1.6172, -2.9062,  1.7734,  1.3828, -1.2188,  2.4531, -1.5078, -0.0913,  0.5859,  1.0391,  1.7891,  0.5156, -0.8203,  1.9062, -0.4512,  1.8281,  2.6719, -0.2451],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0199, -0.0063, -0.0137,  ...,  0.0013,  0.0147, -0.0105],
        [ 0.0181,  0.0027, -0.0538,  ..., -0.0122, -0.0052, -0.0172],
        [ 0.0419,  0.0250,  0.0303,  ..., -0.0191,  0.0257,  0.0166],
        ...,
        [-0.0199, -0.0195,  0.0166,  ...,  0.0184,  0.0008, -0.0405],
        [ 0.0422,  0.0168, -0.0101,  ..., -0.0065,  0.0010, -0.0084],
        [ 0.0094, -0.0299, -0.0204,  ...,  0.0098, -0.0050,  0.0146]], device='cuda:0', requires_grad=True)
Q: tensor([-0.8711, -0.0544, -0.6680, -0.5156,  0.5273, -0.1416, -0.0305,  1.0469,  0.4316,  0.3516, -0.1216, -1.2812,  0.3711, -1.2578, -0.2676,  2.4062, -1.1406,  0.2344, -1.4375, -1.4531,  0.7539, -0.1289, -0.4355,  0.9453, -0.5000,  0.2969,  0.7852, -0.5938, -1.0859, -0.2402, -0.8750, -1.8281,
        -0.7773,  0.4121,  0.8711,  0.6289,  1.0156,  0.0048,  1.0312,  0.4961,  0.5938,  0.3574, -0.9297, -0.1250,  0.4902, -1.5078,  1.0469, -1.0625,  0.7773,  0.0967,  0.0300, -0.7656, -1.1562, -0.4355, -0.0859,  0.6953, -0.5078,  0.8867,  0.8359,  0.3359, -0.5547, -0.1001, -0.9258, -0.7227],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -3.8906,     -7.6875,     -8.1875,     -7.1875,     -5.2500,     -6.3125,     -7.5625,     -4.1875,     -9.8125,     -7.5938,     -8.8750,     -7.5625,     -4.5625,     -5.9062],
        [     0.0000,     -1.7344,     -2.5469,     -3.7812,     -3.1562,     -1.5781,     -2.2344,     -1.5781,     -2.3906,     -2.2031,     -3.0781,     -2.2031,     -1.5234,     -2.3281,     -1.8125],
        [     0.0000,     -1.7969,     -2.6094,     -3.2344,     -3.5000,     -2.5312,     -3.0312,     -3.4531,     -2.9531,     -3.6719,     -3.7031,     -3.4375,     -3.6562,     -3.0156,     -1.8359],
        [     0.0000,     -1.7891,     -2.8438,     -2.5312,     -1.6875,     -1.7188,     -1.5000,     -2.4375,      0.8477,     -2.6250,      0.9492,     -2.5625,     -1.6328,      1.9219,     -1.1953],
        [     0.0000,     -2.4844,     -3.6406,     -3.9844,     -3.0938,     -2.4531,     -2.4844,     -2.8281,     -1.9766,     -3.1562,     -2.6719,     -2.8281,     -2.8438,     -1.7188,     -2.3906],
        [     0.0000,     -2.1406,     -4.3438,     -4.5625,     -3.3438,     -1.9219,     -3.0469,     -3.4688,     -0.9609,     -4.7812,     -3.8438,     -4.2188,     -3.2188,     -1.0938,     -2.8906],
        [     0.0000,     -1.9062,     -3.2188,     -3.7500,     -2.8594,     -2.2500,     -2.8906,     -2.5156,     -1.8672,     -3.4062,     -2.9531,     -3.2656,     -2.4688,     -1.9609,     -2.5938],
        [     0.0000,     -2.1562,     -3.1875,     -3.7031,     -3.3438,     -2.3125,     -1.8125,     -3.4062,     -1.1016,     -3.7812,     -1.1641,     -3.2344,     -3.0312,     -0.3906,     -1.8047],
        [     0.0000,     -2.2812,     -2.8438,     -2.8594,     -3.5625,     -2.0625,     -3.2031,     -1.7578,     -1.9688,     -3.2500,     -2.9531,     -2.0000,     -1.5547,     -1.8984,     -3.6094],
        [     0.0000,     -2.6094,     -6.0000,     -5.4375,     -4.1875,     -4.0938,     -3.5469,     -5.3750,     -1.5234,     -6.4062,     -1.4062,     -5.2812,     -5.4688,     -0.8555,     -3.8750],
        [     0.0000,     -1.4453,     -1.4219,     -2.0312,     -1.7578,     -0.9180,     -0.8633,     -1.0156,     -1.3750,     -1.2109,     -1.1719,     -1.9375,     -0.8711,     -0.9102,     -0.6367],
        [     0.0000,     -2.3438,     -2.4531,     -2.3906,     -2.3906,     -1.0938,     -1.2656,     -1.3516,     -0.7656,     -1.6328,     -1.1875,     -1.8516,     -0.7734,     -0.3047,     -1.6094],
        [     0.0000,     -2.3750,     -3.0312,     -2.9688,     -3.3281,     -1.8750,     -1.0391,     -3.0312,     -0.6875,     -2.9844,     -0.2773,     -2.6250,     -2.2031,     -0.0028,     -1.7969],
        [     0.0000,     -1.4531,     -3.3438,     -3.5000,     -2.4844,     -1.7812,     -1.7656,     -1.7891,     -1.0859,     -2.5469,     -0.5664,     -1.7344,     -2.0000,     -0.4902,     -1.6797]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8307],
        [0.5695],
        [0.4651],
        [0.6073],
        [0.5102],
        [0.4699],
        [0.2961],
        [0.3655],
        [0.3195],
        [0.3630],
        [0.1553],
        [0.1978],
        [0.2211],
        [0.2046]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0004,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0017,     0.0009,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0030,     0.0009,     0.0007,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0025,     0.0018,     0.0005,     0.0005,     0.0020,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0019,     0.0013,     0.0004,     0.0003,     0.0011,     0.0016,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9727,     0.0059,     0.0044,     0.0015,     0.0007,     0.0025,     0.0020,     0.0092,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0005,     0.0004,     0.0001,     0.0001,     0.0004,     0.0004,     0.0003,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0018,     0.0008,     0.0005,     0.0002,     0.0012,     0.0011,     0.0012,     0.0005,     0.0009,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0005,     0.0002,     0.0001,     0.0000,     0.0002,     0.0001,     0.0003,     0.0001,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0003,     0.0002,     0.0001,     0.0001,     0.0002,     0.0002,     0.0002,     0.0001,     0.0000,     0.0000,     0.0007,     0.0000,     0.0000,     0.0000],
        [    0.9805,     0.0016,     0.0015,     0.0006,     0.0002,     0.0010,     0.0011,     0.0023,     0.0006,     0.0010,     0.0001,     0.0045,     0.0053,     0.0000,     0.0000],
        [    0.9961,     0.0006,     0.0005,     0.0001,     0.0001,     0.0004,     0.0004,     0.0004,     0.0002,     0.0001,     0.0000,     0.0010,     0.0008,     0.0002,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0053,  0.0002,  0.0203,  ..., -0.0189, -0.0021, -0.0124],
        [ 0.0316, -0.0451, -0.0221,  ..., -0.0069, -0.0155, -0.0321],
        [ 0.0422, -0.0362,  0.0332,  ..., -0.0052, -0.0153,  0.0086],
        ...,
        [ 0.0356,  0.0158, -0.0274,  ..., -0.0014,  0.0211,  0.0164],
        [ 0.0145,  0.0248, -0.0140,  ..., -0.0167, -0.0423, -0.0165],
        [ 0.0211, -0.0098,  0.0093,  ..., -0.0006, -0.0223,  0.0162]], device='cuda:0', requires_grad=True)
K: tensor([-1.4688, -0.5625, -1.8125, -0.9570, -2.0000,  2.8750, -1.4688,  2.3906, -1.8906, -2.2188,  1.3828, -0.0209, -1.8594, -1.5859, -2.2812,  0.1416,  1.5859,  3.4062, -2.5469,  1.8594,  2.6406,  1.0469, -1.4531, -0.3906,  1.8672, -1.1562,  0.0133, -2.4688,  1.9062,  1.6406,  1.1094,  2.9688,
        -1.2344,  1.8047,  2.3594, -1.5703, -1.6484,  1.5859,  2.0938, -2.1875,  1.8828, -2.6250,  0.1387,  1.0859,  0.4297,  2.7031, -1.4453, -3.0312,  1.1562,  3.0469, -1.5078, -2.6094,  2.0781,  1.2500,  2.1094, -1.4922, -1.6172, -2.8125, -1.8984, -1.9375, -3.1094, -1.6016,  1.9062,  1.8438],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0050,  0.0193,  0.0254,  ..., -0.0163,  0.0423, -0.0086],
        [ 0.0062,  0.0366,  0.0047,  ...,  0.0231,  0.0291, -0.0172],
        [-0.0138, -0.0052,  0.0194,  ..., -0.0165,  0.0505, -0.0263],
        ...,
        [ 0.0091, -0.0086,  0.0168,  ..., -0.0284, -0.0042, -0.0002],
        [ 0.0152, -0.0024,  0.0147,  ...,  0.0248,  0.0196, -0.0115],
        [ 0.0207, -0.0317, -0.0238,  ...,  0.0258,  0.0273,  0.0101]], device='cuda:0', requires_grad=True)
Q: tensor([ 1.8984,  1.5312, -0.8711,  0.3105,  0.5898, -0.3906,  0.8281, -0.6562,  1.0625,  0.7891, -0.5273,  0.4238,  1.2188,  1.7031,  0.4531, -1.6094, -1.2031, -2.2031,  2.0156, -0.2969, -0.9805,  0.4102,  1.0625,  0.7734, -0.7812, -0.5078,  0.7383,  0.4473, -1.0000, -1.2969, -1.1641, -0.5078,
         0.0806, -1.6172, -0.7812,  0.1895,  1.6719, -0.3418, -0.4707, -0.1982, -2.0938,  2.2969,  1.2734, -0.7812, -0.0461, -1.1094,  1.5547,  0.4844, -1.5625, -1.4766,  1.1797, -0.5586, -1.5859, -0.3477, -1.0078,  1.5469,  0.2412,  1.5156,  1.8047,  2.2344,  1.6016,  0.9844, -1.9297, -0.3262],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000,  -7.8125,  -8.6250,  -9.1250,  -9.4375,  -7.8750,  -8.3125,  -7.8125,  -9.1250,  -9.3125, -10.8750,  -7.6875,  -7.3125,  -9.3125, -11.0000],
        [  0.0000,  -6.3438,  -7.0625,  -7.8750,  -8.0000,  -6.6562,  -7.0625,  -6.2188,  -7.4062,  -7.3750,  -9.2500,  -6.3125,  -6.0000,  -7.6562,  -8.4375],
        [  0.0000,  -5.8125,  -7.0625,  -7.2812,  -7.8125,  -6.3438,  -6.9688,  -6.5312,  -7.2188,  -7.2500,  -8.7500,  -6.3125,  -5.9688,  -7.5000,  -8.4375],
        [  0.0000,  -9.4375,  -9.8125, -10.8750, -10.1250,  -9.0625,  -8.9375,  -9.5625, -10.0000, -11.4375, -12.5625,  -8.9375,  -8.8125, -10.4375, -12.4375],
        [  0.0000,  -6.0000,  -6.2812,  -7.6250,  -7.6562,  -6.2188,  -6.0938,  -6.1250,  -7.2812,  -7.4688,  -8.7500,  -6.0312,  -5.7812,  -7.4062,  -7.9062],
        [  0.0000,  -6.2500,  -6.6250,  -7.8750,  -8.2500,  -6.7812,  -6.4062,  -6.2188,  -7.4375,  -7.8438,  -9.5000,  -5.6250,  -5.9688,  -7.5625,  -8.4375],
        [  0.0000,  -5.1250,  -5.4062,  -6.4688,  -7.1875,  -5.9375,  -6.2188,  -4.6562,  -6.0000,  -5.4062,  -8.3125,  -4.1562,  -4.3438,  -6.2188,  -6.3125],
        [  0.0000,  -7.5938,  -7.8438,  -9.0000,  -9.5000,  -7.9375,  -7.8750,  -8.0000,  -8.5000,  -9.3750, -11.1250,  -7.1562,  -7.3125,  -8.8750, -10.1250],
        [  0.0000,  -6.3125,  -7.1250,  -7.5312,  -8.3750,  -6.6875,  -6.8125,  -6.6875,  -7.5312,  -7.0312,  -9.2500,  -6.5625,  -6.3750,  -7.9062,  -8.6250],
        [  0.0000,  -7.6875,  -8.3125,  -9.5000, -10.0000,  -8.6250,  -8.8125,  -8.0625,  -9.3750,  -9.2500, -11.5625,  -7.3438,  -7.2500,  -9.6250, -10.6875],
        [  0.0000,  -8.0000,  -8.6250,  -9.3125,  -9.5625,  -8.5000,  -8.3125,  -8.3125,  -9.1250, -10.0000, -11.5000,  -7.2188,  -7.5312,  -9.6250, -11.5000],
        [  0.0000,  -6.4062,  -6.4688,  -7.4062,  -8.3125,  -6.9062,  -6.8438,  -6.0312,  -7.3750,  -6.8750,  -9.6250,  -5.3750,  -5.2188,  -7.5938,  -8.6875],
        [  0.0000,  -7.4375,  -7.5938,  -8.8750,  -9.5000,  -7.8125,  -7.8438,  -7.7812,  -8.3750,  -9.0625, -11.0000,  -6.9375,  -7.0938,  -8.6875,  -9.8125],
        [  0.0000, -10.4375, -11.4375, -12.5000, -11.7500, -10.6250, -10.6875, -10.6875, -11.8750, -12.6875, -14.6250, -10.9375, -10.5000, -12.5000, -13.8125]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9987],
        [0.9977],
        [0.9977],
        [0.9977],
        [0.9951],
        [0.9922],
        [0.9821],
        [0.9964],
        [0.9990],
        [0.9915],
        [0.9987],
        [0.9964],
        [0.9974],
        [0.9993]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1016, 0.8984, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0437, 0.5156, 0.4395, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0147, 0.3145, 0.4199, 0.2500, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0776, 0.4922, 0.2246, 0.0879, 0.1172, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0260, 0.3262, 0.1729, 0.0952, 0.1240, 0.2559, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0103, 0.1245, 0.0474, 0.0308, 0.0095, 0.0179, 0.7578, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0186, 0.0864, 0.0869, 0.0097, 0.0162, 0.0466, 0.5430, 0.1914, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0198, 0.1060, 0.0298, 0.0071, 0.0189, 0.0337, 0.6133, 0.0884, 0.0840, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0103, 0.0728, 0.0359, 0.0076, 0.0205, 0.0391, 0.2314, 0.2012, 0.1533, 0.2285, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0156, 0.0459, 0.0282, 0.0056, 0.0062, 0.0131, 0.5039, 0.1138, 0.0596, 0.1348, 0.0747, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0089, 0.0322, 0.0261, 0.0058, 0.0117, 0.0148, 0.1494, 0.0879, 0.0571, 0.1177, 0.1318, 0.3574, 0.0000, 0.0000, 0.0000],
        [0.0164, 0.0486, 0.0293, 0.0028, 0.0053, 0.0170, 0.1484, 0.0557, 0.0356, 0.0864, 0.0957, 0.2139, 0.2451, 0.0000, 0.0000],
        [0.0216, 0.0442, 0.0109, 0.0017, 0.0049, 0.0100, 0.1963, 0.0236, 0.0173, 0.0386, 0.1396, 0.1797, 0.1777, 0.1338, 0.0000],
        [0.0082, 0.0123, 0.0051, 0.0011, 0.0018, 0.0025, 0.0593, 0.0119, 0.0117, 0.0150, 0.0166, 0.0864, 0.1216, 0.0752, 0.5703]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0113,  0.0087,  0.0034,  ..., -0.0347, -0.0070, -0.0368],
        [-0.0362, -0.0169, -0.0036,  ...,  0.0058, -0.0043,  0.0004],
        [-0.0404, -0.0095,  0.0468,  ..., -0.0127, -0.0183, -0.0266],
        ...,
        [-0.0221, -0.0251, -0.0047,  ..., -0.0382, -0.0345, -0.0569],
        [-0.0169, -0.0200, -0.0240,  ..., -0.0018, -0.0169,  0.0320],
        [-0.0052,  0.0078,  0.0152,  ..., -0.0107,  0.0110, -0.0108]], device='cuda:0', requires_grad=True)
K: tensor([-1.7734, -1.8984, -0.9961, -0.3613, -0.7969, -1.7578, -1.8984,  1.5000,  0.3320, -2.1406,  0.6523, -1.6250,  1.4453, -2.4219,  0.2109,  1.8750,  1.7656, -0.4258,  0.5586, -0.0076,  0.0564, -0.9609, -0.0162, -1.4375, -1.1250,  0.7422, -0.4004,  2.2031, -0.4316,  1.5859, -1.1875, -2.1406,
        -1.5000, -0.4062,  0.7734, -1.5703,  2.7344,  0.5352, -1.5469,  0.6406, -2.5938,  1.1484,  1.2344,  2.0938,  0.6719, -0.5977, -2.1094, -0.9805,  2.5312,  0.8164,  0.9492, -0.2988, -1.0078, -2.2969, -1.7656, -1.9922,  2.1719, -1.1719, -1.1797,  1.4141, -0.5938, -0.2295,  0.5547, -1.7109],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0136, -0.0014,  0.0157,  ...,  0.0253, -0.0141, -0.0177],
        [ 0.0384, -0.0144,  0.0188,  ..., -0.0089,  0.0171,  0.0186],
        [-0.0200,  0.0139,  0.0454,  ...,  0.0194,  0.0242, -0.0077],
        ...,
        [ 0.0196,  0.0012, -0.0327,  ..., -0.0084,  0.0032, -0.0075],
        [-0.0051,  0.0404, -0.0105,  ...,  0.0166,  0.0067, -0.0280],
        [-0.0088, -0.0062, -0.0041,  ...,  0.0141,  0.0026, -0.0035]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.4668, -0.9766, -1.1562,  0.5234, -2.9844,  0.5742,  0.2559, -0.2383,  0.4238, -0.7461,  0.3672,  1.4531, -1.5469, -1.3516,  2.2500, -0.4258, -2.6562, -0.5664, -0.0435, -0.3574, -1.9375,  2.4844, -3.1094, -1.1172, -0.8516, -1.2891,  2.2031,  2.3438, -3.6250,  0.4043, -0.0417, -0.3379,
        -3.7031,  2.3438, -2.2500, -1.1641,  1.6328, -0.6836, -1.5391,  1.2188, -0.5000, -0.7227,  2.1875, -0.2910, -1.6641, -2.7188, -0.1738, -2.7812,  0.6523,  1.8438,  0.1846,  0.1338, -1.3828, -0.6211,  0.4609, -0.2227, -1.0547,  0.3047, -0.7227,  0.0284, -2.4062,  2.1719,  1.3359, -3.1719],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  2.1875,  2.3594,  1.7812,  2.2188,  2.0000,  4.1562,  3.2812,  3.1094,  3.1875,  3.0781,  4.0625,  4.4688,  4.1875,  6.1250],
        [ 0.0000,  2.4688,  2.3125,  2.1719,  2.2500,  2.3281,  4.0000,  3.8125,  3.6875,  3.9375,  3.7031,  4.8750,  5.5938,  5.0938,  6.2188],
        [ 0.0000,  3.0625,  3.3438,  2.8438,  3.2188,  3.4688,  4.6250,  4.5938,  5.2812,  5.8125,  5.7500,  6.9688,  6.9688,  7.2188,  8.1875],
        [ 0.0000,  1.8516,  1.0625,  0.1230,  0.4141,  1.1328,  3.3750,  2.4688,  2.2188,  2.9062,  2.5625,  3.9375,  4.2188,  3.9688,  6.3438],
        [ 0.0000,  2.5312,  1.8906,  1.2969,  1.5625,  2.2812,  4.2812,  3.6719,  4.0000,  4.1562,  4.8750,  5.2500,  5.4062,  5.9062,  8.1875],
        [ 0.0000,  2.4844,  1.5234,  1.0938, -0.0767,  0.5547,  4.3125,  3.1406,  1.8672,  2.4219,  0.5469,  4.3750,  5.1875,  3.4844,  7.4375],
        [ 0.0000,  1.5391,  1.5469, -0.6484, -0.1309,  0.9219,  3.3750,  2.3281,  1.8281,  2.8125,  2.5938,  3.8125,  4.1250,  3.6875,  6.7188],
        [ 0.0000,  1.6797,  0.4121, -1.0234, -0.0457,  0.5352,  3.4375,  1.5000,  1.4453,  2.0625,  3.3281,  3.6094,  3.5781,  3.5000,  6.8125],
        [ 0.0000,  1.9609,  1.2500, -0.2988,  0.6953,  1.3359,  3.1094,  2.9844,  2.7031,  3.1094,  3.2188,  4.2500,  4.9062,  4.5625,  6.6562],
        [ 0.0000,  1.0781,  0.5898, -1.0234, -0.9258, -0.1758,  3.4688,  1.9844,  1.3359,  2.1562,  1.5703,  3.9375,  4.0938,  3.4375,  7.2188],
        [ 0.0000,  1.2812,  1.0703, -0.4336,  0.2676,  0.5078,  2.8125,  2.2969,  1.8594,  2.5781,  2.6875,  3.6875,  4.1250,  3.7500,  5.6875],
        [ 0.0000,  1.0859,  0.5781, -1.7734, -1.1328,  0.0311,  2.2031,  1.2188,  0.7734,  1.6641,  1.7656,  2.5625,  2.7031,  2.6094,  5.9375],
        [ 0.0000,  0.7148, -0.6836, -2.5625, -1.4844, -0.7695,  2.2031,  0.0854, -0.2197,  0.5781,  1.8672,  2.1250,  2.1094,  1.8281,  5.5000],
        [ 0.0000,  0.4062, -0.4727, -2.0469, -1.5312, -1.1719,  1.9844,  0.3750,  0.3555,  0.6094,  0.7070,  2.3594,  2.7031,  2.2188,  4.2500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4443],
        [0.1123],
        [0.0898],
        [0.3189],
        [0.1041],
        [0.3619],
        [0.0636],
        [0.0829],
        [0.0497],
        [0.1717],
        [0.0503],
        [0.0484],
        [0.0551],
        [0.0619]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0371,     0.9648,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0258,     0.9570,     0.0170,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0352,     0.8086,     0.0211,     0.1357,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0060,     0.7109,     0.0217,     0.0432,     0.2197,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0102,     0.4336,     0.0225,     0.0072,     0.3242,     0.2021,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0059,     0.2354,     0.1582,     0.0542,     0.0830,     0.3809,     0.0830,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0069,     0.0894,     0.0503,     0.0079,     0.3262,     0.0361,     0.0251,     0.4590,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0236,     0.2715,     0.0369,     0.0052,     0.0938,     0.0366,     0.0688,     0.4023,     0.0601,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0078,     0.2266,     0.0229,     0.0447,     0.0311,     0.0133,     0.1279,     0.3613,     0.0194,     0.1455,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0217,     0.0481,     0.0199,     0.0067,     0.0205,     0.0284,     0.0203,     0.3906,     0.0177,     0.3750,     0.0513,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0302,     0.1963,     0.0197,     0.0708,     0.0156,     0.0168,     0.2520,     0.1187,     0.0062,     0.0850,     0.1475,     0.0417,     0.0000,     0.0000,     0.0000],
        [    0.0086,     0.0164,     0.0023,     0.0004,     0.0435,     0.0014,     0.0052,     0.0184,     0.1514,     0.1807,     0.0378,     0.1387,     0.3965,     0.0000,     0.0000],
        [    0.0094,     0.0483,     0.0025,     0.0004,     0.0165,     0.0023,     0.0157,     0.0239,     0.0079,     0.1982,     0.0197,     0.0386,     0.5664,     0.0498,     0.0000],
        [    0.0435,     0.2490,     0.0532,     0.0544,     0.0327,     0.0110,     0.2891,     0.0305,     0.0019,     0.0179,     0.0361,     0.0199,     0.0295,     0.0024,     0.1289]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0227, -0.0421,  0.0068,  ...,  0.0294,  0.0336, -0.0282],
        [ 0.0057, -0.0508, -0.0149,  ...,  0.0136,  0.0074, -0.0031],
        [-0.0230,  0.0013, -0.0170,  ...,  0.0280, -0.0274, -0.0109],
        ...,
        [ 0.0358,  0.0165, -0.0342,  ..., -0.0077, -0.0060,  0.0205],
        [-0.0076,  0.0047,  0.0309,  ...,  0.0447, -0.0318,  0.0093],
        [-0.0357,  0.0479, -0.0506,  ..., -0.0010,  0.0194,  0.0374]], device='cuda:0', requires_grad=True)
K: tensor([ 0.7070, -1.1016, -0.1387, -0.0179, -0.4902,  0.2383,  0.3984, -0.6328, -0.4316, -2.3594, -1.6172, -0.5859,  0.2617, -0.6953, -1.0547,  0.6484,  0.6484,  1.2188, -2.2031,  1.3438,  0.7891, -0.9102, -1.8828,  0.5820,  0.8281,  0.1885, -0.7695,  0.8828, -0.8242, -2.1250, -0.4824,  0.8828,
        -0.7070,  1.9766,  1.4922,  0.8789,  0.5508, -0.7422, -0.7812, -1.7734, -0.7031, -1.4297, -1.3438,  0.0933,  0.6328, -1.2109, -0.6328,  0.7617, -1.1953, -1.7109,  1.0312,  1.1562, -0.4375, -0.2041,  0.9766,  0.7188,  0.4355, -3.0000, -0.8828,  0.7070, -0.2314, -0.6562,  0.8438, -0.8477],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0115, -0.0083, -0.0073,  ..., -0.0298, -0.0311, -0.0098],
        [ 0.0065, -0.0017, -0.0048,  ...,  0.0128, -0.0189,  0.0395],
        [ 0.0177, -0.0129, -0.0018,  ..., -0.0025, -0.0210, -0.0074],
        ...,
        [ 0.0302, -0.0443, -0.0131,  ...,  0.0236,  0.0150,  0.0032],
        [ 0.0045,  0.0007,  0.0164,  ...,  0.0156,  0.0098, -0.0120],
        [-0.0100, -0.0164, -0.0174,  ...,  0.0262, -0.0025, -0.0300]], device='cuda:0', requires_grad=True)
Q: tensor([-0.4863,  0.6289,  1.1016, -0.1309,  0.1719, -0.9102, -0.0154, -2.7812, -0.7305,  0.7969, -0.7031,  2.2969,  0.1108, -1.1172, -0.1060, -1.0625,  0.1836,  0.7812, -0.7617,  1.3984,  0.5977, -1.2422,  0.3809, -1.1953,  1.2266,  1.6328, -1.7422,  1.8281, -1.0781,  1.5156, -1.8984, -2.7969,
        -0.9023,  0.2871, -0.6562, -0.8398, -1.3594, -0.4609,  1.7500, -1.1719,  0.0035,  0.4375, -0.4766,  1.5000,  0.0713,  1.3516, -1.3672,  1.0312,  0.5312, -0.8555, -0.1406,  2.2188, -1.2422, -0.5039, -0.5586,  0.4434, -1.7266, -0.0055, -0.6562,  1.1094,  0.4785, -0.8164, -0.3809, -0.4141],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  3.2500,  0.9688,  0.9766,  2.6719,  2.3906,  2.1719,  2.1875,  0.8945,  1.1641,  2.3906,  1.3047,  1.4297,  0.5547,  1.0703],
        [ 0.0000,  3.6094, -0.4180,  3.3906,  1.2500, -0.0135,  4.2188, -1.0000, -2.8281, -3.6562,  2.2656, -2.3750, -1.3281, -3.6562, -0.2227],
        [ 0.0000,  3.1406, -0.5078,  1.3516,  2.1406, -0.6055,  3.1875, -0.5703, -0.5547, -1.7812,  2.1094, -1.4297, -0.9062, -1.2422,  0.1992],
        [ 0.0000,  4.7812,  1.2969,  1.9766,  3.6094,  3.7344,  3.2812,  4.0938,  1.0781,  2.5781,  3.1719,  2.2031,  3.1250,  0.4121,  0.8984],
        [ 0.0000,  3.7500,  0.7852, -0.3516,  3.4531,  2.9844,  2.8906,  3.1094,  1.1250,  2.1719,  1.9375,  1.2031,  1.7031,  0.5508,  1.3047],
        [ 0.0000,  3.6875,  3.2969,  2.2188,  2.6562,  4.1875,  2.6406,  5.4375,  1.6641,  3.5469,  2.4375,  3.0781,  3.6562,  0.6641,  2.4531],
        [ 0.0000,  2.5469,  1.9844,  0.1270,  3.8438,  1.6562,  1.2891,  4.1875,  5.3438,  5.0938,  3.2031,  3.6719,  4.5312,  5.4688,  3.3125],
        [ 0.0000,  2.4531,  0.4492, -1.5000,  1.3828,  0.4434,  1.0703,  2.8438,  0.9414,  4.1562,  1.5625,  1.8047,  4.0625,  1.6172,  1.9688],
        [ 0.0000,  3.3750,  1.0781,  1.7422,  1.3828,  0.5352,  2.7969,  3.8281,  0.9102,  2.9219,  3.5312,  2.5000,  4.6562,  1.5781,  2.0625],
        [ 0.0000,  0.7930, -0.0840, -1.1719, -0.0547,  0.2695, -0.0674,  2.8906, -0.2021,  2.8438,  0.8594,  2.3281,  3.1094,  0.4316,  1.1484],
        [ 0.0000,  1.8750, -0.4238,  0.8516, -0.6602, -0.5820,  2.1250,  1.3672, -1.5859,  1.0391,  1.5859,  0.3242,  3.2500, -1.0156,  0.6055],
        [ 0.0000,  0.6406, -1.3359, -3.0469,  1.6172, -1.8359, -0.4961,  0.7617,  2.8594,  3.0469,  1.4766,  2.7812,  3.8281,  5.0000,  2.4375],
        [ 0.0000,  1.6406, -1.3281, -3.0938,  0.5664, -1.4297,  0.5195,  0.9375, -0.1748,  3.0469,  0.7422,  1.4141,  4.0938,  1.6719,  1.4297],
        [ 0.0000,  1.7500,  0.2031,  0.2285, -0.2812, -1.3750,  1.8984, -0.3535, -3.1094, -0.8828, -0.1797, -0.7773, -0.3848, -2.8906,  1.0859]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.1088],
        [0.0421],
        [0.0313],
        [0.0282],
        [0.0634],
        [0.0071],
        [0.0071],
        [0.0080],
        [0.0114],
        [0.0083],
        [0.0182],
        [0.0219],
        [0.0078],
        [0.0144]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.1963 the:0.1030,:0.2178 but:0.1118atoes:0.2324,:0.5469 a:0.0674iced:0.1406)
iced
------
		( the:0.1030,:0.2178 but:0.1118atoes:0.2324,:0.5469 a:0.0674iced:0.1406 in:0.1118)
 in the form of the plant, which is a plant that is a plant
@ 6050 train 4.3659 , allloss: 4.3856, dt: 1702.77ms, fracRes: 0.6022, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7017, norm(y): 1.0085, norm:1.5986, tok/sec: 76975.69, flops:67.41, batch-reuse:1
@ 6051 train 4.3841 , allloss: 4.4037, dt: 1285.17ms, fracRes: 0.6009, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.7016, norm(y): 1.0084, norm:1.6593, tok/sec: 101988.23, flops:89.31, batch-reuse:1
@ 6052 train 4.3446 , allloss: 4.3634, dt: 1284.08ms, fracRes: 0.6015, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7008, norm(y): 1.0085, norm:1.1743, tok/sec: 102074.98, flops:89.39, batch-reuse:1
@ 6053 train 4.3312 , allloss: 4.3506, dt: 1286.50ms, fracRes: 0.6025, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7017, norm(y): 1.0085, norm:1.4209, tok/sec: 101882.46, flops:89.22, batch-reuse:1
@ 6054 train 4.3849 , allloss: 4.4041, dt: 1283.43ms, fracRes: 0.6035, norm(attn): 0.1328, norm(output): 0.2314, norm(x): 0.7003, norm(y): 1.0086, norm:1.6025, tok/sec: 102126.70, flops:89.43, batch-reuse:1
@ 6055 train 4.4169 , allloss: 4.4365, dt: 1276.84ms, fracRes: 0.6020, norm(attn): 0.1328, norm(output): 0.2344, norm(x): 0.6992, norm(y): 1.0084, norm:1.4242, tok/sec: 102653.49, flops:89.89, batch-reuse:1
@ 6056 train 4.4503 , allloss: 4.4692, dt: 1270.08ms, fracRes: 0.6024, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.6991, norm(y): 1.0083, norm:1.4281, tok/sec: 103199.48, flops:90.37, batch-reuse:1
@ 6057 train 4.4003 , allloss: 4.4187, dt: 1273.85ms, fracRes: 0.6023, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.6998, norm(y): 1.0083, norm:1.1942, tok/sec: 102894.63, flops:90.10, batch-reuse:1
@ 6058 train 4.3825 , allloss: 4.4016, dt: 1252.81ms, fracRes: 0.6020, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.7000, norm(y): 1.0083, norm:1.5051, tok/sec: 104622.69, flops:91.62, batch-reuse:1
@ 6059 train 4.3486 , allloss: 4.3678, dt: 1281.49ms, fracRes: 0.6016, norm(attn): 0.1338, norm(output): 0.2344, norm(x): 0.6982, norm(y): 1.0084, norm:1.1307, tok/sec: 102281.10, flops:89.57, batch-reuse:1
@ 6060 train 4.3229 , allloss: 4.3428, dt: 1272.38ms, fracRes: 0.6017, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.6996, norm(y): 1.0085, norm:1.1440, tok/sec: 103013.53, flops:90.21, batch-reuse:1
@ 6061 train 4.3198 , allloss: 4.3384, dt: 1262.37ms, fracRes: 0.6017, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.6999, norm(y): 1.0085, norm:1.3402, tok/sec: 103830.07, flops:90.92, batch-reuse:1
@ 6062 train 4.3100 , allloss: 4.3285, dt: 1290.86ms, fracRes: 0.6023, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.6995, norm(y): 1.0085, norm:1.5360, tok/sec: 101538.87, flops:88.92, batch-reuse:1
@ 6063 train 4.3804 , allloss: 4.3988, dt: 1268.08ms, fracRes: 0.6026, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7014, norm(y): 1.0085, norm:1.2245, tok/sec: 103362.56, flops:90.51, batch-reuse:1
@ 6064 train 4.3887 , allloss: 4.4077, dt: 1303.17ms, fracRes: 0.6027, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7019, norm(y): 1.0085, norm:1.1542, tok/sec: 100579.14, flops:88.08, batch-reuse:1
@ 6065 train 4.3626 , allloss: 4.3815, dt: 1271.19ms, fracRes: 0.6019, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.7015, norm(y): 1.0084, norm:1.3248, tok/sec: 103109.67, flops:90.29, batch-reuse:1
@ 6066 train 4.3470 , allloss: 4.3670, dt: 1271.42ms, fracRes: 0.6014, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.7014, norm(y): 1.0084, norm:1.7014, tok/sec: 103091.01, flops:90.28, batch-reuse:1
@ 6067 train 4.3404 , allloss: 4.3594, dt: 1277.94ms, fracRes: 0.6009, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.7015, norm(y): 1.0083, norm:1.3240, tok/sec: 102565.06, flops:89.81, batch-reuse:1
@ 6068 train 4.3540 , allloss: 4.3733, dt: 1289.86ms, fracRes: 0.6019, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7018, norm(y): 1.0084, norm:1.1228, tok/sec: 101617.62, flops:88.99, batch-reuse:1
@ 6069 train 4.4144 , allloss: 4.4340, dt: 1277.95ms, fracRes: 0.6029, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7040, norm(y): 1.0085, norm:1.4008, tok/sec: 102564.60, flops:89.81, batch-reuse:1
@ 6070 train 4.3651 , allloss: 4.3846, dt: 1274.23ms, fracRes: 0.6018, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.7042, norm(y): 1.0084, norm:1.2818, tok/sec: 102863.71, flops:90.08, batch-reuse:1
@ 6071 train 4.3182 , allloss: 4.3366, dt: 1302.00ms, fracRes: 0.6008, norm(attn): 0.1338, norm(output): 0.2344, norm(x): 0.7028, norm(y): 1.0085, norm:1.2404, tok/sec: 100669.74, flops:88.16, batch-reuse:1
@ 6072 train 4.3206 , allloss: 4.3389, dt: 1280.38ms, fracRes: 0.6013, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7005, norm(y): 1.0085, norm:1.1813, tok/sec: 102369.67, flops:89.64, batch-reuse:1
@ 6073 train 4.3958 , allloss: 4.4152, dt: 1257.42ms, fracRes: 0.6013, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.6999, norm(y): 1.0084, norm:1.2686, tok/sec: 104238.69, flops:91.28, batch-reuse:1
@ 6074 train 4.3444 , allloss: 4.3641, dt: 1278.96ms, fracRes: 0.6018, norm(attn): 0.1338, norm(output): 0.2324, norm(x): 0.7010, norm(y): 1.0084, norm:1.5233, tok/sec: 102483.23, flops:89.74, batch-reuse:1
@ 6075 train 4.4046 , allloss: 4.4240, dt: 1288.30ms, fracRes: 0.6016, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.6991, norm(y): 1.0084, norm:1.1942, tok/sec: 101739.95, flops:89.09, batch-reuse:1
@ 6076 train 4.3170 , allloss: 4.3357, dt: 1267.07ms, fracRes: 0.6018, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7007, norm(y): 1.0085, norm:1.2781, tok/sec: 103445.18, flops:90.59, batch-reuse:1
@ 6077 train 4.3080 , allloss: 4.3269, dt: 1282.29ms, fracRes: 0.6018, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7023, norm(y): 1.0084, norm:1.3912, tok/sec: 102216.81, flops:89.51, batch-reuse:1
@ 6078 train 4.3057 , allloss: 4.3248, dt: 1284.07ms, fracRes: 0.6010, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.7009, norm(y): 1.0084, norm:1.2074, tok/sec: 102075.47, flops:89.39, batch-reuse:1
@ 6079 train 4.2734 , allloss: 4.2929, dt: 1261.54ms, fracRes: 0.6016, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.6985, norm(y): 1.0085, norm:1.3091, tok/sec: 103898.73, flops:90.98, batch-reuse:1
@ 6080 train 4.3661 , allloss: 4.3857, dt: 1272.85ms, fracRes: 0.6019, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.6989, norm(y): 1.0085, norm:1.2422, tok/sec: 102974.92, flops:90.17, batch-reuse:1
@ 6081 train 4.3472 , allloss: 4.3663, dt: 1269.34ms, fracRes: 0.6023, norm(attn): 0.1328, norm(output): 0.2324, norm(x): 0.6999, norm(y): 1.0085, norm:1.3655, tok/sec: 103260.31, flops:90.42, batch-reuse:1
@ 6082 train 4.4277 , allloss: 4.4469, dt: 1268.98ms, fracRes: 0.6024, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7009, norm(y): 1.0085, norm:1.4830, tok/sec: 103289.56, flops:90.45, batch-reuse:1
@ 6083 train 4.2789 , allloss: 4.2989, dt: 1263.15ms, fracRes: 0.6011, norm(attn): 0.1338, norm(output): 0.2344, norm(x): 0.7017, norm(y): 1.0085, norm:1.3942, tok/sec: 103766.12, flops:90.87, batch-reuse:1
@ 6084 train 4.3086 , allloss: 4.3276, dt: 1275.01ms, fracRes: 0.6013, norm(attn): 0.1338, norm(output): 0.2344, norm(x): 0.7005, norm(y): 1.0085, norm:1.1313, tok/sec: 102800.56, flops:90.02, batch-reuse:1
@ 6085 train 4.3713 , allloss: 4.3902, dt: 1255.03ms, fracRes: 0.6021, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7003, norm(y): 1.0085, norm:1.7616, tok/sec: 104437.71, flops:91.45, batch-reuse:1
@ 6086 train 4.3353 , allloss: 4.3551, dt: 1258.45ms, fracRes: 0.6022, norm(attn): 0.1328, norm(output): 0.2344, norm(x): 0.6997, norm(y): 1.0084, norm:1.5173, tok/sec: 104153.82, flops:91.21, batch-reuse:1
@ 6087 train 4.3786 , allloss: 4.3981, dt: 1260.62ms, fracRes: 0.6017, norm(attn): 0.1318, norm(output): 0.2324, norm(x): 0.6973, norm(y): 1.0084, norm:1.3376, tok/sec: 103974.30, flops:91.05, batch-reuse:1
@ 6088 train 4.3923 , allloss: 4.4112, dt: 1288.90ms, fracRes: 0.6007, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.6973, norm(y): 1.0083, norm:1.4908, tok/sec: 101692.92, flops:89.05, batch-reuse:1
@ 6089 train 4.3981 , allloss: 4.4179, dt: 1261.95ms, fracRes: 0.6004, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.6962, norm(y): 1.0084, norm:1.4253, tok/sec: 103864.48, flops:90.95, batch-reuse:1
@ 6090 train 4.4086 , allloss: 4.4280, dt: 1264.76ms, fracRes: 0.6015, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.6973, norm(y): 1.0083, norm:1.4437, tok/sec: 103633.77, flops:90.75, batch-reuse:1
@ 6091 train 4.3930 , allloss: 4.4120, dt: 1249.28ms, fracRes: 0.6023, norm(attn): 0.1328, norm(output): 0.2324, norm(x): 0.6980, norm(y): 1.0084, norm:1.2789, tok/sec: 104918.44, flops:91.88, batch-reuse:1
@ 6092 train 4.3134 , allloss: 4.3328, dt: 1249.99ms, fracRes: 0.6024, norm(attn): 0.1328, norm(output): 0.2324, norm(x): 0.6978, norm(y): 1.0084, norm:1.3082, tok/sec: 104858.04, flops:91.82, batch-reuse:1
@ 6093 train 4.3066 , allloss: 4.3253, dt: 1290.60ms, fracRes: 0.6013, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6975, norm(y): 1.0084, norm:1.3021, tok/sec: 101558.79, flops:88.93, batch-reuse:1
@ 6094 train 4.2539 , allloss: 4.2737, dt: 1261.99ms, fracRes: 0.6009, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.6985, norm(y): 1.0085, norm:1.2596, tok/sec: 103861.75, flops:90.95, batch-reuse:1
@ 6095 train 4.3092 , allloss: 4.3286, dt: 1268.16ms, fracRes: 0.6019, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.6988, norm(y): 1.0085, norm:1.4660, tok/sec: 103355.88, flops:90.51, batch-reuse:1
@ 6096 train 4.3163 , allloss: 4.3354, dt: 1272.10ms, fracRes: 0.6016, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.6995, norm(y): 1.0084, norm:1.3062, tok/sec: 103035.58, flops:90.23, batch-reuse:1
@ 6097 train 4.2969 , allloss: 4.3161, dt: 1249.88ms, fracRes: 0.6017, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.6983, norm(y): 1.0084, norm:1.1454, tok/sec: 104867.96, flops:91.83, batch-reuse:1
@ 6098 train 4.2839 , allloss: 4.3031, dt: 1279.41ms, fracRes: 0.6019, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.6986, norm(y): 1.0084, norm:1.4482, tok/sec: 102447.06, flops:89.71, batch-reuse:1
@ 6099 train 4.2081 , allloss: 4.2276, dt: 1284.75ms, fracRes: 0.6023, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.6970, norm(y): 1.0083, norm:1.2663, tok/sec: 102021.16, flops:89.34, batch-reuse:1
@ 6100 train 4.4240 , allloss: 4.4441, dt: 1269.16ms, fracRes: 0.6030, norm(attn): 0.1328, norm(output): 0.2344, norm(x): 0.6989, norm(y): 1.0083, norm:1.4409, tok/sec: 103274.49, flops:90.44, batch-reuse:1
@ 6101 train 4.2087 , allloss: 4.2289, dt: 1277.78ms, fracRes: 0.6028, norm(attn): 0.1328, norm(output): 0.2324, norm(x): 0.6972, norm(y): 1.0086, norm:1.5021, tok/sec: 102577.60, flops:89.83, batch-reuse:1
@ 6102 train 4.6197 , allloss: 4.6409, dt: 1266.68ms, fracRes: 0.6025, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.6930, norm(y): 1.0082, norm:1.5585, tok/sec: 103477.04, flops:90.61, batch-reuse:1
@ 6103 train 4.2224 , allloss: 4.2415, dt: 1568.28ms, fracRes: 0.6018, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.6980, norm(y): 1.0084, norm:1.7906, tok/sec: 83576.68, flops:73.19, batch-reuse:1
@ 6104 train 4.2357 , allloss: 4.2558, dt: 1264.57ms, fracRes: 0.6013, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.6971, norm(y): 1.0084, norm:1.4103, tok/sec: 103649.64, flops:90.76, batch-reuse:1
@ 6105 train 4.2618 , allloss: 4.2818, dt: 1298.00ms, fracRes: 0.6007, norm(attn): 0.1357, norm(output): 0.2334, norm(x): 0.6984, norm(y): 1.0084, norm:1.5291, tok/sec: 100979.61, flops:88.43, batch-reuse:1
@ 6106 train 4.2725 , allloss: 4.2917, dt: 1272.59ms, fracRes: 0.6010, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.6978, norm(y): 1.0083, norm:1.4197, tok/sec: 102996.07, flops:90.19, batch-reuse:1
@ 6107 train 4.4203 , allloss: 4.4386, dt: 1283.14ms, fracRes: 0.6023, norm(attn): 0.1318, norm(output): 0.2324, norm(x): 0.6967, norm(y): 1.0084, norm:1.2366, tok/sec: 102149.31, flops:89.45, batch-reuse:1
@ 6108 train 4.3439 , allloss: 4.3623, dt: 1295.78ms, fracRes: 0.6029, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7010, norm(y): 1.0084, norm:1.5878, tok/sec: 101152.70, flops:88.58, batch-reuse:1
@ 6109 train 4.2838 , allloss: 4.3035, dt: 1246.18ms, fracRes: 0.6032, norm(attn): 0.1328, norm(output): 0.2324, norm(x): 0.7007, norm(y): 1.0085, norm:1.4712, tok/sec: 105179.00, flops:92.10, batch-reuse:1
@ 6110 train 4.3075 , allloss: 4.3273, dt: 1263.93ms, fracRes: 0.6022, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.6990, norm(y): 1.0084, norm:1.4201, tok/sec: 103702.21, flops:90.81, batch-reuse:1
@ 6111 train 4.2369 , allloss: 4.2571, dt: 1257.29ms, fracRes: 0.6016, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6994, norm(y): 1.0085, norm:1.3963, tok/sec: 104249.70, flops:91.29, batch-reuse:1
@ 6112 train 4.2645 , allloss: 4.2839, dt: 1296.39ms, fracRes: 0.6021, norm(attn): 0.1328, norm(output): 0.2324, norm(x): 0.6987, norm(y): 1.0084, norm:1.3684, tok/sec: 101105.39, flops:88.54, batch-reuse:1
@ 6113 train 4.1851 , allloss: 4.2037, dt: 1275.70ms, fracRes: 0.6020, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7012, norm(y): 1.0084, norm:1.6090, tok/sec: 102745.34, flops:89.97, batch-reuse:1
@ 6114 train 4.3883 , allloss: 4.4244, dt: 1273.06ms, fracRes: 0.6026, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7017, norm(y): 1.0083, norm:1.7282, tok/sec: 102957.93, flops:90.16, batch-reuse:1
@ 6115 train 4.3109 , allloss: 4.3302, dt: 1261.56ms, fracRes: 0.6024, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7013, norm(y): 1.0084, norm:1.2776, tok/sec: 103896.75, flops:90.98, batch-reuse:1
@ 6116 train 4.2170 , allloss: 4.2365, dt: 1282.32ms, fracRes: 0.6018, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.7018, norm(y): 1.0085, norm:1.6652, tok/sec: 102214.77, flops:89.51, batch-reuse:1
@ 6117 train 4.2898 , allloss: 4.3098, dt: 1312.01ms, fracRes: 0.6016, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.7011, norm(y): 1.0084, norm:1.5434, tok/sec: 99901.95, flops:87.48, batch-reuse:1
@ 6118 train 4.3057 , allloss: 4.3257, dt: 1264.81ms, fracRes: 0.6019, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.7022, norm(y): 1.0084, norm:1.4151, tok/sec: 103629.46, flops:90.75, batch-reuse:1
@ 6119 train 4.2964 , allloss: 4.3161, dt: 1272.53ms, fracRes: 0.6025, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.7030, norm(y): 1.0084, norm:1.5054, tok/sec: 103001.31, flops:90.20, batch-reuse:1
@ 6120 train 4.3441 , allloss: 4.3636, dt: 1275.65ms, fracRes: 0.6022, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.7005, norm(y): 1.0084, norm:1.6942, tok/sec: 102748.92, flops:89.98, batch-reuse:1
@ 6121 train 4.2286 , allloss: 4.2480, dt: 1297.52ms, fracRes: 0.6026, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7029, norm(y): 1.0084, norm:1.5086, tok/sec: 101017.09, flops:88.46, batch-reuse:1
@ 6122 train 4.1869 , allloss: 4.2063, dt: 1271.82ms, fracRes: 0.6031, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.7033, norm(y): 1.0085, norm:1.3336, tok/sec: 103058.51, flops:90.25, batch-reuse:1
@ 6123 train 4.2210 , allloss: 4.2403, dt: 1261.81ms, fracRes: 0.6029, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.7014, norm(y): 1.0086, norm:1.6195, tok/sec: 103876.02, flops:90.96, batch-reuse:1
@ 6124 train 4.3769 , allloss: 4.3959, dt: 1277.72ms, fracRes: 0.6025, norm(attn): 0.1328, norm(output): 0.2344, norm(x): 0.7015, norm(y): 1.0083, norm:1.3332, tok/sec: 102582.78, flops:89.83, batch-reuse:1
@ 6125 train 4.2528 , allloss: 4.2716, dt: 1311.56ms, fracRes: 0.6026, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7019, norm(y): 1.0084, norm:1.3793, tok/sec: 99936.16, flops:87.51, batch-reuse:1
@ 6126 train 4.2546 , allloss: 4.2739, dt: 1298.77ms, fracRes: 0.6029, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.7024, norm(y): 1.0085, norm:1.3426, tok/sec: 100920.38, flops:88.37, batch-reuse:1
@ 6127 train 4.2700 , allloss: 4.2886, dt: 1262.33ms, fracRes: 0.6030, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.7013, norm(y): 1.0084, norm:1.4158, tok/sec: 103833.68, flops:90.93, batch-reuse:1
@ 6128 train 4.2736 , allloss: 4.2922, dt: 1266.84ms, fracRes: 0.6031, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7015, norm(y): 1.0084, norm:1.3652, tok/sec: 103463.99, flops:90.60, batch-reuse:1
@ 6129 train 4.2155 , allloss: 4.2355, dt: 1255.46ms, fracRes: 0.6027, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.7016, norm(y): 1.0084, norm:1.3200, tok/sec: 104401.55, flops:91.42, batch-reuse:1
@ 6130 train 4.2864 , allloss: 4.3049, dt: 1267.68ms, fracRes: 0.6025, norm(attn): 0.1328, norm(output): 0.2324, norm(x): 0.6982, norm(y): 1.0084, norm:1.1403, tok/sec: 103395.20, flops:90.54, batch-reuse:1
@ 6131 train 4.1727 , allloss: 4.1941, dt: 1268.10ms, fracRes: 0.6017, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.6989, norm(y): 1.0084, norm:1.4158, tok/sec: 103360.99, flops:90.51, batch-reuse:1
@ 6132 train 4.2022 , allloss: 4.2221, dt: 1269.08ms, fracRes: 0.6017, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7001, norm(y): 1.0083, norm:1.3835, tok/sec: 103281.16, flops:90.44, batch-reuse:1
@ 6133 train 4.2279 , allloss: 4.2470, dt: 1275.71ms, fracRes: 0.6019, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.6981, norm(y): 1.0085, norm:1.3046, tok/sec: 102744.13, flops:89.97, batch-reuse:1
@ 6134 train 4.3218 , allloss: 4.3413, dt: 1311.85ms, fracRes: 0.6017, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.6979, norm(y): 1.0084, norm:1.3563, tok/sec: 99913.58, flops:87.49, batch-reuse:1
@ 6135 train 4.2906 , allloss: 4.3097, dt: 1286.25ms, fracRes: 0.6019, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.6999, norm(y): 1.0084, norm:1.3263, tok/sec: 101902.27, flops:89.23, batch-reuse:1
@ 6136 train 4.2954 , allloss: 4.3140, dt: 1290.54ms, fracRes: 0.6026, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.7018, norm(y): 1.0083, norm:1.5609, tok/sec: 101563.44, flops:88.94, batch-reuse:1
@ 6137 train 4.3696 , allloss: 4.3886, dt: 1264.25ms, fracRes: 0.6031, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.7038, norm(y): 1.0083, norm:1.2910, tok/sec: 103675.93, flops:90.79, batch-reuse:1
@ 6138 train 4.2956 , allloss: 4.3147, dt: 1251.03ms, fracRes: 0.6023, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.7025, norm(y): 1.0083, norm:1.2549, tok/sec: 104771.53, flops:91.75, batch-reuse:1
@ 6139 train 4.4686 , allloss: 4.4879, dt: 1253.01ms, fracRes: 0.6027, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.7004, norm(y): 1.0083, norm:1.2098, tok/sec: 104605.65, flops:91.60, batch-reuse:1
@ 6140 train 4.4550 , allloss: 4.4760, dt: 1266.09ms, fracRes: 0.6020, norm(attn): 0.1338, norm(output): 0.2344, norm(x): 0.6976, norm(y): 1.0083, norm:1.2442, tok/sec: 103525.13, flops:90.66, batch-reuse:1
@ 6141 train 4.4474 , allloss: 4.4670, dt: 1252.72ms, fracRes: 0.6015, norm(attn): 0.1338, norm(output): 0.2344, norm(x): 0.6949, norm(y): 1.0083, norm:1.2820, tok/sec: 104630.13, flops:91.62, batch-reuse:1
@ 6142 train 4.5227 , allloss: 4.5423, dt: 1279.85ms, fracRes: 0.6007, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6927, norm(y): 1.0081, norm:1.3350, tok/sec: 102411.79, flops:89.68, batch-reuse:1
@ 6143 train 4.4452 , allloss: 4.4648, dt: 1258.09ms, fracRes: 0.6009, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6951, norm(y): 1.0082, norm:1.3980, tok/sec: 104183.34, flops:91.23, batch-reuse:1
@ 6144 train 4.5271 , allloss: 4.5476, dt: 1274.79ms, fracRes: 0.6021, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.6966, norm(y): 1.0082, norm:1.2840, tok/sec: 102818.35, flops:90.04, batch-reuse:1
@ 6145 train 4.3699 , allloss: 4.3900, dt: 1261.30ms, fracRes: 0.6021, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6985, norm(y): 1.0083, norm:1.4466, tok/sec: 103918.03, flops:91.00, batch-reuse:1
@ 6146 train 4.4217 , allloss: 4.4408, dt: 1242.98ms, fracRes: 0.6020, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6968, norm(y): 1.0082, norm:1.5218, tok/sec: 105450.15, flops:92.34, batch-reuse:1
@ 6147 train 4.6287 , allloss: 4.6479, dt: 1247.61ms, fracRes: 0.6017, norm(attn): 0.1367, norm(output): 0.2334, norm(x): 0.6997, norm(y): 1.0080, norm:1.6869, tok/sec: 105058.56, flops:92.00, batch-reuse:1
@ 6148 train 4.4808 , allloss: 4.4997, dt: 1280.93ms, fracRes: 0.6026, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.6973, norm(y): 1.0082, norm:1.7175, tok/sec: 102325.84, flops:89.61, batch-reuse:1
@ 6149 train 4.4450 , allloss: 4.4651, dt: 1292.97ms, fracRes: 0.6024, norm(attn): 0.1328, norm(output): 0.2324, norm(x): 0.6971, norm(y): 1.0082, norm:1.3371, tok/sec: 101373.19, flops:88.77, batch-reuse:1
@ 6150 train 4.4400 , allloss: 4.4594, dt: 1300.25ms, fracRes: 0.6020, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6975, norm(y): 1.0082, norm:1.4006, tok/sec: 100804.89, flops:88.27, batch-reuse:1
@ 6151 train 4.2731 , allloss: 4.2917, dt: 1250.06ms, fracRes: 0.6016, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.6946, norm(y): 1.0080, norm:1.4533, tok/sec: 104852.56, flops:91.82, batch-reuse:1
@ 6152 train 4.4650 , allloss: 4.4848, dt: 1268.13ms, fracRes: 0.6033, norm(attn): 0.1328, norm(output): 0.2324, norm(x): 0.6993, norm(y): 1.0083, norm:1.7407, tok/sec: 103358.72, flops:90.51, batch-reuse:1
@ 6153 train 4.4319 , allloss: 4.4507, dt: 1277.23ms, fracRes: 0.6036, norm(attn): 0.1318, norm(output): 0.2324, norm(x): 0.7005, norm(y): 1.0083, norm:1.6455, tok/sec: 102622.27, flops:89.86, batch-reuse:1
@ 6154 train 4.5098 , allloss: 4.5298, dt: 1256.99ms, fracRes: 0.6034, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7024, norm(y): 1.0083, norm:1.3114, tok/sec: 104274.30, flops:91.31, batch-reuse:1
@ 6155 train 4.4743 , allloss: 4.4940, dt: 1254.69ms, fracRes: 0.6026, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.6998, norm(y): 1.0083, norm:1.7028, tok/sec: 104465.33, flops:91.48, batch-reuse:1
@ 6156 train 4.3713 , allloss: 4.3907, dt: 1249.61ms, fracRes: 0.6022, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.6985, norm(y): 1.0083, norm:1.4383, tok/sec: 104890.19, flops:91.85, batch-reuse:1
@ 6157 train 4.4518 , allloss: 4.4723, dt: 1264.54ms, fracRes: 0.6026, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.6985, norm(y): 1.0084, norm:1.5323, tok/sec: 103651.55, flops:90.77, batch-reuse:1
@ 6158 train 4.4226 , allloss: 4.4430, dt: 1263.28ms, fracRes: 0.6031, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.6994, norm(y): 1.0085, norm:1.3683, tok/sec: 103755.29, flops:90.86, batch-reuse:1
@ 6159 train 4.3753 , allloss: 4.3942, dt: 1264.80ms, fracRes: 0.6041, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7034, norm(y): 1.0085, norm:1.2872, tok/sec: 103630.94, flops:90.75, batch-reuse:1
@ 6160 train 4.3668 , allloss: 4.3856, dt: 1268.78ms, fracRes: 0.6032, norm(attn): 0.1328, norm(output): 0.2344, norm(x): 0.7050, norm(y): 1.0084, norm:1.3849, tok/sec: 103305.52, flops:90.46, batch-reuse:1
@ 6161 train 4.4202 , allloss: 4.4404, dt: 1273.48ms, fracRes: 0.6031, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.7028, norm(y): 1.0083, norm:1.2920, tok/sec: 102924.06, flops:90.13, batch-reuse:1
@ 6162 train 4.3889 , allloss: 4.4094, dt: 1267.95ms, fracRes: 0.6026, norm(attn): 0.1338, norm(output): 0.2344, norm(x): 0.7022, norm(y): 1.0084, norm:1.3319, tok/sec: 103373.43, flops:90.52, batch-reuse:1
@ 6163 train 4.4924 , allloss: 4.5133, dt: 1253.01ms, fracRes: 0.6027, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.7008, norm(y): 1.0084, norm:1.3986, tok/sec: 104605.63, flops:91.60, batch-reuse:1
@ 6164 train 4.4395 , allloss: 4.4587, dt: 1257.57ms, fracRes: 0.6013, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.6981, norm(y): 1.0083, norm:1.1824, tok/sec: 104226.05, flops:91.27, batch-reuse:1
@ 6165 train 4.3981 , allloss: 4.4170, dt: 1271.58ms, fracRes: 0.6005, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.6968, norm(y): 1.0082, norm:1.4512, tok/sec: 103077.77, flops:90.26, batch-reuse:1
@ 6166 train 4.5479 , allloss: 4.5677, dt: 1284.46ms, fracRes: 0.6009, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.6975, norm(y): 1.0081, norm:1.3239, tok/sec: 102044.59, flops:89.36, batch-reuse:1
@ 6167 train 4.4393 , allloss: 4.4591, dt: 1263.28ms, fracRes: 0.6020, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.6974, norm(y): 1.0082, norm:1.4335, tok/sec: 103755.68, flops:90.86, batch-reuse:1
@ 6168 train 4.4053 , allloss: 4.4251, dt: 1259.29ms, fracRes: 0.6023, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7004, norm(y): 1.0084, norm:1.2518, tok/sec: 104084.09, flops:91.14, batch-reuse:1
@ 6169 train 4.4211 , allloss: 4.4402, dt: 1252.72ms, fracRes: 0.6022, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.7011, norm(y): 1.0083, norm:1.3552, tok/sec: 104629.84, flops:91.62, batch-reuse:1
@ 6170 train 4.4230 , allloss: 4.4428, dt: 1284.49ms, fracRes: 0.6031, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.7027, norm(y): 1.0083, norm:1.3307, tok/sec: 102041.86, flops:89.36, batch-reuse:1
@ 6171 train 4.4010 , allloss: 4.4207, dt: 1307.30ms, fracRes: 0.6033, norm(attn): 0.1338, norm(output): 0.2344, norm(x): 0.7021, norm(y): 1.0083, norm:1.3210, tok/sec: 100261.75, flops:87.80, batch-reuse:1
@ 6172 train 4.3934 , allloss: 4.4150, dt: 1257.80ms, fracRes: 0.6039, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.6994, norm(y): 1.0082, norm:1.1792, tok/sec: 104207.04, flops:91.25, batch-reuse:1
@ 6173 train 4.4198 , allloss: 4.4392, dt: 1256.29ms, fracRes: 0.6032, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.6991, norm(y): 1.0082, norm:1.3658, tok/sec: 104332.36, flops:91.36, batch-reuse:1
@ 6174 train 4.4827 , allloss: 4.5031, dt: 1261.05ms, fracRes: 0.6028, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.6988, norm(y): 1.0081, norm:1.3769, tok/sec: 103939.10, flops:91.02, batch-reuse:1
@ 6175 train 4.4377 , allloss: 4.4576, dt: 1288.40ms, fracRes: 0.6021, norm(attn): 0.1338, norm(output): 0.2324, norm(x): 0.6961, norm(y): 1.0082, norm:1.4719, tok/sec: 101732.37, flops:89.09, batch-reuse:1
@ 6176 train 4.3757 , allloss: 4.3961, dt: 1280.97ms, fracRes: 0.6016, norm(attn): 0.1328, norm(output): 0.2324, norm(x): 0.6948, norm(y): 1.0083, norm:1.4625, tok/sec: 102322.57, flops:89.60, batch-reuse:1
@ 6177 train 4.3609 , allloss: 4.3812, dt: 1264.82ms, fracRes: 0.6027, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.6982, norm(y): 1.0083, norm:1.3591, tok/sec: 103628.79, flops:90.75, batch-reuse:1
@ 6178 train 4.3823 , allloss: 4.4012, dt: 1244.90ms, fracRes: 0.6027, norm(attn): 0.1328, norm(output): 0.2324, norm(x): 0.6998, norm(y): 1.0084, norm:1.6943, tok/sec: 105287.56, flops:92.20, batch-reuse:1
@ 6179 train 4.3678 , allloss: 4.3868, dt: 1268.56ms, fracRes: 0.6026, norm(attn): 0.1338, norm(output): 0.2324, norm(x): 0.6989, norm(y): 1.0084, norm:1.2614, tok/sec: 103323.15, flops:90.48, batch-reuse:1
@ 6180 train 4.4319 , allloss: 4.4505, dt: 1266.90ms, fracRes: 0.6013, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.6999, norm(y): 1.0083, norm:1.3796, tok/sec: 103458.52, flops:90.60, batch-reuse:1
@ 6181 train 4.5672 , allloss: 4.5868, dt: 1266.51ms, fracRes: 0.6016, norm(attn): 0.1328, norm(output): 0.2324, norm(x): 0.6965, norm(y): 1.0085, norm:1.5669, tok/sec: 103490.64, flops:90.63, batch-reuse:1
@ 6182 train 4.5997 , allloss: 4.6219, dt: 1269.79ms, fracRes: 0.6023, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.6970, norm(y): 1.0082, norm:1.7836, tok/sec: 103223.16, flops:90.39, batch-reuse:1
@ 6183 train 4.3998 , allloss: 4.4195, dt: 1246.03ms, fracRes: 0.6021, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.6994, norm(y): 1.0083, norm:1.3219, tok/sec: 105191.92, flops:92.12, batch-reuse:1
@ 6184 train 4.4038 , allloss: 4.4230, dt: 1252.16ms, fracRes: 0.6028, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6985, norm(y): 1.0084, norm:1.3712, tok/sec: 104676.89, flops:91.66, batch-reuse:1
@ 6185 train 4.5363 , allloss: 4.5560, dt: 1259.51ms, fracRes: 0.6032, norm(attn): 0.1338, norm(output): 0.2344, norm(x): 0.7003, norm(y): 1.0082, norm:1.4517, tok/sec: 104066.10, flops:91.13, batch-reuse:1
@ 6186 train 4.5221 , allloss: 4.5407, dt: 1277.82ms, fracRes: 0.6023, norm(attn): 0.1328, norm(output): 0.2344, norm(x): 0.6997, norm(y): 1.0081, norm:1.1441, tok/sec: 102574.78, flops:89.82, batch-reuse:1
@ 6187 train 4.3724 , allloss: 4.3906, dt: 1258.48ms, fracRes: 0.6027, norm(attn): 0.1328, norm(output): 0.2344, norm(x): 0.7010, norm(y): 1.0082, norm:1.4105, tok/sec: 104150.82, flops:91.20, batch-reuse:1
@ 6188 train 4.4670 , allloss: 4.4866, dt: 1273.11ms, fracRes: 0.6036, norm(attn): 0.1328, norm(output): 0.2344, norm(x): 0.7024, norm(y): 1.0082, norm:1.5063, tok/sec: 102953.94, flops:90.16, batch-reuse:1
@ 6189 train 4.2940 , allloss: 4.3132, dt: 1263.16ms, fracRes: 0.6018, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6996, norm(y): 1.0084, norm:1.2854, tok/sec: 103764.77, flops:90.87, batch-reuse:1
@ 6190 train 4.6339 , allloss: 4.6539, dt: 1249.06ms, fracRes: 0.6031, norm(attn): 0.1338, norm(output): 0.2344, norm(x): 0.6965, norm(y): 1.0085, norm:1.7177, tok/sec: 104936.68, flops:91.89, batch-reuse:1
@ 6191 train 4.4537 , allloss: 4.4738, dt: 1296.25ms, fracRes: 0.6025, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.6965, norm(y): 1.0084, norm:1.7564, tok/sec: 101116.18, flops:88.55, batch-reuse:1
@ 6192 train 4.4003 , allloss: 4.4199, dt: 1293.82ms, fracRes: 0.6027, norm(attn): 0.1328, norm(output): 0.2324, norm(x): 0.6976, norm(y): 1.0083, norm:1.4489, tok/sec: 101306.01, flops:88.71, batch-reuse:1
@ 6193 train 4.4280 , allloss: 4.4478, dt: 1275.58ms, fracRes: 0.6017, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6972, norm(y): 1.0083, norm:1.7811, tok/sec: 102754.66, flops:89.98, batch-reuse:1
@ 6194 train 4.4379 , allloss: 4.4575, dt: 1279.08ms, fracRes: 0.6009, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.6990, norm(y): 1.0082, norm:1.3750, tok/sec: 102473.98, flops:89.74, batch-reuse:1
@ 6195 train 4.5059 , allloss: 4.5257, dt: 1267.24ms, fracRes: 0.6027, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.7011, norm(y): 1.0083, norm:1.4909, tok/sec: 103431.39, flops:90.57, batch-reuse:1
@ 6196 train 4.4385 , allloss: 4.4573, dt: 1270.83ms, fracRes: 0.6040, norm(attn): 0.1318, norm(output): 0.2334, norm(x): 0.7038, norm(y): 1.0082, norm:1.4441, tok/sec: 103139.25, flops:90.32, batch-reuse:1
@ 6197 train 4.3368 , allloss: 4.3572, dt: 1269.20ms, fracRes: 0.6028, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.7020, norm(y): 1.0083, norm:1.3942, tok/sec: 103271.03, flops:90.43, batch-reuse:1
@ 6198 train 4.4213 , allloss: 4.4393, dt: 1291.56ms, fracRes: 0.6024, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.7011, norm(y): 1.0083, norm:1.3272, tok/sec: 101483.43, flops:88.87, batch-reuse:1
@ 6199 train 4.4141 , allloss: 4.4333, dt: 1259.28ms, fracRes: 0.6020, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.7007, norm(y): 1.0082, norm:1.3113, tok/sec: 104085.19, flops:91.15, batch-reuse:1
@ 6200 train 4.4388 , allloss: 4.4579, dt: 1301.99ms, fracRes: 0.6023, norm(attn): 0.1338, norm(output): 0.2344, norm(x): 0.6974, norm(y): 1.0083, norm:1.3273, tok/sec: 100670.38, flops:88.16, batch-reuse:1
@ 6201 train 4.3600 , allloss: 4.3796, dt: 1262.69ms, fracRes: 0.6019, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.6993, norm(y): 1.0083, norm:1.2169, tok/sec: 103803.94, flops:90.90, batch-reuse:1
@ 6202 train 4.3696 , allloss: 4.3886, dt: 1265.65ms, fracRes: 0.6011, norm(attn): 0.1357, norm(output): 0.2354, norm(x): 0.6974, norm(y): 1.0081, norm:1.3223, tok/sec: 103561.38, flops:90.69, batch-reuse:1
@ 6203 train 4.4059 , allloss: 4.4242, dt: 1294.37ms, fracRes: 0.6021, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.7000, norm(y): 1.0082, norm:1.2584, tok/sec: 101262.98, flops:88.67, batch-reuse:1
@ 6204 train 4.5027 , allloss: 4.5220, dt: 1262.57ms, fracRes: 0.6030, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.6990, norm(y): 1.0082, norm:1.5375, tok/sec: 103813.78, flops:90.91, batch-reuse:1
@ 6205 train 4.4238 , allloss: 4.4420, dt: 1277.31ms, fracRes: 0.6031, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.6983, norm(y): 1.0082, norm:1.5081, tok/sec: 102615.43, flops:89.86, batch-reuse:1
@ 6206 train 4.3571 , allloss: 4.3766, dt: 1261.81ms, fracRes: 0.6022, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.6985, norm(y): 1.0082, norm:1.4696, tok/sec: 103875.98, flops:90.96, batch-reuse:1
@ 6207 train 4.3903 , allloss: 4.4103, dt: 1252.89ms, fracRes: 0.6026, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.6990, norm(y): 1.0083, norm:1.5463, tok/sec: 104615.80, flops:91.61, batch-reuse:1
@ 6208 train 4.4685 , allloss: 4.4882, dt: 1275.01ms, fracRes: 0.6018, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6992, norm(y): 1.0081, norm:1.6035, tok/sec: 102800.81, flops:90.02, batch-reuse:1
@ 6209 train 4.3502 , allloss: 4.3695, dt: 1270.73ms, fracRes: 0.6016, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.7002, norm(y): 1.0082, norm:1.4996, tok/sec: 103146.70, flops:90.32, batch-reuse:1
@ 6210 train 4.3899 , allloss: 4.4085, dt: 1282.01ms, fracRes: 0.6017, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.7000, norm(y): 1.0082, norm:1.3957, tok/sec: 102239.14, flops:89.53, batch-reuse:1
@ 6211 train 4.3780 , allloss: 4.3977, dt: 1314.02ms, fracRes: 0.6016, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6987, norm(y): 1.0082, norm:1.3022, tok/sec: 99748.65, flops:87.35, batch-reuse:1
@ 6212 train 4.4112 , allloss: 4.4349, dt: 1283.97ms, fracRes: 0.6015, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.6999, norm(y): 1.0082, norm:1.2814, tok/sec: 102083.73, flops:89.39, batch-reuse:1
@ 6213 train 4.3972 , allloss: 4.4158, dt: 1280.14ms, fracRes: 0.6019, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.7000, norm(y): 1.0081, norm:1.4298, tok/sec: 102388.56, flops:89.66, batch-reuse:1
@ 6214 train 4.3142 , allloss: 4.3344, dt: 1308.42ms, fracRes: 0.6025, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.7015, norm(y): 1.0083, norm:1.6153, tok/sec: 100175.97, flops:87.72, batch-reuse:1
@ 6215 train 4.4127 , allloss: 4.4317, dt: 1284.63ms, fracRes: 0.6032, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.6996, norm(y): 1.0083, norm:1.4264, tok/sec: 102031.12, flops:89.35, batch-reuse:1
@ 6216 train 4.4009 , allloss: 4.4191, dt: 1263.18ms, fracRes: 0.6036, norm(attn): 0.1328, norm(output): 0.2344, norm(x): 0.7011, norm(y): 1.0083, norm:1.1815, tok/sec: 103763.38, flops:90.86, batch-reuse:1
@ 6217 train 4.3432 , allloss: 4.3622, dt: 1284.38ms, fracRes: 0.6040, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.7010, norm(y): 1.0083, norm:1.4382, tok/sec: 102050.89, flops:89.36, batch-reuse:1
@ 6218 train 4.3785 , allloss: 4.3976, dt: 1258.70ms, fracRes: 0.6027, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.7024, norm(y): 1.0083, norm:1.4708, tok/sec: 104133.14, flops:91.19, batch-reuse:1
@ 6219 train 4.4418 , allloss: 4.4610, dt: 1266.90ms, fracRes: 0.6026, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.6991, norm(y): 1.0082, norm:1.4961, tok/sec: 103459.05, flops:90.60, batch-reuse:1
@ 6220 train 4.4483 , allloss: 4.4678, dt: 1258.49ms, fracRes: 0.6023, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.6993, norm(y): 1.0082, norm:1.2568, tok/sec: 104150.28, flops:91.20, batch-reuse:1
@ 6221 train 4.3246 , allloss: 4.3433, dt: 1261.35ms, fracRes: 0.6020, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.6987, norm(y): 1.0083, norm:1.1778, tok/sec: 103914.24, flops:91.00, batch-reuse:1
@ 6222 train 4.4063 , allloss: 4.4248, dt: 1273.10ms, fracRes: 0.6025, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.6971, norm(y): 1.0083, norm:1.3186, tok/sec: 102954.77, flops:90.16, batch-reuse:1
@ 6223 train 4.4860 , allloss: 4.5055, dt: 1268.76ms, fracRes: 0.6030, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.6978, norm(y): 1.0084, norm:1.4650, tok/sec: 103306.97, flops:90.46, batch-reuse:1
@ 6224 train 4.3933 , allloss: 4.4116, dt: 1271.58ms, fracRes: 0.6017, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.6973, norm(y): 1.0082, norm:1.3429, tok/sec: 103077.79, flops:90.26, batch-reuse:1
@ 6225 train 4.3734 , allloss: 4.3918, dt: 1296.45ms, fracRes: 0.6019, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.6971, norm(y): 1.0082, norm:1.2797, tok/sec: 101100.74, flops:88.53, batch-reuse:1
@ 6226 train 4.4078 , allloss: 4.4267, dt: 1309.70ms, fracRes: 0.6018, norm(attn): 0.1328, norm(output): 0.2344, norm(x): 0.6974, norm(y): 1.0082, norm:1.1875, tok/sec: 100078.01, flops:87.64, batch-reuse:1
@ 6227 train 4.4200 , allloss: 4.4392, dt: 1298.75ms, fracRes: 0.6018, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6961, norm(y): 1.0083, norm:1.2701, tok/sec: 100922.03, flops:88.38, batch-reuse:1
@ 6228 train 4.2969 , allloss: 4.3151, dt: 1304.69ms, fracRes: 0.6019, norm(attn): 0.1338, norm(output): 0.2344, norm(x): 0.6979, norm(y): 1.0082, norm:1.5057, tok/sec: 100462.21, flops:87.97, batch-reuse:1
@ 6229 train 4.2659 , allloss: 4.2844, dt: 1262.29ms, fracRes: 0.6015, norm(attn): 0.1338, norm(output): 0.2344, norm(x): 0.6993, norm(y): 1.0082, norm:1.1171, tok/sec: 103837.01, flops:90.93, batch-reuse:1
@ 6230 train 4.3807 , allloss: 4.3992, dt: 1274.63ms, fracRes: 0.6012, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.6972, norm(y): 1.0081, norm:1.3857, tok/sec: 102831.69, flops:90.05, batch-reuse:1
@ 6231 train 4.3025 , allloss: 4.3214, dt: 1299.51ms, fracRes: 0.6020, norm(attn): 0.1338, norm(output): 0.2324, norm(x): 0.6955, norm(y): 1.0083, norm:1.4245, tok/sec: 100862.32, flops:88.32, batch-reuse:1
@ 6232 train 4.3370 , allloss: 4.3558, dt: 1286.36ms, fracRes: 0.6023, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.6964, norm(y): 1.0083, norm:1.4054, tok/sec: 101893.54, flops:89.23, batch-reuse:1
@ 6233 train 4.3574 , allloss: 4.3762, dt: 1267.61ms, fracRes: 0.6027, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.6973, norm(y): 1.0083, norm:1.3290, tok/sec: 103401.00, flops:90.55, batch-reuse:1
@ 6234 train 4.3304 , allloss: 4.3487, dt: 1266.67ms, fracRes: 0.6028, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.6991, norm(y): 1.0084, norm:1.1491, tok/sec: 103477.33, flops:90.61, batch-reuse:1
@ 6235 train 4.4013 , allloss: 4.4197, dt: 1263.54ms, fracRes: 0.6024, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.6983, norm(y): 1.0084, norm:1.3562, tok/sec: 103734.13, flops:90.84, batch-reuse:1
@ 6236 train 4.4000 , allloss: 4.4183, dt: 1287.39ms, fracRes: 0.6021, norm(attn): 0.1338, norm(output): 0.2344, norm(x): 0.6996, norm(y): 1.0083, norm:1.5137, tok/sec: 101812.48, flops:89.16, batch-reuse:1
@ 6237 train 4.4140 , allloss: 4.4328, dt: 1313.47ms, fracRes: 0.6000, norm(attn): 0.1357, norm(output): 0.2363, norm(x): 0.6984, norm(y): 1.0081, norm:1.6528, tok/sec: 99790.97, flops:87.39, batch-reuse:1
@ 6238 train 4.3173 , allloss: 4.3356, dt: 1289.77ms, fracRes: 0.6024, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.6970, norm(y): 1.0083, norm:1.7661, tok/sec: 101624.37, flops:88.99, batch-reuse:1
@ 6239 train 4.3846 , allloss: 4.4053, dt: 1281.65ms, fracRes: 0.6026, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6999, norm(y): 1.0083, norm:1.6830, tok/sec: 102267.99, flops:89.55, batch-reuse:1
@ 6240 train 4.3611 , allloss: 4.3811, dt: 1305.17ms, fracRes: 0.6013, norm(attn): 0.1367, norm(output): 0.2354, norm(x): 0.6988, norm(y): 1.0083, norm:1.4656, tok/sec: 100425.52, flops:87.94, batch-reuse:1
@ 6241 train 4.2719 , allloss: 4.2910, dt: 1277.93ms, fracRes: 0.6016, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.6976, norm(y): 1.0083, norm:1.2283, tok/sec: 102565.73, flops:89.82, batch-reuse:1
@ 6242 train 4.3555 , allloss: 4.3745, dt: 1293.86ms, fracRes: 0.6026, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.6991, norm(y): 1.0082, norm:1.3085, tok/sec: 101303.12, flops:88.71, batch-reuse:1
@ 6243 train 4.4447 , allloss: 4.4631, dt: 1322.03ms, fracRes: 0.6033, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.6997, norm(y): 1.0082, norm:1.3583, tok/sec: 99144.69, flops:86.82, batch-reuse:1
@ 6244 train 4.2680 , allloss: 4.2856, dt: 1304.01ms, fracRes: 0.6023, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.6988, norm(y): 1.0082, norm:1.3605, tok/sec: 100514.87, flops:88.02, batch-reuse:1
@ 6245 train 4.3908 , allloss: 4.4089, dt: 1270.56ms, fracRes: 0.6020, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.6981, norm(y): 1.0083, norm:1.1623, tok/sec: 103160.81, flops:90.34, batch-reuse:1
@ 6246 train 4.4553 , allloss: 4.4740, dt: 1264.11ms, fracRes: 0.6016, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.6988, norm(y): 1.0082, norm:1.3120, tok/sec: 103686.96, flops:90.80, batch-reuse:1
@ 6247 train 4.1910 , allloss: 4.2095, dt: 1290.34ms, fracRes: 0.6024, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.6989, norm(y): 1.0085, norm:1.6342, tok/sec: 101579.53, flops:88.95, batch-reuse:1
@ 6248 train 4.3170 , allloss: 4.3358, dt: 1296.00ms, fracRes: 0.6026, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.6974, norm(y): 1.0083, norm:1.4658, tok/sec: 101135.62, flops:88.56, batch-reuse:1
@ 6249 train 4.3226 , allloss: 4.3412, dt: 1270.20ms, fracRes: 0.6028, norm(attn): 0.1328, norm(output): 0.2324, norm(x): 0.6957, norm(y): 1.0085, norm:1.2295, tok/sec: 103190.40, flops:90.36, batch-reuse:1
@ 6250 train 4.2897 , allloss: 4.3099, dt: 1266.33ms, fracRes: 0.6020, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6980, norm(y): 1.0083, norm:1.1914, tok/sec: 103505.02, flops:90.64, batch-reuse:1
@ 6251 train 4.3406 , allloss: 4.3589, dt: 1279.43ms, fracRes: 0.6023, norm(attn): 0.1338, norm(output): 0.2324, norm(x): 0.6971, norm(y): 1.0083, norm:1.1535, tok/sec: 102445.53, flops:89.71, batch-reuse:1
@ 6252 train 4.3800 , allloss: 4.3983, dt: 1263.73ms, fracRes: 0.6024, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.6972, norm(y): 1.0082, norm:1.5208, tok/sec: 103718.20, flops:90.82, batch-reuse:1
@ 6253 train 4.2977 , allloss: 4.3155, dt: 1277.01ms, fracRes: 0.6019, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.6972, norm(y): 1.0082, norm:1.4780, tok/sec: 102639.71, flops:89.88, batch-reuse:1
@ 6254 train 4.3973 , allloss: 4.4156, dt: 1278.26ms, fracRes: 0.6018, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6963, norm(y): 1.0082, norm:1.2401, tok/sec: 102539.70, flops:89.79, batch-reuse:1
@ 6255 train 4.5145 , allloss: 4.5339, dt: 1259.25ms, fracRes: 0.6031, norm(attn): 0.1328, norm(output): 0.2344, norm(x): 0.6991, norm(y): 1.0082, norm:1.4817, tok/sec: 104087.64, flops:91.15, batch-reuse:1
@ 6256 train 4.3286 , allloss: 4.3471, dt: 1265.63ms, fracRes: 0.6030, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.6972, norm(y): 1.0083, norm:1.2260, tok/sec: 103562.71, flops:90.69, batch-reuse:1
@ 6257 train 4.2959 , allloss: 4.3146, dt: 1260.99ms, fracRes: 0.6020, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.6954, norm(y): 1.0083, norm:1.3633, tok/sec: 103943.75, flops:91.02, batch-reuse:1
@ 6258 train 4.2819 , allloss: 4.3011, dt: 1254.39ms, fracRes: 0.6019, norm(attn): 0.1338, norm(output): 0.2344, norm(x): 0.6970, norm(y): 1.0083, norm:1.2080, tok/sec: 104491.03, flops:91.50, batch-reuse:1
@ 6259 train 4.4028 , allloss: 4.4213, dt: 1272.46ms, fracRes: 0.6023, norm(attn): 0.1338, norm(output): 0.2344, norm(x): 0.6979, norm(y): 1.0083, norm:1.3012, tok/sec: 103007.14, flops:90.20, batch-reuse:1
@ 6260 train 4.3620 , allloss: 4.3815, dt: 1274.80ms, fracRes: 0.6021, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.7000, norm(y): 1.0082, norm:1.3902, tok/sec: 102817.31, flops:90.04, batch-reuse:1
@ 6261 train 4.4010 , allloss: 4.4195, dt: 1253.00ms, fracRes: 0.6021, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.7007, norm(y): 1.0083, norm:1.3688, tok/sec: 104606.76, flops:91.60, batch-reuse:1
@ 6262 train 4.2842 , allloss: 4.3038, dt: 1265.97ms, fracRes: 0.6018, norm(attn): 0.1357, norm(output): 0.2354, norm(x): 0.6991, norm(y): 1.0082, norm:1.3125, tok/sec: 103535.07, flops:90.66, batch-reuse:1
@ 6263 train 4.2757 , allloss: 4.2950, dt: 1288.78ms, fracRes: 0.6016, norm(attn): 0.1348, norm(output): 0.2354, norm(x): 0.6995, norm(y): 1.0083, norm:1.1740, tok/sec: 101702.18, flops:89.06, batch-reuse:1
@ 6264 train 4.2634 , allloss: 4.2824, dt: 1264.82ms, fracRes: 0.6017, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.6975, norm(y): 1.0083, norm:1.4278, tok/sec: 103629.26, flops:90.75, batch-reuse:1
@ 6265 train 4.2479 , allloss: 4.2671, dt: 1257.65ms, fracRes: 0.6021, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.6984, norm(y): 1.0083, norm:1.3623, tok/sec: 104220.00, flops:91.26, batch-reuse:1
@ 6266 train 4.2650 , allloss: 4.2835, dt: 1274.76ms, fracRes: 0.6021, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.6984, norm(y): 1.0083, norm:1.2860, tok/sec: 102821.33, flops:90.04, batch-reuse:1
@ 6267 train 4.2790 , allloss: 4.2978, dt: 1269.51ms, fracRes: 0.6020, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6991, norm(y): 1.0082, norm:1.4127, tok/sec: 103245.86, flops:90.41, batch-reuse:1
@ 6268 train 4.3275 , allloss: 4.3457, dt: 1266.70ms, fracRes: 0.6022, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6986, norm(y): 1.0081, norm:1.2178, tok/sec: 103474.82, flops:90.61, batch-reuse:1
@ 6269 train 4.3121 , allloss: 4.3308, dt: 1259.62ms, fracRes: 0.6023, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.6983, norm(y): 1.0081, norm:1.2615, tok/sec: 104057.14, flops:91.12, batch-reuse:1
@ 6270 train 4.2322 , allloss: 4.2508, dt: 1256.52ms, fracRes: 0.6020, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6954, norm(y): 1.0083, norm:1.2301, tok/sec: 104313.10, flops:91.35, batch-reuse:1
@ 6271 train 4.2406 , allloss: 4.2592, dt: 1253.71ms, fracRes: 0.6022, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6958, norm(y): 1.0083, norm:1.1570, tok/sec: 104547.24, flops:91.55, batch-reuse:1
@ 6272 train 4.3339 , allloss: 4.3527, dt: 1255.70ms, fracRes: 0.6027, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.6970, norm(y): 1.0083, norm:1.2047, tok/sec: 104381.91, flops:91.41, batch-reuse:1
@ 6273 train 4.3205 , allloss: 4.3391, dt: 1278.84ms, fracRes: 0.6020, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.6970, norm(y): 1.0083, norm:1.5037, tok/sec: 102492.75, flops:89.75, batch-reuse:1
@ 6274 train 4.3273 , allloss: 4.3467, dt: 1249.97ms, fracRes: 0.6022, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.6963, norm(y): 1.0083, norm:1.2319, tok/sec: 104860.24, flops:91.82, batch-reuse:1
@ 6275 train 4.2917 , allloss: 4.3102, dt: 1270.07ms, fracRes: 0.6021, norm(attn): 0.1338, norm(output): 0.2344, norm(x): 0.6968, norm(y): 1.0082, norm:1.4014, tok/sec: 103200.53, flops:90.37, batch-reuse:1
@ 6276 train 4.3221 , allloss: 4.3413, dt: 1287.79ms, fracRes: 0.6029, norm(attn): 0.1338, norm(output): 0.2344, norm(x): 0.6966, norm(y): 1.0082, norm:1.1933, tok/sec: 101780.90, flops:89.13, batch-reuse:1
@ 6277 train 4.3189 , allloss: 4.3389, dt: 1298.41ms, fracRes: 0.6030, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6960, norm(y): 1.0083, norm:1.3661, tok/sec: 100947.90, flops:88.40, batch-reuse:1
@ 6278 train 4.2346 , allloss: 4.2534, dt: 1276.38ms, fracRes: 0.6019, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6961, norm(y): 1.0083, norm:1.5158, tok/sec: 102690.34, flops:89.92, batch-reuse:1
@ 6279 train 4.0786 , allloss: 4.0969, dt: 1286.10ms, fracRes: 0.6017, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6963, norm(y): 1.0083, norm:1.2768, tok/sec: 101913.94, flops:89.24, batch-reuse:1
@ 6280 train 4.1997 , allloss: 4.2194, dt: 1254.57ms, fracRes: 0.6026, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.6956, norm(y): 1.0084, norm:1.4191, tok/sec: 104475.78, flops:91.49, batch-reuse:1
@ 6281 train 4.2529 , allloss: 4.2723, dt: 1269.70ms, fracRes: 0.6020, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.6954, norm(y): 1.0083, norm:1.2149, tok/sec: 103230.70, flops:90.40, batch-reuse:1
@ 6282 train 4.2039 , allloss: 4.2231, dt: 1285.66ms, fracRes: 0.6022, norm(attn): 0.1338, norm(output): 0.2344, norm(x): 0.6966, norm(y): 1.0084, norm:1.3669, tok/sec: 101949.53, flops:89.28, batch-reuse:1
@ 6283 train 4.2104 , allloss: 4.2285, dt: 1282.25ms, fracRes: 0.6025, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6977, norm(y): 1.0083, norm:1.2907, tok/sec: 102219.94, flops:89.51, batch-reuse:1
@ 6284 train 4.3226 , allloss: 4.3416, dt: 1261.14ms, fracRes: 0.6022, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6973, norm(y): 1.0082, norm:1.3824, tok/sec: 103931.69, flops:91.01, batch-reuse:1
@ 6285 train 4.2426 , allloss: 4.2614, dt: 1262.23ms, fracRes: 0.6023, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.6955, norm(y): 1.0083, norm:1.2785, tok/sec: 103841.82, flops:90.93, batch-reuse:1
@ 6286 train 4.1508 , allloss: 4.1700, dt: 1271.50ms, fracRes: 0.6020, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6943, norm(y): 1.0082, norm:1.2703, tok/sec: 103084.54, flops:90.27, batch-reuse:1
@ 6287 train 4.2173 , allloss: 4.2355, dt: 1264.06ms, fracRes: 0.6019, norm(attn): 0.1357, norm(output): 0.2334, norm(x): 0.6949, norm(y): 1.0081, norm:1.3252, tok/sec: 103690.93, flops:90.80, batch-reuse:1
@ 6288 train 4.3145 , allloss: 4.3329, dt: 1269.74ms, fracRes: 0.6020, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6947, norm(y): 1.0082, norm:1.4317, tok/sec: 103227.64, flops:90.39, batch-reuse:1
@ 6289 train 4.3161 , allloss: 4.3348, dt: 1260.19ms, fracRes: 0.6022, norm(attn): 0.1338, norm(output): 0.2344, norm(x): 0.6932, norm(y): 1.0082, norm:1.3420, tok/sec: 104009.38, flops:91.08, batch-reuse:1
@ 6290 train 4.2391 , allloss: 4.2575, dt: 1267.81ms, fracRes: 0.6021, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6958, norm(y): 1.0083, norm:1.2325, tok/sec: 103384.76, flops:90.53, batch-reuse:1
@ 6291 train 4.1848 , allloss: 4.2035, dt: 1284.17ms, fracRes: 0.6017, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6963, norm(y): 1.0082, norm:1.2599, tok/sec: 102067.79, flops:89.38, batch-reuse:1
@ 6292 train 4.2263 , allloss: 4.2452, dt: 1282.03ms, fracRes: 0.6024, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6951, norm(y): 1.0083, norm:1.1969, tok/sec: 102237.53, flops:89.53, batch-reuse:1
@ 6293 train 4.2465 , allloss: 4.2647, dt: 1274.04ms, fracRes: 0.6030, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.6964, norm(y): 1.0083, norm:1.3684, tok/sec: 102878.72, flops:90.09, batch-reuse:1
@ 6294 train 4.2862 , allloss: 4.3033, dt: 1254.26ms, fracRes: 0.6034, norm(attn): 0.1338, norm(output): 0.2314, norm(x): 0.6924, norm(y): 1.0083, norm:1.6470, tok/sec: 104501.39, flops:91.51, batch-reuse:1
@ 6295 train 4.2906 , allloss: 4.3103, dt: 1269.45ms, fracRes: 0.6025, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6961, norm(y): 1.0082, norm:1.6062, tok/sec: 103251.08, flops:90.42, batch-reuse:1
@ 6296 train 4.2688 , allloss: 4.2874, dt: 1277.79ms, fracRes: 0.6022, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.6966, norm(y): 1.0082, norm:1.2935, tok/sec: 102577.08, flops:89.83, batch-reuse:1
@ 6297 train 4.2165 , allloss: 4.2350, dt: 1270.14ms, fracRes: 0.6025, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.6957, norm(y): 1.0080, norm:1.3482, tok/sec: 103194.99, flops:90.37, batch-reuse:1
@ 6298 train 4.2217 , allloss: 4.2404, dt: 1251.51ms, fracRes: 0.6021, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6966, norm(y): 1.0081, norm:1.4260, tok/sec: 104731.07, flops:91.71, batch-reuse:1
@ 6299 train 4.2580 , allloss: 4.2787, dt: 1263.77ms, fracRes: 0.6023, norm(attn): 0.1357, norm(output): 0.2334, norm(x): 0.6979, norm(y): 1.0082, norm:1.5639, tok/sec: 103715.32, flops:90.82, batch-reuse:1
@ 6300 train 4.1361 , allloss: 4.1543, dt: 1267.01ms, fracRes: 0.6032, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.6947, norm(y): 1.0081, norm:1.6978, tok/sec: 103449.80, flops:90.59, batch-reuse:1
@ 6301 train 4.2947 , allloss: 4.3135, dt: 1269.43ms, fracRes: 0.6029, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.6959, norm(y): 1.0081, norm:1.7850, tok/sec: 103252.34, flops:90.42, batch-reuse:1
@ 6302 train 4.3041 , allloss: 4.3229, dt: 1290.29ms, fracRes: 0.6028, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.6971, norm(y): 1.0082, norm:1.8880, tok/sec: 101583.07, flops:88.95, batch-reuse:1
@ 6303 train 4.2119 , allloss: 4.2308, dt: 1265.52ms, fracRes: 0.6021, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6985, norm(y): 1.0083, norm:1.3976, tok/sec: 103571.45, flops:90.70, batch-reuse:1
@ 6304 train 4.2617 , allloss: 4.2804, dt: 1267.87ms, fracRes: 0.6029, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6989, norm(y): 1.0082, norm:1.3469, tok/sec: 103380.06, flops:90.53, batch-reuse:1
@ 6305 train 4.1921 , allloss: 4.2109, dt: 1274.81ms, fracRes: 0.6030, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6983, norm(y): 1.0083, norm:1.4462, tok/sec: 102816.52, flops:90.03, batch-reuse:1
@ 6306 train 4.3216 , allloss: 4.3391, dt: 1289.80ms, fracRes: 0.6035, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.6938, norm(y): 1.0081, norm:1.2200, tok/sec: 101621.89, flops:88.99, batch-reuse:1
@ 6307 train 4.1846 , allloss: 4.2036, dt: 1269.95ms, fracRes: 0.6030, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6963, norm(y): 1.0083, norm:1.6623, tok/sec: 103210.58, flops:90.38, batch-reuse:1
@ 6308 train 4.2929 , allloss: 4.3107, dt: 1242.50ms, fracRes: 0.6030, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.6969, norm(y): 1.0084, norm:1.2094, tok/sec: 105490.64, flops:92.38, batch-reuse:1
@ 6309 train 4.2909 , allloss: 4.3099, dt: 1264.67ms, fracRes: 0.6020, norm(attn): 0.1367, norm(output): 0.2334, norm(x): 0.6965, norm(y): 1.0082, norm:1.4490, tok/sec: 103641.67, flops:90.76, batch-reuse:1
@ 6310 train 4.2089 , allloss: 4.2281, dt: 1268.99ms, fracRes: 0.6025, norm(attn): 0.1367, norm(output): 0.2334, norm(x): 0.6947, norm(y): 1.0081, norm:1.2151, tok/sec: 103288.19, flops:90.45, batch-reuse:1
@ 6311 train 4.3460 , allloss: 4.3659, dt: 1259.04ms, fracRes: 0.6030, norm(attn): 0.1387, norm(output): 0.2354, norm(x): 0.6983, norm(y): 1.0080, norm:1.5245, tok/sec: 104104.45, flops:91.16, batch-reuse:1
@ 6312 train 4.2096 , allloss: 4.2271, dt: 1251.67ms, fracRes: 0.6021, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.6965, norm(y): 1.0082, norm:1.3984, tok/sec: 104717.57, flops:91.70, batch-reuse:1
@ 6313 train 4.3750 , allloss: 4.3932, dt: 1259.73ms, fracRes: 0.6019, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.6949, norm(y): 1.0081, norm:1.7541, tok/sec: 104047.86, flops:91.11, batch-reuse:1
@ 6314 train 4.1920 , allloss: 4.2115, dt: 1259.95ms, fracRes: 0.6023, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.6978, norm(y): 1.0082, norm:1.7484, tok/sec: 104029.63, flops:91.10, batch-reuse:1
@ 6315 train 4.2342 , allloss: 4.2535, dt: 1268.93ms, fracRes: 0.6025, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.6969, norm(y): 1.0083, norm:1.3423, tok/sec: 103293.14, flops:90.45, batch-reuse:1
@ 6316 train 4.2727 , allloss: 4.2931, dt: 1253.94ms, fracRes: 0.6018, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.7001, norm(y): 1.0081, norm:1.3704, tok/sec: 104528.40, flops:91.53, batch-reuse:1
@ 6317 train 4.2043 , allloss: 4.2231, dt: 1254.75ms, fracRes: 0.6020, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.7006, norm(y): 1.0083, norm:1.6926, tok/sec: 104460.37, flops:91.47, batch-reuse:1
@ 6318 train 4.2811 , allloss: 4.2997, dt: 1252.82ms, fracRes: 0.6020, norm(attn): 0.1357, norm(output): 0.2354, norm(x): 0.6979, norm(y): 1.0081, norm:1.2992, tok/sec: 104621.51, flops:91.62, batch-reuse:1
@ 6319 train 4.1256 , allloss: 4.1438, dt: 1260.08ms, fracRes: 0.6011, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.6956, norm(y): 1.0082, norm:1.2993, tok/sec: 104018.47, flops:91.09, batch-reuse:1
@ 6320 train 4.2682 , allloss: 4.2870, dt: 1248.70ms, fracRes: 0.6013, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6939, norm(y): 1.0082, norm:1.3460, tok/sec: 104966.95, flops:91.92, batch-reuse:1
@ 6321 train 4.2937 , allloss: 4.3129, dt: 1268.99ms, fracRes: 0.6011, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6936, norm(y): 1.0082, norm:1.3815, tok/sec: 103288.73, flops:90.45, batch-reuse:1
@ 6322 train 4.1196 , allloss: 4.1384, dt: 1265.08ms, fracRes: 0.6019, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6957, norm(y): 1.0083, norm:1.3457, tok/sec: 103607.46, flops:90.73, batch-reuse:1
@ 6323 train 4.3048 , allloss: 4.3239, dt: 1241.08ms, fracRes: 0.6028, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.6991, norm(y): 1.0080, norm:1.3356, tok/sec: 105611.28, flops:92.48, batch-reuse:1
@ 6324 train 4.2620 , allloss: 4.2801, dt: 1258.61ms, fracRes: 0.6028, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.7001, norm(y): 1.0082, norm:1.3464, tok/sec: 104140.50, flops:91.19, batch-reuse:1
@ 6325 train 4.2322 , allloss: 4.2502, dt: 1272.84ms, fracRes: 0.6023, norm(attn): 0.1377, norm(output): 0.2354, norm(x): 0.7022, norm(y): 1.0080, norm:1.4422, tok/sec: 102976.12, flops:90.17, batch-reuse:1
@ 6326 train 4.2832 , allloss: 4.3014, dt: 1285.64ms, fracRes: 0.6022, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.7005, norm(y): 1.0081, norm:1.3440, tok/sec: 101950.84, flops:89.28, batch-reuse:1
@ 6327 train 4.4317 , allloss: 4.4510, dt: 1294.92ms, fracRes: 0.6030, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.6981, norm(y): 1.0081, norm:1.3612, tok/sec: 101219.89, flops:88.64, batch-reuse:1
@ 6328 train 4.4104 , allloss: 4.4295, dt: 1292.84ms, fracRes: 0.6028, norm(attn): 0.1357, norm(output): 0.2334, norm(x): 0.6988, norm(y): 1.0080, norm:1.3147, tok/sec: 101382.89, flops:88.78, batch-reuse:1
@ 6329 train 4.3994 , allloss: 4.4186, dt: 1262.34ms, fracRes: 0.6026, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6969, norm(y): 1.0079, norm:1.2062, tok/sec: 103832.72, flops:90.92, batch-reuse:1
@ 6330 train 4.4759 , allloss: 4.4950, dt: 1255.81ms, fracRes: 0.6023, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6965, norm(y): 1.0079, norm:1.4299, tok/sec: 104372.44, flops:91.40, batch-reuse:1
@ 6331 train 4.2991 , allloss: 4.3177, dt: 1282.72ms, fracRes: 0.6021, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.6973, norm(y): 1.0081, norm:1.4407, tok/sec: 102182.68, flops:89.48, batch-reuse:1
@ 6332 train 4.4757 , allloss: 4.4939, dt: 1275.49ms, fracRes: 0.6014, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.6958, norm(y): 1.0079, norm:1.5172, tok/sec: 102761.80, flops:89.99, batch-reuse:1
@ 6333 train 4.4378 , allloss: 4.4565, dt: 1261.31ms, fracRes: 0.6010, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6952, norm(y): 1.0079, norm:1.3458, tok/sec: 103917.58, flops:91.00, batch-reuse:1
@ 6334 train 4.4008 , allloss: 4.4209, dt: 1286.08ms, fracRes: 0.6020, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6963, norm(y): 1.0080, norm:1.4117, tok/sec: 101916.29, flops:89.25, batch-reuse:1
@ 6335 train 4.4161 , allloss: 4.4354, dt: 1261.97ms, fracRes: 0.6010, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6954, norm(y): 1.0079, norm:1.3577, tok/sec: 103863.26, flops:90.95, batch-reuse:1
@ 6336 train 4.3633 , allloss: 4.3816, dt: 1276.22ms, fracRes: 0.6017, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6959, norm(y): 1.0080, norm:1.2446, tok/sec: 102703.10, flops:89.94, batch-reuse:1
@ 6337 train 4.3365 , allloss: 4.3553, dt: 1270.30ms, fracRes: 0.6021, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.6972, norm(y): 1.0081, norm:1.2077, tok/sec: 103182.07, flops:90.36, batch-reuse:1
@ 6338 train 4.3164 , allloss: 4.3354, dt: 1296.07ms, fracRes: 0.6022, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6938, norm(y): 1.0082, norm:1.3828, tok/sec: 101130.56, flops:88.56, batch-reuse:1
@ 6339 train 4.3838 , allloss: 4.4033, dt: 1271.82ms, fracRes: 0.6027, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6973, norm(y): 1.0081, norm:1.3729, tok/sec: 103058.56, flops:90.25, batch-reuse:1
@ 6340 train 4.3875 , allloss: 4.4068, dt: 1259.23ms, fracRes: 0.6023, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.6978, norm(y): 1.0080, norm:1.2542, tok/sec: 104089.13, flops:91.15, batch-reuse:1
@ 6341 train 4.6942 , allloss: 4.7134, dt: 1278.99ms, fracRes: 0.6017, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6981, norm(y): 1.0079, norm:1.4331, tok/sec: 102480.52, flops:89.74, batch-reuse:1
@ 6342 train 4.4339 , allloss: 4.4526, dt: 1257.66ms, fracRes: 0.6013, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.6947, norm(y): 1.0080, norm:1.3598, tok/sec: 104218.89, flops:91.26, batch-reuse:1
@ 6343 train 4.4505 , allloss: 4.4694, dt: 1264.34ms, fracRes: 0.6017, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.6952, norm(y): 1.0080, norm:1.3112, tok/sec: 103668.09, flops:90.78, batch-reuse:1
@ 6344 train 4.3465 , allloss: 4.3658, dt: 1284.99ms, fracRes: 0.6022, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.6948, norm(y): 1.0081, norm:1.4064, tok/sec: 102002.51, flops:89.32, batch-reuse:1
@ 6345 train 4.3731 , allloss: 4.3916, dt: 1277.44ms, fracRes: 0.6020, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6948, norm(y): 1.0079, norm:1.3824, tok/sec: 102604.99, flops:89.85, batch-reuse:1
@ 6346 train 4.5288 , allloss: 4.5485, dt: 1260.11ms, fracRes: 0.6033, norm(attn): 0.1357, norm(output): 0.2334, norm(x): 0.6971, norm(y): 1.0079, norm:1.4604, tok/sec: 104016.52, flops:91.09, batch-reuse:1
@ 6347 train 4.4447 , allloss: 4.4628, dt: 1259.67ms, fracRes: 0.6022, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.6981, norm(y): 1.0079, norm:1.6202, tok/sec: 104052.57, flops:91.12, batch-reuse:1
@ 6348 train 4.4468 , allloss: 4.4652, dt: 1270.64ms, fracRes: 0.6012, norm(attn): 0.1377, norm(output): 0.2344, norm(x): 0.6966, norm(y): 1.0079, norm:1.3236, tok/sec: 103154.09, flops:90.33, batch-reuse:1
@ 6349 train 4.3701 , allloss: 4.3893, dt: 1255.79ms, fracRes: 0.6025, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6970, norm(y): 1.0080, norm:1.5655, tok/sec: 104374.04, flops:91.40, batch-reuse:1
@ 6350 train 4.4367 , allloss: 4.4558, dt: 1252.24ms, fracRes: 0.6034, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.6962, norm(y): 1.0080, norm:1.5838, tok/sec: 104670.16, flops:91.66, batch-reuse:1
@ 6351 train 4.4165 , allloss: 4.4364, dt: 1292.48ms, fracRes: 0.6022, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6971, norm(y): 1.0080, norm:1.3185, tok/sec: 101411.00, flops:88.80, batch-reuse:1
@ 6352 train 4.3792 , allloss: 4.3990, dt: 1275.34ms, fracRes: 0.6025, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.6992, norm(y): 1.0079, norm:1.4079, tok/sec: 102774.52, flops:90.00, batch-reuse:1
@ 6353 train 4.3757 , allloss: 4.3945, dt: 1256.44ms, fracRes: 0.6020, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6939, norm(y): 1.0081, norm:1.3466, tok/sec: 104320.11, flops:91.35, batch-reuse:1
@ 6354 train 4.4154 , allloss: 4.4351, dt: 1252.59ms, fracRes: 0.6021, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.6945, norm(y): 1.0080, norm:1.4874, tok/sec: 104640.45, flops:91.63, batch-reuse:1
@ 6355 train 4.4563 , allloss: 4.4755, dt: 1252.55ms, fracRes: 0.6022, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6941, norm(y): 1.0079, norm:1.3073, tok/sec: 104643.72, flops:91.64, batch-reuse:1
@ 6356 train 4.3665 , allloss: 4.3852, dt: 1266.03ms, fracRes: 0.6031, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6974, norm(y): 1.0080, norm:1.3482, tok/sec: 103530.02, flops:90.66, batch-reuse:1
@ 6357 train 4.3617 , allloss: 4.3806, dt: 1267.05ms, fracRes: 0.6035, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6970, norm(y): 1.0080, norm:1.3982, tok/sec: 103446.92, flops:90.59, batch-reuse:1
@ 6358 train 4.4333 , allloss: 4.4519, dt: 1272.26ms, fracRes: 0.6031, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.6957, norm(y): 1.0081, norm:1.7486, tok/sec: 103022.58, flops:90.22, batch-reuse:1
@ 6359 train 4.3468 , allloss: 4.3663, dt: 1318.83ms, fracRes: 0.6027, norm(attn): 0.1357, norm(output): 0.2334, norm(x): 0.6931, norm(y): 1.0082, norm:1.3169, tok/sec: 99385.28, flops:87.03, batch-reuse:1
@ 6360 train 4.3257 , allloss: 4.3449, dt: 1283.12ms, fracRes: 0.6022, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.6948, norm(y): 1.0081, norm:1.4721, tok/sec: 102151.30, flops:89.45, batch-reuse:1
@ 6361 train 4.4435 , allloss: 4.4627, dt: 1250.01ms, fracRes: 0.6019, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6943, norm(y): 1.0079, norm:1.2846, tok/sec: 104856.88, flops:91.82, batch-reuse:1
@ 6362 train 4.4374 , allloss: 4.4566, dt: 1268.34ms, fracRes: 0.6023, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6955, norm(y): 1.0080, norm:1.4545, tok/sec: 103341.56, flops:90.49, batch-reuse:1
@ 6363 train 4.4178 , allloss: 4.4363, dt: 1310.65ms, fracRes: 0.6018, norm(attn): 0.1377, norm(output): 0.2344, norm(x): 0.6923, norm(y): 1.0080, norm:1.2972, tok/sec: 100005.11, flops:87.57, batch-reuse:1
@ 6364 train 4.4488 , allloss: 4.4672, dt: 1279.07ms, fracRes: 0.6018, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6910, norm(y): 1.0081, norm:1.2042, tok/sec: 102474.08, flops:89.74, batch-reuse:1
@ 6365 train 4.4234 , allloss: 4.4430, dt: 1258.65ms, fracRes: 0.6022, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6956, norm(y): 1.0081, norm:1.4029, tok/sec: 104136.59, flops:91.19, batch-reuse:1
@ 6366 train 4.4160 , allloss: 4.4344, dt: 1255.43ms, fracRes: 0.6022, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6956, norm(y): 1.0082, norm:1.1845, tok/sec: 104403.77, flops:91.42, batch-reuse:1
@ 6367 train 4.2972 , allloss: 4.3162, dt: 1267.01ms, fracRes: 0.6024, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6978, norm(y): 1.0081, norm:1.1783, tok/sec: 103450.03, flops:90.59, batch-reuse:1
@ 6368 train 4.3030 , allloss: 4.3227, dt: 1258.69ms, fracRes: 0.6022, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6957, norm(y): 1.0082, norm:1.3878, tok/sec: 104133.26, flops:91.19, batch-reuse:1
@ 6369 train 4.3810 , allloss: 4.4003, dt: 1290.82ms, fracRes: 0.6029, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.6960, norm(y): 1.0080, norm:1.4999, tok/sec: 101541.70, flops:88.92, batch-reuse:1
@ 6370 train 4.3120 , allloss: 4.3317, dt: 1288.47ms, fracRes: 0.6036, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.6972, norm(y): 1.0081, norm:1.3614, tok/sec: 101726.83, flops:89.08, batch-reuse:1
@ 6371 train 4.3988 , allloss: 4.4179, dt: 1292.58ms, fracRes: 0.6032, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6974, norm(y): 1.0081, norm:1.2870, tok/sec: 101403.16, flops:88.80, batch-reuse:1
@ 6372 train 4.4970 , allloss: 4.5159, dt: 1264.56ms, fracRes: 0.6029, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.6971, norm(y): 1.0081, norm:1.6048, tok/sec: 103650.67, flops:90.77, batch-reuse:1
@ 6373 train 4.3273 , allloss: 4.3475, dt: 1266.48ms, fracRes: 0.6030, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6988, norm(y): 1.0081, norm:1.6663, tok/sec: 103492.84, flops:90.63, batch-reuse:1
@ 6374 train 4.3799 , allloss: 4.3986, dt: 1259.26ms, fracRes: 0.6028, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.6958, norm(y): 1.0081, norm:1.2124, tok/sec: 104086.93, flops:91.15, batch-reuse:1
@ 6375 train 4.4955 , allloss: 4.5142, dt: 1252.37ms, fracRes: 0.6020, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6942, norm(y): 1.0080, norm:1.3423, tok/sec: 104659.49, flops:91.65, batch-reuse:1
@ 6376 train 4.3949 , allloss: 4.4139, dt: 1260.48ms, fracRes: 0.6020, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.6960, norm(y): 1.0081, norm:1.5666, tok/sec: 103985.49, flops:91.06, batch-reuse:1
@ 6377 train 4.4199 , allloss: 4.4381, dt: 1299.62ms, fracRes: 0.6023, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6977, norm(y): 1.0080, norm:1.6083, tok/sec: 100854.42, flops:88.32, batch-reuse:1
@ 6378 train 4.2901 , allloss: 4.3089, dt: 1238.59ms, fracRes: 0.6025, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6974, norm(y): 1.0081, norm:1.2507, tok/sec: 105823.19, flops:92.67, batch-reuse:1
@ 6379 train 4.3267 , allloss: 4.3451, dt: 1232.93ms, fracRes: 0.6026, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.6973, norm(y): 1.0082, norm:1.5442, tok/sec: 106309.02, flops:93.09, batch-reuse:1
@ 6380 train 4.3174 , allloss: 4.3356, dt: 1266.97ms, fracRes: 0.6017, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.6971, norm(y): 1.0082, norm:1.2180, tok/sec: 103453.24, flops:90.59, batch-reuse:1
@ 6381 train 4.3799 , allloss: 4.3993, dt: 1295.01ms, fracRes: 0.6017, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6958, norm(y): 1.0079, norm:1.3733, tok/sec: 101212.79, flops:88.63, batch-reuse:1
@ 6382 train 4.3933 , allloss: 4.4111, dt: 1258.74ms, fracRes: 0.6019, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.6967, norm(y): 1.0080, norm:1.3721, tok/sec: 104129.75, flops:91.18, batch-reuse:1
@ 6383 train 4.3976 , allloss: 4.4154, dt: 1250.20ms, fracRes: 0.6030, norm(attn): 0.1357, norm(output): 0.2334, norm(x): 0.6982, norm(y): 1.0081, norm:1.4170, tok/sec: 104840.64, flops:91.81, batch-reuse:1
@ 6384 train 4.4319 , allloss: 4.4496, dt: 1256.34ms, fracRes: 0.6031, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6993, norm(y): 1.0080, norm:1.3509, tok/sec: 104328.84, flops:91.36, batch-reuse:1
@ 6385 train 4.3034 , allloss: 4.3215, dt: 1257.71ms, fracRes: 0.6032, norm(attn): 0.1357, norm(output): 0.2334, norm(x): 0.6980, norm(y): 1.0082, norm:1.1899, tok/sec: 104214.82, flops:91.26, batch-reuse:1
@ 6386 train 4.3790 , allloss: 4.3966, dt: 1249.81ms, fracRes: 0.6019, norm(attn): 0.1357, norm(output): 0.2354, norm(x): 0.6974, norm(y): 1.0078, norm:1.2886, tok/sec: 104873.32, flops:91.84, batch-reuse:1
@ 6387 train 4.3469 , allloss: 4.3650, dt: 1287.51ms, fracRes: 0.6017, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6971, norm(y): 1.0079, norm:1.4715, tok/sec: 101802.79, flops:89.15, batch-reuse:1
@ 6388 train 4.3882 , allloss: 4.4065, dt: 1283.74ms, fracRes: 0.6020, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.6969, norm(y): 1.0079, norm:1.1840, tok/sec: 102101.67, flops:89.41, batch-reuse:1
@ 6389 train 4.3529 , allloss: 4.3709, dt: 1304.43ms, fracRes: 0.6020, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6960, norm(y): 1.0079, norm:1.2096, tok/sec: 100482.22, flops:87.99, batch-reuse:1
@ 6390 train 4.3516 , allloss: 4.3703, dt: 1272.74ms, fracRes: 0.6023, norm(attn): 0.1377, norm(output): 0.2344, norm(x): 0.6956, norm(y): 1.0079, norm:1.3853, tok/sec: 102984.41, flops:90.18, batch-reuse:1
@ 6391 train 4.5241 , allloss: 4.5428, dt: 1264.48ms, fracRes: 0.6016, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.6953, norm(y): 1.0079, norm:1.2822, tok/sec: 103657.10, flops:90.77, batch-reuse:1
@ 6392 train 4.2964 , allloss: 4.3143, dt: 1283.70ms, fracRes: 0.6019, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6952, norm(y): 1.0079, norm:1.0709, tok/sec: 102104.99, flops:89.41, batch-reuse:1
@ 6393 train 4.3090 , allloss: 4.3270, dt: 1272.19ms, fracRes: 0.6025, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.6964, norm(y): 1.0080, norm:1.2042, tok/sec: 103028.69, flops:90.22, batch-reuse:1
@ 6394 train 4.3666 , allloss: 4.3848, dt: 1266.23ms, fracRes: 0.6027, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6961, norm(y): 1.0081, norm:1.1472, tok/sec: 103513.42, flops:90.65, batch-reuse:1
@ 6395 train 4.3160 , allloss: 4.3341, dt: 1254.62ms, fracRes: 0.6019, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6960, norm(y): 1.0081, norm:1.1620, tok/sec: 104471.61, flops:91.48, batch-reuse:1
@ 6396 train 4.3849 , allloss: 4.4030, dt: 1271.75ms, fracRes: 0.6017, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6965, norm(y): 1.0080, norm:1.2581, tok/sec: 103064.28, flops:90.25, batch-reuse:1
@ 6397 train 4.2939 , allloss: 4.3117, dt: 1263.55ms, fracRes: 0.6018, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6936, norm(y): 1.0080, norm:1.1250, tok/sec: 103732.86, flops:90.84, batch-reuse:1
@ 6398 train 4.3717 , allloss: 4.3903, dt: 1284.87ms, fracRes: 0.6018, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.6929, norm(y): 1.0079, norm:1.2484, tok/sec: 102011.83, flops:89.33, batch-reuse:1
@ 6399 train 4.3747 , allloss: 4.3935, dt: 1257.20ms, fracRes: 0.6032, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6954, norm(y): 1.0080, norm:1.3368, tok/sec: 104257.02, flops:91.30, batch-reuse:1
@ 6400 train 4.3884 , allloss: 4.4060, dt: 1267.25ms, fracRes: 0.6026, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.6948, norm(y): 1.0079, norm:1.1398, tok/sec: 103430.14, flops:90.57, batch-reuse:1
@ 6401 train 4.3675 , allloss: 4.3857, dt: 1280.91ms, fracRes: 0.6022, norm(attn): 0.1387, norm(output): 0.2354, norm(x): 0.6963, norm(y): 1.0079, norm:1.2395, tok/sec: 102327.10, flops:89.61, batch-reuse:1
@ 6402 train 4.3365 , allloss: 4.3549, dt: 1264.62ms, fracRes: 0.6023, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.6945, norm(y): 1.0080, norm:1.2208, tok/sec: 103645.40, flops:90.76, batch-reuse:1
@ 6403 train 4.6731 , allloss: 4.6937, dt: 1250.15ms, fracRes: 0.6035, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.6947, norm(y): 1.0077, norm:2.4246, tok/sec: 104845.06, flops:91.81, batch-reuse:1
@ 6404 train 4.5132 , allloss: 4.5316, dt: 1263.43ms, fracRes: 0.6017, norm(attn): 0.1377, norm(output): 0.2354, norm(x): 0.6929, norm(y): 1.0078, norm:1.9175, tok/sec: 103742.70, flops:90.85, batch-reuse:1
@ 6405 train 4.4159 , allloss: 4.4341, dt: 1313.05ms, fracRes: 0.6017, norm(attn): 0.1387, norm(output): 0.2363, norm(x): 0.6930, norm(y): 1.0079, norm:1.4469, tok/sec: 99822.71, flops:87.41, batch-reuse:1
@ 6406 train 4.3729 , allloss: 4.3914, dt: 1259.92ms, fracRes: 0.6024, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.6947, norm(y): 1.0080, norm:1.4836, tok/sec: 104032.17, flops:91.10, batch-reuse:1
@ 6407 train 4.2993 , allloss: 4.3181, dt: 1298.50ms, fracRes: 0.6024, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6936, norm(y): 1.0080, norm:1.4346, tok/sec: 100940.97, flops:88.39, batch-reuse:1
@ 6408 train 4.3859 , allloss: 4.4054, dt: 1264.51ms, fracRes: 0.6030, norm(attn): 0.1367, norm(output): 0.2334, norm(x): 0.6934, norm(y): 1.0081, norm:1.4664, tok/sec: 103654.27, flops:90.77, batch-reuse:1
@ 6409 train 4.4066 , allloss: 4.4259, dt: 1285.50ms, fracRes: 0.6031, norm(attn): 0.1357, norm(output): 0.2334, norm(x): 0.6924, norm(y): 1.0080, norm:1.3836, tok/sec: 101962.24, flops:89.29, batch-reuse:1
@ 6410 train 4.4024 , allloss: 4.4210, dt: 1283.78ms, fracRes: 0.6020, norm(attn): 0.1377, norm(output): 0.2334, norm(x): 0.6928, norm(y): 1.0079, norm:1.2747, tok/sec: 102098.77, flops:89.41, batch-reuse:1
@ 6411 train 4.3560 , allloss: 4.3744, dt: 1269.16ms, fracRes: 0.6026, norm(attn): 0.1367, norm(output): 0.2334, norm(x): 0.6939, norm(y): 1.0079, norm:1.1954, tok/sec: 103274.33, flops:90.44, batch-reuse:1
@ 6412 train 4.3425 , allloss: 4.3608, dt: 1247.21ms, fracRes: 0.6034, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6942, norm(y): 1.0080, norm:1.3191, tok/sec: 105092.02, flops:92.03, batch-reuse:1
@ 6413 train 4.3107 , allloss: 4.3300, dt: 1290.54ms, fracRes: 0.6031, norm(attn): 0.1357, norm(output): 0.2334, norm(x): 0.6933, norm(y): 1.0080, norm:1.2683, tok/sec: 101563.80, flops:88.94, batch-reuse:1
@ 6414 train 4.3456 , allloss: 4.3652, dt: 1262.97ms, fracRes: 0.6022, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6914, norm(y): 1.0080, norm:1.5305, tok/sec: 103780.73, flops:90.88, batch-reuse:1
@ 6415 train 4.4336 , allloss: 4.4521, dt: 1257.89ms, fracRes: 0.6010, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.6916, norm(y): 1.0079, norm:1.1679, tok/sec: 104199.93, flops:91.25, batch-reuse:1
@ 6416 train 4.3034 , allloss: 4.3214, dt: 1241.42ms, fracRes: 0.6021, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6934, norm(y): 1.0079, norm:1.4379, tok/sec: 105582.44, flops:92.46, batch-reuse:1
@ 6417 train 4.3666 , allloss: 4.3847, dt: 1264.85ms, fracRes: 0.6032, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6954, norm(y): 1.0079, norm:1.3457, tok/sec: 103626.68, flops:90.74, batch-reuse:1
@ 6418 train 4.3032 , allloss: 4.3216, dt: 1265.46ms, fracRes: 0.6029, norm(attn): 0.1357, norm(output): 0.2334, norm(x): 0.6957, norm(y): 1.0081, norm:1.3791, tok/sec: 103576.76, flops:90.70, batch-reuse:1
@ 6419 train 4.2869 , allloss: 4.3063, dt: 1284.72ms, fracRes: 0.6024, norm(attn): 0.1377, norm(output): 0.2344, norm(x): 0.6936, norm(y): 1.0082, norm:1.2217, tok/sec: 102023.75, flops:89.34, batch-reuse:1
@ 6420 train 4.4069 , allloss: 4.4257, dt: 1275.51ms, fracRes: 0.6029, norm(attn): 0.1357, norm(output): 0.2334, norm(x): 0.6928, norm(y): 1.0080, norm:1.1729, tok/sec: 102760.59, flops:89.99, batch-reuse:1
@ 6421 train 4.2679 , allloss: 4.2866, dt: 1264.77ms, fracRes: 0.6031, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6960, norm(y): 1.0080, norm:1.5933, tok/sec: 103632.72, flops:90.75, batch-reuse:1
@ 6422 train 4.2763 , allloss: 4.2941, dt: 1252.52ms, fracRes: 0.6023, norm(attn): 0.1377, norm(output): 0.2344, norm(x): 0.6954, norm(y): 1.0080, norm:1.4152, tok/sec: 104647.02, flops:91.64, batch-reuse:1
@ 6423 train 4.4549 , allloss: 4.4734, dt: 1267.04ms, fracRes: 0.6017, norm(attn): 0.1377, norm(output): 0.2354, norm(x): 0.6954, norm(y): 1.0079, norm:1.3265, tok/sec: 103447.11, flops:90.59, batch-reuse:1
@ 6424 train 4.3455 , allloss: 4.3643, dt: 1274.25ms, fracRes: 0.6017, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6938, norm(y): 1.0081, norm:1.4310, tok/sec: 102861.94, flops:90.07, batch-reuse:1
@ 6425 train 4.3337 , allloss: 4.3517, dt: 1270.42ms, fracRes: 0.6023, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6931, norm(y): 1.0080, norm:1.3555, tok/sec: 103172.06, flops:90.35, batch-reuse:1
@ 6426 train 4.3268 , allloss: 4.3449, dt: 1252.60ms, fracRes: 0.6029, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6957, norm(y): 1.0080, norm:1.2107, tok/sec: 104640.11, flops:91.63, batch-reuse:1
@ 6427 train 4.3029 , allloss: 4.3209, dt: 1265.37ms, fracRes: 0.6026, norm(attn): 0.1377, norm(output): 0.2344, norm(x): 0.6965, norm(y): 1.0080, norm:1.1345, tok/sec: 103583.61, flops:90.71, batch-reuse:1
@ 6428 train 4.2433 , allloss: 4.2609, dt: 1240.35ms, fracRes: 0.6024, norm(attn): 0.1377, norm(output): 0.2344, norm(x): 0.6950, norm(y): 1.0080, norm:1.1045, tok/sec: 105673.40, flops:92.54, batch-reuse:1
@ 6429 train 4.2415 , allloss: 4.2600, dt: 1272.06ms, fracRes: 0.6020, norm(attn): 0.1377, norm(output): 0.2344, norm(x): 0.6955, norm(y): 1.0080, norm:1.2924, tok/sec: 103038.90, flops:90.23, batch-reuse:1
@ 6430 train 4.3003 , allloss: 4.3196, dt: 1297.29ms, fracRes: 0.6022, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6915, norm(y): 1.0081, norm:1.3601, tok/sec: 101035.60, flops:88.48, batch-reuse:1
@ 6431 train 4.2700 , allloss: 4.2881, dt: 1314.66ms, fracRes: 0.6018, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.6915, norm(y): 1.0079, norm:1.2824, tok/sec: 99700.62, flops:87.31, batch-reuse:1
@ 6432 train 4.3307 , allloss: 4.3492, dt: 1269.42ms, fracRes: 0.6027, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6930, norm(y): 1.0078, norm:1.2877, tok/sec: 103253.40, flops:90.42, batch-reuse:1
@ 6433 train 4.3436 , allloss: 4.3611, dt: 1259.88ms, fracRes: 0.6022, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.6936, norm(y): 1.0079, norm:1.0419, tok/sec: 104035.32, flops:91.10, batch-reuse:1
@ 6434 train 4.2446 , allloss: 4.2628, dt: 1262.99ms, fracRes: 0.6017, norm(attn): 0.1367, norm(output): 0.2354, norm(x): 0.6912, norm(y): 1.0079, norm:1.2019, tok/sec: 103778.87, flops:90.88, batch-reuse:1
@ 6435 train 4.4095 , allloss: 4.4277, dt: 1256.79ms, fracRes: 0.6002, norm(attn): 0.1387, norm(output): 0.2354, norm(x): 0.6884, norm(y): 1.0077, norm:1.3217, tok/sec: 104290.92, flops:91.33, batch-reuse:1
@ 6436 train 4.3284 , allloss: 4.3473, dt: 1279.60ms, fracRes: 0.6011, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.6878, norm(y): 1.0079, norm:1.2752, tok/sec: 102432.00, flops:89.70, batch-reuse:1
@ 6437 train 4.2444 , allloss: 4.2622, dt: 1269.62ms, fracRes: 0.6013, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6895, norm(y): 1.0080, norm:1.5052, tok/sec: 103237.50, flops:90.40, batch-reuse:1
@ 6438 train 4.2450 , allloss: 4.2636, dt: 1278.20ms, fracRes: 0.6028, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6932, norm(y): 1.0081, norm:1.4845, tok/sec: 102544.19, flops:89.80, batch-reuse:1
@ 6439 train 4.3550 , allloss: 4.3726, dt: 1256.04ms, fracRes: 0.6034, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6935, norm(y): 1.0081, norm:1.4197, tok/sec: 104353.59, flops:91.38, batch-reuse:1
@ 6440 train 4.1958 , allloss: 4.2147, dt: 1259.57ms, fracRes: 0.6037, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6944, norm(y): 1.0081, norm:1.3849, tok/sec: 104061.02, flops:91.12, batch-reuse:1
@ 6441 train 4.3922 , allloss: 4.4106, dt: 1254.77ms, fracRes: 0.6033, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6927, norm(y): 1.0079, norm:1.1738, tok/sec: 104458.70, flops:91.47, batch-reuse:1
@ 6442 train 4.2777 , allloss: 4.2956, dt: 1268.54ms, fracRes: 0.6024, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6912, norm(y): 1.0080, norm:1.5402, tok/sec: 103325.03, flops:90.48, batch-reuse:1
@ 6443 train 4.3935 , allloss: 4.4109, dt: 1241.83ms, fracRes: 0.6016, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.6904, norm(y): 1.0078, norm:1.3330, tok/sec: 105547.17, flops:92.43, batch-reuse:1
@ 6444 train 4.5725 , allloss: 4.5906, dt: 1258.05ms, fracRes: 0.6010, norm(attn): 0.1377, norm(output): 0.2354, norm(x): 0.6928, norm(y): 1.0077, norm:1.6767, tok/sec: 104186.68, flops:91.23, batch-reuse:1
@ 6445 train 4.3146 , allloss: 4.3329, dt: 1278.70ms, fracRes: 0.6029, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.6904, norm(y): 1.0079, norm:1.4821, tok/sec: 102503.73, flops:89.76, batch-reuse:1
@ 6446 train 4.3141 , allloss: 4.3320, dt: 1270.65ms, fracRes: 0.6025, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.6899, norm(y): 1.0080, norm:1.1861, tok/sec: 103153.70, flops:90.33, batch-reuse:1
@ 6447 train 4.2683 , allloss: 4.2867, dt: 1245.99ms, fracRes: 0.6021, norm(attn): 0.1367, norm(output): 0.2334, norm(x): 0.6894, norm(y): 1.0081, norm:1.3287, tok/sec: 105195.40, flops:92.12, batch-reuse:1
@ 6448 train 4.2330 , allloss: 4.2550, dt: 1270.80ms, fracRes: 0.6024, norm(attn): 0.1377, norm(output): 0.2344, norm(x): 0.6918, norm(y): 1.0080, norm:1.5514, tok/sec: 103141.16, flops:90.32, batch-reuse:1
@ 6449 train 4.3574 , allloss: 4.3754, dt: 1242.94ms, fracRes: 0.6026, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6927, norm(y): 1.0080, norm:1.4661, tok/sec: 105453.59, flops:92.34, batch-reuse:1
@ 6450 train 4.2696 , allloss: 4.2896, dt: 1280.19ms, fracRes: 0.6032, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6938, norm(y): 1.0079, norm:1.1777, tok/sec: 102385.15, flops:89.66, batch-reuse:1
@ 6451 train 4.1986 , allloss: 4.2165, dt: 1248.25ms, fracRes: 0.6029, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6928, norm(y): 1.0081, norm:1.2391, tok/sec: 105004.79, flops:91.95, batch-reuse:1
@ 6452 train 4.3716 , allloss: 4.3915, dt: 1263.17ms, fracRes: 0.6019, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.6917, norm(y): 1.0079, norm:1.3652, tok/sec: 103764.57, flops:90.87, batch-reuse:1
@ 6453 train 4.2809 , allloss: 4.2996, dt: 1297.38ms, fracRes: 0.6016, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6914, norm(y): 1.0079, norm:1.2481, tok/sec: 101028.06, flops:88.47, batch-reuse:1
@ 6454 train 4.2832 , allloss: 4.3015, dt: 1270.17ms, fracRes: 0.6029, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6921, norm(y): 1.0080, norm:1.2848, tok/sec: 103192.18, flops:90.36, batch-reuse:1
@ 6455 train 4.3300 , allloss: 4.3482, dt: 1279.38ms, fracRes: 0.6035, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.6932, norm(y): 1.0080, norm:1.1608, tok/sec: 102449.75, flops:89.71, batch-reuse:1
@ 6456 train 4.2590 , allloss: 4.2772, dt: 1262.18ms, fracRes: 0.6031, norm(attn): 0.1357, norm(output): 0.2334, norm(x): 0.6938, norm(y): 1.0080, norm:1.3135, tok/sec: 103845.43, flops:90.94, batch-reuse:1
@ 6457 train 4.2177 , allloss: 4.2354, dt: 1272.62ms, fracRes: 0.6025, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.6932, norm(y): 1.0081, norm:1.2855, tok/sec: 102994.02, flops:90.19, batch-reuse:1
@ 6458 train 4.2618 , allloss: 4.2794, dt: 1285.50ms, fracRes: 0.6030, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6931, norm(y): 1.0081, norm:1.2178, tok/sec: 101962.07, flops:89.29, batch-reuse:1
@ 6459 train 4.3546 , allloss: 4.3724, dt: 1256.75ms, fracRes: 0.6039, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.6931, norm(y): 1.0081, norm:1.1433, tok/sec: 104294.66, flops:91.33, batch-reuse:1
@ 6460 train 4.3469 , allloss: 4.3649, dt: 1263.85ms, fracRes: 0.6043, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.6949, norm(y): 1.0080, norm:1.2434, tok/sec: 103708.14, flops:90.82, batch-reuse:1
@ 6461 train 4.3407 , allloss: 4.3586, dt: 1278.90ms, fracRes: 0.6038, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.6969, norm(y): 1.0079, norm:1.1271, tok/sec: 102487.83, flops:89.75, batch-reuse:1
@ 6462 train 4.3342 , allloss: 4.3519, dt: 1265.52ms, fracRes: 0.6024, norm(attn): 0.1377, norm(output): 0.2344, norm(x): 0.6958, norm(y): 1.0079, norm:1.1366, tok/sec: 103571.92, flops:90.70, batch-reuse:1
@ 6463 train 4.1929 , allloss: 4.2111, dt: 1251.10ms, fracRes: 0.6024, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6935, norm(y): 1.0080, norm:1.2013, tok/sec: 104765.38, flops:91.74, batch-reuse:1
@ 6464 train 4.2472 , allloss: 4.2651, dt: 1277.65ms, fracRes: 0.6025, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.6903, norm(y): 1.0079, norm:1.2212, tok/sec: 102588.39, flops:89.84, batch-reuse:1
@ 6465 train 4.0998 , allloss: 4.1187, dt: 1249.92ms, fracRes: 0.6028, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6921, norm(y): 1.0080, norm:1.4411, tok/sec: 104863.96, flops:91.83, batch-reuse:1
@ 6466 train 4.1523 , allloss: 4.1711, dt: 1278.96ms, fracRes: 0.6033, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.6929, norm(y): 1.0081, norm:1.2637, tok/sec: 102483.25, flops:89.74, batch-reuse:1
@ 6467 train 4.2922 , allloss: 4.3121, dt: 1250.33ms, fracRes: 0.6038, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.6940, norm(y): 1.0079, norm:1.2894, tok/sec: 104829.75, flops:91.80, batch-reuse:1
@ 6468 train 4.2813 , allloss: 4.2986, dt: 1285.11ms, fracRes: 0.6026, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.6918, norm(y): 1.0079, norm:1.3994, tok/sec: 101992.71, flops:89.31, batch-reuse:1
@ 6469 train 4.2305 , allloss: 4.2486, dt: 1267.11ms, fracRes: 0.6033, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.6905, norm(y): 1.0079, norm:1.3671, tok/sec: 103441.76, flops:90.58, batch-reuse:1
@ 6470 train 4.2152 , allloss: 4.2332, dt: 1261.53ms, fracRes: 0.6027, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.6921, norm(y): 1.0080, norm:1.2356, tok/sec: 103899.57, flops:90.98, batch-reuse:1
@ 6471 train 4.1646 , allloss: 4.1826, dt: 1271.68ms, fracRes: 0.6028, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6913, norm(y): 1.0080, norm:1.3104, tok/sec: 103069.64, flops:90.26, batch-reuse:1
@ 6472 train 4.2111 , allloss: 4.2297, dt: 1245.94ms, fracRes: 0.6018, norm(attn): 0.1377, norm(output): 0.2344, norm(x): 0.6934, norm(y): 1.0079, norm:1.4713, tok/sec: 105199.35, flops:92.12, batch-reuse:1
@ 6473 train 4.1871 , allloss: 4.2061, dt: 1268.08ms, fracRes: 0.6023, norm(attn): 0.1377, norm(output): 0.2344, norm(x): 0.6936, norm(y): 1.0079, norm:1.5851, tok/sec: 103362.47, flops:90.51, batch-reuse:1
@ 6474 train 4.1887 , allloss: 4.2066, dt: 1279.95ms, fracRes: 0.6032, norm(attn): 0.1357, norm(output): 0.2334, norm(x): 0.6934, norm(y): 1.0079, norm:1.2829, tok/sec: 102404.24, flops:89.67, batch-reuse:1
@ 6475 train 4.2429 , allloss: 4.2607, dt: 1270.75ms, fracRes: 0.6035, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.6950, norm(y): 1.0079, norm:1.3344, tok/sec: 103145.40, flops:90.32, batch-reuse:1
@ 6476 train 4.3222 , allloss: 4.3407, dt: 1281.26ms, fracRes: 0.6038, norm(attn): 0.1377, norm(output): 0.2334, norm(x): 0.6939, norm(y): 1.0077, norm:1.3290, tok/sec: 102299.07, flops:89.58, batch-reuse:1
@ 6477 train 4.1424 , allloss: 4.1598, dt: 1257.11ms, fracRes: 0.6038, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6949, norm(y): 1.0080, norm:1.2354, tok/sec: 104264.34, flops:91.30, batch-reuse:1
@ 6478 train 4.1666 , allloss: 4.1849, dt: 1261.30ms, fracRes: 0.6036, norm(attn): 0.1367, norm(output): 0.2334, norm(x): 0.6932, norm(y): 1.0080, norm:1.2109, tok/sec: 103918.57, flops:91.00, batch-reuse:1
@ 6479 train 4.1490 , allloss: 4.1666, dt: 1253.37ms, fracRes: 0.6030, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6919, norm(y): 1.0081, norm:1.1865, tok/sec: 104575.96, flops:91.58, batch-reuse:1
@ 6480 train 4.2636 , allloss: 4.2812, dt: 1262.11ms, fracRes: 0.6035, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6922, norm(y): 1.0080, norm:1.3732, tok/sec: 103851.11, flops:90.94, batch-reuse:1
@ 6481 train 4.2442 , allloss: 4.2620, dt: 1299.53ms, fracRes: 0.6031, norm(attn): 0.1377, norm(output): 0.2334, norm(x): 0.6904, norm(y): 1.0079, norm:1.2379, tok/sec: 100861.21, flops:88.32, batch-reuse:1
@ 6482 train 4.1688 , allloss: 4.1877, dt: 1258.77ms, fracRes: 0.6031, norm(attn): 0.1357, norm(output): 0.2334, norm(x): 0.6920, norm(y): 1.0080, norm:1.3747, tok/sec: 104127.22, flops:91.18, batch-reuse:1
@ 6483 train 4.2938 , allloss: 4.3123, dt: 1249.22ms, fracRes: 0.6022, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.6886, norm(y): 1.0078, norm:1.2278, tok/sec: 104922.92, flops:91.88, batch-reuse:1
@ 6484 train 4.1576 , allloss: 4.1758, dt: 1272.68ms, fracRes: 0.6016, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6905, norm(y): 1.0079, norm:1.1278, tok/sec: 102988.95, flops:90.19, batch-reuse:1
@ 6485 train 4.2722 , allloss: 4.2906, dt: 1265.59ms, fracRes: 0.6020, norm(attn): 0.1367, norm(output): 0.2334, norm(x): 0.6889, norm(y): 1.0079, norm:1.2619, tok/sec: 103565.72, flops:90.69, batch-reuse:1
@ 6486 train 4.1707 , allloss: 4.1896, dt: 1257.36ms, fracRes: 0.6019, norm(attn): 0.1357, norm(output): 0.2334, norm(x): 0.6867, norm(y): 1.0079, norm:1.3823, tok/sec: 104243.68, flops:91.28, batch-reuse:1
@ 6487 train 4.1604 , allloss: 4.1797, dt: 1270.85ms, fracRes: 0.6025, norm(attn): 0.1357, norm(output): 0.2334, norm(x): 0.6858, norm(y): 1.0080, norm:1.3907, tok/sec: 103137.53, flops:90.32, batch-reuse:1
@ 6488 train 4.2618 , allloss: 4.2811, dt: 1261.94ms, fracRes: 0.6015, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.6846, norm(y): 1.0079, norm:1.3188, tok/sec: 103865.34, flops:90.95, batch-reuse:1
@ 6489 train 4.2156 , allloss: 4.2337, dt: 1273.02ms, fracRes: 0.6036, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.6882, norm(y): 1.0080, norm:1.4244, tok/sec: 102961.40, flops:90.16, batch-reuse:1
@ 6490 train 4.1166 , allloss: 4.1355, dt: 1252.25ms, fracRes: 0.6031, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.6892, norm(y): 1.0080, norm:1.6673, tok/sec: 104669.58, flops:91.66, batch-reuse:1
@ 6491 train 4.2307 , allloss: 4.2490, dt: 1266.03ms, fracRes: 0.6029, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6888, norm(y): 1.0079, norm:1.3323, tok/sec: 103530.16, flops:90.66, batch-reuse:1
@ 6492 train 4.1862 , allloss: 4.2063, dt: 1254.93ms, fracRes: 0.6041, norm(attn): 0.1328, norm(output): 0.2324, norm(x): 0.6910, norm(y): 1.0080, norm:1.5602, tok/sec: 104445.88, flops:91.46, batch-reuse:1
@ 6493 train 4.3591 , allloss: 4.3803, dt: 1257.49ms, fracRes: 0.6034, norm(attn): 0.1387, norm(output): 0.2363, norm(x): 0.6943, norm(y): 1.0077, norm:2.5818, tok/sec: 104233.28, flops:91.28, batch-reuse:1
@ 6494 train 4.0988 , allloss: 4.1180, dt: 1261.86ms, fracRes: 0.6034, norm(attn): 0.1367, norm(output): 0.2334, norm(x): 0.6911, norm(y): 1.0082, norm:1.6005, tok/sec: 103871.66, flops:90.96, batch-reuse:1
@ 6495 train 4.2413 , allloss: 4.2597, dt: 1260.26ms, fracRes: 0.6030, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.6923, norm(y): 1.0081, norm:1.5820, tok/sec: 104003.85, flops:91.07, batch-reuse:1
@ 6496 train 4.1950 , allloss: 4.2147, dt: 1257.38ms, fracRes: 0.6032, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.6927, norm(y): 1.0081, norm:1.5669, tok/sec: 104241.90, flops:91.28, batch-reuse:1
@ 6497 train 4.1772 , allloss: 4.1955, dt: 1262.57ms, fracRes: 0.6027, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6927, norm(y): 1.0081, norm:1.3189, tok/sec: 103813.54, flops:90.91, batch-reuse:1
@ 6498 train 4.1753 , allloss: 4.1943, dt: 1271.26ms, fracRes: 0.6030, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6949, norm(y): 1.0081, norm:1.5042, tok/sec: 103104.33, flops:90.29, batch-reuse:1
@ 6499 train 4.2454 , allloss: 4.2639, dt: 1280.79ms, fracRes: 0.6034, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.6933, norm(y): 1.0081, norm:1.1748, tok/sec: 102337.00, flops:89.62, batch-reuse:1
@ 6500 train 4.3201 , allloss: 4.3383, dt: 1280.18ms, fracRes: 0.6044, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6930, norm(y): 1.0080, norm:1.5860, tok/sec: 102385.64, flops:89.66, batch-reuse:1
@ 6501 train 4.2631 , allloss: 4.2813, dt: 1242.64ms, fracRes: 0.6040, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6926, norm(y): 1.0080, norm:1.4915, tok/sec: 105478.35, flops:92.37, batch-reuse:1
@ 6502 train 4.1619 , allloss: 4.1802, dt: 1259.24ms, fracRes: 0.6040, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6912, norm(y): 1.0081, norm:1.3898, tok/sec: 104087.91, flops:91.15, batch-reuse:1
@ 6503 train 4.1906 , allloss: 4.2088, dt: 1264.70ms, fracRes: 0.6033, norm(attn): 0.1357, norm(output): 0.2334, norm(x): 0.6907, norm(y): 1.0079, norm:1.3872, tok/sec: 103638.77, flops:90.75, batch-reuse:1
@ 6504 train 4.1995 , allloss: 4.2176, dt: 1253.28ms, fracRes: 0.6032, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6887, norm(y): 1.0079, norm:1.2265, tok/sec: 104583.58, flops:91.58, batch-reuse:1
@ 6505 train 4.0911 , allloss: 4.1101, dt: 1247.61ms, fracRes: 0.6035, norm(attn): 0.1338, norm(output): 0.2324, norm(x): 0.6911, norm(y): 1.0081, norm:1.3129, tok/sec: 105058.81, flops:92.00, batch-reuse:1
@ 6506 train 4.0358 , allloss: 4.0539, dt: 1260.86ms, fracRes: 0.6019, norm(attn): 0.1357, norm(output): 0.2334, norm(x): 0.6918, norm(y): 1.0080, norm:1.3705, tok/sec: 103954.82, flops:91.03, batch-reuse:1
@ 6507 train 4.1444 , allloss: 4.1620, dt: 1255.00ms, fracRes: 0.6025, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.6942, norm(y): 1.0081, norm:1.3304, tok/sec: 104440.07, flops:91.46, batch-reuse:1
@ 6508 train 4.2593 , allloss: 4.2771, dt: 1251.63ms, fracRes: 0.6033, norm(attn): 0.1367, norm(output): 0.2334, norm(x): 0.6938, norm(y): 1.0079, norm:1.1968, tok/sec: 104720.96, flops:91.70, batch-reuse:1
@ 6509 train 4.1945 , allloss: 4.2122, dt: 1274.94ms, fracRes: 0.6026, norm(attn): 0.1377, norm(output): 0.2344, norm(x): 0.6947, norm(y): 1.0079, norm:1.2364, tok/sec: 102806.58, flops:90.03, batch-reuse:1
@ 6510 train 4.3035 , allloss: 4.3221, dt: 1262.67ms, fracRes: 0.6020, norm(attn): 0.1377, norm(output): 0.2344, norm(x): 0.6930, norm(y): 1.0078, norm:1.2603, tok/sec: 103805.80, flops:90.90, batch-reuse:1
@ 6511 train 4.4046 , allloss: 4.4232, dt: 1228.11ms, fracRes: 0.6014, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.6925, norm(y): 1.0076, norm:1.4737, tok/sec: 106726.67, flops:93.46, batch-reuse:1
@ 6512 train 4.4896 , allloss: 4.5089, dt: 1268.38ms, fracRes: 0.6018, norm(attn): 0.1387, norm(output): 0.2354, norm(x): 0.6955, norm(y): 1.0076, norm:1.3659, tok/sec: 103337.85, flops:90.49, batch-reuse:1
@ 6513 train 4.3760 , allloss: 4.3938, dt: 1242.88ms, fracRes: 0.6020, norm(attn): 0.1387, norm(output): 0.2354, norm(x): 0.6945, norm(y): 1.0077, norm:1.6538, tok/sec: 105458.14, flops:92.35, batch-reuse:1
@ 6514 train 4.4096 , allloss: 4.4280, dt: 1285.76ms, fracRes: 0.6026, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6987, norm(y): 1.0076, norm:1.6677, tok/sec: 101941.18, flops:89.27, batch-reuse:1
@ 6515 train 4.4407 , allloss: 4.4585, dt: 1252.23ms, fracRes: 0.6037, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6952, norm(y): 1.0078, norm:1.3500, tok/sec: 104670.99, flops:91.66, batch-reuse:1
@ 6516 train 4.4018 , allloss: 4.4197, dt: 1266.50ms, fracRes: 0.6030, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.6969, norm(y): 1.0077, norm:1.5348, tok/sec: 103491.80, flops:90.63, batch-reuse:1
@ 6517 train 4.3782 , allloss: 4.3971, dt: 1272.25ms, fracRes: 0.6029, norm(attn): 0.1367, norm(output): 0.2334, norm(x): 0.6962, norm(y): 1.0079, norm:1.6256, tok/sec: 103023.49, flops:90.22, batch-reuse:1
@ 6518 train 4.3565 , allloss: 4.3743, dt: 1294.72ms, fracRes: 0.6024, norm(attn): 0.1377, norm(output): 0.2354, norm(x): 0.6965, norm(y): 1.0078, norm:1.3703, tok/sec: 101235.66, flops:88.65, batch-reuse:1
@ 6519 train 4.5113 , allloss: 4.5292, dt: 1255.82ms, fracRes: 0.6035, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.6949, norm(y): 1.0077, norm:1.6513, tok/sec: 104371.39, flops:91.40, batch-reuse:1
@ 6520 train 4.3824 , allloss: 4.4002, dt: 1286.13ms, fracRes: 0.6036, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.6966, norm(y): 1.0078, norm:1.4948, tok/sec: 101911.94, flops:89.24, batch-reuse:1
@ 6521 train 4.4507 , allloss: 4.4685, dt: 1267.79ms, fracRes: 0.6030, norm(attn): 0.1377, norm(output): 0.2344, norm(x): 0.6950, norm(y): 1.0077, norm:1.3497, tok/sec: 103385.97, flops:90.53, batch-reuse:1
@ 6522 train 4.3750 , allloss: 4.3931, dt: 1267.58ms, fracRes: 0.6024, norm(attn): 0.1377, norm(output): 0.2344, norm(x): 0.6947, norm(y): 1.0078, norm:1.2872, tok/sec: 103403.37, flops:90.55, batch-reuse:1
@ 6523 train 4.3555 , allloss: 4.3740, dt: 1264.12ms, fracRes: 0.6030, norm(attn): 0.1387, norm(output): 0.2344, norm(x): 0.6967, norm(y): 1.0079, norm:1.4789, tok/sec: 103686.66, flops:90.80, batch-reuse:1
@ 6524 train 4.4419 , allloss: 4.4594, dt: 1277.86ms, fracRes: 0.6034, norm(attn): 0.1367, norm(output): 0.2354, norm(x): 0.6949, norm(y): 1.0078, norm:1.2392, tok/sec: 102571.84, flops:89.82, batch-reuse:1
@ 6525 train 4.3884 , allloss: 4.4064, dt: 1281.97ms, fracRes: 0.6038, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.6969, norm(y): 1.0077, norm:1.1931, tok/sec: 102242.85, flops:89.53, batch-reuse:1
@ 6526 train 4.5913 , allloss: 4.6098, dt: 1272.47ms, fracRes: 0.6034, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.6959, norm(y): 1.0078, norm:1.6849, tok/sec: 103006.10, flops:90.20, batch-reuse:1
@ 6527 train 4.4250 , allloss: 4.4425, dt: 1256.55ms, fracRes: 0.6036, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6974, norm(y): 1.0079, norm:1.7202, tok/sec: 104311.04, flops:91.34, batch-reuse:1
@ 6528 train 4.4034 , allloss: 4.4213, dt: 1262.34ms, fracRes: 0.6041, norm(attn): 0.1338, norm(output): 0.2344, norm(x): 0.6970, norm(y): 1.0079, norm:1.2458, tok/sec: 103832.30, flops:90.92, batch-reuse:1
@ 6529 train 4.3921 , allloss: 4.4106, dt: 1273.66ms, fracRes: 0.6027, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6960, norm(y): 1.0077, norm:1.4705, tok/sec: 102910.08, flops:90.12, batch-reuse:1
@ 6530 train 4.3572 , allloss: 4.3761, dt: 1285.89ms, fracRes: 0.6028, norm(attn): 0.1377, norm(output): 0.2354, norm(x): 0.6933, norm(y): 1.0078, norm:1.5442, tok/sec: 101930.69, flops:89.26, batch-reuse:1
@ 6531 train 4.2947 , allloss: 4.3133, dt: 1277.30ms, fracRes: 0.6022, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.6904, norm(y): 1.0079, norm:1.3107, tok/sec: 102616.27, flops:89.86, batch-reuse:1
@ 6532 train 4.4265 , allloss: 4.4463, dt: 1289.80ms, fracRes: 0.6026, norm(attn): 0.1377, norm(output): 0.2354, norm(x): 0.6934, norm(y): 1.0075, norm:1.4694, tok/sec: 101621.92, flops:88.99, batch-reuse:1
@ 6533 train 4.5213 , allloss: 4.5395, dt: 1256.19ms, fracRes: 0.6013, norm(attn): 0.1367, norm(output): 0.2354, norm(x): 0.6895, norm(y): 1.0077, norm:1.7094, tok/sec: 104340.84, flops:91.37, batch-reuse:1
@ 6534 train 4.3620 , allloss: 4.3813, dt: 1276.64ms, fracRes: 0.6015, norm(attn): 0.1387, norm(output): 0.2354, norm(x): 0.6925, norm(y): 1.0078, norm:1.6531, tok/sec: 102669.51, flops:89.91, batch-reuse:1
@ 6535 train 4.3726 , allloss: 4.3909, dt: 1259.19ms, fracRes: 0.6027, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.6941, norm(y): 1.0078, norm:1.4198, tok/sec: 104091.95, flops:91.15, batch-reuse:1
@ 6536 train 4.3895 , allloss: 4.4071, dt: 1250.46ms, fracRes: 0.6020, norm(attn): 0.1377, norm(output): 0.2344, norm(x): 0.6897, norm(y): 1.0077, norm:1.2698, tok/sec: 104818.77, flops:91.79, batch-reuse:1
@ 6537 train 4.3906 , allloss: 4.4087, dt: 1269.78ms, fracRes: 0.6024, norm(attn): 0.1367, norm(output): 0.2354, norm(x): 0.6929, norm(y): 1.0078, norm:1.3037, tok/sec: 103224.48, flops:90.39, batch-reuse:1
@ 6538 train 4.3220 , allloss: 4.3422, dt: 1288.93ms, fracRes: 0.6020, norm(attn): 0.1396, norm(output): 0.2344, norm(x): 0.6934, norm(y): 1.0079, norm:1.4834, tok/sec: 101690.37, flops:89.05, batch-reuse:1
@ 6539 train 4.3992 , allloss: 4.4170, dt: 1237.51ms, fracRes: 0.6023, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.6932, norm(y): 1.0078, norm:1.2950, tok/sec: 105916.08, flops:92.75, batch-reuse:1
@ 6540 train 4.4066 , allloss: 4.4241, dt: 1260.52ms, fracRes: 0.6020, norm(attn): 0.1387, norm(output): 0.2344, norm(x): 0.6957, norm(y): 1.0077, norm:1.2568, tok/sec: 103982.58, flops:91.06, batch-reuse:1
@ 6541 train 4.4267 , allloss: 4.4445, dt: 1255.72ms, fracRes: 0.6035, norm(attn): 0.1367, norm(output): 0.2354, norm(x): 0.6955, norm(y): 1.0079, norm:1.5128, tok/sec: 104379.97, flops:91.40, batch-reuse:1
@ 6542 train 4.3982 , allloss: 4.4159, dt: 1268.29ms, fracRes: 0.6037, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.6956, norm(y): 1.0078, norm:1.2466, tok/sec: 103345.23, flops:90.50, batch-reuse:1
@ 6543 train 4.3529 , allloss: 4.3706, dt: 1263.07ms, fracRes: 0.6028, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6939, norm(y): 1.0077, norm:1.2795, tok/sec: 103772.72, flops:90.87, batch-reuse:1
@ 6544 train 4.3857 , allloss: 4.4040, dt: 1282.52ms, fracRes: 0.6021, norm(attn): 0.1377, norm(output): 0.2344, norm(x): 0.6929, norm(y): 1.0076, norm:1.2947, tok/sec: 102198.81, flops:89.49, batch-reuse:1
@ 6545 train 4.2883 , allloss: 4.3074, dt: 1269.27ms, fracRes: 0.6022, norm(attn): 0.1377, norm(output): 0.2344, norm(x): 0.6943, norm(y): 1.0078, norm:1.3793, tok/sec: 103265.27, flops:90.43, batch-reuse:1
@ 6546 train 4.4284 , allloss: 4.4471, dt: 1253.44ms, fracRes: 0.6032, norm(attn): 0.1377, norm(output): 0.2344, norm(x): 0.6940, norm(y): 1.0078, norm:1.4119, tok/sec: 104569.85, flops:91.57, batch-reuse:1
@ 6547 train 4.2984 , allloss: 4.3170, dt: 1278.64ms, fracRes: 0.6036, norm(attn): 0.1357, norm(output): 0.2334, norm(x): 0.6954, norm(y): 1.0079, norm:1.3324, tok/sec: 102508.89, flops:89.77, batch-reuse:1
@ 6548 train 4.3203 , allloss: 4.3389, dt: 1273.07ms, fracRes: 0.6036, norm(attn): 0.1367, norm(output): 0.2334, norm(x): 0.6941, norm(y): 1.0078, norm:1.1752, tok/sec: 102957.70, flops:90.16, batch-reuse:1
@ 6549 train 4.3301 , allloss: 4.3487, dt: 1272.29ms, fracRes: 0.6031, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.6954, norm(y): 1.0079, norm:1.2843, tok/sec: 103020.33, flops:90.21, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7109, 0.2910, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7969, 0.1060, 0.0986, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7500, 0.0776, 0.1270, 0.0464, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3379, 0.0364, 0.0588, 0.1953, 0.3711, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6523, 0.0679, 0.0491, 0.0481, 0.1182, 0.0625, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1807, 0.0349, 0.0217, 0.1074, 0.4316, 0.1465, 0.0767, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2695, 0.2148, 0.2617, 0.0101, 0.0425, 0.0520, 0.0344, 0.1167, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6211, 0.0718, 0.0811, 0.0128, 0.0452, 0.0176, 0.0615, 0.0447, 0.0449, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1836, 0.1270, 0.2656, 0.0125, 0.0222, 0.0222, 0.0369, 0.1260, 0.0232, 0.1797, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2344, 0.0732, 0.1494, 0.0398, 0.0466, 0.0204, 0.0282, 0.0889, 0.0454, 0.1260, 0.1484, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0232, 0.0130, 0.0040, 0.1494, 0.1699, 0.1045, 0.0457, 0.0315, 0.3789, 0.0469, 0.0292, 0.0027, 0.0000, 0.0000, 0.0000],
        [0.0378, 0.0452, 0.0354, 0.0581, 0.1118, 0.1064, 0.0688, 0.0330, 0.1650, 0.1465, 0.1079, 0.0645, 0.0181, 0.0000, 0.0000],
        [0.2891, 0.0601, 0.0525, 0.0090, 0.0378, 0.0179, 0.0464, 0.0304, 0.0386, 0.0442, 0.1299, 0.0698, 0.1299, 0.0452, 0.0000],
        [0.1299, 0.0928, 0.0957, 0.0791, 0.0491, 0.0143, 0.0150, 0.0845, 0.0260, 0.0796, 0.0408, 0.0815, 0.1357, 0.0317, 0.0452]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0034, -0.0056, -0.0009,  ..., -0.0384,  0.0175,  0.0064],
        [-0.0459,  0.0049, -0.0093,  ...,  0.0073,  0.0053,  0.0024],
        [ 0.0291,  0.0351, -0.0070,  ..., -0.0242,  0.0239, -0.0082],
        ...,
        [ 0.0319,  0.0219,  0.0127,  ..., -0.0377,  0.0125,  0.0209],
        [-0.0508,  0.0019, -0.0337,  ...,  0.0099, -0.0014, -0.0147],
        [-0.0269,  0.0061, -0.0213,  ...,  0.0072, -0.0253, -0.0115]], device='cuda:0', requires_grad=True)
K: tensor([     1.2578,      0.5781,      0.0635,      0.3672,      0.5938,      0.0454,      0.5430,     -0.5781,     -0.4863,     -0.3984,      0.3770,     -0.2158,      0.0283,     -0.6172,     -0.1235,     -0.5898,     -0.2969,      0.2500,     -1.0156,      0.6328,      0.8594,      0.8516,
            -0.5820,      0.6055,     -0.3516,     -0.6172,     -0.8594,     -0.0065,      0.6992,     -0.3027,      1.3281,     -0.2021,      0.9414,     -0.2910,      0.7109,      1.2969,     -1.3516,      0.1484,     -0.1396,     -2.2656,      0.2432,      0.1875,     -0.4316,      1.1641,
            -0.0942,      0.1855,      0.0199,      0.8672,      0.8555,     -0.5586,      0.4629,      0.1582,     -1.4844,      0.3223,      1.3750,     -0.7344,     -0.3906,      0.3828,      1.0391,     -0.1631,      0.2354,     -0.4297,     -0.3750,     -0.0006], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[-0.0251, -0.0043, -0.0167,  ...,  0.0102, -0.0029, -0.0192],
        [ 0.0232, -0.0141,  0.0161,  ...,  0.0057,  0.0342,  0.0100],
        [-0.0465,  0.0415,  0.0033,  ..., -0.0156, -0.0342, -0.0494],
        ...,
        [ 0.0091,  0.0063,  0.0242,  ...,  0.0216,  0.0175,  0.0193],
        [ 0.0195, -0.0081,  0.0392,  ...,  0.0271,  0.0100,  0.0234],
        [ 0.0173, -0.0092,  0.0228,  ..., -0.0227,  0.0241,  0.0070]], device='cuda:0', requires_grad=True)
Q: tensor([-0.3809, -0.4141, -1.0547, -1.2891, -0.0388, -0.0161, -2.4375, -0.1631,  0.2236,  0.7148, -0.7383, -0.7773, -0.2969, -0.7344, -0.2773, -0.0874, -0.3086, -0.0172,  0.3848,  0.6211,  0.1338, -0.0894,  0.9453,  0.4395,  0.4434, -0.0928, -0.4199, -1.0391, -0.4805,  0.2676,  0.1060,  0.4883,
        -0.6523, -0.9258,  0.1650, -0.0564,  1.1797,  0.8789, -0.4004,  1.3828,  1.3750,  0.0908,  0.3301,  0.6680, -0.7070,  0.4805, -0.4922,  0.3613, -0.5117,  0.2617, -1.5703, -0.7188,  0.1245, -0.8828, -0.2500, -0.7773,  0.5820, -0.9648,  0.1953, -0.2793, -0.1689,  0.2676,  0.3262,  0.9531],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -0.8906,     -1.3359,     -1.5391,     -2.3594,     -2.1719,     -1.0781,     -0.3984,     -1.9531,     -1.5859,     -2.6406,     -1.7656,      0.3184,     -1.9531,     -1.5234],
        [     0.0000,     -2.0156,     -2.0938,     -1.1328,     -0.1719,     -1.2812,     -1.8828,     -1.1953,     -0.2080,     -0.5156,     -0.0530,     -1.2578,     -1.1094,      0.3418,     -0.9414],
        [     0.0000,     -2.2656,     -1.7734,     -2.7812,     -0.9258,     -2.2344,     -2.2031,     -2.8906,     -1.3984,     -1.5938,      0.8555,     -0.8672,     -2.4688,     -1.0156,     -1.4375],
        [     0.0000,     -2.2344,     -1.7500,     -0.5469,      0.0913,     -1.7578,     -1.8984,     -1.6797,      0.0825,     -0.1436,      0.0229,     -1.5547,     -1.7109,      0.6797,     -0.6641],
        [     0.0000,     -2.2656,     -2.5938,     -2.6094,     -1.7109,     -2.3438,     -0.8242,     -1.9062,     -0.9961,     -2.4688,     -1.3359,     -2.1875,     -1.7266,     -0.6719,     -1.4922],
        [     0.0000,     -1.6484,     -2.1094,     -0.5234,      0.8711,     -0.2090,     -0.8555,     -2.2500,      1.1953,      0.2393,      2.2656,     -0.8438,     -2.7031,      1.3828,      0.2168],
        [     0.0000,     -0.2275,     -0.0306,     -3.2812,     -1.8438,     -1.6406,     -2.0625,     -0.8359,     -1.8906,     -0.4141,      0.0205,      0.4883,      0.3184,     -2.0938,     -0.6172],
        [     0.0000,     -2.1562,     -2.0312,     -3.8750,     -2.6250,     -3.5625,     -2.3125,     -2.6250,     -2.6250,     -2.2500,     -0.9297,     -1.4141,     -0.9805,     -2.4844,     -2.0000],
        [     0.0000,     -0.3691,      0.3730,     -2.6875,     -2.1094,     -2.1094,     -1.6094,     -0.3750,     -2.0781,     -0.0200,     -0.0339,      0.9375,      1.1875,     -2.2344,     -0.0776],
        [     0.0000,     -1.1641,     -0.4473,     -1.7656,     -1.6094,     -2.4375,     -2.1094,     -0.9688,     -1.6406,     -0.6250,     -0.4590,      0.0015,     -0.2539,     -1.4844,     -0.8203],
        [     0.0000,     -0.5781,     -1.7578,      1.8594,      1.9922,      1.5000,      0.6758,      0.3047,      2.7969,      0.6992,      0.2285,     -2.1562,     -0.8828,      2.8750,      0.9648],
        [     0.0000,      0.1787,     -0.0623,      0.4316,      1.0859,      1.0391,      0.5977,     -0.1338,      1.4766,      1.3594,      1.0469,      0.5352,     -0.7383,      1.3828,      1.0781],
        [     0.0000,     -1.5703,     -1.7031,     -3.4688,     -2.0312,     -2.7812,     -1.8281,     -2.2500,     -2.0156,     -1.8828,     -0.8008,     -1.4219,     -0.7969,     -1.8594,     -1.7500],
        [     0.0000,     -0.3398,     -0.3066,     -0.5000,     -0.9727,     -2.2031,     -2.1562,     -0.4336,     -1.6094,     -0.4902,     -1.1562,     -0.4629,      0.0405,     -1.4062,     -1.0547]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8368],
        [0.8213],
        [0.8039],
        [0.5181],
        [0.6474],
        [0.4442],
        [0.4608],
        [0.4820],
        [0.3346],
        [0.1767],
        [0.1063],
        [0.1392],
        [0.2020],
        [0.1382]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9570, 0.0449, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8125, 0.1504, 0.0356, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7227, 0.1875, 0.0564, 0.0344, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3047, 0.1289, 0.0491, 0.1250, 0.3926, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5938, 0.1089, 0.0344, 0.0327, 0.0898, 0.1387, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2207, 0.1895, 0.0171, 0.0352, 0.1553, 0.3438, 0.0376, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5195, 0.1504, 0.0258, 0.0272, 0.0525, 0.1387, 0.0310, 0.0535, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1963, 0.0571, 0.0292, 0.0259, 0.0615, 0.1514, 0.1069, 0.0300, 0.3398, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2207, 0.0728, 0.0469, 0.0513, 0.0293, 0.1416, 0.0361, 0.2080, 0.1514, 0.0410, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2432, 0.0510, 0.0019, 0.0061, 0.0513, 0.0327, 0.0210, 0.0034, 0.2051, 0.0022, 0.3828, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1128, 0.0359, 0.0505, 0.0449, 0.0364, 0.1260, 0.1465, 0.1133, 0.0476, 0.1050, 0.1211, 0.0605, 0.0000, 0.0000, 0.0000],
        [0.0977, 0.0137, 0.0129, 0.0278, 0.0231, 0.0977, 0.0796, 0.0669, 0.1514, 0.0544, 0.1455, 0.0649, 0.1650, 0.0000, 0.0000],
        [0.0295, 0.0134, 0.0088, 0.0151, 0.0184, 0.0623, 0.0742, 0.0168, 0.1611, 0.0151, 0.1650, 0.0474, 0.0403, 0.3320, 0.0000],
        [0.0703, 0.0347, 0.0084, 0.0119, 0.0334, 0.0596, 0.0564, 0.0540, 0.0737, 0.0302, 0.2070, 0.1113, 0.0679, 0.1250, 0.0574]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0346, -0.0170, -0.0173,  ..., -0.0198, -0.0237,  0.0190],
        [-0.0181,  0.0195, -0.0173,  ...,  0.0154,  0.0022, -0.0515],
        [ 0.0142,  0.0280,  0.0170,  ...,  0.0132,  0.0243,  0.0163],
        ...,
        [-0.0050, -0.0071,  0.0236,  ...,  0.0410, -0.0213, -0.0138],
        [-0.0150, -0.0059,  0.0023,  ...,  0.0092, -0.0025, -0.0083],
        [ 0.0326,  0.0389,  0.0166,  ..., -0.0027, -0.0230,  0.0223]], device='cuda:0', requires_grad=True)
K: tensor([ 2.5000, -0.5469, -1.3125, -0.9023, -0.9961, -1.3594,  0.1211,  0.2139,  1.0312,  0.8281,  0.7852,  1.5312, -1.9219,  0.8125,  0.7383, -2.6875, -0.1406, -0.4668, -0.0065,  1.4453,  0.3359,  1.7344,  1.2344, -2.6094,  0.0500, -0.6836, -1.7422,  0.8945,  0.7656, -1.0938,  3.2812,  1.0156,
        -1.6641, -0.2432, -2.0469,  1.0547,  1.3203,  2.2969, -0.6055,  1.5703,  2.5312, -0.2139, -1.2891,  2.5156,  1.2812, -0.1572, -1.8047, -3.0469,  1.7734,  1.3672, -1.6719,  2.6562, -1.3438, -0.2314,  0.5039,  0.9492,  2.0156,  0.8203, -0.9844,  2.0312, -0.0092,  2.0000,  2.9375, -0.5781],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0191, -0.0053, -0.0134,  ...,  0.0020,  0.0165, -0.0102],
        [ 0.0175,  0.0026, -0.0525,  ..., -0.0120, -0.0041, -0.0166],
        [ 0.0429,  0.0197,  0.0300,  ..., -0.0195,  0.0261,  0.0160],
        ...,
        [-0.0213, -0.0172,  0.0153,  ...,  0.0169, -0.0009, -0.0400],
        [ 0.0407,  0.0166, -0.0086,  ..., -0.0038, -0.0020, -0.0089],
        [ 0.0078, -0.0308, -0.0198,  ...,  0.0105, -0.0050,  0.0151]], device='cuda:0', requires_grad=True)
Q: tensor([-0.8164, -0.0840, -0.6484, -0.6797,  0.4961, -0.7070, -0.1631,  0.9258,  0.5547,  0.5078,  0.2188, -1.3672,  0.1279, -1.4062, -0.3887,  2.0000, -1.4375,  0.3750, -1.6016, -1.2578,  0.5586,  0.3457, -0.4004,  1.3359, -0.4941,  0.1465,  0.6758, -0.6797, -1.0312, -0.2695, -0.5547, -2.2656,
        -0.9453,  0.5547,  0.5156,  0.8359,  1.4531, -0.1279,  1.2109,  1.0547,  1.0781,  0.2773, -1.1406,  0.3164,  1.0156, -1.8516,  0.9023, -1.4531,  1.3281,  0.4004,  0.0566, -0.6445, -1.4375, -1.0859, -0.0352,  0.7266,  0.0850,  0.9453,  0.8516,  0.7109, -0.6133,  0.1157, -0.5703, -0.9414],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -3.0625,     -7.9062,     -8.0625,     -5.7812,     -4.9062,     -7.2188,     -8.7500,     -4.5000,     -9.3125,     -6.8438,     -9.8750,     -8.8125,     -4.7812,     -6.2188],
        [     0.0000,     -1.6875,     -3.1250,     -3.9688,     -3.2969,     -1.7500,     -2.5469,     -2.3750,     -2.6719,     -2.2656,     -2.7188,     -2.6875,     -2.0156,     -2.6094,     -2.4375],
        [     0.0000,     -1.3516,     -2.5469,     -3.0469,     -3.0000,     -2.0938,     -3.1875,     -3.5312,     -3.1094,     -3.2656,     -3.2500,     -3.5938,     -3.6406,     -3.2500,     -1.9609],
        [     0.0000,     -0.8594,     -1.8203,     -0.8906,      0.2520,      0.2227,      0.2188,     -1.3984,      2.4531,     -1.5703,      2.9375,     -0.6250,     -0.3594,      3.7188,      0.6250],
        [     0.0000,     -1.7031,     -2.8438,     -2.9062,     -1.8906,     -1.4609,     -1.4453,     -2.1094,     -1.1797,     -2.0312,     -0.9414,     -1.4375,     -1.8828,     -0.7539,     -1.5625],
        [     0.0000,     -0.1504,     -2.5625,     -1.8359,     -0.3496,      0.4434,     -1.7656,     -1.7188,      1.0156,     -2.2500,     -0.9336,     -1.4844,     -0.9844,      0.8867,     -0.2383],
        [     0.0000,     -1.2422,     -3.0156,     -2.9531,     -2.2969,     -1.3203,     -2.8281,     -2.2812,     -0.9727,     -2.9844,     -1.9844,     -2.7188,     -1.5703,     -1.0234,     -2.6094],
        [     0.0000,     -1.2344,     -1.9062,     -2.0312,     -1.1641,     -0.2578,     -0.6094,     -1.8750,      0.5508,     -2.2188,      0.1602,     -0.9883,     -1.2734,      1.1719,      0.1445],
        [     0.0000,     -1.1094,     -1.5469,     -1.4609,     -2.0156,     -0.4434,     -1.8125,     -0.0605,     -0.3789,     -1.6797,     -1.5078,     -0.0952,      0.6094,     -0.1885,     -2.2969],
        [     0.0000,     -1.5625,     -4.8125,     -3.6875,     -1.5547,     -2.0156,     -2.4531,     -4.2812,     -0.1689,     -4.7188,      0.4551,     -3.4062,     -3.9844,      0.5820,     -2.0000],
        [     0.0000,     -1.1406,     -0.8047,     -0.9219,     -1.1250,      0.1104,      0.2617,      0.0040,     -0.8594,     -0.0688,      0.0732,     -0.6211,      0.2598,     -0.3867,      0.0010],
        [     0.0000,     -1.9688,     -2.0312,     -1.2578,     -1.4453,     -0.0014,     -0.2080,     -0.3828,      0.4355,     -0.5859,      0.3984,     -0.4082,      0.5234,      1.1016,     -0.5430],
        [     0.0000,     -0.7891,     -1.2109,     -0.6758,     -0.4746,      0.7422,      0.9219,     -0.5625,      1.6953,     -0.6719,      1.7188,      0.4707,      0.3086,      2.4219,      0.9531],
        [     0.0000,     -0.7070,     -2.1250,     -1.7734,     -0.7461,     -0.1660,     -0.2207,     -0.2637,      0.0476,     -0.8438,      1.0781,      0.4609,     -0.0371,      0.5742,     -0.2021]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8180],
        [0.5540],
        [0.4729],
        [0.5103],
        [0.4625],
        [0.2885],
        [0.2635],
        [0.2800],
        [0.2389],
        [0.2654],
        [0.1191],
        [0.1936],
        [0.1250],
        [0.1386]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9766,     0.0121,     0.0111,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0026,     0.0014,     0.0007,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0002,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0010,     0.0017,     0.0002,     0.0006,     0.0008,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9609,     0.0072,     0.0106,     0.0028,     0.0025,     0.0043,     0.0115,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8867,     0.0204,     0.0177,     0.0094,     0.0052,     0.0114,     0.0131,     0.0364,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0008,     0.0016,     0.0004,     0.0003,     0.0006,     0.0012,     0.0010,     0.0008,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0014,     0.0011,     0.0005,     0.0004,     0.0008,     0.0016,     0.0012,     0.0007,     0.0008,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9844,     0.0027,     0.0038,     0.0011,     0.0007,     0.0010,     0.0016,     0.0039,     0.0012,     0.0013,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0007,     0.0010,     0.0002,     0.0003,     0.0002,     0.0007,     0.0008,     0.0003,     0.0002,     0.0000,     0.0030,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0005,     0.0010,     0.0003,     0.0002,     0.0003,     0.0008,     0.0015,     0.0004,     0.0004,     0.0000,     0.0020,     0.0024,     0.0000,     0.0000],
        [    0.9922,     0.0006,     0.0011,     0.0003,     0.0002,     0.0005,     0.0008,     0.0007,     0.0005,     0.0002,     0.0000,     0.0011,     0.0009,     0.0004,     0.0000],
        [    0.9922,     0.0009,     0.0009,     0.0003,     0.0008,     0.0006,     0.0011,     0.0010,     0.0006,     0.0003,     0.0001,     0.0008,     0.0007,     0.0004,     0.0007]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[    -0.0022,      0.0001,      0.0224,  ...,     -0.0157,     -0.0023,     -0.0134],
        [     0.0342,     -0.0452,     -0.0180,  ...,     -0.0066,     -0.0152,     -0.0349],
        [     0.0446,     -0.0343,      0.0344,  ...,     -0.0056,     -0.0156,      0.0083],
        ...,
        [     0.0345,      0.0159,     -0.0255,  ...,      0.0008,      0.0198,      0.0149],
        [     0.0156,      0.0242,     -0.0123,  ...,     -0.0164,     -0.0418,     -0.0188],
        [     0.0225,     -0.0107,      0.0079,  ...,      0.0005,     -0.0176,      0.0145]], device='cuda:0', requires_grad=True)
K: tensor([-1.1562, -0.3086, -1.4531, -0.6445, -1.7031,  2.3750, -1.0938,  2.2344, -1.5469, -1.6719,  1.3203,  0.1709, -1.6484, -1.0156, -1.6406,  0.2949,  1.4922,  2.6562, -2.1719,  1.5703,  2.4219,  0.6680, -1.2812, -0.0513,  1.5703, -1.3125,  0.1455, -2.0938,  1.5938,  1.3125,  0.9648,  2.6094,
        -0.9102,  1.5938,  2.0625, -1.3438, -1.2578,  1.7500,  1.8672, -2.1250,  2.0000, -2.3281,  0.2031,  0.9727,  0.2227,  2.2188, -1.1797, -2.7031,  0.7695,  2.8906, -1.1797, -2.1094,  1.6875,  0.7891,  1.8828, -1.2578, -1.2734, -2.5938, -1.6172, -1.6797, -2.7188, -1.4609,  1.5156,  1.4375],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0063,  0.0233,  0.0280,  ..., -0.0152,  0.0428, -0.0119],
        [ 0.0039,  0.0410,  0.0045,  ...,  0.0227,  0.0290, -0.0145],
        [-0.0156, -0.0056,  0.0198,  ..., -0.0146,  0.0539, -0.0295],
        ...,
        [ 0.0124, -0.0090,  0.0137,  ..., -0.0253, -0.0049, -0.0029],
        [ 0.0146,  0.0023,  0.0144,  ...,  0.0233,  0.0183, -0.0107],
        [ 0.0177, -0.0304, -0.0248,  ...,  0.0284,  0.0281,  0.0088]], device='cuda:0', requires_grad=True)
Q: tensor([ 1.4062,  1.3281, -1.1016,  0.3145,  0.1514,  0.0309,  0.6602, -0.0231,  0.4043,  0.5312, -0.2988,  0.2334,  0.7227,  1.4062,  0.2715, -1.4844, -0.8164, -1.8281,  1.1562, -0.0461, -0.2930,  0.7695,  0.7578,  0.5469, -0.4004, -0.3926,  0.5078,  0.0923, -0.8125, -1.0312, -0.6289, -0.1221,
        -0.1387, -1.3984, -0.4414, -0.0928,  1.5000, -0.3125, -0.2158, -0.5195, -1.8438,  1.6484,  0.6562, -0.2617,  0.1592, -0.7070,  1.0859,  0.1182, -1.3281, -0.8125,  0.9102, -0.9141, -1.0469, -0.2617, -0.5000,  1.0938, -0.1455,  1.1562,  1.3750,  1.9609,  1.1797,  0.7031, -1.6250, -0.1289],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000,  -8.0000,  -7.7188,  -9.2500,  -9.0000,  -8.5625,  -8.0625,  -7.3125,  -8.8750,  -9.2500, -10.6250,  -7.3125,  -7.5938,  -9.0625,  -9.1875],
        [  0.0000,  -4.4062,  -4.4688,  -5.4062,  -5.6250,  -4.8750,  -4.8125,  -4.0000,  -5.0000,  -4.8750,  -6.5312,  -4.3750,  -4.1250,  -5.0625,  -4.7188],
        [  0.0000,  -5.9688,  -6.5938,  -7.2500,  -7.7188,  -6.8438,  -6.5938,  -6.4062,  -7.0938,  -7.4688,  -8.7500,  -6.4375,  -6.3750,  -7.3125,  -7.2500],
        [  0.0000,  -9.3750,  -8.3750, -10.3750,  -8.9375,  -9.4375,  -8.1875,  -8.6250,  -9.3125, -10.8125, -11.5625,  -8.1250,  -8.7500,  -9.6875,  -9.8750],
        [  0.0000,  -6.9375,  -6.3438,  -8.3750,  -7.5000,  -7.1250,  -6.0312,  -6.3750,  -7.6562,  -8.4375,  -9.3125,  -6.7500,  -6.7500,  -7.8125,  -7.5000],
        [  0.0000,  -4.9062,  -4.5000,  -5.8438,  -5.9375,  -5.4062,  -4.4375,  -4.4375,  -5.4062,  -6.0938,  -7.1562,  -4.4062,  -4.7500,  -5.4688,  -5.2188],
        [  0.0000,  -3.7656,  -3.9062,  -4.5625,  -5.1562,  -4.3438,  -4.2188,  -3.1875,  -3.9688,  -3.6875,  -6.0938,  -3.2031,  -2.7656,  -3.9531,  -3.6406],
        [  0.0000,  -7.0625,  -6.4375,  -7.8750,  -8.0000,  -7.3750,  -6.7188,  -6.8750,  -7.1562,  -8.1250,  -9.6875,  -6.3750,  -6.6250,  -7.4062,  -7.3750],
        [  0.0000,  -6.5625,  -6.7500,  -7.5000,  -7.7812,  -7.1562,  -6.4375,  -6.7188,  -7.1875,  -7.0938,  -8.8750,  -6.5625,  -6.6875,  -7.4375,  -7.3125],
        [  0.0000,  -5.9062,  -5.5625,  -6.7812,  -7.2188,  -6.9062,  -6.4062,  -5.5312,  -6.7500,  -6.6250,  -8.5000,  -5.3438,  -5.4375,  -6.8125,  -6.5625],
        [  0.0000,  -7.2500,  -6.9375,  -8.3125,  -8.1250,  -8.3125,  -7.2812,  -7.1562,  -8.0000,  -8.7500, -10.1250,  -5.8125,  -6.7188,  -8.3750,  -8.6875],
        [  0.0000,  -7.5000,  -6.9375,  -8.1875,  -8.4375,  -8.1250,  -7.0938,  -6.4688,  -7.8125,  -7.8125, -10.1875,  -6.1875,  -6.0000,  -8.0625,  -8.3125],
        [  0.0000,  -7.4375,  -6.7812,  -8.2500,  -8.5000,  -7.6875,  -7.1250,  -7.2188,  -7.5625,  -8.4375, -10.1875,  -6.7812,  -6.9688,  -7.8125,  -7.7812],
        [  0.0000,  -7.0312,  -7.0000,  -8.1250,  -7.1250,  -7.4688,  -6.7500,  -6.9375,  -7.4062,  -8.1875,  -9.5000,  -7.1562,  -7.1875,  -7.8438,  -7.2500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9948],
        [0.9880],
        [0.9980],
        [0.9977],
        [0.9935],
        [0.9896],
        [0.9632],
        [0.9964],
        [0.9984],
        [0.9932],
        [0.9964],
        [0.9977],
        [0.9974],
        [0.9974]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0962, 0.9023, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0405, 0.5273, 0.4316, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0203, 0.3867, 0.4102, 0.1826, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0781, 0.5312, 0.2695, 0.0698, 0.0513, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0244, 0.4805, 0.2070, 0.0859, 0.0508, 0.1514, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0188, 0.1807, 0.0742, 0.0276, 0.0068, 0.0277, 0.6641, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0233, 0.1196, 0.0981, 0.0140, 0.0099, 0.0540, 0.5664, 0.1157, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0364, 0.2168, 0.0486, 0.0079, 0.0079, 0.0272, 0.6094, 0.0297, 0.0178, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0190, 0.1201, 0.0547, 0.0098, 0.0122, 0.0430, 0.2617, 0.1113, 0.1006, 0.2676, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0278, 0.0674, 0.0439, 0.0070, 0.0033, 0.0177, 0.4824, 0.0339, 0.0211, 0.2676, 0.0276, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0181, 0.0471, 0.0374, 0.0070, 0.0070, 0.0172, 0.1572, 0.0596, 0.0447, 0.2119, 0.0742, 0.3184, 0.0000, 0.0000, 0.0000],
        [0.0262, 0.0757, 0.0422, 0.0044, 0.0036, 0.0227, 0.1504, 0.0388, 0.0275, 0.1582, 0.0742, 0.1865, 0.1895, 0.0000, 0.0000],
        [0.0596, 0.1436, 0.0271, 0.0029, 0.0033, 0.0140, 0.2793, 0.0119, 0.0076, 0.0669, 0.1416, 0.1123, 0.1021, 0.0276, 0.0000],
        [0.0122, 0.0253, 0.0089, 0.0021, 0.0019, 0.0048, 0.0583, 0.0101, 0.0182, 0.0327, 0.0322, 0.0977, 0.1260, 0.0825, 0.4863]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0072,  0.0074,  0.0029,  ..., -0.0339, -0.0081, -0.0354],
        [-0.0399, -0.0137, -0.0025,  ...,  0.0069, -0.0035,  0.0021],
        [-0.0438, -0.0106,  0.0496,  ..., -0.0124, -0.0179, -0.0258],
        ...,
        [-0.0177, -0.0265, -0.0086,  ..., -0.0372, -0.0359, -0.0554],
        [-0.0214, -0.0195, -0.0221,  ..., -0.0042, -0.0175,  0.0351],
        [-0.0015,  0.0117,  0.0167,  ..., -0.0102,  0.0114, -0.0109]], device='cuda:0', requires_grad=True)
K: tensor([-1.8672, -1.4844, -0.8320, -0.1079, -0.8047, -1.7109, -1.8438,  1.1875,  0.4629, -2.1094,  0.3750, -1.6953,  1.7969, -2.4062, -0.1377,  2.0156,  2.0625, -0.1445,  0.6055, -0.1226,  0.6211, -1.3281,  0.2754, -1.4531, -1.0547,  0.6172, -0.3418,  2.0000, -0.0576,  1.6094, -1.2109, -1.8750,
        -1.2812, -1.0078,  1.0625, -1.6953,  2.6562,  0.4219, -1.3828,  0.6758, -2.2500,  1.0391,  1.1016,  2.2500,  0.7188, -0.2188, -2.0156, -0.6016,  2.2344,  0.6250,  0.9648, -0.3594, -1.1016, -2.0156, -1.7422, -1.9297,  2.3281, -1.1172, -1.0000,  1.4609, -0.4121, -0.3535,  0.8594, -1.3906],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0130, -0.0017,  0.0157,  ...,  0.0249, -0.0152, -0.0173],
        [ 0.0360, -0.0116,  0.0190,  ..., -0.0084,  0.0181,  0.0180],
        [-0.0203,  0.0137,  0.0456,  ...,  0.0191,  0.0255, -0.0081],
        ...,
        [ 0.0199,  0.0009, -0.0322,  ..., -0.0074,  0.0034, -0.0074],
        [-0.0081,  0.0403, -0.0106,  ...,  0.0148,  0.0049, -0.0287],
        [-0.0080, -0.0070, -0.0040,  ...,  0.0136,  0.0037, -0.0035]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.5742, -1.2656, -1.2266,  1.0000, -3.1562,  0.3887, -0.1147, -0.3984,  0.5273, -0.7344,  0.2871,  0.8867, -2.1250, -1.6250,  2.1094, -0.3047, -2.2188, -0.5078,  0.3125, -0.7344, -1.4375,  2.0938, -2.6719, -1.4297, -1.2734, -1.1562,  2.1250,  2.6406, -3.4219,  0.6562,  0.0496, -0.5859,
        -3.4062,  2.1719, -2.1719, -1.4922,  1.9062, -0.9023, -1.8750,  0.8281, -0.5586, -0.4414,  2.2500, -0.4355, -1.3438, -2.4531, -0.3281, -2.8125,  1.0938,  1.6250,  0.5312,  0.3047, -1.1328, -0.7344,  0.3164, -0.2158, -0.7383,  0.3477, -1.0391,  0.3926, -2.2969,  2.0938,  0.9766, -3.0000],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  2.2500,  2.1719,  1.3828,  1.5312,  1.6406,  4.0625,  2.4531,  2.4062,  3.0469,  2.5312,  3.3750,  3.7031,  3.3125,  5.5938],
        [ 0.0000,  2.5625,  2.3594,  1.8516,  1.7266,  2.1406,  4.0625,  3.2969,  2.9219,  3.8438,  3.1562,  4.4375,  5.1250,  4.1562,  5.9375],
        [ 0.0000,  2.9531,  3.0000,  2.2031,  2.1250,  2.7344,  4.2812,  3.7031,  3.6250,  5.3125,  4.6875,  6.0938,  6.0938,  5.2812,  7.5000],
        [ 0.0000,  1.9219,  1.2422, -0.1123, -0.4180,  0.9297,  3.0156,  1.7500,  1.0469,  2.9219,  1.7812,  2.9531,  3.3281,  2.3906,  5.2812],
        [ 0.0000,  2.9844,  2.1406,  1.2578,  0.7344,  1.8281,  4.3125,  3.0469,  2.4688,  3.9062,  4.1875,  4.5000,  4.5938,  3.9219,  7.2500],
        [ 0.0000,  2.2656,  1.3750,  0.3887, -1.0078,  0.3906,  3.5625,  1.5000,  0.6289,  2.4688, -0.8203,  3.1875,  3.7500,  1.8281,  6.0000],
        [ 0.0000,  1.6328,  1.4375, -0.5078, -0.8555,  0.8398,  3.1875,  1.6016,  1.0703,  3.0938,  2.2188,  3.5312,  3.5938,  2.6406,  6.1875],
        [ 0.0000,  1.7812,  0.2891, -1.5391, -1.5312, -0.2910,  2.8125, -0.2061, -0.7188,  1.3828,  2.1094,  1.9297,  1.8203,  0.5664,  4.8438],
        [ 0.0000,  1.8438,  1.0547, -0.6562, -0.4453,  0.8125,  2.6250,  1.7656,  1.6719,  2.6406,  2.2969,  3.1562,  3.7969,  3.1875,  5.9062],
        [ 0.0000,  0.8828,  0.4531, -1.3906, -2.1250, -0.4551,  2.8438,  0.1953, -0.2754,  2.2656, -0.0086,  2.8750,  2.5469,  1.2578,  5.9688],
        [ 0.0000,  0.9570,  0.7227, -0.9414, -0.9453, -0.0486,  2.1719,  1.1953,  0.9023,  2.4688,  1.4141,  2.8750,  3.2188,  2.4531,  4.6250],
        [ 0.0000,  1.0625,  0.4746, -1.7969, -1.9844, -0.1426,  1.7422,  0.3926,  0.0439,  1.7969,  1.0391,  1.9609,  1.9766,  1.5312,  5.1250],
        [ 0.0000,  0.8828, -0.7852, -3.0312, -2.9062, -1.4453,  1.5469, -1.6094, -2.0625,  0.1177,  0.8711,  0.6367,  0.5391, -0.7695,  3.6094],
        [ 0.0000,  0.7266, -0.3184, -1.7578, -1.8438, -0.9336,  1.5625, -0.1953,  0.3984,  0.9844,  0.9727,  2.0781,  2.3281,  1.9141,  3.6875]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4454],
        [0.1054],
        [0.0936],
        [0.2152],
        [0.0975],
        [0.3547],
        [0.0745],
        [0.0932],
        [0.0601],
        [0.1310],
        [0.0675],
        [0.0610],
        [0.0662],
        [0.0682]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0339,     0.9648,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0153,     0.9609,     0.0220,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0154,     0.8750,     0.0168,     0.0923,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0075,     0.7109,     0.0757,     0.0894,     0.1167,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0077,     0.3613,     0.0767,     0.0215,     0.1963,     0.3379,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0197,     0.2559,     0.3320,     0.0583,     0.0549,     0.1855,     0.0918,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0074,     0.0374,     0.0889,     0.0140,     0.3398,     0.0172,     0.0110,     0.4844,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0170,     0.1445,     0.0718,     0.0132,     0.0530,     0.0320,     0.0261,     0.6016,     0.0410,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0031,     0.1709,     0.0332,     0.0864,     0.0229,     0.0178,     0.0542,     0.3711,     0.0153,     0.2236,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0332,     0.0337,     0.0220,     0.0065,     0.0104,     0.0110,     0.0101,     0.2852,     0.0127,     0.5156,     0.0596,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0557,     0.2393,     0.0189,     0.0664,     0.0096,     0.0146,     0.1650,     0.0894,     0.0039,     0.1641,     0.1416,     0.0320,     0.0000,     0.0000,     0.0000],
        [    0.0228,     0.0349,     0.0039,     0.0009,     0.0889,     0.0022,     0.0065,     0.0145,     0.1289,     0.2080,     0.0723,     0.1533,     0.2617,     0.0000,     0.0000],
        [    0.0093,     0.0378,     0.0040,     0.0009,     0.0095,     0.0030,     0.0058,     0.0330,     0.0049,     0.2451,     0.0143,     0.0366,     0.5703,     0.0270,     0.0000],
        [    0.0396,     0.3223,     0.0229,     0.0430,     0.0294,     0.0135,     0.1611,     0.0286,     0.0039,     0.0172,     0.0532,     0.0166,     0.0481,     0.0052,     0.1953]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0226, -0.0393,  0.0066,  ...,  0.0213,  0.0302, -0.0298],
        [ 0.0082, -0.0497, -0.0128,  ...,  0.0186,  0.0075, -0.0027],
        [-0.0268, -0.0021, -0.0176,  ...,  0.0274, -0.0227, -0.0127],
        ...,
        [ 0.0335,  0.0151, -0.0351,  ..., -0.0077, -0.0046,  0.0180],
        [-0.0059,  0.0028,  0.0294,  ...,  0.0421, -0.0293,  0.0084],
        [-0.0351,  0.0507, -0.0477,  ...,  0.0004,  0.0215,  0.0384]], device='cuda:0', requires_grad=True)
K: tensor([ 0.9180, -1.3047, -0.1367,  0.0092, -0.6523,  0.3340,  0.2139, -0.5078, -0.8984, -2.4844, -1.9766, -0.6133,  0.4844, -0.8359, -1.0938,  0.5938,  0.7383,  1.3047, -2.4375,  1.0703,  0.9141, -0.9609, -2.2188,  0.6523,  0.8984, -0.0190, -0.6914,  1.0156, -0.6914, -1.7500, -0.7188,  0.9961,
        -0.9922,  2.1094,  1.9062,  0.9609,  0.4180, -0.8320, -0.7969, -1.8828, -0.5742, -1.4219, -1.6875,  0.1147,  0.8281, -0.5586, -1.0781,  0.9141, -1.2266, -1.5391,  0.7539,  1.3281,  0.0242, -0.2256,  1.1484,  0.4805,  0.4414, -3.0156, -0.7578,  0.7969, -0.1865, -0.7617,  1.1641, -1.0469],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0098, -0.0078, -0.0072,  ..., -0.0298, -0.0324, -0.0129],
        [ 0.0062,  0.0014, -0.0035,  ...,  0.0117, -0.0184,  0.0398],
        [ 0.0194, -0.0129, -0.0014,  ..., -0.0042, -0.0210, -0.0077],
        ...,
        [ 0.0317, -0.0450, -0.0173,  ...,  0.0212,  0.0203, -0.0009],
        [ 0.0057, -0.0022,  0.0187,  ...,  0.0164,  0.0071, -0.0065],
        [-0.0110, -0.0164, -0.0204,  ...,  0.0244, -0.0026, -0.0282]], device='cuda:0', requires_grad=True)
Q: tensor([-0.0479,  1.0312,  1.0078,  0.3867,  0.1943, -1.2344, -0.2695, -2.5625, -0.9141,  0.2695, -0.9805,  2.0781,  0.2207, -0.5703, -0.3027, -1.1797,  0.1338,  0.2871, -1.1797,  1.0234,  0.3965, -1.2812,  0.6758, -1.1328,  1.0078,  1.4141, -1.8984,  1.5625, -0.7695,  1.7578, -1.5156, -2.5469,
        -0.7578,  0.7383, -0.4277, -0.5156, -1.1172, -0.3730,  1.6094, -1.1172,  0.1245,  0.3027, -0.7500,  1.4297, -0.1963,  1.5703, -1.1172,  1.0625,  0.7344, -1.0078,  0.3945,  2.0000, -0.9492, -0.0140, -0.4277,  0.1099, -1.9219, -0.1865, -0.4980,  1.1328,  0.3301, -1.0234, -0.3438, -0.7734],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  3.3438,  2.1719,  2.0000,  2.7969,  3.0781,  1.9609,  2.5000,  1.8906,  1.5469,  2.5000,  2.1094,  2.2031,  1.7891,  1.5312],
        [ 0.0000,  4.1250,  0.3594,  3.4531,  1.3047,  1.5469,  3.8594,  0.5273, -1.4688, -1.5078,  2.2812, -1.6406,  0.5781, -2.1406,  0.1016],
        [ 0.0000,  4.0312,  0.0889,  1.7969,  2.5000,  0.5625,  3.2188,  0.3457,  0.1348, -0.9297,  1.8203, -1.5625, -0.0908, -0.5977,  0.7148],
        [ 0.0000,  4.5625,  2.3125,  2.4844,  2.7500,  3.6875,  2.5000,  4.4375,  1.1562,  2.9219,  2.1719,  2.2812,  3.7969,  0.6016,  1.1094],
        [ 0.0000,  3.8438,  2.2969,  1.0234,  3.2344,  3.7812,  2.5625,  3.8438,  1.8594,  2.2188,  1.4688,  1.6797,  1.9375,  1.0000,  1.5781],
        [ 0.0000,  2.5625,  2.8281,  1.0859,  1.0312,  2.2500,  1.5391,  4.8438,  0.7578,  2.6250,  0.8242,  2.2656,  2.8438, -0.1279,  2.0469],
        [ 0.0000,  1.6250,  2.4844,  0.6367,  3.8281,  0.8477,  0.4023,  4.1875,  5.0938,  5.1875,  2.8906,  3.8594,  3.9219,  5.2500,  3.7500],
        [ 0.0000,  2.1406,  1.4375, -0.2480,  1.1406,  0.6328,  0.4316,  3.5625,  0.8789,  4.2812,  1.1875,  2.0938,  4.1562,  1.3438,  1.9453],
        [ 0.0000,  4.0000,  2.3594,  3.3281,  1.9922,  1.7422,  2.8594,  4.7812,  1.5859,  4.2812,  4.4062,  3.3750,  5.4375,  2.2031,  3.0781],
        [ 0.0000,  0.0096, -0.4180, -1.6406, -1.1641, -1.1016, -1.1953,  2.1406, -0.9648,  2.7344,  0.5820,  2.1562,  3.2188,  0.0152,  0.8203],
        [ 0.0000,  1.4609, -1.0781,  0.1768, -1.7578, -1.3359,  1.0938,  0.4746, -2.6562,  1.0781,  0.9336, -0.5547,  3.2969, -1.7422,  0.0801],
        [ 0.0000,  0.4219, -1.7656, -3.2031,  1.3594, -2.3438, -1.2500, -0.4551,  1.7344,  2.2031,  1.1484,  1.9062,  2.4375,  3.9375,  2.0781],
        [ 0.0000,  1.3984, -0.8398, -2.3750,  0.0178, -1.1406, -0.4785,  1.2656, -0.6484,  3.2656,  0.4219,  1.3672,  4.0938,  1.0625,  1.2109],
        [ 0.0000,  2.0938, -0.5391,  0.0830, -0.2949, -1.0781,  1.4062, -0.3242, -2.3125, -0.8281,  0.2969, -0.8672,  0.1973, -2.0312,  1.6016]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0968],
        [0.0211],
        [0.0202],
        [0.0079],
        [0.0278],
        [0.0119],
        [0.0073],
        [0.0051],
        [0.0068],
        [0.0153],
        [0.0167],
        [0.0276],
        [0.0060],
        [0.0116]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.1074 the:0.0659,:0.2012 but:0.0913atoes:0.2988,:0.5391 a:0.0510iced:0.3926)
iced
------
		( the:0.0659,:0.2012 but:0.0913atoes:0.2988,:0.5391 a:0.0510iced:0.3926,:0.0972)
, and they are iced, and they are iced, and they
@ 6550 train 4.3451 , allloss: 4.3637, dt: 1670.78ms, fracRes: 0.6029, norm(attn): 0.1377, norm(output): 0.2344, norm(x): 0.6972, norm(y): 1.0078, norm:1.3482, tok/sec: 78449.47, flops:68.70, batch-reuse:1
@ 6551 train 4.6019 , allloss: 4.6218, dt: 1250.76ms, fracRes: 0.6038, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.6938, norm(y): 1.0077, norm:1.5211, tok/sec: 104793.52, flops:91.77, batch-reuse:1
@ 6552 train 4.5199 , allloss: 4.5385, dt: 1261.21ms, fracRes: 0.6020, norm(attn): 0.1387, norm(output): 0.2344, norm(x): 0.6911, norm(y): 1.0076, norm:1.4930, tok/sec: 103925.38, flops:91.01, batch-reuse:1
@ 6553 train 4.4228 , allloss: 4.4406, dt: 1268.25ms, fracRes: 0.6014, norm(attn): 0.1377, norm(output): 0.2354, norm(x): 0.6921, norm(y): 1.0077, norm:1.5367, tok/sec: 103349.06, flops:90.50, batch-reuse:1
@ 6554 train 4.3675 , allloss: 4.3858, dt: 1240.59ms, fracRes: 0.6016, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6913, norm(y): 1.0079, norm:1.4738, tok/sec: 105652.76, flops:92.52, batch-reuse:1
@ 6555 train 4.4440 , allloss: 4.4628, dt: 1273.43ms, fracRes: 0.6026, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6921, norm(y): 1.0079, norm:1.3192, tok/sec: 102928.46, flops:90.13, batch-reuse:1
@ 6556 train 4.3463 , allloss: 4.3662, dt: 1243.09ms, fracRes: 0.6029, norm(attn): 0.1387, norm(output): 0.2344, norm(x): 0.6947, norm(y): 1.0078, norm:1.3330, tok/sec: 105440.46, flops:92.33, batch-reuse:1
@ 6557 train 4.2988 , allloss: 4.3176, dt: 1286.15ms, fracRes: 0.6031, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.6936, norm(y): 1.0078, norm:1.2829, tok/sec: 101910.58, flops:89.24, batch-reuse:1
@ 6558 train 4.3268 , allloss: 4.3453, dt: 1275.52ms, fracRes: 0.6019, norm(attn): 0.1377, norm(output): 0.2344, norm(x): 0.6919, norm(y): 1.0077, norm:1.2077, tok/sec: 102759.92, flops:89.99, batch-reuse:1
@ 6559 train 4.3876 , allloss: 4.4061, dt: 1270.86ms, fracRes: 0.6015, norm(attn): 0.1377, norm(output): 0.2344, norm(x): 0.6934, norm(y): 1.0077, norm:1.2042, tok/sec: 103136.11, flops:90.31, batch-reuse:1
@ 6560 train 4.3176 , allloss: 4.3355, dt: 1251.55ms, fracRes: 0.6014, norm(attn): 0.1387, norm(output): 0.2354, norm(x): 0.6941, norm(y): 1.0078, norm:1.2384, tok/sec: 104727.54, flops:91.71, batch-reuse:1
@ 6561 train 4.3106 , allloss: 4.3293, dt: 1280.52ms, fracRes: 0.6025, norm(attn): 0.1377, norm(output): 0.2344, norm(x): 0.6959, norm(y): 1.0078, norm:1.2915, tok/sec: 102358.48, flops:89.63, batch-reuse:1
@ 6562 train 4.2737 , allloss: 4.2935, dt: 1279.41ms, fracRes: 0.6022, norm(attn): 0.1387, norm(output): 0.2354, norm(x): 0.6938, norm(y): 1.0079, norm:1.4109, tok/sec: 102447.06, flops:89.71, batch-reuse:1
@ 6563 train 4.2864 , allloss: 4.3043, dt: 1252.89ms, fracRes: 0.6027, norm(attn): 0.1367, norm(output): 0.2354, norm(x): 0.6954, norm(y): 1.0078, norm:1.1671, tok/sec: 104615.60, flops:91.61, batch-reuse:1
@ 6564 train 4.3298 , allloss: 4.3481, dt: 1255.70ms, fracRes: 0.6035, norm(attn): 0.1357, norm(output): 0.2354, norm(x): 0.6993, norm(y): 1.0078, norm:1.3495, tok/sec: 104381.73, flops:91.41, batch-reuse:1
@ 6565 train 4.2376 , allloss: 4.2562, dt: 1270.10ms, fracRes: 0.6032, norm(attn): 0.1387, norm(output): 0.2354, norm(x): 0.6988, norm(y): 1.0078, norm:1.1929, tok/sec: 103198.11, flops:90.37, batch-reuse:1
@ 6566 train 4.3259 , allloss: 4.3449, dt: 1289.01ms, fracRes: 0.6029, norm(attn): 0.1387, norm(output): 0.2354, norm(x): 0.6977, norm(y): 1.0078, norm:1.2960, tok/sec: 101684.08, flops:89.04, batch-reuse:1
@ 6567 train 4.3242 , allloss: 4.3419, dt: 1267.96ms, fracRes: 0.6045, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.6971, norm(y): 1.0079, norm:1.1954, tok/sec: 103372.67, flops:90.52, batch-reuse:1
@ 6568 train 4.2960 , allloss: 4.3138, dt: 1256.30ms, fracRes: 0.6047, norm(attn): 0.1357, norm(output): 0.2354, norm(x): 0.6992, norm(y): 1.0078, norm:1.2638, tok/sec: 104331.63, flops:91.36, batch-reuse:1
@ 6569 train 4.2876 , allloss: 4.3050, dt: 1283.45ms, fracRes: 0.6039, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6993, norm(y): 1.0078, norm:1.3018, tok/sec: 102124.94, flops:89.43, batch-reuse:1
@ 6570 train 4.3428 , allloss: 4.3616, dt: 1261.58ms, fracRes: 0.6040, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6999, norm(y): 1.0079, norm:1.3046, tok/sec: 103895.43, flops:90.98, batch-reuse:1
@ 6571 train 4.3169 , allloss: 4.3351, dt: 1262.33ms, fracRes: 0.6048, norm(attn): 0.1377, norm(output): 0.2354, norm(x): 0.7002, norm(y): 1.0078, norm:1.5550, tok/sec: 103833.46, flops:90.93, batch-reuse:1
@ 6572 train 4.3050 , allloss: 4.3233, dt: 1276.76ms, fracRes: 0.6042, norm(attn): 0.1377, norm(output): 0.2354, norm(x): 0.6984, norm(y): 1.0079, norm:1.2355, tok/sec: 102659.72, flops:89.90, batch-reuse:1
@ 6573 train 4.3657 , allloss: 4.3838, dt: 1274.84ms, fracRes: 0.6029, norm(attn): 0.1396, norm(output): 0.2344, norm(x): 0.6990, norm(y): 1.0079, norm:1.3590, tok/sec: 102814.71, flops:90.03, batch-reuse:1
@ 6574 train 4.3695 , allloss: 4.3876, dt: 1248.69ms, fracRes: 0.6024, norm(attn): 0.1396, norm(output): 0.2363, norm(x): 0.6985, norm(y): 1.0079, norm:1.7611, tok/sec: 104967.70, flops:91.92, batch-reuse:1
@ 6575 train 4.3553 , allloss: 4.3749, dt: 1270.47ms, fracRes: 0.6021, norm(attn): 0.1406, norm(output): 0.2373, norm(x): 0.7016, norm(y): 1.0077, norm:1.4746, tok/sec: 103168.11, flops:90.34, batch-reuse:1
@ 6576 train 4.3734 , allloss: 4.3911, dt: 1272.24ms, fracRes: 0.6015, norm(attn): 0.1387, norm(output): 0.2354, norm(x): 0.6959, norm(y): 1.0076, norm:1.3585, tok/sec: 103024.96, flops:90.22, batch-reuse:1
@ 6577 train 4.3174 , allloss: 4.3353, dt: 1274.37ms, fracRes: 0.6024, norm(attn): 0.1377, norm(output): 0.2344, norm(x): 0.6940, norm(y): 1.0078, norm:1.1684, tok/sec: 102852.76, flops:90.07, batch-reuse:1
@ 6578 train 4.3557 , allloss: 4.3748, dt: 1247.81ms, fracRes: 0.6025, norm(attn): 0.1377, norm(output): 0.2344, norm(x): 0.6947, norm(y): 1.0077, norm:1.3171, tok/sec: 105041.38, flops:91.98, batch-reuse:1
@ 6579 train 4.2823 , allloss: 4.3024, dt: 1266.36ms, fracRes: 0.6023, norm(attn): 0.1396, norm(output): 0.2344, norm(x): 0.6948, norm(y): 1.0078, norm:1.3249, tok/sec: 103503.11, flops:90.64, batch-reuse:1
@ 6580 train 4.3720 , allloss: 4.3903, dt: 1257.31ms, fracRes: 0.6034, norm(attn): 0.1377, norm(output): 0.2354, norm(x): 0.6936, norm(y): 1.0078, norm:1.3767, tok/sec: 104247.57, flops:91.29, batch-reuse:1
@ 6581 train 4.3722 , allloss: 4.3903, dt: 1287.28ms, fracRes: 0.6036, norm(attn): 0.1377, norm(output): 0.2344, norm(x): 0.6942, norm(y): 1.0077, norm:1.1520, tok/sec: 101820.62, flops:89.16, batch-reuse:1
@ 6582 train 4.2918 , allloss: 4.3099, dt: 1262.30ms, fracRes: 0.6035, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.6921, norm(y): 1.0079, norm:1.5689, tok/sec: 103836.07, flops:90.93, batch-reuse:1
@ 6583 train 4.3096 , allloss: 4.3283, dt: 1288.23ms, fracRes: 0.6027, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.6943, norm(y): 1.0078, norm:1.5111, tok/sec: 101745.94, flops:89.10, batch-reuse:1
@ 6584 train 4.2404 , allloss: 4.2586, dt: 1257.65ms, fracRes: 0.6030, norm(attn): 0.1377, norm(output): 0.2354, norm(x): 0.6936, norm(y): 1.0080, norm:1.3854, tok/sec: 104219.74, flops:91.26, batch-reuse:1
@ 6585 train 4.2832 , allloss: 4.3008, dt: 1277.96ms, fracRes: 0.6032, norm(attn): 0.1377, norm(output): 0.2354, norm(x): 0.6951, norm(y): 1.0078, norm:1.1378, tok/sec: 102563.65, flops:89.81, batch-reuse:1
@ 6586 train 4.3272 , allloss: 4.3448, dt: 1257.43ms, fracRes: 0.6031, norm(attn): 0.1377, norm(output): 0.2344, norm(x): 0.6962, norm(y): 1.0076, norm:1.2062, tok/sec: 104238.02, flops:91.28, batch-reuse:1
@ 6587 train 4.3730 , allloss: 4.3904, dt: 1265.00ms, fracRes: 0.6040, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.6956, norm(y): 1.0077, norm:1.2156, tok/sec: 103614.55, flops:90.73, batch-reuse:1
@ 6588 train 4.2833 , allloss: 4.3015, dt: 1244.66ms, fracRes: 0.6038, norm(attn): 0.1387, norm(output): 0.2344, norm(x): 0.6950, norm(y): 1.0078, norm:1.3031, tok/sec: 105307.89, flops:92.22, batch-reuse:1
@ 6589 train 4.3282 , allloss: 4.3461, dt: 1270.53ms, fracRes: 0.6020, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6943, norm(y): 1.0076, norm:1.1085, tok/sec: 103162.84, flops:90.34, batch-reuse:1
@ 6590 train 4.2824 , allloss: 4.2999, dt: 1260.37ms, fracRes: 0.6034, norm(attn): 0.1387, norm(output): 0.2344, norm(x): 0.6933, norm(y): 1.0078, norm:1.1277, tok/sec: 103994.46, flops:91.07, batch-reuse:1
@ 6591 train 4.3829 , allloss: 4.4006, dt: 1258.28ms, fracRes: 0.6037, norm(attn): 0.1377, norm(output): 0.2344, norm(x): 0.6955, norm(y): 1.0077, norm:1.2916, tok/sec: 104167.57, flops:91.22, batch-reuse:1
@ 6592 train 4.3038 , allloss: 4.3210, dt: 1253.69ms, fracRes: 0.6033, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.6921, norm(y): 1.0077, norm:1.2747, tok/sec: 104548.59, flops:91.55, batch-reuse:1
@ 6593 train 4.3309 , allloss: 4.3489, dt: 1275.55ms, fracRes: 0.6035, norm(attn): 0.1387, norm(output): 0.2354, norm(x): 0.6946, norm(y): 1.0078, norm:1.2305, tok/sec: 102757.33, flops:89.98, batch-reuse:1
@ 6594 train 4.2631 , allloss: 4.2851, dt: 1255.38ms, fracRes: 0.6046, norm(attn): 0.1387, norm(output): 0.2363, norm(x): 0.6949, norm(y): 1.0074, norm:1.5082, tok/sec: 104408.00, flops:91.43, batch-reuse:1
@ 6595 train 4.1609 , allloss: 4.1801, dt: 1252.88ms, fracRes: 0.6045, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6945, norm(y): 1.0079, norm:1.4466, tok/sec: 104616.22, flops:91.61, batch-reuse:1
@ 6596 train 4.4013 , allloss: 4.4196, dt: 1255.20ms, fracRes: 0.6042, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6938, norm(y): 1.0078, norm:1.3886, tok/sec: 104422.85, flops:91.44, batch-reuse:1
@ 6597 train 4.3451 , allloss: 4.3636, dt: 1266.50ms, fracRes: 0.6030, norm(attn): 0.1377, norm(output): 0.2344, norm(x): 0.6931, norm(y): 1.0076, norm:1.3333, tok/sec: 103491.14, flops:90.63, batch-reuse:1
@ 6598 train 4.3336 , allloss: 4.3519, dt: 1305.34ms, fracRes: 0.6012, norm(attn): 0.1377, norm(output): 0.2354, norm(x): 0.6917, norm(y): 1.0076, norm:1.3082, tok/sec: 100412.28, flops:87.93, batch-reuse:1
@ 6599 train 4.3411 , allloss: 4.3593, dt: 1284.34ms, fracRes: 0.6017, norm(attn): 0.1377, norm(output): 0.2354, norm(x): 0.6912, norm(y): 1.0077, norm:1.1382, tok/sec: 102054.04, flops:89.37, batch-reuse:1
@ 6600 train 4.3349 , allloss: 4.3527, dt: 1311.50ms, fracRes: 0.6021, norm(attn): 0.1387, norm(output): 0.2354, norm(x): 0.6930, norm(y): 1.0077, norm:1.2810, tok/sec: 99940.16, flops:87.52, batch-reuse:1
@ 6601 train 4.3225 , allloss: 4.3442, dt: 1280.49ms, fracRes: 0.6030, norm(attn): 0.1387, norm(output): 0.2344, norm(x): 0.6944, norm(y): 1.0078, norm:1.2513, tok/sec: 102360.78, flops:89.64, batch-reuse:1
@ 6602 train 4.3665 , allloss: 4.3841, dt: 1268.93ms, fracRes: 0.6030, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6940, norm(y): 1.0077, norm:1.2335, tok/sec: 103293.47, flops:90.45, batch-reuse:1
@ 6603 train 4.2937 , allloss: 4.3113, dt: 1263.03ms, fracRes: 0.6033, norm(attn): 0.1387, norm(output): 0.2344, norm(x): 0.6946, norm(y): 1.0080, norm:1.2623, tok/sec: 103775.64, flops:90.87, batch-reuse:1
@ 6604 train 4.3136 , allloss: 4.3320, dt: 1278.38ms, fracRes: 0.6031, norm(attn): 0.1387, norm(output): 0.2344, norm(x): 0.6953, norm(y): 1.0079, norm:1.2312, tok/sec: 102529.60, flops:89.78, batch-reuse:1
@ 6605 train 4.3257 , allloss: 4.3433, dt: 1288.01ms, fracRes: 0.6038, norm(attn): 0.1377, norm(output): 0.2344, norm(x): 0.6951, norm(y): 1.0079, norm:1.1895, tok/sec: 101763.29, flops:89.11, batch-reuse:1
@ 6606 train 4.3027 , allloss: 4.3201, dt: 1275.67ms, fracRes: 0.6039, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.6944, norm(y): 1.0078, norm:1.3291, tok/sec: 102747.36, flops:89.97, batch-reuse:1
@ 6607 train 4.2441 , allloss: 4.2622, dt: 1259.29ms, fracRes: 0.6033, norm(attn): 0.1377, norm(output): 0.2344, norm(x): 0.6968, norm(y): 1.0078, norm:1.2714, tok/sec: 104083.73, flops:91.14, batch-reuse:1
@ 6608 train 4.2168 , allloss: 4.2339, dt: 1253.14ms, fracRes: 0.6026, norm(attn): 0.1377, norm(output): 0.2344, norm(x): 0.6940, norm(y): 1.0078, norm:1.0850, tok/sec: 104594.98, flops:91.59, batch-reuse:1
@ 6609 train 4.2747 , allloss: 4.2921, dt: 1272.50ms, fracRes: 0.6033, norm(attn): 0.1367, norm(output): 0.2354, norm(x): 0.6952, norm(y): 1.0078, norm:1.2653, tok/sec: 103003.86, flops:90.20, batch-reuse:1
@ 6610 train 4.1910 , allloss: 4.2088, dt: 1278.56ms, fracRes: 0.6040, norm(attn): 0.1387, norm(output): 0.2344, norm(x): 0.6961, norm(y): 1.0079, norm:1.1920, tok/sec: 102515.47, flops:89.77, batch-reuse:1
@ 6611 train 4.3407 , allloss: 4.3586, dt: 1269.24ms, fracRes: 0.6036, norm(attn): 0.1377, norm(output): 0.2344, norm(x): 0.6951, norm(y): 1.0078, norm:1.2680, tok/sec: 103268.16, flops:90.43, batch-reuse:1
@ 6612 train 4.3132 , allloss: 4.3309, dt: 1281.90ms, fracRes: 0.6027, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6953, norm(y): 1.0080, norm:1.2968, tok/sec: 102247.85, flops:89.54, batch-reuse:1
@ 6613 train 4.2442 , allloss: 4.2616, dt: 1270.76ms, fracRes: 0.6022, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6958, norm(y): 1.0076, norm:1.3860, tok/sec: 103144.84, flops:90.32, batch-reuse:1
@ 6614 train 4.3159 , allloss: 4.3330, dt: 1279.69ms, fracRes: 0.6029, norm(attn): 0.1387, norm(output): 0.2354, norm(x): 0.6958, norm(y): 1.0076, norm:1.4457, tok/sec: 102425.03, flops:89.69, batch-reuse:1
@ 6615 train 4.2511 , allloss: 4.2683, dt: 1264.37ms, fracRes: 0.6031, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.6963, norm(y): 1.0077, norm:1.3170, tok/sec: 103665.86, flops:90.78, batch-reuse:1
@ 6616 train 4.2351 , allloss: 4.2529, dt: 1289.09ms, fracRes: 0.6032, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.6947, norm(y): 1.0078, norm:1.3677, tok/sec: 101678.29, flops:89.04, batch-reuse:1
@ 6617 train 4.3821 , allloss: 4.4001, dt: 1264.73ms, fracRes: 0.6027, norm(attn): 0.1377, norm(output): 0.2344, norm(x): 0.6919, norm(y): 1.0076, norm:1.3498, tok/sec: 103636.19, flops:90.75, batch-reuse:1
@ 6618 train 4.2477 , allloss: 4.2651, dt: 1262.75ms, fracRes: 0.6030, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.6940, norm(y): 1.0078, norm:1.2852, tok/sec: 103799.06, flops:90.90, batch-reuse:1
@ 6619 train 4.2341 , allloss: 4.2520, dt: 1276.46ms, fracRes: 0.6027, norm(attn): 0.1377, norm(output): 0.2354, norm(x): 0.6949, norm(y): 1.0077, norm:1.2209, tok/sec: 102684.22, flops:89.92, batch-reuse:1
@ 6620 train 4.2894 , allloss: 4.3071, dt: 1267.94ms, fracRes: 0.6023, norm(attn): 0.1377, norm(output): 0.2354, norm(x): 0.6949, norm(y): 1.0078, norm:1.3044, tok/sec: 103373.95, flops:90.52, batch-reuse:1
@ 6621 train 4.2766 , allloss: 4.2940, dt: 1266.47ms, fracRes: 0.6025, norm(attn): 0.1377, norm(output): 0.2354, norm(x): 0.6954, norm(y): 1.0078, norm:1.1679, tok/sec: 103493.83, flops:90.63, batch-reuse:1
@ 6622 train 4.2738 , allloss: 4.2913, dt: 1266.15ms, fracRes: 0.6028, norm(attn): 0.1387, norm(output): 0.2354, norm(x): 0.6959, norm(y): 1.0077, norm:1.2764, tok/sec: 103520.18, flops:90.65, batch-reuse:1
@ 6623 train 4.2766 , allloss: 4.2937, dt: 1270.92ms, fracRes: 0.6025, norm(attn): 0.1387, norm(output): 0.2354, norm(x): 0.6948, norm(y): 1.0078, norm:1.1728, tok/sec: 103131.49, flops:90.31, batch-reuse:1
@ 6624 train 4.3363 , allloss: 4.3537, dt: 1256.16ms, fracRes: 0.6026, norm(attn): 0.1387, norm(output): 0.2344, norm(x): 0.6952, norm(y): 1.0079, norm:1.3936, tok/sec: 104343.59, flops:91.37, batch-reuse:1
@ 6625 train 4.2368 , allloss: 4.2540, dt: 1267.00ms, fracRes: 0.6032, norm(attn): 0.1377, norm(output): 0.2344, norm(x): 0.6954, norm(y): 1.0079, norm:1.1366, tok/sec: 103450.56, flops:90.59, batch-reuse:1
@ 6626 train 4.3140 , allloss: 4.3323, dt: 1270.31ms, fracRes: 0.6033, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.6964, norm(y): 1.0077, norm:1.2474, tok/sec: 103181.02, flops:90.35, batch-reuse:1
@ 6627 train 4.2256 , allloss: 4.2439, dt: 1264.97ms, fracRes: 0.6029, norm(attn): 0.1387, norm(output): 0.2354, norm(x): 0.6970, norm(y): 1.0078, norm:1.2923, tok/sec: 103616.88, flops:90.74, batch-reuse:1
@ 6628 train 4.2067 , allloss: 4.2248, dt: 1270.93ms, fracRes: 0.6031, norm(attn): 0.1387, norm(output): 0.2344, norm(x): 0.6954, norm(y): 1.0078, norm:1.0876, tok/sec: 103130.54, flops:90.31, batch-reuse:1
@ 6629 train 4.2557 , allloss: 4.2735, dt: 1268.60ms, fracRes: 0.6031, norm(attn): 0.1377, norm(output): 0.2354, norm(x): 0.6934, norm(y): 1.0078, norm:1.1650, tok/sec: 103319.92, flops:90.48, batch-reuse:1
@ 6630 train 4.2531 , allloss: 4.2713, dt: 1285.03ms, fracRes: 0.6034, norm(attn): 0.1377, norm(output): 0.2354, norm(x): 0.6944, norm(y): 1.0078, norm:1.1723, tok/sec: 101998.96, flops:89.32, batch-reuse:1
@ 6631 train 4.2645 , allloss: 4.2818, dt: 1314.83ms, fracRes: 0.6033, norm(attn): 0.1377, norm(output): 0.2344, norm(x): 0.6937, norm(y): 1.0078, norm:1.2724, tok/sec: 99687.48, flops:87.29, batch-reuse:1
@ 6632 train 4.2048 , allloss: 4.2238, dt: 1266.36ms, fracRes: 0.6028, norm(attn): 0.1396, norm(output): 0.2344, norm(x): 0.6921, norm(y): 1.0079, norm:1.5351, tok/sec: 103503.30, flops:90.64, batch-reuse:1
@ 6633 train 4.2200 , allloss: 4.2378, dt: 1252.31ms, fracRes: 0.6019, norm(attn): 0.1396, norm(output): 0.2344, norm(x): 0.6920, norm(y): 1.0078, norm:1.3238, tok/sec: 104664.00, flops:91.65, batch-reuse:1
@ 6634 train 4.2397 , allloss: 4.2572, dt: 1254.56ms, fracRes: 0.6020, norm(attn): 0.1377, norm(output): 0.2344, norm(x): 0.6915, norm(y): 1.0078, norm:1.0924, tok/sec: 104476.61, flops:91.49, batch-reuse:1
@ 6635 train 4.3020 , allloss: 4.3203, dt: 1268.13ms, fracRes: 0.6026, norm(attn): 0.1377, norm(output): 0.2344, norm(x): 0.6895, norm(y): 1.0078, norm:1.2352, tok/sec: 103358.31, flops:90.51, batch-reuse:1
@ 6636 train 4.2563 , allloss: 4.2740, dt: 1258.61ms, fracRes: 0.6024, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.6858, norm(y): 1.0078, norm:1.4307, tok/sec: 104140.28, flops:91.19, batch-reuse:1
@ 6637 train 4.2533 , allloss: 4.2717, dt: 1270.46ms, fracRes: 0.6020, norm(attn): 0.1387, norm(output): 0.2344, norm(x): 0.6867, norm(y): 1.0078, norm:1.4351, tok/sec: 103169.19, flops:90.34, batch-reuse:1
@ 6638 train 4.2759 , allloss: 4.2943, dt: 1275.64ms, fracRes: 0.6020, norm(attn): 0.1387, norm(output): 0.2344, norm(x): 0.6855, norm(y): 1.0077, norm:1.5254, tok/sec: 102749.84, flops:89.98, batch-reuse:1
@ 6639 train 4.1027 , allloss: 4.1201, dt: 1288.85ms, fracRes: 0.6024, norm(attn): 0.1387, norm(output): 0.2344, norm(x): 0.6881, norm(y): 1.0078, norm:1.3592, tok/sec: 101697.19, flops:89.05, batch-reuse:1
@ 6640 train 4.4210 , allloss: 4.4389, dt: 1302.25ms, fracRes: 0.6037, norm(attn): 0.1377, norm(output): 0.2334, norm(x): 0.6918, norm(y): 1.0077, norm:1.4306, tok/sec: 100650.14, flops:88.14, batch-reuse:1
@ 6641 train 4.2875 , allloss: 4.3068, dt: 1265.09ms, fracRes: 0.6037, norm(attn): 0.1396, norm(output): 0.2344, norm(x): 0.6923, norm(y): 1.0075, norm:1.3624, tok/sec: 103606.70, flops:90.73, batch-reuse:1
@ 6642 train 4.2821 , allloss: 4.3005, dt: 1259.02ms, fracRes: 0.6027, norm(attn): 0.1396, norm(output): 0.2344, norm(x): 0.6900, norm(y): 1.0077, norm:1.1975, tok/sec: 104106.52, flops:91.16, batch-reuse:1
@ 6643 train 4.3606 , allloss: 4.3782, dt: 1276.66ms, fracRes: 0.6019, norm(attn): 0.1387, norm(output): 0.2344, norm(x): 0.6895, norm(y): 1.0075, norm:1.2828, tok/sec: 102667.90, flops:89.90, batch-reuse:1
@ 6644 train 4.3132 , allloss: 4.3311, dt: 1270.63ms, fracRes: 0.6020, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6885, norm(y): 1.0076, norm:1.2638, tok/sec: 103154.94, flops:90.33, batch-reuse:1
@ 6645 train 4.2257 , allloss: 4.2434, dt: 1252.42ms, fracRes: 0.6018, norm(attn): 0.1387, norm(output): 0.2354, norm(x): 0.6884, norm(y): 1.0077, norm:1.3730, tok/sec: 104654.85, flops:91.64, batch-reuse:1
@ 6646 train 4.1993 , allloss: 4.2171, dt: 1255.86ms, fracRes: 0.6022, norm(attn): 0.1387, norm(output): 0.2344, norm(x): 0.6885, norm(y): 1.0077, norm:1.4109, tok/sec: 104368.67, flops:91.39, batch-reuse:1
@ 6647 train 4.1465 , allloss: 4.1654, dt: 1250.36ms, fracRes: 0.6024, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6897, norm(y): 1.0077, norm:1.3768, tok/sec: 104827.83, flops:91.80, batch-reuse:1
@ 6648 train 4.3225 , allloss: 4.3406, dt: 1272.59ms, fracRes: 0.6025, norm(attn): 0.1387, norm(output): 0.2344, norm(x): 0.6888, norm(y): 1.0076, norm:1.2116, tok/sec: 102996.51, flops:90.19, batch-reuse:1
@ 6649 train 4.2564 , allloss: 4.2736, dt: 1270.16ms, fracRes: 0.6031, norm(attn): 0.1377, norm(output): 0.2344, norm(x): 0.6883, norm(y): 1.0077, norm:1.2277, tok/sec: 103193.51, flops:90.37, batch-reuse:1
@ 6650 train 3.9431 , allloss: 3.9640, dt: 1257.00ms, fracRes: 0.6041, norm(attn): 0.1387, norm(output): 0.2344, norm(x): 0.6923, norm(y): 1.0079, norm:2.3734, tok/sec: 104273.33, flops:91.31, batch-reuse:1
@ 6651 train 4.1302 , allloss: 4.1505, dt: 1278.82ms, fracRes: 0.6017, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6923, norm(y): 1.0079, norm:2.5958, tok/sec: 102494.77, flops:89.75, batch-reuse:1
@ 6652 train 4.2744 , allloss: 4.2934, dt: 1259.04ms, fracRes: 0.6014, norm(attn): 0.1387, norm(output): 0.2344, norm(x): 0.6876, norm(y): 1.0077, norm:1.6939, tok/sec: 104104.53, flops:91.16, batch-reuse:1
@ 6653 train 4.2458 , allloss: 4.2647, dt: 1260.46ms, fracRes: 0.6022, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.6882, norm(y): 1.0078, norm:1.3473, tok/sec: 103987.44, flops:91.06, batch-reuse:1
@ 6654 train 4.2425 , allloss: 4.2606, dt: 1265.66ms, fracRes: 0.6019, norm(attn): 0.1387, norm(output): 0.2344, norm(x): 0.6896, norm(y): 1.0077, norm:1.4735, tok/sec: 103560.15, flops:90.69, batch-reuse:1
@ 6655 train 4.1842 , allloss: 4.2024, dt: 1275.75ms, fracRes: 0.6026, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6936, norm(y): 1.0078, norm:1.4045, tok/sec: 102741.43, flops:89.97, batch-reuse:1
@ 6656 train 4.2007 , allloss: 4.2194, dt: 1280.94ms, fracRes: 0.6034, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6960, norm(y): 1.0079, norm:1.3346, tok/sec: 102324.72, flops:89.60, batch-reuse:1
@ 6657 train 4.3722 , allloss: 4.3897, dt: 1266.90ms, fracRes: 0.6038, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6934, norm(y): 1.0075, norm:1.6124, tok/sec: 103458.71, flops:90.60, batch-reuse:1
@ 6658 train 4.2167 , allloss: 4.2345, dt: 1252.20ms, fracRes: 0.6052, norm(attn): 0.1387, norm(output): 0.2354, norm(x): 0.6959, norm(y): 1.0078, norm:1.6432, tok/sec: 104673.72, flops:91.66, batch-reuse:1
@ 6659 train 4.2240 , allloss: 4.2421, dt: 1258.94ms, fracRes: 0.6047, norm(attn): 0.1377, norm(output): 0.2344, norm(x): 0.6965, norm(y): 1.0077, norm:1.9580, tok/sec: 104113.04, flops:91.17, batch-reuse:1
@ 6660 train 4.1829 , allloss: 4.2008, dt: 1257.77ms, fracRes: 0.6041, norm(attn): 0.1377, norm(output): 0.2344, norm(x): 0.6959, norm(y): 1.0077, norm:1.3507, tok/sec: 104209.69, flops:91.25, batch-reuse:1
@ 6661 train 4.2289 , allloss: 4.2472, dt: 1249.77ms, fracRes: 0.6023, norm(attn): 0.1387, norm(output): 0.2344, norm(x): 0.6929, norm(y): 1.0077, norm:1.8173, tok/sec: 104876.50, flops:91.84, batch-reuse:1
@ 6662 train 4.1329 , allloss: 4.1515, dt: 1259.66ms, fracRes: 0.6016, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6941, norm(y): 1.0077, norm:1.7148, tok/sec: 104053.40, flops:91.12, batch-reuse:1
@ 6663 train 4.2277 , allloss: 4.2461, dt: 1251.45ms, fracRes: 0.6023, norm(attn): 0.1387, norm(output): 0.2354, norm(x): 0.6953, norm(y): 1.0077, norm:1.1953, tok/sec: 104736.48, flops:91.72, batch-reuse:1
@ 6664 train 4.1937 , allloss: 4.2106, dt: 1275.16ms, fracRes: 0.6023, norm(attn): 0.1387, norm(output): 0.2363, norm(x): 0.6983, norm(y): 1.0077, norm:1.3990, tok/sec: 102788.63, flops:90.01, batch-reuse:1
@ 6665 train 4.2025 , allloss: 4.2195, dt: 1273.35ms, fracRes: 0.6034, norm(attn): 0.1377, norm(output): 0.2344, norm(x): 0.6996, norm(y): 1.0077, norm:1.2955, tok/sec: 102934.57, flops:90.14, batch-reuse:1
@ 6666 train 4.1492 , allloss: 4.1659, dt: 1272.23ms, fracRes: 0.6036, norm(attn): 0.1387, norm(output): 0.2354, norm(x): 0.7005, norm(y): 1.0079, norm:1.3347, tok/sec: 103025.56, flops:90.22, batch-reuse:1
@ 6667 train 4.1846 , allloss: 4.2018, dt: 1291.74ms, fracRes: 0.6038, norm(attn): 0.1387, norm(output): 0.2354, norm(x): 0.7012, norm(y): 1.0077, norm:1.4220, tok/sec: 101469.27, flops:88.86, batch-reuse:1
@ 6668 train 4.0948 , allloss: 4.1124, dt: 1273.22ms, fracRes: 0.6030, norm(attn): 0.1377, norm(output): 0.2344, norm(x): 0.6994, norm(y): 1.0078, norm:1.5821, tok/sec: 102945.32, flops:90.15, batch-reuse:1
@ 6669 train 4.5447 , allloss: 4.5629, dt: 1280.28ms, fracRes: 0.6032, norm(attn): 0.1377, norm(output): 0.2354, norm(x): 0.6967, norm(y): 1.0074, norm:1.1778, tok/sec: 102377.48, flops:89.65, batch-reuse:1
@ 6670 train 4.1292 , allloss: 4.1476, dt: 1305.29ms, fracRes: 0.6029, norm(attn): 0.1387, norm(output): 0.2344, norm(x): 0.6962, norm(y): 1.0078, norm:1.4701, tok/sec: 100416.35, flops:87.93, batch-reuse:1
@ 6671 train 4.1514 , allloss: 4.1692, dt: 1256.99ms, fracRes: 0.6021, norm(attn): 0.1396, norm(output): 0.2344, norm(x): 0.6941, norm(y): 1.0076, norm:1.3488, tok/sec: 104274.30, flops:91.31, batch-reuse:1
@ 6672 train 4.3105 , allloss: 4.3278, dt: 1266.85ms, fracRes: 0.6015, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6909, norm(y): 1.0075, norm:1.4056, tok/sec: 103463.15, flops:90.60, batch-reuse:1
@ 6673 train 4.1421 , allloss: 4.1601, dt: 1293.82ms, fracRes: 0.6015, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6940, norm(y): 1.0077, norm:1.2486, tok/sec: 101306.39, flops:88.71, batch-reuse:1
@ 6674 train 4.1165 , allloss: 4.1347, dt: 1273.57ms, fracRes: 0.6018, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6922, norm(y): 1.0078, norm:1.3569, tok/sec: 102917.09, flops:90.12, batch-reuse:1
@ 6675 train 4.1622 , allloss: 4.1803, dt: 1259.71ms, fracRes: 0.6019, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6947, norm(y): 1.0076, norm:1.1851, tok/sec: 104048.94, flops:91.11, batch-reuse:1
@ 6676 train 4.1586 , allloss: 4.1758, dt: 1272.39ms, fracRes: 0.6029, norm(attn): 0.1387, norm(output): 0.2354, norm(x): 0.6944, norm(y): 1.0077, norm:1.3857, tok/sec: 103012.16, flops:90.21, batch-reuse:1
@ 6677 train 4.3642 , allloss: 4.3822, dt: 1259.04ms, fracRes: 0.6024, norm(attn): 0.1387, norm(output): 0.2354, norm(x): 0.6931, norm(y): 1.0075, norm:1.4227, tok/sec: 104104.96, flops:91.16, batch-reuse:1
@ 6678 train 4.2639 , allloss: 4.2820, dt: 1277.40ms, fracRes: 0.6032, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.6923, norm(y): 1.0077, norm:1.3411, tok/sec: 102608.13, flops:89.85, batch-reuse:1
@ 6679 train 4.3533 , allloss: 4.3741, dt: 1265.45ms, fracRes: 0.6039, norm(attn): 0.1377, norm(output): 0.2344, norm(x): 0.6938, norm(y): 1.0077, norm:1.7172, tok/sec: 103577.31, flops:90.70, batch-reuse:1
@ 6680 train 4.1956 , allloss: 4.2141, dt: 1251.73ms, fracRes: 0.6014, norm(attn): 0.1377, norm(output): 0.2354, norm(x): 0.6909, norm(y): 1.0077, norm:1.3294, tok/sec: 104713.06, flops:91.70, batch-reuse:1
@ 6681 train 4.1427 , allloss: 4.1615, dt: 1272.56ms, fracRes: 0.6024, norm(attn): 0.1377, norm(output): 0.2344, norm(x): 0.6933, norm(y): 1.0078, norm:1.3283, tok/sec: 102998.44, flops:90.19, batch-reuse:1
@ 6682 train 4.2729 , allloss: 4.2905, dt: 1240.69ms, fracRes: 0.6028, norm(attn): 0.1377, norm(output): 0.2344, norm(x): 0.6943, norm(y): 1.0078, norm:1.3300, tok/sec: 105644.16, flops:92.51, batch-reuse:1
@ 6683 train 4.1807 , allloss: 4.1984, dt: 1257.99ms, fracRes: 0.6032, norm(attn): 0.1387, norm(output): 0.2354, norm(x): 0.6941, norm(y): 1.0079, norm:1.4176, tok/sec: 104191.91, flops:91.24, batch-reuse:1
@ 6684 train 4.2316 , allloss: 4.2492, dt: 1261.70ms, fracRes: 0.6034, norm(attn): 0.1367, norm(output): 0.2344, norm(x): 0.6925, norm(y): 1.0079, norm:1.4943, tok/sec: 103885.03, flops:90.97, batch-reuse:1
@ 6685 train 4.1099 , allloss: 4.1291, dt: 1293.55ms, fracRes: 0.6044, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6987, norm(y): 1.0079, norm:1.4100, tok/sec: 101327.71, flops:88.73, batch-reuse:1
@ 6686 train 4.1888 , allloss: 4.2073, dt: 1233.60ms, fracRes: 0.6035, norm(attn): 0.1387, norm(output): 0.2354, norm(x): 0.6961, norm(y): 1.0079, norm:1.5831, tok/sec: 106252.00, flops:93.04, batch-reuse:1
@ 6687 train 4.2872 , allloss: 4.3056, dt: 1273.57ms, fracRes: 0.6032, norm(attn): 0.1387, norm(output): 0.2344, norm(x): 0.6915, norm(y): 1.0078, norm:1.3709, tok/sec: 102916.61, flops:90.12, batch-reuse:1
@ 6688 train 4.2007 , allloss: 4.2192, dt: 1268.07ms, fracRes: 0.6019, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6952, norm(y): 1.0077, norm:1.2821, tok/sec: 103363.48, flops:90.51, batch-reuse:1
@ 6689 train 4.1900 , allloss: 4.2071, dt: 1258.30ms, fracRes: 0.6021, norm(attn): 0.1377, norm(output): 0.2354, norm(x): 0.6947, norm(y): 1.0076, norm:1.4374, tok/sec: 104165.89, flops:91.22, batch-reuse:1
@ 6690 train 4.2276 , allloss: 4.2451, dt: 1260.88ms, fracRes: 0.6024, norm(attn): 0.1377, norm(output): 0.2354, norm(x): 0.6948, norm(y): 1.0078, norm:1.4205, tok/sec: 103952.83, flops:91.03, batch-reuse:1
@ 6691 train 4.2231 , allloss: 4.2410, dt: 1274.29ms, fracRes: 0.6029, norm(attn): 0.1387, norm(output): 0.2354, norm(x): 0.6932, norm(y): 1.0078, norm:1.1810, tok/sec: 102859.15, flops:90.07, batch-reuse:1
@ 6692 train 4.2519 , allloss: 4.2699, dt: 1266.93ms, fracRes: 0.6033, norm(attn): 0.1387, norm(output): 0.2354, norm(x): 0.6940, norm(y): 1.0077, norm:1.2069, tok/sec: 103456.75, flops:90.60, batch-reuse:1
@ 6693 train 4.0746 , allloss: 4.0928, dt: 1278.98ms, fracRes: 0.6033, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6958, norm(y): 1.0078, norm:1.2317, tok/sec: 102481.53, flops:89.74, batch-reuse:1
@ 6694 train 4.1646 , allloss: 4.1821, dt: 1261.77ms, fracRes: 0.6034, norm(attn): 0.1387, norm(output): 0.2363, norm(x): 0.6952, norm(y): 1.0076, norm:1.2922, tok/sec: 103879.12, flops:90.97, batch-reuse:1
@ 6695 train 4.1172 , allloss: 4.1352, dt: 1279.83ms, fracRes: 0.6044, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6969, norm(y): 1.0077, norm:1.3382, tok/sec: 102413.22, flops:89.68, batch-reuse:1
@ 6696 train 4.1256 , allloss: 4.1431, dt: 1275.35ms, fracRes: 0.6035, norm(attn): 0.1396, norm(output): 0.2363, norm(x): 0.6962, norm(y): 1.0077, norm:1.2853, tok/sec: 102773.56, flops:90.00, batch-reuse:1
@ 6697 train 4.1216 , allloss: 4.1399, dt: 1271.81ms, fracRes: 0.6028, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6954, norm(y): 1.0078, norm:1.2716, tok/sec: 103059.55, flops:90.25, batch-reuse:1
@ 6698 train 4.2102 , allloss: 4.2284, dt: 1256.01ms, fracRes: 0.6024, norm(attn): 0.1387, norm(output): 0.2354, norm(x): 0.6960, norm(y): 1.0077, norm:1.2251, tok/sec: 104355.85, flops:91.38, batch-reuse:1
@ 6699 train 4.1769 , allloss: 4.1943, dt: 1251.35ms, fracRes: 0.6024, norm(attn): 0.1387, norm(output): 0.2354, norm(x): 0.6953, norm(y): 1.0076, norm:1.1864, tok/sec: 104744.72, flops:91.72, batch-reuse:1
@ 6700 train 4.2791 , allloss: 4.2972, dt: 1269.71ms, fracRes: 0.6032, norm(attn): 0.1377, norm(output): 0.2354, norm(x): 0.6967, norm(y): 1.0077, norm:1.2161, tok/sec: 103229.79, flops:90.40, batch-reuse:1
@ 6701 train 4.3652 , allloss: 4.3835, dt: 1248.69ms, fracRes: 0.6030, norm(attn): 0.1396, norm(output): 0.2363, norm(x): 0.6949, norm(y): 1.0076, norm:1.0264, tok/sec: 104967.66, flops:91.92, batch-reuse:1
@ 6702 train 4.3205 , allloss: 4.3387, dt: 1273.27ms, fracRes: 0.6028, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6959, norm(y): 1.0077, norm:1.1578, tok/sec: 102941.60, flops:90.14, batch-reuse:1
@ 6703 train 4.3468 , allloss: 4.3643, dt: 1280.98ms, fracRes: 0.6032, norm(attn): 0.1377, norm(output): 0.2354, norm(x): 0.6970, norm(y): 1.0076, norm:1.1477, tok/sec: 102321.50, flops:89.60, batch-reuse:1
@ 6704 train 4.3930 , allloss: 4.4109, dt: 1258.54ms, fracRes: 0.6031, norm(attn): 0.1387, norm(output): 0.2354, norm(x): 0.6980, norm(y): 1.0075, norm:1.2868, tok/sec: 104146.16, flops:91.20, batch-reuse:1
@ 6705 train 4.4015 , allloss: 4.4190, dt: 1259.09ms, fracRes: 0.6024, norm(attn): 0.1396, norm(output): 0.2373, norm(x): 0.6966, norm(y): 1.0074, norm:1.1527, tok/sec: 104100.19, flops:91.16, batch-reuse:1
@ 6706 train 4.3830 , allloss: 4.4017, dt: 1290.55ms, fracRes: 0.6028, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6953, norm(y): 1.0076, norm:1.3749, tok/sec: 101562.81, flops:88.94, batch-reuse:1
@ 6707 train 4.2649 , allloss: 4.2830, dt: 1254.35ms, fracRes: 0.6025, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6946, norm(y): 1.0076, norm:1.2726, tok/sec: 104494.34, flops:91.50, batch-reuse:1
@ 6708 train 4.3568 , allloss: 4.3750, dt: 1281.28ms, fracRes: 0.6027, norm(attn): 0.1387, norm(output): 0.2354, norm(x): 0.6931, norm(y): 1.0076, norm:1.2909, tok/sec: 102297.91, flops:89.58, batch-reuse:1
@ 6709 train 4.3234 , allloss: 4.3409, dt: 1286.86ms, fracRes: 0.6026, norm(attn): 0.1387, norm(output): 0.2363, norm(x): 0.6933, norm(y): 1.0076, norm:1.2408, tok/sec: 101853.94, flops:89.19, batch-reuse:1
@ 6710 train 4.3348 , allloss: 4.3520, dt: 1292.68ms, fracRes: 0.6024, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6930, norm(y): 1.0075, norm:1.2625, tok/sec: 101395.40, flops:88.79, batch-reuse:1
@ 6711 train 4.3708 , allloss: 4.3888, dt: 1269.97ms, fracRes: 0.6023, norm(attn): 0.1396, norm(output): 0.2373, norm(x): 0.6944, norm(y): 1.0075, norm:1.3691, tok/sec: 103208.99, flops:90.38, batch-reuse:1
@ 6712 train 4.4099 , allloss: 4.4273, dt: 1262.58ms, fracRes: 0.6019, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6920, norm(y): 1.0074, norm:1.2682, tok/sec: 103812.95, flops:90.91, batch-reuse:1
@ 6713 train 4.3375 , allloss: 4.3554, dt: 1285.08ms, fracRes: 0.6031, norm(attn): 0.1387, norm(output): 0.2354, norm(x): 0.6968, norm(y): 1.0074, norm:1.1442, tok/sec: 101995.42, flops:89.32, batch-reuse:1
@ 6714 train 4.2871 , allloss: 4.3063, dt: 1262.04ms, fracRes: 0.6029, norm(attn): 0.1396, norm(output): 0.2363, norm(x): 0.6971, norm(y): 1.0075, norm:1.3678, tok/sec: 103856.90, flops:90.95, batch-reuse:1
@ 6715 train 4.4133 , allloss: 4.4316, dt: 1265.98ms, fracRes: 0.6032, norm(attn): 0.1387, norm(output): 0.2354, norm(x): 0.6922, norm(y): 1.0077, norm:1.3567, tok/sec: 103533.88, flops:90.66, batch-reuse:1
@ 6716 train 4.3159 , allloss: 4.3338, dt: 1282.50ms, fracRes: 0.6022, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6929, norm(y): 1.0076, norm:1.2691, tok/sec: 102200.62, flops:89.50, batch-reuse:1
@ 6717 train 4.3222 , allloss: 4.3402, dt: 1270.47ms, fracRes: 0.6020, norm(attn): 0.1396, norm(output): 0.2363, norm(x): 0.6926, norm(y): 1.0075, norm:1.2616, tok/sec: 103168.32, flops:90.34, batch-reuse:1
@ 6718 train 4.4190 , allloss: 4.4368, dt: 1262.73ms, fracRes: 0.6018, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6917, norm(y): 1.0076, norm:1.1078, tok/sec: 103800.11, flops:90.90, batch-reuse:1
@ 6719 train 4.4323 , allloss: 4.4499, dt: 1287.41ms, fracRes: 0.6023, norm(attn): 0.1387, norm(output): 0.2363, norm(x): 0.6923, norm(y): 1.0074, norm:1.2757, tok/sec: 101810.38, flops:89.15, batch-reuse:1
@ 6720 train 4.3690 , allloss: 4.3874, dt: 1263.76ms, fracRes: 0.6031, norm(attn): 0.1387, norm(output): 0.2344, norm(x): 0.6950, norm(y): 1.0075, norm:1.3748, tok/sec: 103715.87, flops:90.82, batch-reuse:1
@ 6721 train 4.3132 , allloss: 4.3308, dt: 1268.76ms, fracRes: 0.6036, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6939, norm(y): 1.0077, norm:1.3688, tok/sec: 103307.44, flops:90.46, batch-reuse:1
@ 6722 train 4.3944 , allloss: 4.4125, dt: 1269.42ms, fracRes: 0.6028, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6968, norm(y): 1.0076, norm:1.2872, tok/sec: 103253.23, flops:90.42, batch-reuse:1
@ 6723 train 4.2938 , allloss: 4.3116, dt: 1259.59ms, fracRes: 0.6035, norm(attn): 0.1377, norm(output): 0.2354, norm(x): 0.6942, norm(y): 1.0077, norm:1.4293, tok/sec: 104059.07, flops:91.12, batch-reuse:1
@ 6724 train 4.3448 , allloss: 4.3622, dt: 1291.53ms, fracRes: 0.6033, norm(attn): 0.1387, norm(output): 0.2354, norm(x): 0.6924, norm(y): 1.0075, norm:1.2866, tok/sec: 101485.64, flops:88.87, batch-reuse:1
@ 6725 train 4.4453 , allloss: 4.4634, dt: 1275.85ms, fracRes: 0.6033, norm(attn): 0.1396, norm(output): 0.2344, norm(x): 0.6932, norm(y): 1.0076, norm:1.4768, tok/sec: 102732.94, flops:89.96, batch-reuse:1
@ 6726 train 4.3513 , allloss: 4.3692, dt: 1304.41ms, fracRes: 0.6024, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6929, norm(y): 1.0076, norm:1.2743, tok/sec: 100484.00, flops:87.99, batch-reuse:1
@ 6727 train 4.3535 , allloss: 4.3712, dt: 1303.61ms, fracRes: 0.6019, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6948, norm(y): 1.0075, norm:1.2575, tok/sec: 100545.18, flops:88.05, batch-reuse:1
@ 6728 train 4.2899 , allloss: 4.3075, dt: 1281.97ms, fracRes: 0.6025, norm(attn): 0.1387, norm(output): 0.2354, norm(x): 0.6958, norm(y): 1.0076, norm:1.1573, tok/sec: 102242.34, flops:89.53, batch-reuse:1
@ 6729 train 4.4316 , allloss: 4.4490, dt: 1268.52ms, fracRes: 0.6035, norm(attn): 0.1387, norm(output): 0.2354, norm(x): 0.6931, norm(y): 1.0077, norm:1.2428, tok/sec: 103326.97, flops:90.48, batch-reuse:1
@ 6730 train 4.4040 , allloss: 4.4217, dt: 1267.30ms, fracRes: 0.6028, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6943, norm(y): 1.0074, norm:1.2980, tok/sec: 103425.86, flops:90.57, batch-reuse:1
@ 6731 train 4.3111 , allloss: 4.3294, dt: 1286.73ms, fracRes: 0.6032, norm(attn): 0.1377, norm(output): 0.2354, norm(x): 0.6934, norm(y): 1.0076, norm:1.2551, tok/sec: 101864.58, flops:89.20, batch-reuse:1
@ 6732 train 4.3793 , allloss: 4.3974, dt: 1264.73ms, fracRes: 0.6020, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6915, norm(y): 1.0074, norm:1.6111, tok/sec: 103636.72, flops:90.75, batch-reuse:1
@ 6733 train 4.3604 , allloss: 4.3790, dt: 1272.16ms, fracRes: 0.6025, norm(attn): 0.1387, norm(output): 0.2354, norm(x): 0.6949, norm(y): 1.0075, norm:1.5366, tok/sec: 103031.16, flops:90.22, batch-reuse:1
@ 6734 train 4.3535 , allloss: 4.3706, dt: 1285.01ms, fracRes: 0.6021, norm(attn): 0.1387, norm(output): 0.2344, norm(x): 0.6929, norm(y): 1.0074, norm:1.2527, tok/sec: 102000.91, flops:89.32, batch-reuse:1
@ 6735 train 4.2812 , allloss: 4.2990, dt: 1271.68ms, fracRes: 0.6026, norm(attn): 0.1396, norm(output): 0.2363, norm(x): 0.6940, norm(y): 1.0074, norm:1.4959, tok/sec: 103069.96, flops:90.26, batch-reuse:1
@ 6736 train 4.2871 , allloss: 4.3044, dt: 1261.97ms, fracRes: 0.6030, norm(attn): 0.1377, norm(output): 0.2354, norm(x): 0.6921, norm(y): 1.0076, norm:1.3744, tok/sec: 103863.16, flops:90.95, batch-reuse:1
@ 6737 train 4.2415 , allloss: 4.2595, dt: 1263.02ms, fracRes: 0.6024, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6938, norm(y): 1.0076, norm:1.1638, tok/sec: 103776.29, flops:90.88, batch-reuse:1
@ 6738 train 4.3472 , allloss: 4.3650, dt: 1294.01ms, fracRes: 0.6018, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6934, norm(y): 1.0076, norm:1.2752, tok/sec: 101291.04, flops:88.70, batch-reuse:1
@ 6739 train 4.3882 , allloss: 4.4062, dt: 1273.87ms, fracRes: 0.6023, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6926, norm(y): 1.0075, norm:1.2400, tok/sec: 102892.99, flops:90.10, batch-reuse:1
@ 6740 train 4.3135 , allloss: 4.3312, dt: 1256.82ms, fracRes: 0.6028, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6915, norm(y): 1.0076, norm:1.1715, tok/sec: 104288.78, flops:91.32, batch-reuse:1
@ 6741 train 4.3023 , allloss: 4.3207, dt: 1286.04ms, fracRes: 0.6029, norm(attn): 0.1387, norm(output): 0.2354, norm(x): 0.6938, norm(y): 1.0075, norm:1.1983, tok/sec: 101919.35, flops:89.25, batch-reuse:1
@ 6742 train 4.2614 , allloss: 4.2788, dt: 1279.02ms, fracRes: 0.6030, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6928, norm(y): 1.0078, norm:1.2719, tok/sec: 102478.23, flops:89.74, batch-reuse:1
@ 6743 train 4.3507 , allloss: 4.3692, dt: 1256.82ms, fracRes: 0.6028, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6927, norm(y): 1.0076, norm:1.2816, tok/sec: 104288.31, flops:91.32, batch-reuse:1
@ 6744 train 4.3122 , allloss: 4.3300, dt: 1273.85ms, fracRes: 0.6023, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6922, norm(y): 1.0076, norm:1.1294, tok/sec: 102894.24, flops:90.10, batch-reuse:1
@ 6745 train 4.2705 , allloss: 4.2889, dt: 1278.64ms, fracRes: 0.6039, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6954, norm(y): 1.0076, norm:1.2236, tok/sec: 102508.87, flops:89.77, batch-reuse:1
@ 6746 train 4.3294 , allloss: 4.3466, dt: 1252.65ms, fracRes: 0.6035, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6941, norm(y): 1.0075, norm:1.1019, tok/sec: 104636.03, flops:91.63, batch-reuse:1
@ 6747 train 4.3198 , allloss: 4.3372, dt: 1270.50ms, fracRes: 0.6034, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6929, norm(y): 1.0075, norm:1.0794, tok/sec: 103165.44, flops:90.34, batch-reuse:1
@ 6748 train 4.3447 , allloss: 4.3623, dt: 1275.45ms, fracRes: 0.6031, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6936, norm(y): 1.0076, norm:1.1606, tok/sec: 102765.22, flops:89.99, batch-reuse:1
@ 6749 train 4.3126 , allloss: 4.3294, dt: 1288.14ms, fracRes: 0.6026, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6923, norm(y): 1.0075, norm:1.0559, tok/sec: 101752.74, flops:89.10, batch-reuse:1
@ 6750 train 4.3311 , allloss: 4.3484, dt: 1268.52ms, fracRes: 0.6034, norm(attn): 0.1387, norm(output): 0.2354, norm(x): 0.6934, norm(y): 1.0075, norm:1.2524, tok/sec: 103327.11, flops:90.48, batch-reuse:1
@ 6751 train 4.2874 , allloss: 4.3048, dt: 1284.30ms, fracRes: 0.6025, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6934, norm(y): 1.0074, norm:1.1480, tok/sec: 102057.05, flops:89.37, batch-reuse:1
@ 6752 train 4.4922 , allloss: 4.5106, dt: 1261.79ms, fracRes: 0.6011, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6837, norm(y): 1.0069, norm:1.7373, tok/sec: 103878.14, flops:90.96, batch-reuse:1
@ 6753 train 4.3311 , allloss: 4.3499, dt: 1254.29ms, fracRes: 0.6014, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6884, norm(y): 1.0076, norm:1.4277, tok/sec: 104498.89, flops:91.51, batch-reuse:1
@ 6754 train 4.3802 , allloss: 4.3986, dt: 1262.18ms, fracRes: 0.6023, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6902, norm(y): 1.0074, norm:1.3459, tok/sec: 103846.09, flops:90.94, batch-reuse:1
@ 6755 train 4.2650 , allloss: 4.2825, dt: 1238.21ms, fracRes: 0.6022, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6910, norm(y): 1.0076, norm:1.3264, tok/sec: 105856.12, flops:92.70, batch-reuse:1
@ 6756 train 4.3349 , allloss: 4.3531, dt: 1265.35ms, fracRes: 0.6026, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6934, norm(y): 1.0075, norm:1.5087, tok/sec: 103585.83, flops:90.71, batch-reuse:1
@ 6757 train 4.3484 , allloss: 4.3655, dt: 1296.64ms, fracRes: 0.6026, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6931, norm(y): 1.0075, norm:1.3165, tok/sec: 101085.50, flops:88.52, batch-reuse:1
@ 6758 train 4.3335 , allloss: 4.3513, dt: 1293.52ms, fracRes: 0.6030, norm(attn): 0.1387, norm(output): 0.2363, norm(x): 0.6925, norm(y): 1.0076, norm:1.2139, tok/sec: 101329.69, flops:88.73, batch-reuse:1
@ 6759 train 4.3025 , allloss: 4.3199, dt: 1300.52ms, fracRes: 0.6030, norm(attn): 0.1387, norm(output): 0.2363, norm(x): 0.6931, norm(y): 1.0075, norm:1.2429, tok/sec: 100784.12, flops:88.26, batch-reuse:1
@ 6760 train 4.2948 , allloss: 4.3122, dt: 1278.21ms, fracRes: 0.6031, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6927, norm(y): 1.0075, norm:1.1061, tok/sec: 102543.33, flops:89.80, batch-reuse:1
@ 6761 train 4.2897 , allloss: 4.3077, dt: 1265.76ms, fracRes: 0.6032, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6938, norm(y): 1.0076, norm:1.1870, tok/sec: 103552.00, flops:90.68, batch-reuse:1
@ 6762 train 4.3991 , allloss: 4.4168, dt: 1289.62ms, fracRes: 0.6030, norm(attn): 0.1396, norm(output): 0.2363, norm(x): 0.6960, norm(y): 1.0075, norm:1.1799, tok/sec: 101635.79, flops:89.00, batch-reuse:1
@ 6763 train 4.2254 , allloss: 4.2421, dt: 1249.66ms, fracRes: 0.6042, norm(attn): 0.1387, norm(output): 0.2354, norm(x): 0.6968, norm(y): 1.0079, norm:1.7030, tok/sec: 104885.83, flops:91.85, batch-reuse:1
@ 6764 train 4.4594 , allloss: 4.4760, dt: 1275.37ms, fracRes: 0.6037, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6939, norm(y): 1.0075, norm:1.9457, tok/sec: 102771.72, flops:90.00, batch-reuse:1
@ 6765 train 4.4031 , allloss: 4.4216, dt: 1254.16ms, fracRes: 0.6034, norm(attn): 0.1396, norm(output): 0.2363, norm(x): 0.6968, norm(y): 1.0075, norm:1.5658, tok/sec: 104509.66, flops:91.52, batch-reuse:1
@ 6766 train 4.3759 , allloss: 4.3932, dt: 1252.80ms, fracRes: 0.6037, norm(attn): 0.1387, norm(output): 0.2354, norm(x): 0.6937, norm(y): 1.0075, norm:1.2444, tok/sec: 104622.87, flops:91.62, batch-reuse:1
@ 6767 train 4.3755 , allloss: 4.3931, dt: 1250.64ms, fracRes: 0.6033, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6937, norm(y): 1.0075, norm:1.3040, tok/sec: 104804.27, flops:91.78, batch-reuse:1
@ 6768 train 4.2890 , allloss: 4.3069, dt: 1266.65ms, fracRes: 0.6036, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6955, norm(y): 1.0074, norm:1.3478, tok/sec: 103479.26, flops:90.62, batch-reuse:1
@ 6769 train 4.3662 , allloss: 4.3835, dt: 1284.44ms, fracRes: 0.6030, norm(attn): 0.1387, norm(output): 0.2354, norm(x): 0.6949, norm(y): 1.0075, norm:1.3884, tok/sec: 102045.84, flops:89.36, batch-reuse:1
@ 6770 train 4.3110 , allloss: 4.3285, dt: 1254.70ms, fracRes: 0.6025, norm(attn): 0.1387, norm(output): 0.2354, norm(x): 0.6938, norm(y): 1.0074, norm:1.0385, tok/sec: 104464.78, flops:91.48, batch-reuse:1
@ 6771 train 4.3526 , allloss: 4.3703, dt: 1258.76ms, fracRes: 0.6017, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6940, norm(y): 1.0074, norm:1.2436, tok/sec: 104127.52, flops:91.18, batch-reuse:1
@ 6772 train 4.3999 , allloss: 4.4181, dt: 1263.42ms, fracRes: 0.6031, norm(attn): 0.1377, norm(output): 0.2354, norm(x): 0.6916, norm(y): 1.0075, norm:1.2491, tok/sec: 103743.95, flops:90.85, batch-reuse:1
@ 6773 train 4.3844 , allloss: 4.4013, dt: 1269.42ms, fracRes: 0.6031, norm(attn): 0.1377, norm(output): 0.2354, norm(x): 0.6926, norm(y): 1.0075, norm:1.4018, tok/sec: 103253.85, flops:90.42, batch-reuse:1
@ 6774 train 4.2901 , allloss: 4.3086, dt: 1289.34ms, fracRes: 0.6033, norm(attn): 0.1387, norm(output): 0.2344, norm(x): 0.6930, norm(y): 1.0075, norm:1.4124, tok/sec: 101658.46, flops:89.02, batch-reuse:1
@ 6775 train 4.3071 , allloss: 4.3248, dt: 1276.53ms, fracRes: 0.6021, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6906, norm(y): 1.0074, norm:1.3607, tok/sec: 102678.20, flops:89.91, batch-reuse:1
@ 6776 train 4.3820 , allloss: 4.3996, dt: 1266.23ms, fracRes: 0.6016, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6906, norm(y): 1.0075, norm:1.4843, tok/sec: 103513.36, flops:90.65, batch-reuse:1
@ 6777 train 4.3111 , allloss: 4.3287, dt: 1255.20ms, fracRes: 0.6025, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6945, norm(y): 1.0075, norm:1.2284, tok/sec: 104423.13, flops:91.44, batch-reuse:1
@ 6778 train 4.2737 , allloss: 4.2910, dt: 1253.85ms, fracRes: 0.6028, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6949, norm(y): 1.0075, norm:1.3446, tok/sec: 104536.01, flops:91.54, batch-reuse:1
@ 6779 train 4.3120 , allloss: 4.3298, dt: 1275.65ms, fracRes: 0.6038, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6944, norm(y): 1.0075, norm:1.2101, tok/sec: 102749.20, flops:89.98, batch-reuse:1
@ 6780 train 4.2839 , allloss: 4.3016, dt: 1272.14ms, fracRes: 0.6033, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6920, norm(y): 1.0075, norm:1.2635, tok/sec: 103032.53, flops:90.22, batch-reuse:1
@ 6781 train 4.3180 , allloss: 4.3355, dt: 1290.89ms, fracRes: 0.6026, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6913, norm(y): 1.0075, norm:1.4380, tok/sec: 101535.96, flops:88.91, batch-reuse:1
@ 6782 train 4.3667 , allloss: 4.3842, dt: 1272.73ms, fracRes: 0.6035, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6918, norm(y): 1.0074, norm:1.2149, tok/sec: 102984.78, flops:90.18, batch-reuse:1
@ 6783 train 4.2873 , allloss: 4.3047, dt: 1279.11ms, fracRes: 0.6046, norm(attn): 0.1377, norm(output): 0.2354, norm(x): 0.6944, norm(y): 1.0076, norm:1.3977, tok/sec: 102471.21, flops:89.73, batch-reuse:1
@ 6784 train 4.3672 , allloss: 4.3843, dt: 1260.63ms, fracRes: 0.6045, norm(attn): 0.1387, norm(output): 0.2354, norm(x): 0.6957, norm(y): 1.0076, norm:1.4335, tok/sec: 103973.75, flops:91.05, batch-reuse:1
@ 6785 train 4.2664 , allloss: 4.2831, dt: 1261.42ms, fracRes: 0.6034, norm(attn): 0.1377, norm(output): 0.2354, norm(x): 0.6944, norm(y): 1.0076, norm:1.3276, tok/sec: 103908.23, flops:90.99, batch-reuse:1
@ 6786 train 4.3033 , allloss: 4.3211, dt: 1248.67ms, fracRes: 0.6027, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6965, norm(y): 1.0074, norm:1.1538, tok/sec: 104969.68, flops:91.92, batch-reuse:1
@ 6787 train 4.3045 , allloss: 4.3217, dt: 1274.07ms, fracRes: 0.6028, norm(attn): 0.1396, norm(output): 0.2363, norm(x): 0.6948, norm(y): 1.0074, norm:1.6156, tok/sec: 102876.47, flops:90.09, batch-reuse:1
@ 6788 train 4.3022 , allloss: 4.3190, dt: 1271.03ms, fracRes: 0.6026, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6941, norm(y): 1.0073, norm:1.2668, tok/sec: 103122.36, flops:90.30, batch-reuse:1
@ 6789 train 4.3456 , allloss: 4.3631, dt: 1275.37ms, fracRes: 0.6027, norm(attn): 0.1396, norm(output): 0.2363, norm(x): 0.6936, norm(y): 1.0074, norm:1.1796, tok/sec: 102771.47, flops:90.00, batch-reuse:1
@ 6790 train 4.1869 , allloss: 4.2057, dt: 1259.73ms, fracRes: 0.6025, norm(attn): 0.1406, norm(output): 0.2373, norm(x): 0.6949, norm(y): 1.0073, norm:1.1020, tok/sec: 104047.49, flops:91.11, batch-reuse:1
@ 6791 train 4.3281 , allloss: 4.3453, dt: 1260.28ms, fracRes: 0.6027, norm(attn): 0.1387, norm(output): 0.2354, norm(x): 0.6916, norm(y): 1.0075, norm:1.1810, tok/sec: 104001.96, flops:91.07, batch-reuse:1
@ 6792 train 4.2493 , allloss: 4.2668, dt: 1277.48ms, fracRes: 0.6024, norm(attn): 0.1396, norm(output): 0.2363, norm(x): 0.6932, norm(y): 1.0075, norm:1.1078, tok/sec: 102602.29, flops:89.85, batch-reuse:1
@ 6793 train 4.2729 , allloss: 4.2900, dt: 1258.24ms, fracRes: 0.6031, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6927, norm(y): 1.0075, norm:1.0743, tok/sec: 104170.55, flops:91.22, batch-reuse:1
@ 6794 train 4.3141 , allloss: 4.3304, dt: 1273.42ms, fracRes: 0.6037, norm(attn): 0.1387, norm(output): 0.2344, norm(x): 0.6900, norm(y): 1.0076, norm:1.2228, tok/sec: 102929.23, flops:90.13, batch-reuse:1
@ 6795 train 4.2239 , allloss: 4.2414, dt: 1267.30ms, fracRes: 0.6044, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6945, norm(y): 1.0077, norm:1.3828, tok/sec: 103426.46, flops:90.57, batch-reuse:1
@ 6796 train 4.3164 , allloss: 4.3333, dt: 1268.35ms, fracRes: 0.6035, norm(attn): 0.1396, norm(output): 0.2344, norm(x): 0.6936, norm(y): 1.0076, norm:1.2366, tok/sec: 103340.55, flops:90.49, batch-reuse:1
@ 6797 train 4.2618 , allloss: 4.2790, dt: 1269.62ms, fracRes: 0.6031, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6925, norm(y): 1.0076, norm:1.2851, tok/sec: 103237.02, flops:90.40, batch-reuse:1
@ 6798 train 4.3179 , allloss: 4.3355, dt: 1286.90ms, fracRes: 0.6013, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6916, norm(y): 1.0074, norm:1.3812, tok/sec: 101850.79, flops:89.19, batch-reuse:1
@ 6799 train 4.1774 , allloss: 4.1956, dt: 1295.98ms, fracRes: 0.6021, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6917, norm(y): 1.0075, norm:1.2200, tok/sec: 101137.31, flops:88.56, batch-reuse:1
@ 6800 train 4.2133 , allloss: 4.2306, dt: 1280.34ms, fracRes: 0.6022, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6920, norm(y): 1.0074, norm:1.2939, tok/sec: 102373.06, flops:89.65, batch-reuse:1
@ 6801 train 4.2643 , allloss: 4.2813, dt: 1275.43ms, fracRes: 0.6027, norm(attn): 0.1396, norm(output): 0.2344, norm(x): 0.6898, norm(y): 1.0075, norm:1.2112, tok/sec: 102766.86, flops:89.99, batch-reuse:1
@ 6802 train 4.1832 , allloss: 4.2006, dt: 1281.56ms, fracRes: 0.6022, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6915, norm(y): 1.0073, norm:1.2291, tok/sec: 102275.39, flops:89.56, batch-reuse:1
@ 6803 train 4.2005 , allloss: 4.2183, dt: 1262.11ms, fracRes: 0.6028, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6902, norm(y): 1.0075, norm:1.3058, tok/sec: 103851.35, flops:90.94, batch-reuse:1
@ 6804 train 4.3198 , allloss: 4.3371, dt: 1264.74ms, fracRes: 0.6026, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6899, norm(y): 1.0075, norm:1.2430, tok/sec: 103635.75, flops:90.75, batch-reuse:1
@ 6805 train 4.2956 , allloss: 4.3130, dt: 1276.50ms, fracRes: 0.6031, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6917, norm(y): 1.0074, norm:1.5304, tok/sec: 102681.15, flops:89.92, batch-reuse:1
@ 6806 train 4.1706 , allloss: 4.1880, dt: 1283.78ms, fracRes: 0.6029, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6908, norm(y): 1.0075, norm:1.2281, tok/sec: 102098.58, flops:89.41, batch-reuse:1
@ 6807 train 4.1547 , allloss: 4.1724, dt: 1316.63ms, fracRes: 0.6023, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6928, norm(y): 1.0074, norm:1.3257, tok/sec: 99551.35, flops:87.18, batch-reuse:1
@ 6808 train 4.3076 , allloss: 4.3269, dt: 1308.63ms, fracRes: 0.6032, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6932, norm(y): 1.0074, norm:1.7817, tok/sec: 100159.75, flops:87.71, batch-reuse:1
@ 6809 train 4.2957 , allloss: 4.3141, dt: 1284.91ms, fracRes: 0.6048, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6942, norm(y): 1.0074, norm:1.2705, tok/sec: 102008.80, flops:89.33, batch-reuse:1
@ 6810 train 4.2585 , allloss: 4.2752, dt: 1290.73ms, fracRes: 0.6027, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6914, norm(y): 1.0072, norm:1.0836, tok/sec: 101548.85, flops:88.92, batch-reuse:1
@ 6811 train 4.2414 , allloss: 4.2580, dt: 1297.75ms, fracRes: 0.6021, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6903, norm(y): 1.0075, norm:1.2424, tok/sec: 100999.57, flops:88.44, batch-reuse:1
@ 6812 train 4.2723 , allloss: 4.2904, dt: 1269.22ms, fracRes: 0.6008, norm(attn): 0.1445, norm(output): 0.2402, norm(x): 0.6899, norm(y): 1.0068, norm:1.8756, tok/sec: 103269.95, flops:90.43, batch-reuse:1
@ 6813 train 4.1695 , allloss: 4.1875, dt: 1306.84ms, fracRes: 0.6025, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6921, norm(y): 1.0075, norm:1.3698, tok/sec: 100297.07, flops:87.83, batch-reuse:1
@ 6814 train 4.2904 , allloss: 4.3162, dt: 1317.24ms, fracRes: 0.6032, norm(attn): 0.1387, norm(output): 0.2344, norm(x): 0.6888, norm(y): 1.0074, norm:1.9678, tok/sec: 99504.77, flops:87.13, batch-reuse:1
@ 6815 train 4.1533 , allloss: 4.1714, dt: 1288.64ms, fracRes: 0.6024, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6940, norm(y): 1.0076, norm:1.3987, tok/sec: 101713.24, flops:89.07, batch-reuse:1
@ 6816 train 4.3551 , allloss: 4.3735, dt: 1252.21ms, fracRes: 0.6028, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6939, norm(y): 1.0075, norm:1.2383, tok/sec: 104672.95, flops:91.66, batch-reuse:1
@ 6817 train 4.3474 , allloss: 4.3641, dt: 1265.45ms, fracRes: 0.6032, norm(attn): 0.1387, norm(output): 0.2354, norm(x): 0.6905, norm(y): 1.0075, norm:1.1214, tok/sec: 103577.19, flops:90.70, batch-reuse:1
@ 6818 train 4.1987 , allloss: 4.2165, dt: 1265.44ms, fracRes: 0.6039, norm(attn): 0.1377, norm(output): 0.2354, norm(x): 0.6945, norm(y): 1.0076, norm:1.3084, tok/sec: 103578.18, flops:90.70, batch-reuse:1
@ 6819 train 4.2842 , allloss: 4.3018, dt: 1284.69ms, fracRes: 0.6023, norm(attn): 0.1396, norm(output): 0.2363, norm(x): 0.6929, norm(y): 1.0074, norm:1.3561, tok/sec: 102025.86, flops:89.34, batch-reuse:1
@ 6820 train 4.2428 , allloss: 4.2608, dt: 1281.56ms, fracRes: 0.6018, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6898, norm(y): 1.0074, norm:1.2497, tok/sec: 102275.03, flops:89.56, batch-reuse:1
@ 6821 train 4.2328 , allloss: 4.2509, dt: 1303.39ms, fracRes: 0.6026, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6920, norm(y): 1.0075, norm:1.3485, tok/sec: 100562.23, flops:88.06, batch-reuse:1
@ 6822 train 4.2520 , allloss: 4.2696, dt: 1283.75ms, fracRes: 0.6027, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6958, norm(y): 1.0075, norm:1.3710, tok/sec: 102100.81, flops:89.41, batch-reuse:1
@ 6823 train 4.1720 , allloss: 4.1894, dt: 1266.32ms, fracRes: 0.6019, norm(attn): 0.1416, norm(output): 0.2373, norm(x): 0.6985, norm(y): 1.0074, norm:1.3860, tok/sec: 103506.26, flops:90.64, batch-reuse:1
@ 6824 train 4.2488 , allloss: 4.2658, dt: 1262.59ms, fracRes: 0.6029, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6975, norm(y): 1.0076, norm:1.1795, tok/sec: 103811.89, flops:90.91, batch-reuse:1
@ 6825 train 4.2964 , allloss: 4.3135, dt: 1270.87ms, fracRes: 0.6038, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6983, norm(y): 1.0074, norm:1.1621, tok/sec: 103135.79, flops:90.31, batch-reuse:1
@ 6826 train 4.2794 , allloss: 4.2970, dt: 1277.50ms, fracRes: 0.6035, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6978, norm(y): 1.0073, norm:1.0481, tok/sec: 102600.72, flops:89.85, batch-reuse:1
@ 6827 train 4.2863 , allloss: 4.3041, dt: 1276.12ms, fracRes: 0.6036, norm(attn): 0.1406, norm(output): 0.2383, norm(x): 0.6991, norm(y): 1.0074, norm:1.2429, tok/sec: 102711.69, flops:89.94, batch-reuse:1
@ 6828 train 4.2485 , allloss: 4.2659, dt: 1282.46ms, fracRes: 0.6030, norm(attn): 0.1396, norm(output): 0.2363, norm(x): 0.6976, norm(y): 1.0074, norm:1.1570, tok/sec: 102203.77, flops:89.50, batch-reuse:1
@ 6829 train 4.1412 , allloss: 4.1589, dt: 1295.54ms, fracRes: 0.6024, norm(attn): 0.1406, norm(output): 0.2373, norm(x): 0.6958, norm(y): 1.0075, norm:1.2294, tok/sec: 101171.54, flops:88.59, batch-reuse:1
@ 6830 train 4.2515 , allloss: 4.2688, dt: 1291.14ms, fracRes: 0.6028, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6966, norm(y): 1.0075, norm:1.3438, tok/sec: 101516.88, flops:88.90, batch-reuse:1
@ 6831 train 4.2123 , allloss: 4.2299, dt: 1299.58ms, fracRes: 0.6030, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6980, norm(y): 1.0075, norm:1.1840, tok/sec: 100857.34, flops:88.32, batch-reuse:1
@ 6832 train 4.2852 , allloss: 4.3019, dt: 1266.50ms, fracRes: 0.6027, norm(attn): 0.1396, norm(output): 0.2373, norm(x): 0.6957, norm(y): 1.0073, norm:1.1715, tok/sec: 103491.20, flops:90.63, batch-reuse:1
@ 6833 train 4.2077 , allloss: 4.2242, dt: 1290.47ms, fracRes: 0.6035, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6972, norm(y): 1.0074, norm:1.1112, tok/sec: 101569.22, flops:88.94, batch-reuse:1
@ 6834 train 4.1376 , allloss: 4.1540, dt: 1261.67ms, fracRes: 0.6032, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6973, norm(y): 1.0074, norm:1.2767, tok/sec: 103888.11, flops:90.97, batch-reuse:1
@ 6835 train 4.2901 , allloss: 4.3075, dt: 1267.43ms, fracRes: 0.6034, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6954, norm(y): 1.0075, norm:1.2104, tok/sec: 103415.43, flops:90.56, batch-reuse:1
@ 6836 train 4.1516 , allloss: 4.1688, dt: 1257.60ms, fracRes: 0.6028, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6945, norm(y): 1.0073, norm:1.1879, tok/sec: 104223.62, flops:91.27, batch-reuse:1
@ 6837 train 4.3644 , allloss: 4.3817, dt: 1263.65ms, fracRes: 0.6036, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6953, norm(y): 1.0073, norm:1.2481, tok/sec: 103725.18, flops:90.83, batch-reuse:1
@ 6838 train 4.2489 , allloss: 4.2657, dt: 1261.91ms, fracRes: 0.6033, norm(attn): 0.1396, norm(output): 0.2373, norm(x): 0.6962, norm(y): 1.0075, norm:1.1653, tok/sec: 103867.75, flops:90.96, batch-reuse:1
@ 6839 train 4.2912 , allloss: 4.3089, dt: 1299.58ms, fracRes: 0.6031, norm(attn): 0.1416, norm(output): 0.2373, norm(x): 0.6966, norm(y): 1.0074, norm:1.3978, tok/sec: 100856.88, flops:88.32, batch-reuse:1
@ 6840 train 4.1902 , allloss: 4.2075, dt: 1279.55ms, fracRes: 0.6027, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6938, norm(y): 1.0073, norm:1.3411, tok/sec: 102435.91, flops:89.70, batch-reuse:1
@ 6841 train 4.2700 , allloss: 4.2874, dt: 1274.33ms, fracRes: 0.6028, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6949, norm(y): 1.0073, norm:1.1589, tok/sec: 102855.86, flops:90.07, batch-reuse:1
@ 6842 train 4.2097 , allloss: 4.2274, dt: 1292.14ms, fracRes: 0.6023, norm(attn): 0.1406, norm(output): 0.2373, norm(x): 0.6932, norm(y): 1.0074, norm:1.4468, tok/sec: 101438.22, flops:88.83, batch-reuse:1
@ 6843 train 4.0724 , allloss: 4.0898, dt: 1275.27ms, fracRes: 0.6023, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6932, norm(y): 1.0073, norm:1.0884, tok/sec: 102779.63, flops:90.00, batch-reuse:1
@ 6844 train 4.1874 , allloss: 4.2058, dt: 1259.79ms, fracRes: 0.6032, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6914, norm(y): 1.0073, norm:1.3775, tok/sec: 104042.64, flops:91.11, batch-reuse:1
@ 6845 train 4.2759 , allloss: 4.2938, dt: 1265.41ms, fracRes: 0.6044, norm(attn): 0.1396, norm(output): 0.2344, norm(x): 0.6910, norm(y): 1.0075, norm:1.5647, tok/sec: 103581.05, flops:90.70, batch-reuse:1
@ 6846 train 4.2492 , allloss: 4.2668, dt: 1287.54ms, fracRes: 0.6043, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6951, norm(y): 1.0074, norm:1.3585, tok/sec: 101800.71, flops:89.15, batch-reuse:1
@ 6847 train 4.1492 , allloss: 4.1665, dt: 1259.58ms, fracRes: 0.6035, norm(attn): 0.1396, norm(output): 0.2363, norm(x): 0.6931, norm(y): 1.0074, norm:1.4114, tok/sec: 104059.70, flops:91.12, batch-reuse:1
@ 6848 train 4.1109 , allloss: 4.1284, dt: 1250.35ms, fracRes: 0.6033, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6935, norm(y): 1.0074, norm:1.4396, tok/sec: 104828.03, flops:91.80, batch-reuse:1
@ 6849 train 4.1382 , allloss: 4.1584, dt: 1283.86ms, fracRes: 0.6036, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6924, norm(y): 1.0073, norm:1.4899, tok/sec: 102091.83, flops:89.40, batch-reuse:1
@ 6850 train 4.0960 , allloss: 4.1134, dt: 1259.79ms, fracRes: 0.6039, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6905, norm(y): 1.0075, norm:1.2877, tok/sec: 104042.51, flops:91.11, batch-reuse:1
@ 6851 train 4.1646 , allloss: 4.1821, dt: 1285.72ms, fracRes: 0.6035, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6908, norm(y): 1.0075, norm:1.3953, tok/sec: 101944.29, flops:89.27, batch-reuse:1
@ 6852 train 4.1909 , allloss: 4.2084, dt: 1266.10ms, fracRes: 0.6033, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6925, norm(y): 1.0074, norm:1.3788, tok/sec: 103524.39, flops:90.65, batch-reuse:1
@ 6853 train 4.1494 , allloss: 4.1660, dt: 1261.16ms, fracRes: 0.6029, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6918, norm(y): 1.0075, norm:1.2145, tok/sec: 103929.72, flops:91.01, batch-reuse:1
@ 6854 train 4.0813 , allloss: 4.0988, dt: 1266.45ms, fracRes: 0.6026, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6927, norm(y): 1.0075, norm:1.3417, tok/sec: 103495.72, flops:90.63, batch-reuse:1
@ 6855 train 4.0708 , allloss: 4.0884, dt: 1266.06ms, fracRes: 0.6024, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6910, norm(y): 1.0076, norm:1.2067, tok/sec: 103527.51, flops:90.66, batch-reuse:1
@ 6856 train 4.1186 , allloss: 4.1361, dt: 1267.49ms, fracRes: 0.6031, norm(attn): 0.1396, norm(output): 0.2363, norm(x): 0.6919, norm(y): 1.0074, norm:1.3222, tok/sec: 103410.51, flops:90.56, batch-reuse:1
@ 6857 train 4.1883 , allloss: 4.2056, dt: 1279.80ms, fracRes: 0.6033, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6922, norm(y): 1.0073, norm:1.1628, tok/sec: 102416.18, flops:89.68, batch-reuse:1
@ 6858 train 4.1222 , allloss: 4.1392, dt: 1265.31ms, fracRes: 0.6032, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6920, norm(y): 1.0074, norm:1.6809, tok/sec: 103589.02, flops:90.71, batch-reuse:1
@ 6859 train 4.1897 , allloss: 4.2064, dt: 1251.09ms, fracRes: 0.6039, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6903, norm(y): 1.0074, norm:1.2485, tok/sec: 104765.88, flops:91.74, batch-reuse:1
@ 6860 train 4.1170 , allloss: 4.1340, dt: 1265.55ms, fracRes: 0.6044, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6899, norm(y): 1.0074, norm:1.1420, tok/sec: 103569.09, flops:90.69, batch-reuse:1
@ 6861 train 4.1829 , allloss: 4.2000, dt: 1310.21ms, fracRes: 0.6053, norm(attn): 0.1396, norm(output): 0.2344, norm(x): 0.6889, norm(y): 1.0075, norm:1.0699, tok/sec: 100038.65, flops:87.60, batch-reuse:1
@ 6862 train 4.0031 , allloss: 4.0202, dt: 1261.73ms, fracRes: 0.6047, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6913, norm(y): 1.0075, norm:1.2903, tok/sec: 103883.12, flops:90.97, batch-reuse:1
@ 6863 train 4.1424 , allloss: 4.1596, dt: 1260.60ms, fracRes: 0.6044, norm(attn): 0.1396, norm(output): 0.2344, norm(x): 0.6922, norm(y): 1.0073, norm:1.0562, tok/sec: 103976.00, flops:91.05, batch-reuse:1
@ 6864 train 4.1662 , allloss: 4.1825, dt: 1291.28ms, fracRes: 0.6037, norm(attn): 0.1387, norm(output): 0.2354, norm(x): 0.6918, norm(y): 1.0073, norm:1.2776, tok/sec: 101505.46, flops:88.89, batch-reuse:1
@ 6865 train 4.2915 , allloss: 4.3087, dt: 1273.21ms, fracRes: 0.6034, norm(attn): 0.1396, norm(output): 0.2363, norm(x): 0.6930, norm(y): 1.0072, norm:1.1220, tok/sec: 102946.42, flops:90.15, batch-reuse:1
@ 6866 train 4.1415 , allloss: 4.1593, dt: 1552.88ms, fracRes: 0.6027, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6893, norm(y): 1.0074, norm:1.1716, tok/sec: 84405.93, flops:73.91, batch-reuse:1
@ 6867 train 4.1339 , allloss: 4.1512, dt: 1269.12ms, fracRes: 0.6028, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6898, norm(y): 1.0074, norm:1.0843, tok/sec: 103277.69, flops:90.44, batch-reuse:1
@ 6868 train 4.1159 , allloss: 4.1336, dt: 1260.18ms, fracRes: 0.6024, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6887, norm(y): 1.0072, norm:1.0825, tok/sec: 104010.58, flops:91.08, batch-reuse:1
@ 6869 train 4.1617 , allloss: 4.1799, dt: 1259.60ms, fracRes: 0.6035, norm(attn): 0.1396, norm(output): 0.2344, norm(x): 0.6892, norm(y): 1.0074, norm:1.3707, tok/sec: 104058.40, flops:91.12, batch-reuse:1
@ 6870 train 4.1798 , allloss: 4.1966, dt: 1263.48ms, fracRes: 0.6021, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6884, norm(y): 1.0073, norm:1.4573, tok/sec: 103738.79, flops:90.84, batch-reuse:1
@ 6871 train 4.1096 , allloss: 4.1268, dt: 1264.16ms, fracRes: 0.6025, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6891, norm(y): 1.0073, norm:1.0922, tok/sec: 103683.32, flops:90.79, batch-reuse:1
@ 6872 train 4.0860 , allloss: 4.1038, dt: 1267.85ms, fracRes: 0.6030, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6873, norm(y): 1.0074, norm:1.2344, tok/sec: 103381.09, flops:90.53, batch-reuse:1
@ 6873 train 4.1617 , allloss: 4.1808, dt: 1248.96ms, fracRes: 0.6030, norm(attn): 0.1416, norm(output): 0.2373, norm(x): 0.6879, norm(y): 1.0073, norm:1.2274, tok/sec: 104944.77, flops:91.90, batch-reuse:1
@ 6874 train 4.0869 , allloss: 4.1048, dt: 1278.41ms, fracRes: 0.6031, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6902, norm(y): 1.0073, norm:1.5886, tok/sec: 102527.57, flops:89.78, batch-reuse:1
@ 6875 train 4.1913 , allloss: 4.2096, dt: 1278.25ms, fracRes: 0.6027, norm(attn): 0.1396, norm(output): 0.2363, norm(x): 0.6892, norm(y): 1.0074, norm:1.2775, tok/sec: 102540.21, flops:89.79, batch-reuse:1
@ 6876 train 4.1158 , allloss: 4.1331, dt: 1270.20ms, fracRes: 0.6029, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6884, norm(y): 1.0074, norm:1.0898, tok/sec: 103189.82, flops:90.36, batch-reuse:1
@ 6877 train 4.1594 , allloss: 4.1791, dt: 1264.37ms, fracRes: 0.6042, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6928, norm(y): 1.0074, norm:1.3814, tok/sec: 103665.92, flops:90.78, batch-reuse:1
@ 6878 train 4.2295 , allloss: 4.2467, dt: 1272.22ms, fracRes: 0.6037, norm(attn): 0.1396, norm(output): 0.2344, norm(x): 0.6916, norm(y): 1.0073, norm:1.4757, tok/sec: 103026.37, flops:90.22, batch-reuse:1
@ 6879 train 4.0648 , allloss: 4.0816, dt: 1258.20ms, fracRes: 0.6034, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6930, norm(y): 1.0074, norm:1.2633, tok/sec: 104174.48, flops:91.22, batch-reuse:1
@ 6880 train 4.1685 , allloss: 4.1856, dt: 1268.63ms, fracRes: 0.6033, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6951, norm(y): 1.0073, norm:1.1909, tok/sec: 103318.16, flops:90.47, batch-reuse:1
@ 6881 train 4.1148 , allloss: 4.1325, dt: 1270.33ms, fracRes: 0.6037, norm(attn): 0.1396, norm(output): 0.2363, norm(x): 0.6947, norm(y): 1.0074, norm:1.2713, tok/sec: 103179.22, flops:90.35, batch-reuse:1
@ 6882 train 4.0818 , allloss: 4.0995, dt: 1264.85ms, fracRes: 0.6041, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6935, norm(y): 1.0073, norm:1.1919, tok/sec: 103626.15, flops:90.74, batch-reuse:1
@ 6883 train 4.3505 , allloss: 4.3681, dt: 1294.23ms, fracRes: 0.6031, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6922, norm(y): 1.0071, norm:1.2260, tok/sec: 101274.12, flops:88.68, batch-reuse:1
@ 6884 train 4.1778 , allloss: 4.1948, dt: 1256.23ms, fracRes: 0.6027, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6905, norm(y): 1.0072, norm:1.0787, tok/sec: 104337.63, flops:91.37, batch-reuse:1
@ 6885 train 4.1803 , allloss: 4.1975, dt: 1268.92ms, fracRes: 0.6025, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6901, norm(y): 1.0073, norm:1.1996, tok/sec: 103294.38, flops:90.45, batch-reuse:1
@ 6886 train 4.2094 , allloss: 4.2264, dt: 1261.48ms, fracRes: 0.6027, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6889, norm(y): 1.0074, norm:1.3898, tok/sec: 103903.30, flops:90.99, batch-reuse:1
@ 6887 train 4.1736 , allloss: 4.1911, dt: 1277.34ms, fracRes: 0.6040, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6889, norm(y): 1.0074, norm:1.2451, tok/sec: 102612.85, flops:89.86, batch-reuse:1
@ 6888 train 4.1462 , allloss: 4.1637, dt: 1267.69ms, fracRes: 0.6040, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6915, norm(y): 1.0073, norm:1.4649, tok/sec: 103394.02, flops:90.54, batch-reuse:1
@ 6889 train 4.2875 , allloss: 4.3048, dt: 1300.68ms, fracRes: 0.6039, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6901, norm(y): 1.0073, norm:1.4679, tok/sec: 100771.82, flops:88.24, batch-reuse:1
@ 6890 train 4.3934 , allloss: 4.4116, dt: 1292.84ms, fracRes: 0.6036, norm(attn): 0.1396, norm(output): 0.2363, norm(x): 0.6921, norm(y): 1.0072, norm:1.2271, tok/sec: 101383.26, flops:88.78, batch-reuse:1
@ 6891 train 4.3907 , allloss: 4.4087, dt: 1271.22ms, fracRes: 0.6023, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6923, norm(y): 1.0071, norm:1.7875, tok/sec: 103107.49, flops:90.29, batch-reuse:1
@ 6892 train 4.5511 , allloss: 4.5691, dt: 1250.05ms, fracRes: 0.6024, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6909, norm(y): 1.0070, norm:1.8344, tok/sec: 104853.24, flops:91.82, batch-reuse:1
@ 6893 train 4.2750 , allloss: 4.2932, dt: 1276.63ms, fracRes: 0.6024, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6903, norm(y): 1.0072, norm:1.3340, tok/sec: 102669.93, flops:89.91, batch-reuse:1
@ 6894 train 4.3976 , allloss: 4.4161, dt: 1295.98ms, fracRes: 0.6036, norm(attn): 0.1387, norm(output): 0.2363, norm(x): 0.6884, norm(y): 1.0072, norm:1.3901, tok/sec: 101137.48, flops:88.56, batch-reuse:1
@ 6895 train 4.3752 , allloss: 4.3920, dt: 1278.22ms, fracRes: 0.6029, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6893, norm(y): 1.0072, norm:1.3612, tok/sec: 102542.39, flops:89.79, batch-reuse:1
@ 6896 train 4.3586 , allloss: 4.3757, dt: 1272.05ms, fracRes: 0.6034, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6919, norm(y): 1.0071, norm:1.1779, tok/sec: 103039.77, flops:90.23, batch-reuse:1
@ 6897 train 4.4151 , allloss: 4.4320, dt: 1287.29ms, fracRes: 0.6038, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6929, norm(y): 1.0071, norm:1.0594, tok/sec: 101819.72, flops:89.16, batch-reuse:1
@ 6898 train 4.5120 , allloss: 4.5288, dt: 1263.74ms, fracRes: 0.6033, norm(attn): 0.1396, norm(output): 0.2363, norm(x): 0.6909, norm(y): 1.0069, norm:1.3587, tok/sec: 103717.39, flops:90.82, batch-reuse:1
@ 6899 train 4.2623 , allloss: 4.2809, dt: 1269.82ms, fracRes: 0.6027, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6944, norm(y): 1.0072, norm:1.5259, tok/sec: 103221.03, flops:90.39, batch-reuse:1
@ 6900 train 4.2490 , allloss: 4.2671, dt: 1259.66ms, fracRes: 0.6022, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6901, norm(y): 1.0072, norm:1.1161, tok/sec: 104053.22, flops:91.12, batch-reuse:1
@ 6901 train 4.2794 , allloss: 4.2967, dt: 1274.01ms, fracRes: 0.6020, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6893, norm(y): 1.0073, norm:1.2349, tok/sec: 102881.55, flops:90.09, batch-reuse:1
@ 6902 train 4.3811 , allloss: 4.3980, dt: 1259.83ms, fracRes: 0.6030, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6910, norm(y): 1.0071, norm:1.2665, tok/sec: 104039.61, flops:91.11, batch-reuse:1
@ 6903 train 4.3676 , allloss: 4.3847, dt: 1269.00ms, fracRes: 0.6030, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6905, norm(y): 1.0072, norm:1.2127, tok/sec: 103287.58, flops:90.45, batch-reuse:1
@ 6904 train 4.3832 , allloss: 4.4018, dt: 1261.88ms, fracRes: 0.6034, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6913, norm(y): 1.0072, norm:1.2728, tok/sec: 103870.05, flops:90.96, batch-reuse:1
@ 6905 train 4.3474 , allloss: 4.3655, dt: 1276.24ms, fracRes: 0.6035, norm(attn): 0.1406, norm(output): 0.2373, norm(x): 0.6918, norm(y): 1.0072, norm:1.2190, tok/sec: 102701.70, flops:89.93, batch-reuse:1
@ 6906 train 4.3030 , allloss: 4.3203, dt: 1308.81ms, fracRes: 0.6037, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6900, norm(y): 1.0073, norm:1.2323, tok/sec: 100145.66, flops:87.70, batch-reuse:1
@ 6907 train 4.3348 , allloss: 4.3521, dt: 1253.96ms, fracRes: 0.6028, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6907, norm(y): 1.0073, norm:1.2480, tok/sec: 104526.41, flops:91.53, batch-reuse:1
@ 6908 train 4.4515 , allloss: 4.4691, dt: 1275.79ms, fracRes: 0.6027, norm(attn): 0.1396, norm(output): 0.2363, norm(x): 0.6925, norm(y): 1.0072, norm:1.2120, tok/sec: 102738.05, flops:89.97, batch-reuse:1
@ 6909 train 4.2556 , allloss: 4.2737, dt: 1292.44ms, fracRes: 0.6018, norm(attn): 0.1416, norm(output): 0.2373, norm(x): 0.6956, norm(y): 1.0072, norm:1.3249, tok/sec: 101414.25, flops:88.81, batch-reuse:1
@ 6910 train 4.3099 , allloss: 4.3266, dt: 1280.28ms, fracRes: 0.6023, norm(attn): 0.1406, norm(output): 0.2373, norm(x): 0.6926, norm(y): 1.0073, norm:1.2175, tok/sec: 102377.37, flops:89.65, batch-reuse:1
@ 6911 train 4.2933 , allloss: 4.3103, dt: 1271.58ms, fracRes: 0.6024, norm(attn): 0.1396, norm(output): 0.2363, norm(x): 0.6924, norm(y): 1.0073, norm:1.1521, tok/sec: 103077.83, flops:90.26, batch-reuse:1
@ 6912 train 4.2878 , allloss: 4.3056, dt: 1270.04ms, fracRes: 0.6030, norm(attn): 0.1396, norm(output): 0.2363, norm(x): 0.6916, norm(y): 1.0072, norm:1.1256, tok/sec: 103202.70, flops:90.37, batch-reuse:1
@ 6913 train 4.3665 , allloss: 4.3843, dt: 1293.12ms, fracRes: 0.6029, norm(attn): 0.1406, norm(output): 0.2373, norm(x): 0.6932, norm(y): 1.0070, norm:1.1221, tok/sec: 101360.85, flops:88.76, batch-reuse:1
@ 6914 train 4.2898 , allloss: 4.3078, dt: 1273.16ms, fracRes: 0.6029, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6923, norm(y): 1.0071, norm:1.1193, tok/sec: 102950.04, flops:90.15, batch-reuse:1
@ 6915 train 4.3207 , allloss: 4.3379, dt: 1264.01ms, fracRes: 0.6025, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6921, norm(y): 1.0074, norm:1.1252, tok/sec: 103695.15, flops:90.80, batch-reuse:1
@ 6916 train 4.3210 , allloss: 4.3383, dt: 1275.93ms, fracRes: 0.6030, norm(attn): 0.1396, norm(output): 0.2363, norm(x): 0.6929, norm(y): 1.0072, norm:1.2008, tok/sec: 102726.63, flops:89.96, batch-reuse:1
@ 6917 train 4.3474 , allloss: 4.3641, dt: 1266.90ms, fracRes: 0.6031, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6917, norm(y): 1.0071, norm:1.2280, tok/sec: 103459.07, flops:90.60, batch-reuse:1
@ 6918 train 4.2995 , allloss: 4.3170, dt: 1256.75ms, fracRes: 0.6027, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6910, norm(y): 1.0071, norm:1.2332, tok/sec: 104294.66, flops:91.33, batch-reuse:1
@ 6919 train 4.2692 , allloss: 4.2873, dt: 1250.68ms, fracRes: 0.6024, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6912, norm(y): 1.0070, norm:1.1322, tok/sec: 104800.29, flops:91.77, batch-reuse:1
@ 6920 train 4.2093 , allloss: 4.2268, dt: 1261.85ms, fracRes: 0.6024, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6906, norm(y): 1.0072, norm:1.2199, tok/sec: 103872.86, flops:90.96, batch-reuse:1
@ 6921 train 4.2915 , allloss: 4.3089, dt: 1256.91ms, fracRes: 0.6022, norm(attn): 0.1396, norm(output): 0.2363, norm(x): 0.6899, norm(y): 1.0071, norm:1.0878, tok/sec: 104281.07, flops:91.32, batch-reuse:1
@ 6922 train 4.2739 , allloss: 4.2912, dt: 1285.14ms, fracRes: 0.6024, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6879, norm(y): 1.0072, norm:1.0970, tok/sec: 101990.42, flops:89.31, batch-reuse:1
@ 6923 train 4.4265 , allloss: 4.4434, dt: 1281.67ms, fracRes: 0.6026, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6862, norm(y): 1.0071, norm:1.2058, tok/sec: 102266.89, flops:89.55, batch-reuse:1
@ 6924 train 4.4089 , allloss: 4.4262, dt: 1267.98ms, fracRes: 0.6030, norm(attn): 0.1396, norm(output): 0.2363, norm(x): 0.6887, norm(y): 1.0070, norm:1.3347, tok/sec: 103370.49, flops:90.52, batch-reuse:1
@ 6925 train 4.3761 , allloss: 4.3933, dt: 1269.40ms, fracRes: 0.6033, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6877, norm(y): 1.0070, norm:1.0768, tok/sec: 103255.42, flops:90.42, batch-reuse:1
@ 6926 train 4.2758 , allloss: 4.2930, dt: 1294.25ms, fracRes: 0.6040, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6880, norm(y): 1.0072, norm:1.2145, tok/sec: 101272.48, flops:88.68, batch-reuse:1
@ 6927 train 4.3144 , allloss: 4.3320, dt: 1259.20ms, fracRes: 0.6030, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6886, norm(y): 1.0071, norm:1.4812, tok/sec: 104091.50, flops:91.15, batch-reuse:1
@ 6928 train 4.3114 , allloss: 4.3287, dt: 1260.62ms, fracRes: 0.6031, norm(attn): 0.1396, norm(output): 0.2363, norm(x): 0.6879, norm(y): 1.0071, norm:1.2617, tok/sec: 103974.11, flops:91.05, batch-reuse:1
@ 6929 train 4.3464 , allloss: 4.3641, dt: 1272.79ms, fracRes: 0.6043, norm(attn): 0.1396, norm(output): 0.2344, norm(x): 0.6874, norm(y): 1.0072, norm:1.3212, tok/sec: 102980.03, flops:90.18, batch-reuse:1
@ 6930 train 4.1924 , allloss: 4.2101, dt: 1258.30ms, fracRes: 0.6036, norm(attn): 0.1396, norm(output): 0.2344, norm(x): 0.6880, norm(y): 1.0072, norm:1.3207, tok/sec: 104166.25, flops:91.22, batch-reuse:1
@ 6931 train 4.4059 , allloss: 4.4230, dt: 1262.83ms, fracRes: 0.6027, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6887, norm(y): 1.0071, norm:1.2682, tok/sec: 103792.39, flops:90.89, batch-reuse:1
@ 6932 train 4.3852 , allloss: 4.4028, dt: 1310.83ms, fracRes: 0.6025, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6883, norm(y): 1.0072, norm:1.3309, tok/sec: 99991.58, flops:87.56, batch-reuse:1
@ 6933 train 4.2859 , allloss: 4.3025, dt: 1259.16ms, fracRes: 0.6031, norm(attn): 0.1396, norm(output): 0.2363, norm(x): 0.6879, norm(y): 1.0071, norm:1.0959, tok/sec: 104094.42, flops:91.15, batch-reuse:1
@ 6934 train 4.2351 , allloss: 4.2526, dt: 1284.99ms, fracRes: 0.6035, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6895, norm(y): 1.0072, norm:1.3084, tok/sec: 102002.38, flops:89.32, batch-reuse:1
@ 6935 train 4.2178 , allloss: 4.2355, dt: 1301.37ms, fracRes: 0.6022, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6885, norm(y): 1.0072, norm:1.0944, tok/sec: 100718.74, flops:88.20, batch-reuse:1
@ 6936 train 4.2809 , allloss: 4.2987, dt: 1296.53ms, fracRes: 0.6023, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6893, norm(y): 1.0071, norm:1.0746, tok/sec: 101094.65, flops:88.53, batch-reuse:1
@ 6937 train 4.3051 , allloss: 4.3227, dt: 1277.18ms, fracRes: 0.6025, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6876, norm(y): 1.0072, norm:1.1341, tok/sec: 102625.85, flops:89.87, batch-reuse:1
@ 6938 train 4.2841 , allloss: 4.3012, dt: 1266.88ms, fracRes: 0.6027, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6885, norm(y): 1.0071, norm:1.1111, tok/sec: 103460.41, flops:90.60, batch-reuse:1
@ 6939 train 4.2697 , allloss: 4.2870, dt: 1252.75ms, fracRes: 0.6031, norm(attn): 0.1396, norm(output): 0.2344, norm(x): 0.6880, norm(y): 1.0071, norm:1.1127, tok/sec: 104627.67, flops:91.62, batch-reuse:1
@ 6940 train 4.2855 , allloss: 4.3023, dt: 1257.80ms, fracRes: 0.6033, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6852, norm(y): 1.0071, norm:1.2396, tok/sec: 104207.46, flops:91.25, batch-reuse:1
@ 6941 train 4.2595 , allloss: 4.2769, dt: 1271.94ms, fracRes: 0.6032, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6875, norm(y): 1.0072, norm:1.3472, tok/sec: 103049.18, flops:90.24, batch-reuse:1
@ 6942 train 4.3323 , allloss: 4.3495, dt: 1259.14ms, fracRes: 0.6028, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6876, norm(y): 1.0071, norm:1.1332, tok/sec: 104096.17, flops:91.16, batch-reuse:1
@ 6943 train 4.2981 , allloss: 4.3155, dt: 1256.52ms, fracRes: 0.6025, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6863, norm(y): 1.0072, norm:1.2266, tok/sec: 104313.16, flops:91.35, batch-reuse:1
@ 6944 train 4.2442 , allloss: 4.2618, dt: 1274.64ms, fracRes: 0.6026, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6865, norm(y): 1.0071, norm:1.1391, tok/sec: 102830.37, flops:90.05, batch-reuse:1
@ 6945 train 4.3487 , allloss: 4.3645, dt: 1296.19ms, fracRes: 0.6017, norm(attn): 0.1396, norm(output): 0.2363, norm(x): 0.6873, norm(y): 1.0070, norm:1.6750, tok/sec: 101121.24, flops:88.55, batch-reuse:1
@ 6946 train 4.3293 , allloss: 4.3455, dt: 1285.68ms, fracRes: 0.6027, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6902, norm(y): 1.0069, norm:2.0062, tok/sec: 101947.34, flops:89.27, batch-reuse:1
@ 6947 train 4.2800 , allloss: 4.2972, dt: 1264.49ms, fracRes: 0.6031, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6910, norm(y): 1.0070, norm:1.5521, tok/sec: 103655.64, flops:90.77, batch-reuse:1
@ 6948 train 4.2043 , allloss: 4.2220, dt: 1284.13ms, fracRes: 0.6025, norm(attn): 0.1426, norm(output): 0.2383, norm(x): 0.6895, norm(y): 1.0069, norm:1.0935, tok/sec: 102070.39, flops:89.38, batch-reuse:1
@ 6949 train 4.2575 , allloss: 4.2743, dt: 1275.86ms, fracRes: 0.6033, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6900, norm(y): 1.0071, norm:1.6996, tok/sec: 102732.36, flops:89.96, batch-reuse:1
@ 6950 train 4.2630 , allloss: 4.2805, dt: 1267.00ms, fracRes: 0.6034, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6907, norm(y): 1.0072, norm:1.5199, tok/sec: 103450.27, flops:90.59, batch-reuse:1
@ 6951 train 4.1599 , allloss: 4.1773, dt: 1245.28ms, fracRes: 0.6021, norm(attn): 0.1406, norm(output): 0.2383, norm(x): 0.6922, norm(y): 1.0071, norm:1.1630, tok/sec: 105255.32, flops:92.17, batch-reuse:1
@ 6952 train 4.4537 , allloss: 4.4720, dt: 1265.44ms, fracRes: 0.6027, norm(attn): 0.1406, norm(output): 0.2373, norm(x): 0.6899, norm(y): 1.0070, norm:1.4669, tok/sec: 103578.55, flops:90.70, batch-reuse:1
@ 6953 train 4.2187 , allloss: 4.2359, dt: 1301.26ms, fracRes: 0.6024, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6878, norm(y): 1.0070, norm:1.2520, tok/sec: 100727.15, flops:88.21, batch-reuse:1
@ 6954 train 4.2643 , allloss: 4.2813, dt: 1290.87ms, fracRes: 0.6020, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6871, norm(y): 1.0070, norm:1.0874, tok/sec: 101537.33, flops:88.91, batch-reuse:1
@ 6955 train 4.3429 , allloss: 4.3607, dt: 1261.23ms, fracRes: 0.6027, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6881, norm(y): 1.0071, norm:1.3178, tok/sec: 103923.71, flops:91.00, batch-reuse:1
@ 6956 train 4.4013 , allloss: 4.4196, dt: 1275.61ms, fracRes: 0.6024, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6881, norm(y): 1.0070, norm:1.1838, tok/sec: 102752.80, flops:89.98, batch-reuse:1
@ 6957 train 4.1947 , allloss: 4.2126, dt: 1261.86ms, fracRes: 0.6025, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6865, norm(y): 1.0071, norm:1.2247, tok/sec: 103871.93, flops:90.96, batch-reuse:1
@ 6958 train 4.2328 , allloss: 4.2496, dt: 1278.82ms, fracRes: 0.6026, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6888, norm(y): 1.0072, norm:1.1291, tok/sec: 102494.64, flops:89.75, batch-reuse:1
@ 6959 train 4.2885 , allloss: 4.3050, dt: 1253.59ms, fracRes: 0.6032, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6899, norm(y): 1.0071, norm:1.0940, tok/sec: 104556.98, flops:91.56, batch-reuse:1
@ 6960 train 4.2219 , allloss: 4.2385, dt: 1288.21ms, fracRes: 0.6034, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6884, norm(y): 1.0071, norm:1.0516, tok/sec: 101747.07, flops:89.10, batch-reuse:1
@ 6961 train 4.3143 , allloss: 4.3323, dt: 1284.46ms, fracRes: 0.6040, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6896, norm(y): 1.0071, norm:1.3350, tok/sec: 102044.15, flops:89.36, batch-reuse:1
@ 6962 train 4.2269 , allloss: 4.2453, dt: 1314.33ms, fracRes: 0.6032, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6903, norm(y): 1.0071, norm:1.2554, tok/sec: 99725.36, flops:87.33, batch-reuse:1
@ 6963 train 4.2585 , allloss: 4.2757, dt: 1317.86ms, fracRes: 0.6021, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6867, norm(y): 1.0070, norm:1.4331, tok/sec: 99457.99, flops:87.09, batch-reuse:1
@ 6964 train 4.2607 , allloss: 4.2788, dt: 1287.26ms, fracRes: 0.6019, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6866, norm(y): 1.0070, norm:1.3264, tok/sec: 101822.62, flops:89.16, batch-reuse:1
@ 6965 train 4.3491 , allloss: 4.3675, dt: 1262.80ms, fracRes: 0.6029, norm(attn): 0.1416, norm(output): 0.2373, norm(x): 0.6898, norm(y): 1.0069, norm:1.2008, tok/sec: 103794.78, flops:90.89, batch-reuse:1
@ 6966 train 4.2768 , allloss: 4.2935, dt: 1269.87ms, fracRes: 0.6035, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6902, norm(y): 1.0070, norm:1.3979, tok/sec: 103217.15, flops:90.39, batch-reuse:1
@ 6967 train 4.3077 , allloss: 4.3249, dt: 1274.98ms, fracRes: 0.6033, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6898, norm(y): 1.0069, norm:1.3272, tok/sec: 102803.50, flops:90.02, batch-reuse:1
@ 6968 train 4.3083 , allloss: 4.3273, dt: 1281.94ms, fracRes: 0.6042, norm(attn): 0.1416, norm(output): 0.2373, norm(x): 0.6891, norm(y): 1.0069, norm:1.4285, tok/sec: 102245.04, flops:89.53, batch-reuse:1
@ 6969 train 4.2544 , allloss: 4.2713, dt: 1280.82ms, fracRes: 0.6036, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6873, norm(y): 1.0069, norm:1.0281, tok/sec: 102334.83, flops:89.61, batch-reuse:1
@ 6970 train 4.2513 , allloss: 4.2685, dt: 1270.26ms, fracRes: 0.6032, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6880, norm(y): 1.0071, norm:1.0699, tok/sec: 103184.86, flops:90.36, batch-reuse:1
@ 6971 train 4.3051 , allloss: 4.3222, dt: 1276.96ms, fracRes: 0.6038, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6868, norm(y): 1.0072, norm:1.2289, tok/sec: 102643.61, flops:89.88, batch-reuse:1
@ 6972 train 4.2455 , allloss: 4.2632, dt: 1282.07ms, fracRes: 0.6031, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6901, norm(y): 1.0070, norm:1.0774, tok/sec: 102234.39, flops:89.53, batch-reuse:1
@ 6973 train 4.1568 , allloss: 4.1772, dt: 1257.80ms, fracRes: 0.6027, norm(attn): 0.1416, norm(output): 0.2373, norm(x): 0.6896, norm(y): 1.0072, norm:1.3813, tok/sec: 104207.54, flops:91.25, batch-reuse:1
@ 6974 train 4.2465 , allloss: 4.2642, dt: 1273.71ms, fracRes: 0.6022, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6870, norm(y): 1.0071, norm:1.1986, tok/sec: 102906.03, flops:90.11, batch-reuse:1
@ 6975 train 4.2145 , allloss: 4.2321, dt: 1272.94ms, fracRes: 0.6029, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6883, norm(y): 1.0071, norm:1.1048, tok/sec: 102968.17, flops:90.17, batch-reuse:1
@ 6976 train 4.3761 , allloss: 4.3928, dt: 1259.61ms, fracRes: 0.6029, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6876, norm(y): 1.0070, norm:1.3419, tok/sec: 104057.22, flops:91.12, batch-reuse:1
@ 6977 train 4.2670 , allloss: 4.2840, dt: 1278.59ms, fracRes: 0.6024, norm(attn): 0.1416, norm(output): 0.2373, norm(x): 0.6880, norm(y): 1.0069, norm:1.1760, tok/sec: 102512.62, flops:89.77, batch-reuse:1
@ 6978 train 4.3115 , allloss: 4.3285, dt: 1277.78ms, fracRes: 0.6040, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6909, norm(y): 1.0069, norm:1.3042, tok/sec: 102577.96, flops:89.83, batch-reuse:1
@ 6979 train 4.2029 , allloss: 4.2195, dt: 1281.01ms, fracRes: 0.6041, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6877, norm(y): 1.0071, norm:1.2161, tok/sec: 102319.59, flops:89.60, batch-reuse:1
@ 6980 train 4.1863 , allloss: 4.2032, dt: 1280.61ms, fracRes: 0.6027, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6859, norm(y): 1.0071, norm:1.1524, tok/sec: 102350.91, flops:89.63, batch-reuse:1
@ 6981 train 4.1986 , allloss: 4.2162, dt: 1262.07ms, fracRes: 0.6024, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6847, norm(y): 1.0070, norm:1.1239, tok/sec: 103854.51, flops:90.94, batch-reuse:1
@ 6982 train 4.2354 , allloss: 4.2526, dt: 1249.96ms, fracRes: 0.6025, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6849, norm(y): 1.0070, norm:1.3642, tok/sec: 104860.58, flops:91.82, batch-reuse:1
@ 6983 train 4.2741 , allloss: 4.2908, dt: 1278.03ms, fracRes: 0.6033, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6853, norm(y): 1.0072, norm:1.2012, tok/sec: 102557.81, flops:89.81, batch-reuse:1
@ 6984 train 4.1754 , allloss: 4.1927, dt: 1299.71ms, fracRes: 0.6031, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6894, norm(y): 1.0072, norm:1.1949, tok/sec: 100847.39, flops:88.31, batch-reuse:1
@ 6985 train 4.3157 , allloss: 4.3324, dt: 1284.91ms, fracRes: 0.6033, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6875, norm(y): 1.0070, norm:1.1751, tok/sec: 102008.48, flops:89.33, batch-reuse:1
@ 6986 train 4.1597 , allloss: 4.1767, dt: 1266.26ms, fracRes: 0.6036, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6878, norm(y): 1.0072, norm:1.1009, tok/sec: 103510.94, flops:90.64, batch-reuse:1
@ 6987 train 4.2103 , allloss: 4.2270, dt: 1259.28ms, fracRes: 0.6034, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6848, norm(y): 1.0071, norm:1.2195, tok/sec: 104084.86, flops:91.15, batch-reuse:1
@ 6988 train 4.2145 , allloss: 4.2317, dt: 1289.58ms, fracRes: 0.6048, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6855, norm(y): 1.0071, norm:1.2378, tok/sec: 101639.60, flops:89.00, batch-reuse:1
@ 6989 train 4.2317 , allloss: 4.2485, dt: 1276.87ms, fracRes: 0.6041, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6852, norm(y): 1.0071, norm:1.0369, tok/sec: 102651.05, flops:89.89, batch-reuse:1
@ 6990 train 4.2253 , allloss: 4.2413, dt: 1263.21ms, fracRes: 0.6038, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6854, norm(y): 1.0071, norm:1.3519, tok/sec: 103761.30, flops:90.86, batch-reuse:1
@ 6991 train 4.2280 , allloss: 4.2458, dt: 1275.02ms, fracRes: 0.6035, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6879, norm(y): 1.0071, norm:1.4241, tok/sec: 102800.12, flops:90.02, batch-reuse:1
@ 6992 train 4.2476 , allloss: 4.2644, dt: 1252.77ms, fracRes: 0.6038, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6872, norm(y): 1.0072, norm:1.0839, tok/sec: 104625.91, flops:91.62, batch-reuse:1
@ 6993 train 4.2016 , allloss: 4.2179, dt: 1276.28ms, fracRes: 0.6037, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6846, norm(y): 1.0073, norm:1.1899, tok/sec: 102698.13, flops:89.93, batch-reuse:1
@ 6994 train 4.2001 , allloss: 4.2165, dt: 1280.63ms, fracRes: 0.6030, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6844, norm(y): 1.0072, norm:1.3015, tok/sec: 102349.23, flops:89.63, batch-reuse:1
@ 6995 train 4.1427 , allloss: 4.1593, dt: 1247.24ms, fracRes: 0.6023, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6840, norm(y): 1.0072, norm:1.4337, tok/sec: 105090.01, flops:92.03, batch-reuse:1
@ 6996 train 4.2003 , allloss: 4.2177, dt: 1253.02ms, fracRes: 0.6029, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6832, norm(y): 1.0071, norm:1.0125, tok/sec: 104605.01, flops:91.60, batch-reuse:1
@ 6997 train 4.1570 , allloss: 4.1735, dt: 1267.06ms, fracRes: 0.6031, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6855, norm(y): 1.0072, norm:1.3916, tok/sec: 103445.59, flops:90.59, batch-reuse:1
@ 6998 train 4.2878 , allloss: 4.3044, dt: 1265.34ms, fracRes: 0.6031, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6850, norm(y): 1.0072, norm:1.2523, tok/sec: 103586.77, flops:90.71, batch-reuse:1
@ 6999 train 4.1808 , allloss: 4.1979, dt: 1254.88ms, fracRes: 0.6026, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6852, norm(y): 1.0071, norm:1.2253, tok/sec: 104450.21, flops:91.47, batch-reuse:1
@ 7000 train 4.2617 , allloss: 4.2785, dt: 1272.05ms, fracRes: 0.6041, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6878, norm(y): 1.0071, norm:1.2709, tok/sec: 103039.67, flops:90.23, batch-reuse:1
@ 7001 train 4.1927 , allloss: 4.2102, dt: 1263.01ms, fracRes: 0.6038, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6874, norm(y): 1.0071, norm:1.2606, tok/sec: 103777.29, flops:90.88, batch-reuse:1
@ 7002 train 4.3027 , allloss: 4.3211, dt: 1271.30ms, fracRes: 0.6035, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6863, norm(y): 1.0070, norm:1.2037, tok/sec: 103100.70, flops:90.28, batch-reuse:1
@ 7003 train 4.1822 , allloss: 4.1987, dt: 1275.79ms, fracRes: 0.6029, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6839, norm(y): 1.0072, norm:1.2309, tok/sec: 102737.80, flops:89.97, batch-reuse:1
@ 7004 train 4.1641 , allloss: 4.1807, dt: 1304.52ms, fracRes: 0.6024, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6856, norm(y): 1.0071, norm:1.1072, tok/sec: 100474.91, flops:87.98, batch-reuse:1
@ 7005 train 4.2825 , allloss: 4.2995, dt: 1271.47ms, fracRes: 0.6027, norm(attn): 0.1416, norm(output): 0.2373, norm(x): 0.6854, norm(y): 1.0070, norm:1.1343, tok/sec: 103086.97, flops:90.27, batch-reuse:1
@ 7006 train 4.1826 , allloss: 4.1991, dt: 1269.18ms, fracRes: 0.6032, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6856, norm(y): 1.0071, norm:1.0419, tok/sec: 103273.32, flops:90.43, batch-reuse:1
@ 7007 train 4.2493 , allloss: 4.2668, dt: 1271.64ms, fracRes: 0.6029, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6850, norm(y): 1.0071, norm:1.1836, tok/sec: 103073.37, flops:90.26, batch-reuse:1
@ 7008 train 4.2644 , allloss: 4.2812, dt: 1276.17ms, fracRes: 0.6024, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6846, norm(y): 1.0071, norm:1.1809, tok/sec: 102707.53, flops:89.94, batch-reuse:1
@ 7009 train 4.2187 , allloss: 4.2359, dt: 1259.82ms, fracRes: 0.6018, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6840, norm(y): 1.0071, norm:1.2242, tok/sec: 104040.62, flops:91.11, batch-reuse:1
@ 7010 train 4.1818 , allloss: 4.1994, dt: 1271.55ms, fracRes: 0.6016, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6837, norm(y): 1.0071, norm:1.3051, tok/sec: 103080.44, flops:90.27, batch-reuse:1
@ 7011 train 4.2372 , allloss: 4.2540, dt: 1289.32ms, fracRes: 0.6026, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6844, norm(y): 1.0071, norm:1.1405, tok/sec: 101659.98, flops:89.02, batch-reuse:1
@ 7012 train 4.1646 , allloss: 4.1812, dt: 1282.56ms, fracRes: 0.6036, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6865, norm(y): 1.0071, norm:1.0669, tok/sec: 102195.60, flops:89.49, batch-reuse:1
@ 7013 train 4.2437 , allloss: 4.2606, dt: 1271.33ms, fracRes: 0.6048, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6878, norm(y): 1.0071, norm:1.3896, tok/sec: 103098.19, flops:90.28, batch-reuse:1
@ 7014 train 4.2305 , allloss: 4.2477, dt: 1264.92ms, fracRes: 0.6040, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6887, norm(y): 1.0071, norm:1.1948, tok/sec: 103620.68, flops:90.74, batch-reuse:1
@ 7015 train 4.3161 , allloss: 4.3329, dt: 1268.04ms, fracRes: 0.6041, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6886, norm(y): 1.0069, norm:1.2191, tok/sec: 103366.16, flops:90.52, batch-reuse:1
@ 7016 train 4.2034 , allloss: 4.2199, dt: 1288.39ms, fracRes: 0.6038, norm(attn): 0.1406, norm(output): 0.2344, norm(x): 0.6881, norm(y): 1.0069, norm:1.0439, tok/sec: 101733.21, flops:89.09, batch-reuse:1
@ 7017 train 4.2403 , allloss: 4.2569, dt: 1297.03ms, fracRes: 0.6033, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6876, norm(y): 1.0069, norm:1.0013, tok/sec: 101055.25, flops:88.49, batch-reuse:1
@ 7018 train 4.2141 , allloss: 4.2307, dt: 1260.29ms, fracRes: 0.6032, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6855, norm(y): 1.0069, norm:1.2615, tok/sec: 104001.78, flops:91.07, batch-reuse:1
@ 7019 train 4.2956 , allloss: 4.3125, dt: 1276.20ms, fracRes: 0.6022, norm(attn): 0.1416, norm(output): 0.2373, norm(x): 0.6855, norm(y): 1.0070, norm:1.4634, tok/sec: 102704.54, flops:89.94, batch-reuse:1
@ 7020 train 4.2467 , allloss: 4.2633, dt: 1266.45ms, fracRes: 0.6033, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6863, norm(y): 1.0071, norm:1.3523, tok/sec: 103495.76, flops:90.63, batch-reuse:1
@ 7021 train 4.1792 , allloss: 4.1955, dt: 1274.39ms, fracRes: 0.6042, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6875, norm(y): 1.0071, norm:1.2671, tok/sec: 102850.93, flops:90.07, batch-reuse:1
@ 7022 train 4.3027 , allloss: 4.3192, dt: 1288.42ms, fracRes: 0.6044, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6880, norm(y): 1.0070, norm:1.2532, tok/sec: 101730.79, flops:89.08, batch-reuse:1
@ 7023 train 4.1918 , allloss: 4.2088, dt: 1287.91ms, fracRes: 0.6035, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6864, norm(y): 1.0070, norm:1.4389, tok/sec: 101771.31, flops:89.12, batch-reuse:1
@ 7024 train 4.1935 , allloss: 4.2101, dt: 1254.82ms, fracRes: 0.6032, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6853, norm(y): 1.0070, norm:1.1525, tok/sec: 104454.81, flops:91.47, batch-reuse:1
@ 7025 train 4.1771 , allloss: 4.1939, dt: 1257.30ms, fracRes: 0.6038, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6859, norm(y): 1.0071, norm:1.3233, tok/sec: 104248.89, flops:91.29, batch-reuse:1
@ 7026 train 4.1415 , allloss: 4.1587, dt: 1244.51ms, fracRes: 0.6040, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6892, norm(y): 1.0071, norm:1.1776, tok/sec: 105320.31, flops:92.23, batch-reuse:1
@ 7027 train 4.0932 , allloss: 4.1101, dt: 1267.71ms, fracRes: 0.6030, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6862, norm(y): 1.0072, norm:1.2309, tok/sec: 103392.81, flops:90.54, batch-reuse:1
@ 7028 train 4.0997 , allloss: 4.1177, dt: 1266.26ms, fracRes: 0.6023, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6854, norm(y): 1.0071, norm:1.2907, tok/sec: 103511.49, flops:90.64, batch-reuse:1
@ 7029 train 4.0661 , allloss: 4.0836, dt: 1268.52ms, fracRes: 0.6020, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6860, norm(y): 1.0071, norm:1.1938, tok/sec: 103326.82, flops:90.48, batch-reuse:1
@ 7030 train 4.1090 , allloss: 4.1271, dt: 1282.01ms, fracRes: 0.6019, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6862, norm(y): 1.0070, norm:1.0666, tok/sec: 102239.69, flops:89.53, batch-reuse:1
@ 7031 train 4.1202 , allloss: 4.1387, dt: 1293.40ms, fracRes: 0.6022, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6873, norm(y): 1.0071, norm:1.2640, tok/sec: 101339.27, flops:88.74, batch-reuse:1
@ 7032 train 4.2011 , allloss: 4.2184, dt: 1271.70ms, fracRes: 0.6025, norm(attn): 0.1426, norm(output): 0.2373, norm(x): 0.6866, norm(y): 1.0068, norm:1.2964, tok/sec: 103068.13, flops:90.26, batch-reuse:1
@ 7033 train 4.0876 , allloss: 4.1045, dt: 1273.39ms, fracRes: 0.6029, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6872, norm(y): 1.0071, norm:1.2500, tok/sec: 102931.58, flops:90.14, batch-reuse:1
@ 7034 train 4.1295 , allloss: 4.1462, dt: 1257.04ms, fracRes: 0.6033, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6835, norm(y): 1.0070, norm:1.1301, tok/sec: 104270.33, flops:91.31, batch-reuse:1
@ 7035 train 4.1663 , allloss: 4.1829, dt: 1275.96ms, fracRes: 0.6022, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6836, norm(y): 1.0069, norm:1.1472, tok/sec: 102723.94, flops:89.95, batch-reuse:1
@ 7036 train 4.0722 , allloss: 4.0893, dt: 1269.27ms, fracRes: 0.6026, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6845, norm(y): 1.0071, norm:1.4526, tok/sec: 103265.87, flops:90.43, batch-reuse:1
@ 7037 train 4.0871 , allloss: 4.1045, dt: 1280.65ms, fracRes: 0.6029, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6842, norm(y): 1.0071, norm:1.4146, tok/sec: 102347.75, flops:89.62, batch-reuse:1
@ 7038 train 4.2053 , allloss: 4.2220, dt: 1254.68ms, fracRes: 0.6030, norm(attn): 0.1406, norm(output): 0.2344, norm(x): 0.6819, norm(y): 1.0071, norm:1.4009, tok/sec: 104466.09, flops:91.48, batch-reuse:1
@ 7039 train 4.1711 , allloss: 4.1880, dt: 1261.41ms, fracRes: 0.6035, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6853, norm(y): 1.0071, norm:1.1854, tok/sec: 103908.88, flops:90.99, batch-reuse:1
@ 7040 train 4.0931 , allloss: 4.1106, dt: 1262.32ms, fracRes: 0.6034, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6868, norm(y): 1.0069, norm:1.2502, tok/sec: 103834.03, flops:90.93, batch-reuse:1
@ 7041 train 4.0706 , allloss: 4.0869, dt: 1259.80ms, fracRes: 0.6030, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6844, norm(y): 1.0069, norm:1.2095, tok/sec: 104041.64, flops:91.11, batch-reuse:1
@ 7042 train 4.0374 , allloss: 4.0545, dt: 1274.07ms, fracRes: 0.6029, norm(attn): 0.1426, norm(output): 0.2363, norm(x): 0.6850, norm(y): 1.0069, norm:1.0445, tok/sec: 102876.47, flops:90.09, batch-reuse:1
@ 7043 train 4.2183 , allloss: 4.2359, dt: 1306.77ms, fracRes: 0.6034, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6869, norm(y): 1.0069, norm:1.1883, tok/sec: 100302.10, flops:87.83, batch-reuse:1
@ 7044 train 4.0329 , allloss: 4.0505, dt: 1271.92ms, fracRes: 0.6027, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6857, norm(y): 1.0068, norm:1.0636, tok/sec: 103050.10, flops:90.24, batch-reuse:1
@ 7045 train 4.0995 , allloss: 4.1163, dt: 1277.28ms, fracRes: 0.6028, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6849, norm(y): 1.0069, norm:1.0815, tok/sec: 102617.71, flops:89.86, batch-reuse:1
@ 7046 train 4.1833 , allloss: 4.2002, dt: 1295.23ms, fracRes: 0.6028, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6842, norm(y): 1.0070, norm:1.1315, tok/sec: 101196.29, flops:88.62, batch-reuse:1
@ 7047 train 4.1213 , allloss: 4.1373, dt: 1316.13ms, fracRes: 0.6027, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6847, norm(y): 1.0070, norm:1.1044, tok/sec: 99588.79, flops:87.21, batch-reuse:1
@ 7048 train 4.0577 , allloss: 4.0741, dt: 1301.58ms, fracRes: 0.6026, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6847, norm(y): 1.0070, norm:1.2611, tok/sec: 100702.02, flops:88.18, batch-reuse:1
@ 7049 train 4.1854 , allloss: 4.2020, dt: 1280.33ms, fracRes: 0.6019, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6836, norm(y): 1.0069, norm:1.4750, tok/sec: 102373.59, flops:89.65, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6602, 0.3379, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7734, 0.1030, 0.1235, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7383, 0.0850, 0.1484, 0.0282, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4941, 0.0417, 0.0762, 0.1328, 0.2559, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6719, 0.0933, 0.0625, 0.0483, 0.0786, 0.0464, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2148, 0.0332, 0.0193, 0.1338, 0.3906, 0.1187, 0.0889, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2412, 0.1875, 0.2217, 0.0138, 0.0439, 0.0593, 0.0508, 0.1816, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6445, 0.0762, 0.0613, 0.0098, 0.0334, 0.0166, 0.0659, 0.0347, 0.0562, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1846, 0.1182, 0.2695, 0.0097, 0.0168, 0.0220, 0.0420, 0.1689, 0.0265, 0.1406, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2617, 0.0806, 0.1553, 0.0344, 0.0417, 0.0184, 0.0281, 0.0874, 0.0474, 0.1060, 0.1377, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0381, 0.0171, 0.0079, 0.2441, 0.1680, 0.0625, 0.0510, 0.0620, 0.2305, 0.0786, 0.0339, 0.0063, 0.0000, 0.0000, 0.0000],
        [0.0332, 0.0422, 0.0330, 0.0894, 0.1001, 0.0889, 0.0742, 0.0513, 0.1250, 0.1797, 0.0796, 0.0771, 0.0267, 0.0000, 0.0000],
        [0.3789, 0.0645, 0.0474, 0.0054, 0.0280, 0.0162, 0.0471, 0.0227, 0.0449, 0.0242, 0.1089, 0.0581, 0.1162, 0.0371, 0.0000],
        [0.1289, 0.1060, 0.1182, 0.0786, 0.0364, 0.0105, 0.0137, 0.0918, 0.0194, 0.0679, 0.0349, 0.0854, 0.1406, 0.0220, 0.0464]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0030, -0.0057, -0.0018,  ..., -0.0380,  0.0171,  0.0060],
        [-0.0452,  0.0038, -0.0082,  ...,  0.0068,  0.0059,  0.0017],
        [ 0.0287,  0.0365, -0.0069,  ..., -0.0241,  0.0232, -0.0071],
        ...,
        [ 0.0324,  0.0211,  0.0123,  ..., -0.0377,  0.0122,  0.0214],
        [-0.0511,  0.0028, -0.0332,  ...,  0.0098, -0.0012, -0.0151],
        [-0.0266,  0.0083, -0.0210,  ...,  0.0091, -0.0273, -0.0130]], device='cuda:0', requires_grad=True)
K: tensor([     1.2266,      0.5898,      0.0645,      0.3066,      0.6133,     -0.0008,      0.5195,     -0.6562,     -0.4355,     -0.3164,      0.3145,     -0.2695,      0.0981,     -0.6211,     -0.0698,     -0.5547,     -0.2539,      0.1592,     -1.0391,      0.7148,      0.8320,      0.7617,
            -0.6094,      0.6641,     -0.3066,     -0.6562,     -0.8281,     -0.0121,      0.5508,     -0.2695,      1.2969,     -0.0684,      0.9102,     -0.3457,      0.5352,      1.3828,     -1.3750,      0.1641,     -0.1533,     -2.4375,      0.2910,      0.2344,     -0.3027,      1.1875,
            -0.1094,      0.1611,     -0.0474,      0.7891,      0.7188,     -0.7344,      0.3867,      0.0535,     -1.6875,      0.3184,      1.4844,     -0.7656,     -0.5625,      0.2393,      1.0234,     -0.2598,      0.2910,     -0.3223,     -0.2598,     -0.1118], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[-0.0283, -0.0037, -0.0151,  ...,  0.0098, -0.0032, -0.0186],
        [ 0.0261, -0.0142,  0.0159,  ...,  0.0061,  0.0370,  0.0085],
        [-0.0483,  0.0413,  0.0045,  ..., -0.0168, -0.0359, -0.0474],
        ...,
        [ 0.0076,  0.0051,  0.0252,  ...,  0.0222,  0.0179,  0.0193],
        [ 0.0190, -0.0080,  0.0365,  ...,  0.0271,  0.0092,  0.0213],
        [ 0.0159, -0.0090,  0.0255,  ..., -0.0221,  0.0242,  0.0066]], device='cuda:0', requires_grad=True)
Q: tensor([-0.3906, -0.3418, -1.0234, -1.1641, -0.0204, -0.0483, -2.4375, -0.2422,  0.2676,  0.6875, -0.8438, -0.7109, -0.2422, -0.7031, -0.4238, -0.1357, -0.3379, -0.0845,  0.3359,  0.6094,  0.1611, -0.0101,  0.9414,  0.4570,  0.5000, -0.1348, -0.5117, -1.1484, -0.4648,  0.3066,  0.0801,  0.5000,
        -0.5977, -0.8867,  0.2139, -0.1377,  1.0938,  0.9570, -0.3418,  1.4062,  1.4922,  0.2100,  0.4277,  0.6445, -0.6445,  0.6602, -0.5625,  0.2559, -0.4414,  0.4082, -1.6016, -0.7188,  0.2090, -1.0469, -0.3633, -0.7305,  0.6289, -0.9453,  0.1484, -0.3477, -0.3242,  0.2988,  0.3164,  0.9961],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.6719, -0.9727, -1.4453, -2.8438, -2.5156, -1.0938, -0.2793, -2.6250, -1.7734, -3.0625, -1.5781,  0.5547, -2.6094, -1.4844],
        [ 0.0000, -2.0156, -1.8359, -1.0078, -0.4160, -1.7969, -2.1094, -0.9609, -0.5352, -0.5312, -0.1592, -0.9414, -0.9258,  0.1670, -0.9297],
        [ 0.0000, -2.1562, -1.6016, -3.2656, -1.6719, -2.8125, -2.4844, -2.7500, -1.8828, -2.2500,  0.1729, -0.8516, -2.0625, -1.6797, -1.7578],
        [ 0.0000, -2.4688, -1.8750, -1.3125, -0.6602, -2.4688, -2.3438, -1.9297, -0.6172, -0.7539, -0.2500, -1.3828, -1.5547, -0.0303, -0.9219],
        [ 0.0000, -1.9688, -2.3750, -2.6250, -2.1406, -2.6719, -1.0078, -2.1406, -1.4219, -2.8438, -1.7891, -2.4219, -1.8516, -1.1484, -1.4922],
        [ 0.0000, -1.8672, -2.4219, -0.4746,  0.5977, -0.5938, -0.8867, -2.1562,  1.1797,  0.0069,  1.8672, -0.9180, -2.5781,  1.5312,  0.0510],
        [ 0.0000, -0.2539, -0.0830, -2.8594, -1.7031, -1.4062, -1.5625, -0.2852, -1.3281, -0.2305, -0.2949,  0.4727,  0.6094, -1.8906, -0.6094],
        [ 0.0000, -2.1406, -2.3594, -4.1875, -2.9531, -3.6719, -2.2812, -2.9219, -2.4375, -2.9531, -1.4688, -2.0156, -1.2812, -2.6719, -2.0938],
        [ 0.0000, -0.4453,  0.3809, -2.9375, -2.3906, -2.1250, -1.4844, -0.0908, -1.9375, -0.2773, -0.5078,  0.8242,  1.4453, -2.5000, -0.2832],
        [ 0.0000, -1.1797, -0.5234, -2.0312, -1.8359, -2.6562, -2.2344, -1.1016, -1.7109, -0.9062, -0.6445, -0.1729, -0.3047, -1.7422, -0.8281],
        [ 0.0000, -0.8047, -1.5703,  1.8594,  1.4844,  0.4941,  0.2930,  0.4863,  1.7969,  0.7227, -0.1162, -1.7969, -0.5938,  2.4844,  0.7617],
        [ 0.0000,  0.2393, -0.0087,  0.9883,  1.1016,  0.9805,  0.8008,  0.4355,  1.3203,  1.6875,  0.8750,  0.8398, -0.2197,  1.4297,  1.1172],
        [ 0.0000, -1.7734, -2.0781, -4.2500, -2.6094, -3.1562, -2.0781, -2.8125, -2.1406, -2.7500, -1.2500, -1.8750, -1.1875, -2.3281, -2.0469],
        [ 0.0000, -0.1953, -0.0864, -0.4902, -1.2656, -2.5000, -2.2344, -0.3398, -1.8906, -0.6367, -1.3047, -0.4082,  0.0889, -1.7656, -1.0234]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8321],
        [0.8369],
        [0.8210],
        [0.5541],
        [0.6478],
        [0.4756],
        [0.4652],
        [0.4717],
        [0.4006],
        [0.2028],
        [0.1437],
        [0.1394],
        [0.2306],
        [0.1527]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9766, 0.0239, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7891, 0.1709, 0.0417, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8125, 0.1377, 0.0330, 0.0166, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2520, 0.1953, 0.0728, 0.1318, 0.3477, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6211, 0.1118, 0.0242, 0.0243, 0.0576, 0.1611, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1348, 0.2002, 0.0142, 0.0369, 0.0996, 0.4707, 0.0435, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3340, 0.1533, 0.0422, 0.0508, 0.0457, 0.2539, 0.0796, 0.0413, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1748, 0.0564, 0.0156, 0.0121, 0.0308, 0.1436, 0.1318, 0.0109, 0.4238, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2617, 0.0613, 0.0383, 0.0469, 0.0204, 0.1416, 0.0393, 0.1611, 0.1826, 0.0464, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3027, 0.0337, 0.0013, 0.0037, 0.0223, 0.0267, 0.0312, 0.0010, 0.1514, 0.0020, 0.4238, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2617, 0.0591, 0.0398, 0.0261, 0.0378, 0.1157, 0.1709, 0.0566, 0.0518, 0.0535, 0.1040, 0.0226, 0.0000, 0.0000, 0.0000],
        [0.0250, 0.0109, 0.0134, 0.0352, 0.0238, 0.1187, 0.0762, 0.0466, 0.1855, 0.0708, 0.1914, 0.0552, 0.1475, 0.0000, 0.0000],
        [0.0601, 0.0137, 0.0038, 0.0050, 0.0082, 0.0474, 0.0654, 0.0043, 0.1455, 0.0078, 0.1582, 0.0130, 0.0156, 0.4512, 0.0000],
        [0.0649, 0.0349, 0.0044, 0.0049, 0.0192, 0.0786, 0.0457, 0.0282, 0.0742, 0.0234, 0.1650, 0.0801, 0.0566, 0.2119, 0.1079]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0343, -0.0169, -0.0169,  ..., -0.0188, -0.0238,  0.0181],
        [-0.0191,  0.0200, -0.0171,  ...,  0.0151,  0.0018, -0.0527],
        [ 0.0168,  0.0249,  0.0167,  ...,  0.0130,  0.0263,  0.0172],
        ...,
        [-0.0049, -0.0094,  0.0245,  ...,  0.0401, -0.0209, -0.0149],
        [-0.0176, -0.0048,  0.0035,  ...,  0.0102,  0.0009, -0.0103],
        [ 0.0329,  0.0409,  0.0149,  ..., -0.0036, -0.0197,  0.0227]], device='cuda:0', requires_grad=True)
K: tensor([ 2.5000, -0.6641, -1.5781, -1.0625, -1.1016, -1.4219, -0.1426,  0.2500,  0.8398,  0.8750,  0.8828,  1.3906, -1.9688,  0.8477,  0.6055, -2.6875, -0.2275, -0.5156, -0.0091,  1.6797, -0.0854,  1.7969,  1.1250, -2.3281,  0.0510, -0.6758, -1.8047,  0.5078,  0.8945, -1.0859,  3.3906,  0.8750,
        -1.8594, -0.2344, -2.2188,  1.1328,  1.4453,  2.3594, -0.6836,  1.6484,  2.5625, -0.1729, -1.4062,  2.5156,  1.3828, -0.3828, -1.7969, -3.2500,  2.0000,  1.3359, -1.7578,  2.8281, -1.3594, -0.3535,  0.2617,  1.0625,  2.1562,  0.8750, -0.9023,  2.0781, -0.1299,  2.0312,  3.1406, -0.7227],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0197, -0.0026, -0.0128,  ...,  0.0024,  0.0168, -0.0094],
        [ 0.0168,  0.0033, -0.0521,  ..., -0.0119, -0.0037, -0.0153],
        [ 0.0445,  0.0148,  0.0291,  ..., -0.0200,  0.0270,  0.0145],
        ...,
        [-0.0214, -0.0165,  0.0142,  ...,  0.0161, -0.0022, -0.0410],
        [ 0.0391,  0.0153, -0.0076,  ..., -0.0023, -0.0046, -0.0102],
        [ 0.0052, -0.0299, -0.0181,  ...,  0.0113, -0.0050,  0.0142]], device='cuda:0', requires_grad=True)
Q: tensor([-1.0547, -0.2676, -0.8516, -0.6875,  0.6719, -0.9336, -0.2617,  1.1016,  0.4590,  0.4375,  0.0601, -1.1016,  0.3223, -1.3203, -0.1973,  1.6797, -1.7344,  0.4160, -1.9219, -1.4453,  0.4102,  0.3926, -0.7812,  1.5078, -0.4355,  0.3535,  1.1641, -0.8047, -1.1172, -0.0432, -0.5156, -2.0781,
        -1.3906,  0.5742,  0.4219,  0.7344,  1.5938,  0.0215,  1.3516,  1.1094,  0.9766,  0.2041, -1.3750,  0.4414,  0.9453, -2.2500,  1.3203, -1.6953,  1.1172,  0.8789,  0.0608, -0.3145, -1.6562, -1.3125, -0.1846,  0.7852,  0.1074,  0.8555,  1.1484,  0.8477, -0.6914,  0.2969, -0.4473, -0.7930],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -3.7031,     -8.1250,     -8.1875,     -6.6875,     -5.1875,     -6.6562,     -9.6250,     -4.9375,    -10.1250,     -6.8125,     -9.5625,     -9.1875,     -5.0625,     -6.6250],
        [     0.0000,     -1.5312,     -2.9375,     -3.7031,     -3.1719,     -1.3281,     -2.1094,     -2.0312,     -2.2500,     -2.0312,     -2.5781,     -1.9141,     -1.6562,     -1.9453,     -1.4453],
        [     0.0000,     -1.7812,     -3.2031,     -3.8906,     -3.7500,     -2.6562,     -3.4844,     -4.5000,     -3.5938,     -4.2500,     -3.6875,     -4.3750,     -4.3438,     -3.5938,     -2.3594],
        [     0.0000,     -0.2598,     -1.2500,     -0.6484,      0.3203,      0.9336,      0.5625,     -1.5625,      2.9844,     -0.7461,      3.2500,     -0.6445,      0.0231,      4.4375,      1.7891],
        [     0.0000,     -1.7188,     -3.2500,     -3.2500,     -2.3750,     -1.3516,     -1.4297,     -2.5469,     -1.2344,     -1.9688,     -1.1875,     -1.5156,     -1.8984,     -0.6797,     -1.1250],
        [     0.0000,      0.3945,     -2.2500,     -1.2969,     -0.3027,      1.2500,     -1.1328,     -2.1094,      1.8750,     -2.1406,     -0.3809,     -1.0938,     -0.6328,      2.4062,      0.5859],
        [     0.0000,     -0.7773,     -2.0625,     -1.8828,     -1.9922,     -0.2773,     -1.4297,     -2.0938,     -0.0522,     -2.0312,     -0.7773,     -1.8125,     -0.8203,      0.4473,     -0.7383],
        [     0.0000,     -1.1328,     -2.4219,     -2.6719,     -1.7344,     -0.1953,     -0.2832,     -2.7812,      0.8867,     -2.4844,      0.5664,     -1.7188,     -1.5625,      1.9219,      0.4121],
        [     0.0000,     -1.4531,     -1.9219,     -1.7188,     -2.5469,     -0.6133,     -1.8984,     -0.4844,     -0.3594,     -1.7266,     -1.7344,      0.0557,      0.4199,      0.0078,     -1.7188],
        [     0.0000,     -2.2031,     -5.4375,     -4.4062,     -2.6094,     -2.4219,     -2.2656,     -5.6875,     -0.6914,     -5.0312,      0.3379,     -4.1562,     -4.7500,      0.2832,     -2.0781],
        [     0.0000,     -1.4922,     -1.8828,     -2.3125,     -1.9375,     -0.8164,     -0.4316,     -1.5312,     -1.6250,     -1.5859,     -0.9258,     -2.4531,     -1.6016,     -1.0234,     -0.3340],
        [     0.0000,     -0.8320,     -0.6172,      0.3398,     -0.0486,      1.5547,      1.1094,      0.6250,      2.0156,      1.0469,      2.0312,      0.7930,      1.7734,      3.1406,      1.9922],
        [     0.0000,     -1.4688,     -2.7500,     -2.4844,     -1.9844,     -0.2354,      0.0894,     -2.6406,      0.8828,     -2.0312,      0.9727,     -1.5234,     -1.3516,      2.0156,      0.2676],
        [     0.0000,     -0.6172,     -2.6875,     -2.5781,     -1.2188,      0.1973,     -0.3496,     -0.8281,      0.1348,     -1.0156,      0.9336,      0.2129,     -0.1348,      1.1875,      0.5117]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8521],
        [0.4941],
        [0.4775],
        [0.4925],
        [0.4510],
        [0.2672],
        [0.2028],
        [0.2620],
        [0.2481],
        [0.3195],
        [0.1478],
        [0.1231],
        [0.1655],
        [0.1586]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0004,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0026,     0.0026,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0014,     0.0005,     0.0004,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0002,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0013,     0.0016,     0.0002,     0.0004,     0.0010,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9766,     0.0039,     0.0052,     0.0011,     0.0009,     0.0025,     0.0086,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9180,     0.0096,     0.0111,     0.0042,     0.0023,     0.0055,     0.0112,     0.0376,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0007,     0.0006,     0.0002,     0.0002,     0.0006,     0.0014,     0.0007,     0.0007,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0004,     0.0002,     0.0001,     0.0001,     0.0003,     0.0005,     0.0003,     0.0002,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9766,     0.0034,     0.0034,     0.0012,     0.0006,     0.0014,     0.0033,     0.0048,     0.0018,     0.0016,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0004,     0.0003,     0.0001,     0.0001,     0.0002,     0.0006,     0.0007,     0.0002,     0.0001,     0.0000,     0.0024,     0.0000,     0.0000,     0.0000],
        [    0.9609,     0.0016,     0.0018,     0.0009,     0.0004,     0.0010,     0.0025,     0.0051,     0.0015,     0.0026,     0.0001,     0.0084,     0.0130,     0.0000,     0.0000],
        [    0.9922,     0.0006,     0.0006,     0.0002,     0.0001,     0.0005,     0.0012,     0.0007,     0.0006,     0.0003,     0.0000,     0.0012,     0.0015,     0.0005,     0.0000],
        [    0.9961,     0.0002,     0.0002,     0.0001,     0.0001,     0.0002,     0.0004,     0.0002,     0.0002,     0.0001,     0.0000,     0.0002,     0.0003,     0.0001,     0.0003]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0002, -0.0014,  0.0229,  ..., -0.0158, -0.0036, -0.0149],
        [ 0.0363, -0.0431, -0.0151,  ..., -0.0085, -0.0177, -0.0355],
        [ 0.0432, -0.0351,  0.0332,  ..., -0.0063, -0.0150,  0.0070],
        ...,
        [ 0.0337,  0.0150, -0.0246,  ...,  0.0025,  0.0206,  0.0155],
        [ 0.0159,  0.0229, -0.0113,  ..., -0.0172, -0.0419, -0.0192],
        [ 0.0216, -0.0096,  0.0062,  ..., -0.0012, -0.0152,  0.0142]], device='cuda:0', requires_grad=True)
K: tensor([-1.1641, -0.6406, -1.3516, -0.4648, -1.7891,  2.2500, -1.3672,  2.3438, -1.5000, -1.6875,  1.4375,  0.1436, -1.7812, -1.0234, -1.6719,  0.4160,  1.2891,  2.8125, -1.9453,  1.5938,  2.5938,  0.6992, -1.3281, -0.4180,  1.4609, -1.1172,  0.2773, -2.0625,  1.7500,  0.8906,  1.0625,  2.7031,
        -0.9883,  1.6562,  1.9922, -1.4062, -1.4062,  1.6328,  1.6016, -1.6953,  2.1250, -2.4531,  0.2402,  0.7656,  0.0938,  2.1875, -1.1406, -2.8125,  0.7539,  2.5938, -1.3750, -1.6797,  1.7578,  0.4375,  2.0938, -1.2422, -1.4609, -2.4844, -1.8906, -1.6953, -2.7188, -1.4922,  1.4688,  1.2188],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0082,  0.0253,  0.0254,  ..., -0.0174,  0.0428, -0.0154],
        [ 0.0006,  0.0416,  0.0026,  ...,  0.0225,  0.0288, -0.0128],
        [-0.0173, -0.0052,  0.0181,  ..., -0.0166,  0.0545, -0.0325],
        ...,
        [ 0.0146, -0.0107,  0.0130,  ..., -0.0248, -0.0056, -0.0032],
        [ 0.0122,  0.0018,  0.0133,  ...,  0.0253,  0.0194, -0.0095],
        [ 0.0147, -0.0299, -0.0232,  ...,  0.0277,  0.0260,  0.0070]], device='cuda:0', requires_grad=True)
Q: tensor([ 1.3125,  1.1953, -1.1562,  0.2988,  0.2246, -0.4922,  0.5391, -0.0349,  0.3281,  0.4512, -0.2285,  0.0659,  0.7266,  1.4453,  0.3340, -1.6953, -0.9688, -2.0156,  1.3359,  0.0354, -0.2930,  0.9258,  0.7969,  0.2773, -0.1318, -0.0840,  0.4668, -0.0344, -0.7422, -0.9336, -0.4551, -0.3145,
        -0.3535, -1.4141, -0.7500, -0.0388,  1.4141, -0.7617, -0.2490, -0.0903, -2.1875,  1.8359,  0.5078, -0.2109,  0.1758, -0.6484,  1.1406,  0.2832, -1.1875, -1.1406,  0.8594, -0.6523, -0.8945, -0.2969, -0.3906,  1.0938, -0.2520,  1.2344,  1.3438,  1.9844,  1.1953,  0.6133, -1.6562, -0.1426],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000,  -7.7500,  -7.9062,  -9.1250,  -9.1250,  -8.1875,  -7.6250,  -7.1875,  -8.5625,  -8.6875, -10.3750,  -7.1875,  -7.2188,  -8.6875,  -8.3125],
        [  0.0000,  -5.9375,  -5.9375,  -7.0312,  -7.5000,  -6.3438,  -5.9688,  -5.2500,  -6.4688,  -6.2188,  -8.6250,  -5.5938,  -5.3125,  -6.5938,  -6.0000],
        [  0.0000,  -6.5625,  -7.5938,  -7.8125,  -8.9375,  -7.2188,  -7.1250,  -7.1875,  -7.5938,  -7.6875,  -9.5000,  -7.1875,  -6.6875,  -7.8125,  -7.2500],
        [  0.0000,  -8.9375,  -8.7500, -10.5625,  -9.1250,  -8.9375,  -7.5625,  -8.1875,  -8.7500, -10.1875, -11.3750,  -8.0625,  -8.0625,  -9.0625,  -8.8125],
        [  0.0000,  -6.6875,  -6.4688,  -8.3125,  -7.7500,  -6.9375,  -5.5000,  -6.2500,  -7.3125,  -7.7812,  -9.1875,  -6.3750,  -6.3438,  -7.4375,  -6.7188],
        [  0.0000,  -5.5312,  -5.2188,  -6.7500,  -6.9688,  -5.9375,  -4.7188,  -4.8438,  -5.8750,  -6.5938,  -8.0000,  -4.5625,  -4.9688,  -5.9375,  -5.6250],
        [  0.0000,  -4.5625,  -4.4062,  -5.4062,  -6.0000,  -5.1250,  -4.4062,  -3.2031,  -4.5625,  -4.1562,  -6.9688,  -3.0781,  -3.0000,  -4.5312,  -4.3125],
        [  0.0000,  -7.3125,  -7.3750,  -8.4375,  -8.6875,  -7.5000,  -6.5625,  -7.2812,  -7.2500,  -8.2500, -10.0000,  -6.8125,  -6.5312,  -7.4375,  -7.1562],
        [  0.0000,  -7.9062,  -8.5625,  -9.2500,  -9.6875,  -8.2500,  -7.5938,  -8.0625,  -8.5625,  -8.0625, -10.8750,  -7.7500,  -7.5938,  -8.8125,  -8.6250],
        [  0.0000,  -5.6562,  -5.6875,  -6.7188,  -7.3750,  -6.5000,  -5.6875,  -5.3125,  -6.2812,  -6.4375,  -8.1875,  -4.8438,  -5.0312,  -6.2500,  -5.8750],
        [  0.0000,  -7.8750,  -8.1250,  -9.4375,  -9.0625,  -8.6875,  -7.4375,  -7.3125,  -8.5000,  -9.0625, -10.8125,  -6.0312,  -6.6875,  -8.6875,  -8.9375],
        [  0.0000,  -6.4375,  -6.3125,  -6.9688,  -7.8750,  -6.8125,  -5.9688,  -5.2500,  -6.4688,  -5.9062,  -9.1250,  -4.7500,  -4.3125,  -6.5625,  -6.8125],
        [  0.0000,  -7.5000,  -7.4375,  -8.5625,  -9.0000,  -7.6875,  -6.7500,  -7.2812,  -7.4375,  -8.2500, -10.3125,  -6.7500,  -6.5312,  -7.6250,  -7.4062],
        [  0.0000,  -8.3125,  -8.5000,  -9.6250,  -9.0000,  -8.6875,  -7.8750,  -8.3125,  -8.6250,  -9.3750, -11.3750,  -8.3750,  -8.0625,  -9.0625,  -8.1875]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9967],
        [0.9977],
        [0.9987],
        [0.9990],
        [0.9932],
        [0.9961],
        [0.9720],
        [0.9967],
        [0.9993],
        [0.9961],
        [0.9984],
        [0.9935],
        [0.9971],
        [0.9987]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0698, 0.9297, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0430, 0.4941, 0.4629, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0398, 0.3672, 0.4395, 0.1533, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0728, 0.5234, 0.2305, 0.0684, 0.1064, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0260, 0.4512, 0.1504, 0.0776, 0.1113, 0.1826, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0134, 0.1396, 0.0581, 0.0354, 0.0141, 0.0282, 0.7109, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0106, 0.0742, 0.0520, 0.0106, 0.0118, 0.0386, 0.6562, 0.1475, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0194, 0.1436, 0.0132, 0.0048, 0.0151, 0.0195, 0.7266, 0.0337, 0.0234, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0100, 0.0618, 0.0361, 0.0080, 0.0139, 0.0413, 0.3262, 0.1367, 0.0923, 0.2734, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0126, 0.0259, 0.0201, 0.0046, 0.0044, 0.0132, 0.4238, 0.0559, 0.0247, 0.3809, 0.0334, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0107, 0.0281, 0.0248, 0.0055, 0.0049, 0.0127, 0.2236, 0.0796, 0.0278, 0.1709, 0.0576, 0.3535, 0.0000, 0.0000, 0.0000],
        [0.0173, 0.0469, 0.0232, 0.0042, 0.0039, 0.0165, 0.1973, 0.0500, 0.0209, 0.1279, 0.0757, 0.2256, 0.1904, 0.0000, 0.0000],
        [0.0312, 0.0811, 0.0070, 0.0019, 0.0051, 0.0093, 0.3203, 0.0129, 0.0072, 0.0608, 0.2070, 0.1406, 0.0771, 0.0396, 0.0000],
        [0.0101, 0.0198, 0.0066, 0.0021, 0.0019, 0.0047, 0.0688, 0.0154, 0.0139, 0.0393, 0.0214, 0.1338, 0.1226, 0.0771, 0.4629]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[    -0.0065,      0.0075,      0.0024,  ...,     -0.0324,     -0.0082,     -0.0343],
        [    -0.0451,     -0.0086,     -0.0016,  ...,      0.0070,     -0.0046,      0.0032],
        [    -0.0451,     -0.0116,      0.0518,  ...,     -0.0136,     -0.0198,     -0.0250],
        ...,
        [    -0.0141,     -0.0273,     -0.0075,  ...,     -0.0349,     -0.0398,     -0.0540],
        [    -0.0205,     -0.0218,     -0.0200,  ...,     -0.0041,     -0.0162,      0.0374],
        [     0.0001,      0.0128,      0.0162,  ...,     -0.0098,      0.0111,     -0.0118]], device='cuda:0', requires_grad=True)
K: tensor([-1.7812, -1.4531, -0.8164, -0.2578, -0.6797, -2.0625, -1.6406,  0.9336,  0.4277, -2.3750,  0.2754, -1.9297,  2.2500, -2.2500, -0.3027,  1.8359,  2.0625, -0.0413,  0.7188, -0.1631,  0.4551, -1.1016,  0.3809, -1.6797, -1.2266,  0.4570, -0.5977,  1.8984, -0.0322,  1.6406, -1.1250, -2.0000,
        -1.2266, -1.0000,  1.1016, -1.4062,  2.7812,  0.4746, -1.6172,  0.7031, -2.4375,  0.9727,  0.9492,  2.0938,  0.6289, -0.3359, -2.1406, -0.6562,  2.1875,  0.7227,  0.8828, -0.3359, -0.9531, -2.1719, -1.6172, -2.0312,  2.3438, -1.0781, -1.0781,  1.4609, -0.6094, -0.5703,  0.9766, -1.2422],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0124, -0.0030,  0.0158,  ...,  0.0249, -0.0169, -0.0163],
        [ 0.0367, -0.0093,  0.0193,  ..., -0.0094,  0.0212,  0.0188],
        [-0.0205,  0.0126,  0.0456,  ...,  0.0189,  0.0264, -0.0083],
        ...,
        [ 0.0198,  0.0006, -0.0311,  ..., -0.0068,  0.0035, -0.0067],
        [-0.0107,  0.0402, -0.0106,  ...,  0.0128,  0.0046, -0.0303],
        [-0.0073, -0.0074, -0.0049,  ...,  0.0136,  0.0030, -0.0042]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.4609, -1.1953, -1.2891,  1.1484, -2.9375,  0.2129, -0.3730, -0.6367,  0.4551, -0.7578, -0.0737,  0.7383, -2.2656, -1.8750,  2.0156, -0.1118, -1.6953, -0.6133,  0.2129, -1.0078, -1.3359,  2.2969, -2.3750, -1.5391, -1.2188, -1.0781,  2.2500,  3.0781, -3.1094,  0.9531,  0.0991, -0.6367,
        -3.0938,  2.1875, -2.3750, -1.7188,  2.0938, -0.8164, -1.6094,  0.6133, -0.4492, -0.5508,  2.4844, -0.7188, -1.3047, -2.4844, -0.6055, -3.0469,  1.0312,  1.5547,  0.6523,  0.7148, -1.1797, -0.5742,  0.1758, -0.3457, -0.7227,  0.2910, -0.8398,  0.3711, -1.9531,  1.9219,  0.7578, -2.7031],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      2.5938,      1.9141,      1.4531,      1.8203,      1.6484,      4.3125,      3.0469,      2.8594,      3.3281,      2.9219,      4.0000,      4.1875,      3.9219,      5.8438],
        [     0.0000,      2.4375,      2.3750,      1.4453,      1.6250,      2.0156,      4.3125,      3.5938,      2.9375,      4.0938,      3.0781,      5.0625,      5.2812,      4.3125,      6.1250],
        [     0.0000,      2.2188,      2.4062,      1.3516,      1.7578,      2.2812,      3.9844,      3.3750,      3.1406,      5.0625,      4.1250,      6.0312,      5.7188,      4.8438,      6.7188],
        [     0.0000,      1.9688,      1.1562,     -0.0630,      0.3809,      1.3672,      3.7656,      2.8125,      2.0625,      3.7812,      2.6719,      4.4062,      4.4688,      3.8438,      6.1875],
        [     0.0000,      2.8594,      1.7578,      1.0938,      1.4531,      1.9531,      4.7188,      3.2500,      2.9062,      4.3438,      4.7188,      5.1250,      4.7812,      4.6562,      7.3438],
        [     0.0000,      2.3438,      1.4609,      0.9688,      0.0481,      0.7422,      3.9688,      3.2812,      1.9375,      3.5156,      0.2852,      4.9375,      5.0312,      3.4531,      7.3750],
        [     0.0000,      1.9453,      1.5859,      0.0015,      0.1099,      1.2891,      4.1250,      2.6406,      1.6875,      3.8438,      2.9688,      4.7188,      4.4375,      3.5000,      7.0938],
        [     0.0000,      2.0000,     -0.3848,     -1.3906,     -0.2490,      0.0103,      3.6250,      0.5547,      0.1875,      2.1250,      3.4219,      3.0469,      2.3438,      1.9141,      5.4688],
        [     0.0000,      1.8203,      1.2812,     -0.2256,      0.3281,      1.4141,      3.4844,      2.6094,      2.2188,      3.3125,      2.7812,      4.2188,      4.5625,      4.0312,      6.6562],
        [     0.0000,      0.7148,      0.4648,     -1.0000,     -1.0547,      0.0496,      3.5156,      1.4844,      0.6680,      3.4062,      0.9766,      4.2500,      3.5781,      2.4844,      7.0938],
        [     0.0000,      0.9648,      0.8359,     -0.6758,     -0.7852,      0.1670,      3.0312,      2.0000,      0.9531,      2.7656,      1.6797,      3.5000,      3.9375,      2.7500,      5.2812],
        [     0.0000,      0.9961,      0.2949,     -1.4062,     -1.4844,     -0.0469,      2.4375,      1.0625,      0.1885,      2.0000,      1.4766,      2.5781,      2.4062,      1.8594,      5.4062],
        [     0.0000,      0.9531,     -1.5000,     -2.8125,     -1.8125,     -1.2188,      2.3281,     -0.8867,     -1.4766,      0.6641,      1.8906,      1.5000,      0.9023,      0.2354,      4.0938],
        [     0.0000,      0.6680,     -0.4355,     -1.6016,     -1.6953,     -0.7734,      1.9141,      0.4180,      0.3145,      1.3516,      0.7422,      2.5781,      2.4844,      2.0312,      3.8125]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4662],
        [0.0918],
        [0.1002],
        [0.1265],
        [0.0799],
        [0.2400],
        [0.0594],
        [0.0736],
        [0.0622],
        [0.1036],
        [0.0601],
        [0.0596],
        [0.0620],
        [0.0812]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0247, 0.9766, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0118, 0.9492, 0.0400, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0117, 0.8242, 0.0444, 0.1211, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0053, 0.7305, 0.1221, 0.0649, 0.0781, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0211, 0.5742, 0.0771, 0.0139, 0.1050, 0.2090, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0347, 0.2773, 0.4922, 0.0320, 0.0211, 0.0859, 0.0564, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0087, 0.0728, 0.2402, 0.0200, 0.2656, 0.0156, 0.0206, 0.3574, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0371, 0.2812, 0.1182, 0.0146, 0.0356, 0.0161, 0.0432, 0.4023, 0.0498, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0067, 0.3633, 0.0420, 0.0510, 0.0188, 0.0114, 0.0747, 0.2988, 0.0178, 0.1147, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0583, 0.1094, 0.0342, 0.0081, 0.0081, 0.0124, 0.0173, 0.2734, 0.0166, 0.3789, 0.0830, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0493, 0.3848, 0.0437, 0.0669, 0.0078, 0.0109, 0.1084, 0.1328, 0.0042, 0.0850, 0.0574, 0.0483, 0.0000, 0.0000, 0.0000],
        [0.0137, 0.0713, 0.0096, 0.0019, 0.0576, 0.0020, 0.0121, 0.0188, 0.1299, 0.2012, 0.0850, 0.1660, 0.2314, 0.0000, 0.0000],
        [0.0173, 0.0845, 0.0072, 0.0017, 0.0083, 0.0026, 0.0112, 0.0347, 0.0079, 0.1885, 0.0266, 0.0486, 0.5234, 0.0393, 0.0000],
        [0.0513, 0.5000, 0.0254, 0.0270, 0.0192, 0.0101, 0.1074, 0.0266, 0.0031, 0.0160, 0.0461, 0.0142, 0.0297, 0.0056, 0.1172]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0196, -0.0349,  0.0042,  ...,  0.0163,  0.0333, -0.0288],
        [ 0.0084, -0.0510, -0.0159,  ...,  0.0228,  0.0065, -0.0037],
        [-0.0269, -0.0033, -0.0196,  ...,  0.0284, -0.0166, -0.0159],
        ...,
        [ 0.0334,  0.0142, -0.0349,  ..., -0.0075, -0.0075,  0.0172],
        [-0.0034,  0.0035,  0.0289,  ...,  0.0411, -0.0244,  0.0063],
        [-0.0344,  0.0528, -0.0455,  ...,  0.0028,  0.0206,  0.0367]], device='cuda:0', requires_grad=True)
K: tensor([ 0.8320, -1.2734, -0.2832,  0.3633, -0.5781,  0.2949, -0.4258, -0.3516, -0.8711, -3.0781, -1.9453, -0.9141,  0.7266, -0.9805, -0.9258,  0.8867,  1.0859,  1.4375, -2.4688,  0.9375,  1.1172, -1.2344, -2.4062,  0.5938,  0.8750, -0.3418, -0.5586,  0.7656, -0.7734, -2.0000, -0.5352,  1.1094,
        -1.4531,  2.2656,  2.5469,  1.0234,  0.5391, -1.1016, -0.8008, -2.0312, -0.7891, -1.2734, -2.3281,  0.1709,  1.1094, -0.6914, -1.1953,  1.0391, -1.3828, -1.4219,  0.6172,  1.3125,  0.3770, -0.3359,  0.9727,  0.4219,  0.4590, -3.0938, -0.6602,  1.1875,  0.2656, -0.4961,  1.1172, -1.2266],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0101, -0.0071, -0.0077,  ..., -0.0327, -0.0319, -0.0172],
        [ 0.0056,  0.0037, -0.0035,  ...,  0.0112, -0.0197,  0.0448],
        [ 0.0185, -0.0127, -0.0028,  ..., -0.0051, -0.0251, -0.0073],
        ...,
        [ 0.0325, -0.0459, -0.0212,  ...,  0.0215,  0.0219, -0.0026],
        [ 0.0102, -0.0028,  0.0247,  ...,  0.0206,  0.0016, -0.0028],
        [-0.0127, -0.0144, -0.0220,  ...,  0.0232, -0.0017, -0.0272]], device='cuda:0', requires_grad=True)
Q: tensor([-0.2832,  0.7539,  0.8633,  0.4883,  0.5234, -1.1484,  0.0972, -2.3438, -1.0547,  0.3887, -0.8242,  2.2188,  0.5430, -0.2891,  0.0322, -1.0469,  0.4199, -0.0050, -0.9453,  0.8125,  0.5898, -1.4297,  1.0547, -1.0625,  1.0859,  0.9453, -1.7891,  1.5391, -0.4766,  1.6953, -1.3125, -3.0156,
        -0.7891,  0.5586, -0.5938, -0.6680, -0.9336, -0.4238,  1.3906, -1.2188,  0.2236,  0.4277, -0.6719,  1.3203, -0.0156,  1.5625, -1.2109,  1.3594,  0.8438, -1.2578,  0.5469,  1.7344, -1.3047, -0.0400, -0.4941,  0.2002, -2.0312, -0.0708, -0.3105,  1.2500,  0.4590, -0.8164, -0.5469, -0.9375],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  3.6719,  2.3125,  2.0781,  2.3438,  2.7969,  2.0000,  2.2500,  1.5859,  1.5391,  2.7344,  2.3594,  2.5000,  1.6719,  1.6406],
        [ 0.0000,  4.3750,  1.2188,  4.2812,  1.3359,  1.2734,  3.5625,  0.9141, -1.2266, -0.9805,  2.2344, -0.7773,  1.1016, -1.5078,  0.2559],
        [ 0.0000,  4.2500,  1.3359,  2.3438,  2.1250,  0.4980,  2.7812,  1.2656,  0.1138, -0.1309,  1.4453, -0.3711,  1.1250, -0.1553,  0.3848],
        [ 0.0000,  4.9062,  3.1250,  2.5000,  2.6875,  3.7656,  2.4219,  4.8750,  1.2109,  3.1562,  1.9609,  3.2031,  4.7188,  0.8750,  1.3281],
        [ 0.0000,  3.2969,  1.2891, -0.4258,  1.6016,  2.2969,  1.9375,  2.7812,  0.5859,  1.3516,  0.6602,  1.1641,  0.8789, -0.0596,  0.5742],
        [ 0.0000,  2.0781,  2.6562, -0.0801, -0.4980,  0.9062,  0.4824,  4.0938, -0.1123,  1.7578, -0.2422,  1.9609,  2.6094, -0.9219,  1.2422],
        [ 0.0000,  2.1250,  3.3281,  0.8398,  3.4219,  0.5859,  0.8672,  3.7188,  4.8438,  4.7500,  3.0156,  3.9531,  3.7969,  4.6250,  4.0312],
        [ 0.0000,  2.0312,  1.1641, -0.9297, -0.0388, -0.8359,  0.1553,  2.3906,  0.2949,  3.2969,  0.6289,  1.5547,  3.3281,  0.8164,  1.5391],
        [ 0.0000,  3.9844,  1.8281,  2.0156,  1.0234,  0.5195,  2.4062,  3.7969,  0.9727,  2.8281,  3.7812,  2.9219,  4.9688,  1.8594,  2.5156],
        [ 0.0000,  0.6250, -0.5352, -1.9766, -1.9766, -1.5469, -1.2109,  1.5469, -1.2578,  1.8672,  0.3516,  1.5703,  2.8750, -0.3164,  0.3438],
        [ 0.0000,  2.0625, -0.1196,  0.3047, -1.8438, -1.5156,  0.7852,  0.9883, -2.4531,  0.5469,  0.1504, -0.0181,  3.6875, -1.5625, -0.1826],
        [ 0.0000,  1.6484, -0.3477, -2.0000,  1.4375, -1.9219, -0.1177,  0.3184,  2.2500,  2.6875,  1.8281,  2.5000,  2.8281,  4.0938,  2.7500],
        [ 0.0000,  1.5859, -0.8789, -2.3125, -0.7344, -1.8984, -0.4336,  0.6953, -0.7852,  2.3906,  0.4316,  1.0312,  3.4062,  0.8203,  1.1875],
        [ 0.0000,  2.2812, -0.7070, -0.6406, -0.9844, -1.6328,  0.7383, -0.6602, -2.8125, -1.1641, -0.1045, -1.2812, -0.5508, -2.2031,  0.8281]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0770],
        [0.0085],
        [0.0092],
        [0.0040],
        [0.0158],
        [0.0093],
        [0.0034],
        [0.0064],
        [0.0041],
        [0.0132],
        [0.0129],
        [0.0157],
        [0.0055],
        [0.0115]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.1157 a:0.1260 and:0.1299 but:0.0796atoes:0.2393,:0.6133 a:0.1064iced:0.3105)
iced
------
		( a:0.1260 and:0.1299 but:0.0796atoes:0.2393,:0.6133 a:0.1064iced:0.3105 in:0.1074)
 in the water, and they are the most popular in the world.

@ 7050 train 4.0844 , allloss: 4.1011, dt: 1697.84ms, fracRes: 0.6032, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6824, norm(y): 1.0071, norm:1.1606, tok/sec: 77199.36, flops:67.60, batch-reuse:1
@ 7051 train 4.1456 , allloss: 4.1626, dt: 1257.10ms, fracRes: 0.6040, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6834, norm(y): 1.0069, norm:1.0938, tok/sec: 104265.38, flops:91.30, batch-reuse:1
@ 7052 train 4.0697 , allloss: 4.0866, dt: 1264.53ms, fracRes: 0.6036, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6825, norm(y): 1.0070, norm:1.1972, tok/sec: 103652.69, flops:90.77, batch-reuse:1
@ 7053 train 4.1077 , allloss: 4.1251, dt: 1284.80ms, fracRes: 0.6035, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6825, norm(y): 1.0071, norm:1.1827, tok/sec: 102017.32, flops:89.34, batch-reuse:1
@ 7054 train 4.0890 , allloss: 4.1053, dt: 1267.40ms, fracRes: 0.6024, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6815, norm(y): 1.0070, norm:1.1307, tok/sec: 103418.06, flops:90.56, batch-reuse:1
@ 7055 train 4.0529 , allloss: 4.0695, dt: 1271.94ms, fracRes: 0.6031, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6836, norm(y): 1.0070, norm:1.0400, tok/sec: 103048.62, flops:90.24, batch-reuse:1
@ 7056 train 4.2545 , allloss: 4.2714, dt: 1272.26ms, fracRes: 0.6038, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6825, norm(y): 1.0071, norm:1.1085, tok/sec: 103023.34, flops:90.22, batch-reuse:1
@ 7057 train 4.0526 , allloss: 4.0703, dt: 1266.00ms, fracRes: 0.6036, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6850, norm(y): 1.0071, norm:1.3752, tok/sec: 103532.38, flops:90.66, batch-reuse:1
@ 7058 train 4.0916 , allloss: 4.1082, dt: 1260.90ms, fracRes: 0.6035, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6841, norm(y): 1.0069, norm:1.2841, tok/sec: 103951.07, flops:91.03, batch-reuse:1
@ 7059 train 4.1019 , allloss: 4.1196, dt: 1267.01ms, fracRes: 0.6031, norm(attn): 0.1396, norm(output): 0.2363, norm(x): 0.6837, norm(y): 1.0070, norm:1.1666, tok/sec: 103449.56, flops:90.59, batch-reuse:1
@ 7060 train 4.1108 , allloss: 4.1279, dt: 1266.10ms, fracRes: 0.6021, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6818, norm(y): 1.0070, norm:1.2122, tok/sec: 103523.96, flops:90.65, batch-reuse:1
@ 7061 train 4.1376 , allloss: 4.1544, dt: 1289.25ms, fracRes: 0.6026, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6807, norm(y): 1.0069, norm:1.0740, tok/sec: 101665.36, flops:89.03, batch-reuse:1
@ 7062 train 4.1979 , allloss: 4.2143, dt: 1271.14ms, fracRes: 0.6033, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6827, norm(y): 1.0067, norm:1.1826, tok/sec: 103113.50, flops:90.30, batch-reuse:1
@ 7063 train 4.1412 , allloss: 4.1575, dt: 1272.53ms, fracRes: 0.6034, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6825, norm(y): 1.0068, norm:1.1967, tok/sec: 103001.01, flops:90.20, batch-reuse:1
@ 7064 train 4.1168 , allloss: 4.1333, dt: 1276.75ms, fracRes: 0.6033, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6831, norm(y): 1.0068, norm:1.1316, tok/sec: 102660.46, flops:89.90, batch-reuse:1
@ 7065 train 4.0927 , allloss: 4.1090, dt: 1255.96ms, fracRes: 0.6033, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6823, norm(y): 1.0069, norm:1.1182, tok/sec: 104359.89, flops:91.39, batch-reuse:1
@ 7066 train 4.1254 , allloss: 4.1417, dt: 1265.84ms, fracRes: 0.6031, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6809, norm(y): 1.0070, norm:1.1531, tok/sec: 103545.70, flops:90.67, batch-reuse:1
@ 7067 train 4.0853 , allloss: 4.1031, dt: 1272.75ms, fracRes: 0.6024, norm(attn): 0.1416, norm(output): 0.2373, norm(x): 0.6832, norm(y): 1.0068, norm:1.1093, tok/sec: 102983.39, flops:90.18, batch-reuse:1
@ 7068 train 4.1868 , allloss: 4.2039, dt: 1263.88ms, fracRes: 0.6031, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6824, norm(y): 1.0068, norm:1.2827, tok/sec: 103706.24, flops:90.81, batch-reuse:1
@ 7069 train 4.1445 , allloss: 4.1612, dt: 1280.08ms, fracRes: 0.6036, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6827, norm(y): 1.0069, norm:1.1660, tok/sec: 102393.52, flops:89.66, batch-reuse:1
@ 7070 train 4.2656 , allloss: 4.2828, dt: 1250.23ms, fracRes: 0.6035, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6821, norm(y): 1.0069, norm:1.2488, tok/sec: 104838.04, flops:91.81, batch-reuse:1
@ 7071 train 4.2932 , allloss: 4.3098, dt: 1263.54ms, fracRes: 0.6015, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6808, norm(y): 1.0067, norm:1.2233, tok/sec: 103733.66, flops:90.84, batch-reuse:1
@ 7072 train 4.2392 , allloss: 4.2558, dt: 1275.63ms, fracRes: 0.6017, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6805, norm(y): 1.0067, norm:1.2008, tok/sec: 102750.97, flops:89.98, batch-reuse:1
@ 7073 train 4.3927 , allloss: 4.4109, dt: 1243.47ms, fracRes: 0.6020, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6816, norm(y): 1.0067, norm:1.5755, tok/sec: 105408.44, flops:92.30, batch-reuse:1
@ 7074 train 4.3801 , allloss: 4.3970, dt: 1274.49ms, fracRes: 0.6026, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6788, norm(y): 1.0067, norm:1.4904, tok/sec: 102842.70, flops:90.06, batch-reuse:1
@ 7075 train 4.2984 , allloss: 4.3154, dt: 1255.94ms, fracRes: 0.6029, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6807, norm(y): 1.0068, norm:1.2106, tok/sec: 104362.01, flops:91.39, batch-reuse:1
@ 7076 train 4.3583 , allloss: 4.3752, dt: 1280.22ms, fracRes: 0.6025, norm(attn): 0.1396, norm(output): 0.2363, norm(x): 0.6818, norm(y): 1.0066, norm:1.2388, tok/sec: 102382.36, flops:89.65, batch-reuse:1
@ 7077 train 4.3205 , allloss: 4.3379, dt: 1251.58ms, fracRes: 0.6024, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6827, norm(y): 1.0067, norm:1.2703, tok/sec: 104725.35, flops:91.71, batch-reuse:1
@ 7078 train 4.2851 , allloss: 4.3040, dt: 1259.18ms, fracRes: 0.6026, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6818, norm(y): 1.0067, norm:1.4102, tok/sec: 104093.06, flops:91.15, batch-reuse:1
@ 7079 train 4.2641 , allloss: 4.2816, dt: 1306.69ms, fracRes: 0.6023, norm(attn): 0.1416, norm(output): 0.2373, norm(x): 0.6828, norm(y): 1.0067, norm:1.2271, tok/sec: 100308.30, flops:87.84, batch-reuse:1
@ 7080 train 4.2644 , allloss: 4.2813, dt: 1281.98ms, fracRes: 0.6029, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6845, norm(y): 1.0068, norm:1.0560, tok/sec: 102242.16, flops:89.53, batch-reuse:1
@ 7081 train 4.3102 , allloss: 4.3278, dt: 1256.79ms, fracRes: 0.6030, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6847, norm(y): 1.0067, norm:1.4446, tok/sec: 104291.43, flops:91.33, batch-reuse:1
@ 7082 train 4.2135 , allloss: 4.2305, dt: 1287.65ms, fracRes: 0.6026, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6828, norm(y): 1.0067, norm:1.1348, tok/sec: 101791.80, flops:89.14, batch-reuse:1
@ 7083 train 4.1965 , allloss: 4.2133, dt: 1254.71ms, fracRes: 0.6026, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6822, norm(y): 1.0069, norm:1.3979, tok/sec: 104464.12, flops:91.48, batch-reuse:1
@ 7084 train 4.2396 , allloss: 4.2568, dt: 1258.64ms, fracRes: 0.6026, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6842, norm(y): 1.0068, norm:1.0810, tok/sec: 104138.09, flops:91.19, batch-reuse:1
@ 7085 train 4.3104 , allloss: 4.3276, dt: 1260.98ms, fracRes: 0.6024, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6837, norm(y): 1.0067, norm:1.2558, tok/sec: 103944.23, flops:91.02, batch-reuse:1
@ 7086 train 4.2423 , allloss: 4.2590, dt: 1262.30ms, fracRes: 0.6027, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6837, norm(y): 1.0069, norm:1.2337, tok/sec: 103835.52, flops:90.93, batch-reuse:1
@ 7087 train 4.2643 , allloss: 4.2817, dt: 1260.45ms, fracRes: 0.6028, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6857, norm(y): 1.0068, norm:1.3412, tok/sec: 103988.07, flops:91.06, batch-reuse:1
@ 7088 train 4.2758 , allloss: 4.2934, dt: 1263.36ms, fracRes: 0.6023, norm(attn): 0.1426, norm(output): 0.2383, norm(x): 0.6842, norm(y): 1.0068, norm:1.4243, tok/sec: 103749.10, flops:90.85, batch-reuse:1
@ 7089 train 4.2554 , allloss: 4.2721, dt: 1268.24ms, fracRes: 0.6031, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6816, norm(y): 1.0067, norm:1.4396, tok/sec: 103349.70, flops:90.50, batch-reuse:1
@ 7090 train 4.2582 , allloss: 4.2756, dt: 1280.86ms, fracRes: 0.6040, norm(attn): 0.1396, norm(output): 0.2363, norm(x): 0.6846, norm(y): 1.0067, norm:1.3656, tok/sec: 102331.27, flops:89.61, batch-reuse:1
@ 7091 train 4.2759 , allloss: 4.2933, dt: 1261.55ms, fracRes: 0.6044, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6825, norm(y): 1.0069, norm:1.2742, tok/sec: 103897.49, flops:90.98, batch-reuse:1
@ 7092 train 4.3949 , allloss: 4.4125, dt: 1254.90ms, fracRes: 0.6035, norm(attn): 0.1416, norm(output): 0.2373, norm(x): 0.6815, norm(y): 1.0066, norm:2.0300, tok/sec: 104448.38, flops:91.46, batch-reuse:1
@ 7093 train 4.2990 , allloss: 4.3171, dt: 1269.76ms, fracRes: 0.6027, norm(attn): 0.1416, norm(output): 0.2383, norm(x): 0.6811, norm(y): 1.0067, norm:1.4667, tok/sec: 103225.64, flops:90.39, batch-reuse:1
@ 7094 train 4.3881 , allloss: 4.4059, dt: 1271.81ms, fracRes: 0.6026, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6797, norm(y): 1.0068, norm:1.2911, tok/sec: 103059.59, flops:90.25, batch-reuse:1
@ 7095 train 4.2186 , allloss: 4.2360, dt: 1274.97ms, fracRes: 0.6023, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6788, norm(y): 1.0067, norm:1.1615, tok/sec: 102804.21, flops:90.02, batch-reuse:1
@ 7096 train 4.2842 , allloss: 4.3023, dt: 1280.82ms, fracRes: 0.6037, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6825, norm(y): 1.0070, norm:1.4662, tok/sec: 102334.05, flops:89.61, batch-reuse:1
@ 7097 train 4.1913 , allloss: 4.2084, dt: 1269.15ms, fracRes: 0.6038, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6844, norm(y): 1.0067, norm:1.2586, tok/sec: 103275.28, flops:90.44, batch-reuse:1
@ 7098 train 4.2280 , allloss: 4.2448, dt: 1286.19ms, fracRes: 0.6031, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6840, norm(y): 1.0067, norm:1.1990, tok/sec: 101906.95, flops:89.24, batch-reuse:1
@ 7099 train 4.2806 , allloss: 4.2969, dt: 1264.91ms, fracRes: 0.6038, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6818, norm(y): 1.0068, norm:1.2877, tok/sec: 103621.70, flops:90.74, batch-reuse:1
@ 7100 train 4.2517 , allloss: 4.2683, dt: 1244.60ms, fracRes: 0.6032, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6832, norm(y): 1.0068, norm:1.1128, tok/sec: 105312.63, flops:92.22, batch-reuse:1
@ 7101 train 4.2311 , allloss: 4.2477, dt: 1284.65ms, fracRes: 0.6028, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6856, norm(y): 1.0067, norm:1.0946, tok/sec: 102029.53, flops:89.35, batch-reuse:1
@ 7102 train 4.2426 , allloss: 4.2590, dt: 1251.80ms, fracRes: 0.6031, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6832, norm(y): 1.0069, norm:1.1928, tok/sec: 104706.72, flops:91.69, batch-reuse:1
@ 7103 train 4.2870 , allloss: 4.3040, dt: 1259.38ms, fracRes: 0.6035, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6834, norm(y): 1.0067, norm:1.1794, tok/sec: 104076.94, flops:91.14, batch-reuse:1
@ 7104 train 4.2438 , allloss: 4.2610, dt: 1256.69ms, fracRes: 0.6028, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6824, norm(y): 1.0068, norm:1.1394, tok/sec: 104299.15, flops:91.33, batch-reuse:1
@ 7105 train 4.3302 , allloss: 4.3481, dt: 1266.85ms, fracRes: 0.6026, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6820, norm(y): 1.0066, norm:1.0980, tok/sec: 103462.92, flops:90.60, batch-reuse:1
@ 7106 train 4.3016 , allloss: 4.3185, dt: 1264.15ms, fracRes: 0.6025, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6821, norm(y): 1.0066, norm:1.1161, tok/sec: 103683.53, flops:90.79, batch-reuse:1
@ 7107 train 4.5048 , allloss: 4.5222, dt: 1266.13ms, fracRes: 0.6034, norm(attn): 0.1416, norm(output): 0.2373, norm(x): 0.6823, norm(y): 1.0067, norm:2.1375, tok/sec: 103521.37, flops:90.65, batch-reuse:1
@ 7108 train 4.2487 , allloss: 4.2667, dt: 1296.71ms, fracRes: 0.6033, norm(attn): 0.1426, norm(output): 0.2363, norm(x): 0.6852, norm(y): 1.0068, norm:2.0221, tok/sec: 101080.61, flops:88.51, batch-reuse:1
@ 7109 train 4.3213 , allloss: 4.3379, dt: 1274.65ms, fracRes: 0.6035, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6850, norm(y): 1.0067, norm:1.2510, tok/sec: 102829.96, flops:90.05, batch-reuse:1
@ 7110 train 4.3516 , allloss: 4.3692, dt: 1267.76ms, fracRes: 0.6036, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6877, norm(y): 1.0067, norm:1.4788, tok/sec: 103388.44, flops:90.54, batch-reuse:1
@ 7111 train 4.2692 , allloss: 4.2872, dt: 1276.94ms, fracRes: 0.6032, norm(attn): 0.1406, norm(output): 0.2373, norm(x): 0.6864, norm(y): 1.0067, norm:1.5533, tok/sec: 102645.63, flops:89.89, batch-reuse:1
@ 7112 train 4.2327 , allloss: 4.2506, dt: 1255.40ms, fracRes: 0.6037, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6839, norm(y): 1.0068, norm:1.6613, tok/sec: 104406.81, flops:91.43, batch-reuse:1
@ 7113 train 4.1730 , allloss: 4.1899, dt: 1267.36ms, fracRes: 0.6034, norm(attn): 0.1396, norm(output): 0.2363, norm(x): 0.6852, norm(y): 1.0067, norm:1.3889, tok/sec: 103420.94, flops:90.56, batch-reuse:1
@ 7114 train 4.3438 , allloss: 4.3611, dt: 1271.26ms, fracRes: 0.6038, norm(attn): 0.1396, norm(output): 0.2363, norm(x): 0.6845, norm(y): 1.0068, norm:1.1863, tok/sec: 103103.97, flops:90.29, batch-reuse:1
@ 7115 train 4.1857 , allloss: 4.2030, dt: 1259.70ms, fracRes: 0.6030, norm(attn): 0.1416, norm(output): 0.2383, norm(x): 0.6850, norm(y): 1.0067, norm:1.3004, tok/sec: 104049.95, flops:91.12, batch-reuse:1
@ 7116 train 4.2436 , allloss: 4.2606, dt: 1257.59ms, fracRes: 0.6029, norm(attn): 0.1426, norm(output): 0.2383, norm(x): 0.6849, norm(y): 1.0066, norm:1.2603, tok/sec: 104224.96, flops:91.27, batch-reuse:1
@ 7117 train 4.2808 , allloss: 4.2978, dt: 1271.38ms, fracRes: 0.6033, norm(attn): 0.1426, norm(output): 0.2373, norm(x): 0.6822, norm(y): 1.0066, norm:2.2659, tok/sec: 103094.65, flops:90.28, batch-reuse:1
@ 7118 train 4.4352 , allloss: 4.4520, dt: 1256.98ms, fracRes: 0.6042, norm(attn): 0.1396, norm(output): 0.2373, norm(x): 0.6854, norm(y): 1.0065, norm:1.8458, tok/sec: 104275.03, flops:91.31, batch-reuse:1
@ 7119 train 4.3636 , allloss: 4.3801, dt: 1274.67ms, fracRes: 0.6044, norm(attn): 0.1396, norm(output): 0.2363, norm(x): 0.6860, norm(y): 1.0067, norm:1.5113, tok/sec: 102828.52, flops:90.05, batch-reuse:1
@ 7120 train 4.2296 , allloss: 4.2470, dt: 1276.72ms, fracRes: 0.6033, norm(attn): 0.1416, norm(output): 0.2373, norm(x): 0.6878, norm(y): 1.0067, norm:1.2860, tok/sec: 102663.13, flops:89.90, batch-reuse:1
@ 7121 train 4.2316 , allloss: 4.2491, dt: 1288.99ms, fracRes: 0.6029, norm(attn): 0.1416, norm(output): 0.2383, norm(x): 0.6885, norm(y): 1.0067, norm:1.4197, tok/sec: 101685.83, flops:89.04, batch-reuse:1
@ 7122 train 4.2130 , allloss: 4.2302, dt: 1326.03ms, fracRes: 0.6034, norm(attn): 0.1406, norm(output): 0.2383, norm(x): 0.6889, norm(y): 1.0067, norm:1.4813, tok/sec: 98845.23, flops:86.56, batch-reuse:1
@ 7123 train 4.2981 , allloss: 4.3146, dt: 1322.27ms, fracRes: 0.6036, norm(attn): 0.1406, norm(output): 0.2373, norm(x): 0.6854, norm(y): 1.0066, norm:1.1357, tok/sec: 99126.51, flops:86.80, batch-reuse:1
@ 7124 train 4.3090 , allloss: 4.3259, dt: 1304.05ms, fracRes: 0.6032, norm(attn): 0.1416, norm(output): 0.2373, norm(x): 0.6849, norm(y): 1.0067, norm:1.4393, tok/sec: 100511.23, flops:88.02, batch-reuse:1
@ 7125 train 4.2728 , allloss: 4.2905, dt: 1315.44ms, fracRes: 0.6033, norm(attn): 0.1416, norm(output): 0.2393, norm(x): 0.6864, norm(y): 1.0067, norm:1.2240, tok/sec: 99641.24, flops:87.25, batch-reuse:1
@ 7126 train 4.2777 , allloss: 4.2943, dt: 1324.80ms, fracRes: 0.6028, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6860, norm(y): 1.0067, norm:1.2146, tok/sec: 98936.89, flops:86.64, batch-reuse:1
@ 7127 train 4.2953 , allloss: 4.3119, dt: 1271.68ms, fracRes: 0.6032, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6859, norm(y): 1.0068, norm:1.2076, tok/sec: 103069.62, flops:90.26, batch-reuse:1
@ 7128 train 4.1853 , allloss: 4.2037, dt: 1300.50ms, fracRes: 0.6029, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6835, norm(y): 1.0068, norm:1.4471, tok/sec: 100785.97, flops:88.26, batch-reuse:1
@ 7129 train 4.2623 , allloss: 4.2787, dt: 1293.84ms, fracRes: 0.6033, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6828, norm(y): 1.0067, norm:1.1548, tok/sec: 101304.39, flops:88.71, batch-reuse:1
@ 7130 train 4.3021 , allloss: 4.3184, dt: 1309.91ms, fracRes: 0.6037, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6835, norm(y): 1.0067, norm:1.4968, tok/sec: 100061.47, flops:87.62, batch-reuse:1
@ 7131 train 4.2669 , allloss: 4.2837, dt: 1271.19ms, fracRes: 0.6033, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6845, norm(y): 1.0068, norm:1.2433, tok/sec: 103109.92, flops:90.29, batch-reuse:1
@ 7132 train 4.2046 , allloss: 4.2217, dt: 1279.72ms, fracRes: 0.6033, norm(attn): 0.1416, norm(output): 0.2373, norm(x): 0.6864, norm(y): 1.0068, norm:1.2689, tok/sec: 102422.74, flops:89.69, batch-reuse:1
@ 7133 train 4.2748 , allloss: 4.2908, dt: 1295.51ms, fracRes: 0.6038, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6863, norm(y): 1.0067, norm:1.3110, tok/sec: 101173.99, flops:88.60, batch-reuse:1
@ 7134 train 4.2950 , allloss: 4.3116, dt: 1287.64ms, fracRes: 0.6037, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6854, norm(y): 1.0066, norm:1.6976, tok/sec: 101792.46, flops:89.14, batch-reuse:1
@ 7135 train 4.2468 , allloss: 4.2632, dt: 1309.66ms, fracRes: 0.6027, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6855, norm(y): 1.0067, norm:1.1035, tok/sec: 100080.85, flops:87.64, batch-reuse:1
@ 7136 train 4.2109 , allloss: 4.2272, dt: 1262.54ms, fracRes: 0.6027, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6849, norm(y): 1.0068, norm:1.5828, tok/sec: 103816.01, flops:90.91, batch-reuse:1
@ 7137 train 4.2841 , allloss: 4.3008, dt: 1274.96ms, fracRes: 0.6032, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6867, norm(y): 1.0067, norm:1.2800, tok/sec: 102804.60, flops:90.02, batch-reuse:1
@ 7138 train 4.3505 , allloss: 4.3677, dt: 1294.40ms, fracRes: 0.6041, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6870, norm(y): 1.0066, norm:1.2073, tok/sec: 101260.72, flops:88.67, batch-reuse:1
@ 7139 train 4.3034 , allloss: 4.3206, dt: 1274.68ms, fracRes: 0.6033, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6838, norm(y): 1.0067, norm:1.2168, tok/sec: 102827.73, flops:90.04, batch-reuse:1
@ 7140 train 4.2902 , allloss: 4.3074, dt: 1261.06ms, fracRes: 0.6033, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6833, norm(y): 1.0067, norm:1.1076, tok/sec: 103938.23, flops:91.02, batch-reuse:1
@ 7141 train 4.2352 , allloss: 4.2518, dt: 1284.15ms, fracRes: 0.6037, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6845, norm(y): 1.0067, norm:1.1511, tok/sec: 102069.04, flops:89.38, batch-reuse:1
@ 7142 train 4.2537 , allloss: 4.2700, dt: 1253.07ms, fracRes: 0.6036, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6844, norm(y): 1.0068, norm:1.0309, tok/sec: 104600.77, flops:91.60, batch-reuse:1
@ 7143 train 4.2401 , allloss: 4.2564, dt: 1247.14ms, fracRes: 0.6034, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6806, norm(y): 1.0068, norm:1.1484, tok/sec: 105098.07, flops:92.03, batch-reuse:1
@ 7144 train 4.2509 , allloss: 4.2689, dt: 1270.78ms, fracRes: 0.6025, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6795, norm(y): 1.0068, norm:1.1769, tok/sec: 103142.96, flops:90.32, batch-reuse:1
@ 7145 train 4.2174 , allloss: 4.2344, dt: 1293.62ms, fracRes: 0.6025, norm(attn): 0.1416, norm(output): 0.2344, norm(x): 0.6778, norm(y): 1.0067, norm:1.1860, tok/sec: 101322.03, flops:88.73, batch-reuse:1
@ 7146 train 4.1827 , allloss: 4.1992, dt: 1279.04ms, fracRes: 0.6021, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6787, norm(y): 1.0066, norm:1.1191, tok/sec: 102477.21, flops:89.74, batch-reuse:1
@ 7147 train 4.2635 , allloss: 4.2798, dt: 1307.13ms, fracRes: 0.6027, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6782, norm(y): 1.0066, norm:1.1001, tok/sec: 100274.99, flops:87.81, batch-reuse:1
@ 7148 train 4.1477 , allloss: 4.1646, dt: 1275.27ms, fracRes: 0.6036, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6793, norm(y): 1.0068, norm:1.1605, tok/sec: 102779.54, flops:90.00, batch-reuse:1
@ 7149 train 4.2983 , allloss: 4.3149, dt: 1272.56ms, fracRes: 0.6036, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6772, norm(y): 1.0067, norm:1.1274, tok/sec: 102998.69, flops:90.19, batch-reuse:1
@ 7150 train 4.2275 , allloss: 4.2443, dt: 1274.71ms, fracRes: 0.6028, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6826, norm(y): 1.0067, norm:1.1664, tok/sec: 102824.98, flops:90.04, batch-reuse:1
@ 7151 train 4.2472 , allloss: 4.2639, dt: 1257.47ms, fracRes: 0.6027, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6834, norm(y): 1.0068, norm:1.0884, tok/sec: 104234.31, flops:91.28, batch-reuse:1
@ 7152 train 4.2765 , allloss: 4.2933, dt: 1272.89ms, fracRes: 0.6024, norm(attn): 0.1416, norm(output): 0.2373, norm(x): 0.6814, norm(y): 1.0066, norm:1.0496, tok/sec: 102971.72, flops:90.17, batch-reuse:1
@ 7153 train 4.2106 , allloss: 4.2275, dt: 1265.54ms, fracRes: 0.6026, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6813, norm(y): 1.0066, norm:1.1455, tok/sec: 103570.11, flops:90.69, batch-reuse:1
@ 7154 train 4.0723 , allloss: 4.0926, dt: 1273.49ms, fracRes: 0.6043, norm(attn): 0.1426, norm(output): 0.2383, norm(x): 0.6844, norm(y): 1.0063, norm:1.2879, tok/sec: 102923.14, flops:90.13, batch-reuse:1
@ 7155 train 4.2740 , allloss: 4.2916, dt: 1276.94ms, fracRes: 0.6035, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6813, norm(y): 1.0066, norm:1.2915, tok/sec: 102645.47, flops:89.89, batch-reuse:1
@ 7156 train 4.2492 , allloss: 4.2658, dt: 1294.90ms, fracRes: 0.6031, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6803, norm(y): 1.0067, norm:1.1396, tok/sec: 101221.37, flops:88.64, batch-reuse:1
@ 7157 train 4.2645 , allloss: 4.2810, dt: 1263.91ms, fracRes: 0.6033, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6799, norm(y): 1.0068, norm:1.0443, tok/sec: 103703.70, flops:90.81, batch-reuse:1
@ 7158 train 4.2253 , allloss: 4.2423, dt: 1272.12ms, fracRes: 0.6028, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6785, norm(y): 1.0067, norm:1.1586, tok/sec: 103034.27, flops:90.23, batch-reuse:1
@ 7159 train 4.2410 , allloss: 4.2580, dt: 1259.66ms, fracRes: 0.6021, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6792, norm(y): 1.0068, norm:1.0751, tok/sec: 104053.53, flops:91.12, batch-reuse:1
@ 7160 train 4.2681 , allloss: 4.2846, dt: 1267.96ms, fracRes: 0.6029, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.6797, norm(y): 1.0067, norm:1.1982, tok/sec: 103372.69, flops:90.52, batch-reuse:1
@ 7161 train 4.1836 , allloss: 4.1999, dt: 1272.56ms, fracRes: 0.6030, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6821, norm(y): 1.0066, norm:1.0882, tok/sec: 102998.42, flops:90.19, batch-reuse:1
@ 7162 train 4.2184 , allloss: 4.2347, dt: 1274.99ms, fracRes: 0.6036, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6820, norm(y): 1.0068, norm:1.3352, tok/sec: 102802.43, flops:90.02, batch-reuse:1
@ 7163 train 4.2292 , allloss: 4.2471, dt: 1278.05ms, fracRes: 0.6031, norm(attn): 0.1426, norm(output): 0.2363, norm(x): 0.6824, norm(y): 1.0067, norm:1.2416, tok/sec: 102556.24, flops:89.81, batch-reuse:1
@ 7164 train 4.2034 , allloss: 4.2204, dt: 1277.23ms, fracRes: 0.6034, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6832, norm(y): 1.0066, norm:1.1739, tok/sec: 102622.37, flops:89.86, batch-reuse:1
@ 7165 train 4.2067 , allloss: 4.2230, dt: 1283.42ms, fracRes: 0.6040, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6813, norm(y): 1.0066, norm:1.4007, tok/sec: 102127.52, flops:89.43, batch-reuse:1
@ 7166 train 4.1379 , allloss: 4.1541, dt: 1305.68ms, fracRes: 0.6038, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6819, norm(y): 1.0068, norm:1.3369, tok/sec: 100386.39, flops:87.91, batch-reuse:1
@ 7167 train 4.2425 , allloss: 4.2587, dt: 1303.82ms, fracRes: 0.6033, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6816, norm(y): 1.0066, norm:1.1788, tok/sec: 100528.95, flops:88.03, batch-reuse:1
@ 7168 train 4.2517 , allloss: 4.2685, dt: 1286.61ms, fracRes: 0.6038, norm(attn): 0.1396, norm(output): 0.2363, norm(x): 0.6803, norm(y): 1.0066, norm:1.1392, tok/sec: 101874.13, flops:89.21, batch-reuse:1
@ 7169 train 4.1802 , allloss: 4.1972, dt: 1256.72ms, fracRes: 0.6033, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6804, norm(y): 1.0066, norm:1.2146, tok/sec: 104297.23, flops:91.33, batch-reuse:1
@ 7170 train 4.1070 , allloss: 4.1243, dt: 1268.47ms, fracRes: 0.6029, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6776, norm(y): 1.0067, norm:1.4439, tok/sec: 103330.53, flops:90.49, batch-reuse:1
@ 7171 train 4.0989 , allloss: 4.1152, dt: 1259.14ms, fracRes: 0.6019, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6777, norm(y): 1.0067, norm:1.2270, tok/sec: 104096.05, flops:91.16, batch-reuse:1
@ 7172 train 4.1249 , allloss: 4.1412, dt: 1267.33ms, fracRes: 0.6018, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6794, norm(y): 1.0066, norm:1.0758, tok/sec: 103423.86, flops:90.57, batch-reuse:1
@ 7173 train 4.2023 , allloss: 4.2185, dt: 1263.20ms, fracRes: 0.6032, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6793, norm(y): 1.0068, norm:1.2073, tok/sec: 103762.22, flops:90.86, batch-reuse:1
@ 7174 train 4.1843 , allloss: 4.2010, dt: 1255.46ms, fracRes: 0.6038, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6797, norm(y): 1.0068, norm:1.1590, tok/sec: 104401.99, flops:91.42, batch-reuse:1
@ 7175 train 4.1451 , allloss: 4.1614, dt: 1274.48ms, fracRes: 0.6035, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6805, norm(y): 1.0067, norm:1.1265, tok/sec: 102843.72, flops:90.06, batch-reuse:1
@ 7176 train 4.1152 , allloss: 4.1320, dt: 1267.38ms, fracRes: 0.6030, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6807, norm(y): 1.0066, norm:1.0643, tok/sec: 103419.61, flops:90.56, batch-reuse:1
@ 7177 train 4.1845 , allloss: 4.2009, dt: 1274.60ms, fracRes: 0.6027, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6798, norm(y): 1.0065, norm:1.2129, tok/sec: 102834.04, flops:90.05, batch-reuse:1
@ 7178 train 4.1169 , allloss: 4.1342, dt: 1268.83ms, fracRes: 0.6029, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6775, norm(y): 1.0068, norm:1.1226, tok/sec: 103301.56, flops:90.46, batch-reuse:1
@ 7179 train 4.2546 , allloss: 4.2714, dt: 1284.61ms, fracRes: 0.6036, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6779, norm(y): 1.0066, norm:1.2369, tok/sec: 102032.48, flops:89.35, batch-reuse:1
@ 7180 train 4.2190 , allloss: 4.2356, dt: 1273.34ms, fracRes: 0.6040, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6805, norm(y): 1.0066, norm:1.2661, tok/sec: 102935.86, flops:90.14, batch-reuse:1
@ 7181 train 4.1751 , allloss: 4.1914, dt: 1265.20ms, fracRes: 0.6034, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6803, norm(y): 1.0066, norm:1.3109, tok/sec: 103597.57, flops:90.72, batch-reuse:1
@ 7182 train 4.2478 , allloss: 4.2639, dt: 1274.24ms, fracRes: 0.6041, norm(attn): 0.1426, norm(output): 0.2354, norm(x): 0.6812, norm(y): 1.0066, norm:1.2382, tok/sec: 102862.71, flops:90.08, batch-reuse:1
@ 7183 train 4.1682 , allloss: 4.1847, dt: 1249.65ms, fracRes: 0.6045, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6824, norm(y): 1.0066, norm:1.1575, tok/sec: 104887.37, flops:91.85, batch-reuse:1
@ 7184 train 4.2528 , allloss: 4.2687, dt: 1256.98ms, fracRes: 0.6039, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6795, norm(y): 1.0065, norm:1.3021, tok/sec: 104275.21, flops:91.31, batch-reuse:1
@ 7185 train 4.1823 , allloss: 4.1991, dt: 1259.47ms, fracRes: 0.6029, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6813, norm(y): 1.0067, norm:1.2369, tok/sec: 104069.57, flops:91.13, batch-reuse:1
@ 7186 train 4.1446 , allloss: 4.1613, dt: 1257.64ms, fracRes: 0.6029, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6797, norm(y): 1.0068, norm:1.3031, tok/sec: 104220.49, flops:91.26, batch-reuse:1
@ 7187 train 4.2897 , allloss: 4.3058, dt: 1290.33ms, fracRes: 0.6032, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6762, norm(y): 1.0067, norm:1.1906, tok/sec: 101580.09, flops:88.95, batch-reuse:1
@ 7188 train 4.2203 , allloss: 4.2370, dt: 1305.93ms, fracRes: 0.6020, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6769, norm(y): 1.0064, norm:1.3421, tok/sec: 100367.00, flops:87.89, batch-reuse:1
@ 7189 train 4.1472 , allloss: 4.1640, dt: 1324.79ms, fracRes: 0.6029, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6774, norm(y): 1.0065, norm:1.3073, tok/sec: 98938.07, flops:86.64, batch-reuse:1
@ 7190 train 4.2396 , allloss: 4.2562, dt: 1280.93ms, fracRes: 0.6025, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6785, norm(y): 1.0066, norm:1.1925, tok/sec: 102325.84, flops:89.61, batch-reuse:1
@ 7191 train 4.1060 , allloss: 4.1228, dt: 1257.77ms, fracRes: 0.6024, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6803, norm(y): 1.0067, norm:1.2988, tok/sec: 104209.45, flops:91.25, batch-reuse:1
@ 7192 train 4.2392 , allloss: 4.2558, dt: 1277.63ms, fracRes: 0.6031, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6787, norm(y): 1.0066, norm:1.5670, tok/sec: 102590.19, flops:89.84, batch-reuse:1
@ 7193 train 4.1827 , allloss: 4.1990, dt: 1269.88ms, fracRes: 0.6030, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6799, norm(y): 1.0066, norm:1.2427, tok/sec: 103215.89, flops:90.38, batch-reuse:1
@ 7194 train 4.1473 , allloss: 4.1636, dt: 1264.21ms, fracRes: 0.6028, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6805, norm(y): 1.0067, norm:1.2637, tok/sec: 103678.59, flops:90.79, batch-reuse:1
@ 7195 train 4.1288 , allloss: 4.1451, dt: 1268.56ms, fracRes: 0.6033, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6795, norm(y): 1.0068, norm:1.1988, tok/sec: 103323.07, flops:90.48, batch-reuse:1
@ 7196 train 4.1213 , allloss: 4.1373, dt: 1283.02ms, fracRes: 0.6032, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6790, norm(y): 1.0066, norm:1.2114, tok/sec: 102159.29, flops:89.46, batch-reuse:1
@ 7197 train 4.0725 , allloss: 4.0910, dt: 1261.79ms, fracRes: 0.6035, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6781, norm(y): 1.0065, norm:1.1238, tok/sec: 103878.19, flops:90.96, batch-reuse:1
@ 7198 train 4.0886 , allloss: 4.1047, dt: 1266.75ms, fracRes: 0.6038, norm(attn): 0.1406, norm(output): 0.2344, norm(x): 0.6774, norm(y): 1.0067, norm:1.0764, tok/sec: 103470.94, flops:90.61, batch-reuse:1
@ 7199 train 4.2397 , allloss: 4.2557, dt: 1284.99ms, fracRes: 0.6032, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6779, norm(y): 1.0066, norm:1.1121, tok/sec: 102002.67, flops:89.32, batch-reuse:1
@ 7200 train 4.1415 , allloss: 4.1573, dt: 1255.39ms, fracRes: 0.6028, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6772, norm(y): 1.0067, norm:0.9599, tok/sec: 104407.16, flops:91.43, batch-reuse:1
@ 7201 train 4.2466 , allloss: 4.2634, dt: 1262.99ms, fracRes: 0.6026, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6789, norm(y): 1.0066, norm:1.2887, tok/sec: 103778.79, flops:90.88, batch-reuse:1
@ 7202 train 4.1734 , allloss: 4.1906, dt: 1274.04ms, fracRes: 0.6027, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6780, norm(y): 1.0067, norm:1.3833, tok/sec: 102878.67, flops:90.09, batch-reuse:1
@ 7203 train 4.1088 , allloss: 4.1255, dt: 1255.06ms, fracRes: 0.6028, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6776, norm(y): 1.0066, norm:1.2909, tok/sec: 104434.93, flops:91.45, batch-reuse:1
@ 7204 train 4.1557 , allloss: 4.1720, dt: 1265.23ms, fracRes: 0.6032, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6821, norm(y): 1.0066, norm:1.1966, tok/sec: 103595.54, flops:90.72, batch-reuse:1
@ 7205 train 4.0260 , allloss: 4.0431, dt: 1300.06ms, fracRes: 0.6028, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6832, norm(y): 1.0065, norm:1.1122, tok/sec: 100820.13, flops:88.29, batch-reuse:1
@ 7206 train 4.1315 , allloss: 4.1490, dt: 1283.42ms, fracRes: 0.6036, norm(attn): 0.1416, norm(output): 0.2373, norm(x): 0.6842, norm(y): 1.0066, norm:1.2788, tok/sec: 102126.76, flops:89.43, batch-reuse:1
@ 7207 train 4.1692 , allloss: 4.1854, dt: 1289.75ms, fracRes: 0.6030, norm(attn): 0.1416, norm(output): 0.2383, norm(x): 0.6848, norm(y): 1.0067, norm:1.2999, tok/sec: 101626.25, flops:88.99, batch-reuse:1
@ 7208 train 4.1449 , allloss: 4.1619, dt: 1253.00ms, fracRes: 0.6033, norm(attn): 0.1426, norm(output): 0.2363, norm(x): 0.6860, norm(y): 1.0066, norm:1.4327, tok/sec: 104606.90, flops:91.60, batch-reuse:1
@ 7209 train 4.1603 , allloss: 4.1769, dt: 1275.79ms, fracRes: 0.6030, norm(attn): 0.1426, norm(output): 0.2373, norm(x): 0.6840, norm(y): 1.0064, norm:1.3883, tok/sec: 102738.09, flops:89.97, batch-reuse:1
@ 7210 train 4.0608 , allloss: 4.0771, dt: 1269.92ms, fracRes: 0.6027, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6830, norm(y): 1.0066, norm:1.1338, tok/sec: 103212.64, flops:90.38, batch-reuse:1
@ 7211 train 4.1931 , allloss: 4.2099, dt: 1261.48ms, fracRes: 0.6028, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6806, norm(y): 1.0065, norm:1.2602, tok/sec: 103903.56, flops:90.99, batch-reuse:1
@ 7212 train 4.1089 , allloss: 4.1258, dt: 1278.20ms, fracRes: 0.6028, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6785, norm(y): 1.0065, norm:1.2553, tok/sec: 102543.94, flops:89.80, batch-reuse:1
@ 7213 train 4.1370 , allloss: 4.1531, dt: 1270.46ms, fracRes: 0.6033, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6780, norm(y): 1.0065, norm:1.2242, tok/sec: 103168.75, flops:90.34, batch-reuse:1
@ 7214 train 4.0914 , allloss: 4.1082, dt: 1297.37ms, fracRes: 0.6036, norm(attn): 0.1436, norm(output): 0.2363, norm(x): 0.6810, norm(y): 1.0065, norm:1.2196, tok/sec: 101028.64, flops:88.47, batch-reuse:1
@ 7215 train 4.1411 , allloss: 4.1589, dt: 1324.60ms, fracRes: 0.6036, norm(attn): 0.1436, norm(output): 0.2373, norm(x): 0.6804, norm(y): 1.0065, norm:1.1780, tok/sec: 98952.21, flops:86.65, batch-reuse:1
@ 7216 train 4.1235 , allloss: 4.1405, dt: 1274.01ms, fracRes: 0.6042, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6795, norm(y): 1.0066, norm:1.4923, tok/sec: 102881.69, flops:90.09, batch-reuse:1
@ 7217 train 4.0315 , allloss: 4.0502, dt: 1290.06ms, fracRes: 0.6040, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6784, norm(y): 1.0067, norm:1.2804, tok/sec: 101601.53, flops:88.97, batch-reuse:1
@ 7218 train 4.0408 , allloss: 4.0576, dt: 1281.50ms, fracRes: 0.6027, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6791, norm(y): 1.0066, norm:1.2057, tok/sec: 102280.19, flops:89.57, batch-reuse:1
@ 7219 train 4.0459 , allloss: 4.0629, dt: 1271.40ms, fracRes: 0.6029, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6818, norm(y): 1.0065, norm:1.2095, tok/sec: 103092.25, flops:90.28, batch-reuse:1
@ 7220 train 4.0958 , allloss: 4.1119, dt: 1308.46ms, fracRes: 0.6019, norm(attn): 0.1416, norm(output): 0.2373, norm(x): 0.6780, norm(y): 1.0065, norm:1.2974, tok/sec: 100172.50, flops:87.72, batch-reuse:1
@ 7221 train 4.1163 , allloss: 4.1330, dt: 1266.39ms, fracRes: 0.6038, norm(attn): 0.1406, norm(output): 0.2344, norm(x): 0.6787, norm(y): 1.0065, norm:1.2091, tok/sec: 103500.12, flops:90.63, batch-reuse:1
@ 7222 train 4.1371 , allloss: 4.1543, dt: 1272.99ms, fracRes: 0.6029, norm(attn): 0.1416, norm(output): 0.2373, norm(x): 0.6795, norm(y): 1.0065, norm:1.2823, tok/sec: 102964.14, flops:90.16, batch-reuse:1
@ 7223 train 4.1908 , allloss: 4.2075, dt: 1289.58ms, fracRes: 0.6018, norm(attn): 0.1416, norm(output): 0.2383, norm(x): 0.6803, norm(y): 1.0065, norm:1.2894, tok/sec: 101639.34, flops:89.00, batch-reuse:1
@ 7224 train 4.1758 , allloss: 4.1918, dt: 1274.00ms, fracRes: 0.6027, norm(attn): 0.1416, norm(output): 0.2383, norm(x): 0.6807, norm(y): 1.0067, norm:1.1844, tok/sec: 102882.65, flops:90.09, batch-reuse:1
@ 7225 train 4.1078 , allloss: 4.1240, dt: 1271.32ms, fracRes: 0.6034, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6852, norm(y): 1.0067, norm:1.0773, tok/sec: 103099.29, flops:90.28, batch-reuse:1
@ 7226 train 4.1175 , allloss: 4.1330, dt: 1278.11ms, fracRes: 0.6043, norm(attn): 0.1406, norm(output): 0.2344, norm(x): 0.6810, norm(y): 1.0067, norm:1.2322, tok/sec: 102551.15, flops:89.80, batch-reuse:1
@ 7227 train 4.0939 , allloss: 4.1104, dt: 1276.47ms, fracRes: 0.6038, norm(attn): 0.1426, norm(output): 0.2363, norm(x): 0.6841, norm(y): 1.0065, norm:1.3182, tok/sec: 102682.90, flops:89.92, batch-reuse:1
@ 7228 train 4.1673 , allloss: 4.1833, dt: 1274.38ms, fracRes: 0.6038, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6823, norm(y): 1.0065, norm:1.1096, tok/sec: 102851.95, flops:90.07, batch-reuse:1
@ 7229 train 4.0293 , allloss: 4.0450, dt: 1271.84ms, fracRes: 0.6036, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6812, norm(y): 1.0066, norm:1.0658, tok/sec: 103057.08, flops:90.25, batch-reuse:1
@ 7230 train 3.9966 , allloss: 4.0124, dt: 1288.18ms, fracRes: 0.6036, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6814, norm(y): 1.0067, norm:1.3206, tok/sec: 101750.01, flops:89.10, batch-reuse:1
@ 7231 train 4.1664 , allloss: 4.1836, dt: 1301.23ms, fracRes: 0.6038, norm(attn): 0.1416, norm(output): 0.2373, norm(x): 0.6838, norm(y): 1.0066, norm:1.3017, tok/sec: 100729.55, flops:88.21, batch-reuse:1
@ 7232 train 4.0399 , allloss: 4.0564, dt: 1277.74ms, fracRes: 0.6042, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6834, norm(y): 1.0066, norm:1.1351, tok/sec: 102581.29, flops:89.83, batch-reuse:1
@ 7233 train 4.0417 , allloss: 4.0579, dt: 1262.41ms, fracRes: 0.6042, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6815, norm(y): 1.0066, norm:1.0900, tok/sec: 103827.13, flops:90.92, batch-reuse:1
@ 7234 train 4.1474 , allloss: 4.1642, dt: 1258.45ms, fracRes: 0.6041, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6798, norm(y): 1.0066, norm:1.1396, tok/sec: 104153.14, flops:91.21, batch-reuse:1
@ 7235 train 4.2580 , allloss: 4.2759, dt: 1248.35ms, fracRes: 0.6034, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6819, norm(y): 1.0062, norm:1.3996, tok/sec: 104996.06, flops:91.94, batch-reuse:1
@ 7236 train 4.0395 , allloss: 4.0556, dt: 1263.51ms, fracRes: 0.6025, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6787, norm(y): 1.0065, norm:1.2673, tok/sec: 103736.79, flops:90.84, batch-reuse:1
@ 7237 train 4.0856 , allloss: 4.1027, dt: 1259.01ms, fracRes: 0.6037, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6781, norm(y): 1.0067, norm:1.3023, tok/sec: 104107.33, flops:91.17, batch-reuse:1
@ 7238 train 4.1588 , allloss: 4.1754, dt: 1265.81ms, fracRes: 0.6039, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6777, norm(y): 1.0066, norm:1.2373, tok/sec: 103547.69, flops:90.68, batch-reuse:1
@ 7239 train 4.1530 , allloss: 4.1692, dt: 1258.04ms, fracRes: 0.6034, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6776, norm(y): 1.0065, norm:1.1124, tok/sec: 104187.37, flops:91.24, batch-reuse:1
@ 7240 train 4.1205 , allloss: 4.1369, dt: 1277.26ms, fracRes: 0.6038, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6785, norm(y): 1.0066, norm:1.1296, tok/sec: 102619.53, flops:89.86, batch-reuse:1
@ 7241 train 4.0797 , allloss: 4.0959, dt: 1267.09ms, fracRes: 0.6033, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6771, norm(y): 1.0066, norm:1.3126, tok/sec: 103443.67, flops:90.58, batch-reuse:1
@ 7242 train 4.1051 , allloss: 4.1219, dt: 1265.46ms, fracRes: 0.6043, norm(attn): 0.1396, norm(output): 0.2344, norm(x): 0.6770, norm(y): 1.0066, norm:1.4026, tok/sec: 103576.70, flops:90.70, batch-reuse:1
@ 7243 train 4.0886 , allloss: 4.1059, dt: 1290.74ms, fracRes: 0.6038, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6788, norm(y): 1.0065, norm:1.2739, tok/sec: 101548.34, flops:88.92, batch-reuse:1
@ 7244 train 4.1187 , allloss: 4.1359, dt: 1284.78ms, fracRes: 0.6030, norm(attn): 0.1426, norm(output): 0.2373, norm(x): 0.6791, norm(y): 1.0065, norm:1.1828, tok/sec: 102019.21, flops:89.34, batch-reuse:1
@ 7245 train 4.0875 , allloss: 4.1040, dt: 1314.05ms, fracRes: 0.6026, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6775, norm(y): 1.0065, norm:1.4210, tok/sec: 99746.61, flops:87.35, batch-reuse:1
@ 7246 train 4.2361 , allloss: 4.2533, dt: 1246.91ms, fracRes: 0.6041, norm(attn): 0.1406, norm(output): 0.2344, norm(x): 0.6780, norm(y): 1.0065, norm:1.4489, tok/sec: 105117.06, flops:92.05, batch-reuse:1
@ 7247 train 4.1169 , allloss: 4.1349, dt: 1264.10ms, fracRes: 0.6039, norm(attn): 0.1416, norm(output): 0.2373, norm(x): 0.6814, norm(y): 1.0063, norm:1.3073, tok/sec: 103687.78, flops:90.80, batch-reuse:1
@ 7248 train 4.0832 , allloss: 4.1011, dt: 1269.20ms, fracRes: 0.6038, norm(attn): 0.1426, norm(output): 0.2383, norm(x): 0.6816, norm(y): 1.0064, norm:1.3748, tok/sec: 103271.64, flops:90.43, batch-reuse:1
@ 7249 train 3.9675 , allloss: 3.9859, dt: 1274.95ms, fracRes: 0.6028, norm(attn): 0.1436, norm(output): 0.2383, norm(x): 0.6832, norm(y): 1.0066, norm:1.4467, tok/sec: 102805.73, flops:90.03, batch-reuse:1
@ 7250 train 4.0432 , allloss: 4.0607, dt: 1260.97ms, fracRes: 0.6040, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6847, norm(y): 1.0066, norm:1.0801, tok/sec: 103945.07, flops:91.02, batch-reuse:1
@ 7251 train 4.0818 , allloss: 4.0981, dt: 1281.23ms, fracRes: 0.6035, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6810, norm(y): 1.0065, norm:1.1255, tok/sec: 102302.04, flops:89.58, batch-reuse:1
@ 7252 train 4.0612 , allloss: 4.0771, dt: 1269.39ms, fracRes: 0.6033, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6807, norm(y): 1.0066, norm:1.1465, tok/sec: 103255.98, flops:90.42, batch-reuse:1
@ 7253 train 4.0188 , allloss: 4.0356, dt: 1275.25ms, fracRes: 0.6034, norm(attn): 0.1426, norm(output): 0.2363, norm(x): 0.6817, norm(y): 1.0065, norm:1.2264, tok/sec: 102781.27, flops:90.00, batch-reuse:1
@ 7254 train 4.1981 , allloss: 4.2143, dt: 1282.25ms, fracRes: 0.6026, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6779, norm(y): 1.0062, norm:1.1456, tok/sec: 102219.92, flops:89.51, batch-reuse:1
@ 7255 train 4.2426 , allloss: 4.2595, dt: 1282.96ms, fracRes: 0.6031, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6765, norm(y): 1.0064, norm:1.1447, tok/sec: 102163.39, flops:89.46, batch-reuse:1
@ 7256 train 4.3588 , allloss: 4.3764, dt: 1267.66ms, fracRes: 0.6023, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6784, norm(y): 1.0062, norm:1.3188, tok/sec: 103396.64, flops:90.54, batch-reuse:1
@ 7257 train 4.2155 , allloss: 4.2326, dt: 1269.80ms, fracRes: 0.6022, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6780, norm(y): 1.0063, norm:1.2117, tok/sec: 103222.54, flops:90.39, batch-reuse:1
@ 7258 train 4.2503 , allloss: 4.2666, dt: 1260.25ms, fracRes: 0.6026, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6765, norm(y): 1.0064, norm:1.1272, tok/sec: 104004.60, flops:91.08, batch-reuse:1
@ 7259 train 4.1603 , allloss: 4.1774, dt: 1261.79ms, fracRes: 0.6030, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6804, norm(y): 1.0064, norm:1.2451, tok/sec: 103877.82, flops:90.96, batch-reuse:1
@ 7260 train 4.2278 , allloss: 4.2456, dt: 1273.84ms, fracRes: 0.6033, norm(attn): 0.1436, norm(output): 0.2354, norm(x): 0.6801, norm(y): 1.0063, norm:1.2068, tok/sec: 102895.36, flops:90.10, batch-reuse:1
@ 7261 train 4.1867 , allloss: 4.2034, dt: 1260.85ms, fracRes: 0.6032, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6796, norm(y): 1.0063, norm:1.2939, tok/sec: 103954.86, flops:91.03, batch-reuse:1
@ 7262 train 4.4448 , allloss: 4.4613, dt: 1270.46ms, fracRes: 0.6032, norm(attn): 0.1416, norm(output): 0.2373, norm(x): 0.6836, norm(y): 1.0061, norm:1.2976, tok/sec: 103169.27, flops:90.34, batch-reuse:1
@ 7263 train 4.2156 , allloss: 4.2319, dt: 1278.87ms, fracRes: 0.6026, norm(attn): 0.1426, norm(output): 0.2383, norm(x): 0.6826, norm(y): 1.0063, norm:1.1521, tok/sec: 102490.11, flops:89.75, batch-reuse:1
@ 7264 train 4.4495 , allloss: 4.4672, dt: 1293.95ms, fracRes: 0.6035, norm(attn): 0.1416, norm(output): 0.2373, norm(x): 0.6821, norm(y): 1.0064, norm:1.1758, tok/sec: 101296.34, flops:88.70, batch-reuse:1
@ 7265 train 4.2700 , allloss: 4.2872, dt: 1285.72ms, fracRes: 0.6039, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6816, norm(y): 1.0064, norm:1.5742, tok/sec: 101944.29, flops:89.27, batch-reuse:1
@ 7266 train 4.1851 , allloss: 4.2016, dt: 1291.23ms, fracRes: 0.6037, norm(attn): 0.1426, norm(output): 0.2373, norm(x): 0.6832, norm(y): 1.0062, norm:1.2940, tok/sec: 101509.23, flops:88.89, batch-reuse:1
@ 7267 train 4.1910 , allloss: 4.2081, dt: 1286.59ms, fracRes: 0.6031, norm(attn): 0.1436, norm(output): 0.2393, norm(x): 0.6830, norm(y): 1.0064, norm:1.1892, tok/sec: 101875.27, flops:89.21, batch-reuse:1
@ 7268 train 4.1759 , allloss: 4.1924, dt: 1250.27ms, fracRes: 0.6024, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6796, norm(y): 1.0064, norm:1.0855, tok/sec: 104834.71, flops:91.80, batch-reuse:1
@ 7269 train 4.1862 , allloss: 4.2033, dt: 1264.49ms, fracRes: 0.6021, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6800, norm(y): 1.0063, norm:1.1445, tok/sec: 103656.07, flops:90.77, batch-reuse:1
@ 7270 train 4.3531 , allloss: 4.3699, dt: 1290.14ms, fracRes: 0.6031, norm(attn): 0.1396, norm(output): 0.2344, norm(x): 0.6781, norm(y): 1.0063, norm:1.5173, tok/sec: 101595.05, flops:88.97, batch-reuse:1
@ 7271 train 4.3026 , allloss: 4.3192, dt: 1273.42ms, fracRes: 0.6016, norm(attn): 0.1426, norm(output): 0.2383, norm(x): 0.6808, norm(y): 1.0062, norm:1.3119, tok/sec: 102928.94, flops:90.13, batch-reuse:1
@ 7272 train 4.2411 , allloss: 4.2581, dt: 1273.32ms, fracRes: 0.6026, norm(attn): 0.1426, norm(output): 0.2373, norm(x): 0.6833, norm(y): 1.0064, norm:1.0425, tok/sec: 102937.53, flops:90.14, batch-reuse:1
@ 7273 train 4.4043 , allloss: 4.4218, dt: 1294.00ms, fracRes: 0.6022, norm(attn): 0.1426, norm(output): 0.2383, norm(x): 0.6804, norm(y): 1.0061, norm:1.4503, tok/sec: 101292.11, flops:88.70, batch-reuse:1
@ 7274 train 4.1943 , allloss: 4.2110, dt: 1239.08ms, fracRes: 0.6028, norm(attn): 0.1426, norm(output): 0.2373, norm(x): 0.6813, norm(y): 1.0063, norm:1.2387, tok/sec: 105781.86, flops:92.63, batch-reuse:1
@ 7275 train 4.3948 , allloss: 4.4110, dt: 1257.75ms, fracRes: 0.6024, norm(attn): 0.1426, norm(output): 0.2373, norm(x): 0.6817, norm(y): 1.0062, norm:1.1077, tok/sec: 104211.74, flops:91.26, batch-reuse:1
@ 7276 train 4.3017 , allloss: 4.3186, dt: 1280.56ms, fracRes: 0.6027, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6821, norm(y): 1.0063, norm:1.1920, tok/sec: 102355.12, flops:89.63, batch-reuse:1
@ 7277 train 4.2463 , allloss: 4.2630, dt: 1264.48ms, fracRes: 0.6016, norm(attn): 0.1426, norm(output): 0.2383, norm(x): 0.6800, norm(y): 1.0062, norm:1.1124, tok/sec: 103657.22, flops:90.77, batch-reuse:1
@ 7278 train 4.2785 , allloss: 4.2954, dt: 1260.49ms, fracRes: 0.6021, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6794, norm(y): 1.0063, norm:1.1295, tok/sec: 103985.12, flops:91.06, batch-reuse:1
@ 7279 train 4.2524 , allloss: 4.2691, dt: 1276.36ms, fracRes: 0.6021, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6803, norm(y): 1.0062, norm:1.2189, tok/sec: 102692.32, flops:89.93, batch-reuse:1
@ 7280 train 4.2448 , allloss: 4.2615, dt: 1278.67ms, fracRes: 0.6024, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6809, norm(y): 1.0063, norm:1.5308, tok/sec: 102506.73, flops:89.76, batch-reuse:1
@ 7281 train 4.2894 , allloss: 4.3063, dt: 1266.23ms, fracRes: 0.6028, norm(attn): 0.1406, norm(output): 0.2373, norm(x): 0.6808, norm(y): 1.0063, norm:1.1754, tok/sec: 103513.28, flops:90.65, batch-reuse:1
@ 7282 train 4.2687 , allloss: 4.2854, dt: 1259.44ms, fracRes: 0.6036, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6823, norm(y): 1.0062, norm:1.3873, tok/sec: 104071.81, flops:91.13, batch-reuse:1
@ 7283 train 4.3944 , allloss: 4.4110, dt: 1263.34ms, fracRes: 0.6045, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6835, norm(y): 1.0061, norm:1.4333, tok/sec: 103750.08, flops:90.85, batch-reuse:1
@ 7284 train 4.2460 , allloss: 4.2620, dt: 1278.60ms, fracRes: 0.6047, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6830, norm(y): 1.0064, norm:1.1807, tok/sec: 102511.86, flops:89.77, batch-reuse:1
@ 7285 train 4.2436 , allloss: 4.2603, dt: 1288.50ms, fracRes: 0.6029, norm(attn): 0.1426, norm(output): 0.2383, norm(x): 0.6794, norm(y): 1.0062, norm:1.2868, tok/sec: 101724.22, flops:89.08, batch-reuse:1
@ 7286 train 4.2239 , allloss: 4.2411, dt: 1289.56ms, fracRes: 0.6016, norm(attn): 0.1436, norm(output): 0.2383, norm(x): 0.6785, norm(y): 1.0061, norm:1.3122, tok/sec: 101640.90, flops:89.01, batch-reuse:1
@ 7287 train 4.2709 , allloss: 4.2884, dt: 1288.78ms, fracRes: 0.6030, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6798, norm(y): 1.0063, norm:1.3437, tok/sec: 101702.71, flops:89.06, batch-reuse:1
@ 7288 train 4.3349 , allloss: 4.3512, dt: 1269.86ms, fracRes: 0.6023, norm(attn): 0.1416, norm(output): 0.2383, norm(x): 0.6782, norm(y): 1.0062, norm:1.2576, tok/sec: 103217.99, flops:90.39, batch-reuse:1
@ 7289 train 4.2681 , allloss: 4.2846, dt: 1326.80ms, fracRes: 0.6023, norm(attn): 0.1426, norm(output): 0.2373, norm(x): 0.6796, norm(y): 1.0063, norm:1.1966, tok/sec: 98787.79, flops:86.51, batch-reuse:1
@ 7290 train 4.3160 , allloss: 4.3325, dt: 1315.79ms, fracRes: 0.6037, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6822, norm(y): 1.0064, norm:1.3706, tok/sec: 99614.52, flops:87.23, batch-reuse:1
@ 7291 train 4.2182 , allloss: 4.2340, dt: 1328.17ms, fracRes: 0.6043, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6812, norm(y): 1.0064, norm:1.2764, tok/sec: 98686.33, flops:86.42, batch-reuse:1
@ 7292 train 4.1749 , allloss: 4.1908, dt: 1271.51ms, fracRes: 0.6040, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6800, norm(y): 1.0064, norm:1.2717, tok/sec: 103083.57, flops:90.27, batch-reuse:1
@ 7293 train 4.2364 , allloss: 4.2523, dt: 1262.61ms, fracRes: 0.6038, norm(attn): 0.1416, norm(output): 0.2373, norm(x): 0.6825, norm(y): 1.0062, norm:1.1622, tok/sec: 103810.27, flops:90.91, batch-reuse:1
@ 7294 train 4.2652 , allloss: 4.2816, dt: 1271.01ms, fracRes: 0.6029, norm(attn): 0.1426, norm(output): 0.2373, norm(x): 0.6834, norm(y): 1.0063, norm:1.2699, tok/sec: 103124.14, flops:90.30, batch-reuse:1
@ 7295 train 4.2536 , allloss: 4.2699, dt: 1276.56ms, fracRes: 0.6030, norm(attn): 0.1426, norm(output): 0.2373, norm(x): 0.6816, norm(y): 1.0062, norm:1.2016, tok/sec: 102675.90, flops:89.91, batch-reuse:1
@ 7296 train 4.3020 , allloss: 4.3186, dt: 1265.34ms, fracRes: 0.6038, norm(attn): 0.1406, norm(output): 0.2373, norm(x): 0.6843, norm(y): 1.0061, norm:1.2313, tok/sec: 103586.58, flops:90.71, batch-reuse:1
@ 7297 train 4.1771 , allloss: 4.1936, dt: 1285.02ms, fracRes: 0.6040, norm(attn): 0.1406, norm(output): 0.2373, norm(x): 0.6834, norm(y): 1.0064, norm:1.1794, tok/sec: 102000.00, flops:89.32, batch-reuse:1
@ 7298 train 4.2071 , allloss: 4.2236, dt: 1284.92ms, fracRes: 0.6037, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6818, norm(y): 1.0065, norm:1.2075, tok/sec: 102008.12, flops:89.33, batch-reuse:1
@ 7299 train 4.1726 , allloss: 4.1907, dt: 1266.43ms, fracRes: 0.6036, norm(attn): 0.1426, norm(output): 0.2363, norm(x): 0.6818, norm(y): 1.0063, norm:1.3008, tok/sec: 103497.38, flops:90.63, batch-reuse:1
@ 7300 train 4.2024 , allloss: 4.2199, dt: 1264.16ms, fracRes: 0.6046, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6823, norm(y): 1.0063, norm:1.2900, tok/sec: 103682.73, flops:90.79, batch-reuse:1
@ 7301 train 4.2851 , allloss: 4.3021, dt: 1276.32ms, fracRes: 0.6036, norm(attn): 0.1426, norm(output): 0.2383, norm(x): 0.6823, norm(y): 1.0062, norm:1.2273, tok/sec: 102695.48, flops:89.93, batch-reuse:1
@ 7302 train 4.2076 , allloss: 4.2257, dt: 1273.72ms, fracRes: 0.6039, norm(attn): 0.1426, norm(output): 0.2383, norm(x): 0.6825, norm(y): 1.0061, norm:1.2956, tok/sec: 102904.97, flops:90.11, batch-reuse:1
@ 7303 train 4.3161 , allloss: 4.3324, dt: 1286.27ms, fracRes: 0.6038, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6795, norm(y): 1.0063, norm:1.3813, tok/sec: 101900.76, flops:89.23, batch-reuse:1
@ 7304 train 4.2994 , allloss: 4.3161, dt: 1298.52ms, fracRes: 0.6034, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6800, norm(y): 1.0063, norm:1.1246, tok/sec: 100939.21, flops:88.39, batch-reuse:1
@ 7305 train 4.2074 , allloss: 4.2242, dt: 1268.22ms, fracRes: 0.6031, norm(attn): 0.1426, norm(output): 0.2363, norm(x): 0.6790, norm(y): 1.0063, norm:1.2023, tok/sec: 103351.27, flops:90.50, batch-reuse:1
@ 7306 train 4.2780 , allloss: 4.2944, dt: 1282.96ms, fracRes: 0.6025, norm(attn): 0.1426, norm(output): 0.2373, norm(x): 0.6785, norm(y): 1.0063, norm:1.2525, tok/sec: 102163.81, flops:89.46, batch-reuse:1
@ 7307 train 4.3283 , allloss: 4.3445, dt: 1273.48ms, fracRes: 0.6019, norm(attn): 0.1426, norm(output): 0.2383, norm(x): 0.6790, norm(y): 1.0062, norm:1.1404, tok/sec: 102924.16, flops:90.13, batch-reuse:1
@ 7308 train 4.2562 , allloss: 4.2726, dt: 1286.95ms, fracRes: 0.6024, norm(attn): 0.1426, norm(output): 0.2383, norm(x): 0.6789, norm(y): 1.0062, norm:1.1681, tok/sec: 101847.35, flops:89.19, batch-reuse:1
@ 7309 train 4.2498 , allloss: 4.2665, dt: 1260.09ms, fracRes: 0.6031, norm(attn): 0.1416, norm(output): 0.2373, norm(x): 0.6802, norm(y): 1.0062, norm:1.2557, tok/sec: 104017.94, flops:91.09, batch-reuse:1
@ 7310 train 4.1680 , allloss: 4.1848, dt: 1269.89ms, fracRes: 0.6029, norm(attn): 0.1436, norm(output): 0.2383, norm(x): 0.6801, norm(y): 1.0065, norm:1.2340, tok/sec: 103215.37, flops:90.38, batch-reuse:1
@ 7311 train 4.2360 , allloss: 4.2521, dt: 1291.28ms, fracRes: 0.6033, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6816, norm(y): 1.0064, norm:1.1887, tok/sec: 101505.20, flops:88.89, batch-reuse:1
@ 7312 train 4.2112 , allloss: 4.2267, dt: 1270.72ms, fracRes: 0.6032, norm(attn): 0.1406, norm(output): 0.2363, norm(x): 0.6815, norm(y): 1.0064, norm:1.0471, tok/sec: 103147.80, flops:90.33, batch-reuse:1
@ 7313 train 4.1403 , allloss: 4.1564, dt: 1260.42ms, fracRes: 0.6022, norm(attn): 0.1436, norm(output): 0.2393, norm(x): 0.6837, norm(y): 1.0064, norm:1.1103, tok/sec: 103991.08, flops:91.06, batch-reuse:1
@ 7314 train 4.2977 , allloss: 4.3142, dt: 1258.26ms, fracRes: 0.6029, norm(attn): 0.1426, norm(output): 0.2373, norm(x): 0.6834, norm(y): 1.0064, norm:1.1369, tok/sec: 104169.45, flops:91.22, batch-reuse:1
@ 7315 train 4.2793 , allloss: 4.2956, dt: 1256.38ms, fracRes: 0.6028, norm(attn): 0.1416, norm(output): 0.2383, norm(x): 0.6812, norm(y): 1.0062, norm:1.1523, tok/sec: 104325.14, flops:91.36, batch-reuse:1
@ 7316 train 4.2458 , allloss: 4.2620, dt: 1268.13ms, fracRes: 0.6030, norm(attn): 0.1416, norm(output): 0.2373, norm(x): 0.6786, norm(y): 1.0062, norm:1.1735, tok/sec: 103358.15, flops:90.51, batch-reuse:1
@ 7317 train 4.2815 , allloss: 4.2986, dt: 1255.13ms, fracRes: 0.6025, norm(attn): 0.1436, norm(output): 0.2373, norm(x): 0.6791, norm(y): 1.0062, norm:1.0836, tok/sec: 104429.26, flops:91.45, batch-reuse:1
@ 7318 train 4.3020 , allloss: 4.3190, dt: 1275.85ms, fracRes: 0.6022, norm(attn): 0.1436, norm(output): 0.2393, norm(x): 0.6795, norm(y): 1.0062, norm:1.4436, tok/sec: 102733.02, flops:89.96, batch-reuse:1
@ 7319 train 4.2967 , allloss: 4.3129, dt: 1306.44ms, fracRes: 0.6022, norm(attn): 0.1426, norm(output): 0.2373, norm(x): 0.6780, norm(y): 1.0062, norm:1.2394, tok/sec: 100327.38, flops:87.86, batch-reuse:1
@ 7320 train 4.2225 , allloss: 4.2396, dt: 1276.56ms, fracRes: 0.6030, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6814, norm(y): 1.0065, norm:1.4999, tok/sec: 102675.80, flops:89.91, batch-reuse:1
@ 7321 train 4.2012 , allloss: 4.2178, dt: 1262.21ms, fracRes: 0.6025, norm(attn): 0.1416, norm(output): 0.2373, norm(x): 0.6777, norm(y): 1.0064, norm:1.0915, tok/sec: 103843.44, flops:90.93, batch-reuse:1
@ 7322 train 4.2499 , allloss: 4.2661, dt: 1289.27ms, fracRes: 0.6029, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6786, norm(y): 1.0064, norm:1.5844, tok/sec: 101663.51, flops:89.03, batch-reuse:1
@ 7323 train 4.2819 , allloss: 4.2992, dt: 1325.51ms, fracRes: 0.6034, norm(attn): 0.1426, norm(output): 0.2363, norm(x): 0.6800, norm(y): 1.0063, norm:1.4371, tok/sec: 98884.15, flops:86.59, batch-reuse:1
@ 7324 train 4.2119 , allloss: 4.2289, dt: 1321.24ms, fracRes: 0.6031, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6794, norm(y): 1.0062, norm:1.2052, tok/sec: 99203.76, flops:86.87, batch-reuse:1
@ 7325 train 4.2342 , allloss: 4.2504, dt: 1276.24ms, fracRes: 0.6033, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6793, norm(y): 1.0062, norm:1.1562, tok/sec: 102701.50, flops:89.93, batch-reuse:1
@ 7326 train 4.3006 , allloss: 4.3164, dt: 1292.37ms, fracRes: 0.6036, norm(attn): 0.1416, norm(output): 0.2383, norm(x): 0.6807, norm(y): 1.0062, norm:1.3005, tok/sec: 101419.85, flops:88.81, batch-reuse:1
@ 7327 train 4.2465 , allloss: 4.2625, dt: 1292.64ms, fracRes: 0.6036, norm(attn): 0.1426, norm(output): 0.2363, norm(x): 0.6808, norm(y): 1.0063, norm:1.2887, tok/sec: 101398.99, flops:88.79, batch-reuse:1
@ 7328 train 4.2934 , allloss: 4.3097, dt: 1265.92ms, fracRes: 0.6042, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6802, norm(y): 1.0063, norm:0.9797, tok/sec: 103539.17, flops:90.67, batch-reuse:1
@ 7329 train 4.1601 , allloss: 4.1769, dt: 1261.54ms, fracRes: 0.6041, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6813, norm(y): 1.0064, norm:1.2252, tok/sec: 103898.34, flops:90.98, batch-reuse:1
@ 7330 train 4.2782 , allloss: 4.2941, dt: 1287.70ms, fracRes: 0.6038, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6798, norm(y): 1.0062, norm:1.4264, tok/sec: 101787.59, flops:89.13, batch-reuse:1
@ 7331 train 4.2235 , allloss: 4.2404, dt: 1258.22ms, fracRes: 0.6034, norm(attn): 0.1436, norm(output): 0.2363, norm(x): 0.6804, norm(y): 1.0062, norm:1.2394, tok/sec: 104172.78, flops:91.22, batch-reuse:1
@ 7332 train 4.2563 , allloss: 4.2728, dt: 1276.60ms, fracRes: 0.6029, norm(attn): 0.1426, norm(output): 0.2373, norm(x): 0.6797, norm(y): 1.0060, norm:1.2665, tok/sec: 102672.87, flops:89.91, batch-reuse:1
@ 7333 train 4.2243 , allloss: 4.2409, dt: 1252.36ms, fracRes: 0.6033, norm(attn): 0.1426, norm(output): 0.2363, norm(x): 0.6808, norm(y): 1.0062, norm:1.4600, tok/sec: 104659.79, flops:91.65, batch-reuse:1
@ 7334 train 4.2158 , allloss: 4.2319, dt: 1271.78ms, fracRes: 0.6038, norm(attn): 0.1426, norm(output): 0.2363, norm(x): 0.6792, norm(y): 1.0062, norm:1.1067, tok/sec: 103061.93, flops:90.25, batch-reuse:1
@ 7335 train 4.3101 , allloss: 4.3264, dt: 1295.21ms, fracRes: 0.6036, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6801, norm(y): 1.0062, norm:1.4657, tok/sec: 101197.72, flops:88.62, batch-reuse:1
@ 7336 train 4.1796 , allloss: 4.1955, dt: 1283.52ms, fracRes: 0.6029, norm(attn): 0.1426, norm(output): 0.2363, norm(x): 0.6777, norm(y): 1.0062, norm:1.1785, tok/sec: 102119.53, flops:89.42, batch-reuse:1
@ 7337 train 4.1921 , allloss: 4.2079, dt: 1281.79ms, fracRes: 0.6016, norm(attn): 0.1445, norm(output): 0.2402, norm(x): 0.6764, norm(y): 1.0060, norm:1.3086, tok/sec: 102256.83, flops:89.54, batch-reuse:1
@ 7338 train 4.5160 , allloss: 4.5320, dt: 1262.11ms, fracRes: 0.6016, norm(attn): 0.1426, norm(output): 0.2402, norm(x): 0.6774, norm(y): 1.0059, norm:1.4191, tok/sec: 103851.35, flops:90.94, batch-reuse:1
@ 7339 train 4.2302 , allloss: 4.2470, dt: 1264.73ms, fracRes: 0.6031, norm(attn): 0.1426, norm(output): 0.2363, norm(x): 0.6769, norm(y): 1.0063, norm:1.3070, tok/sec: 103636.59, flops:90.75, batch-reuse:1
@ 7340 train 4.3309 , allloss: 4.3474, dt: 1268.14ms, fracRes: 0.6033, norm(attn): 0.1426, norm(output): 0.2393, norm(x): 0.6808, norm(y): 1.0062, norm:1.2366, tok/sec: 103357.47, flops:90.51, batch-reuse:1
@ 7341 train 4.3799 , allloss: 4.3964, dt: 1290.11ms, fracRes: 0.6036, norm(attn): 0.1436, norm(output): 0.2373, norm(x): 0.6819, norm(y): 1.0062, norm:1.3284, tok/sec: 101597.51, flops:88.97, batch-reuse:1
@ 7342 train 4.3240 , allloss: 4.3403, dt: 1297.29ms, fracRes: 0.6039, norm(attn): 0.1426, norm(output): 0.2373, norm(x): 0.6842, norm(y): 1.0062, norm:1.2226, tok/sec: 101035.62, flops:88.48, batch-reuse:1
@ 7343 train 4.2110 , allloss: 4.2265, dt: 1288.47ms, fracRes: 0.6039, norm(attn): 0.1426, norm(output): 0.2373, norm(x): 0.6805, norm(y): 1.0064, norm:1.1872, tok/sec: 101727.19, flops:89.08, batch-reuse:1
@ 7344 train 4.2249 , allloss: 4.2411, dt: 1258.31ms, fracRes: 0.6036, norm(attn): 0.1426, norm(output): 0.2373, norm(x): 0.6796, norm(y): 1.0063, norm:1.2407, tok/sec: 104165.32, flops:91.22, batch-reuse:1
@ 7345 train 4.3244 , allloss: 4.3406, dt: 1277.32ms, fracRes: 0.6043, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6795, norm(y): 1.0064, norm:1.4676, tok/sec: 102614.51, flops:89.86, batch-reuse:1
@ 7346 train 4.2703 , allloss: 4.2863, dt: 1273.36ms, fracRes: 0.6028, norm(attn): 0.1416, norm(output): 0.2373, norm(x): 0.6767, norm(y): 1.0061, norm:1.4175, tok/sec: 102933.83, flops:90.14, batch-reuse:1
@ 7347 train 4.2438 , allloss: 4.2611, dt: 1259.02ms, fracRes: 0.6026, norm(attn): 0.1426, norm(output): 0.2354, norm(x): 0.6751, norm(y): 1.0061, norm:1.3222, tok/sec: 104106.38, flops:91.16, batch-reuse:1
@ 7348 train 4.1833 , allloss: 4.2005, dt: 1278.33ms, fracRes: 0.6030, norm(attn): 0.1426, norm(output): 0.2373, norm(x): 0.6782, norm(y): 1.0062, norm:1.2500, tok/sec: 102534.13, flops:89.79, batch-reuse:1
@ 7349 train 4.1692 , allloss: 4.1858, dt: 1276.43ms, fracRes: 0.6042, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6813, norm(y): 1.0062, norm:1.2145, tok/sec: 102686.52, flops:89.92, batch-reuse:1
@ 7350 train 4.1546 , allloss: 4.1716, dt: 1306.31ms, fracRes: 0.6050, norm(attn): 0.1426, norm(output): 0.2354, norm(x): 0.6818, norm(y): 1.0062, norm:1.1283, tok/sec: 100337.67, flops:87.86, batch-reuse:1
@ 7351 train 4.2133 , allloss: 4.2292, dt: 1287.09ms, fracRes: 0.6039, norm(attn): 0.1436, norm(output): 0.2354, norm(x): 0.6798, norm(y): 1.0063, norm:1.2374, tok/sec: 101835.90, flops:89.18, batch-reuse:1
@ 7352 train 4.2103 , allloss: 4.2272, dt: 1269.45ms, fracRes: 0.6029, norm(attn): 0.1426, norm(output): 0.2373, norm(x): 0.6835, norm(y): 1.0062, norm:1.1301, tok/sec: 103251.08, flops:90.42, batch-reuse:1
@ 7353 train 4.1878 , allloss: 4.2045, dt: 1269.76ms, fracRes: 0.6021, norm(attn): 0.1426, norm(output): 0.2393, norm(x): 0.6828, norm(y): 1.0063, norm:1.1909, tok/sec: 103225.78, flops:90.39, batch-reuse:1
@ 7354 train 4.1588 , allloss: 4.1748, dt: 1267.27ms, fracRes: 0.6019, norm(attn): 0.1416, norm(output): 0.2373, norm(x): 0.6821, norm(y): 1.0064, norm:1.0231, tok/sec: 103428.53, flops:90.57, batch-reuse:1
@ 7355 train 4.1332 , allloss: 4.1505, dt: 1280.23ms, fracRes: 0.6031, norm(attn): 0.1426, norm(output): 0.2373, norm(x): 0.6833, norm(y): 1.0064, norm:1.1672, tok/sec: 102381.35, flops:89.65, batch-reuse:1
@ 7356 train 4.2323 , allloss: 4.2485, dt: 1296.50ms, fracRes: 0.6032, norm(attn): 0.1416, norm(output): 0.2373, norm(x): 0.6840, norm(y): 1.0062, norm:1.1712, tok/sec: 101096.50, flops:88.53, batch-reuse:1
@ 7357 train 4.1238 , allloss: 4.1402, dt: 1288.32ms, fracRes: 0.6038, norm(attn): 0.1426, norm(output): 0.2383, norm(x): 0.6825, norm(y): 1.0063, norm:1.1782, tok/sec: 101738.88, flops:89.09, batch-reuse:1
@ 7358 train 4.1478 , allloss: 4.1640, dt: 1270.76ms, fracRes: 0.6035, norm(attn): 0.1416, norm(output): 0.2373, norm(x): 0.6813, norm(y): 1.0062, norm:1.0711, tok/sec: 103144.26, flops:90.32, batch-reuse:1
@ 7359 train 4.2146 , allloss: 4.2311, dt: 1289.57ms, fracRes: 0.6032, norm(attn): 0.1426, norm(output): 0.2373, norm(x): 0.6815, norm(y): 1.0062, norm:1.1860, tok/sec: 101639.75, flops:89.00, batch-reuse:1
@ 7360 train 4.1097 , allloss: 4.1267, dt: 1281.20ms, fracRes: 0.6034, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6805, norm(y): 1.0065, norm:1.1213, tok/sec: 102303.70, flops:89.59, batch-reuse:1
@ 7361 train 4.2144 , allloss: 4.2307, dt: 1267.28ms, fracRes: 0.6031, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6782, norm(y): 1.0063, norm:1.1492, tok/sec: 103427.96, flops:90.57, batch-reuse:1
@ 7362 train 4.1546 , allloss: 4.1709, dt: 1256.66ms, fracRes: 0.6030, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6789, norm(y): 1.0063, norm:1.1043, tok/sec: 104302.20, flops:91.34, batch-reuse:1
@ 7363 train 4.1333 , allloss: 4.1493, dt: 1261.60ms, fracRes: 0.6031, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6780, norm(y): 1.0064, norm:1.2469, tok/sec: 103893.09, flops:90.98, batch-reuse:1
@ 7364 train 4.1610 , allloss: 4.1788, dt: 1252.67ms, fracRes: 0.6036, norm(attn): 0.1426, norm(output): 0.2373, norm(x): 0.6772, norm(y): 1.0063, norm:1.2152, tok/sec: 104634.40, flops:91.63, batch-reuse:1
@ 7365 train 4.1788 , allloss: 4.1952, dt: 1275.76ms, fracRes: 0.6045, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6785, norm(y): 1.0062, norm:1.1951, tok/sec: 102740.56, flops:89.97, batch-reuse:1
@ 7366 train 4.1941 , allloss: 4.2099, dt: 1284.61ms, fracRes: 0.6043, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6768, norm(y): 1.0062, norm:1.0803, tok/sec: 102032.14, flops:89.35, batch-reuse:1
@ 7367 train 4.1995 , allloss: 4.2162, dt: 1265.79ms, fracRes: 0.6034, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6768, norm(y): 1.0062, norm:1.2432, tok/sec: 103549.54, flops:90.68, batch-reuse:1
@ 7368 train 4.1984 , allloss: 4.2149, dt: 1284.43ms, fracRes: 0.6027, norm(attn): 0.1426, norm(output): 0.2363, norm(x): 0.6769, norm(y): 1.0062, norm:1.1767, tok/sec: 102046.44, flops:89.36, batch-reuse:1
@ 7369 train 4.2013 , allloss: 4.2174, dt: 1319.88ms, fracRes: 0.6021, norm(attn): 0.1426, norm(output): 0.2373, norm(x): 0.6776, norm(y): 1.0062, norm:1.0819, tok/sec: 99305.89, flops:86.96, batch-reuse:1
@ 7370 train 4.1150 , allloss: 4.1311, dt: 1278.88ms, fracRes: 0.6026, norm(attn): 0.1426, norm(output): 0.2354, norm(x): 0.6783, norm(y): 1.0063, norm:1.1058, tok/sec: 102490.03, flops:89.75, batch-reuse:1
@ 7371 train 4.1819 , allloss: 4.1979, dt: 1266.68ms, fracRes: 0.6025, norm(attn): 0.1426, norm(output): 0.2373, norm(x): 0.6759, norm(y): 1.0062, norm:1.0575, tok/sec: 103476.86, flops:90.61, batch-reuse:1
@ 7372 train 4.2269 , allloss: 4.2433, dt: 1282.68ms, fracRes: 0.6035, norm(attn): 0.1426, norm(output): 0.2363, norm(x): 0.6766, norm(y): 1.0064, norm:1.0925, tok/sec: 102185.80, flops:89.48, batch-reuse:1
@ 7373 train 4.2104 , allloss: 4.2269, dt: 1257.58ms, fracRes: 0.6035, norm(attn): 0.1436, norm(output): 0.2363, norm(x): 0.6789, norm(y): 1.0062, norm:1.2710, tok/sec: 104225.59, flops:91.27, batch-reuse:1
@ 7374 train 4.1853 , allloss: 4.2011, dt: 1268.18ms, fracRes: 0.6030, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6765, norm(y): 1.0061, norm:1.0504, tok/sec: 103354.03, flops:90.51, batch-reuse:1
@ 7375 train 4.1161 , allloss: 4.1329, dt: 1273.27ms, fracRes: 0.6027, norm(attn): 0.1426, norm(output): 0.2373, norm(x): 0.6755, norm(y): 1.0062, norm:1.2027, tok/sec: 102940.89, flops:90.14, batch-reuse:1
@ 7376 train 4.1809 , allloss: 4.1978, dt: 1285.59ms, fracRes: 0.6032, norm(attn): 0.1436, norm(output): 0.2373, norm(x): 0.6761, norm(y): 1.0061, norm:1.2163, tok/sec: 101954.71, flops:89.28, batch-reuse:1
@ 7377 train 4.2153 , allloss: 4.2322, dt: 1264.42ms, fracRes: 0.6038, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6773, norm(y): 1.0061, norm:1.5334, tok/sec: 103662.17, flops:90.78, batch-reuse:1
@ 7378 train 4.2229 , allloss: 4.2393, dt: 1276.50ms, fracRes: 0.6034, norm(attn): 0.1426, norm(output): 0.2363, norm(x): 0.6795, norm(y): 1.0062, norm:1.2265, tok/sec: 102680.81, flops:89.92, batch-reuse:1
@ 7379 train 4.3090 , allloss: 4.3253, dt: 1279.52ms, fracRes: 0.6030, norm(attn): 0.1455, norm(output): 0.2393, norm(x): 0.6811, norm(y): 1.0061, norm:1.1482, tok/sec: 102438.34, flops:89.70, batch-reuse:1
@ 7380 train 4.1873 , allloss: 4.2033, dt: 1272.63ms, fracRes: 0.6040, norm(attn): 0.1426, norm(output): 0.2363, norm(x): 0.6821, norm(y): 1.0062, norm:1.5941, tok/sec: 102992.92, flops:90.19, batch-reuse:1
@ 7381 train 4.1955 , allloss: 4.2110, dt: 1275.98ms, fracRes: 0.6040, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6813, norm(y): 1.0061, norm:1.1803, tok/sec: 102722.96, flops:89.95, batch-reuse:1
@ 7382 train 4.2439 , allloss: 4.2606, dt: 1314.09ms, fracRes: 0.6039, norm(attn): 0.1426, norm(output): 0.2363, norm(x): 0.6836, norm(y): 1.0060, norm:1.3459, tok/sec: 99743.28, flops:87.34, batch-reuse:1
@ 7383 train 4.2017 , allloss: 4.2175, dt: 1285.33ms, fracRes: 0.6043, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6811, norm(y): 1.0061, norm:1.2009, tok/sec: 101975.04, flops:89.30, batch-reuse:1
@ 7384 train 4.1890 , allloss: 4.2050, dt: 1294.19ms, fracRes: 0.6036, norm(attn): 0.1426, norm(output): 0.2373, norm(x): 0.6801, norm(y): 1.0061, norm:1.1049, tok/sec: 101276.88, flops:88.69, batch-reuse:1
@ 7385 train 4.0810 , allloss: 4.0975, dt: 1300.34ms, fracRes: 0.6036, norm(attn): 0.1445, norm(output): 0.2373, norm(x): 0.6815, norm(y): 1.0061, norm:1.0152, tok/sec: 100798.07, flops:88.27, batch-reuse:1
@ 7386 train 4.1148 , allloss: 4.1303, dt: 1276.16ms, fracRes: 0.6031, norm(attn): 0.1426, norm(output): 0.2363, norm(x): 0.6755, norm(y): 1.0062, norm:1.0985, tok/sec: 102708.34, flops:89.94, batch-reuse:1
@ 7387 train 4.2470 , allloss: 4.2632, dt: 1274.80ms, fracRes: 0.6024, norm(attn): 0.1426, norm(output): 0.2393, norm(x): 0.6769, norm(y): 1.0060, norm:1.1139, tok/sec: 102818.04, flops:90.04, batch-reuse:1
@ 7388 train 4.2411 , allloss: 4.2570, dt: 1287.21ms, fracRes: 0.6024, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6755, norm(y): 1.0061, norm:1.0316, tok/sec: 101826.77, flops:89.17, batch-reuse:1
@ 7389 train 4.1841 , allloss: 4.2003, dt: 1283.56ms, fracRes: 0.6023, norm(attn): 0.1436, norm(output): 0.2383, norm(x): 0.6761, norm(y): 1.0061, norm:1.1551, tok/sec: 102115.76, flops:89.42, batch-reuse:1
@ 7390 train 4.1566 , allloss: 4.1726, dt: 1274.52ms, fracRes: 0.6026, norm(attn): 0.1445, norm(output): 0.2393, norm(x): 0.6781, norm(y): 1.0062, norm:1.1271, tok/sec: 102840.10, flops:90.06, batch-reuse:1
@ 7391 train 4.1964 , allloss: 4.2119, dt: 1252.91ms, fracRes: 0.6037, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6793, norm(y): 1.0061, norm:1.1393, tok/sec: 104614.11, flops:91.61, batch-reuse:1
@ 7392 train 4.1139 , allloss: 4.1293, dt: 1262.67ms, fracRes: 0.6040, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6789, norm(y): 1.0063, norm:1.0840, tok/sec: 103805.68, flops:90.90, batch-reuse:1
@ 7393 train 4.0474 , allloss: 4.0633, dt: 1270.47ms, fracRes: 0.6034, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6799, norm(y): 1.0064, norm:1.3121, tok/sec: 103167.86, flops:90.34, batch-reuse:1
@ 7394 train 4.0832 , allloss: 4.0993, dt: 1263.90ms, fracRes: 0.6034, norm(attn): 0.1426, norm(output): 0.2354, norm(x): 0.6769, norm(y): 1.0064, norm:1.1497, tok/sec: 103704.11, flops:90.81, batch-reuse:1
@ 7395 train 4.0590 , allloss: 4.0758, dt: 1272.45ms, fracRes: 0.6031, norm(attn): 0.1426, norm(output): 0.2373, norm(x): 0.6787, norm(y): 1.0062, norm:1.1715, tok/sec: 103007.45, flops:90.20, batch-reuse:1
@ 7396 train 4.0386 , allloss: 4.0546, dt: 1260.98ms, fracRes: 0.6029, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6764, norm(y): 1.0062, norm:1.0920, tok/sec: 103944.56, flops:91.02, batch-reuse:1
@ 7397 train 4.0572 , allloss: 4.0730, dt: 1274.88ms, fracRes: 0.6034, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6750, norm(y): 1.0063, norm:1.1322, tok/sec: 102811.14, flops:90.03, batch-reuse:1
@ 7398 train 4.0465 , allloss: 4.0622, dt: 1251.42ms, fracRes: 0.6037, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6738, norm(y): 1.0063, norm:1.1160, tok/sec: 104738.48, flops:91.72, batch-reuse:1
@ 7399 train 3.9912 , allloss: 4.0072, dt: 1272.72ms, fracRes: 0.6028, norm(attn): 0.1426, norm(output): 0.2354, norm(x): 0.6745, norm(y): 1.0063, norm:1.2721, tok/sec: 102985.92, flops:90.18, batch-reuse:1
@ 7400 train 4.0487 , allloss: 4.0652, dt: 1293.54ms, fracRes: 0.6027, norm(attn): 0.1426, norm(output): 0.2363, norm(x): 0.6746, norm(y): 1.0062, norm:1.0647, tok/sec: 101328.16, flops:88.73, batch-reuse:1
@ 7401 train 4.0609 , allloss: 4.0768, dt: 1298.45ms, fracRes: 0.6033, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6746, norm(y): 1.0061, norm:1.2084, tok/sec: 100944.94, flops:88.40, batch-reuse:1
@ 7402 train 4.0676 , allloss: 4.0838, dt: 1268.80ms, fracRes: 0.6033, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6752, norm(y): 1.0063, norm:1.2258, tok/sec: 103303.58, flops:90.46, batch-reuse:1
@ 7403 train 4.1976 , allloss: 4.2141, dt: 1253.44ms, fracRes: 0.6034, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6768, norm(y): 1.0060, norm:1.2822, tok/sec: 104569.47, flops:91.57, batch-reuse:1
@ 7404 train 4.1004 , allloss: 4.1167, dt: 1276.92ms, fracRes: 0.6027, norm(attn): 0.1426, norm(output): 0.2373, norm(x): 0.6759, norm(y): 1.0061, norm:1.0250, tok/sec: 102646.82, flops:89.89, batch-reuse:1
@ 7405 train 4.0633 , allloss: 4.0790, dt: 1251.19ms, fracRes: 0.6022, norm(attn): 0.1426, norm(output): 0.2354, norm(x): 0.6726, norm(y): 1.0061, norm:1.2163, tok/sec: 104757.72, flops:91.73, batch-reuse:1
@ 7406 train 3.9761 , allloss: 3.9921, dt: 1257.51ms, fracRes: 0.6021, norm(attn): 0.1426, norm(output): 0.2373, norm(x): 0.6736, norm(y): 1.0062, norm:1.3289, tok/sec: 104231.18, flops:91.27, batch-reuse:1
@ 7407 train 4.0907 , allloss: 4.1070, dt: 1288.75ms, fracRes: 0.6027, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6727, norm(y): 1.0061, norm:1.2757, tok/sec: 101704.49, flops:89.06, batch-reuse:1
@ 7408 train 4.1307 , allloss: 4.1476, dt: 1258.68ms, fracRes: 0.6028, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6749, norm(y): 1.0062, norm:1.1069, tok/sec: 104134.80, flops:91.19, batch-reuse:1
@ 7409 train 3.9760 , allloss: 3.9934, dt: 1261.23ms, fracRes: 0.6047, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6744, norm(y): 1.0064, norm:1.3374, tok/sec: 103924.12, flops:91.00, batch-reuse:1
@ 7410 train 4.0263 , allloss: 4.0424, dt: 1260.02ms, fracRes: 0.6038, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6752, norm(y): 1.0063, norm:1.2300, tok/sec: 104023.76, flops:91.09, batch-reuse:1
@ 7411 train 4.0974 , allloss: 4.1161, dt: 1270.04ms, fracRes: 0.6047, norm(attn): 0.1426, norm(output): 0.2363, norm(x): 0.6759, norm(y): 1.0062, norm:1.3197, tok/sec: 103202.70, flops:90.37, batch-reuse:1
@ 7412 train 4.0796 , allloss: 4.0958, dt: 1266.48ms, fracRes: 0.6037, norm(attn): 0.1426, norm(output): 0.2354, norm(x): 0.6747, norm(y): 1.0061, norm:1.2591, tok/sec: 103492.92, flops:90.63, batch-reuse:1
@ 7413 train 4.0630 , allloss: 4.0797, dt: 1273.56ms, fracRes: 0.6031, norm(attn): 0.1436, norm(output): 0.2363, norm(x): 0.6734, norm(y): 1.0061, norm:1.2927, tok/sec: 102917.49, flops:90.12, batch-reuse:1
@ 7414 train 4.0553 , allloss: 4.0717, dt: 1263.04ms, fracRes: 0.6023, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6726, norm(y): 1.0061, norm:1.1343, tok/sec: 103775.23, flops:90.87, batch-reuse:1
@ 7415 train 3.9537 , allloss: 3.9697, dt: 1273.53ms, fracRes: 0.6030, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6744, norm(y): 1.0063, norm:1.1681, tok/sec: 102919.96, flops:90.13, batch-reuse:1
@ 7416 train 4.0980 , allloss: 4.1147, dt: 1276.35ms, fracRes: 0.6030, norm(attn): 0.1426, norm(output): 0.2354, norm(x): 0.6751, norm(y): 1.0062, norm:1.0928, tok/sec: 102692.91, flops:89.93, batch-reuse:1
@ 7417 train 4.0469 , allloss: 4.0632, dt: 1270.46ms, fracRes: 0.6023, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6755, norm(y): 1.0061, norm:1.0460, tok/sec: 103169.29, flops:90.34, batch-reuse:1
@ 7418 train 4.1165 , allloss: 4.1327, dt: 1270.85ms, fracRes: 0.6033, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6758, norm(y): 1.0062, norm:1.1177, tok/sec: 103137.08, flops:90.32, batch-reuse:1
@ 7419 train 4.1429 , allloss: 4.1586, dt: 1254.69ms, fracRes: 0.6039, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6743, norm(y): 1.0062, norm:1.0710, tok/sec: 104465.85, flops:91.48, batch-reuse:1
@ 7420 train 4.1328 , allloss: 4.1479, dt: 1281.26ms, fracRes: 0.6042, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6708, norm(y): 1.0063, norm:1.0515, tok/sec: 102299.43, flops:89.58, batch-reuse:1
@ 7421 train 4.2962 , allloss: 4.3122, dt: 1276.48ms, fracRes: 0.6042, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6725, norm(y): 1.0062, norm:1.2983, tok/sec: 102682.67, flops:89.92, batch-reuse:1
@ 7422 train 3.9521 , allloss: 3.9680, dt: 1280.55ms, fracRes: 0.6032, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6755, norm(y): 1.0061, norm:1.2952, tok/sec: 102355.90, flops:89.63, batch-reuse:1
@ 7423 train 4.1094 , allloss: 4.1258, dt: 1269.46ms, fracRes: 0.6037, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6767, norm(y): 1.0063, norm:1.1235, tok/sec: 103250.26, flops:90.41, batch-reuse:1
@ 7424 train 4.0393 , allloss: 4.0562, dt: 1296.57ms, fracRes: 0.6027, norm(attn): 0.1445, norm(output): 0.2363, norm(x): 0.6777, norm(y): 1.0062, norm:1.2523, tok/sec: 101091.41, flops:88.52, batch-reuse:1
@ 7425 train 3.9900 , allloss: 4.0057, dt: 1287.02ms, fracRes: 0.6032, norm(attn): 0.1426, norm(output): 0.2373, norm(x): 0.6761, norm(y): 1.0062, norm:1.3841, tok/sec: 101841.15, flops:89.18, batch-reuse:1
@ 7426 train 4.0814 , allloss: 4.0979, dt: 1314.72ms, fracRes: 0.6035, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6779, norm(y): 1.0060, norm:1.1964, tok/sec: 99695.49, flops:87.30, batch-reuse:1
@ 7427 train 4.0128 , allloss: 4.0294, dt: 1264.67ms, fracRes: 0.6022, norm(attn): 0.1445, norm(output): 0.2354, norm(x): 0.6755, norm(y): 1.0061, norm:1.0857, tok/sec: 103641.02, flops:90.76, batch-reuse:1
@ 7428 train 4.0226 , allloss: 4.0386, dt: 1262.49ms, fracRes: 0.6019, norm(attn): 0.1445, norm(output): 0.2363, norm(x): 0.6728, norm(y): 1.0061, norm:1.4446, tok/sec: 103820.46, flops:90.91, batch-reuse:1
@ 7429 train 4.0331 , allloss: 4.0491, dt: 1286.47ms, fracRes: 0.6025, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6737, norm(y): 1.0061, norm:1.1212, tok/sec: 101884.65, flops:89.22, batch-reuse:1
@ 7430 train 4.0335 , allloss: 4.0499, dt: 1285.00ms, fracRes: 0.6020, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6750, norm(y): 1.0062, norm:1.1746, tok/sec: 102001.51, flops:89.32, batch-reuse:1
@ 7431 train 4.1083 , allloss: 4.1249, dt: 1279.30ms, fracRes: 0.6023, norm(attn): 0.1426, norm(output): 0.2354, norm(x): 0.6759, norm(y): 1.0062, norm:1.3430, tok/sec: 102456.38, flops:89.72, batch-reuse:1
@ 7432 train 4.0422 , allloss: 4.0585, dt: 1245.56ms, fracRes: 0.6031, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6752, norm(y): 1.0061, norm:1.1973, tok/sec: 105230.98, flops:92.15, batch-reuse:1
@ 7433 train 4.0736 , allloss: 4.0895, dt: 1287.15ms, fracRes: 0.6031, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6761, norm(y): 1.0062, norm:1.1988, tok/sec: 101830.83, flops:89.17, batch-reuse:1
@ 7434 train 4.1031 , allloss: 4.1192, dt: 1274.74ms, fracRes: 0.6029, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6766, norm(y): 1.0061, norm:1.3207, tok/sec: 102822.23, flops:90.04, batch-reuse:1
@ 7435 train 4.0778 , allloss: 4.0941, dt: 1261.67ms, fracRes: 0.6021, norm(attn): 0.1445, norm(output): 0.2373, norm(x): 0.6773, norm(y): 1.0060, norm:1.1929, tok/sec: 103887.44, flops:90.97, batch-reuse:1
@ 7436 train 4.0876 , allloss: 4.1037, dt: 1269.56ms, fracRes: 0.6030, norm(attn): 0.1426, norm(output): 0.2363, norm(x): 0.6757, norm(y): 1.0061, norm:1.1353, tok/sec: 103242.23, flops:90.41, batch-reuse:1
@ 7437 train 4.0851 , allloss: 4.1007, dt: 1268.27ms, fracRes: 0.6035, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6752, norm(y): 1.0060, norm:1.1548, tok/sec: 103346.90, flops:90.50, batch-reuse:1
@ 7438 train 4.2076 , allloss: 4.2232, dt: 1279.68ms, fracRes: 0.6032, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6771, norm(y): 1.0059, norm:1.1085, tok/sec: 102426.01, flops:89.69, batch-reuse:1
@ 7439 train 4.2514 , allloss: 4.2673, dt: 1275.25ms, fracRes: 0.6025, norm(attn): 0.1426, norm(output): 0.2373, norm(x): 0.6795, norm(y): 1.0060, norm:1.1708, tok/sec: 102781.19, flops:90.00, batch-reuse:1
@ 7440 train 4.2185 , allloss: 4.2346, dt: 1289.41ms, fracRes: 0.6026, norm(attn): 0.1426, norm(output): 0.2373, norm(x): 0.6774, norm(y): 1.0059, norm:1.0906, tok/sec: 101652.91, flops:89.02, batch-reuse:1
@ 7441 train 4.1524 , allloss: 4.1693, dt: 1263.68ms, fracRes: 0.6037, norm(attn): 0.1416, norm(output): 0.2383, norm(x): 0.6795, norm(y): 1.0059, norm:1.2617, tok/sec: 103722.35, flops:90.83, batch-reuse:1
@ 7442 train 4.2331 , allloss: 4.2493, dt: 1267.53ms, fracRes: 0.6043, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6782, norm(y): 1.0059, norm:1.2582, tok/sec: 103407.44, flops:90.55, batch-reuse:1
@ 7443 train 4.2154 , allloss: 4.2321, dt: 1271.03ms, fracRes: 0.6033, norm(attn): 0.1426, norm(output): 0.2383, norm(x): 0.6789, norm(y): 1.0058, norm:1.0373, tok/sec: 103122.59, flops:90.30, batch-reuse:1
@ 7444 train 4.1942 , allloss: 4.2108, dt: 1282.99ms, fracRes: 0.6026, norm(attn): 0.1445, norm(output): 0.2373, norm(x): 0.6785, norm(y): 1.0059, norm:1.1598, tok/sec: 102161.64, flops:89.46, batch-reuse:1
@ 7445 train 4.2302 , allloss: 4.2467, dt: 1270.52ms, fracRes: 0.6029, norm(attn): 0.1436, norm(output): 0.2393, norm(x): 0.6777, norm(y): 1.0058, norm:1.0694, tok/sec: 103163.73, flops:90.34, batch-reuse:1
@ 7446 train 4.2505 , allloss: 4.2674, dt: 1251.00ms, fracRes: 0.6047, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6784, norm(y): 1.0059, norm:1.1476, tok/sec: 104773.85, flops:91.75, batch-reuse:1
@ 7447 train 4.2185 , allloss: 4.2362, dt: 1305.37ms, fracRes: 0.6043, norm(attn): 0.1426, norm(output): 0.2383, norm(x): 0.6810, norm(y): 1.0059, norm:1.2005, tok/sec: 100410.22, flops:87.93, batch-reuse:1
@ 7448 train 4.1988 , allloss: 4.2148, dt: 1278.71ms, fracRes: 0.6026, norm(attn): 0.1426, norm(output): 0.2373, norm(x): 0.6774, norm(y): 1.0058, norm:1.0759, tok/sec: 102503.49, flops:89.76, batch-reuse:1
@ 7449 train 4.3111 , allloss: 4.3271, dt: 1269.36ms, fracRes: 0.6024, norm(attn): 0.1426, norm(output): 0.2363, norm(x): 0.6758, norm(y): 1.0059, norm:1.1513, tok/sec: 103258.54, flops:90.42, batch-reuse:1
@ 7450 train 4.2163 , allloss: 4.2335, dt: 1253.21ms, fracRes: 0.6025, norm(attn): 0.1436, norm(output): 0.2383, norm(x): 0.6790, norm(y): 1.0059, norm:1.3944, tok/sec: 104589.03, flops:91.59, batch-reuse:1
@ 7451 train 4.2334 , allloss: 4.2499, dt: 1274.17ms, fracRes: 0.6026, norm(attn): 0.1426, norm(output): 0.2363, norm(x): 0.6754, norm(y): 1.0059, norm:1.4184, tok/sec: 102868.83, flops:90.08, batch-reuse:1
@ 7452 train 4.2586 , allloss: 4.2753, dt: 1283.90ms, fracRes: 0.6035, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6765, norm(y): 1.0060, norm:1.1794, tok/sec: 102088.72, flops:89.40, batch-reuse:1
@ 7453 train 4.1842 , allloss: 4.2002, dt: 1268.32ms, fracRes: 0.6034, norm(attn): 0.1426, norm(output): 0.2363, norm(x): 0.6784, norm(y): 1.0059, norm:1.0549, tok/sec: 103342.75, flops:90.50, batch-reuse:1
@ 7454 train 4.2892 , allloss: 4.3052, dt: 1264.70ms, fracRes: 0.6034, norm(attn): 0.1426, norm(output): 0.2363, norm(x): 0.6806, norm(y): 1.0058, norm:1.4284, tok/sec: 103638.77, flops:90.75, batch-reuse:1
@ 7455 train 4.1913 , allloss: 4.2075, dt: 1272.86ms, fracRes: 0.6039, norm(attn): 0.1426, norm(output): 0.2363, norm(x): 0.6768, norm(y): 1.0060, norm:1.5709, tok/sec: 102974.21, flops:90.17, batch-reuse:1
@ 7456 train 4.2463 , allloss: 4.2629, dt: 1267.99ms, fracRes: 0.6029, norm(attn): 0.1436, norm(output): 0.2373, norm(x): 0.6769, norm(y): 1.0059, norm:1.1077, tok/sec: 103369.91, flops:90.52, batch-reuse:1
@ 7457 train 4.2559 , allloss: 4.2727, dt: 1275.33ms, fracRes: 0.6039, norm(attn): 0.1426, norm(output): 0.2363, norm(x): 0.6751, norm(y): 1.0061, norm:1.8934, tok/sec: 102774.62, flops:90.00, batch-reuse:1
@ 7458 train 4.2377 , allloss: 4.2539, dt: 1291.70ms, fracRes: 0.6043, norm(attn): 0.1416, norm(output): 0.2373, norm(x): 0.6758, norm(y): 1.0059, norm:1.1765, tok/sec: 101472.51, flops:88.86, batch-reuse:1
@ 7459 train 4.3172 , allloss: 4.3334, dt: 1289.65ms, fracRes: 0.6045, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6786, norm(y): 1.0058, norm:1.2867, tok/sec: 101633.57, flops:89.00, batch-reuse:1
@ 7460 train 4.2844 , allloss: 4.3004, dt: 1265.21ms, fracRes: 0.6043, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6773, norm(y): 1.0059, norm:1.2237, tok/sec: 103597.23, flops:90.72, batch-reuse:1
@ 7461 train 4.2360 , allloss: 4.2520, dt: 1265.82ms, fracRes: 0.6029, norm(attn): 0.1436, norm(output): 0.2363, norm(x): 0.6764, norm(y): 1.0059, norm:1.2096, tok/sec: 103546.77, flops:90.67, batch-reuse:1
@ 7462 train 4.2326 , allloss: 4.2495, dt: 1252.08ms, fracRes: 0.6025, norm(attn): 0.1426, norm(output): 0.2383, norm(x): 0.6762, norm(y): 1.0058, norm:1.2873, tok/sec: 104683.67, flops:91.67, batch-reuse:1
@ 7463 train 4.2179 , allloss: 4.2340, dt: 1267.93ms, fracRes: 0.6029, norm(attn): 0.1406, norm(output): 0.2354, norm(x): 0.6727, norm(y): 1.0059, norm:1.1772, tok/sec: 103374.63, flops:90.52, batch-reuse:1
@ 7464 train 4.2887 , allloss: 4.3049, dt: 1255.52ms, fracRes: 0.6027, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6723, norm(y): 1.0059, norm:1.1461, tok/sec: 104396.91, flops:91.42, batch-reuse:1
@ 7465 train 4.2337 , allloss: 4.2506, dt: 1253.16ms, fracRes: 0.6022, norm(attn): 0.1436, norm(output): 0.2363, norm(x): 0.6747, norm(y): 1.0059, norm:1.0658, tok/sec: 104593.53, flops:91.59, batch-reuse:1
@ 7466 train 4.3547 , allloss: 4.3711, dt: 1269.48ms, fracRes: 0.6021, norm(attn): 0.1436, norm(output): 0.2393, norm(x): 0.6750, norm(y): 1.0057, norm:1.2225, tok/sec: 103248.32, flops:90.41, batch-reuse:1
@ 7467 train 4.1980 , allloss: 4.2142, dt: 1285.26ms, fracRes: 0.6037, norm(attn): 0.1445, norm(output): 0.2402, norm(x): 0.6785, norm(y): 1.0058, norm:1.0859, tok/sec: 101981.17, flops:89.30, batch-reuse:1
@ 7468 train 4.1984 , allloss: 4.2152, dt: 1302.86ms, fracRes: 0.6045, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6784, norm(y): 1.0060, norm:1.3690, tok/sec: 100603.42, flops:88.10, batch-reuse:1
@ 7469 train 4.2382 , allloss: 4.2548, dt: 1327.92ms, fracRes: 0.6046, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6790, norm(y): 1.0060, norm:0.9769, tok/sec: 98705.05, flops:86.43, batch-reuse:1
@ 7470 train 4.1514 , allloss: 4.1684, dt: 1311.98ms, fracRes: 0.6038, norm(attn): 0.1436, norm(output): 0.2393, norm(x): 0.6781, norm(y): 1.0058, norm:1.4687, tok/sec: 99904.18, flops:87.48, batch-reuse:1
@ 7471 train 4.1955 , allloss: 4.2125, dt: 1256.79ms, fracRes: 0.6036, norm(attn): 0.1436, norm(output): 0.2373, norm(x): 0.6767, norm(y): 1.0060, norm:1.1833, tok/sec: 104290.90, flops:91.33, batch-reuse:1
@ 7472 train 4.3226 , allloss: 4.3398, dt: 1257.23ms, fracRes: 0.6038, norm(attn): 0.1426, norm(output): 0.2363, norm(x): 0.6774, norm(y): 1.0059, norm:1.6498, tok/sec: 104254.96, flops:91.29, batch-reuse:1
@ 7473 train 4.3873 , allloss: 4.4039, dt: 1258.41ms, fracRes: 0.6029, norm(attn): 0.1426, norm(output): 0.2393, norm(x): 0.6759, norm(y): 1.0058, norm:1.1339, tok/sec: 104156.85, flops:91.21, batch-reuse:1
@ 7474 train 4.2585 , allloss: 4.2748, dt: 1274.66ms, fracRes: 0.6038, norm(attn): 0.1436, norm(output): 0.2373, norm(x): 0.6737, norm(y): 1.0060, norm:1.3137, tok/sec: 102828.60, flops:90.05, batch-reuse:1
@ 7475 train 4.2610 , allloss: 4.2786, dt: 1294.50ms, fracRes: 0.6031, norm(attn): 0.1445, norm(output): 0.2373, norm(x): 0.6754, norm(y): 1.0060, norm:1.4011, tok/sec: 101253.19, flops:88.67, batch-reuse:1
@ 7476 train 4.2325 , allloss: 4.2492, dt: 1276.86ms, fracRes: 0.6041, norm(attn): 0.1436, norm(output): 0.2363, norm(x): 0.6762, norm(y): 1.0060, norm:1.4708, tok/sec: 102652.03, flops:89.89, batch-reuse:1
@ 7477 train 4.1992 , allloss: 4.2158, dt: 1258.96ms, fracRes: 0.6051, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6762, norm(y): 1.0060, norm:1.3290, tok/sec: 104111.25, flops:91.17, batch-reuse:1
@ 7478 train 4.3135 , allloss: 4.3309, dt: 1272.50ms, fracRes: 0.6040, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6783, norm(y): 1.0060, norm:1.6217, tok/sec: 103003.36, flops:90.20, batch-reuse:1
@ 7479 train 4.3276 , allloss: 4.3442, dt: 1268.89ms, fracRes: 0.6028, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6745, norm(y): 1.0059, norm:1.0339, tok/sec: 103296.76, flops:90.46, batch-reuse:1
@ 7480 train 4.1666 , allloss: 4.1832, dt: 1311.57ms, fracRes: 0.6020, norm(attn): 0.1436, norm(output): 0.2373, norm(x): 0.6757, norm(y): 1.0059, norm:1.4761, tok/sec: 99935.25, flops:87.51, batch-reuse:1
@ 7481 train 4.3110 , allloss: 4.3282, dt: 1271.97ms, fracRes: 0.6024, norm(attn): 0.1426, norm(output): 0.2373, norm(x): 0.6753, norm(y): 1.0058, norm:1.2614, tok/sec: 103046.43, flops:90.24, batch-reuse:1
@ 7482 train 4.2997 , allloss: 4.3169, dt: 1253.05ms, fracRes: 0.6024, norm(attn): 0.1436, norm(output): 0.2373, norm(x): 0.6737, norm(y): 1.0059, norm:1.2280, tok/sec: 104602.48, flops:91.60, batch-reuse:1
@ 7483 train 4.2747 , allloss: 4.2901, dt: 1266.20ms, fracRes: 0.6018, norm(attn): 0.1426, norm(output): 0.2373, norm(x): 0.6725, norm(y): 1.0058, norm:1.1803, tok/sec: 103516.18, flops:90.65, batch-reuse:1
@ 7484 train 4.2085 , allloss: 4.2241, dt: 1253.92ms, fracRes: 0.6026, norm(attn): 0.1416, norm(output): 0.2373, norm(x): 0.6744, norm(y): 1.0058, norm:1.3523, tok/sec: 104530.17, flops:91.54, batch-reuse:1
@ 7485 train 4.2335 , allloss: 4.2493, dt: 1255.05ms, fracRes: 0.6032, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6748, norm(y): 1.0059, norm:1.0292, tok/sec: 104436.06, flops:91.45, batch-reuse:1
@ 7486 train 4.2489 , allloss: 4.2649, dt: 1283.17ms, fracRes: 0.6026, norm(attn): 0.1436, norm(output): 0.2363, norm(x): 0.6740, norm(y): 1.0059, norm:1.0846, tok/sec: 102147.31, flops:89.45, batch-reuse:1
@ 7487 train 4.3071 , allloss: 4.3235, dt: 1269.84ms, fracRes: 0.6031, norm(attn): 0.1445, norm(output): 0.2373, norm(x): 0.6748, norm(y): 1.0059, norm:1.1053, tok/sec: 103219.28, flops:90.39, batch-reuse:1
@ 7488 train 4.2069 , allloss: 4.2223, dt: 1246.09ms, fracRes: 0.6034, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6768, norm(y): 1.0060, norm:1.0709, tok/sec: 105186.85, flops:92.11, batch-reuse:1
@ 7489 train 4.2636 , allloss: 4.2789, dt: 1271.91ms, fracRes: 0.6031, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6750, norm(y): 1.0058, norm:1.0212, tok/sec: 103051.15, flops:90.24, batch-reuse:1
@ 7490 train 4.2004 , allloss: 4.2159, dt: 1296.10ms, fracRes: 0.6031, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6730, norm(y): 1.0060, norm:1.0645, tok/sec: 101128.23, flops:88.56, batch-reuse:1
@ 7491 train 4.2272 , allloss: 4.2435, dt: 1257.51ms, fracRes: 0.6024, norm(attn): 0.1445, norm(output): 0.2373, norm(x): 0.6737, norm(y): 1.0059, norm:1.0973, tok/sec: 104231.56, flops:91.27, batch-reuse:1
@ 7492 train 4.4132 , allloss: 4.4295, dt: 1261.25ms, fracRes: 0.6028, norm(attn): 0.1426, norm(output): 0.2354, norm(x): 0.6724, norm(y): 1.0056, norm:1.1021, tok/sec: 103922.30, flops:91.00, batch-reuse:1
@ 7493 train 4.2018 , allloss: 4.2176, dt: 1262.89ms, fracRes: 0.6029, norm(attn): 0.1426, norm(output): 0.2363, norm(x): 0.6731, norm(y): 1.0059, norm:1.1144, tok/sec: 103787.12, flops:90.88, batch-reuse:1
@ 7494 train 4.2290 , allloss: 4.2444, dt: 1266.82ms, fracRes: 0.6033, norm(attn): 0.1436, norm(output): 0.2373, norm(x): 0.6726, norm(y): 1.0060, norm:1.0267, tok/sec: 103465.30, flops:90.60, batch-reuse:1
@ 7495 train 4.2164 , allloss: 4.2325, dt: 1269.87ms, fracRes: 0.6027, norm(attn): 0.1436, norm(output): 0.2373, norm(x): 0.6724, norm(y): 1.0058, norm:1.1160, tok/sec: 103217.11, flops:90.39, batch-reuse:1
@ 7496 train 4.1796 , allloss: 4.1957, dt: 1259.93ms, fracRes: 0.6026, norm(attn): 0.1426, norm(output): 0.2363, norm(x): 0.6720, norm(y): 1.0059, norm:1.2235, tok/sec: 104031.50, flops:91.10, batch-reuse:1
@ 7497 train 4.1763 , allloss: 4.1919, dt: 1254.89ms, fracRes: 0.6024, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6705, norm(y): 1.0061, norm:1.0844, tok/sec: 104449.08, flops:91.46, batch-reuse:1
@ 7498 train 4.1726 , allloss: 4.1895, dt: 1272.78ms, fracRes: 0.6027, norm(attn): 0.1436, norm(output): 0.2383, norm(x): 0.6763, norm(y): 1.0058, norm:1.1730, tok/sec: 102980.92, flops:90.18, batch-reuse:1
@ 7499 train 4.2291 , allloss: 4.2448, dt: 1291.87ms, fracRes: 0.6037, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6745, norm(y): 1.0059, norm:1.1963, tok/sec: 101458.84, flops:88.85, batch-reuse:1
@ 7500 train 4.2003 , allloss: 4.2157, dt: 1284.77ms, fracRes: 0.6033, norm(attn): 0.1426, norm(output): 0.2363, norm(x): 0.6732, norm(y): 1.0058, norm:1.1362, tok/sec: 102019.61, flops:89.34, batch-reuse:1
@ 7501 train 4.1956 , allloss: 4.2115, dt: 1285.06ms, fracRes: 0.6021, norm(attn): 0.1455, norm(output): 0.2383, norm(x): 0.6727, norm(y): 1.0056, norm:1.2075, tok/sec: 101996.48, flops:89.32, batch-reuse:1
@ 7502 train 4.2488 , allloss: 4.2650, dt: 1262.52ms, fracRes: 0.6023, norm(attn): 0.1445, norm(output): 0.2383, norm(x): 0.6728, norm(y): 1.0057, norm:1.3234, tok/sec: 103817.64, flops:90.91, batch-reuse:1
@ 7503 train 4.2676 , allloss: 4.2834, dt: 1265.33ms, fracRes: 0.6035, norm(attn): 0.1426, norm(output): 0.2363, norm(x): 0.6735, norm(y): 1.0059, norm:1.1327, tok/sec: 103587.43, flops:90.71, batch-reuse:1
@ 7504 train 4.2644 , allloss: 4.2802, dt: 1300.99ms, fracRes: 0.6022, norm(attn): 0.1445, norm(output): 0.2373, norm(x): 0.6748, norm(y): 1.0059, norm:1.1901, tok/sec: 100747.94, flops:88.22, batch-reuse:1
@ 7505 train 4.2273 , allloss: 4.2427, dt: 1285.55ms, fracRes: 0.6022, norm(attn): 0.1436, norm(output): 0.2383, norm(x): 0.6728, norm(y): 1.0058, norm:1.0822, tok/sec: 101957.87, flops:89.28, batch-reuse:1
@ 7506 train 4.3206 , allloss: 4.3378, dt: 1284.68ms, fracRes: 0.6028, norm(attn): 0.1455, norm(output): 0.2373, norm(x): 0.6758, norm(y): 1.0058, norm:1.3646, tok/sec: 102026.80, flops:89.34, batch-reuse:1
@ 7507 train 4.2720 , allloss: 4.2882, dt: 1247.49ms, fracRes: 0.6044, norm(attn): 0.1426, norm(output): 0.2354, norm(x): 0.6750, norm(y): 1.0058, norm:1.2504, tok/sec: 105068.72, flops:92.01, batch-reuse:1
@ 7508 train 4.2555 , allloss: 4.2720, dt: 1254.87ms, fracRes: 0.6045, norm(attn): 0.1426, norm(output): 0.2373, norm(x): 0.6779, norm(y): 1.0058, norm:1.3702, tok/sec: 104450.29, flops:91.47, batch-reuse:1
@ 7509 train 4.2322 , allloss: 4.2482, dt: 1249.04ms, fracRes: 0.6034, norm(attn): 0.1445, norm(output): 0.2373, norm(x): 0.6774, norm(y): 1.0057, norm:1.3279, tok/sec: 104937.94, flops:91.89, batch-reuse:1
@ 7510 train 4.1958 , allloss: 4.2112, dt: 1259.82ms, fracRes: 0.6030, norm(attn): 0.1436, norm(output): 0.2373, norm(x): 0.6746, norm(y): 1.0059, norm:1.0560, tok/sec: 104040.26, flops:91.11, batch-reuse:1
@ 7511 train 4.1831 , allloss: 4.1990, dt: 1273.06ms, fracRes: 0.6040, norm(attn): 0.1426, norm(output): 0.2363, norm(x): 0.6782, norm(y): 1.0059, norm:1.1208, tok/sec: 102958.03, flops:90.16, batch-reuse:1
@ 7512 train 4.2461 , allloss: 4.2613, dt: 1275.49ms, fracRes: 0.6037, norm(attn): 0.1426, norm(output): 0.2363, norm(x): 0.6769, norm(y): 1.0057, norm:0.9908, tok/sec: 102761.92, flops:89.99, batch-reuse:1
@ 7513 train 4.2333 , allloss: 4.2490, dt: 1265.13ms, fracRes: 0.6040, norm(attn): 0.1445, norm(output): 0.2383, norm(x): 0.6770, norm(y): 1.0059, norm:1.2760, tok/sec: 103603.68, flops:90.72, batch-reuse:1
@ 7514 train 4.3356 , allloss: 4.3514, dt: 1308.85ms, fracRes: 0.6043, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6758, norm(y): 1.0061, norm:1.4400, tok/sec: 100142.52, flops:87.69, batch-reuse:1
@ 7515 train 4.2244 , allloss: 4.2406, dt: 1262.42ms, fracRes: 0.6033, norm(attn): 0.1436, norm(output): 0.2383, norm(x): 0.6774, norm(y): 1.0057, norm:1.3999, tok/sec: 103825.77, flops:90.92, batch-reuse:1
@ 7516 train 4.2268 , allloss: 4.2424, dt: 1272.93ms, fracRes: 0.6028, norm(attn): 0.1445, norm(output): 0.2402, norm(x): 0.6798, norm(y): 1.0058, norm:1.1617, tok/sec: 102969.08, flops:90.17, batch-reuse:1
@ 7517 train 4.1802 , allloss: 4.1957, dt: 1268.80ms, fracRes: 0.6028, norm(attn): 0.1445, norm(output): 0.2383, norm(x): 0.6777, norm(y): 1.0058, norm:1.0297, tok/sec: 103303.83, flops:90.46, batch-reuse:1
@ 7518 train 4.2446 , allloss: 4.2609, dt: 1280.18ms, fracRes: 0.6029, norm(attn): 0.1436, norm(output): 0.2373, norm(x): 0.6773, norm(y): 1.0058, norm:1.2810, tok/sec: 102385.41, flops:89.66, batch-reuse:1
@ 7519 train 4.1741 , allloss: 4.1899, dt: 1260.43ms, fracRes: 0.6031, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6739, norm(y): 1.0058, norm:1.3065, tok/sec: 103989.51, flops:91.06, batch-reuse:1
@ 7520 train 4.4514 , allloss: 4.4671, dt: 1279.99ms, fracRes: 0.6036, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6751, norm(y): 1.0058, norm:1.2071, tok/sec: 102401.17, flops:89.67, batch-reuse:1
@ 7521 train 3.9498 , allloss: 3.9669, dt: 1262.34ms, fracRes: 0.6051, norm(attn): 0.1436, norm(output): 0.2383, norm(x): 0.6823, norm(y): 1.0060, norm:1.6557, tok/sec: 103832.56, flops:90.92, batch-reuse:1
@ 7522 train 4.2675 , allloss: 4.2840, dt: 1263.84ms, fracRes: 0.6036, norm(attn): 0.1436, norm(output): 0.2393, norm(x): 0.6786, norm(y): 1.0059, norm:1.3855, tok/sec: 103709.65, flops:90.82, batch-reuse:1
@ 7523 train 4.1880 , allloss: 4.2042, dt: 1267.50ms, fracRes: 0.6023, norm(attn): 0.1436, norm(output): 0.2393, norm(x): 0.6771, norm(y): 1.0059, norm:1.2649, tok/sec: 103409.97, flops:90.55, batch-reuse:1
@ 7524 train 4.2387 , allloss: 4.2552, dt: 1257.53ms, fracRes: 0.6032, norm(attn): 0.1426, norm(output): 0.2373, norm(x): 0.6765, norm(y): 1.0059, norm:1.3377, tok/sec: 104229.82, flops:91.27, batch-reuse:1
@ 7525 train 4.1591 , allloss: 4.1751, dt: 1273.75ms, fracRes: 0.6032, norm(attn): 0.1416, norm(output): 0.2383, norm(x): 0.6782, norm(y): 1.0057, norm:1.2270, tok/sec: 102902.53, flops:90.11, batch-reuse:1
@ 7526 train 4.2686 , allloss: 4.2842, dt: 1269.41ms, fracRes: 0.6043, norm(attn): 0.1416, norm(output): 0.2373, norm(x): 0.6771, norm(y): 1.0057, norm:1.1691, tok/sec: 103253.97, flops:90.42, batch-reuse:1
@ 7527 train 4.2293 , allloss: 4.2456, dt: 1268.93ms, fracRes: 0.6046, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6793, norm(y): 1.0059, norm:1.0665, tok/sec: 103293.33, flops:90.45, batch-reuse:1
@ 7528 train 4.2270 , allloss: 4.2428, dt: 1267.02ms, fracRes: 0.6041, norm(attn): 0.1436, norm(output): 0.2383, norm(x): 0.6818, norm(y): 1.0058, norm:1.1048, tok/sec: 103449.27, flops:90.59, batch-reuse:1
@ 7529 train 4.1054 , allloss: 4.1221, dt: 1281.28ms, fracRes: 0.6036, norm(attn): 0.1445, norm(output): 0.2363, norm(x): 0.6794, norm(y): 1.0061, norm:1.0647, tok/sec: 102297.89, flops:89.58, batch-reuse:1
@ 7530 train 4.1730 , allloss: 4.1883, dt: 1275.47ms, fracRes: 0.6034, norm(attn): 0.1436, norm(output): 0.2373, norm(x): 0.6768, norm(y): 1.0060, norm:1.2225, tok/sec: 102764.03, flops:89.99, batch-reuse:1
@ 7531 train 4.3807 , allloss: 4.3971, dt: 1293.19ms, fracRes: 0.6053, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6790, norm(y): 1.0062, norm:1.4957, tok/sec: 101355.82, flops:88.76, batch-reuse:1
@ 7532 train 4.3175 , allloss: 4.3335, dt: 1286.76ms, fracRes: 0.6034, norm(attn): 0.1445, norm(output): 0.2373, norm(x): 0.6767, norm(y): 1.0060, norm:1.3847, tok/sec: 101861.94, flops:89.20, batch-reuse:1
@ 7533 train 4.1780 , allloss: 4.1942, dt: 1272.26ms, fracRes: 0.6019, norm(attn): 0.1445, norm(output): 0.2383, norm(x): 0.6758, norm(y): 1.0059, norm:1.4183, tok/sec: 103023.09, flops:90.22, batch-reuse:1
@ 7534 train 4.1837 , allloss: 4.2001, dt: 1282.42ms, fracRes: 0.6026, norm(attn): 0.1436, norm(output): 0.2402, norm(x): 0.6770, norm(y): 1.0059, norm:1.3627, tok/sec: 102206.98, flops:89.50, batch-reuse:1
@ 7535 train 4.1540 , allloss: 4.1714, dt: 1262.58ms, fracRes: 0.6039, norm(attn): 0.1416, norm(output): 0.2383, norm(x): 0.6780, norm(y): 1.0058, norm:1.0798, tok/sec: 103813.11, flops:90.91, batch-reuse:1
@ 7536 train 4.1561 , allloss: 4.1721, dt: 1274.53ms, fracRes: 0.6040, norm(attn): 0.1426, norm(output): 0.2363, norm(x): 0.6794, norm(y): 1.0060, norm:1.1920, tok/sec: 102839.85, flops:90.06, batch-reuse:1
@ 7537 train 4.1959 , allloss: 4.2116, dt: 1269.93ms, fracRes: 0.6031, norm(attn): 0.1416, norm(output): 0.2373, norm(x): 0.6810, norm(y): 1.0056, norm:1.5472, tok/sec: 103212.27, flops:90.38, batch-reuse:1
@ 7538 train 4.1011 , allloss: 4.1191, dt: 1263.02ms, fracRes: 0.6025, norm(attn): 0.1455, norm(output): 0.2373, norm(x): 0.6795, norm(y): 1.0059, norm:1.6285, tok/sec: 103776.40, flops:90.88, batch-reuse:1
@ 7539 train 4.2634 , allloss: 4.2794, dt: 1271.92ms, fracRes: 0.6034, norm(attn): 0.1436, norm(output): 0.2373, norm(x): 0.6805, norm(y): 1.0057, norm:1.4599, tok/sec: 103050.51, flops:90.24, batch-reuse:1
@ 7540 train 4.1125 , allloss: 4.1283, dt: 1274.31ms, fracRes: 0.6035, norm(attn): 0.1445, norm(output): 0.2393, norm(x): 0.6806, norm(y): 1.0058, norm:1.5223, tok/sec: 102857.15, flops:90.07, batch-reuse:1
@ 7541 train 4.2671 , allloss: 4.2832, dt: 1280.90ms, fracRes: 0.6043, norm(attn): 0.1426, norm(output): 0.2373, norm(x): 0.6810, norm(y): 1.0059, norm:1.3439, tok/sec: 102328.16, flops:89.61, batch-reuse:1
@ 7542 train 4.2031 , allloss: 4.2195, dt: 1285.55ms, fracRes: 0.6030, norm(attn): 0.1445, norm(output): 0.2422, norm(x): 0.6858, norm(y): 1.0057, norm:1.2461, tok/sec: 101957.72, flops:89.28, batch-reuse:1
@ 7543 train 4.3369 , allloss: 4.3528, dt: 1261.42ms, fracRes: 0.6034, norm(attn): 0.1426, norm(output): 0.2383, norm(x): 0.6826, norm(y): 1.0056, norm:1.3260, tok/sec: 103908.65, flops:90.99, batch-reuse:1
@ 7544 train 4.1885 , allloss: 4.2048, dt: 1257.86ms, fracRes: 0.6033, norm(attn): 0.1436, norm(output): 0.2393, norm(x): 0.6831, norm(y): 1.0058, norm:1.2276, tok/sec: 104202.78, flops:91.25, batch-reuse:1
@ 7545 train 4.2015 , allloss: 4.2196, dt: 1300.42ms, fracRes: 0.6043, norm(attn): 0.1426, norm(output): 0.2383, norm(x): 0.6846, norm(y): 1.0056, norm:1.2241, tok/sec: 100791.94, flops:88.26, batch-reuse:1
@ 7546 train 4.1838 , allloss: 4.1996, dt: 1248.79ms, fracRes: 0.6035, norm(attn): 0.1426, norm(output): 0.2373, norm(x): 0.6828, norm(y): 1.0056, norm:1.0071, tok/sec: 104959.16, flops:91.91, batch-reuse:1
@ 7547 train 4.1372 , allloss: 4.1531, dt: 1263.55ms, fracRes: 0.6039, norm(attn): 0.1436, norm(output): 0.2373, norm(x): 0.6818, norm(y): 1.0058, norm:1.0787, tok/sec: 103732.91, flops:90.84, batch-reuse:1
@ 7548 train 4.1833 , allloss: 4.1989, dt: 1268.32ms, fracRes: 0.6039, norm(attn): 0.1445, norm(output): 0.2383, norm(x): 0.6824, norm(y): 1.0060, norm:1.1406, tok/sec: 103342.86, flops:90.50, batch-reuse:1
@ 7549 train 4.1763 , allloss: 4.1930, dt: 1271.74ms, fracRes: 0.6043, norm(attn): 0.1426, norm(output): 0.2393, norm(x): 0.6825, norm(y): 1.0057, norm:1.1308, tok/sec: 103065.37, flops:90.25, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7422, 0.2578, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7734, 0.0859, 0.1416, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8125, 0.0698, 0.0962, 0.0212, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6016, 0.0400, 0.0615, 0.0884, 0.2070, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7695, 0.0674, 0.0518, 0.0309, 0.0486, 0.0327, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3379, 0.0420, 0.0248, 0.1025, 0.3184, 0.0874, 0.0859, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2930, 0.1846, 0.2119, 0.0129, 0.0413, 0.0442, 0.0354, 0.1777, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7578, 0.0586, 0.0359, 0.0059, 0.0283, 0.0092, 0.0483, 0.0172, 0.0383, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2266, 0.1133, 0.1924, 0.0115, 0.0229, 0.0209, 0.0371, 0.1377, 0.0312, 0.2061, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3496, 0.0732, 0.1045, 0.0245, 0.0503, 0.0128, 0.0233, 0.0491, 0.0508, 0.0923, 0.1699, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0417, 0.0173, 0.0142, 0.2305, 0.1133, 0.0540, 0.0605, 0.0996, 0.2354, 0.0762, 0.0488, 0.0087, 0.0000, 0.0000, 0.0000],
        [0.0454, 0.0483, 0.0518, 0.0483, 0.0520, 0.0630, 0.0535, 0.0757, 0.0767, 0.1855, 0.0767, 0.1621, 0.0610, 0.0000, 0.0000],
        [0.4746, 0.0664, 0.0396, 0.0062, 0.0330, 0.0131, 0.0481, 0.0189, 0.0442, 0.0226, 0.0718, 0.0444, 0.0703, 0.0459, 0.0000],
        [0.1245, 0.1050, 0.1279, 0.0645, 0.0302, 0.0080, 0.0101, 0.1060, 0.0160, 0.0588, 0.0287, 0.0967, 0.1582, 0.0190, 0.0461]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0033, -0.0052, -0.0029,  ..., -0.0375,  0.0163,  0.0062],
        [-0.0449,  0.0029, -0.0056,  ...,  0.0062,  0.0064,  0.0022],
        [ 0.0291,  0.0368, -0.0059,  ..., -0.0240,  0.0234, -0.0061],
        ...,
        [ 0.0328,  0.0202,  0.0113,  ..., -0.0372,  0.0124,  0.0213],
        [-0.0507,  0.0034, -0.0323,  ...,  0.0099, -0.0015, -0.0155],
        [-0.0230,  0.0078, -0.0208,  ...,  0.0090, -0.0302, -0.0117]], device='cuda:0', requires_grad=True)
K: tensor([     1.3281,      0.5156,      0.0806,      0.4414,      0.5195,     -0.1963,      0.3750,     -0.7617,     -0.4648,     -0.3145,      0.1973,     -0.3340,      0.1260,     -0.7344,      0.0315,     -0.6367,     -0.1426,      0.0996,     -1.1953,      0.6992,      0.7969,      0.8164,
            -0.6484,      0.7070,     -0.2988,     -0.6875,     -0.8750,     -0.0003,      0.5039,     -0.1826,      1.3594,     -0.1445,      0.9922,     -0.2363,      0.3691,      1.5391,     -1.5469,      0.1553,     -0.1982,     -2.5312,      0.4258,      0.3027,     -0.1846,      1.2266,
            -0.1279,      0.2344,     -0.0664,      0.7656,      0.8008,     -0.7734,      0.2969,      0.1152,     -1.8203,      0.2598,      1.6016,     -0.7109,     -0.7461,      0.2422,      1.0781,     -0.2461,      0.3574,     -0.3828,     -0.2402,     -0.0459], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[-0.0257, -0.0024, -0.0137,  ...,  0.0099, -0.0039, -0.0186],
        [ 0.0222, -0.0156,  0.0159,  ...,  0.0069,  0.0377,  0.0085],
        [-0.0485,  0.0426,  0.0042,  ..., -0.0175, -0.0349, -0.0455],
        ...,
        [ 0.0086,  0.0055,  0.0254,  ...,  0.0216,  0.0168,  0.0207],
        [ 0.0174, -0.0082,  0.0338,  ...,  0.0268,  0.0083,  0.0175],
        [ 0.0180, -0.0080,  0.0267,  ..., -0.0217,  0.0241,  0.0063]], device='cuda:0', requires_grad=True)
Q: tensor([-0.2773, -0.2520, -0.8203, -0.8320,  0.0439, -0.0908, -2.5000, -0.4648,  0.3047,  0.8086, -1.1250, -0.5078, -0.0635, -0.8398, -0.4824, -0.1787, -0.1982,  0.0051,  0.2734,  0.6797,  0.3438,  0.2422,  1.0391,  0.5352,  0.6055, -0.1240, -0.7227, -1.3359, -0.2295,  0.3457,  0.2539,  0.5703,
        -0.6133, -0.8906,  0.1318, -0.3418,  1.1016,  0.9141, -0.3457,  1.5469,  1.6797,  0.4785,  0.6172,  0.5977, -0.5273,  0.8438, -0.5977,  0.2949, -0.4883,  0.4863, -1.6328, -0.4922,  0.4062, -1.2344, -0.2412, -0.5938,  0.6055, -1.0391, -0.0132, -0.2656, -0.6211,  0.2295,  0.3242,  1.0547],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -1.0547, -0.9023, -1.6172, -3.2188, -2.7188, -1.2578, -0.2852, -2.9375, -2.1719, -3.3750, -1.7344,  0.7969, -2.9219, -1.6328],
        [ 0.0000, -2.2031, -1.6953, -1.4453, -0.8516, -2.2500, -2.3438, -0.9766, -0.7383, -0.6641, -0.1089, -0.7578, -0.6719, -0.2324, -0.9688],
        [ 0.0000, -2.4531, -2.1406, -3.6406, -1.7266, -3.3125, -2.8906, -3.1719, -2.0625, -2.4844,  0.0513, -1.1719, -2.5156, -1.6250, -1.9062],
        [ 0.0000, -2.7031, -2.2812, -1.9219, -1.0703, -3.1562, -2.6562, -2.5000, -0.9375, -1.3047, -0.4141, -1.7422, -1.8828, -0.3672, -1.0938],
        [ 0.0000, -2.4375, -2.7031, -3.2188, -2.7656, -3.1562, -1.3281, -2.4844, -2.0156, -3.6406, -2.4844, -2.9062, -1.9219, -1.7656, -2.0781],
        [ 0.0000, -2.0938, -2.6094, -1.1953, -0.0620, -1.3516, -1.3672, -2.3281,  0.7617, -0.3262,  1.6250, -0.8906, -2.5000,  0.9570, -0.1562],
        [ 0.0000, -0.4570, -0.3223, -3.1094, -1.9531, -1.8906, -2.1094, -0.4980, -1.6172, -0.0381, -0.5469,  0.6797,  0.1445, -1.9453, -0.6445],
        [ 0.0000, -2.5625, -3.0469, -4.8438, -3.2812, -4.4062, -2.7500, -3.7812, -2.9844, -3.7031, -2.1406, -2.6719, -2.3125, -2.9844, -2.5938],
        [ 0.0000, -0.6914, -0.1602, -2.9844, -2.2812, -2.3906, -1.8047, -0.4922, -1.9766, -0.0923, -0.7578,  0.5898,  0.5273, -2.1562, -0.3086],
        [ 0.0000, -1.5625, -1.2031, -2.6562, -1.9375, -3.2969, -2.7031, -1.9609, -1.9297, -1.3359, -0.7227, -0.6211, -1.2031, -1.6797, -1.0234],
        [ 0.0000, -0.8789, -1.0781,  1.7109,  1.0000,  0.2559,  0.3750,  0.8711,  1.7344,  0.6055,  0.1562, -1.5703,  0.3320,  1.9141,  0.7305],
        [ 0.0000,  0.0654,  0.1318,  0.0623,  0.1367,  0.3301,  0.1650,  0.5156,  0.5234,  1.4062,  0.5273,  1.2734,  0.3008,  0.4883,  0.8359],
        [ 0.0000, -1.9688, -2.4844, -4.3438, -2.6719, -3.5938, -2.2969, -3.2344, -2.3750, -3.0469, -1.8906, -2.3750, -1.9062, -2.3438, -2.2500],
        [ 0.0000, -0.1738,  0.0261, -0.6562, -1.4219, -2.7500, -2.5156, -0.1631, -2.0625, -0.7500, -1.4688, -0.2539,  0.2402, -1.8828, -0.9922]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8523],
        [0.8294],
        [0.8294],
        [0.5677],
        [0.6893],
        [0.5560],
        [0.4859],
        [0.5429],
        [0.4314],
        [0.2800],
        [0.1468],
        [0.1599],
        [0.2833],
        [0.1861]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9570, 0.0427, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7305, 0.2285, 0.0391, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6758, 0.2344, 0.0610, 0.0298, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2656, 0.1445, 0.0386, 0.0654, 0.4863, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5625, 0.1416, 0.0238, 0.0221, 0.0786, 0.1719, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1787, 0.2031, 0.0136, 0.0344, 0.1245, 0.3770, 0.0688, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3574, 0.1416, 0.0488, 0.0297, 0.0654, 0.1768, 0.1367, 0.0437, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1641, 0.0679, 0.0165, 0.0089, 0.0603, 0.1602, 0.1846, 0.0236, 0.3145, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1562, 0.0615, 0.0413, 0.0264, 0.0312, 0.1299, 0.0488, 0.1797, 0.2812, 0.0420, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1855, 0.0232, 0.0014, 0.0029, 0.0381, 0.0299, 0.0586, 0.0029, 0.1650, 0.0040, 0.4883, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3711, 0.0669, 0.0381, 0.0152, 0.0327, 0.0864, 0.1543, 0.0457, 0.0405, 0.0396, 0.0981, 0.0113, 0.0000, 0.0000, 0.0000],
        [0.0540, 0.0179, 0.0162, 0.0231, 0.0287, 0.1260, 0.0894, 0.0457, 0.1650, 0.0437, 0.2236, 0.0280, 0.1396, 0.0000, 0.0000],
        [0.0903, 0.0167, 0.0041, 0.0034, 0.0137, 0.0430, 0.0913, 0.0072, 0.1133, 0.0095, 0.2080, 0.0164, 0.0291, 0.3535, 0.0000],
        [0.0557, 0.0306, 0.0054, 0.0037, 0.0184, 0.0645, 0.0474, 0.0337, 0.0703, 0.0205, 0.1660, 0.0752, 0.1143, 0.2285, 0.0659]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0338, -0.0174, -0.0172,  ..., -0.0179, -0.0236,  0.0170],
        [-0.0197,  0.0206, -0.0174,  ...,  0.0146,  0.0005, -0.0532],
        [ 0.0185,  0.0228,  0.0145,  ...,  0.0137,  0.0279,  0.0179],
        ...,
        [ 0.0007, -0.0128,  0.0269,  ...,  0.0397, -0.0207, -0.0168],
        [-0.0174, -0.0086,  0.0061,  ...,  0.0099,  0.0056, -0.0100],
        [ 0.0321,  0.0418,  0.0118,  ..., -0.0045, -0.0194,  0.0237]], device='cuda:0', requires_grad=True)
K: tensor([ 2.6250, -0.8086, -1.6875, -1.1641, -1.3516, -1.4219, -0.0630,  0.2695,  0.6523,  0.7578,  0.7109,  1.5391, -1.9453,  0.9805,  0.5938, -3.0312,  0.3223, -0.5938,  0.1099,  1.7266, -0.4434,  1.8281,  1.2656, -2.6875,  0.3613, -0.7695, -2.1406,  0.5742,  1.0547, -1.0312,  3.3594,  1.3594,
        -1.9453, -0.3457, -2.4531,  0.9492,  1.1094,  2.5312, -0.5898,  1.5234,  2.6562, -0.1055, -0.9961,  2.7031,  1.3359, -0.1357, -1.6250, -3.1875,  1.7891,  1.2109, -2.1562,  2.7812, -1.1406, -0.3965,  0.4492,  1.1953,  2.0000,  0.9492, -1.1484,  2.2188, -0.0505,  2.0938,  3.2969, -0.8359],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0202, -0.0034, -0.0124,  ...,  0.0024,  0.0174, -0.0091],
        [ 0.0166,  0.0033, -0.0522,  ..., -0.0122, -0.0054, -0.0152],
        [ 0.0451,  0.0124,  0.0287,  ..., -0.0195,  0.0261,  0.0134],
        ...,
        [-0.0244, -0.0167,  0.0133,  ...,  0.0155, -0.0029, -0.0412],
        [ 0.0374,  0.0145, -0.0070,  ..., -0.0009, -0.0051, -0.0106],
        [ 0.0045, -0.0296, -0.0182,  ...,  0.0115, -0.0051,  0.0152]], device='cuda:0', requires_grad=True)
Q: tensor([-1.0859, -0.0635, -1.0312, -0.8828,  0.5625, -1.0547, -0.5000,  1.0234,  0.3691,  0.3555,  0.2617, -0.9727,  0.7812, -1.1875, -0.4473,  1.8516, -2.0156,  0.6133, -2.0000, -0.9531, -0.2090,  0.2676, -0.8906,  1.8594, -0.4531,  0.3770,  1.5234, -0.9297, -1.1562, -0.1035, -0.3906, -1.9688,
        -1.2422,  0.7734,  0.3203,  0.8438,  1.5547,  0.3105,  1.2422,  1.3984,  0.9570,  0.3340, -1.1484,  0.3887,  1.1484, -2.2344,  1.2500, -1.8516,  1.6953,  1.1797,  0.0403, -0.0493, -1.7891, -1.6406, -0.3965,  0.7891,  0.3496,  0.8398,  0.8945,  0.9062, -0.8281,  0.2305, -0.0654, -0.5859],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -3.1094,     -7.2500,     -7.3125,     -5.2500,     -4.5000,     -5.3750,     -7.9062,     -4.3125,     -8.7500,     -5.8125,     -7.9375,     -7.5000,     -4.1250,     -4.9375],
        [     0.0000,     -1.1641,     -2.9219,     -3.8281,     -2.6250,     -1.2109,     -1.6875,     -2.2500,     -1.8203,     -2.2344,     -1.7422,     -2.2188,     -1.3047,     -1.3672,     -1.5469],
        [     0.0000,     -1.0547,     -2.4062,     -3.1250,     -2.5625,     -1.8906,     -2.1562,     -3.1406,     -2.7500,     -2.9219,     -2.2812,     -3.1875,     -2.5938,     -2.5000,     -0.9102],
        [     0.0000,     -0.6133,     -1.9375,     -1.4062,      0.6016,      0.7422,      0.6680,     -1.3672,      2.8750,     -1.1328,      3.2656,     -0.7500,      0.1562,      4.2812,      1.1875],
        [     0.0000,     -1.3828,     -3.1562,     -3.2344,     -1.9609,     -1.1797,     -0.6328,     -2.1875,     -0.5586,     -1.7812,      0.0845,     -1.2109,     -0.7148,      0.3145,     -0.5938],
        [     0.0000,      0.1279,     -2.5781,     -1.6406,     -0.3613,      0.7500,     -0.9570,     -1.7891,      1.8594,     -2.3125,     -0.0520,     -1.5391,     -0.3066,      2.4688,     -0.1709],
        [     0.0000,     -0.9219,     -1.9922,     -2.4844,     -1.6953,     -0.6992,     -0.9570,     -2.0938,     -0.1143,     -2.2500,     -0.0679,     -2.3281,     -0.4824,      0.5117,     -0.9492],
        [     0.0000,     -0.8828,     -2.2969,     -2.9062,     -1.0000,     -0.0209,      0.1182,     -1.9375,      0.6523,     -2.1094,      1.0938,     -1.1875,     -0.7188,      1.8281,      0.6719],
        [     0.0000,     -0.9336,     -1.3359,     -1.7812,     -1.6094,     -0.1865,     -1.1641,      0.1387,      0.5859,     -1.3203,     -0.5195,      0.5430,      1.5000,      1.2422,     -1.1172],
        [     0.0000,     -2.0781,     -4.8438,     -4.1562,     -1.5859,     -1.8281,     -1.1562,     -4.1562,     -0.1162,     -3.8438,      0.9648,     -2.9688,     -2.8594,      1.1172,     -1.1953],
        [     0.0000,     -1.7188,     -2.2812,     -3.1875,     -2.4375,     -1.4609,     -0.8828,     -2.0938,     -2.2188,     -2.2500,     -1.3359,     -3.5000,     -1.7578,     -1.7422,     -1.0938],
        [     0.0000,     -1.1016,     -1.2031,     -0.8516,     -0.6328,      0.8438,      0.5039,     -0.1709,      1.1172,     -0.2139,      1.4219,     -0.6562,      0.9453,      2.1250,      0.5352],
        [     0.0000,     -1.6875,     -3.0938,     -3.2969,     -1.8906,     -0.7461,      0.0063,     -2.5312,      0.2236,     -2.2500,      0.8320,     -1.7109,     -1.1406,      1.3672,     -0.0272],
        [     0.0000,     -0.5977,     -2.3281,     -2.7188,     -1.1094,      0.1455,     -0.1650,     -0.5000,      0.2324,     -1.0000,      1.0859,      0.3027,      0.7188,      1.4141,      0.1670]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8620],
        [0.5356],
        [0.4507],
        [0.5224],
        [0.4560],
        [0.2898],
        [0.2324],
        [0.2576],
        [0.2530],
        [0.3352],
        [0.1905],
        [0.1306],
        [0.1808],
        [0.1555]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0010,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9727,     0.0106,     0.0173,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0022,     0.0013,     0.0007,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0005,     0.0009,     0.0001,     0.0007,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0013,     0.0027,     0.0002,     0.0009,     0.0011,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9531,     0.0083,     0.0126,     0.0027,     0.0021,     0.0050,     0.0164,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8516,     0.0161,     0.0291,     0.0084,     0.0039,     0.0128,     0.0190,     0.0583,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0005,     0.0007,     0.0001,     0.0001,     0.0004,     0.0009,     0.0005,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0003,     0.0003,     0.0001,     0.0001,     0.0002,     0.0005,     0.0004,     0.0002,     0.0004,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9844,     0.0022,     0.0027,     0.0006,     0.0004,     0.0009,     0.0021,     0.0029,     0.0010,     0.0008,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9766,     0.0013,     0.0018,     0.0005,     0.0005,     0.0006,     0.0020,     0.0021,     0.0008,     0.0007,     0.0001,     0.0113,     0.0000,     0.0000,     0.0000],
        [    0.9688,     0.0011,     0.0023,     0.0007,     0.0004,     0.0007,     0.0020,     0.0039,     0.0010,     0.0025,     0.0001,     0.0063,     0.0102,     0.0000,     0.0000],
        [    0.9922,     0.0004,     0.0007,     0.0001,     0.0001,     0.0004,     0.0008,     0.0005,     0.0004,     0.0002,     0.0000,     0.0009,     0.0014,     0.0003,     0.0000],
        [    0.9961,     0.0004,     0.0005,     0.0001,     0.0004,     0.0002,     0.0007,     0.0005,     0.0003,     0.0001,     0.0000,     0.0006,     0.0005,     0.0002,     0.0003]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0027, -0.0045,  0.0246,  ..., -0.0154, -0.0018, -0.0149],
        [ 0.0373, -0.0437, -0.0147,  ..., -0.0073, -0.0202, -0.0356],
        [ 0.0435, -0.0349,  0.0343,  ..., -0.0087, -0.0134,  0.0062],
        ...,
        [ 0.0331,  0.0175, -0.0248,  ...,  0.0008,  0.0201,  0.0166],
        [ 0.0158,  0.0220, -0.0099,  ..., -0.0177, -0.0410, -0.0207],
        [ 0.0221, -0.0101,  0.0068,  ..., -0.0046, -0.0133,  0.0137]], device='cuda:0', requires_grad=True)
K: tensor([-1.0781, -0.7422, -1.2734, -0.4043, -1.8516,  2.5000, -1.3125,  2.4688, -1.7266, -1.4141,  1.2578,  0.2354, -1.7578, -1.2266, -1.8906,  0.9102,  1.4297,  2.4375, -2.1094,  1.3984,  2.3594,  0.7148, -1.3047, -0.3379,  1.5703, -0.9180,  0.0386, -2.0469,  1.5859,  0.9297,  1.1172,  2.6250,
        -0.9727,  1.7969,  2.2344, -1.0703, -1.4453,  1.8203,  1.5469, -1.5859,  2.1562, -2.5156, -0.0077,  0.9922,  0.3457,  2.3750, -1.1719, -2.9844,  0.3672,  2.9219, -1.3516, -1.2656,  1.7109,  0.3887,  1.8984, -1.3125, -1.6484, -2.5000, -1.8516, -2.0000, -2.6094, -1.5703,  1.9141,  0.9727],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0070,  0.0280,  0.0264,  ..., -0.0215,  0.0464, -0.0184],
        [-0.0020,  0.0451,  0.0003,  ...,  0.0226,  0.0275, -0.0130],
        [-0.0211, -0.0059,  0.0158,  ..., -0.0169,  0.0572, -0.0354],
        ...,
        [ 0.0145, -0.0108,  0.0140,  ..., -0.0255, -0.0036, -0.0062],
        [ 0.0104,  0.0079,  0.0112,  ...,  0.0249,  0.0202, -0.0075],
        [ 0.0131, -0.0296, -0.0229,  ...,  0.0306,  0.0267,  0.0067]], device='cuda:0', requires_grad=True)
Q: tensor([ 1.1562,  1.2578, -0.8633,  0.4805,  0.0496, -0.3770,  0.8555, -0.1074,  0.1216,  0.5781, -0.4219,  0.0767,  0.7852,  1.4688,  0.3809, -1.3594, -0.7344, -2.1094,  1.2344, -0.1191, -0.1030,  0.7930,  0.7461,  0.5664, -0.1108, -0.1816,  0.7227, -0.0603, -1.0469, -1.0156, -0.2334, -0.3340,
        -0.1318, -1.2891, -0.6758,  0.3574,  1.3984, -0.6992, -0.0703, -0.3418, -1.7422,  1.6875,  0.2578, -0.0723,  0.3418, -0.8047,  1.2344,  0.0874, -1.5547, -0.7852,  1.0000, -0.2578, -0.4023, -0.5625, -0.3633,  0.7578, -0.3398,  1.1094,  1.5391,  1.9453,  1.2188,  0.6562, -1.6953, -0.1533],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000,  -6.9375,  -6.7500,  -8.1875,  -7.9688,  -7.4688,  -6.9375,  -6.6562,  -7.6875,  -8.0625,  -9.6250,  -6.2812,  -6.5312,  -7.8750,  -7.4375],
        [  0.0000,  -4.5312,  -4.0312,  -5.2500,  -5.9375,  -4.9375,  -4.4062,  -3.9219,  -4.9375,  -4.5000,  -6.8438,  -4.0625,  -3.6875,  -4.9688,  -4.3438],
        [  0.0000,  -6.1250,  -6.6562,  -7.2188,  -8.1250,  -7.0000,  -6.3750,  -6.7812,  -7.1875,  -7.1562,  -9.1250,  -6.3750,  -6.1875,  -7.3438,  -6.8750],
        [  0.0000,  -7.6562,  -7.0000,  -9.0625,  -7.2500,  -7.7188,  -6.4375,  -6.7188,  -7.5000,  -8.9375,  -9.8750,  -6.5625,  -6.4375,  -7.6875,  -7.5312],
        [  0.0000,  -6.6250,  -5.8750,  -8.3125,  -7.0000,  -6.8438,  -5.2188,  -6.0312,  -7.0938,  -7.9375,  -9.1250,  -6.0000,  -6.0312,  -7.1875,  -6.3750],
        [  0.0000,  -4.7500,  -4.3125,  -5.8750,  -6.1250,  -5.2500,  -4.0625,  -4.2500,  -5.0000,  -5.9062,  -7.3125,  -3.6875,  -3.9219,  -5.0000,  -4.8125],
        [  0.0000,  -3.9688,  -3.3750,  -4.6250,  -5.4062,  -4.1875,  -3.7969,  -2.6875,  -3.8125,  -3.0000,  -6.0312,  -2.5625,  -2.1250,  -3.6406,  -3.2812],
        [  0.0000,  -7.5938,  -7.2812,  -8.8125,  -8.8750,  -7.8438,  -6.9688,  -7.6250,  -7.6875,  -8.6875, -10.5625,  -7.1875,  -6.7188,  -7.9062,  -7.5625],
        [  0.0000,  -8.0000,  -8.0000,  -8.8750,  -9.3750,  -8.6875,  -7.6562,  -7.9375,  -8.8125,  -7.8750, -10.9375,  -7.2500,  -7.5625,  -8.9375,  -8.5625],
        [  0.0000,  -6.1250,  -5.9062,  -7.4062,  -7.9062,  -6.9375,  -6.1562,  -5.8125,  -6.8750,  -7.0938,  -9.0625,  -5.1875,  -5.2500,  -6.8438,  -6.6250],
        [  0.0000,  -6.6250,  -6.3125,  -7.5938,  -7.5000,  -7.4375,  -6.2188,  -6.1250,  -7.0938,  -7.2500,  -9.2500,  -4.4688,  -5.3125,  -7.2500,  -7.1562],
        [  0.0000,  -6.8125,  -6.0625,  -7.1875,  -7.8438,  -7.2500,  -6.1875,  -5.5000,  -6.8750,  -5.9688,  -9.3125,  -5.0312,  -4.5625,  -6.9375,  -6.8438],
        [  0.0000,  -7.7188,  -7.2812,  -8.8750,  -9.1250,  -7.9062,  -7.1250,  -7.5625,  -7.7812,  -8.5000, -10.7500,  -7.0312,  -6.5625,  -7.9688,  -7.7500],
        [  0.0000,  -7.8438,  -7.6250,  -8.8750,  -7.9062,  -8.3125,  -7.2500,  -7.5938,  -8.1250,  -9.0625, -10.6250,  -7.3750,  -7.5312,  -8.5000,  -8.1875]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9893],
        [0.9928],
        [0.9980],
        [0.9954],
        [0.9974],
        [0.9932],
        [0.9531],
        [0.9984],
        [0.9993],
        [0.9980],
        [0.9948],
        [0.9964],
        [0.9990],
        [0.9990]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0776, 0.9219, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0610, 0.4531, 0.4863, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0603, 0.3457, 0.4629, 0.1318, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1338, 0.4004, 0.2412, 0.0718, 0.1543, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0295, 0.3848, 0.1699, 0.0791, 0.2041, 0.1328, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0258, 0.1992, 0.0903, 0.0598, 0.0552, 0.0254, 0.5430, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0299, 0.0986, 0.0894, 0.0150, 0.0233, 0.0427, 0.5391, 0.1641, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0371, 0.1885, 0.0270, 0.0069, 0.0374, 0.0194, 0.5938, 0.0432, 0.0464, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0144, 0.0586, 0.0483, 0.0090, 0.0284, 0.0356, 0.2217, 0.1309, 0.1318, 0.3203, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0242, 0.0287, 0.0195, 0.0057, 0.0095, 0.0104, 0.2500, 0.0518, 0.0417, 0.5234, 0.0356, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0117, 0.0267, 0.0300, 0.0058, 0.0110, 0.0109, 0.1455, 0.0747, 0.0415, 0.2070, 0.0598, 0.3750, 0.0000, 0.0000, 0.0000],
        [0.0250, 0.0425, 0.0259, 0.0041, 0.0067, 0.0145, 0.1040, 0.0444, 0.0320, 0.1660, 0.0874, 0.2656, 0.1826, 0.0000, 0.0000],
        [0.0327, 0.0786, 0.0097, 0.0018, 0.0111, 0.0069, 0.1680, 0.0128, 0.0118, 0.0884, 0.2500, 0.1660, 0.0957, 0.0659, 0.0000],
        [0.0059, 0.0136, 0.0063, 0.0021, 0.0038, 0.0037, 0.0308, 0.0125, 0.0182, 0.0476, 0.0157, 0.1118, 0.1187, 0.0972, 0.5117]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0044,  0.0063,  0.0010,  ..., -0.0318, -0.0073, -0.0323],
        [-0.0477, -0.0043, -0.0008,  ...,  0.0075, -0.0052,  0.0032],
        [-0.0468, -0.0146,  0.0505,  ..., -0.0149, -0.0189, -0.0254],
        ...,
        [-0.0082, -0.0253, -0.0093,  ..., -0.0337, -0.0427, -0.0525],
        [-0.0252, -0.0230, -0.0219,  ..., -0.0052, -0.0164,  0.0394],
        [ 0.0004,  0.0159,  0.0163,  ..., -0.0099,  0.0120, -0.0105]], device='cuda:0', requires_grad=True)
K: tensor([-1.8203, -1.8906, -0.7422, -0.0168, -0.4766, -1.8750, -1.6328,  0.6836,  0.4180, -1.9844,  0.2383, -2.1719,  2.4531, -2.0469, -0.3164,  1.8203,  2.0938,  0.3789,  0.7930, -0.0884,  0.9805, -1.2500,  0.6836, -1.4375, -1.0000,  0.9492, -0.5312,  1.8828,  0.0664,  1.5781, -1.1953, -1.7578,
        -1.2734, -1.0938,  1.1328, -1.3516,  2.6406,  0.4980, -1.2891,  0.5273, -2.5938,  1.0312,  0.8320,  2.0469,  0.6758, -0.1011, -2.2188, -0.6523,  1.8750,  0.6719,  0.9453, -0.4199, -0.7109, -2.1719, -1.8516, -2.0312,  2.2812, -1.0547, -0.8281,  1.6562, -0.6602, -0.9375,  1.0547, -1.0391],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0117, -0.0046,  0.0166,  ...,  0.0248, -0.0190, -0.0161],
        [ 0.0369, -0.0071,  0.0174,  ..., -0.0090,  0.0255,  0.0193],
        [-0.0195,  0.0124,  0.0461,  ...,  0.0197,  0.0276, -0.0084],
        ...,
        [ 0.0191,  0.0009, -0.0302,  ..., -0.0064,  0.0048, -0.0060],
        [-0.0116,  0.0405, -0.0139,  ...,  0.0108,  0.0026, -0.0313],
        [-0.0059, -0.0075, -0.0044,  ...,  0.0130,  0.0034, -0.0043]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.1030, -0.9883, -1.0156,  1.3672, -2.5000, -0.1992, -0.4336, -0.2139,  0.5273, -0.6250, -0.4922,  0.5078, -1.9922, -1.8906,  2.0312, -0.2070, -1.2031, -0.3633,  0.2891, -0.6445, -1.0547,  2.2500, -2.3750, -2.0938, -1.2969, -1.2500,  2.1250,  3.3906, -3.0625,  0.8047, -0.0483, -1.2500,
        -2.8750,  1.8750, -2.0156, -1.8750,  2.7188, -0.8242, -2.1562,  0.5234, -0.5781, -0.4414,  2.5625, -0.1357, -1.3438, -2.3281, -0.3379, -2.9375,  1.4766,  1.4219,  0.9414,  0.5352, -0.7695, -0.8945, -0.0281, -0.8477, -0.3457,  0.3047, -0.9688,  0.7422, -1.9297,  1.6484,  0.6172, -2.5312],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      2.4688,      2.4062,      1.8906,      2.8438,      1.8906,      4.3438,      3.2812,      3.4688,      3.7031,      3.4531,      4.1875,      4.4688,      4.5312,      5.9688],
        [     0.0000,      2.0000,      2.0781,      1.1562,      1.5938,      1.3828,      3.7344,      3.1250,      2.6875,      3.6406,      2.7812,      4.3750,      4.5938,      3.9531,      5.4688],
        [     0.0000,      1.7500,      2.0469,      0.7812,      1.3750,      1.5859,      3.0781,      2.8281,      2.8906,      4.7188,      3.6875,      5.5625,      5.1562,      4.5312,      6.1562],
        [     0.0000,      1.0938,      0.5898,     -0.6250,      0.1455,      0.1060,      2.1562,      1.5938,      1.2031,      2.4219,      1.2891,      2.9844,      2.8281,      2.6094,      4.4062],
        [     0.0000,      2.5625,      1.7578,      0.9883,      1.9297,      1.5078,      3.9375,      3.0000,      3.1406,      4.0625,      4.5938,      4.7500,      4.5938,      4.8750,      7.0312],
        [     0.0000,      2.0469,      1.2578,      0.8398,      0.7617,     -0.0144,      3.0469,      2.4688,      2.0156,      3.2656,     -0.2383,      4.2188,      4.0625,      3.1406,      6.5312],
        [     0.0000,      1.1953,      1.0938,     -0.6914,     -0.2520,      0.3555,      2.8906,      1.6953,      1.2656,      3.2812,      2.2500,      3.9375,      3.4688,      2.8281,      5.9062],
        [     0.0000,      1.6250,     -0.3203,     -1.6797,      0.0041,     -0.6523,      2.7656,      0.1494,      0.2227,      2.1094,      3.2656,      2.7188,      2.0312,      1.9141,      5.1562],
        [     0.0000,      1.4062,      1.2109,     -0.4766,      0.6797,      0.9062,      2.7344,      2.2031,      2.2188,      3.1094,      2.6562,      3.9531,      4.1875,      4.0000,      6.2500],
        [     0.0000,      0.1699,     -0.2148,     -1.4453,     -0.9336,     -0.8359,      2.3438,      0.7617,      0.5469,      3.0781,      0.3848,      3.3750,      2.6406,      2.1719,      6.4062],
        [     0.0000,      0.8242,      0.9414,     -0.7109,     -0.0586,     -0.0728,      2.5156,      1.8516,      1.2656,      2.8750,      1.6328,      3.4688,      3.7344,      3.0156,      5.0625],
        [     0.0000,      0.5312,      0.0364,     -1.8203,     -1.3125,     -0.5469,      1.4297,      0.5781,      0.2451,      1.8906,      1.2500,      2.3594,      1.9844,      1.8516,      4.9375],
        [     0.0000,      0.8789,     -1.2188,     -2.9062,     -1.0781,     -1.5547,      1.6328,     -0.9414,     -1.0234,      0.9922,      2.0312,      1.6250,      1.0703,      0.6992,      4.0625],
        [     0.0000,      0.8398,      0.0771,     -1.0312,     -0.4336,     -0.4707,      1.6562,      0.7539,      1.1328,      2.0938,      0.9883,      2.9531,      3.0000,      2.8125,      4.4688]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4162],
        [0.1280],
        [0.1137],
        [0.2463],
        [0.0861],
        [0.3304],
        [0.0801],
        [0.0709],
        [0.0641],
        [0.1075],
        [0.0722],
        [0.0692],
        [0.0599],
        [0.0753]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0232, 0.9766, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0317, 0.9219, 0.0481, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0400, 0.9219, 0.0101, 0.0282, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0048, 0.6211, 0.0781, 0.0569, 0.2402, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0188, 0.4375, 0.0674, 0.0087, 0.2734, 0.1953, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0330, 0.2500, 0.4141, 0.0297, 0.0703, 0.0908, 0.1118, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0144, 0.0659, 0.2715, 0.0154, 0.2559, 0.0139, 0.0255, 0.3359, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0586, 0.2578, 0.1738, 0.0110, 0.0928, 0.0189, 0.0596, 0.2891, 0.0400, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0115, 0.3750, 0.0566, 0.0317, 0.0742, 0.0159, 0.1289, 0.1963, 0.0141, 0.0962, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0439, 0.1250, 0.0508, 0.0088, 0.0378, 0.0229, 0.0322, 0.2500, 0.0162, 0.3066, 0.1050, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0388, 0.2451, 0.0620, 0.0728, 0.0250, 0.0149, 0.1494, 0.1348, 0.0042, 0.1196, 0.0625, 0.0708, 0.0000, 0.0000, 0.0000],
        [0.0261, 0.0664, 0.0201, 0.0019, 0.1270, 0.0027, 0.0181, 0.0143, 0.1133, 0.1504, 0.0703, 0.2207, 0.1680, 0.0000, 0.0000],
        [0.0461, 0.1118, 0.0187, 0.0023, 0.0317, 0.0045, 0.0221, 0.0254, 0.0078, 0.1611, 0.0322, 0.1055, 0.3945, 0.0366, 0.0000],
        [0.0474, 0.3633, 0.0184, 0.0197, 0.0623, 0.0145, 0.1689, 0.0229, 0.0030, 0.0130, 0.0466, 0.0243, 0.0244, 0.0057, 0.1650]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0122, -0.0326,  0.0049,  ...,  0.0074,  0.0317, -0.0253],
        [ 0.0091, -0.0532, -0.0183,  ...,  0.0260,  0.0081, -0.0044],
        [-0.0275, -0.0070, -0.0231,  ...,  0.0334, -0.0117, -0.0172],
        ...,
        [ 0.0322,  0.0116, -0.0335,  ..., -0.0081, -0.0036,  0.0174],
        [-0.0029,  0.0034,  0.0263,  ...,  0.0411, -0.0243,  0.0024],
        [-0.0309,  0.0519, -0.0425,  ...,  0.0028,  0.0248,  0.0362]], device='cuda:0', requires_grad=True)
K: tensor([ 0.8086, -1.0000, -0.3574,  0.3125, -0.5391,  0.1245, -0.3418, -0.2256, -0.8867, -2.6875, -2.0312, -0.5039,  0.3184, -1.2109, -1.0859,  0.4258,  1.0625,  1.3047, -2.3750,  0.9492,  1.1953, -1.2266, -2.2500,  0.3906,  1.1406, -0.7617, -0.7070,  0.9336, -0.3906, -1.8125, -0.6797,  1.0078,
        -1.5234,  2.1250,  3.0000,  1.0703,  0.5625, -0.8164, -0.3516, -2.2031, -0.3281, -1.1797, -2.3438,  0.1079,  1.1797, -0.2773, -1.5625,  1.1328, -1.4688, -1.1250,  0.6055,  1.3047,  0.3242, -0.2236,  1.1016,  0.3438,  0.1465, -2.7969, -0.9219,  1.0859,  0.2520, -0.9258,  1.3203, -1.0000],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0091, -0.0075, -0.0078,  ..., -0.0347, -0.0336, -0.0196],
        [ 0.0052,  0.0044, -0.0032,  ...,  0.0095, -0.0178,  0.0467],
        [ 0.0209, -0.0109, -0.0022,  ..., -0.0068, -0.0260, -0.0078],
        ...,
        [ 0.0319, -0.0475, -0.0215,  ...,  0.0222,  0.0213, -0.0023],
        [ 0.0124, -0.0034,  0.0270,  ...,  0.0182,  0.0018, -0.0015],
        [-0.0131, -0.0151, -0.0215,  ...,  0.0216, -0.0013, -0.0249]], device='cuda:0', requires_grad=True)
Q: tensor([-0.5898,  1.0391,  0.9141,  0.7031,  0.3457, -1.2344,  0.3613, -2.2500, -1.1406,  0.4160, -0.9180,  2.0781,  0.3594, -0.3574, -0.2734, -1.3359,  0.3320, -0.1309, -0.9805,  0.8398,  0.7109, -1.4453,  0.9766, -0.8945,  1.0156,  0.8125, -2.0781,  1.5781, -0.5039,  1.6562, -1.4609, -2.7500,
        -0.4805,  0.4219, -0.6367, -0.6562, -0.8750, -0.2012,  1.8359, -1.0391,  0.2676,  0.2734, -0.9609,  1.2656, -0.1250,  1.9219, -1.3516,  1.0703,  0.9414, -1.1562,  0.2559,  1.7656, -1.1641, -0.1338, -0.5352,  0.1855, -2.0312,  0.0116, -0.5000,  1.0625,  0.5508, -0.9414, -0.7969, -0.6133],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  3.7344,  2.1719,  1.7344,  3.1250,  2.8125,  2.3438,  2.2812,  1.4141,  1.4609,  2.6719,  2.1875,  2.6875,  1.4922,  1.7266],
        [ 0.0000,  3.3750,  0.4180,  2.6562,  2.1094,  1.3984,  3.0938,  0.6719, -0.6445, -0.4473,  2.1406, -0.7891,  1.0547, -0.6641,  0.2129],
        [ 0.0000,  3.1406, -1.3750, -0.3496,  1.9531, -0.4277,  2.5625, -0.8633, -1.1641, -2.1875,  0.3066, -2.3281, -0.8086, -1.2344, -0.8398],
        [ 0.0000,  4.8750,  2.7812,  2.4688,  3.9062,  3.7656,  3.3125,  4.4688,  1.5234,  2.5938,  2.4375,  2.8906,  4.4062,  1.2031,  1.9453],
        [ 0.0000,  3.1406,  1.2734, -0.7695,  2.6719,  2.3438,  1.9922,  2.3750,  0.6133,  0.9531,  0.6641,  1.4531,  1.1250, -0.0072,  0.9141],
        [ 0.0000,  2.0312,  2.5312, -0.1074,  0.7539,  1.0156,  1.2188,  4.0938, -0.1060,  2.0000, -0.0752,  2.7500,  2.8906, -0.7031,  1.7812],
        [ 0.0000,  1.5156,  2.9375,  0.0623,  2.8750, -0.0356,  0.5703,  3.1562,  4.3438,  4.7812,  2.5156,  3.9531,  4.3125,  4.5000,  4.5312],
        [ 0.0000,  1.4766,  1.0859, -1.6719,  0.4570, -1.1328,  0.0137,  1.5938, -0.3789,  2.5469,  0.0374,  1.5938,  2.9688,  0.1357,  1.2031],
        [ 0.0000,  3.4844,  1.6016,  1.0156,  1.8672,  0.3301,  2.4219,  2.8438,  0.2061,  2.1250,  3.1406,  2.8750,  4.0938,  1.1094,  2.2500],
        [ 0.0000,  1.0469,  0.1445, -1.6094, -0.1523, -0.6523, -0.3125,  1.7422, -0.9961,  1.9453,  0.8711,  2.1875,  2.8281, -0.1133,  1.0547],
        [ 0.0000,  1.8359,  0.4668,  0.6250, -0.4414, -0.9609,  1.3516,  1.2422, -2.2344,  1.1250,  0.4766,  0.6016,  3.9375, -1.2500,  0.7109],
        [ 0.0000,  0.9297, -0.2617, -2.6250,  1.5859, -2.2656, -0.3691, -0.6016,  1.4688,  1.7500,  0.9922,  2.1406,  1.8672,  3.1875,  2.8594],
        [ 0.0000,  0.8828, -0.9062, -2.9844, -0.3730, -2.3438, -0.7383, -0.5977, -1.7812,  1.2500, -0.3613,  0.8242,  2.1406, -0.2334,  0.7578],
        [ 0.0000,  2.0312, -0.9453, -0.8789,  0.2715, -1.1875,  1.2734, -0.7266, -2.7500, -1.2969, -0.0161, -0.6680, -0.6602, -2.1250,  1.2500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0912],
        [0.0271],
        [0.0187],
        [0.0202],
        [0.0155],
        [0.0119],
        [0.0076],
        [0.0089],
        [0.0067],
        [0.0175],
        [0.0115],
        [0.0378],
        [0.0090],
        [0.0113]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.1147 the:0.1318-:0.1416 and:0.1206atoes:0.2910,:0.4512 the:0.1533iced:0.2676)
iced
------
		( the:0.1318-:0.1416 and:0.1206atoes:0.2910,:0.4512 the:0.1533iced:0.2676 and:0.0894)
 and the seeds are the most popular food for the world.
The seeds
@ 7550 train 4.2176 , allloss: 4.2336, dt: 1707.09ms, fracRes: 0.6037, norm(attn): 0.1416, norm(output): 0.2393, norm(x): 0.6823, norm(y): 1.0058, norm:1.0994, tok/sec: 76780.80, flops:67.24, batch-reuse:1
@ 7551 train 4.1103 , allloss: 4.1264, dt: 1252.19ms, fracRes: 0.6033, norm(attn): 0.1426, norm(output): 0.2383, norm(x): 0.6802, norm(y): 1.0058, norm:1.3170, tok/sec: 104674.58, flops:91.66, batch-reuse:1
@ 7552 train 4.1872 , allloss: 4.2032, dt: 1290.01ms, fracRes: 0.6040, norm(attn): 0.1426, norm(output): 0.2373, norm(x): 0.6796, norm(y): 1.0059, norm:1.2037, tok/sec: 101605.28, flops:88.97, batch-reuse:1
@ 7553 train 4.1655 , allloss: 4.1812, dt: 1309.84ms, fracRes: 0.6034, norm(attn): 0.1426, norm(output): 0.2383, norm(x): 0.6798, norm(y): 1.0057, norm:1.0750, tok/sec: 100067.24, flops:87.63, batch-reuse:1
@ 7554 train 4.0512 , allloss: 4.0691, dt: 1253.39ms, fracRes: 0.6044, norm(attn): 0.1455, norm(output): 0.2383, norm(x): 0.6843, norm(y): 1.0059, norm:1.6420, tok/sec: 104574.35, flops:91.57, batch-reuse:1
@ 7555 train 4.0957 , allloss: 4.1125, dt: 1278.55ms, fracRes: 0.6039, norm(attn): 0.1445, norm(output): 0.2383, norm(x): 0.6825, norm(y): 1.0059, norm:1.2052, tok/sec: 102516.27, flops:89.77, batch-reuse:1
@ 7556 train 4.0606 , allloss: 4.0770, dt: 1265.34ms, fracRes: 0.6032, norm(attn): 0.1455, norm(output): 0.2402, norm(x): 0.6827, norm(y): 1.0060, norm:1.1543, tok/sec: 103586.60, flops:90.71, batch-reuse:1
@ 7557 train 4.1583 , allloss: 4.1745, dt: 1259.15ms, fracRes: 0.6031, norm(attn): 0.1445, norm(output): 0.2402, norm(x): 0.6817, norm(y): 1.0060, norm:1.1357, tok/sec: 104095.85, flops:91.16, batch-reuse:1
@ 7558 train 4.0531 , allloss: 4.0693, dt: 1267.10ms, fracRes: 0.6028, norm(attn): 0.1436, norm(output): 0.2402, norm(x): 0.6811, norm(y): 1.0058, norm:1.0969, tok/sec: 103442.44, flops:90.58, batch-reuse:1
@ 7559 train 4.2254 , allloss: 4.2411, dt: 1286.00ms, fracRes: 0.6030, norm(attn): 0.1455, norm(output): 0.2432, norm(x): 0.6840, norm(y): 1.0056, norm:1.0909, tok/sec: 101922.24, flops:89.25, batch-reuse:1
@ 7560 train 4.0554 , allloss: 4.0711, dt: 1280.62ms, fracRes: 0.6031, norm(attn): 0.1445, norm(output): 0.2402, norm(x): 0.6834, norm(y): 1.0058, norm:1.1365, tok/sec: 102350.15, flops:89.63, batch-reuse:1
@ 7561 train 4.1922 , allloss: 4.2081, dt: 1287.55ms, fracRes: 0.6039, norm(attn): 0.1426, norm(output): 0.2383, norm(x): 0.6839, norm(y): 1.0060, norm:1.3284, tok/sec: 101799.85, flops:89.14, batch-reuse:1
@ 7562 train 4.1513 , allloss: 4.1672, dt: 1272.31ms, fracRes: 0.6037, norm(attn): 0.1426, norm(output): 0.2393, norm(x): 0.6833, norm(y): 1.0060, norm:1.4809, tok/sec: 103019.11, flops:90.21, batch-reuse:1
@ 7563 train 4.1615 , allloss: 4.1773, dt: 1268.13ms, fracRes: 0.6034, norm(attn): 0.1426, norm(output): 0.2383, norm(x): 0.6829, norm(y): 1.0058, norm:1.0246, tok/sec: 103358.76, flops:90.51, batch-reuse:1
@ 7564 train 4.1064 , allloss: 4.1225, dt: 1261.95ms, fracRes: 0.6030, norm(attn): 0.1426, norm(output): 0.2383, norm(x): 0.6814, norm(y): 1.0059, norm:1.1477, tok/sec: 103864.42, flops:90.95, batch-reuse:1
@ 7565 train 4.1239 , allloss: 4.1399, dt: 1260.39ms, fracRes: 0.6027, norm(attn): 0.1445, norm(output): 0.2383, norm(x): 0.6796, norm(y): 1.0059, norm:1.4080, tok/sec: 103992.89, flops:91.07, batch-reuse:1
@ 7566 train 4.0884 , allloss: 4.1042, dt: 1280.75ms, fracRes: 0.6032, norm(attn): 0.1426, norm(output): 0.2383, norm(x): 0.6789, norm(y): 1.0058, norm:1.2183, tok/sec: 102339.84, flops:89.62, batch-reuse:1
@ 7567 train 4.1188 , allloss: 4.1346, dt: 1256.88ms, fracRes: 0.6035, norm(attn): 0.1416, norm(output): 0.2363, norm(x): 0.6789, norm(y): 1.0058, norm:1.0502, tok/sec: 104283.74, flops:91.32, batch-reuse:1
@ 7568 train 4.5597 , allloss: 4.5748, dt: 1261.49ms, fracRes: 0.6036, norm(attn): 0.1426, norm(output): 0.2373, norm(x): 0.6768, norm(y): 1.0057, norm:1.7000, tok/sec: 103902.22, flops:90.99, batch-reuse:1
@ 7569 train 4.2719 , allloss: 4.2878, dt: 1268.77ms, fracRes: 0.6031, norm(attn): 0.1436, norm(output): 0.2383, norm(x): 0.6797, norm(y): 1.0059, norm:1.5146, tok/sec: 103306.08, flops:90.46, batch-reuse:1
@ 7570 train 4.1753 , allloss: 4.1908, dt: 1264.80ms, fracRes: 0.6036, norm(attn): 0.1426, norm(output): 0.2393, norm(x): 0.6814, norm(y): 1.0058, norm:1.1165, tok/sec: 103630.31, flops:90.75, batch-reuse:1
@ 7571 train 4.0944 , allloss: 4.1099, dt: 1254.34ms, fracRes: 0.6027, norm(attn): 0.1436, norm(output): 0.2393, norm(x): 0.6780, norm(y): 1.0056, norm:1.2771, tok/sec: 104494.68, flops:91.50, batch-reuse:1
@ 7572 train 4.2113 , allloss: 4.2272, dt: 1257.30ms, fracRes: 0.6037, norm(attn): 0.1416, norm(output): 0.2373, norm(x): 0.6810, norm(y): 1.0058, norm:1.2350, tok/sec: 104248.64, flops:91.29, batch-reuse:1
@ 7573 train 4.1455 , allloss: 4.1611, dt: 1267.08ms, fracRes: 0.6034, norm(attn): 0.1436, norm(output): 0.2393, norm(x): 0.6837, norm(y): 1.0059, norm:1.2189, tok/sec: 103444.39, flops:90.58, batch-reuse:1
@ 7574 train 4.1164 , allloss: 4.1320, dt: 1267.10ms, fracRes: 0.6022, norm(attn): 0.1445, norm(output): 0.2441, norm(x): 0.6842, norm(y): 1.0057, norm:1.1206, tok/sec: 103442.89, flops:90.58, batch-reuse:1
@ 7575 train 4.1067 , allloss: 4.1228, dt: 1286.23ms, fracRes: 0.6025, norm(attn): 0.1426, norm(output): 0.2412, norm(x): 0.6850, norm(y): 1.0057, norm:1.1669, tok/sec: 101904.20, flops:89.24, batch-reuse:1
@ 7576 train 4.1682 , allloss: 4.1838, dt: 1266.68ms, fracRes: 0.6030, norm(attn): 0.1426, norm(output): 0.2383, norm(x): 0.6845, norm(y): 1.0058, norm:1.0699, tok/sec: 103476.45, flops:90.61, batch-reuse:1
@ 7577 train 4.1452 , allloss: 4.1619, dt: 1257.92ms, fracRes: 0.6036, norm(attn): 0.1426, norm(output): 0.2383, norm(x): 0.6856, norm(y): 1.0058, norm:1.0788, tok/sec: 104197.01, flops:91.24, batch-reuse:1
@ 7578 train 4.0888 , allloss: 4.1044, dt: 1281.31ms, fracRes: 0.6032, norm(attn): 0.1445, norm(output): 0.2393, norm(x): 0.6832, norm(y): 1.0057, norm:1.0542, tok/sec: 102295.47, flops:89.58, batch-reuse:1
@ 7579 train 4.1590 , allloss: 4.1742, dt: 1292.28ms, fracRes: 0.6040, norm(attn): 0.1455, norm(output): 0.2373, norm(x): 0.6801, norm(y): 1.0057, norm:1.1621, tok/sec: 101427.28, flops:88.82, batch-reuse:1
@ 7580 train 4.2153 , allloss: 4.2306, dt: 1281.44ms, fracRes: 0.6041, norm(attn): 0.1426, norm(output): 0.2383, norm(x): 0.6771, norm(y): 1.0057, norm:1.1282, tok/sec: 102284.91, flops:89.57, batch-reuse:1
@ 7581 train 4.1317 , allloss: 4.1475, dt: 1285.20ms, fracRes: 0.6040, norm(attn): 0.1416, norm(output): 0.2373, norm(x): 0.6794, norm(y): 1.0057, norm:1.1279, tok/sec: 101985.45, flops:89.31, batch-reuse:1
@ 7582 train 4.0467 , allloss: 4.0625, dt: 1261.89ms, fracRes: 0.6037, norm(attn): 0.1416, norm(output): 0.2354, norm(x): 0.6783, norm(y): 1.0059, norm:1.1425, tok/sec: 103869.74, flops:90.96, batch-reuse:1
@ 7583 train 4.1410 , allloss: 4.1570, dt: 1273.47ms, fracRes: 0.6027, norm(attn): 0.1445, norm(output): 0.2383, norm(x): 0.6768, norm(y): 1.0058, norm:1.0631, tok/sec: 102925.05, flops:90.13, batch-reuse:1
@ 7584 train 4.0377 , allloss: 4.0533, dt: 1261.76ms, fracRes: 0.6016, norm(attn): 0.1455, norm(output): 0.2412, norm(x): 0.6761, norm(y): 1.0057, norm:1.0910, tok/sec: 103879.96, flops:90.97, batch-reuse:1
@ 7585 train 4.0703 , allloss: 4.0864, dt: 1278.98ms, fracRes: 0.6021, norm(attn): 0.1465, norm(output): 0.2393, norm(x): 0.6778, norm(y): 1.0059, norm:1.1752, tok/sec: 102481.51, flops:89.74, batch-reuse:1
@ 7586 train 3.9871 , allloss: 4.0036, dt: 1255.63ms, fracRes: 0.6026, norm(attn): 0.1445, norm(output): 0.2393, norm(x): 0.6786, norm(y): 1.0059, norm:1.0880, tok/sec: 104387.77, flops:91.41, batch-reuse:1
@ 7587 train 4.1971 , allloss: 4.2133, dt: 1278.41ms, fracRes: 0.6030, norm(attn): 0.1436, norm(output): 0.2393, norm(x): 0.6794, norm(y): 1.0058, norm:1.2166, tok/sec: 102527.30, flops:89.78, batch-reuse:1
@ 7588 train 4.0689 , allloss: 4.0849, dt: 1287.53ms, fracRes: 0.6042, norm(attn): 0.1426, norm(output): 0.2383, norm(x): 0.6804, norm(y): 1.0059, norm:1.0835, tok/sec: 101800.81, flops:89.15, batch-reuse:1
@ 7589 train 3.9809 , allloss: 3.9965, dt: 1257.72ms, fracRes: 0.6031, norm(attn): 0.1455, norm(output): 0.2402, norm(x): 0.6815, norm(y): 1.0055, norm:1.0830, tok/sec: 104213.99, flops:91.26, batch-reuse:1
@ 7590 train 4.3150 , allloss: 4.3306, dt: 1258.98ms, fracRes: 0.6048, norm(attn): 0.1436, norm(output): 0.2363, norm(x): 0.6798, norm(y): 1.0057, norm:1.3110, tok/sec: 104109.83, flops:91.17, batch-reuse:1
@ 7591 train 4.4697 , allloss: 4.4853, dt: 1254.59ms, fracRes: 0.6041, norm(attn): 0.1436, norm(output): 0.2373, norm(x): 0.6791, norm(y): 1.0056, norm:1.1937, tok/sec: 104473.73, flops:91.49, batch-reuse:1
@ 7592 train 4.0990 , allloss: 4.1148, dt: 1248.51ms, fracRes: 0.6029, norm(attn): 0.1465, norm(output): 0.2412, norm(x): 0.6813, norm(y): 1.0057, norm:1.1835, tok/sec: 104982.65, flops:91.93, batch-reuse:1
@ 7593 train 4.0343 , allloss: 4.0501, dt: 1282.27ms, fracRes: 0.6023, norm(attn): 0.1455, norm(output): 0.2393, norm(x): 0.6816, norm(y): 1.0058, norm:1.2589, tok/sec: 102219.05, flops:89.51, batch-reuse:1
@ 7594 train 4.0292 , allloss: 4.0450, dt: 1270.14ms, fracRes: 0.6025, norm(attn): 0.1465, norm(output): 0.2432, norm(x): 0.6823, norm(y): 1.0057, norm:1.1207, tok/sec: 103194.75, flops:90.37, batch-reuse:1
@ 7595 train 4.1204 , allloss: 4.1362, dt: 1283.57ms, fracRes: 0.6020, norm(attn): 0.1484, norm(output): 0.2441, norm(x): 0.6836, norm(y): 1.0056, norm:1.3433, tok/sec: 102115.57, flops:89.42, batch-reuse:1
@ 7596 train 4.1299 , allloss: 4.1469, dt: 1276.33ms, fracRes: 0.6030, norm(attn): 0.1465, norm(output): 0.2393, norm(x): 0.6818, norm(y): 1.0058, norm:1.0618, tok/sec: 102694.48, flops:89.93, batch-reuse:1
@ 7597 train 4.0122 , allloss: 4.0284, dt: 1272.75ms, fracRes: 0.6027, norm(attn): 0.1436, norm(output): 0.2412, norm(x): 0.6796, norm(y): 1.0057, norm:1.1715, tok/sec: 102983.49, flops:90.18, batch-reuse:1
@ 7598 train 4.0182 , allloss: 4.0343, dt: 1258.17ms, fracRes: 0.6024, norm(attn): 0.1455, norm(output): 0.2402, norm(x): 0.6786, norm(y): 1.0057, norm:1.1557, tok/sec: 104176.95, flops:91.23, batch-reuse:1
@ 7599 train 4.0070 , allloss: 4.0233, dt: 1275.19ms, fracRes: 0.6024, norm(attn): 0.1465, norm(output): 0.2422, norm(x): 0.6832, norm(y): 1.0058, norm:1.3235, tok/sec: 102786.63, flops:90.01, batch-reuse:1
@ 7600 train 3.9883 , allloss: 4.0046, dt: 1284.46ms, fracRes: 0.6036, norm(attn): 0.1455, norm(output): 0.2393, norm(x): 0.6821, norm(y): 1.0057, norm:1.1546, tok/sec: 102044.83, flops:89.36, batch-reuse:1
@ 7601 train 4.0346 , allloss: 4.0507, dt: 1277.69ms, fracRes: 0.6047, norm(attn): 0.1426, norm(output): 0.2383, norm(x): 0.6844, norm(y): 1.0059, norm:1.3479, tok/sec: 102585.25, flops:89.83, batch-reuse:1
@ 7602 train 4.0847 , allloss: 4.1008, dt: 1277.15ms, fracRes: 0.6044, norm(attn): 0.1426, norm(output): 0.2383, norm(x): 0.6853, norm(y): 1.0060, norm:1.4138, tok/sec: 102628.48, flops:89.87, batch-reuse:1
@ 7603 train 4.1494 , allloss: 4.1645, dt: 1254.02ms, fracRes: 0.6032, norm(attn): 0.1426, norm(output): 0.2402, norm(x): 0.6826, norm(y): 1.0058, norm:1.2327, tok/sec: 104521.14, flops:91.53, batch-reuse:1
@ 7604 train 4.1230 , allloss: 4.1386, dt: 1285.47ms, fracRes: 0.6035, norm(attn): 0.1436, norm(output): 0.2393, norm(x): 0.6835, norm(y): 1.0057, norm:1.0205, tok/sec: 101964.62, flops:89.29, batch-reuse:1
@ 7605 train 3.9697 , allloss: 3.9852, dt: 1270.11ms, fracRes: 0.6040, norm(attn): 0.1426, norm(output): 0.2383, norm(x): 0.6838, norm(y): 1.0058, norm:1.0735, tok/sec: 103197.41, flops:90.37, batch-reuse:1
@ 7606 train 4.1592 , allloss: 4.1746, dt: 1265.91ms, fracRes: 0.6044, norm(attn): 0.1436, norm(output): 0.2373, norm(x): 0.6795, norm(y): 1.0058, norm:1.1218, tok/sec: 103539.52, flops:90.67, batch-reuse:1
@ 7607 train 3.9936 , allloss: 4.0094, dt: 1277.48ms, fracRes: 0.6049, norm(attn): 0.1426, norm(output): 0.2383, norm(x): 0.6808, norm(y): 1.0059, norm:1.1190, tok/sec: 102602.18, flops:89.85, batch-reuse:1
@ 7608 train 4.0523 , allloss: 4.0679, dt: 1294.88ms, fracRes: 0.6040, norm(attn): 0.1436, norm(output): 0.2373, norm(x): 0.6789, norm(y): 1.0057, norm:1.1375, tok/sec: 101223.21, flops:88.64, batch-reuse:1
@ 7609 train 4.0667 , allloss: 4.0823, dt: 1268.36ms, fracRes: 0.6032, norm(attn): 0.1426, norm(output): 0.2363, norm(x): 0.6753, norm(y): 1.0057, norm:1.4720, tok/sec: 103339.50, flops:90.49, batch-reuse:1
@ 7610 train 4.0737 , allloss: 4.0897, dt: 1260.69ms, fracRes: 0.6025, norm(attn): 0.1436, norm(output): 0.2383, norm(x): 0.6757, norm(y): 1.0057, norm:1.2113, tok/sec: 103968.78, flops:91.04, batch-reuse:1
@ 7611 train 4.0490 , allloss: 4.0654, dt: 1261.97ms, fracRes: 0.6023, norm(attn): 0.1436, norm(output): 0.2393, norm(x): 0.6742, norm(y): 1.0056, norm:1.0480, tok/sec: 103863.12, flops:90.95, batch-reuse:1
@ 7612 train 4.0320 , allloss: 4.0480, dt: 1261.29ms, fracRes: 0.6027, norm(attn): 0.1445, norm(output): 0.2393, norm(x): 0.6766, norm(y): 1.0056, norm:1.0187, tok/sec: 103919.15, flops:91.00, batch-reuse:1
@ 7613 train 3.9981 , allloss: 4.0145, dt: 1273.24ms, fracRes: 0.6020, norm(attn): 0.1475, norm(output): 0.2412, norm(x): 0.6790, norm(y): 1.0056, norm:1.2977, tok/sec: 102943.49, flops:90.15, batch-reuse:1
@ 7614 train 4.1580 , allloss: 4.1735, dt: 1280.28ms, fracRes: 0.6027, norm(attn): 0.1455, norm(output): 0.2383, norm(x): 0.6764, norm(y): 1.0056, norm:1.2470, tok/sec: 102377.79, flops:89.65, batch-reuse:1
@ 7615 train 4.0112 , allloss: 4.0265, dt: 1291.80ms, fracRes: 0.6032, norm(attn): 0.1455, norm(output): 0.2373, norm(x): 0.6788, norm(y): 1.0057, norm:0.9724, tok/sec: 101464.28, flops:88.85, batch-reuse:1
@ 7616 train 4.0070 , allloss: 4.0221, dt: 1271.07ms, fracRes: 0.6032, norm(attn): 0.1445, norm(output): 0.2393, norm(x): 0.6776, norm(y): 1.0056, norm:1.0188, tok/sec: 103119.48, flops:90.30, batch-reuse:1
@ 7617 train 3.9762 , allloss: 3.9920, dt: 1283.63ms, fracRes: 0.6035, norm(attn): 0.1436, norm(output): 0.2373, norm(x): 0.6782, norm(y): 1.0058, norm:1.2871, tok/sec: 102110.71, flops:89.42, batch-reuse:1
@ 7618 train 4.1351 , allloss: 4.1507, dt: 1263.36ms, fracRes: 0.6028, norm(attn): 0.1426, norm(output): 0.2383, norm(x): 0.6776, norm(y): 1.0057, norm:1.1024, tok/sec: 103749.06, flops:90.85, batch-reuse:1
@ 7619 train 4.0963 , allloss: 4.1124, dt: 1244.55ms, fracRes: 0.6030, norm(attn): 0.1445, norm(output): 0.2393, norm(x): 0.6789, norm(y): 1.0056, norm:1.1001, tok/sec: 105316.70, flops:92.22, batch-reuse:1
@ 7620 train 4.0119 , allloss: 4.0277, dt: 1250.86ms, fracRes: 0.6028, norm(attn): 0.1455, norm(output): 0.2393, norm(x): 0.6783, norm(y): 1.0056, norm:1.1863, tok/sec: 104785.45, flops:91.76, batch-reuse:1
@ 7621 train 4.0513 , allloss: 4.0668, dt: 1274.24ms, fracRes: 0.6029, norm(attn): 0.1445, norm(output): 0.2383, norm(x): 0.6797, norm(y): 1.0056, norm:1.0897, tok/sec: 102862.61, flops:90.08, batch-reuse:1
@ 7622 train 4.1032 , allloss: 4.1186, dt: 1262.59ms, fracRes: 0.6035, norm(attn): 0.1445, norm(output): 0.2393, norm(x): 0.6801, norm(y): 1.0055, norm:1.1607, tok/sec: 103812.11, flops:90.91, batch-reuse:1
@ 7623 train 3.8803 , allloss: 3.8955, dt: 1273.33ms, fracRes: 0.6040, norm(attn): 0.1436, norm(output): 0.2383, norm(x): 0.6773, norm(y): 1.0057, norm:1.0647, tok/sec: 102936.36, flops:90.14, batch-reuse:1
@ 7624 train 4.0382 , allloss: 4.0540, dt: 1288.32ms, fracRes: 0.6036, norm(attn): 0.1445, norm(output): 0.2373, norm(x): 0.6786, norm(y): 1.0056, norm:1.2691, tok/sec: 101738.39, flops:89.09, batch-reuse:1
@ 7625 train 3.9812 , allloss: 3.9971, dt: 1279.91ms, fracRes: 0.6027, norm(attn): 0.1455, norm(output): 0.2402, norm(x): 0.6786, norm(y): 1.0056, norm:1.0525, tok/sec: 102407.04, flops:89.68, batch-reuse:1
@ 7626 train 4.0845 , allloss: 4.1007, dt: 1294.17ms, fracRes: 0.6022, norm(attn): 0.1455, norm(output): 0.2383, norm(x): 0.6753, norm(y): 1.0057, norm:1.5921, tok/sec: 101278.47, flops:88.69, batch-reuse:1
@ 7627 train 4.3241 , allloss: 4.3405, dt: 1281.52ms, fracRes: 0.6017, norm(attn): 0.1465, norm(output): 0.2412, norm(x): 0.6767, norm(y): 1.0054, norm:1.1457, tok/sec: 102278.69, flops:89.56, batch-reuse:1
@ 7628 train 4.3383 , allloss: 4.3543, dt: 1322.40ms, fracRes: 0.6031, norm(attn): 0.1436, norm(output): 0.2402, norm(x): 0.6778, norm(y): 1.0055, norm:1.2863, tok/sec: 99116.77, flops:86.80, batch-reuse:1
@ 7629 train 4.2763 , allloss: 4.2919, dt: 1567.98ms, fracRes: 0.6032, norm(attn): 0.1455, norm(output): 0.2383, norm(x): 0.6775, norm(y): 1.0054, norm:1.1736, tok/sec: 83592.85, flops:73.20, batch-reuse:1
@ 7630 train 4.1925 , allloss: 4.2089, dt: 1260.48ms, fracRes: 0.6035, norm(attn): 0.1455, norm(output): 0.2402, norm(x): 0.6769, norm(y): 1.0054, norm:1.2948, tok/sec: 103986.01, flops:91.06, batch-reuse:1
@ 7631 train 4.2261 , allloss: 4.2433, dt: 1266.16ms, fracRes: 0.6040, norm(attn): 0.1436, norm(output): 0.2373, norm(x): 0.6758, norm(y): 1.0056, norm:1.1049, tok/sec: 103519.65, flops:90.65, batch-reuse:1
@ 7632 train 4.2834 , allloss: 4.2993, dt: 1285.32ms, fracRes: 0.6033, norm(attn): 0.1445, norm(output): 0.2393, norm(x): 0.6759, norm(y): 1.0054, norm:1.1164, tok/sec: 101976.18, flops:89.30, batch-reuse:1
@ 7633 train 4.2218 , allloss: 4.2377, dt: 1268.05ms, fracRes: 0.6035, norm(attn): 0.1445, norm(output): 0.2402, norm(x): 0.6785, norm(y): 1.0055, norm:1.2248, tok/sec: 103364.90, flops:90.52, batch-reuse:1
@ 7634 train 4.2236 , allloss: 4.2396, dt: 1288.97ms, fracRes: 0.6026, norm(attn): 0.1455, norm(output): 0.2412, norm(x): 0.6798, norm(y): 1.0054, norm:1.1729, tok/sec: 101687.75, flops:89.05, batch-reuse:1
@ 7635 train 4.2313 , allloss: 4.2471, dt: 1269.33ms, fracRes: 0.6027, norm(attn): 0.1455, norm(output): 0.2412, norm(x): 0.6768, norm(y): 1.0055, norm:1.3550, tok/sec: 103260.58, flops:90.42, batch-reuse:1
@ 7636 train 4.2181 , allloss: 4.2337, dt: 1280.28ms, fracRes: 0.6029, norm(attn): 0.1445, norm(output): 0.2402, norm(x): 0.6772, norm(y): 1.0054, norm:1.1179, tok/sec: 102377.61, flops:89.65, batch-reuse:1
@ 7637 train 4.1446 , allloss: 4.1601, dt: 1297.95ms, fracRes: 0.6028, norm(attn): 0.1455, norm(output): 0.2393, norm(x): 0.6745, norm(y): 1.0055, norm:1.0167, tok/sec: 100983.63, flops:88.43, batch-reuse:1
@ 7638 train 4.1573 , allloss: 4.1735, dt: 1264.65ms, fracRes: 0.6026, norm(attn): 0.1465, norm(output): 0.2412, norm(x): 0.6784, norm(y): 1.0055, norm:1.0549, tok/sec: 103643.31, flops:90.76, batch-reuse:1
@ 7639 train 4.1596 , allloss: 4.1756, dt: 1287.58ms, fracRes: 0.6029, norm(attn): 0.1445, norm(output): 0.2383, norm(x): 0.6768, norm(y): 1.0055, norm:1.1814, tok/sec: 101797.43, flops:89.14, batch-reuse:1
@ 7640 train 4.2411 , allloss: 4.2568, dt: 1269.49ms, fracRes: 0.6034, norm(attn): 0.1436, norm(output): 0.2383, norm(x): 0.6764, norm(y): 1.0054, norm:1.0555, tok/sec: 103247.90, flops:90.41, batch-reuse:1
@ 7641 train 4.1629 , allloss: 4.1788, dt: 1291.56ms, fracRes: 0.6037, norm(attn): 0.1436, norm(output): 0.2373, norm(x): 0.6736, norm(y): 1.0056, norm:1.0036, tok/sec: 101483.18, flops:88.87, batch-reuse:1
@ 7642 train 4.2498 , allloss: 4.2653, dt: 1250.52ms, fracRes: 0.6031, norm(attn): 0.1436, norm(output): 0.2383, norm(x): 0.6740, norm(y): 1.0055, norm:1.1098, tok/sec: 104813.78, flops:91.78, batch-reuse:1
@ 7643 train 4.3215 , allloss: 4.3368, dt: 1275.21ms, fracRes: 0.6027, norm(attn): 0.1445, norm(output): 0.2393, norm(x): 0.6734, norm(y): 1.0055, norm:1.0738, tok/sec: 102784.45, flops:90.01, batch-reuse:1
@ 7644 train 4.2821 , allloss: 4.2984, dt: 1269.24ms, fracRes: 0.6033, norm(attn): 0.1436, norm(output): 0.2393, norm(x): 0.6795, norm(y): 1.0053, norm:1.2124, tok/sec: 103267.93, flops:90.43, batch-reuse:1
@ 7645 train 4.1422 , allloss: 4.1587, dt: 1254.13ms, fracRes: 0.6032, norm(attn): 0.1455, norm(output): 0.2393, norm(x): 0.6769, norm(y): 1.0055, norm:1.2066, tok/sec: 104512.54, flops:91.52, batch-reuse:1
@ 7646 train 4.3085 , allloss: 4.3248, dt: 1258.90ms, fracRes: 0.6030, norm(attn): 0.1455, norm(output): 0.2402, norm(x): 0.6778, norm(y): 1.0055, norm:1.8202, tok/sec: 104116.14, flops:91.17, batch-reuse:1
@ 7647 train 4.2893 , allloss: 4.3051, dt: 1267.83ms, fracRes: 0.6043, norm(attn): 0.1426, norm(output): 0.2383, norm(x): 0.6768, norm(y): 1.0055, norm:1.1261, tok/sec: 103383.03, flops:90.53, batch-reuse:1
@ 7648 train 4.1818 , allloss: 4.1980, dt: 1269.22ms, fracRes: 0.6040, norm(attn): 0.1426, norm(output): 0.2373, norm(x): 0.6802, norm(y): 1.0053, norm:1.4483, tok/sec: 103270.08, flops:90.43, batch-reuse:1
@ 7649 train 4.2147 , allloss: 4.2303, dt: 1267.52ms, fracRes: 0.6029, norm(attn): 0.1436, norm(output): 0.2402, norm(x): 0.6792, norm(y): 1.0053, norm:1.1449, tok/sec: 103408.00, flops:90.55, batch-reuse:1
@ 7650 train 4.2615 , allloss: 4.2770, dt: 1276.05ms, fracRes: 0.6031, norm(attn): 0.1445, norm(output): 0.2393, norm(x): 0.6766, norm(y): 1.0054, norm:1.2365, tok/sec: 102717.22, flops:89.95, batch-reuse:1
@ 7651 train 4.3722 , allloss: 4.3884, dt: 1268.35ms, fracRes: 0.6038, norm(attn): 0.1436, norm(output): 0.2393, norm(x): 0.6776, norm(y): 1.0054, norm:1.2529, tok/sec: 103340.76, flops:90.49, batch-reuse:1
@ 7652 train 4.2521 , allloss: 4.2681, dt: 1283.03ms, fracRes: 0.6030, norm(attn): 0.1455, norm(output): 0.2393, norm(x): 0.6757, norm(y): 1.0054, norm:1.1813, tok/sec: 102157.90, flops:89.46, batch-reuse:1
@ 7653 train 4.1598 , allloss: 4.1781, dt: 1287.14ms, fracRes: 0.6032, norm(attn): 0.1455, norm(output): 0.2402, norm(x): 0.6761, norm(y): 1.0053, norm:1.5103, tok/sec: 101832.32, flops:89.17, batch-reuse:1
@ 7654 train 4.2885 , allloss: 4.3046, dt: 1271.67ms, fracRes: 0.6022, norm(attn): 0.1445, norm(output): 0.2393, norm(x): 0.6748, norm(y): 1.0052, norm:1.1912, tok/sec: 103070.76, flops:90.26, batch-reuse:1
@ 7655 train 4.3176 , allloss: 4.3350, dt: 1291.08ms, fracRes: 0.6028, norm(attn): 0.1445, norm(output): 0.2402, norm(x): 0.6769, norm(y): 1.0051, norm:1.1188, tok/sec: 101521.38, flops:88.90, batch-reuse:1
@ 7656 train 4.1908 , allloss: 4.2070, dt: 1285.81ms, fracRes: 0.6025, norm(attn): 0.1445, norm(output): 0.2402, norm(x): 0.6763, norm(y): 1.0053, norm:1.0997, tok/sec: 101937.62, flops:89.27, batch-reuse:1
@ 7657 train 4.2165 , allloss: 4.2348, dt: 1256.82ms, fracRes: 0.6024, norm(attn): 0.1455, norm(output): 0.2422, norm(x): 0.6743, norm(y): 1.0053, norm:1.2480, tok/sec: 104288.82, flops:91.32, batch-reuse:1
@ 7658 train 4.2358 , allloss: 4.2520, dt: 1270.46ms, fracRes: 0.6028, norm(attn): 0.1426, norm(output): 0.2402, norm(x): 0.6734, norm(y): 1.0055, norm:1.0946, tok/sec: 103168.55, flops:90.34, batch-reuse:1
@ 7659 train 4.2287 , allloss: 4.2442, dt: 1285.08ms, fracRes: 0.6036, norm(attn): 0.1426, norm(output): 0.2373, norm(x): 0.6763, norm(y): 1.0055, norm:1.0698, tok/sec: 101994.96, flops:89.32, batch-reuse:1
@ 7660 train 4.1593 , allloss: 4.1749, dt: 1270.92ms, fracRes: 0.6031, norm(attn): 0.1436, norm(output): 0.2402, norm(x): 0.6784, norm(y): 1.0055, norm:1.3820, tok/sec: 103131.84, flops:90.31, batch-reuse:1
@ 7661 train 4.4716 , allloss: 4.4876, dt: 1269.80ms, fracRes: 0.6032, norm(attn): 0.1426, norm(output): 0.2383, norm(x): 0.6727, norm(y): 1.0053, norm:1.4950, tok/sec: 103222.54, flops:90.39, batch-reuse:1
@ 7662 train 4.0810 , allloss: 4.0966, dt: 1277.08ms, fracRes: 0.6035, norm(attn): 0.1436, norm(output): 0.2393, norm(x): 0.6764, norm(y): 1.0056, norm:1.4191, tok/sec: 102634.09, flops:89.88, batch-reuse:1
@ 7663 train 4.1206 , allloss: 4.1375, dt: 1260.73ms, fracRes: 0.6038, norm(attn): 0.1445, norm(output): 0.2393, norm(x): 0.6787, norm(y): 1.0055, norm:1.2824, tok/sec: 103964.98, flops:91.04, batch-reuse:1
@ 7664 train 4.2046 , allloss: 4.2219, dt: 1275.85ms, fracRes: 0.6024, norm(attn): 0.1484, norm(output): 0.2422, norm(x): 0.6810, norm(y): 1.0052, norm:1.3664, tok/sec: 102732.79, flops:89.96, batch-reuse:1
@ 7665 train 4.2092 , allloss: 4.2247, dt: 1246.63ms, fracRes: 0.6029, norm(attn): 0.1445, norm(output): 0.2393, norm(x): 0.6729, norm(y): 1.0054, norm:1.3445, tok/sec: 105141.04, flops:92.07, batch-reuse:1
@ 7666 train 4.2393 , allloss: 4.2562, dt: 1268.44ms, fracRes: 0.6033, norm(attn): 0.1455, norm(output): 0.2393, norm(x): 0.6770, norm(y): 1.0055, norm:1.4870, tok/sec: 103333.07, flops:90.49, batch-reuse:1
@ 7667 train 4.2370 , allloss: 4.2530, dt: 1270.11ms, fracRes: 0.6034, norm(attn): 0.1426, norm(output): 0.2383, norm(x): 0.6734, norm(y): 1.0055, norm:1.1817, tok/sec: 103196.96, flops:90.37, batch-reuse:1
@ 7668 train 4.2967 , allloss: 4.3132, dt: 1298.62ms, fracRes: 0.6024, norm(attn): 0.1416, norm(output): 0.2393, norm(x): 0.6760, norm(y): 1.0054, norm:1.4993, tok/sec: 100931.87, flops:88.38, batch-reuse:1
@ 7669 train 4.2652 , allloss: 4.2821, dt: 1273.23ms, fracRes: 0.6035, norm(attn): 0.1436, norm(output): 0.2373, norm(x): 0.6790, norm(y): 1.0056, norm:1.5123, tok/sec: 102944.72, flops:90.15, batch-reuse:1
@ 7670 train 4.2147 , allloss: 4.2313, dt: 1289.51ms, fracRes: 0.6029, norm(attn): 0.1445, norm(output): 0.2412, norm(x): 0.6799, norm(y): 1.0055, norm:1.3056, tok/sec: 101644.85, flops:89.01, batch-reuse:1
@ 7671 train 4.1840 , allloss: 4.2000, dt: 1247.90ms, fracRes: 0.6037, norm(attn): 0.1436, norm(output): 0.2393, norm(x): 0.6819, norm(y): 1.0054, norm:1.3464, tok/sec: 105034.12, flops:91.98, batch-reuse:1
@ 7672 train 4.2168 , allloss: 4.2326, dt: 1304.38ms, fracRes: 0.6036, norm(attn): 0.1455, norm(output): 0.2422, norm(x): 0.6824, norm(y): 1.0055, norm:1.1726, tok/sec: 100486.06, flops:87.99, batch-reuse:1
@ 7673 train 4.1601 , allloss: 4.1762, dt: 1320.06ms, fracRes: 0.6039, norm(attn): 0.1465, norm(output): 0.2393, norm(x): 0.6834, norm(y): 1.0055, norm:1.2099, tok/sec: 99292.46, flops:86.95, batch-reuse:1
@ 7674 train 4.1543 , allloss: 4.1705, dt: 1306.92ms, fracRes: 0.6021, norm(attn): 0.1465, norm(output): 0.2441, norm(x): 0.6813, norm(y): 1.0053, norm:1.2255, tok/sec: 100290.52, flops:87.82, batch-reuse:1
@ 7675 train 4.2211 , allloss: 4.2370, dt: 1243.66ms, fracRes: 0.6030, norm(attn): 0.1436, norm(output): 0.2393, norm(x): 0.6794, norm(y): 1.0054, norm:1.0873, tok/sec: 105392.23, flops:92.29, batch-reuse:1
@ 7676 train 4.0888 , allloss: 4.1047, dt: 1259.57ms, fracRes: 0.6026, norm(attn): 0.1455, norm(output): 0.2402, norm(x): 0.6795, norm(y): 1.0055, norm:1.2005, tok/sec: 104061.02, flops:91.12, batch-reuse:1
@ 7677 train 4.1926 , allloss: 4.2083, dt: 1280.31ms, fracRes: 0.6021, norm(attn): 0.1445, norm(output): 0.2422, norm(x): 0.6777, norm(y): 1.0055, norm:1.0789, tok/sec: 102375.37, flops:89.65, batch-reuse:1
@ 7678 train 4.1480 , allloss: 4.1640, dt: 1307.59ms, fracRes: 0.6034, norm(attn): 0.1436, norm(output): 0.2393, norm(x): 0.6798, norm(y): 1.0056, norm:1.1736, tok/sec: 100239.30, flops:87.78, batch-reuse:1
@ 7679 train 4.1733 , allloss: 4.1894, dt: 1295.10ms, fracRes: 0.6034, norm(attn): 0.1436, norm(output): 0.2383, norm(x): 0.6790, norm(y): 1.0055, norm:1.1624, tok/sec: 101206.27, flops:88.62, batch-reuse:1
@ 7680 train 4.1712 , allloss: 4.1871, dt: 1293.37ms, fracRes: 0.6039, norm(attn): 0.1436, norm(output): 0.2393, norm(x): 0.6817, norm(y): 1.0054, norm:1.1172, tok/sec: 101341.66, flops:88.74, batch-reuse:1
@ 7681 train 4.2305 , allloss: 4.2460, dt: 1266.88ms, fracRes: 0.6035, norm(attn): 0.1436, norm(output): 0.2402, norm(x): 0.6810, norm(y): 1.0053, norm:1.0308, tok/sec: 103460.68, flops:90.60, batch-reuse:1
@ 7682 train 4.3175 , allloss: 4.3328, dt: 1263.30ms, fracRes: 0.6030, norm(attn): 0.1445, norm(output): 0.2441, norm(x): 0.6808, norm(y): 1.0051, norm:0.9783, tok/sec: 103753.88, flops:90.86, batch-reuse:1
@ 7683 train 4.1674 , allloss: 4.1831, dt: 1275.73ms, fracRes: 0.6033, norm(attn): 0.1455, norm(output): 0.2402, norm(x): 0.6799, norm(y): 1.0053, norm:1.1100, tok/sec: 102742.94, flops:89.97, batch-reuse:1
@ 7684 train 4.2140 , allloss: 4.2306, dt: 1271.71ms, fracRes: 0.6030, norm(attn): 0.1445, norm(output): 0.2422, norm(x): 0.6786, norm(y): 1.0054, norm:1.1361, tok/sec: 103067.67, flops:90.25, batch-reuse:1
@ 7685 train 4.2129 , allloss: 4.2289, dt: 1293.20ms, fracRes: 0.6023, norm(attn): 0.1465, norm(output): 0.2393, norm(x): 0.6811, norm(y): 1.0053, norm:1.1652, tok/sec: 101354.78, flops:88.75, batch-reuse:1
@ 7686 train 4.1736 , allloss: 4.1893, dt: 1279.46ms, fracRes: 0.6019, norm(attn): 0.1455, norm(output): 0.2441, norm(x): 0.6794, norm(y): 1.0053, norm:1.1202, tok/sec: 102443.28, flops:89.71, batch-reuse:1
@ 7687 train 4.2492 , allloss: 4.2651, dt: 1254.91ms, fracRes: 0.6018, norm(attn): 0.1455, norm(output): 0.2402, norm(x): 0.6779, norm(y): 1.0053, norm:0.9991, tok/sec: 104447.55, flops:91.46, batch-reuse:1
@ 7688 train 4.1923 , allloss: 4.2098, dt: 1258.32ms, fracRes: 0.6029, norm(attn): 0.1455, norm(output): 0.2393, norm(x): 0.6777, norm(y): 1.0054, norm:1.0276, tok/sec: 104164.14, flops:91.22, batch-reuse:1
@ 7689 train 4.1734 , allloss: 4.1890, dt: 1264.50ms, fracRes: 0.6037, norm(attn): 0.1436, norm(output): 0.2412, norm(x): 0.6802, norm(y): 1.0054, norm:1.0689, tok/sec: 103654.91, flops:90.77, batch-reuse:1
@ 7690 train 4.1853 , allloss: 4.2010, dt: 1281.33ms, fracRes: 0.6024, norm(attn): 0.1455, norm(output): 0.2402, norm(x): 0.6794, norm(y): 1.0054, norm:1.1469, tok/sec: 102293.57, flops:89.58, batch-reuse:1
@ 7691 train 4.1684 , allloss: 4.1848, dt: 1264.88ms, fracRes: 0.6020, norm(attn): 0.1455, norm(output): 0.2441, norm(x): 0.6811, norm(y): 1.0053, norm:1.3082, tok/sec: 103624.45, flops:90.74, batch-reuse:1
@ 7692 train 4.2986 , allloss: 4.3138, dt: 1267.38ms, fracRes: 0.6035, norm(attn): 0.1426, norm(output): 0.2383, norm(x): 0.6755, norm(y): 1.0055, norm:1.3547, tok/sec: 103419.59, flops:90.56, batch-reuse:1
@ 7693 train 4.2800 , allloss: 4.2952, dt: 1271.39ms, fracRes: 0.6030, norm(attn): 0.1445, norm(output): 0.2393, norm(x): 0.6791, norm(y): 1.0055, norm:1.3456, tok/sec: 103093.58, flops:90.28, batch-reuse:1
@ 7694 train 4.1570 , allloss: 4.1732, dt: 1262.49ms, fracRes: 0.6030, norm(attn): 0.1465, norm(output): 0.2393, norm(x): 0.6799, norm(y): 1.0053, norm:1.1610, tok/sec: 103820.46, flops:90.91, batch-reuse:1
@ 7695 train 4.2013 , allloss: 4.2170, dt: 1258.90ms, fracRes: 0.6033, norm(attn): 0.1455, norm(output): 0.2412, norm(x): 0.6814, norm(y): 1.0055, norm:1.3577, tok/sec: 104116.26, flops:91.17, batch-reuse:1
@ 7696 train 4.2281 , allloss: 4.2446, dt: 1256.28ms, fracRes: 0.6029, norm(attn): 0.1465, norm(output): 0.2412, norm(x): 0.6795, norm(y): 1.0054, norm:1.1237, tok/sec: 104333.41, flops:91.36, batch-reuse:1
@ 7697 train 4.2148 , allloss: 4.2309, dt: 1277.37ms, fracRes: 0.6022, norm(attn): 0.1465, norm(output): 0.2441, norm(x): 0.6822, norm(y): 1.0051, norm:1.1399, tok/sec: 102610.74, flops:89.85, batch-reuse:1
@ 7698 train 4.1209 , allloss: 4.1365, dt: 1293.35ms, fracRes: 0.6026, norm(attn): 0.1455, norm(output): 0.2402, norm(x): 0.6803, norm(y): 1.0055, norm:1.1498, tok/sec: 101342.73, flops:88.74, batch-reuse:1
@ 7699 train 4.2799 , allloss: 4.2955, dt: 1271.41ms, fracRes: 0.6029, norm(attn): 0.1436, norm(output): 0.2383, norm(x): 0.6812, norm(y): 1.0053, norm:1.0757, tok/sec: 103091.84, flops:90.28, batch-reuse:1
@ 7700 train 4.2425 , allloss: 4.2584, dt: 1281.68ms, fracRes: 0.6028, norm(attn): 0.1445, norm(output): 0.2412, norm(x): 0.6823, norm(y): 1.0053, norm:1.2672, tok/sec: 102265.90, flops:89.55, batch-reuse:1
@ 7701 train 4.2002 , allloss: 4.2163, dt: 1288.32ms, fracRes: 0.6034, norm(attn): 0.1475, norm(output): 0.2402, norm(x): 0.6816, norm(y): 1.0054, norm:1.2771, tok/sec: 101738.32, flops:89.09, batch-reuse:1
@ 7702 train 4.3088 , allloss: 4.3244, dt: 1273.32ms, fracRes: 0.6026, norm(attn): 0.1465, norm(output): 0.2422, norm(x): 0.6812, norm(y): 1.0051, norm:1.2217, tok/sec: 102937.38, flops:90.14, batch-reuse:1
@ 7703 train 4.1546 , allloss: 4.1704, dt: 1271.25ms, fracRes: 0.6038, norm(attn): 0.1445, norm(output): 0.2402, norm(x): 0.6818, norm(y): 1.0054, norm:1.2609, tok/sec: 103104.78, flops:90.29, batch-reuse:1
@ 7704 train 4.1737 , allloss: 4.1903, dt: 1257.39ms, fracRes: 0.6036, norm(attn): 0.1455, norm(output): 0.2412, norm(x): 0.6801, norm(y): 1.0053, norm:1.2467, tok/sec: 104241.64, flops:91.28, batch-reuse:1
@ 7705 train 4.1309 , allloss: 4.1510, dt: 1257.71ms, fracRes: 0.6034, norm(attn): 0.1455, norm(output): 0.2412, norm(x): 0.6821, norm(y): 1.0054, norm:1.4361, tok/sec: 104215.00, flops:91.26, batch-reuse:1
@ 7706 train 4.1025 , allloss: 4.1186, dt: 1275.66ms, fracRes: 0.6026, norm(attn): 0.1465, norm(output): 0.2422, norm(x): 0.6785, norm(y): 1.0054, norm:1.1347, tok/sec: 102748.07, flops:89.98, batch-reuse:1
@ 7707 train 4.1319 , allloss: 4.1488, dt: 1294.43ms, fracRes: 0.6026, norm(attn): 0.1475, norm(output): 0.2441, norm(x): 0.6816, norm(y): 1.0054, norm:1.2413, tok/sec: 101258.52, flops:88.67, batch-reuse:1
@ 7708 train 4.2803 , allloss: 4.2967, dt: 1312.43ms, fracRes: 0.6029, norm(attn): 0.1475, norm(output): 0.2441, norm(x): 0.6778, norm(y): 1.0052, norm:1.2277, tok/sec: 99870.02, flops:87.45, batch-reuse:1
@ 7709 train 4.2135 , allloss: 4.2291, dt: 1289.97ms, fracRes: 0.6032, norm(attn): 0.1455, norm(output): 0.2402, norm(x): 0.6767, norm(y): 1.0053, norm:1.1639, tok/sec: 101608.81, flops:88.98, batch-reuse:1
@ 7710 train 4.2843 , allloss: 4.3013, dt: 1292.69ms, fracRes: 0.6037, norm(attn): 0.1455, norm(output): 0.2422, norm(x): 0.6781, norm(y): 1.0053, norm:1.1994, tok/sec: 101394.65, flops:88.79, batch-reuse:1
@ 7711 train 4.1696 , allloss: 4.1851, dt: 1278.76ms, fracRes: 0.6028, norm(attn): 0.1455, norm(output): 0.2412, norm(x): 0.6789, norm(y): 1.0053, norm:1.1927, tok/sec: 102499.57, flops:89.76, batch-reuse:1
@ 7712 train 4.0876 , allloss: 4.1030, dt: 1249.10ms, fracRes: 0.6035, norm(attn): 0.1475, norm(output): 0.2383, norm(x): 0.6786, norm(y): 1.0055, norm:1.1963, tok/sec: 104933.49, flops:91.89, batch-reuse:1
@ 7713 train 4.2313 , allloss: 4.2513, dt: 1266.83ms, fracRes: 0.6030, norm(attn): 0.1465, norm(output): 0.2412, norm(x): 0.6788, norm(y): 1.0053, norm:1.0852, tok/sec: 103464.38, flops:90.60, batch-reuse:1
@ 7714 train 4.1307 , allloss: 4.1472, dt: 1259.93ms, fracRes: 0.6039, norm(attn): 0.1445, norm(output): 0.2393, norm(x): 0.6801, norm(y): 1.0054, norm:1.2251, tok/sec: 104031.42, flops:91.10, batch-reuse:1
@ 7715 train 4.2399 , allloss: 4.2558, dt: 1269.03ms, fracRes: 0.6026, norm(attn): 0.1445, norm(output): 0.2422, norm(x): 0.6777, norm(y): 1.0052, norm:1.2531, tok/sec: 103284.81, flops:90.45, batch-reuse:1
@ 7716 train 4.2330 , allloss: 4.2485, dt: 1269.33ms, fracRes: 0.6028, norm(attn): 0.1445, norm(output): 0.2402, norm(x): 0.6759, norm(y): 1.0052, norm:1.1257, tok/sec: 103260.89, flops:90.42, batch-reuse:1
@ 7717 train 4.0862 , allloss: 4.1014, dt: 1274.04ms, fracRes: 0.6025, norm(attn): 0.1455, norm(output): 0.2393, norm(x): 0.6737, norm(y): 1.0055, norm:1.0720, tok/sec: 102878.63, flops:90.09, batch-reuse:1
@ 7718 train 4.2174 , allloss: 4.2335, dt: 1258.80ms, fracRes: 0.6032, norm(attn): 0.1445, norm(output): 0.2383, norm(x): 0.6774, norm(y): 1.0054, norm:1.0739, tok/sec: 104124.68, flops:91.18, batch-reuse:1
@ 7719 train 4.1396 , allloss: 4.1553, dt: 1273.94ms, fracRes: 0.6032, norm(attn): 0.1436, norm(output): 0.2383, norm(x): 0.6753, norm(y): 1.0052, norm:1.1156, tok/sec: 102887.43, flops:90.10, batch-reuse:1
@ 7720 train 4.1836 , allloss: 4.2008, dt: 1266.96ms, fracRes: 0.6031, norm(attn): 0.1465, norm(output): 0.2422, norm(x): 0.6782, norm(y): 1.0052, norm:1.1750, tok/sec: 103453.56, flops:90.59, batch-reuse:1
@ 7721 train 4.0906 , allloss: 4.1073, dt: 1255.68ms, fracRes: 0.6026, norm(attn): 0.1465, norm(output): 0.2412, norm(x): 0.6774, norm(y): 1.0052, norm:1.1099, tok/sec: 104383.43, flops:91.41, batch-reuse:1
@ 7722 train 4.0885 , allloss: 4.1046, dt: 1269.36ms, fracRes: 0.6029, norm(attn): 0.1455, norm(output): 0.2402, norm(x): 0.6783, norm(y): 1.0054, norm:1.0526, tok/sec: 103258.66, flops:90.42, batch-reuse:1
@ 7723 train 4.1449 , allloss: 4.1602, dt: 1282.54ms, fracRes: 0.6038, norm(attn): 0.1426, norm(output): 0.2383, norm(x): 0.6763, norm(y): 1.0054, norm:0.9302, tok/sec: 102197.40, flops:89.49, batch-reuse:1
@ 7724 train 4.2372 , allloss: 4.2525, dt: 1317.48ms, fracRes: 0.6040, norm(attn): 0.1436, norm(output): 0.2393, norm(x): 0.6744, norm(y): 1.0053, norm:1.0484, tok/sec: 99487.16, flops:87.12, batch-reuse:1
@ 7725 train 4.2172 , allloss: 4.2334, dt: 1312.07ms, fracRes: 0.6041, norm(attn): 0.1445, norm(output): 0.2412, norm(x): 0.6771, norm(y): 1.0055, norm:1.1567, tok/sec: 99897.46, flops:87.48, batch-reuse:1
@ 7726 train 4.0845 , allloss: 4.0999, dt: 1300.99ms, fracRes: 0.6024, norm(attn): 0.1475, norm(output): 0.2412, norm(x): 0.6755, norm(y): 1.0053, norm:1.0476, tok/sec: 100747.87, flops:88.22, batch-reuse:1
@ 7727 train 4.0690 , allloss: 4.0853, dt: 1267.07ms, fracRes: 0.6025, norm(attn): 0.1465, norm(output): 0.2402, norm(x): 0.6782, norm(y): 1.0054, norm:1.0198, tok/sec: 103444.83, flops:90.59, batch-reuse:1
@ 7728 train 4.1754 , allloss: 4.1913, dt: 1259.47ms, fracRes: 0.6031, norm(attn): 0.1455, norm(output): 0.2402, norm(x): 0.6767, norm(y): 1.0053, norm:1.0574, tok/sec: 104068.80, flops:91.13, batch-reuse:1
@ 7729 train 4.2023 , allloss: 4.2177, dt: 1271.08ms, fracRes: 0.6042, norm(attn): 0.1426, norm(output): 0.2383, norm(x): 0.6756, norm(y): 1.0053, norm:1.2660, tok/sec: 103118.41, flops:90.30, batch-reuse:1
@ 7730 train 4.1345 , allloss: 4.1508, dt: 1288.72ms, fracRes: 0.6044, norm(attn): 0.1436, norm(output): 0.2402, norm(x): 0.6796, norm(y): 1.0053, norm:1.2059, tok/sec: 101707.02, flops:89.06, batch-reuse:1
@ 7731 train 4.1370 , allloss: 4.1529, dt: 1262.50ms, fracRes: 0.6022, norm(attn): 0.1455, norm(output): 0.2432, norm(x): 0.6769, norm(y): 1.0051, norm:1.0906, tok/sec: 103819.26, flops:90.91, batch-reuse:1
@ 7732 train 4.1382 , allloss: 4.1535, dt: 1260.58ms, fracRes: 0.6023, norm(attn): 0.1465, norm(output): 0.2441, norm(x): 0.6784, norm(y): 1.0052, norm:1.0433, tok/sec: 103977.67, flops:91.05, batch-reuse:1
@ 7733 train 4.1134 , allloss: 4.1286, dt: 1280.00ms, fracRes: 0.6031, norm(attn): 0.1465, norm(output): 0.2393, norm(x): 0.6781, norm(y): 1.0053, norm:0.9713, tok/sec: 102399.81, flops:89.67, batch-reuse:1
@ 7734 train 4.2814 , allloss: 4.2988, dt: 1273.64ms, fracRes: 0.6045, norm(attn): 0.1484, norm(output): 0.2432, norm(x): 0.6839, norm(y): 1.0051, norm:1.0879, tok/sec: 102911.14, flops:90.12, batch-reuse:1
@ 7735 train 4.0571 , allloss: 4.0725, dt: 1268.26ms, fracRes: 0.6041, norm(attn): 0.1475, norm(output): 0.2383, norm(x): 0.6793, norm(y): 1.0054, norm:1.2621, tok/sec: 103347.62, flops:90.50, batch-reuse:1
@ 7736 train 4.2147 , allloss: 4.2299, dt: 1258.84ms, fracRes: 0.6041, norm(attn): 0.1465, norm(output): 0.2402, norm(x): 0.6784, norm(y): 1.0053, norm:1.2205, tok/sec: 104121.33, flops:91.18, batch-reuse:1
@ 7737 train 4.2010 , allloss: 4.2169, dt: 1271.61ms, fracRes: 0.6047, norm(attn): 0.1445, norm(output): 0.2402, norm(x): 0.6801, norm(y): 1.0054, norm:1.3153, tok/sec: 103075.84, flops:90.26, batch-reuse:1
@ 7738 train 4.1520 , allloss: 4.1688, dt: 1272.35ms, fracRes: 0.6039, norm(attn): 0.1455, norm(output): 0.2383, norm(x): 0.6771, norm(y): 1.0055, norm:1.0383, tok/sec: 103015.73, flops:90.21, batch-reuse:1
@ 7739 train 4.0972 , allloss: 4.1131, dt: 1301.52ms, fracRes: 0.6036, norm(attn): 0.1465, norm(output): 0.2393, norm(x): 0.6754, norm(y): 1.0054, norm:1.1700, tok/sec: 100706.77, flops:88.19, batch-reuse:1
@ 7740 train 4.2011 , allloss: 4.2168, dt: 1286.21ms, fracRes: 0.6032, norm(attn): 0.1465, norm(output): 0.2393, norm(x): 0.6749, norm(y): 1.0052, norm:1.0804, tok/sec: 101905.78, flops:89.24, batch-reuse:1
@ 7741 train 4.0977 , allloss: 4.1129, dt: 1266.29ms, fracRes: 0.6038, norm(attn): 0.1455, norm(output): 0.2373, norm(x): 0.6741, norm(y): 1.0055, norm:1.1228, tok/sec: 103508.76, flops:90.64, batch-reuse:1
@ 7742 train 4.1344 , allloss: 4.1500, dt: 1274.89ms, fracRes: 0.6042, norm(attn): 0.1445, norm(output): 0.2383, norm(x): 0.6770, norm(y): 1.0053, norm:1.1252, tok/sec: 102810.56, flops:90.03, batch-reuse:1
@ 7743 train 4.1378 , allloss: 4.1535, dt: 1272.06ms, fracRes: 0.6038, norm(attn): 0.1455, norm(output): 0.2393, norm(x): 0.6772, norm(y): 1.0053, norm:1.2038, tok/sec: 103039.33, flops:90.23, batch-reuse:1
@ 7744 train 4.1982 , allloss: 4.2141, dt: 1245.22ms, fracRes: 0.6035, norm(attn): 0.1455, norm(output): 0.2412, norm(x): 0.6772, norm(y): 1.0051, norm:1.2576, tok/sec: 105260.36, flops:92.17, batch-reuse:1
@ 7745 train 4.0958 , allloss: 4.1117, dt: 1290.37ms, fracRes: 0.6032, norm(attn): 0.1465, norm(output): 0.2422, norm(x): 0.6783, norm(y): 1.0053, norm:1.1324, tok/sec: 101576.81, flops:88.95, batch-reuse:1
@ 7746 train 4.2425 , allloss: 4.2584, dt: 1255.51ms, fracRes: 0.6024, norm(attn): 0.1465, norm(output): 0.2422, norm(x): 0.6733, norm(y): 1.0052, norm:1.2890, tok/sec: 104397.39, flops:91.42, batch-reuse:1
@ 7747 train 4.1096 , allloss: 4.1249, dt: 1254.01ms, fracRes: 0.6026, norm(attn): 0.1465, norm(output): 0.2393, norm(x): 0.6730, norm(y): 1.0053, norm:1.0383, tok/sec: 104522.20, flops:91.53, batch-reuse:1
@ 7748 train 4.2108 , allloss: 4.2268, dt: 1266.26ms, fracRes: 0.6015, norm(attn): 0.1455, norm(output): 0.2422, norm(x): 0.6758, norm(y): 1.0050, norm:1.0984, tok/sec: 103510.78, flops:90.64, batch-reuse:1
@ 7749 train 4.0994 , allloss: 4.1153, dt: 1265.53ms, fracRes: 0.6020, norm(attn): 0.1455, norm(output): 0.2393, norm(x): 0.6753, norm(y): 1.0053, norm:1.1277, tok/sec: 103570.92, flops:90.70, batch-reuse:1
@ 7750 train 4.1721 , allloss: 4.1879, dt: 1253.79ms, fracRes: 0.6016, norm(attn): 0.1465, norm(output): 0.2402, norm(x): 0.6733, norm(y): 1.0054, norm:1.5673, tok/sec: 104540.88, flops:91.54, batch-reuse:1
@ 7751 train 4.2241 , allloss: 4.2399, dt: 1255.82ms, fracRes: 0.6024, norm(attn): 0.1445, norm(output): 0.2402, norm(x): 0.6753, norm(y): 1.0053, norm:1.2325, tok/sec: 104371.70, flops:91.40, batch-reuse:1
@ 7752 train 4.0700 , allloss: 4.0850, dt: 1266.41ms, fracRes: 0.6025, norm(attn): 0.1475, norm(output): 0.2412, norm(x): 0.6768, norm(y): 1.0054, norm:1.0390, tok/sec: 103498.49, flops:90.63, batch-reuse:1
@ 7753 train 4.1706 , allloss: 4.1860, dt: 1279.57ms, fracRes: 0.6030, norm(attn): 0.1465, norm(output): 0.2422, norm(x): 0.6750, norm(y): 1.0053, norm:1.3238, tok/sec: 102434.04, flops:89.70, batch-reuse:1
@ 7754 train 4.1636 , allloss: 4.1793, dt: 1300.39ms, fracRes: 0.6032, norm(attn): 0.1465, norm(output): 0.2402, norm(x): 0.6778, norm(y): 1.0053, norm:1.0651, tok/sec: 100794.64, flops:88.26, batch-reuse:1
@ 7755 train 4.1510 , allloss: 4.1664, dt: 1310.37ms, fracRes: 0.6030, norm(attn): 0.1465, norm(output): 0.2393, norm(x): 0.6758, norm(y): 1.0052, norm:1.0624, tok/sec: 100027.08, flops:87.59, batch-reuse:1
@ 7756 train 4.2135 , allloss: 4.2294, dt: 1301.54ms, fracRes: 0.6031, norm(attn): 0.1475, norm(output): 0.2432, norm(x): 0.6785, norm(y): 1.0051, norm:1.2629, tok/sec: 100704.96, flops:88.19, batch-reuse:1
@ 7757 train 4.1715 , allloss: 4.1878, dt: 1309.20ms, fracRes: 0.6033, norm(attn): 0.1475, norm(output): 0.2412, norm(x): 0.6796, norm(y): 1.0052, norm:1.1839, tok/sec: 100116.21, flops:87.67, batch-reuse:1
@ 7758 train 4.0963 , allloss: 4.1111, dt: 1273.49ms, fracRes: 0.6039, norm(attn): 0.1475, norm(output): 0.2402, norm(x): 0.6786, norm(y): 1.0052, norm:0.9574, tok/sec: 102923.70, flops:90.13, batch-reuse:1
@ 7759 train 4.1249 , allloss: 4.1400, dt: 1252.45ms, fracRes: 0.6032, norm(attn): 0.1465, norm(output): 0.2393, norm(x): 0.6774, norm(y): 1.0053, norm:0.9734, tok/sec: 104652.26, flops:91.64, batch-reuse:1
@ 7760 train 4.1494 , allloss: 4.1653, dt: 1265.29ms, fracRes: 0.6026, norm(attn): 0.1455, norm(output): 0.2402, norm(x): 0.6769, norm(y): 1.0052, norm:1.0916, tok/sec: 103590.69, flops:90.71, batch-reuse:1
@ 7761 train 4.1777 , allloss: 4.1938, dt: 1255.90ms, fracRes: 0.6008, norm(attn): 0.1465, norm(output): 0.2451, norm(x): 0.6781, norm(y): 1.0048, norm:1.1049, tok/sec: 104365.10, flops:91.39, batch-reuse:1
@ 7762 train 4.0968 , allloss: 4.1123, dt: 1263.53ms, fracRes: 0.6016, norm(attn): 0.1475, norm(output): 0.2441, norm(x): 0.6764, norm(y): 1.0052, norm:1.2336, tok/sec: 103735.03, flops:90.84, batch-reuse:1
@ 7763 train 4.1268 , allloss: 4.1426, dt: 1269.48ms, fracRes: 0.6030, norm(attn): 0.1455, norm(output): 0.2422, norm(x): 0.6779, norm(y): 1.0052, norm:1.0001, tok/sec: 103248.63, flops:90.41, batch-reuse:1
@ 7764 train 4.0330 , allloss: 4.0495, dt: 1296.33ms, fracRes: 0.6011, norm(attn): 0.1514, norm(output): 0.2461, norm(x): 0.6805, norm(y): 1.0048, norm:1.4256, tok/sec: 101109.72, flops:88.54, batch-reuse:1
@ 7765 train 4.1278 , allloss: 4.1436, dt: 1286.49ms, fracRes: 0.6029, norm(attn): 0.1465, norm(output): 0.2422, norm(x): 0.6777, norm(y): 1.0052, norm:1.4248, tok/sec: 101883.08, flops:89.22, batch-reuse:1
@ 7766 train 4.1377 , allloss: 4.1530, dt: 1288.56ms, fracRes: 0.6026, norm(attn): 0.1455, norm(output): 0.2402, norm(x): 0.6771, norm(y): 1.0051, norm:1.0901, tok/sec: 101719.57, flops:89.07, batch-reuse:1
@ 7767 train 4.0968 , allloss: 4.1116, dt: 1253.72ms, fracRes: 0.6032, norm(attn): 0.1445, norm(output): 0.2412, norm(x): 0.6771, norm(y): 1.0051, norm:1.0381, tok/sec: 104546.62, flops:91.55, batch-reuse:1
@ 7768 train 4.1811 , allloss: 4.1962, dt: 1261.05ms, fracRes: 0.6040, norm(attn): 0.1445, norm(output): 0.2373, norm(x): 0.6753, norm(y): 1.0052, norm:1.0717, tok/sec: 103939.08, flops:91.02, batch-reuse:1
@ 7769 train 4.0716 , allloss: 4.0891, dt: 1291.86ms, fracRes: 0.6036, norm(attn): 0.1465, norm(output): 0.2422, norm(x): 0.6774, norm(y): 1.0051, norm:1.6768, tok/sec: 101459.57, flops:88.85, batch-reuse:1
@ 7770 train 4.0116 , allloss: 4.0277, dt: 1270.42ms, fracRes: 0.6028, norm(attn): 0.1475, norm(output): 0.2402, norm(x): 0.6756, norm(y): 1.0053, norm:1.3487, tok/sec: 103172.10, flops:90.35, batch-reuse:1
@ 7771 train 4.0859 , allloss: 4.1021, dt: 1280.81ms, fracRes: 0.6038, norm(attn): 0.1465, norm(output): 0.2393, norm(x): 0.6747, norm(y): 1.0053, norm:1.0507, tok/sec: 102334.87, flops:89.61, batch-reuse:1
@ 7772 train 4.0010 , allloss: 4.0163, dt: 1276.17ms, fracRes: 0.6037, norm(attn): 0.1465, norm(output): 0.2383, norm(x): 0.6758, norm(y): 1.0053, norm:1.1766, tok/sec: 102707.03, flops:89.94, batch-reuse:1
@ 7773 train 4.0278 , allloss: 4.0434, dt: 1252.27ms, fracRes: 0.6038, norm(attn): 0.1445, norm(output): 0.2402, norm(x): 0.6780, norm(y): 1.0055, norm:1.4452, tok/sec: 104667.57, flops:91.66, batch-reuse:1
@ 7774 train 4.0965 , allloss: 4.1127, dt: 1274.87ms, fracRes: 0.6031, norm(attn): 0.1475, norm(output): 0.2422, norm(x): 0.6816, norm(y): 1.0052, norm:1.1077, tok/sec: 102812.35, flops:90.03, batch-reuse:1
@ 7775 train 4.0352 , allloss: 4.0507, dt: 1255.53ms, fracRes: 0.6036, norm(attn): 0.1465, norm(output): 0.2402, norm(x): 0.6802, norm(y): 1.0053, norm:1.0216, tok/sec: 104395.43, flops:91.42, batch-reuse:1
@ 7776 train 4.0259 , allloss: 4.0415, dt: 1263.29ms, fracRes: 0.6038, norm(attn): 0.1465, norm(output): 0.2402, norm(x): 0.6788, norm(y): 1.0052, norm:0.9962, tok/sec: 103754.47, flops:90.86, batch-reuse:1
@ 7777 train 4.0275 , allloss: 4.0433, dt: 1283.37ms, fracRes: 0.6029, norm(attn): 0.1484, norm(output): 0.2402, norm(x): 0.6754, norm(y): 1.0053, norm:1.1269, tok/sec: 102131.16, flops:89.43, batch-reuse:1
@ 7778 train 4.1126 , allloss: 4.1299, dt: 1278.02ms, fracRes: 0.6027, norm(attn): 0.1455, norm(output): 0.2402, norm(x): 0.6760, norm(y): 1.0053, norm:1.0512, tok/sec: 102558.98, flops:89.81, batch-reuse:1
@ 7779 train 3.9896 , allloss: 4.0059, dt: 1293.32ms, fracRes: 0.6027, norm(attn): 0.1465, norm(output): 0.2402, norm(x): 0.6761, norm(y): 1.0052, norm:1.1110, tok/sec: 101345.04, flops:88.75, batch-reuse:1
@ 7780 train 4.0619 , allloss: 4.0776, dt: 1306.17ms, fracRes: 0.6026, norm(attn): 0.1465, norm(output): 0.2422, norm(x): 0.6760, norm(y): 1.0052, norm:1.0255, tok/sec: 100348.22, flops:87.87, batch-reuse:1
@ 7781 train 4.0614 , allloss: 4.0767, dt: 1303.22ms, fracRes: 0.6031, norm(attn): 0.1455, norm(output): 0.2402, norm(x): 0.6764, norm(y): 1.0051, norm:1.0172, tok/sec: 100575.88, flops:88.07, batch-reuse:1
@ 7782 train 4.0338 , allloss: 4.0493, dt: 1244.24ms, fracRes: 0.6029, norm(attn): 0.1475, norm(output): 0.2422, norm(x): 0.6787, norm(y): 1.0051, norm:1.0244, tok/sec: 105342.79, flops:92.25, batch-reuse:1
@ 7783 train 4.0421 , allloss: 4.0571, dt: 1288.82ms, fracRes: 0.6020, norm(attn): 0.1484, norm(output): 0.2402, norm(x): 0.6765, norm(y): 1.0052, norm:1.1761, tok/sec: 101699.15, flops:89.06, batch-reuse:1
@ 7784 train 4.0674 , allloss: 4.0826, dt: 1276.21ms, fracRes: 0.6021, norm(attn): 0.1465, norm(output): 0.2432, norm(x): 0.6750, norm(y): 1.0052, norm:0.9909, tok/sec: 102703.92, flops:89.94, batch-reuse:1
@ 7785 train 3.9982 , allloss: 4.0151, dt: 1287.44ms, fracRes: 0.6021, norm(attn): 0.1465, norm(output): 0.2402, norm(x): 0.6784, norm(y): 1.0052, norm:1.3764, tok/sec: 101807.99, flops:89.15, batch-reuse:1
@ 7786 train 4.0566 , allloss: 4.0729, dt: 1278.06ms, fracRes: 0.6045, norm(attn): 0.1445, norm(output): 0.2373, norm(x): 0.6777, norm(y): 1.0053, norm:1.1647, tok/sec: 102555.27, flops:89.81, batch-reuse:1
@ 7787 train 3.9926 , allloss: 4.0082, dt: 1270.55ms, fracRes: 0.6031, norm(attn): 0.1455, norm(output): 0.2393, norm(x): 0.6750, norm(y): 1.0053, norm:1.1386, tok/sec: 103161.76, flops:90.34, batch-reuse:1
@ 7788 train 4.1097 , allloss: 4.1251, dt: 1282.86ms, fracRes: 0.6034, norm(attn): 0.1436, norm(output): 0.2383, norm(x): 0.6735, norm(y): 1.0054, norm:1.0106, tok/sec: 102172.05, flops:89.47, batch-reuse:1
@ 7789 train 4.0363 , allloss: 4.0517, dt: 1246.74ms, fracRes: 0.6034, norm(attn): 0.1455, norm(output): 0.2383, norm(x): 0.6739, norm(y): 1.0052, norm:1.1992, tok/sec: 105131.39, flops:92.06, batch-reuse:1
@ 7790 train 4.0655 , allloss: 4.0807, dt: 1252.23ms, fracRes: 0.6030, norm(attn): 0.1465, norm(output): 0.2383, norm(x): 0.6753, norm(y): 1.0050, norm:1.0122, tok/sec: 104671.27, flops:91.66, batch-reuse:1
@ 7791 train 4.0774 , allloss: 4.0930, dt: 1262.12ms, fracRes: 0.6029, norm(attn): 0.1465, norm(output): 0.2393, norm(x): 0.6758, norm(y): 1.0052, norm:1.1906, tok/sec: 103850.47, flops:90.94, batch-reuse:1
@ 7792 train 4.0125 , allloss: 4.0282, dt: 1277.17ms, fracRes: 0.6027, norm(attn): 0.1465, norm(output): 0.2393, norm(x): 0.6784, norm(y): 1.0052, norm:1.1623, tok/sec: 102627.04, flops:89.87, batch-reuse:1
@ 7793 train 4.0450 , allloss: 4.0604, dt: 1264.92ms, fracRes: 0.6037, norm(attn): 0.1465, norm(output): 0.2402, norm(x): 0.6775, norm(y): 1.0052, norm:1.3012, tok/sec: 103620.68, flops:90.74, batch-reuse:1
@ 7794 train 4.0384 , allloss: 4.0535, dt: 1264.14ms, fracRes: 0.6038, norm(attn): 0.1445, norm(output): 0.2383, norm(x): 0.6731, norm(y): 1.0051, norm:1.1458, tok/sec: 103685.12, flops:90.80, batch-reuse:1
@ 7795 train 4.0487 , allloss: 4.0647, dt: 1255.70ms, fracRes: 0.6032, norm(attn): 0.1484, norm(output): 0.2393, norm(x): 0.6748, norm(y): 1.0052, norm:1.1254, tok/sec: 104381.81, flops:91.41, batch-reuse:1
@ 7796 train 4.0198 , allloss: 4.0350, dt: 1257.47ms, fracRes: 0.6033, norm(attn): 0.1465, norm(output): 0.2402, norm(x): 0.6722, norm(y): 1.0051, norm:1.1350, tok/sec: 104234.62, flops:91.28, batch-reuse:1
@ 7797 train 4.0072 , allloss: 4.0237, dt: 1255.19ms, fracRes: 0.6035, norm(attn): 0.1475, norm(output): 0.2412, norm(x): 0.6726, norm(y): 1.0048, norm:1.0848, tok/sec: 104424.20, flops:91.44, batch-reuse:1
@ 7798 train 4.0585 , allloss: 4.0745, dt: 1259.49ms, fracRes: 0.6035, norm(attn): 0.1445, norm(output): 0.2393, norm(x): 0.6711, norm(y): 1.0051, norm:1.2240, tok/sec: 104067.14, flops:91.13, batch-reuse:1
@ 7799 train 4.0244 , allloss: 4.0406, dt: 1279.44ms, fracRes: 0.6027, norm(attn): 0.1484, norm(output): 0.2412, norm(x): 0.6730, norm(y): 1.0051, norm:1.1617, tok/sec: 102444.83, flops:89.71, batch-reuse:1
@ 7800 train 4.0487 , allloss: 4.0641, dt: 1265.96ms, fracRes: 0.6033, norm(attn): 0.1455, norm(output): 0.2383, norm(x): 0.6721, norm(y): 1.0050, norm:1.0614, tok/sec: 103535.74, flops:90.66, batch-reuse:1
@ 7801 train 4.0056 , allloss: 4.0218, dt: 1254.33ms, fracRes: 0.6034, norm(attn): 0.1465, norm(output): 0.2383, norm(x): 0.6733, norm(y): 1.0050, norm:1.0300, tok/sec: 104495.59, flops:91.51, batch-reuse:1
@ 7802 train 4.0178 , allloss: 4.0334, dt: 1269.96ms, fracRes: 0.6033, norm(attn): 0.1455, norm(output): 0.2383, norm(x): 0.6715, norm(y): 1.0052, norm:1.1523, tok/sec: 103209.56, flops:90.38, batch-reuse:1
@ 7803 train 4.0503 , allloss: 4.0729, dt: 1282.78ms, fracRes: 0.6028, norm(attn): 0.1465, norm(output): 0.2393, norm(x): 0.6731, norm(y): 1.0050, norm:1.1543, tok/sec: 102178.47, flops:89.48, batch-reuse:1
@ 7804 train 4.0525 , allloss: 4.0682, dt: 1316.62ms, fracRes: 0.6040, norm(attn): 0.1455, norm(output): 0.2363, norm(x): 0.6756, norm(y): 1.0051, norm:1.0968, tok/sec: 99551.71, flops:87.18, batch-reuse:1
@ 7805 train 4.0434 , allloss: 4.0584, dt: 1276.01ms, fracRes: 0.6034, norm(attn): 0.1455, norm(output): 0.2383, norm(x): 0.6754, norm(y): 1.0051, norm:1.0336, tok/sec: 102720.43, flops:89.95, batch-reuse:1
@ 7806 train 3.9543 , allloss: 3.9697, dt: 1267.71ms, fracRes: 0.6037, norm(attn): 0.1465, norm(output): 0.2393, norm(x): 0.6762, norm(y): 1.0054, norm:1.0732, tok/sec: 103392.70, flops:90.54, batch-reuse:1
@ 7807 train 3.9998 , allloss: 4.0150, dt: 1259.72ms, fracRes: 0.6032, norm(attn): 0.1465, norm(output): 0.2402, norm(x): 0.6785, norm(y): 1.0053, norm:1.0999, tok/sec: 104048.35, flops:91.11, batch-reuse:1
@ 7808 train 4.0483 , allloss: 4.0638, dt: 1283.49ms, fracRes: 0.6039, norm(attn): 0.1445, norm(output): 0.2383, norm(x): 0.6771, norm(y): 1.0052, norm:0.9604, tok/sec: 102121.73, flops:89.43, batch-reuse:1
@ 7809 train 3.8949 , allloss: 3.9106, dt: 1270.90ms, fracRes: 0.6037, norm(attn): 0.1455, norm(output): 0.2393, norm(x): 0.6756, norm(y): 1.0054, norm:1.1211, tok/sec: 103133.46, flops:90.31, batch-reuse:1
@ 7810 train 3.9871 , allloss: 4.0025, dt: 1262.45ms, fracRes: 0.6034, norm(attn): 0.1465, norm(output): 0.2383, norm(x): 0.6740, norm(y): 1.0052, norm:1.0317, tok/sec: 103823.48, flops:90.92, batch-reuse:1
@ 7811 train 4.0263 , allloss: 4.0418, dt: 1257.20ms, fracRes: 0.6023, norm(attn): 0.1475, norm(output): 0.2393, norm(x): 0.6722, norm(y): 1.0051, norm:1.0540, tok/sec: 104256.74, flops:91.30, batch-reuse:1
@ 7812 train 4.0217 , allloss: 4.0376, dt: 1270.96ms, fracRes: 0.6025, norm(attn): 0.1465, norm(output): 0.2412, norm(x): 0.6722, norm(y): 1.0051, norm:1.0231, tok/sec: 103128.10, flops:90.31, batch-reuse:1
@ 7813 train 3.9583 , allloss: 3.9739, dt: 1279.98ms, fracRes: 0.6025, norm(attn): 0.1465, norm(output): 0.2393, norm(x): 0.6719, norm(y): 1.0050, norm:1.0058, tok/sec: 102401.59, flops:89.67, batch-reuse:1
@ 7814 train 3.9751 , allloss: 3.9906, dt: 1255.76ms, fracRes: 0.6028, norm(attn): 0.1465, norm(output): 0.2373, norm(x): 0.6713, norm(y): 1.0051, norm:0.9467, tok/sec: 104376.40, flops:91.40, batch-reuse:1
@ 7815 train 4.0913 , allloss: 4.1078, dt: 1275.55ms, fracRes: 0.6029, norm(attn): 0.1475, norm(output): 0.2393, norm(x): 0.6737, norm(y): 1.0051, norm:1.1483, tok/sec: 102756.89, flops:89.98, batch-reuse:1
@ 7816 train 4.1917 , allloss: 4.2070, dt: 1277.99ms, fracRes: 0.6025, norm(attn): 0.1455, norm(output): 0.2383, norm(x): 0.6716, norm(y): 1.0049, norm:1.2309, tok/sec: 102561.26, flops:89.81, batch-reuse:1
@ 7817 train 4.2996 , allloss: 4.3155, dt: 1267.98ms, fracRes: 0.6033, norm(attn): 0.1445, norm(output): 0.2383, norm(x): 0.6728, norm(y): 1.0048, norm:1.2347, tok/sec: 103371.08, flops:90.52, batch-reuse:1
@ 7818 train 4.1590 , allloss: 4.1747, dt: 1254.54ms, fracRes: 0.6031, norm(attn): 0.1455, norm(output): 0.2383, norm(x): 0.6713, norm(y): 1.0051, norm:1.0873, tok/sec: 104478.46, flops:91.49, batch-reuse:1
@ 7819 train 4.2610 , allloss: 4.2768, dt: 1274.22ms, fracRes: 0.6023, norm(attn): 0.1465, norm(output): 0.2393, norm(x): 0.6717, norm(y): 1.0049, norm:1.1798, tok/sec: 102864.52, flops:90.08, batch-reuse:1
@ 7820 train 4.1467 , allloss: 4.1629, dt: 1268.44ms, fracRes: 0.6023, norm(attn): 0.1445, norm(output): 0.2383, norm(x): 0.6696, norm(y): 1.0049, norm:1.4420, tok/sec: 103333.60, flops:90.49, batch-reuse:1
@ 7821 train 4.3066 , allloss: 4.3221, dt: 1288.81ms, fracRes: 0.6027, norm(attn): 0.1436, norm(output): 0.2363, norm(x): 0.6715, norm(y): 1.0050, norm:1.2003, tok/sec: 101700.32, flops:89.06, batch-reuse:1
@ 7822 train 4.1945 , allloss: 4.2100, dt: 1255.13ms, fracRes: 0.6027, norm(attn): 0.1455, norm(output): 0.2373, norm(x): 0.6700, norm(y): 1.0050, norm:1.1099, tok/sec: 104429.36, flops:91.45, batch-reuse:1
@ 7823 train 4.2356 , allloss: 4.2520, dt: 1267.44ms, fracRes: 0.6018, norm(attn): 0.1465, norm(output): 0.2393, norm(x): 0.6679, norm(y): 1.0048, norm:1.3280, tok/sec: 103414.75, flops:90.56, batch-reuse:1
@ 7824 train 4.3418 , allloss: 4.3580, dt: 1262.98ms, fracRes: 0.6024, norm(attn): 0.1465, norm(output): 0.2402, norm(x): 0.6686, norm(y): 1.0047, norm:1.5030, tok/sec: 103779.60, flops:90.88, batch-reuse:1
@ 7825 train 4.1779 , allloss: 4.1936, dt: 1268.79ms, fracRes: 0.6016, norm(attn): 0.1475, norm(output): 0.2402, norm(x): 0.6706, norm(y): 1.0048, norm:1.1979, tok/sec: 103304.37, flops:90.46, batch-reuse:1
@ 7826 train 4.2026 , allloss: 4.2184, dt: 1277.02ms, fracRes: 0.6025, norm(attn): 0.1455, norm(output): 0.2402, norm(x): 0.6701, norm(y): 1.0047, norm:1.0815, tok/sec: 102638.98, flops:89.88, batch-reuse:1
@ 7827 train 4.2129 , allloss: 4.2282, dt: 1289.55ms, fracRes: 0.6029, norm(attn): 0.1445, norm(output): 0.2383, norm(x): 0.6693, norm(y): 1.0049, norm:1.2710, tok/sec: 101641.54, flops:89.01, batch-reuse:1
@ 7828 train 4.1561 , allloss: 4.1721, dt: 1271.64ms, fracRes: 0.6032, norm(attn): 0.1465, norm(output): 0.2402, norm(x): 0.6749, norm(y): 1.0050, norm:1.2265, tok/sec: 103073.33, flops:90.26, batch-reuse:1
@ 7829 train 4.2176 , allloss: 4.2331, dt: 1267.55ms, fracRes: 0.6031, norm(attn): 0.1455, norm(output): 0.2393, norm(x): 0.6756, norm(y): 1.0049, norm:1.2720, tok/sec: 103405.92, flops:90.55, batch-reuse:1
@ 7830 train 4.1420 , allloss: 4.1573, dt: 1264.43ms, fracRes: 0.6034, norm(attn): 0.1455, norm(output): 0.2402, norm(x): 0.6761, norm(y): 1.0049, norm:1.1261, tok/sec: 103661.03, flops:90.77, batch-reuse:1
@ 7831 train 4.1521 , allloss: 4.1676, dt: 1268.85ms, fracRes: 0.6023, norm(attn): 0.1465, norm(output): 0.2393, norm(x): 0.6735, norm(y): 1.0049, norm:1.1266, tok/sec: 103300.06, flops:90.46, batch-reuse:1
@ 7832 train 4.2080 , allloss: 4.2241, dt: 1268.28ms, fracRes: 0.6020, norm(attn): 0.1484, norm(output): 0.2412, norm(x): 0.6723, norm(y): 1.0049, norm:1.1990, tok/sec: 103346.67, flops:90.50, batch-reuse:1
@ 7833 train 4.2462 , allloss: 4.2617, dt: 1268.23ms, fracRes: 0.6016, norm(attn): 0.1465, norm(output): 0.2402, norm(x): 0.6727, norm(y): 1.0048, norm:1.2894, tok/sec: 103350.32, flops:90.50, batch-reuse:1
@ 7834 train 4.2730 , allloss: 4.2890, dt: 1262.99ms, fracRes: 0.6019, norm(attn): 0.1475, norm(output): 0.2432, norm(x): 0.6757, norm(y): 1.0047, norm:1.3004, tok/sec: 103779.21, flops:90.88, batch-reuse:1
@ 7835 train 4.2458 , allloss: 4.2619, dt: 1268.04ms, fracRes: 0.6035, norm(attn): 0.1465, norm(output): 0.2393, norm(x): 0.6730, norm(y): 1.0048, norm:1.1786, tok/sec: 103365.42, flops:90.52, batch-reuse:1
@ 7836 train 4.1849 , allloss: 4.2004, dt: 1269.89ms, fracRes: 0.6036, norm(attn): 0.1465, norm(output): 0.2383, norm(x): 0.6748, norm(y): 1.0049, norm:1.0357, tok/sec: 103215.50, flops:90.38, batch-reuse:1
@ 7837 train 4.2677 , allloss: 4.2830, dt: 1290.63ms, fracRes: 0.6031, norm(attn): 0.1465, norm(output): 0.2383, norm(x): 0.6723, norm(y): 1.0050, norm:1.1361, tok/sec: 101556.39, flops:88.93, batch-reuse:1
@ 7838 train 4.2073 , allloss: 4.2228, dt: 1260.08ms, fracRes: 0.6038, norm(attn): 0.1465, norm(output): 0.2383, norm(x): 0.6708, norm(y): 1.0050, norm:1.1383, tok/sec: 104018.98, flops:91.09, batch-reuse:1
@ 7839 train 4.2063 , allloss: 4.2221, dt: 1258.37ms, fracRes: 0.6034, norm(attn): 0.1465, norm(output): 0.2383, norm(x): 0.6709, norm(y): 1.0049, norm:1.1738, tok/sec: 104160.21, flops:91.21, batch-reuse:1
@ 7840 train 4.2178 , allloss: 4.2330, dt: 1277.67ms, fracRes: 0.6034, norm(attn): 0.1455, norm(output): 0.2373, norm(x): 0.6694, norm(y): 1.0048, norm:0.9638, tok/sec: 102586.44, flops:89.83, batch-reuse:1
@ 7841 train 4.1266 , allloss: 4.1420, dt: 1264.39ms, fracRes: 0.6027, norm(attn): 0.1465, norm(output): 0.2383, norm(x): 0.6687, norm(y): 1.0048, norm:1.1653, tok/sec: 103664.47, flops:90.78, batch-reuse:1
@ 7842 train 4.2863 , allloss: 4.3018, dt: 1283.82ms, fracRes: 0.6019, norm(attn): 0.1465, norm(output): 0.2393, norm(x): 0.6666, norm(y): 1.0046, norm:1.0153, tok/sec: 102095.15, flops:89.40, batch-reuse:1
@ 7843 train 4.0478 , allloss: 4.0638, dt: 1270.11ms, fracRes: 0.6019, norm(attn): 0.1465, norm(output): 0.2393, norm(x): 0.6707, norm(y): 1.0049, norm:1.0659, tok/sec: 103197.20, flops:90.37, batch-reuse:1
@ 7844 train 4.1730 , allloss: 4.1881, dt: 1257.44ms, fracRes: 0.6023, norm(attn): 0.1445, norm(output): 0.2393, norm(x): 0.6683, norm(y): 1.0049, norm:0.9930, tok/sec: 104237.03, flops:91.28, batch-reuse:1
@ 7845 train 4.1524 , allloss: 4.1675, dt: 1285.83ms, fracRes: 0.6029, norm(attn): 0.1465, norm(output): 0.2402, norm(x): 0.6690, norm(y): 1.0049, norm:1.0751, tok/sec: 101935.83, flops:89.26, batch-reuse:1
@ 7846 train 4.1907 , allloss: 4.2064, dt: 1279.59ms, fracRes: 0.6027, norm(attn): 0.1475, norm(output): 0.2393, norm(x): 0.6719, norm(y): 1.0049, norm:1.4593, tok/sec: 102432.78, flops:89.70, batch-reuse:1
@ 7847 train 4.2191 , allloss: 4.2346, dt: 1300.12ms, fracRes: 0.6035, norm(attn): 0.1465, norm(output): 0.2383, norm(x): 0.6717, norm(y): 1.0049, norm:1.2749, tok/sec: 100815.15, flops:88.28, batch-reuse:1
@ 7848 train 4.1221 , allloss: 4.1377, dt: 1288.24ms, fracRes: 0.6036, norm(attn): 0.1455, norm(output): 0.2422, norm(x): 0.6732, norm(y): 1.0048, norm:1.0462, tok/sec: 101745.21, flops:89.10, batch-reuse:1
@ 7849 train 4.1766 , allloss: 4.1925, dt: 1278.96ms, fracRes: 0.6039, norm(attn): 0.1455, norm(output): 0.2393, norm(x): 0.6731, norm(y): 1.0048, norm:1.1113, tok/sec: 102483.61, flops:89.74, batch-reuse:1
@ 7850 train 4.2276 , allloss: 4.2427, dt: 1288.37ms, fracRes: 0.6029, norm(attn): 0.1465, norm(output): 0.2412, norm(x): 0.6719, norm(y): 1.0046, norm:1.0879, tok/sec: 101734.74, flops:89.09, batch-reuse:1
@ 7851 train 4.2106 , allloss: 4.2259, dt: 1257.01ms, fracRes: 0.6027, norm(attn): 0.1465, norm(output): 0.2402, norm(x): 0.6719, norm(y): 1.0047, norm:1.1744, tok/sec: 104273.14, flops:91.31, batch-reuse:1
@ 7852 train 4.2054 , allloss: 4.2213, dt: 1253.14ms, fracRes: 0.6026, norm(attn): 0.1484, norm(output): 0.2402, norm(x): 0.6710, norm(y): 1.0047, norm:1.0899, tok/sec: 104594.66, flops:91.59, batch-reuse:1
@ 7853 train 4.3308 , allloss: 4.3470, dt: 1278.52ms, fracRes: 0.6033, norm(attn): 0.1465, norm(output): 0.2402, norm(x): 0.6742, norm(y): 1.0046, norm:1.1553, tok/sec: 102518.43, flops:89.77, batch-reuse:1
@ 7854 train 4.1560 , allloss: 4.1716, dt: 1258.15ms, fracRes: 0.6035, norm(attn): 0.1465, norm(output): 0.2393, norm(x): 0.6734, norm(y): 1.0048, norm:1.1002, tok/sec: 104178.55, flops:91.23, batch-reuse:1
@ 7855 train 4.3441 , allloss: 4.3592, dt: 1280.75ms, fracRes: 0.6028, norm(attn): 0.1484, norm(output): 0.2422, norm(x): 0.6709, norm(y): 1.0046, norm:1.3253, tok/sec: 102339.73, flops:89.62, batch-reuse:1
@ 7856 train 4.2901 , allloss: 4.3055, dt: 1265.42ms, fracRes: 0.6027, norm(attn): 0.1465, norm(output): 0.2402, norm(x): 0.6710, norm(y): 1.0045, norm:1.2061, tok/sec: 103579.61, flops:90.70, batch-reuse:1
@ 7857 train 4.2688 , allloss: 4.2841, dt: 1277.11ms, fracRes: 0.6020, norm(attn): 0.1465, norm(output): 0.2402, norm(x): 0.6677, norm(y): 1.0049, norm:1.1953, tok/sec: 102631.35, flops:89.87, batch-reuse:1
@ 7858 train 4.2108 , allloss: 4.2261, dt: 1263.39ms, fracRes: 0.6021, norm(attn): 0.1465, norm(output): 0.2393, norm(x): 0.6681, norm(y): 1.0049, norm:1.0801, tok/sec: 103745.97, flops:90.85, batch-reuse:1
@ 7859 train 4.2295 , allloss: 4.2444, dt: 1301.41ms, fracRes: 0.6025, norm(attn): 0.1445, norm(output): 0.2383, norm(x): 0.6668, norm(y): 1.0047, norm:1.0590, tok/sec: 100715.34, flops:88.19, batch-reuse:1
@ 7860 train 4.1989 , allloss: 4.2140, dt: 1250.03ms, fracRes: 0.6019, norm(attn): 0.1475, norm(output): 0.2393, norm(x): 0.6681, norm(y): 1.0046, norm:1.1444, tok/sec: 104855.18, flops:91.82, batch-reuse:1
@ 7861 train 4.2387 , allloss: 4.2544, dt: 1256.79ms, fracRes: 0.6013, norm(attn): 0.1494, norm(output): 0.2441, norm(x): 0.6689, norm(y): 1.0045, norm:1.0101, tok/sec: 104291.26, flops:91.33, batch-reuse:1
@ 7862 train 4.1229 , allloss: 4.1389, dt: 1267.96ms, fracRes: 0.6021, norm(attn): 0.1484, norm(output): 0.2432, norm(x): 0.6745, norm(y): 1.0046, norm:1.1617, tok/sec: 103372.26, flops:90.52, batch-reuse:1
@ 7863 train 4.2555 , allloss: 4.2709, dt: 1250.81ms, fracRes: 0.6030, norm(attn): 0.1475, norm(output): 0.2393, norm(x): 0.6750, norm(y): 1.0046, norm:1.1047, tok/sec: 104789.96, flops:91.76, batch-reuse:1
@ 7864 train 4.2279 , allloss: 4.2427, dt: 1276.64ms, fracRes: 0.6035, norm(attn): 0.1465, norm(output): 0.2402, norm(x): 0.6741, norm(y): 1.0046, norm:1.1608, tok/sec: 102669.68, flops:89.91, batch-reuse:1
@ 7865 train 4.0841 , allloss: 4.0990, dt: 1254.19ms, fracRes: 0.6028, norm(attn): 0.1475, norm(output): 0.2412, norm(x): 0.6750, norm(y): 1.0048, norm:1.0995, tok/sec: 104507.35, flops:91.52, batch-reuse:1
@ 7866 train 4.1462 , allloss: 4.1611, dt: 1263.24ms, fracRes: 0.6023, norm(attn): 0.1475, norm(output): 0.2412, norm(x): 0.6704, norm(y): 1.0048, norm:0.9951, tok/sec: 103758.50, flops:90.86, batch-reuse:1
@ 7867 train 4.2259 , allloss: 4.2413, dt: 1255.62ms, fracRes: 0.6034, norm(attn): 0.1455, norm(output): 0.2383, norm(x): 0.6705, norm(y): 1.0049, norm:1.3189, tok/sec: 104388.37, flops:91.41, batch-reuse:1
@ 7868 train 4.1586 , allloss: 4.1733, dt: 1249.85ms, fracRes: 0.6032, norm(attn): 0.1465, norm(output): 0.2402, norm(x): 0.6701, norm(y): 1.0048, norm:1.1104, tok/sec: 104869.88, flops:91.83, batch-reuse:1
@ 7869 train 4.2100 , allloss: 4.2249, dt: 1271.02ms, fracRes: 0.6035, norm(attn): 0.1484, norm(output): 0.2383, norm(x): 0.6709, norm(y): 1.0049, norm:1.1191, tok/sec: 103123.46, flops:90.30, batch-reuse:1
@ 7870 train 4.0938 , allloss: 4.1096, dt: 1285.37ms, fracRes: 0.6037, norm(attn): 0.1475, norm(output): 0.2402, norm(x): 0.6733, norm(y): 1.0048, norm:1.1840, tok/sec: 101971.88, flops:89.30, batch-reuse:1
@ 7871 train 4.1641 , allloss: 4.1792, dt: 1254.49ms, fracRes: 0.6036, norm(attn): 0.1465, norm(output): 0.2393, norm(x): 0.6701, norm(y): 1.0049, norm:1.0076, tok/sec: 104482.45, flops:91.49, batch-reuse:1
@ 7872 train 4.2124 , allloss: 4.2279, dt: 1269.25ms, fracRes: 0.6021, norm(attn): 0.1465, norm(output): 0.2412, norm(x): 0.6708, norm(y): 1.0047, norm:1.0903, tok/sec: 103267.52, flops:90.43, batch-reuse:1
@ 7873 train 4.2036 , allloss: 4.2188, dt: 1286.03ms, fracRes: 0.6017, norm(attn): 0.1455, norm(output): 0.2412, norm(x): 0.6683, norm(y): 1.0048, norm:1.2547, tok/sec: 101919.82, flops:89.25, batch-reuse:1
@ 7874 train 4.1969 , allloss: 4.2126, dt: 1266.73ms, fracRes: 0.6008, norm(attn): 0.1484, norm(output): 0.2461, norm(x): 0.6727, norm(y): 1.0047, norm:1.1284, tok/sec: 103472.73, flops:90.61, batch-reuse:1
@ 7875 train 4.1993 , allloss: 4.2148, dt: 1263.67ms, fracRes: 0.6004, norm(attn): 0.1475, norm(output): 0.2441, norm(x): 0.6693, norm(y): 1.0046, norm:0.9724, tok/sec: 103723.21, flops:90.83, batch-reuse:1
@ 7876 train 4.1405 , allloss: 4.1563, dt: 1255.89ms, fracRes: 0.6021, norm(attn): 0.1465, norm(output): 0.2393, norm(x): 0.6719, norm(y): 1.0049, norm:1.0234, tok/sec: 104366.11, flops:91.39, batch-reuse:1
@ 7877 train 4.1803 , allloss: 4.1960, dt: 1254.86ms, fracRes: 0.6022, norm(attn): 0.1475, norm(output): 0.2412, norm(x): 0.6716, norm(y): 1.0048, norm:1.0154, tok/sec: 104451.52, flops:91.47, batch-reuse:1
@ 7878 train 4.2613 , allloss: 4.2781, dt: 1266.94ms, fracRes: 0.6027, norm(attn): 0.1465, norm(output): 0.2432, norm(x): 0.6764, norm(y): 1.0047, norm:1.1641, tok/sec: 103455.42, flops:90.59, batch-reuse:1
@ 7879 train 4.2812 , allloss: 4.2972, dt: 1281.62ms, fracRes: 0.6031, norm(attn): 0.1455, norm(output): 0.2412, norm(x): 0.6763, norm(y): 1.0047, norm:1.0367, tok/sec: 102270.33, flops:89.56, batch-reuse:1
@ 7880 train 4.2048 , allloss: 4.2206, dt: 1283.81ms, fracRes: 0.6029, norm(attn): 0.1465, norm(output): 0.2402, norm(x): 0.6743, norm(y): 1.0048, norm:1.1382, tok/sec: 102096.49, flops:89.40, batch-reuse:1
@ 7881 train 4.3495 , allloss: 4.3653, dt: 1303.33ms, fracRes: 0.6040, norm(attn): 0.1455, norm(output): 0.2383, norm(x): 0.6713, norm(y): 1.0046, norm:1.1202, tok/sec: 100567.29, flops:88.07, batch-reuse:1
@ 7882 train 4.2362 , allloss: 4.2515, dt: 1307.30ms, fracRes: 0.6032, norm(attn): 0.1465, norm(output): 0.2412, norm(x): 0.6697, norm(y): 1.0046, norm:1.2332, tok/sec: 100261.38, flops:87.80, batch-reuse:1
@ 7883 train 4.2446 , allloss: 4.2603, dt: 1262.43ms, fracRes: 0.6036, norm(attn): 0.1465, norm(output): 0.2383, norm(x): 0.6699, norm(y): 1.0047, norm:0.9824, tok/sec: 103824.87, flops:90.92, batch-reuse:1
@ 7884 train 4.1927 , allloss: 4.2089, dt: 1269.69ms, fracRes: 0.6026, norm(attn): 0.1465, norm(output): 0.2402, norm(x): 0.6711, norm(y): 1.0047, norm:1.0825, tok/sec: 103231.16, flops:90.40, batch-reuse:1
@ 7885 train 4.1532 , allloss: 4.1692, dt: 1268.77ms, fracRes: 0.6025, norm(attn): 0.1465, norm(output): 0.2402, norm(x): 0.6694, norm(y): 1.0049, norm:1.1847, tok/sec: 103306.41, flops:90.46, batch-reuse:1
@ 7886 train 4.1987 , allloss: 4.2145, dt: 1274.73ms, fracRes: 0.6018, norm(attn): 0.1475, norm(output): 0.2412, norm(x): 0.6680, norm(y): 1.0048, norm:1.0519, tok/sec: 102823.48, flops:90.04, batch-reuse:1
@ 7887 train 4.1460 , allloss: 4.1610, dt: 1255.67ms, fracRes: 0.6027, norm(attn): 0.1475, norm(output): 0.2383, norm(x): 0.6692, norm(y): 1.0049, norm:1.1332, tok/sec: 104383.77, flops:91.41, batch-reuse:1
@ 7888 train 4.1977 , allloss: 4.2128, dt: 1266.24ms, fracRes: 0.6024, norm(attn): 0.1465, norm(output): 0.2383, norm(x): 0.6664, norm(y): 1.0047, norm:1.0785, tok/sec: 103512.77, flops:90.64, batch-reuse:1
@ 7889 train 4.1961 , allloss: 4.2123, dt: 1293.31ms, fracRes: 0.6025, norm(attn): 0.1465, norm(output): 0.2432, norm(x): 0.6727, norm(y): 1.0047, norm:1.1471, tok/sec: 101346.41, flops:88.75, batch-reuse:1
@ 7890 train 4.2216 , allloss: 4.2375, dt: 1281.89ms, fracRes: 0.6023, norm(attn): 0.1484, norm(output): 0.2402, norm(x): 0.6731, norm(y): 1.0048, norm:1.0660, tok/sec: 102249.14, flops:89.54, batch-reuse:1
@ 7891 train 4.2142 , allloss: 4.2293, dt: 1271.13ms, fracRes: 0.6025, norm(attn): 0.1484, norm(output): 0.2402, norm(x): 0.6709, norm(y): 1.0048, norm:1.0429, tok/sec: 103114.76, flops:90.30, batch-reuse:1
@ 7892 train 4.1827 , allloss: 4.1977, dt: 1292.63ms, fracRes: 0.6031, norm(attn): 0.1455, norm(output): 0.2373, norm(x): 0.6725, norm(y): 1.0047, norm:1.1730, tok/sec: 101399.18, flops:88.79, batch-reuse:1
@ 7893 train 4.1094 , allloss: 4.1250, dt: 1254.90ms, fracRes: 0.6035, norm(attn): 0.1445, norm(output): 0.2393, norm(x): 0.6735, norm(y): 1.0049, norm:1.1815, tok/sec: 104448.40, flops:91.46, batch-reuse:1
@ 7894 train 4.1788 , allloss: 4.1947, dt: 1272.05ms, fracRes: 0.6033, norm(attn): 0.1465, norm(output): 0.2373, norm(x): 0.6718, norm(y): 1.0048, norm:1.0634, tok/sec: 103040.35, flops:90.23, batch-reuse:1
@ 7895 train 4.1953 , allloss: 4.2122, dt: 1275.27ms, fracRes: 0.6025, norm(attn): 0.1484, norm(output): 0.2412, norm(x): 0.6724, norm(y): 1.0046, norm:1.2439, tok/sec: 102779.84, flops:90.00, batch-reuse:1
@ 7896 train 4.2861 , allloss: 4.3010, dt: 1283.29ms, fracRes: 0.6023, norm(attn): 0.1484, norm(output): 0.2412, norm(x): 0.6725, norm(y): 1.0046, norm:1.2653, tok/sec: 102137.86, flops:89.44, batch-reuse:1
@ 7897 train 4.2213 , allloss: 4.2367, dt: 1269.75ms, fracRes: 0.6028, norm(attn): 0.1465, norm(output): 0.2412, norm(x): 0.6757, norm(y): 1.0046, norm:1.0727, tok/sec: 103226.55, flops:90.39, batch-reuse:1
@ 7898 train 4.1247 , allloss: 4.1406, dt: 1272.58ms, fracRes: 0.6022, norm(attn): 0.1475, norm(output): 0.2422, norm(x): 0.6734, norm(y): 1.0048, norm:1.0816, tok/sec: 102996.95, flops:90.19, batch-reuse:1
@ 7899 train 4.1972 , allloss: 4.2131, dt: 1246.47ms, fracRes: 0.6019, norm(attn): 0.1465, norm(output): 0.2422, norm(x): 0.6731, norm(y): 1.0046, norm:1.2298, tok/sec: 105154.90, flops:92.08, batch-reuse:1
@ 7900 train 4.0651 , allloss: 4.0807, dt: 1267.80ms, fracRes: 0.6031, norm(attn): 0.1465, norm(output): 0.2373, norm(x): 0.6714, norm(y): 1.0048, norm:1.3246, tok/sec: 103385.56, flops:90.53, batch-reuse:1
@ 7901 train 4.1301 , allloss: 4.1454, dt: 1270.80ms, fracRes: 0.6032, norm(attn): 0.1455, norm(output): 0.2373, norm(x): 0.6719, norm(y): 1.0048, norm:1.0471, tok/sec: 103141.47, flops:90.32, batch-reuse:1
@ 7902 train 4.1051 , allloss: 4.1214, dt: 1277.64ms, fracRes: 0.6023, norm(attn): 0.1484, norm(output): 0.2422, norm(x): 0.6734, norm(y): 1.0046, norm:1.1054, tok/sec: 102589.37, flops:89.84, batch-reuse:1
@ 7903 train 4.1692 , allloss: 4.1850, dt: 1300.60ms, fracRes: 0.6027, norm(attn): 0.1465, norm(output): 0.2393, norm(x): 0.6713, norm(y): 1.0048, norm:1.2794, tok/sec: 100778.39, flops:88.25, batch-reuse:1
@ 7904 train 4.2450 , allloss: 4.2612, dt: 1298.10ms, fracRes: 0.6039, norm(attn): 0.1455, norm(output): 0.2383, norm(x): 0.6703, norm(y): 1.0048, norm:1.1774, tok/sec: 100971.86, flops:88.42, batch-reuse:1
@ 7905 train 4.1002 , allloss: 4.1152, dt: 1282.87ms, fracRes: 0.6034, norm(attn): 0.1465, norm(output): 0.2373, norm(x): 0.6685, norm(y): 1.0046, norm:1.2635, tok/sec: 102170.66, flops:89.47, batch-reuse:1
@ 7906 train 4.3563 , allloss: 4.3712, dt: 1273.79ms, fracRes: 0.6033, norm(attn): 0.1465, norm(output): 0.2412, norm(x): 0.6688, norm(y): 1.0043, norm:1.1483, tok/sec: 102899.44, flops:90.11, batch-reuse:1
@ 7907 train 4.1628 , allloss: 4.1782, dt: 1256.51ms, fracRes: 0.6037, norm(attn): 0.1484, norm(output): 0.2422, norm(x): 0.6737, norm(y): 1.0047, norm:1.4664, tok/sec: 104314.35, flops:91.35, batch-reuse:1
@ 7908 train 4.1926 , allloss: 4.2075, dt: 1261.59ms, fracRes: 0.6035, norm(attn): 0.1475, norm(output): 0.2451, norm(x): 0.6741, norm(y): 1.0047, norm:1.1471, tok/sec: 103894.19, flops:90.98, batch-reuse:1
@ 7909 train 4.1823 , allloss: 4.1974, dt: 1271.05ms, fracRes: 0.6036, norm(attn): 0.1465, norm(output): 0.2402, norm(x): 0.6740, norm(y): 1.0047, norm:1.1115, tok/sec: 103120.64, flops:90.30, batch-reuse:1
@ 7910 train 4.0949 , allloss: 4.1104, dt: 1255.37ms, fracRes: 0.6034, norm(attn): 0.1465, norm(output): 0.2402, norm(x): 0.6740, norm(y): 1.0047, norm:1.1518, tok/sec: 104409.09, flops:91.43, batch-reuse:1
@ 7911 train 4.1134 , allloss: 4.1289, dt: 1255.46ms, fracRes: 0.6034, norm(attn): 0.1475, norm(output): 0.2393, norm(x): 0.6724, norm(y): 1.0048, norm:1.2900, tok/sec: 104401.77, flops:91.42, batch-reuse:1
@ 7912 train 4.1229 , allloss: 4.1383, dt: 1265.81ms, fracRes: 0.6014, norm(attn): 0.1504, norm(output): 0.2412, norm(x): 0.6736, norm(y): 1.0049, norm:1.2462, tok/sec: 103548.14, flops:90.68, batch-reuse:1
@ 7913 train 4.0816 , allloss: 4.0967, dt: 1263.77ms, fracRes: 0.6023, norm(attn): 0.1465, norm(output): 0.2393, norm(x): 0.6717, norm(y): 1.0049, norm:1.0713, tok/sec: 103714.87, flops:90.82, batch-reuse:1
@ 7914 train 4.0582 , allloss: 4.0728, dt: 1279.21ms, fracRes: 0.6025, norm(attn): 0.1465, norm(output): 0.2393, norm(x): 0.6722, norm(y): 1.0048, norm:1.0280, tok/sec: 102463.19, flops:89.73, batch-reuse:1
@ 7915 train 4.0601 , allloss: 4.0771, dt: 1263.11ms, fracRes: 0.6034, norm(attn): 0.1484, norm(output): 0.2412, norm(x): 0.6757, norm(y): 1.0048, norm:1.1666, tok/sec: 103769.22, flops:90.87, batch-reuse:1
@ 7916 train 4.5331 , allloss: 4.5498, dt: 1285.33ms, fracRes: 0.6029, norm(attn): 0.1484, norm(output): 0.2451, norm(x): 0.6759, norm(y): 1.0042, norm:1.4144, tok/sec: 101975.02, flops:89.30, batch-reuse:1
@ 7917 train 4.1166 , allloss: 4.1318, dt: 1262.82ms, fracRes: 0.6021, norm(attn): 0.1475, norm(output): 0.2402, norm(x): 0.6740, norm(y): 1.0046, norm:1.1786, tok/sec: 103792.98, flops:90.89, batch-reuse:1
@ 7918 train 4.1837 , allloss: 4.1987, dt: 1283.95ms, fracRes: 0.6025, norm(attn): 0.1465, norm(output): 0.2422, norm(x): 0.6737, norm(y): 1.0047, norm:1.0478, tok/sec: 102085.10, flops:89.39, batch-reuse:1
@ 7919 train 4.1686 , allloss: 4.1867, dt: 1265.07ms, fracRes: 0.6022, norm(attn): 0.1494, norm(output): 0.2451, norm(x): 0.6746, norm(y): 1.0042, norm:1.2933, tok/sec: 103608.69, flops:90.73, batch-reuse:1
@ 7920 train 4.1985 , allloss: 4.2142, dt: 1252.96ms, fracRes: 0.6023, norm(attn): 0.1475, norm(output): 0.2422, norm(x): 0.6723, norm(y): 1.0047, norm:1.3840, tok/sec: 104610.09, flops:91.61, batch-reuse:1
@ 7921 train 4.1262 , allloss: 4.1414, dt: 1256.60ms, fracRes: 0.6033, norm(attn): 0.1484, norm(output): 0.2422, norm(x): 0.6695, norm(y): 1.0048, norm:1.1396, tok/sec: 104307.16, flops:91.34, batch-reuse:1
@ 7922 train 4.1144 , allloss: 4.1296, dt: 1274.45ms, fracRes: 0.6040, norm(attn): 0.1484, norm(output): 0.2402, norm(x): 0.6742, norm(y): 1.0048, norm:1.0108, tok/sec: 102845.99, flops:90.06, batch-reuse:1
@ 7923 train 4.0591 , allloss: 4.0745, dt: 1268.75ms, fracRes: 0.6037, norm(attn): 0.1484, norm(output): 0.2412, norm(x): 0.6741, norm(y): 1.0048, norm:1.1696, tok/sec: 103307.69, flops:90.47, batch-reuse:1
@ 7924 train 4.1289 , allloss: 4.1443, dt: 1274.61ms, fracRes: 0.6035, norm(attn): 0.1455, norm(output): 0.2422, norm(x): 0.6753, norm(y): 1.0048, norm:1.1250, tok/sec: 102833.29, flops:90.05, batch-reuse:1
@ 7925 train 4.1050 , allloss: 4.1203, dt: 1280.38ms, fracRes: 0.6030, norm(attn): 0.1465, norm(output): 0.2373, norm(x): 0.6732, norm(y): 1.0049, norm:1.0652, tok/sec: 102369.72, flops:89.64, batch-reuse:1
@ 7926 train 4.0824 , allloss: 4.0975, dt: 1266.79ms, fracRes: 0.6023, norm(attn): 0.1484, norm(output): 0.2402, norm(x): 0.6737, norm(y): 1.0049, norm:1.0722, tok/sec: 103467.73, flops:90.61, batch-reuse:1
@ 7927 train 4.1002 , allloss: 4.1148, dt: 1293.54ms, fracRes: 0.6027, norm(attn): 0.1484, norm(output): 0.2393, norm(x): 0.6728, norm(y): 1.0048, norm:1.0882, tok/sec: 101328.19, flops:88.73, batch-reuse:1
@ 7928 train 4.0448 , allloss: 4.0603, dt: 1288.07ms, fracRes: 0.6028, norm(attn): 0.1484, norm(output): 0.2402, norm(x): 0.6736, norm(y): 1.0046, norm:1.1597, tok/sec: 101758.11, flops:89.11, batch-reuse:1
@ 7929 train 4.0882 , allloss: 4.1035, dt: 1259.87ms, fracRes: 0.6034, norm(attn): 0.1455, norm(output): 0.2383, norm(x): 0.6717, norm(y): 1.0047, norm:1.0350, tok/sec: 104036.50, flops:91.10, batch-reuse:1
@ 7930 train 4.0973 , allloss: 4.1129, dt: 1269.11ms, fracRes: 0.6031, norm(attn): 0.1465, norm(output): 0.2383, norm(x): 0.6713, norm(y): 1.0048, norm:1.0493, tok/sec: 103278.87, flops:90.44, batch-reuse:1
@ 7931 train 4.0321 , allloss: 4.0467, dt: 1283.86ms, fracRes: 0.6027, norm(attn): 0.1465, norm(output): 0.2393, norm(x): 0.6697, norm(y): 1.0047, norm:1.0982, tok/sec: 102092.36, flops:89.40, batch-reuse:1
@ 7932 train 4.0315 , allloss: 4.0467, dt: 1264.56ms, fracRes: 0.6030, norm(attn): 0.1465, norm(output): 0.2383, norm(x): 0.6705, norm(y): 1.0047, norm:1.0239, tok/sec: 103650.05, flops:90.76, batch-reuse:1
@ 7933 train 4.0786 , allloss: 4.0939, dt: 1264.09ms, fracRes: 0.6026, norm(attn): 0.1494, norm(output): 0.2412, norm(x): 0.6699, norm(y): 1.0046, norm:1.0610, tok/sec: 103688.42, flops:90.80, batch-reuse:1
@ 7934 train 4.1922 , allloss: 4.2075, dt: 1267.07ms, fracRes: 0.6029, norm(attn): 0.1475, norm(output): 0.2412, norm(x): 0.6697, norm(y): 1.0046, norm:1.0025, tok/sec: 103444.64, flops:90.58, batch-reuse:1
@ 7935 train 4.1097 , allloss: 4.1243, dt: 1245.82ms, fracRes: 0.6024, norm(attn): 0.1475, norm(output): 0.2412, norm(x): 0.6687, norm(y): 1.0047, norm:0.9899, tok/sec: 105209.07, flops:92.13, batch-reuse:1
@ 7936 train 4.0809 , allloss: 4.0958, dt: 1272.34ms, fracRes: 0.6022, norm(attn): 0.1465, norm(output): 0.2393, norm(x): 0.6711, norm(y): 1.0047, norm:1.0501, tok/sec: 103016.31, flops:90.21, batch-reuse:1
@ 7937 train 4.0790 , allloss: 4.0942, dt: 1260.64ms, fracRes: 0.6021, norm(attn): 0.1484, norm(output): 0.2402, norm(x): 0.6699, norm(y): 1.0047, norm:1.0274, tok/sec: 103972.99, flops:91.05, batch-reuse:1
@ 7938 train 4.1631 , allloss: 4.1785, dt: 1289.84ms, fracRes: 0.6026, norm(attn): 0.1465, norm(output): 0.2383, norm(x): 0.6704, norm(y): 1.0049, norm:1.0222, tok/sec: 101618.56, flops:88.99, batch-reuse:1
@ 7939 train 4.0046 , allloss: 4.0196, dt: 1293.83ms, fracRes: 0.6021, norm(attn): 0.1494, norm(output): 0.2402, norm(x): 0.6691, norm(y): 1.0047, norm:1.2100, tok/sec: 101305.47, flops:88.71, batch-reuse:1
@ 7940 train 4.1721 , allloss: 4.1867, dt: 1292.06ms, fracRes: 0.6033, norm(attn): 0.1465, norm(output): 0.2402, norm(x): 0.6693, norm(y): 1.0045, norm:1.0161, tok/sec: 101444.18, flops:88.83, batch-reuse:1
@ 7941 train 4.2135 , allloss: 4.2281, dt: 1279.27ms, fracRes: 0.6039, norm(attn): 0.1455, norm(output): 0.2373, norm(x): 0.6702, norm(y): 1.0046, norm:0.9326, tok/sec: 102458.65, flops:89.72, batch-reuse:1
@ 7942 train 4.0962 , allloss: 4.1109, dt: 1262.59ms, fracRes: 0.6034, norm(attn): 0.1465, norm(output): 0.2383, norm(x): 0.6699, norm(y): 1.0045, norm:1.0099, tok/sec: 103812.15, flops:90.91, batch-reuse:1
@ 7943 train 4.0780 , allloss: 4.0947, dt: 1278.38ms, fracRes: 0.6022, norm(attn): 0.1504, norm(output): 0.2422, norm(x): 0.6705, norm(y): 1.0046, norm:1.0279, tok/sec: 102530.13, flops:89.78, batch-reuse:1
@ 7944 train 4.0692 , allloss: 4.0845, dt: 1265.22ms, fracRes: 0.6024, norm(attn): 0.1484, norm(output): 0.2393, norm(x): 0.6678, norm(y): 1.0046, norm:0.9192, tok/sec: 103596.39, flops:90.72, batch-reuse:1
@ 7945 train 4.0749 , allloss: 4.0900, dt: 1278.95ms, fracRes: 0.6035, norm(attn): 0.1465, norm(output): 0.2393, norm(x): 0.6678, norm(y): 1.0047, norm:1.0453, tok/sec: 102484.28, flops:89.74, batch-reuse:1
@ 7946 train 4.1374 , allloss: 4.1524, dt: 1270.70ms, fracRes: 0.6037, norm(attn): 0.1455, norm(output): 0.2373, norm(x): 0.6684, norm(y): 1.0047, norm:0.9685, tok/sec: 103149.14, flops:90.33, batch-reuse:1
@ 7947 train 4.1408 , allloss: 4.1564, dt: 1246.91ms, fracRes: 0.6028, norm(attn): 0.1475, norm(output): 0.2393, norm(x): 0.6701, norm(y): 1.0044, norm:1.2381, tok/sec: 105117.38, flops:92.05, batch-reuse:1
@ 7948 train 4.1318 , allloss: 4.1472, dt: 1254.93ms, fracRes: 0.6034, norm(attn): 0.1475, norm(output): 0.2383, norm(x): 0.6691, norm(y): 1.0045, norm:1.1133, tok/sec: 104445.49, flops:91.46, batch-reuse:1
@ 7949 train 4.1366 , allloss: 4.1518, dt: 1287.93ms, fracRes: 0.6042, norm(attn): 0.1455, norm(output): 0.2363, norm(x): 0.6700, norm(y): 1.0047, norm:1.0849, tok/sec: 101769.60, flops:89.12, batch-reuse:1
@ 7950 train 4.0892 , allloss: 4.1041, dt: 1291.46ms, fracRes: 0.6030, norm(attn): 0.1455, norm(output): 0.2402, norm(x): 0.6688, norm(y): 1.0046, norm:1.0947, tok/sec: 101491.26, flops:88.87, batch-reuse:1
@ 7951 train 4.1273 , allloss: 4.1423, dt: 1295.42ms, fracRes: 0.6023, norm(attn): 0.1465, norm(output): 0.2402, norm(x): 0.6693, norm(y): 1.0046, norm:1.1268, tok/sec: 101181.26, flops:88.60, batch-reuse:1
@ 7952 train 4.0309 , allloss: 4.0457, dt: 1268.94ms, fracRes: 0.6024, norm(attn): 0.1484, norm(output): 0.2393, norm(x): 0.6692, norm(y): 1.0046, norm:1.0700, tok/sec: 103292.28, flops:90.45, batch-reuse:1
@ 7953 train 4.0592 , allloss: 4.0743, dt: 1255.95ms, fracRes: 0.6028, norm(attn): 0.1465, norm(output): 0.2393, norm(x): 0.6696, norm(y): 1.0046, norm:0.9526, tok/sec: 104361.02, flops:91.39, batch-reuse:1
@ 7954 train 3.9892 , allloss: 4.0049, dt: 1257.18ms, fracRes: 0.6030, norm(attn): 0.1465, norm(output): 0.2383, norm(x): 0.6678, norm(y): 1.0049, norm:1.0179, tok/sec: 104258.90, flops:91.30, batch-reuse:1
@ 7955 train 3.9370 , allloss: 3.9543, dt: 1254.92ms, fracRes: 0.6023, norm(attn): 0.1475, norm(output): 0.2393, norm(x): 0.6707, norm(y): 1.0047, norm:1.2790, tok/sec: 104446.44, flops:91.46, batch-reuse:1
@ 7956 train 4.0569 , allloss: 4.0730, dt: 1251.53ms, fracRes: 0.6014, norm(attn): 0.1475, norm(output): 0.2402, norm(x): 0.6667, norm(y): 1.0046, norm:1.0001, tok/sec: 104729.60, flops:91.71, batch-reuse:1
@ 7957 train 4.0648 , allloss: 4.0807, dt: 1261.34ms, fracRes: 0.6023, norm(attn): 0.1475, norm(output): 0.2393, norm(x): 0.6667, norm(y): 1.0047, norm:1.1378, tok/sec: 103914.64, flops:91.00, batch-reuse:1
@ 7958 train 4.0152 , allloss: 4.0300, dt: 1259.88ms, fracRes: 0.6031, norm(attn): 0.1465, norm(output): 0.2383, norm(x): 0.6671, norm(y): 1.0046, norm:1.0955, tok/sec: 104035.44, flops:91.10, batch-reuse:1
@ 7959 train 3.9677 , allloss: 3.9831, dt: 1277.87ms, fracRes: 0.6032, norm(attn): 0.1475, norm(output): 0.2393, norm(x): 0.6702, norm(y): 1.0046, norm:1.2658, tok/sec: 102570.98, flops:89.82, batch-reuse:1
@ 7960 train 3.9762 , allloss: 3.9913, dt: 1259.41ms, fracRes: 0.6037, norm(attn): 0.1475, norm(output): 0.2383, norm(x): 0.6677, norm(y): 1.0047, norm:1.0381, tok/sec: 104074.39, flops:91.14, batch-reuse:1
@ 7961 train 4.0396 , allloss: 4.0546, dt: 1263.86ms, fracRes: 0.6037, norm(attn): 0.1465, norm(output): 0.2393, norm(x): 0.6676, norm(y): 1.0046, norm:1.0498, tok/sec: 103707.49, flops:90.82, batch-reuse:1
@ 7962 train 4.3215 , allloss: 4.3363, dt: 1270.30ms, fracRes: 0.6037, norm(attn): 0.1455, norm(output): 0.2363, norm(x): 0.6645, norm(y): 1.0043, norm:1.4437, tok/sec: 103181.53, flops:90.35, batch-reuse:1
@ 7963 train 4.1100 , allloss: 4.1255, dt: 1261.80ms, fracRes: 0.6034, norm(attn): 0.1455, norm(output): 0.2383, norm(x): 0.6680, norm(y): 1.0045, norm:1.2296, tok/sec: 103877.37, flops:90.96, batch-reuse:1
@ 7964 train 4.0865 , allloss: 4.1011, dt: 1246.91ms, fracRes: 0.6022, norm(attn): 0.1465, norm(output): 0.2402, norm(x): 0.6658, norm(y): 1.0044, norm:0.9988, tok/sec: 105117.20, flops:92.05, batch-reuse:1
@ 7965 train 4.0335 , allloss: 4.0482, dt: 1246.53ms, fracRes: 0.6022, norm(attn): 0.1465, norm(output): 0.2393, norm(x): 0.6654, norm(y): 1.0045, norm:1.0412, tok/sec: 105149.89, flops:92.08, batch-reuse:1
@ 7966 train 4.0103 , allloss: 4.0253, dt: 1259.82ms, fracRes: 0.6030, norm(attn): 0.1465, norm(output): 0.2383, norm(x): 0.6671, norm(y): 1.0046, norm:1.2412, tok/sec: 104040.34, flops:91.11, batch-reuse:1
@ 7967 train 4.0401 , allloss: 4.0552, dt: 1270.62ms, fracRes: 0.6036, norm(attn): 0.1455, norm(output): 0.2363, norm(x): 0.6661, norm(y): 1.0047, norm:1.0305, tok/sec: 103156.24, flops:90.33, batch-reuse:1
@ 7968 train 4.0078 , allloss: 4.0245, dt: 1281.60ms, fracRes: 0.6039, norm(attn): 0.1484, norm(output): 0.2393, norm(x): 0.6721, norm(y): 1.0046, norm:1.0591, tok/sec: 102272.29, flops:89.56, batch-reuse:1
@ 7969 train 3.9759 , allloss: 3.9915, dt: 1266.12ms, fracRes: 0.6033, norm(attn): 0.1484, norm(output): 0.2393, norm(x): 0.6681, norm(y): 1.0046, norm:0.9964, tok/sec: 103522.79, flops:90.65, batch-reuse:1
@ 7970 train 3.9864 , allloss: 4.0013, dt: 1273.39ms, fracRes: 0.6027, norm(attn): 0.1475, norm(output): 0.2373, norm(x): 0.6684, norm(y): 1.0045, norm:1.1221, tok/sec: 102931.58, flops:90.14, batch-reuse:1
@ 7971 train 3.9628 , allloss: 3.9802, dt: 1267.45ms, fracRes: 0.6022, norm(attn): 0.1465, norm(output): 0.2373, norm(x): 0.6656, norm(y): 1.0045, norm:1.1109, tok/sec: 103413.78, flops:90.56, batch-reuse:1
@ 7972 train 4.0099 , allloss: 4.0250, dt: 1272.98ms, fracRes: 0.6019, norm(attn): 0.1465, norm(output): 0.2373, norm(x): 0.6666, norm(y): 1.0046, norm:1.1142, tok/sec: 102964.60, flops:90.16, batch-reuse:1
@ 7973 train 4.0282 , allloss: 4.0439, dt: 1271.54ms, fracRes: 0.6023, norm(attn): 0.1475, norm(output): 0.2402, norm(x): 0.6666, norm(y): 1.0044, norm:1.1306, tok/sec: 103081.02, flops:90.27, batch-reuse:1
@ 7974 train 4.1001 , allloss: 4.1150, dt: 1272.58ms, fracRes: 0.6025, norm(attn): 0.1465, norm(output): 0.2373, norm(x): 0.6647, norm(y): 1.0043, norm:1.0527, tok/sec: 102996.88, flops:90.19, batch-reuse:1
@ 7975 train 3.9754 , allloss: 3.9904, dt: 1233.07ms, fracRes: 0.6028, norm(attn): 0.1465, norm(output): 0.2383, norm(x): 0.6658, norm(y): 1.0044, norm:0.9593, tok/sec: 106296.99, flops:93.08, batch-reuse:1
@ 7976 train 3.9808 , allloss: 3.9957, dt: 1256.44ms, fracRes: 0.6014, norm(attn): 0.1475, norm(output): 0.2412, norm(x): 0.6666, norm(y): 1.0044, norm:0.9882, tok/sec: 104320.45, flops:91.35, batch-reuse:1
@ 7977 train 3.9183 , allloss: 3.9335, dt: 1275.81ms, fracRes: 0.6021, norm(attn): 0.1475, norm(output): 0.2402, norm(x): 0.6648, norm(y): 1.0045, norm:1.0320, tok/sec: 102736.13, flops:89.96, batch-reuse:1
@ 7978 train 4.0283 , allloss: 4.0438, dt: 1246.46ms, fracRes: 0.6030, norm(attn): 0.1475, norm(output): 0.2393, norm(x): 0.6654, norm(y): 1.0044, norm:1.0464, tok/sec: 105155.77, flops:92.08, batch-reuse:1
@ 7979 train 4.1065 , allloss: 4.1216, dt: 1256.24ms, fracRes: 0.6036, norm(attn): 0.1465, norm(output): 0.2373, norm(x): 0.6664, norm(y): 1.0043, norm:1.0800, tok/sec: 104336.68, flops:91.37, batch-reuse:1
@ 7980 train 3.9942 , allloss: 4.0089, dt: 1260.18ms, fracRes: 0.6030, norm(attn): 0.1475, norm(output): 0.2383, norm(x): 0.6668, norm(y): 1.0044, norm:1.0753, tok/sec: 104010.46, flops:91.08, batch-reuse:1
@ 7981 train 4.0438 , allloss: 4.0589, dt: 1270.88ms, fracRes: 0.6018, norm(attn): 0.1484, norm(output): 0.2422, norm(x): 0.6677, norm(y): 1.0044, norm:1.3042, tok/sec: 103135.22, flops:90.31, batch-reuse:1
@ 7982 train 4.0816 , allloss: 4.0971, dt: 1281.13ms, fracRes: 0.6020, norm(attn): 0.1465, norm(output): 0.2383, norm(x): 0.6657, norm(y): 1.0043, norm:1.1388, tok/sec: 102309.81, flops:89.59, batch-reuse:1
@ 7983 train 4.0410 , allloss: 4.0560, dt: 1293.47ms, fracRes: 0.6022, norm(attn): 0.1455, norm(output): 0.2373, norm(x): 0.6661, norm(y): 1.0043, norm:1.0484, tok/sec: 101333.39, flops:88.74, batch-reuse:1
@ 7984 train 3.8890 , allloss: 3.9037, dt: 1268.82ms, fracRes: 0.6027, norm(attn): 0.1465, norm(output): 0.2373, norm(x): 0.6689, norm(y): 1.0046, norm:1.0496, tok/sec: 103302.65, flops:90.46, batch-reuse:1
@ 7985 train 3.9812 , allloss: 3.9959, dt: 1297.66ms, fracRes: 0.6029, norm(attn): 0.1465, norm(output): 0.2373, norm(x): 0.6673, norm(y): 1.0046, norm:1.1279, tok/sec: 101006.34, flops:88.45, batch-reuse:1
@ 7986 train 4.0886 , allloss: 4.1042, dt: 1321.04ms, fracRes: 0.6034, norm(attn): 0.1484, norm(output): 0.2393, norm(x): 0.6687, norm(y): 1.0043, norm:1.2438, tok/sec: 99219.02, flops:86.88, batch-reuse:1
@ 7987 train 4.0909 , allloss: 4.1057, dt: 1325.57ms, fracRes: 0.6031, norm(attn): 0.1465, norm(output): 0.2383, norm(x): 0.6678, norm(y): 1.0043, norm:1.0103, tok/sec: 98879.90, flops:86.59, batch-reuse:1
@ 7988 train 4.0574 , allloss: 4.0726, dt: 1280.73ms, fracRes: 0.6029, norm(attn): 0.1475, norm(output): 0.2402, norm(x): 0.6673, norm(y): 1.0045, norm:1.0856, tok/sec: 102341.33, flops:89.62, batch-reuse:1
@ 7989 train 4.0944 , allloss: 4.1091, dt: 1274.82ms, fracRes: 0.6028, norm(attn): 0.1455, norm(output): 0.2402, norm(x): 0.6676, norm(y): 1.0044, norm:1.0196, tok/sec: 102816.42, flops:90.03, batch-reuse:1
@ 7990 train 4.0175 , allloss: 4.0323, dt: 1312.21ms, fracRes: 0.6024, norm(attn): 0.1465, norm(output): 0.2373, norm(x): 0.6654, norm(y): 1.0045, norm:0.9042, tok/sec: 99886.28, flops:87.47, batch-reuse:1
@ 7991 train 3.9793 , allloss: 3.9946, dt: 1303.32ms, fracRes: 0.6024, norm(attn): 0.1465, norm(output): 0.2383, norm(x): 0.6641, norm(y): 1.0045, norm:0.9323, tok/sec: 100568.01, flops:88.07, batch-reuse:1
@ 7992 train 3.9268 , allloss: 3.9420, dt: 1270.30ms, fracRes: 0.6036, norm(attn): 0.1484, norm(output): 0.2393, norm(x): 0.6675, norm(y): 1.0047, norm:0.9061, tok/sec: 103181.53, flops:90.35, batch-reuse:1
@ 7993 train 4.0311 , allloss: 4.0469, dt: 1260.81ms, fracRes: 0.6037, norm(attn): 0.1465, norm(output): 0.2373, norm(x): 0.6676, norm(y): 1.0046, norm:0.9459, tok/sec: 103958.83, flops:91.04, batch-reuse:1
@ 7994 train 4.1095 , allloss: 4.1249, dt: 1292.75ms, fracRes: 0.6031, norm(attn): 0.1465, norm(output): 0.2383, norm(x): 0.6675, norm(y): 1.0043, norm:1.0342, tok/sec: 101389.75, flops:88.79, batch-reuse:1
@ 7995 train 3.9864 , allloss: 4.0015, dt: 1296.61ms, fracRes: 0.6019, norm(attn): 0.1494, norm(output): 0.2393, norm(x): 0.6696, norm(y): 1.0045, norm:1.0382, tok/sec: 101088.03, flops:88.52, batch-reuse:1
@ 7996 train 3.9052 , allloss: 3.9205, dt: 1261.17ms, fracRes: 0.6024, norm(attn): 0.1465, norm(output): 0.2383, norm(x): 0.6675, norm(y): 1.0044, norm:0.9433, tok/sec: 103928.98, flops:91.01, batch-reuse:1
@ 7997 train 4.0141 , allloss: 4.0291, dt: 1274.72ms, fracRes: 0.6023, norm(attn): 0.1465, norm(output): 0.2393, norm(x): 0.6678, norm(y): 1.0044, norm:0.9938, tok/sec: 102824.17, flops:90.04, batch-reuse:1
@ 7998 train 4.0358 , allloss: 4.0508, dt: 1263.21ms, fracRes: 0.6024, norm(attn): 0.1465, norm(output): 0.2383, norm(x): 0.6684, norm(y): 1.0044, norm:0.9830, tok/sec: 103760.72, flops:90.86, batch-reuse:1
@ 7999 train 4.2577 , allloss: 4.2724, dt: 1280.68ms, fracRes: 0.6025, norm(attn): 0.1475, norm(output): 0.2383, norm(x): 0.6683, norm(y): 1.0043, norm:0.9947, tok/sec: 102345.40, flops:89.62, batch-reuse:1
@ 8000 val 4.1320
@ 8000 train 4.2428 , allloss: 4.2580, dt: 1883.36ms, fracRes: 0.6025, norm(attn): 0.1465, norm(output): 0.2402, norm(x): 0.6694, norm(y): 1.0042, norm:1.0922, tok/sec: 69594.61, flops:60.94, batch-reuse:1
@ 8001 train 4.1866 , allloss: 4.2047, dt: 1267.84ms, fracRes: 0.6031, norm(attn): 0.1484, norm(output): 0.2412, norm(x): 0.6691, norm(y): 1.0041, norm:1.3162, tok/sec: 103382.14, flops:90.53, batch-reuse:1
@ 8002 train 4.2447 , allloss: 4.2607, dt: 1250.98ms, fracRes: 0.6032, norm(attn): 0.1484, norm(output): 0.2383, norm(x): 0.6671, norm(y): 1.0041, norm:1.4688, tok/sec: 104775.70, flops:91.75, batch-reuse:1
@ 8003 train 4.2100 , allloss: 4.2254, dt: 1265.61ms, fracRes: 0.6026, norm(attn): 0.1465, norm(output): 0.2383, norm(x): 0.6645, norm(y): 1.0040, norm:1.0663, tok/sec: 103564.60, flops:90.69, batch-reuse:1
@ 8004 train 4.2001 , allloss: 4.2159, dt: 1263.91ms, fracRes: 0.6025, norm(attn): 0.1475, norm(output): 0.2393, norm(x): 0.6676, norm(y): 1.0042, norm:1.1315, tok/sec: 103703.68, flops:90.81, batch-reuse:1
@ 8005 train 4.1356 , allloss: 4.1510, dt: 1277.97ms, fracRes: 0.6015, norm(attn): 0.1494, norm(output): 0.2402, norm(x): 0.6650, norm(y): 1.0043, norm:1.1890, tok/sec: 102562.46, flops:89.81, batch-reuse:1
@ 8006 train 4.2273 , allloss: 4.2427, dt: 1292.81ms, fracRes: 0.6012, norm(attn): 0.1504, norm(output): 0.2461, norm(x): 0.6702, norm(y): 1.0038, norm:1.2225, tok/sec: 101385.56, flops:88.78, batch-reuse:1
@ 8007 train 4.1886 , allloss: 4.2036, dt: 1281.40ms, fracRes: 0.6019, norm(attn): 0.1484, norm(output): 0.2441, norm(x): 0.6689, norm(y): 1.0040, norm:1.1950, tok/sec: 102287.99, flops:89.57, batch-reuse:1
@ 8008 train 4.2302 , allloss: 4.2453, dt: 1275.28ms, fracRes: 0.6029, norm(attn): 0.1465, norm(output): 0.2422, norm(x): 0.6683, norm(y): 1.0040, norm:1.1449, tok/sec: 102779.09, flops:90.00, batch-reuse:1
@ 8009 train 4.1916 , allloss: 4.2070, dt: 1276.73ms, fracRes: 0.6029, norm(attn): 0.1475, norm(output): 0.2422, norm(x): 0.6715, norm(y): 1.0041, norm:1.1422, tok/sec: 102661.92, flops:89.90, batch-reuse:1
@ 8010 train 4.2650 , allloss: 4.2803, dt: 1286.18ms, fracRes: 0.6032, norm(attn): 0.1475, norm(output): 0.2441, norm(x): 0.6708, norm(y): 1.0041, norm:1.1574, tok/sec: 101908.30, flops:89.24, batch-reuse:1
@ 8011 train 4.2043 , allloss: 4.2194, dt: 1299.32ms, fracRes: 0.6038, norm(attn): 0.1465, norm(output): 0.2412, norm(x): 0.6730, norm(y): 1.0042, norm:1.0783, tok/sec: 100877.33, flops:88.34, batch-reuse:1
@ 8012 train 4.2991 , allloss: 4.3147, dt: 1269.08ms, fracRes: 0.6032, norm(attn): 0.1465, norm(output): 0.2422, norm(x): 0.6740, norm(y): 1.0041, norm:1.2722, tok/sec: 103280.97, flops:90.44, batch-reuse:1
@ 8013 train 4.2010 , allloss: 4.2165, dt: 1258.24ms, fracRes: 0.6026, norm(attn): 0.1484, norm(output): 0.2402, norm(x): 0.6710, norm(y): 1.0042, norm:1.1634, tok/sec: 104170.55, flops:91.22, batch-reuse:1
@ 8014 train 4.1780 , allloss: 4.1937, dt: 1269.88ms, fracRes: 0.6037, norm(attn): 0.1465, norm(output): 0.2432, norm(x): 0.6719, norm(y): 1.0044, norm:1.0261, tok/sec: 103216.24, flops:90.38, batch-reuse:1
@ 8015 train 4.2684 , allloss: 4.2835, dt: 1285.94ms, fracRes: 0.6035, norm(attn): 0.1475, norm(output): 0.2402, norm(x): 0.6712, norm(y): 1.0042, norm:1.1945, tok/sec: 101926.81, flops:89.26, batch-reuse:1
@ 8016 train 4.2483 , allloss: 4.2634, dt: 1258.81ms, fracRes: 0.6030, norm(attn): 0.1475, norm(output): 0.2412, norm(x): 0.6709, norm(y): 1.0044, norm:1.1911, tok/sec: 104123.73, flops:91.18, batch-reuse:1
@ 8017 train 4.1885 , allloss: 4.2035, dt: 1261.11ms, fracRes: 0.6026, norm(attn): 0.1475, norm(output): 0.2402, norm(x): 0.6680, norm(y): 1.0044, norm:1.2031, tok/sec: 103933.77, flops:91.01, batch-reuse:1
@ 8018 train 4.1495 , allloss: 4.1644, dt: 1301.76ms, fracRes: 0.6025, norm(attn): 0.1475, norm(output): 0.2402, norm(x): 0.6682, norm(y): 1.0043, norm:1.4396, tok/sec: 100688.38, flops:88.17, batch-reuse:1
@ 8019 train 4.2479 , allloss: 4.2629, dt: 1268.81ms, fracRes: 0.6022, norm(attn): 0.1465, norm(output): 0.2412, norm(x): 0.6692, norm(y): 1.0043, norm:1.1564, tok/sec: 103303.25, flops:90.46, batch-reuse:1
@ 8020 train 4.2621 , allloss: 4.2776, dt: 1271.06ms, fracRes: 0.6021, norm(attn): 0.1475, norm(output): 0.2432, norm(x): 0.6710, norm(y): 1.0041, norm:1.2405, tok/sec: 103119.84, flops:90.30, batch-reuse:1
@ 8021 train 4.3073 , allloss: 4.3229, dt: 1286.43ms, fracRes: 0.6030, norm(attn): 0.1475, norm(output): 0.2412, norm(x): 0.6705, norm(y): 1.0042, norm:1.3424, tok/sec: 101887.78, flops:89.22, batch-reuse:1
@ 8022 train 4.1458 , allloss: 4.1612, dt: 1268.55ms, fracRes: 0.6028, norm(attn): 0.1475, norm(output): 0.2422, norm(x): 0.6703, norm(y): 1.0041, norm:1.1907, tok/sec: 103324.49, flops:90.48, batch-reuse:1
@ 8023 train 4.1616 , allloss: 4.1780, dt: 1287.42ms, fracRes: 0.6026, norm(attn): 0.1494, norm(output): 0.2422, norm(x): 0.6761, norm(y): 1.0040, norm:1.2884, tok/sec: 101810.01, flops:89.15, batch-reuse:1
@ 8024 train 4.2321 , allloss: 4.2479, dt: 1277.75ms, fracRes: 0.6024, norm(attn): 0.1494, norm(output): 0.2461, norm(x): 0.6720, norm(y): 1.0042, norm:1.1400, tok/sec: 102580.20, flops:89.83, batch-reuse:1
@ 8025 train 4.2387 , allloss: 4.2540, dt: 1273.78ms, fracRes: 0.6024, norm(attn): 0.1465, norm(output): 0.2422, norm(x): 0.6719, norm(y): 1.0041, norm:1.1233, tok/sec: 102900.25, flops:90.11, batch-reuse:1
@ 8026 train 4.2907 , allloss: 4.3063, dt: 1282.73ms, fracRes: 0.6025, norm(attn): 0.1475, norm(output): 0.2402, norm(x): 0.6719, norm(y): 1.0041, norm:1.0326, tok/sec: 102182.06, flops:89.48, batch-reuse:1
@ 8027 train 4.1981 , allloss: 4.2133, dt: 1273.28ms, fracRes: 0.6024, norm(attn): 0.1475, norm(output): 0.2383, norm(x): 0.6693, norm(y): 1.0042, norm:1.1011, tok/sec: 102940.44, flops:90.14, batch-reuse:1
@ 8028 train 4.2967 , allloss: 4.3122, dt: 1253.61ms, fracRes: 0.6026, norm(attn): 0.1484, norm(output): 0.2441, norm(x): 0.6677, norm(y): 1.0042, norm:1.2338, tok/sec: 104556.05, flops:91.56, batch-reuse:1
@ 8029 train 4.0425 , allloss: 4.0575, dt: 1257.60ms, fracRes: 0.6030, norm(attn): 0.1484, norm(output): 0.2393, norm(x): 0.6681, norm(y): 1.0044, norm:1.1604, tok/sec: 104223.66, flops:91.27, batch-reuse:1
@ 8030 train 4.2681 , allloss: 4.2850, dt: 1272.46ms, fracRes: 0.6029, norm(attn): 0.1484, norm(output): 0.2441, norm(x): 0.6718, norm(y): 1.0040, norm:1.2180, tok/sec: 103007.01, flops:90.20, batch-reuse:1
@ 8031 train 4.1048 , allloss: 4.1214, dt: 1261.37ms, fracRes: 0.6041, norm(attn): 0.1475, norm(output): 0.2402, norm(x): 0.6692, norm(y): 1.0042, norm:1.3969, tok/sec: 103912.22, flops:90.99, batch-reuse:1
@ 8032 train 4.1543 , allloss: 4.1699, dt: 1268.28ms, fracRes: 0.6034, norm(attn): 0.1484, norm(output): 0.2402, norm(x): 0.6697, norm(y): 1.0043, norm:1.2442, tok/sec: 103345.93, flops:90.50, batch-reuse:1
@ 8033 train 4.1979 , allloss: 4.2129, dt: 1280.04ms, fracRes: 0.6022, norm(attn): 0.1484, norm(output): 0.2412, norm(x): 0.6688, norm(y): 1.0042, norm:1.0843, tok/sec: 102396.80, flops:89.67, batch-reuse:1
@ 8034 train 4.1944 , allloss: 4.2094, dt: 1276.24ms, fracRes: 0.6038, norm(attn): 0.1475, norm(output): 0.2393, norm(x): 0.6707, norm(y): 1.0042, norm:0.9768, tok/sec: 102702.08, flops:89.93, batch-reuse:1
@ 8035 train 4.2460 , allloss: 4.2608, dt: 1268.75ms, fracRes: 0.6041, norm(attn): 0.1465, norm(output): 0.2402, norm(x): 0.6698, norm(y): 1.0042, norm:1.0464, tok/sec: 103307.87, flops:90.47, batch-reuse:1
@ 8036 train 4.1298 , allloss: 4.1449, dt: 1295.39ms, fracRes: 0.6033, norm(attn): 0.1484, norm(output): 0.2393, norm(x): 0.6675, norm(y): 1.0043, norm:1.0231, tok/sec: 101183.18, flops:88.60, batch-reuse:1
@ 8037 train 4.0915 , allloss: 4.1067, dt: 1293.74ms, fracRes: 0.6030, norm(attn): 0.1484, norm(output): 0.2393, norm(x): 0.6672, norm(y): 1.0044, norm:1.0905, tok/sec: 101312.81, flops:88.72, batch-reuse:1
@ 8038 train 4.0759 , allloss: 4.0915, dt: 1297.84ms, fracRes: 0.6030, norm(attn): 0.1494, norm(output): 0.2393, norm(x): 0.6674, norm(y): 1.0044, norm:1.0537, tok/sec: 100992.04, flops:88.44, batch-reuse:1
@ 8039 train 4.1664 , allloss: 4.1823, dt: 1318.19ms, fracRes: 0.6025, norm(attn): 0.1494, norm(output): 0.2432, norm(x): 0.6683, norm(y): 1.0042, norm:1.1059, tok/sec: 99433.56, flops:87.07, batch-reuse:1
@ 8040 train 4.1807 , allloss: 4.1965, dt: 1304.35ms, fracRes: 0.6021, norm(attn): 0.1484, norm(output): 0.2402, norm(x): 0.6697, norm(y): 1.0042, norm:1.0237, tok/sec: 100488.39, flops:88.00, batch-reuse:1
@ 8041 train 4.2145 , allloss: 4.2295, dt: 1263.61ms, fracRes: 0.6024, norm(attn): 0.1484, norm(output): 0.2412, norm(x): 0.6694, norm(y): 1.0043, norm:1.0837, tok/sec: 103727.86, flops:90.83, batch-reuse:1
@ 8042 train 4.1128 , allloss: 4.1281, dt: 1268.01ms, fracRes: 0.6028, norm(attn): 0.1465, norm(output): 0.2402, norm(x): 0.6676, norm(y): 1.0044, norm:1.2015, tok/sec: 103368.28, flops:90.52, batch-reuse:1
@ 8043 train 4.0645 , allloss: 4.0792, dt: 1263.62ms, fracRes: 0.6016, norm(attn): 0.1484, norm(output): 0.2402, norm(x): 0.6666, norm(y): 1.0042, norm:1.0029, tok/sec: 103727.18, flops:90.83, batch-reuse:1
@ 8044 train 4.0391 , allloss: 4.0543, dt: 1253.64ms, fracRes: 0.6018, norm(attn): 0.1475, norm(output): 0.2402, norm(x): 0.6659, norm(y): 1.0042, norm:1.0805, tok/sec: 104553.15, flops:91.56, batch-reuse:1
@ 8045 train 4.1014 , allloss: 4.1169, dt: 1266.64ms, fracRes: 0.6017, norm(attn): 0.1494, norm(output): 0.2422, norm(x): 0.6641, norm(y): 1.0041, norm:1.0306, tok/sec: 103480.39, flops:90.62, batch-reuse:1
@ 8046 train 4.2429 , allloss: 4.2587, dt: 1271.73ms, fracRes: 0.6034, norm(attn): 0.1475, norm(output): 0.2393, norm(x): 0.6676, norm(y): 1.0042, norm:1.1435, tok/sec: 103065.91, flops:90.25, batch-reuse:1
@ 8047 train 4.1830 , allloss: 4.1983, dt: 1282.90ms, fracRes: 0.6024, norm(attn): 0.1484, norm(output): 0.2402, norm(x): 0.6672, norm(y): 1.0040, norm:1.1373, tok/sec: 102168.23, flops:89.47, batch-reuse:1
@ 8048 train 4.1386 , allloss: 4.1535, dt: 1250.51ms, fracRes: 0.6017, norm(attn): 0.1475, norm(output): 0.2393, norm(x): 0.6660, norm(y): 1.0041, norm:1.0021, tok/sec: 104814.80, flops:91.78, batch-reuse:1
@ 8049 train 4.1567 , allloss: 4.1715, dt: 1272.06ms, fracRes: 0.6018, norm(attn): 0.1465, norm(output): 0.2393, norm(x): 0.6652, norm(y): 1.0041, norm:1.0231, tok/sec: 103038.98, flops:90.23, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8281, 0.1729, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7539, 0.0786, 0.1660, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8320, 0.0547, 0.1084, 0.0061, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6836, 0.0334, 0.0620, 0.0591, 0.1621, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7930, 0.0601, 0.0500, 0.0287, 0.0417, 0.0247, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3652, 0.0376, 0.0258, 0.1006, 0.2715, 0.0898, 0.1094, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2910, 0.1865, 0.2383, 0.0083, 0.0469, 0.0447, 0.0520, 0.1318, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8008, 0.0559, 0.0540, 0.0021, 0.0148, 0.0045, 0.0327, 0.0150, 0.0187, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2793, 0.1069, 0.2275, 0.0066, 0.0227, 0.0210, 0.0413, 0.1143, 0.0262, 0.1533, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3984, 0.0732, 0.1396, 0.0148, 0.0366, 0.0090, 0.0181, 0.0515, 0.0374, 0.0791, 0.1416, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0439, 0.0134, 0.0127, 0.2656, 0.0771, 0.0347, 0.0596, 0.1250, 0.2334, 0.0825, 0.0430, 0.0096, 0.0000, 0.0000, 0.0000],
        [0.0510, 0.0483, 0.0476, 0.0535, 0.0664, 0.0728, 0.1030, 0.0859, 0.0806, 0.1533, 0.0742, 0.0962, 0.0669, 0.0000, 0.0000],
        [0.5547, 0.0703, 0.0576, 0.0027, 0.0190, 0.0070, 0.0374, 0.0167, 0.0242, 0.0139, 0.0466, 0.0466, 0.0801, 0.0248, 0.0000],
        [0.1104, 0.0815, 0.1084, 0.0737, 0.0364, 0.0068, 0.0100, 0.1338, 0.0200, 0.0801, 0.0320, 0.0815, 0.1475, 0.0236, 0.0542]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0035, -0.0051, -0.0032,  ..., -0.0371,  0.0160,  0.0057],
        [-0.0473,  0.0025, -0.0057,  ...,  0.0053,  0.0065,  0.0031],
        [ 0.0299,  0.0373, -0.0044,  ..., -0.0235,  0.0228, -0.0048],
        ...,
        [ 0.0319,  0.0202,  0.0101,  ..., -0.0376,  0.0126,  0.0209],
        [-0.0499,  0.0039, -0.0315,  ...,  0.0101, -0.0022, -0.0161],
        [-0.0224,  0.0069, -0.0191,  ...,  0.0119, -0.0313, -0.0077]], device='cuda:0', requires_grad=True)
K: tensor([ 1.4062,  0.5625,  0.3262,  0.6484,  0.7617, -0.3125,  0.2793, -0.9609, -0.6992, -0.3145, -0.0815, -0.3574,  0.1436, -0.9688, -0.0845, -0.5703, -0.1235,  0.3184, -1.3984,  0.5312,  1.1094,  0.8789, -0.8047,  0.7891, -0.5508, -0.7305, -0.8828,  0.0396,  0.5273, -0.1123,  1.5312, -0.1201,
         1.0156,  0.1426,  0.3066,  1.5391, -1.5859,  0.3145, -0.1846, -2.3906,  0.3906,  0.6133,  0.1318,  1.3438,  0.0928,  0.1001, -0.0757,  0.6328,  1.0547, -0.5938,  0.1758,  0.4219, -1.6719,  0.1216,  1.5469, -0.7148, -0.7812,  0.3867,  0.8203, -0.3086,  0.3594, -0.4492, -0.1865, -0.0623],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0309, -0.0017, -0.0123,  ...,  0.0095, -0.0044, -0.0179],
        [ 0.0276, -0.0165,  0.0141,  ...,  0.0050,  0.0389,  0.0080],
        [-0.0536,  0.0422,  0.0053,  ..., -0.0179, -0.0351, -0.0445],
        ...,
        [ 0.0101,  0.0052,  0.0275,  ...,  0.0206,  0.0170,  0.0210],
        [ 0.0159, -0.0101,  0.0304,  ...,  0.0293,  0.0080,  0.0118],
        [ 0.0193, -0.0078,  0.0299,  ..., -0.0206,  0.0239,  0.0064]], device='cuda:0', requires_grad=True)
Q: tensor([-0.0791, -0.2852, -0.7812, -0.8789,  0.0154, -0.1406, -2.4375, -0.5820,  0.3086,  0.8828, -1.1172, -0.4941, -0.0588, -0.9336, -0.3105,  0.0654,  0.0386, -0.2236,  0.3867,  0.6719,  0.2217,  0.2168,  1.0078,  0.4180,  0.6719, -0.0552, -0.8945, -1.5391, -0.0417,  0.1670,  0.3750,  0.5273,
        -0.1104, -1.0391,  0.1230, -0.2695,  0.8828,  0.8164, -0.3281,  1.3594,  1.7891,  0.7148,  0.5781,  0.3984, -0.5195,  1.0156, -0.9375,  0.3359, -0.3945,  0.4902, -1.6484, -0.5508,  0.2158, -1.2734, -0.2773, -0.4023,  0.2930, -1.1484,  0.1084, -0.1533, -0.7344,  0.0981,  0.4023,  1.2109],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -1.5625, -1.3594, -1.7500, -2.8750, -2.9531, -1.3047, -0.4902, -2.6875, -1.9766, -2.8438, -1.8984,  0.2217, -2.6094, -2.0156],
        [ 0.0000, -2.2656, -1.5156, -1.3203, -0.8477, -2.4531, -2.3438, -0.7227, -0.6875, -0.5391, -0.1367, -0.7969, -0.6094, -0.2930, -0.7305],
        [ 0.0000, -2.7188, -2.0312, -4.9062, -2.4219, -3.8594, -3.3125, -3.2812, -2.7188, -3.0625, -0.4570, -1.2578, -2.5000, -2.4219, -1.9609],
        [ 0.0000, -3.0156, -2.3906, -2.4531, -1.4453, -3.7656, -3.1719, -2.5938, -1.0781, -1.4531, -0.5469, -1.6953, -1.9297, -0.5117, -1.1016],
        [ 0.0000, -2.5781, -2.7656, -3.3281, -2.9531, -3.4688, -1.4062, -2.3750, -2.1094, -3.4844, -2.5938, -2.9062, -1.8750, -1.7188, -2.4688],
        [ 0.0000, -2.2812, -2.6562, -1.2891, -0.3008, -1.4062, -1.2109, -1.9688,  0.8945, -0.3789,  1.2578, -0.9453, -2.1719,  1.1328, -0.1572],
        [ 0.0000, -0.4473, -0.2031, -3.5625, -1.8281, -1.8750, -1.7266, -0.7969, -1.8281, -0.5078, -0.5195,  0.1543,  0.0776, -2.2969, -0.2891],
        [ 0.0000, -2.6719, -2.7031, -5.9688, -3.9844, -5.1875, -3.2031, -3.9844, -3.7656, -4.2812, -2.6719, -2.6875, -2.2500, -3.7656, -2.8750],
        [ 0.0000, -0.9609, -0.2061, -3.7500, -2.5156, -2.5938, -1.9141, -0.8984, -2.3594, -0.6016, -0.9141,  0.1904,  0.3750, -2.6562, -0.2002],
        [ 0.0000, -1.6953, -1.0469, -3.2969, -2.3906, -3.7812, -3.0938, -2.0469, -2.3750, -1.6172, -1.0312, -0.6055, -1.1406, -2.1406, -1.0000],
        [ 0.0000, -1.1875, -1.2422,  1.7969,  0.5625, -0.2383,  0.3027,  1.0469,  1.6641,  0.6289, -0.0238, -1.5156,  0.1182,  1.7109,  0.3301],
        [ 0.0000, -0.0527, -0.0703,  0.0481,  0.2656,  0.3535,  0.6992,  0.5195,  0.4570,  1.1016,  0.3750,  0.6367,  0.2715,  0.3906,  0.6875],
        [ 0.0000, -2.0625, -2.2656, -5.3125, -3.3750, -4.3750, -2.7031, -3.5000, -3.1250, -3.6875, -2.4688, -2.4688, -1.9297, -3.1094, -2.5938],
        [ 0.0000, -0.3008, -0.0194, -0.4043, -1.1094, -2.7812, -2.4062,  0.1953, -1.7031, -0.3203, -1.2344, -0.3047,  0.2891, -1.5469, -0.7148]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8484],
        [0.8275],
        [0.8551],
        [0.6015],
        [0.7046],
        [0.5589],
        [0.5109],
        [0.5882],
        [0.4993],
        [0.3134],
        [0.1560],
        [0.1687],
        [0.3210],
        [0.1714]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9375,     0.0615,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6211,     0.3438,     0.0356,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4707,     0.3945,     0.1016,     0.0334,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3301,     0.1494,     0.0281,     0.0540,     0.4395,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3945,     0.2100,     0.0168,     0.0243,     0.1025,     0.2520,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1416,     0.2412,     0.0100,     0.0233,     0.1152,     0.4004,     0.0679,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2656,     0.1318,     0.0208,     0.0261,     0.0483,     0.2969,     0.1348,     0.0757,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1621,     0.0525,     0.0059,     0.0042,     0.0444,     0.1865,     0.2031,     0.0273,     0.3145,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1729,     0.0879,     0.0177,     0.0245,     0.0171,     0.1270,     0.0378,     0.1689,     0.3086,     0.0374,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1445,     0.0178,     0.0010,     0.0025,     0.0308,     0.0591,     0.0623,     0.0051,     0.1797,     0.0075,     0.4902,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1299,     0.0781,     0.0306,     0.0195,     0.0327,     0.1191,     0.2012,     0.1206,     0.0386,     0.0811,     0.1299,     0.0194,     0.0000,     0.0000,     0.0000],
        [    0.0292,     0.0125,     0.0062,     0.0187,     0.0131,     0.1123,     0.0583,     0.0898,     0.1338,     0.0918,     0.2109,     0.0332,     0.1904,     0.0000,     0.0000],
        [    0.1250,     0.0139,     0.0016,     0.0018,     0.0099,     0.0613,     0.0967,     0.0090,     0.0947,     0.0096,     0.2227,     0.0139,     0.0292,     0.3105,     0.0000],
        [    0.0608,     0.0195,     0.0015,     0.0020,     0.0080,     0.0703,     0.0564,     0.0280,     0.0938,     0.0164,     0.1680,     0.0366,     0.1128,     0.2969,     0.0292]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0338, -0.0181, -0.0171,  ..., -0.0174, -0.0239,  0.0135],
        [-0.0203,  0.0192, -0.0184,  ...,  0.0139, -0.0006, -0.0550],
        [ 0.0199,  0.0226,  0.0156,  ...,  0.0135,  0.0297,  0.0201],
        ...,
        [ 0.0053, -0.0149,  0.0299,  ...,  0.0390, -0.0191, -0.0185],
        [-0.0179, -0.0108,  0.0084,  ...,  0.0111,  0.0135, -0.0081],
        [ 0.0299,  0.0423,  0.0113,  ..., -0.0061, -0.0158,  0.0237]], device='cuda:0', requires_grad=True)
K: tensor([ 2.8594, -0.9180, -2.0156, -1.3125, -1.5391, -1.3750, -0.2695,  0.1934,  0.6523,  0.9531,  1.1016,  1.7812, -2.1250,  1.1484,  0.7070, -3.3125,  0.2100, -0.8750,  0.3926,  1.8125, -0.6016,  1.8359,  1.5703, -2.9844,  0.5078, -1.2500, -2.3594,  0.6133,  1.1562, -0.9180,  3.5312,  1.3984,
        -1.9766, -0.3984, -3.0312,  0.5312,  1.0391,  2.6094, -0.5078,  1.5391,  2.7500, -0.3789, -0.9414,  2.8750,  1.5781,  0.0087, -1.9062, -3.2656,  1.8438,  1.0625, -2.2031,  3.1562, -0.9766, -0.1084,  0.2812,  0.7930,  2.0625,  1.1484, -1.6016,  2.1875,  0.3984,  2.1406,  3.6719, -0.7227],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0215, -0.0027, -0.0119,  ...,  0.0022,  0.0179, -0.0081],
        [ 0.0159,  0.0037, -0.0527,  ..., -0.0122, -0.0062, -0.0150],
        [ 0.0464,  0.0105,  0.0293,  ..., -0.0200,  0.0275,  0.0115],
        ...,
        [-0.0271, -0.0153,  0.0106,  ...,  0.0136, -0.0035, -0.0403],
        [ 0.0358,  0.0143, -0.0058,  ...,  0.0002, -0.0044, -0.0104],
        [ 0.0046, -0.0292, -0.0179,  ...,  0.0118, -0.0047,  0.0148]], device='cuda:0', requires_grad=True)
Q: tensor([-1.3828, -0.3750, -1.0938, -1.3828,  0.8555, -0.8359, -0.5703,  0.7812,  0.5273,  0.2812,  0.1060, -0.9258,  0.9297, -1.3125, -0.1338,  1.6328, -2.1719,  0.0903, -2.4531, -0.8516, -0.7617, -0.1582, -1.2344,  2.3281, -0.5781,  0.2383,  1.8516, -1.2422, -0.9648,  0.0081, -0.3066, -1.8203,
        -1.4297,  0.5781,  0.2754,  0.8984,  1.5000,  0.2773,  1.1797,  0.9688,  0.8477,  0.2715, -1.1562,  0.3691,  1.0938, -2.0938,  1.3906, -2.0781,  1.5547,  1.1016, -0.1187,  0.0518, -1.6484, -1.9375, -0.4844,  1.0703,  0.7422,  0.8594,  1.4219,  0.8125, -1.0156,  0.4258, -0.0120, -0.8203],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -2.7188,     -5.9688,     -6.7188,     -4.5312,     -3.6562,     -4.6562,     -7.1875,     -4.5625,     -7.5625,     -5.1875,     -6.8750,     -7.1562,     -4.3438,     -4.2812],
        [     0.0000,     -0.5898,     -2.8594,     -3.4531,     -2.4375,     -0.8203,     -1.3672,     -1.5859,     -1.7969,     -1.5312,     -1.6250,     -1.5547,     -1.0391,     -1.4062,     -1.0234],
        [     0.0000,     -0.1797,     -1.5391,     -2.6406,     -1.6562,     -1.1875,     -1.8203,     -2.2031,     -2.4062,     -1.8516,     -1.8984,     -1.9688,     -1.9375,     -2.0625,      0.3027],
        [     0.0000,     -0.7930,     -2.4688,     -1.8125,      0.2871,      0.9102,      0.5625,     -0.5898,      2.5469,     -0.6250,      2.8281,     -0.5508,      0.4844,      3.8906,      0.8711],
        [     0.0000,     -0.6289,     -3.1562,     -2.7812,     -1.3516,     -0.4492,     -0.5000,     -1.2812,     -0.1338,     -0.9609,      0.6484,     -0.6523,     -0.2695,      0.7500,     -0.0059],
        [     0.0000,      0.5312,     -2.6562,     -1.8047,     -0.2051,      1.0391,     -0.7344,     -0.6562,      2.1250,     -1.8281,      0.5391,     -1.0469,      0.4609,      3.0156,      0.2129],
        [     0.0000,     -0.7031,     -2.5469,     -2.3281,     -1.7109,      0.1069,     -0.6797,     -1.2578,      0.2832,     -1.6641,      0.5781,     -2.0469,      0.0050,      1.2109,     -0.6680],
        [     0.0000,     -1.1250,     -3.3125,     -3.6406,     -1.2969,      0.1387,      0.2266,     -1.7812,      0.6602,     -2.3281,      1.2500,     -1.3047,     -0.6562,      1.9375,      0.4727],
        [     0.0000,     -0.6758,     -2.2812,     -1.9531,     -2.3125,     -0.3105,     -1.5156,     -0.0239,      0.5781,     -1.5312,     -0.7031,     -0.2480,      1.0312,      1.1719,     -1.6719],
        [     0.0000,     -2.0938,     -5.0000,     -4.0625,     -1.5469,     -0.8906,     -0.8438,     -3.3438,      0.2207,     -2.9531,      1.2188,     -2.2812,     -2.0156,      1.5703,     -1.0625],
        [     0.0000,     -0.5078,     -1.4453,     -1.8984,     -1.3750,     -0.0830,      0.4395,     -0.0703,     -1.2109,     -0.4707,     -0.0010,     -1.8984,     -0.1011,     -0.6328,      0.5273],
        [     0.0000,     -0.8516,     -1.5547,     -0.4492,     -0.8047,      1.3438,      0.6914,      1.1250,      1.5234,      1.1406,      1.9766,      0.1260,      1.8750,      2.7344,      1.6094],
        [     0.0000,     -2.2031,     -4.3438,     -4.2500,     -2.5312,     -0.7148,     -0.2598,     -2.6406,     -0.2812,     -2.5625,      0.5742,     -2.2031,     -1.4531,      0.9102,     -0.6719],
        [     0.0000,     -1.1406,     -3.7188,     -3.4375,     -2.0312,      0.1475,     -0.0767,     -0.7773,      0.4336,     -1.3125,      1.0156,     -0.5078,      0.6133,      1.5859,     -0.7383]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8577],
        [0.4837],
        [0.4161],
        [0.5535],
        [0.3818],
        [0.2904],
        [0.2409],
        [0.2668],
        [0.2604],
        [0.3149],
        [0.1590],
        [0.1232],
        [0.2167],
        [0.2058]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0008,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9844,     0.0054,     0.0118,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0007,     0.0005,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0007,     0.0012,     0.0002,     0.0009,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0007,     0.0015,     0.0002,     0.0004,     0.0007,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9727,     0.0051,     0.0089,     0.0019,     0.0010,     0.0038,     0.0082,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8828,     0.0084,     0.0179,     0.0049,     0.0027,     0.0090,     0.0098,     0.0659,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0003,     0.0004,     0.0001,     0.0001,     0.0004,     0.0006,     0.0005,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0002,     0.0002,     0.0001,     0.0000,     0.0001,     0.0003,     0.0003,     0.0001,     0.0004,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9844,     0.0021,     0.0034,     0.0009,     0.0003,     0.0013,     0.0020,     0.0049,     0.0013,     0.0011,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9453,     0.0028,     0.0040,     0.0012,     0.0013,     0.0018,     0.0041,     0.0075,     0.0027,     0.0022,     0.0003,     0.0269,     0.0000,     0.0000,     0.0000],
        [    0.9609,     0.0007,     0.0013,     0.0006,     0.0003,     0.0010,     0.0015,     0.0043,     0.0011,     0.0030,     0.0001,     0.0079,     0.0183,     0.0000,     0.0000],
        [    0.9922,     0.0003,     0.0004,     0.0001,     0.0001,     0.0004,     0.0005,     0.0006,     0.0003,     0.0003,     0.0000,     0.0009,     0.0018,     0.0003,     0.0000],
        [    0.9922,     0.0006,     0.0009,     0.0002,     0.0005,     0.0006,     0.0011,     0.0010,     0.0005,     0.0003,     0.0000,     0.0015,     0.0013,     0.0004,     0.0006]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0075, -0.0059,  0.0260,  ..., -0.0170, -0.0028, -0.0127],
        [ 0.0378, -0.0427, -0.0131,  ..., -0.0089, -0.0203, -0.0366],
        [ 0.0469, -0.0355,  0.0342,  ..., -0.0105, -0.0136,  0.0062],
        ...,
        [ 0.0326,  0.0192, -0.0249,  ...,  0.0005,  0.0193,  0.0164],
        [ 0.0151,  0.0212, -0.0084,  ..., -0.0153, -0.0416, -0.0215],
        [ 0.0208, -0.0102,  0.0052,  ..., -0.0033, -0.0131,  0.0132]], device='cuda:0', requires_grad=True)
K: tensor([-1.1641, -0.5859, -1.0234, -0.0493, -1.8203,  2.3125, -1.4141,  2.4062, -1.7500, -1.3281,  1.1641,  0.4512, -1.7969, -1.3594, -1.5078,  0.8633,  1.1953,  2.6250, -1.8906,  1.0703,  2.5000,  0.1982, -1.3281, -0.3047,  1.5625, -1.1016,  0.2637, -1.9453,  1.7812,  0.7539,  1.0938,  2.5156,
        -0.8828,  2.0938,  2.0312, -0.8164, -1.6719,  1.7500,  1.3828, -1.5078,  2.2031, -2.7656,  0.0593,  0.8125, -0.0952,  2.2812, -1.3906, -2.9375, -0.0129,  2.7188, -1.3516, -1.3047,  1.8438,  0.3477,  1.8750, -1.2188, -1.5781, -2.4219, -1.9766, -2.3594, -2.7656, -1.4688,  1.6484,  0.8047],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0067,  0.0263,  0.0253,  ..., -0.0182,  0.0455, -0.0194],
        [-0.0044,  0.0472,  0.0017,  ...,  0.0232,  0.0232, -0.0120],
        [-0.0220, -0.0056,  0.0167,  ..., -0.0156,  0.0567, -0.0363],
        ...,
        [ 0.0186, -0.0112,  0.0127,  ..., -0.0243, -0.0027, -0.0053],
        [ 0.0096,  0.0095,  0.0099,  ...,  0.0242,  0.0187, -0.0083],
        [ 0.0126, -0.0300, -0.0199,  ...,  0.0300,  0.0260,  0.0066]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.8789,  1.0625, -1.1172,  0.5547, -0.1660, -0.6445,  0.5859,  0.0121, -0.2910,  0.4844, -0.3145,  0.2871,  0.4863,  1.4453,  0.5586, -1.4609, -0.6758, -2.0781,  1.2188,  0.0457,  0.0425,  0.7695,  0.7539,  0.3438, -0.0052,  0.0898,  0.6875,  0.1099, -0.7266, -1.0391,  0.0767, -0.2256,
        -0.1377, -1.0625, -0.6016,  0.0908,  1.2422, -0.7305, -0.0815, -0.1719, -1.9062,  1.6250,  0.1592,  0.0581,  0.2930, -0.4766,  0.9180,  0.0693, -1.4844, -0.9062,  0.6016, -0.0297, -0.2100, -0.6328, -0.2637,  0.6953, -0.4512,  1.0781,  1.3984,  2.0469,  1.0781,  0.5117, -1.6484, -0.1777],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000,  -7.0938,  -6.8125,  -8.3750,  -8.1875,  -7.3125,  -6.9375,  -6.5625,  -7.6562,  -7.9688,  -9.6875,  -5.9688,  -6.4375,  -7.9062,  -7.4062],
        [  0.0000,  -5.1875,  -4.4062,  -5.8438,  -6.6875,  -5.5938,  -5.1875,  -4.0312,  -5.7188,  -5.3750,  -7.5625,  -4.2188,  -4.3125,  -5.8750,  -5.2500],
        [  0.0000,  -7.2188,  -7.5000,  -8.4375,  -9.5000,  -8.0625,  -7.4375,  -7.3750,  -8.5625,  -8.1875, -10.3750,  -6.7812,  -7.2188,  -8.7500,  -7.7500],
        [  0.0000,  -7.2812,  -6.7188,  -8.4375,  -7.0625,  -6.9375,  -6.2188,  -5.9062,  -7.0312,  -7.5938,  -9.3125,  -6.0000,  -5.6875,  -7.1562,  -6.8750],
        [  0.0000,  -7.2500,  -6.5000,  -8.7500,  -7.7188,  -7.2188,  -6.0312,  -6.3125,  -7.6562,  -8.1250,  -9.8125,  -6.1250,  -6.1562,  -7.9375,  -7.0312],
        [  0.0000,  -5.2500,  -4.6875,  -6.2188,  -6.8438,  -5.5625,  -4.7812,  -4.1562,  -5.4375,  -6.4375,  -8.0000,  -3.9219,  -3.9688,  -5.5625,  -5.4375],
        [  0.0000,  -4.6562,  -3.8906,  -5.1875,  -5.8125,  -4.5938,  -4.5000,  -2.5938,  -4.3438,  -3.8750,  -6.7500,  -2.7500,  -2.3438,  -4.4062,  -4.4688],
        [  0.0000,  -8.1250,  -7.7812,  -9.1875,  -9.5000,  -7.9375,  -7.5000,  -7.5938,  -8.1250,  -8.6250, -11.1250,  -7.1250,  -6.6250,  -8.4375,  -8.1250],
        [  0.0000,  -8.3750,  -8.4375,  -9.4375, -10.0000,  -8.8750,  -8.2500,  -8.0625,  -9.1875,  -7.7188, -11.2500,  -6.9375,  -7.5000,  -9.2500,  -9.1250],
        [  0.0000,  -6.1562,  -5.6875,  -7.0312,  -8.1250,  -6.6250,  -6.2188,  -5.2812,  -6.6250,  -6.7812,  -9.0000,  -4.9062,  -4.8750,  -6.7500,  -6.5312],
        [  0.0000,  -5.8125,  -5.4688,  -6.6562,  -6.5938,  -6.2812,  -5.4688,  -4.8438,  -5.8750,  -6.0625,  -8.1875,  -3.5625,  -4.1250,  -6.0625,  -6.3125],
        [  0.0000,  -7.1875,  -6.5625,  -7.4062,  -8.0000,  -6.8750,  -6.4688,  -5.4062,  -6.7500,  -5.7812,  -9.4375,  -4.8125,  -3.9531,  -6.8750,  -7.3750],
        [  0.0000,  -8.1250,  -7.7500,  -9.0000,  -9.5625,  -7.8438,  -7.5625,  -7.4375,  -8.0000,  -8.1250, -11.0625,  -6.9688,  -6.2812,  -8.2500,  -8.1875],
        [  0.0000,  -7.4062,  -7.0000,  -8.4375,  -7.5938,  -7.4375,  -6.8125,  -6.8438,  -7.5000,  -8.1875,  -9.9375,  -6.5000,  -6.6562,  -7.8438,  -7.3750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9902],
        [0.9967],
        [0.9997],
        [0.9961],
        [0.9980],
        [0.9938],
        [0.9668],
        [0.9987],
        [0.9993],
        [0.9980],
        [0.9909],
        [0.9961],
        [0.9987],
        [0.9987]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0737,     0.9258,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0610,     0.5273,     0.4121,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0669,     0.5039,     0.3398,     0.0913,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0918,     0.3555,     0.0825,     0.0405,     0.4316,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0310,     0.4375,     0.0786,     0.0461,     0.2988,     0.1084,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0243,     0.2129,     0.0513,     0.0325,     0.1982,     0.0221,     0.4590,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0236,     0.1055,     0.0366,     0.0070,     0.0515,     0.0288,     0.5977,     0.1484,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0403,     0.2246,     0.0097,     0.0033,     0.0977,     0.0151,     0.5469,     0.0227,     0.0417,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0136,     0.0698,     0.0254,     0.0055,     0.0610,     0.0283,     0.2617,     0.1216,     0.1348,     0.2793,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0366,     0.0510,     0.0159,     0.0037,     0.0410,     0.0150,     0.3340,     0.0571,     0.0493,     0.3594,     0.0369,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0172,     0.0364,     0.0215,     0.0049,     0.0244,     0.0103,     0.1875,     0.0737,     0.0437,     0.1699,     0.0693,     0.3398,     0.0000,     0.0000,     0.0000],
        [    0.0200,     0.0452,     0.0129,     0.0023,     0.0131,     0.0090,     0.1387,     0.0552,     0.0415,     0.1289,     0.0942,     0.2773,     0.1611,     0.0000,     0.0000],
        [    0.0376,     0.0991,     0.0041,     0.0010,     0.0312,     0.0050,     0.1963,     0.0082,     0.0138,     0.0776,     0.3086,     0.1016,     0.0547,     0.0605,     0.0000],
        [    0.0060,     0.0177,     0.0047,     0.0017,     0.0107,     0.0032,     0.0342,     0.0129,     0.0212,     0.0349,     0.0240,     0.1201,     0.1143,     0.0903,     0.5039]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0029,  0.0050, -0.0005,  ..., -0.0320, -0.0068, -0.0298],
        [-0.0500,  0.0015,  0.0003,  ...,  0.0077, -0.0064,  0.0020],
        [-0.0483, -0.0152,  0.0503,  ..., -0.0160, -0.0199, -0.0252],
        ...,
        [-0.0063, -0.0225, -0.0105,  ..., -0.0336, -0.0425, -0.0518],
        [-0.0260, -0.0275, -0.0244,  ..., -0.0054, -0.0164,  0.0420],
        [ 0.0006,  0.0183,  0.0149,  ..., -0.0110,  0.0125, -0.0103]], device='cuda:0', requires_grad=True)
K: tensor([-1.8359, -1.8047, -0.9023,  0.2031, -0.5625, -2.0156, -1.5547,  0.6484,  0.3613, -2.0312, -0.0432, -2.0781,  2.5000, -1.8828, -0.4062,  2.0938,  2.3125, -0.3145,  0.7422, -0.0371,  1.0938, -1.2656,  0.8320, -1.7969, -1.3047,  0.8438, -0.5000,  1.7266,  0.3027,  1.8125, -1.0703, -2.0781,
        -1.0938, -1.1172,  1.1250, -1.2500,  2.6562,  0.2637, -1.3984,  0.4648, -2.4062,  1.3359,  0.7344,  2.0938,  0.6758, -0.0041, -1.9844, -0.6719,  1.7734,  0.4121,  0.8711, -0.3984, -0.3574, -2.2344, -1.8750, -1.9688,  2.2969, -0.9375, -0.7422,  1.5391, -0.3848, -1.0547,  1.3125, -0.8906],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[    -0.0122,     -0.0063,      0.0170,  ...,      0.0249,     -0.0199,     -0.0151],
        [     0.0369,     -0.0066,      0.0171,  ...,     -0.0079,      0.0261,      0.0194],
        [    -0.0196,      0.0124,      0.0468,  ...,      0.0198,      0.0278,     -0.0084],
        ...,
        [     0.0194,     -0.0000,     -0.0284,  ...,     -0.0057,      0.0040,     -0.0055],
        [    -0.0140,      0.0409,     -0.0141,  ...,      0.0103,      0.0032,     -0.0322],
        [    -0.0040,     -0.0074,     -0.0052,  ...,      0.0127,      0.0036,     -0.0038]], device='cuda:0', requires_grad=True)
Q: tensor([-0.0284, -1.0547, -1.1484,  1.4531, -2.2969, -0.6016, -0.0461, -0.0874,  0.1973, -0.5586, -0.6562,  0.2559, -2.1094, -1.8828,  1.8750, -0.1328, -1.1094, -0.3691,  0.4336, -0.8398, -0.9453,  2.0000, -2.0781, -1.7500, -0.6602, -1.1484,  2.2344,  3.4688, -2.7344,  1.0625,  0.0282, -1.3750,
        -2.8125,  1.2891, -2.0625, -1.4688,  2.7656, -1.0469, -2.1406,  0.6875, -0.6523, -0.6094,  2.3750, -0.2676, -0.9492, -2.2500, -0.8828, -2.7500,  1.4062,  1.6328,  1.0312,  0.5703, -0.9492, -1.0000,  0.1338, -1.2656, -0.5352,  0.3457, -0.9570,  0.9492, -1.4766,  1.6406,  0.4434, -2.4531],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      2.5312,      1.9766,      1.5469,      3.6250,      1.8359,      4.4375,      3.2656,      3.4219,      3.6406,      3.3125,      4.2188,      4.4062,      4.4375,      5.9688],
        [     0.0000,      2.1562,      1.9062,      1.0391,      2.3438,      1.4766,      3.7812,      3.1562,      2.6562,      3.6562,      2.7344,      4.5625,      4.5625,      3.7812,      5.5312],
        [     0.0000,      2.0156,      1.6250,      0.3086,      2.0312,      1.8203,      3.3438,      2.7344,      2.7812,      4.5938,      3.9375,      5.6875,      5.1562,      4.3438,      6.5938],
        [     0.0000,      1.3516,     -0.1069,     -0.8164,      1.5469,     -0.0386,      2.4844,      1.4375,      1.3438,      2.2188,      1.4375,      2.3750,      2.4062,      2.5938,      4.3750],
        [     0.0000,      2.6406,      0.9297,      0.4004,      2.2656,      1.2500,      3.8906,      2.6562,      2.8281,      3.9375,      4.7188,      4.5000,      4.1562,      4.4688,      7.4062],
        [     0.0000,      2.1719,      0.7461,      0.2910,      2.0938,     -0.0967,      2.9375,      2.6875,      1.8594,      2.7500,     -0.0796,      3.8594,      4.1250,      3.0625,      6.7188],
        [     0.0000,      1.5000,      0.4414,     -1.2188,      0.7812,      0.2031,      3.2344,      1.8438,      1.5625,      3.1875,      2.3906,      4.0625,      3.3906,      2.9688,      6.4062],
        [     0.0000,      1.7188,     -1.4219,     -2.5000,      0.8906,     -0.9805,      2.6094,     -0.5703,      0.0359,      1.7891,      3.1562,      1.9766,      1.2500,      1.5234,      4.9375],
        [     0.0000,      1.6328,      0.6211,     -0.9102,      1.5000,      0.7344,      2.9531,      2.1875,      2.2969,      3.0156,      2.7031,      4.0938,      3.9844,      3.9219,      6.5938],
        [     0.0000,      0.3359,     -0.8359,     -2.2812,      0.1123,     -0.8906,      2.2188,      0.4473,      0.2988,      2.2812,      0.0052,      2.7344,      2.2656,      1.6016,      6.2188],
        [     0.0000,      0.7461,      0.2227,     -1.2578,      0.3477,     -0.5156,      2.3906,      1.4531,      0.9336,      2.2969,      1.3906,      2.9844,      3.0781,      2.4219,      4.8125],
        [     0.0000,      0.8164,     -0.4316,     -2.1562,     -0.4219,     -0.7969,      1.9375,      1.0156,      0.7305,      1.8672,      1.5469,      2.6250,      2.0938,      2.1406,      5.5312],
        [     0.0000,      0.9688,     -2.2188,     -3.6406,     -0.1865,     -2.0156,      1.6562,     -1.5234,     -1.0000,      0.7266,      2.1094,      0.9922,      0.3730,      0.4766,      3.9375],
        [     0.0000,      1.0859,     -0.2334,     -1.2656,      0.5898,     -0.6172,      1.7422,      0.7734,      1.2734,      1.7656,      1.3906,      3.0000,      2.9531,      2.7188,      4.4375]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3954],
        [0.1150],
        [0.1162],
        [0.3525],
        [0.0692],
        [0.2754],
        [0.0804],
        [0.0733],
        [0.0579],
        [0.1019],
        [0.0736],
        [0.0629],
        [0.0650],
        [0.0752]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0161, 0.9844, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0175, 0.9609, 0.0205, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0398, 0.8945, 0.0165, 0.0491, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0022, 0.4043, 0.0967, 0.0674, 0.4297, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0144, 0.2930, 0.0742, 0.0108, 0.5117, 0.0957, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0178, 0.1963, 0.4219, 0.0322, 0.2070, 0.0415, 0.0835, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0109, 0.0771, 0.2715, 0.0209, 0.2471, 0.0172, 0.0352, 0.3203, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0182, 0.1543, 0.1484, 0.0178, 0.1885, 0.0215, 0.0559, 0.3633, 0.0320, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0150, 0.2695, 0.0623, 0.0317, 0.2246, 0.0106, 0.0928, 0.1680, 0.0157, 0.1089, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0311, 0.1348, 0.0537, 0.0132, 0.1050, 0.0173, 0.0364, 0.2354, 0.0153, 0.2832, 0.0742, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0498, 0.3301, 0.0593, 0.0532, 0.1211, 0.0073, 0.1074, 0.0913, 0.0038, 0.0742, 0.0388, 0.0635, 0.0000, 0.0000, 0.0000],
        [0.0366, 0.0630, 0.0408, 0.0047, 0.1270, 0.0038, 0.0166, 0.0276, 0.0776, 0.1328, 0.0669, 0.2373, 0.1660, 0.0000, 0.0000],
        [0.0339, 0.0967, 0.0255, 0.0057, 0.0845, 0.0063, 0.0220, 0.0510, 0.0105, 0.2041, 0.0337, 0.0967, 0.2930, 0.0364, 0.0000],
        [0.0320, 0.2207, 0.0532, 0.0347, 0.1206, 0.0160, 0.0791, 0.0874, 0.0061, 0.0293, 0.0330, 0.0532, 0.0613, 0.0072, 0.1660]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[     0.0094,     -0.0315,      0.0073,  ...,      0.0044,      0.0319,     -0.0221],
        [     0.0113,     -0.0522,     -0.0208,  ...,      0.0241,      0.0091,     -0.0041],
        [    -0.0260,     -0.0120,     -0.0247,  ...,      0.0317,     -0.0068,     -0.0180],
        ...,
        [     0.0326,      0.0141,     -0.0346,  ...,     -0.0092,      0.0001,      0.0159],
        [    -0.0014,      0.0007,      0.0272,  ...,      0.0406,     -0.0225,      0.0034],
        [    -0.0280,      0.0539,     -0.0388,  ...,      0.0036,      0.0284,      0.0358]], device='cuda:0', requires_grad=True)
K: tensor([ 0.3516, -1.0938, -0.3398,  0.0250, -0.6055, -0.0312, -0.3594, -0.1357, -1.2812, -2.7344, -1.9297, -0.7930,  0.9102, -0.6641, -1.0156,  0.4141,  1.2031,  0.7969, -2.4375,  1.0703,  1.6406, -1.3203, -2.0156,  0.4941,  0.6367, -1.0156, -0.5508,  0.7344, -0.2266, -1.1250, -0.2490,  0.4238,
        -1.8203,  2.2188,  2.8906,  0.9453,  0.5547, -0.6914, -0.7109, -2.2500, -0.8477, -1.0078, -2.3906,  1.0781,  1.0312, -0.2119, -1.5391,  1.3125, -1.6328, -1.6719,  0.5469,  1.6562,  0.8867,  0.0366,  0.5039,  0.0422,  0.3555, -2.9531, -0.4961,  1.0625,  0.4023, -0.5039,  1.3203, -1.2969],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0076, -0.0085, -0.0085,  ..., -0.0373, -0.0341, -0.0187],
        [ 0.0065,  0.0036, -0.0037,  ...,  0.0113, -0.0193,  0.0476],
        [ 0.0201, -0.0101, -0.0032,  ..., -0.0081, -0.0286, -0.0074],
        ...,
        [ 0.0316, -0.0480, -0.0251,  ...,  0.0168,  0.0243, -0.0038],
        [ 0.0136, -0.0048,  0.0300,  ...,  0.0193, -0.0016, -0.0009],
        [-0.0142, -0.0146, -0.0223,  ...,  0.0189,  0.0002, -0.0244]], device='cuda:0', requires_grad=True)
Q: tensor([-0.3809,  0.6914,  0.4785,  0.3906,  0.2676, -1.3125,  0.4785, -2.1250, -1.2500,  0.6094, -0.9883,  1.9062,  0.3926, -0.2559, -0.2441, -0.6250,  0.4297,  0.4004, -1.0938,  0.5273,  0.2988, -0.9766,  0.2598, -0.7188,  1.1562,  1.2266, -1.7578,  1.6094, -0.6875,  1.3438, -1.1562, -2.2812,
        -0.1816,  0.3848, -0.1963, -0.2695, -0.7852, -0.7500,  1.7422, -0.8867,  0.3828,  0.0933, -0.9102,  1.1875, -0.0593,  1.8203, -1.1875,  0.7461,  1.2891, -0.9219,  0.4141,  1.5781, -1.2734, -0.3086, -0.5938,  0.3906, -1.8672,  0.1025, -0.3008,  0.5781,  0.2080, -1.2578, -0.5312, -1.2031],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  4.1250,  2.7188,  2.2031,  4.2188,  2.6719,  2.6250,  2.1406,  1.9922,  1.5938,  2.8438,  2.4688,  2.4688,  2.1719,  2.1406],
        [ 0.0000,  4.0000,  0.1650,  2.5000,  3.6406,  1.1875,  3.5156,  0.0879, -0.2617, -0.7969,  1.5859, -0.9062,  0.2217, -0.1787,  0.4590],
        [ 0.0000,  3.1094, -0.8867,  0.2090,  3.2344, -0.2266,  2.5469, -0.5391, -0.3301, -1.6094,  0.1348, -1.6797, -1.0938, -0.4180, -0.0175],
        [ 0.0000,  5.2188,  3.7656,  3.4062,  5.2812,  3.6875,  3.7031,  4.0312,  2.5781,  2.2500,  2.9062,  3.2656,  3.8281,  2.4375,  2.6875],
        [ 0.0000,  3.0156,  1.6406, -0.2871,  3.5781,  1.8906,  2.0781,  2.6562,  1.0547,  1.0938,  0.3574,  1.2031,  0.4160,  0.0532,  1.3281],
        [ 0.0000,  2.4062,  3.1719,  0.5977,  2.4531,  0.8516,  1.5469,  4.0938,  0.2490,  1.6250, -0.0405,  2.6094,  2.2188, -0.3164,  1.2578],
        [ 0.0000,  1.9531,  3.2031,  0.6445,  3.1250,  0.4570,  1.1719,  3.3750,  3.8438,  4.3750,  2.6406,  3.5938,  3.3281,  4.1875,  3.7812],
        [ 0.0000,  2.1406,  2.1094, -0.0151,  2.3438,  0.1709,  1.1250,  3.0000,  0.5664,  3.3438,  0.6133,  1.9688,  2.9219,  0.6680,  1.7422],
        [ 0.0000,  2.8906,  1.4219,  0.7500,  2.7031, -0.3496,  1.8281,  2.4219,  0.0491,  1.9844,  2.1406,  1.9688,  2.8281,  0.6875,  1.5859],
        [ 0.0000,  1.4688,  0.5469, -0.8555,  1.2188, -0.5859,  0.1602,  2.0312, -0.7109,  2.2031,  0.8711,  2.1094,  2.4219, -0.2432,  1.0078],
        [ 0.0000,  1.8906,  0.1758,  0.0664,  0.8867, -1.9219,  0.7695,  0.6094, -2.5781,  0.3965, -0.2471,  0.2432,  2.8281, -1.1953, -0.2119],
        [ 0.0000,  0.5430,  0.1055, -2.0625,  1.2422, -2.2656, -0.7891, -0.2852,  0.7539,  1.2891,  0.6016,  1.8672,  1.5078,  2.4844,  1.9297],
        [ 0.0000,  1.0469, -0.2832, -1.7812,  0.9102, -1.6875, -0.4336,  0.4102, -1.1719,  1.7969, -0.0077,  1.0469,  2.1562,  0.0679,  0.9492],
        [ 0.0000,  1.9375,  0.5078,  0.0801,  1.3281, -0.6875,  0.9062,  1.0078, -1.6484, -0.0864,  0.0356,  0.5117,  0.6523, -1.4922,  1.6484]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0891],
        [0.0424],
        [0.0137],
        [0.0226],
        [0.0410],
        [0.0099],
        [0.0074],
        [0.0055],
        [0.0081],
        [0.0177],
        [0.0133],
        [0.0263],
        [0.0074],
        [0.0077]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( are:0.1064 a:0.0967,:0.2197 and:0.0894atoes:0.1729 are:0.3457 the:0.1079vern:0.1562)
vern
------
		( a:0.0967,:0.2197 and:0.0894atoes:0.1729 are:0.3457 the:0.1079vern:0.1562acular:0.7461)
acular, and they are the most common ones.
The most common type
@ 8050 train 4.1031 , allloss: 4.1193, dt: 1709.59ms, fracRes: 0.6018, norm(attn): 0.1475, norm(output): 0.2412, norm(x): 0.6685, norm(y): 1.0041, norm:1.3181, tok/sec: 76668.57, flops:67.14, batch-reuse:1
@ 8051 train 4.0954 , allloss: 4.1103, dt: 1267.28ms, fracRes: 0.6019, norm(attn): 0.1484, norm(output): 0.2393, norm(x): 0.6647, norm(y): 1.0042, norm:1.1412, tok/sec: 103428.21, flops:90.57, batch-reuse:1
@ 8052 train 4.1764 , allloss: 4.1915, dt: 1262.85ms, fracRes: 0.6016, norm(attn): 0.1484, norm(output): 0.2412, norm(x): 0.6650, norm(y): 1.0040, norm:1.0957, tok/sec: 103790.92, flops:90.89, batch-reuse:1
@ 8053 train 4.1104 , allloss: 4.1258, dt: 1298.74ms, fracRes: 0.6025, norm(attn): 0.1475, norm(output): 0.2393, norm(x): 0.6671, norm(y): 1.0041, norm:1.4107, tok/sec: 100922.22, flops:88.38, batch-reuse:1
@ 8054 train 4.2001 , allloss: 4.2151, dt: 1250.64ms, fracRes: 0.6039, norm(attn): 0.1465, norm(output): 0.2373, norm(x): 0.6678, norm(y): 1.0043, norm:1.0436, tok/sec: 104804.01, flops:91.78, batch-reuse:1
@ 8055 train 4.1815 , allloss: 4.1961, dt: 1265.17ms, fracRes: 0.6030, norm(attn): 0.1484, norm(output): 0.2373, norm(x): 0.6643, norm(y): 1.0042, norm:1.2041, tok/sec: 103600.30, flops:90.72, batch-reuse:1
@ 8056 train 4.2751 , allloss: 4.2901, dt: 1262.21ms, fracRes: 0.6024, norm(attn): 0.1465, norm(output): 0.2393, norm(x): 0.6679, norm(y): 1.0040, norm:1.1022, tok/sec: 103842.93, flops:90.93, batch-reuse:1
@ 8057 train 4.1335 , allloss: 4.1485, dt: 1284.24ms, fracRes: 0.6023, norm(attn): 0.1465, norm(output): 0.2422, norm(x): 0.6681, norm(y): 1.0042, norm:1.1104, tok/sec: 102062.01, flops:89.37, batch-reuse:1
@ 8058 train 4.1359 , allloss: 4.1516, dt: 1289.55ms, fracRes: 0.6013, norm(attn): 0.1504, norm(output): 0.2422, norm(x): 0.6661, norm(y): 1.0041, norm:1.1537, tok/sec: 101641.67, flops:89.01, batch-reuse:1
@ 8059 train 4.1908 , allloss: 4.2061, dt: 1311.50ms, fracRes: 0.6021, norm(attn): 0.1484, norm(output): 0.2402, norm(x): 0.6652, norm(y): 1.0042, norm:1.2546, tok/sec: 99940.68, flops:87.52, batch-reuse:1
@ 8060 train 4.2615 , allloss: 4.2768, dt: 1294.46ms, fracRes: 0.6021, norm(attn): 0.1504, norm(output): 0.2441, norm(x): 0.6690, norm(y): 1.0037, norm:1.3779, tok/sec: 101255.84, flops:88.67, batch-reuse:1
@ 8061 train 4.0988 , allloss: 4.1145, dt: 1267.57ms, fracRes: 0.6023, norm(attn): 0.1504, norm(output): 0.2422, norm(x): 0.6699, norm(y): 1.0039, norm:1.2211, tok/sec: 103404.05, flops:90.55, batch-reuse:1
@ 8062 train 4.0343 , allloss: 4.0507, dt: 1273.40ms, fracRes: 0.6034, norm(attn): 0.1494, norm(output): 0.2441, norm(x): 0.6733, norm(y): 1.0042, norm:1.3137, tok/sec: 102930.58, flops:90.13, batch-reuse:1
@ 8063 train 4.1871 , allloss: 4.2029, dt: 1255.92ms, fracRes: 0.6031, norm(attn): 0.1484, norm(output): 0.2412, norm(x): 0.6700, norm(y): 1.0042, norm:1.3081, tok/sec: 104363.00, flops:91.39, batch-reuse:1
@ 8064 train 4.2332 , allloss: 4.2484, dt: 1276.39ms, fracRes: 0.6034, norm(attn): 0.1465, norm(output): 0.2412, norm(x): 0.6726, norm(y): 1.0040, norm:1.0380, tok/sec: 102689.48, flops:89.92, batch-reuse:1
@ 8065 train 4.1464 , allloss: 4.1610, dt: 1285.63ms, fracRes: 0.6027, norm(attn): 0.1475, norm(output): 0.2432, norm(x): 0.6735, norm(y): 1.0040, norm:0.9932, tok/sec: 101951.33, flops:89.28, batch-reuse:1
@ 8066 train 4.1065 , allloss: 4.1217, dt: 1284.11ms, fracRes: 0.6025, norm(attn): 0.1494, norm(output): 0.2432, norm(x): 0.6715, norm(y): 1.0041, norm:1.1040, tok/sec: 102071.98, flops:89.38, batch-reuse:1
@ 8067 train 4.1617 , allloss: 4.1773, dt: 1275.00ms, fracRes: 0.6011, norm(attn): 0.1504, norm(output): 0.2461, norm(x): 0.6728, norm(y): 1.0039, norm:1.0571, tok/sec: 102801.79, flops:90.02, batch-reuse:1
@ 8068 train 4.2144 , allloss: 4.2308, dt: 1283.27ms, fracRes: 0.6009, norm(attn): 0.1494, norm(output): 0.2471, norm(x): 0.6731, norm(y): 1.0039, norm:1.0658, tok/sec: 102139.38, flops:89.44, batch-reuse:1
@ 8069 train 4.2854 , allloss: 4.3010, dt: 1268.23ms, fracRes: 0.6025, norm(attn): 0.1484, norm(output): 0.2422, norm(x): 0.6739, norm(y): 1.0040, norm:1.1650, tok/sec: 103350.57, flops:90.50, batch-reuse:1
@ 8070 train 4.1387 , allloss: 4.1534, dt: 1281.89ms, fracRes: 0.6023, norm(attn): 0.1475, norm(output): 0.2432, norm(x): 0.6717, norm(y): 1.0041, norm:1.1724, tok/sec: 102249.26, flops:89.54, batch-reuse:1
@ 8071 train 4.1558 , allloss: 4.1708, dt: 1271.64ms, fracRes: 0.6023, norm(attn): 0.1475, norm(output): 0.2461, norm(x): 0.6719, norm(y): 1.0041, norm:1.2483, tok/sec: 103073.37, flops:90.26, batch-reuse:1
@ 8072 train 4.1821 , allloss: 4.1970, dt: 1269.59ms, fracRes: 0.6027, norm(attn): 0.1504, norm(output): 0.2441, norm(x): 0.6702, norm(y): 1.0042, norm:1.1388, tok/sec: 103239.81, flops:90.41, batch-reuse:1
@ 8073 train 4.2305 , allloss: 4.2454, dt: 1251.52ms, fracRes: 0.6030, norm(attn): 0.1504, norm(output): 0.2441, norm(x): 0.6729, norm(y): 1.0041, norm:1.1757, tok/sec: 104730.59, flops:91.71, batch-reuse:1
@ 8074 train 4.2633 , allloss: 4.2782, dt: 1268.52ms, fracRes: 0.6033, norm(attn): 0.1484, norm(output): 0.2461, norm(x): 0.6752, norm(y): 1.0040, norm:1.2104, tok/sec: 103326.49, flops:90.48, batch-reuse:1
@ 8075 train 4.1396 , allloss: 4.1543, dt: 1269.96ms, fracRes: 0.6030, norm(attn): 0.1484, norm(output): 0.2432, norm(x): 0.6761, norm(y): 1.0040, norm:0.9674, tok/sec: 103209.21, flops:90.38, batch-reuse:1
@ 8076 train 4.1258 , allloss: 4.1409, dt: 1287.15ms, fracRes: 0.6033, norm(attn): 0.1465, norm(output): 0.2412, norm(x): 0.6721, norm(y): 1.0042, norm:0.9977, tok/sec: 101830.96, flops:89.17, batch-reuse:1
@ 8077 train 4.1511 , allloss: 4.1659, dt: 1273.43ms, fracRes: 0.6025, norm(attn): 0.1475, norm(output): 0.2441, norm(x): 0.6708, norm(y): 1.0041, norm:1.0391, tok/sec: 102928.25, flops:90.13, batch-reuse:1
@ 8078 train 4.1458 , allloss: 4.1610, dt: 1275.69ms, fracRes: 0.6029, norm(attn): 0.1475, norm(output): 0.2422, norm(x): 0.6683, norm(y): 1.0042, norm:0.9986, tok/sec: 102745.82, flops:89.97, batch-reuse:1
@ 8079 train 4.1430 , allloss: 4.1581, dt: 1280.72ms, fracRes: 0.6032, norm(attn): 0.1465, norm(output): 0.2402, norm(x): 0.6698, norm(y): 1.0042, norm:0.9893, tok/sec: 102342.05, flops:89.62, batch-reuse:1
@ 8080 train 4.0981 , allloss: 4.1130, dt: 1303.35ms, fracRes: 0.6021, norm(attn): 0.1475, norm(output): 0.2373, norm(x): 0.6682, norm(y): 1.0041, norm:0.9940, tok/sec: 100565.84, flops:88.06, batch-reuse:1
@ 8081 train 4.1630 , allloss: 4.1779, dt: 1282.88ms, fracRes: 0.6017, norm(attn): 0.1465, norm(output): 0.2422, norm(x): 0.6687, norm(y): 1.0038, norm:1.0922, tok/sec: 102169.96, flops:89.47, batch-reuse:1
@ 8082 train 4.0994 , allloss: 4.1149, dt: 1258.10ms, fracRes: 0.6016, norm(attn): 0.1484, norm(output): 0.2432, norm(x): 0.6697, norm(y): 1.0041, norm:1.0561, tok/sec: 104182.65, flops:91.23, batch-reuse:1
@ 8083 train 4.0677 , allloss: 4.0837, dt: 1280.99ms, fracRes: 0.6010, norm(attn): 0.1504, norm(output): 0.2451, norm(x): 0.6695, norm(y): 1.0039, norm:1.4036, tok/sec: 102321.18, flops:89.60, batch-reuse:1
@ 8084 train 4.2595 , allloss: 4.2747, dt: 1287.83ms, fracRes: 0.6016, norm(attn): 0.1504, norm(output): 0.2451, norm(x): 0.6700, norm(y): 1.0038, norm:1.1873, tok/sec: 101777.06, flops:89.12, batch-reuse:1
@ 8085 train 4.1205 , allloss: 4.1354, dt: 1261.23ms, fracRes: 0.6032, norm(attn): 0.1484, norm(output): 0.2441, norm(x): 0.6712, norm(y): 1.0039, norm:1.2466, tok/sec: 103923.71, flops:91.00, batch-reuse:1
@ 8086 train 4.2882 , allloss: 4.3039, dt: 1273.33ms, fracRes: 0.6045, norm(attn): 0.1475, norm(output): 0.2383, norm(x): 0.6677, norm(y): 1.0038, norm:2.1803, tok/sec: 102936.30, flops:90.14, batch-reuse:1
@ 8087 train 4.1946 , allloss: 4.2106, dt: 1259.45ms, fracRes: 0.6044, norm(attn): 0.1465, norm(output): 0.2383, norm(x): 0.6668, norm(y): 1.0041, norm:1.4253, tok/sec: 104071.14, flops:91.13, batch-reuse:1
@ 8088 train 4.2044 , allloss: 4.2204, dt: 1259.06ms, fracRes: 0.6039, norm(attn): 0.1465, norm(output): 0.2373, norm(x): 0.6681, norm(y): 1.0041, norm:1.2972, tok/sec: 104103.21, flops:91.16, batch-reuse:1
@ 8089 train 4.0948 , allloss: 4.1098, dt: 1273.12ms, fracRes: 0.6032, norm(attn): 0.1465, norm(output): 0.2393, norm(x): 0.6670, norm(y): 1.0039, norm:1.1956, tok/sec: 102953.63, flops:90.16, batch-reuse:1
@ 8090 train 4.2341 , allloss: 4.2491, dt: 1294.99ms, fracRes: 0.6021, norm(attn): 0.1484, norm(output): 0.2451, norm(x): 0.6694, norm(y): 1.0036, norm:1.1970, tok/sec: 101214.75, flops:88.63, batch-reuse:1
@ 8091 train 4.0566 , allloss: 4.0719, dt: 1271.46ms, fracRes: 0.6028, norm(attn): 0.1484, norm(output): 0.2422, norm(x): 0.6677, norm(y): 1.0041, norm:1.0758, tok/sec: 103087.94, flops:90.27, batch-reuse:1
@ 8092 train 4.1452 , allloss: 4.1608, dt: 1258.75ms, fracRes: 0.6025, norm(attn): 0.1484, norm(output): 0.2402, norm(x): 0.6677, norm(y): 1.0040, norm:1.0177, tok/sec: 104128.88, flops:91.18, batch-reuse:1
@ 8093 train 4.0906 , allloss: 4.1062, dt: 1279.99ms, fracRes: 0.6021, norm(attn): 0.1484, norm(output): 0.2432, norm(x): 0.6690, norm(y): 1.0041, norm:1.0633, tok/sec: 102400.84, flops:89.67, batch-reuse:1
@ 8094 train 4.0489 , allloss: 4.0650, dt: 1279.18ms, fracRes: 0.6025, norm(attn): 0.1494, norm(output): 0.2441, norm(x): 0.6675, norm(y): 1.0041, norm:1.1205, tok/sec: 102465.77, flops:89.73, batch-reuse:1
@ 8095 train 4.1933 , allloss: 4.2089, dt: 1284.84ms, fracRes: 0.6027, norm(attn): 0.1484, norm(output): 0.2422, norm(x): 0.6681, norm(y): 1.0042, norm:1.0710, tok/sec: 102014.31, flops:89.33, batch-reuse:1
@ 8096 train 4.1520 , allloss: 4.1670, dt: 1264.39ms, fracRes: 0.6032, norm(attn): 0.1465, norm(output): 0.2402, norm(x): 0.6670, norm(y): 1.0042, norm:0.9816, tok/sec: 103664.14, flops:90.78, batch-reuse:1
@ 8097 train 4.1055 , allloss: 4.1218, dt: 1280.51ms, fracRes: 0.6023, norm(attn): 0.1484, norm(output): 0.2432, norm(x): 0.6687, norm(y): 1.0040, norm:0.9998, tok/sec: 102358.92, flops:89.63, batch-reuse:1
@ 8098 train 4.2804 , allloss: 4.2977, dt: 1273.40ms, fracRes: 0.6020, norm(attn): 0.1523, norm(output): 0.2471, norm(x): 0.6721, norm(y): 1.0036, norm:1.8186, tok/sec: 102930.94, flops:90.14, batch-reuse:1
@ 8099 train 4.0598 , allloss: 4.0755, dt: 1266.50ms, fracRes: 0.6021, norm(attn): 0.1504, norm(output): 0.2441, norm(x): 0.6666, norm(y): 1.0041, norm:1.1645, tok/sec: 103491.47, flops:90.63, batch-reuse:1
@ 8100 train 4.1595 , allloss: 4.1759, dt: 1256.77ms, fracRes: 0.6022, norm(attn): 0.1514, norm(output): 0.2461, norm(x): 0.6733, norm(y): 1.0038, norm:1.3262, tok/sec: 104293.15, flops:91.33, batch-reuse:1
@ 8101 train 4.0711 , allloss: 4.0864, dt: 1259.73ms, fracRes: 0.6035, norm(attn): 0.1475, norm(output): 0.2402, norm(x): 0.6681, norm(y): 1.0042, norm:1.1657, tok/sec: 104047.90, flops:91.11, batch-reuse:1
@ 8102 train 4.1059 , allloss: 4.1217, dt: 1274.42ms, fracRes: 0.6031, norm(attn): 0.1465, norm(output): 0.2402, norm(x): 0.6692, norm(y): 1.0043, norm:1.1499, tok/sec: 102848.10, flops:90.06, batch-reuse:1
@ 8103 train 4.2159 , allloss: 4.2322, dt: 1279.65ms, fracRes: 0.6029, norm(attn): 0.1475, norm(output): 0.2432, norm(x): 0.6698, norm(y): 1.0042, norm:1.1980, tok/sec: 102427.90, flops:89.69, batch-reuse:1
@ 8104 train 4.0853 , allloss: 4.1011, dt: 1289.84ms, fracRes: 0.6020, norm(attn): 0.1484, norm(output): 0.2441, norm(x): 0.6713, norm(y): 1.0041, norm:1.0533, tok/sec: 101618.41, flops:88.99, batch-reuse:1
@ 8105 train 4.0711 , allloss: 4.0863, dt: 1261.36ms, fracRes: 0.6018, norm(attn): 0.1484, norm(output): 0.2422, norm(x): 0.6702, norm(y): 1.0041, norm:1.2349, tok/sec: 103912.99, flops:91.00, batch-reuse:1
@ 8106 train 4.0632 , allloss: 4.0786, dt: 1267.55ms, fracRes: 0.6021, norm(attn): 0.1484, norm(output): 0.2432, norm(x): 0.6726, norm(y): 1.0040, norm:1.0697, tok/sec: 103405.67, flops:90.55, batch-reuse:1
@ 8107 train 4.1279 , allloss: 4.1432, dt: 1270.66ms, fracRes: 0.6026, norm(attn): 0.1494, norm(output): 0.2451, norm(x): 0.6729, norm(y): 1.0040, norm:1.0279, tok/sec: 103152.72, flops:90.33, batch-reuse:1
@ 8108 train 4.0740 , allloss: 4.0890, dt: 1278.33ms, fracRes: 0.6021, norm(attn): 0.1514, norm(output): 0.2461, norm(x): 0.6750, norm(y): 1.0039, norm:1.1360, tok/sec: 102534.04, flops:89.79, batch-reuse:1
@ 8109 train 4.1388 , allloss: 4.1544, dt: 1260.51ms, fracRes: 0.6023, norm(attn): 0.1494, norm(output): 0.2441, norm(x): 0.6721, norm(y): 1.0040, norm:1.1012, tok/sec: 103983.49, flops:91.06, batch-reuse:1
@ 8110 train 4.1404 , allloss: 4.1561, dt: 1240.29ms, fracRes: 0.6028, norm(attn): 0.1475, norm(output): 0.2441, norm(x): 0.6726, norm(y): 1.0040, norm:1.0316, tok/sec: 105678.62, flops:92.54, batch-reuse:1
@ 8111 train 4.1558 , allloss: 4.1724, dt: 1271.68ms, fracRes: 0.6024, norm(attn): 0.1504, norm(output): 0.2461, norm(x): 0.6773, norm(y): 1.0039, norm:1.0501, tok/sec: 103069.71, flops:90.26, batch-reuse:1
@ 8112 train 4.1241 , allloss: 4.1417, dt: 1293.16ms, fracRes: 0.6021, norm(attn): 0.1504, norm(output): 0.2461, norm(x): 0.6767, norm(y): 1.0041, norm:1.1971, tok/sec: 101357.67, flops:88.76, batch-reuse:1
@ 8113 train 4.0639 , allloss: 4.0793, dt: 1278.05ms, fracRes: 0.6027, norm(attn): 0.1475, norm(output): 0.2422, norm(x): 0.6719, norm(y): 1.0043, norm:1.3661, tok/sec: 102556.43, flops:89.81, batch-reuse:1
@ 8114 train 4.1831 , allloss: 4.1989, dt: 1258.19ms, fracRes: 0.6023, norm(attn): 0.1494, norm(output): 0.2461, norm(x): 0.6765, norm(y): 1.0040, norm:1.1496, tok/sec: 104174.93, flops:91.22, batch-reuse:1
@ 8115 train 4.0691 , allloss: 4.0863, dt: 1306.91ms, fracRes: 0.6031, norm(attn): 0.1504, norm(output): 0.2471, norm(x): 0.6779, norm(y): 1.0040, norm:1.2075, tok/sec: 100291.54, flops:87.82, batch-reuse:1
@ 8116 train 4.1115 , allloss: 4.1268, dt: 1291.81ms, fracRes: 0.6024, norm(attn): 0.1504, norm(output): 0.2461, norm(x): 0.6754, norm(y): 1.0040, norm:1.2921, tok/sec: 101464.08, flops:88.85, batch-reuse:1
@ 8117 train 4.1236 , allloss: 4.1387, dt: 1259.74ms, fracRes: 0.6025, norm(attn): 0.1504, norm(output): 0.2461, norm(x): 0.6774, norm(y): 1.0040, norm:1.1464, tok/sec: 104046.56, flops:91.11, batch-reuse:1
@ 8118 train 4.2075 , allloss: 4.2223, dt: 1265.17ms, fracRes: 0.6027, norm(attn): 0.1484, norm(output): 0.2461, norm(x): 0.6764, norm(y): 1.0041, norm:1.0102, tok/sec: 103600.40, flops:90.72, batch-reuse:1
@ 8119 train 4.0184 , allloss: 4.0341, dt: 1260.50ms, fracRes: 0.6034, norm(attn): 0.1504, norm(output): 0.2432, norm(x): 0.6786, norm(y): 1.0043, norm:0.9679, tok/sec: 103984.47, flops:91.06, batch-reuse:1
@ 8120 train 4.0996 , allloss: 4.1156, dt: 1251.98ms, fracRes: 0.6031, norm(attn): 0.1484, norm(output): 0.2432, norm(x): 0.6754, norm(y): 1.0041, norm:1.0862, tok/sec: 104691.82, flops:91.68, batch-reuse:1
@ 8121 train 4.1104 , allloss: 4.1266, dt: 1272.70ms, fracRes: 0.6024, norm(attn): 0.1504, norm(output): 0.2461, norm(x): 0.6767, norm(y): 1.0041, norm:1.1084, tok/sec: 102987.32, flops:90.18, batch-reuse:1
@ 8122 train 4.1390 , allloss: 4.1571, dt: 1273.33ms, fracRes: 0.6011, norm(attn): 0.1514, norm(output): 0.2461, norm(x): 0.6745, norm(y): 1.0041, norm:1.1136, tok/sec: 102936.05, flops:90.14, batch-reuse:1
@ 8123 train 4.0296 , allloss: 4.0444, dt: 1266.49ms, fracRes: 0.6010, norm(attn): 0.1504, norm(output): 0.2461, norm(x): 0.6703, norm(y): 1.0041, norm:1.1107, tok/sec: 103491.98, flops:90.63, batch-reuse:1
@ 8124 train 4.1791 , allloss: 4.1943, dt: 1270.33ms, fracRes: 0.6012, norm(attn): 0.1484, norm(output): 0.2461, norm(x): 0.6693, norm(y): 1.0038, norm:0.9377, tok/sec: 103179.80, flops:90.35, batch-reuse:1
@ 8125 train 4.0917 , allloss: 4.1063, dt: 1260.64ms, fracRes: 0.6027, norm(attn): 0.1484, norm(output): 0.2441, norm(x): 0.6715, norm(y): 1.0040, norm:1.1830, tok/sec: 103972.87, flops:91.05, batch-reuse:1
@ 8126 train 4.1853 , allloss: 4.1997, dt: 1269.62ms, fracRes: 0.6028, norm(attn): 0.1484, norm(output): 0.2451, norm(x): 0.6727, norm(y): 1.0039, norm:1.0673, tok/sec: 103237.41, flops:90.40, batch-reuse:1
@ 8127 train 4.0468 , allloss: 4.0613, dt: 1269.42ms, fracRes: 0.6031, norm(attn): 0.1484, norm(output): 0.2432, norm(x): 0.6731, norm(y): 1.0042, norm:1.1285, tok/sec: 103253.64, flops:90.42, batch-reuse:1
@ 8128 train 4.0760 , allloss: 4.0910, dt: 1264.94ms, fracRes: 0.6030, norm(attn): 0.1504, norm(output): 0.2441, norm(x): 0.6730, norm(y): 1.0041, norm:1.1008, tok/sec: 103619.14, flops:90.74, batch-reuse:1
@ 8129 train 4.1144 , allloss: 4.1293, dt: 1262.24ms, fracRes: 0.6024, norm(attn): 0.1494, norm(output): 0.2432, norm(x): 0.6694, norm(y): 1.0040, norm:1.0108, tok/sec: 103840.93, flops:90.93, batch-reuse:1
@ 8130 train 4.1037 , allloss: 4.1182, dt: 1259.65ms, fracRes: 0.6032, norm(attn): 0.1475, norm(output): 0.2393, norm(x): 0.6676, norm(y): 1.0040, norm:1.0177, tok/sec: 104054.44, flops:91.12, batch-reuse:1
@ 8131 train 4.1809 , allloss: 4.1963, dt: 1273.82ms, fracRes: 0.6041, norm(attn): 0.1494, norm(output): 0.2422, norm(x): 0.6711, norm(y): 1.0040, norm:1.2381, tok/sec: 102896.75, flops:90.11, batch-reuse:1
@ 8132 train 4.1135 , allloss: 4.1287, dt: 1268.60ms, fracRes: 0.6032, norm(attn): 0.1504, norm(output): 0.2422, norm(x): 0.6691, norm(y): 1.0041, norm:1.2439, tok/sec: 103319.91, flops:90.48, batch-reuse:1
@ 8133 train 4.1178 , allloss: 4.1333, dt: 1265.32ms, fracRes: 0.6025, norm(attn): 0.1484, norm(output): 0.2412, norm(x): 0.6686, norm(y): 1.0041, norm:1.0836, tok/sec: 103588.27, flops:90.71, batch-reuse:1
@ 8134 train 4.1157 , allloss: 4.1308, dt: 1288.00ms, fracRes: 0.6018, norm(attn): 0.1484, norm(output): 0.2402, norm(x): 0.6672, norm(y): 1.0040, norm:1.0468, tok/sec: 101764.04, flops:89.11, batch-reuse:1
@ 8135 train 4.0274 , allloss: 4.0426, dt: 1295.35ms, fracRes: 0.6026, norm(attn): 0.1494, norm(output): 0.2412, norm(x): 0.6685, norm(y): 1.0040, norm:1.0529, tok/sec: 101186.79, flops:88.61, batch-reuse:1
@ 8136 train 4.0534 , allloss: 4.0684, dt: 1293.13ms, fracRes: 0.6036, norm(attn): 0.1504, norm(output): 0.2441, norm(x): 0.6686, norm(y): 1.0041, norm:1.1173, tok/sec: 101360.59, flops:88.76, batch-reuse:1
@ 8137 train 4.1489 , allloss: 4.1635, dt: 1266.73ms, fracRes: 0.6036, norm(attn): 0.1494, norm(output): 0.2422, norm(x): 0.6718, norm(y): 1.0040, norm:1.0157, tok/sec: 103472.77, flops:90.61, batch-reuse:1
@ 8138 train 4.1127 , allloss: 4.1277, dt: 1282.09ms, fracRes: 0.6042, norm(attn): 0.1484, norm(output): 0.2441, norm(x): 0.6725, norm(y): 1.0039, norm:1.1081, tok/sec: 102232.89, flops:89.52, batch-reuse:1
@ 8139 train 3.9825 , allloss: 3.9973, dt: 1267.08ms, fracRes: 0.6047, norm(attn): 0.1484, norm(output): 0.2422, norm(x): 0.6719, norm(y): 1.0041, norm:1.0584, tok/sec: 103444.46, flops:90.58, batch-reuse:1
@ 8140 train 4.0424 , allloss: 4.0579, dt: 1266.53ms, fracRes: 0.6045, norm(attn): 0.1484, norm(output): 0.2422, norm(x): 0.6737, norm(y): 1.0041, norm:1.1536, tok/sec: 103488.78, flops:90.62, batch-reuse:1
@ 8141 train 3.9230 , allloss: 3.9379, dt: 1271.05ms, fracRes: 0.6030, norm(attn): 0.1504, norm(output): 0.2402, norm(x): 0.6684, norm(y): 1.0042, norm:1.1169, tok/sec: 103120.75, flops:90.30, batch-reuse:1
@ 8142 train 4.1313 , allloss: 4.1465, dt: 1260.50ms, fracRes: 0.6026, norm(attn): 0.1475, norm(output): 0.2441, norm(x): 0.6695, norm(y): 1.0039, norm:1.0477, tok/sec: 103984.53, flops:91.06, batch-reuse:1
@ 8143 train 4.0135 , allloss: 4.0284, dt: 1253.12ms, fracRes: 0.6024, norm(attn): 0.1484, norm(output): 0.2422, norm(x): 0.6698, norm(y): 1.0039, norm:1.2734, tok/sec: 104596.75, flops:91.59, batch-reuse:1
@ 8144 train 4.0742 , allloss: 4.0888, dt: 1262.11ms, fracRes: 0.6022, norm(attn): 0.1484, norm(output): 0.2432, norm(x): 0.6677, norm(y): 1.0039, norm:1.1726, tok/sec: 103851.21, flops:90.94, batch-reuse:1
@ 8145 train 4.0182 , allloss: 4.0332, dt: 1257.75ms, fracRes: 0.6015, norm(attn): 0.1504, norm(output): 0.2441, norm(x): 0.6679, norm(y): 1.0040, norm:1.0179, tok/sec: 104211.39, flops:91.26, batch-reuse:1
@ 8146 train 3.9319 , allloss: 3.9470, dt: 1278.15ms, fracRes: 0.6022, norm(attn): 0.1504, norm(output): 0.2432, norm(x): 0.6676, norm(y): 1.0041, norm:1.0373, tok/sec: 102548.17, flops:89.80, batch-reuse:1
@ 8147 train 4.0218 , allloss: 4.0366, dt: 1269.48ms, fracRes: 0.6029, norm(attn): 0.1484, norm(output): 0.2412, norm(x): 0.6692, norm(y): 1.0040, norm:1.3094, tok/sec: 103248.30, flops:90.41, batch-reuse:1
@ 8148 train 4.1422 , allloss: 4.1570, dt: 1268.30ms, fracRes: 0.6042, norm(attn): 0.1484, norm(output): 0.2422, norm(x): 0.6704, norm(y): 1.0039, norm:1.1156, tok/sec: 103344.65, flops:90.50, batch-reuse:1
@ 8149 train 4.0301 , allloss: 4.0450, dt: 1308.47ms, fracRes: 0.6040, norm(attn): 0.1484, norm(output): 0.2402, norm(x): 0.6688, norm(y): 1.0041, norm:1.0185, tok/sec: 100172.12, flops:87.72, batch-reuse:1
@ 8150 train 3.9826 , allloss: 3.9976, dt: 1266.55ms, fracRes: 0.6027, norm(attn): 0.1494, norm(output): 0.2412, norm(x): 0.6673, norm(y): 1.0041, norm:1.1601, tok/sec: 103487.77, flops:90.62, batch-reuse:1
@ 8151 train 3.9987 , allloss: 4.0138, dt: 1282.81ms, fracRes: 0.6022, norm(attn): 0.1484, norm(output): 0.2412, norm(x): 0.6668, norm(y): 1.0039, norm:1.2454, tok/sec: 102175.62, flops:89.47, batch-reuse:1
@ 8152 train 4.1283 , allloss: 4.1426, dt: 1261.33ms, fracRes: 0.6014, norm(attn): 0.1484, norm(output): 0.2422, norm(x): 0.6667, norm(y): 1.0037, norm:0.9970, tok/sec: 103915.68, flops:91.00, batch-reuse:1
@ 8153 train 3.9446 , allloss: 3.9591, dt: 1260.15ms, fracRes: 0.6018, norm(attn): 0.1484, norm(output): 0.2412, norm(x): 0.6669, norm(y): 1.0039, norm:0.8901, tok/sec: 104013.31, flops:91.08, batch-reuse:1
@ 8154 train 4.0642 , allloss: 4.0797, dt: 1271.89ms, fracRes: 0.6017, norm(attn): 0.1484, norm(output): 0.2412, norm(x): 0.6678, norm(y): 1.0039, norm:0.9605, tok/sec: 103052.54, flops:90.24, batch-reuse:1
@ 8155 train 4.0260 , allloss: 4.0413, dt: 1254.79ms, fracRes: 0.6018, norm(attn): 0.1504, norm(output): 0.2432, norm(x): 0.6692, norm(y): 1.0039, norm:1.0300, tok/sec: 104457.08, flops:91.47, batch-reuse:1
@ 8156 train 3.9674 , allloss: 3.9830, dt: 1249.17ms, fracRes: 0.6016, norm(attn): 0.1494, norm(output): 0.2432, norm(x): 0.6694, norm(y): 1.0039, norm:1.0507, tok/sec: 104927.53, flops:91.88, batch-reuse:1
@ 8157 train 3.9721 , allloss: 3.9867, dt: 1268.84ms, fracRes: 0.6015, norm(attn): 0.1504, norm(output): 0.2422, norm(x): 0.6684, norm(y): 1.0037, norm:0.9903, tok/sec: 103301.03, flops:90.46, batch-reuse:1
@ 8158 train 3.9456 , allloss: 3.9603, dt: 1267.62ms, fracRes: 0.6035, norm(attn): 0.1484, norm(output): 0.2383, norm(x): 0.6646, norm(y): 1.0040, norm:0.9972, tok/sec: 103400.18, flops:90.55, batch-reuse:1
@ 8159 train 3.9720 , allloss: 3.9871, dt: 1272.55ms, fracRes: 0.6031, norm(attn): 0.1504, norm(output): 0.2422, norm(x): 0.6673, norm(y): 1.0041, norm:1.4809, tok/sec: 102999.75, flops:90.20, batch-reuse:1
@ 8160 train 4.0323 , allloss: 4.0477, dt: 1296.22ms, fracRes: 0.6022, norm(attn): 0.1504, norm(output): 0.2441, norm(x): 0.6684, norm(y): 1.0038, norm:1.0732, tok/sec: 101118.78, flops:88.55, batch-reuse:1
@ 8161 train 4.0622 , allloss: 4.0770, dt: 1269.82ms, fracRes: 0.6020, norm(attn): 0.1504, norm(output): 0.2422, norm(x): 0.6698, norm(y): 1.0039, norm:1.1562, tok/sec: 103221.32, flops:90.39, batch-reuse:1
@ 8162 train 3.9966 , allloss: 4.0123, dt: 1261.43ms, fracRes: 0.6016, norm(attn): 0.1514, norm(output): 0.2461, norm(x): 0.6689, norm(y): 1.0039, norm:1.0180, tok/sec: 103907.82, flops:90.99, batch-reuse:1
@ 8163 train 3.9140 , allloss: 3.9289, dt: 1263.28ms, fracRes: 0.6025, norm(attn): 0.1484, norm(output): 0.2422, norm(x): 0.6672, norm(y): 1.0040, norm:1.1089, tok/sec: 103755.57, flops:90.86, batch-reuse:1
@ 8164 train 3.9630 , allloss: 3.9780, dt: 1278.06ms, fracRes: 0.6026, norm(attn): 0.1484, norm(output): 0.2402, norm(x): 0.6689, norm(y): 1.0038, norm:1.1446, tok/sec: 102555.78, flops:89.81, batch-reuse:1
@ 8165 train 3.9510 , allloss: 3.9661, dt: 1258.18ms, fracRes: 0.6032, norm(attn): 0.1484, norm(output): 0.2422, norm(x): 0.6686, norm(y): 1.0039, norm:1.0738, tok/sec: 104175.62, flops:91.23, batch-reuse:1
@ 8166 train 3.9488 , allloss: 3.9637, dt: 1290.58ms, fracRes: 0.6037, norm(attn): 0.1504, norm(output): 0.2412, norm(x): 0.6682, norm(y): 1.0040, norm:0.9711, tok/sec: 101560.69, flops:88.94, batch-reuse:1
@ 8167 train 3.9049 , allloss: 3.9195, dt: 1299.47ms, fracRes: 0.6026, norm(attn): 0.1494, norm(output): 0.2451, norm(x): 0.6681, norm(y): 1.0039, norm:1.2184, tok/sec: 100865.85, flops:88.33, batch-reuse:1
@ 8168 train 4.0439 , allloss: 4.0584, dt: 1297.59ms, fracRes: 0.6024, norm(attn): 0.1494, norm(output): 0.2402, norm(x): 0.6664, norm(y): 1.0039, norm:1.0772, tok/sec: 101012.02, flops:88.45, batch-reuse:1
@ 8169 train 4.0584 , allloss: 4.0735, dt: 1280.33ms, fracRes: 0.6016, norm(attn): 0.1494, norm(output): 0.2422, norm(x): 0.6666, norm(y): 1.0040, norm:1.1727, tok/sec: 102373.74, flops:89.65, batch-reuse:1
@ 8170 train 4.0008 , allloss: 4.0160, dt: 1264.25ms, fracRes: 0.6021, norm(attn): 0.1484, norm(output): 0.2422, norm(x): 0.6680, norm(y): 1.0040, norm:1.0078, tok/sec: 103675.42, flops:90.79, batch-reuse:1
@ 8171 train 3.9488 , allloss: 3.9635, dt: 1265.05ms, fracRes: 0.6024, norm(attn): 0.1494, norm(output): 0.2441, norm(x): 0.6683, norm(y): 1.0039, norm:1.0055, tok/sec: 103610.20, flops:90.73, batch-reuse:1
@ 8172 train 4.0714 , allloss: 4.0861, dt: 1280.09ms, fracRes: 0.6030, norm(attn): 0.1484, norm(output): 0.2422, norm(x): 0.6682, norm(y): 1.0037, norm:0.9881, tok/sec: 102392.85, flops:89.66, batch-reuse:1
@ 8173 train 3.9423 , allloss: 3.9573, dt: 1293.83ms, fracRes: 0.6028, norm(attn): 0.1504, norm(output): 0.2432, norm(x): 0.6687, norm(y): 1.0039, norm:1.0157, tok/sec: 101305.49, flops:88.71, batch-reuse:1
@ 8174 train 4.0319 , allloss: 4.0468, dt: 1251.19ms, fracRes: 0.6030, norm(attn): 0.1484, norm(output): 0.2402, norm(x): 0.6705, norm(y): 1.0039, norm:0.9613, tok/sec: 104758.11, flops:91.74, batch-reuse:1
@ 8175 train 3.9019 , allloss: 3.9163, dt: 1268.44ms, fracRes: 0.6037, norm(attn): 0.1484, norm(output): 0.2393, norm(x): 0.6685, norm(y): 1.0039, norm:1.1239, tok/sec: 103333.60, flops:90.49, batch-reuse:1
@ 8176 train 3.8820 , allloss: 3.8967, dt: 1279.38ms, fracRes: 0.6029, norm(attn): 0.1504, norm(output): 0.2412, norm(x): 0.6691, norm(y): 1.0038, norm:1.0174, tok/sec: 102449.69, flops:89.71, batch-reuse:1
@ 8177 train 4.1081 , allloss: 4.1228, dt: 1247.60ms, fracRes: 0.6023, norm(attn): 0.1504, norm(output): 0.2393, norm(x): 0.6639, norm(y): 1.0036, norm:1.0525, tok/sec: 105059.45, flops:92.00, batch-reuse:1
@ 8178 train 3.9817 , allloss: 3.9961, dt: 1265.89ms, fracRes: 0.6024, norm(attn): 0.1494, norm(output): 0.2422, norm(x): 0.6653, norm(y): 1.0037, norm:1.0147, tok/sec: 103541.61, flops:90.67, batch-reuse:1
@ 8179 train 3.9519 , allloss: 3.9666, dt: 1265.74ms, fracRes: 0.6022, norm(attn): 0.1504, norm(output): 0.2402, norm(x): 0.6657, norm(y): 1.0038, norm:1.2285, tok/sec: 103553.87, flops:90.68, batch-reuse:1
@ 8180 train 4.0405 , allloss: 4.0563, dt: 1270.97ms, fracRes: 0.6027, norm(attn): 0.1484, norm(output): 0.2412, norm(x): 0.6664, norm(y): 1.0038, norm:1.2456, tok/sec: 103127.39, flops:90.31, batch-reuse:1
@ 8181 train 4.0420 , allloss: 4.0606, dt: 1271.80ms, fracRes: 0.6019, norm(attn): 0.1504, norm(output): 0.2432, norm(x): 0.6659, norm(y): 1.0038, norm:1.1468, tok/sec: 103060.25, flops:90.25, batch-reuse:1
@ 8182 train 3.9700 , allloss: 3.9850, dt: 1265.85ms, fracRes: 0.6023, norm(attn): 0.1484, norm(output): 0.2422, norm(x): 0.6655, norm(y): 1.0038, norm:1.0771, tok/sec: 103544.53, flops:90.67, batch-reuse:1
@ 8183 train 3.9605 , allloss: 3.9752, dt: 1264.10ms, fracRes: 0.6013, norm(attn): 0.1484, norm(output): 0.2383, norm(x): 0.6631, norm(y): 1.0039, norm:1.1170, tok/sec: 103687.76, flops:90.80, batch-reuse:1
@ 8184 train 3.9016 , allloss: 3.9165, dt: 1268.51ms, fracRes: 0.6015, norm(attn): 0.1504, norm(output): 0.2412, norm(x): 0.6633, norm(y): 1.0040, norm:1.1001, tok/sec: 103327.69, flops:90.48, batch-reuse:1
@ 8185 train 4.0194 , allloss: 4.0341, dt: 1253.22ms, fracRes: 0.6015, norm(attn): 0.1494, norm(output): 0.2402, norm(x): 0.6652, norm(y): 1.0039, norm:1.0543, tok/sec: 104588.09, flops:91.59, batch-reuse:1
@ 8186 train 4.1990 , allloss: 4.2140, dt: 1254.62ms, fracRes: 0.6018, norm(attn): 0.1494, norm(output): 0.2451, norm(x): 0.6686, norm(y): 1.0035, norm:1.0918, tok/sec: 104471.09, flops:91.48, batch-reuse:1
@ 8187 train 4.2678 , allloss: 4.2827, dt: 1277.56ms, fracRes: 0.6042, norm(attn): 0.1475, norm(output): 0.2412, norm(x): 0.6686, norm(y): 1.0035, norm:1.1258, tok/sec: 102595.65, flops:89.84, batch-reuse:1
@ 8188 train 4.2220 , allloss: 4.2372, dt: 1267.64ms, fracRes: 0.6030, norm(attn): 0.1494, norm(output): 0.2422, norm(x): 0.6716, norm(y): 1.0037, norm:1.0524, tok/sec: 103398.84, flops:90.54, batch-reuse:1
@ 8189 train 4.1738 , allloss: 4.1882, dt: 1254.55ms, fracRes: 0.6020, norm(attn): 0.1504, norm(output): 0.2461, norm(x): 0.6714, norm(y): 1.0036, norm:1.0048, tok/sec: 104476.97, flops:91.49, batch-reuse:1
@ 8190 train 4.2079 , allloss: 4.2224, dt: 1275.33ms, fracRes: 0.6020, norm(attn): 0.1504, norm(output): 0.2461, norm(x): 0.6720, norm(y): 1.0035, norm:1.0038, tok/sec: 102774.67, flops:90.00, batch-reuse:1
@ 8191 train 4.1401 , allloss: 4.1556, dt: 1254.75ms, fracRes: 0.6026, norm(attn): 0.1484, norm(output): 0.2432, norm(x): 0.6717, norm(y): 1.0037, norm:0.9863, tok/sec: 104460.79, flops:91.47, batch-reuse:1
@ 8192 train 4.2506 , allloss: 4.2659, dt: 1282.19ms, fracRes: 0.6022, norm(attn): 0.1494, norm(output): 0.2441, norm(x): 0.6707, norm(y): 1.0035, norm:0.9814, tok/sec: 102225.38, flops:89.52, batch-reuse:1
@ 8193 train 4.1687 , allloss: 4.1837, dt: 1247.33ms, fracRes: 0.6028, norm(attn): 0.1504, norm(output): 0.2461, norm(x): 0.6703, norm(y): 1.0036, norm:1.0692, tok/sec: 105082.30, flops:92.02, batch-reuse:1
@ 8194 train 4.1755 , allloss: 4.1906, dt: 1263.01ms, fracRes: 0.6019, norm(attn): 0.1504, norm(output): 0.2441, norm(x): 0.6685, norm(y): 1.0037, norm:1.0091, tok/sec: 103777.36, flops:90.88, batch-reuse:1
@ 8195 train 4.2534 , allloss: 4.2682, dt: 1244.22ms, fracRes: 0.6026, norm(attn): 0.1484, norm(output): 0.2412, norm(x): 0.6673, norm(y): 1.0037, norm:1.0090, tok/sec: 105345.04, flops:92.25, batch-reuse:1
@ 8196 train 4.2169 , allloss: 4.2323, dt: 1259.89ms, fracRes: 0.6024, norm(attn): 0.1504, norm(output): 0.2432, norm(x): 0.6708, norm(y): 1.0035, norm:1.1126, tok/sec: 104034.41, flops:91.10, batch-reuse:1
@ 8197 train 4.2181 , allloss: 4.2324, dt: 1264.78ms, fracRes: 0.6026, norm(attn): 0.1484, norm(output): 0.2412, norm(x): 0.6671, norm(y): 1.0036, norm:1.2463, tok/sec: 103632.46, flops:90.75, batch-reuse:1
@ 8198 train 4.1148 , allloss: 4.1297, dt: 1257.28ms, fracRes: 0.6020, norm(attn): 0.1504, norm(output): 0.2461, norm(x): 0.6668, norm(y): 1.0036, norm:1.2140, tok/sec: 104250.73, flops:91.29, batch-reuse:1
@ 8199 train 4.1656 , allloss: 4.1810, dt: 1254.21ms, fracRes: 0.6025, norm(attn): 0.1514, norm(output): 0.2471, norm(x): 0.6700, norm(y): 1.0035, norm:1.0252, tok/sec: 104505.78, flops:91.51, batch-reuse:1
@ 8200 train 4.0797 , allloss: 4.0952, dt: 1264.36ms, fracRes: 0.6028, norm(attn): 0.1484, norm(output): 0.2441, norm(x): 0.6703, norm(y): 1.0037, norm:1.0122, tok/sec: 103666.37, flops:90.78, batch-reuse:1
@ 8201 train 4.0992 , allloss: 4.1148, dt: 1293.66ms, fracRes: 0.6027, norm(attn): 0.1504, norm(output): 0.2461, norm(x): 0.6711, norm(y): 1.0037, norm:1.1162, tok/sec: 101318.61, flops:88.72, batch-reuse:1
@ 8202 train 4.1782 , allloss: 4.1928, dt: 1272.05ms, fracRes: 0.6018, norm(attn): 0.1504, norm(output): 0.2461, norm(x): 0.6689, norm(y): 1.0036, norm:1.3179, tok/sec: 103039.81, flops:90.23, batch-reuse:1
@ 8203 train 4.1630 , allloss: 4.1786, dt: 1280.87ms, fracRes: 0.6017, norm(attn): 0.1523, norm(output): 0.2480, norm(x): 0.6720, norm(y): 1.0036, norm:1.2105, tok/sec: 102330.81, flops:89.61, batch-reuse:1
@ 8204 train 4.1819 , allloss: 4.1976, dt: 1281.38ms, fracRes: 0.6021, norm(attn): 0.1504, norm(output): 0.2461, norm(x): 0.6716, norm(y): 1.0036, norm:1.0274, tok/sec: 102290.09, flops:89.57, batch-reuse:1
@ 8205 train 4.1635 , allloss: 4.1786, dt: 1272.55ms, fracRes: 0.6030, norm(attn): 0.1494, norm(output): 0.2432, norm(x): 0.6675, norm(y): 1.0037, norm:1.0603, tok/sec: 102999.31, flops:90.20, batch-reuse:1
@ 8206 train 4.2096 , allloss: 4.2251, dt: 1274.13ms, fracRes: 0.6033, norm(attn): 0.1475, norm(output): 0.2422, norm(x): 0.6699, norm(y): 1.0036, norm:1.1372, tok/sec: 102871.47, flops:90.08, batch-reuse:1
@ 8207 train 4.2155 , allloss: 4.2307, dt: 1261.04ms, fracRes: 0.6023, norm(attn): 0.1484, norm(output): 0.2441, norm(x): 0.6697, norm(y): 1.0036, norm:0.9798, tok/sec: 103939.90, flops:91.02, batch-reuse:1
@ 8208 train 4.1784 , allloss: 4.1938, dt: 1280.71ms, fracRes: 0.6013, norm(attn): 0.1504, norm(output): 0.2461, norm(x): 0.6687, norm(y): 1.0034, norm:1.0532, tok/sec: 102343.33, flops:89.62, batch-reuse:1
@ 8209 train 4.1190 , allloss: 4.1338, dt: 1283.15ms, fracRes: 0.6026, norm(attn): 0.1504, norm(output): 0.2422, norm(x): 0.6690, norm(y): 1.0036, norm:1.1188, tok/sec: 102149.00, flops:89.45, batch-reuse:1
@ 8210 train 4.2659 , allloss: 4.2801, dt: 1271.05ms, fracRes: 0.6034, norm(attn): 0.1484, norm(output): 0.2412, norm(x): 0.6653, norm(y): 1.0035, norm:1.0325, tok/sec: 103121.02, flops:90.30, batch-reuse:1
@ 8211 train 4.0935 , allloss: 4.1082, dt: 1280.29ms, fracRes: 0.6029, norm(attn): 0.1475, norm(output): 0.2412, norm(x): 0.6694, norm(y): 1.0036, norm:1.0704, tok/sec: 102376.53, flops:89.65, batch-reuse:1
@ 8212 train 4.2058 , allloss: 4.2207, dt: 1278.31ms, fracRes: 0.6013, norm(attn): 0.1504, norm(output): 0.2441, norm(x): 0.6671, norm(y): 1.0034, norm:0.9945, tok/sec: 102535.55, flops:89.79, batch-reuse:1
@ 8213 train 4.1256 , allloss: 4.1408, dt: 1303.99ms, fracRes: 0.6012, norm(attn): 0.1484, norm(output): 0.2432, norm(x): 0.6661, norm(y): 1.0035, norm:1.1026, tok/sec: 100516.17, flops:88.02, batch-reuse:1
@ 8214 train 4.1574 , allloss: 4.1729, dt: 1297.78ms, fracRes: 0.6008, norm(attn): 0.1504, norm(output): 0.2441, norm(x): 0.6667, norm(y): 1.0036, norm:1.1707, tok/sec: 100997.29, flops:88.44, batch-reuse:1
@ 8215 train 4.1070 , allloss: 4.1222, dt: 1283.64ms, fracRes: 0.6009, norm(attn): 0.1504, norm(output): 0.2461, norm(x): 0.6677, norm(y): 1.0036, norm:1.0401, tok/sec: 102109.42, flops:89.42, batch-reuse:1
@ 8216 train 4.1166 , allloss: 4.1311, dt: 1271.87ms, fracRes: 0.6025, norm(attn): 0.1475, norm(output): 0.2402, norm(x): 0.6669, norm(y): 1.0037, norm:1.0176, tok/sec: 103054.47, flops:90.24, batch-reuse:1
@ 8217 train 4.2148 , allloss: 4.2291, dt: 1253.11ms, fracRes: 0.6023, norm(attn): 0.1494, norm(output): 0.2393, norm(x): 0.6663, norm(y): 1.0036, norm:1.0515, tok/sec: 104597.55, flops:91.59, batch-reuse:1
@ 8218 train 4.1676 , allloss: 4.1829, dt: 1271.81ms, fracRes: 0.6026, norm(attn): 0.1504, norm(output): 0.2422, norm(x): 0.6698, norm(y): 1.0037, norm:1.1198, tok/sec: 103059.78, flops:90.25, batch-reuse:1
@ 8219 train 4.1208 , allloss: 4.1365, dt: 1258.03ms, fracRes: 0.6029, norm(attn): 0.1504, norm(output): 0.2441, norm(x): 0.6684, norm(y): 1.0036, norm:1.1524, tok/sec: 104188.62, flops:91.24, batch-reuse:1
@ 8220 train 4.1577 , allloss: 4.1721, dt: 1260.30ms, fracRes: 0.6030, norm(attn): 0.1504, norm(output): 0.2422, norm(x): 0.6669, norm(y): 1.0038, norm:1.1914, tok/sec: 104001.03, flops:91.07, batch-reuse:1
@ 8221 train 4.2373 , allloss: 4.2520, dt: 1253.68ms, fracRes: 0.6030, norm(attn): 0.1484, norm(output): 0.2402, norm(x): 0.6664, norm(y): 1.0037, norm:1.0420, tok/sec: 104549.85, flops:91.55, batch-reuse:1
@ 8222 train 4.0940 , allloss: 4.1092, dt: 1274.69ms, fracRes: 0.6032, norm(attn): 0.1504, norm(output): 0.2422, norm(x): 0.6677, norm(y): 1.0037, norm:1.0955, tok/sec: 102826.96, flops:90.04, batch-reuse:1
@ 8223 train 4.3280 , allloss: 4.3426, dt: 1281.39ms, fracRes: 0.6019, norm(attn): 0.1504, norm(output): 0.2432, norm(x): 0.6656, norm(y): 1.0034, norm:1.3996, tok/sec: 102288.54, flops:89.57, batch-reuse:1
@ 8224 train 4.2441 , allloss: 4.2601, dt: 1262.76ms, fracRes: 0.6034, norm(attn): 0.1494, norm(output): 0.2422, norm(x): 0.6689, norm(y): 1.0037, norm:1.2362, tok/sec: 103797.92, flops:90.89, batch-reuse:1
@ 8225 train 4.2721 , allloss: 4.2878, dt: 1263.24ms, fracRes: 0.6030, norm(attn): 0.1514, norm(output): 0.2451, norm(x): 0.6708, norm(y): 1.0033, norm:1.5390, tok/sec: 103758.42, flops:90.86, batch-reuse:1
@ 8226 train 4.2530 , allloss: 4.2680, dt: 1274.72ms, fracRes: 0.6038, norm(attn): 0.1504, norm(output): 0.2422, norm(x): 0.6690, norm(y): 1.0036, norm:1.1865, tok/sec: 102824.13, flops:90.04, batch-reuse:1
@ 8227 train 4.1666 , allloss: 4.1818, dt: 1279.60ms, fracRes: 0.6034, norm(attn): 0.1504, norm(output): 0.2422, norm(x): 0.6676, norm(y): 1.0036, norm:1.3240, tok/sec: 102432.36, flops:89.70, batch-reuse:1
@ 8228 train 4.1759 , allloss: 4.1929, dt: 1269.04ms, fracRes: 0.6042, norm(attn): 0.1484, norm(output): 0.2422, norm(x): 0.6676, norm(y): 1.0038, norm:1.4160, tok/sec: 103284.48, flops:90.44, batch-reuse:1
@ 8229 train 4.1917 , allloss: 4.2068, dt: 1247.08ms, fracRes: 0.6035, norm(attn): 0.1475, norm(output): 0.2412, norm(x): 0.6656, norm(y): 1.0037, norm:1.1681, tok/sec: 105102.95, flops:92.04, batch-reuse:1
@ 8230 train 4.1486 , allloss: 4.1630, dt: 1293.22ms, fracRes: 0.6036, norm(attn): 0.1484, norm(output): 0.2402, norm(x): 0.6668, norm(y): 1.0036, norm:0.9599, tok/sec: 101353.45, flops:88.75, batch-reuse:1
@ 8231 train 4.2123 , allloss: 4.2272, dt: 1263.35ms, fracRes: 0.6032, norm(attn): 0.1484, norm(output): 0.2422, norm(x): 0.6695, norm(y): 1.0036, norm:1.0599, tok/sec: 103749.42, flops:90.85, batch-reuse:1
@ 8232 train 4.1327 , allloss: 4.1472, dt: 1285.73ms, fracRes: 0.6020, norm(attn): 0.1494, norm(output): 0.2422, norm(x): 0.6663, norm(y): 1.0035, norm:1.1523, tok/sec: 101943.60, flops:89.27, batch-reuse:1
@ 8233 train 4.1714 , allloss: 4.1861, dt: 1266.38ms, fracRes: 0.6025, norm(attn): 0.1494, norm(output): 0.2441, norm(x): 0.6652, norm(y): 1.0036, norm:1.3332, tok/sec: 103501.33, flops:90.63, batch-reuse:1
@ 8234 train 4.0933 , allloss: 4.1086, dt: 1257.76ms, fracRes: 0.6040, norm(attn): 0.1465, norm(output): 0.2393, norm(x): 0.6672, norm(y): 1.0038, norm:1.1565, tok/sec: 104210.85, flops:91.26, batch-reuse:1
@ 8235 train 4.1569 , allloss: 4.1717, dt: 1245.59ms, fracRes: 0.6036, norm(attn): 0.1465, norm(output): 0.2393, norm(x): 0.6630, norm(y): 1.0037, norm:0.9748, tok/sec: 105229.11, flops:92.15, batch-reuse:1
@ 8236 train 4.0803 , allloss: 4.0955, dt: 1260.36ms, fracRes: 0.6028, norm(attn): 0.1494, norm(output): 0.2412, norm(x): 0.6668, norm(y): 1.0036, norm:1.0952, tok/sec: 103995.53, flops:91.07, batch-reuse:1
@ 8237 train 4.1305 , allloss: 4.1459, dt: 1272.33ms, fracRes: 0.6022, norm(attn): 0.1484, norm(output): 0.2441, norm(x): 0.6691, norm(y): 1.0035, norm:1.2594, tok/sec: 103017.47, flops:90.21, batch-reuse:1
@ 8238 train 4.1872 , allloss: 4.2027, dt: 1262.29ms, fracRes: 0.6013, norm(attn): 0.1514, norm(output): 0.2461, norm(x): 0.6701, norm(y): 1.0035, norm:1.2528, tok/sec: 103837.07, flops:90.93, batch-reuse:1
@ 8239 train 4.1159 , allloss: 4.1302, dt: 1272.56ms, fracRes: 0.6016, norm(attn): 0.1504, norm(output): 0.2422, norm(x): 0.6640, norm(y): 1.0037, norm:0.9008, tok/sec: 102998.48, flops:90.19, batch-reuse:1
@ 8240 train 4.2386 , allloss: 4.2532, dt: 1264.02ms, fracRes: 0.6018, norm(attn): 0.1504, norm(output): 0.2432, norm(x): 0.6650, norm(y): 1.0035, norm:1.0352, tok/sec: 103694.62, flops:90.80, batch-reuse:1
@ 8241 train 4.1964 , allloss: 4.2115, dt: 1244.73ms, fracRes: 0.6031, norm(attn): 0.1484, norm(output): 0.2412, norm(x): 0.6657, norm(y): 1.0036, norm:1.0775, tok/sec: 105301.37, flops:92.21, batch-reuse:1
@ 8242 train 4.1445 , allloss: 4.1596, dt: 1274.02ms, fracRes: 0.6023, norm(attn): 0.1494, norm(output): 0.2432, norm(x): 0.6677, norm(y): 1.0035, norm:1.0776, tok/sec: 102880.75, flops:90.09, batch-reuse:1
@ 8243 train 4.0734 , allloss: 4.0877, dt: 1263.33ms, fracRes: 0.6015, norm(attn): 0.1504, norm(output): 0.2441, norm(x): 0.6670, norm(y): 1.0035, norm:0.9789, tok/sec: 103751.16, flops:90.85, batch-reuse:1
@ 8244 train 4.1725 , allloss: 4.1869, dt: 1257.59ms, fracRes: 0.6011, norm(attn): 0.1504, norm(output): 0.2461, norm(x): 0.6676, norm(y): 1.0034, norm:0.9852, tok/sec: 104225.02, flops:91.27, batch-reuse:1
@ 8245 train 4.1053 , allloss: 4.1204, dt: 1256.93ms, fracRes: 0.6022, norm(attn): 0.1504, norm(output): 0.2441, norm(x): 0.6674, norm(y): 1.0035, norm:0.9995, tok/sec: 104279.66, flops:91.32, batch-reuse:1
@ 8246 train 4.2386 , allloss: 4.2532, dt: 1274.97ms, fracRes: 0.6029, norm(attn): 0.1484, norm(output): 0.2402, norm(x): 0.6636, norm(y): 1.0035, norm:0.9887, tok/sec: 102804.12, flops:90.02, batch-reuse:1
@ 8247 train 4.1028 , allloss: 4.1171, dt: 1267.44ms, fracRes: 0.6023, norm(attn): 0.1504, norm(output): 0.2422, norm(x): 0.6661, norm(y): 1.0036, norm:1.0057, tok/sec: 103414.44, flops:90.56, batch-reuse:1
@ 8248 train 4.0929 , allloss: 4.1073, dt: 1275.10ms, fracRes: 0.6016, norm(attn): 0.1504, norm(output): 0.2422, norm(x): 0.6693, norm(y): 1.0034, norm:1.0883, tok/sec: 102793.18, flops:90.01, batch-reuse:1
@ 8249 train 4.1520 , allloss: 4.1670, dt: 1295.51ms, fracRes: 0.6025, norm(attn): 0.1504, norm(output): 0.2422, norm(x): 0.6698, norm(y): 1.0034, norm:1.0488, tok/sec: 101174.35, flops:88.60, batch-reuse:1
@ 8250 train 4.2058 , allloss: 4.2201, dt: 1304.07ms, fracRes: 0.6028, norm(attn): 0.1504, norm(output): 0.2402, norm(x): 0.6668, norm(y): 1.0033, norm:0.9659, tok/sec: 100509.83, flops:88.02, batch-reuse:1
@ 8251 train 4.1008 , allloss: 4.1158, dt: 1283.64ms, fracRes: 0.6037, norm(attn): 0.1514, norm(output): 0.2422, norm(x): 0.6686, norm(y): 1.0035, norm:1.0910, tok/sec: 102109.42, flops:89.42, batch-reuse:1
@ 8252 train 4.1062 , allloss: 4.1208, dt: 1245.64ms, fracRes: 0.6028, norm(attn): 0.1504, norm(output): 0.2432, norm(x): 0.6672, norm(y): 1.0036, norm:1.1883, tok/sec: 105224.92, flops:92.14, batch-reuse:1
@ 8253 train 4.3106 , allloss: 4.3259, dt: 1294.34ms, fracRes: 0.6023, norm(attn): 0.1504, norm(output): 0.2461, norm(x): 0.6660, norm(y): 1.0034, norm:1.4020, tok/sec: 101265.72, flops:88.68, batch-reuse:1
@ 8254 train 4.2522 , allloss: 4.2685, dt: 1282.30ms, fracRes: 0.6023, norm(attn): 0.1504, norm(output): 0.2422, norm(x): 0.6676, norm(y): 1.0034, norm:1.1935, tok/sec: 102216.08, flops:89.51, batch-reuse:1
@ 8255 train 4.1539 , allloss: 4.1692, dt: 1256.52ms, fracRes: 0.6008, norm(attn): 0.1523, norm(output): 0.2471, norm(x): 0.6641, norm(y): 1.0033, norm:1.1234, tok/sec: 104313.32, flops:91.35, batch-reuse:1
@ 8256 train 4.1346 , allloss: 4.1499, dt: 1268.59ms, fracRes: 0.6010, norm(attn): 0.1504, norm(output): 0.2461, norm(x): 0.6671, norm(y): 1.0035, norm:1.1284, tok/sec: 103321.03, flops:90.48, batch-reuse:1
@ 8257 train 4.1761 , allloss: 4.1911, dt: 1267.86ms, fracRes: 0.6023, norm(attn): 0.1494, norm(output): 0.2422, norm(x): 0.6652, norm(y): 1.0035, norm:1.0543, tok/sec: 103380.89, flops:90.53, batch-reuse:1
@ 8258 train 4.1820 , allloss: 4.1973, dt: 1278.50ms, fracRes: 0.6039, norm(attn): 0.1484, norm(output): 0.2422, norm(x): 0.6683, norm(y): 1.0036, norm:1.0974, tok/sec: 102520.46, flops:89.78, batch-reuse:1
@ 8259 train 4.0340 , allloss: 4.0485, dt: 1283.46ms, fracRes: 0.6028, norm(attn): 0.1484, norm(output): 0.2412, norm(x): 0.6693, norm(y): 1.0035, norm:0.9433, tok/sec: 102123.86, flops:89.43, batch-reuse:1
@ 8260 train 4.1253 , allloss: 4.1397, dt: 1273.70ms, fracRes: 0.6025, norm(attn): 0.1504, norm(output): 0.2441, norm(x): 0.6713, norm(y): 1.0034, norm:1.0467, tok/sec: 102906.11, flops:90.11, batch-reuse:1
@ 8261 train 4.2055 , allloss: 4.2199, dt: 1269.09ms, fracRes: 0.6027, norm(attn): 0.1504, norm(output): 0.2441, norm(x): 0.6719, norm(y): 1.0034, norm:0.9426, tok/sec: 103280.70, flops:90.44, batch-reuse:1
@ 8262 train 4.2751 , allloss: 4.2894, dt: 1253.42ms, fracRes: 0.6020, norm(attn): 0.1504, norm(output): 0.2441, norm(x): 0.6702, norm(y): 1.0034, norm:0.9038, tok/sec: 104571.84, flops:91.57, batch-reuse:1
@ 8263 train 4.2025 , allloss: 4.2169, dt: 1264.91ms, fracRes: 0.6023, norm(attn): 0.1475, norm(output): 0.2432, norm(x): 0.6714, norm(y): 1.0035, norm:1.1824, tok/sec: 103621.47, flops:90.74, batch-reuse:1
@ 8264 train 4.2077 , allloss: 4.2227, dt: 1267.86ms, fracRes: 0.6026, norm(attn): 0.1484, norm(output): 0.2402, norm(x): 0.6707, norm(y): 1.0034, norm:0.9839, tok/sec: 103380.45, flops:90.53, batch-reuse:1
@ 8265 train 4.1060 , allloss: 4.1216, dt: 1293.87ms, fracRes: 0.6024, norm(attn): 0.1504, norm(output): 0.2422, norm(x): 0.6718, norm(y): 1.0035, norm:0.9824, tok/sec: 101302.41, flops:88.71, batch-reuse:1
@ 8266 train 4.1311 , allloss: 4.1454, dt: 1287.55ms, fracRes: 0.6018, norm(attn): 0.1514, norm(output): 0.2461, norm(x): 0.6705, norm(y): 1.0034, norm:1.0079, tok/sec: 101799.53, flops:89.14, batch-reuse:1
@ 8267 train 4.1133 , allloss: 4.1281, dt: 1256.86ms, fracRes: 0.6026, norm(attn): 0.1523, norm(output): 0.2461, norm(x): 0.6716, norm(y): 1.0035, norm:1.0886, tok/sec: 104285.10, flops:91.32, batch-reuse:1
@ 8268 train 4.1733 , allloss: 4.1879, dt: 1259.02ms, fracRes: 0.6026, norm(attn): 0.1504, norm(output): 0.2461, norm(x): 0.6701, norm(y): 1.0033, norm:0.8929, tok/sec: 104106.42, flops:91.16, batch-reuse:1
@ 8269 train 4.2073 , allloss: 4.2216, dt: 1271.54ms, fracRes: 0.6020, norm(attn): 0.1523, norm(output): 0.2461, norm(x): 0.6679, norm(y): 1.0035, norm:1.0853, tok/sec: 103081.23, flops:90.27, batch-reuse:1
@ 8270 train 4.0966 , allloss: 4.1133, dt: 1266.50ms, fracRes: 0.6022, norm(attn): 0.1514, norm(output): 0.2451, norm(x): 0.6700, norm(y): 1.0034, norm:1.0849, tok/sec: 103491.51, flops:90.63, batch-reuse:1
@ 8271 train 4.2337 , allloss: 4.2482, dt: 1272.51ms, fracRes: 0.6025, norm(attn): 0.1504, norm(output): 0.2461, norm(x): 0.6665, norm(y): 1.0035, norm:1.0414, tok/sec: 103002.93, flops:90.20, batch-reuse:1
@ 8272 train 4.0831 , allloss: 4.0979, dt: 1277.70ms, fracRes: 0.6030, norm(attn): 0.1504, norm(output): 0.2422, norm(x): 0.6670, norm(y): 1.0036, norm:0.9849, tok/sec: 102584.07, flops:89.83, batch-reuse:1
@ 8273 train 4.1965 , allloss: 4.2116, dt: 1269.90ms, fracRes: 0.6019, norm(attn): 0.1484, norm(output): 0.2422, norm(x): 0.6656, norm(y): 1.0034, norm:1.0226, tok/sec: 103214.03, flops:90.38, batch-reuse:1
@ 8274 train 4.1014 , allloss: 4.1168, dt: 1290.79ms, fracRes: 0.6020, norm(attn): 0.1484, norm(output): 0.2402, norm(x): 0.6637, norm(y): 1.0037, norm:1.0444, tok/sec: 101544.31, flops:88.92, batch-reuse:1
@ 8275 train 4.1763 , allloss: 4.1909, dt: 1305.31ms, fracRes: 0.6015, norm(attn): 0.1504, norm(output): 0.2441, norm(x): 0.6630, norm(y): 1.0035, norm:0.9933, tok/sec: 100414.77, flops:87.93, batch-reuse:1
@ 8276 train 4.1082 , allloss: 4.1233, dt: 1245.42ms, fracRes: 0.6012, norm(attn): 0.1514, norm(output): 0.2441, norm(x): 0.6668, norm(y): 1.0033, norm:1.3566, tok/sec: 105243.60, flops:92.16, batch-reuse:1
@ 8277 train 4.1076 , allloss: 4.1220, dt: 1271.93ms, fracRes: 0.6030, norm(attn): 0.1484, norm(output): 0.2393, norm(x): 0.6630, norm(y): 1.0035, norm:1.3644, tok/sec: 103049.91, flops:90.24, batch-reuse:1
@ 8278 train 4.0524 , allloss: 4.0669, dt: 1268.23ms, fracRes: 0.6032, norm(attn): 0.1504, norm(output): 0.2422, norm(x): 0.6650, norm(y): 1.0036, norm:1.0303, tok/sec: 103350.63, flops:90.50, batch-reuse:1
@ 8279 train 4.0379 , allloss: 4.0526, dt: 1279.06ms, fracRes: 0.6033, norm(attn): 0.1504, norm(output): 0.2451, norm(x): 0.6662, norm(y): 1.0035, norm:1.0484, tok/sec: 102475.34, flops:89.74, batch-reuse:1
@ 8280 train 4.0758 , allloss: 4.0905, dt: 1249.87ms, fracRes: 0.6029, norm(attn): 0.1523, norm(output): 0.2451, norm(x): 0.6675, norm(y): 1.0036, norm:1.1898, tok/sec: 104868.82, flops:91.83, batch-reuse:1
@ 8281 train 4.0329 , allloss: 4.0478, dt: 1266.07ms, fracRes: 0.6025, norm(attn): 0.1514, norm(output): 0.2441, norm(x): 0.6636, norm(y): 1.0034, norm:1.0153, tok/sec: 103526.81, flops:90.66, batch-reuse:1
@ 8282 train 4.0692 , allloss: 4.0839, dt: 1260.77ms, fracRes: 0.6020, norm(attn): 0.1475, norm(output): 0.2422, norm(x): 0.6641, norm(y): 1.0033, norm:1.0854, tok/sec: 103961.80, flops:91.04, batch-reuse:1
@ 8283 train 4.1194 , allloss: 4.1340, dt: 1278.48ms, fracRes: 0.6018, norm(attn): 0.1484, norm(output): 0.2412, norm(x): 0.6614, norm(y): 1.0033, norm:1.0866, tok/sec: 102521.74, flops:89.78, batch-reuse:1
@ 8284 train 4.1370 , allloss: 4.1520, dt: 1303.18ms, fracRes: 0.6023, norm(attn): 0.1484, norm(output): 0.2412, norm(x): 0.6627, norm(y): 1.0035, norm:1.1799, tok/sec: 100578.57, flops:88.08, batch-reuse:1
@ 8285 train 4.3238 , allloss: 4.3393, dt: 1281.00ms, fracRes: 0.6051, norm(attn): 0.1504, norm(output): 0.2402, norm(x): 0.6736, norm(y): 1.0040, norm:1.7158, tok/sec: 102320.39, flops:89.60, batch-reuse:1
@ 8286 train 4.1851 , allloss: 4.2005, dt: 1253.62ms, fracRes: 0.6026, norm(attn): 0.1504, norm(output): 0.2402, norm(x): 0.6689, norm(y): 1.0037, norm:1.2803, tok/sec: 104555.04, flops:91.56, batch-reuse:1
@ 8287 train 4.1038 , allloss: 4.1200, dt: 1250.43ms, fracRes: 0.6018, norm(attn): 0.1523, norm(output): 0.2461, norm(x): 0.6716, norm(y): 1.0034, norm:1.0850, tok/sec: 104821.23, flops:91.79, batch-reuse:1
@ 8288 train 4.1629 , allloss: 4.1778, dt: 1263.04ms, fracRes: 0.6021, norm(attn): 0.1514, norm(output): 0.2461, norm(x): 0.6701, norm(y): 1.0034, norm:1.1971, tok/sec: 103775.35, flops:90.87, batch-reuse:1
@ 8289 train 4.1990 , allloss: 4.2137, dt: 1256.46ms, fracRes: 0.6026, norm(attn): 0.1504, norm(output): 0.2461, norm(x): 0.6688, norm(y): 1.0033, norm:1.1903, tok/sec: 104318.51, flops:91.35, batch-reuse:1
@ 8290 train 4.0351 , allloss: 4.0497, dt: 1256.06ms, fracRes: 0.6023, norm(attn): 0.1504, norm(output): 0.2441, norm(x): 0.6698, norm(y): 1.0033, norm:1.3340, tok/sec: 104351.65, flops:91.38, batch-reuse:1
@ 8291 train 4.0622 , allloss: 4.0771, dt: 1299.21ms, fracRes: 0.6022, norm(attn): 0.1504, norm(output): 0.2441, norm(x): 0.6695, norm(y): 1.0033, norm:1.1259, tok/sec: 100885.55, flops:88.34, batch-reuse:1
@ 8292 train 4.0832 , allloss: 4.0982, dt: 1269.82ms, fracRes: 0.6017, norm(attn): 0.1504, norm(output): 0.2451, norm(x): 0.6684, norm(y): 1.0034, norm:1.0061, tok/sec: 103220.72, flops:90.39, batch-reuse:1
@ 8293 train 4.1432 , allloss: 4.1586, dt: 1263.09ms, fracRes: 0.6021, norm(attn): 0.1504, norm(output): 0.2441, norm(x): 0.6717, norm(y): 1.0033, norm:1.0779, tok/sec: 103771.19, flops:90.87, batch-reuse:1
@ 8294 train 4.1100 , allloss: 4.1249, dt: 1270.92ms, fracRes: 0.6027, norm(attn): 0.1494, norm(output): 0.2402, norm(x): 0.6690, norm(y): 1.0033, norm:0.9551, tok/sec: 103131.92, flops:90.31, batch-reuse:1
@ 8295 train 4.1108 , allloss: 4.1262, dt: 1291.28ms, fracRes: 0.6022, norm(attn): 0.1514, norm(output): 0.2461, norm(x): 0.6724, norm(y): 1.0033, norm:1.0875, tok/sec: 101505.39, flops:88.89, batch-reuse:1
@ 8296 train 4.1248 , allloss: 4.1390, dt: 1273.56ms, fracRes: 0.6021, norm(attn): 0.1504, norm(output): 0.2441, norm(x): 0.6690, norm(y): 1.0033, norm:1.1115, tok/sec: 102917.96, flops:90.12, batch-reuse:1
@ 8297 train 4.0409 , allloss: 4.0557, dt: 1278.22ms, fracRes: 0.6036, norm(attn): 0.1504, norm(output): 0.2432, norm(x): 0.6704, norm(y): 1.0035, norm:1.2598, tok/sec: 102542.45, flops:89.79, batch-reuse:1
@ 8298 train 4.1006 , allloss: 4.1151, dt: 1280.48ms, fracRes: 0.6020, norm(attn): 0.1504, norm(output): 0.2441, norm(x): 0.6660, norm(y): 1.0034, norm:1.0868, tok/sec: 102361.56, flops:89.64, batch-reuse:1
@ 8299 train 4.1122 , allloss: 4.1267, dt: 1252.40ms, fracRes: 0.6015, norm(attn): 0.1484, norm(output): 0.2461, norm(x): 0.6662, norm(y): 1.0032, norm:1.1556, tok/sec: 104656.57, flops:91.65, batch-reuse:1
@ 8300 train 4.1813 , allloss: 4.1962, dt: 1269.07ms, fracRes: 0.6011, norm(attn): 0.1504, norm(output): 0.2441, norm(x): 0.6649, norm(y): 1.0031, norm:1.1316, tok/sec: 103281.78, flops:90.44, batch-reuse:1
@ 8301 train 4.0685 , allloss: 4.0848, dt: 1292.44ms, fracRes: 0.6012, norm(attn): 0.1523, norm(output): 0.2480, norm(x): 0.6728, norm(y): 1.0032, norm:1.0761, tok/sec: 101414.07, flops:88.81, batch-reuse:1
@ 8302 train 4.0683 , allloss: 4.0826, dt: 1257.74ms, fracRes: 0.6017, norm(attn): 0.1504, norm(output): 0.2461, norm(x): 0.6714, norm(y): 1.0033, norm:1.1427, tok/sec: 104211.96, flops:91.26, batch-reuse:1
@ 8303 train 4.0753 , allloss: 4.0896, dt: 1266.32ms, fracRes: 0.6021, norm(attn): 0.1494, norm(output): 0.2432, norm(x): 0.6728, norm(y): 1.0033, norm:1.1763, tok/sec: 103506.01, flops:90.64, batch-reuse:1
@ 8304 train 4.0864 , allloss: 4.1026, dt: 1280.10ms, fracRes: 0.6025, norm(attn): 0.1504, norm(output): 0.2441, norm(x): 0.6740, norm(y): 1.0034, norm:1.0590, tok/sec: 102391.67, flops:89.66, batch-reuse:1
@ 8305 train 4.0937 , allloss: 4.1084, dt: 1262.70ms, fracRes: 0.6026, norm(attn): 0.1494, norm(output): 0.2441, norm(x): 0.6716, norm(y): 1.0033, norm:1.1132, tok/sec: 103803.37, flops:90.90, batch-reuse:1
@ 8306 train 4.0467 , allloss: 4.0611, dt: 1269.74ms, fracRes: 0.6021, norm(attn): 0.1484, norm(output): 0.2441, norm(x): 0.6692, norm(y): 1.0035, norm:1.2413, tok/sec: 103227.11, flops:90.39, batch-reuse:1
@ 8307 train 4.1365 , allloss: 4.1511, dt: 1267.49ms, fracRes: 0.6023, norm(attn): 0.1504, norm(output): 0.2461, norm(x): 0.6702, norm(y): 1.0034, norm:0.9907, tok/sec: 103410.35, flops:90.55, batch-reuse:1
@ 8308 train 3.9631 , allloss: 3.9784, dt: 1272.97ms, fracRes: 0.6017, norm(attn): 0.1523, norm(output): 0.2461, norm(x): 0.6692, norm(y): 1.0035, norm:1.2461, tok/sec: 102965.12, flops:90.17, batch-reuse:1
@ 8309 train 4.1288 , allloss: 4.1437, dt: 1265.47ms, fracRes: 0.6016, norm(attn): 0.1523, norm(output): 0.2451, norm(x): 0.6667, norm(y): 1.0033, norm:1.2583, tok/sec: 103575.41, flops:90.70, batch-reuse:1
@ 8310 train 3.9857 , allloss: 4.0020, dt: 1264.53ms, fracRes: 0.6023, norm(attn): 0.1523, norm(output): 0.2461, norm(x): 0.6721, norm(y): 1.0034, norm:1.1159, tok/sec: 103652.84, flops:90.77, batch-reuse:1
@ 8311 train 4.0916 , allloss: 4.1065, dt: 1248.21ms, fracRes: 0.6018, norm(attn): 0.1504, norm(output): 0.2451, norm(x): 0.6694, norm(y): 1.0035, norm:1.3069, tok/sec: 105007.85, flops:91.95, batch-reuse:1
@ 8312 train 4.0609 , allloss: 4.0753, dt: 1274.39ms, fracRes: 0.6020, norm(attn): 0.1504, norm(output): 0.2461, norm(x): 0.6688, norm(y): 1.0034, norm:1.2536, tok/sec: 102851.01, flops:90.07, batch-reuse:1
@ 8313 train 4.1625 , allloss: 4.1769, dt: 1257.03ms, fracRes: 0.6017, norm(attn): 0.1504, norm(output): 0.2461, norm(x): 0.6675, norm(y): 1.0033, norm:1.0954, tok/sec: 104271.16, flops:91.31, batch-reuse:1
@ 8314 train 4.1071 , allloss: 4.1214, dt: 1274.02ms, fracRes: 0.6014, norm(attn): 0.1523, norm(output): 0.2471, norm(x): 0.6710, norm(y): 1.0032, norm:1.0611, tok/sec: 102880.59, flops:90.09, batch-reuse:1
@ 8315 train 4.0575 , allloss: 4.0729, dt: 1269.65ms, fracRes: 0.6025, norm(attn): 0.1523, norm(output): 0.2461, norm(x): 0.6718, norm(y): 1.0034, norm:1.0240, tok/sec: 103234.34, flops:90.40, batch-reuse:1
@ 8316 train 4.0753 , allloss: 4.0901, dt: 1274.89ms, fracRes: 0.6023, norm(attn): 0.1523, norm(output): 0.2461, norm(x): 0.6706, norm(y): 1.0034, norm:1.0756, tok/sec: 102810.06, flops:90.03, batch-reuse:1
@ 8317 train 4.0925 , allloss: 4.1072, dt: 1264.97ms, fracRes: 0.6028, norm(attn): 0.1523, norm(output): 0.2451, norm(x): 0.6703, norm(y): 1.0033, norm:1.0137, tok/sec: 103616.49, flops:90.74, batch-reuse:1
@ 8318 train 4.0823 , allloss: 4.0965, dt: 1282.86ms, fracRes: 0.6029, norm(attn): 0.1504, norm(output): 0.2461, norm(x): 0.6674, norm(y): 1.0033, norm:1.0478, tok/sec: 102172.07, flops:89.47, batch-reuse:1
@ 8319 train 4.1242 , allloss: 4.1385, dt: 1258.80ms, fracRes: 0.6025, norm(attn): 0.1504, norm(output): 0.2432, norm(x): 0.6672, norm(y): 1.0032, norm:1.0517, tok/sec: 104124.42, flops:91.18, batch-reuse:1
@ 8320 train 4.0401 , allloss: 4.0551, dt: 1253.81ms, fracRes: 0.6022, norm(attn): 0.1504, norm(output): 0.2441, norm(x): 0.6694, norm(y): 1.0033, norm:1.0441, tok/sec: 104538.91, flops:91.54, batch-reuse:1
@ 8321 train 4.0719 , allloss: 4.0867, dt: 1265.43ms, fracRes: 0.6018, norm(attn): 0.1484, norm(output): 0.2441, norm(x): 0.6665, norm(y): 1.0034, norm:0.9258, tok/sec: 103579.39, flops:90.70, batch-reuse:1
@ 8322 train 4.1537 , allloss: 4.1683, dt: 1299.22ms, fracRes: 0.6025, norm(attn): 0.1484, norm(output): 0.2422, norm(x): 0.6661, norm(y): 1.0034, norm:1.0171, tok/sec: 100884.79, flops:88.34, batch-reuse:1
@ 8323 train 4.0504 , allloss: 4.0648, dt: 1287.84ms, fracRes: 0.6025, norm(attn): 0.1494, norm(output): 0.2441, norm(x): 0.6660, norm(y): 1.0034, norm:0.9479, tok/sec: 101776.66, flops:89.12, batch-reuse:1
@ 8324 train 4.2795 , allloss: 4.2950, dt: 1299.33ms, fracRes: 0.6033, norm(attn): 0.1504, norm(output): 0.2451, norm(x): 0.6711, norm(y): 1.0030, norm:1.1058, tok/sec: 100876.42, flops:88.34, batch-reuse:1
@ 8325 train 4.3486 , allloss: 4.3649, dt: 1256.46ms, fracRes: 0.6035, norm(attn): 0.1484, norm(output): 0.2451, norm(x): 0.6732, norm(y): 1.0027, norm:1.3269, tok/sec: 104318.64, flops:91.35, batch-reuse:1
@ 8326 train 4.1401 , allloss: 4.1545, dt: 1286.27ms, fracRes: 0.6029, norm(attn): 0.1484, norm(output): 0.2422, norm(x): 0.6654, norm(y): 1.0033, norm:1.1139, tok/sec: 101900.68, flops:89.23, batch-reuse:1
@ 8327 train 4.0105 , allloss: 4.0250, dt: 1265.72ms, fracRes: 0.6023, norm(attn): 0.1514, norm(output): 0.2451, norm(x): 0.6633, norm(y): 1.0035, norm:0.9414, tok/sec: 103555.55, flops:90.68, batch-reuse:1
@ 8328 train 3.9727 , allloss: 3.9878, dt: 1270.10ms, fracRes: 0.6027, norm(attn): 0.1514, norm(output): 0.2432, norm(x): 0.6647, norm(y): 1.0035, norm:1.0017, tok/sec: 103198.42, flops:90.37, batch-reuse:1
@ 8329 train 3.9739 , allloss: 3.9890, dt: 1274.97ms, fracRes: 0.6023, norm(attn): 0.1504, norm(output): 0.2432, norm(x): 0.6651, norm(y): 1.0035, norm:1.1032, tok/sec: 102803.77, flops:90.02, batch-reuse:1
@ 8330 train 4.0031 , allloss: 4.0175, dt: 1274.56ms, fracRes: 0.6021, norm(attn): 0.1504, norm(output): 0.2402, norm(x): 0.6640, norm(y): 1.0035, norm:1.1216, tok/sec: 102837.29, flops:90.05, batch-reuse:1
@ 8331 train 4.1027 , allloss: 4.1176, dt: 1249.06ms, fracRes: 0.6015, norm(attn): 0.1504, norm(output): 0.2441, norm(x): 0.6663, norm(y): 1.0034, norm:1.1339, tok/sec: 104936.92, flops:91.89, batch-reuse:1
@ 8332 train 3.9772 , allloss: 3.9925, dt: 1268.06ms, fracRes: 0.6025, norm(attn): 0.1494, norm(output): 0.2432, norm(x): 0.6680, norm(y): 1.0035, norm:1.0173, tok/sec: 103364.39, flops:90.51, batch-reuse:1
@ 8333 train 4.0459 , allloss: 4.0606, dt: 1266.62ms, fracRes: 0.6028, norm(attn): 0.1494, norm(output): 0.2402, norm(x): 0.6682, norm(y): 1.0034, norm:0.9754, tok/sec: 103481.48, flops:90.62, batch-reuse:1
@ 8334 train 3.9459 , allloss: 3.9611, dt: 1257.20ms, fracRes: 0.6024, norm(attn): 0.1514, norm(output): 0.2432, norm(x): 0.6715, norm(y): 1.0034, norm:1.0807, tok/sec: 104257.20, flops:91.30, batch-reuse:1
@ 8335 train 3.8270 , allloss: 3.8414, dt: 1255.12ms, fracRes: 0.6020, norm(attn): 0.1484, norm(output): 0.2402, norm(x): 0.6672, norm(y): 1.0035, norm:1.2302, tok/sec: 104430.27, flops:91.45, batch-reuse:1
@ 8336 train 4.0244 , allloss: 4.0391, dt: 1244.39ms, fracRes: 0.6017, norm(attn): 0.1504, norm(output): 0.2412, norm(x): 0.6678, norm(y): 1.0033, norm:0.9800, tok/sec: 105330.16, flops:92.24, batch-reuse:1
@ 8337 train 4.0282 , allloss: 4.0433, dt: 1261.83ms, fracRes: 0.6014, norm(attn): 0.1523, norm(output): 0.2441, norm(x): 0.6674, norm(y): 1.0032, norm:1.1188, tok/sec: 103874.62, flops:90.96, batch-reuse:1
@ 8338 train 3.9013 , allloss: 3.9154, dt: 1258.23ms, fracRes: 0.6018, norm(attn): 0.1523, norm(output): 0.2441, norm(x): 0.6658, norm(y): 1.0034, norm:1.1372, tok/sec: 104171.79, flops:91.22, batch-reuse:1
@ 8339 train 4.0802 , allloss: 4.0943, dt: 1294.60ms, fracRes: 0.6020, norm(attn): 0.1494, norm(output): 0.2441, norm(x): 0.6650, norm(y): 1.0032, norm:0.9925, tok/sec: 101245.53, flops:88.66, batch-reuse:1
@ 8340 train 4.1017 , allloss: 4.1161, dt: 1257.68ms, fracRes: 0.6019, norm(attn): 0.1494, norm(output): 0.2461, norm(x): 0.6616, norm(y): 1.0033, norm:1.2423, tok/sec: 104217.02, flops:91.26, batch-reuse:1
@ 8341 train 3.9867 , allloss: 4.0019, dt: 1259.39ms, fracRes: 0.6027, norm(attn): 0.1504, norm(output): 0.2412, norm(x): 0.6632, norm(y): 1.0034, norm:1.0322, tok/sec: 104075.95, flops:91.14, batch-reuse:1
@ 8342 train 3.9715 , allloss: 3.9859, dt: 1259.25ms, fracRes: 0.6017, norm(attn): 0.1514, norm(output): 0.2441, norm(x): 0.6644, norm(y): 1.0032, norm:1.0236, tok/sec: 104087.28, flops:91.15, batch-reuse:1
@ 8343 train 3.9338 , allloss: 3.9482, dt: 1276.73ms, fracRes: 0.6007, norm(attn): 0.1533, norm(output): 0.2461, norm(x): 0.6662, norm(y): 1.0033, norm:1.1415, tok/sec: 102662.63, flops:89.90, batch-reuse:1
@ 8344 train 3.9828 , allloss: 3.9974, dt: 1276.01ms, fracRes: 0.6014, norm(attn): 0.1504, norm(output): 0.2422, norm(x): 0.6637, norm(y): 1.0035, norm:1.2330, tok/sec: 102720.52, flops:89.95, batch-reuse:1
@ 8345 train 3.9997 , allloss: 4.0144, dt: 1291.31ms, fracRes: 0.6024, norm(attn): 0.1504, norm(output): 0.2422, norm(x): 0.6674, norm(y): 1.0034, norm:0.9260, tok/sec: 101502.76, flops:88.88, batch-reuse:1
@ 8346 train 4.0898 , allloss: 4.1043, dt: 1278.80ms, fracRes: 0.6028, norm(attn): 0.1475, norm(output): 0.2412, norm(x): 0.6672, norm(y): 1.0033, norm:0.9653, tok/sec: 102495.71, flops:89.75, batch-reuse:1
@ 8347 train 4.0031 , allloss: 4.0174, dt: 1265.58ms, fracRes: 0.6024, norm(attn): 0.1504, norm(output): 0.2432, norm(x): 0.6657, norm(y): 1.0032, norm:1.2444, tok/sec: 103566.83, flops:90.69, batch-reuse:1
@ 8348 train 3.9674 , allloss: 3.9818, dt: 1263.80ms, fracRes: 0.6020, norm(attn): 0.1523, norm(output): 0.2441, norm(x): 0.6652, norm(y): 1.0032, norm:1.1410, tok/sec: 103712.58, flops:90.82, batch-reuse:1
@ 8349 train 3.9268 , allloss: 3.9412, dt: 1257.80ms, fracRes: 0.6024, norm(attn): 0.1504, norm(output): 0.2441, norm(x): 0.6668, norm(y): 1.0034, norm:0.9633, tok/sec: 104207.59, flops:91.25, batch-reuse:1
@ 8350 train 3.9707 , allloss: 3.9853, dt: 1260.18ms, fracRes: 0.6030, norm(attn): 0.1504, norm(output): 0.2393, norm(x): 0.6664, norm(y): 1.0034, norm:0.9441, tok/sec: 104010.70, flops:91.08, batch-reuse:1
@ 8351 train 3.8467 , allloss: 3.8611, dt: 1269.44ms, fracRes: 0.6025, norm(attn): 0.1504, norm(output): 0.2441, norm(x): 0.6676, norm(y): 1.0034, norm:1.2877, tok/sec: 103251.56, flops:90.42, batch-reuse:1
@ 8352 train 4.0120 , allloss: 4.0260, dt: 1254.72ms, fracRes: 0.6023, norm(attn): 0.1504, norm(output): 0.2451, norm(x): 0.6687, norm(y): 1.0034, norm:1.0118, tok/sec: 104463.09, flops:91.48, batch-reuse:1
@ 8353 train 3.9998 , allloss: 4.0140, dt: 1269.49ms, fracRes: 0.6021, norm(attn): 0.1514, norm(output): 0.2461, norm(x): 0.6696, norm(y): 1.0034, norm:1.0576, tok/sec: 103248.11, flops:90.41, batch-reuse:1
@ 8354 train 4.0014 , allloss: 4.0162, dt: 1265.74ms, fracRes: 0.6022, norm(attn): 0.1504, norm(output): 0.2451, norm(x): 0.6671, norm(y): 1.0034, norm:1.2394, tok/sec: 103553.58, flops:90.68, batch-reuse:1
@ 8355 train 3.9735 , allloss: 3.9880, dt: 1259.83ms, fracRes: 0.6012, norm(attn): 0.1514, norm(output): 0.2441, norm(x): 0.6645, norm(y): 1.0032, norm:1.1205, tok/sec: 104039.06, flops:91.11, batch-reuse:1
@ 8356 train 3.9663 , allloss: 3.9804, dt: 1285.33ms, fracRes: 0.6013, norm(attn): 0.1514, norm(output): 0.2441, norm(x): 0.6618, norm(y): 1.0033, norm:0.9929, tok/sec: 101975.69, flops:89.30, batch-reuse:1
@ 8357 train 3.8921 , allloss: 3.9063, dt: 1250.00ms, fracRes: 0.6018, norm(attn): 0.1504, norm(output): 0.2432, norm(x): 0.6619, norm(y): 1.0034, norm:1.1722, tok/sec: 104857.28, flops:91.82, batch-reuse:1
@ 8358 train 3.9324 , allloss: 3.9466, dt: 1277.57ms, fracRes: 0.6022, norm(attn): 0.1484, norm(output): 0.2432, norm(x): 0.6617, norm(y): 1.0034, norm:1.1638, tok/sec: 102595.17, flops:89.84, batch-reuse:1
@ 8359 train 3.9077 , allloss: 3.9223, dt: 1278.94ms, fracRes: 0.6027, norm(attn): 0.1504, norm(output): 0.2441, norm(x): 0.6646, norm(y): 1.0035, norm:0.9896, tok/sec: 102484.74, flops:89.74, batch-reuse:1
@ 8360 train 4.0787 , allloss: 4.0933, dt: 1268.67ms, fracRes: 0.6031, norm(attn): 0.1504, norm(output): 0.2422, norm(x): 0.6681, norm(y): 1.0032, norm:1.1391, tok/sec: 103314.37, flops:90.47, batch-reuse:1
@ 8361 train 4.0634 , allloss: 4.0782, dt: 1275.48ms, fracRes: 0.6031, norm(attn): 0.1504, norm(output): 0.2422, norm(x): 0.6668, norm(y): 1.0031, norm:1.0812, tok/sec: 102762.69, flops:89.99, batch-reuse:1
@ 8362 train 4.0041 , allloss: 4.0183, dt: 1285.98ms, fracRes: 0.6030, norm(attn): 0.1514, norm(output): 0.2422, norm(x): 0.6638, norm(y): 1.0031, norm:1.0990, tok/sec: 101923.62, flops:89.25, batch-reuse:1
@ 8363 train 3.9285 , allloss: 3.9430, dt: 1290.94ms, fracRes: 0.6023, norm(attn): 0.1514, norm(output): 0.2422, norm(x): 0.6638, norm(y): 1.0032, norm:1.1570, tok/sec: 101532.03, flops:88.91, batch-reuse:1
@ 8364 train 3.9174 , allloss: 3.9318, dt: 1253.17ms, fracRes: 0.6014, norm(attn): 0.1523, norm(output): 0.2441, norm(x): 0.6650, norm(y): 1.0031, norm:0.9351, tok/sec: 104592.37, flops:91.59, batch-reuse:1
@ 8365 train 3.9780 , allloss: 3.9924, dt: 1266.77ms, fracRes: 0.6018, norm(attn): 0.1504, norm(output): 0.2412, norm(x): 0.6639, norm(y): 1.0033, norm:1.2045, tok/sec: 103469.40, flops:90.61, batch-reuse:1
@ 8366 train 3.9670 , allloss: 3.9818, dt: 1258.28ms, fracRes: 0.6020, norm(attn): 0.1484, norm(output): 0.2441, norm(x): 0.6638, norm(y): 1.0034, norm:1.0601, tok/sec: 104167.97, flops:91.22, batch-reuse:1
@ 8367 train 4.0921 , allloss: 4.1067, dt: 1259.21ms, fracRes: 0.6027, norm(attn): 0.1504, norm(output): 0.2402, norm(x): 0.6633, norm(y): 1.0032, norm:1.1589, tok/sec: 104090.65, flops:91.15, batch-reuse:1
@ 8368 train 4.0005 , allloss: 4.0182, dt: 1260.85ms, fracRes: 0.6028, norm(attn): 0.1484, norm(output): 0.2402, norm(x): 0.6631, norm(y): 1.0033, norm:1.0593, tok/sec: 103954.94, flops:91.03, batch-reuse:1
@ 8369 train 4.0276 , allloss: 4.0417, dt: 1258.08ms, fracRes: 0.6022, norm(attn): 0.1514, norm(output): 0.2432, norm(x): 0.6642, norm(y): 1.0032, norm:1.0029, tok/sec: 104184.09, flops:91.23, batch-reuse:1
@ 8370 train 4.0502 , allloss: 4.0647, dt: 1248.40ms, fracRes: 0.6026, norm(attn): 0.1514, norm(output): 0.2441, norm(x): 0.6635, norm(y): 1.0033, norm:1.2010, tok/sec: 104991.79, flops:91.94, batch-reuse:1
@ 8371 train 4.2451 , allloss: 4.2602, dt: 1285.86ms, fracRes: 0.6020, norm(attn): 0.1504, norm(output): 0.2461, norm(x): 0.6658, norm(y): 1.0029, norm:1.0230, tok/sec: 101933.46, flops:89.26, batch-reuse:1
@ 8372 train 4.1875 , allloss: 4.2018, dt: 1310.26ms, fracRes: 0.6018, norm(attn): 0.1484, norm(output): 0.2422, norm(x): 0.6595, norm(y): 1.0030, norm:1.0000, tok/sec: 100035.19, flops:87.60, batch-reuse:1
@ 8373 train 4.1456 , allloss: 4.1602, dt: 1261.30ms, fracRes: 0.6022, norm(attn): 0.1504, norm(output): 0.2441, norm(x): 0.6624, norm(y): 1.0031, norm:1.0921, tok/sec: 103918.55, flops:91.00, batch-reuse:1
@ 8374 train 4.1977 , allloss: 4.2120, dt: 1265.28ms, fracRes: 0.6020, norm(attn): 0.1504, norm(output): 0.2441, norm(x): 0.6613, norm(y): 1.0030, norm:1.0108, tok/sec: 103591.03, flops:90.71, batch-reuse:1
@ 8375 train 4.2690 , allloss: 4.2836, dt: 1286.59ms, fracRes: 0.6027, norm(attn): 0.1514, norm(output): 0.2432, norm(x): 0.6651, norm(y): 1.0029, norm:1.0439, tok/sec: 101875.87, flops:89.21, batch-reuse:1
@ 8376 train 4.2467 , allloss: 4.2606, dt: 1287.81ms, fracRes: 0.6029, norm(attn): 0.1504, norm(output): 0.2393, norm(x): 0.6621, norm(y): 1.0029, norm:1.1450, tok/sec: 101778.91, flops:89.13, batch-reuse:1
@ 8377 train 4.1717 , allloss: 4.1860, dt: 1285.60ms, fracRes: 0.6026, norm(attn): 0.1504, norm(output): 0.2432, norm(x): 0.6659, norm(y): 1.0029, norm:1.1052, tok/sec: 101954.07, flops:89.28, batch-reuse:1
@ 8378 train 4.1998 , allloss: 4.2146, dt: 1259.60ms, fracRes: 0.6013, norm(attn): 0.1504, norm(output): 0.2451, norm(x): 0.6667, norm(y): 1.0030, norm:1.2981, tok/sec: 104058.30, flops:91.12, batch-reuse:1
@ 8379 train 4.3087 , allloss: 4.3233, dt: 1263.27ms, fracRes: 0.6012, norm(attn): 0.1523, norm(output): 0.2461, norm(x): 0.6648, norm(y): 1.0031, norm:1.1035, tok/sec: 103756.33, flops:90.86, batch-reuse:1
@ 8380 train 4.1513 , allloss: 4.1664, dt: 1264.11ms, fracRes: 0.6025, norm(attn): 0.1523, norm(output): 0.2461, norm(x): 0.6680, norm(y): 1.0031, norm:0.9948, tok/sec: 103686.86, flops:90.80, batch-reuse:1
@ 8381 train 4.2241 , allloss: 4.2384, dt: 1255.27ms, fracRes: 0.6036, norm(attn): 0.1484, norm(output): 0.2402, norm(x): 0.6672, norm(y): 1.0030, norm:1.2339, tok/sec: 104417.38, flops:91.44, batch-reuse:1
@ 8382 train 4.2028 , allloss: 4.2171, dt: 1251.73ms, fracRes: 0.6031, norm(attn): 0.1494, norm(output): 0.2432, norm(x): 0.6647, norm(y): 1.0028, norm:1.0305, tok/sec: 104712.66, flops:91.70, batch-reuse:1
@ 8383 train 4.1366 , allloss: 4.1518, dt: 1267.68ms, fracRes: 0.6022, norm(attn): 0.1504, norm(output): 0.2461, norm(x): 0.6668, norm(y): 1.0030, norm:1.1976, tok/sec: 103395.34, flops:90.54, batch-reuse:1
@ 8384 train 4.1704 , allloss: 4.1854, dt: 1262.15ms, fracRes: 0.6016, norm(attn): 0.1514, norm(output): 0.2451, norm(x): 0.6640, norm(y): 1.0029, norm:1.1628, tok/sec: 103848.13, flops:90.94, batch-reuse:1
@ 8385 train 4.2768 , allloss: 4.2918, dt: 1270.78ms, fracRes: 0.6017, norm(attn): 0.1533, norm(output): 0.2461, norm(x): 0.6683, norm(y): 1.0026, norm:1.6811, tok/sec: 103142.71, flops:90.32, batch-reuse:1
@ 8386 train 4.1915 , allloss: 4.2084, dt: 1259.75ms, fracRes: 0.6018, norm(attn): 0.1514, norm(output): 0.2461, norm(x): 0.6677, norm(y): 1.0030, norm:1.7550, tok/sec: 104045.85, flops:91.11, batch-reuse:1
@ 8387 train 4.1920 , allloss: 4.2092, dt: 1255.42ms, fracRes: 0.6016, norm(attn): 0.1494, norm(output): 0.2461, norm(x): 0.6635, norm(y): 1.0029, norm:1.2746, tok/sec: 104404.57, flops:91.43, batch-reuse:1
@ 8388 train 4.1519 , allloss: 4.1672, dt: 1291.46ms, fracRes: 0.6020, norm(attn): 0.1504, norm(output): 0.2441, norm(x): 0.6666, norm(y): 1.0030, norm:1.0929, tok/sec: 101491.48, flops:88.87, batch-reuse:1
@ 8389 train 4.2166 , allloss: 4.2314, dt: 1282.72ms, fracRes: 0.6019, norm(attn): 0.1514, norm(output): 0.2432, norm(x): 0.6656, norm(y): 1.0029, norm:1.0758, tok/sec: 102182.78, flops:89.48, batch-reuse:1
@ 8390 train 4.2162 , allloss: 4.2308, dt: 1284.15ms, fracRes: 0.6011, norm(attn): 0.1514, norm(output): 0.2480, norm(x): 0.6674, norm(y): 1.0029, norm:1.2635, tok/sec: 102068.68, flops:89.38, batch-reuse:1
@ 8391 train 4.1460 , allloss: 4.1607, dt: 1290.48ms, fracRes: 0.6015, norm(attn): 0.1504, norm(output): 0.2451, norm(x): 0.6657, norm(y): 1.0030, norm:1.1560, tok/sec: 101568.72, flops:88.94, batch-reuse:1
@ 8392 train 4.0790 , allloss: 4.0934, dt: 1583.92ms, fracRes: 0.6013, norm(attn): 0.1504, norm(output): 0.2461, norm(x): 0.6654, norm(y): 1.0031, norm:1.1173, tok/sec: 82751.90, flops:72.46, batch-reuse:1
@ 8393 train 4.1533 , allloss: 4.1680, dt: 1254.59ms, fracRes: 0.6016, norm(attn): 0.1494, norm(output): 0.2441, norm(x): 0.6661, norm(y): 1.0031, norm:1.0960, tok/sec: 104474.25, flops:91.49, batch-reuse:1
@ 8394 train 4.1539 , allloss: 4.1692, dt: 1268.26ms, fracRes: 0.6011, norm(attn): 0.1523, norm(output): 0.2461, norm(x): 0.6694, norm(y): 1.0029, norm:1.0872, tok/sec: 103347.97, flops:90.50, batch-reuse:1
@ 8395 train 4.1086 , allloss: 4.1232, dt: 1299.10ms, fracRes: 0.6020, norm(attn): 0.1504, norm(output): 0.2461, norm(x): 0.6694, norm(y): 1.0029, norm:1.1033, tok/sec: 100894.60, flops:88.35, batch-reuse:1
@ 8396 train 4.2233 , allloss: 4.2384, dt: 1262.39ms, fracRes: 0.6015, norm(attn): 0.1533, norm(output): 0.2471, norm(x): 0.6701, norm(y): 1.0028, norm:1.0578, tok/sec: 103828.25, flops:90.92, batch-reuse:1
@ 8397 train 4.1168 , allloss: 4.1320, dt: 1260.29ms, fracRes: 0.6014, norm(attn): 0.1523, norm(output): 0.2480, norm(x): 0.6714, norm(y): 1.0030, norm:1.1290, tok/sec: 104001.41, flops:91.07, batch-reuse:1
@ 8398 train 4.1973 , allloss: 4.2118, dt: 1253.24ms, fracRes: 0.6028, norm(attn): 0.1494, norm(output): 0.2461, norm(x): 0.6688, norm(y): 1.0030, norm:1.3902, tok/sec: 104586.92, flops:91.59, batch-reuse:1
@ 8399 train 4.1292 , allloss: 4.1442, dt: 1271.93ms, fracRes: 0.6023, norm(attn): 0.1504, norm(output): 0.2471, norm(x): 0.6704, norm(y): 1.0030, norm:1.0333, tok/sec: 103049.47, flops:90.24, batch-reuse:1
@ 8400 train 4.1474 , allloss: 4.1628, dt: 1266.56ms, fracRes: 0.6016, norm(attn): 0.1533, norm(output): 0.2480, norm(x): 0.6721, norm(y): 1.0029, norm:1.1701, tok/sec: 103486.37, flops:90.62, batch-reuse:1
@ 8401 train 4.5162 , allloss: 4.5308, dt: 1254.95ms, fracRes: 0.5990, norm(attn): 0.1553, norm(output): 0.2500, norm(x): 0.6694, norm(y): 1.0025, norm:2.4789, tok/sec: 104443.96, flops:91.46, batch-reuse:1
@ 8402 train 4.1844 , allloss: 4.1992, dt: 1253.26ms, fracRes: 0.6011, norm(attn): 0.1504, norm(output): 0.2480, norm(x): 0.6709, norm(y): 1.0027, norm:1.3075, tok/sec: 104585.01, flops:91.58, batch-reuse:1
@ 8403 train 4.2647 , allloss: 4.2799, dt: 1267.69ms, fracRes: 0.6016, norm(attn): 0.1514, norm(output): 0.2471, norm(x): 0.6670, norm(y): 1.0027, norm:1.2717, tok/sec: 103394.25, flops:90.54, batch-reuse:1
@ 8404 train 4.1289 , allloss: 4.1439, dt: 1277.59ms, fracRes: 0.6017, norm(attn): 0.1523, norm(output): 0.2461, norm(x): 0.6646, norm(y): 1.0029, norm:1.1881, tok/sec: 102592.84, flops:89.84, batch-reuse:1
@ 8405 train 4.2102 , allloss: 4.2250, dt: 1280.93ms, fracRes: 0.6014, norm(attn): 0.1514, norm(output): 0.2461, norm(x): 0.6616, norm(y): 1.0029, norm:1.0265, tok/sec: 102325.50, flops:89.60, batch-reuse:1
@ 8406 train 4.1491 , allloss: 4.1642, dt: 1260.07ms, fracRes: 0.6028, norm(attn): 0.1484, norm(output): 0.2461, norm(x): 0.6663, norm(y): 1.0030, norm:1.0319, tok/sec: 104019.73, flops:91.09, batch-reuse:1
@ 8407 train 4.1680 , allloss: 4.1827, dt: 1270.16ms, fracRes: 0.6030, norm(attn): 0.1504, norm(output): 0.2471, norm(x): 0.6708, norm(y): 1.0030, norm:1.0647, tok/sec: 103193.40, flops:90.36, batch-reuse:1
@ 8408 train 4.1835 , allloss: 4.1979, dt: 1291.43ms, fracRes: 0.6032, norm(attn): 0.1514, norm(output): 0.2461, norm(x): 0.6730, norm(y): 1.0032, norm:1.0375, tok/sec: 101493.96, flops:88.88, batch-reuse:1
@ 8409 train 4.1001 , allloss: 4.1143, dt: 1305.22ms, fracRes: 0.6032, norm(attn): 0.1523, norm(output): 0.2461, norm(x): 0.6725, norm(y): 1.0033, norm:1.0972, tok/sec: 100421.58, flops:87.94, batch-reuse:1
@ 8410 train 4.2604 , allloss: 4.2746, dt: 1264.84ms, fracRes: 0.6030, norm(attn): 0.1514, norm(output): 0.2471, norm(x): 0.6732, norm(y): 1.0028, norm:1.0113, tok/sec: 103626.97, flops:90.74, batch-reuse:1
@ 8411 train 4.0611 , allloss: 4.0754, dt: 1279.32ms, fracRes: 0.6037, norm(attn): 0.1494, norm(output): 0.2451, norm(x): 0.6711, norm(y): 1.0031, norm:0.9960, tok/sec: 102454.07, flops:89.72, batch-reuse:1
@ 8412 train 4.1473 , allloss: 4.1619, dt: 1264.98ms, fracRes: 0.6026, norm(attn): 0.1523, norm(output): 0.2432, norm(x): 0.6673, norm(y): 1.0029, norm:1.1420, tok/sec: 103616.19, flops:90.74, batch-reuse:1
@ 8413 train 4.0727 , allloss: 4.0886, dt: 1275.24ms, fracRes: 0.6023, norm(attn): 0.1523, norm(output): 0.2451, norm(x): 0.6678, norm(y): 1.0030, norm:1.1135, tok/sec: 102782.57, flops:90.01, batch-reuse:1
@ 8414 train 4.1356 , allloss: 4.1506, dt: 1267.20ms, fracRes: 0.6014, norm(attn): 0.1514, norm(output): 0.2461, norm(x): 0.6653, norm(y): 1.0028, norm:1.2201, tok/sec: 103434.31, flops:90.58, batch-reuse:1
@ 8415 train 4.1142 , allloss: 4.1292, dt: 1270.49ms, fracRes: 0.6016, norm(attn): 0.1514, norm(output): 0.2461, norm(x): 0.6638, norm(y): 1.0031, norm:1.4306, tok/sec: 103166.52, flops:90.34, batch-reuse:1
@ 8416 train 4.2449 , allloss: 4.2599, dt: 1262.39ms, fracRes: 0.6015, norm(attn): 0.1533, norm(output): 0.2461, norm(x): 0.6667, norm(y): 1.0029, norm:1.1852, tok/sec: 103828.83, flops:90.92, batch-reuse:1
@ 8417 train 4.0646 , allloss: 4.0793, dt: 1261.65ms, fracRes: 0.6018, norm(attn): 0.1514, norm(output): 0.2451, norm(x): 0.6642, norm(y): 1.0029, norm:1.2583, tok/sec: 103889.21, flops:90.97, batch-reuse:1
@ 8418 train 4.2756 , allloss: 4.2901, dt: 1276.94ms, fracRes: 0.6022, norm(attn): 0.1504, norm(output): 0.2461, norm(x): 0.6643, norm(y): 1.0028, norm:1.0108, tok/sec: 102645.59, flops:89.89, batch-reuse:1
@ 8419 train 4.1640 , allloss: 4.1788, dt: 1279.92ms, fracRes: 0.6017, norm(attn): 0.1514, norm(output): 0.2471, norm(x): 0.6643, norm(y): 1.0028, norm:1.3803, tok/sec: 102406.75, flops:89.68, batch-reuse:1
@ 8420 train 4.2200 , allloss: 4.2346, dt: 1261.98ms, fracRes: 0.6018, norm(attn): 0.1514, norm(output): 0.2471, norm(x): 0.6648, norm(y): 1.0030, norm:1.3447, tok/sec: 103862.45, flops:90.95, batch-reuse:1
@ 8421 train 4.2265 , allloss: 4.2411, dt: 1261.16ms, fracRes: 0.6031, norm(attn): 0.1504, norm(output): 0.2441, norm(x): 0.6687, norm(y): 1.0033, norm:1.1618, tok/sec: 103929.74, flops:91.01, batch-reuse:1
@ 8422 train 4.0793 , allloss: 4.0937, dt: 1258.81ms, fracRes: 0.6021, norm(attn): 0.1523, norm(output): 0.2471, norm(x): 0.6713, norm(y): 1.0030, norm:1.0021, tok/sec: 104124.13, flops:91.18, batch-reuse:1
@ 8423 train 4.1770 , allloss: 4.1911, dt: 1260.99ms, fracRes: 0.6032, norm(attn): 0.1504, norm(output): 0.2451, norm(x): 0.6714, norm(y): 1.0030, norm:1.2748, tok/sec: 103944.05, flops:91.02, batch-reuse:1
@ 8424 train 4.1310 , allloss: 4.1455, dt: 1265.87ms, fracRes: 0.6031, norm(attn): 0.1523, norm(output): 0.2461, norm(x): 0.6729, norm(y): 1.0030, norm:1.2308, tok/sec: 103543.19, flops:90.67, batch-reuse:1
@ 8425 train 4.0924 , allloss: 4.1067, dt: 1274.98ms, fracRes: 0.6029, norm(attn): 0.1523, norm(output): 0.2461, norm(x): 0.6720, norm(y): 1.0031, norm:1.1314, tok/sec: 102803.48, flops:90.02, batch-reuse:1
@ 8426 train 4.1077 , allloss: 4.1219, dt: 1296.81ms, fracRes: 0.6023, norm(attn): 0.1514, norm(output): 0.2471, norm(x): 0.6701, norm(y): 1.0031, norm:1.2985, tok/sec: 101072.32, flops:88.51, batch-reuse:1
@ 8427 train 4.1536 , allloss: 4.1678, dt: 1278.03ms, fracRes: 0.6016, norm(attn): 0.1514, norm(output): 0.2461, norm(x): 0.6662, norm(y): 1.0030, norm:1.0668, tok/sec: 102558.19, flops:89.81, batch-reuse:1
@ 8428 train 4.1727 , allloss: 4.1874, dt: 1256.15ms, fracRes: 0.6014, norm(attn): 0.1504, norm(output): 0.2471, norm(x): 0.6658, norm(y): 1.0029, norm:1.0258, tok/sec: 104344.48, flops:91.37, batch-reuse:1
@ 8429 train 4.1109 , allloss: 4.1255, dt: 1284.84ms, fracRes: 0.6011, norm(attn): 0.1504, norm(output): 0.2461, norm(x): 0.6649, norm(y): 1.0030, norm:0.9790, tok/sec: 102014.04, flops:89.33, batch-reuse:1
@ 8430 train 4.0078 , allloss: 4.0238, dt: 1289.44ms, fracRes: 0.6018, norm(attn): 0.1523, norm(output): 0.2461, norm(x): 0.6657, norm(y): 1.0031, norm:1.0035, tok/sec: 101650.43, flops:89.01, batch-reuse:1
@ 8431 train 4.1340 , allloss: 4.1486, dt: 1258.73ms, fracRes: 0.6025, norm(attn): 0.1504, norm(output): 0.2441, norm(x): 0.6649, norm(y): 1.0030, norm:1.1864, tok/sec: 104130.32, flops:91.19, batch-reuse:1
@ 8432 train 4.1284 , allloss: 4.1429, dt: 1296.18ms, fracRes: 0.6027, norm(attn): 0.1523, norm(output): 0.2451, norm(x): 0.6660, norm(y): 1.0028, norm:1.1326, tok/sec: 101121.42, flops:88.55, batch-reuse:1
@ 8433 train 4.1599 , allloss: 4.1744, dt: 1290.07ms, fracRes: 0.6026, norm(attn): 0.1494, norm(output): 0.2441, norm(x): 0.6636, norm(y): 1.0029, norm:0.9920, tok/sec: 101601.02, flops:88.97, batch-reuse:1
@ 8434 train 4.1254 , allloss: 4.1396, dt: 1274.96ms, fracRes: 0.6028, norm(attn): 0.1504, norm(output): 0.2461, norm(x): 0.6640, norm(y): 1.0031, norm:1.0877, tok/sec: 102805.02, flops:90.02, batch-reuse:1
@ 8435 train 4.1164 , allloss: 4.1309, dt: 1273.28ms, fracRes: 0.6026, norm(attn): 0.1514, norm(output): 0.2461, norm(x): 0.6662, norm(y): 1.0028, norm:1.0573, tok/sec: 102940.77, flops:90.14, batch-reuse:1
@ 8436 train 3.8979 , allloss: 3.9130, dt: 1296.90ms, fracRes: 0.6043, norm(attn): 0.1504, norm(output): 0.2412, norm(x): 0.6685, norm(y): 1.0030, norm:1.0887, tok/sec: 101065.80, flops:88.50, batch-reuse:1
@ 8437 train 3.9605 , allloss: 3.9751, dt: 1269.46ms, fracRes: 0.6032, norm(attn): 0.1514, norm(output): 0.2441, norm(x): 0.6678, norm(y): 1.0029, norm:1.1266, tok/sec: 103250.11, flops:90.41, batch-reuse:1
@ 8438 train 4.1465 , allloss: 4.1607, dt: 1259.66ms, fracRes: 0.6015, norm(attn): 0.1514, norm(output): 0.2480, norm(x): 0.6673, norm(y): 1.0027, norm:1.0605, tok/sec: 104053.55, flops:91.12, batch-reuse:1
@ 8439 train 4.1732 , allloss: 4.1871, dt: 1251.24ms, fracRes: 0.6014, norm(attn): 0.1514, norm(output): 0.2461, norm(x): 0.6634, norm(y): 1.0027, norm:1.1556, tok/sec: 104753.50, flops:91.73, batch-reuse:1
@ 8440 train 4.0786 , allloss: 4.0923, dt: 1264.78ms, fracRes: 0.6026, norm(attn): 0.1504, norm(output): 0.2441, norm(x): 0.6642, norm(y): 1.0028, norm:1.0073, tok/sec: 103632.31, flops:90.75, batch-reuse:1
@ 8441 train 4.1289 , allloss: 4.1428, dt: 1249.31ms, fracRes: 0.6031, norm(attn): 0.1504, norm(output): 0.2432, norm(x): 0.6657, norm(y): 1.0028, norm:1.0779, tok/sec: 104915.41, flops:91.87, batch-reuse:1
@ 8442 train 4.1265 , allloss: 4.1410, dt: 1265.71ms, fracRes: 0.6029, norm(attn): 0.1523, norm(output): 0.2471, norm(x): 0.6690, norm(y): 1.0029, norm:0.9760, tok/sec: 103555.75, flops:90.68, batch-reuse:1
@ 8443 train 4.1045 , allloss: 4.1188, dt: 1301.25ms, fracRes: 0.6018, norm(attn): 0.1523, norm(output): 0.2461, norm(x): 0.6655, norm(y): 1.0029, norm:1.1360, tok/sec: 100727.60, flops:88.21, batch-reuse:1
@ 8444 train 4.2705 , allloss: 4.2849, dt: 1277.12ms, fracRes: 0.6023, norm(attn): 0.1504, norm(output): 0.2451, norm(x): 0.6664, norm(y): 1.0029, norm:1.1916, tok/sec: 102631.26, flops:89.87, batch-reuse:1
@ 8445 train 4.0501 , allloss: 4.0647, dt: 1252.73ms, fracRes: 0.6023, norm(attn): 0.1504, norm(output): 0.2422, norm(x): 0.6640, norm(y): 1.0029, norm:1.1292, tok/sec: 104629.22, flops:91.62, batch-reuse:1
@ 8446 train 4.0247 , allloss: 4.0390, dt: 1272.17ms, fracRes: 0.6027, norm(attn): 0.1504, norm(output): 0.2412, norm(x): 0.6624, norm(y): 1.0030, norm:1.0494, tok/sec: 103030.04, flops:90.22, batch-reuse:1
@ 8447 train 4.1303 , allloss: 4.1454, dt: 1284.64ms, fracRes: 0.6020, norm(attn): 0.1523, norm(output): 0.2461, norm(x): 0.6637, norm(y): 1.0028, norm:1.1113, tok/sec: 102030.12, flops:89.35, batch-reuse:1
@ 8448 train 4.1192 , allloss: 4.1334, dt: 1260.59ms, fracRes: 0.6019, norm(attn): 0.1514, norm(output): 0.2461, norm(x): 0.6624, norm(y): 1.0028, norm:1.0116, tok/sec: 103976.59, flops:91.05, batch-reuse:1
@ 8449 train 4.1678 , allloss: 4.1834, dt: 1303.38ms, fracRes: 0.6025, norm(attn): 0.1514, norm(output): 0.2471, norm(x): 0.6680, norm(y): 1.0027, norm:1.0382, tok/sec: 100563.19, flops:88.06, batch-reuse:1
@ 8450 train 4.2426 , allloss: 4.2571, dt: 1264.68ms, fracRes: 0.6020, norm(attn): 0.1523, norm(output): 0.2480, norm(x): 0.6663, norm(y): 1.0027, norm:0.9375, tok/sec: 103640.20, flops:90.76, batch-reuse:1
@ 8451 train 4.1155 , allloss: 4.1297, dt: 1256.11ms, fracRes: 0.6016, norm(attn): 0.1523, norm(output): 0.2441, norm(x): 0.6678, norm(y): 1.0028, norm:0.9783, tok/sec: 104347.39, flops:91.38, batch-reuse:1
@ 8452 train 4.1579 , allloss: 4.1723, dt: 1254.27ms, fracRes: 0.6015, norm(attn): 0.1514, norm(output): 0.2471, norm(x): 0.6688, norm(y): 1.0026, norm:0.9177, tok/sec: 104500.68, flops:91.51, batch-reuse:1
@ 8453 train 4.1161 , allloss: 4.1304, dt: 1273.92ms, fracRes: 0.6023, norm(attn): 0.1504, norm(output): 0.2441, norm(x): 0.6691, norm(y): 1.0029, norm:0.9414, tok/sec: 102888.76, flops:90.10, batch-reuse:1
@ 8454 train 4.1835 , allloss: 4.1979, dt: 1273.17ms, fracRes: 0.6018, norm(attn): 0.1504, norm(output): 0.2451, norm(x): 0.6673, norm(y): 1.0027, norm:1.0129, tok/sec: 102949.06, flops:90.15, batch-reuse:1
@ 8455 train 4.0673 , allloss: 4.0821, dt: 1275.52ms, fracRes: 0.6019, norm(attn): 0.1504, norm(output): 0.2461, norm(x): 0.6670, norm(y): 1.0028, norm:1.1240, tok/sec: 102759.63, flops:89.99, batch-reuse:1
@ 8456 train 4.1338 , allloss: 4.1480, dt: 1260.29ms, fracRes: 0.6016, norm(attn): 0.1504, norm(output): 0.2461, norm(x): 0.6665, norm(y): 1.0027, norm:1.0930, tok/sec: 104001.37, flops:91.07, batch-reuse:1
@ 8457 train 4.1136 , allloss: 4.1278, dt: 1269.83ms, fracRes: 0.6011, norm(attn): 0.1504, norm(output): 0.2461, norm(x): 0.6659, norm(y): 1.0028, norm:0.8983, tok/sec: 103220.35, flops:90.39, batch-reuse:1
@ 8458 train 4.1388 , allloss: 4.1537, dt: 1279.76ms, fracRes: 0.6011, norm(attn): 0.1514, norm(output): 0.2461, norm(x): 0.6649, norm(y): 1.0028, norm:0.9439, tok/sec: 102419.38, flops:89.69, batch-reuse:1
@ 8459 train 4.0278 , allloss: 4.0426, dt: 1278.08ms, fracRes: 0.6018, norm(attn): 0.1533, norm(output): 0.2471, norm(x): 0.6675, norm(y): 1.0030, norm:1.0706, tok/sec: 102553.76, flops:89.80, batch-reuse:1
@ 8460 train 4.0495 , allloss: 4.0637, dt: 1286.43ms, fracRes: 0.6021, norm(attn): 0.1523, norm(output): 0.2451, norm(x): 0.6656, norm(y): 1.0029, norm:0.9354, tok/sec: 101888.29, flops:89.22, batch-reuse:1
@ 8461 train 4.1715 , allloss: 4.1865, dt: 1261.04ms, fracRes: 0.6028, norm(attn): 0.1514, norm(output): 0.2461, norm(x): 0.6676, norm(y): 1.0028, norm:0.9545, tok/sec: 103939.53, flops:91.02, batch-reuse:1
@ 8462 train 4.1347 , allloss: 4.1493, dt: 1267.48ms, fracRes: 0.6020, norm(attn): 0.1523, norm(output): 0.2451, norm(x): 0.6615, norm(y): 1.0028, norm:1.1983, tok/sec: 103411.68, flops:90.56, batch-reuse:1
@ 8463 train 4.0474 , allloss: 4.0617, dt: 1260.76ms, fracRes: 0.6025, norm(attn): 0.1523, norm(output): 0.2451, norm(x): 0.6631, norm(y): 1.0030, norm:1.0297, tok/sec: 103962.33, flops:91.04, batch-reuse:1
@ 8464 train 4.0567 , allloss: 4.0713, dt: 1272.21ms, fracRes: 0.6025, norm(attn): 0.1514, norm(output): 0.2461, norm(x): 0.6636, norm(y): 1.0028, norm:0.9465, tok/sec: 103027.22, flops:90.22, batch-reuse:1
@ 8465 train 4.1883 , allloss: 4.2032, dt: 1276.76ms, fracRes: 0.6034, norm(attn): 0.1504, norm(output): 0.2441, norm(x): 0.6660, norm(y): 1.0027, norm:1.1310, tok/sec: 102660.23, flops:89.90, batch-reuse:1
@ 8466 train 4.1004 , allloss: 4.1148, dt: 1264.21ms, fracRes: 0.6028, norm(attn): 0.1514, norm(output): 0.2422, norm(x): 0.6627, norm(y): 1.0028, norm:1.1278, tok/sec: 103679.10, flops:90.79, batch-reuse:1
@ 8467 train 4.0965 , allloss: 4.1120, dt: 1270.57ms, fracRes: 0.6027, norm(attn): 0.1504, norm(output): 0.2441, norm(x): 0.6659, norm(y): 1.0029, norm:1.0452, tok/sec: 103159.69, flops:90.34, batch-reuse:1
@ 8468 train 4.0353 , allloss: 4.0493, dt: 1280.99ms, fracRes: 0.6025, norm(attn): 0.1504, norm(output): 0.2441, norm(x): 0.6616, norm(y): 1.0030, norm:1.0735, tok/sec: 102320.81, flops:89.60, batch-reuse:1
@ 8469 train 4.0169 , allloss: 4.0311, dt: 1272.97ms, fracRes: 0.6023, norm(attn): 0.1514, norm(output): 0.2422, norm(x): 0.6608, norm(y): 1.0028, norm:0.9140, tok/sec: 102965.66, flops:90.17, batch-reuse:1
@ 8470 train 4.0674 , allloss: 4.0822, dt: 1269.82ms, fracRes: 0.6022, norm(attn): 0.1504, norm(output): 0.2422, norm(x): 0.6593, norm(y): 1.0027, norm:1.1119, tok/sec: 103220.66, flops:90.39, batch-reuse:1
@ 8471 train 3.9373 , allloss: 3.9520, dt: 1280.41ms, fracRes: 0.6014, norm(attn): 0.1504, norm(output): 0.2432, norm(x): 0.6610, norm(y): 1.0028, norm:0.9949, tok/sec: 102367.05, flops:89.64, batch-reuse:1
@ 8472 train 4.0205 , allloss: 4.0348, dt: 1280.97ms, fracRes: 0.6015, norm(attn): 0.1523, norm(output): 0.2451, norm(x): 0.6644, norm(y): 1.0028, norm:1.2393, tok/sec: 102322.17, flops:89.60, batch-reuse:1
@ 8473 train 4.0027 , allloss: 4.0167, dt: 1290.39ms, fracRes: 0.6019, norm(attn): 0.1533, norm(output): 0.2441, norm(x): 0.6651, norm(y): 1.0028, norm:0.9015, tok/sec: 101575.29, flops:88.95, batch-reuse:1
@ 8474 train 4.1076 , allloss: 4.1214, dt: 1270.74ms, fracRes: 0.6027, norm(attn): 0.1514, norm(output): 0.2461, norm(x): 0.6649, norm(y): 1.0028, norm:1.0467, tok/sec: 103145.81, flops:90.32, batch-reuse:1
@ 8475 train 4.1568 , allloss: 4.1712, dt: 1285.09ms, fracRes: 0.6036, norm(attn): 0.1484, norm(output): 0.2441, norm(x): 0.6636, norm(y): 1.0029, norm:0.9646, tok/sec: 101994.06, flops:89.31, batch-reuse:1
@ 8476 train 4.0516 , allloss: 4.0660, dt: 1284.58ms, fracRes: 0.6034, norm(attn): 0.1504, norm(output): 0.2441, norm(x): 0.6623, norm(y): 1.0028, norm:1.0396, tok/sec: 102034.83, flops:89.35, batch-reuse:1
@ 8477 train 3.9903 , allloss: 4.0044, dt: 1264.65ms, fracRes: 0.6017, norm(attn): 0.1533, norm(output): 0.2461, norm(x): 0.6617, norm(y): 1.0028, norm:1.1054, tok/sec: 103642.88, flops:90.76, batch-reuse:1
@ 8478 train 4.1249 , allloss: 4.1389, dt: 1261.72ms, fracRes: 0.6013, norm(attn): 0.1543, norm(output): 0.2461, norm(x): 0.6615, norm(y): 1.0027, norm:1.0345, tok/sec: 103883.75, flops:90.97, batch-reuse:1
@ 8479 train 4.0510 , allloss: 4.0649, dt: 1250.45ms, fracRes: 0.6017, norm(attn): 0.1523, norm(output): 0.2451, norm(x): 0.6605, norm(y): 1.0028, norm:0.9989, tok/sec: 104820.05, flops:91.79, batch-reuse:1
@ 8480 train 4.0442 , allloss: 4.0587, dt: 1267.31ms, fracRes: 0.6024, norm(attn): 0.1504, norm(output): 0.2422, norm(x): 0.6621, norm(y): 1.0028, norm:0.9406, tok/sec: 103425.65, flops:90.57, batch-reuse:1
@ 8481 train 4.0743 , allloss: 4.0893, dt: 1262.05ms, fracRes: 0.6020, norm(attn): 0.1504, norm(output): 0.2412, norm(x): 0.6615, norm(y): 1.0028, norm:1.0552, tok/sec: 103856.69, flops:90.95, batch-reuse:1
@ 8482 train 4.0023 , allloss: 4.0169, dt: 1261.06ms, fracRes: 0.6021, norm(attn): 0.1504, norm(output): 0.2422, norm(x): 0.6621, norm(y): 1.0029, norm:1.2151, tok/sec: 103938.17, flops:91.02, batch-reuse:1
@ 8483 train 4.1882 , allloss: 4.2028, dt: 1274.42ms, fracRes: 0.6013, norm(attn): 0.1523, norm(output): 0.2471, norm(x): 0.6657, norm(y): 1.0025, norm:1.0505, tok/sec: 102848.43, flops:90.06, batch-reuse:1
@ 8484 train 4.1106 , allloss: 4.1247, dt: 1276.78ms, fracRes: 0.6016, norm(attn): 0.1514, norm(output): 0.2451, norm(x): 0.6650, norm(y): 1.0026, norm:1.0282, tok/sec: 102657.86, flops:89.90, batch-reuse:1
@ 8485 train 4.1070 , allloss: 4.1216, dt: 1269.82ms, fracRes: 0.6020, norm(attn): 0.1523, norm(output): 0.2461, norm(x): 0.6650, norm(y): 1.0026, norm:1.0367, tok/sec: 103221.30, flops:90.39, batch-reuse:1
@ 8486 train 4.1074 , allloss: 4.1214, dt: 1293.36ms, fracRes: 0.6024, norm(attn): 0.1504, norm(output): 0.2461, norm(x): 0.6656, norm(y): 1.0028, norm:1.0892, tok/sec: 101342.50, flops:88.74, batch-reuse:1
@ 8487 train 4.0125 , allloss: 4.0270, dt: 1293.59ms, fracRes: 0.6016, norm(attn): 0.1523, norm(output): 0.2461, norm(x): 0.6664, norm(y): 1.0029, norm:0.9682, tok/sec: 101323.88, flops:88.73, batch-reuse:1
@ 8488 train 4.0160 , allloss: 4.0303, dt: 1263.41ms, fracRes: 0.6019, norm(attn): 0.1533, norm(output): 0.2461, norm(x): 0.6638, norm(y): 1.0027, norm:0.9326, tok/sec: 103744.27, flops:90.85, batch-reuse:1
@ 8489 train 3.9409 , allloss: 3.9551, dt: 1265.35ms, fracRes: 0.6011, norm(attn): 0.1533, norm(output): 0.2471, norm(x): 0.6639, norm(y): 1.0028, norm:0.9922, tok/sec: 103585.48, flops:90.71, batch-reuse:1
@ 8490 train 4.2030 , allloss: 4.2185, dt: 1281.51ms, fracRes: 0.6023, norm(attn): 0.1533, norm(output): 0.2480, norm(x): 0.6676, norm(y): 1.0027, norm:1.1169, tok/sec: 102279.62, flops:89.56, batch-reuse:1
@ 8491 train 4.0244 , allloss: 4.0387, dt: 1260.94ms, fracRes: 0.6029, norm(attn): 0.1514, norm(output): 0.2432, norm(x): 0.6608, norm(y): 1.0029, norm:1.3340, tok/sec: 103948.02, flops:91.03, batch-reuse:1
@ 8492 train 4.1650 , allloss: 4.1793, dt: 1253.44ms, fracRes: 0.6033, norm(attn): 0.1504, norm(output): 0.2461, norm(x): 0.6643, norm(y): 1.0027, norm:1.1526, tok/sec: 104569.95, flops:91.57, batch-reuse:1
@ 8493 train 4.0065 , allloss: 4.0202, dt: 1266.83ms, fracRes: 0.6028, norm(attn): 0.1514, norm(output): 0.2422, norm(x): 0.6591, norm(y): 1.0028, norm:1.0197, tok/sec: 103464.48, flops:90.60, batch-reuse:1
@ 8494 train 4.0615 , allloss: 4.0762, dt: 1277.29ms, fracRes: 0.6021, norm(attn): 0.1543, norm(output): 0.2461, norm(x): 0.6624, norm(y): 1.0027, norm:1.2381, tok/sec: 102617.52, flops:89.86, batch-reuse:1
@ 8495 train 4.1053 , allloss: 4.1193, dt: 1275.13ms, fracRes: 0.6024, norm(attn): 0.1514, norm(output): 0.2461, norm(x): 0.6626, norm(y): 1.0028, norm:1.0568, tok/sec: 102790.95, flops:90.01, batch-reuse:1
@ 8496 train 4.0157 , allloss: 4.0299, dt: 1279.10ms, fracRes: 0.6017, norm(attn): 0.1504, norm(output): 0.2451, norm(x): 0.6627, norm(y): 1.0027, norm:1.0825, tok/sec: 102472.30, flops:89.73, batch-reuse:1
@ 8497 train 4.0316 , allloss: 4.0467, dt: 1247.11ms, fracRes: 0.6016, norm(attn): 0.1533, norm(output): 0.2461, norm(x): 0.6645, norm(y): 1.0027, norm:1.0480, tok/sec: 105100.62, flops:92.04, batch-reuse:1
@ 8498 train 4.1720 , allloss: 4.1860, dt: 1265.50ms, fracRes: 0.6012, norm(attn): 0.1533, norm(output): 0.2461, norm(x): 0.6599, norm(y): 1.0025, norm:1.1686, tok/sec: 103572.93, flops:90.70, batch-reuse:1
@ 8499 train 4.1513 , allloss: 4.1654, dt: 1264.53ms, fracRes: 0.6010, norm(attn): 0.1533, norm(output): 0.2480, norm(x): 0.6632, norm(y): 1.0025, norm:1.1374, tok/sec: 103653.14, flops:90.77, batch-reuse:1
@ 8500 train 4.1488 , allloss: 4.1630, dt: 1262.72ms, fracRes: 0.6013, norm(attn): 0.1523, norm(output): 0.2471, norm(x): 0.6656, norm(y): 1.0026, norm:1.0581, tok/sec: 103801.47, flops:90.90, batch-reuse:1
@ 8501 train 4.1954 , allloss: 4.2094, dt: 1268.38ms, fracRes: 0.6010, norm(attn): 0.1523, norm(output): 0.2471, norm(x): 0.6657, norm(y): 1.0025, norm:0.9917, tok/sec: 103338.34, flops:90.49, batch-reuse:1
@ 8502 train 4.0450 , allloss: 4.0588, dt: 1272.90ms, fracRes: 0.6014, norm(attn): 0.1523, norm(output): 0.2471, norm(x): 0.6660, norm(y): 1.0026, norm:0.9427, tok/sec: 102971.22, flops:90.17, batch-reuse:1
@ 8503 train 4.0128 , allloss: 4.0268, dt: 1269.46ms, fracRes: 0.6015, norm(attn): 0.1514, norm(output): 0.2451, norm(x): 0.6637, norm(y): 1.0026, norm:1.1096, tok/sec: 103250.09, flops:90.41, batch-reuse:1
@ 8504 train 4.0817 , allloss: 4.0957, dt: 1251.48ms, fracRes: 0.6021, norm(attn): 0.1504, norm(output): 0.2441, norm(x): 0.6616, norm(y): 1.0028, norm:1.0271, tok/sec: 104733.49, flops:91.71, batch-reuse:1
@ 8505 train 4.0206 , allloss: 4.0348, dt: 1282.01ms, fracRes: 0.6017, norm(attn): 0.1533, norm(output): 0.2451, norm(x): 0.6615, norm(y): 1.0028, norm:0.9473, tok/sec: 102239.14, flops:89.53, batch-reuse:1
@ 8506 train 4.0767 , allloss: 4.0901, dt: 1256.76ms, fracRes: 0.6024, norm(attn): 0.1523, norm(output): 0.2461, norm(x): 0.6616, norm(y): 1.0027, norm:1.0795, tok/sec: 104293.81, flops:91.33, batch-reuse:1
@ 8507 train 4.1039 , allloss: 4.1176, dt: 1301.06ms, fracRes: 0.6016, norm(attn): 0.1543, norm(output): 0.2461, norm(x): 0.6628, norm(y): 1.0027, norm:1.3171, tok/sec: 100742.68, flops:88.22, batch-reuse:1
@ 8508 train 4.1280 , allloss: 4.1424, dt: 1310.99ms, fracRes: 0.6023, norm(attn): 0.1533, norm(output): 0.2461, norm(x): 0.6628, norm(y): 1.0026, norm:1.0457, tok/sec: 99979.63, flops:87.55, batch-reuse:1
@ 8509 train 4.0478 , allloss: 4.0618, dt: 1293.75ms, fracRes: 0.6021, norm(attn): 0.1504, norm(output): 0.2461, norm(x): 0.6624, norm(y): 1.0027, norm:0.9177, tok/sec: 101311.82, flops:88.72, batch-reuse:1
@ 8510 train 4.0077 , allloss: 4.0217, dt: 1269.64ms, fracRes: 0.6012, norm(attn): 0.1504, norm(output): 0.2461, norm(x): 0.6643, norm(y): 1.0026, norm:0.9881, tok/sec: 103235.93, flops:90.40, batch-reuse:1
@ 8511 train 3.9823 , allloss: 4.0001, dt: 1276.76ms, fracRes: 0.6015, norm(attn): 0.1523, norm(output): 0.2451, norm(x): 0.6640, norm(y): 1.0028, norm:1.2527, tok/sec: 102660.04, flops:89.90, batch-reuse:1
@ 8512 train 3.9408 , allloss: 3.9553, dt: 1286.56ms, fracRes: 0.6018, norm(attn): 0.1523, norm(output): 0.2441, norm(x): 0.6646, norm(y): 1.0029, norm:1.0487, tok/sec: 101877.61, flops:89.21, batch-reuse:1
@ 8513 train 3.9196 , allloss: 3.9338, dt: 1255.80ms, fracRes: 0.6016, norm(attn): 0.1514, norm(output): 0.2441, norm(x): 0.6649, norm(y): 1.0029, norm:1.0491, tok/sec: 104373.11, flops:91.40, batch-reuse:1
@ 8514 train 3.9704 , allloss: 3.9853, dt: 1262.89ms, fracRes: 0.6016, norm(attn): 0.1523, norm(output): 0.2451, norm(x): 0.6632, norm(y): 1.0027, norm:1.0350, tok/sec: 103787.36, flops:90.89, batch-reuse:1
@ 8515 train 3.9663 , allloss: 3.9808, dt: 1269.03ms, fracRes: 0.6020, norm(attn): 0.1514, norm(output): 0.2432, norm(x): 0.6614, norm(y): 1.0027, norm:0.9394, tok/sec: 103285.18, flops:90.45, batch-reuse:1
@ 8516 train 3.8962 , allloss: 3.9105, dt: 1280.12ms, fracRes: 0.6018, norm(attn): 0.1523, norm(output): 0.2441, norm(x): 0.6627, norm(y): 1.0026, norm:0.9999, tok/sec: 102390.45, flops:89.66, batch-reuse:1
@ 8517 train 3.9002 , allloss: 3.9148, dt: 1256.34ms, fracRes: 0.6025, norm(attn): 0.1504, norm(output): 0.2432, norm(x): 0.6636, norm(y): 1.0028, norm:1.0830, tok/sec: 104328.72, flops:91.36, batch-reuse:1
@ 8518 train 3.9478 , allloss: 3.9618, dt: 1274.15ms, fracRes: 0.6017, norm(attn): 0.1514, norm(output): 0.2441, norm(x): 0.6606, norm(y): 1.0029, norm:0.9547, tok/sec: 102869.93, flops:90.08, batch-reuse:1
@ 8519 train 4.0241 , allloss: 4.0387, dt: 1287.80ms, fracRes: 0.6014, norm(attn): 0.1514, norm(output): 0.2461, norm(x): 0.6618, norm(y): 1.0026, norm:1.0105, tok/sec: 101780.11, flops:89.13, batch-reuse:1
@ 8520 train 4.1167 , allloss: 4.1312, dt: 1271.09ms, fracRes: 0.6019, norm(attn): 0.1514, norm(output): 0.2432, norm(x): 0.6589, norm(y): 1.0025, norm:0.9738, tok/sec: 103117.45, flops:90.30, batch-reuse:1
@ 8521 train 3.9459 , allloss: 3.9606, dt: 1271.95ms, fracRes: 0.6021, norm(attn): 0.1514, norm(output): 0.2422, norm(x): 0.6593, norm(y): 1.0027, norm:1.2413, tok/sec: 103047.77, flops:90.24, batch-reuse:1
@ 8522 train 3.8652 , allloss: 3.8795, dt: 1262.04ms, fracRes: 0.6017, norm(attn): 0.1523, norm(output): 0.2412, norm(x): 0.6586, norm(y): 1.0027, norm:1.1022, tok/sec: 103857.18, flops:90.95, batch-reuse:1
@ 8523 train 3.9637 , allloss: 3.9780, dt: 1262.42ms, fracRes: 0.6022, norm(attn): 0.1514, norm(output): 0.2412, norm(x): 0.6585, norm(y): 1.0028, norm:1.0616, tok/sec: 103825.60, flops:90.92, batch-reuse:1
@ 8524 train 3.9592 , allloss: 3.9732, dt: 1251.77ms, fracRes: 0.6029, norm(attn): 0.1504, norm(output): 0.2402, norm(x): 0.6601, norm(y): 1.0027, norm:1.0312, tok/sec: 104709.19, flops:91.69, batch-reuse:1
@ 8525 train 3.9453 , allloss: 3.9596, dt: 1258.57ms, fracRes: 0.6029, norm(attn): 0.1504, norm(output): 0.2393, norm(x): 0.6602, norm(y): 1.0028, norm:0.9786, tok/sec: 104143.50, flops:91.20, batch-reuse:1
@ 8526 train 3.9111 , allloss: 3.9253, dt: 1268.77ms, fracRes: 0.6017, norm(attn): 0.1523, norm(output): 0.2441, norm(x): 0.6606, norm(y): 1.0026, norm:1.1192, tok/sec: 103306.33, flops:90.46, batch-reuse:1
@ 8527 train 3.9376 , allloss: 3.9522, dt: 1273.64ms, fracRes: 0.6015, norm(attn): 0.1523, norm(output): 0.2461, norm(x): 0.6631, norm(y): 1.0027, norm:1.0611, tok/sec: 102911.04, flops:90.12, batch-reuse:1
@ 8528 train 3.9536 , allloss: 3.9680, dt: 1265.14ms, fracRes: 0.6010, norm(attn): 0.1533, norm(output): 0.2451, norm(x): 0.6618, norm(y): 1.0025, norm:1.0394, tok/sec: 103602.84, flops:90.72, batch-reuse:1
@ 8529 train 3.9296 , allloss: 3.9445, dt: 1268.53ms, fracRes: 0.6023, norm(attn): 0.1514, norm(output): 0.2432, norm(x): 0.6634, norm(y): 1.0027, norm:1.1619, tok/sec: 103325.50, flops:90.48, batch-reuse:1
@ 8530 train 3.9579 , allloss: 3.9730, dt: 1259.48ms, fracRes: 0.6024, norm(attn): 0.1514, norm(output): 0.2451, norm(x): 0.6654, norm(y): 1.0025, norm:0.9540, tok/sec: 104068.37, flops:91.13, batch-reuse:1
@ 8531 train 3.9858 , allloss: 3.9997, dt: 1280.00ms, fracRes: 0.6009, norm(attn): 0.1523, norm(output): 0.2461, norm(x): 0.6608, norm(y): 1.0023, norm:1.0909, tok/sec: 102399.74, flops:89.67, batch-reuse:1
@ 8532 train 3.9643 , allloss: 3.9794, dt: 1292.83ms, fracRes: 0.6018, norm(attn): 0.1514, norm(output): 0.2441, norm(x): 0.6610, norm(y): 1.0028, norm:1.2312, tok/sec: 101384.01, flops:88.78, batch-reuse:1
@ 8533 train 3.9977 , allloss: 4.0119, dt: 1268.93ms, fracRes: 0.6011, norm(attn): 0.1514, norm(output): 0.2461, norm(x): 0.6604, norm(y): 1.0027, norm:0.9924, tok/sec: 103293.68, flops:90.45, batch-reuse:1
@ 8534 train 4.0100 , allloss: 4.0243, dt: 1269.48ms, fracRes: 0.6018, norm(attn): 0.1523, norm(output): 0.2432, norm(x): 0.6614, norm(y): 1.0025, norm:1.0331, tok/sec: 103248.23, flops:90.41, batch-reuse:1
@ 8535 train 3.8396 , allloss: 3.8544, dt: 1271.51ms, fracRes: 0.6031, norm(attn): 0.1514, norm(output): 0.2461, norm(x): 0.6640, norm(y): 1.0027, norm:1.1412, tok/sec: 103083.65, flops:90.27, batch-reuse:1
@ 8536 train 3.9533 , allloss: 3.9687, dt: 1273.03ms, fracRes: 0.6027, norm(attn): 0.1533, norm(output): 0.2441, norm(x): 0.6631, norm(y): 1.0027, norm:1.1855, tok/sec: 102960.53, flops:90.16, batch-reuse:1
@ 8537 train 3.8954 , allloss: 3.9101, dt: 1266.74ms, fracRes: 0.6021, norm(attn): 0.1523, norm(output): 0.2471, norm(x): 0.6637, norm(y): 1.0026, norm:1.0681, tok/sec: 103471.62, flops:90.61, batch-reuse:1
@ 8538 train 3.9060 , allloss: 3.9203, dt: 1295.98ms, fracRes: 0.6015, norm(attn): 0.1523, norm(output): 0.2422, norm(x): 0.6609, norm(y): 1.0026, norm:0.9601, tok/sec: 101137.27, flops:88.56, batch-reuse:1
@ 8539 train 3.8231 , allloss: 3.8377, dt: 1270.16ms, fracRes: 0.6015, norm(attn): 0.1504, norm(output): 0.2393, norm(x): 0.6595, norm(y): 1.0028, norm:0.9856, tok/sec: 103193.19, flops:90.36, batch-reuse:1
@ 8540 train 4.0188 , allloss: 4.0332, dt: 1255.33ms, fracRes: 0.6017, norm(attn): 0.1484, norm(output): 0.2412, norm(x): 0.6571, norm(y): 1.0025, norm:0.9789, tok/sec: 104412.48, flops:91.43, batch-reuse:1
@ 8541 train 3.9138 , allloss: 3.9279, dt: 1261.73ms, fracRes: 0.6015, norm(attn): 0.1514, norm(output): 0.2402, norm(x): 0.6570, norm(y): 1.0026, norm:1.0436, tok/sec: 103883.16, flops:90.97, batch-reuse:1
@ 8542 train 3.9592 , allloss: 3.9737, dt: 1251.93ms, fracRes: 0.6014, norm(attn): 0.1514, norm(output): 0.2461, norm(x): 0.6563, norm(y): 1.0025, norm:0.9566, tok/sec: 104695.85, flops:91.68, batch-reuse:1
@ 8543 train 3.8657 , allloss: 3.8799, dt: 1283.65ms, fracRes: 0.6013, norm(attn): 0.1514, norm(output): 0.2441, norm(x): 0.6581, norm(y): 1.0025, norm:1.0574, tok/sec: 102108.89, flops:89.42, batch-reuse:1
@ 8544 train 3.8032 , allloss: 3.8176, dt: 1281.27ms, fracRes: 0.6017, norm(attn): 0.1514, norm(output): 0.2441, norm(x): 0.6576, norm(y): 1.0025, norm:0.9487, tok/sec: 102298.75, flops:89.58, batch-reuse:1
@ 8545 train 3.8255 , allloss: 3.8400, dt: 1273.17ms, fracRes: 0.6021, norm(attn): 0.1504, norm(output): 0.2412, norm(x): 0.6552, norm(y): 1.0027, norm:0.9779, tok/sec: 102949.06, flops:90.15, batch-reuse:1
@ 8546 train 3.9400 , allloss: 3.9548, dt: 1276.08ms, fracRes: 0.6024, norm(attn): 0.1504, norm(output): 0.2412, norm(x): 0.6568, norm(y): 1.0027, norm:1.0489, tok/sec: 102714.21, flops:89.95, batch-reuse:1
@ 8547 train 3.8525 , allloss: 3.8678, dt: 1261.33ms, fracRes: 0.6031, norm(attn): 0.1504, norm(output): 0.2402, norm(x): 0.6593, norm(y): 1.0027, norm:1.0595, tok/sec: 103915.78, flops:91.00, batch-reuse:1
@ 8548 train 3.8889 , allloss: 3.9034, dt: 1273.77ms, fracRes: 0.6032, norm(attn): 0.1504, norm(output): 0.2383, norm(x): 0.6567, norm(y): 1.0027, norm:1.1366, tok/sec: 102900.46, flops:90.11, batch-reuse:1
@ 8549 train 3.8422 , allloss: 3.8606, dt: 1266.03ms, fracRes: 0.6029, norm(attn): 0.1543, norm(output): 0.2432, norm(x): 0.6646, norm(y): 1.0023, norm:1.4054, tok/sec: 103529.83, flops:90.66, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8047, 0.1934, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7344, 0.0669, 0.1973, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8320, 0.0540, 0.1055, 0.0101, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7148, 0.0371, 0.0630, 0.0525, 0.1348, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8008, 0.0776, 0.0698, 0.0187, 0.0198, 0.0124, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4746, 0.0381, 0.0292, 0.0635, 0.2178, 0.0693, 0.1069, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3281, 0.1245, 0.1924, 0.0138, 0.0615, 0.0659, 0.0566, 0.1562, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8164, 0.0496, 0.0469, 0.0032, 0.0149, 0.0034, 0.0256, 0.0210, 0.0178, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2949, 0.0713, 0.2109, 0.0085, 0.0201, 0.0183, 0.0317, 0.1592, 0.0232, 0.1621, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4062, 0.0698, 0.1309, 0.0225, 0.0415, 0.0088, 0.0222, 0.0557, 0.0393, 0.0669, 0.1357, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0674, 0.0225, 0.0247, 0.1660, 0.0825, 0.0376, 0.0674, 0.0884, 0.2402, 0.0962, 0.0854, 0.0214, 0.0000, 0.0000, 0.0000],
        [0.0688, 0.0444, 0.0613, 0.0371, 0.0474, 0.0610, 0.0806, 0.0830, 0.0630, 0.1582, 0.0762, 0.1328, 0.0869, 0.0000, 0.0000],
        [0.5742, 0.0703, 0.0549, 0.0038, 0.0212, 0.0062, 0.0339, 0.0214, 0.0250, 0.0122, 0.0417, 0.0337, 0.0698, 0.0317, 0.0000],
        [0.1553, 0.0737, 0.1016, 0.0549, 0.0310, 0.0053, 0.0105, 0.1289, 0.0193, 0.0684, 0.0383, 0.0869, 0.1426, 0.0255, 0.0581]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0027, -0.0050, -0.0041,  ..., -0.0365,  0.0157,  0.0050],
        [-0.0464,  0.0018, -0.0038,  ...,  0.0042,  0.0063,  0.0045],
        [ 0.0310,  0.0368, -0.0044,  ..., -0.0232,  0.0218, -0.0044],
        ...,
        [ 0.0319,  0.0200,  0.0089,  ..., -0.0371,  0.0125,  0.0194],
        [-0.0494,  0.0043, -0.0306,  ...,  0.0099, -0.0023, -0.0147],
        [-0.0232,  0.0044, -0.0166,  ...,  0.0113, -0.0306, -0.0059]], device='cuda:0', requires_grad=True)
K: tensor([ 1.4531,  0.4746,  0.2852,  0.6211,  0.7266, -0.3184,  0.1050, -0.8281, -0.6602, -0.2949, -0.1260, -0.3828,  0.0339, -0.9023, -0.1895, -0.6055,  0.0894,  0.1631, -1.3594,  0.5898,  1.1016,  0.8867, -0.7734,  0.7578, -0.4082, -0.5664, -0.9492,  0.1826,  0.4453, -0.1562,  1.4531,  0.0442,
         1.1484,  0.1445,  0.2070,  1.7109, -1.9219,  0.1816, -0.2412, -2.5000,  0.5273,  0.5977,  0.2021,  1.2344,  0.0796,  0.2715, -0.2080,  0.6250,  1.0469, -0.8203,  0.2188,  0.4824, -1.8906,  0.2021,  1.7500, -0.6445, -0.9453,  0.2451,  0.7852, -0.2559,  0.4961, -0.4824, -0.0155,  0.0430],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[    -0.0323,     -0.0000,     -0.0110,  ...,      0.0091,     -0.0040,     -0.0164],
        [     0.0283,     -0.0170,      0.0139,  ...,      0.0042,      0.0411,      0.0076],
        [    -0.0543,      0.0405,      0.0060,  ...,     -0.0177,     -0.0347,     -0.0436],
        ...,
        [     0.0094,      0.0049,      0.0296,  ...,      0.0203,      0.0165,      0.0214],
        [     0.0159,     -0.0106,      0.0292,  ...,      0.0283,      0.0060,      0.0085],
        [     0.0238,     -0.0076,      0.0332,  ...,     -0.0205,      0.0230,      0.0056]], device='cuda:0', requires_grad=True)
Q: tensor([-0.0432, -0.2734, -0.9023, -0.7188,  0.0170, -0.1396, -2.3906, -0.5117,  0.2500,  0.7188, -1.0625, -0.3477,  0.0177, -0.7773, -0.3574, -0.0026, -0.0188, -0.1338,  0.4043,  0.5859,  0.2949,  0.2793,  1.0469,  0.3516,  0.6992, -0.0903, -0.7852, -1.8359, -0.0618,  0.1787,  0.4844,  0.3730,
        -0.2500, -0.9570,  0.0718, -0.4961,  1.2031,  1.0234, -0.2812,  1.6016,  1.6797,  0.6641,  0.5039,  0.3633, -0.5352,  0.8242, -1.0234,  0.3262, -0.3145,  0.5430, -1.6641, -0.4746,  0.1543, -1.5781, -0.5156, -0.4902,  0.4805, -1.1328,  0.1250, -0.2559, -0.9375,  0.0913,  0.3730,  1.1406],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -1.4297,     -0.7930,     -2.3594,     -3.6875,     -3.3281,     -1.6484,     -0.3516,     -3.4688,     -2.4844,     -3.3125,     -1.7031,      0.5352,     -3.2969,     -2.0781],
        [     0.0000,     -2.4062,     -1.3203,     -2.2812,     -1.8672,     -3.2656,     -2.9062,     -0.9141,     -1.6172,     -1.1953,     -0.6875,     -0.7461,     -0.5273,     -1.1953,     -1.0312],
        [     0.0000,     -2.7344,     -2.0625,     -4.4062,     -2.4688,     -3.7969,     -3.3594,     -2.8438,     -2.7656,     -3.0156,     -0.4922,     -1.5156,     -2.4688,     -2.3750,     -2.0000],
        [     0.0000,     -2.9531,     -2.4219,     -2.6094,     -1.6719,     -4.1250,     -3.2500,     -2.6875,     -1.3984,     -1.8438,     -0.7344,     -1.8281,     -1.9766,     -0.7031,     -1.4219],
        [     0.0000,     -2.3438,     -2.4375,     -3.7656,     -3.7031,     -4.1562,     -1.8672,     -2.2812,     -2.8750,     -4.0312,     -3.1562,     -3.0469,     -1.7422,     -2.3906,     -2.7656],
        [     0.0000,     -2.5156,     -2.7969,     -2.0156,     -0.7812,     -1.9219,     -1.4922,     -2.4844,      0.3809,     -0.8672,      1.0156,     -1.0938,     -2.4688,      0.7656,     -0.5391],
        [     0.0000,     -0.9688,     -0.5352,     -3.1719,     -1.6797,     -1.6016,     -1.7578,     -0.7422,     -1.5234,     -0.1641,     -0.2852,      0.0786,     -0.0918,     -1.8359,     -0.4043],
        [     0.0000,     -2.7969,     -2.8594,     -5.5625,     -4.0000,     -5.5000,     -3.4531,     -3.6719,     -3.8281,     -4.4375,     -2.9219,     -3.1719,     -2.4219,     -3.5312,     -3.2969],
        [     0.0000,     -1.4141,     -0.3359,     -3.5469,     -2.6875,     -2.7812,     -2.2344,     -0.6133,     -2.5469,     -0.5938,     -1.2031,     -0.0791,      0.3730,     -2.6250,     -0.5391],
        [     0.0000,     -1.7578,     -1.1328,     -2.9062,     -2.2812,     -3.8281,     -2.9062,     -1.9922,     -2.3281,     -1.8047,     -1.1016,     -1.0391,     -1.3750,     -1.9297,     -1.3203],
        [     0.0000,     -1.0938,     -1.0078,      0.9062,      0.2041,     -0.5820,      0.0025,      0.2715,      1.2734,      0.3555,      0.2412,     -1.1484,     -0.1187,      1.3125,      0.7227],
        [     0.0000,     -0.4336,     -0.1143,     -0.6133,     -0.3711,     -0.1182,      0.1592,      0.1904,     -0.0898,      0.8320,      0.1035,      0.6602,      0.2373,     -0.0806,      0.5352],
        [     0.0000,     -2.0938,     -2.3438,     -5.0312,     -3.2969,     -4.5312,     -2.8281,     -3.2969,     -3.1406,     -3.8438,     -2.6250,     -2.8281,     -2.1094,     -2.8906,     -2.9531],
        [     0.0000,     -0.7422,     -0.4199,     -1.0391,     -1.6094,     -3.3750,     -2.6875,     -0.1865,     -2.0781,     -0.8164,     -1.3984,     -0.5781,     -0.0820,     -1.8047,     -0.9805]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8501],
        [0.8411],
        [0.8420],
        [0.6130],
        [0.7244],
        [0.6322],
        [0.5145],
        [0.5999],
        [0.5263],
        [0.3183],
        [0.1898],
        [0.1927],
        [0.3271],
        [0.2222]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8984, 0.1001, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7500, 0.2275, 0.0228, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2715, 0.5078, 0.1348, 0.0835, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4336, 0.1279, 0.0310, 0.0767, 0.3301, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5156, 0.1621, 0.0203, 0.0320, 0.1128, 0.1572, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0566, 0.2402, 0.0155, 0.0479, 0.1187, 0.4102, 0.1113, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1504, 0.0742, 0.0162, 0.0271, 0.0476, 0.1875, 0.4414, 0.0549, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0884, 0.0311, 0.0083, 0.0050, 0.0549, 0.1455, 0.5117, 0.0189, 0.1367, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1104, 0.0593, 0.0141, 0.0205, 0.0197, 0.0811, 0.0693, 0.1157, 0.4961, 0.0134, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0559, 0.0147, 0.0014, 0.0039, 0.0308, 0.0640, 0.1738, 0.0043, 0.1729, 0.0042, 0.4746, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1064, 0.0522, 0.0292, 0.0221, 0.0320, 0.0771, 0.3477, 0.0786, 0.0383, 0.0408, 0.1562, 0.0194, 0.0000, 0.0000, 0.0000],
        [0.0260, 0.0084, 0.0043, 0.0215, 0.0101, 0.0776, 0.1445, 0.0386, 0.1602, 0.0201, 0.3281, 0.0182, 0.1416, 0.0000, 0.0000],
        [0.0476, 0.0089, 0.0018, 0.0020, 0.0140, 0.0513, 0.2734, 0.0049, 0.0569, 0.0028, 0.3008, 0.0115, 0.0243, 0.2002, 0.0000],
        [0.0172, 0.0114, 0.0017, 0.0026, 0.0072, 0.0674, 0.0752, 0.0282, 0.0972, 0.0085, 0.1436, 0.0610, 0.1226, 0.3086, 0.0479]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0334, -0.0192, -0.0164,  ..., -0.0170, -0.0226,  0.0110],
        [-0.0220,  0.0196, -0.0186,  ...,  0.0139, -0.0009, -0.0554],
        [ 0.0224,  0.0214,  0.0138,  ...,  0.0131,  0.0292,  0.0203],
        ...,
        [ 0.0059, -0.0168,  0.0315,  ...,  0.0381, -0.0186, -0.0179],
        [-0.0174, -0.0095,  0.0123,  ...,  0.0114,  0.0160, -0.0077],
        [ 0.0300,  0.0421,  0.0087,  ..., -0.0078, -0.0153,  0.0230]], device='cuda:0', requires_grad=True)
K: tensor([ 2.7031, -0.7266, -1.9297, -1.6953, -1.7578, -1.3516, -0.3125, -0.1079,  0.3027,  0.6992,  0.9023,  1.7734, -2.1094,  1.0547,  0.4883, -3.4844,  0.6094, -1.1641,  0.4609,  2.2500, -1.2734,  1.6484,  1.3359, -2.6406,  0.5938, -1.2266, -2.3750,  0.1328,  1.6094, -0.6328,  3.5781,  1.4297,
        -1.7109, -0.3789, -2.9219,  0.6602,  0.9492,  2.5625, -0.9688,  1.2812,  2.7188,  0.1836, -0.8867,  3.0000,  1.7109,  0.2715, -1.8203, -3.0938,  1.7344,  0.9297, -2.3281,  2.8594, -0.9141, -0.3125,  0.1572,  0.9688,  1.9062,  1.0938, -1.4375,  2.0312,  0.3242,  1.9453,  3.7969, -0.9102],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0236, -0.0026, -0.0116,  ...,  0.0021,  0.0192, -0.0090],
        [ 0.0144,  0.0040, -0.0534,  ..., -0.0124, -0.0060, -0.0150],
        [ 0.0465,  0.0079,  0.0294,  ..., -0.0204,  0.0256,  0.0112],
        ...,
        [-0.0277, -0.0137,  0.0099,  ...,  0.0123, -0.0047, -0.0390],
        [ 0.0352,  0.0135, -0.0046,  ...,  0.0021, -0.0053, -0.0107],
        [ 0.0047, -0.0299, -0.0175,  ...,  0.0125, -0.0033,  0.0147]], device='cuda:0', requires_grad=True)
Q: tensor([-1.2188, -0.5508, -1.3594, -1.3438,  0.8672, -1.2188, -0.4082,  0.6797,  0.8125,  0.7344,  0.2383, -0.5898,  0.6172, -1.1562, -0.1543,  1.6875, -2.5000,  0.2412, -2.2969, -0.4160, -0.9141,  0.2656, -1.1094,  2.2031, -0.7188,  0.3262,  2.2188, -1.0312, -1.5938,  0.0396,  0.0444, -2.1719,
        -1.6484,  1.0156,  0.2637,  1.0156,  2.1875,  0.1533,  1.4453,  1.6172,  1.2812,  0.0698, -1.0156,  0.7461,  1.4062, -2.1875,  1.1953, -2.1875,  2.0000,  1.5469, -0.3555,  0.4238, -1.9453, -2.3125, -0.7539,  0.9766,  0.9961,  0.6484,  1.2656,  1.1484, -0.9297,  0.8281,  0.4707, -0.8867],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -2.2031, -5.0000, -6.1250, -3.9062, -3.5469, -3.6094, -7.0000, -4.8125, -7.2812, -4.8438, -6.6250, -6.6562, -4.3125, -4.1250],
        [ 0.0000, -1.1953, -3.4844, -3.9062, -3.2500, -1.7891, -1.1250, -2.8281, -2.5938, -2.7500, -1.9766, -2.0938, -1.8047, -2.1094, -1.6641],
        [ 0.0000,  0.6250, -0.6992, -1.1797, -1.0000, -0.1045, -0.1689, -1.3281, -1.1953, -0.9688, -0.2793, -1.0156, -0.1377, -0.4707,  1.5078],
        [ 0.0000, -1.2188, -2.6406, -1.7266, -0.2734,  0.2373,  0.6914, -1.4609,  1.8984, -1.4297,  2.4531, -1.0703,  0.0742,  3.0625,  0.8242],
        [ 0.0000, -1.1641, -3.2344, -2.7812, -1.5234, -1.1875,  0.2217, -1.7344, -0.4004, -1.7188,  0.9609, -0.8555, -0.0728,  0.5039,  0.2334],
        [ 0.0000,  1.4453, -1.2969, -0.1699,  0.7422,  1.9766,  0.6758,  0.1240,  3.2031, -1.1406,  1.9766, -0.0757,  1.4219,  4.1250,  1.6484],
        [ 0.0000, -0.7109, -2.2344, -1.7188, -1.1484,  0.2168,  1.0781, -1.0078,  0.9180, -1.8828,  1.7188, -1.5469,  0.7031,  2.0469,  0.7852],
        [ 0.0000, -1.0469, -2.3594, -2.8750, -0.4785,  0.5000,  1.7500, -1.5469,  0.4375, -2.4688,  2.0156, -0.7656, -0.2559,  1.7422,  1.5547],
        [ 0.0000, -0.6211, -2.0625, -1.6797, -1.7188, -0.3047, -0.4609,  0.0503,  1.5078, -2.1094,  0.4844,  0.2891,  1.3828,  2.2344, -0.2852],
        [ 0.0000, -1.3359, -3.6875, -2.6562, -0.5977,  0.1377,  1.1328, -2.5781,  1.1250, -2.5781,  2.1406, -1.3047, -0.7188,  2.4531,  0.5703],
        [ 0.0000, -0.7109, -1.2969, -1.5781, -1.2031, -0.3223,  1.1797, -0.3047, -1.0234, -0.9609,  0.3809, -1.7031,  0.1689, -0.3496,  1.2891],
        [ 0.0000, -1.1250, -1.7891, -0.1904, -0.9414,  1.0938,  1.7188,  0.3945,  1.8203, -0.2578,  2.5312, -0.3594,  1.6953,  3.0000,  2.0156],
        [ 0.0000, -1.6797, -3.2500, -3.1562, -1.2188,  0.0742,  1.7500, -2.2656,  0.1768, -2.8438,  1.8438, -1.4141, -0.6719,  1.4375,  1.1250],
        [ 0.0000, -0.4180, -2.3281, -1.8906, -0.8711,  1.3672,  1.4688,  0.4941,  1.7266, -0.7109,  2.1250,  1.2656,  1.9609,  2.8906,  1.0234]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8307],
        [0.5282],
        [0.3273],
        [0.5774],
        [0.4112],
        [0.2339],
        [0.2241],
        [0.1975],
        [0.2619],
        [0.2986],
        [0.1532],
        [0.1244],
        [0.1435],
        [0.1663]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0009,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0036,     0.0081,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0011,     0.0012,     0.0006,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0007,     0.0014,     0.0003,     0.0012,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0018,     0.0032,     0.0005,     0.0018,     0.0016,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9805,     0.0026,     0.0054,     0.0011,     0.0008,     0.0018,     0.0070,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7656,     0.0134,     0.0294,     0.0077,     0.0068,     0.0146,     0.0250,     0.1387,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0005,     0.0008,     0.0002,     0.0002,     0.0006,     0.0014,     0.0014,     0.0008,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0004,     0.0004,     0.0002,     0.0001,     0.0003,     0.0005,     0.0008,     0.0003,     0.0010,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9844,     0.0018,     0.0024,     0.0007,     0.0003,     0.0008,     0.0020,     0.0042,     0.0014,     0.0008,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9727,     0.0008,     0.0015,     0.0004,     0.0004,     0.0004,     0.0016,     0.0058,     0.0010,     0.0009,     0.0001,     0.0148,     0.0000,     0.0000,     0.0000],
        [    0.9414,     0.0009,     0.0023,     0.0009,     0.0006,     0.0011,     0.0023,     0.0113,     0.0023,     0.0052,     0.0002,     0.0090,     0.0237,     0.0000,     0.0000],
        [    0.9922,     0.0004,     0.0007,     0.0002,     0.0001,     0.0004,     0.0009,     0.0014,     0.0006,     0.0003,     0.0000,     0.0008,     0.0020,     0.0005,     0.0000],
        [    0.9727,     0.0014,     0.0026,     0.0010,     0.0011,     0.0012,     0.0031,     0.0035,     0.0020,     0.0010,     0.0002,     0.0028,     0.0037,     0.0015,     0.0032]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0061, -0.0071,  0.0312,  ..., -0.0162, -0.0038, -0.0175],
        [ 0.0403, -0.0423, -0.0121,  ..., -0.0098, -0.0199, -0.0376],
        [ 0.0458, -0.0327,  0.0379,  ..., -0.0100, -0.0156,  0.0037],
        ...,
        [ 0.0324,  0.0199, -0.0261,  ...,  0.0016,  0.0185,  0.0161],
        [ 0.0127,  0.0203, -0.0067,  ..., -0.0158, -0.0428, -0.0227],
        [ 0.0222, -0.0110,  0.0065,  ..., -0.0032, -0.0125,  0.0142]], device='cuda:0', requires_grad=True)
K: tensor([    -0.9844,     -0.4902,     -1.0156,     -0.0005,     -2.0469,      2.7656,     -1.0781,      2.5000,     -1.5703,     -1.2109,      1.0078,      0.5312,     -1.5547,     -1.4688,     -1.5703,      0.8633,      1.2734,      2.3438,     -1.9766,      1.1172,      2.3594,      0.5000,
            -1.2500,     -0.1943,      1.8125,     -1.3281,      0.2793,     -1.9453,      1.5078,      0.8281,      1.0234,      2.3750,     -0.8828,      1.9219,      2.1719,     -0.7578,     -1.3828,      1.8672,      1.6250,     -1.6172,      2.0781,     -2.3281,      0.1191,      1.0859,
             0.2520,      2.3750,     -1.3750,     -3.0312,     -0.2637,      2.8281,     -0.9609,     -1.3750,      1.5625,      0.3320,      1.7500,     -1.3438,     -1.6250,     -2.4219,     -1.6328,     -2.2344,     -2.4688,     -1.4609,      1.3672,      0.6836], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[ 0.0045,  0.0303,  0.0227,  ..., -0.0158,  0.0457, -0.0187],
        [-0.0088,  0.0487,  0.0007,  ...,  0.0241,  0.0197, -0.0118],
        [-0.0234, -0.0019,  0.0163,  ..., -0.0166,  0.0576, -0.0344],
        ...,
        [ 0.0220, -0.0128,  0.0122,  ..., -0.0232, -0.0047, -0.0069],
        [ 0.0072,  0.0090,  0.0069,  ...,  0.0246,  0.0172, -0.0088],
        [ 0.0116, -0.0299, -0.0193,  ...,  0.0305,  0.0254,  0.0062]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.9336,  0.9805, -1.1094,  0.3730, -0.2031, -0.5508,  0.7227,  0.1162, -0.4863,  0.4785, -0.3066,  0.0579,  0.4004,  1.2109,  0.3457, -1.3984, -0.2559, -2.2344,  0.9102,  0.0874,  0.1895,  0.9375,  0.6992,  0.5469,  0.2656, -0.0403,  0.5469,  0.0437, -0.6523, -0.7656,  0.1553, -0.3477,
        -0.7031, -1.0234, -0.1592,  0.0957,  1.2891, -0.8516,  0.3320, -0.1533, -1.7891,  1.4688, -0.0659,  0.5586,  0.4902, -0.3652,  0.6211,  0.0112, -1.5469, -0.7656,  0.6445, -0.1787, -0.1738, -0.5977, -0.0097,  0.6406, -0.5625,  0.9570,  1.5078,  2.1250,  1.1406,  0.6562, -1.5078, -0.1455],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000,  -7.0312,  -6.5938,  -8.1250,  -7.7188,  -7.5000,  -6.7812,  -6.2188,  -7.1562,  -7.8125,  -9.3750,  -6.1562,  -6.4688,  -7.4375,  -6.9375],
        [  0.0000,  -5.6250,  -4.8125,  -6.1562,  -6.8125,  -6.2500,  -5.6250,  -4.3438,  -5.9062,  -5.7188,  -7.9062,  -4.4688,  -4.7188,  -6.0000,  -5.2188],
        [  0.0000,  -6.8438,  -6.7500,  -7.3750,  -8.6875,  -7.5312,  -6.8125,  -6.4062,  -7.5938,  -7.5000,  -9.6250,  -6.3438,  -6.5000,  -7.7500,  -6.7812],
        [  0.0000,  -7.3125,  -6.5938,  -8.2500,  -6.7188,  -6.9375,  -5.8438,  -5.3750,  -6.5625,  -7.5000,  -9.0625,  -6.0938,  -5.5938,  -6.6875,  -6.7812],
        [  0.0000,  -6.3125,  -5.7188,  -7.5625,  -6.2812,  -6.4062,  -4.7500,  -5.3750,  -6.0938,  -7.1875,  -8.3125,  -5.4688,  -5.2188,  -6.3438,  -5.6562],
        [  0.0000,  -5.9375,  -5.1875,  -6.7812,  -7.0625,  -6.3125,  -4.9375,  -4.2812,  -5.7188,  -7.1875,  -8.5000,  -4.2188,  -4.5312,  -5.8438,  -5.7500],
        [  0.0000,  -4.0312,  -3.2500,  -4.5938,  -4.7188,  -3.9531,  -3.4219,  -1.7109,  -3.2500,  -3.3906,  -5.5312,  -1.7969,  -1.4688,  -3.1875,  -3.4062],
        [  0.0000,  -7.5938,  -7.1250,  -8.4375,  -8.4375,  -7.5000,  -6.5938,  -6.5625,  -7.1250,  -8.2500,  -9.9375,  -7.0938,  -6.2812,  -7.4062,  -7.2188],
        [  0.0000,  -7.7812,  -7.8125,  -8.4375,  -8.9375,  -8.2500,  -7.5312,  -7.1250,  -8.0000,  -6.8750,  -9.9375,  -6.7188,  -6.9375,  -7.9688,  -7.4375],
        [  0.0000,  -6.2812,  -6.0312,  -7.2188,  -7.9375,  -7.0625,  -6.1875,  -5.4688,  -6.5312,  -7.1250,  -9.0000,  -5.2188,  -5.2500,  -6.5938,  -6.5000],
        [  0.0000,  -7.0938,  -6.5000,  -7.7812,  -7.6875,  -7.7500,  -6.4062,  -5.1250,  -6.9062,  -7.0312,  -9.4375,  -4.1875,  -4.9062,  -7.0625,  -7.1562],
        [  0.0000,  -6.9062,  -6.0000,  -6.9375,  -7.2812,  -6.7500,  -6.0312,  -4.4375,  -6.0000,  -5.2188,  -8.6250,  -4.6562,  -3.6875,  -6.0625,  -6.3438],
        [  0.0000,  -7.9062,  -7.3125,  -8.6250,  -8.8750,  -7.7188,  -6.9688,  -6.5625,  -7.3438,  -8.0625, -10.2500,  -7.1562,  -6.1875,  -7.5938,  -7.5938],
        [  0.0000,  -6.5312,  -5.9375,  -6.8750,  -6.8438,  -6.6875,  -5.7500,  -5.6250,  -6.1875,  -6.8438,  -8.7500,  -5.8438,  -5.5938,  -6.4375,  -5.7188]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9906],
        [0.9971],
        [0.9964],
        [0.9974],
        [0.9945],
        [0.9948],
        [0.9473],
        [0.9971],
        [0.9971],
        [0.9971],
        [0.9951],
        [0.9938],
        [0.9980],
        [0.9915]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0762, 0.9258, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0513, 0.4141, 0.5352, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0464, 0.3887, 0.4512, 0.1128, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1025, 0.3887, 0.1553, 0.0723, 0.2812, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0277, 0.4336, 0.1504, 0.0942, 0.2188, 0.0752, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0133, 0.0625, 0.0300, 0.0247, 0.0703, 0.0123, 0.7891, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0204, 0.0664, 0.0635, 0.0112, 0.0195, 0.0181, 0.5938, 0.2080, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0332, 0.1572, 0.0134, 0.0051, 0.0300, 0.0088, 0.6875, 0.0422, 0.0225, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0117, 0.0464, 0.0376, 0.0129, 0.0413, 0.0273, 0.2344, 0.1367, 0.1240, 0.3262, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0193, 0.0217, 0.0148, 0.0036, 0.0098, 0.0085, 0.3555, 0.0613, 0.0215, 0.4531, 0.0299, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0177, 0.0288, 0.0332, 0.0091, 0.0118, 0.0084, 0.1953, 0.1104, 0.0344, 0.1816, 0.0586, 0.3105, 0.0000, 0.0000, 0.0000],
        [0.0249, 0.0332, 0.0261, 0.0046, 0.0060, 0.0082, 0.1045, 0.0825, 0.0352, 0.1514, 0.0752, 0.2773, 0.1729, 0.0000, 0.0000],
        [0.0347, 0.0742, 0.0060, 0.0018, 0.0101, 0.0037, 0.2578, 0.0151, 0.0081, 0.0947, 0.2695, 0.1079, 0.0615, 0.0552, 0.0000],
        [0.0054, 0.0134, 0.0060, 0.0031, 0.0067, 0.0033, 0.0420, 0.0123, 0.0171, 0.0388, 0.0190, 0.1113, 0.1021, 0.1025, 0.5156]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0020,  0.0049, -0.0010,  ..., -0.0315, -0.0077, -0.0288],
        [-0.0525,  0.0065, -0.0020,  ...,  0.0076, -0.0079,  0.0007],
        [-0.0494, -0.0166,  0.0496,  ..., -0.0174, -0.0223, -0.0250],
        ...,
        [-0.0079, -0.0214, -0.0111,  ..., -0.0325, -0.0415, -0.0508],
        [-0.0281, -0.0265, -0.0233,  ..., -0.0071, -0.0155,  0.0434],
        [-0.0017,  0.0204,  0.0161,  ..., -0.0116,  0.0127, -0.0100]], device='cuda:0', requires_grad=True)
K: tensor([-1.7031, -1.8594, -0.6758,  0.2559, -0.5586, -1.9375, -1.3750,  0.6250,  0.1631, -1.9453, -0.0923, -2.1094,  2.6719, -1.9688, -0.2988,  1.8672,  2.4688, -0.0045,  0.7461, -0.2871,  0.8281, -1.2344,  0.6289, -1.7578, -1.1016,  0.8477, -0.5859,  1.4531,  0.2373,  1.6328, -0.9219, -2.1094,
        -0.9023, -1.2422,  1.2188, -1.0391,  2.6094,  0.3555, -1.4062,  0.5156, -2.5469,  1.2266,  1.0391,  1.8828,  0.6289, -0.0742, -2.1094, -0.7227,  1.8984,  0.4414,  1.0078, -0.2695, -0.6719, -2.1562, -1.8438, -2.2031,  1.8516, -0.7461, -1.0234,  1.6797, -0.5117, -1.0781,  1.5078, -0.9023],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[    -0.0109,     -0.0067,      0.0166,  ...,      0.0255,     -0.0211,     -0.0154],
        [     0.0383,     -0.0072,      0.0182,  ...,     -0.0080,      0.0294,      0.0202],
        [    -0.0201,      0.0116,      0.0481,  ...,      0.0194,      0.0276,     -0.0089],
        ...,
        [     0.0187,      0.0001,     -0.0279,  ...,     -0.0039,      0.0039,     -0.0055],
        [    -0.0145,      0.0409,     -0.0159,  ...,      0.0090,      0.0031,     -0.0336],
        [    -0.0019,     -0.0082,     -0.0040,  ...,      0.0118,      0.0023,     -0.0036]], device='cuda:0', requires_grad=True)
Q: tensor([-0.0396, -0.7422, -1.3438,  1.3125, -2.0781, -0.7422, -0.2617,  0.1973,  0.3340, -0.4922, -0.6602,  0.0889, -2.2812, -2.0312,  2.2812, -0.3848, -1.0078, -0.5078,  0.3008, -0.7344, -0.8594,  1.9141, -2.2656, -1.9688, -0.9336, -1.2188,  2.2031,  3.8125, -2.5938,  1.1016,  0.2754, -1.2734,
        -2.3281,  1.2812, -2.0469, -1.3125,  2.5469, -1.6250, -2.1250,  0.7930, -0.4023, -0.2578,  2.5938,  0.1162, -1.0469, -1.8594, -0.7656, -2.7188,  1.7891,  1.5703,  0.9883,  0.4473, -0.7461, -0.8477, -0.0250, -1.3750, -0.2969,  0.4629, -0.6016,  0.8906, -1.5312,  1.1719,  0.0579, -2.0781],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  2.5000,  2.3906,  1.9766,  3.2500,  1.9219,  4.8750,  3.6875,  3.5312,  4.1562,  3.5469,  4.5938,  4.7812,  4.5312,  6.0625],
        [ 0.0000,  2.0938,  2.3438,  1.2734,  1.7969,  1.1719,  3.7500,  3.4688,  2.3281,  3.9844,  2.3750,  4.7188,  4.7188,  3.4062,  5.4375],
        [ 0.0000,  2.1250,  2.2812,  0.8906,  1.7500,  1.4141,  3.5156,  3.2969,  2.5625,  5.0625,  3.7500,  5.8750,  5.5312,  4.1875,  6.5312],
        [ 0.0000,  1.3359,  0.4121, -0.3535,  1.0078, -0.0601,  3.1719,  2.1094,  1.3984,  2.8125,  1.4062,  2.8438,  2.7344,  2.7656,  4.6562],
        [ 0.0000,  2.7500,  1.6875,  1.2266,  2.0625,  0.9961,  3.5625,  3.1250,  2.6562,  3.9375,  4.4688,  4.4688,  4.2188,  4.5000,  7.0312],
        [ 0.0000,  1.5469,  0.8125,  0.6172,  1.6641, -0.0776,  4.0938,  2.7344,  2.0156,  2.6250,  0.3477,  3.6719,  3.7031,  3.0469,  6.1875],
        [ 0.0000,  1.1875,  1.1406, -0.6016, -0.0388, -0.1196,  3.3750,  2.3281,  1.4219,  3.5000,  2.0156,  4.0938,  3.4375,  2.9219,  6.6250],
        [ 0.0000,  1.5547, -0.9062, -1.8750, -0.0996, -1.3281,  3.0312,  0.2441, -0.3867,  2.2656,  3.0938,  2.1562,  1.5078,  1.4297,  5.0000],
        [ 0.0000,  1.3828,  1.1719,  0.0981,  1.2656,  0.8516,  3.0000,  2.4688,  2.3594,  3.3281,  2.7344,  4.2812,  4.2188,  4.2812,  6.8438],
        [ 0.0000,  0.1211, -0.2637, -1.6719, -0.6719, -0.8086,  2.9219,  1.1562,  0.1094,  3.1562,  0.4414,  3.1875,  2.5938,  1.8828,  6.7812],
        [ 0.0000,  0.4863,  0.6289, -0.6680, -0.4102, -0.7539,  2.4062,  1.8281,  0.6641,  2.3281,  1.1953,  2.8594,  3.0469,  2.3906,  4.9375],
        [ 0.0000,  0.2891,  0.0498, -1.6953, -1.4219, -1.1094,  1.4375,  1.1953,  0.3477,  1.8047,  1.1094,  2.4062,  1.9375,  2.0938,  5.4062],
        [ 0.0000,  0.7617, -1.7578, -2.9688, -1.2344, -2.2344,  2.0156, -0.8320, -1.4531,  1.0078,  2.0469,  1.1406,  0.5781,  0.4668,  4.1250],
        [ 0.0000,  0.9141,  0.1167, -0.5430,  0.2119, -0.4824,  2.0625,  0.8242,  1.1562,  1.9766,  1.2656,  3.0312,  2.9375,  2.9531,  4.5625]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3649],
        [0.1152],
        [0.1063],
        [0.2984],
        [0.0960],
        [0.3773],
        [0.0838],
        [0.0811],
        [0.0613],
        [0.0895],
        [0.0886],
        [0.0723],
        [0.0738],
        [0.0837]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0374, 0.9609, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0305, 0.8945, 0.0762, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0840, 0.8438, 0.0303, 0.0415, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0056, 0.4062, 0.0991, 0.0454, 0.4434, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0177, 0.3027, 0.0405, 0.0073, 0.5000, 0.1299, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0195, 0.1572, 0.4043, 0.0187, 0.1406, 0.0669, 0.1924, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0066, 0.0591, 0.2188, 0.0076, 0.2139, 0.0244, 0.0396, 0.4297, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0190, 0.1152, 0.1040, 0.0094, 0.1221, 0.0349, 0.0771, 0.4766, 0.0422, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0087, 0.2051, 0.0476, 0.0129, 0.1309, 0.0184, 0.1865, 0.2637, 0.0171, 0.1094, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0249, 0.0952, 0.0282, 0.0043, 0.0562, 0.0179, 0.0615, 0.2539, 0.0166, 0.3184, 0.1226, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0195, 0.2012, 0.0559, 0.0298, 0.0757, 0.0182, 0.2119, 0.1875, 0.0060, 0.0928, 0.0420, 0.0591, 0.0000, 0.0000, 0.0000],
        [0.0098, 0.0532, 0.0295, 0.0029, 0.0986, 0.0086, 0.0308, 0.0552, 0.1206, 0.1572, 0.0618, 0.1680, 0.2041, 0.0000, 0.0000],
        [0.0125, 0.0630, 0.0131, 0.0032, 0.0508, 0.0122, 0.0359, 0.0591, 0.0146, 0.1963, 0.0449, 0.0640, 0.3789, 0.0513, 0.0000],
        [0.0459, 0.1494, 0.0339, 0.0162, 0.0723, 0.0161, 0.2109, 0.0806, 0.0058, 0.0442, 0.0437, 0.0579, 0.0640, 0.0086, 0.1504]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0075, -0.0311,  0.0065,  ...,  0.0014,  0.0293, -0.0190],
        [ 0.0108, -0.0509, -0.0189,  ...,  0.0267,  0.0121, -0.0037],
        [-0.0215, -0.0148, -0.0258,  ...,  0.0331, -0.0018, -0.0158],
        ...,
        [ 0.0297,  0.0163, -0.0295,  ..., -0.0117, -0.0003,  0.0177],
        [ 0.0018,  0.0010,  0.0268,  ...,  0.0414, -0.0191,  0.0034],
        [-0.0271,  0.0537, -0.0307,  ...,  0.0035,  0.0280,  0.0368]], device='cuda:0', requires_grad=True)
K: tensor([ 0.4785, -1.0859,  0.0138, -0.0073, -0.6250, -0.0776, -0.6133, -0.5547, -0.9336, -2.5781, -2.0938, -0.7773,  0.5742, -1.0625, -1.4062,  0.8828,  1.3516,  1.1250, -2.1719,  0.7422,  1.0859, -1.0312, -2.5625,  0.3125,  0.7695, -0.9844, -0.2139,  0.9961, -0.4512, -1.3672, -0.3574,  0.9102,
        -1.9297,  1.6406,  3.0625,  0.3730,  0.3262, -0.9180, -0.2734, -2.0469, -0.6133, -0.9648, -1.9688,  0.9609,  0.7148,  0.0884, -1.5234,  1.4453, -1.6094, -1.6875,  0.5430,  1.9453,  0.9062, -0.2832,  0.6992,  0.2715,  0.2578, -2.9688, -0.7031,  1.1719,  0.4102, -0.6719,  1.5234, -1.0000],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0066, -0.0069, -0.0082,  ..., -0.0369, -0.0347, -0.0181],
        [ 0.0055,  0.0024, -0.0032,  ...,  0.0103, -0.0215,  0.0445],
        [ 0.0202, -0.0097, -0.0020,  ..., -0.0082, -0.0289, -0.0077],
        ...,
        [ 0.0313, -0.0463, -0.0294,  ...,  0.0195,  0.0225, -0.0021],
        [ 0.0130, -0.0059,  0.0368,  ...,  0.0194, -0.0041,  0.0004],
        [-0.0135, -0.0142, -0.0219,  ...,  0.0181,  0.0007, -0.0238]], device='cuda:0', requires_grad=True)
Q: tensor([-0.5000,  0.8672,  0.6484,  0.5195,  0.5078, -1.2812,  0.2354, -2.1094, -1.2344,  0.4336, -0.7188,  1.8125,  0.3574, -0.3496, -0.3691, -0.8320,  0.2393,  0.3750, -0.9180,  0.6445,  0.1982, -1.1016,  0.4609, -0.6367,  0.9570,  1.2031, -1.2812,  1.8047, -0.6289,  1.2109, -1.1250, -2.4844,
         0.0786,  0.4512, -0.5703, -0.3770, -0.9180, -0.4707,  1.4297, -1.0312,  0.5547, -0.2656, -0.4707,  0.8281,  0.1357,  1.3359, -0.8984,  0.9062,  1.2188, -1.1406,  0.4453,  1.6562, -1.1797, -0.5391, -0.5039,  0.3027, -2.0156,  0.1631, -0.1816,  0.6680,  0.2617, -0.5430, -0.5703, -0.9727],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  3.2500,  1.5469,  0.8477,  3.3438,  2.2188,  2.7031,  1.6094,  1.2734,  0.9688,  2.0781,  1.6562,  1.6641,  1.1562,  1.2109],
        [ 0.0000,  3.3750,  0.9180,  2.6875,  3.1406,  2.1250,  3.8281,  0.6719, -0.2461, -0.0547,  0.9414, -0.4512,  0.6133, -0.2139,  0.0154],
        [ 0.0000,  2.3125, -1.0156, -0.6992,  2.4531, -0.0098,  3.0781, -0.3027, -0.6211, -0.8320, -0.7031, -1.7812, -1.1328, -0.7969, -0.5156],
        [ 0.0000,  4.2812,  2.8750,  2.0938,  4.3750,  3.4844,  3.8125,  3.9688,  2.0938,  2.2031,  2.3594,  2.8594,  3.4531,  1.6797,  1.9375],
        [ 0.0000,  2.8438,  0.8320, -0.8867,  3.3438,  1.9922,  2.5625,  1.7656,  0.9375,  1.0469,  0.7500,  1.1250,  0.4961,  0.3496,  1.2891],
        [ 0.0000,  2.0938,  3.0312, -0.0452,  1.9766,  1.2344,  2.2812,  4.0312,  0.1279,  1.5547,  0.2148,  2.7969,  2.4688, -0.3691,  1.2891],
        [ 0.0000,  2.1875,  3.5000,  0.1328,  3.4688,  1.3047,  1.7891,  4.1875,  4.3750,  4.8125,  2.9219,  4.0312,  3.9219,  4.3125,  4.9062],
        [ 0.0000,  1.7969,  1.6953, -0.7031,  1.8594,  0.6055,  1.3984,  3.2188,  0.7969,  3.8281,  1.3203,  2.2969,  3.7812,  1.2188,  2.3438],
        [ 0.0000,  3.1562,  1.6953,  0.3965,  2.7031,  0.7500,  3.0625,  3.4062,  0.6758,  2.5312,  2.7969,  3.0000,  3.9688,  1.2500,  2.5469],
        [ 0.0000,  1.3438,  0.1260, -1.7500,  0.8125, -0.3242,  0.9062,  2.3281, -0.4082,  2.5469,  1.5938,  2.1875,  2.8750,  0.0137,  1.3750],
        [ 0.0000,  2.3281,  1.0547,  0.4219,  1.3516, -0.0703,  2.3906,  2.2656, -1.1875,  1.5547,  0.7656,  1.1094,  3.6719, -0.3105,  1.1719],
        [ 0.0000,  1.6953,  1.1094, -1.2266,  2.3125, -0.1240,  1.1484,  1.7344,  2.5156,  2.7812,  1.8438,  2.8438,  3.0469,  3.7656,  3.7812],
        [ 0.0000,  1.6250,  0.0518, -1.3516,  1.4062, -0.0165,  1.0625,  1.5625,  0.1592,  2.7500,  1.2891,  1.6406,  3.4219,  1.4141,  2.1875],
        [ 0.0000,  1.1797, -0.3008, -1.0312,  0.4531, -1.0391,  1.5312,  0.5625, -2.0625, -0.0332, -0.0439,  0.2344,  0.3359, -1.6719,  1.1875]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0906],
        [0.0222],
        [0.0181],
        [0.0439],
        [0.0156],
        [0.0090],
        [0.0070],
        [0.0057],
        [0.0054],
        [0.0168],
        [0.0081],
        [0.0255],
        [0.0044],
        [0.0095]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( are:0.1562 a:0.1807,:0.1250 yellow:0.0801atoes:0.1465 are:0.3594 a:0.1172iced:0.4160)
iced
------
		( a:0.1807,:0.1250 yellow:0.0801atoes:0.1465 are:0.3594 a:0.1172iced:0.4160,:0.1670)
, and they are iced, and they are iced, and they
@ 8550 train 3.9629 , allloss: 3.9776, dt: 1695.87ms, fracRes: 0.6024, norm(attn): 0.1523, norm(output): 0.2441, norm(x): 0.6609, norm(y): 1.0024, norm:1.1362, tok/sec: 77288.98, flops:67.68, batch-reuse:1
@ 8551 train 3.9277 , allloss: 3.9417, dt: 1287.98ms, fracRes: 0.6025, norm(attn): 0.1514, norm(output): 0.2422, norm(x): 0.6585, norm(y): 1.0025, norm:1.0006, tok/sec: 101765.40, flops:89.11, batch-reuse:1
@ 8552 train 3.9054 , allloss: 3.9197, dt: 1257.23ms, fracRes: 0.6025, norm(attn): 0.1523, norm(output): 0.2461, norm(x): 0.6606, norm(y): 1.0023, norm:0.9902, tok/sec: 104254.49, flops:91.29, batch-reuse:1
@ 8553 train 3.8886 , allloss: 3.9036, dt: 1265.43ms, fracRes: 0.6036, norm(attn): 0.1514, norm(output): 0.2393, norm(x): 0.6601, norm(y): 1.0025, norm:1.1584, tok/sec: 103579.35, flops:90.70, batch-reuse:1
@ 8554 train 3.8476 , allloss: 3.8619, dt: 1247.65ms, fracRes: 0.6018, norm(attn): 0.1504, norm(output): 0.2422, norm(x): 0.6562, norm(y): 1.0026, norm:1.2161, tok/sec: 105055.45, flops:92.00, batch-reuse:1
@ 8555 train 3.8484 , allloss: 3.8629, dt: 1267.63ms, fracRes: 0.6006, norm(attn): 0.1514, norm(output): 0.2441, norm(x): 0.6579, norm(y): 1.0025, norm:0.9893, tok/sec: 103399.52, flops:90.55, batch-reuse:1
@ 8556 train 4.4323 , allloss: 4.4466, dt: 1247.81ms, fracRes: 0.5999, norm(attn): 0.1543, norm(output): 0.2471, norm(x): 0.6566, norm(y): 1.0015, norm:1.6832, tok/sec: 105041.32, flops:91.98, batch-reuse:1
@ 8557 train 4.0548 , allloss: 4.0695, dt: 1288.10ms, fracRes: 0.6011, norm(attn): 0.1533, norm(output): 0.2461, norm(x): 0.6634, norm(y): 1.0024, norm:1.3351, tok/sec: 101756.32, flops:89.11, batch-reuse:1
@ 8558 train 3.8579 , allloss: 3.8731, dt: 1301.83ms, fracRes: 0.6012, norm(attn): 0.1553, norm(output): 0.2461, norm(x): 0.6632, norm(y): 1.0024, norm:1.3607, tok/sec: 100682.79, flops:88.17, batch-reuse:1
@ 8559 train 4.2648 , allloss: 4.2814, dt: 1318.03ms, fracRes: 0.6008, norm(attn): 0.1533, norm(output): 0.2461, norm(x): 0.6573, norm(y): 1.0022, norm:1.3975, tok/sec: 99445.39, flops:87.08, batch-reuse:1
@ 8560 train 4.1721 , allloss: 4.1885, dt: 1293.95ms, fracRes: 0.6009, norm(attn): 0.1533, norm(output): 0.2461, norm(x): 0.6624, norm(y): 1.0023, norm:1.5208, tok/sec: 101296.27, flops:88.70, batch-reuse:1
@ 8561 train 4.2516 , allloss: 4.2664, dt: 1266.88ms, fracRes: 0.6007, norm(attn): 0.1523, norm(output): 0.2480, norm(x): 0.6612, norm(y): 1.0020, norm:1.3612, tok/sec: 103460.54, flops:90.60, batch-reuse:1
@ 8562 train 4.1639 , allloss: 4.1784, dt: 1291.15ms, fracRes: 0.6010, norm(attn): 0.1533, norm(output): 0.2471, norm(x): 0.6638, norm(y): 1.0021, norm:1.0872, tok/sec: 101515.53, flops:88.90, batch-reuse:1
@ 8563 train 4.1919 , allloss: 4.2064, dt: 1259.19ms, fracRes: 0.6009, norm(attn): 0.1543, norm(output): 0.2480, norm(x): 0.6653, norm(y): 1.0021, norm:1.0534, tok/sec: 104092.27, flops:91.15, batch-reuse:1
@ 8564 train 4.2727 , allloss: 4.2875, dt: 1263.58ms, fracRes: 0.6018, norm(attn): 0.1533, norm(output): 0.2480, norm(x): 0.6684, norm(y): 1.0023, norm:0.9772, tok/sec: 103730.62, flops:90.84, batch-reuse:1
@ 8565 train 4.2188 , allloss: 4.2339, dt: 1250.87ms, fracRes: 0.6019, norm(attn): 0.1533, norm(output): 0.2471, norm(x): 0.6705, norm(y): 1.0024, norm:1.1401, tok/sec: 104784.85, flops:91.76, batch-reuse:1
@ 8566 train 4.3077 , allloss: 4.3230, dt: 1260.93ms, fracRes: 0.6026, norm(attn): 0.1514, norm(output): 0.2461, norm(x): 0.6753, norm(y): 1.0024, norm:1.2590, tok/sec: 103949.02, flops:91.03, batch-reuse:1
@ 8567 train 4.0763 , allloss: 4.0921, dt: 1279.14ms, fracRes: 0.6029, norm(attn): 0.1523, norm(output): 0.2461, norm(x): 0.6685, norm(y): 1.0027, norm:1.6677, tok/sec: 102468.62, flops:89.73, batch-reuse:1
@ 8568 train 4.1625 , allloss: 4.1780, dt: 1263.17ms, fracRes: 0.6032, norm(attn): 0.1514, norm(output): 0.2461, norm(x): 0.6700, norm(y): 1.0026, norm:1.3909, tok/sec: 103764.65, flops:90.87, batch-reuse:1
@ 8569 train 4.2649 , allloss: 4.2801, dt: 1285.09ms, fracRes: 0.6026, norm(attn): 0.1533, norm(output): 0.2471, norm(x): 0.6681, norm(y): 1.0023, norm:1.1564, tok/sec: 101994.02, flops:89.31, batch-reuse:1
@ 8570 train 4.1784 , allloss: 4.1929, dt: 1301.16ms, fracRes: 0.6029, norm(attn): 0.1523, norm(output): 0.2461, norm(x): 0.6668, norm(y): 1.0024, norm:1.3322, tok/sec: 100734.67, flops:88.21, batch-reuse:1
@ 8571 train 4.1607 , allloss: 4.1749, dt: 1271.14ms, fracRes: 0.6028, norm(attn): 0.1514, norm(output): 0.2471, norm(x): 0.6665, norm(y): 1.0025, norm:0.9688, tok/sec: 103113.60, flops:90.30, batch-reuse:1
@ 8572 train 4.2770 , allloss: 4.2922, dt: 1252.72ms, fracRes: 0.6030, norm(attn): 0.1523, norm(output): 0.2461, norm(x): 0.6723, norm(y): 1.0024, norm:1.3176, tok/sec: 104629.64, flops:91.62, batch-reuse:1
@ 8573 train 4.4889 , allloss: 4.5062, dt: 1275.87ms, fracRes: 0.6036, norm(attn): 0.1533, norm(output): 0.2500, norm(x): 0.6869, norm(y): 1.0024, norm:1.8976, tok/sec: 102731.19, flops:89.96, batch-reuse:1
@ 8574 train 4.2282 , allloss: 4.2449, dt: 1273.09ms, fracRes: 0.6008, norm(attn): 0.1553, norm(output): 0.2490, norm(x): 0.6669, norm(y): 1.0024, norm:1.4133, tok/sec: 102955.87, flops:90.16, batch-reuse:1
@ 8575 train 4.2242 , allloss: 4.2393, dt: 1260.96ms, fracRes: 0.6012, norm(attn): 0.1543, norm(output): 0.2480, norm(x): 0.6680, norm(y): 1.0023, norm:1.2318, tok/sec: 103946.13, flops:91.02, batch-reuse:1
@ 8576 train 4.1445 , allloss: 4.1599, dt: 1266.86ms, fracRes: 0.6017, norm(attn): 0.1523, norm(output): 0.2490, norm(x): 0.6683, norm(y): 1.0023, norm:1.1113, tok/sec: 103462.39, flops:90.60, batch-reuse:1
@ 8577 train 4.1863 , allloss: 4.2019, dt: 1266.20ms, fracRes: 0.6015, norm(attn): 0.1514, norm(output): 0.2461, norm(x): 0.6689, norm(y): 1.0023, norm:1.1477, tok/sec: 103515.87, flops:90.65, batch-reuse:1
@ 8578 train 4.0791 , allloss: 4.0947, dt: 1295.23ms, fracRes: 0.6014, norm(attn): 0.1543, norm(output): 0.2480, norm(x): 0.6743, norm(y): 1.0024, norm:1.1274, tok/sec: 101196.05, flops:88.62, batch-reuse:1
@ 8579 train 4.2791 , allloss: 4.2938, dt: 1314.27ms, fracRes: 0.6023, norm(attn): 0.1543, norm(output): 0.2471, norm(x): 0.6746, norm(y): 1.0022, norm:1.1376, tok/sec: 99730.03, flops:87.33, batch-reuse:1
@ 8580 train 4.1102 , allloss: 4.1246, dt: 1298.07ms, fracRes: 0.6016, norm(attn): 0.1553, norm(output): 0.2490, norm(x): 0.6764, norm(y): 1.0021, norm:1.1392, tok/sec: 100974.49, flops:88.42, batch-reuse:1
@ 8581 train 4.2366 , allloss: 4.2511, dt: 1261.52ms, fracRes: 0.6027, norm(attn): 0.1523, norm(output): 0.2490, norm(x): 0.6739, norm(y): 1.0023, norm:1.0765, tok/sec: 103900.16, flops:90.98, batch-reuse:1
@ 8582 train 4.0662 , allloss: 4.0812, dt: 1248.15ms, fracRes: 0.6020, norm(attn): 0.1533, norm(output): 0.2471, norm(x): 0.6736, norm(y): 1.0024, norm:0.9860, tok/sec: 105012.77, flops:91.96, batch-reuse:1
@ 8583 train 4.1623 , allloss: 4.1769, dt: 1252.83ms, fracRes: 0.6020, norm(attn): 0.1523, norm(output): 0.2480, norm(x): 0.6710, norm(y): 1.0024, norm:0.9872, tok/sec: 104620.54, flops:91.61, batch-reuse:1
@ 8584 train 4.0993 , allloss: 4.1145, dt: 1268.89ms, fracRes: 0.6028, norm(attn): 0.1514, norm(output): 0.2461, norm(x): 0.6701, norm(y): 1.0024, norm:1.0111, tok/sec: 103296.94, flops:90.46, batch-reuse:1
@ 8585 train 4.1229 , allloss: 4.1382, dt: 1259.23ms, fracRes: 0.6021, norm(attn): 0.1523, norm(output): 0.2471, norm(x): 0.6704, norm(y): 1.0025, norm:1.0715, tok/sec: 104089.09, flops:91.15, batch-reuse:1
@ 8586 train 4.1255 , allloss: 4.1402, dt: 1260.99ms, fracRes: 0.6021, norm(attn): 0.1533, norm(output): 0.2480, norm(x): 0.6701, norm(y): 1.0022, norm:0.9803, tok/sec: 103943.99, flops:91.02, batch-reuse:1
@ 8587 train 4.2207 , allloss: 4.2352, dt: 1261.30ms, fracRes: 0.6018, norm(attn): 0.1543, norm(output): 0.2490, norm(x): 0.6729, norm(y): 1.0021, norm:1.4694, tok/sec: 103917.78, flops:91.00, batch-reuse:1
@ 8588 train 4.1964 , allloss: 4.2114, dt: 1248.09ms, fracRes: 0.6026, norm(attn): 0.1523, norm(output): 0.2480, norm(x): 0.6696, norm(y): 1.0024, norm:1.3727, tok/sec: 105018.23, flops:91.96, batch-reuse:1
@ 8589 train 4.1259 , allloss: 4.1419, dt: 1269.13ms, fracRes: 0.6030, norm(attn): 0.1514, norm(output): 0.2461, norm(x): 0.6681, norm(y): 1.0025, norm:1.1710, tok/sec: 103277.13, flops:90.44, batch-reuse:1
@ 8590 train 4.1052 , allloss: 4.1202, dt: 1281.50ms, fracRes: 0.6029, norm(attn): 0.1533, norm(output): 0.2471, norm(x): 0.6696, norm(y): 1.0024, norm:1.1505, tok/sec: 102280.51, flops:89.57, batch-reuse:1
@ 8591 train 4.1037 , allloss: 4.1182, dt: 1275.89ms, fracRes: 0.6020, norm(attn): 0.1533, norm(output): 0.2480, norm(x): 0.6699, norm(y): 1.0023, norm:1.1430, tok/sec: 102729.97, flops:89.96, batch-reuse:1
@ 8592 train 4.0028 , allloss: 4.0170, dt: 1302.13ms, fracRes: 0.6012, norm(attn): 0.1543, norm(output): 0.2490, norm(x): 0.6698, norm(y): 1.0022, norm:1.1198, tok/sec: 100659.39, flops:88.15, batch-reuse:1
@ 8593 train 4.1240 , allloss: 4.1384, dt: 1308.26ms, fracRes: 0.6025, norm(attn): 0.1514, norm(output): 0.2471, norm(x): 0.6694, norm(y): 1.0024, norm:1.0780, tok/sec: 100188.24, flops:87.73, batch-reuse:1
@ 8594 train 4.1278 , allloss: 4.1424, dt: 1281.01ms, fracRes: 0.6029, norm(attn): 0.1523, norm(output): 0.2471, norm(x): 0.6713, norm(y): 1.0023, norm:1.1465, tok/sec: 102319.54, flops:89.60, batch-reuse:1
@ 8595 train 4.1205 , allloss: 4.1346, dt: 1279.49ms, fracRes: 0.6031, norm(attn): 0.1514, norm(output): 0.2461, norm(x): 0.6684, norm(y): 1.0024, norm:1.1569, tok/sec: 102441.01, flops:89.71, batch-reuse:1
@ 8596 train 4.3230 , allloss: 4.3377, dt: 1271.90ms, fracRes: 0.6034, norm(attn): 0.1523, norm(output): 0.2471, norm(x): 0.6706, norm(y): 1.0021, norm:1.0945, tok/sec: 103052.25, flops:90.24, batch-reuse:1
@ 8597 train 4.1227 , allloss: 4.1367, dt: 1267.44ms, fracRes: 0.6022, norm(attn): 0.1533, norm(output): 0.2480, norm(x): 0.6721, norm(y): 1.0021, norm:1.0251, tok/sec: 103414.79, flops:90.56, batch-reuse:1
@ 8598 train 4.1753 , allloss: 4.1892, dt: 1262.71ms, fracRes: 0.6015, norm(attn): 0.1553, norm(output): 0.2490, norm(x): 0.6742, norm(y): 1.0021, norm:1.0530, tok/sec: 103802.47, flops:90.90, batch-reuse:1
@ 8599 train 4.0644 , allloss: 4.0788, dt: 1249.33ms, fracRes: 0.6017, norm(attn): 0.1533, norm(output): 0.2490, norm(x): 0.6745, norm(y): 1.0022, norm:0.9023, tok/sec: 104913.85, flops:91.87, batch-reuse:1
@ 8600 train 4.0443 , allloss: 4.0587, dt: 1270.55ms, fracRes: 0.6014, norm(attn): 0.1543, norm(output): 0.2480, norm(x): 0.6733, norm(y): 1.0022, norm:1.0487, tok/sec: 103161.62, flops:90.34, batch-reuse:1
@ 8601 train 4.2254 , allloss: 4.2395, dt: 1254.05ms, fracRes: 0.6012, norm(attn): 0.1543, norm(output): 0.2480, norm(x): 0.6722, norm(y): 1.0022, norm:1.0838, tok/sec: 104518.70, flops:91.53, batch-reuse:1
@ 8602 train 4.1669 , allloss: 4.1807, dt: 1293.72ms, fracRes: 0.6015, norm(attn): 0.1543, norm(output): 0.2480, norm(x): 0.6732, norm(y): 1.0021, norm:1.0605, tok/sec: 101314.04, flops:88.72, batch-reuse:1
@ 8603 train 4.1157 , allloss: 4.1297, dt: 1291.76ms, fracRes: 0.6020, norm(attn): 0.1553, norm(output): 0.2490, norm(x): 0.6728, norm(y): 1.0020, norm:0.9399, tok/sec: 101468.14, flops:88.85, batch-reuse:1
@ 8604 train 4.0644 , allloss: 4.0784, dt: 1271.53ms, fracRes: 0.6020, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6689, norm(y): 1.0020, norm:1.1065, tok/sec: 103082.39, flops:90.27, batch-reuse:1
@ 8605 train 4.1821 , allloss: 4.1973, dt: 1252.35ms, fracRes: 0.6018, norm(attn): 0.1543, norm(output): 0.2471, norm(x): 0.6703, norm(y): 1.0021, norm:1.3328, tok/sec: 104660.83, flops:91.65, batch-reuse:1
@ 8606 train 4.1282 , allloss: 4.1425, dt: 1264.66ms, fracRes: 0.6014, norm(attn): 0.1533, norm(output): 0.2471, norm(x): 0.6668, norm(y): 1.0022, norm:1.1108, tok/sec: 103641.94, flops:90.76, batch-reuse:1
@ 8607 train 4.1159 , allloss: 4.1307, dt: 1264.41ms, fracRes: 0.6023, norm(attn): 0.1553, norm(output): 0.2471, norm(x): 0.6678, norm(y): 1.0022, norm:1.3415, tok/sec: 103662.71, flops:90.78, batch-reuse:1
@ 8608 train 4.1072 , allloss: 4.1219, dt: 1304.91ms, fracRes: 0.6021, norm(attn): 0.1543, norm(output): 0.2480, norm(x): 0.6666, norm(y): 1.0024, norm:1.2069, tok/sec: 100445.12, flops:87.96, batch-reuse:1
@ 8609 train 4.0810 , allloss: 4.0958, dt: 1266.06ms, fracRes: 0.6006, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6670, norm(y): 1.0021, norm:0.9956, tok/sec: 103527.63, flops:90.66, batch-reuse:1
@ 8610 train 4.0713 , allloss: 4.0858, dt: 1283.30ms, fracRes: 0.6009, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6653, norm(y): 1.0024, norm:1.0724, tok/sec: 102136.48, flops:89.44, batch-reuse:1
@ 8611 train 4.0249 , allloss: 4.0403, dt: 1267.14ms, fracRes: 0.6007, norm(attn): 0.1543, norm(output): 0.2490, norm(x): 0.6693, norm(y): 1.0022, norm:1.0768, tok/sec: 103439.54, flops:90.58, batch-reuse:1
@ 8612 train 4.0639 , allloss: 4.0785, dt: 1278.27ms, fracRes: 0.6017, norm(attn): 0.1533, norm(output): 0.2461, norm(x): 0.6670, norm(y): 1.0025, norm:1.0019, tok/sec: 102538.63, flops:89.79, batch-reuse:1
@ 8613 train 4.1691 , allloss: 4.1834, dt: 1258.94ms, fracRes: 0.6017, norm(attn): 0.1523, norm(output): 0.2480, norm(x): 0.6673, norm(y): 1.0022, norm:0.9447, tok/sec: 104112.79, flops:91.17, batch-reuse:1
@ 8614 train 4.1048 , allloss: 4.1193, dt: 1278.62ms, fracRes: 0.6017, norm(attn): 0.1553, norm(output): 0.2471, norm(x): 0.6676, norm(y): 1.0023, norm:1.1078, tok/sec: 102510.71, flops:89.77, batch-reuse:1
@ 8615 train 4.1968 , allloss: 4.2112, dt: 1267.22ms, fracRes: 0.6005, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6661, norm(y): 1.0019, norm:1.0607, tok/sec: 103432.55, flops:90.57, batch-reuse:1
@ 8616 train 3.9149 , allloss: 3.9301, dt: 1269.55ms, fracRes: 0.6006, norm(attn): 0.1553, norm(output): 0.2461, norm(x): 0.6651, norm(y): 1.0022, norm:1.0067, tok/sec: 103242.68, flops:90.41, batch-reuse:1
@ 8617 train 4.1206 , allloss: 4.1354, dt: 1291.00ms, fracRes: 0.6015, norm(attn): 0.1514, norm(output): 0.2461, norm(x): 0.6622, norm(y): 1.0022, norm:1.0675, tok/sec: 101527.39, flops:88.91, batch-reuse:1
@ 8618 train 4.1548 , allloss: 4.1695, dt: 1268.60ms, fracRes: 0.6015, norm(attn): 0.1523, norm(output): 0.2441, norm(x): 0.6614, norm(y): 1.0022, norm:0.9298, tok/sec: 103319.85, flops:90.48, batch-reuse:1
@ 8619 train 4.1396 , allloss: 4.1543, dt: 1284.50ms, fracRes: 0.6009, norm(attn): 0.1553, norm(output): 0.2461, norm(x): 0.6606, norm(y): 1.0021, norm:1.0643, tok/sec: 102040.89, flops:89.36, batch-reuse:1
@ 8620 train 4.1907 , allloss: 4.2047, dt: 1273.81ms, fracRes: 0.6008, norm(attn): 0.1533, norm(output): 0.2461, norm(x): 0.6618, norm(y): 1.0020, norm:0.9541, tok/sec: 102897.46, flops:90.11, batch-reuse:1
@ 8621 train 4.0388 , allloss: 4.0530, dt: 1265.96ms, fracRes: 0.6014, norm(attn): 0.1533, norm(output): 0.2461, norm(x): 0.6645, norm(y): 1.0022, norm:0.9305, tok/sec: 103535.56, flops:90.66, batch-reuse:1
@ 8622 train 4.1204 , allloss: 4.1346, dt: 1259.09ms, fracRes: 0.6015, norm(attn): 0.1533, norm(output): 0.2461, norm(x): 0.6658, norm(y): 1.0021, norm:0.9660, tok/sec: 104100.92, flops:91.16, batch-reuse:1
@ 8623 train 4.1303 , allloss: 4.1445, dt: 1265.63ms, fracRes: 0.6015, norm(attn): 0.1543, norm(output): 0.2471, norm(x): 0.6655, norm(y): 1.0021, norm:0.9813, tok/sec: 103562.52, flops:90.69, batch-reuse:1
@ 8624 train 4.0655 , allloss: 4.0799, dt: 1274.63ms, fracRes: 0.6014, norm(attn): 0.1562, norm(output): 0.2461, norm(x): 0.6662, norm(y): 1.0022, norm:0.9186, tok/sec: 102831.44, flops:90.05, batch-reuse:1
@ 8625 train 4.2064 , allloss: 4.2208, dt: 1293.27ms, fracRes: 0.6023, norm(attn): 0.1523, norm(output): 0.2480, norm(x): 0.6698, norm(y): 1.0024, norm:1.2380, tok/sec: 101349.32, flops:88.75, batch-reuse:1
@ 8626 train 4.2619 , allloss: 4.2764, dt: 1279.25ms, fracRes: 0.6015, norm(attn): 0.1543, norm(output): 0.2471, norm(x): 0.6652, norm(y): 1.0019, norm:1.3000, tok/sec: 102460.14, flops:89.72, batch-reuse:1
@ 8627 train 4.0796 , allloss: 4.0944, dt: 1269.51ms, fracRes: 0.6010, norm(attn): 0.1553, norm(output): 0.2490, norm(x): 0.6645, norm(y): 1.0020, norm:1.1913, tok/sec: 103245.98, flops:90.41, batch-reuse:1
@ 8628 train 4.1594 , allloss: 4.1738, dt: 1280.06ms, fracRes: 0.6009, norm(attn): 0.1533, norm(output): 0.2480, norm(x): 0.6622, norm(y): 1.0022, norm:1.2021, tok/sec: 102394.99, flops:89.67, batch-reuse:1
@ 8629 train 4.2749 , allloss: 4.2901, dt: 1302.89ms, fracRes: 0.6007, norm(attn): 0.1523, norm(output): 0.2471, norm(x): 0.6640, norm(y): 1.0021, norm:1.1463, tok/sec: 100600.67, flops:88.09, batch-reuse:1
@ 8630 train 4.1465 , allloss: 4.1613, dt: 1271.07ms, fracRes: 0.6008, norm(attn): 0.1523, norm(output): 0.2480, norm(x): 0.6647, norm(y): 1.0021, norm:1.0580, tok/sec: 103119.13, flops:90.30, batch-reuse:1
@ 8631 train 4.0357 , allloss: 4.0502, dt: 1288.69ms, fracRes: 0.6014, norm(attn): 0.1523, norm(output): 0.2461, norm(x): 0.6652, norm(y): 1.0023, norm:1.1443, tok/sec: 101709.57, flops:89.07, batch-reuse:1
@ 8632 train 4.0467 , allloss: 4.0613, dt: 1275.59ms, fracRes: 0.6006, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6666, norm(y): 1.0022, norm:1.0350, tok/sec: 102754.20, flops:89.98, batch-reuse:1
@ 8633 train 4.0328 , allloss: 4.0468, dt: 1273.05ms, fracRes: 0.6008, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6686, norm(y): 1.0021, norm:0.9845, tok/sec: 102959.26, flops:90.16, batch-reuse:1
@ 8634 train 4.1332 , allloss: 4.1469, dt: 1263.39ms, fracRes: 0.6018, norm(attn): 0.1523, norm(output): 0.2461, norm(x): 0.6691, norm(y): 1.0021, norm:0.9785, tok/sec: 103746.50, flops:90.85, batch-reuse:1
@ 8635 train 4.1254 , allloss: 4.1396, dt: 1287.45ms, fracRes: 0.6017, norm(attn): 0.1533, norm(output): 0.2480, norm(x): 0.6726, norm(y): 1.0022, norm:0.9857, tok/sec: 101807.74, flops:89.15, batch-reuse:1
@ 8636 train 4.0949 , allloss: 4.1084, dt: 1264.59ms, fracRes: 0.6011, norm(attn): 0.1533, norm(output): 0.2461, norm(x): 0.6685, norm(y): 1.0021, norm:1.1539, tok/sec: 103647.86, flops:90.76, batch-reuse:1
@ 8637 train 4.1608 , allloss: 4.1751, dt: 1283.03ms, fracRes: 0.6007, norm(attn): 0.1543, norm(output): 0.2490, norm(x): 0.6676, norm(y): 1.0020, norm:1.2013, tok/sec: 102158.34, flops:89.46, batch-reuse:1
@ 8638 train 4.1973 , allloss: 4.2130, dt: 1280.48ms, fracRes: 0.6007, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6669, norm(y): 1.0017, norm:1.1542, tok/sec: 102361.35, flops:89.64, batch-reuse:1
@ 8639 train 4.2492 , allloss: 4.2646, dt: 1276.31ms, fracRes: 0.6019, norm(attn): 0.1523, norm(output): 0.2471, norm(x): 0.6662, norm(y): 1.0020, norm:1.0186, tok/sec: 102695.85, flops:89.93, batch-reuse:1
@ 8640 train 4.2660 , allloss: 4.2809, dt: 1278.87ms, fracRes: 0.6020, norm(attn): 0.1553, norm(output): 0.2461, norm(x): 0.6639, norm(y): 1.0020, norm:1.0904, tok/sec: 102490.74, flops:89.75, batch-reuse:1
@ 8641 train 4.0431 , allloss: 4.0571, dt: 1278.82ms, fracRes: 0.6023, norm(attn): 0.1543, norm(output): 0.2451, norm(x): 0.6608, norm(y): 1.0021, norm:1.0741, tok/sec: 102494.69, flops:89.75, batch-reuse:1
@ 8642 train 4.1373 , allloss: 4.1511, dt: 1254.19ms, fracRes: 0.6028, norm(attn): 0.1523, norm(output): 0.2451, norm(x): 0.6618, norm(y): 1.0022, norm:0.9173, tok/sec: 104507.39, flops:91.52, batch-reuse:1
@ 8643 train 4.0449 , allloss: 4.0599, dt: 1268.93ms, fracRes: 0.6025, norm(attn): 0.1533, norm(output): 0.2461, norm(x): 0.6604, norm(y): 1.0022, norm:1.1014, tok/sec: 103293.56, flops:90.45, batch-reuse:1
@ 8644 train 4.1035 , allloss: 4.1186, dt: 1276.42ms, fracRes: 0.6024, norm(attn): 0.1523, norm(output): 0.2461, norm(x): 0.6617, norm(y): 1.0022, norm:1.1063, tok/sec: 102687.33, flops:89.92, batch-reuse:1
@ 8645 train 4.1244 , allloss: 4.1393, dt: 1268.00ms, fracRes: 0.6022, norm(attn): 0.1523, norm(output): 0.2471, norm(x): 0.6631, norm(y): 1.0021, norm:1.0341, tok/sec: 103368.88, flops:90.52, batch-reuse:1
@ 8646 train 4.2447 , allloss: 4.2586, dt: 1271.22ms, fracRes: 0.6021, norm(attn): 0.1523, norm(output): 0.2461, norm(x): 0.6645, norm(y): 1.0019, norm:0.8905, tok/sec: 103107.47, flops:90.29, batch-reuse:1
@ 8647 train 4.1498 , allloss: 4.1635, dt: 1264.34ms, fracRes: 0.6014, norm(attn): 0.1553, norm(output): 0.2490, norm(x): 0.6696, norm(y): 1.0018, norm:1.0690, tok/sec: 103668.42, flops:90.78, batch-reuse:1
@ 8648 train 4.0458 , allloss: 4.0601, dt: 1257.44ms, fracRes: 0.6025, norm(attn): 0.1533, norm(output): 0.2471, norm(x): 0.6688, norm(y): 1.0023, norm:1.0731, tok/sec: 104236.99, flops:91.28, batch-reuse:1
@ 8649 train 4.0906 , allloss: 4.1051, dt: 1268.54ms, fracRes: 0.6006, norm(attn): 0.1543, norm(output): 0.2471, norm(x): 0.6670, norm(y): 1.0020, norm:1.2536, tok/sec: 103325.17, flops:90.48, batch-reuse:1
@ 8650 train 4.0923 , allloss: 4.1064, dt: 1263.84ms, fracRes: 0.6005, norm(attn): 0.1533, norm(output): 0.2471, norm(x): 0.6645, norm(y): 1.0020, norm:1.0559, tok/sec: 103709.41, flops:90.82, batch-reuse:1
@ 8651 train 4.1277 , allloss: 4.1417, dt: 1264.78ms, fracRes: 0.6011, norm(attn): 0.1523, norm(output): 0.2461, norm(x): 0.6631, norm(y): 1.0020, norm:0.8988, tok/sec: 103632.03, flops:90.75, batch-reuse:1
@ 8652 train 4.1228 , allloss: 4.1372, dt: 1256.87ms, fracRes: 0.6025, norm(attn): 0.1523, norm(output): 0.2461, norm(x): 0.6628, norm(y): 1.0021, norm:0.9418, tok/sec: 104284.29, flops:91.32, batch-reuse:1
@ 8653 train 4.0452 , allloss: 4.0592, dt: 1292.64ms, fracRes: 0.6022, norm(attn): 0.1533, norm(output): 0.2471, norm(x): 0.6632, norm(y): 1.0021, norm:0.9963, tok/sec: 101398.52, flops:88.79, batch-reuse:1
@ 8654 train 4.1092 , allloss: 4.1242, dt: 1313.13ms, fracRes: 0.6021, norm(attn): 0.1543, norm(output): 0.2471, norm(x): 0.6636, norm(y): 1.0021, norm:1.0696, tok/sec: 99816.80, flops:87.41, batch-reuse:1
@ 8655 train 3.9882 , allloss: 4.0030, dt: 1261.64ms, fracRes: 0.6016, norm(attn): 0.1543, norm(output): 0.2480, norm(x): 0.6617, norm(y): 1.0021, norm:1.3383, tok/sec: 103889.91, flops:90.97, batch-reuse:1
@ 8656 train 4.0457 , allloss: 4.0595, dt: 1289.93ms, fracRes: 0.6029, norm(attn): 0.1514, norm(output): 0.2441, norm(x): 0.6613, norm(y): 1.0023, norm:1.0325, tok/sec: 101611.78, flops:88.98, batch-reuse:1
@ 8657 train 4.0257 , allloss: 4.0406, dt: 1269.73ms, fracRes: 0.6038, norm(attn): 0.1514, norm(output): 0.2461, norm(x): 0.6658, norm(y): 1.0023, norm:0.9594, tok/sec: 103228.33, flops:90.40, batch-reuse:1
@ 8658 train 4.0246 , allloss: 4.0385, dt: 1257.23ms, fracRes: 0.6041, norm(attn): 0.1523, norm(output): 0.2451, norm(x): 0.6636, norm(y): 1.0023, norm:1.0138, tok/sec: 104254.25, flops:91.29, batch-reuse:1
@ 8659 train 3.9407 , allloss: 3.9546, dt: 1292.37ms, fracRes: 0.6040, norm(attn): 0.1523, norm(output): 0.2451, norm(x): 0.6621, norm(y): 1.0024, norm:0.9518, tok/sec: 101419.83, flops:88.81, batch-reuse:1
@ 8660 train 3.9996 , allloss: 4.0136, dt: 1281.90ms, fracRes: 0.6029, norm(attn): 0.1543, norm(output): 0.2451, norm(x): 0.6614, norm(y): 1.0023, norm:0.9531, tok/sec: 102248.02, flops:89.54, batch-reuse:1
@ 8661 train 4.0680 , allloss: 4.0826, dt: 1299.25ms, fracRes: 0.6024, norm(attn): 0.1543, norm(output): 0.2461, norm(x): 0.6629, norm(y): 1.0024, norm:1.1330, tok/sec: 100882.46, flops:88.34, batch-reuse:1
@ 8662 train 4.0066 , allloss: 4.0210, dt: 1276.59ms, fracRes: 0.6023, norm(attn): 0.1533, norm(output): 0.2461, norm(x): 0.6618, norm(y): 1.0023, norm:0.9594, tok/sec: 102673.88, flops:89.91, batch-reuse:1
@ 8663 train 3.9711 , allloss: 3.9853, dt: 1258.31ms, fracRes: 0.6023, norm(attn): 0.1523, norm(output): 0.2461, norm(x): 0.6613, norm(y): 1.0022, norm:0.8902, tok/sec: 104164.89, flops:91.22, batch-reuse:1
@ 8664 train 4.0040 , allloss: 4.0180, dt: 1267.15ms, fracRes: 0.6015, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6617, norm(y): 1.0021, norm:0.9778, tok/sec: 103438.39, flops:90.58, batch-reuse:1
@ 8665 train 4.1186 , allloss: 4.1326, dt: 1265.87ms, fracRes: 0.6018, norm(attn): 0.1533, norm(output): 0.2480, norm(x): 0.6651, norm(y): 1.0019, norm:0.8992, tok/sec: 103542.87, flops:90.67, batch-reuse:1
@ 8666 train 4.0379 , allloss: 4.0514, dt: 1258.67ms, fracRes: 0.6026, norm(attn): 0.1523, norm(output): 0.2461, norm(x): 0.6630, norm(y): 1.0020, norm:1.0257, tok/sec: 104135.37, flops:91.19, batch-reuse:1
@ 8667 train 4.1045 , allloss: 4.1183, dt: 1276.46ms, fracRes: 0.6022, norm(attn): 0.1523, norm(output): 0.2471, norm(x): 0.6644, norm(y): 1.0020, norm:0.8454, tok/sec: 102683.70, flops:89.92, batch-reuse:1
@ 8668 train 3.9187 , allloss: 3.9330, dt: 1280.10ms, fracRes: 0.6021, norm(attn): 0.1543, norm(output): 0.2480, norm(x): 0.6629, norm(y): 1.0023, norm:0.9803, tok/sec: 102392.34, flops:89.66, batch-reuse:1
@ 8669 train 4.0989 , allloss: 4.1132, dt: 1261.13ms, fracRes: 0.6013, norm(attn): 0.1533, norm(output): 0.2480, norm(x): 0.6649, norm(y): 1.0021, norm:0.9561, tok/sec: 103931.90, flops:91.01, batch-reuse:1
@ 8670 train 4.0911 , allloss: 4.1049, dt: 1256.54ms, fracRes: 0.6015, norm(attn): 0.1523, norm(output): 0.2461, norm(x): 0.6606, norm(y): 1.0020, norm:0.8400, tok/sec: 104311.93, flops:91.34, batch-reuse:1
@ 8671 train 4.1676 , allloss: 4.1814, dt: 1293.53ms, fracRes: 0.6020, norm(attn): 0.1533, norm(output): 0.2461, norm(x): 0.6616, norm(y): 1.0019, norm:0.9455, tok/sec: 101329.24, flops:88.73, batch-reuse:1
@ 8672 train 4.0136 , allloss: 4.0278, dt: 1251.77ms, fracRes: 0.6019, norm(attn): 0.1533, norm(output): 0.2441, norm(x): 0.6614, norm(y): 1.0020, norm:0.9312, tok/sec: 104709.39, flops:91.69, batch-reuse:1
@ 8673 train 4.0621 , allloss: 4.0776, dt: 1275.34ms, fracRes: 0.6012, norm(attn): 0.1553, norm(output): 0.2461, norm(x): 0.6627, norm(y): 1.0019, norm:1.0013, tok/sec: 102773.89, flops:90.00, batch-reuse:1
@ 8674 train 4.0215 , allloss: 4.0356, dt: 1280.84ms, fracRes: 0.6013, norm(attn): 0.1543, norm(output): 0.2461, norm(x): 0.6618, norm(y): 1.0020, norm:0.9831, tok/sec: 102332.47, flops:89.61, batch-reuse:1
@ 8675 train 4.0183 , allloss: 4.0328, dt: 1262.86ms, fracRes: 0.6016, norm(attn): 0.1523, norm(output): 0.2461, norm(x): 0.6629, norm(y): 1.0020, norm:1.1283, tok/sec: 103789.61, flops:90.89, batch-reuse:1
@ 8676 train 4.0407 , allloss: 4.0578, dt: 1261.74ms, fracRes: 0.6026, norm(attn): 0.1533, norm(output): 0.2451, norm(x): 0.6616, norm(y): 1.0021, norm:1.2173, tok/sec: 103882.28, flops:90.97, batch-reuse:1
@ 8677 train 3.9472 , allloss: 3.9614, dt: 1273.49ms, fracRes: 0.6015, norm(attn): 0.1533, norm(output): 0.2441, norm(x): 0.6562, norm(y): 1.0021, norm:1.0252, tok/sec: 102923.27, flops:90.13, batch-reuse:1
@ 8678 train 4.0616 , allloss: 4.0766, dt: 1277.82ms, fracRes: 0.6013, norm(attn): 0.1543, norm(output): 0.2461, norm(x): 0.6584, norm(y): 1.0020, norm:0.9792, tok/sec: 102574.42, flops:89.82, batch-reuse:1
@ 8679 train 4.0622 , allloss: 4.0763, dt: 1264.52ms, fracRes: 0.6020, norm(attn): 0.1514, norm(output): 0.2422, norm(x): 0.6536, norm(y): 1.0022, norm:1.0210, tok/sec: 103653.59, flops:90.77, batch-reuse:1
@ 8680 train 4.0644 , allloss: 4.0788, dt: 1259.96ms, fracRes: 0.6021, norm(attn): 0.1533, norm(output): 0.2441, norm(x): 0.6569, norm(y): 1.0021, norm:0.9996, tok/sec: 104028.33, flops:91.10, batch-reuse:1
@ 8681 train 3.9878 , allloss: 4.0018, dt: 1242.88ms, fracRes: 0.6019, norm(attn): 0.1543, norm(output): 0.2441, norm(x): 0.6602, norm(y): 1.0020, norm:1.2289, tok/sec: 105458.28, flops:92.35, batch-reuse:1
@ 8682 train 4.0268 , allloss: 4.0412, dt: 1271.69ms, fracRes: 0.6021, norm(attn): 0.1553, norm(output): 0.2471, norm(x): 0.6620, norm(y): 1.0021, norm:1.0837, tok/sec: 103068.79, flops:90.26, batch-reuse:1
@ 8683 train 4.0289 , allloss: 4.0430, dt: 1286.11ms, fracRes: 0.6021, norm(attn): 0.1553, norm(output): 0.2471, norm(x): 0.6612, norm(y): 1.0020, norm:0.9886, tok/sec: 101913.91, flops:89.24, batch-reuse:1
@ 8684 train 4.0116 , allloss: 4.0259, dt: 1272.34ms, fracRes: 0.6025, norm(attn): 0.1523, norm(output): 0.2461, norm(x): 0.6614, norm(y): 1.0021, norm:1.0079, tok/sec: 103016.75, flops:90.21, batch-reuse:1
@ 8685 train 4.0663 , allloss: 4.0804, dt: 1278.59ms, fracRes: 0.6024, norm(attn): 0.1514, norm(output): 0.2432, norm(x): 0.6586, norm(y): 1.0020, norm:0.9303, tok/sec: 102513.12, flops:89.77, batch-reuse:1
@ 8686 train 4.0410 , allloss: 4.0554, dt: 1260.31ms, fracRes: 0.6020, norm(attn): 0.1523, norm(output): 0.2451, norm(x): 0.6605, norm(y): 1.0021, norm:1.0941, tok/sec: 103999.80, flops:91.07, batch-reuse:1
@ 8687 train 4.0643 , allloss: 4.0821, dt: 1270.32ms, fracRes: 0.6023, norm(attn): 0.1514, norm(output): 0.2441, norm(x): 0.6595, norm(y): 1.0020, norm:1.1056, tok/sec: 103180.33, flops:90.35, batch-reuse:1
@ 8688 train 4.1543 , allloss: 4.1825, dt: 1271.64ms, fracRes: 0.6026, norm(attn): 0.1543, norm(output): 0.2480, norm(x): 0.6640, norm(y): 1.0018, norm:1.1476, tok/sec: 103072.96, flops:90.26, batch-reuse:1
@ 8689 train 4.0372 , allloss: 4.0512, dt: 1248.28ms, fracRes: 0.6021, norm(attn): 0.1543, norm(output): 0.2461, norm(x): 0.6598, norm(y): 1.0020, norm:0.9832, tok/sec: 105001.86, flops:91.95, batch-reuse:1
@ 8690 train 4.0568 , allloss: 4.0706, dt: 1284.67ms, fracRes: 0.6015, norm(attn): 0.1553, norm(output): 0.2461, norm(x): 0.6586, norm(y): 1.0020, norm:1.0463, tok/sec: 102027.58, flops:89.34, batch-reuse:1
@ 8691 train 3.9787 , allloss: 3.9930, dt: 1259.91ms, fracRes: 0.6013, norm(attn): 0.1533, norm(output): 0.2461, norm(x): 0.6588, norm(y): 1.0020, norm:0.9989, tok/sec: 104032.46, flops:91.10, batch-reuse:1
@ 8692 train 4.0824 , allloss: 4.0964, dt: 1256.90ms, fracRes: 0.6009, norm(attn): 0.1514, norm(output): 0.2471, norm(x): 0.6609, norm(y): 1.0019, norm:0.9924, tok/sec: 104282.02, flops:91.32, batch-reuse:1
@ 8693 train 4.0507 , allloss: 4.0647, dt: 1311.71ms, fracRes: 0.6007, norm(attn): 0.1533, norm(output): 0.2471, norm(x): 0.6592, norm(y): 1.0018, norm:0.9895, tok/sec: 99924.57, flops:87.50, batch-reuse:1
@ 8694 train 4.0339 , allloss: 4.0479, dt: 1308.35ms, fracRes: 0.6003, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6614, norm(y): 1.0019, norm:0.9183, tok/sec: 100181.19, flops:87.73, batch-reuse:1
@ 8695 train 4.0203 , allloss: 4.0340, dt: 1291.68ms, fracRes: 0.6011, norm(attn): 0.1533, norm(output): 0.2471, norm(x): 0.6620, norm(y): 1.0019, norm:0.9884, tok/sec: 101473.91, flops:88.86, batch-reuse:1
@ 8696 train 3.8928 , allloss: 3.9072, dt: 1254.87ms, fracRes: 0.6023, norm(attn): 0.1533, norm(output): 0.2461, norm(x): 0.6614, norm(y): 1.0023, norm:0.9911, tok/sec: 104450.55, flops:91.47, batch-reuse:1
@ 8697 train 3.9924 , allloss: 4.0083, dt: 1254.92ms, fracRes: 0.6028, norm(attn): 0.1533, norm(output): 0.2461, norm(x): 0.6617, norm(y): 1.0022, norm:1.1073, tok/sec: 104446.36, flops:91.46, batch-reuse:1
@ 8698 train 4.0220 , allloss: 4.0369, dt: 1264.74ms, fracRes: 0.6031, norm(attn): 0.1543, norm(output): 0.2441, norm(x): 0.6596, norm(y): 1.0021, norm:1.1774, tok/sec: 103635.20, flops:90.75, batch-reuse:1
@ 8699 train 3.8997 , allloss: 3.9137, dt: 1263.17ms, fracRes: 0.6026, norm(attn): 0.1533, norm(output): 0.2432, norm(x): 0.6571, norm(y): 1.0020, norm:1.1557, tok/sec: 103764.04, flops:90.86, batch-reuse:1
@ 8700 train 4.1293 , allloss: 4.1426, dt: 1265.72ms, fracRes: 0.6029, norm(attn): 0.1504, norm(output): 0.2373, norm(x): 0.6513, norm(y): 1.0020, norm:0.9594, tok/sec: 103555.30, flops:90.68, batch-reuse:1
@ 8701 train 3.8016 , allloss: 3.8153, dt: 1247.51ms, fracRes: 0.6019, norm(attn): 0.1523, norm(output): 0.2422, norm(x): 0.6563, norm(y): 1.0020, norm:1.1017, tok/sec: 105066.60, flops:92.01, batch-reuse:1
@ 8702 train 3.8725 , allloss: 3.8866, dt: 1251.87ms, fracRes: 0.6010, norm(attn): 0.1543, norm(output): 0.2461, norm(x): 0.6568, norm(y): 1.0020, norm:0.9314, tok/sec: 104701.19, flops:91.69, batch-reuse:1
@ 8703 train 3.8786 , allloss: 3.8928, dt: 1283.00ms, fracRes: 0.6010, norm(attn): 0.1533, norm(output): 0.2461, norm(x): 0.6575, norm(y): 1.0020, norm:0.9911, tok/sec: 102160.87, flops:89.46, batch-reuse:1
@ 8704 train 3.8386 , allloss: 3.8525, dt: 1266.00ms, fracRes: 0.6008, norm(attn): 0.1543, norm(output): 0.2471, norm(x): 0.6596, norm(y): 1.0019, norm:0.9248, tok/sec: 103531.99, flops:90.66, batch-reuse:1
@ 8705 train 3.9254 , allloss: 3.9394, dt: 1271.98ms, fracRes: 0.6016, norm(attn): 0.1533, norm(output): 0.2480, norm(x): 0.6606, norm(y): 1.0018, norm:0.9110, tok/sec: 103045.47, flops:90.24, batch-reuse:1
@ 8706 train 3.9030 , allloss: 3.9169, dt: 1269.39ms, fracRes: 0.6021, norm(attn): 0.1514, norm(output): 0.2432, norm(x): 0.6595, norm(y): 1.0020, norm:0.8823, tok/sec: 103255.85, flops:90.42, batch-reuse:1
@ 8707 train 3.8434 , allloss: 3.8576, dt: 1270.40ms, fracRes: 0.6023, norm(attn): 0.1514, norm(output): 0.2422, norm(x): 0.6578, norm(y): 1.0021, norm:0.9186, tok/sec: 103174.13, flops:90.35, batch-reuse:1
@ 8708 train 3.8393 , allloss: 3.8534, dt: 1260.60ms, fracRes: 0.6018, norm(attn): 0.1533, norm(output): 0.2432, norm(x): 0.6577, norm(y): 1.0022, norm:0.9705, tok/sec: 103976.27, flops:91.05, batch-reuse:1
@ 8709 train 3.9267 , allloss: 3.9403, dt: 1273.19ms, fracRes: 0.6013, norm(attn): 0.1533, norm(output): 0.2451, norm(x): 0.6591, norm(y): 1.0018, norm:1.0588, tok/sec: 102947.91, flops:90.15, batch-reuse:1
@ 8710 train 3.8307 , allloss: 3.8469, dt: 1272.09ms, fracRes: 0.6014, norm(attn): 0.1543, norm(output): 0.2441, norm(x): 0.6602, norm(y): 1.0018, norm:1.0191, tok/sec: 103036.37, flops:90.23, batch-reuse:1
@ 8711 train 3.8212 , allloss: 3.8349, dt: 1251.84ms, fracRes: 0.6015, norm(attn): 0.1533, norm(output): 0.2412, norm(x): 0.6578, norm(y): 1.0020, norm:1.0196, tok/sec: 104703.13, flops:91.69, batch-reuse:1
@ 8712 train 3.9403 , allloss: 3.9548, dt: 1268.30ms, fracRes: 0.6011, norm(attn): 0.1543, norm(output): 0.2461, norm(x): 0.6609, norm(y): 1.0019, norm:0.9498, tok/sec: 103344.71, flops:90.50, batch-reuse:1
@ 8713 train 3.9348 , allloss: 3.9483, dt: 1247.94ms, fracRes: 0.6011, norm(attn): 0.1543, norm(output): 0.2461, norm(x): 0.6576, norm(y): 1.0020, norm:0.8686, tok/sec: 105031.11, flops:91.97, batch-reuse:1
@ 8714 train 3.8851 , allloss: 3.8989, dt: 1263.85ms, fracRes: 0.6016, norm(attn): 0.1543, norm(output): 0.2441, norm(x): 0.6586, norm(y): 1.0021, norm:0.9214, tok/sec: 103708.39, flops:90.82, batch-reuse:1
@ 8715 train 3.8958 , allloss: 3.9095, dt: 1269.19ms, fracRes: 0.6003, norm(attn): 0.1533, norm(output): 0.2461, norm(x): 0.6566, norm(y): 1.0018, norm:0.9569, tok/sec: 103272.43, flops:90.43, batch-reuse:1
@ 8716 train 3.9513 , allloss: 3.9651, dt: 1290.87ms, fracRes: 0.6008, norm(attn): 0.1543, norm(output): 0.2451, norm(x): 0.6563, norm(y): 1.0018, norm:0.8979, tok/sec: 101537.73, flops:88.92, batch-reuse:1
@ 8717 train 3.7805 , allloss: 3.7953, dt: 1271.42ms, fracRes: 0.6006, norm(attn): 0.1562, norm(output): 0.2451, norm(x): 0.6565, norm(y): 1.0020, norm:0.9860, tok/sec: 103091.15, flops:90.28, batch-reuse:1
@ 8718 train 3.6657 , allloss: 3.6797, dt: 1289.86ms, fracRes: 0.6013, norm(attn): 0.1533, norm(output): 0.2441, norm(x): 0.6575, norm(y): 1.0019, norm:0.9672, tok/sec: 101617.12, flops:88.98, batch-reuse:1
@ 8719 train 3.8665 , allloss: 3.8808, dt: 1283.41ms, fracRes: 0.6019, norm(attn): 0.1514, norm(output): 0.2432, norm(x): 0.6596, norm(y): 1.0020, norm:0.9957, tok/sec: 102128.03, flops:89.43, batch-reuse:1
@ 8720 train 3.8383 , allloss: 3.8523, dt: 1310.74ms, fracRes: 0.6019, norm(attn): 0.1533, norm(output): 0.2432, norm(x): 0.6601, norm(y): 1.0019, norm:0.9908, tok/sec: 99998.60, flops:87.57, batch-reuse:1
@ 8721 train 3.9189 , allloss: 3.9327, dt: 1314.88ms, fracRes: 0.6018, norm(attn): 0.1533, norm(output): 0.2451, norm(x): 0.6606, norm(y): 1.0018, norm:1.0695, tok/sec: 99683.97, flops:87.29, batch-reuse:1
@ 8722 train 3.9206 , allloss: 3.9341, dt: 1288.07ms, fracRes: 0.6019, norm(attn): 0.1543, norm(output): 0.2451, norm(x): 0.6580, norm(y): 1.0019, norm:0.9205, tok/sec: 101758.77, flops:89.11, batch-reuse:1
@ 8723 train 3.8855 , allloss: 3.8993, dt: 1272.33ms, fracRes: 0.6023, norm(attn): 0.1543, norm(output): 0.2461, norm(x): 0.6587, norm(y): 1.0018, norm:1.0238, tok/sec: 103016.95, flops:90.21, batch-reuse:1
@ 8724 train 3.9222 , allloss: 3.9378, dt: 1303.16ms, fracRes: 0.6026, norm(attn): 0.1543, norm(output): 0.2451, norm(x): 0.6572, norm(y): 1.0017, norm:0.9821, tok/sec: 100579.93, flops:88.08, batch-reuse:1
@ 8725 train 3.9139 , allloss: 3.9278, dt: 1285.05ms, fracRes: 0.6022, norm(attn): 0.1553, norm(output): 0.2451, norm(x): 0.6538, norm(y): 1.0019, norm:0.9340, tok/sec: 101997.76, flops:89.32, batch-reuse:1
@ 8726 train 3.7503 , allloss: 3.7646, dt: 1254.32ms, fracRes: 0.6031, norm(attn): 0.1553, norm(output): 0.2412, norm(x): 0.6570, norm(y): 1.0021, norm:0.9924, tok/sec: 104496.55, flops:91.51, batch-reuse:1
@ 8727 train 3.9123 , allloss: 3.9264, dt: 1290.69ms, fracRes: 0.6020, norm(attn): 0.1533, norm(output): 0.2441, norm(x): 0.6547, norm(y): 1.0018, norm:0.9426, tok/sec: 101551.68, flops:88.93, batch-reuse:1
@ 8728 train 3.9163 , allloss: 3.9299, dt: 1262.14ms, fracRes: 0.6018, norm(attn): 0.1523, norm(output): 0.2422, norm(x): 0.6524, norm(y): 1.0020, norm:1.0271, tok/sec: 103849.33, flops:90.94, batch-reuse:1
@ 8729 train 3.9825 , allloss: 3.9963, dt: 1279.25ms, fracRes: 0.6027, norm(attn): 0.1533, norm(output): 0.2422, norm(x): 0.6544, norm(y): 1.0019, norm:0.9974, tok/sec: 102460.27, flops:89.72, batch-reuse:1
@ 8730 train 3.9297 , allloss: 3.9442, dt: 1260.19ms, fracRes: 0.6034, norm(attn): 0.1533, norm(output): 0.2432, norm(x): 0.6559, norm(y): 1.0019, norm:1.2008, tok/sec: 104009.93, flops:91.08, batch-reuse:1
@ 8731 train 3.8591 , allloss: 3.8731, dt: 1269.29ms, fracRes: 0.6026, norm(attn): 0.1523, norm(output): 0.2422, norm(x): 0.6567, norm(y): 1.0020, norm:1.1200, tok/sec: 103264.09, flops:90.43, batch-reuse:1
@ 8732 train 4.0882 , allloss: 4.1026, dt: 1271.03ms, fracRes: 0.6032, norm(attn): 0.1543, norm(output): 0.2422, norm(x): 0.6581, norm(y): 1.0020, norm:1.2018, tok/sec: 103123.04, flops:90.30, batch-reuse:1
@ 8733 train 3.9345 , allloss: 3.9483, dt: 1278.17ms, fracRes: 0.6022, norm(attn): 0.1553, norm(output): 0.2451, norm(x): 0.6583, norm(y): 1.0017, norm:1.2324, tok/sec: 102546.66, flops:89.80, batch-reuse:1
@ 8734 train 3.8585 , allloss: 3.8733, dt: 1256.20ms, fracRes: 0.6022, norm(attn): 0.1543, norm(output): 0.2471, norm(x): 0.6601, norm(y): 1.0019, norm:1.0784, tok/sec: 104340.15, flops:91.37, batch-reuse:1
@ 8735 train 4.0063 , allloss: 4.0202, dt: 1272.77ms, fracRes: 0.6014, norm(attn): 0.1533, norm(output): 0.2461, norm(x): 0.6555, norm(y): 1.0017, norm:1.1762, tok/sec: 102981.61, flops:90.18, batch-reuse:1
@ 8736 train 3.9073 , allloss: 3.9215, dt: 1269.47ms, fracRes: 0.6005, norm(attn): 0.1543, norm(output): 0.2461, norm(x): 0.6563, norm(y): 1.0019, norm:1.0919, tok/sec: 103249.78, flops:90.41, batch-reuse:1
@ 8737 train 3.7777 , allloss: 3.7930, dt: 1274.04ms, fracRes: 0.5999, norm(attn): 0.1543, norm(output): 0.2461, norm(x): 0.6581, norm(y): 1.0019, norm:1.0764, tok/sec: 102879.34, flops:90.09, batch-reuse:1
@ 8738 train 3.8251 , allloss: 3.8397, dt: 1257.11ms, fracRes: 0.6014, norm(attn): 0.1533, norm(output): 0.2441, norm(x): 0.6593, norm(y): 1.0020, norm:1.1270, tok/sec: 104264.67, flops:91.30, batch-reuse:1
@ 8739 train 3.9522 , allloss: 3.9663, dt: 1269.50ms, fracRes: 0.6019, norm(attn): 0.1523, norm(output): 0.2422, norm(x): 0.6586, norm(y): 1.0020, norm:1.2229, tok/sec: 103246.93, flops:90.41, batch-reuse:1
@ 8740 train 3.8794 , allloss: 3.8935, dt: 1282.72ms, fracRes: 0.6024, norm(attn): 0.1514, norm(output): 0.2441, norm(x): 0.6592, norm(y): 1.0021, norm:1.1646, tok/sec: 102182.55, flops:89.48, batch-reuse:1
@ 8741 train 3.8250 , allloss: 3.8389, dt: 1268.87ms, fracRes: 0.6014, norm(attn): 0.1543, norm(output): 0.2461, norm(x): 0.6586, norm(y): 1.0020, norm:0.9355, tok/sec: 103297.87, flops:90.46, batch-reuse:1
@ 8742 train 3.8503 , allloss: 3.8650, dt: 1282.76ms, fracRes: 0.6007, norm(attn): 0.1553, norm(output): 0.2461, norm(x): 0.6605, norm(y): 1.0018, norm:1.0905, tok/sec: 102179.72, flops:89.48, batch-reuse:1
@ 8743 train 3.8231 , allloss: 3.8376, dt: 1276.17ms, fracRes: 0.6014, norm(attn): 0.1543, norm(output): 0.2461, norm(x): 0.6618, norm(y): 1.0019, norm:1.2196, tok/sec: 102706.93, flops:89.94, batch-reuse:1
@ 8744 train 4.1133 , allloss: 4.1276, dt: 1269.93ms, fracRes: 0.6010, norm(attn): 0.1553, norm(output): 0.2471, norm(x): 0.6629, norm(y): 1.0016, norm:1.0923, tok/sec: 103211.76, flops:90.38, batch-reuse:1
@ 8745 train 4.1840 , allloss: 4.1983, dt: 1285.79ms, fracRes: 0.6011, norm(attn): 0.1543, norm(output): 0.2480, norm(x): 0.6625, norm(y): 1.0018, norm:0.9846, tok/sec: 101938.57, flops:89.27, batch-reuse:1
@ 8746 train 4.1421 , allloss: 4.1572, dt: 1298.57ms, fracRes: 0.6011, norm(attn): 0.1543, norm(output): 0.2480, norm(x): 0.6644, norm(y): 1.0016, norm:0.9903, tok/sec: 100936.00, flops:88.39, batch-reuse:1
@ 8747 train 4.1478 , allloss: 4.1618, dt: 1284.70ms, fracRes: 0.6011, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6625, norm(y): 1.0015, norm:1.0604, tok/sec: 102025.21, flops:89.34, batch-reuse:1
@ 8748 train 4.1610 , allloss: 4.1749, dt: 1280.84ms, fracRes: 0.6012, norm(attn): 0.1543, norm(output): 0.2471, norm(x): 0.6591, norm(y): 1.0015, norm:0.9534, tok/sec: 102332.47, flops:89.61, batch-reuse:1
@ 8749 train 4.0618 , allloss: 4.0764, dt: 1294.29ms, fracRes: 0.6008, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6611, norm(y): 1.0015, norm:1.0263, tok/sec: 101269.30, flops:88.68, batch-reuse:1
@ 8750 train 4.2418 , allloss: 4.2564, dt: 1271.15ms, fracRes: 0.6011, norm(attn): 0.1523, norm(output): 0.2461, norm(x): 0.6572, norm(y): 1.0014, norm:1.1639, tok/sec: 103112.67, flops:90.29, batch-reuse:1
@ 8751 train 4.0820 , allloss: 4.0962, dt: 1272.67ms, fracRes: 0.6017, norm(attn): 0.1523, norm(output): 0.2451, norm(x): 0.6565, norm(y): 1.0017, norm:1.0414, tok/sec: 102989.41, flops:90.19, batch-reuse:1
@ 8752 train 3.9908 , allloss: 4.0049, dt: 1265.64ms, fracRes: 0.6011, norm(attn): 0.1523, norm(output): 0.2451, norm(x): 0.6581, norm(y): 1.0018, norm:1.0902, tok/sec: 103561.54, flops:90.69, batch-reuse:1
@ 8753 train 4.1628 , allloss: 4.1767, dt: 1302.35ms, fracRes: 0.6017, norm(attn): 0.1514, norm(output): 0.2461, norm(x): 0.6603, norm(y): 1.0015, norm:0.9583, tok/sec: 100643.01, flops:88.13, batch-reuse:1
@ 8754 train 4.2215 , allloss: 4.2354, dt: 1270.25ms, fracRes: 0.6012, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6623, norm(y): 1.0013, norm:1.0501, tok/sec: 103185.65, flops:90.36, batch-reuse:1
@ 8755 train 4.1347 , allloss: 4.1490, dt: 1276.33ms, fracRes: 0.6018, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6639, norm(y): 1.0017, norm:1.0574, tok/sec: 102694.18, flops:89.93, batch-reuse:1
@ 8756 train 4.1506 , allloss: 4.1643, dt: 1291.23ms, fracRes: 0.6020, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6638, norm(y): 1.0016, norm:1.0082, tok/sec: 101509.15, flops:88.89, batch-reuse:1
@ 8757 train 4.2137 , allloss: 4.2277, dt: 1260.70ms, fracRes: 0.6023, norm(attn): 0.1533, norm(output): 0.2471, norm(x): 0.6631, norm(y): 1.0014, norm:0.9291, tok/sec: 103967.23, flops:91.04, batch-reuse:1
@ 8758 train 4.7647 , allloss: 4.7788, dt: 1271.26ms, fracRes: 0.6001, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6608, norm(y): 1.0006, norm:1.7754, tok/sec: 103103.85, flops:90.29, batch-reuse:1
@ 8759 train 4.1946 , allloss: 4.2090, dt: 1282.74ms, fracRes: 0.6027, norm(attn): 0.1504, norm(output): 0.2432, norm(x): 0.6545, norm(y): 1.0015, norm:1.5539, tok/sec: 102181.37, flops:89.48, batch-reuse:1
@ 8760 train 4.1610 , allloss: 4.1754, dt: 1263.47ms, fracRes: 0.6019, norm(attn): 0.1504, norm(output): 0.2432, norm(x): 0.6542, norm(y): 1.0015, norm:1.2438, tok/sec: 103739.84, flops:90.84, batch-reuse:1
@ 8761 train 4.1491 , allloss: 4.1637, dt: 1274.59ms, fracRes: 0.6009, norm(attn): 0.1523, norm(output): 0.2451, norm(x): 0.6571, norm(y): 1.0015, norm:1.3604, tok/sec: 102834.96, flops:90.05, batch-reuse:1
@ 8762 train 4.1820 , allloss: 4.1960, dt: 1275.42ms, fracRes: 0.6019, norm(attn): 0.1533, norm(output): 0.2461, norm(x): 0.6614, norm(y): 1.0015, norm:1.0075, tok/sec: 102767.49, flops:89.99, batch-reuse:1
@ 8763 train 4.0771 , allloss: 4.0917, dt: 1264.08ms, fracRes: 0.6027, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6683, norm(y): 1.0016, norm:1.3263, tok/sec: 103689.52, flops:90.80, batch-reuse:1
@ 8764 train 4.4371 , allloss: 4.4540, dt: 1282.62ms, fracRes: 0.6033, norm(attn): 0.1553, norm(output): 0.2490, norm(x): 0.6728, norm(y): 1.0010, norm:2.1150, tok/sec: 102190.91, flops:89.49, batch-reuse:1
@ 8765 train 4.1670 , allloss: 4.1882, dt: 1277.29ms, fracRes: 0.6026, norm(attn): 0.1553, norm(output): 0.2490, norm(x): 0.6720, norm(y): 1.0014, norm:1.8846, tok/sec: 102617.48, flops:89.86, batch-reuse:1
@ 8766 train 4.1694 , allloss: 4.1847, dt: 1282.25ms, fracRes: 0.6023, norm(attn): 0.1553, norm(output): 0.2490, norm(x): 0.6702, norm(y): 1.0015, norm:1.4044, tok/sec: 102220.38, flops:89.51, batch-reuse:1
@ 8767 train 4.2101 , allloss: 4.2252, dt: 1293.19ms, fracRes: 0.6022, norm(attn): 0.1543, norm(output): 0.2490, norm(x): 0.6714, norm(y): 1.0014, norm:1.2101, tok/sec: 101355.41, flops:88.76, batch-reuse:1
@ 8768 train 4.1497 , allloss: 4.1639, dt: 1258.71ms, fracRes: 0.6026, norm(attn): 0.1543, norm(output): 0.2490, norm(x): 0.6717, norm(y): 1.0016, norm:1.1526, tok/sec: 104132.09, flops:91.19, batch-reuse:1
@ 8769 train 4.1816 , allloss: 4.1958, dt: 1261.79ms, fracRes: 0.6023, norm(attn): 0.1543, norm(output): 0.2480, norm(x): 0.6710, norm(y): 1.0015, norm:1.1410, tok/sec: 103878.02, flops:90.96, batch-reuse:1
@ 8770 train 4.1389 , allloss: 4.1537, dt: 1267.05ms, fracRes: 0.6016, norm(attn): 0.1553, norm(output): 0.2490, norm(x): 0.6729, norm(y): 1.0016, norm:1.0526, tok/sec: 103446.51, flops:90.59, batch-reuse:1
@ 8771 train 3.9243 , allloss: 3.9447, dt: 1255.36ms, fracRes: 0.6020, norm(attn): 0.1592, norm(output): 0.2539, norm(x): 0.6849, norm(y): 1.0016, norm:1.5206, tok/sec: 104410.18, flops:91.43, batch-reuse:1
@ 8772 train 4.0915 , allloss: 4.1066, dt: 1265.72ms, fracRes: 0.6013, norm(attn): 0.1553, norm(output): 0.2500, norm(x): 0.6725, norm(y): 1.0016, norm:1.1238, tok/sec: 103555.26, flops:90.68, batch-reuse:1
@ 8773 train 4.2080 , allloss: 4.2228, dt: 1245.85ms, fracRes: 0.6022, norm(attn): 0.1553, norm(output): 0.2490, norm(x): 0.6717, norm(y): 1.0017, norm:1.1876, tok/sec: 105206.58, flops:92.13, batch-reuse:1
@ 8774 train 4.1136 , allloss: 4.1282, dt: 1275.79ms, fracRes: 0.6021, norm(attn): 0.1543, norm(output): 0.2480, norm(x): 0.6701, norm(y): 1.0016, norm:1.0593, tok/sec: 102738.01, flops:89.97, batch-reuse:1
@ 8775 train 4.1476 , allloss: 4.1619, dt: 1262.50ms, fracRes: 0.6023, norm(attn): 0.1543, norm(output): 0.2480, norm(x): 0.6686, norm(y): 1.0017, norm:0.8999, tok/sec: 103819.23, flops:90.91, batch-reuse:1
@ 8776 train 4.1455 , allloss: 4.1602, dt: 1269.78ms, fracRes: 0.6019, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6680, norm(y): 1.0017, norm:1.4001, tok/sec: 103224.50, flops:90.39, batch-reuse:1
@ 8777 train 4.0707 , allloss: 4.0870, dt: 1279.76ms, fracRes: 0.6019, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6695, norm(y): 1.0016, norm:1.0789, tok/sec: 102419.27, flops:89.69, batch-reuse:1
@ 8778 train 4.2380 , allloss: 4.2523, dt: 1274.81ms, fracRes: 0.6018, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6667, norm(y): 1.0016, norm:1.1419, tok/sec: 102816.69, flops:90.04, batch-reuse:1
@ 8779 train 4.1441 , allloss: 4.1586, dt: 1254.58ms, fracRes: 0.6018, norm(attn): 0.1543, norm(output): 0.2480, norm(x): 0.6703, norm(y): 1.0014, norm:1.1560, tok/sec: 104474.94, flops:91.49, batch-reuse:1
@ 8780 train 4.1315 , allloss: 4.1457, dt: 1291.28ms, fracRes: 0.6012, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6687, norm(y): 1.0015, norm:1.0095, tok/sec: 101505.46, flops:88.89, batch-reuse:1
@ 8781 train 4.1401 , allloss: 4.1548, dt: 1322.04ms, fracRes: 0.6013, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6681, norm(y): 1.0016, norm:0.9935, tok/sec: 99144.05, flops:86.82, batch-reuse:1
@ 8782 train 4.0989 , allloss: 4.1132, dt: 1305.56ms, fracRes: 0.6010, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6645, norm(y): 1.0017, norm:1.0117, tok/sec: 100395.54, flops:87.91, batch-reuse:1
@ 8783 train 4.0717 , allloss: 4.0867, dt: 1265.35ms, fracRes: 0.5999, norm(attn): 0.1562, norm(output): 0.2500, norm(x): 0.6696, norm(y): 1.0014, norm:1.1106, tok/sec: 103585.35, flops:90.71, batch-reuse:1
@ 8784 train 4.0991 , allloss: 4.1132, dt: 1266.00ms, fracRes: 0.6007, norm(attn): 0.1553, norm(output): 0.2490, norm(x): 0.6667, norm(y): 1.0016, norm:1.0621, tok/sec: 103532.19, flops:90.66, batch-reuse:1
@ 8785 train 4.1316 , allloss: 4.1458, dt: 1253.18ms, fracRes: 0.6010, norm(attn): 0.1543, norm(output): 0.2480, norm(x): 0.6648, norm(y): 1.0016, norm:0.8753, tok/sec: 104591.22, flops:91.59, batch-reuse:1
@ 8786 train 4.1423 , allloss: 4.1562, dt: 1262.29ms, fracRes: 0.6018, norm(attn): 0.1543, norm(output): 0.2471, norm(x): 0.6631, norm(y): 1.0018, norm:1.1471, tok/sec: 103836.68, flops:90.93, batch-reuse:1
@ 8787 train 4.0484 , allloss: 4.0626, dt: 1274.72ms, fracRes: 0.6019, norm(attn): 0.1543, norm(output): 0.2471, norm(x): 0.6631, norm(y): 1.0016, norm:1.1022, tok/sec: 102824.11, flops:90.04, batch-reuse:1
@ 8788 train 4.1278 , allloss: 4.1419, dt: 1282.59ms, fracRes: 0.6024, norm(attn): 0.1553, norm(output): 0.2461, norm(x): 0.6630, norm(y): 1.0018, norm:1.0296, tok/sec: 102193.38, flops:89.49, batch-reuse:1
@ 8789 train 4.1173 , allloss: 4.1322, dt: 1272.08ms, fracRes: 0.6025, norm(attn): 0.1543, norm(output): 0.2480, norm(x): 0.6648, norm(y): 1.0016, norm:1.0931, tok/sec: 103037.63, flops:90.23, batch-reuse:1
@ 8790 train 4.1109 , allloss: 4.1244, dt: 1292.01ms, fracRes: 0.6022, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6651, norm(y): 1.0017, norm:0.9945, tok/sec: 101448.37, flops:88.84, batch-reuse:1
@ 8791 train 4.0648 , allloss: 4.0792, dt: 1267.57ms, fracRes: 0.6019, norm(attn): 0.1553, norm(output): 0.2490, norm(x): 0.6675, norm(y): 1.0017, norm:0.9448, tok/sec: 103404.19, flops:90.55, batch-reuse:1
@ 8792 train 4.1578 , allloss: 4.1719, dt: 1250.58ms, fracRes: 0.6015, norm(attn): 0.1553, norm(output): 0.2461, norm(x): 0.6628, norm(y): 1.0018, norm:1.0225, tok/sec: 104808.66, flops:91.78, batch-reuse:1
@ 8793 train 4.0308 , allloss: 4.0451, dt: 1270.92ms, fracRes: 0.6006, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6632, norm(y): 1.0015, norm:0.9208, tok/sec: 103131.72, flops:90.31, batch-reuse:1
@ 8794 train 4.0947 , allloss: 4.1105, dt: 1257.68ms, fracRes: 0.6004, norm(attn): 0.1553, norm(output): 0.2490, norm(x): 0.6634, norm(y): 1.0014, norm:1.0017, tok/sec: 104217.08, flops:91.26, batch-reuse:1
@ 8795 train 4.1322 , allloss: 4.1464, dt: 1296.58ms, fracRes: 0.6014, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6641, norm(y): 1.0014, norm:0.9675, tok/sec: 101090.48, flops:88.52, batch-reuse:1
@ 8796 train 4.1091 , allloss: 4.1235, dt: 1261.27ms, fracRes: 0.6024, norm(attn): 0.1553, norm(output): 0.2490, norm(x): 0.6672, norm(y): 1.0014, norm:0.9495, tok/sec: 103920.25, flops:91.00, batch-reuse:1
@ 8797 train 4.1291 , allloss: 4.1433, dt: 1256.60ms, fracRes: 0.6011, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6643, norm(y): 1.0014, norm:0.9654, tok/sec: 104307.11, flops:91.34, batch-reuse:1
@ 8798 train 4.1929 , allloss: 4.2078, dt: 1260.88ms, fracRes: 0.6013, norm(attn): 0.1553, norm(output): 0.2490, norm(x): 0.6685, norm(y): 1.0014, norm:1.1930, tok/sec: 103953.11, flops:91.03, batch-reuse:1
@ 8799 train 4.0657 , allloss: 4.0797, dt: 1267.63ms, fracRes: 0.6013, norm(attn): 0.1543, norm(output): 0.2480, norm(x): 0.6674, norm(y): 1.0016, norm:1.0027, tok/sec: 103399.50, flops:90.55, batch-reuse:1
@ 8800 train 4.1611 , allloss: 4.1749, dt: 1286.05ms, fracRes: 0.6019, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6649, norm(y): 1.0013, norm:1.0027, tok/sec: 101917.91, flops:89.25, batch-reuse:1
@ 8801 train 4.1867 , allloss: 4.2005, dt: 1280.44ms, fracRes: 0.6015, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6636, norm(y): 1.0012, norm:1.1371, tok/sec: 102364.52, flops:89.64, batch-reuse:1
@ 8802 train 4.0954 , allloss: 4.1096, dt: 1272.20ms, fracRes: 0.6018, norm(attn): 0.1553, norm(output): 0.2490, norm(x): 0.6637, norm(y): 1.0014, norm:1.1685, tok/sec: 103027.86, flops:90.22, batch-reuse:1
@ 8803 train 4.0778 , allloss: 4.0922, dt: 1283.42ms, fracRes: 0.6018, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6686, norm(y): 1.0014, norm:0.9036, tok/sec: 102126.88, flops:89.43, batch-reuse:1
@ 8804 train 4.0937 , allloss: 4.1077, dt: 1275.35ms, fracRes: 0.6013, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6658, norm(y): 1.0014, norm:1.0381, tok/sec: 102773.43, flops:90.00, batch-reuse:1
@ 8805 train 3.9909 , allloss: 4.0051, dt: 1261.51ms, fracRes: 0.6016, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6674, norm(y): 1.0017, norm:1.0444, tok/sec: 103900.58, flops:90.98, batch-reuse:1
@ 8806 train 4.0722 , allloss: 4.0860, dt: 1271.82ms, fracRes: 0.6011, norm(attn): 0.1553, norm(output): 0.2490, norm(x): 0.6657, norm(y): 1.0015, norm:0.9385, tok/sec: 103058.95, flops:90.25, batch-reuse:1
@ 8807 train 4.0085 , allloss: 4.0226, dt: 1293.15ms, fracRes: 0.6025, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6663, norm(y): 1.0016, norm:1.1363, tok/sec: 101358.80, flops:88.76, batch-reuse:1
@ 8808 train 4.0982 , allloss: 4.1123, dt: 1279.72ms, fracRes: 0.6021, norm(attn): 0.1543, norm(output): 0.2480, norm(x): 0.6620, norm(y): 1.0014, norm:1.1270, tok/sec: 102422.80, flops:89.69, batch-reuse:1
@ 8809 train 4.0582 , allloss: 4.0722, dt: 1260.66ms, fracRes: 0.6021, norm(attn): 0.1562, norm(output): 0.2471, norm(x): 0.6654, norm(y): 1.0015, norm:0.9378, tok/sec: 103971.16, flops:91.05, batch-reuse:1
@ 8810 train 4.1537 , allloss: 4.1672, dt: 1271.19ms, fracRes: 0.6017, norm(attn): 0.1543, norm(output): 0.2461, norm(x): 0.6618, norm(y): 1.0016, norm:0.9739, tok/sec: 103109.42, flops:90.29, batch-reuse:1
@ 8811 train 4.1335 , allloss: 4.1476, dt: 1262.15ms, fracRes: 0.6026, norm(attn): 0.1543, norm(output): 0.2461, norm(x): 0.6640, norm(y): 1.0016, norm:1.1573, tok/sec: 103848.43, flops:90.94, batch-reuse:1
@ 8812 train 4.0798 , allloss: 4.0938, dt: 1262.16ms, fracRes: 0.6021, norm(attn): 0.1533, norm(output): 0.2461, norm(x): 0.6613, norm(y): 1.0016, norm:1.0108, tok/sec: 103847.03, flops:90.94, batch-reuse:1
@ 8813 train 4.0782 , allloss: 4.0929, dt: 1269.10ms, fracRes: 0.6035, norm(attn): 0.1543, norm(output): 0.2480, norm(x): 0.6656, norm(y): 1.0018, norm:1.1256, tok/sec: 103279.73, flops:90.44, batch-reuse:1
@ 8814 train 4.0951 , allloss: 4.1088, dt: 1274.08ms, fracRes: 0.6008, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6549, norm(y): 1.0015, norm:1.1887, tok/sec: 102875.84, flops:90.09, batch-reuse:1
@ 8815 train 4.0973 , allloss: 4.1117, dt: 1261.75ms, fracRes: 0.6010, norm(attn): 0.1553, norm(output): 0.2461, norm(x): 0.6577, norm(y): 1.0015, norm:1.0588, tok/sec: 103881.10, flops:90.97, batch-reuse:1
@ 8816 train 4.1792 , allloss: 4.1939, dt: 1260.60ms, fracRes: 0.6017, norm(attn): 0.1543, norm(output): 0.2461, norm(x): 0.6595, norm(y): 1.0015, norm:1.0310, tok/sec: 103975.56, flops:91.05, batch-reuse:1
@ 8817 train 4.1203 , allloss: 4.1338, dt: 1287.84ms, fracRes: 0.6018, norm(attn): 0.1553, norm(output): 0.2451, norm(x): 0.6575, norm(y): 1.0015, norm:1.0203, tok/sec: 101776.29, flops:89.12, batch-reuse:1
@ 8818 train 4.0566 , allloss: 4.0771, dt: 1264.21ms, fracRes: 0.6020, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6634, norm(y): 1.0014, norm:1.0009, tok/sec: 103679.06, flops:90.79, batch-reuse:1
@ 8819 train 4.0868 , allloss: 4.1011, dt: 1272.25ms, fracRes: 0.6020, norm(attn): 0.1543, norm(output): 0.2480, norm(x): 0.6653, norm(y): 1.0013, norm:1.2318, tok/sec: 103024.15, flops:90.22, batch-reuse:1
@ 8820 train 4.0338 , allloss: 4.0480, dt: 1290.20ms, fracRes: 0.6013, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6636, norm(y): 1.0014, norm:1.1728, tok/sec: 101590.56, flops:88.96, batch-reuse:1
@ 8821 train 4.0993 , allloss: 4.1133, dt: 1277.99ms, fracRes: 0.6021, norm(attn): 0.1553, norm(output): 0.2471, norm(x): 0.6635, norm(y): 1.0013, norm:1.0108, tok/sec: 102560.83, flops:89.81, batch-reuse:1
@ 8822 train 4.1261 , allloss: 4.1402, dt: 1264.59ms, fracRes: 0.6029, norm(attn): 0.1543, norm(output): 0.2471, norm(x): 0.6604, norm(y): 1.0015, norm:0.9177, tok/sec: 103647.59, flops:90.76, batch-reuse:1
@ 8823 train 3.9908 , allloss: 4.0056, dt: 1273.32ms, fracRes: 0.6018, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6649, norm(y): 1.0015, norm:0.9503, tok/sec: 102937.55, flops:90.14, batch-reuse:1
@ 8824 train 4.1071 , allloss: 4.1208, dt: 1293.01ms, fracRes: 0.6016, norm(attn): 0.1533, norm(output): 0.2471, norm(x): 0.6596, norm(y): 1.0015, norm:0.9442, tok/sec: 101369.37, flops:88.77, batch-reuse:1
@ 8825 train 4.0646 , allloss: 4.0788, dt: 1248.33ms, fracRes: 0.6010, norm(attn): 0.1543, norm(output): 0.2490, norm(x): 0.6621, norm(y): 1.0012, norm:0.8989, tok/sec: 104998.05, flops:91.95, batch-reuse:1
@ 8826 train 4.1302 , allloss: 4.1441, dt: 1271.94ms, fracRes: 0.6013, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6571, norm(y): 1.0014, norm:0.8944, tok/sec: 103048.79, flops:90.24, batch-reuse:1
@ 8827 train 4.0631 , allloss: 4.0771, dt: 1260.96ms, fracRes: 0.6013, norm(attn): 0.1553, norm(output): 0.2471, norm(x): 0.6613, norm(y): 1.0014, norm:0.9638, tok/sec: 103946.13, flops:91.02, batch-reuse:1
@ 8828 train 4.1056 , allloss: 4.1198, dt: 1255.60ms, fracRes: 0.6016, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6617, norm(y): 1.0011, norm:0.9303, tok/sec: 104389.80, flops:91.41, batch-reuse:1
@ 8829 train 4.0866 , allloss: 4.1003, dt: 1268.90ms, fracRes: 0.6020, norm(attn): 0.1553, norm(output): 0.2471, norm(x): 0.6616, norm(y): 1.0013, norm:0.8848, tok/sec: 103296.03, flops:90.45, batch-reuse:1
@ 8830 train 4.0454 , allloss: 4.0596, dt: 1274.89ms, fracRes: 0.6021, norm(attn): 0.1523, norm(output): 0.2471, norm(x): 0.6622, norm(y): 1.0014, norm:0.9301, tok/sec: 102810.35, flops:90.03, batch-reuse:1
@ 8831 train 4.0889 , allloss: 4.1031, dt: 1273.12ms, fracRes: 0.6016, norm(attn): 0.1543, norm(output): 0.2471, norm(x): 0.6590, norm(y): 1.0012, norm:0.9773, tok/sec: 102953.28, flops:90.15, batch-reuse:1
@ 8832 train 4.1418 , allloss: 4.1564, dt: 1253.94ms, fracRes: 0.6014, norm(attn): 0.1543, norm(output): 0.2480, norm(x): 0.6567, norm(y): 1.0012, norm:1.1584, tok/sec: 104527.82, flops:91.53, batch-reuse:1
@ 8833 train 4.0390 , allloss: 4.0528, dt: 1258.87ms, fracRes: 0.6017, norm(attn): 0.1562, norm(output): 0.2471, norm(x): 0.6588, norm(y): 1.0014, norm:1.0597, tok/sec: 104118.96, flops:91.18, batch-reuse:1
@ 8834 train 4.1855 , allloss: 4.1991, dt: 1253.47ms, fracRes: 0.6022, norm(attn): 0.1543, norm(output): 0.2480, norm(x): 0.6595, norm(y): 1.0013, norm:0.8984, tok/sec: 104567.45, flops:91.57, batch-reuse:1
@ 8835 train 4.0262 , allloss: 4.0395, dt: 1255.40ms, fracRes: 0.6013, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6600, norm(y): 1.0014, norm:1.0146, tok/sec: 104406.59, flops:91.43, batch-reuse:1
@ 8836 train 4.1117 , allloss: 4.1254, dt: 1252.21ms, fracRes: 0.6014, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6601, norm(y): 1.0013, norm:1.0132, tok/sec: 104672.93, flops:91.66, batch-reuse:1
@ 8837 train 4.0033 , allloss: 4.0174, dt: 1280.47ms, fracRes: 0.6020, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6600, norm(y): 1.0015, norm:1.0308, tok/sec: 102362.42, flops:89.64, batch-reuse:1
@ 8838 train 4.0457 , allloss: 4.0594, dt: 1255.44ms, fracRes: 0.6025, norm(attn): 0.1553, norm(output): 0.2461, norm(x): 0.6593, norm(y): 1.0015, norm:0.9405, tok/sec: 104403.51, flops:91.42, batch-reuse:1
@ 8839 train 4.0933 , allloss: 4.1069, dt: 1277.52ms, fracRes: 0.6021, norm(attn): 0.1523, norm(output): 0.2461, norm(x): 0.6568, norm(y): 1.0015, norm:1.0007, tok/sec: 102598.64, flops:89.84, batch-reuse:1
@ 8840 train 4.0243 , allloss: 4.0382, dt: 1262.49ms, fracRes: 0.6013, norm(attn): 0.1514, norm(output): 0.2461, norm(x): 0.6565, norm(y): 1.0013, norm:1.0664, tok/sec: 103820.42, flops:90.91, batch-reuse:1
@ 8841 train 4.0124 , allloss: 4.0265, dt: 1265.91ms, fracRes: 0.6015, norm(attn): 0.1533, norm(output): 0.2451, norm(x): 0.6575, norm(y): 1.0014, norm:1.0742, tok/sec: 103539.69, flops:90.67, batch-reuse:1
@ 8842 train 3.8944 , allloss: 3.9089, dt: 1265.56ms, fracRes: 0.6012, norm(attn): 0.1572, norm(output): 0.2480, norm(x): 0.6602, norm(y): 1.0014, norm:0.9700, tok/sec: 103568.70, flops:90.69, batch-reuse:1
@ 8843 train 4.0861 , allloss: 4.0998, dt: 1270.15ms, fracRes: 0.6018, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6608, norm(y): 1.0012, norm:0.9288, tok/sec: 103194.27, flops:90.37, batch-reuse:1
@ 8844 train 4.2558 , allloss: 4.2699, dt: 1297.43ms, fracRes: 0.6011, norm(attn): 0.1553, norm(output): 0.2490, norm(x): 0.6626, norm(y): 1.0009, norm:0.9946, tok/sec: 101024.37, flops:88.47, batch-reuse:1
@ 8845 train 4.0525 , allloss: 4.0677, dt: 1272.04ms, fracRes: 0.5998, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6677, norm(y): 1.0009, norm:1.0578, tok/sec: 103041.03, flops:90.23, batch-reuse:1
@ 8846 train 4.0466 , allloss: 4.0606, dt: 1279.17ms, fracRes: 0.6005, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6608, norm(y): 1.0013, norm:1.1594, tok/sec: 102466.67, flops:89.73, batch-reuse:1
@ 8847 train 4.0111 , allloss: 4.0253, dt: 1259.93ms, fracRes: 0.6015, norm(attn): 0.1553, norm(output): 0.2471, norm(x): 0.6607, norm(y): 1.0014, norm:1.0264, tok/sec: 104030.91, flops:91.10, batch-reuse:1
@ 8848 train 4.0725 , allloss: 4.0862, dt: 1262.30ms, fracRes: 0.6013, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6610, norm(y): 1.0012, norm:1.0094, tok/sec: 103835.83, flops:90.93, batch-reuse:1
@ 8849 train 4.0115 , allloss: 4.0250, dt: 1258.30ms, fracRes: 0.6012, norm(attn): 0.1553, norm(output): 0.2490, norm(x): 0.6608, norm(y): 1.0013, norm:0.9733, tok/sec: 104166.19, flops:91.22, batch-reuse:1
@ 8850 train 4.0358 , allloss: 4.0496, dt: 1265.18ms, fracRes: 0.6014, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6611, norm(y): 1.0013, norm:1.0180, tok/sec: 103599.11, flops:90.72, batch-reuse:1
@ 8851 train 4.0614 , allloss: 4.0752, dt: 1266.38ms, fracRes: 0.6010, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6612, norm(y): 1.0011, norm:1.0738, tok/sec: 103501.59, flops:90.63, batch-reuse:1
@ 8852 train 3.9652 , allloss: 3.9789, dt: 1279.21ms, fracRes: 0.6012, norm(attn): 0.1533, norm(output): 0.2471, norm(x): 0.6612, norm(y): 1.0013, norm:1.0857, tok/sec: 102462.93, flops:89.73, batch-reuse:1
@ 8853 train 4.1040 , allloss: 4.1182, dt: 1267.59ms, fracRes: 0.6012, norm(attn): 0.1543, norm(output): 0.2480, norm(x): 0.6628, norm(y): 1.0012, norm:1.0229, tok/sec: 103402.38, flops:90.55, batch-reuse:1
@ 8854 train 4.0423 , allloss: 4.0567, dt: 1245.24ms, fracRes: 0.6022, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6634, norm(y): 1.0013, norm:1.0327, tok/sec: 105258.81, flops:92.17, batch-reuse:1
@ 8855 train 4.1307 , allloss: 4.1447, dt: 1260.40ms, fracRes: 0.6027, norm(attn): 0.1543, norm(output): 0.2480, norm(x): 0.6651, norm(y): 1.0013, norm:1.0443, tok/sec: 103992.00, flops:91.06, batch-reuse:1
@ 8856 train 4.0626 , allloss: 4.0764, dt: 1264.13ms, fracRes: 0.6030, norm(attn): 0.1543, norm(output): 0.2471, norm(x): 0.6648, norm(y): 1.0013, norm:1.0642, tok/sec: 103685.24, flops:90.80, batch-reuse:1
@ 8857 train 3.9940 , allloss: 4.0079, dt: 1253.04ms, fracRes: 0.6025, norm(attn): 0.1553, norm(output): 0.2461, norm(x): 0.6608, norm(y): 1.0013, norm:1.0286, tok/sec: 104603.22, flops:91.60, batch-reuse:1
@ 8858 train 4.0334 , allloss: 4.0477, dt: 1267.44ms, fracRes: 0.6027, norm(attn): 0.1553, norm(output): 0.2471, norm(x): 0.6617, norm(y): 1.0015, norm:1.0491, tok/sec: 103414.95, flops:90.56, batch-reuse:1
@ 8859 train 4.0731 , allloss: 4.0867, dt: 1268.41ms, fracRes: 0.6020, norm(attn): 0.1543, norm(output): 0.2471, norm(x): 0.6589, norm(y): 1.0014, norm:1.1406, tok/sec: 103335.48, flops:90.49, batch-reuse:1
@ 8860 train 4.1048 , allloss: 4.1194, dt: 1253.12ms, fracRes: 0.6017, norm(attn): 0.1553, norm(output): 0.2471, norm(x): 0.6626, norm(y): 1.0013, norm:1.0294, tok/sec: 104596.43, flops:91.59, batch-reuse:1
@ 8861 train 4.0299 , allloss: 4.0454, dt: 1284.47ms, fracRes: 0.6011, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6643, norm(y): 1.0013, norm:1.0839, tok/sec: 102043.96, flops:89.36, batch-reuse:1
@ 8862 train 4.0874 , allloss: 4.1013, dt: 1308.68ms, fracRes: 0.6004, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6590, norm(y): 1.0012, norm:1.0399, tok/sec: 100155.71, flops:87.70, batch-reuse:1
@ 8863 train 4.1200 , allloss: 4.1341, dt: 1275.30ms, fracRes: 0.6003, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6598, norm(y): 1.0011, norm:1.0233, tok/sec: 102777.04, flops:90.00, batch-reuse:1
@ 8864 train 3.9346 , allloss: 3.9487, dt: 1267.46ms, fracRes: 0.6008, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6603, norm(y): 1.0012, norm:1.0005, tok/sec: 103412.81, flops:90.56, batch-reuse:1
@ 8865 train 3.9748 , allloss: 3.9887, dt: 1268.81ms, fracRes: 0.6016, norm(attn): 0.1553, norm(output): 0.2471, norm(x): 0.6582, norm(y): 1.0013, norm:0.9116, tok/sec: 103303.15, flops:90.46, batch-reuse:1
@ 8866 train 3.9739 , allloss: 3.9879, dt: 1291.08ms, fracRes: 0.6022, norm(attn): 0.1543, norm(output): 0.2480, norm(x): 0.6599, norm(y): 1.0014, norm:0.9359, tok/sec: 101521.02, flops:88.90, batch-reuse:1
@ 8867 train 4.0382 , allloss: 4.0526, dt: 1313.79ms, fracRes: 0.6028, norm(attn): 0.1543, norm(output): 0.2461, norm(x): 0.6601, norm(y): 1.0013, norm:0.9780, tok/sec: 99766.28, flops:87.36, batch-reuse:1
@ 8868 train 3.9752 , allloss: 3.9887, dt: 1315.16ms, fracRes: 0.6017, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6599, norm(y): 1.0012, norm:0.9274, tok/sec: 99662.40, flops:87.27, batch-reuse:1
@ 8869 train 4.1124 , allloss: 4.1262, dt: 1318.77ms, fracRes: 0.6021, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6630, norm(y): 1.0011, norm:0.9989, tok/sec: 99389.71, flops:87.03, batch-reuse:1
@ 8870 train 3.9727 , allloss: 3.9865, dt: 1270.02ms, fracRes: 0.6023, norm(attn): 0.1562, norm(output): 0.2471, norm(x): 0.6600, norm(y): 1.0014, norm:0.9466, tok/sec: 103204.87, flops:90.38, batch-reuse:1
@ 8871 train 3.9795 , allloss: 3.9938, dt: 1266.63ms, fracRes: 0.6031, norm(attn): 0.1553, norm(output): 0.2451, norm(x): 0.6586, norm(y): 1.0016, norm:1.1496, tok/sec: 103480.86, flops:90.62, batch-reuse:1
@ 8872 train 4.0818 , allloss: 4.0964, dt: 1259.94ms, fracRes: 0.6028, norm(attn): 0.1553, norm(output): 0.2471, norm(x): 0.6603, norm(y): 1.0013, norm:1.0037, tok/sec: 104030.73, flops:91.10, batch-reuse:1
@ 8873 train 3.9967 , allloss: 4.0108, dt: 1311.00ms, fracRes: 0.6025, norm(attn): 0.1553, norm(output): 0.2451, norm(x): 0.6579, norm(y): 1.0013, norm:0.9770, tok/sec: 99979.00, flops:87.55, batch-reuse:1
@ 8874 train 3.9667 , allloss: 3.9813, dt: 1271.32ms, fracRes: 0.6024, norm(attn): 0.1553, norm(output): 0.2461, norm(x): 0.6596, norm(y): 1.0014, norm:1.3217, tok/sec: 103098.92, flops:90.28, batch-reuse:1
@ 8875 train 4.0994 , allloss: 4.1135, dt: 1289.65ms, fracRes: 0.6019, norm(attn): 0.1533, norm(output): 0.2461, norm(x): 0.6524, norm(y): 1.0013, norm:0.9654, tok/sec: 101634.12, flops:89.00, batch-reuse:1
@ 8876 train 4.1004 , allloss: 4.1141, dt: 1257.63ms, fracRes: 0.6016, norm(attn): 0.1514, norm(output): 0.2432, norm(x): 0.6526, norm(y): 1.0013, norm:0.9659, tok/sec: 104221.58, flops:91.27, batch-reuse:1
@ 8877 train 4.0444 , allloss: 4.0583, dt: 1265.34ms, fracRes: 0.6016, norm(attn): 0.1553, norm(output): 0.2451, norm(x): 0.6559, norm(y): 1.0013, norm:1.0341, tok/sec: 103586.30, flops:90.71, batch-reuse:1
@ 8878 train 3.9961 , allloss: 4.0107, dt: 1275.36ms, fracRes: 0.6022, norm(attn): 0.1553, norm(output): 0.2471, norm(x): 0.6576, norm(y): 1.0014, norm:0.9782, tok/sec: 102772.33, flops:90.00, batch-reuse:1
@ 8879 train 4.0201 , allloss: 4.0340, dt: 1240.71ms, fracRes: 0.6013, norm(attn): 0.1553, norm(output): 0.2471, norm(x): 0.6579, norm(y): 1.0013, norm:0.9269, tok/sec: 105642.55, flops:92.51, batch-reuse:1
@ 8880 train 4.0465 , allloss: 4.0603, dt: 1256.84ms, fracRes: 0.6011, norm(attn): 0.1553, norm(output): 0.2471, norm(x): 0.6567, norm(y): 1.0012, norm:0.9308, tok/sec: 104286.98, flops:91.32, batch-reuse:1
@ 8881 train 4.0566 , allloss: 4.0706, dt: 1299.67ms, fracRes: 0.6003, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6591, norm(y): 1.0011, norm:0.9816, tok/sec: 100849.92, flops:88.31, batch-reuse:1
@ 8882 train 3.9354 , allloss: 3.9491, dt: 1294.63ms, fracRes: 0.6010, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6588, norm(y): 1.0012, norm:0.9294, tok/sec: 101243.20, flops:88.66, batch-reuse:1
@ 8883 train 3.8857 , allloss: 3.8993, dt: 1277.96ms, fracRes: 0.6020, norm(attn): 0.1553, norm(output): 0.2461, norm(x): 0.6574, norm(y): 1.0014, norm:0.9514, tok/sec: 102563.38, flops:89.81, batch-reuse:1
@ 8884 train 3.7161 , allloss: 3.7299, dt: 1286.80ms, fracRes: 0.6027, norm(attn): 0.1543, norm(output): 0.2441, norm(x): 0.6581, norm(y): 1.0015, norm:0.8700, tok/sec: 101858.58, flops:89.20, batch-reuse:1
@ 8885 train 4.0020 , allloss: 4.0163, dt: 1295.09ms, fracRes: 0.6019, norm(attn): 0.1553, norm(output): 0.2461, norm(x): 0.6606, norm(y): 1.0015, norm:0.9202, tok/sec: 101207.09, flops:88.63, batch-reuse:1
@ 8886 train 3.9892 , allloss: 4.0039, dt: 1255.24ms, fracRes: 0.6010, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6592, norm(y): 1.0011, norm:0.9636, tok/sec: 104419.93, flops:91.44, batch-reuse:1
@ 8887 train 3.9187 , allloss: 3.9329, dt: 1264.47ms, fracRes: 0.6013, norm(attn): 0.1562, norm(output): 0.2471, norm(x): 0.6586, norm(y): 1.0012, norm:0.9002, tok/sec: 103657.32, flops:90.77, batch-reuse:1
@ 8888 train 3.8747 , allloss: 3.8888, dt: 1287.43ms, fracRes: 0.6021, norm(attn): 0.1553, norm(output): 0.2461, norm(x): 0.6593, norm(y): 1.0014, norm:1.0091, tok/sec: 101809.27, flops:89.15, batch-reuse:1
@ 8889 train 3.7535 , allloss: 3.7689, dt: 1323.76ms, fracRes: 0.6023, norm(attn): 0.1562, norm(output): 0.2471, norm(x): 0.6593, norm(y): 1.0012, norm:1.2334, tok/sec: 99015.07, flops:86.71, batch-reuse:1
@ 8890 train 3.9812 , allloss: 3.9961, dt: 1309.01ms, fracRes: 0.6016, norm(attn): 0.1543, norm(output): 0.2461, norm(x): 0.6571, norm(y): 1.0011, norm:1.0604, tok/sec: 100130.89, flops:87.68, batch-reuse:1
@ 8891 train 3.9223 , allloss: 3.9373, dt: 1306.56ms, fracRes: 0.6017, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6608, norm(y): 1.0012, norm:1.0453, tok/sec: 100318.43, flops:87.85, batch-reuse:1
@ 8892 train 3.9666 , allloss: 3.9812, dt: 1257.42ms, fracRes: 0.6017, norm(attn): 0.1553, norm(output): 0.2461, norm(x): 0.6568, norm(y): 1.0011, norm:0.9664, tok/sec: 104238.44, flops:91.28, batch-reuse:1
@ 8893 train 3.9127 , allloss: 3.9277, dt: 1274.42ms, fracRes: 0.6017, norm(attn): 0.1553, norm(output): 0.2461, norm(x): 0.6582, norm(y): 1.0014, norm:1.0310, tok/sec: 102848.45, flops:90.06, batch-reuse:1
@ 8894 train 3.8527 , allloss: 3.8669, dt: 1251.83ms, fracRes: 0.6012, norm(attn): 0.1553, norm(output): 0.2461, norm(x): 0.6552, norm(y): 1.0013, norm:0.9818, tok/sec: 104704.48, flops:91.69, batch-reuse:1
@ 8895 train 3.9286 , allloss: 3.9423, dt: 1279.82ms, fracRes: 0.6010, norm(attn): 0.1553, norm(output): 0.2461, norm(x): 0.6561, norm(y): 1.0012, norm:1.0405, tok/sec: 102414.52, flops:89.68, batch-reuse:1
@ 8896 train 3.8434 , allloss: 3.8578, dt: 1283.06ms, fracRes: 0.6014, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6606, norm(y): 1.0013, norm:1.1235, tok/sec: 102155.70, flops:89.46, batch-reuse:1
@ 8897 train 3.9153 , allloss: 3.9293, dt: 1285.57ms, fracRes: 0.6014, norm(attn): 0.1553, norm(output): 0.2471, norm(x): 0.6568, norm(y): 1.0011, norm:0.9404, tok/sec: 101956.45, flops:89.28, batch-reuse:1
@ 8898 train 3.9040 , allloss: 3.9180, dt: 1294.02ms, fracRes: 0.6012, norm(attn): 0.1543, norm(output): 0.2461, norm(x): 0.6568, norm(y): 1.0011, norm:0.9560, tok/sec: 101290.67, flops:88.70, batch-reuse:1
@ 8899 train 3.8265 , allloss: 3.8416, dt: 1274.63ms, fracRes: 0.6026, norm(attn): 0.1553, norm(output): 0.2461, norm(x): 0.6608, norm(y): 1.0012, norm:1.1081, tok/sec: 102831.56, flops:90.05, batch-reuse:1
@ 8900 train 3.7861 , allloss: 3.8001, dt: 1260.43ms, fracRes: 0.6015, norm(attn): 0.1553, norm(output): 0.2461, norm(x): 0.6554, norm(y): 1.0012, norm:0.9902, tok/sec: 103989.84, flops:91.06, batch-reuse:1
@ 8901 train 3.8324 , allloss: 3.8464, dt: 1264.10ms, fracRes: 0.6017, norm(attn): 0.1553, norm(output): 0.2451, norm(x): 0.6538, norm(y): 1.0012, norm:0.9326, tok/sec: 103688.11, flops:90.80, batch-reuse:1
@ 8902 train 3.8652 , allloss: 3.8793, dt: 1251.63ms, fracRes: 0.6021, norm(attn): 0.1543, norm(output): 0.2422, norm(x): 0.6528, norm(y): 1.0014, norm:0.9725, tok/sec: 104720.68, flops:91.70, batch-reuse:1
@ 8903 train 3.8469 , allloss: 3.8624, dt: 1268.65ms, fracRes: 0.6019, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6605, norm(y): 1.0012, norm:1.1617, tok/sec: 103315.85, flops:90.47, batch-reuse:1
@ 8904 train 3.8619 , allloss: 3.8762, dt: 1300.29ms, fracRes: 0.6013, norm(attn): 0.1543, norm(output): 0.2451, norm(x): 0.6545, norm(y): 1.0012, norm:1.0344, tok/sec: 100801.75, flops:88.27, batch-reuse:1
@ 8905 train 3.8375 , allloss: 3.8515, dt: 1289.88ms, fracRes: 0.6013, norm(attn): 0.1553, norm(output): 0.2451, norm(x): 0.6527, norm(y): 1.0014, norm:1.0001, tok/sec: 101615.95, flops:88.98, batch-reuse:1
@ 8906 train 3.9287 , allloss: 3.9431, dt: 1282.37ms, fracRes: 0.6019, norm(attn): 0.1553, norm(output): 0.2461, norm(x): 0.6563, norm(y): 1.0013, norm:1.0275, tok/sec: 102210.86, flops:89.50, batch-reuse:1
@ 8907 train 3.9811 , allloss: 3.9963, dt: 1283.94ms, fracRes: 0.6009, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6589, norm(y): 1.0012, norm:1.0638, tok/sec: 102085.46, flops:89.39, batch-reuse:1
@ 8908 train 3.8339 , allloss: 3.8480, dt: 1251.54ms, fracRes: 0.6018, norm(attn): 0.1553, norm(output): 0.2461, norm(x): 0.6516, norm(y): 1.0013, norm:1.0100, tok/sec: 104728.78, flops:91.71, batch-reuse:1
@ 8909 train 3.9596 , allloss: 3.9736, dt: 1263.33ms, fracRes: 0.6019, norm(attn): 0.1543, norm(output): 0.2461, norm(x): 0.6533, norm(y): 1.0011, norm:0.9443, tok/sec: 103751.37, flops:90.85, batch-reuse:1
@ 8910 train 3.9424 , allloss: 3.9566, dt: 1254.14ms, fracRes: 0.6013, norm(attn): 0.1553, norm(output): 0.2461, norm(x): 0.6557, norm(y): 1.0011, norm:0.9508, tok/sec: 104511.13, flops:91.52, batch-reuse:1
@ 8911 train 3.7989 , allloss: 3.8143, dt: 1270.40ms, fracRes: 0.5999, norm(attn): 0.1572, norm(output): 0.2480, norm(x): 0.6580, norm(y): 1.0010, norm:1.0491, tok/sec: 103173.82, flops:90.35, batch-reuse:1
@ 8912 train 4.0353 , allloss: 4.0494, dt: 1282.67ms, fracRes: 0.6004, norm(attn): 0.1562, norm(output): 0.2461, norm(x): 0.6563, norm(y): 1.0009, norm:1.0890, tok/sec: 102186.69, flops:89.48, batch-reuse:1
@ 8913 train 3.7588 , allloss: 3.7725, dt: 1278.21ms, fracRes: 0.6006, norm(attn): 0.1592, norm(output): 0.2461, norm(x): 0.6555, norm(y): 1.0009, norm:1.3453, tok/sec: 102543.20, flops:89.80, batch-reuse:1
@ 8914 train 3.8698 , allloss: 3.8862, dt: 1276.21ms, fracRes: 0.6028, norm(attn): 0.1553, norm(output): 0.2451, norm(x): 0.6601, norm(y): 1.0011, norm:1.4036, tok/sec: 102704.27, flops:89.94, batch-reuse:1
@ 8915 train 3.9907 , allloss: 4.0044, dt: 1282.99ms, fracRes: 0.6018, norm(attn): 0.1553, norm(output): 0.2471, norm(x): 0.6584, norm(y): 1.0010, norm:1.0008, tok/sec: 102161.00, flops:89.46, batch-reuse:1
@ 8916 train 3.8508 , allloss: 3.8654, dt: 1257.94ms, fracRes: 0.6019, norm(attn): 0.1543, norm(output): 0.2471, norm(x): 0.6619, norm(y): 1.0010, norm:0.9632, tok/sec: 104195.41, flops:91.24, batch-reuse:1
@ 8917 train 3.9642 , allloss: 3.9779, dt: 1272.32ms, fracRes: 0.6026, norm(attn): 0.1533, norm(output): 0.2461, norm(x): 0.6585, norm(y): 1.0011, norm:1.1638, tok/sec: 103018.03, flops:90.21, batch-reuse:1
@ 8918 train 3.9180 , allloss: 3.9319, dt: 1279.23ms, fracRes: 0.6029, norm(attn): 0.1533, norm(output): 0.2461, norm(x): 0.6593, norm(y): 1.0011, norm:1.1005, tok/sec: 102461.80, flops:89.72, batch-reuse:1
@ 8919 train 3.8478 , allloss: 3.8613, dt: 1281.47ms, fracRes: 0.6022, norm(attn): 0.1543, norm(output): 0.2471, norm(x): 0.6592, norm(y): 1.0012, norm:0.9586, tok/sec: 102282.68, flops:89.57, batch-reuse:1
@ 8920 train 3.8312 , allloss: 3.8446, dt: 1255.82ms, fracRes: 0.6025, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6623, norm(y): 1.0011, norm:0.9858, tok/sec: 104371.88, flops:91.40, batch-reuse:1
@ 8921 train 3.9067 , allloss: 3.9228, dt: 1289.37ms, fracRes: 0.6029, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6681, norm(y): 1.0008, norm:1.1785, tok/sec: 101655.77, flops:89.02, batch-reuse:1
@ 8922 train 3.9022 , allloss: 3.9161, dt: 1262.77ms, fracRes: 0.6019, norm(attn): 0.1553, norm(output): 0.2471, norm(x): 0.6629, norm(y): 1.0011, norm:0.9668, tok/sec: 103797.17, flops:90.89, batch-reuse:1
@ 8923 train 3.9109 , allloss: 3.9245, dt: 1276.49ms, fracRes: 0.6018, norm(attn): 0.1553, norm(output): 0.2471, norm(x): 0.6607, norm(y): 1.0012, norm:1.0907, tok/sec: 102681.25, flops:89.92, batch-reuse:1
@ 8924 train 3.9703 , allloss: 3.9840, dt: 1292.89ms, fracRes: 0.6015, norm(attn): 0.1543, norm(output): 0.2461, norm(x): 0.6589, norm(y): 1.0010, norm:0.9954, tok/sec: 101379.11, flops:88.78, batch-reuse:1
@ 8925 train 3.8436 , allloss: 3.8574, dt: 1307.18ms, fracRes: 0.6010, norm(attn): 0.1553, norm(output): 0.2461, norm(x): 0.6553, norm(y): 1.0011, norm:0.9306, tok/sec: 100270.85, flops:87.81, batch-reuse:1
@ 8926 train 3.9018 , allloss: 3.9161, dt: 1275.93ms, fracRes: 0.6005, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6588, norm(y): 1.0009, norm:1.0049, tok/sec: 102726.59, flops:89.96, batch-reuse:1
@ 8927 train 3.9290 , allloss: 3.9430, dt: 1289.97ms, fracRes: 0.6016, norm(attn): 0.1533, norm(output): 0.2451, norm(x): 0.6571, norm(y): 1.0012, norm:0.9393, tok/sec: 101608.36, flops:88.98, batch-reuse:1
@ 8928 train 3.8418 , allloss: 3.8555, dt: 1260.06ms, fracRes: 0.6020, norm(attn): 0.1533, norm(output): 0.2441, norm(x): 0.6556, norm(y): 1.0011, norm:1.0204, tok/sec: 104020.26, flops:91.09, batch-reuse:1
@ 8929 train 3.8741 , allloss: 3.8876, dt: 1254.20ms, fracRes: 0.6017, norm(attn): 0.1553, norm(output): 0.2471, norm(x): 0.6590, norm(y): 1.0013, norm:0.9652, tok/sec: 104506.34, flops:91.51, batch-reuse:1
@ 8930 train 3.9114 , allloss: 3.9253, dt: 1252.18ms, fracRes: 0.6016, norm(attn): 0.1562, norm(output): 0.2471, norm(x): 0.6596, norm(y): 1.0013, norm:1.0164, tok/sec: 104675.20, flops:91.66, batch-reuse:1
@ 8931 train 4.1552 , allloss: 4.1687, dt: 1253.81ms, fracRes: 0.6021, norm(attn): 0.1533, norm(output): 0.2461, norm(x): 0.6550, norm(y): 1.0009, norm:0.9172, tok/sec: 104538.73, flops:91.54, batch-reuse:1
@ 8932 train 4.0899 , allloss: 4.1044, dt: 1257.86ms, fracRes: 0.6019, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6596, norm(y): 1.0009, norm:1.1054, tok/sec: 104202.00, flops:91.25, batch-reuse:1
@ 8933 train 4.2441 , allloss: 4.2582, dt: 1265.27ms, fracRes: 0.6014, norm(attn): 0.1553, norm(output): 0.2471, norm(x): 0.6532, norm(y): 1.0006, norm:0.9873, tok/sec: 103592.26, flops:90.71, batch-reuse:1
@ 8934 train 4.1265 , allloss: 4.1408, dt: 1272.72ms, fracRes: 0.6013, norm(attn): 0.1553, norm(output): 0.2471, norm(x): 0.6536, norm(y): 1.0008, norm:1.0037, tok/sec: 102986.11, flops:90.18, batch-reuse:1
@ 8935 train 4.1702 , allloss: 4.1847, dt: 1275.48ms, fracRes: 0.6009, norm(attn): 0.1533, norm(output): 0.2471, norm(x): 0.6527, norm(y): 1.0007, norm:1.0759, tok/sec: 102763.09, flops:89.99, batch-reuse:1
@ 8936 train 4.1414 , allloss: 4.1559, dt: 1286.86ms, fracRes: 0.6004, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6548, norm(y): 1.0008, norm:1.2684, tok/sec: 101853.92, flops:89.19, batch-reuse:1
@ 8937 train 4.1930 , allloss: 4.2073, dt: 1264.33ms, fracRes: 0.6003, norm(attn): 0.1553, norm(output): 0.2471, norm(x): 0.6554, norm(y): 1.0007, norm:1.1006, tok/sec: 103669.38, flops:90.78, batch-reuse:1
@ 8938 train 4.1844 , allloss: 4.1982, dt: 1263.59ms, fracRes: 0.6006, norm(attn): 0.1553, norm(output): 0.2490, norm(x): 0.6559, norm(y): 1.0006, norm:1.2652, tok/sec: 103729.96, flops:90.83, batch-reuse:1
@ 8939 train 4.1421 , allloss: 4.1566, dt: 1286.92ms, fracRes: 0.6015, norm(attn): 0.1553, norm(output): 0.2490, norm(x): 0.6602, norm(y): 1.0008, norm:1.0851, tok/sec: 101849.20, flops:89.19, batch-reuse:1
@ 8940 train 4.0696 , allloss: 4.0837, dt: 1278.40ms, fracRes: 0.6016, norm(attn): 0.1553, norm(output): 0.2471, norm(x): 0.6594, norm(y): 1.0008, norm:1.0086, tok/sec: 102527.95, flops:89.78, batch-reuse:1
@ 8941 train 4.0437 , allloss: 4.0575, dt: 1256.59ms, fracRes: 0.6021, norm(attn): 0.1553, norm(output): 0.2471, norm(x): 0.6607, norm(y): 1.0009, norm:1.2054, tok/sec: 104308.00, flops:91.34, batch-reuse:1
@ 8942 train 4.1727 , allloss: 4.1865, dt: 1292.38ms, fracRes: 0.6027, norm(attn): 0.1533, norm(output): 0.2461, norm(x): 0.6600, norm(y): 1.0010, norm:0.9998, tok/sec: 101418.95, flops:88.81, batch-reuse:1
@ 8943 train 4.0793 , allloss: 4.0934, dt: 1266.32ms, fracRes: 0.6018, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6617, norm(y): 1.0008, norm:0.9552, tok/sec: 103505.93, flops:90.64, batch-reuse:1
@ 8944 train 4.1597 , allloss: 4.1735, dt: 1296.56ms, fracRes: 0.6021, norm(attn): 0.1543, norm(output): 0.2471, norm(x): 0.6589, norm(y): 1.0009, norm:1.1543, tok/sec: 101091.86, flops:88.52, batch-reuse:1
@ 8945 train 3.9167 , allloss: 3.9310, dt: 1312.16ms, fracRes: 0.6019, norm(attn): 0.1553, norm(output): 0.2471, norm(x): 0.6606, norm(y): 1.0009, norm:1.2713, tok/sec: 99890.26, flops:87.47, batch-reuse:1
@ 8946 train 4.2938 , allloss: 4.3082, dt: 1243.65ms, fracRes: 0.5996, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6576, norm(y): 1.0006, norm:1.5853, tok/sec: 105393.00, flops:92.29, batch-reuse:1
@ 8947 train 4.1477 , allloss: 4.1623, dt: 1266.49ms, fracRes: 0.6008, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6577, norm(y): 1.0008, norm:1.7042, tok/sec: 103492.45, flops:90.63, batch-reuse:1
@ 8948 train 4.1102 , allloss: 4.1247, dt: 1265.81ms, fracRes: 0.6012, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6602, norm(y): 1.0009, norm:1.1060, tok/sec: 103548.33, flops:90.68, batch-reuse:1
@ 8949 train 4.0933 , allloss: 4.1073, dt: 1270.24ms, fracRes: 0.6006, norm(attn): 0.1533, norm(output): 0.2471, norm(x): 0.6597, norm(y): 1.0008, norm:1.2840, tok/sec: 103186.66, flops:90.36, batch-reuse:1
@ 8950 train 4.1674 , allloss: 4.1810, dt: 1254.50ms, fracRes: 0.6005, norm(attn): 0.1543, norm(output): 0.2471, norm(x): 0.6577, norm(y): 1.0006, norm:1.1798, tok/sec: 104481.43, flops:91.49, batch-reuse:1
@ 8951 train 4.2410 , allloss: 4.2547, dt: 1255.44ms, fracRes: 0.6009, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6578, norm(y): 1.0007, norm:1.1899, tok/sec: 104403.61, flops:91.42, batch-reuse:1
@ 8952 train 4.1237 , allloss: 4.1376, dt: 1271.78ms, fracRes: 0.6007, norm(attn): 0.1553, norm(output): 0.2490, norm(x): 0.6590, norm(y): 1.0008, norm:1.1391, tok/sec: 103061.98, flops:90.25, batch-reuse:1
@ 8953 train 3.9244 , allloss: 3.9390, dt: 1259.94ms, fracRes: 0.6016, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6622, norm(y): 1.0011, norm:1.0132, tok/sec: 104030.10, flops:91.10, batch-reuse:1
@ 8954 train 4.1994 , allloss: 4.2142, dt: 1248.84ms, fracRes: 0.6019, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6648, norm(y): 1.0007, norm:1.0765, tok/sec: 104954.93, flops:91.91, batch-reuse:1
@ 8955 train 4.0863 , allloss: 4.1003, dt: 1285.87ms, fracRes: 0.6026, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6659, norm(y): 1.0008, norm:0.9382, tok/sec: 101932.76, flops:89.26, batch-reuse:1
@ 8956 train 4.1119 , allloss: 4.1256, dt: 1300.51ms, fracRes: 0.6019, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6631, norm(y): 1.0007, norm:0.9880, tok/sec: 100785.41, flops:88.26, batch-reuse:1
@ 8957 train 4.1338 , allloss: 4.1474, dt: 1287.39ms, fracRes: 0.6014, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6615, norm(y): 1.0007, norm:0.9510, tok/sec: 101811.89, flops:89.16, batch-reuse:1
@ 8958 train 4.1447 , allloss: 4.1593, dt: 1301.49ms, fracRes: 0.6015, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6640, norm(y): 1.0006, norm:0.9364, tok/sec: 100709.55, flops:88.19, batch-reuse:1
@ 8959 train 4.1526 , allloss: 4.1662, dt: 1294.68ms, fracRes: 0.6011, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6608, norm(y): 1.0006, norm:0.9211, tok/sec: 101238.98, flops:88.65, batch-reuse:1
@ 8960 train 4.1251 , allloss: 4.1397, dt: 1260.70ms, fracRes: 0.6024, norm(attn): 0.1543, norm(output): 0.2490, norm(x): 0.6659, norm(y): 1.0008, norm:0.9999, tok/sec: 103967.56, flops:91.04, batch-reuse:1
@ 8961 train 4.1046 , allloss: 4.1183, dt: 1265.30ms, fracRes: 0.6012, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6627, norm(y): 1.0008, norm:1.0238, tok/sec: 103589.78, flops:90.71, batch-reuse:1
@ 8962 train 4.1670 , allloss: 4.1808, dt: 1271.54ms, fracRes: 0.6013, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6627, norm(y): 1.0008, norm:0.9953, tok/sec: 103081.15, flops:90.27, batch-reuse:1
@ 8963 train 4.1760 , allloss: 4.1899, dt: 1284.93ms, fracRes: 0.6022, norm(attn): 0.1533, norm(output): 0.2471, norm(x): 0.6603, norm(y): 1.0008, norm:1.0157, tok/sec: 102006.87, flops:89.33, batch-reuse:1
@ 8964 train 4.1814 , allloss: 4.1949, dt: 1274.87ms, fracRes: 0.6016, norm(attn): 0.1553, norm(output): 0.2490, norm(x): 0.6611, norm(y): 1.0005, norm:0.9632, tok/sec: 102811.98, flops:90.03, batch-reuse:1
@ 8965 train 4.1733 , allloss: 4.1870, dt: 1270.53ms, fracRes: 0.6029, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6635, norm(y): 1.0008, norm:1.0055, tok/sec: 103162.86, flops:90.34, batch-reuse:1
@ 8966 train 4.1031 , allloss: 4.1163, dt: 1278.06ms, fracRes: 0.6013, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6616, norm(y): 1.0006, norm:1.3412, tok/sec: 102555.13, flops:89.81, batch-reuse:1
@ 8967 train 4.1235 , allloss: 4.1375, dt: 1269.64ms, fracRes: 0.6016, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6632, norm(y): 1.0007, norm:1.0799, tok/sec: 103235.33, flops:90.40, batch-reuse:1
@ 8968 train 4.0855 , allloss: 4.0999, dt: 1272.18ms, fracRes: 0.6014, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6609, norm(y): 1.0006, norm:1.0692, tok/sec: 103029.42, flops:90.22, batch-reuse:1
@ 8969 train 4.1081 , allloss: 4.1228, dt: 1278.11ms, fracRes: 0.6014, norm(attn): 0.1553, norm(output): 0.2490, norm(x): 0.6598, norm(y): 1.0006, norm:1.2062, tok/sec: 102551.08, flops:89.80, batch-reuse:1
@ 8970 train 4.0532 , allloss: 4.0670, dt: 1269.90ms, fracRes: 0.6012, norm(attn): 0.1553, norm(output): 0.2471, norm(x): 0.6599, norm(y): 1.0007, norm:1.0369, tok/sec: 103214.61, flops:90.38, batch-reuse:1
@ 8971 train 4.0887 , allloss: 4.1028, dt: 1272.95ms, fracRes: 0.6017, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6593, norm(y): 1.0008, norm:0.9842, tok/sec: 102967.11, flops:90.17, batch-reuse:1
@ 8972 train 4.0953 , allloss: 4.1093, dt: 1262.02ms, fracRes: 0.6016, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6595, norm(y): 1.0007, norm:1.1137, tok/sec: 103859.08, flops:90.95, batch-reuse:1
@ 8973 train 4.1009 , allloss: 4.1147, dt: 1287.16ms, fracRes: 0.6019, norm(attn): 0.1553, norm(output): 0.2490, norm(x): 0.6579, norm(y): 1.0006, norm:0.9213, tok/sec: 101830.68, flops:89.17, batch-reuse:1
@ 8974 train 4.0951 , allloss: 4.1087, dt: 1271.21ms, fracRes: 0.6014, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6572, norm(y): 1.0006, norm:1.1821, tok/sec: 103108.03, flops:90.29, batch-reuse:1
@ 8975 train 4.0828 , allloss: 4.0968, dt: 1295.29ms, fracRes: 0.6007, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6566, norm(y): 1.0005, norm:1.1785, tok/sec: 101191.57, flops:88.61, batch-reuse:1
@ 8976 train 4.1596 , allloss: 4.1740, dt: 1289.54ms, fracRes: 0.6010, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6560, norm(y): 1.0007, norm:0.9101, tok/sec: 101642.07, flops:89.01, batch-reuse:1
@ 8977 train 4.1687 , allloss: 4.1829, dt: 1273.22ms, fracRes: 0.5998, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6558, norm(y): 1.0006, norm:1.2207, tok/sec: 102945.46, flops:90.15, batch-reuse:1
@ 8978 train 4.1327 , allloss: 4.1465, dt: 1292.57ms, fracRes: 0.6004, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6563, norm(y): 1.0006, norm:0.9900, tok/sec: 101403.87, flops:88.80, batch-reuse:1
@ 8979 train 4.0745 , allloss: 4.0882, dt: 1261.90ms, fracRes: 0.6019, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6594, norm(y): 1.0007, norm:0.9908, tok/sec: 103869.11, flops:90.96, batch-reuse:1
@ 8980 train 4.0581 , allloss: 4.0717, dt: 1282.66ms, fracRes: 0.6018, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6567, norm(y): 1.0007, norm:1.0775, tok/sec: 102187.77, flops:89.48, batch-reuse:1
@ 8981 train 4.0592 , allloss: 4.0725, dt: 1271.21ms, fracRes: 0.6014, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6587, norm(y): 1.0006, norm:0.8785, tok/sec: 103108.09, flops:90.29, batch-reuse:1
@ 8982 train 4.0532 , allloss: 4.0663, dt: 1296.14ms, fracRes: 0.6008, norm(attn): 0.1562, norm(output): 0.2471, norm(x): 0.6558, norm(y): 1.0006, norm:0.9303, tok/sec: 101124.57, flops:88.55, batch-reuse:1
@ 8983 train 4.0089 , allloss: 4.0228, dt: 1299.82ms, fracRes: 0.6004, norm(attn): 0.1553, norm(output): 0.2471, norm(x): 0.6569, norm(y): 1.0008, norm:0.9874, tok/sec: 100838.73, flops:88.30, batch-reuse:1
@ 8984 train 4.1158 , allloss: 4.1300, dt: 1286.41ms, fracRes: 0.6007, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6567, norm(y): 1.0006, norm:0.8744, tok/sec: 101889.39, flops:89.22, batch-reuse:1
@ 8985 train 4.0896 , allloss: 4.1040, dt: 1276.96ms, fracRes: 0.6005, norm(attn): 0.1562, norm(output): 0.2500, norm(x): 0.6583, norm(y): 1.0005, norm:0.9676, tok/sec: 102644.04, flops:89.88, batch-reuse:1
@ 8986 train 4.1349 , allloss: 4.1492, dt: 1297.07ms, fracRes: 0.6015, norm(attn): 0.1553, norm(output): 0.2471, norm(x): 0.6542, norm(y): 1.0006, norm:1.0841, tok/sec: 101052.20, flops:88.49, batch-reuse:1
@ 8987 train 4.0796 , allloss: 4.0934, dt: 1251.77ms, fracRes: 0.6018, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6559, norm(y): 1.0007, norm:1.0368, tok/sec: 104708.95, flops:91.69, batch-reuse:1
@ 8988 train 4.0813 , allloss: 4.0954, dt: 1269.76ms, fracRes: 0.6022, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6584, norm(y): 1.0008, norm:0.9166, tok/sec: 103225.95, flops:90.39, batch-reuse:1
@ 8989 train 4.1191 , allloss: 4.1329, dt: 1288.57ms, fracRes: 0.6021, norm(attn): 0.1553, norm(output): 0.2461, norm(x): 0.6563, norm(y): 1.0007, norm:1.1570, tok/sec: 101718.76, flops:89.07, batch-reuse:1
@ 8990 train 4.0761 , allloss: 4.0898, dt: 1285.06ms, fracRes: 0.6018, norm(attn): 0.1553, norm(output): 0.2471, norm(x): 0.6554, norm(y): 1.0008, norm:0.9062, tok/sec: 101997.10, flops:89.32, batch-reuse:1
@ 8991 train 4.0966 , allloss: 4.1109, dt: 1270.88ms, fracRes: 0.6021, norm(attn): 0.1543, norm(output): 0.2461, norm(x): 0.6549, norm(y): 1.0007, norm:1.1305, tok/sec: 103135.01, flops:90.31, batch-reuse:1
@ 8992 train 4.1616 , allloss: 4.1758, dt: 1269.38ms, fracRes: 0.6015, norm(attn): 0.1553, norm(output): 0.2471, norm(x): 0.6562, norm(y): 1.0006, norm:1.0005, tok/sec: 103256.35, flops:90.42, batch-reuse:1
@ 8993 train 4.0488 , allloss: 4.0625, dt: 1283.76ms, fracRes: 0.6014, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6560, norm(y): 1.0008, norm:1.0581, tok/sec: 102099.77, flops:89.41, batch-reuse:1
@ 8994 train 4.0950 , allloss: 4.1086, dt: 1266.22ms, fracRes: 0.6009, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6562, norm(y): 1.0006, norm:0.9720, tok/sec: 103514.70, flops:90.65, batch-reuse:1
@ 8995 train 3.9932 , allloss: 4.0069, dt: 1295.60ms, fracRes: 0.6009, norm(attn): 0.1562, norm(output): 0.2471, norm(x): 0.6554, norm(y): 1.0009, norm:0.9586, tok/sec: 101166.64, flops:88.59, batch-reuse:1
@ 8996 train 4.1742 , allloss: 4.1881, dt: 1291.72ms, fracRes: 0.6007, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6555, norm(y): 1.0007, norm:1.1425, tok/sec: 101470.97, flops:88.86, batch-reuse:1
@ 8997 train 4.0895 , allloss: 4.1033, dt: 1308.95ms, fracRes: 0.5999, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6533, norm(y): 1.0005, norm:1.0250, tok/sec: 100135.35, flops:87.69, batch-reuse:1
@ 8998 train 4.1859 , allloss: 4.1998, dt: 1304.40ms, fracRes: 0.6014, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6585, norm(y): 1.0005, norm:1.1142, tok/sec: 100484.42, flops:87.99, batch-reuse:1
@ 8999 train 4.0566 , allloss: 4.0706, dt: 1261.79ms, fracRes: 0.6011, norm(attn): 0.1553, norm(output): 0.2461, norm(x): 0.6577, norm(y): 1.0007, norm:1.1273, tok/sec: 103878.19, flops:90.96, batch-reuse:1
@ 9000 train 4.0668 , allloss: 4.0811, dt: 1279.66ms, fracRes: 0.6007, norm(attn): 0.1533, norm(output): 0.2480, norm(x): 0.6528, norm(y): 1.0006, norm:1.0027, tok/sec: 102427.19, flops:89.69, batch-reuse:1
@ 9001 train 4.1011 , allloss: 4.1155, dt: 1287.70ms, fracRes: 0.6002, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6547, norm(y): 1.0005, norm:1.0162, tok/sec: 101787.61, flops:89.13, batch-reuse:1
@ 9002 train 4.0686 , allloss: 4.0831, dt: 1298.77ms, fracRes: 0.6007, norm(attn): 0.1553, norm(output): 0.2471, norm(x): 0.6543, norm(y): 1.0006, norm:0.9900, tok/sec: 100920.40, flops:88.37, batch-reuse:1
@ 9003 train 4.0506 , allloss: 4.0647, dt: 1298.37ms, fracRes: 0.6011, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6561, norm(y): 1.0007, norm:0.9783, tok/sec: 100951.52, flops:88.40, batch-reuse:1
@ 9004 train 4.1688 , allloss: 4.1827, dt: 1262.39ms, fracRes: 0.6012, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6581, norm(y): 1.0003, norm:1.0359, tok/sec: 103828.75, flops:90.92, batch-reuse:1
@ 9005 train 4.0482 , allloss: 4.0624, dt: 1268.41ms, fracRes: 0.6011, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6546, norm(y): 1.0006, norm:0.9965, tok/sec: 103335.29, flops:90.49, batch-reuse:1
@ 9006 train 4.1167 , allloss: 4.1315, dt: 1267.29ms, fracRes: 0.6011, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6560, norm(y): 1.0005, norm:1.0059, tok/sec: 103427.24, flops:90.57, batch-reuse:1
@ 9007 train 4.1132 , allloss: 4.1271, dt: 1270.49ms, fracRes: 0.6008, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6545, norm(y): 1.0005, norm:0.9664, tok/sec: 103166.56, flops:90.34, batch-reuse:1
@ 9008 train 3.9879 , allloss: 4.0018, dt: 1275.91ms, fracRes: 0.6017, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6567, norm(y): 1.0005, norm:1.0076, tok/sec: 102728.49, flops:89.96, batch-reuse:1
@ 9009 train 4.1600 , allloss: 4.1736, dt: 1261.26ms, fracRes: 0.6015, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6541, norm(y): 1.0007, norm:1.0929, tok/sec: 103921.51, flops:91.00, batch-reuse:1
@ 9010 train 4.0727 , allloss: 4.0866, dt: 1253.15ms, fracRes: 0.6007, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6553, norm(y): 1.0005, norm:0.9601, tok/sec: 104593.83, flops:91.59, batch-reuse:1
@ 9011 train 3.8405 , allloss: 3.8540, dt: 1283.10ms, fracRes: 0.5979, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6610, norm(y): 1.0005, norm:1.4941, tok/sec: 102152.53, flops:89.45, batch-reuse:1
@ 9012 train 4.0217 , allloss: 4.0354, dt: 1268.19ms, fracRes: 0.6012, norm(attn): 0.1562, norm(output): 0.2471, norm(x): 0.6555, norm(y): 1.0007, norm:1.2805, tok/sec: 103353.94, flops:90.51, batch-reuse:1
@ 9013 train 4.1581 , allloss: 4.1723, dt: 1287.38ms, fracRes: 0.6012, norm(attn): 0.1553, norm(output): 0.2471, norm(x): 0.6539, norm(y): 1.0005, norm:1.1015, tok/sec: 101813.27, flops:89.16, batch-reuse:1
@ 9014 train 4.1484 , allloss: 4.1639, dt: 1272.68ms, fracRes: 0.6013, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6559, norm(y): 1.0004, norm:1.2980, tok/sec: 102989.02, flops:90.19, batch-reuse:1
@ 9015 train 4.1301 , allloss: 4.1439, dt: 1288.26ms, fracRes: 0.6008, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6578, norm(y): 1.0005, norm:1.0727, tok/sec: 101743.12, flops:89.09, batch-reuse:1
@ 9016 train 4.0670 , allloss: 4.0809, dt: 1253.19ms, fracRes: 0.6009, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6590, norm(y): 1.0006, norm:1.0533, tok/sec: 104590.68, flops:91.59, batch-reuse:1
@ 9017 train 4.2078 , allloss: 4.2220, dt: 1244.51ms, fracRes: 0.6018, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6612, norm(y): 1.0004, norm:1.1901, tok/sec: 105320.13, flops:92.23, batch-reuse:1
@ 9018 train 3.9887 , allloss: 4.0036, dt: 1272.91ms, fracRes: 0.6016, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6585, norm(y): 1.0006, norm:1.2717, tok/sec: 102970.60, flops:90.17, batch-reuse:1
@ 9019 train 4.0225 , allloss: 4.0365, dt: 1292.77ms, fracRes: 0.6011, norm(attn): 0.1553, norm(output): 0.2471, norm(x): 0.6567, norm(y): 1.0007, norm:1.1117, tok/sec: 101388.63, flops:88.78, batch-reuse:1
@ 9020 train 3.9849 , allloss: 3.9991, dt: 1278.02ms, fracRes: 0.6004, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6611, norm(y): 1.0007, norm:1.0078, tok/sec: 102558.96, flops:89.81, batch-reuse:1
@ 9021 train 3.9993 , allloss: 4.0131, dt: 1273.32ms, fracRes: 0.6008, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6608, norm(y): 1.0008, norm:0.9938, tok/sec: 102936.98, flops:90.14, batch-reuse:1
@ 9022 train 4.0130 , allloss: 4.0275, dt: 1271.06ms, fracRes: 0.6007, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6607, norm(y): 1.0006, norm:1.0555, tok/sec: 103120.39, flops:90.30, batch-reuse:1
@ 9023 train 4.0032 , allloss: 4.0175, dt: 1296.97ms, fracRes: 0.5997, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6603, norm(y): 1.0005, norm:1.0975, tok/sec: 101060.26, flops:88.50, batch-reuse:1
@ 9024 train 4.0304 , allloss: 4.0444, dt: 1267.71ms, fracRes: 0.6003, norm(attn): 0.1553, norm(output): 0.2490, norm(x): 0.6596, norm(y): 1.0006, norm:1.0564, tok/sec: 103392.87, flops:90.54, batch-reuse:1
@ 9025 train 4.0622 , allloss: 4.0755, dt: 1309.22ms, fracRes: 0.6002, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6585, norm(y): 1.0006, norm:0.9737, tok/sec: 100114.75, flops:87.67, batch-reuse:1
@ 9026 train 3.9584 , allloss: 3.9719, dt: 1245.83ms, fracRes: 0.6009, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6602, norm(y): 1.0005, norm:0.8874, tok/sec: 105208.27, flops:92.13, batch-reuse:1
@ 9027 train 3.9171 , allloss: 3.9316, dt: 1270.02ms, fracRes: 0.6017, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6648, norm(y): 1.0006, norm:0.9856, tok/sec: 103204.52, flops:90.37, batch-reuse:1
@ 9028 train 4.1361 , allloss: 4.1498, dt: 1269.74ms, fracRes: 0.6015, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6589, norm(y): 1.0004, norm:0.9730, tok/sec: 103227.77, flops:90.40, batch-reuse:1
@ 9029 train 4.2084 , allloss: 4.2221, dt: 1276.81ms, fracRes: 0.6016, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6582, norm(y): 1.0006, norm:1.0916, tok/sec: 102655.79, flops:89.89, batch-reuse:1
@ 9030 train 3.9621 , allloss: 3.9762, dt: 1253.19ms, fracRes: 0.6017, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6592, norm(y): 1.0007, norm:0.9932, tok/sec: 104590.82, flops:91.59, batch-reuse:1
@ 9031 train 4.1673 , allloss: 4.1813, dt: 1280.49ms, fracRes: 0.6026, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6586, norm(y): 1.0004, norm:1.0240, tok/sec: 102360.95, flops:89.64, batch-reuse:1
@ 9032 train 4.0221 , allloss: 4.0358, dt: 1293.61ms, fracRes: 0.6031, norm(attn): 0.1543, norm(output): 0.2480, norm(x): 0.6591, norm(y): 1.0006, norm:0.9145, tok/sec: 101322.97, flops:88.73, batch-reuse:1
@ 9033 train 3.9762 , allloss: 3.9901, dt: 1264.72ms, fracRes: 0.6024, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6588, norm(y): 1.0004, norm:0.8716, tok/sec: 103637.56, flops:90.75, batch-reuse:1
@ 9034 train 4.0350 , allloss: 4.0493, dt: 1278.75ms, fracRes: 0.6019, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6593, norm(y): 1.0006, norm:1.0222, tok/sec: 102499.83, flops:89.76, batch-reuse:1
@ 9035 train 4.0140 , allloss: 4.0277, dt: 1251.76ms, fracRes: 0.6018, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6583, norm(y): 1.0006, norm:0.8353, tok/sec: 104709.95, flops:91.69, batch-reuse:1
@ 9036 train 3.9913 , allloss: 4.0048, dt: 1265.56ms, fracRes: 0.6022, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6575, norm(y): 1.0007, norm:0.9202, tok/sec: 103568.00, flops:90.69, batch-reuse:1
@ 9037 train 3.9655 , allloss: 3.9790, dt: 1269.45ms, fracRes: 0.6023, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6587, norm(y): 1.0007, norm:0.8263, tok/sec: 103251.35, flops:90.42, batch-reuse:1
@ 9038 train 3.9958 , allloss: 4.0094, dt: 1275.78ms, fracRes: 0.6017, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6565, norm(y): 1.0007, norm:0.9467, tok/sec: 102739.08, flops:89.97, batch-reuse:1
@ 9039 train 4.0102 , allloss: 4.0239, dt: 1266.51ms, fracRes: 0.6020, norm(attn): 0.1553, norm(output): 0.2471, norm(x): 0.6559, norm(y): 1.0005, norm:0.8746, tok/sec: 103490.48, flops:90.63, batch-reuse:1
@ 9040 train 4.0387 , allloss: 4.0538, dt: 1283.32ms, fracRes: 0.5963, norm(attn): 0.1670, norm(output): 0.2578, norm(x): 0.6500, norm(y): 0.9999, norm:2.0317, tok/sec: 102135.36, flops:89.44, batch-reuse:1
@ 9041 train 4.0461 , allloss: 4.0602, dt: 1255.40ms, fracRes: 0.6021, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6545, norm(y): 1.0003, norm:1.3277, tok/sec: 104406.83, flops:91.43, batch-reuse:1
@ 9042 train 4.0225 , allloss: 4.0359, dt: 1258.90ms, fracRes: 0.6020, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6586, norm(y): 1.0005, norm:1.0634, tok/sec: 104116.40, flops:91.17, batch-reuse:1
@ 9043 train 4.0463 , allloss: 4.0604, dt: 1276.57ms, fracRes: 0.6020, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6616, norm(y): 1.0006, norm:1.0600, tok/sec: 102675.30, flops:89.91, batch-reuse:1
@ 9044 train 4.2020 , allloss: 4.2157, dt: 1264.82ms, fracRes: 0.6013, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6654, norm(y): 1.0002, norm:1.1298, tok/sec: 103628.67, flops:90.75, batch-reuse:1
@ 9045 train 4.1341 , allloss: 4.1474, dt: 1290.87ms, fracRes: 0.6016, norm(attn): 0.1553, norm(output): 0.2490, norm(x): 0.6638, norm(y): 1.0003, norm:1.0414, tok/sec: 101537.52, flops:88.91, batch-reuse:1
@ 9046 train 4.0902 , allloss: 4.1040, dt: 1297.27ms, fracRes: 0.6019, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6656, norm(y): 1.0004, norm:1.0025, tok/sec: 101036.90, flops:88.48, batch-reuse:1
@ 9047 train 3.9720 , allloss: 3.9863, dt: 1251.64ms, fracRes: 0.6015, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6677, norm(y): 1.0005, norm:0.9637, tok/sec: 104720.46, flops:91.70, batch-reuse:1
@ 9048 train 3.9795 , allloss: 3.9941, dt: 1261.87ms, fracRes: 0.6015, norm(attn): 0.1543, norm(output): 0.2480, norm(x): 0.6652, norm(y): 1.0004, norm:1.0390, tok/sec: 103871.56, flops:90.96, batch-reuse:1
@ 9049 train 4.0613 , allloss: 4.0748, dt: 1276.41ms, fracRes: 0.6014, norm(attn): 0.1553, norm(output): 0.2490, norm(x): 0.6626, norm(y): 1.0005, norm:1.0582, tok/sec: 102687.98, flops:89.92, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7969, 0.2031, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8086, 0.0479, 0.1426, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8320, 0.0496, 0.1050, 0.0115, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7422, 0.0381, 0.0613, 0.0442, 0.1138, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8164, 0.0796, 0.0503, 0.0128, 0.0216, 0.0204, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4492, 0.0413, 0.0337, 0.0615, 0.2051, 0.0801, 0.1279, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3652, 0.0967, 0.2012, 0.0122, 0.0801, 0.0544, 0.0486, 0.1416, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7539, 0.0522, 0.0442, 0.0049, 0.0227, 0.0075, 0.0605, 0.0203, 0.0327, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3789, 0.0569, 0.1846, 0.0075, 0.0267, 0.0177, 0.0413, 0.1260, 0.0283, 0.1309, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4141, 0.0635, 0.0913, 0.0209, 0.0427, 0.0115, 0.0356, 0.0439, 0.0564, 0.0615, 0.1582, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0791, 0.0259, 0.0347, 0.1377, 0.1001, 0.0240, 0.0327, 0.1025, 0.1865, 0.1245, 0.1187, 0.0332, 0.0000, 0.0000, 0.0000],
        [0.0574, 0.0444, 0.0791, 0.0464, 0.0476, 0.0505, 0.0549, 0.1074, 0.0415, 0.1816, 0.0718, 0.1245, 0.0923, 0.0000, 0.0000],
        [0.5469, 0.0610, 0.0454, 0.0039, 0.0228, 0.0086, 0.0581, 0.0171, 0.0334, 0.0117, 0.0471, 0.0238, 0.0884, 0.0311, 0.0000],
        [0.1348, 0.0713, 0.1045, 0.0640, 0.0270, 0.0046, 0.0102, 0.1572, 0.0164, 0.0825, 0.0293, 0.0771, 0.1387, 0.0216, 0.0625]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0032, -0.0041, -0.0049,  ..., -0.0361,  0.0158,  0.0036],
        [-0.0468,  0.0007, -0.0009,  ...,  0.0045,  0.0055,  0.0052],
        [ 0.0301,  0.0368, -0.0047,  ..., -0.0221,  0.0213, -0.0023],
        ...,
        [ 0.0321,  0.0194,  0.0077,  ..., -0.0375,  0.0125,  0.0184],
        [-0.0488,  0.0046, -0.0297,  ...,  0.0104, -0.0026, -0.0142],
        [-0.0231,  0.0044, -0.0159,  ...,  0.0121, -0.0317, -0.0047]], device='cuda:0', requires_grad=True)
K: tensor([     1.4844,      0.5391,      0.3926,      0.6484,      0.7891,     -0.3340,     -0.0559,     -0.8477,     -0.7148,     -0.2041,     -0.1934,     -0.4902,     -0.0007,     -0.9297,     -0.1494,     -0.5898,      0.1807,      0.2207,     -1.4219,      0.5898,      1.3125,      0.8906,
            -0.8594,      0.7734,     -0.4297,     -0.4277,     -0.8867,      0.3086,      0.4336,     -0.1147,      1.6094,      0.1504,      1.1406,      0.3867,      0.1846,      1.7734,     -1.8438,      0.3711,     -0.3203,     -2.4219,      0.5117,      0.5820,      0.2695,      1.4609,
             0.0052,      0.1904,     -0.1216,      0.5859,      1.0469,     -0.6680,      0.1660,      0.5195,     -1.8047,      0.0840,      1.7266,     -0.5078,     -0.7617,      0.4023,      0.6289,     -0.2852,      0.7070,     -0.6211,     -0.0684,      0.0295], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[-0.0349,  0.0025, -0.0102,  ...,  0.0086, -0.0047, -0.0165],
        [ 0.0303, -0.0184,  0.0139,  ...,  0.0044,  0.0433,  0.0090],
        [-0.0577,  0.0421,  0.0056,  ..., -0.0182, -0.0362, -0.0447],
        ...,
        [ 0.0064,  0.0040,  0.0312,  ...,  0.0199,  0.0158,  0.0216],
        [ 0.0190, -0.0101,  0.0276,  ...,  0.0304,  0.0060,  0.0063],
        [ 0.0243, -0.0082,  0.0332,  ..., -0.0206,  0.0223,  0.0051]], device='cuda:0', requires_grad=True)
Q: tensor([    -0.0342,     -0.0562,     -1.1875,     -0.6133,      0.0135,     -0.2178,     -2.5000,     -0.5625,      0.3281,      0.8398,     -1.1250,     -0.3418,     -0.1177,     -0.6562,     -0.3730,     -0.0076,      0.3535,     -0.5625,      0.5156,      0.6211,     -0.1787,      0.2461,
             1.0938,      0.3809,      0.8320,     -0.0442,     -1.0547,     -1.9922,     -0.0019,      0.1768,      0.5156,      0.3887,     -0.2480,     -1.1328,     -0.0042,     -0.3867,      0.8945,      0.8008,     -0.2080,      1.2500,      1.8594,      0.5312,      0.5312,      0.3418,
            -0.5547,      1.1172,     -1.3906,      0.4375,     -0.3008,      0.4453,     -1.6562,     -0.6328,     -0.0270,     -1.3750,     -0.4316,     -0.3750,      0.3926,     -1.2422,      0.2129,     -0.2227,     -0.9570,     -0.0145,      0.4785,      1.3750], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -1.3672, -0.9688, -3.0000, -3.6875, -3.3281, -1.6172, -0.8242, -3.7656, -2.6719, -3.0625, -1.9219,  0.3047, -3.6406, -2.3594],
        [ 0.0000, -2.8281, -1.7344, -2.9688, -1.9844, -3.7656, -3.3438, -1.5156, -1.7969, -1.6562, -0.6016, -1.1641, -0.7500, -1.4375, -1.3125],
        [ 0.0000, -2.8281, -2.0781, -4.2812, -2.1094, -3.5156, -3.2188, -2.9219, -2.2188, -2.9531, -0.2432, -1.6484, -2.1875, -2.1719, -1.6797],
        [ 0.0000, -2.9688, -2.5000, -2.8281, -1.8750, -4.0625, -3.0625, -2.7344, -1.4062, -2.0312, -0.8398, -1.8984, -1.8203, -0.9023, -1.3672],
        [ 0.0000, -2.3281, -2.7812, -4.1562, -3.6250, -3.6875, -1.4453, -2.7812, -2.7500, -4.1562, -2.9219, -3.3281, -1.9688, -2.3750, -2.8125],
        [ 0.0000, -2.3906, -2.5938, -1.9922, -0.7852, -1.7266, -1.2578, -2.2500,  0.4258, -0.8828,  0.8711, -1.1016, -2.2812,  0.7461, -0.5430],
        [ 0.0000, -1.3359, -0.5977, -3.4062, -1.5234, -1.9062, -2.0156, -0.9531, -1.7031, -0.3770, -0.1270, -0.3809,  0.0938, -2.0938, -0.5234],
        [ 0.0000, -2.6719, -2.8438, -5.0312, -3.5000, -4.6250, -2.5156, -3.6094, -3.1406, -4.0312, -2.5312, -3.3125, -1.9375, -3.2031, -2.8906],
        [ 0.0000, -1.8984, -0.7188, -3.9219, -2.6562, -3.0625, -2.2188, -1.1016, -2.5938, -1.0625, -1.1016, -0.8008,  0.2871, -2.7812, -0.9336],
        [ 0.0000, -1.8672, -1.5078, -2.9844, -2.2656, -3.5781, -2.4531, -2.2500, -1.9922, -1.9062, -0.9570, -1.2344, -1.4141, -1.8125, -1.2109],
        [ 0.0000, -1.1172, -0.8242,  0.5547,  0.2344, -1.1953, -0.8828,  0.2559,  0.8555,  0.4512,  0.4043, -0.8750, -0.5078,  1.1484,  0.6016],
        [ 0.0000, -0.2539,  0.3242, -0.2100, -0.1865, -0.1250, -0.0408,  0.6289, -0.3223,  1.1562,  0.2275,  0.7773,  0.4785, -0.1768,  0.6133],
        [ 0.0000, -2.1875, -2.4844, -4.9375, -3.1719, -4.1562, -2.2500, -3.4688, -2.7969, -3.8438, -2.4531, -3.1406, -1.8281, -2.8750, -2.8281],
        [ 0.0000, -0.6367, -0.2520, -0.7422, -1.6016, -3.3594, -2.5781,  0.1562, -2.1094, -0.4902, -1.5234, -0.5586,  0.0291, -1.8281, -0.7656]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8577],
        [0.8779],
        [0.8410],
        [0.6389],
        [0.7231],
        [0.6182],
        [0.5589],
        [0.5557],
        [0.5881],
        [0.3528],
        [0.2151],
        [0.1766],
        [0.3243],
        [0.2201]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8398,     0.1602,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6406,     0.3066,     0.0537,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2178,     0.5508,     0.1748,     0.0583,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1973,     0.2109,     0.0610,     0.0996,     0.4316,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2734,     0.2773,     0.0256,     0.0239,     0.1299,     0.2715,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0527,     0.1943,     0.0131,     0.0190,     0.0884,     0.4668,     0.1641,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0835,     0.0659,     0.0189,     0.0096,     0.0415,     0.3438,     0.3926,     0.0437,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0698,     0.0449,     0.0092,     0.0026,     0.0376,     0.1787,     0.5352,     0.0167,     0.1064,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0708,     0.0449,     0.0128,     0.0126,     0.0186,     0.1094,     0.0718,     0.1611,     0.4453,     0.0513,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0444,     0.0292,     0.0022,     0.0024,     0.0289,     0.1377,     0.1865,     0.0045,     0.2041,     0.0175,     0.3438,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0500,     0.0308,     0.0311,     0.0115,     0.0236,     0.1299,     0.3477,     0.0801,     0.0320,     0.0845,     0.1621,     0.0175,     0.0000,     0.0000,     0.0000],
        [    0.0344,     0.0062,     0.0042,     0.0087,     0.0070,     0.1138,     0.1621,     0.0247,     0.1426,     0.0645,     0.2393,     0.0109,     0.1816,     0.0000,     0.0000],
        [    0.0757,     0.0151,     0.0030,     0.0011,     0.0086,     0.0679,     0.2676,     0.0054,     0.0361,     0.0098,     0.2236,     0.0085,     0.0608,     0.2178,     0.0000],
        [    0.0209,     0.0103,     0.0018,     0.0009,     0.0039,     0.0664,     0.0708,     0.0184,     0.0645,     0.0188,     0.0815,     0.0272,     0.1758,     0.4004,     0.0378]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0341, -0.0216, -0.0164,  ..., -0.0168, -0.0218,  0.0092],
        [-0.0231,  0.0187, -0.0191,  ...,  0.0136, -0.0018, -0.0563],
        [ 0.0241,  0.0188,  0.0144,  ...,  0.0130,  0.0293,  0.0218],
        ...,
        [ 0.0062, -0.0181,  0.0350,  ...,  0.0357, -0.0190, -0.0158],
        [-0.0197, -0.0112,  0.0158,  ...,  0.0119,  0.0240, -0.0050],
        [ 0.0318,  0.0412,  0.0104,  ..., -0.0073, -0.0129,  0.0237]], device='cuda:0', requires_grad=True)
K: tensor([ 3.0000, -0.7969, -2.1250, -1.4375, -2.0781, -0.8555, -0.5430, -0.0459, -0.1738,  0.4805,  0.7617,  1.7734, -1.9922,  1.1719,  0.5508, -3.5625,  1.1406, -1.0625,  0.7109,  2.0469, -1.0703,  1.6406,  1.7109, -3.2812,  0.7812, -1.4219, -2.7969,  0.5430,  1.7969, -0.4043,  3.3594,  1.7188,
        -1.4766, -0.3809, -2.8438,  0.1768,  0.5625,  2.1875, -1.0703,  1.0234,  2.6406, -0.0859, -0.5000,  2.8594,  1.3516,  0.4238, -1.8750, -2.7656,  1.5938,  0.6328, -2.5625,  2.8281, -0.8203,  0.1484, -0.0303,  0.8047,  1.6797,  0.7891, -1.6719,  1.8203,  0.3809,  1.8594,  3.6719, -0.8438],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0262, -0.0043, -0.0113,  ...,  0.0025,  0.0214, -0.0091],
        [ 0.0138,  0.0048, -0.0538,  ..., -0.0121, -0.0062, -0.0161],
        [ 0.0469,  0.0089,  0.0300,  ..., -0.0207,  0.0243,  0.0097],
        ...,
        [-0.0282, -0.0115,  0.0081,  ...,  0.0109, -0.0049, -0.0390],
        [ 0.0355,  0.0136, -0.0034,  ...,  0.0044, -0.0055, -0.0112],
        [ 0.0024, -0.0300, -0.0189,  ...,  0.0115, -0.0048,  0.0160]], device='cuda:0', requires_grad=True)
Q: tensor([-1.0234, -0.6719, -1.3750, -1.4297,  0.8750, -1.2422, -0.3516,  0.4766,  0.9297,  0.7070,  0.6914, -0.6211,  0.4707, -1.0078, -0.2266,  1.4375, -2.4375, -0.3828, -2.3281,  0.1621, -1.6172, -0.1562, -1.1406,  2.3281, -0.4941,  0.1895,  2.1719, -1.3672, -1.4453, -0.0825,  0.2930, -1.8984,
        -1.6172,  0.8945,  0.0305,  1.1250,  2.1094,  0.4316,  1.2656,  1.3984,  1.1328,  0.0089, -1.0312,  0.9062,  1.5781, -1.6641,  1.1250, -2.3281,  1.9766,  1.4297, -0.5078,  0.8750, -1.6328, -2.3594, -0.5430,  0.9961,  0.8789,  0.8867,  0.9023,  0.6758, -0.9102,  0.8477,  1.3672, -0.9609],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -1.6562,     -3.9844,     -6.1562,     -3.2031,     -3.0938,     -3.0469,     -6.6562,     -3.8906,     -5.9688,     -3.8438,     -6.0000,     -5.5625,     -3.4375,     -2.7656],
        [     0.0000,     -0.7344,     -2.4844,     -3.7344,     -2.6406,     -1.0156,     -0.5234,     -1.9844,     -1.8828,     -1.5156,     -1.4141,     -1.3828,     -0.8711,     -1.0000,     -0.7266],
        [     0.0000,      0.9258,     -0.2197,     -1.3125,     -0.3594,      0.6016,      0.5469,     -0.6484,     -0.2148,      0.2578,      0.4629,      0.0046,      1.1797,      1.1484,      2.4844],
        [     0.0000,      0.0698,     -1.1719,     -0.6797,      0.7852,      2.2656,      2.5469,      0.5742,      3.4375,      1.3750,      3.9531,      0.5859,      2.8125,      5.1562,      2.9219],
        [     0.0000,      0.0112,     -2.3594,     -2.4375,     -0.7422,     -0.0103,      0.6406,     -0.7773,      0.6445,      0.0141,      1.9844,      0.1797,      1.6328,      2.1719,      1.2109],
        [     0.0000,      1.3047,     -1.3906,     -1.0156,      0.5195,      2.1875,      1.1406,      0.2539,      3.3125,      0.0933,      2.2031,      0.1025,      2.8281,      4.9062,      2.2812],
        [     0.0000,     -0.2383,     -1.4844,     -2.1562,     -0.6992,      1.4141,      1.5469,     -0.6445,      1.5469,     -0.3281,      2.0938,     -1.0938,      1.7812,      3.4219,      1.5781],
        [     0.0000,     -0.4395,     -2.0312,     -3.2812,     -0.6172,      0.9414,      2.0312,     -1.4297,      0.4219,     -1.2344,      2.0312,     -0.9023,      0.6875,      2.1875,      1.8359],
        [     0.0000,     -0.4551,     -1.7109,     -1.7344,     -1.3438,      0.4336,      0.0150,      0.8203,      1.8359,     -0.3223,      1.2344,      0.6445,      2.9375,      3.3438,      0.5664],
        [     0.0000,     -0.4219,     -2.9844,     -2.9062,     -0.4297,      1.1328,      1.4375,     -2.2812,      1.5234,     -0.9375,      2.0469,     -0.9219,      0.5742,      3.3750,      1.0312],
        [     0.0000,     -0.4902,     -0.4746,     -1.4766,     -0.7578,      0.9531,      1.9375,      0.4688,     -0.4531,      0.5234,      1.1719,     -1.0547,      1.2422,      1.0938,      2.7031],
        [     0.0000,     -1.7188,     -2.0938,     -1.3750,     -1.5938,      1.1953,      1.5469,     -0.3379,      1.4219,      0.6211,      1.9375,     -1.1562,      1.6562,      3.4531,      1.6406],
        [     0.0000,     -1.6094,     -3.2344,     -4.2500,     -2.1719,     -0.1040,      1.2656,     -2.6406,     -0.7383,     -2.0312,      1.0859,     -2.1875,     -0.2168,      1.0625,      0.6875],
        [     0.0000,     -0.7070,     -2.4531,     -3.1562,     -1.6797,      1.1641,      1.2188,     -0.1245,      1.1250,     -0.1030,      1.3672,      0.2676,      2.1250,      2.9531,      0.5977]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8350],
        [0.4454],
        [0.3432],
        [0.5217],
        [0.3901],
        [0.2478],
        [0.1719],
        [0.2171],
        [0.2258],
        [0.2679],
        [0.1197],
        [0.1261],
        [0.1777],
        [0.1634]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0008,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0011,     0.0019,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0009,     0.0007,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0005,     0.0010,     0.0002,     0.0012,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0010,     0.0017,     0.0002,     0.0011,     0.0007,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9570,     0.0056,     0.0128,     0.0036,     0.0022,     0.0038,     0.0134,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7930,     0.0079,     0.0297,     0.0060,     0.0045,     0.0066,     0.0151,     0.1387,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0007,     0.0010,     0.0003,     0.0005,     0.0007,     0.0022,     0.0027,     0.0021,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0002,     0.0001,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9844,     0.0013,     0.0019,     0.0006,     0.0002,     0.0005,     0.0015,     0.0050,     0.0014,     0.0010,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9219,     0.0024,     0.0034,     0.0014,     0.0026,     0.0014,     0.0049,     0.0131,     0.0051,     0.0028,     0.0004,     0.0410,     0.0000,     0.0000,     0.0000],
        [    0.9570,     0.0005,     0.0010,     0.0004,     0.0005,     0.0007,     0.0014,     0.0076,     0.0020,     0.0034,     0.0001,     0.0071,     0.0175,     0.0000,     0.0000],
        [    0.9805,     0.0006,     0.0009,     0.0003,     0.0004,     0.0007,     0.0018,     0.0031,     0.0020,     0.0006,     0.0001,     0.0017,     0.0049,     0.0018,     0.0000],
        [    1.0000,     0.0001,     0.0001,     0.0000,     0.0001,     0.0001,     0.0001,     0.0003,     0.0001,     0.0000,     0.0000,     0.0002,     0.0002,     0.0001,     0.0001]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0054, -0.0101,  0.0333,  ..., -0.0117, -0.0029, -0.0161],
        [ 0.0411, -0.0419, -0.0119,  ..., -0.0098, -0.0182, -0.0367],
        [ 0.0504, -0.0364,  0.0409,  ..., -0.0105, -0.0136,  0.0050],
        ...,
        [ 0.0335,  0.0216, -0.0279,  ..., -0.0003,  0.0168,  0.0194],
        [ 0.0152,  0.0190, -0.0062,  ..., -0.0159, -0.0441, -0.0235],
        [ 0.0235, -0.0105,  0.0059,  ..., -0.0039, -0.0147,  0.0143]], device='cuda:0', requires_grad=True)
K: tensor([-1.1250, -0.8359, -0.9766, -0.1826, -2.2969,  2.5938, -1.4141,  2.6094, -1.8906, -1.6172,  1.3594,  0.4492, -2.0156, -1.9688, -1.8594,  0.8125,  1.6250,  2.7500, -2.2969,  1.1641,  2.6094,  0.7305, -1.7500, -0.1973,  2.0312, -1.0547,  0.1167, -2.0625,  1.9453,  1.1016,  1.2578,  2.7500,
        -1.0625,  2.0312,  2.3750, -1.1484, -1.5703,  1.6484,  1.6016, -1.2891,  1.9922, -2.6250, -0.0432,  1.2500,  0.3223,  2.7500, -1.7812, -3.1562, -0.3086,  3.2031, -1.1094, -1.7109,  1.9141,  0.4941,  1.9922, -1.6328, -2.0156, -2.7031, -2.2188, -2.4844, -2.9531, -1.6562,  1.8984,  0.8164],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0025,  0.0335,  0.0214,  ..., -0.0164,  0.0448, -0.0188],
        [-0.0094,  0.0477, -0.0004,  ...,  0.0239,  0.0186, -0.0122],
        [-0.0253, -0.0015,  0.0180,  ..., -0.0214,  0.0588, -0.0345],
        ...,
        [ 0.0238, -0.0122,  0.0129,  ..., -0.0251, -0.0086, -0.0057],
        [ 0.0070,  0.0128,  0.0051,  ...,  0.0245,  0.0174, -0.0051],
        [ 0.0109, -0.0277, -0.0189,  ...,  0.0289,  0.0247,  0.0076]], device='cuda:0', requires_grad=True)
Q: tensor([     1.1406,      1.2422,     -0.9453,      0.7344,      0.0427,     -1.2734,      1.0234,     -0.3242,     -0.2930,      0.6758,     -0.4160,      0.5781,      0.6016,      1.1094,      0.6484,     -1.6562,     -0.5352,     -2.2812,      1.2812,      0.0007,      0.1475,      0.4609,
             1.2969,      0.7148,      0.0664,     -0.0791,      0.8555,      0.6406,     -1.0156,     -1.0391,      0.0525,     -0.7617,     -0.7070,     -1.3984,     -0.4297,      0.1250,      1.3594,     -0.7812,      0.0776,     -0.5078,     -1.5938,      1.7656,      0.1865,      0.0986,
             0.2266,     -0.7578,      0.8945,      0.5039,     -1.3984,     -0.9688,      0.5391,     -0.0693,     -0.3398,     -0.9531,     -0.3809,      0.7500,     -0.2871,      1.3203,      1.7891,      2.2812,      1.3281,      0.8398,     -1.7188,     -0.2383], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000,  -7.0938,  -7.1250,  -8.3125,  -7.6562,  -7.7188,  -6.9062,  -6.2500,  -6.9688,  -8.0625,  -9.6875,  -6.1562,  -6.5625,  -7.1562,  -7.6562],
        [  0.0000,  -6.7812,  -6.2500,  -7.4375,  -7.7812,  -7.4688,  -6.6562,  -5.2812,  -6.9062,  -7.1875,  -9.5625,  -5.5000,  -6.0938,  -7.0000,  -6.8125],
        [  0.0000,  -7.0000,  -7.2812,  -7.5625,  -8.5625,  -7.9375,  -7.0000,  -6.5625,  -7.6562,  -7.7500,  -9.8750,  -6.6250,  -7.0625,  -7.6875,  -7.4375],
        [  0.0000,  -7.5000,  -6.9062,  -8.5000,  -6.7188,  -7.1875,  -6.0625,  -5.0625,  -6.2500,  -7.4688,  -9.3125,  -5.9375,  -5.0938,  -6.2188,  -7.5312],
        [  0.0000,  -6.9062,  -6.4062,  -8.3750,  -6.8125,  -7.2188,  -5.6250,  -5.7500,  -6.4062,  -7.8750,  -9.1875,  -6.1250,  -5.8125,  -6.6250,  -6.4062],
        [  0.0000,  -5.1562,  -4.3125,  -5.5938,  -6.0625,  -5.5312,  -4.2812,  -3.4375,  -4.4375,  -5.9688,  -7.3125,  -3.7812,  -4.0000,  -4.4688,  -4.8438],
        [  0.0000,  -4.5938,  -3.2812,  -4.8750,  -5.1562,  -4.7812,  -3.9688,  -1.7422,  -3.7188,  -3.4062,  -6.0938,  -2.0469,  -2.1875,  -3.6875,  -3.8750],
        [  0.0000,  -7.2188,  -6.8750,  -8.1875,  -7.5625,  -7.2188,  -6.1250,  -5.8750,  -6.1875,  -7.9375,  -9.5000,  -6.5312,  -5.6250,  -6.3438,  -7.1562],
        [  0.0000,  -9.3750,  -9.9375, -10.3750, -10.4375, -10.4375,  -9.2500,  -8.7500,  -9.6875,  -9.1250, -12.3750,  -8.0625,  -8.9375,  -9.5625, -10.1875],
        [  0.0000,  -6.6250,  -6.2188,  -7.3125,  -8.3125,  -7.5312,  -6.4688,  -5.2812,  -6.5625,  -6.8750,  -9.2500,  -5.4062,  -5.4062,  -6.5312,  -6.8438],
        [  0.0000,  -5.9375,  -5.5938,  -6.5312,  -5.8438,  -6.5312,  -5.2188,  -4.2500,  -5.1875,  -5.7812,  -7.8750,  -3.1094,  -3.9688,  -5.2812,  -6.4375],
        [  0.0000,  -7.5000,  -6.8750,  -7.7812,  -7.5312,  -7.2500,  -6.5000,  -4.8438,  -6.1875,  -5.6250,  -9.3750,  -4.9062,  -4.0000,  -6.1875,  -7.5312],
        [  0.0000,  -7.3750,  -7.0000,  -8.1875,  -7.7812,  -7.2188,  -6.2812,  -5.7812,  -6.1875,  -7.4375,  -9.5000,  -6.3750,  -5.3125,  -6.3125,  -7.3750],
        [  0.0000,  -9.5625,  -9.6875, -10.3750,  -9.7500,  -9.8750,  -8.8750,  -8.3125,  -9.1250, -10.3125, -12.6875,  -8.7500,  -8.7500,  -9.2500,  -9.8125]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9958],
        [0.9984],
        [0.9977],
        [0.9958],
        [0.9977],
        [0.9925],
        [0.9619],
        [0.9974],
        [1.0000],
        [0.9974],
        [0.9886],
        [0.9954],
        [0.9967],
        [0.9997]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0496,     0.9492,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0349,     0.5742,     0.3906,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0510,     0.5000,     0.3809,     0.0684,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0649,     0.6602,     0.1660,     0.0486,     0.0596,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0237,     0.5938,     0.0996,     0.0552,     0.1128,     0.1162,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0106,     0.3555,     0.0291,     0.0107,     0.0190,     0.0352,     0.5391,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0122,     0.0977,     0.0250,     0.0043,     0.0079,     0.0217,     0.7109,     0.1191,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0208,     0.2676,     0.0046,     0.0017,     0.0088,     0.0094,     0.6328,     0.0179,     0.0347,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0096,     0.0505,     0.0181,     0.0061,     0.0181,     0.0332,     0.2852,     0.1309,     0.1729,     0.2754,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0175,     0.0417,     0.0071,     0.0016,     0.0055,     0.0187,     0.4883,     0.0474,     0.0359,     0.3145,     0.0225,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0115,     0.0306,     0.0183,     0.0051,     0.0076,     0.0140,     0.1943,     0.1118,     0.0530,     0.1787,     0.0635,     0.3125,     0.0000,     0.0000,     0.0000],
        [    0.0194,     0.0491,     0.0114,     0.0022,     0.0044,     0.0145,     0.2051,     0.0723,     0.0498,     0.1172,     0.0549,     0.2324,     0.1670,     0.0000,     0.0000],
        [    0.0254,     0.1406,     0.0022,     0.0007,     0.0050,     0.0050,     0.2910,     0.0091,     0.0145,     0.0791,     0.2080,     0.0815,     0.0640,     0.0737,     0.0000],
        [    0.0052,     0.0197,     0.0031,     0.0015,     0.0031,     0.0040,     0.0544,     0.0200,     0.0251,     0.0332,     0.0237,     0.0815,     0.1021,     0.1123,     0.5117]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0036,  0.0053, -0.0012,  ..., -0.0304, -0.0057, -0.0279],
        [-0.0504,  0.0092, -0.0056,  ...,  0.0088, -0.0066,  0.0002],
        [-0.0487, -0.0172,  0.0486,  ..., -0.0193, -0.0242, -0.0252],
        ...,
        [-0.0063, -0.0173, -0.0148,  ..., -0.0319, -0.0419, -0.0492],
        [-0.0277, -0.0249, -0.0195,  ..., -0.0085, -0.0134,  0.0452],
        [-0.0021,  0.0176,  0.0171,  ..., -0.0125,  0.0121, -0.0112]], device='cuda:0', requires_grad=True)
K: tensor([-1.9062, -1.8047, -0.7148,  0.2930, -0.5703, -2.1875, -1.5938,  0.7500,  0.1680, -2.0938, -0.0312, -2.2656,  2.5000, -1.8594, -0.4629,  1.9297,  2.6094, -0.3926,  0.7383, -0.2734,  1.0312, -1.6172,  0.7266, -1.8438, -1.3438,  0.9062, -0.6523,  1.5469,  0.5859,  1.6641, -1.1094, -1.9922,
        -0.6562, -1.3750,  1.3516, -1.2734,  2.6719,  0.2373, -1.2422,  0.4336, -2.7188,  1.2500,  0.7734,  2.0000,  0.6289, -0.0069, -2.2500, -0.7539,  1.8047,  0.4023,  1.0781, -0.2188, -0.3008, -2.0781, -2.0625, -2.2188,  2.0312, -0.9180, -0.9258,  1.6328, -0.7188, -1.2031,  1.5781, -0.8516],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0101, -0.0077,  0.0164,  ...,  0.0249, -0.0205, -0.0148],
        [ 0.0385, -0.0058,  0.0176,  ..., -0.0069,  0.0306,  0.0202],
        [-0.0192,  0.0112,  0.0488,  ...,  0.0200,  0.0270, -0.0090],
        ...,
        [ 0.0191,  0.0005, -0.0272,  ..., -0.0026,  0.0045, -0.0046],
        [-0.0135,  0.0407, -0.0189,  ...,  0.0076,  0.0032, -0.0347],
        [-0.0011, -0.0099, -0.0042,  ...,  0.0113,  0.0012, -0.0030]], device='cuda:0', requires_grad=True)
Q: tensor([     0.0030,     -1.0469,     -1.4219,      1.1875,     -2.4844,     -0.5000,     -0.0986,      0.0942,      0.2100,     -0.5312,     -0.5547,     -0.3125,     -2.3750,     -2.0938,      1.8594,     -0.3730,     -1.1484,     -0.6367,      0.6289,     -1.0078,     -1.0781,      2.2188,
            -1.8438,     -2.1875,     -0.7969,     -1.2266,      2.2031,      3.4688,     -2.2500,      1.6562,      0.0977,     -1.5625,     -2.1406,      1.1953,     -1.8125,     -1.3828,      2.4219,     -1.5781,     -2.2500,      0.7617,     -0.5273,     -0.3672,      2.5156,     -0.1309,
            -0.9414,     -1.9297,     -1.0781,     -3.0625,      2.0625,      1.5938,      1.0312,      0.6094,     -1.3516,     -0.9180,     -0.0095,     -1.6953,     -0.6133,      0.4102,     -0.4180,      0.7891,     -1.4219,      1.1172,      0.1992,     -1.9297], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  2.9531,  0.9570,  0.6094,  1.3672,  1.4062,  3.9531,  2.6250,  2.9688,  3.1719,  2.8906,  3.2344,  3.5000,  3.7344,  5.0938],
        [ 0.0000,  2.7969,  2.4219,  1.4766,  1.5547,  1.7969,  4.2812,  4.0625,  3.4062,  4.6562,  3.4219,  5.4375,  5.3750,  4.6562,  6.0625],
        [ 0.0000,  2.2812,  2.0156,  0.2910,  1.2422,  1.8125,  3.4531,  3.2500,  3.2031,  5.1875,  3.9219,  6.0000,  5.5625,  4.9688,  6.6875],
        [ 0.0000,  2.3281,  0.9414, -0.2891, -0.0820,  1.1250,  3.0469,  2.5938,  2.3594,  3.9844,  2.1406,  3.6719,  3.5781,  3.7812,  6.0000],
        [ 0.0000,  3.2188,  1.4375,  0.8438,  1.5625,  1.5938,  4.0312,  3.0156,  3.5469,  4.1875,  4.6250,  4.7500,  4.5625,  5.3125,  7.8125],
        [ 0.0000,  3.5156,  1.0078,  0.0098,  0.5859,  1.1953,  3.9375,  3.2031,  2.7969,  3.2969,  0.8203,  3.7969,  4.0625,  3.3281,  6.8125],
        [ 0.0000,  2.0781,  0.7188, -1.0469, -0.4434,  0.5742,  4.0625,  2.2812,  1.9453,  3.4531,  1.9297,  4.0938,  3.5312,  3.1406,  6.2812],
        [ 0.0000,  2.5625, -1.5078, -2.5000, -0.8594, -0.7930,  3.4219, -0.1445,  0.5078,  2.3750,  3.0938,  2.0781,  1.6172,  1.9375,  5.6250],
        [ 0.0000,  1.6641,  0.6367, -0.4453,  0.6367,  1.2422,  3.3906,  2.6094,  2.8906,  3.3594,  2.6406,  4.2188,  4.3438,  4.7500,  6.7500],
        [ 0.0000,  0.8711, -0.9023, -2.3594, -1.1641,  0.0635,  3.3281,  1.0000,  0.7188,  2.8906,  0.2500,  2.8125,  2.5469,  2.0312,  6.3438],
        [ 0.0000,  0.9844,  0.4668, -0.8125, -0.4102,  0.1992,  2.8281,  2.2812,  1.5312,  2.7500,  1.7109,  3.2969,  3.5625,  3.2188,  5.0625],
        [ 0.0000,  0.9258, -0.5391, -2.1562, -1.4766, -0.2910,  2.3594,  1.3125,  0.9375,  1.7969,  1.0391,  2.4844,  2.1562,  2.4375,  5.2812],
        [ 0.0000,  1.7109, -2.4531, -3.5625, -1.6172, -1.6172,  2.4375, -1.0312, -0.5586,  1.1328,  2.1094,  1.1641,  0.9180,  1.0703,  4.7812],
        [ 0.0000,  1.3438, -0.4961, -1.2266, -0.4941, -0.2451,  2.3594,  1.3594,  1.5859,  1.8672,  1.5312,  2.7656,  2.9844,  3.0781,  4.5938]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3989],
        [0.0984],
        [0.0971],
        [0.1041],
        [0.0685],
        [0.2283],
        [0.0859],
        [0.0833],
        [0.0602],
        [0.0905],
        [0.0812],
        [0.0668],
        [0.0770],
        [0.0835]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0109, 0.9883, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0126, 0.9609, 0.0260, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0128, 0.9219, 0.0277, 0.0356, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0023, 0.8086, 0.0972, 0.0283, 0.0649, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0413, 0.7148, 0.0452, 0.0093, 0.0947, 0.0957, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0259, 0.3887, 0.4355, 0.0156, 0.0162, 0.0413, 0.0771, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0107, 0.1406, 0.1074, 0.0064, 0.1729, 0.0151, 0.0420, 0.5039, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0197, 0.2471, 0.0586, 0.0081, 0.0267, 0.0215, 0.0522, 0.5312, 0.0342, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0119, 0.4766, 0.0366, 0.0172, 0.0145, 0.0100, 0.1108, 0.2070, 0.0166, 0.0986, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0216, 0.2910, 0.0266, 0.0057, 0.0093, 0.0131, 0.0481, 0.2227, 0.0140, 0.2422, 0.1055, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0562, 0.4785, 0.0310, 0.0228, 0.0119, 0.0096, 0.1235, 0.0967, 0.0055, 0.0776, 0.0503, 0.0354, 0.0000, 0.0000, 0.0000],
        [0.0227, 0.1040, 0.0205, 0.0018, 0.0518, 0.0036, 0.0260, 0.0579, 0.0703, 0.1533, 0.0581, 0.1768, 0.2539, 0.0000, 0.0000],
        [0.0249, 0.1108, 0.0081, 0.0020, 0.0099, 0.0041, 0.0233, 0.0608, 0.0092, 0.2031, 0.0415, 0.0801, 0.3926, 0.0287, 0.0000],
        [0.0403, 0.2969, 0.0461, 0.0219, 0.0116, 0.0143, 0.1240, 0.1001, 0.0055, 0.0549, 0.0532, 0.0654, 0.0752, 0.0058, 0.0845]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0039, -0.0296,  0.0046,  ..., -0.0007,  0.0288, -0.0173],
        [ 0.0145, -0.0513, -0.0193,  ...,  0.0256,  0.0153, -0.0046],
        [-0.0156, -0.0162, -0.0286,  ...,  0.0343,  0.0023, -0.0155],
        ...,
        [ 0.0296,  0.0148, -0.0264,  ..., -0.0148, -0.0033,  0.0177],
        [ 0.0043,  0.0019,  0.0272,  ...,  0.0395, -0.0139,  0.0044],
        [-0.0272,  0.0521, -0.0286,  ...,  0.0024,  0.0303,  0.0392]], device='cuda:0', requires_grad=True)
K: tensor([ 0.2383, -0.8867, -0.1523,  0.1533, -0.9102,  0.1875, -0.2275, -0.1670, -0.6680, -3.3125, -2.0312, -1.0391,  0.6094, -0.9688, -1.5391,  1.1094,  1.5625,  0.9766, -2.3281,  0.2871,  1.5391, -1.4297, -2.1562,  0.7305,  1.0469, -1.2812, -0.3652,  0.9609, -0.1270, -1.7188, -0.1123,  1.1328,
        -1.8906,  2.0000,  3.7812,  0.5078,  0.1895, -1.1562, -0.6133, -1.6250, -0.9219, -0.8672, -2.2031,  0.9023,  0.6016,  0.0952, -1.3984,  1.8281, -1.5938, -2.1562,  0.7188,  1.9844,  1.5938, -0.2871,  0.2598, -0.4062,  0.4102, -3.2656, -0.7773,  1.0938,  0.8672, -0.5898,  1.6484, -1.4766],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0048, -0.0075, -0.0085,  ..., -0.0407, -0.0350, -0.0188],
        [ 0.0041,  0.0007, -0.0041,  ...,  0.0114, -0.0222,  0.0445],
        [ 0.0192, -0.0100, -0.0026,  ..., -0.0081, -0.0299, -0.0094],
        ...,
        [ 0.0307, -0.0476, -0.0298,  ...,  0.0160,  0.0206, -0.0029],
        [ 0.0128, -0.0074,  0.0375,  ...,  0.0188, -0.0044,  0.0008],
        [-0.0137, -0.0141, -0.0204,  ...,  0.0167,  0.0014, -0.0215]], device='cuda:0', requires_grad=True)
Q: tensor([-0.2949,  1.0547,  0.8438,  0.7734,  0.5742, -1.2578,  0.2832, -2.1406, -1.1328,  0.2139, -0.3574,  1.5469,  0.3613, -0.0991, -0.5859, -1.0312,  0.1206,  0.6523, -0.6953,  0.3750, -0.0488, -0.9727,  0.4297, -0.5625,  1.1250,  0.8906, -1.4609,  1.6562, -0.7500,  0.7695, -1.2344, -2.3438,
         0.3438,  0.6055, -0.2852, -0.1709, -0.6758, -0.7148,  1.7031, -1.1406,  0.6836, -0.1641, -0.1758,  0.5039,  0.3418,  1.5938, -0.7930,  0.9258,  1.3438, -0.9141,  0.4316,  1.7891, -0.9570, -0.4824, -0.3535,  0.4531, -1.9844,  0.2402,  0.1406,  0.5078,  0.4551, -0.9414, -0.5391, -1.2656],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  4.5000,  2.3906,  1.5781,  2.0000,  2.5312,  2.8281,  3.0156,  1.9609,  1.7344,  2.9219,  2.1875,  2.8750,  1.6953,  1.9297],
        [ 0.0000,  4.3438,  0.7227,  2.8750,  1.6406,  1.7109,  3.4531,  0.6523, -0.2617, -0.1738,  1.4688, -0.9258,  0.8086, -0.6133, -0.0693],
        [ 0.0000,  4.2812,  0.7695,  1.0234,  1.8750,  0.8242,  3.3125,  1.6250,  0.2461,  0.2207,  0.2480, -0.8477,  0.9375, -0.2793, -0.1836],
        [ 0.0000,  5.8750,  3.7500,  2.5312,  3.3594,  4.0000,  3.5469,  6.0312,  2.4062,  3.9688,  2.1562,  3.3594,  4.7812,  1.3984,  1.5625],
        [ 0.0000,  2.8438,  0.0898, -1.4844,  0.8281,  0.8359,  1.3750,  1.2109,  0.2734,  0.4121, -0.0062,  0.2344, -0.2324, -0.4844,  0.5312],
        [ 0.0000,  2.7031,  2.8281, -0.5039, -0.4707,  0.4648,  1.0938,  4.4062, -0.5820,  1.7812, -0.3223,  2.5000,  2.5000, -1.3125,  0.3027],
        [ 0.0000,  2.5781,  2.3125, -0.5078,  2.7812,  0.3457,  1.3672,  3.8594,  3.5781,  4.3438,  2.4844,  3.1406,  3.6406,  3.5469,  4.1250],
        [ 0.0000,  2.5312,  1.0938, -0.8906,  0.3086,  0.0889,  0.9766,  3.2969,  0.5508,  3.6562,  1.1562,  2.2188,  3.6094,  0.6328,  1.7578],
        [ 0.0000,  3.6875,  1.1250,  0.3672,  0.1982, -0.1748,  2.2344,  2.8594,  0.3281,  2.1094,  2.7500,  2.3125,  3.6719,  0.6992,  1.7031],
        [ 0.0000,  2.6094,  0.2080, -1.3203, -0.8438, -0.5039,  0.8008,  2.3281, -0.4355,  2.4219,  1.5859,  2.3281,  2.9844, -0.1895,  0.8750],
        [ 0.0000,  2.1406, -0.5938, -0.8984, -1.5469, -1.7578,  0.7891,  0.5430, -2.3281,  0.3262, -0.1094, -0.4590,  2.3281, -1.5391, -0.4785],
        [ 0.0000,  1.5234, -0.1011, -2.5312,  0.8242, -1.8516,  0.1377,  0.9375,  1.1328,  1.9141,  0.9375,  2.0469,  2.4062,  2.4844,  2.4062],
        [ 0.0000,  1.4922, -1.1250, -2.5312, -0.9219, -1.8047, -0.0679,  0.8906, -1.0078,  2.0938,  0.5078,  1.1719,  2.7656,  0.1396,  1.0078],
        [ 0.0000,  2.0000,  0.1377, -0.6055, -1.2422, -1.0391,  1.1250,  0.9141, -1.9922,  0.3125,  0.2832,  0.4902,  0.6289, -1.9375,  0.7422]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0365],
        [0.0070],
        [0.0100],
        [0.0042],
        [0.0220],
        [0.0108],
        [0.0062],
        [0.0046],
        [0.0056],
        [0.0132],
        [0.0126],
        [0.0384],
        [0.0068],
        [0.0082]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( are:0.1963 a:0.2217-:0.2598 white:0.0859y:0.1187,:0.3242 a:0.1445iced:0.1143)
iced
------
		( a:0.2217-:0.2598 white:0.0859y:0.1187,:0.3242 a:0.1445iced:0.1143 and:0.1865)
 and the name is “The Great”.
The name is
@ 9050 train 3.9639 , allloss: 3.9779, dt: 1680.52ms, fracRes: 0.6016, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6602, norm(y): 1.0006, norm:0.9477, tok/sec: 77994.95, flops:68.30, batch-reuse:1
@ 9051 train 3.6752 , allloss: 3.6915, dt: 1291.94ms, fracRes: 0.6009, norm(attn): 0.1602, norm(output): 0.2480, norm(x): 0.6652, norm(y): 1.0006, norm:1.9442, tok/sec: 101453.35, flops:88.84, batch-reuse:1
@ 9052 train 4.1105 , allloss: 4.1250, dt: 1311.01ms, fracRes: 0.6021, norm(attn): 0.1553, norm(output): 0.2461, norm(x): 0.6531, norm(y): 1.0004, norm:1.2543, tok/sec: 99977.76, flops:87.55, batch-reuse:1
@ 9053 train 4.0933 , allloss: 4.1075, dt: 1314.71ms, fracRes: 0.6017, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6545, norm(y): 1.0005, norm:1.4211, tok/sec: 99696.77, flops:87.30, batch-reuse:1
@ 9054 train 4.2296 , allloss: 4.2434, dt: 1298.65ms, fracRes: 0.6012, norm(attn): 0.1553, norm(output): 0.2471, norm(x): 0.6554, norm(y): 1.0002, norm:1.0623, tok/sec: 100929.39, flops:88.38, batch-reuse:1
@ 9055 train 4.0611 , allloss: 4.0748, dt: 1281.07ms, fracRes: 0.6007, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6576, norm(y): 1.0003, norm:1.1067, tok/sec: 102314.19, flops:89.60, batch-reuse:1
@ 9056 train 4.0028 , allloss: 4.0173, dt: 1297.35ms, fracRes: 0.6014, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6602, norm(y): 1.0006, norm:1.1160, tok/sec: 101030.46, flops:88.47, batch-reuse:1
@ 9057 train 3.9461 , allloss: 3.9598, dt: 1326.40ms, fracRes: 0.6014, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6612, norm(y): 1.0005, norm:1.0082, tok/sec: 98817.53, flops:86.53, batch-reuse:1
@ 9058 train 4.0808 , allloss: 4.0945, dt: 1293.58ms, fracRes: 0.6015, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6630, norm(y): 1.0003, norm:0.8895, tok/sec: 101324.66, flops:88.73, batch-reuse:1
@ 9059 train 4.0120 , allloss: 4.0256, dt: 1275.65ms, fracRes: 0.6011, norm(attn): 0.1562, norm(output): 0.2500, norm(x): 0.6634, norm(y): 1.0005, norm:0.9749, tok/sec: 102749.24, flops:89.98, batch-reuse:1
@ 9060 train 3.9566 , allloss: 3.9704, dt: 1288.08ms, fracRes: 0.6007, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6662, norm(y): 1.0005, norm:1.0206, tok/sec: 101757.41, flops:89.11, batch-reuse:1
@ 9061 train 4.0398 , allloss: 4.0540, dt: 1273.30ms, fracRes: 0.6005, norm(attn): 0.1562, norm(output): 0.2500, norm(x): 0.6671, norm(y): 1.0003, norm:0.8813, tok/sec: 102938.63, flops:90.14, batch-reuse:1
@ 9062 train 3.9735 , allloss: 3.9874, dt: 1255.47ms, fracRes: 0.6020, norm(attn): 0.1553, norm(output): 0.2490, norm(x): 0.6633, norm(y): 1.0007, norm:0.9793, tok/sec: 104400.46, flops:91.42, batch-reuse:1
@ 9063 train 4.1239 , allloss: 4.1380, dt: 1269.86ms, fracRes: 0.6020, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6613, norm(y): 1.0004, norm:0.9907, tok/sec: 103217.44, flops:90.39, batch-reuse:1
@ 9064 train 4.0034 , allloss: 4.0171, dt: 1288.23ms, fracRes: 0.6024, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6610, norm(y): 1.0006, norm:1.0131, tok/sec: 101745.42, flops:89.10, batch-reuse:1
@ 9065 train 3.9777 , allloss: 3.9915, dt: 1279.48ms, fracRes: 0.6020, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6613, norm(y): 1.0004, norm:0.8951, tok/sec: 102441.62, flops:89.71, batch-reuse:1
@ 9066 train 4.0377 , allloss: 4.0509, dt: 1262.66ms, fracRes: 0.6019, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6568, norm(y): 1.0005, norm:1.0132, tok/sec: 103806.60, flops:90.90, batch-reuse:1
@ 9067 train 3.9680 , allloss: 3.9820, dt: 1290.37ms, fracRes: 0.6019, norm(attn): 0.1543, norm(output): 0.2480, norm(x): 0.6611, norm(y): 1.0004, norm:1.0158, tok/sec: 101576.88, flops:88.95, batch-reuse:1
@ 9068 train 4.0625 , allloss: 4.0761, dt: 1291.51ms, fracRes: 0.6020, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6574, norm(y): 1.0005, norm:0.9876, tok/sec: 101487.45, flops:88.87, batch-reuse:1
@ 9069 train 3.9950 , allloss: 4.0084, dt: 1301.08ms, fracRes: 0.6010, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6558, norm(y): 1.0003, norm:0.8931, tok/sec: 100740.98, flops:88.22, batch-reuse:1
@ 9070 train 3.9606 , allloss: 3.9740, dt: 1268.36ms, fracRes: 0.6009, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6557, norm(y): 1.0004, norm:0.8964, tok/sec: 103339.99, flops:90.49, batch-reuse:1
@ 9071 train 3.9080 , allloss: 3.9217, dt: 1282.03ms, fracRes: 0.6006, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6565, norm(y): 1.0005, norm:0.8911, tok/sec: 102238.08, flops:89.53, batch-reuse:1
@ 9072 train 3.8909 , allloss: 3.9053, dt: 1290.30ms, fracRes: 0.6013, norm(attn): 0.1553, norm(output): 0.2461, norm(x): 0.6584, norm(y): 1.0007, norm:0.9245, tok/sec: 101582.23, flops:88.95, batch-reuse:1
@ 9073 train 3.8790 , allloss: 3.8933, dt: 1291.95ms, fracRes: 0.6025, norm(attn): 0.1562, norm(output): 0.2471, norm(x): 0.6629, norm(y): 1.0007, norm:0.9112, tok/sec: 101453.16, flops:88.84, batch-reuse:1
@ 9074 train 3.8302 , allloss: 3.8436, dt: 1289.79ms, fracRes: 0.6019, norm(attn): 0.1553, norm(output): 0.2471, norm(x): 0.6547, norm(y): 1.0005, norm:0.9266, tok/sec: 101622.86, flops:88.99, batch-reuse:1
@ 9075 train 3.8599 , allloss: 3.8736, dt: 1274.13ms, fracRes: 0.6008, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6562, norm(y): 1.0005, norm:0.9151, tok/sec: 102871.91, flops:90.08, batch-reuse:1
@ 9076 train 3.8685 , allloss: 3.8824, dt: 1264.65ms, fracRes: 0.6008, norm(attn): 0.1553, norm(output): 0.2490, norm(x): 0.6558, norm(y): 1.0005, norm:0.9710, tok/sec: 103643.21, flops:90.76, batch-reuse:1
@ 9077 train 3.9828 , allloss: 3.9966, dt: 1275.48ms, fracRes: 0.6015, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6571, norm(y): 1.0006, norm:0.9468, tok/sec: 102763.19, flops:89.99, batch-reuse:1
@ 9078 train 3.8157 , allloss: 3.8294, dt: 1260.47ms, fracRes: 0.6020, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6578, norm(y): 1.0007, norm:1.0248, tok/sec: 103986.97, flops:91.06, batch-reuse:1
@ 9079 train 3.8189 , allloss: 3.8322, dt: 1282.99ms, fracRes: 0.6014, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6585, norm(y): 1.0005, norm:0.9565, tok/sec: 102161.53, flops:89.46, batch-reuse:1
@ 9080 train 3.7439 , allloss: 3.7583, dt: 1307.64ms, fracRes: 0.6010, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6613, norm(y): 1.0005, norm:0.9900, tok/sec: 100235.41, flops:87.77, batch-reuse:1
@ 9081 train 3.8563 , allloss: 3.8702, dt: 1253.56ms, fracRes: 0.6014, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6603, norm(y): 1.0006, norm:1.0937, tok/sec: 104559.45, flops:91.56, batch-reuse:1
@ 9082 train 3.8816 , allloss: 3.8954, dt: 1278.75ms, fracRes: 0.6016, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6584, norm(y): 1.0006, norm:1.1779, tok/sec: 102500.43, flops:89.76, batch-reuse:1
@ 9083 train 3.8440 , allloss: 3.8576, dt: 1323.85ms, fracRes: 0.6016, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6576, norm(y): 1.0005, norm:0.9473, tok/sec: 99007.86, flops:86.70, batch-reuse:1
@ 9084 train 3.8872 , allloss: 3.9008, dt: 1302.27ms, fracRes: 0.6014, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6565, norm(y): 1.0005, norm:0.8990, tok/sec: 100648.82, flops:88.14, batch-reuse:1
@ 9085 train 3.9134 , allloss: 3.9272, dt: 1244.60ms, fracRes: 0.6008, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6572, norm(y): 1.0003, norm:1.0268, tok/sec: 105312.55, flops:92.22, batch-reuse:1
@ 9086 train 3.9748 , allloss: 3.9887, dt: 1288.84ms, fracRes: 0.6008, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6558, norm(y): 1.0002, norm:1.0109, tok/sec: 101697.76, flops:89.06, batch-reuse:1
@ 9087 train 3.8668 , allloss: 3.8809, dt: 1254.85ms, fracRes: 0.6008, norm(attn): 0.1562, norm(output): 0.2471, norm(x): 0.6568, norm(y): 1.0005, norm:1.0277, tok/sec: 104452.59, flops:91.47, batch-reuse:1
@ 9088 train 3.8246 , allloss: 3.8386, dt: 1273.43ms, fracRes: 0.6008, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6564, norm(y): 1.0006, norm:0.9314, tok/sec: 102928.09, flops:90.13, batch-reuse:1
@ 9089 train 4.5789 , allloss: 4.5923, dt: 1280.08ms, fracRes: 0.6029, norm(attn): 0.1514, norm(output): 0.2461, norm(x): 0.6512, norm(y): 1.0003, norm:1.6768, tok/sec: 102393.63, flops:89.66, batch-reuse:1
@ 9090 train 4.0105 , allloss: 4.0250, dt: 1279.25ms, fracRes: 0.6018, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6568, norm(y): 1.0005, norm:1.4813, tok/sec: 102460.41, flops:89.72, batch-reuse:1
@ 9091 train 3.9226 , allloss: 3.9361, dt: 1271.83ms, fracRes: 0.6008, norm(attn): 0.1572, norm(output): 0.2480, norm(x): 0.6560, norm(y): 1.0005, norm:1.3736, tok/sec: 103058.08, flops:90.25, batch-reuse:1
@ 9092 train 3.9041 , allloss: 3.9179, dt: 1287.98ms, fracRes: 0.6012, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6572, norm(y): 1.0006, norm:1.1350, tok/sec: 101765.68, flops:89.11, batch-reuse:1
@ 9093 train 4.1272 , allloss: 4.1413, dt: 1281.57ms, fracRes: 0.6005, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6585, norm(y): 1.0003, norm:1.5016, tok/sec: 102274.60, flops:89.56, batch-reuse:1
@ 9094 train 3.7273 , allloss: 3.7446, dt: 1317.74ms, fracRes: 0.6027, norm(attn): 0.1562, norm(output): 0.2500, norm(x): 0.6657, norm(y): 1.0002, norm:1.2241, tok/sec: 99466.98, flops:87.10, batch-reuse:1
@ 9095 train 3.8437 , allloss: 3.8582, dt: 1321.18ms, fracRes: 0.6028, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6658, norm(y): 1.0004, norm:1.0782, tok/sec: 99208.42, flops:86.88, batch-reuse:1
@ 9096 train 3.8765 , allloss: 3.8904, dt: 1302.78ms, fracRes: 0.6020, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6609, norm(y): 1.0005, norm:1.2442, tok/sec: 100609.18, flops:88.10, batch-reuse:1
@ 9097 train 3.8775 , allloss: 3.8910, dt: 1277.16ms, fracRes: 0.6010, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6610, norm(y): 1.0004, norm:1.0083, tok/sec: 102627.42, flops:89.87, batch-reuse:1
@ 9098 train 3.8109 , allloss: 3.8244, dt: 1303.25ms, fracRes: 0.6014, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6589, norm(y): 1.0005, norm:1.0133, tok/sec: 100573.34, flops:88.07, batch-reuse:1
@ 9099 train 3.8849 , allloss: 3.8985, dt: 1295.32ms, fracRes: 0.6012, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6590, norm(y): 1.0003, norm:1.2062, tok/sec: 101188.80, flops:88.61, batch-reuse:1
@ 9100 train 3.9033 , allloss: 3.9182, dt: 1308.71ms, fracRes: 0.6013, norm(attn): 0.1562, norm(output): 0.2500, norm(x): 0.6633, norm(y): 1.0004, norm:1.1309, tok/sec: 100153.93, flops:87.70, batch-reuse:1
@ 9101 train 3.9930 , allloss: 4.0065, dt: 1308.73ms, fracRes: 0.6016, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6543, norm(y): 1.0003, norm:1.2337, tok/sec: 100152.21, flops:87.70, batch-reuse:1
@ 9102 train 3.9571 , allloss: 3.9707, dt: 1307.78ms, fracRes: 0.6012, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6579, norm(y): 1.0005, norm:1.2596, tok/sec: 100224.57, flops:87.77, batch-reuse:1
@ 9103 train 3.9949 , allloss: 4.0093, dt: 1310.54ms, fracRes: 0.6015, norm(attn): 0.1553, norm(output): 0.2490, norm(x): 0.6597, norm(y): 1.0003, norm:1.0345, tok/sec: 100013.79, flops:87.58, batch-reuse:1
@ 9104 train 3.8201 , allloss: 3.8338, dt: 1261.64ms, fracRes: 0.6019, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6611, norm(y): 1.0006, norm:1.0287, tok/sec: 103890.56, flops:90.98, batch-reuse:1
@ 9105 train 3.9191 , allloss: 3.9327, dt: 1285.46ms, fracRes: 0.6019, norm(attn): 0.1553, norm(output): 0.2490, norm(x): 0.6631, norm(y): 1.0004, norm:1.0608, tok/sec: 101965.04, flops:89.29, batch-reuse:1
@ 9106 train 3.8853 , allloss: 3.8994, dt: 1271.79ms, fracRes: 0.6018, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6645, norm(y): 1.0004, norm:1.0328, tok/sec: 103060.79, flops:90.25, batch-reuse:1
@ 9107 train 3.9315 , allloss: 3.9449, dt: 1261.70ms, fracRes: 0.6017, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6584, norm(y): 1.0006, norm:0.9353, tok/sec: 103885.08, flops:90.97, batch-reuse:1
@ 9108 train 3.8897 , allloss: 3.9036, dt: 1281.92ms, fracRes: 0.6016, norm(attn): 0.1562, norm(output): 0.2500, norm(x): 0.6612, norm(y): 1.0005, norm:0.9988, tok/sec: 102246.33, flops:89.54, batch-reuse:1
@ 9109 train 4.0856 , allloss: 4.0991, dt: 1262.19ms, fracRes: 0.6021, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6583, norm(y): 1.0003, norm:0.9721, tok/sec: 103844.72, flops:90.94, batch-reuse:1
@ 9110 train 3.8955 , allloss: 3.9090, dt: 1272.82ms, fracRes: 0.6017, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6580, norm(y): 1.0003, norm:0.9730, tok/sec: 102977.29, flops:90.18, batch-reuse:1
@ 9111 train 3.8887 , allloss: 3.9026, dt: 1289.39ms, fracRes: 0.6017, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6591, norm(y): 1.0003, norm:1.0208, tok/sec: 101653.96, flops:89.02, batch-reuse:1
@ 9112 train 3.8900 , allloss: 3.9037, dt: 1256.71ms, fracRes: 0.6020, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6573, norm(y): 1.0004, norm:0.9106, tok/sec: 104297.73, flops:91.33, batch-reuse:1
@ 9113 train 3.7791 , allloss: 3.7928, dt: 1248.18ms, fracRes: 0.6017, norm(attn): 0.1553, norm(output): 0.2471, norm(x): 0.6549, norm(y): 1.0006, norm:0.9357, tok/sec: 105010.50, flops:91.96, batch-reuse:1
@ 9114 train 3.8148 , allloss: 3.8289, dt: 1253.79ms, fracRes: 0.6014, norm(attn): 0.1553, norm(output): 0.2471, norm(x): 0.6550, norm(y): 1.0006, norm:0.8905, tok/sec: 104540.54, flops:91.54, batch-reuse:1
@ 9115 train 3.9800 , allloss: 3.9952, dt: 1259.47ms, fracRes: 0.6018, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6560, norm(y): 1.0003, norm:1.3319, tok/sec: 104069.09, flops:91.13, batch-reuse:1
@ 9116 train 3.9117 , allloss: 3.9258, dt: 1270.57ms, fracRes: 0.6013, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6555, norm(y): 1.0004, norm:1.0635, tok/sec: 103160.03, flops:90.34, batch-reuse:1
@ 9117 train 3.8779 , allloss: 3.8916, dt: 1287.18ms, fracRes: 0.6008, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6537, norm(y): 1.0002, norm:1.0379, tok/sec: 101829.09, flops:89.17, batch-reuse:1
@ 9118 train 3.8764 , allloss: 3.8906, dt: 1298.30ms, fracRes: 0.6012, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6560, norm(y): 1.0003, norm:0.9312, tok/sec: 100956.91, flops:88.41, batch-reuse:1
@ 9119 train 4.0349 , allloss: 4.0487, dt: 1302.27ms, fracRes: 0.6003, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6556, norm(y): 1.0000, norm:0.8595, tok/sec: 100648.67, flops:88.14, batch-reuse:1
@ 9120 train 4.1032 , allloss: 4.1166, dt: 1306.37ms, fracRes: 0.6000, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6554, norm(y): 0.9999, norm:0.9022, tok/sec: 100333.29, flops:87.86, batch-reuse:1
@ 9121 train 4.1013 , allloss: 4.1150, dt: 1280.68ms, fracRes: 0.6001, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6582, norm(y): 1.0003, norm:1.1329, tok/sec: 102345.56, flops:89.62, batch-reuse:1
@ 9122 train 4.0593 , allloss: 4.0734, dt: 1280.58ms, fracRes: 0.5999, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6594, norm(y): 1.0001, norm:1.0148, tok/sec: 102353.29, flops:89.63, batch-reuse:1
@ 9123 train 4.0948 , allloss: 4.1085, dt: 1266.26ms, fracRes: 0.6005, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6576, norm(y): 1.0001, norm:1.2512, tok/sec: 103510.88, flops:90.64, batch-reuse:1
@ 9124 train 4.1148 , allloss: 4.1290, dt: 1276.81ms, fracRes: 0.6011, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6615, norm(y): 1.0001, norm:0.9960, tok/sec: 102656.02, flops:89.89, batch-reuse:1
@ 9125 train 4.1365 , allloss: 4.1510, dt: 1271.57ms, fracRes: 0.6018, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6621, norm(y): 1.0002, norm:1.1278, tok/sec: 103079.24, flops:90.27, batch-reuse:1
@ 9126 train 4.0120 , allloss: 4.0261, dt: 1278.06ms, fracRes: 0.6017, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6617, norm(y): 1.0004, norm:1.1882, tok/sec: 102555.17, flops:89.81, batch-reuse:1
@ 9127 train 4.2184 , allloss: 4.2322, dt: 1272.12ms, fracRes: 0.6003, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6598, norm(y): 0.9999, norm:0.9138, tok/sec: 103034.50, flops:90.23, batch-reuse:1
@ 9128 train 4.1735 , allloss: 4.1870, dt: 1290.33ms, fracRes: 0.6010, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6578, norm(y): 0.9998, norm:1.0242, tok/sec: 101580.16, flops:88.95, batch-reuse:1
@ 9129 train 4.2304 , allloss: 4.2441, dt: 1299.11ms, fracRes: 0.6010, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6573, norm(y): 0.9998, norm:0.9737, tok/sec: 100893.75, flops:88.35, batch-reuse:1
@ 9130 train 4.1408 , allloss: 4.1548, dt: 1283.17ms, fracRes: 0.6018, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6593, norm(y): 1.0001, norm:1.0322, tok/sec: 102147.29, flops:89.45, batch-reuse:1
@ 9131 train 4.1625 , allloss: 4.1764, dt: 1286.33ms, fracRes: 0.6018, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6616, norm(y): 1.0000, norm:0.9594, tok/sec: 101895.98, flops:89.23, batch-reuse:1
@ 9132 train 4.1484 , allloss: 4.1619, dt: 1262.68ms, fracRes: 0.6017, norm(attn): 0.1553, norm(output): 0.2490, norm(x): 0.6592, norm(y): 1.0000, norm:1.0203, tok/sec: 103804.66, flops:90.90, batch-reuse:1
@ 9133 train 4.1400 , allloss: 4.1540, dt: 1250.94ms, fracRes: 0.6009, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6585, norm(y): 1.0001, norm:1.0034, tok/sec: 104779.00, flops:91.75, batch-reuse:1
@ 9134 train 4.1091 , allloss: 4.1233, dt: 1264.09ms, fracRes: 0.6008, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6592, norm(y): 1.0000, norm:1.0095, tok/sec: 103688.74, flops:90.80, batch-reuse:1
@ 9135 train 3.9645 , allloss: 3.9785, dt: 1264.31ms, fracRes: 0.6005, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6598, norm(y): 0.9999, norm:1.0941, tok/sec: 103670.53, flops:90.78, batch-reuse:1
@ 9136 train 4.1486 , allloss: 4.1625, dt: 1282.97ms, fracRes: 0.6007, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6574, norm(y): 0.9999, norm:1.0411, tok/sec: 102163.14, flops:89.46, batch-reuse:1
@ 9137 train 4.0759 , allloss: 4.0902, dt: 1280.39ms, fracRes: 0.6006, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6620, norm(y): 0.9999, norm:1.0693, tok/sec: 102369.09, flops:89.64, batch-reuse:1
@ 9138 train 4.0847 , allloss: 4.0983, dt: 1286.17ms, fracRes: 0.6011, norm(attn): 0.1562, norm(output): 0.2500, norm(x): 0.6619, norm(y): 1.0002, norm:1.0311, tok/sec: 101908.50, flops:89.24, batch-reuse:1
@ 9139 train 4.0675 , allloss: 4.0811, dt: 1317.84ms, fracRes: 0.6009, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6594, norm(y): 1.0001, norm:0.9340, tok/sec: 99459.59, flops:87.10, batch-reuse:1
@ 9140 train 4.1037 , allloss: 4.1174, dt: 1295.24ms, fracRes: 0.5999, norm(attn): 0.1572, norm(output): 0.2480, norm(x): 0.6563, norm(y): 1.0001, norm:1.0522, tok/sec: 101195.30, flops:88.62, batch-reuse:1
@ 9141 train 4.1002 , allloss: 4.1141, dt: 1278.19ms, fracRes: 0.6000, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6542, norm(y): 1.0000, norm:0.9983, tok/sec: 102545.15, flops:89.80, batch-reuse:1
@ 9142 train 4.1456 , allloss: 4.1599, dt: 1271.67ms, fracRes: 0.6013, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6551, norm(y): 1.0000, norm:1.0261, tok/sec: 103070.66, flops:90.26, batch-reuse:1
@ 9143 train 4.0855 , allloss: 4.0996, dt: 1264.55ms, fracRes: 0.6021, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6579, norm(y): 1.0000, norm:0.9563, tok/sec: 103650.71, flops:90.77, batch-reuse:1
@ 9144 train 4.0687 , allloss: 4.0822, dt: 1261.45ms, fracRes: 0.6015, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6541, norm(y): 0.9999, norm:0.9892, tok/sec: 103905.76, flops:90.99, batch-reuse:1
@ 9145 train 4.0068 , allloss: 4.0255, dt: 1266.23ms, fracRes: 0.6021, norm(attn): 0.1582, norm(output): 0.2520, norm(x): 0.6612, norm(y): 0.9997, norm:1.3537, tok/sec: 103513.90, flops:90.65, batch-reuse:1
@ 9146 train 4.1378 , allloss: 4.1519, dt: 1257.66ms, fracRes: 0.6015, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6618, norm(y): 0.9999, norm:1.0095, tok/sec: 104218.76, flops:91.26, batch-reuse:1
@ 9147 train 4.0520 , allloss: 4.0659, dt: 1263.23ms, fracRes: 0.6014, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6594, norm(y): 0.9998, norm:0.9656, tok/sec: 103759.19, flops:90.86, batch-reuse:1
@ 9148 train 4.1048 , allloss: 4.1188, dt: 1269.15ms, fracRes: 0.6022, norm(attn): 0.1553, norm(output): 0.2471, norm(x): 0.6571, norm(y): 1.0002, norm:0.9679, tok/sec: 103275.54, flops:90.44, batch-reuse:1
@ 9149 train 4.1504 , allloss: 4.1648, dt: 1264.60ms, fracRes: 0.6013, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6569, norm(y): 1.0001, norm:1.1494, tok/sec: 103646.90, flops:90.76, batch-reuse:1
@ 9150 train 4.1715 , allloss: 4.1859, dt: 1270.20ms, fracRes: 0.6002, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6607, norm(y): 0.9999, norm:1.2517, tok/sec: 103189.78, flops:90.36, batch-reuse:1
@ 9151 train 4.0776 , allloss: 4.0920, dt: 1297.87ms, fracRes: 0.6011, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6630, norm(y): 1.0000, norm:1.1511, tok/sec: 100990.46, flops:88.44, batch-reuse:1
@ 9152 train 4.1262 , allloss: 4.1403, dt: 1253.23ms, fracRes: 0.6020, norm(attn): 0.1562, norm(output): 0.2500, norm(x): 0.6631, norm(y): 0.9999, norm:1.2301, tok/sec: 104587.36, flops:91.59, batch-reuse:1
@ 9153 train 4.1587 , allloss: 4.1721, dt: 1250.25ms, fracRes: 0.6018, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6548, norm(y): 0.9998, norm:0.9573, tok/sec: 104837.00, flops:91.80, batch-reuse:1
@ 9154 train 4.2043 , allloss: 4.2183, dt: 1255.13ms, fracRes: 0.6013, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6537, norm(y): 1.0000, norm:1.2087, tok/sec: 104428.96, flops:91.45, batch-reuse:1
@ 9155 train 4.1015 , allloss: 4.1164, dt: 1604.47ms, fracRes: 0.6002, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6613, norm(y): 0.9997, norm:1.1062, tok/sec: 81691.55, flops:71.54, batch-reuse:1
@ 9156 train 4.1550 , allloss: 4.1695, dt: 1283.11ms, fracRes: 0.5998, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6587, norm(y): 0.9998, norm:1.1330, tok/sec: 102151.43, flops:89.45, batch-reuse:1
@ 9157 train 4.0892 , allloss: 4.1029, dt: 1301.21ms, fracRes: 0.6003, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6556, norm(y): 0.9999, norm:1.0563, tok/sec: 100730.51, flops:88.21, batch-reuse:1
@ 9158 train 4.0373 , allloss: 4.0510, dt: 1317.87ms, fracRes: 0.6014, norm(attn): 0.1562, norm(output): 0.2471, norm(x): 0.6581, norm(y): 0.9999, norm:0.9479, tok/sec: 99457.09, flops:87.09, batch-reuse:1
@ 9159 train 4.0604 , allloss: 4.0742, dt: 1304.96ms, fracRes: 0.6020, norm(attn): 0.1543, norm(output): 0.2471, norm(x): 0.6631, norm(y): 0.9999, norm:1.0046, tok/sec: 100441.25, flops:87.95, batch-reuse:1
@ 9160 train 4.1638 , allloss: 4.1772, dt: 1284.73ms, fracRes: 0.6010, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6614, norm(y): 1.0000, norm:0.9324, tok/sec: 102022.71, flops:89.34, batch-reuse:1
@ 9161 train 4.1660 , allloss: 4.1794, dt: 1246.74ms, fracRes: 0.6006, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6636, norm(y): 0.9997, norm:0.9663, tok/sec: 105131.55, flops:92.06, batch-reuse:1
@ 9162 train 4.1637 , allloss: 4.1768, dt: 1288.31ms, fracRes: 0.6004, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6594, norm(y): 0.9997, norm:1.0173, tok/sec: 101739.41, flops:89.09, batch-reuse:1
@ 9163 train 4.2236 , allloss: 4.2370, dt: 1319.89ms, fracRes: 0.6009, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6585, norm(y): 0.9998, norm:1.1916, tok/sec: 99305.57, flops:86.96, batch-reuse:1
@ 9164 train 4.0810 , allloss: 4.0947, dt: 1268.68ms, fracRes: 0.6015, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6610, norm(y): 1.0001, norm:1.5134, tok/sec: 103314.04, flops:90.47, batch-reuse:1
@ 9165 train 4.1546 , allloss: 4.1690, dt: 1260.22ms, fracRes: 0.6018, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6581, norm(y): 0.9999, norm:1.0962, tok/sec: 104007.00, flops:91.08, batch-reuse:1
@ 9166 train 4.0607 , allloss: 4.0743, dt: 1283.63ms, fracRes: 0.6015, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6578, norm(y): 0.9999, norm:1.0791, tok/sec: 102110.51, flops:89.42, batch-reuse:1
@ 9167 train 3.9764 , allloss: 3.9900, dt: 1289.24ms, fracRes: 0.6015, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6594, norm(y): 1.0001, norm:1.1417, tok/sec: 101665.92, flops:89.03, batch-reuse:1
@ 9168 train 4.1281 , allloss: 4.1420, dt: 1264.98ms, fracRes: 0.6002, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6594, norm(y): 0.9998, norm:0.9171, tok/sec: 103616.10, flops:90.74, batch-reuse:1
@ 9169 train 4.1267 , allloss: 4.1404, dt: 1265.56ms, fracRes: 0.6004, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6584, norm(y): 0.9999, norm:1.1206, tok/sec: 103568.33, flops:90.69, batch-reuse:1
@ 9170 train 4.1339 , allloss: 4.1477, dt: 1265.37ms, fracRes: 0.6014, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6598, norm(y): 0.9999, norm:1.0575, tok/sec: 103584.08, flops:90.71, batch-reuse:1
@ 9171 train 4.1383 , allloss: 4.1517, dt: 1249.93ms, fracRes: 0.6023, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6608, norm(y): 0.9999, norm:0.9145, tok/sec: 104863.56, flops:91.83, batch-reuse:1
@ 9172 train 3.9760 , allloss: 3.9891, dt: 1262.61ms, fracRes: 0.6019, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6577, norm(y): 1.0001, norm:1.0425, tok/sec: 103810.62, flops:90.91, batch-reuse:1
@ 9173 train 4.1554 , allloss: 4.1690, dt: 1277.05ms, fracRes: 0.6004, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6587, norm(y): 0.9999, norm:0.9930, tok/sec: 102636.43, flops:89.88, batch-reuse:1
@ 9174 train 4.0213 , allloss: 4.0351, dt: 1300.64ms, fracRes: 0.6003, norm(attn): 0.1562, norm(output): 0.2500, norm(x): 0.6572, norm(y): 1.0001, norm:0.9257, tok/sec: 100775.18, flops:88.25, batch-reuse:1
@ 9175 train 3.9942 , allloss: 4.0075, dt: 1259.44ms, fracRes: 0.6000, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6542, norm(y): 0.9999, norm:1.1054, tok/sec: 104071.32, flops:91.13, batch-reuse:1
@ 9176 train 4.0028 , allloss: 4.0167, dt: 1264.36ms, fracRes: 0.6007, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6559, norm(y): 0.9998, norm:1.0481, tok/sec: 103666.29, flops:90.78, batch-reuse:1
@ 9177 train 4.1122 , allloss: 4.1257, dt: 1296.87ms, fracRes: 0.6011, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6553, norm(y): 0.9998, norm:0.8868, tok/sec: 101068.18, flops:88.50, batch-reuse:1
@ 9178 train 4.1107 , allloss: 4.1242, dt: 1302.13ms, fracRes: 0.6011, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6540, norm(y): 0.9998, norm:0.9008, tok/sec: 100659.41, flops:88.15, batch-reuse:1
@ 9179 train 4.0843 , allloss: 4.0976, dt: 1265.71ms, fracRes: 0.6011, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6563, norm(y): 1.0000, norm:0.8694, tok/sec: 103556.47, flops:90.68, batch-reuse:1
@ 9180 train 4.0724 , allloss: 4.0860, dt: 1269.58ms, fracRes: 0.6010, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6597, norm(y): 1.0000, norm:0.8732, tok/sec: 103240.39, flops:90.41, batch-reuse:1
@ 9181 train 4.2215 , allloss: 4.2354, dt: 1279.41ms, fracRes: 0.6011, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6577, norm(y): 1.0000, norm:0.9108, tok/sec: 102447.33, flops:89.71, batch-reuse:1
@ 9182 train 4.1224 , allloss: 4.1354, dt: 1292.83ms, fracRes: 0.6014, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6561, norm(y): 1.0000, norm:0.9013, tok/sec: 101383.99, flops:88.78, batch-reuse:1
@ 9183 train 4.0374 , allloss: 4.0507, dt: 1299.46ms, fracRes: 0.6013, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6559, norm(y): 1.0000, norm:0.8270, tok/sec: 100866.74, flops:88.33, batch-reuse:1
@ 9184 train 4.1284 , allloss: 4.1420, dt: 1276.02ms, fracRes: 0.6015, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6568, norm(y): 0.9999, norm:0.9687, tok/sec: 102719.35, flops:89.95, batch-reuse:1
@ 9185 train 4.0323 , allloss: 4.0458, dt: 1270.15ms, fracRes: 0.6019, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6589, norm(y): 1.0000, norm:0.8955, tok/sec: 103193.82, flops:90.37, batch-reuse:1
@ 9186 train 4.0479 , allloss: 4.0615, dt: 1289.30ms, fracRes: 0.6012, norm(attn): 0.1572, norm(output): 0.2480, norm(x): 0.6570, norm(y): 0.9999, norm:0.8636, tok/sec: 101661.52, flops:89.02, batch-reuse:1
@ 9187 train 4.2154 , allloss: 4.2297, dt: 1292.37ms, fracRes: 0.6016, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6574, norm(y): 0.9999, norm:1.0299, tok/sec: 101419.98, flops:88.81, batch-reuse:1
@ 9188 train 4.0893 , allloss: 4.1026, dt: 1270.25ms, fracRes: 0.6008, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6557, norm(y): 0.9998, norm:0.9067, tok/sec: 103185.77, flops:90.36, batch-reuse:1
@ 9189 train 4.1212 , allloss: 4.1349, dt: 1287.99ms, fracRes: 0.6005, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6584, norm(y): 0.9996, norm:1.0113, tok/sec: 101764.44, flops:89.11, batch-reuse:1
@ 9190 train 3.9934 , allloss: 4.0099, dt: 1298.08ms, fracRes: 0.6014, norm(attn): 0.1592, norm(output): 0.2539, norm(x): 0.6687, norm(y): 0.9990, norm:1.8830, tok/sec: 100973.95, flops:88.42, batch-reuse:1
@ 9191 train 4.1294 , allloss: 4.1433, dt: 1264.62ms, fracRes: 0.6010, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6520, norm(y): 0.9997, norm:1.2250, tok/sec: 103644.99, flops:90.76, batch-reuse:1
@ 9192 train 3.9426 , allloss: 3.9574, dt: 1280.53ms, fracRes: 0.6007, norm(attn): 0.1572, norm(output): 0.2471, norm(x): 0.6493, norm(y): 0.9998, norm:1.2102, tok/sec: 102357.33, flops:89.63, batch-reuse:1
@ 9193 train 4.0984 , allloss: 4.1119, dt: 1263.17ms, fracRes: 0.6007, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6523, norm(y): 0.9997, norm:1.0609, tok/sec: 103764.59, flops:90.87, batch-reuse:1
@ 9194 train 4.0078 , allloss: 4.0211, dt: 1283.37ms, fracRes: 0.6014, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6541, norm(y): 0.9997, norm:0.9229, tok/sec: 102131.47, flops:89.44, batch-reuse:1
@ 9195 train 4.0835 , allloss: 4.0967, dt: 1268.40ms, fracRes: 0.6016, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6544, norm(y): 0.9997, norm:1.0449, tok/sec: 103336.86, flops:90.49, batch-reuse:1
@ 9196 train 4.1632 , allloss: 4.1765, dt: 1288.01ms, fracRes: 0.6011, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6552, norm(y): 0.9997, norm:1.0456, tok/sec: 101763.50, flops:89.11, batch-reuse:1
@ 9197 train 4.0012 , allloss: 4.0145, dt: 1268.50ms, fracRes: 0.6004, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6557, norm(y): 0.9998, norm:0.9078, tok/sec: 103328.70, flops:90.48, batch-reuse:1
@ 9198 train 4.0286 , allloss: 4.0416, dt: 1278.98ms, fracRes: 0.5998, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6569, norm(y): 0.9998, norm:0.8739, tok/sec: 102481.91, flops:89.74, batch-reuse:1
@ 9199 train 4.0273 , allloss: 4.0407, dt: 1270.55ms, fracRes: 0.6004, norm(attn): 0.1562, norm(output): 0.2500, norm(x): 0.6591, norm(y): 0.9998, norm:0.8727, tok/sec: 103161.43, flops:90.34, batch-reuse:1
@ 9200 train 4.0856 , allloss: 4.0989, dt: 1282.55ms, fracRes: 0.6009, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6546, norm(y): 0.9997, norm:0.9359, tok/sec: 102196.47, flops:89.49, batch-reuse:1
@ 9201 train 4.0151 , allloss: 4.0285, dt: 1266.12ms, fracRes: 0.6018, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6542, norm(y): 0.9998, norm:0.8962, tok/sec: 103522.73, flops:90.65, batch-reuse:1
@ 9202 train 4.0647 , allloss: 4.0780, dt: 1266.71ms, fracRes: 0.6010, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6539, norm(y): 0.9996, norm:0.9152, tok/sec: 103474.72, flops:90.61, batch-reuse:1
@ 9203 train 4.0921 , allloss: 4.1058, dt: 1294.28ms, fracRes: 0.6020, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6550, norm(y): 1.0000, norm:0.8712, tok/sec: 101270.16, flops:88.68, batch-reuse:1
@ 9204 train 4.1366 , allloss: 4.1501, dt: 1286.11ms, fracRes: 0.6019, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6535, norm(y): 0.9999, norm:0.9543, tok/sec: 101913.26, flops:89.24, batch-reuse:1
@ 9205 train 3.9956 , allloss: 4.0093, dt: 1286.08ms, fracRes: 0.6015, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6555, norm(y): 0.9998, norm:1.0089, tok/sec: 101915.93, flops:89.25, batch-reuse:1
@ 9206 train 4.0535 , allloss: 4.0678, dt: 1255.86ms, fracRes: 0.6013, norm(attn): 0.1572, norm(output): 0.2480, norm(x): 0.6589, norm(y): 0.9997, norm:0.8991, tok/sec: 104367.98, flops:91.39, batch-reuse:1
@ 9207 train 4.0358 , allloss: 4.0490, dt: 1256.45ms, fracRes: 0.6009, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6585, norm(y): 0.9998, norm:1.0241, tok/sec: 104319.00, flops:91.35, batch-reuse:1
@ 9208 train 4.0236 , allloss: 4.0366, dt: 1280.61ms, fracRes: 0.6007, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6590, norm(y): 1.0000, norm:0.9926, tok/sec: 102351.52, flops:89.63, batch-reuse:1
@ 9209 train 4.0231 , allloss: 4.0362, dt: 1261.39ms, fracRes: 0.6012, norm(attn): 0.1562, norm(output): 0.2500, norm(x): 0.6604, norm(y): 1.0001, norm:0.8838, tok/sec: 103911.06, flops:90.99, batch-reuse:1
@ 9210 train 4.1334 , allloss: 4.1470, dt: 1291.43ms, fracRes: 0.6017, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6584, norm(y): 0.9998, norm:0.9745, tok/sec: 101493.75, flops:88.88, batch-reuse:1
@ 9211 train 3.9941 , allloss: 4.0074, dt: 1280.80ms, fracRes: 0.6022, norm(attn): 0.1562, norm(output): 0.2500, norm(x): 0.6586, norm(y): 0.9999, norm:0.8937, tok/sec: 102335.67, flops:89.61, batch-reuse:1
@ 9212 train 4.0115 , allloss: 4.0253, dt: 1261.31ms, fracRes: 0.6026, norm(attn): 0.1562, norm(output): 0.2500, norm(x): 0.6594, norm(y): 0.9999, norm:0.8815, tok/sec: 103917.35, flops:91.00, batch-reuse:1
@ 9213 train 4.0051 , allloss: 4.0187, dt: 1297.15ms, fracRes: 0.6019, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6550, norm(y): 1.0000, norm:0.8458, tok/sec: 101046.33, flops:88.48, batch-reuse:1
@ 9214 train 4.0668 , allloss: 4.0801, dt: 1278.46ms, fracRes: 0.6011, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6537, norm(y): 0.9999, norm:0.8804, tok/sec: 102523.42, flops:89.78, batch-reuse:1
@ 9215 train 4.1195 , allloss: 4.1331, dt: 1257.88ms, fracRes: 0.6008, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6546, norm(y): 0.9997, norm:0.9361, tok/sec: 104200.76, flops:91.25, batch-reuse:1
@ 9216 train 4.0445 , allloss: 4.0583, dt: 1264.97ms, fracRes: 0.6004, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6532, norm(y): 0.9999, norm:0.8971, tok/sec: 103616.82, flops:90.74, batch-reuse:1
@ 9217 train 3.9220 , allloss: 3.9353, dt: 1246.69ms, fracRes: 0.6006, norm(attn): 0.1572, norm(output): 0.2480, norm(x): 0.6526, norm(y): 0.9998, norm:0.8738, tok/sec: 105135.98, flops:92.07, batch-reuse:1
@ 9218 train 3.9541 , allloss: 3.9684, dt: 1266.45ms, fracRes: 0.6010, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6601, norm(y): 0.9998, norm:0.9612, tok/sec: 103495.53, flops:90.63, batch-reuse:1
@ 9219 train 3.9540 , allloss: 3.9675, dt: 1254.78ms, fracRes: 0.6010, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6549, norm(y): 0.9996, norm:1.0066, tok/sec: 104457.81, flops:91.47, batch-reuse:1
@ 9220 train 3.9954 , allloss: 4.0094, dt: 1264.87ms, fracRes: 0.6014, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6549, norm(y): 0.9997, norm:1.1043, tok/sec: 103624.55, flops:90.74, batch-reuse:1
@ 9221 train 4.0068 , allloss: 4.0206, dt: 1287.56ms, fracRes: 0.6012, norm(attn): 0.1562, norm(output): 0.2500, norm(x): 0.6578, norm(y): 0.9996, norm:1.1729, tok/sec: 101798.70, flops:89.14, batch-reuse:1
@ 9222 train 4.0514 , allloss: 4.0649, dt: 1277.14ms, fracRes: 0.6012, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6559, norm(y): 0.9995, norm:0.9455, tok/sec: 102629.70, flops:89.87, batch-reuse:1
@ 9223 train 3.9776 , allloss: 3.9916, dt: 1270.93ms, fracRes: 0.6013, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6581, norm(y): 0.9996, norm:0.9606, tok/sec: 103131.12, flops:90.31, batch-reuse:1
@ 9224 train 4.0417 , allloss: 4.0549, dt: 1250.52ms, fracRes: 0.6013, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6547, norm(y): 0.9997, norm:1.0638, tok/sec: 104814.32, flops:91.78, batch-reuse:1
@ 9225 train 3.9855 , allloss: 3.9985, dt: 1280.32ms, fracRes: 0.6011, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6554, norm(y): 0.9998, norm:1.0656, tok/sec: 102374.53, flops:89.65, batch-reuse:1
@ 9226 train 3.9832 , allloss: 3.9971, dt: 1260.10ms, fracRes: 0.6010, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6567, norm(y): 0.9998, norm:0.9653, tok/sec: 104017.19, flops:91.09, batch-reuse:1
@ 9227 train 3.9122 , allloss: 3.9252, dt: 1245.07ms, fracRes: 0.6012, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6557, norm(y): 0.9997, norm:0.8365, tok/sec: 105273.20, flops:92.19, batch-reuse:1
@ 9228 train 3.9387 , allloss: 3.9520, dt: 1282.52ms, fracRes: 0.6015, norm(attn): 0.1562, norm(output): 0.2471, norm(x): 0.6513, norm(y): 0.9999, norm:0.9735, tok/sec: 102199.19, flops:89.49, batch-reuse:1
@ 9229 train 4.0434 , allloss: 4.0573, dt: 1280.88ms, fracRes: 0.6016, norm(attn): 0.1572, norm(output): 0.2480, norm(x): 0.6542, norm(y): 0.9998, norm:1.0164, tok/sec: 102329.78, flops:89.61, batch-reuse:1
@ 9230 train 3.9564 , allloss: 3.9705, dt: 1267.68ms, fracRes: 0.6006, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6522, norm(y): 0.9998, norm:0.9307, tok/sec: 103394.95, flops:90.54, batch-reuse:1
@ 9231 train 4.0728 , allloss: 4.0866, dt: 1276.95ms, fracRes: 0.6005, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6537, norm(y): 0.9995, norm:0.9121, tok/sec: 102644.75, flops:89.88, batch-reuse:1
@ 9232 train 4.0072 , allloss: 4.0211, dt: 1285.31ms, fracRes: 0.6003, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6502, norm(y): 0.9997, norm:0.9256, tok/sec: 101977.27, flops:89.30, batch-reuse:1
@ 9233 train 4.0906 , allloss: 4.1047, dt: 1269.00ms, fracRes: 0.6012, norm(attn): 0.1572, norm(output): 0.2480, norm(x): 0.6493, norm(y): 0.9997, norm:0.9039, tok/sec: 103287.33, flops:90.45, batch-reuse:1
@ 9234 train 3.9735 , allloss: 3.9869, dt: 1270.32ms, fracRes: 0.6009, norm(attn): 0.1572, norm(output): 0.2480, norm(x): 0.6495, norm(y): 0.9998, norm:0.8830, tok/sec: 103180.31, flops:90.35, batch-reuse:1
@ 9235 train 4.0272 , allloss: 4.0408, dt: 1259.94ms, fracRes: 0.6017, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6523, norm(y): 0.9998, norm:0.9120, tok/sec: 104030.59, flops:91.10, batch-reuse:1
@ 9236 train 3.9396 , allloss: 3.9531, dt: 1266.62ms, fracRes: 0.6010, norm(attn): 0.1562, norm(output): 0.2471, norm(x): 0.6510, norm(y): 0.9997, norm:0.9502, tok/sec: 103481.40, flops:90.62, batch-reuse:1
@ 9237 train 3.9859 , allloss: 3.9992, dt: 1270.30ms, fracRes: 0.6006, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6495, norm(y): 0.9997, norm:0.8780, tok/sec: 103181.93, flops:90.35, batch-reuse:1
@ 9238 train 4.0146 , allloss: 4.0289, dt: 1282.42ms, fracRes: 0.6009, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6519, norm(y): 0.9995, norm:0.9923, tok/sec: 102206.54, flops:89.50, batch-reuse:1
@ 9239 train 4.0282 , allloss: 4.0419, dt: 1257.27ms, fracRes: 0.6000, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6525, norm(y): 0.9993, norm:0.9304, tok/sec: 104251.50, flops:91.29, batch-reuse:1
@ 9240 train 3.9737 , allloss: 3.9874, dt: 1314.39ms, fracRes: 0.6000, norm(attn): 0.1592, norm(output): 0.2480, norm(x): 0.6533, norm(y): 0.9994, norm:0.9200, tok/sec: 99720.59, flops:87.32, batch-reuse:1
@ 9241 train 4.0367 , allloss: 4.0500, dt: 1305.01ms, fracRes: 0.6012, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6538, norm(y): 0.9995, norm:0.8504, tok/sec: 100437.59, flops:87.95, batch-reuse:1
@ 9242 train 4.3069 , allloss: 4.3202, dt: 1304.93ms, fracRes: 0.6019, norm(attn): 0.1553, norm(output): 0.2490, norm(x): 0.6560, norm(y): 0.9990, norm:0.9584, tok/sec: 100443.67, flops:87.96, batch-reuse:1
@ 9243 train 4.1151 , allloss: 4.1281, dt: 1307.36ms, fracRes: 0.6007, norm(attn): 0.1562, norm(output): 0.2500, norm(x): 0.6552, norm(y): 0.9992, norm:1.0153, tok/sec: 100256.96, flops:87.79, batch-reuse:1
@ 9244 train 4.0575 , allloss: 4.0710, dt: 1292.96ms, fracRes: 0.6006, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6528, norm(y): 0.9994, norm:1.1236, tok/sec: 101373.28, flops:88.77, batch-reuse:1
@ 9245 train 4.0069 , allloss: 4.0212, dt: 1257.31ms, fracRes: 0.6009, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6524, norm(y): 0.9994, norm:1.0586, tok/sec: 104247.89, flops:91.29, batch-reuse:1
@ 9246 train 4.0044 , allloss: 4.0186, dt: 1263.46ms, fracRes: 0.6008, norm(attn): 0.1572, norm(output): 0.2480, norm(x): 0.6522, norm(y): 0.9995, norm:0.9792, tok/sec: 103740.72, flops:90.84, batch-reuse:1
@ 9247 train 3.9740 , allloss: 3.9876, dt: 1272.07ms, fracRes: 0.6012, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6516, norm(y): 0.9997, norm:0.8837, tok/sec: 103038.75, flops:90.23, batch-reuse:1
@ 9248 train 3.9928 , allloss: 4.0068, dt: 1251.82ms, fracRes: 0.6011, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6558, norm(y): 0.9997, norm:1.0021, tok/sec: 104704.88, flops:91.69, batch-reuse:1
@ 9249 train 4.0813 , allloss: 4.0948, dt: 1268.26ms, fracRes: 0.6019, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6556, norm(y): 0.9995, norm:0.9114, tok/sec: 103348.19, flops:90.50, batch-reuse:1
@ 9250 train 3.9717 , allloss: 3.9847, dt: 1256.15ms, fracRes: 0.6024, norm(attn): 0.1553, norm(output): 0.2461, norm(x): 0.6532, norm(y): 0.9997, norm:0.9803, tok/sec: 104344.56, flops:91.37, batch-reuse:1
@ 9251 train 4.1522 , allloss: 4.1663, dt: 1273.65ms, fracRes: 0.6021, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6526, norm(y): 0.9994, norm:1.0185, tok/sec: 102910.17, flops:90.12, batch-reuse:1
@ 9252 train 4.0427 , allloss: 4.0566, dt: 1302.27ms, fracRes: 0.6007, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6504, norm(y): 0.9994, norm:0.9993, tok/sec: 100648.96, flops:88.14, batch-reuse:1
@ 9253 train 3.9916 , allloss: 4.0052, dt: 1276.96ms, fracRes: 0.6003, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6534, norm(y): 0.9994, norm:0.9609, tok/sec: 102643.52, flops:89.88, batch-reuse:1
@ 9254 train 4.0338 , allloss: 4.0468, dt: 1269.07ms, fracRes: 0.6017, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6549, norm(y): 0.9995, norm:0.9655, tok/sec: 103282.02, flops:90.44, batch-reuse:1
@ 9255 train 3.8907 , allloss: 3.9041, dt: 1264.03ms, fracRes: 0.6016, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6542, norm(y): 0.9996, norm:0.8928, tok/sec: 103693.66, flops:90.80, batch-reuse:1
@ 9256 train 3.8115 , allloss: 3.8252, dt: 1297.29ms, fracRes: 0.6012, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6530, norm(y): 0.9999, norm:0.9619, tok/sec: 101035.32, flops:88.48, batch-reuse:1
@ 9257 train 3.9162 , allloss: 3.9305, dt: 1318.79ms, fracRes: 0.6010, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6542, norm(y): 0.9999, norm:0.9665, tok/sec: 99387.76, flops:87.03, batch-reuse:1
@ 9258 train 3.8269 , allloss: 3.8403, dt: 1303.82ms, fracRes: 0.6000, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6492, norm(y): 0.9996, norm:0.8778, tok/sec: 100529.35, flops:88.03, batch-reuse:1
@ 9259 train 3.9056 , allloss: 3.9228, dt: 1293.37ms, fracRes: 0.6008, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6507, norm(y): 0.9997, norm:0.9565, tok/sec: 101341.83, flops:88.74, batch-reuse:1
@ 9260 train 3.8320 , allloss: 3.8486, dt: 1265.77ms, fracRes: 0.6015, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6534, norm(y): 0.9995, norm:1.1614, tok/sec: 103551.18, flops:90.68, batch-reuse:1
@ 9261 train 3.7761 , allloss: 3.7897, dt: 1296.86ms, fracRes: 0.6012, norm(attn): 0.1572, norm(output): 0.2480, norm(x): 0.6483, norm(y): 0.9999, norm:0.9197, tok/sec: 101068.96, flops:88.50, batch-reuse:1
@ 9262 train 3.9023 , allloss: 3.9161, dt: 1257.34ms, fracRes: 0.6016, norm(attn): 0.1562, norm(output): 0.2471, norm(x): 0.6498, norm(y): 1.0000, norm:0.9350, tok/sec: 104245.36, flops:91.29, batch-reuse:1
@ 9263 train 3.8174 , allloss: 3.8313, dt: 1285.41ms, fracRes: 0.6005, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6521, norm(y): 0.9999, norm:1.0796, tok/sec: 101969.18, flops:89.29, batch-reuse:1
@ 9264 train 3.8476 , allloss: 3.8647, dt: 1249.36ms, fracRes: 0.6010, norm(attn): 0.1562, norm(output): 0.2471, norm(x): 0.6499, norm(y): 0.9998, norm:1.2072, tok/sec: 104911.25, flops:91.87, batch-reuse:1
@ 9265 train 3.9638 , allloss: 3.9770, dt: 1267.99ms, fracRes: 0.6010, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6523, norm(y): 0.9996, norm:0.9967, tok/sec: 103369.81, flops:90.52, batch-reuse:1
@ 9266 train 3.9842 , allloss: 3.9978, dt: 1266.12ms, fracRes: 0.6008, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6516, norm(y): 0.9995, norm:0.9647, tok/sec: 103522.54, flops:90.65, batch-reuse:1
@ 9267 train 3.8548 , allloss: 3.8684, dt: 1284.96ms, fracRes: 0.6009, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6505, norm(y): 0.9996, norm:1.0921, tok/sec: 102004.48, flops:89.32, batch-reuse:1
@ 9268 train 3.8602 , allloss: 3.8744, dt: 1254.91ms, fracRes: 0.6010, norm(attn): 0.1572, norm(output): 0.2480, norm(x): 0.6504, norm(y): 0.9996, norm:1.1299, tok/sec: 104447.03, flops:91.46, batch-reuse:1
@ 9269 train 3.8858 , allloss: 3.8991, dt: 1264.09ms, fracRes: 0.6010, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6480, norm(y): 0.9994, norm:0.9283, tok/sec: 103688.54, flops:90.80, batch-reuse:1
@ 9270 train 3.8968 , allloss: 3.9105, dt: 1274.51ms, fracRes: 0.6011, norm(attn): 0.1572, norm(output): 0.2480, norm(x): 0.6478, norm(y): 0.9994, norm:0.9083, tok/sec: 102841.00, flops:90.06, batch-reuse:1
@ 9271 train 3.8821 , allloss: 3.8959, dt: 1276.50ms, fracRes: 0.6021, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6476, norm(y): 0.9994, norm:0.9156, tok/sec: 102680.60, flops:89.92, batch-reuse:1
@ 9272 train 3.8877 , allloss: 3.9014, dt: 1259.19ms, fracRes: 0.6022, norm(attn): 0.1562, norm(output): 0.2471, norm(x): 0.6486, norm(y): 0.9995, norm:0.8736, tok/sec: 104091.93, flops:91.15, batch-reuse:1
@ 9273 train 3.8241 , allloss: 3.8387, dt: 1254.08ms, fracRes: 0.6013, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6518, norm(y): 0.9996, norm:1.1094, tok/sec: 104516.73, flops:91.52, batch-reuse:1
@ 9274 train 3.8846 , allloss: 3.8984, dt: 1266.32ms, fracRes: 0.6005, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6535, norm(y): 0.9995, norm:0.9460, tok/sec: 103506.26, flops:90.64, batch-reuse:1
@ 9275 train 3.9144 , allloss: 3.9281, dt: 1258.97ms, fracRes: 0.6010, norm(attn): 0.1572, norm(output): 0.2480, norm(x): 0.6546, norm(y): 0.9995, norm:0.9474, tok/sec: 104110.13, flops:91.17, batch-reuse:1
@ 9276 train 3.9536 , allloss: 3.9671, dt: 1262.19ms, fracRes: 0.6011, norm(attn): 0.1562, norm(output): 0.2471, norm(x): 0.6537, norm(y): 0.9996, norm:1.0009, tok/sec: 103844.88, flops:90.94, batch-reuse:1
@ 9277 train 3.7815 , allloss: 3.7948, dt: 1271.64ms, fracRes: 0.6008, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6543, norm(y): 0.9998, norm:0.9808, tok/sec: 103073.31, flops:90.26, batch-reuse:1
@ 9278 train 3.7761 , allloss: 3.7896, dt: 1258.74ms, fracRes: 0.6001, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6566, norm(y): 0.9998, norm:0.9274, tok/sec: 104129.69, flops:91.18, batch-reuse:1
@ 9279 train 3.8162 , allloss: 3.8292, dt: 1275.53ms, fracRes: 0.6005, norm(attn): 0.1572, norm(output): 0.2480, norm(x): 0.6529, norm(y): 0.9996, norm:0.9181, tok/sec: 102759.19, flops:89.98, batch-reuse:1
@ 9280 train 3.9303 , allloss: 3.9439, dt: 1289.33ms, fracRes: 0.6012, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6560, norm(y): 0.9993, norm:0.8851, tok/sec: 101659.23, flops:89.02, batch-reuse:1
@ 9281 train 3.8562 , allloss: 3.8694, dt: 1289.94ms, fracRes: 0.6014, norm(attn): 0.1582, norm(output): 0.2480, norm(x): 0.6515, norm(y): 0.9994, norm:1.0509, tok/sec: 101610.56, flops:88.98, batch-reuse:1
@ 9282 train 3.8151 , allloss: 3.8289, dt: 1316.97ms, fracRes: 0.6017, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6521, norm(y): 0.9995, norm:0.9797, tok/sec: 99525.29, flops:87.15, batch-reuse:1
@ 9283 train 3.8043 , allloss: 3.8182, dt: 1316.72ms, fracRes: 0.6015, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6519, norm(y): 0.9996, norm:0.9816, tok/sec: 99543.96, flops:87.17, batch-reuse:1
@ 9284 train 3.8853 , allloss: 3.8986, dt: 1269.33ms, fracRes: 0.6005, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6485, norm(y): 0.9995, norm:1.0770, tok/sec: 103260.46, flops:90.42, batch-reuse:1
@ 9285 train 3.8443 , allloss: 3.8576, dt: 1272.45ms, fracRes: 0.6004, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6494, norm(y): 0.9995, norm:1.0345, tok/sec: 103007.51, flops:90.20, batch-reuse:1
@ 9286 train 3.8940 , allloss: 3.9072, dt: 1265.39ms, fracRes: 0.6004, norm(attn): 0.1562, norm(output): 0.2471, norm(x): 0.6488, norm(y): 0.9995, norm:1.0430, tok/sec: 103582.30, flops:90.71, batch-reuse:1
@ 9287 train 3.8116 , allloss: 3.8249, dt: 1265.54ms, fracRes: 0.5998, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6469, norm(y): 0.9994, norm:0.8846, tok/sec: 103569.97, flops:90.69, batch-reuse:1
@ 9288 train 3.9759 , allloss: 3.9893, dt: 1265.73ms, fracRes: 0.6008, norm(attn): 0.1553, norm(output): 0.2461, norm(x): 0.6434, norm(y): 0.9995, norm:1.0373, tok/sec: 103554.60, flops:90.68, batch-reuse:1
@ 9289 train 3.9231 , allloss: 3.9363, dt: 1284.21ms, fracRes: 0.6018, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6472, norm(y): 0.9993, norm:0.9923, tok/sec: 102064.33, flops:89.38, batch-reuse:1
@ 9290 train 3.9248 , allloss: 3.9382, dt: 1285.09ms, fracRes: 0.6025, norm(attn): 0.1572, norm(output): 0.2471, norm(x): 0.6496, norm(y): 0.9994, norm:1.0708, tok/sec: 101994.64, flops:89.32, batch-reuse:1
@ 9291 train 3.8501 , allloss: 3.8638, dt: 1249.98ms, fracRes: 0.6040, norm(attn): 0.1562, norm(output): 0.2471, norm(x): 0.6562, norm(y): 0.9998, norm:1.0823, tok/sec: 104859.10, flops:91.82, batch-reuse:1
@ 9292 train 3.9370 , allloss: 3.9500, dt: 1275.97ms, fracRes: 0.6031, norm(attn): 0.1553, norm(output): 0.2471, norm(x): 0.6523, norm(y): 0.9997, norm:0.8736, tok/sec: 102723.42, flops:89.95, batch-reuse:1
@ 9293 train 3.8614 , allloss: 3.8747, dt: 1291.50ms, fracRes: 0.6020, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6522, norm(y): 0.9996, norm:1.0436, tok/sec: 101488.05, flops:88.87, batch-reuse:1
@ 9294 train 3.8614 , allloss: 3.8749, dt: 1250.61ms, fracRes: 0.6009, norm(attn): 0.1572, norm(output): 0.2480, norm(x): 0.6526, norm(y): 0.9996, norm:1.1423, tok/sec: 104806.54, flops:91.78, batch-reuse:1
@ 9295 train 3.8561 , allloss: 3.8698, dt: 1267.37ms, fracRes: 0.6008, norm(attn): 0.1572, norm(output): 0.2480, norm(x): 0.6548, norm(y): 0.9995, norm:0.9586, tok/sec: 103420.66, flops:90.56, batch-reuse:1
@ 9296 train 3.7945 , allloss: 3.8073, dt: 1254.00ms, fracRes: 0.6009, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6529, norm(y): 0.9995, norm:1.0101, tok/sec: 104522.89, flops:91.53, batch-reuse:1
@ 9297 train 3.7831 , allloss: 3.7962, dt: 1264.22ms, fracRes: 0.6005, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6527, norm(y): 0.9993, norm:1.2161, tok/sec: 103678.00, flops:90.79, batch-reuse:1
@ 9298 train 3.8964 , allloss: 3.9098, dt: 1269.05ms, fracRes: 0.6011, norm(attn): 0.1553, norm(output): 0.2480, norm(x): 0.6530, norm(y): 0.9995, norm:0.9312, tok/sec: 103283.80, flops:90.44, batch-reuse:1
@ 9299 train 3.8886 , allloss: 3.9025, dt: 1277.43ms, fracRes: 0.5992, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6580, norm(y): 0.9991, norm:1.0960, tok/sec: 102605.82, flops:89.85, batch-reuse:1
@ 9300 train 3.8207 , allloss: 3.8348, dt: 1256.72ms, fracRes: 0.6001, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6544, norm(y): 0.9993, norm:1.1343, tok/sec: 104297.17, flops:91.33, batch-reuse:1
@ 9301 train 3.8540 , allloss: 3.8674, dt: 1259.70ms, fracRes: 0.6007, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6535, norm(y): 0.9995, norm:0.9973, tok/sec: 104049.83, flops:91.11, batch-reuse:1
@ 9302 train 4.1230 , allloss: 4.1370, dt: 1285.13ms, fracRes: 0.6012, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6523, norm(y): 0.9992, norm:0.9599, tok/sec: 101991.33, flops:89.31, batch-reuse:1
@ 9303 train 4.1850 , allloss: 4.1994, dt: 1268.79ms, fracRes: 0.6012, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6518, norm(y): 0.9991, norm:1.0072, tok/sec: 103304.86, flops:90.46, batch-reuse:1
@ 9304 train 4.0293 , allloss: 4.0428, dt: 1256.85ms, fracRes: 0.6004, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6500, norm(y): 0.9993, norm:0.9206, tok/sec: 104285.85, flops:91.32, batch-reuse:1
@ 9305 train 3.9739 , allloss: 3.9875, dt: 1262.87ms, fracRes: 0.6004, norm(attn): 0.1582, norm(output): 0.2480, norm(x): 0.6516, norm(y): 0.9992, norm:0.9834, tok/sec: 103789.04, flops:90.89, batch-reuse:1
@ 9306 train 4.1049 , allloss: 4.1186, dt: 1278.69ms, fracRes: 0.6008, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6518, norm(y): 0.9993, norm:1.2796, tok/sec: 102504.82, flops:89.76, batch-reuse:1
@ 9307 train 4.1363 , allloss: 4.1501, dt: 1278.71ms, fracRes: 0.6011, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6530, norm(y): 0.9993, norm:1.1552, tok/sec: 102503.22, flops:89.76, batch-reuse:1
@ 9308 train 4.0947 , allloss: 4.1086, dt: 1272.95ms, fracRes: 0.6022, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6565, norm(y): 0.9994, norm:0.9984, tok/sec: 102967.09, flops:90.17, batch-reuse:1
@ 9309 train 4.0611 , allloss: 4.0743, dt: 1271.12ms, fracRes: 0.6019, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6536, norm(y): 0.9992, norm:0.8936, tok/sec: 103115.20, flops:90.30, batch-reuse:1
@ 9310 train 4.1436 , allloss: 4.1573, dt: 1266.42ms, fracRes: 0.6011, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6558, norm(y): 0.9992, norm:0.9570, tok/sec: 103498.00, flops:90.63, batch-reuse:1
@ 9311 train 4.2252 , allloss: 4.2387, dt: 1270.70ms, fracRes: 0.6014, norm(attn): 0.1582, norm(output): 0.2480, norm(x): 0.6544, norm(y): 0.9991, norm:1.0452, tok/sec: 103149.14, flops:90.33, batch-reuse:1
@ 9312 train 4.0747 , allloss: 4.0878, dt: 1258.83ms, fracRes: 0.6006, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6534, norm(y): 0.9990, norm:0.9510, tok/sec: 104122.29, flops:91.18, batch-reuse:1
@ 9313 train 4.0344 , allloss: 4.0474, dt: 1264.48ms, fracRes: 0.6005, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6552, norm(y): 0.9990, norm:0.9582, tok/sec: 103656.61, flops:90.77, batch-reuse:1
@ 9314 train 4.1234 , allloss: 4.1372, dt: 1261.88ms, fracRes: 0.6005, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6561, norm(y): 0.9991, norm:1.1445, tok/sec: 103870.62, flops:90.96, batch-reuse:1
@ 9315 train 4.1801 , allloss: 4.1937, dt: 1263.06ms, fracRes: 0.6004, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6504, norm(y): 0.9990, norm:0.9338, tok/sec: 103773.27, flops:90.87, batch-reuse:1
@ 9316 train 4.1629 , allloss: 4.1762, dt: 1264.85ms, fracRes: 0.6013, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6523, norm(y): 0.9989, norm:1.1263, tok/sec: 103626.66, flops:90.74, batch-reuse:1
@ 9317 train 4.0984 , allloss: 4.1119, dt: 1261.15ms, fracRes: 0.6002, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6531, norm(y): 0.9987, norm:0.9663, tok/sec: 103930.71, flops:91.01, batch-reuse:1
@ 9318 train 4.0798 , allloss: 4.0940, dt: 1257.66ms, fracRes: 0.5997, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6531, norm(y): 0.9991, norm:0.9748, tok/sec: 104218.58, flops:91.26, batch-reuse:1
@ 9319 train 4.0193 , allloss: 4.0330, dt: 1274.15ms, fracRes: 0.6003, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6491, norm(y): 0.9994, norm:1.0261, tok/sec: 102869.77, flops:90.08, batch-reuse:1
@ 9320 train 4.1032 , allloss: 4.1171, dt: 1290.26ms, fracRes: 0.6005, norm(attn): 0.1572, norm(output): 0.2480, norm(x): 0.6475, norm(y): 0.9991, norm:1.1062, tok/sec: 101585.85, flops:88.96, batch-reuse:1
@ 9321 train 4.0585 , allloss: 4.0719, dt: 1306.85ms, fracRes: 0.6015, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6488, norm(y): 0.9991, norm:1.0107, tok/sec: 100296.30, flops:87.83, batch-reuse:1
@ 9322 train 4.0844 , allloss: 4.0977, dt: 1294.36ms, fracRes: 0.6020, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6517, norm(y): 0.9992, norm:0.9500, tok/sec: 101263.82, flops:88.68, batch-reuse:1
@ 9323 train 4.0882 , allloss: 4.1014, dt: 1271.67ms, fracRes: 0.6019, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6512, norm(y): 0.9992, norm:1.0279, tok/sec: 103070.43, flops:90.26, batch-reuse:1
@ 9324 train 4.1152 , allloss: 4.1291, dt: 1281.70ms, fracRes: 0.6020, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6536, norm(y): 0.9993, norm:1.0630, tok/sec: 102264.04, flops:89.55, batch-reuse:1
@ 9325 train 4.1684 , allloss: 4.1816, dt: 1292.12ms, fracRes: 0.6021, norm(attn): 0.1553, norm(output): 0.2471, norm(x): 0.6498, norm(y): 0.9993, norm:0.9695, tok/sec: 101439.23, flops:88.83, batch-reuse:1
@ 9326 train 4.0231 , allloss: 4.0367, dt: 1266.21ms, fracRes: 0.6016, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6547, norm(y): 0.9990, norm:1.1366, tok/sec: 103515.52, flops:90.65, batch-reuse:1
@ 9327 train 4.1345 , allloss: 4.1477, dt: 1286.06ms, fracRes: 0.6017, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6534, norm(y): 0.9991, norm:0.9923, tok/sec: 101917.38, flops:89.25, batch-reuse:1
@ 9328 train 4.0333 , allloss: 4.0465, dt: 1263.47ms, fracRes: 0.6011, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6518, norm(y): 0.9991, norm:0.9717, tok/sec: 103739.86, flops:90.84, batch-reuse:1
@ 9329 train 4.0601 , allloss: 4.0737, dt: 1268.91ms, fracRes: 0.6002, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6538, norm(y): 0.9990, norm:0.9899, tok/sec: 103295.11, flops:90.45, batch-reuse:1
@ 9330 train 4.0637 , allloss: 4.0778, dt: 1285.12ms, fracRes: 0.6005, norm(attn): 0.1572, norm(output): 0.2480, norm(x): 0.6530, norm(y): 0.9992, norm:1.0595, tok/sec: 101991.96, flops:89.31, batch-reuse:1
@ 9331 train 4.1276 , allloss: 4.1414, dt: 1291.70ms, fracRes: 0.6005, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6551, norm(y): 0.9990, norm:1.0452, tok/sec: 101472.69, flops:88.86, batch-reuse:1
@ 9332 train 4.1641 , allloss: 4.1774, dt: 1277.96ms, fracRes: 0.5994, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6547, norm(y): 0.9988, norm:0.9663, tok/sec: 102563.70, flops:89.81, batch-reuse:1
@ 9333 train 4.1197 , allloss: 4.1328, dt: 1264.52ms, fracRes: 0.6001, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6513, norm(y): 0.9989, norm:0.8540, tok/sec: 103653.64, flops:90.77, batch-reuse:1
@ 9334 train 4.1085 , allloss: 4.1218, dt: 1252.93ms, fracRes: 0.6006, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6527, norm(y): 0.9989, norm:0.9153, tok/sec: 104612.57, flops:91.61, batch-reuse:1
@ 9335 train 4.2211 , allloss: 4.2348, dt: 1278.43ms, fracRes: 0.6017, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6553, norm(y): 0.9992, norm:0.9502, tok/sec: 102526.08, flops:89.78, batch-reuse:1
@ 9336 train 4.4863 , allloss: 4.5001, dt: 1288.31ms, fracRes: 0.6020, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6587, norm(y): 0.9987, norm:1.4039, tok/sec: 101739.18, flops:89.09, batch-reuse:1
@ 9337 train 4.2866 , allloss: 4.3003, dt: 1272.11ms, fracRes: 0.6013, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6567, norm(y): 0.9988, norm:1.3590, tok/sec: 103035.37, flops:90.23, batch-reuse:1
@ 9338 train 4.1525 , allloss: 4.1661, dt: 1297.33ms, fracRes: 0.6009, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6537, norm(y): 0.9989, norm:0.9843, tok/sec: 101032.42, flops:88.47, batch-reuse:1
@ 9339 train 4.0760 , allloss: 4.0898, dt: 1294.48ms, fracRes: 0.6013, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6556, norm(y): 0.9990, norm:1.0549, tok/sec: 101254.61, flops:88.67, batch-reuse:1
@ 9340 train 4.0846 , allloss: 4.0981, dt: 1302.61ms, fracRes: 0.6013, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6552, norm(y): 0.9990, norm:1.0191, tok/sec: 100622.22, flops:88.11, batch-reuse:1
@ 9341 train 4.1584 , allloss: 4.1724, dt: 1299.76ms, fracRes: 0.6013, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6593, norm(y): 0.9990, norm:1.0693, tok/sec: 100843.10, flops:88.31, batch-reuse:1
@ 9342 train 4.0555 , allloss: 4.0688, dt: 1292.54ms, fracRes: 0.6015, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6545, norm(y): 0.9990, norm:0.9485, tok/sec: 101406.55, flops:88.80, batch-reuse:1
@ 9343 train 4.2170 , allloss: 4.2304, dt: 1287.67ms, fracRes: 0.6013, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6556, norm(y): 0.9990, norm:0.9202, tok/sec: 101789.69, flops:89.14, batch-reuse:1
@ 9344 train 4.0148 , allloss: 4.0286, dt: 1267.31ms, fracRes: 0.6015, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6569, norm(y): 0.9991, norm:0.9733, tok/sec: 103425.02, flops:90.57, batch-reuse:1
@ 9345 train 4.1111 , allloss: 4.1246, dt: 1283.65ms, fracRes: 0.6012, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6537, norm(y): 0.9990, norm:0.8772, tok/sec: 102108.72, flops:89.42, batch-reuse:1
@ 9346 train 4.1242 , allloss: 4.1377, dt: 1270.90ms, fracRes: 0.6007, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6543, norm(y): 0.9989, norm:1.0274, tok/sec: 103133.50, flops:90.31, batch-reuse:1
@ 9347 train 4.0469 , allloss: 4.0602, dt: 1266.32ms, fracRes: 0.6008, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6525, norm(y): 0.9990, norm:1.1327, tok/sec: 103506.54, flops:90.64, batch-reuse:1
@ 9348 train 4.0929 , allloss: 4.1062, dt: 1259.40ms, fracRes: 0.6011, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6529, norm(y): 0.9990, norm:1.0553, tok/sec: 104074.73, flops:91.14, batch-reuse:1
@ 9349 train 4.0580 , allloss: 4.0714, dt: 1285.04ms, fracRes: 0.6006, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6554, norm(y): 0.9989, norm:0.8750, tok/sec: 101998.31, flops:89.32, batch-reuse:1
@ 9350 train 4.1267 , allloss: 4.1399, dt: 1281.11ms, fracRes: 0.6012, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6523, norm(y): 0.9989, norm:1.2060, tok/sec: 102311.18, flops:89.59, batch-reuse:1
@ 9351 train 4.0659 , allloss: 4.0791, dt: 1254.59ms, fracRes: 0.6009, norm(attn): 0.1572, norm(output): 0.2480, norm(x): 0.6500, norm(y): 0.9989, norm:0.9924, tok/sec: 104473.77, flops:91.49, batch-reuse:1
@ 9352 train 3.9168 , allloss: 3.9304, dt: 1268.00ms, fracRes: 0.6007, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6532, norm(y): 0.9990, norm:0.9620, tok/sec: 103368.78, flops:90.52, batch-reuse:1
@ 9353 train 4.0790 , allloss: 4.0925, dt: 1256.62ms, fracRes: 0.6001, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6519, norm(y): 0.9989, norm:1.0833, tok/sec: 104305.44, flops:91.34, batch-reuse:1
@ 9354 train 4.0147 , allloss: 4.0290, dt: 1263.64ms, fracRes: 0.6006, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6550, norm(y): 0.9992, norm:1.0641, tok/sec: 103725.38, flops:90.83, batch-reuse:1
@ 9355 train 3.9851 , allloss: 3.9990, dt: 1287.40ms, fracRes: 0.6011, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6483, norm(y): 0.9992, norm:0.9200, tok/sec: 101811.70, flops:89.16, batch-reuse:1
@ 9356 train 4.0149 , allloss: 4.0286, dt: 1268.19ms, fracRes: 0.6007, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6509, norm(y): 0.9989, norm:1.0951, tok/sec: 103353.35, flops:90.51, batch-reuse:1
@ 9357 train 4.0829 , allloss: 4.0964, dt: 1260.59ms, fracRes: 0.6007, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6520, norm(y): 0.9989, norm:0.9141, tok/sec: 103976.68, flops:91.05, batch-reuse:1
@ 9358 train 4.0446 , allloss: 4.0578, dt: 1267.79ms, fracRes: 0.5999, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6507, norm(y): 0.9990, norm:0.9922, tok/sec: 103386.34, flops:90.53, batch-reuse:1
@ 9359 train 4.1042 , allloss: 4.1175, dt: 1263.69ms, fracRes: 0.6005, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6517, norm(y): 0.9991, norm:1.1929, tok/sec: 103721.99, flops:90.83, batch-reuse:1
@ 9360 train 4.0521 , allloss: 4.0654, dt: 1258.44ms, fracRes: 0.6009, norm(attn): 0.1572, norm(output): 0.2480, norm(x): 0.6517, norm(y): 0.9991, norm:0.9234, tok/sec: 104154.66, flops:91.21, batch-reuse:1
@ 9361 train 4.4331 , allloss: 4.4465, dt: 1280.55ms, fracRes: 0.6008, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6490, norm(y): 0.9988, norm:1.6384, tok/sec: 102355.66, flops:89.63, batch-reuse:1
@ 9362 train 3.9556 , allloss: 3.9697, dt: 1259.26ms, fracRes: 0.6013, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6560, norm(y): 0.9993, norm:1.2467, tok/sec: 104086.67, flops:91.15, batch-reuse:1
@ 9363 train 4.0695 , allloss: 4.0828, dt: 1271.55ms, fracRes: 0.6015, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6546, norm(y): 0.9990, norm:1.0756, tok/sec: 103080.81, flops:90.27, batch-reuse:1
@ 9364 train 4.1670 , allloss: 4.1803, dt: 1278.69ms, fracRes: 0.6012, norm(attn): 0.1562, norm(output): 0.2500, norm(x): 0.6544, norm(y): 0.9989, norm:0.9776, tok/sec: 102504.59, flops:89.76, batch-reuse:1
@ 9365 train 4.1177 , allloss: 4.1312, dt: 1267.53ms, fracRes: 0.6004, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6553, norm(y): 0.9987, norm:1.0421, tok/sec: 103407.73, flops:90.55, batch-reuse:1
@ 9366 train 4.0054 , allloss: 4.0188, dt: 1281.25ms, fracRes: 0.6003, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6507, norm(y): 0.9987, norm:1.0421, tok/sec: 102300.02, flops:89.58, batch-reuse:1
@ 9367 train 4.0058 , allloss: 4.0190, dt: 1266.36ms, fracRes: 0.6002, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6516, norm(y): 0.9988, norm:0.9270, tok/sec: 103502.85, flops:90.64, batch-reuse:1
@ 9368 train 4.1756 , allloss: 4.1896, dt: 1284.93ms, fracRes: 0.5998, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6574, norm(y): 0.9986, norm:1.1336, tok/sec: 102007.30, flops:89.33, batch-reuse:1
@ 9369 train 3.9450 , allloss: 3.9584, dt: 1286.54ms, fracRes: 0.6005, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6498, norm(y): 0.9989, norm:1.1871, tok/sec: 101879.19, flops:89.21, batch-reuse:1
@ 9370 train 4.0810 , allloss: 4.0945, dt: 1278.38ms, fracRes: 0.6018, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6528, norm(y): 0.9990, norm:1.2183, tok/sec: 102529.43, flops:89.78, batch-reuse:1
@ 9371 train 4.0803 , allloss: 4.0936, dt: 1295.36ms, fracRes: 0.6014, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6539, norm(y): 0.9990, norm:0.9610, tok/sec: 101185.60, flops:88.61, batch-reuse:1
@ 9372 train 4.0232 , allloss: 4.0363, dt: 1277.92ms, fracRes: 0.6006, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6546, norm(y): 0.9989, norm:0.9340, tok/sec: 102566.94, flops:89.82, batch-reuse:1
@ 9373 train 3.9756 , allloss: 3.9887, dt: 1270.05ms, fracRes: 0.6011, norm(attn): 0.1572, norm(output): 0.2480, norm(x): 0.6516, norm(y): 0.9990, norm:0.9712, tok/sec: 103202.12, flops:90.37, batch-reuse:1
@ 9374 train 4.1182 , allloss: 4.1312, dt: 1320.69ms, fracRes: 0.6024, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6520, norm(y): 0.9991, norm:0.9661, tok/sec: 99244.94, flops:86.91, batch-reuse:1
@ 9375 train 4.0908 , allloss: 4.1045, dt: 1284.52ms, fracRes: 0.6028, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6480, norm(y): 0.9991, norm:1.3124, tok/sec: 102039.87, flops:89.35, batch-reuse:1
@ 9376 train 3.9246 , allloss: 3.9384, dt: 1273.00ms, fracRes: 0.6024, norm(attn): 0.1572, norm(output): 0.2480, norm(x): 0.6522, norm(y): 0.9992, norm:1.0840, tok/sec: 102963.02, flops:90.16, batch-reuse:1
@ 9377 train 4.0470 , allloss: 4.0602, dt: 1284.64ms, fracRes: 0.6007, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6501, norm(y): 0.9991, norm:1.1967, tok/sec: 102030.23, flops:89.35, batch-reuse:1
@ 9378 train 4.1362 , allloss: 4.1496, dt: 1284.50ms, fracRes: 0.6002, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6545, norm(y): 0.9989, norm:1.0318, tok/sec: 102041.40, flops:89.36, batch-reuse:1
@ 9379 train 3.9902 , allloss: 4.0035, dt: 1270.13ms, fracRes: 0.6001, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6508, norm(y): 0.9991, norm:1.0859, tok/sec: 103195.39, flops:90.37, batch-reuse:1
@ 9380 train 3.9903 , allloss: 4.0036, dt: 1280.54ms, fracRes: 0.6002, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6510, norm(y): 0.9990, norm:1.0231, tok/sec: 102356.48, flops:89.63, batch-reuse:1
@ 9381 train 4.0058 , allloss: 4.0192, dt: 1279.14ms, fracRes: 0.6004, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6548, norm(y): 0.9988, norm:0.9296, tok/sec: 102469.11, flops:89.73, batch-reuse:1
@ 9382 train 4.0957 , allloss: 4.1090, dt: 1279.08ms, fracRes: 0.6008, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6541, norm(y): 0.9989, norm:0.9852, tok/sec: 102473.72, flops:89.73, batch-reuse:1
@ 9383 train 3.9741 , allloss: 3.9873, dt: 1288.92ms, fracRes: 0.6005, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6555, norm(y): 0.9989, norm:0.9297, tok/sec: 101691.33, flops:89.05, batch-reuse:1
@ 9384 train 4.1949 , allloss: 4.2081, dt: 1273.17ms, fracRes: 0.6005, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6563, norm(y): 0.9988, norm:1.0279, tok/sec: 102949.35, flops:90.15, batch-reuse:1
@ 9385 train 4.0541 , allloss: 4.0684, dt: 1296.80ms, fracRes: 0.6019, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6632, norm(y): 0.9990, norm:1.1674, tok/sec: 101073.03, flops:88.51, batch-reuse:1
@ 9386 train 4.0730 , allloss: 4.0862, dt: 1274.99ms, fracRes: 0.6011, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6553, norm(y): 0.9990, norm:1.0327, tok/sec: 102802.00, flops:90.02, batch-reuse:1
@ 9387 train 4.0705 , allloss: 4.0836, dt: 1255.04ms, fracRes: 0.6005, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6526, norm(y): 0.9988, norm:0.9892, tok/sec: 104436.52, flops:91.45, batch-reuse:1
@ 9388 train 4.0645 , allloss: 4.0780, dt: 1259.03ms, fracRes: 0.6007, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6526, norm(y): 0.9988, norm:0.9660, tok/sec: 104105.39, flops:91.16, batch-reuse:1
@ 9389 train 4.0889 , allloss: 4.1021, dt: 1266.73ms, fracRes: 0.6005, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6503, norm(y): 0.9988, norm:0.9686, tok/sec: 103472.35, flops:90.61, batch-reuse:1
@ 9390 train 3.9556 , allloss: 3.9692, dt: 1264.54ms, fracRes: 0.6003, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6493, norm(y): 0.9989, norm:0.9098, tok/sec: 103651.77, flops:90.77, batch-reuse:1
@ 9391 train 3.9812 , allloss: 3.9946, dt: 1262.43ms, fracRes: 0.6006, norm(attn): 0.1562, norm(output): 0.2500, norm(x): 0.6503, norm(y): 0.9989, norm:0.8891, tok/sec: 103824.91, flops:90.92, batch-reuse:1
@ 9392 train 3.9234 , allloss: 3.9364, dt: 1278.13ms, fracRes: 0.6009, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6508, norm(y): 0.9991, norm:0.9415, tok/sec: 102549.72, flops:89.80, batch-reuse:1
@ 9393 train 4.0012 , allloss: 4.0143, dt: 1257.17ms, fracRes: 0.6005, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6509, norm(y): 0.9989, norm:1.0012, tok/sec: 104259.63, flops:91.30, batch-reuse:1
@ 9394 train 3.9947 , allloss: 4.0075, dt: 1262.27ms, fracRes: 0.6005, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6494, norm(y): 0.9988, norm:0.9793, tok/sec: 103838.27, flops:90.93, batch-reuse:1
@ 9395 train 3.9570 , allloss: 3.9707, dt: 1258.48ms, fracRes: 0.6016, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6528, norm(y): 0.9990, norm:0.9022, tok/sec: 104150.78, flops:91.20, batch-reuse:1
@ 9396 train 4.0088 , allloss: 4.0217, dt: 1256.83ms, fracRes: 0.6025, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6494, norm(y): 0.9990, norm:0.8805, tok/sec: 104287.52, flops:91.32, batch-reuse:1
@ 9397 train 4.0197 , allloss: 4.0330, dt: 1287.47ms, fracRes: 0.6024, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6482, norm(y): 0.9989, norm:0.8720, tok/sec: 101806.16, flops:89.15, batch-reuse:1
@ 9398 train 3.9848 , allloss: 3.9983, dt: 1309.68ms, fracRes: 0.6021, norm(attn): 0.1572, norm(output): 0.2471, norm(x): 0.6475, norm(y): 0.9990, norm:0.9435, tok/sec: 100079.06, flops:87.64, batch-reuse:1
@ 9399 train 4.0443 , allloss: 4.0580, dt: 1280.00ms, fracRes: 0.6013, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6493, norm(y): 0.9988, norm:0.9294, tok/sec: 102400.06, flops:89.67, batch-reuse:1
@ 9400 train 3.9420 , allloss: 3.9551, dt: 1260.78ms, fracRes: 0.6007, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6476, norm(y): 0.9988, norm:0.9052, tok/sec: 103960.86, flops:91.04, batch-reuse:1
@ 9401 train 4.0772 , allloss: 4.0906, dt: 1272.53ms, fracRes: 0.6002, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6471, norm(y): 0.9986, norm:0.9444, tok/sec: 103001.04, flops:90.20, batch-reuse:1
@ 9402 train 4.0833 , allloss: 4.0966, dt: 1272.89ms, fracRes: 0.5996, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6478, norm(y): 0.9985, norm:0.8837, tok/sec: 102972.16, flops:90.17, batch-reuse:1
@ 9403 train 3.9964 , allloss: 4.0093, dt: 1321.64ms, fracRes: 0.6000, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6478, norm(y): 0.9989, norm:0.9425, tok/sec: 99174.00, flops:86.85, batch-reuse:1
@ 9404 train 3.9206 , allloss: 3.9337, dt: 1307.96ms, fracRes: 0.6007, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6505, norm(y): 0.9989, norm:0.8637, tok/sec: 100211.03, flops:87.75, batch-reuse:1
@ 9405 train 4.0991 , allloss: 4.1121, dt: 1304.11ms, fracRes: 0.6015, norm(attn): 0.1572, norm(output): 0.2471, norm(x): 0.6507, norm(y): 0.9988, norm:0.8827, tok/sec: 100506.63, flops:88.01, batch-reuse:1
@ 9406 train 4.0411 , allloss: 4.0540, dt: 1258.87ms, fracRes: 0.6018, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6526, norm(y): 0.9987, norm:0.9005, tok/sec: 104118.76, flops:91.18, batch-reuse:1
@ 9407 train 3.9890 , allloss: 4.0016, dt: 1283.42ms, fracRes: 0.6017, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6507, norm(y): 0.9989, norm:0.9266, tok/sec: 102127.41, flops:89.43, batch-reuse:1
@ 9408 train 3.9884 , allloss: 4.0011, dt: 1253.98ms, fracRes: 0.6008, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6512, norm(y): 0.9988, norm:0.9280, tok/sec: 104524.90, flops:91.53, batch-reuse:1
@ 9409 train 4.0559 , allloss: 4.0689, dt: 1287.31ms, fracRes: 0.6006, norm(attn): 0.1562, norm(output): 0.2500, norm(x): 0.6505, norm(y): 0.9988, norm:0.9734, tok/sec: 101818.85, flops:89.16, batch-reuse:1
@ 9410 train 3.9824 , allloss: 3.9961, dt: 1249.40ms, fracRes: 0.6014, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6547, norm(y): 0.9990, norm:0.9642, tok/sec: 104908.14, flops:91.87, batch-reuse:1
@ 9411 train 4.0933 , allloss: 4.1071, dt: 1278.35ms, fracRes: 0.6011, norm(attn): 0.1572, norm(output): 0.2480, norm(x): 0.6514, norm(y): 0.9988, norm:1.1313, tok/sec: 102532.37, flops:89.79, batch-reuse:1
@ 9412 train 3.9676 , allloss: 3.9807, dt: 1266.47ms, fracRes: 0.6014, norm(attn): 0.1553, norm(output): 0.2471, norm(x): 0.6459, norm(y): 0.9989, norm:0.9110, tok/sec: 103493.56, flops:90.63, batch-reuse:1
@ 9413 train 3.9524 , allloss: 3.9654, dt: 1262.12ms, fracRes: 0.6012, norm(attn): 0.1562, norm(output): 0.2471, norm(x): 0.6452, norm(y): 0.9990, norm:0.8797, tok/sec: 103850.31, flops:90.94, batch-reuse:1
@ 9414 train 3.9685 , allloss: 3.9821, dt: 1249.13ms, fracRes: 0.6012, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6471, norm(y): 0.9990, norm:0.9402, tok/sec: 104930.99, flops:91.89, batch-reuse:1
@ 9415 train 4.0279 , allloss: 4.0414, dt: 1270.21ms, fracRes: 0.6023, norm(attn): 0.1572, norm(output): 0.2480, norm(x): 0.6494, norm(y): 0.9987, norm:0.9762, tok/sec: 103188.98, flops:90.36, batch-reuse:1
@ 9416 train 3.9672 , allloss: 3.9802, dt: 1268.22ms, fracRes: 0.6022, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6521, norm(y): 0.9988, norm:1.1245, tok/sec: 103351.41, flops:90.50, batch-reuse:1
@ 9417 train 3.9518 , allloss: 3.9646, dt: 1284.47ms, fracRes: 0.6015, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6528, norm(y): 0.9989, norm:0.9394, tok/sec: 102043.56, flops:89.36, batch-reuse:1
@ 9418 train 3.9930 , allloss: 4.0058, dt: 1295.23ms, fracRes: 0.6008, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6505, norm(y): 0.9989, norm:0.9010, tok/sec: 101195.93, flops:88.62, batch-reuse:1
@ 9419 train 3.9079 , allloss: 3.9216, dt: 1263.58ms, fracRes: 0.6010, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6491, norm(y): 0.9990, norm:1.0605, tok/sec: 103730.39, flops:90.84, batch-reuse:1
@ 9420 train 3.9539 , allloss: 3.9674, dt: 1257.33ms, fracRes: 0.5999, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6496, norm(y): 0.9987, norm:1.0792, tok/sec: 104246.01, flops:91.29, batch-reuse:1
@ 9421 train 3.9517 , allloss: 3.9650, dt: 1272.53ms, fracRes: 0.6007, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6461, norm(y): 0.9989, norm:0.8485, tok/sec: 103000.83, flops:90.20, batch-reuse:1
@ 9422 train 4.0162 , allloss: 4.0293, dt: 1285.04ms, fracRes: 0.6003, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6477, norm(y): 0.9986, norm:1.0271, tok/sec: 101998.28, flops:89.32, batch-reuse:1
@ 9423 train 3.9392 , allloss: 3.9523, dt: 1267.47ms, fracRes: 0.6008, norm(attn): 0.1582, norm(output): 0.2480, norm(x): 0.6471, norm(y): 0.9989, norm:1.0572, tok/sec: 103412.61, flops:90.56, batch-reuse:1
@ 9424 train 3.9792 , allloss: 3.9924, dt: 1291.79ms, fracRes: 0.6011, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6453, norm(y): 0.9988, norm:0.9237, tok/sec: 101465.45, flops:88.85, batch-reuse:1
@ 9425 train 3.9998 , allloss: 4.0128, dt: 1269.58ms, fracRes: 0.6019, norm(attn): 0.1572, norm(output): 0.2461, norm(x): 0.6446, norm(y): 0.9990, norm:0.9913, tok/sec: 103240.37, flops:90.41, batch-reuse:1
@ 9426 train 4.0339 , allloss: 4.0469, dt: 1256.52ms, fracRes: 0.6015, norm(attn): 0.1572, norm(output): 0.2480, norm(x): 0.6433, norm(y): 0.9987, norm:1.1944, tok/sec: 104313.12, flops:91.35, batch-reuse:1
@ 9427 train 3.9588 , allloss: 3.9722, dt: 1263.46ms, fracRes: 0.6012, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6468, norm(y): 0.9988, norm:0.8659, tok/sec: 103740.47, flops:90.84, batch-reuse:1
@ 9428 train 3.9598 , allloss: 3.9737, dt: 1274.46ms, fracRes: 0.6016, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6507, norm(y): 0.9988, norm:0.9855, tok/sec: 102844.77, flops:90.06, batch-reuse:1
@ 9429 train 3.9830 , allloss: 3.9961, dt: 1268.11ms, fracRes: 0.6018, norm(attn): 0.1562, norm(output): 0.2471, norm(x): 0.6463, norm(y): 0.9987, norm:0.9595, tok/sec: 103359.92, flops:90.51, batch-reuse:1
@ 9430 train 4.0529 , allloss: 4.0657, dt: 1252.63ms, fracRes: 0.6009, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6439, norm(y): 0.9987, norm:0.8522, tok/sec: 104637.58, flops:91.63, batch-reuse:1
@ 9431 train 4.1335 , allloss: 4.1484, dt: 1255.82ms, fracRes: 0.6012, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6540, norm(y): 0.9987, norm:1.2777, tok/sec: 104371.54, flops:91.40, batch-reuse:1
@ 9432 train 4.0959 , allloss: 4.1089, dt: 1276.43ms, fracRes: 0.6004, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6493, norm(y): 0.9989, norm:0.9635, tok/sec: 102686.52, flops:89.92, batch-reuse:1
@ 9433 train 3.9587 , allloss: 3.9714, dt: 1265.13ms, fracRes: 0.5998, norm(attn): 0.1572, norm(output): 0.2480, norm(x): 0.6499, norm(y): 0.9987, norm:1.0272, tok/sec: 103603.32, flops:90.72, batch-reuse:1
@ 9434 train 3.9432 , allloss: 3.9564, dt: 1263.59ms, fracRes: 0.5996, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6540, norm(y): 0.9988, norm:0.9709, tok/sec: 103730.19, flops:90.84, batch-reuse:1
@ 9435 train 3.9295 , allloss: 3.9426, dt: 1249.51ms, fracRes: 0.5999, norm(attn): 0.1592, norm(output): 0.2490, norm(x): 0.6543, norm(y): 0.9989, norm:0.9150, tok/sec: 104898.58, flops:91.86, batch-reuse:1
@ 9436 train 3.9493 , allloss: 3.9622, dt: 1258.51ms, fracRes: 0.6013, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6540, norm(y): 0.9988, norm:1.1520, tok/sec: 104148.41, flops:91.20, batch-reuse:1
@ 9437 train 3.8910 , allloss: 3.9039, dt: 1249.19ms, fracRes: 0.6010, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6527, norm(y): 0.9987, norm:0.9478, tok/sec: 104925.74, flops:91.88, batch-reuse:1
@ 9438 train 3.8605 , allloss: 3.8739, dt: 1267.46ms, fracRes: 0.6011, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6516, norm(y): 0.9988, norm:0.9294, tok/sec: 103413.39, flops:90.56, batch-reuse:1
@ 9439 train 3.8796 , allloss: 3.8929, dt: 1248.83ms, fracRes: 0.6012, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6492, norm(y): 0.9990, norm:1.1063, tok/sec: 104955.79, flops:91.91, batch-reuse:1
@ 9440 train 3.9210 , allloss: 3.9341, dt: 1255.79ms, fracRes: 0.6019, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6493, norm(y): 0.9989, norm:1.0531, tok/sec: 104374.12, flops:91.40, batch-reuse:1
@ 9441 train 3.7971 , allloss: 3.8100, dt: 1256.32ms, fracRes: 0.6022, norm(attn): 0.1553, norm(output): 0.2471, norm(x): 0.6464, norm(y): 0.9990, norm:0.8809, tok/sec: 104330.48, flops:91.36, batch-reuse:1
@ 9442 train 3.7517 , allloss: 3.7652, dt: 1246.11ms, fracRes: 0.6011, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6473, norm(y): 0.9990, norm:1.0798, tok/sec: 105185.00, flops:92.11, batch-reuse:1
@ 9443 train 3.8086 , allloss: 3.8226, dt: 1264.77ms, fracRes: 0.6011, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6480, norm(y): 0.9991, norm:0.9860, tok/sec: 103632.80, flops:90.75, batch-reuse:1
@ 9444 train 3.8109 , allloss: 3.8240, dt: 1247.99ms, fracRes: 0.6003, norm(attn): 0.1572, norm(output): 0.2480, norm(x): 0.6470, norm(y): 0.9990, norm:0.9458, tok/sec: 105026.55, flops:91.97, batch-reuse:1
@ 9445 train 3.8431 , allloss: 3.8565, dt: 1248.22ms, fracRes: 0.6000, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6516, norm(y): 0.9989, norm:0.9740, tok/sec: 105006.93, flops:91.95, batch-reuse:1
@ 9446 train 3.8313 , allloss: 3.8442, dt: 1271.53ms, fracRes: 0.6007, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6463, norm(y): 0.9986, norm:1.1206, tok/sec: 103082.02, flops:90.27, batch-reuse:1
@ 9447 train 3.8569 , allloss: 3.8696, dt: 1295.19ms, fracRes: 0.6004, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6493, norm(y): 0.9989, norm:0.9829, tok/sec: 101198.93, flops:88.62, batch-reuse:1
@ 9448 train 3.7722 , allloss: 3.7852, dt: 1279.53ms, fracRes: 0.6002, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6491, norm(y): 0.9989, norm:0.9118, tok/sec: 102437.93, flops:89.70, batch-reuse:1
@ 9449 train 3.7949 , allloss: 3.8081, dt: 1275.38ms, fracRes: 0.6002, norm(attn): 0.1572, norm(output): 0.2480, norm(x): 0.6486, norm(y): 0.9988, norm:0.8771, tok/sec: 102770.99, flops:90.00, batch-reuse:1
@ 9450 train 3.7364 , allloss: 3.7499, dt: 1292.99ms, fracRes: 0.6008, norm(attn): 0.1572, norm(output): 0.2480, norm(x): 0.6482, norm(y): 0.9990, norm:0.8346, tok/sec: 101371.49, flops:88.77, batch-reuse:1
@ 9451 train 3.8193 , allloss: 3.8324, dt: 1295.89ms, fracRes: 0.6009, norm(attn): 0.1562, norm(output): 0.2471, norm(x): 0.6456, norm(y): 0.9988, norm:0.8572, tok/sec: 101144.32, flops:88.57, batch-reuse:1
@ 9452 train 3.8183 , allloss: 3.8314, dt: 1277.87ms, fracRes: 0.6008, norm(attn): 0.1572, norm(output): 0.2480, norm(x): 0.6460, norm(y): 0.9989, norm:0.8240, tok/sec: 102570.69, flops:89.82, batch-reuse:1
@ 9453 train 3.8290 , allloss: 3.8428, dt: 1291.74ms, fracRes: 0.6004, norm(attn): 0.1582, norm(output): 0.2480, norm(x): 0.6475, norm(y): 0.9988, norm:0.9236, tok/sec: 101469.21, flops:88.86, batch-reuse:1
@ 9454 train 3.7324 , allloss: 3.7457, dt: 1251.38ms, fracRes: 0.6001, norm(attn): 0.1572, norm(output): 0.2471, norm(x): 0.6422, norm(y): 0.9990, norm:0.8237, tok/sec: 104741.93, flops:91.72, batch-reuse:1
@ 9455 train 3.8256 , allloss: 3.8389, dt: 1278.04ms, fracRes: 0.5999, norm(attn): 0.1562, norm(output): 0.2471, norm(x): 0.6417, norm(y): 0.9990, norm:0.9383, tok/sec: 102556.99, flops:89.81, batch-reuse:1
@ 9456 train 3.8161 , allloss: 3.8293, dt: 1291.19ms, fracRes: 0.6000, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6458, norm(y): 0.9989, norm:0.9051, tok/sec: 101512.60, flops:88.89, batch-reuse:1
@ 9457 train 3.8469 , allloss: 3.8608, dt: 1287.01ms, fracRes: 0.6007, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6538, norm(y): 0.9987, norm:0.9253, tok/sec: 101841.88, flops:89.18, batch-reuse:1
@ 9458 train 3.9348 , allloss: 3.9480, dt: 1267.29ms, fracRes: 0.6019, norm(attn): 0.1572, norm(output): 0.2480, norm(x): 0.6495, norm(y): 0.9986, norm:0.8888, tok/sec: 103427.09, flops:90.57, batch-reuse:1
@ 9459 train 3.8286 , allloss: 3.8416, dt: 1276.71ms, fracRes: 0.6012, norm(attn): 0.1572, norm(output): 0.2471, norm(x): 0.6467, norm(y): 0.9986, norm:0.9757, tok/sec: 102663.88, flops:89.90, batch-reuse:1
@ 9460 train 3.8301 , allloss: 3.8432, dt: 1278.05ms, fracRes: 0.6006, norm(attn): 0.1582, norm(output): 0.2480, norm(x): 0.6451, norm(y): 0.9986, norm:0.8724, tok/sec: 102556.40, flops:89.81, batch-reuse:1
@ 9461 train 3.8426 , allloss: 3.8555, dt: 1259.63ms, fracRes: 0.6003, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6472, norm(y): 0.9986, norm:0.9703, tok/sec: 104056.00, flops:91.12, batch-reuse:1
@ 9462 train 3.8845 , allloss: 3.8982, dt: 1273.45ms, fracRes: 0.6008, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6483, norm(y): 0.9987, norm:0.8361, tok/sec: 102926.53, flops:90.13, batch-reuse:1
@ 9463 train 3.8421 , allloss: 3.8562, dt: 1269.06ms, fracRes: 0.6006, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6448, norm(y): 0.9988, norm:0.8920, tok/sec: 103282.46, flops:90.44, batch-reuse:1
@ 9464 train 3.8299 , allloss: 3.8432, dt: 1267.56ms, fracRes: 0.5992, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6459, norm(y): 0.9983, norm:0.9621, tok/sec: 103405.32, flops:90.55, batch-reuse:1
@ 9465 train 3.7537 , allloss: 3.7666, dt: 1280.57ms, fracRes: 0.5992, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6445, norm(y): 0.9986, norm:1.0009, tok/sec: 102354.34, flops:89.63, batch-reuse:1
@ 9466 train 3.8622 , allloss: 3.8748, dt: 1286.15ms, fracRes: 0.5995, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6451, norm(y): 0.9987, norm:0.9591, tok/sec: 101910.24, flops:89.24, batch-reuse:1
@ 9467 train 3.7868 , allloss: 3.8010, dt: 1296.64ms, fracRes: 0.6003, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6501, norm(y): 0.9988, norm:0.9182, tok/sec: 101086.08, flops:88.52, batch-reuse:1
@ 9468 train 3.8781 , allloss: 3.8916, dt: 1265.66ms, fracRes: 0.6006, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6474, norm(y): 0.9986, norm:0.9214, tok/sec: 103560.08, flops:90.69, batch-reuse:1
@ 9469 train 3.9118 , allloss: 3.9253, dt: 1267.45ms, fracRes: 0.6002, norm(attn): 0.1592, norm(output): 0.2480, norm(x): 0.6458, norm(y): 0.9988, norm:0.9835, tok/sec: 103413.80, flops:90.56, batch-reuse:1
@ 9470 train 3.7347 , allloss: 3.7477, dt: 1273.96ms, fracRes: 0.5995, norm(attn): 0.1572, norm(output): 0.2480, norm(x): 0.6412, norm(y): 0.9989, norm:0.9771, tok/sec: 102885.39, flops:90.10, batch-reuse:1
@ 9471 train 3.9896 , allloss: 4.0028, dt: 1272.96ms, fracRes: 0.5996, norm(attn): 0.1562, norm(output): 0.2471, norm(x): 0.6433, norm(y): 0.9986, norm:1.1113, tok/sec: 102966.34, flops:90.17, batch-reuse:1
@ 9472 train 3.7700 , allloss: 3.7834, dt: 1249.78ms, fracRes: 0.5995, norm(attn): 0.1562, norm(output): 0.2461, norm(x): 0.6436, norm(y): 0.9989, norm:1.0722, tok/sec: 104875.82, flops:91.84, batch-reuse:1
@ 9473 train 3.7727 , allloss: 3.7862, dt: 1278.59ms, fracRes: 0.5996, norm(attn): 0.1572, norm(output): 0.2471, norm(x): 0.6467, norm(y): 0.9986, norm:0.8643, tok/sec: 102512.81, flops:89.77, batch-reuse:1
@ 9474 train 3.8650 , allloss: 3.8787, dt: 1269.71ms, fracRes: 0.6008, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6468, norm(y): 0.9985, norm:0.9522, tok/sec: 103229.58, flops:90.40, batch-reuse:1
@ 9475 train 3.8645 , allloss: 3.8771, dt: 1283.11ms, fracRes: 0.6016, norm(attn): 0.1572, norm(output): 0.2480, norm(x): 0.6479, norm(y): 0.9984, norm:1.0506, tok/sec: 102151.94, flops:89.45, batch-reuse:1
@ 9476 train 3.7961 , allloss: 3.8088, dt: 1283.50ms, fracRes: 0.6010, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6490, norm(y): 0.9986, norm:0.9084, tok/sec: 102120.39, flops:89.43, batch-reuse:1
@ 9477 train 3.8297 , allloss: 3.8433, dt: 1263.23ms, fracRes: 0.5994, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6470, norm(y): 0.9987, norm:0.9375, tok/sec: 103759.78, flops:90.86, batch-reuse:1
@ 9478 train 3.8694 , allloss: 3.8824, dt: 1307.68ms, fracRes: 0.5999, norm(attn): 0.1562, norm(output): 0.2471, norm(x): 0.6410, norm(y): 0.9988, norm:1.0097, tok/sec: 100232.61, flops:87.77, batch-reuse:1
@ 9479 train 3.8669 , allloss: 3.8799, dt: 1250.50ms, fracRes: 0.6006, norm(attn): 0.1562, norm(output): 0.2461, norm(x): 0.6409, norm(y): 0.9986, norm:0.8937, tok/sec: 104815.56, flops:91.79, batch-reuse:1
@ 9480 train 3.8227 , allloss: 3.8358, dt: 1285.86ms, fracRes: 0.6011, norm(attn): 0.1582, norm(output): 0.2480, norm(x): 0.6436, norm(y): 0.9986, norm:0.9024, tok/sec: 101933.60, flops:89.26, batch-reuse:1
@ 9481 train 3.8372 , allloss: 3.8506, dt: 1296.65ms, fracRes: 0.6007, norm(attn): 0.1572, norm(output): 0.2471, norm(x): 0.6415, norm(y): 0.9987, norm:0.8734, tok/sec: 101085.31, flops:88.52, batch-reuse:1
@ 9482 train 3.9867 , allloss: 4.0004, dt: 1282.35ms, fracRes: 0.5995, norm(attn): 0.1572, norm(output): 0.2480, norm(x): 0.6455, norm(y): 0.9984, norm:0.9637, tok/sec: 102212.66, flops:89.51, batch-reuse:1
@ 9483 train 4.0310 , allloss: 4.0444, dt: 1278.47ms, fracRes: 0.5998, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6471, norm(y): 0.9984, norm:0.9926, tok/sec: 102522.39, flops:89.78, batch-reuse:1
@ 9484 train 4.0780 , allloss: 4.0916, dt: 1267.76ms, fracRes: 0.5993, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6482, norm(y): 0.9984, norm:1.2037, tok/sec: 103388.44, flops:90.54, batch-reuse:1
@ 9485 train 3.9912 , allloss: 4.0048, dt: 1266.66ms, fracRes: 0.5993, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6504, norm(y): 0.9984, norm:1.0597, tok/sec: 103478.44, flops:90.61, batch-reuse:1
@ 9486 train 4.0841 , allloss: 4.0970, dt: 1260.76ms, fracRes: 0.5999, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6498, norm(y): 0.9984, norm:0.9312, tok/sec: 103962.57, flops:91.04, batch-reuse:1
@ 9487 train 4.2947 , allloss: 4.3079, dt: 1253.58ms, fracRes: 0.6004, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6541, norm(y): 0.9981, norm:1.0223, tok/sec: 104557.76, flops:91.56, batch-reuse:1
@ 9488 train 4.0949 , allloss: 4.1079, dt: 1283.84ms, fracRes: 0.6003, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6512, norm(y): 0.9980, norm:1.1936, tok/sec: 102093.65, flops:89.40, batch-reuse:1
@ 9489 train 4.0541 , allloss: 4.0672, dt: 1261.37ms, fracRes: 0.6007, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6481, norm(y): 0.9981, norm:0.9931, tok/sec: 103912.28, flops:90.99, batch-reuse:1
@ 9490 train 4.1292 , allloss: 4.1428, dt: 1267.26ms, fracRes: 0.6006, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6494, norm(y): 0.9984, norm:1.1486, tok/sec: 103429.15, flops:90.57, batch-reuse:1
@ 9491 train 4.1362 , allloss: 4.1496, dt: 1272.92ms, fracRes: 0.6000, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6513, norm(y): 0.9983, norm:1.0881, tok/sec: 102969.31, flops:90.17, batch-reuse:1
@ 9492 train 4.0517 , allloss: 4.0649, dt: 1297.65ms, fracRes: 0.6001, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6555, norm(y): 0.9984, norm:1.0707, tok/sec: 101007.16, flops:88.45, batch-reuse:1
@ 9493 train 4.1273 , allloss: 4.1401, dt: 1277.78ms, fracRes: 0.6003, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6516, norm(y): 0.9982, norm:0.9741, tok/sec: 102578.08, flops:89.83, batch-reuse:1
@ 9494 train 4.1597 , allloss: 4.1732, dt: 1273.55ms, fracRes: 0.6008, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6481, norm(y): 0.9982, norm:0.9763, tok/sec: 102918.32, flops:90.12, batch-reuse:1
@ 9495 train 4.0456 , allloss: 4.0594, dt: 1260.81ms, fracRes: 0.6003, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6493, norm(y): 0.9983, norm:0.9801, tok/sec: 103958.24, flops:91.03, batch-reuse:1
@ 9496 train 4.1493 , allloss: 4.1633, dt: 1273.44ms, fracRes: 0.6008, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6502, norm(y): 0.9984, norm:0.9785, tok/sec: 102927.76, flops:90.13, batch-reuse:1
@ 9497 train 4.0496 , allloss: 4.0635, dt: 1270.93ms, fracRes: 0.6000, norm(attn): 0.1602, norm(output): 0.2520, norm(x): 0.6535, norm(y): 0.9984, norm:1.0802, tok/sec: 103130.50, flops:90.31, batch-reuse:1
@ 9498 train 4.2539 , allloss: 4.2674, dt: 1260.26ms, fracRes: 0.6007, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6517, norm(y): 0.9983, norm:1.0728, tok/sec: 104004.28, flops:91.08, batch-reuse:1
@ 9499 train 4.1109 , allloss: 4.1241, dt: 1288.51ms, fracRes: 0.6009, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6482, norm(y): 0.9986, norm:1.0359, tok/sec: 101723.58, flops:89.08, batch-reuse:1
@ 9500 train 4.0522 , allloss: 4.0656, dt: 1272.85ms, fracRes: 0.5999, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6457, norm(y): 0.9984, norm:0.9346, tok/sec: 102975.19, flops:90.17, batch-reuse:1
@ 9501 train 4.1170 , allloss: 4.1307, dt: 1273.15ms, fracRes: 0.5995, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6450, norm(y): 0.9983, norm:1.0248, tok/sec: 102950.99, flops:90.15, batch-reuse:1
@ 9502 train 4.0434 , allloss: 4.0570, dt: 1271.03ms, fracRes: 0.5999, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6451, norm(y): 0.9984, norm:0.8738, tok/sec: 103122.59, flops:90.30, batch-reuse:1
@ 9503 train 4.0253 , allloss: 4.0384, dt: 1267.34ms, fracRes: 0.6006, norm(attn): 0.1562, norm(output): 0.2500, norm(x): 0.6483, norm(y): 0.9982, norm:1.1417, tok/sec: 103422.57, flops:90.57, batch-reuse:1
@ 9504 train 4.1196 , allloss: 4.1326, dt: 1264.45ms, fracRes: 0.6004, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6522, norm(y): 0.9980, norm:1.0167, tok/sec: 103659.61, flops:90.77, batch-reuse:1
@ 9505 train 4.0579 , allloss: 4.0712, dt: 1267.68ms, fracRes: 0.6004, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6559, norm(y): 0.9981, norm:1.0166, tok/sec: 103395.09, flops:90.54, batch-reuse:1
@ 9506 train 4.0409 , allloss: 4.0547, dt: 1265.80ms, fracRes: 0.6007, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6574, norm(y): 0.9982, norm:0.8668, tok/sec: 103548.76, flops:90.68, batch-reuse:1
@ 9507 train 4.1490 , allloss: 4.1638, dt: 1270.02ms, fracRes: 0.5999, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6544, norm(y): 0.9983, norm:1.0432, tok/sec: 103204.89, flops:90.38, batch-reuse:1
@ 9508 train 4.0291 , allloss: 4.0427, dt: 1293.88ms, fracRes: 0.5995, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6515, norm(y): 0.9983, norm:0.9276, tok/sec: 101301.61, flops:88.71, batch-reuse:1
@ 9509 train 4.1354 , allloss: 4.1486, dt: 1264.12ms, fracRes: 0.5996, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6480, norm(y): 0.9981, norm:1.0674, tok/sec: 103686.25, flops:90.80, batch-reuse:1
@ 9510 train 4.0730 , allloss: 4.0866, dt: 1268.20ms, fracRes: 0.6001, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6500, norm(y): 0.9981, norm:0.8358, tok/sec: 103353.04, flops:90.50, batch-reuse:1
@ 9511 train 4.0706 , allloss: 4.0840, dt: 1287.69ms, fracRes: 0.6005, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6502, norm(y): 0.9980, norm:0.9981, tok/sec: 101788.74, flops:89.13, batch-reuse:1
@ 9512 train 4.1292 , allloss: 4.1425, dt: 1254.90ms, fracRes: 0.6007, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6482, norm(y): 0.9979, norm:1.0084, tok/sec: 104448.40, flops:91.46, batch-reuse:1
@ 9513 train 4.0941 , allloss: 4.1078, dt: 1272.17ms, fracRes: 0.6006, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6478, norm(y): 0.9980, norm:1.0232, tok/sec: 103029.90, flops:90.22, batch-reuse:1
@ 9514 train 4.0108 , allloss: 4.0243, dt: 1270.40ms, fracRes: 0.6008, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6458, norm(y): 0.9982, norm:0.9214, tok/sec: 103173.99, flops:90.35, batch-reuse:1
@ 9515 train 4.0410 , allloss: 4.0547, dt: 1295.53ms, fracRes: 0.6012, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6460, norm(y): 0.9983, norm:0.9187, tok/sec: 101172.23, flops:88.60, batch-reuse:1
@ 9516 train 4.0237 , allloss: 4.0376, dt: 1289.69ms, fracRes: 0.6008, norm(attn): 0.1582, norm(output): 0.2480, norm(x): 0.6493, norm(y): 0.9983, norm:0.9062, tok/sec: 101630.70, flops:89.00, batch-reuse:1
@ 9517 train 4.1212 , allloss: 4.1342, dt: 1248.46ms, fracRes: 0.6013, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6490, norm(y): 0.9981, norm:0.9497, tok/sec: 104986.84, flops:91.94, batch-reuse:1
@ 9518 train 4.0576 , allloss: 4.0710, dt: 1258.37ms, fracRes: 0.6011, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6530, norm(y): 0.9983, norm:0.9911, tok/sec: 104160.31, flops:91.21, batch-reuse:1
@ 9519 train 4.3773 , allloss: 4.3908, dt: 1267.68ms, fracRes: 0.6018, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6488, norm(y): 0.9980, norm:1.6049, tok/sec: 103395.51, flops:90.54, batch-reuse:1
@ 9520 train 4.2198 , allloss: 4.2335, dt: 1252.64ms, fracRes: 0.6018, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6500, norm(y): 0.9983, norm:1.0464, tok/sec: 104636.29, flops:91.63, batch-reuse:1
@ 9521 train 4.0396 , allloss: 4.0533, dt: 1261.12ms, fracRes: 0.6003, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6519, norm(y): 0.9984, norm:1.0548, tok/sec: 103932.85, flops:91.01, batch-reuse:1
@ 9522 train 4.0554 , allloss: 4.0691, dt: 1246.19ms, fracRes: 0.5997, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6510, norm(y): 0.9982, norm:0.9601, tok/sec: 105178.58, flops:92.10, batch-reuse:1
@ 9523 train 4.1748 , allloss: 4.1881, dt: 1284.30ms, fracRes: 0.5999, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6512, norm(y): 0.9984, norm:1.0301, tok/sec: 102056.92, flops:89.37, batch-reuse:1
@ 9524 train 4.0630 , allloss: 4.0763, dt: 1272.07ms, fracRes: 0.5987, norm(attn): 0.1602, norm(output): 0.2520, norm(x): 0.6533, norm(y): 0.9981, norm:1.1290, tok/sec: 103038.03, flops:90.23, batch-reuse:1
@ 9525 train 4.0440 , allloss: 4.0576, dt: 1281.93ms, fracRes: 0.5992, norm(attn): 0.1592, norm(output): 0.2520, norm(x): 0.6537, norm(y): 0.9983, norm:0.9584, tok/sec: 102245.53, flops:89.53, batch-reuse:1
@ 9526 train 4.1076 , allloss: 4.1210, dt: 1258.83ms, fracRes: 0.5986, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6521, norm(y): 0.9980, norm:0.9403, tok/sec: 104122.29, flops:91.18, batch-reuse:1
@ 9527 train 3.9795 , allloss: 3.9928, dt: 1264.36ms, fracRes: 0.6002, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6528, norm(y): 0.9981, norm:0.9014, tok/sec: 103666.97, flops:90.78, batch-reuse:1
@ 9528 train 4.0862 , allloss: 4.0992, dt: 1277.56ms, fracRes: 0.6016, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6496, norm(y): 0.9982, norm:0.8631, tok/sec: 102595.59, flops:89.84, batch-reuse:1
@ 9529 train 3.9853 , allloss: 3.9983, dt: 1296.39ms, fracRes: 0.6011, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6522, norm(y): 0.9982, norm:0.9189, tok/sec: 101105.35, flops:88.54, batch-reuse:1
@ 9530 train 4.0719 , allloss: 4.0865, dt: 1252.91ms, fracRes: 0.6010, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6516, norm(y): 0.9984, norm:0.8418, tok/sec: 104614.09, flops:91.61, batch-reuse:1
@ 9531 train 3.9194 , allloss: 3.9327, dt: 1251.77ms, fracRes: 0.6007, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6520, norm(y): 0.9983, norm:0.8447, tok/sec: 104709.01, flops:91.69, batch-reuse:1
@ 9532 train 4.0022 , allloss: 4.0153, dt: 1247.43ms, fracRes: 0.6008, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6505, norm(y): 0.9981, norm:0.8761, tok/sec: 105073.38, flops:92.01, batch-reuse:1
@ 9533 train 3.9507 , allloss: 3.9638, dt: 1280.88ms, fracRes: 0.5991, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6519, norm(y): 0.9981, norm:0.8903, tok/sec: 102329.33, flops:89.61, batch-reuse:1
@ 9534 train 4.0418 , allloss: 4.0553, dt: 1256.07ms, fracRes: 0.6006, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6550, norm(y): 0.9982, norm:0.9112, tok/sec: 104350.98, flops:91.38, batch-reuse:1
@ 9535 train 4.0281 , allloss: 4.0412, dt: 1286.03ms, fracRes: 0.5999, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6508, norm(y): 0.9980, norm:0.8634, tok/sec: 101919.76, flops:89.25, batch-reuse:1
@ 9536 train 4.0477 , allloss: 4.0608, dt: 1262.65ms, fracRes: 0.6011, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6516, norm(y): 0.9982, norm:0.9397, tok/sec: 103807.37, flops:90.90, batch-reuse:1
@ 9537 train 4.0661 , allloss: 4.0795, dt: 1278.18ms, fracRes: 0.6005, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6496, norm(y): 0.9979, norm:0.9217, tok/sec: 102545.76, flops:89.80, batch-reuse:1
@ 9538 train 4.0023 , allloss: 4.0156, dt: 1271.61ms, fracRes: 0.6000, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6482, norm(y): 0.9981, norm:0.8677, tok/sec: 103075.72, flops:90.26, batch-reuse:1
@ 9539 train 3.9992 , allloss: 4.0123, dt: 1270.79ms, fracRes: 0.5991, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6474, norm(y): 0.9982, norm:0.9005, tok/sec: 103142.15, flops:90.32, batch-reuse:1
@ 9540 train 4.0288 , allloss: 4.0420, dt: 1266.02ms, fracRes: 0.5994, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6475, norm(y): 0.9982, norm:0.8774, tok/sec: 103530.94, flops:90.66, batch-reuse:1
@ 9541 train 4.1618 , allloss: 4.1749, dt: 1289.34ms, fracRes: 0.6005, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6464, norm(y): 0.9981, norm:0.8987, tok/sec: 101658.04, flops:89.02, batch-reuse:1
@ 9542 train 4.1270 , allloss: 4.1402, dt: 1278.75ms, fracRes: 0.6003, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6446, norm(y): 0.9981, norm:1.0781, tok/sec: 102500.41, flops:89.76, batch-reuse:1
@ 9543 train 4.1505 , allloss: 4.1647, dt: 1295.96ms, fracRes: 0.6003, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6481, norm(y): 0.9980, norm:0.9597, tok/sec: 101138.57, flops:88.57, batch-reuse:1
@ 9544 train 3.9786 , allloss: 3.9920, dt: 1311.24ms, fracRes: 0.6003, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6482, norm(y): 0.9980, norm:0.9410, tok/sec: 99960.71, flops:87.53, batch-reuse:1
@ 9545 train 4.0484 , allloss: 4.0615, dt: 1255.55ms, fracRes: 0.6008, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6453, norm(y): 0.9982, norm:0.9677, tok/sec: 104394.10, flops:91.42, batch-reuse:1
@ 9546 train 3.9949 , allloss: 4.0079, dt: 1253.59ms, fracRes: 0.6013, norm(attn): 0.1582, norm(output): 0.2480, norm(x): 0.6444, norm(y): 0.9984, norm:0.8936, tok/sec: 104557.72, flops:91.56, batch-reuse:1
@ 9547 train 3.9516 , allloss: 3.9680, dt: 1260.12ms, fracRes: 0.6012, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6466, norm(y): 0.9983, norm:0.9597, tok/sec: 104015.60, flops:91.08, batch-reuse:1
@ 9548 train 4.1574 , allloss: 4.1702, dt: 1269.42ms, fracRes: 0.6006, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6474, norm(y): 0.9980, norm:1.1135, tok/sec: 103253.05, flops:90.42, batch-reuse:1
@ 9549 train 4.3196 , allloss: 4.3331, dt: 1280.62ms, fracRes: 0.6014, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6491, norm(y): 0.9979, norm:1.1786, tok/sec: 102350.80, flops:89.63, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8281, 0.1709, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7617, 0.0664, 0.1729, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7969, 0.0522, 0.1377, 0.0127, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7891, 0.0315, 0.0703, 0.0317, 0.0776, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8516, 0.0625, 0.0444, 0.0110, 0.0147, 0.0166, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5586, 0.0471, 0.0334, 0.0503, 0.1279, 0.0635, 0.1196, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3633, 0.0791, 0.2715, 0.0124, 0.0898, 0.0474, 0.0302, 0.1050, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7617, 0.0417, 0.0618, 0.0054, 0.0199, 0.0081, 0.0415, 0.0204, 0.0410, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4453, 0.0327, 0.2910, 0.0039, 0.0166, 0.0114, 0.0166, 0.0815, 0.0244, 0.0771, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4648, 0.0586, 0.1260, 0.0208, 0.0317, 0.0107, 0.0303, 0.0381, 0.0562, 0.0354, 0.1279, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0684, 0.0283, 0.0192, 0.1348, 0.1045, 0.0170, 0.0437, 0.0869, 0.1416, 0.2139, 0.1235, 0.0182, 0.0000, 0.0000, 0.0000],
        [0.0564, 0.0356, 0.0618, 0.0417, 0.0493, 0.0376, 0.0476, 0.0986, 0.0420, 0.2451, 0.0767, 0.1216, 0.0859, 0.0000, 0.0000],
        [0.5039, 0.0552, 0.0603, 0.0067, 0.0225, 0.0095, 0.0515, 0.0210, 0.0457, 0.0129, 0.0491, 0.0337, 0.0913, 0.0381, 0.0000],
        [0.1836, 0.0552, 0.1035, 0.0540, 0.0222, 0.0034, 0.0084, 0.1396, 0.0159, 0.0771, 0.0295, 0.0781, 0.1514, 0.0188, 0.0588]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0037, -0.0037, -0.0068,  ..., -0.0351,  0.0148,  0.0021],
        [-0.0452,  0.0007, -0.0005,  ...,  0.0047,  0.0066,  0.0037],
        [ 0.0315,  0.0377, -0.0070,  ..., -0.0223,  0.0203, -0.0004],
        ...,
        [ 0.0327,  0.0190,  0.0069,  ..., -0.0369,  0.0122,  0.0175],
        [-0.0487,  0.0043, -0.0302,  ...,  0.0107, -0.0026, -0.0146],
        [-0.0217,  0.0022, -0.0154,  ...,  0.0119, -0.0336, -0.0030]], device='cuda:0', requires_grad=True)
K: tensor([ 1.4844,  0.4102,  0.3730,  0.4434,  0.7227, -0.1270, -0.2139, -0.8359, -0.7383, -0.1885, -0.1504, -0.7695, -0.1216, -0.8516,  0.0776, -0.4531,  0.4531,  0.1162, -1.5000,  0.5078,  1.2812,  0.9141, -0.9219,  0.6680, -0.4609, -0.2695, -0.9727,  0.4277,  0.4629, -0.1748,  1.5156,  0.2754,
         1.1719,  0.3965,  0.3301,  1.8906, -2.0156,  0.3496, -0.3848, -2.5625,  0.4922,  0.5039,  0.2578,  1.4609, -0.1611,  0.2852, -0.1846,  0.5352,  1.1094, -0.6211,  0.3164,  0.5625, -1.8984,  0.0215,  1.8125, -0.5156, -0.8125,  0.4805,  0.6523, -0.2871,  1.0312, -0.6602,  0.2031, -0.0317],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0386,  0.0018, -0.0092,  ...,  0.0085, -0.0048, -0.0133],
        [ 0.0285, -0.0181,  0.0141,  ...,  0.0055,  0.0434,  0.0073],
        [-0.0567,  0.0417,  0.0042,  ..., -0.0199, -0.0368, -0.0425],
        ...,
        [ 0.0047,  0.0051,  0.0315,  ...,  0.0203,  0.0156,  0.0219],
        [ 0.0199, -0.0114,  0.0264,  ...,  0.0292,  0.0058,  0.0060],
        [ 0.0186, -0.0093,  0.0352,  ..., -0.0203,  0.0222,  0.0036]], device='cuda:0', requires_grad=True)
Q: tensor([-0.2363,  0.0742, -1.1484, -0.3906,  0.1055, -0.2314, -2.2656, -0.5938,  0.4199,  0.8398, -1.1641, -0.2158,  0.0140, -0.5156, -0.4414, -0.1250,  0.3477, -0.6172,  0.5664,  0.6016, -0.1235,  0.2402,  1.1484,  0.3828,  0.8555, -0.0432, -1.0078, -2.2344, -0.0703,  0.2158,  0.3340,  0.3574,
        -0.3633, -1.1328, -0.1318, -0.3516,  1.0703,  0.7969, -0.1235,  1.3672,  1.8281,  0.5664,  0.5508,  0.2793, -0.4570,  1.1641, -1.4922,  0.3184, -0.3105,  0.4531, -1.6484, -0.5977, -0.0762, -1.1797, -0.4961, -0.3203,  0.4746, -1.2969,  0.1318, -0.3535, -1.2578,  0.1260,  0.4336,  1.3125],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -1.5859, -1.1172, -2.7812, -3.7344, -3.4219, -1.5234, -0.7227, -3.4688, -2.5938, -2.8906, -1.7031,  0.3008, -3.6719, -2.3906],
        [ 0.0000, -2.4375, -1.4844, -2.1094, -1.5391, -3.5156, -3.1250, -1.3750, -1.3281, -0.8281, -0.2812, -1.0469, -0.8633, -0.8828, -0.8867],
        [ 0.0000, -2.7188, -1.7578, -4.1250, -2.3125, -3.6719, -3.3906, -3.0312, -2.1562, -3.0156, -0.3574, -1.5938, -2.1719, -2.0625, -1.8828],
        [ 0.0000, -3.2188, -2.4219, -3.2188, -2.3125, -4.4062, -3.5312, -3.1250, -1.6484, -2.5938, -1.1016, -2.0000, -1.9062, -1.2578, -1.6484],
        [ 0.0000, -2.6094, -2.9531, -4.3438, -4.0625, -3.9375, -1.5703, -2.9375, -2.8594, -4.7188, -3.0469, -3.2188, -2.0781, -2.9062, -2.9688],
        [ 0.0000, -2.4688, -2.8125, -2.4062, -1.4688, -2.1719, -1.5391, -2.5469,  0.0141, -1.2500,  0.3750, -1.3750, -2.3281,  0.1826, -0.8477],
        [ 0.0000, -1.5234, -0.2910, -3.3750, -1.3984, -2.0312, -2.4844, -1.2422, -1.3125, -0.2373,  0.0747,  0.0654,  0.0181, -1.4844, -0.9258],
        [ 0.0000, -2.9062, -2.5156, -4.9375, -3.6406, -4.5312, -2.9062, -3.6250, -2.9219, -4.2812, -2.5156, -2.9375, -1.8750, -3.1094, -2.9844],
        [ 0.0000, -2.6094, -0.4297, -4.7500, -3.2969, -3.6719, -3.2812, -1.6953, -2.9062, -1.7578, -1.5625, -0.6523,  0.2412, -3.0312, -1.9375],
        [ 0.0000, -2.0781, -1.3047, -3.1094, -2.6875, -3.7656, -2.7344, -2.5000, -2.1094, -2.5781, -1.2891, -1.3594, -1.4453, -2.0312, -1.5156],
        [ 0.0000, -0.8828, -1.2734,  0.6758,  0.4258, -1.3906, -0.4473,  0.2402,  0.7266,  1.1406,  0.5938, -1.3281, -0.7812,  1.0234,  0.9023],
        [ 0.0000, -0.4629,  0.0884, -0.2988, -0.1377, -0.4043, -0.1689,  0.5586, -0.2969,  1.4688,  0.3047,  0.7695,  0.4180, -0.0645,  0.4395],
        [ 0.0000, -2.2031, -2.1250, -4.3125, -3.1094, -3.9688, -2.2812, -3.1719, -2.4062, -3.6719, -2.3281, -2.7031, -1.7031, -2.5781, -2.6094],
        [ 0.0000, -1.2031, -0.5742, -1.2266, -2.1094, -3.9688, -3.0781, -0.2754, -2.4375, -0.8672, -1.8281, -0.8516, -0.1914, -2.2812, -1.1406]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8598],
        [0.8368],
        [0.8247],
        [0.6834],
        [0.7388],
        [0.6579],
        [0.5618],
        [0.5736],
        [0.6577],
        [0.3833],
        [0.2050],
        [0.1740],
        [0.3057],
        [0.2735]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8125,     0.1875,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6914,     0.2754,     0.0354,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2988,     0.4746,     0.1611,     0.0659,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2695,     0.1729,     0.0454,     0.1270,     0.3848,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1523,     0.2227,     0.0229,     0.0444,     0.2812,     0.2754,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0569,     0.1631,     0.0120,     0.0251,     0.2344,     0.3320,     0.1758,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1494,     0.0518,     0.0171,     0.0109,     0.0952,     0.2256,     0.3926,     0.0566,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0420,     0.0253,     0.0062,     0.0036,     0.0703,     0.1299,     0.5352,     0.0330,     0.1543,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0481,     0.0312,     0.0143,     0.0141,     0.0405,     0.0806,     0.0469,     0.2256,     0.4453,     0.0540,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0513,     0.0148,     0.0016,     0.0028,     0.0454,     0.0684,     0.1865,     0.0061,     0.2471,     0.0234,     0.3535,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0239,     0.0227,     0.0225,     0.0101,     0.0383,     0.1001,     0.2217,     0.1357,     0.0430,     0.1338,     0.2129,     0.0352,     0.0000,     0.0000,     0.0000],
        [    0.0654,     0.0089,     0.0071,     0.0123,     0.0228,     0.0942,     0.1445,     0.0366,     0.1758,     0.0664,     0.2539,     0.0291,     0.0835,     0.0000,     0.0000],
        [    0.0574,     0.0090,     0.0018,     0.0012,     0.0177,     0.0461,     0.2197,     0.0075,     0.0432,     0.0127,     0.3047,     0.0132,     0.0305,     0.2354,     0.0000],
        [    0.0234,     0.0062,     0.0011,     0.0007,     0.0047,     0.0374,     0.0620,     0.0162,     0.0796,     0.0199,     0.1196,     0.0469,     0.0747,     0.4688,     0.0383]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0331, -0.0214, -0.0170,  ..., -0.0156, -0.0214,  0.0073],
        [-0.0235,  0.0188, -0.0196,  ...,  0.0138, -0.0026, -0.0575],
        [ 0.0251,  0.0176,  0.0148,  ...,  0.0125,  0.0297,  0.0221],
        ...,
        [ 0.0059, -0.0162,  0.0351,  ...,  0.0340, -0.0222, -0.0163],
        [-0.0206, -0.0105,  0.0155,  ...,  0.0100,  0.0276,  0.0005],
        [ 0.0318,  0.0423,  0.0117,  ..., -0.0062, -0.0104,  0.0244]], device='cuda:0', requires_grad=True)
K: tensor([ 3.2656, -0.7773, -2.5781, -1.4531, -2.3906, -0.6406, -0.6211,  0.0947, -0.1211,  0.2812,  0.6484,  1.8281, -2.0156,  1.3359,  0.5508, -3.7188,  0.9609, -1.2891,  0.8516,  1.9375, -1.1484,  1.5078,  1.9688, -3.6094,  0.9922, -1.7266, -3.1406,  0.1689,  1.7734, -0.4434,  3.3594,  1.6641,
        -1.2422, -0.4824, -2.9844, -0.0752,  0.3242,  2.4219, -0.8438,  0.9141,  2.6719, -0.4629, -0.5039,  2.6562,  1.4219,  0.5000, -1.8047, -2.7188,  1.4141,  0.3594, -2.2500,  2.7812, -0.8594,  0.3281,  0.0366,  0.2637,  1.5781,  0.8047, -2.0625,  1.7109,  0.6328,  1.7578,  3.7188, -0.7031],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0281, -0.0043, -0.0132,  ...,  0.0029,  0.0244, -0.0096],
        [ 0.0146,  0.0053, -0.0536,  ..., -0.0120, -0.0070, -0.0164],
        [ 0.0474,  0.0087,  0.0309,  ..., -0.0206,  0.0231,  0.0084],
        ...,
        [-0.0284, -0.0108,  0.0079,  ...,  0.0103, -0.0032, -0.0388],
        [ 0.0358,  0.0132, -0.0047,  ...,  0.0054, -0.0043, -0.0102],
        [ 0.0010, -0.0314, -0.0191,  ...,  0.0114, -0.0060,  0.0163]], device='cuda:0', requires_grad=True)
Q: tensor([-1.2656, -0.9961, -1.5859, -1.7109,  1.0938, -1.2500, -0.3027,  0.6055,  1.0156,  0.5781,  0.6328, -0.7148,  0.6094, -1.2891, -0.0203,  1.1719, -2.3906, -0.6836, -2.2188,  0.5547, -2.0156, -0.4375, -1.5781,  2.4375, -0.6523,  0.2256,  2.1719, -1.0469, -1.6094,  0.2715,  0.6133, -1.4141,
        -1.8203,  0.4570, -0.1641,  0.9844,  2.3594,  0.7148,  1.0938,  1.1094,  1.2422,  0.3809, -1.0469,  1.2578,  1.4453, -1.3281,  1.1250, -2.4688,  1.9531,  1.3281, -0.8125,  0.9375, -1.2734, -2.7344, -0.4414,  1.4688,  0.7695,  0.6641,  1.1484,  0.4629, -0.8945,  0.9102,  1.5859, -1.0938],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -1.4688, -3.7031, -5.2812, -2.1562, -2.7188, -2.3125, -5.5312, -3.2188, -5.4062, -3.0469, -5.3438, -5.0000, -2.9531, -2.1250],
        [ 0.0000, -0.9219, -2.9688, -4.0938, -1.9531, -1.4688, -0.8359, -2.0781, -2.0000, -1.8906, -1.1562, -1.0625, -1.5000, -1.3047, -0.7734],
        [ 0.0000,  0.4629, -0.6211, -1.5156,  0.1689,  0.5898,  0.9570, -0.5000,  0.5703,  0.4023,  0.9258, -0.0420,  0.7539,  1.7500,  2.8750],
        [ 0.0000, -0.4492, -1.7812, -0.7539,  0.3535,  1.2344,  1.6953, -0.1689,  3.1250,  0.8945,  3.4219,  0.3984,  1.0938,  4.4062,  2.3125],
        [ 0.0000,  0.3789, -1.8906, -1.2266,  0.6172,  0.5938,  1.5625,  0.1895,  2.0469,  0.9141,  3.3594,  1.4766,  1.8203,  3.4688,  2.6406],
        [ 0.0000,  1.0547, -1.5547, -0.8164,  1.4219,  1.7656,  1.1328,  0.3984,  3.6562,  0.0165,  2.6719,  0.4414,  1.9219,  5.0000,  2.4219],
        [ 0.0000, -1.0625, -2.1719, -2.6094, -0.4512,  0.4121,  0.9648, -0.9727,  1.0703, -0.7188,  1.9297, -0.7578,  0.6914,  2.5938,  1.0391],
        [ 0.0000, -0.5117, -1.9141, -2.4375,  0.5156,  1.1250,  2.5469, -0.2422,  1.2969, -0.2158,  3.1094,  0.1826,  0.8477,  3.0781,  2.8906],
        [ 0.0000, -0.4316, -1.2109, -1.2266, -0.1738,  0.5156, -0.0262,  1.5391,  2.2188,  0.1113,  2.0469,  1.6875,  2.7344,  3.7031,  0.9883],
        [ 0.0000, -1.2422, -3.4375, -2.8906, -0.1221,  0.2910,  1.2891, -2.1250,  1.5781, -0.7852,  1.9297, -0.4707, -0.3613,  3.1719,  1.0312],
        [ 0.0000, -0.0544, -0.0601, -0.8633,  0.4707,  1.4297,  2.2344,  1.7344,  0.5898,  1.7188,  2.1875,  0.3828,  1.5312,  2.0312,  3.3438],
        [ 0.0000, -1.9922, -2.2188, -1.6641, -1.0469,  0.3633,  0.7930, -0.5820,  0.9883,  0.0181,  1.3594, -0.8086,  0.2471,  2.3906,  0.9062],
        [ 0.0000, -1.8516, -3.4688, -3.9062, -1.1719, -0.2188,  1.3438, -2.0312, -0.2812, -1.5078,  1.6719, -1.4609, -0.6289,  1.4141,  1.0156],
        [ 0.0000, -1.3281, -3.0469, -3.4531, -1.6094,  0.4629,  0.9727, -0.3672,  1.2266, -0.1670,  1.6328,  0.6914,  1.1562,  3.0000,  0.4922]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8070],
        [0.5247],
        [0.3800],
        [0.5757],
        [0.3675],
        [0.2935],
        [0.2261],
        [0.2291],
        [0.2261],
        [0.3334],
        [0.1164],
        [0.1501],
        [0.2129],
        [0.1862]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0049,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9844,     0.0041,     0.0098,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9766,     0.0090,     0.0075,     0.0080,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0013,     0.0027,     0.0008,     0.0023,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0005,     0.0009,     0.0002,     0.0005,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9492,     0.0056,     0.0118,     0.0058,     0.0017,     0.0051,     0.0220,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8398,     0.0050,     0.0222,     0.0054,     0.0031,     0.0064,     0.0151,     0.1035,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0003,     0.0003,     0.0001,     0.0002,     0.0001,     0.0007,     0.0007,     0.0004,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0003,     0.0001,     0.0001,     0.0001,     0.0000,     0.0002,     0.0003,     0.0001,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0012,     0.0015,     0.0007,     0.0002,     0.0005,     0.0018,     0.0039,     0.0011,     0.0006,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9102,     0.0035,     0.0036,     0.0026,     0.0036,     0.0018,     0.0069,     0.0204,     0.0056,     0.0040,     0.0006,     0.0376,     0.0000,     0.0000,     0.0000],
        [    0.9336,     0.0006,     0.0015,     0.0010,     0.0006,     0.0010,     0.0017,     0.0128,     0.0018,     0.0058,     0.0001,     0.0116,     0.0276,     0.0000,     0.0000],
        [    0.9961,     0.0002,     0.0003,     0.0001,     0.0001,     0.0001,     0.0006,     0.0008,     0.0003,     0.0001,     0.0000,     0.0004,     0.0008,     0.0003,     0.0000],
        [    0.9922,     0.0005,     0.0004,     0.0003,     0.0003,     0.0002,     0.0007,     0.0012,     0.0004,     0.0002,     0.0000,     0.0005,     0.0007,     0.0003,     0.0005]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0089, -0.0097,  0.0379,  ..., -0.0135, -0.0031, -0.0186],
        [ 0.0426, -0.0432, -0.0139,  ..., -0.0115, -0.0197, -0.0370],
        [ 0.0540, -0.0342,  0.0424,  ..., -0.0137, -0.0142,  0.0033],
        ...,
        [ 0.0335,  0.0212, -0.0292,  ..., -0.0010,  0.0161,  0.0216],
        [ 0.0146,  0.0197, -0.0046,  ..., -0.0156, -0.0439, -0.0267],
        [ 0.0227, -0.0130,  0.0046,  ..., -0.0015, -0.0129,  0.0139]], device='cuda:0', requires_grad=True)
K: tensor([-1.0078, -0.7109, -0.7812, -0.2383, -2.0938,  2.5312, -1.2578,  2.6719, -1.7500, -1.2188,  1.3906,  0.4707, -1.7969, -1.6484, -1.7109,  0.9648,  1.6641,  2.6562, -2.1875,  1.0000,  2.5938,  0.3926, -1.5469,  0.0942,  1.8047, -1.4141, -0.0820, -2.2031,  1.6719,  0.7891,  1.1484,  2.7188,
        -0.7461,  1.7109,  2.2969, -0.8359, -1.5312,  1.8281,  1.4375, -1.5469,  2.0625, -2.4219, -0.1670,  1.2812,  0.1494,  2.7500, -1.6250, -3.0000, -0.5039,  3.1719, -0.8945, -1.4688,  1.8906,  0.4277,  1.8516, -1.4844, -1.7969, -2.5625, -2.2344, -2.2656, -2.8594, -1.3906,  1.6094,  0.5859],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0011,  0.0353,  0.0194,  ..., -0.0148,  0.0415, -0.0170],
        [-0.0118,  0.0484, -0.0011,  ...,  0.0183,  0.0212, -0.0083],
        [-0.0254, -0.0029,  0.0134,  ..., -0.0220,  0.0601, -0.0326],
        ...,
        [ 0.0247, -0.0130,  0.0153,  ..., -0.0221, -0.0103, -0.0067],
        [ 0.0055,  0.0112,  0.0032,  ...,  0.0259,  0.0175, -0.0031],
        [ 0.0104, -0.0299, -0.0196,  ...,  0.0303,  0.0252,  0.0080]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.8750,  0.9922, -1.1250,  0.4863, -0.1523, -1.6328,  0.6836,  0.0820, -0.2061,  0.4512, -0.3047,  0.4297,  0.6289,  1.0234,  0.4336, -1.5547, -0.3809, -2.2031,  1.1875,  0.0649,  0.1582,  0.4824,  1.1250,  0.4629,  0.4531,  0.1104,  0.5625,  0.3184, -0.8047, -1.2969,  0.2139, -0.6758,
        -0.7188, -1.3203, -0.3711, -0.1196,  1.1562, -0.9727,  0.3516, -0.1553, -1.5078,  1.4844,  0.1621,  0.2373,  0.3301, -0.2432,  0.7227,  0.2383, -1.1641, -0.8477,  0.4160, -0.0996, -0.2373, -1.0000, -0.0413,  0.7344, -0.6602,  1.0234,  1.6094,  2.3281,  1.2656,  0.6758, -1.5547, -0.4434],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000,  -5.3125,  -5.4688,  -6.1250,  -6.0938,  -6.2500,  -5.2812,  -4.9688,  -5.5938,  -6.5625,  -7.5312,  -4.9375,  -5.3438,  -5.8125,  -5.8125],
        [  0.0000,  -5.5000,  -4.6250,  -5.8438,  -6.5938,  -6.1875,  -5.4375,  -3.9375,  -5.8125,  -6.1875,  -8.0000,  -4.7500,  -5.0312,  -5.9688,  -5.5000],
        [  0.0000,  -4.6875,  -4.8750,  -4.8125,  -6.4375,  -5.5938,  -4.7812,  -4.6250,  -5.5938,  -5.5000,  -7.0938,  -4.9062,  -4.9688,  -5.6562,  -4.9062],
        [  0.0000,  -6.6562,  -5.9062,  -7.0938,  -6.0625,  -6.3750,  -5.3125,  -4.3750,  -5.7500,  -6.8125,  -8.3125,  -5.5000,  -4.5000,  -5.7500,  -6.6250],
        [  0.0000,  -7.5938,  -7.0000,  -8.5625,  -7.5938,  -8.0625,  -6.1250,  -6.3750,  -7.3125,  -9.0000,  -9.8750,  -7.2500,  -7.0625,  -7.5625,  -7.3750],
        [  0.0000,  -5.1250,  -4.3750,  -5.0938,  -6.3438,  -5.2188,  -3.7656,  -3.3906,  -4.3750,  -6.2500,  -7.2812,  -4.2188,  -3.8750,  -4.4688,  -5.0938],
        [  0.0000,  -5.1250,  -3.6250,  -5.0625,  -5.5938,  -4.8750,  -4.0312,  -2.0938,  -4.1875,  -4.1562,  -6.5625,  -2.7812,  -2.5156,  -4.1875,  -4.5000],
        [  0.0000,  -8.3125,  -8.1875,  -9.0000,  -8.7500,  -8.8125,  -7.2188,  -7.2188,  -7.9375,  -9.5625, -10.9375,  -8.1250,  -7.5625,  -8.1250,  -8.4375],
        [  0.0000,  -8.3125,  -9.1875,  -9.1875,  -9.5625, -10.1250,  -8.6250,  -8.0000,  -9.5625,  -8.6875, -11.2500,  -7.8438,  -8.5625,  -9.4375,  -8.9375],
        [  0.0000,  -6.6875,  -6.4688,  -7.1875,  -8.3125,  -7.5938,  -6.3438,  -5.5312,  -6.8438,  -7.4375,  -9.3750,  -5.9062,  -5.5938,  -6.8438,  -7.3438],
        [  0.0000,  -5.5625,  -5.5312,  -5.8750,  -5.5312,  -6.2500,  -4.8750,  -3.7969,  -5.0938,  -5.4375,  -7.2500,  -3.1875,  -3.4219,  -5.1562,  -6.0000],
        [  0.0000,  -7.3125,  -6.4062,  -6.8125,  -7.3438,  -6.8438,  -6.3125,  -4.2812,  -6.2500,  -5.0938,  -8.9375,  -4.3750,  -3.5156,  -6.1562,  -7.1250],
        [  0.0000,  -8.5000,  -8.2500,  -9.0625,  -8.9375,  -8.8750,  -7.4375,  -7.0625,  -7.9688,  -9.0625, -11.0000,  -7.9375,  -7.1250,  -8.1250,  -8.6875],
        [  0.0000,  -7.6250,  -7.8750,  -8.0000,  -8.1875,  -8.5000,  -7.2812,  -6.6875,  -7.9375,  -8.4375, -10.3750,  -7.5312,  -7.3125,  -8.0000,  -7.6250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9814],
        [0.9967],
        [0.9915],
        [0.9958],
        [0.9990],
        [0.9925],
        [0.9411],
        [0.9984],
        [0.9997],
        [0.9980],
        [0.9847],
        [0.9919],
        [0.9984],
        [0.9980]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0669, 0.9336, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0405, 0.4492, 0.5117, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0459, 0.3301, 0.5508, 0.0737, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0796, 0.4512, 0.3359, 0.0693, 0.0635, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0393, 0.5430, 0.1514, 0.0723, 0.0874, 0.1089, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0077, 0.1660, 0.0330, 0.0188, 0.0198, 0.0231, 0.7305, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0133, 0.0806, 0.0698, 0.0095, 0.0064, 0.0305, 0.6484, 0.1416, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0181, 0.1826, 0.0099, 0.0028, 0.0068, 0.0115, 0.6992, 0.0232, 0.0466, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0069, 0.0413, 0.0261, 0.0088, 0.0121, 0.0325, 0.3184, 0.1108, 0.1416, 0.3027, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0141, 0.0249, 0.0130, 0.0023, 0.0032, 0.0173, 0.4043, 0.0562, 0.0265, 0.4160, 0.0229, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0078, 0.0195, 0.0280, 0.0066, 0.0044, 0.0134, 0.1777, 0.1289, 0.0483, 0.2373, 0.0630, 0.2656, 0.0000, 0.0000, 0.0000],
        [0.0130, 0.0315, 0.0320, 0.0041, 0.0028, 0.0181, 0.1689, 0.0859, 0.0459, 0.1953, 0.0562, 0.2275, 0.1191, 0.0000, 0.0000],
        [0.0153, 0.0894, 0.0051, 0.0013, 0.0033, 0.0058, 0.2695, 0.0101, 0.0172, 0.1650, 0.2188, 0.0942, 0.0459, 0.0608, 0.0000],
        [0.0039, 0.0165, 0.0062, 0.0028, 0.0037, 0.0065, 0.0564, 0.0270, 0.0322, 0.0593, 0.0347, 0.1187, 0.0923, 0.1118, 0.4277]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0025,  0.0052, -0.0038,  ..., -0.0310, -0.0066, -0.0269],
        [-0.0492,  0.0138, -0.0078,  ...,  0.0078, -0.0051, -0.0006],
        [-0.0487, -0.0172,  0.0471,  ..., -0.0195, -0.0262, -0.0255],
        ...,
        [-0.0040, -0.0166, -0.0154,  ..., -0.0318, -0.0398, -0.0482],
        [-0.0276, -0.0220, -0.0235,  ..., -0.0123, -0.0120,  0.0464],
        [-0.0030,  0.0183,  0.0215,  ..., -0.0138,  0.0121, -0.0117]], device='cuda:0', requires_grad=True)
K: tensor([-1.8359, -1.8672, -0.4590,  0.4766, -0.3770, -2.0625, -1.3125,  0.4570, -0.0442, -1.9453, -0.0430, -2.1719,  2.6562, -1.8438, -0.6797,  1.7344,  2.6875, -0.1416,  1.0234, -0.2754,  0.9688, -1.4766,  0.7070, -1.8828, -0.9766,  0.9219, -0.5195,  1.4297,  0.6328,  1.7578, -0.7734, -2.0625,
        -0.7227, -1.4062,  1.4141, -1.1328,  2.5781, -0.0141, -1.2422,  0.0952, -2.6094,  1.1641,  0.6328,  1.8594,  0.7031,  0.0298, -2.4375, -0.7852,  1.7266,  0.2578,  1.1250, -0.3125, -0.2207, -2.0156, -1.7969, -2.3594,  2.0156, -0.7305, -0.9844,  1.4922, -0.4961, -1.3203,  1.7734, -0.8008],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0108, -0.0061,  0.0163,  ...,  0.0244, -0.0203, -0.0149],
        [ 0.0390, -0.0062,  0.0169,  ..., -0.0050,  0.0316,  0.0203],
        [-0.0174,  0.0106,  0.0487,  ...,  0.0209,  0.0240, -0.0100],
        ...,
        [ 0.0188,  0.0007, -0.0273,  ..., -0.0015,  0.0044, -0.0044],
        [-0.0129,  0.0411, -0.0215,  ...,  0.0059,  0.0045, -0.0355],
        [ 0.0010, -0.0119, -0.0035,  ...,  0.0119, -0.0002, -0.0020]], device='cuda:0', requires_grad=True)
Q: tensor([    -0.2637,     -1.0859,     -1.7969,      1.6328,     -2.5312,     -0.6523,     -0.0693,     -0.1768,      0.0036,     -0.6758,     -1.0078,     -0.3594,     -1.8672,     -1.8750,      1.5547,     -0.2490,     -0.7539,     -0.8906,      0.4766,     -1.2500,     -0.6602,      1.8906,
            -1.6484,     -2.2812,     -0.6406,     -1.2422,      1.9375,      3.5625,     -2.1094,      1.6328,      0.5156,     -1.4922,     -1.7031,      0.9062,     -1.8516,     -1.3906,      2.4219,     -1.5391,     -2.1562,      0.7734,     -0.2949,     -0.2871,      2.7969,     -0.1934,
            -0.9531,     -1.5547,     -0.9141,     -2.9375,      1.7344,      1.4375,      0.7109,      0.6289,     -1.0469,     -0.9570,     -0.1582,     -1.6797,     -0.7773,      0.4668,     -0.1631,      0.9531,     -1.2578,      0.5469,      0.3594,     -1.7188], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  2.6406,  1.7344,  1.3047,  1.7031,  1.8281,  4.5312,  3.2812,  3.4219,  3.8438,  3.6719,  4.0000,  3.9688,  4.1250,  5.3438],
        [ 0.0000,  2.4062,  2.5312,  1.3906,  0.9961,  1.6641,  4.0625,  4.0312,  2.9844,  4.2812,  3.1250,  5.0625,  5.0625,  3.9062,  5.5312],
        [ 0.0000,  1.9688,  2.4844,  0.4766,  1.0000,  2.3750,  3.5156,  3.5312,  3.2031,  5.1875,  3.8281,  6.1562,  5.4688,  4.5938,  6.5312],
        [ 0.0000,  1.7344,  1.4375, -0.1328, -0.2207,  1.0859,  2.7344,  2.6094,  2.6094,  3.9375,  2.0312,  3.9219,  3.4844,  3.8906,  5.2500],
        [ 0.0000,  2.6250,  1.3438,  0.6094,  0.7969,  1.0156,  3.2188,  2.4688,  2.8594,  3.5469,  3.4688,  4.0625,  3.4844,  4.1875,  6.4688],
        [ 0.0000,  3.0781,  1.4609,  0.8945,  0.9453,  1.1016,  4.5625,  3.5781,  2.7656,  3.5312,  1.8203,  3.8594,  4.0000,  3.2188,  6.5938],
        [ 0.0000,  1.7969,  1.6562, -0.3398, -0.7383,  0.8281,  3.8906,  2.3594,  1.8438,  3.7812,  2.1406,  4.0625,  3.1875,  2.6562,  5.6562],
        [ 0.0000,  2.3125, -0.5977, -1.8594, -0.9805, -0.4570,  3.6562,  0.2471,  0.9453,  3.2344,  3.3750,  2.6406,  1.6406,  2.1406,  5.5000],
        [ 0.0000,  1.7812,  1.3281,  0.2363,  0.5547,  1.5391,  3.8281,  2.7656,  3.0156,  3.7812,  3.1406,  4.3750,  3.9375,  4.3438,  6.3750],
        [ 0.0000,  0.5703, -0.0815, -1.7969, -1.4922,  0.2061,  3.3594,  1.3828,  0.6289,  3.3906,  0.4883,  2.8594,  2.2344,  1.5859,  5.8125],
        [ 0.0000,  0.9219,  1.2812, -0.1660, -0.5781,  0.5430,  3.1250,  2.8125,  1.8281,  3.4219,  2.0938,  3.5312,  3.7656,  3.1875,  5.0938],
        [ 0.0000,  0.8906,  0.8984, -1.1562, -1.5391,  0.3320,  2.5625,  1.8906,  1.2578,  2.7188,  1.4688,  2.8594,  2.2188,  2.3281,  4.8438],
        [ 0.0000,  1.7656, -1.0938, -2.4375, -1.5312, -0.9766,  2.8750, -0.4102,  0.1216,  2.3750,  2.6562,  1.8203,  1.1016,  1.3828,  4.7500],
        [ 0.0000,  1.4297,  0.4629, -0.3359, -0.0522,  0.5078,  2.6719,  1.9297,  2.1094,  2.7188,  2.1719,  3.4062,  3.1562,  3.3594,  4.6875]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3783],
        [0.1259],
        [0.1086],
        [0.1519],
        [0.0965],
        [0.3007],
        [0.0995],
        [0.0859],
        [0.0723],
        [0.1110],
        [0.0894],
        [0.0758],
        [0.0813],
        [0.0947]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0118, 0.9883, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0170, 0.9180, 0.0635, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0391, 0.8711, 0.0571, 0.0327, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0019, 0.5352, 0.2051, 0.0811, 0.1758, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0209, 0.4375, 0.1338, 0.0167, 0.1699, 0.2207, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0245, 0.3125, 0.3945, 0.0190, 0.0320, 0.0466, 0.1699, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0089, 0.1162, 0.1641, 0.0094, 0.1709, 0.0250, 0.0427, 0.4629, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0310, 0.1973, 0.1426, 0.0151, 0.0292, 0.0361, 0.0605, 0.4570, 0.0305, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0289, 0.3613, 0.0635, 0.0139, 0.0300, 0.0137, 0.1992, 0.1592, 0.0266, 0.1035, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0251, 0.2197, 0.0430, 0.0111, 0.0238, 0.0244, 0.0854, 0.1592, 0.0278, 0.2148, 0.1650, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0308, 0.4434, 0.0515, 0.0167, 0.0142, 0.0128, 0.1758, 0.0977, 0.0056, 0.0574, 0.0549, 0.0398, 0.0000, 0.0000, 0.0000],
        [0.0166, 0.1104, 0.0317, 0.0030, 0.0481, 0.0067, 0.0366, 0.0718, 0.0520, 0.1182, 0.0498, 0.1709, 0.2832, 0.0000, 0.0000],
        [0.0342, 0.1128, 0.0132, 0.0037, 0.0135, 0.0073, 0.0337, 0.0422, 0.0099, 0.1797, 0.0457, 0.0684, 0.4043, 0.0312, 0.0000],
        [0.0869, 0.3457, 0.0267, 0.0079, 0.0221, 0.0099, 0.2773, 0.0442, 0.0059, 0.0184, 0.0400, 0.0376, 0.0303, 0.0048, 0.0415]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0029, -0.0256,  0.0034,  ...,  0.0026,  0.0260, -0.0147],
        [ 0.0164, -0.0502, -0.0182,  ...,  0.0273,  0.0185, -0.0059],
        [-0.0130, -0.0183, -0.0296,  ...,  0.0325,  0.0075, -0.0131],
        ...,
        [ 0.0270,  0.0159, -0.0219,  ..., -0.0152, -0.0012,  0.0177],
        [ 0.0076,  0.0019,  0.0282,  ...,  0.0380, -0.0122,  0.0073],
        [-0.0290,  0.0494, -0.0237,  ...,  0.0022,  0.0266,  0.0412]], device='cuda:0', requires_grad=True)
K: tensor([-0.1055, -0.7266, -0.3828,  0.2354, -0.9102, -0.0398, -0.3359,  0.2793, -0.9609, -3.2188, -1.8672, -0.8945,  0.3262, -1.1641, -1.4844,  1.4844,  2.3594,  1.1641, -2.2031,  0.1670,  1.7422, -1.2344, -2.5312,  0.6172,  1.0938, -1.1875, -0.5859,  1.0078, -0.3594, -1.8906,  0.2422,  1.0781,
        -2.2031,  1.9375,  4.2500,  0.9414,  0.1846, -1.2344, -0.4922, -1.6328, -0.9922, -0.6914, -2.2656,  0.7266,  0.5586,  0.3730, -1.1875,  1.5859, -1.5938, -1.4453,  0.8906,  1.9219,  1.4922, -0.3633,  0.1523, -0.0334,  0.3555, -3.2344, -0.7383,  1.1484,  0.7930, -1.0234,  1.8984, -1.3359],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0051, -0.0074, -0.0077,  ..., -0.0397, -0.0363, -0.0158],
        [ 0.0066,  0.0020, -0.0067,  ...,  0.0107, -0.0206,  0.0416],
        [ 0.0197, -0.0090, -0.0018,  ..., -0.0089, -0.0302, -0.0101],
        ...,
        [ 0.0324, -0.0495, -0.0318,  ...,  0.0175,  0.0194, -0.0049],
        [ 0.0155, -0.0074,  0.0439,  ...,  0.0192, -0.0038,  0.0040],
        [-0.0124, -0.0147, -0.0191,  ...,  0.0161,  0.0024, -0.0215]], device='cuda:0', requires_grad=True)
Q: tensor([-0.1904,  1.0156,  0.7148,  0.7812,  0.2324, -1.1484,  0.2949, -2.3594, -1.3594,  0.5312, -0.3613,  1.2500,  0.5273, -0.2109, -0.6953, -1.1641,  0.3066,  0.3750, -0.5742,  0.3789,  0.1050, -0.7695,  1.2422, -0.6094,  0.9414,  0.8398, -1.7266,  1.5312, -0.5664,  1.1484, -1.2578, -3.0000,
         0.1699,  0.3672, -0.8672, -0.5898, -0.8984,  0.1934,  1.7891, -1.1953,  0.4219,  0.3770, -0.3125,  0.4043,  0.2373,  1.6875, -0.5195,  1.1562,  1.3594, -0.7070,  0.4434,  1.4219, -1.0156, -0.0850, -0.4668,  0.2080, -1.8984,  0.5156,  0.0439,  0.6953,  0.3105, -1.0156, -0.8203, -0.6523],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  4.4062,  2.3750,  1.6875,  2.7969,  2.8438,  3.3281,  2.5000,  2.0938,  1.6719,  3.2344,  2.3125,  2.6250,  2.1406,  2.5469],
        [ 0.0000,  3.9844,  1.3203,  2.1875,  2.5625,  2.2812,  3.6094,  1.6016,  0.4160,  0.1182,  1.5156, -0.4219,  0.7305, -0.0361, -0.0879],
        [ 0.0000,  3.1094,  0.3828, -0.1738,  1.7500,  0.4668,  2.7969,  1.2188,  0.2559,  0.0933,  0.1865, -0.8398,  0.0262, -0.2383, -0.5898],
        [ 0.0000,  5.6250,  4.6562,  3.7500,  4.5312,  4.9688,  4.0000,  6.2812,  3.3125,  4.1250,  3.5625,  4.2500,  5.3125,  2.8281,  2.6719],
        [ 0.0000,  3.0469,  1.8594, -0.2227,  2.0938,  2.3594,  2.3125,  2.8438,  1.4297,  1.5547,  1.1250,  1.4688,  1.1875,  0.4688,  1.2812],
        [ 0.0000,  2.5469,  2.7812, -0.2578,  0.2656,  0.6406,  1.9297,  3.4844, -0.0986,  1.4688,  0.4922,  2.4062,  2.3281, -0.4141,  1.3281],
        [ 0.0000,  2.5625,  2.9062,  0.0508,  2.9531,  1.0312,  1.5625,  3.9531,  3.3594,  4.1562,  2.7344,  3.9375,  4.0000,  3.7188,  4.2500],
        [ 0.0000,  1.8438,  1.5312, -0.7227, -0.0635,  0.1494,  0.6680,  2.6875, -0.0187,  3.2812,  0.7539,  1.9688,  3.4531,  0.2656,  1.6641],
        [ 0.0000,  2.5312,  0.7852, -0.7344,  0.0398, -0.7500,  1.9297,  1.7109, -0.0820,  1.2734,  1.8672,  1.6875,  2.4688,  0.3027,  0.9023],
        [ 0.0000,  2.1719,  0.5312, -0.8203, -0.0554, -0.0334,  1.2188,  1.8438,  0.0977,  2.1406,  1.8750,  2.1250,  2.8906,  0.4863,  1.1875],
        [ 0.0000,  2.6719,  0.5156, -0.6133, -0.7773, -0.8789,  1.7422,  1.1484, -1.7031,  0.6211,  0.5781,  0.2578,  2.8906, -0.8828,  0.2490],
        [ 0.0000,  1.8906,  0.6484, -1.7266,  1.0625, -0.9062,  0.7891,  1.4609,  1.1406,  1.9609,  1.0938,  2.3281,  2.8281,  2.3125,  2.0781],
        [ 0.0000,  1.1953, -0.9570, -2.2344, -0.9336, -1.5391, -0.0134,  0.2109, -1.2422,  1.6562,  0.2871,  0.6914,  2.4688, -0.0898,  0.6211],
        [ 0.0000,  1.3828, -1.1797, -2.3906, -1.3672, -2.1719,  1.1562, -0.6758, -2.6875, -1.5547, -0.7734, -0.8438, -1.0547, -2.8906, -0.7422]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0518],
        [0.0149],
        [0.0193],
        [0.0047],
        [0.0268],
        [0.0104],
        [0.0083],
        [0.0098],
        [0.0081],
        [0.0167],
        [0.0077],
        [0.0164],
        [0.0084],
        [0.0126]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.1396 a:0.0942-:0.1885 white:0.0723atoes:0.3750,:0.4922 the:0.0854iced:0.3809)
iced
------
		( a:0.0942-:0.1885 white:0.0723atoes:0.3750,:0.4922 the:0.0854iced:0.3809 and:0.2207)
 and the most popular in the world.
- The most popular in the
@ 9550 train 4.0478 , allloss: 4.0605, dt: 1665.32ms, fracRes: 0.6006, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6497, norm(y): 0.9980, norm:0.9546, tok/sec: 78706.57, flops:68.92, batch-reuse:1
@ 9551 train 3.9873 , allloss: 4.0003, dt: 1274.25ms, fracRes: 0.6010, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6482, norm(y): 0.9981, norm:1.1706, tok/sec: 102861.90, flops:90.07, batch-reuse:1
@ 9552 train 3.9918 , allloss: 4.0050, dt: 1254.46ms, fracRes: 0.6008, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6483, norm(y): 0.9981, norm:1.0958, tok/sec: 104484.65, flops:91.50, batch-reuse:1
@ 9553 train 4.0381 , allloss: 4.0510, dt: 1279.02ms, fracRes: 0.6004, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6487, norm(y): 0.9982, norm:0.8275, tok/sec: 102478.86, flops:89.74, batch-reuse:1
@ 9554 train 4.1348 , allloss: 4.1476, dt: 1297.44ms, fracRes: 0.6000, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6509, norm(y): 0.9980, norm:1.1012, tok/sec: 101023.70, flops:88.47, batch-reuse:1
@ 9555 train 4.0364 , allloss: 4.0494, dt: 1314.95ms, fracRes: 0.6002, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6499, norm(y): 0.9982, norm:1.0238, tok/sec: 99678.59, flops:87.29, batch-reuse:1
@ 9556 train 3.9965 , allloss: 4.0092, dt: 1301.42ms, fracRes: 0.5996, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6461, norm(y): 0.9981, norm:0.8702, tok/sec: 100714.50, flops:88.19, batch-reuse:1
@ 9557 train 4.0066 , allloss: 4.0197, dt: 1314.14ms, fracRes: 0.5999, norm(attn): 0.1592, norm(output): 0.2520, norm(x): 0.6497, norm(y): 0.9980, norm:0.9396, tok/sec: 99739.55, flops:87.34, batch-reuse:1
@ 9558 train 3.9814 , allloss: 3.9942, dt: 1304.50ms, fracRes: 0.6003, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6478, norm(y): 0.9980, norm:0.9733, tok/sec: 100476.95, flops:87.99, batch-reuse:1
@ 9559 train 4.0214 , allloss: 4.0344, dt: 1298.89ms, fracRes: 0.6009, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6509, norm(y): 0.9980, norm:0.8874, tok/sec: 100910.73, flops:88.37, batch-reuse:1
@ 9560 train 3.9936 , allloss: 4.0065, dt: 1265.13ms, fracRes: 0.6004, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6477, norm(y): 0.9981, norm:0.8723, tok/sec: 103603.85, flops:90.72, batch-reuse:1
@ 9561 train 4.1383 , allloss: 4.1511, dt: 1294.43ms, fracRes: 0.6003, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6472, norm(y): 0.9981, norm:0.9817, tok/sec: 101258.37, flops:88.67, batch-reuse:1
@ 9562 train 3.9233 , allloss: 3.9371, dt: 1308.06ms, fracRes: 0.6000, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6514, norm(y): 0.9983, norm:0.9664, tok/sec: 100203.07, flops:87.75, batch-reuse:1
@ 9563 train 4.0182 , allloss: 4.0311, dt: 1291.02ms, fracRes: 0.5995, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6486, norm(y): 0.9980, norm:0.8874, tok/sec: 101525.73, flops:88.90, batch-reuse:1
@ 9564 train 4.1381 , allloss: 4.1511, dt: 1274.66ms, fracRes: 0.5996, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6481, norm(y): 0.9979, norm:0.9449, tok/sec: 102828.71, flops:90.05, batch-reuse:1
@ 9565 train 3.9625 , allloss: 3.9755, dt: 1275.30ms, fracRes: 0.5996, norm(attn): 0.1592, norm(output): 0.2490, norm(x): 0.6487, norm(y): 0.9980, norm:0.8442, tok/sec: 102777.65, flops:90.00, batch-reuse:1
@ 9566 train 4.0899 , allloss: 4.1033, dt: 1253.10ms, fracRes: 0.5992, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6506, norm(y): 0.9977, norm:0.9706, tok/sec: 104598.20, flops:91.60, batch-reuse:1
@ 9567 train 4.0131 , allloss: 4.0259, dt: 1274.89ms, fracRes: 0.6005, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6485, norm(y): 0.9980, norm:0.9258, tok/sec: 102810.19, flops:90.03, batch-reuse:1
@ 9568 train 3.9917 , allloss: 4.0046, dt: 1286.02ms, fracRes: 0.6001, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6512, norm(y): 0.9979, norm:1.0050, tok/sec: 101920.58, flops:89.25, batch-reuse:1
@ 9569 train 4.0911 , allloss: 4.1044, dt: 1279.34ms, fracRes: 0.6001, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6524, norm(y): 0.9977, norm:0.9322, tok/sec: 102452.44, flops:89.72, batch-reuse:1
@ 9570 train 4.1088 , allloss: 4.1225, dt: 1278.85ms, fracRes: 0.6001, norm(attn): 0.1592, norm(output): 0.2490, norm(x): 0.6525, norm(y): 0.9981, norm:1.0440, tok/sec: 102492.34, flops:89.75, batch-reuse:1
@ 9571 train 4.0013 , allloss: 4.0145, dt: 1275.38ms, fracRes: 0.6007, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6512, norm(y): 0.9982, norm:1.1460, tok/sec: 102771.20, flops:90.00, batch-reuse:1
@ 9572 train 3.9416 , allloss: 3.9544, dt: 1281.44ms, fracRes: 0.5992, norm(attn): 0.1562, norm(output): 0.2500, norm(x): 0.6496, norm(y): 0.9979, norm:0.9453, tok/sec: 102284.66, flops:89.57, batch-reuse:1
@ 9573 train 3.9592 , allloss: 3.9722, dt: 1252.92ms, fracRes: 0.5996, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6464, norm(y): 0.9981, norm:0.9213, tok/sec: 104613.57, flops:91.61, batch-reuse:1
@ 9574 train 3.9954 , allloss: 4.0084, dt: 1269.59ms, fracRes: 0.5992, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6471, norm(y): 0.9979, norm:0.8937, tok/sec: 103239.50, flops:90.41, batch-reuse:1
@ 9575 train 3.9748 , allloss: 3.9877, dt: 1287.42ms, fracRes: 0.5999, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6482, norm(y): 0.9979, norm:0.8924, tok/sec: 101809.63, flops:89.15, batch-reuse:1
@ 9576 train 3.9959 , allloss: 4.0098, dt: 1254.53ms, fracRes: 0.6008, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6500, norm(y): 0.9980, norm:0.9757, tok/sec: 104479.01, flops:91.49, batch-reuse:1
@ 9577 train 4.0463 , allloss: 4.0593, dt: 1261.71ms, fracRes: 0.6004, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6475, norm(y): 0.9980, norm:0.8291, tok/sec: 103884.53, flops:90.97, batch-reuse:1
@ 9578 train 4.0857 , allloss: 4.0988, dt: 1273.28ms, fracRes: 0.6009, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6470, norm(y): 0.9981, norm:0.9658, tok/sec: 102940.64, flops:90.14, batch-reuse:1
@ 9579 train 4.0407 , allloss: 4.0543, dt: 1259.24ms, fracRes: 0.6007, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6447, norm(y): 0.9978, norm:0.8735, tok/sec: 104088.21, flops:91.15, batch-reuse:1
@ 9580 train 4.0629 , allloss: 4.0763, dt: 1282.20ms, fracRes: 0.6017, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6435, norm(y): 0.9979, norm:0.9083, tok/sec: 102224.01, flops:89.52, batch-reuse:1
@ 9581 train 3.9277 , allloss: 3.9414, dt: 1294.84ms, fracRes: 0.6011, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6441, norm(y): 0.9980, norm:1.0407, tok/sec: 101226.45, flops:88.64, batch-reuse:1
@ 9582 train 4.0168 , allloss: 4.0309, dt: 1263.07ms, fracRes: 0.6009, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6435, norm(y): 0.9980, norm:1.1701, tok/sec: 103772.76, flops:90.87, batch-reuse:1
@ 9583 train 3.9978 , allloss: 4.0108, dt: 1253.37ms, fracRes: 0.6002, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6449, norm(y): 0.9978, norm:0.9123, tok/sec: 104575.32, flops:91.58, batch-reuse:1
@ 9584 train 4.0782 , allloss: 4.0912, dt: 1315.22ms, fracRes: 0.5999, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6458, norm(y): 0.9975, norm:0.8844, tok/sec: 99658.08, flops:87.27, batch-reuse:1
@ 9585 train 4.1437 , allloss: 4.1568, dt: 1291.74ms, fracRes: 0.5997, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6470, norm(y): 0.9976, norm:1.0221, tok/sec: 101469.17, flops:88.86, batch-reuse:1
@ 9586 train 3.8862 , allloss: 3.8994, dt: 1266.58ms, fracRes: 0.5989, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6472, norm(y): 0.9981, norm:1.0768, tok/sec: 103485.32, flops:90.62, batch-reuse:1
@ 9587 train 3.9577 , allloss: 3.9711, dt: 1288.79ms, fracRes: 0.6003, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6473, norm(y): 0.9981, norm:1.1530, tok/sec: 101701.33, flops:89.06, batch-reuse:1
@ 9588 train 3.9272 , allloss: 3.9409, dt: 1293.01ms, fracRes: 0.6001, norm(attn): 0.1582, norm(output): 0.2471, norm(x): 0.6406, norm(y): 0.9982, norm:1.3724, tok/sec: 101369.92, flops:88.77, batch-reuse:1
@ 9589 train 3.9597 , allloss: 3.9737, dt: 1261.98ms, fracRes: 0.5989, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6431, norm(y): 0.9979, norm:1.0426, tok/sec: 103862.02, flops:90.95, batch-reuse:1
@ 9590 train 3.9845 , allloss: 3.9987, dt: 1265.85ms, fracRes: 0.5991, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6472, norm(y): 0.9980, norm:1.0316, tok/sec: 103544.82, flops:90.67, batch-reuse:1
@ 9591 train 3.8948 , allloss: 3.9080, dt: 1253.21ms, fracRes: 0.5995, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6487, norm(y): 0.9979, norm:1.1115, tok/sec: 104589.29, flops:91.59, batch-reuse:1
@ 9592 train 4.0397 , allloss: 4.0525, dt: 1249.60ms, fracRes: 0.6013, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6506, norm(y): 0.9982, norm:0.9245, tok/sec: 104890.99, flops:91.85, batch-reuse:1
@ 9593 train 3.9756 , allloss: 3.9885, dt: 1267.75ms, fracRes: 0.6009, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6534, norm(y): 0.9982, norm:1.0044, tok/sec: 103389.70, flops:90.54, batch-reuse:1
@ 9594 train 3.9982 , allloss: 4.0112, dt: 1241.06ms, fracRes: 0.6009, norm(attn): 0.1592, norm(output): 0.2490, norm(x): 0.6483, norm(y): 0.9980, norm:0.9657, tok/sec: 105613.25, flops:92.48, batch-reuse:1
@ 9595 train 3.8883 , allloss: 3.9014, dt: 1260.41ms, fracRes: 0.6010, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6473, norm(y): 0.9982, norm:0.8818, tok/sec: 103991.79, flops:91.06, batch-reuse:1
@ 9596 train 4.0367 , allloss: 4.0501, dt: 1287.71ms, fracRes: 0.6003, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6457, norm(y): 0.9978, norm:0.9139, tok/sec: 101786.63, flops:89.13, batch-reuse:1
@ 9597 train 3.9858 , allloss: 3.9989, dt: 1265.98ms, fracRes: 0.6001, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6468, norm(y): 0.9978, norm:0.8750, tok/sec: 103534.12, flops:90.66, batch-reuse:1
@ 9598 train 4.0325 , allloss: 4.0455, dt: 1265.78ms, fracRes: 0.6008, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6471, norm(y): 0.9978, norm:0.8463, tok/sec: 103550.13, flops:90.68, batch-reuse:1
@ 9599 train 3.9478 , allloss: 3.9608, dt: 1283.27ms, fracRes: 0.6016, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6453, norm(y): 0.9980, norm:0.8807, tok/sec: 102139.00, flops:89.44, batch-reuse:1
@ 9600 train 3.8843 , allloss: 3.8973, dt: 1301.76ms, fracRes: 0.6010, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6467, norm(y): 0.9979, norm:0.8925, tok/sec: 100688.47, flops:88.17, batch-reuse:1
@ 9601 train 3.9655 , allloss: 3.9786, dt: 1307.72ms, fracRes: 0.6002, norm(attn): 0.1592, norm(output): 0.2490, norm(x): 0.6469, norm(y): 0.9978, norm:0.8115, tok/sec: 100229.78, flops:87.77, batch-reuse:1
@ 9602 train 3.9259 , allloss: 3.9385, dt: 1279.86ms, fracRes: 0.6000, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6456, norm(y): 0.9979, norm:0.8601, tok/sec: 102411.07, flops:89.68, batch-reuse:1
@ 9603 train 3.8939 , allloss: 3.9076, dt: 1263.77ms, fracRes: 0.6002, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6517, norm(y): 0.9979, norm:0.9255, tok/sec: 103714.81, flops:90.82, batch-reuse:1
@ 9604 train 3.8700 , allloss: 3.8841, dt: 1274.75ms, fracRes: 0.6001, norm(attn): 0.1582, norm(output): 0.2520, norm(x): 0.6520, norm(y): 0.9980, norm:0.8753, tok/sec: 102821.58, flops:90.04, batch-reuse:1
@ 9605 train 3.9949 , allloss: 4.0079, dt: 1264.01ms, fracRes: 0.6001, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6466, norm(y): 0.9978, norm:1.0215, tok/sec: 103695.78, flops:90.80, batch-reuse:1
@ 9606 train 3.8966 , allloss: 3.9091, dt: 1264.71ms, fracRes: 0.6009, norm(attn): 0.1582, norm(output): 0.2480, norm(x): 0.6427, norm(y): 0.9980, norm:1.0271, tok/sec: 103637.62, flops:90.75, batch-reuse:1
@ 9607 train 3.9581 , allloss: 3.9712, dt: 1267.18ms, fracRes: 0.6013, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6468, norm(y): 0.9978, norm:0.8943, tok/sec: 103436.35, flops:90.58, batch-reuse:1
@ 9608 train 3.9745 , allloss: 3.9874, dt: 1258.14ms, fracRes: 0.6011, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6461, norm(y): 0.9978, norm:0.8974, tok/sec: 104179.53, flops:91.23, batch-reuse:1
@ 9609 train 3.9373 , allloss: 3.9500, dt: 1280.22ms, fracRes: 0.6004, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6456, norm(y): 0.9977, norm:0.8500, tok/sec: 102382.25, flops:89.65, batch-reuse:1
@ 9610 train 3.9895 , allloss: 4.0025, dt: 1267.98ms, fracRes: 0.5998, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6461, norm(y): 0.9976, norm:0.8183, tok/sec: 103370.77, flops:90.52, batch-reuse:1
@ 9611 train 3.9832 , allloss: 3.9965, dt: 1266.90ms, fracRes: 0.5993, norm(attn): 0.1592, norm(output): 0.2490, norm(x): 0.6452, norm(y): 0.9979, norm:0.8584, tok/sec: 103458.50, flops:90.60, batch-reuse:1
@ 9612 train 4.0720 , allloss: 4.0860, dt: 1288.16ms, fracRes: 0.5991, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6482, norm(y): 0.9979, norm:0.8976, tok/sec: 101751.12, flops:89.10, batch-reuse:1
@ 9613 train 4.0956 , allloss: 4.1091, dt: 1280.72ms, fracRes: 0.5986, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6475, norm(y): 0.9977, norm:0.9189, tok/sec: 102342.13, flops:89.62, batch-reuse:1
@ 9614 train 3.9908 , allloss: 4.0047, dt: 1269.87ms, fracRes: 0.6001, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6471, norm(y): 0.9976, norm:0.8231, tok/sec: 103216.92, flops:90.39, batch-reuse:1
@ 9615 train 3.8950 , allloss: 3.9076, dt: 1265.55ms, fracRes: 0.6007, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6481, norm(y): 0.9979, norm:0.8877, tok/sec: 103568.91, flops:90.69, batch-reuse:1
@ 9616 train 3.9944 , allloss: 4.0069, dt: 1271.23ms, fracRes: 0.6003, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6490, norm(y): 0.9978, norm:0.9183, tok/sec: 103106.04, flops:90.29, batch-reuse:1
@ 9617 train 3.9902 , allloss: 4.0030, dt: 1286.26ms, fracRes: 0.6000, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6508, norm(y): 0.9977, norm:0.9140, tok/sec: 101901.25, flops:89.23, batch-reuse:1
@ 9618 train 3.9301 , allloss: 3.9440, dt: 1263.58ms, fracRes: 0.6003, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6499, norm(y): 0.9980, norm:1.0798, tok/sec: 103731.02, flops:90.84, batch-reuse:1
@ 9619 train 3.7213 , allloss: 3.7352, dt: 1270.02ms, fracRes: 0.6007, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6498, norm(y): 0.9982, norm:0.8759, tok/sec: 103204.93, flops:90.38, batch-reuse:1
@ 9620 train 3.7829 , allloss: 3.7965, dt: 1266.84ms, fracRes: 0.5998, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6453, norm(y): 0.9981, norm:0.9385, tok/sec: 103463.45, flops:90.60, batch-reuse:1
@ 9621 train 3.8519 , allloss: 3.8651, dt: 1235.98ms, fracRes: 0.5997, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6439, norm(y): 0.9981, norm:1.0652, tok/sec: 106047.18, flops:92.86, batch-reuse:1
@ 9622 train 3.8192 , allloss: 3.8327, dt: 1256.16ms, fracRes: 0.5991, norm(attn): 0.1592, norm(output): 0.2490, norm(x): 0.6438, norm(y): 0.9980, norm:1.0146, tok/sec: 104343.75, flops:91.37, batch-reuse:1
@ 9623 train 3.7526 , allloss: 3.7665, dt: 1275.84ms, fracRes: 0.5979, norm(attn): 0.1602, norm(output): 0.2520, norm(x): 0.6454, norm(y): 0.9977, norm:0.9100, tok/sec: 102733.63, flops:89.96, batch-reuse:1
@ 9624 train 3.7822 , allloss: 3.7952, dt: 1270.70ms, fracRes: 0.5989, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6401, norm(y): 0.9978, norm:0.8520, tok/sec: 103149.70, flops:90.33, batch-reuse:1
@ 9625 train 3.7002 , allloss: 3.7135, dt: 1274.49ms, fracRes: 0.6003, norm(attn): 0.1582, norm(output): 0.2471, norm(x): 0.6405, norm(y): 0.9980, norm:1.0044, tok/sec: 102842.50, flops:90.06, batch-reuse:1
@ 9626 train 3.7618 , allloss: 3.7747, dt: 1276.14ms, fracRes: 0.6007, norm(attn): 0.1562, norm(output): 0.2471, norm(x): 0.6408, norm(y): 0.9981, norm:0.9559, tok/sec: 102709.89, flops:89.94, batch-reuse:1
@ 9627 train 3.8535 , allloss: 3.8669, dt: 1286.53ms, fracRes: 0.6007, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6488, norm(y): 0.9978, norm:0.9250, tok/sec: 101880.65, flops:89.22, batch-reuse:1
@ 9628 train 3.9777 , allloss: 3.9908, dt: 1288.40ms, fracRes: 0.6006, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6489, norm(y): 0.9976, norm:1.0039, tok/sec: 101732.71, flops:89.09, batch-reuse:1
@ 9629 train 3.8978 , allloss: 3.9109, dt: 1292.71ms, fracRes: 0.6014, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6459, norm(y): 0.9979, norm:1.0317, tok/sec: 101393.27, flops:88.79, batch-reuse:1
@ 9630 train 3.8927 , allloss: 3.9062, dt: 1284.41ms, fracRes: 0.6014, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6468, norm(y): 0.9979, norm:1.0896, tok/sec: 102048.51, flops:89.36, batch-reuse:1
@ 9631 train 3.7690 , allloss: 3.7818, dt: 1261.26ms, fracRes: 0.6011, norm(attn): 0.1572, norm(output): 0.2480, norm(x): 0.6437, norm(y): 0.9979, norm:0.9114, tok/sec: 103921.73, flops:91.00, batch-reuse:1
@ 9632 train 3.7501 , allloss: 3.7631, dt: 1281.19ms, fracRes: 0.6009, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6428, norm(y): 0.9979, norm:1.3097, tok/sec: 102304.70, flops:89.59, batch-reuse:1
@ 9633 train 3.8596 , allloss: 3.8725, dt: 1268.91ms, fracRes: 0.6006, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6423, norm(y): 0.9979, norm:0.9283, tok/sec: 103294.61, flops:90.45, batch-reuse:1
@ 9634 train 3.8739 , allloss: 3.8868, dt: 1274.91ms, fracRes: 0.6002, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6455, norm(y): 0.9978, norm:1.1894, tok/sec: 102808.64, flops:90.03, batch-reuse:1
@ 9635 train 3.8425 , allloss: 3.8553, dt: 1277.84ms, fracRes: 0.6014, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6444, norm(y): 0.9980, norm:1.1350, tok/sec: 102573.39, flops:89.82, batch-reuse:1
@ 9636 train 3.6648 , allloss: 3.6784, dt: 1267.71ms, fracRes: 0.5998, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6453, norm(y): 0.9979, norm:1.0282, tok/sec: 103393.06, flops:90.54, batch-reuse:1
@ 9637 train 3.6832 , allloss: 3.6962, dt: 1287.41ms, fracRes: 0.5992, norm(attn): 0.1572, norm(output): 0.2480, norm(x): 0.6433, norm(y): 0.9980, norm:0.8860, tok/sec: 101810.42, flops:89.15, batch-reuse:1
@ 9638 train 3.7745 , allloss: 3.7877, dt: 1306.83ms, fracRes: 0.5984, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6458, norm(y): 0.9978, norm:1.0176, tok/sec: 100297.76, flops:87.83, batch-reuse:1
@ 9639 train 3.7093 , allloss: 3.7223, dt: 1284.51ms, fracRes: 0.5995, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6465, norm(y): 0.9979, norm:0.9904, tok/sec: 102040.10, flops:89.36, batch-reuse:1
@ 9640 train 3.7703 , allloss: 3.7834, dt: 1249.71ms, fracRes: 0.5998, norm(attn): 0.1592, norm(output): 0.2490, norm(x): 0.6468, norm(y): 0.9978, norm:0.9123, tok/sec: 104881.97, flops:91.84, batch-reuse:1
@ 9641 train 3.8167 , allloss: 3.8295, dt: 1258.38ms, fracRes: 0.6004, norm(attn): 0.1592, norm(output): 0.2480, norm(x): 0.6445, norm(y): 0.9978, norm:0.8917, tok/sec: 104159.08, flops:91.21, batch-reuse:1
@ 9642 train 3.8095 , allloss: 3.8231, dt: 1282.05ms, fracRes: 0.6001, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6459, norm(y): 0.9979, norm:0.8828, tok/sec: 102236.42, flops:89.53, batch-reuse:1
@ 9643 train 3.8235 , allloss: 3.8364, dt: 1280.98ms, fracRes: 0.5998, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6446, norm(y): 0.9978, norm:0.9134, tok/sec: 102321.48, flops:89.60, batch-reuse:1
@ 9644 train 3.8723 , allloss: 3.8853, dt: 1260.59ms, fracRes: 0.6000, norm(attn): 0.1572, norm(output): 0.2480, norm(x): 0.6453, norm(y): 0.9977, norm:0.8457, tok/sec: 103976.88, flops:91.05, batch-reuse:1
@ 9645 train 3.7814 , allloss: 3.7946, dt: 1270.51ms, fracRes: 0.5998, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6457, norm(y): 0.9978, norm:0.8938, tok/sec: 103164.68, flops:90.34, batch-reuse:1
@ 9646 train 3.7206 , allloss: 3.7332, dt: 1285.17ms, fracRes: 0.5987, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6429, norm(y): 0.9977, norm:0.9220, tok/sec: 101988.15, flops:89.31, batch-reuse:1
@ 9647 train 3.8158 , allloss: 3.8292, dt: 1282.38ms, fracRes: 0.5996, norm(attn): 0.1582, norm(output): 0.2480, norm(x): 0.6440, norm(y): 0.9977, norm:1.0290, tok/sec: 102209.70, flops:89.50, batch-reuse:1
@ 9648 train 3.7986 , allloss: 3.8128, dt: 1276.27ms, fracRes: 0.6002, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6462, norm(y): 0.9977, norm:0.9596, tok/sec: 102699.55, flops:89.93, batch-reuse:1
@ 9649 train 3.7700 , allloss: 3.7830, dt: 1260.30ms, fracRes: 0.6006, norm(attn): 0.1562, norm(output): 0.2480, norm(x): 0.6431, norm(y): 0.9979, norm:0.9634, tok/sec: 104000.92, flops:91.07, batch-reuse:1
@ 9650 train 3.9177 , allloss: 3.9312, dt: 1267.19ms, fracRes: 0.6015, norm(attn): 0.1592, norm(output): 0.2490, norm(x): 0.6485, norm(y): 0.9978, norm:1.0156, tok/sec: 103435.36, flops:90.58, batch-reuse:1
@ 9651 train 3.7936 , allloss: 3.8070, dt: 1267.48ms, fracRes: 0.6004, norm(attn): 0.1602, norm(output): 0.2480, norm(x): 0.6452, norm(y): 0.9978, norm:1.0647, tok/sec: 103411.50, flops:90.56, batch-reuse:1
@ 9652 train 3.7816 , allloss: 3.7947, dt: 1267.13ms, fracRes: 0.6003, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6412, norm(y): 0.9977, norm:0.9878, tok/sec: 103440.46, flops:90.58, batch-reuse:1
@ 9653 train 3.8796 , allloss: 3.8929, dt: 1261.80ms, fracRes: 0.6009, norm(attn): 0.1572, norm(output): 0.2480, norm(x): 0.6437, norm(y): 0.9977, norm:0.9037, tok/sec: 103877.10, flops:90.96, batch-reuse:1
@ 9654 train 3.8580 , allloss: 3.8715, dt: 1260.08ms, fracRes: 0.6008, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6474, norm(y): 0.9976, norm:0.9854, tok/sec: 104018.41, flops:91.09, batch-reuse:1
@ 9655 train 3.7748 , allloss: 3.7877, dt: 1298.69ms, fracRes: 0.6006, norm(attn): 0.1592, norm(output): 0.2480, norm(x): 0.6464, norm(y): 0.9979, norm:0.9366, tok/sec: 100926.57, flops:88.38, batch-reuse:1
@ 9656 train 3.8211 , allloss: 3.8341, dt: 1285.26ms, fracRes: 0.6002, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6449, norm(y): 0.9976, norm:0.9941, tok/sec: 101980.77, flops:89.30, batch-reuse:1
@ 9657 train 3.7967 , allloss: 3.8101, dt: 1287.24ms, fracRes: 0.6003, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6447, norm(y): 0.9977, norm:1.2372, tok/sec: 101823.89, flops:89.17, batch-reuse:1
@ 9658 train 3.7815 , allloss: 3.7940, dt: 1285.41ms, fracRes: 0.6007, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6402, norm(y): 0.9977, norm:0.8880, tok/sec: 101969.20, flops:89.29, batch-reuse:1
@ 9659 train 4.0567 , allloss: 4.0713, dt: 1282.64ms, fracRes: 0.6016, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6471, norm(y): 0.9978, norm:1.5460, tok/sec: 102189.58, flops:89.49, batch-reuse:1
@ 9660 train 3.8649 , allloss: 3.8782, dt: 1273.05ms, fracRes: 0.6006, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6423, norm(y): 0.9976, norm:0.9118, tok/sec: 102958.78, flops:90.16, batch-reuse:1
@ 9661 train 3.7753 , allloss: 3.7890, dt: 1281.44ms, fracRes: 0.6003, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6444, norm(y): 0.9978, norm:1.2797, tok/sec: 102285.04, flops:89.57, batch-reuse:1
@ 9662 train 3.8822 , allloss: 3.8952, dt: 1270.74ms, fracRes: 0.5999, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6408, norm(y): 0.9975, norm:1.0334, tok/sec: 103146.08, flops:90.32, batch-reuse:1
@ 9663 train 3.8350 , allloss: 3.8478, dt: 1262.79ms, fracRes: 0.6002, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6429, norm(y): 0.9976, norm:0.8400, tok/sec: 103795.78, flops:90.89, batch-reuse:1
@ 9664 train 3.8447 , allloss: 3.8575, dt: 1251.76ms, fracRes: 0.6009, norm(attn): 0.1582, norm(output): 0.2480, norm(x): 0.6435, norm(y): 0.9978, norm:0.9031, tok/sec: 104710.53, flops:91.69, batch-reuse:1
@ 9665 train 3.9396 , allloss: 3.9527, dt: 1241.33ms, fracRes: 0.6009, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6416, norm(y): 0.9979, norm:0.9024, tok/sec: 105589.98, flops:92.46, batch-reuse:1
@ 9666 train 3.9615 , allloss: 3.9756, dt: 1254.83ms, fracRes: 0.6010, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6445, norm(y): 0.9976, norm:0.9571, tok/sec: 104453.78, flops:91.47, batch-reuse:1
@ 9667 train 3.9847 , allloss: 3.9980, dt: 1252.47ms, fracRes: 0.6002, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6413, norm(y): 0.9975, norm:0.8813, tok/sec: 104651.07, flops:91.64, batch-reuse:1
@ 9668 train 4.0043 , allloss: 4.0192, dt: 1270.72ms, fracRes: 0.5997, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6459, norm(y): 0.9975, norm:0.9932, tok/sec: 103147.71, flops:90.32, batch-reuse:1
@ 9669 train 4.0111 , allloss: 4.0257, dt: 1272.41ms, fracRes: 0.5983, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6435, norm(y): 0.9974, norm:0.9152, tok/sec: 103011.08, flops:90.21, batch-reuse:1
@ 9670 train 4.1916 , allloss: 4.2052, dt: 1261.74ms, fracRes: 0.5995, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6430, norm(y): 0.9974, norm:1.0238, tok/sec: 103881.83, flops:90.97, batch-reuse:1
@ 9671 train 4.1178 , allloss: 4.1310, dt: 1275.90ms, fracRes: 0.6000, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6450, norm(y): 0.9973, norm:1.0156, tok/sec: 102728.97, flops:89.96, batch-reuse:1
@ 9672 train 4.0189 , allloss: 4.0326, dt: 1270.30ms, fracRes: 0.6012, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6445, norm(y): 0.9975, norm:1.0010, tok/sec: 103181.91, flops:90.35, batch-reuse:1
@ 9673 train 4.0101 , allloss: 4.0238, dt: 1265.12ms, fracRes: 0.6010, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6432, norm(y): 0.9974, norm:1.0320, tok/sec: 103604.55, flops:90.73, batch-reuse:1
@ 9674 train 4.1845 , allloss: 4.1979, dt: 1287.56ms, fracRes: 0.6005, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6450, norm(y): 0.9971, norm:1.0568, tok/sec: 101798.92, flops:89.14, batch-reuse:1
@ 9675 train 4.0471 , allloss: 4.0605, dt: 1269.27ms, fracRes: 0.6009, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6418, norm(y): 0.9971, norm:0.9777, tok/sec: 103265.76, flops:90.43, batch-reuse:1
@ 9676 train 4.0248 , allloss: 4.0378, dt: 1270.72ms, fracRes: 0.6009, norm(attn): 0.1582, norm(output): 0.2480, norm(x): 0.6393, norm(y): 0.9974, norm:0.8668, tok/sec: 103147.84, flops:90.33, batch-reuse:1
@ 9677 train 3.9657 , allloss: 3.9792, dt: 1257.56ms, fracRes: 0.6002, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6405, norm(y): 0.9975, norm:1.0066, tok/sec: 104227.41, flops:91.27, batch-reuse:1
@ 9678 train 3.9926 , allloss: 4.0062, dt: 1279.50ms, fracRes: 0.5997, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6439, norm(y): 0.9975, norm:0.9364, tok/sec: 102440.17, flops:89.71, batch-reuse:1
@ 9679 train 4.0862 , allloss: 4.0993, dt: 1278.74ms, fracRes: 0.6000, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6435, norm(y): 0.9972, norm:0.8969, tok/sec: 102501.00, flops:89.76, batch-reuse:1
@ 9680 train 3.9182 , allloss: 3.9317, dt: 1255.00ms, fracRes: 0.6009, norm(attn): 0.1592, norm(output): 0.2490, norm(x): 0.6443, norm(y): 0.9973, norm:1.0587, tok/sec: 104439.51, flops:91.46, batch-reuse:1
@ 9681 train 4.0898 , allloss: 4.1032, dt: 1237.74ms, fracRes: 0.6006, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6440, norm(y): 0.9973, norm:0.9581, tok/sec: 105895.88, flops:92.73, batch-reuse:1
@ 9682 train 4.1040 , allloss: 4.1183, dt: 1271.18ms, fracRes: 0.6012, norm(attn): 0.1582, norm(output): 0.2480, norm(x): 0.6461, norm(y): 0.9974, norm:1.8320, tok/sec: 103110.21, flops:90.29, batch-reuse:1
@ 9683 train 4.1040 , allloss: 4.1178, dt: 1290.96ms, fracRes: 0.5995, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6448, norm(y): 0.9973, norm:1.2227, tok/sec: 101530.30, flops:88.91, batch-reuse:1
@ 9684 train 3.9573 , allloss: 3.9712, dt: 1284.77ms, fracRes: 0.5991, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6428, norm(y): 0.9972, norm:1.3476, tok/sec: 102020.02, flops:89.34, batch-reuse:1
@ 9685 train 4.0450 , allloss: 4.0587, dt: 1286.76ms, fracRes: 0.6000, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6455, norm(y): 0.9973, norm:1.2084, tok/sec: 101862.24, flops:89.20, batch-reuse:1
@ 9686 train 4.0142 , allloss: 4.0274, dt: 1258.69ms, fracRes: 0.5998, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6447, norm(y): 0.9972, norm:1.3604, tok/sec: 104133.30, flops:91.19, batch-reuse:1
@ 9687 train 4.0359 , allloss: 4.0491, dt: 1278.19ms, fracRes: 0.5999, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6478, norm(y): 0.9969, norm:1.1494, tok/sec: 102545.01, flops:89.80, batch-reuse:1
@ 9688 train 4.0831 , allloss: 4.0962, dt: 1275.74ms, fracRes: 0.6000, norm(attn): 0.1611, norm(output): 0.2520, norm(x): 0.6494, norm(y): 0.9972, norm:1.0275, tok/sec: 102741.70, flops:89.97, batch-reuse:1
@ 9689 train 4.0390 , allloss: 4.0527, dt: 1304.94ms, fracRes: 0.6005, norm(attn): 0.1602, norm(output): 0.2520, norm(x): 0.6527, norm(y): 0.9973, norm:1.4956, tok/sec: 100443.28, flops:87.96, batch-reuse:1
@ 9690 train 3.9687 , allloss: 3.9827, dt: 1308.61ms, fracRes: 0.6016, norm(attn): 0.1602, norm(output): 0.2520, norm(x): 0.6570, norm(y): 0.9974, norm:1.0109, tok/sec: 100161.46, flops:87.71, batch-reuse:1
@ 9691 train 4.0300 , allloss: 4.0434, dt: 1288.33ms, fracRes: 0.6010, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6554, norm(y): 0.9974, norm:1.2829, tok/sec: 101737.64, flops:89.09, batch-reuse:1
@ 9692 train 3.9847 , allloss: 3.9985, dt: 1268.90ms, fracRes: 0.6001, norm(attn): 0.1592, norm(output): 0.2520, norm(x): 0.6579, norm(y): 0.9972, norm:1.0930, tok/sec: 103295.58, flops:90.45, batch-reuse:1
@ 9693 train 3.9966 , allloss: 4.0099, dt: 1280.26ms, fracRes: 0.6002, norm(attn): 0.1602, norm(output): 0.2520, norm(x): 0.6561, norm(y): 0.9974, norm:1.0089, tok/sec: 102379.48, flops:89.65, batch-reuse:1
@ 9694 train 3.9630 , allloss: 3.9762, dt: 1295.36ms, fracRes: 0.5995, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6519, norm(y): 0.9972, norm:0.9402, tok/sec: 101185.56, flops:88.61, batch-reuse:1
@ 9695 train 4.0818 , allloss: 4.0951, dt: 1272.16ms, fracRes: 0.6003, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6480, norm(y): 0.9973, norm:0.9466, tok/sec: 103030.75, flops:90.22, batch-reuse:1
@ 9696 train 4.0893 , allloss: 4.1029, dt: 1276.17ms, fracRes: 0.6011, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6477, norm(y): 0.9972, norm:0.9914, tok/sec: 102707.36, flops:89.94, batch-reuse:1
@ 9697 train 4.0343 , allloss: 4.0476, dt: 1268.79ms, fracRes: 0.6002, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6451, norm(y): 0.9975, norm:0.9064, tok/sec: 103305.11, flops:90.46, batch-reuse:1
@ 9698 train 4.0449 , allloss: 4.0581, dt: 1261.76ms, fracRes: 0.5999, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6462, norm(y): 0.9972, norm:0.9145, tok/sec: 103880.16, flops:90.97, batch-reuse:1
@ 9699 train 4.0326 , allloss: 4.0454, dt: 1270.95ms, fracRes: 0.6004, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6482, norm(y): 0.9974, norm:0.9140, tok/sec: 103129.25, flops:90.31, batch-reuse:1
@ 9700 train 3.9833 , allloss: 3.9963, dt: 1269.02ms, fracRes: 0.6004, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6496, norm(y): 0.9972, norm:0.9034, tok/sec: 103285.78, flops:90.45, batch-reuse:1
@ 9701 train 4.0869 , allloss: 4.1001, dt: 1259.41ms, fracRes: 0.6007, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6530, norm(y): 0.9972, norm:0.9560, tok/sec: 104074.02, flops:91.14, batch-reuse:1
@ 9702 train 4.0081 , allloss: 4.0212, dt: 1265.56ms, fracRes: 0.6006, norm(attn): 0.1592, norm(output): 0.2520, norm(x): 0.6533, norm(y): 0.9973, norm:0.9117, tok/sec: 103568.64, flops:90.69, batch-reuse:1
@ 9703 train 4.0292 , allloss: 4.0428, dt: 1255.19ms, fracRes: 0.6012, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6546, norm(y): 0.9976, norm:0.8834, tok/sec: 104424.20, flops:91.44, batch-reuse:1
@ 9704 train 4.0762 , allloss: 4.0906, dt: 1240.97ms, fracRes: 0.6000, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6528, norm(y): 0.9973, norm:1.0276, tok/sec: 105620.98, flops:92.49, batch-reuse:1
@ 9705 train 4.0247 , allloss: 4.0380, dt: 1249.32ms, fracRes: 0.5998, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6488, norm(y): 0.9975, norm:0.8728, tok/sec: 104914.31, flops:91.87, batch-reuse:1
@ 9706 train 4.0302 , allloss: 4.0438, dt: 1249.83ms, fracRes: 0.5995, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6480, norm(y): 0.9976, norm:0.8688, tok/sec: 104871.48, flops:91.83, batch-reuse:1
@ 9707 train 4.0485 , allloss: 4.0617, dt: 1254.83ms, fracRes: 0.5986, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6436, norm(y): 0.9972, norm:0.8890, tok/sec: 104453.64, flops:91.47, batch-reuse:1
@ 9708 train 3.9608 , allloss: 3.9748, dt: 1289.68ms, fracRes: 0.5996, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6463, norm(y): 0.9973, norm:0.8918, tok/sec: 101631.39, flops:89.00, batch-reuse:1
@ 9709 train 3.9726 , allloss: 3.9863, dt: 1266.68ms, fracRes: 0.5995, norm(attn): 0.1602, norm(output): 0.2520, norm(x): 0.6450, norm(y): 0.9973, norm:0.8626, tok/sec: 103476.67, flops:90.61, batch-reuse:1
@ 9710 train 4.1315 , allloss: 4.1446, dt: 1248.12ms, fracRes: 0.6000, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6465, norm(y): 0.9971, norm:0.8906, tok/sec: 105015.78, flops:91.96, batch-reuse:1
@ 9711 train 4.0700 , allloss: 4.0830, dt: 1255.46ms, fracRes: 0.6003, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6467, norm(y): 0.9971, norm:0.9707, tok/sec: 104401.45, flops:91.42, batch-reuse:1
@ 9712 train 4.0505 , allloss: 4.0643, dt: 1271.56ms, fracRes: 0.6008, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6494, norm(y): 0.9972, norm:0.9290, tok/sec: 103079.74, flops:90.27, batch-reuse:1
@ 9713 train 4.0118 , allloss: 4.0253, dt: 1243.06ms, fracRes: 0.5999, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6514, norm(y): 0.9972, norm:0.8561, tok/sec: 105443.25, flops:92.34, batch-reuse:1
@ 9714 train 4.0329 , allloss: 4.0462, dt: 1245.15ms, fracRes: 0.6003, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6496, norm(y): 0.9973, norm:0.8972, tok/sec: 105265.72, flops:92.18, batch-reuse:1
@ 9715 train 4.1669 , allloss: 4.1799, dt: 1286.33ms, fracRes: 0.6003, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6457, norm(y): 0.9973, norm:0.9811, tok/sec: 101896.17, flops:89.23, batch-reuse:1
@ 9716 train 4.0875 , allloss: 4.1005, dt: 1256.42ms, fracRes: 0.6000, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6453, norm(y): 0.9970, norm:0.9438, tok/sec: 104322.19, flops:91.35, batch-reuse:1
@ 9717 train 4.0430 , allloss: 4.0566, dt: 1264.08ms, fracRes: 0.6006, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6491, norm(y): 0.9972, norm:0.9288, tok/sec: 103689.24, flops:90.80, batch-reuse:1
@ 9718 train 4.1120 , allloss: 4.1258, dt: 1276.18ms, fracRes: 0.5988, norm(attn): 0.1602, norm(output): 0.2520, norm(x): 0.6463, norm(y): 0.9972, norm:1.0939, tok/sec: 102706.92, flops:89.94, batch-reuse:1
@ 9719 train 3.9643 , allloss: 3.9774, dt: 1252.45ms, fracRes: 0.5992, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6404, norm(y): 0.9973, norm:0.9743, tok/sec: 104652.06, flops:91.64, batch-reuse:1
@ 9720 train 4.0729 , allloss: 4.0861, dt: 1273.16ms, fracRes: 0.6002, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6422, norm(y): 0.9972, norm:0.9144, tok/sec: 102950.28, flops:90.15, batch-reuse:1
@ 9721 train 4.0328 , allloss: 4.0465, dt: 1255.81ms, fracRes: 0.6017, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6448, norm(y): 0.9973, norm:1.1079, tok/sec: 104372.22, flops:91.40, batch-reuse:1
@ 9722 train 4.0360 , allloss: 4.0493, dt: 1258.81ms, fracRes: 0.6016, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6437, norm(y): 0.9974, norm:1.0961, tok/sec: 104124.13, flops:91.18, batch-reuse:1
@ 9723 train 4.0629 , allloss: 4.0762, dt: 1258.83ms, fracRes: 0.6013, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6462, norm(y): 0.9972, norm:0.9246, tok/sec: 104122.19, flops:91.18, batch-reuse:1
@ 9724 train 3.9980 , allloss: 4.0111, dt: 1275.85ms, fracRes: 0.6006, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6478, norm(y): 0.9971, norm:0.8493, tok/sec: 102732.88, flops:89.96, batch-reuse:1
@ 9725 train 4.0485 , allloss: 4.0615, dt: 1286.07ms, fracRes: 0.5998, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6447, norm(y): 0.9970, norm:1.0514, tok/sec: 101916.80, flops:89.25, batch-reuse:1
@ 9726 train 4.0381 , allloss: 4.0514, dt: 1294.61ms, fracRes: 0.5994, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6436, norm(y): 0.9971, norm:0.9090, tok/sec: 101244.16, flops:88.66, batch-reuse:1
@ 9727 train 4.0119 , allloss: 4.0251, dt: 1301.13ms, fracRes: 0.6003, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6450, norm(y): 0.9972, norm:0.9046, tok/sec: 100737.21, flops:88.21, batch-reuse:1
@ 9728 train 4.0716 , allloss: 4.0845, dt: 1269.00ms, fracRes: 0.6013, norm(attn): 0.1562, norm(output): 0.2490, norm(x): 0.6440, norm(y): 0.9971, norm:1.0673, tok/sec: 103287.24, flops:90.45, batch-reuse:1
@ 9729 train 3.9961 , allloss: 4.0087, dt: 1272.06ms, fracRes: 0.6001, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6442, norm(y): 0.9971, norm:0.9045, tok/sec: 103039.33, flops:90.23, batch-reuse:1
@ 9730 train 4.0510 , allloss: 4.0651, dt: 1281.44ms, fracRes: 0.6014, norm(attn): 0.1592, norm(output): 0.2490, norm(x): 0.6459, norm(y): 0.9973, norm:0.9818, tok/sec: 102285.02, flops:89.57, batch-reuse:1
@ 9731 train 4.0218 , allloss: 4.0345, dt: 1261.23ms, fracRes: 0.6006, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6445, norm(y): 0.9972, norm:0.8455, tok/sec: 103923.93, flops:91.00, batch-reuse:1
@ 9732 train 3.9667 , allloss: 3.9795, dt: 1270.42ms, fracRes: 0.6002, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6457, norm(y): 0.9972, norm:0.8540, tok/sec: 103172.13, flops:90.35, batch-reuse:1
@ 9733 train 4.0933 , allloss: 4.1062, dt: 1275.42ms, fracRes: 0.6001, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6423, norm(y): 0.9972, norm:0.8759, tok/sec: 102767.59, flops:89.99, batch-reuse:1
@ 9734 train 4.1041 , allloss: 4.1169, dt: 1241.01ms, fracRes: 0.5989, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6401, norm(y): 0.9972, norm:0.9318, tok/sec: 105617.12, flops:92.49, batch-reuse:1
@ 9735 train 3.9984 , allloss: 4.0119, dt: 1252.68ms, fracRes: 0.5992, norm(attn): 0.1602, norm(output): 0.2490, norm(x): 0.6439, norm(y): 0.9971, norm:0.8381, tok/sec: 104633.36, flops:91.63, batch-reuse:1
@ 9736 train 4.0761 , allloss: 4.0892, dt: 1271.35ms, fracRes: 0.5995, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6420, norm(y): 0.9971, norm:0.9014, tok/sec: 103096.99, flops:90.28, batch-reuse:1
@ 9737 train 4.0123 , allloss: 4.0251, dt: 1269.95ms, fracRes: 0.6003, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6394, norm(y): 0.9971, norm:0.9075, tok/sec: 103210.23, flops:90.38, batch-reuse:1
@ 9738 train 4.0321 , allloss: 4.0449, dt: 1266.03ms, fracRes: 0.6006, norm(attn): 0.1582, norm(output): 0.2480, norm(x): 0.6404, norm(y): 0.9972, norm:0.9732, tok/sec: 103530.28, flops:90.66, batch-reuse:1
@ 9739 train 4.1447 , allloss: 4.1578, dt: 1276.91ms, fracRes: 0.6006, norm(attn): 0.1572, norm(output): 0.2480, norm(x): 0.6418, norm(y): 0.9971, norm:0.8693, tok/sec: 102647.95, flops:89.89, batch-reuse:1
@ 9740 train 3.9428 , allloss: 3.9554, dt: 1284.37ms, fracRes: 0.6002, norm(attn): 0.1572, norm(output): 0.2480, norm(x): 0.6409, norm(y): 0.9971, norm:1.0054, tok/sec: 102051.21, flops:89.36, batch-reuse:1
@ 9741 train 4.0814 , allloss: 4.0942, dt: 1311.83ms, fracRes: 0.5993, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6427, norm(y): 0.9968, norm:0.8450, tok/sec: 99915.65, flops:87.49, batch-reuse:1
@ 9742 train 3.9686 , allloss: 3.9814, dt: 1282.28ms, fracRes: 0.5990, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6443, norm(y): 0.9970, norm:0.9339, tok/sec: 102218.00, flops:89.51, batch-reuse:1
@ 9743 train 4.0394 , allloss: 4.0524, dt: 1259.96ms, fracRes: 0.5996, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6437, norm(y): 0.9970, norm:0.8554, tok/sec: 104028.47, flops:91.10, batch-reuse:1
@ 9744 train 4.1190 , allloss: 4.1332, dt: 1261.08ms, fracRes: 0.6002, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6486, norm(y): 0.9966, norm:1.9688, tok/sec: 103935.99, flops:91.02, batch-reuse:1
@ 9745 train 4.0343 , allloss: 4.0476, dt: 1270.24ms, fracRes: 0.5995, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6405, norm(y): 0.9969, norm:1.4159, tok/sec: 103186.97, flops:90.36, batch-reuse:1
@ 9746 train 4.0423 , allloss: 4.0554, dt: 1269.51ms, fracRes: 0.5991, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6391, norm(y): 0.9970, norm:1.0437, tok/sec: 103245.80, flops:90.41, batch-reuse:1
@ 9747 train 3.9677 , allloss: 3.9812, dt: 1282.67ms, fracRes: 0.5987, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6416, norm(y): 0.9972, norm:0.9425, tok/sec: 102186.58, flops:89.48, batch-reuse:1
@ 9748 train 4.0540 , allloss: 4.0673, dt: 1309.40ms, fracRes: 0.5988, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6429, norm(y): 0.9970, norm:1.1079, tok/sec: 100100.64, flops:87.66, batch-reuse:1
@ 9749 train 4.2954 , allloss: 4.3084, dt: 1304.06ms, fracRes: 0.5981, norm(attn): 0.1631, norm(output): 0.2520, norm(x): 0.6427, norm(y): 0.9967, norm:1.3204, tok/sec: 100510.53, flops:88.02, batch-reuse:1
@ 9750 train 4.1245 , allloss: 4.1377, dt: 1263.27ms, fracRes: 0.6011, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6490, norm(y): 0.9970, norm:1.1978, tok/sec: 103755.88, flops:90.86, batch-reuse:1
@ 9751 train 4.2156 , allloss: 4.2292, dt: 1249.76ms, fracRes: 0.6024, norm(attn): 0.1602, norm(output): 0.2490, norm(x): 0.6493, norm(y): 0.9972, norm:1.5837, tok/sec: 104877.38, flops:91.84, batch-reuse:1
@ 9752 train 4.0724 , allloss: 4.0850, dt: 1285.62ms, fracRes: 0.6008, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6470, norm(y): 0.9971, norm:1.0049, tok/sec: 101952.67, flops:89.28, batch-reuse:1
@ 9753 train 4.0199 , allloss: 4.0328, dt: 1304.49ms, fracRes: 0.6010, norm(attn): 0.1572, norm(output): 0.2500, norm(x): 0.6491, norm(y): 0.9972, norm:1.0466, tok/sec: 100477.65, flops:87.99, batch-reuse:1
@ 9754 train 3.9566 , allloss: 3.9694, dt: 1312.19ms, fracRes: 0.6000, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6479, norm(y): 0.9972, norm:1.0464, tok/sec: 99888.22, flops:87.47, batch-reuse:1
@ 9755 train 4.0105 , allloss: 4.0238, dt: 1292.78ms, fracRes: 0.5998, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6467, norm(y): 0.9973, norm:1.0016, tok/sec: 101387.36, flops:88.78, batch-reuse:1
@ 9756 train 4.0552 , allloss: 4.0705, dt: 1275.12ms, fracRes: 0.5997, norm(attn): 0.1611, norm(output): 0.2539, norm(x): 0.6524, norm(y): 0.9970, norm:1.1978, tok/sec: 102791.95, flops:90.01, batch-reuse:1
@ 9757 train 4.0290 , allloss: 4.0423, dt: 1293.09ms, fracRes: 0.6001, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6480, norm(y): 0.9972, norm:0.9605, tok/sec: 101363.54, flops:88.76, batch-reuse:1
@ 9758 train 4.1020 , allloss: 4.1156, dt: 1275.68ms, fracRes: 0.6003, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6487, norm(y): 0.9971, norm:1.6068, tok/sec: 102746.98, flops:89.97, batch-reuse:1
@ 9759 train 3.9897 , allloss: 4.0029, dt: 1255.56ms, fracRes: 0.6004, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6469, norm(y): 0.9972, norm:1.0127, tok/sec: 104393.01, flops:91.42, batch-reuse:1
@ 9760 train 3.9370 , allloss: 3.9499, dt: 1285.08ms, fracRes: 0.6003, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6453, norm(y): 0.9973, norm:0.8961, tok/sec: 101995.29, flops:89.32, batch-reuse:1
@ 9761 train 4.0091 , allloss: 4.0227, dt: 1317.82ms, fracRes: 0.6007, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6466, norm(y): 0.9973, norm:1.1011, tok/sec: 99461.32, flops:87.10, batch-reuse:1
@ 9762 train 4.0485 , allloss: 4.0616, dt: 1315.54ms, fracRes: 0.6012, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6522, norm(y): 0.9973, norm:1.0144, tok/sec: 99633.51, flops:87.25, batch-reuse:1
@ 9763 train 4.0916 , allloss: 4.1042, dt: 1310.20ms, fracRes: 0.6007, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6523, norm(y): 0.9970, norm:0.9655, tok/sec: 100040.04, flops:87.60, batch-reuse:1
@ 9764 train 3.9486 , allloss: 3.9615, dt: 1269.84ms, fracRes: 0.6008, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6532, norm(y): 0.9973, norm:1.0583, tok/sec: 103219.32, flops:90.39, batch-reuse:1
@ 9765 train 3.9816 , allloss: 3.9947, dt: 1294.31ms, fracRes: 0.6002, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6520, norm(y): 0.9971, norm:0.9804, tok/sec: 101268.11, flops:88.68, batch-reuse:1
@ 9766 train 4.0031 , allloss: 4.0160, dt: 1249.70ms, fracRes: 0.6000, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6511, norm(y): 0.9972, norm:1.0414, tok/sec: 104882.49, flops:91.84, batch-reuse:1
@ 9767 train 3.9863 , allloss: 3.9991, dt: 1258.75ms, fracRes: 0.5999, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6515, norm(y): 0.9972, norm:0.9353, tok/sec: 104128.86, flops:91.18, batch-reuse:1
@ 9768 train 3.9729 , allloss: 3.9862, dt: 1282.76ms, fracRes: 0.6003, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6549, norm(y): 0.9972, norm:0.9609, tok/sec: 102179.68, flops:89.48, batch-reuse:1
@ 9769 train 4.0116 , allloss: 4.0244, dt: 1295.34ms, fracRes: 0.6003, norm(attn): 0.1602, norm(output): 0.2520, norm(x): 0.6507, norm(y): 0.9972, norm:0.9771, tok/sec: 101187.35, flops:88.61, batch-reuse:1
@ 9770 train 3.9928 , allloss: 4.0057, dt: 1285.70ms, fracRes: 0.6008, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6489, norm(y): 0.9973, norm:0.9495, tok/sec: 101946.09, flops:89.27, batch-reuse:1
@ 9771 train 3.9652 , allloss: 3.9779, dt: 1315.10ms, fracRes: 0.6008, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6468, norm(y): 0.9972, norm:0.8311, tok/sec: 99666.93, flops:87.28, batch-reuse:1
@ 9772 train 3.9597 , allloss: 3.9724, dt: 1276.58ms, fracRes: 0.6011, norm(attn): 0.1602, norm(output): 0.2490, norm(x): 0.6482, norm(y): 0.9973, norm:0.9347, tok/sec: 102674.71, flops:89.91, batch-reuse:1
@ 9773 train 4.0006 , allloss: 4.0140, dt: 1255.39ms, fracRes: 0.6012, norm(attn): 0.1602, norm(output): 0.2520, norm(x): 0.6519, norm(y): 0.9972, norm:0.8979, tok/sec: 104406.98, flops:91.43, batch-reuse:1
@ 9774 train 3.8779 , allloss: 3.8903, dt: 1286.85ms, fracRes: 0.6007, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6485, norm(y): 0.9972, norm:0.8518, tok/sec: 101855.07, flops:89.19, batch-reuse:1
@ 9775 train 3.9317 , allloss: 3.9445, dt: 1310.84ms, fracRes: 0.6003, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6490, norm(y): 0.9971, norm:0.9073, tok/sec: 99991.20, flops:87.56, batch-reuse:1
@ 9776 train 4.0542 , allloss: 4.0676, dt: 1277.82ms, fracRes: 0.6008, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6497, norm(y): 0.9969, norm:0.9790, tok/sec: 102574.61, flops:89.82, batch-reuse:1
@ 9777 train 3.9497 , allloss: 3.9625, dt: 1243.27ms, fracRes: 0.6003, norm(attn): 0.1602, norm(output): 0.2490, norm(x): 0.6479, norm(y): 0.9973, norm:0.8596, tok/sec: 105424.89, flops:92.32, batch-reuse:1
@ 9778 train 3.9365 , allloss: 3.9493, dt: 1267.22ms, fracRes: 0.5990, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6449, norm(y): 0.9970, norm:0.9313, tok/sec: 103432.69, flops:90.57, batch-reuse:1
@ 9779 train 3.9624 , allloss: 3.9753, dt: 1275.15ms, fracRes: 0.5996, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6467, norm(y): 0.9969, norm:0.8554, tok/sec: 102789.41, flops:90.01, batch-reuse:1
@ 9780 train 3.8787 , allloss: 3.8917, dt: 1280.21ms, fracRes: 0.5998, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6470, norm(y): 0.9969, norm:0.8481, tok/sec: 102383.28, flops:89.66, batch-reuse:1
@ 9781 train 3.9178 , allloss: 3.9307, dt: 1259.61ms, fracRes: 0.6005, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6426, norm(y): 0.9971, norm:0.8549, tok/sec: 104057.95, flops:91.12, batch-reuse:1
@ 9782 train 3.9807 , allloss: 3.9935, dt: 1241.70ms, fracRes: 0.6003, norm(attn): 0.1602, norm(output): 0.2520, norm(x): 0.6472, norm(y): 0.9970, norm:0.9227, tok/sec: 105558.27, flops:92.44, batch-reuse:1
@ 9783 train 4.0075 , allloss: 4.0206, dt: 1285.77ms, fracRes: 0.6005, norm(attn): 0.1602, norm(output): 0.2490, norm(x): 0.6494, norm(y): 0.9970, norm:0.9101, tok/sec: 101940.76, flops:89.27, batch-reuse:1
@ 9784 train 3.8890 , allloss: 3.9015, dt: 1277.61ms, fracRes: 0.6010, norm(attn): 0.1592, norm(output): 0.2490, norm(x): 0.6492, norm(y): 0.9971, norm:0.7947, tok/sec: 102591.48, flops:89.84, batch-reuse:1
@ 9785 train 3.9887 , allloss: 4.0008, dt: 1318.33ms, fracRes: 0.6007, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6470, norm(y): 0.9971, norm:0.9187, tok/sec: 99422.55, flops:87.06, batch-reuse:1
@ 9786 train 3.9811 , allloss: 3.9934, dt: 1311.26ms, fracRes: 0.6009, norm(attn): 0.1592, norm(output): 0.2490, norm(x): 0.6453, norm(y): 0.9971, norm:0.8431, tok/sec: 99959.16, flops:87.53, batch-reuse:1
@ 9787 train 3.9365 , allloss: 3.9493, dt: 1315.01ms, fracRes: 0.6001, norm(attn): 0.1602, norm(output): 0.2490, norm(x): 0.6455, norm(y): 0.9970, norm:0.8783, tok/sec: 99673.73, flops:87.28, batch-reuse:1
@ 9788 train 4.0640 , allloss: 4.0768, dt: 1275.30ms, fracRes: 0.5995, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6411, norm(y): 0.9970, norm:0.8795, tok/sec: 102777.59, flops:90.00, batch-reuse:1
@ 9789 train 4.0335 , allloss: 4.0466, dt: 1272.60ms, fracRes: 0.5991, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6409, norm(y): 0.9969, norm:0.9594, tok/sec: 102995.54, flops:90.19, batch-reuse:1
@ 9790 train 3.9815 , allloss: 3.9940, dt: 1302.99ms, fracRes: 0.5993, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6368, norm(y): 0.9968, norm:0.8463, tok/sec: 100593.46, flops:88.09, batch-reuse:1
@ 9791 train 4.0088 , allloss: 4.0215, dt: 1264.43ms, fracRes: 0.5999, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6366, norm(y): 0.9969, norm:0.8444, tok/sec: 103660.97, flops:90.77, batch-reuse:1
@ 9792 train 3.9335 , allloss: 3.9461, dt: 1234.29ms, fracRes: 0.6001, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6351, norm(y): 0.9969, norm:0.8302, tok/sec: 106191.80, flops:92.99, batch-reuse:1
@ 9793 train 4.0172 , allloss: 4.0300, dt: 1270.71ms, fracRes: 0.6006, norm(attn): 0.1602, norm(output): 0.2490, norm(x): 0.6366, norm(y): 0.9968, norm:0.8720, tok/sec: 103148.75, flops:90.33, batch-reuse:1
@ 9794 train 4.0154 , allloss: 4.0281, dt: 1313.31ms, fracRes: 0.6010, norm(attn): 0.1582, norm(output): 0.2480, norm(x): 0.6404, norm(y): 0.9969, norm:0.8516, tok/sec: 99802.70, flops:87.40, batch-reuse:1
@ 9795 train 4.0022 , allloss: 4.0148, dt: 1256.77ms, fracRes: 0.6000, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6427, norm(y): 0.9968, norm:0.8372, tok/sec: 104293.10, flops:91.33, batch-reuse:1
@ 9796 train 4.0008 , allloss: 4.0136, dt: 1262.74ms, fracRes: 0.5992, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6450, norm(y): 0.9967, norm:0.8916, tok/sec: 103799.88, flops:90.90, batch-reuse:1
@ 9797 train 3.9743 , allloss: 3.9871, dt: 1276.98ms, fracRes: 0.6001, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6448, norm(y): 0.9968, norm:0.8188, tok/sec: 102642.01, flops:89.88, batch-reuse:1
@ 9798 train 3.9205 , allloss: 3.9338, dt: 1267.46ms, fracRes: 0.5998, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6471, norm(y): 0.9969, norm:0.8352, tok/sec: 103413.04, flops:90.56, batch-reuse:1
@ 9799 train 3.9250 , allloss: 3.9377, dt: 1273.64ms, fracRes: 0.5998, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6456, norm(y): 0.9969, norm:0.9183, tok/sec: 102911.52, flops:90.12, batch-reuse:1
@ 9800 train 3.9859 , allloss: 3.9985, dt: 1263.61ms, fracRes: 0.6005, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6450, norm(y): 0.9969, norm:0.9155, tok/sec: 103728.18, flops:90.83, batch-reuse:1
@ 9801 train 3.9650 , allloss: 3.9772, dt: 1281.50ms, fracRes: 0.6002, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6430, norm(y): 0.9969, norm:0.9545, tok/sec: 102280.30, flops:89.57, batch-reuse:1
@ 9802 train 4.2000 , allloss: 4.2124, dt: 1283.76ms, fracRes: 0.6005, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6433, norm(y): 0.9965, norm:0.9467, tok/sec: 102100.34, flops:89.41, batch-reuse:1
@ 9803 train 3.8912 , allloss: 3.9037, dt: 1270.93ms, fracRes: 0.6005, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6442, norm(y): 0.9968, norm:0.9081, tok/sec: 103130.66, flops:90.31, batch-reuse:1
@ 9804 train 3.8982 , allloss: 3.9110, dt: 1278.94ms, fracRes: 0.6003, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6421, norm(y): 0.9968, norm:0.9509, tok/sec: 102485.10, flops:89.74, batch-reuse:1
@ 9805 train 3.9596 , allloss: 3.9733, dt: 1302.02ms, fracRes: 0.6018, norm(attn): 0.1582, norm(output): 0.2520, norm(x): 0.6455, norm(y): 0.9970, norm:0.9008, tok/sec: 100667.95, flops:88.15, batch-reuse:1
@ 9806 train 3.9272 , allloss: 3.9410, dt: 1271.88ms, fracRes: 0.6015, norm(attn): 0.1592, norm(output): 0.2520, norm(x): 0.6455, norm(y): 0.9967, norm:1.1282, tok/sec: 103053.62, flops:90.24, batch-reuse:1
@ 9807 train 3.7853 , allloss: 3.7990, dt: 1266.14ms, fracRes: 0.6006, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6433, norm(y): 0.9969, norm:1.0150, tok/sec: 103520.80, flops:90.65, batch-reuse:1
@ 9808 train 4.0331 , allloss: 4.0461, dt: 1259.30ms, fracRes: 0.6007, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6429, norm(y): 0.9968, norm:0.8453, tok/sec: 104083.52, flops:91.14, batch-reuse:1
@ 9809 train 3.8031 , allloss: 3.8155, dt: 1276.85ms, fracRes: 0.6004, norm(attn): 0.1592, norm(output): 0.2490, norm(x): 0.6426, norm(y): 0.9970, norm:0.9123, tok/sec: 102652.28, flops:89.89, batch-reuse:1
@ 9810 train 3.8599 , allloss: 3.8734, dt: 1305.26ms, fracRes: 0.6007, norm(attn): 0.1631, norm(output): 0.2500, norm(x): 0.6463, norm(y): 0.9970, norm:1.0182, tok/sec: 100418.37, flops:87.93, batch-reuse:1
@ 9811 train 4.0196 , allloss: 4.0336, dt: 1281.86ms, fracRes: 0.6007, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6461, norm(y): 0.9969, norm:0.9551, tok/sec: 102251.14, flops:89.54, batch-reuse:1
@ 9812 train 3.8463 , allloss: 3.8591, dt: 1262.97ms, fracRes: 0.5994, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6400, norm(y): 0.9969, norm:0.9944, tok/sec: 103780.42, flops:90.88, batch-reuse:1
@ 9813 train 3.8521 , allloss: 3.8647, dt: 1258.04ms, fracRes: 0.5987, norm(attn): 0.1592, norm(output): 0.2490, norm(x): 0.6399, norm(y): 0.9969, norm:0.9572, tok/sec: 104187.11, flops:91.24, batch-reuse:1
@ 9814 train 3.8184 , allloss: 3.8310, dt: 1256.54ms, fracRes: 0.5995, norm(attn): 0.1592, norm(output): 0.2490, norm(x): 0.6420, norm(y): 0.9969, norm:1.0091, tok/sec: 104311.89, flops:91.34, batch-reuse:1
@ 9815 train 3.7663 , allloss: 3.7791, dt: 1287.55ms, fracRes: 0.5997, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6417, norm(y): 0.9970, norm:0.9209, tok/sec: 101799.37, flops:89.14, batch-reuse:1
@ 9816 train 3.8019 , allloss: 3.8151, dt: 1260.56ms, fracRes: 0.6002, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6385, norm(y): 0.9970, norm:0.8821, tok/sec: 103978.79, flops:91.05, batch-reuse:1
@ 9817 train 3.8073 , allloss: 3.8206, dt: 1258.02ms, fracRes: 0.6002, norm(attn): 0.1592, norm(output): 0.2490, norm(x): 0.6421, norm(y): 0.9970, norm:1.0136, tok/sec: 104189.27, flops:91.24, batch-reuse:1
@ 9818 train 3.7817 , allloss: 3.7945, dt: 1247.82ms, fracRes: 0.6003, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6431, norm(y): 0.9970, norm:1.0182, tok/sec: 105041.12, flops:91.98, batch-reuse:1
@ 9819 train 3.8666 , allloss: 3.8798, dt: 1264.89ms, fracRes: 0.6001, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6464, norm(y): 0.9969, norm:0.9185, tok/sec: 103622.97, flops:90.74, batch-reuse:1
@ 9820 train 3.7369 , allloss: 3.7496, dt: 1271.62ms, fracRes: 0.6006, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6437, norm(y): 0.9971, norm:1.0314, tok/sec: 103075.05, flops:90.26, batch-reuse:1
@ 9821 train 3.8355 , allloss: 3.8488, dt: 1269.88ms, fracRes: 0.6005, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6433, norm(y): 0.9970, norm:0.9186, tok/sec: 103216.38, flops:90.39, batch-reuse:1
@ 9822 train 3.8836 , allloss: 3.8969, dt: 1276.72ms, fracRes: 0.5998, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6454, norm(y): 0.9968, norm:1.1824, tok/sec: 102662.99, flops:89.90, batch-reuse:1
@ 9823 train 3.7638 , allloss: 3.7776, dt: 1274.80ms, fracRes: 0.6005, norm(attn): 0.1592, norm(output): 0.2490, norm(x): 0.6442, norm(y): 0.9971, norm:0.8847, tok/sec: 102817.63, flops:90.04, batch-reuse:1
@ 9824 train 3.8872 , allloss: 3.9002, dt: 1294.71ms, fracRes: 0.6009, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6448, norm(y): 0.9972, norm:1.1236, tok/sec: 101236.54, flops:88.65, batch-reuse:1
@ 9825 train 3.7684 , allloss: 3.7812, dt: 1274.54ms, fracRes: 0.6004, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6451, norm(y): 0.9971, norm:1.0141, tok/sec: 102838.60, flops:90.05, batch-reuse:1
@ 9826 train 3.9094 , allloss: 3.9227, dt: 1265.72ms, fracRes: 0.6004, norm(attn): 0.1602, norm(output): 0.2490, norm(x): 0.6439, norm(y): 0.9971, norm:0.9788, tok/sec: 103555.69, flops:90.68, batch-reuse:1
@ 9827 train 3.8352 , allloss: 3.8481, dt: 1287.70ms, fracRes: 0.5997, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6437, norm(y): 0.9969, norm:0.8363, tok/sec: 101787.86, flops:89.13, batch-reuse:1
@ 9828 train 3.9523 , allloss: 3.9649, dt: 1267.64ms, fracRes: 0.5998, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6441, norm(y): 0.9966, norm:0.9068, tok/sec: 103398.32, flops:90.54, batch-reuse:1
@ 9829 train 3.9093 , allloss: 3.9220, dt: 1285.86ms, fracRes: 0.6011, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6468, norm(y): 0.9967, norm:1.0512, tok/sec: 101933.03, flops:89.26, batch-reuse:1
@ 9830 train 3.8900 , allloss: 3.9034, dt: 1286.41ms, fracRes: 0.6015, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6485, norm(y): 0.9969, norm:0.9588, tok/sec: 101890.01, flops:89.22, batch-reuse:1
@ 9831 train 3.6790 , allloss: 3.6922, dt: 1313.27ms, fracRes: 0.5999, norm(attn): 0.1602, norm(output): 0.2490, norm(x): 0.6435, norm(y): 0.9970, norm:0.8650, tok/sec: 99806.17, flops:87.40, batch-reuse:1
@ 9832 train 3.7008 , allloss: 3.7136, dt: 1281.97ms, fracRes: 0.5998, norm(attn): 0.1592, norm(output): 0.2490, norm(x): 0.6404, norm(y): 0.9972, norm:1.0188, tok/sec: 102243.02, flops:89.53, batch-reuse:1
@ 9833 train 3.8609 , allloss: 3.8737, dt: 1278.24ms, fracRes: 0.6004, norm(attn): 0.1582, norm(output): 0.2480, norm(x): 0.6401, norm(y): 0.9970, norm:0.9627, tok/sec: 102541.26, flops:89.79, batch-reuse:1
@ 9834 train 3.7966 , allloss: 3.8095, dt: 1297.98ms, fracRes: 0.6006, norm(attn): 0.1602, norm(output): 0.2490, norm(x): 0.6396, norm(y): 0.9970, norm:0.8804, tok/sec: 100981.28, flops:88.43, batch-reuse:1
@ 9835 train 3.7793 , allloss: 3.7926, dt: 1283.82ms, fracRes: 0.6003, norm(attn): 0.1602, norm(output): 0.2490, norm(x): 0.6398, norm(y): 0.9970, norm:1.1407, tok/sec: 102095.03, flops:89.40, batch-reuse:1
@ 9836 train 3.7510 , allloss: 3.7642, dt: 1277.10ms, fracRes: 0.6010, norm(attn): 0.1611, norm(output): 0.2490, norm(x): 0.6427, norm(y): 0.9970, norm:0.8723, tok/sec: 102632.81, flops:89.87, batch-reuse:1
@ 9837 train 3.9101 , allloss: 3.9229, dt: 1265.95ms, fracRes: 0.6002, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6412, norm(y): 0.9968, norm:0.9048, tok/sec: 103536.56, flops:90.67, batch-reuse:1
@ 9838 train 3.8451 , allloss: 3.8577, dt: 1283.40ms, fracRes: 0.5995, norm(attn): 0.1592, norm(output): 0.2490, norm(x): 0.6417, norm(y): 0.9968, norm:1.0434, tok/sec: 102128.77, flops:89.43, batch-reuse:1
@ 9839 train 3.7934 , allloss: 3.8066, dt: 1244.49ms, fracRes: 0.5992, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6425, norm(y): 0.9967, norm:0.9701, tok/sec: 105321.50, flops:92.23, batch-reuse:1
@ 9840 train 3.8598 , allloss: 3.8733, dt: 1273.65ms, fracRes: 0.5990, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6411, norm(y): 0.9968, norm:0.9274, tok/sec: 102910.21, flops:90.12, batch-reuse:1
@ 9841 train 3.6977 , allloss: 3.7110, dt: 1284.38ms, fracRes: 0.5991, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6377, norm(y): 0.9969, norm:0.8942, tok/sec: 102050.82, flops:89.36, batch-reuse:1
@ 9842 train 3.7509 , allloss: 3.7638, dt: 1257.16ms, fracRes: 0.5988, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6367, norm(y): 0.9967, norm:0.8702, tok/sec: 104260.20, flops:91.30, batch-reuse:1
@ 9843 train 3.8175 , allloss: 3.8308, dt: 1283.03ms, fracRes: 0.5993, norm(attn): 0.1592, norm(output): 0.2490, norm(x): 0.6402, norm(y): 0.9967, norm:0.8602, tok/sec: 102157.83, flops:89.46, batch-reuse:1
@ 9844 train 3.7761 , allloss: 3.7900, dt: 1281.09ms, fracRes: 0.5997, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6411, norm(y): 0.9967, norm:0.9966, tok/sec: 102313.23, flops:89.59, batch-reuse:1
@ 9845 train 3.8167 , allloss: 3.8295, dt: 1255.18ms, fracRes: 0.5992, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6426, norm(y): 0.9967, norm:0.9537, tok/sec: 104424.93, flops:91.44, batch-reuse:1
@ 9846 train 3.7684 , allloss: 3.7817, dt: 1284.30ms, fracRes: 0.6000, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6452, norm(y): 0.9967, norm:0.9513, tok/sec: 102057.01, flops:89.37, batch-reuse:1
@ 9847 train 3.9260 , allloss: 3.9386, dt: 1287.18ms, fracRes: 0.6004, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6433, norm(y): 0.9968, norm:0.8838, tok/sec: 101829.17, flops:89.17, batch-reuse:1
@ 9848 train 3.8468 , allloss: 3.8600, dt: 1252.20ms, fracRes: 0.6008, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6452, norm(y): 0.9967, norm:1.0267, tok/sec: 104673.22, flops:91.66, batch-reuse:1
@ 9849 train 3.7537 , allloss: 3.7713, dt: 1288.52ms, fracRes: 0.6016, norm(attn): 0.1611, norm(output): 0.2520, norm(x): 0.6519, norm(y): 0.9965, norm:1.0193, tok/sec: 101722.52, flops:89.08, batch-reuse:1
@ 9850 train 3.9218 , allloss: 3.9348, dt: 1264.78ms, fracRes: 0.5999, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6421, norm(y): 0.9966, norm:0.9236, tok/sec: 103632.58, flops:90.75, batch-reuse:1
@ 9851 train 3.7350 , allloss: 3.7481, dt: 1255.63ms, fracRes: 0.5998, norm(attn): 0.1611, norm(output): 0.2490, norm(x): 0.6422, norm(y): 0.9966, norm:1.0560, tok/sec: 104387.24, flops:91.41, batch-reuse:1
@ 9852 train 3.8423 , allloss: 3.8556, dt: 1267.16ms, fracRes: 0.5998, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6427, norm(y): 0.9966, norm:0.9414, tok/sec: 103437.36, flops:90.58, batch-reuse:1
@ 9853 train 3.7650 , allloss: 3.7779, dt: 1277.69ms, fracRes: 0.6001, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6404, norm(y): 0.9966, norm:0.8969, tok/sec: 102585.29, flops:89.83, batch-reuse:1
@ 9854 train 3.7608 , allloss: 3.7737, dt: 1251.78ms, fracRes: 0.6006, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6422, norm(y): 0.9968, norm:0.9429, tok/sec: 104708.75, flops:91.69, batch-reuse:1
@ 9855 train 3.7476 , allloss: 3.7604, dt: 1266.88ms, fracRes: 0.5998, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6402, norm(y): 0.9970, norm:1.0260, tok/sec: 103460.47, flops:90.60, batch-reuse:1
@ 9856 train 3.8269 , allloss: 3.8403, dt: 1278.14ms, fracRes: 0.5997, norm(attn): 0.1602, norm(output): 0.2490, norm(x): 0.6438, norm(y): 0.9968, norm:0.9221, tok/sec: 102548.95, flops:89.80, batch-reuse:1
@ 9857 train 3.9591 , allloss: 3.9729, dt: 1254.36ms, fracRes: 0.5989, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6475, norm(y): 0.9966, norm:1.0003, tok/sec: 104492.95, flops:91.50, batch-reuse:1
@ 9858 train 4.0572 , allloss: 4.0699, dt: 1261.55ms, fracRes: 0.5985, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6405, norm(y): 0.9965, norm:1.0514, tok/sec: 103897.28, flops:90.98, batch-reuse:1
@ 9859 train 3.9955 , allloss: 4.0085, dt: 1273.27ms, fracRes: 0.5985, norm(attn): 0.1611, norm(output): 0.2520, norm(x): 0.6419, norm(y): 0.9966, norm:0.9548, tok/sec: 102941.51, flops:90.14, batch-reuse:1
@ 9860 train 3.9638 , allloss: 3.9777, dt: 1246.17ms, fracRes: 0.5993, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6417, norm(y): 0.9964, norm:1.0140, tok/sec: 105179.55, flops:92.10, batch-reuse:1
@ 9861 train 4.1689 , allloss: 4.1823, dt: 1265.26ms, fracRes: 0.5988, norm(attn): 0.1602, norm(output): 0.2520, norm(x): 0.6415, norm(y): 0.9962, norm:0.9516, tok/sec: 103592.74, flops:90.71, batch-reuse:1
@ 9862 train 4.0691 , allloss: 4.0824, dt: 1252.53ms, fracRes: 0.6007, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6411, norm(y): 0.9964, norm:1.0625, tok/sec: 104646.05, flops:91.64, batch-reuse:1
@ 9863 train 4.0240 , allloss: 4.0370, dt: 1307.76ms, fracRes: 0.6011, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6413, norm(y): 0.9964, norm:0.9398, tok/sec: 100226.52, flops:87.77, batch-reuse:1
@ 9864 train 3.9824 , allloss: 3.9956, dt: 1295.38ms, fracRes: 0.6010, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6436, norm(y): 0.9966, norm:0.9679, tok/sec: 101184.35, flops:88.61, batch-reuse:1
@ 9865 train 3.9695 , allloss: 3.9829, dt: 1310.44ms, fracRes: 0.6001, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6420, norm(y): 0.9963, norm:0.9997, tok/sec: 100021.69, flops:87.59, batch-reuse:1
@ 9866 train 4.0613 , allloss: 4.0752, dt: 1285.70ms, fracRes: 0.5986, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6369, norm(y): 0.9963, norm:1.1131, tok/sec: 101946.19, flops:89.27, batch-reuse:1
@ 9867 train 4.0666 , allloss: 4.0806, dt: 1257.28ms, fracRes: 0.5994, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6442, norm(y): 0.9964, norm:1.8371, tok/sec: 104250.46, flops:91.29, batch-reuse:1
@ 9868 train 3.9712 , allloss: 3.9844, dt: 1252.36ms, fracRes: 0.5982, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6437, norm(y): 0.9963, norm:1.1685, tok/sec: 104660.23, flops:91.65, batch-reuse:1
@ 9869 train 4.0875 , allloss: 4.1009, dt: 1271.27ms, fracRes: 0.5990, norm(attn): 0.1592, norm(output): 0.2520, norm(x): 0.6464, norm(y): 0.9962, norm:1.1302, tok/sec: 103103.06, flops:90.29, batch-reuse:1
@ 9870 train 4.0054 , allloss: 4.0183, dt: 1274.63ms, fracRes: 0.5996, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6472, norm(y): 0.9963, norm:0.9416, tok/sec: 102831.15, flops:90.05, batch-reuse:1
@ 9871 train 3.9848 , allloss: 3.9979, dt: 1251.01ms, fracRes: 0.5996, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6489, norm(y): 0.9963, norm:0.9482, tok/sec: 104772.71, flops:91.75, batch-reuse:1
@ 9872 train 3.9598 , allloss: 3.9728, dt: 1258.25ms, fracRes: 0.5991, norm(attn): 0.1631, norm(output): 0.2520, norm(x): 0.6538, norm(y): 0.9963, norm:0.9642, tok/sec: 104170.29, flops:91.22, batch-reuse:1
@ 9873 train 4.1384 , allloss: 4.1510, dt: 1263.27ms, fracRes: 0.5992, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6516, norm(y): 0.9961, norm:1.0489, tok/sec: 103755.88, flops:90.86, batch-reuse:1
@ 9874 train 4.1233 , allloss: 4.1363, dt: 1273.36ms, fracRes: 0.5992, norm(attn): 0.1611, norm(output): 0.2520, norm(x): 0.6487, norm(y): 0.9961, norm:0.9233, tok/sec: 102933.99, flops:90.14, batch-reuse:1
@ 9875 train 4.1965 , allloss: 4.2090, dt: 1293.50ms, fracRes: 0.5993, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6434, norm(y): 0.9963, norm:1.0192, tok/sec: 101331.43, flops:88.73, batch-reuse:1
@ 9876 train 3.9641 , allloss: 3.9772, dt: 1284.86ms, fracRes: 0.5994, norm(attn): 0.1611, norm(output): 0.2520, norm(x): 0.6468, norm(y): 0.9964, norm:1.1638, tok/sec: 102012.32, flops:89.33, batch-reuse:1
@ 9877 train 3.9787 , allloss: 3.9917, dt: 1295.77ms, fracRes: 0.5996, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6454, norm(y): 0.9963, norm:1.0632, tok/sec: 101154.04, flops:88.58, batch-reuse:1
@ 9878 train 4.0034 , allloss: 4.0167, dt: 1290.17ms, fracRes: 0.6010, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6455, norm(y): 0.9963, norm:0.9254, tok/sec: 101592.57, flops:88.96, batch-reuse:1
@ 9879 train 3.9809 , allloss: 3.9941, dt: 1288.29ms, fracRes: 0.6015, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6461, norm(y): 0.9965, norm:1.0484, tok/sec: 101740.93, flops:89.09, batch-reuse:1
@ 9880 train 3.9716 , allloss: 3.9843, dt: 1285.78ms, fracRes: 0.6006, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6440, norm(y): 0.9963, norm:1.0158, tok/sec: 101939.85, flops:89.27, batch-reuse:1
@ 9881 train 4.0428 , allloss: 4.0563, dt: 1318.89ms, fracRes: 0.5996, norm(attn): 0.1602, norm(output): 0.2520, norm(x): 0.6492, norm(y): 0.9962, norm:0.8483, tok/sec: 99380.50, flops:87.03, batch-reuse:1
@ 9882 train 4.0412 , allloss: 4.0539, dt: 1289.98ms, fracRes: 0.5993, norm(attn): 0.1641, norm(output): 0.2500, norm(x): 0.6447, norm(y): 0.9963, norm:1.0875, tok/sec: 101607.50, flops:88.98, batch-reuse:1
@ 9883 train 3.9227 , allloss: 3.9368, dt: 1293.62ms, fracRes: 0.6007, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6516, norm(y): 0.9967, norm:1.0350, tok/sec: 101321.64, flops:88.73, batch-reuse:1
@ 9884 train 4.1965 , allloss: 4.2095, dt: 1317.77ms, fracRes: 0.6004, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6494, norm(y): 0.9962, norm:1.0341, tok/sec: 99464.66, flops:87.10, batch-reuse:1
@ 9885 train 4.0815 , allloss: 4.0942, dt: 1305.75ms, fracRes: 0.6008, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6462, norm(y): 0.9965, norm:1.0440, tok/sec: 100381.00, flops:87.90, batch-reuse:1
@ 9886 train 4.0095 , allloss: 4.0222, dt: 1275.77ms, fracRes: 0.6005, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6484, norm(y): 0.9963, norm:1.0130, tok/sec: 102739.47, flops:89.97, batch-reuse:1
@ 9887 train 3.9891 , allloss: 4.0021, dt: 1256.98ms, fracRes: 0.6007, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6481, norm(y): 0.9964, norm:0.8629, tok/sec: 104275.63, flops:91.31, batch-reuse:1
@ 9888 train 4.0744 , allloss: 4.0875, dt: 1261.23ms, fracRes: 0.6010, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6459, norm(y): 0.9963, norm:1.1271, tok/sec: 103923.75, flops:91.00, batch-reuse:1
@ 9889 train 4.0503 , allloss: 4.0628, dt: 1299.30ms, fracRes: 0.6009, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6423, norm(y): 0.9963, norm:0.8725, tok/sec: 100878.99, flops:88.34, batch-reuse:1
@ 9890 train 3.9753 , allloss: 3.9882, dt: 1265.42ms, fracRes: 0.6008, norm(attn): 0.1592, norm(output): 0.2490, norm(x): 0.6433, norm(y): 0.9963, norm:0.9418, tok/sec: 103580.19, flops:90.70, batch-reuse:1
@ 9891 train 3.9858 , allloss: 3.9991, dt: 1270.22ms, fracRes: 0.6001, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6443, norm(y): 0.9964, norm:0.8603, tok/sec: 103188.60, flops:90.36, batch-reuse:1
@ 9892 train 3.9829 , allloss: 3.9958, dt: 1280.84ms, fracRes: 0.5996, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6435, norm(y): 0.9964, norm:0.8980, tok/sec: 102332.95, flops:89.61, batch-reuse:1
@ 9893 train 3.9743 , allloss: 3.9875, dt: 1267.54ms, fracRes: 0.5994, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6456, norm(y): 0.9963, norm:0.9757, tok/sec: 103406.78, flops:90.55, batch-reuse:1
@ 9894 train 4.0242 , allloss: 4.0373, dt: 1264.22ms, fracRes: 0.6000, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6418, norm(y): 0.9963, norm:0.8273, tok/sec: 103678.08, flops:90.79, batch-reuse:1
@ 9895 train 4.0221 , allloss: 4.0348, dt: 1290.20ms, fracRes: 0.6004, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6401, norm(y): 0.9962, norm:0.8703, tok/sec: 101590.60, flops:88.96, batch-reuse:1
@ 9896 train 4.0535 , allloss: 4.0664, dt: 1276.88ms, fracRes: 0.6007, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6463, norm(y): 0.9964, norm:0.8951, tok/sec: 102650.25, flops:89.89, batch-reuse:1
@ 9897 train 4.0302 , allloss: 4.0433, dt: 1284.66ms, fracRes: 0.6002, norm(attn): 0.1592, norm(output): 0.2520, norm(x): 0.6467, norm(y): 0.9965, norm:0.8858, tok/sec: 102028.85, flops:89.35, batch-reuse:1
@ 9898 train 3.9776 , allloss: 3.9902, dt: 1288.54ms, fracRes: 0.5995, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6408, norm(y): 0.9965, norm:0.8236, tok/sec: 101721.05, flops:89.08, batch-reuse:1
@ 9899 train 3.9542 , allloss: 3.9671, dt: 1284.10ms, fracRes: 0.5997, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6408, norm(y): 0.9964, norm:1.0019, tok/sec: 102072.78, flops:89.38, batch-reuse:1
@ 9900 train 4.1100 , allloss: 4.1228, dt: 1271.13ms, fracRes: 0.5992, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6376, norm(y): 0.9964, norm:0.9333, tok/sec: 103114.68, flops:90.30, batch-reuse:1
@ 9901 train 4.0004 , allloss: 4.0133, dt: 1265.46ms, fracRes: 0.5994, norm(attn): 0.1602, norm(output): 0.2490, norm(x): 0.6385, norm(y): 0.9965, norm:1.0409, tok/sec: 103576.88, flops:90.70, batch-reuse:1
@ 9902 train 3.9751 , allloss: 3.9876, dt: 1264.48ms, fracRes: 0.6000, norm(attn): 0.1582, norm(output): 0.2520, norm(x): 0.6410, norm(y): 0.9963, norm:1.1119, tok/sec: 103657.18, flops:90.77, batch-reuse:1
@ 9903 train 3.9829 , allloss: 3.9960, dt: 1285.78ms, fracRes: 0.6000, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6406, norm(y): 0.9963, norm:1.1793, tok/sec: 101939.47, flops:89.27, batch-reuse:1
@ 9904 train 4.0218 , allloss: 4.0348, dt: 1282.18ms, fracRes: 0.6006, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6430, norm(y): 0.9965, norm:0.9935, tok/sec: 102225.70, flops:89.52, batch-reuse:1
@ 9905 train 3.9122 , allloss: 3.9257, dt: 1267.99ms, fracRes: 0.6007, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6475, norm(y): 0.9966, norm:0.8856, tok/sec: 103370.18, flops:90.52, batch-reuse:1
@ 9906 train 4.1829 , allloss: 4.1957, dt: 1272.17ms, fracRes: 0.5999, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6441, norm(y): 0.9962, norm:1.0138, tok/sec: 103030.66, flops:90.22, batch-reuse:1
@ 9907 train 3.9576 , allloss: 3.9703, dt: 1264.74ms, fracRes: 0.5997, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6431, norm(y): 0.9965, norm:0.8190, tok/sec: 103635.77, flops:90.75, batch-reuse:1
@ 9908 train 4.0246 , allloss: 4.0377, dt: 1255.98ms, fracRes: 0.5999, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6436, norm(y): 0.9965, norm:0.9149, tok/sec: 104358.05, flops:91.38, batch-reuse:1
@ 9909 train 3.9513 , allloss: 3.9643, dt: 1258.88ms, fracRes: 0.6000, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6440, norm(y): 0.9965, norm:0.8536, tok/sec: 104118.23, flops:91.17, batch-reuse:1
@ 9910 train 4.0484 , allloss: 4.0605, dt: 1262.28ms, fracRes: 0.6005, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6420, norm(y): 0.9965, norm:0.9052, tok/sec: 103837.80, flops:90.93, batch-reuse:1
@ 9911 train 4.1848 , allloss: 4.1980, dt: 1253.43ms, fracRes: 0.6022, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6492, norm(y): 0.9965, norm:1.2039, tok/sec: 104570.35, flops:91.57, batch-reuse:1
@ 9912 train 3.9915 , allloss: 4.0044, dt: 1292.08ms, fracRes: 0.6005, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6400, norm(y): 0.9965, norm:1.0050, tok/sec: 101442.47, flops:88.83, batch-reuse:1
@ 9913 train 3.9997 , allloss: 4.0130, dt: 1271.00ms, fracRes: 0.6008, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6421, norm(y): 0.9965, norm:1.0256, tok/sec: 103124.93, flops:90.31, batch-reuse:1
@ 9914 train 4.0751 , allloss: 4.0879, dt: 1273.60ms, fracRes: 0.6006, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6408, norm(y): 0.9963, norm:0.9611, tok/sec: 102914.74, flops:90.12, batch-reuse:1
@ 9915 train 4.0063 , allloss: 4.0187, dt: 1285.94ms, fracRes: 0.6001, norm(attn): 0.1602, norm(output): 0.2490, norm(x): 0.6389, norm(y): 0.9962, norm:0.8901, tok/sec: 101926.92, flops:89.26, batch-reuse:1
@ 9916 train 4.0861 , allloss: 4.0987, dt: 1266.81ms, fracRes: 0.5995, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6408, norm(y): 0.9959, norm:0.8438, tok/sec: 103466.21, flops:90.60, batch-reuse:1
@ 9917 train 4.0874 , allloss: 4.1001, dt: 1271.41ms, fracRes: 0.5998, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6410, norm(y): 0.9961, norm:0.8960, tok/sec: 103091.94, flops:90.28, batch-reuse:1
@ 9918 train 3.9752 , allloss: 3.9884, dt: 1573.96ms, fracRes: 0.6003, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6430, norm(y): 0.9964, norm:0.8381, tok/sec: 83275.23, flops:72.92, batch-reuse:1
@ 9919 train 4.0439 , allloss: 4.0564, dt: 1288.28ms, fracRes: 0.6000, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6428, norm(y): 0.9961, norm:0.8647, tok/sec: 101741.59, flops:89.09, batch-reuse:1
@ 9920 train 4.0189 , allloss: 4.0315, dt: 1279.26ms, fracRes: 0.5997, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6459, norm(y): 0.9959, norm:0.9594, tok/sec: 102459.20, flops:89.72, batch-reuse:1
@ 9921 train 3.9977 , allloss: 4.0099, dt: 1259.22ms, fracRes: 0.5997, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6434, norm(y): 0.9962, norm:0.8791, tok/sec: 104089.67, flops:91.15, batch-reuse:1
@ 9922 train 3.9364 , allloss: 3.9487, dt: 1255.00ms, fracRes: 0.6001, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6437, norm(y): 0.9962, norm:0.8426, tok/sec: 104439.49, flops:91.46, batch-reuse:1
@ 9923 train 4.0251 , allloss: 4.0379, dt: 1249.92ms, fracRes: 0.6013, norm(attn): 0.1602, norm(output): 0.2490, norm(x): 0.6438, norm(y): 0.9961, norm:0.9155, tok/sec: 104864.02, flops:91.83, batch-reuse:1
@ 9924 train 4.0391 , allloss: 4.0525, dt: 1257.07ms, fracRes: 0.6015, norm(attn): 0.1592, norm(output): 0.2490, norm(x): 0.6430, norm(y): 0.9962, norm:0.9170, tok/sec: 104268.03, flops:91.31, batch-reuse:1
@ 9925 train 3.9679 , allloss: 3.9807, dt: 1256.37ms, fracRes: 0.6002, norm(attn): 0.1602, norm(output): 0.2490, norm(x): 0.6389, norm(y): 0.9964, norm:0.9179, tok/sec: 104325.57, flops:91.36, batch-reuse:1
@ 9926 train 4.0173 , allloss: 4.0296, dt: 1268.27ms, fracRes: 0.5993, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6385, norm(y): 0.9963, norm:0.8404, tok/sec: 103347.17, flops:90.50, batch-reuse:1
@ 9927 train 3.9813 , allloss: 3.9939, dt: 1278.73ms, fracRes: 0.5994, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6382, norm(y): 0.9962, norm:0.8690, tok/sec: 102501.65, flops:89.76, batch-reuse:1
@ 9928 train 4.0784 , allloss: 4.0913, dt: 1305.57ms, fracRes: 0.5994, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6386, norm(y): 0.9960, norm:1.0087, tok/sec: 100394.75, flops:87.91, batch-reuse:1
@ 9929 train 4.0036 , allloss: 4.0166, dt: 1317.28ms, fracRes: 0.5996, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6406, norm(y): 0.9963, norm:0.9331, tok/sec: 99501.68, flops:87.13, batch-reuse:1
@ 9930 train 4.0043 , allloss: 4.0168, dt: 1292.40ms, fracRes: 0.5992, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6416, norm(y): 0.9961, norm:0.8508, tok/sec: 101417.56, flops:88.81, batch-reuse:1
@ 9931 train 3.9753 , allloss: 3.9878, dt: 1258.22ms, fracRes: 0.6003, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6397, norm(y): 0.9963, norm:0.9081, tok/sec: 104172.31, flops:91.22, batch-reuse:1
@ 9932 train 3.9538 , allloss: 3.9664, dt: 1263.88ms, fracRes: 0.6000, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6402, norm(y): 0.9960, norm:0.9451, tok/sec: 103705.97, flops:90.81, batch-reuse:1
@ 9933 train 4.0433 , allloss: 4.0562, dt: 1256.15ms, fracRes: 0.5996, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6398, norm(y): 0.9960, norm:0.7857, tok/sec: 104344.32, flops:91.37, batch-reuse:1
@ 9934 train 4.0381 , allloss: 4.0509, dt: 1250.13ms, fracRes: 0.5992, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6398, norm(y): 0.9960, norm:0.9222, tok/sec: 104846.56, flops:91.81, batch-reuse:1
@ 9935 train 4.0428 , allloss: 4.0557, dt: 1250.31ms, fracRes: 0.5993, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6397, norm(y): 0.9962, norm:0.9113, tok/sec: 104831.57, flops:91.80, batch-reuse:1
@ 9936 train 3.9535 , allloss: 3.9658, dt: 1275.25ms, fracRes: 0.5997, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6389, norm(y): 0.9962, norm:0.8408, tok/sec: 102781.17, flops:90.00, batch-reuse:1
@ 9937 train 4.1209 , allloss: 4.1331, dt: 1273.94ms, fracRes: 0.6001, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6378, norm(y): 0.9960, norm:0.8914, tok/sec: 102887.06, flops:90.10, batch-reuse:1
@ 9938 train 3.9502 , allloss: 3.9627, dt: 1256.49ms, fracRes: 0.6007, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6393, norm(y): 0.9962, norm:0.8860, tok/sec: 104316.17, flops:91.35, batch-reuse:1
@ 9939 train 3.9406 , allloss: 3.9532, dt: 1284.19ms, fracRes: 0.5998, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6377, norm(y): 0.9961, norm:0.8795, tok/sec: 102066.09, flops:89.38, batch-reuse:1
@ 9940 train 3.9356 , allloss: 3.9485, dt: 1264.19ms, fracRes: 0.5993, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6391, norm(y): 0.9962, norm:0.8859, tok/sec: 103680.78, flops:90.79, batch-reuse:1
@ 9941 train 4.0482 , allloss: 4.0608, dt: 1266.37ms, fracRes: 0.5999, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6405, norm(y): 0.9960, norm:0.7944, tok/sec: 103502.11, flops:90.64, batch-reuse:1
@ 9942 train 4.2969 , allloss: 4.3112, dt: 1282.75ms, fracRes: 0.6008, norm(attn): 0.1602, norm(output): 0.2520, norm(x): 0.6497, norm(y): 0.9957, norm:1.4952, tok/sec: 102180.77, flops:89.48, batch-reuse:1
@ 9943 train 3.9426 , allloss: 3.9558, dt: 1278.71ms, fracRes: 0.6004, norm(attn): 0.1592, norm(output): 0.2490, norm(x): 0.6390, norm(y): 0.9965, norm:1.1049, tok/sec: 102503.47, flops:89.76, batch-reuse:1
@ 9944 train 4.0844 , allloss: 4.0968, dt: 1269.30ms, fracRes: 0.5992, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6334, norm(y): 0.9961, norm:1.1180, tok/sec: 103262.95, flops:90.43, batch-reuse:1
@ 9945 train 3.9737 , allloss: 3.9867, dt: 1247.28ms, fracRes: 0.5985, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6365, norm(y): 0.9962, norm:1.0303, tok/sec: 105086.62, flops:92.02, batch-reuse:1
@ 9946 train 3.8931 , allloss: 3.9060, dt: 1257.55ms, fracRes: 0.5992, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6377, norm(y): 0.9963, norm:0.9240, tok/sec: 104228.16, flops:91.27, batch-reuse:1
@ 9947 train 4.0726 , allloss: 4.0848, dt: 1253.96ms, fracRes: 0.5996, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6356, norm(y): 0.9961, norm:1.0365, tok/sec: 104526.75, flops:91.53, batch-reuse:1
@ 9948 train 4.0818 , allloss: 4.0951, dt: 1261.97ms, fracRes: 0.6004, norm(attn): 0.1602, norm(output): 0.2520, norm(x): 0.6423, norm(y): 0.9961, norm:1.2965, tok/sec: 103862.89, flops:90.95, batch-reuse:1
@ 9949 train 3.9900 , allloss: 4.0026, dt: 1260.87ms, fracRes: 0.6000, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6433, norm(y): 0.9962, norm:1.0348, tok/sec: 103953.84, flops:91.03, batch-reuse:1
@ 9950 train 3.8823 , allloss: 3.8975, dt: 1261.68ms, fracRes: 0.6006, norm(attn): 0.1631, norm(output): 0.2559, norm(x): 0.6559, norm(y): 0.9960, norm:1.2535, tok/sec: 103887.24, flops:90.97, batch-reuse:1
@ 9951 train 3.9687 , allloss: 3.9814, dt: 1278.48ms, fracRes: 0.5998, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6423, norm(y): 0.9963, norm:0.9279, tok/sec: 102522.12, flops:89.78, batch-reuse:1
@ 9952 train 3.8786 , allloss: 3.8918, dt: 1276.92ms, fracRes: 0.6000, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6420, norm(y): 0.9962, norm:1.1041, tok/sec: 102647.22, flops:89.89, batch-reuse:1
@ 9953 train 3.9570 , allloss: 3.9702, dt: 1263.39ms, fracRes: 0.6006, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6435, norm(y): 0.9962, norm:1.1349, tok/sec: 103746.48, flops:90.85, batch-reuse:1
@ 9954 train 3.9757 , allloss: 3.9885, dt: 1248.63ms, fracRes: 0.6013, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6453, norm(y): 0.9964, norm:1.0289, tok/sec: 104972.53, flops:91.92, batch-reuse:1
@ 9955 train 3.9205 , allloss: 3.9342, dt: 1277.24ms, fracRes: 0.5999, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6458, norm(y): 0.9963, norm:1.2602, tok/sec: 102621.27, flops:89.86, batch-reuse:1
@ 9956 train 4.0457 , allloss: 4.0586, dt: 1293.68ms, fracRes: 0.6001, norm(attn): 0.1631, norm(output): 0.2500, norm(x): 0.6459, norm(y): 0.9961, norm:1.0381, tok/sec: 101316.92, flops:88.72, batch-reuse:1
@ 9957 train 3.9574 , allloss: 3.9708, dt: 1261.99ms, fracRes: 0.6004, norm(attn): 0.1631, norm(output): 0.2520, norm(x): 0.6493, norm(y): 0.9959, norm:0.9828, tok/sec: 103861.20, flops:90.95, batch-reuse:1
@ 9958 train 3.9077 , allloss: 3.9209, dt: 1260.24ms, fracRes: 0.6013, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6461, norm(y): 0.9964, norm:0.9562, tok/sec: 104005.52, flops:91.08, batch-reuse:1
@ 9959 train 3.9862 , allloss: 3.9992, dt: 1259.44ms, fracRes: 0.6006, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6486, norm(y): 0.9960, norm:0.9064, tok/sec: 104071.79, flops:91.13, batch-reuse:1
@ 9960 train 4.0204 , allloss: 4.0327, dt: 1267.05ms, fracRes: 0.6008, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6461, norm(y): 0.9961, norm:0.9090, tok/sec: 103446.45, flops:90.59, batch-reuse:1
@ 9961 train 3.9541 , allloss: 3.9668, dt: 1267.38ms, fracRes: 0.5999, norm(attn): 0.1592, norm(output): 0.2520, norm(x): 0.6488, norm(y): 0.9962, norm:0.8782, tok/sec: 103419.28, flops:90.56, batch-reuse:1
@ 9962 train 3.9218 , allloss: 3.9349, dt: 1256.37ms, fracRes: 0.5994, norm(attn): 0.1631, norm(output): 0.2520, norm(x): 0.6501, norm(y): 0.9963, norm:0.8695, tok/sec: 104325.83, flops:91.36, batch-reuse:1
@ 9963 train 3.9888 , allloss: 4.0013, dt: 1263.20ms, fracRes: 0.5994, norm(attn): 0.1611, norm(output): 0.2520, norm(x): 0.6479, norm(y): 0.9964, norm:0.8821, tok/sec: 103761.64, flops:90.86, batch-reuse:1
@ 9964 train 3.9695 , allloss: 3.9821, dt: 1262.94ms, fracRes: 0.5999, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6486, norm(y): 0.9964, norm:0.8330, tok/sec: 103783.48, flops:90.88, batch-reuse:1
@ 9965 train 3.9755 , allloss: 3.9877, dt: 1271.59ms, fracRes: 0.6005, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6451, norm(y): 0.9964, norm:0.7953, tok/sec: 103077.19, flops:90.26, batch-reuse:1
@ 9966 train 3.9495 , allloss: 3.9619, dt: 1272.78ms, fracRes: 0.6007, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6448, norm(y): 0.9963, norm:0.7836, tok/sec: 102981.15, flops:90.18, batch-reuse:1
@ 9967 train 3.9731 , allloss: 3.9855, dt: 1268.49ms, fracRes: 0.6009, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6411, norm(y): 0.9961, norm:0.8268, tok/sec: 103328.78, flops:90.48, batch-reuse:1
@ 9968 train 3.9741 , allloss: 3.9866, dt: 1269.35ms, fracRes: 0.6004, norm(attn): 0.1602, norm(output): 0.2520, norm(x): 0.6396, norm(y): 0.9960, norm:0.7678, tok/sec: 103258.95, flops:90.42, batch-reuse:1
@ 9969 train 3.8919 , allloss: 3.9049, dt: 1263.87ms, fracRes: 0.6007, norm(attn): 0.1611, norm(output): 0.2490, norm(x): 0.6389, norm(y): 0.9961, norm:0.7809, tok/sec: 103706.81, flops:90.81, batch-reuse:1
@ 9970 train 3.9284 , allloss: 3.9409, dt: 1260.33ms, fracRes: 0.6004, norm(attn): 0.1611, norm(output): 0.2490, norm(x): 0.6394, norm(y): 0.9960, norm:0.8071, tok/sec: 103997.79, flops:91.07, batch-reuse:1
@ 9971 train 3.9232 , allloss: 3.9361, dt: 1272.56ms, fracRes: 0.5998, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6420, norm(y): 0.9959, norm:0.8964, tok/sec: 102999.02, flops:90.19, batch-reuse:1
@ 9972 train 3.9517 , allloss: 3.9644, dt: 1300.15ms, fracRes: 0.6006, norm(attn): 0.1592, norm(output): 0.2490, norm(x): 0.6406, norm(y): 0.9963, norm:0.7881, tok/sec: 100812.79, flops:88.28, batch-reuse:1
@ 9973 train 3.9847 , allloss: 3.9976, dt: 1255.70ms, fracRes: 0.6006, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6436, norm(y): 0.9961, norm:0.8372, tok/sec: 104381.41, flops:91.41, batch-reuse:1
@ 9974 train 4.0708 , allloss: 4.0832, dt: 1271.95ms, fracRes: 0.6002, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6407, norm(y): 0.9961, norm:0.8253, tok/sec: 103048.23, flops:90.24, batch-reuse:1
@ 9975 train 3.9519 , allloss: 3.9646, dt: 1292.13ms, fracRes: 0.5992, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6419, norm(y): 0.9961, norm:0.8305, tok/sec: 101438.90, flops:88.83, batch-reuse:1
@ 9976 train 3.7572 , allloss: 3.7710, dt: 1270.62ms, fracRes: 0.6000, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6469, norm(y): 0.9964, norm:1.1248, tok/sec: 103156.28, flops:90.33, batch-reuse:1
@ 9977 train 3.9378 , allloss: 3.9511, dt: 1259.75ms, fracRes: 0.5993, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6342, norm(y): 0.9960, norm:0.9860, tok/sec: 104045.77, flops:91.11, batch-reuse:1
@ 9978 train 3.8578 , allloss: 3.8708, dt: 1278.63ms, fracRes: 0.5995, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6368, norm(y): 0.9959, norm:0.8635, tok/sec: 102509.91, flops:89.77, batch-reuse:1
@ 9979 train 4.0159 , allloss: 4.0299, dt: 1263.60ms, fracRes: 0.5999, norm(attn): 0.1611, norm(output): 0.2520, norm(x): 0.6437, norm(y): 0.9957, norm:1.0012, tok/sec: 103729.14, flops:90.83, batch-reuse:1
@ 9980 train 3.9703 , allloss: 3.9839, dt: 1257.13ms, fracRes: 0.6001, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6444, norm(y): 0.9958, norm:1.0270, tok/sec: 104263.07, flops:91.30, batch-reuse:1
@ 9981 train 3.9711 , allloss: 3.9837, dt: 1284.28ms, fracRes: 0.5980, norm(attn): 0.1650, norm(output): 0.2539, norm(x): 0.6433, norm(y): 0.9959, norm:1.1888, tok/sec: 102058.93, flops:89.37, batch-reuse:1
@ 9982 train 4.0409 , allloss: 4.0536, dt: 1260.87ms, fracRes: 0.5996, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6434, norm(y): 0.9958, norm:0.9833, tok/sec: 103953.21, flops:91.03, batch-reuse:1
@ 9983 train 3.9985 , allloss: 4.0113, dt: 1252.28ms, fracRes: 0.5998, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6421, norm(y): 0.9960, norm:1.2236, tok/sec: 104666.87, flops:91.66, batch-reuse:1
@ 9984 train 4.0457 , allloss: 4.0584, dt: 1273.40ms, fracRes: 0.6000, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6414, norm(y): 0.9958, norm:1.1242, tok/sec: 102930.79, flops:90.14, batch-reuse:1
@ 9985 train 4.0275 , allloss: 4.0434, dt: 1269.09ms, fracRes: 0.6007, norm(attn): 0.1592, norm(output): 0.2490, norm(x): 0.6412, norm(y): 0.9961, norm:1.0376, tok/sec: 103280.23, flops:90.44, batch-reuse:1
@ 9986 train 3.9859 , allloss: 3.9985, dt: 1281.58ms, fracRes: 0.6004, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6443, norm(y): 0.9960, norm:1.2349, tok/sec: 102273.55, flops:89.56, batch-reuse:1
@ 9987 train 3.9699 , allloss: 3.9825, dt: 1325.44ms, fracRes: 0.6009, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6410, norm(y): 0.9961, norm:1.1589, tok/sec: 98889.45, flops:86.60, batch-reuse:1
@ 9988 train 4.0109 , allloss: 4.0236, dt: 1291.39ms, fracRes: 0.6010, norm(attn): 0.1582, norm(output): 0.2490, norm(x): 0.6395, norm(y): 0.9959, norm:0.9104, tok/sec: 101496.75, flops:88.88, batch-reuse:1
@ 9989 train 3.9579 , allloss: 3.9708, dt: 1258.74ms, fracRes: 0.6013, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6388, norm(y): 0.9961, norm:1.1600, tok/sec: 104129.79, flops:91.18, batch-reuse:1
@ 9990 train 3.9697 , allloss: 3.9825, dt: 1258.14ms, fracRes: 0.6009, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6409, norm(y): 0.9961, norm:0.9100, tok/sec: 104178.98, flops:91.23, batch-reuse:1
@ 9991 train 3.9873 , allloss: 3.9999, dt: 1257.43ms, fracRes: 0.6009, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6423, norm(y): 0.9961, norm:0.8909, tok/sec: 104238.20, flops:91.28, batch-reuse:1
@ 9992 train 3.9048 , allloss: 3.9172, dt: 1265.11ms, fracRes: 0.6006, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6438, norm(y): 0.9961, norm:1.1189, tok/sec: 103605.24, flops:90.73, batch-reuse:1
@ 9993 train 4.0463 , allloss: 4.0586, dt: 1277.91ms, fracRes: 0.6006, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6450, norm(y): 0.9958, norm:0.9148, tok/sec: 102567.82, flops:89.82, batch-reuse:1
@ 9994 train 3.9517 , allloss: 3.9645, dt: 1258.61ms, fracRes: 0.6013, norm(attn): 0.1611, norm(output): 0.2520, norm(x): 0.6466, norm(y): 0.9959, norm:0.9741, tok/sec: 104140.58, flops:91.19, batch-reuse:1
@ 9995 train 3.9559 , allloss: 3.9686, dt: 1243.74ms, fracRes: 0.6011, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6449, norm(y): 0.9960, norm:0.8599, tok/sec: 105385.71, flops:92.28, batch-reuse:1
@ 9996 train 3.9406 , allloss: 3.9532, dt: 1259.03ms, fracRes: 0.6007, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6461, norm(y): 0.9960, norm:0.8891, tok/sec: 104105.28, flops:91.16, batch-reuse:1
@ 9997 train 3.8022 , allloss: 3.8179, dt: 1259.33ms, fracRes: 0.6004, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6452, norm(y): 0.9962, norm:0.8868, tok/sec: 104080.88, flops:91.14, batch-reuse:1
@ 9998 train 3.8353 , allloss: 3.8475, dt: 1251.84ms, fracRes: 0.6002, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6400, norm(y): 0.9961, norm:1.0351, tok/sec: 104703.25, flops:91.69, batch-reuse:1
@ 9999 train 3.8945 , allloss: 3.9072, dt: 1256.36ms, fracRes: 0.6003, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6408, norm(y): 0.9961, norm:1.0784, tok/sec: 104327.12, flops:91.36, batch-reuse:1
@ 10000 val 3.9695
@ 10000 train 3.7622 , allloss: 3.7752, dt: 2718.82ms, fracRes: 0.5993, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6409, norm(y): 0.9961, norm:0.8688, tok/sec: 48209.16, flops:42.22, batch-reuse:1
@ 10001 train 3.7643 , allloss: 3.7768, dt: 1255.69ms, fracRes: 0.5990, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6409, norm(y): 0.9961, norm:1.0190, tok/sec: 104382.36, flops:91.41, batch-reuse:1
@ 10002 train 3.8592 , allloss: 3.8719, dt: 1268.76ms, fracRes: 0.5999, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6394, norm(y): 0.9962, norm:1.0949, tok/sec: 103307.03, flops:90.46, batch-reuse:1
@ 10003 train 3.6696 , allloss: 3.6824, dt: 1272.44ms, fracRes: 0.6005, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6414, norm(y): 0.9964, norm:0.9967, tok/sec: 103008.59, flops:90.20, batch-reuse:1
@ 10004 train 3.7093 , allloss: 3.7226, dt: 1255.21ms, fracRes: 0.6004, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6448, norm(y): 0.9962, norm:0.8985, tok/sec: 104422.16, flops:91.44, batch-reuse:1
@ 10005 train 3.7655 , allloss: 3.7783, dt: 1266.63ms, fracRes: 0.6001, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6419, norm(y): 0.9963, norm:0.9420, tok/sec: 103481.03, flops:90.62, batch-reuse:1
@ 10006 train 3.8889 , allloss: 3.9022, dt: 1285.27ms, fracRes: 0.6001, norm(attn): 0.1602, norm(output): 0.2520, norm(x): 0.6458, norm(y): 0.9963, norm:0.9060, tok/sec: 101980.07, flops:89.30, batch-reuse:1
@ 10007 train 3.8705 , allloss: 3.8836, dt: 1282.15ms, fracRes: 0.6001, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6451, norm(y): 0.9962, norm:0.9023, tok/sec: 102227.92, flops:89.52, batch-reuse:1
@ 10008 train 3.8395 , allloss: 3.8525, dt: 1248.87ms, fracRes: 0.6003, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6451, norm(y): 0.9959, norm:0.9512, tok/sec: 104952.69, flops:91.91, batch-reuse:1
@ 10009 train 3.9099 , allloss: 3.9224, dt: 1256.45ms, fracRes: 0.6005, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6422, norm(y): 0.9960, norm:0.8568, tok/sec: 104318.98, flops:91.35, batch-reuse:1
@ 10010 train 3.7543 , allloss: 3.7672, dt: 1254.91ms, fracRes: 0.6007, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6418, norm(y): 0.9963, norm:1.0469, tok/sec: 104447.11, flops:91.46, batch-reuse:1
@ 10011 train 3.7905 , allloss: 3.8039, dt: 1254.75ms, fracRes: 0.6004, norm(attn): 0.1631, norm(output): 0.2500, norm(x): 0.6451, norm(y): 0.9963, norm:0.9728, tok/sec: 104460.99, flops:91.47, batch-reuse:1
@ 10012 train 3.8039 , allloss: 3.8166, dt: 1258.18ms, fracRes: 0.6015, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6390, norm(y): 0.9962, norm:0.9763, tok/sec: 104175.55, flops:91.23, batch-reuse:1
@ 10013 train 3.8048 , allloss: 3.8178, dt: 1243.86ms, fracRes: 0.6016, norm(attn): 0.1592, norm(output): 0.2490, norm(x): 0.6414, norm(y): 0.9962, norm:0.8501, tok/sec: 105375.28, flops:92.28, batch-reuse:1
@ 10014 train 3.8652 , allloss: 3.8781, dt: 1263.19ms, fracRes: 0.6013, norm(attn): 0.1602, norm(output): 0.2490, norm(x): 0.6400, norm(y): 0.9961, norm:0.9742, tok/sec: 103762.34, flops:90.86, batch-reuse:1
@ 10015 train 3.8698 , allloss: 3.8826, dt: 1277.98ms, fracRes: 0.6012, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6424, norm(y): 0.9962, norm:0.8592, tok/sec: 102561.54, flops:89.81, batch-reuse:1
@ 10016 train 3.8429 , allloss: 3.8561, dt: 1274.73ms, fracRes: 0.6011, norm(attn): 0.1602, norm(output): 0.2520, norm(x): 0.6468, norm(y): 0.9960, norm:1.0297, tok/sec: 102823.38, flops:90.04, batch-reuse:1
@ 10017 train 3.7689 , allloss: 3.7813, dt: 1282.39ms, fracRes: 0.6010, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6405, norm(y): 0.9959, norm:0.9599, tok/sec: 102209.32, flops:89.50, batch-reuse:1
@ 10018 train 3.8669 , allloss: 3.8794, dt: 1270.02ms, fracRes: 0.6002, norm(attn): 0.1611, norm(output): 0.2490, norm(x): 0.6386, norm(y): 0.9959, norm:0.8814, tok/sec: 103205.02, flops:90.38, batch-reuse:1
@ 10019 train 3.8119 , allloss: 3.8246, dt: 1257.88ms, fracRes: 0.5994, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6384, norm(y): 0.9960, norm:0.9551, tok/sec: 104201.02, flops:91.25, batch-reuse:1
@ 10020 train 3.7931 , allloss: 3.8059, dt: 1246.22ms, fracRes: 0.5987, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6407, norm(y): 0.9960, norm:1.1040, tok/sec: 105175.72, flops:92.10, batch-reuse:1
@ 10021 train 3.8812 , allloss: 3.8943, dt: 1251.08ms, fracRes: 0.5995, norm(attn): 0.1602, norm(output): 0.2520, norm(x): 0.6427, norm(y): 0.9961, norm:0.8708, tok/sec: 104767.46, flops:91.74, batch-reuse:1
@ 10022 train 3.8555 , allloss: 3.8681, dt: 1270.98ms, fracRes: 0.5993, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6430, norm(y): 0.9959, norm:0.8012, tok/sec: 103126.42, flops:90.31, batch-reuse:1
@ 10023 train 3.7063 , allloss: 3.7187, dt: 1267.41ms, fracRes: 0.6002, norm(attn): 0.1602, norm(output): 0.2490, norm(x): 0.6395, norm(y): 0.9963, norm:0.8450, tok/sec: 103417.20, flops:90.56, batch-reuse:1
@ 10024 train 3.7671 , allloss: 3.7798, dt: 1257.32ms, fracRes: 0.5997, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6392, norm(y): 0.9961, norm:0.9079, tok/sec: 104246.82, flops:91.29, batch-reuse:1
@ 10025 train 3.8923 , allloss: 3.9051, dt: 1262.57ms, fracRes: 0.5995, norm(attn): 0.1611, norm(output): 0.2490, norm(x): 0.6400, norm(y): 0.9959, norm:0.9378, tok/sec: 103813.50, flops:90.91, batch-reuse:1
@ 10026 train 3.8743 , allloss: 3.8874, dt: 1283.66ms, fracRes: 0.5998, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6418, norm(y): 0.9961, norm:0.8936, tok/sec: 102108.15, flops:89.41, batch-reuse:1
@ 10027 train 3.7932 , allloss: 3.8054, dt: 1264.55ms, fracRes: 0.5994, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6426, norm(y): 0.9959, norm:0.8653, tok/sec: 103650.93, flops:90.77, batch-reuse:1
@ 10028 train 4.0223 , allloss: 4.0347, dt: 1252.85ms, fracRes: 0.6002, norm(attn): 0.1611, norm(output): 0.2520, norm(x): 0.6447, norm(y): 0.9956, norm:0.8978, tok/sec: 104619.16, flops:91.61, batch-reuse:1
@ 10029 train 3.9349 , allloss: 3.9472, dt: 1249.29ms, fracRes: 0.6001, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6391, norm(y): 0.9957, norm:0.8673, tok/sec: 104917.07, flops:91.87, batch-reuse:1
@ 10030 train 3.7874 , allloss: 3.7996, dt: 1252.58ms, fracRes: 0.5995, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6376, norm(y): 0.9958, norm:0.8233, tok/sec: 104641.29, flops:91.63, batch-reuse:1
@ 10031 train 3.6801 , allloss: 3.6926, dt: 1247.84ms, fracRes: 0.5992, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6389, norm(y): 0.9961, norm:0.9497, tok/sec: 105038.85, flops:91.98, batch-reuse:1
@ 10032 train 3.7466 , allloss: 3.7590, dt: 1274.24ms, fracRes: 0.5983, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6398, norm(y): 0.9958, norm:0.8450, tok/sec: 102862.84, flops:90.08, batch-reuse:1
@ 10033 train 3.7310 , allloss: 3.7432, dt: 1265.69ms, fracRes: 0.5995, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6404, norm(y): 0.9961, norm:0.9878, tok/sec: 103557.58, flops:90.68, batch-reuse:1
@ 10034 train 3.8118 , allloss: 3.8240, dt: 1275.85ms, fracRes: 0.5991, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6387, norm(y): 0.9959, norm:0.8653, tok/sec: 102732.71, flops:89.96, batch-reuse:1
@ 10035 train 3.7825 , allloss: 3.7955, dt: 1240.16ms, fracRes: 0.6003, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6427, norm(y): 0.9959, norm:0.9065, tok/sec: 105689.81, flops:92.55, batch-reuse:1
@ 10036 train 3.7124 , allloss: 3.7259, dt: 1244.09ms, fracRes: 0.6005, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6400, norm(y): 0.9961, norm:0.9284, tok/sec: 105355.63, flops:92.26, batch-reuse:1
@ 10037 train 3.7960 , allloss: 3.8090, dt: 1282.83ms, fracRes: 0.5999, norm(attn): 0.1602, norm(output): 0.2490, norm(x): 0.6398, norm(y): 0.9959, norm:1.1259, tok/sec: 102174.37, flops:89.47, batch-reuse:1
@ 10038 train 3.8392 , allloss: 3.8516, dt: 1241.29ms, fracRes: 0.5997, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6386, norm(y): 0.9960, norm:0.8289, tok/sec: 105593.31, flops:92.47, batch-reuse:1
@ 10039 train 3.9196 , allloss: 3.9316, dt: 1248.04ms, fracRes: 0.5993, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6383, norm(y): 0.9957, norm:0.8681, tok/sec: 105021.86, flops:91.97, batch-reuse:1
@ 10040 train 3.7885 , allloss: 3.8022, dt: 1238.38ms, fracRes: 0.5996, norm(attn): 0.1611, norm(output): 0.2520, norm(x): 0.6447, norm(y): 0.9957, norm:1.0446, tok/sec: 105841.38, flops:92.68, batch-reuse:1
@ 10041 train 3.8100 , allloss: 3.8226, dt: 1237.36ms, fracRes: 0.6012, norm(attn): 0.1572, norm(output): 0.2490, norm(x): 0.6381, norm(y): 0.9959, norm:0.9097, tok/sec: 105928.96, flops:92.76, batch-reuse:1
@ 10042 train 3.7449 , allloss: 3.7578, dt: 1248.78ms, fracRes: 0.6010, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6386, norm(y): 0.9958, norm:0.8823, tok/sec: 104960.26, flops:91.91, batch-reuse:1
@ 10043 train 3.8047 , allloss: 3.8170, dt: 1268.82ms, fracRes: 0.6004, norm(attn): 0.1611, norm(output): 0.2490, norm(x): 0.6352, norm(y): 0.9956, norm:1.0476, tok/sec: 103302.67, flops:90.46, batch-reuse:1
@ 10044 train 3.7904 , allloss: 3.8028, dt: 1248.61ms, fracRes: 0.6000, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6346, norm(y): 0.9956, norm:0.8422, tok/sec: 104974.57, flops:91.92, batch-reuse:1
@ 10045 train 4.0243 , allloss: 4.0373, dt: 1254.46ms, fracRes: 0.6000, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6365, norm(y): 0.9955, norm:0.9362, tok/sec: 104485.03, flops:91.50, batch-reuse:1
@ 10046 train 4.0256 , allloss: 4.0384, dt: 1263.17ms, fracRes: 0.5994, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6361, norm(y): 0.9956, norm:0.9236, tok/sec: 103764.06, flops:90.86, batch-reuse:1
@ 10047 train 4.0276 , allloss: 4.0401, dt: 1240.06ms, fracRes: 0.5995, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6382, norm(y): 0.9958, norm:0.9480, tok/sec: 105698.00, flops:92.56, batch-reuse:1
@ 10048 train 4.0003 , allloss: 4.0146, dt: 1238.94ms, fracRes: 0.5988, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6375, norm(y): 0.9956, norm:0.8198, tok/sec: 105793.32, flops:92.64, batch-reuse:1
@ 10049 train 4.0883 , allloss: 4.1010, dt: 1290.54ms, fracRes: 0.5982, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6403, norm(y): 0.9953, norm:0.8369, tok/sec: 101563.43, flops:88.94, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8203, 0.1787, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6797, 0.0806, 0.2393, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8359, 0.0466, 0.1074, 0.0095, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8008, 0.0322, 0.0549, 0.0332, 0.0801, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8438, 0.0732, 0.0403, 0.0101, 0.0117, 0.0210, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4961, 0.0496, 0.0264, 0.0669, 0.1357, 0.0806, 0.1445, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3262, 0.0623, 0.2812, 0.0136, 0.0923, 0.0645, 0.0527, 0.1074, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7891, 0.0364, 0.0479, 0.0054, 0.0160, 0.0089, 0.0471, 0.0173, 0.0304, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3477, 0.0327, 0.2344, 0.0072, 0.0173, 0.0140, 0.0288, 0.1025, 0.0229, 0.1924, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5547, 0.0481, 0.0801, 0.0123, 0.0233, 0.0104, 0.0308, 0.0258, 0.0439, 0.0522, 0.1196, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1465, 0.0457, 0.0396, 0.0991, 0.1030, 0.0189, 0.0430, 0.0811, 0.1416, 0.0879, 0.1562, 0.0369, 0.0000, 0.0000, 0.0000],
        [0.0737, 0.0425, 0.1250, 0.0276, 0.0447, 0.0413, 0.0576, 0.1074, 0.0294, 0.1592, 0.0549, 0.1089, 0.1270, 0.0000, 0.0000],
        [0.5664, 0.0488, 0.0542, 0.0050, 0.0172, 0.0095, 0.0479, 0.0170, 0.0304, 0.0206, 0.0413, 0.0249, 0.0889, 0.0277, 0.0000],
        [0.1768, 0.0718, 0.0781, 0.0659, 0.0242, 0.0036, 0.0087, 0.1143, 0.0137, 0.0894, 0.0315, 0.0801, 0.1689, 0.0200, 0.0530]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[     0.0034,     -0.0033,     -0.0097,  ...,     -0.0343,      0.0157,      0.0001],
        [    -0.0442,      0.0010,      0.0013,  ...,      0.0042,      0.0058,      0.0052],
        [     0.0318,      0.0360,     -0.0079,  ...,     -0.0208,      0.0206,     -0.0015],
        ...,
        [     0.0320,      0.0195,      0.0040,  ...,     -0.0372,      0.0110,      0.0160],
        [    -0.0473,      0.0045,     -0.0286,  ...,      0.0108,     -0.0024,     -0.0142],
        [    -0.0220,      0.0004,     -0.0143,  ...,      0.0121,     -0.0342,     -0.0016]], device='cuda:0', requires_grad=True)
K: tensor([ 1.4375,  0.3672,  0.4785,  0.4766,  0.7500,  0.0186, -0.2432, -0.9062, -0.8359, -0.1699, -0.2402, -0.7656, -0.0149, -0.9531, -0.0625, -0.5117,  0.4375,  0.2871, -1.5391,  0.4824,  1.4922,  0.8984, -0.9062,  0.8359, -0.4688, -0.2061, -0.8281,  0.4980,  0.4609, -0.0049,  1.5156,  0.2969,
         1.2109,  0.6328,  0.3789,  1.8672, -2.0000,  0.4004, -0.3320, -2.4688,  0.4375,  0.6641,  0.4082,  1.6328, -0.0703,  0.1270,  0.0845,  0.4609,  1.2344, -0.5898,  0.3516,  0.6523, -1.6562, -0.0623,  1.7500, -0.5898, -0.7969,  0.6250,  0.5312, -0.3633,  1.2109, -0.5391,  0.4316, -0.1177],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0388,  0.0050, -0.0084,  ...,  0.0088, -0.0054, -0.0117],
        [ 0.0239, -0.0190,  0.0124,  ...,  0.0035,  0.0448,  0.0099],
        [-0.0545,  0.0407,  0.0053,  ..., -0.0202, -0.0374, -0.0423],
        ...,
        [ 0.0091,  0.0056,  0.0345,  ...,  0.0204,  0.0157,  0.0228],
        [ 0.0156, -0.0100,  0.0219,  ...,  0.0273,  0.0047,  0.0081],
        [ 0.0112, -0.0096,  0.0374,  ..., -0.0203,  0.0214,  0.0041]], device='cuda:0', requires_grad=True)
Q: tensor([-0.1445,  0.0815, -1.1094, -0.2617,  0.1021, -0.1553, -2.2031, -0.5938,  0.4961,  0.7930, -1.2812, -0.2598, -0.0081, -0.5469, -0.1895,  0.0747,  0.6250, -0.8594,  0.7148,  0.5742, -0.2100,  0.2061,  1.2344,  0.3301,  0.8594,  0.0972, -1.2422, -2.2656,  0.0248, -0.0476,  0.5234,  0.4043,
        -0.3613, -1.4297, -0.1836, -0.2656,  1.0859,  0.6836, -0.1514,  1.1797,  1.9688,  0.5977,  0.4746,  0.0300, -0.4473,  1.3906, -1.9297,  0.4746, -0.4082,  0.3125, -1.5547, -0.4473, -0.3145, -1.0000, -0.3887, -0.2227,  0.2305, -1.4375,  0.1602, -0.2275, -1.5156, -0.0062,  0.6367,  1.5078],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -1.5234, -1.2578, -2.9531, -3.6094, -3.2344, -1.7031, -1.1641, -3.6250, -2.4688, -2.6719, -1.5703,  0.4512, -3.5312, -2.5781],
        [ 0.0000, -2.1250, -1.0469, -2.0781, -1.8047, -3.4375, -3.0312, -1.2891, -1.7734, -1.0312, -0.6445, -1.1016, -0.5273, -1.3438, -1.0391],
        [ 0.0000, -2.8906, -2.0469, -4.4688, -2.5156, -3.5156, -3.2344, -3.3594, -2.3438, -2.7344, -0.5117, -2.3594, -2.5000, -2.2656, -1.7891],
        [ 0.0000, -3.2188, -2.6719, -3.1875, -2.2969, -4.1875, -3.5000, -3.2656, -1.7812, -1.9766, -1.0078, -1.9844, -1.9531, -1.3203, -1.4609],
        [ 0.0000, -2.4375, -3.0312, -4.4375, -4.2812, -3.6875, -1.9609, -3.0938, -3.4062, -4.3750, -3.2500, -3.0938, -1.7344, -3.1719, -3.0938],
        [ 0.0000, -2.2969, -2.9375, -2.0000, -1.2969, -1.8125, -1.2344, -2.5938, -0.0549, -1.1406,  0.3652, -1.2656, -2.2656,  0.3516, -0.7383],
        [ 0.0000, -1.6562, -0.1494, -3.1719, -1.2656, -1.6172, -1.8203, -1.1094, -1.1484,  0.3867, -0.0069, -0.6836, -0.2539, -1.4062, -0.6250],
        [ 0.0000, -3.0781, -2.7969, -5.0000, -3.9062, -4.5000, -2.8281, -3.8125, -3.2656, -3.5938, -2.7031, -3.4375, -2.0625, -3.3438, -2.9531],
        [ 0.0000, -2.3594, -0.3926, -3.8750, -3.0000, -3.2188, -2.4844, -1.2188, -2.7188, -0.5938, -1.6484, -1.2656,  0.1621, -2.7969, -1.5078],
        [ 0.0000, -2.4375, -1.9375, -3.8125, -3.1719, -3.9844, -2.8906, -3.0625, -2.5312, -2.3594, -1.5312, -1.8516, -1.7266, -2.4219, -1.7266],
        [ 0.0000, -1.1641, -1.3125, -0.3945, -0.3535, -2.0469, -1.2266, -0.5977, -0.0342, -0.5156,  0.0620, -1.3828, -0.7969,  0.3457, -0.1079],
        [ 0.0000, -0.5547,  0.5273, -0.9844, -0.5039, -0.5820, -0.2490,  0.3730, -0.9219,  0.7695, -0.2949,  0.3867,  0.5391, -0.7500, -0.2207],
        [ 0.0000, -2.4531, -2.3438, -4.7188, -3.4844, -4.0938, -2.4688, -3.5156, -2.9219, -3.3125, -2.6250, -3.1250, -1.8516, -3.0156, -2.7812],
        [ 0.0000, -0.9023, -0.8164, -0.9805, -1.9922, -3.8750, -3.0156, -0.4355, -2.5625, -0.6797, -1.7188, -0.7891, -0.0420, -2.1719, -1.2031]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8603],
        [0.8359],
        [0.8387],
        [0.6761],
        [0.7332],
        [0.5965],
        [0.5373],
        [0.5676],
        [0.5733],
        [0.4223],
        [0.3043],
        [0.2218],
        [0.3391],
        [0.2616]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8320,     0.1680,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7852,     0.1904,     0.0256,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3027,     0.4258,     0.2275,     0.0444,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2256,     0.2051,     0.0781,     0.1768,     0.3145,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1992,     0.2432,     0.0376,     0.0527,     0.2227,     0.2441,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0532,     0.1582,     0.0291,     0.0293,     0.2383,     0.3496,     0.1416,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1152,     0.0317,     0.0145,     0.0089,     0.0608,     0.1631,     0.5625,     0.0444,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0830,     0.0188,     0.0056,     0.0023,     0.0327,     0.1055,     0.6445,     0.0148,     0.0913,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0393,     0.0199,     0.0107,     0.0129,     0.0273,     0.0645,     0.0811,     0.2002,     0.4531,     0.0913,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0312,     0.0087,     0.0016,     0.0019,     0.0219,     0.0608,     0.1895,     0.0040,     0.2832,     0.0330,     0.3633,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0192,     0.0108,     0.0112,     0.0066,     0.0137,     0.0588,     0.3066,     0.0781,     0.0337,     0.1021,     0.3066,     0.0540,     0.0000,     0.0000,     0.0000],
        [    0.0294,     0.0034,     0.0041,     0.0054,     0.0127,     0.0520,     0.1289,     0.0325,     0.1426,     0.0649,     0.3066,     0.0679,     0.1504,     0.0000,     0.0000],
        [    0.0649,     0.0052,     0.0015,     0.0006,     0.0082,     0.0330,     0.2676,     0.0036,     0.0198,     0.0112,     0.3848,     0.0148,     0.0322,     0.1523,     0.0000],
        [    0.0157,     0.0050,     0.0010,     0.0006,     0.0038,     0.0227,     0.0635,     0.0129,     0.0452,     0.0197,     0.1514,     0.0903,     0.0947,     0.3984,     0.0757]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0347, -0.0231, -0.0169,  ..., -0.0156, -0.0206,  0.0058],
        [-0.0237,  0.0180, -0.0190,  ...,  0.0138, -0.0031, -0.0576],
        [ 0.0240,  0.0168,  0.0140,  ...,  0.0132,  0.0311,  0.0217],
        ...,
        [ 0.0079, -0.0196,  0.0338,  ...,  0.0325, -0.0269, -0.0147],
        [-0.0217, -0.0115,  0.0192,  ...,  0.0092,  0.0306,  0.0025],
        [ 0.0299,  0.0456,  0.0136,  ..., -0.0088, -0.0064,  0.0241]], device='cuda:0', requires_grad=True)
K: tensor([ 3.1562, -0.4531, -2.0938, -1.3984, -2.2031, -0.6680, -1.0625,  0.2207, -0.3125,  0.1094,  0.5078,  1.8750, -2.0625,  1.1328,  0.3906, -3.6406,  1.3828, -1.2500,  0.7969,  1.8984, -1.1250,  1.4531,  1.8438, -3.6094,  1.0781, -1.5625, -2.9375,  0.4766,  2.0625, -0.1709,  3.3438,  1.7266,
        -1.1016, -0.3516, -2.8438, -0.1416,  0.2539,  2.1719, -1.2500,  0.8633,  2.1719, -0.1416, -0.6133,  2.4844,  1.2656,  0.7617, -1.9766, -2.5312,  1.2266,  0.4512, -2.3281,  2.2969, -0.7656,  0.3730,  0.0408,  0.2148,  1.2500,  0.7773, -2.0000,  1.8359,  0.6523,  1.6328,  3.5156, -0.7539],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0325, -0.0053, -0.0139,  ...,  0.0036,  0.0257, -0.0103],
        [ 0.0136,  0.0057, -0.0531,  ..., -0.0117, -0.0080, -0.0168],
        [ 0.0476,  0.0064,  0.0306,  ..., -0.0204,  0.0238,  0.0067],
        ...,
        [-0.0284, -0.0095,  0.0077,  ...,  0.0096, -0.0043, -0.0386],
        [ 0.0375,  0.0125, -0.0049,  ...,  0.0069, -0.0024, -0.0102],
        [ 0.0008, -0.0332, -0.0217,  ...,  0.0108, -0.0058,  0.0168]], device='cuda:0', requires_grad=True)
Q: tensor([-1.0859, -1.2109, -1.8594, -1.8281,  0.5898, -1.7109, -0.3027,  0.3516,  0.8789,  0.8594,  0.7656, -0.5859,  0.3887, -0.9609, -0.3379,  1.0078, -2.6406, -0.7383, -2.0938,  0.7500, -2.1406, -0.4355, -1.4453,  2.1562, -0.6211, -0.1641,  2.1250, -1.1328, -2.0156,  0.2676,  0.7188, -1.4297,
        -1.9062,  0.5703, -0.6562,  0.9141,  2.7500,  0.9805,  1.4062,  1.5391,  1.5000, -0.1738, -0.8867,  1.5234,  1.7344, -1.5938,  1.0781, -2.4375,  2.1562,  1.3906, -0.7812,  1.5469, -1.3516, -2.5156, -0.6914,  1.2578,  1.0859,  0.9414,  0.4512,  0.3789, -0.8281,  0.7227,  2.1406, -0.9844],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -1.6016,     -3.0625,     -4.6875,     -2.4531,     -2.6719,     -2.1562,     -5.5625,     -3.1250,     -5.0625,     -2.6094,     -4.9688,     -4.6562,     -2.6094,     -1.7031],
        [     0.0000,     -1.4141,     -3.4219,     -4.4375,     -2.7188,     -2.5625,     -0.9961,     -3.3906,     -2.8906,     -2.7031,     -1.3984,     -1.3516,     -2.4062,     -2.0938,     -0.6484],
        [     0.0000,      0.3457,     -0.2852,     -1.9141,     -0.4082,      0.1602,      0.8438,     -0.8672,      0.0019,      0.4824,      1.0391,      0.4590,      0.7656,      1.4453,      3.2031],
        [     0.0000,     -0.0947,     -1.0625,     -0.2441,      0.3359,      1.7188,      2.2344,      0.5312,      3.3594,      2.0312,      4.5312,      1.9062,      2.2969,      5.0938,      4.1250],
        [     0.0000,      0.1992,     -1.6641,     -1.3281,      0.1104,      0.2031,      1.3984,      0.0015,      2.1562,      1.0000,      3.9688,      2.0312,      2.0938,      3.7500,      3.2812],
        [     0.0000,      1.0859,     -0.6055,     -0.5938,      1.5000,      1.8828,      0.9805,      0.9805,      4.0625,      0.9844,      3.1875,      1.6172,      2.7500,      5.5312,      3.5156],
        [     0.0000,     -1.2891,     -2.0781,     -2.5625,     -0.6406,      0.3477,      1.5859,     -0.9531,      1.2188,     -0.2129,      2.9844,      0.4551,      1.5391,      3.2656,      2.8594],
        [     0.0000,     -1.4844,     -2.7031,     -3.5938,     -0.9297,      0.2422,      2.0469,     -1.7188,      0.0996,     -0.8906,      2.9531,     -0.2441,      0.3340,      2.2031,      2.8281],
        [     0.0000,     -0.6797,     -1.3047,     -1.1172,     -0.3652,      0.4883,      0.7227,      1.6250,      2.4375,      0.8398,      3.2031,      2.7031,      3.5469,      4.2812,      2.4531],
        [     0.0000,     -1.2734,     -2.9375,     -2.7969,     -0.3555,      0.6680,      1.8047,     -2.0625,      2.2031,      0.0515,      2.4531,      0.7539,      0.2324,      4.1562,      2.3281],
        [     0.0000,     -0.5703,     -0.5352,     -1.0625,     -0.3340,      1.1172,      2.7656,      1.4062,      0.5625,      1.6719,      2.7656,      1.0391,      2.3750,      2.4844,      4.0625],
        [     0.0000,     -2.1406,     -1.9609,     -1.6875,     -0.8398,      0.5703,      1.4766,      0.0972,      1.5781,      0.7930,      2.3438,      0.8359,      1.6328,      3.4062,      2.6719],
        [     0.0000,     -2.5312,     -3.7969,     -4.5938,     -2.0625,     -0.6758,      1.4219,     -2.9062,     -1.1875,     -1.7578,      1.7812,     -1.4766,     -0.7031,      0.8516,      1.4844],
        [     0.0000,     -1.1484,     -2.7188,     -3.2812,     -1.4141,      0.3652,      1.3906,     -0.1982,      1.0547,      0.2227,      2.2656,      1.7422,      1.7969,      3.2344,      1.5703]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8088],
        [0.5649],
        [0.4120],
        [0.5350],
        [0.4542],
        [0.2635],
        [0.2421],
        [0.3435],
        [0.1895],
        [0.3015],
        [0.1572],
        [0.1351],
        [0.2843],
        [0.1478]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0014,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0019,     0.0014,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0013,     0.0003,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0004,     0.0004,     0.0001,     0.0011,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0006,     0.0004,     0.0000,     0.0008,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9766,     0.0042,     0.0033,     0.0010,     0.0017,     0.0019,     0.0117,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7969,     0.0132,     0.0286,     0.0059,     0.0112,     0.0125,     0.0291,     0.1016,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0005,     0.0003,     0.0001,     0.0004,     0.0002,     0.0013,     0.0010,     0.0006,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0005,     0.0003,     0.0001,     0.0001,     0.0001,     0.0004,     0.0011,     0.0002,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9570,     0.0025,     0.0014,     0.0007,     0.0022,     0.0008,     0.0044,     0.0091,     0.0028,     0.0012,     0.0002,     0.0195,     0.0000,     0.0000,     0.0000],
        [    0.8984,     0.0015,     0.0026,     0.0009,     0.0019,     0.0018,     0.0042,     0.0178,     0.0035,     0.0057,     0.0003,     0.0109,     0.0488,     0.0000,     0.0000],
        [    0.9961,     0.0003,     0.0002,     0.0000,     0.0002,     0.0001,     0.0006,     0.0007,     0.0003,     0.0001,     0.0000,     0.0002,     0.0006,     0.0003,     0.0000],
        [    0.9961,     0.0002,     0.0001,     0.0000,     0.0001,     0.0001,     0.0003,     0.0004,     0.0001,     0.0000,     0.0000,     0.0002,     0.0003,     0.0001,     0.0001]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0078, -0.0084,  0.0385,  ..., -0.0095, -0.0046, -0.0196],
        [ 0.0450, -0.0447, -0.0129,  ..., -0.0138, -0.0180, -0.0380],
        [ 0.0546, -0.0350,  0.0419,  ..., -0.0120, -0.0163,  0.0011],
        ...,
        [ 0.0325,  0.0222, -0.0271,  ..., -0.0018,  0.0155,  0.0225],
        [ 0.0174,  0.0188, -0.0030,  ..., -0.0158, -0.0444, -0.0275],
        [ 0.0226, -0.0124,  0.0040,  ..., -0.0030, -0.0118,  0.0145]], device='cuda:0', requires_grad=True)
K: tensor([-1.2266, -0.9844, -0.9141, -0.2988, -2.3438,  2.1562, -1.6328,  3.0312, -1.5000, -1.2734,  1.5391,  0.4648, -1.8125, -1.7422, -1.7656,  0.6953,  1.7266,  2.6094, -2.0781,  0.9961,  2.5781,  0.5312, -1.7891, -0.2021,  1.8125, -1.4375,  0.1865, -2.2031,  1.8438,  0.6406,  1.2812,  2.9062,
        -0.6406,  1.7109,  2.3594, -1.0781, -1.6875,  1.6484,  1.5547, -1.6016,  2.0938, -2.1250,  0.0513,  1.6562,  0.2715,  2.8906, -1.4297, -2.9688, -0.2773,  3.2656, -1.0312, -1.3594,  1.8750,  0.0977,  1.8984, -1.4766, -1.9453, -2.4062, -2.1719, -2.0625, -2.8750, -1.5703,  1.8047,  0.4863],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0012,  0.0372,  0.0151,  ..., -0.0122,  0.0405, -0.0136],
        [-0.0096,  0.0465, -0.0008,  ...,  0.0190,  0.0175, -0.0103],
        [-0.0259, -0.0020,  0.0136,  ..., -0.0238,  0.0631, -0.0333],
        ...,
        [ 0.0247, -0.0115,  0.0144,  ..., -0.0207, -0.0106, -0.0086],
        [ 0.0053,  0.0108,  0.0028,  ...,  0.0251,  0.0186, -0.0002],
        [ 0.0108, -0.0313, -0.0160,  ...,  0.0310,  0.0238,  0.0085]], device='cuda:0', requires_grad=True)
Q: tensor([ 1.0078,  1.2578, -0.7695,  0.7422,  0.2832, -1.7031,  0.8398, -0.1045,  0.1211,  0.6914, -0.3438,  0.3066,  0.9180,  1.2422,  0.6250, -1.8047, -0.5039, -1.9609,  1.1250, -0.1309, -0.0898,  0.3633,  1.4062,  0.7773,  0.3398, -0.2217,  0.8164,  0.3379, -1.3047, -1.2188, -0.1006, -0.6094,
        -0.5039, -1.3750, -0.6836,  0.2197,  1.1875, -0.9102,  0.3555, -0.4277, -1.6094,  1.6016,  0.1904, -0.0026,  0.2080, -0.3438,  0.9258,  0.6055, -1.3984, -0.7422,  0.6367, -0.4043, -0.4062, -1.0078, -0.3887,  0.8945, -0.2314,  1.1719,  1.7344,  2.5938,  1.4141,  0.9531, -1.9062, -0.2617],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000,  -6.5312,  -7.3750,  -8.6250,  -7.7812,  -8.4375,  -7.0312,  -6.5312,  -7.5312,  -9.0000, -10.0000,  -6.6250,  -7.1250,  -7.7188,  -7.8438],
        [  0.0000,  -6.2812,  -6.5312,  -8.0000,  -7.5938,  -7.9375,  -6.6250,  -5.4688,  -7.2500,  -8.2500,  -9.6875,  -6.1250,  -6.2188,  -7.3750,  -7.2500],
        [  0.0000,  -6.6562,  -8.0000,  -8.1875,  -8.5625,  -8.4375,  -7.0625,  -6.9688,  -8.3125,  -8.7500, -10.0000,  -7.4688,  -7.4062,  -8.3750,  -7.7812],
        [  0.0000,  -7.8438,  -7.7812,  -9.7500,  -6.8125,  -7.9375,  -6.4375,  -5.5312,  -7.4062,  -9.0625, -10.3125,  -7.1875,  -5.9688,  -7.3438,  -8.3750],
        [  0.0000,  -7.4062,  -7.7812, -10.0625,  -7.1562,  -8.6875,  -6.3125,  -6.7188,  -7.6875,  -9.8125, -10.1875,  -7.7500,  -7.0625,  -7.7188,  -7.8125],
        [  0.0000,  -5.4688,  -5.7188,  -6.8750,  -6.3438,  -6.2500,  -4.4062,  -4.1250,  -5.3125,  -7.6562,  -8.0625,  -5.1562,  -4.4062,  -5.3438,  -5.9688],
        [  0.0000,  -4.0938,  -3.3281,  -4.9062,  -4.2812,  -4.1562,  -3.3125,  -2.0625,  -3.6719,  -4.0000,  -5.4688,  -2.9062,  -2.0938,  -3.5156,  -4.0000],
        [  0.0000,  -7.5312,  -8.0625,  -9.7500,  -7.7812,  -8.3750,  -6.6250,  -6.9375,  -7.4375,  -9.7500, -10.5000,  -8.0000,  -7.1250,  -7.5938,  -8.1250],
        [  0.0000,  -9.1250, -10.7500, -11.5625, -10.5625, -10.9375,  -9.2500,  -8.6875, -10.1875, -10.4375, -12.8125,  -8.8125,  -8.9375, -10.0625, -10.6875],
        [  0.0000,  -7.6562,  -8.2500,  -9.3750,  -9.3125,  -9.5625,  -7.7812,  -6.7812,  -8.6875,  -9.3750, -11.3125,  -7.2500,  -7.0625,  -8.5000,  -8.9375],
        [  0.0000,  -5.9375,  -6.5312,  -7.2812,  -6.0625,  -7.1250,  -5.3750,  -4.6562,  -5.8125,  -6.6875,  -8.3125,  -3.8906,  -4.2500,  -5.9062,  -6.9688],
        [  0.0000,  -6.3750,  -5.8438,  -6.8750,  -6.1562,  -6.1875,  -5.3750,  -3.9219,  -5.5625,  -5.0625,  -8.0625,  -4.4062,  -2.9219,  -5.3125,  -6.3750],
        [  0.0000,  -8.2500,  -8.6875, -10.4375,  -8.3750,  -9.0000,  -7.4062,  -7.3438,  -8.0625,  -9.8750, -11.1875,  -8.3750,  -7.3750,  -8.1250,  -8.9375],
        [  0.0000,  -8.3750,  -9.5000, -10.5625,  -9.2500,  -9.8125,  -8.1875,  -7.7500,  -8.9375, -10.5000, -12.1250,  -8.6875,  -8.2500,  -9.0625,  -9.2500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9902],
        [0.9987],
        [0.9993],
        [0.9987],
        [0.9984],
        [0.9948],
        [0.9193],
        [0.9974],
        [1.0000],
        [0.9993],
        [0.9863],
        [0.9880],
        [0.9987],
        [0.9990]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0801,     0.9219,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0276,     0.5586,     0.4121,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0364,     0.3633,     0.5430,     0.0566,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0386,     0.5117,     0.2793,     0.0503,     0.1191,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0221,     0.5039,     0.1562,     0.0557,     0.1396,     0.1216,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0053,     0.2373,     0.0293,     0.0076,     0.0212,     0.0322,     0.6680,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0096,     0.0830,     0.0439,     0.0046,     0.0064,     0.0270,     0.7070,     0.1182,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0195,     0.1611,     0.0078,     0.0015,     0.0049,     0.0120,     0.7266,     0.0194,     0.0491,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0115,     0.0615,     0.0206,     0.0060,     0.0167,     0.0317,     0.3164,     0.0981,     0.1934,     0.2432,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0189,     0.0249,     0.0140,     0.0018,     0.0038,     0.0231,     0.4922,     0.0452,     0.0262,     0.3125,     0.0381,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0118,     0.0287,     0.0233,     0.0064,     0.0055,     0.0128,     0.2031,     0.1436,     0.0493,     0.1836,     0.1157,     0.2168,     0.0000,     0.0000,     0.0000],
        [    0.0126,     0.0312,     0.0182,     0.0025,     0.0031,     0.0135,     0.1543,     0.0806,     0.0508,     0.1299,     0.0918,     0.2773,     0.1318,     0.0000,     0.0000],
        [    0.0236,     0.0806,     0.0043,     0.0008,     0.0020,     0.0052,     0.2070,     0.0089,     0.0145,     0.1167,     0.2734,     0.1309,     0.0320,     0.1001,     0.0000],
        [    0.0049,     0.0128,     0.0036,     0.0018,     0.0030,     0.0050,     0.0330,     0.0203,     0.0272,     0.0398,     0.0461,     0.1123,     0.0564,     0.1797,     0.4551]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0050,  0.0072, -0.0019,  ..., -0.0300, -0.0065, -0.0257],
        [-0.0508,  0.0147, -0.0122,  ...,  0.0041, -0.0023, -0.0014],
        [-0.0475, -0.0164,  0.0458,  ..., -0.0209, -0.0281, -0.0260],
        ...,
        [-0.0028, -0.0128, -0.0163,  ..., -0.0303, -0.0396, -0.0481],
        [-0.0262, -0.0257, -0.0218,  ..., -0.0130, -0.0147,  0.0499],
        [-0.0070,  0.0212,  0.0215,  ..., -0.0127,  0.0116, -0.0129]], device='cuda:0', requires_grad=True)
K: tensor([-1.7422, -1.7031, -0.6133,  0.5781, -0.1108, -2.0156, -1.2734,  0.1777, -0.0294, -2.1094, -0.2969, -2.3906,  2.6719, -1.7188, -0.6172,  1.9062,  2.6875, -0.1406,  1.0781, -0.4375,  0.9766, -1.6484,  0.8164, -1.9531, -0.9922,  0.9961, -0.6250,  1.5547,  0.7500,  1.8516, -0.6953, -2.0469,
        -0.4688, -1.4922,  1.5938, -1.1406,  2.6562,  0.2695, -1.2734,  0.1328, -2.5781,  1.0703,  0.6875,  1.7500,  0.4512,  0.2285, -2.4844, -0.5820,  1.8672,  0.1211,  0.9883, -0.4277, -0.1934, -2.0156, -1.7656, -2.1875,  2.1562, -0.5820, -0.8398,  1.5703, -0.3105, -1.3750,  1.9766, -0.8359],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0097, -0.0058,  0.0156,  ...,  0.0248, -0.0216, -0.0144],
        [ 0.0393, -0.0081,  0.0161,  ..., -0.0034,  0.0319,  0.0207],
        [-0.0178,  0.0106,  0.0480,  ...,  0.0217,  0.0249, -0.0103],
        ...,
        [ 0.0178,  0.0002, -0.0268,  ..., -0.0011,  0.0053, -0.0037],
        [-0.0115,  0.0416, -0.0245,  ...,  0.0041,  0.0040, -0.0364],
        [ 0.0018, -0.0118, -0.0032,  ...,  0.0126, -0.0009, -0.0011]], device='cuda:0', requires_grad=True)
Q: tensor([-0.3281, -1.1406, -1.8047,  1.0703, -2.7344, -0.5234, -0.5664,  0.2168,  0.4512, -1.0234, -0.8789, -0.4902, -2.3906, -2.0938,  1.2891, -0.1846, -0.8125, -0.9414,  0.6055, -1.1250, -0.5117,  1.6875, -1.5781, -2.2031, -0.7930, -1.4141,  1.7422,  3.6094, -2.0312,  1.7969,  0.5195, -1.6016,
        -1.6016,  0.9062, -1.5312, -1.9062,  1.9688, -1.3906, -2.2031,  0.9844,  0.1128, -0.2256,  2.4375, -0.2100, -0.7930, -1.3516, -0.8555, -3.0469,  1.7031,  1.4609,  1.0469,  0.4746, -1.2422, -0.9102, -0.2285, -1.8281, -0.4336,  0.2793, -0.2676,  1.0547, -0.7383,  0.9023, -0.0245, -1.6641],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      2.4375,      1.2656,      0.7617,      1.8594,      1.7734,      3.9531,      2.8750,      3.3594,      3.2812,      3.5156,      3.2969,      3.2031,      4.1250,      4.6562],
        [     0.0000,      3.0156,      2.7031,      1.4219,      1.6641,      1.9844,      4.7188,      4.3125,      3.6875,      4.6250,      4.1250,      5.2500,      5.2500,      4.8125,      6.0938],
        [     0.0000,      2.2969,      2.7031,      0.4434,      1.5000,      2.4688,      3.8438,      3.7812,      3.5156,      5.0938,      4.2812,      6.4062,      5.6562,      5.3125,      6.9062],
        [     0.0000,      2.5938,      1.9844,      0.2695,      1.1328,      2.0469,      4.2500,      3.5781,      4.2500,      5.0625,      4.1562,      5.3750,      4.5312,      6.0938,      7.0000],
        [     0.0000,      3.1250,      1.9531,      0.9180,      1.8359,      1.7031,      4.0625,      3.0156,      4.0000,      4.1562,      5.2812,      5.3750,      4.2500,      6.0312,      8.0000],
        [     0.0000,      3.7969,      1.7109,      0.3535,      1.3906,      1.8047,      4.8438,      3.5625,      3.3594,      3.6562,      3.1250,      4.4375,      3.8594,      4.2812,      7.4375],
        [     0.0000,      2.1562,      1.5234,     -0.7305,     -0.4004,      1.0391,      4.3125,      2.5156,      2.2344,      3.8438,      2.9375,      4.3438,      3.5625,      3.7344,      6.3750],
        [     0.0000,      2.1094,     -0.9102,     -2.5312,     -1.3750,     -0.4863,      3.6094,     -0.0011,      0.9258,      2.8750,      3.8594,      2.7969,      1.1406,      2.6875,      5.6250],
        [     0.0000,      1.6797,      0.5859,     -0.6602,      0.3750,      1.0156,      3.3125,      2.1406,      2.8281,      3.0625,      3.2812,      3.8750,      3.1406,      4.6250,      6.3750],
        [     0.0000,      0.2773,     -0.2988,     -2.3750,     -1.6016,      0.1973,      3.2656,      0.8711,      0.3281,      2.7969,      0.7031,      2.6250,      1.5625,      1.7266,      6.0312],
        [     0.0000,      0.8906,      0.6836,     -0.6016,     -0.7578,      0.0825,      2.8438,      2.5000,      1.4297,      2.7500,      2.2812,      2.9062,      3.2812,      3.2031,      4.6875],
        [     0.0000,      0.9102,      0.3652,     -1.6328,     -1.4062,      0.0703,      2.5000,      1.8594,      1.3906,      2.3281,      1.9844,      3.0938,      2.3438,      3.3281,      5.4375],
        [     0.0000,      1.2266,     -1.6953,     -3.3750,     -2.4844,     -1.5078,      2.1719,     -0.9688,     -0.4863,      1.6016,      2.4531,      1.7188,      0.3086,      1.4453,      4.5000],
        [     0.0000,      0.9531,     -0.3203,     -1.0234,     -0.5078,      0.0137,      1.8984,      1.4062,      1.7031,      2.0938,      2.2344,      3.1250,      2.4375,      3.5938,      4.5312]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3996],
        [0.1050],
        [0.1047],
        [0.1402],
        [0.0774],
        [0.2898],
        [0.1036],
        [0.0845],
        [0.0714],
        [0.1062],
        [0.0893],
        [0.0815],
        [0.0835],
        [0.0876]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0109,     0.9883,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0068,     0.9492,     0.0439,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0242,     0.8945,     0.0422,     0.0388,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0005,     0.4473,     0.1221,     0.0645,     0.3672,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0055,     0.4355,     0.0542,     0.0079,     0.2715,     0.2236,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0165,     0.3223,     0.4355,     0.0205,     0.0479,     0.0615,     0.0972,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0041,     0.0864,     0.1504,     0.0049,     0.0835,     0.0189,     0.0194,     0.6328,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0282,     0.3281,     0.0762,     0.0135,     0.0557,     0.0364,     0.0623,     0.3496,     0.0486,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0114,     0.3652,     0.0469,     0.0234,     0.0544,     0.0177,     0.1260,     0.2148,     0.0391,     0.1021,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0098,     0.2344,     0.0332,     0.0120,     0.0311,     0.0237,     0.0574,     0.2236,     0.0277,     0.1963,     0.1514,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0198,     0.4316,     0.0415,     0.0405,     0.0259,     0.0208,     0.1064,     0.1826,     0.0103,     0.0442,     0.0571,     0.0197,     0.0000,     0.0000,     0.0000],
        [    0.0272,     0.1230,     0.0439,     0.0046,     0.0369,     0.0079,     0.0248,     0.1089,     0.0752,     0.1621,     0.0515,     0.1040,     0.2305,     0.0000,     0.0000],
        [    0.0297,     0.1318,     0.0104,     0.0048,     0.0141,     0.0073,     0.0225,     0.0569,     0.0150,     0.1982,     0.0476,     0.0361,     0.3828,     0.0435,     0.0000],
        [    0.0635,     0.3086,     0.0393,     0.0172,     0.0320,     0.0137,     0.1309,     0.0742,     0.0065,     0.0515,     0.0388,     0.0425,     0.0796,     0.0081,     0.0942]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[    -0.0024,     -0.0266,      0.0021,  ...,     -0.0005,      0.0216,     -0.0130],
        [     0.0185,     -0.0495,     -0.0173,  ...,      0.0263,      0.0201,     -0.0045],
        [    -0.0123,     -0.0212,     -0.0336,  ...,      0.0315,      0.0107,     -0.0127],
        ...,
        [     0.0258,      0.0179,     -0.0180,  ...,     -0.0156,      0.0026,      0.0152],
        [     0.0089,      0.0001,      0.0257,  ...,      0.0343,     -0.0125,      0.0098],
        [    -0.0285,      0.0484,     -0.0174,  ...,      0.0007,      0.0246,      0.0416]], device='cuda:0', requires_grad=True)
K: tensor([-0.0947, -0.8633, -0.0610, -0.0408, -0.8086,  0.0742, -0.3066, -0.2773, -0.7461, -3.1875, -1.9453, -1.0547,  0.3184, -0.7773, -1.5703,  1.1719,  1.9453,  1.0859, -2.1719,  0.3242,  1.4922, -0.9023, -2.1875,  0.3926,  1.3594, -1.5234, -0.5547,  1.0391, -0.6719, -1.9141,  0.0295,  0.5234,
        -2.3281,  1.9375,  3.8125,  0.7227,  0.2383, -1.2578, -0.3105, -1.9297, -0.9102, -0.4746, -2.0781,  1.1953,  0.5273,  0.3555, -1.0781,  1.6562, -1.6875, -1.7969,  0.3926,  1.9219,  1.4297,  0.0869,  0.1543,  0.0698,  0.0864, -3.0469, -0.4766,  1.0938,  1.0000, -1.0625,  1.6406, -1.4766],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0020, -0.0070, -0.0076,  ..., -0.0385, -0.0354, -0.0175],
        [ 0.0050,  0.0029, -0.0068,  ...,  0.0088, -0.0207,  0.0398],
        [ 0.0189, -0.0102, -0.0021,  ..., -0.0098, -0.0301, -0.0089],
        ...,
        [ 0.0303, -0.0498, -0.0325,  ...,  0.0154,  0.0193, -0.0054],
        [ 0.0172, -0.0078,  0.0466,  ...,  0.0176, -0.0017,  0.0050],
        [-0.0123, -0.0139, -0.0199,  ...,  0.0152,  0.0034, -0.0184]], device='cuda:0', requires_grad=True)
Q: tensor([-0.3125,  1.2656,  0.6289,  0.5430,  0.4648, -1.2969,  0.0757, -2.3906, -1.2344,  0.4863, -0.5117,  1.2656,  0.6484, -0.3457, -0.4629, -0.8711,  0.4961,  0.2363, -0.3984,  0.1040, -0.4023, -0.5742,  0.2520, -0.4727,  1.2578,  0.7148, -1.1719,  1.6406, -0.8828,  0.8672, -1.1953, -2.0156,
         0.2773,  0.1055, -0.6641, -0.2910, -1.1016, -0.5039,  1.7734, -0.8438,  0.5273,  0.3320, -0.3047,  0.1836,  0.1514,  1.3594, -0.5000,  0.9648,  1.3203, -0.8359,  0.6562,  1.2734, -0.5977, -0.1001, -0.8398,  0.5391, -2.2344,  0.5742,  0.1465,  0.8008,  0.2832, -1.1641, -0.5117, -0.6992],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      4.5000,      2.8438,      2.1094,      3.4219,      3.3750,      3.0625,      3.2812,      2.5156,      2.2812,      3.2344,      2.2031,      3.2344,      2.3906,      2.9219],
        [     0.0000,      4.9375,      1.8750,      2.8438,      3.8438,      3.0000,      4.2188,      2.3281,      0.9375,      0.4492,      1.8516,     -0.3008,      1.6328,      0.7266,      0.9375],
        [     0.0000,      3.6094,      0.5586,      0.4727,      2.2656,      0.5039,      3.0000,      1.6484,      0.3027,      0.0444,     -0.0767,     -1.3203,      0.5000,     -0.0532,      0.1729],
        [     0.0000,      6.7812,      5.4688,      4.8438,      6.5625,      6.5000,      4.7188,      7.5000,      4.8125,      5.1562,      4.7188,      4.6250,      6.4375,      4.2188,      4.0938],
        [     0.0000,      4.3750,      2.2812,      0.3633,      3.9062,      3.7031,      3.2969,      3.2188,      2.3438,      2.2812,      1.8984,      1.7891,      1.5391,      1.3516,      2.7344],
        [     0.0000,      2.9688,      3.2656,      0.2188,      1.0625,      1.3125,      1.7734,      4.3125,      0.3047,      2.0469,      0.4609,      2.4688,      2.7188,     -0.2871,      1.5625],
        [     0.0000,      3.0469,      3.6094,      0.1836,      3.0156,      1.5391,      1.5625,      5.0312,      3.4375,      4.9688,      2.4375,      3.6562,      4.1562,      3.1562,      4.8438],
        [     0.0000,      2.4531,      0.9922,     -0.7383,      0.6797,      0.2559,      0.7930,      2.5156,      0.5469,      3.3906,      0.9648,      1.0469,      2.8750,      0.4688,      1.9609],
        [     0.0000,      3.4688,      1.4141,      0.7227,      1.5625,      0.4434,      2.4062,      2.9375,      1.2344,      2.1875,      2.6719,      1.7422,      3.2188,      1.3359,      2.4688],
        [     0.0000,      3.1719,      1.2109,      0.1973,      1.1484,      0.8750,      1.7578,      3.1250,      1.0312,      2.9844,      2.7344,      2.2031,      3.8750,      1.3672,      2.5625],
        [     0.0000,      3.0781,      0.7383,      0.7188,      0.2656,      0.0479,      1.6797,      2.2188,     -0.6523,      0.8008,      1.0547,     -0.0074,      3.4531,      0.1982,      1.0078],
        [     0.0000,      1.5078,      0.4766,     -1.7734,      0.3008,     -1.2422,     -0.0962,      1.3828,      1.0156,      1.7812,      0.6367,      1.3359,      2.1406,      1.8984,      2.5469],
        [     0.0000,      1.5000,     -1.0469,     -1.8281,     -0.7461,     -1.4062,     -0.2793,      0.6523,     -0.6797,      1.8984,      0.4746,      0.2002,      2.5625,      0.3809,      1.3516],
        [     0.0000,      1.5781,     -0.4824,     -1.3047,     -0.6875,     -1.5312,      0.7227,      0.1523,     -2.2812,     -0.2100,     -0.4902,     -0.4023,      0.2236,     -2.0625,      0.3945]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0290],
        [0.0060],
        [0.0096],
        [0.0025],
        [0.0081],
        [0.0065],
        [0.0058],
        [0.0057],
        [0.0039],
        [0.0087],
        [0.0053],
        [0.0165],
        [0.0056],
        [0.0085]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.1855 a:0.2168,:0.2354 and:0.0771atoes:0.2539,:0.3242 a:0.0603iced:0.5430)
iced
------
		( a:0.2168,:0.2354 and:0.0771atoes:0.2539,:0.3242 a:0.0603iced:0.5430,:0.2012)
, and they are a great source of vitamins and minerals.
- Pot
@ 10050 train 3.9338 , allloss: 3.9466, dt: 1650.69ms, fracRes: 0.5995, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6387, norm(y): 0.9957, norm:0.9411, tok/sec: 79404.50, flops:69.53, batch-reuse:1
@ 10051 train 4.0226 , allloss: 4.0356, dt: 1278.26ms, fracRes: 0.5984, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6376, norm(y): 0.9954, norm:1.0664, tok/sec: 102539.54, flops:89.79, batch-reuse:1
@ 10052 train 3.9796 , allloss: 3.9924, dt: 1250.32ms, fracRes: 0.5984, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6384, norm(y): 0.9954, norm:0.9033, tok/sec: 104830.53, flops:91.80, batch-reuse:1
@ 10053 train 4.0229 , allloss: 4.0361, dt: 1248.33ms, fracRes: 0.5990, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6387, norm(y): 0.9954, norm:0.8534, tok/sec: 104998.15, flops:91.95, batch-reuse:1
@ 10054 train 4.1102 , allloss: 4.1234, dt: 1251.79ms, fracRes: 0.6004, norm(attn): 0.1611, norm(output): 0.2520, norm(x): 0.6400, norm(y): 0.9954, norm:0.9900, tok/sec: 104707.30, flops:91.69, batch-reuse:1
@ 10055 train 3.9497 , allloss: 3.9625, dt: 1271.32ms, fracRes: 0.5996, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6383, norm(y): 0.9955, norm:1.0630, tok/sec: 103099.21, flops:90.28, batch-reuse:1
@ 10056 train 3.9445 , allloss: 3.9575, dt: 1298.32ms, fracRes: 0.6004, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6376, norm(y): 0.9955, norm:0.8353, tok/sec: 100955.04, flops:88.40, batch-reuse:1
@ 10057 train 4.2224 , allloss: 4.2355, dt: 1267.72ms, fracRes: 0.5997, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6381, norm(y): 0.9951, norm:1.1293, tok/sec: 103391.82, flops:90.54, batch-reuse:1
@ 10058 train 4.0567 , allloss: 4.0700, dt: 1266.41ms, fracRes: 0.5993, norm(attn): 0.1611, norm(output): 0.2520, norm(x): 0.6397, norm(y): 0.9952, norm:1.1225, tok/sec: 103498.76, flops:90.63, batch-reuse:1
@ 10059 train 3.9539 , allloss: 3.9671, dt: 1265.44ms, fracRes: 0.5983, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6396, norm(y): 0.9951, norm:0.8941, tok/sec: 103578.38, flops:90.70, batch-reuse:1
@ 10060 train 4.0168 , allloss: 4.0296, dt: 1257.34ms, fracRes: 0.5989, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6353, norm(y): 0.9954, norm:1.0057, tok/sec: 104245.83, flops:91.29, batch-reuse:1
@ 10061 train 4.0439 , allloss: 4.0569, dt: 1284.90ms, fracRes: 0.5995, norm(attn): 0.1611, norm(output): 0.2520, norm(x): 0.6398, norm(y): 0.9954, norm:0.9834, tok/sec: 102009.16, flops:89.33, batch-reuse:1
@ 10062 train 3.9725 , allloss: 3.9853, dt: 1254.19ms, fracRes: 0.5990, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6391, norm(y): 0.9952, norm:0.9543, tok/sec: 104507.39, flops:91.52, batch-reuse:1
@ 10063 train 4.0483 , allloss: 4.0607, dt: 1276.75ms, fracRes: 0.5995, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6349, norm(y): 0.9954, norm:0.8710, tok/sec: 102660.77, flops:89.90, batch-reuse:1
@ 10064 train 3.9539 , allloss: 3.9667, dt: 1266.21ms, fracRes: 0.5997, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6365, norm(y): 0.9954, norm:0.8674, tok/sec: 103515.62, flops:90.65, batch-reuse:1
@ 10065 train 4.0194 , allloss: 4.0322, dt: 1287.77ms, fracRes: 0.5988, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6374, norm(y): 0.9953, norm:0.8484, tok/sec: 101781.81, flops:89.13, batch-reuse:1
@ 10066 train 3.9646 , allloss: 3.9777, dt: 1283.49ms, fracRes: 0.5989, norm(attn): 0.1641, norm(output): 0.2500, norm(x): 0.6374, norm(y): 0.9953, norm:1.0113, tok/sec: 102121.32, flops:89.43, batch-reuse:1
@ 10067 train 4.0710 , allloss: 4.0836, dt: 1293.81ms, fracRes: 0.5984, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6340, norm(y): 0.9952, norm:1.0047, tok/sec: 101307.00, flops:88.71, batch-reuse:1
@ 10068 train 3.9691 , allloss: 3.9817, dt: 1253.21ms, fracRes: 0.5985, norm(attn): 0.1602, norm(output): 0.2520, norm(x): 0.6371, norm(y): 0.9953, norm:1.0104, tok/sec: 104588.89, flops:91.59, batch-reuse:1
@ 10069 train 3.9914 , allloss: 4.0042, dt: 1280.75ms, fracRes: 0.5988, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6367, norm(y): 0.9953, norm:0.9362, tok/sec: 102339.86, flops:89.62, batch-reuse:1
@ 10070 train 4.0393 , allloss: 4.0521, dt: 1265.80ms, fracRes: 0.5992, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6355, norm(y): 0.9953, norm:0.9003, tok/sec: 103548.84, flops:90.68, batch-reuse:1
@ 10071 train 3.9895 , allloss: 4.0022, dt: 1283.76ms, fracRes: 0.5999, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6381, norm(y): 0.9952, norm:0.8177, tok/sec: 102099.77, flops:89.41, batch-reuse:1
@ 10072 train 4.0129 , allloss: 4.0254, dt: 1302.84ms, fracRes: 0.6002, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6389, norm(y): 0.9954, norm:0.9393, tok/sec: 100604.93, flops:88.10, batch-reuse:1
@ 10073 train 3.9325 , allloss: 3.9465, dt: 1295.37ms, fracRes: 0.6000, norm(attn): 0.1621, norm(output): 0.2539, norm(x): 0.6466, norm(y): 0.9953, norm:0.9137, tok/sec: 101184.96, flops:88.61, batch-reuse:1
@ 10074 train 3.9766 , allloss: 3.9890, dt: 1299.67ms, fracRes: 0.5998, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6369, norm(y): 0.9955, norm:0.9757, tok/sec: 100850.07, flops:88.31, batch-reuse:1
@ 10075 train 4.0002 , allloss: 4.0137, dt: 1301.12ms, fracRes: 0.5991, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6452, norm(y): 0.9951, norm:0.9761, tok/sec: 100737.62, flops:88.21, batch-reuse:1
@ 10076 train 3.9620 , allloss: 3.9748, dt: 1267.52ms, fracRes: 0.5986, norm(attn): 0.1631, norm(output): 0.2520, norm(x): 0.6395, norm(y): 0.9951, norm:0.8968, tok/sec: 103407.86, flops:90.55, batch-reuse:1
@ 10077 train 3.9388 , allloss: 3.9521, dt: 1284.20ms, fracRes: 0.5995, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6414, norm(y): 0.9953, norm:0.9172, tok/sec: 102064.89, flops:89.38, batch-reuse:1
@ 10078 train 4.0361 , allloss: 4.0487, dt: 1257.82ms, fracRes: 0.5991, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6370, norm(y): 0.9952, norm:0.9612, tok/sec: 104205.90, flops:91.25, batch-reuse:1
@ 10079 train 4.1392 , allloss: 4.1518, dt: 1281.92ms, fracRes: 0.5993, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6375, norm(y): 0.9952, norm:1.2894, tok/sec: 102246.75, flops:89.54, batch-reuse:1
@ 10080 train 4.0269 , allloss: 4.0399, dt: 1282.25ms, fracRes: 0.6000, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6393, norm(y): 0.9954, norm:1.1331, tok/sec: 102220.32, flops:89.51, batch-reuse:1
@ 10081 train 4.0525 , allloss: 4.0655, dt: 1278.75ms, fracRes: 0.6000, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6401, norm(y): 0.9951, norm:0.8909, tok/sec: 102500.31, flops:89.76, batch-reuse:1
@ 10082 train 3.9444 , allloss: 3.9575, dt: 1253.53ms, fracRes: 0.5997, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6408, norm(y): 0.9953, norm:0.9400, tok/sec: 104562.15, flops:91.56, batch-reuse:1
@ 10083 train 4.0378 , allloss: 4.0507, dt: 1323.41ms, fracRes: 0.6001, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6382, norm(y): 0.9952, norm:0.8987, tok/sec: 99040.75, flops:86.73, batch-reuse:1
@ 10084 train 4.2290 , allloss: 4.2417, dt: 1265.92ms, fracRes: 0.6001, norm(attn): 0.1611, norm(output): 0.2520, norm(x): 0.6360, norm(y): 0.9952, norm:1.0297, tok/sec: 103538.97, flops:90.67, batch-reuse:1
@ 10085 train 3.9726 , allloss: 3.9856, dt: 1248.78ms, fracRes: 0.5997, norm(attn): 0.1631, norm(output): 0.2500, norm(x): 0.6394, norm(y): 0.9953, norm:0.9322, tok/sec: 104959.74, flops:91.91, batch-reuse:1
@ 10086 train 3.9029 , allloss: 3.9155, dt: 1270.98ms, fracRes: 0.5997, norm(attn): 0.1631, norm(output): 0.2500, norm(x): 0.6391, norm(y): 0.9954, norm:0.9707, tok/sec: 103127.00, flops:90.31, batch-reuse:1
@ 10087 train 3.9388 , allloss: 3.9514, dt: 1296.84ms, fracRes: 0.5997, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6399, norm(y): 0.9955, norm:1.0719, tok/sec: 101070.09, flops:88.51, batch-reuse:1
@ 10088 train 4.0948 , allloss: 4.1073, dt: 1294.69ms, fracRes: 0.6000, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6384, norm(y): 0.9954, norm:0.9387, tok/sec: 101237.90, flops:88.65, batch-reuse:1
@ 10089 train 4.0083 , allloss: 4.0207, dt: 1245.22ms, fracRes: 0.5994, norm(attn): 0.1611, norm(output): 0.2520, norm(x): 0.6385, norm(y): 0.9951, norm:1.1461, tok/sec: 105259.94, flops:92.17, batch-reuse:1
@ 10090 train 4.0086 , allloss: 4.0220, dt: 1255.60ms, fracRes: 0.5996, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6439, norm(y): 0.9951, norm:1.0415, tok/sec: 104389.76, flops:91.41, batch-reuse:1
@ 10091 train 3.9572 , allloss: 3.9700, dt: 1281.60ms, fracRes: 0.6003, norm(attn): 0.1611, norm(output): 0.2520, norm(x): 0.6449, norm(y): 0.9954, norm:0.9198, tok/sec: 102272.22, flops:89.56, batch-reuse:1
@ 10092 train 4.0705 , allloss: 4.0832, dt: 1258.27ms, fracRes: 0.5997, norm(attn): 0.1592, norm(output): 0.2520, norm(x): 0.6452, norm(y): 0.9951, norm:1.0693, tok/sec: 104168.30, flops:91.22, batch-reuse:1
@ 10093 train 3.9302 , allloss: 3.9437, dt: 1246.12ms, fracRes: 0.6006, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6511, norm(y): 0.9955, norm:0.9412, tok/sec: 105184.46, flops:92.11, batch-reuse:1
@ 10094 train 3.9132 , allloss: 3.9267, dt: 1239.39ms, fracRes: 0.6009, norm(attn): 0.1611, norm(output): 0.2520, norm(x): 0.6480, norm(y): 0.9955, norm:0.9055, tok/sec: 105755.40, flops:92.61, batch-reuse:1
@ 10095 train 4.0809 , allloss: 4.0935, dt: 1233.99ms, fracRes: 0.6002, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6436, norm(y): 0.9952, norm:0.9404, tok/sec: 106218.43, flops:93.01, batch-reuse:1
@ 10096 train 3.9376 , allloss: 3.9507, dt: 1267.97ms, fracRes: 0.6010, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6442, norm(y): 0.9956, norm:0.9142, tok/sec: 103371.43, flops:90.52, batch-reuse:1
@ 10097 train 4.0078 , allloss: 4.0217, dt: 1263.18ms, fracRes: 0.6006, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6465, norm(y): 0.9955, norm:1.0661, tok/sec: 103763.67, flops:90.86, batch-reuse:1
@ 10098 train 3.9812 , allloss: 3.9939, dt: 1252.38ms, fracRes: 0.6001, norm(attn): 0.1611, norm(output): 0.2520, norm(x): 0.6413, norm(y): 0.9954, norm:0.8645, tok/sec: 104658.64, flops:91.65, batch-reuse:1
@ 10099 train 3.9975 , allloss: 4.0099, dt: 1251.62ms, fracRes: 0.5999, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6396, norm(y): 0.9953, norm:0.8368, tok/sec: 104722.08, flops:91.70, batch-reuse:1
@ 10100 train 3.9713 , allloss: 3.9840, dt: 1245.79ms, fracRes: 0.6001, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6388, norm(y): 0.9955, norm:0.7825, tok/sec: 105211.81, flops:92.13, batch-reuse:1
@ 10101 train 3.9833 , allloss: 3.9960, dt: 1247.98ms, fracRes: 0.6004, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6397, norm(y): 0.9955, norm:0.8972, tok/sec: 105027.62, flops:91.97, batch-reuse:1
@ 10102 train 4.3104 , allloss: 4.3225, dt: 1272.63ms, fracRes: 0.6000, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6417, norm(y): 0.9950, norm:0.8918, tok/sec: 102992.94, flops:90.19, batch-reuse:1
@ 10103 train 3.9437 , allloss: 3.9563, dt: 1297.84ms, fracRes: 0.6003, norm(attn): 0.1631, norm(output): 0.2520, norm(x): 0.6449, norm(y): 0.9953, norm:1.0031, tok/sec: 100992.33, flops:88.44, batch-reuse:1
@ 10104 train 3.9800 , allloss: 3.9927, dt: 1240.04ms, fracRes: 0.6000, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6433, norm(y): 0.9953, norm:1.0154, tok/sec: 105699.51, flops:92.56, batch-reuse:1
@ 10105 train 3.9858 , allloss: 3.9986, dt: 1240.74ms, fracRes: 0.5991, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6400, norm(y): 0.9954, norm:0.9884, tok/sec: 105639.87, flops:92.51, batch-reuse:1
@ 10106 train 3.9717 , allloss: 3.9846, dt: 1253.43ms, fracRes: 0.5992, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6419, norm(y): 0.9955, norm:0.9475, tok/sec: 104570.65, flops:91.57, batch-reuse:1
@ 10107 train 3.9502 , allloss: 3.9629, dt: 1260.43ms, fracRes: 0.6000, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6402, norm(y): 0.9953, norm:0.9904, tok/sec: 103989.76, flops:91.06, batch-reuse:1
@ 10108 train 3.9174 , allloss: 3.9299, dt: 1265.23ms, fracRes: 0.6000, norm(attn): 0.1602, norm(output): 0.2520, norm(x): 0.6408, norm(y): 0.9952, norm:0.9514, tok/sec: 103595.61, flops:90.72, batch-reuse:1
@ 10109 train 3.9711 , allloss: 3.9838, dt: 1231.78ms, fracRes: 0.5996, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6415, norm(y): 0.9951, norm:0.8750, tok/sec: 106408.94, flops:93.18, batch-reuse:1
@ 10110 train 4.0050 , allloss: 4.0179, dt: 1247.71ms, fracRes: 0.5994, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6398, norm(y): 0.9953, norm:0.9613, tok/sec: 105050.19, flops:91.99, batch-reuse:1
@ 10111 train 4.0600 , allloss: 4.0727, dt: 1251.63ms, fracRes: 0.6002, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6356, norm(y): 0.9953, norm:0.9655, tok/sec: 104720.68, flops:91.70, batch-reuse:1
@ 10112 train 3.9848 , allloss: 3.9972, dt: 1238.16ms, fracRes: 0.6002, norm(attn): 0.1602, norm(output): 0.2490, norm(x): 0.6358, norm(y): 0.9953, norm:1.0640, tok/sec: 105860.11, flops:92.70, batch-reuse:1
@ 10113 train 4.0425 , allloss: 4.0550, dt: 1249.53ms, fracRes: 0.6000, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6394, norm(y): 0.9953, norm:0.8369, tok/sec: 104896.91, flops:91.86, batch-reuse:1
@ 10114 train 4.0015 , allloss: 4.0141, dt: 1261.68ms, fracRes: 0.5996, norm(attn): 0.1631, norm(output): 0.2520, norm(x): 0.6427, norm(y): 0.9953, norm:0.9101, tok/sec: 103887.01, flops:90.97, batch-reuse:1
@ 10115 train 4.0101 , allloss: 4.0230, dt: 1258.19ms, fracRes: 0.5998, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6454, norm(y): 0.9953, norm:1.0545, tok/sec: 104175.41, flops:91.22, batch-reuse:1
@ 10116 train 4.5643 , allloss: 4.5784, dt: 1243.91ms, fracRes: 0.5989, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6460, norm(y): 0.9948, norm:1.4810, tok/sec: 105371.22, flops:92.27, batch-reuse:1
@ 10117 train 4.0425 , allloss: 4.0554, dt: 1253.89ms, fracRes: 0.5988, norm(attn): 0.1602, norm(output): 0.2520, norm(x): 0.6401, norm(y): 0.9953, norm:1.1413, tok/sec: 104532.71, flops:91.54, batch-reuse:1
@ 10118 train 3.9773 , allloss: 3.9898, dt: 1252.66ms, fracRes: 0.5987, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6385, norm(y): 0.9952, norm:1.0053, tok/sec: 104634.89, flops:91.63, batch-reuse:1
@ 10119 train 3.9677 , allloss: 3.9805, dt: 1243.21ms, fracRes: 0.5987, norm(attn): 0.1631, norm(output): 0.2520, norm(x): 0.6407, norm(y): 0.9953, norm:0.9186, tok/sec: 105429.95, flops:92.32, batch-reuse:1
@ 10120 train 3.9894 , allloss: 4.0026, dt: 1242.45ms, fracRes: 0.5991, norm(attn): 0.1631, norm(output): 0.2520, norm(x): 0.6405, norm(y): 0.9954, norm:0.9199, tok/sec: 105494.79, flops:92.38, batch-reuse:1
@ 10121 train 4.0581 , allloss: 4.0707, dt: 1253.10ms, fracRes: 0.6001, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6390, norm(y): 0.9955, norm:0.9474, tok/sec: 104598.04, flops:91.60, batch-reuse:1
@ 10122 train 3.9308 , allloss: 3.9432, dt: 1241.26ms, fracRes: 0.6010, norm(attn): 0.1602, norm(output): 0.2490, norm(x): 0.6380, norm(y): 0.9956, norm:1.0161, tok/sec: 105595.88, flops:92.47, batch-reuse:1
@ 10123 train 4.0068 , allloss: 4.0195, dt: 1255.86ms, fracRes: 0.6018, norm(attn): 0.1602, norm(output): 0.2520, norm(x): 0.6431, norm(y): 0.9953, norm:0.8687, tok/sec: 104368.27, flops:91.39, batch-reuse:1
@ 10124 train 3.9902 , allloss: 4.0028, dt: 1239.50ms, fracRes: 0.6012, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6441, norm(y): 0.9953, norm:0.9958, tok/sec: 105745.54, flops:92.60, batch-reuse:1
@ 10125 train 3.9777 , allloss: 3.9902, dt: 1265.20ms, fracRes: 0.5996, norm(attn): 0.1621, norm(output): 0.2539, norm(x): 0.6474, norm(y): 0.9951, norm:0.8760, tok/sec: 103597.53, flops:90.72, batch-reuse:1
@ 10126 train 3.9632 , allloss: 3.9756, dt: 1258.90ms, fracRes: 0.5986, norm(attn): 0.1631, norm(output): 0.2520, norm(x): 0.6483, norm(y): 0.9951, norm:0.8865, tok/sec: 104116.55, flops:91.17, batch-reuse:1
@ 10127 train 4.0420 , allloss: 4.0546, dt: 1246.40ms, fracRes: 0.5983, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6468, norm(y): 0.9950, norm:0.9727, tok/sec: 105160.73, flops:92.09, batch-reuse:1
@ 10128 train 3.9334 , allloss: 3.9462, dt: 1259.82ms, fracRes: 0.5988, norm(attn): 0.1602, norm(output): 0.2520, norm(x): 0.6452, norm(y): 0.9954, norm:0.9576, tok/sec: 104039.87, flops:91.11, batch-reuse:1
@ 10129 train 4.1569 , allloss: 4.1697, dt: 1303.73ms, fracRes: 0.5979, norm(attn): 0.1621, norm(output): 0.2539, norm(x): 0.6480, norm(y): 0.9949, norm:1.0752, tok/sec: 100535.99, flops:88.04, batch-reuse:1
@ 10130 train 3.9942 , allloss: 4.0072, dt: 1289.72ms, fracRes: 0.5973, norm(attn): 0.1641, norm(output): 0.2539, norm(x): 0.6478, norm(y): 0.9950, norm:0.9388, tok/sec: 101628.18, flops:88.99, batch-reuse:1
@ 10131 train 3.9812 , allloss: 3.9938, dt: 1265.86ms, fracRes: 0.5980, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6442, norm(y): 0.9952, norm:0.8339, tok/sec: 103544.20, flops:90.67, batch-reuse:1
@ 10132 train 4.0396 , allloss: 4.0524, dt: 1249.43ms, fracRes: 0.5989, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6441, norm(y): 0.9951, norm:0.8223, tok/sec: 104905.84, flops:91.86, batch-reuse:1
@ 10133 train 4.0443 , allloss: 4.0570, dt: 1253.87ms, fracRes: 0.6002, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6395, norm(y): 0.9951, norm:0.8463, tok/sec: 104534.28, flops:91.54, batch-reuse:1
@ 10134 train 3.9273 , allloss: 3.9404, dt: 1243.48ms, fracRes: 0.6013, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6459, norm(y): 0.9955, norm:0.8585, tok/sec: 105407.59, flops:92.30, batch-reuse:1
@ 10135 train 4.0418 , allloss: 4.0545, dt: 1250.14ms, fracRes: 0.5999, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6412, norm(y): 0.9950, norm:0.8654, tok/sec: 104846.26, flops:91.81, batch-reuse:1
@ 10136 train 4.0828 , allloss: 4.0954, dt: 1249.70ms, fracRes: 0.5995, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6382, norm(y): 0.9951, norm:0.8639, tok/sec: 104882.73, flops:91.84, batch-reuse:1
@ 10137 train 3.9833 , allloss: 3.9959, dt: 1284.21ms, fracRes: 0.5987, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6370, norm(y): 0.9951, norm:0.7670, tok/sec: 102064.29, flops:89.38, batch-reuse:1
@ 10138 train 3.9694 , allloss: 3.9827, dt: 1278.90ms, fracRes: 0.5991, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6379, norm(y): 0.9950, norm:0.8655, tok/sec: 102488.37, flops:89.75, batch-reuse:1
@ 10139 train 3.8764 , allloss: 3.8888, dt: 1250.30ms, fracRes: 0.6002, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6351, norm(y): 0.9953, norm:0.7781, tok/sec: 104832.23, flops:91.80, batch-reuse:1
@ 10140 train 3.9144 , allloss: 3.9269, dt: 1280.87ms, fracRes: 0.6001, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6358, norm(y): 0.9952, norm:0.8520, tok/sec: 102330.68, flops:89.61, batch-reuse:1
@ 10141 train 3.9659 , allloss: 3.9783, dt: 1247.70ms, fracRes: 0.5992, norm(attn): 0.1611, norm(output): 0.2520, norm(x): 0.6379, norm(y): 0.9951, norm:0.7904, tok/sec: 105050.98, flops:91.99, batch-reuse:1
@ 10142 train 3.9875 , allloss: 3.9997, dt: 1276.44ms, fracRes: 0.5988, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6363, norm(y): 0.9951, norm:0.8186, tok/sec: 102685.70, flops:89.92, batch-reuse:1
@ 10143 train 3.9295 , allloss: 3.9419, dt: 1263.50ms, fracRes: 0.5998, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6380, norm(y): 0.9952, norm:0.9071, tok/sec: 103736.87, flops:90.84, batch-reuse:1
@ 10144 train 3.8522 , allloss: 3.8646, dt: 1249.52ms, fracRes: 0.6003, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6391, norm(y): 0.9951, norm:0.9489, tok/sec: 104897.76, flops:91.86, batch-reuse:1
@ 10145 train 3.9234 , allloss: 3.9354, dt: 1252.29ms, fracRes: 0.6000, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6376, norm(y): 0.9950, norm:0.7822, tok/sec: 104665.99, flops:91.65, batch-reuse:1
@ 10146 train 3.9215 , allloss: 3.9338, dt: 1254.46ms, fracRes: 0.5997, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6378, norm(y): 0.9951, norm:0.8099, tok/sec: 104485.11, flops:91.50, batch-reuse:1
@ 10147 train 3.9678 , allloss: 3.9800, dt: 1277.04ms, fracRes: 0.6000, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6373, norm(y): 0.9953, norm:0.8134, tok/sec: 102637.58, flops:89.88, batch-reuse:1
@ 10148 train 3.9195 , allloss: 3.9316, dt: 1260.25ms, fracRes: 0.6000, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6375, norm(y): 0.9952, norm:0.7927, tok/sec: 104004.91, flops:91.08, batch-reuse:1
@ 10149 train 4.0125 , allloss: 4.0253, dt: 1269.69ms, fracRes: 0.5997, norm(attn): 0.1611, norm(output): 0.2520, norm(x): 0.6391, norm(y): 0.9951, norm:0.9391, tok/sec: 103231.90, flops:90.40, batch-reuse:1
@ 10150 train 3.9323 , allloss: 3.9446, dt: 1300.61ms, fracRes: 0.5995, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6367, norm(y): 0.9952, norm:0.8819, tok/sec: 100777.41, flops:88.25, batch-reuse:1
@ 10151 train 3.9102 , allloss: 3.9225, dt: 1275.07ms, fracRes: 0.5997, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6353, norm(y): 0.9953, norm:0.8175, tok/sec: 102795.58, flops:90.02, batch-reuse:1
@ 10152 train 3.8621 , allloss: 3.8743, dt: 1274.39ms, fracRes: 0.5995, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6349, norm(y): 0.9951, norm:0.7800, tok/sec: 102850.82, flops:90.06, batch-reuse:1
@ 10153 train 3.9445 , allloss: 3.9571, dt: 1257.86ms, fracRes: 0.6002, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6381, norm(y): 0.9952, norm:0.8652, tok/sec: 104202.38, flops:91.25, batch-reuse:1
@ 10154 train 3.8837 , allloss: 3.8965, dt: 1258.96ms, fracRes: 0.6003, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6370, norm(y): 0.9951, norm:0.8581, tok/sec: 104111.07, flops:91.17, batch-reuse:1
@ 10155 train 3.7925 , allloss: 3.8048, dt: 1244.65ms, fracRes: 0.5998, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6362, norm(y): 0.9953, norm:0.7840, tok/sec: 105307.99, flops:92.22, batch-reuse:1
@ 10156 train 3.8902 , allloss: 3.9028, dt: 1254.43ms, fracRes: 0.5991, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6349, norm(y): 0.9952, norm:0.8749, tok/sec: 104486.99, flops:91.50, batch-reuse:1
@ 10157 train 3.9284 , allloss: 3.9413, dt: 1245.00ms, fracRes: 0.5987, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6338, norm(y): 0.9952, norm:0.9699, tok/sec: 105279.05, flops:92.19, batch-reuse:1
@ 10158 train 3.8892 , allloss: 3.9016, dt: 1250.43ms, fracRes: 0.5995, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6323, norm(y): 0.9953, norm:0.9562, tok/sec: 104821.57, flops:91.79, batch-reuse:1
@ 10159 train 3.9221 , allloss: 3.9343, dt: 1252.80ms, fracRes: 0.5993, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6323, norm(y): 0.9950, norm:0.8035, tok/sec: 104623.40, flops:91.62, batch-reuse:1
@ 10160 train 3.9834 , allloss: 3.9960, dt: 1271.10ms, fracRes: 0.5986, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6337, norm(y): 0.9950, norm:0.9526, tok/sec: 103117.21, flops:90.30, batch-reuse:1
@ 10161 train 3.8811 , allloss: 3.8934, dt: 1264.08ms, fracRes: 0.5990, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6342, norm(y): 0.9951, norm:0.9039, tok/sec: 103689.81, flops:90.80, batch-reuse:1
@ 10162 train 3.8951 , allloss: 3.9071, dt: 1245.46ms, fracRes: 0.5993, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6330, norm(y): 0.9951, norm:0.8190, tok/sec: 105240.07, flops:92.16, batch-reuse:1
@ 10163 train 3.9183 , allloss: 3.9303, dt: 1256.99ms, fracRes: 0.5998, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6308, norm(y): 0.9951, norm:0.9536, tok/sec: 104274.18, flops:91.31, batch-reuse:1
@ 10164 train 3.9365 , allloss: 3.9489, dt: 1245.42ms, fracRes: 0.5993, norm(attn): 0.1611, norm(output): 0.2520, norm(x): 0.6325, norm(y): 0.9948, norm:0.8720, tok/sec: 105242.87, flops:92.16, batch-reuse:1
@ 10165 train 3.9283 , allloss: 3.9407, dt: 1271.62ms, fracRes: 0.5999, norm(attn): 0.1631, norm(output): 0.2500, norm(x): 0.6327, norm(y): 0.9949, norm:0.7963, tok/sec: 103074.87, flops:90.26, batch-reuse:1
@ 10166 train 4.0810 , allloss: 4.0931, dt: 1280.09ms, fracRes: 0.6004, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6359, norm(y): 0.9949, norm:0.8401, tok/sec: 102392.58, flops:89.66, batch-reuse:1
@ 10167 train 3.9616 , allloss: 3.9740, dt: 1310.82ms, fracRes: 0.6016, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6398, norm(y): 0.9952, norm:0.9134, tok/sec: 99992.00, flops:87.56, batch-reuse:1
@ 10168 train 3.9407 , allloss: 3.9530, dt: 1258.74ms, fracRes: 0.6012, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6378, norm(y): 0.9951, norm:0.8452, tok/sec: 104129.45, flops:91.18, batch-reuse:1
@ 10169 train 3.9430 , allloss: 3.9551, dt: 1280.53ms, fracRes: 0.6003, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6333, norm(y): 0.9950, norm:0.8195, tok/sec: 102357.35, flops:89.63, batch-reuse:1
@ 10170 train 3.9339 , allloss: 3.9464, dt: 1298.52ms, fracRes: 0.6003, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6339, norm(y): 0.9950, norm:0.7918, tok/sec: 100939.21, flops:88.39, batch-reuse:1
@ 10171 train 3.9585 , allloss: 3.9708, dt: 1253.93ms, fracRes: 0.5995, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6325, norm(y): 0.9949, norm:0.7999, tok/sec: 104528.73, flops:91.53, batch-reuse:1
@ 10172 train 3.9608 , allloss: 3.9735, dt: 1262.62ms, fracRes: 0.5989, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6368, norm(y): 0.9948, norm:0.8024, tok/sec: 103809.66, flops:90.90, batch-reuse:1
@ 10173 train 3.8890 , allloss: 3.9010, dt: 1283.69ms, fracRes: 0.5992, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6328, norm(y): 0.9949, norm:0.8214, tok/sec: 102105.31, flops:89.41, batch-reuse:1
@ 10174 train 3.9038 , allloss: 3.9165, dt: 1288.97ms, fracRes: 0.5998, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6375, norm(y): 0.9951, norm:0.8324, tok/sec: 101687.53, flops:89.05, batch-reuse:1
@ 10175 train 3.8461 , allloss: 3.8584, dt: 1264.53ms, fracRes: 0.5991, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6348, norm(y): 0.9948, norm:0.8219, tok/sec: 103652.37, flops:90.77, batch-reuse:1
@ 10176 train 3.8822 , allloss: 3.8948, dt: 1270.38ms, fracRes: 0.5998, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6349, norm(y): 0.9951, norm:0.9149, tok/sec: 103175.21, flops:90.35, batch-reuse:1
@ 10177 train 3.9091 , allloss: 3.9211, dt: 1302.52ms, fracRes: 0.5995, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6337, norm(y): 0.9950, norm:0.8152, tok/sec: 100629.60, flops:88.12, batch-reuse:1
@ 10178 train 3.9153 , allloss: 3.9273, dt: 1276.84ms, fracRes: 0.5999, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6341, norm(y): 0.9950, norm:0.9331, tok/sec: 102653.18, flops:89.89, batch-reuse:1
@ 10179 train 3.9617 , allloss: 3.9742, dt: 1242.95ms, fracRes: 0.6002, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6375, norm(y): 0.9948, norm:0.7503, tok/sec: 105452.33, flops:92.34, batch-reuse:1
@ 10180 train 3.9047 , allloss: 3.9174, dt: 1252.99ms, fracRes: 0.6004, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6379, norm(y): 0.9950, norm:0.9143, tok/sec: 104607.10, flops:91.60, batch-reuse:1
@ 10181 train 3.9105 , allloss: 3.9238, dt: 1256.44ms, fracRes: 0.6003, norm(attn): 0.1602, norm(output): 0.2490, norm(x): 0.6361, norm(y): 0.9949, norm:0.9039, tok/sec: 104320.35, flops:91.35, batch-reuse:1
@ 10182 train 3.9117 , allloss: 3.9244, dt: 1259.03ms, fracRes: 0.5999, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6350, norm(y): 0.9949, norm:0.9135, tok/sec: 104105.39, flops:91.16, batch-reuse:1
@ 10183 train 3.7186 , allloss: 3.7311, dt: 1250.68ms, fracRes: 0.5988, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6316, norm(y): 0.9951, norm:0.7564, tok/sec: 104800.73, flops:91.77, batch-reuse:1
@ 10184 train 3.6836 , allloss: 3.6968, dt: 1272.14ms, fracRes: 0.5982, norm(attn): 0.1641, norm(output): 0.2500, norm(x): 0.6344, norm(y): 0.9953, norm:0.9863, tok/sec: 103032.99, flops:90.22, batch-reuse:1
@ 10185 train 3.6946 , allloss: 3.7072, dt: 1273.91ms, fracRes: 0.5982, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6305, norm(y): 0.9952, norm:1.1125, tok/sec: 102889.87, flops:90.10, batch-reuse:1
@ 10186 train 3.7892 , allloss: 3.8014, dt: 1267.02ms, fracRes: 0.5983, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6315, norm(y): 0.9951, norm:0.9374, tok/sec: 103449.06, flops:90.59, batch-reuse:1
@ 10187 train 3.7709 , allloss: 3.7835, dt: 1246.09ms, fracRes: 0.5993, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6340, norm(y): 0.9952, norm:0.8540, tok/sec: 105186.23, flops:92.11, batch-reuse:1
@ 10188 train 3.7437 , allloss: 3.7556, dt: 1255.41ms, fracRes: 0.5998, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6320, norm(y): 0.9954, norm:1.0595, tok/sec: 104405.52, flops:91.43, batch-reuse:1
@ 10189 train 3.7242 , allloss: 3.7364, dt: 1263.60ms, fracRes: 0.5996, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6335, norm(y): 0.9951, norm:1.0746, tok/sec: 103729.33, flops:90.83, batch-reuse:1
@ 10190 train 3.8131 , allloss: 3.8254, dt: 1253.00ms, fracRes: 0.5997, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6341, norm(y): 0.9952, norm:0.9738, tok/sec: 104606.66, flops:91.60, batch-reuse:1
@ 10191 train 3.7831 , allloss: 3.7956, dt: 1259.56ms, fracRes: 0.6001, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6340, norm(y): 0.9954, norm:0.8719, tok/sec: 104062.04, flops:91.13, batch-reuse:1
@ 10192 train 3.8005 , allloss: 3.8137, dt: 1273.78ms, fracRes: 0.5994, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6360, norm(y): 0.9951, norm:0.8348, tok/sec: 102900.41, flops:90.11, batch-reuse:1
@ 10193 train 3.7509 , allloss: 3.7629, dt: 1243.83ms, fracRes: 0.5984, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6333, norm(y): 0.9951, norm:0.8058, tok/sec: 105377.83, flops:92.28, batch-reuse:1
@ 10194 train 3.8062 , allloss: 3.8188, dt: 1245.17ms, fracRes: 0.5976, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6310, norm(y): 0.9949, norm:0.8954, tok/sec: 105263.93, flops:92.18, batch-reuse:1
@ 10195 train 3.7368 , allloss: 3.7498, dt: 1256.52ms, fracRes: 0.5982, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6335, norm(y): 0.9950, norm:0.8609, tok/sec: 104313.28, flops:91.35, batch-reuse:1
@ 10196 train 3.7507 , allloss: 3.7632, dt: 1260.72ms, fracRes: 0.5989, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6312, norm(y): 0.9949, norm:0.8336, tok/sec: 103966.26, flops:91.04, batch-reuse:1
@ 10197 train 3.7394 , allloss: 3.7516, dt: 1245.54ms, fracRes: 0.5997, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6347, norm(y): 0.9950, norm:0.8271, tok/sec: 105232.76, flops:92.15, batch-reuse:1
@ 10198 train 3.8408 , allloss: 3.8536, dt: 1258.62ms, fracRes: 0.6009, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6357, norm(y): 0.9951, norm:0.8883, tok/sec: 104139.45, flops:91.19, batch-reuse:1
@ 10199 train 3.8311 , allloss: 3.8434, dt: 1274.22ms, fracRes: 0.6012, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6326, norm(y): 0.9952, norm:0.8322, tok/sec: 102864.86, flops:90.08, batch-reuse:1
@ 10200 train 3.7176 , allloss: 3.7303, dt: 1235.48ms, fracRes: 0.6015, norm(attn): 0.1602, norm(output): 0.2490, norm(x): 0.6359, norm(y): 0.9953, norm:0.8545, tok/sec: 106090.06, flops:92.90, batch-reuse:1
@ 10201 train 3.8383 , allloss: 3.8507, dt: 1271.21ms, fracRes: 0.6001, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6345, norm(y): 0.9948, norm:0.9452, tok/sec: 103107.95, flops:90.29, batch-reuse:1
@ 10202 train 3.7729 , allloss: 3.7850, dt: 1250.20ms, fracRes: 0.6000, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6306, norm(y): 0.9947, norm:0.9797, tok/sec: 104840.62, flops:91.81, batch-reuse:1
@ 10203 train 3.8229 , allloss: 3.8359, dt: 1272.70ms, fracRes: 0.5995, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6333, norm(y): 0.9947, norm:0.9480, tok/sec: 102987.59, flops:90.18, batch-reuse:1
@ 10204 train 3.7423 , allloss: 3.7545, dt: 1299.08ms, fracRes: 0.5979, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6291, norm(y): 0.9948, norm:0.9879, tok/sec: 100895.73, flops:88.35, batch-reuse:1
@ 10205 train 3.8013 , allloss: 3.8138, dt: 1288.51ms, fracRes: 0.5989, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6326, norm(y): 0.9949, norm:0.8860, tok/sec: 101723.54, flops:89.08, batch-reuse:1
@ 10206 train 3.7928 , allloss: 3.8056, dt: 1268.77ms, fracRes: 0.5985, norm(attn): 0.1631, norm(output): 0.2539, norm(x): 0.6361, norm(y): 0.9947, norm:0.9652, tok/sec: 103306.59, flops:90.46, batch-reuse:1
@ 10207 train 3.7597 , allloss: 3.7722, dt: 1261.04ms, fracRes: 0.5997, norm(attn): 0.1631, norm(output): 0.2500, norm(x): 0.6382, norm(y): 0.9952, norm:0.9300, tok/sec: 103940.00, flops:91.02, batch-reuse:1
@ 10208 train 3.8614 , allloss: 3.8736, dt: 1259.63ms, fracRes: 0.5995, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6387, norm(y): 0.9949, norm:0.9197, tok/sec: 104056.00, flops:91.12, batch-reuse:1
@ 10209 train 3.7930 , allloss: 3.8051, dt: 1267.09ms, fracRes: 0.5994, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6355, norm(y): 0.9949, norm:0.9674, tok/sec: 103443.59, flops:90.58, batch-reuse:1
@ 10210 train 3.7258 , allloss: 3.7382, dt: 1244.07ms, fracRes: 0.6000, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6383, norm(y): 0.9951, norm:0.9038, tok/sec: 105357.49, flops:92.26, batch-reuse:1
@ 10211 train 3.7803 , allloss: 3.7922, dt: 1262.11ms, fracRes: 0.6008, norm(attn): 0.1602, norm(output): 0.2490, norm(x): 0.6321, norm(y): 0.9949, norm:0.8054, tok/sec: 103851.33, flops:90.94, batch-reuse:1
@ 10212 train 3.7288 , allloss: 3.7410, dt: 1245.39ms, fracRes: 0.6002, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6329, norm(y): 0.9948, norm:0.9170, tok/sec: 105245.63, flops:92.16, batch-reuse:1
@ 10213 train 3.8556 , allloss: 3.8678, dt: 1265.18ms, fracRes: 0.6002, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6321, norm(y): 0.9949, norm:0.9142, tok/sec: 103599.22, flops:90.72, batch-reuse:1
@ 10214 train 3.7653 , allloss: 3.7774, dt: 1274.01ms, fracRes: 0.6002, norm(attn): 0.1621, norm(output): 0.2490, norm(x): 0.6317, norm(y): 0.9953, norm:1.0074, tok/sec: 102881.78, flops:90.09, batch-reuse:1
@ 10215 train 3.9058 , allloss: 3.9181, dt: 1281.76ms, fracRes: 0.5989, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6317, norm(y): 0.9949, norm:0.8755, tok/sec: 102259.13, flops:89.55, batch-reuse:1
@ 10216 train 3.8884 , allloss: 3.9009, dt: 1277.38ms, fracRes: 0.5984, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6326, norm(y): 0.9949, norm:0.8889, tok/sec: 102609.71, flops:89.85, batch-reuse:1
@ 10217 train 3.7572 , allloss: 3.7700, dt: 1262.21ms, fracRes: 0.5993, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6303, norm(y): 0.9949, norm:0.9034, tok/sec: 103843.64, flops:90.93, batch-reuse:1
@ 10218 train 3.8327 , allloss: 3.8453, dt: 1291.58ms, fracRes: 0.6000, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6309, norm(y): 0.9949, norm:0.8982, tok/sec: 101482.17, flops:88.87, batch-reuse:1
@ 10219 train 3.8350 , allloss: 3.8474, dt: 1305.76ms, fracRes: 0.6009, norm(attn): 0.1582, norm(output): 0.2500, norm(x): 0.6308, norm(y): 0.9948, norm:0.8155, tok/sec: 100379.61, flops:87.90, batch-reuse:1
@ 10220 train 3.7730 , allloss: 3.7855, dt: 1302.58ms, fracRes: 0.6005, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6325, norm(y): 0.9949, norm:0.8506, tok/sec: 100624.92, flops:88.12, batch-reuse:1
@ 10221 train 3.7793 , allloss: 3.7924, dt: 1258.32ms, fracRes: 0.5999, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6353, norm(y): 0.9948, norm:0.8678, tok/sec: 104164.45, flops:91.22, batch-reuse:1
@ 10222 train 3.7297 , allloss: 3.7424, dt: 1253.95ms, fracRes: 0.5997, norm(attn): 0.1602, norm(output): 0.2490, norm(x): 0.6305, norm(y): 0.9949, norm:0.8649, tok/sec: 104527.52, flops:91.53, batch-reuse:1
@ 10223 train 3.7930 , allloss: 3.8057, dt: 1249.08ms, fracRes: 0.5991, norm(attn): 0.1631, norm(output): 0.2520, norm(x): 0.6337, norm(y): 0.9948, norm:0.9352, tok/sec: 104934.42, flops:91.89, batch-reuse:1
@ 10224 train 3.7231 , allloss: 3.7357, dt: 1241.35ms, fracRes: 0.5993, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6351, norm(y): 0.9948, norm:0.9065, tok/sec: 105588.05, flops:92.46, batch-reuse:1
@ 10225 train 3.7217 , allloss: 3.7337, dt: 1262.59ms, fracRes: 0.5995, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6354, norm(y): 0.9948, norm:0.9215, tok/sec: 103812.38, flops:90.91, batch-reuse:1
@ 10226 train 3.7476 , allloss: 3.7599, dt: 1246.95ms, fracRes: 0.5987, norm(attn): 0.1631, norm(output): 0.2520, norm(x): 0.6352, norm(y): 0.9946, norm:0.8739, tok/sec: 105114.39, flops:92.05, batch-reuse:1
@ 10227 train 3.7917 , allloss: 3.8052, dt: 1254.88ms, fracRes: 0.5997, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6381, norm(y): 0.9950, norm:1.1083, tok/sec: 104449.71, flops:91.47, batch-reuse:1
@ 10228 train 3.7745 , allloss: 3.7869, dt: 1258.12ms, fracRes: 0.5995, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6331, norm(y): 0.9948, norm:0.9799, tok/sec: 104180.58, flops:91.23, batch-reuse:1
@ 10229 train 3.8790 , allloss: 3.8913, dt: 1254.95ms, fracRes: 0.5995, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6330, norm(y): 0.9947, norm:0.8868, tok/sec: 104443.74, flops:91.46, batch-reuse:1
@ 10230 train 4.0074 , allloss: 4.0198, dt: 1249.85ms, fracRes: 0.5984, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6334, norm(y): 0.9945, norm:0.8357, tok/sec: 104870.12, flops:91.83, batch-reuse:1
@ 10231 train 4.0103 , allloss: 4.0224, dt: 1238.14ms, fracRes: 0.5988, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6316, norm(y): 0.9945, norm:0.9164, tok/sec: 105862.34, flops:92.70, batch-reuse:1
@ 10232 train 4.0880 , allloss: 4.1007, dt: 1275.00ms, fracRes: 0.5990, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6318, norm(y): 0.9946, norm:0.9690, tok/sec: 102801.27, flops:90.02, batch-reuse:1
@ 10233 train 4.0478 , allloss: 4.0606, dt: 1250.78ms, fracRes: 0.5982, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6317, norm(y): 0.9945, norm:0.8455, tok/sec: 104792.40, flops:91.77, batch-reuse:1
@ 10234 train 4.0943 , allloss: 4.1074, dt: 1273.10ms, fracRes: 0.5982, norm(attn): 0.1602, norm(output): 0.2520, norm(x): 0.6321, norm(y): 0.9942, norm:0.9275, tok/sec: 102954.85, flops:90.16, batch-reuse:1
@ 10235 train 4.0071 , allloss: 4.0202, dt: 1292.42ms, fracRes: 0.5980, norm(attn): 0.1611, norm(output): 0.2520, norm(x): 0.6352, norm(y): 0.9943, norm:0.9738, tok/sec: 101415.81, flops:88.81, batch-reuse:1
@ 10236 train 4.0851 , allloss: 4.0982, dt: 1299.37ms, fracRes: 0.5984, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6343, norm(y): 0.9943, norm:0.9003, tok/sec: 100873.55, flops:88.33, batch-reuse:1
@ 10237 train 3.9499 , allloss: 3.9629, dt: 1266.09ms, fracRes: 0.6000, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6363, norm(y): 0.9945, norm:0.8186, tok/sec: 103525.33, flops:90.66, batch-reuse:1
@ 10238 train 4.0124 , allloss: 4.0258, dt: 1262.95ms, fracRes: 0.6005, norm(attn): 0.1631, norm(output): 0.2500, norm(x): 0.6334, norm(y): 0.9944, norm:1.0719, tok/sec: 103782.40, flops:90.88, batch-reuse:1
@ 10239 train 4.0636 , allloss: 4.0760, dt: 1279.65ms, fracRes: 0.5994, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6275, norm(y): 0.9943, norm:1.0280, tok/sec: 102428.28, flops:89.69, batch-reuse:1
@ 10240 train 4.0071 , allloss: 4.0197, dt: 1288.12ms, fracRes: 0.5983, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6316, norm(y): 0.9943, norm:0.9608, tok/sec: 101754.89, flops:89.11, batch-reuse:1
@ 10241 train 4.0205 , allloss: 4.0333, dt: 1274.45ms, fracRes: 0.5983, norm(attn): 0.1631, norm(output): 0.2500, norm(x): 0.6315, norm(y): 0.9943, norm:0.8989, tok/sec: 102846.18, flops:90.06, batch-reuse:1
@ 10242 train 4.1151 , allloss: 4.1279, dt: 1265.21ms, fracRes: 0.5990, norm(attn): 0.1611, norm(output): 0.2520, norm(x): 0.6341, norm(y): 0.9942, norm:1.0182, tok/sec: 103596.71, flops:90.72, batch-reuse:1
@ 10243 train 4.0677 , allloss: 4.0801, dt: 1265.83ms, fracRes: 0.5984, norm(attn): 0.1631, norm(output): 0.2520, norm(x): 0.6351, norm(y): 0.9942, norm:1.0476, tok/sec: 103546.33, flops:90.67, batch-reuse:1
@ 10244 train 4.0389 , allloss: 4.0531, dt: 1262.12ms, fracRes: 0.5990, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6377, norm(y): 0.9943, norm:1.0261, tok/sec: 103850.31, flops:90.94, batch-reuse:1
@ 10245 train 4.0537 , allloss: 4.0663, dt: 1286.12ms, fracRes: 0.5977, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6280, norm(y): 0.9948, norm:1.0994, tok/sec: 101912.94, flops:89.24, batch-reuse:1
@ 10246 train 4.0798 , allloss: 4.0924, dt: 1284.48ms, fracRes: 0.5982, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6331, norm(y): 0.9945, norm:1.1050, tok/sec: 102042.63, flops:89.36, batch-reuse:1
@ 10247 train 4.0168 , allloss: 4.0290, dt: 1284.07ms, fracRes: 0.5992, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6344, norm(y): 0.9943, norm:0.8733, tok/sec: 102075.11, flops:89.39, batch-reuse:1
@ 10248 train 4.1376 , allloss: 4.1500, dt: 1251.91ms, fracRes: 0.5999, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6372, norm(y): 0.9943, norm:1.0509, tok/sec: 104697.21, flops:91.68, batch-reuse:1
@ 10249 train 4.0452 , allloss: 4.0585, dt: 1261.54ms, fracRes: 0.5997, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6394, norm(y): 0.9945, norm:0.9850, tok/sec: 103898.53, flops:90.98, batch-reuse:1
@ 10250 train 4.1265 , allloss: 4.1387, dt: 1263.48ms, fracRes: 0.5992, norm(attn): 0.1611, norm(output): 0.2520, norm(x): 0.6365, norm(y): 0.9944, norm:1.1108, tok/sec: 103739.02, flops:90.84, batch-reuse:1
@ 10251 train 3.9847 , allloss: 3.9972, dt: 1253.06ms, fracRes: 0.5990, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6397, norm(y): 0.9943, norm:0.8773, tok/sec: 104601.87, flops:91.60, batch-reuse:1
@ 10252 train 4.0333 , allloss: 4.0454, dt: 1270.23ms, fracRes: 0.5996, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6381, norm(y): 0.9944, norm:0.8384, tok/sec: 103187.36, flops:90.36, batch-reuse:1
@ 10253 train 4.1528 , allloss: 4.1654, dt: 1281.97ms, fracRes: 0.5992, norm(attn): 0.1621, norm(output): 0.2539, norm(x): 0.6450, norm(y): 0.9942, norm:0.8727, tok/sec: 102242.37, flops:89.53, batch-reuse:1
@ 10254 train 3.9072 , allloss: 3.9196, dt: 1266.12ms, fracRes: 0.5990, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6408, norm(y): 0.9944, norm:0.8914, tok/sec: 103522.30, flops:90.65, batch-reuse:1
@ 10255 train 4.0351 , allloss: 4.0477, dt: 1262.04ms, fracRes: 0.5983, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6371, norm(y): 0.9945, norm:0.9099, tok/sec: 103857.43, flops:90.95, batch-reuse:1
@ 10256 train 3.9408 , allloss: 3.9545, dt: 1271.78ms, fracRes: 0.5968, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6382, norm(y): 0.9944, norm:1.1039, tok/sec: 103061.48, flops:90.25, batch-reuse:1
@ 10257 train 3.8943 , allloss: 3.9069, dt: 1277.04ms, fracRes: 0.5971, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6308, norm(y): 0.9945, norm:0.9023, tok/sec: 102637.00, flops:89.88, batch-reuse:1
@ 10258 train 3.9919 , allloss: 4.0042, dt: 1297.95ms, fracRes: 0.5970, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6314, norm(y): 0.9943, norm:0.8175, tok/sec: 100983.58, flops:88.43, batch-reuse:1
@ 10259 train 4.0460 , allloss: 4.0588, dt: 1276.55ms, fracRes: 0.5984, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6341, norm(y): 0.9946, norm:1.0235, tok/sec: 102677.01, flops:89.91, batch-reuse:1
@ 10260 train 3.9572 , allloss: 3.9696, dt: 1308.00ms, fracRes: 0.5986, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6330, norm(y): 0.9945, norm:0.8310, tok/sec: 100207.76, flops:87.75, batch-reuse:1
@ 10261 train 3.9469 , allloss: 3.9595, dt: 1287.44ms, fracRes: 0.5994, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6311, norm(y): 0.9944, norm:0.8363, tok/sec: 101808.39, flops:89.15, batch-reuse:1
@ 10262 train 4.0792 , allloss: 4.0921, dt: 1282.68ms, fracRes: 0.5996, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6323, norm(y): 0.9942, norm:0.9645, tok/sec: 102186.22, flops:89.48, batch-reuse:1
@ 10263 train 3.9522 , allloss: 3.9648, dt: 1263.55ms, fracRes: 0.6000, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6326, norm(y): 0.9944, norm:0.8963, tok/sec: 103733.11, flops:90.84, batch-reuse:1
@ 10264 train 3.9703 , allloss: 3.9825, dt: 1260.72ms, fracRes: 0.5996, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6308, norm(y): 0.9944, norm:0.8111, tok/sec: 103966.01, flops:91.04, batch-reuse:1
@ 10265 train 3.9777 , allloss: 3.9901, dt: 1276.69ms, fracRes: 0.5990, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6338, norm(y): 0.9944, norm:0.8062, tok/sec: 102665.18, flops:89.90, batch-reuse:1
@ 10266 train 3.9825 , allloss: 3.9951, dt: 1310.95ms, fracRes: 0.5987, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6354, norm(y): 0.9944, norm:0.7812, tok/sec: 99982.40, flops:87.55, batch-reuse:1
@ 10267 train 4.0859 , allloss: 4.0983, dt: 1282.94ms, fracRes: 0.5985, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6331, norm(y): 0.9942, norm:0.8283, tok/sec: 102165.31, flops:89.46, batch-reuse:1
@ 10268 train 4.0794 , allloss: 4.0917, dt: 1252.70ms, fracRes: 0.5991, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6318, norm(y): 0.9942, norm:0.9397, tok/sec: 104631.25, flops:91.62, batch-reuse:1
@ 10269 train 3.9744 , allloss: 3.9869, dt: 1267.69ms, fracRes: 0.5990, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6355, norm(y): 0.9942, norm:0.7381, tok/sec: 103393.98, flops:90.54, batch-reuse:1
@ 10270 train 4.1238 , allloss: 4.1372, dt: 1263.58ms, fracRes: 0.5989, norm(attn): 0.1631, norm(output): 0.2539, norm(x): 0.6408, norm(y): 0.9939, norm:1.0429, tok/sec: 103730.98, flops:90.84, batch-reuse:1
@ 10271 train 3.9179 , allloss: 3.9305, dt: 1281.28ms, fracRes: 0.5992, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6319, norm(y): 0.9943, norm:0.8287, tok/sec: 102297.89, flops:89.58, batch-reuse:1
@ 10272 train 4.0989 , allloss: 4.1119, dt: 1287.28ms, fracRes: 0.5989, norm(attn): 0.1621, norm(output): 0.2490, norm(x): 0.6327, norm(y): 0.9941, norm:0.9696, tok/sec: 101821.23, flops:89.16, batch-reuse:1
@ 10273 train 3.9958 , allloss: 4.0082, dt: 1276.07ms, fracRes: 0.5990, norm(attn): 0.1592, norm(output): 0.2500, norm(x): 0.6312, norm(y): 0.9943, norm:0.9814, tok/sec: 102715.69, flops:89.95, batch-reuse:1
@ 10274 train 4.1194 , allloss: 4.1318, dt: 1279.06ms, fracRes: 0.5976, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6302, norm(y): 0.9942, norm:1.2611, tok/sec: 102475.30, flops:89.74, batch-reuse:1
@ 10275 train 4.0491 , allloss: 4.0629, dt: 1264.79ms, fracRes: 0.5992, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6396, norm(y): 0.9942, norm:1.1363, tok/sec: 103631.33, flops:90.75, batch-reuse:1
@ 10276 train 3.9944 , allloss: 4.0067, dt: 1265.62ms, fracRes: 0.5992, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6349, norm(y): 0.9942, norm:1.0358, tok/sec: 103563.08, flops:90.69, batch-reuse:1
@ 10277 train 4.0714 , allloss: 4.0839, dt: 1271.82ms, fracRes: 0.5989, norm(attn): 0.1631, norm(output): 0.2520, norm(x): 0.6346, norm(y): 0.9940, norm:1.1309, tok/sec: 103058.53, flops:90.25, batch-reuse:1
@ 10278 train 3.9608 , allloss: 3.9744, dt: 1279.25ms, fracRes: 0.5992, norm(attn): 0.1631, norm(output): 0.2500, norm(x): 0.6303, norm(y): 0.9945, norm:1.0025, tok/sec: 102460.04, flops:89.72, batch-reuse:1
@ 10279 train 3.9271 , allloss: 3.9401, dt: 1261.31ms, fracRes: 0.5994, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6343, norm(y): 0.9944, norm:0.9551, tok/sec: 103916.97, flops:91.00, batch-reuse:1
@ 10280 train 3.9439 , allloss: 3.9563, dt: 1268.45ms, fracRes: 0.6000, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6354, norm(y): 0.9943, norm:0.8391, tok/sec: 103332.63, flops:90.49, batch-reuse:1
@ 10281 train 4.0703 , allloss: 4.0824, dt: 1262.92ms, fracRes: 0.5995, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6337, norm(y): 0.9941, norm:0.8555, tok/sec: 103784.63, flops:90.88, batch-reuse:1
@ 10282 train 4.0818 , allloss: 4.0943, dt: 1264.57ms, fracRes: 0.5991, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6362, norm(y): 0.9939, norm:0.9491, tok/sec: 103649.85, flops:90.76, batch-reuse:1
@ 10283 train 4.0056 , allloss: 4.0180, dt: 1276.41ms, fracRes: 0.6001, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6356, norm(y): 0.9943, norm:0.9590, tok/sec: 102687.98, flops:89.92, batch-reuse:1
@ 10284 train 3.9008 , allloss: 3.9144, dt: 1256.84ms, fracRes: 0.5998, norm(attn): 0.1631, norm(output): 0.2520, norm(x): 0.6427, norm(y): 0.9945, norm:1.1738, tok/sec: 104286.88, flops:91.32, batch-reuse:1
@ 10285 train 3.9400 , allloss: 3.9520, dt: 1258.20ms, fracRes: 0.5991, norm(attn): 0.1611, norm(output): 0.2520, norm(x): 0.6378, norm(y): 0.9943, norm:0.8351, tok/sec: 104173.89, flops:91.22, batch-reuse:1
@ 10286 train 4.0936 , allloss: 4.1058, dt: 1264.78ms, fracRes: 0.5991, norm(attn): 0.1602, norm(output): 0.2520, norm(x): 0.6383, norm(y): 0.9942, norm:1.0815, tok/sec: 103632.07, flops:90.75, batch-reuse:1
@ 10287 train 4.0105 , allloss: 4.0232, dt: 1266.11ms, fracRes: 0.5992, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6416, norm(y): 0.9942, norm:1.1386, tok/sec: 103523.79, flops:90.65, batch-reuse:1
@ 10288 train 4.0243 , allloss: 4.0367, dt: 1253.99ms, fracRes: 0.5990, norm(attn): 0.1631, norm(output): 0.2520, norm(x): 0.6390, norm(y): 0.9943, norm:0.9038, tok/sec: 104524.34, flops:91.53, batch-reuse:1
@ 10289 train 3.9591 , allloss: 3.9713, dt: 1261.28ms, fracRes: 0.5987, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6381, norm(y): 0.9943, norm:0.8857, tok/sec: 103919.80, flops:91.00, batch-reuse:1
@ 10290 train 3.9372 , allloss: 3.9493, dt: 1287.32ms, fracRes: 0.5984, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6358, norm(y): 0.9942, norm:0.8935, tok/sec: 101817.34, flops:89.16, batch-reuse:1
@ 10291 train 4.0586 , allloss: 4.0709, dt: 1251.28ms, fracRes: 0.5992, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6371, norm(y): 0.9942, norm:1.0049, tok/sec: 104750.67, flops:91.73, batch-reuse:1
@ 10292 train 3.9649 , allloss: 3.9779, dt: 1267.24ms, fracRes: 0.5999, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6408, norm(y): 0.9944, norm:1.0123, tok/sec: 103430.88, flops:90.57, batch-reuse:1
@ 10293 train 3.9541 , allloss: 3.9670, dt: 1268.45ms, fracRes: 0.5996, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6383, norm(y): 0.9946, norm:0.9262, tok/sec: 103332.14, flops:90.49, batch-reuse:1
@ 10294 train 3.9624 , allloss: 3.9763, dt: 1283.98ms, fracRes: 0.5997, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6399, norm(y): 0.9943, norm:1.1138, tok/sec: 102082.33, flops:89.39, batch-reuse:1
@ 10295 train 3.9305 , allloss: 3.9431, dt: 1244.97ms, fracRes: 0.5991, norm(attn): 0.1611, norm(output): 0.2520, norm(x): 0.6350, norm(y): 0.9942, norm:0.8844, tok/sec: 105281.35, flops:92.19, batch-reuse:1
@ 10296 train 4.1012 , allloss: 4.1142, dt: 1254.16ms, fracRes: 0.5990, norm(attn): 0.1611, norm(output): 0.2539, norm(x): 0.6411, norm(y): 0.9941, norm:0.9938, tok/sec: 104510.14, flops:91.52, batch-reuse:1
@ 10297 train 4.0690 , allloss: 4.0813, dt: 1260.16ms, fracRes: 0.5988, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6386, norm(y): 0.9943, norm:1.0434, tok/sec: 104011.92, flops:91.08, batch-reuse:1
@ 10298 train 3.9927 , allloss: 4.0055, dt: 1279.31ms, fracRes: 0.5984, norm(attn): 0.1641, norm(output): 0.2539, norm(x): 0.6401, norm(y): 0.9941, norm:0.8751, tok/sec: 102454.91, flops:89.72, batch-reuse:1
@ 10299 train 4.0420 , allloss: 4.0541, dt: 1262.26ms, fracRes: 0.5978, norm(attn): 0.1631, norm(output): 0.2520, norm(x): 0.6341, norm(y): 0.9940, norm:1.1651, tok/sec: 103839.29, flops:90.93, batch-reuse:1
@ 10300 train 3.9250 , allloss: 3.9372, dt: 1278.54ms, fracRes: 0.5979, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6370, norm(y): 0.9940, norm:0.9374, tok/sec: 102516.64, flops:89.77, batch-reuse:1
@ 10301 train 3.9881 , allloss: 4.0005, dt: 1265.32ms, fracRes: 0.5996, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6360, norm(y): 0.9942, norm:0.8672, tok/sec: 103588.31, flops:90.71, batch-reuse:1
@ 10302 train 4.0183 , allloss: 4.0307, dt: 1276.69ms, fracRes: 0.6003, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6341, norm(y): 0.9942, norm:0.9882, tok/sec: 102665.51, flops:89.90, batch-reuse:1
@ 10303 train 3.9087 , allloss: 3.9221, dt: 1281.20ms, fracRes: 0.6004, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6375, norm(y): 0.9944, norm:0.9960, tok/sec: 102304.29, flops:89.59, batch-reuse:1
@ 10304 train 4.0132 , allloss: 4.0257, dt: 1287.10ms, fracRes: 0.6001, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6297, norm(y): 0.9943, norm:0.9401, tok/sec: 101834.96, flops:89.18, batch-reuse:1
@ 10305 train 4.0588 , allloss: 4.0713, dt: 1265.84ms, fracRes: 0.6000, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6325, norm(y): 0.9942, norm:1.0027, tok/sec: 103545.66, flops:90.67, batch-reuse:1
@ 10306 train 3.9961 , allloss: 4.0086, dt: 1269.04ms, fracRes: 0.6003, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6388, norm(y): 0.9942, norm:0.9542, tok/sec: 103284.23, flops:90.44, batch-reuse:1
@ 10307 train 4.0451 , allloss: 4.0572, dt: 1273.05ms, fracRes: 0.6003, norm(attn): 0.1631, norm(output): 0.2520, norm(x): 0.6377, norm(y): 0.9941, norm:0.8297, tok/sec: 102958.82, flops:90.16, batch-reuse:1
@ 10308 train 3.9908 , allloss: 4.0027, dt: 1284.69ms, fracRes: 0.5998, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6348, norm(y): 0.9941, norm:0.9511, tok/sec: 102026.37, flops:89.34, batch-reuse:1
@ 10309 train 3.9830 , allloss: 3.9956, dt: 1265.87ms, fracRes: 0.5997, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6377, norm(y): 0.9939, norm:0.8546, tok/sec: 103542.76, flops:90.67, batch-reuse:1
@ 10310 train 4.0198 , allloss: 4.0325, dt: 1274.26ms, fracRes: 0.5995, norm(attn): 0.1631, norm(output): 0.2500, norm(x): 0.6343, norm(y): 0.9939, norm:0.8588, tok/sec: 102861.19, flops:90.07, batch-reuse:1
@ 10311 train 4.0125 , allloss: 4.0247, dt: 1268.81ms, fracRes: 0.5994, norm(attn): 0.1611, norm(output): 0.2520, norm(x): 0.6345, norm(y): 0.9941, norm:0.8912, tok/sec: 103303.07, flops:90.46, batch-reuse:1
@ 10312 train 3.9915 , allloss: 4.0039, dt: 1259.95ms, fracRes: 0.5995, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6318, norm(y): 0.9944, norm:0.8153, tok/sec: 104029.51, flops:91.10, batch-reuse:1
@ 10313 train 4.0427 , allloss: 4.0548, dt: 1295.50ms, fracRes: 0.5991, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6330, norm(y): 0.9940, norm:0.7897, tok/sec: 101175.04, flops:88.60, batch-reuse:1
@ 10314 train 3.9489 , allloss: 3.9614, dt: 1300.48ms, fracRes: 0.5995, norm(attn): 0.1631, norm(output): 0.2520, norm(x): 0.6346, norm(y): 0.9942, norm:0.8708, tok/sec: 100787.41, flops:88.26, batch-reuse:1
@ 10315 train 4.0339 , allloss: 4.0462, dt: 1270.32ms, fracRes: 0.6001, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6346, norm(y): 0.9942, norm:0.8491, tok/sec: 103179.92, flops:90.35, batch-reuse:1
@ 10316 train 3.8818 , allloss: 3.8944, dt: 1272.98ms, fracRes: 0.6007, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6336, norm(y): 0.9944, norm:0.8381, tok/sec: 102964.47, flops:90.16, batch-reuse:1
@ 10317 train 3.8477 , allloss: 3.8605, dt: 1274.94ms, fracRes: 0.6004, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6319, norm(y): 0.9945, norm:0.7969, tok/sec: 102806.31, flops:90.03, batch-reuse:1
@ 10318 train 3.9223 , allloss: 3.9346, dt: 1287.27ms, fracRes: 0.6002, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6273, norm(y): 0.9942, norm:0.8903, tok/sec: 101821.55, flops:89.16, batch-reuse:1
@ 10319 train 3.9879 , allloss: 4.0006, dt: 1264.90ms, fracRes: 0.5996, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6313, norm(y): 0.9941, norm:0.8591, tok/sec: 103622.36, flops:90.74, batch-reuse:1
@ 10320 train 4.0024 , allloss: 4.0150, dt: 1270.64ms, fracRes: 0.6001, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6307, norm(y): 0.9941, norm:0.8746, tok/sec: 103154.58, flops:90.33, batch-reuse:1
@ 10321 train 4.0904 , allloss: 4.1032, dt: 1276.12ms, fracRes: 0.5995, norm(attn): 0.1631, norm(output): 0.2500, norm(x): 0.6350, norm(y): 0.9941, norm:1.0956, tok/sec: 102711.19, flops:89.94, batch-reuse:1
@ 10322 train 3.9356 , allloss: 3.9480, dt: 1261.96ms, fracRes: 0.5992, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6327, norm(y): 0.9939, norm:0.9248, tok/sec: 103863.93, flops:90.95, batch-reuse:1
@ 10323 train 3.9706 , allloss: 3.9829, dt: 1255.93ms, fracRes: 0.5988, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6332, norm(y): 0.9939, norm:0.8812, tok/sec: 104362.37, flops:91.39, batch-reuse:1
@ 10324 train 3.8776 , allloss: 3.8901, dt: 1276.60ms, fracRes: 0.5987, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6323, norm(y): 0.9942, norm:1.0421, tok/sec: 102672.52, flops:89.91, batch-reuse:1
@ 10325 train 3.9410 , allloss: 3.9531, dt: 1263.08ms, fracRes: 0.5989, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6346, norm(y): 0.9940, norm:0.9829, tok/sec: 103771.66, flops:90.87, batch-reuse:1
@ 10326 train 4.0322 , allloss: 4.0441, dt: 1255.75ms, fracRes: 0.5995, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6351, norm(y): 0.9940, norm:0.7887, tok/sec: 104377.11, flops:91.40, batch-reuse:1
@ 10327 train 3.9891 , allloss: 4.0012, dt: 1257.35ms, fracRes: 0.5984, norm(attn): 0.1641, norm(output): 0.2539, norm(x): 0.6364, norm(y): 0.9938, norm:0.9337, tok/sec: 104244.88, flops:91.29, batch-reuse:1
@ 10328 train 3.9535 , allloss: 3.9655, dt: 1265.95ms, fracRes: 0.5991, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6330, norm(y): 0.9940, norm:0.8445, tok/sec: 103536.56, flops:90.67, batch-reuse:1
@ 10329 train 3.8615 , allloss: 3.8736, dt: 1281.65ms, fracRes: 0.5988, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6360, norm(y): 0.9940, norm:0.8110, tok/sec: 102268.22, flops:89.55, batch-reuse:1
@ 10330 train 3.9693 , allloss: 3.9814, dt: 1282.78ms, fracRes: 0.5987, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6343, norm(y): 0.9939, norm:0.8470, tok/sec: 102177.99, flops:89.48, batch-reuse:1
@ 10331 train 3.9402 , allloss: 3.9521, dt: 1279.06ms, fracRes: 0.5995, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6327, norm(y): 0.9941, norm:0.8926, tok/sec: 102475.34, flops:89.74, batch-reuse:1
@ 10332 train 3.8972 , allloss: 3.9093, dt: 1291.45ms, fracRes: 0.5991, norm(attn): 0.1631, norm(output): 0.2500, norm(x): 0.6326, norm(y): 0.9942, norm:0.8213, tok/sec: 101492.12, flops:88.88, batch-reuse:1
@ 10333 train 3.8826 , allloss: 3.8948, dt: 1322.34ms, fracRes: 0.5997, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6348, norm(y): 0.9943, norm:0.8156, tok/sec: 99121.02, flops:86.80, batch-reuse:1
@ 10334 train 3.9353 , allloss: 3.9474, dt: 1284.79ms, fracRes: 0.5993, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6319, norm(y): 0.9941, norm:0.8506, tok/sec: 102018.11, flops:89.34, batch-reuse:1
@ 10335 train 3.8856 , allloss: 3.8982, dt: 1263.68ms, fracRes: 0.5982, norm(attn): 0.1631, norm(output): 0.2539, norm(x): 0.6334, norm(y): 0.9941, norm:0.8547, tok/sec: 103722.42, flops:90.83, batch-reuse:1
@ 10336 train 3.9374 , allloss: 3.9494, dt: 1267.31ms, fracRes: 0.5983, norm(attn): 0.1631, norm(output): 0.2500, norm(x): 0.6292, norm(y): 0.9940, norm:0.8465, tok/sec: 103425.28, flops:90.57, batch-reuse:1
@ 10337 train 3.8766 , allloss: 3.8897, dt: 1283.96ms, fracRes: 0.5989, norm(attn): 0.1631, norm(output): 0.2520, norm(x): 0.6327, norm(y): 0.9943, norm:0.8542, tok/sec: 102083.90, flops:89.39, batch-reuse:1
@ 10338 train 3.8338 , allloss: 3.8463, dt: 1316.19ms, fracRes: 0.5983, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6276, norm(y): 0.9941, norm:0.8324, tok/sec: 99584.53, flops:87.20, batch-reuse:1
@ 10339 train 3.9327 , allloss: 3.9451, dt: 1282.46ms, fracRes: 0.5992, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6292, norm(y): 0.9944, norm:0.8188, tok/sec: 102203.37, flops:89.50, batch-reuse:1
@ 10340 train 3.9090 , allloss: 3.9214, dt: 1274.78ms, fracRes: 0.6003, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6341, norm(y): 0.9944, norm:0.7931, tok/sec: 102819.67, flops:90.04, batch-reuse:1
@ 10341 train 3.8792 , allloss: 3.8918, dt: 1285.17ms, fracRes: 0.6003, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6360, norm(y): 0.9940, norm:1.0484, tok/sec: 101988.10, flops:89.31, batch-reuse:1
@ 10342 train 3.9313 , allloss: 3.9437, dt: 1292.94ms, fracRes: 0.6004, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6364, norm(y): 0.9942, norm:0.9556, tok/sec: 101374.87, flops:88.77, batch-reuse:1
@ 10343 train 3.9086 , allloss: 3.9209, dt: 1269.40ms, fracRes: 0.5996, norm(attn): 0.1611, norm(output): 0.2520, norm(x): 0.6361, norm(y): 0.9941, norm:1.0787, tok/sec: 103255.28, flops:90.42, batch-reuse:1
@ 10344 train 3.9055 , allloss: 3.9175, dt: 1280.73ms, fracRes: 0.5988, norm(attn): 0.1611, norm(output): 0.2520, norm(x): 0.6319, norm(y): 0.9939, norm:1.1241, tok/sec: 102341.58, flops:89.62, batch-reuse:1
@ 10345 train 3.8708 , allloss: 3.8832, dt: 1252.19ms, fracRes: 0.5988, norm(attn): 0.1631, norm(output): 0.2500, norm(x): 0.6334, norm(y): 0.9942, norm:0.8878, tok/sec: 104674.38, flops:91.66, batch-reuse:1
@ 10346 train 3.8824 , allloss: 3.8945, dt: 1272.45ms, fracRes: 0.5977, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6324, norm(y): 0.9940, norm:0.8927, tok/sec: 103007.18, flops:90.20, batch-reuse:1
@ 10347 train 3.9506 , allloss: 3.9623, dt: 1261.76ms, fracRes: 0.5981, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6311, norm(y): 0.9939, norm:0.9378, tok/sec: 103879.92, flops:90.97, batch-reuse:1
@ 10348 train 3.8781 , allloss: 3.8902, dt: 1264.01ms, fracRes: 0.5992, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6364, norm(y): 0.9940, norm:0.7900, tok/sec: 103695.44, flops:90.80, batch-reuse:1
@ 10349 train 3.8552 , allloss: 3.8677, dt: 1263.86ms, fracRes: 0.5996, norm(attn): 0.1631, norm(output): 0.2539, norm(x): 0.6436, norm(y): 0.9942, norm:0.9114, tok/sec: 103708.00, flops:90.82, batch-reuse:1
@ 10350 train 3.8962 , allloss: 3.9080, dt: 1265.58ms, fracRes: 0.5994, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6340, norm(y): 0.9941, norm:0.8913, tok/sec: 103566.83, flops:90.69, batch-reuse:1
@ 10351 train 3.9301 , allloss: 3.9431, dt: 1271.04ms, fracRes: 0.5998, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6360, norm(y): 0.9941, norm:0.8758, tok/sec: 103122.03, flops:90.30, batch-reuse:1
@ 10352 train 3.9670 , allloss: 3.9797, dt: 1298.86ms, fracRes: 0.6000, norm(attn): 0.1631, norm(output): 0.2500, norm(x): 0.6338, norm(y): 0.9941, norm:0.8754, tok/sec: 100913.29, flops:88.37, batch-reuse:1
@ 10353 train 3.8670 , allloss: 3.8797, dt: 1267.23ms, fracRes: 0.5991, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6308, norm(y): 0.9937, norm:0.8968, tok/sec: 103431.99, flops:90.57, batch-reuse:1
@ 10354 train 3.9352 , allloss: 3.9474, dt: 1271.22ms, fracRes: 0.5988, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6288, norm(y): 0.9941, norm:0.8516, tok/sec: 103107.27, flops:90.29, batch-reuse:1
@ 10355 train 3.8567 , allloss: 3.8689, dt: 1268.06ms, fracRes: 0.5985, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6286, norm(y): 0.9942, norm:0.8226, tok/sec: 103364.20, flops:90.51, batch-reuse:1
@ 10356 train 3.9392 , allloss: 3.9514, dt: 1255.88ms, fracRes: 0.5994, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6281, norm(y): 0.9941, norm:0.8556, tok/sec: 104366.85, flops:91.39, batch-reuse:1
@ 10357 train 3.8850 , allloss: 3.8972, dt: 1253.88ms, fracRes: 0.5995, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6291, norm(y): 0.9942, norm:0.8791, tok/sec: 104533.19, flops:91.54, batch-reuse:1
@ 10358 train 3.9585 , allloss: 3.9711, dt: 1254.15ms, fracRes: 0.5986, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6333, norm(y): 0.9938, norm:0.8490, tok/sec: 104510.55, flops:91.52, batch-reuse:1
@ 10359 train 3.8554 , allloss: 3.8673, dt: 1282.41ms, fracRes: 0.5988, norm(attn): 0.1631, norm(output): 0.2500, norm(x): 0.6284, norm(y): 0.9941, norm:0.8423, tok/sec: 102207.28, flops:89.50, batch-reuse:1
@ 10360 train 3.9296 , allloss: 3.9420, dt: 1275.13ms, fracRes: 0.5993, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6329, norm(y): 0.9940, norm:0.9717, tok/sec: 102791.26, flops:90.01, batch-reuse:1
@ 10361 train 3.9056 , allloss: 3.9180, dt: 1267.94ms, fracRes: 0.5989, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6321, norm(y): 0.9938, norm:0.9976, tok/sec: 103373.91, flops:90.52, batch-reuse:1
@ 10362 train 3.8768 , allloss: 3.8907, dt: 1279.67ms, fracRes: 0.5994, norm(attn): 0.1611, norm(output): 0.2520, norm(x): 0.6373, norm(y): 0.9939, norm:0.8414, tok/sec: 102426.12, flops:89.69, batch-reuse:1
@ 10363 train 3.9720 , allloss: 3.9840, dt: 1271.77ms, fracRes: 0.5992, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6322, norm(y): 0.9939, norm:0.8642, tok/sec: 103062.39, flops:90.25, batch-reuse:1
@ 10364 train 3.9302 , allloss: 3.9421, dt: 1261.89ms, fracRes: 0.5991, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6333, norm(y): 0.9941, norm:0.8877, tok/sec: 103869.87, flops:90.96, batch-reuse:1
@ 10365 train 3.9866 , allloss: 3.9988, dt: 1253.97ms, fracRes: 0.5997, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6332, norm(y): 0.9940, norm:0.8085, tok/sec: 104525.95, flops:91.53, batch-reuse:1
@ 10366 train 3.8770 , allloss: 3.8892, dt: 1280.53ms, fracRes: 0.5985, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6347, norm(y): 0.9940, norm:0.8907, tok/sec: 102357.64, flops:89.63, batch-reuse:1
@ 10367 train 3.8443 , allloss: 3.8566, dt: 1269.28ms, fracRes: 0.5988, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6341, norm(y): 0.9939, norm:0.8645, tok/sec: 103264.73, flops:90.43, batch-reuse:1
@ 10368 train 3.9644 , allloss: 3.9767, dt: 1248.21ms, fracRes: 0.5986, norm(attn): 0.1611, norm(output): 0.2520, norm(x): 0.6338, norm(y): 0.9937, norm:0.8971, tok/sec: 105007.90, flops:91.95, batch-reuse:1
@ 10369 train 3.9328 , allloss: 3.9449, dt: 1255.83ms, fracRes: 0.5986, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6317, norm(y): 0.9938, norm:0.8050, tok/sec: 104370.85, flops:91.40, batch-reuse:1
@ 10370 train 3.7386 , allloss: 3.7507, dt: 1293.64ms, fracRes: 0.5978, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6309, norm(y): 0.9937, norm:0.8789, tok/sec: 101320.56, flops:88.72, batch-reuse:1
@ 10371 train 3.7758 , allloss: 3.7884, dt: 1294.81ms, fracRes: 0.5969, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6295, norm(y): 0.9939, norm:1.0800, tok/sec: 101229.05, flops:88.64, batch-reuse:1
@ 10372 train 3.8271 , allloss: 3.8396, dt: 1262.29ms, fracRes: 0.5976, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6259, norm(y): 0.9940, norm:0.8488, tok/sec: 103836.36, flops:90.93, batch-reuse:1
@ 10373 train 3.8537 , allloss: 3.8664, dt: 1267.54ms, fracRes: 0.5984, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6248, norm(y): 0.9942, norm:1.1030, tok/sec: 103406.31, flops:90.55, batch-reuse:1
@ 10374 train 3.7942 , allloss: 3.8064, dt: 1287.26ms, fracRes: 0.5982, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6245, norm(y): 0.9940, norm:1.1718, tok/sec: 101822.09, flops:89.16, batch-reuse:1
@ 10375 train 3.7596 , allloss: 3.7719, dt: 1273.04ms, fracRes: 0.5987, norm(attn): 0.1641, norm(output): 0.2500, norm(x): 0.6279, norm(y): 0.9938, norm:0.8679, tok/sec: 102960.21, flops:90.16, batch-reuse:1
@ 10376 train 3.8281 , allloss: 3.8404, dt: 1273.83ms, fracRes: 0.5992, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6277, norm(y): 0.9938, norm:1.0257, tok/sec: 102896.28, flops:90.10, batch-reuse:1
@ 10377 train 3.8155 , allloss: 3.8278, dt: 1281.86ms, fracRes: 0.5995, norm(attn): 0.1602, norm(output): 0.2490, norm(x): 0.6276, norm(y): 0.9940, norm:1.2347, tok/sec: 102251.10, flops:89.54, batch-reuse:1
@ 10378 train 3.8358 , allloss: 3.8484, dt: 1266.43ms, fracRes: 0.5994, norm(attn): 0.1631, norm(output): 0.2500, norm(x): 0.6325, norm(y): 0.9942, norm:0.9580, tok/sec: 103497.12, flops:90.63, batch-reuse:1
@ 10379 train 3.8055 , allloss: 3.8179, dt: 1274.93ms, fracRes: 0.5989, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6303, norm(y): 0.9939, norm:0.9247, tok/sec: 102806.85, flops:90.03, batch-reuse:1
@ 10380 train 3.7036 , allloss: 3.7161, dt: 1294.25ms, fracRes: 0.5998, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6359, norm(y): 0.9940, norm:1.0107, tok/sec: 101272.63, flops:88.68, batch-reuse:1
@ 10381 train 3.7845 , allloss: 3.7967, dt: 1237.54ms, fracRes: 0.5996, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6327, norm(y): 0.9939, norm:0.7898, tok/sec: 105913.45, flops:92.75, batch-reuse:1
@ 10382 train 3.9669 , allloss: 3.9793, dt: 1246.49ms, fracRes: 0.5985, norm(attn): 0.1641, norm(output): 0.2500, norm(x): 0.6349, norm(y): 0.9938, norm:1.0191, tok/sec: 105152.55, flops:92.08, batch-reuse:1
@ 10383 train 3.7277 , allloss: 3.7408, dt: 1265.47ms, fracRes: 0.5991, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6370, norm(y): 0.9942, norm:1.1129, tok/sec: 103576.00, flops:90.70, batch-reuse:1
@ 10384 train 4.3370 , allloss: 4.3494, dt: 1286.97ms, fracRes: 0.5971, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6273, norm(y): 0.9932, norm:1.2856, tok/sec: 101845.26, flops:89.18, batch-reuse:1
@ 10385 train 3.8450 , allloss: 3.8582, dt: 1282.67ms, fracRes: 0.5983, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6322, norm(y): 0.9939, norm:1.3094, tok/sec: 102186.96, flops:89.48, batch-reuse:1
@ 10386 train 3.7466 , allloss: 3.7594, dt: 1270.23ms, fracRes: 0.5976, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6276, norm(y): 0.9940, norm:1.1435, tok/sec: 103187.51, flops:90.36, batch-reuse:1
@ 10387 train 3.8364 , allloss: 3.8490, dt: 1253.56ms, fracRes: 0.5984, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6276, norm(y): 0.9943, norm:0.9687, tok/sec: 104559.75, flops:91.56, batch-reuse:1
@ 10388 train 3.7363 , allloss: 3.7489, dt: 1266.01ms, fracRes: 0.5980, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6292, norm(y): 0.9942, norm:1.1176, tok/sec: 103531.29, flops:90.66, batch-reuse:1
@ 10389 train 3.8087 , allloss: 3.8208, dt: 1269.62ms, fracRes: 0.5983, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6320, norm(y): 0.9939, norm:1.0026, tok/sec: 103237.25, flops:90.40, batch-reuse:1
@ 10390 train 3.7041 , allloss: 3.7160, dt: 1261.32ms, fracRes: 0.5986, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6357, norm(y): 0.9938, norm:0.8482, tok/sec: 103916.15, flops:91.00, batch-reuse:1
@ 10391 train 3.7032 , allloss: 3.7154, dt: 1263.33ms, fracRes: 0.5991, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6383, norm(y): 0.9939, norm:0.9231, tok/sec: 103750.92, flops:90.85, batch-reuse:1
@ 10392 train 3.6497 , allloss: 3.6620, dt: 1273.57ms, fracRes: 0.5993, norm(attn): 0.1650, norm(output): 0.2500, norm(x): 0.6353, norm(y): 0.9942, norm:0.9182, tok/sec: 102917.38, flops:90.12, batch-reuse:1
@ 10393 train 3.7477 , allloss: 3.7601, dt: 1301.60ms, fracRes: 0.5987, norm(attn): 0.1641, norm(output): 0.2500, norm(x): 0.6343, norm(y): 0.9941, norm:0.8731, tok/sec: 100701.01, flops:88.18, batch-reuse:1
@ 10394 train 3.7978 , allloss: 3.8098, dt: 1257.84ms, fracRes: 0.5989, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6332, norm(y): 0.9941, norm:0.8142, tok/sec: 104204.36, flops:91.25, batch-reuse:1
@ 10395 train 3.6839 , allloss: 3.6962, dt: 1259.21ms, fracRes: 0.5984, norm(attn): 0.1641, norm(output): 0.2500, norm(x): 0.6352, norm(y): 0.9941, norm:0.8963, tok/sec: 104090.41, flops:91.15, batch-reuse:1
@ 10396 train 3.7063 , allloss: 3.7185, dt: 1251.63ms, fracRes: 0.5992, norm(attn): 0.1631, norm(output): 0.2500, norm(x): 0.6331, norm(y): 0.9942, norm:0.8182, tok/sec: 104720.86, flops:91.70, batch-reuse:1
@ 10397 train 3.7103 , allloss: 3.7227, dt: 1267.66ms, fracRes: 0.5994, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6342, norm(y): 0.9941, norm:0.7775, tok/sec: 103396.41, flops:90.54, batch-reuse:1
@ 10398 train 3.7091 , allloss: 3.7215, dt: 1257.15ms, fracRes: 0.5990, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6356, norm(y): 0.9940, norm:0.8524, tok/sec: 104261.47, flops:91.30, batch-reuse:1
@ 10399 train 3.7349 , allloss: 3.7471, dt: 1283.94ms, fracRes: 0.5994, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6351, norm(y): 0.9940, norm:0.7785, tok/sec: 102086.05, flops:89.40, batch-reuse:1
@ 10400 train 3.7839 , allloss: 3.7959, dt: 1289.28ms, fracRes: 0.5998, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6335, norm(y): 0.9940, norm:0.8929, tok/sec: 101663.04, flops:89.02, batch-reuse:1
@ 10401 train 3.8298 , allloss: 3.8419, dt: 1315.04ms, fracRes: 0.5997, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6326, norm(y): 0.9936, norm:0.8347, tok/sec: 99671.59, flops:87.28, batch-reuse:1
@ 10402 train 3.7448 , allloss: 3.7580, dt: 1305.11ms, fracRes: 0.6003, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6416, norm(y): 0.9939, norm:0.9821, tok/sec: 100430.00, flops:87.95, batch-reuse:1
@ 10403 train 3.7972 , allloss: 3.8098, dt: 1269.19ms, fracRes: 0.6001, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6352, norm(y): 0.9938, norm:0.8347, tok/sec: 103272.08, flops:90.43, batch-reuse:1
@ 10404 train 3.6990 , allloss: 3.7120, dt: 1284.83ms, fracRes: 0.5989, norm(attn): 0.1631, norm(output): 0.2520, norm(x): 0.6339, norm(y): 0.9940, norm:0.9329, tok/sec: 102014.95, flops:89.33, batch-reuse:1
@ 10405 train 3.8002 , allloss: 3.8125, dt: 1267.59ms, fracRes: 0.5982, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6328, norm(y): 0.9938, norm:0.8848, tok/sec: 103402.19, flops:90.55, batch-reuse:1
@ 10406 train 3.7223 , allloss: 3.7342, dt: 1269.69ms, fracRes: 0.5976, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6295, norm(y): 0.9937, norm:0.7999, tok/sec: 103231.32, flops:90.40, batch-reuse:1
@ 10407 train 3.7347 , allloss: 3.7467, dt: 1268.48ms, fracRes: 0.5978, norm(attn): 0.1631, norm(output): 0.2500, norm(x): 0.6280, norm(y): 0.9938, norm:0.8462, tok/sec: 103329.71, flops:90.48, batch-reuse:1
@ 10408 train 3.6523 , allloss: 3.6649, dt: 1273.58ms, fracRes: 0.5981, norm(attn): 0.1650, norm(output): 0.2500, norm(x): 0.6305, norm(y): 0.9939, norm:0.8808, tok/sec: 102916.14, flops:90.12, batch-reuse:1
@ 10409 train 3.8468 , allloss: 3.8591, dt: 1267.28ms, fracRes: 0.5990, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6301, norm(y): 0.9938, norm:0.8405, tok/sec: 103427.65, flops:90.57, batch-reuse:1
@ 10410 train 3.8146 , allloss: 3.8268, dt: 1272.40ms, fracRes: 0.5990, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6333, norm(y): 0.9938, norm:0.9306, tok/sec: 103011.29, flops:90.21, batch-reuse:1
@ 10411 train 3.7746 , allloss: 3.7866, dt: 1280.80ms, fracRes: 0.5986, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6302, norm(y): 0.9939, norm:0.8556, tok/sec: 102335.65, flops:89.61, batch-reuse:1
@ 10412 train 3.7699 , allloss: 3.7823, dt: 1257.23ms, fracRes: 0.5991, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6332, norm(y): 0.9939, norm:0.8329, tok/sec: 104254.27, flops:91.29, batch-reuse:1
@ 10413 train 3.7303 , allloss: 3.7426, dt: 1299.63ms, fracRes: 0.5994, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6299, norm(y): 0.9939, norm:0.9551, tok/sec: 100852.94, flops:88.32, batch-reuse:1
@ 10414 train 3.7398 , allloss: 3.7516, dt: 1274.47ms, fracRes: 0.5994, norm(attn): 0.1631, norm(output): 0.2500, norm(x): 0.6290, norm(y): 0.9937, norm:0.8700, tok/sec: 102843.97, flops:90.06, batch-reuse:1
@ 10415 train 3.7985 , allloss: 3.8105, dt: 1262.77ms, fracRes: 0.5998, norm(attn): 0.1631, norm(output): 0.2520, norm(x): 0.6316, norm(y): 0.9936, norm:0.8292, tok/sec: 103797.41, flops:90.89, batch-reuse:1
@ 10416 train 3.8046 , allloss: 3.8171, dt: 1268.82ms, fracRes: 0.5992, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6333, norm(y): 0.9938, norm:1.0198, tok/sec: 103302.63, flops:90.46, batch-reuse:1
@ 10417 train 3.7780 , allloss: 3.7900, dt: 1284.25ms, fracRes: 0.5980, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6306, norm(y): 0.9935, norm:0.9256, tok/sec: 102061.31, flops:89.37, batch-reuse:1
@ 10418 train 3.9832 , allloss: 3.9955, dt: 1257.53ms, fracRes: 0.5979, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6294, norm(y): 0.9936, norm:0.8634, tok/sec: 104229.90, flops:91.27, batch-reuse:1
@ 10419 train 3.9873 , allloss: 4.0000, dt: 1259.93ms, fracRes: 0.5974, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6309, norm(y): 0.9934, norm:1.1305, tok/sec: 104031.18, flops:91.10, batch-reuse:1
@ 10420 train 4.0368 , allloss: 4.0490, dt: 1257.79ms, fracRes: 0.5975, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6291, norm(y): 0.9934, norm:0.9023, tok/sec: 104207.83, flops:91.25, batch-reuse:1
@ 10421 train 3.9554 , allloss: 3.9681, dt: 1256.13ms, fracRes: 0.5975, norm(attn): 0.1631, norm(output): 0.2520, norm(x): 0.6281, norm(y): 0.9934, norm:0.8678, tok/sec: 104346.29, flops:91.37, batch-reuse:1
@ 10422 train 3.9637 , allloss: 3.9763, dt: 1268.04ms, fracRes: 0.5982, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6266, norm(y): 0.9934, norm:0.9195, tok/sec: 103365.95, flops:90.52, batch-reuse:1
@ 10423 train 4.0184 , allloss: 4.0308, dt: 1284.72ms, fracRes: 0.5989, norm(attn): 0.1631, norm(output): 0.2500, norm(x): 0.6253, norm(y): 0.9935, norm:0.9514, tok/sec: 102024.08, flops:89.34, batch-reuse:1
@ 10424 train 3.9025 , allloss: 3.9149, dt: 1264.90ms, fracRes: 0.5994, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6263, norm(y): 0.9936, norm:0.8576, tok/sec: 103622.29, flops:90.74, batch-reuse:1
@ 10425 train 3.9549 , allloss: 3.9676, dt: 1280.80ms, fracRes: 0.5995, norm(attn): 0.1631, norm(output): 0.2500, norm(x): 0.6294, norm(y): 0.9935, norm:0.9926, tok/sec: 102336.34, flops:89.61, batch-reuse:1
@ 10426 train 4.0113 , allloss: 4.0233, dt: 1266.49ms, fracRes: 0.5993, norm(attn): 0.1631, norm(output): 0.2500, norm(x): 0.6286, norm(y): 0.9934, norm:0.9314, tok/sec: 103492.70, flops:90.63, batch-reuse:1
@ 10427 train 3.8897 , allloss: 3.9021, dt: 1256.16ms, fracRes: 0.5985, norm(attn): 0.1641, norm(output): 0.2539, norm(x): 0.6335, norm(y): 0.9935, norm:0.8823, tok/sec: 104343.10, flops:91.37, batch-reuse:1
@ 10428 train 3.8968 , allloss: 3.9095, dt: 1259.02ms, fracRes: 0.5980, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6353, norm(y): 0.9933, norm:0.8796, tok/sec: 104106.30, flops:91.16, batch-reuse:1
@ 10429 train 4.0279 , allloss: 4.0404, dt: 1265.52ms, fracRes: 0.5985, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6316, norm(y): 0.9934, norm:0.8930, tok/sec: 103571.49, flops:90.70, batch-reuse:1
@ 10430 train 4.0036 , allloss: 4.0167, dt: 1269.47ms, fracRes: 0.5995, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6352, norm(y): 0.9937, norm:1.0539, tok/sec: 103248.98, flops:90.41, batch-reuse:1
@ 10431 train 4.4040 , allloss: 4.4166, dt: 1264.06ms, fracRes: 0.5981, norm(attn): 0.1602, norm(output): 0.2520, norm(x): 0.6306, norm(y): 0.9930, norm:1.4418, tok/sec: 103691.47, flops:90.80, batch-reuse:1
@ 10432 train 4.0799 , allloss: 4.0923, dt: 1271.27ms, fracRes: 0.5979, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6294, norm(y): 0.9932, norm:1.1673, tok/sec: 103102.92, flops:90.29, batch-reuse:1
@ 10433 train 3.9776 , allloss: 3.9905, dt: 1252.67ms, fracRes: 0.5977, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6330, norm(y): 0.9929, norm:1.2213, tok/sec: 104633.96, flops:91.63, batch-reuse:1
@ 10434 train 4.0347 , allloss: 4.0472, dt: 1280.14ms, fracRes: 0.5982, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6309, norm(y): 0.9934, norm:1.1067, tok/sec: 102388.88, flops:89.66, batch-reuse:1
@ 10435 train 3.9718 , allloss: 3.9849, dt: 1283.33ms, fracRes: 0.5982, norm(attn): 0.1631, norm(output): 0.2520, norm(x): 0.6317, norm(y): 0.9934, norm:1.0113, tok/sec: 102134.35, flops:89.44, batch-reuse:1
@ 10436 train 3.9758 , allloss: 3.9887, dt: 1268.26ms, fracRes: 0.5986, norm(attn): 0.1641, norm(output): 0.2500, norm(x): 0.6317, norm(y): 0.9935, norm:0.9365, tok/sec: 103348.01, flops:90.50, batch-reuse:1
@ 10437 train 4.0616 , allloss: 4.0745, dt: 1262.10ms, fracRes: 0.5984, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6367, norm(y): 0.9934, norm:0.9031, tok/sec: 103851.96, flops:90.94, batch-reuse:1
@ 10438 train 4.0689 , allloss: 4.0820, dt: 1258.10ms, fracRes: 0.5993, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6380, norm(y): 0.9935, norm:1.0224, tok/sec: 104182.28, flops:91.23, batch-reuse:1
@ 10439 train 4.3224 , allloss: 4.3353, dt: 1253.27ms, fracRes: 0.5997, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6377, norm(y): 0.9929, norm:1.1633, tok/sec: 104584.14, flops:91.58, batch-reuse:1
@ 10440 train 3.9815 , allloss: 3.9939, dt: 1281.18ms, fracRes: 0.5996, norm(attn): 0.1631, norm(output): 0.2520, norm(x): 0.6396, norm(y): 0.9935, norm:0.9787, tok/sec: 102305.60, flops:89.59, batch-reuse:1
@ 10441 train 4.0052 , allloss: 4.0175, dt: 1256.62ms, fracRes: 0.5989, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6375, norm(y): 0.9936, norm:1.0869, tok/sec: 104305.60, flops:91.34, batch-reuse:1
@ 10442 train 4.0632 , allloss: 4.0768, dt: 1274.11ms, fracRes: 0.5991, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6368, norm(y): 0.9937, norm:1.0153, tok/sec: 102873.62, flops:90.08, batch-reuse:1
@ 10443 train 4.0007 , allloss: 4.0136, dt: 1270.94ms, fracRes: 0.5986, norm(attn): 0.1631, norm(output): 0.2520, norm(x): 0.6314, norm(y): 0.9934, norm:0.9261, tok/sec: 103130.29, flops:90.31, batch-reuse:1
@ 10444 train 3.9716 , allloss: 3.9843, dt: 1254.97ms, fracRes: 0.5985, norm(attn): 0.1631, norm(output): 0.2500, norm(x): 0.6323, norm(y): 0.9934, norm:0.9501, tok/sec: 104442.17, flops:91.46, batch-reuse:1
@ 10445 train 4.0240 , allloss: 4.0363, dt: 1282.21ms, fracRes: 0.5976, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6315, norm(y): 0.9935, norm:0.9184, tok/sec: 102223.15, flops:89.52, batch-reuse:1
@ 10446 train 3.9524 , allloss: 3.9653, dt: 1256.48ms, fracRes: 0.5976, norm(attn): 0.1650, norm(output): 0.2539, norm(x): 0.6343, norm(y): 0.9937, norm:0.9169, tok/sec: 104316.41, flops:91.35, batch-reuse:1
@ 10447 train 4.0857 , allloss: 4.0981, dt: 1258.50ms, fracRes: 0.5993, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6262, norm(y): 0.9937, norm:1.0493, tok/sec: 104149.08, flops:91.20, batch-reuse:1
@ 10448 train 3.9883 , allloss: 4.0012, dt: 1286.72ms, fracRes: 0.5975, norm(attn): 0.1641, norm(output): 0.2539, norm(x): 0.6314, norm(y): 0.9934, norm:1.0585, tok/sec: 101865.24, flops:89.20, batch-reuse:1
@ 10449 train 3.8849 , allloss: 3.8978, dt: 1260.75ms, fracRes: 0.5982, norm(attn): 0.1641, norm(output): 0.2539, norm(x): 0.6355, norm(y): 0.9935, norm:1.0936, tok/sec: 103963.31, flops:91.04, batch-reuse:1
@ 10450 train 4.0579 , allloss: 4.0704, dt: 1274.09ms, fracRes: 0.5982, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6333, norm(y): 0.9931, norm:0.8464, tok/sec: 102875.10, flops:90.09, batch-reuse:1
@ 10451 train 4.0728 , allloss: 4.0853, dt: 1279.17ms, fracRes: 0.5987, norm(attn): 0.1631, norm(output): 0.2520, norm(x): 0.6341, norm(y): 0.9933, norm:0.9751, tok/sec: 102466.54, flops:89.73, batch-reuse:1
@ 10452 train 4.0540 , allloss: 4.0664, dt: 1271.34ms, fracRes: 0.5992, norm(attn): 0.1641, norm(output): 0.2539, norm(x): 0.6342, norm(y): 0.9933, norm:0.9104, tok/sec: 103097.72, flops:90.28, batch-reuse:1
@ 10453 train 4.0089 , allloss: 4.0226, dt: 1287.33ms, fracRes: 0.5998, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6402, norm(y): 0.9934, norm:0.9728, tok/sec: 101816.55, flops:89.16, batch-reuse:1
@ 10454 train 3.9062 , allloss: 3.9193, dt: 1283.47ms, fracRes: 0.5996, norm(attn): 0.1631, norm(output): 0.2520, norm(x): 0.6365, norm(y): 0.9935, norm:1.0151, tok/sec: 102122.80, flops:89.43, batch-reuse:1
@ 10455 train 3.9964 , allloss: 4.0091, dt: 1268.12ms, fracRes: 0.5993, norm(attn): 0.1631, norm(output): 0.2500, norm(x): 0.6333, norm(y): 0.9933, norm:0.9022, tok/sec: 103359.32, flops:90.51, batch-reuse:1
@ 10456 train 4.0425 , allloss: 4.0548, dt: 1259.16ms, fracRes: 0.5997, norm(attn): 0.1602, norm(output): 0.2500, norm(x): 0.6319, norm(y): 0.9935, norm:0.8935, tok/sec: 104095.14, flops:91.15, batch-reuse:1
@ 10457 train 4.0222 , allloss: 4.0343, dt: 1267.48ms, fracRes: 0.5996, norm(attn): 0.1611, norm(output): 0.2500, norm(x): 0.6292, norm(y): 0.9933, norm:0.8348, tok/sec: 103411.52, flops:90.56, batch-reuse:1
@ 10458 train 4.0183 , allloss: 4.0310, dt: 1259.14ms, fracRes: 0.5994, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6318, norm(y): 0.9934, norm:0.9486, tok/sec: 104096.31, flops:91.16, batch-reuse:1
@ 10459 train 3.9693 , allloss: 3.9815, dt: 1282.98ms, fracRes: 0.5985, norm(attn): 0.1631, norm(output): 0.2500, norm(x): 0.6313, norm(y): 0.9932, norm:0.7633, tok/sec: 102161.83, flops:89.46, batch-reuse:1
@ 10460 train 3.9103 , allloss: 3.9228, dt: 1249.39ms, fracRes: 0.5985, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6326, norm(y): 0.9936, norm:1.0934, tok/sec: 104908.60, flops:91.87, batch-reuse:1
@ 10461 train 3.9155 , allloss: 3.9284, dt: 1276.00ms, fracRes: 0.5980, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6363, norm(y): 0.9933, norm:0.8307, tok/sec: 102720.96, flops:89.95, batch-reuse:1
@ 10462 train 4.0987 , allloss: 4.1113, dt: 1310.36ms, fracRes: 0.5991, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6368, norm(y): 0.9933, norm:0.8688, tok/sec: 100027.66, flops:87.59, batch-reuse:1
@ 10463 train 4.0587 , allloss: 4.0715, dt: 1273.71ms, fracRes: 0.5986, norm(attn): 0.1641, norm(output): 0.2539, norm(x): 0.6367, norm(y): 0.9933, norm:0.8421, tok/sec: 102905.34, flops:90.11, batch-reuse:1
@ 10464 train 4.0595 , allloss: 4.0716, dt: 1267.30ms, fracRes: 0.5989, norm(attn): 0.1641, norm(output): 0.2500, norm(x): 0.6311, norm(y): 0.9936, norm:0.8143, tok/sec: 103426.27, flops:90.57, batch-reuse:1
@ 10465 train 3.9497 , allloss: 3.9619, dt: 1290.22ms, fracRes: 0.5992, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6342, norm(y): 0.9936, norm:0.8689, tok/sec: 101588.84, flops:88.96, batch-reuse:1
@ 10466 train 3.9631 , allloss: 3.9754, dt: 1247.77ms, fracRes: 0.5981, norm(attn): 0.1631, norm(output): 0.2520, norm(x): 0.6321, norm(y): 0.9932, norm:0.7564, tok/sec: 105045.32, flops:91.99, batch-reuse:1
@ 10467 train 4.1317 , allloss: 4.1441, dt: 1254.64ms, fracRes: 0.5978, norm(attn): 0.1621, norm(output): 0.2539, norm(x): 0.6301, norm(y): 0.9930, norm:0.9527, tok/sec: 104469.42, flops:91.48, batch-reuse:1
@ 10468 train 3.9254 , allloss: 3.9378, dt: 1263.97ms, fracRes: 0.5987, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6272, norm(y): 0.9932, norm:0.8522, tok/sec: 103698.26, flops:90.81, batch-reuse:1
@ 10469 train 4.0141 , allloss: 4.0265, dt: 1250.30ms, fracRes: 0.5991, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6276, norm(y): 0.9932, norm:0.9691, tok/sec: 104832.17, flops:91.80, batch-reuse:1
@ 10470 train 3.9748 , allloss: 3.9872, dt: 1265.38ms, fracRes: 0.5996, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6291, norm(y): 0.9933, norm:0.8676, tok/sec: 103583.36, flops:90.71, batch-reuse:1
@ 10471 train 4.1399 , allloss: 4.1521, dt: 1255.01ms, fracRes: 0.6000, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6281, norm(y): 0.9934, norm:1.2070, tok/sec: 104438.90, flops:91.46, batch-reuse:1
@ 10472 train 4.0321 , allloss: 4.0440, dt: 1283.01ms, fracRes: 0.6003, norm(attn): 0.1641, norm(output): 0.2500, norm(x): 0.6300, norm(y): 0.9934, norm:1.0034, tok/sec: 102159.90, flops:89.46, batch-reuse:1
@ 10473 train 4.0185 , allloss: 4.0307, dt: 1263.20ms, fracRes: 0.5994, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6310, norm(y): 0.9932, norm:0.8570, tok/sec: 103761.66, flops:90.86, batch-reuse:1
@ 10474 train 4.0760 , allloss: 4.0884, dt: 1261.74ms, fracRes: 0.5986, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6324, norm(y): 0.9935, norm:0.9272, tok/sec: 103881.90, flops:90.97, batch-reuse:1
@ 10475 train 4.0091 , allloss: 4.0213, dt: 1274.21ms, fracRes: 0.5975, norm(attn): 0.1641, norm(output): 0.2539, norm(x): 0.6373, norm(y): 0.9933, norm:0.9224, tok/sec: 102865.69, flops:90.08, batch-reuse:1
@ 10476 train 4.0582 , allloss: 4.0704, dt: 1280.29ms, fracRes: 0.5983, norm(attn): 0.1631, norm(output): 0.2520, norm(x): 0.6373, norm(y): 0.9934, norm:0.8720, tok/sec: 102377.18, flops:89.65, batch-reuse:1
@ 10477 train 3.9961 , allloss: 4.0083, dt: 1256.13ms, fracRes: 0.5978, norm(attn): 0.1631, norm(output): 0.2520, norm(x): 0.6356, norm(y): 0.9930, norm:0.9351, tok/sec: 104345.93, flops:91.37, batch-reuse:1
@ 10478 train 3.9665 , allloss: 3.9788, dt: 1259.49ms, fracRes: 0.5979, norm(attn): 0.1641, norm(output): 0.2539, norm(x): 0.6351, norm(y): 0.9930, norm:1.0968, tok/sec: 104067.64, flops:91.13, batch-reuse:1
@ 10479 train 3.9964 , allloss: 4.0091, dt: 1274.91ms, fracRes: 0.5981, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6311, norm(y): 0.9934, norm:1.0409, tok/sec: 102809.00, flops:90.03, batch-reuse:1
@ 10480 train 3.8722 , allloss: 3.8872, dt: 1267.88ms, fracRes: 0.5991, norm(attn): 0.1641, norm(output): 0.2559, norm(x): 0.6359, norm(y): 0.9928, norm:1.2122, tok/sec: 103378.79, flops:90.53, batch-reuse:1
@ 10481 train 3.9889 , allloss: 4.0013, dt: 1267.79ms, fracRes: 0.5994, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6265, norm(y): 0.9931, norm:1.0120, tok/sec: 103386.61, flops:90.53, batch-reuse:1
@ 10482 train 3.9904 , allloss: 4.0034, dt: 1277.45ms, fracRes: 0.5994, norm(attn): 0.1641, norm(output): 0.2539, norm(x): 0.6325, norm(y): 0.9931, norm:0.9289, tok/sec: 102604.42, flops:89.85, batch-reuse:1
@ 10483 train 3.9271 , allloss: 3.9396, dt: 1255.97ms, fracRes: 0.5987, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6326, norm(y): 0.9932, norm:0.9947, tok/sec: 104358.84, flops:91.39, batch-reuse:1
@ 10484 train 3.9384 , allloss: 3.9504, dt: 1284.42ms, fracRes: 0.5988, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6327, norm(y): 0.9931, norm:0.8825, tok/sec: 102047.86, flops:89.36, batch-reuse:1
@ 10485 train 3.9314 , allloss: 3.9434, dt: 1308.32ms, fracRes: 0.5994, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6357, norm(y): 0.9932, norm:0.8897, tok/sec: 100183.38, flops:87.73, batch-reuse:1
@ 10486 train 3.9940 , allloss: 4.0064, dt: 1276.78ms, fracRes: 0.5993, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6413, norm(y): 0.9931, norm:1.0669, tok/sec: 102658.62, flops:89.90, batch-reuse:1
@ 10487 train 4.0587 , allloss: 4.0709, dt: 1274.60ms, fracRes: 0.5976, norm(attn): 0.1641, norm(output): 0.2539, norm(x): 0.6372, norm(y): 0.9929, norm:0.9301, tok/sec: 102834.10, flops:90.05, batch-reuse:1
@ 10488 train 3.9555 , allloss: 3.9675, dt: 1268.83ms, fracRes: 0.5976, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6368, norm(y): 0.9929, norm:0.8624, tok/sec: 103301.19, flops:90.46, batch-reuse:1
@ 10489 train 4.0211 , allloss: 4.0335, dt: 1273.81ms, fracRes: 0.5991, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6371, norm(y): 0.9931, norm:0.9346, tok/sec: 102897.75, flops:90.11, batch-reuse:1
@ 10490 train 4.0622 , allloss: 4.0749, dt: 1284.04ms, fracRes: 0.5993, norm(attn): 0.1641, norm(output): 0.2539, norm(x): 0.6374, norm(y): 0.9929, norm:1.1629, tok/sec: 102077.84, flops:89.39, batch-reuse:1
@ 10491 train 3.9530 , allloss: 3.9654, dt: 1274.49ms, fracRes: 0.6003, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6329, norm(y): 0.9932, norm:0.8602, tok/sec: 102843.06, flops:90.06, batch-reuse:1
@ 10492 train 4.0325 , allloss: 4.0449, dt: 1282.13ms, fracRes: 0.6002, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6297, norm(y): 0.9932, norm:0.9013, tok/sec: 102229.79, flops:89.52, batch-reuse:1
@ 10493 train 4.0323 , allloss: 4.0446, dt: 1285.48ms, fracRes: 0.6003, norm(attn): 0.1631, norm(output): 0.2500, norm(x): 0.6273, norm(y): 0.9934, norm:0.8730, tok/sec: 101963.49, flops:89.29, batch-reuse:1
@ 10494 train 3.9511 , allloss: 3.9642, dt: 1275.64ms, fracRes: 0.5996, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6343, norm(y): 0.9933, norm:1.0813, tok/sec: 102749.80, flops:89.98, batch-reuse:1
@ 10495 train 4.2205 , allloss: 4.2326, dt: 1280.68ms, fracRes: 0.5984, norm(attn): 0.1631, norm(output): 0.2539, norm(x): 0.6308, norm(y): 0.9929, norm:1.0378, tok/sec: 102345.69, flops:89.62, batch-reuse:1
@ 10496 train 3.9552 , allloss: 3.9671, dt: 1269.37ms, fracRes: 0.5989, norm(attn): 0.1650, norm(output): 0.2539, norm(x): 0.6337, norm(y): 0.9930, norm:0.9683, tok/sec: 103257.79, flops:90.42, batch-reuse:1
@ 10497 train 4.1152 , allloss: 4.1284, dt: 1299.50ms, fracRes: 0.6005, norm(attn): 0.1650, norm(output): 0.2539, norm(x): 0.6460, norm(y): 0.9937, norm:1.1981, tok/sec: 100863.50, flops:88.32, batch-reuse:1
@ 10498 train 3.9772 , allloss: 3.9896, dt: 1285.32ms, fracRes: 0.5987, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6409, norm(y): 0.9933, norm:1.0143, tok/sec: 101975.80, flops:89.30, batch-reuse:1
@ 10499 train 4.0152 , allloss: 4.0273, dt: 1263.40ms, fracRes: 0.5985, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6379, norm(y): 0.9931, norm:1.0538, tok/sec: 103745.60, flops:90.85, batch-reuse:1
@ 10500 train 4.1110 , allloss: 4.1231, dt: 1277.80ms, fracRes: 0.5997, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6397, norm(y): 0.9931, norm:0.9508, tok/sec: 102576.09, flops:89.82, batch-reuse:1
@ 10501 train 3.9103 , allloss: 3.9228, dt: 1289.49ms, fracRes: 0.6001, norm(attn): 0.1641, norm(output): 0.2539, norm(x): 0.6398, norm(y): 0.9932, norm:0.9398, tok/sec: 101646.58, flops:89.01, batch-reuse:1
@ 10502 train 3.9848 , allloss: 3.9969, dt: 1288.15ms, fracRes: 0.5995, norm(attn): 0.1650, norm(output): 0.2539, norm(x): 0.6377, norm(y): 0.9932, norm:0.9266, tok/sec: 101752.18, flops:89.10, batch-reuse:1
@ 10503 train 3.9265 , allloss: 3.9388, dt: 1271.04ms, fracRes: 0.5991, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6361, norm(y): 0.9936, norm:0.9046, tok/sec: 103121.84, flops:90.30, batch-reuse:1
@ 10504 train 4.1258 , allloss: 4.1381, dt: 1260.66ms, fracRes: 0.5991, norm(attn): 0.1631, norm(output): 0.2520, norm(x): 0.6351, norm(y): 0.9933, norm:0.9728, tok/sec: 103970.73, flops:91.05, batch-reuse:1
@ 10505 train 4.0512 , allloss: 4.0634, dt: 1252.56ms, fracRes: 0.5979, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6356, norm(y): 0.9931, norm:0.8297, tok/sec: 104643.14, flops:91.63, batch-reuse:1
@ 10506 train 4.0385 , allloss: 4.0505, dt: 1288.58ms, fracRes: 0.5984, norm(attn): 0.1641, norm(output): 0.2539, norm(x): 0.6359, norm(y): 0.9929, norm:0.8415, tok/sec: 101718.55, flops:89.07, batch-reuse:1
@ 10507 train 3.9948 , allloss: 4.0068, dt: 1300.34ms, fracRes: 0.5986, norm(attn): 0.1641, norm(output): 0.2539, norm(x): 0.6356, norm(y): 0.9930, norm:0.8304, tok/sec: 100798.24, flops:88.27, batch-reuse:1
@ 10508 train 3.9683 , allloss: 3.9810, dt: 1267.41ms, fracRes: 0.5983, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6376, norm(y): 0.9930, norm:0.9345, tok/sec: 103417.26, flops:90.56, batch-reuse:1
@ 10509 train 4.0079 , allloss: 4.0206, dt: 1264.20ms, fracRes: 0.5982, norm(attn): 0.1650, norm(output): 0.2539, norm(x): 0.6379, norm(y): 0.9930, norm:0.8447, tok/sec: 103679.88, flops:90.79, batch-reuse:1
@ 10510 train 3.8908 , allloss: 3.9032, dt: 1244.86ms, fracRes: 0.5986, norm(attn): 0.1650, norm(output): 0.2539, norm(x): 0.6377, norm(y): 0.9932, norm:0.8507, tok/sec: 105290.26, flops:92.20, batch-reuse:1
@ 10511 train 3.9440 , allloss: 3.9563, dt: 1266.99ms, fracRes: 0.5983, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6371, norm(y): 0.9931, norm:0.7596, tok/sec: 103451.86, flops:90.59, batch-reuse:1
@ 10512 train 3.9773 , allloss: 3.9892, dt: 1289.40ms, fracRes: 0.5981, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6313, norm(y): 0.9929, norm:0.8270, tok/sec: 101653.68, flops:89.02, batch-reuse:1
@ 10513 train 4.0063 , allloss: 4.0191, dt: 1300.47ms, fracRes: 0.5987, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6311, norm(y): 0.9930, norm:0.7834, tok/sec: 100788.17, flops:88.26, batch-reuse:1
@ 10514 train 3.9072 , allloss: 3.9199, dt: 1255.76ms, fracRes: 0.5991, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6308, norm(y): 0.9932, norm:0.8327, tok/sec: 104376.62, flops:91.40, batch-reuse:1
@ 10515 train 3.9198 , allloss: 3.9320, dt: 1265.51ms, fracRes: 0.5995, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6325, norm(y): 0.9932, norm:0.8534, tok/sec: 103572.19, flops:90.70, batch-reuse:1
@ 10516 train 3.8968 , allloss: 3.9088, dt: 1278.78ms, fracRes: 0.6002, norm(attn): 0.1641, norm(output): 0.2500, norm(x): 0.6323, norm(y): 0.9932, norm:0.8606, tok/sec: 102497.54, flops:89.76, batch-reuse:1
@ 10517 train 3.8732 , allloss: 3.8850, dt: 1251.13ms, fracRes: 0.6003, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6314, norm(y): 0.9932, norm:0.7820, tok/sec: 104763.26, flops:91.74, batch-reuse:1
@ 10518 train 3.8858 , allloss: 3.8979, dt: 1287.05ms, fracRes: 0.5998, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6350, norm(y): 0.9930, norm:0.8328, tok/sec: 101839.43, flops:89.18, batch-reuse:1
@ 10519 train 3.9418 , allloss: 3.9539, dt: 1314.14ms, fracRes: 0.5995, norm(attn): 0.1641, norm(output): 0.2500, norm(x): 0.6333, norm(y): 0.9929, norm:0.7916, tok/sec: 99739.75, flops:87.34, batch-reuse:1
@ 10520 train 4.0171 , allloss: 4.0294, dt: 1280.91ms, fracRes: 0.5987, norm(attn): 0.1631, norm(output): 0.2520, norm(x): 0.6307, norm(y): 0.9927, norm:0.9658, tok/sec: 102327.14, flops:89.61, batch-reuse:1
@ 10521 train 3.9242 , allloss: 3.9361, dt: 1257.93ms, fracRes: 0.5988, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6300, norm(y): 0.9930, norm:0.8955, tok/sec: 104196.36, flops:91.24, batch-reuse:1
@ 10522 train 3.9291 , allloss: 3.9420, dt: 1262.97ms, fracRes: 0.5978, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6298, norm(y): 0.9930, norm:0.8905, tok/sec: 103780.99, flops:90.88, batch-reuse:1
@ 10523 train 3.8529 , allloss: 3.8652, dt: 1272.12ms, fracRes: 0.5968, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6296, norm(y): 0.9931, norm:0.8491, tok/sec: 103034.32, flops:90.23, batch-reuse:1
@ 10524 train 3.9327 , allloss: 3.9447, dt: 1250.46ms, fracRes: 0.5974, norm(attn): 0.1631, norm(output): 0.2500, norm(x): 0.6297, norm(y): 0.9931, norm:0.9132, tok/sec: 104818.95, flops:91.79, batch-reuse:1
@ 10525 train 3.9197 , allloss: 3.9318, dt: 1264.97ms, fracRes: 0.5994, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6335, norm(y): 0.9934, norm:0.8570, tok/sec: 103616.99, flops:90.74, batch-reuse:1
@ 10526 train 3.8710 , allloss: 3.8835, dt: 1268.38ms, fracRes: 0.5992, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6369, norm(y): 0.9935, norm:1.0328, tok/sec: 103337.89, flops:90.49, batch-reuse:1
@ 10527 train 3.8897 , allloss: 3.9015, dt: 1267.35ms, fracRes: 0.5984, norm(attn): 0.1650, norm(output): 0.2500, norm(x): 0.6322, norm(y): 0.9931, norm:0.9380, tok/sec: 103421.87, flops:90.57, batch-reuse:1
@ 10528 train 3.9281 , allloss: 3.9402, dt: 1269.03ms, fracRes: 0.5985, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6305, norm(y): 0.9934, norm:0.8370, tok/sec: 103284.89, flops:90.45, batch-reuse:1
@ 10529 train 3.8556 , allloss: 3.8676, dt: 1265.49ms, fracRes: 0.5980, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6300, norm(y): 0.9932, norm:0.8659, tok/sec: 103574.32, flops:90.70, batch-reuse:1
@ 10530 train 3.8883 , allloss: 3.9006, dt: 1268.07ms, fracRes: 0.5978, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6312, norm(y): 0.9931, norm:0.8550, tok/sec: 103363.26, flops:90.51, batch-reuse:1
@ 10531 train 3.8006 , allloss: 3.8131, dt: 1282.66ms, fracRes: 0.5983, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6341, norm(y): 0.9933, norm:0.8416, tok/sec: 102187.36, flops:89.48, batch-reuse:1
@ 10532 train 3.9994 , allloss: 4.0115, dt: 1268.41ms, fracRes: 0.5986, norm(attn): 0.1641, norm(output): 0.2500, norm(x): 0.6300, norm(y): 0.9930, norm:0.7875, tok/sec: 103335.50, flops:90.49, batch-reuse:1
@ 10533 train 4.0744 , allloss: 4.0872, dt: 1264.46ms, fracRes: 0.5993, norm(attn): 0.1650, norm(output): 0.2539, norm(x): 0.6392, norm(y): 0.9927, norm:1.0034, tok/sec: 103658.10, flops:90.77, batch-reuse:1
@ 10534 train 3.9322 , allloss: 3.9455, dt: 1261.94ms, fracRes: 0.5998, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6363, norm(y): 0.9928, norm:0.9366, tok/sec: 103865.77, flops:90.95, batch-reuse:1
@ 10535 train 3.9181 , allloss: 3.9300, dt: 1271.22ms, fracRes: 0.5994, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6361, norm(y): 0.9929, norm:0.8266, tok/sec: 103106.94, flops:90.29, batch-reuse:1
@ 10536 train 3.8931 , allloss: 3.9055, dt: 1262.18ms, fracRes: 0.5991, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6392, norm(y): 0.9931, norm:0.8647, tok/sec: 103845.54, flops:90.94, batch-reuse:1
@ 10537 train 4.0381 , allloss: 4.0507, dt: 1294.85ms, fracRes: 0.5992, norm(attn): 0.1631, norm(output): 0.2539, norm(x): 0.6379, norm(y): 0.9929, norm:0.8753, tok/sec: 101225.28, flops:88.64, batch-reuse:1
@ 10538 train 3.9117 , allloss: 3.9236, dt: 1310.43ms, fracRes: 0.5988, norm(attn): 0.1631, norm(output): 0.2500, norm(x): 0.6319, norm(y): 0.9929, norm:0.8912, tok/sec: 100022.45, flops:87.59, batch-reuse:1
@ 10539 train 3.8585 , allloss: 3.8704, dt: 1248.51ms, fracRes: 0.5986, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6312, norm(y): 0.9927, norm:0.8491, tok/sec: 104982.69, flops:91.93, batch-reuse:1
@ 10540 train 3.9688 , allloss: 3.9808, dt: 1267.40ms, fracRes: 0.5985, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6279, norm(y): 0.9928, norm:0.9181, tok/sec: 103418.00, flops:90.56, batch-reuse:1
@ 10541 train 3.8694 , allloss: 3.8820, dt: 1275.95ms, fracRes: 0.5982, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6297, norm(y): 0.9930, norm:0.8938, tok/sec: 102724.90, flops:89.95, batch-reuse:1
@ 10542 train 3.8784 , allloss: 3.8911, dt: 1286.31ms, fracRes: 0.5980, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6278, norm(y): 0.9932, norm:0.8644, tok/sec: 101897.32, flops:89.23, batch-reuse:1
@ 10543 train 3.8386 , allloss: 3.8511, dt: 1270.98ms, fracRes: 0.5987, norm(attn): 0.1631, norm(output): 0.2520, norm(x): 0.6272, norm(y): 0.9933, norm:0.8419, tok/sec: 103127.10, flops:90.31, batch-reuse:1
@ 10544 train 4.0007 , allloss: 4.0128, dt: 1274.78ms, fracRes: 0.5983, norm(attn): 0.1641, norm(output): 0.2500, norm(x): 0.6283, norm(y): 0.9929, norm:0.8274, tok/sec: 102819.42, flops:90.04, batch-reuse:1
@ 10545 train 3.9267 , allloss: 3.9389, dt: 1286.85ms, fracRes: 0.5986, norm(attn): 0.1621, norm(output): 0.2539, norm(x): 0.6338, norm(y): 0.9928, norm:1.0040, tok/sec: 101854.62, flops:89.19, batch-reuse:1
@ 10546 train 4.1548 , allloss: 4.1677, dt: 1279.45ms, fracRes: 0.5991, norm(attn): 0.1641, norm(output): 0.2539, norm(x): 0.6341, norm(y): 0.9929, norm:0.9996, tok/sec: 102443.89, flops:89.71, batch-reuse:1
@ 10547 train 3.9672 , allloss: 3.9799, dt: 1282.54ms, fracRes: 0.5994, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6334, norm(y): 0.9930, norm:0.9956, tok/sec: 102197.06, flops:89.49, batch-reuse:1
@ 10548 train 3.8566 , allloss: 3.8686, dt: 1279.99ms, fracRes: 0.5985, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6292, norm(y): 0.9929, norm:0.9551, tok/sec: 102400.63, flops:89.67, batch-reuse:1
@ 10549 train 3.9037 , allloss: 3.9159, dt: 1309.78ms, fracRes: 0.5981, norm(attn): 0.1641, norm(output): 0.2539, norm(x): 0.6297, norm(y): 0.9928, norm:0.8641, tok/sec: 100071.92, flops:87.63, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8945, 0.1055, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7227, 0.0723, 0.2031, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8555, 0.0398, 0.0933, 0.0104, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7344, 0.0403, 0.0601, 0.0547, 0.1099, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9141, 0.0452, 0.0182, 0.0033, 0.0064, 0.0145, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6367, 0.0430, 0.0264, 0.0305, 0.0840, 0.0664, 0.1123, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4160, 0.0486, 0.2969, 0.0127, 0.0913, 0.0356, 0.0364, 0.0620, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8125, 0.0309, 0.0396, 0.0053, 0.0159, 0.0082, 0.0430, 0.0148, 0.0298, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4512, 0.0309, 0.1670, 0.0105, 0.0219, 0.0114, 0.0339, 0.0811, 0.0253, 0.1660, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5352, 0.0430, 0.0815, 0.0153, 0.0266, 0.0106, 0.0300, 0.0212, 0.0513, 0.0669, 0.1206, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1709, 0.0471, 0.0398, 0.0625, 0.1035, 0.0242, 0.0427, 0.0757, 0.1318, 0.0776, 0.1777, 0.0459, 0.0000, 0.0000, 0.0000],
        [0.1128, 0.0522, 0.1050, 0.0342, 0.0398, 0.0317, 0.0520, 0.1011, 0.0249, 0.1328, 0.0510, 0.1050, 0.1572, 0.0000, 0.0000],
        [0.6367, 0.0359, 0.0425, 0.0038, 0.0175, 0.0080, 0.0405, 0.0125, 0.0303, 0.0208, 0.0430, 0.0156, 0.0718, 0.0229, 0.0000],
        [0.1895, 0.0820, 0.0525, 0.0679, 0.0299, 0.0055, 0.0128, 0.1030, 0.0201, 0.0791, 0.0420, 0.0874, 0.1377, 0.0287, 0.0610]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0020, -0.0019, -0.0135,  ..., -0.0341,  0.0157, -0.0018],
        [-0.0448,  0.0007,  0.0019,  ...,  0.0056,  0.0049,  0.0074],
        [ 0.0342,  0.0369, -0.0058,  ..., -0.0201,  0.0220, -0.0050],
        ...,
        [ 0.0308,  0.0196,  0.0025,  ..., -0.0358,  0.0109,  0.0144],
        [-0.0473,  0.0041, -0.0274,  ...,  0.0102, -0.0021, -0.0136],
        [-0.0209, -0.0009, -0.0143,  ...,  0.0133, -0.0354, -0.0028]], device='cuda:0', requires_grad=True)
K: tensor([     1.4375,      0.2129,      0.5156,      0.5664,      0.8398,      0.2021,     -0.3223,     -1.0156,     -0.9180,     -0.3164,     -0.4141,     -0.7500,      0.0515,     -0.9453,     -0.1660,     -0.7305,      0.6484,      0.4961,     -1.6562,      0.3066,      1.6719,      1.0078,
            -1.1172,      0.8828,     -0.5938,     -0.1328,     -0.7422,      0.6211,      0.5039,      0.0009,      1.6406,      0.2715,      1.2109,      0.7852,      0.4336,      1.7969,     -1.8984,      0.6094,     -0.2676,     -2.3281,      0.4082,      0.7148,      0.5469,      1.7891,
            -0.1001,      0.1943,      0.2559,      0.4531,      1.3281,     -0.3516,      0.3320,      0.7383,     -1.3828,     -0.2559,      1.6406,     -0.7148,     -0.7148,      0.7383,      0.3398,     -0.4160,      1.2734,     -0.4512,      0.4727,     -0.1006], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[-0.0387,  0.0077, -0.0087,  ...,  0.0073, -0.0041, -0.0092],
        [ 0.0179, -0.0178,  0.0117,  ...,  0.0028,  0.0440,  0.0124],
        [-0.0512,  0.0395,  0.0066,  ..., -0.0203, -0.0382, -0.0441],
        ...,
        [ 0.0058,  0.0051,  0.0350,  ...,  0.0212,  0.0156,  0.0222],
        [ 0.0111, -0.0116,  0.0214,  ...,  0.0267,  0.0062,  0.0078],
        [ 0.0050, -0.0088,  0.0379,  ..., -0.0223,  0.0221,  0.0043]], device='cuda:0', requires_grad=True)
Q: tensor([-0.0898,  0.0165, -1.1797, -0.3828,  0.0084, -0.0596, -2.1719, -0.5469,  0.3926,  0.7734, -1.1953, -0.1875, -0.1562, -0.4414, -0.0259,  0.2949,  0.7656, -1.1094,  0.6875,  0.4727, -0.4004,  0.2988,  1.1406,  0.3203,  0.8359,  0.2314, -1.3047, -2.2500,  0.1021,  0.0623,  0.7539,  0.3027,
        -0.1992, -1.4141, -0.1162, -0.2930,  0.9258,  0.6172, -0.2217,  0.9609,  1.8516,  0.5000,  0.4727,  0.1328, -0.5273,  1.4375, -2.0469,  0.5703, -0.3086,  0.3555, -1.4375, -0.4180, -0.4844, -1.0156, -0.5391, -0.1050,  0.2168, -1.3672,  0.2988, -0.1260, -1.4453, -0.1504,  0.7109,  1.5391],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -2.1406, -1.9844, -3.7031, -3.8750, -3.5625, -2.0625, -1.9062, -3.7812, -2.8281, -2.7031, -2.1094, -0.1475, -3.8125, -2.9688],
        [ 0.0000, -2.2969, -1.2734, -2.2500, -1.7891, -3.3750, -2.8281, -1.5312, -1.7812, -1.2344, -0.7695, -1.2266, -0.5625, -1.4297, -0.9727],
        [ 0.0000, -3.0781, -2.2188, -4.4062, -2.3750, -3.7969, -3.4375, -3.7969, -2.3125, -2.5312, -0.5859, -2.5781, -2.4688, -2.4219, -1.3594],
        [ 0.0000, -2.9062, -2.5000, -2.5938, -1.8984, -3.6562, -3.0469, -2.9844, -1.3750, -1.6797, -0.7539, -1.8516, -1.7344, -0.9805, -1.0469],
        [ 0.0000, -3.0000, -3.9219, -5.6250, -4.9688, -4.1562, -2.5000, -3.9062, -4.0312, -4.9688, -3.5938, -4.0312, -2.5000, -3.8125, -3.8594],
        [ 0.0000, -2.7031, -3.1875, -3.0312, -2.0312, -2.2656, -1.7344, -3.3594, -0.5234, -1.9141,  0.0118, -1.9141, -2.6719, -0.1465, -1.1953],
        [ 0.0000, -2.1562, -0.3379, -3.4844, -1.5156, -2.4531, -2.4375, -1.9062, -1.6719,  0.0635, -0.5078, -1.3359, -0.2969, -2.1562, -0.9062],
        [ 0.0000, -3.2656, -3.0156, -5.0312, -3.9375, -4.5938, -2.9375, -4.0000, -3.2969, -3.5000, -2.7656, -3.8281, -2.1875, -3.5781, -3.0000],
        [ 0.0000, -2.6875, -0.9922, -3.7656, -3.0312, -3.6719, -2.5938, -1.7188, -2.8750, -1.0000, -1.9688, -1.9453, -0.0708, -3.0781, -1.8359],
        [ 0.0000, -2.5156, -1.8828, -3.5469, -3.0000, -3.9219, -2.8750, -3.2188, -2.3438, -2.0781, -1.4844, -2.0312, -1.6562, -2.4219, -1.4062],
        [ 0.0000, -1.2891, -1.4531, -1.0078, -0.5000, -1.9609, -1.3906, -0.8125, -0.2598, -0.7852,  0.0410, -1.3203, -0.9375,  0.1357, -0.0527],
        [ 0.0000, -0.7695, -0.0679, -1.1953, -1.0391, -1.2656, -0.7734, -0.1060, -1.5078,  0.1660, -0.7930, -0.0708,  0.3359, -1.3438, -0.6797],
        [ 0.0000, -2.8750, -2.7031, -5.1250, -3.5938, -4.3750, -2.7500, -3.9375, -3.0469, -3.4219, -2.7031, -3.7031, -2.1875, -3.3125, -2.9844],
        [ 0.0000, -0.8359, -1.2891, -1.0312, -1.8438, -3.5469, -2.7031, -0.6094, -2.2344, -0.8789, -1.5078, -0.7773, -0.3184, -1.8906, -1.1328]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8766],
        [0.8346],
        [0.8468],
        [0.6698],
        [0.7598],
        [0.6621],
        [0.5632],
        [0.5890],
        [0.5865],
        [0.4403],
        [0.3315],
        [0.2329],
        [0.3982],
        [0.2232]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8242, 0.1777, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6641, 0.2812, 0.0559, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2500, 0.3066, 0.3809, 0.0623, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1807, 0.3379, 0.0918, 0.2031, 0.1855, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2441, 0.2207, 0.0515, 0.0398, 0.2227, 0.2207, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0693, 0.1128, 0.0410, 0.0327, 0.1924, 0.3223, 0.2295, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1289, 0.0422, 0.0231, 0.0065, 0.0562, 0.1455, 0.5781, 0.0217, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0508, 0.0204, 0.0104, 0.0031, 0.0278, 0.1553, 0.6289, 0.0166, 0.0889, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0261, 0.0349, 0.0165, 0.0108, 0.0334, 0.0679, 0.0713, 0.0991, 0.5898, 0.0496, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0325, 0.0074, 0.0026, 0.0023, 0.0181, 0.0771, 0.2354, 0.0038, 0.3750, 0.0378, 0.2080, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0087, 0.0100, 0.0157, 0.0058, 0.0089, 0.0732, 0.2656, 0.0815, 0.0415, 0.1689, 0.2852, 0.0330, 0.0000, 0.0000, 0.0000],
        [0.0391, 0.0034, 0.0088, 0.0052, 0.0181, 0.0559, 0.1836, 0.0344, 0.1650, 0.0605, 0.2852, 0.0366, 0.1040, 0.0000, 0.0000],
        [0.0354, 0.0059, 0.0035, 0.0012, 0.0094, 0.0732, 0.3223, 0.0056, 0.0234, 0.0227, 0.2734, 0.0091, 0.0269, 0.1875, 0.0000],
        [0.0126, 0.0044, 0.0024, 0.0011, 0.0030, 0.0265, 0.0737, 0.0178, 0.0527, 0.0300, 0.0884, 0.0444, 0.0947, 0.4414, 0.1064]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0344, -0.0242, -0.0170,  ..., -0.0156, -0.0210,  0.0048],
        [-0.0245,  0.0167, -0.0190,  ...,  0.0136, -0.0045, -0.0575],
        [ 0.0248,  0.0152,  0.0144,  ...,  0.0140,  0.0308,  0.0208],
        ...,
        [ 0.0109, -0.0172,  0.0349,  ...,  0.0292, -0.0284, -0.0138],
        [-0.0229, -0.0141,  0.0196,  ...,  0.0093,  0.0311,  0.0032],
        [ 0.0302,  0.0482,  0.0151,  ..., -0.0102, -0.0060,  0.0241]], device='cuda:0', requires_grad=True)
K: tensor([ 3.7188, -0.1533, -1.7109, -1.0781, -2.2031, -0.3652, -1.1250,  0.1934, -0.5898, -0.0236,  0.3457,  1.7891, -2.0625,  1.2891,  0.6719, -3.5625,  1.3750, -1.2109,  1.3984,  1.7188, -0.7500,  1.3047,  2.0312, -3.8438,  1.0156, -1.9531, -3.1250,  0.3984,  2.2344, -0.0413,  2.8750,  1.4688,
        -0.4629, -0.3555, -2.6719, -0.2988, -0.0618,  1.6328, -1.0078,  0.7070,  1.8906, -0.6953, -0.2852,  2.3125,  1.2578,  0.9102, -2.1406, -2.1406,  1.1719,  0.2158, -2.0000,  1.9531, -0.5664,  0.5781, -0.3379, -0.1221,  1.0625,  0.4258, -2.1562,  1.6016,  0.9297,  1.4844,  3.3281, -0.6875],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0344, -0.0055, -0.0133,  ...,  0.0035,  0.0281, -0.0101],
        [ 0.0132,  0.0050, -0.0522,  ..., -0.0120, -0.0087, -0.0169],
        [ 0.0487,  0.0048,  0.0321,  ..., -0.0200,  0.0243,  0.0063],
        ...,
        [-0.0286, -0.0083,  0.0074,  ...,  0.0089, -0.0037, -0.0378],
        [ 0.0383,  0.0120, -0.0051,  ...,  0.0076, -0.0002, -0.0097],
        [ 0.0008, -0.0342, -0.0229,  ...,  0.0105, -0.0067,  0.0175]], device='cuda:0', requires_grad=True)
Q: tensor([-1.0469, -1.5391, -2.1719, -1.7266,  0.3125, -1.7344, -0.0615,  0.3086,  0.8750,  1.2031,  1.0156, -0.3027,  0.2852, -0.6328, -0.7891,  0.3828, -2.1875, -0.9180, -1.8828,  1.1719, -2.3281, -0.2539, -1.3281,  1.8672, -0.3516, -0.1689,  2.0000, -0.8711, -1.8203,  0.2988,  1.0391, -0.6094,
        -2.0000,  0.6523, -0.9609,  0.9062,  2.7188,  1.1016,  0.9336,  1.4141,  1.7031,  0.4082, -0.6406,  1.7891,  1.5391, -1.0156,  0.7227, -2.5938,  2.1406,  1.0703, -1.3281,  2.0156, -1.1406, -2.2500, -0.5352,  1.3438,  1.0703,  1.0312,  0.2676,  0.4199, -0.6250,  0.6211,  3.0625, -1.1719],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -1.5312, -2.1562, -3.6406, -1.6094, -1.8359, -1.3125, -4.5625, -2.5156, -3.4531, -1.7969, -3.7344, -4.0625, -2.1094, -0.4160],
        [ 0.0000, -0.8594, -2.4688, -3.2344, -2.1250, -1.7344, -0.1387, -2.2969, -1.7422, -1.2969, -0.7422, -0.5859, -1.3984, -1.0234,  0.5078],
        [ 0.0000,  0.2031,  0.4199, -1.3906, -0.3555,  0.4883,  1.3438, -0.4414,  0.2021,  1.2578,  1.0000,  0.7773,  1.3203,  1.4766,  3.8906],
        [ 0.0000,  0.6289, -0.6758,  0.1177,  0.0293,  1.9297,  2.4531,  0.4043,  3.6562,  2.0781,  4.0312,  1.6875,  1.7656,  5.1875,  4.2812],
        [ 0.0000, -0.0991, -1.5547, -1.8125, -0.0923, -0.0991,  1.0391, -0.7695,  1.8047,  0.5430,  2.7031,  1.1562,  1.1562,  3.1250,  2.5156],
        [ 0.0000,  0.4883, -0.5234, -0.7461,  1.0234,  1.5391,  1.1953,  0.7773,  3.7969,  1.0391,  3.0469,  1.1484,  2.4062,  5.2188,  3.7969],
        [ 0.0000, -1.1172, -1.7188, -2.9844, -0.8320,  0.1216,  1.5000, -1.7812,  1.1094, -0.5352,  2.2031, -0.2754,  0.5000,  2.8281,  2.5312],
        [ 0.0000, -0.9141, -1.5859, -2.7969, -0.6016,  1.1172,  2.5156, -1.1172,  0.5586,  0.0197,  2.8750, -0.3613,  0.3711,  2.6250,  3.4688],
        [ 0.0000,  0.2910, -0.4590, -0.8828,  0.2490,  0.9570,  1.0000,  1.3281,  3.1250,  0.6367,  3.0469,  2.3906,  3.1406,  4.6562,  3.0000],
        [ 0.0000, -1.4844, -2.5156, -2.6406, -0.5898,  0.8672,  1.9766, -2.1406,  2.4531,  0.1533,  1.8516, -0.0820,  0.0562,  4.4062,  2.5312],
        [ 0.0000,  0.1387,  0.5898, -0.4121,  0.0157,  2.1250,  3.4219,  2.2344,  1.5625,  2.9688,  3.4844,  1.3281,  2.7500,  3.4844,  5.5000],
        [ 0.0000, -2.4219, -1.4922, -2.0156, -0.7695,  0.3594,  1.5469, -0.1260,  1.4453,  0.4375,  1.9844, -0.0620,  0.9766,  3.2344,  2.8438],
        [ 0.0000, -1.7969, -2.3125, -3.3594, -1.3281,  0.7227,  2.2031, -1.8438, -0.4160, -0.4434,  2.0469, -1.3672, -0.2793,  1.6641,  2.5312],
        [ 0.0000, -1.0625, -1.6484, -2.4531, -1.4375,  0.7383,  1.7578,  0.3398,  1.4297,  0.8672,  1.9453,  1.2578,  2.0156,  3.5469,  2.1250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7737],
        [0.5258],
        [0.3624],
        [0.5026],
        [0.4529],
        [0.2971],
        [0.2351],
        [0.2802],
        [0.2041],
        [0.3008],
        [0.1278],
        [0.1251],
        [0.2255],
        [0.1423]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0114,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9727,     0.0074,     0.0210,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9766,     0.0093,     0.0051,     0.0073,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0011,     0.0017,     0.0004,     0.0055,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9844,     0.0019,     0.0038,     0.0006,     0.0077,     0.0022,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9062,     0.0097,     0.0160,     0.0075,     0.0104,     0.0106,     0.0378,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6484,     0.0162,     0.0588,     0.0222,     0.0383,     0.0371,     0.0532,     0.1270,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9805,     0.0012,     0.0013,     0.0004,     0.0025,     0.0016,     0.0061,     0.0032,     0.0037,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9766,     0.0030,     0.0010,     0.0010,     0.0012,     0.0014,     0.0029,     0.0032,     0.0024,     0.0060,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9805,     0.0021,     0.0020,     0.0011,     0.0009,     0.0009,     0.0025,     0.0061,     0.0021,     0.0011,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7227,     0.0087,     0.0097,     0.0063,     0.0112,     0.0048,     0.0152,     0.0452,     0.0177,     0.0171,     0.0019,     0.1377,     0.0000,     0.0000,     0.0000],
        [    0.4883,     0.0025,     0.0115,     0.0055,     0.0067,     0.0071,     0.0112,     0.0466,     0.0150,     0.0262,     0.0012,     0.0615,     0.3164,     0.0000,     0.0000],
        [    0.9805,     0.0006,     0.0008,     0.0003,     0.0013,     0.0009,     0.0031,     0.0025,     0.0020,     0.0005,     0.0001,     0.0011,     0.0047,     0.0013,     0.0000],
        [    0.9805,     0.0011,     0.0006,     0.0004,     0.0008,     0.0008,     0.0020,     0.0027,     0.0016,     0.0007,     0.0001,     0.0011,     0.0046,     0.0010,     0.0004]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0058, -0.0097,  0.0397,  ..., -0.0051, -0.0071, -0.0202],
        [ 0.0477, -0.0466, -0.0110,  ..., -0.0161, -0.0182, -0.0373],
        [ 0.0540, -0.0360,  0.0418,  ..., -0.0139, -0.0153, -0.0004],
        ...,
        [ 0.0339,  0.0211, -0.0276,  ..., -0.0031,  0.0137,  0.0230],
        [ 0.0175,  0.0189, -0.0001,  ..., -0.0131, -0.0449, -0.0300],
        [ 0.0213, -0.0126,  0.0032,  ..., -0.0005, -0.0114,  0.0116]], device='cuda:0', requires_grad=True)
K: tensor([-1.1875, -0.7734, -0.7812, -0.2217, -2.4219,  2.2031, -1.7578,  2.9688, -1.9297, -1.3828,  1.7266,  0.8203, -1.8516, -1.8594, -1.7031,  0.5938,  1.6016,  2.4375, -1.8125,  1.1406,  2.7344,  0.6562, -1.9922, -0.0874,  1.9453, -1.6094, -0.0723, -2.2344,  1.9219,  0.2129,  1.6250,  2.9219,
        -0.4043,  1.8516,  2.4219, -0.8242, -1.6016,  1.8125,  1.6406, -1.8672,  2.2031, -2.0469, -0.0674,  1.4297,  0.2734,  2.9375, -1.3984, -3.0312, -0.3320,  3.0000, -1.0859, -1.0000,  1.9297, -0.1465,  2.1406, -1.6641, -2.0938, -2.4844, -2.1406, -1.8672, -3.0625, -1.5078,  1.5469,  0.6562],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0015,  0.0408,  0.0149,  ..., -0.0082,  0.0385, -0.0133],
        [-0.0130,  0.0464, -0.0002,  ...,  0.0160,  0.0197, -0.0063],
        [-0.0271, -0.0031,  0.0146,  ..., -0.0258,  0.0648, -0.0348],
        ...,
        [ 0.0268, -0.0133,  0.0154,  ..., -0.0203, -0.0123, -0.0102],
        [ 0.0040,  0.0134,  0.0009,  ...,  0.0243,  0.0159,  0.0034],
        [ 0.0084, -0.0324, -0.0177,  ...,  0.0316,  0.0225,  0.0089]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.7305,  0.9961, -1.0938,  0.7188,  0.1025, -1.8594,  0.6016,  0.1611, -0.0535,  0.4980, -0.6172,  0.4141,  0.9062,  1.2578,  0.0732, -1.5938, -0.5938, -1.7812,  1.1484, -0.0223,  0.1455,  0.5117,  1.3828,  0.3809,  0.4785,  0.1523,  0.6523,  0.2578, -1.1016, -1.3984,  0.1128, -0.5859,
        -0.8281, -1.3906, -0.5703,  0.1592,  0.7617, -1.0469,  0.3809, -0.2246, -1.7422,  1.6406, -0.2578,  0.0767,  0.2109, -0.1592,  1.1406,  0.2988, -0.8477, -0.6836,  0.5391, -0.4355, -0.1748, -1.0781,  0.0947,  0.8594, -0.4297,  1.0391,  1.3281,  2.3906,  1.4062,  0.6094, -1.7266, -0.1758],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -4.4688, -4.4688, -5.0625, -5.1250, -5.4375, -4.5312, -4.0938, -4.5625, -5.2500, -6.6250, -3.9688, -4.0312, -5.0000, -5.3438],
        [ 0.0000, -4.8750, -3.8281, -5.1250, -5.3750, -5.3438, -4.6875, -3.5156, -4.8438, -5.3125, -7.1250, -3.7656, -3.6250, -5.2812, -5.3438],
        [ 0.0000, -4.6562, -5.2500, -4.9062, -5.8750, -5.4375, -4.7500, -4.8438, -5.4688, -5.2500, -6.6875, -5.0312, -4.6250, -5.7500, -5.3750],
        [ 0.0000, -6.7812, -6.3750, -7.9062, -5.1875, -6.3750, -5.0625, -4.6875, -5.6250, -7.0938, -8.5625, -5.6875, -4.5312, -6.0000, -7.5312],
        [ 0.0000, -6.2500, -5.5625, -7.3750, -4.8438, -6.0938, -4.2812, -5.0625, -5.1562, -7.1875, -7.5625, -5.6875, -4.7812, -5.6250, -6.1562],
        [ 0.0000, -4.5312, -4.0312, -4.8125, -4.4688, -4.4688, -3.1719, -2.9531, -3.5625, -5.2500, -6.0312, -3.5156, -2.7812, -3.8281, -4.7500],
        [ 0.0000, -3.6875, -2.4062, -3.3750, -2.8281, -2.8594, -2.5000, -1.6250, -2.3906, -2.8438, -3.8906, -1.7734, -1.0469, -2.4219, -2.9531],
        [ 0.0000, -6.7500, -6.6562, -7.7188, -6.0000, -6.4375, -5.0938, -5.7188, -5.5938, -7.6250, -8.4375, -6.6250, -5.1875, -6.0938, -7.0625],
        [ 0.0000, -5.7812, -6.8750, -6.8438, -6.7188, -6.5625, -5.8125, -5.7188, -6.0000, -5.0938, -7.7500, -5.2812, -4.8125, -6.0312, -7.0312],
        [ 0.0000, -6.1250, -6.2188, -6.7500, -7.0312, -7.0312, -6.0000, -5.0938, -6.1562, -6.7500, -8.6250, -5.2500, -4.9375, -6.3438, -7.3125],
        [ 0.0000, -4.4375, -4.3125, -4.7500, -4.1562, -5.0000, -3.8594, -2.7812, -3.7031, -3.7500, -5.9375, -1.6562, -1.5000, -3.9219, -5.6562],
        [ 0.0000, -5.2812, -3.7500, -4.5000, -4.2812, -4.2500, -3.7812, -2.3438, -3.4844, -2.9219, -6.0000, -2.0781, -0.4336, -3.5469, -5.0625],
        [ 0.0000, -7.3750, -7.0938, -8.1875, -6.5938, -7.0000, -5.7500, -5.9688, -6.1875, -7.6562, -9.1250, -6.8125, -5.3438, -6.6250, -7.8125],
        [ 0.0000, -6.8125, -7.4062, -7.9062, -7.0625, -7.1250, -6.2188, -5.9062, -6.4375, -7.3125, -9.4375, -6.7500, -5.3438, -6.9062, -7.7188]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9531],
        [0.9958],
        [0.9932],
        [0.9932],
        [0.9876],
        [0.9674],
        [0.8883],
        [0.9886],
        [0.9935],
        [0.9945],
        [0.9398],
        [0.9359],
        [0.9922],
        [0.9974]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0615,     0.9375,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0359,     0.6680,     0.2969,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0732,     0.4961,     0.3867,     0.0427,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0654,     0.5508,     0.1099,     0.0281,     0.2471,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0212,     0.5469,     0.0737,     0.0349,     0.2021,     0.1221,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0067,     0.2070,     0.0146,     0.0071,     0.0576,     0.0330,     0.6758,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0120,     0.1235,     0.0287,     0.0042,     0.0168,     0.0398,     0.6719,     0.1045,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0188,     0.2402,     0.0031,     0.0009,     0.0112,     0.0110,     0.6602,     0.0227,     0.0317,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0104,     0.0840,     0.0119,     0.0039,     0.0292,     0.0342,     0.3281,     0.0859,     0.1138,     0.2988,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0239,     0.0410,     0.0073,     0.0014,     0.0143,     0.0216,     0.3945,     0.0396,     0.0214,     0.3945,     0.0400,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0150,     0.0398,     0.0195,     0.0046,     0.0106,     0.0214,     0.1807,     0.1128,     0.0361,     0.2451,     0.0737,     0.2402,     0.0000,     0.0000,     0.0000],
        [    0.0221,     0.0488,     0.0123,     0.0023,     0.0068,     0.0186,     0.1338,     0.0596,     0.0427,     0.2207,     0.0613,     0.2090,     0.1621,     0.0000,     0.0000],
        [    0.0327,     0.1533,     0.0022,     0.0006,     0.0060,     0.0064,     0.2012,     0.0119,     0.0135,     0.1406,     0.2148,     0.0894,     0.0635,     0.0640,     0.0000],
        [    0.0063,     0.0287,     0.0037,     0.0015,     0.0082,     0.0107,     0.0559,     0.0233,     0.0253,     0.0498,     0.0386,     0.1182,     0.1221,     0.1191,     0.3887]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0035,  0.0065, -0.0044,  ..., -0.0301, -0.0079, -0.0263],
        [-0.0437,  0.0136, -0.0100,  ...,  0.0055, -0.0044, -0.0008],
        [-0.0484, -0.0136,  0.0453,  ..., -0.0223, -0.0312, -0.0259],
        ...,
        [-0.0069, -0.0112, -0.0140,  ..., -0.0288, -0.0426, -0.0493],
        [-0.0253, -0.0259, -0.0257,  ..., -0.0127, -0.0151,  0.0498],
        [-0.0025,  0.0206,  0.0217,  ..., -0.0119,  0.0128, -0.0135]], device='cuda:0', requires_grad=True)
K: tensor([    -1.9766,     -1.7031,     -0.4238,      0.6641,     -0.2441,     -2.3125,     -1.4375,      0.2441,     -0.0439,     -1.8984,     -0.3457,     -2.2500,      2.8438,     -1.8438,     -0.5156,      1.8359,      2.8594,     -0.0013,      0.6836,     -0.2930,      1.0703,     -1.8125,
             1.0469,     -1.9688,     -0.9922,      1.2344,     -0.7227,      1.4688,      0.8281,      1.7266,     -0.8203,     -2.1094,     -0.4629,     -1.5391,      1.8984,     -0.9570,      2.7969,      0.1167,     -1.4453,      0.1758,     -2.5312,      1.2109,      0.6836,      1.9297,
             0.6836,      0.1729,     -2.2188,     -0.5039,      1.7422,      0.1797,      1.1953,     -0.1963,      0.0073,     -1.8594,     -1.7734,     -2.0625,      2.1250,     -0.9219,     -0.6914,      1.4531,     -0.3008,     -1.1641,      1.9609,     -0.5938], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[-0.0080, -0.0070,  0.0159,  ...,  0.0246, -0.0219, -0.0145],
        [ 0.0405, -0.0096,  0.0146,  ..., -0.0010,  0.0311,  0.0219],
        [-0.0182,  0.0104,  0.0485,  ...,  0.0214,  0.0238, -0.0107],
        ...,
        [ 0.0173,  0.0007, -0.0263,  ..., -0.0009,  0.0058, -0.0032],
        [-0.0125,  0.0402, -0.0256,  ...,  0.0045,  0.0062, -0.0380],
        [ 0.0032, -0.0138, -0.0031,  ...,  0.0128, -0.0017,  0.0007]], device='cuda:0', requires_grad=True)
Q: tensor([    -0.2520,     -0.9453,     -2.0938,      1.3125,     -2.3906,     -0.6445,     -0.1582,      0.2344,      0.4961,     -0.6094,     -0.6797,     -0.8789,     -2.4219,     -1.8906,      1.0625,     -0.2227,     -0.6289,     -0.6992,      0.9570,     -1.1641,     -0.6836,      1.7422,
            -1.2344,     -2.3281,     -0.3730,     -1.5312,      1.8281,      3.3906,     -1.9531,      1.6875,      0.7070,     -1.6406,     -1.7188,      0.5078,     -1.4844,     -1.7188,      1.7812,     -1.4141,     -1.9609,      0.6484,     -0.3379,     -0.0811,      2.4375,     -0.6602,
            -1.1016,     -1.3047,     -1.1719,     -2.8594,      1.8984,      1.2578,      0.7227,      0.2363,     -1.5703,     -0.9453,     -0.4727,     -1.5547,     -0.5273,      0.2930,     -0.3887,      1.6094,     -0.8984,      0.5430,     -0.0021,     -1.7109], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  2.7188,  1.4219,  0.9766,  2.4375,  2.2344,  4.2500,  3.2500,  3.2031,  3.5000,  3.3906,  3.4844,  3.7188,  3.7812,  4.7188],
        [ 0.0000,  2.9219,  2.1094,  0.8555,  1.8281,  2.0469,  4.2188,  3.8281,  2.8125,  4.3438,  3.2500,  4.8438,  5.2500,  3.7812,  5.4688],
        [ 0.0000,  1.9141,  1.6641, -0.5391,  1.2109,  2.2031,  3.0156,  2.8594,  2.2969,  4.5625,  3.4375,  5.6562,  5.3125,  4.0000,  6.2500],
        [ 0.0000,  2.1250,  0.5156, -0.8477,  1.3281,  1.2812,  3.5000,  2.6094,  2.7812,  3.6406,  2.4062,  3.4844,  3.2656,  3.9375,  4.5938],
        [ 0.0000,  3.2500,  1.2422,  0.5000,  2.2500,  1.7500,  3.5469,  3.0938,  3.3438,  3.8125,  3.8750,  4.4062,  4.0312,  4.8438,  6.3750],
        [ 0.0000,  3.4219,  0.7852,  0.0547,  2.1562,  1.5938,  4.6250,  2.7812,  2.3125,  2.8594,  1.7734,  3.0781,  3.2656,  2.8750,  4.9688],
        [ 0.0000,  2.3281,  0.8711, -1.0625,  0.3398,  1.2031,  4.0312,  2.1719,  1.9297,  4.1875,  2.9375,  4.5625,  4.1562,  3.2969,  6.1875],
        [ 0.0000,  2.5469, -1.7969, -3.0000, -0.5117, -0.5273,  3.5625,  0.1943,  0.5312,  2.9219,  3.5156,  2.2812,  1.6875,  1.8438,  4.8125],
        [ 0.0000,  2.0781,  0.1309, -0.9805,  1.0234,  1.1875,  3.4375,  2.1094,  2.3906,  3.3594,  3.0312,  3.8906,  3.7188,  3.9375,  6.0625],
        [ 0.0000,  0.5352, -1.1953, -2.8281, -0.5195, -0.1045,  2.7969,  0.4980, -0.1172,  2.7969,  0.5156,  2.4531,  2.1406,  1.1328,  5.3750],
        [ 0.0000,  0.9766,  0.2617, -1.1875, -0.3516,  0.3535,  2.4844,  2.0156,  0.8750,  2.7969,  1.5938,  2.7656,  3.5625,  2.5000,  4.5938],
        [ 0.0000,  0.7891, -0.5859, -2.2500, -1.1719, -0.1748,  1.7969,  0.9922,  0.6602,  2.2969,  1.0234,  2.2500,  1.9922,  2.2812,  4.5000],
        [ 0.0000,  1.5469, -2.6875, -4.0000, -1.6953, -1.6328,  1.8125, -1.0156, -0.8867,  1.4609,  1.8750,  1.0000,  0.6602,  0.6680,  3.5625],
        [ 0.0000,  1.5156, -0.5430, -1.4141,  0.2598,  0.5273,  2.1875,  1.3047,  1.3828,  2.0625,  1.8047,  2.9375,  2.9688,  2.9375,  4.1250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3710],
        [0.1169],
        [0.1356],
        [0.2850],
        [0.1282],
        [0.3140],
        [0.1011],
        [0.0866],
        [0.0885],
        [0.1082],
        [0.0933],
        [0.0871],
        [0.0875],
        [0.0911]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0095, 0.9922, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0247, 0.9062, 0.0693, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0386, 0.7812, 0.0425, 0.1367, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0013, 0.4199, 0.0737, 0.0708, 0.4336, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0022, 0.2500, 0.0349, 0.0130, 0.3613, 0.3379, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0093, 0.1943, 0.2734, 0.0297, 0.1602, 0.1465, 0.1855, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0018, 0.0605, 0.1172, 0.0055, 0.1484, 0.0435, 0.0400, 0.5820, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0217, 0.1729, 0.0972, 0.0146, 0.1396, 0.0684, 0.1367, 0.3047, 0.0437, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0103, 0.2715, 0.0400, 0.0140, 0.1299, 0.0491, 0.2393, 0.1279, 0.0269, 0.0913, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0143, 0.1631, 0.0354, 0.0114, 0.0825, 0.0500, 0.1196, 0.1475, 0.0278, 0.1670, 0.1807, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0210, 0.2988, 0.0422, 0.0294, 0.0713, 0.0486, 0.1592, 0.1641, 0.0097, 0.0571, 0.0605, 0.0369, 0.0000, 0.0000, 0.0000],
        [0.0075, 0.0625, 0.0334, 0.0021, 0.0713, 0.0156, 0.0320, 0.1089, 0.0459, 0.1328, 0.0405, 0.0967, 0.3516, 0.0000, 0.0000],
        [0.0464, 0.1025, 0.0143, 0.0037, 0.0496, 0.0171, 0.0618, 0.0459, 0.0161, 0.2070, 0.0679, 0.0432, 0.2793, 0.0454, 0.0000],
        [0.0374, 0.2197, 0.0277, 0.0151, 0.0942, 0.0532, 0.2500, 0.0649, 0.0069, 0.0349, 0.0403, 0.0405, 0.0586, 0.0056, 0.0515]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0055, -0.0271, -0.0019,  ..., -0.0022,  0.0216, -0.0102],
        [ 0.0212, -0.0471, -0.0128,  ...,  0.0272,  0.0216, -0.0021],
        [-0.0095, -0.0219, -0.0355,  ...,  0.0333,  0.0109, -0.0125],
        ...,
        [ 0.0285,  0.0161, -0.0177,  ..., -0.0152,  0.0018,  0.0166],
        [ 0.0113, -0.0020,  0.0256,  ...,  0.0345, -0.0098,  0.0109],
        [-0.0294,  0.0438, -0.0163,  ...,  0.0005,  0.0271,  0.0414]], device='cuda:0', requires_grad=True)
K: tensor([-0.3066, -1.1641, -0.3496,  0.2207, -0.7500,  0.3496,  0.2002, -0.2695, -0.9688, -3.4375, -2.0625, -1.3906,  0.2578, -0.7500, -1.6562,  1.3594,  1.8672,  0.9648, -2.4531, -0.1143,  1.7656, -0.9570, -2.3594,  0.3691,  1.0859, -1.3047, -0.6562,  0.7070, -0.4336, -1.7422,  0.0825,  0.8125,
        -2.2656,  2.1875,  3.6562,  0.8594,  0.3516, -1.1953, -0.6211, -1.9141, -1.1172, -0.5742, -2.2969,  1.1719,  0.1475, -0.0515, -0.7422,  1.8281, -1.7734, -1.8984,  0.4512,  2.2031,  1.6953, -0.2451,  0.1191,  0.1768,  0.3418, -3.2188, -0.3711,  1.2891,  0.7812, -0.6016,  1.6719, -1.6953],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0005, -0.0088, -0.0064,  ..., -0.0365, -0.0335, -0.0168],
        [ 0.0051,  0.0015, -0.0076,  ...,  0.0057, -0.0221,  0.0399],
        [ 0.0206, -0.0095, -0.0016,  ..., -0.0089, -0.0286, -0.0098],
        ...,
        [ 0.0308, -0.0488, -0.0307,  ...,  0.0138,  0.0171, -0.0068],
        [ 0.0213, -0.0054,  0.0492,  ...,  0.0188, -0.0010,  0.0049],
        [-0.0121, -0.0124, -0.0194,  ...,  0.0139,  0.0048, -0.0191]], device='cuda:0', requires_grad=True)
Q: tensor([-0.0742,  1.2578,  0.5742,  0.5859,  0.2891, -1.0234, -0.0898, -2.5469, -1.1719,  0.3008, -0.3184,  0.8711,  0.5820, -0.2100, -0.6016, -0.2617,  0.0757,  0.5273, -0.6992,  0.4844, -0.1777, -0.6250,  0.2637, -0.4922,  1.3906,  0.7969, -1.2656,  1.3203, -0.9414,  0.8633, -1.0078, -1.8594,
         0.3789,  0.3730, -0.5859, -0.3418, -0.6445, -0.2617,  1.8438, -1.1484,  0.6719,  0.1865, -0.2158,  0.0991, -0.0898,  1.2578, -0.2441,  1.2266,  1.2812, -0.9219,  0.7070,  1.5703, -0.7031, -0.0603, -0.5703,  0.8984, -2.2188,  0.5273,  0.2930,  0.4805,  0.1914, -1.0234, -0.6055, -0.8203],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      4.6562,      2.7344,      2.4375,      4.5312,      4.6875,      3.9531,      2.8906,      2.4688,      2.4375,      3.5625,      2.2031,      3.1094,      2.1719,      2.7969],
        [     0.0000,      3.6094,      1.0312,      2.5156,      3.2969,      3.5469,      3.4688,      1.4375,      0.9414,      0.2930,      1.7109,     -0.4766,      0.9414,      0.2109,      0.4238],
        [     0.0000,      3.0000,      0.0947,      1.2656,      2.9688,      2.3438,      3.1875,      1.0703,      1.1406,      0.0043,      0.9727,     -1.2656,      0.2812,      0.3984,     -0.1660],
        [     0.0000,      5.7812,      4.0312,      3.9844,      5.8125,      6.0625,      5.0625,      4.9375,      3.4844,      3.6250,      4.1562,      3.2500,      4.7188,      2.7344,      3.2969],
        [     0.0000,      4.7500,      2.7812,      1.7891,      5.1250,      5.0625,      4.4375,      3.7031,      2.7969,      2.6719,      3.1094,      2.2812,      3.0469,      1.8594,      2.8125],
        [     0.0000,      3.0469,      3.3906,      1.1641,      2.8438,      2.7656,      3.0000,      4.1562,      0.7422,      2.5156,      1.1250,      2.5781,      3.0938,     -0.0903,      1.5078],
        [     0.0000,      3.5000,      4.1562,      1.1016,      4.4062,      3.1719,      3.0781,      5.7500,      4.2500,      5.5312,      3.3750,      4.1875,      5.5312,      3.8906,      4.9375],
        [     0.0000,      2.0781,      1.5000,     -0.3984,      1.8594,      1.1484,      1.8359,      2.6406,      0.6992,      3.4375,      1.2500,      1.0547,      2.9375,      0.3438,      1.4219],
        [     0.0000,      3.2656,      1.3516,      0.3008,      2.5312,      1.5547,      3.1406,      2.5156,      0.9531,      2.1875,      2.7500,      1.7969,      3.1562,      0.7148,      1.6484],
        [     0.0000,      2.4375,      0.9023,     -0.2344,      1.7500,      1.2500,      2.1250,      2.3281,      0.6602,      2.4531,      2.5312,      2.1406,      3.0625,      0.5664,      1.3594],
        [     0.0000,      2.6562,      0.6992,      0.3398,      1.2266,      0.8398,      2.0312,      2.0625,     -0.7734,      1.0000,      1.0625,      0.5625,      3.2656,     -0.1885,      0.2637],
        [     0.0000,      2.1094,      1.4844,     -1.2969,      2.2500,      0.7305,      1.4453,      2.6719,      1.8047,      2.8594,      1.6797,      2.5469,      3.8438,      2.9844,      3.2500],
        [     0.0000,      0.7969,     -1.1719,     -2.5156,      0.0659,     -0.9922,      0.2891,     -0.0090,     -1.0625,      1.5000,      0.3809,     -0.0703,      1.7969,     -0.0204,      0.3457],
        [     0.0000,      1.7656,     -0.3027,     -0.9062,      0.9258,      0.3535,      1.8984,      0.5508,     -1.6953,     -0.0708,      0.0723,      0.0796,      0.4473,     -1.8906,      0.3184]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0777],
        [0.0376],
        [0.0126],
        [0.0195],
        [0.0040],
        [0.0058],
        [0.0034],
        [0.0067],
        [0.0040],
        [0.0118],
        [0.0070],
        [0.0110],
        [0.0115],
        [0.0059]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.1270 a:0.1396 and:0.1533 white:0.0625atoes:0.1904 are:0.4707 a:0.0874iced:0.2002)
iced
------
		( a:0.1396 and:0.1533 white:0.0625atoes:0.1904 are:0.4707 a:0.0874iced:0.2002 and:0.1367)
 and the most popular of the plant is the plant.
The leaves are
@ 10550 train 3.9534 , allloss: 3.9654, dt: 1688.37ms, fracRes: 0.5981, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6306, norm(y): 0.9929, norm:0.8525, tok/sec: 77632.13, flops:67.98, batch-reuse:1
@ 10551 train 3.9089 , allloss: 3.9214, dt: 1284.66ms, fracRes: 0.5980, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6330, norm(y): 0.9930, norm:0.9106, tok/sec: 102028.85, flops:89.35, batch-reuse:1
@ 10552 train 3.9474 , allloss: 3.9601, dt: 1262.67ms, fracRes: 0.5990, norm(attn): 0.1650, norm(output): 0.2500, norm(x): 0.6331, norm(y): 0.9932, norm:0.8168, tok/sec: 103805.76, flops:90.90, batch-reuse:1
@ 10553 train 4.0116 , allloss: 4.0242, dt: 1255.16ms, fracRes: 0.5990, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6350, norm(y): 0.9929, norm:0.9157, tok/sec: 104426.28, flops:91.44, batch-reuse:1
@ 10554 train 4.0679 , allloss: 4.0802, dt: 1244.07ms, fracRes: 0.5986, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6337, norm(y): 0.9926, norm:0.9271, tok/sec: 105357.41, flops:92.26, batch-reuse:1
@ 10555 train 4.0014 , allloss: 4.0137, dt: 1264.82ms, fracRes: 0.5997, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6363, norm(y): 0.9929, norm:1.0982, tok/sec: 103629.26, flops:90.75, batch-reuse:1
@ 10556 train 3.9293 , allloss: 3.9410, dt: 1284.23ms, fracRes: 0.6003, norm(attn): 0.1641, norm(output): 0.2500, norm(x): 0.6354, norm(y): 0.9932, norm:0.9733, tok/sec: 102063.04, flops:89.38, batch-reuse:1
@ 10557 train 3.8797 , allloss: 3.8916, dt: 1278.11ms, fracRes: 0.6002, norm(attn): 0.1631, norm(output): 0.2500, norm(x): 0.6363, norm(y): 0.9932, norm:0.8129, tok/sec: 102551.29, flops:89.80, batch-reuse:1
@ 10558 train 3.8280 , allloss: 3.8402, dt: 1266.68ms, fracRes: 0.5995, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6355, norm(y): 0.9931, norm:0.9743, tok/sec: 103476.90, flops:90.61, batch-reuse:1
@ 10559 train 3.8528 , allloss: 3.8651, dt: 1295.95ms, fracRes: 0.5983, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6344, norm(y): 0.9928, norm:0.8290, tok/sec: 101139.75, flops:88.57, batch-reuse:1
@ 10560 train 3.8781 , allloss: 3.8899, dt: 1271.54ms, fracRes: 0.5983, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6312, norm(y): 0.9928, norm:0.8567, tok/sec: 103080.96, flops:90.27, batch-reuse:1
@ 10561 train 3.9040 , allloss: 3.9166, dt: 1264.47ms, fracRes: 0.5985, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6377, norm(y): 0.9928, norm:1.2128, tok/sec: 103657.40, flops:90.77, batch-reuse:1
@ 10562 train 3.8591 , allloss: 3.8708, dt: 1267.37ms, fracRes: 0.5988, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6315, norm(y): 0.9928, norm:0.8586, tok/sec: 103420.53, flops:90.56, batch-reuse:1
@ 10563 train 3.8232 , allloss: 3.8349, dt: 1283.02ms, fracRes: 0.5991, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6332, norm(y): 0.9928, norm:1.0365, tok/sec: 102159.23, flops:89.46, batch-reuse:1
@ 10564 train 3.7769 , allloss: 3.7893, dt: 1253.97ms, fracRes: 0.5999, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6321, norm(y): 0.9929, norm:0.9986, tok/sec: 104525.73, flops:91.53, batch-reuse:1
@ 10565 train 3.7786 , allloss: 3.7908, dt: 1283.37ms, fracRes: 0.5997, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6260, norm(y): 0.9929, norm:0.8882, tok/sec: 102130.90, flops:89.43, batch-reuse:1
@ 10566 train 3.6561 , allloss: 3.6686, dt: 1282.95ms, fracRes: 0.5995, norm(attn): 0.1631, norm(output): 0.2500, norm(x): 0.6269, norm(y): 0.9931, norm:1.1155, tok/sec: 102164.61, flops:89.46, batch-reuse:1
@ 10567 train 3.5665 , allloss: 3.5789, dt: 1278.99ms, fracRes: 0.5991, norm(attn): 0.1641, norm(output): 0.2500, norm(x): 0.6248, norm(y): 0.9931, norm:1.3103, tok/sec: 102481.03, flops:89.74, batch-reuse:1
@ 10568 train 3.8503 , allloss: 3.8633, dt: 1271.12ms, fracRes: 0.5985, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6338, norm(y): 0.9930, norm:1.0828, tok/sec: 103115.09, flops:90.30, batch-reuse:1
@ 10569 train 3.7745 , allloss: 3.7872, dt: 1283.75ms, fracRes: 0.5990, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6366, norm(y): 0.9932, norm:0.9834, tok/sec: 102100.89, flops:89.41, batch-reuse:1
@ 10570 train 3.8518 , allloss: 3.8636, dt: 1266.46ms, fracRes: 0.5993, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6334, norm(y): 0.9929, norm:0.8892, tok/sec: 103494.96, flops:90.63, batch-reuse:1
@ 10571 train 3.8295 , allloss: 3.8424, dt: 1276.50ms, fracRes: 0.6008, norm(attn): 0.1650, norm(output): 0.2539, norm(x): 0.6449, norm(y): 0.9933, norm:1.1472, tok/sec: 102680.92, flops:89.92, batch-reuse:1
@ 10572 train 3.8507 , allloss: 3.8626, dt: 1285.72ms, fracRes: 0.5995, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6401, norm(y): 0.9931, norm:1.0646, tok/sec: 101944.16, flops:89.27, batch-reuse:1
@ 10573 train 3.8548 , allloss: 3.8666, dt: 1285.96ms, fracRes: 0.5992, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6384, norm(y): 0.9931, norm:0.9587, tok/sec: 101925.22, flops:89.25, batch-reuse:1
@ 10574 train 3.7367 , allloss: 3.7486, dt: 1256.57ms, fracRes: 0.5986, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6360, norm(y): 0.9931, norm:0.8679, tok/sec: 104309.26, flops:91.34, batch-reuse:1
@ 10575 train 3.8049 , allloss: 3.8170, dt: 1249.10ms, fracRes: 0.5983, norm(attn): 0.1641, norm(output): 0.2539, norm(x): 0.6356, norm(y): 0.9929, norm:0.9178, tok/sec: 104932.97, flops:91.89, batch-reuse:1
@ 10576 train 3.8362 , allloss: 3.8481, dt: 1258.70ms, fracRes: 0.5976, norm(attn): 0.1650, norm(output): 0.2539, norm(x): 0.6339, norm(y): 0.9929, norm:0.8742, tok/sec: 104132.88, flops:91.19, batch-reuse:1
@ 10577 train 3.7136 , allloss: 3.7256, dt: 1294.86ms, fracRes: 0.5981, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6333, norm(y): 0.9931, norm:0.8882, tok/sec: 101224.80, flops:88.64, batch-reuse:1
@ 10578 train 3.7321 , allloss: 3.7439, dt: 1301.90ms, fracRes: 0.5987, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6322, norm(y): 0.9929, norm:0.7911, tok/sec: 100677.83, flops:88.16, batch-reuse:1
@ 10579 train 3.7542 , allloss: 3.7665, dt: 1275.05ms, fracRes: 0.5987, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6367, norm(y): 0.9929, norm:0.8829, tok/sec: 102797.37, flops:90.02, batch-reuse:1
@ 10580 train 3.7737 , allloss: 3.7857, dt: 1268.98ms, fracRes: 0.5991, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6330, norm(y): 0.9929, norm:0.7835, tok/sec: 103289.14, flops:90.45, batch-reuse:1
@ 10581 train 3.7474 , allloss: 3.7591, dt: 1266.20ms, fracRes: 0.5994, norm(attn): 0.1660, norm(output): 0.2500, norm(x): 0.6297, norm(y): 0.9930, norm:0.8476, tok/sec: 103516.07, flops:90.65, batch-reuse:1
@ 10582 train 3.8019 , allloss: 3.8150, dt: 1290.48ms, fracRes: 0.5996, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6323, norm(y): 0.9929, norm:0.8992, tok/sec: 101568.27, flops:88.94, batch-reuse:1
@ 10583 train 3.8507 , allloss: 3.8648, dt: 1322.98ms, fracRes: 0.5991, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6335, norm(y): 0.9927, norm:1.1223, tok/sec: 99073.40, flops:86.76, batch-reuse:1
@ 10584 train 3.7132 , allloss: 3.7256, dt: 1274.77ms, fracRes: 0.5984, norm(attn): 0.1631, norm(output): 0.2520, norm(x): 0.6306, norm(y): 0.9930, norm:0.8579, tok/sec: 102820.40, flops:90.04, batch-reuse:1
@ 10585 train 3.7705 , allloss: 3.7828, dt: 1264.25ms, fracRes: 0.5972, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6301, norm(y): 0.9928, norm:0.7733, tok/sec: 103675.81, flops:90.79, batch-reuse:1
@ 10586 train 3.7410 , allloss: 3.7534, dt: 1271.49ms, fracRes: 0.5975, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6295, norm(y): 0.9929, norm:0.8448, tok/sec: 103085.75, flops:90.27, batch-reuse:1
@ 10587 train 3.6619 , allloss: 3.6739, dt: 1268.62ms, fracRes: 0.5985, norm(attn): 0.1641, norm(output): 0.2500, norm(x): 0.6280, norm(y): 0.9928, norm:0.7902, tok/sec: 103318.58, flops:90.47, batch-reuse:1
@ 10588 train 3.6994 , allloss: 3.7111, dt: 1250.43ms, fracRes: 0.5987, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6291, norm(y): 0.9927, norm:0.8402, tok/sec: 104821.83, flops:91.79, batch-reuse:1
@ 10589 train 3.7965 , allloss: 3.8083, dt: 1302.62ms, fracRes: 0.5996, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6309, norm(y): 0.9929, norm:0.8620, tok/sec: 100621.52, flops:88.11, batch-reuse:1
@ 10590 train 3.7178 , allloss: 3.7299, dt: 1274.04ms, fracRes: 0.5996, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6336, norm(y): 0.9930, norm:0.8213, tok/sec: 102878.94, flops:90.09, batch-reuse:1
@ 10591 train 3.6695 , allloss: 3.6816, dt: 1260.21ms, fracRes: 0.6001, norm(attn): 0.1641, norm(output): 0.2500, norm(x): 0.6320, norm(y): 0.9930, norm:0.9244, tok/sec: 104007.74, flops:91.08, batch-reuse:1
@ 10592 train 3.8790 , allloss: 3.8909, dt: 1282.72ms, fracRes: 0.6003, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6304, norm(y): 0.9927, norm:0.8440, tok/sec: 102183.16, flops:89.48, batch-reuse:1
@ 10593 train 3.7040 , allloss: 3.7161, dt: 1291.14ms, fracRes: 0.5992, norm(attn): 0.1631, norm(output): 0.2520, norm(x): 0.6319, norm(y): 0.9929, norm:0.8218, tok/sec: 101516.45, flops:88.90, batch-reuse:1
@ 10594 train 3.6629 , allloss: 3.6760, dt: 1294.09ms, fracRes: 0.5979, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6366, norm(y): 0.9930, norm:0.8405, tok/sec: 101284.92, flops:88.69, batch-reuse:1
@ 10595 train 3.7394 , allloss: 3.7520, dt: 1283.22ms, fracRes: 0.5979, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6332, norm(y): 0.9929, norm:0.8921, tok/sec: 102143.02, flops:89.45, batch-reuse:1
@ 10596 train 3.7757 , allloss: 3.7881, dt: 1268.47ms, fracRes: 0.5977, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6319, norm(y): 0.9929, norm:0.9470, tok/sec: 103331.11, flops:90.49, batch-reuse:1
@ 10597 train 3.7746 , allloss: 3.7863, dt: 1268.77ms, fracRes: 0.5977, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6274, norm(y): 0.9928, norm:0.9611, tok/sec: 103306.12, flops:90.46, batch-reuse:1
@ 10598 train 3.6775 , allloss: 3.6896, dt: 1268.61ms, fracRes: 0.5970, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6287, norm(y): 0.9928, norm:0.8113, tok/sec: 103319.56, flops:90.48, batch-reuse:1
@ 10599 train 3.7881 , allloss: 3.8003, dt: 1276.18ms, fracRes: 0.5977, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6309, norm(y): 0.9928, norm:0.8807, tok/sec: 102706.24, flops:89.94, batch-reuse:1
@ 10600 train 3.7511 , allloss: 3.7632, dt: 1267.43ms, fracRes: 0.5985, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6322, norm(y): 0.9931, norm:0.9978, tok/sec: 103415.92, flops:90.56, batch-reuse:1
@ 10601 train 3.6891 , allloss: 3.7017, dt: 1271.93ms, fracRes: 0.5991, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6341, norm(y): 0.9930, norm:0.9531, tok/sec: 103049.29, flops:90.24, batch-reuse:1
@ 10602 train 3.7201 , allloss: 3.7334, dt: 1258.78ms, fracRes: 0.5995, norm(attn): 0.1660, norm(output): 0.2559, norm(x): 0.6423, norm(y): 0.9929, norm:0.9142, tok/sec: 104126.41, flops:91.18, batch-reuse:1
@ 10603 train 4.0186 , allloss: 4.0310, dt: 1299.76ms, fracRes: 0.5983, norm(attn): 0.1650, norm(output): 0.2539, norm(x): 0.6379, norm(y): 0.9927, norm:0.8935, tok/sec: 100843.39, flops:88.31, batch-reuse:1
@ 10604 train 3.7777 , allloss: 3.7891, dt: 1243.81ms, fracRes: 0.5987, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6335, norm(y): 0.9928, norm:0.8913, tok/sec: 105379.63, flops:92.28, batch-reuse:1
@ 10605 train 3.7690 , allloss: 3.7804, dt: 1256.92ms, fracRes: 0.5994, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6355, norm(y): 0.9928, norm:0.8928, tok/sec: 104280.38, flops:91.32, batch-reuse:1
@ 10606 train 3.7623 , allloss: 3.7742, dt: 1293.29ms, fracRes: 0.5995, norm(attn): 0.1641, norm(output): 0.2500, norm(x): 0.6333, norm(y): 0.9930, norm:1.0283, tok/sec: 101347.36, flops:88.75, batch-reuse:1
@ 10607 train 3.9409 , allloss: 3.9527, dt: 1280.43ms, fracRes: 0.5993, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6319, norm(y): 0.9927, norm:0.9302, tok/sec: 102365.99, flops:89.64, batch-reuse:1
@ 10608 train 3.6701 , allloss: 3.6837, dt: 1256.30ms, fracRes: 0.6004, norm(attn): 0.1641, norm(output): 0.2500, norm(x): 0.6357, norm(y): 0.9931, norm:1.0720, tok/sec: 104331.51, flops:91.36, batch-reuse:1
@ 10609 train 3.7746 , allloss: 3.7862, dt: 1270.43ms, fracRes: 0.5994, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6319, norm(y): 0.9928, norm:0.9643, tok/sec: 103171.63, flops:90.35, batch-reuse:1
@ 10610 train 3.7198 , allloss: 3.7316, dt: 1267.05ms, fracRes: 0.5987, norm(attn): 0.1621, norm(output): 0.2500, norm(x): 0.6328, norm(y): 0.9929, norm:0.8458, tok/sec: 103446.86, flops:90.59, batch-reuse:1
@ 10611 train 3.8764 , allloss: 3.8884, dt: 1285.61ms, fracRes: 0.5988, norm(attn): 0.1631, norm(output): 0.2500, norm(x): 0.6318, norm(y): 0.9930, norm:1.0553, tok/sec: 101952.97, flops:89.28, batch-reuse:1
@ 10612 train 3.9500 , allloss: 3.9619, dt: 1254.12ms, fracRes: 0.5982, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6347, norm(y): 0.9926, norm:0.9262, tok/sec: 104513.27, flops:91.52, batch-reuse:1
@ 10613 train 4.0063 , allloss: 4.0181, dt: 1287.73ms, fracRes: 0.5983, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6356, norm(y): 0.9925, norm:0.8811, tok/sec: 101785.63, flops:89.13, batch-reuse:1
@ 10614 train 4.0646 , allloss: 4.0764, dt: 1256.87ms, fracRes: 0.5986, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6316, norm(y): 0.9925, norm:1.0506, tok/sec: 104284.85, flops:91.32, batch-reuse:1
@ 10615 train 3.8988 , allloss: 3.9121, dt: 1267.63ms, fracRes: 0.5989, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6310, norm(y): 0.9926, norm:0.8649, tok/sec: 103399.62, flops:90.55, batch-reuse:1
@ 10616 train 3.9622 , allloss: 3.9740, dt: 1284.30ms, fracRes: 0.5993, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6302, norm(y): 0.9925, norm:0.8720, tok/sec: 102057.18, flops:89.37, batch-reuse:1
@ 10617 train 3.9997 , allloss: 4.0122, dt: 1249.55ms, fracRes: 0.5991, norm(attn): 0.1660, norm(output): 0.2559, norm(x): 0.6348, norm(y): 0.9926, norm:1.0471, tok/sec: 104895.11, flops:91.86, batch-reuse:1
@ 10618 train 3.8852 , allloss: 3.8977, dt: 1263.66ms, fracRes: 0.5985, norm(attn): 0.1650, norm(output): 0.2539, norm(x): 0.6328, norm(y): 0.9924, norm:0.8435, tok/sec: 103724.32, flops:90.83, batch-reuse:1
@ 10619 train 4.0420 , allloss: 4.0543, dt: 1292.12ms, fracRes: 0.5973, norm(attn): 0.1641, norm(output): 0.2539, norm(x): 0.6303, norm(y): 0.9922, norm:0.8315, tok/sec: 101439.55, flops:88.83, batch-reuse:1
@ 10620 train 3.9181 , allloss: 3.9306, dt: 1276.16ms, fracRes: 0.5977, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6293, norm(y): 0.9923, norm:0.8361, tok/sec: 102708.20, flops:89.94, batch-reuse:1
@ 10621 train 4.0417 , allloss: 4.0539, dt: 1279.91ms, fracRes: 0.5979, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6267, norm(y): 0.9924, norm:0.8602, tok/sec: 102406.85, flops:89.68, batch-reuse:1
@ 10622 train 4.0503 , allloss: 4.0623, dt: 1275.18ms, fracRes: 0.5987, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6281, norm(y): 0.9925, norm:0.8319, tok/sec: 102787.09, flops:90.01, batch-reuse:1
@ 10623 train 3.9337 , allloss: 3.9457, dt: 1275.47ms, fracRes: 0.5993, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6292, norm(y): 0.9925, norm:0.8300, tok/sec: 102764.01, flops:89.99, batch-reuse:1
@ 10624 train 3.9945 , allloss: 4.0066, dt: 1264.77ms, fracRes: 0.5999, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6309, norm(y): 0.9925, norm:0.7878, tok/sec: 103632.89, flops:90.75, batch-reuse:1
@ 10625 train 3.9992 , allloss: 4.0121, dt: 1254.32ms, fracRes: 0.5994, norm(attn): 0.1631, norm(output): 0.2500, norm(x): 0.6317, norm(y): 0.9926, norm:0.8513, tok/sec: 104496.41, flops:91.51, batch-reuse:1
@ 10626 train 3.9380 , allloss: 3.9506, dt: 1251.54ms, fracRes: 0.5990, norm(attn): 0.1660, norm(output): 0.2500, norm(x): 0.6335, norm(y): 0.9927, norm:0.8106, tok/sec: 104728.22, flops:91.71, batch-reuse:1
@ 10627 train 4.1143 , allloss: 4.1261, dt: 1266.88ms, fracRes: 0.5977, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6312, norm(y): 0.9924, norm:0.9841, tok/sec: 103460.49, flops:90.60, batch-reuse:1
@ 10628 train 3.9971 , allloss: 4.0095, dt: 1253.04ms, fracRes: 0.5982, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6341, norm(y): 0.9924, norm:1.0895, tok/sec: 104603.60, flops:91.60, batch-reuse:1
@ 10629 train 3.9963 , allloss: 4.0088, dt: 1300.00ms, fracRes: 0.5990, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6306, norm(y): 0.9924, norm:0.9215, tok/sec: 100824.45, flops:88.29, batch-reuse:1
@ 10630 train 3.9952 , allloss: 4.0073, dt: 1270.01ms, fracRes: 0.5983, norm(attn): 0.1641, norm(output): 0.2500, norm(x): 0.6255, norm(y): 0.9924, norm:0.8604, tok/sec: 103205.41, flops:90.38, batch-reuse:1
@ 10631 train 3.9323 , allloss: 3.9445, dt: 1296.15ms, fracRes: 0.5985, norm(attn): 0.1650, norm(output): 0.2500, norm(x): 0.6254, norm(y): 0.9925, norm:0.9514, tok/sec: 101123.97, flops:88.55, batch-reuse:1
@ 10632 train 3.9968 , allloss: 4.0092, dt: 1271.20ms, fracRes: 0.5988, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6287, norm(y): 0.9923, norm:0.9780, tok/sec: 103108.88, flops:90.29, batch-reuse:1
@ 10633 train 3.9789 , allloss: 3.9911, dt: 1270.46ms, fracRes: 0.5992, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6305, norm(y): 0.9923, norm:0.8067, tok/sec: 103169.06, flops:90.34, batch-reuse:1
@ 10634 train 3.9628 , allloss: 3.9748, dt: 1274.07ms, fracRes: 0.5989, norm(attn): 0.1631, norm(output): 0.2520, norm(x): 0.6301, norm(y): 0.9925, norm:0.9454, tok/sec: 102876.36, flops:90.09, batch-reuse:1
@ 10635 train 4.0312 , allloss: 4.0436, dt: 1265.92ms, fracRes: 0.5987, norm(attn): 0.1641, norm(output): 0.2539, norm(x): 0.6314, norm(y): 0.9923, norm:0.9892, tok/sec: 103539.07, flops:90.67, batch-reuse:1
@ 10636 train 3.9065 , allloss: 3.9190, dt: 1275.82ms, fracRes: 0.5979, norm(attn): 0.1641, norm(output): 0.2539, norm(x): 0.6335, norm(y): 0.9924, norm:0.7695, tok/sec: 102735.76, flops:89.96, batch-reuse:1
@ 10637 train 4.0356 , allloss: 4.0480, dt: 1273.41ms, fracRes: 0.5962, norm(attn): 0.1650, norm(output): 0.2539, norm(x): 0.6305, norm(y): 0.9922, norm:0.9177, tok/sec: 102930.08, flops:90.13, batch-reuse:1
@ 10638 train 3.9265 , allloss: 3.9386, dt: 1263.36ms, fracRes: 0.5963, norm(attn): 0.1650, norm(output): 0.2539, norm(x): 0.6275, norm(y): 0.9923, norm:0.9167, tok/sec: 103748.71, flops:90.85, batch-reuse:1
@ 10639 train 3.9454 , allloss: 3.9572, dt: 1275.33ms, fracRes: 0.5969, norm(attn): 0.1631, norm(output): 0.2520, norm(x): 0.6241, norm(y): 0.9922, norm:0.7989, tok/sec: 102774.79, flops:90.00, batch-reuse:1
@ 10640 train 3.9551 , allloss: 3.9670, dt: 1250.55ms, fracRes: 0.5977, norm(attn): 0.1650, norm(output): 0.2500, norm(x): 0.6276, norm(y): 0.9923, norm:0.8472, tok/sec: 104811.24, flops:91.78, batch-reuse:1
@ 10641 train 4.0672 , allloss: 4.0789, dt: 1265.74ms, fracRes: 0.5977, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6277, norm(y): 0.9924, norm:0.8883, tok/sec: 103553.93, flops:90.68, batch-reuse:1
@ 10642 train 3.9132 , allloss: 3.9252, dt: 1249.50ms, fracRes: 0.5982, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6299, norm(y): 0.9923, norm:0.9188, tok/sec: 104899.86, flops:91.86, batch-reuse:1
@ 10643 train 4.0094 , allloss: 4.0217, dt: 1254.91ms, fracRes: 0.5987, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6316, norm(y): 0.9921, norm:1.0230, tok/sec: 104447.53, flops:91.46, batch-reuse:1
@ 10644 train 3.9405 , allloss: 3.9543, dt: 1260.55ms, fracRes: 0.5988, norm(attn): 0.1641, norm(output): 0.2539, norm(x): 0.6326, norm(y): 0.9919, norm:0.8799, tok/sec: 103979.71, flops:91.05, batch-reuse:1
@ 10645 train 3.9016 , allloss: 3.9141, dt: 1286.13ms, fracRes: 0.5990, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6286, norm(y): 0.9924, norm:0.8569, tok/sec: 101911.87, flops:89.24, batch-reuse:1
@ 10646 train 3.9391 , allloss: 3.9513, dt: 1279.72ms, fracRes: 0.5989, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6277, norm(y): 0.9924, norm:0.8876, tok/sec: 102422.74, flops:89.69, batch-reuse:1
@ 10647 train 4.0029 , allloss: 4.0154, dt: 1281.00ms, fracRes: 0.5993, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6322, norm(y): 0.9923, norm:0.8771, tok/sec: 102319.99, flops:89.60, batch-reuse:1
@ 10648 train 4.0807 , allloss: 4.0930, dt: 1308.88ms, fracRes: 0.5983, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6315, norm(y): 0.9918, norm:0.9387, tok/sec: 100140.52, flops:87.69, batch-reuse:1
@ 10649 train 4.0769 , allloss: 4.0894, dt: 1252.24ms, fracRes: 0.5982, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6314, norm(y): 0.9921, norm:0.8899, tok/sec: 104669.74, flops:91.66, batch-reuse:1
@ 10650 train 3.9810 , allloss: 3.9936, dt: 1275.64ms, fracRes: 0.5984, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6315, norm(y): 0.9924, norm:0.9091, tok/sec: 102749.90, flops:89.98, batch-reuse:1
@ 10651 train 4.0639 , allloss: 4.0761, dt: 1260.45ms, fracRes: 0.5978, norm(attn): 0.1631, norm(output): 0.2520, norm(x): 0.6288, norm(y): 0.9922, norm:0.8682, tok/sec: 103988.54, flops:91.06, batch-reuse:1
@ 10652 train 4.0212 , allloss: 4.0330, dt: 1270.61ms, fracRes: 0.5979, norm(attn): 0.1631, norm(output): 0.2520, norm(x): 0.6288, norm(y): 0.9922, norm:0.8361, tok/sec: 103156.55, flops:90.33, batch-reuse:1
@ 10653 train 3.9716 , allloss: 3.9834, dt: 1259.72ms, fracRes: 0.5980, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6281, norm(y): 0.9921, norm:0.8638, tok/sec: 104048.75, flops:91.11, batch-reuse:1
@ 10654 train 3.9487 , allloss: 3.9608, dt: 1266.56ms, fracRes: 0.5986, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6324, norm(y): 0.9922, norm:0.8622, tok/sec: 103486.54, flops:90.62, batch-reuse:1
@ 10655 train 3.9518 , allloss: 3.9637, dt: 1269.20ms, fracRes: 0.5984, norm(attn): 0.1641, norm(output): 0.2539, norm(x): 0.6341, norm(y): 0.9923, norm:0.7981, tok/sec: 103271.60, flops:90.43, batch-reuse:1
@ 10656 train 4.1428 , allloss: 4.1550, dt: 1304.69ms, fracRes: 0.5977, norm(attn): 0.1641, norm(output): 0.2559, norm(x): 0.6315, norm(y): 0.9919, norm:0.9125, tok/sec: 100462.44, flops:87.97, batch-reuse:1
@ 10657 train 3.9633 , allloss: 3.9758, dt: 1308.30ms, fracRes: 0.5992, norm(attn): 0.1641, norm(output): 0.2500, norm(x): 0.6304, norm(y): 0.9923, norm:0.9857, tok/sec: 100185.21, flops:87.73, batch-reuse:1
@ 10658 train 4.0371 , allloss: 4.0491, dt: 1272.06ms, fracRes: 0.5989, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6280, norm(y): 0.9920, norm:0.9245, tok/sec: 103039.09, flops:90.23, batch-reuse:1
@ 10659 train 3.9428 , allloss: 3.9548, dt: 1278.53ms, fracRes: 0.5983, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6303, norm(y): 0.9922, norm:0.9336, tok/sec: 102517.36, flops:89.77, batch-reuse:1
@ 10660 train 3.9398 , allloss: 3.9532, dt: 1263.19ms, fracRes: 0.6005, norm(attn): 0.1621, norm(output): 0.2539, norm(x): 0.6426, norm(y): 0.9925, norm:1.4877, tok/sec: 103762.73, flops:90.86, batch-reuse:1
@ 10661 train 3.8426 , allloss: 3.8562, dt: 1284.01ms, fracRes: 0.5993, norm(attn): 0.1631, norm(output): 0.2520, norm(x): 0.6356, norm(y): 0.9926, norm:1.0265, tok/sec: 102080.21, flops:89.39, batch-reuse:1
@ 10662 train 4.1919 , allloss: 4.2380, dt: 1253.31ms, fracRes: 0.5981, norm(attn): 0.1641, norm(output): 0.2559, norm(x): 0.6351, norm(y): 0.9920, norm:1.7088, tok/sec: 104580.43, flops:91.58, batch-reuse:1
@ 10663 train 4.0005 , allloss: 4.0131, dt: 1281.53ms, fracRes: 0.5978, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6325, norm(y): 0.9922, norm:1.0034, tok/sec: 102277.79, flops:89.56, batch-reuse:1
@ 10664 train 3.9298 , allloss: 3.9421, dt: 1271.18ms, fracRes: 0.5986, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6368, norm(y): 0.9923, norm:1.0587, tok/sec: 103110.48, flops:90.29, batch-reuse:1
@ 10665 train 3.9261 , allloss: 3.9381, dt: 1279.74ms, fracRes: 0.5986, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6319, norm(y): 0.9924, norm:1.0145, tok/sec: 102420.93, flops:89.69, batch-reuse:1
@ 10666 train 3.9424 , allloss: 3.9545, dt: 1257.95ms, fracRes: 0.5990, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6299, norm(y): 0.9923, norm:0.8874, tok/sec: 104194.89, flops:91.24, batch-reuse:1
@ 10667 train 3.9113 , allloss: 3.9242, dt: 1263.44ms, fracRes: 0.5987, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6319, norm(y): 0.9921, norm:0.9708, tok/sec: 103742.43, flops:90.85, batch-reuse:1
@ 10668 train 3.9948 , allloss: 4.0071, dt: 1259.20ms, fracRes: 0.5982, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6308, norm(y): 0.9923, norm:0.8358, tok/sec: 104091.62, flops:91.15, batch-reuse:1
@ 10669 train 3.9512 , allloss: 3.9635, dt: 1284.06ms, fracRes: 0.5982, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6331, norm(y): 0.9924, norm:0.8521, tok/sec: 102075.94, flops:89.39, batch-reuse:1
@ 10670 train 3.9941 , allloss: 4.0064, dt: 1261.70ms, fracRes: 0.5988, norm(attn): 0.1631, norm(output): 0.2520, norm(x): 0.6328, norm(y): 0.9922, norm:0.8650, tok/sec: 103885.48, flops:90.97, batch-reuse:1
@ 10671 train 3.9196 , allloss: 3.9317, dt: 1264.25ms, fracRes: 0.5987, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6307, norm(y): 0.9921, norm:0.8877, tok/sec: 103675.64, flops:90.79, batch-reuse:1
@ 10672 train 3.9802 , allloss: 3.9922, dt: 1276.25ms, fracRes: 0.5983, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6315, norm(y): 0.9922, norm:0.9459, tok/sec: 102701.02, flops:89.93, batch-reuse:1
@ 10673 train 4.0156 , allloss: 4.0279, dt: 1296.61ms, fracRes: 0.5975, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6302, norm(y): 0.9918, norm:0.8463, tok/sec: 101088.51, flops:88.52, batch-reuse:1
@ 10674 train 3.9353 , allloss: 3.9473, dt: 1263.16ms, fracRes: 0.5973, norm(attn): 0.1670, norm(output): 0.2559, norm(x): 0.6325, norm(y): 0.9920, norm:0.8852, tok/sec: 103765.40, flops:90.87, batch-reuse:1
@ 10675 train 4.0367 , allloss: 4.0485, dt: 1269.34ms, fracRes: 0.5979, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6313, norm(y): 0.9919, norm:1.0447, tok/sec: 103260.33, flops:90.42, batch-reuse:1
@ 10676 train 3.9766 , allloss: 3.9890, dt: 1278.29ms, fracRes: 0.5988, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6378, norm(y): 0.9921, norm:1.2228, tok/sec: 102537.19, flops:89.79, batch-reuse:1
@ 10677 train 3.9570 , allloss: 3.9692, dt: 1274.45ms, fracRes: 0.5980, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6334, norm(y): 0.9922, norm:0.9477, tok/sec: 102845.72, flops:90.06, batch-reuse:1
@ 10678 train 3.8186 , allloss: 3.8310, dt: 1274.21ms, fracRes: 0.5975, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6346, norm(y): 0.9924, norm:0.9488, tok/sec: 102865.23, flops:90.08, batch-reuse:1
@ 10679 train 3.9799 , allloss: 3.9921, dt: 1276.76ms, fracRes: 0.5975, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6340, norm(y): 0.9923, norm:1.0345, tok/sec: 102659.81, flops:89.90, batch-reuse:1
@ 10680 train 3.9372 , allloss: 3.9493, dt: 1267.52ms, fracRes: 0.5976, norm(attn): 0.1641, norm(output): 0.2539, norm(x): 0.6318, norm(y): 0.9919, norm:0.7839, tok/sec: 103408.39, flops:90.55, batch-reuse:1
@ 10681 train 4.0960 , allloss: 4.1082, dt: 1587.04ms, fracRes: 0.5991, norm(attn): 0.1641, norm(output): 0.2539, norm(x): 0.6354, norm(y): 0.9920, norm:1.1734, tok/sec: 82588.87, flops:72.32, batch-reuse:1
@ 10682 train 4.2125 , allloss: 4.2250, dt: 1292.49ms, fracRes: 0.5987, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6342, norm(y): 0.9918, norm:1.5876, tok/sec: 101410.40, flops:88.80, batch-reuse:1
@ 10683 train 3.9582 , allloss: 3.9706, dt: 1261.74ms, fracRes: 0.5991, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6341, norm(y): 0.9919, norm:1.0147, tok/sec: 103881.94, flops:90.97, batch-reuse:1
@ 10684 train 3.9576 , allloss: 3.9696, dt: 1260.07ms, fracRes: 0.5986, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6332, norm(y): 0.9920, norm:1.5203, tok/sec: 104019.41, flops:91.09, batch-reuse:1
@ 10685 train 4.0426 , allloss: 4.0543, dt: 1247.09ms, fracRes: 0.5982, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6340, norm(y): 0.9919, norm:1.1131, tok/sec: 105102.17, flops:92.04, batch-reuse:1
@ 10686 train 4.0252 , allloss: 4.0372, dt: 1264.27ms, fracRes: 0.5977, norm(attn): 0.1660, norm(output): 0.2559, norm(x): 0.6358, norm(y): 0.9920, norm:1.4424, tok/sec: 103673.78, flops:90.79, batch-reuse:1
@ 10687 train 3.9565 , allloss: 3.9690, dt: 1259.18ms, fracRes: 0.5982, norm(attn): 0.1631, norm(output): 0.2539, norm(x): 0.6369, norm(y): 0.9921, norm:0.9972, tok/sec: 104093.25, flops:91.15, batch-reuse:1
@ 10688 train 3.9801 , allloss: 3.9921, dt: 1248.94ms, fracRes: 0.5966, norm(attn): 0.1670, norm(output): 0.2578, norm(x): 0.6354, norm(y): 0.9917, norm:1.4042, tok/sec: 104946.68, flops:91.90, batch-reuse:1
@ 10689 train 3.9291 , allloss: 3.9412, dt: 1277.97ms, fracRes: 0.5971, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6340, norm(y): 0.9920, norm:1.1724, tok/sec: 102562.52, flops:89.81, batch-reuse:1
@ 10690 train 4.0038 , allloss: 4.0166, dt: 1276.36ms, fracRes: 0.5971, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6341, norm(y): 0.9920, norm:1.4017, tok/sec: 102692.10, flops:89.93, batch-reuse:1
@ 10691 train 3.9862 , allloss: 3.9986, dt: 1264.82ms, fracRes: 0.5977, norm(attn): 0.1641, norm(output): 0.2539, norm(x): 0.6342, norm(y): 0.9919, norm:0.9982, tok/sec: 103628.97, flops:90.75, batch-reuse:1
@ 10692 train 3.9765 , allloss: 3.9884, dt: 1259.27ms, fracRes: 0.5985, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6348, norm(y): 0.9922, norm:1.1288, tok/sec: 104085.92, flops:91.15, batch-reuse:1
@ 10693 train 4.0085 , allloss: 4.0208, dt: 1257.40ms, fracRes: 0.5986, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6326, norm(y): 0.9921, norm:0.9684, tok/sec: 104240.43, flops:91.28, batch-reuse:1
@ 10694 train 3.9927 , allloss: 4.0049, dt: 1295.91ms, fracRes: 0.5992, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6304, norm(y): 0.9924, norm:1.1762, tok/sec: 101142.72, flops:88.57, batch-reuse:1
@ 10695 train 4.0406 , allloss: 4.0524, dt: 1267.21ms, fracRes: 0.5989, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6295, norm(y): 0.9918, norm:0.9383, tok/sec: 103433.47, flops:90.58, batch-reuse:1
@ 10696 train 3.9824 , allloss: 3.9942, dt: 1275.90ms, fracRes: 0.5991, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6320, norm(y): 0.9921, norm:0.8577, tok/sec: 102728.72, flops:89.96, batch-reuse:1
@ 10697 train 3.8321 , allloss: 3.8474, dt: 1290.38ms, fracRes: 0.6001, norm(attn): 0.1680, norm(output): 0.2578, norm(x): 0.6380, norm(y): 0.9921, norm:1.8422, tok/sec: 101576.52, flops:88.95, batch-reuse:1
@ 10698 train 3.9373 , allloss: 3.9498, dt: 1262.80ms, fracRes: 0.5990, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6308, norm(y): 0.9920, norm:1.0074, tok/sec: 103795.14, flops:90.89, batch-reuse:1
@ 10699 train 4.0142 , allloss: 4.0283, dt: 1272.56ms, fracRes: 0.5991, norm(attn): 0.1650, norm(output): 0.2539, norm(x): 0.6366, norm(y): 0.9919, norm:1.5513, tok/sec: 102998.71, flops:90.19, batch-reuse:1
@ 10700 train 3.9044 , allloss: 3.9171, dt: 1292.91ms, fracRes: 0.5990, norm(attn): 0.1650, norm(output): 0.2539, norm(x): 0.6376, norm(y): 0.9923, norm:1.0556, tok/sec: 101377.54, flops:88.77, batch-reuse:1
@ 10701 train 4.0351 , allloss: 4.0470, dt: 1275.91ms, fracRes: 0.5978, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6316, norm(y): 0.9919, norm:0.9275, tok/sec: 102728.20, flops:89.96, batch-reuse:1
@ 10702 train 4.0688 , allloss: 4.0808, dt: 1275.86ms, fracRes: 0.5972, norm(attn): 0.1670, norm(output): 0.2559, norm(x): 0.6365, norm(y): 0.9919, norm:1.0060, tok/sec: 102732.54, flops:89.96, batch-reuse:1
@ 10703 train 4.0305 , allloss: 4.0421, dt: 1255.86ms, fracRes: 0.5971, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6357, norm(y): 0.9919, norm:0.8900, tok/sec: 104368.14, flops:91.39, batch-reuse:1
@ 10704 train 3.9672 , allloss: 3.9792, dt: 1258.11ms, fracRes: 0.5979, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6381, norm(y): 0.9920, norm:0.9195, tok/sec: 104181.33, flops:91.23, batch-reuse:1
@ 10705 train 3.9279 , allloss: 3.9397, dt: 1281.30ms, fracRes: 0.5974, norm(attn): 0.1641, norm(output): 0.2539, norm(x): 0.6346, norm(y): 0.9921, norm:0.8214, tok/sec: 102295.80, flops:89.58, batch-reuse:1
@ 10706 train 3.8634 , allloss: 3.8759, dt: 1277.51ms, fracRes: 0.5971, norm(attn): 0.1650, norm(output): 0.2559, norm(x): 0.6372, norm(y): 0.9922, norm:0.9366, tok/sec: 102599.35, flops:89.84, batch-reuse:1
@ 10707 train 4.0134 , allloss: 4.0253, dt: 1278.26ms, fracRes: 0.5972, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6327, norm(y): 0.9921, norm:0.8802, tok/sec: 102539.62, flops:89.79, batch-reuse:1
@ 10708 train 3.9713 , allloss: 3.9838, dt: 1260.72ms, fracRes: 0.5977, norm(attn): 0.1670, norm(output): 0.2559, norm(x): 0.6351, norm(y): 0.9921, norm:1.0001, tok/sec: 103966.18, flops:91.04, batch-reuse:1
@ 10709 train 3.9240 , allloss: 3.9371, dt: 1272.59ms, fracRes: 0.5986, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6370, norm(y): 0.9920, norm:0.9145, tok/sec: 102996.01, flops:90.19, batch-reuse:1
@ 10710 train 3.9406 , allloss: 3.9527, dt: 1308.46ms, fracRes: 0.5993, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6326, norm(y): 0.9923, norm:1.0278, tok/sec: 100172.96, flops:87.72, batch-reuse:1
@ 10711 train 3.8600 , allloss: 3.8723, dt: 1313.59ms, fracRes: 0.5990, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6362, norm(y): 0.9922, norm:0.8784, tok/sec: 99781.17, flops:87.38, batch-reuse:1
@ 10712 train 3.9416 , allloss: 3.9544, dt: 1301.49ms, fracRes: 0.5989, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6328, norm(y): 0.9921, norm:0.8448, tok/sec: 100709.33, flops:88.19, batch-reuse:1
@ 10713 train 3.8756 , allloss: 3.8879, dt: 1275.73ms, fracRes: 0.5985, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6363, norm(y): 0.9921, norm:0.8392, tok/sec: 102742.62, flops:89.97, batch-reuse:1
@ 10714 train 4.0250 , allloss: 4.0365, dt: 1277.32ms, fracRes: 0.5993, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6353, norm(y): 0.9921, norm:0.7995, tok/sec: 102614.53, flops:89.86, batch-reuse:1
@ 10715 train 3.9202 , allloss: 3.9321, dt: 1266.65ms, fracRes: 0.5990, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6398, norm(y): 0.9919, norm:0.7758, tok/sec: 103478.97, flops:90.62, batch-reuse:1
@ 10716 train 3.9405 , allloss: 3.9525, dt: 1269.80ms, fracRes: 0.5982, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6381, norm(y): 0.9919, norm:0.8321, tok/sec: 103222.25, flops:90.39, batch-reuse:1
@ 10717 train 4.2579 , allloss: 4.2725, dt: 1275.07ms, fracRes: 0.5984, norm(attn): 0.1680, norm(output): 0.2578, norm(x): 0.6434, norm(y): 0.9918, norm:1.1562, tok/sec: 102795.64, flops:90.02, batch-reuse:1
@ 10718 train 4.0167 , allloss: 4.0291, dt: 1250.39ms, fracRes: 0.5981, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6366, norm(y): 0.9917, norm:1.1790, tok/sec: 104824.73, flops:91.79, batch-reuse:1
@ 10719 train 3.9041 , allloss: 3.9159, dt: 1271.02ms, fracRes: 0.5979, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6335, norm(y): 0.9918, norm:0.9081, tok/sec: 103123.60, flops:90.30, batch-reuse:1
@ 10720 train 3.9424 , allloss: 3.9541, dt: 1246.12ms, fracRes: 0.5979, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6349, norm(y): 0.9918, norm:0.8196, tok/sec: 105183.71, flops:92.11, batch-reuse:1
@ 10721 train 3.9248 , allloss: 3.9365, dt: 1273.19ms, fracRes: 0.5983, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6325, norm(y): 0.9920, norm:0.9030, tok/sec: 102948.12, flops:90.15, batch-reuse:1
@ 10722 train 3.9163 , allloss: 3.9283, dt: 1260.60ms, fracRes: 0.5987, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6341, norm(y): 0.9920, norm:0.8190, tok/sec: 103976.25, flops:91.05, batch-reuse:1
@ 10723 train 3.9466 , allloss: 3.9586, dt: 1241.49ms, fracRes: 0.5988, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6328, norm(y): 0.9921, norm:0.8865, tok/sec: 105576.41, flops:92.45, batch-reuse:1
@ 10724 train 3.9600 , allloss: 3.9719, dt: 1267.48ms, fracRes: 0.5988, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6313, norm(y): 0.9921, norm:1.0198, tok/sec: 103411.70, flops:90.56, batch-reuse:1
@ 10725 train 3.8945 , allloss: 3.9077, dt: 1252.83ms, fracRes: 0.5995, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6335, norm(y): 0.9922, norm:0.8912, tok/sec: 104620.44, flops:91.61, batch-reuse:1
@ 10726 train 3.9306 , allloss: 3.9431, dt: 1248.80ms, fracRes: 0.5987, norm(attn): 0.1660, norm(output): 0.2578, norm(x): 0.6389, norm(y): 0.9919, norm:0.7987, tok/sec: 104958.28, flops:91.91, batch-reuse:1
@ 10727 train 3.9057 , allloss: 3.9175, dt: 1248.72ms, fracRes: 0.5973, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6337, norm(y): 0.9918, norm:0.8895, tok/sec: 104965.17, flops:91.92, batch-reuse:1
@ 10728 train 3.9172 , allloss: 3.9289, dt: 1267.01ms, fracRes: 0.5978, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6330, norm(y): 0.9920, norm:0.8324, tok/sec: 103450.11, flops:90.59, batch-reuse:1
@ 10729 train 3.9567 , allloss: 3.9684, dt: 1268.93ms, fracRes: 0.5983, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6313, norm(y): 0.9918, norm:0.7450, tok/sec: 103293.37, flops:90.45, batch-reuse:1
@ 10730 train 3.8005 , allloss: 3.8130, dt: 1257.76ms, fracRes: 0.5985, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6338, norm(y): 0.9921, norm:0.7684, tok/sec: 104210.79, flops:91.26, batch-reuse:1
@ 10731 train 3.8811 , allloss: 3.8928, dt: 1264.71ms, fracRes: 0.5985, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6303, norm(y): 0.9919, norm:0.7957, tok/sec: 103637.82, flops:90.75, batch-reuse:1
@ 10732 train 3.8947 , allloss: 3.9068, dt: 1261.05ms, fracRes: 0.5990, norm(attn): 0.1660, norm(output): 0.2559, norm(x): 0.6336, norm(y): 0.9919, norm:0.7429, tok/sec: 103939.04, flops:91.02, batch-reuse:1
@ 10733 train 3.8657 , allloss: 3.8775, dt: 1289.54ms, fracRes: 0.5993, norm(attn): 0.1641, norm(output): 0.2539, norm(x): 0.6314, norm(y): 0.9919, norm:0.8850, tok/sec: 101642.76, flops:89.01, batch-reuse:1
@ 10734 train 3.8793 , allloss: 3.8912, dt: 1287.90ms, fracRes: 0.5994, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6306, norm(y): 0.9918, norm:0.7768, tok/sec: 101771.94, flops:89.12, batch-reuse:1
@ 10735 train 3.8974 , allloss: 3.9097, dt: 1269.90ms, fracRes: 0.5993, norm(attn): 0.1641, norm(output): 0.2539, norm(x): 0.6328, norm(y): 0.9918, norm:0.8488, tok/sec: 103214.03, flops:90.38, batch-reuse:1
@ 10736 train 3.9107 , allloss: 3.9226, dt: 1287.52ms, fracRes: 0.5991, norm(attn): 0.1641, norm(output): 0.2500, norm(x): 0.6275, norm(y): 0.9921, norm:0.9171, tok/sec: 101801.71, flops:89.15, batch-reuse:1
@ 10737 train 3.8730 , allloss: 3.8845, dt: 1271.28ms, fracRes: 0.5987, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6265, norm(y): 0.9917, norm:0.7634, tok/sec: 103102.46, flops:90.29, batch-reuse:1
@ 10738 train 3.9026 , allloss: 3.9144, dt: 1298.38ms, fracRes: 0.5983, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6268, norm(y): 0.9916, norm:0.8406, tok/sec: 100950.76, flops:88.40, batch-reuse:1
@ 10739 train 3.9415 , allloss: 3.9534, dt: 1273.42ms, fracRes: 0.5977, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6289, norm(y): 0.9914, norm:1.0302, tok/sec: 102928.80, flops:90.13, batch-reuse:1
@ 10740 train 3.8966 , allloss: 3.9083, dt: 1259.42ms, fracRes: 0.5979, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6272, norm(y): 0.9918, norm:0.8404, tok/sec: 104073.47, flops:91.14, batch-reuse:1
@ 10741 train 3.8534 , allloss: 3.8656, dt: 1264.57ms, fracRes: 0.5983, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6272, norm(y): 0.9920, norm:0.8573, tok/sec: 103649.50, flops:90.76, batch-reuse:1
@ 10742 train 3.8578 , allloss: 3.8698, dt: 1280.48ms, fracRes: 0.5982, norm(attn): 0.1641, norm(output): 0.2500, norm(x): 0.6247, norm(y): 0.9918, norm:0.8194, tok/sec: 102361.35, flops:89.64, batch-reuse:1
@ 10743 train 3.9177 , allloss: 3.9294, dt: 1269.63ms, fracRes: 0.5984, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6252, norm(y): 0.9919, norm:0.7841, tok/sec: 103236.48, flops:90.40, batch-reuse:1
@ 10744 train 3.9374 , allloss: 3.9494, dt: 1264.90ms, fracRes: 0.5985, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6294, norm(y): 0.9917, norm:0.7840, tok/sec: 103622.76, flops:90.74, batch-reuse:1
@ 10745 train 3.9407 , allloss: 3.9524, dt: 1264.43ms, fracRes: 0.5985, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6275, norm(y): 0.9918, norm:0.7456, tok/sec: 103661.34, flops:90.77, batch-reuse:1
@ 10746 train 3.9253 , allloss: 3.9371, dt: 1280.39ms, fracRes: 0.5986, norm(attn): 0.1670, norm(output): 0.2500, norm(x): 0.6268, norm(y): 0.9918, norm:0.7879, tok/sec: 102368.83, flops:89.64, batch-reuse:1
@ 10747 train 3.8704 , allloss: 3.8823, dt: 1260.32ms, fracRes: 0.5988, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6289, norm(y): 0.9918, norm:0.8470, tok/sec: 103998.61, flops:91.07, batch-reuse:1
@ 10748 train 3.8620 , allloss: 3.8739, dt: 1267.67ms, fracRes: 0.5982, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6294, norm(y): 0.9920, norm:0.8279, tok/sec: 103395.83, flops:90.54, batch-reuse:1
@ 10749 train 3.8358 , allloss: 3.8478, dt: 1279.84ms, fracRes: 0.5977, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6297, norm(y): 0.9918, norm:0.9982, tok/sec: 102412.99, flops:89.68, batch-reuse:1
@ 10750 train 3.9199 , allloss: 3.9319, dt: 1258.12ms, fracRes: 0.5973, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6288, norm(y): 0.9917, norm:0.9652, tok/sec: 104181.11, flops:91.23, batch-reuse:1
@ 10751 train 3.9367 , allloss: 3.9483, dt: 1262.20ms, fracRes: 0.5969, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6279, norm(y): 0.9915, norm:0.7514, tok/sec: 103843.80, flops:90.93, batch-reuse:1
@ 10752 train 3.8491 , allloss: 3.8611, dt: 1257.43ms, fracRes: 0.5974, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6316, norm(y): 0.9918, norm:0.9075, tok/sec: 104238.40, flops:91.28, batch-reuse:1
@ 10753 train 3.8543 , allloss: 3.8659, dt: 1278.54ms, fracRes: 0.5977, norm(attn): 0.1670, norm(output): 0.2559, norm(x): 0.6313, norm(y): 0.9918, norm:0.7451, tok/sec: 102517.06, flops:89.77, batch-reuse:1
@ 10754 train 4.0161 , allloss: 4.0277, dt: 1267.42ms, fracRes: 0.5986, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6320, norm(y): 0.9918, norm:0.9432, tok/sec: 103416.54, flops:90.56, batch-reuse:1
@ 10755 train 3.8797 , allloss: 3.8914, dt: 1274.75ms, fracRes: 0.6001, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6329, norm(y): 0.9916, norm:0.9139, tok/sec: 102821.46, flops:90.04, batch-reuse:1
@ 10756 train 3.8231 , allloss: 3.8350, dt: 1309.49ms, fracRes: 0.5996, norm(attn): 0.1670, norm(output): 0.2559, norm(x): 0.6334, norm(y): 0.9915, norm:0.8285, tok/sec: 100094.13, flops:87.65, batch-reuse:1
@ 10757 train 3.8544 , allloss: 3.8662, dt: 1269.23ms, fracRes: 0.5986, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6266, norm(y): 0.9917, norm:0.9911, tok/sec: 103268.88, flops:90.43, batch-reuse:1
@ 10758 train 3.7375 , allloss: 3.7496, dt: 1287.88ms, fracRes: 0.5981, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6259, norm(y): 0.9920, norm:0.8412, tok/sec: 101773.54, flops:89.12, batch-reuse:1
@ 10759 train 3.6629 , allloss: 3.6752, dt: 1254.05ms, fracRes: 0.5990, norm(attn): 0.1670, norm(output): 0.2500, norm(x): 0.6256, norm(y): 0.9922, norm:0.8816, tok/sec: 104518.78, flops:91.53, batch-reuse:1
@ 10760 train 3.8065 , allloss: 3.8181, dt: 1268.56ms, fracRes: 0.5985, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6237, norm(y): 0.9919, norm:0.8639, tok/sec: 103323.34, flops:90.48, batch-reuse:1
@ 10761 train 3.8158 , allloss: 3.8276, dt: 1279.18ms, fracRes: 0.5983, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6267, norm(y): 0.9916, norm:0.8581, tok/sec: 102465.62, flops:89.73, batch-reuse:1
@ 10762 train 3.7392 , allloss: 3.7511, dt: 1259.00ms, fracRes: 0.5987, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6278, norm(y): 0.9919, norm:0.7754, tok/sec: 104107.82, flops:91.17, batch-reuse:1
@ 10763 train 3.8261 , allloss: 3.8375, dt: 1242.88ms, fracRes: 0.5969, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6268, norm(y): 0.9916, norm:0.9344, tok/sec: 105458.06, flops:92.35, batch-reuse:1
@ 10764 train 3.8379 , allloss: 3.8497, dt: 1265.66ms, fracRes: 0.5980, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6297, norm(y): 0.9918, norm:0.8831, tok/sec: 103560.47, flops:90.69, batch-reuse:1
@ 10765 train 3.6272 , allloss: 3.6390, dt: 1289.43ms, fracRes: 0.5983, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6293, norm(y): 0.9918, norm:0.9334, tok/sec: 101650.82, flops:89.01, batch-reuse:1
@ 10766 train 3.8041 , allloss: 3.8158, dt: 1305.86ms, fracRes: 0.5978, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6291, norm(y): 0.9919, norm:0.8236, tok/sec: 100372.00, flops:87.89, batch-reuse:1
@ 10767 train 3.8038 , allloss: 3.8164, dt: 1276.68ms, fracRes: 0.5973, norm(attn): 0.1680, norm(output): 0.2520, norm(x): 0.6309, norm(y): 0.9919, norm:0.9093, tok/sec: 102665.89, flops:89.90, batch-reuse:1
@ 10768 train 3.8268 , allloss: 3.8391, dt: 1271.36ms, fracRes: 0.5983, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6285, norm(y): 0.9918, norm:1.0098, tok/sec: 103095.69, flops:90.28, batch-reuse:1
@ 10769 train 3.6677 , allloss: 3.6796, dt: 1262.90ms, fracRes: 0.5990, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6297, norm(y): 0.9919, norm:0.9007, tok/sec: 103786.87, flops:90.88, batch-reuse:1
@ 10770 train 3.7369 , allloss: 3.7487, dt: 1274.52ms, fracRes: 0.5994, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6293, norm(y): 0.9921, norm:0.8578, tok/sec: 102840.25, flops:90.06, batch-reuse:1
@ 10771 train 3.6975 , allloss: 3.7094, dt: 1257.36ms, fracRes: 0.5992, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6270, norm(y): 0.9921, norm:0.8523, tok/sec: 104243.48, flops:91.28, batch-reuse:1
@ 10772 train 3.7231 , allloss: 3.7350, dt: 1266.01ms, fracRes: 0.5984, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6277, norm(y): 0.9919, norm:0.9640, tok/sec: 103531.82, flops:90.66, batch-reuse:1
@ 10773 train 3.6969 , allloss: 3.7085, dt: 1262.72ms, fracRes: 0.5984, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6298, norm(y): 0.9919, norm:0.8360, tok/sec: 103801.41, flops:90.90, batch-reuse:1
@ 10774 train 3.7164 , allloss: 3.7285, dt: 1261.48ms, fracRes: 0.5992, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6311, norm(y): 0.9920, norm:0.8968, tok/sec: 103903.09, flops:90.99, batch-reuse:1
@ 10775 train 3.7393 , allloss: 3.7514, dt: 1271.12ms, fracRes: 0.5992, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6299, norm(y): 0.9918, norm:0.9963, tok/sec: 103115.01, flops:90.30, batch-reuse:1
@ 10776 train 3.6367 , allloss: 3.6489, dt: 1311.31ms, fracRes: 0.5986, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6272, norm(y): 0.9917, norm:0.8166, tok/sec: 99955.08, flops:87.53, batch-reuse:1
@ 10777 train 3.7815 , allloss: 3.7935, dt: 1307.21ms, fracRes: 0.5974, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6272, norm(y): 0.9916, norm:0.9368, tok/sec: 100268.28, flops:87.80, batch-reuse:1
@ 10778 train 3.8315 , allloss: 3.8437, dt: 1275.34ms, fracRes: 0.5977, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6287, norm(y): 0.9918, norm:0.8694, tok/sec: 102774.17, flops:90.00, batch-reuse:1
@ 10779 train 3.7224 , allloss: 3.7343, dt: 1275.16ms, fracRes: 0.5975, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6295, norm(y): 0.9918, norm:0.8345, tok/sec: 102788.78, flops:90.01, batch-reuse:1
@ 10780 train 3.7988 , allloss: 3.8107, dt: 1277.40ms, fracRes: 0.5984, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6281, norm(y): 0.9915, norm:0.7795, tok/sec: 102608.61, flops:89.85, batch-reuse:1
@ 10781 train 3.6494 , allloss: 3.6613, dt: 1289.50ms, fracRes: 0.5981, norm(attn): 0.1650, norm(output): 0.2500, norm(x): 0.6271, norm(y): 0.9917, norm:0.8978, tok/sec: 101645.71, flops:89.01, batch-reuse:1
@ 10782 train 3.7840 , allloss: 3.7955, dt: 1274.71ms, fracRes: 0.5978, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6264, norm(y): 0.9916, norm:0.7972, tok/sec: 102824.90, flops:90.04, batch-reuse:1
@ 10783 train 3.7588 , allloss: 3.7710, dt: 1258.03ms, fracRes: 0.5982, norm(attn): 0.1660, norm(output): 0.2500, norm(x): 0.6270, norm(y): 0.9919, norm:0.8269, tok/sec: 104188.69, flops:91.24, batch-reuse:1
@ 10784 train 3.7217 , allloss: 3.7335, dt: 1253.13ms, fracRes: 0.5983, norm(attn): 0.1650, norm(output): 0.2539, norm(x): 0.6267, norm(y): 0.9919, norm:0.8193, tok/sec: 104595.60, flops:91.59, batch-reuse:1
@ 10785 train 3.8113 , allloss: 3.8230, dt: 1278.98ms, fracRes: 0.5982, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6268, norm(y): 0.9916, norm:0.8878, tok/sec: 102481.32, flops:89.74, batch-reuse:1
@ 10786 train 3.7375 , allloss: 3.7494, dt: 1318.38ms, fracRes: 0.5983, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6273, norm(y): 0.9916, norm:0.8668, tok/sec: 99419.10, flops:87.06, batch-reuse:1
@ 10787 train 3.7898 , allloss: 3.8022, dt: 1312.48ms, fracRes: 0.5986, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6269, norm(y): 0.9919, norm:0.9075, tok/sec: 99866.05, flops:87.45, batch-reuse:1
@ 10788 train 3.7628 , allloss: 3.7749, dt: 1303.03ms, fracRes: 0.5976, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6226, norm(y): 0.9915, norm:0.8218, tok/sec: 100590.29, flops:88.09, batch-reuse:1
@ 10789 train 3.7589 , allloss: 3.7709, dt: 1323.02ms, fracRes: 0.5974, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6253, norm(y): 0.9914, norm:0.9858, tok/sec: 99070.13, flops:86.75, batch-reuse:1
@ 10790 train 3.8150 , allloss: 3.8266, dt: 1255.83ms, fracRes: 0.5974, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6239, norm(y): 0.9914, norm:0.8960, tok/sec: 104370.51, flops:91.40, batch-reuse:1
@ 10791 train 3.8182 , allloss: 3.8301, dt: 1301.71ms, fracRes: 0.5980, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6241, norm(y): 0.9914, norm:0.7847, tok/sec: 100691.99, flops:88.17, batch-reuse:1
@ 10792 train 3.7541 , allloss: 3.7656, dt: 1276.74ms, fracRes: 0.5981, norm(attn): 0.1641, norm(output): 0.2500, norm(x): 0.6228, norm(y): 0.9916, norm:0.7683, tok/sec: 102661.52, flops:89.90, batch-reuse:1
@ 10793 train 3.7551 , allloss: 3.7667, dt: 1265.32ms, fracRes: 0.5982, norm(attn): 0.1631, norm(output): 0.2500, norm(x): 0.6198, norm(y): 0.9918, norm:0.8104, tok/sec: 103587.77, flops:90.71, batch-reuse:1
@ 10794 train 3.7389 , allloss: 3.7514, dt: 1280.91ms, fracRes: 0.5982, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6299, norm(y): 0.9918, norm:0.8004, tok/sec: 102327.65, flops:89.61, batch-reuse:1
@ 10795 train 3.5978 , allloss: 3.6097, dt: 1278.71ms, fracRes: 0.5976, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6264, norm(y): 0.9918, norm:0.8404, tok/sec: 102503.41, flops:89.76, batch-reuse:1
@ 10796 train 3.8042 , allloss: 3.8160, dt: 1299.83ms, fracRes: 0.5969, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6263, norm(y): 0.9915, norm:0.7522, tok/sec: 100837.75, flops:88.30, batch-reuse:1
@ 10797 train 3.7758 , allloss: 3.7876, dt: 1272.89ms, fracRes: 0.5974, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6285, norm(y): 0.9915, norm:0.7813, tok/sec: 102972.12, flops:90.17, batch-reuse:1
@ 10798 train 3.6602 , allloss: 3.6718, dt: 1283.01ms, fracRes: 0.5973, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6314, norm(y): 0.9915, norm:0.7894, tok/sec: 102160.03, flops:89.46, batch-reuse:1
@ 10799 train 3.8574 , allloss: 3.8696, dt: 1320.30ms, fracRes: 0.5983, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6314, norm(y): 0.9912, norm:0.7578, tok/sec: 99274.22, flops:86.93, batch-reuse:1
@ 10800 train 3.7547 , allloss: 3.7663, dt: 1309.30ms, fracRes: 0.5989, norm(attn): 0.1650, norm(output): 0.2500, norm(x): 0.6240, norm(y): 0.9914, norm:0.8564, tok/sec: 100108.37, flops:87.66, batch-reuse:1
@ 10801 train 3.8187 , allloss: 3.8306, dt: 1267.04ms, fracRes: 0.5982, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6282, norm(y): 0.9915, norm:0.8794, tok/sec: 103447.17, flops:90.59, batch-reuse:1
@ 10802 train 3.8043 , allloss: 3.8162, dt: 1279.76ms, fracRes: 0.5984, norm(attn): 0.1650, norm(output): 0.2539, norm(x): 0.6293, norm(y): 0.9915, norm:0.8140, tok/sec: 102419.56, flops:89.69, batch-reuse:1
@ 10803 train 3.7849 , allloss: 3.7966, dt: 1254.76ms, fracRes: 0.5984, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6236, norm(y): 0.9917, norm:0.8021, tok/sec: 104459.78, flops:91.47, batch-reuse:1
@ 10804 train 4.0359 , allloss: 4.0479, dt: 1242.85ms, fracRes: 0.5975, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6225, norm(y): 0.9913, norm:0.9909, tok/sec: 105460.73, flops:92.35, batch-reuse:1
@ 10805 train 4.0026 , allloss: 4.0146, dt: 1254.06ms, fracRes: 0.5982, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6245, norm(y): 0.9913, norm:0.9479, tok/sec: 104518.52, flops:91.53, batch-reuse:1
@ 10806 train 3.9189 , allloss: 3.9307, dt: 1291.15ms, fracRes: 0.5975, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6242, norm(y): 0.9912, norm:0.7927, tok/sec: 101515.53, flops:88.90, batch-reuse:1
@ 10807 train 4.0178 , allloss: 4.0304, dt: 1279.45ms, fracRes: 0.5978, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6263, norm(y): 0.9912, norm:0.8608, tok/sec: 102444.41, flops:89.71, batch-reuse:1
@ 10808 train 3.9599 , allloss: 3.9724, dt: 1247.74ms, fracRes: 0.5984, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6240, norm(y): 0.9914, norm:0.8406, tok/sec: 105047.72, flops:91.99, batch-reuse:1
@ 10809 train 4.0709 , allloss: 4.0828, dt: 1265.99ms, fracRes: 0.5992, norm(attn): 0.1631, norm(output): 0.2520, norm(x): 0.6226, norm(y): 0.9910, norm:0.8080, tok/sec: 103533.28, flops:90.66, batch-reuse:1
@ 10810 train 4.0418 , allloss: 4.0534, dt: 1278.67ms, fracRes: 0.5987, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6239, norm(y): 0.9911, norm:0.8352, tok/sec: 102506.70, flops:89.76, batch-reuse:1
@ 10811 train 4.0527 , allloss: 4.0643, dt: 1270.15ms, fracRes: 0.5987, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6242, norm(y): 0.9910, norm:0.9600, tok/sec: 103194.29, flops:90.37, batch-reuse:1
@ 10812 train 3.9831 , allloss: 3.9946, dt: 1267.80ms, fracRes: 0.5980, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6256, norm(y): 0.9910, norm:0.9429, tok/sec: 103385.66, flops:90.53, batch-reuse:1
@ 10813 train 3.9535 , allloss: 3.9654, dt: 1270.27ms, fracRes: 0.5977, norm(attn): 0.1680, norm(output): 0.2520, norm(x): 0.6273, norm(y): 0.9911, norm:0.8646, tok/sec: 103184.57, flops:90.36, batch-reuse:1
@ 10814 train 3.9355 , allloss: 3.9477, dt: 1254.96ms, fracRes: 0.5974, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6275, norm(y): 0.9912, norm:0.8823, tok/sec: 104443.03, flops:91.46, batch-reuse:1
@ 10815 train 3.8727 , allloss: 3.8844, dt: 1275.05ms, fracRes: 0.5984, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6255, norm(y): 0.9913, norm:0.9072, tok/sec: 102797.66, flops:90.02, batch-reuse:1
@ 10816 train 3.9725 , allloss: 3.9846, dt: 1272.90ms, fracRes: 0.5987, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6278, norm(y): 0.9911, norm:0.8818, tok/sec: 102971.33, flops:90.17, batch-reuse:1
@ 10817 train 3.9674 , allloss: 3.9796, dt: 1260.27ms, fracRes: 0.5986, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6286, norm(y): 0.9911, norm:0.7813, tok/sec: 104003.10, flops:91.07, batch-reuse:1
@ 10818 train 3.9383 , allloss: 3.9502, dt: 1254.44ms, fracRes: 0.5983, norm(attn): 0.1680, norm(output): 0.2520, norm(x): 0.6258, norm(y): 0.9912, norm:0.8931, tok/sec: 104486.44, flops:91.50, batch-reuse:1
@ 10819 train 3.9698 , allloss: 3.9818, dt: 1274.37ms, fracRes: 0.5977, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6293, norm(y): 0.9909, norm:0.8205, tok/sec: 102852.20, flops:90.07, batch-reuse:1
@ 10820 train 3.9539 , allloss: 3.9663, dt: 1259.36ms, fracRes: 0.5981, norm(attn): 0.1660, norm(output): 0.2559, norm(x): 0.6301, norm(y): 0.9909, norm:0.8585, tok/sec: 104078.02, flops:91.14, batch-reuse:1
@ 10821 train 4.0385 , allloss: 4.0502, dt: 1286.86ms, fracRes: 0.5985, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6223, norm(y): 0.9910, norm:0.8889, tok/sec: 101853.86, flops:89.19, batch-reuse:1
@ 10822 train 4.0414 , allloss: 4.0533, dt: 1262.55ms, fracRes: 0.5977, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6237, norm(y): 0.9911, norm:0.8976, tok/sec: 103815.19, flops:90.91, batch-reuse:1
@ 10823 train 3.9716 , allloss: 3.9836, dt: 1293.13ms, fracRes: 0.5973, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6249, norm(y): 0.9912, norm:0.9993, tok/sec: 101360.12, flops:88.76, batch-reuse:1
@ 10824 train 3.9745 , allloss: 3.9866, dt: 1268.14ms, fracRes: 0.5978, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6257, norm(y): 0.9913, norm:0.9867, tok/sec: 103358.08, flops:90.51, batch-reuse:1
@ 10825 train 3.9713 , allloss: 3.9833, dt: 1253.09ms, fracRes: 0.5974, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6265, norm(y): 0.9911, norm:0.8487, tok/sec: 104599.38, flops:91.60, batch-reuse:1
@ 10826 train 3.9006 , allloss: 3.9130, dt: 1274.76ms, fracRes: 0.5967, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6294, norm(y): 0.9910, norm:1.0594, tok/sec: 102820.54, flops:90.04, batch-reuse:1
@ 10827 train 4.0486 , allloss: 4.0603, dt: 1292.88ms, fracRes: 0.5972, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6289, norm(y): 0.9910, norm:0.9917, tok/sec: 101379.86, flops:88.78, batch-reuse:1
@ 10828 train 4.0080 , allloss: 4.0199, dt: 1255.67ms, fracRes: 0.5982, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6278, norm(y): 0.9910, norm:0.8962, tok/sec: 104384.41, flops:91.41, batch-reuse:1
@ 10829 train 3.9655 , allloss: 3.9773, dt: 1266.78ms, fracRes: 0.5994, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6229, norm(y): 0.9912, norm:1.0018, tok/sec: 103468.63, flops:90.61, batch-reuse:1
@ 10830 train 3.9490 , allloss: 3.9613, dt: 1298.81ms, fracRes: 0.5989, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6239, norm(y): 0.9911, norm:0.8463, tok/sec: 100917.10, flops:88.37, batch-reuse:1
@ 10831 train 4.0009 , allloss: 4.0132, dt: 1262.00ms, fracRes: 0.5981, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6241, norm(y): 0.9910, norm:0.8168, tok/sec: 103860.55, flops:90.95, batch-reuse:1
@ 10832 train 3.9191 , allloss: 3.9313, dt: 1271.54ms, fracRes: 0.5971, norm(attn): 0.1680, norm(output): 0.2520, norm(x): 0.6236, norm(y): 0.9911, norm:0.9747, tok/sec: 103081.68, flops:90.27, batch-reuse:1
@ 10833 train 3.9265 , allloss: 3.9384, dt: 1277.12ms, fracRes: 0.5974, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6243, norm(y): 0.9910, norm:0.8663, tok/sec: 102630.58, flops:89.87, batch-reuse:1
@ 10834 train 3.9460 , allloss: 3.9581, dt: 1248.74ms, fracRes: 0.5970, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6230, norm(y): 0.9911, norm:0.8017, tok/sec: 104963.67, flops:91.92, batch-reuse:1
@ 10835 train 3.9422 , allloss: 3.9546, dt: 1288.65ms, fracRes: 0.5977, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6254, norm(y): 0.9913, norm:0.8501, tok/sec: 101712.51, flops:89.07, batch-reuse:1
@ 10836 train 3.9231 , allloss: 3.9360, dt: 1275.12ms, fracRes: 0.5978, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6290, norm(y): 0.9912, norm:0.8587, tok/sec: 102791.74, flops:90.01, batch-reuse:1
@ 10837 train 3.9882 , allloss: 3.9998, dt: 1273.56ms, fracRes: 0.5975, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6261, norm(y): 0.9909, norm:0.8154, tok/sec: 102918.03, flops:90.12, batch-reuse:1
@ 10838 train 4.0133 , allloss: 4.0251, dt: 1277.38ms, fracRes: 0.5973, norm(attn): 0.1641, norm(output): 0.2539, norm(x): 0.6282, norm(y): 0.9911, norm:0.8059, tok/sec: 102609.67, flops:89.85, batch-reuse:1
@ 10839 train 4.0353 , allloss: 4.0474, dt: 1295.45ms, fracRes: 0.5972, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6293, norm(y): 0.9910, norm:0.8624, tok/sec: 101178.63, flops:88.60, batch-reuse:1
@ 10840 train 3.9881 , allloss: 4.0004, dt: 1287.45ms, fracRes: 0.5978, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6309, norm(y): 0.9912, norm:0.9331, tok/sec: 101807.27, flops:89.15, batch-reuse:1
@ 10841 train 3.9043 , allloss: 3.9175, dt: 1275.44ms, fracRes: 0.5976, norm(attn): 0.1650, norm(output): 0.2559, norm(x): 0.6310, norm(y): 0.9910, norm:1.1482, tok/sec: 102765.80, flops:89.99, batch-reuse:1
@ 10842 train 3.9566 , allloss: 3.9694, dt: 1272.53ms, fracRes: 0.5976, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6260, norm(y): 0.9911, norm:0.9957, tok/sec: 103000.97, flops:90.20, batch-reuse:1
@ 10843 train 3.9499 , allloss: 3.9620, dt: 1271.21ms, fracRes: 0.5976, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6226, norm(y): 0.9910, norm:1.0858, tok/sec: 103108.41, flops:90.29, batch-reuse:1
@ 10844 train 3.9562 , allloss: 3.9682, dt: 1268.38ms, fracRes: 0.5974, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6247, norm(y): 0.9909, norm:1.0121, tok/sec: 103337.87, flops:90.49, batch-reuse:1
@ 10845 train 3.8784 , allloss: 3.8904, dt: 1253.65ms, fracRes: 0.5977, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6253, norm(y): 0.9911, norm:0.8881, tok/sec: 104552.57, flops:91.56, batch-reuse:1
@ 10846 train 3.9529 , allloss: 3.9648, dt: 1268.09ms, fracRes: 0.5985, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6264, norm(y): 0.9912, norm:0.8872, tok/sec: 103362.06, flops:90.51, batch-reuse:1
@ 10847 train 3.9137 , allloss: 3.9263, dt: 1269.15ms, fracRes: 0.5985, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6296, norm(y): 0.9910, norm:1.1356, tok/sec: 103275.75, flops:90.44, batch-reuse:1
@ 10848 train 4.0177 , allloss: 4.0300, dt: 1271.69ms, fracRes: 0.5977, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6248, norm(y): 0.9911, norm:0.9499, tok/sec: 103069.13, flops:90.26, batch-reuse:1
@ 10849 train 3.9511 , allloss: 3.9635, dt: 1301.82ms, fracRes: 0.5971, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6252, norm(y): 0.9911, norm:0.8139, tok/sec: 100683.56, flops:88.17, batch-reuse:1
@ 10850 train 3.9054 , allloss: 3.9184, dt: 1295.22ms, fracRes: 0.5976, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6266, norm(y): 0.9913, norm:0.8940, tok/sec: 101196.66, flops:88.62, batch-reuse:1
@ 10851 train 3.9274 , allloss: 3.9393, dt: 1258.56ms, fracRes: 0.5980, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6226, norm(y): 0.9910, norm:0.8673, tok/sec: 104144.64, flops:91.20, batch-reuse:1
@ 10852 train 4.0770 , allloss: 4.0887, dt: 1263.14ms, fracRes: 0.5984, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6239, norm(y): 0.9911, norm:0.8880, tok/sec: 103766.55, flops:90.87, batch-reuse:1
@ 10853 train 3.9981 , allloss: 4.0101, dt: 1269.46ms, fracRes: 0.5987, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6244, norm(y): 0.9910, norm:0.7956, tok/sec: 103249.84, flops:90.41, batch-reuse:1
@ 10854 train 3.8069 , allloss: 3.8185, dt: 1249.84ms, fracRes: 0.5980, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6256, norm(y): 0.9910, norm:0.9039, tok/sec: 104871.12, flops:91.83, batch-reuse:1
@ 10855 train 4.0164 , allloss: 4.0287, dt: 1276.82ms, fracRes: 0.5977, norm(attn): 0.1670, norm(output): 0.2559, norm(x): 0.6258, norm(y): 0.9909, norm:0.8632, tok/sec: 102654.98, flops:89.89, batch-reuse:1
@ 10856 train 3.9482 , allloss: 3.9598, dt: 1299.53ms, fracRes: 0.5969, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6237, norm(y): 0.9910, norm:0.8164, tok/sec: 100861.36, flops:88.32, batch-reuse:1
@ 10857 train 3.9201 , allloss: 3.9324, dt: 1265.70ms, fracRes: 0.5984, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6260, norm(y): 0.9912, norm:0.8881, tok/sec: 103556.84, flops:90.68, batch-reuse:1
@ 10858 train 3.9355 , allloss: 3.9477, dt: 1290.84ms, fracRes: 0.5985, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6253, norm(y): 0.9913, norm:1.0037, tok/sec: 101540.22, flops:88.92, batch-reuse:1
@ 10859 train 3.9333 , allloss: 3.9451, dt: 1257.50ms, fracRes: 0.5982, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6234, norm(y): 0.9913, norm:0.7849, tok/sec: 104231.80, flops:91.27, batch-reuse:1
@ 10860 train 3.9075 , allloss: 3.9195, dt: 1262.57ms, fracRes: 0.5980, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6217, norm(y): 0.9911, norm:0.8648, tok/sec: 103813.30, flops:90.91, batch-reuse:1
@ 10861 train 3.9360 , allloss: 3.9486, dt: 1278.04ms, fracRes: 0.5977, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6284, norm(y): 0.9912, norm:0.8673, tok/sec: 102556.70, flops:89.81, batch-reuse:1
@ 10862 train 3.9558 , allloss: 3.9678, dt: 1260.46ms, fracRes: 0.5977, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6250, norm(y): 0.9909, norm:0.8236, tok/sec: 103987.03, flops:91.06, batch-reuse:1
@ 10863 train 4.0043 , allloss: 4.0162, dt: 1306.32ms, fracRes: 0.5971, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6237, norm(y): 0.9908, norm:0.8429, tok/sec: 100336.68, flops:87.86, batch-reuse:1
@ 10864 train 3.9712 , allloss: 3.9828, dt: 1253.81ms, fracRes: 0.5967, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6233, norm(y): 0.9906, norm:0.8156, tok/sec: 104539.03, flops:91.54, batch-reuse:1
@ 10865 train 3.9687 , allloss: 3.9805, dt: 1265.14ms, fracRes: 0.5969, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6257, norm(y): 0.9910, norm:0.7584, tok/sec: 103603.03, flops:90.72, batch-reuse:1
@ 10866 train 3.9084 , allloss: 3.9200, dt: 1266.68ms, fracRes: 0.5972, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6269, norm(y): 0.9909, norm:0.7838, tok/sec: 103476.55, flops:90.61, batch-reuse:1
@ 10867 train 4.0020 , allloss: 4.0139, dt: 1271.59ms, fracRes: 0.5987, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6298, norm(y): 0.9913, norm:1.1914, tok/sec: 103077.00, flops:90.26, batch-reuse:1
@ 10868 train 3.9040 , allloss: 3.9170, dt: 1263.33ms, fracRes: 0.5977, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6278, norm(y): 0.9912, norm:0.9557, tok/sec: 103751.34, flops:90.85, batch-reuse:1
@ 10869 train 3.9413 , allloss: 3.9537, dt: 1279.35ms, fracRes: 0.5972, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6239, norm(y): 0.9914, norm:1.0604, tok/sec: 102452.10, flops:89.72, batch-reuse:1
@ 10870 train 3.8731 , allloss: 3.8856, dt: 1271.74ms, fracRes: 0.5978, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6270, norm(y): 0.9914, norm:1.2103, tok/sec: 103064.88, flops:90.25, batch-reuse:1
@ 10871 train 3.9383 , allloss: 3.9500, dt: 1269.55ms, fracRes: 0.5978, norm(attn): 0.1650, norm(output): 0.2539, norm(x): 0.6222, norm(y): 0.9908, norm:0.9850, tok/sec: 103242.53, flops:90.41, batch-reuse:1
@ 10872 train 3.9815 , allloss: 3.9933, dt: 1278.67ms, fracRes: 0.5993, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6257, norm(y): 0.9910, norm:0.9098, tok/sec: 102506.70, flops:89.76, batch-reuse:1
@ 10873 train 4.1060 , allloss: 4.1179, dt: 1290.59ms, fracRes: 0.6000, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6273, norm(y): 0.9909, norm:0.9036, tok/sec: 101559.73, flops:88.93, batch-reuse:1
@ 10874 train 4.0574 , allloss: 4.0691, dt: 1253.54ms, fracRes: 0.5985, norm(attn): 0.1670, norm(output): 0.2559, norm(x): 0.6275, norm(y): 0.9907, norm:0.8890, tok/sec: 104561.42, flops:91.56, batch-reuse:1
@ 10875 train 3.9354 , allloss: 3.9473, dt: 1239.84ms, fracRes: 0.5983, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6290, norm(y): 0.9908, norm:0.8532, tok/sec: 105717.07, flops:92.57, batch-reuse:1
@ 10876 train 3.8829 , allloss: 3.8947, dt: 1268.88ms, fracRes: 0.5981, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6254, norm(y): 0.9909, norm:0.8884, tok/sec: 103297.27, flops:90.46, batch-reuse:1
@ 10877 train 3.9720 , allloss: 3.9838, dt: 1256.86ms, fracRes: 0.5974, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6248, norm(y): 0.9909, norm:0.8951, tok/sec: 104285.12, flops:91.32, batch-reuse:1
@ 10878 train 3.9664 , allloss: 3.9783, dt: 1268.35ms, fracRes: 0.5974, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6275, norm(y): 0.9911, norm:0.8055, tok/sec: 103340.45, flops:90.49, batch-reuse:1
@ 10879 train 4.0071 , allloss: 4.0192, dt: 1288.61ms, fracRes: 0.5967, norm(attn): 0.1670, norm(output): 0.2559, norm(x): 0.6280, norm(y): 0.9907, norm:0.9022, tok/sec: 101715.94, flops:89.07, batch-reuse:1
@ 10880 train 4.0013 , allloss: 4.0135, dt: 1267.55ms, fracRes: 0.5975, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6282, norm(y): 0.9910, norm:1.1083, tok/sec: 103405.53, flops:90.55, batch-reuse:1
@ 10881 train 3.9852 , allloss: 3.9971, dt: 1309.40ms, fracRes: 0.5972, norm(attn): 0.1650, norm(output): 0.2539, norm(x): 0.6266, norm(y): 0.9908, norm:0.8707, tok/sec: 100100.75, flops:87.66, batch-reuse:1
@ 10882 train 4.0689 , allloss: 4.0810, dt: 1298.44ms, fracRes: 0.5970, norm(attn): 0.1660, norm(output): 0.2559, norm(x): 0.6312, norm(y): 0.9907, norm:1.1417, tok/sec: 100945.64, flops:88.40, batch-reuse:1
@ 10883 train 3.9453 , allloss: 3.9575, dt: 1284.30ms, fracRes: 0.5969, norm(attn): 0.1670, norm(output): 0.2559, norm(x): 0.6302, norm(y): 0.9906, norm:1.0339, tok/sec: 102056.99, flops:89.37, batch-reuse:1
@ 10884 train 3.9383 , allloss: 3.9505, dt: 1269.80ms, fracRes: 0.5983, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6315, norm(y): 0.9911, norm:0.8711, tok/sec: 103222.29, flops:90.39, batch-reuse:1
@ 10885 train 3.9743 , allloss: 3.9863, dt: 1289.07ms, fracRes: 0.5979, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6309, norm(y): 0.9909, norm:1.3467, tok/sec: 101679.85, flops:89.04, batch-reuse:1
@ 10886 train 4.0098 , allloss: 4.0217, dt: 1284.12ms, fracRes: 0.5984, norm(attn): 0.1670, norm(output): 0.2559, norm(x): 0.6316, norm(y): 0.9909, norm:0.8459, tok/sec: 102071.11, flops:89.38, batch-reuse:1
@ 10887 train 3.8198 , allloss: 3.8315, dt: 1271.58ms, fracRes: 0.5980, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6312, norm(y): 0.9910, norm:0.9126, tok/sec: 103077.91, flops:90.26, batch-reuse:1
@ 10888 train 4.0368 , allloss: 4.0484, dt: 1277.83ms, fracRes: 0.5972, norm(attn): 0.1670, norm(output): 0.2559, norm(x): 0.6284, norm(y): 0.9907, norm:0.9271, tok/sec: 102573.62, flops:89.82, batch-reuse:1
@ 10889 train 3.9837 , allloss: 3.9953, dt: 1272.76ms, fracRes: 0.5974, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6268, norm(y): 0.9906, norm:0.9656, tok/sec: 102982.52, flops:90.18, batch-reuse:1
@ 10890 train 3.8679 , allloss: 3.8794, dt: 1281.38ms, fracRes: 0.5976, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6248, norm(y): 0.9907, norm:0.9309, tok/sec: 102290.01, flops:89.57, batch-reuse:1
@ 10891 train 3.9642 , allloss: 3.9759, dt: 1272.18ms, fracRes: 0.5979, norm(attn): 0.1689, norm(output): 0.2539, norm(x): 0.6263, norm(y): 0.9909, norm:0.8407, tok/sec: 103029.73, flops:90.22, batch-reuse:1
@ 10892 train 3.9542 , allloss: 3.9657, dt: 1266.96ms, fracRes: 0.5987, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6272, norm(y): 0.9909, norm:0.8583, tok/sec: 103454.00, flops:90.59, batch-reuse:1
@ 10893 train 3.8912 , allloss: 3.9028, dt: 1247.23ms, fracRes: 0.5984, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6264, norm(y): 0.9906, norm:0.7455, tok/sec: 105090.60, flops:92.03, batch-reuse:1
@ 10894 train 3.9444 , allloss: 3.9569, dt: 1263.54ms, fracRes: 0.5987, norm(attn): 0.1650, norm(output): 0.2539, norm(x): 0.6268, norm(y): 0.9907, norm:0.8899, tok/sec: 103733.97, flops:90.84, batch-reuse:1
@ 10895 train 4.0567 , allloss: 4.0683, dt: 1249.74ms, fracRes: 0.5976, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6214, norm(y): 0.9907, norm:0.8246, tok/sec: 104879.38, flops:91.84, batch-reuse:1
@ 10896 train 4.0075 , allloss: 4.0193, dt: 1268.81ms, fracRes: 0.5964, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6215, norm(y): 0.9908, norm:0.8497, tok/sec: 103302.74, flops:90.46, batch-reuse:1
@ 10897 train 3.9768 , allloss: 3.9884, dt: 1295.46ms, fracRes: 0.5963, norm(attn): 0.1650, norm(output): 0.2539, norm(x): 0.6244, norm(y): 0.9907, norm:0.7662, tok/sec: 101177.59, flops:88.60, batch-reuse:1
@ 10898 train 3.9840 , allloss: 3.9958, dt: 1287.66ms, fracRes: 0.5957, norm(attn): 0.1670, norm(output): 0.2559, norm(x): 0.6233, norm(y): 0.9905, norm:0.8208, tok/sec: 101791.14, flops:89.14, batch-reuse:1
@ 10899 train 3.9481 , allloss: 3.9599, dt: 1293.41ms, fracRes: 0.5954, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6261, norm(y): 0.9906, norm:0.7811, tok/sec: 101338.07, flops:88.74, batch-reuse:1
@ 10900 train 3.8520 , allloss: 3.8638, dt: 1279.10ms, fracRes: 0.5964, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6271, norm(y): 0.9909, norm:0.7954, tok/sec: 102472.13, flops:89.73, batch-reuse:1
@ 10901 train 3.8232 , allloss: 3.8353, dt: 1266.98ms, fracRes: 0.5974, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6299, norm(y): 0.9910, norm:0.7578, tok/sec: 103452.62, flops:90.59, batch-reuse:1
@ 10902 train 3.9697 , allloss: 3.9815, dt: 1272.48ms, fracRes: 0.5974, norm(attn): 0.1660, norm(output): 0.2559, norm(x): 0.6302, norm(y): 0.9907, norm:0.7855, tok/sec: 103005.23, flops:90.20, batch-reuse:1
@ 10903 train 3.9168 , allloss: 3.9284, dt: 1280.32ms, fracRes: 0.5980, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6259, norm(y): 0.9907, norm:0.8033, tok/sec: 102374.53, flops:89.65, batch-reuse:1
@ 10904 train 3.8837 , allloss: 3.8960, dt: 1278.00ms, fracRes: 0.5980, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6258, norm(y): 0.9908, norm:0.8078, tok/sec: 102560.13, flops:89.81, batch-reuse:1
@ 10905 train 3.9687 , allloss: 3.9808, dt: 1256.45ms, fracRes: 0.5984, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6232, norm(y): 0.9909, norm:0.8057, tok/sec: 104318.94, flops:91.35, batch-reuse:1
@ 10906 train 3.8600 , allloss: 3.8720, dt: 1269.08ms, fracRes: 0.5984, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6220, norm(y): 0.9909, norm:0.7988, tok/sec: 103281.34, flops:90.44, batch-reuse:1
@ 10907 train 3.9247 , allloss: 3.9367, dt: 1269.83ms, fracRes: 0.5981, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6210, norm(y): 0.9908, norm:0.7924, tok/sec: 103219.98, flops:90.39, batch-reuse:1
@ 10908 train 3.9690 , allloss: 3.9808, dt: 1288.21ms, fracRes: 0.5987, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6213, norm(y): 0.9907, norm:0.7847, tok/sec: 101747.43, flops:89.10, batch-reuse:1
@ 10909 train 3.8676 , allloss: 3.8801, dt: 1298.41ms, fracRes: 0.5992, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6253, norm(y): 0.9907, norm:0.8184, tok/sec: 100947.98, flops:88.40, batch-reuse:1
@ 10910 train 4.1915 , allloss: 4.2035, dt: 1266.86ms, fracRes: 0.5997, norm(attn): 0.1631, norm(output): 0.2520, norm(x): 0.6265, norm(y): 0.9905, norm:1.0262, tok/sec: 103462.20, flops:90.60, batch-reuse:1
@ 10911 train 4.0426 , allloss: 4.0552, dt: 1293.66ms, fracRes: 0.5990, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6306, norm(y): 0.9909, norm:1.0694, tok/sec: 101319.12, flops:88.72, batch-reuse:1
@ 10912 train 3.8676 , allloss: 3.8800, dt: 1266.49ms, fracRes: 0.5963, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6263, norm(y): 0.9906, norm:1.0080, tok/sec: 103492.68, flops:90.63, batch-reuse:1
@ 10913 train 3.8662 , allloss: 3.8780, dt: 1269.63ms, fracRes: 0.5981, norm(attn): 0.1641, norm(output): 0.2539, norm(x): 0.6311, norm(y): 0.9906, norm:0.8849, tok/sec: 103236.55, flops:90.40, batch-reuse:1
@ 10914 train 3.8481 , allloss: 3.8597, dt: 1271.64ms, fracRes: 0.5981, norm(attn): 0.1641, norm(output): 0.2539, norm(x): 0.6302, norm(y): 0.9908, norm:0.9965, tok/sec: 103073.48, flops:90.26, batch-reuse:1
@ 10915 train 3.9450 , allloss: 3.9564, dt: 1268.43ms, fracRes: 0.5976, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6273, norm(y): 0.9907, norm:0.7739, tok/sec: 103334.43, flops:90.49, batch-reuse:1
@ 10916 train 3.9331 , allloss: 3.9445, dt: 1275.93ms, fracRes: 0.5979, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6258, norm(y): 0.9909, norm:0.9989, tok/sec: 102726.30, flops:89.96, batch-reuse:1
@ 10917 train 3.8323 , allloss: 3.8438, dt: 1262.97ms, fracRes: 0.5981, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6244, norm(y): 0.9908, norm:0.9050, tok/sec: 103780.38, flops:90.88, batch-reuse:1
@ 10918 train 3.8831 , allloss: 3.8949, dt: 1276.77ms, fracRes: 0.5985, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6233, norm(y): 0.9906, norm:0.8818, tok/sec: 102659.10, flops:89.90, batch-reuse:1
@ 10919 train 3.8717 , allloss: 3.8831, dt: 1277.28ms, fracRes: 0.5986, norm(attn): 0.1641, norm(output): 0.2500, norm(x): 0.6234, norm(y): 0.9908, norm:0.7988, tok/sec: 102618.04, flops:89.86, batch-reuse:1
@ 10920 train 3.8199 , allloss: 3.8315, dt: 1255.68ms, fracRes: 0.5978, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6270, norm(y): 0.9908, norm:0.8350, tok/sec: 104383.02, flops:91.41, batch-reuse:1
@ 10921 train 3.9053 , allloss: 3.9174, dt: 1275.51ms, fracRes: 0.5973, norm(attn): 0.1660, norm(output): 0.2559, norm(x): 0.6290, norm(y): 0.9906, norm:0.7736, tok/sec: 102760.11, flops:89.99, batch-reuse:1
@ 10922 train 3.8648 , allloss: 3.8766, dt: 1295.22ms, fracRes: 0.5975, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6276, norm(y): 0.9906, norm:0.8334, tok/sec: 101197.07, flops:88.62, batch-reuse:1
@ 10923 train 3.9194 , allloss: 3.9313, dt: 1292.35ms, fracRes: 0.5980, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6264, norm(y): 0.9908, norm:0.9275, tok/sec: 101421.14, flops:88.81, batch-reuse:1
@ 10924 train 3.8854 , allloss: 3.8973, dt: 1303.63ms, fracRes: 0.5981, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6280, norm(y): 0.9904, norm:0.8173, tok/sec: 100543.84, flops:88.04, batch-reuse:1
@ 10925 train 3.8554 , allloss: 3.8674, dt: 1276.32ms, fracRes: 0.5983, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6266, norm(y): 0.9905, norm:0.8597, tok/sec: 102695.37, flops:89.93, batch-reuse:1
@ 10926 train 3.9648 , allloss: 3.9765, dt: 1252.78ms, fracRes: 0.5981, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6253, norm(y): 0.9910, norm:0.9035, tok/sec: 104624.64, flops:91.62, batch-reuse:1
@ 10927 train 3.8707 , allloss: 3.8823, dt: 1286.14ms, fracRes: 0.5966, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6257, norm(y): 0.9909, norm:0.9884, tok/sec: 101910.88, flops:89.24, batch-reuse:1
@ 10928 train 3.7981 , allloss: 3.8101, dt: 1272.27ms, fracRes: 0.5970, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6256, norm(y): 0.9906, norm:0.9334, tok/sec: 103022.14, flops:90.22, batch-reuse:1
@ 10929 train 3.8291 , allloss: 3.8410, dt: 1256.46ms, fracRes: 0.5974, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6249, norm(y): 0.9907, norm:0.8876, tok/sec: 104318.82, flops:91.35, batch-reuse:1
@ 10930 train 3.8695 , allloss: 3.8821, dt: 1274.13ms, fracRes: 0.5978, norm(attn): 0.1650, norm(output): 0.2559, norm(x): 0.6296, norm(y): 0.9904, norm:0.9275, tok/sec: 102872.04, flops:90.08, batch-reuse:1
@ 10931 train 3.8983 , allloss: 3.9101, dt: 1296.14ms, fracRes: 0.5984, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6269, norm(y): 0.9909, norm:0.8895, tok/sec: 101124.57, flops:88.55, batch-reuse:1
@ 10932 train 4.0224 , allloss: 4.0374, dt: 1266.65ms, fracRes: 0.5991, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6312, norm(y): 0.9910, norm:0.9992, tok/sec: 103479.28, flops:90.62, batch-reuse:1
@ 10933 train 3.9185 , allloss: 3.9299, dt: 1289.29ms, fracRes: 0.5975, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6283, norm(y): 0.9906, norm:1.0383, tok/sec: 101662.50, flops:89.02, batch-reuse:1
@ 10934 train 3.8524 , allloss: 3.8641, dt: 1270.16ms, fracRes: 0.5972, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6268, norm(y): 0.9904, norm:0.8683, tok/sec: 103192.99, flops:90.36, batch-reuse:1
@ 10935 train 3.9394 , allloss: 3.9512, dt: 1268.89ms, fracRes: 0.5968, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6237, norm(y): 0.9902, norm:0.8138, tok/sec: 103296.94, flops:90.46, batch-reuse:1
@ 10936 train 3.8849 , allloss: 3.8965, dt: 1287.53ms, fracRes: 0.5965, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6251, norm(y): 0.9905, norm:0.9044, tok/sec: 101800.79, flops:89.15, batch-reuse:1
@ 10937 train 3.8611 , allloss: 3.8726, dt: 1275.10ms, fracRes: 0.5972, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6271, norm(y): 0.9909, norm:0.9129, tok/sec: 102793.24, flops:90.01, batch-reuse:1
@ 10938 train 3.8744 , allloss: 3.8861, dt: 1266.55ms, fracRes: 0.5976, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6272, norm(y): 0.9906, norm:0.8407, tok/sec: 103487.40, flops:90.62, batch-reuse:1
@ 10939 train 3.8960 , allloss: 3.9080, dt: 1261.74ms, fracRes: 0.5988, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6295, norm(y): 0.9908, norm:0.7888, tok/sec: 103881.88, flops:90.97, batch-reuse:1
@ 10940 train 3.8732 , allloss: 3.8848, dt: 1285.09ms, fracRes: 0.5989, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6302, norm(y): 0.9908, norm:0.8509, tok/sec: 101994.76, flops:89.32, batch-reuse:1
@ 10941 train 3.8567 , allloss: 3.8688, dt: 1278.21ms, fracRes: 0.5980, norm(attn): 0.1670, norm(output): 0.2559, norm(x): 0.6325, norm(y): 0.9904, norm:0.8035, tok/sec: 102543.56, flops:89.80, batch-reuse:1
@ 10942 train 3.9631 , allloss: 3.9746, dt: 1280.56ms, fracRes: 0.5980, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6248, norm(y): 0.9906, norm:0.8755, tok/sec: 102355.37, flops:89.63, batch-reuse:1
@ 10943 train 4.0699 , allloss: 4.0812, dt: 1262.85ms, fracRes: 0.5993, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6228, norm(y): 0.9906, norm:0.8875, tok/sec: 103790.53, flops:90.89, batch-reuse:1
@ 10944 train 3.8784 , allloss: 3.8899, dt: 1247.41ms, fracRes: 0.5984, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6229, norm(y): 0.9905, norm:0.9441, tok/sec: 105075.45, flops:92.01, batch-reuse:1
@ 10945 train 3.8426 , allloss: 3.8539, dt: 1270.98ms, fracRes: 0.5982, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6228, norm(y): 0.9907, norm:0.7761, tok/sec: 103126.65, flops:90.31, batch-reuse:1
@ 10946 train 3.9702 , allloss: 3.9816, dt: 1268.57ms, fracRes: 0.5976, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6219, norm(y): 0.9904, norm:0.8570, tok/sec: 103322.35, flops:90.48, batch-reuse:1
@ 10947 train 3.8807 , allloss: 3.8925, dt: 1286.84ms, fracRes: 0.5981, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6216, norm(y): 0.9906, norm:0.8724, tok/sec: 101855.33, flops:89.19, batch-reuse:1
@ 10948 train 3.8303 , allloss: 3.8420, dt: 1274.97ms, fracRes: 0.5976, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6209, norm(y): 0.9906, norm:0.8597, tok/sec: 102803.79, flops:90.02, batch-reuse:1
@ 10949 train 3.8770 , allloss: 3.8886, dt: 1293.86ms, fracRes: 0.5976, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6213, norm(y): 0.9906, norm:0.8257, tok/sec: 101303.45, flops:88.71, batch-reuse:1
@ 10950 train 3.8995 , allloss: 3.9114, dt: 1273.93ms, fracRes: 0.5977, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6222, norm(y): 0.9905, norm:0.8998, tok/sec: 102888.27, flops:90.10, batch-reuse:1
@ 10951 train 3.7238 , allloss: 3.7353, dt: 1281.34ms, fracRes: 0.5978, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6237, norm(y): 0.9907, norm:0.8271, tok/sec: 102293.28, flops:89.58, batch-reuse:1
@ 10952 train 3.8098 , allloss: 3.8214, dt: 1257.89ms, fracRes: 0.5976, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6242, norm(y): 0.9906, norm:0.8227, tok/sec: 104199.99, flops:91.25, batch-reuse:1
@ 10953 train 3.7009 , allloss: 3.7126, dt: 1271.21ms, fracRes: 0.5979, norm(attn): 0.1680, norm(output): 0.2520, norm(x): 0.6229, norm(y): 0.9908, norm:0.9347, tok/sec: 103108.10, flops:90.29, batch-reuse:1
@ 10954 train 3.7293 , allloss: 3.7413, dt: 1266.81ms, fracRes: 0.5985, norm(attn): 0.1650, norm(output): 0.2539, norm(x): 0.6254, norm(y): 0.9908, norm:0.9353, tok/sec: 103465.96, flops:90.60, batch-reuse:1
@ 10955 train 3.8124 , allloss: 3.8242, dt: 1259.05ms, fracRes: 0.5990, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6246, norm(y): 0.9907, norm:0.8614, tok/sec: 104103.52, flops:91.16, batch-reuse:1
@ 10956 train 3.6916 , allloss: 3.7033, dt: 1261.61ms, fracRes: 0.5987, norm(attn): 0.1650, norm(output): 0.2500, norm(x): 0.6215, norm(y): 0.9907, norm:0.8084, tok/sec: 103892.66, flops:90.98, batch-reuse:1
@ 10957 train 3.8454 , allloss: 3.8575, dt: 1265.13ms, fracRes: 0.5985, norm(attn): 0.1650, norm(output): 0.2539, norm(x): 0.6266, norm(y): 0.9906, norm:0.8321, tok/sec: 103603.70, flops:90.72, batch-reuse:1
@ 10958 train 3.7340 , allloss: 3.7456, dt: 1285.24ms, fracRes: 0.5981, norm(attn): 0.1660, norm(output): 0.2500, norm(x): 0.6209, norm(y): 0.9906, norm:0.7660, tok/sec: 101982.42, flops:89.30, batch-reuse:1
@ 10959 train 3.7067 , allloss: 3.7186, dt: 1264.37ms, fracRes: 0.5976, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6230, norm(y): 0.9905, norm:0.8102, tok/sec: 103665.98, flops:90.78, batch-reuse:1
@ 10960 train 3.7607 , allloss: 3.7725, dt: 1294.46ms, fracRes: 0.5977, norm(attn): 0.1650, norm(output): 0.2500, norm(x): 0.6196, norm(y): 0.9906, norm:0.9100, tok/sec: 101255.86, flops:88.67, batch-reuse:1
@ 10961 train 3.6657 , allloss: 3.6776, dt: 1324.72ms, fracRes: 0.5975, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6219, norm(y): 0.9906, norm:0.8196, tok/sec: 98942.84, flops:86.64, batch-reuse:1
@ 10962 train 3.6325 , allloss: 3.6439, dt: 1321.96ms, fracRes: 0.5982, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6213, norm(y): 0.9907, norm:0.7835, tok/sec: 99149.45, flops:86.82, batch-reuse:1
@ 10963 train 3.8119 , allloss: 3.8244, dt: 1300.91ms, fracRes: 0.5985, norm(attn): 0.1641, norm(output): 0.2500, norm(x): 0.6198, norm(y): 0.9906, norm:0.9052, tok/sec: 100754.29, flops:88.23, batch-reuse:1
@ 10964 train 3.6684 , allloss: 3.6807, dt: 1280.48ms, fracRes: 0.5987, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6219, norm(y): 0.9907, norm:0.9337, tok/sec: 102361.37, flops:89.64, batch-reuse:1
@ 10965 train 3.7794 , allloss: 3.7912, dt: 1288.24ms, fracRes: 0.5983, norm(attn): 0.1650, norm(output): 0.2500, norm(x): 0.6194, norm(y): 0.9907, norm:0.8302, tok/sec: 101744.74, flops:89.10, batch-reuse:1
@ 10966 train 3.8061 , allloss: 3.8174, dt: 1280.05ms, fracRes: 0.5980, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6209, norm(y): 0.9907, norm:0.7777, tok/sec: 102395.86, flops:89.67, batch-reuse:1
@ 10967 train 3.7275 , allloss: 3.7389, dt: 1264.70ms, fracRes: 0.5971, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6221, norm(y): 0.9906, norm:0.9391, tok/sec: 103638.73, flops:90.75, batch-reuse:1
@ 10968 train 3.7719 , allloss: 3.7832, dt: 1260.60ms, fracRes: 0.5963, norm(attn): 0.1670, norm(output): 0.2559, norm(x): 0.6245, norm(y): 0.9903, norm:1.0216, tok/sec: 103975.62, flops:91.05, batch-reuse:1
@ 10969 train 3.7930 , allloss: 3.8053, dt: 1261.68ms, fracRes: 0.5966, norm(attn): 0.1670, norm(output): 0.2559, norm(x): 0.6284, norm(y): 0.9904, norm:0.9148, tok/sec: 103887.01, flops:90.97, batch-reuse:1
@ 10970 train 3.7154 , allloss: 3.7273, dt: 1300.93ms, fracRes: 0.5977, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6251, norm(y): 0.9908, norm:0.7917, tok/sec: 100752.68, flops:88.23, batch-reuse:1
@ 10971 train 3.6725 , allloss: 3.6843, dt: 1311.10ms, fracRes: 0.5978, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6253, norm(y): 0.9906, norm:0.8399, tok/sec: 99971.00, flops:87.54, batch-reuse:1
@ 10972 train 3.6859 , allloss: 3.6973, dt: 1274.60ms, fracRes: 0.5978, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6228, norm(y): 0.9906, norm:0.8101, tok/sec: 102833.56, flops:90.05, batch-reuse:1
@ 10973 train 3.6454 , allloss: 3.6567, dt: 1271.53ms, fracRes: 0.5973, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6214, norm(y): 0.9906, norm:0.8955, tok/sec: 103082.26, flops:90.27, batch-reuse:1
@ 10974 train 3.7055 , allloss: 3.7173, dt: 1261.69ms, fracRes: 0.5980, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6215, norm(y): 0.9906, norm:0.8160, tok/sec: 103885.83, flops:90.97, batch-reuse:1
@ 10975 train 3.7105 , allloss: 3.7221, dt: 1258.26ms, fracRes: 0.5977, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6178, norm(y): 0.9906, norm:0.7865, tok/sec: 104169.33, flops:91.22, batch-reuse:1
@ 10976 train 3.7452 , allloss: 3.7569, dt: 1268.36ms, fracRes: 0.5977, norm(attn): 0.1660, norm(output): 0.2500, norm(x): 0.6189, norm(y): 0.9906, norm:0.8784, tok/sec: 103339.89, flops:90.49, batch-reuse:1
@ 10977 train 3.6516 , allloss: 3.6631, dt: 1282.72ms, fracRes: 0.5978, norm(attn): 0.1660, norm(output): 0.2500, norm(x): 0.6195, norm(y): 0.9907, norm:0.8575, tok/sec: 102182.89, flops:89.48, batch-reuse:1
@ 10978 train 3.7415 , allloss: 3.7530, dt: 1256.05ms, fracRes: 0.5989, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6217, norm(y): 0.9904, norm:0.9269, tok/sec: 104352.47, flops:91.38, batch-reuse:1
@ 10979 train 3.6966 , allloss: 3.7079, dt: 1256.47ms, fracRes: 0.5985, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6212, norm(y): 0.9904, norm:0.7200, tok/sec: 104317.85, flops:91.35, batch-reuse:1
@ 10980 train 3.8382 , allloss: 3.8496, dt: 1258.08ms, fracRes: 0.5981, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6191, norm(y): 0.9904, norm:0.9034, tok/sec: 104184.15, flops:91.23, batch-reuse:1
@ 10981 train 3.7262 , allloss: 3.7380, dt: 1268.69ms, fracRes: 0.5983, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6191, norm(y): 0.9905, norm:0.8639, tok/sec: 103312.64, flops:90.47, batch-reuse:1
@ 10982 train 3.7618 , allloss: 3.7730, dt: 1256.74ms, fracRes: 0.5981, norm(attn): 0.1660, norm(output): 0.2500, norm(x): 0.6168, norm(y): 0.9903, norm:0.8244, tok/sec: 104295.39, flops:91.33, batch-reuse:1
@ 10983 train 3.7470 , allloss: 3.7581, dt: 1280.55ms, fracRes: 0.5980, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6178, norm(y): 0.9903, norm:0.8059, tok/sec: 102356.04, flops:89.63, batch-reuse:1
@ 10984 train 3.8303 , allloss: 3.8416, dt: 1274.21ms, fracRes: 0.5979, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6170, norm(y): 0.9902, norm:0.8189, tok/sec: 102865.36, flops:90.08, batch-reuse:1
@ 10985 train 3.7924 , allloss: 3.8041, dt: 1274.30ms, fracRes: 0.5982, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6207, norm(y): 0.9903, norm:0.7860, tok/sec: 102857.65, flops:90.07, batch-reuse:1
@ 10986 train 3.7664 , allloss: 3.7782, dt: 1264.42ms, fracRes: 0.5985, norm(attn): 0.1631, norm(output): 0.2520, norm(x): 0.6209, norm(y): 0.9904, norm:0.7804, tok/sec: 103661.46, flops:90.77, batch-reuse:1
@ 10987 train 3.7662 , allloss: 3.7779, dt: 1261.76ms, fracRes: 0.5981, norm(attn): 0.1641, norm(output): 0.2500, norm(x): 0.6179, norm(y): 0.9903, norm:0.8276, tok/sec: 103880.47, flops:90.97, batch-reuse:1
@ 10988 train 3.7797 , allloss: 3.7914, dt: 1267.28ms, fracRes: 0.5981, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6200, norm(y): 0.9903, norm:0.7727, tok/sec: 103428.06, flops:90.57, batch-reuse:1
@ 10989 train 3.7717 , allloss: 3.7833, dt: 1275.86ms, fracRes: 0.5975, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6213, norm(y): 0.9903, norm:0.8642, tok/sec: 102732.63, flops:89.96, batch-reuse:1
@ 10990 train 3.7379 , allloss: 3.7498, dt: 1258.47ms, fracRes: 0.5968, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6198, norm(y): 0.9905, norm:0.7908, tok/sec: 104152.08, flops:91.20, batch-reuse:1
@ 10991 train 3.7408 , allloss: 3.7522, dt: 1271.86ms, fracRes: 0.5970, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6164, norm(y): 0.9903, norm:0.7944, tok/sec: 103054.97, flops:90.24, batch-reuse:1
@ 10992 train 3.7673 , allloss: 3.7786, dt: 1270.51ms, fracRes: 0.5968, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6172, norm(y): 0.9902, norm:0.8237, tok/sec: 103164.82, flops:90.34, batch-reuse:1
@ 10993 train 3.7105 , allloss: 3.7218, dt: 1285.84ms, fracRes: 0.5974, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6162, norm(y): 0.9904, norm:0.8026, tok/sec: 101934.96, flops:89.26, batch-reuse:1
@ 10994 train 3.7205 , allloss: 3.7398, dt: 1251.72ms, fracRes: 0.5982, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6205, norm(y): 0.9906, norm:0.7907, tok/sec: 104713.78, flops:91.70, batch-reuse:1
@ 10995 train 3.7597 , allloss: 3.7719, dt: 1270.25ms, fracRes: 0.5987, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6225, norm(y): 0.9906, norm:0.9670, tok/sec: 103186.04, flops:90.36, batch-reuse:1
@ 10996 train 3.7565 , allloss: 3.7708, dt: 1275.15ms, fracRes: 0.5981, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6182, norm(y): 0.9904, norm:0.7831, tok/sec: 102789.51, flops:90.01, batch-reuse:1
@ 10997 train 3.9762 , allloss: 3.9880, dt: 1269.46ms, fracRes: 0.5976, norm(attn): 0.1660, norm(output): 0.2500, norm(x): 0.6207, norm(y): 0.9901, norm:0.8900, tok/sec: 103250.55, flops:90.42, batch-reuse:1
@ 10998 train 3.9656 , allloss: 3.9772, dt: 1266.04ms, fracRes: 0.5974, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6193, norm(y): 0.9901, norm:1.2078, tok/sec: 103529.30, flops:90.66, batch-reuse:1
@ 10999 train 4.1496 , allloss: 4.1616, dt: 1278.40ms, fracRes: 0.5980, norm(attn): 0.1650, norm(output): 0.2539, norm(x): 0.6224, norm(y): 0.9901, norm:0.9070, tok/sec: 102527.95, flops:89.78, batch-reuse:1
@ 11000 train 3.9618 , allloss: 3.9738, dt: 1268.79ms, fracRes: 0.5980, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6208, norm(y): 0.9903, norm:1.0266, tok/sec: 103304.72, flops:90.46, batch-reuse:1
@ 11001 train 3.9267 , allloss: 3.9380, dt: 1295.66ms, fracRes: 0.5958, norm(attn): 0.1670, norm(output): 0.2500, norm(x): 0.6104, norm(y): 0.9901, norm:1.1592, tok/sec: 101162.38, flops:88.59, batch-reuse:1
@ 11002 train 3.9893 , allloss: 4.0009, dt: 1267.91ms, fracRes: 0.5975, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6136, norm(y): 0.9898, norm:1.6403, tok/sec: 103376.58, flops:90.53, batch-reuse:1
@ 11003 train 3.9991 , allloss: 4.0111, dt: 1271.68ms, fracRes: 0.5976, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6138, norm(y): 0.9898, norm:1.2427, tok/sec: 103069.96, flops:90.26, batch-reuse:1
@ 11004 train 4.0052 , allloss: 4.0178, dt: 1264.61ms, fracRes: 0.5985, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6214, norm(y): 0.9901, norm:0.9172, tok/sec: 103646.49, flops:90.76, batch-reuse:1
@ 11005 train 3.9661 , allloss: 3.9783, dt: 1265.79ms, fracRes: 0.5977, norm(attn): 0.1670, norm(output): 0.2559, norm(x): 0.6241, norm(y): 0.9900, norm:0.9734, tok/sec: 103549.91, flops:90.68, batch-reuse:1
@ 11006 train 4.0629 , allloss: 4.0744, dt: 1270.13ms, fracRes: 0.5983, norm(attn): 0.1641, norm(output): 0.2520, norm(x): 0.6254, norm(y): 0.9899, norm:0.8468, tok/sec: 103196.07, flops:90.37, batch-reuse:1
@ 11007 train 4.0307 , allloss: 4.0426, dt: 1289.53ms, fracRes: 0.5987, norm(attn): 0.1641, norm(output): 0.2539, norm(x): 0.6292, norm(y): 0.9899, norm:1.0222, tok/sec: 101643.46, flops:89.01, batch-reuse:1
@ 11008 train 3.9659 , allloss: 3.9777, dt: 1274.49ms, fracRes: 0.5977, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6280, norm(y): 0.9903, norm:1.0103, tok/sec: 102842.72, flops:90.06, batch-reuse:1
@ 11009 train 3.9389 , allloss: 3.9509, dt: 1259.77ms, fracRes: 0.5966, norm(attn): 0.1670, norm(output): 0.2559, norm(x): 0.6303, norm(y): 0.9901, norm:0.8584, tok/sec: 104044.65, flops:91.11, batch-reuse:1
@ 11010 train 4.0713 , allloss: 4.0837, dt: 1260.49ms, fracRes: 0.5966, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6320, norm(y): 0.9900, norm:0.9724, tok/sec: 103984.98, flops:91.06, batch-reuse:1
@ 11011 train 3.9150 , allloss: 3.9267, dt: 1274.42ms, fracRes: 0.5981, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6290, norm(y): 0.9902, norm:1.4670, tok/sec: 102848.12, flops:90.06, batch-reuse:1
@ 11012 train 3.9728 , allloss: 3.9853, dt: 1264.19ms, fracRes: 0.5979, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6266, norm(y): 0.9901, norm:1.1528, tok/sec: 103680.45, flops:90.79, batch-reuse:1
@ 11013 train 3.9320 , allloss: 3.9444, dt: 1295.45ms, fracRes: 0.5971, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6273, norm(y): 0.9902, norm:1.3299, tok/sec: 101178.89, flops:88.60, batch-reuse:1
@ 11014 train 3.9461 , allloss: 3.9582, dt: 1285.59ms, fracRes: 0.5972, norm(attn): 0.1660, norm(output): 0.2559, norm(x): 0.6303, norm(y): 0.9902, norm:0.9777, tok/sec: 101954.60, flops:89.28, batch-reuse:1
@ 11015 train 4.0077 , allloss: 4.0196, dt: 1258.50ms, fracRes: 0.5974, norm(attn): 0.1650, norm(output): 0.2559, norm(x): 0.6293, norm(y): 0.9898, norm:1.2030, tok/sec: 104149.57, flops:91.20, batch-reuse:1
@ 11016 train 3.8966 , allloss: 3.9083, dt: 1249.02ms, fracRes: 0.5970, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6281, norm(y): 0.9899, norm:0.9697, tok/sec: 104940.14, flops:91.89, batch-reuse:1
@ 11017 train 3.9586 , allloss: 3.9708, dt: 1262.43ms, fracRes: 0.5976, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6278, norm(y): 0.9902, norm:0.9825, tok/sec: 103824.87, flops:90.92, batch-reuse:1
@ 11018 train 3.9853 , allloss: 3.9973, dt: 1251.24ms, fracRes: 0.5973, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6242, norm(y): 0.9900, norm:1.1114, tok/sec: 104753.84, flops:91.73, batch-reuse:1
@ 11019 train 3.9631 , allloss: 3.9757, dt: 1251.25ms, fracRes: 0.5985, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6275, norm(y): 0.9905, norm:1.0021, tok/sec: 104752.63, flops:91.73, batch-reuse:1
@ 11020 train 3.9825 , allloss: 3.9944, dt: 1277.72ms, fracRes: 0.5980, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6268, norm(y): 0.9902, norm:0.8924, tok/sec: 102582.84, flops:89.83, batch-reuse:1
@ 11021 train 4.3557 , allloss: 4.3680, dt: 1274.85ms, fracRes: 0.5991, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6257, norm(y): 0.9899, norm:1.1971, tok/sec: 102813.87, flops:90.03, batch-reuse:1
@ 11022 train 4.1097 , allloss: 4.1223, dt: 1264.27ms, fracRes: 0.5994, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6288, norm(y): 0.9899, norm:1.0079, tok/sec: 103674.05, flops:90.79, batch-reuse:1
@ 11023 train 3.9905 , allloss: 4.0022, dt: 1272.40ms, fracRes: 0.5984, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6248, norm(y): 0.9899, norm:0.9414, tok/sec: 103011.68, flops:90.21, batch-reuse:1
@ 11024 train 4.0482 , allloss: 4.0600, dt: 1303.68ms, fracRes: 0.5985, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6248, norm(y): 0.9902, norm:1.1112, tok/sec: 100540.38, flops:88.04, batch-reuse:1
@ 11025 train 4.0196 , allloss: 4.0318, dt: 1287.09ms, fracRes: 0.5981, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6278, norm(y): 0.9901, norm:1.0108, tok/sec: 101836.32, flops:89.18, batch-reuse:1
@ 11026 train 3.9020 , allloss: 3.9139, dt: 1271.96ms, fracRes: 0.5976, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6272, norm(y): 0.9902, norm:0.8600, tok/sec: 103047.36, flops:90.24, batch-reuse:1
@ 11027 train 4.0339 , allloss: 4.0461, dt: 1284.77ms, fracRes: 0.5982, norm(attn): 0.1670, norm(output): 0.2559, norm(x): 0.6282, norm(y): 0.9899, norm:0.9968, tok/sec: 102020.12, flops:89.34, batch-reuse:1
@ 11028 train 4.0171 , allloss: 4.0290, dt: 1298.17ms, fracRes: 0.5983, norm(attn): 0.1660, norm(output): 0.2559, norm(x): 0.6281, norm(y): 0.9902, norm:0.9550, tok/sec: 100967.04, flops:88.42, batch-reuse:1
@ 11029 train 4.1408 , allloss: 4.1529, dt: 1259.77ms, fracRes: 0.5982, norm(attn): 0.1660, norm(output): 0.2578, norm(x): 0.6316, norm(y): 0.9900, norm:0.9923, tok/sec: 104044.16, flops:91.11, batch-reuse:1
@ 11030 train 4.0031 , allloss: 4.0147, dt: 1269.26ms, fracRes: 0.5985, norm(attn): 0.1670, norm(output): 0.2578, norm(x): 0.6338, norm(y): 0.9900, norm:0.9423, tok/sec: 103266.34, flops:90.43, batch-reuse:1
@ 11031 train 4.0063 , allloss: 4.0177, dt: 1276.49ms, fracRes: 0.5983, norm(attn): 0.1670, norm(output): 0.2559, norm(x): 0.6353, norm(y): 0.9897, norm:0.9334, tok/sec: 102681.23, flops:89.92, batch-reuse:1
@ 11032 train 4.0778 , allloss: 4.0893, dt: 1276.65ms, fracRes: 0.5987, norm(attn): 0.1670, norm(output): 0.2559, norm(x): 0.6325, norm(y): 0.9900, norm:0.9456, tok/sec: 102668.69, flops:89.91, batch-reuse:1
@ 11033 train 3.8713 , allloss: 3.8834, dt: 1290.92ms, fracRes: 0.5989, norm(attn): 0.1660, norm(output): 0.2559, norm(x): 0.6309, norm(y): 0.9902, norm:0.8630, tok/sec: 101534.11, flops:88.91, batch-reuse:1
@ 11034 train 3.9524 , allloss: 3.9645, dt: 1274.13ms, fracRes: 0.5990, norm(attn): 0.1689, norm(output): 0.2578, norm(x): 0.6321, norm(y): 0.9899, norm:0.8522, tok/sec: 102871.39, flops:90.08, batch-reuse:1
@ 11035 train 3.9794 , allloss: 3.9915, dt: 1253.68ms, fracRes: 0.5986, norm(attn): 0.1641, norm(output): 0.2539, norm(x): 0.6295, norm(y): 0.9901, norm:0.8432, tok/sec: 104549.41, flops:91.55, batch-reuse:1
@ 11036 train 4.1585 , allloss: 4.1707, dt: 1276.06ms, fracRes: 0.5981, norm(attn): 0.1670, norm(output): 0.2559, norm(x): 0.6316, norm(y): 0.9898, norm:0.8847, tok/sec: 102715.82, flops:89.95, batch-reuse:1
@ 11037 train 3.8904 , allloss: 3.9033, dt: 1317.92ms, fracRes: 0.5973, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6308, norm(y): 0.9900, norm:0.8673, tok/sec: 99453.56, flops:87.09, batch-reuse:1
@ 11038 train 3.8706 , allloss: 3.8832, dt: 1307.72ms, fracRes: 0.5981, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6304, norm(y): 0.9900, norm:0.8595, tok/sec: 100229.70, flops:87.77, batch-reuse:1
@ 11039 train 3.9700 , allloss: 3.9829, dt: 1308.63ms, fracRes: 0.5973, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6289, norm(y): 0.9899, norm:0.7958, tok/sec: 100159.69, flops:87.71, batch-reuse:1
@ 11040 train 4.0528 , allloss: 4.0651, dt: 1246.91ms, fracRes: 0.5964, norm(attn): 0.1699, norm(output): 0.2539, norm(x): 0.6236, norm(y): 0.9899, norm:0.9264, tok/sec: 105117.76, flops:92.05, batch-reuse:1
@ 11041 train 3.9076 , allloss: 3.9197, dt: 1299.80ms, fracRes: 0.5968, norm(attn): 0.1689, norm(output): 0.2539, norm(x): 0.6244, norm(y): 0.9901, norm:0.8519, tok/sec: 100839.97, flops:88.30, batch-reuse:1
@ 11042 train 3.9958 , allloss: 4.0079, dt: 1266.10ms, fracRes: 0.5985, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6237, norm(y): 0.9902, norm:0.8352, tok/sec: 103524.25, flops:90.65, batch-reuse:1
@ 11043 train 4.0091 , allloss: 4.0207, dt: 1282.10ms, fracRes: 0.5985, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6211, norm(y): 0.9899, norm:0.8057, tok/sec: 102231.90, flops:89.52, batch-reuse:1
@ 11044 train 4.0051 , allloss: 4.0167, dt: 1261.64ms, fracRes: 0.5983, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6230, norm(y): 0.9898, norm:0.7997, tok/sec: 103890.52, flops:90.98, batch-reuse:1
@ 11045 train 3.9230 , allloss: 3.9344, dt: 1251.23ms, fracRes: 0.5986, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6218, norm(y): 0.9900, norm:0.7455, tok/sec: 104754.64, flops:91.73, batch-reuse:1
@ 11046 train 3.8992 , allloss: 3.9111, dt: 1275.90ms, fracRes: 0.5986, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6272, norm(y): 0.9901, norm:0.8366, tok/sec: 102729.12, flops:89.96, batch-reuse:1
@ 11047 train 3.9340 , allloss: 3.9457, dt: 1278.05ms, fracRes: 0.5973, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6242, norm(y): 0.9900, norm:0.7502, tok/sec: 102556.22, flops:89.81, batch-reuse:1
@ 11048 train 3.8978 , allloss: 3.9093, dt: 1282.17ms, fracRes: 0.5965, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6258, norm(y): 0.9900, norm:0.7754, tok/sec: 102226.54, flops:89.52, batch-reuse:1
@ 11049 train 3.8536 , allloss: 3.8654, dt: 1263.06ms, fracRes: 0.5963, norm(attn): 0.1670, norm(output): 0.2559, norm(x): 0.6284, norm(y): 0.9899, norm:0.8449, tok/sec: 103773.13, flops:90.87, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9531, 0.0457, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7773, 0.0393, 0.1826, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8711, 0.0278, 0.0908, 0.0121, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8242, 0.0322, 0.0464, 0.0371, 0.0613, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8906, 0.0527, 0.0161, 0.0045, 0.0077, 0.0284, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6211, 0.0481, 0.0303, 0.0303, 0.0588, 0.0889, 0.1226, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3555, 0.0354, 0.2500, 0.0188, 0.0850, 0.0752, 0.0640, 0.1152, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8359, 0.0304, 0.0271, 0.0057, 0.0123, 0.0098, 0.0474, 0.0140, 0.0189, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3652, 0.0237, 0.1523, 0.0181, 0.0254, 0.0190, 0.0320, 0.1182, 0.0253, 0.2217, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5859, 0.0459, 0.0559, 0.0188, 0.0211, 0.0111, 0.0287, 0.0242, 0.0378, 0.0635, 0.1060, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1816, 0.0417, 0.0525, 0.0515, 0.1001, 0.0300, 0.0422, 0.0693, 0.1416, 0.0752, 0.1729, 0.0408, 0.0000, 0.0000, 0.0000],
        [0.1001, 0.0327, 0.1089, 0.0270, 0.0435, 0.0454, 0.0476, 0.0928, 0.0271, 0.1611, 0.0649, 0.1021, 0.1465, 0.0000, 0.0000],
        [0.6484, 0.0342, 0.0306, 0.0043, 0.0154, 0.0106, 0.0493, 0.0125, 0.0233, 0.0208, 0.0427, 0.0143, 0.0693, 0.0225, 0.0000],
        [0.2500, 0.0791, 0.0625, 0.0532, 0.0364, 0.0081, 0.0137, 0.0742, 0.0243, 0.0586, 0.0474, 0.0659, 0.1289, 0.0306, 0.0669]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0032, -0.0013, -0.0139,  ..., -0.0334,  0.0163, -0.0014],
        [-0.0447,  0.0010,  0.0018,  ...,  0.0058,  0.0037,  0.0064],
        [ 0.0350,  0.0366, -0.0076,  ..., -0.0195,  0.0224, -0.0059],
        ...,
        [ 0.0296,  0.0198,  0.0011,  ..., -0.0341,  0.0106,  0.0139],
        [-0.0462,  0.0042, -0.0261,  ...,  0.0098, -0.0018, -0.0139],
        [-0.0188, -0.0013, -0.0170,  ...,  0.0132, -0.0385, -0.0020]], device='cuda:0', requires_grad=True)
K: tensor([ 1.3594,  0.2041,  0.4961,  0.5391,  0.8633,  0.1689, -0.3340, -0.9492, -0.8125, -0.3594, -0.4043, -0.5898,  0.0064, -0.9219, -0.1318, -0.7188,  0.7148,  0.4844, -1.6250,  0.2891,  1.6250,  0.8555, -1.0312,  0.8789, -0.5586, -0.1309, -0.6016,  0.6562,  0.4199,  0.0069,  1.5234,  0.4551,
         1.0781,  0.6602,  0.3516,  1.6016, -1.7969,  0.5820, -0.2520, -2.1406,  0.3750,  0.5547,  0.5234,  1.7891, -0.2188,  0.1475,  0.0469,  0.4199,  1.2578, -0.1299,  0.3320,  0.6836, -1.3672, -0.2100,  1.3984, -0.6758, -0.6836,  0.6680,  0.3867, -0.4609,  1.1875, -0.4941,  0.4590, -0.1631],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0383,  0.0072, -0.0066,  ...,  0.0069, -0.0045, -0.0087],
        [ 0.0176, -0.0142,  0.0126,  ...,  0.0017,  0.0434,  0.0141],
        [-0.0484,  0.0378,  0.0062,  ..., -0.0201, -0.0390, -0.0441],
        ...,
        [ 0.0090,  0.0064,  0.0357,  ...,  0.0209,  0.0149,  0.0222],
        [ 0.0061, -0.0132,  0.0217,  ...,  0.0268,  0.0064,  0.0084],
        [-0.0017, -0.0088,  0.0416,  ..., -0.0226,  0.0228,  0.0043]], device='cuda:0', requires_grad=True)
Q: tensor([    -0.1128,      0.0089,     -1.1406,     -0.1416,      0.0140,      0.0017,     -1.9766,     -0.3828,      0.2773,      0.7070,     -1.0391,     -0.0850,     -0.1221,     -0.2695,     -0.1787,      0.1865,      0.5547,     -1.0156,      0.7461,      0.5273,     -0.5391,      0.2871,
             1.1406,      0.2109,      0.8750,      0.2656,     -1.0547,     -2.0781,      0.0913,      0.0027,      0.6797,      0.3145,     -0.3008,     -1.4062,     -0.0654,     -0.3418,      0.9531,      0.6445,     -0.1245,      1.2734,      1.6875,      0.3848,      0.3262,      0.0947,
            -0.5273,      1.2188,     -1.6328,      0.5547,     -0.3379,      0.3574,     -1.4062,     -0.4590,     -0.4199,     -0.9336,     -0.6953,     -0.0081,      0.2812,     -1.2891,      0.1973,     -0.1182,     -1.4219,     -0.1797,      0.6719,      1.3750], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -3.0469, -2.5781, -4.3438, -4.2500, -3.8125, -2.6250, -2.5625, -4.2188, -3.2656, -2.8125, -2.6875, -0.6641, -4.1875, -3.0469],
        [ 0.0000, -2.9844, -1.4453, -2.7812, -2.2656, -3.4844, -3.2188, -1.7344, -1.9922, -1.3047, -0.9297, -1.5391, -0.5430, -1.6719, -1.1016],
        [ 0.0000, -3.4375, -2.2656, -4.2812, -2.7344, -3.3906, -3.2188, -3.3594, -2.2656, -2.1562, -0.5742, -2.3594, -2.1406, -2.3125, -1.2266],
        [ 0.0000, -3.2344, -2.8750, -3.0938, -2.5938, -4.0000, -3.4062, -3.1875, -2.0000, -2.1719, -1.3750, -2.1719, -1.7344, -1.5000, -1.2812],
        [ 0.0000, -2.8281, -4.0000, -5.2812, -4.7500, -3.4375, -2.1094, -3.8281, -4.1562, -4.8750, -3.6250, -4.0938, -2.4219, -3.8281, -3.2969],
        [ 0.0000, -2.5625, -3.0156, -3.0156, -2.3594, -1.9453, -1.6250, -2.9688, -0.8047, -2.2188, -0.5469, -1.9297, -2.2500, -0.3184, -1.1641],
        [ 0.0000, -2.3125, -0.3496, -2.9375, -1.4297, -1.5547, -1.7109, -1.1250, -1.3516,  0.5000, -0.1074, -0.8906, -0.0205, -1.5391, -0.6250],
        [ 0.0000, -3.3125, -3.4219, -5.0000, -4.2188, -4.4375, -2.8750, -4.0938, -3.7812, -3.7188, -2.9531, -4.0312, -2.2656, -3.8125, -2.7188],
        [ 0.0000, -2.7344, -0.8750, -3.0000, -2.6562, -2.9531, -2.4375, -1.1328, -2.6719, -0.5000, -1.5703, -1.5000,  0.1279, -2.6406, -1.3750],
        [ 0.0000, -2.5469, -2.3594, -3.4375, -3.3281, -3.9688, -3.0156, -3.1875, -2.7500, -2.2188, -1.7109, -2.1094, -1.7031, -2.5938, -1.3359],
        [ 0.0000, -1.4766, -1.2422, -1.2578, -0.5977, -1.8047, -1.4609, -0.9648, -0.2480, -0.8867, -0.0527, -1.5000, -0.8242,  0.0251, -0.1533],
        [ 0.0000, -1.1172,  0.0869, -1.3125, -0.8359, -0.7891, -0.7422, -0.0737, -1.3047,  0.4766, -0.4316,  0.0210,  0.3828, -1.1641, -0.4629],
        [ 0.0000, -2.9531, -3.0625, -5.0312, -3.7500, -4.1250, -2.5781, -3.9531, -3.3281, -3.4375, -2.7188, -3.8125, -2.2344, -3.3750, -2.6562],
        [ 0.0000, -1.1484, -1.3828, -1.5469, -1.9297, -3.4219, -2.9062, -1.2109, -2.3281, -1.4531, -1.6641, -1.3281, -0.6641, -2.0938, -1.3203]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8874],
        [0.8561],
        [0.8473],
        [0.7071],
        [0.7520],
        [0.6471],
        [0.5157],
        [0.5714],
        [0.5053],
        [0.4427],
        [0.3553],
        [0.2315],
        [0.3733],
        [0.2466]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8594,     0.1387,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3965,     0.5195,     0.0854,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2949,     0.2637,     0.3906,     0.0525,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2090,     0.3223,     0.0947,     0.1992,     0.1738,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1816,     0.2246,     0.0483,     0.0354,     0.3242,     0.1855,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1187,     0.1113,     0.0376,     0.0184,     0.2188,     0.2461,     0.2500,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0874,     0.0408,     0.0201,     0.0061,     0.0586,     0.1494,     0.6016,     0.0344,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0623,     0.0201,     0.0065,     0.0014,     0.0254,     0.1396,     0.6289,     0.0138,     0.1025,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0164,     0.0144,     0.0058,     0.0044,     0.0181,     0.0376,     0.0625,     0.0659,     0.7461,     0.0293,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0747,     0.0062,     0.0021,     0.0007,     0.0142,     0.0452,     0.3105,     0.0037,     0.3008,     0.0283,     0.2129,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0164,     0.0089,     0.0085,     0.0022,     0.0065,     0.0427,     0.2334,     0.0581,     0.0508,     0.1074,     0.4043,     0.0610,     0.0000,     0.0000,     0.0000],
        [    0.0420,     0.0021,     0.0042,     0.0016,     0.0107,     0.0349,     0.1533,     0.0220,     0.2129,     0.0378,     0.3340,     0.0525,     0.0928,     0.0000,     0.0000],
        [    0.0337,     0.0029,     0.0015,     0.0002,     0.0048,     0.0417,     0.2598,     0.0042,     0.0225,     0.0164,     0.4023,     0.0148,     0.0317,     0.1641,     0.0000],
        [    0.0131,     0.0024,     0.0010,     0.0002,     0.0018,     0.0101,     0.0544,     0.0112,     0.0493,     0.0132,     0.1040,     0.0703,     0.0884,     0.3984,     0.1816]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0360, -0.0253, -0.0166,  ..., -0.0143, -0.0211,  0.0031],
        [-0.0242,  0.0180, -0.0193,  ...,  0.0131, -0.0055, -0.0573],
        [ 0.0258,  0.0146,  0.0145,  ...,  0.0138,  0.0320,  0.0202],
        ...,
        [ 0.0124, -0.0185,  0.0343,  ...,  0.0299, -0.0318, -0.0118],
        [-0.0213, -0.0143,  0.0231,  ...,  0.0096,  0.0327,  0.0038],
        [ 0.0278,  0.0510,  0.0170,  ..., -0.0110, -0.0034,  0.0230]], device='cuda:0', requires_grad=True)
K: tensor([ 3.7656, -0.0762, -1.4375, -0.7422, -2.2812, -0.2500, -1.1484,  0.6133, -0.7227, -0.0898,  0.0593,  1.9141, -2.0781,  1.5156,  0.5195, -3.1875,  1.3594, -0.8203,  1.3281,  1.5781, -0.1099,  1.2734,  2.0625, -4.1250,  0.9297, -1.8828, -2.9531,  0.4043,  2.0625, -0.1777,  2.8906,  1.1953,
        -0.3418, -0.3672, -2.3125, -0.4629, -0.2109,  1.8516, -0.8008,  0.8516,  1.5234, -1.1094, -0.3105,  2.0781,  1.1484,  0.8164, -2.2656, -1.9375,  1.1250,  0.3047, -1.8203,  1.8516, -0.7227,  0.6562, -0.4219, -0.6484,  0.7461,  0.2949, -2.2656,  1.8672,  0.7070,  1.2969,  2.9688, -0.6055],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0360, -0.0076, -0.0137,  ...,  0.0045,  0.0283, -0.0111],
        [ 0.0130,  0.0052, -0.0516,  ..., -0.0121, -0.0109, -0.0166],
        [ 0.0489,  0.0037,  0.0324,  ..., -0.0202,  0.0231,  0.0058],
        ...,
        [-0.0284, -0.0074,  0.0073,  ...,  0.0088, -0.0024, -0.0366],
        [ 0.0389,  0.0114, -0.0066,  ...,  0.0083,  0.0011, -0.0093],
        [ 0.0011, -0.0349, -0.0251,  ...,  0.0100, -0.0047,  0.0184]], device='cuda:0', requires_grad=True)
Q: tensor([    -0.9883,     -1.7891,     -2.7500,     -1.6719,      0.1387,     -1.5078,      0.0464,      0.0806,      1.0859,      0.8594,      1.2266,     -0.1221,      0.4805,     -0.3926,     -0.8633,      0.1357,     -2.2188,     -1.1641,     -1.8047,      1.3906,     -2.7188,     -0.1118,
            -1.4922,      1.9141,     -0.0476,     -0.3164,      1.3750,     -0.8945,     -2.0312,      0.3359,      1.2969,     -0.2578,     -2.2188,      0.4199,     -1.5391,      0.7930,      2.6719,      1.1406,      0.5586,      1.2734,      2.0156,      0.4062,     -0.6016,      2.1094,
             1.5859,     -0.4941,      0.6016,     -2.5781,      2.3594,      1.0938,     -1.5234,      2.2969,     -0.7383,     -2.0000,     -0.4453,      1.2344,      0.9805,      0.9961,      0.0022,      0.1035,     -0.2852,      0.6172,      3.7500,     -1.3125], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -1.8281, -1.9922, -3.5625, -1.5156, -1.6875, -1.3203, -4.5000, -2.0312, -3.1719, -1.3359, -3.5781, -3.6250, -1.6875,  0.2617],
        [ 0.0000,  0.2695, -1.5391, -2.0312, -0.7891, -0.7383,  0.5039, -1.2500, -0.3730, -0.1875,  0.9453,  0.9961, -0.2930,  0.4551,  2.2656],
        [ 0.0000, -0.1108,  0.2832, -1.7188, -0.3516,  0.4473,  1.7578, -0.2324,  0.9648,  2.0312,  2.2188,  2.1875,  1.9688,  2.6094,  5.4375],
        [ 0.0000,  0.4355, -0.7930, -0.0469, -0.1826,  1.8125,  2.6875,  1.0391,  4.3125,  2.0000,  4.7812,  2.0938,  2.8281,  6.0938,  5.3438],
        [ 0.0000,  0.2129, -1.3203, -1.6328,  0.5820,  0.0238,  1.5781,  0.0767,  2.9375,  1.0312,  4.0625,  2.4688,  2.4219,  4.5625,  4.4062],
        [ 0.0000, -0.0649, -1.1484, -1.8594,  0.6094,  0.7266,  0.7461,  0.1836,  3.4531,  0.5586,  3.0156,  1.1719,  2.5156,  4.9688,  4.2812],
        [ 0.0000, -0.7617, -1.4688, -2.6562, -0.3984,  0.5391,  1.9297, -0.9297,  2.0781,  0.1895,  3.4062,  1.4297,  1.4766,  3.8125,  4.3125],
        [ 0.0000, -1.1250, -2.2656, -3.8125, -0.8945,  0.8047,  2.3125, -1.5078,  0.4980, -0.2168,  3.2656,  0.1191,  0.4766,  2.5312,  4.3125],
        [ 0.0000, -0.1270, -1.0312, -1.3125,  0.1006,  0.8281,  1.3438,  1.3906,  3.8125,  0.5820,  4.0000,  2.9375,  3.6250,  5.5625,  4.1562],
        [ 0.0000, -2.4844, -3.5625, -4.6562, -1.6562, -0.5078,  1.4297, -3.0000,  1.3906, -0.9727,  1.0469, -0.4375, -0.5508,  3.2656,  2.4062],
        [ 0.0000, -0.6133, -0.6484, -2.0156, -0.9297,  0.9570,  2.6562,  1.2656,  1.1328,  1.8828,  3.2031,  1.3125,  2.2344,  2.9844,  5.4375],
        [ 0.0000, -3.0000, -2.2812, -3.2812, -1.3672, -0.1826,  1.2969, -0.6445,  1.6250, -0.1055,  2.0781,  0.2246,  0.7930,  3.2344,  3.2500],
        [ 0.0000, -2.4531, -3.0781, -4.9062, -1.9453,  0.2129,  2.0312, -2.0781, -0.4043, -0.7227,  2.4844, -0.8242, -0.0608,  1.5859,  3.5312],
        [ 0.0000, -1.6953, -2.6250, -4.2500, -2.0156, -0.2617,  1.4219, -0.1582,  1.3203,  0.0069,  2.0781,  1.6797,  1.9062,  3.4062,  2.6250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7767],
        [0.4322],
        [0.3592],
        [0.5030],
        [0.4106],
        [0.2976],
        [0.1791],
        [0.2886],
        [0.1722],
        [0.3360],
        [0.1399],
        [0.1323],
        [0.2457],
        [0.1302]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0071,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9766,     0.0112,     0.0117,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9766,     0.0140,     0.0048,     0.0061,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9844,     0.0034,     0.0020,     0.0007,     0.0114,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0029,     0.0022,     0.0005,     0.0059,     0.0013,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9297,     0.0115,     0.0067,     0.0060,     0.0047,     0.0064,     0.0337,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4941,     0.0374,     0.0742,     0.0383,     0.0286,     0.0503,     0.0791,     0.1973,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9805,     0.0023,     0.0011,     0.0006,     0.0026,     0.0013,     0.0052,     0.0048,     0.0036,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0017,     0.0005,     0.0005,     0.0007,     0.0004,     0.0011,     0.0036,     0.0010,     0.0034,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9609,     0.0065,     0.0027,     0.0022,     0.0016,     0.0014,     0.0056,     0.0135,     0.0030,     0.0023,     0.0004,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8047,     0.0104,     0.0056,     0.0059,     0.0090,     0.0039,     0.0148,     0.0403,     0.0128,     0.0170,     0.0017,     0.0747,     0.0000,     0.0000,     0.0000],
        [    0.4219,     0.0062,     0.0126,     0.0089,     0.0067,     0.0115,     0.0176,     0.0903,     0.0168,     0.0659,     0.0020,     0.0481,     0.2910,     0.0000,     0.0000],
        [    0.9648,     0.0020,     0.0011,     0.0006,     0.0024,     0.0012,     0.0044,     0.0064,     0.0034,     0.0014,     0.0003,     0.0017,     0.0078,     0.0028,     0.0000],
        [    0.9844,     0.0014,     0.0004,     0.0004,     0.0012,     0.0006,     0.0016,     0.0027,     0.0014,     0.0006,     0.0001,     0.0007,     0.0028,     0.0011,     0.0006]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0062, -0.0108,  0.0415,  ..., -0.0025, -0.0097, -0.0216],
        [ 0.0516, -0.0483, -0.0088,  ..., -0.0175, -0.0168, -0.0381],
        [ 0.0530, -0.0377,  0.0442,  ..., -0.0138, -0.0145, -0.0025],
        ...,
        [ 0.0339,  0.0219, -0.0287,  ..., -0.0030,  0.0125,  0.0246],
        [ 0.0167,  0.0171,  0.0011,  ..., -0.0128, -0.0449, -0.0291],
        [ 0.0214, -0.0150,  0.0034,  ..., -0.0004, -0.0111,  0.0102]], device='cuda:0', requires_grad=True)
K: tensor([-1.1328, -0.7031, -0.7539, -0.2354, -2.4375,  1.6250, -1.5859,  2.9219, -1.7188, -1.3047,  1.8672,  0.7305, -1.7266, -2.0625, -1.7109,  0.3984,  1.6797,  2.0938, -1.7578,  1.0078,  2.3594,  0.6953, -2.1875, -0.0430,  1.8359, -1.6016, -0.1553, -2.1562,  2.0156,  0.2041,  1.5234,  2.8125,
        -0.5273,  1.4219,  2.4844, -0.7930, -1.5234,  1.6562,  1.6953, -1.7734,  2.2812, -1.7969,  0.1836,  1.4219,  0.2393,  2.8594, -1.5469, -2.8594, -0.1826,  2.9531, -0.9531, -0.8477,  1.8047, -0.4863,  1.9453, -1.6016, -2.0781, -2.2812, -2.0469, -1.6562, -2.8906, -1.5391,  1.4453,  0.4355],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0026,  0.0419,  0.0148,  ..., -0.0082,  0.0380, -0.0119],
        [-0.0112,  0.0426, -0.0036,  ...,  0.0152,  0.0187, -0.0047],
        [-0.0269, -0.0022,  0.0193,  ..., -0.0290,  0.0664, -0.0332],
        ...,
        [ 0.0289, -0.0140,  0.0149,  ..., -0.0167, -0.0131, -0.0106],
        [ 0.0034,  0.0117, -0.0004,  ...,  0.0228,  0.0166,  0.0080],
        [ 0.0098, -0.0322, -0.0163,  ...,  0.0350,  0.0224,  0.0084]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.8750,  1.1328, -1.1016,  0.5625,  0.1060, -1.9375,  0.8242,  0.2041,  0.0854,  0.3809, -0.3398,  0.3535,  0.9727,  1.1484,  0.1768, -1.6953, -0.4258, -1.9297,  1.1250,  0.0198,  0.0625,  0.6484,  1.1250,  0.6523,  0.6914,  0.0123,  0.8281,  0.3926, -1.0547, -1.3125,  0.0854, -0.6133,
        -1.1016, -1.2500, -0.5469,  0.2754,  0.8711, -1.1562,  0.3672, -0.1133, -1.5859,  1.6484, -0.2168, -0.1309,  0.1143, -0.2490,  1.0000,  0.4668, -0.8125, -0.6719,  0.5859, -0.5547, -0.2314, -0.8711, -0.1562,  0.9609, -0.3750,  1.1094,  1.4219,  2.4062,  1.3516,  0.8906, -1.9219, -0.0284],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -4.9375, -5.9062, -6.2500, -6.0000, -6.8125, -5.7188, -5.0938, -5.9375, -6.6562, -7.7188, -5.6250, -5.4688, -6.2500, -6.5625],
        [ 0.0000, -4.4688, -4.4375, -5.2812, -5.7188, -5.8750, -5.1562, -3.9531, -5.5938, -5.7188, -7.2812, -4.8750, -4.4375, -5.8125, -5.6875],
        [ 0.0000, -4.2500, -5.3125, -5.0625, -5.5938, -5.4688, -4.8125, -4.9375, -5.5625, -5.5000, -6.5000, -5.6875, -5.1250, -5.7188, -5.2188],
        [ 0.0000, -5.6875, -6.2188, -7.1875, -4.4688, -5.8750, -4.4062, -3.9531, -5.0000, -6.3750, -7.3750, -5.4062, -4.1562, -5.1250, -6.6250],
        [ 0.0000, -5.8438, -6.0938, -7.5312, -5.1250, -6.5938, -4.6875, -5.0000, -5.6562, -7.1250, -7.7500, -6.0312, -5.0938, -5.9062, -6.6562],
        [ 0.0000, -4.4062, -4.9375, -5.0625, -5.3125, -4.9688, -3.3281, -3.0938, -4.3438, -5.6250, -6.5625, -4.1875, -3.2031, -4.4375, -5.4375],
        [ 0.0000, -2.5781, -1.8984, -2.5625, -2.8594, -2.2812, -1.8281, -0.9219, -2.2656, -1.4766, -3.4688, -1.4453, -0.7188, -2.2031, -2.4844],
        [ 0.0000, -6.0625, -6.8438, -7.4375, -5.9375, -6.5938, -5.2188, -5.3125, -5.6250, -7.1250, -8.1875, -6.6250, -5.1875, -5.8438, -6.8438],
        [ 0.0000, -6.3438, -7.6562, -7.5938, -7.2188, -7.8125, -6.7812, -5.6250, -6.8750, -5.6562, -8.8125, -5.8438, -5.3125, -6.6562, -7.8438],
        [ 0.0000, -5.0000, -5.8750, -6.0625, -6.4062, -6.5625, -5.1562, -4.2500, -5.7812, -6.0312, -7.8125, -5.2812, -4.5000, -5.7812, -6.6562],
        [ 0.0000, -4.3438, -4.9688, -4.9062, -4.5000, -5.3438, -3.9844, -2.9844, -4.1562, -3.8594, -6.1250, -2.3750, -2.0469, -4.1562, -5.6875],
        [ 0.0000, -4.2188, -3.5156, -3.8594, -4.1250, -3.6094, -3.1719, -1.5391, -3.2188, -1.8516, -5.3125, -2.1719, -0.3672, -3.1094, -4.3438],
        [ 0.0000, -6.1875, -6.7500, -7.3125, -6.0000, -6.6875, -5.3750, -5.0312, -5.6562, -6.5625, -8.1875, -6.3750, -4.8125, -5.8438, -6.8750],
        [ 0.0000, -6.5312, -7.7812, -7.8750, -6.7500, -7.4062, -6.4062, -5.9062, -6.5625, -7.5000, -9.3125, -7.2500, -5.8750, -6.7812, -7.4375]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9626],
        [0.9932],
        [0.9896],
        [0.9870],
        [0.9932],
        [0.9896],
        [0.8927],
        [0.9909],
        [0.9980],
        [0.9896],
        [0.9648],
        [0.9391],
        [0.9886],
        [0.9974]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1016,     0.8984,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0287,     0.6133,     0.3555,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0366,     0.4277,     0.4941,     0.0400,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0491,     0.4941,     0.3418,     0.0481,     0.0664,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0425,     0.5938,     0.1602,     0.0520,     0.0850,     0.0674,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0144,     0.4492,     0.0452,     0.0114,     0.0115,     0.0200,     0.4473,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0047,     0.0737,     0.0405,     0.0059,     0.0046,     0.0204,     0.7461,     0.1055,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0170,     0.1484,     0.0072,     0.0022,     0.0023,     0.0060,     0.7109,     0.0339,     0.0713,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0088,     0.0520,     0.0167,     0.0049,     0.0087,     0.0198,     0.2773,     0.0972,     0.1689,     0.3477,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0151,     0.0214,     0.0075,     0.0016,     0.0047,     0.0117,     0.2041,     0.0466,     0.0302,     0.5938,     0.0640,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0061,     0.0217,     0.0164,     0.0052,     0.0047,     0.0106,     0.1748,     0.1396,     0.0483,     0.2773,     0.1089,     0.1855,     0.0000,     0.0000,     0.0000],
        [    0.0106,     0.0303,     0.0162,     0.0028,     0.0029,     0.0117,     0.1494,     0.0674,     0.0576,     0.2734,     0.0840,     0.1523,     0.1426,     0.0000,     0.0000],
        [    0.0204,     0.0488,     0.0028,     0.0007,     0.0009,     0.0023,     0.1357,     0.0142,     0.0197,     0.2334,     0.3164,     0.0918,     0.0437,     0.0688,     0.0000],
        [    0.0030,     0.0132,     0.0020,     0.0009,     0.0015,     0.0042,     0.0344,     0.0283,     0.0256,     0.0771,     0.0498,     0.0972,     0.0898,     0.1260,     0.4473]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0048,  0.0081, -0.0050,  ..., -0.0310, -0.0098, -0.0245],
        [-0.0457,  0.0163, -0.0119,  ...,  0.0033, -0.0018, -0.0011],
        [-0.0453, -0.0154,  0.0424,  ..., -0.0214, -0.0305, -0.0268],
        ...,
        [-0.0071, -0.0086, -0.0126,  ..., -0.0291, -0.0444, -0.0484],
        [-0.0239, -0.0283, -0.0255,  ..., -0.0130, -0.0127,  0.0533],
        [-0.0040,  0.0199,  0.0203,  ..., -0.0097,  0.0135, -0.0132]], device='cuda:0', requires_grad=True)
K: tensor([    -1.9609,     -2.0156,     -0.6719,      0.6562,     -0.0130,     -2.2500,     -1.5859,      0.3047,     -0.1201,     -1.8594,     -0.2891,     -2.3594,      2.8906,     -1.8438,     -0.3047,      1.8125,      2.7812,     -0.0464,      0.6836,     -0.0830,      1.0312,     -2.1875,
             1.0703,     -1.8281,     -0.9023,      1.2578,     -0.7578,      1.3516,      0.6875,      1.7578,     -0.6953,     -2.3281,     -0.4434,     -1.4141,      1.8594,     -1.0234,      2.6094,     -0.0063,     -1.3828,      0.1138,     -2.6562,      1.1641,      0.7500,      1.9844,
             0.6797,      0.0014,     -2.4062,     -0.7578,      1.7812,     -0.0082,      1.2266,     -0.3574,     -0.1406,     -2.1719,     -1.8281,     -2.2188,      1.9922,     -0.8320,     -0.6523,      1.5703,      0.0718,     -1.2578,      2.1250,     -0.6992], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[-0.0075, -0.0047,  0.0141,  ...,  0.0237, -0.0237, -0.0147],
        [ 0.0412, -0.0080,  0.0149,  ...,  0.0005,  0.0270,  0.0222],
        [-0.0176,  0.0098,  0.0494,  ...,  0.0223,  0.0238, -0.0114],
        ...,
        [ 0.0171,  0.0018, -0.0265,  ..., -0.0005,  0.0059, -0.0027],
        [-0.0117,  0.0415, -0.0279,  ...,  0.0036,  0.0069, -0.0376],
        [ 0.0036, -0.0140, -0.0012,  ...,  0.0138, -0.0033,  0.0023]], device='cuda:0', requires_grad=True)
Q: tensor([-0.4551, -0.8164, -1.7891,  1.1094, -2.4375, -1.0547, -0.1758,  0.4102,  0.5000, -0.9766, -0.8438, -0.5625, -2.1406, -2.1562,  1.4141, -0.3027, -0.5156, -0.9492,  1.1953, -1.3750, -0.6602,  1.6172, -1.0000, -2.2188, -0.7656, -1.5625,  1.9375,  3.9219, -1.8281,  1.9297,  0.4453, -1.3828,
        -1.5547,  0.7148, -1.5156, -1.9219,  1.7812, -1.4766, -2.5625,  0.4805, -0.3418, -0.2373,  2.0312, -0.3418, -1.0859, -1.3438, -1.4531, -2.7969,  2.1875,  1.5625,  0.7344,  0.0425, -1.6484, -0.7656, -0.3926, -1.4766, -0.2520,  0.2354, -0.7617,  1.5000, -0.8281,  0.8203,  0.2891, -1.3828],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  2.1875,  1.1250,  0.6328,  0.8008,  1.0781,  3.2656,  2.4531,  2.6094,  2.9062,  2.7812,  2.5938,  2.5000,  3.1250,  3.8594],
        [ 0.0000,  3.0625,  2.5156,  1.4688,  1.2891,  1.9062,  4.3438,  4.2188,  3.7344,  4.9375,  4.0312,  5.1250,  5.2812,  4.8438,  6.2500],
        [ 0.0000,  2.4531,  2.6094,  0.0898,  1.2656,  2.3594,  3.8594,  3.9844,  3.3750,  5.7188,  4.5938,  6.5312,  5.9062,  5.2188,  7.4688],
        [ 0.0000,  2.3125,  1.9375, -0.0192,  0.2988,  1.4141,  3.3750,  3.2969,  3.8125,  5.1562,  3.0625,  4.8438,  3.9844,  5.2812,  5.9375],
        [ 0.0000,  2.6406,  1.3281,  0.2041,  0.6953,  0.4609,  2.3750,  2.7188,  3.6250,  3.8906,  3.9219,  4.4375,  3.2188,  5.1875,  6.6875],
        [ 0.0000,  3.4375,  1.1406, -0.2324, -0.2236,  0.3281,  3.4375,  2.6875,  2.6406,  3.4219,  2.2344,  3.2031,  2.8125,  3.3594,  6.4375],
        [ 0.0000,  2.7500,  2.1562,  0.2236, -0.0258,  1.4688,  5.0625,  3.1094,  3.2344,  5.0938,  3.8594,  4.8438,  4.3125,  4.4688,  6.8750],
        [ 0.0000,  2.1719, -0.8516, -2.0625, -1.9844, -1.0469,  3.7344,  0.6953,  1.4297,  3.7500,  4.3438,  2.6406,  1.4844,  2.3594,  5.2812],
        [ 0.0000,  1.7812,  0.6406, -0.5898, -0.0150,  0.8086,  3.4531,  2.4062,  2.9531,  3.6719,  3.2188,  3.7656,  3.2812,  4.4375,  6.3750],
        [ 0.0000,  0.3457, -0.6953, -2.2344, -1.1562, -0.2500,  2.6094,  1.1328,  0.6914,  3.6719,  1.4453,  2.6719,  2.2812,  1.8594,  5.6250],
        [ 0.0000,  1.2578,  0.9766, -0.1748, -0.2695,  0.5469,  3.3438,  3.1250,  2.0625,  3.8125,  2.8750,  3.4062,  4.2812,  3.6562,  5.7188],
        [ 0.0000,  1.0469,  0.4219, -1.3281, -1.2812,  0.0908,  2.6406,  1.8438,  1.6875,  3.2500,  2.0625,  2.6562,  2.5938,  3.1719,  5.3438],
        [ 0.0000,  0.8750, -1.9766, -3.4062, -3.1250, -2.1719,  1.8984, -0.3594, -0.0332,  2.4375,  2.7500,  1.5078,  0.7617,  1.2188,  4.1875],
        [ 0.0000,  1.4844, -0.4082, -1.2500, -0.7109,  0.3379,  2.4531,  2.2500,  2.1406,  3.2500,  2.8125,  3.4844,  3.4062,  3.7344,  5.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3908],
        [0.1080],
        [0.1145],
        [0.1177],
        [0.0991],
        [0.3358],
        [0.0967],
        [0.0831],
        [0.0714],
        [0.0929],
        [0.0933],
        [0.0711],
        [0.0819],
        [0.0843]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0075, 0.9922, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0139, 0.9297, 0.0544, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0259, 0.8984, 0.0464, 0.0288, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0010, 0.7305, 0.1699, 0.0283, 0.0703, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0095, 0.6367, 0.0938, 0.0098, 0.1309, 0.1177, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0132, 0.4160, 0.3418, 0.0249, 0.0209, 0.0476, 0.1348, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0019, 0.1221, 0.0879, 0.0044, 0.0483, 0.0151, 0.0209, 0.6992, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0154, 0.3418, 0.1206, 0.0125, 0.0376, 0.0294, 0.0718, 0.3359, 0.0347, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0064, 0.4082, 0.0645, 0.0137, 0.0208, 0.0132, 0.1309, 0.2227, 0.0306, 0.0879, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0154, 0.2832, 0.0569, 0.0110, 0.0233, 0.0209, 0.0898, 0.1895, 0.0304, 0.1299, 0.1494, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0120, 0.4902, 0.0496, 0.0219, 0.0081, 0.0182, 0.1226, 0.1533, 0.0084, 0.0520, 0.0349, 0.0291, 0.0000, 0.0000, 0.0000],
        [0.0133, 0.1514, 0.0430, 0.0028, 0.0396, 0.0089, 0.0327, 0.1377, 0.0630, 0.1846, 0.0474, 0.1245, 0.1504, 0.0000, 0.0000],
        [0.0483, 0.1885, 0.0278, 0.0040, 0.0142, 0.0082, 0.0391, 0.0635, 0.0151, 0.1934, 0.0527, 0.0659, 0.2422, 0.0374, 0.0000],
        [0.0347, 0.3535, 0.0391, 0.0170, 0.0227, 0.0153, 0.2432, 0.0615, 0.0081, 0.0271, 0.0267, 0.0334, 0.0522, 0.0073, 0.0576]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0062, -0.0254, -0.0042,  ..., -0.0031,  0.0232, -0.0127],
        [ 0.0236, -0.0469, -0.0115,  ...,  0.0283,  0.0234,  0.0025],
        [-0.0102, -0.0222, -0.0342,  ...,  0.0319,  0.0085, -0.0141],
        ...,
        [ 0.0298,  0.0163, -0.0157,  ..., -0.0168,  0.0036,  0.0176],
        [ 0.0120, -0.0020,  0.0237,  ...,  0.0310, -0.0079,  0.0123],
        [-0.0313,  0.0421, -0.0103,  ...,  0.0035,  0.0259,  0.0427]], device='cuda:0', requires_grad=True)
K: tensor([-0.5781, -0.9258, -0.2168,  0.1973, -0.8047,  0.6836, -0.1504, -0.0232, -0.6406, -3.3438, -2.1719, -1.4531, -0.0049, -1.0391, -1.7969,  1.4219,  2.3125,  1.2578, -2.3438, -0.5039,  1.7031, -1.1328, -2.4375,  0.6016,  1.1484, -1.7500, -0.9531,  0.8906, -0.8711, -2.0156, -0.2676,  0.9180,
        -2.5469,  2.2344,  4.0938,  0.4160,  0.5078, -1.1719, -0.4629, -1.9609, -1.0078, -0.2246, -2.2812,  1.4609,  0.1631, -0.3613, -0.7969,  2.1250, -1.6250, -2.0000,  0.6875,  1.8359,  2.0625,  0.0698,  0.0530,  0.0723,  0.0347, -2.9844, -1.0078,  1.1641,  0.8750, -0.5938,  1.5859, -1.7812],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0002, -0.0072, -0.0069,  ..., -0.0385, -0.0335, -0.0192],
        [ 0.0046,  0.0022, -0.0083,  ...,  0.0075, -0.0190,  0.0395],
        [ 0.0192, -0.0115, -0.0015,  ..., -0.0104, -0.0268, -0.0107],
        ...,
        [ 0.0302, -0.0502, -0.0317,  ...,  0.0131,  0.0184, -0.0078],
        [ 0.0206, -0.0046,  0.0509,  ...,  0.0186,  0.0023,  0.0059],
        [-0.0115, -0.0120, -0.0182,  ...,  0.0143,  0.0048, -0.0177]], device='cuda:0', requires_grad=True)
Q: tensor([-0.2598,  1.2656,  0.4922,  0.8555,  0.3281, -1.0781,  0.0299, -2.7344, -1.3047,  0.1201, -0.2236,  0.9336,  0.7109, -0.5391, -0.4297, -0.8086,  0.1260,  0.6406, -0.5703,  0.2275, -0.3945, -0.6992,  0.3555, -0.3574,  1.2578,  0.4746, -1.3906,  1.3906, -1.2578,  1.2656, -1.0469, -1.8047,
        -0.1147,  0.2422, -0.8984, -0.7266, -0.4141, -0.1533,  2.0781, -0.9844,  0.4277,  0.0796, -0.6523,  0.3184, -0.1523,  1.2109, -0.5781,  1.4766,  1.2891, -0.8594,  0.6836,  1.7656, -0.6211, -0.0732, -0.6602,  0.7109, -1.9219,  0.5898,  0.2217,  0.7148,  0.4121, -1.0859, -0.7578, -0.8164],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  4.8750,  2.3438,  1.5703,  2.2969,  2.6094,  3.5781,  2.7812,  2.2031,  2.2969,  2.7344,  1.5625,  2.7969,  1.8906,  2.3750],
        [ 0.0000,  4.2188,  1.3672,  2.0625,  2.2500,  2.4375,  3.6562,  1.7031,  0.9219,  0.7656,  1.5625, -0.3145,  1.5781,  0.3633,  0.3262],
        [ 0.0000,  3.5469,  0.5859,  0.1089,  1.4688,  0.2295,  3.2031,  1.4219,  0.3926,  0.1973, -0.1270, -1.3203,  0.2539, -0.3262, -0.3809],
        [ 0.0000,  6.5938,  5.1250,  3.3281,  4.2500,  5.0000,  4.5938,  7.1875,  3.3438,  5.2188,  3.0781,  4.0625,  5.8750,  2.2188,  2.6250],
        [ 0.0000,  4.2188,  2.2969,  0.0364,  2.6250,  2.5156,  3.2188,  3.4375,  1.7266,  2.3750,  1.2891,  1.6484,  2.0469,  0.6172,  1.8750],
        [ 0.0000,  3.4531,  3.2500,  0.6328,  0.4590,  1.2812,  2.3281,  4.1250,  0.2910,  2.3281,  0.1377,  2.2656,  2.7812, -0.6211,  1.1562],
        [ 0.0000,  4.1562,  3.8438,  0.8477,  3.2344,  2.0781,  2.4062,  5.9062,  3.6875,  5.8438,  3.0156,  4.3438,  5.0312,  3.1719,  5.2188],
        [ 0.0000,  3.0938,  2.0625, -0.2129,  0.8906,  0.6445,  1.5391,  3.0781,  0.8086,  3.6875,  1.0625,  1.5312,  3.0781,  0.3320,  1.8594],
        [ 0.0000,  4.1562,  2.3125,  0.7539,  1.1719,  0.7148,  3.0156,  3.5469,  1.5625,  2.6094,  2.7656,  2.2969,  3.7969,  1.3594,  2.5312],
        [ 0.0000,  2.9219,  1.3047, -0.3379,  0.4199,  0.3066,  1.7656,  2.5156,  0.6836,  2.1250,  2.2812,  2.2188,  3.2969,  0.9805,  1.8672],
        [ 0.0000,  3.7188,  1.4219,  0.6055, -0.3984,  0.4219,  2.3281,  2.5469, -0.3516,  1.4688,  1.0703,  0.8867,  3.6875,  0.1641,  1.0312],
        [ 0.0000,  2.4375,  1.1719, -1.5703,  1.0938, -0.3984,  0.8984,  2.3438,  1.5547,  2.6250,  1.2656,  2.2344,  2.4219,  2.2969,  3.3281],
        [ 0.0000,  1.3594, -0.5508, -2.4844, -1.2188, -1.7734, -0.2100,  0.2715, -1.1562,  1.3828,  0.0898,  0.3145,  1.6172, -0.2559,  0.6211],
        [ 0.0000,  2.3281,  0.1226, -0.7109, -0.4219, -0.8125,  1.9531,  0.5781, -1.4453, -0.2432, -0.2559, -0.0302,  0.4141, -1.5625,  0.5117]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0307],
        [0.0081],
        [0.0078],
        [0.0021],
        [0.0078],
        [0.0056],
        [0.0039],
        [0.0046],
        [0.0029],
        [0.0180],
        [0.0055],
        [0.0102],
        [0.0097],
        [0.0061]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( are:0.1797 a:0.1523,:0.2148 white:0.0796atoes:0.2402 are:0.5898 red:0.0496iced:0.3633)
iced
------
		( a:0.1523,:0.2148 white:0.0796atoes:0.2402 are:0.5898 red:0.0496iced:0.3633 with:0.1582)
 with a sweet, sweet, and sweet, and they are a good source
@ 11050 train 3.9665 , allloss: 3.9784, dt: 1706.73ms, fracRes: 0.5964, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6304, norm(y): 0.9900, norm:0.8134, tok/sec: 76797.19, flops:67.25, batch-reuse:1
@ 11051 train 4.0419 , allloss: 4.0535, dt: 1259.24ms, fracRes: 0.5974, norm(attn): 0.1641, norm(output): 0.2539, norm(x): 0.6253, norm(y): 0.9900, norm:0.8149, tok/sec: 104088.42, flops:91.15, batch-reuse:1
@ 11052 train 3.9116 , allloss: 3.9230, dt: 1256.39ms, fracRes: 0.5971, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6252, norm(y): 0.9898, norm:0.7757, tok/sec: 104324.46, flops:91.36, batch-reuse:1
@ 11053 train 3.9278 , allloss: 3.9391, dt: 1254.26ms, fracRes: 0.5976, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6254, norm(y): 0.9898, norm:0.7455, tok/sec: 104501.59, flops:91.51, batch-reuse:1
@ 11054 train 3.9874 , allloss: 3.9987, dt: 1274.73ms, fracRes: 0.5979, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6276, norm(y): 0.9898, norm:0.7988, tok/sec: 102823.35, flops:90.04, batch-reuse:1
@ 11055 train 3.9666 , allloss: 3.9781, dt: 1284.05ms, fracRes: 0.5977, norm(attn): 0.1689, norm(output): 0.2539, norm(x): 0.6282, norm(y): 0.9899, norm:0.8731, tok/sec: 102076.81, flops:89.39, batch-reuse:1
@ 11056 train 3.9289 , allloss: 3.9404, dt: 1270.94ms, fracRes: 0.5973, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6259, norm(y): 0.9897, norm:0.8842, tok/sec: 103130.17, flops:90.31, batch-reuse:1
@ 11057 train 3.9820 , allloss: 3.9938, dt: 1262.03ms, fracRes: 0.5972, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6244, norm(y): 0.9897, norm:0.7807, tok/sec: 103858.08, flops:90.95, batch-reuse:1
@ 11058 train 3.9085 , allloss: 3.9201, dt: 1258.47ms, fracRes: 0.5973, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6234, norm(y): 0.9898, norm:0.8222, tok/sec: 104152.06, flops:91.20, batch-reuse:1
@ 11059 train 4.0317 , allloss: 4.0437, dt: 1282.96ms, fracRes: 0.5969, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6216, norm(y): 0.9897, norm:1.0222, tok/sec: 102164.00, flops:89.46, batch-reuse:1
@ 11060 train 3.9359 , allloss: 3.9473, dt: 1273.01ms, fracRes: 0.5963, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6196, norm(y): 0.9897, norm:1.0128, tok/sec: 102962.65, flops:90.16, batch-reuse:1
@ 11061 train 3.8372 , allloss: 3.8490, dt: 1264.00ms, fracRes: 0.5971, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6188, norm(y): 0.9900, norm:0.8553, tok/sec: 103695.88, flops:90.80, batch-reuse:1
@ 11062 train 3.9442 , allloss: 3.9559, dt: 1273.71ms, fracRes: 0.5976, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6178, norm(y): 0.9896, norm:0.9663, tok/sec: 102905.49, flops:90.11, batch-reuse:1
@ 11063 train 3.9899 , allloss: 4.0015, dt: 1271.74ms, fracRes: 0.5988, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6219, norm(y): 0.9897, norm:0.8937, tok/sec: 103064.79, flops:90.25, batch-reuse:1
@ 11064 train 3.9531 , allloss: 3.9644, dt: 1270.40ms, fracRes: 0.5986, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6226, norm(y): 0.9896, norm:0.7972, tok/sec: 103173.55, flops:90.35, batch-reuse:1
@ 11065 train 3.9820 , allloss: 3.9931, dt: 1300.31ms, fracRes: 0.5983, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6215, norm(y): 0.9898, norm:0.8828, tok/sec: 100800.79, flops:88.27, batch-reuse:1
@ 11066 train 3.8343 , allloss: 3.8473, dt: 1268.74ms, fracRes: 0.6011, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6364, norm(y): 0.9904, norm:1.5895, tok/sec: 103308.55, flops:90.47, batch-reuse:1
@ 11067 train 3.8509 , allloss: 3.8631, dt: 1280.87ms, fracRes: 0.5972, norm(attn): 0.1670, norm(output): 0.2559, norm(x): 0.6250, norm(y): 0.9899, norm:1.5693, tok/sec: 102330.36, flops:89.61, batch-reuse:1
@ 11068 train 3.9392 , allloss: 3.9518, dt: 1276.02ms, fracRes: 0.5963, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6190, norm(y): 0.9897, norm:0.9901, tok/sec: 102719.72, flops:89.95, batch-reuse:1
@ 11069 train 4.0359 , allloss: 4.0477, dt: 1256.81ms, fracRes: 0.5977, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6173, norm(y): 0.9895, norm:0.9974, tok/sec: 104289.73, flops:91.33, batch-reuse:1
@ 11070 train 3.9516 , allloss: 3.9636, dt: 1280.39ms, fracRes: 0.5983, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6191, norm(y): 0.9896, norm:0.9164, tok/sec: 102368.45, flops:89.64, batch-reuse:1
@ 11071 train 3.9466 , allloss: 3.9583, dt: 1273.10ms, fracRes: 0.5978, norm(attn): 0.1670, norm(output): 0.2559, norm(x): 0.6227, norm(y): 0.9895, norm:0.9181, tok/sec: 102955.08, flops:90.16, batch-reuse:1
@ 11072 train 3.9435 , allloss: 3.9553, dt: 1283.32ms, fracRes: 0.5976, norm(attn): 0.1699, norm(output): 0.2539, norm(x): 0.6219, norm(y): 0.9896, norm:0.9125, tok/sec: 102134.81, flops:89.44, batch-reuse:1
@ 11073 train 3.8761 , allloss: 3.8878, dt: 1276.67ms, fracRes: 0.5970, norm(attn): 0.1689, norm(output): 0.2539, norm(x): 0.6229, norm(y): 0.9897, norm:0.7876, tok/sec: 102667.21, flops:89.90, batch-reuse:1
@ 11074 train 3.9424 , allloss: 3.9546, dt: 1264.04ms, fracRes: 0.5971, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6255, norm(y): 0.9898, norm:0.8979, tok/sec: 103693.29, flops:90.80, batch-reuse:1
@ 11075 train 3.8319 , allloss: 3.8440, dt: 1277.79ms, fracRes: 0.5970, norm(attn): 0.1650, norm(output): 0.2559, norm(x): 0.6303, norm(y): 0.9900, norm:0.8449, tok/sec: 102576.74, flops:89.82, batch-reuse:1
@ 11076 train 3.9713 , allloss: 3.9826, dt: 1255.30ms, fracRes: 0.5968, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6275, norm(y): 0.9898, norm:0.9266, tok/sec: 104414.86, flops:91.43, batch-reuse:1
@ 11077 train 4.0824 , allloss: 4.0947, dt: 1271.05ms, fracRes: 0.5967, norm(attn): 0.1670, norm(output): 0.2578, norm(x): 0.6297, norm(y): 0.9897, norm:0.9434, tok/sec: 103120.99, flops:90.30, batch-reuse:1
@ 11078 train 3.8572 , allloss: 3.8688, dt: 1293.75ms, fracRes: 0.5977, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6318, norm(y): 0.9896, norm:0.7966, tok/sec: 101312.06, flops:88.72, batch-reuse:1
@ 11079 train 3.8792 , allloss: 3.8909, dt: 1294.73ms, fracRes: 0.5993, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6303, norm(y): 0.9900, norm:0.8908, tok/sec: 101234.75, flops:88.65, batch-reuse:1
@ 11080 train 3.8986 , allloss: 3.9100, dt: 1265.82ms, fracRes: 0.5991, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6263, norm(y): 0.9896, norm:0.8417, tok/sec: 103547.48, flops:90.68, batch-reuse:1
@ 11081 train 3.9335 , allloss: 3.9452, dt: 1293.89ms, fracRes: 0.5993, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6233, norm(y): 0.9897, norm:0.8126, tok/sec: 101300.64, flops:88.71, batch-reuse:1
@ 11082 train 3.9378 , allloss: 3.9493, dt: 1268.97ms, fracRes: 0.5979, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6201, norm(y): 0.9895, norm:0.8750, tok/sec: 103289.84, flops:90.45, batch-reuse:1
@ 11083 train 3.8563 , allloss: 3.8679, dt: 1257.25ms, fracRes: 0.5977, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6206, norm(y): 0.9896, norm:0.8610, tok/sec: 104253.32, flops:91.29, batch-reuse:1
@ 11084 train 3.9227 , allloss: 3.9342, dt: 1264.74ms, fracRes: 0.5974, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6218, norm(y): 0.9896, norm:0.8505, tok/sec: 103635.39, flops:90.75, batch-reuse:1
@ 11085 train 3.9279 , allloss: 3.9393, dt: 1273.68ms, fracRes: 0.5981, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6221, norm(y): 0.9897, norm:0.8675, tok/sec: 102907.94, flops:90.12, batch-reuse:1
@ 11086 train 3.9373 , allloss: 3.9485, dt: 1265.51ms, fracRes: 0.5976, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6254, norm(y): 0.9895, norm:0.8158, tok/sec: 103572.74, flops:90.70, batch-reuse:1
@ 11087 train 3.9229 , allloss: 3.9342, dt: 1269.51ms, fracRes: 0.5976, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6286, norm(y): 0.9895, norm:0.7794, tok/sec: 103246.21, flops:90.41, batch-reuse:1
@ 11088 train 4.0248 , allloss: 4.0362, dt: 1287.02ms, fracRes: 0.5976, norm(attn): 0.1670, norm(output): 0.2559, norm(x): 0.6259, norm(y): 0.9895, norm:0.8726, tok/sec: 101841.11, flops:89.18, batch-reuse:1
@ 11089 train 4.0282 , allloss: 4.0399, dt: 1280.96ms, fracRes: 0.5981, norm(attn): 0.1670, norm(output): 0.2578, norm(x): 0.6296, norm(y): 0.9894, norm:0.7978, tok/sec: 102323.08, flops:89.60, batch-reuse:1
@ 11090 train 4.0292 , allloss: 4.0410, dt: 1266.80ms, fracRes: 0.5981, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6249, norm(y): 0.9896, norm:0.9846, tok/sec: 103467.24, flops:90.60, batch-reuse:1
@ 11091 train 3.8684 , allloss: 3.8796, dt: 1263.70ms, fracRes: 0.5977, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6215, norm(y): 0.9899, norm:0.9238, tok/sec: 103720.78, flops:90.83, batch-reuse:1
@ 11092 train 3.8751 , allloss: 3.8868, dt: 1299.09ms, fracRes: 0.5987, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6235, norm(y): 0.9898, norm:0.8686, tok/sec: 100894.93, flops:88.35, batch-reuse:1
@ 11093 train 3.9152 , allloss: 3.9270, dt: 1272.35ms, fracRes: 0.5980, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6206, norm(y): 0.9896, norm:1.0232, tok/sec: 103016.02, flops:90.21, batch-reuse:1
@ 11094 train 3.9467 , allloss: 3.9585, dt: 1279.77ms, fracRes: 0.5984, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6205, norm(y): 0.9898, norm:0.8584, tok/sec: 102418.45, flops:89.69, batch-reuse:1
@ 11095 train 4.0028 , allloss: 4.0143, dt: 1255.30ms, fracRes: 0.5981, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6216, norm(y): 0.9898, norm:0.8018, tok/sec: 104414.52, flops:91.43, batch-reuse:1
@ 11096 train 3.9010 , allloss: 3.9131, dt: 1264.85ms, fracRes: 0.5980, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6209, norm(y): 0.9895, norm:0.9122, tok/sec: 103626.84, flops:90.74, batch-reuse:1
@ 11097 train 3.8991 , allloss: 3.9107, dt: 1267.01ms, fracRes: 0.5974, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6231, norm(y): 0.9896, norm:0.8693, tok/sec: 103450.25, flops:90.59, batch-reuse:1
@ 11098 train 3.8186 , allloss: 3.8301, dt: 1260.74ms, fracRes: 0.5977, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6236, norm(y): 0.9897, norm:0.8461, tok/sec: 103964.49, flops:91.04, batch-reuse:1
@ 11099 train 3.8864 , allloss: 3.8979, dt: 1268.81ms, fracRes: 0.5972, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6224, norm(y): 0.9896, norm:0.8457, tok/sec: 103302.80, flops:90.46, batch-reuse:1
@ 11100 train 3.8383 , allloss: 3.8498, dt: 1289.63ms, fracRes: 0.5974, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6210, norm(y): 0.9896, norm:0.7816, tok/sec: 101635.23, flops:89.00, batch-reuse:1
@ 11101 train 3.9363 , allloss: 3.9478, dt: 1299.06ms, fracRes: 0.5967, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6223, norm(y): 0.9896, norm:0.8595, tok/sec: 100897.66, flops:88.35, batch-reuse:1
@ 11102 train 3.8722 , allloss: 3.8838, dt: 1251.93ms, fracRes: 0.5970, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6255, norm(y): 0.9896, norm:0.7770, tok/sec: 104696.27, flops:91.68, batch-reuse:1
@ 11103 train 3.8151 , allloss: 3.8264, dt: 1281.95ms, fracRes: 0.5979, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6234, norm(y): 0.9897, norm:0.8682, tok/sec: 102244.03, flops:89.53, batch-reuse:1
@ 11104 train 3.8303 , allloss: 3.8418, dt: 1270.21ms, fracRes: 0.5975, norm(attn): 0.1680, norm(output): 0.2520, norm(x): 0.6226, norm(y): 0.9897, norm:0.8637, tok/sec: 103189.35, flops:90.36, batch-reuse:1
@ 11105 train 3.8756 , allloss: 3.8872, dt: 1272.47ms, fracRes: 0.5982, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6216, norm(y): 0.9898, norm:0.7218, tok/sec: 103005.83, flops:90.20, batch-reuse:1
@ 11106 train 3.9197 , allloss: 3.9322, dt: 1288.64ms, fracRes: 0.5977, norm(attn): 0.1670, norm(output): 0.2559, norm(x): 0.6232, norm(y): 0.9895, norm:0.8862, tok/sec: 101713.73, flops:89.07, batch-reuse:1
@ 11107 train 3.8857 , allloss: 3.8971, dt: 1265.46ms, fracRes: 0.5977, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6207, norm(y): 0.9895, norm:0.7794, tok/sec: 103576.39, flops:90.70, batch-reuse:1
@ 11108 train 3.8999 , allloss: 3.9116, dt: 1268.02ms, fracRes: 0.5976, norm(attn): 0.1680, norm(output): 0.2520, norm(x): 0.6177, norm(y): 0.9896, norm:0.8240, tok/sec: 103367.33, flops:90.52, batch-reuse:1
@ 11109 train 3.8314 , allloss: 3.8438, dt: 1275.80ms, fracRes: 0.5977, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6224, norm(y): 0.9900, norm:0.8771, tok/sec: 102737.39, flops:89.97, batch-reuse:1
@ 11110 train 3.8568 , allloss: 3.8684, dt: 1270.76ms, fracRes: 0.5978, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6168, norm(y): 0.9896, norm:0.7819, tok/sec: 103144.32, flops:90.32, batch-reuse:1
@ 11111 train 3.7886 , allloss: 3.8005, dt: 1291.99ms, fracRes: 0.5982, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6210, norm(y): 0.9896, norm:0.7699, tok/sec: 101449.72, flops:88.84, batch-reuse:1
@ 11112 train 3.8936 , allloss: 3.9057, dt: 1267.49ms, fracRes: 0.5982, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6209, norm(y): 0.9894, norm:0.7273, tok/sec: 103410.55, flops:90.56, batch-reuse:1
@ 11113 train 3.8850 , allloss: 3.8966, dt: 1249.32ms, fracRes: 0.5986, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6217, norm(y): 0.9895, norm:0.7864, tok/sec: 104914.55, flops:91.87, batch-reuse:1
@ 11114 train 4.0349 , allloss: 4.0464, dt: 1260.15ms, fracRes: 0.5986, norm(attn): 0.1650, norm(output): 0.2539, norm(x): 0.6229, norm(y): 0.9893, norm:0.9192, tok/sec: 104013.29, flops:91.08, batch-reuse:1
@ 11115 train 3.8185 , allloss: 3.8306, dt: 1285.06ms, fracRes: 0.5985, norm(attn): 0.1650, norm(output): 0.2539, norm(x): 0.6262, norm(y): 0.9897, norm:0.9109, tok/sec: 101996.93, flops:89.32, batch-reuse:1
@ 11116 train 3.7757 , allloss: 3.7873, dt: 1266.43ms, fracRes: 0.5983, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6228, norm(y): 0.9898, norm:0.7331, tok/sec: 103497.07, flops:90.63, batch-reuse:1
@ 11117 train 3.8367 , allloss: 3.8480, dt: 1257.58ms, fracRes: 0.5981, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6199, norm(y): 0.9897, norm:0.8981, tok/sec: 104225.32, flops:91.27, batch-reuse:1
@ 11118 train 3.8884 , allloss: 3.9002, dt: 1255.87ms, fracRes: 0.5976, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6217, norm(y): 0.9895, norm:0.8387, tok/sec: 104367.42, flops:91.39, batch-reuse:1
@ 11119 train 3.9829 , allloss: 3.9945, dt: 1267.65ms, fracRes: 0.5976, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6235, norm(y): 0.9895, norm:0.9072, tok/sec: 103397.71, flops:90.54, batch-reuse:1
@ 11120 train 3.9472 , allloss: 3.9594, dt: 1253.26ms, fracRes: 0.5973, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6285, norm(y): 0.9893, norm:0.7803, tok/sec: 104584.57, flops:91.58, batch-reuse:1
@ 11121 train 3.9834 , allloss: 3.9949, dt: 1295.78ms, fracRes: 0.5974, norm(attn): 0.1660, norm(output): 0.2559, norm(x): 0.6246, norm(y): 0.9892, norm:0.8505, tok/sec: 101152.68, flops:88.58, batch-reuse:1
@ 11122 train 3.8550 , allloss: 3.8662, dt: 1303.91ms, fracRes: 0.5967, norm(attn): 0.1660, norm(output): 0.2559, norm(x): 0.6244, norm(y): 0.9891, norm:0.9036, tok/sec: 100522.02, flops:88.03, batch-reuse:1
@ 11123 train 3.9202 , allloss: 3.9323, dt: 1266.94ms, fracRes: 0.5981, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6290, norm(y): 0.9892, norm:0.8886, tok/sec: 103455.62, flops:90.59, batch-reuse:1
@ 11124 train 3.8809 , allloss: 3.8921, dt: 1274.35ms, fracRes: 0.5978, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6250, norm(y): 0.9894, norm:0.7552, tok/sec: 102854.36, flops:90.07, batch-reuse:1
@ 11125 train 3.9322 , allloss: 3.9434, dt: 1264.34ms, fracRes: 0.5976, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6226, norm(y): 0.9891, norm:0.8763, tok/sec: 103668.50, flops:90.78, batch-reuse:1
@ 11126 train 3.9286 , allloss: 3.9399, dt: 1264.10ms, fracRes: 0.5976, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6211, norm(y): 0.9893, norm:0.8047, tok/sec: 103687.99, flops:90.80, batch-reuse:1
@ 11127 train 3.9137 , allloss: 3.9252, dt: 1269.68ms, fracRes: 0.5976, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6206, norm(y): 0.9895, norm:0.7976, tok/sec: 103231.94, flops:90.40, batch-reuse:1
@ 11128 train 3.8848 , allloss: 3.8960, dt: 1280.75ms, fracRes: 0.5980, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6200, norm(y): 0.9897, norm:0.8275, tok/sec: 102340.15, flops:89.62, batch-reuse:1
@ 11129 train 3.9282 , allloss: 3.9393, dt: 1271.64ms, fracRes: 0.5977, norm(attn): 0.1689, norm(output): 0.2520, norm(x): 0.6176, norm(y): 0.9895, norm:0.8044, tok/sec: 103073.15, flops:90.26, batch-reuse:1
@ 11130 train 3.9232 , allloss: 3.9344, dt: 1251.57ms, fracRes: 0.5973, norm(attn): 0.1689, norm(output): 0.2539, norm(x): 0.6215, norm(y): 0.9892, norm:0.7652, tok/sec: 104725.97, flops:91.71, batch-reuse:1
@ 11131 train 3.8749 , allloss: 3.8860, dt: 1288.53ms, fracRes: 0.5980, norm(attn): 0.1670, norm(output): 0.2559, norm(x): 0.6242, norm(y): 0.9892, norm:0.8468, tok/sec: 101722.41, flops:89.08, batch-reuse:1
@ 11132 train 3.8131 , allloss: 3.8242, dt: 1296.03ms, fracRes: 0.5979, norm(attn): 0.1689, norm(output): 0.2539, norm(x): 0.6242, norm(y): 0.9893, norm:0.7752, tok/sec: 101133.55, flops:88.56, batch-reuse:1
@ 11133 train 3.8885 , allloss: 3.8997, dt: 1261.61ms, fracRes: 0.5974, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6250, norm(y): 0.9892, norm:0.7306, tok/sec: 103892.88, flops:90.98, batch-reuse:1
@ 11134 train 3.9107 , allloss: 3.9221, dt: 1260.83ms, fracRes: 0.5979, norm(attn): 0.1641, norm(output): 0.2539, norm(x): 0.6229, norm(y): 0.9895, norm:0.8144, tok/sec: 103957.30, flops:91.03, batch-reuse:1
@ 11135 train 3.9827 , allloss: 3.9942, dt: 1288.23ms, fracRes: 0.5976, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6216, norm(y): 0.9894, norm:0.8255, tok/sec: 101745.57, flops:89.10, batch-reuse:1
@ 11136 train 3.8055 , allloss: 3.8169, dt: 1282.15ms, fracRes: 0.5965, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6204, norm(y): 0.9893, norm:0.8050, tok/sec: 102228.46, flops:89.52, batch-reuse:1
@ 11137 train 3.8715 , allloss: 3.8826, dt: 1255.89ms, fracRes: 0.5965, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6183, norm(y): 0.9893, norm:0.8310, tok/sec: 104365.64, flops:91.39, batch-reuse:1
@ 11138 train 3.9242 , allloss: 3.9354, dt: 1292.59ms, fracRes: 0.5965, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6180, norm(y): 0.9893, norm:0.8794, tok/sec: 101402.60, flops:88.80, batch-reuse:1
@ 11139 train 3.7080 , allloss: 3.7195, dt: 1315.44ms, fracRes: 0.5970, norm(attn): 0.1689, norm(output): 0.2539, norm(x): 0.6205, norm(y): 0.9897, norm:0.8853, tok/sec: 99641.03, flops:87.25, batch-reuse:1
@ 11140 train 3.7499 , allloss: 3.7616, dt: 1298.65ms, fracRes: 0.5974, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6178, norm(y): 0.9896, norm:0.7779, tok/sec: 100929.57, flops:88.38, batch-reuse:1
@ 11141 train 3.8441 , allloss: 3.8559, dt: 1284.01ms, fracRes: 0.5976, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6215, norm(y): 0.9895, norm:0.8893, tok/sec: 102080.07, flops:89.39, batch-reuse:1
@ 11142 train 3.7418 , allloss: 3.7532, dt: 1271.34ms, fracRes: 0.5972, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6205, norm(y): 0.9894, norm:0.9756, tok/sec: 103097.37, flops:90.28, batch-reuse:1
@ 11143 train 3.7706 , allloss: 3.7826, dt: 1287.60ms, fracRes: 0.5976, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6228, norm(y): 0.9894, norm:0.8951, tok/sec: 101795.25, flops:89.14, batch-reuse:1
@ 11144 train 3.6852 , allloss: 3.6970, dt: 1257.97ms, fracRes: 0.5969, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6209, norm(y): 0.9894, norm:0.8291, tok/sec: 104192.88, flops:91.24, batch-reuse:1
@ 11145 train 3.7706 , allloss: 3.7824, dt: 1282.17ms, fracRes: 0.5970, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6232, norm(y): 0.9894, norm:1.0202, tok/sec: 102226.96, flops:89.52, batch-reuse:1
@ 11146 train 3.7440 , allloss: 3.7556, dt: 1290.43ms, fracRes: 0.5976, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6199, norm(y): 0.9894, norm:1.1031, tok/sec: 101572.73, flops:88.95, batch-reuse:1
@ 11147 train 3.7868 , allloss: 3.7986, dt: 1272.54ms, fracRes: 0.5986, norm(attn): 0.1670, norm(output): 0.2559, norm(x): 0.6224, norm(y): 0.9894, norm:0.8490, tok/sec: 103000.19, flops:90.20, batch-reuse:1
@ 11148 train 3.7597 , allloss: 3.7717, dt: 1272.86ms, fracRes: 0.5988, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6178, norm(y): 0.9894, norm:1.0223, tok/sec: 102974.75, flops:90.17, batch-reuse:1
@ 11149 train 3.7584 , allloss: 3.7700, dt: 1292.15ms, fracRes: 0.5984, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6159, norm(y): 0.9895, norm:1.0893, tok/sec: 101437.14, flops:88.83, batch-reuse:1
@ 11150 train 3.8069 , allloss: 3.8188, dt: 1298.52ms, fracRes: 0.5985, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6190, norm(y): 0.9895, norm:0.8767, tok/sec: 100939.84, flops:88.39, batch-reuse:1
@ 11151 train 3.7664 , allloss: 3.7777, dt: 1274.80ms, fracRes: 0.5988, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6194, norm(y): 0.9895, norm:0.8926, tok/sec: 102818.02, flops:90.04, batch-reuse:1
@ 11152 train 3.7325 , allloss: 3.7439, dt: 1281.16ms, fracRes: 0.5993, norm(attn): 0.1621, norm(output): 0.2520, norm(x): 0.6204, norm(y): 0.9895, norm:1.0032, tok/sec: 102307.35, flops:89.59, batch-reuse:1
@ 11153 train 3.8643 , allloss: 3.8756, dt: 1275.16ms, fracRes: 0.5981, norm(attn): 0.1680, norm(output): 0.2578, norm(x): 0.6244, norm(y): 0.9892, norm:1.0399, tok/sec: 102789.03, flops:90.01, batch-reuse:1
@ 11154 train 3.6215 , allloss: 3.6330, dt: 1270.67ms, fracRes: 0.5999, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6210, norm(y): 0.9896, norm:1.2436, tok/sec: 103151.89, flops:90.33, batch-reuse:1
@ 11155 train 3.7316 , allloss: 3.7440, dt: 1263.41ms, fracRes: 0.5995, norm(attn): 0.1689, norm(output): 0.2539, norm(x): 0.6296, norm(y): 0.9894, norm:1.0371, tok/sec: 103744.99, flops:90.85, batch-reuse:1
@ 11156 train 3.7350 , allloss: 3.7467, dt: 1290.35ms, fracRes: 0.5971, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6220, norm(y): 0.9894, norm:0.9942, tok/sec: 101579.02, flops:88.95, batch-reuse:1
@ 11157 train 3.7374 , allloss: 3.7490, dt: 1258.87ms, fracRes: 0.5963, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6220, norm(y): 0.9895, norm:1.0283, tok/sec: 104118.72, flops:91.18, batch-reuse:1
@ 11158 train 3.6684 , allloss: 3.6802, dt: 1257.60ms, fracRes: 0.5962, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6240, norm(y): 0.9893, norm:0.8822, tok/sec: 104224.13, flops:91.27, batch-reuse:1
@ 11159 train 3.6771 , allloss: 3.6888, dt: 1296.05ms, fracRes: 0.5962, norm(attn): 0.1689, norm(output): 0.2539, norm(x): 0.6221, norm(y): 0.9894, norm:0.8933, tok/sec: 101131.52, flops:88.56, batch-reuse:1
@ 11160 train 3.7333 , allloss: 3.7448, dt: 1256.61ms, fracRes: 0.5962, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6221, norm(y): 0.9895, norm:0.8577, tok/sec: 104306.04, flops:91.34, batch-reuse:1
@ 11161 train 3.7179 , allloss: 3.7295, dt: 1267.73ms, fracRes: 0.5976, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6243, norm(y): 0.9895, norm:0.7715, tok/sec: 103391.18, flops:90.54, batch-reuse:1
@ 11162 train 3.7431 , allloss: 3.7546, dt: 1269.83ms, fracRes: 0.5983, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6267, norm(y): 0.9895, norm:0.8318, tok/sec: 103220.04, flops:90.39, batch-reuse:1
@ 11163 train 3.6696 , allloss: 3.6811, dt: 1287.25ms, fracRes: 0.5987, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6232, norm(y): 0.9895, norm:0.8301, tok/sec: 101823.23, flops:89.17, batch-reuse:1
@ 11164 train 3.7400 , allloss: 3.7514, dt: 1291.89ms, fracRes: 0.5981, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6240, norm(y): 0.9893, norm:0.7414, tok/sec: 101457.56, flops:88.84, batch-reuse:1
@ 11165 train 3.7278 , allloss: 3.7390, dt: 1278.15ms, fracRes: 0.5976, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6223, norm(y): 0.9890, norm:0.7482, tok/sec: 102548.42, flops:89.80, batch-reuse:1
@ 11166 train 3.7139 , allloss: 3.7251, dt: 1250.05ms, fracRes: 0.5984, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6220, norm(y): 0.9894, norm:0.7630, tok/sec: 104853.46, flops:91.82, batch-reuse:1
@ 11167 train 3.6755 , allloss: 3.6875, dt: 1277.61ms, fracRes: 0.5977, norm(attn): 0.1689, norm(output): 0.2520, norm(x): 0.6234, norm(y): 0.9894, norm:0.7577, tok/sec: 102591.21, flops:89.84, batch-reuse:1
@ 11168 train 3.8298 , allloss: 3.8414, dt: 1291.05ms, fracRes: 0.5976, norm(attn): 0.1680, norm(output): 0.2520, norm(x): 0.6214, norm(y): 0.9892, norm:0.7984, tok/sec: 101523.89, flops:88.90, batch-reuse:1
@ 11169 train 3.9347 , allloss: 3.9456, dt: 1278.77ms, fracRes: 0.5971, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6202, norm(y): 0.9892, norm:1.0584, tok/sec: 102498.38, flops:89.76, batch-reuse:1
@ 11170 train 3.7629 , allloss: 3.7741, dt: 1269.02ms, fracRes: 0.5968, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6241, norm(y): 0.9893, norm:0.9026, tok/sec: 103286.03, flops:90.45, batch-reuse:1
@ 11171 train 3.7881 , allloss: 3.7994, dt: 1274.41ms, fracRes: 0.5963, norm(attn): 0.1670, norm(output): 0.2559, norm(x): 0.6240, norm(y): 0.9890, norm:0.7538, tok/sec: 102848.97, flops:90.06, batch-reuse:1
@ 11172 train 3.9234 , allloss: 3.9348, dt: 1269.38ms, fracRes: 0.5959, norm(attn): 0.1689, norm(output): 0.2598, norm(x): 0.6255, norm(y): 0.9890, norm:1.0770, tok/sec: 103256.56, flops:90.42, batch-reuse:1
@ 11173 train 3.7620 , allloss: 3.7737, dt: 1260.30ms, fracRes: 0.5969, norm(attn): 0.1670, norm(output): 0.2559, norm(x): 0.6254, norm(y): 0.9891, norm:0.8841, tok/sec: 104000.80, flops:91.07, batch-reuse:1
@ 11174 train 3.7316 , allloss: 3.7428, dt: 1257.59ms, fracRes: 0.5968, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6199, norm(y): 0.9892, norm:0.8862, tok/sec: 104224.74, flops:91.27, batch-reuse:1
@ 11175 train 3.7557 , allloss: 3.7670, dt: 1308.51ms, fracRes: 0.5973, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6225, norm(y): 0.9894, norm:0.8344, tok/sec: 100169.20, flops:87.72, batch-reuse:1
@ 11176 train 3.7709 , allloss: 3.7824, dt: 1271.27ms, fracRes: 0.5978, norm(attn): 0.1680, norm(output): 0.2520, norm(x): 0.6209, norm(y): 0.9893, norm:0.8546, tok/sec: 103103.19, flops:90.29, batch-reuse:1
@ 11177 train 3.7561 , allloss: 3.7683, dt: 1268.42ms, fracRes: 0.5988, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6247, norm(y): 0.9896, norm:0.9157, tok/sec: 103335.17, flops:90.49, batch-reuse:1
@ 11178 train 3.7688 , allloss: 3.7812, dt: 1296.05ms, fracRes: 0.5987, norm(attn): 0.1650, norm(output): 0.2520, norm(x): 0.6237, norm(y): 0.9894, norm:0.8322, tok/sec: 101132.21, flops:88.56, batch-reuse:1
@ 11179 train 3.6921 , allloss: 3.7042, dt: 1286.43ms, fracRes: 0.5985, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6228, norm(y): 0.9893, norm:0.9668, tok/sec: 101888.41, flops:89.22, batch-reuse:1
@ 11180 train 3.7304 , allloss: 3.7420, dt: 1262.13ms, fracRes: 0.5982, norm(attn): 0.1680, norm(output): 0.2520, norm(x): 0.6210, norm(y): 0.9893, norm:0.9987, tok/sec: 103849.82, flops:90.94, batch-reuse:1
@ 11181 train 3.7416 , allloss: 3.7533, dt: 1267.27ms, fracRes: 0.5980, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6195, norm(y): 0.9894, norm:0.8161, tok/sec: 103428.47, flops:90.57, batch-reuse:1
@ 11182 train 3.7493 , allloss: 3.7608, dt: 1266.64ms, fracRes: 0.5971, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6223, norm(y): 0.9894, norm:0.9484, tok/sec: 103480.41, flops:90.62, batch-reuse:1
@ 11183 train 3.6697 , allloss: 3.6813, dt: 1265.00ms, fracRes: 0.5968, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6201, norm(y): 0.9893, norm:0.8233, tok/sec: 103614.53, flops:90.73, batch-reuse:1
@ 11184 train 3.6296 , allloss: 3.6416, dt: 1297.31ms, fracRes: 0.5971, norm(attn): 0.1689, norm(output): 0.2539, norm(x): 0.6203, norm(y): 0.9894, norm:0.8710, tok/sec: 101033.46, flops:88.47, batch-reuse:1
@ 11185 train 3.8067 , allloss: 3.8188, dt: 1285.21ms, fracRes: 0.5982, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6192, norm(y): 0.9893, norm:0.8331, tok/sec: 101984.84, flops:89.31, batch-reuse:1
@ 11186 train 3.7191 , allloss: 3.7308, dt: 1274.25ms, fracRes: 0.5976, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6209, norm(y): 0.9894, norm:0.8279, tok/sec: 102862.28, flops:90.08, batch-reuse:1
@ 11187 train 3.8699 , allloss: 3.8814, dt: 1284.95ms, fracRes: 0.5975, norm(attn): 0.1670, norm(output): 0.2559, norm(x): 0.6254, norm(y): 0.9891, norm:0.9004, tok/sec: 102005.79, flops:89.33, batch-reuse:1
@ 11188 train 3.8975 , allloss: 3.9091, dt: 1268.12ms, fracRes: 0.5972, norm(attn): 0.1689, norm(output): 0.2578, norm(x): 0.6310, norm(y): 0.9890, norm:0.8443, tok/sec: 103358.93, flops:90.51, batch-reuse:1
@ 11189 train 4.0200 , allloss: 4.0312, dt: 1249.33ms, fracRes: 0.5976, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6222, norm(y): 0.9888, norm:0.8700, tok/sec: 104913.83, flops:91.87, batch-reuse:1
@ 11190 train 3.8680 , allloss: 3.8800, dt: 1268.12ms, fracRes: 0.5982, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6261, norm(y): 0.9889, norm:0.8920, tok/sec: 103359.36, flops:90.51, batch-reuse:1
@ 11191 train 3.9263 , allloss: 3.9383, dt: 1273.56ms, fracRes: 0.5973, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6233, norm(y): 0.9889, norm:0.7836, tok/sec: 102917.45, flops:90.12, batch-reuse:1
@ 11192 train 4.0101 , allloss: 4.0220, dt: 1284.71ms, fracRes: 0.5974, norm(attn): 0.1689, norm(output): 0.2539, norm(x): 0.6204, norm(y): 0.9892, norm:0.9322, tok/sec: 102024.47, flops:89.34, batch-reuse:1
@ 11193 train 3.7507 , allloss: 3.7626, dt: 1299.73ms, fracRes: 0.5966, norm(attn): 0.1699, norm(output): 0.2559, norm(x): 0.6251, norm(y): 0.9890, norm:0.8461, tok/sec: 100845.46, flops:88.31, batch-reuse:1
@ 11194 train 4.0212 , allloss: 4.0327, dt: 1267.76ms, fracRes: 0.5971, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6177, norm(y): 0.9888, norm:0.8529, tok/sec: 103388.51, flops:90.54, batch-reuse:1
@ 11195 train 3.8380 , allloss: 3.8498, dt: 1266.69ms, fracRes: 0.5973, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6191, norm(y): 0.9893, norm:0.9454, tok/sec: 103476.10, flops:90.61, batch-reuse:1
@ 11196 train 3.9676 , allloss: 3.9796, dt: 1284.61ms, fracRes: 0.5965, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6189, norm(y): 0.9891, norm:1.0021, tok/sec: 102032.75, flops:89.35, batch-reuse:1
@ 11197 train 3.8946 , allloss: 3.9066, dt: 1311.11ms, fracRes: 0.5974, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6241, norm(y): 0.9892, norm:0.8647, tok/sec: 99970.29, flops:87.54, batch-reuse:1
@ 11198 train 4.0442 , allloss: 4.0558, dt: 1264.95ms, fracRes: 0.5972, norm(attn): 0.1670, norm(output): 0.2559, norm(x): 0.6257, norm(y): 0.9887, norm:0.8463, tok/sec: 103618.54, flops:90.74, batch-reuse:1
@ 11199 train 3.9877 , allloss: 3.9987, dt: 1270.85ms, fracRes: 0.5970, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6254, norm(y): 0.9888, norm:0.9643, tok/sec: 103137.02, flops:90.32, batch-reuse:1
@ 11200 train 3.9632 , allloss: 3.9749, dt: 1266.04ms, fracRes: 0.5961, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6251, norm(y): 0.9887, norm:0.8393, tok/sec: 103529.01, flops:90.66, batch-reuse:1
@ 11201 train 4.0198 , allloss: 4.0316, dt: 1253.50ms, fracRes: 0.5967, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6223, norm(y): 0.9890, norm:0.8343, tok/sec: 104564.62, flops:91.57, batch-reuse:1
@ 11202 train 4.0431 , allloss: 4.0553, dt: 1252.18ms, fracRes: 0.5964, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6227, norm(y): 0.9887, norm:1.0078, tok/sec: 104675.24, flops:91.66, batch-reuse:1
@ 11203 train 3.9138 , allloss: 3.9255, dt: 1290.69ms, fracRes: 0.5971, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6187, norm(y): 0.9889, norm:0.9838, tok/sec: 101552.09, flops:88.93, batch-reuse:1
@ 11204 train 3.9546 , allloss: 3.9661, dt: 1280.04ms, fracRes: 0.5977, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6172, norm(y): 0.9889, norm:0.8531, tok/sec: 102396.51, flops:89.67, batch-reuse:1
@ 11205 train 4.0015 , allloss: 4.0128, dt: 1273.60ms, fracRes: 0.5977, norm(attn): 0.1680, norm(output): 0.2520, norm(x): 0.6159, norm(y): 0.9888, norm:0.9117, tok/sec: 102914.87, flops:90.12, batch-reuse:1
@ 11206 train 4.0130 , allloss: 4.0245, dt: 1272.62ms, fracRes: 0.5975, norm(attn): 0.1670, norm(output): 0.2559, norm(x): 0.6191, norm(y): 0.9887, norm:0.9081, tok/sec: 102993.77, flops:90.19, batch-reuse:1
@ 11207 train 4.0777 , allloss: 4.0892, dt: 1271.49ms, fracRes: 0.5978, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6209, norm(y): 0.9888, norm:0.8592, tok/sec: 103085.19, flops:90.27, batch-reuse:1
@ 11208 train 3.9287 , allloss: 3.9401, dt: 1267.06ms, fracRes: 0.5965, norm(attn): 0.1699, norm(output): 0.2559, norm(x): 0.6195, norm(y): 0.9888, norm:0.8070, tok/sec: 103446.12, flops:90.59, batch-reuse:1
@ 11209 train 3.9418 , allloss: 3.9535, dt: 1274.50ms, fracRes: 0.5968, norm(attn): 0.1660, norm(output): 0.2578, norm(x): 0.6231, norm(y): 0.9888, norm:0.8468, tok/sec: 102841.66, flops:90.06, batch-reuse:1
@ 11210 train 3.9195 , allloss: 3.9307, dt: 1271.98ms, fracRes: 0.5968, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6239, norm(y): 0.9889, norm:0.8186, tok/sec: 103046.05, flops:90.24, batch-reuse:1
@ 11211 train 3.9517 , allloss: 3.9633, dt: 1284.60ms, fracRes: 0.5974, norm(attn): 0.1670, norm(output): 0.2578, norm(x): 0.6284, norm(y): 0.9888, norm:0.8614, tok/sec: 102033.51, flops:89.35, batch-reuse:1
@ 11212 train 3.8839 , allloss: 3.8957, dt: 1277.40ms, fracRes: 0.5965, norm(attn): 0.1689, norm(output): 0.2578, norm(x): 0.6265, norm(y): 0.9886, norm:0.7592, tok/sec: 102608.81, flops:89.85, batch-reuse:1
@ 11213 train 4.0420 , allloss: 4.0538, dt: 1259.91ms, fracRes: 0.5969, norm(attn): 0.1689, norm(output): 0.2578, norm(x): 0.6233, norm(y): 0.9887, norm:0.8033, tok/sec: 104032.96, flops:91.10, batch-reuse:1
@ 11214 train 3.8649 , allloss: 3.8767, dt: 1274.82ms, fracRes: 0.5969, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6233, norm(y): 0.9888, norm:0.7815, tok/sec: 102815.77, flops:90.03, batch-reuse:1
@ 11215 train 3.9649 , allloss: 3.9770, dt: 1259.06ms, fracRes: 0.5977, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6193, norm(y): 0.9890, norm:0.8345, tok/sec: 104103.27, flops:91.16, batch-reuse:1
@ 11216 train 3.9175 , allloss: 3.9293, dt: 1267.22ms, fracRes: 0.5974, norm(attn): 0.1670, norm(output): 0.2559, norm(x): 0.6221, norm(y): 0.9887, norm:1.0021, tok/sec: 103432.42, flops:90.57, batch-reuse:1
@ 11217 train 3.9509 , allloss: 3.9624, dt: 1269.53ms, fracRes: 0.5978, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6220, norm(y): 0.9888, norm:0.8018, tok/sec: 103244.13, flops:90.41, batch-reuse:1
@ 11218 train 3.8967 , allloss: 3.9083, dt: 1263.44ms, fracRes: 0.5977, norm(attn): 0.1641, norm(output): 0.2539, norm(x): 0.6187, norm(y): 0.9888, norm:0.8257, tok/sec: 103742.02, flops:90.85, batch-reuse:1
@ 11219 train 4.1229 , allloss: 4.1344, dt: 1272.56ms, fracRes: 0.5972, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6158, norm(y): 0.9889, norm:1.2634, tok/sec: 102998.88, flops:90.19, batch-reuse:1
@ 11220 train 3.7715 , allloss: 3.7846, dt: 1264.64ms, fracRes: 0.5975, norm(attn): 0.1680, norm(output): 0.2578, norm(x): 0.6280, norm(y): 0.9890, norm:1.3580, tok/sec: 103643.97, flops:90.76, batch-reuse:1
@ 11221 train 3.8761 , allloss: 3.8885, dt: 1257.71ms, fracRes: 0.5970, norm(attn): 0.1699, norm(output): 0.2539, norm(x): 0.6235, norm(y): 0.9890, norm:0.9453, tok/sec: 104214.65, flops:91.26, batch-reuse:1
@ 11222 train 3.8245 , allloss: 3.8366, dt: 1254.05ms, fracRes: 0.5965, norm(attn): 0.1689, norm(output): 0.2578, norm(x): 0.6260, norm(y): 0.9890, norm:0.9306, tok/sec: 104519.14, flops:91.53, batch-reuse:1
@ 11223 train 3.9544 , allloss: 3.9659, dt: 1252.30ms, fracRes: 0.5976, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6268, norm(y): 0.9892, norm:0.9299, tok/sec: 104665.37, flops:91.65, batch-reuse:1
@ 11224 train 4.1526 , allloss: 4.1646, dt: 1254.59ms, fracRes: 0.5973, norm(attn): 0.1660, norm(output): 0.2598, norm(x): 0.6287, norm(y): 0.9887, norm:0.9797, tok/sec: 104473.99, flops:91.49, batch-reuse:1
@ 11225 train 4.6188 , allloss: 4.6310, dt: 1273.00ms, fracRes: 0.5973, norm(attn): 0.1670, norm(output): 0.2578, norm(x): 0.6256, norm(y): 0.9884, norm:1.2536, tok/sec: 102963.37, flops:90.16, batch-reuse:1
@ 11226 train 3.9064 , allloss: 3.9185, dt: 1259.55ms, fracRes: 0.5961, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6320, norm(y): 0.9890, norm:1.6984, tok/sec: 104062.65, flops:91.13, batch-reuse:1
@ 11227 train 4.0128 , allloss: 4.0242, dt: 1259.84ms, fracRes: 0.5953, norm(attn): 0.1680, norm(output): 0.2578, norm(x): 0.6208, norm(y): 0.9886, norm:1.3750, tok/sec: 104038.80, flops:91.11, batch-reuse:1
@ 11228 train 3.9514 , allloss: 3.9636, dt: 1262.48ms, fracRes: 0.5952, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6213, norm(y): 0.9890, norm:1.0813, tok/sec: 103821.25, flops:90.91, batch-reuse:1
@ 11229 train 4.0281 , allloss: 4.0404, dt: 1261.19ms, fracRes: 0.5946, norm(attn): 0.1699, norm(output): 0.2617, norm(x): 0.6246, norm(y): 0.9885, norm:1.4495, tok/sec: 103927.07, flops:91.01, batch-reuse:1
@ 11230 train 3.9588 , allloss: 3.9715, dt: 1270.96ms, fracRes: 0.5980, norm(attn): 0.1680, norm(output): 0.2578, norm(x): 0.6266, norm(y): 0.9888, norm:1.0052, tok/sec: 103128.01, flops:90.31, batch-reuse:1
@ 11231 train 3.9459 , allloss: 3.9581, dt: 1295.74ms, fracRes: 0.5995, norm(attn): 0.1670, norm(output): 0.2559, norm(x): 0.6277, norm(y): 0.9888, norm:1.4052, tok/sec: 101156.31, flops:88.58, batch-reuse:1
@ 11232 train 3.9594 , allloss: 3.9716, dt: 1270.63ms, fracRes: 0.6000, norm(attn): 0.1670, norm(output): 0.2559, norm(x): 0.6298, norm(y): 0.9889, norm:1.0430, tok/sec: 103154.85, flops:90.33, batch-reuse:1
@ 11233 train 4.0074 , allloss: 4.0191, dt: 1267.63ms, fracRes: 0.5996, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6292, norm(y): 0.9887, norm:0.9013, tok/sec: 103399.60, flops:90.55, batch-reuse:1
@ 11234 train 3.9726 , allloss: 3.9842, dt: 1274.35ms, fracRes: 0.5988, norm(attn): 0.1689, norm(output): 0.2578, norm(x): 0.6295, norm(y): 0.9887, norm:0.9358, tok/sec: 102853.86, flops:90.07, batch-reuse:1
@ 11235 train 3.9422 , allloss: 3.9540, dt: 1295.00ms, fracRes: 0.5980, norm(attn): 0.1689, norm(output): 0.2598, norm(x): 0.6304, norm(y): 0.9886, norm:0.8060, tok/sec: 101213.88, flops:88.63, batch-reuse:1
@ 11236 train 3.9315 , allloss: 3.9433, dt: 1263.67ms, fracRes: 0.5977, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6267, norm(y): 0.9889, norm:0.7909, tok/sec: 103723.17, flops:90.83, batch-reuse:1
@ 11237 train 3.9390 , allloss: 3.9512, dt: 1277.79ms, fracRes: 0.5965, norm(attn): 0.1680, norm(output): 0.2578, norm(x): 0.6292, norm(y): 0.9887, norm:0.8283, tok/sec: 102577.48, flops:89.83, batch-reuse:1
@ 11238 train 3.8135 , allloss: 3.8252, dt: 1264.04ms, fracRes: 0.5972, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6283, norm(y): 0.9888, norm:0.7338, tok/sec: 103692.84, flops:90.80, batch-reuse:1
@ 11239 train 3.8921 , allloss: 3.9035, dt: 1291.56ms, fracRes: 0.5971, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6274, norm(y): 0.9886, norm:0.8390, tok/sec: 101483.11, flops:88.87, batch-reuse:1
@ 11240 train 4.0044 , allloss: 4.0156, dt: 1281.92ms, fracRes: 0.5966, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6231, norm(y): 0.9885, norm:0.7983, tok/sec: 102246.58, flops:89.54, batch-reuse:1
@ 11241 train 3.8613 , allloss: 3.8733, dt: 1285.36ms, fracRes: 0.5971, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6243, norm(y): 0.9888, norm:0.8839, tok/sec: 101972.89, flops:89.30, batch-reuse:1
@ 11242 train 3.9143 , allloss: 3.9264, dt: 1253.07ms, fracRes: 0.5968, norm(attn): 0.1699, norm(output): 0.2559, norm(x): 0.6231, norm(y): 0.9888, norm:1.0094, tok/sec: 104601.09, flops:91.60, batch-reuse:1
@ 11243 train 3.9734 , allloss: 3.9855, dt: 1253.58ms, fracRes: 0.5968, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6226, norm(y): 0.9886, norm:0.8265, tok/sec: 104557.78, flops:91.56, batch-reuse:1
@ 11244 train 3.9138 , allloss: 3.9259, dt: 1255.42ms, fracRes: 0.5972, norm(attn): 0.1670, norm(output): 0.2559, norm(x): 0.6251, norm(y): 0.9885, norm:0.8536, tok/sec: 104404.65, flops:91.43, batch-reuse:1
@ 11245 train 4.0154 , allloss: 4.0271, dt: 1290.76ms, fracRes: 0.5972, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6260, norm(y): 0.9882, norm:0.9831, tok/sec: 101546.39, flops:88.92, batch-reuse:1
@ 11246 train 3.9018 , allloss: 3.9135, dt: 1249.96ms, fracRes: 0.5970, norm(attn): 0.1680, norm(output): 0.2578, norm(x): 0.6276, norm(y): 0.9886, norm:0.8289, tok/sec: 104860.80, flops:91.83, batch-reuse:1
@ 11247 train 3.8756 , allloss: 3.8868, dt: 1258.98ms, fracRes: 0.5976, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6250, norm(y): 0.9886, norm:0.9671, tok/sec: 104109.63, flops:91.17, batch-reuse:1
@ 11248 train 3.9569 , allloss: 3.9685, dt: 1261.20ms, fracRes: 0.5989, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6273, norm(y): 0.9888, norm:0.8389, tok/sec: 103926.48, flops:91.01, batch-reuse:1
@ 11249 train 4.0052 , allloss: 4.0177, dt: 1262.23ms, fracRes: 0.5991, norm(attn): 0.1680, norm(output): 0.2578, norm(x): 0.6331, norm(y): 0.9887, norm:1.0279, tok/sec: 103841.35, flops:90.93, batch-reuse:1
@ 11250 train 3.7608 , allloss: 3.7721, dt: 1280.89ms, fracRes: 0.5985, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6252, norm(y): 0.9890, norm:0.9277, tok/sec: 102328.81, flops:89.61, batch-reuse:1
@ 11251 train 3.8879 , allloss: 3.8995, dt: 1254.88ms, fracRes: 0.5978, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6256, norm(y): 0.9887, norm:0.8258, tok/sec: 104449.77, flops:91.47, batch-reuse:1
@ 11252 train 3.9128 , allloss: 3.9244, dt: 1266.87ms, fracRes: 0.5973, norm(attn): 0.1670, norm(output): 0.2559, norm(x): 0.6258, norm(y): 0.9889, norm:0.9096, tok/sec: 103461.48, flops:90.60, batch-reuse:1
@ 11253 train 3.9484 , allloss: 3.9598, dt: 1270.96ms, fracRes: 0.5973, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6285, norm(y): 0.9888, norm:0.7944, tok/sec: 103128.51, flops:90.31, batch-reuse:1
@ 11254 train 3.8382 , allloss: 3.8496, dt: 1285.40ms, fracRes: 0.5973, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6264, norm(y): 0.9889, norm:0.7968, tok/sec: 101970.03, flops:89.29, batch-reuse:1
@ 11255 train 3.8870 , allloss: 3.8986, dt: 1253.61ms, fracRes: 0.5974, norm(attn): 0.1689, norm(output): 0.2578, norm(x): 0.6268, norm(y): 0.9886, norm:0.8152, tok/sec: 104555.69, flops:91.56, batch-reuse:1
@ 11256 train 3.8785 , allloss: 3.8908, dt: 1270.31ms, fracRes: 0.5981, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6330, norm(y): 0.9887, norm:1.0354, tok/sec: 103181.45, flops:90.35, batch-reuse:1
@ 11257 train 3.9322 , allloss: 3.9442, dt: 1266.67ms, fracRes: 0.5969, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6258, norm(y): 0.9886, norm:1.0056, tok/sec: 103477.35, flops:90.61, batch-reuse:1
@ 11258 train 3.9430 , allloss: 3.9549, dt: 1274.92ms, fracRes: 0.5978, norm(attn): 0.1680, norm(output): 0.2578, norm(x): 0.6267, norm(y): 0.9887, norm:0.8889, tok/sec: 102808.10, flops:90.03, batch-reuse:1
@ 11259 train 4.0105 , allloss: 4.0216, dt: 1275.31ms, fracRes: 0.5978, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6206, norm(y): 0.9881, norm:0.8411, tok/sec: 102776.37, flops:90.00, batch-reuse:1
@ 11260 train 4.0007 , allloss: 4.0119, dt: 1279.66ms, fracRes: 0.5980, norm(attn): 0.1699, norm(output): 0.2559, norm(x): 0.6229, norm(y): 0.9883, norm:0.8097, tok/sec: 102426.90, flops:89.69, batch-reuse:1
@ 11261 train 4.0585 , allloss: 4.0705, dt: 1316.91ms, fracRes: 0.5987, norm(attn): 0.1670, norm(output): 0.2559, norm(x): 0.6219, norm(y): 0.9885, norm:0.8581, tok/sec: 99529.87, flops:87.16, batch-reuse:1
@ 11262 train 3.8511 , allloss: 3.8626, dt: 1261.02ms, fracRes: 0.5975, norm(attn): 0.1689, norm(output): 0.2539, norm(x): 0.6194, norm(y): 0.9886, norm:0.8209, tok/sec: 103941.16, flops:91.02, batch-reuse:1
@ 11263 train 3.8922 , allloss: 3.9039, dt: 1278.27ms, fracRes: 0.5973, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6208, norm(y): 0.9885, norm:0.8286, tok/sec: 102538.43, flops:89.79, batch-reuse:1
@ 11264 train 3.8470 , allloss: 3.8590, dt: 1271.82ms, fracRes: 0.5964, norm(attn): 0.1689, norm(output): 0.2539, norm(x): 0.6216, norm(y): 0.9885, norm:0.7772, tok/sec: 103058.39, flops:90.25, batch-reuse:1
@ 11265 train 4.0823 , allloss: 4.0940, dt: 1305.52ms, fracRes: 0.5959, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6177, norm(y): 0.9884, norm:0.7795, tok/sec: 100398.29, flops:87.92, batch-reuse:1
@ 11266 train 3.8880 , allloss: 3.8993, dt: 1259.23ms, fracRes: 0.5973, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6218, norm(y): 0.9883, norm:0.7425, tok/sec: 104089.27, flops:91.15, batch-reuse:1
@ 11267 train 3.9120 , allloss: 3.9237, dt: 1255.07ms, fracRes: 0.5980, norm(attn): 0.1670, norm(output): 0.2578, norm(x): 0.6279, norm(y): 0.9885, norm:0.7655, tok/sec: 104433.72, flops:91.45, batch-reuse:1
@ 11268 train 3.9615 , allloss: 3.9729, dt: 1261.46ms, fracRes: 0.5977, norm(attn): 0.1670, norm(output): 0.2559, norm(x): 0.6253, norm(y): 0.9885, norm:0.7669, tok/sec: 103904.78, flops:90.99, batch-reuse:1
@ 11269 train 3.8776 , allloss: 3.8889, dt: 1292.46ms, fracRes: 0.5982, norm(attn): 0.1680, norm(output): 0.2578, norm(x): 0.6255, norm(y): 0.9886, norm:0.7483, tok/sec: 101412.48, flops:88.81, batch-reuse:1
@ 11270 train 3.8745 , allloss: 3.8857, dt: 1293.73ms, fracRes: 0.5981, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6246, norm(y): 0.9884, norm:0.7580, tok/sec: 101313.16, flops:88.72, batch-reuse:1
@ 11271 train 3.8496 , allloss: 3.8610, dt: 1260.06ms, fracRes: 0.5968, norm(attn): 0.1689, norm(output): 0.2598, norm(x): 0.6246, norm(y): 0.9882, norm:0.7332, tok/sec: 104020.04, flops:91.09, batch-reuse:1
@ 11272 train 3.9265 , allloss: 3.9381, dt: 1265.91ms, fracRes: 0.5966, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6246, norm(y): 0.9883, norm:0.7512, tok/sec: 103539.69, flops:90.67, batch-reuse:1
@ 11273 train 4.0510 , allloss: 4.0626, dt: 1279.14ms, fracRes: 0.5967, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6203, norm(y): 0.9883, norm:0.8008, tok/sec: 102468.88, flops:89.73, batch-reuse:1
@ 11274 train 3.8424 , allloss: 3.8543, dt: 1272.10ms, fracRes: 0.5966, norm(attn): 0.1689, norm(output): 0.2598, norm(x): 0.6229, norm(y): 0.9884, norm:0.8556, tok/sec: 103035.99, flops:90.23, batch-reuse:1
@ 11275 train 3.8966 , allloss: 3.9083, dt: 1263.63ms, fracRes: 0.5966, norm(attn): 0.1699, norm(output): 0.2559, norm(x): 0.6186, norm(y): 0.9883, norm:0.8359, tok/sec: 103726.55, flops:90.83, batch-reuse:1
@ 11276 train 3.9430 , allloss: 3.9547, dt: 1259.17ms, fracRes: 0.5970, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6186, norm(y): 0.9883, norm:0.7896, tok/sec: 104094.08, flops:91.15, batch-reuse:1
@ 11277 train 3.8380 , allloss: 3.8491, dt: 1271.95ms, fracRes: 0.5977, norm(attn): 0.1689, norm(output): 0.2520, norm(x): 0.6180, norm(y): 0.9885, norm:0.7276, tok/sec: 103047.84, flops:90.24, batch-reuse:1
@ 11278 train 3.8713 , allloss: 3.8835, dt: 1287.37ms, fracRes: 0.5986, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6249, norm(y): 0.9886, norm:0.8458, tok/sec: 101813.51, flops:89.16, batch-reuse:1
@ 11279 train 3.8733 , allloss: 3.8853, dt: 1290.77ms, fracRes: 0.5985, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6264, norm(y): 0.9886, norm:0.8004, tok/sec: 101545.73, flops:88.92, batch-reuse:1
@ 11280 train 3.9359 , allloss: 3.9472, dt: 1280.02ms, fracRes: 0.5972, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6245, norm(y): 0.9884, norm:0.7719, tok/sec: 102398.61, flops:89.67, batch-reuse:1
@ 11281 train 3.8756 , allloss: 3.8874, dt: 1277.22ms, fracRes: 0.5968, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6279, norm(y): 0.9886, norm:0.8794, tok/sec: 102622.94, flops:89.87, batch-reuse:1
@ 11282 train 3.8880 , allloss: 3.8991, dt: 1285.62ms, fracRes: 0.5970, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6235, norm(y): 0.9884, norm:0.7216, tok/sec: 101952.58, flops:89.28, batch-reuse:1
@ 11283 train 3.9238 , allloss: 3.9359, dt: 1266.13ms, fracRes: 0.5977, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6275, norm(y): 0.9885, norm:0.8354, tok/sec: 103521.37, flops:90.65, batch-reuse:1
@ 11284 train 4.0586 , allloss: 4.0701, dt: 1251.29ms, fracRes: 0.5972, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6178, norm(y): 0.9883, norm:0.8655, tok/sec: 104749.35, flops:91.73, batch-reuse:1
@ 11285 train 3.8925 , allloss: 3.9039, dt: 1260.40ms, fracRes: 0.5967, norm(attn): 0.1699, norm(output): 0.2559, norm(x): 0.6203, norm(y): 0.9884, norm:0.8388, tok/sec: 103992.28, flops:91.06, batch-reuse:1
@ 11286 train 3.7489 , allloss: 3.7620, dt: 1273.24ms, fracRes: 0.5975, norm(attn): 0.1719, norm(output): 0.2578, norm(x): 0.6305, norm(y): 0.9888, norm:1.3848, tok/sec: 102943.70, flops:90.15, batch-reuse:1
@ 11287 train 3.9085 , allloss: 3.9202, dt: 1264.23ms, fracRes: 0.5969, norm(attn): 0.1699, norm(output): 0.2559, norm(x): 0.6171, norm(y): 0.9884, norm:0.8800, tok/sec: 103677.14, flops:90.79, batch-reuse:1
@ 11288 train 3.9505 , allloss: 3.9624, dt: 1283.04ms, fracRes: 0.5969, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6203, norm(y): 0.9884, norm:0.8397, tok/sec: 102157.28, flops:89.46, batch-reuse:1
@ 11289 train 3.9008 , allloss: 3.9124, dt: 1283.93ms, fracRes: 0.5965, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6202, norm(y): 0.9884, norm:1.0545, tok/sec: 102086.44, flops:89.40, batch-reuse:1
@ 11290 train 3.8454 , allloss: 3.8573, dt: 1268.05ms, fracRes: 0.5965, norm(attn): 0.1680, norm(output): 0.2598, norm(x): 0.6219, norm(y): 0.9885, norm:0.8370, tok/sec: 103364.80, flops:90.52, batch-reuse:1
@ 11291 train 3.8226 , allloss: 3.8343, dt: 1275.73ms, fracRes: 0.5970, norm(attn): 0.1689, norm(output): 0.2539, norm(x): 0.6222, norm(y): 0.9889, norm:0.8179, tok/sec: 102742.52, flops:89.97, batch-reuse:1
@ 11292 train 3.8301 , allloss: 3.8413, dt: 1256.16ms, fracRes: 0.5973, norm(attn): 0.1670, norm(output): 0.2559, norm(x): 0.6224, norm(y): 0.9885, norm:0.7693, tok/sec: 104343.22, flops:91.37, batch-reuse:1
@ 11293 train 3.8745 , allloss: 3.8861, dt: 1261.95ms, fracRes: 0.5979, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6229, norm(y): 0.9884, norm:0.8068, tok/sec: 103864.91, flops:90.95, batch-reuse:1
@ 11294 train 3.9219 , allloss: 3.9334, dt: 1275.52ms, fracRes: 0.5978, norm(attn): 0.1689, norm(output): 0.2539, norm(x): 0.6221, norm(y): 0.9884, norm:0.8483, tok/sec: 102759.48, flops:89.99, batch-reuse:1
@ 11295 train 3.9026 , allloss: 3.9151, dt: 1273.66ms, fracRes: 0.5983, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6255, norm(y): 0.9886, norm:0.8494, tok/sec: 102909.79, flops:90.12, batch-reuse:1
@ 11296 train 3.9195 , allloss: 3.9309, dt: 1265.34ms, fracRes: 0.5980, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6245, norm(y): 0.9886, norm:0.8837, tok/sec: 103586.07, flops:90.71, batch-reuse:1
@ 11297 train 3.9354 , allloss: 3.9467, dt: 1287.76ms, fracRes: 0.5972, norm(attn): 0.1689, norm(output): 0.2539, norm(x): 0.6264, norm(y): 0.9885, norm:0.8009, tok/sec: 101782.66, flops:89.13, batch-reuse:1
@ 11298 train 3.8365 , allloss: 3.8485, dt: 1264.58ms, fracRes: 0.5972, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6343, norm(y): 0.9884, norm:0.8453, tok/sec: 103648.72, flops:90.76, batch-reuse:1
@ 11299 train 3.9280 , allloss: 3.9396, dt: 1288.98ms, fracRes: 0.5974, norm(attn): 0.1699, norm(output): 0.2559, norm(x): 0.6267, norm(y): 0.9884, norm:0.8244, tok/sec: 101686.77, flops:89.05, batch-reuse:1
@ 11300 train 3.8986 , allloss: 3.9108, dt: 1271.78ms, fracRes: 0.5976, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6279, norm(y): 0.9882, norm:0.8053, tok/sec: 103061.56, flops:90.25, batch-reuse:1
@ 11301 train 3.9546 , allloss: 3.9672, dt: 1263.16ms, fracRes: 0.5974, norm(attn): 0.1689, norm(output): 0.2578, norm(x): 0.6253, norm(y): 0.9881, norm:0.8227, tok/sec: 103765.04, flops:90.87, batch-reuse:1
@ 11302 train 3.8956 , allloss: 3.9075, dt: 1277.13ms, fracRes: 0.5978, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6222, norm(y): 0.9885, norm:0.8340, tok/sec: 102630.30, flops:89.87, batch-reuse:1
@ 11303 train 3.8655 , allloss: 3.8768, dt: 1287.76ms, fracRes: 0.5972, norm(attn): 0.1689, norm(output): 0.2539, norm(x): 0.6194, norm(y): 0.9885, norm:0.8474, tok/sec: 101782.77, flops:89.13, batch-reuse:1
@ 11304 train 3.9151 , allloss: 3.9266, dt: 1253.96ms, fracRes: 0.5969, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6200, norm(y): 0.9883, norm:0.7427, tok/sec: 104526.55, flops:91.53, batch-reuse:1
@ 11305 train 3.9163 , allloss: 3.9283, dt: 1267.67ms, fracRes: 0.5966, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6219, norm(y): 0.9882, norm:1.3663, tok/sec: 103395.73, flops:90.54, batch-reuse:1
@ 11306 train 3.8882 , allloss: 3.9007, dt: 1263.07ms, fracRes: 0.5973, norm(attn): 0.1680, norm(output): 0.2578, norm(x): 0.6244, norm(y): 0.9882, norm:1.0602, tok/sec: 103772.80, flops:90.87, batch-reuse:1
@ 11307 train 3.9231 , allloss: 3.9348, dt: 1270.28ms, fracRes: 0.5985, norm(attn): 0.1650, norm(output): 0.2559, norm(x): 0.6239, norm(y): 0.9881, norm:1.0022, tok/sec: 103183.17, flops:90.36, batch-reuse:1
@ 11308 train 3.9590 , allloss: 3.9709, dt: 1264.12ms, fracRes: 0.5981, norm(attn): 0.1689, norm(output): 0.2598, norm(x): 0.6297, norm(y): 0.9882, norm:0.8614, tok/sec: 103686.10, flops:90.80, batch-reuse:1
@ 11309 train 3.8562 , allloss: 3.8679, dt: 1285.75ms, fracRes: 0.5975, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6269, norm(y): 0.9883, norm:0.9872, tok/sec: 101942.03, flops:89.27, batch-reuse:1
@ 11310 train 3.9285 , allloss: 3.9396, dt: 1317.98ms, fracRes: 0.5977, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6194, norm(y): 0.9884, norm:0.8168, tok/sec: 99449.14, flops:87.09, batch-reuse:1
@ 11311 train 3.8511 , allloss: 3.8628, dt: 1271.55ms, fracRes: 0.5977, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6258, norm(y): 0.9882, norm:0.8374, tok/sec: 103080.13, flops:90.27, batch-reuse:1
@ 11312 train 3.8365 , allloss: 3.8479, dt: 1276.06ms, fracRes: 0.5974, norm(attn): 0.1660, norm(output): 0.2559, norm(x): 0.6213, norm(y): 0.9881, norm:0.7827, tok/sec: 102716.53, flops:89.95, batch-reuse:1
@ 11313 train 3.8859 , allloss: 3.8975, dt: 1288.25ms, fracRes: 0.5970, norm(attn): 0.1699, norm(output): 0.2539, norm(x): 0.6212, norm(y): 0.9883, norm:0.8022, tok/sec: 101744.13, flops:89.10, batch-reuse:1
@ 11314 train 3.8796 , allloss: 3.8911, dt: 1275.68ms, fracRes: 0.5982, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6222, norm(y): 0.9883, norm:0.7680, tok/sec: 102747.07, flops:89.97, batch-reuse:1
@ 11315 train 3.8662 , allloss: 3.8776, dt: 1277.12ms, fracRes: 0.5981, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6229, norm(y): 0.9882, norm:0.7247, tok/sec: 102631.16, flops:89.87, batch-reuse:1
@ 11316 train 3.8373 , allloss: 3.8486, dt: 1255.40ms, fracRes: 0.5967, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6195, norm(y): 0.9881, norm:0.7542, tok/sec: 104406.39, flops:91.43, batch-reuse:1
@ 11317 train 3.8139 , allloss: 3.8256, dt: 1253.66ms, fracRes: 0.5964, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6203, norm(y): 0.9882, norm:0.7625, tok/sec: 104551.87, flops:91.55, batch-reuse:1
@ 11318 train 3.8963 , allloss: 3.9079, dt: 1248.21ms, fracRes: 0.5961, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6197, norm(y): 0.9882, norm:0.7836, tok/sec: 105007.55, flops:91.95, batch-reuse:1
@ 11319 train 3.8691 , allloss: 3.8806, dt: 1258.82ms, fracRes: 0.5959, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6189, norm(y): 0.9883, norm:0.8601, tok/sec: 104123.30, flops:91.18, batch-reuse:1
@ 11320 train 3.8218 , allloss: 3.8330, dt: 1265.35ms, fracRes: 0.5961, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6156, norm(y): 0.9883, norm:0.7367, tok/sec: 103585.23, flops:90.71, batch-reuse:1
@ 11321 train 3.8098 , allloss: 3.8241, dt: 1257.25ms, fracRes: 0.5972, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6242, norm(y): 0.9883, norm:0.9006, tok/sec: 104253.20, flops:91.29, batch-reuse:1
@ 11322 train 3.8439 , allloss: 3.8549, dt: 1254.18ms, fracRes: 0.5971, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6150, norm(y): 0.9882, norm:0.7816, tok/sec: 104508.05, flops:91.52, batch-reuse:1
@ 11323 train 3.7925 , allloss: 3.8037, dt: 1269.53ms, fracRes: 0.5979, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6158, norm(y): 0.9882, norm:0.7710, tok/sec: 103244.85, flops:90.41, batch-reuse:1
@ 11324 train 3.9452 , allloss: 3.9572, dt: 1264.61ms, fracRes: 0.5975, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6262, norm(y): 0.9879, norm:1.0423, tok/sec: 103646.39, flops:90.76, batch-reuse:1
@ 11325 train 3.9490 , allloss: 3.9606, dt: 1267.29ms, fracRes: 0.5979, norm(attn): 0.1689, norm(output): 0.2539, norm(x): 0.6225, norm(y): 0.9883, norm:0.8994, tok/sec: 103426.75, flops:90.57, batch-reuse:1
@ 11326 train 3.8838 , allloss: 3.8952, dt: 1280.40ms, fracRes: 0.5982, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6229, norm(y): 0.9883, norm:0.7950, tok/sec: 102367.68, flops:89.64, batch-reuse:1
@ 11327 train 3.8357 , allloss: 3.8466, dt: 1267.28ms, fracRes: 0.5973, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6219, norm(y): 0.9882, norm:0.8944, tok/sec: 103427.71, flops:90.57, batch-reuse:1
@ 11328 train 3.8005 , allloss: 3.8116, dt: 1282.70ms, fracRes: 0.5971, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6226, norm(y): 0.9881, norm:0.8508, tok/sec: 102184.49, flops:89.48, batch-reuse:1
@ 11329 train 3.8156 , allloss: 3.8276, dt: 1275.02ms, fracRes: 0.5969, norm(attn): 0.1689, norm(output): 0.2617, norm(x): 0.6298, norm(y): 0.9881, norm:0.8245, tok/sec: 102800.23, flops:90.02, batch-reuse:1
@ 11330 train 3.8242 , allloss: 3.8353, dt: 1281.55ms, fracRes: 0.5969, norm(attn): 0.1689, norm(output): 0.2539, norm(x): 0.6173, norm(y): 0.9881, norm:0.8766, tok/sec: 102276.19, flops:89.56, batch-reuse:1
@ 11331 train 3.8233 , allloss: 3.8345, dt: 1283.19ms, fracRes: 0.5973, norm(attn): 0.1689, norm(output): 0.2539, norm(x): 0.6182, norm(y): 0.9883, norm:0.9098, tok/sec: 102145.40, flops:89.45, batch-reuse:1
@ 11332 train 3.7454 , allloss: 3.7567, dt: 1275.29ms, fracRes: 0.5976, norm(attn): 0.1699, norm(output): 0.2559, norm(x): 0.6204, norm(y): 0.9883, norm:0.8972, tok/sec: 102777.84, flops:90.00, batch-reuse:1
@ 11333 train 3.6410 , allloss: 3.6520, dt: 1285.37ms, fracRes: 0.5983, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6200, norm(y): 0.9884, norm:0.7899, tok/sec: 101971.85, flops:89.30, batch-reuse:1
@ 11334 train 3.6990 , allloss: 3.7103, dt: 1299.24ms, fracRes: 0.5987, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6216, norm(y): 0.9886, norm:0.8463, tok/sec: 100883.53, flops:88.34, batch-reuse:1
@ 11335 train 3.7360 , allloss: 3.7473, dt: 1300.97ms, fracRes: 0.5986, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6197, norm(y): 0.9883, norm:0.8222, tok/sec: 100749.75, flops:88.23, batch-reuse:1
@ 11336 train 3.7943 , allloss: 3.8056, dt: 1265.16ms, fracRes: 0.5983, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6220, norm(y): 0.9882, norm:0.8189, tok/sec: 103601.08, flops:90.72, batch-reuse:1
@ 11337 train 3.6385 , allloss: 3.6498, dt: 1260.78ms, fracRes: 0.5981, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6214, norm(y): 0.9883, norm:0.8779, tok/sec: 103961.27, flops:91.04, batch-reuse:1
@ 11338 train 3.6537 , allloss: 3.6652, dt: 1272.98ms, fracRes: 0.5981, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6192, norm(y): 0.9886, norm:0.8592, tok/sec: 102964.29, flops:90.16, batch-reuse:1
@ 11339 train 3.6985 , allloss: 3.7106, dt: 1272.29ms, fracRes: 0.5966, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6203, norm(y): 0.9883, norm:0.8596, tok/sec: 103020.92, flops:90.21, batch-reuse:1
@ 11340 train 3.7321 , allloss: 3.7439, dt: 1283.91ms, fracRes: 0.5968, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6133, norm(y): 0.9885, norm:1.0322, tok/sec: 102088.04, flops:89.40, batch-reuse:1
@ 11341 train 3.7767 , allloss: 3.7884, dt: 1286.42ms, fracRes: 0.5976, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6150, norm(y): 0.9884, norm:1.0710, tok/sec: 101888.99, flops:89.22, batch-reuse:1
@ 11342 train 3.7711 , allloss: 3.7826, dt: 1286.09ms, fracRes: 0.5967, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6200, norm(y): 0.9881, norm:0.8576, tok/sec: 101915.29, flops:89.25, batch-reuse:1
@ 11343 train 3.7061 , allloss: 3.7176, dt: 1285.26ms, fracRes: 0.5970, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6216, norm(y): 0.9881, norm:0.8601, tok/sec: 101980.77, flops:89.30, batch-reuse:1
@ 11344 train 3.7022 , allloss: 3.7137, dt: 1250.58ms, fracRes: 0.5972, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6223, norm(y): 0.9880, norm:0.9488, tok/sec: 104808.62, flops:91.78, batch-reuse:1
@ 11345 train 3.5958 , allloss: 3.6074, dt: 1266.52ms, fracRes: 0.5975, norm(attn): 0.1689, norm(output): 0.2539, norm(x): 0.6206, norm(y): 0.9883, norm:0.7707, tok/sec: 103489.86, flops:90.62, batch-reuse:1
@ 11346 train 3.6348 , allloss: 3.6467, dt: 1272.02ms, fracRes: 0.5967, norm(attn): 0.1670, norm(output): 0.2559, norm(x): 0.6222, norm(y): 0.9882, norm:0.8905, tok/sec: 103042.30, flops:90.23, batch-reuse:1
@ 11347 train 3.7365 , allloss: 3.7478, dt: 1284.06ms, fracRes: 0.5959, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6204, norm(y): 0.9881, norm:0.8368, tok/sec: 102076.53, flops:89.39, batch-reuse:1
@ 11348 train 3.7464 , allloss: 3.7579, dt: 1280.25ms, fracRes: 0.5966, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6204, norm(y): 0.9885, norm:0.8785, tok/sec: 102380.17, flops:89.65, batch-reuse:1
@ 11349 train 3.6796 , allloss: 3.6909, dt: 1281.25ms, fracRes: 0.5962, norm(attn): 0.1709, norm(output): 0.2539, norm(x): 0.6171, norm(y): 0.9885, norm:1.0383, tok/sec: 102300.40, flops:89.58, batch-reuse:1
@ 11350 train 3.7134 , allloss: 3.7249, dt: 1284.42ms, fracRes: 0.5964, norm(attn): 0.1689, norm(output): 0.2578, norm(x): 0.6182, norm(y): 0.9884, norm:0.8753, tok/sec: 102047.75, flops:89.36, batch-reuse:1
@ 11351 train 3.7965 , allloss: 3.8076, dt: 1262.33ms, fracRes: 0.5963, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6179, norm(y): 0.9882, norm:0.9002, tok/sec: 103833.74, flops:90.93, batch-reuse:1
@ 11352 train 3.6982 , allloss: 3.7094, dt: 1276.63ms, fracRes: 0.5966, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6169, norm(y): 0.9882, norm:1.0041, tok/sec: 102670.30, flops:89.91, batch-reuse:1
@ 11353 train 3.7511 , allloss: 3.7622, dt: 1288.07ms, fracRes: 0.5961, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6166, norm(y): 0.9881, norm:0.8228, tok/sec: 101758.82, flops:89.11, batch-reuse:1
@ 11354 train 3.6927 , allloss: 3.7039, dt: 1265.24ms, fracRes: 0.5970, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6159, norm(y): 0.9880, norm:0.9921, tok/sec: 103594.83, flops:90.72, batch-reuse:1
@ 11355 train 3.8482 , allloss: 3.8596, dt: 1273.06ms, fracRes: 0.5972, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6139, norm(y): 0.9878, norm:0.8688, tok/sec: 102958.16, flops:90.16, batch-reuse:1
@ 11356 train 3.8105 , allloss: 3.8220, dt: 1264.52ms, fracRes: 0.5969, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6162, norm(y): 0.9878, norm:0.8131, tok/sec: 103653.29, flops:90.77, batch-reuse:1
@ 11357 train 3.6252 , allloss: 3.6374, dt: 1262.47ms, fracRes: 0.5972, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6199, norm(y): 0.9882, norm:0.8988, tok/sec: 103821.77, flops:90.92, batch-reuse:1
@ 11358 train 3.7722 , allloss: 3.7836, dt: 1247.07ms, fracRes: 0.5978, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6132, norm(y): 0.9880, norm:0.8526, tok/sec: 105103.58, flops:92.04, batch-reuse:1
@ 11359 train 3.7071 , allloss: 3.7185, dt: 1260.45ms, fracRes: 0.5983, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6162, norm(y): 0.9881, norm:0.9225, tok/sec: 103987.87, flops:91.06, batch-reuse:1
@ 11360 train 3.6507 , allloss: 3.6617, dt: 1281.12ms, fracRes: 0.5976, norm(attn): 0.1689, norm(output): 0.2539, norm(x): 0.6147, norm(y): 0.9883, norm:0.8725, tok/sec: 102310.23, flops:89.59, batch-reuse:1
@ 11361 train 3.7591 , allloss: 3.7706, dt: 1276.66ms, fracRes: 0.5977, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6181, norm(y): 0.9881, norm:0.8597, tok/sec: 102667.84, flops:89.90, batch-reuse:1
@ 11362 train 3.7346 , allloss: 3.7457, dt: 1265.17ms, fracRes: 0.5978, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6184, norm(y): 0.9881, norm:0.8906, tok/sec: 103600.18, flops:90.72, batch-reuse:1
@ 11363 train 3.7048 , allloss: 3.7165, dt: 1294.61ms, fracRes: 0.5974, norm(attn): 0.1689, norm(output): 0.2520, norm(x): 0.6209, norm(y): 0.9883, norm:0.8977, tok/sec: 101244.48, flops:88.66, batch-reuse:1
@ 11364 train 3.7270 , allloss: 3.7385, dt: 1292.09ms, fracRes: 0.5976, norm(attn): 0.1650, norm(output): 0.2539, norm(x): 0.6188, norm(y): 0.9882, norm:0.8887, tok/sec: 101442.14, flops:88.83, batch-reuse:1
@ 11365 train 3.7245 , allloss: 3.7359, dt: 1270.91ms, fracRes: 0.5974, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6195, norm(y): 0.9882, norm:0.7883, tok/sec: 103132.24, flops:90.31, batch-reuse:1
@ 11366 train 3.6042 , allloss: 3.6161, dt: 1292.96ms, fracRes: 0.5975, norm(attn): 0.1699, norm(output): 0.2559, norm(x): 0.6196, norm(y): 0.9883, norm:0.9262, tok/sec: 101373.65, flops:88.77, batch-reuse:1
@ 11367 train 3.7002 , allloss: 3.7117, dt: 1270.30ms, fracRes: 0.5977, norm(attn): 0.1689, norm(output): 0.2539, norm(x): 0.6157, norm(y): 0.9880, norm:0.9703, tok/sec: 103181.91, flops:90.35, batch-reuse:1
@ 11368 train 3.7609 , allloss: 3.7723, dt: 1262.29ms, fracRes: 0.5978, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6170, norm(y): 0.9878, norm:0.7670, tok/sec: 103836.60, flops:90.93, batch-reuse:1
@ 11369 train 3.6880 , allloss: 3.6994, dt: 1269.58ms, fracRes: 0.5980, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6174, norm(y): 0.9879, norm:0.9161, tok/sec: 103240.80, flops:90.41, batch-reuse:1
@ 11370 train 3.5621 , allloss: 3.5739, dt: 1273.64ms, fracRes: 0.5973, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6193, norm(y): 0.9880, norm:0.8162, tok/sec: 102911.56, flops:90.12, batch-reuse:1
@ 11371 train 3.6410 , allloss: 3.6526, dt: 1286.38ms, fracRes: 0.5969, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6197, norm(y): 0.9881, norm:0.8662, tok/sec: 101891.83, flops:89.23, batch-reuse:1
@ 11372 train 3.7679 , allloss: 3.7792, dt: 1290.38ms, fracRes: 0.5965, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6156, norm(y): 0.9877, norm:0.9356, tok/sec: 101576.04, flops:88.95, batch-reuse:1
@ 11373 train 3.7693 , allloss: 3.7806, dt: 1314.76ms, fracRes: 0.5963, norm(attn): 0.1699, norm(output): 0.2539, norm(x): 0.6185, norm(y): 0.9878, norm:0.7625, tok/sec: 99692.76, flops:87.30, batch-reuse:1
@ 11374 train 3.6496 , allloss: 3.6607, dt: 1294.34ms, fracRes: 0.5962, norm(attn): 0.1689, norm(output): 0.2539, norm(x): 0.6187, norm(y): 0.9882, norm:0.8537, tok/sec: 101265.89, flops:88.68, batch-reuse:1
@ 11375 train 3.6268 , allloss: 3.6390, dt: 1316.08ms, fracRes: 0.5964, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6219, norm(y): 0.9883, norm:0.8639, tok/sec: 99592.92, flops:87.21, batch-reuse:1
@ 11376 train 3.6568 , allloss: 3.6681, dt: 1266.39ms, fracRes: 0.5962, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6167, norm(y): 0.9882, norm:0.8282, tok/sec: 103500.83, flops:90.63, batch-reuse:1
@ 11377 train 3.6680 , allloss: 3.6795, dt: 1261.76ms, fracRes: 0.5971, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6209, norm(y): 0.9880, norm:0.8322, tok/sec: 103880.04, flops:90.97, batch-reuse:1
@ 11378 train 3.6371 , allloss: 3.6480, dt: 1253.56ms, fracRes: 0.5964, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6171, norm(y): 0.9880, norm:0.7311, tok/sec: 104559.85, flops:91.56, batch-reuse:1
@ 11379 train 3.6513 , allloss: 3.6627, dt: 1260.62ms, fracRes: 0.5963, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6170, norm(y): 0.9882, norm:0.7949, tok/sec: 103974.64, flops:91.05, batch-reuse:1
@ 11380 train 3.9789 , allloss: 3.9917, dt: 1298.14ms, fracRes: 0.5957, norm(attn): 0.1670, norm(output): 0.2578, norm(x): 0.6183, norm(y): 0.9878, norm:0.8537, tok/sec: 100969.41, flops:88.42, batch-reuse:1
@ 11381 train 4.0625 , allloss: 4.0741, dt: 1263.07ms, fracRes: 0.5960, norm(attn): 0.1680, norm(output): 0.2578, norm(x): 0.6179, norm(y): 0.9877, norm:0.9001, tok/sec: 103772.27, flops:90.87, batch-reuse:1
@ 11382 train 3.9087 , allloss: 3.9204, dt: 1267.03ms, fracRes: 0.5963, norm(attn): 0.1689, norm(output): 0.2578, norm(x): 0.6200, norm(y): 0.9878, norm:0.8414, tok/sec: 103448.20, flops:90.59, batch-reuse:1
@ 11383 train 3.9971 , allloss: 4.0087, dt: 1261.42ms, fracRes: 0.5959, norm(attn): 0.1689, norm(output): 0.2578, norm(x): 0.6201, norm(y): 0.9878, norm:0.8806, tok/sec: 103908.37, flops:90.99, batch-reuse:1
@ 11384 train 3.9271 , allloss: 3.9389, dt: 1248.60ms, fracRes: 0.5958, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6186, norm(y): 0.9880, norm:0.8518, tok/sec: 104975.23, flops:91.93, batch-reuse:1
@ 11385 train 3.9373 , allloss: 3.9486, dt: 1253.88ms, fracRes: 0.5962, norm(attn): 0.1699, norm(output): 0.2559, norm(x): 0.6151, norm(y): 0.9877, norm:0.8560, tok/sec: 104533.27, flops:91.54, batch-reuse:1
@ 11386 train 3.8660 , allloss: 3.8775, dt: 1269.23ms, fracRes: 0.5978, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6164, norm(y): 0.9879, norm:0.8536, tok/sec: 103269.00, flops:90.43, batch-reuse:1
@ 11387 train 3.9866 , allloss: 3.9979, dt: 1270.55ms, fracRes: 0.5982, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6172, norm(y): 0.9879, norm:0.8092, tok/sec: 103161.87, flops:90.34, batch-reuse:1
@ 11388 train 3.9032 , allloss: 3.9147, dt: 1264.18ms, fracRes: 0.5979, norm(attn): 0.1689, norm(output): 0.2539, norm(x): 0.6151, norm(y): 0.9880, norm:0.7965, tok/sec: 103681.21, flops:90.79, batch-reuse:1
@ 11389 train 4.0514 , allloss: 4.0627, dt: 1252.26ms, fracRes: 0.5968, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6140, norm(y): 0.9877, norm:0.9130, tok/sec: 104668.20, flops:91.66, batch-reuse:1
@ 11390 train 3.9788 , allloss: 3.9907, dt: 1267.09ms, fracRes: 0.5973, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6159, norm(y): 0.9879, norm:0.9256, tok/sec: 103443.69, flops:90.58, batch-reuse:1
@ 11391 train 3.9854 , allloss: 3.9969, dt: 1273.29ms, fracRes: 0.5959, norm(attn): 0.1670, norm(output): 0.2559, norm(x): 0.6162, norm(y): 0.9880, norm:1.0972, tok/sec: 102939.65, flops:90.14, batch-reuse:1
@ 11392 train 3.9652 , allloss: 3.9766, dt: 1273.42ms, fracRes: 0.5948, norm(attn): 0.1699, norm(output): 0.2559, norm(x): 0.6149, norm(y): 0.9879, norm:1.0307, tok/sec: 102929.11, flops:90.13, batch-reuse:1
@ 11393 train 3.8845 , allloss: 3.8964, dt: 1257.42ms, fracRes: 0.5961, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6193, norm(y): 0.9880, norm:0.8144, tok/sec: 104238.64, flops:91.28, batch-reuse:1
@ 11394 train 3.9208 , allloss: 3.9322, dt: 1275.90ms, fracRes: 0.5962, norm(attn): 0.1670, norm(output): 0.2559, norm(x): 0.6166, norm(y): 0.9875, norm:0.9548, tok/sec: 102728.68, flops:89.96, batch-reuse:1
@ 11395 train 3.9074 , allloss: 3.9198, dt: 1274.60ms, fracRes: 0.5986, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6217, norm(y): 0.9879, norm:0.9733, tok/sec: 102833.94, flops:90.05, batch-reuse:1
@ 11396 train 3.9498 , allloss: 3.9610, dt: 1261.48ms, fracRes: 0.5983, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6186, norm(y): 0.9877, norm:0.8923, tok/sec: 103903.38, flops:90.99, batch-reuse:1
@ 11397 train 3.8846 , allloss: 3.8964, dt: 1277.00ms, fracRes: 0.5971, norm(attn): 0.1689, norm(output): 0.2578, norm(x): 0.6235, norm(y): 0.9879, norm:0.8634, tok/sec: 102640.95, flops:89.88, batch-reuse:1
@ 11398 train 3.8759 , allloss: 3.8877, dt: 1278.96ms, fracRes: 0.5976, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6207, norm(y): 0.9879, norm:0.8634, tok/sec: 102483.10, flops:89.74, batch-reuse:1
@ 11399 train 3.9278 , allloss: 3.9396, dt: 1284.54ms, fracRes: 0.5975, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6164, norm(y): 0.9877, norm:0.8846, tok/sec: 102038.24, flops:89.35, batch-reuse:1
@ 11400 train 3.8819 , allloss: 3.8936, dt: 1267.31ms, fracRes: 0.5986, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6183, norm(y): 0.9878, norm:0.8464, tok/sec: 103425.57, flops:90.57, batch-reuse:1
@ 11401 train 4.0085 , allloss: 4.0200, dt: 1265.60ms, fracRes: 0.5980, norm(attn): 0.1670, norm(output): 0.2559, norm(x): 0.6217, norm(y): 0.9874, norm:0.8076, tok/sec: 103565.38, flops:90.69, batch-reuse:1
@ 11402 train 4.0475 , allloss: 4.0591, dt: 1269.07ms, fracRes: 0.5980, norm(attn): 0.1680, norm(output): 0.2578, norm(x): 0.6231, norm(y): 0.9876, norm:1.0915, tok/sec: 103281.94, flops:90.44, batch-reuse:1
@ 11403 train 3.9444 , allloss: 3.9562, dt: 1287.69ms, fracRes: 0.5970, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6254, norm(y): 0.9875, norm:1.0685, tok/sec: 101788.76, flops:89.13, batch-reuse:1
@ 11404 train 3.9552 , allloss: 3.9669, dt: 1298.32ms, fracRes: 0.5982, norm(attn): 0.1670, norm(output): 0.2578, norm(x): 0.6266, norm(y): 0.9876, norm:0.8414, tok/sec: 100955.04, flops:88.40, batch-reuse:1
@ 11405 train 3.9216 , allloss: 3.9334, dt: 1301.97ms, fracRes: 0.5976, norm(attn): 0.1660, norm(output): 0.2559, norm(x): 0.6235, norm(y): 0.9876, norm:0.9149, tok/sec: 100671.73, flops:88.16, batch-reuse:1
@ 11406 train 3.9019 , allloss: 3.9137, dt: 1287.41ms, fracRes: 0.5978, norm(attn): 0.1660, norm(output): 0.2559, norm(x): 0.6242, norm(y): 0.9877, norm:0.9192, tok/sec: 101810.37, flops:89.15, batch-reuse:1
@ 11407 train 3.9996 , allloss: 4.0109, dt: 1288.96ms, fracRes: 0.5968, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6203, norm(y): 0.9877, norm:0.8273, tok/sec: 101688.30, flops:89.05, batch-reuse:1
@ 11408 train 3.9534 , allloss: 3.9651, dt: 1280.29ms, fracRes: 0.5972, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6214, norm(y): 0.9879, norm:0.9173, tok/sec: 102376.83, flops:89.65, batch-reuse:1
@ 11409 train 3.8655 , allloss: 3.8767, dt: 1254.25ms, fracRes: 0.5968, norm(attn): 0.1699, norm(output): 0.2539, norm(x): 0.6198, norm(y): 0.9877, norm:0.7552, tok/sec: 104501.91, flops:91.51, batch-reuse:1
@ 11410 train 3.9146 , allloss: 3.9259, dt: 1275.18ms, fracRes: 0.5969, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6216, norm(y): 0.9878, norm:0.8182, tok/sec: 102787.36, flops:90.01, batch-reuse:1
@ 11411 train 3.9117 , allloss: 3.9232, dt: 1284.27ms, fracRes: 0.5965, norm(attn): 0.1689, norm(output): 0.2617, norm(x): 0.6246, norm(y): 0.9874, norm:0.8195, tok/sec: 102059.91, flops:89.37, batch-reuse:1
@ 11412 train 3.9032 , allloss: 3.9149, dt: 1266.22ms, fracRes: 0.5963, norm(attn): 0.1689, norm(output): 0.2578, norm(x): 0.6268, norm(y): 0.9876, norm:0.7984, tok/sec: 103514.76, flops:90.65, batch-reuse:1
@ 11413 train 3.9330 , allloss: 3.9449, dt: 1283.68ms, fracRes: 0.5965, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6250, norm(y): 0.9879, norm:0.7735, tok/sec: 102106.30, flops:89.41, batch-reuse:1
@ 11414 train 3.8782 , allloss: 3.8900, dt: 1261.08ms, fracRes: 0.5961, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6243, norm(y): 0.9877, norm:0.8596, tok/sec: 103936.60, flops:91.02, batch-reuse:1
@ 11415 train 3.9325 , allloss: 3.9440, dt: 1253.85ms, fracRes: 0.5955, norm(attn): 0.1699, norm(output): 0.2617, norm(x): 0.6234, norm(y): 0.9874, norm:0.7976, tok/sec: 104535.27, flops:91.54, batch-reuse:1
@ 11416 train 4.0151 , allloss: 4.0267, dt: 1264.91ms, fracRes: 0.5960, norm(attn): 0.1689, norm(output): 0.2578, norm(x): 0.6204, norm(y): 0.9873, norm:0.8066, tok/sec: 103621.92, flops:90.74, batch-reuse:1
@ 11417 train 3.8226 , allloss: 3.8344, dt: 1273.12ms, fracRes: 0.5971, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6235, norm(y): 0.9877, norm:0.8078, tok/sec: 102953.23, flops:90.15, batch-reuse:1
@ 11418 train 4.0049 , allloss: 4.0167, dt: 1266.80ms, fracRes: 0.5972, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6198, norm(y): 0.9874, norm:0.7681, tok/sec: 103466.76, flops:90.60, batch-reuse:1
@ 11419 train 3.9053 , allloss: 3.9169, dt: 1262.80ms, fracRes: 0.5970, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6192, norm(y): 0.9875, norm:0.7947, tok/sec: 103794.33, flops:90.89, batch-reuse:1
@ 11420 train 3.9831 , allloss: 3.9945, dt: 1264.51ms, fracRes: 0.5973, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6182, norm(y): 0.9874, norm:0.7843, tok/sec: 103654.58, flops:90.77, batch-reuse:1
@ 11421 train 3.8034 , allloss: 3.8154, dt: 1253.28ms, fracRes: 0.5969, norm(attn): 0.1699, norm(output): 0.2559, norm(x): 0.6225, norm(y): 0.9876, norm:0.8306, tok/sec: 104583.42, flops:91.58, batch-reuse:1
@ 11422 train 3.8748 , allloss: 3.8861, dt: 1279.72ms, fracRes: 0.5961, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6152, norm(y): 0.9874, norm:0.7767, tok/sec: 102422.40, flops:89.69, batch-reuse:1
@ 11423 train 3.9409 , allloss: 3.9524, dt: 1258.95ms, fracRes: 0.5961, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6163, norm(y): 0.9874, norm:0.8423, tok/sec: 104112.37, flops:91.17, batch-reuse:1
@ 11424 train 3.9113 , allloss: 3.9228, dt: 1260.50ms, fracRes: 0.5966, norm(attn): 0.1689, norm(output): 0.2539, norm(x): 0.6167, norm(y): 0.9872, norm:0.8174, tok/sec: 103983.82, flops:91.06, batch-reuse:1
@ 11425 train 3.9548 , allloss: 3.9659, dt: 1296.13ms, fracRes: 0.5976, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6174, norm(y): 0.9874, norm:0.7689, tok/sec: 101125.51, flops:88.55, batch-reuse:1
@ 11426 train 3.9424 , allloss: 3.9534, dt: 1264.90ms, fracRes: 0.5967, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6186, norm(y): 0.9874, norm:0.8096, tok/sec: 103622.40, flops:90.74, batch-reuse:1
@ 11427 train 3.8984 , allloss: 3.9096, dt: 1271.86ms, fracRes: 0.5963, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6185, norm(y): 0.9875, norm:0.8439, tok/sec: 103055.72, flops:90.24, batch-reuse:1
@ 11428 train 3.9416 , allloss: 3.9526, dt: 1291.20ms, fracRes: 0.5959, norm(attn): 0.1680, norm(output): 0.2578, norm(x): 0.6164, norm(y): 0.9873, norm:0.8268, tok/sec: 101511.46, flops:88.89, batch-reuse:1
@ 11429 train 4.0163 , allloss: 4.0273, dt: 1276.50ms, fracRes: 0.5964, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6153, norm(y): 0.9875, norm:0.7918, tok/sec: 102680.85, flops:89.92, batch-reuse:1
@ 11430 train 3.8569 , allloss: 3.8681, dt: 1257.05ms, fracRes: 0.5961, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6129, norm(y): 0.9876, norm:0.7976, tok/sec: 104269.22, flops:91.31, batch-reuse:1
@ 11431 train 3.9262 , allloss: 3.9373, dt: 1262.33ms, fracRes: 0.5951, norm(attn): 0.1699, norm(output): 0.2559, norm(x): 0.6144, norm(y): 0.9874, norm:0.8043, tok/sec: 103833.50, flops:90.93, batch-reuse:1
@ 11432 train 3.8455 , allloss: 3.8571, dt: 1264.61ms, fracRes: 0.5964, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6174, norm(y): 0.9876, norm:0.7836, tok/sec: 103646.28, flops:90.76, batch-reuse:1
@ 11433 train 3.9601 , allloss: 3.9717, dt: 1290.51ms, fracRes: 0.5976, norm(attn): 0.1680, norm(output): 0.2578, norm(x): 0.6184, norm(y): 0.9876, norm:0.8055, tok/sec: 101565.92, flops:88.94, batch-reuse:1
@ 11434 train 3.9169 , allloss: 3.9319, dt: 1274.26ms, fracRes: 0.5971, norm(attn): 0.1689, norm(output): 0.2578, norm(x): 0.6175, norm(y): 0.9875, norm:0.7417, tok/sec: 102861.42, flops:90.07, batch-reuse:1
@ 11435 train 3.9948 , allloss: 4.0058, dt: 1272.52ms, fracRes: 0.5968, norm(attn): 0.1689, norm(output): 0.2539, norm(x): 0.6181, norm(y): 0.9874, norm:0.7620, tok/sec: 103001.53, flops:90.20, batch-reuse:1
@ 11436 train 3.9117 , allloss: 3.9228, dt: 1277.27ms, fracRes: 0.5961, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6198, norm(y): 0.9873, norm:0.7948, tok/sec: 102618.73, flops:89.86, batch-reuse:1
@ 11437 train 3.9171 , allloss: 3.9282, dt: 1280.33ms, fracRes: 0.5962, norm(attn): 0.1699, norm(output): 0.2559, norm(x): 0.6172, norm(y): 0.9872, norm:0.7341, tok/sec: 102373.59, flops:89.65, batch-reuse:1
@ 11438 train 4.0058 , allloss: 4.0175, dt: 1292.59ms, fracRes: 0.5956, norm(attn): 0.1689, norm(output): 0.2578, norm(x): 0.6181, norm(y): 0.9872, norm:0.7672, tok/sec: 101402.30, flops:88.80, batch-reuse:1
@ 11439 train 3.8774 , allloss: 3.8896, dt: 1269.97ms, fracRes: 0.5963, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6214, norm(y): 0.9873, norm:0.9407, tok/sec: 103208.49, flops:90.38, batch-reuse:1
@ 11440 train 3.9685 , allloss: 3.9799, dt: 1282.42ms, fracRes: 0.5964, norm(attn): 0.1699, norm(output): 0.2539, norm(x): 0.6163, norm(y): 0.9875, norm:0.8236, tok/sec: 102206.58, flops:89.50, batch-reuse:1
@ 11441 train 4.0438 , allloss: 4.0547, dt: 1280.28ms, fracRes: 0.5966, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6141, norm(y): 0.9875, norm:0.8170, tok/sec: 102377.29, flops:89.65, batch-reuse:1
@ 11442 train 3.8908 , allloss: 3.9018, dt: 1290.58ms, fracRes: 0.5964, norm(attn): 0.1699, norm(output): 0.2559, norm(x): 0.6143, norm(y): 0.9875, norm:0.9195, tok/sec: 101560.63, flops:88.94, batch-reuse:1
@ 11443 train 3.9126 , allloss: 3.9241, dt: 1257.37ms, fracRes: 0.5963, norm(attn): 0.1689, norm(output): 0.2539, norm(x): 0.6157, norm(y): 0.9872, norm:0.7794, tok/sec: 104242.94, flops:91.28, batch-reuse:1
@ 11444 train 3.9045 , allloss: 3.9160, dt: 1569.83ms, fracRes: 0.5961, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6189, norm(y): 0.9873, norm:0.8198, tok/sec: 83494.22, flops:73.11, batch-reuse:1
@ 11445 train 3.8509 , allloss: 3.8625, dt: 1269.79ms, fracRes: 0.5974, norm(attn): 0.1680, norm(output): 0.2578, norm(x): 0.6246, norm(y): 0.9875, norm:0.8464, tok/sec: 103223.61, flops:90.39, batch-reuse:1
@ 11446 train 3.8910 , allloss: 3.9025, dt: 1251.10ms, fracRes: 0.5979, norm(attn): 0.1689, norm(output): 0.2598, norm(x): 0.6227, norm(y): 0.9874, norm:0.8166, tok/sec: 104765.54, flops:91.74, batch-reuse:1
@ 11447 train 3.9361 , allloss: 3.9476, dt: 1262.85ms, fracRes: 0.5966, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6210, norm(y): 0.9871, norm:0.8189, tok/sec: 103790.33, flops:90.89, batch-reuse:1
@ 11448 train 3.9712 , allloss: 3.9828, dt: 1282.80ms, fracRes: 0.5970, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6208, norm(y): 0.9873, norm:0.8902, tok/sec: 102176.19, flops:89.47, batch-reuse:1
@ 11449 train 3.8508 , allloss: 3.8623, dt: 1315.71ms, fracRes: 0.5970, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6225, norm(y): 0.9874, norm:0.9790, tok/sec: 99620.89, flops:87.24, batch-reuse:1
@ 11450 train 3.9380 , allloss: 3.9494, dt: 1303.66ms, fracRes: 0.5967, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6197, norm(y): 0.9872, norm:1.0237, tok/sec: 100541.69, flops:88.04, batch-reuse:1
@ 11451 train 3.8783 , allloss: 3.8899, dt: 1317.01ms, fracRes: 0.5967, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6204, norm(y): 0.9873, norm:0.9676, tok/sec: 99522.07, flops:87.15, batch-reuse:1
@ 11452 train 3.9843 , allloss: 3.9960, dt: 1257.00ms, fracRes: 0.5967, norm(attn): 0.1689, norm(output): 0.2578, norm(x): 0.6200, norm(y): 0.9874, norm:1.0060, tok/sec: 104273.97, flops:91.31, batch-reuse:1
@ 11453 train 4.0094 , allloss: 4.0205, dt: 1267.66ms, fracRes: 0.5972, norm(attn): 0.1670, norm(output): 0.2559, norm(x): 0.6173, norm(y): 0.9870, norm:0.7777, tok/sec: 103396.76, flops:90.54, batch-reuse:1
@ 11454 train 3.8636 , allloss: 3.8748, dt: 1286.61ms, fracRes: 0.5971, norm(attn): 0.1689, norm(output): 0.2539, norm(x): 0.6170, norm(y): 0.9872, norm:0.8661, tok/sec: 101873.93, flops:89.21, batch-reuse:1
@ 11455 train 3.9557 , allloss: 3.9672, dt: 1288.04ms, fracRes: 0.5970, norm(attn): 0.1680, norm(output): 0.2578, norm(x): 0.6202, norm(y): 0.9871, norm:0.7951, tok/sec: 101761.08, flops:89.11, batch-reuse:1
@ 11456 train 3.9333 , allloss: 3.9463, dt: 1270.64ms, fracRes: 0.5960, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6194, norm(y): 0.9872, norm:0.9234, tok/sec: 103154.01, flops:90.33, batch-reuse:1
@ 11457 train 3.9143 , allloss: 3.9254, dt: 1280.37ms, fracRes: 0.5960, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6197, norm(y): 0.9874, norm:1.0213, tok/sec: 102370.39, flops:89.64, batch-reuse:1
@ 11458 train 3.9129 , allloss: 3.9240, dt: 1284.60ms, fracRes: 0.5961, norm(attn): 0.1689, norm(output): 0.2578, norm(x): 0.6199, norm(y): 0.9872, norm:0.7990, tok/sec: 102033.43, flops:89.35, batch-reuse:1
@ 11459 train 3.9343 , allloss: 3.9457, dt: 1308.84ms, fracRes: 0.5972, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6192, norm(y): 0.9871, norm:0.8397, tok/sec: 100143.84, flops:87.69, batch-reuse:1
@ 11460 train 3.8918 , allloss: 3.9033, dt: 1307.61ms, fracRes: 0.5978, norm(attn): 0.1689, norm(output): 0.2539, norm(x): 0.6173, norm(y): 0.9874, norm:0.7921, tok/sec: 100237.91, flops:87.78, batch-reuse:1
@ 11461 train 3.9335 , allloss: 3.9448, dt: 1277.75ms, fracRes: 0.5973, norm(attn): 0.1689, norm(output): 0.2539, norm(x): 0.6174, norm(y): 0.9875, norm:0.8470, tok/sec: 102580.70, flops:89.83, batch-reuse:1
@ 11462 train 3.9140 , allloss: 3.9251, dt: 1275.40ms, fracRes: 0.5959, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6195, norm(y): 0.9872, norm:0.8184, tok/sec: 102769.56, flops:89.99, batch-reuse:1
@ 11463 train 3.9699 , allloss: 3.9812, dt: 1279.13ms, fracRes: 0.5967, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6204, norm(y): 0.9871, norm:0.8008, tok/sec: 102469.69, flops:89.73, batch-reuse:1
@ 11464 train 3.9217 , allloss: 3.9329, dt: 1286.29ms, fracRes: 0.5966, norm(attn): 0.1689, norm(output): 0.2578, norm(x): 0.6187, norm(y): 0.9869, norm:0.8444, tok/sec: 101899.64, flops:89.23, batch-reuse:1
@ 11465 train 3.8985 , allloss: 3.9111, dt: 1263.88ms, fracRes: 0.5964, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6210, norm(y): 0.9871, norm:0.8723, tok/sec: 103706.26, flops:90.81, batch-reuse:1
@ 11466 train 3.9061 , allloss: 3.9182, dt: 1278.98ms, fracRes: 0.5955, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6184, norm(y): 0.9873, norm:0.8936, tok/sec: 102481.91, flops:89.74, batch-reuse:1
@ 11467 train 3.9321 , allloss: 3.9439, dt: 1258.51ms, fracRes: 0.5957, norm(attn): 0.1689, norm(output): 0.2539, norm(x): 0.6144, norm(y): 0.9872, norm:0.8040, tok/sec: 104148.92, flops:91.20, batch-reuse:1
@ 11468 train 3.9420 , allloss: 3.9534, dt: 1256.41ms, fracRes: 0.5968, norm(attn): 0.1689, norm(output): 0.2539, norm(x): 0.6129, norm(y): 0.9873, norm:0.8682, tok/sec: 104322.82, flops:91.35, batch-reuse:1
@ 11469 train 3.9680 , allloss: 3.9795, dt: 1255.30ms, fracRes: 0.5977, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6135, norm(y): 0.9873, norm:0.8223, tok/sec: 104415.15, flops:91.43, batch-reuse:1
@ 11470 train 3.8533 , allloss: 3.8665, dt: 1251.74ms, fracRes: 0.5975, norm(attn): 0.1689, norm(output): 0.2539, norm(x): 0.6171, norm(y): 0.9872, norm:0.7490, tok/sec: 104711.82, flops:91.69, batch-reuse:1
@ 11471 train 3.7893 , allloss: 3.8007, dt: 1247.43ms, fracRes: 0.5971, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6192, norm(y): 0.9873, norm:0.7940, tok/sec: 105073.26, flops:92.01, batch-reuse:1
@ 11472 train 3.8494 , allloss: 3.8605, dt: 1263.89ms, fracRes: 0.5965, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6175, norm(y): 0.9872, norm:0.7697, tok/sec: 103705.19, flops:90.81, batch-reuse:1
@ 11473 train 3.7871 , allloss: 3.7991, dt: 1268.37ms, fracRes: 0.5967, norm(attn): 0.1689, norm(output): 0.2578, norm(x): 0.6232, norm(y): 0.9872, norm:0.8150, tok/sec: 103339.07, flops:90.49, batch-reuse:1
@ 11474 train 3.7939 , allloss: 3.8055, dt: 1254.24ms, fracRes: 0.5961, norm(attn): 0.1689, norm(output): 0.2578, norm(x): 0.6209, norm(y): 0.9871, norm:0.8591, tok/sec: 104503.48, flops:91.51, batch-reuse:1
@ 11475 train 3.8357 , allloss: 3.8475, dt: 1287.60ms, fracRes: 0.5960, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6172, norm(y): 0.9873, norm:0.8209, tok/sec: 101795.91, flops:89.14, batch-reuse:1
@ 11476 train 3.8869 , allloss: 3.8982, dt: 1287.56ms, fracRes: 0.5955, norm(attn): 0.1689, norm(output): 0.2598, norm(x): 0.6195, norm(y): 0.9873, norm:0.8201, tok/sec: 101798.60, flops:89.14, batch-reuse:1
@ 11477 train 3.8652 , allloss: 3.8762, dt: 1259.49ms, fracRes: 0.5956, norm(attn): 0.1699, norm(output): 0.2559, norm(x): 0.6166, norm(y): 0.9874, norm:1.0124, tok/sec: 104067.50, flops:91.13, batch-reuse:1
@ 11478 train 3.8835 , allloss: 3.8950, dt: 1265.52ms, fracRes: 0.5962, norm(attn): 0.1689, norm(output): 0.2578, norm(x): 0.6195, norm(y): 0.9873, norm:0.8924, tok/sec: 103571.37, flops:90.70, batch-reuse:1
@ 11479 train 3.8462 , allloss: 3.8574, dt: 1299.70ms, fracRes: 0.5962, norm(attn): 0.1689, norm(output): 0.2578, norm(x): 0.6184, norm(y): 0.9870, norm:0.8149, tok/sec: 100847.83, flops:88.31, batch-reuse:1
@ 11480 train 3.8461 , allloss: 3.8578, dt: 1300.58ms, fracRes: 0.5972, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6243, norm(y): 0.9871, norm:0.9921, tok/sec: 100779.47, flops:88.25, batch-reuse:1
@ 11481 train 3.7955 , allloss: 3.8078, dt: 1260.70ms, fracRes: 0.5981, norm(attn): 0.1670, norm(output): 0.2559, norm(x): 0.6205, norm(y): 0.9873, norm:0.8641, tok/sec: 103967.82, flops:91.04, batch-reuse:1
@ 11482 train 3.9774 , allloss: 3.9894, dt: 1267.96ms, fracRes: 0.5980, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6205, norm(y): 0.9872, norm:0.8619, tok/sec: 103372.28, flops:90.52, batch-reuse:1
@ 11483 train 3.8772 , allloss: 3.8885, dt: 1270.54ms, fracRes: 0.5977, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6175, norm(y): 0.9873, norm:0.9378, tok/sec: 103162.49, flops:90.34, batch-reuse:1
@ 11484 train 3.8444 , allloss: 3.8560, dt: 1275.48ms, fracRes: 0.5973, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6142, norm(y): 0.9872, norm:0.7741, tok/sec: 102762.51, flops:89.99, batch-reuse:1
@ 11485 train 3.9212 , allloss: 3.9325, dt: 1291.83ms, fracRes: 0.5966, norm(attn): 0.1689, norm(output): 0.2539, norm(x): 0.6149, norm(y): 0.9870, norm:1.0012, tok/sec: 101462.54, flops:88.85, batch-reuse:1
@ 11486 train 3.8692 , allloss: 3.8811, dt: 1246.00ms, fracRes: 0.5979, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6172, norm(y): 0.9873, norm:0.8536, tok/sec: 105194.54, flops:92.12, batch-reuse:1
@ 11487 train 3.9352 , allloss: 3.9467, dt: 1271.54ms, fracRes: 0.5970, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6176, norm(y): 0.9871, norm:0.8072, tok/sec: 103080.90, flops:90.27, batch-reuse:1
@ 11488 train 3.7746 , allloss: 3.7857, dt: 1292.86ms, fracRes: 0.5970, norm(attn): 0.1699, norm(output): 0.2559, norm(x): 0.6215, norm(y): 0.9874, norm:0.9081, tok/sec: 101381.30, flops:88.78, batch-reuse:1
@ 11489 train 3.8786 , allloss: 3.8892, dt: 1291.71ms, fracRes: 0.5962, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6217, norm(y): 0.9870, norm:0.8130, tok/sec: 101472.02, flops:88.86, batch-reuse:1
@ 11490 train 3.7703 , allloss: 3.7812, dt: 1299.99ms, fracRes: 0.5963, norm(attn): 0.1709, norm(output): 0.2559, norm(x): 0.6204, norm(y): 0.9871, norm:0.7599, tok/sec: 100825.38, flops:88.29, batch-reuse:1
@ 11491 train 3.8223 , allloss: 3.8342, dt: 1285.67ms, fracRes: 0.5977, norm(attn): 0.1680, norm(output): 0.2578, norm(x): 0.6256, norm(y): 0.9870, norm:0.9290, tok/sec: 101948.25, flops:89.27, batch-reuse:1
@ 11492 train 3.9462 , allloss: 3.9576, dt: 1279.42ms, fracRes: 0.5975, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6196, norm(y): 0.9871, norm:0.7997, tok/sec: 102446.52, flops:89.71, batch-reuse:1
@ 11493 train 3.8133 , allloss: 3.8247, dt: 1285.92ms, fracRes: 0.5969, norm(attn): 0.1699, norm(output): 0.2559, norm(x): 0.6189, norm(y): 0.9870, norm:0.7880, tok/sec: 101928.34, flops:89.26, batch-reuse:1
@ 11494 train 3.8346 , allloss: 3.8458, dt: 1276.91ms, fracRes: 0.5969, norm(attn): 0.1699, norm(output): 0.2539, norm(x): 0.6163, norm(y): 0.9870, norm:0.8416, tok/sec: 102647.77, flops:89.89, batch-reuse:1
@ 11495 train 3.8490 , allloss: 3.8601, dt: 1280.35ms, fracRes: 0.5965, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6152, norm(y): 0.9869, norm:0.7364, tok/sec: 102371.71, flops:89.65, batch-reuse:1
@ 11496 train 3.8717 , allloss: 3.8828, dt: 1288.13ms, fracRes: 0.5969, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6159, norm(y): 0.9871, norm:0.8770, tok/sec: 101753.53, flops:89.10, batch-reuse:1
@ 11497 train 3.8960 , allloss: 3.9072, dt: 1264.33ms, fracRes: 0.5960, norm(attn): 0.1699, norm(output): 0.2559, norm(x): 0.6179, norm(y): 0.9870, norm:0.8523, tok/sec: 103669.46, flops:90.78, batch-reuse:1
@ 11498 train 3.8670 , allloss: 3.8783, dt: 1292.01ms, fracRes: 0.5951, norm(attn): 0.1719, norm(output): 0.2578, norm(x): 0.6150, norm(y): 0.9872, norm:0.8249, tok/sec: 101448.26, flops:88.84, batch-reuse:1
@ 11499 train 3.8745 , allloss: 3.8859, dt: 1297.70ms, fracRes: 0.5960, norm(attn): 0.1699, norm(output): 0.2539, norm(x): 0.6127, norm(y): 0.9870, norm:0.8822, tok/sec: 101003.62, flops:88.45, batch-reuse:1
@ 11500 train 3.9416 , allloss: 3.9528, dt: 1256.59ms, fracRes: 0.5957, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6091, norm(y): 0.9869, norm:0.7369, tok/sec: 104307.48, flops:91.34, batch-reuse:1
@ 11501 train 3.8764 , allloss: 3.8878, dt: 1285.73ms, fracRes: 0.5971, norm(attn): 0.1660, norm(output): 0.2520, norm(x): 0.6114, norm(y): 0.9869, norm:0.7333, tok/sec: 101943.86, flops:89.27, batch-reuse:1
@ 11502 train 3.8178 , allloss: 3.8291, dt: 1307.18ms, fracRes: 0.5969, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6150, norm(y): 0.9868, norm:0.7626, tok/sec: 100270.56, flops:87.81, batch-reuse:1
@ 11503 train 3.8696 , allloss: 3.8848, dt: 1298.01ms, fracRes: 0.5971, norm(attn): 0.1670, norm(output): 0.2559, norm(x): 0.6149, norm(y): 0.9869, norm:0.7134, tok/sec: 100979.05, flops:88.43, batch-reuse:1
@ 11504 train 3.8325 , allloss: 3.8442, dt: 1284.80ms, fracRes: 0.5977, norm(attn): 0.1699, norm(output): 0.2539, norm(x): 0.6161, norm(y): 0.9871, norm:0.7734, tok/sec: 102017.73, flops:89.34, batch-reuse:1
@ 11505 train 3.8734 , allloss: 3.8847, dt: 1267.71ms, fracRes: 0.5981, norm(attn): 0.1689, norm(output): 0.2578, norm(x): 0.6178, norm(y): 0.9869, norm:0.7455, tok/sec: 103392.66, flops:90.54, batch-reuse:1
@ 11506 train 3.8680 , allloss: 3.8793, dt: 1278.87ms, fracRes: 0.5981, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6157, norm(y): 0.9871, norm:0.7456, tok/sec: 102490.34, flops:89.75, batch-reuse:1
@ 11507 train 3.8017 , allloss: 3.8138, dt: 1266.60ms, fracRes: 0.5973, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6198, norm(y): 0.9870, norm:0.7583, tok/sec: 103483.74, flops:90.62, batch-reuse:1
@ 11508 train 3.8944 , allloss: 3.9056, dt: 1283.64ms, fracRes: 0.5962, norm(attn): 0.1699, norm(output): 0.2539, norm(x): 0.6160, norm(y): 0.9869, norm:0.7651, tok/sec: 102109.99, flops:89.42, batch-reuse:1
@ 11509 train 3.8230 , allloss: 3.8342, dt: 1284.67ms, fracRes: 0.5953, norm(attn): 0.1709, norm(output): 0.2559, norm(x): 0.6136, norm(y): 0.9870, norm:0.8156, tok/sec: 102027.41, flops:89.34, batch-reuse:1
@ 11510 train 3.8678 , allloss: 3.8790, dt: 1272.66ms, fracRes: 0.5953, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6091, norm(y): 0.9870, norm:0.7251, tok/sec: 102990.35, flops:90.19, batch-reuse:1
@ 11511 train 3.7943 , allloss: 3.8056, dt: 1258.55ms, fracRes: 0.5962, norm(attn): 0.1689, norm(output): 0.2539, norm(x): 0.6100, norm(y): 0.9870, norm:0.7321, tok/sec: 104144.98, flops:91.20, batch-reuse:1
@ 11512 train 3.9268 , allloss: 3.9379, dt: 1285.47ms, fracRes: 0.5970, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6115, norm(y): 0.9870, norm:0.7381, tok/sec: 101963.90, flops:89.29, batch-reuse:1
@ 11513 train 3.9174 , allloss: 3.9289, dt: 1272.57ms, fracRes: 0.5974, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6137, norm(y): 0.9866, norm:0.9205, tok/sec: 102997.51, flops:90.19, batch-reuse:1
@ 11514 train 3.7872 , allloss: 3.7988, dt: 1279.51ms, fracRes: 0.5978, norm(attn): 0.1699, norm(output): 0.2520, norm(x): 0.6108, norm(y): 0.9871, norm:0.8782, tok/sec: 102439.60, flops:89.70, batch-reuse:1
@ 11515 train 3.8082 , allloss: 3.8197, dt: 1255.26ms, fracRes: 0.5976, norm(attn): 0.1689, norm(output): 0.2539, norm(x): 0.6172, norm(y): 0.9872, norm:0.8151, tok/sec: 104418.05, flops:91.44, batch-reuse:1
@ 11516 train 3.9153 , allloss: 3.9263, dt: 1270.74ms, fracRes: 0.5967, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6132, norm(y): 0.9868, norm:0.8600, tok/sec: 103146.00, flops:90.32, batch-reuse:1
@ 11517 train 3.8043 , allloss: 3.8154, dt: 1289.26ms, fracRes: 0.5963, norm(attn): 0.1699, norm(output): 0.2539, norm(x): 0.6142, norm(y): 0.9868, norm:0.7648, tok/sec: 101664.19, flops:89.03, batch-reuse:1
@ 11518 train 3.8927 , allloss: 3.9040, dt: 1288.74ms, fracRes: 0.5963, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6152, norm(y): 0.9867, norm:0.8463, tok/sec: 101705.68, flops:89.06, batch-reuse:1
@ 11519 train 3.7950 , allloss: 3.8066, dt: 1319.85ms, fracRes: 0.5962, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6186, norm(y): 0.9870, norm:0.8236, tok/sec: 99308.24, flops:86.96, batch-reuse:1
@ 11520 train 3.7806 , allloss: 3.7920, dt: 1329.39ms, fracRes: 0.5956, norm(attn): 0.1689, norm(output): 0.2578, norm(x): 0.6200, norm(y): 0.9870, norm:0.8351, tok/sec: 98595.79, flops:86.34, batch-reuse:1
@ 11521 train 3.8906 , allloss: 3.9017, dt: 1297.71ms, fracRes: 0.5962, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6166, norm(y): 0.9873, norm:0.7735, tok/sec: 101002.74, flops:88.45, batch-reuse:1
@ 11522 train 3.7720 , allloss: 3.7831, dt: 1256.06ms, fracRes: 0.5968, norm(attn): 0.1689, norm(output): 0.2539, norm(x): 0.6148, norm(y): 0.9869, norm:0.7769, tok/sec: 104351.79, flops:91.38, batch-reuse:1
@ 11523 train 3.6719 , allloss: 3.6831, dt: 1252.48ms, fracRes: 0.5969, norm(attn): 0.1689, norm(output): 0.2520, norm(x): 0.6128, norm(y): 0.9870, norm:0.8039, tok/sec: 104650.09, flops:91.64, batch-reuse:1
@ 11524 train 3.6099 , allloss: 3.6211, dt: 1262.09ms, fracRes: 0.5965, norm(attn): 0.1689, norm(output): 0.2539, norm(x): 0.6150, norm(y): 0.9871, norm:0.7372, tok/sec: 103853.15, flops:90.94, batch-reuse:1
@ 11525 train 3.8311 , allloss: 3.8424, dt: 1265.34ms, fracRes: 0.5960, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6151, norm(y): 0.9869, norm:0.8227, tok/sec: 103586.36, flops:90.71, batch-reuse:1
@ 11526 train 3.6561 , allloss: 3.6672, dt: 1271.36ms, fracRes: 0.5960, norm(attn): 0.1709, norm(output): 0.2559, norm(x): 0.6146, norm(y): 0.9870, norm:0.9214, tok/sec: 103095.54, flops:90.28, batch-reuse:1
@ 11527 train 3.6538 , allloss: 3.6653, dt: 1267.41ms, fracRes: 0.5964, norm(attn): 0.1709, norm(output): 0.2539, norm(x): 0.6121, norm(y): 0.9871, norm:1.1646, tok/sec: 103417.09, flops:90.56, batch-reuse:1
@ 11528 train 3.6945 , allloss: 3.7059, dt: 1287.87ms, fracRes: 0.5968, norm(attn): 0.1689, norm(output): 0.2520, norm(x): 0.6123, norm(y): 0.9869, norm:0.8872, tok/sec: 101773.89, flops:89.12, batch-reuse:1
@ 11529 train 3.6192 , allloss: 3.6303, dt: 1272.76ms, fracRes: 0.5967, norm(attn): 0.1689, norm(output): 0.2520, norm(x): 0.6130, norm(y): 0.9870, norm:0.7036, tok/sec: 102982.77, flops:90.18, batch-reuse:1
@ 11530 train 3.6256 , allloss: 3.6368, dt: 1319.04ms, fracRes: 0.5958, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6165, norm(y): 0.9870, norm:0.8104, tok/sec: 99369.02, flops:87.02, batch-reuse:1
@ 11531 train 3.6224 , allloss: 3.6337, dt: 1285.06ms, fracRes: 0.5959, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6150, norm(y): 0.9872, norm:0.7428, tok/sec: 101997.06, flops:89.32, batch-reuse:1
@ 11532 train 3.7489 , allloss: 3.7604, dt: 1271.63ms, fracRes: 0.5961, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6117, norm(y): 0.9871, norm:0.8334, tok/sec: 103073.79, flops:90.26, batch-reuse:1
@ 11533 train 3.6946 , allloss: 3.7062, dt: 1271.17ms, fracRes: 0.5960, norm(attn): 0.1689, norm(output): 0.2539, norm(x): 0.6088, norm(y): 0.9868, norm:0.7734, tok/sec: 103111.08, flops:90.29, batch-reuse:1
@ 11534 train 3.7137 , allloss: 3.7255, dt: 1262.65ms, fracRes: 0.5968, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6102, norm(y): 0.9870, norm:0.8193, tok/sec: 103807.13, flops:90.90, batch-reuse:1
@ 11535 train 3.6025 , allloss: 3.6138, dt: 1254.48ms, fracRes: 0.5967, norm(attn): 0.1699, norm(output): 0.2520, norm(x): 0.6097, norm(y): 0.9871, norm:0.7704, tok/sec: 104483.50, flops:91.49, batch-reuse:1
@ 11536 train 3.7024 , allloss: 3.7134, dt: 1277.45ms, fracRes: 0.5961, norm(attn): 0.1709, norm(output): 0.2539, norm(x): 0.6118, norm(y): 0.9871, norm:0.7910, tok/sec: 102604.63, flops:89.85, batch-reuse:1
@ 11537 train 3.7428 , allloss: 3.7572, dt: 1281.97ms, fracRes: 0.5965, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6196, norm(y): 0.9871, norm:0.9495, tok/sec: 102242.56, flops:89.53, batch-reuse:1
@ 11538 train 3.6032 , allloss: 3.6148, dt: 1303.40ms, fracRes: 0.5959, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6172, norm(y): 0.9872, norm:0.9084, tok/sec: 100561.62, flops:88.06, batch-reuse:1
@ 11539 train 3.7354 , allloss: 3.7475, dt: 1317.78ms, fracRes: 0.5969, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6208, norm(y): 0.9871, norm:1.1476, tok/sec: 99464.20, flops:87.10, batch-reuse:1
@ 11540 train 3.7266 , allloss: 3.7377, dt: 1290.68ms, fracRes: 0.5973, norm(attn): 0.1689, norm(output): 0.2539, norm(x): 0.6204, norm(y): 0.9871, norm:0.8452, tok/sec: 101552.79, flops:88.93, batch-reuse:1
@ 11541 train 3.7118 , allloss: 3.7231, dt: 1288.61ms, fracRes: 0.5977, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6185, norm(y): 0.9870, norm:0.9363, tok/sec: 101715.41, flops:89.07, batch-reuse:1
@ 11542 train 3.6968 , allloss: 3.7081, dt: 1275.20ms, fracRes: 0.5973, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6149, norm(y): 0.9869, norm:0.9972, tok/sec: 102785.67, flops:90.01, batch-reuse:1
@ 11543 train 3.6826 , allloss: 3.6938, dt: 1260.41ms, fracRes: 0.5975, norm(attn): 0.1699, norm(output): 0.2559, norm(x): 0.6172, norm(y): 0.9868, norm:0.8945, tok/sec: 103991.32, flops:91.06, batch-reuse:1
@ 11544 train 3.7290 , allloss: 3.7402, dt: 1267.18ms, fracRes: 0.5979, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6187, norm(y): 0.9869, norm:0.7930, tok/sec: 103435.75, flops:90.58, batch-reuse:1
@ 11545 train 3.6241 , allloss: 3.6363, dt: 1297.35ms, fracRes: 0.5977, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6245, norm(y): 0.9870, norm:0.8623, tok/sec: 101030.42, flops:88.47, batch-reuse:1
@ 11546 train 3.7075 , allloss: 3.7191, dt: 1279.29ms, fracRes: 0.5966, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6158, norm(y): 0.9870, norm:0.8341, tok/sec: 102456.61, flops:89.72, batch-reuse:1
@ 11547 train 3.9456 , allloss: 3.9572, dt: 1255.03ms, fracRes: 0.5973, norm(attn): 0.1689, norm(output): 0.2539, norm(x): 0.6151, norm(y): 0.9869, norm:0.8476, tok/sec: 104437.75, flops:91.45, batch-reuse:1
@ 11548 train 3.6290 , allloss: 3.6402, dt: 1294.73ms, fracRes: 0.5970, norm(attn): 0.1689, norm(output): 0.2539, norm(x): 0.6126, norm(y): 0.9868, norm:0.7853, tok/sec: 101235.20, flops:88.65, batch-reuse:1
@ 11549 train 3.7850 , allloss: 3.7975, dt: 1270.98ms, fracRes: 0.5974, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6200, norm(y): 0.9866, norm:1.0391, tok/sec: 103126.61, flops:90.31, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9297, 0.0713, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7734, 0.0654, 0.1621, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9219, 0.0177, 0.0540, 0.0055, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8711, 0.0256, 0.0337, 0.0231, 0.0449, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8672, 0.0679, 0.0248, 0.0048, 0.0064, 0.0284, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6953, 0.0540, 0.0254, 0.0305, 0.0376, 0.0688, 0.0894, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3418, 0.0432, 0.2002, 0.0312, 0.0884, 0.0698, 0.0630, 0.1621, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8438, 0.0267, 0.0258, 0.0038, 0.0093, 0.0098, 0.0466, 0.0173, 0.0171, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5234, 0.0195, 0.1211, 0.0089, 0.0182, 0.0103, 0.0243, 0.1196, 0.0215, 0.1318, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6484, 0.0388, 0.0449, 0.0125, 0.0170, 0.0093, 0.0238, 0.0247, 0.0378, 0.0486, 0.0957, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1514, 0.0569, 0.0640, 0.0776, 0.0879, 0.0332, 0.0364, 0.0645, 0.1089, 0.1074, 0.1748, 0.0371, 0.0000, 0.0000, 0.0000],
        [0.0942, 0.0574, 0.1162, 0.0498, 0.0309, 0.0304, 0.0388, 0.1216, 0.0223, 0.1211, 0.0459, 0.1006, 0.1709, 0.0000, 0.0000],
        [0.6016, 0.0383, 0.0383, 0.0044, 0.0134, 0.0126, 0.0557, 0.0198, 0.0221, 0.0178, 0.0359, 0.0152, 0.1060, 0.0197, 0.0000],
        [0.3359, 0.0986, 0.0496, 0.0442, 0.0258, 0.0070, 0.0100, 0.0588, 0.0233, 0.0508, 0.0410, 0.0464, 0.1338, 0.0233, 0.0522]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0005, -0.0025, -0.0129,  ..., -0.0329,  0.0166, -0.0022],
        [-0.0424,  0.0019, -0.0021,  ...,  0.0036,  0.0034,  0.0099],
        [ 0.0324,  0.0359, -0.0061,  ..., -0.0181,  0.0259, -0.0089],
        ...,
        [ 0.0289,  0.0193,  0.0008,  ..., -0.0335,  0.0104,  0.0135],
        [-0.0465,  0.0041, -0.0256,  ...,  0.0096, -0.0014, -0.0147],
        [-0.0192, -0.0013, -0.0167,  ...,  0.0136, -0.0384, -0.0011]], device='cuda:0', requires_grad=True)
K: tensor([ 1.4688,  0.1235,  0.5625,  0.4453,  0.9766,  0.2754, -0.4961, -1.0234, -0.8203, -0.3027, -0.4102, -0.8906, -0.0645, -0.9727, -0.0688, -0.6602,  0.9844,  0.4922, -1.7734,  0.3145,  1.7266,  1.0078, -0.9766,  0.9062, -0.4668, -0.2012, -0.7773,  1.0391,  0.4082, -0.0444,  1.6875,  0.5586,
         1.2969,  0.8477,  0.3359,  1.8828, -1.9766,  0.6523, -0.3477, -2.4219,  0.4688,  0.6445,  0.6992,  1.7969, -0.0781,  0.2490,  0.0767,  0.2334,  1.3672, -0.2451,  0.3984,  0.8633, -1.4531, -0.2393,  1.6562, -0.4902, -0.8281,  0.7227,  0.1455, -0.5078,  1.4844, -0.6445,  0.6328, -0.0859],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0404,  0.0067, -0.0056,  ...,  0.0068, -0.0037, -0.0062],
        [ 0.0162, -0.0131,  0.0123,  ...,  0.0006,  0.0466,  0.0147],
        [-0.0411,  0.0346,  0.0053,  ..., -0.0195, -0.0432, -0.0427],
        ...,
        [ 0.0164,  0.0053,  0.0327,  ...,  0.0223,  0.0120,  0.0224],
        [-0.0016, -0.0124,  0.0212,  ...,  0.0252,  0.0135,  0.0062],
        [-0.0079, -0.0073,  0.0449,  ..., -0.0248,  0.0253,  0.0043]], device='cuda:0', requires_grad=True)
Q: tensor([-0.3984,  0.0591, -1.1875, -0.0566, -0.0116, -0.1196, -1.8672, -0.3262,  0.3633,  0.6445, -1.0312,  0.0159, -0.2559, -0.2373, -0.0640,  0.1187,  0.6602, -1.0469,  0.7578,  0.4453, -0.5898, -0.0233,  1.1484,  0.3066,  0.9336,  0.2754, -0.8359, -2.3125, -0.0085,  0.0811,  0.6211,  0.2578,
        -0.6211, -1.4219, -0.1650, -0.3223,  1.2188,  0.7734, -0.1182,  1.2734,  1.6172,  0.3965,  0.4863,  0.0280, -0.4648,  1.1250, -1.9141,  0.5430, -0.2500,  0.4531, -1.4453, -0.5625, -0.6523, -0.8867, -0.8477,  0.1689,  0.1865, -1.3281,  0.1787, -0.2637, -1.7188, -0.1670,  0.5977,  1.4609],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -2.5625, -2.2188, -4.1250, -4.2812, -3.8906, -2.9375, -2.2969, -4.0938, -3.0469, -2.8594, -2.6094, -0.3457, -4.2812, -3.2812],
        [ 0.0000, -2.4688, -1.5547, -2.5156, -2.2344, -3.5156, -3.2656, -1.9141, -1.9766, -1.4844, -0.8711, -1.7578, -0.6211, -1.7188, -1.1641],
        [ 0.0000, -3.9531, -2.8438, -5.1250, -3.4844, -3.9688, -3.9688, -3.6094, -2.7812, -2.9688, -1.0547, -2.8125, -2.1250, -2.7500, -1.9062],
        [ 0.0000, -3.5312, -3.2500, -3.6250, -2.9688, -4.2500, -3.6562, -3.4531, -2.0156, -2.4375, -1.5078, -2.5938, -1.6797, -1.6094, -1.7500],
        [ 0.0000, -2.5469, -3.5625, -5.1875, -4.9062, -3.4219, -2.3594, -3.5938, -4.1562, -4.6875, -3.8125, -4.1562, -2.0312, -4.0625, -3.7188],
        [ 0.0000, -2.5469, -3.3125, -3.1250, -2.9062, -2.3125, -2.0469, -3.0938, -1.1875, -2.5469, -1.1484, -2.2812, -2.2188, -0.8789, -1.6953],
        [ 0.0000, -2.0625, -0.5352, -2.3906, -1.3516, -1.5859, -1.6875, -0.7461, -1.0547,  0.3398,  0.0918, -0.5742,  0.2598, -1.0391, -0.4707],
        [ 0.0000, -3.4531, -3.4844, -5.4062, -4.5000, -4.4688, -2.8906, -3.8906, -3.9062, -4.0938, -3.2344, -4.1875, -1.9609, -4.0000, -3.5156],
        [ 0.0000, -3.2812, -1.4688, -4.0938, -3.3594, -3.9375, -3.0781, -1.4766, -3.1875, -1.3828, -1.9844, -2.1406,  0.1157, -3.1719, -2.3281],
        [ 0.0000, -2.8125, -2.6719, -3.9531, -3.6406, -4.2500, -3.2969, -3.2656, -2.8438, -2.5938, -1.9141, -2.4531, -1.5859, -2.6719, -1.8516],
        [ 0.0000, -0.9766, -0.8555, -0.6641, -0.5391, -1.5156, -1.4219, -0.8516, -0.3281, -0.3418,  0.1436, -1.3984, -0.6992, -0.2773,  0.1475],
        [ 0.0000, -0.5000,  0.2080, -0.6367, -1.1172, -1.1328, -0.8867,  0.2559, -1.4375,  0.2480, -0.7188,  0.0635,  0.5938, -1.3672, -0.4863],
        [ 0.0000, -2.7500, -2.7500, -4.9062, -3.8125, -3.8594, -2.3750, -3.4062, -3.2969, -3.5156, -2.8281, -3.6719, -1.7344, -3.4219, -3.1562],
        [ 0.0000, -1.2266, -1.9141, -2.0312, -2.5625, -3.8750, -3.5156, -1.7422, -2.6719, -1.8906, -2.0938, -1.9844, -0.9219, -2.6719, -1.8594]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8903],
        [0.8659],
        [0.8638],
        [0.7091],
        [0.7415],
        [0.6595],
        [0.4991],
        [0.5617],
        [0.5914],
        [0.4368],
        [0.3438],
        [0.2230],
        [0.3413],
        [0.2969]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8906, 0.1099, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3691, 0.5430, 0.0879, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2754, 0.2930, 0.3848, 0.0471, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1533, 0.4160, 0.0747, 0.2217, 0.1338, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2256, 0.2266, 0.0515, 0.0605, 0.3027, 0.1318, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0574, 0.1104, 0.0356, 0.0396, 0.2109, 0.3535, 0.1924, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0933, 0.0457, 0.0217, 0.0101, 0.0806, 0.1602, 0.5391, 0.0510, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0537, 0.0320, 0.0117, 0.0056, 0.0288, 0.1318, 0.6328, 0.0498, 0.0554, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0242, 0.0211, 0.0096, 0.0134, 0.0405, 0.0669, 0.1040, 0.1367, 0.5312, 0.0510, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0547, 0.0128, 0.0033, 0.0037, 0.0205, 0.0703, 0.3809, 0.0085, 0.2715, 0.0562, 0.1167, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0065, 0.0096, 0.0084, 0.0061, 0.0090, 0.0664, 0.2432, 0.1455, 0.0366, 0.1943, 0.2334, 0.0410, 0.0000, 0.0000, 0.0000],
        [0.0243, 0.0021, 0.0043, 0.0047, 0.0193, 0.0552, 0.1826, 0.0474, 0.2012, 0.0757, 0.2275, 0.0422, 0.1128, 0.0000, 0.0000],
        [0.0400, 0.0089, 0.0042, 0.0019, 0.0106, 0.0635, 0.3535, 0.0210, 0.0188, 0.0515, 0.2676, 0.0161, 0.0515, 0.0918, 0.0000],
        [0.0090, 0.0050, 0.0017, 0.0015, 0.0042, 0.0287, 0.0830, 0.0334, 0.0630, 0.0347, 0.0623, 0.0540, 0.1094, 0.3613, 0.1484]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0366, -0.0259, -0.0165,  ..., -0.0154, -0.0202,  0.0025],
        [-0.0228,  0.0173, -0.0198,  ...,  0.0127, -0.0066, -0.0568],
        [ 0.0243,  0.0146,  0.0144,  ...,  0.0149,  0.0309,  0.0204],
        ...,
        [ 0.0165, -0.0191,  0.0333,  ...,  0.0278, -0.0332, -0.0116],
        [-0.0220, -0.0096,  0.0217,  ...,  0.0090,  0.0317,  0.0090],
        [ 0.0275,  0.0506,  0.0178,  ..., -0.0132, -0.0005,  0.0213]], device='cuda:0', requires_grad=True)
K: tensor([     3.7812,      0.0728,     -1.0078,     -0.3477,     -2.2812,     -0.3340,     -1.1328,      0.3574,     -0.6484,     -0.0007,     -0.0427,      2.0938,     -2.1406,      1.4062,      0.5586,     -2.9844,      1.4609,     -0.4629,      1.4297,      1.2734,      0.2656,      1.2969,
             2.1250,     -4.2188,      0.8320,     -1.8594,     -2.9375,      0.6016,      2.1719,     -0.1465,      2.8125,      1.0547,      0.1611,     -0.5781,     -2.2812,     -0.2949,     -0.0190,      1.4219,     -1.2812,      0.9297,      1.4219,     -1.0156,     -0.3359,      2.0312,
             1.2109,      0.7969,     -2.2188,     -1.6562,      1.1953,      0.4180,     -1.8203,      1.7578,     -0.8164,      0.6680,     -0.6680,     -1.1562,      0.7773,      0.3496,     -2.1094,      2.0625,      0.7344,      1.2422,      2.7188,     -0.8438], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[ 0.0359, -0.0055, -0.0113,  ...,  0.0042,  0.0296, -0.0116],
        [ 0.0132,  0.0064, -0.0517,  ..., -0.0118, -0.0106, -0.0171],
        [ 0.0488,  0.0044,  0.0315,  ..., -0.0204,  0.0223,  0.0056],
        ...,
        [-0.0289, -0.0082,  0.0071,  ...,  0.0082, -0.0019, -0.0357],
        [ 0.0388,  0.0105, -0.0066,  ...,  0.0086,  0.0026, -0.0092],
        [ 0.0012, -0.0357, -0.0262,  ...,  0.0102, -0.0040,  0.0195]], device='cuda:0', requires_grad=True)
Q: tensor([-0.9102, -1.7969, -2.8281, -2.1719,  0.2734, -1.5000, -0.0801,  0.1943,  1.1016,  0.7695,  1.3672, -0.0544,  0.5117, -0.2256, -0.8359, -0.2617, -2.0625, -1.3906, -1.6172,  1.6172, -2.5781, -0.0420, -1.1250,  1.5703,  0.1079, -0.6094,  1.2109, -0.6211, -2.2031,  0.4863,  1.5938,  0.0138,
        -2.2969,  0.4199, -1.8750,  0.7383,  2.5469,  1.3203,  0.3438,  1.4609,  1.6797,  0.1885, -0.5781,  1.9844,  1.2188, -0.2734,  0.2139, -2.9531,  2.2344,  0.9922, -1.4844,  2.3750, -0.2402, -2.1406, -0.5859,  1.0156,  1.0156,  0.8906, -0.0469, -0.1396,  0.2891,  0.5234,  3.9844, -1.1484],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -2.0938,     -1.9219,     -3.5156,     -1.6016,     -2.0469,     -1.6797,     -4.1250,     -2.3125,     -3.2500,     -1.4375,     -3.5781,     -3.6719,     -2.0625,     -0.5625],
        [     0.0000,      0.3828,     -1.4375,     -1.7188,     -0.3555,     -0.4746,      0.4492,     -0.5859,     -0.0947,     -0.0996,      0.7891,      0.9297,      0.0275,      0.6914,      1.9453],
        [     0.0000,      0.0615,      0.3359,     -1.7656,     -0.4785,      0.0664,      0.7930,     -0.2656,      0.0171,      1.2656,      1.1953,      0.9805,      1.2578,      1.0469,      3.6875],
        [     0.0000,      1.0000,     -0.7188,      0.3711,     -0.1348,      1.6719,      2.4219,      1.3281,      3.5938,      2.2188,      3.7500,      1.7266,      2.5469,      5.0312,      4.5312],
        [     0.0000,      0.0040,     -1.4766,     -1.3125,      0.2949,     -0.5352,      1.1562,      0.2285,      2.1719,      0.8438,      2.8906,      1.5781,      1.8438,      3.3750,      3.1719],
        [     0.0000,      0.6523,     -0.4805,     -0.3730,      1.3047,      1.8203,      1.2031,      1.6328,      3.9531,      1.6875,      3.2969,      1.6562,      3.2969,      5.1875,      4.3750],
        [     0.0000,     -0.7109,     -1.4531,     -2.2188,     -0.1416,      0.5430,      1.7500,     -0.6016,      1.7188,      0.2012,      2.5625,      0.5234,      1.1875,      3.1719,      3.3594],
        [     0.0000,     -0.5195,     -1.5234,     -2.2656,     -0.6250,      0.8984,      2.4688,     -0.0737,      0.0303,      0.6445,      2.5781,     -0.0151,      0.8594,      1.6719,      3.9688],
        [     0.0000,     -0.1367,     -0.9258,     -0.5898,      0.5195,      1.0156,      1.4609,      1.7344,      3.0938,      0.7461,      2.9688,      2.4375,      3.3438,      4.5938,      3.6562],
        [     0.0000,     -1.4531,     -2.7969,     -2.6875,     -0.9805,      0.2480,      1.9375,     -1.8594,      1.6016,      0.0259,      0.7539,     -0.1963,     -0.1943,      3.2500,      2.5938],
        [     0.0000,      0.3965,      0.2539,     -0.0608,      0.3301,      2.3281,      3.6250,      3.1094,      1.7266,      3.3906,      3.5781,      1.8438,      3.4688,      3.4688,      6.3125],
        [     0.0000,     -2.4531,     -1.7266,     -1.6406,     -0.2305,      0.8203,      2.0156,      0.6680,      2.1094,      1.1328,      2.2344,      0.5508,      1.5391,      3.5781,      3.7500],
        [     0.0000,     -1.5078,     -2.2500,     -3.0625,     -1.3281,      0.4629,      2.1719,     -0.6406,     -0.7539,      0.2559,      1.9062,     -0.9102,      0.2539,      0.8320,      3.2969],
        [     0.0000,     -0.5781,     -1.6406,     -1.7578,     -0.7617,      1.1562,      2.2188,      1.3125,      1.9453,      1.3516,      1.9375,      1.7969,      2.5000,      3.6875,      2.8125]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7672],
        [0.4924],
        [0.3622],
        [0.5147],
        [0.4267],
        [0.2575],
        [0.1985],
        [0.2837],
        [0.1606],
        [0.3163],
        [0.1233],
        [0.1172],
        [0.2330],
        [0.1084]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9805,     0.0200,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9805,     0.0120,     0.0093,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9844,     0.0098,     0.0024,     0.0025,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9648,     0.0119,     0.0063,     0.0022,     0.0164,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0041,     0.0036,     0.0006,     0.0034,     0.0011,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9219,     0.0145,     0.0110,     0.0078,     0.0042,     0.0058,     0.0359,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7891,     0.0148,     0.0310,     0.0122,     0.0102,     0.0144,     0.0317,     0.0947,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9805,     0.0028,     0.0014,     0.0004,     0.0015,     0.0010,     0.0046,     0.0034,     0.0031,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9844,     0.0029,     0.0007,     0.0004,     0.0005,     0.0004,     0.0014,     0.0034,     0.0011,     0.0034,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9609,     0.0079,     0.0032,     0.0029,     0.0011,     0.0012,     0.0052,     0.0107,     0.0035,     0.0029,     0.0006,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8789,     0.0081,     0.0046,     0.0029,     0.0031,     0.0017,     0.0068,     0.0327,     0.0064,     0.0110,     0.0009,     0.0435,     0.0000,     0.0000,     0.0000],
        [    0.4766,     0.0041,     0.0144,     0.0072,     0.0043,     0.0099,     0.0119,     0.0718,     0.0162,     0.0496,     0.0017,     0.0493,     0.2812,     0.0000,     0.0000],
        [    0.9766,     0.0020,     0.0010,     0.0003,     0.0012,     0.0008,     0.0033,     0.0033,     0.0025,     0.0007,     0.0002,     0.0006,     0.0048,     0.0019,     0.0000],
        [    0.9570,     0.0051,     0.0017,     0.0010,     0.0021,     0.0017,     0.0048,     0.0070,     0.0039,     0.0022,     0.0003,     0.0014,     0.0071,     0.0032,     0.0022]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0073, -0.0101,  0.0403,  ..., -0.0016, -0.0117, -0.0240],
        [ 0.0540, -0.0499, -0.0093,  ..., -0.0188, -0.0157, -0.0382],
        [ 0.0521, -0.0356,  0.0457,  ..., -0.0140, -0.0146, -0.0051],
        ...,
        [ 0.0339,  0.0218, -0.0283,  ..., -0.0031,  0.0107,  0.0245],
        [ 0.0178,  0.0161,  0.0029,  ..., -0.0134, -0.0441, -0.0302],
        [ 0.0213, -0.0146,  0.0072,  ...,  0.0007, -0.0103,  0.0087]], device='cuda:0', requires_grad=True)
K: tensor([-1.0859, -0.7695, -0.5156, -0.1289, -2.3594,  1.6016, -1.6172,  2.7500, -1.4375, -1.3906,  1.8359,  1.4375, -1.6562, -1.8438, -1.4141,  0.0859,  1.8203,  2.0469, -1.1875,  1.1797,  2.4219,  0.6016, -2.3438,  0.1152,  1.8047, -1.8594,  0.0444, -2.1406,  2.1094, -0.0635,  1.5547,  2.7812,
        -0.2695,  1.4844,  2.5312, -0.6719, -1.4688,  1.8594,  1.9531, -2.2500,  2.3906, -1.5859,  0.3477,  1.5781,  0.0884,  2.6875, -1.2891, -3.0000, -0.5195,  2.7656, -0.9922, -0.4355,  1.7891, -1.0000,  1.7969, -1.6016, -2.0938, -2.3750, -1.6875, -1.2891, -2.8750, -1.1953,  1.2344,  0.5859],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0041,  0.0395,  0.0155,  ..., -0.0093,  0.0383, -0.0108],
        [-0.0088,  0.0430, -0.0032,  ...,  0.0136,  0.0186, -0.0025],
        [-0.0270, -0.0082,  0.0180,  ..., -0.0280,  0.0680, -0.0366],
        ...,
        [ 0.0292, -0.0136,  0.0153,  ..., -0.0199, -0.0098, -0.0108],
        [ 0.0025,  0.0156, -0.0010,  ...,  0.0221,  0.0169,  0.0101],
        [ 0.0101, -0.0328, -0.0172,  ...,  0.0345,  0.0218,  0.0096]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.6953,  0.9414, -1.1562,  0.3574,  0.2852, -1.7656,  0.5195,  0.2295, -0.2227,  0.2598, -0.0398, -0.1807,  0.6875,  1.2109,  0.2109, -1.6016, -0.2598, -1.4609,  0.7734,  0.1318,  0.0427,  1.1797,  0.9297,  0.5234,  1.1094,  0.3789,  0.6289,  0.4004, -0.7031, -1.1719,  0.3379, -0.4238,
        -1.5312, -1.0078, -0.3242,  0.2695,  0.6523, -1.4219,  0.6289,  0.2637, -2.0156,  1.6406, -0.3203, -0.1021,  0.0796, -0.0830,  0.7031,  0.5586, -0.4766, -0.6875,  0.2539, -0.8164, -0.1543, -0.8359,  0.0845,  1.1250, -0.3223,  1.0859,  1.5469,  2.4219,  1.2031,  0.8945, -1.8203,  0.0786],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -3.8906, -4.7188, -5.2188, -5.3750, -5.8125, -4.7500, -4.4062, -5.0000, -5.6562, -6.3438, -4.9688, -4.7188, -5.2812, -5.3438],
        [ 0.0000, -4.4062, -4.6562, -5.9062, -6.0938, -6.4375, -5.5000, -4.4688, -5.8750, -5.9062, -7.3750, -5.0312, -4.7812, -6.1562, -5.9688],
        [ 0.0000, -4.5938, -6.0000, -6.0000, -6.5938, -6.5312, -5.3750, -5.7500, -6.3750, -6.3750, -7.2188, -6.5000, -5.8750, -6.5625, -6.1250],
        [ 0.0000, -4.4062, -5.0312, -6.0625, -4.0625, -5.0312, -3.3906, -3.2031, -3.7969, -5.3125, -5.9375, -4.9375, -3.4375, -4.0312, -5.4375],
        [ 0.0000, -5.5000, -5.5938, -7.4062, -5.6875, -6.7812, -4.9062, -5.1562, -5.6875, -7.2500, -7.5625, -6.4688, -5.2812, -6.0312, -6.5312],
        [ 0.0000, -4.1562, -4.4375, -4.7812, -5.4062, -5.0625, -3.2500, -3.0781, -4.0312, -5.2812, -6.2188, -4.1875, -3.0781, -4.1875, -5.3438],
        [ 0.0000, -3.9844, -3.2344, -4.1562, -4.3438, -4.0000, -3.2188, -2.1250, -3.4531, -2.9375, -4.7812, -2.3906, -1.8594, -3.4688, -4.1875],
        [ 0.0000, -5.8438, -6.5312, -7.7188, -6.5000, -6.8438, -5.3438, -5.6562, -5.7812, -7.4688, -8.0625, -7.2812, -5.3438, -6.0938, -6.8438],
        [ 0.0000, -5.8438, -7.2812, -7.9375, -7.5938, -7.7812, -6.5625, -5.6562, -6.8438, -5.6562, -8.5625, -6.2188, -5.5312, -6.7812, -7.7188],
        [ 0.0000, -4.8125, -5.7188, -5.8125, -6.8125, -6.7188, -5.2188, -4.5000, -5.6250, -5.8125, -7.4375, -5.3125, -4.7812, -5.6875, -6.6562],
        [ 0.0000, -4.6875, -5.2500, -5.7188, -5.6562, -6.2188, -4.8750, -3.2969, -4.9375, -4.3750, -6.8750, -3.0156, -2.7188, -5.0000, -6.4062],
        [ 0.0000, -4.7500, -3.5000, -4.1875, -4.7188, -3.8750, -3.6875, -1.8906, -3.3750, -2.2656, -5.6250, -2.2656, -0.5273, -3.3594, -4.9062],
        [ 0.0000, -6.1875, -6.8750, -7.9688, -6.7188, -7.0938, -5.6875, -5.7188, -5.9688, -7.2812, -8.3125, -7.3125, -5.3125, -6.2500, -7.0938],
        [ 0.0000, -5.2500, -6.3125, -6.9062, -6.1250, -6.3438, -5.2812, -4.9062, -5.5000, -6.0938, -7.9688, -6.5625, -4.9062, -5.7188, -6.0625]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9805],
        [0.9922],
        [0.9915],
        [0.9701],
        [0.9876],
        [0.9805],
        [0.9149],
        [0.9899],
        [0.9961],
        [0.9912],
        [0.9600],
        [0.9212],
        [0.9886],
        [0.9876]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1060,     0.8945,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0294,     0.6289,     0.3418,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0381,     0.3691,     0.5156,     0.0767,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0459,     0.4375,     0.3809,     0.0615,     0.0742,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0228,     0.4707,     0.2461,     0.0830,     0.1084,     0.0688,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0066,     0.2988,     0.0608,     0.0175,     0.0146,     0.0194,     0.5820,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0030,     0.0425,     0.0287,     0.0051,     0.0041,     0.0095,     0.8359,     0.0732,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0113,     0.1011,     0.0081,     0.0017,     0.0014,     0.0027,     0.8242,     0.0177,     0.0315,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0082,     0.0552,     0.0240,     0.0070,     0.0116,     0.0236,     0.4316,     0.0713,     0.1475,     0.2197,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0121,     0.0294,     0.0105,     0.0027,     0.0063,     0.0175,     0.3848,     0.0378,     0.0344,     0.3984,     0.0664,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0079,     0.0211,     0.0222,     0.0082,     0.0057,     0.0109,     0.2373,     0.1152,     0.0483,     0.2461,     0.0957,     0.1816,     0.0000,     0.0000,     0.0000],
        [    0.0109,     0.0306,     0.0148,     0.0037,     0.0038,     0.0096,     0.2715,     0.0532,     0.0693,     0.1953,     0.0874,     0.1641,     0.0864,     0.0000,     0.0000],
        [    0.0277,     0.0664,     0.0056,     0.0012,     0.0010,     0.0022,     0.2793,     0.0108,     0.0146,     0.1357,     0.2969,     0.0806,     0.0262,     0.0508,     0.0000],
        [    0.0030,     0.0117,     0.0026,     0.0019,     0.0026,     0.0086,     0.0383,     0.0192,     0.0295,     0.0549,     0.0515,     0.0825,     0.0708,     0.1240,     0.4980]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0030,  0.0090, -0.0057,  ..., -0.0328, -0.0089, -0.0246],
        [-0.0471,  0.0151, -0.0180,  ...,  0.0034,  0.0015, -0.0010],
        [-0.0472, -0.0139,  0.0406,  ..., -0.0228, -0.0309, -0.0273],
        ...,
        [-0.0029, -0.0032, -0.0127,  ..., -0.0288, -0.0457, -0.0491],
        [-0.0227, -0.0283, -0.0273,  ..., -0.0151, -0.0102,  0.0546],
        [-0.0079,  0.0215,  0.0188,  ..., -0.0088,  0.0111, -0.0134]], device='cuda:0', requires_grad=True)
K: tensor([-1.9375, -2.0000, -0.7500,  0.8086, -0.1709, -2.0938, -1.3594,  0.1211, -0.0942, -1.8828, -0.3672, -2.3750,  2.6250, -1.6953, -0.3125,  1.7344,  2.8438,  0.0623,  0.8750, -0.2617,  0.6328, -2.2656,  1.0547, -1.8906, -0.6836,  1.1016, -0.6836,  1.4375,  0.8945,  1.9141, -0.6914, -2.1406,
        -0.5039, -1.4141,  1.8906, -0.7305,  2.7812,  0.0437, -1.5547,  0.1953, -2.5781,  1.0391,  0.8086,  1.7500,  0.5664, -0.4023, -2.3906, -0.8672,  1.8438, -0.0194,  1.0078, -0.3906, -0.0493, -2.0312, -1.8984, -2.3438,  1.9219, -0.7500, -0.5664,  1.5156,  0.0864, -1.1719,  1.9297, -0.8047],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0066, -0.0052,  0.0159,  ...,  0.0231, -0.0238, -0.0143],
        [ 0.0392, -0.0066,  0.0137,  ...,  0.0015,  0.0249,  0.0223],
        [-0.0169,  0.0109,  0.0471,  ...,  0.0225,  0.0209, -0.0117],
        ...,
        [ 0.0170,  0.0018, -0.0271,  ...,  0.0004,  0.0072, -0.0014],
        [-0.0115,  0.0411, -0.0290,  ...,  0.0032,  0.0071, -0.0400],
        [ 0.0048, -0.0134,  0.0006,  ...,  0.0139, -0.0050,  0.0032]], device='cuda:0', requires_grad=True)
Q: tensor([-0.3301, -0.7109, -1.6719,  1.4688, -1.9141, -0.9102, -0.4062, -0.1040,  0.6914, -0.7539, -0.8477, -0.4336, -1.9766, -2.1875,  0.9180, -0.4434, -0.5859, -0.8008,  1.2031, -1.4141, -0.3750,  1.4688, -0.9258, -2.2812, -0.7734, -1.5625,  1.7812,  3.7188, -1.9453,  2.0938,  1.0625, -1.2188,
        -1.0859,  0.4414, -1.5547, -1.8594,  1.7266, -1.3359, -2.5469,  0.3359, -0.6328, -0.2559,  2.0938, -0.7539, -1.1172, -1.0000, -0.9883, -2.6094,  1.9844,  1.5391,  0.7617, -0.0933, -1.4297, -0.4980, -0.5039, -1.4531, -0.4121,  0.2695, -0.6953,  1.8281, -0.7422,  0.3477,  0.5234, -1.4141],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  2.1406,  1.3281,  0.9375,  1.2031,  1.0859,  3.2188,  2.5469,  2.7188,  2.7500,  2.6719,  2.4688,  2.6094,  3.0781,  3.6562],
        [ 0.0000,  3.0625,  2.4531,  1.5547,  1.1562,  1.4062,  4.8750,  3.9219,  3.4375,  4.5625,  3.9688,  4.8438,  4.8125,  4.0312,  6.0625],
        [ 0.0000,  2.2812,  2.6094,  0.6992,  1.1641,  2.3906,  3.6875,  3.6094,  3.2969,  5.0625,  4.4062,  6.2812,  5.6250,  4.7188,  6.8125],
        [ 0.0000,  2.2500,  2.1094,  0.2949,  0.4805,  1.0938,  4.3438,  3.1719,  3.8750,  4.8438,  3.4688,  4.4062,  3.7500,  4.8750,  5.7812],
        [ 0.0000,  3.0312,  2.3750,  1.2969,  1.5547,  1.1016,  3.8750,  3.1875,  3.9062,  3.9219,  4.3125,  4.6562,  3.8125,  5.2500,  6.7500],
        [ 0.0000,  3.8125,  2.2188,  0.9688,  0.7891,  1.0703,  4.4688,  3.5625,  3.7500,  4.3438,  3.3125,  4.5938,  4.5312,  4.5938,  8.0625],
        [ 0.0000,  2.6406,  2.2500,  0.5195,  0.2949,  1.1406,  5.6250,  3.1875,  3.5625,  4.9688,  3.9844,  5.0938,  4.5312,  4.5938,  6.8750],
        [ 0.0000,  2.1875, -0.3379, -1.8672, -2.0781, -1.4453,  4.2812,  0.4512,  1.0234,  3.0156,  4.0000,  2.3438,  0.9883,  1.8281,  4.9062],
        [ 0.0000,  1.8984,  1.0703, -0.1621,  0.3379,  1.0469,  3.9531,  2.1562,  2.8750,  3.2812,  3.1094,  3.7031,  3.0938,  4.1250,  6.0312],
        [ 0.0000,  0.8867, -0.1426, -1.5078, -0.6641,  0.3633,  3.4531,  1.1406,  1.0391,  3.4844,  1.7031,  2.9219,  2.3750,  2.0469,  5.7812],
        [ 0.0000,  0.9922,  1.0391,  0.0439, -0.3223,  0.3223,  3.4062,  2.6875,  1.8203,  3.4375,  2.5000,  3.1406,  3.9375,  3.2031,  5.2500],
        [ 0.0000,  1.0312,  0.3027, -1.0938, -1.0547, -0.1230,  3.2188,  1.5859,  1.8516,  2.8906,  2.0781,  2.7031,  2.0625,  3.2500,  5.0938],
        [ 0.0000,  0.8750, -1.5938, -3.1406, -3.3438, -2.5469,  2.3125, -0.9414, -0.6367,  1.5859,  2.3750,  1.0625, -0.0557,  0.6055,  3.8281],
        [ 0.0000,  1.3672, -0.1279, -0.4629, -0.1187,  1.0625,  2.5625,  1.8594,  2.2969,  2.9062,  2.8438,  3.3281,  3.1719,  3.7344,  5.1250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3695],
        [0.1000],
        [0.1147],
        [0.1317],
        [0.0890],
        [0.1595],
        [0.0964],
        [0.0929],
        [0.0794],
        [0.0992],
        [0.0964],
        [0.0806],
        [0.0944],
        [0.0883]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0128,     0.9883,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0153,     0.9492,     0.0354,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0190,     0.8711,     0.0510,     0.0588,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0009,     0.6602,     0.1504,     0.0483,     0.1387,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0073,     0.5352,     0.1177,     0.0160,     0.1729,     0.1494,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0093,     0.4277,     0.4238,     0.0143,     0.0347,     0.0481,     0.0422,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0108,     0.2207,     0.0884,     0.0040,     0.0977,     0.0228,     0.0281,     0.5273,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0300,     0.4102,     0.0864,     0.0131,     0.0488,     0.0347,     0.0302,     0.2969,     0.0505,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0151,     0.5039,     0.0422,     0.0138,     0.0250,     0.0134,     0.0308,     0.2266,     0.0327,     0.0962,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0219,     0.4004,     0.0275,     0.0102,     0.0383,     0.0210,     0.0308,     0.1641,     0.0359,     0.0996,     0.1494,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0437,     0.5078,     0.0405,     0.0322,     0.0127,     0.0177,     0.0334,     0.1641,     0.0085,     0.0684,     0.0452,     0.0276,     0.0000,     0.0000,     0.0000],
        [    0.0302,     0.2178,     0.0270,     0.0019,     0.0391,     0.0079,     0.0155,     0.1079,     0.0376,     0.1367,     0.0454,     0.1157,     0.2178,     0.0000,     0.0000],
        [    0.0525,     0.1855,     0.0115,     0.0051,     0.0167,     0.0070,     0.0102,     0.0364,     0.0147,     0.1289,     0.0669,     0.0466,     0.3750,     0.0432,     0.0000],
        [    0.0566,     0.3887,     0.0344,     0.0317,     0.0415,     0.0219,     0.0703,     0.0503,     0.0114,     0.0378,     0.0398,     0.0417,     0.0718,     0.0126,     0.0903]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0064, -0.0277, -0.0049,  ..., -0.0020,  0.0198, -0.0126],
        [ 0.0234, -0.0506, -0.0091,  ...,  0.0291,  0.0211,  0.0017],
        [-0.0077, -0.0273, -0.0358,  ...,  0.0329,  0.0098, -0.0152],
        ...,
        [ 0.0266,  0.0162, -0.0159,  ..., -0.0178,  0.0072,  0.0204],
        [ 0.0182, -0.0062,  0.0222,  ...,  0.0300, -0.0074,  0.0133],
        [-0.0354,  0.0383, -0.0092,  ...,  0.0071,  0.0250,  0.0442]], device='cuda:0', requires_grad=True)
K: tensor([-0.5820, -1.1406, -0.4512, -0.0317, -0.8789,  0.2637,  0.1235, -0.1992, -0.4395, -3.2500, -1.8672, -1.4219, -0.1621, -1.2188, -1.6328,  1.6953,  2.3125,  1.3672, -2.4219, -0.5859,  1.4688, -1.0078, -2.2188,  0.5000,  1.2891, -1.6953, -0.9961,  1.0156, -0.9062, -1.9922, -0.5586,  0.3262,
        -2.5000,  2.3750,  3.8125,  0.3926,  0.4160, -1.1797, -0.4219, -1.8203, -0.8828, -0.1387, -1.8672,  1.0156,  0.2207, -0.1621, -1.0859,  1.7578, -1.6797, -1.8438,  0.7891,  2.0625,  1.7891, -0.1621, -0.2324,  0.1016,  0.1211, -3.2031, -0.6367,  1.2344,  0.8984, -0.8164,  1.4141, -1.7266],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0015, -0.0088, -0.0056,  ..., -0.0393, -0.0321, -0.0206],
        [ 0.0046,  0.0043, -0.0090,  ...,  0.0065, -0.0208,  0.0370],
        [ 0.0212, -0.0118, -0.0007,  ..., -0.0093, -0.0262, -0.0121],
        ...,
        [ 0.0312, -0.0489, -0.0334,  ...,  0.0120,  0.0207, -0.0096],
        [ 0.0190, -0.0063,  0.0567,  ...,  0.0191,  0.0044,  0.0099],
        [-0.0136, -0.0106, -0.0185,  ...,  0.0149,  0.0046, -0.0158]], device='cuda:0', requires_grad=True)
Q: tensor([-0.1465,  1.2500,  0.2676,  0.9609,  0.2598, -1.4453, -0.0113, -2.2656, -1.4062,  0.3770, -0.0869,  1.0547,  0.8516, -0.3945, -0.6953, -0.7188,  0.3965,  0.5078, -0.4863,  0.2793, -0.4141, -0.4629,  0.6172, -0.4316,  1.0625,  0.4199, -1.1719,  1.3125, -1.0000,  0.9180, -1.0312, -1.9219,
        -0.0165,  0.3203, -1.2422, -0.7422, -0.5703, -0.1030,  1.9609, -0.6641,  0.5547, -0.0077, -0.6523,  0.4531,  0.0052,  1.2422, -0.4297,  1.4688,  1.3906, -1.0156,  0.5977,  1.4766, -0.4648,  0.1914, -0.5781,  0.5234, -1.9219,  0.3555,  0.1250,  0.8555,  0.4492, -1.2031, -0.8516, -1.0156],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      4.3438,      1.6641,      1.1719,      2.1875,      2.3750,      1.8906,      2.5000,      1.6406,      2.0938,      2.4219,      1.5156,      2.8906,      1.6562,      2.2812],
        [     0.0000,      4.1250,      0.8359,      1.9453,      2.6406,      2.3438,      2.2812,      1.7422,      0.6133,      0.6367,      1.2109,     -0.5508,      1.6953,      0.2793,      0.1689],
        [     0.0000,      3.8281,      0.9883,      1.1328,      2.6719,      1.5078,      2.1562,      2.2031,      0.9570,      1.4141,      0.7266,     -0.1338,      1.8984,      0.6133,      0.4316],
        [     0.0000,      6.5938,      5.0938,      3.9688,      5.0000,      5.5312,      3.5000,      7.4062,      3.6406,      5.6875,      4.0938,      4.7188,      7.2500,      3.2969,      3.3594],
        [     0.0000,      4.3125,      2.7812,      0.7891,      3.1719,      3.0312,      2.4062,      3.9531,      1.9375,      3.0781,      1.7578,      2.6875,      3.4375,      1.3672,      2.4531],
        [     0.0000,      3.8281,      3.8125,      0.4336,      1.3125,      1.6484,      1.5156,      5.1562,      0.6133,      3.3438,      0.3398,      3.4531,      3.8594,     -0.2451,      1.9375],
        [     0.0000,      3.0156,      2.0938,     -0.9883,      2.2031,      0.7461,      0.9531,      3.8906,      2.2656,      3.3438,      1.6875,      3.1250,      3.7812,      2.0938,      3.7656],
        [     0.0000,      2.6094,      1.0625,     -0.8281,      0.4883,      0.1416,      0.0049,      2.2969,      0.5195,      2.8594,      0.8516,      1.4141,      3.3750,      0.2393,      1.4219],
        [     0.0000,      3.5156,      1.0312,     -0.0859,      0.5078,     -0.1191,      0.7148,      2.7031,      0.7734,      1.8516,      2.1562,      1.9844,      3.8438,      0.8047,      1.6172],
        [     0.0000,      2.9062,      0.2295,     -0.7656,      0.5625,     -0.0388,      0.3418,      2.0156,      0.4980,      1.5156,      1.9219,      1.7969,      3.1719,      0.8438,      1.1719],
        [     0.0000,      2.4531,     -0.0791,     -0.3086,     -1.2344,     -0.9062,     -0.2656,      1.3203,     -1.6406,      0.4434,      0.0325,     -0.4609,      2.8125,     -1.1172,     -0.1768],
        [     0.0000,      1.9766,     -0.1133,     -2.7812,      0.2617,     -1.3438,     -0.6680,      1.2734,      0.2207,      1.5078,      0.4121,      1.3438,      1.9766,      1.0625,      2.1250],
        [     0.0000,      1.2656,     -1.5234,     -2.3281,     -1.1406,     -2.0156,     -1.6406,     -0.3672,     -1.2734,      0.8984,      0.2441,     -0.1182,      1.9688,     -0.1924,      0.1553],
        [     0.0000,      1.9297,     -0.4980,     -0.5742,     -0.3105,     -0.9492,      0.2168,     -0.1177,     -1.6016,     -0.4023,     -0.3535,     -0.3008,      0.2373,     -1.5078,      0.4688]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0289],
        [0.0116],
        [0.0073],
        [0.0033],
        [0.0089],
        [0.0052],
        [0.0071],
        [0.0061],
        [0.0049],
        [0.0149],
        [0.0079],
        [0.0088],
        [0.0096],
        [0.0079]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.1836 a:0.2119,:0.3184 white:0.0908atoes:0.0962,:0.3887 a:0.0938iced:0.1699)
iced
------
		( a:0.2119,:0.3184 white:0.0908atoes:0.0962,:0.3887 a:0.0938iced:0.1699 with:0.2002)
 with a sweet, sweet, and sweet, and they are a great way
@ 11550 train 3.7893 , allloss: 3.8006, dt: 1675.49ms, fracRes: 0.5977, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6156, norm(y): 0.9869, norm:0.7362, tok/sec: 78229.16, flops:68.50, batch-reuse:1
@ 11551 train 3.7046 , allloss: 3.7157, dt: 1267.28ms, fracRes: 0.5979, norm(attn): 0.1670, norm(output): 0.2520, norm(x): 0.6132, norm(y): 0.9870, norm:0.8519, tok/sec: 103428.12, flops:90.57, batch-reuse:1
@ 11552 train 3.6378 , allloss: 3.6488, dt: 1266.66ms, fracRes: 0.5971, norm(attn): 0.1689, norm(output): 0.2520, norm(x): 0.6111, norm(y): 0.9869, norm:0.8135, tok/sec: 103478.31, flops:90.61, batch-reuse:1
@ 11553 train 3.6946 , allloss: 3.7058, dt: 1270.22ms, fracRes: 0.5971, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6137, norm(y): 0.9867, norm:0.7849, tok/sec: 103188.46, flops:90.36, batch-reuse:1
@ 11554 train 3.6264 , allloss: 3.6378, dt: 1264.84ms, fracRes: 0.5969, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6133, norm(y): 0.9869, norm:0.8479, tok/sec: 103627.23, flops:90.74, batch-reuse:1
@ 11555 train 3.7096 , allloss: 3.7209, dt: 1295.97ms, fracRes: 0.5964, norm(attn): 0.1670, norm(output): 0.2539, norm(x): 0.6142, norm(y): 0.9870, norm:0.8587, tok/sec: 101138.20, flops:88.57, batch-reuse:1
@ 11556 train 3.7898 , allloss: 3.8009, dt: 1322.64ms, fracRes: 0.5957, norm(attn): 0.1699, norm(output): 0.2520, norm(x): 0.6114, norm(y): 0.9867, norm:0.7742, tok/sec: 99098.53, flops:86.78, batch-reuse:1
@ 11557 train 3.7594 , allloss: 3.7706, dt: 1294.87ms, fracRes: 0.5963, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6159, norm(y): 0.9868, norm:0.7793, tok/sec: 101224.26, flops:88.64, batch-reuse:1
@ 11558 train 3.7193 , allloss: 3.7305, dt: 1259.29ms, fracRes: 0.5972, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6167, norm(y): 0.9867, norm:0.7469, tok/sec: 104083.75, flops:91.14, batch-reuse:1
@ 11559 train 3.8550 , allloss: 3.8660, dt: 1277.02ms, fracRes: 0.5971, norm(attn): 0.1689, norm(output): 0.2598, norm(x): 0.6193, norm(y): 0.9868, norm:0.7546, tok/sec: 102639.34, flops:89.88, batch-reuse:1
@ 11560 train 3.7705 , allloss: 3.7816, dt: 1261.34ms, fracRes: 0.5964, norm(attn): 0.1699, norm(output): 0.2559, norm(x): 0.6164, norm(y): 0.9868, norm:0.8862, tok/sec: 103914.74, flops:91.00, batch-reuse:1
@ 11561 train 3.6920 , allloss: 3.7029, dt: 1265.43ms, fracRes: 0.5962, norm(attn): 0.1709, norm(output): 0.2539, norm(x): 0.6145, norm(y): 0.9870, norm:0.7842, tok/sec: 103578.77, flops:90.70, batch-reuse:1
@ 11562 train 3.6489 , allloss: 3.6596, dt: 1274.48ms, fracRes: 0.5962, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6138, norm(y): 0.9868, norm:0.8432, tok/sec: 102843.31, flops:90.06, batch-reuse:1
@ 11563 train 3.7422 , allloss: 3.7535, dt: 1258.29ms, fracRes: 0.5974, norm(attn): 0.1689, norm(output): 0.2539, norm(x): 0.6150, norm(y): 0.9870, norm:0.7895, tok/sec: 104166.49, flops:91.22, batch-reuse:1
@ 11564 train 3.7397 , allloss: 3.7511, dt: 1266.57ms, fracRes: 0.5978, norm(attn): 0.1689, norm(output): 0.2539, norm(x): 0.6149, norm(y): 0.9869, norm:0.8327, tok/sec: 103485.49, flops:90.62, batch-reuse:1
@ 11565 train 3.7440 , allloss: 3.7557, dt: 1268.20ms, fracRes: 0.5979, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6206, norm(y): 0.9868, norm:0.9484, tok/sec: 103352.63, flops:90.50, batch-reuse:1
@ 11566 train 3.8159 , allloss: 3.8272, dt: 1259.05ms, fracRes: 0.5973, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6160, norm(y): 0.9866, norm:0.8125, tok/sec: 104103.50, flops:91.16, batch-reuse:1
@ 11567 train 3.6713 , allloss: 3.6824, dt: 1256.47ms, fracRes: 0.5976, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6132, norm(y): 0.9868, norm:0.8292, tok/sec: 104317.42, flops:91.35, batch-reuse:1
@ 11568 train 3.8292 , allloss: 3.8409, dt: 1285.57ms, fracRes: 0.5976, norm(attn): 0.1670, norm(output): 0.2559, norm(x): 0.6194, norm(y): 0.9867, norm:0.9056, tok/sec: 101956.04, flops:89.28, batch-reuse:1
@ 11569 train 3.8358 , allloss: 3.8479, dt: 1259.70ms, fracRes: 0.5973, norm(attn): 0.1689, norm(output): 0.2578, norm(x): 0.6231, norm(y): 0.9866, norm:0.8894, tok/sec: 104050.56, flops:91.12, batch-reuse:1
@ 11570 train 3.8749 , allloss: 3.8863, dt: 1267.36ms, fracRes: 0.5961, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6194, norm(y): 0.9865, norm:0.8184, tok/sec: 103421.38, flops:90.56, batch-reuse:1
@ 11571 train 3.9676 , allloss: 3.9792, dt: 1280.55ms, fracRes: 0.5956, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6204, norm(y): 0.9865, norm:0.8615, tok/sec: 102355.98, flops:89.63, batch-reuse:1
@ 11572 train 3.9519 , allloss: 3.9633, dt: 1268.33ms, fracRes: 0.5962, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6198, norm(y): 0.9865, norm:0.8175, tok/sec: 103342.07, flops:90.50, batch-reuse:1
@ 11573 train 3.8625 , allloss: 3.8742, dt: 1255.55ms, fracRes: 0.5969, norm(attn): 0.1709, norm(output): 0.2559, norm(x): 0.6213, norm(y): 0.9867, norm:0.8377, tok/sec: 104394.20, flops:91.42, batch-reuse:1
@ 11574 train 3.8007 , allloss: 3.8137, dt: 1279.53ms, fracRes: 0.5971, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6272, norm(y): 0.9868, norm:1.1067, tok/sec: 102437.99, flops:89.70, batch-reuse:1
@ 11575 train 4.0816 , allloss: 4.0941, dt: 1265.12ms, fracRes: 0.5969, norm(attn): 0.1689, norm(output): 0.2578, norm(x): 0.6183, norm(y): 0.9863, norm:0.8603, tok/sec: 103604.11, flops:90.72, batch-reuse:1
@ 11576 train 4.0324 , allloss: 4.0441, dt: 1277.63ms, fracRes: 0.5966, norm(attn): 0.1689, norm(output): 0.2578, norm(x): 0.6189, norm(y): 0.9861, norm:0.8825, tok/sec: 102590.00, flops:89.84, batch-reuse:1
@ 11577 train 3.8969 , allloss: 3.9083, dt: 1266.14ms, fracRes: 0.5972, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6200, norm(y): 0.9864, norm:0.8155, tok/sec: 103521.11, flops:90.65, batch-reuse:1
@ 11578 train 3.9522 , allloss: 3.9641, dt: 1289.91ms, fracRes: 0.5978, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6244, norm(y): 0.9865, norm:0.8002, tok/sec: 101613.42, flops:88.98, batch-reuse:1
@ 11579 train 4.0651 , allloss: 4.0772, dt: 1262.62ms, fracRes: 0.5978, norm(attn): 0.1680, norm(output): 0.2578, norm(x): 0.6211, norm(y): 0.9863, norm:0.9160, tok/sec: 103809.36, flops:90.90, batch-reuse:1
@ 11580 train 3.9125 , allloss: 3.9241, dt: 1278.30ms, fracRes: 0.5979, norm(attn): 0.1670, norm(output): 0.2559, norm(x): 0.6184, norm(y): 0.9865, norm:0.8077, tok/sec: 102536.56, flops:89.79, batch-reuse:1
@ 11581 train 3.9462 , allloss: 3.9579, dt: 1265.00ms, fracRes: 0.5968, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6214, norm(y): 0.9862, norm:0.9159, tok/sec: 103614.28, flops:90.73, batch-reuse:1
@ 11582 train 3.8616 , allloss: 3.8730, dt: 1259.93ms, fracRes: 0.5967, norm(attn): 0.1689, norm(output): 0.2617, norm(x): 0.6220, norm(y): 0.9863, norm:0.8904, tok/sec: 104031.32, flops:91.10, batch-reuse:1
@ 11583 train 4.0361 , allloss: 4.0483, dt: 1266.54ms, fracRes: 0.5957, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6214, norm(y): 0.9861, norm:1.0424, tok/sec: 103488.34, flops:90.62, batch-reuse:1
@ 11584 train 3.9420 , allloss: 3.9540, dt: 1287.81ms, fracRes: 0.5964, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6184, norm(y): 0.9862, norm:0.8007, tok/sec: 101779.28, flops:89.13, batch-reuse:1
@ 11585 train 3.9046 , allloss: 3.9167, dt: 1309.44ms, fracRes: 0.5965, norm(attn): 0.1699, norm(output): 0.2559, norm(x): 0.6147, norm(y): 0.9862, norm:0.9210, tok/sec: 100097.45, flops:87.65, batch-reuse:1
@ 11586 train 3.8701 , allloss: 3.8831, dt: 1283.66ms, fracRes: 0.5968, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6173, norm(y): 0.9864, norm:1.3069, tok/sec: 102107.64, flops:89.41, batch-reuse:1
@ 11587 train 4.0047 , allloss: 4.0168, dt: 1271.80ms, fracRes: 0.5945, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6161, norm(y): 0.9864, norm:1.0180, tok/sec: 103060.54, flops:90.25, batch-reuse:1
@ 11588 train 3.8872 , allloss: 3.8995, dt: 1265.32ms, fracRes: 0.5945, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6169, norm(y): 0.9863, norm:0.9276, tok/sec: 103588.10, flops:90.71, batch-reuse:1
@ 11589 train 3.9002 , allloss: 3.9125, dt: 1275.76ms, fracRes: 0.5956, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6197, norm(y): 0.9865, norm:0.8217, tok/sec: 102740.43, flops:89.97, batch-reuse:1
@ 11590 train 3.9584 , allloss: 3.9704, dt: 1277.18ms, fracRes: 0.5963, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6178, norm(y): 0.9863, norm:0.9068, tok/sec: 102626.27, flops:89.87, batch-reuse:1
@ 11591 train 3.9553 , allloss: 3.9668, dt: 1272.29ms, fracRes: 0.5979, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6224, norm(y): 0.9863, norm:0.8289, tok/sec: 103020.83, flops:90.21, batch-reuse:1
@ 11592 train 3.9517 , allloss: 3.9632, dt: 1281.33ms, fracRes: 0.5991, norm(attn): 0.1689, norm(output): 0.2598, norm(x): 0.6272, norm(y): 0.9863, norm:0.8283, tok/sec: 102293.45, flops:89.58, batch-reuse:1
@ 11593 train 3.9549 , allloss: 3.9669, dt: 1261.33ms, fracRes: 0.5988, norm(attn): 0.1699, norm(output): 0.2617, norm(x): 0.6285, norm(y): 0.9863, norm:0.8247, tok/sec: 103916.05, flops:91.00, batch-reuse:1
@ 11594 train 3.8954 , allloss: 3.9071, dt: 1279.34ms, fracRes: 0.5982, norm(attn): 0.1709, norm(output): 0.2539, norm(x): 0.6192, norm(y): 0.9863, norm:0.8211, tok/sec: 102452.52, flops:89.72, batch-reuse:1
@ 11595 train 4.1316 , allloss: 4.1437, dt: 1266.95ms, fracRes: 0.5972, norm(attn): 0.1689, norm(output): 0.2598, norm(x): 0.6161, norm(y): 0.9861, norm:0.9284, tok/sec: 103455.09, flops:90.59, batch-reuse:1
@ 11596 train 3.9329 , allloss: 3.9444, dt: 1273.23ms, fracRes: 0.5969, norm(attn): 0.1689, norm(output): 0.2578, norm(x): 0.6173, norm(y): 0.9863, norm:0.9179, tok/sec: 102944.80, flops:90.15, batch-reuse:1
@ 11597 train 3.8833 , allloss: 3.8952, dt: 1256.20ms, fracRes: 0.5965, norm(attn): 0.1689, norm(output): 0.2617, norm(x): 0.6224, norm(y): 0.9862, norm:0.8202, tok/sec: 104340.48, flops:91.37, batch-reuse:1
@ 11598 train 3.8369 , allloss: 3.8487, dt: 1254.84ms, fracRes: 0.5966, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6237, norm(y): 0.9867, norm:0.8843, tok/sec: 104453.07, flops:91.47, batch-reuse:1
@ 11599 train 3.9463 , allloss: 3.9582, dt: 1275.43ms, fracRes: 0.5970, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6272, norm(y): 0.9864, norm:0.8578, tok/sec: 102767.14, flops:89.99, batch-reuse:1
@ 11600 train 3.9019 , allloss: 3.9132, dt: 1260.90ms, fracRes: 0.5971, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6202, norm(y): 0.9863, norm:0.9283, tok/sec: 103951.26, flops:91.03, batch-reuse:1
@ 11601 train 3.9396 , allloss: 3.9513, dt: 1268.83ms, fracRes: 0.5983, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6212, norm(y): 0.9863, norm:0.8705, tok/sec: 103301.69, flops:90.46, batch-reuse:1
@ 11602 train 3.8718 , allloss: 3.8836, dt: 1267.65ms, fracRes: 0.5973, norm(attn): 0.1689, norm(output): 0.2578, norm(x): 0.6208, norm(y): 0.9863, norm:0.7818, tok/sec: 103397.25, flops:90.54, batch-reuse:1
@ 11603 train 3.9351 , allloss: 3.9467, dt: 1281.68ms, fracRes: 0.5969, norm(attn): 0.1680, norm(output): 0.2578, norm(x): 0.6226, norm(y): 0.9865, norm:0.8803, tok/sec: 102265.54, flops:89.55, batch-reuse:1
@ 11604 train 3.9501 , allloss: 3.9618, dt: 1280.52ms, fracRes: 0.5967, norm(attn): 0.1699, norm(output): 0.2617, norm(x): 0.6232, norm(y): 0.9862, norm:0.8625, tok/sec: 102358.76, flops:89.63, batch-reuse:1
@ 11605 train 3.9565 , allloss: 3.9679, dt: 1297.01ms, fracRes: 0.5968, norm(attn): 0.1689, norm(output): 0.2598, norm(x): 0.6213, norm(y): 0.9863, norm:0.8149, tok/sec: 101057.22, flops:88.49, batch-reuse:1
@ 11606 train 3.9317 , allloss: 3.9434, dt: 1259.16ms, fracRes: 0.5964, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6220, norm(y): 0.9864, norm:0.7787, tok/sec: 104095.12, flops:91.15, batch-reuse:1
@ 11607 train 3.9996 , allloss: 4.0121, dt: 1259.37ms, fracRes: 0.5972, norm(attn): 0.1689, norm(output): 0.2578, norm(x): 0.6211, norm(y): 0.9865, norm:0.8887, tok/sec: 104077.07, flops:91.14, batch-reuse:1
@ 11608 train 3.9627 , allloss: 3.9744, dt: 1264.23ms, fracRes: 0.5975, norm(attn): 0.1670, norm(output): 0.2598, norm(x): 0.6238, norm(y): 0.9863, norm:0.8772, tok/sec: 103677.14, flops:90.79, batch-reuse:1
@ 11609 train 3.9203 , allloss: 3.9322, dt: 1267.63ms, fracRes: 0.5969, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6231, norm(y): 0.9864, norm:0.9305, tok/sec: 103399.17, flops:90.55, batch-reuse:1
@ 11610 train 3.9590 , allloss: 3.9710, dt: 1268.42ms, fracRes: 0.5963, norm(attn): 0.1699, norm(output): 0.2637, norm(x): 0.6280, norm(y): 0.9864, norm:0.9989, tok/sec: 103335.13, flops:90.49, batch-reuse:1
@ 11611 train 3.9445 , allloss: 3.9557, dt: 1281.74ms, fracRes: 0.5963, norm(attn): 0.1680, norm(output): 0.2578, norm(x): 0.6185, norm(y): 0.9862, norm:0.9198, tok/sec: 102261.18, flops:89.55, batch-reuse:1
@ 11612 train 3.9317 , allloss: 3.9429, dt: 1274.45ms, fracRes: 0.5963, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6157, norm(y): 0.9862, norm:0.8113, tok/sec: 102845.83, flops:90.06, batch-reuse:1
@ 11613 train 3.9550 , allloss: 3.9663, dt: 1299.06ms, fracRes: 0.5974, norm(attn): 0.1670, norm(output): 0.2559, norm(x): 0.6179, norm(y): 0.9864, norm:0.9071, tok/sec: 100897.42, flops:88.35, batch-reuse:1
@ 11614 train 3.8360 , allloss: 3.8477, dt: 1267.50ms, fracRes: 0.5963, norm(attn): 0.1709, norm(output): 0.2559, norm(x): 0.6170, norm(y): 0.9862, norm:0.8649, tok/sec: 103409.93, flops:90.55, batch-reuse:1
@ 11615 train 4.0409 , allloss: 4.0524, dt: 1276.55ms, fracRes: 0.5955, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6149, norm(y): 0.9861, norm:0.7996, tok/sec: 102676.49, flops:89.91, batch-reuse:1
@ 11616 train 4.0020 , allloss: 4.0141, dt: 1266.14ms, fracRes: 0.5957, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6200, norm(y): 0.9862, norm:0.9180, tok/sec: 103521.00, flops:90.65, batch-reuse:1
@ 11617 train 3.8972 , allloss: 3.9087, dt: 1270.27ms, fracRes: 0.5946, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6176, norm(y): 0.9861, norm:0.7646, tok/sec: 103184.64, flops:90.36, batch-reuse:1
@ 11618 train 3.9089 , allloss: 3.9200, dt: 1260.69ms, fracRes: 0.5948, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6148, norm(y): 0.9863, norm:0.7586, tok/sec: 103968.23, flops:91.04, batch-reuse:1
@ 11619 train 3.9138 , allloss: 3.9251, dt: 1255.33ms, fracRes: 0.5947, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6137, norm(y): 0.9862, norm:0.7640, tok/sec: 104412.46, flops:91.43, batch-reuse:1
@ 11620 train 3.8404 , allloss: 3.8519, dt: 1250.89ms, fracRes: 0.5957, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6163, norm(y): 0.9862, norm:0.8821, tok/sec: 104782.77, flops:91.76, batch-reuse:1
@ 11621 train 3.9278 , allloss: 3.9392, dt: 1265.85ms, fracRes: 0.5954, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6176, norm(y): 0.9860, norm:0.9657, tok/sec: 103544.30, flops:90.67, batch-reuse:1
@ 11622 train 3.9249 , allloss: 3.9366, dt: 1287.47ms, fracRes: 0.5967, norm(attn): 0.1689, norm(output): 0.2578, norm(x): 0.6190, norm(y): 0.9861, norm:0.8138, tok/sec: 101806.10, flops:89.15, batch-reuse:1
@ 11623 train 3.9078 , allloss: 3.9192, dt: 1267.90ms, fracRes: 0.5971, norm(attn): 0.1689, norm(output): 0.2598, norm(x): 0.6196, norm(y): 0.9861, norm:0.8417, tok/sec: 103376.93, flops:90.53, batch-reuse:1
@ 11624 train 3.9162 , allloss: 3.9278, dt: 1266.37ms, fracRes: 0.5968, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6194, norm(y): 0.9861, norm:0.8635, tok/sec: 103502.50, flops:90.64, batch-reuse:1
@ 11625 train 3.9143 , allloss: 3.9254, dt: 1296.68ms, fracRes: 0.5970, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6189, norm(y): 0.9857, norm:0.7662, tok/sec: 101082.58, flops:88.52, batch-reuse:1
@ 11626 train 3.8617 , allloss: 3.8738, dt: 1265.67ms, fracRes: 0.5974, norm(attn): 0.1689, norm(output): 0.2598, norm(x): 0.6222, norm(y): 0.9857, norm:0.8543, tok/sec: 103559.24, flops:90.69, batch-reuse:1
@ 11627 train 3.9193 , allloss: 3.9313, dt: 1266.75ms, fracRes: 0.5976, norm(attn): 0.1680, norm(output): 0.2578, norm(x): 0.6167, norm(y): 0.9859, norm:0.8409, tok/sec: 103470.71, flops:90.61, batch-reuse:1
@ 11628 train 3.9730 , allloss: 3.9871, dt: 1276.84ms, fracRes: 0.5972, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6204, norm(y): 0.9860, norm:0.8812, tok/sec: 102653.72, flops:89.89, batch-reuse:1
@ 11629 train 3.9448 , allloss: 3.9567, dt: 1279.56ms, fracRes: 0.5966, norm(attn): 0.1709, norm(output): 0.2539, norm(x): 0.6145, norm(y): 0.9860, norm:0.9302, tok/sec: 102435.15, flops:89.70, batch-reuse:1
@ 11630 train 3.8549 , allloss: 3.8669, dt: 1272.92ms, fracRes: 0.5966, norm(attn): 0.1689, norm(output): 0.2578, norm(x): 0.6147, norm(y): 0.9862, norm:0.9649, tok/sec: 102969.52, flops:90.17, batch-reuse:1
@ 11631 train 4.0401 , allloss: 4.0522, dt: 1284.28ms, fracRes: 0.5962, norm(attn): 0.1680, norm(output): 0.2598, norm(x): 0.6160, norm(y): 0.9856, norm:0.8436, tok/sec: 102059.08, flops:89.37, batch-reuse:1
@ 11632 train 3.9632 , allloss: 3.9744, dt: 1273.09ms, fracRes: 0.5954, norm(attn): 0.1689, norm(output): 0.2598, norm(x): 0.6141, norm(y): 0.9858, norm:1.0191, tok/sec: 102955.91, flops:90.16, batch-reuse:1
@ 11633 train 3.9433 , allloss: 3.9549, dt: 1309.39ms, fracRes: 0.5953, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6170, norm(y): 0.9861, norm:0.9223, tok/sec: 100101.79, flops:87.66, batch-reuse:1
@ 11634 train 3.9530 , allloss: 3.9647, dt: 1295.06ms, fracRes: 0.5958, norm(attn): 0.1699, norm(output): 0.2559, norm(x): 0.6143, norm(y): 0.9860, norm:0.8959, tok/sec: 101209.09, flops:88.63, batch-reuse:1
@ 11635 train 3.9458 , allloss: 3.9576, dt: 1265.34ms, fracRes: 0.5963, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6169, norm(y): 0.9859, norm:1.0595, tok/sec: 103586.52, flops:90.71, batch-reuse:1
@ 11636 train 3.8974 , allloss: 3.9105, dt: 1275.63ms, fracRes: 0.5967, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6188, norm(y): 0.9859, norm:0.8318, tok/sec: 102750.61, flops:89.98, batch-reuse:1
@ 11637 train 3.9233 , allloss: 3.9345, dt: 1295.90ms, fracRes: 0.5967, norm(attn): 0.1699, norm(output): 0.2559, norm(x): 0.6158, norm(y): 0.9862, norm:1.0300, tok/sec: 101143.51, flops:88.57, batch-reuse:1
@ 11638 train 4.0196 , allloss: 4.0310, dt: 1284.53ms, fracRes: 0.5960, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6169, norm(y): 0.9860, norm:0.9452, tok/sec: 102038.85, flops:89.35, batch-reuse:1
@ 11639 train 3.9249 , allloss: 3.9365, dt: 1245.50ms, fracRes: 0.5970, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6178, norm(y): 0.9863, norm:0.7460, tok/sec: 105236.58, flops:92.15, batch-reuse:1
@ 11640 train 3.9672 , allloss: 3.9787, dt: 1284.69ms, fracRes: 0.5966, norm(attn): 0.1689, norm(output): 0.2578, norm(x): 0.6190, norm(y): 0.9858, norm:0.9389, tok/sec: 102026.52, flops:89.34, batch-reuse:1
@ 11641 train 3.8619 , allloss: 3.8732, dt: 1280.02ms, fracRes: 0.5957, norm(attn): 0.1709, norm(output): 0.2559, norm(x): 0.6140, norm(y): 0.9861, norm:0.8607, tok/sec: 102398.63, flops:89.67, batch-reuse:1
@ 11642 train 3.9091 , allloss: 3.9209, dt: 1293.71ms, fracRes: 0.5958, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6151, norm(y): 0.9862, norm:0.8186, tok/sec: 101314.84, flops:88.72, batch-reuse:1
@ 11643 train 3.9576 , allloss: 3.9695, dt: 1325.26ms, fracRes: 0.5961, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6197, norm(y): 0.9861, norm:0.9436, tok/sec: 98903.04, flops:86.61, batch-reuse:1
@ 11644 train 4.0167 , allloss: 4.0276, dt: 1315.55ms, fracRes: 0.5966, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6143, norm(y): 0.9859, norm:0.7785, tok/sec: 99633.15, flops:87.25, batch-reuse:1
@ 11645 train 3.8640 , allloss: 3.8756, dt: 1306.07ms, fracRes: 0.5958, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6159, norm(y): 0.9859, norm:0.8122, tok/sec: 100355.89, flops:87.88, batch-reuse:1
@ 11646 train 3.9120 , allloss: 3.9236, dt: 1270.37ms, fracRes: 0.5963, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6159, norm(y): 0.9860, norm:0.8106, tok/sec: 103175.85, flops:90.35, batch-reuse:1
@ 11647 train 3.8933 , allloss: 3.9049, dt: 1252.36ms, fracRes: 0.5954, norm(attn): 0.1709, norm(output): 0.2559, norm(x): 0.6157, norm(y): 0.9861, norm:0.7624, tok/sec: 104660.03, flops:91.65, batch-reuse:1
@ 11648 train 4.0052 , allloss: 4.0170, dt: 1254.37ms, fracRes: 0.5960, norm(attn): 0.1689, norm(output): 0.2598, norm(x): 0.6180, norm(y): 0.9860, norm:0.8885, tok/sec: 104492.65, flops:91.50, batch-reuse:1
@ 11649 train 3.9313 , allloss: 3.9427, dt: 1272.40ms, fracRes: 0.5961, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6140, norm(y): 0.9862, norm:0.7690, tok/sec: 103011.64, flops:90.21, batch-reuse:1
@ 11650 train 3.8857 , allloss: 3.8977, dt: 1273.11ms, fracRes: 0.5967, norm(attn): 0.1689, norm(output): 0.2598, norm(x): 0.6178, norm(y): 0.9859, norm:0.9506, tok/sec: 102954.06, flops:90.16, batch-reuse:1
@ 11651 train 3.8516 , allloss: 3.8629, dt: 1262.13ms, fracRes: 0.5961, norm(attn): 0.1699, norm(output): 0.2559, norm(x): 0.6131, norm(y): 0.9860, norm:0.7947, tok/sec: 103849.98, flops:90.94, batch-reuse:1
@ 11652 train 3.8184 , allloss: 3.8299, dt: 1287.30ms, fracRes: 0.5962, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6147, norm(y): 0.9862, norm:0.7934, tok/sec: 101819.53, flops:89.16, batch-reuse:1
@ 11653 train 3.9173 , allloss: 3.9287, dt: 1281.14ms, fracRes: 0.5963, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6160, norm(y): 0.9861, norm:0.8776, tok/sec: 102308.72, flops:89.59, batch-reuse:1
@ 11654 train 3.7844 , allloss: 3.7956, dt: 1256.98ms, fracRes: 0.5961, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6132, norm(y): 0.9859, norm:0.7824, tok/sec: 104275.19, flops:91.31, batch-reuse:1
@ 11655 train 3.8805 , allloss: 3.8918, dt: 1286.96ms, fracRes: 0.5960, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6131, norm(y): 0.9857, norm:0.7983, tok/sec: 101846.41, flops:89.19, batch-reuse:1
@ 11656 train 3.8406 , allloss: 3.8515, dt: 1291.61ms, fracRes: 0.5947, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6112, norm(y): 0.9857, norm:0.7800, tok/sec: 101479.66, flops:88.86, batch-reuse:1
@ 11657 train 3.9107 , allloss: 3.9217, dt: 1292.12ms, fracRes: 0.5950, norm(attn): 0.1699, norm(output): 0.2559, norm(x): 0.6115, norm(y): 0.9858, norm:0.8110, tok/sec: 101439.65, flops:88.83, batch-reuse:1
@ 11658 train 3.8423 , allloss: 3.8540, dt: 1317.35ms, fracRes: 0.5952, norm(attn): 0.1689, norm(output): 0.2598, norm(x): 0.6181, norm(y): 0.9860, norm:0.8194, tok/sec: 99496.53, flops:87.13, batch-reuse:1
@ 11659 train 3.9564 , allloss: 3.9678, dt: 1309.36ms, fracRes: 0.5962, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6152, norm(y): 0.9858, norm:0.8178, tok/sec: 100104.12, flops:87.66, batch-reuse:1
@ 11660 train 3.9057 , allloss: 3.9164, dt: 1290.36ms, fracRes: 0.5967, norm(attn): 0.1689, norm(output): 0.2578, norm(x): 0.6129, norm(y): 0.9856, norm:0.8397, tok/sec: 101578.16, flops:88.95, batch-reuse:1
@ 11661 train 3.8877 , allloss: 3.8984, dt: 1241.52ms, fracRes: 0.5977, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6149, norm(y): 0.9858, norm:0.7340, tok/sec: 105574.00, flops:92.45, batch-reuse:1
@ 11662 train 3.8110 , allloss: 3.8217, dt: 1236.30ms, fracRes: 0.5968, norm(attn): 0.1709, norm(output): 0.2559, norm(x): 0.6134, norm(y): 0.9858, norm:0.7520, tok/sec: 106019.25, flops:92.84, batch-reuse:1
@ 11663 train 3.9391 , allloss: 3.9505, dt: 1275.25ms, fracRes: 0.5973, norm(attn): 0.1699, norm(output): 0.2559, norm(x): 0.6144, norm(y): 0.9857, norm:0.7635, tok/sec: 102781.76, flops:90.00, batch-reuse:1
@ 11664 train 3.8407 , allloss: 3.8521, dt: 1295.69ms, fracRes: 0.5971, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6145, norm(y): 0.9857, norm:0.8066, tok/sec: 101159.85, flops:88.58, batch-reuse:1
@ 11665 train 3.7490 , allloss: 3.7603, dt: 1267.95ms, fracRes: 0.5967, norm(attn): 0.1689, norm(output): 0.2578, norm(x): 0.6156, norm(y): 0.9857, norm:0.7484, tok/sec: 103373.55, flops:90.52, batch-reuse:1
@ 11666 train 3.7759 , allloss: 3.7869, dt: 1275.97ms, fracRes: 0.5968, norm(attn): 0.1689, norm(output): 0.2539, norm(x): 0.6103, norm(y): 0.9859, norm:0.8160, tok/sec: 102723.07, flops:89.95, batch-reuse:1
@ 11667 train 3.8224 , allloss: 3.8340, dt: 1275.29ms, fracRes: 0.5957, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6119, norm(y): 0.9858, norm:1.0031, tok/sec: 102777.94, flops:90.00, batch-reuse:1
@ 11668 train 3.7895 , allloss: 3.8012, dt: 1284.15ms, fracRes: 0.5950, norm(attn): 0.1709, norm(output): 0.2559, norm(x): 0.6116, norm(y): 0.9859, norm:0.7692, tok/sec: 102068.97, flops:89.38, batch-reuse:1
@ 11669 train 3.8680 , allloss: 3.8792, dt: 1283.67ms, fracRes: 0.5956, norm(attn): 0.1699, norm(output): 0.2559, norm(x): 0.6117, norm(y): 0.9860, norm:0.9453, tok/sec: 102107.57, flops:89.41, batch-reuse:1
@ 11670 train 3.8098 , allloss: 3.8207, dt: 1283.63ms, fracRes: 0.5963, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6101, norm(y): 0.9861, norm:0.9546, tok/sec: 102110.71, flops:89.42, batch-reuse:1
@ 11671 train 3.8194 , allloss: 3.8304, dt: 1261.96ms, fracRes: 0.5979, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6086, norm(y): 0.9860, norm:0.7561, tok/sec: 103863.59, flops:90.95, batch-reuse:1
@ 11672 train 3.8964 , allloss: 3.9075, dt: 1262.98ms, fracRes: 0.5961, norm(attn): 0.1729, norm(output): 0.2598, norm(x): 0.6125, norm(y): 0.9857, norm:1.2208, tok/sec: 103779.56, flops:90.88, batch-reuse:1
@ 11673 train 3.9495 , allloss: 3.9608, dt: 1263.48ms, fracRes: 0.5973, norm(attn): 0.1709, norm(output): 0.2559, norm(x): 0.6113, norm(y): 0.9857, norm:1.0248, tok/sec: 103739.02, flops:90.84, batch-reuse:1
@ 11674 train 3.9082 , allloss: 3.9193, dt: 1286.70ms, fracRes: 0.5977, norm(attn): 0.1699, norm(output): 0.2559, norm(x): 0.6115, norm(y): 0.9859, norm:0.8714, tok/sec: 101866.87, flops:89.20, batch-reuse:1
@ 11675 train 3.8379 , allloss: 3.8492, dt: 1267.05ms, fracRes: 0.5981, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6167, norm(y): 0.9861, norm:0.9198, tok/sec: 103447.00, flops:90.59, batch-reuse:1
@ 11676 train 3.7308 , allloss: 3.7427, dt: 1251.77ms, fracRes: 0.5987, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6243, norm(y): 0.9863, norm:1.0487, tok/sec: 104709.59, flops:91.69, batch-reuse:1
@ 11677 train 3.8491 , allloss: 3.8616, dt: 1269.86ms, fracRes: 0.5975, norm(attn): 0.1689, norm(output): 0.2598, norm(x): 0.6258, norm(y): 0.9863, norm:0.9467, tok/sec: 103217.66, flops:90.39, batch-reuse:1
@ 11678 train 3.8877 , allloss: 3.8989, dt: 1254.85ms, fracRes: 0.5955, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6152, norm(y): 0.9860, norm:0.8691, tok/sec: 104452.07, flops:91.47, batch-reuse:1
@ 11679 train 3.8300 , allloss: 3.8412, dt: 1243.71ms, fracRes: 0.5963, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6192, norm(y): 0.9862, norm:0.8543, tok/sec: 105387.87, flops:92.29, batch-reuse:1
@ 11680 train 3.8297 , allloss: 3.8407, dt: 1281.47ms, fracRes: 0.5960, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6209, norm(y): 0.9860, norm:0.8304, tok/sec: 102282.74, flops:89.57, batch-reuse:1
@ 11681 train 3.8481 , allloss: 3.8588, dt: 1292.68ms, fracRes: 0.5967, norm(attn): 0.1689, norm(output): 0.2617, norm(x): 0.6184, norm(y): 0.9861, norm:0.7897, tok/sec: 101395.70, flops:88.79, batch-reuse:1
@ 11682 train 3.8570 , allloss: 3.8678, dt: 1266.93ms, fracRes: 0.5966, norm(attn): 0.1689, norm(output): 0.2598, norm(x): 0.6191, norm(y): 0.9860, norm:0.8715, tok/sec: 103456.67, flops:90.60, batch-reuse:1
@ 11683 train 3.8822 , allloss: 3.8992, dt: 1274.84ms, fracRes: 0.5969, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6163, norm(y): 0.9862, norm:0.8044, tok/sec: 102814.73, flops:90.03, batch-reuse:1
@ 11684 train 3.8464 , allloss: 3.8575, dt: 1284.04ms, fracRes: 0.5962, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6188, norm(y): 0.9858, norm:0.7995, tok/sec: 102077.86, flops:89.39, batch-reuse:1
@ 11685 train 4.0360 , allloss: 4.0475, dt: 1281.75ms, fracRes: 0.5971, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6202, norm(y): 0.9857, norm:1.0208, tok/sec: 102260.40, flops:89.55, batch-reuse:1
@ 11686 train 4.0462 , allloss: 4.0573, dt: 1265.90ms, fracRes: 0.5985, norm(attn): 0.1660, norm(output): 0.2539, norm(x): 0.6142, norm(y): 0.9854, norm:1.0783, tok/sec: 103540.32, flops:90.67, batch-reuse:1
@ 11687 train 3.8441 , allloss: 3.8550, dt: 1264.31ms, fracRes: 0.5977, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6177, norm(y): 0.9860, norm:0.9756, tok/sec: 103671.06, flops:90.78, batch-reuse:1
@ 11688 train 3.8182 , allloss: 3.8293, dt: 1283.69ms, fracRes: 0.5977, norm(attn): 0.1699, norm(output): 0.2559, norm(x): 0.6178, norm(y): 0.9861, norm:1.0479, tok/sec: 102105.82, flops:89.41, batch-reuse:1
@ 11689 train 3.9497 , allloss: 3.9610, dt: 1301.71ms, fracRes: 0.5977, norm(attn): 0.1689, norm(output): 0.2578, norm(x): 0.6221, norm(y): 0.9860, norm:0.8542, tok/sec: 100692.16, flops:88.17, batch-reuse:1
@ 11690 train 3.8423 , allloss: 3.8545, dt: 1261.91ms, fracRes: 0.5974, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6191, norm(y): 0.9860, norm:0.9176, tok/sec: 103867.85, flops:90.96, batch-reuse:1
@ 11691 train 3.8797 , allloss: 3.8909, dt: 1283.75ms, fracRes: 0.5969, norm(attn): 0.1670, norm(output): 0.2559, norm(x): 0.6177, norm(y): 0.9858, norm:0.8559, tok/sec: 102100.53, flops:89.41, batch-reuse:1
@ 11692 train 3.8592 , allloss: 3.8702, dt: 1274.46ms, fracRes: 0.5960, norm(attn): 0.1689, norm(output): 0.2578, norm(x): 0.6159, norm(y): 0.9859, norm:0.7102, tok/sec: 102844.75, flops:90.06, batch-reuse:1
@ 11693 train 3.8724 , allloss: 3.8889, dt: 1276.03ms, fracRes: 0.5956, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6200, norm(y): 0.9857, norm:0.8395, tok/sec: 102718.56, flops:89.95, batch-reuse:1
@ 11694 train 3.8794 , allloss: 3.8905, dt: 1289.11ms, fracRes: 0.5955, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6169, norm(y): 0.9858, norm:0.8624, tok/sec: 101676.64, flops:89.04, batch-reuse:1
@ 11695 train 3.8577 , allloss: 3.8693, dt: 1286.29ms, fracRes: 0.5966, norm(attn): 0.1689, norm(output): 0.2578, norm(x): 0.6196, norm(y): 0.9857, norm:0.7933, tok/sec: 101899.46, flops:89.23, batch-reuse:1
@ 11696 train 3.8042 , allloss: 3.8161, dt: 1288.70ms, fracRes: 0.5970, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6198, norm(y): 0.9860, norm:0.9494, tok/sec: 101708.82, flops:89.06, batch-reuse:1
@ 11697 train 3.9064 , allloss: 3.9184, dt: 1270.22ms, fracRes: 0.5981, norm(attn): 0.1689, norm(output): 0.2598, norm(x): 0.6229, norm(y): 0.9860, norm:0.8139, tok/sec: 103188.56, flops:90.36, batch-reuse:1
@ 11698 train 3.8815 , allloss: 3.8926, dt: 1249.49ms, fracRes: 0.5982, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6179, norm(y): 0.9859, norm:0.7674, tok/sec: 104900.12, flops:91.86, batch-reuse:1
@ 11699 train 3.8251 , allloss: 3.8362, dt: 1250.27ms, fracRes: 0.5980, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6208, norm(y): 0.9859, norm:0.9374, tok/sec: 104835.20, flops:91.80, batch-reuse:1
@ 11700 train 3.8611 , allloss: 3.8725, dt: 1257.85ms, fracRes: 0.5971, norm(attn): 0.1689, norm(output): 0.2578, norm(x): 0.6187, norm(y): 0.9856, norm:0.7996, tok/sec: 104203.39, flops:91.25, batch-reuse:1
@ 11701 train 3.7813 , allloss: 3.7933, dt: 1283.25ms, fracRes: 0.5971, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6181, norm(y): 0.9859, norm:0.8626, tok/sec: 102141.05, flops:89.44, batch-reuse:1
@ 11702 train 3.8458 , allloss: 3.8575, dt: 1282.31ms, fracRes: 0.5968, norm(attn): 0.1699, norm(output): 0.2539, norm(x): 0.6166, norm(y): 0.9857, norm:0.8434, tok/sec: 102215.59, flops:89.51, batch-reuse:1
@ 11703 train 3.8380 , allloss: 3.8494, dt: 1271.21ms, fracRes: 0.5974, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6136, norm(y): 0.9858, norm:0.8253, tok/sec: 103108.05, flops:90.29, batch-reuse:1
@ 11704 train 3.5505 , allloss: 3.5630, dt: 1270.93ms, fracRes: 0.5979, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6231, norm(y): 0.9861, norm:1.0823, tok/sec: 103130.60, flops:90.31, batch-reuse:1
@ 11705 train 3.8461 , allloss: 3.8586, dt: 1270.08ms, fracRes: 0.5979, norm(attn): 0.1689, norm(output): 0.2578, norm(x): 0.6194, norm(y): 0.9854, norm:0.9514, tok/sec: 103200.08, flops:90.37, batch-reuse:1
@ 11706 train 3.8073 , allloss: 3.8183, dt: 1264.36ms, fracRes: 0.5961, norm(attn): 0.1699, norm(output): 0.2559, norm(x): 0.6118, norm(y): 0.9857, norm:0.8735, tok/sec: 103666.88, flops:90.78, batch-reuse:1
@ 11707 train 4.0208 , allloss: 4.0323, dt: 1274.54ms, fracRes: 0.5958, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6136, norm(y): 0.9855, norm:0.8935, tok/sec: 102838.39, flops:90.05, batch-reuse:1
@ 11708 train 3.8471 , allloss: 3.8592, dt: 1261.06ms, fracRes: 0.5963, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6191, norm(y): 0.9856, norm:0.9013, tok/sec: 103937.94, flops:91.02, batch-reuse:1
@ 11709 train 3.8114 , allloss: 3.8227, dt: 1270.80ms, fracRes: 0.5971, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6201, norm(y): 0.9855, norm:0.8699, tok/sec: 103141.73, flops:90.32, batch-reuse:1
@ 11710 train 3.8735 , allloss: 3.8847, dt: 1287.89ms, fracRes: 0.5966, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6199, norm(y): 0.9855, norm:0.8007, tok/sec: 101772.90, flops:89.12, batch-reuse:1
@ 11711 train 3.7489 , allloss: 3.7608, dt: 1264.94ms, fracRes: 0.5964, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6209, norm(y): 0.9861, norm:0.7980, tok/sec: 103619.30, flops:90.74, batch-reuse:1
@ 11712 train 3.7743 , allloss: 3.7856, dt: 1283.17ms, fracRes: 0.5967, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6224, norm(y): 0.9861, norm:0.8088, tok/sec: 102146.80, flops:89.45, batch-reuse:1
@ 11713 train 3.7567 , allloss: 3.7681, dt: 1263.72ms, fracRes: 0.5964, norm(attn): 0.1689, norm(output): 0.2578, norm(x): 0.6226, norm(y): 0.9860, norm:0.7441, tok/sec: 103719.39, flops:90.83, batch-reuse:1
@ 11714 train 3.6893 , allloss: 3.7011, dt: 1305.29ms, fracRes: 0.5964, norm(attn): 0.1689, norm(output): 0.2578, norm(x): 0.6232, norm(y): 0.9859, norm:0.7992, tok/sec: 100416.28, flops:87.93, batch-reuse:1
@ 11715 train 3.8164 , allloss: 3.8278, dt: 1292.60ms, fracRes: 0.5957, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6187, norm(y): 0.9858, norm:0.8200, tok/sec: 101401.66, flops:88.80, batch-reuse:1
@ 11716 train 3.6913 , allloss: 3.7024, dt: 1274.30ms, fracRes: 0.5960, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6152, norm(y): 0.9859, norm:0.7659, tok/sec: 102858.09, flops:90.07, batch-reuse:1
@ 11717 train 3.8016 , allloss: 3.8129, dt: 1279.35ms, fracRes: 0.5968, norm(attn): 0.1699, norm(output): 0.2559, norm(x): 0.6173, norm(y): 0.9859, norm:0.8508, tok/sec: 102452.35, flops:89.72, batch-reuse:1
@ 11718 train 3.7838 , allloss: 3.7949, dt: 1263.46ms, fracRes: 0.5974, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6176, norm(y): 0.9863, norm:0.9367, tok/sec: 103740.72, flops:90.84, batch-reuse:1
@ 11719 train 3.7510 , allloss: 3.7628, dt: 1271.52ms, fracRes: 0.5975, norm(attn): 0.1689, norm(output): 0.2617, norm(x): 0.6234, norm(y): 0.9861, norm:0.9176, tok/sec: 103082.58, flops:90.27, batch-reuse:1
@ 11720 train 3.6610 , allloss: 3.6725, dt: 1275.70ms, fracRes: 0.5970, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6167, norm(y): 0.9858, norm:0.8845, tok/sec: 102745.13, flops:89.97, batch-reuse:1
@ 11721 train 3.6590 , allloss: 3.6703, dt: 1265.48ms, fracRes: 0.5966, norm(attn): 0.1709, norm(output): 0.2539, norm(x): 0.6141, norm(y): 0.9859, norm:1.0024, tok/sec: 103575.26, flops:90.70, batch-reuse:1
@ 11722 train 3.7226 , allloss: 3.7336, dt: 1262.42ms, fracRes: 0.5953, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6140, norm(y): 0.9857, norm:0.8325, tok/sec: 103825.68, flops:90.92, batch-reuse:1
@ 11723 train 3.6266 , allloss: 3.6380, dt: 1250.14ms, fracRes: 0.5954, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6168, norm(y): 0.9860, norm:0.8286, tok/sec: 104845.88, flops:91.81, batch-reuse:1
@ 11724 train 3.7219 , allloss: 3.7331, dt: 1241.99ms, fracRes: 0.5960, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6191, norm(y): 0.9856, norm:0.9879, tok/sec: 105533.67, flops:92.41, batch-reuse:1
@ 11725 train 3.6832 , allloss: 3.6948, dt: 1288.30ms, fracRes: 0.5962, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6178, norm(y): 0.9859, norm:0.9208, tok/sec: 101740.54, flops:89.09, batch-reuse:1
@ 11726 train 3.6369 , allloss: 3.6478, dt: 1275.27ms, fracRes: 0.5963, norm(attn): 0.1709, norm(output): 0.2559, norm(x): 0.6131, norm(y): 0.9858, norm:0.7718, tok/sec: 102780.09, flops:90.00, batch-reuse:1
@ 11727 train 3.6706 , allloss: 3.6818, dt: 1272.58ms, fracRes: 0.5964, norm(attn): 0.1719, norm(output): 0.2578, norm(x): 0.6152, norm(y): 0.9857, norm:0.8851, tok/sec: 102997.15, flops:90.19, batch-reuse:1
@ 11728 train 3.6688 , allloss: 3.6801, dt: 1278.95ms, fracRes: 0.5967, norm(attn): 0.1709, norm(output): 0.2539, norm(x): 0.6130, norm(y): 0.9857, norm:0.7834, tok/sec: 102483.98, flops:89.74, batch-reuse:1
@ 11729 train 3.5942 , allloss: 3.6059, dt: 1258.42ms, fracRes: 0.5969, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6176, norm(y): 0.9856, norm:0.8393, tok/sec: 104155.61, flops:91.21, batch-reuse:1
@ 11730 train 3.6765 , allloss: 3.6874, dt: 1271.74ms, fracRes: 0.5968, norm(attn): 0.1689, norm(output): 0.2539, norm(x): 0.6147, norm(y): 0.9856, norm:0.7376, tok/sec: 103065.11, flops:90.25, batch-reuse:1
@ 11731 train 3.7287 , allloss: 3.7395, dt: 1264.60ms, fracRes: 0.5964, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6149, norm(y): 0.9856, norm:0.8407, tok/sec: 103646.63, flops:90.76, batch-reuse:1
@ 11732 train 3.6614 , allloss: 3.6732, dt: 1275.80ms, fracRes: 0.5965, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6203, norm(y): 0.9856, norm:0.9752, tok/sec: 102737.01, flops:89.97, batch-reuse:1
@ 11733 train 3.6789 , allloss: 3.6900, dt: 1258.82ms, fracRes: 0.5967, norm(attn): 0.1709, norm(output): 0.2559, norm(x): 0.6127, norm(y): 0.9857, norm:0.8515, tok/sec: 104122.69, flops:91.18, batch-reuse:1
@ 11734 train 3.8107 , allloss: 3.8218, dt: 1272.28ms, fracRes: 0.5962, norm(attn): 0.1689, norm(output): 0.2598, norm(x): 0.6132, norm(y): 0.9856, norm:0.7391, tok/sec: 103021.54, flops:90.21, batch-reuse:1
@ 11735 train 3.6382 , allloss: 3.6492, dt: 1264.64ms, fracRes: 0.5961, norm(attn): 0.1699, norm(output): 0.2559, norm(x): 0.6151, norm(y): 0.9858, norm:0.9152, tok/sec: 103643.87, flops:90.76, batch-reuse:1
@ 11736 train 3.6811 , allloss: 3.6919, dt: 1259.56ms, fracRes: 0.5965, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6192, norm(y): 0.9857, norm:0.8532, tok/sec: 104061.86, flops:91.13, batch-reuse:1
@ 11737 train 3.6861 , allloss: 3.6981, dt: 1272.27ms, fracRes: 0.5971, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6276, norm(y): 0.9856, norm:0.7948, tok/sec: 103021.79, flops:90.21, batch-reuse:1
@ 11738 train 3.7008 , allloss: 3.7118, dt: 1272.59ms, fracRes: 0.5968, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6213, norm(y): 0.9857, norm:0.7425, tok/sec: 102996.01, flops:90.19, batch-reuse:1
@ 11739 train 3.6870 , allloss: 3.6982, dt: 1267.74ms, fracRes: 0.5954, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6221, norm(y): 0.9855, norm:0.7494, tok/sec: 103390.40, flops:90.54, batch-reuse:1
@ 11740 train 3.6627 , allloss: 3.6738, dt: 1282.42ms, fracRes: 0.5951, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6165, norm(y): 0.9859, norm:0.7715, tok/sec: 102206.73, flops:89.50, batch-reuse:1
@ 11741 train 3.7383 , allloss: 3.7494, dt: 1257.26ms, fracRes: 0.5944, norm(attn): 0.1729, norm(output): 0.2617, norm(x): 0.6221, norm(y): 0.9856, norm:1.2755, tok/sec: 104252.49, flops:91.29, batch-reuse:1
@ 11742 train 3.6806 , allloss: 3.6916, dt: 1284.93ms, fracRes: 0.5965, norm(attn): 0.1709, norm(output): 0.2559, norm(x): 0.6138, norm(y): 0.9857, norm:0.8950, tok/sec: 102006.72, flops:89.33, batch-reuse:1
@ 11743 train 3.7293 , allloss: 3.7401, dt: 1286.42ms, fracRes: 0.5970, norm(attn): 0.1709, norm(output): 0.2539, norm(x): 0.6150, norm(y): 0.9856, norm:0.8034, tok/sec: 101889.01, flops:89.22, batch-reuse:1
@ 11744 train 3.6997 , allloss: 3.7103, dt: 1295.31ms, fracRes: 0.5968, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6128, norm(y): 0.9855, norm:0.8916, tok/sec: 101189.68, flops:88.61, batch-reuse:1
@ 11745 train 3.7272 , allloss: 3.7382, dt: 1309.53ms, fracRes: 0.5960, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6159, norm(y): 0.9855, norm:0.8603, tok/sec: 100091.14, flops:87.65, batch-reuse:1
@ 11746 train 3.7212 , allloss: 3.7321, dt: 1300.54ms, fracRes: 0.5964, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6119, norm(y): 0.9856, norm:0.7684, tok/sec: 100782.42, flops:88.25, batch-reuse:1
@ 11747 train 3.7006 , allloss: 3.7114, dt: 1301.32ms, fracRes: 0.5967, norm(attn): 0.1709, norm(output): 0.2559, norm(x): 0.6121, norm(y): 0.9855, norm:0.9217, tok/sec: 100722.73, flops:88.20, batch-reuse:1
@ 11748 train 3.6129 , allloss: 3.6238, dt: 1303.46ms, fracRes: 0.5962, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6129, norm(y): 0.9854, norm:0.8275, tok/sec: 100557.28, flops:88.06, batch-reuse:1
@ 11749 train 3.5808 , allloss: 3.5918, dt: 1258.57ms, fracRes: 0.5967, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6136, norm(y): 0.9856, norm:0.7663, tok/sec: 104143.63, flops:91.20, batch-reuse:1
@ 11750 train 3.7791 , allloss: 3.7902, dt: 1258.80ms, fracRes: 0.5971, norm(attn): 0.1689, norm(output): 0.2539, norm(x): 0.6128, norm(y): 0.9855, norm:0.9603, tok/sec: 104124.32, flops:91.18, batch-reuse:1
@ 11751 train 3.6176 , allloss: 3.6289, dt: 1282.56ms, fracRes: 0.5970, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6148, norm(y): 0.9856, norm:0.8391, tok/sec: 102195.79, flops:89.49, batch-reuse:1
@ 11752 train 3.6780 , allloss: 3.6897, dt: 1306.33ms, fracRes: 0.5969, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6174, norm(y): 0.9856, norm:1.0184, tok/sec: 100336.13, flops:87.86, batch-reuse:1
@ 11753 train 3.6902 , allloss: 3.7010, dt: 1256.44ms, fracRes: 0.5974, norm(attn): 0.1689, norm(output): 0.2539, norm(x): 0.6146, norm(y): 0.9856, norm:0.9683, tok/sec: 104320.23, flops:91.35, batch-reuse:1
@ 11754 train 3.7891 , allloss: 3.7998, dt: 1273.94ms, fracRes: 0.5966, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6152, norm(y): 0.9855, norm:0.7267, tok/sec: 102886.89, flops:90.10, batch-reuse:1
@ 11755 train 3.7230 , allloss: 3.7341, dt: 1304.70ms, fracRes: 0.5963, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6167, norm(y): 0.9856, norm:0.9854, tok/sec: 100461.09, flops:87.97, batch-reuse:1
@ 11756 train 3.7862 , allloss: 3.7974, dt: 1257.37ms, fracRes: 0.5966, norm(attn): 0.1689, norm(output): 0.2578, norm(x): 0.6173, norm(y): 0.9854, norm:1.0511, tok/sec: 104243.12, flops:91.28, batch-reuse:1
@ 11757 train 3.7147 , allloss: 3.7260, dt: 1271.03ms, fracRes: 0.5969, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6150, norm(y): 0.9857, norm:0.8429, tok/sec: 103122.90, flops:90.30, batch-reuse:1
@ 11758 train 3.7177 , allloss: 3.7286, dt: 1279.73ms, fracRes: 0.5974, norm(attn): 0.1699, norm(output): 0.2559, norm(x): 0.6141, norm(y): 0.9857, norm:0.8939, tok/sec: 102421.90, flops:89.69, batch-reuse:1
@ 11759 train 3.8579 , allloss: 3.8689, dt: 1269.89ms, fracRes: 0.5970, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6187, norm(y): 0.9854, norm:0.8182, tok/sec: 103215.04, flops:90.38, batch-reuse:1
@ 11760 train 3.9017 , allloss: 3.9139, dt: 1287.26ms, fracRes: 0.5966, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6189, norm(y): 0.9852, norm:1.1135, tok/sec: 101822.28, flops:89.16, batch-reuse:1
@ 11761 train 3.9690 , allloss: 3.9804, dt: 1260.22ms, fracRes: 0.5956, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6164, norm(y): 0.9853, norm:0.8482, tok/sec: 104007.27, flops:91.08, batch-reuse:1
@ 11762 train 4.0360 , allloss: 4.0473, dt: 1268.81ms, fracRes: 0.5952, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6151, norm(y): 0.9852, norm:0.8608, tok/sec: 103302.84, flops:90.46, batch-reuse:1
@ 11763 train 3.9254 , allloss: 3.9371, dt: 1260.50ms, fracRes: 0.5961, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6167, norm(y): 0.9853, norm:0.8534, tok/sec: 103984.43, flops:91.06, batch-reuse:1
@ 11764 train 4.0076 , allloss: 4.0192, dt: 1265.04ms, fracRes: 0.5951, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6148, norm(y): 0.9850, norm:0.8613, tok/sec: 103611.21, flops:90.73, batch-reuse:1
@ 11765 train 3.8920 , allloss: 3.9033, dt: 1265.21ms, fracRes: 0.5957, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6160, norm(y): 0.9854, norm:0.9634, tok/sec: 103597.33, flops:90.72, batch-reuse:1
@ 11766 train 3.8296 , allloss: 3.8411, dt: 1288.77ms, fracRes: 0.5957, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6155, norm(y): 0.9852, norm:0.7640, tok/sec: 101703.23, flops:89.06, batch-reuse:1
@ 11767 train 3.9204 , allloss: 3.9320, dt: 1269.99ms, fracRes: 0.5959, norm(attn): 0.1699, norm(output): 0.2617, norm(x): 0.6165, norm(y): 0.9850, norm:0.8539, tok/sec: 103207.25, flops:90.38, batch-reuse:1
@ 11768 train 4.0922 , allloss: 4.1035, dt: 1278.80ms, fracRes: 0.5958, norm(attn): 0.1689, norm(output): 0.2617, norm(x): 0.6160, norm(y): 0.9849, norm:0.8201, tok/sec: 102496.13, flops:89.75, batch-reuse:1
@ 11769 train 3.9641 , allloss: 3.9748, dt: 1273.16ms, fracRes: 0.5967, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6153, norm(y): 0.9851, norm:0.7861, tok/sec: 102950.35, flops:90.15, batch-reuse:1
@ 11770 train 3.8528 , allloss: 3.8641, dt: 1280.39ms, fracRes: 0.5965, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6207, norm(y): 0.9851, norm:0.7720, tok/sec: 102369.13, flops:89.64, batch-reuse:1
@ 11771 train 3.9216 , allloss: 3.9331, dt: 1277.80ms, fracRes: 0.5964, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6168, norm(y): 0.9852, norm:0.8172, tok/sec: 102576.12, flops:89.82, batch-reuse:1
@ 11772 train 3.8823 , allloss: 3.8935, dt: 1260.09ms, fracRes: 0.5967, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6166, norm(y): 0.9854, norm:0.8140, tok/sec: 104017.82, flops:91.09, batch-reuse:1
@ 11773 train 3.9354 , allloss: 3.9465, dt: 1266.71ms, fracRes: 0.5962, norm(attn): 0.1699, norm(output): 0.2617, norm(x): 0.6155, norm(y): 0.9848, norm:0.8006, tok/sec: 103474.72, flops:90.61, batch-reuse:1
@ 11774 train 3.8720 , allloss: 3.8831, dt: 1289.69ms, fracRes: 0.5968, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6133, norm(y): 0.9853, norm:0.7577, tok/sec: 101630.92, flops:89.00, batch-reuse:1
@ 11775 train 3.9475 , allloss: 3.9591, dt: 1275.58ms, fracRes: 0.5964, norm(attn): 0.1689, norm(output): 0.2578, norm(x): 0.6125, norm(y): 0.9849, norm:0.8165, tok/sec: 102754.81, flops:89.98, batch-reuse:1
@ 11776 train 3.8243 , allloss: 3.8359, dt: 1286.21ms, fracRes: 0.5959, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6138, norm(y): 0.9851, norm:0.7491, tok/sec: 101905.84, flops:89.24, batch-reuse:1
@ 11777 train 3.8894 , allloss: 3.9008, dt: 1263.53ms, fracRes: 0.5956, norm(attn): 0.1699, norm(output): 0.2559, norm(x): 0.6103, norm(y): 0.9850, norm:0.7014, tok/sec: 103734.68, flops:90.84, batch-reuse:1
@ 11778 train 4.0353 , allloss: 4.0465, dt: 1273.86ms, fracRes: 0.5949, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6132, norm(y): 0.9848, norm:0.8381, tok/sec: 102893.49, flops:90.10, batch-reuse:1
@ 11779 train 3.9398 , allloss: 3.9507, dt: 1280.97ms, fracRes: 0.5968, norm(attn): 0.1680, norm(output): 0.2598, norm(x): 0.6166, norm(y): 0.9851, norm:0.8872, tok/sec: 102322.47, flops:89.60, batch-reuse:1
@ 11780 train 3.9427 , allloss: 3.9542, dt: 1258.18ms, fracRes: 0.5957, norm(attn): 0.1699, norm(output): 0.2617, norm(x): 0.6181, norm(y): 0.9850, norm:0.8649, tok/sec: 104175.53, flops:91.23, batch-reuse:1
@ 11781 train 3.9172 , allloss: 3.9285, dt: 1259.75ms, fracRes: 0.5962, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6194, norm(y): 0.9850, norm:0.8032, tok/sec: 104045.91, flops:91.11, batch-reuse:1
@ 11782 train 3.9195 , allloss: 3.9303, dt: 1262.22ms, fracRes: 0.5962, norm(attn): 0.1699, norm(output): 0.2637, norm(x): 0.6200, norm(y): 0.9847, norm:0.7597, tok/sec: 103842.39, flops:90.93, batch-reuse:1
@ 11783 train 3.9309 , allloss: 3.9418, dt: 1264.24ms, fracRes: 0.5960, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6216, norm(y): 0.9850, norm:0.8559, tok/sec: 103676.34, flops:90.79, batch-reuse:1
@ 11784 train 3.8961 , allloss: 3.9071, dt: 1300.60ms, fracRes: 0.5957, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6203, norm(y): 0.9851, norm:0.7621, tok/sec: 100778.04, flops:88.25, batch-reuse:1
@ 11785 train 4.0455 , allloss: 4.0563, dt: 1319.53ms, fracRes: 0.5959, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6144, norm(y): 0.9850, norm:0.7875, tok/sec: 99332.25, flops:86.98, batch-reuse:1
@ 11786 train 3.8147 , allloss: 3.8259, dt: 1273.33ms, fracRes: 0.5952, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6162, norm(y): 0.9850, norm:0.9535, tok/sec: 102936.74, flops:90.14, batch-reuse:1
@ 11787 train 3.9931 , allloss: 4.0046, dt: 1264.82ms, fracRes: 0.5949, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6156, norm(y): 0.9850, norm:0.9014, tok/sec: 103629.06, flops:90.75, batch-reuse:1
@ 11788 train 3.9772 , allloss: 3.9886, dt: 1269.31ms, fracRes: 0.5963, norm(attn): 0.1689, norm(output): 0.2578, norm(x): 0.6162, norm(y): 0.9854, norm:0.8454, tok/sec: 103262.29, flops:90.43, batch-reuse:1
@ 11789 train 3.9662 , allloss: 3.9774, dt: 1255.76ms, fracRes: 0.5967, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6123, norm(y): 0.9853, norm:0.9800, tok/sec: 104376.87, flops:91.40, batch-reuse:1
@ 11790 train 3.9543 , allloss: 3.9654, dt: 1281.84ms, fracRes: 0.5971, norm(attn): 0.1689, norm(output): 0.2539, norm(x): 0.6108, norm(y): 0.9853, norm:0.9151, tok/sec: 102252.95, flops:89.54, batch-reuse:1
@ 11791 train 3.8755 , allloss: 3.8868, dt: 1280.48ms, fracRes: 0.5977, norm(attn): 0.1699, norm(output): 0.2559, norm(x): 0.6113, norm(y): 0.9853, norm:0.8147, tok/sec: 102361.22, flops:89.64, batch-reuse:1
@ 11792 train 3.8208 , allloss: 3.8319, dt: 1254.87ms, fracRes: 0.5972, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6153, norm(y): 0.9852, norm:0.8163, tok/sec: 104450.76, flops:91.47, batch-reuse:1
@ 11793 train 3.8589 , allloss: 3.8699, dt: 1268.09ms, fracRes: 0.5972, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6155, norm(y): 0.9855, norm:0.8662, tok/sec: 103361.59, flops:90.51, batch-reuse:1
@ 11794 train 3.9842 , allloss: 3.9956, dt: 1277.16ms, fracRes: 0.5960, norm(attn): 0.1699, norm(output): 0.2617, norm(x): 0.6166, norm(y): 0.9848, norm:0.7796, tok/sec: 102627.60, flops:89.87, batch-reuse:1
@ 11795 train 3.9212 , allloss: 3.9327, dt: 1265.84ms, fracRes: 0.5957, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6188, norm(y): 0.9847, norm:0.8569, tok/sec: 103545.41, flops:90.67, batch-reuse:1
@ 11796 train 3.9498 , allloss: 3.9616, dt: 1264.94ms, fracRes: 0.5964, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6174, norm(y): 0.9850, norm:0.7982, tok/sec: 103619.32, flops:90.74, batch-reuse:1
@ 11797 train 3.8601 , allloss: 3.8716, dt: 1257.25ms, fracRes: 0.5956, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6148, norm(y): 0.9849, norm:0.7899, tok/sec: 104253.32, flops:91.29, batch-reuse:1
@ 11798 train 3.8639 , allloss: 3.8755, dt: 1275.41ms, fracRes: 0.5952, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6127, norm(y): 0.9850, norm:0.9484, tok/sec: 102768.66, flops:89.99, batch-reuse:1
@ 11799 train 3.9465 , allloss: 3.9579, dt: 1257.11ms, fracRes: 0.5958, norm(attn): 0.1699, norm(output): 0.2559, norm(x): 0.6113, norm(y): 0.9849, norm:0.9130, tok/sec: 104264.65, flops:91.30, batch-reuse:1
@ 11800 train 4.0470 , allloss: 4.0581, dt: 1268.93ms, fracRes: 0.5957, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6109, norm(y): 0.9847, norm:0.7401, tok/sec: 103293.43, flops:90.45, batch-reuse:1
@ 11801 train 3.9020 , allloss: 3.9132, dt: 1289.14ms, fracRes: 0.5965, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6158, norm(y): 0.9849, norm:0.9491, tok/sec: 101673.65, flops:89.03, batch-reuse:1
@ 11802 train 3.9717 , allloss: 3.9829, dt: 1274.69ms, fracRes: 0.5980, norm(attn): 0.1689, norm(output): 0.2598, norm(x): 0.6184, norm(y): 0.9855, norm:0.9745, tok/sec: 102826.63, flops:90.04, batch-reuse:1
@ 11803 train 3.8664 , allloss: 3.8777, dt: 1263.90ms, fracRes: 0.5967, norm(attn): 0.1689, norm(output): 0.2578, norm(x): 0.6170, norm(y): 0.9851, norm:0.8060, tok/sec: 103704.19, flops:90.81, batch-reuse:1
@ 11804 train 3.9197 , allloss: 3.9309, dt: 1264.35ms, fracRes: 0.5965, norm(attn): 0.1689, norm(output): 0.2578, norm(x): 0.6146, norm(y): 0.9848, norm:0.7798, tok/sec: 103667.25, flops:90.78, batch-reuse:1
@ 11805 train 3.9908 , allloss: 4.0021, dt: 1286.77ms, fracRes: 0.5977, norm(attn): 0.1689, norm(output): 0.2539, norm(x): 0.6160, norm(y): 0.9850, norm:0.8226, tok/sec: 101861.01, flops:89.20, batch-reuse:1
@ 11806 train 3.8541 , allloss: 3.8650, dt: 1277.79ms, fracRes: 0.5966, norm(attn): 0.1709, norm(output): 0.2559, norm(x): 0.6154, norm(y): 0.9849, norm:0.7435, tok/sec: 102577.31, flops:89.83, batch-reuse:1
@ 11807 train 3.8760 , allloss: 3.8873, dt: 1276.90ms, fracRes: 0.5955, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6170, norm(y): 0.9851, norm:0.7950, tok/sec: 102648.73, flops:89.89, batch-reuse:1
@ 11808 train 3.8946 , allloss: 3.9056, dt: 1254.24ms, fracRes: 0.5943, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6132, norm(y): 0.9847, norm:0.7671, tok/sec: 104503.08, flops:91.51, batch-reuse:1
@ 11809 train 3.8276 , allloss: 3.8387, dt: 1293.08ms, fracRes: 0.5947, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6121, norm(y): 0.9848, norm:0.7334, tok/sec: 101363.92, flops:88.76, batch-reuse:1
@ 11810 train 3.9166 , allloss: 3.9278, dt: 1304.50ms, fracRes: 0.5962, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6131, norm(y): 0.9849, norm:0.8309, tok/sec: 100476.47, flops:87.99, batch-reuse:1
@ 11811 train 3.9133 , allloss: 3.9243, dt: 1307.21ms, fracRes: 0.5965, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6150, norm(y): 0.9848, norm:0.7909, tok/sec: 100268.51, flops:87.80, batch-reuse:1
@ 11812 train 3.9351 , allloss: 3.9460, dt: 1273.08ms, fracRes: 0.5957, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6148, norm(y): 0.9848, norm:0.7982, tok/sec: 102956.27, flops:90.16, batch-reuse:1
@ 11813 train 3.7856 , allloss: 3.7970, dt: 1274.85ms, fracRes: 0.5965, norm(attn): 0.1719, norm(output): 0.2578, norm(x): 0.6144, norm(y): 0.9850, norm:0.8299, tok/sec: 102813.83, flops:90.03, batch-reuse:1
@ 11814 train 3.9120 , allloss: 3.9227, dt: 1257.54ms, fracRes: 0.5961, norm(attn): 0.1709, norm(output): 0.2539, norm(x): 0.6092, norm(y): 0.9849, norm:0.7845, tok/sec: 104228.97, flops:91.27, batch-reuse:1
@ 11815 train 3.8858 , allloss: 3.8968, dt: 1258.77ms, fracRes: 0.5967, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6113, norm(y): 0.9850, norm:0.7502, tok/sec: 104126.93, flops:91.18, batch-reuse:1
@ 11816 train 3.8776 , allloss: 3.8884, dt: 1272.07ms, fracRes: 0.5962, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6136, norm(y): 0.9852, norm:0.7228, tok/sec: 103038.75, flops:90.23, batch-reuse:1
@ 11817 train 3.9380 , allloss: 3.9493, dt: 1293.11ms, fracRes: 0.5953, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6180, norm(y): 0.9850, norm:0.7824, tok/sec: 101361.58, flops:88.76, batch-reuse:1
@ 11818 train 3.9291 , allloss: 3.9400, dt: 1271.19ms, fracRes: 0.5951, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6187, norm(y): 0.9849, norm:0.7262, tok/sec: 103109.36, flops:90.29, batch-reuse:1
@ 11819 train 3.8000 , allloss: 3.8113, dt: 1273.38ms, fracRes: 0.5957, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6207, norm(y): 0.9848, norm:0.7950, tok/sec: 102932.39, flops:90.14, batch-reuse:1
@ 11820 train 3.8924 , allloss: 3.9033, dt: 1261.78ms, fracRes: 0.5948, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6178, norm(y): 0.9850, norm:0.7736, tok/sec: 103878.96, flops:90.97, batch-reuse:1
@ 11821 train 3.9007 , allloss: 3.9119, dt: 1254.62ms, fracRes: 0.5942, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6166, norm(y): 0.9848, norm:0.7680, tok/sec: 104471.31, flops:91.48, batch-reuse:1
@ 11822 train 3.9916 , allloss: 4.0024, dt: 1268.53ms, fracRes: 0.5948, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6141, norm(y): 0.9848, norm:0.7987, tok/sec: 103325.67, flops:90.48, batch-reuse:1
@ 11823 train 3.9120 , allloss: 3.9229, dt: 1273.50ms, fracRes: 0.5960, norm(attn): 0.1680, norm(output): 0.2578, norm(x): 0.6139, norm(y): 0.9849, norm:0.7385, tok/sec: 102922.91, flops:90.13, batch-reuse:1
@ 11824 train 3.9004 , allloss: 3.9115, dt: 1249.82ms, fracRes: 0.5960, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6130, norm(y): 0.9849, norm:0.7867, tok/sec: 104872.70, flops:91.84, batch-reuse:1
@ 11825 train 3.8734 , allloss: 3.8859, dt: 1249.13ms, fracRes: 0.5969, norm(attn): 0.1699, norm(output): 0.2559, norm(x): 0.6127, norm(y): 0.9850, norm:0.8137, tok/sec: 104931.05, flops:91.89, batch-reuse:1
@ 11826 train 3.8880 , allloss: 3.8991, dt: 1270.90ms, fracRes: 0.5964, norm(attn): 0.1699, norm(output): 0.2559, norm(x): 0.6064, norm(y): 0.9847, norm:0.7839, tok/sec: 103133.15, flops:90.31, batch-reuse:1
@ 11827 train 3.8287 , allloss: 3.8403, dt: 1270.34ms, fracRes: 0.5967, norm(attn): 0.1699, norm(output): 0.2559, norm(x): 0.6083, norm(y): 0.9851, norm:0.8141, tok/sec: 103178.27, flops:90.35, batch-reuse:1
@ 11828 train 3.7588 , allloss: 3.7703, dt: 1292.94ms, fracRes: 0.5963, norm(attn): 0.1689, norm(output): 0.2578, norm(x): 0.6119, norm(y): 0.9849, norm:0.7977, tok/sec: 101375.26, flops:88.77, batch-reuse:1
@ 11829 train 3.9798 , allloss: 3.9914, dt: 1293.84ms, fracRes: 0.5964, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6075, norm(y): 0.9847, norm:0.8339, tok/sec: 101304.50, flops:88.71, batch-reuse:1
@ 11830 train 3.9023 , allloss: 3.9136, dt: 1284.40ms, fracRes: 0.5957, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6075, norm(y): 0.9846, norm:0.7858, tok/sec: 102049.43, flops:89.36, batch-reuse:1
@ 11831 train 3.9229 , allloss: 3.9341, dt: 1269.90ms, fracRes: 0.5959, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6128, norm(y): 0.9847, norm:0.7928, tok/sec: 103214.77, flops:90.38, batch-reuse:1
@ 11832 train 3.8200 , allloss: 3.8309, dt: 1263.87ms, fracRes: 0.5965, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6159, norm(y): 0.9850, norm:0.7176, tok/sec: 103706.69, flops:90.81, batch-reuse:1
@ 11833 train 3.8458 , allloss: 3.8571, dt: 1266.70ms, fracRes: 0.5961, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6190, norm(y): 0.9848, norm:0.7754, tok/sec: 103475.46, flops:90.61, batch-reuse:1
@ 11834 train 3.9127 , allloss: 3.9241, dt: 1294.43ms, fracRes: 0.5957, norm(attn): 0.1689, norm(output): 0.2598, norm(x): 0.6167, norm(y): 0.9845, norm:0.7349, tok/sec: 101258.36, flops:88.67, batch-reuse:1
@ 11835 train 3.9498 , allloss: 3.9606, dt: 1281.22ms, fracRes: 0.5960, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6167, norm(y): 0.9844, norm:0.7794, tok/sec: 102302.50, flops:89.58, batch-reuse:1
@ 11836 train 3.8252 , allloss: 3.8366, dt: 1252.71ms, fracRes: 0.5967, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6164, norm(y): 0.9847, norm:0.7603, tok/sec: 104630.85, flops:91.62, batch-reuse:1
@ 11837 train 3.8819 , allloss: 3.8931, dt: 1264.51ms, fracRes: 0.5967, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6141, norm(y): 0.9847, norm:0.7839, tok/sec: 103654.52, flops:90.77, batch-reuse:1
@ 11838 train 3.9328 , allloss: 3.9437, dt: 1249.10ms, fracRes: 0.5971, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6115, norm(y): 0.9847, norm:0.7665, tok/sec: 104933.23, flops:91.89, batch-reuse:1
@ 11839 train 3.9174 , allloss: 3.9283, dt: 1268.54ms, fracRes: 0.5961, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6109, norm(y): 0.9845, norm:0.7862, tok/sec: 103325.42, flops:90.48, batch-reuse:1
@ 11840 train 3.9492 , allloss: 3.9605, dt: 1244.71ms, fracRes: 0.5963, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6086, norm(y): 0.9847, norm:0.7778, tok/sec: 105302.96, flops:92.21, batch-reuse:1
@ 11841 train 3.7383 , allloss: 3.7502, dt: 1271.67ms, fracRes: 0.5966, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6113, norm(y): 0.9850, norm:0.7905, tok/sec: 103070.54, flops:90.26, batch-reuse:1
@ 11842 train 3.9225 , allloss: 3.9336, dt: 1272.67ms, fracRes: 0.5955, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6077, norm(y): 0.9847, norm:0.8069, tok/sec: 102990.14, flops:90.19, batch-reuse:1
@ 11843 train 3.9684 , allloss: 3.9798, dt: 1263.97ms, fracRes: 0.5959, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6077, norm(y): 0.9844, norm:0.8273, tok/sec: 103698.54, flops:90.81, batch-reuse:1
@ 11844 train 3.9478 , allloss: 3.9587, dt: 1266.95ms, fracRes: 0.5961, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6083, norm(y): 0.9844, norm:0.8154, tok/sec: 103454.74, flops:90.59, batch-reuse:1
@ 11845 train 3.9862 , allloss: 3.9969, dt: 1272.13ms, fracRes: 0.5958, norm(attn): 0.1680, norm(output): 0.2559, norm(x): 0.6076, norm(y): 0.9845, norm:0.8511, tok/sec: 103033.34, flops:90.22, batch-reuse:1
@ 11846 train 3.8992 , allloss: 3.9100, dt: 1247.46ms, fracRes: 0.5946, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6090, norm(y): 0.9845, norm:0.8012, tok/sec: 105070.83, flops:92.01, batch-reuse:1
@ 11847 train 3.9015 , allloss: 3.9129, dt: 1273.01ms, fracRes: 0.5954, norm(attn): 0.1719, norm(output): 0.2578, norm(x): 0.6102, norm(y): 0.9851, norm:1.0730, tok/sec: 102962.58, flops:90.16, batch-reuse:1
@ 11848 train 3.9787 , allloss: 3.9936, dt: 1276.44ms, fracRes: 0.5948, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6123, norm(y): 0.9847, norm:1.1949, tok/sec: 102685.30, flops:89.92, batch-reuse:1
@ 11849 train 3.9438 , allloss: 3.9549, dt: 1258.76ms, fracRes: 0.5927, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6081, norm(y): 0.9843, norm:1.1404, tok/sec: 104128.05, flops:91.18, batch-reuse:1
@ 11850 train 4.0091 , allloss: 4.0203, dt: 1279.60ms, fracRes: 0.5940, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6124, norm(y): 0.9844, norm:0.8129, tok/sec: 102431.69, flops:89.70, batch-reuse:1
@ 11851 train 4.0039 , allloss: 4.0152, dt: 1263.95ms, fracRes: 0.5953, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6177, norm(y): 0.9846, norm:1.0630, tok/sec: 103700.16, flops:90.81, batch-reuse:1
@ 11852 train 3.8636 , allloss: 3.8743, dt: 1249.62ms, fracRes: 0.5964, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6173, norm(y): 0.9846, norm:0.8659, tok/sec: 104889.37, flops:91.85, batch-reuse:1
@ 11853 train 3.8569 , allloss: 3.8677, dt: 1262.16ms, fracRes: 0.5970, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6164, norm(y): 0.9847, norm:0.8833, tok/sec: 103847.66, flops:90.94, batch-reuse:1
@ 11854 train 3.7939 , allloss: 3.8053, dt: 1251.58ms, fracRes: 0.5968, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6222, norm(y): 0.9847, norm:1.0528, tok/sec: 104724.89, flops:91.71, batch-reuse:1
@ 11855 train 3.7639 , allloss: 3.7752, dt: 1254.78ms, fracRes: 0.5970, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6197, norm(y): 0.9850, norm:0.8432, tok/sec: 104457.93, flops:91.47, batch-reuse:1
@ 11856 train 3.8630 , allloss: 3.8740, dt: 1261.09ms, fracRes: 0.5962, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6186, norm(y): 0.9845, norm:0.8861, tok/sec: 103935.09, flops:91.01, batch-reuse:1
@ 11857 train 3.7631 , allloss: 3.7741, dt: 1274.59ms, fracRes: 0.5964, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6189, norm(y): 0.9845, norm:1.0150, tok/sec: 102834.85, flops:90.05, batch-reuse:1
@ 11858 train 3.7995 , allloss: 3.8103, dt: 1287.88ms, fracRes: 0.5963, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6190, norm(y): 0.9847, norm:0.9079, tok/sec: 101773.27, flops:89.12, batch-reuse:1
@ 11859 train 3.8206 , allloss: 3.8313, dt: 1283.61ms, fracRes: 0.5954, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6154, norm(y): 0.9846, norm:0.9063, tok/sec: 102112.04, flops:89.42, batch-reuse:1
@ 11860 train 3.8504 , allloss: 3.8616, dt: 1277.10ms, fracRes: 0.5954, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6156, norm(y): 0.9849, norm:0.9343, tok/sec: 102632.50, flops:89.87, batch-reuse:1
@ 11861 train 3.7427 , allloss: 3.7541, dt: 1287.13ms, fracRes: 0.5959, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6141, norm(y): 0.9851, norm:0.7687, tok/sec: 101832.51, flops:89.17, batch-reuse:1
@ 11862 train 3.8482 , allloss: 3.8602, dt: 1322.96ms, fracRes: 0.5974, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6156, norm(y): 0.9849, norm:0.8323, tok/sec: 99075.13, flops:86.76, batch-reuse:1
@ 11863 train 3.8921 , allloss: 3.9033, dt: 1323.77ms, fracRes: 0.5972, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6129, norm(y): 0.9846, norm:0.7526, tok/sec: 99014.07, flops:86.71, batch-reuse:1
@ 11864 train 3.8139 , allloss: 3.8248, dt: 1305.30ms, fracRes: 0.5961, norm(attn): 0.1719, norm(output): 0.2598, norm(x): 0.6096, norm(y): 0.9845, norm:0.8566, tok/sec: 100414.92, flops:87.93, batch-reuse:1
@ 11865 train 3.8403 , allloss: 3.8514, dt: 1299.94ms, fracRes: 0.5952, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6150, norm(y): 0.9847, norm:0.8433, tok/sec: 100829.24, flops:88.29, batch-reuse:1
@ 11866 train 3.7481 , allloss: 3.7593, dt: 1261.28ms, fracRes: 0.5943, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6165, norm(y): 0.9848, norm:0.7811, tok/sec: 103919.49, flops:91.00, batch-reuse:1
@ 11867 train 3.7942 , allloss: 3.8052, dt: 1265.66ms, fracRes: 0.5948, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6162, norm(y): 0.9848, norm:0.7273, tok/sec: 103560.08, flops:90.69, batch-reuse:1
@ 11868 train 3.8780 , allloss: 3.8890, dt: 1260.43ms, fracRes: 0.5953, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6185, norm(y): 0.9846, norm:0.7828, tok/sec: 103989.76, flops:91.06, batch-reuse:1
@ 11869 train 3.8346 , allloss: 3.8458, dt: 1251.80ms, fracRes: 0.5958, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6220, norm(y): 0.9847, norm:0.7593, tok/sec: 104706.78, flops:91.69, batch-reuse:1
@ 11870 train 3.8579 , allloss: 3.8686, dt: 1258.21ms, fracRes: 0.5963, norm(attn): 0.1699, norm(output): 0.2617, norm(x): 0.6175, norm(y): 0.9846, norm:0.8170, tok/sec: 104173.35, flops:91.22, batch-reuse:1
@ 11871 train 3.8200 , allloss: 3.8311, dt: 1271.16ms, fracRes: 0.5963, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6139, norm(y): 0.9849, norm:0.7626, tok/sec: 103111.88, flops:90.29, batch-reuse:1
@ 11872 train 3.7270 , allloss: 3.7389, dt: 1287.93ms, fracRes: 0.5968, norm(attn): 0.1719, norm(output): 0.2598, norm(x): 0.6185, norm(y): 0.9851, norm:0.7451, tok/sec: 101769.52, flops:89.12, batch-reuse:1
@ 11873 train 3.8182 , allloss: 3.8310, dt: 1280.73ms, fracRes: 0.5967, norm(attn): 0.1709, norm(output): 0.2559, norm(x): 0.6143, norm(y): 0.9850, norm:0.7901, tok/sec: 102341.75, flops:89.62, batch-reuse:1
@ 11874 train 3.8323 , allloss: 3.8431, dt: 1288.60ms, fracRes: 0.5963, norm(attn): 0.1699, norm(output): 0.2559, norm(x): 0.6109, norm(y): 0.9849, norm:0.7488, tok/sec: 101716.73, flops:89.07, batch-reuse:1
@ 11875 train 3.8731 , allloss: 3.8838, dt: 1274.99ms, fracRes: 0.5962, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6125, norm(y): 0.9848, norm:0.7623, tok/sec: 102802.37, flops:90.02, batch-reuse:1
@ 11876 train 3.8854 , allloss: 3.8966, dt: 1274.39ms, fracRes: 0.5959, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6166, norm(y): 0.9847, norm:0.9403, tok/sec: 102851.05, flops:90.07, batch-reuse:1
@ 11877 train 3.8542 , allloss: 3.8656, dt: 1282.50ms, fracRes: 0.5962, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6174, norm(y): 0.9845, norm:0.7667, tok/sec: 102200.20, flops:89.50, batch-reuse:1
@ 11878 train 3.7997 , allloss: 3.8102, dt: 1262.65ms, fracRes: 0.5953, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6113, norm(y): 0.9844, norm:0.8039, tok/sec: 103807.07, flops:90.90, batch-reuse:1
@ 11879 train 3.7450 , allloss: 3.7559, dt: 1270.00ms, fracRes: 0.5957, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6132, norm(y): 0.9843, norm:0.8012, tok/sec: 103206.49, flops:90.38, batch-reuse:1
@ 11880 train 3.7764 , allloss: 3.7870, dt: 1296.17ms, fracRes: 0.5962, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6115, norm(y): 0.9845, norm:0.7220, tok/sec: 101122.46, flops:88.55, batch-reuse:1
@ 11881 train 3.8469 , allloss: 3.8576, dt: 1265.99ms, fracRes: 0.5958, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6102, norm(y): 0.9845, norm:0.8216, tok/sec: 103532.95, flops:90.66, batch-reuse:1
@ 11882 train 3.8032 , allloss: 3.8143, dt: 1261.39ms, fracRes: 0.5967, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6134, norm(y): 0.9846, norm:0.8261, tok/sec: 103910.77, flops:90.99, batch-reuse:1
@ 11883 train 3.9051 , allloss: 3.9161, dt: 1258.06ms, fracRes: 0.5964, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6122, norm(y): 0.9844, norm:0.8249, tok/sec: 104185.40, flops:91.23, batch-reuse:1
@ 11884 train 3.8736 , allloss: 3.8846, dt: 1269.26ms, fracRes: 0.5970, norm(attn): 0.1709, norm(output): 0.2559, norm(x): 0.6119, norm(y): 0.9846, norm:0.9495, tok/sec: 103266.17, flops:90.43, batch-reuse:1
@ 11885 train 3.8483 , allloss: 3.8593, dt: 1254.80ms, fracRes: 0.5965, norm(attn): 0.1719, norm(output): 0.2598, norm(x): 0.6179, norm(y): 0.9845, norm:0.7534, tok/sec: 104456.90, flops:91.47, batch-reuse:1
@ 11886 train 3.8337 , allloss: 3.8445, dt: 1266.25ms, fracRes: 0.5968, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6138, norm(y): 0.9846, norm:0.9651, tok/sec: 103512.32, flops:90.64, batch-reuse:1
@ 11887 train 3.7988 , allloss: 3.8097, dt: 1257.82ms, fracRes: 0.5967, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6109, norm(y): 0.9843, norm:0.8433, tok/sec: 104205.99, flops:91.25, batch-reuse:1
@ 11888 train 3.8518 , allloss: 3.8628, dt: 1256.44ms, fracRes: 0.5959, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6127, norm(y): 0.9845, norm:0.8041, tok/sec: 104319.85, flops:91.35, batch-reuse:1
@ 11889 train 3.7968 , allloss: 3.8073, dt: 1268.19ms, fracRes: 0.5944, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6111, norm(y): 0.9844, norm:0.7969, tok/sec: 103353.92, flops:90.51, batch-reuse:1
@ 11890 train 3.8410 , allloss: 3.8520, dt: 1298.07ms, fracRes: 0.5945, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6126, norm(y): 0.9845, norm:0.7762, tok/sec: 100974.27, flops:88.42, batch-reuse:1
@ 11891 train 3.7735 , allloss: 3.7846, dt: 1283.34ms, fracRes: 0.5944, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6138, norm(y): 0.9844, norm:0.7821, tok/sec: 102133.29, flops:89.44, batch-reuse:1
@ 11892 train 3.8331 , allloss: 3.8442, dt: 1270.73ms, fracRes: 0.5948, norm(attn): 0.1699, norm(output): 0.2559, norm(x): 0.6093, norm(y): 0.9845, norm:0.8113, tok/sec: 103147.24, flops:90.32, batch-reuse:1
@ 11893 train 3.8691 , allloss: 3.8804, dt: 1273.23ms, fracRes: 0.5953, norm(attn): 0.1709, norm(output): 0.2559, norm(x): 0.6126, norm(y): 0.9843, norm:0.8756, tok/sec: 102944.09, flops:90.15, batch-reuse:1
@ 11894 train 3.7837 , allloss: 3.7943, dt: 1286.00ms, fracRes: 0.5957, norm(attn): 0.1699, norm(output): 0.2559, norm(x): 0.6104, norm(y): 0.9845, norm:0.7470, tok/sec: 101922.47, flops:89.25, batch-reuse:1
@ 11895 train 3.7505 , allloss: 3.7610, dt: 1264.56ms, fracRes: 0.5958, norm(attn): 0.1709, norm(output): 0.2559, norm(x): 0.6124, norm(y): 0.9844, norm:0.7549, tok/sec: 103650.13, flops:90.76, batch-reuse:1
@ 11896 train 3.8630 , allloss: 3.8738, dt: 1275.72ms, fracRes: 0.5959, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6157, norm(y): 0.9844, norm:0.8121, tok/sec: 102743.48, flops:89.97, batch-reuse:1
@ 11897 train 3.9203 , allloss: 3.9309, dt: 1258.02ms, fracRes: 0.5961, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6132, norm(y): 0.9844, norm:0.8258, tok/sec: 104188.77, flops:91.24, batch-reuse:1
@ 11898 train 4.1535 , allloss: 4.1650, dt: 1262.87ms, fracRes: 0.5948, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6143, norm(y): 0.9843, norm:1.2114, tok/sec: 103789.20, flops:90.89, batch-reuse:1
@ 11899 train 3.8211 , allloss: 3.8319, dt: 1302.32ms, fracRes: 0.5957, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6135, norm(y): 0.9844, norm:0.9909, tok/sec: 100645.06, flops:88.13, batch-reuse:1
@ 11900 train 3.5559 , allloss: 3.5665, dt: 1304.57ms, fracRes: 0.5955, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6127, norm(y): 0.9846, norm:0.9397, tok/sec: 100471.48, flops:87.98, batch-reuse:1
@ 11901 train 3.6676 , allloss: 3.6789, dt: 1270.12ms, fracRes: 0.5951, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6176, norm(y): 0.9848, norm:0.8379, tok/sec: 103196.40, flops:90.37, batch-reuse:1
@ 11902 train 3.7048 , allloss: 3.7158, dt: 1270.57ms, fracRes: 0.5944, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6165, norm(y): 0.9848, norm:0.9238, tok/sec: 103160.21, flops:90.34, batch-reuse:1
@ 11903 train 3.6637 , allloss: 3.6745, dt: 1259.60ms, fracRes: 0.5951, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6161, norm(y): 0.9848, norm:0.7991, tok/sec: 104058.18, flops:91.12, batch-reuse:1
@ 11904 train 3.6953 , allloss: 3.7061, dt: 1261.01ms, fracRes: 0.5955, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6150, norm(y): 0.9846, norm:0.7825, tok/sec: 103941.73, flops:91.02, batch-reuse:1
@ 11905 train 3.7388 , allloss: 3.7496, dt: 1260.73ms, fracRes: 0.5953, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6144, norm(y): 0.9845, norm:0.8314, tok/sec: 103965.20, flops:91.04, batch-reuse:1
@ 11906 train 3.6450 , allloss: 3.6563, dt: 1248.21ms, fracRes: 0.5959, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6132, norm(y): 0.9846, norm:0.8655, tok/sec: 105007.79, flops:91.95, batch-reuse:1
@ 11907 train 3.7077 , allloss: 3.7188, dt: 1270.35ms, fracRes: 0.5951, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6116, norm(y): 0.9846, norm:0.8197, tok/sec: 103177.89, flops:90.35, batch-reuse:1
@ 11908 train 3.7198 , allloss: 3.7304, dt: 1275.09ms, fracRes: 0.5944, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6142, norm(y): 0.9845, norm:0.8842, tok/sec: 102794.68, flops:90.02, batch-reuse:1
@ 11909 train 3.6702 , allloss: 3.6809, dt: 1316.33ms, fracRes: 0.5952, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6135, norm(y): 0.9847, norm:0.8019, tok/sec: 99573.93, flops:87.20, batch-reuse:1
@ 11910 train 3.6290 , allloss: 3.6398, dt: 1254.35ms, fracRes: 0.5958, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6142, norm(y): 0.9846, norm:0.7753, tok/sec: 104493.59, flops:91.50, batch-reuse:1
@ 11911 train 3.8214 , allloss: 3.8324, dt: 1259.07ms, fracRes: 0.5972, norm(attn): 0.1689, norm(output): 0.2578, norm(x): 0.6170, norm(y): 0.9845, norm:0.7953, tok/sec: 104102.06, flops:91.16, batch-reuse:1
@ 11912 train 3.7254 , allloss: 3.7360, dt: 1270.44ms, fracRes: 0.5975, norm(attn): 0.1670, norm(output): 0.2559, norm(x): 0.6172, norm(y): 0.9846, norm:0.8040, tok/sec: 103170.88, flops:90.35, batch-reuse:1
@ 11913 train 3.5593 , allloss: 3.5701, dt: 1274.69ms, fracRes: 0.5964, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6156, norm(y): 0.9846, norm:0.7763, tok/sec: 102826.31, flops:90.04, batch-reuse:1
@ 11914 train 3.7019 , allloss: 3.7126, dt: 1290.43ms, fracRes: 0.5957, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6140, norm(y): 0.9847, norm:0.7384, tok/sec: 101572.43, flops:88.95, batch-reuse:1
@ 11915 train 3.6561 , allloss: 3.6672, dt: 1287.89ms, fracRes: 0.5952, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6134, norm(y): 0.9845, norm:0.7755, tok/sec: 101772.90, flops:89.12, batch-reuse:1
@ 11916 train 3.6096 , allloss: 3.6204, dt: 1264.63ms, fracRes: 0.5957, norm(attn): 0.1699, norm(output): 0.2559, norm(x): 0.6079, norm(y): 0.9845, norm:0.7750, tok/sec: 103644.67, flops:90.76, batch-reuse:1
@ 11917 train 3.7422 , allloss: 3.7528, dt: 1263.57ms, fracRes: 0.5960, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6075, norm(y): 0.9843, norm:0.7053, tok/sec: 103731.43, flops:90.84, batch-reuse:1
@ 11918 train 3.6415 , allloss: 3.6521, dt: 1285.84ms, fracRes: 0.5960, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6072, norm(y): 0.9843, norm:0.7804, tok/sec: 101935.01, flops:89.26, batch-reuse:1
@ 11919 train 3.6453 , allloss: 3.6562, dt: 1302.74ms, fracRes: 0.5967, norm(attn): 0.1709, norm(output): 0.2559, norm(x): 0.6100, norm(y): 0.9848, norm:0.7956, tok/sec: 100612.27, flops:88.10, batch-reuse:1
@ 11920 train 3.8167 , allloss: 3.8277, dt: 1273.99ms, fracRes: 0.5964, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6102, norm(y): 0.9844, norm:0.8069, tok/sec: 102883.04, flops:90.09, batch-reuse:1
@ 11921 train 3.8213 , allloss: 3.8335, dt: 1288.77ms, fracRes: 0.5961, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6099, norm(y): 0.9843, norm:0.8323, tok/sec: 101702.99, flops:89.06, batch-reuse:1
@ 11922 train 3.6714 , allloss: 3.6818, dt: 1312.18ms, fracRes: 0.5961, norm(attn): 0.1699, norm(output): 0.2539, norm(x): 0.6075, norm(y): 0.9845, norm:0.7653, tok/sec: 99888.95, flops:87.47, batch-reuse:1
@ 11923 train 3.7420 , allloss: 3.7525, dt: 1289.98ms, fracRes: 0.5961, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6091, norm(y): 0.9844, norm:0.7698, tok/sec: 101607.43, flops:88.98, batch-reuse:1
@ 11924 train 3.7492 , allloss: 3.7598, dt: 1263.81ms, fracRes: 0.5964, norm(attn): 0.1689, norm(output): 0.2539, norm(x): 0.6091, norm(y): 0.9844, norm:0.7814, tok/sec: 103712.15, flops:90.82, batch-reuse:1
@ 11925 train 3.7640 , allloss: 3.7744, dt: 1292.87ms, fracRes: 0.5957, norm(attn): 0.1709, norm(output): 0.2559, norm(x): 0.6106, norm(y): 0.9843, norm:0.8285, tok/sec: 101380.83, flops:88.78, batch-reuse:1
@ 11926 train 3.6919 , allloss: 3.7025, dt: 1263.58ms, fracRes: 0.5957, norm(attn): 0.1689, norm(output): 0.2578, norm(x): 0.6090, norm(y): 0.9844, norm:0.7571, tok/sec: 103730.39, flops:90.84, batch-reuse:1
@ 11927 train 3.7978 , allloss: 3.8082, dt: 1268.87ms, fracRes: 0.5956, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6079, norm(y): 0.9844, norm:0.7679, tok/sec: 103298.49, flops:90.46, batch-reuse:1
@ 11928 train 3.6989 , allloss: 3.7101, dt: 1273.30ms, fracRes: 0.5964, norm(attn): 0.1699, norm(output): 0.2559, norm(x): 0.6088, norm(y): 0.9845, norm:0.8922, tok/sec: 102938.54, flops:90.14, batch-reuse:1
@ 11929 train 3.6353 , allloss: 3.6460, dt: 1286.09ms, fracRes: 0.5964, norm(attn): 0.1680, norm(output): 0.2539, norm(x): 0.6044, norm(y): 0.9844, norm:0.7838, tok/sec: 101915.17, flops:89.25, batch-reuse:1
@ 11930 train 3.7205 , allloss: 3.7316, dt: 1270.24ms, fracRes: 0.5974, norm(attn): 0.1689, norm(output): 0.2559, norm(x): 0.6130, norm(y): 0.9846, norm:0.9682, tok/sec: 103187.03, flops:90.36, batch-reuse:1
@ 11931 train 3.6320 , allloss: 3.6427, dt: 1261.30ms, fracRes: 0.5960, norm(attn): 0.1719, norm(output): 0.2578, norm(x): 0.6125, norm(y): 0.9845, norm:1.0480, tok/sec: 103918.23, flops:91.00, batch-reuse:1
@ 11932 train 3.6912 , allloss: 3.7017, dt: 1281.48ms, fracRes: 0.5954, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6095, norm(y): 0.9841, norm:0.8312, tok/sec: 102281.45, flops:89.57, batch-reuse:1
@ 11933 train 3.8283 , allloss: 3.8389, dt: 1243.04ms, fracRes: 0.5954, norm(attn): 0.1709, norm(output): 0.2559, norm(x): 0.6110, norm(y): 0.9841, norm:1.0170, tok/sec: 105444.67, flops:92.34, batch-reuse:1
@ 11934 train 3.5218 , allloss: 3.5327, dt: 1256.63ms, fracRes: 0.5954, norm(attn): 0.1709, norm(output): 0.2559, norm(x): 0.6087, norm(y): 0.9845, norm:1.2883, tok/sec: 104304.47, flops:91.34, batch-reuse:1
@ 11935 train 3.6447 , allloss: 3.6552, dt: 1252.79ms, fracRes: 0.5955, norm(attn): 0.1709, norm(output): 0.2559, norm(x): 0.6112, norm(y): 0.9842, norm:0.8742, tok/sec: 104624.36, flops:91.62, batch-reuse:1
@ 11936 train 3.6956 , allloss: 3.7060, dt: 1274.67ms, fracRes: 0.5949, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6086, norm(y): 0.9841, norm:1.0684, tok/sec: 102828.13, flops:90.05, batch-reuse:1
@ 11937 train 3.7170 , allloss: 3.7276, dt: 1275.79ms, fracRes: 0.5948, norm(attn): 0.1709, norm(output): 0.2559, norm(x): 0.6065, norm(y): 0.9842, norm:0.8533, tok/sec: 102737.76, flops:89.97, batch-reuse:1
@ 11938 train 3.6698 , allloss: 3.6806, dt: 1289.66ms, fracRes: 0.5947, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6070, norm(y): 0.9843, norm:0.9550, tok/sec: 101633.20, flops:89.00, batch-reuse:1
@ 11939 train 3.6431 , allloss: 3.6536, dt: 1285.97ms, fracRes: 0.5945, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6041, norm(y): 0.9842, norm:1.0312, tok/sec: 101924.98, flops:89.25, batch-reuse:1
@ 11940 train 3.6005 , allloss: 3.6114, dt: 1266.70ms, fracRes: 0.5962, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6098, norm(y): 0.9845, norm:0.7608, tok/sec: 103474.97, flops:90.61, batch-reuse:1
@ 11941 train 3.7473 , allloss: 3.7579, dt: 1259.38ms, fracRes: 0.5955, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6102, norm(y): 0.9841, norm:0.9065, tok/sec: 104076.94, flops:91.14, batch-reuse:1
@ 11942 train 3.6865 , allloss: 3.6971, dt: 1251.64ms, fracRes: 0.5961, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6099, norm(y): 0.9843, norm:0.8264, tok/sec: 104719.86, flops:91.70, batch-reuse:1
@ 11943 train 3.6627 , allloss: 3.6732, dt: 1266.52ms, fracRes: 0.5957, norm(attn): 0.1699, norm(output): 0.2539, norm(x): 0.6072, norm(y): 0.9842, norm:0.7391, tok/sec: 103489.70, flops:90.62, batch-reuse:1
@ 11944 train 3.7018 , allloss: 3.7126, dt: 1294.82ms, fracRes: 0.5949, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6098, norm(y): 0.9843, norm:0.7744, tok/sec: 101228.13, flops:88.64, batch-reuse:1
@ 11945 train 3.6763 , allloss: 3.6872, dt: 1298.73ms, fracRes: 0.5947, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6123, norm(y): 0.9844, norm:0.7586, tok/sec: 100922.87, flops:88.38, batch-reuse:1
@ 11946 train 3.7732 , allloss: 3.7838, dt: 1251.11ms, fracRes: 0.5935, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6131, norm(y): 0.9841, norm:0.8165, tok/sec: 104764.74, flops:91.74, batch-reuse:1
@ 11947 train 3.9720 , allloss: 3.9830, dt: 1268.85ms, fracRes: 0.5932, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6175, norm(y): 0.9839, norm:0.7916, tok/sec: 103299.48, flops:90.46, batch-reuse:1
@ 11948 train 3.9890 , allloss: 3.9997, dt: 1269.31ms, fracRes: 0.5933, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6111, norm(y): 0.9839, norm:0.8418, tok/sec: 103262.54, flops:90.43, batch-reuse:1
@ 11949 train 4.0921 , allloss: 4.1032, dt: 1291.25ms, fracRes: 0.5918, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6118, norm(y): 0.9838, norm:1.0339, tok/sec: 101508.20, flops:88.89, batch-reuse:1
@ 11950 train 3.9870 , allloss: 3.9984, dt: 1297.29ms, fracRes: 0.5929, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6118, norm(y): 0.9840, norm:1.0562, tok/sec: 101034.86, flops:88.47, batch-reuse:1
@ 11951 train 3.9702 , allloss: 3.9815, dt: 1269.47ms, fracRes: 0.5941, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6103, norm(y): 0.9839, norm:0.8426, tok/sec: 103249.08, flops:90.41, batch-reuse:1
@ 11952 train 3.9757 , allloss: 3.9867, dt: 1276.75ms, fracRes: 0.5950, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6133, norm(y): 0.9837, norm:0.8576, tok/sec: 102660.64, flops:89.90, batch-reuse:1
@ 11953 train 3.9582 , allloss: 3.9689, dt: 1258.92ms, fracRes: 0.5954, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6090, norm(y): 0.9840, norm:0.9398, tok/sec: 104114.76, flops:91.17, batch-reuse:1
@ 11954 train 3.9190 , allloss: 3.9305, dt: 1268.17ms, fracRes: 0.5963, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6129, norm(y): 0.9842, norm:0.9288, tok/sec: 103355.24, flops:90.51, batch-reuse:1
@ 11955 train 3.8410 , allloss: 3.8520, dt: 1288.96ms, fracRes: 0.5961, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6155, norm(y): 0.9840, norm:0.7866, tok/sec: 101688.17, flops:89.05, batch-reuse:1
@ 11956 train 3.8337 , allloss: 3.8452, dt: 1267.50ms, fracRes: 0.5966, norm(attn): 0.1689, norm(output): 0.2598, norm(x): 0.6177, norm(y): 0.9840, norm:0.8746, tok/sec: 103410.26, flops:90.55, batch-reuse:1
@ 11957 train 3.8467 , allloss: 3.8580, dt: 1295.39ms, fracRes: 0.5962, norm(attn): 0.1699, norm(output): 0.2559, norm(x): 0.6154, norm(y): 0.9839, norm:0.7768, tok/sec: 101183.57, flops:88.61, batch-reuse:1
@ 11958 train 3.9379 , allloss: 3.9489, dt: 1268.63ms, fracRes: 0.5957, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6180, norm(y): 0.9837, norm:0.8261, tok/sec: 103317.83, flops:90.47, batch-reuse:1
@ 11959 train 3.8477 , allloss: 3.8585, dt: 1272.68ms, fracRes: 0.5960, norm(attn): 0.1699, norm(output): 0.2617, norm(x): 0.6172, norm(y): 0.9839, norm:0.8332, tok/sec: 102989.35, flops:90.19, batch-reuse:1
@ 11960 train 3.9036 , allloss: 3.9141, dt: 1290.59ms, fracRes: 0.5950, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6145, norm(y): 0.9841, norm:0.7871, tok/sec: 101559.50, flops:88.93, batch-reuse:1
@ 11961 train 3.8208 , allloss: 3.8317, dt: 1253.09ms, fracRes: 0.5946, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6134, norm(y): 0.9841, norm:0.7430, tok/sec: 104599.14, flops:91.60, batch-reuse:1
@ 11962 train 3.8411 , allloss: 3.8523, dt: 1271.12ms, fracRes: 0.5952, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6144, norm(y): 0.9842, norm:0.7981, tok/sec: 103115.59, flops:90.30, batch-reuse:1
@ 11963 train 3.9022 , allloss: 3.9130, dt: 1304.24ms, fracRes: 0.5953, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6114, norm(y): 0.9841, norm:0.7585, tok/sec: 100496.55, flops:88.00, batch-reuse:1
@ 11964 train 4.0224 , allloss: 4.0338, dt: 1276.01ms, fracRes: 0.5953, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6137, norm(y): 0.9839, norm:0.8946, tok/sec: 102720.06, flops:89.95, batch-reuse:1
@ 11965 train 3.8610 , allloss: 3.8719, dt: 1264.70ms, fracRes: 0.5963, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6121, norm(y): 0.9844, norm:0.8099, tok/sec: 103638.72, flops:90.75, batch-reuse:1
@ 11966 train 3.9152 , allloss: 3.9263, dt: 1270.46ms, fracRes: 0.5959, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6153, norm(y): 0.9839, norm:0.7984, tok/sec: 103169.02, flops:90.34, batch-reuse:1
@ 11967 train 3.9770 , allloss: 3.9880, dt: 1268.41ms, fracRes: 0.5959, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6150, norm(y): 0.9838, norm:0.7746, tok/sec: 103335.50, flops:90.49, batch-reuse:1
@ 11968 train 3.9600 , allloss: 3.9706, dt: 1316.82ms, fracRes: 0.5957, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6119, norm(y): 0.9837, norm:0.8261, tok/sec: 99537.06, flops:87.16, batch-reuse:1
@ 11969 train 3.8486 , allloss: 3.8599, dt: 1289.34ms, fracRes: 0.5954, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6154, norm(y): 0.9836, norm:0.7768, tok/sec: 101658.49, flops:89.02, batch-reuse:1
@ 11970 train 3.9145 , allloss: 3.9255, dt: 1312.99ms, fracRes: 0.5951, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6134, norm(y): 0.9838, norm:0.9565, tok/sec: 99827.42, flops:87.42, batch-reuse:1
@ 11971 train 3.9866 , allloss: 3.9979, dt: 1288.61ms, fracRes: 0.5948, norm(attn): 0.1699, norm(output): 0.2637, norm(x): 0.6159, norm(y): 0.9836, norm:1.1572, tok/sec: 101716.14, flops:89.07, batch-reuse:1
@ 11972 train 3.7855 , allloss: 3.7965, dt: 1258.44ms, fracRes: 0.5944, norm(attn): 0.1699, norm(output): 0.2617, norm(x): 0.6140, norm(y): 0.9835, norm:0.9285, tok/sec: 104153.95, flops:91.21, batch-reuse:1
@ 11973 train 3.8340 , allloss: 3.8450, dt: 1270.71ms, fracRes: 0.5947, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6126, norm(y): 0.9838, norm:0.9580, tok/sec: 103148.79, flops:90.33, batch-reuse:1
@ 11974 train 3.9239 , allloss: 3.9351, dt: 1277.28ms, fracRes: 0.5951, norm(attn): 0.1699, norm(output): 0.2637, norm(x): 0.6174, norm(y): 0.9839, norm:0.9173, tok/sec: 102618.34, flops:89.86, batch-reuse:1
@ 11975 train 3.9666 , allloss: 3.9774, dt: 1292.66ms, fracRes: 0.5954, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6163, norm(y): 0.9837, norm:0.8229, tok/sec: 101397.18, flops:88.79, batch-reuse:1
@ 11976 train 3.9851 , allloss: 3.9961, dt: 1305.56ms, fracRes: 0.5965, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6138, norm(y): 0.9837, norm:0.8694, tok/sec: 100395.41, flops:87.91, batch-reuse:1
@ 11977 train 3.9115 , allloss: 3.9225, dt: 1274.97ms, fracRes: 0.5970, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6119, norm(y): 0.9839, norm:0.9701, tok/sec: 102804.35, flops:90.02, batch-reuse:1
@ 11978 train 3.9618 , allloss: 3.9726, dt: 1261.27ms, fracRes: 0.5961, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6107, norm(y): 0.9838, norm:0.7658, tok/sec: 103920.43, flops:91.00, batch-reuse:1
@ 11979 train 3.8278 , allloss: 3.8391, dt: 1263.76ms, fracRes: 0.5960, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6126, norm(y): 0.9840, norm:0.8343, tok/sec: 103715.63, flops:90.82, batch-reuse:1
@ 11980 train 3.9352 , allloss: 3.9461, dt: 1268.56ms, fracRes: 0.5955, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6120, norm(y): 0.9839, norm:0.7886, tok/sec: 103323.54, flops:90.48, batch-reuse:1
@ 11981 train 3.8944 , allloss: 3.9051, dt: 1272.53ms, fracRes: 0.5949, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6132, norm(y): 0.9838, norm:0.7318, tok/sec: 103000.79, flops:90.20, batch-reuse:1
@ 11982 train 3.8757 , allloss: 3.8873, dt: 1272.44ms, fracRes: 0.5947, norm(attn): 0.1699, norm(output): 0.2637, norm(x): 0.6148, norm(y): 0.9840, norm:1.0381, tok/sec: 103008.07, flops:90.20, batch-reuse:1
@ 11983 train 3.9190 , allloss: 3.9296, dt: 1299.82ms, fracRes: 0.5953, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6136, norm(y): 0.9839, norm:0.8891, tok/sec: 100838.67, flops:88.30, batch-reuse:1
@ 11984 train 3.8563 , allloss: 3.8671, dt: 1284.58ms, fracRes: 0.5956, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6140, norm(y): 0.9839, norm:0.7930, tok/sec: 102035.29, flops:89.35, batch-reuse:1
@ 11985 train 3.8329 , allloss: 3.8438, dt: 1290.33ms, fracRes: 0.5958, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6140, norm(y): 0.9840, norm:0.8439, tok/sec: 101580.26, flops:88.95, batch-reuse:1
@ 11986 train 3.8963 , allloss: 3.9070, dt: 1285.31ms, fracRes: 0.5956, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6132, norm(y): 0.9837, norm:0.8048, tok/sec: 101977.26, flops:89.30, batch-reuse:1
@ 11987 train 3.9194 , allloss: 3.9304, dt: 1261.55ms, fracRes: 0.5958, norm(attn): 0.1699, norm(output): 0.2617, norm(x): 0.6126, norm(y): 0.9836, norm:0.7559, tok/sec: 103897.59, flops:90.98, batch-reuse:1
@ 11988 train 3.9476 , allloss: 3.9583, dt: 1253.64ms, fracRes: 0.5949, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6128, norm(y): 0.9836, norm:0.7624, tok/sec: 104553.31, flops:91.56, batch-reuse:1
@ 11989 train 3.8689 , allloss: 3.8798, dt: 1271.33ms, fracRes: 0.5948, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6126, norm(y): 0.9837, norm:0.9150, tok/sec: 103098.71, flops:90.28, batch-reuse:1
@ 11990 train 3.8492 , allloss: 3.8607, dt: 1272.24ms, fracRes: 0.5951, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6158, norm(y): 0.9836, norm:0.8748, tok/sec: 103024.42, flops:90.22, batch-reuse:1
@ 11991 train 3.9080 , allloss: 3.9188, dt: 1282.89ms, fracRes: 0.5951, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6137, norm(y): 0.9835, norm:0.7383, tok/sec: 102169.39, flops:89.47, batch-reuse:1
@ 11992 train 3.8840 , allloss: 3.8952, dt: 1282.57ms, fracRes: 0.5961, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6122, norm(y): 0.9837, norm:0.8658, tok/sec: 102195.20, flops:89.49, batch-reuse:1
@ 11993 train 3.9084 , allloss: 3.9192, dt: 1253.06ms, fracRes: 0.5954, norm(attn): 0.1719, norm(output): 0.2578, norm(x): 0.6107, norm(y): 0.9835, norm:0.8149, tok/sec: 104601.27, flops:91.60, batch-reuse:1
@ 11994 train 3.8792 , allloss: 3.8904, dt: 1265.79ms, fracRes: 0.5964, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6117, norm(y): 0.9837, norm:0.7663, tok/sec: 103549.89, flops:90.68, batch-reuse:1
@ 11995 train 3.8776 , allloss: 3.8883, dt: 1268.14ms, fracRes: 0.5957, norm(attn): 0.1719, norm(output): 0.2598, norm(x): 0.6081, norm(y): 0.9836, norm:0.7699, tok/sec: 103357.36, flops:90.51, batch-reuse:1
@ 11996 train 3.8860 , allloss: 3.8969, dt: 1254.70ms, fracRes: 0.5957, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6132, norm(y): 0.9838, norm:0.7669, tok/sec: 104465.09, flops:91.48, batch-reuse:1
@ 11997 train 3.7943 , allloss: 3.8051, dt: 1265.94ms, fracRes: 0.5955, norm(attn): 0.1719, norm(output): 0.2598, norm(x): 0.6140, norm(y): 0.9836, norm:0.7156, tok/sec: 103536.98, flops:90.67, batch-reuse:1
@ 11998 train 3.8662 , allloss: 3.8769, dt: 1284.45ms, fracRes: 0.5960, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6145, norm(y): 0.9836, norm:0.7988, tok/sec: 102045.59, flops:89.36, batch-reuse:1
@ 11999 train 3.9259 , allloss: 3.9366, dt: 1317.56ms, fracRes: 0.5958, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6132, norm(y): 0.9836, norm:0.8396, tok/sec: 99481.17, flops:87.11, batch-reuse:1
@ 12000 val 3.8370
@ 12000 train 3.8605 , allloss: 3.8712, dt: 1898.86ms, fracRes: 0.5959, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6125, norm(y): 0.9837, norm:0.7433, tok/sec: 69026.51, flops:60.45, batch-reuse:1
@ 12001 train 3.8192 , allloss: 3.8299, dt: 1254.95ms, fracRes: 0.5959, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6103, norm(y): 0.9839, norm:0.7322, tok/sec: 104443.68, flops:91.46, batch-reuse:1
@ 12002 train 3.8861 , allloss: 3.8971, dt: 1295.28ms, fracRes: 0.5960, norm(attn): 0.1689, norm(output): 0.2578, norm(x): 0.6084, norm(y): 0.9837, norm:0.7945, tok/sec: 101191.71, flops:88.61, batch-reuse:1
@ 12003 train 3.9342 , allloss: 3.9452, dt: 1324.12ms, fracRes: 0.5967, norm(attn): 0.1699, norm(output): 0.2539, norm(x): 0.6078, norm(y): 0.9836, norm:0.7202, tok/sec: 98987.68, flops:86.68, batch-reuse:1
@ 12004 train 3.8953 , allloss: 3.9065, dt: 1301.34ms, fracRes: 0.5969, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6087, norm(y): 0.9837, norm:0.7568, tok/sec: 100720.46, flops:88.20, batch-reuse:1
@ 12005 train 3.9396 , allloss: 3.9502, dt: 1287.73ms, fracRes: 0.5964, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6072, norm(y): 0.9838, norm:0.7218, tok/sec: 101785.09, flops:89.13, batch-reuse:1
@ 12006 train 3.9094 , allloss: 3.9201, dt: 1274.19ms, fracRes: 0.5962, norm(attn): 0.1699, norm(output): 0.2617, norm(x): 0.6098, norm(y): 0.9836, norm:0.7207, tok/sec: 102866.85, flops:90.08, batch-reuse:1
@ 12007 train 3.8801 , allloss: 3.8906, dt: 1293.15ms, fracRes: 0.5953, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6083, norm(y): 0.9836, norm:0.7175, tok/sec: 101358.46, flops:88.76, batch-reuse:1
@ 12008 train 3.8727 , allloss: 3.8832, dt: 1293.13ms, fracRes: 0.5943, norm(attn): 0.1719, norm(output): 0.2598, norm(x): 0.6084, norm(y): 0.9835, norm:0.7091, tok/sec: 101360.61, flops:88.76, batch-reuse:1
@ 12009 train 3.9429 , allloss: 3.9539, dt: 1282.61ms, fracRes: 0.5950, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6106, norm(y): 0.9836, norm:0.7692, tok/sec: 102191.72, flops:89.49, batch-reuse:1
@ 12010 train 3.8720 , allloss: 3.8824, dt: 1245.81ms, fracRes: 0.5945, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6081, norm(y): 0.9835, norm:0.8914, tok/sec: 105210.14, flops:92.13, batch-reuse:1
@ 12011 train 3.8248 , allloss: 3.8355, dt: 1271.95ms, fracRes: 0.5944, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6099, norm(y): 0.9839, norm:0.8517, tok/sec: 103047.73, flops:90.24, batch-reuse:1
@ 12012 train 3.9167 , allloss: 3.9273, dt: 1252.83ms, fracRes: 0.5941, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6067, norm(y): 0.9835, norm:0.7511, tok/sec: 104620.76, flops:91.61, batch-reuse:1
@ 12013 train 3.8851 , allloss: 3.8958, dt: 1264.83ms, fracRes: 0.5957, norm(attn): 0.1709, norm(output): 0.2559, norm(x): 0.6063, norm(y): 0.9835, norm:0.8454, tok/sec: 103628.38, flops:90.75, batch-reuse:1
@ 12014 train 3.9074 , allloss: 3.9182, dt: 1289.15ms, fracRes: 0.5969, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6069, norm(y): 0.9835, norm:0.8026, tok/sec: 101673.03, flops:89.03, batch-reuse:1
@ 12015 train 3.8814 , allloss: 3.8921, dt: 1264.75ms, fracRes: 0.5969, norm(attn): 0.1719, norm(output): 0.2578, norm(x): 0.6076, norm(y): 0.9835, norm:0.7457, tok/sec: 103634.42, flops:90.75, batch-reuse:1
@ 12016 train 3.8208 , allloss: 3.8316, dt: 1257.88ms, fracRes: 0.5960, norm(attn): 0.1719, norm(output): 0.2598, norm(x): 0.6099, norm(y): 0.9835, norm:0.8228, tok/sec: 104200.56, flops:91.25, batch-reuse:1
@ 12017 train 3.8888 , allloss: 3.8994, dt: 1291.09ms, fracRes: 0.5959, norm(attn): 0.1719, norm(output): 0.2578, norm(x): 0.6077, norm(y): 0.9835, norm:0.8035, tok/sec: 101520.10, flops:88.90, batch-reuse:1
@ 12018 train 3.8675 , allloss: 3.8779, dt: 1267.02ms, fracRes: 0.5952, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6099, norm(y): 0.9834, norm:0.7866, tok/sec: 103448.96, flops:90.59, batch-reuse:1
@ 12019 train 3.9642 , allloss: 3.9748, dt: 1262.00ms, fracRes: 0.5949, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6096, norm(y): 0.9834, norm:0.8191, tok/sec: 103860.36, flops:90.95, batch-reuse:1
@ 12020 train 3.9291 , allloss: 3.9397, dt: 1270.97ms, fracRes: 0.5947, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6108, norm(y): 0.9832, norm:0.8113, tok/sec: 103127.25, flops:90.31, batch-reuse:1
@ 12021 train 3.8906 , allloss: 3.9015, dt: 1269.25ms, fracRes: 0.5963, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6133, norm(y): 0.9835, norm:0.8150, tok/sec: 103267.62, flops:90.43, batch-reuse:1
@ 12022 train 3.9637 , allloss: 3.9745, dt: 1272.31ms, fracRes: 0.5964, norm(attn): 0.1699, norm(output): 0.2637, norm(x): 0.6149, norm(y): 0.9834, norm:0.7828, tok/sec: 103018.82, flops:90.21, batch-reuse:1
@ 12023 train 3.8389 , allloss: 3.8493, dt: 1253.90ms, fracRes: 0.5962, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6138, norm(y): 0.9834, norm:0.7426, tok/sec: 104531.54, flops:91.54, batch-reuse:1
@ 12024 train 3.8682 , allloss: 3.8790, dt: 1266.33ms, fracRes: 0.5956, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6154, norm(y): 0.9835, norm:0.7951, tok/sec: 103505.54, flops:90.64, batch-reuse:1
@ 12025 train 3.9196 , allloss: 3.9303, dt: 1262.91ms, fracRes: 0.5946, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6109, norm(y): 0.9833, norm:0.8011, tok/sec: 103785.91, flops:90.88, batch-reuse:1
@ 12026 train 3.9331 , allloss: 3.9443, dt: 1272.39ms, fracRes: 0.5948, norm(attn): 0.1719, norm(output): 0.2598, norm(x): 0.6134, norm(y): 0.9836, norm:0.8058, tok/sec: 103012.30, flops:90.21, batch-reuse:1
@ 12027 train 4.0067 , allloss: 4.0176, dt: 1294.70ms, fracRes: 0.5951, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6066, norm(y): 0.9834, norm:0.7876, tok/sec: 101237.43, flops:88.65, batch-reuse:1
@ 12028 train 3.9003 , allloss: 3.9110, dt: 1280.08ms, fracRes: 0.5956, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6084, norm(y): 0.9832, norm:0.7491, tok/sec: 102393.98, flops:89.66, batch-reuse:1
@ 12029 train 3.8498 , allloss: 3.8606, dt: 1319.71ms, fracRes: 0.5950, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6116, norm(y): 0.9832, norm:0.7821, tok/sec: 99318.47, flops:86.97, batch-reuse:1
@ 12030 train 3.8200 , allloss: 3.8305, dt: 1311.09ms, fracRes: 0.5949, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6095, norm(y): 0.9833, norm:0.7476, tok/sec: 99971.62, flops:87.54, batch-reuse:1
@ 12031 train 3.8903 , allloss: 3.9014, dt: 1245.06ms, fracRes: 0.5948, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6079, norm(y): 0.9832, norm:0.7437, tok/sec: 105273.85, flops:92.19, batch-reuse:1
@ 12032 train 3.9101 , allloss: 3.9210, dt: 1249.67ms, fracRes: 0.5952, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6087, norm(y): 0.9834, norm:0.7476, tok/sec: 104885.31, flops:91.85, batch-reuse:1
@ 12033 train 3.9497 , allloss: 3.9603, dt: 1278.14ms, fracRes: 0.5940, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6109, norm(y): 0.9833, norm:0.8520, tok/sec: 102548.65, flops:89.80, batch-reuse:1
@ 12034 train 3.9570 , allloss: 3.9673, dt: 1272.53ms, fracRes: 0.5949, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6086, norm(y): 0.9834, norm:0.7610, tok/sec: 103001.31, flops:90.20, batch-reuse:1
@ 12035 train 4.0881 , allloss: 4.1000, dt: 1297.36ms, fracRes: 0.5959, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6284, norm(y): 0.9829, norm:2.4962, tok/sec: 101029.47, flops:88.47, batch-reuse:1
@ 12036 train 3.9036 , allloss: 3.9203, dt: 1319.77ms, fracRes: 0.5949, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6124, norm(y): 0.9835, norm:2.0656, tok/sec: 99314.50, flops:86.97, batch-reuse:1
@ 12037 train 4.1937 , allloss: 4.2049, dt: 1280.51ms, fracRes: 0.5957, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6166, norm(y): 0.9828, norm:2.7204, tok/sec: 102359.30, flops:89.63, batch-reuse:1
@ 12038 train 3.8103 , allloss: 3.8209, dt: 1257.58ms, fracRes: 0.5951, norm(attn): 0.1748, norm(output): 0.2637, norm(x): 0.6105, norm(y): 0.9830, norm:2.1448, tok/sec: 104225.39, flops:91.27, batch-reuse:1
@ 12039 train 3.9557 , allloss: 3.9664, dt: 1252.54ms, fracRes: 0.5966, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6147, norm(y): 0.9836, norm:2.0382, tok/sec: 104645.27, flops:91.64, batch-reuse:1
@ 12040 train 3.9814 , allloss: 3.9928, dt: 1283.67ms, fracRes: 0.5962, norm(attn): 0.1699, norm(output): 0.2637, norm(x): 0.6216, norm(y): 0.9839, norm:1.0505, tok/sec: 102107.62, flops:89.41, batch-reuse:1
@ 12041 train 3.9810 , allloss: 3.9919, dt: 1269.02ms, fracRes: 0.5955, norm(attn): 0.1699, norm(output): 0.2637, norm(x): 0.6189, norm(y): 0.9834, norm:1.5046, tok/sec: 103286.32, flops:90.45, batch-reuse:1
@ 12042 train 3.8143 , allloss: 3.8252, dt: 1278.90ms, fracRes: 0.5954, norm(attn): 0.1680, norm(output): 0.2598, norm(x): 0.6165, norm(y): 0.9834, norm:0.9757, tok/sec: 102488.01, flops:89.75, batch-reuse:1
@ 12043 train 3.7925 , allloss: 3.8035, dt: 1250.07ms, fracRes: 0.5953, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6168, norm(y): 0.9833, norm:1.0203, tok/sec: 104851.88, flops:91.82, batch-reuse:1
@ 12044 train 3.8329 , allloss: 3.8438, dt: 1257.07ms, fracRes: 0.5946, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6159, norm(y): 0.9833, norm:0.9057, tok/sec: 104267.82, flops:91.31, batch-reuse:1
@ 12045 train 3.8692 , allloss: 3.8799, dt: 1263.31ms, fracRes: 0.5946, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6188, norm(y): 0.9836, norm:0.9313, tok/sec: 103752.49, flops:90.85, batch-reuse:1
@ 12046 train 3.8161 , allloss: 3.8270, dt: 1275.12ms, fracRes: 0.5948, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6193, norm(y): 0.9837, norm:0.8635, tok/sec: 102791.83, flops:90.01, batch-reuse:1
@ 12047 train 3.8076 , allloss: 3.8184, dt: 1257.35ms, fracRes: 0.5950, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6195, norm(y): 0.9834, norm:0.8069, tok/sec: 104244.78, flops:91.29, batch-reuse:1
@ 12048 train 3.8437 , allloss: 3.8547, dt: 1244.73ms, fracRes: 0.5946, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6143, norm(y): 0.9835, norm:0.8478, tok/sec: 105301.29, flops:92.21, batch-reuse:1
@ 12049 train 3.9459 , allloss: 3.9566, dt: 1254.56ms, fracRes: 0.5947, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6169, norm(y): 0.9834, norm:1.0381, tok/sec: 104476.77, flops:91.49, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9648, 0.0359, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8398, 0.0474, 0.1138, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9180, 0.0135, 0.0605, 0.0067, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7969, 0.0354, 0.0437, 0.0442, 0.0811, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8789, 0.0496, 0.0222, 0.0041, 0.0081, 0.0388, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7148, 0.0525, 0.0222, 0.0280, 0.0427, 0.0713, 0.0674, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4004, 0.0486, 0.2031, 0.0327, 0.0869, 0.0483, 0.0520, 0.1279, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8398, 0.0249, 0.0330, 0.0051, 0.0123, 0.0096, 0.0410, 0.0181, 0.0168, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5117, 0.0159, 0.1309, 0.0116, 0.0248, 0.0090, 0.0210, 0.1211, 0.0186, 0.1357, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6406, 0.0381, 0.0547, 0.0164, 0.0228, 0.0093, 0.0254, 0.0237, 0.0415, 0.0430, 0.0835, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2754, 0.0376, 0.0339, 0.0405, 0.0947, 0.0325, 0.0405, 0.0398, 0.1270, 0.0564, 0.1992, 0.0227, 0.0000, 0.0000, 0.0000],
        [0.1328, 0.0635, 0.0962, 0.0476, 0.0464, 0.0337, 0.0311, 0.0762, 0.0233, 0.1206, 0.0723, 0.1079, 0.1475, 0.0000, 0.0000],
        [0.5898, 0.0454, 0.0447, 0.0072, 0.0188, 0.0132, 0.0474, 0.0201, 0.0223, 0.0198, 0.0347, 0.0194, 0.1001, 0.0181, 0.0000],
        [0.3691, 0.0869, 0.0396, 0.0515, 0.0383, 0.0084, 0.0089, 0.0393, 0.0240, 0.0400, 0.0466, 0.0415, 0.1250, 0.0237, 0.0579]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0028, -0.0004, -0.0133,  ..., -0.0323,  0.0164, -0.0030],
        [-0.0384,  0.0030, -0.0019,  ...,  0.0031,  0.0032,  0.0107],
        [ 0.0325,  0.0339, -0.0041,  ..., -0.0178,  0.0272, -0.0085],
        ...,
        [ 0.0283,  0.0192,  0.0008,  ..., -0.0332,  0.0104,  0.0125],
        [-0.0461,  0.0038, -0.0241,  ...,  0.0099, -0.0023, -0.0131],
        [-0.0191, -0.0044, -0.0195,  ...,  0.0135, -0.0375,  0.0028]], device='cuda:0', requires_grad=True)
K: tensor([ 1.4375,  0.0481,  0.6289,  0.4082,  1.0781,  0.3984, -0.5273, -1.0469, -0.8867, -0.3320, -0.5547, -1.0469, -0.0593, -1.0391, -0.1201, -0.6445,  1.0234,  0.4473, -1.8125,  0.2100,  1.8750,  1.0547, -1.1719,  1.0234, -0.5898, -0.0845, -0.7617,  1.1875,  0.3809, -0.0879,  1.7266,  0.6875,
         1.3516,  0.9766,  0.4883,  1.9766, -2.1406,  0.7148, -0.4043, -2.3594,  0.5156,  0.6875,  0.7344,  1.8672, -0.0103,  0.3164,  0.0732,  0.2500,  1.4922, -0.2139,  0.4004,  0.9414, -1.2656, -0.3066,  1.5469, -0.3789, -0.7695,  0.7773,  0.0170, -0.5039,  1.5625, -0.7656,  0.7031, -0.2012],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0391,  0.0084, -0.0047,  ...,  0.0065, -0.0044, -0.0042],
        [ 0.0120, -0.0153,  0.0117,  ...,  0.0006,  0.0523,  0.0160],
        [-0.0369,  0.0353,  0.0050,  ..., -0.0190, -0.0460, -0.0431],
        ...,
        [ 0.0214,  0.0049,  0.0324,  ...,  0.0231,  0.0101,  0.0251],
        [-0.0069, -0.0101,  0.0209,  ...,  0.0249,  0.0162,  0.0006],
        [-0.0184, -0.0064,  0.0462,  ..., -0.0268,  0.0291,  0.0048]], device='cuda:0', requires_grad=True)
Q: tensor([-0.3730,  0.0510, -1.3750, -0.0442, -0.0923, -0.0574, -1.9141, -0.2891,  0.4531,  0.6719, -1.1250, -0.0322, -0.3242, -0.2852, -0.0214,  0.1982,  0.9180, -1.2656,  0.8008,  0.4648, -0.6797, -0.0825,  1.1875,  0.3301,  0.8750,  0.3203, -1.0234, -2.3438,  0.1016,  0.1099,  0.6602,  0.2578,
        -0.7266, -1.4531, -0.1455, -0.1318,  1.1016,  0.7383, -0.0796,  1.1562,  1.6797,  0.3477,  0.4316,  0.0123, -0.5391,  1.1328, -2.3750,  0.5938, -0.2500,  0.4609, -1.3516, -0.5117, -0.8242, -0.9141, -0.7695,  0.1797,  0.1914, -1.4766,  0.2354, -0.2930, -1.5859, -0.2539,  0.6289,  1.4922],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -3.2812, -3.0312, -4.6875, -4.3125, -4.2812, -3.6719, -3.3594, -4.5000, -3.6719, -3.1250, -3.2031, -0.8711, -4.6250, -3.7812],
        [ 0.0000, -2.8750, -2.0000, -2.8125, -2.4531, -3.9062, -3.5781, -2.3125, -2.4688, -1.8750, -1.2891, -2.2656, -0.8047, -2.1094, -1.4766],
        [ 0.0000, -4.2188, -2.7188, -4.9062, -3.3594, -4.4375, -4.0312, -3.5312, -3.1250, -2.9062, -1.4062, -3.0469, -2.0781, -3.1094, -2.1406],
        [ 0.0000, -3.1094, -2.9062, -2.8906, -2.2812, -3.6719, -3.1719, -3.2031, -1.5938, -2.1406, -1.1875, -2.3438, -1.6172, -1.2188, -1.4531],
        [ 0.0000, -2.8750, -3.6719, -5.3750, -4.6875, -3.1250, -2.4375, -3.7969, -4.0312, -4.7812, -3.8438, -3.9219, -1.9141, -4.0625, -3.9531],
        [ 0.0000, -2.6094, -3.4688, -3.2500, -2.8125, -2.2969, -2.3594, -3.6562, -1.2344, -2.8906, -1.0078, -2.5625, -2.5312, -1.0469, -1.8672],
        [ 0.0000, -2.1094, -0.6797, -2.5000, -1.5234, -2.1094, -2.0469, -1.1328, -1.5391,  0.1279, -0.1533, -1.0547, -0.1641, -1.3047, -0.8008],
        [ 0.0000, -3.5156, -3.2344, -5.1250, -4.2188, -4.4688, -3.0156, -3.8438, -3.9062, -3.9688, -3.3125, -3.8906, -1.9219, -4.0938, -3.6094],
        [ 0.0000, -3.4844, -1.3672, -3.7812, -3.0312, -4.0312, -3.2031, -1.4453, -3.3125, -1.3281, -2.1094, -2.2656, -0.0454, -3.1250, -2.4688],
        [ 0.0000, -2.8281, -2.4688, -3.6719, -3.3438, -4.2500, -3.2344, -3.2969, -2.7344, -2.7031, -2.0469, -2.4844, -1.6562, -2.6875, -2.0156],
        [ 0.0000, -1.9922, -2.0938, -1.9141, -1.0625, -2.1250, -1.9141, -1.9297, -0.7734, -1.5859, -0.3223, -2.5000, -1.3594, -0.6523, -0.4590],
        [ 0.0000, -0.7344, -0.3203, -1.0234, -1.0469, -1.3672, -1.4453, -0.5547, -1.7344, -0.0938, -0.6055, -0.2051,  0.1084, -1.5078, -0.6953],
        [ 0.0000, -2.5625, -2.5781, -4.4062, -3.4531, -3.7969, -2.5156, -3.3750, -3.2812, -3.3906, -2.8281, -3.4062, -1.7734, -3.4844, -3.1719],
        [ 0.0000, -1.4453, -2.2344, -1.9688, -2.2656, -3.7812, -3.7344, -2.2344, -2.7344, -2.2188, -2.0625, -2.1875, -1.0781, -2.7500, -1.8516]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9010],
        [0.8822],
        [0.8613],
        [0.7008],
        [0.7616],
        [0.6532],
        [0.4810],
        [0.5902],
        [0.5522],
        [0.4683],
        [0.4384],
        [0.2175],
        [0.3667],
        [0.2889]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8945,     0.1055,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2930,     0.6328,     0.0752,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2988,     0.3262,     0.3379,     0.0371,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1123,     0.5430,     0.0630,     0.1797,     0.1025,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2383,     0.2891,     0.0549,     0.0505,     0.2617,     0.1055,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1162,     0.1621,     0.0403,     0.0361,     0.1543,     0.2832,     0.2080,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0918,     0.0544,     0.0148,     0.0076,     0.0540,     0.1328,     0.5898,     0.0535,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0732,     0.0393,     0.0083,     0.0025,     0.0330,     0.0869,     0.6016,     0.0552,     0.0986,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0145,     0.0258,     0.0063,     0.0070,     0.0219,     0.0320,     0.0620,     0.0806,     0.7109,     0.0403,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0522,     0.0118,     0.0019,     0.0018,     0.0154,     0.0344,     0.2051,     0.0081,     0.4512,     0.0503,     0.1670,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0039,     0.0078,     0.0026,     0.0017,     0.0049,     0.0265,     0.1279,     0.0879,     0.0564,     0.1108,     0.5000,     0.0674,     0.0000,     0.0000,     0.0000],
        [    0.0201,     0.0021,     0.0021,     0.0014,     0.0121,     0.0248,     0.1206,     0.0381,     0.1562,     0.0483,     0.3711,     0.0874,     0.1157,     0.0000,     0.0000],
        [    0.0413,     0.0065,     0.0020,     0.0005,     0.0064,     0.0210,     0.1924,     0.0159,     0.0160,     0.0398,     0.4688,     0.0374,     0.0645,     0.0879,     0.0000],
        [    0.0048,     0.0044,     0.0008,     0.0006,     0.0026,     0.0089,     0.0344,     0.0145,     0.0679,     0.0233,     0.1235,     0.0942,     0.0972,     0.4004,     0.1221]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0375, -0.0246, -0.0156,  ..., -0.0147, -0.0204,  0.0009],
        [-0.0211,  0.0175, -0.0195,  ...,  0.0126, -0.0086, -0.0554],
        [ 0.0242,  0.0144,  0.0146,  ...,  0.0141,  0.0333,  0.0203],
        ...,
        [ 0.0163, -0.0222,  0.0368,  ...,  0.0282, -0.0304, -0.0105],
        [-0.0182, -0.0075,  0.0212,  ...,  0.0088,  0.0312,  0.0111],
        [ 0.0248,  0.0552,  0.0189,  ..., -0.0172,  0.0004,  0.0227]], device='cuda:0', requires_grad=True)
K: tensor([ 3.7188,  0.1895, -1.0391, -0.0088, -2.6719, -0.3418, -1.2734,  0.5312, -1.0703, -0.0713, -0.2109,  2.3125, -2.0938,  1.5156,  0.6133, -2.8594,  1.8672, -0.0874,  1.3828,  1.0938,  0.4590,  1.5703,  2.4062, -4.4688,  0.7227, -1.8047, -2.9844,  0.8477,  2.0938,  0.1543,  2.7656,  0.9922,
         0.3730, -0.4336, -2.2500, -0.3379, -0.0684,  1.1797, -1.5703,  1.1484,  1.1953, -1.0547, -0.4941,  1.7891,  1.2422,  0.8125, -2.5938, -1.5547,  1.4609,  0.6055, -1.6719,  1.3984, -0.9922,  0.6445, -1.0391, -1.3438,  0.7344,  0.4453, -1.7891,  2.1719,  0.8438,  1.1094,  2.5156, -0.5938],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0357, -0.0032, -0.0118,  ...,  0.0045,  0.0305, -0.0121],
        [ 0.0136,  0.0078, -0.0516,  ..., -0.0120, -0.0113, -0.0167],
        [ 0.0490,  0.0018,  0.0329,  ..., -0.0195,  0.0241,  0.0060],
        ...,
        [-0.0293, -0.0094,  0.0076,  ...,  0.0082, -0.0001, -0.0352],
        [ 0.0387,  0.0100, -0.0068,  ...,  0.0087,  0.0033, -0.0083],
        [ 0.0006, -0.0360, -0.0271,  ...,  0.0106, -0.0040,  0.0193]], device='cuda:0', requires_grad=True)
Q: tensor([-0.1494, -1.9453, -3.1250, -2.5000,  0.3574, -0.9531,  0.1611,  0.2656,  1.1250,  0.8750,  1.2578, -0.1631,  0.3672, -0.2715, -1.0703, -0.4375, -1.9688, -1.7422, -1.3516,  1.6484, -2.8750, -0.0444, -0.5547,  1.1797, -0.2617, -1.1172,  0.7031, -0.5391, -2.1719,  0.3906,  1.7500, -0.0398,
        -1.8906,  0.2773, -2.0156,  0.4277,  2.2656,  1.2891,  0.8242,  1.0781,  1.7344, -0.3184, -0.5078,  2.2969,  1.0781, -0.1118,  0.2412, -2.9531,  1.9375,  0.5391, -1.7266,  2.6094,  0.2773, -2.0938, -0.3535,  0.5664,  1.1406,  0.7695, -0.5156, -0.3066,  0.4219,  0.7344,  4.3125, -1.3281],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -2.1406,     -1.7031,     -3.2188,     -1.4062,     -1.7031,     -1.1875,     -3.3438,     -1.7656,     -2.5156,     -0.8945,     -2.5469,     -2.9375,     -1.5000,     -0.3926],
        [     0.0000,      0.7734,     -1.3594,     -1.4375,     -0.3848,     -0.0317,      0.9531,     -0.6289,      0.7227,      0.5781,      1.7266,      1.5469,      0.3047,      1.5703,      2.6406],
        [     0.0000,      0.0879,      0.1196,     -2.0938,     -0.9688,     -0.2080,      1.0625,     -0.0061,      0.7617,      1.5391,      1.7344,      1.8281,      1.7656,      2.0312,      3.7969],
        [     0.0000,      1.5781,     -0.5742,      0.4707,     -0.0913,      2.0781,      2.5938,      1.5859,      4.6250,      2.5781,      4.7500,      2.6719,      3.2656,      6.0938,      4.9688],
        [     0.0000,      0.1904,     -1.4688,     -1.5547,      0.0972,     -0.8164,      1.4531,      0.6758,      2.7344,      1.3750,      3.6719,      2.5625,      2.5781,      4.1875,      3.7031],
        [     0.0000,      0.3340,     -1.0625,     -1.1719,      0.2812,      0.8906,      0.5820,      1.3125,      3.8438,      1.3203,      3.4375,      1.9062,      3.1406,      5.2188,      4.2500],
        [     0.0000,     -0.5234,     -1.8203,     -2.5000,     -0.5312,      0.3711,      1.8594,     -0.5430,      2.0625,      0.5039,      3.3438,      1.8906,      1.6875,      3.6094,      3.7969],
        [     0.0000,     -0.6211,     -2.1875,     -3.3594,     -0.8008,      0.1709,      2.1094,     -0.2852,      0.2949,      0.5195,      3.2812,      0.8789,      1.1172,      2.0625,      3.4375],
        [     0.0000,      0.5742,     -0.8359,     -0.7266,      0.4141,      0.7930,      1.4531,      1.7188,      3.8906,      1.0234,      4.0938,      3.4531,      4.1875,      5.5000,      4.2500],
        [     0.0000,     -1.4844,     -3.2969,     -3.3438,     -1.2188,     -0.4141,      1.3672,     -1.8594,      2.1562,     -0.0396,      1.1562,      0.8047,      0.3984,      3.8125,      2.1719],
        [     0.0000,      0.7031,     -0.4062,     -0.7930,      0.2500,      1.9297,      3.5000,      3.1250,      2.6875,      3.3594,      4.8750,      2.8594,      4.1875,      4.5312,      6.3750],
        [     0.0000,     -2.2500,     -2.2500,     -2.6875,     -0.5039,      0.2051,      1.7891,      0.6367,      2.0469,      0.8789,      2.9062,      1.4688,      1.7500,      3.6250,      3.4219],
        [     0.0000,     -1.8516,     -3.0312,     -4.4375,     -1.8594,     -0.6797,      1.5391,     -0.9570,     -0.9492,     -0.0366,      2.4219,     -0.1011,      0.4453,      0.7539,      2.5469],
        [     0.0000,     -0.0928,     -1.7344,     -2.1250,     -0.5977,      0.6211,      1.9766,      1.1094,      2.6562,      1.5859,      3.2500,      2.9844,      3.0156,      4.4375,      3.2344]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7700],
        [0.4547],
        [0.3936],
        [0.5349],
        [0.4518],
        [0.3278],
        [0.2123],
        [0.3057],
        [0.1843],
        [0.3227],
        [0.1052],
        [0.1029],
        [0.2485],
        [0.1427]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0098,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9609,     0.0217,     0.0168,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9414,     0.0359,     0.0099,     0.0141,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9805,     0.0093,     0.0022,     0.0013,     0.0068,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9766,     0.0076,     0.0044,     0.0011,     0.0066,     0.0025,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8555,     0.0327,     0.0162,     0.0146,     0.0089,     0.0142,     0.0569,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7773,     0.0195,     0.0280,     0.0121,     0.0128,     0.0199,     0.0369,     0.0933,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9648,     0.0057,     0.0023,     0.0012,     0.0035,     0.0031,     0.0100,     0.0053,     0.0051,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9805,     0.0038,     0.0007,     0.0009,     0.0008,     0.0008,     0.0026,     0.0052,     0.0019,     0.0035,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9648,     0.0104,     0.0025,     0.0034,     0.0012,     0.0013,     0.0047,     0.0089,     0.0026,     0.0014,     0.0007,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9219,     0.0067,     0.0022,     0.0027,     0.0025,     0.0015,     0.0056,     0.0251,     0.0044,     0.0056,     0.0007,     0.0223,     0.0000,     0.0000,     0.0000],
        [    0.6875,     0.0038,     0.0074,     0.0044,     0.0030,     0.0068,     0.0079,     0.0928,     0.0075,     0.0236,     0.0011,     0.0273,     0.1270,     0.0000,     0.0000],
        [    0.9688,     0.0031,     0.0014,     0.0008,     0.0023,     0.0019,     0.0054,     0.0054,     0.0033,     0.0013,     0.0006,     0.0010,     0.0040,     0.0029,     0.0000],
        [    0.8750,     0.0132,     0.0049,     0.0046,     0.0079,     0.0060,     0.0171,     0.0160,     0.0110,     0.0060,     0.0026,     0.0029,     0.0101,     0.0098,     0.0117]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[     0.0086,     -0.0083,      0.0423,  ...,     -0.0010,     -0.0165,     -0.0232],
        [     0.0560,     -0.0519,     -0.0074,  ...,     -0.0176,     -0.0159,     -0.0407],
        [     0.0511,     -0.0349,      0.0481,  ...,     -0.0156,     -0.0149,     -0.0067],
        ...,
        [     0.0341,      0.0234,     -0.0274,  ...,     -0.0054,      0.0078,      0.0260],
        [     0.0178,      0.0140,      0.0033,  ...,     -0.0122,     -0.0431,     -0.0314],
        [     0.0218,     -0.0116,      0.0088,  ...,     -0.0001,     -0.0112,      0.0063]], device='cuda:0', requires_grad=True)
K: tensor([-0.7695, -0.5625, -0.2910, -0.2129, -2.0781,  0.9492, -1.4844,  2.5781, -1.5234, -1.1250,  1.6406,  1.9688, -1.2812, -1.6562, -1.3594,  0.1011,  1.7266,  1.0234, -0.4199,  1.1094,  2.2812,  0.6719, -1.9219,  0.1387,  1.4531, -1.9297, -0.3867, -1.9922,  1.7656, -0.0327,  1.5312,  2.5000,
         0.0187,  1.0547,  2.4375, -0.4473, -1.2812,  1.9453,  1.5859, -2.3750,  2.2656, -1.2031, -0.0923,  1.5469,  0.0874,  2.5312, -0.8555, -2.6562, -0.6953,  2.8438, -1.2500,  0.6641,  1.3047, -1.2969,  1.9609, -1.7812, -2.0000, -2.3594, -1.1953, -0.6680, -2.5000, -1.0938,  1.2422,  0.6602],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0046,  0.0414,  0.0150,  ..., -0.0091,  0.0354, -0.0063],
        [-0.0077,  0.0438, -0.0026,  ...,  0.0124,  0.0181,  0.0027],
        [-0.0289, -0.0066,  0.0181,  ..., -0.0276,  0.0654, -0.0381],
        ...,
        [ 0.0315, -0.0143,  0.0157,  ..., -0.0161, -0.0086, -0.0103],
        [ 0.0026,  0.0159, -0.0021,  ...,  0.0201,  0.0155,  0.0129],
        [ 0.0092, -0.0333, -0.0179,  ...,  0.0335,  0.0211,  0.0088]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.6758,  0.9102, -1.2344,  0.6016, -0.0201, -1.5078,  0.3105, -0.0245, -0.2812,  0.2295, -0.0282, -0.5977,  0.8516,  1.1094,  0.0383, -1.3359, -0.0820, -1.4609,  0.1875,  0.2217,  0.0747,  1.3906,  0.6836,  0.2637,  1.5703,  0.8477,  0.3652,  0.2373, -0.6289, -0.7344,  0.3145, -0.2988,
        -1.7500, -0.7812, -0.1436,  0.1328,  0.7305, -1.1484,  0.7852,  0.7344, -2.1406,  1.6172, -0.5664, -0.0410, -0.0029,  0.2676, -0.0123,  0.3223, -0.1406,  0.0640,  0.1235, -1.2578,  0.1348, -0.4707, -0.0039,  0.8242, -0.1123,  1.2891,  1.0625,  2.0781,  1.2344,  0.7734, -1.6172,  0.1089],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -4.6250, -5.9062, -6.0312, -6.1875, -6.9062, -5.6250, -5.5312, -6.2188, -6.7188, -7.2500, -6.3750, -6.4062, -6.4688, -6.0000],
        [ 0.0000, -3.7969, -4.0312, -4.9062, -5.7812, -6.0312, -4.9062, -4.0625, -5.6562, -5.7188, -6.6875, -5.1562, -4.9688, -5.9688, -5.1562],
        [ 0.0000, -3.2656, -4.5625, -4.1875, -5.0938, -5.0312, -3.9531, -4.8125, -5.2188, -5.2500, -5.2500, -5.7188, -5.2500, -5.3438, -4.3750],
        [ 0.0000, -4.6562, -6.0938, -6.6250, -4.9688, -5.7812, -4.3125, -4.1562, -5.0000, -6.4688, -6.5625, -6.1250, -4.9062, -5.0938, -5.6250],
        [ 0.0000, -4.8438, -5.4062, -6.8125, -5.0000, -5.9375, -4.3750, -4.9062, -5.3438, -6.6250, -6.5000, -6.1250, -5.2812, -5.5312, -5.3438],
        [ 0.0000, -3.2656, -3.9688, -4.0625, -4.5625, -4.0938, -2.7188, -2.6875, -3.6562, -5.1250, -5.1562, -4.1250, -3.1875, -3.7969, -4.2500],
        [ 0.0000, -3.6875, -3.3281, -4.1562, -4.0938, -3.6562, -3.0469, -2.1250, -3.7812, -3.0625, -4.5312, -2.7656, -2.2656, -3.7812, -3.8594],
        [ 0.0000, -5.1250, -6.0312, -6.7188, -5.6250, -5.7500, -4.5625, -5.1875, -5.2500, -6.6875, -6.8125, -6.7500, -5.4062, -5.4062, -5.4062],
        [ 0.0000, -5.5625, -7.2500, -7.0312, -7.1562, -7.0625, -5.9062, -5.2500, -6.2812, -5.6250, -7.7188, -6.4375, -5.9688, -6.0312, -6.3438],
        [ 0.0000, -4.5312, -5.9688, -5.6562, -6.6562, -6.6250, -5.3125, -4.6875, -5.9062, -6.5625, -7.2188, -6.0625, -5.4688, -5.9375, -6.4375],
        [ 0.0000, -4.9062, -6.0312, -5.8438, -5.9062, -6.4062, -5.0938, -3.5938, -5.3438, -5.0938, -7.2188, -3.7188, -3.7969, -5.3438, -6.3750],
        [ 0.0000, -5.1875, -4.5312, -5.0625, -5.4375, -4.6250, -4.4688, -2.0000, -4.5000, -3.3750, -6.4688, -3.2188, -1.6875, -4.4688, -5.5312],
        [ 0.0000, -5.7500, -6.5625, -7.1250, -6.0625, -6.2500, -5.1875, -5.1875, -5.6875, -6.6250, -7.3750, -6.9062, -5.4688, -5.8125, -6.0000],
        [ 0.0000, -4.1875, -5.1875, -5.2500, -4.7188, -4.9688, -3.9375, -4.0000, -4.3750, -5.0000, -5.8125, -5.7188, -4.4688, -4.5000, -4.3125]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9788],
        [0.9912],
        [0.9746],
        [0.9899],
        [0.9733],
        [0.9674],
        [0.9102],
        [0.9717],
        [0.9919],
        [0.9915],
        [0.9749],
        [0.9603],
        [0.9814],
        [0.9714]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1118,     0.8867,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0349,     0.5820,     0.3809,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0439,     0.2852,     0.6172,     0.0530,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0413,     0.3926,     0.4453,     0.0566,     0.0640,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0420,     0.6016,     0.1699,     0.0535,     0.0613,     0.0708,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0057,     0.2598,     0.0270,     0.0108,     0.0102,     0.0141,     0.6719,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0041,     0.0469,     0.0417,     0.0081,     0.0027,     0.0146,     0.7734,     0.1069,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0140,     0.0698,     0.0037,     0.0017,     0.0011,     0.0029,     0.8633,     0.0135,     0.0291,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0143,     0.0559,     0.0153,     0.0049,     0.0068,     0.0189,     0.3652,     0.0688,     0.1602,     0.2910,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0112,     0.0146,     0.0050,     0.0023,     0.0035,     0.0095,     0.3594,     0.0369,     0.0220,     0.4707,     0.0640,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0093,     0.0154,     0.0144,     0.0052,     0.0039,     0.0083,     0.2061,     0.1914,     0.0286,     0.2373,     0.0796,     0.2012,     0.0000,     0.0000,     0.0000],
        [    0.0123,     0.0226,     0.0117,     0.0027,     0.0016,     0.0070,     0.1367,     0.0496,     0.0408,     0.2393,     0.0588,     0.2324,     0.1836,     0.0000,     0.0000],
        [    0.0244,     0.0303,     0.0018,     0.0007,     0.0007,     0.0015,     0.1719,     0.0075,     0.0107,     0.2812,     0.2344,     0.1143,     0.0669,     0.0544,     0.0000],
        [    0.0069,     0.0129,     0.0032,     0.0017,     0.0028,     0.0059,     0.0591,     0.0317,     0.0262,     0.0801,     0.0496,     0.1338,     0.1143,     0.1416,     0.3301]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[    -0.0045,      0.0090,     -0.0096,  ...,     -0.0333,     -0.0083,     -0.0232],
        [    -0.0463,      0.0196,     -0.0188,  ...,      0.0026,      0.0029,     -0.0000],
        [    -0.0473,     -0.0122,      0.0398,  ...,     -0.0202,     -0.0315,     -0.0273],
        ...,
        [    -0.0046,     -0.0007,     -0.0117,  ...,     -0.0259,     -0.0453,     -0.0471],
        [    -0.0203,     -0.0280,     -0.0287,  ...,     -0.0153,     -0.0101,      0.0574],
        [    -0.0074,      0.0217,      0.0209,  ...,     -0.0090,      0.0111,     -0.0145]], device='cuda:0', requires_grad=True)
K: tensor([-1.9609, -2.0000, -0.3242,  1.1250, -0.1572, -2.2969, -1.5469, -0.1660,  0.1270, -1.6094, -0.1533, -2.2344,  2.5156, -1.7109, -0.3770,  2.0625,  2.9688,  0.2559,  0.7422, -0.2578,  0.8125, -2.2812,  1.0703, -1.8516, -0.6523,  1.2656, -0.5312,  1.4297,  0.8281,  1.9922, -0.5898, -2.2656,
        -0.4766, -1.6484,  2.0156, -0.7539,  2.8281, -0.0464, -1.4375, -0.0771, -2.4531,  1.3359,  0.7305,  1.7734,  0.7578, -0.0118, -2.2500, -0.5547,  1.7344, -0.1216,  1.1562, -0.4453, -0.0977, -1.9375, -1.7031, -1.9766,  2.1562, -0.9531, -0.3906,  1.5469,  0.0491, -1.1250,  1.9141, -0.7266],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0049, -0.0066,  0.0147,  ...,  0.0242, -0.0253, -0.0139],
        [ 0.0423, -0.0049,  0.0112,  ...,  0.0027,  0.0218,  0.0204],
        [-0.0178,  0.0125,  0.0474,  ...,  0.0239,  0.0225, -0.0117],
        ...,
        [ 0.0172,  0.0012, -0.0259,  ...,  0.0018,  0.0061, -0.0024],
        [-0.0115,  0.0433, -0.0311,  ...,  0.0012,  0.0090, -0.0380],
        [ 0.0060, -0.0135,  0.0006,  ...,  0.0134, -0.0030,  0.0064]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.1128, -0.5938, -2.0312,  1.5547, -1.6797, -0.9219, -0.2773,  0.3574,  0.5703, -0.4238, -0.8711, -0.5234, -2.2344, -2.1406,  1.0156, -0.6445, -0.7461, -0.7266,  0.8828, -0.9805, -0.1924,  1.0938, -0.7578, -2.1562, -0.2559, -1.3672,  2.0781,  3.1094, -1.3984,  1.2656,  0.5898, -1.0234,
        -1.0625,  0.2217, -1.3672, -1.9062,  1.6953, -1.3672, -2.3438,  0.3652, -0.1104, -0.1348,  2.5156, -1.0000, -1.5625, -0.9688, -0.8672, -2.2969,  1.7500,  1.2578,  0.6523, -0.7930, -1.5547, -0.5820, -0.9961, -1.3828, -0.4043,  0.2598, -0.4941,  1.5469, -0.5781,  0.2119,  0.6523, -1.2969],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  2.0781,  1.2891,  0.8750,  0.9531,  1.1797,  3.5312,  2.5625,  2.3906,  2.7031,  2.2812,  2.5156,  2.6719,  2.7344,  3.1406],
        [ 0.0000,  2.8125,  2.3906,  1.2344,  0.9062,  1.6562,  4.5625,  4.0625,  3.0625,  4.5312,  3.7344,  5.0000,  5.0625,  3.9844,  5.5000],
        [ 0.0000,  1.8672,  2.6406,  0.1875,  0.8086,  2.3906,  3.6719,  3.9062,  3.0938,  4.9375,  4.3438,  7.0312,  5.8750,  4.9375,  6.6875],
        [ 0.0000,  2.2500,  2.3750,  0.3164,  0.4355,  1.8203,  4.3125,  3.2812,  3.5938,  5.2188,  3.4375,  5.4688,  4.6875,  4.9375,  5.3438],
        [ 0.0000,  2.6562,  1.3984,  0.2373,  0.3730,  0.5234,  3.3906,  2.2812,  3.5156,  3.9062,  3.9219,  4.9688,  3.6250,  5.0938,  5.9375],
        [ 0.0000,  3.8125,  1.5469,  0.6328,  0.5781,  0.9023,  4.7812,  3.4375,  3.1250,  3.7812,  2.3281,  3.9844,  3.6875,  3.6250,  5.5625],
        [ 0.0000,  2.4531,  2.3281,  0.6914, -0.3965,  1.2812,  5.2500,  3.2656,  3.3125,  5.0938,  3.8125,  5.5938,  5.0312,  4.4062,  6.1250],
        [ 0.0000,  1.6094, -1.3438, -2.0938, -2.5156, -1.5625,  4.1250, -0.0403,  0.7266,  3.6875,  3.7344,  2.6250,  1.6172,  1.7109,  4.2188],
        [ 0.0000,  1.3594,  0.0645, -1.0703, -0.7383,  0.2832,  3.2344,  1.5703,  2.4062,  3.0156,  2.8438,  3.5156,  2.8750,  3.7969,  5.2812],
        [ 0.0000,  0.2695, -0.8008, -1.5547, -1.1719, -0.1641,  3.4688,  1.1953,  0.6797,  3.7500,  1.7422,  3.6406,  3.1562,  2.0469,  5.2812],
        [ 0.0000,  0.5039,  0.4395, -0.5742, -0.8555, -0.1143,  3.0938,  3.0312,  1.1250,  3.2344,  2.1406,  3.0781,  4.4688,  2.8438,  4.7500],
        [ 0.0000,  0.6133, -0.0479, -1.5000, -2.0469, -0.5547,  2.4219,  1.3984,  1.2031,  2.9688,  1.5703,  2.9375,  2.7031,  2.8906,  4.2812],
        [ 0.0000,  0.2158, -2.5938, -3.4844, -3.5469, -2.8125,  1.9531, -1.1719, -0.8203,  2.4375,  2.2656,  1.5469,  1.0078,  0.8047,  3.4375],
        [ 0.0000,  0.6367, -0.7617, -1.3828, -0.8945, -0.1494,  2.1562,  1.5312,  1.3438,  2.4531,  1.9766,  2.9688,  2.8125,  3.0312,  3.8750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3797],
        [0.1152],
        [0.1232],
        [0.1211],
        [0.1036],
        [0.2835],
        [0.1013],
        [0.1045],
        [0.0843],
        [0.1017],
        [0.1263],
        [0.0800],
        [0.1146],
        [0.1103]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0103, 0.9883, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0176, 0.9453, 0.0388, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0156, 0.8945, 0.0422, 0.0476, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0018, 0.6797, 0.2188, 0.0603, 0.0371, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0115, 0.5625, 0.0972, 0.0215, 0.1240, 0.1816, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0205, 0.4375, 0.2910, 0.0349, 0.0156, 0.0645, 0.1367, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0054, 0.1943, 0.0884, 0.0064, 0.0466, 0.0220, 0.0376, 0.5977, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0217, 0.4258, 0.0894, 0.0225, 0.0299, 0.0325, 0.0659, 0.2773, 0.0354, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0183, 0.4199, 0.0579, 0.0134, 0.0125, 0.0110, 0.1270, 0.2129, 0.0371, 0.0894, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0212, 0.3574, 0.0344, 0.0128, 0.0194, 0.0156, 0.1074, 0.1650, 0.0378, 0.0820, 0.1465, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0104, 0.5742, 0.0308, 0.0286, 0.0053, 0.0149, 0.1348, 0.1187, 0.0074, 0.0267, 0.0320, 0.0150, 0.0000, 0.0000, 0.0000],
        [0.0094, 0.1318, 0.0352, 0.0028, 0.0267, 0.0094, 0.0210, 0.1348, 0.0452, 0.1543, 0.0320, 0.1523, 0.2451, 0.0000, 0.0000],
        [0.0330, 0.1904, 0.0153, 0.0092, 0.0166, 0.0089, 0.0289, 0.0359, 0.0181, 0.1475, 0.0791, 0.0544, 0.3145, 0.0498, 0.0000],
        [0.0220, 0.3770, 0.0156, 0.0153, 0.0226, 0.0133, 0.3301, 0.0278, 0.0129, 0.0092, 0.0322, 0.0181, 0.0383, 0.0121, 0.0530]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[    -0.0146,     -0.0271,     -0.0070,  ...,     -0.0052,      0.0181,     -0.0145],
        [     0.0250,     -0.0530,     -0.0029,  ...,      0.0351,      0.0226,      0.0001],
        [    -0.0011,     -0.0303,     -0.0398,  ...,      0.0379,      0.0089,     -0.0164],
        ...,
        [     0.0231,      0.0148,     -0.0140,  ...,     -0.0145,      0.0097,      0.0197],
        [     0.0230,     -0.0073,      0.0217,  ...,      0.0277,     -0.0093,      0.0154],
        [    -0.0376,      0.0412,     -0.0057,  ...,      0.0041,      0.0242,      0.0446]], device='cuda:0', requires_grad=True)
K: tensor([-0.6602, -0.5195, -0.3887,  0.5234, -0.8125,  0.4805,  0.3281, -0.1533, -0.4941, -3.3594, -2.1719, -1.4766, -0.2773, -1.0625, -1.7266,  1.3828,  2.1562,  1.6562, -2.3594, -0.7031,  1.5547, -0.9727, -2.0469,  0.3301,  1.0547, -1.6797, -0.8438,  0.9258, -0.9258, -1.9688, -0.2988,  0.7461,
        -2.7656,  2.2500,  3.9219,  0.6211,  0.3145, -1.3750, -0.1211, -2.1094, -0.7773, -0.3008, -2.2500,  1.0625,  0.3320,  0.1172, -0.7227,  1.8438, -1.3516, -1.5547,  0.4082,  1.8828,  1.9375, -0.1963, -0.1846,  0.2832, -0.0684, -2.7812, -1.0703,  0.9414,  1.0859, -0.5273,  1.4531, -1.9609],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0001, -0.0081, -0.0061,  ..., -0.0366, -0.0287, -0.0216],
        [ 0.0038,  0.0021, -0.0085,  ...,  0.0065, -0.0219,  0.0363],
        [ 0.0200, -0.0128, -0.0010,  ..., -0.0103, -0.0249, -0.0139],
        ...,
        [ 0.0316, -0.0511, -0.0333,  ...,  0.0088,  0.0185, -0.0087],
        [ 0.0198, -0.0030,  0.0584,  ...,  0.0202,  0.0069,  0.0114],
        [-0.0126, -0.0094, -0.0157,  ...,  0.0142,  0.0105, -0.0153]], device='cuda:0', requires_grad=True)
Q: tensor([-0.0066,  1.3359,  0.2930,  0.8867, -0.0737, -1.5547,  0.1309, -2.6875, -1.3516,  0.0352, -0.1650,  0.6992,  1.0312,  0.2051, -1.1250, -0.9141,  0.1807,  0.3418, -0.6289,  0.5430, -0.0435, -0.6094,  1.2344, -0.6016,  0.8086,  0.4473, -1.1328,  1.4453, -1.2109,  1.2969, -1.2891, -1.7266,
        -0.0415,  0.6406, -1.3281, -0.8242, -0.3281,  0.2832,  2.2344, -1.0078,  0.1367,  0.0879, -0.7500,  0.4336, -0.1416,  1.1641, -0.4590,  1.9297,  0.8086, -1.1875,  0.7812,  1.5625, -0.4141,  0.4102, -0.3594,  0.4883, -2.5781,  0.3105,  0.2158,  0.4160,  0.4570, -0.6562, -0.7305, -0.9375],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      4.5625,      1.9531,      1.4766,      1.3047,      2.3281,      3.2656,      2.5469,      1.7578,      2.0156,      2.3594,      1.5391,      3.0000,      1.5391,      2.3594],
        [     0.0000,      3.9844,      0.7891,      1.4766,      1.6172,      2.1094,      3.2188,      1.2578,      0.2168,      0.0050,      0.5859,     -1.1172,      1.3203,     -0.1699,     -0.0933],
        [     0.0000,      4.0625,      0.9961,      1.1172,      1.8828,      1.3984,      3.3594,      2.1250,      1.0078,      0.6953,      0.5703,     -0.6211,      1.8047,      0.4414,      0.0266],
        [     0.0000,      5.9062,      4.7812,      3.4844,      3.0000,      4.8438,      3.8438,      6.8125,      2.6719,      4.5938,      2.5938,      4.5312,      6.7188,      1.8125,      2.5156],
        [     0.0000,      3.8906,      2.1406,      0.6250,      2.3750,      2.7656,      2.6875,      3.1719,      1.5938,      2.2031,      1.1094,      2.3125,      3.0156,      0.8672,      1.9609],
        [     0.0000,      3.0625,      2.6562,      0.5312,     -0.2754,      1.1484,      1.8984,      3.8594,      0.0840,      1.9141,     -0.1406,      2.4688,      2.9844,     -0.6523,      1.2578],
        [     0.0000,      3.5781,      2.7969,      0.1680,      2.1562,      1.3984,      1.9375,      4.7188,      2.9219,      4.0000,      2.1875,      3.9844,      4.9062,      2.9688,      4.7812],
        [     0.0000,      2.9688,      1.4141,      0.0312,      0.3184,      0.4023,      1.1094,      2.5469,      0.4902,      3.1562,      1.0156,      1.8828,      3.6406,      0.3438,      1.6719],
        [     0.0000,      3.1250,      1.1484,     -0.3145,     -0.3887,     -0.5117,      1.9297,      2.4531,      0.7070,      1.5859,      1.7734,      1.6406,      3.3125,      0.7148,      1.9453],
        [     0.0000,      2.8281,      0.4883,     -0.5078,     -0.0894,     -0.3008,      1.6250,      2.0469,      0.5820,      1.3594,      1.9297,      1.9766,      3.0938,      0.7812,      1.4766],
        [     0.0000,      4.0312,      1.0938,      1.0156,     -0.6602,      0.3613,      2.5625,      2.4375,     -0.3398,      0.9453,      1.1250,      0.3672,      3.6406,     -0.0322,      1.0000],
        [     0.0000,      2.6406,      1.3125,     -1.1953,      1.0469,     -0.0016,      0.8008,      2.6562,      1.5703,      2.7969,      1.2266,      2.7812,      3.2656,      2.3281,      3.7812],
        [     0.0000,      1.7500,     -0.7656,     -1.2812,     -0.6836,     -1.3125,     -0.1289,      0.0874,     -0.5977,      1.5000,      0.8750,      0.5039,      2.2500,      0.4141,      1.0156],
        [     0.0000,      2.8438,     -0.3438,     -0.3652,      0.0238,     -0.5039,      2.7031,      0.2324,     -0.5312,     -0.8750,      0.3789,     -0.2002,      0.5547,     -0.5938,      0.8789]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0162],
        [0.0065],
        [0.0071],
        [0.0031],
        [0.0091],
        [0.0069],
        [0.0046],
        [0.0054],
        [0.0054],
        [0.0119],
        [0.0058],
        [0.0069],
        [0.0074],
        [0.0044]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.1777 a:0.1670,:0.2832 white:0.1030atoes:0.5039 are:0.5078 a:0.0723iced:0.2012)
iced
------
		( a:0.1670,:0.2832 white:0.1030atoes:0.5039 are:0.5078 a:0.0723iced:0.2012 with:0.1855)
 with a little bit of sugar.
- The leaves are white, and
@ 12050 train 3.8868 , allloss: 3.8973, dt: 1674.26ms, fracRes: 0.5950, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6134, norm(y): 0.9836, norm:1.0571, tok/sec: 78286.44, flops:68.55, batch-reuse:1
@ 12051 train 3.8893 , allloss: 3.8998, dt: 1271.15ms, fracRes: 0.5953, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6151, norm(y): 0.9835, norm:0.7943, tok/sec: 103112.96, flops:90.29, batch-reuse:1
@ 12052 train 3.8919 , allloss: 3.9022, dt: 1276.69ms, fracRes: 0.5959, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6117, norm(y): 0.9836, norm:0.9812, tok/sec: 102665.79, flops:89.90, batch-reuse:1
@ 12053 train 3.8801 , allloss: 3.8907, dt: 1288.15ms, fracRes: 0.5952, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6134, norm(y): 0.9836, norm:0.7475, tok/sec: 101751.89, flops:89.10, batch-reuse:1
@ 12054 train 3.9184 , allloss: 3.9291, dt: 1253.92ms, fracRes: 0.5951, norm(attn): 0.1699, norm(output): 0.2617, norm(x): 0.6126, norm(y): 0.9836, norm:1.0104, tok/sec: 104529.77, flops:91.54, batch-reuse:1
@ 12055 train 3.7879 , allloss: 3.7986, dt: 1271.71ms, fracRes: 0.5959, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6124, norm(y): 0.9836, norm:0.8830, tok/sec: 103067.61, flops:90.25, batch-reuse:1
@ 12056 train 3.9088 , allloss: 3.9195, dt: 1272.17ms, fracRes: 0.5968, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6131, norm(y): 0.9832, norm:0.7651, tok/sec: 103030.66, flops:90.22, batch-reuse:1
@ 12057 train 3.7953 , allloss: 3.8059, dt: 1289.56ms, fracRes: 0.5963, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6130, norm(y): 0.9834, norm:0.8819, tok/sec: 101640.96, flops:89.01, batch-reuse:1
@ 12058 train 3.8508 , allloss: 3.8612, dt: 1283.21ms, fracRes: 0.5957, norm(attn): 0.1699, norm(output): 0.2617, norm(x): 0.6135, norm(y): 0.9833, norm:0.7272, tok/sec: 102144.24, flops:89.45, batch-reuse:1
@ 12059 train 3.8653 , allloss: 3.8761, dt: 1272.66ms, fracRes: 0.5958, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6147, norm(y): 0.9835, norm:0.8807, tok/sec: 102990.39, flops:90.19, batch-reuse:1
@ 12060 train 3.7704 , allloss: 3.7812, dt: 1285.05ms, fracRes: 0.5950, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6148, norm(y): 0.9832, norm:0.7253, tok/sec: 101997.41, flops:89.32, batch-reuse:1
@ 12061 train 3.8815 , allloss: 3.8919, dt: 1257.96ms, fracRes: 0.5936, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6101, norm(y): 0.9832, norm:0.8909, tok/sec: 104193.73, flops:91.24, batch-reuse:1
@ 12062 train 3.7540 , allloss: 3.7646, dt: 1251.03ms, fracRes: 0.5948, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6135, norm(y): 0.9836, norm:0.7365, tok/sec: 104770.85, flops:91.75, batch-reuse:1
@ 12063 train 3.7688 , allloss: 3.7796, dt: 1265.57ms, fracRes: 0.5958, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6120, norm(y): 0.9837, norm:0.8331, tok/sec: 103567.31, flops:90.69, batch-reuse:1
@ 12064 train 3.7651 , allloss: 3.7758, dt: 1255.34ms, fracRes: 0.5960, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6077, norm(y): 0.9836, norm:0.7681, tok/sec: 104411.64, flops:91.43, batch-reuse:1
@ 12065 train 3.7637 , allloss: 3.7746, dt: 1272.26ms, fracRes: 0.5965, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6101, norm(y): 0.9837, norm:0.7836, tok/sec: 103023.13, flops:90.22, batch-reuse:1
@ 12066 train 3.7710 , allloss: 3.7816, dt: 1260.75ms, fracRes: 0.5952, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6108, norm(y): 0.9834, norm:0.7442, tok/sec: 103963.63, flops:91.04, batch-reuse:1
@ 12067 train 3.8086 , allloss: 3.8196, dt: 1286.93ms, fracRes: 0.5957, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6134, norm(y): 0.9836, norm:0.7946, tok/sec: 101848.75, flops:89.19, batch-reuse:1
@ 12068 train 3.6851 , allloss: 3.6955, dt: 1289.96ms, fracRes: 0.5953, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6108, norm(y): 0.9835, norm:0.7199, tok/sec: 101609.32, flops:88.98, batch-reuse:1
@ 12069 train 3.8989 , allloss: 3.9097, dt: 1275.16ms, fracRes: 0.5947, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6114, norm(y): 0.9832, norm:0.8410, tok/sec: 102788.80, flops:90.01, batch-reuse:1
@ 12070 train 3.8145 , allloss: 3.8251, dt: 1288.72ms, fracRes: 0.5950, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6088, norm(y): 0.9834, norm:0.7975, tok/sec: 101706.81, flops:89.06, batch-reuse:1
@ 12071 train 3.8422 , allloss: 3.8527, dt: 1280.49ms, fracRes: 0.5960, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6103, norm(y): 0.9835, norm:0.7461, tok/sec: 102360.42, flops:89.64, batch-reuse:1
@ 12072 train 3.8702 , allloss: 3.8805, dt: 1254.86ms, fracRes: 0.5956, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6103, norm(y): 0.9834, norm:0.7760, tok/sec: 104451.26, flops:91.47, batch-reuse:1
@ 12073 train 3.8588 , allloss: 3.8695, dt: 1263.91ms, fracRes: 0.5965, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6128, norm(y): 0.9838, norm:0.8394, tok/sec: 103703.80, flops:90.81, batch-reuse:1
@ 12074 train 3.8217 , allloss: 3.8323, dt: 1281.39ms, fracRes: 0.5961, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6115, norm(y): 0.9834, norm:0.8730, tok/sec: 102288.77, flops:89.57, batch-reuse:1
@ 12075 train 3.7677 , allloss: 3.7783, dt: 1323.40ms, fracRes: 0.5957, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6079, norm(y): 0.9834, norm:0.7955, tok/sec: 99041.63, flops:86.73, batch-reuse:1
@ 12076 train 3.8164 , allloss: 3.8268, dt: 1267.32ms, fracRes: 0.5956, norm(attn): 0.1709, norm(output): 0.2559, norm(x): 0.6065, norm(y): 0.9835, norm:0.8916, tok/sec: 103424.56, flops:90.57, batch-reuse:1
@ 12077 train 3.9257 , allloss: 3.9364, dt: 1265.82ms, fracRes: 0.5955, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6090, norm(y): 0.9831, norm:0.8379, tok/sec: 103546.95, flops:90.67, batch-reuse:1
@ 12078 train 3.8407 , allloss: 3.8512, dt: 1268.06ms, fracRes: 0.5962, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6098, norm(y): 0.9834, norm:0.9392, tok/sec: 103363.85, flops:90.51, batch-reuse:1
@ 12079 train 3.8131 , allloss: 3.8236, dt: 1272.98ms, fracRes: 0.5967, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6116, norm(y): 0.9833, norm:0.9765, tok/sec: 102964.53, flops:90.16, batch-reuse:1
@ 12080 train 3.7802 , allloss: 3.7906, dt: 1289.89ms, fracRes: 0.5967, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6112, norm(y): 0.9833, norm:0.7019, tok/sec: 101614.51, flops:88.98, batch-reuse:1
@ 12081 train 3.7617 , allloss: 3.7723, dt: 1264.80ms, fracRes: 0.5964, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6138, norm(y): 0.9834, norm:0.8808, tok/sec: 103630.84, flops:90.75, batch-reuse:1
@ 12082 train 3.6877 , allloss: 3.6982, dt: 1261.59ms, fracRes: 0.5958, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6097, norm(y): 0.9832, norm:0.7159, tok/sec: 103894.61, flops:90.98, batch-reuse:1
@ 12083 train 3.7742 , allloss: 3.7847, dt: 1273.13ms, fracRes: 0.5954, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6090, norm(y): 0.9830, norm:0.9808, tok/sec: 102952.67, flops:90.15, batch-reuse:1
@ 12084 train 3.8439 , allloss: 3.8542, dt: 1248.93ms, fracRes: 0.5960, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6068, norm(y): 0.9832, norm:0.6959, tok/sec: 104947.40, flops:91.90, batch-reuse:1
@ 12085 train 3.7865 , allloss: 3.7994, dt: 1248.10ms, fracRes: 0.5953, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6066, norm(y): 0.9834, norm:0.9920, tok/sec: 105017.64, flops:91.96, batch-reuse:1
@ 12086 train 3.8292 , allloss: 3.8400, dt: 1265.11ms, fracRes: 0.5950, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6086, norm(y): 0.9835, norm:0.8355, tok/sec: 103605.00, flops:90.73, batch-reuse:1
@ 12087 train 3.8406 , allloss: 3.8515, dt: 1261.53ms, fracRes: 0.5958, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6101, norm(y): 0.9833, norm:0.8008, tok/sec: 103898.93, flops:90.98, batch-reuse:1
@ 12088 train 3.7718 , allloss: 3.7827, dt: 1308.82ms, fracRes: 0.5963, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6126, norm(y): 0.9834, norm:0.8216, tok/sec: 100145.20, flops:87.70, batch-reuse:1
@ 12089 train 3.7024 , allloss: 3.7132, dt: 1299.00ms, fracRes: 0.5956, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6144, norm(y): 0.9834, norm:0.8089, tok/sec: 100902.34, flops:88.36, batch-reuse:1
@ 12090 train 3.7728 , allloss: 3.7834, dt: 1278.20ms, fracRes: 0.5951, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6100, norm(y): 0.9835, norm:0.8358, tok/sec: 102543.85, flops:89.80, batch-reuse:1
@ 12091 train 3.6336 , allloss: 3.6446, dt: 1264.49ms, fracRes: 0.5954, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6118, norm(y): 0.9837, norm:0.7448, tok/sec: 103656.01, flops:90.77, batch-reuse:1
@ 12092 train 3.6381 , allloss: 3.6487, dt: 1268.67ms, fracRes: 0.5953, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6082, norm(y): 0.9834, norm:0.8460, tok/sec: 103314.53, flops:90.47, batch-reuse:1
@ 12093 train 3.7642 , allloss: 3.7750, dt: 1243.73ms, fracRes: 0.5955, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6110, norm(y): 0.9836, norm:0.8840, tok/sec: 105385.95, flops:92.28, batch-reuse:1
@ 12094 train 3.5774 , allloss: 3.5883, dt: 1271.74ms, fracRes: 0.5945, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6117, norm(y): 0.9836, norm:0.7438, tok/sec: 103064.84, flops:90.25, batch-reuse:1
@ 12095 train 3.6360 , allloss: 3.6469, dt: 1276.01ms, fracRes: 0.5953, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6106, norm(y): 0.9837, norm:0.7755, tok/sec: 102720.16, flops:89.95, batch-reuse:1
@ 12096 train 3.6221 , allloss: 3.6331, dt: 1286.36ms, fracRes: 0.5954, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6110, norm(y): 0.9836, norm:0.7623, tok/sec: 101893.34, flops:89.23, batch-reuse:1
@ 12097 train 3.7239 , allloss: 3.7344, dt: 1286.02ms, fracRes: 0.5952, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6076, norm(y): 0.9833, norm:0.8690, tok/sec: 101920.76, flops:89.25, batch-reuse:1
@ 12098 train 3.6544 , allloss: 3.6647, dt: 1265.25ms, fracRes: 0.5953, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6106, norm(y): 0.9833, norm:0.7840, tok/sec: 103593.64, flops:90.72, batch-reuse:1
@ 12099 train 3.7771 , allloss: 3.7880, dt: 1266.79ms, fracRes: 0.5951, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6143, norm(y): 0.9833, norm:0.7924, tok/sec: 103467.52, flops:90.61, batch-reuse:1
@ 12100 train 3.6241 , allloss: 3.6347, dt: 1266.24ms, fracRes: 0.5955, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6089, norm(y): 0.9834, norm:0.7972, tok/sec: 103512.42, flops:90.64, batch-reuse:1
@ 12101 train 3.7365 , allloss: 3.7474, dt: 1267.22ms, fracRes: 0.5955, norm(attn): 0.1719, norm(output): 0.2598, norm(x): 0.6113, norm(y): 0.9833, norm:0.7597, tok/sec: 103432.59, flops:90.57, batch-reuse:1
@ 12102 train 3.6155 , allloss: 3.6262, dt: 1270.55ms, fracRes: 0.5958, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6123, norm(y): 0.9834, norm:0.7532, tok/sec: 103161.76, flops:90.34, batch-reuse:1
@ 12103 train 3.5672 , allloss: 3.5778, dt: 1275.01ms, fracRes: 0.5956, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6106, norm(y): 0.9833, norm:0.7973, tok/sec: 102800.83, flops:90.02, batch-reuse:1
@ 12104 train 3.6584 , allloss: 3.6689, dt: 1267.62ms, fracRes: 0.5959, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6072, norm(y): 0.9833, norm:0.7442, tok/sec: 103400.38, flops:90.55, batch-reuse:1
@ 12105 train 3.6331 , allloss: 3.6437, dt: 1311.13ms, fracRes: 0.5962, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6063, norm(y): 0.9832, norm:0.8246, tok/sec: 99968.58, flops:87.54, batch-reuse:1
@ 12106 train 3.6484 , allloss: 3.6592, dt: 1306.09ms, fracRes: 0.5963, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6084, norm(y): 0.9832, norm:0.7647, tok/sec: 100354.85, flops:87.88, batch-reuse:1
@ 12107 train 3.6784 , allloss: 3.6895, dt: 1294.40ms, fracRes: 0.5963, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6094, norm(y): 0.9832, norm:0.7471, tok/sec: 101261.00, flops:88.67, batch-reuse:1
@ 12108 train 3.6694 , allloss: 3.6802, dt: 1256.14ms, fracRes: 0.5963, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6063, norm(y): 0.9832, norm:0.7392, tok/sec: 104345.35, flops:91.37, batch-reuse:1
@ 12109 train 3.7531 , allloss: 3.7639, dt: 1264.98ms, fracRes: 0.5964, norm(attn): 0.1719, norm(output): 0.2578, norm(x): 0.6071, norm(y): 0.9831, norm:0.8039, tok/sec: 103615.88, flops:90.73, batch-reuse:1
@ 12110 train 3.7182 , allloss: 3.7291, dt: 1254.71ms, fracRes: 0.5951, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6100, norm(y): 0.9830, norm:0.7725, tok/sec: 104464.18, flops:91.48, batch-reuse:1
@ 12111 train 3.8367 , allloss: 3.8471, dt: 1264.58ms, fracRes: 0.5947, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6096, norm(y): 0.9830, norm:0.7779, tok/sec: 103648.97, flops:90.76, batch-reuse:1
@ 12112 train 3.5587 , allloss: 3.5696, dt: 1268.98ms, fracRes: 0.5939, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6077, norm(y): 0.9831, norm:0.7664, tok/sec: 103289.18, flops:90.45, batch-reuse:1
@ 12113 train 3.6731 , allloss: 3.6846, dt: 1258.32ms, fracRes: 0.5942, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6055, norm(y): 0.9831, norm:0.7779, tok/sec: 104163.90, flops:91.21, batch-reuse:1
@ 12114 train 3.6190 , allloss: 3.6302, dt: 1271.33ms, fracRes: 0.5944, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6093, norm(y): 0.9833, norm:0.8530, tok/sec: 103098.49, flops:90.28, batch-reuse:1
@ 12115 train 3.5915 , allloss: 3.6023, dt: 1272.48ms, fracRes: 0.5941, norm(attn): 0.1699, norm(output): 0.2617, norm(x): 0.6088, norm(y): 0.9831, norm:0.7898, tok/sec: 103005.23, flops:90.20, batch-reuse:1
@ 12116 train 3.5980 , allloss: 3.6088, dt: 1277.15ms, fracRes: 0.5940, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6117, norm(y): 0.9832, norm:0.7856, tok/sec: 102628.23, flops:89.87, batch-reuse:1
@ 12117 train 3.7015 , allloss: 3.7122, dt: 1263.94ms, fracRes: 0.5948, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6108, norm(y): 0.9831, norm:0.7746, tok/sec: 103701.14, flops:90.81, batch-reuse:1
@ 12118 train 3.6398 , allloss: 3.6504, dt: 1294.04ms, fracRes: 0.5946, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6089, norm(y): 0.9831, norm:0.8645, tok/sec: 101289.01, flops:88.70, batch-reuse:1
@ 12119 train 3.5675 , allloss: 3.5782, dt: 1277.84ms, fracRes: 0.5944, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6083, norm(y): 0.9833, norm:0.7413, tok/sec: 102572.93, flops:89.82, batch-reuse:1
@ 12120 train 3.7212 , allloss: 3.7317, dt: 1276.14ms, fracRes: 0.5944, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6034, norm(y): 0.9832, norm:0.7907, tok/sec: 102709.87, flops:89.94, batch-reuse:1
@ 12121 train 3.5785 , allloss: 3.5894, dt: 1265.44ms, fracRes: 0.5948, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6071, norm(y): 0.9833, norm:0.7406, tok/sec: 103578.42, flops:90.70, batch-reuse:1
@ 12122 train 3.6938 , allloss: 3.7048, dt: 1268.17ms, fracRes: 0.5952, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6066, norm(y): 0.9833, norm:0.7803, tok/sec: 103355.47, flops:90.51, batch-reuse:1
@ 12123 train 3.6487 , allloss: 3.6591, dt: 1267.66ms, fracRes: 0.5959, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6079, norm(y): 0.9831, norm:0.7948, tok/sec: 103396.68, flops:90.54, batch-reuse:1
@ 12124 train 3.7569 , allloss: 3.7670, dt: 1258.90ms, fracRes: 0.5959, norm(attn): 0.1719, norm(output): 0.2598, norm(x): 0.6095, norm(y): 0.9830, norm:0.7889, tok/sec: 104116.16, flops:91.17, batch-reuse:1
@ 12125 train 3.5688 , allloss: 3.5792, dt: 1254.43ms, fracRes: 0.5961, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6119, norm(y): 0.9831, norm:0.7221, tok/sec: 104487.53, flops:91.50, batch-reuse:1
@ 12126 train 3.5066 , allloss: 3.5173, dt: 1268.19ms, fracRes: 0.5956, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6102, norm(y): 0.9834, norm:0.7392, tok/sec: 103353.31, flops:90.51, batch-reuse:1
@ 12127 train 3.8588 , allloss: 3.8702, dt: 1289.03ms, fracRes: 0.5958, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6136, norm(y): 0.9833, norm:1.0039, tok/sec: 101682.94, flops:89.04, batch-reuse:1
@ 12128 train 3.6417 , allloss: 3.6526, dt: 1311.86ms, fracRes: 0.5942, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6103, norm(y): 0.9831, norm:0.8140, tok/sec: 99912.75, flops:87.49, batch-reuse:1
@ 12129 train 3.6378 , allloss: 3.6482, dt: 1280.52ms, fracRes: 0.5940, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6083, norm(y): 0.9830, norm:0.7907, tok/sec: 102358.08, flops:89.63, batch-reuse:1
@ 12130 train 3.5463 , allloss: 3.5574, dt: 1262.67ms, fracRes: 0.5953, norm(attn): 0.1719, norm(output): 0.2598, norm(x): 0.6108, norm(y): 0.9831, norm:0.8631, tok/sec: 103805.17, flops:90.90, batch-reuse:1
@ 12131 train 3.6486 , allloss: 3.6592, dt: 1247.16ms, fracRes: 0.5955, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6101, norm(y): 0.9829, norm:0.7618, tok/sec: 105096.26, flops:92.03, batch-reuse:1
@ 12132 train 3.7795 , allloss: 3.7901, dt: 1293.23ms, fracRes: 0.5955, norm(attn): 0.1689, norm(output): 0.2578, norm(x): 0.6092, norm(y): 0.9830, norm:0.8737, tok/sec: 101352.44, flops:88.75, batch-reuse:1
@ 12133 train 3.6062 , allloss: 3.6167, dt: 1287.15ms, fracRes: 0.5958, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6075, norm(y): 0.9832, norm:0.7637, tok/sec: 101830.86, flops:89.17, batch-reuse:1
@ 12134 train 3.6092 , allloss: 3.6197, dt: 1294.76ms, fracRes: 0.5957, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6066, norm(y): 0.9832, norm:0.7895, tok/sec: 101232.79, flops:88.65, batch-reuse:1
@ 12135 train 3.6355 , allloss: 3.6463, dt: 1265.45ms, fracRes: 0.5960, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6040, norm(y): 0.9829, norm:0.8930, tok/sec: 103577.64, flops:90.70, batch-reuse:1
@ 12136 train 3.8119 , allloss: 3.8231, dt: 1279.21ms, fracRes: 0.5946, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6060, norm(y): 0.9826, norm:0.8288, tok/sec: 102463.37, flops:89.73, batch-reuse:1
@ 12137 train 4.0468 , allloss: 4.0576, dt: 1270.43ms, fracRes: 0.5939, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6085, norm(y): 0.9828, norm:0.7995, tok/sec: 103171.77, flops:90.35, batch-reuse:1
@ 12138 train 3.8845 , allloss: 3.8956, dt: 1240.57ms, fracRes: 0.5936, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6130, norm(y): 0.9827, norm:0.8289, tok/sec: 105654.94, flops:92.52, batch-reuse:1
@ 12139 train 3.9447 , allloss: 3.9554, dt: 1275.54ms, fracRes: 0.5931, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6112, norm(y): 0.9825, norm:0.9273, tok/sec: 102757.79, flops:89.98, batch-reuse:1
@ 12140 train 3.9117 , allloss: 3.9227, dt: 1268.36ms, fracRes: 0.5945, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6173, norm(y): 0.9825, norm:0.9682, tok/sec: 103339.99, flops:90.49, batch-reuse:1
@ 12141 train 4.0093 , allloss: 4.0199, dt: 1261.15ms, fracRes: 0.5945, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6144, norm(y): 0.9826, norm:0.7915, tok/sec: 103930.16, flops:91.01, batch-reuse:1
@ 12142 train 3.9078 , allloss: 3.9182, dt: 1254.88ms, fracRes: 0.5945, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6122, norm(y): 0.9828, norm:0.8160, tok/sec: 104450.15, flops:91.47, batch-reuse:1
@ 12143 train 3.8364 , allloss: 3.8474, dt: 1266.82ms, fracRes: 0.5949, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6115, norm(y): 0.9828, norm:0.9395, tok/sec: 103465.28, flops:90.60, batch-reuse:1
@ 12144 train 3.8963 , allloss: 3.9071, dt: 1266.09ms, fracRes: 0.5963, norm(attn): 0.1699, norm(output): 0.2617, norm(x): 0.6068, norm(y): 0.9828, norm:0.7876, tok/sec: 103524.76, flops:90.66, batch-reuse:1
@ 12145 train 3.9027 , allloss: 3.9134, dt: 1240.85ms, fracRes: 0.5959, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6066, norm(y): 0.9827, norm:0.9730, tok/sec: 105631.21, flops:92.50, batch-reuse:1
@ 12146 train 3.8300 , allloss: 3.8407, dt: 1250.65ms, fracRes: 0.5956, norm(attn): 0.1699, norm(output): 0.2617, norm(x): 0.6080, norm(y): 0.9828, norm:0.9008, tok/sec: 104803.39, flops:91.77, batch-reuse:1
@ 12147 train 3.9093 , allloss: 3.9202, dt: 1285.95ms, fracRes: 0.5951, norm(attn): 0.1689, norm(output): 0.2617, norm(x): 0.6088, norm(y): 0.9828, norm:0.8569, tok/sec: 101926.55, flops:89.26, batch-reuse:1
@ 12148 train 3.8203 , allloss: 3.8310, dt: 1257.52ms, fracRes: 0.5948, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6105, norm(y): 0.9827, norm:0.9038, tok/sec: 104230.16, flops:91.27, batch-reuse:1
@ 12149 train 3.9420 , allloss: 3.9531, dt: 1270.53ms, fracRes: 0.5953, norm(attn): 0.1719, norm(output): 0.2598, norm(x): 0.6112, norm(y): 0.9829, norm:0.8407, tok/sec: 103163.17, flops:90.34, batch-reuse:1
@ 12150 train 3.8990 , allloss: 3.9100, dt: 1283.60ms, fracRes: 0.5955, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6120, norm(y): 0.9825, norm:0.9366, tok/sec: 102112.57, flops:89.42, batch-reuse:1
@ 12151 train 3.8686 , allloss: 3.8794, dt: 1270.05ms, fracRes: 0.5956, norm(attn): 0.1699, norm(output): 0.2617, norm(x): 0.6096, norm(y): 0.9827, norm:0.8986, tok/sec: 103202.46, flops:90.37, batch-reuse:1
@ 12152 train 3.8976 , allloss: 3.9080, dt: 1263.24ms, fracRes: 0.5951, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6099, norm(y): 0.9826, norm:0.8146, tok/sec: 103758.39, flops:90.86, batch-reuse:1
@ 12153 train 4.0117 , allloss: 4.0229, dt: 1264.08ms, fracRes: 0.5957, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6129, norm(y): 0.9826, norm:1.0905, tok/sec: 103689.99, flops:90.80, batch-reuse:1
@ 12154 train 3.9548 , allloss: 3.9655, dt: 1262.71ms, fracRes: 0.5958, norm(attn): 0.1699, norm(output): 0.2617, norm(x): 0.6095, norm(y): 0.9825, norm:0.9182, tok/sec: 103801.80, flops:90.90, batch-reuse:1
@ 12155 train 3.9276 , allloss: 3.9378, dt: 1322.33ms, fracRes: 0.5954, norm(attn): 0.1699, norm(output): 0.2617, norm(x): 0.6080, norm(y): 0.9824, norm:0.7731, tok/sec: 99121.70, flops:86.80, batch-reuse:1
@ 12156 train 3.8634 , allloss: 3.8738, dt: 1303.87ms, fracRes: 0.5956, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6101, norm(y): 0.9824, norm:0.8594, tok/sec: 100525.53, flops:88.03, batch-reuse:1
@ 12157 train 3.9100 , allloss: 3.9205, dt: 1272.85ms, fracRes: 0.5948, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6103, norm(y): 0.9825, norm:0.8573, tok/sec: 102974.82, flops:90.17, batch-reuse:1
@ 12158 train 3.9212 , allloss: 3.9318, dt: 1263.68ms, fracRes: 0.5948, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6103, norm(y): 0.9824, norm:0.7407, tok/sec: 103722.23, flops:90.83, batch-reuse:1
@ 12159 train 3.9631 , allloss: 3.9743, dt: 1266.48ms, fracRes: 0.5954, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6109, norm(y): 0.9826, norm:0.9218, tok/sec: 103492.90, flops:90.63, batch-reuse:1
@ 12160 train 3.8263 , allloss: 3.8371, dt: 1272.20ms, fracRes: 0.5958, norm(attn): 0.1719, norm(output): 0.2598, norm(x): 0.6081, norm(y): 0.9828, norm:0.7901, tok/sec: 103027.76, flops:90.22, batch-reuse:1
@ 12161 train 3.8914 , allloss: 3.9022, dt: 1296.28ms, fracRes: 0.5959, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6054, norm(y): 0.9825, norm:0.8848, tok/sec: 101114.26, flops:88.54, batch-reuse:1
@ 12162 train 3.9593 , allloss: 3.9699, dt: 1256.49ms, fracRes: 0.5955, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6058, norm(y): 0.9825, norm:0.7741, tok/sec: 104315.68, flops:91.35, batch-reuse:1
@ 12163 train 3.8623 , allloss: 3.8732, dt: 1252.97ms, fracRes: 0.5954, norm(attn): 0.1699, norm(output): 0.2617, norm(x): 0.6063, norm(y): 0.9825, norm:0.8868, tok/sec: 104608.77, flops:91.60, batch-reuse:1
@ 12164 train 3.8952 , allloss: 3.9064, dt: 1269.22ms, fracRes: 0.5950, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6072, norm(y): 0.9825, norm:0.7539, tok/sec: 103269.81, flops:90.43, batch-reuse:1
@ 12165 train 3.8579 , allloss: 3.8687, dt: 1261.28ms, fracRes: 0.5949, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6074, norm(y): 0.9825, norm:0.7463, tok/sec: 103920.20, flops:91.00, batch-reuse:1
@ 12166 train 3.8869 , allloss: 3.8977, dt: 1277.53ms, fracRes: 0.5943, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6094, norm(y): 0.9826, norm:0.8335, tok/sec: 102597.87, flops:89.84, batch-reuse:1
@ 12167 train 3.8761 , allloss: 3.8867, dt: 1260.51ms, fracRes: 0.5942, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6074, norm(y): 0.9824, norm:0.7481, tok/sec: 103983.55, flops:91.06, batch-reuse:1
@ 12168 train 3.8541 , allloss: 3.8649, dt: 1277.20ms, fracRes: 0.5948, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6125, norm(y): 0.9825, norm:0.8013, tok/sec: 102624.22, flops:89.87, batch-reuse:1
@ 12169 train 3.9420 , allloss: 3.9527, dt: 1277.51ms, fracRes: 0.5954, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6102, norm(y): 0.9823, norm:0.7344, tok/sec: 102599.50, flops:89.84, batch-reuse:1
@ 12170 train 3.8717 , allloss: 3.8824, dt: 1265.16ms, fracRes: 0.5959, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6098, norm(y): 0.9826, norm:0.8042, tok/sec: 103600.86, flops:90.72, batch-reuse:1
@ 12171 train 3.9182 , allloss: 3.9287, dt: 1261.33ms, fracRes: 0.5959, norm(attn): 0.1699, norm(output): 0.2617, norm(x): 0.6072, norm(y): 0.9825, norm:0.8130, tok/sec: 103916.05, flops:91.00, batch-reuse:1
@ 12172 train 3.9487 , allloss: 3.9596, dt: 1282.42ms, fracRes: 0.5950, norm(attn): 0.1699, norm(output): 0.2617, norm(x): 0.6066, norm(y): 0.9823, norm:0.7686, tok/sec: 102206.54, flops:89.50, batch-reuse:1
@ 12173 train 3.9612 , allloss: 3.9721, dt: 1268.31ms, fracRes: 0.5948, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6077, norm(y): 0.9828, norm:0.7916, tok/sec: 103343.99, flops:90.50, batch-reuse:1
@ 12174 train 3.8938 , allloss: 3.9047, dt: 1259.40ms, fracRes: 0.5937, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6103, norm(y): 0.9825, norm:0.8475, tok/sec: 104074.55, flops:91.14, batch-reuse:1
@ 12175 train 3.8356 , allloss: 3.8461, dt: 1279.89ms, fracRes: 0.5936, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6120, norm(y): 0.9825, norm:0.7822, tok/sec: 102408.99, flops:89.68, batch-reuse:1
@ 12176 train 3.9890 , allloss: 3.9994, dt: 1262.09ms, fracRes: 0.5935, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6083, norm(y): 0.9823, norm:0.8589, tok/sec: 103852.98, flops:90.94, batch-reuse:1
@ 12177 train 3.9863 , allloss: 3.9969, dt: 1286.38ms, fracRes: 0.5945, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6122, norm(y): 0.9823, norm:0.8507, tok/sec: 101892.41, flops:89.23, batch-reuse:1
@ 12178 train 4.0876 , allloss: 4.0980, dt: 1268.88ms, fracRes: 0.5935, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6129, norm(y): 0.9821, norm:1.1765, tok/sec: 103297.35, flops:90.46, batch-reuse:1
@ 12179 train 3.9186 , allloss: 3.9292, dt: 1294.09ms, fracRes: 0.5957, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6119, norm(y): 0.9827, norm:0.9084, tok/sec: 101285.00, flops:88.69, batch-reuse:1
@ 12180 train 3.9126 , allloss: 3.9230, dt: 1301.82ms, fracRes: 0.5952, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6077, norm(y): 0.9826, norm:0.7844, tok/sec: 100683.71, flops:88.17, batch-reuse:1
@ 12181 train 3.9056 , allloss: 3.9164, dt: 1263.11ms, fracRes: 0.5957, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6083, norm(y): 0.9827, norm:0.8801, tok/sec: 103769.41, flops:90.87, batch-reuse:1
@ 12182 train 3.9106 , allloss: 3.9211, dt: 1253.60ms, fracRes: 0.5963, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6070, norm(y): 0.9825, norm:0.7679, tok/sec: 104556.23, flops:91.56, batch-reuse:1
@ 12183 train 3.7866 , allloss: 3.7975, dt: 1249.62ms, fracRes: 0.5964, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6087, norm(y): 0.9827, norm:0.8054, tok/sec: 104889.39, flops:91.85, batch-reuse:1
@ 12184 train 3.8754 , allloss: 3.8861, dt: 1270.13ms, fracRes: 0.5954, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6063, norm(y): 0.9826, norm:0.7887, tok/sec: 103195.65, flops:90.37, batch-reuse:1
@ 12185 train 3.9414 , allloss: 3.9520, dt: 1261.51ms, fracRes: 0.5942, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6070, norm(y): 0.9825, norm:0.8226, tok/sec: 103901.22, flops:90.98, batch-reuse:1
@ 12186 train 3.9374 , allloss: 3.9477, dt: 1253.86ms, fracRes: 0.5934, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6065, norm(y): 0.9823, norm:0.7424, tok/sec: 104534.52, flops:91.54, batch-reuse:1
@ 12187 train 3.9212 , allloss: 3.9322, dt: 1268.47ms, fracRes: 0.5940, norm(attn): 0.1709, norm(output): 0.2656, norm(x): 0.6082, norm(y): 0.9823, norm:0.9844, tok/sec: 103331.01, flops:90.49, batch-reuse:1
@ 12188 train 3.8861 , allloss: 3.8964, dt: 1264.82ms, fracRes: 0.5936, norm(attn): 0.1699, norm(output): 0.2617, norm(x): 0.6070, norm(y): 0.9822, norm:0.8359, tok/sec: 103628.93, flops:90.75, batch-reuse:1
@ 12189 train 3.8584 , allloss: 3.8687, dt: 1246.67ms, fracRes: 0.5938, norm(attn): 0.1699, norm(output): 0.2637, norm(x): 0.6099, norm(y): 0.9824, norm:0.8118, tok/sec: 105138.09, flops:92.07, batch-reuse:1
@ 12190 train 3.8577 , allloss: 3.8685, dt: 1259.39ms, fracRes: 0.5945, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6141, norm(y): 0.9824, norm:0.8192, tok/sec: 104075.64, flops:91.14, batch-reuse:1
@ 12191 train 3.9795 , allloss: 3.9895, dt: 1265.44ms, fracRes: 0.5956, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6086, norm(y): 0.9825, norm:0.7682, tok/sec: 103578.32, flops:90.70, batch-reuse:1
@ 12192 train 3.8274 , allloss: 3.8377, dt: 1263.02ms, fracRes: 0.5958, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6080, norm(y): 0.9823, norm:0.7775, tok/sec: 103776.37, flops:90.88, batch-reuse:1
@ 12193 train 3.7502 , allloss: 3.7605, dt: 1266.32ms, fracRes: 0.5960, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6065, norm(y): 0.9823, norm:0.8013, tok/sec: 103506.09, flops:90.64, batch-reuse:1
@ 12194 train 3.8590 , allloss: 3.8699, dt: 1259.62ms, fracRes: 0.5966, norm(attn): 0.1699, norm(output): 0.2617, norm(x): 0.6077, norm(y): 0.9827, norm:0.7157, tok/sec: 104056.94, flops:91.12, batch-reuse:1
@ 12195 train 3.8176 , allloss: 3.8281, dt: 1256.95ms, fracRes: 0.5955, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6097, norm(y): 0.9826, norm:0.8415, tok/sec: 104278.18, flops:91.31, batch-reuse:1
@ 12196 train 3.8715 , allloss: 3.8884, dt: 1289.10ms, fracRes: 0.5948, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6089, norm(y): 0.9826, norm:0.7953, tok/sec: 101677.43, flops:89.04, batch-reuse:1
@ 12197 train 3.7831 , allloss: 3.7941, dt: 1324.77ms, fracRes: 0.5945, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6114, norm(y): 0.9825, norm:0.8167, tok/sec: 98939.55, flops:86.64, batch-reuse:1
@ 12198 train 3.9055 , allloss: 3.9163, dt: 1291.96ms, fracRes: 0.5934, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6035, norm(y): 0.9824, norm:0.9407, tok/sec: 101452.04, flops:88.84, batch-reuse:1
@ 12199 train 3.8512 , allloss: 3.8618, dt: 1268.75ms, fracRes: 0.5927, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6028, norm(y): 0.9825, norm:0.8433, tok/sec: 103308.37, flops:90.47, batch-reuse:1
@ 12200 train 3.9568 , allloss: 3.9675, dt: 1280.87ms, fracRes: 0.5928, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6044, norm(y): 0.9826, norm:0.7994, tok/sec: 102330.26, flops:89.61, batch-reuse:1
@ 12201 train 3.9284 , allloss: 3.9392, dt: 1257.92ms, fracRes: 0.5931, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6025, norm(y): 0.9823, norm:0.9190, tok/sec: 104197.19, flops:91.24, batch-reuse:1
@ 12202 train 3.8955 , allloss: 3.9063, dt: 1256.89ms, fracRes: 0.5946, norm(attn): 0.1699, norm(output): 0.2617, norm(x): 0.6013, norm(y): 0.9824, norm:0.7706, tok/sec: 104282.59, flops:91.32, batch-reuse:1
@ 12203 train 3.9613 , allloss: 3.9723, dt: 1272.54ms, fracRes: 0.5965, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6069, norm(y): 0.9826, norm:0.8963, tok/sec: 103000.48, flops:90.20, batch-reuse:1
@ 12204 train 3.8781 , allloss: 3.8892, dt: 1296.94ms, fracRes: 0.5968, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6097, norm(y): 0.9827, norm:1.0004, tok/sec: 101062.22, flops:88.50, batch-reuse:1
@ 12205 train 3.9482 , allloss: 3.9587, dt: 1283.52ms, fracRes: 0.5963, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6100, norm(y): 0.9826, norm:0.7755, tok/sec: 102119.46, flops:89.42, batch-reuse:1
@ 12206 train 3.9596 , allloss: 3.9700, dt: 1566.48ms, fracRes: 0.5958, norm(attn): 0.1699, norm(output): 0.2617, norm(x): 0.6112, norm(y): 0.9822, norm:0.8878, tok/sec: 83673.13, flops:73.27, batch-reuse:1
@ 12207 train 3.9462 , allloss: 3.9568, dt: 1260.31ms, fracRes: 0.5960, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6140, norm(y): 0.9821, norm:0.9954, tok/sec: 103999.52, flops:91.07, batch-reuse:1
@ 12208 train 4.0017 , allloss: 4.0124, dt: 1267.49ms, fracRes: 0.5942, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6045, norm(y): 0.9824, norm:0.9629, tok/sec: 103411.02, flops:90.56, batch-reuse:1
@ 12209 train 3.8906 , allloss: 3.9013, dt: 1280.60ms, fracRes: 0.5938, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6095, norm(y): 0.9826, norm:0.8533, tok/sec: 102352.09, flops:89.63, batch-reuse:1
@ 12210 train 3.8406 , allloss: 3.8512, dt: 1269.31ms, fracRes: 0.5925, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6102, norm(y): 0.9825, norm:0.7471, tok/sec: 103262.17, flops:90.43, batch-reuse:1
@ 12211 train 3.8774 , allloss: 3.8882, dt: 1266.31ms, fracRes: 0.5933, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6099, norm(y): 0.9825, norm:0.8486, tok/sec: 103506.93, flops:90.64, batch-reuse:1
@ 12212 train 3.9112 , allloss: 3.9219, dt: 1261.99ms, fracRes: 0.5949, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6103, norm(y): 0.9821, norm:0.7980, tok/sec: 103861.43, flops:90.95, batch-reuse:1
@ 12213 train 3.8578 , allloss: 3.8682, dt: 1262.58ms, fracRes: 0.5961, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6086, norm(y): 0.9822, norm:0.7806, tok/sec: 103812.58, flops:90.91, batch-reuse:1
@ 12214 train 3.7399 , allloss: 3.7508, dt: 1270.85ms, fracRes: 0.5957, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6112, norm(y): 0.9825, norm:0.7661, tok/sec: 103137.12, flops:90.32, batch-reuse:1
@ 12215 train 3.8447 , allloss: 3.8565, dt: 1289.38ms, fracRes: 0.5950, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6080, norm(y): 0.9821, norm:0.7546, tok/sec: 101654.71, flops:89.02, batch-reuse:1
@ 12216 train 3.8915 , allloss: 3.9022, dt: 1255.03ms, fracRes: 0.5959, norm(attn): 0.1699, norm(output): 0.2617, norm(x): 0.6075, norm(y): 0.9823, norm:0.7600, tok/sec: 104437.59, flops:91.45, batch-reuse:1
@ 12217 train 3.8820 , allloss: 3.8924, dt: 1252.16ms, fracRes: 0.5952, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6055, norm(y): 0.9822, norm:0.7547, tok/sec: 104676.85, flops:91.66, batch-reuse:1
@ 12218 train 3.8369 , allloss: 3.8474, dt: 1263.42ms, fracRes: 0.5950, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6063, norm(y): 0.9820, norm:0.8250, tok/sec: 103743.50, flops:90.85, batch-reuse:1
@ 12219 train 3.8480 , allloss: 3.8590, dt: 1283.94ms, fracRes: 0.5951, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6119, norm(y): 0.9823, norm:0.7316, tok/sec: 102085.65, flops:89.39, batch-reuse:1
@ 12220 train 3.8323 , allloss: 3.8424, dt: 1285.33ms, fracRes: 0.5946, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6078, norm(y): 0.9821, norm:0.7966, tok/sec: 101975.19, flops:89.30, batch-reuse:1
@ 12221 train 3.8459 , allloss: 3.8563, dt: 1285.94ms, fracRes: 0.5953, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6092, norm(y): 0.9822, norm:0.7060, tok/sec: 101926.98, flops:89.26, batch-reuse:1
@ 12222 train 3.8067 , allloss: 3.8168, dt: 1257.21ms, fracRes: 0.5955, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6060, norm(y): 0.9823, norm:0.7511, tok/sec: 104256.21, flops:91.30, batch-reuse:1
@ 12223 train 3.9368 , allloss: 3.9470, dt: 1265.63ms, fracRes: 0.5958, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6054, norm(y): 0.9821, norm:0.7650, tok/sec: 103562.61, flops:90.69, batch-reuse:1
@ 12224 train 3.7883 , allloss: 3.7987, dt: 1251.09ms, fracRes: 0.5948, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6062, norm(y): 0.9821, norm:0.6743, tok/sec: 104765.94, flops:91.74, batch-reuse:1
@ 12225 train 3.7890 , allloss: 3.7994, dt: 1266.39ms, fracRes: 0.5937, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6077, norm(y): 0.9821, norm:0.7722, tok/sec: 103500.65, flops:90.63, batch-reuse:1
@ 12226 train 3.9516 , allloss: 3.9621, dt: 1264.36ms, fracRes: 0.5939, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6064, norm(y): 0.9824, norm:0.8159, tok/sec: 103666.49, flops:90.78, batch-reuse:1
@ 12227 train 3.8276 , allloss: 3.8380, dt: 1265.15ms, fracRes: 0.5945, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6090, norm(y): 0.9823, norm:0.7873, tok/sec: 103602.11, flops:90.72, batch-reuse:1
@ 12228 train 3.7988 , allloss: 3.8092, dt: 1297.03ms, fracRes: 0.5951, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6061, norm(y): 0.9821, norm:0.7165, tok/sec: 101055.16, flops:88.49, batch-reuse:1
@ 12229 train 3.7380 , allloss: 3.7482, dt: 1249.54ms, fracRes: 0.5954, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6019, norm(y): 0.9822, norm:0.7087, tok/sec: 104896.03, flops:91.86, batch-reuse:1
@ 12230 train 3.8896 , allloss: 3.8998, dt: 1269.57ms, fracRes: 0.5957, norm(attn): 0.1719, norm(output): 0.2559, norm(x): 0.6033, norm(y): 0.9822, norm:0.7533, tok/sec: 103241.21, flops:90.41, batch-reuse:1
@ 12231 train 3.8486 , allloss: 3.8588, dt: 1277.78ms, fracRes: 0.5954, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6030, norm(y): 0.9820, norm:0.7942, tok/sec: 102577.60, flops:89.83, batch-reuse:1
@ 12232 train 3.7218 , allloss: 3.7319, dt: 1256.25ms, fracRes: 0.5959, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6061, norm(y): 0.9823, norm:0.7615, tok/sec: 104336.23, flops:91.37, batch-reuse:1
@ 12233 train 3.9566 , allloss: 3.9671, dt: 1274.01ms, fracRes: 0.5948, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6056, norm(y): 0.9822, norm:0.7874, tok/sec: 102881.17, flops:90.09, batch-reuse:1
@ 12234 train 3.8398 , allloss: 3.8502, dt: 1291.72ms, fracRes: 0.5949, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6033, norm(y): 0.9824, norm:0.7970, tok/sec: 101471.25, flops:88.86, batch-reuse:1
@ 12235 train 3.8305 , allloss: 3.8411, dt: 1264.99ms, fracRes: 0.5942, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6046, norm(y): 0.9823, norm:0.7042, tok/sec: 103614.85, flops:90.73, batch-reuse:1
@ 12236 train 3.7766 , allloss: 3.7870, dt: 1275.68ms, fracRes: 0.5950, norm(attn): 0.1699, norm(output): 0.2578, norm(x): 0.6032, norm(y): 0.9826, norm:0.8647, tok/sec: 102747.00, flops:89.97, batch-reuse:1
@ 12237 train 3.7327 , allloss: 3.7434, dt: 1272.45ms, fracRes: 0.5945, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6048, norm(y): 0.9823, norm:1.0505, tok/sec: 103007.43, flops:90.20, batch-reuse:1
@ 12238 train 3.7517 , allloss: 3.7629, dt: 1257.85ms, fracRes: 0.5940, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6081, norm(y): 0.9823, norm:1.0119, tok/sec: 104202.79, flops:91.25, batch-reuse:1
@ 12239 train 3.7475 , allloss: 3.7579, dt: 1265.56ms, fracRes: 0.5945, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6037, norm(y): 0.9823, norm:0.7605, tok/sec: 103568.70, flops:90.69, batch-reuse:1
@ 12240 train 3.7011 , allloss: 3.7123, dt: 1260.37ms, fracRes: 0.5964, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6064, norm(y): 0.9826, norm:0.9398, tok/sec: 103994.50, flops:91.07, batch-reuse:1
@ 12241 train 3.8283 , allloss: 3.8389, dt: 1249.33ms, fracRes: 0.5967, norm(attn): 0.1709, norm(output): 0.2559, norm(x): 0.6031, norm(y): 0.9822, norm:0.7522, tok/sec: 104914.17, flops:91.87, batch-reuse:1
@ 12242 train 3.7748 , allloss: 3.7853, dt: 1270.25ms, fracRes: 0.5956, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6065, norm(y): 0.9820, norm:0.7970, tok/sec: 103185.73, flops:90.36, batch-reuse:1
@ 12243 train 3.8446 , allloss: 3.8550, dt: 1275.22ms, fracRes: 0.5952, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6071, norm(y): 0.9821, norm:0.7627, tok/sec: 102784.15, flops:90.01, batch-reuse:1
@ 12244 train 3.8900 , allloss: 3.9003, dt: 1293.14ms, fracRes: 0.5944, norm(attn): 0.1719, norm(output): 0.2598, norm(x): 0.6063, norm(y): 0.9819, norm:0.7641, tok/sec: 101359.34, flops:88.76, batch-reuse:1
@ 12245 train 3.8411 , allloss: 3.8514, dt: 1292.53ms, fracRes: 0.5952, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6032, norm(y): 0.9821, norm:0.7035, tok/sec: 101407.65, flops:88.80, batch-reuse:1
@ 12246 train 3.7858 , allloss: 3.7964, dt: 1268.44ms, fracRes: 0.5958, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6056, norm(y): 0.9819, norm:0.7653, tok/sec: 103333.07, flops:90.49, batch-reuse:1
@ 12247 train 3.8801 , allloss: 3.8905, dt: 1272.84ms, fracRes: 0.5952, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6058, norm(y): 0.9819, norm:0.7494, tok/sec: 102976.41, flops:90.17, batch-reuse:1
@ 12248 train 3.7921 , allloss: 3.8033, dt: 1265.28ms, fracRes: 0.5958, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6087, norm(y): 0.9823, norm:0.8930, tok/sec: 103591.38, flops:90.71, batch-reuse:1
@ 12249 train 3.8493 , allloss: 3.8600, dt: 1261.28ms, fracRes: 0.5952, norm(attn): 0.1709, norm(output): 0.2656, norm(x): 0.6099, norm(y): 0.9821, norm:0.7495, tok/sec: 103920.08, flops:91.00, batch-reuse:1
@ 12250 train 3.8477 , allloss: 3.8579, dt: 1266.63ms, fracRes: 0.5953, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6055, norm(y): 0.9820, norm:0.7819, tok/sec: 103480.95, flops:90.62, batch-reuse:1
@ 12251 train 3.7588 , allloss: 3.7693, dt: 1281.03ms, fracRes: 0.5949, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6091, norm(y): 0.9820, norm:0.7430, tok/sec: 102317.48, flops:89.60, batch-reuse:1
@ 12252 train 3.8526 , allloss: 3.8631, dt: 1280.79ms, fracRes: 0.5955, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6087, norm(y): 0.9820, norm:0.7639, tok/sec: 102337.04, flops:89.62, batch-reuse:1
@ 12253 train 3.7464 , allloss: 3.7568, dt: 1268.57ms, fracRes: 0.5956, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6057, norm(y): 0.9823, norm:0.8013, tok/sec: 103322.57, flops:90.48, batch-reuse:1
@ 12254 train 3.8201 , allloss: 3.8308, dt: 1274.93ms, fracRes: 0.5957, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6052, norm(y): 0.9821, norm:0.7593, tok/sec: 102807.16, flops:90.03, batch-reuse:1
@ 12255 train 3.8816 , allloss: 3.8924, dt: 1257.43ms, fracRes: 0.5959, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6045, norm(y): 0.9819, norm:0.8228, tok/sec: 104238.24, flops:91.28, batch-reuse:1
@ 12256 train 3.8234 , allloss: 3.8338, dt: 1294.09ms, fracRes: 0.5964, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6078, norm(y): 0.9819, norm:0.7475, tok/sec: 101285.13, flops:88.69, batch-reuse:1
@ 12257 train 3.8056 , allloss: 3.8157, dt: 1253.97ms, fracRes: 0.5970, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6066, norm(y): 0.9822, norm:0.8701, tok/sec: 104525.53, flops:91.53, batch-reuse:1
@ 12258 train 3.7369 , allloss: 3.7472, dt: 1269.52ms, fracRes: 0.5957, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6062, norm(y): 0.9822, norm:0.7674, tok/sec: 103245.08, flops:90.41, batch-reuse:1
@ 12259 train 3.8069 , allloss: 3.8175, dt: 1282.57ms, fracRes: 0.5949, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6066, norm(y): 0.9822, norm:0.7837, tok/sec: 102194.52, flops:89.49, batch-reuse:1
@ 12260 train 3.8205 , allloss: 3.8315, dt: 1278.16ms, fracRes: 0.5952, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6090, norm(y): 0.9822, norm:0.7205, tok/sec: 102547.25, flops:89.80, batch-reuse:1
@ 12261 train 3.8466 , allloss: 3.8568, dt: 1302.99ms, fracRes: 0.5947, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6059, norm(y): 0.9821, norm:0.7299, tok/sec: 100593.16, flops:88.09, batch-reuse:1
@ 12262 train 3.7853 , allloss: 3.7956, dt: 1292.49ms, fracRes: 0.5942, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6076, norm(y): 0.9818, norm:0.7759, tok/sec: 101410.27, flops:88.80, batch-reuse:1
@ 12263 train 3.8277 , allloss: 3.8381, dt: 1284.59ms, fracRes: 0.5943, norm(attn): 0.1719, norm(output): 0.2598, norm(x): 0.6070, norm(y): 0.9819, norm:0.7208, tok/sec: 102033.90, flops:89.35, batch-reuse:1
@ 12264 train 3.7061 , allloss: 3.7166, dt: 1294.21ms, fracRes: 0.5960, norm(attn): 0.1719, norm(output): 0.2578, norm(x): 0.6080, norm(y): 0.9825, norm:0.8001, tok/sec: 101275.85, flops:88.69, batch-reuse:1
@ 12265 train 3.7688 , allloss: 3.7790, dt: 1289.73ms, fracRes: 0.5950, norm(attn): 0.1719, norm(output): 0.2598, norm(x): 0.6054, norm(y): 0.9821, norm:0.8001, tok/sec: 101627.49, flops:88.99, batch-reuse:1
@ 12266 train 3.8103 , allloss: 3.8220, dt: 1329.19ms, fracRes: 0.5965, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6178, norm(y): 0.9822, norm:1.1176, tok/sec: 98610.50, flops:86.35, batch-reuse:1
@ 12267 train 3.7879 , allloss: 3.7981, dt: 1291.99ms, fracRes: 0.5961, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6074, norm(y): 0.9819, norm:0.8121, tok/sec: 101449.75, flops:88.84, batch-reuse:1
@ 12268 train 3.9206 , allloss: 3.9312, dt: 1278.97ms, fracRes: 0.5961, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6115, norm(y): 0.9819, norm:0.9243, tok/sec: 102482.52, flops:89.74, batch-reuse:1
@ 12269 train 3.8616 , allloss: 3.8719, dt: 1264.76ms, fracRes: 0.5954, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6106, norm(y): 0.9819, norm:0.8056, tok/sec: 103634.07, flops:90.75, batch-reuse:1
@ 12270 train 3.7948 , allloss: 3.8052, dt: 1287.41ms, fracRes: 0.5942, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6102, norm(y): 0.9819, norm:0.8112, tok/sec: 101810.78, flops:89.15, batch-reuse:1
@ 12271 train 3.7259 , allloss: 3.7366, dt: 1277.94ms, fracRes: 0.5938, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6056, norm(y): 0.9820, norm:0.7328, tok/sec: 102564.74, flops:89.81, batch-reuse:1
@ 12272 train 3.6957 , allloss: 3.7064, dt: 1258.28ms, fracRes: 0.5938, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6034, norm(y): 0.9820, norm:0.7757, tok/sec: 104167.63, flops:91.22, batch-reuse:1
@ 12273 train 3.7827 , allloss: 3.7933, dt: 1271.94ms, fracRes: 0.5952, norm(attn): 0.1699, norm(output): 0.2539, norm(x): 0.5967, norm(y): 0.9822, norm:0.7770, tok/sec: 103049.04, flops:90.24, batch-reuse:1
@ 12274 train 3.5351 , allloss: 3.5458, dt: 1292.03ms, fracRes: 0.5955, norm(attn): 0.1709, norm(output): 0.2559, norm(x): 0.5970, norm(y): 0.9823, norm:0.8414, tok/sec: 101446.50, flops:88.84, batch-reuse:1
@ 12275 train 3.6360 , allloss: 3.6468, dt: 1276.73ms, fracRes: 0.5961, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6035, norm(y): 0.9823, norm:0.9649, tok/sec: 102662.59, flops:89.90, batch-reuse:1
@ 12276 train 3.7619 , allloss: 3.7721, dt: 1289.09ms, fracRes: 0.5954, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6054, norm(y): 0.9820, norm:0.7490, tok/sec: 101678.27, flops:89.04, batch-reuse:1
@ 12277 train 3.5647 , allloss: 3.5751, dt: 1266.06ms, fracRes: 0.5953, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6092, norm(y): 0.9823, norm:0.8671, tok/sec: 103527.84, flops:90.66, batch-reuse:1
@ 12278 train 3.6427 , allloss: 3.6531, dt: 1259.13ms, fracRes: 0.5946, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6079, norm(y): 0.9821, norm:0.8549, tok/sec: 104096.90, flops:91.16, batch-reuse:1
@ 12279 train 3.6579 , allloss: 3.6683, dt: 1259.47ms, fracRes: 0.5934, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6110, norm(y): 0.9820, norm:0.7293, tok/sec: 104069.33, flops:91.13, batch-reuse:1
@ 12280 train 3.6018 , allloss: 3.6125, dt: 1254.87ms, fracRes: 0.5936, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6115, norm(y): 0.9823, norm:0.8011, tok/sec: 104450.31, flops:91.47, batch-reuse:1
@ 12281 train 3.7423 , allloss: 3.7528, dt: 1288.22ms, fracRes: 0.5942, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6145, norm(y): 0.9822, norm:0.8920, tok/sec: 101746.92, flops:89.10, batch-reuse:1
@ 12282 train 3.6523 , allloss: 3.6626, dt: 1264.18ms, fracRes: 0.5958, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6104, norm(y): 0.9822, norm:0.9285, tok/sec: 103681.70, flops:90.79, batch-reuse:1
@ 12283 train 3.6457 , allloss: 3.6561, dt: 1261.91ms, fracRes: 0.5971, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6074, norm(y): 0.9822, norm:0.7712, tok/sec: 103868.17, flops:90.96, batch-reuse:1
@ 12284 train 3.7655 , allloss: 3.7759, dt: 1279.26ms, fracRes: 0.5972, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6047, norm(y): 0.9820, norm:0.8948, tok/sec: 102458.88, flops:89.72, batch-reuse:1
@ 12285 train 3.6444 , allloss: 3.6549, dt: 1318.40ms, fracRes: 0.5971, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6043, norm(y): 0.9820, norm:1.0940, tok/sec: 99417.41, flops:87.06, batch-reuse:1
@ 12286 train 3.7334 , allloss: 3.7438, dt: 1281.94ms, fracRes: 0.5976, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6043, norm(y): 0.9822, norm:0.7660, tok/sec: 102244.77, flops:89.53, batch-reuse:1
@ 12287 train 3.7872 , allloss: 3.7972, dt: 1265.94ms, fracRes: 0.5962, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6013, norm(y): 0.9817, norm:0.8326, tok/sec: 103537.59, flops:90.67, batch-reuse:1
@ 12288 train 3.6862 , allloss: 3.6965, dt: 1273.32ms, fracRes: 0.5959, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6032, norm(y): 0.9822, norm:0.8763, tok/sec: 102937.46, flops:90.14, batch-reuse:1
@ 12289 train 3.5563 , allloss: 3.5672, dt: 1252.73ms, fracRes: 0.5951, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6060, norm(y): 0.9823, norm:0.7511, tok/sec: 104629.30, flops:91.62, batch-reuse:1
@ 12290 train 3.6948 , allloss: 3.7051, dt: 1270.70ms, fracRes: 0.5946, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6061, norm(y): 0.9821, norm:0.8083, tok/sec: 103149.76, flops:90.33, batch-reuse:1
@ 12291 train 3.6070 , allloss: 3.6177, dt: 1253.91ms, fracRes: 0.5948, norm(attn): 0.1699, norm(output): 0.2559, norm(x): 0.6097, norm(y): 0.9824, norm:0.7822, tok/sec: 104530.44, flops:91.54, batch-reuse:1
@ 12292 train 3.6334 , allloss: 3.6439, dt: 1269.82ms, fracRes: 0.5942, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6066, norm(y): 0.9820, norm:0.8109, tok/sec: 103220.83, flops:90.39, batch-reuse:1
@ 12293 train 3.6391 , allloss: 3.6496, dt: 1263.89ms, fracRes: 0.5947, norm(attn): 0.1719, norm(output): 0.2598, norm(x): 0.6077, norm(y): 0.9820, norm:0.8543, tok/sec: 103705.17, flops:90.81, batch-reuse:1
@ 12294 train 3.5711 , allloss: 3.5815, dt: 1299.34ms, fracRes: 0.5951, norm(attn): 0.1719, norm(output): 0.2598, norm(x): 0.6056, norm(y): 0.9821, norm:0.7480, tok/sec: 100875.90, flops:88.34, batch-reuse:1
@ 12295 train 3.7631 , allloss: 3.7734, dt: 1303.80ms, fracRes: 0.5952, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6044, norm(y): 0.9821, norm:0.7948, tok/sec: 100531.12, flops:88.03, batch-reuse:1
@ 12296 train 3.7125 , allloss: 3.7228, dt: 1287.06ms, fracRes: 0.5946, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6044, norm(y): 0.9820, norm:0.7333, tok/sec: 101838.09, flops:89.18, batch-reuse:1
@ 12297 train 3.7808 , allloss: 3.7913, dt: 1271.31ms, fracRes: 0.5941, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6047, norm(y): 0.9818, norm:0.7536, tok/sec: 103100.08, flops:90.28, batch-reuse:1
@ 12298 train 3.7141 , allloss: 3.7246, dt: 1269.22ms, fracRes: 0.5931, norm(attn): 0.1719, norm(output): 0.2598, norm(x): 0.6014, norm(y): 0.9818, norm:0.7887, tok/sec: 103269.37, flops:90.43, batch-reuse:1
@ 12299 train 3.6243 , allloss: 3.6350, dt: 1264.97ms, fracRes: 0.5942, norm(attn): 0.1719, norm(output): 0.2598, norm(x): 0.6016, norm(y): 0.9821, norm:0.7578, tok/sec: 103616.64, flops:90.74, batch-reuse:1
@ 12300 train 3.6062 , allloss: 3.6166, dt: 1254.91ms, fracRes: 0.5944, norm(attn): 0.1719, norm(output): 0.2559, norm(x): 0.5995, norm(y): 0.9822, norm:0.8851, tok/sec: 104447.57, flops:91.46, batch-reuse:1
@ 12301 train 3.6662 , allloss: 3.6764, dt: 1267.21ms, fracRes: 0.5946, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6041, norm(y): 0.9823, norm:0.9098, tok/sec: 103433.74, flops:90.58, batch-reuse:1
@ 12302 train 3.7584 , allloss: 3.7689, dt: 1262.32ms, fracRes: 0.5946, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6063, norm(y): 0.9819, norm:0.8599, tok/sec: 103833.87, flops:90.93, batch-reuse:1
@ 12303 train 3.6444 , allloss: 3.6548, dt: 1279.96ms, fracRes: 0.5949, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6061, norm(y): 0.9818, norm:0.8053, tok/sec: 102403.28, flops:89.67, batch-reuse:1
@ 12304 train 3.6148 , allloss: 3.6251, dt: 1269.29ms, fracRes: 0.5947, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6056, norm(y): 0.9819, norm:0.8149, tok/sec: 103264.15, flops:90.43, batch-reuse:1
@ 12305 train 3.7179 , allloss: 3.7286, dt: 1264.31ms, fracRes: 0.5950, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6111, norm(y): 0.9818, norm:0.7792, tok/sec: 103670.63, flops:90.78, batch-reuse:1
@ 12306 train 3.7614 , allloss: 3.7718, dt: 1262.32ms, fracRes: 0.5946, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6054, norm(y): 0.9819, norm:0.8226, tok/sec: 103834.40, flops:90.93, batch-reuse:1
@ 12307 train 3.6543 , allloss: 3.6648, dt: 1272.40ms, fracRes: 0.5948, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6082, norm(y): 0.9820, norm:0.7839, tok/sec: 103011.68, flops:90.21, batch-reuse:1
@ 12308 train 3.6582 , allloss: 3.6688, dt: 1265.93ms, fracRes: 0.5943, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6111, norm(y): 0.9819, norm:0.8673, tok/sec: 103537.80, flops:90.67, batch-reuse:1
@ 12309 train 3.6852 , allloss: 3.6959, dt: 1243.82ms, fracRes: 0.5945, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6104, norm(y): 0.9819, norm:0.7626, tok/sec: 105378.23, flops:92.28, batch-reuse:1
@ 12310 train 3.5492 , allloss: 3.5599, dt: 1269.34ms, fracRes: 0.5936, norm(attn): 0.1719, norm(output): 0.2598, norm(x): 0.6106, norm(y): 0.9821, norm:0.9957, tok/sec: 103259.75, flops:90.42, batch-reuse:1
@ 12311 train 3.6263 , allloss: 3.6368, dt: 1266.67ms, fracRes: 0.5936, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6084, norm(y): 0.9819, norm:0.9864, tok/sec: 103477.31, flops:90.61, batch-reuse:1
@ 12312 train 3.7115 , allloss: 3.7218, dt: 1275.19ms, fracRes: 0.5937, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6090, norm(y): 0.9817, norm:0.7466, tok/sec: 102786.34, flops:90.01, batch-reuse:1
@ 12313 train 3.4826 , allloss: 3.4931, dt: 1294.25ms, fracRes: 0.5940, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6084, norm(y): 0.9819, norm:0.9234, tok/sec: 101272.64, flops:88.68, batch-reuse:1
@ 12314 train 3.5305 , allloss: 3.5408, dt: 1256.70ms, fracRes: 0.5948, norm(attn): 0.1719, norm(output): 0.2598, norm(x): 0.6049, norm(y): 0.9821, norm:0.7488, tok/sec: 104298.62, flops:91.33, batch-reuse:1
@ 12315 train 3.7045 , allloss: 3.7153, dt: 1258.08ms, fracRes: 0.5958, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6065, norm(y): 0.9819, norm:0.9048, tok/sec: 104183.98, flops:91.23, batch-reuse:1
@ 12316 train 3.6146 , allloss: 3.6254, dt: 1256.96ms, fracRes: 0.5965, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.6063, norm(y): 0.9820, norm:0.9191, tok/sec: 104277.05, flops:91.31, batch-reuse:1
@ 12317 train 3.5497 , allloss: 3.5602, dt: 1259.35ms, fracRes: 0.5971, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6063, norm(y): 0.9821, norm:0.8255, tok/sec: 104079.18, flops:91.14, batch-reuse:1
@ 12318 train 3.5692 , allloss: 3.5798, dt: 1273.72ms, fracRes: 0.5962, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6054, norm(y): 0.9819, norm:0.8503, tok/sec: 102904.74, flops:90.11, batch-reuse:1
@ 12319 train 3.7212 , allloss: 3.7315, dt: 1277.24ms, fracRes: 0.5955, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6045, norm(y): 0.9818, norm:0.8069, tok/sec: 102621.43, flops:89.86, batch-reuse:1
@ 12320 train 3.8369 , allloss: 3.8481, dt: 1271.69ms, fracRes: 0.5956, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6133, norm(y): 0.9816, norm:0.7778, tok/sec: 103069.11, flops:90.26, batch-reuse:1
@ 12321 train 3.8284 , allloss: 3.8389, dt: 1265.41ms, fracRes: 0.5950, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6124, norm(y): 0.9815, norm:0.8346, tok/sec: 103580.64, flops:90.70, batch-reuse:1
@ 12322 train 3.9810 , allloss: 3.9914, dt: 1281.48ms, fracRes: 0.5949, norm(attn): 0.1709, norm(output): 0.2656, norm(x): 0.6134, norm(y): 0.9814, norm:0.8043, tok/sec: 102281.56, flops:89.57, batch-reuse:1
@ 12323 train 4.0312 , allloss: 4.0423, dt: 1257.87ms, fracRes: 0.5947, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6172, norm(y): 0.9816, norm:0.8996, tok/sec: 104201.18, flops:91.25, batch-reuse:1
@ 12324 train 3.8714 , allloss: 3.8818, dt: 1268.26ms, fracRes: 0.5936, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6111, norm(y): 0.9816, norm:0.7619, tok/sec: 103347.58, flops:90.50, batch-reuse:1
@ 12325 train 3.8837 , allloss: 3.8943, dt: 1268.92ms, fracRes: 0.5939, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6092, norm(y): 0.9821, norm:0.7963, tok/sec: 103294.03, flops:90.45, batch-reuse:1
@ 12326 train 3.9289 , allloss: 3.9395, dt: 1283.49ms, fracRes: 0.5941, norm(attn): 0.1699, norm(output): 0.2617, norm(x): 0.6060, norm(y): 0.9815, norm:0.8463, tok/sec: 102121.58, flops:89.43, batch-reuse:1
@ 12327 train 3.7571 , allloss: 3.7683, dt: 1267.46ms, fracRes: 0.5955, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6116, norm(y): 0.9818, norm:0.9502, tok/sec: 103413.37, flops:90.56, batch-reuse:1
@ 12328 train 3.8459 , allloss: 3.8564, dt: 1295.61ms, fracRes: 0.5943, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6078, norm(y): 0.9814, norm:0.7519, tok/sec: 101166.06, flops:88.59, batch-reuse:1
@ 12329 train 3.8761 , allloss: 3.8865, dt: 1323.23ms, fracRes: 0.5948, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6081, norm(y): 0.9817, norm:0.9040, tok/sec: 99054.73, flops:86.74, batch-reuse:1
@ 12330 train 3.8627 , allloss: 3.8739, dt: 1293.57ms, fracRes: 0.5950, norm(attn): 0.1709, norm(output): 0.2656, norm(x): 0.6096, norm(y): 0.9815, norm:0.7586, tok/sec: 101326.10, flops:88.73, batch-reuse:1
@ 12331 train 3.9203 , allloss: 3.9314, dt: 1271.91ms, fracRes: 0.5952, norm(attn): 0.1699, norm(output): 0.2617, norm(x): 0.6086, norm(y): 0.9813, norm:0.9716, tok/sec: 103051.67, flops:90.24, batch-reuse:1
@ 12332 train 3.9341 , allloss: 3.9446, dt: 1286.01ms, fracRes: 0.5949, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6106, norm(y): 0.9813, norm:0.9791, tok/sec: 101921.56, flops:89.25, batch-reuse:1
@ 12333 train 3.9369 , allloss: 3.9470, dt: 1294.88ms, fracRes: 0.5949, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6082, norm(y): 0.9813, norm:0.8810, tok/sec: 101223.55, flops:88.64, batch-reuse:1
@ 12334 train 3.8711 , allloss: 3.8817, dt: 1276.45ms, fracRes: 0.5946, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6124, norm(y): 0.9815, norm:0.7686, tok/sec: 102684.72, flops:89.92, batch-reuse:1
@ 12335 train 3.7441 , allloss: 3.7551, dt: 1285.35ms, fracRes: 0.5945, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6120, norm(y): 0.9815, norm:0.8285, tok/sec: 101973.43, flops:89.30, batch-reuse:1
@ 12336 train 3.9759 , allloss: 3.9867, dt: 1273.54ms, fracRes: 0.5945, norm(attn): 0.1729, norm(output): 0.2637, norm(x): 0.6094, norm(y): 0.9813, norm:0.8547, tok/sec: 102919.65, flops:90.13, batch-reuse:1
@ 12337 train 3.8094 , allloss: 3.8201, dt: 1278.48ms, fracRes: 0.5946, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6082, norm(y): 0.9814, norm:0.7622, tok/sec: 102522.10, flops:89.78, batch-reuse:1
@ 12338 train 3.8241 , allloss: 3.8350, dt: 1266.17ms, fracRes: 0.5958, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6095, norm(y): 0.9820, norm:0.8524, tok/sec: 103518.21, flops:90.65, batch-reuse:1
@ 12339 train 3.8811 , allloss: 3.8917, dt: 1294.79ms, fracRes: 0.5953, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6079, norm(y): 0.9816, norm:0.7913, tok/sec: 101230.24, flops:88.65, batch-reuse:1
@ 12340 train 3.9829 , allloss: 3.9933, dt: 1270.00ms, fracRes: 0.5954, norm(attn): 0.1699, norm(output): 0.2637, norm(x): 0.6080, norm(y): 0.9813, norm:0.7874, tok/sec: 103206.36, flops:90.38, batch-reuse:1
@ 12341 train 3.9405 , allloss: 3.9507, dt: 1274.52ms, fracRes: 0.5952, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6074, norm(y): 0.9814, norm:0.7431, tok/sec: 102840.56, flops:90.06, batch-reuse:1
@ 12342 train 3.9879 , allloss: 3.9987, dt: 1285.80ms, fracRes: 0.5950, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6103, norm(y): 0.9814, norm:0.8468, tok/sec: 101938.21, flops:89.27, batch-reuse:1
@ 12343 train 3.8459 , allloss: 3.8571, dt: 1285.36ms, fracRes: 0.5960, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6150, norm(y): 0.9819, norm:1.0774, tok/sec: 101973.04, flops:89.30, batch-reuse:1
@ 12344 train 3.8231 , allloss: 3.8338, dt: 1269.48ms, fracRes: 0.5939, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6025, norm(y): 0.9814, norm:0.8175, tok/sec: 103248.38, flops:90.41, batch-reuse:1
@ 12345 train 3.9261 , allloss: 3.9371, dt: 1306.61ms, fracRes: 0.5947, norm(attn): 0.1719, norm(output): 0.2598, norm(x): 0.6010, norm(y): 0.9813, norm:0.9219, tok/sec: 100314.45, flops:87.84, batch-reuse:1
@ 12346 train 3.8872 , allloss: 3.8982, dt: 1268.01ms, fracRes: 0.5953, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6067, norm(y): 0.9814, norm:0.8111, tok/sec: 103368.51, flops:90.52, batch-reuse:1
@ 12347 train 3.9142 , allloss: 3.9247, dt: 1252.86ms, fracRes: 0.5955, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6078, norm(y): 0.9815, norm:0.8057, tok/sec: 104618.37, flops:91.61, batch-reuse:1
@ 12348 train 3.7887 , allloss: 3.7992, dt: 1273.06ms, fracRes: 0.5954, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6075, norm(y): 0.9817, norm:0.7727, tok/sec: 102958.35, flops:90.16, batch-reuse:1
@ 12349 train 3.8696 , allloss: 3.8803, dt: 1256.26ms, fracRes: 0.5953, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6097, norm(y): 0.9816, norm:0.8234, tok/sec: 104335.39, flops:91.37, batch-reuse:1
@ 12350 train 3.9137 , allloss: 3.9245, dt: 1279.29ms, fracRes: 0.5958, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6111, norm(y): 0.9813, norm:0.9002, tok/sec: 102456.83, flops:89.72, batch-reuse:1
@ 12351 train 3.8771 , allloss: 3.8880, dt: 1273.80ms, fracRes: 0.5959, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6093, norm(y): 0.9814, norm:0.8265, tok/sec: 102898.52, flops:90.11, batch-reuse:1
@ 12352 train 3.9073 , allloss: 3.9175, dt: 1291.76ms, fracRes: 0.5946, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6053, norm(y): 0.9811, norm:0.7929, tok/sec: 101467.80, flops:88.85, batch-reuse:1
@ 12353 train 3.8270 , allloss: 3.8378, dt: 1257.41ms, fracRes: 0.5944, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6083, norm(y): 0.9812, norm:0.8602, tok/sec: 104240.08, flops:91.28, batch-reuse:1
@ 12354 train 3.8651 , allloss: 3.8758, dt: 1258.84ms, fracRes: 0.5943, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6072, norm(y): 0.9813, norm:0.7058, tok/sec: 104120.91, flops:91.18, batch-reuse:1
@ 12355 train 3.9835 , allloss: 3.9943, dt: 1258.78ms, fracRes: 0.5933, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6062, norm(y): 0.9813, norm:0.8689, tok/sec: 104126.28, flops:91.18, batch-reuse:1
@ 12356 train 3.8139 , allloss: 3.8248, dt: 1281.22ms, fracRes: 0.5947, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6077, norm(y): 0.9814, norm:0.7550, tok/sec: 102302.36, flops:89.58, batch-reuse:1
@ 12357 train 3.8882 , allloss: 3.8993, dt: 1266.61ms, fracRes: 0.5944, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6083, norm(y): 0.9816, norm:0.7699, tok/sec: 103482.80, flops:90.62, batch-reuse:1
@ 12358 train 3.9132 , allloss: 3.9247, dt: 1282.87ms, fracRes: 0.5939, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6096, norm(y): 0.9815, norm:0.8722, tok/sec: 102171.25, flops:89.47, batch-reuse:1
@ 12359 train 3.9519 , allloss: 3.9622, dt: 1268.74ms, fracRes: 0.5940, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6081, norm(y): 0.9813, norm:0.9587, tok/sec: 103309.07, flops:90.47, batch-reuse:1
@ 12360 train 3.9071 , allloss: 3.9177, dt: 1280.12ms, fracRes: 0.5936, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6123, norm(y): 0.9812, norm:0.8527, tok/sec: 102390.68, flops:89.66, batch-reuse:1
@ 12361 train 3.7310 , allloss: 3.7418, dt: 1251.84ms, fracRes: 0.5942, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6159, norm(y): 0.9815, norm:0.8406, tok/sec: 104703.29, flops:91.69, batch-reuse:1
@ 12362 train 3.8086 , allloss: 3.8192, dt: 1255.83ms, fracRes: 0.5944, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6122, norm(y): 0.9813, norm:0.7731, tok/sec: 104371.17, flops:91.40, batch-reuse:1
@ 12363 train 3.9472 , allloss: 3.9579, dt: 1256.30ms, fracRes: 0.5953, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6097, norm(y): 0.9812, norm:0.7438, tok/sec: 104331.73, flops:91.36, batch-reuse:1
@ 12364 train 3.8274 , allloss: 3.8378, dt: 1255.69ms, fracRes: 0.5953, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6070, norm(y): 0.9812, norm:0.8300, tok/sec: 104382.44, flops:91.41, batch-reuse:1
@ 12365 train 3.8767 , allloss: 3.8873, dt: 1280.94ms, fracRes: 0.5954, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6048, norm(y): 0.9811, norm:0.7646, tok/sec: 102324.87, flops:89.60, batch-reuse:1
@ 12366 train 3.8761 , allloss: 3.8866, dt: 1245.76ms, fracRes: 0.5950, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6043, norm(y): 0.9812, norm:0.7250, tok/sec: 105214.55, flops:92.13, batch-reuse:1
@ 12367 train 3.9006 , allloss: 3.9114, dt: 1263.32ms, fracRes: 0.5956, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6052, norm(y): 0.9811, norm:0.8600, tok/sec: 103751.69, flops:90.85, batch-reuse:1
@ 12368 train 3.9424 , allloss: 3.9537, dt: 1272.21ms, fracRes: 0.5956, norm(attn): 0.1689, norm(output): 0.2598, norm(x): 0.5993, norm(y): 0.9812, norm:0.7836, tok/sec: 103026.99, flops:90.22, batch-reuse:1
@ 12369 train 3.9647 , allloss: 3.9752, dt: 1260.33ms, fracRes: 0.5948, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6020, norm(y): 0.9810, norm:0.8302, tok/sec: 103998.44, flops:91.07, batch-reuse:1
@ 12370 train 3.8777 , allloss: 3.8884, dt: 1258.86ms, fracRes: 0.5950, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6037, norm(y): 0.9808, norm:0.8699, tok/sec: 104119.32, flops:91.18, batch-reuse:1
@ 12371 train 3.7938 , allloss: 3.8043, dt: 1282.73ms, fracRes: 0.5939, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6092, norm(y): 0.9810, norm:0.7914, tok/sec: 102182.21, flops:89.48, batch-reuse:1
@ 12372 train 3.7164 , allloss: 3.7283, dt: 1277.62ms, fracRes: 0.5951, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.6188, norm(y): 0.9811, norm:0.8138, tok/sec: 102590.48, flops:89.84, batch-reuse:1
@ 12373 train 3.8834 , allloss: 3.8939, dt: 1267.03ms, fracRes: 0.5947, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6101, norm(y): 0.9811, norm:0.8049, tok/sec: 103448.22, flops:90.59, batch-reuse:1
@ 12374 train 3.9619 , allloss: 3.9723, dt: 1278.84ms, fracRes: 0.5937, norm(attn): 0.1699, norm(output): 0.2637, norm(x): 0.6118, norm(y): 0.9809, norm:0.7516, tok/sec: 102493.22, flops:89.75, batch-reuse:1
@ 12375 train 3.8122 , allloss: 3.8225, dt: 1284.51ms, fracRes: 0.5935, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6109, norm(y): 0.9812, norm:0.7258, tok/sec: 102040.49, flops:89.36, batch-reuse:1
@ 12376 train 3.9437 , allloss: 3.9539, dt: 1263.74ms, fracRes: 0.5935, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6080, norm(y): 0.9812, norm:0.7454, tok/sec: 103717.57, flops:90.82, batch-reuse:1
@ 12377 train 3.9656 , allloss: 3.9758, dt: 1244.03ms, fracRes: 0.5942, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6065, norm(y): 0.9810, norm:0.7447, tok/sec: 105360.72, flops:92.26, batch-reuse:1
@ 12378 train 3.8679 , allloss: 3.8781, dt: 1254.09ms, fracRes: 0.5944, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6039, norm(y): 0.9811, norm:0.7619, tok/sec: 104515.40, flops:91.52, batch-reuse:1
@ 12379 train 3.8350 , allloss: 3.8454, dt: 1250.48ms, fracRes: 0.5948, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6045, norm(y): 0.9811, norm:0.7890, tok/sec: 104817.26, flops:91.79, batch-reuse:1
@ 12380 train 3.9348 , allloss: 3.9452, dt: 1277.46ms, fracRes: 0.5943, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6038, norm(y): 0.9810, norm:0.7425, tok/sec: 102603.86, flops:89.85, batch-reuse:1
@ 12381 train 3.8450 , allloss: 3.8554, dt: 1252.98ms, fracRes: 0.5941, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6053, norm(y): 0.9813, norm:0.7705, tok/sec: 104608.49, flops:91.60, batch-reuse:1
@ 12382 train 3.8168 , allloss: 3.8271, dt: 1295.09ms, fracRes: 0.5936, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6054, norm(y): 0.9812, norm:0.8046, tok/sec: 101206.52, flops:88.63, batch-reuse:1
@ 12383 train 3.8320 , allloss: 3.8422, dt: 1295.53ms, fracRes: 0.5938, norm(attn): 0.1709, norm(output): 0.2656, norm(x): 0.6067, norm(y): 0.9809, norm:0.7405, tok/sec: 101172.82, flops:88.60, batch-reuse:1
@ 12384 train 3.8022 , allloss: 3.8123, dt: 1291.33ms, fracRes: 0.5941, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6076, norm(y): 0.9808, norm:0.7030, tok/sec: 101501.92, flops:88.88, batch-reuse:1
@ 12385 train 3.8288 , allloss: 3.8388, dt: 1284.34ms, fracRes: 0.5950, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6071, norm(y): 0.9810, norm:0.8462, tok/sec: 102053.73, flops:89.37, batch-reuse:1
@ 12386 train 3.8166 , allloss: 3.8260, dt: 1291.15ms, fracRes: 0.5956, norm(attn): 0.1719, norm(output): 0.2578, norm(x): 0.6007, norm(y): 0.9815, norm:1.1667, tok/sec: 101515.51, flops:88.90, batch-reuse:1
@ 12387 train 3.9075 , allloss: 3.9179, dt: 1285.47ms, fracRes: 0.5954, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6052, norm(y): 0.9812, norm:0.8613, tok/sec: 101964.22, flops:89.29, batch-reuse:1
@ 12388 train 3.7646 , allloss: 3.7749, dt: 1275.33ms, fracRes: 0.5960, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6045, norm(y): 0.9812, norm:0.7806, tok/sec: 102775.06, flops:90.00, batch-reuse:1
@ 12389 train 3.8921 , allloss: 3.9024, dt: 1314.39ms, fracRes: 0.5957, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6029, norm(y): 0.9809, norm:0.7619, tok/sec: 99721.04, flops:87.32, batch-reuse:1
@ 12390 train 3.9095 , allloss: 3.9197, dt: 1275.82ms, fracRes: 0.5956, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6023, norm(y): 0.9810, norm:0.7200, tok/sec: 102735.71, flops:89.96, batch-reuse:1
@ 12391 train 3.8585 , allloss: 3.8686, dt: 1280.29ms, fracRes: 0.5935, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6025, norm(y): 0.9811, norm:0.7512, tok/sec: 102376.93, flops:89.65, batch-reuse:1
@ 12392 train 3.8240 , allloss: 3.8345, dt: 1274.45ms, fracRes: 0.5937, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6095, norm(y): 0.9815, norm:0.7477, tok/sec: 102845.79, flops:90.06, batch-reuse:1
@ 12393 train 3.7826 , allloss: 3.7927, dt: 1288.65ms, fracRes: 0.5923, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6057, norm(y): 0.9811, norm:0.7458, tok/sec: 101712.38, flops:89.07, batch-reuse:1
@ 12394 train 3.9169 , allloss: 3.9276, dt: 1258.34ms, fracRes: 0.5930, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6072, norm(y): 0.9812, norm:0.8190, tok/sec: 104162.77, flops:91.21, batch-reuse:1
@ 12395 train 3.9428 , allloss: 3.9532, dt: 1272.28ms, fracRes: 0.5932, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6082, norm(y): 0.9814, norm:0.9051, tok/sec: 103021.47, flops:90.21, batch-reuse:1
@ 12396 train 3.8498 , allloss: 3.8604, dt: 1303.02ms, fracRes: 0.5927, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6120, norm(y): 0.9813, norm:0.8512, tok/sec: 100591.19, flops:88.09, batch-reuse:1
@ 12397 train 3.7828 , allloss: 3.7932, dt: 1276.02ms, fracRes: 0.5928, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6065, norm(y): 0.9812, norm:0.7871, tok/sec: 102719.47, flops:89.95, batch-reuse:1
@ 12398 train 3.9274 , allloss: 3.9379, dt: 1269.59ms, fracRes: 0.5940, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6068, norm(y): 0.9811, norm:0.9130, tok/sec: 103239.56, flops:90.41, batch-reuse:1
@ 12399 train 3.8209 , allloss: 3.8316, dt: 1269.59ms, fracRes: 0.5954, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6084, norm(y): 0.9811, norm:0.9167, tok/sec: 103239.79, flops:90.41, batch-reuse:1
@ 12400 train 3.8842 , allloss: 3.8947, dt: 1279.10ms, fracRes: 0.5959, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6063, norm(y): 0.9812, norm:0.8053, tok/sec: 102472.44, flops:89.73, batch-reuse:1
@ 12401 train 3.8964 , allloss: 3.9070, dt: 1269.63ms, fracRes: 0.5953, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6046, norm(y): 0.9811, norm:0.7876, tok/sec: 103236.26, flops:90.40, batch-reuse:1
@ 12402 train 3.9697 , allloss: 3.9801, dt: 1263.56ms, fracRes: 0.5956, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6080, norm(y): 0.9811, norm:0.8181, tok/sec: 103732.15, flops:90.84, batch-reuse:1
@ 12403 train 3.9328 , allloss: 3.9430, dt: 1269.26ms, fracRes: 0.5938, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6067, norm(y): 0.9808, norm:0.7940, tok/sec: 103266.38, flops:90.43, batch-reuse:1
@ 12404 train 3.9120 , allloss: 3.9222, dt: 1269.71ms, fracRes: 0.5929, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6046, norm(y): 0.9809, norm:0.8983, tok/sec: 103230.16, flops:90.40, batch-reuse:1
@ 12405 train 3.9125 , allloss: 3.9227, dt: 1287.34ms, fracRes: 0.5927, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6055, norm(y): 0.9808, norm:0.7293, tok/sec: 101815.76, flops:89.16, batch-reuse:1
@ 12406 train 3.9181 , allloss: 3.9285, dt: 1275.91ms, fracRes: 0.5930, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6091, norm(y): 0.9810, norm:0.8917, tok/sec: 102728.16, flops:89.96, batch-reuse:1
@ 12407 train 3.9390 , allloss: 3.9495, dt: 1289.62ms, fracRes: 0.5936, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6076, norm(y): 0.9809, norm:0.7766, tok/sec: 101635.88, flops:89.00, batch-reuse:1
@ 12408 train 3.9109 , allloss: 3.9212, dt: 1268.88ms, fracRes: 0.5934, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6054, norm(y): 0.9808, norm:1.1792, tok/sec: 103297.02, flops:90.46, batch-reuse:1
@ 12409 train 3.9238 , allloss: 3.9341, dt: 1280.36ms, fracRes: 0.5941, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6071, norm(y): 0.9809, norm:1.2214, tok/sec: 102371.00, flops:89.64, batch-reuse:1
@ 12410 train 3.8954 , allloss: 3.9059, dt: 1272.96ms, fracRes: 0.5947, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6089, norm(y): 0.9812, norm:0.8585, tok/sec: 102966.18, flops:90.17, batch-reuse:1
@ 12411 train 3.8264 , allloss: 3.8369, dt: 1275.28ms, fracRes: 0.5943, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6083, norm(y): 0.9812, norm:0.9039, tok/sec: 102778.71, flops:90.00, batch-reuse:1
@ 12412 train 3.7313 , allloss: 3.7422, dt: 1271.82ms, fracRes: 0.5954, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6101, norm(y): 0.9811, norm:0.8816, tok/sec: 103058.99, flops:90.25, batch-reuse:1
@ 12413 train 3.7441 , allloss: 3.7543, dt: 1260.84ms, fracRes: 0.5953, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6065, norm(y): 0.9812, norm:0.8152, tok/sec: 103956.14, flops:91.03, batch-reuse:1
@ 12414 train 3.7476 , allloss: 3.7579, dt: 1244.62ms, fracRes: 0.5954, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6096, norm(y): 0.9811, norm:0.9008, tok/sec: 105310.89, flops:92.22, batch-reuse:1
@ 12415 train 3.7228 , allloss: 3.7331, dt: 1284.35ms, fracRes: 0.5950, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6093, norm(y): 0.9812, norm:0.7523, tok/sec: 102053.53, flops:89.37, batch-reuse:1
@ 12416 train 3.7008 , allloss: 3.7113, dt: 1264.67ms, fracRes: 0.5950, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6116, norm(y): 0.9811, norm:0.7973, tok/sec: 103641.24, flops:90.76, batch-reuse:1
@ 12417 train 3.7607 , allloss: 3.7719, dt: 1267.99ms, fracRes: 0.5940, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6105, norm(y): 0.9809, norm:0.7801, tok/sec: 103369.95, flops:90.52, batch-reuse:1
@ 12418 train 3.9176 , allloss: 3.9289, dt: 1307.45ms, fracRes: 0.5941, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6101, norm(y): 0.9809, norm:0.7895, tok/sec: 100250.27, flops:87.79, batch-reuse:1
@ 12419 train 3.8207 , allloss: 3.8312, dt: 1274.79ms, fracRes: 0.5947, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6131, norm(y): 0.9813, norm:0.8747, tok/sec: 102818.38, flops:90.04, batch-reuse:1
@ 12420 train 3.8345 , allloss: 3.8454, dt: 1263.95ms, fracRes: 0.5941, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6092, norm(y): 0.9811, norm:0.7360, tok/sec: 103700.65, flops:90.81, batch-reuse:1
@ 12421 train 3.8485 , allloss: 3.8590, dt: 1273.94ms, fracRes: 0.5939, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6097, norm(y): 0.9811, norm:0.7942, tok/sec: 102886.98, flops:90.10, batch-reuse:1
@ 12422 train 3.7873 , allloss: 3.7982, dt: 1252.72ms, fracRes: 0.5953, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6131, norm(y): 0.9813, norm:0.7965, tok/sec: 104629.80, flops:91.62, batch-reuse:1
@ 12423 train 3.8022 , allloss: 3.8122, dt: 1287.51ms, fracRes: 0.5954, norm(attn): 0.1699, norm(output): 0.2637, norm(x): 0.6070, norm(y): 0.9808, norm:0.7252, tok/sec: 101802.45, flops:89.15, batch-reuse:1
@ 12424 train 3.7553 , allloss: 3.7657, dt: 1254.58ms, fracRes: 0.5956, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6077, norm(y): 0.9811, norm:0.8584, tok/sec: 104474.92, flops:91.49, batch-reuse:1
@ 12425 train 3.6986 , allloss: 3.7091, dt: 1287.41ms, fracRes: 0.5949, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6065, norm(y): 0.9813, norm:0.9103, tok/sec: 101810.53, flops:89.15, batch-reuse:1
@ 12426 train 3.6737 , allloss: 3.6841, dt: 1271.08ms, fracRes: 0.5953, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6061, norm(y): 0.9814, norm:0.8061, tok/sec: 103118.82, flops:90.30, batch-reuse:1
@ 12427 train 3.7984 , allloss: 3.8086, dt: 1282.01ms, fracRes: 0.5952, norm(attn): 0.1729, norm(output): 0.2637, norm(x): 0.6053, norm(y): 0.9809, norm:0.7181, tok/sec: 102239.24, flops:89.53, batch-reuse:1
@ 12428 train 3.9270 , allloss: 3.9374, dt: 1280.58ms, fracRes: 0.5959, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6061, norm(y): 0.9809, norm:0.8976, tok/sec: 102353.92, flops:89.63, batch-reuse:1
@ 12429 train 3.8336 , allloss: 3.8438, dt: 1302.09ms, fracRes: 0.5951, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6048, norm(y): 0.9807, norm:0.8068, tok/sec: 100662.93, flops:88.15, batch-reuse:1
@ 12430 train 4.0505 , allloss: 4.0607, dt: 1278.39ms, fracRes: 0.5956, norm(attn): 0.1699, norm(output): 0.2598, norm(x): 0.6038, norm(y): 0.9806, norm:0.8511, tok/sec: 102529.10, flops:89.78, batch-reuse:1
@ 12431 train 3.7675 , allloss: 3.7779, dt: 1277.32ms, fracRes: 0.5945, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6035, norm(y): 0.9807, norm:0.7623, tok/sec: 102614.93, flops:89.86, batch-reuse:1
@ 12432 train 3.9362 , allloss: 3.9470, dt: 1264.14ms, fracRes: 0.5949, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6066, norm(y): 0.9807, norm:0.7958, tok/sec: 103684.45, flops:90.79, batch-reuse:1
@ 12433 train 3.7068 , allloss: 3.7172, dt: 1263.65ms, fracRes: 0.5952, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6036, norm(y): 0.9812, norm:0.9012, tok/sec: 103725.22, flops:90.83, batch-reuse:1
@ 12434 train 3.8168 , allloss: 3.8271, dt: 1262.95ms, fracRes: 0.5944, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6016, norm(y): 0.9807, norm:0.7656, tok/sec: 103782.22, flops:90.88, batch-reuse:1
@ 12435 train 3.7998 , allloss: 3.8105, dt: 1261.68ms, fracRes: 0.5955, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6045, norm(y): 0.9813, norm:0.8003, tok/sec: 103886.81, flops:90.97, batch-reuse:1
@ 12436 train 3.7944 , allloss: 3.8047, dt: 1256.45ms, fracRes: 0.5949, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6017, norm(y): 0.9811, norm:0.7973, tok/sec: 104319.20, flops:91.35, batch-reuse:1
@ 12437 train 3.8220 , allloss: 3.8329, dt: 1290.10ms, fracRes: 0.5949, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6055, norm(y): 0.9810, norm:0.7324, tok/sec: 101598.56, flops:88.97, batch-reuse:1
@ 12438 train 3.8274 , allloss: 3.8380, dt: 1274.95ms, fracRes: 0.5950, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6076, norm(y): 0.9811, norm:0.7860, tok/sec: 102805.79, flops:90.03, batch-reuse:1
@ 12439 train 3.7993 , allloss: 3.8097, dt: 1272.50ms, fracRes: 0.5950, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6064, norm(y): 0.9809, norm:0.8118, tok/sec: 103003.44, flops:90.20, batch-reuse:1
@ 12440 train 3.8251 , allloss: 3.8359, dt: 1251.67ms, fracRes: 0.5952, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6056, norm(y): 0.9808, norm:0.6869, tok/sec: 104717.29, flops:91.70, batch-reuse:1
@ 12441 train 4.1417 , allloss: 4.1525, dt: 1273.51ms, fracRes: 0.5936, norm(attn): 0.1709, norm(output): 0.2656, norm(x): 0.6054, norm(y): 0.9801, norm:0.9028, tok/sec: 102921.50, flops:90.13, batch-reuse:1
@ 12442 train 3.8273 , allloss: 3.8382, dt: 1273.99ms, fracRes: 0.5954, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6058, norm(y): 0.9808, norm:0.8418, tok/sec: 102883.29, flops:90.09, batch-reuse:1
@ 12443 train 3.8022 , allloss: 3.8129, dt: 1276.05ms, fracRes: 0.5944, norm(attn): 0.1729, norm(output): 0.2637, norm(x): 0.6042, norm(y): 0.9807, norm:0.8207, tok/sec: 102717.09, flops:89.95, batch-reuse:1
@ 12444 train 3.8463 , allloss: 3.8565, dt: 1316.53ms, fracRes: 0.5952, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6043, norm(y): 0.9810, norm:0.8983, tok/sec: 99559.00, flops:87.18, batch-reuse:1
@ 12445 train 3.8176 , allloss: 3.8276, dt: 1312.54ms, fracRes: 0.5947, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6055, norm(y): 0.9809, norm:0.8247, tok/sec: 99861.35, flops:87.45, batch-reuse:1
@ 12446 train 3.8292 , allloss: 3.8391, dt: 1268.52ms, fracRes: 0.5942, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6084, norm(y): 0.9807, norm:0.7917, tok/sec: 103327.11, flops:90.48, batch-reuse:1
@ 12447 train 3.8074 , allloss: 3.8174, dt: 1290.68ms, fracRes: 0.5941, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6087, norm(y): 0.9807, norm:0.8051, tok/sec: 101552.81, flops:88.93, batch-reuse:1
@ 12448 train 3.8847 , allloss: 3.8954, dt: 1264.34ms, fracRes: 0.5945, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6107, norm(y): 0.9807, norm:0.7862, tok/sec: 103668.69, flops:90.78, batch-reuse:1
@ 12449 train 3.8125 , allloss: 3.8230, dt: 1258.93ms, fracRes: 0.5944, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6087, norm(y): 0.9808, norm:0.8039, tok/sec: 104113.91, flops:91.17, batch-reuse:1
@ 12450 train 3.7858 , allloss: 3.7962, dt: 1288.83ms, fracRes: 0.5948, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6067, norm(y): 0.9807, norm:0.8509, tok/sec: 101698.66, flops:89.06, batch-reuse:1
@ 12451 train 3.7623 , allloss: 3.7727, dt: 1289.31ms, fracRes: 0.5947, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6066, norm(y): 0.9808, norm:0.8043, tok/sec: 101660.28, flops:89.02, batch-reuse:1
@ 12452 train 3.8707 , allloss: 3.8809, dt: 1255.17ms, fracRes: 0.5946, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6039, norm(y): 0.9806, norm:0.8381, tok/sec: 104425.55, flops:91.44, batch-reuse:1
@ 12453 train 3.8421 , allloss: 3.8522, dt: 1249.12ms, fracRes: 0.5951, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6002, norm(y): 0.9805, norm:0.9183, tok/sec: 104931.33, flops:91.89, batch-reuse:1
@ 12454 train 3.7384 , allloss: 3.7486, dt: 1282.69ms, fracRes: 0.5949, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6032, norm(y): 0.9807, norm:0.7796, tok/sec: 102185.38, flops:89.48, batch-reuse:1
@ 12455 train 3.7389 , allloss: 3.7490, dt: 1262.42ms, fracRes: 0.5948, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6011, norm(y): 0.9807, norm:0.7216, tok/sec: 103826.05, flops:90.92, batch-reuse:1
@ 12456 train 3.8369 , allloss: 3.8479, dt: 1264.55ms, fracRes: 0.5950, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6085, norm(y): 0.9808, norm:0.7390, tok/sec: 103651.10, flops:90.77, batch-reuse:1
@ 12457 train 3.8407 , allloss: 3.8507, dt: 1264.33ms, fracRes: 0.5933, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6029, norm(y): 0.9807, norm:0.6875, tok/sec: 103669.40, flops:90.78, batch-reuse:1
@ 12458 train 3.8144 , allloss: 3.8247, dt: 1267.81ms, fracRes: 0.5932, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6037, norm(y): 0.9808, norm:0.6923, tok/sec: 103384.94, flops:90.53, batch-reuse:1
@ 12459 train 3.8552 , allloss: 3.8654, dt: 1263.24ms, fracRes: 0.5937, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6044, norm(y): 0.9807, norm:0.7155, tok/sec: 103758.72, flops:90.86, batch-reuse:1
@ 12460 train 3.8160 , allloss: 3.8264, dt: 1265.66ms, fracRes: 0.5940, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6039, norm(y): 0.9806, norm:0.6921, tok/sec: 103560.56, flops:90.69, batch-reuse:1
@ 12461 train 3.8389 , allloss: 3.8490, dt: 1279.96ms, fracRes: 0.5945, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6039, norm(y): 0.9808, norm:0.6932, tok/sec: 102403.49, flops:89.67, batch-reuse:1
@ 12462 train 3.6176 , allloss: 3.6276, dt: 1272.28ms, fracRes: 0.5955, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6046, norm(y): 0.9811, norm:0.7549, tok/sec: 103020.94, flops:90.21, batch-reuse:1
@ 12463 train 3.6759 , allloss: 3.6868, dt: 1290.53ms, fracRes: 0.5959, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6111, norm(y): 0.9811, norm:0.8144, tok/sec: 101564.33, flops:88.94, batch-reuse:1
@ 12464 train 3.6265 , allloss: 3.6381, dt: 1279.37ms, fracRes: 0.5949, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6004, norm(y): 0.9809, norm:0.7708, tok/sec: 102450.55, flops:89.71, batch-reuse:1
@ 12465 train 3.6937 , allloss: 3.7085, dt: 1250.86ms, fracRes: 0.5948, norm(attn): 0.1709, norm(output): 0.2578, norm(x): 0.5998, norm(y): 0.9808, norm:0.7408, tok/sec: 104785.65, flops:91.76, batch-reuse:1
@ 12466 train 3.6975 , allloss: 3.7075, dt: 1263.37ms, fracRes: 0.5946, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6004, norm(y): 0.9807, norm:0.7284, tok/sec: 103747.91, flops:90.85, batch-reuse:1
@ 12467 train 3.6161 , allloss: 3.6265, dt: 1260.31ms, fracRes: 0.5945, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6036, norm(y): 0.9809, norm:0.8285, tok/sec: 104000.03, flops:91.07, batch-reuse:1
@ 12468 train 3.5935 , allloss: 3.6037, dt: 1268.33ms, fracRes: 0.5934, norm(attn): 0.1719, norm(output): 0.2598, norm(x): 0.6003, norm(y): 0.9808, norm:0.7164, tok/sec: 103341.91, flops:90.50, batch-reuse:1
@ 12469 train 3.5912 , allloss: 3.6018, dt: 1280.49ms, fracRes: 0.5932, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6055, norm(y): 0.9809, norm:0.8361, tok/sec: 102361.15, flops:89.64, batch-reuse:1
@ 12470 train 3.6319 , allloss: 3.6426, dt: 1284.33ms, fracRes: 0.5936, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6074, norm(y): 0.9809, norm:0.8381, tok/sec: 102054.51, flops:89.37, batch-reuse:1
@ 12471 train 3.7514 , allloss: 3.7616, dt: 1296.28ms, fracRes: 0.5942, norm(attn): 0.1729, norm(output): 0.2637, norm(x): 0.6093, norm(y): 0.9807, norm:0.8158, tok/sec: 101113.65, flops:88.54, batch-reuse:1
@ 12472 train 3.5472 , allloss: 3.5571, dt: 1258.67ms, fracRes: 0.5956, norm(attn): 0.1699, norm(output): 0.2637, norm(x): 0.6086, norm(y): 0.9808, norm:0.7379, tok/sec: 104134.95, flops:91.19, batch-reuse:1
@ 12473 train 3.6489 , allloss: 3.6589, dt: 1268.94ms, fracRes: 0.5955, norm(attn): 0.1719, norm(output): 0.2598, norm(x): 0.6066, norm(y): 0.9808, norm:0.7600, tok/sec: 103292.16, flops:90.45, batch-reuse:1
@ 12474 train 3.6733 , allloss: 3.6839, dt: 1297.77ms, fracRes: 0.5945, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6060, norm(y): 0.9808, norm:0.8094, tok/sec: 100997.79, flops:88.44, batch-reuse:1
@ 12475 train 3.6883 , allloss: 3.6987, dt: 1249.55ms, fracRes: 0.5929, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6025, norm(y): 0.9807, norm:0.7736, tok/sec: 104895.37, flops:91.86, batch-reuse:1
@ 12476 train 3.6910 , allloss: 3.7009, dt: 1265.35ms, fracRes: 0.5930, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6022, norm(y): 0.9807, norm:0.8024, tok/sec: 103585.27, flops:90.71, batch-reuse:1
@ 12477 train 3.6146 , allloss: 3.6245, dt: 1261.85ms, fracRes: 0.5935, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6047, norm(y): 0.9805, norm:0.8267, tok/sec: 103872.97, flops:90.96, batch-reuse:1
@ 12478 train 3.5906 , allloss: 3.6011, dt: 1259.58ms, fracRes: 0.5949, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6089, norm(y): 0.9807, norm:0.7104, tok/sec: 104060.47, flops:91.12, batch-reuse:1
@ 12479 train 3.7513 , allloss: 3.7614, dt: 1254.87ms, fracRes: 0.5949, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6083, norm(y): 0.9805, norm:0.7608, tok/sec: 104451.02, flops:91.47, batch-reuse:1
@ 12480 train 3.7417 , allloss: 3.7523, dt: 1286.37ms, fracRes: 0.5949, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6100, norm(y): 0.9807, norm:0.8491, tok/sec: 101892.58, flops:89.23, batch-reuse:1
@ 12481 train 3.6296 , allloss: 3.6397, dt: 1317.72ms, fracRes: 0.5941, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6091, norm(y): 0.9806, norm:0.8085, tok/sec: 99469.04, flops:87.10, batch-reuse:1
@ 12482 train 3.6611 , allloss: 3.6715, dt: 1309.16ms, fracRes: 0.5936, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6030, norm(y): 0.9807, norm:0.8661, tok/sec: 100118.81, flops:87.67, batch-reuse:1
@ 12483 train 3.6296 , allloss: 3.6402, dt: 1264.81ms, fracRes: 0.5938, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6010, norm(y): 0.9808, norm:0.7503, tok/sec: 103629.67, flops:90.75, batch-reuse:1
@ 12484 train 3.6619 , allloss: 3.6727, dt: 1264.88ms, fracRes: 0.5944, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6004, norm(y): 0.9807, norm:0.8012, tok/sec: 103623.85, flops:90.74, batch-reuse:1
@ 12485 train 3.6357 , allloss: 3.6459, dt: 1266.38ms, fracRes: 0.5942, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6010, norm(y): 0.9807, norm:0.7366, tok/sec: 103501.12, flops:90.63, batch-reuse:1
@ 12486 train 3.6500 , allloss: 3.6604, dt: 1271.66ms, fracRes: 0.5946, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6035, norm(y): 0.9806, norm:0.7760, tok/sec: 103071.65, flops:90.26, batch-reuse:1
@ 12487 train 3.6657 , allloss: 3.6758, dt: 1253.15ms, fracRes: 0.5943, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.5985, norm(y): 0.9805, norm:0.7339, tok/sec: 104593.92, flops:91.59, batch-reuse:1
@ 12488 train 3.4667 , allloss: 3.4771, dt: 1270.32ms, fracRes: 0.5949, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.5997, norm(y): 0.9808, norm:0.7504, tok/sec: 103180.25, flops:90.35, batch-reuse:1
@ 12489 train 3.6375 , allloss: 3.6476, dt: 1288.54ms, fracRes: 0.5944, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.5997, norm(y): 0.9806, norm:0.7433, tok/sec: 101721.28, flops:89.08, batch-reuse:1
@ 12490 train 3.7292 , allloss: 3.7395, dt: 1278.81ms, fracRes: 0.5936, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.5994, norm(y): 0.9806, norm:0.8165, tok/sec: 102494.98, flops:89.75, batch-reuse:1
@ 12491 train 3.7641 , allloss: 3.7743, dt: 1288.58ms, fracRes: 0.5929, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6006, norm(y): 0.9803, norm:0.9078, tok/sec: 101717.84, flops:89.07, batch-reuse:1
@ 12492 train 3.6441 , allloss: 3.6542, dt: 1279.82ms, fracRes: 0.5937, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5982, norm(y): 0.9806, norm:0.8601, tok/sec: 102414.35, flops:89.68, batch-reuse:1
@ 12493 train 3.7238 , allloss: 3.7341, dt: 1290.91ms, fracRes: 0.5942, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6011, norm(y): 0.9807, norm:0.7541, tok/sec: 101534.22, flops:88.91, batch-reuse:1
@ 12494 train 3.6218 , allloss: 3.6321, dt: 1280.40ms, fracRes: 0.5942, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6023, norm(y): 0.9806, norm:0.8479, tok/sec: 102368.18, flops:89.64, batch-reuse:1
@ 12495 train 3.8507 , allloss: 3.8613, dt: 1276.24ms, fracRes: 0.5947, norm(attn): 0.1709, norm(output): 0.2656, norm(x): 0.6119, norm(y): 0.9804, norm:0.9527, tok/sec: 102702.00, flops:89.93, batch-reuse:1
@ 12496 train 3.4727 , allloss: 3.4834, dt: 1267.53ms, fracRes: 0.5947, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6099, norm(y): 0.9807, norm:0.8240, tok/sec: 103407.63, flops:90.55, batch-reuse:1
@ 12497 train 3.6959 , allloss: 3.7063, dt: 1278.73ms, fracRes: 0.5939, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6053, norm(y): 0.9807, norm:0.7749, tok/sec: 102501.57, flops:89.76, batch-reuse:1
@ 12498 train 3.7299 , allloss: 3.7406, dt: 1263.23ms, fracRes: 0.5934, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6056, norm(y): 0.9804, norm:0.8320, tok/sec: 103759.40, flops:90.86, batch-reuse:1
@ 12499 train 3.6227 , allloss: 3.6328, dt: 1282.82ms, fracRes: 0.5928, norm(attn): 0.1709, norm(output): 0.2656, norm(x): 0.6052, norm(y): 0.9805, norm:0.8143, tok/sec: 102175.22, flops:89.47, batch-reuse:1
@ 12500 train 3.5504 , allloss: 3.5606, dt: 1262.01ms, fracRes: 0.5932, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6016, norm(y): 0.9806, norm:0.8318, tok/sec: 103859.75, flops:90.95, batch-reuse:1
@ 12501 train 3.6362 , allloss: 3.6474, dt: 1258.27ms, fracRes: 0.5939, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6034, norm(y): 0.9808, norm:0.8193, tok/sec: 104168.83, flops:91.22, batch-reuse:1
@ 12502 train 3.7381 , allloss: 3.7487, dt: 1268.51ms, fracRes: 0.5935, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.5972, norm(y): 0.9805, norm:0.7970, tok/sec: 103327.73, flops:90.48, batch-reuse:1
@ 12503 train 3.7473 , allloss: 3.7582, dt: 1292.09ms, fracRes: 0.5936, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6016, norm(y): 0.9804, norm:0.9888, tok/sec: 101441.69, flops:88.83, batch-reuse:1
@ 12504 train 3.6085 , allloss: 3.6188, dt: 1311.72ms, fracRes: 0.5940, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.5990, norm(y): 0.9804, norm:0.8501, tok/sec: 99923.48, flops:87.50, batch-reuse:1
@ 12505 train 3.5679 , allloss: 3.5782, dt: 1258.87ms, fracRes: 0.5950, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6002, norm(y): 0.9806, norm:0.7895, tok/sec: 104118.55, flops:91.18, batch-reuse:1
@ 12506 train 3.6422 , allloss: 3.6528, dt: 1277.08ms, fracRes: 0.5947, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6028, norm(y): 0.9806, norm:1.0673, tok/sec: 102634.26, flops:89.88, batch-reuse:1
@ 12507 train 3.6477 , allloss: 3.6578, dt: 1272.24ms, fracRes: 0.5947, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6008, norm(y): 0.9804, norm:0.7458, tok/sec: 103024.61, flops:90.22, batch-reuse:1
@ 12508 train 3.6513 , allloss: 3.6624, dt: 1299.49ms, fracRes: 0.5952, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6084, norm(y): 0.9804, norm:1.1173, tok/sec: 100864.35, flops:88.33, batch-reuse:1
@ 12509 train 3.7758 , allloss: 3.7863, dt: 1270.84ms, fracRes: 0.5953, norm(attn): 0.1699, norm(output): 0.2637, norm(x): 0.6044, norm(y): 0.9803, norm:0.9202, tok/sec: 103138.11, flops:90.32, batch-reuse:1
@ 12510 train 3.8307 , allloss: 3.8410, dt: 1281.78ms, fracRes: 0.5953, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6037, norm(y): 0.9803, norm:0.8412, tok/sec: 102258.04, flops:89.55, batch-reuse:1
@ 12511 train 3.8554 , allloss: 3.8656, dt: 1296.00ms, fracRes: 0.5947, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6023, norm(y): 0.9803, norm:0.9800, tok/sec: 101135.43, flops:88.56, batch-reuse:1
@ 12512 train 3.8849 , allloss: 3.8954, dt: 1317.44ms, fracRes: 0.5944, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6027, norm(y): 0.9803, norm:0.7545, tok/sec: 99489.70, flops:87.12, batch-reuse:1
@ 12513 train 3.7743 , allloss: 3.7848, dt: 1315.91ms, fracRes: 0.5942, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6071, norm(y): 0.9804, norm:0.9276, tok/sec: 99605.28, flops:87.22, batch-reuse:1
@ 12514 train 3.7477 , allloss: 3.7580, dt: 1282.60ms, fracRes: 0.5934, norm(attn): 0.1709, norm(output): 0.2656, norm(x): 0.6093, norm(y): 0.9803, norm:0.8362, tok/sec: 102192.81, flops:89.49, batch-reuse:1
@ 12515 train 3.9488 , allloss: 3.9596, dt: 1276.14ms, fracRes: 0.5925, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.6080, norm(y): 0.9802, norm:0.8984, tok/sec: 102709.70, flops:89.94, batch-reuse:1
@ 12516 train 3.9163 , allloss: 3.9268, dt: 1257.10ms, fracRes: 0.5930, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6073, norm(y): 0.9801, norm:0.8824, tok/sec: 104265.52, flops:91.30, batch-reuse:1
@ 12517 train 4.0577 , allloss: 4.0682, dt: 1265.66ms, fracRes: 0.5949, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6093, norm(y): 0.9803, norm:0.8543, tok/sec: 103560.27, flops:90.69, batch-reuse:1
@ 12518 train 3.8982 , allloss: 3.9089, dt: 1270.39ms, fracRes: 0.5949, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6061, norm(y): 0.9802, norm:0.8211, tok/sec: 103174.52, flops:90.35, batch-reuse:1
@ 12519 train 3.8395 , allloss: 3.8500, dt: 1278.20ms, fracRes: 0.5956, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6091, norm(y): 0.9802, norm:0.7737, tok/sec: 102544.15, flops:89.80, batch-reuse:1
@ 12520 train 3.8063 , allloss: 3.8170, dt: 1254.60ms, fracRes: 0.5954, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6114, norm(y): 0.9799, norm:0.8106, tok/sec: 104473.37, flops:91.49, batch-reuse:1
@ 12521 train 3.7084 , allloss: 3.7186, dt: 1272.48ms, fracRes: 0.5950, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6084, norm(y): 0.9801, norm:0.8013, tok/sec: 103005.14, flops:90.20, batch-reuse:1
@ 12522 train 3.8566 , allloss: 3.8671, dt: 1271.64ms, fracRes: 0.5952, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6116, norm(y): 0.9800, norm:0.7802, tok/sec: 103073.21, flops:90.26, batch-reuse:1
@ 12523 train 3.8606 , allloss: 3.8707, dt: 1279.25ms, fracRes: 0.5944, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6087, norm(y): 0.9799, norm:0.7427, tok/sec: 102460.39, flops:89.72, batch-reuse:1
@ 12524 train 3.8719 , allloss: 3.8825, dt: 1270.61ms, fracRes: 0.5944, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6092, norm(y): 0.9801, norm:0.7771, tok/sec: 103156.40, flops:90.33, batch-reuse:1
@ 12525 train 3.8695 , allloss: 3.8801, dt: 1273.40ms, fracRes: 0.5931, norm(attn): 0.1709, norm(output): 0.2656, norm(x): 0.6074, norm(y): 0.9800, norm:0.7414, tok/sec: 102930.77, flops:90.14, batch-reuse:1
@ 12526 train 3.8032 , allloss: 3.8139, dt: 1268.55ms, fracRes: 0.5924, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6047, norm(y): 0.9802, norm:0.7773, tok/sec: 103324.66, flops:90.48, batch-reuse:1
@ 12527 train 3.8256 , allloss: 3.8360, dt: 1285.52ms, fracRes: 0.5925, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6010, norm(y): 0.9803, norm:0.8009, tok/sec: 101960.10, flops:89.29, batch-reuse:1
@ 12528 train 3.8157 , allloss: 3.8262, dt: 1281.84ms, fracRes: 0.5927, norm(attn): 0.1729, norm(output): 0.2637, norm(x): 0.6030, norm(y): 0.9802, norm:0.7893, tok/sec: 102252.62, flops:89.54, batch-reuse:1
@ 12529 train 3.7914 , allloss: 3.8023, dt: 1284.78ms, fracRes: 0.5933, norm(attn): 0.1729, norm(output): 0.2637, norm(x): 0.6062, norm(y): 0.9801, norm:0.7618, tok/sec: 102019.02, flops:89.34, batch-reuse:1
@ 12530 train 3.8160 , allloss: 3.8263, dt: 1310.44ms, fracRes: 0.5946, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6037, norm(y): 0.9802, norm:0.8252, tok/sec: 100021.40, flops:87.59, batch-reuse:1
@ 12531 train 3.8181 , allloss: 3.8290, dt: 1263.17ms, fracRes: 0.5946, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6074, norm(y): 0.9799, norm:0.7838, tok/sec: 103764.03, flops:90.86, batch-reuse:1
@ 12532 train 3.8904 , allloss: 3.9007, dt: 1264.47ms, fracRes: 0.5948, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6035, norm(y): 0.9801, norm:0.7545, tok/sec: 103657.51, flops:90.77, batch-reuse:1
@ 12533 train 3.9045 , allloss: 3.9151, dt: 1270.50ms, fracRes: 0.5943, norm(attn): 0.1729, norm(output): 0.2637, norm(x): 0.6094, norm(y): 0.9801, norm:0.7326, tok/sec: 103165.78, flops:90.34, batch-reuse:1
@ 12534 train 3.8657 , allloss: 3.8759, dt: 1265.66ms, fracRes: 0.5936, norm(attn): 0.1729, norm(output): 0.2637, norm(x): 0.6073, norm(y): 0.9799, norm:0.7065, tok/sec: 103560.39, flops:90.69, batch-reuse:1
@ 12535 train 3.9010 , allloss: 3.9112, dt: 1274.20ms, fracRes: 0.5938, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6100, norm(y): 0.9797, norm:0.7463, tok/sec: 102866.42, flops:90.08, batch-reuse:1
@ 12536 train 3.8029 , allloss: 3.8132, dt: 1253.84ms, fracRes: 0.5940, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6115, norm(y): 0.9799, norm:0.8303, tok/sec: 104536.21, flops:91.54, batch-reuse:1
@ 12537 train 3.8724 , allloss: 3.8827, dt: 1255.45ms, fracRes: 0.5941, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6114, norm(y): 0.9799, norm:0.8226, tok/sec: 104402.29, flops:91.42, batch-reuse:1
@ 12538 train 3.8453 , allloss: 3.8554, dt: 1264.43ms, fracRes: 0.5942, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6055, norm(y): 0.9800, norm:0.7376, tok/sec: 103660.58, flops:90.77, batch-reuse:1
@ 12539 train 3.8329 , allloss: 3.8433, dt: 1297.77ms, fracRes: 0.5936, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6057, norm(y): 0.9800, norm:0.7582, tok/sec: 100998.23, flops:88.44, batch-reuse:1
@ 12540 train 3.8251 , allloss: 3.8354, dt: 1257.49ms, fracRes: 0.5934, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6023, norm(y): 0.9799, norm:0.7775, tok/sec: 104233.22, flops:91.28, batch-reuse:1
@ 12541 train 3.8098 , allloss: 3.8206, dt: 1276.88ms, fracRes: 0.5930, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6065, norm(y): 0.9798, norm:0.8297, tok/sec: 102650.23, flops:89.89, batch-reuse:1
@ 12542 train 3.8841 , allloss: 3.8947, dt: 1265.74ms, fracRes: 0.5948, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6026, norm(y): 0.9803, norm:1.5613, tok/sec: 103553.31, flops:90.68, batch-reuse:1
@ 12543 train 3.8692 , allloss: 3.8799, dt: 1308.35ms, fracRes: 0.5931, norm(attn): 0.1729, norm(output): 0.2637, norm(x): 0.6007, norm(y): 0.9799, norm:1.0156, tok/sec: 100181.45, flops:87.73, batch-reuse:1
@ 12544 train 3.7631 , allloss: 3.7735, dt: 1286.24ms, fracRes: 0.5943, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6002, norm(y): 0.9799, norm:0.7931, tok/sec: 101903.35, flops:89.24, batch-reuse:1
@ 12545 train 3.7847 , allloss: 3.7952, dt: 1259.26ms, fracRes: 0.5941, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6029, norm(y): 0.9797, norm:0.9009, tok/sec: 104086.71, flops:91.15, batch-reuse:1
@ 12546 train 3.8784 , allloss: 3.8886, dt: 1269.42ms, fracRes: 0.5948, norm(attn): 0.1719, norm(output): 0.2598, norm(x): 0.5986, norm(y): 0.9798, norm:1.0580, tok/sec: 103253.13, flops:90.42, batch-reuse:1
@ 12547 train 3.7943 , allloss: 3.8051, dt: 1298.12ms, fracRes: 0.5947, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6054, norm(y): 0.9803, norm:0.9418, tok/sec: 100970.87, flops:88.42, batch-reuse:1
@ 12548 train 3.8456 , allloss: 3.8562, dt: 1264.25ms, fracRes: 0.5938, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6053, norm(y): 0.9802, norm:0.7925, tok/sec: 103675.32, flops:90.79, batch-reuse:1
@ 12549 train 3.7819 , allloss: 3.7925, dt: 1279.55ms, fracRes: 0.5932, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6056, norm(y): 0.9802, norm:0.8131, tok/sec: 102436.12, flops:89.70, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9766, 0.0229, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8086, 0.0393, 0.1514, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8711, 0.0157, 0.1050, 0.0086, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8281, 0.0287, 0.0540, 0.0330, 0.0571, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8789, 0.0449, 0.0265, 0.0046, 0.0068, 0.0396, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7969, 0.0337, 0.0171, 0.0145, 0.0234, 0.0549, 0.0596, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3301, 0.0459, 0.2910, 0.0344, 0.0723, 0.0562, 0.0630, 0.1064, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8555, 0.0145, 0.0413, 0.0039, 0.0084, 0.0075, 0.0366, 0.0201, 0.0131, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6406, 0.0100, 0.1455, 0.0071, 0.0206, 0.0056, 0.0168, 0.0791, 0.0126, 0.0618, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6953, 0.0309, 0.0505, 0.0130, 0.0179, 0.0070, 0.0221, 0.0225, 0.0312, 0.0303, 0.0791, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3066, 0.0386, 0.0649, 0.0393, 0.0815, 0.0264, 0.0391, 0.0659, 0.0884, 0.0630, 0.1484, 0.0378, 0.0000, 0.0000, 0.0000],
        [0.1338, 0.0618, 0.1260, 0.0415, 0.0444, 0.0359, 0.0359, 0.0623, 0.0173, 0.1226, 0.0864, 0.0981, 0.1338, 0.0000, 0.0000],
        [0.6367, 0.0234, 0.0496, 0.0050, 0.0126, 0.0099, 0.0386, 0.0220, 0.0189, 0.0150, 0.0364, 0.0157, 0.1030, 0.0135, 0.0000],
        [0.3223, 0.0815, 0.0688, 0.0461, 0.0354, 0.0075, 0.0099, 0.0520, 0.0195, 0.0437, 0.0386, 0.0486, 0.1611, 0.0189, 0.0457]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0012, -0.0005, -0.0131,  ..., -0.0320,  0.0144, -0.0023],
        [-0.0379,  0.0032, -0.0038,  ...,  0.0035,  0.0038,  0.0105],
        [ 0.0355,  0.0363, -0.0023,  ..., -0.0174,  0.0288, -0.0117],
        ...,
        [ 0.0280,  0.0182,  0.0015,  ..., -0.0318,  0.0112,  0.0145],
        [-0.0450,  0.0032, -0.0210,  ...,  0.0089, -0.0023, -0.0130],
        [-0.0205, -0.0037, -0.0191,  ...,  0.0119, -0.0400,  0.0034]], device='cuda:0', requires_grad=True)
K: tensor([ 1.4141, -0.0889,  0.7188,  0.4492,  1.1875,  0.3047, -0.4863, -1.1719, -0.9648, -0.3301, -0.5664, -1.0469,  0.0664, -1.1016, -0.2158, -0.7852,  0.7617,  0.6641, -1.7656,  0.2852,  1.9219,  1.0156, -1.1094,  1.0469, -0.5039, -0.0801, -0.7773,  1.1406,  0.3281,  0.1011,  1.7031,  0.7031,
         1.2500,  1.0078,  0.5000,  1.8672, -1.9453,  0.8555, -0.3262, -2.1406,  0.4961,  0.7539,  0.8633,  1.8828, -0.0039,  0.2637,  0.2773, -0.0092,  1.5000, -0.1416,  0.1924,  0.9062, -1.0859, -0.3828,  1.4922, -0.5312, -0.7227,  0.8672, -0.2285, -0.6055,  1.3984, -0.8086,  0.5977, -0.2314],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0384,  0.0065, -0.0040,  ...,  0.0069, -0.0069, -0.0041],
        [ 0.0114, -0.0125,  0.0129,  ...,  0.0019,  0.0528,  0.0180],
        [-0.0407,  0.0366,  0.0041,  ..., -0.0219, -0.0437, -0.0444],
        ...,
        [ 0.0219,  0.0053,  0.0343,  ...,  0.0228,  0.0100,  0.0257],
        [-0.0079, -0.0111,  0.0203,  ...,  0.0258,  0.0161,  0.0025],
        [-0.0191, -0.0083,  0.0493,  ..., -0.0266,  0.0295,  0.0043]], device='cuda:0', requires_grad=True)
Q: tensor([-0.5977,  0.1846, -1.3203, -0.1914,  0.1016, -0.2031, -1.6797, -0.3496,  0.5352,  0.6094, -0.8164, -0.0381, -0.0835, -0.3301, -0.2090,  0.1494,  0.6875, -1.0938,  0.9023,  0.5742, -0.7656,  0.0447,  1.2969,  0.3750,  1.0547,  0.2100, -0.9922, -2.1094, -0.0415,  0.2139,  0.4355,  0.3633,
        -0.6992, -1.4844, -0.2676, -0.1367,  1.0469,  0.6406,  0.0588,  0.9805,  1.6641,  0.2158,  0.5508, -0.0288, -0.3711,  0.9141, -2.1406,  0.4355, -0.4590,  0.1270, -1.5078, -0.4844, -0.7695, -0.6797, -0.7266,  0.2461,  0.1152, -1.5312,  0.1318, -0.4453, -1.3125, -0.2197,  0.4297,  1.6016],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -3.7500,     -2.7969,     -4.9375,     -4.7188,     -4.5625,     -3.8281,     -3.3750,     -4.8125,     -3.8750,     -3.2344,     -3.3438,     -0.9727,     -5.0312,     -3.8906],
        [     0.0000,     -3.0156,     -1.6719,     -2.9062,     -2.6406,     -4.1250,     -3.6562,     -2.2344,     -2.6875,     -2.0469,     -1.5156,     -2.1406,     -0.7461,     -2.3750,     -1.5234],
        [     0.0000,     -4.0000,     -2.1094,     -4.6250,     -3.4688,     -4.2812,     -3.7812,     -3.2656,     -3.4375,     -3.1094,     -1.3125,     -2.7969,     -1.8438,     -3.3906,     -1.8984],
        [     0.0000,     -3.3594,     -2.7344,     -3.2188,     -2.6719,     -4.1250,     -3.4531,     -3.0938,     -2.0312,     -2.3594,     -1.5156,     -2.5469,     -1.4844,     -1.7109,     -1.6562],
        [     0.0000,     -2.9688,     -3.5000,     -5.2500,     -4.8750,     -3.1094,     -2.4688,     -3.5938,     -4.2188,     -4.7500,     -3.8438,     -3.9531,     -1.8672,     -4.4375,     -3.8750],
        [     0.0000,     -3.1562,     -3.8438,     -4.0000,     -3.5312,     -2.6719,     -2.5938,     -3.9219,     -1.7969,     -3.3438,     -1.3906,     -3.0312,     -2.7188,     -1.6797,     -2.3750],
        [     0.0000,     -1.9688,     -0.1235,     -2.2656,     -1.5156,     -1.7734,     -1.6562,     -1.1328,     -1.7344,      0.1504,      0.1055,     -0.9102,     -0.1011,     -1.6016,     -0.6367],
        [     0.0000,     -4.0938,     -3.0312,     -5.3750,     -4.6250,     -4.7188,     -3.1562,     -3.7500,     -4.1875,     -4.3750,     -3.2812,     -4.1250,     -1.9219,     -4.5312,     -3.6562],
        [     0.0000,     -4.1562,     -1.4844,     -4.5000,     -3.4375,     -4.7500,     -3.6406,     -2.0938,     -3.9219,     -2.3438,     -2.2188,     -3.0469,     -0.6055,     -3.7969,     -2.7969],
        [     0.0000,     -3.1094,     -2.6250,     -3.9844,     -3.6562,     -4.5938,     -3.4531,     -3.4375,     -3.0938,     -3.1406,     -2.1719,     -2.9219,     -1.7578,     -3.1094,     -2.2031],
        [     0.0000,     -2.0781,     -1.5547,     -2.0625,     -1.3203,     -2.4531,     -2.0625,     -1.5391,     -1.2422,     -1.5781,     -0.7266,     -2.0938,     -0.9375,     -1.0234,     -0.6641],
        [     0.0000,     -0.7773,     -0.0649,     -1.1719,     -1.1016,     -1.3203,     -1.3125,     -0.7656,     -2.0469,     -0.0889,     -0.4414,     -0.3105,     -0.0027,     -1.8516,     -0.9727],
        [     0.0000,     -3.2969,     -2.5469,     -4.8438,     -3.9219,     -4.1562,     -2.7969,     -3.3594,     -3.5156,     -3.7500,     -2.8594,     -3.7031,     -1.8203,     -3.8438,     -3.2812],
        [     0.0000,     -1.3750,     -1.5391,     -1.9453,     -2.2031,     -3.7656,     -3.4844,     -1.8281,     -2.8125,     -2.0000,     -2.1250,     -1.8906,     -0.6914,     -2.8438,     -1.9531]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9092],
        [0.8636],
        [0.8534],
        [0.7183],
        [0.7612],
        [0.6901],
        [0.4504],
        [0.6112],
        [0.6143],
        [0.4789],
        [0.4266],
        [0.2238],
        [0.4130],
        [0.2574]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8633,     0.1377,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2461,     0.6836,     0.0718,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1660,     0.3750,     0.4121,     0.0476,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1787,     0.5117,     0.0825,     0.1514,     0.0767,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1455,     0.2852,     0.0542,     0.0295,     0.3750,     0.1099,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1309,     0.1699,     0.0527,     0.0211,     0.1943,     0.2490,     0.1826,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0342,     0.0488,     0.0134,     0.0047,     0.0488,     0.1582,     0.5977,     0.0933,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0474,     0.0251,     0.0095,     0.0014,     0.0256,     0.0840,     0.5078,     0.1357,     0.1641,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0031,     0.0110,     0.0042,     0.0025,     0.0126,     0.0260,     0.0420,     0.0933,     0.7852,     0.0189,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0248,     0.0095,     0.0020,     0.0007,     0.0134,     0.0261,     0.1533,     0.0125,     0.6133,     0.0249,     0.1206,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0048,     0.0063,     0.0034,     0.0009,     0.0038,     0.0227,     0.1177,     0.1299,     0.0884,     0.0781,     0.4824,     0.0610,     0.0000,     0.0000,     0.0000],
        [    0.0356,     0.0031,     0.0034,     0.0007,     0.0098,     0.0238,     0.0977,     0.0391,     0.2695,     0.0376,     0.3203,     0.0820,     0.0781,     0.0000,     0.0000],
        [    0.0420,     0.0060,     0.0032,     0.0003,     0.0051,     0.0212,     0.1680,     0.0330,     0.0248,     0.0337,     0.3848,     0.0361,     0.0771,     0.1641,     0.0000],
        [    0.0060,     0.0041,     0.0014,     0.0003,     0.0016,     0.0077,     0.0342,     0.0225,     0.0732,     0.0143,     0.0840,     0.0957,     0.0601,     0.5156,     0.0796]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[     0.0365,     -0.0266,     -0.0142,  ...,     -0.0144,     -0.0197,      0.0001],
        [    -0.0194,      0.0188,     -0.0203,  ...,      0.0116,     -0.0100,     -0.0557],
        [     0.0234,      0.0133,      0.0147,  ...,      0.0135,      0.0333,      0.0203],
        ...,
        [     0.0186,     -0.0216,      0.0371,  ...,      0.0278,     -0.0297,     -0.0109],
        [    -0.0183,     -0.0061,      0.0227,  ...,      0.0093,      0.0319,      0.0138],
        [     0.0223,      0.0522,      0.0223,  ...,     -0.0156,      0.0014,      0.0225]], device='cuda:0', requires_grad=True)
K: tensor([ 4.0625,  0.5625, -0.8633,  0.4512, -2.6250, -0.1924, -1.3906,  0.9844, -1.1406, -0.3242, -0.7070,  2.4375, -1.9062,  1.8672,  0.7148, -2.3750,  1.6328,  0.4609,  1.4766,  0.8008,  1.3438,  1.6719,  2.5781, -4.8125,  0.4609, -1.7500, -2.8906,  1.1797,  1.8672,  0.2773,  2.5312,  0.4395,
         0.7852, -0.5625, -1.9609, -0.5000, -0.3301,  0.9688, -1.5625,  1.0234,  0.8594, -1.5938, -0.4590,  1.4688,  1.0781,  0.7461, -2.6719, -0.9414,  1.5312,  0.5039, -1.3906,  0.9375, -1.0859,  0.9336, -1.1797, -2.2500,  0.4316,  0.2471, -1.7891,  2.2031,  0.8008,  1.0625,  2.1406, -0.4531],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0368, -0.0053, -0.0120,  ...,  0.0038,  0.0312, -0.0109],
        [ 0.0143,  0.0083, -0.0507,  ..., -0.0119, -0.0109, -0.0171],
        [ 0.0491,  0.0005,  0.0317,  ..., -0.0199,  0.0234,  0.0062],
        ...,
        [-0.0306, -0.0102,  0.0083,  ...,  0.0081,  0.0012, -0.0347],
        [ 0.0389,  0.0100, -0.0073,  ...,  0.0084,  0.0037, -0.0073],
        [ 0.0009, -0.0358, -0.0275,  ...,  0.0105, -0.0039,  0.0201]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.0337, -2.0000, -3.3750, -2.7500, -0.0098, -0.7227,  0.2061,  0.0552,  0.6992,  0.6797,  1.4219, -0.3457,  0.3379, -0.0057, -1.0547, -1.1172, -1.5000, -2.1719, -1.0469,  1.9297, -2.8750, -0.0146, -0.0869,  0.6719,  0.0762, -1.0156,  0.2422, -0.1719, -2.2344,  0.6562,  1.7656,  0.7109,
        -2.3281,  0.1230, -2.2656,  0.1260,  1.7344,  1.2344,  0.5586,  0.9961,  1.6875, -0.5391, -0.2363,  2.3750,  0.7461,  0.4395, -0.1040, -2.9062,  1.7344,  0.3926, -1.8438,  3.0469,  1.0234, -1.6953,  0.0292,  0.6250,  0.8555,  0.8320, -0.8516, -0.4316,  0.7578,  0.5781,  4.8125, -1.5000],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -1.8359, -1.6172, -2.6719, -1.0469, -1.4688, -0.8125, -2.5312, -1.4219, -2.0312, -0.1953, -1.8750, -2.0781, -0.9180,  0.0908],
        [ 0.0000,  1.0234, -1.2344, -1.2578,  0.4453,  0.5547,  1.3984,  0.5273,  1.4531,  0.9375,  2.2969,  2.2031,  1.1641,  2.3125,  2.7969],
        [ 0.0000,  0.8164,  0.9102, -1.2500,  0.4551,  0.9688,  2.0625,  1.8438,  2.2656,  2.4531,  2.9844,  3.5156,  3.3125,  3.5938,  4.5625],
        [ 0.0000,  1.0469, -0.7695, -0.1641, -0.8477,  1.7969,  2.3281,  2.0781,  4.8750,  2.5625,  4.6875,  2.8594,  3.5469,  6.4688,  4.6250],
        [ 0.0000,  0.6719, -0.9883, -1.5938,  0.9453, -0.2812,  1.7109,  1.7656,  3.8281,  1.4766,  4.3125,  3.3750,  3.6719,  5.4062,  3.8438],
        [ 0.0000,  0.2617, -0.9062, -1.8203,  0.3965,  0.6445,  0.3320,  1.4609,  3.7031,  1.0703,  3.1719,  1.9688,  2.8750,  5.1875,  3.7344],
        [ 0.0000,  0.3535, -0.9414, -1.9922,  0.3555,  1.5312,  2.8594,  1.0000,  3.3906,  1.1250,  4.3125,  2.7188,  2.4688,  5.0938,  3.9688],
        [ 0.0000, -0.6367, -1.6016, -3.5312, -0.6172,  0.5703,  2.3750,  1.0469,  1.2422,  0.8750,  3.6250,  1.4922,  2.0625,  3.2031,  3.3906],
        [ 0.0000,  1.2891,  0.3203, -0.1953,  1.4141,  2.1406,  2.6250,  3.4219,  5.5625,  1.8203,  5.3750,  5.0000,  5.3125,  7.3125,  5.1562],
        [ 0.0000, -0.9570, -2.5312, -3.5312, -0.6094,  0.0540,  1.8203, -0.6797,  3.2031,  0.0086,  1.5859,  1.3047,  0.9531,  5.2188,  2.5156],
        [ 0.0000,  0.2656, -0.3320, -1.7344, -0.2490,  1.5547,  3.2031,  3.2969,  2.9062,  2.7812,  4.6250,  2.5469,  3.6094,  4.9062,  5.5000],
        [ 0.0000, -2.4375, -2.3594, -3.9375, -1.2969, -0.4043,  1.0078,  0.0938,  2.0312,  0.0505,  2.1875,  0.8320,  0.7852,  3.8125,  2.2656],
        [ 0.0000, -1.9531, -2.5625, -5.0312, -2.1094, -0.6836,  1.3828, -0.2480, -0.5312, -0.2246,  2.2188, -0.1553,  0.6055,  1.3594,  1.9531],
        [ 0.0000, -0.3770, -1.4375, -3.0938, -1.2891,  0.2539,  1.7422,  1.3281,  2.5156,  0.8711,  2.6406,  2.7656,  2.3125,  4.4688,  2.5938]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7586],
        [0.4542],
        [0.3637],
        [0.5743],
        [0.4358],
        [0.3064],
        [0.1759],
        [0.2753],
        [0.1581],
        [0.2646],
        [0.1227],
        [0.1152],
        [0.2446],
        [0.1593]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9844,     0.0153,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9805,     0.0135,     0.0062,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9727,     0.0209,     0.0031,     0.0043,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9688,     0.0150,     0.0027,     0.0015,     0.0123,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9766,     0.0086,     0.0032,     0.0008,     0.0072,     0.0024,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9258,     0.0193,     0.0068,     0.0049,     0.0059,     0.0077,     0.0308,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8359,     0.0198,     0.0310,     0.0095,     0.0071,     0.0120,     0.0222,     0.0610,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9492,     0.0088,     0.0029,     0.0011,     0.0060,     0.0043,     0.0153,     0.0058,     0.0079,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9531,     0.0069,     0.0010,     0.0013,     0.0029,     0.0020,     0.0065,     0.0095,     0.0054,     0.0129,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9492,     0.0137,     0.0025,     0.0033,     0.0021,     0.0022,     0.0075,     0.0102,     0.0036,     0.0024,     0.0014,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9062,     0.0102,     0.0024,     0.0028,     0.0041,     0.0020,     0.0092,     0.0212,     0.0063,     0.0092,     0.0015,     0.0251,     0.0000,     0.0000,     0.0000],
        [    0.4980,     0.0047,     0.0113,     0.0059,     0.0030,     0.0087,     0.0093,     0.1040,     0.0076,     0.0562,     0.0016,     0.0337,     0.2559,     0.0000,     0.0000],
        [    0.9375,     0.0063,     0.0020,     0.0008,     0.0055,     0.0035,     0.0119,     0.0063,     0.0073,     0.0025,     0.0019,     0.0012,     0.0082,     0.0067,     0.0000],
        [    0.8828,     0.0166,     0.0029,     0.0029,     0.0099,     0.0048,     0.0165,     0.0093,     0.0115,     0.0058,     0.0036,     0.0022,     0.0070,     0.0112,     0.0142]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0087, -0.0059,  0.0409,  ...,  0.0025, -0.0210, -0.0211],
        [ 0.0598, -0.0516, -0.0044,  ..., -0.0195, -0.0155, -0.0443],
        [ 0.0482, -0.0347,  0.0474,  ..., -0.0136, -0.0200, -0.0043],
        ...,
        [ 0.0330,  0.0244, -0.0304,  ..., -0.0071,  0.0079,  0.0272],
        [ 0.0191,  0.0145,  0.0039,  ..., -0.0121, -0.0434, -0.0319],
        [ 0.0208, -0.0122,  0.0086,  ...,  0.0011, -0.0137,  0.0046]], device='cuda:0', requires_grad=True)
K: tensor([-0.8594, -0.7422, -0.1768, -0.5938, -2.0781,  0.7500, -1.3438,  2.8750, -1.3047, -1.2578,  1.8438,  1.7891, -1.2969, -1.4844, -1.3281,  0.0391,  1.9219,  0.9414, -0.0596,  1.0391,  2.0469,  0.9336, -2.0625,  0.0830,  1.0312, -2.0000, -0.4062, -2.0469,  1.8359, -0.2080,  1.5156,  2.5625,
         0.1592,  1.1172,  2.4688, -0.5625, -1.3672,  1.4922,  1.5859, -2.3438,  2.3281, -0.9219,  0.0403,  1.5781,  0.2354,  2.4531, -0.6875, -2.7031, -0.7852,  2.5156, -1.0234,  0.8945,  1.2891, -1.2812,  2.1250, -1.5312, -1.9062, -2.2656, -0.9492, -0.3301, -2.5781, -1.1328,  1.3047,  0.5742],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0046,  0.0391,  0.0179,  ..., -0.0086,  0.0381, -0.0078],
        [-0.0068,  0.0435, -0.0034,  ...,  0.0109,  0.0151,  0.0091],
        [-0.0293, -0.0087,  0.0172,  ..., -0.0282,  0.0676, -0.0393],
        ...,
        [ 0.0303, -0.0138,  0.0176,  ..., -0.0152, -0.0073, -0.0120],
        [ 0.0003,  0.0187, -0.0026,  ...,  0.0179,  0.0133,  0.0150],
        [ 0.0093, -0.0333, -0.0189,  ...,  0.0318,  0.0199,  0.0112]], device='cuda:0', requires_grad=True)
Q: tensor([     0.8828,      1.0547,     -1.0312,      0.5352,      0.1045,     -1.2734,      0.5039,      0.0417,     -0.1074,      0.0972,      0.1289,     -0.7695,      0.5117,      1.1719,      0.0327,     -1.5469,      0.0016,     -1.1484,     -0.0908,     -0.0554,     -0.0718,      1.2969,
             0.5781,      0.6914,      1.5703,      0.5625,      0.5273,      0.2100,     -0.7227,     -0.7695,      0.0806,     -0.0500,     -1.7500,     -0.5312,     -0.4180,      0.1895,      0.8086,     -1.1562,      0.6016,      0.2832,     -1.9453,      1.5391,     -0.5078,      0.1318,
            -0.1885,      0.1865,      0.1611,      0.4824,     -0.4883,      0.2266,      0.0508,     -1.3516,     -0.1934,     -0.4590,     -0.1592,      1.0781,     -0.0840,      1.0938,      0.7188,      2.0156,      1.2266,      1.0625,     -1.8203,      0.2949], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -4.1562, -6.2188, -6.4062, -5.9688, -7.0312, -5.5312, -5.4375, -6.1875, -6.7500, -6.9375, -6.4688, -6.3125, -6.3750, -6.0000],
        [ 0.0000, -4.2812, -5.0625, -6.0938, -6.6250, -6.9688, -5.7500, -4.6250, -6.6562, -6.4688, -7.5625, -6.0625, -5.2812, -6.8750, -6.1875],
        [ 0.0000, -3.8438, -5.7188, -5.4375, -5.8750, -6.1250, -4.8750, -5.5625, -6.0625, -5.9688, -6.2188, -6.8125, -5.7500, -6.1562, -5.3125],
        [ 0.0000, -4.1562, -5.8750, -6.4375, -4.3750, -5.3750, -3.8750, -4.1562, -4.6562, -5.8750, -5.7188, -6.0000, -4.3750, -4.6875, -5.1875],
        [ 0.0000, -4.7188, -5.7500, -7.1562, -4.9062, -6.0312, -4.5312, -5.0312, -5.4375, -6.4688, -6.2500, -6.5938, -5.3750, -5.5625, -5.3750],
        [ 0.0000, -3.8750, -4.9062, -5.2500, -5.0625, -4.7812, -3.4062, -3.6250, -4.5312, -5.5000, -5.6250, -5.1562, -3.5938, -4.5312, -4.8438],
        [ 0.0000, -3.7500, -3.2969, -4.4688, -4.7812, -4.2500, -3.6250, -2.6250, -4.5312, -3.1719, -4.9688, -3.6719, -2.3594, -4.4688, -3.9844],
        [ 0.0000, -4.6875, -5.7812, -6.7500, -5.0625, -5.4062, -4.1250, -5.0938, -4.7812, -6.0938, -6.0312, -6.6875, -4.8438, -4.8750, -4.9688],
        [ 0.0000, -4.9375, -6.8438, -6.5938, -5.7812, -6.1562, -4.9688, -4.5938, -5.1562, -4.2812, -6.1250, -5.7500, -4.6875, -4.9062, -5.3750],
        [ 0.0000, -4.2500, -5.9062, -5.6562, -6.1250, -6.0625, -4.8438, -4.5312, -5.5625, -6.0000, -6.5000, -6.1562, -4.8438, -5.5625, -5.7812],
        [ 0.0000, -4.4688, -5.9375, -5.7812, -5.4062, -6.0938, -4.5938, -3.7500, -4.9688, -4.5938, -6.3750, -3.5781, -2.8906, -4.9062, -5.9062],
        [ 0.0000, -4.6562, -3.7812, -4.4375, -5.1250, -4.0625, -3.9844, -1.5625, -4.1875, -2.1875, -5.7500, -2.6875, -0.6641, -4.0938, -4.7500],
        [ 0.0000, -5.0000, -6.1562, -7.0312, -5.1250, -5.5938, -4.3750, -5.0000, -4.8438, -5.9062, -6.1875, -6.6875, -4.7500, -4.9375, -5.1875],
        [ 0.0000, -3.9688, -5.7188, -5.7188, -4.5000, -5.2188, -3.9844, -4.5625, -4.3438, -5.0312, -5.5000, -6.0000, -4.8438, -4.3750, -4.1250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9359],
        [0.9941],
        [0.9896],
        [0.9867],
        [0.9814],
        [0.9766],
        [0.9264],
        [0.9642],
        [0.9840],
        [0.9886],
        [0.9658],
        [0.9438],
        [0.9701],
        [0.9759]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0850,     0.9141,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0293,     0.6445,     0.3242,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0483,     0.2432,     0.6602,     0.0498,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0276,     0.4492,     0.2451,     0.0442,     0.2344,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0442,     0.5625,     0.1768,     0.0400,     0.1348,     0.0410,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0062,     0.4043,     0.0452,     0.0144,     0.0718,     0.0374,     0.4199,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0037,     0.0679,     0.0535,     0.0047,     0.0057,     0.0201,     0.7695,     0.0737,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0132,     0.0957,     0.0089,     0.0020,     0.0042,     0.0056,     0.7539,     0.0179,     0.0981,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0081,     0.0603,     0.0126,     0.0028,     0.0112,     0.0186,     0.2988,     0.0488,     0.2695,     0.2695,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0071,     0.0143,     0.0053,     0.0011,     0.0056,     0.0112,     0.1553,     0.0181,     0.0315,     0.6719,     0.0791,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0070,     0.0143,     0.0147,     0.0039,     0.0067,     0.0140,     0.1167,     0.1177,     0.0532,     0.3340,     0.1367,     0.1816,     0.0000,     0.0000,     0.0000],
        [    0.0086,     0.0270,     0.0143,     0.0015,     0.0024,     0.0090,     0.1216,     0.0396,     0.0728,     0.3164,     0.1436,     0.1357,     0.1074,     0.0000,     0.0000],
        [    0.0187,     0.0308,     0.0035,     0.0006,     0.0015,     0.0021,     0.0933,     0.0073,     0.0282,     0.2676,     0.3379,     0.0752,     0.0437,     0.0884,     0.0000],
        [    0.0038,     0.0084,     0.0023,     0.0010,     0.0044,     0.0068,     0.0361,     0.0209,     0.0437,     0.0952,     0.0698,     0.0791,     0.0947,     0.1611,     0.3711]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0051,  0.0101, -0.0131,  ..., -0.0344, -0.0097, -0.0222],
        [-0.0477,  0.0189, -0.0185,  ...,  0.0034,  0.0048, -0.0008],
        [-0.0473, -0.0108,  0.0394,  ..., -0.0191, -0.0316, -0.0275],
        ...,
        [-0.0063, -0.0030, -0.0119,  ..., -0.0254, -0.0454, -0.0487],
        [-0.0177, -0.0298, -0.0301,  ..., -0.0135, -0.0123,  0.0565],
        [-0.0113,  0.0194,  0.0201,  ..., -0.0083,  0.0107, -0.0125]], device='cuda:0', requires_grad=True)
K: tensor([-2.1250, -2.2812, -0.6250,  0.8906,  0.0070, -2.2031, -1.5469,  0.0481, -0.2266, -1.9141, -0.1777, -2.4375,  2.6562, -1.7031,  0.0212,  1.7656,  2.7500,  0.3301,  0.5859,  0.1123,  0.5898, -2.4688,  1.0781, -1.7109, -0.6367,  1.3906, -0.3320,  1.3828,  0.7031,  2.0938, -0.6406, -2.5000,
        -0.6211, -1.4922,  2.1250, -0.9844,  2.6094, -0.1377, -1.4375,  0.0747, -2.7188,  1.3359,  0.9883,  1.8203,  0.7656, -0.3008, -2.3750, -0.8047,  1.8516, -0.2676,  1.1094, -0.5352, -0.1113, -1.9766, -1.7734, -1.9844,  2.2656, -1.1484, -0.3418,  1.6406,  0.2676, -1.1719,  2.1250, -0.8555],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0044, -0.0067,  0.0129,  ...,  0.0238, -0.0262, -0.0146],
        [ 0.0440, -0.0040,  0.0098,  ...,  0.0036,  0.0224,  0.0206],
        [-0.0178,  0.0121,  0.0487,  ...,  0.0238,  0.0211, -0.0112],
        ...,
        [ 0.0192,  0.0014, -0.0270,  ...,  0.0026,  0.0065, -0.0017],
        [-0.0099,  0.0420, -0.0310,  ..., -0.0012,  0.0095, -0.0370],
        [ 0.0057, -0.0142,  0.0015,  ...,  0.0137, -0.0039,  0.0061]], device='cuda:0', requires_grad=True)
Q: tensor([-0.1602, -0.8633, -1.8438,  1.4297, -1.6719, -0.9609, -0.1934, -0.0781,  0.6484, -0.6328, -0.8555, -0.2656, -1.9062, -2.2031,  1.2344, -0.3379, -0.4316, -0.9766,  1.2344, -1.3125, -0.4375,  1.2500, -1.0625, -2.5156, -0.6133, -1.5078,  1.5078,  3.2500, -1.1250,  1.6953,  0.8555, -1.1953,
        -1.0781,  0.3789, -1.4609, -2.0938,  1.7422, -1.4453, -2.5469,  0.6055,  0.0908,  0.0135,  2.1719, -0.9766, -1.4531, -0.6758, -0.9141, -2.2188,  1.6250,  1.6875,  0.5195, -0.7227, -1.5703, -0.6562, -0.8047, -0.9102, -0.4453,  0.0173, -0.5820,  1.4922, -0.4062,  0.0679,  0.9570, -0.9648],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  2.3750,  1.6484,  1.1406,  2.0938,  1.8984,  3.6719,  2.8125,  3.3438,  3.2969,  3.0312,  2.8750,  3.1094,  3.5312,  3.7812],
        [ 0.0000,  3.0938,  2.4062,  1.0781,  1.7656,  1.8281,  4.1250,  3.5625,  3.3594,  4.4375,  3.7344,  4.1562,  4.2812,  3.7969,  5.0625],
        [ 0.0000,  1.6172,  2.6094,  0.0305,  1.7578,  2.7188,  3.1875,  3.7969,  3.2031,  5.4375,  4.4688,  6.8125,  5.8125,  5.0938,  6.7812],
        [ 0.0000,  2.7969,  2.1875,  0.4727,  2.1406,  2.1250,  4.6875,  3.6562,  4.8438,  5.7812,  4.5625,  5.0938,  4.5312,  5.9062,  5.9375],
        [ 0.0000,  2.5469,  1.3906, -0.0981,  1.1172, -0.0767,  2.6094,  2.0938,  3.5625,  3.6250,  3.8594,  4.2188,  3.0938,  4.7188,  5.7500],
        [ 0.0000,  4.1875,  1.9766,  0.8359,  2.4375,  1.7891,  4.2188,  3.5312,  4.0000,  4.8125,  3.4688,  4.5000,  4.7188,  4.6250,  7.1562],
        [ 0.0000,  2.9062,  2.6719,  0.2305,  0.4258,  1.6875,  5.3438,  3.0000,  3.9062,  5.5625,  4.5312,  4.8750,  4.4375,  4.4062,  6.2500],
        [ 0.0000,  1.9844, -0.3906, -1.9062, -1.1406, -0.8477,  4.0625,  0.3066,  2.0000,  4.0625,  4.3750,  2.3438,  1.5156,  2.3906,  4.7500],
        [ 0.0000,  2.0156,  0.4473, -1.0703,  0.3281,  0.8320,  3.6094,  1.7969,  3.5156,  3.5000,  3.8281,  3.3438,  2.7656,  4.3750,  5.5625],
        [ 0.0000,  0.7031, -0.2871, -1.8672, -0.2471,  0.4512,  3.0938,  0.9336,  1.4922,  4.5625,  2.4062,  3.0469,  3.0312,  2.2656,  5.5000],
        [ 0.0000,  0.7109,  0.7383, -0.5977, -0.0498,  0.6914,  2.8125,  2.8125,  2.0312,  3.8594,  2.9688,  3.2500,  4.4375,  3.5781,  4.9688],
        [ 0.0000,  1.1406,  0.5078, -1.7656, -1.2969,  0.0374,  2.6406,  1.5234,  2.1406,  3.6094,  2.8125,  2.7656,  2.5156,  3.1719,  4.4688],
        [ 0.0000,  0.4980, -1.6797, -3.3750, -2.5000, -2.1875,  1.6094, -0.9414,  0.4121,  2.6562,  2.8906,  1.3906,  0.8516,  1.5547,  3.9062],
        [ 0.0000,  0.7891, -0.4824, -1.3281,  0.1455,  0.5898,  2.2500,  1.7109,  2.4531,  3.2188,  2.9219,  3.0469,  3.2188,  3.7500,  4.5938]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3873],
        [0.1155],
        [0.1243],
        [0.1760],
        [0.0998],
        [0.2164],
        [0.1001],
        [0.0845],
        [0.0798],
        [0.0876],
        [0.0906],
        [0.0666],
        [0.0829],
        [0.0937]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0135,     0.9883,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0160,     0.9297,     0.0559,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0234,     0.8242,     0.0708,     0.0796,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0010,     0.5078,     0.1455,     0.0601,     0.2852,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0161,     0.4629,     0.1357,     0.0194,     0.2715,     0.0947,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0108,     0.2812,     0.4785,     0.0289,     0.0713,     0.0481,     0.0820,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0037,     0.0830,     0.0859,     0.0047,     0.0630,     0.0118,     0.0188,     0.7305,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0095,     0.2578,     0.1118,     0.0193,     0.0564,     0.0177,     0.0417,     0.4434,     0.0435,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0107,     0.3008,     0.0806,     0.0203,     0.0413,     0.0132,     0.0752,     0.3184,     0.0339,     0.1055,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0131,     0.2988,     0.0427,     0.0203,     0.0593,     0.0172,     0.0884,     0.1729,     0.0386,     0.0996,     0.1484,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0160,     0.4844,     0.0476,     0.0386,     0.0371,     0.0162,     0.1045,     0.1377,     0.0082,     0.0381,     0.0381,     0.0327,     0.0000,     0.0000,     0.0000],
        [    0.0069,     0.0491,     0.0461,     0.0026,     0.0184,     0.0068,     0.0079,     0.1963,     0.0226,     0.1816,     0.0203,     0.1455,     0.2969,     0.0000,     0.0000],
        [    0.0152,     0.1079,     0.0217,     0.0077,     0.0175,     0.0056,     0.0156,     0.0493,     0.0128,     0.1279,     0.0417,     0.0588,     0.4922,     0.0260,     0.0000],
        [    0.0150,     0.2852,     0.0515,     0.0469,     0.0469,     0.0204,     0.1338,     0.0520,     0.0095,     0.0325,     0.0302,     0.0518,     0.1177,     0.0104,     0.0962]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0156, -0.0280, -0.0088,  ..., -0.0059,  0.0189, -0.0148],
        [ 0.0277, -0.0518, -0.0021,  ...,  0.0323,  0.0227,  0.0036],
        [ 0.0021, -0.0325, -0.0406,  ...,  0.0392,  0.0107, -0.0157],
        ...,
        [ 0.0226,  0.0161, -0.0140,  ..., -0.0177,  0.0112,  0.0232],
        [ 0.0240, -0.0073,  0.0221,  ...,  0.0266, -0.0083,  0.0157],
        [-0.0394,  0.0387, -0.0052,  ...,  0.0028,  0.0266,  0.0452]], device='cuda:0', requires_grad=True)
K: tensor([-0.8867, -0.8281, -0.7422,  0.2275, -0.7422,  0.0203,  0.4746,  0.1196, -0.4883, -3.2031, -2.2969, -1.6953, -0.0894, -0.5234, -1.9219,  1.2891,  2.5000,  1.5781, -2.5938, -0.8242,  1.9141, -1.6641, -1.7031,  0.6211,  1.0312, -1.7109, -0.9062,  0.9219, -1.5391, -2.1562, -0.3984,  0.0786,
        -2.8750,  2.5625,  3.5938,  0.5781,  0.5820, -1.3359, -0.3438, -2.1250, -1.0312, -0.3496, -1.8125,  1.7812,  0.3125,  0.3164, -1.1562,  2.4062, -1.5703, -1.9766,  0.2637,  2.4062,  1.7578, -0.2344, -0.6484, -0.0510,  0.0928, -2.7969, -0.6484,  1.0703,  1.1172, -0.5469,  1.5000, -2.1875],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0002, -0.0063, -0.0041,  ..., -0.0391, -0.0293, -0.0232],
        [ 0.0035,  0.0029, -0.0078,  ...,  0.0048, -0.0211,  0.0348],
        [ 0.0187, -0.0138, -0.0022,  ..., -0.0105, -0.0252, -0.0141],
        ...,
        [ 0.0317, -0.0513, -0.0303,  ...,  0.0066,  0.0201, -0.0098],
        [ 0.0194,  0.0005,  0.0628,  ...,  0.0198,  0.0078,  0.0108],
        [-0.0130, -0.0082, -0.0139,  ...,  0.0133,  0.0127, -0.0164]], device='cuda:0', requires_grad=True)
Q: tensor([    -0.2256,      1.4844,      0.4141,      0.8359,     -0.0009,     -1.6250,     -0.0403,     -2.1250,     -1.1641,      0.4648,     -0.0254,      0.5117,      0.7422,     -0.2891,     -0.7773,     -0.3105,      0.2041,      1.1250,     -0.4395,      0.4004,     -0.4922,     -0.7344,
             0.2988,     -0.2969,      1.1953,      0.7656,     -1.1172,      1.7500,     -1.4219,      0.9414,     -1.1328,     -1.2969,     -0.5977,      0.2930,     -0.7969,     -0.4395,     -0.4902,     -0.3555,      2.3906,     -0.5742,      0.1387,      0.0562,     -0.9766,      0.4316,
             0.1855,      1.2031,      0.0214,      1.3750,      0.9727,     -0.7227,      0.4629,      1.4531,     -0.5430,     -0.0264,     -1.0000,      0.8594,     -2.2188,      0.3535,      0.2988,      0.4199,      0.1514,     -1.0625,     -0.4570,     -1.2891], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  4.2812,  2.4062,  1.8438,  3.1562,  2.2656,  2.9375,  2.8438,  2.0781,  2.4062,  2.4375,  1.6797,  3.2344,  1.9297,  2.3594],
        [ 0.0000,  4.0625,  1.2500,  1.7734,  3.0625,  2.1562,  3.4062,  1.5078,  0.2539,  0.3145,  0.6133, -0.9961,  1.3672, -0.3320,  0.0869],
        [ 0.0000,  3.5625,  1.1094,  1.2266,  2.9531,  1.1797,  3.0312,  1.9844,  0.8594,  0.8906,  0.3633, -0.7773,  1.7891,  0.2754, -0.0117],
        [ 0.0000,  6.2188,  4.9688,  4.0938,  5.6562,  4.4375,  4.3125,  6.8750,  4.0312,  4.8438,  3.8281,  4.3125,  6.9062,  3.5781,  3.5469],
        [ 0.0000,  3.3594,  2.1250,  0.1875,  2.8281,  1.7734,  2.5781,  3.1406,  1.3672,  2.0156,  0.8398,  1.7891,  2.9688,  0.7773,  1.6562],
        [ 0.0000,  3.2656,  3.7969,  0.9883,  1.8906,  1.4922,  2.0312,  5.0000,  0.9102,  2.7188,  0.4453,  2.9844,  3.7188,  0.1172,  1.6172],
        [ 0.0000,  3.1250,  3.1562,  0.2578,  2.8438,  1.1719,  1.6406,  5.2812,  2.8594,  4.4062,  1.9141,  3.8125,  5.2500,  2.8594,  4.0000],
        [ 0.0000,  3.2969,  2.4688,  0.7109,  1.7812,  0.6211,  1.4844,  3.8438,  1.5234,  3.7812,  1.4375,  2.2969,  4.9688,  0.9961,  1.7656],
        [ 0.0000,  3.3281,  2.0156,  0.6367,  1.3516,  0.2100,  1.9453,  3.3906,  1.1484,  2.2812,  2.2812,  2.6406,  4.3438,  1.2734,  2.3281],
        [ 0.0000,  3.1250,  1.1797,  0.4336,  1.5078,  0.2715,  1.9062,  2.5781,  1.0781,  2.0156,  2.4219,  2.5000,  4.2812,  1.4844,  1.8672],
        [ 0.0000,  3.4062,  1.0859,  0.8750,  0.8398,  0.0129,  1.8750,  2.1562, -0.6641,  0.8672,  0.8633,  0.7070,  3.3906, -0.2373,  0.7188],
        [ 0.0000,  1.9609,  1.8984, -0.9609,  0.9805, -0.0135,  0.1406,  3.3438,  1.1875,  3.2656,  1.0781,  3.0469,  3.7656,  1.9141,  3.0469],
        [ 0.0000,  1.9609,  0.3574, -0.6797,  0.1357, -1.0000,  0.0272,  1.1719, -0.1680,  2.1250,  1.0156,  1.3516,  3.4844,  0.5391,  1.0859],
        [ 0.0000,  2.9531,  1.2422,  1.1406,  1.1406,  0.3125,  2.1875,  1.2500, -0.4551,  0.7734,  0.7031,  1.2422,  2.0625, -0.3672,  1.8594]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0309],
        [0.0099],
        [0.0066],
        [0.0028],
        [0.0158],
        [0.0051],
        [0.0053],
        [0.0034],
        [0.0043],
        [0.0114],
        [0.0065],
        [0.0058],
        [0.0049],
        [0.0027]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( are:0.1387 a:0.1445,:0.2256 and:0.0732atoes:0.5586 are:0.4688 sweet:0.0586iced:0.2178)
iced
------
		( a:0.1445,:0.2256 and:0.0732atoes:0.5586 are:0.4688 sweet:0.0586iced:0.2178 with:0.1934)
 with a sweet, sweet, and sweet, and they are a good source
@ 12550 train 3.7802 , allloss: 3.7908, dt: 1703.85ms, fracRes: 0.5935, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6055, norm(y): 0.9801, norm:0.7923, tok/sec: 76926.96, flops:67.36, batch-reuse:1
@ 12551 train 3.8554 , allloss: 3.8660, dt: 1258.55ms, fracRes: 0.5941, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6071, norm(y): 0.9798, norm:0.8151, tok/sec: 104144.92, flops:91.20, batch-reuse:1
@ 12552 train 3.8351 , allloss: 3.8455, dt: 1281.17ms, fracRes: 0.5945, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6059, norm(y): 0.9800, norm:0.7975, tok/sec: 102306.28, flops:89.59, batch-reuse:1
@ 12553 train 3.8891 , allloss: 3.8996, dt: 1260.87ms, fracRes: 0.5950, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6077, norm(y): 0.9802, norm:0.8162, tok/sec: 103953.37, flops:91.03, batch-reuse:1
@ 12554 train 3.8371 , allloss: 3.8472, dt: 1298.48ms, fracRes: 0.5947, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6061, norm(y): 0.9800, norm:0.8035, tok/sec: 100942.86, flops:88.39, batch-reuse:1
@ 12555 train 3.8524 , allloss: 3.8627, dt: 1267.60ms, fracRes: 0.5940, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6079, norm(y): 0.9797, norm:0.7697, tok/sec: 103402.03, flops:90.55, batch-reuse:1
@ 12556 train 3.7398 , allloss: 3.7513, dt: 1255.33ms, fracRes: 0.5955, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6127, norm(y): 0.9806, norm:0.9929, tok/sec: 104412.50, flops:91.43, batch-reuse:1
@ 12557 train 3.7898 , allloss: 3.8014, dt: 1251.49ms, fracRes: 0.5946, norm(attn): 0.1709, norm(output): 0.2656, norm(x): 0.6120, norm(y): 0.9805, norm:1.1517, tok/sec: 104733.05, flops:91.71, batch-reuse:1
@ 12558 train 3.8056 , allloss: 3.8164, dt: 1302.59ms, fracRes: 0.5916, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6016, norm(y): 0.9797, norm:0.9295, tok/sec: 100624.17, flops:88.12, batch-reuse:1
@ 12559 train 3.8874 , allloss: 3.8981, dt: 1265.91ms, fracRes: 0.5918, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6048, norm(y): 0.9799, norm:0.8776, tok/sec: 103539.71, flops:90.67, batch-reuse:1
@ 12560 train 3.9245 , allloss: 3.9349, dt: 1263.16ms, fracRes: 0.5927, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6080, norm(y): 0.9795, norm:0.8569, tok/sec: 103765.30, flops:90.87, batch-reuse:1
@ 12561 train 4.0120 , allloss: 4.0226, dt: 1265.05ms, fracRes: 0.5949, norm(attn): 0.1709, norm(output): 0.2656, norm(x): 0.6135, norm(y): 0.9797, norm:0.8651, tok/sec: 103610.14, flops:90.73, batch-reuse:1
@ 12562 train 3.8345 , allloss: 3.8448, dt: 1258.44ms, fracRes: 0.5940, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.6132, norm(y): 0.9799, norm:1.0492, tok/sec: 104154.31, flops:91.21, batch-reuse:1
@ 12563 train 3.8917 , allloss: 3.9021, dt: 1294.97ms, fracRes: 0.5945, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6112, norm(y): 0.9797, norm:0.8650, tok/sec: 101215.89, flops:88.63, batch-reuse:1
@ 12564 train 3.9169 , allloss: 3.9273, dt: 1314.32ms, fracRes: 0.5943, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6097, norm(y): 0.9800, norm:0.8343, tok/sec: 99726.34, flops:87.33, batch-reuse:1
@ 12565 train 3.9470 , allloss: 3.9574, dt: 1272.73ms, fracRes: 0.5938, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6096, norm(y): 0.9798, norm:0.8520, tok/sec: 102984.91, flops:90.18, batch-reuse:1
@ 12566 train 3.8522 , allloss: 3.8628, dt: 1262.14ms, fracRes: 0.5940, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6115, norm(y): 0.9799, norm:0.7584, tok/sec: 103848.88, flops:90.94, batch-reuse:1
@ 12567 train 3.9268 , allloss: 3.9368, dt: 1256.03ms, fracRes: 0.5941, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6094, norm(y): 0.9800, norm:0.9045, tok/sec: 104354.07, flops:91.38, batch-reuse:1
@ 12568 train 3.9155 , allloss: 3.9256, dt: 1288.31ms, fracRes: 0.5941, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6108, norm(y): 0.9798, norm:0.8925, tok/sec: 101739.30, flops:89.09, batch-reuse:1
@ 12569 train 3.9732 , allloss: 3.9846, dt: 1268.89ms, fracRes: 0.5940, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6124, norm(y): 0.9798, norm:0.8571, tok/sec: 103296.71, flops:90.46, batch-reuse:1
@ 12570 train 3.9191 , allloss: 3.9295, dt: 1270.13ms, fracRes: 0.5921, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6038, norm(y): 0.9796, norm:0.8076, tok/sec: 103195.86, flops:90.37, batch-reuse:1
@ 12571 train 3.9113 , allloss: 3.9218, dt: 1244.94ms, fracRes: 0.5928, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6009, norm(y): 0.9797, norm:0.7788, tok/sec: 105284.13, flops:92.20, batch-reuse:1
@ 12572 train 3.8334 , allloss: 3.8439, dt: 1271.75ms, fracRes: 0.5949, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6032, norm(y): 0.9799, norm:0.8266, tok/sec: 103064.19, flops:90.25, batch-reuse:1
@ 12573 train 3.8566 , allloss: 3.8670, dt: 1251.71ms, fracRes: 0.5953, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6056, norm(y): 0.9797, norm:0.7646, tok/sec: 104714.30, flops:91.70, batch-reuse:1
@ 12574 train 3.9740 , allloss: 3.9844, dt: 1280.91ms, fracRes: 0.5944, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6067, norm(y): 0.9796, norm:0.7824, tok/sec: 102327.50, flops:89.61, batch-reuse:1
@ 12575 train 3.8441 , allloss: 3.8543, dt: 1272.93ms, fracRes: 0.5951, norm(attn): 0.1709, norm(output): 0.2656, norm(x): 0.6075, norm(y): 0.9797, norm:0.7159, tok/sec: 102968.56, flops:90.17, batch-reuse:1
@ 12576 train 3.9320 , allloss: 3.9426, dt: 1270.34ms, fracRes: 0.5942, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6092, norm(y): 0.9797, norm:0.8447, tok/sec: 103178.97, flops:90.35, batch-reuse:1
@ 12577 train 3.9451 , allloss: 3.9556, dt: 1285.41ms, fracRes: 0.5952, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6089, norm(y): 0.9797, norm:0.7920, tok/sec: 101969.14, flops:89.29, batch-reuse:1
@ 12578 train 3.9970 , allloss: 4.0072, dt: 1265.27ms, fracRes: 0.5945, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6071, norm(y): 0.9797, norm:0.8091, tok/sec: 103592.12, flops:90.71, batch-reuse:1
@ 12579 train 4.1193 , allloss: 4.1301, dt: 1255.72ms, fracRes: 0.5943, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.6173, norm(y): 0.9797, norm:1.0432, tok/sec: 104380.10, flops:91.40, batch-reuse:1
@ 12580 train 3.8304 , allloss: 3.8405, dt: 1257.97ms, fracRes: 0.5944, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6103, norm(y): 0.9799, norm:0.7579, tok/sec: 104193.67, flops:91.24, batch-reuse:1
@ 12581 train 3.8917 , allloss: 3.9021, dt: 1245.80ms, fracRes: 0.5943, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6083, norm(y): 0.9800, norm:0.7810, tok/sec: 105211.03, flops:92.13, batch-reuse:1
@ 12582 train 3.7639 , allloss: 3.7745, dt: 1258.81ms, fracRes: 0.5939, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6057, norm(y): 0.9800, norm:0.7796, tok/sec: 104124.01, flops:91.18, batch-reuse:1
@ 12583 train 3.8632 , allloss: 3.8737, dt: 1257.92ms, fracRes: 0.5937, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6074, norm(y): 0.9799, norm:0.7515, tok/sec: 104197.54, flops:91.24, batch-reuse:1
@ 12584 train 3.8971 , allloss: 3.9071, dt: 1262.62ms, fracRes: 0.5936, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6084, norm(y): 0.9799, norm:0.7661, tok/sec: 103809.84, flops:90.90, batch-reuse:1
@ 12585 train 3.9296 , allloss: 3.9400, dt: 1269.30ms, fracRes: 0.5934, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6088, norm(y): 0.9797, norm:0.7234, tok/sec: 103263.28, flops:90.43, batch-reuse:1
@ 12586 train 3.8986 , allloss: 3.9089, dt: 1264.46ms, fracRes: 0.5944, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6074, norm(y): 0.9799, norm:0.7800, tok/sec: 103658.18, flops:90.77, batch-reuse:1
@ 12587 train 3.9456 , allloss: 3.9557, dt: 1271.21ms, fracRes: 0.5939, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6069, norm(y): 0.9797, norm:0.7753, tok/sec: 103108.03, flops:90.29, batch-reuse:1
@ 12588 train 3.8269 , allloss: 3.8372, dt: 1248.73ms, fracRes: 0.5939, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6099, norm(y): 0.9799, norm:0.7349, tok/sec: 104964.51, flops:91.92, batch-reuse:1
@ 12589 train 3.9675 , allloss: 3.9775, dt: 1261.73ms, fracRes: 0.5937, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6083, norm(y): 0.9797, norm:0.7562, tok/sec: 103882.91, flops:90.97, batch-reuse:1
@ 12590 train 3.8844 , allloss: 3.8943, dt: 1247.39ms, fracRes: 0.5934, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6097, norm(y): 0.9798, norm:0.8809, tok/sec: 105077.00, flops:92.01, batch-reuse:1
@ 12591 train 3.9264 , allloss: 3.9364, dt: 1266.52ms, fracRes: 0.5938, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6084, norm(y): 0.9800, norm:0.8764, tok/sec: 103489.82, flops:90.62, batch-reuse:1
@ 12592 train 3.9488 , allloss: 3.9590, dt: 1279.28ms, fracRes: 0.5932, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6083, norm(y): 0.9802, norm:0.8598, tok/sec: 102457.71, flops:89.72, batch-reuse:1
@ 12593 train 3.8330 , allloss: 3.8435, dt: 1271.77ms, fracRes: 0.5930, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6078, norm(y): 0.9799, norm:0.8057, tok/sec: 103062.64, flops:90.25, batch-reuse:1
@ 12594 train 3.8324 , allloss: 3.8427, dt: 1265.35ms, fracRes: 0.5935, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6035, norm(y): 0.9797, norm:0.8948, tok/sec: 103585.64, flops:90.71, batch-reuse:1
@ 12595 train 3.8796 , allloss: 3.8897, dt: 1282.81ms, fracRes: 0.5943, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6047, norm(y): 0.9797, norm:0.7403, tok/sec: 102175.88, flops:89.47, batch-reuse:1
@ 12596 train 3.7582 , allloss: 3.7686, dt: 1266.87ms, fracRes: 0.5945, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6061, norm(y): 0.9796, norm:0.8060, tok/sec: 103460.90, flops:90.60, batch-reuse:1
@ 12597 train 3.8543 , allloss: 3.8645, dt: 1286.06ms, fracRes: 0.5944, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6053, norm(y): 0.9796, norm:0.9353, tok/sec: 101917.23, flops:89.25, batch-reuse:1
@ 12598 train 3.9320 , allloss: 3.9420, dt: 1266.83ms, fracRes: 0.5948, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6052, norm(y): 0.9796, norm:0.8333, tok/sec: 103464.71, flops:90.60, batch-reuse:1
@ 12599 train 3.7700 , allloss: 3.7804, dt: 1278.58ms, fracRes: 0.5958, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6101, norm(y): 0.9801, norm:0.9315, tok/sec: 102513.65, flops:89.77, batch-reuse:1
@ 12600 train 3.9168 , allloss: 3.9271, dt: 1270.80ms, fracRes: 0.5948, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6081, norm(y): 0.9797, norm:0.8086, tok/sec: 103140.93, flops:90.32, batch-reuse:1
@ 12601 train 3.8996 , allloss: 3.9095, dt: 1253.14ms, fracRes: 0.5934, norm(attn): 0.1709, norm(output): 0.2656, norm(x): 0.6063, norm(y): 0.9795, norm:0.8448, tok/sec: 104594.58, flops:91.59, batch-reuse:1
@ 12602 train 3.8129 , allloss: 3.8229, dt: 1269.45ms, fracRes: 0.5931, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6053, norm(y): 0.9796, norm:0.7893, tok/sec: 103251.08, flops:90.42, batch-reuse:1
@ 12603 train 3.8488 , allloss: 3.8589, dt: 1265.72ms, fracRes: 0.5935, norm(attn): 0.1709, norm(output): 0.2656, norm(x): 0.6057, norm(y): 0.9798, norm:0.7888, tok/sec: 103555.02, flops:90.68, batch-reuse:1
@ 12604 train 3.9180 , allloss: 3.9281, dt: 1287.22ms, fracRes: 0.5934, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6062, norm(y): 0.9795, norm:0.7834, tok/sec: 101825.43, flops:89.17, batch-reuse:1
@ 12605 train 3.7734 , allloss: 3.7839, dt: 1282.81ms, fracRes: 0.5943, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6061, norm(y): 0.9796, norm:0.8546, tok/sec: 102175.37, flops:89.47, batch-reuse:1
@ 12606 train 3.7434 , allloss: 3.7534, dt: 1266.65ms, fracRes: 0.5954, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6032, norm(y): 0.9796, norm:0.8612, tok/sec: 103479.26, flops:90.62, batch-reuse:1
@ 12607 train 3.8601 , allloss: 3.8702, dt: 1268.42ms, fracRes: 0.5951, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6027, norm(y): 0.9794, norm:0.7775, tok/sec: 103334.45, flops:90.49, batch-reuse:1
@ 12608 train 3.8460 , allloss: 3.8562, dt: 1258.45ms, fracRes: 0.5945, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6059, norm(y): 0.9795, norm:0.8180, tok/sec: 104153.82, flops:91.21, batch-reuse:1
@ 12609 train 3.8101 , allloss: 3.8202, dt: 1276.63ms, fracRes: 0.5939, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6060, norm(y): 0.9797, norm:0.8305, tok/sec: 102670.11, flops:89.91, batch-reuse:1
@ 12610 train 3.8167 , allloss: 3.8266, dt: 1275.91ms, fracRes: 0.5941, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6049, norm(y): 0.9797, norm:0.6932, tok/sec: 102727.91, flops:89.96, batch-reuse:1
@ 12611 train 3.8162 , allloss: 3.8259, dt: 1262.20ms, fracRes: 0.5939, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6028, norm(y): 0.9798, norm:0.7454, tok/sec: 103844.33, flops:90.93, batch-reuse:1
@ 12612 train 3.8281 , allloss: 3.8382, dt: 1258.56ms, fracRes: 0.5938, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6090, norm(y): 0.9798, norm:0.7109, tok/sec: 104144.27, flops:91.20, batch-reuse:1
@ 12613 train 3.7126 , allloss: 3.7235, dt: 1269.14ms, fracRes: 0.5943, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6130, norm(y): 0.9799, norm:0.6892, tok/sec: 103276.29, flops:90.44, batch-reuse:1
@ 12614 train 3.7876 , allloss: 3.7979, dt: 1285.18ms, fracRes: 0.5944, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6134, norm(y): 0.9799, norm:0.7523, tok/sec: 101986.88, flops:89.31, batch-reuse:1
@ 12615 train 3.7785 , allloss: 3.7884, dt: 1246.60ms, fracRes: 0.5939, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6060, norm(y): 0.9799, norm:0.7702, tok/sec: 105144.00, flops:92.07, batch-reuse:1
@ 12616 train 3.7235 , allloss: 3.7335, dt: 1264.42ms, fracRes: 0.5945, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6044, norm(y): 0.9798, norm:0.7298, tok/sec: 103662.15, flops:90.78, batch-reuse:1
@ 12617 train 3.7669 , allloss: 3.7770, dt: 1256.48ms, fracRes: 0.5939, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6059, norm(y): 0.9798, norm:0.7155, tok/sec: 104316.94, flops:91.35, batch-reuse:1
@ 12618 train 3.7738 , allloss: 3.7842, dt: 1266.76ms, fracRes: 0.5932, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6057, norm(y): 0.9798, norm:0.7410, tok/sec: 103470.34, flops:90.61, batch-reuse:1
@ 12619 train 3.7887 , allloss: 3.7993, dt: 1286.44ms, fracRes: 0.5930, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6089, norm(y): 0.9799, norm:0.7312, tok/sec: 101887.12, flops:89.22, batch-reuse:1
@ 12620 train 3.8408 , allloss: 3.8510, dt: 1261.17ms, fracRes: 0.5942, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6041, norm(y): 0.9798, norm:0.7819, tok/sec: 103928.60, flops:91.01, batch-reuse:1
@ 12621 train 3.8653 , allloss: 3.8755, dt: 1264.08ms, fracRes: 0.5954, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6049, norm(y): 0.9797, norm:0.8221, tok/sec: 103690.05, flops:90.80, batch-reuse:1
@ 12622 train 3.8087 , allloss: 3.8191, dt: 1256.49ms, fracRes: 0.5943, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6063, norm(y): 0.9795, norm:0.7460, tok/sec: 104315.91, flops:91.35, batch-reuse:1
@ 12623 train 3.8969 , allloss: 3.9072, dt: 1272.41ms, fracRes: 0.5952, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6036, norm(y): 0.9796, norm:0.7829, tok/sec: 103011.14, flops:90.21, batch-reuse:1
@ 12624 train 3.8793 , allloss: 3.8895, dt: 1270.99ms, fracRes: 0.5950, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6013, norm(y): 0.9794, norm:0.7515, tok/sec: 103126.29, flops:90.31, batch-reuse:1
@ 12625 train 3.7858 , allloss: 3.7961, dt: 1296.83ms, fracRes: 0.5952, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6025, norm(y): 0.9796, norm:0.8253, tok/sec: 101070.69, flops:88.51, batch-reuse:1
@ 12626 train 3.7238 , allloss: 3.7336, dt: 1274.59ms, fracRes: 0.5940, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6002, norm(y): 0.9796, norm:0.8737, tok/sec: 102834.89, flops:90.05, batch-reuse:1
@ 12627 train 3.7693 , allloss: 3.7793, dt: 1264.40ms, fracRes: 0.5933, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6010, norm(y): 0.9798, norm:0.7824, tok/sec: 103663.53, flops:90.78, batch-reuse:1
@ 12628 train 3.8368 , allloss: 3.8472, dt: 1235.09ms, fracRes: 0.5932, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6053, norm(y): 0.9797, norm:0.7870, tok/sec: 106123.60, flops:92.93, batch-reuse:1
@ 12629 train 3.8370 , allloss: 3.8471, dt: 1275.21ms, fracRes: 0.5932, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6038, norm(y): 0.9796, norm:0.8152, tok/sec: 102784.84, flops:90.01, batch-reuse:1
@ 12630 train 3.7302 , allloss: 3.7411, dt: 1271.02ms, fracRes: 0.5948, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6098, norm(y): 0.9799, norm:0.7772, tok/sec: 103123.52, flops:90.30, batch-reuse:1
@ 12631 train 3.7718 , allloss: 3.7819, dt: 1260.22ms, fracRes: 0.5946, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6072, norm(y): 0.9796, norm:0.8354, tok/sec: 104006.94, flops:91.08, batch-reuse:1
@ 12632 train 3.8053 , allloss: 3.8152, dt: 1261.82ms, fracRes: 0.5946, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6058, norm(y): 0.9795, norm:0.8631, tok/sec: 103875.39, flops:90.96, batch-reuse:1
@ 12633 train 3.7778 , allloss: 3.7879, dt: 1270.40ms, fracRes: 0.5942, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6060, norm(y): 0.9796, norm:0.7272, tok/sec: 103173.88, flops:90.35, batch-reuse:1
@ 12634 train 3.7919 , allloss: 3.8020, dt: 1289.60ms, fracRes: 0.5941, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6061, norm(y): 0.9798, norm:0.8514, tok/sec: 101638.01, flops:89.00, batch-reuse:1
@ 12635 train 3.7536 , allloss: 3.7639, dt: 1257.70ms, fracRes: 0.5934, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6043, norm(y): 0.9795, norm:0.7930, tok/sec: 104215.63, flops:91.26, batch-reuse:1
@ 12636 train 3.6680 , allloss: 3.6779, dt: 1264.08ms, fracRes: 0.5933, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6004, norm(y): 0.9798, norm:0.6975, tok/sec: 103689.46, flops:90.80, batch-reuse:1
@ 12637 train 3.7257 , allloss: 3.7357, dt: 1252.41ms, fracRes: 0.5941, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5980, norm(y): 0.9797, norm:0.7160, tok/sec: 104656.07, flops:91.65, batch-reuse:1
@ 12638 train 3.7593 , allloss: 3.7696, dt: 1263.80ms, fracRes: 0.5943, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6018, norm(y): 0.9796, norm:0.6975, tok/sec: 103712.68, flops:90.82, batch-reuse:1
@ 12639 train 3.8261 , allloss: 3.8365, dt: 1273.78ms, fracRes: 0.5951, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6025, norm(y): 0.9797, norm:0.7738, tok/sec: 102900.00, flops:90.11, batch-reuse:1
@ 12640 train 3.8088 , allloss: 3.8187, dt: 1266.25ms, fracRes: 0.5948, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6021, norm(y): 0.9794, norm:0.7824, tok/sec: 103512.27, flops:90.64, batch-reuse:1
@ 12641 train 3.8218 , allloss: 3.8317, dt: 1264.42ms, fracRes: 0.5950, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6040, norm(y): 0.9795, norm:0.7150, tok/sec: 103661.56, flops:90.77, batch-reuse:1
@ 12642 train 3.7644 , allloss: 3.7742, dt: 1276.34ms, fracRes: 0.5940, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6040, norm(y): 0.9794, norm:0.8272, tok/sec: 102693.45, flops:89.93, batch-reuse:1
@ 12643 train 3.8186 , allloss: 3.8289, dt: 1307.47ms, fracRes: 0.5944, norm(attn): 0.1709, norm(output): 0.2656, norm(x): 0.6065, norm(y): 0.9795, norm:0.8620, tok/sec: 100248.82, flops:87.79, batch-reuse:1
@ 12644 train 3.7880 , allloss: 3.7984, dt: 1302.44ms, fracRes: 0.5946, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.6005, norm(y): 0.9795, norm:0.8427, tok/sec: 100635.70, flops:88.13, batch-reuse:1
@ 12645 train 3.8418 , allloss: 3.8518, dt: 1291.06ms, fracRes: 0.5942, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6021, norm(y): 0.9793, norm:0.8475, tok/sec: 101522.86, flops:88.90, batch-reuse:1
@ 12646 train 3.7935 , allloss: 3.8032, dt: 1270.32ms, fracRes: 0.5937, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6023, norm(y): 0.9794, norm:0.7446, tok/sec: 103180.50, flops:90.35, batch-reuse:1
@ 12647 train 3.7832 , allloss: 3.7931, dt: 1251.83ms, fracRes: 0.5936, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6040, norm(y): 0.9795, norm:0.7429, tok/sec: 104704.30, flops:91.69, batch-reuse:1
@ 12648 train 3.8031 , allloss: 3.8131, dt: 1266.58ms, fracRes: 0.5932, norm(attn): 0.1729, norm(output): 0.2637, norm(x): 0.6012, norm(y): 0.9796, norm:0.7667, tok/sec: 103484.83, flops:90.62, batch-reuse:1
@ 12649 train 3.8094 , allloss: 3.8196, dt: 1292.32ms, fracRes: 0.5935, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6036, norm(y): 0.9796, norm:0.7497, tok/sec: 101423.68, flops:88.82, batch-reuse:1
@ 12650 train 3.7353 , allloss: 3.7454, dt: 1268.44ms, fracRes: 0.5943, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6037, norm(y): 0.9797, norm:0.8121, tok/sec: 103333.17, flops:90.49, batch-reuse:1
@ 12651 train 3.7647 , allloss: 3.7748, dt: 1274.96ms, fracRes: 0.5946, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6031, norm(y): 0.9799, norm:0.8626, tok/sec: 102805.18, flops:90.03, batch-reuse:1
@ 12652 train 3.4641 , allloss: 3.4741, dt: 1251.45ms, fracRes: 0.5940, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.5988, norm(y): 0.9797, norm:0.7455, tok/sec: 104735.76, flops:91.72, batch-reuse:1
@ 12653 train 3.5478 , allloss: 3.5582, dt: 1261.28ms, fracRes: 0.5939, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.5977, norm(y): 0.9799, norm:0.8667, tok/sec: 103919.63, flops:91.00, batch-reuse:1
@ 12654 train 3.6297 , allloss: 3.6399, dt: 1250.89ms, fracRes: 0.5939, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6000, norm(y): 0.9797, norm:0.7909, tok/sec: 104782.95, flops:91.76, batch-reuse:1
@ 12655 train 3.6322 , allloss: 3.6435, dt: 1262.18ms, fracRes: 0.5936, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6026, norm(y): 0.9796, norm:0.7701, tok/sec: 103846.03, flops:90.94, batch-reuse:1
@ 12656 train 3.5988 , allloss: 3.6089, dt: 1258.48ms, fracRes: 0.5934, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6068, norm(y): 0.9794, norm:0.8317, tok/sec: 104151.13, flops:91.20, batch-reuse:1
@ 12657 train 3.7987 , allloss: 3.8086, dt: 1291.41ms, fracRes: 0.5937, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6056, norm(y): 0.9794, norm:0.8026, tok/sec: 101495.25, flops:88.88, batch-reuse:1
@ 12658 train 3.5723 , allloss: 3.5828, dt: 1262.16ms, fracRes: 0.5947, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6107, norm(y): 0.9801, norm:0.7742, tok/sec: 103847.54, flops:90.94, batch-reuse:1
@ 12659 train 3.6962 , allloss: 3.7063, dt: 1274.35ms, fracRes: 0.5946, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6072, norm(y): 0.9797, norm:0.7775, tok/sec: 102853.97, flops:90.07, batch-reuse:1
@ 12660 train 3.7891 , allloss: 3.7992, dt: 1259.88ms, fracRes: 0.5947, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6025, norm(y): 0.9793, norm:0.7551, tok/sec: 104035.24, flops:91.10, batch-reuse:1
@ 12661 train 3.7057 , allloss: 3.7159, dt: 1273.21ms, fracRes: 0.5952, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6015, norm(y): 0.9795, norm:0.8807, tok/sec: 102945.86, flops:90.15, batch-reuse:1
@ 12662 train 3.7042 , allloss: 3.7144, dt: 1245.44ms, fracRes: 0.5933, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6023, norm(y): 0.9794, norm:0.8053, tok/sec: 105241.44, flops:92.16, batch-reuse:1
@ 12663 train 3.6170 , allloss: 3.6275, dt: 1260.13ms, fracRes: 0.5934, norm(attn): 0.1729, norm(output): 0.2637, norm(x): 0.6027, norm(y): 0.9800, norm:0.8535, tok/sec: 104014.73, flops:91.08, batch-reuse:1
@ 12664 train 3.6038 , allloss: 3.6140, dt: 1245.34ms, fracRes: 0.5924, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5991, norm(y): 0.9798, norm:0.9316, tok/sec: 105250.10, flops:92.17, batch-reuse:1
@ 12665 train 3.6772 , allloss: 3.6874, dt: 1268.74ms, fracRes: 0.5932, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6043, norm(y): 0.9796, norm:0.7489, tok/sec: 103308.80, flops:90.47, batch-reuse:1
@ 12666 train 3.6520 , allloss: 3.6622, dt: 1288.07ms, fracRes: 0.5934, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6086, norm(y): 0.9797, norm:0.9079, tok/sec: 101758.26, flops:89.11, batch-reuse:1
@ 12667 train 3.6464 , allloss: 3.6564, dt: 1278.04ms, fracRes: 0.5934, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6021, norm(y): 0.9796, norm:0.8888, tok/sec: 102556.72, flops:89.81, batch-reuse:1
@ 12668 train 3.5578 , allloss: 3.5681, dt: 1294.29ms, fracRes: 0.5938, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6030, norm(y): 0.9797, norm:0.7747, tok/sec: 101269.72, flops:88.68, batch-reuse:1
@ 12669 train 3.6789 , allloss: 3.6893, dt: 1281.98ms, fracRes: 0.5940, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.6032, norm(y): 0.9796, norm:0.7689, tok/sec: 102241.86, flops:89.53, batch-reuse:1
@ 12670 train 3.7088 , allloss: 3.7190, dt: 1264.40ms, fracRes: 0.5936, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6032, norm(y): 0.9795, norm:0.7189, tok/sec: 103663.30, flops:90.78, batch-reuse:1
@ 12671 train 3.6809 , allloss: 3.6908, dt: 1275.50ms, fracRes: 0.5934, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6021, norm(y): 0.9792, norm:0.7513, tok/sec: 102761.57, flops:89.99, batch-reuse:1
@ 12672 train 3.6393 , allloss: 3.6494, dt: 1264.11ms, fracRes: 0.5933, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6005, norm(y): 0.9792, norm:0.7371, tok/sec: 103686.98, flops:90.80, batch-reuse:1
@ 12673 train 3.6330 , allloss: 3.6434, dt: 1274.59ms, fracRes: 0.5931, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6002, norm(y): 0.9795, norm:0.7447, tok/sec: 102834.25, flops:90.05, batch-reuse:1
@ 12674 train 3.5928 , allloss: 3.6033, dt: 1288.09ms, fracRes: 0.5932, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.5964, norm(y): 0.9796, norm:0.7739, tok/sec: 101756.81, flops:89.11, batch-reuse:1
@ 12675 train 3.5857 , allloss: 3.5962, dt: 1274.15ms, fracRes: 0.5931, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5982, norm(y): 0.9796, norm:0.7849, tok/sec: 102870.35, flops:90.08, batch-reuse:1
@ 12676 train 3.5462 , allloss: 3.5564, dt: 1256.43ms, fracRes: 0.5939, norm(attn): 0.1719, norm(output): 0.2598, norm(x): 0.5973, norm(y): 0.9794, norm:0.7276, tok/sec: 104321.08, flops:91.35, batch-reuse:1
@ 12677 train 3.5953 , allloss: 3.6054, dt: 1259.80ms, fracRes: 0.5938, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.5980, norm(y): 0.9794, norm:0.7167, tok/sec: 104042.07, flops:91.11, batch-reuse:1
@ 12678 train 3.5808 , allloss: 3.5911, dt: 1264.59ms, fracRes: 0.5934, norm(attn): 0.1719, norm(output): 0.2598, norm(x): 0.5976, norm(y): 0.9795, norm:0.7119, tok/sec: 103648.23, flops:90.76, batch-reuse:1
@ 12679 train 3.4369 , allloss: 3.4473, dt: 1266.35ms, fracRes: 0.5935, norm(attn): 0.1709, norm(output): 0.2598, norm(x): 0.5959, norm(y): 0.9795, norm:0.6940, tok/sec: 103503.83, flops:90.64, batch-reuse:1
@ 12680 train 3.6599 , allloss: 3.6700, dt: 1261.67ms, fracRes: 0.5931, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.5967, norm(y): 0.9793, norm:0.7215, tok/sec: 103887.89, flops:90.97, batch-reuse:1
@ 12681 train 3.6845 , allloss: 3.6947, dt: 1284.46ms, fracRes: 0.5929, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6002, norm(y): 0.9792, norm:0.7482, tok/sec: 102044.81, flops:89.36, batch-reuse:1
@ 12682 train 3.7431 , allloss: 3.7529, dt: 1272.60ms, fracRes: 0.5930, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5977, norm(y): 0.9789, norm:0.7466, tok/sec: 102995.10, flops:90.19, batch-reuse:1
@ 12683 train 3.6459 , allloss: 3.6558, dt: 1296.13ms, fracRes: 0.5934, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5998, norm(y): 0.9790, norm:0.7223, tok/sec: 101125.92, flops:88.55, batch-reuse:1
@ 12684 train 3.6282 , allloss: 3.6386, dt: 1256.88ms, fracRes: 0.5930, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5992, norm(y): 0.9791, norm:0.7213, tok/sec: 104283.46, flops:91.32, batch-reuse:1
@ 12685 train 3.6757 , allloss: 3.6863, dt: 1269.54ms, fracRes: 0.5930, norm(attn): 0.1729, norm(output): 0.2637, norm(x): 0.6015, norm(y): 0.9795, norm:0.7457, tok/sec: 103243.51, flops:90.41, batch-reuse:1
@ 12686 train 3.6176 , allloss: 3.6278, dt: 1259.05ms, fracRes: 0.5929, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5996, norm(y): 0.9795, norm:0.7251, tok/sec: 104104.21, flops:91.16, batch-reuse:1
@ 12687 train 3.5915 , allloss: 3.6018, dt: 1276.10ms, fracRes: 0.5931, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6015, norm(y): 0.9792, norm:0.7373, tok/sec: 102712.79, flops:89.94, batch-reuse:1
@ 12688 train 3.5728 , allloss: 3.5834, dt: 1268.83ms, fracRes: 0.5937, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.5999, norm(y): 0.9794, norm:0.7395, tok/sec: 103301.21, flops:90.46, batch-reuse:1
@ 12689 train 3.5954 , allloss: 3.6058, dt: 1256.24ms, fracRes: 0.5932, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.5959, norm(y): 0.9793, norm:0.7471, tok/sec: 104337.04, flops:91.37, batch-reuse:1
@ 12690 train 3.6707 , allloss: 3.6810, dt: 1267.44ms, fracRes: 0.5933, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6000, norm(y): 0.9793, norm:0.7254, tok/sec: 103414.98, flops:90.56, batch-reuse:1
@ 12691 train 3.5456 , allloss: 3.5555, dt: 1267.06ms, fracRes: 0.5938, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6001, norm(y): 0.9796, norm:0.7803, tok/sec: 103445.85, flops:90.59, batch-reuse:1
@ 12692 train 3.6332 , allloss: 3.6433, dt: 1262.68ms, fracRes: 0.5937, norm(attn): 0.1719, norm(output): 0.2598, norm(x): 0.5992, norm(y): 0.9794, norm:0.7199, tok/sec: 103804.33, flops:90.90, batch-reuse:1
@ 12693 train 3.5769 , allloss: 3.5874, dt: 1290.67ms, fracRes: 0.5945, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.5977, norm(y): 0.9791, norm:0.7756, tok/sec: 101553.16, flops:88.93, batch-reuse:1
@ 12694 train 3.7159 , allloss: 3.7260, dt: 1290.37ms, fracRes: 0.5945, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.5975, norm(y): 0.9791, norm:0.7687, tok/sec: 101577.37, flops:88.95, batch-reuse:1
@ 12695 train 3.5882 , allloss: 3.5993, dt: 1285.60ms, fracRes: 0.5953, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6034, norm(y): 0.9795, norm:0.8073, tok/sec: 101954.16, flops:89.28, batch-reuse:1
@ 12696 train 3.6439 , allloss: 3.6540, dt: 1266.41ms, fracRes: 0.5932, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5979, norm(y): 0.9792, norm:0.7330, tok/sec: 103498.64, flops:90.63, batch-reuse:1
@ 12697 train 3.8366 , allloss: 3.8473, dt: 1257.98ms, fracRes: 0.5920, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6031, norm(y): 0.9789, norm:0.7966, tok/sec: 104192.64, flops:91.24, batch-reuse:1
@ 12698 train 3.8725 , allloss: 3.8823, dt: 1258.81ms, fracRes: 0.5928, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6019, norm(y): 0.9788, norm:0.7581, tok/sec: 104123.36, flops:91.18, batch-reuse:1
@ 12699 train 3.8334 , allloss: 3.8437, dt: 1246.25ms, fracRes: 0.5932, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6030, norm(y): 0.9787, norm:0.7472, tok/sec: 105173.47, flops:92.10, batch-reuse:1
@ 12700 train 3.8417 , allloss: 3.8518, dt: 1263.59ms, fracRes: 0.5935, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6040, norm(y): 0.9789, norm:0.7284, tok/sec: 103729.96, flops:90.83, batch-reuse:1
@ 12701 train 3.8339 , allloss: 3.8440, dt: 1276.21ms, fracRes: 0.5930, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6034, norm(y): 0.9788, norm:0.7206, tok/sec: 102704.50, flops:89.94, batch-reuse:1
@ 12702 train 3.8495 , allloss: 3.8597, dt: 1260.36ms, fracRes: 0.5932, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6012, norm(y): 0.9788, norm:0.8451, tok/sec: 103995.92, flops:91.07, batch-reuse:1
@ 12703 train 3.7946 , allloss: 3.8052, dt: 1267.51ms, fracRes: 0.5932, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6030, norm(y): 0.9788, norm:0.9424, tok/sec: 103409.21, flops:90.55, batch-reuse:1
@ 12704 train 3.8434 , allloss: 3.8536, dt: 1271.12ms, fracRes: 0.5933, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5996, norm(y): 0.9789, norm:0.9081, tok/sec: 103115.61, flops:90.30, batch-reuse:1
@ 12705 train 3.8894 , allloss: 3.8997, dt: 1267.53ms, fracRes: 0.5945, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.5993, norm(y): 0.9789, norm:0.8141, tok/sec: 103407.59, flops:90.55, batch-reuse:1
@ 12706 train 3.8387 , allloss: 3.8488, dt: 1253.71ms, fracRes: 0.5942, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6000, norm(y): 0.9788, norm:0.7349, tok/sec: 104547.06, flops:91.55, batch-reuse:1
@ 12707 train 3.8418 , allloss: 3.8517, dt: 1282.72ms, fracRes: 0.5945, norm(attn): 0.1709, norm(output): 0.2617, norm(x): 0.5953, norm(y): 0.9788, norm:0.7947, tok/sec: 102183.25, flops:89.48, batch-reuse:1
@ 12708 train 3.8578 , allloss: 3.8682, dt: 1283.21ms, fracRes: 0.5943, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5976, norm(y): 0.9790, norm:0.7790, tok/sec: 102144.05, flops:89.45, batch-reuse:1
@ 12709 train 3.7511 , allloss: 3.7613, dt: 1271.95ms, fracRes: 0.5940, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5989, norm(y): 0.9790, norm:0.7359, tok/sec: 103047.79, flops:90.24, batch-reuse:1
@ 12710 train 3.8773 , allloss: 3.8878, dt: 1252.55ms, fracRes: 0.5930, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6047, norm(y): 0.9788, norm:0.7830, tok/sec: 104643.98, flops:91.64, batch-reuse:1
@ 12711 train 3.8339 , allloss: 3.8459, dt: 1271.24ms, fracRes: 0.5932, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.6113, norm(y): 0.9786, norm:0.9357, tok/sec: 103105.63, flops:90.29, batch-reuse:1
@ 12712 train 3.8858 , allloss: 3.8960, dt: 1260.48ms, fracRes: 0.5931, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6066, norm(y): 0.9787, norm:0.7999, tok/sec: 103986.12, flops:91.06, batch-reuse:1
@ 12713 train 3.8007 , allloss: 3.8112, dt: 1272.86ms, fracRes: 0.5932, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6088, norm(y): 0.9786, norm:0.8264, tok/sec: 102974.65, flops:90.17, batch-reuse:1
@ 12714 train 3.8842 , allloss: 3.8946, dt: 1269.25ms, fracRes: 0.5939, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6040, norm(y): 0.9786, norm:0.7739, tok/sec: 103267.48, flops:90.43, batch-reuse:1
@ 12715 train 3.7642 , allloss: 3.7747, dt: 1281.90ms, fracRes: 0.5947, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6052, norm(y): 0.9793, norm:0.9988, tok/sec: 102248.46, flops:89.54, batch-reuse:1
@ 12716 train 3.8585 , allloss: 3.8688, dt: 1275.02ms, fracRes: 0.5946, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6031, norm(y): 0.9788, norm:0.7887, tok/sec: 102799.95, flops:90.02, batch-reuse:1
@ 12717 train 3.8584 , allloss: 3.8686, dt: 1266.98ms, fracRes: 0.5948, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6011, norm(y): 0.9790, norm:0.8059, tok/sec: 103452.29, flops:90.59, batch-reuse:1
@ 12718 train 3.8155 , allloss: 3.8258, dt: 1287.74ms, fracRes: 0.5942, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5982, norm(y): 0.9789, norm:0.8219, tok/sec: 101784.52, flops:89.13, batch-reuse:1
@ 12719 train 3.8362 , allloss: 3.8462, dt: 1284.06ms, fracRes: 0.5938, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5985, norm(y): 0.9790, norm:0.7596, tok/sec: 102076.55, flops:89.39, batch-reuse:1
@ 12720 train 3.8082 , allloss: 3.8192, dt: 1257.57ms, fracRes: 0.5936, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6066, norm(y): 0.9786, norm:0.8764, tok/sec: 104226.36, flops:91.27, batch-reuse:1
@ 12721 train 3.8662 , allloss: 3.8765, dt: 1264.95ms, fracRes: 0.5932, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5999, norm(y): 0.9787, norm:0.9430, tok/sec: 103618.09, flops:90.74, batch-reuse:1
@ 12722 train 3.8248 , allloss: 3.8352, dt: 1254.29ms, fracRes: 0.5938, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6039, norm(y): 0.9789, norm:0.8287, tok/sec: 104498.57, flops:91.51, batch-reuse:1
@ 12723 train 3.8649 , allloss: 3.8753, dt: 1277.11ms, fracRes: 0.5935, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6026, norm(y): 0.9788, norm:0.7315, tok/sec: 102631.98, flops:89.87, batch-reuse:1
@ 12724 train 3.8814 , allloss: 3.8914, dt: 1250.25ms, fracRes: 0.5929, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6038, norm(y): 0.9789, norm:0.9027, tok/sec: 104836.54, flops:91.80, batch-reuse:1
@ 12725 train 3.8549 , allloss: 3.8649, dt: 1263.24ms, fracRes: 0.5921, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6074, norm(y): 0.9786, norm:0.8337, tok/sec: 103758.62, flops:90.86, batch-reuse:1
@ 12726 train 3.8207 , allloss: 3.8310, dt: 1282.60ms, fracRes: 0.5927, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6084, norm(y): 0.9786, norm:0.8202, tok/sec: 102192.22, flops:89.49, batch-reuse:1
@ 12727 train 3.8151 , allloss: 3.8256, dt: 1275.11ms, fracRes: 0.5923, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6061, norm(y): 0.9786, norm:0.7211, tok/sec: 102792.62, flops:90.01, batch-reuse:1
@ 12728 train 3.7350 , allloss: 3.7461, dt: 1260.88ms, fracRes: 0.5919, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6074, norm(y): 0.9789, norm:0.8838, tok/sec: 103953.05, flops:91.03, batch-reuse:1
@ 12729 train 3.8285 , allloss: 3.8390, dt: 1257.64ms, fracRes: 0.5928, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6072, norm(y): 0.9791, norm:0.9489, tok/sec: 104220.91, flops:91.26, batch-reuse:1
@ 12730 train 3.8145 , allloss: 3.8248, dt: 1279.31ms, fracRes: 0.5922, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6005, norm(y): 0.9786, norm:0.7940, tok/sec: 102454.94, flops:89.72, batch-reuse:1
@ 12731 train 3.8534 , allloss: 3.8634, dt: 1269.59ms, fracRes: 0.5932, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6019, norm(y): 0.9787, norm:0.8127, tok/sec: 103239.48, flops:90.41, batch-reuse:1
@ 12732 train 3.8581 , allloss: 3.8682, dt: 1260.66ms, fracRes: 0.5935, norm(attn): 0.1709, norm(output): 0.2656, norm(x): 0.6033, norm(y): 0.9786, norm:0.8354, tok/sec: 103971.02, flops:91.05, batch-reuse:1
@ 12733 train 3.8941 , allloss: 3.9055, dt: 1255.77ms, fracRes: 0.5934, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6051, norm(y): 0.9787, norm:0.7743, tok/sec: 104376.02, flops:91.40, batch-reuse:1
@ 12734 train 3.8139 , allloss: 3.8236, dt: 1249.32ms, fracRes: 0.5938, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6005, norm(y): 0.9788, norm:0.8139, tok/sec: 104914.69, flops:91.87, batch-reuse:1
@ 12735 train 3.8718 , allloss: 3.8822, dt: 1268.87ms, fracRes: 0.5944, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6033, norm(y): 0.9785, norm:1.0154, tok/sec: 103298.06, flops:90.46, batch-reuse:1
@ 12736 train 3.8945 , allloss: 3.9053, dt: 1282.84ms, fracRes: 0.5937, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6012, norm(y): 0.9785, norm:0.7734, tok/sec: 102173.70, flops:89.47, batch-reuse:1
@ 12737 train 3.9280 , allloss: 3.9382, dt: 1266.86ms, fracRes: 0.5932, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6024, norm(y): 0.9786, norm:0.8653, tok/sec: 103462.14, flops:90.60, batch-reuse:1
@ 12738 train 3.8756 , allloss: 3.8858, dt: 1270.90ms, fracRes: 0.5933, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6009, norm(y): 0.9786, norm:0.8351, tok/sec: 103133.21, flops:90.31, batch-reuse:1
@ 12739 train 3.8171 , allloss: 3.8287, dt: 1319.33ms, fracRes: 0.5928, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6010, norm(y): 0.9784, norm:0.7609, tok/sec: 99347.15, flops:87.00, batch-reuse:1
@ 12740 train 3.8247 , allloss: 3.8347, dt: 1303.05ms, fracRes: 0.5933, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6008, norm(y): 0.9784, norm:0.7517, tok/sec: 100588.25, flops:88.08, batch-reuse:1
@ 12741 train 3.7942 , allloss: 3.8040, dt: 1260.02ms, fracRes: 0.5934, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5992, norm(y): 0.9785, norm:0.6982, tok/sec: 104024.02, flops:91.09, batch-reuse:1
@ 12742 train 3.8552 , allloss: 3.8654, dt: 1253.32ms, fracRes: 0.5934, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5995, norm(y): 0.9786, norm:0.7586, tok/sec: 104579.82, flops:91.58, batch-reuse:1
@ 12743 train 3.8351 , allloss: 3.8452, dt: 1270.23ms, fracRes: 0.5934, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6011, norm(y): 0.9787, norm:0.7293, tok/sec: 103187.30, flops:90.36, batch-reuse:1
@ 12744 train 3.7838 , allloss: 3.7951, dt: 1273.80ms, fracRes: 0.5944, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6110, norm(y): 0.9792, norm:1.0113, tok/sec: 102898.23, flops:90.11, batch-reuse:1
@ 12745 train 3.7848 , allloss: 3.7949, dt: 1291.90ms, fracRes: 0.5935, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6068, norm(y): 0.9789, norm:0.8948, tok/sec: 101457.00, flops:88.84, batch-reuse:1
@ 12746 train 3.8817 , allloss: 3.8915, dt: 1314.01ms, fracRes: 0.5937, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6029, norm(y): 0.9786, norm:0.7955, tok/sec: 99749.92, flops:87.35, batch-reuse:1
@ 12747 train 3.8443 , allloss: 3.8541, dt: 1277.68ms, fracRes: 0.5941, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6043, norm(y): 0.9784, norm:0.7318, tok/sec: 102585.91, flops:89.83, batch-reuse:1
@ 12748 train 3.8105 , allloss: 3.8208, dt: 1296.70ms, fracRes: 0.5941, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6039, norm(y): 0.9785, norm:0.8385, tok/sec: 101081.00, flops:88.52, batch-reuse:1
@ 12749 train 3.8354 , allloss: 3.8454, dt: 1288.80ms, fracRes: 0.5940, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6022, norm(y): 0.9784, norm:0.7742, tok/sec: 101700.66, flops:89.06, batch-reuse:1
@ 12750 train 3.9188 , allloss: 3.9293, dt: 1282.53ms, fracRes: 0.5949, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6099, norm(y): 0.9784, norm:0.9610, tok/sec: 102198.30, flops:89.49, batch-reuse:1
@ 12751 train 3.7654 , allloss: 3.7753, dt: 1275.22ms, fracRes: 0.5934, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6050, norm(y): 0.9784, norm:0.8003, tok/sec: 102783.49, flops:90.01, batch-reuse:1
@ 12752 train 3.9234 , allloss: 3.9333, dt: 1274.19ms, fracRes: 0.5932, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6047, norm(y): 0.9784, norm:0.7611, tok/sec: 102867.00, flops:90.08, batch-reuse:1
@ 12753 train 3.9030 , allloss: 3.9130, dt: 1256.36ms, fracRes: 0.5937, norm(attn): 0.1699, norm(output): 0.2637, norm(x): 0.6021, norm(y): 0.9786, norm:0.8051, tok/sec: 104326.78, flops:91.36, batch-reuse:1
@ 12754 train 3.8831 , allloss: 3.8935, dt: 1297.62ms, fracRes: 0.5929, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6020, norm(y): 0.9785, norm:0.7563, tok/sec: 101009.83, flops:88.45, batch-reuse:1
@ 12755 train 3.9020 , allloss: 3.9123, dt: 1320.90ms, fracRes: 0.5933, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6007, norm(y): 0.9786, norm:0.7308, tok/sec: 99229.66, flops:86.89, batch-reuse:1
@ 12756 train 3.8230 , allloss: 3.8330, dt: 1307.52ms, fracRes: 0.5932, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6015, norm(y): 0.9787, norm:0.7974, tok/sec: 100244.96, flops:87.78, batch-reuse:1
@ 12757 train 3.7843 , allloss: 3.7950, dt: 1267.45ms, fracRes: 0.5943, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6017, norm(y): 0.9788, norm:0.7966, tok/sec: 103414.15, flops:90.56, batch-reuse:1
@ 12758 train 3.8262 , allloss: 3.8362, dt: 1272.01ms, fracRes: 0.5940, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5957, norm(y): 0.9784, norm:0.7620, tok/sec: 103042.88, flops:90.23, batch-reuse:1
@ 12759 train 3.8433 , allloss: 3.8531, dt: 1264.36ms, fracRes: 0.5939, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5976, norm(y): 0.9784, norm:0.7310, tok/sec: 103667.05, flops:90.78, batch-reuse:1
@ 12760 train 3.4462 , allloss: 3.4588, dt: 1250.27ms, fracRes: 0.5953, norm(attn): 0.1768, norm(output): 0.2695, norm(x): 0.6235, norm(y): 0.9795, norm:1.8285, tok/sec: 104834.98, flops:91.80, batch-reuse:1
@ 12761 train 3.9030 , allloss: 3.9130, dt: 1253.31ms, fracRes: 0.5938, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6045, norm(y): 0.9785, norm:1.1285, tok/sec: 104580.85, flops:91.58, batch-reuse:1
@ 12762 train 3.9220 , allloss: 3.9318, dt: 1268.42ms, fracRes: 0.5944, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6072, norm(y): 0.9784, norm:0.8845, tok/sec: 103335.13, flops:90.49, batch-reuse:1
@ 12763 train 3.8369 , allloss: 3.8469, dt: 1293.59ms, fracRes: 0.5942, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6063, norm(y): 0.9785, norm:0.9245, tok/sec: 101323.94, flops:88.73, batch-reuse:1
@ 12764 train 3.9893 , allloss: 3.9994, dt: 1259.91ms, fracRes: 0.5933, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.5994, norm(y): 0.9787, norm:1.1022, tok/sec: 104032.48, flops:91.10, batch-reuse:1
@ 12765 train 3.9842 , allloss: 3.9946, dt: 1279.69ms, fracRes: 0.5908, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5957, norm(y): 0.9788, norm:1.3821, tok/sec: 102424.48, flops:89.69, batch-reuse:1
@ 12766 train 3.7761 , allloss: 3.7864, dt: 1273.64ms, fracRes: 0.5916, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6035, norm(y): 0.9787, norm:0.9791, tok/sec: 102911.08, flops:90.12, batch-reuse:1
@ 12767 train 3.8908 , allloss: 3.9011, dt: 1258.89ms, fracRes: 0.5933, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6081, norm(y): 0.9787, norm:0.8980, tok/sec: 104117.32, flops:91.17, batch-reuse:1
@ 12768 train 3.8289 , allloss: 3.8395, dt: 1258.24ms, fracRes: 0.5956, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6101, norm(y): 0.9789, norm:0.8423, tok/sec: 104171.01, flops:91.22, batch-reuse:1
@ 12769 train 3.8784 , allloss: 3.8888, dt: 1295.13ms, fracRes: 0.5963, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6103, norm(y): 0.9789, norm:0.8235, tok/sec: 101203.94, flops:88.62, batch-reuse:1
@ 12770 train 3.8452 , allloss: 3.8549, dt: 1286.45ms, fracRes: 0.5948, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6059, norm(y): 0.9786, norm:0.7944, tok/sec: 101886.78, flops:89.22, batch-reuse:1
@ 12771 train 3.8084 , allloss: 3.8182, dt: 1275.38ms, fracRes: 0.5938, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6098, norm(y): 0.9787, norm:0.7282, tok/sec: 102771.20, flops:90.00, batch-reuse:1
@ 12772 train 3.8274 , allloss: 3.8377, dt: 1268.13ms, fracRes: 0.5943, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6146, norm(y): 0.9788, norm:0.8516, tok/sec: 103358.27, flops:90.51, batch-reuse:1
@ 12773 train 3.8667 , allloss: 3.8767, dt: 1291.15ms, fracRes: 0.5930, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6055, norm(y): 0.9785, norm:0.7627, tok/sec: 101515.45, flops:88.90, batch-reuse:1
@ 12774 train 3.7992 , allloss: 3.8092, dt: 1271.48ms, fracRes: 0.5929, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6067, norm(y): 0.9786, norm:0.7375, tok/sec: 103086.47, flops:90.27, batch-reuse:1
@ 12775 train 3.8339 , allloss: 3.8440, dt: 1297.38ms, fracRes: 0.5931, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6120, norm(y): 0.9788, norm:0.7634, tok/sec: 101027.86, flops:88.47, batch-reuse:1
@ 12776 train 3.8137 , allloss: 3.8234, dt: 1252.18ms, fracRes: 0.5920, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6073, norm(y): 0.9783, norm:0.8582, tok/sec: 104675.46, flops:91.66, batch-reuse:1
@ 12777 train 3.8270 , allloss: 3.8370, dt: 1247.08ms, fracRes: 0.5926, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6056, norm(y): 0.9786, norm:0.7902, tok/sec: 105103.44, flops:92.04, batch-reuse:1
@ 12778 train 3.8011 , allloss: 3.8121, dt: 1270.28ms, fracRes: 0.5936, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6062, norm(y): 0.9789, norm:0.7962, tok/sec: 103183.25, flops:90.36, batch-reuse:1
@ 12779 train 3.8337 , allloss: 3.8441, dt: 1270.13ms, fracRes: 0.5936, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6062, norm(y): 0.9785, norm:0.7237, tok/sec: 103195.41, flops:90.37, batch-reuse:1
@ 12780 train 3.8231 , allloss: 3.8336, dt: 1266.14ms, fracRes: 0.5927, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6023, norm(y): 0.9783, norm:0.7191, tok/sec: 103520.92, flops:90.65, batch-reuse:1
@ 12781 train 3.7737 , allloss: 3.7843, dt: 1304.88ms, fracRes: 0.5924, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6041, norm(y): 0.9783, norm:0.9469, tok/sec: 100447.45, flops:87.96, batch-reuse:1
@ 12782 train 3.8854 , allloss: 3.8953, dt: 1283.86ms, fracRes: 0.5921, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6059, norm(y): 0.9782, norm:0.7757, tok/sec: 102092.17, flops:89.40, batch-reuse:1
@ 12783 train 3.8325 , allloss: 3.8424, dt: 1274.30ms, fracRes: 0.5923, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6068, norm(y): 0.9782, norm:0.8646, tok/sec: 102858.05, flops:90.07, batch-reuse:1
@ 12784 train 3.8479 , allloss: 3.8577, dt: 1279.41ms, fracRes: 0.5924, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6059, norm(y): 0.9782, norm:0.8009, tok/sec: 102447.33, flops:89.71, batch-reuse:1
@ 12785 train 3.8491 , allloss: 3.8597, dt: 1279.10ms, fracRes: 0.5935, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6099, norm(y): 0.9784, norm:0.7561, tok/sec: 102472.00, flops:89.73, batch-reuse:1
@ 12786 train 3.8733 , allloss: 3.8834, dt: 1257.94ms, fracRes: 0.5931, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6038, norm(y): 0.9784, norm:0.8362, tok/sec: 104195.67, flops:91.24, batch-reuse:1
@ 12787 train 3.8639 , allloss: 3.8741, dt: 1293.84ms, fracRes: 0.5943, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6060, norm(y): 0.9784, norm:0.7556, tok/sec: 101304.48, flops:88.71, batch-reuse:1
@ 12788 train 3.8094 , allloss: 3.8192, dt: 1291.26ms, fracRes: 0.5946, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6005, norm(y): 0.9785, norm:0.8007, tok/sec: 101507.26, flops:88.89, batch-reuse:1
@ 12789 train 3.8099 , allloss: 3.8199, dt: 1288.92ms, fracRes: 0.5944, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6013, norm(y): 0.9785, norm:0.8482, tok/sec: 101691.29, flops:89.05, batch-reuse:1
@ 12790 train 3.7886 , allloss: 3.7987, dt: 1304.98ms, fracRes: 0.5940, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6012, norm(y): 0.9784, norm:0.7390, tok/sec: 100439.76, flops:87.95, batch-reuse:1
@ 12791 train 3.7290 , allloss: 3.7393, dt: 1305.87ms, fracRes: 0.5939, norm(attn): 0.1729, norm(output): 0.2637, norm(x): 0.6044, norm(y): 0.9787, norm:0.7789, tok/sec: 100371.23, flops:87.89, batch-reuse:1
@ 12792 train 3.7890 , allloss: 3.7991, dt: 1285.28ms, fracRes: 0.5937, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6075, norm(y): 0.9784, norm:0.7725, tok/sec: 101979.32, flops:89.30, batch-reuse:1
@ 12793 train 3.7391 , allloss: 3.7491, dt: 1291.76ms, fracRes: 0.5935, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6045, norm(y): 0.9786, norm:0.7489, tok/sec: 101468.14, flops:88.85, batch-reuse:1
@ 12794 train 3.7756 , allloss: 3.7857, dt: 1265.32ms, fracRes: 0.5933, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6045, norm(y): 0.9786, norm:0.8038, tok/sec: 103588.22, flops:90.71, batch-reuse:1
@ 12795 train 3.7375 , allloss: 3.7473, dt: 1283.44ms, fracRes: 0.5935, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6030, norm(y): 0.9784, norm:0.7389, tok/sec: 102125.74, flops:89.43, batch-reuse:1
@ 12796 train 3.8108 , allloss: 3.8207, dt: 1271.62ms, fracRes: 0.5928, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6036, norm(y): 0.9781, norm:0.7397, tok/sec: 103074.54, flops:90.26, batch-reuse:1
@ 12797 train 3.7828 , allloss: 3.7924, dt: 1284.86ms, fracRes: 0.5927, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6001, norm(y): 0.9782, norm:0.7855, tok/sec: 102012.62, flops:89.33, batch-reuse:1
@ 12798 train 3.7540 , allloss: 3.7642, dt: 1266.21ms, fracRes: 0.5931, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6008, norm(y): 0.9783, norm:0.7152, tok/sec: 103515.56, flops:90.65, batch-reuse:1
@ 12799 train 3.8037 , allloss: 3.8140, dt: 1263.06ms, fracRes: 0.5935, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6020, norm(y): 0.9783, norm:0.7432, tok/sec: 103773.19, flops:90.87, batch-reuse:1
@ 12800 train 3.8295 , allloss: 3.8395, dt: 1247.01ms, fracRes: 0.5944, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6017, norm(y): 0.9784, norm:0.8504, tok/sec: 105108.84, flops:92.04, batch-reuse:1
@ 12801 train 3.7836 , allloss: 3.7938, dt: 1259.66ms, fracRes: 0.5939, norm(attn): 0.1729, norm(output): 0.2637, norm(x): 0.6032, norm(y): 0.9783, norm:0.7109, tok/sec: 104053.73, flops:91.12, batch-reuse:1
@ 12802 train 3.9045 , allloss: 3.9144, dt: 1257.80ms, fracRes: 0.5940, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6035, norm(y): 0.9782, norm:1.0080, tok/sec: 104207.04, flops:91.25, batch-reuse:1
@ 12803 train 3.8115 , allloss: 3.8221, dt: 1283.92ms, fracRes: 0.5931, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6026, norm(y): 0.9784, norm:1.0116, tok/sec: 102087.62, flops:89.40, batch-reuse:1
@ 12804 train 3.7154 , allloss: 3.7253, dt: 1291.77ms, fracRes: 0.5929, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6023, norm(y): 0.9784, norm:0.7440, tok/sec: 101467.09, flops:88.85, batch-reuse:1
@ 12805 train 3.7328 , allloss: 3.7428, dt: 1320.94ms, fracRes: 0.5934, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6016, norm(y): 0.9785, norm:1.0305, tok/sec: 99226.43, flops:86.89, batch-reuse:1
@ 12806 train 3.8639 , allloss: 3.8736, dt: 1319.41ms, fracRes: 0.5949, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6009, norm(y): 0.9784, norm:0.7813, tok/sec: 99341.71, flops:86.99, batch-reuse:1
@ 12807 train 3.8002 , allloss: 3.8102, dt: 1265.22ms, fracRes: 0.5948, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6019, norm(y): 0.9782, norm:0.7368, tok/sec: 103596.26, flops:90.72, batch-reuse:1
@ 12808 train 3.7057 , allloss: 3.7162, dt: 1274.64ms, fracRes: 0.5961, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6063, norm(y): 0.9784, norm:0.8985, tok/sec: 102830.67, flops:90.05, batch-reuse:1
@ 12809 train 3.7981 , allloss: 3.8084, dt: 1255.78ms, fracRes: 0.5959, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6054, norm(y): 0.9783, norm:0.7491, tok/sec: 104375.31, flops:91.40, batch-reuse:1
@ 12810 train 3.8480 , allloss: 3.8579, dt: 1255.85ms, fracRes: 0.5947, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5996, norm(y): 0.9783, norm:0.8305, tok/sec: 104369.38, flops:91.39, batch-reuse:1
@ 12811 train 3.6838 , allloss: 3.6938, dt: 1272.15ms, fracRes: 0.5939, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6024, norm(y): 0.9784, norm:0.7517, tok/sec: 103032.24, flops:90.22, batch-reuse:1
@ 12812 train 3.7717 , allloss: 3.7816, dt: 1252.90ms, fracRes: 0.5933, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6043, norm(y): 0.9782, norm:0.7935, tok/sec: 104614.86, flops:91.61, batch-reuse:1
@ 12813 train 3.8011 , allloss: 3.8111, dt: 1297.96ms, fracRes: 0.5920, norm(attn): 0.1748, norm(output): 0.2676, norm(x): 0.6079, norm(y): 0.9781, norm:0.8930, tok/sec: 100983.02, flops:88.43, batch-reuse:1
@ 12814 train 3.8365 , allloss: 3.8466, dt: 1266.65ms, fracRes: 0.5937, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6056, norm(y): 0.9785, norm:0.7977, tok/sec: 103479.08, flops:90.62, batch-reuse:1
@ 12815 train 3.7311 , allloss: 3.7407, dt: 1260.82ms, fracRes: 0.5934, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6000, norm(y): 0.9784, norm:0.7528, tok/sec: 103957.36, flops:91.03, batch-reuse:1
@ 12816 train 3.8349 , allloss: 3.8453, dt: 1261.74ms, fracRes: 0.5942, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6047, norm(y): 0.9783, norm:0.7849, tok/sec: 103881.55, flops:90.97, batch-reuse:1
@ 12817 train 3.7972 , allloss: 3.8072, dt: 1291.56ms, fracRes: 0.5944, norm(attn): 0.1729, norm(output): 0.2637, norm(x): 0.6029, norm(y): 0.9783, norm:0.7746, tok/sec: 101483.43, flops:88.87, batch-reuse:1
@ 12818 train 3.7445 , allloss: 3.7543, dt: 1261.26ms, fracRes: 0.5953, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6004, norm(y): 0.9782, norm:0.7345, tok/sec: 103921.14, flops:91.00, batch-reuse:1
@ 12819 train 3.9038 , allloss: 3.9134, dt: 1283.06ms, fracRes: 0.5947, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5993, norm(y): 0.9779, norm:0.7546, tok/sec: 102156.14, flops:89.46, batch-reuse:1
@ 12820 train 3.7311 , allloss: 3.7410, dt: 1287.85ms, fracRes: 0.5937, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6002, norm(y): 0.9782, norm:0.7347, tok/sec: 101776.08, flops:89.12, batch-reuse:1
@ 12821 train 3.7200 , allloss: 3.7300, dt: 1265.55ms, fracRes: 0.5922, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5999, norm(y): 0.9784, norm:0.6991, tok/sec: 103569.44, flops:90.69, batch-reuse:1
@ 12822 train 3.7913 , allloss: 3.8014, dt: 1265.73ms, fracRes: 0.5927, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6003, norm(y): 0.9784, norm:0.7260, tok/sec: 103554.77, flops:90.68, batch-reuse:1
@ 12823 train 3.7047 , allloss: 3.7149, dt: 1258.26ms, fracRes: 0.5928, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6038, norm(y): 0.9783, norm:0.7183, tok/sec: 104169.05, flops:91.22, batch-reuse:1
@ 12824 train 3.6774 , allloss: 3.6874, dt: 1271.17ms, fracRes: 0.5933, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6020, norm(y): 0.9782, norm:0.7020, tok/sec: 103110.97, flops:90.29, batch-reuse:1
@ 12825 train 3.7852 , allloss: 3.7952, dt: 1284.70ms, fracRes: 0.5927, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6019, norm(y): 0.9782, norm:0.7282, tok/sec: 102025.38, flops:89.34, batch-reuse:1
@ 12826 train 3.7490 , allloss: 3.7590, dt: 1269.75ms, fracRes: 0.5927, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5970, norm(y): 0.9781, norm:0.7782, tok/sec: 103226.47, flops:90.39, batch-reuse:1
@ 12827 train 3.7066 , allloss: 3.7166, dt: 1263.22ms, fracRes: 0.5932, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5946, norm(y): 0.9782, norm:0.6591, tok/sec: 103760.13, flops:90.86, batch-reuse:1
@ 12828 train 4.0967 , allloss: 4.1064, dt: 1266.09ms, fracRes: 0.5930, norm(attn): 0.1719, norm(output): 0.2598, norm(x): 0.5861, norm(y): 0.9779, norm:1.2078, tok/sec: 103525.40, flops:90.66, batch-reuse:1
@ 12829 train 3.8431 , allloss: 3.8529, dt: 1288.48ms, fracRes: 0.5932, norm(attn): 0.1709, norm(output): 0.2656, norm(x): 0.6012, norm(y): 0.9781, norm:0.8309, tok/sec: 101726.02, flops:89.08, batch-reuse:1
@ 12830 train 3.8103 , allloss: 3.8203, dt: 1277.44ms, fracRes: 0.5939, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6043, norm(y): 0.9781, norm:0.7881, tok/sec: 102605.53, flops:89.85, batch-reuse:1
@ 12831 train 3.7904 , allloss: 3.8001, dt: 1288.63ms, fracRes: 0.5936, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6029, norm(y): 0.9780, norm:0.7378, tok/sec: 101714.51, flops:89.07, batch-reuse:1
@ 12832 train 3.9003 , allloss: 3.9121, dt: 1279.13ms, fracRes: 0.5938, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6037, norm(y): 0.9781, norm:0.9049, tok/sec: 102469.73, flops:89.73, batch-reuse:1
@ 12833 train 3.7702 , allloss: 3.7805, dt: 1266.05ms, fracRes: 0.5929, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6048, norm(y): 0.9780, norm:0.8310, tok/sec: 103528.70, flops:90.66, batch-reuse:1
@ 12834 train 3.8031 , allloss: 3.8133, dt: 1298.56ms, fracRes: 0.5927, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6052, norm(y): 0.9783, norm:0.7478, tok/sec: 100936.52, flops:88.39, batch-reuse:1
@ 12835 train 3.7628 , allloss: 3.7730, dt: 1261.06ms, fracRes: 0.5923, norm(attn): 0.1748, norm(output): 0.2656, norm(x): 0.6089, norm(y): 0.9783, norm:0.8034, tok/sec: 103937.92, flops:91.02, batch-reuse:1
@ 12836 train 3.8080 , allloss: 3.8182, dt: 1250.75ms, fracRes: 0.5928, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6085, norm(y): 0.9783, norm:0.7823, tok/sec: 104794.88, flops:91.77, batch-reuse:1
@ 12837 train 3.6678 , allloss: 3.6781, dt: 1249.53ms, fracRes: 0.5940, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6067, norm(y): 0.9784, norm:0.8084, tok/sec: 104897.42, flops:91.86, batch-reuse:1
@ 12838 train 3.6481 , allloss: 3.6585, dt: 1251.14ms, fracRes: 0.5931, norm(attn): 0.1729, norm(output): 0.2637, norm(x): 0.6033, norm(y): 0.9782, norm:0.8678, tok/sec: 104762.03, flops:91.74, batch-reuse:1
@ 12839 train 3.7595 , allloss: 3.7696, dt: 1252.79ms, fracRes: 0.5927, norm(attn): 0.1729, norm(output): 0.2637, norm(x): 0.6000, norm(y): 0.9780, norm:0.8845, tok/sec: 104623.82, flops:91.62, batch-reuse:1
@ 12840 train 3.5748 , allloss: 3.5852, dt: 1262.24ms, fracRes: 0.5932, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6019, norm(y): 0.9783, norm:0.7606, tok/sec: 103841.05, flops:90.93, batch-reuse:1
@ 12841 train 3.6747 , allloss: 3.6870, dt: 1253.71ms, fracRes: 0.5933, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6029, norm(y): 0.9783, norm:0.8234, tok/sec: 104547.08, flops:91.55, batch-reuse:1
@ 12842 train 3.6618 , allloss: 3.6719, dt: 1260.13ms, fracRes: 0.5935, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6016, norm(y): 0.9782, norm:0.8702, tok/sec: 104015.03, flops:91.08, batch-reuse:1
@ 12843 train 3.7232 , allloss: 3.7334, dt: 1264.00ms, fracRes: 0.5939, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6037, norm(y): 0.9782, norm:0.8332, tok/sec: 103696.36, flops:90.81, batch-reuse:1
@ 12844 train 3.6772 , allloss: 3.6874, dt: 1283.43ms, fracRes: 0.5948, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.6031, norm(y): 0.9782, norm:0.7972, tok/sec: 102126.61, flops:89.43, batch-reuse:1
@ 12845 train 3.7452 , allloss: 3.7551, dt: 1282.73ms, fracRes: 0.5947, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6031, norm(y): 0.9779, norm:0.7670, tok/sec: 102181.70, flops:89.48, batch-reuse:1
@ 12846 train 3.6553 , allloss: 3.6653, dt: 1246.80ms, fracRes: 0.5939, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5987, norm(y): 0.9784, norm:0.8084, tok/sec: 105126.69, flops:92.06, batch-reuse:1
@ 12847 train 3.6390 , allloss: 3.6492, dt: 1256.94ms, fracRes: 0.5938, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6040, norm(y): 0.9784, norm:0.8745, tok/sec: 104278.38, flops:91.32, batch-reuse:1
@ 12848 train 3.6335 , allloss: 3.6436, dt: 1260.46ms, fracRes: 0.5931, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5989, norm(y): 0.9783, norm:0.7888, tok/sec: 103987.64, flops:91.06, batch-reuse:1
@ 12849 train 3.5928 , allloss: 3.6026, dt: 1272.37ms, fracRes: 0.5929, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5988, norm(y): 0.9782, norm:0.7800, tok/sec: 103013.96, flops:90.21, batch-reuse:1
@ 12850 train 3.6120 , allloss: 3.6220, dt: 1244.84ms, fracRes: 0.5923, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6031, norm(y): 0.9784, norm:0.7526, tok/sec: 105292.21, flops:92.20, batch-reuse:1
@ 12851 train 3.5970 , allloss: 3.6073, dt: 1263.04ms, fracRes: 0.5922, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.6037, norm(y): 0.9785, norm:0.8673, tok/sec: 103774.80, flops:90.87, batch-reuse:1
@ 12852 train 3.6091 , allloss: 3.6194, dt: 1266.29ms, fracRes: 0.5931, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.6036, norm(y): 0.9785, norm:0.7665, tok/sec: 103508.35, flops:90.64, batch-reuse:1
@ 12853 train 3.6039 , allloss: 3.6138, dt: 1284.44ms, fracRes: 0.5939, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5970, norm(y): 0.9780, norm:0.7660, tok/sec: 102046.37, flops:89.36, batch-reuse:1
@ 12854 train 3.6258 , allloss: 3.6362, dt: 1299.34ms, fracRes: 0.5950, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5977, norm(y): 0.9784, norm:0.8800, tok/sec: 100875.64, flops:88.34, batch-reuse:1
@ 12855 train 3.5395 , allloss: 3.5497, dt: 1268.56ms, fracRes: 0.5931, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6019, norm(y): 0.9783, norm:0.7921, tok/sec: 103323.17, flops:90.48, batch-reuse:1
@ 12856 train 3.5752 , allloss: 3.5854, dt: 1279.54ms, fracRes: 0.5927, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6020, norm(y): 0.9781, norm:0.7366, tok/sec: 102437.08, flops:89.70, batch-reuse:1
@ 12857 train 3.5843 , allloss: 3.5946, dt: 1258.49ms, fracRes: 0.5922, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6042, norm(y): 0.9777, norm:0.7623, tok/sec: 104150.09, flops:91.20, batch-reuse:1
@ 12858 train 3.5451 , allloss: 3.5551, dt: 1279.24ms, fracRes: 0.5920, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6026, norm(y): 0.9776, norm:0.7259, tok/sec: 102461.15, flops:89.72, batch-reuse:1
@ 12859 train 3.6053 , allloss: 3.6160, dt: 1262.42ms, fracRes: 0.5924, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6076, norm(y): 0.9779, norm:0.7854, tok/sec: 103825.79, flops:90.92, batch-reuse:1
@ 12860 train 3.5779 , allloss: 3.5882, dt: 1260.75ms, fracRes: 0.5925, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6044, norm(y): 0.9780, norm:0.7596, tok/sec: 103963.17, flops:91.04, batch-reuse:1
@ 12861 train 3.6598 , allloss: 3.6699, dt: 1293.03ms, fracRes: 0.5930, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6029, norm(y): 0.9777, norm:0.8949, tok/sec: 101368.29, flops:88.77, batch-reuse:1
@ 12862 train 3.7120 , allloss: 3.7221, dt: 1266.49ms, fracRes: 0.5940, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6054, norm(y): 0.9777, norm:0.7941, tok/sec: 103492.72, flops:90.63, batch-reuse:1
@ 12863 train 3.6661 , allloss: 3.6758, dt: 1275.04ms, fracRes: 0.5935, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6026, norm(y): 0.9778, norm:0.8154, tok/sec: 102798.33, flops:90.02, batch-reuse:1
@ 12864 train 3.5489 , allloss: 3.5595, dt: 1265.05ms, fracRes: 0.5935, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6047, norm(y): 0.9778, norm:0.8314, tok/sec: 103609.79, flops:90.73, batch-reuse:1
@ 12865 train 3.7266 , allloss: 3.7368, dt: 1264.10ms, fracRes: 0.5930, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6023, norm(y): 0.9779, norm:0.7953, tok/sec: 103688.36, flops:90.80, batch-reuse:1
@ 12866 train 3.5675 , allloss: 3.5775, dt: 1275.35ms, fracRes: 0.5920, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5997, norm(y): 0.9782, norm:0.7350, tok/sec: 102773.14, flops:90.00, batch-reuse:1
@ 12867 train 3.6841 , allloss: 3.6941, dt: 1288.29ms, fracRes: 0.5922, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6000, norm(y): 0.9779, norm:0.7309, tok/sec: 101740.86, flops:89.09, batch-reuse:1
@ 12868 train 3.6945 , allloss: 3.7046, dt: 1272.59ms, fracRes: 0.5929, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5995, norm(y): 0.9779, norm:0.7561, tok/sec: 102996.03, flops:90.19, batch-reuse:1
@ 12869 train 3.5880 , allloss: 3.5982, dt: 1276.54ms, fracRes: 0.5938, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6024, norm(y): 0.9781, norm:0.6977, tok/sec: 102677.18, flops:89.91, batch-reuse:1
@ 12870 train 3.5842 , allloss: 3.5945, dt: 1266.05ms, fracRes: 0.5931, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6044, norm(y): 0.9781, norm:0.8017, tok/sec: 103528.00, flops:90.66, batch-reuse:1
@ 12871 train 3.7768 , allloss: 3.7870, dt: 1262.84ms, fracRes: 0.5935, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6020, norm(y): 0.9782, norm:0.7899, tok/sec: 103791.18, flops:90.89, batch-reuse:1
@ 12872 train 3.7499 , allloss: 3.7601, dt: 1264.91ms, fracRes: 0.5929, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6013, norm(y): 0.9780, norm:0.7431, tok/sec: 103621.84, flops:90.74, batch-reuse:1
@ 12873 train 3.5936 , allloss: 3.6034, dt: 1288.84ms, fracRes: 0.5937, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6013, norm(y): 0.9780, norm:0.7701, tok/sec: 101697.65, flops:89.06, batch-reuse:1
@ 12874 train 3.6335 , allloss: 3.6433, dt: 1323.42ms, fracRes: 0.5926, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6009, norm(y): 0.9779, norm:0.7370, tok/sec: 99040.49, flops:86.73, batch-reuse:1
@ 12875 train 3.6170 , allloss: 3.6273, dt: 1327.09ms, fracRes: 0.5925, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6023, norm(y): 0.9782, norm:0.7350, tok/sec: 98766.70, flops:86.49, batch-reuse:1
@ 12876 train 3.5661 , allloss: 3.5763, dt: 1271.08ms, fracRes: 0.5929, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6018, norm(y): 0.9782, norm:0.8019, tok/sec: 103118.53, flops:90.30, batch-reuse:1
@ 12877 train 3.6717 , allloss: 3.6819, dt: 1292.42ms, fracRes: 0.5932, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6038, norm(y): 0.9781, norm:0.8028, tok/sec: 101416.05, flops:88.81, batch-reuse:1
@ 12878 train 3.6070 , allloss: 3.6174, dt: 1264.16ms, fracRes: 0.5943, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6067, norm(y): 0.9781, norm:0.7361, tok/sec: 103682.97, flops:90.79, batch-reuse:1
@ 12879 train 3.5477 , allloss: 3.5578, dt: 1252.24ms, fracRes: 0.5934, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6033, norm(y): 0.9780, norm:0.7933, tok/sec: 104670.39, flops:91.66, batch-reuse:1
@ 12880 train 3.6145 , allloss: 3.6245, dt: 1271.40ms, fracRes: 0.5927, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5997, norm(y): 0.9779, norm:0.8598, tok/sec: 103092.44, flops:90.28, batch-reuse:1
@ 12881 train 3.6062 , allloss: 3.6169, dt: 1260.69ms, fracRes: 0.5928, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6002, norm(y): 0.9780, norm:0.7945, tok/sec: 103968.40, flops:91.04, batch-reuse:1
@ 12882 train 3.6039 , allloss: 3.6139, dt: 1277.39ms, fracRes: 0.5930, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.5973, norm(y): 0.9780, norm:0.7140, tok/sec: 102609.15, flops:89.85, batch-reuse:1
@ 12883 train 3.6489 , allloss: 3.6589, dt: 1273.60ms, fracRes: 0.5929, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5952, norm(y): 0.9780, norm:0.7185, tok/sec: 102914.62, flops:90.12, batch-reuse:1
@ 12884 train 3.7619 , allloss: 3.7723, dt: 1267.60ms, fracRes: 0.5931, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5993, norm(y): 0.9779, norm:0.7217, tok/sec: 103402.07, flops:90.55, batch-reuse:1
@ 12885 train 3.8662 , allloss: 3.8761, dt: 1261.20ms, fracRes: 0.5924, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5961, norm(y): 0.9776, norm:0.7376, tok/sec: 103926.15, flops:91.01, batch-reuse:1
@ 12886 train 3.9945 , allloss: 4.0050, dt: 1257.67ms, fracRes: 0.5926, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6029, norm(y): 0.9777, norm:0.8086, tok/sec: 104217.81, flops:91.26, batch-reuse:1
@ 12887 train 3.9318 , allloss: 3.9422, dt: 1260.43ms, fracRes: 0.5921, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5989, norm(y): 0.9776, norm:1.0537, tok/sec: 103990.25, flops:91.06, batch-reuse:1
@ 12888 train 3.8814 , allloss: 3.8934, dt: 1268.14ms, fracRes: 0.5933, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6042, norm(y): 0.9780, norm:1.4456, tok/sec: 103357.71, flops:90.51, batch-reuse:1
@ 12889 train 3.8423 , allloss: 3.8529, dt: 1282.24ms, fracRes: 0.5922, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6002, norm(y): 0.9776, norm:0.8441, tok/sec: 102221.18, flops:89.51, batch-reuse:1
@ 12890 train 3.8928 , allloss: 3.9032, dt: 1247.04ms, fracRes: 0.5921, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6024, norm(y): 0.9776, norm:1.0166, tok/sec: 105106.57, flops:92.04, batch-reuse:1
@ 12891 train 3.9067 , allloss: 3.9167, dt: 1261.88ms, fracRes: 0.5928, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6035, norm(y): 0.9776, norm:0.8772, tok/sec: 103870.34, flops:90.96, batch-reuse:1
@ 12892 train 3.9030 , allloss: 3.9133, dt: 1272.19ms, fracRes: 0.5941, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6063, norm(y): 0.9776, norm:0.8762, tok/sec: 103028.69, flops:90.22, batch-reuse:1
@ 12893 train 3.8617 , allloss: 3.8721, dt: 1267.22ms, fracRes: 0.5926, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5987, norm(y): 0.9773, norm:0.9762, tok/sec: 103432.75, flops:90.57, batch-reuse:1
@ 12894 train 3.8711 , allloss: 3.8812, dt: 1288.18ms, fracRes: 0.5915, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5982, norm(y): 0.9776, norm:0.7493, tok/sec: 101749.95, flops:89.10, batch-reuse:1
@ 12895 train 3.8572 , allloss: 3.8679, dt: 1248.17ms, fracRes: 0.5912, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.6062, norm(y): 0.9778, norm:0.8628, tok/sec: 105011.04, flops:91.96, batch-reuse:1
@ 12896 train 3.8244 , allloss: 3.8344, dt: 1249.46ms, fracRes: 0.5915, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6016, norm(y): 0.9777, norm:0.8487, tok/sec: 104902.88, flops:91.86, batch-reuse:1
@ 12897 train 3.9193 , allloss: 3.9292, dt: 1254.87ms, fracRes: 0.5924, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5991, norm(y): 0.9777, norm:0.8446, tok/sec: 104450.86, flops:91.47, batch-reuse:1
@ 12898 train 3.8995 , allloss: 3.9096, dt: 1259.44ms, fracRes: 0.5940, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6056, norm(y): 0.9778, norm:0.8025, tok/sec: 104071.50, flops:91.13, batch-reuse:1
@ 12899 train 3.7950 , allloss: 3.8050, dt: 1264.47ms, fracRes: 0.5933, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6040, norm(y): 0.9773, norm:0.8376, tok/sec: 103657.57, flops:90.77, batch-reuse:1
@ 12900 train 3.8271 , allloss: 3.8370, dt: 1248.87ms, fracRes: 0.5940, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6015, norm(y): 0.9775, norm:0.8276, tok/sec: 104952.79, flops:91.91, batch-reuse:1
@ 12901 train 3.8987 , allloss: 3.9088, dt: 1257.66ms, fracRes: 0.5932, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6006, norm(y): 0.9773, norm:0.7908, tok/sec: 104218.70, flops:91.26, batch-reuse:1
@ 12902 train 3.8055 , allloss: 3.8155, dt: 1257.90ms, fracRes: 0.5941, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.5956, norm(y): 0.9777, norm:0.8147, tok/sec: 104198.94, flops:91.25, batch-reuse:1
@ 12903 train 3.8617 , allloss: 3.8717, dt: 1260.37ms, fracRes: 0.5934, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5972, norm(y): 0.9778, norm:0.8423, tok/sec: 103994.82, flops:91.07, batch-reuse:1
@ 12904 train 3.8919 , allloss: 3.9021, dt: 1278.76ms, fracRes: 0.5934, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6004, norm(y): 0.9777, norm:0.7636, tok/sec: 102499.20, flops:89.76, batch-reuse:1
@ 12905 train 3.8634 , allloss: 3.8735, dt: 1286.22ms, fracRes: 0.5935, norm(attn): 0.1709, norm(output): 0.2656, norm(x): 0.6021, norm(y): 0.9775, norm:0.7517, tok/sec: 101904.55, flops:89.24, batch-reuse:1
@ 12906 train 3.8126 , allloss: 3.8227, dt: 1266.74ms, fracRes: 0.5941, norm(attn): 0.1709, norm(output): 0.2656, norm(x): 0.6028, norm(y): 0.9775, norm:0.7670, tok/sec: 103472.27, flops:90.61, batch-reuse:1
@ 12907 train 3.8766 , allloss: 3.8866, dt: 1273.40ms, fracRes: 0.5938, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6024, norm(y): 0.9776, norm:0.7733, tok/sec: 102930.67, flops:90.13, batch-reuse:1
@ 12908 train 3.8002 , allloss: 3.8104, dt: 1260.22ms, fracRes: 0.5929, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6067, norm(y): 0.9775, norm:0.7481, tok/sec: 104006.98, flops:91.08, batch-reuse:1
@ 12909 train 3.7917 , allloss: 3.8020, dt: 1272.62ms, fracRes: 0.5936, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6082, norm(y): 0.9776, norm:0.8450, tok/sec: 102993.98, flops:90.19, batch-reuse:1
@ 12910 train 3.8720 , allloss: 3.8824, dt: 1273.66ms, fracRes: 0.5934, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6003, norm(y): 0.9775, norm:0.7799, tok/sec: 102910.00, flops:90.12, batch-reuse:1
@ 12911 train 3.9283 , allloss: 3.9388, dt: 1253.35ms, fracRes: 0.5927, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6005, norm(y): 0.9774, norm:0.7987, tok/sec: 104577.63, flops:91.58, batch-reuse:1
@ 12912 train 3.8292 , allloss: 3.8394, dt: 1285.09ms, fracRes: 0.5919, norm(attn): 0.1729, norm(output): 0.2637, norm(x): 0.5934, norm(y): 0.9774, norm:0.7946, tok/sec: 101994.45, flops:89.32, batch-reuse:1
@ 12913 train 3.8910 , allloss: 3.9011, dt: 1300.11ms, fracRes: 0.5914, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5917, norm(y): 0.9771, norm:0.7530, tok/sec: 100816.17, flops:88.28, batch-reuse:1
@ 12914 train 3.8049 , allloss: 3.8152, dt: 1260.18ms, fracRes: 0.5921, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5965, norm(y): 0.9774, norm:0.7560, tok/sec: 104010.83, flops:91.08, batch-reuse:1
@ 12915 train 3.9213 , allloss: 3.9320, dt: 1268.97ms, fracRes: 0.5924, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.6029, norm(y): 0.9773, norm:0.7732, tok/sec: 103290.15, flops:90.45, batch-reuse:1
@ 12916 train 3.8468 , allloss: 3.8572, dt: 1294.67ms, fracRes: 0.5937, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6043, norm(y): 0.9777, norm:0.7711, tok/sec: 101239.37, flops:88.65, batch-reuse:1
@ 12917 train 3.8798 , allloss: 3.8898, dt: 1259.79ms, fracRes: 0.5938, norm(attn): 0.1709, norm(output): 0.2656, norm(x): 0.6053, norm(y): 0.9775, norm:0.8147, tok/sec: 104042.60, flops:91.11, batch-reuse:1
@ 12918 train 3.8043 , allloss: 3.8149, dt: 1273.80ms, fracRes: 0.5949, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6063, norm(y): 0.9778, norm:0.7563, tok/sec: 102898.06, flops:90.11, batch-reuse:1
@ 12919 train 3.8389 , allloss: 3.8491, dt: 1290.01ms, fracRes: 0.5940, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6051, norm(y): 0.9773, norm:0.8085, tok/sec: 101605.64, flops:88.97, batch-reuse:1
@ 12920 train 3.7484 , allloss: 3.7588, dt: 1293.70ms, fracRes: 0.5944, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6018, norm(y): 0.9778, norm:0.7776, tok/sec: 101315.53, flops:88.72, batch-reuse:1
@ 12921 train 3.7433 , allloss: 3.7541, dt: 1260.25ms, fracRes: 0.5935, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6043, norm(y): 0.9776, norm:0.7691, tok/sec: 104004.81, flops:91.08, batch-reuse:1
@ 12922 train 3.8222 , allloss: 3.8323, dt: 1248.48ms, fracRes: 0.5921, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6000, norm(y): 0.9772, norm:0.7341, tok/sec: 104985.15, flops:91.93, batch-reuse:1
@ 12923 train 3.9303 , allloss: 3.9405, dt: 1267.97ms, fracRes: 0.5919, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6030, norm(y): 0.9771, norm:0.8558, tok/sec: 103371.23, flops:90.52, batch-reuse:1
@ 12924 train 4.0214 , allloss: 4.0319, dt: 1277.95ms, fracRes: 0.5930, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6047, norm(y): 0.9775, norm:0.9058, tok/sec: 102564.49, flops:89.81, batch-reuse:1
@ 12925 train 3.8214 , allloss: 3.8319, dt: 1251.34ms, fracRes: 0.5925, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.6042, norm(y): 0.9774, norm:0.8753, tok/sec: 104745.48, flops:91.72, batch-reuse:1
@ 12926 train 3.8696 , allloss: 3.8800, dt: 1262.24ms, fracRes: 0.5921, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6039, norm(y): 0.9772, norm:0.7831, tok/sec: 103840.95, flops:90.93, batch-reuse:1
@ 12927 train 3.8814 , allloss: 3.8918, dt: 1282.67ms, fracRes: 0.5923, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6013, norm(y): 0.9772, norm:0.8737, tok/sec: 102186.58, flops:89.48, batch-reuse:1
@ 12928 train 3.8259 , allloss: 3.8357, dt: 1263.73ms, fracRes: 0.5921, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5997, norm(y): 0.9773, norm:0.7402, tok/sec: 103718.37, flops:90.82, batch-reuse:1
@ 12929 train 3.8683 , allloss: 3.8784, dt: 1256.38ms, fracRes: 0.5923, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5997, norm(y): 0.9774, norm:0.8374, tok/sec: 104325.14, flops:91.36, batch-reuse:1
@ 12930 train 3.7780 , allloss: 3.7882, dt: 1268.68ms, fracRes: 0.5928, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6007, norm(y): 0.9775, norm:0.8361, tok/sec: 103313.48, flops:90.47, batch-reuse:1
@ 12931 train 3.8054 , allloss: 3.8154, dt: 1287.60ms, fracRes: 0.5926, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5993, norm(y): 0.9773, norm:0.7028, tok/sec: 101795.87, flops:89.14, batch-reuse:1
@ 12932 train 3.8261 , allloss: 3.8361, dt: 1266.47ms, fracRes: 0.5926, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5983, norm(y): 0.9774, norm:0.7794, tok/sec: 103493.83, flops:90.63, batch-reuse:1
@ 12933 train 3.8469 , allloss: 3.8568, dt: 1281.32ms, fracRes: 0.5930, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6007, norm(y): 0.9775, norm:0.7216, tok/sec: 102294.60, flops:89.58, batch-reuse:1
@ 12934 train 3.8265 , allloss: 3.8365, dt: 1309.12ms, fracRes: 0.5927, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6012, norm(y): 0.9775, norm:0.7422, tok/sec: 100122.50, flops:87.68, batch-reuse:1
@ 12935 train 3.7745 , allloss: 3.7844, dt: 1314.70ms, fracRes: 0.5930, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6012, norm(y): 0.9776, norm:0.8531, tok/sec: 99697.26, flops:87.30, batch-reuse:1
@ 12936 train 3.8805 , allloss: 3.8906, dt: 1312.41ms, fracRes: 0.5932, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6028, norm(y): 0.9774, norm:0.7291, tok/sec: 99871.58, flops:87.46, batch-reuse:1
@ 12937 train 3.8580 , allloss: 3.8680, dt: 1297.91ms, fracRes: 0.5934, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6012, norm(y): 0.9774, norm:0.9123, tok/sec: 100987.08, flops:88.43, batch-reuse:1
@ 12938 train 3.7655 , allloss: 3.7754, dt: 1281.69ms, fracRes: 0.5930, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5992, norm(y): 0.9772, norm:0.8354, tok/sec: 102264.82, flops:89.55, batch-reuse:1
@ 12939 train 3.9326 , allloss: 3.9427, dt: 1276.81ms, fracRes: 0.5925, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5995, norm(y): 0.9772, norm:0.8559, tok/sec: 102656.11, flops:89.89, batch-reuse:1
@ 12940 train 3.8235 , allloss: 3.8339, dt: 1253.29ms, fracRes: 0.5922, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5982, norm(y): 0.9773, norm:1.0682, tok/sec: 104582.24, flops:91.58, batch-reuse:1
@ 12941 train 4.2499 , allloss: 4.2601, dt: 1254.89ms, fracRes: 0.5925, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5979, norm(y): 0.9772, norm:0.8585, tok/sec: 104449.24, flops:91.46, batch-reuse:1
@ 12942 train 3.8519 , allloss: 3.8615, dt: 1266.47ms, fracRes: 0.5934, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5990, norm(y): 0.9772, norm:1.0708, tok/sec: 103494.28, flops:90.63, batch-reuse:1
@ 12943 train 3.8388 , allloss: 3.8488, dt: 1254.33ms, fracRes: 0.5937, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6037, norm(y): 0.9772, norm:0.8035, tok/sec: 104495.77, flops:91.51, batch-reuse:1
@ 12944 train 3.8869 , allloss: 3.8970, dt: 1262.98ms, fracRes: 0.5927, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6040, norm(y): 0.9771, norm:0.8939, tok/sec: 103779.66, flops:90.88, batch-reuse:1
@ 12945 train 3.8912 , allloss: 3.9009, dt: 1278.69ms, fracRes: 0.5920, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6021, norm(y): 0.9772, norm:0.7779, tok/sec: 102505.28, flops:89.76, batch-reuse:1
@ 12946 train 3.8493 , allloss: 3.8592, dt: 1264.59ms, fracRes: 0.5919, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6019, norm(y): 0.9773, norm:0.8159, tok/sec: 103648.02, flops:90.76, batch-reuse:1
@ 12947 train 3.7656 , allloss: 3.7759, dt: 1277.51ms, fracRes: 0.5927, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6006, norm(y): 0.9775, norm:0.7736, tok/sec: 102599.25, flops:89.84, batch-reuse:1
@ 12948 train 3.8313 , allloss: 3.8414, dt: 1277.97ms, fracRes: 0.5915, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5988, norm(y): 0.9774, norm:0.9003, tok/sec: 102562.52, flops:89.81, batch-reuse:1
@ 12949 train 3.8616 , allloss: 3.8718, dt: 1272.74ms, fracRes: 0.5923, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6002, norm(y): 0.9775, norm:0.9585, tok/sec: 102984.28, flops:90.18, batch-reuse:1
@ 12950 train 3.7973 , allloss: 3.8071, dt: 1295.81ms, fracRes: 0.5921, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5971, norm(y): 0.9774, norm:0.7541, tok/sec: 101150.71, flops:88.58, batch-reuse:1
@ 12951 train 3.8837 , allloss: 3.8937, dt: 1315.37ms, fracRes: 0.5930, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5965, norm(y): 0.9775, norm:0.9112, tok/sec: 99646.23, flops:87.26, batch-reuse:1
@ 12952 train 3.8460 , allloss: 3.8562, dt: 1315.26ms, fracRes: 0.5938, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5966, norm(y): 0.9776, norm:0.8263, tok/sec: 99655.08, flops:87.27, batch-reuse:1
@ 12953 train 3.8368 , allloss: 3.8467, dt: 1300.53ms, fracRes: 0.5938, norm(attn): 0.1729, norm(output): 0.2637, norm(x): 0.5964, norm(y): 0.9774, norm:0.7662, tok/sec: 100783.77, flops:88.25, batch-reuse:1
@ 12954 train 3.8557 , allloss: 3.8655, dt: 1288.59ms, fracRes: 0.5942, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5977, norm(y): 0.9770, norm:0.7510, tok/sec: 101717.05, flops:89.07, batch-reuse:1
@ 12955 train 3.7943 , allloss: 3.8038, dt: 1273.50ms, fracRes: 0.5941, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5995, norm(y): 0.9771, norm:0.6840, tok/sec: 102922.85, flops:90.13, batch-reuse:1
@ 12956 train 3.9045 , allloss: 3.9145, dt: 1274.95ms, fracRes: 0.5942, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6036, norm(y): 0.9771, norm:0.7814, tok/sec: 102805.67, flops:90.03, batch-reuse:1
@ 12957 train 3.8836 , allloss: 3.8936, dt: 1265.04ms, fracRes: 0.5944, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6030, norm(y): 0.9774, norm:0.7466, tok/sec: 103611.17, flops:90.73, batch-reuse:1
@ 12958 train 3.8745 , allloss: 3.8844, dt: 1286.04ms, fracRes: 0.5932, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6031, norm(y): 0.9770, norm:0.7714, tok/sec: 101919.14, flops:89.25, batch-reuse:1
@ 12959 train 3.8962 , allloss: 3.9058, dt: 1251.32ms, fracRes: 0.5926, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6007, norm(y): 0.9770, norm:0.8036, tok/sec: 104747.20, flops:91.73, batch-reuse:1
@ 12960 train 3.8601 , allloss: 3.8700, dt: 1261.16ms, fracRes: 0.5921, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6019, norm(y): 0.9772, norm:0.7315, tok/sec: 103930.12, flops:91.01, batch-reuse:1
@ 12961 train 3.9860 , allloss: 3.9961, dt: 1252.66ms, fracRes: 0.5914, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5998, norm(y): 0.9772, norm:0.8447, tok/sec: 104635.11, flops:91.63, batch-reuse:1
@ 12962 train 3.8438 , allloss: 3.8540, dt: 1270.09ms, fracRes: 0.5919, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6026, norm(y): 0.9772, norm:0.7429, tok/sec: 103199.06, flops:90.37, batch-reuse:1
@ 12963 train 3.8217 , allloss: 3.8318, dt: 1285.11ms, fracRes: 0.5928, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5976, norm(y): 0.9772, norm:0.8186, tok/sec: 101993.07, flops:89.31, batch-reuse:1
@ 12964 train 3.8273 , allloss: 3.8373, dt: 1279.80ms, fracRes: 0.5933, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5983, norm(y): 0.9773, norm:0.7358, tok/sec: 102416.27, flops:89.68, batch-reuse:1
@ 12965 train 3.8244 , allloss: 3.8343, dt: 1268.41ms, fracRes: 0.5929, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5977, norm(y): 0.9772, norm:0.6818, tok/sec: 103335.50, flops:90.49, batch-reuse:1
@ 12966 train 3.8601 , allloss: 3.8703, dt: 1287.33ms, fracRes: 0.5934, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6012, norm(y): 0.9773, norm:0.7693, tok/sec: 101817.27, flops:89.16, batch-reuse:1
@ 12967 train 4.4564 , allloss: 4.4661, dt: 1273.61ms, fracRes: 0.5903, norm(attn): 0.1748, norm(output): 0.2695, norm(x): 0.6047, norm(y): 0.9765, norm:2.0228, tok/sec: 102914.12, flops:90.12, batch-reuse:1
@ 12968 train 4.0654 , allloss: 4.0757, dt: 1252.75ms, fracRes: 0.5937, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6057, norm(y): 0.9769, norm:1.0909, tok/sec: 104627.15, flops:91.62, batch-reuse:1
@ 12969 train 3.8896 , allloss: 3.8996, dt: 1543.72ms, fracRes: 0.5935, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6006, norm(y): 0.9772, norm:1.0271, tok/sec: 84906.47, flops:74.35, batch-reuse:1
@ 12970 train 3.9317 , allloss: 3.9421, dt: 1307.37ms, fracRes: 0.5922, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6027, norm(y): 0.9772, norm:0.9041, tok/sec: 100255.86, flops:87.79, batch-reuse:1
@ 12971 train 3.7771 , allloss: 3.7880, dt: 1279.09ms, fracRes: 0.5916, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.6055, norm(y): 0.9772, norm:0.9356, tok/sec: 102473.01, flops:89.73, batch-reuse:1
@ 12972 train 3.8460 , allloss: 3.8563, dt: 1278.09ms, fracRes: 0.5915, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.6040, norm(y): 0.9769, norm:0.8779, tok/sec: 102553.26, flops:89.80, batch-reuse:1
@ 12973 train 3.8054 , allloss: 3.8156, dt: 1268.54ms, fracRes: 0.5930, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6074, norm(y): 0.9770, norm:0.9167, tok/sec: 103325.03, flops:90.48, batch-reuse:1
@ 12974 train 3.9206 , allloss: 3.9307, dt: 1280.06ms, fracRes: 0.5928, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6060, norm(y): 0.9771, norm:0.9300, tok/sec: 102395.23, flops:89.67, batch-reuse:1
@ 12975 train 3.7676 , allloss: 3.7776, dt: 1263.63ms, fracRes: 0.5928, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.6094, norm(y): 0.9774, norm:0.8084, tok/sec: 103726.51, flops:90.83, batch-reuse:1
@ 12976 train 3.8412 , allloss: 3.8512, dt: 1271.19ms, fracRes: 0.5928, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6089, norm(y): 0.9773, norm:0.7901, tok/sec: 103109.32, flops:90.29, batch-reuse:1
@ 12977 train 3.7884 , allloss: 3.7984, dt: 1283.65ms, fracRes: 0.5934, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6069, norm(y): 0.9773, norm:0.7807, tok/sec: 102109.10, flops:89.42, batch-reuse:1
@ 12978 train 3.8367 , allloss: 3.8463, dt: 1267.32ms, fracRes: 0.5940, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6063, norm(y): 0.9772, norm:0.7088, tok/sec: 103424.75, flops:90.57, batch-reuse:1
@ 12979 train 3.7932 , allloss: 3.8030, dt: 1277.21ms, fracRes: 0.5942, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6066, norm(y): 0.9771, norm:0.7539, tok/sec: 102623.30, flops:89.87, batch-reuse:1
@ 12980 train 3.8077 , allloss: 3.8177, dt: 1243.44ms, fracRes: 0.5941, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6077, norm(y): 0.9770, norm:0.7395, tok/sec: 105410.99, flops:92.31, batch-reuse:1
@ 12981 train 3.7409 , allloss: 3.7514, dt: 1262.10ms, fracRes: 0.5928, norm(attn): 0.1738, norm(output): 0.2676, norm(x): 0.6099, norm(y): 0.9769, norm:0.8383, tok/sec: 103852.66, flops:90.94, batch-reuse:1
@ 12982 train 3.7672 , allloss: 3.7772, dt: 1284.35ms, fracRes: 0.5939, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6064, norm(y): 0.9770, norm:0.7473, tok/sec: 102053.20, flops:89.37, batch-reuse:1
@ 12983 train 3.7684 , allloss: 3.7785, dt: 1248.02ms, fracRes: 0.5948, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6041, norm(y): 0.9771, norm:0.7206, tok/sec: 105023.82, flops:91.97, batch-reuse:1
@ 12984 train 3.7203 , allloss: 3.7302, dt: 1290.02ms, fracRes: 0.5944, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6038, norm(y): 0.9771, norm:0.7547, tok/sec: 101604.97, flops:88.97, batch-reuse:1
@ 12985 train 3.8141 , allloss: 3.8241, dt: 1309.57ms, fracRes: 0.5941, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6031, norm(y): 0.9772, norm:0.7267, tok/sec: 100088.12, flops:87.65, batch-reuse:1
@ 12986 train 3.7771 , allloss: 3.7874, dt: 1313.56ms, fracRes: 0.5931, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6023, norm(y): 0.9774, norm:0.7708, tok/sec: 99783.90, flops:87.38, batch-reuse:1
@ 12987 train 3.8067 , allloss: 3.8163, dt: 1319.51ms, fracRes: 0.5916, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6010, norm(y): 0.9772, norm:0.7004, tok/sec: 99334.11, flops:86.99, batch-reuse:1
@ 12988 train 3.6446 , allloss: 3.6546, dt: 1311.55ms, fracRes: 0.5919, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6001, norm(y): 0.9776, norm:0.8362, tok/sec: 99936.81, flops:87.51, batch-reuse:1
@ 12989 train 3.8066 , allloss: 3.8168, dt: 1278.59ms, fracRes: 0.5925, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6014, norm(y): 0.9774, norm:0.8944, tok/sec: 102512.77, flops:89.77, batch-reuse:1
@ 12990 train 3.7484 , allloss: 3.7587, dt: 1261.63ms, fracRes: 0.5933, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6040, norm(y): 0.9774, norm:0.7608, tok/sec: 103890.74, flops:90.98, batch-reuse:1
@ 12991 train 3.6953 , allloss: 3.7055, dt: 1256.69ms, fracRes: 0.5948, norm(attn): 0.1709, norm(output): 0.2656, norm(x): 0.6030, norm(y): 0.9776, norm:0.7315, tok/sec: 104299.41, flops:91.33, batch-reuse:1
@ 12992 train 3.8499 , allloss: 3.8600, dt: 1241.77ms, fracRes: 0.5938, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6011, norm(y): 0.9771, norm:0.7227, tok/sec: 105552.64, flops:92.43, batch-reuse:1
@ 12993 train 3.7936 , allloss: 3.8036, dt: 1269.09ms, fracRes: 0.5940, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6000, norm(y): 0.9774, norm:0.7414, tok/sec: 103280.50, flops:90.44, batch-reuse:1
@ 12994 train 3.7948 , allloss: 3.8046, dt: 1269.35ms, fracRes: 0.5942, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6012, norm(y): 0.9773, norm:0.6897, tok/sec: 103258.76, flops:90.42, batch-reuse:1
@ 12995 train 3.7344 , allloss: 3.7438, dt: 1272.66ms, fracRes: 0.5943, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6008, norm(y): 0.9772, norm:0.7444, tok/sec: 102990.76, flops:90.19, batch-reuse:1
@ 12996 train 3.8242 , allloss: 3.8339, dt: 1258.28ms, fracRes: 0.5939, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6025, norm(y): 0.9771, norm:0.7001, tok/sec: 104168.01, flops:91.22, batch-reuse:1
@ 12997 train 3.6542 , allloss: 3.6643, dt: 1253.46ms, fracRes: 0.5926, norm(attn): 0.1748, norm(output): 0.2656, norm(x): 0.6080, norm(y): 0.9775, norm:0.8365, tok/sec: 104568.36, flops:91.57, batch-reuse:1
@ 12998 train 3.7369 , allloss: 3.7475, dt: 1255.75ms, fracRes: 0.5936, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6075, norm(y): 0.9774, norm:1.9303, tok/sec: 104377.39, flops:91.40, batch-reuse:1
@ 12999 train 3.7701 , allloss: 3.7801, dt: 1261.75ms, fracRes: 0.5925, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6023, norm(y): 0.9773, norm:0.7724, tok/sec: 103881.16, flops:90.97, batch-reuse:1
@ 13000 train 3.8178 , allloss: 3.8277, dt: 1257.97ms, fracRes: 0.5931, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6047, norm(y): 0.9771, norm:0.9272, tok/sec: 104193.18, flops:91.24, batch-reuse:1
@ 13001 train 3.8215 , allloss: 3.8311, dt: 1255.13ms, fracRes: 0.5928, norm(attn): 0.1719, norm(output): 0.2676, norm(x): 0.6070, norm(y): 0.9768, norm:0.9019, tok/sec: 104429.42, flops:91.45, batch-reuse:1
@ 13002 train 3.7771 , allloss: 3.7866, dt: 1261.81ms, fracRes: 0.5929, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.6060, norm(y): 0.9768, norm:0.7479, tok/sec: 103875.86, flops:90.96, batch-reuse:1
@ 13003 train 3.7935 , allloss: 3.8035, dt: 1261.07ms, fracRes: 0.5930, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.6107, norm(y): 0.9768, norm:0.8876, tok/sec: 103937.11, flops:91.02, batch-reuse:1
@ 13004 train 3.7877 , allloss: 3.7974, dt: 1244.75ms, fracRes: 0.5929, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6091, norm(y): 0.9769, norm:0.7116, tok/sec: 105300.00, flops:92.21, batch-reuse:1
@ 13005 train 3.7010 , allloss: 3.7111, dt: 1254.99ms, fracRes: 0.5922, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6077, norm(y): 0.9770, norm:0.8988, tok/sec: 104440.62, flops:91.46, batch-reuse:1
@ 13006 train 3.7661 , allloss: 3.7761, dt: 1286.76ms, fracRes: 0.5927, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6033, norm(y): 0.9768, norm:0.9221, tok/sec: 101862.20, flops:89.20, batch-reuse:1
@ 13007 train 3.7124 , allloss: 3.7222, dt: 1249.10ms, fracRes: 0.5928, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.6030, norm(y): 0.9770, norm:0.7880, tok/sec: 104933.29, flops:91.89, batch-reuse:1
@ 13008 train 3.7947 , allloss: 3.8047, dt: 1270.75ms, fracRes: 0.5941, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5988, norm(y): 0.9772, norm:1.2213, tok/sec: 103145.71, flops:90.32, batch-reuse:1
@ 13009 train 3.7325 , allloss: 3.7425, dt: 1269.02ms, fracRes: 0.5947, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.6009, norm(y): 0.9773, norm:0.7449, tok/sec: 103285.80, flops:90.45, batch-reuse:1
@ 13010 train 3.7739 , allloss: 3.7841, dt: 1263.87ms, fracRes: 0.5935, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6010, norm(y): 0.9770, norm:0.9081, tok/sec: 103706.77, flops:90.81, batch-reuse:1
@ 13011 train 3.7527 , allloss: 3.7626, dt: 1265.83ms, fracRes: 0.5930, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5974, norm(y): 0.9770, norm:0.7422, tok/sec: 103546.56, flops:90.67, batch-reuse:1
@ 13012 train 3.8508 , allloss: 3.8605, dt: 1283.46ms, fracRes: 0.5924, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5986, norm(y): 0.9769, norm:0.9708, tok/sec: 102124.05, flops:89.43, batch-reuse:1
@ 13013 train 3.7253 , allloss: 3.7350, dt: 1266.13ms, fracRes: 0.5923, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6009, norm(y): 0.9771, norm:0.9351, tok/sec: 103522.07, flops:90.65, batch-reuse:1
@ 13014 train 3.8910 , allloss: 3.9007, dt: 1280.38ms, fracRes: 0.5931, norm(attn): 0.1709, norm(output): 0.2656, norm(x): 0.6016, norm(y): 0.9766, norm:0.7200, tok/sec: 102369.84, flops:89.64, batch-reuse:1
@ 13015 train 3.7299 , allloss: 3.7397, dt: 1265.50ms, fracRes: 0.5930, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6008, norm(y): 0.9767, norm:0.8973, tok/sec: 103573.36, flops:90.70, batch-reuse:1
@ 13016 train 3.7459 , allloss: 3.7556, dt: 1257.94ms, fracRes: 0.5930, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6014, norm(y): 0.9768, norm:0.6915, tok/sec: 104195.65, flops:91.24, batch-reuse:1
@ 13017 train 3.7782 , allloss: 3.7885, dt: 1287.92ms, fracRes: 0.5934, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.6018, norm(y): 0.9769, norm:0.8839, tok/sec: 101769.94, flops:89.12, batch-reuse:1
@ 13018 train 3.7713 , allloss: 3.7809, dt: 1289.55ms, fracRes: 0.5927, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6040, norm(y): 0.9768, norm:0.7015, tok/sec: 101641.84, flops:89.01, batch-reuse:1
@ 13019 train 3.8041 , allloss: 3.8135, dt: 1286.91ms, fracRes: 0.5932, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6061, norm(y): 0.9768, norm:0.8241, tok/sec: 101849.84, flops:89.19, batch-reuse:1
@ 13020 train 3.7040 , allloss: 3.7135, dt: 1266.25ms, fracRes: 0.5927, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.6075, norm(y): 0.9769, norm:0.7358, tok/sec: 103512.15, flops:90.64, batch-reuse:1
@ 13021 train 3.6668 , allloss: 3.6769, dt: 1284.82ms, fracRes: 0.5937, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6061, norm(y): 0.9770, norm:0.7127, tok/sec: 102015.61, flops:89.33, batch-reuse:1
@ 13022 train 3.6112 , allloss: 3.6212, dt: 1284.85ms, fracRes: 0.5933, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6024, norm(y): 0.9772, norm:0.7176, tok/sec: 102013.38, flops:89.33, batch-reuse:1
@ 13023 train 3.6740 , allloss: 3.6837, dt: 1275.36ms, fracRes: 0.5922, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6010, norm(y): 0.9769, norm:0.7624, tok/sec: 102772.31, flops:90.00, batch-reuse:1
@ 13024 train 3.6767 , allloss: 3.6865, dt: 1263.44ms, fracRes: 0.5930, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6000, norm(y): 0.9768, norm:0.7034, tok/sec: 103742.45, flops:90.85, batch-reuse:1
@ 13025 train 3.6735 , allloss: 3.6836, dt: 1268.09ms, fracRes: 0.5935, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6009, norm(y): 0.9769, norm:0.7739, tok/sec: 103362.04, flops:90.51, batch-reuse:1
@ 13026 train 3.7825 , allloss: 3.7925, dt: 1254.10ms, fracRes: 0.5938, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5988, norm(y): 0.9769, norm:0.7575, tok/sec: 104515.08, flops:91.52, batch-reuse:1
@ 13027 train 3.6306 , allloss: 3.6404, dt: 1284.25ms, fracRes: 0.5929, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5971, norm(y): 0.9768, norm:0.7696, tok/sec: 102061.31, flops:89.37, batch-reuse:1
@ 13028 train 3.6248 , allloss: 3.6345, dt: 1288.37ms, fracRes: 0.5927, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5957, norm(y): 0.9769, norm:0.7556, tok/sec: 101734.95, flops:89.09, batch-reuse:1
@ 13029 train 3.5256 , allloss: 3.5361, dt: 1261.44ms, fracRes: 0.5927, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6021, norm(y): 0.9770, norm:0.7542, tok/sec: 103906.56, flops:90.99, batch-reuse:1
@ 13030 train 3.5635 , allloss: 3.5733, dt: 1264.81ms, fracRes: 0.5919, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5997, norm(y): 0.9770, norm:0.7920, tok/sec: 103629.53, flops:90.75, batch-reuse:1
@ 13031 train 3.6561 , allloss: 3.6659, dt: 1262.80ms, fracRes: 0.5926, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6001, norm(y): 0.9769, norm:0.7337, tok/sec: 103795.02, flops:90.89, batch-reuse:1
@ 13032 train 3.4801 , allloss: 3.4901, dt: 1283.12ms, fracRes: 0.5934, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5992, norm(y): 0.9771, norm:0.7784, tok/sec: 102151.01, flops:89.45, batch-reuse:1
@ 13033 train 3.6598 , allloss: 3.6695, dt: 1263.01ms, fracRes: 0.5933, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5980, norm(y): 0.9769, norm:0.7904, tok/sec: 103777.54, flops:90.88, batch-reuse:1
@ 13034 train 3.5480 , allloss: 3.5579, dt: 1285.70ms, fracRes: 0.5932, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6010, norm(y): 0.9773, norm:0.7395, tok/sec: 101945.79, flops:89.27, batch-reuse:1
@ 13035 train 3.5570 , allloss: 3.5669, dt: 1258.70ms, fracRes: 0.5930, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5967, norm(y): 0.9771, norm:0.7788, tok/sec: 104133.00, flops:91.19, batch-reuse:1
@ 13036 train 3.6628 , allloss: 3.6730, dt: 1295.72ms, fracRes: 0.5928, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5976, norm(y): 0.9768, norm:0.7277, tok/sec: 101157.61, flops:88.58, batch-reuse:1
@ 13037 train 3.7304 , allloss: 3.7402, dt: 1311.35ms, fracRes: 0.5927, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6010, norm(y): 0.9768, norm:0.8379, tok/sec: 99951.97, flops:87.53, batch-reuse:1
@ 13038 train 3.6070 , allloss: 3.6167, dt: 1294.88ms, fracRes: 0.5926, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6038, norm(y): 0.9768, norm:0.7998, tok/sec: 101222.95, flops:88.64, batch-reuse:1
@ 13039 train 3.6294 , allloss: 3.6391, dt: 1277.70ms, fracRes: 0.5921, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6041, norm(y): 0.9768, norm:0.7414, tok/sec: 102584.45, flops:89.83, batch-reuse:1
@ 13040 train 3.7006 , allloss: 3.7107, dt: 1286.20ms, fracRes: 0.5921, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.6028, norm(y): 0.9769, norm:0.8379, tok/sec: 101906.16, flops:89.24, batch-reuse:1
@ 13041 train 3.5318 , allloss: 3.5411, dt: 1285.80ms, fracRes: 0.5922, norm(attn): 0.1729, norm(output): 0.2637, norm(x): 0.5930, norm(y): 0.9774, norm:1.2000, tok/sec: 101938.00, flops:89.27, batch-reuse:1
@ 13042 train 3.6735 , allloss: 3.6833, dt: 1308.66ms, fracRes: 0.5925, norm(attn): 0.1729, norm(output): 0.2637, norm(x): 0.6002, norm(y): 0.9768, norm:0.9103, tok/sec: 100157.39, flops:87.71, batch-reuse:1
@ 13043 train 3.5650 , allloss: 3.5744, dt: 1292.42ms, fracRes: 0.5928, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6007, norm(y): 0.9771, norm:0.7452, tok/sec: 101415.62, flops:88.81, batch-reuse:1
@ 13044 train 3.6650 , allloss: 3.6750, dt: 1270.13ms, fracRes: 0.5925, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6043, norm(y): 0.9771, norm:0.9071, tok/sec: 103195.90, flops:90.37, batch-reuse:1
@ 13045 train 3.5404 , allloss: 3.5510, dt: 1273.57ms, fracRes: 0.5935, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6051, norm(y): 0.9774, norm:0.9909, tok/sec: 102917.24, flops:90.12, batch-reuse:1
@ 13046 train 3.5769 , allloss: 3.5870, dt: 1294.01ms, fracRes: 0.5928, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5985, norm(y): 0.9770, norm:0.8231, tok/sec: 101291.51, flops:88.70, batch-reuse:1
@ 13047 train 3.5502 , allloss: 3.5602, dt: 1275.84ms, fracRes: 0.5932, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5987, norm(y): 0.9770, norm:0.7184, tok/sec: 102734.27, flops:89.96, batch-reuse:1
@ 13048 train 3.6146 , allloss: 3.6244, dt: 1259.12ms, fracRes: 0.5931, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5980, norm(y): 0.9767, norm:0.7969, tok/sec: 104098.46, flops:91.16, batch-reuse:1
@ 13049 train 3.6119 , allloss: 3.6222, dt: 1265.14ms, fracRes: 0.5941, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6041, norm(y): 0.9768, norm:0.8646, tok/sec: 103603.11, flops:90.72, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9727, 0.0264, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7969, 0.0420, 0.1631, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8438, 0.0210, 0.1216, 0.0121, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8750, 0.0242, 0.0325, 0.0272, 0.0398, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8789, 0.0508, 0.0136, 0.0045, 0.0066, 0.0444, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8008, 0.0388, 0.0145, 0.0147, 0.0183, 0.0586, 0.0547, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2617, 0.0815, 0.2734, 0.0464, 0.0908, 0.0623, 0.0659, 0.1177, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8320, 0.0176, 0.0264, 0.0048, 0.0079, 0.0109, 0.0569, 0.0315, 0.0109, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6094, 0.0144, 0.1187, 0.0089, 0.0189, 0.0073, 0.0247, 0.1099, 0.0123, 0.0762, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7734, 0.0197, 0.0312, 0.0093, 0.0109, 0.0055, 0.0214, 0.0221, 0.0223, 0.0208, 0.0640, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2236, 0.0466, 0.0825, 0.0403, 0.0747, 0.0325, 0.0356, 0.0623, 0.0820, 0.1089, 0.1689, 0.0422, 0.0000, 0.0000, 0.0000],
        [0.1157, 0.0830, 0.1338, 0.0432, 0.0474, 0.0284, 0.0303, 0.0762, 0.0117, 0.1445, 0.0664, 0.0962, 0.1226, 0.0000, 0.0000],
        [0.6055, 0.0302, 0.0342, 0.0062, 0.0117, 0.0140, 0.0569, 0.0332, 0.0156, 0.0148, 0.0254, 0.0175, 0.1240, 0.0124, 0.0000],
        [0.3750, 0.0688, 0.0474, 0.0371, 0.0361, 0.0090, 0.0154, 0.0493, 0.0227, 0.0339, 0.0508, 0.0410, 0.1357, 0.0217, 0.0544]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0015, -0.0006, -0.0107,  ..., -0.0299,  0.0149, -0.0036],
        [-0.0378,  0.0034, -0.0059,  ...,  0.0033,  0.0051,  0.0101],
        [ 0.0387,  0.0357, -0.0027,  ..., -0.0165,  0.0293, -0.0118],
        ...,
        [ 0.0290,  0.0170,  0.0008,  ..., -0.0307,  0.0103,  0.0167],
        [-0.0439,  0.0051, -0.0187,  ...,  0.0079, -0.0023, -0.0132],
        [-0.0201, -0.0069, -0.0204,  ...,  0.0135, -0.0399, -0.0022]], device='cuda:0', requires_grad=True)
K: tensor([     1.3359,     -0.0698,      0.6289,      0.4023,      1.1172,      0.3457,     -0.3281,     -1.0156,     -0.7266,     -0.1055,     -0.4297,     -1.0625,     -0.2832,     -0.9805,      0.0947,     -0.5625,      0.7969,      0.4336,     -1.5469,      0.4414,      1.7656,      0.8242,
            -0.8438,      1.0156,     -0.4395,     -0.0000,     -0.7344,      1.2578,      0.2002,      0.1475,      1.5312,      0.8633,      1.1172,      0.7656,      0.4180,      1.7734,     -2.0469,      0.7305,     -0.4355,     -2.0625,      0.5586,      0.5078,      0.7109,      1.7578,
            -0.1934,      0.2168,     -0.0552,      0.1064,      1.3750,     -0.3125,      0.2490,      0.6914,     -1.2422,     -0.1797,      1.4375,     -0.2734,     -0.8047,      0.8359,     -0.1436,     -0.6602,      1.3203,     -0.8086,      0.5938,     -0.2197], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[-0.0398,  0.0067, -0.0045,  ...,  0.0056, -0.0063, -0.0038],
        [ 0.0142, -0.0102,  0.0135,  ..., -0.0003,  0.0530,  0.0208],
        [-0.0353,  0.0367,  0.0047,  ..., -0.0227, -0.0456, -0.0428],
        ...,
        [ 0.0194,  0.0026,  0.0349,  ...,  0.0223,  0.0104,  0.0250],
        [-0.0069, -0.0073,  0.0196,  ...,  0.0262,  0.0156,  0.0029],
        [-0.0199, -0.0075,  0.0524,  ..., -0.0270,  0.0293,  0.0017]], device='cuda:0', requires_grad=True)
Q: tensor([-0.6133,  0.1934, -1.5312, -0.1069, -0.0947, -0.0845, -1.7578, -0.2139,  0.3477,  0.4609, -0.7383, -0.0610, -0.0981,  0.0330, -0.3730,  0.1152,  0.4629, -1.1641,  0.8867,  0.4082, -0.9766, -0.0430,  1.3438,  0.4316,  0.9883,  0.3438, -0.8711, -2.1406,  0.1104,  0.3730,  0.3438,  0.1582,
        -0.8047, -1.2656, -0.0249, -0.0898,  1.1250,  0.5859, -0.0022,  1.1484,  1.4375,  0.1221,  0.4062,  0.1846, -0.4980,  0.6719, -1.6953,  0.5703, -0.3770,  0.3379, -1.4062, -0.5039, -0.5898, -0.8789, -0.8320,  0.1631,  0.2949, -1.2422,  0.1162, -0.3711, -1.3359, -0.2393,  0.4883,  1.3359],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -3.6094, -3.0000, -4.9375, -4.6250, -4.4062, -3.5156, -3.2031, -4.8750, -3.7812, -3.1562, -3.3594, -1.1250, -4.9375, -3.4688],
        [ 0.0000, -2.9375, -1.5859, -3.0000, -2.7188, -4.0312, -3.6406, -2.2812, -2.7656, -1.6094, -1.3516, -2.3125, -0.8867, -2.4219, -1.3672],
        [ 0.0000, -3.6875, -1.9375, -4.2500, -3.3750, -3.9688, -3.5781, -2.9062, -3.3281, -2.6562, -1.2500, -2.4688, -1.7344, -3.2031, -1.8984],
        [ 0.0000, -3.5938, -3.2969, -3.4688, -3.0938, -4.3125, -3.4531, -3.3594, -2.3281, -2.8906, -1.7734, -3.0312, -1.7109, -2.0469, -1.8047],
        [ 0.0000, -2.8438, -4.1562, -5.2812, -4.8750, -2.9844, -2.3125, -3.4375, -4.5312, -4.8438, -4.0000, -4.1250, -1.9219, -4.5938, -3.2969],
        [ 0.0000, -3.0312, -4.0000, -4.0000, -3.7812, -2.6094, -2.6875, -3.7344, -2.0469, -3.4062, -1.7422, -3.1406, -2.7031, -1.8203, -2.2188],
        [ 0.0000, -1.1641,  0.0498, -1.7266, -1.0547, -1.4297, -1.3750, -0.7969, -1.5312,  0.6211,  0.0664, -0.6719, -0.1216, -1.3047, -0.5273],
        [ 0.0000, -3.8594, -3.4531, -5.1562, -4.6562, -4.3438, -2.6875, -3.2656, -4.3438, -4.3438, -3.6562, -3.9844, -1.7188, -4.5000, -3.4062],
        [ 0.0000, -3.7344, -1.6328, -4.2188, -3.4688, -4.4375, -3.2031, -1.7109, -3.9062, -2.0781, -2.4688, -2.8906, -0.4941, -3.7188, -2.8281],
        [ 0.0000, -3.6719, -3.2031, -4.4062, -4.2500, -4.9375, -3.5938, -3.5625, -3.5469, -3.6250, -2.5000, -3.2656, -1.8828, -3.4688, -2.3594],
        [ 0.0000, -1.5625, -0.9961, -1.7109, -1.0938, -1.9297, -1.8359, -1.2812, -1.0000, -0.7188, -0.2832, -1.6641, -0.8672, -0.7500, -0.2754],
        [ 0.0000, -0.3320,  0.1465, -0.9883, -0.8906, -1.4062, -1.3438, -0.4199, -2.2969,  0.2207, -0.5586, -0.1826,  0.0583, -2.0156, -0.7930],
        [ 0.0000, -3.0000, -2.8750, -4.5938, -3.9375, -3.7656, -2.3594, -2.9062, -3.6562, -3.7188, -3.1719, -3.5469, -1.5859, -3.8906, -3.0000],
        [ 0.0000, -1.6953, -2.0625, -2.3125, -2.3438, -3.7344, -3.2031, -2.0312, -2.8125, -2.4062, -2.0000, -2.2188, -1.0156, -2.8438, -1.9297]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8932],
        [0.8721],
        [0.8537],
        [0.7373],
        [0.7507],
        [0.6888],
        [0.4246],
        [0.5865],
        [0.5772],
        [0.5018],
        [0.3855],
        [0.2395],
        [0.3746],
        [0.2984]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8320, 0.1670, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2500, 0.6953, 0.0530, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2148, 0.4961, 0.2559, 0.0342, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1226, 0.5625, 0.0713, 0.1250, 0.1201, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1187, 0.2891, 0.0454, 0.0371, 0.4160, 0.0923, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0894, 0.1377, 0.0535, 0.0334, 0.2871, 0.2441, 0.1553, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0303, 0.0693, 0.0143, 0.0120, 0.0830, 0.2061, 0.5039, 0.0830, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0674, 0.0476, 0.0113, 0.0042, 0.0564, 0.1206, 0.5156, 0.0718, 0.1060, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0059, 0.0131, 0.0056, 0.0085, 0.0282, 0.0352, 0.0408, 0.0510, 0.7812, 0.0292, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0659, 0.0208, 0.0032, 0.0030, 0.0293, 0.0391, 0.1904, 0.0077, 0.4707, 0.0361, 0.1348, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0139, 0.0106, 0.0034, 0.0017, 0.0114, 0.0244, 0.1084, 0.0615, 0.0645, 0.1221, 0.5234, 0.0544, 0.0000, 0.0000, 0.0000],
        [0.0698, 0.0028, 0.0035, 0.0021, 0.0212, 0.0229, 0.0894, 0.0205, 0.2070, 0.0596, 0.3652, 0.0737, 0.0630, 0.0000, 0.0000],
        [0.0767, 0.0107, 0.0039, 0.0012, 0.0131, 0.0337, 0.1934, 0.0168, 0.0186, 0.0500, 0.4102, 0.0289, 0.0405, 0.1021, 0.0000],
        [0.0260, 0.0069, 0.0020, 0.0012, 0.0049, 0.0098, 0.0449, 0.0126, 0.0596, 0.0217, 0.1094, 0.0713, 0.0388, 0.3887, 0.2021]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0362, -0.0271, -0.0130,  ..., -0.0133, -0.0194, -0.0015],
        [-0.0189,  0.0182, -0.0204,  ...,  0.0117, -0.0112, -0.0533],
        [ 0.0242,  0.0141,  0.0152,  ...,  0.0145,  0.0335,  0.0192],
        ...,
        [ 0.0215, -0.0226,  0.0380,  ...,  0.0268, -0.0301, -0.0113],
        [-0.0156, -0.0031,  0.0237,  ...,  0.0087,  0.0332,  0.0178],
        [ 0.0206,  0.0554,  0.0260,  ..., -0.0160,  0.0035,  0.0232]], device='cuda:0', requires_grad=True)
K: tensor([ 4.1250,  0.7109, -0.7695,  0.9336, -2.6875, -0.3965, -1.3984,  1.1016, -1.2422, -0.1865, -0.8320,  2.9219, -2.2812,  2.2812,  0.3633, -2.2656,  1.4844,  0.9023,  1.3516,  0.6562,  1.8125,  1.8984,  2.7188, -5.0938,  0.2441, -1.9375, -2.9531,  1.0391,  1.4375,  0.2578,  2.6719,  0.2129,
         0.9297, -0.4922, -1.7578, -0.5234, -0.1562,  1.1953, -1.4219,  1.4062,  0.9102, -1.7812, -0.4980,  1.4922,  1.1562,  0.5352, -3.0469, -1.0547,  1.9219,  0.8711, -1.3125,  1.0469, -1.4297,  1.0625, -1.2578, -2.7344,  0.5703,  0.5391, -1.8672,  2.7500,  0.5820,  1.1875,  2.0625, -0.5039],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[     0.0369,     -0.0041,     -0.0125,  ...,      0.0042,      0.0312,     -0.0112],
        [     0.0144,      0.0094,     -0.0514,  ...,     -0.0119,     -0.0127,     -0.0178],
        [     0.0489,      0.0025,      0.0314,  ...,     -0.0213,      0.0243,      0.0063],
        ...,
        [    -0.0315,     -0.0100,      0.0096,  ...,      0.0077,      0.0003,     -0.0345],
        [     0.0385,      0.0095,     -0.0066,  ...,      0.0081,      0.0044,     -0.0057],
        [     0.0001,     -0.0352,     -0.0282,  ...,      0.0105,     -0.0033,      0.0197]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.1216, -2.1250, -3.4062, -3.0312, -0.0194, -0.5156,  0.2480, -0.0135,  0.6211,  0.4336,  1.1953, -0.4473,  0.6484,  0.1299, -0.7148, -0.9609, -1.0859, -2.3750, -0.8359,  1.8359, -3.0938, -0.1660, -0.1562,  0.6641,  0.1973, -0.9922, -0.2139, -0.3848, -2.1875,  0.6484,  1.6797,  0.9492,
        -2.4062, -0.3672, -2.1094,  0.0359,  1.3594,  1.2578,  0.1797,  0.8516,  1.5312, -0.4453, -0.1367,  2.3750,  0.6758,  0.5625, -0.2402, -2.6875,  1.8984,  0.0167, -1.7188,  2.8750,  1.3594, -1.5938,  0.0208,  0.4707,  0.7148,  0.8555, -0.8672, -0.8555,  0.5781,  0.7891,  4.3750, -1.8047],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -1.6094, -1.5859, -2.6719, -0.9062, -1.2266, -0.9141, -2.5938, -1.3203, -2.0312, -0.0374, -1.3594, -1.7734, -0.6836,  0.8398],
        [ 0.0000,  1.0234, -1.5469, -1.3984,  0.4473,  0.4961,  1.1484,  0.1611,  1.1094,  0.8008,  2.3750,  2.0156,  1.1094,  2.0625,  2.9844],
        [ 0.0000,  0.8359,  0.1699, -1.8359, -0.1758,  0.2080,  0.8828,  0.5273,  0.8750,  1.3125,  1.8047,  2.4531,  2.1250,  2.0625,  4.0938],
        [ 0.0000,  1.5234, -0.5430,  0.0190, -0.0216,  2.0156,  2.3125,  1.8594,  4.3125,  2.7656,  4.5312,  3.1094,  3.7344,  6.0312,  5.2188],
        [ 0.0000,  0.8906, -0.9570, -1.1641,  1.2578, -0.2500,  1.3750,  1.1641,  3.3906,  1.6641,  4.2188,  3.4062,  3.5312,  5.1875,  4.5312],
        [ 0.0000,  0.4277, -0.5156, -0.9844,  1.1641,  1.0000,  0.5547,  1.7188,  3.9219,  1.7812,  3.6562,  2.9219,  3.6250,  5.5625,  5.2500],
        [ 0.0000,  0.8281, -0.7500, -0.9219,  1.0156,  1.9219,  2.8125,  1.0078,  3.5156,  2.0625,  4.8125,  3.1562,  3.2031,  5.4062,  5.3438],
        [ 0.0000, -0.3496, -1.7891, -2.7812, -0.1807,  0.5820,  2.0312,  0.0649,  0.4512,  0.8203,  3.2812,  0.9023,  1.2344,  2.2812,  3.7656],
        [ 0.0000,  0.7969, -0.0544,  0.3613,  1.5625,  1.7812,  1.9297,  2.1562,  4.8750,  1.5938,  4.8438,  4.0938,  4.7812,  6.7812,  5.3750],
        [ 0.0000, -1.1562, -3.0156, -3.1094, -0.8086, -0.5273,  1.0625, -2.1406,  1.9609, -0.6055,  0.7109,  0.4004, -0.2402,  3.8750,  2.5469],
        [ 0.0000, -0.2754, -1.4062, -2.0781, -0.1963,  0.5625,  2.0469,  1.4844,  1.5312,  2.1719,  3.6250,  1.3672,  2.3594,  3.5781,  5.4375],
        [ 0.0000, -3.2188, -3.0000, -3.5156, -1.1953, -1.1172,  0.2461, -1.2266,  1.0859, -0.1602,  1.6484,  0.0498, -0.1055,  3.0469,  2.6875],
        [ 0.0000, -1.9688, -2.9844, -4.1875, -1.7656, -0.8281,  0.9258, -1.5156, -1.4219, -0.4277,  1.6719, -0.9766, -0.6445,  0.2852,  2.2969],
        [ 0.0000, -1.3281, -2.5469, -3.0781, -1.6719, -0.9844,  0.5430, -0.7227,  0.8242, -0.1836,  1.4375,  1.0000,  0.3984,  2.7031,  2.0469]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7491],
        [0.5088],
        [0.3926],
        [0.5410],
        [0.4556],
        [0.2984],
        [0.1933],
        [0.3368],
        [0.1601],
        [0.3121],
        [0.1640],
        [0.1434],
        [0.2878],
        [0.1906]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9805, 0.0210, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9883, 0.0082, 0.0023, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9414, 0.0417, 0.0063, 0.0106, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9648, 0.0210, 0.0032, 0.0021, 0.0082, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9570, 0.0186, 0.0070, 0.0025, 0.0117, 0.0049, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9180, 0.0276, 0.0077, 0.0065, 0.0052, 0.0080, 0.0282, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8086, 0.0266, 0.0427, 0.0153, 0.0087, 0.0156, 0.0294, 0.0549, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8789, 0.0245, 0.0094, 0.0049, 0.0106, 0.0103, 0.0312, 0.0104, 0.0192, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8594, 0.0194, 0.0029, 0.0054, 0.0059, 0.0063, 0.0143, 0.0190, 0.0177, 0.0488, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9297, 0.0198, 0.0034, 0.0060, 0.0029, 0.0035, 0.0098, 0.0106, 0.0068, 0.0033, 0.0039, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8516, 0.0256, 0.0060, 0.0093, 0.0064, 0.0046, 0.0134, 0.0229, 0.0127, 0.0139, 0.0045, 0.0287, 0.0000, 0.0000, 0.0000],
        [0.4414, 0.0139, 0.0201, 0.0140, 0.0077, 0.0210, 0.0188, 0.1230, 0.0203, 0.0845, 0.0073, 0.0371, 0.1904, 0.0000, 0.0000],
        [0.8242, 0.0201, 0.0078, 0.0044, 0.0117, 0.0103, 0.0265, 0.0148, 0.0206, 0.0095, 0.0089, 0.0040, 0.0159, 0.0197, 0.0000],
        [0.7773, 0.0283, 0.0041, 0.0056, 0.0145, 0.0097, 0.0286, 0.0092, 0.0236, 0.0093, 0.0087, 0.0034, 0.0098, 0.0232, 0.0444]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0083, -0.0062,  0.0412,  ...,  0.0034, -0.0167, -0.0198],
        [ 0.0591, -0.0510, -0.0057,  ..., -0.0176, -0.0183, -0.0458],
        [ 0.0475, -0.0344,  0.0468,  ..., -0.0144, -0.0154, -0.0053],
        ...,
        [ 0.0340,  0.0233, -0.0311,  ..., -0.0071,  0.0070,  0.0270],
        [ 0.0169,  0.0145,  0.0034,  ..., -0.0107, -0.0441, -0.0313],
        [ 0.0214, -0.0133,  0.0093,  ..., -0.0008, -0.0123,  0.0054]], device='cuda:0', requires_grad=True)
K: tensor([    -0.6211,     -0.2832,     -0.0684,     -0.3711,     -1.9922,      0.5820,     -1.2422,      2.5625,     -1.2266,     -1.1016,      1.8125,      1.8438,     -1.1406,     -1.1406,     -1.0547,     -0.3281,      1.8047,      0.6055,      0.6328,      0.9336,      1.6562,      1.1250,
            -2.1875,      0.2227,      1.1484,     -1.8281,     -0.3633,     -2.0469,      1.7812,     -0.3398,      1.3984,      2.4531,      0.1846,      0.9727,      2.2812,     -0.5000,     -1.1094,      1.5312,      1.5547,     -2.5625,      2.2812,     -0.7539,     -0.0132,      1.5312,
             0.0001,      2.2344,     -0.5273,     -2.5000,     -1.1641,      2.5469,     -1.0312,      1.1094,      0.6875,     -1.5234,      1.8750,     -1.3750,     -2.0000,     -1.9609,     -0.4551,      0.2002,     -2.1875,     -1.1562,      1.0547,      0.4180], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[-0.0063,  0.0396,  0.0200,  ..., -0.0120,  0.0335, -0.0065],
        [-0.0047,  0.0409, -0.0067,  ...,  0.0122,  0.0133,  0.0106],
        [-0.0298, -0.0085,  0.0174,  ..., -0.0308,  0.0642, -0.0392],
        ...,
        [ 0.0314, -0.0126,  0.0208,  ..., -0.0147, -0.0058, -0.0140],
        [ 0.0001,  0.0212, -0.0024,  ...,  0.0188,  0.0118,  0.0165],
        [ 0.0112, -0.0358, -0.0176,  ...,  0.0301,  0.0179,  0.0132]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.8164,  1.1016, -1.0156,  0.5312,  0.1670, -1.0547,  0.4062, -0.0026, -0.3906, -0.1030, -0.0229, -0.7422,  0.3379,  1.1641, -0.0654, -1.3203, -0.0742, -0.7891, -0.2500, -0.1221,  0.0659,  1.2656,  0.4395,  0.7969,  1.6016,  0.7500,  0.5781, -0.0664, -0.6953, -0.7070,  0.0493,  0.2178,
        -1.9766, -0.5547, -0.2637,  0.4883,  0.7969, -1.0078,  0.4941,  0.4355, -2.0312,  1.6406, -0.5664, -0.0151, -0.0879,  0.3457,  0.2373,  0.2188, -0.5273,  0.5039,  0.2559, -1.5547, -0.1245, -0.1206, -0.1689,  0.8281, -0.2236,  0.9922,  0.3809,  1.6484,  1.0391,  1.0469, -1.8203,  0.4160],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -3.8438, -5.6875, -5.5000, -5.4062, -6.0000, -4.9375, -5.1875, -5.2188, -5.9062, -5.9688, -5.6562, -5.9062, -5.3750, -4.7188],
        [ 0.0000, -4.7812, -6.0312, -6.5000, -7.0938, -7.3438, -6.3750, -5.5625, -6.8125, -6.9375, -7.8750, -6.4375, -6.5000, -7.0625, -6.1875],
        [ 0.0000, -3.1094, -5.0000, -4.5000, -4.6875, -4.9375, -3.7188, -5.0000, -4.6875, -4.8438, -4.6250, -5.6250, -5.3750, -4.7812, -3.8281],
        [ 0.0000, -3.8281, -5.7188, -6.1250, -4.7812, -5.4375, -4.1250, -4.6875, -4.6250, -6.0625, -5.4062, -5.9688, -5.0312, -4.6875, -4.7500],
        [ 0.0000, -3.9375, -4.9062, -5.9375, -4.4062, -5.2812, -3.8906, -4.9375, -4.6250, -5.7500, -4.9688, -5.8438, -5.2188, -4.7500, -4.0000],
        [ 0.0000, -3.5000, -4.7812, -4.9375, -5.1875, -4.7500, -3.4844, -3.8438, -4.1875, -5.6562, -5.2188, -5.0938, -4.2812, -4.2812, -4.3750],
        [ 0.0000, -3.4062, -2.9375, -3.9688, -4.5312, -3.9531, -3.3125, -2.6875, -4.2500, -2.7969, -4.2812, -3.5000, -3.1094, -4.2188, -3.4062],
        [ 0.0000, -3.5781, -4.5312, -5.1875, -4.4062, -4.4375, -3.3438, -4.4375, -3.8281, -4.8750, -4.5625, -5.4688, -4.2812, -3.8906, -3.3750],
        [ 0.0000, -3.7969, -5.6875, -5.0625, -4.9688, -4.9375, -4.0938, -3.8125, -3.8750, -2.8750, -4.7188, -4.7812, -4.0938, -3.5625, -3.7969],
        [ 0.0000, -3.8438, -5.5938, -5.0625, -5.7812, -5.5938, -4.5625, -4.4688, -4.9062, -5.6562, -5.4688, -5.6562, -5.0938, -4.9688, -5.0000],
        [ 0.0000, -3.5000, -4.9688, -4.5000, -4.8750, -5.2188, -4.1562, -3.6094, -4.2188, -4.1250, -5.2500, -3.3906, -3.3125, -4.1562, -4.9062],
        [ 0.0000, -3.4531, -3.0938, -3.4531, -4.0625, -3.0469, -3.1562, -1.2734, -3.0781, -1.6484, -4.0938, -2.4688, -0.8438, -3.0000, -3.8125],
        [ 0.0000, -3.7188, -4.6562, -5.2500, -4.2500, -4.3750, -3.4375, -4.0312, -3.6875, -4.4688, -4.5312, -5.3125, -3.9531, -3.7344, -3.4688],
        [ 0.0000, -3.3125, -5.2500, -4.9375, -3.9844, -4.3750, -3.3125, -4.4375, -3.5000, -4.4062, -4.5000, -5.4375, -4.3750, -3.5156, -2.8594]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9408],
        [0.9886],
        [0.9704],
        [0.9756],
        [0.9697],
        [0.9766],
        [0.9056],
        [0.9479],
        [0.9603],
        [0.9860],
        [0.9299],
        [0.8861],
        [0.9430],
        [0.9596]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0820,     0.9180,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0294,     0.6367,     0.3359,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0525,     0.3066,     0.6055,     0.0349,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0289,     0.4531,     0.4258,     0.0420,     0.0500,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0354,     0.6211,     0.2021,     0.0476,     0.0593,     0.0354,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0052,     0.2715,     0.0184,     0.0097,     0.0124,     0.0215,     0.6602,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0048,     0.0496,     0.0403,     0.0042,     0.0031,     0.0126,     0.7305,     0.1533,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0161,     0.1289,     0.0093,     0.0036,     0.0023,     0.0027,     0.7578,     0.0269,     0.0530,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0129,     0.1045,     0.0187,     0.0039,     0.0060,     0.0146,     0.3555,     0.0835,     0.1592,     0.2402,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0089,     0.0264,     0.0074,     0.0025,     0.0032,     0.0079,     0.2109,     0.0425,     0.0284,     0.4941,     0.1680,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0093,     0.0206,     0.0117,     0.0027,     0.0042,     0.0082,     0.1406,     0.2051,     0.0255,     0.2910,     0.1182,     0.1631,     0.0000,     0.0000,     0.0000],
        [    0.0148,     0.0366,     0.0121,     0.0014,     0.0019,     0.0063,     0.1348,     0.0569,     0.0381,     0.3008,     0.1621,     0.1465,     0.0884,     0.0000,     0.0000],
        [    0.0193,     0.0393,     0.0021,     0.0007,     0.0007,     0.0007,     0.0811,     0.0062,     0.0121,     0.1816,     0.5195,     0.0466,     0.0420,     0.0503,     0.0000],
        [    0.0053,     0.0161,     0.0025,     0.0013,     0.0020,     0.0058,     0.0466,     0.0527,     0.0308,     0.0977,     0.0615,     0.1089,     0.1396,     0.1602,     0.2695]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0060,  0.0116, -0.0160,  ..., -0.0324, -0.0114, -0.0219],
        [-0.0495,  0.0228, -0.0240,  ...,  0.0017,  0.0010, -0.0011],
        [-0.0471, -0.0102,  0.0436,  ..., -0.0196, -0.0340, -0.0272],
        ...,
        [-0.0083, -0.0048, -0.0024,  ..., -0.0259, -0.0486, -0.0468],
        [-0.0179, -0.0314, -0.0310,  ..., -0.0146, -0.0145,  0.0574],
        [-0.0124,  0.0182,  0.0212,  ..., -0.0056,  0.0093, -0.0122]], device='cuda:0', requires_grad=True)
K: tensor([-1.7734, -2.1250, -0.3613,  1.0000,  0.3477, -2.0938, -1.5156, -0.3047, -0.2383, -1.8594, -0.3008, -2.4844,  2.7969, -1.3203, -0.0415,  1.8359,  3.0156,  0.3789,  0.6992, -0.1123,  0.6680, -2.6562,  1.1562, -1.6328, -0.5117,  1.6094, -0.4844,  1.2578,  0.7383,  2.0469, -0.5273, -2.4219,
        -0.4844, -1.4297,  2.0938, -1.0391,  2.4375,  0.1504, -1.3672, -0.1729, -2.7031,  1.1719,  0.7773,  1.7969,  0.9922,  0.0117, -2.3438, -0.7344,  1.5781, -0.1514,  1.0234, -0.6016,  0.0059, -2.0156, -1.7734, -1.9297,  2.0000, -1.0938, -0.3418,  1.5234,  0.5820, -1.1094,  2.3438, -0.6172],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0035, -0.0079,  0.0134,  ...,  0.0240, -0.0274, -0.0141],
        [ 0.0446, -0.0038,  0.0070,  ...,  0.0055,  0.0230,  0.0213],
        [-0.0171,  0.0120,  0.0498,  ...,  0.0244,  0.0199, -0.0117],
        ...,
        [ 0.0186, -0.0009, -0.0268,  ...,  0.0024,  0.0066, -0.0005],
        [-0.0077,  0.0420, -0.0295,  ..., -0.0001,  0.0089, -0.0374],
        [ 0.0074, -0.0140,  0.0021,  ...,  0.0142, -0.0044,  0.0069]], device='cuda:0', requires_grad=True)
Q: tensor([-0.0981, -0.6562, -1.9922,  1.6406, -1.7578, -1.0859, -0.3984,  0.3770,  0.8984, -0.4746, -1.0703, -0.3281, -1.6797, -2.1562,  0.8672, -0.2217, -0.8594, -0.7852,  1.3594, -1.0859, -0.0864,  1.4688, -0.6562, -2.5938, -0.9648, -1.5469,  1.6953,  3.6719, -0.9727,  1.7188,  1.2422, -1.1797,
        -0.8516,  0.2344, -1.2969, -1.8984,  1.7812, -1.4922, -2.5625,  0.2314,  0.1592,  0.0183,  1.9609, -0.6211, -1.5859, -1.2578, -0.8633, -2.0000,  1.8125,  1.3281,  0.4258, -0.6055, -1.2969, -0.7148, -0.9102, -0.9688, -0.3438,  0.1001, -0.5508,  1.8828, -0.1797,  0.2314,  0.6953, -0.9297],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      2.4219,      1.5859,      1.2500,      1.4844,      1.8672,      3.8594,      3.0938,      2.9844,      2.8906,      2.7344,      2.8125,      2.9844,      3.2812,      3.0938],
        [     0.0000,      3.0781,      2.4375,      1.1719,      1.1797,      1.6719,      4.6562,      4.2188,      3.2188,      4.4688,      3.9844,      4.4688,      4.4375,      3.8125,      5.0000],
        [     0.0000,      1.7656,      2.4531,     -0.4082,      0.3730,      1.9844,      3.7188,      3.8906,      2.5312,      4.8750,      3.9531,      6.2812,      4.9688,      4.1562,      6.2500],
        [     0.0000,      2.7500,      2.6875,      0.3730,      0.5469,      1.9844,      4.7188,      3.5156,      3.6719,      5.4062,      4.0000,      4.6250,      3.8438,      4.5000,      5.0625],
        [     0.0000,      2.8594,      1.7422,      0.2969,      0.5156,      0.0011,      2.5469,      2.0625,      3.1719,      3.2344,      3.3906,      3.6562,      2.9219,      4.2812,      5.0000],
        [     0.0000,      3.9531,      1.2578,      0.6211,      0.8633,      1.4141,      4.8438,      3.0000,      2.9531,      3.6719,      2.5000,      3.2344,      2.8906,      3.3906,      5.4062],
        [     0.0000,      2.3438,      2.1406,     -0.1206,     -0.4141,      0.9766,      5.0312,      3.4688,      2.9062,      4.9688,      4.2812,      4.5312,      4.1250,      3.6875,      5.4375],
        [     0.0000,      2.0781,     -0.5508,     -1.5156,     -1.9453,     -1.7812,      3.8438,      0.5078,      1.1875,      3.4688,      4.5625,      1.9844,      1.4141,      1.8672,      4.0625],
        [     0.0000,      2.0938,      0.3711,     -1.1953,     -0.7539,      0.1299,      3.3125,      1.8672,      2.5156,      2.9219,      3.3281,      2.8906,      2.3906,      3.4844,      4.6875],
        [     0.0000,      1.0938,     -0.1709,     -1.2656,     -1.0078,     -0.1069,      3.1719,      1.5703,      1.1719,      4.0312,      2.9375,      3.4844,      3.0781,      2.2656,      5.3438],
        [     0.0000,      0.8008,      0.2256,     -1.2344,     -0.7930,     -0.1250,      2.7188,      3.0938,      1.0078,      3.4375,      2.5469,      2.8750,      4.0938,      2.7031,      4.5625],
        [     0.0000,      0.9023,     -0.2041,     -2.3438,     -2.0469,     -0.8516,      2.2031,      1.3438,      0.9414,      3.0000,      2.3906,      2.2969,      1.7812,      2.2188,      3.7031],
        [     0.0000,      0.7148,     -2.2188,     -3.3594,     -3.2812,     -3.3438,      1.4375,     -1.1328,     -0.4629,      2.2344,      3.2969,      0.8867,      0.7773,      0.9609,      3.4531],
        [     0.0000,      1.1094,     -0.7344,     -1.3906,     -0.9648,      0.0796,      2.1719,      2.2969,      1.7500,      2.9062,      2.4375,      3.0156,      3.2656,      3.4062,      3.9219]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3766],
        [0.0961],
        [0.1119],
        [0.1249],
        [0.1021],
        [0.3452],
        [0.1238],
        [0.1010],
        [0.0895],
        [0.0916],
        [0.1105],
        [0.0873],
        [0.1059],
        [0.0953]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0166, 0.9844, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0270, 0.8945, 0.0791, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0193, 0.8203, 0.0854, 0.0752, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0036, 0.6367, 0.2676, 0.0635, 0.0278, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0133, 0.5430, 0.1445, 0.0304, 0.1128, 0.1562, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0182, 0.3652, 0.3770, 0.0457, 0.0165, 0.0498, 0.1289, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0023, 0.1865, 0.0928, 0.0134, 0.0334, 0.0215, 0.0554, 0.5938, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0070, 0.3691, 0.0977, 0.0378, 0.0225, 0.0250, 0.1060, 0.2852, 0.0493, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0050, 0.3242, 0.0576, 0.0288, 0.0120, 0.0139, 0.1377, 0.2812, 0.0356, 0.1040, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0054, 0.2891, 0.0342, 0.0262, 0.0215, 0.0192, 0.1611, 0.1465, 0.0496, 0.0830, 0.1650, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0101, 0.4316, 0.0430, 0.0530, 0.0079, 0.0152, 0.1934, 0.1328, 0.0106, 0.0391, 0.0415, 0.0221, 0.0000, 0.0000, 0.0000],
        [0.0033, 0.1182, 0.0315, 0.0059, 0.0177, 0.0087, 0.0294, 0.1748, 0.0359, 0.1797, 0.0334, 0.1201, 0.2422, 0.0000, 0.0000],
        [0.0099, 0.1621, 0.0210, 0.0150, 0.0111, 0.0075, 0.0525, 0.0410, 0.0182, 0.1406, 0.0566, 0.0408, 0.3945, 0.0283, 0.0000],
        [0.0103, 0.2432, 0.0403, 0.0413, 0.0217, 0.0256, 0.2021, 0.0383, 0.0130, 0.0260, 0.0337, 0.0503, 0.0972, 0.0125, 0.1445]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0180, -0.0269, -0.0103,  ..., -0.0072,  0.0172, -0.0099],
        [ 0.0278, -0.0542, -0.0011,  ...,  0.0359,  0.0207,  0.0043],
        [ 0.0025, -0.0300, -0.0412,  ...,  0.0399,  0.0102, -0.0124],
        ...,
        [ 0.0239,  0.0155, -0.0120,  ..., -0.0159,  0.0134,  0.0209],
        [ 0.0269, -0.0077,  0.0199,  ...,  0.0258, -0.0049,  0.0148],
        [-0.0402,  0.0382, -0.0026,  ...,  0.0056,  0.0243,  0.0458]], device='cuda:0', requires_grad=True)
K: tensor([-0.5586, -0.9219, -0.4180, -0.1699, -0.5156,  0.3438,  0.5039, -0.2910, -0.3887, -3.2344, -1.8359, -1.4766, -0.2598, -0.6328, -1.9609,  1.1953,  2.2344,  1.6250, -2.1250, -0.5703,  1.4453, -1.3281, -1.6875,  0.2793,  1.4375, -1.7344, -0.9766,  0.8203, -1.2109, -1.9219, -0.4883, -0.2656,
        -2.7031,  2.1562,  3.2969,  0.3066,  0.3711, -0.8203,  0.0038, -2.3438, -0.8359, -0.0574, -1.6484,  1.3281,  0.3320,  0.2949, -1.3359,  2.2656, -1.7891, -1.7266,  0.4219,  1.9922,  1.7109, -0.3281, -0.4199,  0.4395, -0.3027, -2.5469, -0.9062,  1.1797,  1.0469, -0.8047,  1.1875, -1.7266],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0007, -0.0041, -0.0045,  ..., -0.0365, -0.0269, -0.0234],
        [ 0.0008,  0.0026, -0.0094,  ...,  0.0048, -0.0212,  0.0317],
        [ 0.0222, -0.0141, -0.0004,  ..., -0.0085, -0.0256, -0.0132],
        ...,
        [ 0.0322, -0.0500, -0.0324,  ...,  0.0042,  0.0179, -0.0130],
        [ 0.0202,  0.0010,  0.0658,  ...,  0.0219,  0.0111,  0.0125],
        [-0.0133, -0.0078, -0.0126,  ...,  0.0150,  0.0143, -0.0167]], device='cuda:0', requires_grad=True)
Q: tensor([-0.3750,  1.2969,  0.2852,  0.9062, -0.1455, -1.5859,  0.0092, -2.0938, -1.1406,  0.0618, -0.3027,  0.6406,  0.9375, -0.4414, -0.8789, -0.1289,  0.2539,  0.7188, -0.5273,  0.4941, -0.2002, -0.6602,  0.2227, -0.2041,  1.3906,  0.6328, -1.0938,  1.4219, -1.2031,  1.1484, -1.1719, -1.2578,
        -0.4961,  0.5586, -0.5859, -0.5430, -0.4023, -0.3242,  2.3906, -0.8047,  0.3203, -0.0356, -1.1406,  0.3047,  0.1768,  1.3594, -0.2871,  1.4688,  0.8359, -0.7930,  0.5703,  1.3984, -0.4863,  0.0092, -0.6328,  1.0547, -2.3281,  0.1934, -0.2539,  0.7227,  0.4043, -0.6289, -0.5898, -1.0625],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  4.0938,  1.6953,  1.2031,  1.0312,  1.5859,  3.2344,  2.1094,  1.2109,  1.6406,  1.7500,  1.0234,  2.3438,  0.9180,  1.9375],
        [ 0.0000,  3.5000,  1.0781,  1.0078,  0.7422,  1.4609,  3.2188,  1.5156, -0.3281,  0.1533,  0.1157, -0.8047,  1.2188, -1.0469,  0.0405],
        [ 0.0000,  3.7500,  1.4922,  1.3672,  1.3672,  0.9844,  3.5938,  2.2969,  0.8086,  1.0234,  0.5312, -0.2520,  2.1875,  0.0099,  0.3594],
        [ 0.0000,  5.1875,  4.3125,  2.8906,  2.0625,  3.5938,  3.6250,  6.4375,  2.1094,  4.2188,  2.0469,  3.9844,  5.8125,  1.2656,  2.3125],
        [ 0.0000,  3.7031,  2.3906,  0.8281,  2.1406,  2.4688,  3.0625,  3.1719,  1.7031,  2.5000,  0.9375,  2.1719,  2.9375,  0.9688,  2.4844],
        [ 0.0000,  3.0000,  3.0312,  0.9219, -0.0986,  1.0078,  1.9609,  4.0312,  0.1396,  2.2500,  0.0114,  2.3906,  2.9062, -0.5781,  1.3594],
        [ 0.0000,  4.3750,  3.6875,  1.7578,  2.6719,  2.2344,  3.1719,  5.5625,  3.7031,  5.1562,  2.7812,  4.4688,  5.5000,  3.3438,  5.3750],
        [ 0.0000,  3.9688,  2.6406,  1.6875,  1.1641,  1.2734,  2.7188,  3.7031,  1.9531,  4.3438,  2.1250,  2.5781,  5.0000,  1.4141,  2.8438],
        [ 0.0000,  4.1562,  2.4375,  1.7500,  0.8711,  1.0234,  3.3125,  4.0312,  1.9609,  3.0312,  3.1719,  3.0938,  5.2500,  1.9531,  3.2188],
        [ 0.0000,  3.9844,  1.8516,  1.5859,  1.3828,  1.2734,  3.4062,  3.3125,  2.2188,  2.7344,  3.4219,  3.2188,  4.9688,  2.3438,  3.1094],
        [ 0.0000,  3.7500,  1.4453,  1.6562, -0.2461,  0.4102,  2.9531,  2.5781,  0.0427,  1.3516,  1.4141,  0.7812,  3.7969,  0.1216,  1.3359],
        [ 0.0000,  3.5938,  2.2656,  0.5977,  1.6953,  0.9883,  2.2031,  3.9844,  2.4062,  4.0000,  2.3438,  3.6094,  4.3125,  2.8906,  4.3438],
        [ 0.0000,  2.7812,  0.7461,  0.4062,  0.1104, -0.2832,  1.6641,  1.4141,  0.6016,  2.6562,  1.7344,  1.4141,  3.6875,  1.0469,  2.1719],
        [ 0.0000,  3.1562,  1.3672,  1.3906,  0.7461,  0.9102,  2.9844,  1.3125,  0.2373,  0.9258,  1.1875,  1.5859,  2.2500,  0.1953,  2.6406]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0212],
        [0.0068],
        [0.0061],
        [0.0041],
        [0.0061],
        [0.0071],
        [0.0036],
        [0.0025],
        [0.0019],
        [0.0052],
        [0.0042],
        [0.0026],
        [0.0035],
        [0.0023]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( are:0.0918 a:0.1475,:0.2334 yellow:0.0703ent:0.1348 are:0.3516 a:0.0796iced:0.2109)
iced
------
		( a:0.1475,:0.2334 yellow:0.0703ent:0.1348 are:0.3516 a:0.0796iced:0.2109 with:0.1777)
 with a lot of water and are a great source of vitamins and minerals.
@ 13050 train 3.6202 , allloss: 3.6298, dt: 1686.52ms, fracRes: 0.5929, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.5984, norm(y): 0.9765, norm:0.7991, tok/sec: 77717.57, flops:68.06, batch-reuse:1
@ 13051 train 3.6961 , allloss: 3.7056, dt: 1258.62ms, fracRes: 0.5931, norm(attn): 0.1709, norm(output): 0.2637, norm(x): 0.6000, norm(y): 0.9767, norm:0.7600, tok/sec: 104139.75, flops:91.19, batch-reuse:1
@ 13052 train 3.6531 , allloss: 3.6628, dt: 1269.49ms, fracRes: 0.5932, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6009, norm(y): 0.9766, norm:0.7748, tok/sec: 103247.99, flops:90.41, batch-reuse:1
@ 13053 train 3.5880 , allloss: 3.5975, dt: 1271.56ms, fracRes: 0.5926, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5985, norm(y): 0.9767, norm:0.8170, tok/sec: 103079.74, flops:90.27, batch-reuse:1
@ 13054 train 3.6158 , allloss: 3.6256, dt: 1292.51ms, fracRes: 0.5927, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5984, norm(y): 0.9768, norm:0.7225, tok/sec: 101409.03, flops:88.80, batch-reuse:1
@ 13055 train 3.5924 , allloss: 3.6023, dt: 1275.21ms, fracRes: 0.5924, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5985, norm(y): 0.9770, norm:0.7463, tok/sec: 102784.80, flops:90.01, batch-reuse:1
@ 13056 train 3.6405 , allloss: 3.6504, dt: 1290.91ms, fracRes: 0.5923, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5997, norm(y): 0.9768, norm:0.7955, tok/sec: 101534.39, flops:88.91, batch-reuse:1
@ 13057 train 3.6145 , allloss: 3.6241, dt: 1311.33ms, fracRes: 0.5937, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5990, norm(y): 0.9768, norm:0.7580, tok/sec: 99953.64, flops:87.53, batch-reuse:1
@ 13058 train 3.5122 , allloss: 3.5218, dt: 1283.95ms, fracRes: 0.5927, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6005, norm(y): 0.9767, norm:0.7597, tok/sec: 102084.93, flops:89.39, batch-reuse:1
@ 13059 train 3.6030 , allloss: 3.6127, dt: 1264.53ms, fracRes: 0.5918, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6032, norm(y): 0.9768, norm:0.7688, tok/sec: 103653.14, flops:90.77, batch-reuse:1
@ 13060 train 3.5658 , allloss: 3.5755, dt: 1265.11ms, fracRes: 0.5914, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6025, norm(y): 0.9766, norm:0.6669, tok/sec: 103605.18, flops:90.73, batch-reuse:1
@ 13061 train 3.5299 , allloss: 3.5397, dt: 1280.43ms, fracRes: 0.5925, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5983, norm(y): 0.9769, norm:0.7197, tok/sec: 102366.01, flops:89.64, batch-reuse:1
@ 13062 train 3.7440 , allloss: 3.7537, dt: 1283.94ms, fracRes: 0.5940, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5972, norm(y): 0.9768, norm:0.6924, tok/sec: 102085.57, flops:89.39, batch-reuse:1
@ 13063 train 3.6224 , allloss: 3.6324, dt: 1274.02ms, fracRes: 0.5945, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5988, norm(y): 0.9768, norm:0.7407, tok/sec: 102880.90, flops:90.09, batch-reuse:1
@ 13064 train 3.4594 , allloss: 3.4696, dt: 1260.88ms, fracRes: 0.5941, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6002, norm(y): 0.9770, norm:0.7375, tok/sec: 103953.15, flops:91.03, batch-reuse:1
@ 13065 train 3.6296 , allloss: 3.6392, dt: 1271.96ms, fracRes: 0.5930, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5944, norm(y): 0.9768, norm:0.7083, tok/sec: 103047.09, flops:90.24, batch-reuse:1
@ 13066 train 3.5361 , allloss: 3.5460, dt: 1268.30ms, fracRes: 0.5923, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5975, norm(y): 0.9769, norm:0.7162, tok/sec: 103344.82, flops:90.50, batch-reuse:1
@ 13067 train 3.6514 , allloss: 3.6613, dt: 1266.28ms, fracRes: 0.5918, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5979, norm(y): 0.9767, norm:0.7373, tok/sec: 103509.85, flops:90.64, batch-reuse:1
@ 13068 train 3.7774 , allloss: 3.7870, dt: 1258.98ms, fracRes: 0.5914, norm(attn): 0.1729, norm(output): 0.2637, norm(x): 0.5949, norm(y): 0.9765, norm:0.7359, tok/sec: 104109.63, flops:91.17, batch-reuse:1
@ 13069 train 3.8402 , allloss: 3.8501, dt: 1270.81ms, fracRes: 0.5919, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5982, norm(y): 0.9764, norm:0.7025, tok/sec: 103140.27, flops:90.32, batch-reuse:1
@ 13070 train 3.8606 , allloss: 3.8705, dt: 1261.16ms, fracRes: 0.5929, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6010, norm(y): 0.9766, norm:0.6817, tok/sec: 103929.72, flops:91.01, batch-reuse:1
@ 13071 train 3.8331 , allloss: 3.8429, dt: 1262.73ms, fracRes: 0.5936, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5993, norm(y): 0.9767, norm:0.7397, tok/sec: 103800.66, flops:90.90, batch-reuse:1
@ 13072 train 3.7736 , allloss: 3.7835, dt: 1263.33ms, fracRes: 0.5941, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5967, norm(y): 0.9766, norm:0.7230, tok/sec: 103751.00, flops:90.85, batch-reuse:1
@ 13073 train 3.8007 , allloss: 3.8109, dt: 1274.20ms, fracRes: 0.5934, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5974, norm(y): 0.9763, norm:0.7777, tok/sec: 102865.92, flops:90.08, batch-reuse:1
@ 13074 train 3.8839 , allloss: 3.8936, dt: 1258.04ms, fracRes: 0.5928, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5973, norm(y): 0.9764, norm:0.7887, tok/sec: 104187.25, flops:91.24, batch-reuse:1
@ 13075 train 3.8110 , allloss: 3.8208, dt: 1268.33ms, fracRes: 0.5909, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5990, norm(y): 0.9763, norm:0.7704, tok/sec: 103342.03, flops:90.50, batch-reuse:1
@ 13076 train 3.9684 , allloss: 3.9782, dt: 1255.62ms, fracRes: 0.5913, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6000, norm(y): 0.9761, norm:0.8603, tok/sec: 104388.41, flops:91.41, batch-reuse:1
@ 13077 train 3.8555 , allloss: 3.8654, dt: 1263.41ms, fracRes: 0.5924, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6010, norm(y): 0.9762, norm:0.7129, tok/sec: 103744.99, flops:90.85, batch-reuse:1
@ 13078 train 3.8758 , allloss: 3.8859, dt: 1272.38ms, fracRes: 0.5922, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5969, norm(y): 0.9761, norm:0.7675, tok/sec: 103013.24, flops:90.21, batch-reuse:1
@ 13079 train 3.7928 , allloss: 3.8032, dt: 1293.25ms, fracRes: 0.5927, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5987, norm(y): 0.9769, norm:0.8534, tok/sec: 101351.23, flops:88.75, batch-reuse:1
@ 13080 train 3.7574 , allloss: 3.7674, dt: 1252.34ms, fracRes: 0.5921, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5953, norm(y): 0.9765, norm:0.7897, tok/sec: 104662.03, flops:91.65, batch-reuse:1
@ 13081 train 3.7552 , allloss: 3.7651, dt: 1266.52ms, fracRes: 0.5929, norm(attn): 0.1709, norm(output): 0.2656, norm(x): 0.5950, norm(y): 0.9765, norm:0.7720, tok/sec: 103490.27, flops:90.62, batch-reuse:1
@ 13082 train 3.8785 , allloss: 3.8886, dt: 1272.58ms, fracRes: 0.5928, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5949, norm(y): 0.9763, norm:0.7885, tok/sec: 102996.74, flops:90.19, batch-reuse:1
@ 13083 train 3.8064 , allloss: 3.8164, dt: 1273.86ms, fracRes: 0.5918, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5957, norm(y): 0.9763, norm:0.7394, tok/sec: 102893.82, flops:90.10, batch-reuse:1
@ 13084 train 3.7216 , allloss: 3.7318, dt: 1273.93ms, fracRes: 0.5919, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.6010, norm(y): 0.9765, norm:0.8283, tok/sec: 102888.22, flops:90.10, batch-reuse:1
@ 13085 train 3.7810 , allloss: 3.7912, dt: 1287.30ms, fracRes: 0.5921, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6001, norm(y): 0.9764, norm:0.7337, tok/sec: 101819.19, flops:89.16, batch-reuse:1
@ 13086 train 3.9550 , allloss: 3.9649, dt: 1265.80ms, fracRes: 0.5921, norm(attn): 0.1709, norm(output): 0.2656, norm(x): 0.5968, norm(y): 0.9760, norm:0.7571, tok/sec: 103548.78, flops:90.68, batch-reuse:1
@ 13087 train 4.0420 , allloss: 4.0520, dt: 1290.20ms, fracRes: 0.5920, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6007, norm(y): 0.9763, norm:0.8134, tok/sec: 101590.36, flops:88.96, batch-reuse:1
@ 13088 train 3.7829 , allloss: 3.7928, dt: 1296.38ms, fracRes: 0.5915, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6002, norm(y): 0.9765, norm:0.8980, tok/sec: 101106.34, flops:88.54, batch-reuse:1
@ 13089 train 3.8869 , allloss: 3.8970, dt: 1284.05ms, fracRes: 0.5909, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5992, norm(y): 0.9761, norm:0.7979, tok/sec: 102077.08, flops:89.39, batch-reuse:1
@ 13090 train 3.9346 , allloss: 3.9446, dt: 1269.97ms, fracRes: 0.5919, norm(attn): 0.1709, norm(output): 0.2656, norm(x): 0.6000, norm(y): 0.9760, norm:0.7127, tok/sec: 103208.41, flops:90.38, batch-reuse:1
@ 13091 train 3.9345 , allloss: 3.9448, dt: 1249.37ms, fracRes: 0.5927, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6029, norm(y): 0.9759, norm:0.7779, tok/sec: 104910.67, flops:91.87, batch-reuse:1
@ 13092 train 3.8471 , allloss: 3.8575, dt: 1256.21ms, fracRes: 0.5949, norm(attn): 0.1709, norm(output): 0.2656, norm(x): 0.6021, norm(y): 0.9764, norm:0.8168, tok/sec: 104339.10, flops:91.37, batch-reuse:1
@ 13093 train 3.9380 , allloss: 3.9480, dt: 1276.33ms, fracRes: 0.5935, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6008, norm(y): 0.9759, norm:0.9761, tok/sec: 102694.25, flops:89.93, batch-reuse:1
@ 13094 train 3.9126 , allloss: 3.9227, dt: 1272.46ms, fracRes: 0.5931, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6011, norm(y): 0.9760, norm:0.9516, tok/sec: 103006.99, flops:90.20, batch-reuse:1
@ 13095 train 3.9492 , allloss: 3.9590, dt: 1290.05ms, fracRes: 0.5928, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5981, norm(y): 0.9759, norm:1.0599, tok/sec: 101602.20, flops:88.97, batch-reuse:1
@ 13096 train 3.9333 , allloss: 3.9432, dt: 1262.60ms, fracRes: 0.5926, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6006, norm(y): 0.9761, norm:0.8416, tok/sec: 103811.25, flops:90.91, batch-reuse:1
@ 13097 train 3.7912 , allloss: 3.8013, dt: 1246.40ms, fracRes: 0.5920, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5980, norm(y): 0.9764, norm:0.7855, tok/sec: 105160.23, flops:92.09, batch-reuse:1
@ 13098 train 3.8409 , allloss: 3.8514, dt: 1304.14ms, fracRes: 0.5924, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5995, norm(y): 0.9764, norm:1.1337, tok/sec: 100504.71, flops:88.01, batch-reuse:1
@ 13099 train 3.7277 , allloss: 3.7376, dt: 1271.61ms, fracRes: 0.5922, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6021, norm(y): 0.9761, norm:1.0127, tok/sec: 103075.34, flops:90.26, batch-reuse:1
@ 13100 train 3.8395 , allloss: 3.8498, dt: 1282.14ms, fracRes: 0.5919, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6023, norm(y): 0.9762, norm:0.8578, tok/sec: 102229.22, flops:89.52, batch-reuse:1
@ 13101 train 3.8570 , allloss: 3.8673, dt: 1280.04ms, fracRes: 0.5916, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.6020, norm(y): 0.9759, norm:0.8550, tok/sec: 102396.76, flops:89.67, batch-reuse:1
@ 13102 train 3.8604 , allloss: 3.8708, dt: 1296.11ms, fracRes: 0.5928, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.6026, norm(y): 0.9760, norm:0.8233, tok/sec: 101127.10, flops:88.56, batch-reuse:1
@ 13103 train 3.8055 , allloss: 3.8159, dt: 1262.88ms, fracRes: 0.5934, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.6072, norm(y): 0.9759, norm:0.7935, tok/sec: 103788.22, flops:90.89, batch-reuse:1
@ 13104 train 3.7902 , allloss: 3.8003, dt: 1277.10ms, fracRes: 0.5940, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.6059, norm(y): 0.9761, norm:0.7506, tok/sec: 102632.39, flops:89.87, batch-reuse:1
@ 13105 train 3.8927 , allloss: 3.9034, dt: 1283.44ms, fracRes: 0.5942, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.6101, norm(y): 0.9762, norm:0.8283, tok/sec: 102125.45, flops:89.43, batch-reuse:1
@ 13106 train 3.8777 , allloss: 3.8884, dt: 1258.21ms, fracRes: 0.5930, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.6042, norm(y): 0.9763, norm:0.8262, tok/sec: 104173.75, flops:91.22, batch-reuse:1
@ 13107 train 3.8364 , allloss: 3.8468, dt: 1279.64ms, fracRes: 0.5919, norm(attn): 0.1738, norm(output): 0.2676, norm(x): 0.6024, norm(y): 0.9764, norm:0.8060, tok/sec: 102428.89, flops:89.70, batch-reuse:1
@ 13108 train 3.8157 , allloss: 3.8258, dt: 1289.92ms, fracRes: 0.5906, norm(attn): 0.1738, norm(output): 0.2676, norm(x): 0.6015, norm(y): 0.9763, norm:0.7880, tok/sec: 101612.87, flops:88.98, batch-reuse:1
@ 13109 train 3.8425 , allloss: 3.8525, dt: 1294.71ms, fracRes: 0.5911, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.6018, norm(y): 0.9764, norm:0.8177, tok/sec: 101236.89, flops:88.65, batch-reuse:1
@ 13110 train 3.8764 , allloss: 3.8864, dt: 1319.31ms, fracRes: 0.5922, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6033, norm(y): 0.9764, norm:0.7717, tok/sec: 99349.05, flops:87.00, batch-reuse:1
@ 13111 train 3.9150 , allloss: 3.9250, dt: 1277.98ms, fracRes: 0.5925, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6010, norm(y): 0.9763, norm:0.7847, tok/sec: 102562.21, flops:89.81, batch-reuse:1
@ 13112 train 3.8409 , allloss: 3.8513, dt: 1253.08ms, fracRes: 0.5941, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6061, norm(y): 0.9763, norm:0.7470, tok/sec: 104599.46, flops:91.60, batch-reuse:1
@ 13113 train 3.8779 , allloss: 3.8879, dt: 1258.22ms, fracRes: 0.5943, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6040, norm(y): 0.9762, norm:0.7218, tok/sec: 104172.27, flops:91.22, batch-reuse:1
@ 13114 train 3.9719 , allloss: 3.9822, dt: 1242.69ms, fracRes: 0.5946, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6070, norm(y): 0.9760, norm:0.8281, tok/sec: 105474.47, flops:92.36, batch-reuse:1
@ 13115 train 3.9130 , allloss: 3.9226, dt: 1252.03ms, fracRes: 0.5935, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6001, norm(y): 0.9758, norm:0.7848, tok/sec: 104687.24, flops:91.67, batch-reuse:1
@ 13116 train 3.8621 , allloss: 3.8716, dt: 1270.63ms, fracRes: 0.5938, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5997, norm(y): 0.9760, norm:0.7269, tok/sec: 103154.75, flops:90.33, batch-reuse:1
@ 13117 train 3.8500 , allloss: 3.8595, dt: 1269.98ms, fracRes: 0.5930, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5986, norm(y): 0.9759, norm:0.7187, tok/sec: 103208.22, flops:90.38, batch-reuse:1
@ 13118 train 3.7985 , allloss: 3.8086, dt: 1279.87ms, fracRes: 0.5926, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5989, norm(y): 0.9760, norm:0.8319, tok/sec: 102410.34, flops:89.68, batch-reuse:1
@ 13119 train 3.8103 , allloss: 3.8206, dt: 1261.02ms, fracRes: 0.5921, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6011, norm(y): 0.9761, norm:0.7662, tok/sec: 103941.18, flops:91.02, batch-reuse:1
@ 13120 train 3.7784 , allloss: 3.7883, dt: 1274.09ms, fracRes: 0.5920, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6000, norm(y): 0.9762, norm:0.7233, tok/sec: 102874.87, flops:90.09, batch-reuse:1
@ 13121 train 3.8899 , allloss: 3.8999, dt: 1278.67ms, fracRes: 0.5918, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6015, norm(y): 0.9761, norm:0.7897, tok/sec: 102506.62, flops:89.76, batch-reuse:1
@ 13122 train 3.6728 , allloss: 3.6829, dt: 1265.30ms, fracRes: 0.5922, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.6036, norm(y): 0.9764, norm:0.7228, tok/sec: 103589.93, flops:90.71, batch-reuse:1
@ 13123 train 3.8247 , allloss: 3.8343, dt: 1267.18ms, fracRes: 0.5917, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6014, norm(y): 0.9761, norm:0.8251, tok/sec: 103436.23, flops:90.58, batch-reuse:1
@ 13124 train 3.7850 , allloss: 3.7946, dt: 1276.59ms, fracRes: 0.5923, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6018, norm(y): 0.9761, norm:0.7990, tok/sec: 102673.29, flops:89.91, batch-reuse:1
@ 13125 train 3.8157 , allloss: 3.8258, dt: 1267.97ms, fracRes: 0.5925, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6030, norm(y): 0.9763, norm:0.7855, tok/sec: 103371.37, flops:90.52, batch-reuse:1
@ 13126 train 3.8695 , allloss: 3.8792, dt: 1267.07ms, fracRes: 0.5931, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6009, norm(y): 0.9758, norm:0.7512, tok/sec: 103444.78, flops:90.59, batch-reuse:1
@ 13127 train 3.8190 , allloss: 3.8288, dt: 1270.13ms, fracRes: 0.5930, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5984, norm(y): 0.9760, norm:0.6833, tok/sec: 103195.66, flops:90.37, batch-reuse:1
@ 13128 train 3.7944 , allloss: 3.8044, dt: 1274.22ms, fracRes: 0.5923, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5995, norm(y): 0.9764, norm:0.7184, tok/sec: 102864.23, flops:90.08, batch-reuse:1
@ 13129 train 3.8089 , allloss: 3.8188, dt: 1296.56ms, fracRes: 0.5921, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6001, norm(y): 0.9764, norm:0.6988, tok/sec: 101092.51, flops:88.53, batch-reuse:1
@ 13130 train 3.8380 , allloss: 3.8476, dt: 1292.64ms, fracRes: 0.5922, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5977, norm(y): 0.9762, norm:0.7032, tok/sec: 101398.43, flops:88.79, batch-reuse:1
@ 13131 train 3.8292 , allloss: 3.8390, dt: 1311.44ms, fracRes: 0.5923, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6000, norm(y): 0.9760, norm:0.7228, tok/sec: 99944.81, flops:87.52, batch-reuse:1
@ 13132 train 3.9141 , allloss: 3.9237, dt: 1289.88ms, fracRes: 0.5917, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6002, norm(y): 0.9760, norm:0.8218, tok/sec: 101616.01, flops:88.98, batch-reuse:1
@ 13133 train 3.8149 , allloss: 3.8248, dt: 1270.69ms, fracRes: 0.5913, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6011, norm(y): 0.9760, norm:0.8154, tok/sec: 103150.41, flops:90.33, batch-reuse:1
@ 13134 train 3.8011 , allloss: 3.8114, dt: 1254.51ms, fracRes: 0.5910, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.5996, norm(y): 0.9763, norm:0.7177, tok/sec: 104480.84, flops:91.49, batch-reuse:1
@ 13135 train 3.8889 , allloss: 3.8990, dt: 1265.29ms, fracRes: 0.5912, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5986, norm(y): 0.9760, norm:0.7569, tok/sec: 103590.32, flops:90.71, batch-reuse:1
@ 13136 train 3.8672 , allloss: 3.8769, dt: 1274.78ms, fracRes: 0.5923, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5982, norm(y): 0.9759, norm:0.7122, tok/sec: 102819.17, flops:90.04, batch-reuse:1
@ 13137 train 3.8759 , allloss: 3.8854, dt: 1242.70ms, fracRes: 0.5923, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5994, norm(y): 0.9760, norm:0.7995, tok/sec: 105473.38, flops:92.36, batch-reuse:1
@ 13138 train 3.7972 , allloss: 3.8069, dt: 1259.21ms, fracRes: 0.5928, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6039, norm(y): 0.9761, norm:0.7370, tok/sec: 104090.36, flops:91.15, batch-reuse:1
@ 13139 train 3.9152 , allloss: 3.9248, dt: 1269.01ms, fracRes: 0.5922, norm(attn): 0.1729, norm(output): 0.2637, norm(x): 0.5974, norm(y): 0.9760, norm:0.7739, tok/sec: 103287.06, flops:90.45, batch-reuse:1
@ 13140 train 3.8003 , allloss: 3.8103, dt: 1255.79ms, fracRes: 0.5923, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5984, norm(y): 0.9760, norm:0.8687, tok/sec: 104373.78, flops:91.40, batch-reuse:1
@ 13141 train 3.7450 , allloss: 3.7548, dt: 1268.16ms, fracRes: 0.5917, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5962, norm(y): 0.9759, norm:0.6641, tok/sec: 103356.05, flops:90.51, batch-reuse:1
@ 13142 train 3.7598 , allloss: 3.7697, dt: 1255.38ms, fracRes: 0.5915, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5932, norm(y): 0.9761, norm:0.7934, tok/sec: 104407.86, flops:91.43, batch-reuse:1
@ 13143 train 3.8661 , allloss: 3.8758, dt: 1267.22ms, fracRes: 0.5919, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5925, norm(y): 0.9759, norm:0.7112, tok/sec: 103432.40, flops:90.57, batch-reuse:1
@ 13144 train 3.7501 , allloss: 3.7597, dt: 1269.24ms, fracRes: 0.5926, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5955, norm(y): 0.9757, norm:0.7435, tok/sec: 103268.32, flops:90.43, batch-reuse:1
@ 13145 train 3.8046 , allloss: 3.8142, dt: 1266.79ms, fracRes: 0.5926, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5975, norm(y): 0.9758, norm:0.7714, tok/sec: 103468.22, flops:90.61, batch-reuse:1
@ 13146 train 3.9334 , allloss: 3.9430, dt: 1280.96ms, fracRes: 0.5918, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5987, norm(y): 0.9758, norm:0.7602, tok/sec: 102323.65, flops:89.60, batch-reuse:1
@ 13147 train 3.8357 , allloss: 3.8456, dt: 1269.30ms, fracRes: 0.5915, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6002, norm(y): 0.9758, norm:0.8088, tok/sec: 103263.47, flops:90.43, batch-reuse:1
@ 13148 train 3.7997 , allloss: 3.8094, dt: 1277.56ms, fracRes: 0.5911, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5995, norm(y): 0.9760, norm:0.7672, tok/sec: 102595.38, flops:89.84, batch-reuse:1
@ 13149 train 3.7860 , allloss: 3.7956, dt: 1269.88ms, fracRes: 0.5907, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5988, norm(y): 0.9760, norm:0.7422, tok/sec: 103215.99, flops:90.38, batch-reuse:1
@ 13150 train 3.8387 , allloss: 3.8484, dt: 1252.52ms, fracRes: 0.5911, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5967, norm(y): 0.9759, norm:0.8273, tok/sec: 104646.27, flops:91.64, batch-reuse:1
@ 13151 train 3.7916 , allloss: 3.8016, dt: 1265.69ms, fracRes: 0.5914, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.5988, norm(y): 0.9760, norm:0.7529, tok/sec: 103557.83, flops:90.68, batch-reuse:1
@ 13152 train 3.7583 , allloss: 3.7686, dt: 1282.82ms, fracRes: 0.5926, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6006, norm(y): 0.9762, norm:0.7652, tok/sec: 102174.76, flops:89.47, batch-reuse:1
@ 13153 train 3.8292 , allloss: 3.8391, dt: 1312.82ms, fracRes: 0.5926, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5977, norm(y): 0.9760, norm:0.8625, tok/sec: 99839.82, flops:87.43, batch-reuse:1
@ 13154 train 3.7981 , allloss: 3.8079, dt: 1286.78ms, fracRes: 0.5937, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5968, norm(y): 0.9761, norm:0.7041, tok/sec: 101860.41, flops:89.20, batch-reuse:1
@ 13155 train 3.9966 , allloss: 4.0063, dt: 1273.79ms, fracRes: 0.5933, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5943, norm(y): 0.9758, norm:0.8913, tok/sec: 102899.17, flops:90.11, batch-reuse:1
@ 13156 train 3.8487 , allloss: 3.8583, dt: 1290.38ms, fracRes: 0.5929, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5955, norm(y): 0.9761, norm:0.8723, tok/sec: 101576.26, flops:88.95, batch-reuse:1
@ 13157 train 3.7939 , allloss: 3.8037, dt: 1265.43ms, fracRes: 0.5916, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5961, norm(y): 0.9759, norm:0.7185, tok/sec: 103578.96, flops:90.70, batch-reuse:1
@ 13158 train 3.8095 , allloss: 3.8192, dt: 1279.80ms, fracRes: 0.5912, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5956, norm(y): 0.9758, norm:0.7999, tok/sec: 102415.87, flops:89.68, batch-reuse:1
@ 13159 train 3.7683 , allloss: 3.7780, dt: 1304.73ms, fracRes: 0.5907, norm(attn): 0.1738, norm(output): 0.2676, norm(x): 0.5966, norm(y): 0.9758, norm:0.6873, tok/sec: 100459.14, flops:87.97, batch-reuse:1
@ 13160 train 3.7836 , allloss: 3.7934, dt: 1293.72ms, fracRes: 0.5909, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5986, norm(y): 0.9758, norm:0.7589, tok/sec: 101313.83, flops:88.72, batch-reuse:1
@ 13161 train 3.6746 , allloss: 3.6843, dt: 1266.15ms, fracRes: 0.5915, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5991, norm(y): 0.9759, norm:0.7013, tok/sec: 103520.28, flops:90.65, batch-reuse:1
@ 13162 train 3.7175 , allloss: 3.7273, dt: 1258.46ms, fracRes: 0.5925, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5995, norm(y): 0.9760, norm:0.6907, tok/sec: 104152.75, flops:91.21, batch-reuse:1
@ 13163 train 3.7638 , allloss: 3.7734, dt: 1262.68ms, fracRes: 0.5926, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5961, norm(y): 0.9757, norm:0.6980, tok/sec: 103804.46, flops:90.90, batch-reuse:1
@ 13164 train 3.6997 , allloss: 3.7095, dt: 1286.68ms, fracRes: 0.5930, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5946, norm(y): 0.9759, norm:0.7239, tok/sec: 101868.26, flops:89.20, batch-reuse:1
@ 13165 train 3.7770 , allloss: 3.7868, dt: 1275.05ms, fracRes: 0.5935, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5938, norm(y): 0.9761, norm:0.6952, tok/sec: 102797.58, flops:90.02, batch-reuse:1
@ 13166 train 3.7993 , allloss: 3.8091, dt: 1245.72ms, fracRes: 0.5935, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5895, norm(y): 0.9762, norm:0.7017, tok/sec: 105217.49, flops:92.14, batch-reuse:1
@ 13167 train 3.7985 , allloss: 3.8085, dt: 1271.19ms, fracRes: 0.5945, norm(attn): 0.1719, norm(output): 0.2617, norm(x): 0.5907, norm(y): 0.9761, norm:0.7964, tok/sec: 103109.36, flops:90.29, batch-reuse:1
@ 13168 train 3.7779 , allloss: 3.7874, dt: 1280.16ms, fracRes: 0.5928, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5943, norm(y): 0.9760, norm:0.7237, tok/sec: 102387.24, flops:89.66, batch-reuse:1
@ 13169 train 3.7465 , allloss: 3.7560, dt: 1244.10ms, fracRes: 0.5924, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5964, norm(y): 0.9761, norm:0.7246, tok/sec: 105354.50, flops:92.26, batch-reuse:1
@ 13170 train 3.7806 , allloss: 3.7901, dt: 1267.39ms, fracRes: 0.5917, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5992, norm(y): 0.9759, norm:0.7234, tok/sec: 103419.24, flops:90.56, batch-reuse:1
@ 13171 train 3.8307 , allloss: 3.8406, dt: 1247.71ms, fracRes: 0.5911, norm(attn): 0.1719, norm(output): 0.2676, norm(x): 0.6004, norm(y): 0.9758, norm:0.7385, tok/sec: 105050.13, flops:91.99, batch-reuse:1
@ 13172 train 3.7891 , allloss: 3.7987, dt: 1256.45ms, fracRes: 0.5905, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5993, norm(y): 0.9759, norm:0.6976, tok/sec: 104319.56, flops:91.35, batch-reuse:1
@ 13173 train 3.7875 , allloss: 3.7970, dt: 1272.92ms, fracRes: 0.5904, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.6002, norm(y): 0.9759, norm:0.7577, tok/sec: 102969.73, flops:90.17, batch-reuse:1
@ 13174 train 3.8895 , allloss: 3.8991, dt: 1273.92ms, fracRes: 0.5910, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5984, norm(y): 0.9756, norm:0.8091, tok/sec: 102888.39, flops:90.10, batch-reuse:1
@ 13175 train 3.7834 , allloss: 3.7931, dt: 1261.12ms, fracRes: 0.5913, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5985, norm(y): 0.9755, norm:0.7187, tok/sec: 103932.71, flops:91.01, batch-reuse:1
@ 13176 train 3.7437 , allloss: 3.7533, dt: 1267.90ms, fracRes: 0.5919, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5960, norm(y): 0.9757, norm:0.7110, tok/sec: 103376.85, flops:90.53, batch-reuse:1
@ 13177 train 3.8224 , allloss: 3.8322, dt: 1276.73ms, fracRes: 0.5930, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5950, norm(y): 0.9758, norm:0.6758, tok/sec: 102662.53, flops:89.90, batch-reuse:1
@ 13178 train 3.9188 , allloss: 3.9290, dt: 1261.02ms, fracRes: 0.5917, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5922, norm(y): 0.9755, norm:1.0791, tok/sec: 103941.65, flops:91.02, batch-reuse:1
@ 13179 train 3.8096 , allloss: 3.8195, dt: 1283.80ms, fracRes: 0.5936, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5924, norm(y): 0.9758, norm:0.7961, tok/sec: 102096.64, flops:89.40, batch-reuse:1
@ 13180 train 3.7461 , allloss: 3.7564, dt: 1266.40ms, fracRes: 0.5929, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5966, norm(y): 0.9759, norm:0.7889, tok/sec: 103499.58, flops:90.63, batch-reuse:1
@ 13181 train 3.8137 , allloss: 3.8238, dt: 1285.54ms, fracRes: 0.5919, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5969, norm(y): 0.9758, norm:0.7698, tok/sec: 101958.32, flops:89.28, batch-reuse:1
@ 13182 train 3.7461 , allloss: 3.7559, dt: 1255.65ms, fracRes: 0.5917, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5981, norm(y): 0.9757, norm:0.7209, tok/sec: 104385.83, flops:91.41, batch-reuse:1
@ 13183 train 3.8019 , allloss: 3.8116, dt: 1282.16ms, fracRes: 0.5916, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6019, norm(y): 0.9756, norm:0.7182, tok/sec: 102227.62, flops:89.52, batch-reuse:1
@ 13184 train 3.8091 , allloss: 3.8186, dt: 1288.65ms, fracRes: 0.5911, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5997, norm(y): 0.9756, norm:0.6872, tok/sec: 101712.70, flops:89.07, batch-reuse:1
@ 13185 train 3.7728 , allloss: 3.7825, dt: 1266.41ms, fracRes: 0.5915, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5995, norm(y): 0.9756, norm:0.6790, tok/sec: 103498.58, flops:90.63, batch-reuse:1
@ 13186 train 3.7394 , allloss: 3.7492, dt: 1269.70ms, fracRes: 0.5920, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6009, norm(y): 0.9757, norm:0.6786, tok/sec: 103230.37, flops:90.40, batch-reuse:1
@ 13187 train 3.7938 , allloss: 3.8034, dt: 1266.17ms, fracRes: 0.5924, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.6021, norm(y): 0.9758, norm:0.7079, tok/sec: 103518.79, flops:90.65, batch-reuse:1
@ 13188 train 3.7544 , allloss: 3.7640, dt: 1271.24ms, fracRes: 0.5922, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.5994, norm(y): 0.9755, norm:0.6992, tok/sec: 103105.57, flops:90.29, batch-reuse:1
@ 13189 train 3.7449 , allloss: 3.7547, dt: 1270.42ms, fracRes: 0.5921, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5990, norm(y): 0.9758, norm:0.7432, tok/sec: 103172.58, flops:90.35, batch-reuse:1
@ 13190 train 3.8189 , allloss: 3.8286, dt: 1279.39ms, fracRes: 0.5912, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5988, norm(y): 0.9757, norm:0.7503, tok/sec: 102448.53, flops:89.71, batch-reuse:1
@ 13191 train 3.7964 , allloss: 3.8061, dt: 1292.13ms, fracRes: 0.5910, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5962, norm(y): 0.9756, norm:0.7311, tok/sec: 101438.54, flops:88.83, batch-reuse:1
@ 13192 train 3.7228 , allloss: 3.7326, dt: 1297.33ms, fracRes: 0.5916, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5974, norm(y): 0.9758, norm:0.7035, tok/sec: 101032.18, flops:88.47, batch-reuse:1
@ 13193 train 3.7598 , allloss: 3.7699, dt: 1263.74ms, fracRes: 0.5926, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6030, norm(y): 0.9756, norm:0.8153, tok/sec: 103717.77, flops:90.82, batch-reuse:1
@ 13194 train 3.7674 , allloss: 3.7772, dt: 1282.79ms, fracRes: 0.5923, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5968, norm(y): 0.9756, norm:0.7120, tok/sec: 102177.59, flops:89.48, batch-reuse:1
@ 13195 train 3.7856 , allloss: 3.7950, dt: 1259.53ms, fracRes: 0.5920, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5981, norm(y): 0.9756, norm:0.7117, tok/sec: 104064.17, flops:91.13, batch-reuse:1
@ 13196 train 3.8443 , allloss: 3.8538, dt: 1259.80ms, fracRes: 0.5920, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6002, norm(y): 0.9755, norm:0.7193, tok/sec: 104041.50, flops:91.11, batch-reuse:1
@ 13197 train 3.7452 , allloss: 3.7546, dt: 1259.91ms, fracRes: 0.5915, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5992, norm(y): 0.9755, norm:0.7331, tok/sec: 104032.44, flops:91.10, batch-reuse:1
@ 13198 train 3.8356 , allloss: 3.8451, dt: 1265.72ms, fracRes: 0.5923, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5977, norm(y): 0.9755, norm:0.7349, tok/sec: 103554.93, flops:90.68, batch-reuse:1
@ 13199 train 3.7627 , allloss: 3.7724, dt: 1271.97ms, fracRes: 0.5932, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6023, norm(y): 0.9757, norm:0.7444, tok/sec: 103046.45, flops:90.24, batch-reuse:1
@ 13200 train 3.6968 , allloss: 3.7062, dt: 1255.16ms, fracRes: 0.5930, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5991, norm(y): 0.9756, norm:0.6537, tok/sec: 104426.88, flops:91.45, batch-reuse:1
@ 13201 train 3.7307 , allloss: 3.7404, dt: 1251.69ms, fracRes: 0.5938, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5983, norm(y): 0.9757, norm:0.7623, tok/sec: 104715.93, flops:91.70, batch-reuse:1
@ 13202 train 3.8562 , allloss: 3.8663, dt: 1263.28ms, fracRes: 0.5941, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6004, norm(y): 0.9756, norm:0.7892, tok/sec: 103755.41, flops:90.86, batch-reuse:1
@ 13203 train 3.8134 , allloss: 3.8229, dt: 1254.82ms, fracRes: 0.5940, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5974, norm(y): 0.9755, norm:0.7102, tok/sec: 104454.42, flops:91.47, batch-reuse:1
@ 13204 train 3.7881 , allloss: 3.7974, dt: 1258.39ms, fracRes: 0.5932, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5966, norm(y): 0.9755, norm:0.7480, tok/sec: 104158.81, flops:91.21, batch-reuse:1
@ 13205 train 3.6950 , allloss: 3.7047, dt: 1253.17ms, fracRes: 0.5931, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5957, norm(y): 0.9757, norm:0.7098, tok/sec: 104592.13, flops:91.59, batch-reuse:1
@ 13206 train 3.6487 , allloss: 3.6583, dt: 1254.98ms, fracRes: 0.5919, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5917, norm(y): 0.9757, norm:0.7372, tok/sec: 104441.52, flops:91.46, batch-reuse:1
@ 13207 train 3.6346 , allloss: 3.6443, dt: 1278.68ms, fracRes: 0.5909, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5912, norm(y): 0.9756, norm:0.7496, tok/sec: 102505.45, flops:89.76, batch-reuse:1
@ 13208 train 3.6195 , allloss: 3.6295, dt: 1255.94ms, fracRes: 0.5915, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5950, norm(y): 0.9759, norm:0.7583, tok/sec: 104361.54, flops:91.39, batch-reuse:1
@ 13209 train 3.4588 , allloss: 3.4685, dt: 1254.91ms, fracRes: 0.5919, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5968, norm(y): 0.9761, norm:0.7070, tok/sec: 104447.69, flops:91.46, batch-reuse:1
@ 13210 train 3.5674 , allloss: 3.5771, dt: 1266.91ms, fracRes: 0.5924, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5971, norm(y): 0.9758, norm:0.7981, tok/sec: 103458.36, flops:90.60, batch-reuse:1
@ 13211 train 3.5878 , allloss: 3.5983, dt: 1276.65ms, fracRes: 0.5920, norm(attn): 0.1729, norm(output): 0.2637, norm(x): 0.5955, norm(y): 0.9756, norm:0.7326, tok/sec: 102669.03, flops:89.91, batch-reuse:1
@ 13212 train 3.5796 , allloss: 3.5894, dt: 1289.87ms, fracRes: 0.5915, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5927, norm(y): 0.9757, norm:0.7248, tok/sec: 101616.42, flops:88.98, batch-reuse:1
@ 13213 train 3.5200 , allloss: 3.5298, dt: 1276.48ms, fracRes: 0.5914, norm(attn): 0.1729, norm(output): 0.2637, norm(x): 0.5951, norm(y): 0.9757, norm:0.7367, tok/sec: 102682.63, flops:89.92, batch-reuse:1
@ 13214 train 3.5743 , allloss: 3.5843, dt: 1274.26ms, fracRes: 0.5917, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5970, norm(y): 0.9756, norm:0.7474, tok/sec: 102861.00, flops:90.07, batch-reuse:1
@ 13215 train 3.6397 , allloss: 3.6497, dt: 1291.68ms, fracRes: 0.5928, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5972, norm(y): 0.9757, norm:0.7865, tok/sec: 101473.78, flops:88.86, batch-reuse:1
@ 13216 train 3.6914 , allloss: 3.7011, dt: 1265.24ms, fracRes: 0.5916, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5963, norm(y): 0.9755, norm:0.7730, tok/sec: 103594.23, flops:90.72, batch-reuse:1
@ 13217 train 3.7418 , allloss: 3.7520, dt: 1277.65ms, fracRes: 0.5913, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.6051, norm(y): 0.9754, norm:0.7406, tok/sec: 102588.66, flops:89.84, batch-reuse:1
@ 13218 train 3.6197 , allloss: 3.6300, dt: 1269.27ms, fracRes: 0.5905, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.5986, norm(y): 0.9756, norm:0.7156, tok/sec: 103265.62, flops:90.43, batch-reuse:1
@ 13219 train 3.6113 , allloss: 3.6210, dt: 1277.21ms, fracRes: 0.5905, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.5928, norm(y): 0.9755, norm:0.7533, tok/sec: 102623.34, flops:89.87, batch-reuse:1
@ 13220 train 3.6644 , allloss: 3.6744, dt: 1382.14ms, fracRes: 0.5914, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5943, norm(y): 0.9754, norm:0.7166, tok/sec: 94832.54, flops:83.04, batch-reuse:1
@ 13221 train 3.5591 , allloss: 3.5694, dt: 1277.75ms, fracRes: 0.5920, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5945, norm(y): 0.9756, norm:0.7505, tok/sec: 102580.07, flops:89.83, batch-reuse:1
@ 13222 train 3.7367 , allloss: 3.7467, dt: 1354.96ms, fracRes: 0.5919, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5931, norm(y): 0.9753, norm:0.7757, tok/sec: 96735.11, flops:84.71, batch-reuse:1
@ 13223 train 3.5270 , allloss: 3.5368, dt: 1290.26ms, fracRes: 0.5929, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5943, norm(y): 0.9757, norm:0.7103, tok/sec: 101585.40, flops:88.96, batch-reuse:1
@ 13224 train 3.6674 , allloss: 3.6772, dt: 1270.21ms, fracRes: 0.5939, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5954, norm(y): 0.9757, norm:0.7638, tok/sec: 103189.16, flops:90.36, batch-reuse:1
@ 13225 train 3.6450 , allloss: 3.6547, dt: 1259.18ms, fracRes: 0.5929, norm(attn): 0.1729, norm(output): 0.2637, norm(x): 0.5951, norm(y): 0.9756, norm:0.8505, tok/sec: 104093.33, flops:91.15, batch-reuse:1
@ 13226 train 3.7372 , allloss: 3.7471, dt: 1269.73ms, fracRes: 0.5917, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5965, norm(y): 0.9755, norm:0.9312, tok/sec: 103227.91, flops:90.40, batch-reuse:1
@ 13227 train 3.6646 , allloss: 3.6743, dt: 1276.41ms, fracRes: 0.5914, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5983, norm(y): 0.9755, norm:0.7760, tok/sec: 102688.21, flops:89.92, batch-reuse:1
@ 13228 train 3.6027 , allloss: 3.6127, dt: 1284.98ms, fracRes: 0.5918, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6013, norm(y): 0.9756, norm:0.8014, tok/sec: 102003.18, flops:89.32, batch-reuse:1
@ 13229 train 3.6040 , allloss: 3.6136, dt: 1289.76ms, fracRes: 0.5921, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5944, norm(y): 0.9756, norm:0.8365, tok/sec: 101625.34, flops:88.99, batch-reuse:1
@ 13230 train 3.5135 , allloss: 3.5235, dt: 1271.29ms, fracRes: 0.5911, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5937, norm(y): 0.9758, norm:0.7721, tok/sec: 103101.32, flops:90.28, batch-reuse:1
@ 13231 train 3.6464 , allloss: 3.6563, dt: 1254.69ms, fracRes: 0.5919, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5944, norm(y): 0.9756, norm:0.7789, tok/sec: 104465.89, flops:91.48, batch-reuse:1
@ 13232 train 3.6194 , allloss: 3.6289, dt: 1273.75ms, fracRes: 0.5930, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5933, norm(y): 0.9755, norm:0.8985, tok/sec: 102902.39, flops:90.11, batch-reuse:1
@ 13233 train 3.6250 , allloss: 3.6349, dt: 1252.80ms, fracRes: 0.5937, norm(attn): 0.1719, norm(output): 0.2637, norm(x): 0.5961, norm(y): 0.9756, norm:0.7993, tok/sec: 104623.15, flops:91.62, batch-reuse:1
@ 13234 train 3.5605 , allloss: 3.5705, dt: 1264.27ms, fracRes: 0.5926, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5990, norm(y): 0.9757, norm:0.8301, tok/sec: 103674.34, flops:90.79, batch-reuse:1
@ 13235 train 3.5876 , allloss: 3.5976, dt: 1268.73ms, fracRes: 0.5919, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.5993, norm(y): 0.9757, norm:0.7518, tok/sec: 103309.94, flops:90.47, batch-reuse:1
@ 13236 train 3.5587 , allloss: 3.5686, dt: 1256.26ms, fracRes: 0.5912, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.5992, norm(y): 0.9756, norm:0.7245, tok/sec: 104335.31, flops:91.36, batch-reuse:1
@ 13237 train 3.6302 , allloss: 3.6398, dt: 1256.30ms, fracRes: 0.5914, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5983, norm(y): 0.9755, norm:0.7368, tok/sec: 104332.11, flops:91.36, batch-reuse:1
@ 13238 train 3.6557 , allloss: 3.6656, dt: 1253.03ms, fracRes: 0.5911, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5976, norm(y): 0.9754, norm:0.7659, tok/sec: 104603.97, flops:91.60, batch-reuse:1
@ 13239 train 3.5753 , allloss: 3.5849, dt: 1276.81ms, fracRes: 0.5904, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5989, norm(y): 0.9754, norm:0.7829, tok/sec: 102656.05, flops:89.89, batch-reuse:1
@ 13240 train 3.6780 , allloss: 3.6877, dt: 1245.46ms, fracRes: 0.5906, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5979, norm(y): 0.9754, norm:0.7546, tok/sec: 105239.95, flops:92.16, batch-reuse:1
@ 13241 train 3.5397 , allloss: 3.5496, dt: 1264.02ms, fracRes: 0.5904, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5925, norm(y): 0.9753, norm:0.8498, tok/sec: 103694.47, flops:90.80, batch-reuse:1
@ 13242 train 3.5432 , allloss: 3.5530, dt: 1284.61ms, fracRes: 0.5906, norm(attn): 0.1729, norm(output): 0.2637, norm(x): 0.5883, norm(y): 0.9755, norm:0.8522, tok/sec: 102032.73, flops:89.35, batch-reuse:1
@ 13243 train 3.7241 , allloss: 3.7345, dt: 1280.89ms, fracRes: 0.5923, norm(attn): 0.1719, norm(output): 0.2676, norm(x): 0.5928, norm(y): 0.9759, norm:1.3565, tok/sec: 102328.51, flops:89.61, batch-reuse:1
@ 13244 train 3.6711 , allloss: 3.6810, dt: 1271.80ms, fracRes: 0.5920, norm(attn): 0.1729, norm(output): 0.2637, norm(x): 0.5913, norm(y): 0.9756, norm:0.9808, tok/sec: 103060.54, flops:90.25, batch-reuse:1
@ 13245 train 3.6195 , allloss: 3.6299, dt: 1249.16ms, fracRes: 0.5929, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5984, norm(y): 0.9754, norm:0.7699, tok/sec: 104928.51, flops:91.88, batch-reuse:1
@ 13246 train 3.5835 , allloss: 3.5934, dt: 1290.58ms, fracRes: 0.5928, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6001, norm(y): 0.9754, norm:0.8747, tok/sec: 101560.63, flops:88.94, batch-reuse:1
@ 13247 train 3.5900 , allloss: 3.5996, dt: 1295.50ms, fracRes: 0.5920, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5979, norm(y): 0.9751, norm:0.9702, tok/sec: 101175.04, flops:88.60, batch-reuse:1
@ 13248 train 3.5116 , allloss: 3.5211, dt: 1288.56ms, fracRes: 0.5921, norm(attn): 0.1748, norm(output): 0.2676, norm(x): 0.6023, norm(y): 0.9754, norm:0.7753, tok/sec: 101719.81, flops:89.07, batch-reuse:1
@ 13249 train 3.5882 , allloss: 3.5979, dt: 1282.09ms, fracRes: 0.5919, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6024, norm(y): 0.9753, norm:0.8428, tok/sec: 102232.89, flops:89.52, batch-reuse:1
@ 13250 train 3.5882 , allloss: 3.5978, dt: 1282.64ms, fracRes: 0.5917, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5985, norm(y): 0.9752, norm:0.8019, tok/sec: 102188.88, flops:89.49, batch-reuse:1
@ 13251 train 3.6923 , allloss: 3.7018, dt: 1271.10ms, fracRes: 0.5908, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5935, norm(y): 0.9753, norm:0.7366, tok/sec: 103117.21, flops:90.30, batch-reuse:1
@ 13252 train 3.5967 , allloss: 3.6072, dt: 1272.38ms, fracRes: 0.5919, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5994, norm(y): 0.9757, norm:0.8828, tok/sec: 103013.34, flops:90.21, batch-reuse:1
@ 13253 train 3.9167 , allloss: 3.9265, dt: 1274.15ms, fracRes: 0.5905, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5971, norm(y): 0.9753, norm:0.8728, tok/sec: 102870.02, flops:90.08, batch-reuse:1
@ 13254 train 3.8770 , allloss: 3.8866, dt: 1274.65ms, fracRes: 0.5910, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.6015, norm(y): 0.9751, norm:0.7432, tok/sec: 102830.15, flops:90.05, batch-reuse:1
@ 13255 train 3.7618 , allloss: 3.7716, dt: 1268.14ms, fracRes: 0.5913, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5999, norm(y): 0.9751, norm:0.9706, tok/sec: 103357.86, flops:90.51, batch-reuse:1
@ 13256 train 3.8216 , allloss: 3.8316, dt: 1256.79ms, fracRes: 0.5923, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.6046, norm(y): 0.9750, norm:1.0562, tok/sec: 104291.37, flops:91.33, batch-reuse:1
@ 13257 train 3.8436 , allloss: 3.8532, dt: 1272.98ms, fracRes: 0.5925, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5998, norm(y): 0.9751, norm:0.7182, tok/sec: 102964.72, flops:90.16, batch-reuse:1
@ 13258 train 3.8914 , allloss: 3.9015, dt: 1297.55ms, fracRes: 0.5925, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6040, norm(y): 0.9749, norm:0.9729, tok/sec: 101014.64, flops:88.46, batch-reuse:1
@ 13259 train 3.8491 , allloss: 3.8593, dt: 1252.43ms, fracRes: 0.5927, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.6013, norm(y): 0.9751, norm:0.9056, tok/sec: 104654.31, flops:91.64, batch-reuse:1
@ 13260 train 3.7961 , allloss: 3.8057, dt: 1262.46ms, fracRes: 0.5919, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5972, norm(y): 0.9752, norm:0.9177, tok/sec: 103822.91, flops:90.92, batch-reuse:1
@ 13261 train 3.8220 , allloss: 3.8320, dt: 1265.81ms, fracRes: 0.5925, norm(attn): 0.1738, norm(output): 0.2676, norm(x): 0.6001, norm(y): 0.9756, norm:0.7806, tok/sec: 103548.04, flops:90.68, batch-reuse:1
@ 13262 train 3.8022 , allloss: 3.8121, dt: 1268.13ms, fracRes: 0.5920, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5950, norm(y): 0.9755, norm:0.8451, tok/sec: 103358.60, flops:90.51, batch-reuse:1
@ 13263 train 3.9859 , allloss: 3.9957, dt: 1295.74ms, fracRes: 0.5915, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5931, norm(y): 0.9754, norm:0.9143, tok/sec: 101156.27, flops:88.58, batch-reuse:1
@ 13264 train 3.7750 , allloss: 3.7855, dt: 1242.75ms, fracRes: 0.5923, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5974, norm(y): 0.9754, norm:0.7403, tok/sec: 105469.57, flops:92.36, batch-reuse:1
@ 13265 train 3.8454 , allloss: 3.8547, dt: 1289.25ms, fracRes: 0.5920, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5938, norm(y): 0.9752, norm:0.9932, tok/sec: 101665.41, flops:89.03, batch-reuse:1
@ 13266 train 3.8659 , allloss: 3.8753, dt: 1251.52ms, fracRes: 0.5921, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.5952, norm(y): 0.9751, norm:1.0404, tok/sec: 104730.53, flops:91.71, batch-reuse:1
@ 13267 train 3.9087 , allloss: 3.9182, dt: 1254.59ms, fracRes: 0.5917, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5979, norm(y): 0.9752, norm:1.0052, tok/sec: 104473.99, flops:91.49, batch-reuse:1
@ 13268 train 3.7678 , allloss: 3.7777, dt: 1277.31ms, fracRes: 0.5914, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6012, norm(y): 0.9752, norm:0.9054, tok/sec: 102615.95, flops:89.86, batch-reuse:1
@ 13269 train 3.8262 , allloss: 3.8361, dt: 1265.27ms, fracRes: 0.5917, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6023, norm(y): 0.9753, norm:0.8058, tok/sec: 103591.92, flops:90.71, batch-reuse:1
@ 13270 train 3.8564 , allloss: 3.8664, dt: 1273.55ms, fracRes: 0.5913, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5986, norm(y): 0.9752, norm:1.0468, tok/sec: 102918.69, flops:90.12, batch-reuse:1
@ 13271 train 3.8575 , allloss: 3.8676, dt: 1282.92ms, fracRes: 0.5916, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5979, norm(y): 0.9753, norm:0.7722, tok/sec: 102166.90, flops:89.47, batch-reuse:1
@ 13272 train 3.8900 , allloss: 3.9002, dt: 1275.33ms, fracRes: 0.5920, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5973, norm(y): 0.9751, norm:1.0000, tok/sec: 102774.87, flops:90.00, batch-reuse:1
@ 13273 train 3.8065 , allloss: 3.8171, dt: 1280.77ms, fracRes: 0.5923, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5976, norm(y): 0.9750, norm:0.8490, tok/sec: 102338.68, flops:89.62, batch-reuse:1
@ 13274 train 3.8530 , allloss: 3.8627, dt: 1274.12ms, fracRes: 0.5923, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5961, norm(y): 0.9751, norm:0.8172, tok/sec: 102872.89, flops:90.08, batch-reuse:1
@ 13275 train 3.8237 , allloss: 3.8336, dt: 1292.58ms, fracRes: 0.5925, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5979, norm(y): 0.9751, norm:0.9221, tok/sec: 101403.76, flops:88.80, batch-reuse:1
@ 13276 train 3.8089 , allloss: 3.8189, dt: 1317.09ms, fracRes: 0.5923, norm(attn): 0.1719, norm(output): 0.2676, norm(x): 0.6013, norm(y): 0.9750, norm:0.8130, tok/sec: 99516.23, flops:87.14, batch-reuse:1
@ 13277 train 3.8138 , allloss: 3.8237, dt: 1262.22ms, fracRes: 0.5920, norm(attn): 0.1719, norm(output): 0.2676, norm(x): 0.6025, norm(y): 0.9750, norm:0.7961, tok/sec: 103842.05, flops:90.93, batch-reuse:1
@ 13278 train 3.7082 , allloss: 3.7183, dt: 1268.43ms, fracRes: 0.5915, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.6027, norm(y): 0.9754, norm:0.7466, tok/sec: 103334.00, flops:90.49, batch-reuse:1
@ 13279 train 3.8169 , allloss: 3.8265, dt: 1285.72ms, fracRes: 0.5908, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.6010, norm(y): 0.9751, norm:0.8033, tok/sec: 101944.52, flops:89.27, batch-reuse:1
@ 13280 train 3.8249 , allloss: 3.8349, dt: 1253.06ms, fracRes: 0.5907, norm(attn): 0.1748, norm(output): 0.2695, norm(x): 0.6039, norm(y): 0.9750, norm:0.7569, tok/sec: 104601.63, flops:91.60, batch-reuse:1
@ 13281 train 3.8198 , allloss: 3.8296, dt: 1274.18ms, fracRes: 0.5914, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.6010, norm(y): 0.9751, norm:0.8386, tok/sec: 102868.06, flops:90.08, batch-reuse:1
@ 13282 train 3.7975 , allloss: 3.8074, dt: 1278.35ms, fracRes: 0.5916, norm(attn): 0.1738, norm(output): 0.2676, norm(x): 0.6008, norm(y): 0.9750, norm:0.8044, tok/sec: 102532.16, flops:89.79, batch-reuse:1
@ 13283 train 3.8293 , allloss: 3.8392, dt: 1262.27ms, fracRes: 0.5922, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5977, norm(y): 0.9750, norm:0.9611, tok/sec: 103838.46, flops:90.93, batch-reuse:1
@ 13284 train 3.8622 , allloss: 3.8723, dt: 1285.10ms, fracRes: 0.5933, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5990, norm(y): 0.9750, norm:0.9290, tok/sec: 101993.58, flops:89.31, batch-reuse:1
@ 13285 train 3.8462 , allloss: 3.8561, dt: 1280.05ms, fracRes: 0.5922, norm(attn): 0.1738, norm(output): 0.2676, norm(x): 0.6013, norm(y): 0.9749, norm:0.7742, tok/sec: 102396.36, flops:89.67, batch-reuse:1
@ 13286 train 3.7758 , allloss: 3.7856, dt: 1261.04ms, fracRes: 0.5920, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.6037, norm(y): 0.9751, norm:0.9006, tok/sec: 103939.86, flops:91.02, batch-reuse:1
@ 13287 train 3.8059 , allloss: 3.8156, dt: 1253.96ms, fracRes: 0.5908, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.6002, norm(y): 0.9750, norm:0.7368, tok/sec: 104526.15, flops:91.53, batch-reuse:1
@ 13288 train 3.8862 , allloss: 3.8960, dt: 1271.06ms, fracRes: 0.5910, norm(attn): 0.1719, norm(output): 0.2676, norm(x): 0.5980, norm(y): 0.9749, norm:0.8663, tok/sec: 103120.62, flops:90.30, batch-reuse:1
@ 13289 train 3.8155 , allloss: 3.8256, dt: 1265.57ms, fracRes: 0.5918, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.6008, norm(y): 0.9750, norm:0.8420, tok/sec: 103567.80, flops:90.69, batch-reuse:1
@ 13290 train 4.1022 , allloss: 4.1125, dt: 1292.34ms, fracRes: 0.5915, norm(attn): 0.1719, norm(output): 0.2695, norm(x): 0.6042, norm(y): 0.9747, norm:1.1103, tok/sec: 101421.96, flops:88.81, batch-reuse:1
@ 13291 train 3.9152 , allloss: 3.9254, dt: 1282.60ms, fracRes: 0.5908, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.6012, norm(y): 0.9747, norm:0.8426, tok/sec: 102192.12, flops:89.49, batch-reuse:1
@ 13292 train 3.7711 , allloss: 3.7816, dt: 1285.09ms, fracRes: 0.5908, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.6019, norm(y): 0.9749, norm:0.7999, tok/sec: 101994.34, flops:89.31, batch-reuse:1
@ 13293 train 3.8712 , allloss: 3.8814, dt: 1285.33ms, fracRes: 0.5912, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.6029, norm(y): 0.9747, norm:0.7430, tok/sec: 101975.40, flops:89.30, batch-reuse:1
@ 13294 train 3.9234 , allloss: 3.9333, dt: 1272.34ms, fracRes: 0.5922, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6010, norm(y): 0.9749, norm:0.8893, tok/sec: 103016.47, flops:90.21, batch-reuse:1
@ 13295 train 3.8435 , allloss: 3.8533, dt: 1283.39ms, fracRes: 0.5917, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.6038, norm(y): 0.9746, norm:0.7529, tok/sec: 102129.27, flops:89.43, batch-reuse:1
@ 13296 train 3.8210 , allloss: 3.8310, dt: 1262.81ms, fracRes: 0.5912, norm(attn): 0.1738, norm(output): 0.2676, norm(x): 0.6036, norm(y): 0.9750, norm:0.7586, tok/sec: 103793.61, flops:90.89, batch-reuse:1
@ 13297 train 3.7998 , allloss: 3.8096, dt: 1286.12ms, fracRes: 0.5902, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.6003, norm(y): 0.9749, norm:0.7101, tok/sec: 101912.92, flops:89.24, batch-reuse:1
@ 13298 train 3.7967 , allloss: 3.8067, dt: 1283.51ms, fracRes: 0.5909, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.6026, norm(y): 0.9751, norm:0.6871, tok/sec: 102120.25, flops:89.43, batch-reuse:1
@ 13299 train 3.8099 , allloss: 3.8196, dt: 1267.48ms, fracRes: 0.5903, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5989, norm(y): 0.9749, norm:0.7167, tok/sec: 103411.64, flops:90.56, batch-reuse:1
@ 13300 train 3.8163 , allloss: 3.8260, dt: 1283.32ms, fracRes: 0.5910, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5977, norm(y): 0.9749, norm:0.6857, tok/sec: 102134.81, flops:89.44, batch-reuse:1
@ 13301 train 3.7155 , allloss: 3.7253, dt: 1253.07ms, fracRes: 0.5913, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5961, norm(y): 0.9751, norm:0.6882, tok/sec: 104600.43, flops:91.60, batch-reuse:1
@ 13302 train 3.7542 , allloss: 3.7644, dt: 1252.66ms, fracRes: 0.5921, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5981, norm(y): 0.9748, norm:0.7222, tok/sec: 104634.97, flops:91.63, batch-reuse:1
@ 13303 train 3.7699 , allloss: 3.7798, dt: 1283.18ms, fracRes: 0.5924, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5942, norm(y): 0.9749, norm:0.6979, tok/sec: 102146.38, flops:89.45, batch-reuse:1
@ 13304 train 3.7102 , allloss: 3.7202, dt: 1272.03ms, fracRes: 0.5937, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5988, norm(y): 0.9750, norm:0.6933, tok/sec: 103041.93, flops:90.23, batch-reuse:1
@ 13305 train 3.7581 , allloss: 3.7680, dt: 1261.64ms, fracRes: 0.5932, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5977, norm(y): 0.9748, norm:0.6831, tok/sec: 103890.31, flops:90.98, batch-reuse:1
@ 13306 train 3.8042 , allloss: 3.8140, dt: 1262.65ms, fracRes: 0.5928, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5962, norm(y): 0.9747, norm:0.6945, tok/sec: 103807.05, flops:90.90, batch-reuse:1
@ 13307 train 3.7858 , allloss: 3.7958, dt: 1287.89ms, fracRes: 0.5928, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5993, norm(y): 0.9750, norm:0.7375, tok/sec: 101772.76, flops:89.12, batch-reuse:1
@ 13308 train 3.8357 , allloss: 3.8458, dt: 1264.13ms, fracRes: 0.5918, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5992, norm(y): 0.9748, norm:0.7016, tok/sec: 103685.35, flops:90.80, batch-reuse:1
@ 13309 train 3.8181 , allloss: 3.8281, dt: 1272.01ms, fracRes: 0.5903, norm(attn): 0.1738, norm(output): 0.2676, norm(x): 0.5986, norm(y): 0.9746, norm:0.6850, tok/sec: 103042.90, flops:90.23, batch-reuse:1
@ 13310 train 3.7460 , allloss: 3.7562, dt: 1269.34ms, fracRes: 0.5906, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5981, norm(y): 0.9750, norm:0.7146, tok/sec: 103259.94, flops:90.42, batch-reuse:1
@ 13311 train 3.9135 , allloss: 3.9230, dt: 1267.13ms, fracRes: 0.5918, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5947, norm(y): 0.9751, norm:0.8743, tok/sec: 103439.75, flops:90.58, batch-reuse:1
@ 13312 train 3.8362 , allloss: 3.8456, dt: 1264.63ms, fracRes: 0.5907, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5970, norm(y): 0.9746, norm:0.8090, tok/sec: 103644.71, flops:90.76, batch-reuse:1
@ 13313 train 3.8292 , allloss: 3.8395, dt: 1267.78ms, fracRes: 0.5921, norm(attn): 0.1719, norm(output): 0.2695, norm(x): 0.6002, norm(y): 0.9747, norm:0.8115, tok/sec: 103387.39, flops:90.53, batch-reuse:1
@ 13314 train 3.8041 , allloss: 3.8137, dt: 1272.72ms, fracRes: 0.5918, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.5949, norm(y): 0.9748, norm:0.7225, tok/sec: 102985.65, flops:90.18, batch-reuse:1
@ 13315 train 3.7488 , allloss: 3.7587, dt: 1271.25ms, fracRes: 0.5922, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5970, norm(y): 0.9749, norm:0.8074, tok/sec: 103104.59, flops:90.29, batch-reuse:1
@ 13316 train 3.8122 , allloss: 3.8221, dt: 1277.95ms, fracRes: 0.5917, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5964, norm(y): 0.9748, norm:0.7862, tok/sec: 102564.35, flops:89.81, batch-reuse:1
@ 13317 train 3.8124 , allloss: 3.8220, dt: 1269.74ms, fracRes: 0.5923, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5953, norm(y): 0.9747, norm:0.7135, tok/sec: 103227.73, flops:90.40, batch-reuse:1
@ 13318 train 3.8185 , allloss: 3.8283, dt: 1282.97ms, fracRes: 0.5918, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5972, norm(y): 0.9746, norm:0.7391, tok/sec: 102162.67, flops:89.46, batch-reuse:1
@ 13319 train 3.8116 , allloss: 3.8212, dt: 1284.58ms, fracRes: 0.5923, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5977, norm(y): 0.9749, norm:0.7136, tok/sec: 102035.00, flops:89.35, batch-reuse:1
@ 13320 train 3.8192 , allloss: 3.8289, dt: 1262.05ms, fracRes: 0.5919, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5989, norm(y): 0.9748, norm:0.6779, tok/sec: 103856.33, flops:90.95, batch-reuse:1
@ 13321 train 3.7231 , allloss: 3.7348, dt: 1292.73ms, fracRes: 0.5922, norm(attn): 0.1748, norm(output): 0.2676, norm(x): 0.6042, norm(y): 0.9747, norm:1.3079, tok/sec: 101391.86, flops:88.79, batch-reuse:1
@ 13322 train 3.8247 , allloss: 3.8348, dt: 1263.27ms, fracRes: 0.5909, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5950, norm(y): 0.9745, norm:0.7338, tok/sec: 103756.41, flops:90.86, batch-reuse:1
@ 13323 train 3.8605 , allloss: 3.8703, dt: 1283.50ms, fracRes: 0.5917, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5950, norm(y): 0.9746, norm:0.7234, tok/sec: 102120.88, flops:89.43, batch-reuse:1
@ 13324 train 3.7573 , allloss: 3.7669, dt: 1269.34ms, fracRes: 0.5923, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.5969, norm(y): 0.9748, norm:0.7708, tok/sec: 103260.13, flops:90.42, batch-reuse:1
@ 13325 train 3.8378 , allloss: 3.8472, dt: 1285.83ms, fracRes: 0.5919, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5978, norm(y): 0.9745, norm:0.7117, tok/sec: 101935.39, flops:89.26, batch-reuse:1
@ 13326 train 3.7454 , allloss: 3.7552, dt: 1283.67ms, fracRes: 0.5921, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5995, norm(y): 0.9750, norm:0.7880, tok/sec: 102106.92, flops:89.41, batch-reuse:1
@ 13327 train 3.9013 , allloss: 3.9116, dt: 1269.59ms, fracRes: 0.5916, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.5966, norm(y): 0.9747, norm:0.7786, tok/sec: 103239.62, flops:90.41, batch-reuse:1
@ 13328 train 3.8458 , allloss: 3.8554, dt: 1260.66ms, fracRes: 0.5911, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5946, norm(y): 0.9746, norm:0.7555, tok/sec: 103970.88, flops:91.05, batch-reuse:1
@ 13329 train 3.8612 , allloss: 3.8709, dt: 1264.95ms, fracRes: 0.5907, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.5997, norm(y): 0.9746, norm:0.7153, tok/sec: 103618.03, flops:90.74, batch-reuse:1
@ 13330 train 3.7220 , allloss: 3.7314, dt: 1276.11ms, fracRes: 0.5900, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.5981, norm(y): 0.9746, norm:0.7485, tok/sec: 102711.83, flops:89.94, batch-reuse:1
@ 13331 train 3.8132 , allloss: 3.8230, dt: 1317.63ms, fracRes: 0.5908, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.5979, norm(y): 0.9749, norm:0.7295, tok/sec: 99475.86, flops:87.11, batch-reuse:1
@ 13332 train 3.8725 , allloss: 3.8821, dt: 1289.29ms, fracRes: 0.5915, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5953, norm(y): 0.9744, norm:0.7432, tok/sec: 101662.22, flops:89.02, batch-reuse:1
@ 13333 train 3.8109 , allloss: 3.8208, dt: 1283.33ms, fracRes: 0.5917, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5924, norm(y): 0.9746, norm:0.7435, tok/sec: 102134.16, flops:89.44, batch-reuse:1
@ 13334 train 3.8162 , allloss: 3.8257, dt: 1305.29ms, fracRes: 0.5919, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5941, norm(y): 0.9745, norm:0.7302, tok/sec: 100415.89, flops:87.93, batch-reuse:1
@ 13335 train 3.8215 , allloss: 3.8308, dt: 1261.55ms, fracRes: 0.5920, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5989, norm(y): 0.9744, norm:0.8477, tok/sec: 103897.83, flops:90.98, batch-reuse:1
@ 13336 train 3.8137 , allloss: 3.8233, dt: 1261.57ms, fracRes: 0.5921, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.6028, norm(y): 0.9744, norm:0.7495, tok/sec: 103896.26, flops:90.98, batch-reuse:1
@ 13337 train 3.8576 , allloss: 3.8677, dt: 1273.50ms, fracRes: 0.5930, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6026, norm(y): 0.9746, norm:0.7427, tok/sec: 102922.64, flops:90.13, batch-reuse:1
@ 13338 train 3.7954 , allloss: 3.8051, dt: 1280.91ms, fracRes: 0.5918, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5980, norm(y): 0.9745, norm:0.9188, tok/sec: 102327.33, flops:89.61, batch-reuse:1
@ 13339 train 3.8104 , allloss: 3.8199, dt: 1269.77ms, fracRes: 0.5907, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.5975, norm(y): 0.9744, norm:0.9594, tok/sec: 103225.23, flops:90.39, batch-reuse:1
@ 13340 train 3.9314 , allloss: 3.9409, dt: 1297.49ms, fracRes: 0.5901, norm(attn): 0.1719, norm(output): 0.2676, norm(x): 0.5958, norm(y): 0.9744, norm:0.7715, tok/sec: 101019.86, flops:88.46, batch-reuse:1
@ 13341 train 3.7885 , allloss: 3.7982, dt: 1307.85ms, fracRes: 0.5913, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5996, norm(y): 0.9746, norm:0.7645, tok/sec: 100219.62, flops:87.76, batch-reuse:1
@ 13342 train 3.7736 , allloss: 3.7831, dt: 1263.13ms, fracRes: 0.5917, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5995, norm(y): 0.9744, norm:0.8762, tok/sec: 103767.34, flops:90.87, batch-reuse:1
@ 13343 train 3.8352 , allloss: 3.8446, dt: 1262.67ms, fracRes: 0.5917, norm(attn): 0.1719, norm(output): 0.2676, norm(x): 0.5983, norm(y): 0.9742, norm:0.7264, tok/sec: 103805.03, flops:90.90, batch-reuse:1
@ 13344 train 3.8241 , allloss: 3.8339, dt: 1255.37ms, fracRes: 0.5930, norm(attn): 0.1719, norm(output): 0.2676, norm(x): 0.5986, norm(y): 0.9743, norm:0.8695, tok/sec: 104409.17, flops:91.43, batch-reuse:1
@ 13345 train 3.8069 , allloss: 3.8165, dt: 1281.26ms, fracRes: 0.5923, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.5980, norm(y): 0.9744, norm:0.7958, tok/sec: 102298.96, flops:89.58, batch-reuse:1
@ 13346 train 3.6867 , allloss: 3.6965, dt: 1293.49ms, fracRes: 0.5928, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5985, norm(y): 0.9748, norm:0.7787, tok/sec: 101331.95, flops:88.73, batch-reuse:1
@ 13347 train 3.8040 , allloss: 3.8138, dt: 1291.77ms, fracRes: 0.5921, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5947, norm(y): 0.9745, norm:0.7420, tok/sec: 101467.06, flops:88.85, batch-reuse:1
@ 13348 train 3.7714 , allloss: 3.7820, dt: 1281.73ms, fracRes: 0.5917, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.5969, norm(y): 0.9747, norm:1.1570, tok/sec: 102261.94, flops:89.55, batch-reuse:1
@ 13349 train 3.9818 , allloss: 3.9934, dt: 1284.78ms, fracRes: 0.5917, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5950, norm(y): 0.9741, norm:2.7803, tok/sec: 102019.25, flops:89.34, batch-reuse:1
@ 13350 train 3.8070 , allloss: 3.8194, dt: 1313.86ms, fracRes: 0.5931, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5961, norm(y): 0.9742, norm:1.2033, tok/sec: 99761.30, flops:87.36, batch-reuse:1
@ 13351 train 3.8705 , allloss: 3.8805, dt: 1303.73ms, fracRes: 0.5926, norm(attn): 0.1709, norm(output): 0.2656, norm(x): 0.5951, norm(y): 0.9743, norm:0.8410, tok/sec: 100536.43, flops:88.04, batch-reuse:1
@ 13352 train 3.7399 , allloss: 3.7499, dt: 1275.49ms, fracRes: 0.5919, norm(attn): 0.1719, norm(output): 0.2695, norm(x): 0.6033, norm(y): 0.9745, norm:0.8505, tok/sec: 102761.96, flops:89.99, batch-reuse:1
@ 13353 train 3.7411 , allloss: 3.7511, dt: 1269.02ms, fracRes: 0.5919, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.6030, norm(y): 0.9744, norm:0.8213, tok/sec: 103286.38, flops:90.45, batch-reuse:1
@ 13354 train 3.7200 , allloss: 3.7298, dt: 1298.47ms, fracRes: 0.5922, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.6073, norm(y): 0.9744, norm:0.7642, tok/sec: 100943.18, flops:88.39, batch-reuse:1
@ 13355 train 3.8463 , allloss: 3.8559, dt: 1267.78ms, fracRes: 0.5911, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.6079, norm(y): 0.9743, norm:0.8258, tok/sec: 103386.92, flops:90.53, batch-reuse:1
@ 13356 train 3.6458 , allloss: 3.6558, dt: 1278.81ms, fracRes: 0.5901, norm(attn): 0.1748, norm(output): 0.2715, norm(x): 0.6093, norm(y): 0.9743, norm:0.7463, tok/sec: 102494.96, flops:89.75, batch-reuse:1
@ 13357 train 3.7442 , allloss: 3.7542, dt: 1297.85ms, fracRes: 0.5904, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.6059, norm(y): 0.9744, norm:0.7711, tok/sec: 100991.41, flops:88.44, batch-reuse:1
@ 13358 train 3.7760 , allloss: 3.7859, dt: 1279.74ms, fracRes: 0.5907, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.6029, norm(y): 0.9745, norm:0.7115, tok/sec: 102421.03, flops:89.69, batch-reuse:1
@ 13359 train 3.8093 , allloss: 3.8207, dt: 1269.13ms, fracRes: 0.5920, norm(attn): 0.1738, norm(output): 0.2715, norm(x): 0.6062, norm(y): 0.9744, norm:1.3021, tok/sec: 103276.85, flops:90.44, batch-reuse:1
@ 13360 train 3.8370 , allloss: 3.8470, dt: 1276.17ms, fracRes: 0.5920, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.6043, norm(y): 0.9744, norm:0.7560, tok/sec: 102707.32, flops:89.94, batch-reuse:1
@ 13361 train 3.7007 , allloss: 3.7107, dt: 1288.16ms, fracRes: 0.5930, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.6029, norm(y): 0.9747, norm:0.7429, tok/sec: 101751.42, flops:89.10, batch-reuse:1
@ 13362 train 3.7860 , allloss: 3.7959, dt: 1277.43ms, fracRes: 0.5928, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6023, norm(y): 0.9745, norm:0.8649, tok/sec: 102606.26, flops:89.85, batch-reuse:1
@ 13363 train 3.7645 , allloss: 3.7745, dt: 1261.27ms, fracRes: 0.5933, norm(attn): 0.1719, norm(output): 0.2695, norm(x): 0.6037, norm(y): 0.9747, norm:0.7845, tok/sec: 103921.04, flops:91.00, batch-reuse:1
@ 13364 train 3.7998 , allloss: 3.8099, dt: 1263.31ms, fracRes: 0.5929, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.6009, norm(y): 0.9746, norm:0.7628, tok/sec: 103753.00, flops:90.86, batch-reuse:1
@ 13365 train 3.8595 , allloss: 3.8693, dt: 1277.95ms, fracRes: 0.5918, norm(attn): 0.1748, norm(output): 0.2676, norm(x): 0.5987, norm(y): 0.9746, norm:0.9092, tok/sec: 102564.41, flops:89.81, batch-reuse:1
@ 13366 train 3.8004 , allloss: 3.8098, dt: 1295.42ms, fracRes: 0.5925, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5973, norm(y): 0.9746, norm:0.7607, tok/sec: 101180.85, flops:88.60, batch-reuse:1
@ 13367 train 3.7107 , allloss: 3.7205, dt: 1283.57ms, fracRes: 0.5917, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.6008, norm(y): 0.9745, norm:0.8277, tok/sec: 102115.32, flops:89.42, batch-reuse:1
@ 13368 train 3.6926 , allloss: 3.7028, dt: 1273.42ms, fracRes: 0.5922, norm(attn): 0.1738, norm(output): 0.2676, norm(x): 0.6058, norm(y): 0.9748, norm:0.7677, tok/sec: 102929.31, flops:90.13, batch-reuse:1
@ 13369 train 3.8278 , allloss: 3.8373, dt: 1255.22ms, fracRes: 0.5906, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.6029, norm(y): 0.9742, norm:0.8738, tok/sec: 104421.60, flops:91.44, batch-reuse:1
@ 13370 train 3.7221 , allloss: 3.7322, dt: 1260.91ms, fracRes: 0.5906, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.6015, norm(y): 0.9746, norm:0.8144, tok/sec: 103950.30, flops:91.03, batch-reuse:1
@ 13371 train 3.6997 , allloss: 3.7097, dt: 1256.19ms, fracRes: 0.5920, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.6030, norm(y): 0.9748, norm:0.7796, tok/sec: 104341.00, flops:91.37, batch-reuse:1
@ 13372 train 3.6709 , allloss: 3.6805, dt: 1279.68ms, fracRes: 0.5913, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.5996, norm(y): 0.9745, norm:0.7388, tok/sec: 102425.61, flops:89.69, batch-reuse:1
@ 13373 train 3.7226 , allloss: 3.7324, dt: 1301.77ms, fracRes: 0.5920, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5980, norm(y): 0.9746, norm:0.7055, tok/sec: 100687.75, flops:88.17, batch-reuse:1
@ 13374 train 3.8114 , allloss: 3.8209, dt: 1267.57ms, fracRes: 0.5925, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6007, norm(y): 0.9744, norm:0.7139, tok/sec: 103404.05, flops:90.55, batch-reuse:1
@ 13375 train 3.8078 , allloss: 3.8172, dt: 1277.39ms, fracRes: 0.5929, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.6031, norm(y): 0.9741, norm:0.7129, tok/sec: 102609.03, flops:89.85, batch-reuse:1
@ 13376 train 3.7808 , allloss: 3.7901, dt: 1271.45ms, fracRes: 0.5925, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6009, norm(y): 0.9742, norm:0.6909, tok/sec: 103088.98, flops:90.27, batch-reuse:1
@ 13377 train 3.7380 , allloss: 3.7478, dt: 1260.21ms, fracRes: 0.5927, norm(attn): 0.1748, norm(output): 0.2676, norm(x): 0.6056, norm(y): 0.9746, norm:0.6819, tok/sec: 104008.02, flops:91.08, batch-reuse:1
@ 13378 train 3.8329 , allloss: 3.8428, dt: 1275.76ms, fracRes: 0.5919, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5983, norm(y): 0.9744, norm:0.6909, tok/sec: 102740.51, flops:89.97, batch-reuse:1
@ 13379 train 3.7915 , allloss: 3.8010, dt: 1264.99ms, fracRes: 0.5904, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5980, norm(y): 0.9742, norm:0.7024, tok/sec: 103614.83, flops:90.73, batch-reuse:1
@ 13380 train 3.8551 , allloss: 3.8648, dt: 1260.63ms, fracRes: 0.5901, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5975, norm(y): 0.9744, norm:0.7077, tok/sec: 103973.65, flops:91.05, batch-reuse:1
@ 13381 train 3.7389 , allloss: 3.7486, dt: 1313.53ms, fracRes: 0.5907, norm(attn): 0.1738, norm(output): 0.2676, norm(x): 0.5976, norm(y): 0.9743, norm:0.7553, tok/sec: 99786.11, flops:87.38, batch-reuse:1
@ 13382 train 3.7603 , allloss: 3.7698, dt: 1269.34ms, fracRes: 0.5907, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.5971, norm(y): 0.9742, norm:0.7053, tok/sec: 103260.19, flops:90.42, batch-reuse:1
@ 13383 train 3.7671 , allloss: 3.7765, dt: 1254.52ms, fracRes: 0.5908, norm(attn): 0.1738, norm(output): 0.2676, norm(x): 0.5967, norm(y): 0.9740, norm:0.8059, tok/sec: 104479.89, flops:91.49, batch-reuse:1
@ 13384 train 3.7588 , allloss: 3.7685, dt: 1274.24ms, fracRes: 0.5917, norm(attn): 0.1738, norm(output): 0.2676, norm(x): 0.6019, norm(y): 0.9742, norm:0.7053, tok/sec: 102862.90, flops:90.08, batch-reuse:1
@ 13385 train 3.8178 , allloss: 3.8274, dt: 1272.49ms, fracRes: 0.5928, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6021, norm(y): 0.9743, norm:0.7770, tok/sec: 103004.34, flops:90.20, batch-reuse:1
@ 13386 train 3.7170 , allloss: 3.7264, dt: 1279.85ms, fracRes: 0.5923, norm(attn): 0.1719, norm(output): 0.2676, norm(x): 0.5998, norm(y): 0.9740, norm:0.7742, tok/sec: 102412.36, flops:89.68, batch-reuse:1
@ 13387 train 3.6942 , allloss: 3.7040, dt: 1264.64ms, fracRes: 0.5926, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.6012, norm(y): 0.9743, norm:0.7469, tok/sec: 103643.66, flops:90.76, batch-reuse:1
@ 13388 train 3.7150 , allloss: 3.7245, dt: 1275.79ms, fracRes: 0.5912, norm(attn): 0.1738, norm(output): 0.2676, norm(x): 0.6009, norm(y): 0.9743, norm:0.7255, tok/sec: 102738.01, flops:89.97, batch-reuse:1
@ 13389 train 3.6444 , allloss: 3.6539, dt: 1276.08ms, fracRes: 0.5909, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.5982, norm(y): 0.9745, norm:0.8198, tok/sec: 102714.82, flops:89.95, batch-reuse:1
@ 13390 train 3.6305 , allloss: 3.6399, dt: 1257.58ms, fracRes: 0.5911, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5956, norm(y): 0.9746, norm:0.6918, tok/sec: 104225.87, flops:91.27, batch-reuse:1
@ 13391 train 3.6590 , allloss: 3.6685, dt: 1284.67ms, fracRes: 0.5906, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5947, norm(y): 0.9746, norm:0.7858, tok/sec: 102027.43, flops:89.34, batch-reuse:1
@ 13392 train 3.6156 , allloss: 3.6257, dt: 1278.15ms, fracRes: 0.5917, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5961, norm(y): 0.9745, norm:0.8843, tok/sec: 102548.17, flops:89.80, batch-reuse:1
@ 13393 train 3.5878 , allloss: 3.5975, dt: 1252.50ms, fracRes: 0.5914, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.5950, norm(y): 0.9745, norm:0.7999, tok/sec: 104648.28, flops:91.64, batch-reuse:1
@ 13394 train 3.5570 , allloss: 3.5667, dt: 1262.29ms, fracRes: 0.5915, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5941, norm(y): 0.9744, norm:0.7099, tok/sec: 103836.99, flops:90.93, batch-reuse:1
@ 13395 train 3.5667 , allloss: 3.5766, dt: 1271.27ms, fracRes: 0.5924, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.5970, norm(y): 0.9745, norm:0.8048, tok/sec: 103102.84, flops:90.29, batch-reuse:1
@ 13396 train 3.5215 , allloss: 3.5314, dt: 1278.48ms, fracRes: 0.5927, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.5973, norm(y): 0.9744, norm:0.7715, tok/sec: 102522.01, flops:89.78, batch-reuse:1
@ 13397 train 3.7166 , allloss: 3.7260, dt: 1261.77ms, fracRes: 0.5924, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5968, norm(y): 0.9742, norm:0.7407, tok/sec: 103879.74, flops:90.97, batch-reuse:1
@ 13398 train 3.6398 , allloss: 3.6492, dt: 1278.45ms, fracRes: 0.5911, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5980, norm(y): 0.9741, norm:0.8255, tok/sec: 102523.94, flops:89.78, batch-reuse:1
@ 13399 train 3.5713 , allloss: 3.5807, dt: 1266.79ms, fracRes: 0.5910, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5974, norm(y): 0.9746, norm:0.7190, tok/sec: 103467.85, flops:90.61, batch-reuse:1
@ 13400 train 3.5398 , allloss: 3.5493, dt: 1266.02ms, fracRes: 0.5911, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5985, norm(y): 0.9745, norm:0.8282, tok/sec: 103531.10, flops:90.66, batch-reuse:1
@ 13401 train 3.5884 , allloss: 3.5978, dt: 1279.89ms, fracRes: 0.5921, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5990, norm(y): 0.9746, norm:0.9171, tok/sec: 102409.10, flops:89.68, batch-reuse:1
@ 13402 train 3.5811 , allloss: 3.5905, dt: 1263.02ms, fracRes: 0.5930, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5973, norm(y): 0.9745, norm:0.6815, tok/sec: 103776.89, flops:90.88, batch-reuse:1
@ 13403 train 3.6509 , allloss: 3.6610, dt: 1280.06ms, fracRes: 0.5940, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.6040, norm(y): 0.9745, norm:1.0581, tok/sec: 102395.14, flops:89.67, batch-reuse:1
@ 13404 train 3.6015 , allloss: 3.6109, dt: 1275.30ms, fracRes: 0.5923, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5958, norm(y): 0.9745, norm:1.0272, tok/sec: 102777.67, flops:90.00, batch-reuse:1
@ 13405 train 3.5661 , allloss: 3.5755, dt: 1272.03ms, fracRes: 0.5915, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5956, norm(y): 0.9745, norm:0.7593, tok/sec: 103041.22, flops:90.23, batch-reuse:1
@ 13406 train 3.5595 , allloss: 3.5690, dt: 1263.06ms, fracRes: 0.5910, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5943, norm(y): 0.9745, norm:1.0968, tok/sec: 103773.05, flops:90.87, batch-reuse:1
@ 13407 train 3.5924 , allloss: 3.6022, dt: 1261.23ms, fracRes: 0.5906, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.5995, norm(y): 0.9743, norm:0.8038, tok/sec: 103924.34, flops:91.01, batch-reuse:1
@ 13408 train 3.6169 , allloss: 3.6267, dt: 1300.21ms, fracRes: 0.5914, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5993, norm(y): 0.9743, norm:0.8211, tok/sec: 100808.02, flops:88.28, batch-reuse:1
@ 13409 train 3.4103 , allloss: 3.4199, dt: 1294.53ms, fracRes: 0.5919, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5991, norm(y): 0.9744, norm:0.8743, tok/sec: 101250.47, flops:88.66, batch-reuse:1
@ 13410 train 3.5373 , allloss: 3.5469, dt: 1254.26ms, fracRes: 0.5920, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.6005, norm(y): 0.9744, norm:0.7768, tok/sec: 104501.59, flops:91.51, batch-reuse:1
@ 13411 train 3.6277 , allloss: 3.6374, dt: 1271.05ms, fracRes: 0.5931, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5976, norm(y): 0.9744, norm:0.8978, tok/sec: 103120.95, flops:90.30, batch-reuse:1
@ 13412 train 3.5736 , allloss: 3.5834, dt: 1274.18ms, fracRes: 0.5924, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5953, norm(y): 0.9744, norm:0.8204, tok/sec: 102867.96, flops:90.08, batch-reuse:1
@ 13413 train 3.6763 , allloss: 3.6858, dt: 1294.59ms, fracRes: 0.5922, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5958, norm(y): 0.9743, norm:0.8618, tok/sec: 101245.71, flops:88.66, batch-reuse:1
@ 13414 train 3.5848 , allloss: 3.5944, dt: 1302.28ms, fracRes: 0.5917, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5961, norm(y): 0.9741, norm:0.8825, tok/sec: 100647.77, flops:88.14, batch-reuse:1
@ 13415 train 3.5657 , allloss: 3.5754, dt: 1268.48ms, fracRes: 0.5907, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5952, norm(y): 0.9743, norm:0.7360, tok/sec: 103329.83, flops:90.48, batch-reuse:1
@ 13416 train 3.8163 , allloss: 3.8259, dt: 1273.53ms, fracRes: 0.5895, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.5942, norm(y): 0.9742, norm:0.9074, tok/sec: 102919.98, flops:90.13, batch-reuse:1
@ 13417 train 3.7294 , allloss: 3.7390, dt: 1261.38ms, fracRes: 0.5907, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5966, norm(y): 0.9742, norm:0.7207, tok/sec: 103911.75, flops:90.99, batch-reuse:1
@ 13418 train 3.6001 , allloss: 3.6096, dt: 1284.10ms, fracRes: 0.5912, norm(attn): 0.1738, norm(output): 0.2676, norm(x): 0.5993, norm(y): 0.9743, norm:0.9306, tok/sec: 102073.18, flops:89.38, batch-reuse:1
@ 13419 train 3.6212 , allloss: 3.6306, dt: 1315.40ms, fracRes: 0.5921, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.6010, norm(y): 0.9744, norm:0.6872, tok/sec: 99644.15, flops:87.26, batch-reuse:1
@ 13420 train 3.5808 , allloss: 3.5901, dt: 1320.20ms, fracRes: 0.5912, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5983, norm(y): 0.9742, norm:0.9053, tok/sec: 99281.61, flops:86.94, batch-reuse:1
@ 13421 train 3.6894 , allloss: 3.6989, dt: 1324.32ms, fracRes: 0.5910, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5966, norm(y): 0.9743, norm:0.7954, tok/sec: 98972.98, flops:86.67, batch-reuse:1
@ 13422 train 3.7156 , allloss: 3.7251, dt: 1315.97ms, fracRes: 0.5921, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5972, norm(y): 0.9743, norm:0.8392, tok/sec: 99600.68, flops:87.22, batch-reuse:1
@ 13423 train 3.6089 , allloss: 3.6182, dt: 1268.21ms, fracRes: 0.5915, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5978, norm(y): 0.9743, norm:0.8653, tok/sec: 103352.19, flops:90.50, batch-reuse:1
@ 13424 train 3.5264 , allloss: 3.5358, dt: 1284.73ms, fracRes: 0.5916, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5964, norm(y): 0.9744, norm:0.6841, tok/sec: 102023.09, flops:89.34, batch-reuse:1
@ 13425 train 3.5679 , allloss: 3.5776, dt: 1279.52ms, fracRes: 0.5910, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.5972, norm(y): 0.9744, norm:0.7661, tok/sec: 102438.43, flops:89.70, batch-reuse:1
@ 13426 train 3.7039 , allloss: 3.7137, dt: 1255.74ms, fracRes: 0.5913, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.5947, norm(y): 0.9744, norm:0.7974, tok/sec: 104378.70, flops:91.40, batch-reuse:1
@ 13427 train 3.7088 , allloss: 3.7186, dt: 1274.51ms, fracRes: 0.5918, norm(attn): 0.1748, norm(output): 0.2676, norm(x): 0.5990, norm(y): 0.9742, norm:0.7653, tok/sec: 102841.37, flops:90.06, batch-reuse:1
@ 13428 train 3.6234 , allloss: 3.6327, dt: 1268.87ms, fracRes: 0.5918, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.6001, norm(y): 0.9743, norm:0.8286, tok/sec: 103298.51, flops:90.46, batch-reuse:1
@ 13429 train 3.7055 , allloss: 3.7153, dt: 1278.12ms, fracRes: 0.5914, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.6036, norm(y): 0.9742, norm:0.9026, tok/sec: 102550.39, flops:89.80, batch-reuse:1
@ 13430 train 3.5897 , allloss: 3.5995, dt: 1292.43ms, fracRes: 0.5908, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6006, norm(y): 0.9741, norm:0.7309, tok/sec: 101415.06, flops:88.81, batch-reuse:1
@ 13431 train 3.5376 , allloss: 3.5473, dt: 1272.91ms, fracRes: 0.5910, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5962, norm(y): 0.9743, norm:0.7874, tok/sec: 102970.04, flops:90.17, batch-reuse:1
@ 13432 train 3.6483 , allloss: 3.6577, dt: 1270.91ms, fracRes: 0.5912, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5970, norm(y): 0.9742, norm:0.7083, tok/sec: 103132.03, flops:90.31, batch-reuse:1
@ 13433 train 3.5930 , allloss: 3.6028, dt: 1289.98ms, fracRes: 0.5923, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5967, norm(y): 0.9744, norm:0.8022, tok/sec: 101607.74, flops:88.98, batch-reuse:1
@ 13434 train 3.7044 , allloss: 3.7137, dt: 1269.89ms, fracRes: 0.5922, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5952, norm(y): 0.9740, norm:0.7512, tok/sec: 103214.92, flops:90.38, batch-reuse:1
@ 13435 train 3.7186 , allloss: 3.7283, dt: 1262.62ms, fracRes: 0.5925, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5974, norm(y): 0.9741, norm:0.7906, tok/sec: 103809.52, flops:90.90, batch-reuse:1
@ 13436 train 3.8653 , allloss: 3.8750, dt: 1260.28ms, fracRes: 0.5915, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5982, norm(y): 0.9739, norm:0.8091, tok/sec: 104001.96, flops:91.07, batch-reuse:1
@ 13437 train 3.8351 , allloss: 3.8447, dt: 1261.03ms, fracRes: 0.5914, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5980, norm(y): 0.9742, norm:0.7601, tok/sec: 103940.43, flops:91.02, batch-reuse:1
@ 13438 train 3.8458 , allloss: 3.8553, dt: 1290.71ms, fracRes: 0.5911, norm(attn): 0.1738, norm(output): 0.2676, norm(x): 0.6007, norm(y): 0.9740, norm:0.9256, tok/sec: 101550.16, flops:88.93, batch-reuse:1
@ 13439 train 3.8342 , allloss: 3.8439, dt: 1278.83ms, fracRes: 0.5914, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.6045, norm(y): 0.9741, norm:0.9301, tok/sec: 102493.82, flops:89.75, batch-reuse:1
@ 13440 train 3.8399 , allloss: 3.8495, dt: 1264.39ms, fracRes: 0.5910, norm(attn): 0.1748, norm(output): 0.2695, norm(x): 0.6006, norm(y): 0.9738, norm:0.7337, tok/sec: 103664.12, flops:90.78, batch-reuse:1
@ 13441 train 3.9093 , allloss: 3.9189, dt: 1294.96ms, fracRes: 0.5911, norm(attn): 0.1738, norm(output): 0.2676, norm(x): 0.6006, norm(y): 0.9739, norm:1.0117, tok/sec: 101217.29, flops:88.63, batch-reuse:1
@ 13442 train 4.0966 , allloss: 4.1066, dt: 1273.83ms, fracRes: 0.5911, norm(attn): 0.1748, norm(output): 0.2695, norm(x): 0.6052, norm(y): 0.9736, norm:0.9426, tok/sec: 102895.65, flops:90.10, batch-reuse:1
@ 13443 train 3.7911 , allloss: 3.8009, dt: 1297.42ms, fracRes: 0.5894, norm(attn): 0.1787, norm(output): 0.2734, norm(x): 0.6020, norm(y): 0.9738, norm:1.4222, tok/sec: 101025.22, flops:88.47, batch-reuse:1
@ 13444 train 3.8630 , allloss: 3.8729, dt: 1294.26ms, fracRes: 0.5912, norm(attn): 0.1738, norm(output): 0.2676, norm(x): 0.6000, norm(y): 0.9741, norm:0.9292, tok/sec: 101271.66, flops:88.68, batch-reuse:1
@ 13445 train 3.9061 , allloss: 3.9160, dt: 1278.85ms, fracRes: 0.5916, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5984, norm(y): 0.9741, norm:0.7796, tok/sec: 102491.92, flops:89.75, batch-reuse:1
@ 13446 train 3.9143 , allloss: 3.9241, dt: 1291.76ms, fracRes: 0.5915, norm(attn): 0.1719, norm(output): 0.2676, norm(x): 0.5981, norm(y): 0.9738, norm:0.7460, tok/sec: 101467.80, flops:88.85, batch-reuse:1
@ 13447 train 3.8803 , allloss: 3.8900, dt: 1276.10ms, fracRes: 0.5916, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.5993, norm(y): 0.9736, norm:0.7875, tok/sec: 102712.65, flops:89.94, batch-reuse:1
@ 13448 train 3.8089 , allloss: 3.8189, dt: 1266.97ms, fracRes: 0.5916, norm(attn): 0.1758, norm(output): 0.2715, norm(x): 0.6026, norm(y): 0.9737, norm:0.8911, tok/sec: 103453.01, flops:90.59, batch-reuse:1
@ 13449 train 3.7476 , allloss: 3.7574, dt: 1268.54ms, fracRes: 0.5921, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.5978, norm(y): 0.9737, norm:0.8756, tok/sec: 103324.90, flops:90.48, batch-reuse:1
@ 13450 train 3.8100 , allloss: 3.8199, dt: 1291.16ms, fracRes: 0.5922, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5999, norm(y): 0.9739, norm:0.7936, tok/sec: 101514.66, flops:88.89, batch-reuse:1
@ 13451 train 3.7646 , allloss: 3.7748, dt: 1277.30ms, fracRes: 0.5917, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.6014, norm(y): 0.9738, norm:0.8113, tok/sec: 102616.54, flops:89.86, batch-reuse:1
@ 13452 train 3.8952 , allloss: 3.9050, dt: 1261.72ms, fracRes: 0.5911, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.5967, norm(y): 0.9737, norm:0.7712, tok/sec: 103883.32, flops:90.97, batch-reuse:1
@ 13453 train 3.8386 , allloss: 3.8486, dt: 1283.96ms, fracRes: 0.5917, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5992, norm(y): 0.9738, norm:0.7563, tok/sec: 102084.32, flops:89.39, batch-reuse:1
@ 13454 train 3.8509 , allloss: 3.8605, dt: 1284.48ms, fracRes: 0.5917, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.5991, norm(y): 0.9737, norm:0.7640, tok/sec: 102043.15, flops:89.36, batch-reuse:1
@ 13455 train 4.3843 , allloss: 4.3950, dt: 1269.11ms, fracRes: 0.5930, norm(attn): 0.1729, norm(output): 0.2715, norm(x): 0.6097, norm(y): 0.9735, norm:1.0693, tok/sec: 103278.43, flops:90.44, batch-reuse:1
@ 13456 train 3.8980 , allloss: 3.9077, dt: 1279.65ms, fracRes: 0.5934, norm(attn): 0.1719, norm(output): 0.2676, norm(x): 0.6026, norm(y): 0.9734, norm:0.9200, tok/sec: 102427.88, flops:89.69, batch-reuse:1
@ 13457 train 3.8834 , allloss: 3.8927, dt: 1290.52ms, fracRes: 0.5914, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6002, norm(y): 0.9733, norm:0.8126, tok/sec: 101564.89, flops:88.94, batch-reuse:1
@ 13458 train 3.7933 , allloss: 3.8035, dt: 1279.82ms, fracRes: 0.5914, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.6055, norm(y): 0.9737, norm:0.7979, tok/sec: 102414.10, flops:89.68, batch-reuse:1
@ 13459 train 3.7793 , allloss: 3.7895, dt: 1266.61ms, fracRes: 0.5908, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.6050, norm(y): 0.9739, norm:0.8839, tok/sec: 103482.49, flops:90.62, batch-reuse:1
@ 13460 train 3.8888 , allloss: 3.8987, dt: 1266.58ms, fracRes: 0.5914, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.6037, norm(y): 0.9737, norm:0.9055, tok/sec: 103484.83, flops:90.62, batch-reuse:1
@ 13461 train 3.7571 , allloss: 3.7669, dt: 1272.42ms, fracRes: 0.5915, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.6020, norm(y): 0.9739, norm:0.7906, tok/sec: 103009.65, flops:90.20, batch-reuse:1
@ 13462 train 3.7518 , allloss: 3.7620, dt: 1288.06ms, fracRes: 0.5921, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.6032, norm(y): 0.9741, norm:0.7739, tok/sec: 101758.96, flops:89.11, batch-reuse:1
@ 13463 train 3.8185 , allloss: 3.8283, dt: 1265.84ms, fracRes: 0.5912, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.6015, norm(y): 0.9739, norm:0.7900, tok/sec: 103545.25, flops:90.67, batch-reuse:1
@ 13464 train 3.7755 , allloss: 3.7853, dt: 1294.85ms, fracRes: 0.5913, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.6015, norm(y): 0.9741, norm:0.7577, tok/sec: 101225.67, flops:88.64, batch-reuse:1
@ 13465 train 3.8533 , allloss: 3.8630, dt: 1258.15ms, fracRes: 0.5916, norm(attn): 0.1748, norm(output): 0.2676, norm(x): 0.6019, norm(y): 0.9741, norm:0.7320, tok/sec: 104178.37, flops:91.23, batch-reuse:1
@ 13466 train 3.7482 , allloss: 3.7580, dt: 1261.73ms, fracRes: 0.5922, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.6026, norm(y): 0.9739, norm:0.7123, tok/sec: 103882.63, flops:90.97, batch-reuse:1
@ 13467 train 3.8561 , allloss: 3.8659, dt: 1262.81ms, fracRes: 0.5925, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.6012, norm(y): 0.9738, norm:0.7556, tok/sec: 103793.76, flops:90.89, batch-reuse:1
@ 13468 train 3.8038 , allloss: 3.8137, dt: 1293.30ms, fracRes: 0.5924, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.6027, norm(y): 0.9737, norm:0.7926, tok/sec: 101346.56, flops:88.75, batch-reuse:1
@ 13469 train 3.8194 , allloss: 3.8293, dt: 1277.54ms, fracRes: 0.5924, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.6055, norm(y): 0.9738, norm:0.7186, tok/sec: 102597.41, flops:89.84, batch-reuse:1
@ 13470 train 3.8437 , allloss: 3.8534, dt: 1262.29ms, fracRes: 0.5915, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5993, norm(y): 0.9737, norm:0.7462, tok/sec: 103836.32, flops:90.93, batch-reuse:1
@ 13471 train 3.8115 , allloss: 3.8212, dt: 1275.71ms, fracRes: 0.5911, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5993, norm(y): 0.9738, norm:0.7145, tok/sec: 102744.31, flops:89.97, batch-reuse:1
@ 13472 train 3.8186 , allloss: 3.8287, dt: 1270.78ms, fracRes: 0.5907, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.6001, norm(y): 0.9737, norm:0.9158, tok/sec: 103142.94, flops:90.32, batch-reuse:1
@ 13473 train 3.8006 , allloss: 3.8103, dt: 1252.40ms, fracRes: 0.5902, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.5957, norm(y): 0.9740, norm:1.0310, tok/sec: 104656.51, flops:91.65, batch-reuse:1
@ 13474 train 3.7714 , allloss: 3.7811, dt: 1255.03ms, fracRes: 0.5901, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.5968, norm(y): 0.9736, norm:0.7623, tok/sec: 104437.11, flops:91.45, batch-reuse:1
@ 13475 train 3.7334 , allloss: 3.7433, dt: 1267.16ms, fracRes: 0.5910, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5995, norm(y): 0.9738, norm:0.8452, tok/sec: 103437.30, flops:90.58, batch-reuse:1
@ 13476 train 3.8437 , allloss: 3.8533, dt: 1264.63ms, fracRes: 0.5906, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.6014, norm(y): 0.9735, norm:0.8654, tok/sec: 103644.50, flops:90.76, batch-reuse:1
@ 13477 train 3.7967 , allloss: 3.8062, dt: 1295.37ms, fracRes: 0.5904, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.6045, norm(y): 0.9736, norm:0.7019, tok/sec: 101184.89, flops:88.61, batch-reuse:1
@ 13478 train 3.8123 , allloss: 3.8219, dt: 1271.29ms, fracRes: 0.5903, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.6032, norm(y): 0.9735, norm:0.8308, tok/sec: 103101.51, flops:90.28, batch-reuse:1
@ 13479 train 3.7897 , allloss: 3.7992, dt: 1279.73ms, fracRes: 0.5906, norm(attn): 0.1748, norm(output): 0.2695, norm(x): 0.6005, norm(y): 0.9735, norm:0.7678, tok/sec: 102421.87, flops:89.69, batch-reuse:1
@ 13480 train 3.7513 , allloss: 3.7610, dt: 1293.14ms, fracRes: 0.5915, norm(attn): 0.1729, norm(output): 0.2715, norm(x): 0.6012, norm(y): 0.9737, norm:0.7212, tok/sec: 101359.47, flops:88.76, batch-reuse:1
@ 13481 train 3.9237 , allloss: 3.9330, dt: 1278.23ms, fracRes: 0.5912, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5969, norm(y): 0.9736, norm:0.8570, tok/sec: 102542.13, flops:89.79, batch-reuse:1
@ 13482 train 3.9031 , allloss: 3.9125, dt: 1285.01ms, fracRes: 0.5917, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5978, norm(y): 0.9734, norm:0.7500, tok/sec: 102000.41, flops:89.32, batch-reuse:1
@ 13483 train 3.8375 , allloss: 3.8468, dt: 1272.85ms, fracRes: 0.5920, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5961, norm(y): 0.9737, norm:0.7674, tok/sec: 102975.33, flops:90.17, batch-reuse:1
@ 13484 train 3.7928 , allloss: 3.8024, dt: 1272.54ms, fracRes: 0.5920, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5961, norm(y): 0.9739, norm:0.7376, tok/sec: 103000.27, flops:90.20, batch-reuse:1
@ 13485 train 3.8152 , allloss: 3.8248, dt: 1261.59ms, fracRes: 0.5916, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5956, norm(y): 0.9738, norm:0.7713, tok/sec: 103894.15, flops:90.98, batch-reuse:1
@ 13486 train 4.3739 , allloss: 4.3836, dt: 1259.40ms, fracRes: 0.5894, norm(attn): 0.1758, norm(output): 0.2695, norm(x): 0.5931, norm(y): 0.9732, norm:1.4277, tok/sec: 104075.02, flops:91.14, batch-reuse:1
@ 13487 train 3.6999 , allloss: 3.7098, dt: 1268.16ms, fracRes: 0.5921, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.5967, norm(y): 0.9737, norm:0.8572, tok/sec: 103356.09, flops:90.51, batch-reuse:1
@ 13488 train 3.7770 , allloss: 3.7867, dt: 1262.60ms, fracRes: 0.5914, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.5963, norm(y): 0.9735, norm:0.7973, tok/sec: 103810.87, flops:90.91, batch-reuse:1
@ 13489 train 3.9380 , allloss: 3.9480, dt: 1285.17ms, fracRes: 0.5905, norm(attn): 0.1748, norm(output): 0.2695, norm(x): 0.5967, norm(y): 0.9737, norm:0.9577, tok/sec: 101987.75, flops:89.31, batch-reuse:1
@ 13490 train 3.7993 , allloss: 3.8094, dt: 1261.29ms, fracRes: 0.5907, norm(attn): 0.1738, norm(output): 0.2676, norm(x): 0.5989, norm(y): 0.9739, norm:0.8801, tok/sec: 103919.37, flops:91.00, batch-reuse:1
@ 13491 train 3.9079 , allloss: 3.9177, dt: 1283.90ms, fracRes: 0.5921, norm(attn): 0.1748, norm(output): 0.2715, norm(x): 0.6065, norm(y): 0.9736, norm:0.8989, tok/sec: 102089.25, flops:89.40, batch-reuse:1
@ 13492 train 3.8484 , allloss: 3.8581, dt: 1270.19ms, fracRes: 0.5920, norm(attn): 0.1748, norm(output): 0.2715, norm(x): 0.6031, norm(y): 0.9737, norm:0.8609, tok/sec: 103191.04, flops:90.36, batch-reuse:1
@ 13493 train 3.7679 , allloss: 3.7773, dt: 1274.52ms, fracRes: 0.5930, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.6008, norm(y): 0.9737, norm:0.7163, tok/sec: 102840.50, flops:90.06, batch-reuse:1
@ 13494 train 3.8441 , allloss: 3.8535, dt: 1283.03ms, fracRes: 0.5928, norm(attn): 0.1719, norm(output): 0.2676, norm(x): 0.5986, norm(y): 0.9736, norm:0.8135, tok/sec: 102158.25, flops:89.46, batch-reuse:1
@ 13495 train 3.8440 , allloss: 3.8535, dt: 1280.31ms, fracRes: 0.5925, norm(attn): 0.1738, norm(output): 0.2676, norm(x): 0.5993, norm(y): 0.9736, norm:0.7790, tok/sec: 102375.12, flops:89.65, batch-reuse:1
@ 13496 train 3.7954 , allloss: 3.8047, dt: 1278.87ms, fracRes: 0.5910, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.6002, norm(y): 0.9734, norm:0.7157, tok/sec: 102490.17, flops:89.75, batch-reuse:1
@ 13497 train 3.9063 , allloss: 3.9158, dt: 1285.29ms, fracRes: 0.5905, norm(attn): 0.1748, norm(output): 0.2695, norm(x): 0.6002, norm(y): 0.9733, norm:0.7263, tok/sec: 101978.48, flops:89.30, batch-reuse:1
@ 13498 train 3.7210 , allloss: 3.7301, dt: 1265.96ms, fracRes: 0.5898, norm(attn): 0.1768, norm(output): 0.2734, norm(x): 0.6004, norm(y): 0.9728, norm:4.6772, tok/sec: 103535.85, flops:90.66, batch-reuse:1
@ 13499 train 3.8456 , allloss: 3.8553, dt: 1284.00ms, fracRes: 0.5911, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.5951, norm(y): 0.9733, norm:0.9025, tok/sec: 102081.34, flops:89.39, batch-reuse:1
@ 13500 train 3.7976 , allloss: 3.8072, dt: 1272.42ms, fracRes: 0.5923, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5938, norm(y): 0.9736, norm:0.7745, tok/sec: 103009.90, flops:90.20, batch-reuse:1
@ 13501 train 3.7696 , allloss: 3.7794, dt: 1257.43ms, fracRes: 0.5929, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5984, norm(y): 0.9735, norm:0.7634, tok/sec: 104237.94, flops:91.28, batch-reuse:1
@ 13502 train 3.8441 , allloss: 3.8535, dt: 1256.75ms, fracRes: 0.5930, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5970, norm(y): 0.9736, norm:0.8242, tok/sec: 104294.03, flops:91.33, batch-reuse:1
@ 13503 train 3.8709 , allloss: 3.8805, dt: 1257.71ms, fracRes: 0.5915, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.5987, norm(y): 0.9734, norm:0.7719, tok/sec: 104215.20, flops:91.26, batch-reuse:1
@ 13504 train 3.8126 , allloss: 3.8222, dt: 1275.48ms, fracRes: 0.5916, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5965, norm(y): 0.9735, norm:0.7754, tok/sec: 102762.86, flops:89.99, batch-reuse:1
@ 13505 train 3.8566 , allloss: 3.8665, dt: 1266.18ms, fracRes: 0.5915, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5965, norm(y): 0.9733, norm:0.6992, tok/sec: 103517.68, flops:90.65, batch-reuse:1
@ 13506 train 3.7322 , allloss: 3.7424, dt: 1273.46ms, fracRes: 0.5917, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.5968, norm(y): 0.9735, norm:0.7156, tok/sec: 102925.86, flops:90.13, batch-reuse:1
@ 13507 train 3.8344 , allloss: 3.8443, dt: 1276.26ms, fracRes: 0.5911, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.5941, norm(y): 0.9735, norm:0.7583, tok/sec: 102700.47, flops:89.93, batch-reuse:1
@ 13508 train 3.9033 , allloss: 3.9131, dt: 1271.15ms, fracRes: 0.5914, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.5976, norm(y): 0.9736, norm:0.7124, tok/sec: 103112.71, flops:90.29, batch-reuse:1
@ 13509 train 3.8232 , allloss: 3.8327, dt: 1282.50ms, fracRes: 0.5917, norm(attn): 0.1738, norm(output): 0.2676, norm(x): 0.5990, norm(y): 0.9735, norm:0.6932, tok/sec: 102200.22, flops:89.50, batch-reuse:1
@ 13510 train 3.9267 , allloss: 3.9361, dt: 1274.13ms, fracRes: 0.5928, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.6035, norm(y): 0.9734, norm:0.6763, tok/sec: 102871.75, flops:90.08, batch-reuse:1
@ 13511 train 3.8677 , allloss: 3.8770, dt: 1285.16ms, fracRes: 0.5924, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.6025, norm(y): 0.9732, norm:0.6781, tok/sec: 101988.87, flops:89.31, batch-reuse:1
@ 13512 train 3.8379 , allloss: 3.8476, dt: 1282.80ms, fracRes: 0.5926, norm(attn): 0.1719, norm(output): 0.2676, norm(x): 0.6006, norm(y): 0.9732, norm:0.7031, tok/sec: 102176.85, flops:89.47, batch-reuse:1
@ 13513 train 3.8444 , allloss: 3.8538, dt: 1252.91ms, fracRes: 0.5922, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5972, norm(y): 0.9731, norm:0.6619, tok/sec: 104614.03, flops:91.61, batch-reuse:1
@ 13514 train 3.8315 , allloss: 3.8412, dt: 1273.44ms, fracRes: 0.5925, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5955, norm(y): 0.9735, norm:0.7183, tok/sec: 102927.15, flops:90.13, batch-reuse:1
@ 13515 train 3.8811 , allloss: 3.8907, dt: 1270.30ms, fracRes: 0.5920, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5947, norm(y): 0.9734, norm:0.8616, tok/sec: 103182.05, flops:90.36, batch-reuse:1
@ 13516 train 3.8270 , allloss: 3.8368, dt: 1276.24ms, fracRes: 0.5916, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5926, norm(y): 0.9733, norm:0.9441, tok/sec: 102701.70, flops:89.93, batch-reuse:1
@ 13517 train 3.8084 , allloss: 3.8180, dt: 1270.14ms, fracRes: 0.5913, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5904, norm(y): 0.9735, norm:0.7315, tok/sec: 103194.66, flops:90.37, batch-reuse:1
@ 13518 train 3.8047 , allloss: 3.8143, dt: 1274.37ms, fracRes: 0.5913, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5924, norm(y): 0.9736, norm:0.7498, tok/sec: 102852.74, flops:90.07, batch-reuse:1
@ 13519 train 3.8128 , allloss: 3.8224, dt: 1257.93ms, fracRes: 0.5915, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5927, norm(y): 0.9735, norm:0.7045, tok/sec: 104196.85, flops:91.24, batch-reuse:1
@ 13520 train 3.8827 , allloss: 3.8924, dt: 1263.48ms, fracRes: 0.5914, norm(attn): 0.1758, norm(output): 0.2715, norm(x): 0.6005, norm(y): 0.9733, norm:0.7700, tok/sec: 103738.85, flops:90.84, batch-reuse:1
@ 13521 train 3.8271 , allloss: 3.8367, dt: 1269.39ms, fracRes: 0.5913, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.5985, norm(y): 0.9734, norm:0.7880, tok/sec: 103255.92, flops:90.42, batch-reuse:1
@ 13522 train 3.8161 , allloss: 3.8254, dt: 1265.68ms, fracRes: 0.5906, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.5982, norm(y): 0.9733, norm:0.8511, tok/sec: 103558.79, flops:90.68, batch-reuse:1
@ 13523 train 3.9863 , allloss: 3.9960, dt: 1275.65ms, fracRes: 0.5910, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5977, norm(y): 0.9733, norm:0.8384, tok/sec: 102749.51, flops:89.98, batch-reuse:1
@ 13524 train 3.7628 , allloss: 3.7727, dt: 1258.03ms, fracRes: 0.5911, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.6006, norm(y): 0.9735, norm:0.8342, tok/sec: 104188.10, flops:91.24, batch-reuse:1
@ 13525 train 3.8797 , allloss: 3.8893, dt: 1291.39ms, fracRes: 0.5909, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.5987, norm(y): 0.9733, norm:0.7760, tok/sec: 101496.92, flops:88.88, batch-reuse:1
@ 13526 train 3.8183 , allloss: 3.8279, dt: 1285.36ms, fracRes: 0.5910, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.5978, norm(y): 0.9737, norm:0.8189, tok/sec: 101973.34, flops:89.30, batch-reuse:1
@ 13527 train 3.7973 , allloss: 3.8072, dt: 1267.41ms, fracRes: 0.5910, norm(attn): 0.1748, norm(output): 0.2676, norm(x): 0.5988, norm(y): 0.9739, norm:1.0308, tok/sec: 103417.05, flops:90.56, batch-reuse:1
@ 13528 train 3.8385 , allloss: 3.8480, dt: 1312.59ms, fracRes: 0.5902, norm(attn): 0.1748, norm(output): 0.2676, norm(x): 0.5951, norm(y): 0.9734, norm:0.9733, tok/sec: 99857.49, flops:87.44, batch-reuse:1
@ 13529 train 3.7747 , allloss: 3.7844, dt: 1294.99ms, fracRes: 0.5907, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.5958, norm(y): 0.9736, norm:0.8590, tok/sec: 101214.30, flops:88.63, batch-reuse:1
@ 13530 train 3.8427 , allloss: 3.8520, dt: 1257.67ms, fracRes: 0.5920, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5949, norm(y): 0.9733, norm:0.8307, tok/sec: 104217.97, flops:91.26, batch-reuse:1
@ 13531 train 3.8118 , allloss: 3.8214, dt: 1269.13ms, fracRes: 0.5925, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5971, norm(y): 0.9734, norm:0.9977, tok/sec: 103276.76, flops:90.44, batch-reuse:1
@ 13532 train 3.7578 , allloss: 3.7674, dt: 1260.89ms, fracRes: 0.5926, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5933, norm(y): 0.9736, norm:0.7342, tok/sec: 103951.60, flops:91.03, batch-reuse:1
@ 13533 train 3.8374 , allloss: 3.8469, dt: 1281.77ms, fracRes: 0.5921, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5929, norm(y): 0.9738, norm:0.9297, tok/sec: 102258.84, flops:89.55, batch-reuse:1
@ 13534 train 3.7881 , allloss: 3.7976, dt: 1265.30ms, fracRes: 0.5920, norm(attn): 0.1719, norm(output): 0.2676, norm(x): 0.5951, norm(y): 0.9736, norm:0.8397, tok/sec: 103589.64, flops:90.71, batch-reuse:1
@ 13535 train 3.7326 , allloss: 3.7425, dt: 1259.08ms, fracRes: 0.5916, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5995, norm(y): 0.9736, norm:0.8324, tok/sec: 104101.33, flops:91.16, batch-reuse:1
@ 13536 train 3.7673 , allloss: 3.7770, dt: 1268.86ms, fracRes: 0.5905, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.5975, norm(y): 0.9734, norm:0.9066, tok/sec: 103299.13, flops:90.46, batch-reuse:1
@ 13537 train 3.7646 , allloss: 3.7744, dt: 1274.51ms, fracRes: 0.5902, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5964, norm(y): 0.9737, norm:0.8055, tok/sec: 102841.08, flops:90.06, batch-reuse:1
@ 13538 train 3.7210 , allloss: 3.7313, dt: 1267.42ms, fracRes: 0.5915, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.6031, norm(y): 0.9738, norm:0.9929, tok/sec: 103416.68, flops:90.56, batch-reuse:1
@ 13539 train 3.7490 , allloss: 3.7586, dt: 1252.03ms, fracRes: 0.5926, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.6003, norm(y): 0.9738, norm:0.6913, tok/sec: 104687.34, flops:91.67, batch-reuse:1
@ 13540 train 3.8151 , allloss: 3.8247, dt: 1260.88ms, fracRes: 0.5924, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.6003, norm(y): 0.9735, norm:0.7688, tok/sec: 103953.03, flops:91.03, batch-reuse:1
@ 13541 train 3.7529 , allloss: 3.7628, dt: 1270.31ms, fracRes: 0.5937, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.6047, norm(y): 0.9739, norm:0.8325, tok/sec: 103180.81, flops:90.35, batch-reuse:1
@ 13542 train 3.6521 , allloss: 3.6615, dt: 1267.87ms, fracRes: 0.5930, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5973, norm(y): 0.9736, norm:0.8576, tok/sec: 103379.61, flops:90.53, batch-reuse:1
@ 13543 train 3.7093 , allloss: 3.7188, dt: 1271.35ms, fracRes: 0.5933, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5970, norm(y): 0.9737, norm:0.7531, tok/sec: 103096.79, flops:90.28, batch-reuse:1
@ 13544 train 3.7456 , allloss: 3.7549, dt: 1280.49ms, fracRes: 0.5928, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5952, norm(y): 0.9734, norm:0.8881, tok/sec: 102360.61, flops:89.64, batch-reuse:1
@ 13545 train 3.8173 , allloss: 3.8267, dt: 1248.95ms, fracRes: 0.5923, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5988, norm(y): 0.9734, norm:0.7877, tok/sec: 104945.75, flops:91.90, batch-reuse:1
@ 13546 train 3.7896 , allloss: 3.7989, dt: 1284.86ms, fracRes: 0.5918, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.5945, norm(y): 0.9733, norm:0.9511, tok/sec: 102013.06, flops:89.33, batch-reuse:1
@ 13547 train 3.8473 , allloss: 3.8566, dt: 1279.27ms, fracRes: 0.5910, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5929, norm(y): 0.9734, norm:0.8613, tok/sec: 102458.40, flops:89.72, batch-reuse:1
@ 13548 train 3.7561 , allloss: 3.7657, dt: 1255.42ms, fracRes: 0.5910, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5919, norm(y): 0.9735, norm:0.7554, tok/sec: 104404.49, flops:91.43, batch-reuse:1
@ 13549 train 3.7174 , allloss: 3.7274, dt: 1273.21ms, fracRes: 0.5900, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5945, norm(y): 0.9735, norm:0.8865, tok/sec: 102945.77, flops:90.15, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9805, 0.0177, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8438, 0.0298, 0.1260, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8906, 0.0173, 0.0820, 0.0116, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9023, 0.0186, 0.0277, 0.0205, 0.0327, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8672, 0.0625, 0.0193, 0.0067, 0.0101, 0.0339, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8359, 0.0311, 0.0179, 0.0128, 0.0183, 0.0325, 0.0513, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3164, 0.0547, 0.2412, 0.0469, 0.0933, 0.0535, 0.0703, 0.1240, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8359, 0.0206, 0.0222, 0.0058, 0.0089, 0.0098, 0.0581, 0.0273, 0.0106, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6836, 0.0076, 0.1040, 0.0067, 0.0181, 0.0060, 0.0211, 0.0825, 0.0135, 0.0562, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7891, 0.0189, 0.0286, 0.0088, 0.0109, 0.0050, 0.0209, 0.0171, 0.0251, 0.0156, 0.0615, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2383, 0.0359, 0.0654, 0.0376, 0.0830, 0.0288, 0.0476, 0.0508, 0.0757, 0.0933, 0.1904, 0.0530, 0.0000, 0.0000, 0.0000],
        [0.1602, 0.0684, 0.0845, 0.0449, 0.0520, 0.0249, 0.0420, 0.0737, 0.0135, 0.0977, 0.0786, 0.1328, 0.1270, 0.0000, 0.0000],
        [0.6523, 0.0245, 0.0317, 0.0054, 0.0115, 0.0113, 0.0552, 0.0280, 0.0142, 0.0097, 0.0234, 0.0146, 0.1060, 0.0108, 0.0000],
        [0.4062, 0.0483, 0.0361, 0.0309, 0.0447, 0.0109, 0.0210, 0.0393, 0.0383, 0.0302, 0.0703, 0.0430, 0.0874, 0.0393, 0.0542]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[    -0.0030,     -0.0001,     -0.0111,  ...,     -0.0279,      0.0133,     -0.0036],
        [    -0.0375,      0.0021,     -0.0073,  ...,      0.0024,      0.0065,      0.0121],
        [     0.0435,      0.0345,     -0.0045,  ...,     -0.0157,      0.0292,     -0.0122],
        ...,
        [     0.0272,      0.0169,     -0.0024,  ...,     -0.0295,      0.0100,      0.0168],
        [    -0.0431,      0.0033,     -0.0144,  ...,      0.0081,     -0.0014,     -0.0154],
        [    -0.0222,     -0.0076,     -0.0183,  ...,      0.0143,     -0.0378,     -0.0044]], device='cuda:0', requires_grad=True)
K: tensor([ 1.3828, -0.1533,  0.6328,  0.1953,  1.3359,  0.5664, -0.4570, -1.0781, -0.6680, -0.2129, -0.2656, -1.0234, -0.3125, -1.0312,  0.1787, -0.4453,  0.7969,  0.4453, -1.3750,  0.2451,  1.6406,  0.9492, -0.9219,  1.2266, -0.4805, -0.0491, -0.8008,  1.3906,  0.2930,  0.1689,  1.5781,  1.0078,
         1.2891,  0.7227,  0.4824,  1.8906, -2.2656,  0.6133, -0.3320, -2.3750,  0.4336,  0.4395,  0.7812,  1.9375, -0.2637,  0.3105, -0.0457,  0.0664,  1.5000, -0.1621,  0.2617,  0.6055, -1.2109, -0.1543,  1.2891, -0.4199, -0.8398,  0.9766, -0.0562, -0.7188,  1.5703, -0.8867,  0.7852, -0.1758],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0368,  0.0065, -0.0052,  ...,  0.0076, -0.0055, -0.0033],
        [ 0.0128, -0.0081,  0.0149,  ..., -0.0010,  0.0525,  0.0181],
        [-0.0332,  0.0351,  0.0065,  ..., -0.0233, -0.0455, -0.0452],
        ...,
        [ 0.0209,  0.0036,  0.0319,  ...,  0.0223,  0.0101,  0.0240],
        [-0.0071, -0.0091,  0.0210,  ...,  0.0269,  0.0154,  0.0013],
        [-0.0281, -0.0082,  0.0520,  ..., -0.0257,  0.0301,  0.0001]], device='cuda:0', requires_grad=True)
Q: tensor([-0.6055,  0.1455, -1.3047, -0.1001, -0.1147, -0.0132, -1.6719, -0.2373,  0.0825,  0.2812, -0.7461,  0.0703, -0.1079, -0.0830, -0.5195,  0.2129,  0.2539, -0.8125,  0.7188,  0.1758, -0.8086, -0.0086,  1.0781,  0.5312,  0.7695,  0.4629, -0.6328, -2.1719,  0.0791,  0.2988,  0.4551, -0.0674,
        -0.8281, -0.9688,  0.0693, -0.2148,  1.2656,  0.8477,  0.0569,  1.4688,  1.2812,  0.2637,  0.5469,  0.3164, -0.5273,  0.5703, -1.1953,  0.6211, -0.1279,  0.6445, -1.3438, -0.4160, -0.4512, -0.9102, -1.1328,  0.1445,  0.4434, -0.9961,  0.1206, -0.4609, -1.2891, -0.2207,  0.5156,  1.1016],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -4.0312, -3.4531, -4.9062, -4.4062, -4.5000, -3.2656, -3.5938, -4.6250, -3.9844, -2.7969, -3.2656, -1.4922, -4.6562, -3.5469],
        [ 0.0000, -3.3438, -1.8984, -3.1406, -2.6875, -4.2500, -3.4375, -2.4375, -2.7031, -1.9375, -1.3438, -2.2031, -0.9219, -2.5000, -1.7578],
        [ 0.0000, -3.9375, -2.3906, -4.3438, -3.3438, -4.0625, -3.6406, -3.2031, -3.3281, -3.1094, -1.2500, -2.5625, -2.0156, -3.3281, -2.2969],
        [ 0.0000, -3.8906, -3.4844, -3.7812, -3.3125, -4.5000, -3.3594, -3.4844, -2.3125, -3.2344, -2.0156, -3.1562, -1.8281, -2.0781, -2.1250],
        [ 0.0000, -2.6250, -3.7969, -4.8750, -4.4375, -3.2344, -2.1094, -3.1250, -4.3125, -4.6250, -3.6719, -3.8125, -1.7266, -4.3438, -3.0781],
        [ 0.0000, -3.2969, -3.8438, -4.1875, -3.8125, -3.2500, -2.7969, -3.8906, -2.6406, -3.9844, -2.0312, -3.3125, -2.8125, -2.4688, -2.6562],
        [ 0.0000, -1.7578, -0.2734, -1.9062, -1.2266, -1.7812, -1.5078, -0.9375, -1.6641,  0.1270, -0.0260, -0.6055, -0.0581, -1.6719, -0.9141],
        [ 0.0000, -3.7031, -3.6250, -4.9688, -4.5625, -4.4375, -2.6719, -3.4219, -4.3750, -4.6562, -3.6250, -4.0312, -1.8906, -4.5625, -3.5312],
        [ 0.0000, -4.5000, -1.8828, -4.6250, -3.6406, -4.7500, -3.4844, -2.1094, -3.9219, -2.5000, -2.4375, -3.0312, -0.7266, -3.9062, -3.4531],
        [ 0.0000, -3.7188, -3.3125, -4.5000, -4.2812, -5.0625, -3.6250, -3.8281, -3.4375, -3.9219, -2.5469, -3.4062, -2.1094, -3.4219, -2.5938],
        [ 0.0000, -1.8906, -1.2969, -1.8516, -1.0625, -2.1094, -1.6172, -1.5469, -1.1484, -0.9375, -0.2266, -1.5000, -1.0625, -0.9492, -0.5469],
        [ 0.0000, -0.8555, -0.6445, -1.2734, -1.1250, -1.8672, -1.3438, -0.7773, -2.4688, -0.5000, -0.7148, -0.1924, -0.2354, -2.2031, -1.0703],
        [ 0.0000, -3.2812, -3.0312, -4.7812, -4.0312, -4.0625, -2.4688, -3.1562, -3.8281, -4.2188, -3.3281, -3.7969, -1.8203, -4.0938, -3.3438],
        [ 0.0000, -2.1250, -2.4219, -2.5781, -2.2031, -3.6250, -2.9531, -2.3281, -2.3594, -2.5938, -1.7500, -2.2500, -1.5312, -2.3438, -2.0156]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8969],
        [0.8822],
        [0.8687],
        [0.7500],
        [0.7559],
        [0.7391],
        [0.4701],
        [0.5878],
        [0.5876],
        [0.5010],
        [0.4196],
        [0.2635],
        [0.4051],
        [0.3040]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9180,     0.0820,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1729,     0.7852,     0.0405,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1318,     0.6406,     0.2051,     0.0221,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0737,     0.6133,     0.0559,     0.1270,     0.1299,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0879,     0.3145,     0.0327,     0.0281,     0.4160,     0.1206,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0796,     0.1875,     0.0486,     0.0294,     0.2832,     0.2812,     0.0928,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0420,     0.0840,     0.0121,     0.0089,     0.1016,     0.2871,     0.3965,     0.0669,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0488,     0.0693,     0.0081,     0.0032,     0.0520,     0.2012,     0.4180,     0.0815,     0.1177,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0047,     0.0140,     0.0056,     0.0055,     0.0376,     0.0583,     0.0400,     0.0535,     0.7617,     0.0195,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0503,     0.0269,     0.0026,     0.0021,     0.0369,     0.0591,     0.2031,     0.0100,     0.4277,     0.0239,     0.1582,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0044,     0.0095,     0.0026,     0.0011,     0.0134,     0.0396,     0.0859,     0.0669,     0.0544,     0.0825,     0.6016,     0.0388,     0.0000,     0.0000,     0.0000],
        [    0.1226,     0.0049,     0.0036,     0.0013,     0.0273,     0.0430,     0.0923,     0.0187,     0.1367,     0.0347,     0.4199,     0.0518,     0.0435,     0.0000,     0.0000],
        [    0.0601,     0.0172,     0.0025,     0.0006,     0.0109,     0.0491,     0.1260,     0.0157,     0.0183,     0.0386,     0.4629,     0.0234,     0.0601,     0.1143,     0.0000],
        [    0.0261,     0.0085,     0.0024,     0.0007,     0.0059,     0.0189,     0.0483,     0.0123,     0.0500,     0.0178,     0.1504,     0.0618,     0.0527,     0.3418,     0.2012]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0348, -0.0262, -0.0130,  ..., -0.0145, -0.0190, -0.0034],
        [-0.0170,  0.0171, -0.0211,  ...,  0.0107, -0.0121, -0.0535],
        [ 0.0249,  0.0143,  0.0161,  ...,  0.0147,  0.0334,  0.0187],
        ...,
        [ 0.0242, -0.0220,  0.0384,  ...,  0.0265, -0.0273, -0.0113],
        [-0.0186, -0.0042,  0.0230,  ...,  0.0080,  0.0325,  0.0181],
        [ 0.0197,  0.0537,  0.0275,  ..., -0.0160,  0.0079,  0.0221]], device='cuda:0', requires_grad=True)
K: tensor([ 4.4375,  0.6836, -0.5000,  1.0938, -2.9531, -0.2070, -1.3984,  1.2656, -1.6641, -0.2559, -1.1016,  3.0156, -2.2969,  2.0938,  0.3262, -2.2500,  1.8906,  1.3672,  1.2578,  0.3672,  2.2344,  1.7422,  3.0312, -5.1562,  0.0452, -1.8438, -2.8594,  1.6250,  1.5234,  0.5312,  2.5938, -0.0737,
         1.1172, -0.7617, -1.7188, -0.7617, -0.0869,  1.0859, -1.3359,  1.4297,  0.6094, -1.7656, -0.6562,  1.4453,  0.9336,  0.5391, -3.2812, -0.8281,  1.8828,  0.8984, -1.2344,  0.6602, -1.2188,  1.1797, -1.5469, -2.9219,  0.5664,  0.4922, -1.4297,  2.9531,  0.5508,  1.3281,  1.7109, -0.3164],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0379, -0.0060, -0.0124,  ...,  0.0042,  0.0303, -0.0119],
        [ 0.0142,  0.0088, -0.0510,  ..., -0.0124, -0.0125, -0.0174],
        [ 0.0489,  0.0017,  0.0318,  ..., -0.0208,  0.0255,  0.0053],
        ...,
        [-0.0320, -0.0110,  0.0101,  ...,  0.0074,  0.0008, -0.0341],
        [ 0.0381,  0.0088, -0.0066,  ...,  0.0080,  0.0052, -0.0047],
        [ 0.0014, -0.0345, -0.0294,  ...,  0.0105, -0.0035,  0.0190]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.4824, -2.3438, -3.4531, -2.8125, -0.0894, -0.3418,  0.2012,  0.1621,  0.7656,  0.1099,  1.1172, -0.3066,  0.3906,  0.6289, -0.8984, -1.1250, -1.1562, -2.5625, -0.4629,  2.1562, -3.1250,  0.0058, -0.0056,  0.2227,  0.1855, -1.1641, -0.5234, -0.4863, -2.0156,  0.7070,  1.9297,  1.3359,
        -2.3906, -0.4629, -2.1250, -0.1455,  0.8516,  0.9883, -0.0933,  0.5859,  1.5938, -0.9922, -0.0801,  2.0625,  0.1934,  0.8281, -0.5273, -2.7812,  1.7734, -0.1719, -1.7812,  3.0312,  1.2188, -1.4141,  0.0229,  0.2598,  0.2480,  0.6406, -1.2344, -0.9766,  0.7227,  0.5742,  4.5938, -1.8906],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -2.4062,     -2.5781,     -3.5000,     -1.6875,     -2.1094,     -1.8906,     -3.6250,     -2.2344,     -2.6875,     -1.0391,     -2.6250,     -2.8750,     -1.5000,     -0.2539],
        [     0.0000,      1.5156,     -1.4453,     -1.1562,      1.0547,      1.3672,      1.7188,      0.8125,      1.9219,      1.3125,      3.2344,      2.3594,      1.8594,      3.1094,      3.7812],
        [     0.0000,      1.5781,      0.4395,     -1.7891,      0.5508,      0.9453,      1.5703,      1.2422,      1.8906,      2.0312,      2.7969,      2.7031,      3.0625,      3.3594,      4.8750],
        [     0.0000,      2.1094,     -0.2793,      0.5430,      0.5664,      2.9688,      2.6719,      2.5938,      5.3125,      3.1562,      5.4688,      3.5000,      4.6562,      7.1875,      5.8750],
        [     0.0000,      1.2734,     -0.9883,     -1.1406,      1.5547,      0.3184,      1.4766,      1.5938,      3.6562,      1.6406,      4.5000,      3.3438,      3.8281,      5.5000,      4.4375],
        [     0.0000,      0.8555,     -0.4922,     -0.9961,      1.2656,      1.2578,      0.1523,      1.5078,      3.9062,      1.5156,      3.7969,      2.3125,      3.4844,      5.5312,      4.7500],
        [     0.0000,      0.6953,     -1.2422,     -1.5469,      0.8828,      1.9219,      2.2500,      0.4688,      3.0781,      1.2422,      4.5312,      2.4688,      2.7188,      5.0000,      4.6250],
        [     0.0000,      0.3496,     -1.8047,     -2.7344,      0.0610,      1.4141,      2.1406,      0.5117,      0.8789,      1.1172,      3.7344,      1.1797,      1.9297,      2.8125,      3.7656],
        [     0.0000,      1.0938,      0.1680,      0.1592,      2.0781,      2.5156,      2.1406,      2.4375,      5.0938,      1.4297,      5.2812,      4.2812,      4.8750,      6.9375,      5.0938],
        [     0.0000,     -0.6250,     -2.9531,     -3.1875,     -0.3125,      0.1602,      1.3984,     -1.6094,      2.1406,     -0.7383,      1.1484,      0.5625,      0.2031,      4.0625,      2.5156],
        [     0.0000,      0.7695,     -0.5234,     -1.3516,      1.1172,      2.2031,      2.9688,      2.7188,      2.5156,      2.9375,      4.9062,      2.1875,      3.4531,      4.6875,      6.1562],
        [     0.0000,     -3.2188,     -3.5156,     -4.5312,     -1.5000,     -1.0469,     -0.2812,     -1.8750,      0.1118,     -1.2656,      1.2344,     -0.8633,     -1.0312,      2.0156,      1.5078],
        [     0.0000,     -1.2500,     -3.1875,     -4.5625,     -1.7031,     -0.2002,      0.7422,     -1.3359,     -1.1875,     -0.4434,      2.0469,     -0.9414,      0.0001,      0.6445,      2.0781],
        [     0.0000,     -1.1250,     -2.4062,     -3.6875,     -1.4922,     -0.3223,      0.6094,     -0.7539,      0.6484,     -0.3828,      1.7500,      0.8555,      0.6992,      2.5781,      2.0469]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8069],
        [0.4541],
        [0.3776],
        [0.5406],
        [0.4543],
        [0.3219],
        [0.2106],
        [0.3503],
        [0.1816],
        [0.3632],
        [0.1453],
        [0.1583],
        [0.3042],
        [0.1915]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9531, 0.0457, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9336, 0.0469, 0.0205, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9297, 0.0532, 0.0056, 0.0108, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9258, 0.0410, 0.0052, 0.0053, 0.0223, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9570, 0.0170, 0.0060, 0.0027, 0.0132, 0.0033, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8789, 0.0312, 0.0104, 0.0109, 0.0095, 0.0125, 0.0464, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8281, 0.0210, 0.0282, 0.0135, 0.0117, 0.0150, 0.0253, 0.0559, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9219, 0.0156, 0.0047, 0.0032, 0.0086, 0.0058, 0.0214, 0.0078, 0.0129, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8477, 0.0238, 0.0050, 0.0063, 0.0092, 0.0051, 0.0165, 0.0211, 0.0166, 0.0474, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9141, 0.0243, 0.0030, 0.0089, 0.0036, 0.0042, 0.0139, 0.0101, 0.0076, 0.0038, 0.0049, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9180, 0.0165, 0.0025, 0.0043, 0.0039, 0.0023, 0.0097, 0.0151, 0.0068, 0.0089, 0.0023, 0.0115, 0.0000, 0.0000, 0.0000],
        [0.3105, 0.0084, 0.0150, 0.0190, 0.0074, 0.0166, 0.0153, 0.1309, 0.0177, 0.1260, 0.0047, 0.0444, 0.2832, 0.0000, 0.0000],
        [0.8984, 0.0116, 0.0035, 0.0028, 0.0088, 0.0050, 0.0176, 0.0102, 0.0130, 0.0050, 0.0042, 0.0022, 0.0088, 0.0099, 0.0000],
        [0.9062, 0.0167, 0.0018, 0.0031, 0.0064, 0.0027, 0.0153, 0.0059, 0.0089, 0.0038, 0.0033, 0.0016, 0.0049, 0.0078, 0.0125]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0069, -0.0075,  0.0452,  ...,  0.0043, -0.0172, -0.0234],
        [ 0.0607, -0.0508, -0.0079,  ..., -0.0189, -0.0186, -0.0473],
        [ 0.0449, -0.0388,  0.0484,  ..., -0.0157, -0.0129, -0.0096],
        ...,
        [ 0.0345,  0.0231, -0.0319,  ..., -0.0082,  0.0058,  0.0280],
        [ 0.0161,  0.0159,  0.0034,  ..., -0.0105, -0.0427, -0.0329],
        [ 0.0237, -0.0137,  0.0121,  ..., -0.0040, -0.0118,  0.0046]], device='cuda:0', requires_grad=True)
K: tensor([-0.8477, -0.6133, -0.0618, -0.5391, -2.0156,  0.4473, -1.0469,  2.5625, -0.9570, -1.0625,  1.8516,  2.0938, -1.3984, -1.2109, -0.9219, -0.4453,  1.9453,  0.4453,  0.7266,  0.9531,  1.5234,  1.0781, -1.9922,  0.2656,  0.7109, -2.2031, -0.7617, -1.7188,  1.7188, -0.4980,  1.3125,  2.3438,
         0.5234,  0.7930,  2.5781, -0.6641, -1.1875,  1.6719,  1.3594, -2.7969,  2.3906, -0.3730,  0.2871,  1.6328,  0.2266,  1.9922, -0.9531, -2.2812, -0.8867,  2.3281, -1.0312,  1.6875,  0.4219, -1.6406,  2.0312, -1.5781, -1.9609, -2.0625, -0.1138,  0.7305, -2.0938, -0.9922,  1.3594,  0.4238],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0080,  0.0384,  0.0226,  ..., -0.0118,  0.0316, -0.0070],
        [-0.0010,  0.0419, -0.0067,  ...,  0.0095,  0.0110,  0.0153],
        [-0.0311, -0.0115,  0.0203,  ..., -0.0309,  0.0652, -0.0451],
        ...,
        [ 0.0341, -0.0126,  0.0210,  ..., -0.0163, -0.0061, -0.0143],
        [-0.0007,  0.0226, -0.0039,  ...,  0.0158,  0.0107,  0.0181],
        [ 0.0090, -0.0384, -0.0171,  ...,  0.0313,  0.0159,  0.0140]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.9492,  0.8555, -1.2656,  0.7344,  0.0525, -0.7031,  0.7070,  0.0133, -0.1436,  0.0684, -0.0311, -1.2734,  0.3105,  1.0859,  0.1045, -1.1250, -0.1748, -0.7500, -0.4453, -0.3027,  0.0057,  1.1797,  0.4922,  0.6602,  1.7969,  0.9844,  0.5742,  0.3555, -0.6758, -0.5234, -0.1836,  0.0410,
        -2.1562, -0.6914, -0.3926,  0.4297,  0.7695, -1.1250,  0.1670,  0.5859, -1.8906,  1.6250, -0.4941, -0.0957, -0.1167,  0.2949, -0.3477,  0.3164, -0.2754,  0.1934,  0.5469, -1.3672, -0.1406,  0.1040, -0.2812,  1.2031,  0.1709,  0.9297,  0.0962,  1.4375,  0.8438,  0.9727, -1.9062,  0.3086],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -3.0312, -4.5625, -4.4375, -4.3750, -5.1562, -3.8906, -3.9844, -4.2188, -5.0000, -4.7812, -4.8125, -4.7812, -4.5000, -4.2812],
        [ 0.0000, -3.0000, -3.8125, -4.2812, -4.5312, -5.1875, -3.8750, -3.8125, -4.5625, -4.7812, -5.0938, -4.5000, -4.0312, -4.8750, -4.1562],
        [ 0.0000, -2.8594, -5.0938, -4.4688, -4.4062, -4.9062, -3.5156, -5.1250, -4.5625, -4.7500, -4.3750, -5.6250, -4.9375, -4.7500, -3.7969],
        [ 0.0000, -3.1094, -5.1875, -5.1562, -3.7188, -4.6250, -3.0312, -3.7656, -3.6875, -5.0312, -4.4375, -5.0625, -4.0000, -3.8750, -4.0938],
        [ 0.0000, -4.0312, -5.0625, -5.8750, -4.2812, -5.6562, -3.9375, -4.7500, -4.7500, -5.9375, -5.2500, -5.9062, -5.3750, -5.0938, -4.6875],
        [ 0.0000, -3.3281, -4.4375, -4.3750, -4.5312, -4.2500, -2.9375, -3.4062, -3.8594, -4.9688, -4.8125, -4.4062, -3.7031, -4.0938, -4.2812],
        [ 0.0000, -3.6719, -3.3750, -4.1250, -4.2812, -4.0312, -3.4844, -2.7031, -4.2500, -2.9531, -4.6250, -3.5156, -2.8281, -4.4375, -3.7969],
        [ 0.0000, -4.0625, -5.2812, -5.6562, -4.6562, -5.0625, -3.7656, -4.7500, -4.2812, -5.5312, -5.3125, -6.0625, -4.8438, -4.5625, -4.5000],
        [ 0.0000, -3.5781, -5.1250, -4.9062, -4.5312, -5.1250, -3.9375, -3.6875, -3.9375, -2.8906, -4.6562, -4.6562, -3.6406, -3.7656, -3.6719],
        [ 0.0000, -3.6250, -5.7188, -4.6562, -5.5312, -5.4062, -4.1875, -4.5000, -4.7812, -5.5000, -5.2500, -5.6875, -5.1562, -5.0000, -4.8125],
        [ 0.0000, -4.0312, -5.9062, -5.3750, -5.4688, -6.0000, -4.5312, -4.0938, -4.9062, -4.6250, -5.9688, -4.3750, -3.4844, -5.0312, -5.5938],
        [ 0.0000, -3.6094, -3.0312, -2.7969, -3.7344, -2.9219, -3.0000, -0.8594, -2.8594, -0.9023, -4.1875, -1.9453, -0.0884, -3.0156, -3.6562],
        [ 0.0000, -4.3438, -5.5312, -5.7812, -4.6250, -5.1875, -3.9375, -4.4688, -4.2188, -5.1875, -5.3750, -6.0000, -4.6250, -4.5000, -4.6250],
        [ 0.0000, -4.0000, -6.2188, -5.6562, -4.9375, -5.8125, -4.0938, -5.0312, -4.6250, -5.4688, -5.5938, -6.3438, -5.2188, -4.7500, -4.2812]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9476],
        [0.9466],
        [0.9567],
        [0.9746],
        [0.9727],
        [0.9622],
        [0.9224],
        [0.9665],
        [0.9437],
        [0.9831],
        [0.9531],
        [0.8983],
        [0.9661],
        [0.9564]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0815,     0.9180,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0403,     0.5547,     0.4062,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0884,     0.2402,     0.6406,     0.0312,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0615,     0.3301,     0.5391,     0.0408,     0.0260,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0295,     0.5820,     0.2715,     0.0493,     0.0260,     0.0400,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0117,     0.5273,     0.1152,     0.0320,     0.0209,     0.0618,     0.2305,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0071,     0.0693,     0.0781,     0.0068,     0.0043,     0.0148,     0.7227,     0.0981,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0181,     0.1670,     0.0223,     0.0039,     0.0014,     0.0029,     0.7070,     0.0161,     0.0591,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0101,     0.0801,     0.0179,     0.0038,     0.0045,     0.0111,     0.3574,     0.0339,     0.1943,     0.2871,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0112,     0.0189,     0.0082,     0.0020,     0.0026,     0.0078,     0.1348,     0.0182,     0.0311,     0.6797,     0.0845,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0115,     0.0151,     0.0179,     0.0049,     0.0089,     0.0149,     0.0938,     0.1592,     0.0435,     0.3750,     0.0874,     0.1680,     0.0000,     0.0000,     0.0000],
        [    0.0114,     0.0352,     0.0200,     0.0020,     0.0017,     0.0060,     0.1475,     0.0354,     0.0630,     0.3789,     0.1250,     0.1216,     0.0520,     0.0000,     0.0000],
        [    0.0183,     0.0371,     0.0048,     0.0009,     0.0005,     0.0007,     0.0986,     0.0049,     0.0151,     0.1953,     0.4785,     0.0559,     0.0243,     0.0649,     0.0000],
        [    0.0050,     0.0107,     0.0021,     0.0012,     0.0016,     0.0038,     0.0378,     0.0305,     0.0349,     0.1572,     0.0762,     0.0815,     0.0918,     0.1279,     0.3379]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0078,  0.0126, -0.0150,  ..., -0.0332, -0.0135, -0.0213],
        [-0.0476,  0.0207, -0.0228,  ...,  0.0005, -0.0006, -0.0003],
        [-0.0468, -0.0087,  0.0413,  ..., -0.0182, -0.0349, -0.0276],
        ...,
        [-0.0047, -0.0035, -0.0033,  ..., -0.0241, -0.0491, -0.0483],
        [-0.0201, -0.0327, -0.0295,  ..., -0.0115, -0.0139,  0.0573],
        [-0.0143,  0.0180,  0.0203,  ..., -0.0040,  0.0093, -0.0128]], device='cuda:0', requires_grad=True)
K: tensor([-1.9219, -2.4062, -0.2197,  0.6992,  0.2070, -2.6562, -1.5703, -0.1631, -0.1157, -2.2656, -0.1953, -3.0156,  2.9531, -1.5156, -0.4141,  1.8672,  3.2656,  0.2500,  1.0469,  0.0603,  0.5664, -2.5156,  1.4531, -1.6406, -0.9453,  1.3750, -0.9141,  1.3125,  0.9961,  2.1719, -0.7539, -2.5938,
        -0.6484, -1.8203,  2.5938, -1.1953,  2.1875,  0.0615, -1.1250,  0.1318, -2.8438,  1.0156,  0.7148,  1.6953,  0.9648,  0.2910, -2.8906, -1.0859,  1.8203, -0.2930,  1.0000, -0.4141, -0.4121, -1.7578, -1.7031, -1.8281,  1.9297, -1.3672, -0.5156,  1.8203,  0.4336, -1.6016,  2.2656, -0.2559],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0029, -0.0087,  0.0134,  ...,  0.0246, -0.0265, -0.0136],
        [ 0.0434, -0.0003,  0.0061,  ...,  0.0069,  0.0251,  0.0220],
        [-0.0170,  0.0125,  0.0479,  ...,  0.0233,  0.0194, -0.0118],
        ...,
        [ 0.0181, -0.0014, -0.0274,  ...,  0.0018,  0.0070, -0.0007],
        [-0.0084,  0.0420, -0.0300,  ..., -0.0009,  0.0082, -0.0378],
        [ 0.0088, -0.0144,  0.0060,  ...,  0.0165, -0.0049,  0.0076]], device='cuda:0', requires_grad=True)
Q: tensor([     0.5352,     -0.9727,     -2.2969,      1.7266,     -1.6641,     -0.5742,      0.0520,      0.5703,      0.5898,     -0.9609,     -0.5898,     -0.0175,     -1.7188,     -2.4375,      0.7070,     -0.3984,     -0.1426,     -1.0391,      1.2344,     -1.0938,     -0.0854,      1.7500,
            -0.5547,     -2.4844,     -1.2578,     -1.2266,      1.8047,      3.8906,     -0.9414,      2.2188,      1.1250,     -1.4062,     -0.6719,      0.5625,     -1.8047,     -2.4062,      1.6094,     -1.4688,     -2.8906,      0.0635,     -0.1484,     -0.0005,      2.3281,     -0.6953,
            -1.5469,     -1.2812,     -1.4219,     -2.6562,      1.2812,      1.2734,      0.2910,     -0.3652,     -1.8359,     -0.6875,     -0.8125,     -0.9688,     -0.8438,      0.3203,     -0.3984,      2.0312,     -0.3164,      0.3164,      0.7266,     -0.8164], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  2.4219,  1.6406,  1.1953,  1.2422,  1.5156,  3.0938,  2.9375,  3.1250,  3.0625,  2.8750,  2.5000,  2.7031,  3.3750,  3.8125],
        [ 0.0000,  2.6250,  2.3125,  0.7031,  0.5625,  1.4062,  3.5625,  2.9531,  2.4688,  4.1562,  3.2031,  3.7031,  3.0938,  2.7344,  4.4688],
        [ 0.0000,  1.0000,  1.9766, -1.0391,  0.0854,  1.9453,  2.5781,  2.7812,  1.7578,  4.3750,  2.8281,  5.5938,  3.7812,  3.1094,  5.1875],
        [ 0.0000,  1.6797,  2.1719, -0.4141, -0.8633,  1.0547,  3.1094,  2.0938,  2.5469,  4.6875,  3.1406,  3.4062,  2.0000,  3.4688,  4.3125],
        [ 0.0000,  2.9844,  2.2188,  0.5117, -0.1289,  0.3008,  3.0625,  2.3906,  3.3281,  3.8594,  3.8281,  4.1562,  2.6562,  4.5312,  5.8750],
        [ 0.0000,  3.8125,  2.2969,  1.0078,  0.5859,  1.6641,  2.9844,  3.4688,  3.7500,  4.6562,  3.0469,  3.8438,  3.7656,  4.3125,  6.8750],
        [ 0.0000,  2.2812,  2.4062, -0.0339, -0.5078,  0.7383,  4.6250,  2.6250,  3.2969,  5.0312,  3.7656,  4.0625,  3.2344,  3.8906,  5.7812],
        [ 0.0000,  2.2344,  0.2139, -1.5234, -2.5469, -1.8203,  3.6719, -0.1089,  1.1875,  3.5938,  4.3125,  1.7188,  0.4980,  1.8828,  4.7812],
        [ 0.0000,  2.0781,  0.5742, -0.9805, -0.8086,  0.0938,  3.5625,  1.2109,  2.9531,  3.3438,  3.5469,  2.4844,  1.5703,  3.8438,  5.3125],
        [ 0.0000,  0.5312, -0.3125, -1.7109, -1.4531, -0.3652,  2.4844,  0.4883,  1.0234,  4.0938,  2.0156,  2.6875,  1.9531,  1.8594,  4.9688],
        [ 0.0000,  0.2715,  0.4453, -0.8555, -0.2637,  0.2559,  2.0938,  2.6250,  1.3281,  3.4844,  2.0312,  2.6875,  3.8438,  2.6875,  3.9062],
        [ 0.0000,  1.1328,  0.5664, -1.7188, -1.9297, -0.6445,  2.5625,  1.1328,  1.7109,  3.5000,  2.3906,  2.3594,  1.5156,  2.7500,  4.4062],
        [ 0.0000,  0.7070, -1.3516, -3.0312, -3.6406, -3.2656,  1.6797, -1.3203, -0.1953,  2.3750,  3.2656,  1.1172,  0.2852,  1.2656,  4.1875],
        [ 0.0000,  0.7656, -0.8516, -1.4219, -1.1406, -0.2559,  2.0312,  1.8125,  1.9453,  3.4531,  2.7344,  2.7969,  2.9219,  3.2500,  4.2188]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3635],
        [0.1153],
        [0.1253],
        [0.1271],
        [0.1008],
        [0.1558],
        [0.1148],
        [0.0982],
        [0.0942],
        [0.1074],
        [0.1254],
        [0.0803],
        [0.0961],
        [0.1143]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0197, 0.9805, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0145, 0.9141, 0.0723, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0103, 0.8281, 0.0913, 0.0693, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0031, 0.7422, 0.1982, 0.0388, 0.0190, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0087, 0.5469, 0.1611, 0.0364, 0.0713, 0.1768, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0084, 0.4941, 0.3457, 0.0204, 0.0141, 0.0479, 0.0703, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0033, 0.2236, 0.0815, 0.0087, 0.0305, 0.0400, 0.0530, 0.5586, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0098, 0.4336, 0.1074, 0.0216, 0.0165, 0.0322, 0.0298, 0.3008, 0.0476, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0112, 0.3750, 0.0723, 0.0184, 0.0086, 0.0146, 0.0391, 0.3086, 0.0388, 0.1133, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0111, 0.3574, 0.0432, 0.0190, 0.0220, 0.0259, 0.0496, 0.1416, 0.0591, 0.0830, 0.1895, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0123, 0.5078, 0.0430, 0.0388, 0.0055, 0.0219, 0.0393, 0.1729, 0.0159, 0.0420, 0.0669, 0.0322, 0.0000, 0.0000, 0.0000],
        [0.0068, 0.1235, 0.0359, 0.0041, 0.0175, 0.0117, 0.0144, 0.1572, 0.0253, 0.1689, 0.0381, 0.1348, 0.2617, 0.0000, 0.0000],
        [0.0109, 0.1201, 0.0205, 0.0070, 0.0055, 0.0077, 0.0072, 0.0488, 0.0116, 0.1357, 0.0496, 0.0469, 0.5078, 0.0212, 0.0000],
        [0.0205, 0.4082, 0.0449, 0.0325, 0.0106, 0.0248, 0.0840, 0.0432, 0.0135, 0.0292, 0.0334, 0.0400, 0.1074, 0.0134, 0.0947]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0225, -0.0276, -0.0131,  ..., -0.0075,  0.0158, -0.0114],
        [ 0.0296, -0.0562,  0.0029,  ...,  0.0348,  0.0217,  0.0042],
        [ 0.0071, -0.0324, -0.0415,  ...,  0.0423,  0.0096, -0.0141],
        ...,
        [ 0.0231,  0.0144, -0.0121,  ..., -0.0145,  0.0116,  0.0190],
        [ 0.0264, -0.0078,  0.0218,  ...,  0.0280, -0.0071,  0.0170],
        [-0.0434,  0.0402,  0.0031,  ...,  0.0046,  0.0206,  0.0446]], device='cuda:0', requires_grad=True)
K: tensor([-0.4961, -1.2266, -0.6133,  0.4883, -0.9727,  0.0403,  0.6289, -0.2021, -0.3535, -3.3750, -1.8672, -1.2734,  0.0505, -0.7734, -1.7188,  1.3125,  2.3594,  1.4375, -2.6562, -0.9258,  1.5625, -1.6484, -1.8438,  0.4043,  1.0391, -1.5469, -0.8906,  0.6680, -1.3125, -1.7969, -0.3027,  0.1162,
        -2.8438,  2.2500,  3.2656,  0.2793,  0.5547, -0.9883, -0.0903, -1.8359, -1.3125,  0.0684, -2.0156,  1.5469,  0.1621,  0.4297, -1.6797,  2.5312, -1.4062, -1.9453,  0.5625,  2.3125,  1.5469, -0.2832, -0.5938,  0.0160,  0.2637, -2.4688, -0.7852,  1.0625,  1.3125, -0.7461,  1.2344, -1.8438],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[     0.0026,     -0.0031,     -0.0015,  ...,     -0.0376,     -0.0291,     -0.0239],
        [    -0.0001,      0.0035,     -0.0130,  ...,      0.0083,     -0.0201,      0.0328],
        [     0.0225,     -0.0145,     -0.0000,  ...,     -0.0097,     -0.0244,     -0.0153],
        ...,
        [     0.0334,     -0.0488,     -0.0315,  ...,      0.0024,      0.0170,     -0.0110],
        [     0.0155,      0.0011,      0.0681,  ...,      0.0195,      0.0150,      0.0115],
        [    -0.0136,     -0.0068,     -0.0123,  ...,      0.0111,      0.0161,     -0.0123]], device='cuda:0', requires_grad=True)
Q: tensor([-0.1079,  1.5469,  0.5273,  0.9141, -0.0066, -1.5391, -0.0610, -2.2969, -1.4844,  0.4824, -0.0425,  0.3145,  1.0391, -0.8281, -0.9219, -0.0728, -0.0386,  0.4121, -0.2383,  1.0156, -0.3906, -0.8633,  0.4355, -0.1953,  0.9062,  0.7109, -0.9062,  1.8672, -1.5000,  1.0078, -1.1797, -1.2188,
        -0.5703,  0.5039, -1.0312, -0.6797, -0.4531, -0.0952,  2.1719, -0.7539,  0.2373, -0.0583, -0.9648,  0.3242,  0.2080,  1.4453,  0.1089,  1.0859,  1.1484, -0.8086,  0.5195,  1.7734, -0.5625, -0.1133, -0.7109,  1.3125, -2.2812,  0.0032, -0.2891,  0.2930,  0.5273, -0.5391, -0.9414, -0.5820],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  3.9062,  1.4453,  0.8984,  0.5078,  1.3516,  1.6172,  2.4062,  1.0000,  1.6953,  1.5469,  1.0391,  2.4375,  0.5781,  1.2500],
        [ 0.0000,  4.1562,  1.6094,  1.6172,  1.2344,  2.2031,  2.4062,  2.4844,  0.6133,  1.0625,  0.9648, -0.0898,  2.0625, -0.2734,  0.1924],
        [ 0.0000,  4.4062,  2.1875,  1.9062,  1.8203,  1.8438,  3.0469,  2.8750,  1.2969,  1.5781,  0.9727,  0.1406,  2.6094,  0.4922,  0.7344],
        [ 0.0000,  5.4688,  4.1562,  2.5156,  1.8125,  3.5938,  2.9219,  6.9375,  2.2500,  4.8125,  2.2969,  4.5000,  6.0938,  1.3828,  1.5156],
        [ 0.0000,  4.1250,  2.9219,  1.4297,  2.1094,  3.0156,  2.8906,  4.2500,  2.2031,  3.1875,  1.7812,  2.5625,  3.9688,  1.4844,  2.2656],
        [ 0.0000,  4.0625,  3.7188,  0.8789,  0.5156,  1.7344,  2.1250,  5.0000,  0.7891,  3.0781,  0.3613,  3.0156,  3.6094, -0.1973,  1.6484],
        [ 0.0000,  4.2188,  3.2031,  0.9531,  2.2188,  2.4844,  2.7656,  5.1250,  3.1094,  4.2500,  2.5625,  3.8750,  4.7500,  2.6250,  4.5938],
        [ 0.0000,  3.7969,  2.4062,  0.7930,  0.5273,  1.1953,  1.1172,  3.4219,  1.5859,  3.7500,  1.8672,  2.2812,  4.7500,  0.9727,  1.8281],
        [ 0.0000,  3.5156,  1.8672,  0.5000, -0.2578,  0.2676,  1.2578,  3.3281,  1.2500,  2.3125,  2.5938,  2.3594,  4.7188,  1.1406,  1.5938],
        [ 0.0000,  3.4688,  1.3516,  0.5352,  0.6797,  0.8398,  1.4922,  2.5469,  1.6719,  2.0156,  2.8281,  2.4688,  4.2500,  1.9609,  1.9219],
        [ 0.0000,  3.7188,  1.2500,  1.1484, -0.8125,  0.5703,  1.1562,  2.6406,  0.2520,  1.2266,  1.6875,  0.9570,  3.7188,  0.4102,  1.0391],
        [ 0.0000,  2.8906,  1.6562, -0.5234,  0.9375,  0.5430,  0.7461,  3.1406,  1.3125,  3.2031,  1.7188,  2.9844,  3.6562,  1.9922,  3.3438],
        [ 0.0000,  2.4062,  0.6367, -0.4434, -0.6797, -0.3457, -0.4082,  1.5000,  0.0684,  2.5312,  1.5156,  1.4609,  3.8438,  0.6719,  1.3125],
        [ 0.0000,  3.0000,  0.7891,  0.4590, -0.6562,  0.1914,  1.4141,  0.7461, -0.4121,  0.3574,  0.4941,  0.6719,  1.6562, -0.4180,  1.5312]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0123],
        [0.0041],
        [0.0050],
        [0.0030],
        [0.0085],
        [0.0036],
        [0.0041],
        [0.0031],
        [0.0037],
        [0.0079],
        [0.0054],
        [0.0034],
        [0.0031],
        [0.0038]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.1016 a:0.1729-:0.1235 white:0.1592ent:0.1816,:0.3008 a:0.0674iced:0.1445)
iced
------
		( a:0.1729-:0.1235 white:0.1592ent:0.1816,:0.3008 a:0.0674iced:0.1445 with:0.1748)
 with a sweet, sweet, sweet, and sweet, and they are a
@ 13550 train 3.7278 , allloss: 3.7373, dt: 1661.79ms, fracRes: 0.5901, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5962, norm(y): 0.9735, norm:0.6738, tok/sec: 78873.89, flops:69.07, batch-reuse:1
@ 13551 train 3.7701 , allloss: 3.7794, dt: 1258.03ms, fracRes: 0.5906, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5964, norm(y): 0.9732, norm:0.8841, tok/sec: 104188.42, flops:91.24, batch-reuse:1
@ 13552 train 3.7255 , allloss: 3.7349, dt: 1258.82ms, fracRes: 0.5919, norm(attn): 0.1719, norm(output): 0.2676, norm(x): 0.5984, norm(y): 0.9734, norm:0.6953, tok/sec: 104123.06, flops:91.18, batch-reuse:1
@ 13553 train 3.7762 , allloss: 3.7856, dt: 1266.73ms, fracRes: 0.5924, norm(attn): 0.1719, norm(output): 0.2676, norm(x): 0.5990, norm(y): 0.9735, norm:0.8139, tok/sec: 103472.60, flops:90.61, batch-reuse:1
@ 13554 train 3.7422 , allloss: 3.7518, dt: 1286.34ms, fracRes: 0.5934, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5993, norm(y): 0.9735, norm:0.7572, tok/sec: 101895.28, flops:89.23, batch-reuse:1
@ 13555 train 3.7280 , allloss: 3.7374, dt: 1284.04ms, fracRes: 0.5928, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5976, norm(y): 0.9732, norm:0.7955, tok/sec: 102078.16, flops:89.39, batch-reuse:1
@ 13556 train 3.7990 , allloss: 3.8084, dt: 1283.81ms, fracRes: 0.5916, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5961, norm(y): 0.9733, norm:0.7518, tok/sec: 102096.40, flops:89.40, batch-reuse:1
@ 13557 train 3.8212 , allloss: 3.8307, dt: 1292.55ms, fracRes: 0.5901, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.5959, norm(y): 0.9731, norm:0.7358, tok/sec: 101405.52, flops:88.80, batch-reuse:1
@ 13558 train 3.9278 , allloss: 3.9374, dt: 1265.48ms, fracRes: 0.5902, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.5943, norm(y): 0.9733, norm:0.7851, tok/sec: 103574.94, flops:90.70, batch-reuse:1
@ 13559 train 3.7531 , allloss: 3.7626, dt: 1283.30ms, fracRes: 0.5896, norm(attn): 0.1738, norm(output): 0.2676, norm(x): 0.5922, norm(y): 0.9731, norm:0.7200, tok/sec: 102136.84, flops:89.44, batch-reuse:1
@ 13560 train 3.7607 , allloss: 3.7703, dt: 1266.38ms, fracRes: 0.5906, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.5960, norm(y): 0.9731, norm:0.7527, tok/sec: 103501.70, flops:90.63, batch-reuse:1
@ 13561 train 3.7562 , allloss: 3.7658, dt: 1254.15ms, fracRes: 0.5913, norm(attn): 0.1748, norm(output): 0.2695, norm(x): 0.5991, norm(y): 0.9734, norm:0.7131, tok/sec: 104510.73, flops:91.52, batch-reuse:1
@ 13562 train 3.7558 , allloss: 3.7651, dt: 1249.19ms, fracRes: 0.5910, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.5917, norm(y): 0.9732, norm:0.7448, tok/sec: 104925.84, flops:91.88, batch-reuse:1
@ 13563 train 3.7846 , allloss: 3.7942, dt: 1265.00ms, fracRes: 0.5921, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5942, norm(y): 0.9733, norm:0.6991, tok/sec: 103614.34, flops:90.73, batch-reuse:1
@ 13564 train 3.6446 , allloss: 3.6541, dt: 1261.16ms, fracRes: 0.5919, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5965, norm(y): 0.9734, norm:0.6895, tok/sec: 103930.12, flops:91.01, batch-reuse:1
@ 13565 train 3.7141 , allloss: 3.7240, dt: 1296.95ms, fracRes: 0.5915, norm(attn): 0.1719, norm(output): 0.2695, norm(x): 0.5992, norm(y): 0.9734, norm:0.6871, tok/sec: 101061.83, flops:88.50, batch-reuse:1
@ 13566 train 3.7327 , allloss: 3.7423, dt: 1283.05ms, fracRes: 0.5906, norm(attn): 0.1738, norm(output): 0.2676, norm(x): 0.5952, norm(y): 0.9732, norm:0.6725, tok/sec: 102156.46, flops:89.46, batch-reuse:1
@ 13567 train 3.8037 , allloss: 3.8132, dt: 1269.75ms, fracRes: 0.5905, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.5968, norm(y): 0.9730, norm:0.7116, tok/sec: 103226.22, flops:90.39, batch-reuse:1
@ 13568 train 3.7726 , allloss: 3.7819, dt: 1297.11ms, fracRes: 0.5907, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5938, norm(y): 0.9731, norm:0.6601, tok/sec: 101049.62, flops:88.49, batch-reuse:1
@ 13569 train 3.7869 , allloss: 3.7962, dt: 1277.11ms, fracRes: 0.5906, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5939, norm(y): 0.9731, norm:0.6978, tok/sec: 102631.83, flops:89.87, batch-reuse:1
@ 13570 train 3.7076 , allloss: 3.7170, dt: 1260.84ms, fracRes: 0.5911, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5956, norm(y): 0.9733, norm:0.7126, tok/sec: 103956.43, flops:91.03, batch-reuse:1
@ 13571 train 3.7635 , allloss: 3.7732, dt: 1247.78ms, fracRes: 0.5907, norm(attn): 0.1748, norm(output): 0.2695, norm(x): 0.5980, norm(y): 0.9729, norm:0.7550, tok/sec: 105044.47, flops:91.99, batch-reuse:1
@ 13572 train 3.7490 , allloss: 3.7583, dt: 1243.59ms, fracRes: 0.5913, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.5955, norm(y): 0.9730, norm:0.7543, tok/sec: 105398.13, flops:92.30, batch-reuse:1
@ 13573 train 3.8669 , allloss: 3.8761, dt: 1265.61ms, fracRes: 0.5912, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5961, norm(y): 0.9730, norm:0.7536, tok/sec: 103564.08, flops:90.69, batch-reuse:1
@ 13574 train 3.7310 , allloss: 3.7403, dt: 1277.72ms, fracRes: 0.5914, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5981, norm(y): 0.9732, norm:0.7556, tok/sec: 102582.59, flops:89.83, batch-reuse:1
@ 13575 train 3.7602 , allloss: 3.7695, dt: 1277.78ms, fracRes: 0.5913, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.5990, norm(y): 0.9730, norm:0.7164, tok/sec: 102577.60, flops:89.83, batch-reuse:1
@ 13576 train 3.6967 , allloss: 3.7060, dt: 1270.78ms, fracRes: 0.5916, norm(attn): 0.1738, norm(output): 0.2676, norm(x): 0.5969, norm(y): 0.9729, norm:0.6718, tok/sec: 103143.29, flops:90.32, batch-reuse:1
@ 13577 train 3.5421 , allloss: 3.5519, dt: 1282.53ms, fracRes: 0.5919, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.5978, norm(y): 0.9731, norm:0.7881, tok/sec: 102197.92, flops:89.49, batch-reuse:1
@ 13578 train 3.5706 , allloss: 3.5803, dt: 1267.12ms, fracRes: 0.5914, norm(attn): 0.1748, norm(output): 0.2656, norm(x): 0.5914, norm(y): 0.9734, norm:0.7383, tok/sec: 103440.82, flops:90.58, batch-reuse:1
@ 13579 train 3.5975 , allloss: 3.6071, dt: 1274.06ms, fracRes: 0.5913, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5908, norm(y): 0.9733, norm:0.7431, tok/sec: 102877.65, flops:90.09, batch-reuse:1
@ 13580 train 3.5901 , allloss: 3.5997, dt: 1284.25ms, fracRes: 0.5914, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5957, norm(y): 0.9733, norm:0.6830, tok/sec: 102061.26, flops:89.37, batch-reuse:1
@ 13581 train 3.8068 , allloss: 3.8165, dt: 1299.47ms, fracRes: 0.5910, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5970, norm(y): 0.9728, norm:0.7593, tok/sec: 100865.82, flops:88.33, batch-reuse:1
@ 13582 train 3.5970 , allloss: 3.6064, dt: 1255.48ms, fracRes: 0.5906, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.5991, norm(y): 0.9730, norm:0.7400, tok/sec: 104400.22, flops:91.42, batch-reuse:1
@ 13583 train 3.5549 , allloss: 3.5644, dt: 1253.93ms, fracRes: 0.5898, norm(attn): 0.1738, norm(output): 0.2676, norm(x): 0.5960, norm(y): 0.9732, norm:0.8147, tok/sec: 104529.21, flops:91.53, batch-reuse:1
@ 13584 train 3.5675 , allloss: 3.5771, dt: 1270.17ms, fracRes: 0.5900, norm(attn): 0.1738, norm(output): 0.2676, norm(x): 0.5948, norm(y): 0.9734, norm:0.7938, tok/sec: 103192.18, flops:90.36, batch-reuse:1
@ 13585 train 3.5504 , allloss: 3.5601, dt: 1266.89ms, fracRes: 0.5902, norm(attn): 0.1738, norm(output): 0.2676, norm(x): 0.5957, norm(y): 0.9734, norm:0.7634, tok/sec: 103459.47, flops:90.60, batch-reuse:1
@ 13586 train 3.5441 , allloss: 3.5538, dt: 1258.14ms, fracRes: 0.5908, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5928, norm(y): 0.9734, norm:0.8993, tok/sec: 104179.53, flops:91.23, batch-reuse:1
@ 13587 train 3.6148 , allloss: 3.6244, dt: 1264.97ms, fracRes: 0.5918, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5962, norm(y): 0.9732, norm:0.7097, tok/sec: 103616.99, flops:90.74, batch-reuse:1
@ 13588 train 3.5841 , allloss: 3.5936, dt: 1266.00ms, fracRes: 0.5908, norm(attn): 0.1738, norm(output): 0.2676, norm(x): 0.5968, norm(y): 0.9733, norm:0.7884, tok/sec: 103532.17, flops:90.66, batch-reuse:1
@ 13589 train 3.5546 , allloss: 3.5640, dt: 1268.44ms, fracRes: 0.5906, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.5969, norm(y): 0.9733, norm:0.7419, tok/sec: 103333.52, flops:90.49, batch-reuse:1
@ 13590 train 3.5092 , allloss: 3.5185, dt: 1260.61ms, fracRes: 0.5910, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5965, norm(y): 0.9733, norm:0.6870, tok/sec: 103975.35, flops:91.05, batch-reuse:1
@ 13591 train 3.7129 , allloss: 3.7223, dt: 1268.87ms, fracRes: 0.5920, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5979, norm(y): 0.9729, norm:0.7439, tok/sec: 103298.01, flops:90.46, batch-reuse:1
@ 13592 train 3.7735 , allloss: 3.7828, dt: 1276.00ms, fracRes: 0.5921, norm(attn): 0.1719, norm(output): 0.2656, norm(x): 0.5957, norm(y): 0.9730, norm:0.6935, tok/sec: 102720.77, flops:89.95, batch-reuse:1
@ 13593 train 3.6374 , allloss: 3.6467, dt: 1265.64ms, fracRes: 0.5909, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5950, norm(y): 0.9730, norm:0.7173, tok/sec: 103561.87, flops:90.69, batch-reuse:1
@ 13594 train 3.6029 , allloss: 3.6125, dt: 1274.17ms, fracRes: 0.5907, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.5958, norm(y): 0.9733, norm:0.7402, tok/sec: 102868.46, flops:90.08, batch-reuse:1
@ 13595 train 3.7122 , allloss: 3.7219, dt: 1281.18ms, fracRes: 0.5899, norm(attn): 0.1748, norm(output): 0.2695, norm(x): 0.5941, norm(y): 0.9728, norm:0.7523, tok/sec: 102305.71, flops:89.59, batch-reuse:1
@ 13596 train 3.5346 , allloss: 3.5442, dt: 1275.99ms, fracRes: 0.5905, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.5926, norm(y): 0.9731, norm:0.7237, tok/sec: 102721.73, flops:89.95, batch-reuse:1
@ 13597 train 3.6250 , allloss: 3.6349, dt: 1280.30ms, fracRes: 0.5907, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.5973, norm(y): 0.9731, norm:0.6999, tok/sec: 102375.71, flops:89.65, batch-reuse:1
@ 13598 train 3.6339 , allloss: 3.6434, dt: 1268.64ms, fracRes: 0.5903, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.5971, norm(y): 0.9731, norm:0.7865, tok/sec: 103316.84, flops:90.47, batch-reuse:1
@ 13599 train 3.4906 , allloss: 3.5002, dt: 1271.49ms, fracRes: 0.5902, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.5951, norm(y): 0.9733, norm:0.8964, tok/sec: 103085.62, flops:90.27, batch-reuse:1
@ 13600 train 3.6248 , allloss: 3.6345, dt: 1257.24ms, fracRes: 0.5904, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.6008, norm(y): 0.9732, norm:0.7837, tok/sec: 104253.42, flops:91.29, batch-reuse:1
@ 13601 train 3.4693 , allloss: 3.4790, dt: 1262.90ms, fracRes: 0.5901, norm(attn): 0.1758, norm(output): 0.2715, norm(x): 0.6003, norm(y): 0.9731, norm:1.0171, tok/sec: 103786.55, flops:90.88, batch-reuse:1
@ 13602 train 3.6735 , allloss: 3.6829, dt: 1251.10ms, fracRes: 0.5904, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5947, norm(y): 0.9732, norm:0.7780, tok/sec: 104765.78, flops:91.74, batch-reuse:1
@ 13603 train 3.5693 , allloss: 3.5789, dt: 1273.12ms, fracRes: 0.5898, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5951, norm(y): 0.9732, norm:0.7585, tok/sec: 102952.99, flops:90.15, batch-reuse:1
@ 13604 train 3.6833 , allloss: 3.6931, dt: 1265.79ms, fracRes: 0.5895, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.5959, norm(y): 0.9734, norm:0.7974, tok/sec: 103549.58, flops:90.68, batch-reuse:1
@ 13605 train 3.6104 , allloss: 3.6200, dt: 1269.92ms, fracRes: 0.5899, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.5974, norm(y): 0.9732, norm:0.7324, tok/sec: 103212.81, flops:90.38, batch-reuse:1
@ 13606 train 3.6911 , allloss: 3.7006, dt: 1280.74ms, fracRes: 0.5910, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.6004, norm(y): 0.9732, norm:0.7368, tok/sec: 102340.55, flops:89.62, batch-reuse:1
@ 13607 train 3.6748 , allloss: 3.6842, dt: 1267.15ms, fracRes: 0.5919, norm(attn): 0.1719, norm(output): 0.2676, norm(x): 0.6010, norm(y): 0.9728, norm:0.6884, tok/sec: 103438.80, flops:90.58, batch-reuse:1
@ 13608 train 3.5806 , allloss: 3.5898, dt: 1266.63ms, fracRes: 0.5920, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5979, norm(y): 0.9730, norm:0.7127, tok/sec: 103480.86, flops:90.62, batch-reuse:1
@ 13609 train 3.4586 , allloss: 3.4687, dt: 1281.09ms, fracRes: 0.5929, norm(attn): 0.1738, norm(output): 0.2676, norm(x): 0.6033, norm(y): 0.9731, norm:0.8086, tok/sec: 102312.55, flops:89.59, batch-reuse:1
@ 13610 train 3.5675 , allloss: 3.5770, dt: 1259.68ms, fracRes: 0.5915, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5971, norm(y): 0.9730, norm:0.7610, tok/sec: 104052.00, flops:91.12, batch-reuse:1
@ 13611 train 3.5518 , allloss: 3.5618, dt: 1280.30ms, fracRes: 0.5915, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5967, norm(y): 0.9734, norm:0.7649, tok/sec: 102376.13, flops:89.65, batch-reuse:1
@ 13612 train 3.7604 , allloss: 3.7699, dt: 1288.35ms, fracRes: 0.5894, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5947, norm(y): 0.9730, norm:1.0432, tok/sec: 101736.19, flops:89.09, batch-reuse:1
@ 13613 train 3.6119 , allloss: 3.6216, dt: 1286.28ms, fracRes: 0.5903, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5944, norm(y): 0.9729, norm:0.8114, tok/sec: 101900.17, flops:89.23, batch-reuse:1
@ 13614 train 4.0731 , allloss: 4.0836, dt: 1301.25ms, fracRes: 0.5904, norm(attn): 0.1729, norm(output): 0.2715, norm(x): 0.5989, norm(y): 0.9727, norm:1.2590, tok/sec: 100728.06, flops:88.21, batch-reuse:1
@ 13615 train 3.5795 , allloss: 3.5892, dt: 1255.74ms, fracRes: 0.5917, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5939, norm(y): 0.9730, norm:0.9127, tok/sec: 104378.58, flops:91.40, batch-reuse:1
@ 13616 train 3.5101 , allloss: 3.5199, dt: 1255.48ms, fracRes: 0.5927, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.5960, norm(y): 0.9733, norm:0.8416, tok/sec: 104399.77, flops:91.42, batch-reuse:1
@ 13617 train 3.6964 , allloss: 3.7058, dt: 1254.27ms, fracRes: 0.5922, norm(attn): 0.1729, norm(output): 0.2656, norm(x): 0.5973, norm(y): 0.9731, norm:0.9190, tok/sec: 104500.32, flops:91.51, batch-reuse:1
@ 13618 train 3.7606 , allloss: 3.7699, dt: 1263.85ms, fracRes: 0.5917, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5992, norm(y): 0.9729, norm:0.9372, tok/sec: 103708.51, flops:90.82, batch-reuse:1
@ 13619 train 3.5931 , allloss: 3.6027, dt: 1264.88ms, fracRes: 0.5903, norm(attn): 0.1738, norm(output): 0.2656, norm(x): 0.5999, norm(y): 0.9730, norm:0.9330, tok/sec: 103624.30, flops:90.74, batch-reuse:1
@ 13620 train 3.6800 , allloss: 3.6900, dt: 1244.20ms, fracRes: 0.5907, norm(attn): 0.1729, norm(output): 0.2715, norm(x): 0.6040, norm(y): 0.9730, norm:0.8355, tok/sec: 105346.61, flops:92.25, batch-reuse:1
@ 13621 train 3.6696 , allloss: 3.6791, dt: 1259.60ms, fracRes: 0.5898, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5993, norm(y): 0.9730, norm:0.8190, tok/sec: 104058.54, flops:91.12, batch-reuse:1
@ 13622 train 3.6097 , allloss: 3.6195, dt: 1258.84ms, fracRes: 0.5903, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5960, norm(y): 0.9732, norm:0.7722, tok/sec: 104121.54, flops:91.18, batch-reuse:1
@ 13623 train 3.6020 , allloss: 3.6116, dt: 1260.80ms, fracRes: 0.5901, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.5963, norm(y): 0.9732, norm:0.7543, tok/sec: 103959.48, flops:91.04, batch-reuse:1
@ 13624 train 3.5816 , allloss: 3.5913, dt: 1257.20ms, fracRes: 0.5904, norm(attn): 0.1758, norm(output): 0.2695, norm(x): 0.5964, norm(y): 0.9734, norm:0.7247, tok/sec: 104256.80, flops:91.30, batch-reuse:1
@ 13625 train 3.9604 , allloss: 3.9701, dt: 1281.59ms, fracRes: 0.5904, norm(attn): 0.1758, norm(output): 0.2715, norm(x): 0.5986, norm(y): 0.9730, norm:0.9445, tok/sec: 102273.21, flops:89.56, batch-reuse:1
@ 13626 train 3.8892 , allloss: 3.8995, dt: 1263.30ms, fracRes: 0.5913, norm(attn): 0.1748, norm(output): 0.2715, norm(x): 0.6062, norm(y): 0.9729, norm:0.9280, tok/sec: 103753.80, flops:90.86, batch-reuse:1
@ 13627 train 3.8230 , allloss: 3.8326, dt: 1269.11ms, fracRes: 0.5929, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.6074, norm(y): 0.9725, norm:0.8090, tok/sec: 103278.35, flops:90.44, batch-reuse:1
@ 13628 train 3.8812 , allloss: 3.8911, dt: 1271.77ms, fracRes: 0.5928, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.6056, norm(y): 0.9724, norm:0.9433, tok/sec: 103062.39, flops:90.25, batch-reuse:1
@ 13629 train 3.8619 , allloss: 3.8716, dt: 1259.05ms, fracRes: 0.5921, norm(attn): 0.1748, norm(output): 0.2695, norm(x): 0.6049, norm(y): 0.9724, norm:0.7869, tok/sec: 104104.00, flops:91.16, batch-reuse:1
@ 13630 train 3.9322 , allloss: 3.9417, dt: 1279.15ms, fracRes: 0.5915, norm(attn): 0.1758, norm(output): 0.2715, norm(x): 0.6027, norm(y): 0.9726, norm:0.8952, tok/sec: 102468.06, flops:89.73, batch-reuse:1
@ 13631 train 3.9246 , allloss: 3.9344, dt: 1277.94ms, fracRes: 0.5910, norm(attn): 0.1748, norm(output): 0.2734, norm(x): 0.6063, norm(y): 0.9726, norm:0.9255, tok/sec: 102564.76, flops:89.81, batch-reuse:1
@ 13632 train 3.9121 , allloss: 3.9218, dt: 1256.04ms, fracRes: 0.5906, norm(attn): 0.1738, norm(output): 0.2734, norm(x): 0.6037, norm(y): 0.9725, norm:0.9555, tok/sec: 104353.28, flops:91.38, batch-reuse:1
@ 13633 train 3.8977 , allloss: 3.9076, dt: 1270.62ms, fracRes: 0.5911, norm(attn): 0.1738, norm(output): 0.2734, norm(x): 0.6067, norm(y): 0.9724, norm:0.8719, tok/sec: 103156.05, flops:90.33, batch-reuse:1
@ 13634 train 3.7829 , allloss: 3.7930, dt: 1265.14ms, fracRes: 0.5912, norm(attn): 0.1738, norm(output): 0.2715, norm(x): 0.6059, norm(y): 0.9726, norm:0.7624, tok/sec: 103603.15, flops:90.72, batch-reuse:1
@ 13635 train 3.8298 , allloss: 3.8395, dt: 1266.17ms, fracRes: 0.5908, norm(attn): 0.1748, norm(output): 0.2734, norm(x): 0.6065, norm(y): 0.9728, norm:0.7928, tok/sec: 103518.58, flops:90.65, batch-reuse:1
@ 13636 train 3.8911 , allloss: 3.9007, dt: 1278.83ms, fracRes: 0.5903, norm(attn): 0.1748, norm(output): 0.2754, norm(x): 0.6068, norm(y): 0.9727, norm:0.8924, tok/sec: 102493.91, flops:89.75, batch-reuse:1
@ 13637 train 3.8271 , allloss: 3.8368, dt: 1293.60ms, fracRes: 0.5908, norm(attn): 0.1738, norm(output): 0.2715, norm(x): 0.6028, norm(y): 0.9727, norm:0.7976, tok/sec: 101323.71, flops:88.73, batch-reuse:1
@ 13638 train 3.9001 , allloss: 3.9105, dt: 1261.91ms, fracRes: 0.5907, norm(attn): 0.1748, norm(output): 0.2715, norm(x): 0.6029, norm(y): 0.9726, norm:0.8332, tok/sec: 103867.99, flops:90.96, batch-reuse:1
@ 13639 train 3.8462 , allloss: 3.8563, dt: 1272.45ms, fracRes: 0.5919, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.6018, norm(y): 0.9728, norm:0.8564, tok/sec: 103007.68, flops:90.20, batch-reuse:1
@ 13640 train 3.8580 , allloss: 3.8679, dt: 1251.38ms, fracRes: 0.5925, norm(attn): 0.1748, norm(output): 0.2695, norm(x): 0.6006, norm(y): 0.9728, norm:0.8020, tok/sec: 104741.57, flops:91.72, batch-reuse:1
@ 13641 train 3.8388 , allloss: 3.8486, dt: 1281.91ms, fracRes: 0.5922, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.6004, norm(y): 0.9725, norm:0.7856, tok/sec: 102247.17, flops:89.54, batch-reuse:1
@ 13642 train 3.7872 , allloss: 3.7971, dt: 1253.26ms, fracRes: 0.5927, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.6024, norm(y): 0.9726, norm:0.7875, tok/sec: 104584.63, flops:91.58, batch-reuse:1
@ 13643 train 3.8584 , allloss: 3.8680, dt: 1270.49ms, fracRes: 0.5926, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.6021, norm(y): 0.9723, norm:0.7365, tok/sec: 103166.69, flops:90.34, batch-reuse:1
@ 13644 train 3.8567 , allloss: 3.8662, dt: 1274.58ms, fracRes: 0.5930, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.6019, norm(y): 0.9724, norm:0.6835, tok/sec: 102835.06, flops:90.05, batch-reuse:1
@ 13645 train 3.7880 , allloss: 3.7978, dt: 1253.23ms, fracRes: 0.5925, norm(attn): 0.1729, norm(output): 0.2715, norm(x): 0.6053, norm(y): 0.9725, norm:0.7217, tok/sec: 104587.08, flops:91.59, batch-reuse:1
@ 13646 train 3.8445 , allloss: 3.8542, dt: 1283.99ms, fracRes: 0.5911, norm(attn): 0.1729, norm(output): 0.2715, norm(x): 0.6024, norm(y): 0.9725, norm:0.7289, tok/sec: 102081.65, flops:89.39, batch-reuse:1
@ 13647 train 3.9050 , allloss: 3.9147, dt: 1310.60ms, fracRes: 0.5904, norm(attn): 0.1748, norm(output): 0.2715, norm(x): 0.6019, norm(y): 0.9726, norm:0.8063, tok/sec: 100009.48, flops:87.58, batch-reuse:1
@ 13648 train 3.8435 , allloss: 3.8534, dt: 1310.57ms, fracRes: 0.5904, norm(attn): 0.1748, norm(output): 0.2715, norm(x): 0.6019, norm(y): 0.9727, norm:0.7569, tok/sec: 100011.63, flops:87.58, batch-reuse:1
@ 13649 train 3.8367 , allloss: 3.8464, dt: 1251.55ms, fracRes: 0.5893, norm(attn): 0.1748, norm(output): 0.2715, norm(x): 0.5976, norm(y): 0.9726, norm:0.7144, tok/sec: 104728.02, flops:91.71, batch-reuse:1
@ 13650 train 3.8446 , allloss: 3.8544, dt: 1273.20ms, fracRes: 0.5899, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.5981, norm(y): 0.9727, norm:0.7590, tok/sec: 102947.06, flops:90.15, batch-reuse:1
@ 13651 train 3.8522 , allloss: 3.8620, dt: 1281.06ms, fracRes: 0.5906, norm(attn): 0.1748, norm(output): 0.2695, norm(x): 0.5974, norm(y): 0.9726, norm:0.7992, tok/sec: 102315.61, flops:89.60, batch-reuse:1
@ 13652 train 3.7621 , allloss: 3.7717, dt: 1281.73ms, fracRes: 0.5919, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.5990, norm(y): 0.9727, norm:0.7651, tok/sec: 102261.51, flops:89.55, batch-reuse:1
@ 13653 train 3.7885 , allloss: 3.7981, dt: 1289.54ms, fracRes: 0.5922, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.5988, norm(y): 0.9728, norm:0.7038, tok/sec: 101642.84, flops:89.01, batch-reuse:1
@ 13654 train 3.9425 , allloss: 3.9520, dt: 1275.08ms, fracRes: 0.5920, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.5994, norm(y): 0.9726, norm:0.8457, tok/sec: 102795.04, flops:90.02, batch-reuse:1
@ 13655 train 3.9091 , allloss: 3.9184, dt: 1245.14ms, fracRes: 0.5916, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.5969, norm(y): 0.9726, norm:0.8359, tok/sec: 105266.85, flops:92.18, batch-reuse:1
@ 13656 train 3.8192 , allloss: 3.8285, dt: 1277.24ms, fracRes: 0.5901, norm(attn): 0.1758, norm(output): 0.2715, norm(x): 0.5970, norm(y): 0.9726, norm:0.7573, tok/sec: 102621.22, flops:89.86, batch-reuse:1
@ 13657 train 3.9952 , allloss: 4.0047, dt: 1293.07ms, fracRes: 0.5899, norm(attn): 0.1729, norm(output): 0.2715, norm(x): 0.6000, norm(y): 0.9725, norm:0.8265, tok/sec: 101365.11, flops:88.76, batch-reuse:1
@ 13658 train 3.8574 , allloss: 3.8670, dt: 1276.99ms, fracRes: 0.5901, norm(attn): 0.1748, norm(output): 0.2715, norm(x): 0.6018, norm(y): 0.9726, norm:0.8521, tok/sec: 102641.10, flops:89.88, batch-reuse:1
@ 13659 train 3.7938 , allloss: 3.8032, dt: 1266.90ms, fracRes: 0.5908, norm(attn): 0.1748, norm(output): 0.2695, norm(x): 0.5994, norm(y): 0.9727, norm:0.8073, tok/sec: 103459.24, flops:90.60, batch-reuse:1
@ 13660 train 3.7960 , allloss: 3.8053, dt: 1288.98ms, fracRes: 0.5910, norm(attn): 0.1777, norm(output): 0.2734, norm(x): 0.6004, norm(y): 0.9726, norm:0.8658, tok/sec: 101686.98, flops:89.05, batch-reuse:1
@ 13661 train 3.7892 , allloss: 3.7987, dt: 1286.93ms, fracRes: 0.5914, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.6012, norm(y): 0.9727, norm:0.8796, tok/sec: 101848.96, flops:89.19, batch-reuse:1
@ 13662 train 3.8025 , allloss: 3.8121, dt: 1277.57ms, fracRes: 0.5921, norm(attn): 0.1758, norm(output): 0.2695, norm(x): 0.6045, norm(y): 0.9727, norm:0.7708, tok/sec: 102595.04, flops:89.84, batch-reuse:1
@ 13663 train 3.8865 , allloss: 3.8962, dt: 1269.47ms, fracRes: 0.5923, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.6039, norm(y): 0.9727, norm:0.8183, tok/sec: 103249.51, flops:90.41, batch-reuse:1
@ 13664 train 3.7770 , allloss: 3.7865, dt: 1260.69ms, fracRes: 0.5911, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.6010, norm(y): 0.9726, norm:0.7697, tok/sec: 103968.64, flops:91.04, batch-reuse:1
@ 13665 train 3.7251 , allloss: 3.7356, dt: 1253.05ms, fracRes: 0.5933, norm(attn): 0.1729, norm(output): 0.2715, norm(x): 0.6097, norm(y): 0.9730, norm:1.1572, tok/sec: 104602.22, flops:91.60, batch-reuse:1
@ 13666 train 3.7893 , allloss: 3.7996, dt: 1254.29ms, fracRes: 0.5907, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.6008, norm(y): 0.9726, norm:0.9007, tok/sec: 104499.11, flops:91.51, batch-reuse:1
@ 13667 train 3.7497 , allloss: 3.7599, dt: 1276.88ms, fracRes: 0.5898, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.5990, norm(y): 0.9726, norm:0.7971, tok/sec: 102650.23, flops:89.89, batch-reuse:1
@ 13668 train 3.8472 , allloss: 3.8571, dt: 1264.56ms, fracRes: 0.5901, norm(attn): 0.1738, norm(output): 0.2715, norm(x): 0.5992, norm(y): 0.9728, norm:0.7705, tok/sec: 103650.38, flops:90.77, batch-reuse:1
@ 13669 train 3.8401 , allloss: 3.8497, dt: 1280.18ms, fracRes: 0.5906, norm(attn): 0.1748, norm(output): 0.2695, norm(x): 0.5973, norm(y): 0.9725, norm:0.7623, tok/sec: 102385.78, flops:89.66, batch-reuse:1
@ 13670 train 3.8906 , allloss: 3.8999, dt: 1288.77ms, fracRes: 0.5906, norm(attn): 0.1738, norm(output): 0.2676, norm(x): 0.5937, norm(y): 0.9723, norm:0.7515, tok/sec: 101702.80, flops:89.06, batch-reuse:1
@ 13671 train 3.8513 , allloss: 3.8608, dt: 1267.68ms, fracRes: 0.5910, norm(attn): 0.1748, norm(output): 0.2695, norm(x): 0.5962, norm(y): 0.9724, norm:0.7680, tok/sec: 103395.40, flops:90.54, batch-reuse:1
@ 13672 train 3.7292 , allloss: 3.7388, dt: 1254.52ms, fracRes: 0.5916, norm(attn): 0.1748, norm(output): 0.2695, norm(x): 0.5968, norm(y): 0.9725, norm:0.7280, tok/sec: 104479.65, flops:91.49, batch-reuse:1
@ 13673 train 3.8081 , allloss: 3.8177, dt: 1275.79ms, fracRes: 0.5921, norm(attn): 0.1738, norm(output): 0.2676, norm(x): 0.5962, norm(y): 0.9726, norm:0.7335, tok/sec: 102737.59, flops:89.97, batch-reuse:1
@ 13674 train 3.7856 , allloss: 3.7952, dt: 1285.40ms, fracRes: 0.5923, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5953, norm(y): 0.9725, norm:0.7150, tok/sec: 101969.65, flops:89.29, batch-reuse:1
@ 13675 train 3.8352 , allloss: 3.8450, dt: 1284.14ms, fracRes: 0.5928, norm(attn): 0.1719, norm(output): 0.2695, norm(x): 0.6008, norm(y): 0.9722, norm:0.8130, tok/sec: 102070.03, flops:89.38, batch-reuse:1
@ 13676 train 3.7592 , allloss: 3.7687, dt: 1265.58ms, fracRes: 0.5925, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5990, norm(y): 0.9724, norm:0.7713, tok/sec: 103566.75, flops:90.69, batch-reuse:1
@ 13677 train 3.8015 , allloss: 3.8109, dt: 1278.40ms, fracRes: 0.5915, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5993, norm(y): 0.9723, norm:0.7094, tok/sec: 102528.39, flops:89.78, batch-reuse:1
@ 13678 train 3.8926 , allloss: 3.9021, dt: 1265.76ms, fracRes: 0.5910, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.6009, norm(y): 0.9723, norm:0.7067, tok/sec: 103552.06, flops:90.68, batch-reuse:1
@ 13679 train 3.8103 , allloss: 3.8199, dt: 1254.55ms, fracRes: 0.5904, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.6004, norm(y): 0.9724, norm:0.6937, tok/sec: 104477.20, flops:91.49, batch-reuse:1
@ 13680 train 4.0797 , allloss: 4.0897, dt: 1250.10ms, fracRes: 0.5900, norm(attn): 0.1738, norm(output): 0.2715, norm(x): 0.6034, norm(y): 0.9722, norm:0.8101, tok/sec: 104849.22, flops:91.81, batch-reuse:1
@ 13681 train 3.7951 , allloss: 3.8045, dt: 1263.57ms, fracRes: 0.5900, norm(attn): 0.1758, norm(output): 0.2734, norm(x): 0.6043, norm(y): 0.9723, norm:0.7296, tok/sec: 103731.60, flops:90.84, batch-reuse:1
@ 13682 train 3.8387 , allloss: 3.8481, dt: 1281.54ms, fracRes: 0.5903, norm(attn): 0.1738, norm(output): 0.2715, norm(x): 0.6034, norm(y): 0.9724, norm:0.6859, tok/sec: 102276.63, flops:89.56, batch-reuse:1
@ 13683 train 3.7481 , allloss: 3.7572, dt: 1246.73ms, fracRes: 0.5898, norm(attn): 0.1748, norm(output): 0.2715, norm(x): 0.6001, norm(y): 0.9724, norm:0.7126, tok/sec: 105132.34, flops:92.06, batch-reuse:1
@ 13684 train 3.7737 , allloss: 3.7830, dt: 1281.09ms, fracRes: 0.5895, norm(attn): 0.1748, norm(output): 0.2695, norm(x): 0.5993, norm(y): 0.9724, norm:0.7043, tok/sec: 102313.16, flops:89.59, batch-reuse:1
@ 13685 train 3.8176 , allloss: 3.8268, dt: 1263.76ms, fracRes: 0.5899, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.5986, norm(y): 0.9724, norm:0.6780, tok/sec: 103715.59, flops:90.82, batch-reuse:1
@ 13686 train 3.7354 , allloss: 3.7447, dt: 1267.54ms, fracRes: 0.5908, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.6000, norm(y): 0.9725, norm:0.7480, tok/sec: 103406.76, flops:90.55, batch-reuse:1
@ 13687 train 3.8841 , allloss: 3.8992, dt: 1277.11ms, fracRes: 0.5911, norm(attn): 0.1738, norm(output): 0.2715, norm(x): 0.6011, norm(y): 0.9724, norm:0.7835, tok/sec: 102631.54, flops:89.87, batch-reuse:1
@ 13688 train 3.6026 , allloss: 3.6120, dt: 1284.97ms, fracRes: 0.5901, norm(attn): 0.1748, norm(output): 0.2695, norm(x): 0.5953, norm(y): 0.9727, norm:0.7257, tok/sec: 102003.73, flops:89.32, batch-reuse:1
@ 13689 train 3.8825 , allloss: 3.8917, dt: 1272.02ms, fracRes: 0.5897, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5929, norm(y): 0.9722, norm:0.8725, tok/sec: 103042.38, flops:90.23, batch-reuse:1
@ 13690 train 3.8185 , allloss: 3.8281, dt: 1267.40ms, fracRes: 0.5904, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.5976, norm(y): 0.9724, norm:0.8050, tok/sec: 103418.41, flops:90.56, batch-reuse:1
@ 13691 train 3.8115 , allloss: 3.8207, dt: 1255.93ms, fracRes: 0.5909, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5964, norm(y): 0.9721, norm:0.7435, tok/sec: 104362.17, flops:91.39, batch-reuse:1
@ 13692 train 3.7474 , allloss: 3.7566, dt: 1269.09ms, fracRes: 0.5915, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.6006, norm(y): 0.9723, norm:0.7477, tok/sec: 103279.94, flops:90.44, batch-reuse:1
@ 13693 train 3.7407 , allloss: 3.7501, dt: 1252.33ms, fracRes: 0.5913, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5996, norm(y): 0.9723, norm:0.8589, tok/sec: 104662.64, flops:91.65, batch-reuse:1
@ 13694 train 3.8598 , allloss: 3.8692, dt: 1295.83ms, fracRes: 0.5916, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.6000, norm(y): 0.9724, norm:0.7339, tok/sec: 101149.39, flops:88.58, batch-reuse:1
@ 13695 train 3.8712 , allloss: 3.8805, dt: 1286.40ms, fracRes: 0.5916, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5967, norm(y): 0.9722, norm:0.7351, tok/sec: 101890.37, flops:89.22, batch-reuse:1
@ 13696 train 3.7915 , allloss: 3.8009, dt: 1281.35ms, fracRes: 0.5922, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5950, norm(y): 0.9725, norm:0.8463, tok/sec: 102291.72, flops:89.58, batch-reuse:1
@ 13697 train 3.8078 , allloss: 3.8177, dt: 1274.75ms, fracRes: 0.5926, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.5965, norm(y): 0.9724, norm:0.8125, tok/sec: 102821.65, flops:90.04, batch-reuse:1
@ 13698 train 3.7204 , allloss: 3.7319, dt: 1257.49ms, fracRes: 0.5935, norm(attn): 0.1719, norm(output): 0.2676, norm(x): 0.5987, norm(y): 0.9728, norm:0.8257, tok/sec: 104233.32, flops:91.28, batch-reuse:1
@ 13699 train 3.8957 , allloss: 3.9094, dt: 1303.66ms, fracRes: 0.5903, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5935, norm(y): 0.9723, norm:0.8463, tok/sec: 100541.21, flops:88.04, batch-reuse:1
@ 13700 train 3.7851 , allloss: 3.7949, dt: 1289.52ms, fracRes: 0.5905, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.6000, norm(y): 0.9725, norm:0.7729, tok/sec: 101643.68, flops:89.01, batch-reuse:1
@ 13701 train 3.7607 , allloss: 3.7704, dt: 1261.19ms, fracRes: 0.5910, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.6043, norm(y): 0.9721, norm:0.8096, tok/sec: 103927.25, flops:91.01, batch-reuse:1
@ 13702 train 3.8329 , allloss: 3.8438, dt: 1286.79ms, fracRes: 0.5924, norm(attn): 0.1738, norm(output): 0.2734, norm(x): 0.6085, norm(y): 0.9723, norm:1.3647, tok/sec: 101859.37, flops:89.20, batch-reuse:1
@ 13703 train 3.7782 , allloss: 3.7878, dt: 1283.38ms, fracRes: 0.5914, norm(attn): 0.1738, norm(output): 0.2715, norm(x): 0.6032, norm(y): 0.9722, norm:1.0789, tok/sec: 102130.67, flops:89.43, batch-reuse:1
@ 13704 train 3.8019 , allloss: 3.8115, dt: 1276.33ms, fracRes: 0.5916, norm(attn): 0.1748, norm(output): 0.2715, norm(x): 0.6057, norm(y): 0.9724, norm:0.8653, tok/sec: 102694.08, flops:89.93, batch-reuse:1
@ 13705 train 3.7778 , allloss: 3.7876, dt: 1257.35ms, fracRes: 0.5917, norm(attn): 0.1748, norm(output): 0.2715, norm(x): 0.6073, norm(y): 0.9724, norm:0.7791, tok/sec: 104245.00, flops:91.29, batch-reuse:1
@ 13706 train 3.8436 , allloss: 3.8533, dt: 1272.26ms, fracRes: 0.5901, norm(attn): 0.1758, norm(output): 0.2734, norm(x): 0.6026, norm(y): 0.9721, norm:0.8101, tok/sec: 103022.72, flops:90.22, batch-reuse:1
@ 13707 train 3.8836 , allloss: 3.8931, dt: 1275.42ms, fracRes: 0.5909, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.5992, norm(y): 0.9723, norm:0.9149, tok/sec: 102767.57, flops:89.99, batch-reuse:1
@ 13708 train 3.8270 , allloss: 3.8370, dt: 1261.46ms, fracRes: 0.5907, norm(attn): 0.1748, norm(output): 0.2715, norm(x): 0.6045, norm(y): 0.9724, norm:0.8182, tok/sec: 103904.90, flops:90.99, batch-reuse:1
@ 13709 train 3.8607 , allloss: 3.8699, dt: 1287.80ms, fracRes: 0.5907, norm(attn): 0.1748, norm(output): 0.2695, norm(x): 0.6009, norm(y): 0.9724, norm:0.8459, tok/sec: 101779.43, flops:89.13, batch-reuse:1
@ 13710 train 3.9079 , allloss: 3.9169, dt: 1264.47ms, fracRes: 0.5915, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.5989, norm(y): 0.9721, norm:0.9254, tok/sec: 103658.06, flops:90.77, batch-reuse:1
@ 13711 train 3.6813 , allloss: 3.6913, dt: 1258.88ms, fracRes: 0.5914, norm(attn): 0.1748, norm(output): 0.2715, norm(x): 0.6064, norm(y): 0.9723, norm:0.8243, tok/sec: 104118.21, flops:91.17, batch-reuse:1
@ 13712 train 3.7352 , allloss: 3.7448, dt: 1257.74ms, fracRes: 0.5907, norm(attn): 0.1758, norm(output): 0.2695, norm(x): 0.6016, norm(y): 0.9723, norm:0.8372, tok/sec: 104212.16, flops:91.26, batch-reuse:1
@ 13713 train 3.7784 , allloss: 3.7880, dt: 1263.70ms, fracRes: 0.5906, norm(attn): 0.1748, norm(output): 0.2715, norm(x): 0.6027, norm(y): 0.9720, norm:0.7847, tok/sec: 103720.98, flops:90.83, batch-reuse:1
@ 13714 train 3.7846 , allloss: 3.7941, dt: 1277.82ms, fracRes: 0.5906, norm(attn): 0.1729, norm(output): 0.2715, norm(x): 0.6023, norm(y): 0.9718, norm:0.8681, tok/sec: 102574.88, flops:89.82, batch-reuse:1
@ 13715 train 3.8000 , allloss: 3.8092, dt: 1303.14ms, fracRes: 0.5902, norm(attn): 0.1729, norm(output): 0.2734, norm(x): 0.6035, norm(y): 0.9718, norm:0.9621, tok/sec: 100581.92, flops:88.08, batch-reuse:1
@ 13716 train 3.8368 , allloss: 3.8462, dt: 1286.79ms, fracRes: 0.5897, norm(attn): 0.1738, norm(output): 0.2734, norm(x): 0.6028, norm(y): 0.9721, norm:0.8050, tok/sec: 101859.71, flops:89.20, batch-reuse:1
@ 13717 train 3.7870 , allloss: 3.7964, dt: 1294.82ms, fracRes: 0.5900, norm(attn): 0.1748, norm(output): 0.2734, norm(x): 0.6044, norm(y): 0.9723, norm:0.8913, tok/sec: 101228.24, flops:88.64, batch-reuse:1
@ 13718 train 3.8296 , allloss: 3.8389, dt: 1262.62ms, fracRes: 0.5901, norm(attn): 0.1748, norm(output): 0.2715, norm(x): 0.6003, norm(y): 0.9720, norm:0.8045, tok/sec: 103809.35, flops:90.90, batch-reuse:1
@ 13719 train 3.7948 , allloss: 3.8048, dt: 1288.45ms, fracRes: 0.5911, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.6010, norm(y): 0.9721, norm:0.7741, tok/sec: 101728.55, flops:89.08, batch-reuse:1
@ 13720 train 3.7738 , allloss: 3.7832, dt: 1263.28ms, fracRes: 0.5911, norm(attn): 0.1738, norm(output): 0.2715, norm(x): 0.5996, norm(y): 0.9723, norm:0.7675, tok/sec: 103755.04, flops:90.86, batch-reuse:1
@ 13721 train 3.7396 , allloss: 3.7489, dt: 1274.66ms, fracRes: 0.5910, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.5975, norm(y): 0.9724, norm:0.7508, tok/sec: 102829.21, flops:90.05, batch-reuse:1
@ 13722 train 3.7773 , allloss: 3.7867, dt: 1274.98ms, fracRes: 0.5912, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.5946, norm(y): 0.9724, norm:0.7069, tok/sec: 102802.87, flops:90.02, batch-reuse:1
@ 13723 train 3.7380 , allloss: 3.7476, dt: 1249.22ms, fracRes: 0.5916, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.5946, norm(y): 0.9723, norm:0.7279, tok/sec: 104923.46, flops:91.88, batch-reuse:1
@ 13724 train 3.7460 , allloss: 3.7560, dt: 1269.78ms, fracRes: 0.5927, norm(attn): 0.1738, norm(output): 0.2715, norm(x): 0.6015, norm(y): 0.9720, norm:0.8444, tok/sec: 103224.26, flops:90.39, batch-reuse:1
@ 13725 train 3.7909 , allloss: 3.8006, dt: 1276.70ms, fracRes: 0.5924, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.5956, norm(y): 0.9720, norm:0.7259, tok/sec: 102664.70, flops:89.90, batch-reuse:1
@ 13726 train 3.9222 , allloss: 3.9325, dt: 1280.34ms, fracRes: 0.5922, norm(attn): 0.1748, norm(output): 0.2695, norm(x): 0.6013, norm(y): 0.9724, norm:0.9292, tok/sec: 102372.64, flops:89.65, batch-reuse:1
@ 13727 train 3.6677 , allloss: 3.6772, dt: 1291.31ms, fracRes: 0.5913, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.5999, norm(y): 0.9722, norm:0.7019, tok/sec: 101503.10, flops:88.88, batch-reuse:1
@ 13728 train 3.7891 , allloss: 3.7988, dt: 1281.50ms, fracRes: 0.5910, norm(attn): 0.1748, norm(output): 0.2695, norm(x): 0.5973, norm(y): 0.9720, norm:0.6898, tok/sec: 102279.96, flops:89.57, batch-reuse:1
@ 13729 train 3.7865 , allloss: 3.7959, dt: 1270.29ms, fracRes: 0.5920, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.5971, norm(y): 0.9723, norm:0.7928, tok/sec: 103182.51, flops:90.36, batch-reuse:1
@ 13730 train 3.7299 , allloss: 3.7393, dt: 1271.94ms, fracRes: 0.5920, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.6019, norm(y): 0.9720, norm:0.7687, tok/sec: 103049.08, flops:90.24, batch-reuse:1
@ 13731 train 3.8094 , allloss: 3.8188, dt: 1262.60ms, fracRes: 0.5914, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.6011, norm(y): 0.9718, norm:0.7143, tok/sec: 103810.99, flops:90.91, batch-reuse:1
@ 13732 train 3.7051 , allloss: 3.7143, dt: 1479.22ms, fracRes: 0.5906, norm(attn): 0.1729, norm(output): 0.2715, norm(x): 0.6000, norm(y): 0.9718, norm:0.7435, tok/sec: 88608.94, flops:77.59, batch-reuse:1
@ 13733 train 3.7454 , allloss: 3.7546, dt: 1282.72ms, fracRes: 0.5902, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.5979, norm(y): 0.9718, norm:0.7303, tok/sec: 102182.49, flops:89.48, batch-reuse:1
@ 13734 train 3.8780 , allloss: 3.8874, dt: 1277.18ms, fracRes: 0.5896, norm(attn): 0.1729, norm(output): 0.2715, norm(x): 0.5969, norm(y): 0.9718, norm:0.7452, tok/sec: 102626.25, flops:89.87, batch-reuse:1
@ 13735 train 3.7161 , allloss: 3.7255, dt: 1269.53ms, fracRes: 0.5897, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.5961, norm(y): 0.9723, norm:0.7165, tok/sec: 103244.15, flops:90.41, batch-reuse:1
@ 13736 train 3.6903 , allloss: 3.7003, dt: 1261.42ms, fracRes: 0.5897, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.5952, norm(y): 0.9720, norm:0.6871, tok/sec: 103908.08, flops:90.99, batch-reuse:1
@ 13737 train 3.7914 , allloss: 3.8014, dt: 1266.16ms, fracRes: 0.5912, norm(attn): 0.1738, norm(output): 0.2676, norm(x): 0.5984, norm(y): 0.9721, norm:0.7701, tok/sec: 103518.95, flops:90.65, batch-reuse:1
@ 13738 train 3.7129 , allloss: 3.7223, dt: 1262.09ms, fracRes: 0.5911, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5960, norm(y): 0.9720, norm:0.7057, tok/sec: 103853.27, flops:90.94, batch-reuse:1
@ 13739 train 3.7309 , allloss: 3.7403, dt: 1273.72ms, fracRes: 0.5915, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.5961, norm(y): 0.9721, norm:0.6816, tok/sec: 102904.76, flops:90.11, batch-reuse:1
@ 13740 train 3.7723 , allloss: 3.7818, dt: 1270.39ms, fracRes: 0.5908, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.5969, norm(y): 0.9718, norm:0.6952, tok/sec: 103174.38, flops:90.35, batch-reuse:1
@ 13741 train 3.7814 , allloss: 3.7909, dt: 1276.39ms, fracRes: 0.5908, norm(attn): 0.1748, norm(output): 0.2715, norm(x): 0.5964, norm(y): 0.9718, norm:0.7566, tok/sec: 102689.94, flops:89.92, batch-reuse:1
@ 13742 train 3.7500 , allloss: 3.7592, dt: 1280.14ms, fracRes: 0.5912, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.5985, norm(y): 0.9719, norm:0.7038, tok/sec: 102388.52, flops:89.66, batch-reuse:1
@ 13743 train 3.6784 , allloss: 3.6877, dt: 1298.64ms, fracRes: 0.5913, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.5972, norm(y): 0.9721, norm:0.7062, tok/sec: 100930.46, flops:88.38, batch-reuse:1
@ 13744 train 3.6781 , allloss: 3.6878, dt: 1279.44ms, fracRes: 0.5921, norm(attn): 0.1738, norm(output): 0.2715, norm(x): 0.6031, norm(y): 0.9719, norm:0.7778, tok/sec: 102444.42, flops:89.71, batch-reuse:1
@ 13745 train 3.7929 , allloss: 3.8023, dt: 1291.50ms, fracRes: 0.5906, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.5940, norm(y): 0.9718, norm:0.7653, tok/sec: 101487.83, flops:88.87, batch-reuse:1
@ 13746 train 3.6834 , allloss: 3.6930, dt: 1279.41ms, fracRes: 0.5908, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.5960, norm(y): 0.9719, norm:0.8236, tok/sec: 102447.57, flops:89.71, batch-reuse:1
@ 13747 train 3.7002 , allloss: 3.7093, dt: 1293.62ms, fracRes: 0.5904, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.5945, norm(y): 0.9718, norm:0.7102, tok/sec: 101321.79, flops:88.73, batch-reuse:1
@ 13748 train 3.7488 , allloss: 3.7586, dt: 1279.93ms, fracRes: 0.5914, norm(attn): 0.1738, norm(output): 0.2754, norm(x): 0.6051, norm(y): 0.9720, norm:0.8074, tok/sec: 102405.63, flops:89.68, batch-reuse:1
@ 13749 train 3.8917 , allloss: 3.9011, dt: 1274.95ms, fracRes: 0.5905, norm(attn): 0.1719, norm(output): 0.2715, norm(x): 0.6026, norm(y): 0.9718, norm:0.8948, tok/sec: 102805.35, flops:90.03, batch-reuse:1
@ 13750 train 3.8942 , allloss: 3.9037, dt: 1264.91ms, fracRes: 0.5901, norm(attn): 0.1729, norm(output): 0.2695, norm(x): 0.5983, norm(y): 0.9719, norm:0.8836, tok/sec: 103621.86, flops:90.74, batch-reuse:1
@ 13751 train 3.7694 , allloss: 3.7785, dt: 1278.32ms, fracRes: 0.5906, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5973, norm(y): 0.9719, norm:0.7148, tok/sec: 102534.36, flops:89.79, batch-reuse:1
@ 13752 train 3.7465 , allloss: 3.7558, dt: 1288.79ms, fracRes: 0.5916, norm(attn): 0.1729, norm(output): 0.2676, norm(x): 0.5966, norm(y): 0.9720, norm:0.8728, tok/sec: 101701.88, flops:89.06, batch-reuse:1
@ 13753 train 3.7947 , allloss: 3.8039, dt: 1266.39ms, fracRes: 0.5904, norm(attn): 0.1738, norm(output): 0.2695, norm(x): 0.5928, norm(y): 0.9721, norm:0.8432, tok/sec: 103500.28, flops:90.63, batch-reuse:1
@ 13754 train 3.7493 , allloss: 3.7587, dt: 1263.41ms, fracRes: 0.5903, norm(attn): 0.1748, norm(output): 0.2715, norm(x): 0.5938, norm(y): 0.9722, norm:0.8087, tok/sec: 103744.23, flops:90.85, batch-reuse:1
