Threshold: 0.1
Enable layer loss: False
MAX LEARNING RATE: 0.00015
Experiment name: 17-1minus-mlpconcat-crazystuff-7
MLPSCALE: 2
Experiment description: 
```
Transformer, max LR 0.00015
Setting:
========
        self.compiler = BenCompilerNoOp(config)
        self.execute = BenExecute(config)
========
        y = self.ln_1(x)
        attn, xWeights, scores = self.attn(y, y, print_weights=print_weights)
        program = self.compiler(y)
        machineOutput = self.execute(program, attn)
        newx = xWeights * x + (1 - xWeights) * machineOutput
========
                x, metadata = block(x,print_weights=print_weights,step=i)
                _x_total = x
                _in = x.detach()
                _x, _ = block(_in,print_weights=False) # Do again... lol
                _xtraloss = _xtraloss + (1 - F.cosine_similarity(_x, _in, dim=-1).mean())
========
VALUEMATRIX=True
REUSE_WEIGHTS=True
MLP_SCALE=2
MEASURE_SELF_CONTRIBUTION=False
NEW_ALL_LAYER_LOSS=False
MATRIX_NUM_PARAMS=4096
MLPMAT_INNER_SIZE=64
DELETE_SELF_CONTRIBUTION=False
EXTRACT_SELF_CONTRIBUTION=False
ATTENTION_SINK=True
IDENTITY_LOSS=True
```
![caption](img/17-1minus-mlpconcat-crazystuff-7.jpg)

Warmup steps: 1000
total desired batch size: 131072
Mini-batch size: 8*1024
=> calculated gradient accumulation steps: 16
=> calculated gradient accumulation steps: 16
Training max steps: 300001Num GPUs: 1{'block_size': 1024, 'vocab_size': 50304, 'n_layer': 12, 'n_head': 12, 'n_embd': 768}
num decayed parameter tensors: 6, with 45,318,144 parameters
num non-decayed parameter tensors: 6, with 5,376 parameters
@ 0 train 10.9131 , allloss: 18.6940, dt: 2683.42ms, fracRes: 0.0061, norm(attn): 0.0332, norm(output): 0.0518, norm(x): 0.0498, norm(y): 0.9984, norm:30.7243, tok/sec: 48845.12, flops:19.03, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5078, 0.4902, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3242, 0.3848, 0.2930, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2432, 0.1245, 0.4316, 0.2012, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1689, 0.2168, 0.2266, 0.1670, 0.2197, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1641, 0.2178, 0.2383, 0.1299, 0.1108, 0.1396, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1475, 0.1650, 0.1260, 0.1328, 0.1079, 0.1904, 0.1309, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1309, 0.1523, 0.1309, 0.1738, 0.1357, 0.1016, 0.0996, 0.0747, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1060, 0.1074, 0.1562, 0.0459, 0.1914, 0.1040, 0.1123, 0.0684, 0.1084, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0977, 0.0864, 0.0757, 0.0708, 0.1406, 0.0845, 0.1279, 0.1079, 0.0728, 0.1357, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0835, 0.0693, 0.1240, 0.1445, 0.0623, 0.0608, 0.1216, 0.1069, 0.0649, 0.0654, 0.0977, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0737, 0.0518, 0.1055, 0.0864, 0.1021, 0.0583, 0.1016, 0.0859, 0.0742, 0.0796, 0.0762, 0.1045, 0.0000, 0.0000, 0.0000],
        [0.0742, 0.0708, 0.0466, 0.1172, 0.0854, 0.0679, 0.0674, 0.0737, 0.0479, 0.0967, 0.0947, 0.0923, 0.0654, 0.0000, 0.0000],
        [0.0674, 0.0742, 0.0762, 0.0364, 0.1138, 0.0776, 0.0742, 0.0583, 0.0664, 0.0483, 0.0874, 0.0664, 0.0498, 0.1030, 0.0000],
        [0.0598, 0.0625, 0.0513, 0.0557, 0.0530, 0.0596, 0.0679, 0.0728, 0.0762, 0.0515, 0.0588, 0.1016, 0.1069, 0.0381, 0.0845]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0232,  0.0277, -0.0177,  ...,  0.0333,  0.0151, -0.0307],
        [-0.0298,  0.0123, -0.0301,  ...,  0.0133, -0.0189,  0.0196],
        [-0.0684, -0.0036, -0.0352,  ..., -0.0553,  0.0095, -0.0077],
        ...,
        [-0.0369,  0.0064,  0.0038,  ...,  0.0093, -0.0074,  0.0154],
        [ 0.0221,  0.0044,  0.0313,  ...,  0.0054, -0.0186,  0.0062],
        [-0.0141,  0.0101, -0.0041,  ..., -0.0181, -0.0102, -0.0305]], device='cuda:0', requires_grad=True)
K: tensor([ 0.7305,  0.5430,  0.4453,  1.0391, -0.2754,  0.4395,  0.0591,  0.7734, -0.2871, -0.1748, -0.2236, -1.6328,  0.2373, -0.6836,  0.2852,  0.0148, -0.0352,  0.4297,  0.1396, -0.2969, -0.6172, -1.3438, -0.5859, -0.7617, -0.2168, -0.7227,  0.2812,  1.1875,  0.5547, -0.1572, -0.8438, -0.0050,
        -0.4238, -0.2734,  1.4531, -0.2578,  0.4648, -0.2451, -0.2266,  0.3828,  0.6445, -0.8438,  0.0403, -0.5703,  0.1167, -0.5430,  0.1099, -0.5742, -0.2080,  0.1191, -0.9375,  0.1396,  0.1143,  0.5039, -0.8477,  0.4766, -0.3398,  0.0981, -0.3945, -0.0559, -0.4238,  0.2930,  0.4629, -1.1953],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0058,  0.0316,  0.0002,  ..., -0.0208, -0.0053, -0.0022],
        [ 0.0388,  0.0135,  0.0231,  ...,  0.0003,  0.0028, -0.0063],
        [ 0.0001, -0.0169,  0.0061,  ...,  0.0339, -0.0076,  0.0108],
        ...,
        [-0.0007,  0.0203, -0.0095,  ...,  0.0095, -0.0477, -0.0244],
        [ 0.0283, -0.0126,  0.0119,  ...,  0.0086,  0.0390, -0.0156],
        [ 0.0247,  0.0023, -0.0227,  ..., -0.0088,  0.0011,  0.0308]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.6172,  0.3145, -0.2852, -0.1895, -0.6016, -0.5078,  0.8672,  0.6133, -0.8594,  0.6133,  0.3145, -0.6172, -0.7266, -1.0391,  0.1553,  0.3340, -0.4336,  0.8047,  0.4277, -0.5938, -0.4668,  0.6719,  1.0234,  0.2988,  0.6289,  0.2637, -0.2197,  0.2754, -0.0052,  0.2383, -0.6758, -0.4004,
         0.9297,  0.0791,  0.5781,  0.2832,  0.4688, -0.6172, -0.5352, -0.5781, -0.3750,  0.2256, -0.1689, -0.0898,  0.4160, -1.0547, -0.5273, -0.3711, -1.1641,  0.0067, -0.0752,  0.1455, -0.8828,  0.0588, -0.3633,  0.4023,  0.5625,  0.3730,  0.5156, -0.5586,  0.8203, -0.6250,  0.1982,  0.2422],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -0.0376,     -0.2676,     -0.0723,     -0.1348,     -0.0630,      0.1729,     -0.1748,     -0.5547,      0.2734,      0.1201,      0.3379,      0.0967,     -0.0811,      0.2070],
        [     0.0000,      0.1719,     -0.1011,     -0.1621,      0.2246,      0.7227,     -0.0486,     -0.2695,     -0.6406,      0.6016,      0.0903,      0.0015,     -0.0393,     -0.4805,     -0.1934],
        [     0.0000,     -0.6680,      0.5703,     -0.1895,     -0.0356,     -0.7656,      0.2832,     -0.0071,     -0.1611,      0.3105,      0.1758,     -0.0018,     -0.1709,      0.3320,      0.8047],
        [     0.0000,      0.2471,      0.2930,     -0.0120,      0.2598,      0.0986,     -0.4707,      0.1807,      0.0510,     -0.4668,      0.1172,     -0.3711,     -0.3730,      0.5977,     -0.8906],
        [     0.0000,      0.2832,      0.3730,     -0.2334,     -0.3906,     -0.1592,     -0.4980,      0.0066,     -0.1992,      0.1348,      0.5820,     -0.2334,     -0.2217,      0.2383,     -0.1543],
        [     0.0000,      0.1104,     -0.1582,     -0.1060,     -0.3145,      0.2559,     -0.1230,     -0.0134,     -0.3594,      0.0500,      0.4316,     -0.1289,     -0.1367,     -0.1533,      0.9414],
        [     0.0000,      0.1533,     -0.0006,      0.2852,      0.0356,     -0.2539,     -0.2715,     -0.5586,     -0.3750,     -0.1963,      0.2188,      0.5078,      0.4355,     -0.3379,      0.2158],
        [     0.0000,      0.0136,      0.3926,     -0.8359,      0.5938,     -0.0189,      0.0576,     -0.4336,      0.0227,      0.1016,     -0.0061,     -0.2246,     -0.2188,      0.5625,      0.1021],
        [     0.0000,     -0.1187,     -0.2539,     -0.3203,      0.3652,     -0.1426,      0.2695,      0.1021,     -0.2949,      0.3281,      0.0342,     -0.0618,     -0.0044,     -0.0464,     -0.3965],
        [     0.0000,     -0.1875,      0.3965,      0.5508,     -0.2930,     -0.3164,      0.3750,      0.2490,     -0.2520,     -0.2461,      0.1562,      0.4883,      0.3418,     -0.1143,      0.1387],
        [     0.0000,     -0.3555,      0.3574,      0.1582,      0.3262,     -0.2354,      0.3203,      0.1533,      0.0080,      0.0781,      0.0344,      0.3457,      0.4863,      0.0447,      0.1592],
        [     0.0000,     -0.0461,     -0.4609,      0.4570,      0.1426,     -0.0879,     -0.0952,     -0.0057,     -0.4355,      0.2637,      0.2432,      0.2188,     -0.1211,     -0.1455,     -0.5234],
        [     0.0000,      0.0923,      0.1201,     -0.6211,      0.5234,      0.1387,      0.0947,     -0.1455,     -0.0162,     -0.3359,      0.2578,     -0.0172,     -0.3027,      0.4199,      0.2793],
        [     0.0000,      0.0466,     -0.1523,     -0.0718,     -0.1226,     -0.0055,      0.1250,      0.1963,      0.2402,     -0.1504,     -0.0143,      0.5312,      0.5820,     -0.4473,      0.3457]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4878],
        [0.3354],
        [0.2471],
        [0.2011],
        [0.1648],
        [0.1440],
        [0.1218],
        [0.1058],
        [0.0970],
        [0.0875],
        [0.0821],
        [0.0746],
        [0.0676],
        [0.0651]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3828, 0.6172, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3457, 0.3574, 0.2969, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3418, 0.1592, 0.2520, 0.2471, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1348, 0.2520, 0.2119, 0.1719, 0.2295, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1357, 0.1777, 0.1611, 0.1416, 0.2100, 0.1738, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1416, 0.1035, 0.1680, 0.1216, 0.1641, 0.1680, 0.1338, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1069, 0.1201, 0.1875, 0.1377, 0.1235, 0.1152, 0.0986, 0.1108, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1074, 0.1182, 0.1582, 0.0835, 0.1001, 0.1787, 0.0613, 0.0981, 0.0947, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0850, 0.0996, 0.1660, 0.1270, 0.0771, 0.0635, 0.0820, 0.1221, 0.0796, 0.0986, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1064, 0.0986, 0.0767, 0.0684, 0.0889, 0.1147, 0.0674, 0.0708, 0.0664, 0.1709, 0.0698, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0903, 0.0635, 0.0884, 0.0732, 0.0811, 0.0864, 0.1025, 0.0845, 0.0898, 0.0845, 0.0845, 0.0718, 0.0000, 0.0000, 0.0000],
        [0.0879, 0.0762, 0.0762, 0.0942, 0.0620, 0.0610, 0.0505, 0.0732, 0.0962, 0.0615, 0.1201, 0.0398, 0.1016, 0.0000, 0.0000],
        [0.0732, 0.0879, 0.0591, 0.0518, 0.0771, 0.0889, 0.0688, 0.0723, 0.0486, 0.0923, 0.0869, 0.0576, 0.0796, 0.0552, 0.0000],
        [0.0669, 0.0732, 0.0576, 0.0535, 0.0520, 0.0708, 0.0598, 0.0488, 0.0786, 0.0996, 0.0559, 0.0378, 0.0776, 0.0593, 0.1094]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0232,  0.0277, -0.0177,  ...,  0.0333,  0.0151, -0.0307],
        [-0.0298,  0.0123, -0.0301,  ...,  0.0133, -0.0189,  0.0196],
        [-0.0684, -0.0036, -0.0352,  ..., -0.0553,  0.0095, -0.0077],
        ...,
        [-0.0369,  0.0064,  0.0038,  ...,  0.0093, -0.0074,  0.0154],
        [ 0.0221,  0.0044,  0.0313,  ...,  0.0054, -0.0186,  0.0062],
        [-0.0141,  0.0101, -0.0041,  ..., -0.0181, -0.0102, -0.0305]], device='cuda:0', requires_grad=True)
K: tensor([ 0.5547, -0.0728,  0.6094,  0.0466, -0.5664,  0.7109, -1.3203,  0.4336, -1.0781, -0.3965,  0.1992, -0.8516, -0.9844, -0.0140,  0.5156,  0.3672,  0.5312, -0.6797,  0.3457, -1.3672, -0.1602, -0.0615, -0.0591, -0.0249,  0.3945,  0.3555,  0.4766,  0.5625,  0.4316, -0.7617, -0.8008,  0.0349,
        -0.3672,  1.2500, -0.3203, -1.2891,  1.0391, -1.0312,  0.2314, -0.2500,  0.9336, -0.9766, -1.2031,  1.0859, -0.0256,  0.1338,  0.0820,  0.8555,  0.8555,  0.1875,  0.6523, -0.5078,  0.6484, -0.5117,  0.3477, -0.4980, -0.2461, -0.0757,  0.2695,  0.5664,  0.6523, -0.3594, -0.3047, -0.1177],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0058,  0.0316,  0.0002,  ..., -0.0208, -0.0053, -0.0022],
        [ 0.0388,  0.0135,  0.0231,  ...,  0.0003,  0.0028, -0.0063],
        [ 0.0001, -0.0169,  0.0061,  ...,  0.0339, -0.0076,  0.0108],
        ...,
        [-0.0007,  0.0203, -0.0095,  ...,  0.0095, -0.0477, -0.0244],
        [ 0.0283, -0.0126,  0.0119,  ...,  0.0086,  0.0390, -0.0156],
        [ 0.0247,  0.0023, -0.0227,  ..., -0.0088,  0.0011,  0.0308]], device='cuda:0', requires_grad=True)
Q: tensor([-0.4219,  0.0432, -0.2949, -0.8125,  0.4766,  0.2617, -0.7070,  0.9023,  0.3125,  0.0579, -0.3945,  0.4727, -0.9336,  0.4492, -0.0430,  0.5977,  0.1406,  1.0781, -0.1484, -0.1206, -0.6758, -0.9531,  0.7148, -0.5938, -0.3848, -0.0096,  1.1016,  0.5312, -0.2637,  0.1826,  0.0801, -0.1040,
        -0.4375,  0.4648, -0.1562, -0.1035,  0.2256,  0.5547, -0.0659, -0.1699, -0.6289, -0.5977, -0.7656,  0.2812,  0.4629,  0.6289, -0.6523,  0.3105,  0.4492, -1.0469,  0.3066, -0.2676,  0.0029,  0.4863,  0.1816,  0.5859, -0.1318,  0.0737, -1.1641, -0.1787,  1.0625, -1.1641, -0.0298, -0.3105],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.4785,  0.0554, -0.0023, -0.1973, -0.0659, -0.2578,  0.0781, -0.1826,  0.1025, -0.1260, -0.0190, -0.3770, -0.0723,  0.1328],
        [ 0.0000,  0.0304, -0.1523,  0.0645, -0.4844,  0.1523, -0.1973,  0.0574,  0.4824,  0.5352,  0.2949,  0.5156,  0.4531,  0.7617,  0.6836],
        [ 0.0000, -0.7656, -0.3066, -0.3242,  0.2871, -0.2090,  0.0579, -0.0284,  0.0850, -0.0090,  0.1147,  0.0815, -0.2373, -0.4375, -0.1162],
        [ 0.0000,  0.6211,  0.4512,  0.2412,  0.5312,  0.7188,  0.3652,  0.2793, -0.4297, -0.5234,  0.1797, -0.3242,  0.2598, -0.1279,  0.1260],
        [ 0.0000,  0.2695,  0.1738,  0.0437,  0.4375,  0.2461,  0.2324, -0.0688, -0.0359, -0.6094,  0.4199, -0.1924,  0.4199, -0.1338,  0.6836],
        [ 0.0000, -0.3164,  0.1680, -0.1533,  0.1455,  0.1719, -0.0566, -0.2734,  0.3613,  0.1582,  0.0723,  0.3848,  0.4512,  0.4297,  0.3691],
        [ 0.0000,  0.1167,  0.5625,  0.2559,  0.1445,  0.0757, -0.0781,  0.0391,  0.2129, -0.0830, -0.2461, -0.0349,  0.4082, -0.0369,  0.3320],
        [ 0.0000,  0.0972,  0.3867, -0.2500, -0.0693,  0.5078, -0.5625, -0.0908, -0.1250, -0.0581,  0.1128, -0.5391, -0.4043, -0.0537,  0.3848],
        [ 0.0000,  0.1621,  0.6719,  0.4023, -0.0981, -0.2930, -0.0361,  0.3652, -0.0645,  0.1533, -0.0747, -0.1865, -0.0046, -0.0605,  0.3457],
        [ 0.0000, -0.0757, -0.3281, -0.4453, -0.1807,  0.0742, -0.4590, -0.4121, -0.4727,  0.4746, -0.4199, -0.4004,  0.0762,  0.1191, -0.1309],
        [ 0.0000, -0.3516, -0.0206, -0.2080, -0.1079, -0.0427,  0.1260, -0.0674, -0.0035, -0.0688, -0.0659, -0.2295,  0.8672,  0.2598, -0.3086],
        [ 0.0000, -0.1396, -0.1455,  0.0728, -0.3477, -0.3652, -0.5508, -0.1836,  0.0903, -0.3574,  0.3125, -0.7930,  0.1436,  0.3027,  0.2676],
        [ 0.0000,  0.1816, -0.2188, -0.3496,  0.0510,  0.1885, -0.0640, -0.0134, -0.4121,  0.2275,  0.1699, -0.2451,  0.0791, -0.2871, -0.1196],
        [ 0.0000,  0.0894, -0.1465, -0.2236, -0.2500,  0.0559, -0.1118, -0.3145,  0.1650,  0.4023, -0.1777, -0.5664,  0.1514, -0.1196,  0.4922]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4928],
        [0.3327],
        [0.2492],
        [0.1942],
        [0.1645],
        [0.1407],
        [0.1153],
        [0.1062],
        [0.0967],
        [0.0900],
        [0.0802],
        [0.0732],
        [0.0693],
        [0.0636]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4727, 0.5273, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3125, 0.3750, 0.3145, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2334, 0.3125, 0.2207, 0.2334, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1738, 0.2539, 0.1475, 0.2344, 0.1914, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1689, 0.1484, 0.1562, 0.1758, 0.1709, 0.1797, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1484, 0.1611, 0.1572, 0.1504, 0.1631, 0.1030, 0.1167, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1504, 0.0952, 0.1338, 0.1699, 0.1128, 0.0986, 0.1079, 0.1318, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1094, 0.1069, 0.1055, 0.1416, 0.0977, 0.1396, 0.0728, 0.1235, 0.1025, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1006, 0.0664, 0.0786, 0.0962, 0.0713, 0.1318, 0.0933, 0.1162, 0.1152, 0.1309, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0933, 0.0757, 0.0981, 0.1099, 0.0806, 0.0967, 0.0540, 0.0723, 0.1006, 0.1484, 0.0708, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0713, 0.0806, 0.0811, 0.1006, 0.0942, 0.1279, 0.0889, 0.0576, 0.0732, 0.0684, 0.0845, 0.0713, 0.0000, 0.0000, 0.0000],
        [0.0757, 0.0693, 0.0613, 0.0698, 0.0635, 0.1055, 0.0820, 0.0820, 0.1084, 0.0771, 0.0918, 0.0598, 0.0537, 0.0000, 0.0000],
        [0.0688, 0.0879, 0.0408, 0.0835, 0.0718, 0.1055, 0.0591, 0.0698, 0.0903, 0.0913, 0.0398, 0.0586, 0.0703, 0.0623, 0.0000],
        [0.0757, 0.0391, 0.0845, 0.0820, 0.0361, 0.0603, 0.0884, 0.0459, 0.0679, 0.0574, 0.0830, 0.0635, 0.0537, 0.0884, 0.0737]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0232,  0.0277, -0.0177,  ...,  0.0333,  0.0151, -0.0307],
        [-0.0298,  0.0123, -0.0301,  ...,  0.0133, -0.0189,  0.0196],
        [-0.0684, -0.0036, -0.0352,  ..., -0.0553,  0.0095, -0.0077],
        ...,
        [-0.0369,  0.0064,  0.0038,  ...,  0.0093, -0.0074,  0.0154],
        [ 0.0221,  0.0044,  0.0313,  ...,  0.0054, -0.0186,  0.0062],
        [-0.0141,  0.0101, -0.0041,  ..., -0.0181, -0.0102, -0.0305]], device='cuda:0', requires_grad=True)
K: tensor([-0.9492, -0.2715, -1.0078, -0.7891,  0.3965,  0.3516,  0.2168, -0.0854, -0.6094, -0.0767,  0.5234,  0.0255,  0.0315, -0.7188, -1.0000, -0.2598,  1.0391,  0.3828, -0.7539, -0.2871,  0.0605,  0.3027, -0.9727,  0.2168, -0.4297,  0.7578, -0.7188, -0.6133,  0.4766, -0.4668, -0.2305,  0.5781,
         1.0391, -0.0981,  0.5547, -0.0718,  0.4141,  0.1631, -0.7344,  0.6953,  0.6094, -1.2500, -0.9062,  0.8086,  0.1069, -0.3594, -0.0217, -0.8516,  0.1309,  0.4219, -0.1650, -0.0408, -0.5039, -1.1016, -0.5586, -0.3555,  0.1807,  0.3809,  0.0320,  0.0554, -0.2402,  0.5586,  0.2832, -0.1533],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0058,  0.0316,  0.0002,  ..., -0.0208, -0.0053, -0.0022],
        [ 0.0388,  0.0135,  0.0231,  ...,  0.0003,  0.0028, -0.0063],
        [ 0.0001, -0.0169,  0.0061,  ...,  0.0339, -0.0076,  0.0108],
        ...,
        [-0.0007,  0.0203, -0.0095,  ...,  0.0095, -0.0477, -0.0244],
        [ 0.0283, -0.0126,  0.0119,  ...,  0.0086,  0.0390, -0.0156],
        [ 0.0247,  0.0023, -0.0227,  ..., -0.0088,  0.0011,  0.0308]], device='cuda:0', requires_grad=True)
Q: tensor([    -0.6758,     -0.1050,     -0.2295,      0.1201,      0.2334,      1.3828,     -0.3125,      0.2080,      0.4570,     -0.6641,      0.3906,     -0.1089,      0.3320,      0.6953,      0.4316,      0.0145,      1.5938,      0.0640,     -0.3379,      0.7422,      0.0938,      1.2031,
             1.6641,     -0.3809,     -0.6445,      0.4980,      0.2393,      0.2129,      0.1040,      0.8047,      1.0703,     -0.2773,     -0.1787,     -0.1797,      0.2090,      0.8828,     -0.0996,      0.4277,      0.5898,     -0.7891,     -0.3379,      0.1289,     -0.6680,      1.9141,
            -0.5391,     -0.8555,     -0.3535,      0.6406,      0.2676,     -0.6719,      0.0017,      0.4473,     -0.0190,      0.9180,      0.2188,      0.1270,      0.9570,     -0.4883,     -0.2969,     -0.3047,      0.5352,      0.5703,      0.9531,     -0.0669], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.1108,      0.3555,      0.2852,     -0.0496,      0.1143,     -0.1621,     -0.2363,     -0.2275,      0.1777,     -0.0352,      0.1572,      0.0023,      0.2100,      0.4316],
        [     0.0000,      0.1826,      0.0060,      0.1108,      0.0669,      0.5586,     -0.0126,      0.1621,      0.0850,      0.6367,     -0.2832,     -0.4121,      0.3984,      0.5859,     -0.0359],
        [     0.0000,      0.2910,     -0.0583,     -0.0022,      0.1426,      0.2236,     -0.0972,     -0.1533,      0.1455,      0.2168,      0.0693,      0.0574,      0.1396,      0.3770,      0.5312],
        [     0.0000,      0.3770,     -0.1602,      0.3027,      0.0972,     -0.0908,      0.0786,     -0.2158,     -0.1465,      0.1641,      0.3164,     -0.1865,      0.2578,      0.4199,      0.3691],
        [     0.0000,     -0.1289,     -0.0737,      0.0396,      0.0126,      0.0635,     -0.2168,     -0.4629,      0.3262,      0.2578,      0.0840,      0.0258,     -0.2139,      0.5977,      0.2021],
        [     0.0000,      0.0796,      0.0603,      0.0125,      0.0962,     -0.3652,     -0.2402,     -0.3086,      0.4551,      0.2598,     -0.0038,     -0.0771,     -0.2471,      0.3770,     -0.0586],
        [     0.0000,     -0.4570,     -0.1133,      0.1216,     -0.2871,     -0.4180,     -0.3320,     -0.1299,     -0.0167,      0.0330,     -0.2119,     -0.5273,     -0.4219,      0.1992,      0.0150],
        [     0.0000,     -0.0234,     -0.0374,      0.2598,     -0.1108,      0.2480,     -0.4082,      0.1235,     -0.0625,      0.0071,     -0.0483,      0.2041,      0.1138,      0.1621,      0.0581],
        [     0.0000,     -0.4121,     -0.2471,     -0.0452,     -0.3418,      0.2695,     -0.0742,      0.1445,      0.1387,      0.2656,      0.2656,     -0.3066,      0.3320,      0.2012,      0.4805],
        [     0.0000,     -0.2080,      0.0510,      0.1621,     -0.1455,      0.0339,     -0.5508,     -0.2559,      0.0737,      0.4609,     -0.2793,      0.0850,     -0.3594,      0.0947,      0.4766],
        [     0.0000,      0.1177,      0.1260,      0.3418,      0.2734,      0.5781,      0.2178,     -0.2139,      0.0267,     -0.0420,      0.1689,     -0.0006,     -0.0420,      0.1416,      0.1187],
        [     0.0000,     -0.0840,     -0.2090,     -0.0791,     -0.1738,      0.3359,      0.0835,      0.0825,      0.3633,      0.0190,      0.1943,     -0.2344,     -0.3418,     -0.3613,      0.4805],
        [     0.0000,      0.2441,     -0.5273,      0.1885,      0.0415,      0.4258,     -0.1533,      0.0099,      0.2715,      0.2793,     -0.5508,     -0.1631,      0.0156,     -0.1011,      0.0186],
        [     0.0000,     -0.6641,      0.1045,      0.0801,     -0.7383,     -0.2305,      0.1523,     -0.5000,     -0.1133,     -0.2812,      0.0923,     -0.1807,     -0.3438,      0.1553,     -0.0271]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5003],
        [0.3327],
        [0.2522],
        [0.1951],
        [0.1750],
        [0.1495],
        [0.1279],
        [0.1017],
        [0.0935],
        [0.0855],
        [0.0744],
        [0.0678],
        [0.0687],
        [0.0669]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4355, 0.5625, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3477, 0.3223, 0.3301, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2061, 0.2236, 0.2520, 0.3184, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1543, 0.2148, 0.1650, 0.2148, 0.2520, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1367, 0.1367, 0.1387, 0.1729, 0.1895, 0.2246, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1533, 0.1230, 0.1172, 0.1846, 0.1689, 0.1338, 0.1187, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1079, 0.1543, 0.0942, 0.1094, 0.1270, 0.1426, 0.1250, 0.1396, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0913, 0.1055, 0.0903, 0.1084, 0.1152, 0.1299, 0.0898, 0.1455, 0.1240, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0947, 0.1021, 0.0674, 0.1050, 0.1191, 0.1060, 0.0845, 0.1079, 0.1279, 0.0845, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0723, 0.0815, 0.0688, 0.0776, 0.1025, 0.1138, 0.0747, 0.1230, 0.1108, 0.0742, 0.1001, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0708, 0.0767, 0.0723, 0.0728, 0.0957, 0.0898, 0.0752, 0.0874, 0.1128, 0.0859, 0.0776, 0.0830, 0.0000, 0.0000, 0.0000],
        [0.0786, 0.0947, 0.0508, 0.0845, 0.0801, 0.0854, 0.0654, 0.0933, 0.0972, 0.0625, 0.0674, 0.0757, 0.0649, 0.0000, 0.0000],
        [0.0583, 0.0938, 0.0471, 0.0593, 0.0913, 0.0718, 0.0723, 0.0703, 0.0762, 0.0703, 0.0718, 0.0771, 0.0649, 0.0757, 0.0000],
        [0.0520, 0.0601, 0.0603, 0.0679, 0.0869, 0.0884, 0.0449, 0.1021, 0.0908, 0.0598, 0.0588, 0.0579, 0.0461, 0.0562, 0.0664]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0232,  0.0277, -0.0177,  ...,  0.0333,  0.0151, -0.0307],
        [-0.0298,  0.0123, -0.0301,  ...,  0.0133, -0.0189,  0.0196],
        [-0.0684, -0.0036, -0.0352,  ..., -0.0553,  0.0095, -0.0077],
        ...,
        [-0.0369,  0.0064,  0.0038,  ...,  0.0093, -0.0074,  0.0154],
        [ 0.0221,  0.0044,  0.0313,  ...,  0.0054, -0.0186,  0.0062],
        [-0.0141,  0.0101, -0.0041,  ..., -0.0181, -0.0102, -0.0305]], device='cuda:0', requires_grad=True)
K: tensor([ 0.4707, -0.6016, -0.1729,  0.3730,  0.5117,  0.2002,  0.1533,  0.0133,  0.1396, -1.5469,  1.5469,  0.7539, -0.1279, -0.7344, -0.3027, -0.1504,  0.2637, -0.1777, -0.4297,  0.8828, -0.4121,  0.8906,  0.2578,  0.0986, -0.2988, -0.3984, -0.4531, -0.1216, -0.6719, -0.6719,  0.5977,  0.9609,
         0.2598, -0.6055,  0.5078, -0.1094,  0.6992, -0.2178,  0.3770,  0.2090,  0.6758,  0.2754, -0.3438, -0.5430, -1.5312,  0.2354, -0.5469, -0.0156, -0.0126,  0.2100, -0.9922,  0.7773,  0.2812, -0.8633,  0.1748,  1.0391,  1.0859,  0.5820, -0.7266,  0.0835, -0.4453, -0.2754,  0.8164, -0.4199],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0058,  0.0316,  0.0002,  ..., -0.0208, -0.0053, -0.0022],
        [ 0.0388,  0.0135,  0.0231,  ...,  0.0003,  0.0028, -0.0063],
        [ 0.0001, -0.0169,  0.0061,  ...,  0.0339, -0.0076,  0.0108],
        ...,
        [-0.0007,  0.0203, -0.0095,  ...,  0.0095, -0.0477, -0.0244],
        [ 0.0283, -0.0126,  0.0119,  ...,  0.0086,  0.0390, -0.0156],
        [ 0.0247,  0.0023, -0.0227,  ..., -0.0088,  0.0011,  0.0308]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.2080, -0.4570,  0.3242, -1.1406, -0.0457, -0.2227, -0.8984,  1.1172,  1.0078, -0.5273,  0.1533,  0.7695,  0.3906,  0.3809, -1.5469,  0.6758,  0.7656,  0.0050, -0.2168,  0.5508,  0.6523,  0.7070,  0.9492, -0.4316,  0.2812, -0.7188, -0.3652, -0.1914, -0.5781, -0.0635, -0.3965,  0.0079,
        -0.3965,  0.1357,  0.4473,  0.2441,  0.0266,  0.3359,  0.4004, -0.0664, -0.3398, -0.5273, -0.0079,  0.4141,  0.4785,  0.4297, -0.0481, -0.6367,  0.8984,  0.2500,  0.1943, -0.1914, -0.4785,  0.5430, -0.8516, -0.0757, -0.3535,  0.2207, -0.5664, -0.1035, -0.5195,  0.3828,  0.4414, -0.2578],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.2578,  0.0508,  0.4590,  0.6289,  0.4277,  0.0820,  0.3965,  0.5234,  0.2441,  0.2236,  0.1230,  0.0222,  0.2412,  0.1973],
        [ 0.0000, -0.0737, -0.0544,  0.2051,  0.3633,  0.2080, -0.0874,  0.2754,  0.5547,  0.0781,  0.1699,  0.2031, -0.1494,  0.3789,  0.0732],
        [ 0.0000,  0.0835,  0.2051,  0.4355,  0.5547,  0.6562,  0.3730,  0.6680,  0.7852,  0.3340,  0.6172,  0.5352,  0.2178,  0.3184,  0.4082],
        [ 0.0000,  0.3340,  0.0674,  0.3340,  0.4902,  0.5820,  0.1807,  0.8789,  0.6484,  0.2539,  0.6250,  0.3945,  0.1689,  0.3242,  0.2432],
        [ 0.0000,  0.0019,  0.0166,  0.2373,  0.3281,  0.5000,  0.0576,  0.4785,  0.5234,  0.1670,  0.1270,  0.1904,  0.0625,  0.4141,  0.2168],
        [ 0.0000, -0.2178, -0.2656,  0.1865,  0.0986, -0.1367, -0.2539, -0.0972,  0.2812, -0.1104, -0.3008,  0.0879, -0.2773,  0.0206, -0.2207],
        [ 0.0000,  0.3613, -0.1348,  0.0161,  0.1641,  0.2773,  0.1514,  0.2617,  0.0654, -0.1011,  0.2334,  0.1865, -0.1758,  0.1396,  0.0204],
        [ 0.0000,  0.1445, -0.0093,  0.1738,  0.2334,  0.3516, -0.0140,  0.4688,  0.3086, -0.1079,  0.2129,  0.0767, -0.0635,  0.1328, -0.0085],
        [ 0.0000,  0.0752, -0.3398,  0.1040,  0.2314,  0.1143, -0.1123,  0.1299,  0.3027, -0.1128,  0.1191, -0.0327, -0.2256,  0.2432, -0.2305],
        [ 0.0000,  0.1201, -0.0496,  0.0688,  0.3477,  0.4512,  0.0315,  0.5273,  0.4258,  0.0219,  0.3223,  0.3398, -0.0537,  0.3516,  0.1934],
        [ 0.0000,  0.0840,  0.0205,  0.0287,  0.3066,  0.2432,  0.0669,  0.2148,  0.4688,  0.1982,  0.0928,  0.1611, -0.0801,  0.2520,  0.0991],
        [ 0.0000,  0.1914, -0.4355,  0.0757,  0.0195,  0.0845, -0.1787,  0.1719,  0.2158, -0.2246, -0.1523, -0.0371, -0.1885,  0.1230, -0.3711],
        [ 0.0000,  0.4766, -0.2139,  0.0168,  0.4473,  0.2070,  0.2129,  0.1904,  0.2695,  0.1904,  0.2100,  0.2832,  0.1113,  0.2598, -0.0542],
        [ 0.0000,  0.1406,  0.1484,  0.2676,  0.5117,  0.5312, -0.1465,  0.6758,  0.5586,  0.1387,  0.1230,  0.1050, -0.1201,  0.0762,  0.2451]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4886],
        [0.3191],
        [0.2375],
        [0.1842],
        [0.1628],
        [0.1420],
        [0.1203],
        [0.0966],
        [0.0913],
        [0.0917],
        [0.0801],
        [0.0737],
        [0.0678],
        [0.0590]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4492, 0.5508, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3574, 0.3027, 0.3418, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2070, 0.2373, 0.2695, 0.2852, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1719, 0.2412, 0.1719, 0.2051, 0.2100, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1299, 0.1348, 0.1514, 0.1855, 0.1738, 0.2246, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1387, 0.1484, 0.1157, 0.1738, 0.1504, 0.1377, 0.1357, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1299, 0.1367, 0.1016, 0.1094, 0.1074, 0.1475, 0.1113, 0.1572, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1011, 0.1279, 0.0747, 0.1021, 0.1289, 0.1328, 0.0903, 0.1289, 0.1133, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0918, 0.1108, 0.0723, 0.0806, 0.1279, 0.1045, 0.0767, 0.1172, 0.1226, 0.0957, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0903, 0.0845, 0.0654, 0.0820, 0.0801, 0.1094, 0.0879, 0.1216, 0.0986, 0.0938, 0.0869, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0723, 0.0688, 0.0620, 0.0747, 0.0908, 0.0962, 0.0864, 0.0830, 0.0840, 0.0859, 0.0796, 0.1157, 0.0000, 0.0000, 0.0000],
        [0.0703, 0.0811, 0.0520, 0.0840, 0.0732, 0.0801, 0.0613, 0.0923, 0.0771, 0.0684, 0.0864, 0.0894, 0.0845, 0.0000, 0.0000],
        [0.0635, 0.0835, 0.0579, 0.0474, 0.0688, 0.0820, 0.0635, 0.0757, 0.0723, 0.0771, 0.0806, 0.0718, 0.0889, 0.0669, 0.0000],
        [0.0508, 0.0525, 0.0498, 0.0688, 0.0723, 0.0840, 0.0554, 0.0806, 0.0737, 0.0776, 0.0557, 0.0747, 0.0679, 0.0623, 0.0742]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0232,  0.0277, -0.0177,  ...,  0.0333,  0.0151, -0.0307],
        [-0.0298,  0.0123, -0.0301,  ...,  0.0133, -0.0189,  0.0196],
        [-0.0684, -0.0036, -0.0352,  ..., -0.0553,  0.0095, -0.0077],
        ...,
        [-0.0369,  0.0064,  0.0038,  ...,  0.0093, -0.0074,  0.0154],
        [ 0.0221,  0.0044,  0.0313,  ...,  0.0054, -0.0186,  0.0062],
        [-0.0141,  0.0101, -0.0041,  ..., -0.0181, -0.0102, -0.0305]], device='cuda:0', requires_grad=True)
K: tensor([ 0.2295, -0.3203,  0.6797,  0.5547,  0.6211,  0.0781,  0.4492, -0.2275,  0.6133, -1.0938,  0.9922,  0.9609, -0.7422, -0.4492, -0.5117,  0.3125, -0.0549, -0.1904, -0.3340,  0.8945, -0.5352,  0.5742,  0.0630,  0.5820,  0.1885, -0.2754, -0.6133,  0.0282, -0.8828, -0.3398, -0.4258, -0.0479,
        -0.0182, -0.6250,  0.6719,  0.0540,  0.7773, -0.0349,  0.2490,  0.2207, -0.2676, -0.1279, -0.0664,  0.0693, -1.7578,  0.7695, -0.0405,  0.2656,  0.1250, -0.3828, -0.3496,  0.5273, -0.0334, -0.1416,  0.6836,  0.9961,  0.3789,  0.6680, -0.8594,  0.2451, -0.2285, -0.0408, -0.3281, -0.2520],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0058,  0.0316,  0.0002,  ..., -0.0208, -0.0053, -0.0022],
        [ 0.0388,  0.0135,  0.0231,  ...,  0.0003,  0.0028, -0.0063],
        [ 0.0001, -0.0169,  0.0061,  ...,  0.0339, -0.0076,  0.0108],
        ...,
        [-0.0007,  0.0203, -0.0095,  ...,  0.0095, -0.0477, -0.0244],
        [ 0.0283, -0.0126,  0.0119,  ...,  0.0086,  0.0390, -0.0156],
        [ 0.0247,  0.0023, -0.0227,  ..., -0.0088,  0.0011,  0.0308]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.2461, -0.3379,  0.0649, -1.1094,  0.0879, -0.2949, -0.3145,  0.4570,  0.7070, -0.1602,  0.6797,  0.7852,  0.2305,  0.9688, -0.7656,  0.1260,  0.4395,  0.0530, -0.0505,  0.0281,  1.3047,  0.9336,  0.4102, -0.2412, -0.2930, -1.2188,  0.3066,  0.0747, -0.1943, -0.2314, -0.3145,  0.2061,
        -0.3047,  0.2832,  0.8164,  0.1445,  0.4336,  0.5312,  1.6250, -0.2598, -0.6094, -0.9258, -0.3945,  0.9102,  0.2988,  0.2988,  0.4629, -1.3359,  0.6289,  0.3965,  0.3047,  0.1182,  0.2334,  1.0156, -0.5742,  0.5781, -0.3398,  0.1748, -0.9805, -0.6289, -0.6523,  0.5352, -0.0376, -0.5234],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.2031,  0.0728,  0.2441,  0.4668,  0.4277,  0.2188,  0.4531,  0.3750,  0.4746,  0.3125,  0.4473,  0.6445,  0.1494,  0.3887],
        [ 0.0000, -0.1680, -0.0461,  0.0153,  0.3652,  0.3691,  0.0066,  0.1914,  0.4609,  0.4062,  0.1680,  0.2734,  0.0986,  0.3281,  0.0757],
        [ 0.0000,  0.1396,  0.2656,  0.3242,  0.5117,  0.7656,  0.5156,  0.6758,  0.6094,  0.6484,  0.3984,  0.4727,  0.7031,  0.2422,  0.5664],
        [ 0.0000,  0.3398, -0.0018,  0.1738,  0.2021,  0.4551,  0.1562,  0.4883,  0.1953,  0.2598,  0.2656,  0.3242,  0.4277,  0.3184,  0.1230],
        [ 0.0000,  0.0337,  0.1523,  0.3535,  0.2871,  0.5430,  0.1445,  0.3203,  0.3086,  0.2246,  0.2080,  0.4629,  0.2441,  0.2197,  0.3008],
        [ 0.0000,  0.0703, -0.1807,  0.2246,  0.0796, -0.0068, -0.0172,  0.1445,  0.0938,  0.1079,  0.0469,  0.2988,  0.1016, -0.0654,  0.2031],
        [ 0.0000,  0.0500, -0.2471, -0.1729, -0.1924,  0.1221, -0.1572,  0.1865, -0.1797, -0.2539,  0.0195, -0.0337,  0.0608, -0.1826, -0.0383],
        [ 0.0000,  0.2363, -0.3027,  0.0112,  0.2461,  0.2773, -0.1118,  0.2461,  0.1177,  0.0459, -0.0040,  0.1182,  0.0996,  0.0781,  0.1514],
        [ 0.0000,  0.1885, -0.2402, -0.1289,  0.3320,  0.1318, -0.1787,  0.2461,  0.2891,  0.0432,  0.0918, -0.1299,  0.1484,  0.1758, -0.0664],
        [ 0.0000, -0.0688, -0.3262, -0.1006, -0.1221,  0.1885, -0.0302,  0.2969,  0.0845,  0.0361, -0.0396,  0.2207,  0.0771, -0.1289,  0.0776],
        [ 0.0000, -0.0461, -0.1543,  0.0330,  0.2256,  0.2832,  0.1807,  0.1396,  0.1504,  0.1729,  0.0981,  0.4688,  0.1875,  0.0557,  0.2754],
        [ 0.0000,  0.1455, -0.2988,  0.1797,  0.0435,  0.1309, -0.1377,  0.2734,  0.0913, -0.0248,  0.2070,  0.2393,  0.1816,  0.0165,  0.0162],
        [ 0.0000,  0.2773, -0.0879, -0.2891,  0.0845,  0.2598,  0.0032,  0.1816,  0.1348,  0.1963,  0.2422,  0.1299,  0.3418,  0.0552,  0.1572],
        [ 0.0000,  0.0354, -0.0192,  0.3086,  0.3516,  0.5039,  0.0903,  0.4648,  0.3730,  0.4238,  0.0928,  0.3848,  0.2910,  0.2041,  0.3828]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4886],
        [0.3210],
        [0.2359],
        [0.1881],
        [0.1604],
        [0.1407],
        [0.1245],
        [0.1017],
        [0.0944],
        [0.0953],
        [0.0803],
        [0.0786],
        [0.0695],
        [0.0621]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( intentionally:0.0002quet:0.0002kept:0.0002 Nevada:0.0002Reilly:0.0002 rs:0.0002 Bluetooth:0.0002 trials:0.0002)
 trials
------
		(quet:0.0002kept:0.0002 Nevada:0.0002Reilly:0.0002 rs:0.0002 Bluetooth:0.0002 trials:0.0002 Bluetooth:0.0002)
 Bluetooth Amanserving physic FAM Bluetooth Bluetoothquet Bluetoothquet Bluetoothquetの� Season Byz
@ 1 train 10.9088 , allloss: 18.6743, dt: 1650.43ms, fracRes: 0.0061, norm(attn): 0.0334, norm(output): 0.0518, norm(x): 0.0498, norm(y): 0.9984, norm:31.1564, tok/sec: 79417.00, flops:30.94, batch-reuse:1
@ 2 train 10.9089 , allloss: 18.6367, dt: 1134.44ms, fracRes: 0.0061, norm(attn): 0.0334, norm(output): 0.0518, norm(x): 0.0499, norm(y): 0.9984, norm:31.0533, tok/sec: 115538.97, flops:45.01, batch-reuse:1
@ 3 train 10.8996 , allloss: 18.5755, dt: 1130.28ms, fracRes: 0.0061, norm(attn): 0.0334, norm(output): 0.0518, norm(x): 0.0499, norm(y): 0.9984, norm:31.1435, tok/sec: 115963.89, flops:45.18, batch-reuse:1
@ 4 train 10.8981 , allloss: 18.5047, dt: 1134.85ms, fracRes: 0.0061, norm(attn): 0.0337, norm(output): 0.0518, norm(x): 0.0500, norm(y): 0.9984, norm:30.7093, tok/sec: 115497.44, flops:45.00, batch-reuse:1
@ 5 train 10.8883 , allloss: 18.4015, dt: 1133.48ms, fracRes: 0.0062, norm(attn): 0.0337, norm(output): 0.0518, norm(x): 0.0501, norm(y): 0.9984, norm:30.4591, tok/sec: 115636.60, flops:45.05, batch-reuse:1
@ 6 train 10.8669 , allloss: 18.2657, dt: 1172.83ms, fracRes: 0.0062, norm(attn): 0.0347, norm(output): 0.0518, norm(x): 0.0502, norm(y): 0.9984, norm:31.5520, tok/sec: 111757.32, flops:43.54, batch-reuse:1
@ 7 train 10.8607 , allloss: 18.1180, dt: 1176.94ms, fracRes: 0.0062, norm(attn): 0.0349, norm(output): 0.0518, norm(x): 0.0503, norm(y): 0.9985, norm:31.0758, tok/sec: 111366.68, flops:43.39, batch-reuse:1
@ 8 train 10.8357 , allloss: 17.9332, dt: 1172.10ms, fracRes: 0.0062, norm(attn): 0.0352, norm(output): 0.0532, norm(x): 0.0505, norm(y): 0.9985, norm:31.0831, tok/sec: 111827.06, flops:43.57, batch-reuse:1
@ 9 train 10.8224 , allloss: 17.7326, dt: 1160.96ms, fracRes: 0.0062, norm(attn): 0.0354, norm(output): 0.0537, norm(x): 0.0507, norm(y): 0.9985, norm:31.0081, tok/sec: 112900.09, flops:43.99, batch-reuse:1
@ 10 train 10.8046 , allloss: 17.5104, dt: 1156.06ms, fracRes: 0.0062, norm(attn): 0.0356, norm(output): 0.0540, norm(x): 0.0510, norm(y): 0.9985, norm:30.4902, tok/sec: 113378.55, flops:44.17, batch-reuse:1
@ 11 train 10.7940 , allloss: 17.2685, dt: 1158.84ms, fracRes: 0.0063, norm(attn): 0.0366, norm(output): 0.0544, norm(x): 0.0512, norm(y): 0.9985, norm:28.9920, tok/sec: 113105.96, flops:44.07, batch-reuse:1
@ 12 train 10.7636 , allloss: 17.0034, dt: 1155.72ms, fracRes: 0.0063, norm(attn): 0.0371, norm(output): 0.0544, norm(x): 0.0516, norm(y): 0.9985, norm:29.1367, tok/sec: 113411.16, flops:44.18, batch-reuse:1
@ 13 train 10.7482 , allloss: 16.7446, dt: 1152.44ms, fracRes: 0.0063, norm(attn): 0.0378, norm(output): 0.0544, norm(x): 0.0519, norm(y): 0.9986, norm:27.7800, tok/sec: 113734.35, flops:44.31, batch-reuse:1
@ 14 train 10.7172 , allloss: 16.4496, dt: 1157.99ms, fracRes: 0.0064, norm(attn): 0.0386, norm(output): 0.0549, norm(x): 0.0523, norm(y): 0.9986, norm:26.8515, tok/sec: 113189.49, flops:44.10, batch-reuse:1
@ 15 train 10.6998 , allloss: 16.1845, dt: 1157.07ms, fracRes: 0.0064, norm(attn): 0.0391, norm(output): 0.0549, norm(x): 0.0527, norm(y): 0.9986, norm:25.8167, tok/sec: 113279.71, flops:44.13, batch-reuse:1
@ 16 train 10.6680 , allloss: 15.8884, dt: 1156.23ms, fracRes: 0.0065, norm(attn): 0.0396, norm(output): 0.0554, norm(x): 0.0532, norm(y): 0.9986, norm:24.3993, tok/sec: 113361.86, flops:44.17, batch-reuse:1
@ 17 train 10.6492 , allloss: 15.6224, dt: 1144.57ms, fracRes: 0.0065, norm(attn): 0.0405, norm(output): 0.0557, norm(x): 0.0537, norm(y): 0.9987, norm:23.2506, tok/sec: 114516.83, flops:44.62, batch-reuse:1
@ 18 train 10.6342 , allloss: 15.3740, dt: 1155.53ms, fracRes: 0.0065, norm(attn): 0.0415, norm(output): 0.0576, norm(x): 0.0542, norm(y): 0.9987, norm:21.5647, tok/sec: 113430.55, flops:44.19, batch-reuse:1
@ 19 train 10.5952 , allloss: 15.1026, dt: 1177.41ms, fracRes: 0.0066, norm(attn): 0.0425, norm(output): 0.0583, norm(x): 0.0548, norm(y): 0.9987, norm:20.9814, tok/sec: 111322.25, flops:43.37, batch-reuse:1
@ 20 train 10.5733 , allloss: 14.8656, dt: 1172.43ms, fracRes: 0.0066, norm(attn): 0.0427, norm(output): 0.0583, norm(x): 0.0553, norm(y): 0.9987, norm:19.8329, tok/sec: 111795.50, flops:43.56, batch-reuse:1
@ 21 train 10.5441 , allloss: 14.6357, dt: 1193.34ms, fracRes: 0.0067, norm(attn): 0.0432, norm(output): 0.0583, norm(x): 0.0559, norm(y): 0.9988, norm:18.8002, tok/sec: 109835.99, flops:42.79, batch-reuse:1
@ 22 train 10.5422 , allloss: 14.4450, dt: 1190.93ms, fracRes: 0.0067, norm(attn): 0.0442, norm(output): 0.0596, norm(x): 0.0565, norm(y): 0.9988, norm:17.5568, tok/sec: 110058.14, flops:42.88, batch-reuse:1
@ 23 train 10.5396 , allloss: 14.2679, dt: 1167.40ms, fracRes: 0.0068, norm(attn): 0.0447, norm(output): 0.0596, norm(x): 0.0571, norm(y): 0.9988, norm:16.4585, tok/sec: 112276.38, flops:43.74, batch-reuse:1
@ 24 train 10.5024 , allloss: 14.0708, dt: 1168.94ms, fracRes: 0.0068, norm(attn): 0.0457, norm(output): 0.0615, norm(x): 0.0577, norm(y): 0.9989, norm:15.9955, tok/sec: 112129.25, flops:43.69, batch-reuse:1
@ 25 train 10.4568 , allloss: 13.8737, dt: 1164.94ms, fracRes: 0.0069, norm(attn): 0.0466, norm(output): 0.0618, norm(x): 0.0583, norm(y): 0.9989, norm:15.7883, tok/sec: 112514.05, flops:43.84, batch-reuse:1
@ 26 train 10.4670 , allloss: 13.7469, dt: 1164.90ms, fracRes: 0.0069, norm(attn): 0.0469, norm(output): 0.0623, norm(x): 0.0589, norm(y): 0.9989, norm:14.8943, tok/sec: 112517.35, flops:43.84, batch-reuse:1
@ 27 train 10.4343 , allloss: 13.5905, dt: 1153.83ms, fracRes: 0.0070, norm(attn): 0.0471, norm(output): 0.0630, norm(x): 0.0594, norm(y): 0.9989, norm:14.3491, tok/sec: 113597.06, flops:44.26, batch-reuse:1
@ 28 train 10.4100 , allloss: 13.4533, dt: 1178.71ms, fracRes: 0.0070, norm(attn): 0.0481, norm(output): 0.0630, norm(x): 0.0599, norm(y): 0.9990, norm:13.8124, tok/sec: 111199.35, flops:43.32, batch-reuse:1
@ 29 train 10.4072 , allloss: 13.3404, dt: 1176.47ms, fracRes: 0.0071, norm(attn): 0.0481, norm(output): 0.0630, norm(x): 0.0604, norm(y): 0.9990, norm:13.4978, tok/sec: 111410.85, flops:43.41, batch-reuse:1
@ 30 train 10.3530 , allloss: 13.1848, dt: 1170.76ms, fracRes: 0.0072, norm(attn): 0.0498, norm(output): 0.0635, norm(x): 0.0609, norm(y): 0.9990, norm:13.0708, tok/sec: 111954.43, flops:43.62, batch-reuse:1
@ 31 train 10.3389 , allloss: 13.0798, dt: 1163.94ms, fracRes: 0.0072, norm(attn): 0.0503, norm(output): 0.0635, norm(x): 0.0614, norm(y): 0.9990, norm:12.3975, tok/sec: 112610.67, flops:43.87, batch-reuse:1
@ 32 train 10.3069 , allloss: 12.9644, dt: 1175.79ms, fracRes: 0.0073, norm(attn): 0.0508, norm(output): 0.0659, norm(x): 0.0618, norm(y): 0.9990, norm:12.1469, tok/sec: 111475.41, flops:43.43, batch-reuse:1
@ 33 train 10.2615 , allloss: 12.8354, dt: 1191.97ms, fracRes: 0.0074, norm(attn): 0.0510, norm(output): 0.0659, norm(x): 0.0622, norm(y): 0.9990, norm:12.0857, tok/sec: 109962.42, flops:42.84, batch-reuse:1
@ 34 train 10.2569 , allloss: 12.7559, dt: 1200.41ms, fracRes: 0.0075, norm(attn): 0.0518, norm(output): 0.0659, norm(x): 0.0625, norm(y): 0.9991, norm:11.5102, tok/sec: 109189.26, flops:42.54, batch-reuse:1
@ 35 train 10.2397 , allloss: 12.6711, dt: 1166.27ms, fracRes: 0.0075, norm(attn): 0.0532, norm(output): 0.0659, norm(x): 0.0628, norm(y): 0.9991, norm:11.4238, tok/sec: 112385.52, flops:43.79, batch-reuse:1
@ 36 train 10.1999 , allloss: 12.5621, dt: 1197.63ms, fracRes: 0.0076, norm(attn): 0.0537, norm(output): 0.0664, norm(x): 0.0631, norm(y): 0.9991, norm:10.8503, tok/sec: 109442.50, flops:42.64, batch-reuse:1
@ 37 train 10.1866 , allloss: 12.4880, dt: 1197.22ms, fracRes: 0.0077, norm(attn): 0.0544, norm(output): 0.0664, norm(x): 0.0633, norm(y): 0.9991, norm:10.5077, tok/sec: 109480.18, flops:42.65, batch-reuse:1
@ 38 train 10.1472 , allloss: 12.3839, dt: 1194.70ms, fracRes: 0.0078, norm(attn): 0.0544, norm(output): 0.0669, norm(x): 0.0636, norm(y): 0.9991, norm:10.5755, tok/sec: 109711.11, flops:42.74, batch-reuse:1
@ 39 train 10.1437 , allloss: 12.3245, dt: 1179.82ms, fracRes: 0.0079, norm(attn): 0.0549, norm(output): 0.0669, norm(x): 0.0638, norm(y): 0.9991, norm:9.8587, tok/sec: 111094.97, flops:43.28, batch-reuse:1
@ 40 train 10.0960 , allloss: 12.2187, dt: 1164.68ms, fracRes: 0.0080, norm(attn): 0.0554, norm(output): 0.0669, norm(x): 0.0640, norm(y): 0.9991, norm:9.9172, tok/sec: 112539.20, flops:43.85, batch-reuse:1
@ 41 train 10.0718 , allloss: 12.1375, dt: 1177.72ms, fracRes: 0.0082, norm(attn): 0.0557, norm(output): 0.0669, norm(x): 0.0643, norm(y): 0.9991, norm:9.7389, tok/sec: 111292.75, flops:43.36, batch-reuse:1
@ 42 train 10.0508 , allloss: 12.0612, dt: 1166.63ms, fracRes: 0.0083, norm(attn): 0.0576, norm(output): 0.0669, norm(x): 0.0647, norm(y): 0.9991, norm:9.4982, tok/sec: 112350.64, flops:43.77, batch-reuse:1
@ 43 train 10.0453 , allloss: 11.9997, dt: 1194.83ms, fracRes: 0.0085, norm(attn): 0.0579, norm(output): 0.0693, norm(x): 0.0651, norm(y): 0.9991, norm:9.0685, tok/sec: 109699.69, flops:42.74, batch-reuse:1
@ 44 train 10.0386 , allloss: 11.9378, dt: 1204.90ms, fracRes: 0.0086, norm(attn): 0.0583, norm(output): 0.0693, norm(x): 0.0655, norm(y): 0.9992, norm:8.8343, tok/sec: 108782.66, flops:42.38, batch-reuse:1
@ 45 train 10.0060 , allloss: 11.8526, dt: 1198.84ms, fracRes: 0.0088, norm(attn): 0.0586, norm(output): 0.0693, norm(x): 0.0660, norm(y): 0.9992, norm:8.5874, tok/sec: 109332.47, flops:42.60, batch-reuse:1
@ 46 train 9.9723 , allloss: 11.7683, dt: 1193.90ms, fracRes: 0.0089, norm(attn): 0.0588, norm(output): 0.0698, norm(x): 0.0665, norm(y): 0.9992, norm:8.5946, tok/sec: 109784.69, flops:42.77, batch-reuse:1
@ 47 train 9.9466 , allloss: 11.6944, dt: 1174.34ms, fracRes: 0.0091, norm(attn): 0.0596, norm(output): 0.0698, norm(x): 0.0670, norm(y): 0.9992, norm:8.5380, tok/sec: 111613.47, flops:43.48, batch-reuse:1
@ 48 train 9.9331 , allloss: 11.6405, dt: 1165.95ms, fracRes: 0.0092, norm(attn): 0.0615, norm(output): 0.0698, norm(x): 0.0673, norm(y): 0.9992, norm:8.3729, tok/sec: 112416.09, flops:43.80, batch-reuse:1
@ 49 train 9.9212 , allloss: 11.5935, dt: 1176.65ms, fracRes: 0.0094, norm(attn): 0.0623, norm(output): 0.0703, norm(x): 0.0676, norm(y): 0.9992, norm:7.9975, tok/sec: 111394.05, flops:43.40, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5117, 0.4902, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3242, 0.3828, 0.2949, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2432, 0.1245, 0.4316, 0.1992, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1689, 0.2168, 0.2275, 0.1670, 0.2197, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1641, 0.2168, 0.2383, 0.1299, 0.1108, 0.1396, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1475, 0.1641, 0.1270, 0.1318, 0.1074, 0.1924, 0.1299, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1309, 0.1533, 0.1309, 0.1748, 0.1348, 0.1016, 0.1001, 0.0747, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1064, 0.1069, 0.1572, 0.0454, 0.1924, 0.1040, 0.1113, 0.0688, 0.1079, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0977, 0.0864, 0.0762, 0.0708, 0.1406, 0.0845, 0.1279, 0.1084, 0.0723, 0.1357, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0835, 0.0693, 0.1260, 0.1445, 0.0625, 0.0610, 0.1201, 0.1069, 0.0645, 0.0654, 0.0967, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0742, 0.0522, 0.1060, 0.0859, 0.1030, 0.0586, 0.1011, 0.0869, 0.0742, 0.0796, 0.0752, 0.1035, 0.0000, 0.0000, 0.0000],
        [0.0742, 0.0708, 0.0469, 0.1167, 0.0854, 0.0679, 0.0669, 0.0742, 0.0481, 0.0962, 0.0938, 0.0928, 0.0659, 0.0000, 0.0000],
        [0.0679, 0.0737, 0.0767, 0.0361, 0.1138, 0.0776, 0.0742, 0.0583, 0.0664, 0.0486, 0.0869, 0.0664, 0.0498, 0.1035, 0.0000],
        [0.0596, 0.0625, 0.0513, 0.0554, 0.0527, 0.0593, 0.0679, 0.0728, 0.0767, 0.0510, 0.0591, 0.1016, 0.1074, 0.0383, 0.0845]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0230,  0.0279, -0.0175,  ...,  0.0335,  0.0153, -0.0305],
        [-0.0300,  0.0124, -0.0299,  ...,  0.0135, -0.0190,  0.0198],
        [-0.0682, -0.0038, -0.0354,  ..., -0.0555,  0.0096, -0.0079],
        ...,
        [-0.0371,  0.0065,  0.0040,  ...,  0.0094, -0.0072,  0.0155],
        [ 0.0219,  0.0046,  0.0315,  ...,  0.0056, -0.0185,  0.0064],
        [-0.0143,  0.0101, -0.0040,  ..., -0.0180, -0.0100, -0.0304]], device='cuda:0', requires_grad=True)
K: tensor([ 0.7266,  0.5352,  0.4531,  1.0391, -0.2793,  0.4395,  0.0542,  0.7812, -0.2812, -0.1748, -0.2246, -1.6328,  0.2363, -0.6797,  0.2754,  0.0175, -0.0302,  0.4258,  0.1309, -0.2891, -0.6172, -1.3359, -0.5742, -0.7656, -0.2197, -0.7305,  0.2812,  1.1953,  0.5586, -0.1514, -0.8555,  0.0025,
        -0.4141, -0.2871,  1.4609, -0.2559,  0.4766, -0.2422, -0.2178,  0.3828,  0.6445, -0.8516,  0.0393, -0.5625,  0.1191, -0.5469,  0.1104, -0.5781, -0.2031,  0.1133, -0.9375,  0.1387,  0.1084,  0.5039, -0.8516,  0.4805, -0.3320,  0.1055, -0.4043, -0.0554, -0.4180,  0.2891,  0.4629, -1.2031],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[    -0.0056,      0.0315,      0.0000,  ...,     -0.0210,     -0.0051,     -0.0024],
        [     0.0387,      0.0137,      0.0233,  ...,      0.0005,      0.0026,     -0.0061],
        [    -0.0001,     -0.0167,      0.0063,  ...,      0.0341,     -0.0077,      0.0110],
        ...,
        [    -0.0009,      0.0205,     -0.0093,  ...,      0.0097,     -0.0477,     -0.0242],
        [     0.0283,     -0.0127,      0.0119,  ...,      0.0086,      0.0389,     -0.0156],
        [     0.0245,      0.0025,     -0.0225,  ...,     -0.0086,      0.0010,      0.0310]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.6172,  0.3008, -0.2871, -0.2061, -0.6094, -0.5039,  0.8672,  0.6055, -0.8516,  0.6055,  0.3145, -0.6094, -0.7266, -1.0469,  0.1504,  0.3301, -0.4316,  0.8047,  0.4199, -0.5898, -0.4609,  0.6797,  1.0234,  0.3008,  0.6211,  0.2578, -0.2266,  0.2715, -0.0111,  0.2324, -0.6836, -0.3945,
         0.9375,  0.0776,  0.5898,  0.2793,  0.4746, -0.6172, -0.5312, -0.5742, -0.3750,  0.2207, -0.1699, -0.0767,  0.4180, -1.0625, -0.5234, -0.3750, -1.1719,  0.0129, -0.0791,  0.1484, -0.8789,  0.0571, -0.3633,  0.4062,  0.5664,  0.3789,  0.5117, -0.5586,  0.8281, -0.6367,  0.1973,  0.2383],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.0400, -0.2578, -0.0781, -0.1348, -0.0605,  0.1758, -0.1807, -0.5586,  0.2773,  0.1216,  0.3340,  0.0918, -0.0708,  0.2100],
        [ 0.0000,  0.1660, -0.0967, -0.1680,  0.2227,  0.7188, -0.0479, -0.2676, -0.6445,  0.6016,  0.0933, -0.0019, -0.0403, -0.4746, -0.1953],
        [ 0.0000, -0.6719,  0.5742, -0.2002, -0.0332, -0.7656,  0.2754, -0.0017, -0.1738,  0.3086,  0.1602, -0.0070, -0.1758,  0.3359,  0.8086],
        [ 0.0000,  0.2461,  0.2930, -0.0150,  0.2617,  0.1001, -0.4629,  0.1787,  0.0522, -0.4629,  0.1226, -0.3711, -0.3750,  0.6016, -0.8906],
        [ 0.0000,  0.2773,  0.3730, -0.2334, -0.3926, -0.1621, -0.4941, -0.0017, -0.2041,  0.1377,  0.5898, -0.2285, -0.2168,  0.2373, -0.1602],
        [ 0.0000,  0.1118, -0.1475, -0.1074, -0.3125,  0.2676, -0.1226, -0.0219, -0.3633,  0.0596,  0.4395, -0.1318, -0.1396, -0.1455,  0.9453],
        [ 0.0000,  0.1543, -0.0043,  0.2871,  0.0305, -0.2539, -0.2695, -0.5586, -0.3691, -0.2051,  0.2178,  0.5039,  0.4336, -0.3418,  0.2090],
        [ 0.0000,  0.0049,  0.3887, -0.8516,  0.5938, -0.0200,  0.0488, -0.4297,  0.0151,  0.0967, -0.0148, -0.2285, -0.2207,  0.5664,  0.1045],
        [ 0.0000, -0.1196, -0.2441, -0.3184,  0.3652, -0.1436,  0.2695,  0.1050, -0.2988,  0.3281,  0.0311, -0.0581, -0.0026, -0.0425, -0.3926],
        [ 0.0000, -0.1895,  0.4062,  0.5430, -0.2910, -0.3145,  0.3633,  0.2441, -0.2637, -0.2432,  0.1475,  0.4902,  0.3438, -0.1069,  0.1475],
        [ 0.0000, -0.3496,  0.3613,  0.1494,  0.3301, -0.2344,  0.3105,  0.1602,  0.0042,  0.0713,  0.0182,  0.3359,  0.4785,  0.0471,  0.1660],
        [ 0.0000, -0.0474, -0.4590,  0.4531,  0.1396, -0.0894, -0.1021, -0.0035, -0.4375,  0.2598,  0.2334,  0.2217, -0.1216, -0.1484, -0.5195],
        [ 0.0000,  0.0854,  0.1221, -0.6289,  0.5195,  0.1348,  0.0923, -0.1475, -0.0201, -0.3320,  0.2520, -0.0206, -0.3047,  0.4277,  0.2773],
        [ 0.0000,  0.0469, -0.1514, -0.0742, -0.1245, -0.0062,  0.1299,  0.1953,  0.2500, -0.1553, -0.0121,  0.5312,  0.5859, -0.4414,  0.3457]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4893],
        [0.3363],
        [0.2473],
        [0.2012],
        [0.1648],
        [0.1444],
        [0.1219],
        [0.1058],
        [0.0972],
        [0.0877],
        [0.0821],
        [0.0746],
        [0.0676],
        [0.0650]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4023, 0.5977, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3496, 0.3535, 0.2969, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3574, 0.1611, 0.2539, 0.2285, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1455, 0.2520, 0.2139, 0.1680, 0.2207, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1426, 0.1758, 0.1670, 0.1436, 0.2021, 0.1689, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1514, 0.1074, 0.1699, 0.1191, 0.1543, 0.1650, 0.1328, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1133, 0.1201, 0.1865, 0.1328, 0.1196, 0.1138, 0.1001, 0.1133, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1191, 0.1211, 0.1572, 0.0815, 0.0962, 0.1641, 0.0620, 0.1011, 0.0972, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0923, 0.1021, 0.1572, 0.1172, 0.0732, 0.0625, 0.0811, 0.1226, 0.0830, 0.1099, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1201, 0.0991, 0.0811, 0.0669, 0.0835, 0.1030, 0.0645, 0.0737, 0.0693, 0.1748, 0.0645, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0991, 0.0669, 0.0879, 0.0688, 0.0781, 0.0854, 0.0957, 0.0845, 0.0903, 0.0938, 0.0820, 0.0674, 0.0000, 0.0000, 0.0000],
        [0.1001, 0.0781, 0.0776, 0.0884, 0.0598, 0.0591, 0.0505, 0.0752, 0.0938, 0.0664, 0.1079, 0.0386, 0.1035, 0.0000, 0.0000],
        [0.0767, 0.0869, 0.0583, 0.0500, 0.0737, 0.0859, 0.0688, 0.0737, 0.0505, 0.0977, 0.0850, 0.0552, 0.0811, 0.0569, 0.0000],
        [0.0747, 0.0708, 0.0576, 0.0515, 0.0508, 0.0703, 0.0593, 0.0508, 0.0762, 0.0996, 0.0542, 0.0369, 0.0791, 0.0605, 0.1084]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0230,  0.0279, -0.0175,  ...,  0.0335,  0.0153, -0.0305],
        [-0.0300,  0.0124, -0.0299,  ...,  0.0135, -0.0190,  0.0198],
        [-0.0682, -0.0038, -0.0354,  ..., -0.0555,  0.0096, -0.0079],
        ...,
        [-0.0371,  0.0065,  0.0040,  ...,  0.0094, -0.0072,  0.0155],
        [ 0.0219,  0.0046,  0.0315,  ...,  0.0056, -0.0185,  0.0064],
        [-0.0143,  0.0101, -0.0040,  ..., -0.0180, -0.0100, -0.0304]], device='cuda:0', requires_grad=True)
K: tensor([ 0.5898, -0.0728,  0.5391,  0.0464, -0.5039,  0.6250, -1.2266,  0.3184, -1.2188, -0.4688,  0.3145, -0.9062, -1.0156, -0.1602,  0.4707,  0.3027,  0.4629, -0.6289,  0.3281, -1.2734, -0.1523, -0.0874, -0.0659,  0.0952,  0.4199,  0.4629,  0.4219,  0.4766,  0.4355, -0.8906, -0.8320, -0.0032,
        -0.2773,  1.2969, -0.2910, -1.3359,  1.0078, -1.0938,  0.1855, -0.1572,  0.9766, -0.9805, -1.1953,  1.1094, -0.1084,  0.2109,  0.1768,  0.9141,  0.7969,  0.1973,  0.5508, -0.4805,  0.6406, -0.6680,  0.2852, -0.4902, -0.2891,  0.0106,  0.2021,  0.6211,  0.5508, -0.2871, -0.3281, -0.1787],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[    -0.0056,      0.0315,      0.0000,  ...,     -0.0210,     -0.0051,     -0.0024],
        [     0.0387,      0.0137,      0.0233,  ...,      0.0005,      0.0026,     -0.0061],
        [    -0.0001,     -0.0167,      0.0063,  ...,      0.0341,     -0.0077,      0.0110],
        ...,
        [    -0.0009,      0.0205,     -0.0093,  ...,      0.0097,     -0.0477,     -0.0242],
        [     0.0283,     -0.0127,      0.0119,  ...,      0.0086,      0.0389,     -0.0156],
        [     0.0245,      0.0025,     -0.0225,  ...,     -0.0086,      0.0010,      0.0310]], device='cuda:0', requires_grad=True)
Q: tensor([-0.5039,  0.0262, -0.2637, -0.8516,  0.3633,  0.2598, -0.8711,  0.8672,  0.2930,  0.0625, -0.4160,  0.5078, -0.8750,  0.4512, -0.0654,  0.5977,  0.2012,  1.0703, -0.1875, -0.1768, -0.6719, -0.8281,  0.7695, -0.6211, -0.3926, -0.1055,  1.2344,  0.4863, -0.2295,  0.2432,  0.1157, -0.1729,
        -0.4551,  0.4199, -0.0605, -0.0152,  0.2715,  0.6133, -0.0835, -0.2637, -0.6602, -0.5195, -0.7891,  0.3535,  0.3887,  0.5859, -0.6758,  0.1641,  0.5742, -0.9727,  0.4180, -0.2871,  0.0173,  0.4570,  0.2070,  0.5820, -0.1758,  0.0859, -1.1953, -0.2617,  1.0156, -1.1953, -0.0559, -0.3223],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.3945,  0.0145, -0.0967, -0.2637, -0.1348, -0.3164,  0.0248, -0.2295,  0.1108, -0.2246, -0.1318, -0.3398, -0.0825,  0.1211],
        [ 0.0000,  0.0125, -0.1611, -0.0047, -0.5156,  0.1270, -0.1943,  0.0347,  0.4102,  0.5547,  0.2256,  0.3789,  0.4473,  0.7266,  0.6445],
        [ 0.0000, -0.8008, -0.3457, -0.4473,  0.1504, -0.3027, -0.0962, -0.1011, -0.0267, -0.0262, -0.0703, -0.0820, -0.2617, -0.4434, -0.0771],
        [ 0.0000,  0.5547,  0.3887,  0.1436,  0.4219,  0.5977,  0.2812,  0.2412, -0.4219, -0.4395,  0.1025, -0.3828,  0.2480, -0.1055,  0.1226],
        [ 0.0000,  0.2090,  0.1562,  0.0023,  0.3457,  0.1650,  0.1465, -0.0698, -0.0327, -0.4961,  0.3184, -0.2314,  0.4238, -0.0688,  0.6758],
        [ 0.0000, -0.3438,  0.1108, -0.2432,  0.0190,  0.0840, -0.1328, -0.2910,  0.2871,  0.1963, -0.0189,  0.2471,  0.4355,  0.4316,  0.3574],
        [ 0.0000,  0.0557,  0.4980,  0.1562,  0.0544,  0.0029, -0.1250, -0.0025,  0.1494, -0.0593, -0.2793, -0.1191,  0.3711, -0.0359,  0.3047],
        [ 0.0000,  0.0175,  0.2793, -0.3770, -0.2139,  0.3164, -0.6523, -0.1660, -0.2031, -0.0515, -0.0571, -0.6523, -0.3984, -0.0698,  0.2812],
        [ 0.0000,  0.0991,  0.5312,  0.2373, -0.2344, -0.3867, -0.1289,  0.2832, -0.1074,  0.1748, -0.1680, -0.3242, -0.0359, -0.0486,  0.2344],
        [ 0.0000, -0.1914, -0.3906, -0.5859, -0.3652, -0.1523, -0.6211, -0.4883, -0.5469,  0.3730, -0.6211, -0.5703, -0.0044,  0.0879, -0.1738],
        [ 0.0000, -0.3926, -0.1177, -0.3652, -0.2393, -0.1475, -0.0352, -0.1611, -0.0938, -0.0552, -0.1865, -0.3828,  0.7500,  0.2158, -0.3379],
        [ 0.0000, -0.2471, -0.2578, -0.1240, -0.5195, -0.5273, -0.6875, -0.2871, -0.0664, -0.4141,  0.0752, -0.9531,  0.0322,  0.1855,  0.1504],
        [ 0.0000,  0.1226, -0.2754, -0.4297, -0.0425,  0.1123, -0.1089, -0.0403, -0.4160,  0.2422,  0.1011, -0.3320,  0.0527, -0.3008, -0.1807],
        [ 0.0000, -0.0525, -0.2559, -0.3691, -0.3828, -0.0576, -0.2285, -0.3848,  0.0212,  0.2891, -0.3164, -0.7031,  0.0601, -0.2051,  0.3750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5143],
        [0.3537],
        [0.2607],
        [0.2069],
        [0.1764],
        [0.1531],
        [0.1242],
        [0.1159],
        [0.1040],
        [0.0994],
        [0.0872],
        [0.0802],
        [0.0747],
        [0.0691]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5273, 0.4727, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3711, 0.3379, 0.2910, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3086, 0.2754, 0.2002, 0.2158, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2324, 0.2354, 0.1562, 0.2246, 0.1514, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2197, 0.1533, 0.1494, 0.1621, 0.1338, 0.1816, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1914, 0.1562, 0.1494, 0.1484, 0.1221, 0.1250, 0.1079, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2109, 0.1064, 0.1260, 0.1416, 0.0928, 0.1074, 0.0972, 0.1177, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1719, 0.1157, 0.1064, 0.1279, 0.0801, 0.1299, 0.0718, 0.1040, 0.0933, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1406, 0.0786, 0.0830, 0.0933, 0.0640, 0.1201, 0.0840, 0.1016, 0.0972, 0.1377, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1445, 0.0845, 0.0933, 0.0981, 0.0645, 0.0938, 0.0544, 0.0703, 0.0825, 0.1445, 0.0684, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1074, 0.0850, 0.0806, 0.0898, 0.0703, 0.1104, 0.0815, 0.0608, 0.0708, 0.0884, 0.0835, 0.0723, 0.0000, 0.0000, 0.0000],
        [0.1089, 0.0801, 0.0654, 0.0713, 0.0566, 0.0957, 0.0693, 0.0718, 0.0796, 0.0869, 0.0830, 0.0649, 0.0669, 0.0000, 0.0000],
        [0.0967, 0.0825, 0.0476, 0.0781, 0.0576, 0.0942, 0.0547, 0.0669, 0.0742, 0.0923, 0.0488, 0.0603, 0.0747, 0.0718, 0.0000],
        [0.1069, 0.0474, 0.0757, 0.0752, 0.0371, 0.0635, 0.0669, 0.0493, 0.0615, 0.0703, 0.0679, 0.0579, 0.0615, 0.0869, 0.0713]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0230,  0.0279, -0.0175,  ...,  0.0335,  0.0153, -0.0305],
        [-0.0300,  0.0124, -0.0299,  ...,  0.0135, -0.0190,  0.0198],
        [-0.0682, -0.0038, -0.0354,  ..., -0.0555,  0.0096, -0.0079],
        ...,
        [-0.0371,  0.0065,  0.0040,  ...,  0.0094, -0.0072,  0.0155],
        [ 0.0219,  0.0046,  0.0315,  ...,  0.0056, -0.0185,  0.0064],
        [-0.0143,  0.0101, -0.0040,  ..., -0.0180, -0.0100, -0.0304]], device='cuda:0', requires_grad=True)
K: tensor([    -0.5156,     -0.2344,     -1.0156,     -0.6719,      0.5586,      0.1816,      0.2344,     -0.1982,     -0.5781,     -0.4590,      0.7148,     -0.0129,     -0.1138,     -0.7891,     -0.9805,     -0.1748,      0.6680,      0.2266,     -0.7578,      0.0811,     -0.0006,      0.3301,
            -1.0469,      0.3652,     -0.3652,      0.9609,     -0.7461,     -0.6836,      0.6328,     -0.9258,     -0.3750,      0.6367,      1.0234,     -0.0850,      0.5117,     -0.4609,      0.3320,     -0.0933,     -0.3594,      0.7969,      0.7539,     -1.2812,     -0.9883,      0.7578,
            -0.3750,     -0.1602,      0.1079,     -0.7930,     -0.2402,      0.4531,     -0.2559,      0.0864,     -0.2637,     -1.2500,     -0.2500,     -0.1934,      0.2852,      0.6797,     -0.2031,      0.1494,     -0.1826,      0.5156,      0.1611,     -0.2207], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[    -0.0056,      0.0315,      0.0000,  ...,     -0.0210,     -0.0051,     -0.0024],
        [     0.0387,      0.0137,      0.0233,  ...,      0.0005,      0.0026,     -0.0061],
        [    -0.0001,     -0.0167,      0.0063,  ...,      0.0341,     -0.0077,      0.0110],
        ...,
        [    -0.0009,      0.0205,     -0.0093,  ...,      0.0097,     -0.0477,     -0.0242],
        [     0.0283,     -0.0127,      0.0119,  ...,      0.0086,      0.0389,     -0.0156],
        [     0.0245,      0.0025,     -0.0225,  ...,     -0.0086,      0.0010,      0.0310]], device='cuda:0', requires_grad=True)
Q: tensor([    -0.7812,     -0.3516,      0.2002,     -0.1406,     -0.0014,      1.0234,     -0.9766,      0.4551,      0.5195,     -0.4785,      0.1289,     -0.0498,      0.3457,      0.8633,      0.1050,      0.2197,      1.5391,      0.1230,     -0.2930,      0.4512,      0.0061,      1.4453,
             1.5469,     -0.6133,     -0.4766,     -0.0640,      0.3750,      0.3008,      0.1621,      0.7461,      0.9062,     -0.3516,     -0.2217,     -0.1904,      0.4062,      0.8320,     -0.0049,      0.4062,      0.7500,     -1.1094,     -0.7539,      0.0693,     -0.9258,      1.9766,
            -0.5117,     -0.6406,     -0.3340,      0.4453,      0.7812,     -0.4941,      0.2490,      0.3145,     -0.2432,      0.8047,      0.1167,      0.1738,      0.8086,     -0.2178,     -0.4082,     -0.6367,      0.6250,      0.3867,      0.8672,     -0.1807], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -0.1094,      0.0283,      0.0085,     -0.4219,     -0.0732,     -0.5039,     -0.4863,     -0.4629,     -0.0369,     -0.3398,     -0.1689,     -0.1953,      0.0371,      0.1001],
        [     0.0000,     -0.0928,     -0.2461,     -0.1631,     -0.3691,      0.2158,     -0.3379,     -0.1924,     -0.2871,      0.3086,     -0.4316,     -0.5273,      0.1270,      0.3164,     -0.1484],
        [     0.0000,     -0.1152,     -0.4336,     -0.3574,     -0.4551,     -0.1982,     -0.5508,     -0.5586,     -0.3926,     -0.1245,     -0.3496,     -0.3574,     -0.1572,      0.0530,      0.0464],
        [     0.0000,      0.0120,     -0.3945,     -0.0317,     -0.4258,     -0.3164,     -0.3828,     -0.5469,     -0.5352,     -0.1211,     -0.1641,     -0.4297,     -0.0903,      0.1494,      0.0070],
        [     0.0000,     -0.3574,     -0.3867,     -0.3027,     -0.4980,     -0.1865,     -0.5195,     -0.6797,     -0.1865,     -0.0061,     -0.2637,     -0.3027,     -0.3457,      0.2969,     -0.1089],
        [     0.0000,     -0.2002,     -0.2471,     -0.2490,     -0.4453,     -0.4258,     -0.5742,     -0.5273,     -0.0796,      0.0422,     -0.2598,     -0.3398,     -0.2451,      0.1270,     -0.2598],
        [     0.0000,     -0.6875,     -0.5156,     -0.3965,     -0.8203,     -0.6758,     -0.7773,     -0.5859,     -0.5664,     -0.2773,     -0.5938,     -0.8398,     -0.6602,     -0.1797,     -0.4238],
        [     0.0000,     -0.3984,     -0.4824,     -0.3008,     -0.7695,     -0.2832,     -0.8750,     -0.5078,     -0.6133,     -0.2949,     -0.5078,     -0.3223,     -0.3672,     -0.1738,     -0.3574],
        [     0.0000,     -0.5820,     -0.5234,     -0.4102,     -0.7891,     -0.1572,     -0.5195,     -0.3262,     -0.3691,     -0.0215,     -0.2266,     -0.5820,     -0.1299,      0.0271,      0.0452],
        [     0.0000,     -0.5391,     -0.4414,     -0.3867,     -0.8086,     -0.4316,     -0.9766,     -0.7227,     -0.5625,      0.0002,     -0.7461,     -0.4824,     -0.6367,     -0.1914,     -0.0840],
        [     0.0000,     -0.2383,     -0.2910,     -0.1816,     -0.4277,      0.0247,     -0.2812,     -0.5703,     -0.4180,     -0.2002,     -0.2559,     -0.3965,     -0.2793,     -0.1104,     -0.2041],
        [     0.0000,     -0.3105,     -0.5117,     -0.4258,     -0.6562,     -0.1299,     -0.4492,     -0.4141,     -0.3145,     -0.2256,     -0.2754,     -0.5195,     -0.4863,     -0.3984,     -0.0210],
        [     0.0000,     -0.1592,     -0.7070,     -0.2139,     -0.5156,     -0.0242,     -0.5664,     -0.3691,     -0.2656,     -0.0471,     -0.6797,     -0.4688,     -0.2559,     -0.2949,     -0.2930],
        [     0.0000,     -0.8125,     -0.3438,     -0.3535,     -1.0547,     -0.5156,     -0.4648,     -0.7734,     -0.5508,     -0.4199,     -0.4512,     -0.6133,     -0.5508,     -0.2041,     -0.4023]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5578],
        [0.3963],
        [0.3075],
        [0.2500],
        [0.2266],
        [0.1936],
        [0.1681],
        [0.1393],
        [0.1235],
        [0.1178],
        [0.1019],
        [0.0926],
        [0.0857],
        [0.0873]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6953, 0.3047, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5078, 0.2363, 0.2578, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4023, 0.1836, 0.2002, 0.2139, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3223, 0.1504, 0.1631, 0.1758, 0.1885, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2715, 0.1279, 0.1367, 0.1475, 0.1572, 0.1592, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2266, 0.1108, 0.1182, 0.1270, 0.1367, 0.1377, 0.1426, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1934, 0.0967, 0.1021, 0.1108, 0.1187, 0.1196, 0.1245, 0.1338, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1689, 0.0845, 0.0903, 0.0977, 0.1050, 0.1060, 0.1104, 0.1191, 0.1177, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1533, 0.0757, 0.0806, 0.0874, 0.0938, 0.0947, 0.0986, 0.1064, 0.1055, 0.1030, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1377, 0.0688, 0.0728, 0.0791, 0.0850, 0.0854, 0.0894, 0.0962, 0.0952, 0.0933, 0.0967, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1230, 0.0635, 0.0669, 0.0728, 0.0776, 0.0781, 0.0815, 0.0879, 0.0869, 0.0854, 0.0884, 0.0879, 0.0000, 0.0000, 0.0000],
        [0.1113, 0.0576, 0.0608, 0.0664, 0.0708, 0.0718, 0.0752, 0.0811, 0.0801, 0.0786, 0.0815, 0.0811, 0.0840, 0.0000, 0.0000],
        [0.1069, 0.0535, 0.0566, 0.0615, 0.0659, 0.0664, 0.0693, 0.0747, 0.0737, 0.0723, 0.0752, 0.0747, 0.0771, 0.0723, 0.0000],
        [0.0981, 0.0496, 0.0527, 0.0574, 0.0613, 0.0620, 0.0645, 0.0698, 0.0688, 0.0674, 0.0703, 0.0698, 0.0723, 0.0674, 0.0679]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0230,  0.0279, -0.0175,  ...,  0.0335,  0.0153, -0.0305],
        [-0.0300,  0.0124, -0.0299,  ...,  0.0135, -0.0190,  0.0198],
        [-0.0682, -0.0038, -0.0354,  ..., -0.0555,  0.0096, -0.0079],
        ...,
        [-0.0371,  0.0065,  0.0040,  ...,  0.0094, -0.0072,  0.0155],
        [ 0.0219,  0.0046,  0.0315,  ...,  0.0056, -0.0185,  0.0064],
        [-0.0143,  0.0101, -0.0040,  ..., -0.0180, -0.0100, -0.0304]], device='cuda:0', requires_grad=True)
K: tensor([ 0.4258,  0.0308,  0.0825,  0.0269,  1.0859,  0.4238,  0.5586, -0.4082,  0.9805, -0.9531,  1.0391, -0.0142, -0.2432, -0.7188, -0.2227,  0.1416, -0.7656,  0.2109, -0.7578,  0.5586, -0.3418, -0.1006,  0.3086, -0.1260,  0.0090, -0.5352, -0.6680,  0.5703,  0.0376,  0.3516,  0.1406,  0.9883,
         0.6445,  0.1235,  0.1885, -0.2314,  0.3438,  0.6641,  1.0938,  0.4727,  0.6211,  0.0923, -0.2656,  0.0806, -1.5078,  0.2637, -0.1787, -0.0086, -1.3594,  0.1709,  0.0742, -0.0386,  0.5391, -0.6016,  0.4492,  0.4863,  0.6875,  0.3418, -0.0425,  0.6328,  0.9453, -0.0520,  0.0410,  0.0820],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[    -0.0056,      0.0315,      0.0000,  ...,     -0.0210,     -0.0051,     -0.0024],
        [     0.0387,      0.0137,      0.0233,  ...,      0.0005,      0.0026,     -0.0061],
        [    -0.0001,     -0.0167,      0.0063,  ...,      0.0341,     -0.0077,      0.0110],
        ...,
        [    -0.0009,      0.0205,     -0.0093,  ...,      0.0097,     -0.0477,     -0.0242],
        [     0.0283,     -0.0127,      0.0119,  ...,      0.0086,      0.0389,     -0.0156],
        [     0.0245,      0.0025,     -0.0225,  ...,     -0.0086,      0.0010,      0.0310]], device='cuda:0', requires_grad=True)
Q: tensor([-0.6367,  0.0625,  1.5469, -1.0781, -0.2812, -0.1035, -1.1875,  0.3574,  0.4746,  0.4395, -0.7656,  0.6055,  0.7891,  0.9375, -0.3750,  0.4570,  0.8477,  0.1514,  0.2207,  0.5469,  0.1914,  0.7422,  0.1245, -0.9766,  0.2500, -1.2656, -0.2031,  0.6953,  0.2402,  0.9023, -0.5078,  0.3086,
         0.6133,  0.2695,  0.0125,  0.3340,  0.2041,  0.1533,  0.7930, -0.1543, -1.0938, -0.0474, -0.5039,  0.4590,  0.7383,  0.1592, -0.1084, -0.4707,  0.3184, -0.1621,  0.3535,  0.0175, -0.1328,  0.7578, -0.4492, -0.0325,  0.5508, -0.4785,  0.1533, -1.1016,  0.3652, -0.2285,  0.8242,  0.6133],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.8242, -0.7383, -0.6758, -0.6211, -0.6094, -0.5820, -0.5156, -0.5312, -0.5508, -0.5156, -0.5352, -0.5039, -0.5430, -0.5352],
        [ 0.0000, -0.7617, -0.6758, -0.6211, -0.5586, -0.5469, -0.5156, -0.4434, -0.4570, -0.4785, -0.4375, -0.4492, -0.4199, -0.4746, -0.4668],
        [ 0.0000, -0.7891, -0.7031, -0.6328, -0.5625, -0.5508, -0.5195, -0.4395, -0.4492, -0.4727, -0.4297, -0.4434, -0.4121, -0.4707, -0.4629],
        [ 0.0000, -0.7617, -0.6836, -0.6055, -0.5391, -0.5273, -0.4902, -0.4102, -0.4219, -0.4453, -0.4043, -0.4160, -0.3809, -0.4434, -0.4355],
        [ 0.0000, -0.7461, -0.6836, -0.6133, -0.5430, -0.5312, -0.4961, -0.4180, -0.4316, -0.4531, -0.4121, -0.4219, -0.3887, -0.4512, -0.4434],
        [ 0.0000, -0.7109, -0.6484, -0.5742, -0.5039, -0.4961, -0.4590, -0.3809, -0.3906, -0.4121, -0.3750, -0.3848, -0.3496, -0.4121, -0.4062],
        [ 0.0000, -0.6953, -0.6406, -0.5586, -0.4922, -0.4844, -0.4434, -0.3672, -0.3789, -0.4004, -0.3633, -0.3711, -0.3359, -0.4023, -0.3945],
        [ 0.0000, -0.6914, -0.6289, -0.5469, -0.4785, -0.4668, -0.4258, -0.3496, -0.3613, -0.3809, -0.3438, -0.3516, -0.3145, -0.3809, -0.3750],
        [ 0.0000, -0.7070, -0.6445, -0.5625, -0.4922, -0.4824, -0.4414, -0.3652, -0.3770, -0.3984, -0.3594, -0.3652, -0.3301, -0.3984, -0.3906],
        [ 0.0000, -0.6914, -0.6367, -0.5508, -0.4844, -0.4746, -0.4336, -0.3594, -0.3691, -0.3887, -0.3516, -0.3574, -0.3223, -0.3926, -0.3848],
        [ 0.0000, -0.6602, -0.6094, -0.5234, -0.4609, -0.4512, -0.4082, -0.3359, -0.3457, -0.3652, -0.3320, -0.3359, -0.3008, -0.3691, -0.3613],
        [ 0.0000, -0.6562, -0.6055, -0.5156, -0.4473, -0.4355, -0.3906, -0.3164, -0.3262, -0.3457, -0.3105, -0.3145, -0.2793, -0.3496, -0.3418],
        [ 0.0000, -0.6992, -0.6367, -0.5547, -0.4863, -0.4785, -0.4375, -0.3613, -0.3730, -0.3945, -0.3555, -0.3633, -0.3281, -0.3945, -0.3887],
        [ 0.0000, -0.6875, -0.6211, -0.5391, -0.4707, -0.4629, -0.4199, -0.3438, -0.3555, -0.3750, -0.3379, -0.3457, -0.3086, -0.3750, -0.3691]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6292],
        [0.4559],
        [0.3610],
        [0.2944],
        [0.2497],
        [0.2150],
        [0.1872],
        [0.1659],
        [0.1502],
        [0.1361],
        [0.1249],
        [0.1144],
        [0.1085],
        [0.1007]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6875, 0.3145, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4883, 0.2412, 0.2715, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3809, 0.1865, 0.2090, 0.2246, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3027, 0.1514, 0.1680, 0.1826, 0.1973, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2490, 0.1279, 0.1406, 0.1514, 0.1641, 0.1680, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2051, 0.1094, 0.1196, 0.1299, 0.1406, 0.1436, 0.1504, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1748, 0.0942, 0.1025, 0.1123, 0.1216, 0.1240, 0.1309, 0.1396, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1504, 0.0820, 0.0898, 0.0986, 0.1069, 0.1094, 0.1152, 0.1235, 0.1240, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1338, 0.0732, 0.0801, 0.0879, 0.0952, 0.0977, 0.1025, 0.1104, 0.1104, 0.1089, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1211, 0.0659, 0.0718, 0.0786, 0.0854, 0.0874, 0.0923, 0.0986, 0.0991, 0.0981, 0.1016, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1084, 0.0608, 0.0654, 0.0718, 0.0776, 0.0796, 0.0835, 0.0898, 0.0898, 0.0889, 0.0918, 0.0918, 0.0000, 0.0000, 0.0000],
        [0.0952, 0.0547, 0.0591, 0.0654, 0.0708, 0.0728, 0.0767, 0.0825, 0.0825, 0.0820, 0.0845, 0.0845, 0.0889, 0.0000, 0.0000],
        [0.0918, 0.0505, 0.0552, 0.0603, 0.0654, 0.0669, 0.0708, 0.0757, 0.0762, 0.0752, 0.0776, 0.0776, 0.0811, 0.0757, 0.0000],
        [0.0845, 0.0469, 0.0513, 0.0562, 0.0608, 0.0623, 0.0654, 0.0703, 0.0708, 0.0698, 0.0723, 0.0723, 0.0757, 0.0708, 0.0708]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0230,  0.0279, -0.0175,  ...,  0.0335,  0.0153, -0.0305],
        [-0.0300,  0.0124, -0.0299,  ...,  0.0135, -0.0190,  0.0198],
        [-0.0682, -0.0038, -0.0354,  ..., -0.0555,  0.0096, -0.0079],
        ...,
        [-0.0371,  0.0065,  0.0040,  ...,  0.0094, -0.0072,  0.0155],
        [ 0.0219,  0.0046,  0.0315,  ...,  0.0056, -0.0185,  0.0064],
        [-0.0143,  0.0101, -0.0040,  ..., -0.0180, -0.0100, -0.0304]], device='cuda:0', requires_grad=True)
K: tensor([ 0.4648,  0.1250,  0.2100, -0.0132,  0.8945,  0.3379,  0.5547, -0.4316,  0.9688, -0.9297,  0.9844, -0.0128, -0.2129, -0.7812, -0.1416,  0.0903, -0.7891,  0.2314, -0.6719,  0.4824, -0.2949, -0.0698,  0.4531, -0.1367,  0.1206, -0.5391, -0.6289,  0.7695,  0.0309,  0.4590,  0.1797,  1.0000,
         0.6445,  0.2266,  0.1128, -0.1494,  0.2559,  0.7461,  1.1484,  0.6055,  0.5977,  0.1748, -0.2695,  0.1060, -1.3906,  0.3555, -0.2002, -0.0405, -1.2422,  0.1963,  0.1719,  0.0361,  0.4941, -0.6055,  0.2715,  0.4668,  0.6758,  0.2969,  0.1455,  0.7148,  0.9414, -0.1895,  0.0708,  0.1729],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[    -0.0056,      0.0315,      0.0000,  ...,     -0.0210,     -0.0051,     -0.0024],
        [     0.0387,      0.0137,      0.0233,  ...,      0.0005,      0.0026,     -0.0061],
        [    -0.0001,     -0.0167,      0.0063,  ...,      0.0341,     -0.0077,      0.0110],
        ...,
        [    -0.0009,      0.0205,     -0.0093,  ...,      0.0097,     -0.0477,     -0.0242],
        [     0.0283,     -0.0127,      0.0119,  ...,      0.0086,      0.0389,     -0.0156],
        [     0.0245,      0.0025,     -0.0225,  ...,     -0.0086,      0.0010,      0.0310]], device='cuda:0', requires_grad=True)
Q: tensor([-0.4785, -0.1279,  1.5312, -1.2578, -0.2539, -0.1172, -1.0938,  0.1777,  0.5430,  0.3945, -0.8359,  0.6523,  0.8633,  0.8398, -0.3613,  0.6016,  0.6641,  0.1768,  0.1699,  0.5195,  0.1514,  0.6953,  0.0051, -0.9609,  0.1465, -1.2578, -0.1206,  0.7930,  0.1377,  0.9727, -0.5430,  0.2910,
         0.5039,  0.4121, -0.0645,  0.3555,  0.2949,  0.2461,  0.7422, -0.2031, -0.8711,  0.0022, -0.5273,  0.3965,  0.8516,  0.2559, -0.2949, -0.5352,  0.2715, -0.0537,  0.3262,  0.1152, -0.1523,  0.7188, -0.4883, -0.0569,  0.6172, -0.4336,  0.2598, -1.1484,  0.3770, -0.2051,  0.7773,  0.7656],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.7812, -0.6602, -0.5977, -0.5391, -0.5273, -0.4961, -0.4316, -0.4414, -0.4531, -0.4160, -0.4297, -0.3984, -0.4414, -0.4355],
        [ 0.0000, -0.7031, -0.5898, -0.5312, -0.4629, -0.4473, -0.4102, -0.3398, -0.3477, -0.3613, -0.3203, -0.3262, -0.2969, -0.3477, -0.3438],
        [ 0.0000, -0.7148, -0.5977, -0.5234, -0.4492, -0.4297, -0.3906, -0.3164, -0.3203, -0.3340, -0.2930, -0.3008, -0.2656, -0.3223, -0.3184],
        [ 0.0000, -0.6914, -0.5859, -0.5039, -0.4277, -0.4082, -0.3633, -0.2910, -0.2910, -0.3047, -0.2656, -0.2715, -0.2314, -0.2930, -0.2891],
        [ 0.0000, -0.6680, -0.5742, -0.4941, -0.4160, -0.3945, -0.3477, -0.2773, -0.2773, -0.2910, -0.2500, -0.2539, -0.2148, -0.2773, -0.2734],
        [ 0.0000, -0.6289, -0.5391, -0.4551, -0.3750, -0.3535, -0.3066, -0.2354, -0.2334, -0.2471, -0.2100, -0.2139, -0.1719, -0.2354, -0.2324],
        [ 0.0000, -0.6133, -0.5312, -0.4414, -0.3613, -0.3398, -0.2891, -0.2197, -0.2178, -0.2305, -0.1934, -0.1963, -0.1533, -0.2197, -0.2158],
        [ 0.0000, -0.6055, -0.5156, -0.4258, -0.3457, -0.3203, -0.2695, -0.1973, -0.1953, -0.2080, -0.1709, -0.1729, -0.1289, -0.1963, -0.1924],
        [ 0.0000, -0.6055, -0.5117, -0.4238, -0.3418, -0.3184, -0.2676, -0.1963, -0.1924, -0.2061, -0.1680, -0.1709, -0.1270, -0.1943, -0.1904],
        [ 0.0000, -0.6055, -0.5234, -0.4297, -0.3477, -0.3223, -0.2715, -0.2021, -0.1982, -0.2109, -0.1748, -0.1758, -0.1318, -0.2012, -0.1963],
        [ 0.0000, -0.5781, -0.5039, -0.4121, -0.3340, -0.3105, -0.2598, -0.1895, -0.1875, -0.1992, -0.1650, -0.1650, -0.1216, -0.1885, -0.1846],
        [ 0.0000, -0.5547, -0.4766, -0.3770, -0.2949, -0.2676, -0.2148, -0.1445, -0.1406, -0.1523, -0.1172, -0.1172, -0.0713, -0.1416, -0.1367],
        [ 0.0000, -0.5977, -0.5078, -0.4160, -0.3359, -0.3105, -0.2598, -0.1904, -0.1865, -0.1982, -0.1631, -0.1641, -0.1211, -0.1875, -0.1846],
        [ 0.0000, -0.5898, -0.5000, -0.4082, -0.3281, -0.3027, -0.2520, -0.1816, -0.1787, -0.1904, -0.1553, -0.1572, -0.1128, -0.1797, -0.1768]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6273],
        [0.4499],
        [0.3535],
        [0.2872],
        [0.2409],
        [0.2067],
        [0.1798],
        [0.1589],
        [0.1435],
        [0.1300],
        [0.1195],
        [0.1090],
        [0.1029],
        [0.0956]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( the:0.0031 the:0.0032 the:0.0032 the:0.0037 the:0.0038 the:0.0042 the:0.0034 the:0.0034)
 the
------
		( the:0.0032 the:0.0032 the:0.0037 the:0.0038 the:0.0042 the:0.0034 the:0.0034 the:0.0039)
 the the the the the the the the the the the the the the the
@ 50 train 9.8893 , allloss: 11.5280, dt: 1596.37ms, fracRes: 0.0095, norm(attn): 0.0623, norm(output): 0.0708, norm(x): 0.0679, norm(y): 0.9992, norm:8.0540, tok/sec: 82106.37, flops:31.99, batch-reuse:1
@ 51 train 9.9008 , allloss: 11.5066, dt: 1189.32ms, fracRes: 0.0097, norm(attn): 0.0630, norm(output): 0.0708, norm(x): 0.0683, norm(y): 0.9992, norm:8.1381, tok/sec: 110207.06, flops:42.94, batch-reuse:1
@ 52 train 9.8392 , allloss: 11.4093, dt: 1168.85ms, fracRes: 0.0098, norm(attn): 0.0635, norm(output): 0.0713, norm(x): 0.0687, norm(y): 0.9992, norm:8.0406, tok/sec: 112137.94, flops:43.69, batch-reuse:1
@ 53 train 9.8473 , allloss: 11.3776, dt: 1192.10ms, fracRes: 0.0100, norm(attn): 0.0654, norm(output): 0.0713, norm(x): 0.0692, norm(y): 0.9992, norm:7.5762, tok/sec: 109950.33, flops:42.84, batch-reuse:1
@ 54 train 9.8228 , allloss: 11.3183, dt: 1207.44ms, fracRes: 0.0102, norm(attn): 0.0659, norm(output): 0.0713, norm(x): 0.0696, norm(y): 0.9993, norm:8.2391, tok/sec: 108553.96, flops:42.29, batch-reuse:1
@ 55 train 9.8533 , allloss: 11.3242, dt: 1181.45ms, fracRes: 0.0103, norm(attn): 0.0664, norm(output): 0.0718, norm(x): 0.0699, norm(y): 0.9993, norm:7.8826, tok/sec: 110941.31, flops:43.22, batch-reuse:1
@ 56 train 9.7737 , allloss: 11.2298, dt: 1191.15ms, fracRes: 0.0104, norm(attn): 0.0669, norm(output): 0.0728, norm(x): 0.0700, norm(y): 0.9993, norm:7.4069, tok/sec: 110037.81, flops:42.87, batch-reuse:1
@ 57 train 9.7367 , allloss: 11.1793, dt: 1220.22ms, fracRes: 0.0105, norm(attn): 0.0674, norm(output): 0.0728, norm(x): 0.0701, norm(y): 0.9992, norm:8.2179, tok/sec: 107416.48, flops:41.85, batch-reuse:1
@ 58 train 9.7653 , allloss: 11.1792, dt: 1199.79ms, fracRes: 0.0106, norm(attn): 0.0693, norm(output): 0.0732, norm(x): 0.0705, norm(y): 0.9993, norm:7.4694, tok/sec: 109245.44, flops:42.56, batch-reuse:1
@ 59 train 9.6907 , allloss: 11.0699, dt: 1206.82ms, fracRes: 0.0107, norm(attn): 0.0703, norm(output): 0.0732, norm(x): 0.0710, norm(y): 0.9993, norm:8.4530, tok/sec: 108609.45, flops:42.31, batch-reuse:1
@ 60 train 9.7062 , allloss: 11.0704, dt: 1180.53ms, fracRes: 0.0108, norm(attn): 0.0708, norm(output): 0.0732, norm(x): 0.0712, norm(y): 0.9993, norm:8.1140, tok/sec: 111028.45, flops:43.26, batch-reuse:1
@ 61 train 9.6978 , allloss: 11.0642, dt: 1184.57ms, fracRes: 0.0108, norm(attn): 0.0713, norm(output): 0.0732, norm(x): 0.0712, norm(y): 0.9993, norm:7.2812, tok/sec: 110649.89, flops:43.11, batch-reuse:1
@ 62 train 9.6196 , allloss: 10.9811, dt: 1184.75ms, fracRes: 0.0108, norm(attn): 0.0728, norm(output): 0.0732, norm(x): 0.0712, norm(y): 0.9992, norm:11.2519, tok/sec: 110632.93, flops:43.10, batch-reuse:1
@ 63 train 9.6753 , allloss: 11.0152, dt: 1173.22ms, fracRes: 0.0109, norm(attn): 0.0732, norm(output): 0.0742, norm(x): 0.0716, norm(y): 0.9992, norm:7.7132, tok/sec: 111720.28, flops:43.53, batch-reuse:1
@ 64 train 9.6635 , allloss: 10.9913, dt: 1171.95ms, fracRes: 0.0109, norm(attn): 0.0742, norm(output): 0.0742, norm(x): 0.0718, norm(y): 0.9992, norm:7.8888, tok/sec: 111841.19, flops:43.57, batch-reuse:1
@ 65 train 9.6686 , allloss: 11.0034, dt: 1178.77ms, fracRes: 0.0109, norm(attn): 0.0752, norm(output): 0.0742, norm(x): 0.0718, norm(y): 0.9992, norm:7.7857, tok/sec: 111193.93, flops:43.32, batch-reuse:1
@ 66 train 9.6540 , allloss: 10.9991, dt: 1194.35ms, fracRes: 0.0109, norm(attn): 0.0771, norm(output): 0.0737, norm(x): 0.0719, norm(y): 0.9992, norm:8.9331, tok/sec: 109743.55, flops:42.76, batch-reuse:1
@ 67 train 9.5666 , allloss: 10.8818, dt: 1183.75ms, fracRes: 0.0110, norm(attn): 0.0776, norm(output): 0.0742, norm(x): 0.0723, norm(y): 0.9992, norm:10.0953, tok/sec: 110725.91, flops:43.14, batch-reuse:1
@ 68 train 9.6029 , allloss: 10.9236, dt: 1189.69ms, fracRes: 0.0110, norm(attn): 0.0781, norm(output): 0.0732, norm(x): 0.0724, norm(y): 0.9992, norm:8.7089, tok/sec: 110172.99, flops:42.92, batch-reuse:1
@ 69 train 9.5770 , allloss: 10.9235, dt: 1196.15ms, fracRes: 0.0110, norm(attn): 0.0791, norm(output): 0.0742, norm(x): 0.0723, norm(y): 0.9992, norm:9.7642, tok/sec: 109577.87, flops:42.69, batch-reuse:1
@ 70 train 9.5736 , allloss: 10.9116, dt: 1204.17ms, fracRes: 0.0110, norm(attn): 0.0791, norm(output): 0.0742, norm(x): 0.0725, norm(y): 0.9992, norm:8.6095, tok/sec: 108848.18, flops:42.41, batch-reuse:1
@ 71 train 9.5738 , allloss: 10.9065, dt: 1198.33ms, fracRes: 0.0110, norm(attn): 0.0806, norm(output): 0.0752, norm(x): 0.0727, norm(y): 0.9992, norm:10.4303, tok/sec: 109378.89, flops:42.61, batch-reuse:1
@ 72 train 9.5496 , allloss: 10.8921, dt: 1209.92ms, fracRes: 0.0110, norm(attn): 0.0811, norm(output): 0.0752, norm(x): 0.0727, norm(y): 0.9992, norm:8.2579, tok/sec: 108331.35, flops:42.21, batch-reuse:1
@ 73 train 9.5610 , allloss: 10.9177, dt: 1205.69ms, fracRes: 0.0110, norm(attn): 0.0830, norm(output): 0.0752, norm(x): 0.0728, norm(y): 0.9992, norm:11.3755, tok/sec: 108711.18, flops:42.35, batch-reuse:1
@ 74 train 9.5546 , allloss: 10.9169, dt: 1186.89ms, fracRes: 0.0110, norm(attn): 0.0830, norm(output): 0.0752, norm(x): 0.0729, norm(y): 0.9992, norm:8.2840, tok/sec: 110432.76, flops:43.02, batch-reuse:1
@ 75 train 9.7531 , allloss: 11.1206, dt: 1191.59ms, fracRes: 0.0110, norm(attn): 0.0854, norm(output): 0.0752, norm(x): 0.0731, norm(y): 0.9992, norm:10.8748, tok/sec: 109997.27, flops:42.85, batch-reuse:1
@ 76 train 9.5428 , allloss: 10.8854, dt: 1185.54ms, fracRes: 0.0110, norm(attn): 0.0854, norm(output): 0.0757, norm(x): 0.0732, norm(y): 0.9992, norm:10.7220, tok/sec: 110559.17, flops:43.07, batch-reuse:1
@ 77 train 9.7396 , allloss: 11.1186, dt: 1208.79ms, fracRes: 0.0110, norm(attn): 0.0859, norm(output): 0.0757, norm(x): 0.0733, norm(y): 0.9992, norm:13.4828, tok/sec: 108432.67, flops:42.25, batch-reuse:1
@ 78 train 9.6009 , allloss: 11.0408, dt: 1176.32ms, fracRes: 0.0110, norm(attn): 0.0864, norm(output): 0.0752, norm(x): 0.0731, norm(y): 0.9992, norm:15.4778, tok/sec: 111425.41, flops:43.41, batch-reuse:1
@ 79 train 9.4883 , allloss: 10.9022, dt: 1179.47ms, fracRes: 0.0110, norm(attn): 0.0864, norm(output): 0.0752, norm(x): 0.0732, norm(y): 0.9992, norm:12.1671, tok/sec: 111127.87, flops:43.30, batch-reuse:1
@ 80 train 9.5182 , allloss: 10.8807, dt: 1193.39ms, fracRes: 0.0111, norm(attn): 0.0884, norm(output): 0.0762, norm(x): 0.0737, norm(y): 0.9992, norm:17.6968, tok/sec: 109831.71, flops:42.79, batch-reuse:1
@ 81 train 9.5056 , allloss: 10.8708, dt: 1216.57ms, fracRes: 0.0111, norm(attn): 0.0884, norm(output): 0.0757, norm(x): 0.0738, norm(y): 0.9992, norm:13.2205, tok/sec: 107738.71, flops:41.97, batch-reuse:1
@ 82 train 9.4501 , allloss: 10.8812, dt: 1189.53ms, fracRes: 0.0111, norm(attn): 0.0898, norm(output): 0.0752, norm(x): 0.0736, norm(y): 0.9992, norm:14.3192, tok/sec: 110187.98, flops:42.93, batch-reuse:1
@ 83 train 9.4717 , allloss: 10.9416, dt: 1179.76ms, fracRes: 0.0111, norm(attn): 0.0908, norm(output): 0.0757, norm(x): 0.0735, norm(y): 0.9992, norm:13.5685, tok/sec: 111101.01, flops:43.28, batch-reuse:1
@ 84 train 9.4704 , allloss: 10.8983, dt: 1211.81ms, fracRes: 0.0111, norm(attn): 0.0913, norm(output): 0.0771, norm(x): 0.0738, norm(y): 0.9992, norm:11.4973, tok/sec: 108162.16, flops:42.14, batch-reuse:1
@ 85 train 9.4422 , allloss: 10.8701, dt: 1218.68ms, fracRes: 0.0111, norm(attn): 0.0913, norm(output): 0.0771, norm(x): 0.0737, norm(y): 0.9992, norm:13.3291, tok/sec: 107552.57, flops:41.90, batch-reuse:1
@ 86 train 9.4069 , allloss: 10.9173, dt: 1193.81ms, fracRes: 0.0111, norm(attn): 0.0913, norm(output): 0.0771, norm(x): 0.0734, norm(y): 0.9992, norm:11.2357, tok/sec: 109792.75, flops:42.78, batch-reuse:1
@ 87 train 9.4235 , allloss: 10.9515, dt: 1198.41ms, fracRes: 0.0110, norm(attn): 0.0928, norm(output): 0.0771, norm(x): 0.0733, norm(y): 0.9992, norm:14.8211, tok/sec: 109371.75, flops:42.61, batch-reuse:1
@ 88 train 9.4377 , allloss: 10.9719, dt: 1186.65ms, fracRes: 0.0111, norm(attn): 0.0928, norm(output): 0.0771, norm(x): 0.0733, norm(y): 0.9992, norm:12.1876, tok/sec: 110455.70, flops:43.03, batch-reuse:1
@ 89 train 9.3997 , allloss: 10.9039, dt: 1198.39ms, fracRes: 0.0111, norm(attn): 0.0933, norm(output): 0.0771, norm(x): 0.0734, norm(y): 0.9992, norm:14.5022, tok/sec: 109373.63, flops:42.61, batch-reuse:1
@ 90 train 9.3868 , allloss: 10.9507, dt: 1198.55ms, fracRes: 0.0111, norm(attn): 0.0933, norm(output): 0.0771, norm(x): 0.0733, norm(y): 0.9992, norm:15.3904, tok/sec: 109358.94, flops:42.61, batch-reuse:1
@ 91 train 9.4108 , allloss: 10.9542, dt: 1178.31ms, fracRes: 0.0111, norm(attn): 0.0938, norm(output): 0.0767, norm(x): 0.0733, norm(y): 0.9992, norm:15.5660, tok/sec: 111237.56, flops:43.34, batch-reuse:1
@ 92 train 9.3708 , allloss: 10.9620, dt: 1200.92ms, fracRes: 0.0111, norm(attn): 0.0933, norm(output): 0.0767, norm(x): 0.0731, norm(y): 0.9992, norm:15.9770, tok/sec: 109143.13, flops:42.52, batch-reuse:1
@ 93 train 9.3918 , allloss: 10.9460, dt: 1220.36ms, fracRes: 0.0111, norm(attn): 0.0942, norm(output): 0.0771, norm(x): 0.0732, norm(y): 0.9991, norm:19.1273, tok/sec: 107404.39, flops:41.84, batch-reuse:1
@ 94 train 9.4412 , allloss: 11.0580, dt: 1228.13ms, fracRes: 0.0112, norm(attn): 0.0942, norm(output): 0.0771, norm(x): 0.0731, norm(y): 0.9991, norm:14.4698, tok/sec: 106724.66, flops:41.58, batch-reuse:1
@ 95 train 9.3816 , allloss: 11.0181, dt: 1217.99ms, fracRes: 0.0112, norm(attn): 0.0942, norm(output): 0.0771, norm(x): 0.0729, norm(y): 0.9991, norm:14.2842, tok/sec: 107613.31, flops:41.93, batch-reuse:1
@ 96 train 9.3452 , allloss: 10.9170, dt: 1219.34ms, fracRes: 0.0112, norm(attn): 0.0947, norm(output): 0.0767, norm(x): 0.0730, norm(y): 0.9991, norm:38.6578, tok/sec: 107494.61, flops:41.88, batch-reuse:1
@ 97 train 9.3545 , allloss: 10.9719, dt: 1206.98ms, fracRes: 0.0113, norm(attn): 0.0947, norm(output): 0.0757, norm(x): 0.0729, norm(y): 0.9991, norm:13.3444, tok/sec: 108595.01, flops:42.31, batch-reuse:1
@ 98 train 9.3355 , allloss: 11.0640, dt: 1176.03ms, fracRes: 0.0114, norm(attn): 0.0942, norm(output): 0.0771, norm(x): 0.0728, norm(y): 0.9991, norm:55.8788, tok/sec: 111452.88, flops:43.42, batch-reuse:1
@ 99 train 9.3521 , allloss: 11.0394, dt: 1189.70ms, fracRes: 0.0115, norm(attn): 0.0942, norm(output): 0.0757, norm(x): 0.0728, norm(y): 0.9991, norm:25.6581, tok/sec: 110172.34, flops:42.92, batch-reuse:1
@ 100 train 9.3656 , allloss: 10.9263, dt: 1212.75ms, fracRes: 0.0115, norm(attn): 0.0962, norm(output): 0.0771, norm(x): 0.0731, norm(y): 0.9991, norm:69.0205, tok/sec: 108078.25, flops:42.11, batch-reuse:1
@ 101 train 9.3614 , allloss: 10.9125, dt: 1193.83ms, fracRes: 0.0116, norm(attn): 0.0962, norm(output): 0.0771, norm(x): 0.0733, norm(y): 0.9991, norm:70.4517, tok/sec: 109791.48, flops:42.77, batch-reuse:1
@ 102 train 9.3359 , allloss: 10.9587, dt: 1208.18ms, fracRes: 0.0118, norm(attn): 0.0962, norm(output): 0.0771, norm(x): 0.0734, norm(y): 0.9991, norm:19.4230, tok/sec: 108486.89, flops:42.27, batch-reuse:1
@ 103 train 9.4049 , allloss: 11.1580, dt: 1245.52ms, fracRes: 0.0121, norm(attn): 0.0962, norm(output): 0.0781, norm(x): 0.0735, norm(y): 0.9992, norm:66.3766, tok/sec: 105234.91, flops:41.00, batch-reuse:1
@ 104 train 9.3812 , allloss: 11.1377, dt: 1217.41ms, fracRes: 0.0122, norm(attn): 0.0962, norm(output): 0.0776, norm(x): 0.0735, norm(y): 0.9992, norm:67.3050, tok/sec: 107665.00, flops:41.95, batch-reuse:1
@ 105 train 9.3226 , allloss: 10.9515, dt: 1200.31ms, fracRes: 0.0123, norm(attn): 0.0967, norm(output): 0.0781, norm(x): 0.0737, norm(y): 0.9992, norm:22.4906, tok/sec: 109198.37, flops:42.54, batch-reuse:1
@ 106 train 9.3676 , allloss: 10.8921, dt: 1190.87ms, fracRes: 0.0125, norm(attn): 0.0996, norm(output): 0.0781, norm(x): 0.0742, norm(y): 0.9992, norm:45.9704, tok/sec: 110064.51, flops:42.88, batch-reuse:1
@ 107 train 9.3334 , allloss: 10.8694, dt: 1200.91ms, fracRes: 0.0127, norm(attn): 0.1011, norm(output): 0.0781, norm(x): 0.0745, norm(y): 0.9992, norm:31.9410, tok/sec: 109144.32, flops:42.52, batch-reuse:1
@ 108 train 9.3269 , allloss: 10.9389, dt: 1185.79ms, fracRes: 0.0130, norm(attn): 0.1006, norm(output): 0.0781, norm(x): 0.0748, norm(y): 0.9992, norm:31.9343, tok/sec: 110535.94, flops:43.06, batch-reuse:1
@ 109 train 9.2629 , allloss: 10.8942, dt: 1191.17ms, fracRes: 0.0133, norm(attn): 0.0991, norm(output): 0.0786, norm(x): 0.0748, norm(y): 0.9992, norm:33.8007, tok/sec: 110036.73, flops:42.87, batch-reuse:1
@ 110 train 9.3052 , allloss: 10.8869, dt: 1209.57ms, fracRes: 0.0135, norm(attn): 0.0996, norm(output): 0.0786, norm(x): 0.0748, norm(y): 0.9992, norm:12.4753, tok/sec: 108362.40, flops:42.22, batch-reuse:1
@ 111 train 9.2883 , allloss: 10.8471, dt: 1205.37ms, fracRes: 0.0136, norm(attn): 0.1006, norm(output): 0.0781, norm(x): 0.0748, norm(y): 0.9992, norm:27.4484, tok/sec: 108740.34, flops:42.37, batch-reuse:1
@ 112 train 9.2689 , allloss: 10.8679, dt: 1236.07ms, fracRes: 0.0140, norm(attn): 0.0996, norm(output): 0.0786, norm(x): 0.0749, norm(y): 0.9992, norm:11.6975, tok/sec: 106039.37, flops:41.31, batch-reuse:1
@ 113 train 9.2545 , allloss: 10.8947, dt: 1185.85ms, fracRes: 0.0143, norm(attn): 0.0996, norm(output): 0.0786, norm(x): 0.0751, norm(y): 0.9992, norm:23.1736, tok/sec: 110530.25, flops:43.06, batch-reuse:1
@ 114 train 9.2589 , allloss: 10.8671, dt: 1184.65ms, fracRes: 0.0145, norm(attn): 0.1006, norm(output): 0.0786, norm(x): 0.0751, norm(y): 0.9992, norm:16.0952, tok/sec: 110641.52, flops:43.11, batch-reuse:1
@ 115 train 9.2330 , allloss: 10.7969, dt: 1183.35ms, fracRes: 0.0146, norm(attn): 0.1006, norm(output): 0.0786, norm(x): 0.0750, norm(y): 0.9992, norm:22.5204, tok/sec: 110763.17, flops:43.15, batch-reuse:1
@ 116 train 9.2159 , allloss: 10.8072, dt: 1186.07ms, fracRes: 0.0150, norm(attn): 0.1001, norm(output): 0.0791, norm(x): 0.0750, norm(y): 0.9992, norm:11.6403, tok/sec: 110509.68, flops:43.05, batch-reuse:1
@ 117 train 9.2023 , allloss: 10.7939, dt: 1185.42ms, fracRes: 0.0153, norm(attn): 0.1006, norm(output): 0.0791, norm(x): 0.0751, norm(y): 0.9992, norm:17.0011, tok/sec: 110570.45, flops:43.08, batch-reuse:1
@ 118 train 9.1829 , allloss: 10.7130, dt: 1207.31ms, fracRes: 0.0155, norm(attn): 0.1011, norm(output): 0.0791, norm(x): 0.0752, norm(y): 0.9992, norm:17.3400, tok/sec: 108565.71, flops:42.30, batch-reuse:1
@ 119 train 9.2006 , allloss: 10.7372, dt: 1186.29ms, fracRes: 0.0160, norm(attn): 0.1011, norm(output): 0.0791, norm(x): 0.0754, norm(y): 0.9992, norm:11.7749, tok/sec: 110489.00, flops:43.05, batch-reuse:1
@ 120 train 9.2328 , allloss: 10.7690, dt: 1185.59ms, fracRes: 0.0164, norm(attn): 0.1011, norm(output): 0.0791, norm(x): 0.0755, norm(y): 0.9992, norm:13.6076, tok/sec: 110553.84, flops:43.07, batch-reuse:1
@ 121 train 9.2364 , allloss: 10.7161, dt: 1188.34ms, fracRes: 0.0165, norm(attn): 0.1016, norm(output): 0.0791, norm(x): 0.0754, norm(y): 0.9992, norm:19.4124, tok/sec: 110298.25, flops:42.97, batch-reuse:1
@ 122 train 9.2153 , allloss: 10.6980, dt: 1186.92ms, fracRes: 0.0170, norm(attn): 0.1011, norm(output): 0.0791, norm(x): 0.0755, norm(y): 0.9992, norm:9.8578, tok/sec: 110430.16, flops:43.02, batch-reuse:1
@ 123 train 9.1477 , allloss: 10.6146, dt: 1200.57ms, fracRes: 0.0176, norm(attn): 0.1016, norm(output): 0.0791, norm(x): 0.0757, norm(y): 0.9992, norm:14.5252, tok/sec: 109174.58, flops:42.53, batch-reuse:1
@ 124 train 9.1521 , allloss: 10.5646, dt: 1232.28ms, fracRes: 0.0179, norm(attn): 0.1021, norm(output): 0.0791, norm(x): 0.0755, norm(y): 0.9992, norm:24.3170, tok/sec: 106365.60, flops:41.44, batch-reuse:1
@ 125 train 9.1397 , allloss: 10.5501, dt: 1208.20ms, fracRes: 0.0186, norm(attn): 0.1021, norm(output): 0.0791, norm(x): 0.0757, norm(y): 0.9992, norm:10.0884, tok/sec: 108485.25, flops:42.27, batch-reuse:1
@ 126 train 9.1195 , allloss: 10.5195, dt: 1197.28ms, fracRes: 0.0190, norm(attn): 0.1016, norm(output): 0.0791, norm(x): 0.0757, norm(y): 0.9992, norm:14.6167, tok/sec: 109474.92, flops:42.65, batch-reuse:1
@ 127 train 9.1023 , allloss: 10.4479, dt: 1183.60ms, fracRes: 0.0193, norm(attn): 0.1021, norm(output): 0.0791, norm(x): 0.0756, norm(y): 0.9992, norm:29.6163, tok/sec: 110740.45, flops:43.14, batch-reuse:1
@ 128 train 9.0698 , allloss: 10.4057, dt: 1203.36ms, fracRes: 0.0204, norm(attn): 0.1035, norm(output): 0.0791, norm(x): 0.0760, norm(y): 0.9992, norm:11.2618, tok/sec: 108921.44, flops:42.44, batch-reuse:1
@ 129 train 9.1266 , allloss: 10.4237, dt: 1207.39ms, fracRes: 0.0210, norm(attn): 0.1035, norm(output): 0.0791, norm(x): 0.0761, norm(y): 0.9992, norm:9.8212, tok/sec: 108557.78, flops:42.29, batch-reuse:1
@ 130 train 9.0731 , allloss: 10.3608, dt: 1200.92ms, fracRes: 0.0216, norm(attn): 0.1050, norm(output): 0.0791, norm(x): 0.0762, norm(y): 0.9992, norm:13.6783, tok/sec: 109142.63, flops:42.52, batch-reuse:1
@ 131 train 9.0707 , allloss: 10.3035, dt: 1184.42ms, fracRes: 0.0220, norm(attn): 0.1064, norm(output): 0.0806, norm(x): 0.0762, norm(y): 0.9992, norm:30.2733, tok/sec: 110663.68, flops:43.11, batch-reuse:1
@ 132 train 9.0420 , allloss: 10.2543, dt: 1192.74ms, fracRes: 0.0235, norm(attn): 0.1074, norm(output): 0.0806, norm(x): 0.0767, norm(y): 0.9992, norm:10.5131, tok/sec: 109891.27, flops:42.81, batch-reuse:1
@ 133 train 9.0284 , allloss: 10.2080, dt: 1209.78ms, fracRes: 0.0243, norm(attn): 0.1074, norm(output): 0.0811, norm(x): 0.0769, norm(y): 0.9992, norm:8.9333, tok/sec: 108343.95, flops:42.21, batch-reuse:1
@ 134 train 8.9973 , allloss: 10.1909, dt: 1206.85ms, fracRes: 0.0251, norm(attn): 0.1084, norm(output): 0.0811, norm(x): 0.0769, norm(y): 0.9992, norm:16.1668, tok/sec: 108607.00, flops:42.31, batch-reuse:1
@ 135 train 8.9968 , allloss: 10.1382, dt: 1188.23ms, fracRes: 0.0256, norm(attn): 0.1089, norm(output): 0.0811, norm(x): 0.0771, norm(y): 0.9992, norm:28.2901, tok/sec: 110308.19, flops:42.98, batch-reuse:1
@ 136 train 8.9736 , allloss: 10.0971, dt: 1202.17ms, fracRes: 0.0276, norm(attn): 0.1089, norm(output): 0.0811, norm(x): 0.0776, norm(y): 0.9993, norm:12.2577, tok/sec: 109029.15, flops:42.48, batch-reuse:1
@ 137 train 8.9326 , allloss: 10.0296, dt: 1202.73ms, fracRes: 0.0284, norm(attn): 0.1094, norm(output): 0.0811, norm(x): 0.0779, norm(y): 0.9993, norm:9.1025, tok/sec: 108978.38, flops:42.46, batch-reuse:1
@ 138 train 8.9027 , allloss: 10.0136, dt: 1205.74ms, fracRes: 0.0303, norm(attn): 0.1094, norm(output): 0.0835, norm(x): 0.0783, norm(y): 0.9993, norm:24.7879, tok/sec: 108706.62, flops:42.35, batch-reuse:1
@ 139 train 8.8266 , allloss: 9.8755, dt: 1184.57ms, fracRes: 0.0314, norm(attn): 0.1099, norm(output): 0.0830, norm(x): 0.0787, norm(y): 0.9993, norm:18.8806, tok/sec: 110649.63, flops:43.11, batch-reuse:1
@ 140 train 8.8947 , allloss: 9.9446, dt: 1227.77ms, fracRes: 0.0338, norm(attn): 0.1099, norm(output): 0.0850, norm(x): 0.0793, norm(y): 0.9993, norm:8.9322, tok/sec: 106755.75, flops:41.59, batch-reuse:1
@ 141 train 8.8738 , allloss: 9.9129, dt: 1226.34ms, fracRes: 0.0349, norm(attn): 0.1113, norm(output): 0.0850, norm(x): 0.0796, norm(y): 0.9993, norm:11.0375, tok/sec: 106880.84, flops:41.64, batch-reuse:1
@ 142 train 8.9108 , allloss: 9.9648, dt: 1202.13ms, fracRes: 0.0376, norm(attn): 0.1113, norm(output): 0.0854, norm(x): 0.0802, norm(y): 0.9993, norm:20.4069, tok/sec: 109032.69, flops:42.48, batch-reuse:1
@ 143 train 8.8865 , allloss: 9.8771, dt: 1187.80ms, fracRes: 0.0394, norm(attn): 0.1152, norm(output): 0.0859, norm(x): 0.0808, norm(y): 0.9993, norm:13.7923, tok/sec: 110348.24, flops:42.99, batch-reuse:1
@ 144 train 8.8443 , allloss: 9.8407, dt: 1208.86ms, fracRes: 0.0423, norm(attn): 0.1157, norm(output): 0.0859, norm(x): 0.0814, norm(y): 0.9993, norm:8.0096, tok/sec: 108426.32, flops:42.24, batch-reuse:1
@ 145 train 8.8647 , allloss: 9.8792, dt: 1187.12ms, fracRes: 0.0442, norm(attn): 0.1157, norm(output): 0.0864, norm(x): 0.0819, norm(y): 0.9994, norm:9.8021, tok/sec: 110411.67, flops:43.02, batch-reuse:1
@ 146 train 8.8917 , allloss: 9.9035, dt: 1190.20ms, fracRes: 0.0479, norm(attn): 0.1167, norm(output): 0.0864, norm(x): 0.0826, norm(y): 0.9994, norm:9.8500, tok/sec: 110125.95, flops:42.91, batch-reuse:1
@ 147 train 8.8309 , allloss: 9.7666, dt: 1192.63ms, fracRes: 0.0514, norm(attn): 0.1172, norm(output): 0.0884, norm(x): 0.0835, norm(y): 0.9994, norm:16.0462, tok/sec: 109901.58, flops:42.82, batch-reuse:1
@ 148 train 8.8054 , allloss: 9.7450, dt: 1197.59ms, fracRes: 0.0559, norm(attn): 0.1167, norm(output): 0.0908, norm(x): 0.0842, norm(y): 0.9994, norm:9.0770, tok/sec: 109446.53, flops:42.64, batch-reuse:1
@ 149 train 8.7444 , allloss: 9.7255, dt: 1182.56ms, fracRes: 0.0579, norm(attn): 0.1172, norm(output): 0.0913, norm(x): 0.0846, norm(y): 0.9994, norm:9.2187, tok/sec: 110837.49, flops:43.18, batch-reuse:1
@ 150 train 8.8284 , allloss: 9.8026, dt: 1197.96ms, fracRes: 0.0597, norm(attn): 0.1177, norm(output): 0.0908, norm(x): 0.0852, norm(y): 0.9994, norm:18.6541, tok/sec: 109412.61, flops:42.63, batch-reuse:1
@ 151 train 8.7283 , allloss: 9.7353, dt: 1195.36ms, fracRes: 0.0627, norm(attn): 0.1177, norm(output): 0.0913, norm(x): 0.0853, norm(y): 0.9994, norm:8.8417, tok/sec: 109650.89, flops:42.72, batch-reuse:1
@ 152 train 8.6872 , allloss: 9.6933, dt: 1234.38ms, fracRes: 0.0673, norm(attn): 0.1172, norm(output): 0.0913, norm(x): 0.0858, norm(y): 0.9995, norm:16.7661, tok/sec: 106184.19, flops:41.37, batch-reuse:1
@ 153 train 8.7115 , allloss: 9.6497, dt: 1187.09ms, fracRes: 0.0701, norm(attn): 0.1177, norm(output): 0.0928, norm(x): 0.0867, norm(y): 0.9995, norm:9.6053, tok/sec: 110414.24, flops:43.02, batch-reuse:1
@ 154 train 8.7346 , allloss: 9.6893, dt: 1197.68ms, fracRes: 0.0707, norm(attn): 0.1177, norm(output): 0.0933, norm(x): 0.0870, norm(y): 0.9995, norm:12.4339, tok/sec: 109438.57, flops:42.64, batch-reuse:1
@ 155 train 8.7455 , allloss: 9.8066, dt: 1180.98ms, fracRes: 0.0702, norm(attn): 0.1177, norm(output): 0.0933, norm(x): 0.0867, norm(y): 0.9995, norm:9.0671, tok/sec: 110986.24, flops:43.24, batch-reuse:1
@ 156 train 8.6850 , allloss: 9.7690, dt: 1188.04ms, fracRes: 0.0696, norm(attn): 0.1177, norm(output): 0.0933, norm(x): 0.0868, norm(y): 0.9995, norm:8.7162, tok/sec: 110326.03, flops:42.98, batch-reuse:1
@ 157 train 8.7289 , allloss: 9.7806, dt: 1192.32ms, fracRes: 0.0694, norm(attn): 0.1187, norm(output): 0.0938, norm(x): 0.0872, norm(y): 0.9995, norm:11.3533, tok/sec: 109930.50, flops:42.83, batch-reuse:1
@ 158 train 8.6865 , allloss: 9.7749, dt: 1226.53ms, fracRes: 0.0691, norm(attn): 0.1177, norm(output): 0.0938, norm(x): 0.0868, norm(y): 0.9995, norm:9.0815, tok/sec: 106864.03, flops:41.63, batch-reuse:1
@ 159 train 8.6948 , allloss: 9.8199, dt: 1184.53ms, fracRes: 0.0672, norm(attn): 0.1172, norm(output): 0.0933, norm(x): 0.0866, norm(y): 0.9995, norm:9.3523, tok/sec: 110653.61, flops:43.11, batch-reuse:1
@ 160 train 8.6545 , allloss: 9.8005, dt: 1177.05ms, fracRes: 0.0636, norm(attn): 0.1177, norm(output): 0.0933, norm(x): 0.0865, norm(y): 0.9995, norm:11.3078, tok/sec: 111355.92, flops:43.38, batch-reuse:1
@ 161 train 8.6361 , allloss: 9.8680, dt: 1185.19ms, fracRes: 0.0610, norm(attn): 0.1177, norm(output): 0.0933, norm(x): 0.0861, norm(y): 0.9995, norm:9.7045, tok/sec: 110591.91, flops:43.09, batch-reuse:1
@ 162 train 8.6633 , allloss: 9.9340, dt: 1182.97ms, fracRes: 0.0591, norm(attn): 0.1167, norm(output): 0.0928, norm(x): 0.0858, norm(y): 0.9994, norm:10.1600, tok/sec: 110799.09, flops:43.17, batch-reuse:1
@ 163 train 8.6250 , allloss: 9.8582, dt: 1194.18ms, fracRes: 0.0576, norm(attn): 0.1167, norm(output): 0.0928, norm(x): 0.0857, norm(y): 0.9994, norm:13.4421, tok/sec: 109758.95, flops:42.76, batch-reuse:1
@ 164 train 8.5592 , allloss: 9.8702, dt: 1202.23ms, fracRes: 0.0563, norm(attn): 0.1157, norm(output): 0.0913, norm(x): 0.0851, norm(y): 0.9994, norm:11.1820, tok/sec: 109024.50, flops:42.48, batch-reuse:1
@ 165 train 8.6104 , allloss: 9.9564, dt: 1202.21ms, fracRes: 0.0530, norm(attn): 0.1152, norm(output): 0.0913, norm(x): 0.0850, norm(y): 0.9994, norm:10.3659, tok/sec: 109026.08, flops:42.48, batch-reuse:1
@ 166 train 8.5046 , allloss: 9.8393, dt: 1203.33ms, fracRes: 0.0505, norm(attn): 0.1152, norm(output): 0.0913, norm(x): 0.0846, norm(y): 0.9994, norm:15.7889, tok/sec: 108924.74, flops:42.44, batch-reuse:1
@ 167 train 8.5241 , allloss: 9.9811, dt: 1227.51ms, fracRes: 0.0501, norm(attn): 0.1099, norm(output): 0.0908, norm(x): 0.0841, norm(y): 0.9994, norm:20.8875, tok/sec: 106778.54, flops:41.60, batch-reuse:1
@ 168 train 8.5133 , allloss: 9.8610, dt: 1218.03ms, fracRes: 0.0497, norm(attn): 0.1113, norm(output): 0.0913, norm(x): 0.0841, norm(y): 0.9994, norm:24.7231, tok/sec: 107609.56, flops:41.92, batch-reuse:1
@ 169 train 8.5177 , allloss: 9.9756, dt: 1210.98ms, fracRes: 0.0500, norm(attn): 0.1094, norm(output): 0.0889, norm(x): 0.0836, norm(y): 0.9994, norm:13.2951, tok/sec: 108236.08, flops:42.17, batch-reuse:1
@ 170 train 8.5141 , allloss: 9.9801, dt: 1200.78ms, fracRes: 0.0469, norm(attn): 0.1099, norm(output): 0.0894, norm(x): 0.0835, norm(y): 0.9994, norm:11.8568, tok/sec: 109156.13, flops:42.53, batch-reuse:1
@ 171 train 8.5068 , allloss: 10.0047, dt: 1194.11ms, fracRes: 0.0463, norm(attn): 0.1094, norm(output): 0.0884, norm(x): 0.0833, norm(y): 0.9994, norm:12.5267, tok/sec: 109765.72, flops:42.76, batch-reuse:1
@ 172 train 8.4901 , allloss: 9.9515, dt: 1232.19ms, fracRes: 0.0480, norm(attn): 0.1089, norm(output): 0.0884, norm(x): 0.0830, norm(y): 0.9994, norm:20.4147, tok/sec: 106373.48, flops:41.44, batch-reuse:1
@ 173 train 8.4823 , allloss: 10.1372, dt: 1191.56ms, fracRes: 0.0487, norm(attn): 0.1035, norm(output): 0.0884, norm(x): 0.0826, norm(y): 0.9994, norm:52.8809, tok/sec: 110000.51, flops:42.86, batch-reuse:1
@ 174 train 8.5378 , allloss: 10.0654, dt: 1211.48ms, fracRes: 0.0479, norm(attn): 0.1074, norm(output): 0.0884, norm(x): 0.0828, norm(y): 0.9994, norm:20.7939, tok/sec: 108191.51, flops:42.15, batch-reuse:1
@ 175 train 8.4614 , allloss: 10.0706, dt: 1222.37ms, fracRes: 0.0465, norm(attn): 0.1074, norm(output): 0.0884, norm(x): 0.0826, norm(y): 0.9994, norm:15.5381, tok/sec: 107227.64, flops:41.78, batch-reuse:1
@ 176 train 8.4825 , allloss: 10.0935, dt: 1201.23ms, fracRes: 0.0475, norm(attn): 0.1064, norm(output): 0.0884, norm(x): 0.0828, norm(y): 0.9994, norm:12.7055, tok/sec: 109114.99, flops:42.51, batch-reuse:1
@ 177 train 8.4653 , allloss: 10.0191, dt: 1190.12ms, fracRes: 0.0480, norm(attn): 0.1079, norm(output): 0.0884, norm(x): 0.0826, norm(y): 0.9994, norm:28.6150, tok/sec: 110133.46, flops:42.91, batch-reuse:1
@ 178 train 8.5209 , allloss: 10.2911, dt: 1214.72ms, fracRes: 0.0482, norm(attn): 0.1035, norm(output): 0.0874, norm(x): 0.0824, norm(y): 0.9994, norm:67.2090, tok/sec: 107903.44, flops:42.04, batch-reuse:1
@ 179 train 8.4189 , allloss: 10.0613, dt: 1188.38ms, fracRes: 0.0487, norm(attn): 0.1074, norm(output): 0.0884, norm(x): 0.0827, norm(y): 0.9994, norm:15.4150, tok/sec: 110294.51, flops:42.97, batch-reuse:1
@ 180 train 8.4721 , allloss: 10.1686, dt: 1200.67ms, fracRes: 0.0474, norm(attn): 0.1074, norm(output): 0.0884, norm(x): 0.0829, norm(y): 0.9995, norm:13.3497, tok/sec: 109165.95, flops:42.53, batch-reuse:1
@ 181 train 8.4625 , allloss: 10.1197, dt: 1224.18ms, fracRes: 0.0475, norm(attn): 0.1084, norm(output): 0.0884, norm(x): 0.0828, norm(y): 0.9995, norm:25.1467, tok/sec: 107069.62, flops:41.71, batch-reuse:1
@ 182 train 8.5216 , allloss: 10.3798, dt: 1203.39ms, fracRes: 0.0489, norm(attn): 0.1035, norm(output): 0.0884, norm(x): 0.0829, norm(y): 0.9995, norm:100.3155, tok/sec: 108919.24, flops:42.43, batch-reuse:1
@ 183 train 8.4094 , allloss: 10.1416, dt: 1191.02ms, fracRes: 0.0497, norm(attn): 0.1069, norm(output): 0.0884, norm(x): 0.0829, norm(y): 0.9995, norm:18.7933, tok/sec: 110050.25, flops:42.88, batch-reuse:1
@ 184 train 8.5197 , allloss: 9.9658, dt: 1220.90ms, fracRes: 0.0472, norm(attn): 0.1113, norm(output): 0.0884, norm(x): 0.0836, norm(y): 0.9995, norm:103.2867, tok/sec: 107356.80, flops:41.83, batch-reuse:1
@ 185 train 8.5477 , allloss: 9.9885, dt: 1184.25ms, fracRes: 0.0482, norm(attn): 0.1108, norm(output): 0.0913, norm(x): 0.0839, norm(y): 0.9995, norm:96.0637, tok/sec: 110679.19, flops:43.12, batch-reuse:1
@ 186 train 8.4644 , allloss: 10.0924, dt: 1203.75ms, fracRes: 0.0510, norm(attn): 0.1074, norm(output): 0.0913, norm(x): 0.0841, norm(y): 0.9996, norm:18.2882, tok/sec: 108886.79, flops:42.42, batch-reuse:1
@ 187 train 8.7410 , allloss: 10.6170, dt: 1208.03ms, fracRes: 0.0512, norm(attn): 0.1025, norm(output): 0.0933, norm(x): 0.0851, norm(y): 0.9996, norm:167.9712, tok/sec: 108500.62, flops:42.27, batch-reuse:1
@ 188 train 8.6613 , allloss: 10.5218, dt: 1181.15ms, fracRes: 0.0535, norm(attn): 0.1035, norm(output): 0.0933, norm(x): 0.0853, norm(y): 0.9996, norm:165.9826, tok/sec: 110970.27, flops:43.23, batch-reuse:1
@ 189 train 8.4313 , allloss: 10.1184, dt: 1182.39ms, fracRes: 0.0567, norm(attn): 0.1074, norm(output): 0.0913, norm(x): 0.0848, norm(y): 0.9996, norm:35.8696, tok/sec: 110853.69, flops:43.19, batch-reuse:1
@ 190 train 8.5353 , allloss: 9.9542, dt: 1174.33ms, fracRes: 0.0566, norm(attn): 0.1133, norm(output): 0.0933, norm(x): 0.0856, norm(y): 0.9996, norm:64.7131, tok/sec: 111614.03, flops:43.48, batch-reuse:1
@ 191 train 8.5960 , allloss: 9.9448, dt: 1184.68ms, fracRes: 0.0574, norm(attn): 0.1157, norm(output): 0.0933, norm(x): 0.0866, norm(y): 0.9996, norm:62.4737, tok/sec: 110638.78, flops:43.10, batch-reuse:1
@ 192 train 8.5239 , allloss: 9.8900, dt: 1186.66ms, fracRes: 0.0646, norm(attn): 0.1099, norm(output): 0.0942, norm(x): 0.0874, norm(y): 0.9996, norm:42.7786, tok/sec: 110454.24, flops:43.03, batch-reuse:1
@ 193 train 8.3769 , allloss: 9.8266, dt: 1190.14ms, fracRes: 0.0701, norm(attn): 0.1050, norm(output): 0.0942, norm(x): 0.0881, norm(y): 0.9997, norm:19.9470, tok/sec: 110131.27, flops:42.91, batch-reuse:1
@ 194 train 8.4280 , allloss: 9.9718, dt: 1213.71ms, fracRes: 0.0714, norm(attn): 0.1025, norm(output): 0.0962, norm(x): 0.0888, norm(y): 0.9997, norm:37.2469, tok/sec: 107993.25, flops:42.07, batch-reuse:1
@ 195 train 8.4326 , allloss: 9.9761, dt: 1199.47ms, fracRes: 0.0697, norm(attn): 0.1060, norm(output): 0.0957, norm(x): 0.0891, norm(y): 0.9997, norm:36.3282, tok/sec: 109274.75, flops:42.57, batch-reuse:1
@ 196 train 8.3245 , allloss: 9.8014, dt: 1221.02ms, fracRes: 0.0669, norm(attn): 0.1094, norm(output): 0.0962, norm(x): 0.0891, norm(y): 0.9997, norm:16.7631, tok/sec: 107346.55, flops:41.82, batch-reuse:1
@ 197 train 8.3367 , allloss: 9.7467, dt: 1198.23ms, fracRes: 0.0612, norm(attn): 0.1152, norm(output): 0.0952, norm(x): 0.0892, norm(y): 0.9997, norm:20.7201, tok/sec: 109388.23, flops:42.62, batch-reuse:1
@ 198 train 8.3116 , allloss: 9.7021, dt: 1186.56ms, fracRes: 0.0602, norm(attn): 0.1162, norm(output): 0.0957, norm(x): 0.0894, norm(y): 0.9997, norm:21.4233, tok/sec: 110464.27, flops:43.04, batch-reuse:1
@ 199 train 8.3159 , allloss: 9.7365, dt: 1180.34ms, fracRes: 0.0616, norm(attn): 0.1152, norm(output): 0.0962, norm(x): 0.0896, norm(y): 0.9997, norm:14.6062, tok/sec: 111045.61, flops:43.26, batch-reuse:1
@ 200 train 8.3033 , allloss: 9.7781, dt: 1184.15ms, fracRes: 0.0618, norm(attn): 0.1113, norm(output): 0.0967, norm(x): 0.0897, norm(y): 0.9997, norm:11.5793, tok/sec: 110688.50, flops:43.12, batch-reuse:1
@ 201 train 8.3059 , allloss: 9.8082, dt: 1190.16ms, fracRes: 0.0608, norm(attn): 0.1123, norm(output): 0.0967, norm(x): 0.0898, norm(y): 0.9997, norm:15.8886, tok/sec: 110129.55, flops:42.91, batch-reuse:1
@ 202 train 8.3232 , allloss: 9.7963, dt: 1182.77ms, fracRes: 0.0559, norm(attn): 0.1162, norm(output): 0.0962, norm(x): 0.0897, norm(y): 0.9997, norm:14.1196, tok/sec: 110817.44, flops:43.17, batch-reuse:1
@ 203 train 8.3150 , allloss: 9.7066, dt: 1206.46ms, fracRes: 0.0532, norm(attn): 0.1187, norm(output): 0.0957, norm(x): 0.0894, norm(y): 0.9997, norm:11.8045, tok/sec: 108641.70, flops:42.33, batch-reuse:1
@ 204 train 8.3039 , allloss: 9.6628, dt: 1199.10ms, fracRes: 0.0513, norm(attn): 0.1230, norm(output): 0.0947, norm(x): 0.0888, norm(y): 0.9997, norm:16.3933, tok/sec: 109308.41, flops:42.59, batch-reuse:1
@ 205 train 8.2477 , allloss: 9.6312, dt: 1210.24ms, fracRes: 0.0542, norm(attn): 0.1216, norm(output): 0.0947, norm(x): 0.0882, norm(y): 0.9997, norm:11.6416, tok/sec: 108302.79, flops:42.19, batch-reuse:1
@ 206 train 8.2377 , allloss: 9.6477, dt: 1197.15ms, fracRes: 0.0616, norm(attn): 0.1177, norm(output): 0.0942, norm(x): 0.0881, norm(y): 0.9997, norm:11.2169, tok/sec: 109486.92, flops:42.66, batch-reuse:1
@ 207 train 8.1453 , allloss: 9.4952, dt: 1172.59ms, fracRes: 0.0652, norm(attn): 0.1172, norm(output): 0.0947, norm(x): 0.0883, norm(y): 0.9997, norm:11.5599, tok/sec: 111779.79, flops:43.55, batch-reuse:1
@ 208 train 8.2129 , allloss: 9.5143, dt: 1192.82ms, fracRes: 0.0640, norm(attn): 0.1177, norm(output): 0.0942, norm(x): 0.0882, norm(y): 0.9997, norm:12.7471, tok/sec: 109883.96, flops:42.81, batch-reuse:1
@ 209 train 8.2109 , allloss: 9.5237, dt: 1205.86ms, fracRes: 0.0559, norm(attn): 0.1201, norm(output): 0.0942, norm(x): 0.0875, norm(y): 0.9997, norm:9.8250, tok/sec: 108696.22, flops:42.35, batch-reuse:1
@ 210 train 8.2102 , allloss: 9.4737, dt: 1208.83ms, fracRes: 0.0510, norm(attn): 0.1226, norm(output): 0.0938, norm(x): 0.0871, norm(y): 0.9997, norm:12.6398, tok/sec: 108429.14, flops:42.24, batch-reuse:1
@ 211 train 8.1582 , allloss: 9.3327, dt: 1230.04ms, fracRes: 0.0535, norm(attn): 0.1235, norm(output): 0.0938, norm(x): 0.0873, norm(y): 0.9997, norm:16.2688, tok/sec: 106559.44, flops:41.52, batch-reuse:1
@ 212 train 8.1905 , allloss: 9.4094, dt: 1204.67ms, fracRes: 0.0575, norm(attn): 0.1187, norm(output): 0.0942, norm(x): 0.0874, norm(y): 0.9997, norm:15.6509, tok/sec: 108803.46, flops:42.39, batch-reuse:1
@ 213 train 8.1325 , allloss: 9.2595, dt: 1190.01ms, fracRes: 0.0606, norm(attn): 0.1191, norm(output): 0.0942, norm(x): 0.0880, norm(y): 0.9997, norm:18.8190, tok/sec: 110143.36, flops:42.91, batch-reuse:1
@ 214 train 8.1348 , allloss: 9.3375, dt: 1207.13ms, fracRes: 0.0561, norm(attn): 0.1196, norm(output): 0.0942, norm(x): 0.0874, norm(y): 0.9997, norm:13.1775, tok/sec: 108581.77, flops:42.30, batch-reuse:1
@ 215 train 8.0804 , allloss: 9.2038, dt: 1204.37ms, fracRes: 0.0535, norm(attn): 0.1240, norm(output): 0.0942, norm(x): 0.0876, norm(y): 0.9997, norm:15.9709, tok/sec: 108830.08, flops:42.40, batch-reuse:1
@ 216 train 8.0823 , allloss: 9.2977, dt: 1200.36ms, fracRes: 0.0473, norm(attn): 0.1245, norm(output): 0.0938, norm(x): 0.0872, norm(y): 0.9997, norm:40.0536, tok/sec: 109193.84, flops:42.54, batch-reuse:1
@ 217 train 8.1279 , allloss: 9.1887, dt: 1183.46ms, fracRes: 0.0500, norm(attn): 0.1250, norm(output): 0.0947, norm(x): 0.0884, norm(y): 0.9997, norm:21.9398, tok/sec: 110753.51, flops:43.15, batch-reuse:1
@ 218 train 8.1037 , allloss: 9.2099, dt: 1186.21ms, fracRes: 0.0491, norm(attn): 0.1230, norm(output): 0.0947, norm(x): 0.0887, norm(y): 0.9998, norm:8.9484, tok/sec: 110496.73, flops:43.05, batch-reuse:1
@ 219 train 8.1597 , allloss: 9.3234, dt: 1189.40ms, fracRes: 0.0455, norm(attn): 0.1216, norm(output): 0.0947, norm(x): 0.0887, norm(y): 0.9998, norm:24.6942, tok/sec: 110200.13, flops:42.93, batch-reuse:1
@ 220 train 8.1194 , allloss: 9.1263, dt: 1195.60ms, fracRes: 0.0512, norm(attn): 0.1245, norm(output): 0.0962, norm(x): 0.0899, norm(y): 0.9998, norm:26.6089, tok/sec: 109629.07, flops:42.71, batch-reuse:1
@ 221 train 8.0648 , allloss: 9.1084, dt: 1202.95ms, fracRes: 0.0500, norm(attn): 0.1230, norm(output): 0.0962, norm(x): 0.0898, norm(y): 0.9998, norm:17.7530, tok/sec: 108958.59, flops:42.45, batch-reuse:1
@ 222 train 8.1572 , allloss: 9.4977, dt: 1194.22ms, fracRes: 0.0418, norm(attn): 0.1187, norm(output): 0.0957, norm(x): 0.0891, norm(y): 0.9998, norm:140.8874, tok/sec: 109755.40, flops:42.76, batch-reuse:1
@ 223 train 8.1195 , allloss: 9.4020, dt: 1231.06ms, fracRes: 0.0461, norm(attn): 0.1182, norm(output): 0.0962, norm(x): 0.0897, norm(y): 0.9998, norm:81.8188, tok/sec: 106470.43, flops:41.48, batch-reuse:1
@ 224 train 8.0439 , allloss: 9.0336, dt: 1196.16ms, fracRes: 0.0653, norm(attn): 0.1187, norm(output): 0.0991, norm(x): 0.0917, norm(y): 0.9998, norm:26.3391, tok/sec: 109576.98, flops:42.69, batch-reuse:1
@ 225 train 8.0539 , allloss: 9.0125, dt: 1188.43ms, fracRes: 0.0708, norm(attn): 0.1191, norm(output): 0.1006, norm(x): 0.0924, norm(y): 0.9998, norm:26.9836, tok/sec: 110290.28, flops:42.97, batch-reuse:1
@ 226 train 8.0363 , allloss: 9.1104, dt: 1210.30ms, fracRes: 0.0637, norm(attn): 0.1196, norm(output): 0.0996, norm(x): 0.0917, norm(y): 0.9998, norm:10.5540, tok/sec: 108297.27, flops:42.19, batch-reuse:1
@ 227 train 8.0955 , allloss: 9.3917, dt: 1225.64ms, fracRes: 0.0415, norm(attn): 0.1230, norm(output): 0.0972, norm(x): 0.0905, norm(y): 0.9998, norm:76.2561, tok/sec: 106941.76, flops:41.66, batch-reuse:1
@ 228 train 8.0298 , allloss: 9.2027, dt: 1203.26ms, fracRes: 0.0399, norm(attn): 0.1260, norm(output): 0.0967, norm(x): 0.0906, norm(y): 0.9998, norm:28.1784, tok/sec: 108930.96, flops:42.44, batch-reuse:1
@ 229 train 8.0758 , allloss: 9.0244, dt: 1178.29ms, fracRes: 0.0552, norm(attn): 0.1279, norm(output): 0.1011, norm(x): 0.0930, norm(y): 0.9998, norm:25.6543, tok/sec: 111238.73, flops:43.34, batch-reuse:1
@ 230 train 8.0659 , allloss: 9.0002, dt: 1175.14ms, fracRes: 0.0673, norm(attn): 0.1260, norm(output): 0.1011, norm(x): 0.0938, norm(y): 0.9998, norm:22.0764, tok/sec: 111537.49, flops:43.46, batch-reuse:1
@ 231 train 7.9918 , allloss: 9.0404, dt: 1180.57ms, fracRes: 0.0666, norm(attn): 0.1245, norm(output): 0.1011, norm(x): 0.0932, norm(y): 0.9998, norm:15.2969, tok/sec: 111024.46, flops:43.26, batch-reuse:1
@ 232 train 7.9687 , allloss: 9.1645, dt: 1183.56ms, fracRes: 0.0502, norm(attn): 0.1250, norm(output): 0.1011, norm(x): 0.0922, norm(y): 0.9998, norm:30.2741, tok/sec: 110743.69, flops:43.15, batch-reuse:1
@ 233 train 7.9992 , allloss: 9.1165, dt: 1200.34ms, fracRes: 0.0449, norm(attn): 0.1299, norm(output): 0.1011, norm(x): 0.0923, norm(y): 0.9998, norm:13.7253, tok/sec: 109196.05, flops:42.54, batch-reuse:1
@ 234 train 7.9165 , allloss: 8.9659, dt: 1190.21ms, fracRes: 0.0467, norm(attn): 0.1328, norm(output): 0.1011, norm(x): 0.0926, norm(y): 0.9998, norm:15.8130, tok/sec: 110125.14, flops:42.90, batch-reuse:1
@ 235 train 7.9836 , allloss: 9.1317, dt: 1196.52ms, fracRes: 0.0451, norm(attn): 0.1318, norm(output): 0.1006, norm(x): 0.0922, norm(y): 0.9998, norm:17.0536, tok/sec: 109544.14, flops:42.68, batch-reuse:1
@ 236 train 7.9114 , allloss: 8.9730, dt: 1204.43ms, fracRes: 0.0519, norm(attn): 0.1318, norm(output): 0.1011, norm(x): 0.0928, norm(y): 0.9998, norm:12.4095, tok/sec: 108825.19, flops:42.40, batch-reuse:1
@ 237 train 7.9711 , allloss: 9.0523, dt: 1192.55ms, fracRes: 0.0529, norm(attn): 0.1279, norm(output): 0.1011, norm(x): 0.0925, norm(y): 0.9998, norm:9.1530, tok/sec: 109909.33, flops:42.82, batch-reuse:1
@ 238 train 7.9555 , allloss: 9.1770, dt: 1194.18ms, fracRes: 0.0478, norm(attn): 0.1260, norm(output): 0.1001, norm(x): 0.0915, norm(y): 0.9998, norm:37.6157, tok/sec: 109759.41, flops:42.76, batch-reuse:1
@ 239 train 7.9372 , allloss: 9.0183, dt: 1204.16ms, fracRes: 0.0554, norm(attn): 0.1260, norm(output): 0.1011, norm(x): 0.0921, norm(y): 0.9998, norm:12.0295, tok/sec: 108849.60, flops:42.41, batch-reuse:1
@ 240 train 7.9747 , allloss: 9.0307, dt: 1187.83ms, fracRes: 0.0575, norm(attn): 0.1260, norm(output): 0.1011, norm(x): 0.0922, norm(y): 0.9998, norm:11.9155, tok/sec: 110345.87, flops:42.99, batch-reuse:1
@ 241 train 7.9669 , allloss: 9.1640, dt: 1183.20ms, fracRes: 0.0492, norm(attn): 0.1260, norm(output): 0.1001, norm(x): 0.0912, norm(y): 0.9998, norm:44.4915, tok/sec: 110777.92, flops:43.16, batch-reuse:1
@ 242 train 7.9733 , allloss: 9.0631, dt: 1184.76ms, fracRes: 0.0503, norm(attn): 0.1299, norm(output): 0.0996, norm(x): 0.0914, norm(y): 0.9998, norm:12.7136, tok/sec: 110631.77, flops:43.10, batch-reuse:1
@ 243 train 7.8601 , allloss: 8.9350, dt: 1188.43ms, fracRes: 0.0488, norm(attn): 0.1279, norm(output): 0.0996, norm(x): 0.0909, norm(y): 0.9998, norm:17.4525, tok/sec: 110289.69, flops:42.97, batch-reuse:1
@ 244 train 7.9960 , allloss: 9.2685, dt: 1185.70ms, fracRes: 0.0454, norm(attn): 0.1250, norm(output): 0.0991, norm(x): 0.0903, norm(y): 0.9998, norm:68.1521, tok/sec: 110544.14, flops:43.07, batch-reuse:1
@ 245 train 7.8472 , allloss: 8.9545, dt: 1193.08ms, fracRes: 0.0568, norm(attn): 0.1245, norm(output): 0.1006, norm(x): 0.0912, norm(y): 0.9998, norm:10.2747, tok/sec: 109859.96, flops:42.80, batch-reuse:1
@ 246 train 8.0042 , allloss: 9.0362, dt: 1225.95ms, fracRes: 0.0646, norm(attn): 0.1240, norm(output): 0.1011, norm(x): 0.0921, norm(y): 0.9998, norm:15.7895, tok/sec: 106914.43, flops:41.65, batch-reuse:1
@ 247 train 7.9507 , allloss: 9.0797, dt: 1187.80ms, fracRes: 0.0579, norm(attn): 0.1250, norm(output): 0.1006, norm(x): 0.0917, norm(y): 0.9998, norm:27.9836, tok/sec: 110348.68, flops:42.99, batch-reuse:1
@ 248 train 7.8927 , allloss: 8.9322, dt: 1224.16ms, fracRes: 0.0540, norm(attn): 0.1260, norm(output): 0.1011, norm(x): 0.0916, norm(y): 0.9998, norm:15.3361, tok/sec: 107071.06, flops:41.71, batch-reuse:1
@ 249 train 7.8551 , allloss: 9.0032, dt: 1183.56ms, fracRes: 0.0471, norm(attn): 0.1260, norm(output): 0.0991, norm(x): 0.0904, norm(y): 0.9998, norm:20.0937, tok/sec: 110744.25, flops:43.15, batch-reuse:1
@ 250 train 7.8928 , allloss: 8.9453, dt: 1191.49ms, fracRes: 0.0503, norm(attn): 0.1270, norm(output): 0.0991, norm(x): 0.0910, norm(y): 0.9998, norm:19.6693, tok/sec: 110006.78, flops:42.86, batch-reuse:1
@ 251 train 7.8132 , allloss: 8.9594, dt: 1219.79ms, fracRes: 0.0551, norm(attn): 0.1250, norm(output): 0.1006, norm(x): 0.0910, norm(y): 0.9998, norm:22.3931, tok/sec: 107454.54, flops:41.86, batch-reuse:1
@ 252 train 7.9367 , allloss: 8.9533, dt: 1198.17ms, fracRes: 0.0640, norm(attn): 0.1245, norm(output): 0.1011, norm(x): 0.0920, norm(y): 0.9998, norm:15.4236, tok/sec: 109393.61, flops:42.62, batch-reuse:1
@ 253 train 7.8311 , allloss: 8.8860, dt: 1191.93ms, fracRes: 0.0660, norm(attn): 0.1245, norm(output): 0.1006, norm(x): 0.0916, norm(y): 0.9998, norm:9.4560, tok/sec: 109965.88, flops:42.84, batch-reuse:1
@ 254 train 7.7795 , allloss: 8.9090, dt: 1224.31ms, fracRes: 0.0561, norm(attn): 0.1250, norm(output): 0.0991, norm(x): 0.0906, norm(y): 0.9998, norm:15.9218, tok/sec: 107057.61, flops:41.71, batch-reuse:1
@ 255 train 7.8401 , allloss: 8.8426, dt: 1182.59ms, fracRes: 0.0520, norm(attn): 0.1250, norm(output): 0.0996, norm(x): 0.0906, norm(y): 0.9998, norm:33.8896, tok/sec: 110834.71, flops:43.18, batch-reuse:1
@ 256 train 7.8195 , allloss: 8.8838, dt: 1178.97ms, fracRes: 0.0494, norm(attn): 0.1250, norm(output): 0.0991, norm(x): 0.0900, norm(y): 0.9998, norm:21.7705, tok/sec: 111174.71, flops:43.31, batch-reuse:1
@ 257 train 7.9533 , allloss: 9.2402, dt: 1196.55ms, fracRes: 0.0497, norm(attn): 0.1260, norm(output): 0.0967, norm(x): 0.0899, norm(y): 0.9998, norm:123.4098, tok/sec: 109541.56, flops:42.68, batch-reuse:1
@ 258 train 7.8263 , allloss: 8.9936, dt: 1192.29ms, fracRes: 0.0557, norm(attn): 0.1250, norm(output): 0.0991, norm(x): 0.0908, norm(y): 0.9998, norm:35.9853, tok/sec: 109933.16, flops:42.83, batch-reuse:1
@ 259 train 7.8379 , allloss: 8.7982, dt: 1190.62ms, fracRes: 0.0664, norm(attn): 0.1211, norm(output): 0.1016, norm(x): 0.0922, norm(y): 0.9998, norm:21.3578, tok/sec: 110086.77, flops:42.89, batch-reuse:1
@ 260 train 7.9069 , allloss: 8.8578, dt: 1214.40ms, fracRes: 0.0666, norm(attn): 0.1201, norm(output): 0.1016, norm(x): 0.0925, norm(y): 0.9998, norm:20.7922, tok/sec: 107931.40, flops:42.05, batch-reuse:1
@ 261 train 7.8054 , allloss: 8.8533, dt: 1185.07ms, fracRes: 0.0622, norm(attn): 0.1206, norm(output): 0.1011, norm(x): 0.0917, norm(y): 0.9998, norm:12.4634, tok/sec: 110602.61, flops:43.09, batch-reuse:1
@ 262 train 7.8565 , allloss: 9.1677, dt: 1209.81ms, fracRes: 0.0536, norm(attn): 0.1250, norm(output): 0.1006, norm(x): 0.0907, norm(y): 0.9999, norm:45.8440, tok/sec: 108341.19, flops:42.21, batch-reuse:1
@ 263 train 7.8474 , allloss: 9.1764, dt: 1192.40ms, fracRes: 0.0521, norm(attn): 0.1250, norm(output): 0.0996, norm(x): 0.0909, norm(y): 0.9999, norm:48.3581, tok/sec: 109922.76, flops:42.83, batch-reuse:1
@ 264 train 7.7921 , allloss: 8.9265, dt: 1164.23ms, fracRes: 0.0567, norm(attn): 0.1250, norm(output): 0.1011, norm(x): 0.0916, norm(y): 0.9999, norm:8.0972, tok/sec: 112582.35, flops:43.86, batch-reuse:1
@ 265 train 7.8130 , allloss: 8.8090, dt: 1190.41ms, fracRes: 0.0595, norm(attn): 0.1250, norm(output): 0.1016, norm(x): 0.0923, norm(y): 0.9999, norm:13.3037, tok/sec: 110106.70, flops:42.90, batch-reuse:1
@ 266 train 7.8230 , allloss: 8.7991, dt: 1196.76ms, fracRes: 0.0594, norm(attn): 0.1260, norm(output): 0.1016, norm(x): 0.0922, norm(y): 0.9999, norm:13.5917, tok/sec: 109522.38, flops:42.67, batch-reuse:1
@ 267 train 7.7542 , allloss: 8.7879, dt: 1172.34ms, fracRes: 0.0571, norm(attn): 0.1309, norm(output): 0.1011, norm(x): 0.0913, norm(y): 0.9999, norm:9.6751, tok/sec: 111803.46, flops:43.56, batch-reuse:1
@ 268 train 7.8636 , allloss: 9.0590, dt: 1173.64ms, fracRes: 0.0531, norm(attn): 0.1318, norm(output): 0.0996, norm(x): 0.0902, norm(y): 0.9999, norm:37.6504, tok/sec: 111679.81, flops:43.51, batch-reuse:1
@ 269 train 7.7788 , allloss: 8.9570, dt: 1188.52ms, fracRes: 0.0556, norm(attn): 0.1328, norm(output): 0.1001, norm(x): 0.0904, norm(y): 0.9999, norm:22.9893, tok/sec: 110281.54, flops:42.97, batch-reuse:1
@ 270 train 7.8326 , allloss: 8.8919, dt: 1175.98ms, fracRes: 0.0597, norm(attn): 0.1318, norm(output): 0.1011, norm(x): 0.0914, norm(y): 0.9999, norm:7.2267, tok/sec: 111457.76, flops:43.42, batch-reuse:1
@ 271 train 7.7735 , allloss: 8.7617, dt: 1181.58ms, fracRes: 0.0646, norm(attn): 0.1309, norm(output): 0.1011, norm(x): 0.0917, norm(y): 0.9999, norm:11.2817, tok/sec: 110929.27, flops:43.22, batch-reuse:1
@ 272 train 7.7704 , allloss: 8.7684, dt: 1244.62ms, fracRes: 0.0621, norm(attn): 0.1318, norm(output): 0.1011, norm(x): 0.0912, norm(y): 0.9999, norm:10.0139, tok/sec: 105310.97, flops:41.03, batch-reuse:1
@ 273 train 7.8855 , allloss: 8.9811, dt: 1207.06ms, fracRes: 0.0556, norm(attn): 0.1357, norm(output): 0.0991, norm(x): 0.0902, norm(y): 0.9999, norm:7.8215, tok/sec: 108588.25, flops:42.31, batch-reuse:1
@ 274 train 7.7776 , allloss: 8.8859, dt: 1201.45ms, fracRes: 0.0537, norm(attn): 0.1396, norm(output): 0.0991, norm(x): 0.0894, norm(y): 0.9999, norm:20.0991, tok/sec: 109095.07, flops:42.50, batch-reuse:1
@ 275 train 7.7707 , allloss: 8.7627, dt: 1189.70ms, fracRes: 0.0534, norm(attn): 0.1377, norm(output): 0.0991, norm(x): 0.0898, norm(y): 0.9999, norm:7.6189, tok/sec: 110172.39, flops:42.92, batch-reuse:1
@ 276 train 7.7512 , allloss: 8.7052, dt: 1204.15ms, fracRes: 0.0517, norm(attn): 0.1396, norm(output): 0.0991, norm(x): 0.0898, norm(y): 0.9999, norm:11.0470, tok/sec: 108849.80, flops:42.41, batch-reuse:1
@ 277 train 7.6748 , allloss: 8.6876, dt: 1201.09ms, fracRes: 0.0504, norm(attn): 0.1406, norm(output): 0.0967, norm(x): 0.0890, norm(y): 0.9999, norm:8.8657, tok/sec: 109127.86, flops:42.52, batch-reuse:1
@ 278 train 7.7367 , allloss: 8.7365, dt: 1208.98ms, fracRes: 0.0498, norm(attn): 0.1406, norm(output): 0.0967, norm(x): 0.0894, norm(y): 0.9999, norm:7.3375, tok/sec: 108415.78, flops:42.24, batch-reuse:1
@ 279 train 7.7024 , allloss: 8.6138, dt: 1206.31ms, fracRes: 0.0508, norm(attn): 0.1406, norm(output): 0.0991, norm(x): 0.0904, norm(y): 0.9999, norm:10.9437, tok/sec: 108654.91, flops:42.33, batch-reuse:1
@ 280 train 7.7775 , allloss: 8.7338, dt: 1194.05ms, fracRes: 0.0488, norm(attn): 0.1406, norm(output): 0.0991, norm(x): 0.0904, norm(y): 0.9999, norm:8.2067, tok/sec: 109770.79, flops:42.77, batch-reuse:1
@ 281 train 7.7151 , allloss: 8.7151, dt: 1181.02ms, fracRes: 0.0483, norm(attn): 0.1416, norm(output): 0.0991, norm(x): 0.0900, norm(y): 0.9999, norm:10.6783, tok/sec: 110982.21, flops:43.24, batch-reuse:1
@ 282 train 7.7056 , allloss: 8.6125, dt: 1198.31ms, fracRes: 0.0468, norm(attn): 0.1396, norm(output): 0.0991, norm(x): 0.0907, norm(y): 0.9999, norm:19.5224, tok/sec: 109380.31, flops:42.61, batch-reuse:1
@ 283 train 7.6424 , allloss: 8.6210, dt: 1186.47ms, fracRes: 0.0459, norm(attn): 0.1387, norm(output): 0.0991, norm(x): 0.0902, norm(y): 0.9999, norm:10.9612, tok/sec: 110471.86, flops:43.04, batch-reuse:1
@ 284 train 7.9183 , allloss: 9.1604, dt: 1201.51ms, fracRes: 0.0437, norm(attn): 0.1406, norm(output): 0.0977, norm(x): 0.0901, norm(y): 0.9999, norm:202.4792, tok/sec: 109089.18, flops:42.50, batch-reuse:1
@ 285 train 7.7867 , allloss: 8.8140, dt: 1199.81ms, fracRes: 0.0438, norm(attn): 0.1416, norm(output): 0.0986, norm(x): 0.0914, norm(y): 0.9999, norm:44.0806, tok/sec: 109243.57, flops:42.56, batch-reuse:1
@ 286 train 7.8588 , allloss: 8.6356, dt: 1207.08ms, fracRes: 0.0458, norm(attn): 0.1406, norm(output): 0.1016, norm(x): 0.0942, norm(y): 0.9999, norm:43.4745, tok/sec: 108585.72, flops:42.30, batch-reuse:1
@ 287 train 7.8221 , allloss: 8.5988, dt: 1199.06ms, fracRes: 0.0452, norm(attn): 0.1387, norm(output): 0.1021, norm(x): 0.0948, norm(y): 0.9999, norm:35.8132, tok/sec: 109312.58, flops:42.59, batch-reuse:1
@ 288 train 7.7484 , allloss: 8.6508, dt: 1218.13ms, fracRes: 0.0428, norm(attn): 0.1357, norm(output): 0.1021, norm(x): 0.0939, norm(y): 0.9999, norm:13.3861, tok/sec: 107600.88, flops:41.92, batch-reuse:1
@ 289 train 7.7639 , allloss: 9.0047, dt: 1225.23ms, fracRes: 0.0412, norm(attn): 0.1367, norm(output): 0.1011, norm(x): 0.0930, norm(y): 1.0000, norm:76.0869, tok/sec: 106977.49, flops:41.68, batch-reuse:1
@ 290 train 7.7124 , allloss: 8.9272, dt: 1216.11ms, fracRes: 0.0413, norm(attn): 0.1377, norm(output): 0.1021, norm(x): 0.0939, norm(y): 1.0000, norm:46.8742, tok/sec: 107779.56, flops:41.99, batch-reuse:1
@ 291 train 7.6329 , allloss: 8.5744, dt: 1206.82ms, fracRes: 0.0448, norm(attn): 0.1377, norm(output): 0.1035, norm(x): 0.0959, norm(y): 1.0000, norm:8.4584, tok/sec: 108609.29, flops:42.31, batch-reuse:1
@ 292 train 7.6829 , allloss: 8.5500, dt: 1241.79ms, fracRes: 0.0459, norm(attn): 0.1367, norm(output): 0.1064, norm(x): 0.0973, norm(y): 1.0000, norm:11.6324, tok/sec: 105551.08, flops:41.12, batch-reuse:1
@ 293 train 7.7365 , allloss: 8.6381, dt: 1197.06ms, fracRes: 0.0456, norm(attn): 0.1348, norm(output): 0.1064, norm(x): 0.0973, norm(y): 1.0000, norm:10.3961, tok/sec: 109494.98, flops:42.66, batch-reuse:1
@ 294 train 7.6905 , allloss: 8.7175, dt: 1215.32ms, fracRes: 0.0462, norm(attn): 0.1328, norm(output): 0.1040, norm(x): 0.0962, norm(y): 1.0000, norm:8.5731, tok/sec: 107850.22, flops:42.02, batch-reuse:1
@ 295 train 7.7197 , allloss: 8.9635, dt: 1244.48ms, fracRes: 0.0436, norm(attn): 0.1328, norm(output): 0.1021, norm(x): 0.0952, norm(y): 1.0000, norm:39.0791, tok/sec: 105322.35, flops:41.03, batch-reuse:1
@ 296 train 7.6283 , allloss: 8.7793, dt: 1237.92ms, fracRes: 0.0440, norm(attn): 0.1328, norm(output): 0.1025, norm(x): 0.0952, norm(y): 0.9999, norm:11.9063, tok/sec: 105881.07, flops:41.25, batch-reuse:1
@ 297 train 7.6338 , allloss: 8.6077, dt: 1238.39ms, fracRes: 0.0441, norm(attn): 0.1299, norm(output): 0.1035, norm(x): 0.0960, norm(y): 0.9999, norm:21.6314, tok/sec: 105840.73, flops:41.24, batch-reuse:1
@ 298 train 7.7101 , allloss: 8.7266, dt: 1225.85ms, fracRes: 0.0389, norm(attn): 0.1270, norm(output): 0.1021, norm(x): 0.0957, norm(y): 0.9999, norm:17.6979, tok/sec: 106923.52, flops:41.66, batch-reuse:1
@ 299 train 7.6838 , allloss: 8.9753, dt: 1202.26ms, fracRes: 0.0388, norm(attn): 0.1289, norm(output): 0.1021, norm(x): 0.0950, norm(y): 0.9999, norm:22.0287, tok/sec: 109021.67, flops:42.47, batch-reuse:1
@ 300 train 7.6426 , allloss: 8.9018, dt: 1220.44ms, fracRes: 0.0367, norm(attn): 0.1299, norm(output): 0.1021, norm(x): 0.0952, norm(y): 0.9999, norm:10.9849, tok/sec: 107397.24, flops:41.84, batch-reuse:1
@ 301 train 7.7869 , allloss: 8.9260, dt: 1216.16ms, fracRes: 0.0342, norm(attn): 0.1309, norm(output): 0.1025, norm(x): 0.0957, norm(y): 0.9999, norm:10.8284, tok/sec: 107775.71, flops:41.99, batch-reuse:1
@ 302 train 7.6541 , allloss: 8.8239, dt: 1220.69ms, fracRes: 0.0353, norm(attn): 0.1318, norm(output): 0.1021, norm(x): 0.0955, norm(y): 0.9999, norm:13.2675, tok/sec: 107375.44, flops:41.83, batch-reuse:1
@ 303 train 7.7020 , allloss: 9.1545, dt: 1241.36ms, fracRes: 0.0325, norm(attn): 0.1328, norm(output): 0.1021, norm(x): 0.0951, norm(y): 1.0000, norm:45.9843, tok/sec: 105587.04, flops:41.14, batch-reuse:1
@ 304 train 7.6424 , allloss: 8.9014, dt: 1224.77ms, fracRes: 0.0316, norm(attn): 0.1338, norm(output): 0.1030, norm(x): 0.0956, norm(y): 1.0000, norm:9.2959, tok/sec: 107017.47, flops:41.69, batch-reuse:1
@ 305 train 7.5954 , allloss: 8.6596, dt: 1187.38ms, fracRes: 0.0304, norm(attn): 0.1289, norm(output): 0.1045, norm(x): 0.0968, norm(y): 1.0000, norm:18.8189, tok/sec: 110387.77, flops:43.01, batch-reuse:1
@ 306 train 7.5785 , allloss: 8.7837, dt: 1216.12ms, fracRes: 0.0266, norm(attn): 0.1318, norm(output): 0.1045, norm(x): 0.0972, norm(y): 1.0000, norm:11.9353, tok/sec: 107778.52, flops:41.99, batch-reuse:1
@ 307 train 7.7580 , allloss: 8.9626, dt: 1239.85ms, fracRes: 0.0243, norm(attn): 0.1348, norm(output): 0.1045, norm(x): 0.0972, norm(y): 1.0000, norm:12.0033, tok/sec: 105716.40, flops:41.19, batch-reuse:1
@ 308 train 7.6252 , allloss: 8.8770, dt: 1222.20ms, fracRes: 0.0235, norm(attn): 0.1357, norm(output): 0.1035, norm(x): 0.0972, norm(y): 1.0000, norm:13.8076, tok/sec: 107242.52, flops:41.78, batch-reuse:1
@ 309 train 7.6686 , allloss: 8.7055, dt: 1214.23ms, fracRes: 0.0226, norm(attn): 0.1328, norm(output): 0.1035, norm(x): 0.0970, norm(y): 1.0000, norm:22.4016, tok/sec: 107946.95, flops:42.06, batch-reuse:1
@ 310 train 7.6721 , allloss: 8.8684, dt: 1236.24ms, fracRes: 0.0201, norm(attn): 0.1377, norm(output): 0.1021, norm(x): 0.0961, norm(y): 1.0000, norm:8.6199, tok/sec: 106024.48, flops:41.31, batch-reuse:1
@ 311 train 7.8234 , allloss: 9.3526, dt: 1210.68ms, fracRes: 0.0194, norm(attn): 0.1406, norm(output): 0.1021, norm(x): 0.0962, norm(y): 1.0000, norm:148.0689, tok/sec: 108263.36, flops:42.18, batch-reuse:1
@ 312 train 7.7931 , allloss: 8.9499, dt: 1215.18ms, fracRes: 0.0187, norm(attn): 0.1377, norm(output): 0.1035, norm(x): 0.0963, norm(y): 1.0000, norm:16.7116, tok/sec: 107861.77, flops:42.02, batch-reuse:1
@ 313 train 7.6357 , allloss: 8.7119, dt: 1215.87ms, fracRes: 0.0191, norm(attn): 0.1406, norm(output): 0.1030, norm(x): 0.0966, norm(y): 1.0000, norm:26.4334, tok/sec: 107800.88, flops:42.00, batch-reuse:1
@ 314 train 7.6233 , allloss: 9.0608, dt: 1209.47ms, fracRes: 0.0184, norm(attn): 0.1504, norm(output): 0.1030, norm(x): 0.0972, norm(y): 1.0001, norm:44.5228, tok/sec: 108371.03, flops:42.22, batch-reuse:1
@ 315 train 7.6401 , allloss: 8.8245, dt: 1211.84ms, fracRes: 0.0170, norm(attn): 0.1553, norm(output): 0.1074, norm(x): 0.0993, norm(y): 1.0001, norm:11.3509, tok/sec: 108159.78, flops:42.14, batch-reuse:1
@ 316 train 7.6646 , allloss: 8.7761, dt: 1238.96ms, fracRes: 0.0175, norm(attn): 0.1572, norm(output): 0.1089, norm(x): 0.1011, norm(y): 1.0001, norm:10.8654, tok/sec: 105791.79, flops:41.22, batch-reuse:1
@ 317 train 7.6707 , allloss: 8.8017, dt: 1232.87ms, fracRes: 0.0171, norm(attn): 0.1562, norm(output): 0.1084, norm(x): 0.1008, norm(y): 1.0001, norm:8.4511, tok/sec: 106314.63, flops:41.42, batch-reuse:1
@ 318 train 7.5901 , allloss: 8.7698, dt: 1203.54ms, fracRes: 0.0171, norm(attn): 0.1553, norm(output): 0.1079, norm(x): 0.0999, norm(y): 1.0001, norm:19.4879, tok/sec: 108905.84, flops:42.43, batch-reuse:1
@ 319 train 7.5745 , allloss: 8.4887, dt: 1195.12ms, fracRes: 0.0170, norm(attn): 0.1533, norm(output): 0.1089, norm(x): 0.1014, norm(y): 1.0001, norm:24.2976, tok/sec: 109672.53, flops:42.73, batch-reuse:1
@ 320 train 7.6055 , allloss: 8.6143, dt: 1198.41ms, fracRes: 0.0159, norm(attn): 0.1582, norm(output): 0.1089, norm(x): 0.1014, norm(y): 1.0002, norm:11.4495, tok/sec: 109371.99, flops:42.61, batch-reuse:1
@ 321 train 7.6998 , allloss: 9.0218, dt: 1189.70ms, fracRes: 0.0168, norm(attn): 0.1621, norm(output): 0.1084, norm(x): 0.1007, norm(y): 1.0002, norm:72.5155, tok/sec: 110172.32, flops:42.92, batch-reuse:1
@ 322 train 7.5692 , allloss: 8.6326, dt: 1210.03ms, fracRes: 0.0158, norm(attn): 0.1709, norm(output): 0.1099, norm(x): 0.1033, norm(y): 1.0002, norm:15.0713, tok/sec: 108320.89, flops:42.20, batch-reuse:1
@ 323 train 7.6512 , allloss: 8.6713, dt: 1238.18ms, fracRes: 0.0155, norm(attn): 0.1719, norm(output): 0.1113, norm(x): 0.1053, norm(y): 1.0003, norm:8.7770, tok/sec: 105858.81, flops:41.24, batch-reuse:1
@ 324 train 7.5946 , allloss: 8.5797, dt: 1245.75ms, fracRes: 0.0171, norm(attn): 0.1699, norm(output): 0.1143, norm(x): 0.1065, norm(y): 1.0002, norm:9.3150, tok/sec: 105215.40, flops:40.99, batch-reuse:1
@ 325 train 7.6552 , allloss: 8.5739, dt: 1231.09ms, fracRes: 0.0159, norm(attn): 0.1709, norm(output): 0.1123, norm(x): 0.1069, norm(y): 1.0003, norm:26.0054, tok/sec: 106468.53, flops:41.48, batch-reuse:1
@ 326 train 7.6547 , allloss: 8.5480, dt: 1229.11ms, fracRes: 0.0166, norm(attn): 0.1729, norm(output): 0.1133, norm(x): 0.1074, norm(y): 1.0003, norm:11.4201, tok/sec: 106640.07, flops:41.55, batch-reuse:1
@ 327 train 7.7407 , allloss: 8.6212, dt: 1220.18ms, fracRes: 0.0164, norm(attn): 0.1748, norm(output): 0.1157, norm(x): 0.1078, norm(y): 1.0003, norm:18.9161, tok/sec: 107420.34, flops:41.85, batch-reuse:1
@ 328 train 7.6246 , allloss: 8.4062, dt: 1217.64ms, fracRes: 0.0153, norm(attn): 0.1836, norm(output): 0.1172, norm(x): 0.1091, norm(y): 1.0004, norm:11.9890, tok/sec: 107644.37, flops:41.94, batch-reuse:1
@ 329 train 7.6310 , allloss: 8.3873, dt: 1219.08ms, fracRes: 0.0151, norm(attn): 0.1836, norm(output): 0.1177, norm(x): 0.1098, norm(y): 1.0004, norm:11.9122, tok/sec: 107516.79, flops:41.89, batch-reuse:1
@ 330 train 7.5947 , allloss: 8.4921, dt: 1225.12ms, fracRes: 0.0157, norm(attn): 0.1768, norm(output): 0.1152, norm(x): 0.1072, norm(y): 1.0004, norm:12.2531, tok/sec: 106987.02, flops:41.68, batch-reuse:1
@ 331 train 7.5486 , allloss: 8.3807, dt: 1205.59ms, fracRes: 0.0165, norm(attn): 0.1699, norm(output): 0.1167, norm(x): 0.1089, norm(y): 1.0004, norm:8.9363, tok/sec: 108720.60, flops:42.36, batch-reuse:1
@ 332 train 7.5918 , allloss: 8.2593, dt: 1207.91ms, fracRes: 0.0185, norm(attn): 0.1709, norm(output): 0.1187, norm(x): 0.1123, norm(y): 1.0005, norm:17.7971, tok/sec: 108511.03, flops:42.28, batch-reuse:1
@ 333 train 7.6087 , allloss: 8.3321, dt: 1233.54ms, fracRes: 0.0184, norm(attn): 0.1680, norm(output): 0.1172, norm(x): 0.1105, norm(y): 1.0004, norm:10.8446, tok/sec: 106256.89, flops:41.40, batch-reuse:1
@ 334 train 7.9799 , allloss: 9.1937, dt: 1242.79ms, fracRes: 0.0172, norm(attn): 0.1592, norm(output): 0.1157, norm(x): 0.1068, norm(y): 1.0004, norm:354.1050, tok/sec: 105465.89, flops:41.09, batch-reuse:1
@ 335 train 7.8457 , allloss: 9.0297, dt: 1199.43ms, fracRes: 0.0167, norm(attn): 0.1641, norm(output): 0.1157, norm(x): 0.1073, norm(y): 1.0004, norm:243.2781, tok/sec: 109278.66, flops:42.57, batch-reuse:1
@ 336 train 7.5744 , allloss: 8.3670, dt: 1197.24ms, fracRes: 0.0160, norm(attn): 0.1738, norm(output): 0.1177, norm(x): 0.1102, norm(y): 1.0004, norm:12.6388, tok/sec: 109478.26, flops:42.65, batch-reuse:1
@ 337 train 7.5885 , allloss: 8.2335, dt: 1188.89ms, fracRes: 0.0162, norm(attn): 0.1807, norm(output): 0.1211, norm(x): 0.1132, norm(y): 1.0005, norm:9.1747, tok/sec: 110246.98, flops:42.95, batch-reuse:1
@ 338 train 7.5577 , allloss: 8.1752, dt: 1213.99ms, fracRes: 0.0166, norm(attn): 0.1816, norm(output): 0.1226, norm(x): 0.1136, norm(y): 1.0005, norm:11.4905, tok/sec: 107967.94, flops:42.06, batch-reuse:1
@ 339 train 7.6067 , allloss: 8.2244, dt: 1234.07ms, fracRes: 0.0173, norm(attn): 0.1777, norm(output): 0.1221, norm(x): 0.1136, norm(y): 1.0005, norm:6.2632, tok/sec: 106210.94, flops:41.38, batch-reuse:1
@ 340 train 7.6198 , allloss: 8.2547, dt: 1243.81ms, fracRes: 0.0182, norm(attn): 0.1689, norm(output): 0.1182, norm(x): 0.1118, norm(y): 1.0005, norm:6.6951, tok/sec: 105379.26, flops:41.06, batch-reuse:1
@ 341 train 7.5467 , allloss: 8.1279, dt: 1242.37ms, fracRes: 0.0193, norm(attn): 0.1641, norm(output): 0.1221, norm(x): 0.1133, norm(y): 1.0006, norm:4.5602, tok/sec: 105501.69, flops:41.10, batch-reuse:1
@ 342 train 7.4968 , allloss: 8.0200, dt: 1242.00ms, fracRes: 0.0214, norm(attn): 0.1650, norm(output): 0.1245, norm(x): 0.1158, norm(y): 1.0007, norm:10.7058, tok/sec: 105533.35, flops:41.12, batch-reuse:1
@ 343 train 7.5315 , allloss: 8.0659, dt: 1206.28ms, fracRes: 0.0195, norm(attn): 0.1699, norm(output): 0.1245, norm(x): 0.1154, norm(y): 1.0007, norm:6.9627, tok/sec: 108657.96, flops:42.33, batch-reuse:1
@ 344 train 7.4990 , allloss: 8.1114, dt: 1225.38ms, fracRes: 0.0185, norm(attn): 0.1660, norm(output): 0.1177, norm(x): 0.1117, norm(y): 1.0005, norm:8.3026, tok/sec: 106964.73, flops:41.67, batch-reuse:1
@ 345 train 7.5136 , allloss: 8.0948, dt: 1213.35ms, fracRes: 0.0194, norm(attn): 0.1660, norm(output): 0.1191, norm(x): 0.1127, norm(y): 1.0005, norm:5.3437, tok/sec: 108025.08, flops:42.09, batch-reuse:1
@ 346 train 7.5970 , allloss: 8.0907, dt: 1223.27ms, fracRes: 0.0233, norm(attn): 0.1670, norm(output): 0.1260, norm(x): 0.1178, norm(y): 1.0006, norm:13.1975, tok/sec: 107148.77, flops:41.75, batch-reuse:1
@ 347 train 7.6119 , allloss: 8.0924, dt: 1229.41ms, fracRes: 0.0251, norm(attn): 0.1631, norm(output): 0.1260, norm(x): 0.1186, norm(y): 1.0006, norm:11.7492, tok/sec: 106613.60, flops:41.54, batch-reuse:1
@ 348 train 7.5632 , allloss: 8.1438, dt: 1192.70ms, fracRes: 0.0210, norm(attn): 0.1553, norm(output): 0.1191, norm(x): 0.1131, norm(y): 1.0004, norm:41.3525, tok/sec: 109895.45, flops:42.82, batch-reuse:1
@ 349 train 7.5516 , allloss: 8.2334, dt: 1215.80ms, fracRes: 0.0219, norm(attn): 0.1504, norm(output): 0.1187, norm(x): 0.1117, norm(y): 1.0003, norm:10.3875, tok/sec: 107807.20, flops:42.00, batch-reuse:1
@ 350 train 7.5788 , allloss: 8.2199, dt: 1241.01ms, fracRes: 0.0237, norm(attn): 0.1562, norm(output): 0.1230, norm(x): 0.1134, norm(y): 1.0004, norm:12.6684, tok/sec: 105616.94, flops:41.15, batch-reuse:1
@ 351 train 7.5981 , allloss: 8.2359, dt: 1219.87ms, fracRes: 0.0250, norm(attn): 0.1504, norm(output): 0.1230, norm(x): 0.1137, norm(y): 1.0004, norm:17.1240, tok/sec: 107447.59, flops:41.86, batch-reuse:1
@ 352 train 7.6142 , allloss: 8.2871, dt: 1211.62ms, fracRes: 0.0254, norm(attn): 0.1484, norm(output): 0.1235, norm(x): 0.1136, norm(y): 1.0003, norm:8.4378, tok/sec: 108179.02, flops:42.15, batch-reuse:1
@ 353 train 7.6007 , allloss: 8.3870, dt: 1237.61ms, fracRes: 0.0261, norm(attn): 0.1436, norm(output): 0.1191, norm(x): 0.1128, norm(y): 1.0002, norm:26.9555, tok/sec: 105907.06, flops:41.26, batch-reuse:1
@ 354 train 7.5906 , allloss: 8.3622, dt: 1236.24ms, fracRes: 0.0262, norm(attn): 0.1406, norm(output): 0.1191, norm(x): 0.1130, norm(y): 1.0001, norm:39.0502, tok/sec: 106024.67, flops:41.31, batch-reuse:1
@ 355 train 7.5113 , allloss: 8.2007, dt: 1203.49ms, fracRes: 0.0276, norm(attn): 0.1416, norm(output): 0.1221, norm(x): 0.1133, norm(y): 1.0002, norm:17.8895, tok/sec: 108910.35, flops:42.43, batch-reuse:1
@ 356 train 7.6019 , allloss: 8.3546, dt: 1227.26ms, fracRes: 0.0288, norm(attn): 0.1436, norm(output): 0.1230, norm(x): 0.1132, norm(y): 1.0002, norm:6.6913, tok/sec: 106800.90, flops:41.61, batch-reuse:1
@ 357 train 7.5758 , allloss: 8.3466, dt: 1241.61ms, fracRes: 0.0279, norm(attn): 0.1406, norm(output): 0.1235, norm(x): 0.1133, norm(y): 1.0003, norm:15.1420, tok/sec: 105565.79, flops:41.13, batch-reuse:1
@ 358 train 7.5112 , allloss: 8.0914, dt: 1226.51ms, fracRes: 0.0287, norm(attn): 0.1416, norm(output): 0.1245, norm(x): 0.1150, norm(y): 1.0002, norm:14.5128, tok/sec: 106865.76, flops:41.63, batch-reuse:1
@ 359 train 7.7123 , allloss: 8.3325, dt: 1192.90ms, fracRes: 0.0286, norm(attn): 0.1426, norm(output): 0.1235, norm(x): 0.1146, norm(y): 1.0002, norm:7.5520, tok/sec: 109876.91, flops:42.81, batch-reuse:1
@ 360 train 7.6709 , allloss: 8.6135, dt: 1221.14ms, fracRes: 0.0258, norm(attn): 0.1387, norm(output): 0.1230, norm(x): 0.1120, norm(y): 1.0002, norm:112.7184, tok/sec: 107336.03, flops:41.82, batch-reuse:1
@ 361 train 7.5792 , allloss: 8.4352, dt: 1207.41ms, fracRes: 0.0285, norm(attn): 0.1406, norm(output): 0.1211, norm(x): 0.1119, norm(y): 1.0002, norm:15.8475, tok/sec: 108556.30, flops:42.29, batch-reuse:1
@ 362 train 7.4686 , allloss: 8.0937, dt: 1212.90ms, fracRes: 0.0315, norm(attn): 0.1426, norm(output): 0.1230, norm(x): 0.1139, norm(y): 1.0001, norm:9.0996, tok/sec: 108064.76, flops:42.10, batch-reuse:1
@ 363 train 7.5263 , allloss: 8.1117, dt: 1219.14ms, fracRes: 0.0333, norm(attn): 0.1465, norm(output): 0.1250, norm(x): 0.1158, norm(y): 1.0002, norm:9.6879, tok/sec: 107511.43, flops:41.89, batch-reuse:1
@ 364 train 7.5657 , allloss: 8.1159, dt: 1186.91ms, fracRes: 0.0398, norm(attn): 0.1465, norm(output): 0.1260, norm(x): 0.1181, norm(y): 1.0003, norm:19.3639, tok/sec: 110431.27, flops:43.02, batch-reuse:1
@ 365 train 7.5419 , allloss: 8.1268, dt: 1210.68ms, fracRes: 0.0413, norm(attn): 0.1406, norm(output): 0.1270, norm(x): 0.1179, norm(y): 1.0003, norm:9.1224, tok/sec: 108263.47, flops:42.18, batch-reuse:1
@ 366 train 7.6090 , allloss: 8.3414, dt: 1231.38ms, fracRes: 0.0300, norm(attn): 0.1270, norm(output): 0.1250, norm(x): 0.1163, norm(y): 1.0003, norm:33.6918, tok/sec: 106443.08, flops:41.47, batch-reuse:1
@ 367 train 7.5634 , allloss: 8.3536, dt: 1200.99ms, fracRes: 0.0275, norm(attn): 0.1260, norm(output): 0.1250, norm(x): 0.1165, norm(y): 1.0003, norm:36.3454, tok/sec: 109136.46, flops:42.52, batch-reuse:1
@ 368 train 7.6098 , allloss: 8.2559, dt: 1236.59ms, fracRes: 0.0332, norm(attn): 0.1309, norm(output): 0.1299, norm(x): 0.1191, norm(y): 1.0003, norm:17.5508, tok/sec: 105994.94, flops:41.30, batch-reuse:1
@ 369 train 7.5232 , allloss: 8.1492, dt: 1200.61ms, fracRes: 0.0381, norm(attn): 0.1318, norm(output): 0.1309, norm(x): 0.1198, norm(y): 1.0003, norm:10.0097, tok/sec: 109170.87, flops:42.53, batch-reuse:1
@ 370 train 7.5756 , allloss: 8.2553, dt: 1199.84ms, fracRes: 0.0364, norm(attn): 0.1299, norm(output): 0.1270, norm(x): 0.1190, norm(y): 1.0003, norm:10.0092, tok/sec: 109241.40, flops:42.56, batch-reuse:1
@ 371 train 7.5134 , allloss: 8.2161, dt: 1219.54ms, fracRes: 0.0379, norm(attn): 0.1318, norm(output): 0.1270, norm(x): 0.1188, norm(y): 1.0002, norm:6.4003, tok/sec: 107476.31, flops:41.87, batch-reuse:1
@ 372 train 7.6117 , allloss: 8.3037, dt: 1230.42ms, fracRes: 0.0371, norm(attn): 0.1318, norm(output): 0.1289, norm(x): 0.1193, norm(y): 1.0002, norm:13.3245, tok/sec: 106525.99, flops:41.50, batch-reuse:1
@ 373 train 7.6447 , allloss: 8.3562, dt: 1200.10ms, fracRes: 0.0334, norm(attn): 0.1289, norm(output): 0.1260, norm(x): 0.1187, norm(y): 1.0001, norm:25.6926, tok/sec: 109217.98, flops:42.55, batch-reuse:1
@ 374 train 7.5946 , allloss: 8.2906, dt: 1203.11ms, fracRes: 0.0341, norm(attn): 0.1309, norm(output): 0.1270, norm(x): 0.1188, norm(y): 1.0002, norm:9.2977, tok/sec: 108944.67, flops:42.44, batch-reuse:1
@ 375 train 7.6368 , allloss: 8.3632, dt: 1208.46ms, fracRes: 0.0321, norm(attn): 0.1318, norm(output): 0.1279, norm(x): 0.1187, norm(y): 1.0002, norm:6.7946, tok/sec: 108461.57, flops:42.26, batch-reuse:1
@ 376 train 7.6832 , allloss: 8.4238, dt: 1236.28ms, fracRes: 0.0315, norm(attn): 0.1338, norm(output): 0.1309, norm(x): 0.1196, norm(y): 1.0003, norm:6.2237, tok/sec: 106021.27, flops:41.31, batch-reuse:1
@ 377 train 7.5914 , allloss: 8.3028, dt: 1194.52ms, fracRes: 0.0288, norm(attn): 0.1318, norm(output): 0.1299, norm(x): 0.1197, norm(y): 1.0003, norm:6.5446, tok/sec: 109727.93, flops:42.75, batch-reuse:1
@ 378 train 7.5657 , allloss: 8.3513, dt: 1212.88ms, fracRes: 0.0272, norm(attn): 0.1279, norm(output): 0.1279, norm(x): 0.1188, norm(y): 1.0003, norm:9.5622, tok/sec: 108067.04, flops:42.10, batch-reuse:1
@ 379 train 7.6187 , allloss: 8.3834, dt: 1242.67ms, fracRes: 0.0262, norm(attn): 0.1235, norm(output): 0.1270, norm(x): 0.1186, norm(y): 1.0003, norm:8.1236, tok/sec: 105475.82, flops:41.09, batch-reuse:1
@ 380 train 7.6946 , allloss: 8.4169, dt: 1241.56ms, fracRes: 0.0319, norm(attn): 0.1245, norm(output): 0.1318, norm(x): 0.1201, norm(y): 1.0004, norm:20.3993, tok/sec: 105570.11, flops:41.13, batch-reuse:1
@ 381 train 7.6066 , allloss: 8.3457, dt: 1239.17ms, fracRes: 0.0293, norm(attn): 0.1196, norm(output): 0.1309, norm(x): 0.1193, norm(y): 1.0004, norm:5.3853, tok/sec: 105773.86, flops:41.21, batch-reuse:1
@ 382 train 7.6968 , allloss: 8.4516, dt: 1218.00ms, fracRes: 0.0234, norm(attn): 0.1172, norm(output): 0.1270, norm(x): 0.1189, norm(y): 1.0003, norm:73.8147, tok/sec: 107612.57, flops:41.93, batch-reuse:1
@ 383 train 7.6081 , allloss: 8.2972, dt: 1202.38ms, fracRes: 0.0272, norm(attn): 0.1167, norm(output): 0.1289, norm(x): 0.1199, norm(y): 1.0004, norm:31.8008, tok/sec: 109010.08, flops:42.47, batch-reuse:1
@ 384 train 7.6210 , allloss: 8.2270, dt: 1244.63ms, fracRes: 0.0456, norm(attn): 0.1182, norm(output): 0.1328, norm(x): 0.1228, norm(y): 1.0005, norm:19.3491, tok/sec: 105310.33, flops:41.03, batch-reuse:1
@ 385 train 7.5691 , allloss: 8.1786, dt: 1204.01ms, fracRes: 0.0378, norm(attn): 0.1182, norm(output): 0.1338, norm(x): 0.1231, norm(y): 1.0005, norm:15.8726, tok/sec: 108862.67, flops:42.41, batch-reuse:1
@ 386 train 7.5977 , allloss: 8.2474, dt: 1198.24ms, fracRes: 0.0257, norm(attn): 0.1177, norm(output): 0.1328, norm(x): 0.1224, norm(y): 1.0005, norm:7.1635, tok/sec: 109387.05, flops:42.62, batch-reuse:1
@ 387 train 7.5738 , allloss: 8.3060, dt: 1194.95ms, fracRes: 0.0203, norm(attn): 0.1177, norm(output): 0.1328, norm(x): 0.1217, norm(y): 1.0005, norm:6.5295, tok/sec: 109687.91, flops:42.73, batch-reuse:1
@ 388 train 7.5140 , allloss: 8.3428, dt: 1216.61ms, fracRes: 0.0191, norm(attn): 0.1221, norm(output): 0.1328, norm(x): 0.1215, norm(y): 1.0004, norm:13.0217, tok/sec: 107735.43, flops:41.97, batch-reuse:1
@ 389 train 7.5595 , allloss: 8.3593, dt: 1216.75ms, fracRes: 0.0202, norm(attn): 0.1211, norm(output): 0.1318, norm(x): 0.1211, norm(y): 1.0004, norm:9.0436, tok/sec: 107723.40, flops:41.97, batch-reuse:1
@ 390 train 7.6147 , allloss: 8.3206, dt: 1214.70ms, fracRes: 0.0204, norm(attn): 0.1196, norm(output): 0.1318, norm(x): 0.1209, norm(y): 1.0004, norm:17.2317, tok/sec: 107904.77, flops:42.04, batch-reuse:1
@ 391 train 7.5265 , allloss: 8.1493, dt: 1212.54ms, fracRes: 0.0211, norm(attn): 0.1240, norm(output): 0.1328, norm(x): 0.1219, norm(y): 1.0005, norm:10.4951, tok/sec: 108097.38, flops:42.11, batch-reuse:1
@ 392 train 7.6419 , allloss: 8.1858, dt: 1212.32ms, fracRes: 0.0213, norm(attn): 0.1245, norm(output): 0.1348, norm(x): 0.1247, norm(y): 1.0006, norm:26.3425, tok/sec: 108116.53, flops:42.12, batch-reuse:1
@ 393 train 7.6449 , allloss: 8.1645, dt: 1209.26ms, fracRes: 0.0229, norm(attn): 0.1260, norm(output): 0.1367, norm(x): 0.1255, norm(y): 1.0006, norm:29.0609, tok/sec: 108389.94, flops:42.23, batch-reuse:1
@ 394 train 7.5197 , allloss: 8.0464, dt: 1242.03ms, fracRes: 0.0232, norm(attn): 0.1250, norm(output): 0.1338, norm(x): 0.1247, norm(y): 1.0005, norm:6.2623, tok/sec: 105530.47, flops:41.11, batch-reuse:1
@ 395 train 7.8182 , allloss: 8.3697, dt: 1224.63ms, fracRes: 0.0229, norm(attn): 0.1250, norm(output): 0.1338, norm(x): 0.1242, norm(y): 1.0004, norm:48.1312, tok/sec: 107029.56, flops:41.70, batch-reuse:1
@ 396 train 7.6731 , allloss: 8.2042, dt: 1228.31ms, fracRes: 0.0263, norm(attn): 0.1250, norm(output): 0.1348, norm(x): 0.1251, norm(y): 1.0004, norm:54.3770, tok/sec: 106709.33, flops:41.57, batch-reuse:1
@ 397 train 7.6097 , allloss: 8.1363, dt: 1191.46ms, fracRes: 0.0274, norm(attn): 0.1245, norm(output): 0.1357, norm(x): 0.1259, norm(y): 1.0004, norm:20.5468, tok/sec: 110009.80, flops:42.86, batch-reuse:1
@ 398 train 7.6605 , allloss: 8.1851, dt: 1215.23ms, fracRes: 0.0289, norm(attn): 0.1260, norm(output): 0.1396, norm(x): 0.1291, norm(y): 1.0004, norm:28.6011, tok/sec: 107857.92, flops:42.02, batch-reuse:1
@ 399 train 7.6556 , allloss: 8.2405, dt: 1208.58ms, fracRes: 0.0281, norm(attn): 0.1279, norm(output): 0.1406, norm(x): 0.1292, norm(y): 1.0004, norm:26.8650, tok/sec: 108450.88, flops:42.25, batch-reuse:1
@ 400 train 7.6077 , allloss: 8.3360, dt: 1227.28ms, fracRes: 0.0263, norm(attn): 0.1299, norm(output): 0.1396, norm(x): 0.1277, norm(y): 1.0004, norm:11.8966, tok/sec: 106798.35, flops:41.61, batch-reuse:1
@ 401 train 7.7168 , allloss: 8.5753, dt: 1229.42ms, fracRes: 0.0262, norm(attn): 0.1328, norm(output): 0.1396, norm(x): 0.1277, norm(y): 1.0003, norm:46.6341, tok/sec: 106613.00, flops:41.54, batch-reuse:1
@ 402 train 7.5975 , allloss: 8.3373, dt: 1210.72ms, fracRes: 0.0261, norm(attn): 0.1260, norm(output): 0.1416, norm(x): 0.1299, norm(y): 1.0004, norm:11.4502, tok/sec: 108259.46, flops:42.18, batch-reuse:1
@ 403 train 7.6043 , allloss: 8.2372, dt: 1222.77ms, fracRes: 0.0300, norm(attn): 0.1187, norm(output): 0.1436, norm(x): 0.1318, norm(y): 1.0005, norm:7.7218, tok/sec: 107192.25, flops:41.76, batch-reuse:1
@ 404 train 7.5100 , allloss: 8.0778, dt: 1218.39ms, fracRes: 0.0346, norm(attn): 0.1162, norm(output): 0.1455, norm(x): 0.1329, norm(y): 1.0005, norm:3.8846, tok/sec: 107577.80, flops:41.91, batch-reuse:1
@ 405 train 7.5387 , allloss: 8.0566, dt: 1196.69ms, fracRes: 0.0333, norm(attn): 0.1152, norm(output): 0.1426, norm(x): 0.1332, norm(y): 1.0005, norm:7.0633, tok/sec: 109528.54, flops:42.67, batch-reuse:1
@ 406 train 7.5329 , allloss: 8.0130, dt: 1206.25ms, fracRes: 0.0307, norm(attn): 0.1147, norm(output): 0.1426, norm(x): 0.1335, norm(y): 1.0005, norm:5.7560, tok/sec: 108660.62, flops:42.33, batch-reuse:1
@ 407 train 7.5143 , allloss: 7.9533, dt: 1226.02ms, fracRes: 0.0305, norm(attn): 0.1167, norm(output): 0.1465, norm(x): 0.1346, norm(y): 1.0006, norm:4.7270, tok/sec: 106908.61, flops:41.65, batch-reuse:1
@ 408 train 7.5762 , allloss: 7.9743, dt: 1240.02ms, fracRes: 0.0294, norm(attn): 0.1201, norm(output): 0.1504, norm(x): 0.1382, norm(y): 1.0007, norm:16.5016, tok/sec: 105701.13, flops:41.18, batch-reuse:1
@ 409 train 7.5067 , allloss: 7.8780, dt: 1210.85ms, fracRes: 0.0311, norm(attn): 0.1201, norm(output): 0.1523, norm(x): 0.1404, norm(y): 1.0007, norm:15.4750, tok/sec: 108247.92, flops:42.17, batch-reuse:1
@ 410 train 7.5039 , allloss: 7.8708, dt: 1219.72ms, fracRes: 0.0303, norm(attn): 0.1172, norm(output): 0.1543, norm(x): 0.1416, norm(y): 1.0007, norm:11.8562, tok/sec: 107460.34, flops:41.87, batch-reuse:1
@ 411 train 7.5235 , allloss: 7.8720, dt: 1243.79ms, fracRes: 0.0295, norm(attn): 0.1172, norm(output): 0.1562, norm(x): 0.1458, norm(y): 1.0007, norm:9.1450, tok/sec: 105381.00, flops:41.06, batch-reuse:1
@ 412 train 7.5829 , allloss: 7.9138, dt: 1212.14ms, fracRes: 0.0287, norm(attn): 0.1182, norm(output): 0.1641, norm(x): 0.1510, norm(y): 1.0008, norm:19.0233, tok/sec: 108132.65, flops:42.13, batch-reuse:1
@ 413 train 7.3651 , allloss: 7.6860, dt: 1237.97ms, fracRes: 0.0287, norm(attn): 0.1177, norm(output): 0.1611, norm(x): 0.1497, norm(y): 1.0008, norm:20.0813, tok/sec: 105876.42, flops:41.25, batch-reuse:1
@ 414 train 7.4983 , allloss: 7.8509, dt: 1235.70ms, fracRes: 0.0267, norm(attn): 0.1177, norm(output): 0.1572, norm(x): 0.1473, norm(y): 1.0007, norm:3.9370, tok/sec: 106071.29, flops:41.33, batch-reuse:1
@ 415 train 7.4122 , allloss: 7.7646, dt: 1216.91ms, fracRes: 0.0261, norm(attn): 0.1177, norm(output): 0.1572, norm(x): 0.1470, norm(y): 1.0007, norm:3.4578, tok/sec: 107708.79, flops:41.96, batch-reuse:1
@ 416 train 7.5612 , allloss: 7.9071, dt: 1228.46ms, fracRes: 0.0247, norm(attn): 0.1177, norm(output): 0.1621, norm(x): 0.1500, norm(y): 1.0007, norm:16.6716, tok/sec: 106696.56, flops:41.57, batch-reuse:1
@ 417 train 7.4877 , allloss: 7.8290, dt: 1237.83ms, fracRes: 0.0260, norm(attn): 0.1167, norm(output): 0.1621, norm(x): 0.1495, norm(y): 1.0006, norm:10.7842, tok/sec: 105888.70, flops:41.25, batch-reuse:1
@ 418 train 7.5808 , allloss: 7.9429, dt: 1238.40ms, fracRes: 0.0257, norm(attn): 0.1143, norm(output): 0.1592, norm(x): 0.1473, norm(y): 1.0005, norm:15.3460, tok/sec: 105840.20, flops:41.24, batch-reuse:1
@ 419 train 7.5416 , allloss: 7.9038, dt: 1221.06ms, fracRes: 0.0273, norm(attn): 0.1108, norm(output): 0.1582, norm(x): 0.1471, norm(y): 1.0005, norm:14.4107, tok/sec: 107342.94, flops:41.82, batch-reuse:1
@ 420 train 7.4531 , allloss: 7.8047, dt: 1215.37ms, fracRes: 0.0288, norm(attn): 0.1099, norm(output): 0.1611, norm(x): 0.1488, norm(y): 1.0005, norm:3.7550, tok/sec: 107845.42, flops:42.02, batch-reuse:1
@ 421 train 7.6251 , allloss: 7.9859, dt: 1222.36ms, fracRes: 0.0273, norm(attn): 0.1104, norm(output): 0.1621, norm(x): 0.1499, norm(y): 1.0005, norm:11.1207, tok/sec: 107228.63, flops:41.78, batch-reuse:1
@ 422 train 7.5425 , allloss: 7.9075, dt: 1219.23ms, fracRes: 0.0329, norm(attn): 0.1089, norm(output): 0.1611, norm(x): 0.1486, norm(y): 1.0005, norm:8.2604, tok/sec: 107504.05, flops:41.88, batch-reuse:1
@ 423 train 7.5775 , allloss: 7.9574, dt: 1214.10ms, fracRes: 0.0405, norm(attn): 0.1060, norm(output): 0.1582, norm(x): 0.1467, norm(y): 1.0004, norm:9.7553, tok/sec: 107958.06, flops:42.06, batch-reuse:1
@ 424 train 7.4937 , allloss: 7.8632, dt: 1217.07ms, fracRes: 0.0529, norm(attn): 0.1035, norm(output): 0.1611, norm(x): 0.1474, norm(y): 1.0004, norm:8.4293, tok/sec: 107694.59, flops:41.96, batch-reuse:1
@ 425 train 7.5613 , allloss: 7.9199, dt: 1216.11ms, fracRes: 0.0611, norm(attn): 0.1064, norm(output): 0.1641, norm(x): 0.1502, norm(y): 1.0004, norm:6.3623, tok/sec: 107780.11, flops:41.99, batch-reuse:1
@ 426 train 7.4319 , allloss: 7.7973, dt: 1204.13ms, fracRes: 0.0486, norm(attn): 0.1074, norm(output): 0.1611, norm(x): 0.1480, norm(y): 1.0004, norm:3.2496, tok/sec: 108851.72, flops:42.41, batch-reuse:1
@ 427 train 7.5096 , allloss: 7.9002, dt: 1201.68ms, fracRes: 0.0339, norm(attn): 0.1099, norm(output): 0.1562, norm(x): 0.1448, norm(y): 1.0004, norm:7.4781, tok/sec: 109073.95, flops:42.50, batch-reuse:1
@ 428 train 7.4722 , allloss: 7.8778, dt: 1211.52ms, fracRes: 0.0338, norm(attn): 0.1113, norm(output): 0.1553, norm(x): 0.1429, norm(y): 1.0003, norm:8.4296, tok/sec: 108187.85, flops:42.15, batch-reuse:1
@ 429 train 7.4074 , allloss: 7.8735, dt: 1228.49ms, fracRes: 0.0337, norm(attn): 0.1157, norm(output): 0.1543, norm(x): 0.1402, norm(y): 1.0003, norm:6.3167, tok/sec: 106693.24, flops:41.57, batch-reuse:1
@ 430 train 7.4745 , allloss: 7.9241, dt: 1215.82ms, fracRes: 0.0347, norm(attn): 0.1177, norm(output): 0.1553, norm(x): 0.1422, norm(y): 1.0003, norm:3.3855, tok/sec: 107805.74, flops:42.00, batch-reuse:1
@ 431 train 7.4823 , allloss: 7.9505, dt: 1234.46ms, fracRes: 0.0362, norm(attn): 0.1240, norm(output): 0.1572, norm(x): 0.1439, norm(y): 1.0003, norm:5.8328, tok/sec: 106177.80, flops:41.37, batch-reuse:1
@ 432 train 7.5407 , allloss: 8.0652, dt: 1200.85ms, fracRes: 0.0371, norm(attn): 0.1279, norm(output): 0.1572, norm(x): 0.1455, norm(y): 1.0003, norm:18.8891, tok/sec: 109149.63, flops:42.52, batch-reuse:1
@ 433 train 7.5712 , allloss: 8.3242, dt: 1185.07ms, fracRes: 0.0375, norm(attn): 0.1328, norm(output): 0.1562, norm(x): 0.1426, norm(y): 1.0003, norm:33.9194, tok/sec: 110602.41, flops:43.09, batch-reuse:1
@ 434 train 7.5577 , allloss: 8.1310, dt: 1178.86ms, fracRes: 0.0438, norm(attn): 0.1377, norm(output): 0.1592, norm(x): 0.1462, norm(y): 1.0004, norm:8.2029, tok/sec: 111185.23, flops:43.32, batch-reuse:1
@ 435 train 7.5239 , allloss: 8.0540, dt: 1184.45ms, fracRes: 0.0466, norm(attn): 0.1377, norm(output): 0.1602, norm(x): 0.1461, norm(y): 1.0004, norm:16.3039, tok/sec: 110660.36, flops:43.11, batch-reuse:1
@ 436 train 7.6058 , allloss: 8.1336, dt: 1193.87ms, fracRes: 0.0435, norm(attn): 0.1416, norm(output): 0.1621, norm(x): 0.1476, norm(y): 1.0004, norm:5.3368, tok/sec: 109787.65, flops:42.77, batch-reuse:1
@ 437 train 7.5282 , allloss: 8.0633, dt: 1214.31ms, fracRes: 0.0450, norm(attn): 0.1445, norm(output): 0.1611, norm(x): 0.1466, norm(y): 1.0004, norm:14.6555, tok/sec: 107939.77, flops:42.05, batch-reuse:1
@ 438 train 7.6338 , allloss: 8.1907, dt: 1235.55ms, fracRes: 0.0430, norm(attn): 0.1416, norm(output): 0.1572, norm(x): 0.1445, norm(y): 1.0003, norm:10.3950, tok/sec: 106083.73, flops:41.33, batch-reuse:1
@ 439 train 7.4195 , allloss: 8.0090, dt: 1238.23ms, fracRes: 0.0433, norm(attn): 0.1416, norm(output): 0.1562, norm(x): 0.1423, norm(y): 1.0003, norm:7.3185, tok/sec: 105854.24, flops:41.24, batch-reuse:1
@ 440 train 7.3962 , allloss: 8.0331, dt: 1236.61ms, fracRes: 0.0462, norm(attn): 0.1406, norm(output): 0.1553, norm(x): 0.1407, norm(y): 1.0002, norm:4.8281, tok/sec: 105993.29, flops:41.29, batch-reuse:1
@ 441 train 7.4432 , allloss: 8.1429, dt: 1219.50ms, fracRes: 0.0462, norm(attn): 0.1416, norm(output): 0.1553, norm(x): 0.1398, norm(y): 1.0002, norm:10.9970, tok/sec: 107480.55, flops:41.87, batch-reuse:1
@ 442 train 7.5213 , allloss: 8.1857, dt: 1196.39ms, fracRes: 0.0428, norm(attn): 0.1416, norm(output): 0.1553, norm(x): 0.1394, norm(y): 1.0002, norm:10.8608, tok/sec: 109556.45, flops:42.68, batch-reuse:1
@ 443 train 7.5455 , allloss: 8.2435, dt: 1210.59ms, fracRes: 0.0417, norm(attn): 0.1465, norm(output): 0.1553, norm(x): 0.1388, norm(y): 1.0002, norm:7.4131, tok/sec: 108271.29, flops:42.18, batch-reuse:1
@ 444 train 7.5033 , allloss: 8.1748, dt: 1210.16ms, fracRes: 0.0418, norm(attn): 0.1426, norm(output): 0.1523, norm(x): 0.1384, norm(y): 1.0002, norm:5.5310, tok/sec: 108309.58, flops:42.20, batch-reuse:1
@ 445 train 7.4164 , allloss: 8.1457, dt: 1218.57ms, fracRes: 0.0455, norm(attn): 0.1406, norm(output): 0.1523, norm(x): 0.1373, norm(y): 1.0002, norm:12.0661, tok/sec: 107562.40, flops:41.91, batch-reuse:1
@ 446 train 7.4880 , allloss: 8.1604, dt: 1195.67ms, fracRes: 0.0413, norm(attn): 0.1367, norm(output): 0.1514, norm(x): 0.1371, norm(y): 1.0002, norm:17.9788, tok/sec: 109622.12, flops:42.71, batch-reuse:1
@ 447 train 7.4449 , allloss: 8.1714, dt: 1215.54ms, fracRes: 0.0405, norm(attn): 0.1348, norm(output): 0.1504, norm(x): 0.1364, norm(y): 1.0003, norm:4.8266, tok/sec: 107830.63, flops:42.01, batch-reuse:1
@ 448 train 7.4767 , allloss: 8.2264, dt: 1219.86ms, fracRes: 0.0349, norm(attn): 0.1387, norm(output): 0.1484, norm(x): 0.1363, norm(y): 1.0003, norm:17.5074, tok/sec: 107448.03, flops:41.86, batch-reuse:1
@ 449 train 7.4868 , allloss: 8.1481, dt: 1240.21ms, fracRes: 0.0322, norm(attn): 0.1348, norm(output): 0.1475, norm(x): 0.1355, norm(y): 1.0003, norm:30.1922, tok/sec: 105684.96, flops:41.17, batch-reuse:1
@ 450 train 7.4853 , allloss: 8.1724, dt: 1228.41ms, fracRes: 0.0313, norm(attn): 0.1328, norm(output): 0.1475, norm(x): 0.1356, norm(y): 1.0003, norm:11.9030, tok/sec: 106700.76, flops:41.57, batch-reuse:1
@ 451 train 7.5046 , allloss: 8.3052, dt: 1216.15ms, fracRes: 0.0426, norm(attn): 0.1270, norm(output): 0.1504, norm(x): 0.1357, norm(y): 1.0004, norm:24.5728, tok/sec: 107776.62, flops:41.99, batch-reuse:1
@ 452 train 7.5135 , allloss: 8.3322, dt: 1221.81ms, fracRes: 0.0550, norm(attn): 0.1260, norm(output): 0.1504, norm(x): 0.1355, norm(y): 1.0004, norm:14.0022, tok/sec: 107276.69, flops:41.79, batch-reuse:1
@ 453 train 7.5058 , allloss: 8.2375, dt: 1186.71ms, fracRes: 0.0569, norm(attn): 0.1235, norm(output): 0.1484, norm(x): 0.1352, norm(y): 1.0004, norm:16.8055, tok/sec: 110450.24, flops:43.03, batch-reuse:1
@ 454 train 7.4992 , allloss: 8.1848, dt: 1188.31ms, fracRes: 0.0629, norm(attn): 0.1226, norm(output): 0.1504, norm(x): 0.1360, norm(y): 1.0005, norm:15.3701, tok/sec: 110301.15, flops:42.97, batch-reuse:1
@ 455 train 7.5477 , allloss: 8.2153, dt: 1195.46ms, fracRes: 0.0755, norm(attn): 0.1230, norm(output): 0.1504, norm(x): 0.1372, norm(y): 1.0006, norm:12.0955, tok/sec: 109641.69, flops:42.72, batch-reuse:1
@ 456 train 7.4658 , allloss: 8.1486, dt: 1226.52ms, fracRes: 0.0488, norm(attn): 0.1235, norm(output): 0.1504, norm(x): 0.1368, norm(y): 1.0006, norm:8.9095, tok/sec: 106865.36, flops:41.63, batch-reuse:1
@ 457 train 7.5914 , allloss: 8.3212, dt: 1193.26ms, fracRes: 0.0273, norm(attn): 0.1260, norm(output): 0.1494, norm(x): 0.1350, norm(y): 1.0005, norm:14.7343, tok/sec: 109843.63, flops:42.80, batch-reuse:1
@ 458 train 7.5620 , allloss: 8.3033, dt: 1205.96ms, fracRes: 0.0272, norm(attn): 0.1260, norm(output): 0.1465, norm(x): 0.1337, norm(y): 1.0005, norm:8.9624, tok/sec: 108686.49, flops:42.34, batch-reuse:1
@ 459 train 7.4553 , allloss: 8.1734, dt: 1208.13ms, fracRes: 0.0378, norm(attn): 0.1260, norm(output): 0.1465, norm(x): 0.1341, norm(y): 1.0005, norm:11.8934, tok/sec: 108491.24, flops:42.27, batch-reuse:1
@ 460 train 7.4281 , allloss: 8.1060, dt: 1233.31ms, fracRes: 0.0434, norm(attn): 0.1260, norm(output): 0.1465, norm(x): 0.1344, norm(y): 1.0006, norm:10.5356, tok/sec: 106276.85, flops:41.41, batch-reuse:1
@ 461 train 7.4499 , allloss: 8.1963, dt: 1203.10ms, fracRes: 0.0314, norm(attn): 0.1270, norm(output): 0.1465, norm(x): 0.1333, norm(y): 1.0006, norm:5.1989, tok/sec: 108945.06, flops:42.44, batch-reuse:1
@ 462 train 7.4905 , allloss: 8.2088, dt: 1241.95ms, fracRes: 0.0288, norm(attn): 0.1260, norm(output): 0.1475, norm(x): 0.1342, norm(y): 1.0006, norm:6.2259, tok/sec: 105537.50, flops:41.12, batch-reuse:1
@ 463 train 7.4817 , allloss: 8.0349, dt: 1240.09ms, fracRes: 0.0386, norm(attn): 0.1230, norm(output): 0.1514, norm(x): 0.1383, norm(y): 1.0007, norm:5.9648, tok/sec: 105695.83, flops:41.18, batch-reuse:1
@ 464 train 7.4127 , allloss: 7.9257, dt: 1224.92ms, fracRes: 0.0395, norm(attn): 0.1191, norm(output): 0.1523, norm(x): 0.1393, norm(y): 1.0007, norm:8.5927, tok/sec: 107004.72, flops:41.69, batch-reuse:1
@ 465 train 7.4361 , allloss: 8.0338, dt: 1239.37ms, fracRes: 0.0353, norm(attn): 0.1250, norm(output): 0.1514, norm(x): 0.1396, norm(y): 1.0008, norm:22.5812, tok/sec: 105757.21, flops:41.20, batch-reuse:1
@ 466 train 7.4549 , allloss: 7.9497, dt: 1218.71ms, fracRes: 0.0510, norm(attn): 0.1177, norm(output): 0.1553, norm(x): 0.1430, norm(y): 1.0008, norm:6.7497, tok/sec: 107549.71, flops:41.90, batch-reuse:1
@ 467 train 7.4975 , allloss: 7.9381, dt: 1220.85ms, fracRes: 0.0790, norm(attn): 0.1143, norm(output): 0.1562, norm(x): 0.1430, norm(y): 1.0008, norm:32.1820, tok/sec: 107361.33, flops:41.83, batch-reuse:1
@ 468 train 7.4171 , allloss: 7.8305, dt: 1220.96ms, fracRes: 0.1022, norm(attn): 0.1113, norm(output): 0.1562, norm(x): 0.1443, norm(y): 1.0008, norm:24.8361, tok/sec: 107351.16, flops:41.82, batch-reuse:1
@ 469 train 7.3627 , allloss: 7.7682, dt: 1213.91ms, fracRes: 0.1194, norm(attn): 0.1113, norm(output): 0.1611, norm(x): 0.1464, norm(y): 1.0009, norm:15.8799, tok/sec: 107974.92, flops:42.07, batch-reuse:1
@ 470 train 7.4373 , allloss: 7.9582, dt: 1226.68ms, fracRes: 0.0723, norm(attn): 0.1177, norm(output): 0.1572, norm(x): 0.1441, norm(y): 1.0008, norm:11.3848, tok/sec: 106851.26, flops:41.63, batch-reuse:1
@ 471 train 7.3332 , allloss: 8.0703, dt: 1217.69ms, fracRes: 0.0479, norm(attn): 0.1260, norm(output): 0.1553, norm(x): 0.1397, norm(y): 1.0007, norm:21.5939, tok/sec: 107639.90, flops:41.94, batch-reuse:1
@ 472 train 7.4280 , allloss: 8.1448, dt: 1216.74ms, fracRes: 0.0483, norm(attn): 0.1250, norm(output): 0.1553, norm(x): 0.1404, norm(y): 1.0006, norm:12.5306, tok/sec: 107723.97, flops:41.97, batch-reuse:1
@ 473 train 7.4274 , allloss: 8.0737, dt: 1191.96ms, fracRes: 0.0537, norm(attn): 0.1250, norm(output): 0.1562, norm(x): 0.1433, norm(y): 1.0007, norm:13.8104, tok/sec: 109963.43, flops:42.84, batch-reuse:1
@ 474 train 7.3741 , allloss: 7.9524, dt: 1225.81ms, fracRes: 0.0578, norm(attn): 0.1245, norm(output): 0.1572, norm(x): 0.1448, norm(y): 1.0006, norm:13.8613, tok/sec: 106926.72, flops:41.66, batch-reuse:1
@ 475 train 7.3602 , allloss: 7.9217, dt: 1252.73ms, fracRes: 0.0647, norm(attn): 0.1211, norm(output): 0.1572, norm(x): 0.1441, norm(y): 1.0006, norm:12.4897, tok/sec: 104629.06, flops:40.76, batch-reuse:1
@ 476 train 7.3643 , allloss: 7.9060, dt: 1233.00ms, fracRes: 0.0706, norm(attn): 0.1182, norm(output): 0.1592, norm(x): 0.1451, norm(y): 1.0007, norm:7.8544, tok/sec: 106303.34, flops:41.42, batch-reuse:1
@ 477 train 7.4311 , allloss: 7.9763, dt: 1203.23ms, fracRes: 0.0670, norm(attn): 0.1182, norm(output): 0.1582, norm(x): 0.1453, norm(y): 1.0007, norm:6.0156, tok/sec: 108933.81, flops:42.44, batch-reuse:1
@ 478 train 7.4227 , allloss: 7.9500, dt: 1215.04ms, fracRes: 0.0663, norm(attn): 0.1182, norm(output): 0.1611, norm(x): 0.1474, norm(y): 1.0008, norm:12.4718, tok/sec: 107874.45, flops:42.03, batch-reuse:1
@ 479 train 7.5090 , allloss: 8.0342, dt: 1238.16ms, fracRes: 0.0632, norm(attn): 0.1177, norm(output): 0.1611, norm(x): 0.1468, norm(y): 1.0007, norm:5.0952, tok/sec: 105860.30, flops:41.24, batch-reuse:1
@ 480 train 7.3273 , allloss: 7.8458, dt: 1218.54ms, fracRes: 0.0643, norm(attn): 0.1167, norm(output): 0.1572, norm(x): 0.1443, norm(y): 1.0007, norm:5.5486, tok/sec: 107565.07, flops:41.91, batch-reuse:1
@ 481 train 7.4011 , allloss: 7.9667, dt: 1193.32ms, fracRes: 0.0588, norm(attn): 0.1167, norm(output): 0.1553, norm(x): 0.1417, norm(y): 1.0007, norm:12.4386, tok/sec: 109837.99, flops:42.79, batch-reuse:1
@ 482 train 7.3723 , allloss: 7.8735, dt: 1211.08ms, fracRes: 0.0699, norm(attn): 0.1167, norm(output): 0.1572, norm(x): 0.1425, norm(y): 1.0008, norm:8.5440, tok/sec: 108227.04, flops:42.17, batch-reuse:1
@ 483 train 7.4406 , allloss: 7.9355, dt: 1185.01ms, fracRes: 0.0715, norm(attn): 0.1172, norm(output): 0.1572, norm(x): 0.1423, norm(y): 1.0008, norm:7.2151, tok/sec: 110608.38, flops:43.09, batch-reuse:1
@ 484 train 7.3182 , allloss: 7.7550, dt: 1187.66ms, fracRes: 0.0824, norm(attn): 0.1177, norm(output): 0.1582, norm(x): 0.1432, norm(y): 1.0008, norm:4.1496, tok/sec: 110361.64, flops:43.00, batch-reuse:1
@ 485 train 7.2844 , allloss: 7.7000, dt: 1201.87ms, fracRes: 0.0845, norm(attn): 0.1182, norm(output): 0.1572, norm(x): 0.1435, norm(y): 1.0009, norm:7.2099, tok/sec: 109056.33, flops:42.49, batch-reuse:1
@ 486 train 7.4570 , allloss: 7.8471, dt: 1199.99ms, fracRes: 0.0931, norm(attn): 0.1206, norm(output): 0.1592, norm(x): 0.1454, norm(y): 1.0010, norm:13.8911, tok/sec: 109227.23, flops:42.55, batch-reuse:1
@ 487 train 7.4435 , allloss: 7.8488, dt: 1208.74ms, fracRes: 0.0858, norm(attn): 0.1216, norm(output): 0.1562, norm(x): 0.1426, norm(y): 1.0009, norm:7.1985, tok/sec: 108436.50, flops:42.25, batch-reuse:1
@ 488 train 7.3199 , allloss: 7.7392, dt: 1234.10ms, fracRes: 0.0783, norm(attn): 0.1191, norm(output): 0.1553, norm(x): 0.1410, norm(y): 1.0009, norm:14.9691, tok/sec: 106208.71, flops:41.38, batch-reuse:1
@ 489 train 7.3361 , allloss: 7.7208, dt: 1191.22ms, fracRes: 0.0847, norm(attn): 0.1240, norm(output): 0.1562, norm(x): 0.1413, norm(y): 1.0009, norm:2.9957, tok/sec: 110032.10, flops:42.87, batch-reuse:1
@ 490 train 7.3392 , allloss: 7.7166, dt: 1189.06ms, fracRes: 0.0841, norm(attn): 0.1235, norm(output): 0.1553, norm(x): 0.1397, norm(y): 1.0009, norm:5.7551, tok/sec: 110231.15, flops:42.95, batch-reuse:1
@ 491 train 7.4579 , allloss: 7.8695, dt: 1198.89ms, fracRes: 0.0692, norm(attn): 0.1191, norm(output): 0.1533, norm(x): 0.1381, norm(y): 1.0009, norm:20.4050, tok/sec: 109327.58, flops:42.59, batch-reuse:1
@ 492 train 7.4995 , allloss: 7.9742, dt: 1232.70ms, fracRes: 0.0570, norm(attn): 0.1172, norm(output): 0.1465, norm(x): 0.1336, norm(y): 1.0007, norm:67.2613, tok/sec: 106329.54, flops:41.43, batch-reuse:1
@ 493 train 7.3699 , allloss: 7.7472, dt: 1175.83ms, fracRes: 0.0712, norm(attn): 0.1167, norm(output): 0.1504, norm(x): 0.1356, norm(y): 1.0008, norm:9.1939, tok/sec: 111471.84, flops:43.43, batch-reuse:1
@ 494 train 7.4036 , allloss: 7.7168, dt: 1192.05ms, fracRes: 0.1082, norm(attn): 0.1201, norm(output): 0.1562, norm(x): 0.1412, norm(y): 1.0010, norm:26.4825, tok/sec: 109954.75, flops:42.84, batch-reuse:1
@ 495 train 7.3235 , allloss: 7.6286, dt: 1191.27ms, fracRes: 0.1243, norm(attn): 0.1206, norm(output): 0.1562, norm(x): 0.1416, norm(y): 1.0010, norm:17.6102, tok/sec: 110027.13, flops:42.87, batch-reuse:1
@ 496 train 7.4338 , allloss: 7.7806, dt: 1219.62ms, fracRes: 0.0885, norm(attn): 0.1172, norm(output): 0.1553, norm(x): 0.1388, norm(y): 1.0008, norm:24.9271, tok/sec: 107469.14, flops:41.87, batch-reuse:1
@ 497 train 7.2868 , allloss: 7.6329, dt: 1245.95ms, fracRes: 0.0786, norm(attn): 0.1162, norm(output): 0.1543, norm(x): 0.1386, norm(y): 1.0007, norm:12.3513, tok/sec: 105198.22, flops:40.99, batch-reuse:1
@ 498 train 7.4805 , allloss: 7.8085, dt: 1236.47ms, fracRes: 0.0805, norm(attn): 0.1172, norm(output): 0.1562, norm(x): 0.1416, norm(y): 1.0008, norm:17.9154, tok/sec: 106004.57, flops:41.30, batch-reuse:1
@ 499 train 7.4765 , allloss: 7.8123, dt: 1201.91ms, fracRes: 0.0821, norm(attn): 0.1167, norm(output): 0.1562, norm(x): 0.1408, norm(y): 1.0007, norm:16.7238, tok/sec: 109052.70, flops:42.49, batch-reuse:1
@ 500 train 7.3410 , allloss: 7.7055, dt: 1217.97ms, fracRes: 0.0765, norm(attn): 0.1157, norm(output): 0.1523, norm(x): 0.1374, norm(y): 1.0007, norm:7.6115, tok/sec: 107615.50, flops:41.93, batch-reuse:1
@ 501 train 7.3299 , allloss: 7.6899, dt: 1240.57ms, fracRes: 0.0789, norm(attn): 0.1157, norm(output): 0.1533, norm(x): 0.1374, norm(y): 1.0007, norm:8.1749, tok/sec: 105654.86, flops:41.16, batch-reuse:1
@ 502 train 7.4191 , allloss: 7.7513, dt: 1223.09ms, fracRes: 0.0876, norm(attn): 0.1167, norm(output): 0.1553, norm(x): 0.1402, norm(y): 1.0007, norm:15.5929, tok/sec: 107164.40, flops:41.75, batch-reuse:1
@ 503 train 7.3691 , allloss: 7.6940, dt: 1188.19ms, fracRes: 0.0947, norm(attn): 0.1167, norm(output): 0.1553, norm(x): 0.1403, norm(y): 1.0007, norm:10.6208, tok/sec: 110312.30, flops:42.98, batch-reuse:1
@ 504 train 7.4776 , allloss: 7.8383, dt: 1224.26ms, fracRes: 0.0891, norm(attn): 0.1157, norm(output): 0.1514, norm(x): 0.1369, norm(y): 1.0005, norm:26.4289, tok/sec: 107061.90, flops:41.71, batch-reuse:1
@ 505 train 7.3991 , allloss: 7.8377, dt: 1246.56ms, fracRes: 0.0788, norm(attn): 0.1138, norm(output): 0.1465, norm(x): 0.1339, norm(y): 1.0004, norm:29.2992, tok/sec: 105146.86, flops:40.97, batch-reuse:1
@ 506 train 7.3206 , allloss: 7.7326, dt: 1211.90ms, fracRes: 0.0813, norm(attn): 0.1133, norm(output): 0.1484, norm(x): 0.1345, norm(y): 1.0004, norm:7.7869, tok/sec: 108154.12, flops:42.14, batch-reuse:1
@ 507 train 7.3740 , allloss: 7.7477, dt: 1179.61ms, fracRes: 0.0938, norm(attn): 0.1162, norm(output): 0.1504, norm(x): 0.1366, norm(y): 1.0005, norm:9.4237, tok/sec: 111114.53, flops:43.29, batch-reuse:1
@ 508 train 7.2856 , allloss: 7.6416, dt: 1187.33ms, fracRes: 0.1027, norm(attn): 0.1172, norm(output): 0.1533, norm(x): 0.1374, norm(y): 1.0006, norm:6.5634, tok/sec: 110392.29, flops:43.01, batch-reuse:1
@ 509 train 7.2973 , allloss: 7.6755, dt: 1200.01ms, fracRes: 0.0914, norm(attn): 0.1167, norm(output): 0.1523, norm(x): 0.1371, norm(y): 1.0005, norm:6.7640, tok/sec: 109226.01, flops:42.55, batch-reuse:1
@ 510 train 7.2527 , allloss: 7.6358, dt: 1203.27ms, fracRes: 0.0936, norm(attn): 0.1143, norm(output): 0.1504, norm(x): 0.1350, norm(y): 1.0004, norm:5.2119, tok/sec: 108930.01, flops:42.44, batch-reuse:1
@ 511 train 7.3338 , allloss: 7.7865, dt: 1238.29ms, fracRes: 0.0840, norm(attn): 0.1162, norm(output): 0.1465, norm(x): 0.1327, norm(y): 1.0003, norm:7.3195, tok/sec: 105849.58, flops:41.24, batch-reuse:1
@ 512 train 7.3018 , allloss: 7.8226, dt: 1229.53ms, fracRes: 0.0796, norm(attn): 0.1167, norm(output): 0.1416, norm(x): 0.1284, norm(y): 1.0003, norm:20.5268, tok/sec: 106603.56, flops:41.53, batch-reuse:1
@ 513 train 7.3884 , allloss: 8.0308, dt: 1179.90ms, fracRes: 0.0730, norm(attn): 0.1211, norm(output): 0.1406, norm(x): 0.1276, norm(y): 1.0002, norm:81.9006, tok/sec: 111087.12, flops:43.28, batch-reuse:1
@ 514 train 7.2811 , allloss: 7.7485, dt: 1197.24ms, fracRes: 0.0853, norm(attn): 0.1221, norm(output): 0.1416, norm(x): 0.1295, norm(y): 1.0003, norm:12.4402, tok/sec: 109478.57, flops:42.65, batch-reuse:1
@ 515 train 7.2402 , allloss: 7.6901, dt: 1211.40ms, fracRes: 0.0913, norm(attn): 0.1250, norm(output): 0.1416, norm(x): 0.1292, norm(y): 1.0003, norm:7.6139, tok/sec: 108199.12, flops:42.15, batch-reuse:1
@ 516 train 7.2582 , allloss: 7.7249, dt: 1204.41ms, fracRes: 0.0882, norm(attn): 0.1270, norm(output): 0.1426, norm(x): 0.1294, norm(y): 1.0003, norm:17.4213, tok/sec: 108826.66, flops:42.40, batch-reuse:1
@ 517 train 7.2543 , allloss: 7.7133, dt: 1200.49ms, fracRes: 0.0898, norm(attn): 0.1328, norm(output): 0.1465, norm(x): 0.1311, norm(y): 1.0003, norm:21.5549, tok/sec: 109182.50, flops:42.54, batch-reuse:1
@ 518 train 7.3008 , allloss: 7.7400, dt: 1201.98ms, fracRes: 0.1077, norm(attn): 0.1318, norm(output): 0.1455, norm(x): 0.1305, norm(y): 1.0002, norm:10.5901, tok/sec: 109046.36, flops:42.48, batch-reuse:1
@ 519 train 7.2714 , allloss: 7.7348, dt: 1201.41ms, fracRes: 0.1022, norm(attn): 0.1328, norm(output): 0.1436, norm(x): 0.1298, norm(y): 1.0002, norm:16.5081, tok/sec: 109098.60, flops:42.50, batch-reuse:1
@ 520 train 7.3099 , allloss: 7.7892, dt: 1247.70ms, fracRes: 0.0987, norm(attn): 0.1318, norm(output): 0.1416, norm(x): 0.1282, norm(y): 1.0001, norm:7.7999, tok/sec: 105050.94, flops:40.93, batch-reuse:1
@ 521 train 7.3783 , allloss: 7.8979, dt: 1219.73ms, fracRes: 0.0784, norm(attn): 0.1289, norm(output): 0.1416, norm(x): 0.1279, norm(y): 1.0001, norm:12.0568, tok/sec: 107460.11, flops:41.87, batch-reuse:1
@ 522 train 7.2332 , allloss: 7.8121, dt: 1204.09ms, fracRes: 0.0721, norm(attn): 0.1270, norm(output): 0.1396, norm(x): 0.1251, norm(y): 1.0001, norm:12.0269, tok/sec: 108855.94, flops:42.41, batch-reuse:1
@ 523 train 7.3243 , allloss: 7.9884, dt: 1196.81ms, fracRes: 0.0736, norm(attn): 0.1279, norm(output): 0.1396, norm(x): 0.1248, norm(y): 1.0000, norm:12.2466, tok/sec: 109517.78, flops:42.67, batch-reuse:1
@ 524 train 7.2836 , allloss: 7.9095, dt: 1228.22ms, fracRes: 0.0793, norm(attn): 0.1289, norm(output): 0.1387, norm(x): 0.1240, norm(y): 1.0000, norm:19.5215, tok/sec: 106717.27, flops:41.58, batch-reuse:1
@ 525 train 7.2531 , allloss: 7.9065, dt: 1201.73ms, fracRes: 0.0723, norm(attn): 0.1318, norm(output): 0.1396, norm(x): 0.1242, norm(y): 1.0000, norm:10.9704, tok/sec: 109069.06, flops:42.49, batch-reuse:1
@ 526 train 7.2938 , allloss: 7.8695, dt: 1207.22ms, fracRes: 0.0743, norm(attn): 0.1299, norm(output): 0.1387, norm(x): 0.1241, norm(y): 1.0000, norm:17.6772, tok/sec: 108573.71, flops:42.30, batch-reuse:1
@ 527 train 7.2963 , allloss: 7.9446, dt: 1194.26ms, fracRes: 0.0662, norm(attn): 0.1289, norm(output): 0.1377, norm(x): 0.1238, norm(y): 1.0001, norm:19.4821, tok/sec: 109751.85, flops:42.76, batch-reuse:1
@ 528 train 7.2547 , allloss: 7.9157, dt: 1213.03ms, fracRes: 0.0728, norm(attn): 0.1309, norm(output): 0.1357, norm(x): 0.1228, norm(y): 1.0000, norm:10.8125, tok/sec: 108053.08, flops:42.10, batch-reuse:1
@ 529 train 7.2130 , allloss: 7.7964, dt: 1233.30ms, fracRes: 0.0772, norm(attn): 0.1338, norm(output): 0.1387, norm(x): 0.1250, norm(y): 1.0000, norm:17.3318, tok/sec: 106277.51, flops:41.41, batch-reuse:1
@ 530 train 7.3243 , allloss: 7.9276, dt: 1212.08ms, fracRes: 0.0724, norm(attn): 0.1328, norm(output): 0.1387, norm(x): 0.1252, norm(y): 1.0000, norm:13.8854, tok/sec: 108138.16, flops:42.13, batch-reuse:1
@ 531 train 7.3004 , allloss: 7.9971, dt: 1227.20ms, fracRes: 0.0614, norm(attn): 0.1299, norm(output): 0.1387, norm(x): 0.1249, norm(y): 1.0001, norm:9.6044, tok/sec: 106805.36, flops:41.61, batch-reuse:1
@ 532 train 7.1369 , allloss: 7.8351, dt: 1213.23ms, fracRes: 0.0689, norm(attn): 0.1309, norm(output): 0.1357, norm(x): 0.1224, norm(y): 1.0000, norm:11.3063, tok/sec: 108035.31, flops:42.09, batch-reuse:1
@ 533 train 7.2128 , allloss: 7.9290, dt: 1226.07ms, fracRes: 0.0653, norm(attn): 0.1318, norm(output): 0.1357, norm(x): 0.1226, norm(y): 1.0000, norm:13.5971, tok/sec: 106903.81, flops:41.65, batch-reuse:1
@ 534 train 7.1667 , allloss: 7.7807, dt: 1181.33ms, fracRes: 0.0660, norm(attn): 0.1328, norm(output): 0.1348, norm(x): 0.1226, norm(y): 1.0000, norm:14.7769, tok/sec: 110952.67, flops:43.23, batch-reuse:1
@ 535 train 7.1889 , allloss: 7.9264, dt: 1209.59ms, fracRes: 0.0560, norm(attn): 0.1279, norm(output): 0.1357, norm(x): 0.1229, norm(y): 1.0001, norm:6.1397, tok/sec: 108360.77, flops:42.22, batch-reuse:1
@ 536 train 7.2063 , allloss: 7.9998, dt: 1228.10ms, fracRes: 0.0589, norm(attn): 0.1260, norm(output): 0.1348, norm(x): 0.1219, norm(y): 1.0001, norm:10.0938, tok/sec: 106727.54, flops:41.58, batch-reuse:1
@ 537 train 7.2207 , allloss: 7.9130, dt: 1216.25ms, fracRes: 0.0501, norm(attn): 0.1309, norm(output): 0.1338, norm(x): 0.1234, norm(y): 1.0001, norm:13.7137, tok/sec: 107767.34, flops:41.99, batch-reuse:1
@ 538 train 7.1021 , allloss: 7.7245, dt: 1196.62ms, fracRes: 0.0564, norm(attn): 0.1328, norm(output): 0.1367, norm(x): 0.1236, norm(y): 1.0001, norm:17.2148, tok/sec: 109535.43, flops:42.68, batch-reuse:1
@ 539 train 7.2417 , allloss: 7.9176, dt: 1214.84ms, fracRes: 0.0555, norm(attn): 0.1328, norm(output): 0.1357, norm(x): 0.1241, norm(y): 1.0001, norm:20.0821, tok/sec: 107892.72, flops:42.04, batch-reuse:1
@ 540 train 7.2527 , allloss: 7.9385, dt: 1221.63ms, fracRes: 0.0485, norm(attn): 0.1318, norm(output): 0.1367, norm(x): 0.1241, norm(y): 1.0001, norm:8.5410, tok/sec: 107292.39, flops:41.80, batch-reuse:1
@ 541 train 7.3181 , allloss: 7.9340, dt: 1199.27ms, fracRes: 0.0421, norm(attn): 0.1318, norm(output): 0.1367, norm(x): 0.1241, norm(y): 1.0001, norm:42.6558, tok/sec: 109292.98, flops:42.58, batch-reuse:1
@ 542 train 7.3683 , allloss: 8.0062, dt: 1194.12ms, fracRes: 0.0430, norm(attn): 0.1328, norm(output): 0.1357, norm(x): 0.1240, norm(y): 1.0001, norm:31.9469, tok/sec: 109764.26, flops:42.76, batch-reuse:1
@ 543 train 7.3821 , allloss: 8.1567, dt: 1214.65ms, fracRes: 0.0460, norm(attn): 0.1318, norm(output): 0.1348, norm(x): 0.1241, norm(y): 1.0001, norm:13.0622, tok/sec: 107909.60, flops:42.04, batch-reuse:1
@ 544 train 7.2613 , allloss: 8.1031, dt: 1216.92ms, fracRes: 0.0471, norm(attn): 0.1279, norm(output): 0.1377, norm(x): 0.1244, norm(y): 1.0001, norm:21.8382, tok/sec: 107707.80, flops:41.96, batch-reuse:1
@ 545 train 7.2126 , allloss: 7.9559, dt: 1219.64ms, fracRes: 0.0441, norm(attn): 0.1260, norm(output): 0.1338, norm(x): 0.1238, norm(y): 1.0001, norm:16.0556, tok/sec: 107467.65, flops:41.87, batch-reuse:1
@ 546 train 7.1929 , allloss: 7.9330, dt: 1205.21ms, fracRes: 0.0379, norm(attn): 0.1260, norm(output): 0.1357, norm(x): 0.1242, norm(y): 1.0001, norm:18.2484, tok/sec: 108754.45, flops:42.37, batch-reuse:1
@ 547 train 7.3339 , allloss: 8.1611, dt: 1209.54ms, fracRes: 0.0370, norm(attn): 0.1226, norm(output): 0.1377, norm(x): 0.1249, norm(y): 1.0001, norm:9.4457, tok/sec: 108365.41, flops:42.22, batch-reuse:1
@ 548 train 7.3196 , allloss: 8.1016, dt: 1206.83ms, fracRes: 0.0351, norm(attn): 0.1250, norm(output): 0.1377, norm(x): 0.1260, norm(y): 1.0001, norm:15.1491, tok/sec: 108608.24, flops:42.31, batch-reuse:1
@ 549 train 7.3175 , allloss: 8.0886, dt: 1173.38ms, fracRes: 0.0371, norm(attn): 0.1230, norm(output): 0.1377, norm(x): 0.1256, norm(y): 1.0001, norm:16.4537, tok/sec: 111704.98, flops:43.52, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4141, 0.5859, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3242, 0.3750, 0.3008, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2070, 0.1807, 0.4492, 0.1641, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1689, 0.1807, 0.2578, 0.2656, 0.1270, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1572, 0.2314, 0.3145, 0.1582, 0.0625, 0.0767, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1416, 0.1523, 0.1123, 0.1455, 0.1436, 0.1885, 0.1172, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1216, 0.2080, 0.1289, 0.1191, 0.1348, 0.1367, 0.1045, 0.0474, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1226, 0.0889, 0.2021, 0.0938, 0.1299, 0.0603, 0.0742, 0.1885, 0.0408, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0957, 0.1030, 0.0820, 0.0806, 0.1245, 0.0918, 0.1216, 0.1069, 0.0552, 0.1387, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0742, 0.0845, 0.1445, 0.1982, 0.0256, 0.0216, 0.0508, 0.2695, 0.0105, 0.0811, 0.0413, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0635, 0.0684, 0.0972, 0.0688, 0.1201, 0.0825, 0.1016, 0.0535, 0.0874, 0.0796, 0.0986, 0.0791, 0.0000, 0.0000, 0.0000],
        [0.0781, 0.1045, 0.0679, 0.0918, 0.0588, 0.0588, 0.0498, 0.0933, 0.0381, 0.1172, 0.0620, 0.1025, 0.0776, 0.0000, 0.0000],
        [0.0752, 0.0549, 0.0933, 0.0654, 0.0806, 0.0425, 0.0537, 0.1279, 0.0262, 0.0688, 0.0571, 0.0986, 0.0781, 0.0781, 0.0000],
        [0.0630, 0.0742, 0.0684, 0.0640, 0.0386, 0.0469, 0.0588, 0.0923, 0.0447, 0.0625, 0.0413, 0.1250, 0.1172, 0.0315, 0.0718]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0224,  0.0318, -0.0193,  ...,  0.0321,  0.0208, -0.0253],
        [-0.0345,  0.0138, -0.0338,  ...,  0.0138, -0.0100,  0.0222],
        [-0.0642, -0.0010, -0.0373,  ..., -0.0548,  0.0030, -0.0111],
        ...,
        [-0.0329,  0.0091,  0.0032,  ...,  0.0069, -0.0088,  0.0167],
        [ 0.0233,  0.0121,  0.0306,  ...,  0.0050, -0.0162,  0.0102],
        [-0.0158,  0.0103, -0.0067,  ..., -0.0157, -0.0107, -0.0290]], device='cuda:0', requires_grad=True)
K: tensor([ 0.6758,  0.6094,  0.5195,  1.2344, -0.0493,  0.3438,  0.0410,  0.8633, -0.2080, -0.5078, -0.3809, -1.7812,  0.1680, -0.7461,  0.1895, -0.1504,  0.0344,  0.3848,  0.0801, -0.3105, -0.8984, -1.2031, -0.5703, -0.9727, -0.1543, -0.8008,  0.4102,  1.2266,  0.7695, -0.1318, -1.0000, -0.0645,
        -0.2715, -0.3945,  1.4297, -0.1631,  0.4023, -0.0063, -0.0481,  0.3418,  0.6367, -0.8867, -0.1514, -0.5742, -0.1895, -0.5430, -0.0393, -0.5742, -0.2061,  0.3594, -1.1328,  0.0518,  0.1504,  0.4648, -0.5859,  0.4688, -0.3945, -0.0503, -0.5391,  0.1226, -0.3789,  0.3086,  0.3242, -1.3281],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0084,  0.0230,  0.0014,  ..., -0.0139, -0.0100, -0.0054],
        [ 0.0409,  0.0136,  0.0235,  ...,  0.0018, -0.0031, -0.0031],
        [-0.0031, -0.0108,  0.0018,  ...,  0.0317, -0.0053,  0.0141],
        ...,
        [-0.0014,  0.0213, -0.0095,  ...,  0.0119, -0.0453, -0.0227],
        [ 0.0294, -0.0143,  0.0103,  ...,  0.0102,  0.0349, -0.0183],
        [ 0.0243,  0.0020, -0.0210,  ..., -0.0096,  0.0002,  0.0283]], device='cuda:0', requires_grad=True)
Q: tensor([     0.7266,      0.0845,      0.0011,     -0.2158,     -0.7578,     -0.4961,      0.9531,      0.4922,     -0.6406,      0.7461,      0.1875,     -0.4844,     -0.6641,     -0.7656,      0.2812,      0.5430,     -0.2100,      0.7773,      0.4590,     -0.3652,     -0.3438,      0.6953,
             1.0391,      0.2295,      0.5586,      0.0811,     -0.2373,      0.2031,     -0.1338,      0.1709,     -0.5352,     -0.4824,      0.9336,      0.3867,      0.5664,      0.3184,      0.4609,     -0.7578,     -0.5391,     -0.6953,     -0.4902,      0.0090,     -0.2637,     -0.0291,
             0.4883,     -1.2734,     -0.5078,     -0.2402,     -1.0234,     -0.0908,      0.0293,      0.0674,     -0.9727,      0.3125,     -0.4824,      0.2578,      0.5273,      0.4590,      0.5469,     -0.7227,      1.1484,     -0.3965,      0.4492,      0.3262], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.3477,     -0.2695,      0.1396,      0.2305,      0.3965,      0.7031,     -0.4512,     -0.0811,      0.2061,      0.8281,      0.3672,     -0.0718,      0.5859,      0.4453],
        [     0.0000,      0.1445,     -0.0796,     -0.2275,      0.3418,      0.8242,      0.2051,     -0.5430,     -0.2832,      0.5234,      0.3262,     -0.1855,     -0.0889,     -0.2754,      0.0337],
        [     0.0000,     -0.1357,      0.7734,     -0.2324,     -0.1162,     -0.6953,      0.1250,     -0.1074,     -0.2559,      0.2871,      0.0623,      0.0569,      0.0425,      0.2080,      1.0156],
        [     0.0000,      0.0659,      0.4219,      0.4492,     -0.2891,     -0.6055,     -0.8906,      0.9961,     -1.0938,     -0.2871,     -0.4609,      0.1118,      0.1299,      0.0251,     -1.1641],
        [     0.0000,      0.3887,      0.6953,      0.0100,     -0.9219,     -0.7148,     -0.8945,      0.6602,     -1.2500,      0.3438,     -0.0118,      0.1982,      0.1089,     -0.2305,     -0.4961],
        [     0.0000,      0.0752,     -0.2295,      0.0261,      0.0121,      0.2852,     -0.1885,     -0.0532,     -0.1572,      0.1367,      0.7578,     -0.1719,     -0.1855,      0.2871,      1.0391],
        [     0.0000,      0.5352,      0.0583,     -0.0212,      0.1001,      0.1157,     -0.1494,     -0.9414,      0.1729,     -0.0583,      0.3535,      0.2832,      0.1104,     -0.1787,      0.4355],
        [     0.0000,     -0.3184,      0.5000,     -0.2695,      0.0571,     -0.7070,     -0.4980,      0.4297,     -1.1016,      0.3340,     -0.4492,      0.1504,      0.2285,      0.0001,     -0.1553],
        [     0.0000,      0.0718,     -0.1572,     -0.1729,      0.2617,     -0.0403,      0.2412,      0.1113,     -0.5508,      0.3730,      0.0239,     -0.1074,     -0.1562,     -0.0825,     -0.3379],
        [     0.0000,      0.1279,      0.6641,      0.9805,     -1.0625,     -1.2344,     -0.3789,      1.2891,     -1.9531,      0.0879,     -0.5859,      1.1016,      0.8242,     -0.8594,     -0.1611],
        [     0.0000,      0.0747,      0.4277,      0.0786,      0.6406,      0.2617,      0.4688,     -0.1729,      0.3203,      0.2227,      0.4395,      0.2178,      0.4219,      0.4043,      0.5312],
        [     0.0000,      0.2871,     -0.1455,      0.1562,     -0.2852,     -0.2871,     -0.4531,      0.1738,     -0.7188,      0.4023,     -0.2334,      0.2695,     -0.0082,     -0.5469,     -0.5117],
        [     0.0000,     -0.3145,      0.2148,     -0.1377,      0.0679,     -0.5703,     -0.3340,      0.5312,     -1.0547,     -0.0869,     -0.2754,      0.2715,      0.0396,      0.0408,     -0.0981],
        [     0.0000,      0.1602,      0.0830,      0.0148,     -0.4922,     -0.2969,     -0.0674,      0.3809,     -0.3438,     -0.0077,     -0.4238,      0.6836,      0.6211,     -0.6914,      0.1299]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5796],
        [0.3421],
        [0.1672],
        [0.3660],
        [0.2984],
        [0.1513],
        [0.0704],
        [0.1267],
        [0.0939],
        [0.1150],
        [0.0534],
        [0.0588],
        [0.0794],
        [0.0806]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2598, 0.7383, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3828, 0.4180, 0.1992, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1807, 0.2812, 0.1206, 0.4180, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0850, 0.4121, 0.3965, 0.0967, 0.0101, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1270, 0.3730, 0.2695, 0.1543, 0.0315, 0.0459, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1230, 0.2041, 0.1582, 0.2676, 0.0459, 0.1123, 0.0884, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1182, 0.1060, 0.1108, 0.1660, 0.1182, 0.1079, 0.1689, 0.1035, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0991, 0.1846, 0.2451, 0.1436, 0.0259, 0.0520, 0.0236, 0.1875, 0.0383, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0574, 0.1191, 0.0684, 0.0708, 0.1426, 0.1836, 0.0928, 0.0374, 0.1240, 0.1045, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0581, 0.2012, 0.2197, 0.0781, 0.0029, 0.0054, 0.0044, 0.2217, 0.0032, 0.2012, 0.0045, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0586, 0.0315, 0.0258, 0.0781, 0.1099, 0.1089, 0.1143, 0.0250, 0.1963, 0.0732, 0.1069, 0.0708, 0.0000, 0.0000, 0.0000],
        [0.0500, 0.1133, 0.0527, 0.0801, 0.0991, 0.1035, 0.0845, 0.0332, 0.1089, 0.0610, 0.0864, 0.0840, 0.0435, 0.0000, 0.0000],
        [0.0535, 0.1787, 0.1738, 0.0718, 0.0069, 0.0146, 0.0078, 0.1709, 0.0087, 0.1621, 0.0137, 0.0505, 0.0747, 0.0120, 0.0000],
        [0.0713, 0.1201, 0.1040, 0.0693, 0.0298, 0.0449, 0.0281, 0.0825, 0.0444, 0.1201, 0.0405, 0.0535, 0.0608, 0.0469, 0.0840]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0224,  0.0318, -0.0193,  ...,  0.0321,  0.0208, -0.0253],
        [-0.0345,  0.0138, -0.0338,  ...,  0.0138, -0.0100,  0.0222],
        [-0.0642, -0.0010, -0.0373,  ..., -0.0548,  0.0030, -0.0111],
        ...,
        [-0.0329,  0.0091,  0.0032,  ...,  0.0069, -0.0088,  0.0167],
        [ 0.0233,  0.0121,  0.0306,  ...,  0.0050, -0.0162,  0.0102],
        [-0.0158,  0.0103, -0.0067,  ..., -0.0157, -0.0107, -0.0290]], device='cuda:0', requires_grad=True)
K: tensor([ 0.5625, -0.1865,  0.2246,  0.6328,  0.2002,  0.7500, -1.1484,  1.1250, -0.6367, -0.4180, -0.6133, -0.6953, -0.6484,  0.1572,  0.1245,  0.4688,  0.4453, -0.0034,  0.2656, -0.8281, -1.1250, -0.4062,  0.0071, -0.4512,  0.5898, -0.5039,  0.7930,  0.4395,  1.0312, -1.3047, -1.4609, -0.1211,
        -0.1895, -0.4746, -0.6797, -0.0535,  0.8672,  0.6445,  1.0703, -0.7031,  0.8828, -0.4980, -1.2969,  0.2363, -0.4707, -0.6562, -0.6992, -0.0605,  0.2207,  1.0625, -0.7305, -0.6445,  0.5742,  0.3086,  1.4531, -0.1113, -0.1245, -0.4023, -0.1250,  0.4980, -0.3242,  0.0197,  0.3633, -0.2637],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0084,  0.0230,  0.0014,  ..., -0.0139, -0.0100, -0.0054],
        [ 0.0409,  0.0136,  0.0235,  ...,  0.0018, -0.0031, -0.0031],
        [-0.0031, -0.0108,  0.0018,  ...,  0.0317, -0.0053,  0.0141],
        ...,
        [-0.0014,  0.0213, -0.0095,  ...,  0.0119, -0.0453, -0.0227],
        [ 0.0294, -0.0143,  0.0103,  ...,  0.0102,  0.0349, -0.0183],
        [ 0.0243,  0.0020, -0.0210,  ..., -0.0096,  0.0002,  0.0283]], device='cuda:0', requires_grad=True)
Q: tensor([-0.2432, -0.9062,  0.8906, -0.8789,  0.7344,  0.6602,  0.0461,  1.1797,  1.1641, -0.0579, -0.6289,  0.6133, -0.4785,  0.3438, -0.5938,  0.5469,  1.1641,  1.3750, -0.6055,  0.7852, -1.1094, -1.1719,  0.5273, -0.4961, -0.4707,  0.0559, -0.0364, -0.3379, -0.3633, -0.5234,  0.1982, -0.3496,
         0.0327,  0.8398, -0.2520,  0.3340, -0.6328, -0.1875, -0.3770, -0.2773, -0.3750, -0.6484, -0.9453, -0.5742,  0.3203, -0.2344,  0.5391,  0.6211,  0.5586, -0.9766, -0.0991,  0.2012, -0.1206,  0.8125,  0.1328, -0.0322, -0.1855,  0.0430, -0.4258, -0.1143,  0.9336, -0.5781, -0.0535, -0.2637],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      1.0469,     -0.0815,     -0.1045,      0.8125,      1.2188,      0.7148,     -0.5820,      0.4551,      0.4355,      0.7266,     -0.2334,     -0.5820,      0.7578,      0.1572],
        [     0.0000,      0.0918,     -0.6523,      0.0718,      1.5703,      1.7891,      1.1641,     -1.0156,      1.7734,      0.2949,      1.5391,      0.3730,     -0.2021,      1.7500,      0.8438],
        [     0.0000,      0.4453,     -0.4043,      0.8359,      2.3906,      3.0312,      2.1875,     -1.4219,      2.6719,      0.7383,      2.1406,      1.0781,      0.0850,      2.2031,      1.4844],
        [     0.0000,      1.5781,      1.5391,      0.1289,     -2.1250,     -1.4531,     -2.1875,      1.5938,     -2.4062,      0.6367,     -1.6406,     -0.4922,      0.2354,     -1.8359,     -0.2070],
        [     0.0000,      1.0781,      0.7500,      0.1924,     -1.3984,     -1.0234,     -0.9727,      0.6406,     -1.5781,      0.1660,     -1.2344,     -0.5312,     -0.0806,     -1.5000,     -0.1914],
        [     0.0000,      0.5039,      0.2520,      0.7812,     -0.9883,     -0.0923,     -0.3281,     -0.2969,     -0.4219,      0.6914,     -0.8867,      0.4805,      0.1040,     -0.6641,      0.2471],
        [     0.0000,     -0.1069,     -0.0615,      0.3418,      0.0029,     -0.0894,      0.3574,     -0.1318,      0.1387,     -0.0021,     -0.3672,      0.8555,      0.1660,     -0.2578,      0.4355],
        [     0.0000,      0.6211,      0.9062,      0.3691,     -1.3438,     -0.6484,     -1.4375,      0.6367,     -0.9492,      0.6250,     -0.6641,     -0.0820,      0.1426,     -0.9219,      0.3145],
        [     0.0000,      0.7344,      0.1738,      0.2119,      0.9102,      1.1641,      0.4805,     -0.4277,      0.7734,      0.6016,      0.8047,     -0.0957,     -0.3359,      0.9102,      0.6484],
        [     0.0000,      1.2422,      1.3281,      0.2969,     -3.0000,     -2.3750,     -2.5938,      1.3438,     -2.9062,      1.2422,     -2.5625,     -0.2422,      0.2441,     -2.6406,     -0.4570],
        [     0.0000,     -0.6211,     -0.8203,      0.2852,      0.6289,      0.6172,      0.6680,     -0.8516,      1.2109,      0.2207,      0.6016,      0.1875,     -0.3770,      0.9922,      0.4727],
        [     0.0000,      0.8203,      0.0540,      0.4707,      0.6836,      0.7305,      0.5195,     -0.4121,      0.7812,      0.2012,      0.5430,      0.5156,     -0.1416,      0.6211,      1.1328],
        [     0.0000,      1.2109,      1.1797,      0.2949,     -2.0469,     -1.2969,     -1.9297,      1.1641,     -1.8203,      1.1094,     -1.3594,     -0.0527,      0.3320,     -1.5000,      0.0295],
        [     0.0000,      0.5234,      0.3750,     -0.0322,     -0.8711,     -0.4648,     -0.9336,      0.1484,     -0.4727,      0.5195,     -0.5664,     -0.2891,     -0.1592,     -0.4238,      0.1621]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6349],
        [0.3521],
        [0.0607],
        [0.4788],
        [0.4402],
        [0.0855],
        [0.0484],
        [0.4335],
        [0.1696],
        [0.4434],
        [0.0644],
        [0.0205],
        [0.4419],
        [0.4508]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4102, 0.5898, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4629, 0.3223, 0.2139, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1816, 0.2080, 0.1211, 0.4902, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0498, 0.4258, 0.4082, 0.1099, 0.0051, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0757, 0.3926, 0.2793, 0.1953, 0.0183, 0.0386, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0840, 0.3047, 0.2217, 0.2148, 0.0334, 0.0835, 0.0569, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1016, 0.1245, 0.1064, 0.1523, 0.0806, 0.0801, 0.1807, 0.1738, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0684, 0.3184, 0.3340, 0.1338, 0.0115, 0.0229, 0.0135, 0.0796, 0.0188, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0742, 0.1128, 0.0776, 0.1206, 0.0771, 0.1147, 0.1543, 0.0742, 0.0981, 0.0972, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0386, 0.3359, 0.3535, 0.1172, 0.0026, 0.0049, 0.0042, 0.0776, 0.0036, 0.0576, 0.0039, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0618, 0.0491, 0.0347, 0.0649, 0.1074, 0.1235, 0.1611, 0.0464, 0.1240, 0.0845, 0.0786, 0.0649, 0.0000, 0.0000, 0.0000],
        [0.0403, 0.0522, 0.0327, 0.0874, 0.0664, 0.0845, 0.1982, 0.0537, 0.0664, 0.0942, 0.0374, 0.0933, 0.0923, 0.0000, 0.0000],
        [0.0479, 0.3301, 0.3066, 0.0952, 0.0044, 0.0091, 0.0056, 0.0674, 0.0066, 0.0483, 0.0072, 0.0322, 0.0306, 0.0080, 0.0000],
        [0.0649, 0.1533, 0.1025, 0.0815, 0.0408, 0.0620, 0.0393, 0.0583, 0.0522, 0.0664, 0.0452, 0.0439, 0.0430, 0.0601, 0.0869]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0224,  0.0318, -0.0193,  ...,  0.0321,  0.0208, -0.0253],
        [-0.0345,  0.0138, -0.0338,  ...,  0.0138, -0.0100,  0.0222],
        [-0.0642, -0.0010, -0.0373,  ..., -0.0548,  0.0030, -0.0111],
        ...,
        [-0.0329,  0.0091,  0.0032,  ...,  0.0069, -0.0088,  0.0167],
        [ 0.0233,  0.0121,  0.0306,  ...,  0.0050, -0.0162,  0.0102],
        [-0.0158,  0.0103, -0.0067,  ..., -0.0157, -0.0107, -0.0290]], device='cuda:0', requires_grad=True)
K: tensor([ 0.6719, -0.0684, -0.5508,  0.4727,  0.3105,  0.5039, -1.0078,  0.5547, -0.4160, -0.3496, -0.8359, -0.2109, -0.3164, -0.0283, -0.2041,  0.4473,  0.4414,  0.0439,  0.2109,  0.0991, -0.5820, -0.4570,  0.0962, -0.2988,  0.3750, -0.5234,  0.6094,  0.1758,  1.0625, -1.1250, -1.2109,  0.1758,
         0.0219, -0.7227, -0.4238,  0.4219,  0.6484,  1.0781,  0.2412, -0.8516,  0.4141, -0.4883, -1.7500, -0.3887, -0.3750, -0.7422, -0.9844, -0.2715, -0.1904,  1.3594, -0.9766, -0.5391,  0.0114,  0.6445,  1.7109, -0.0166, -0.1543, -0.0898, -0.2715,  0.0221, -0.4414,  0.2676,  0.8203,  0.3613],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0084,  0.0230,  0.0014,  ..., -0.0139, -0.0100, -0.0054],
        [ 0.0409,  0.0136,  0.0235,  ...,  0.0018, -0.0031, -0.0031],
        [-0.0031, -0.0108,  0.0018,  ...,  0.0317, -0.0053,  0.0141],
        ...,
        [-0.0014,  0.0213, -0.0095,  ...,  0.0119, -0.0453, -0.0227],
        [ 0.0294, -0.0143,  0.0103,  ...,  0.0102,  0.0349, -0.0183],
        [ 0.0243,  0.0020, -0.0210,  ..., -0.0096,  0.0002,  0.0283]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.2080, -0.9570,  0.9297, -0.1445,  0.3164,  0.9102,  0.1885,  0.6758,  1.3359, -0.1670, -0.3828,  0.3086, -0.5078,  0.3574, -0.7148,  0.0334,  1.3359,  0.7734, -0.6016,  0.8164, -0.7852, -0.4941,  0.1689, -0.8633, -0.3320,  0.3125, -0.3555, -0.3184, -0.3574, -0.7188,  0.3828, -0.1348,
         0.3281,  0.3613, -0.0859,  0.0505, -0.6289, -0.4961, -0.2041, -0.4746, -0.2217, -0.2520, -1.1016, -0.1143, -0.0066, -0.9336,  0.6289,  0.7500,  0.5664, -0.3320, -0.3281,  0.4258, -0.0801,  0.3965,  0.1104, -0.1436,  0.1660, -0.4570, -0.6484,  0.1543,  0.5820, -0.1494,  0.0413,  0.0226],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.3652, -0.3262,  0.3301,  1.1406,  1.4297,  1.2031, -0.2949,  0.9531,  0.2734,  0.8008, -0.0151,  0.0452,  1.0234,  0.2773],
        [ 0.0000, -0.3633, -0.7734,  0.2051,  1.4219,  1.4531,  1.6328, -0.1436,  1.3359,  0.4512,  1.0547,  0.3711,  0.5195,  1.2344,  0.2080],
        [ 0.0000,  0.1357, -0.4023,  0.9961,  0.8477,  1.4375,  2.2031, -0.3047,  1.3281,  0.8555,  0.4258,  0.7188,  0.7344,  0.7930,  0.3105],
        [ 0.0000,  2.1562,  2.1094,  0.7891, -2.2812, -1.5938, -2.1094,  0.6758, -2.1719,  0.2520, -1.8594, -0.1689, -0.1533, -1.8281,  0.3320],
        [ 0.0000,  1.6484,  1.3047,  0.9531, -1.4141, -0.6758, -0.7812,  0.2500, -1.1328,  0.2109, -1.3438, -0.1299, -0.1729, -1.1016,  0.2871],
        [ 0.0000,  1.2891,  0.9727,  0.9414, -0.9219, -0.0054, -0.3906, -0.3145, -0.3750,  0.3535, -0.7812, -0.1348, -0.2695, -0.3926,  0.5352],
        [ 0.0000,  0.2041,  0.0457,  0.4082, -0.2324, -0.2344,  0.5742,  0.5352, -0.3340,  0.5234, -0.6562,  0.5430,  0.6719, -0.3867,  0.0101],
        [ 0.0000,  1.5391,  1.5859,  0.6758, -1.7812, -1.0938, -1.6172,  0.1543, -1.2891,  0.0371, -1.1875, -0.3184, -0.3223, -1.2109,  0.2812],
        [ 0.0000,  0.4219,  0.0442,  0.4863,  0.0383,  0.4355,  0.7344,  0.0029,  0.2793,  0.2734, -0.3359,  0.2002,  0.2285,  0.1514,  0.0957],
        [ 0.0000,  2.1562,  2.2188,  1.1094, -2.7188, -2.0625, -2.2188,  0.6992, -2.3594,  0.4004, -2.2969, -0.1328, -0.0728, -2.2344,  0.2119],
        [ 0.0000, -0.2266, -0.5781,  0.0522,  0.5547,  0.6953,  0.9570, -0.2852,  0.6953,  0.3125,  0.2412,  0.0479, -0.0420,  0.6758,  0.3184],
        [ 0.0000,  0.2617, -0.2061,  0.7734,  0.5039,  0.7422,  1.5938,  0.2910,  0.5039,  0.8516, -0.0742,  0.8398,  0.8281,  0.2754,  0.3203],
        [ 0.0000,  1.9297,  1.8594,  0.6875, -2.3750, -1.6562, -2.1406,  0.3438, -1.9844,  0.0104, -1.8906, -0.3945, -0.4434, -1.7891,  0.1875],
        [ 0.0000,  0.8594,  0.4609,  0.2285, -0.4590, -0.0410, -0.4961, -0.1040, -0.2158,  0.0273, -0.3613, -0.3848, -0.4102, -0.0747,  0.2949]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7007],
        [0.4514],
        [0.1081],
        [0.0580],
        [0.0614],
        [0.0531],
        [0.0445],
        [0.0587],
        [0.1437],
        [0.0460],
        [0.0333],
        [0.0167],
        [0.0407],
        [0.0431]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7852, 0.2148, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5352, 0.2158, 0.2471, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0562, 0.5781, 0.3223, 0.0439, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1465, 0.4258, 0.3164, 0.0825, 0.0287, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1191, 0.4766, 0.3008, 0.0571, 0.0256, 0.0205, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1963, 0.2412, 0.2578, 0.1572, 0.0435, 0.0417, 0.0625, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0356, 0.6055, 0.3027, 0.0244, 0.0039, 0.0041, 0.0084, 0.0172, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1475, 0.2988, 0.2402, 0.0767, 0.0347, 0.0284, 0.0588, 0.0771, 0.0381, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0322, 0.5898, 0.3164, 0.0205, 0.0026, 0.0029, 0.0058, 0.0138, 0.0032, 0.0117, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0576, 0.5078, 0.2754, 0.0479, 0.0060, 0.0051, 0.0144, 0.0410, 0.0070, 0.0356, 0.0036, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0566, 0.4805, 0.2715, 0.0330, 0.0131, 0.0134, 0.0219, 0.0259, 0.0151, 0.0242, 0.0074, 0.0378, 0.0000, 0.0000, 0.0000],
        [0.0349, 0.5664, 0.2871, 0.0226, 0.0035, 0.0037, 0.0078, 0.0162, 0.0043, 0.0142, 0.0018, 0.0261, 0.0132, 0.0000, 0.0000],
        [0.1074, 0.2812, 0.2031, 0.0505, 0.0247, 0.0197, 0.0439, 0.0508, 0.0273, 0.0464, 0.0164, 0.0593, 0.0452, 0.0249, 0.0000],
        [0.0408, 0.5195, 0.2617, 0.0303, 0.0049, 0.0047, 0.0113, 0.0236, 0.0059, 0.0217, 0.0029, 0.0332, 0.0198, 0.0055, 0.0142]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0224,  0.0318, -0.0193,  ...,  0.0321,  0.0208, -0.0253],
        [-0.0345,  0.0138, -0.0338,  ...,  0.0138, -0.0100,  0.0222],
        [-0.0642, -0.0010, -0.0373,  ..., -0.0548,  0.0030, -0.0111],
        ...,
        [-0.0329,  0.0091,  0.0032,  ...,  0.0069, -0.0088,  0.0167],
        [ 0.0233,  0.0121,  0.0306,  ...,  0.0050, -0.0162,  0.0102],
        [-0.0158,  0.0103, -0.0067,  ..., -0.0157, -0.0107, -0.0290]], device='cuda:0', requires_grad=True)
K: tensor([-0.3164,  0.2520,  0.8477,  0.2021,  0.5625, -0.1748, -0.1924, -0.4219, -0.1953, -0.4258, -0.1875,  0.3105,  0.4160,  0.2109,  0.2949,  0.1436, -1.1641, -0.0884, -0.7617, -0.9414, -1.5078, -0.4277, -0.7070, -0.5664,  0.7695,  0.1426, -0.2080,  0.2988,  0.4512, -0.1572, -0.3945,  1.9141,
         0.8594, -1.0078,  0.2109, -0.1670,  0.4258,  0.2812,  0.9883,  1.3438,  0.1187, -0.5547,  1.3750, -0.3906, -0.5742, -0.5391, -0.0923,  0.6094,  0.1533,  0.3984, -0.7539,  0.8047,  0.8906, -0.4375,  0.7812,  0.1299,  0.3984,  0.3984,  0.1147,  0.0508, -1.0391,  0.0449, -1.2969, -0.4512],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0084,  0.0230,  0.0014,  ..., -0.0139, -0.0100, -0.0054],
        [ 0.0409,  0.0136,  0.0235,  ...,  0.0018, -0.0031, -0.0031],
        [-0.0031, -0.0108,  0.0018,  ...,  0.0317, -0.0053,  0.0141],
        ...,
        [-0.0014,  0.0213, -0.0095,  ...,  0.0119, -0.0453, -0.0227],
        [ 0.0294, -0.0143,  0.0103,  ...,  0.0102,  0.0349, -0.0183],
        [ 0.0243,  0.0020, -0.0210,  ..., -0.0096,  0.0002,  0.0283]], device='cuda:0', requires_grad=True)
Q: tensor([-0.5156, -0.3438, -0.3652, -0.3320, -0.1357,  0.4160, -0.9883,  0.1260, -0.3750,  0.1582, -0.2217,  0.8672, -0.5430,  0.2715, -0.8477,  1.5547,  0.2871,  1.0391,  0.3438,  0.2354,  0.0483, -0.6328,  0.4688,  0.7578, -0.3125, -0.7500,  1.1406, -0.4688, -0.7344,  0.3750, -0.3555,  0.2715,
        -0.2324,  0.2373,  0.3984,  0.1758, -1.2734,  0.9219,  0.1079, -1.1406, -0.0957, -0.5898, -0.6133, -0.2637,  0.4062, -0.0101,  0.4160, -0.2539,  1.6562, -0.0654, -0.0157, -0.6797, -0.7227,  1.5234, -0.1064,  0.5625,  0.2793,  0.5820, -0.9531, -0.7773,  0.9531,  0.3984,  0.7852,  0.0017],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -1.2969, -1.3125, -0.0084,  1.9453,  1.7891,  1.4531,  0.2266,  1.8359,  0.4023,  2.0625, -0.0371,  0.4258,  1.8281,  0.6719],
        [ 0.0000, -0.9102, -0.7734, -0.1465,  1.5781,  1.6328,  0.9609, -0.0923,  1.4688,  0.0168,  1.6484, -0.1777,  0.0408,  1.5078,  0.4922],
        [ 0.0000,  2.3281,  1.7500, -0.2461, -1.7500, -1.6953, -1.1641, -0.5352, -1.6172, -0.6055, -2.2500, -0.1982, -0.6992, -1.6484, -0.8633],
        [ 0.0000,  1.0703,  0.7734, -0.5703, -1.6328, -1.8047, -1.0469, -0.6172, -1.5156, -0.7305, -2.0312, -0.4375, -0.7539, -1.6094, -1.2500],
        [ 0.0000,  1.3828,  0.9258, -0.7383, -1.5391, -1.7578, -0.8906, -0.7578, -1.4141, -0.8555, -2.0156, -0.5664, -0.8828, -1.5156, -1.3203],
        [ 0.0000,  0.2070,  0.2754, -0.2188, -1.5078, -1.5469, -1.1406, -0.2715, -1.4375, -0.3652, -1.6562, -0.1748, -0.4082, -1.4922, -0.8633],
        [ 0.0000,  2.8281,  2.1406, -0.3809, -2.2188, -2.1562, -1.4531, -0.7305, -2.0156, -0.8672, -2.9062, -0.2383, -0.9375, -2.0625, -1.1875],
        [ 0.0000,  0.7070,  0.4863, -0.6523, -1.4453, -1.6484, -0.9180, -0.6484, -1.3516, -0.7383, -1.7891, -0.5234, -0.7656, -1.4453, -1.2344],
        [ 0.0000,  2.9062,  2.2812, -0.4531, -2.5156, -2.4219, -1.7188, -0.8477, -2.2969, -1.0078, -3.2344, -0.2988, -1.0859, -2.3438, -1.3516],
        [ 0.0000,  2.1719,  1.5625, -0.1816, -2.2656, -2.4219, -1.3828, -0.3398, -2.0938, -0.4805, -2.7656, -0.1006, -0.5312, -2.1875, -1.1562],
        [ 0.0000,  2.1406,  1.5625, -0.5430, -1.4688, -1.4375, -0.9531, -0.7812, -1.3203, -0.8516, -2.0312, -0.4043, -0.9141, -1.3594, -1.0000],
        [ 0.0000,  2.7812,  2.1094, -0.4355, -2.2969, -2.2500, -1.5000, -0.7695, -2.0938, -0.9023, -2.9688, -0.2930, -0.9805, -2.1406, -1.2656],
        [ 0.0000,  0.9609,  0.6367, -0.7539, -1.4766, -1.6953, -0.8945, -0.7500, -1.3672, -0.8438, -1.8828, -0.5938, -0.8672, -1.4609, -1.3281],
        [ 0.0000,  2.5469,  1.8516, -0.2969, -2.1094, -2.1719, -1.2891, -0.5508, -1.9375, -0.6289, -2.6562, -0.2090, -0.7227, -2.0000, -1.0625]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7918],
        [0.5516],
        [0.2522],
        [0.1226],
        [0.0835],
        [0.1561],
        [0.1173],
        [0.0994],
        [0.1037],
        [0.0578],
        [0.0711],
        [0.0818],
        [0.0708],
        [0.0677]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7891,     0.2090,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5156,     0.2266,     0.2559,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0378,     0.6289,     0.3066,     0.0258,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1797,     0.3496,     0.3086,     0.1177,     0.0454,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1377,     0.4297,     0.3301,     0.0579,     0.0281,     0.0178,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1836,     0.2012,     0.2246,     0.2217,     0.0498,     0.0437,     0.0747,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0214,     0.6602,     0.2949,     0.0132,     0.0014,     0.0009,     0.0039,     0.0061,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1572,     0.2305,     0.2207,     0.1011,     0.0444,     0.0327,     0.0737,     0.0889,     0.0498,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0184,     0.6484,     0.3105,     0.0107,     0.0008,     0.0006,     0.0025,     0.0046,     0.0011,     0.0034,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0752,     0.4590,     0.2793,     0.0535,     0.0109,     0.0066,     0.0282,     0.0371,     0.0133,     0.0315,     0.0055,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0347,     0.5938,     0.3008,     0.0157,     0.0040,     0.0029,     0.0088,     0.0087,     0.0050,     0.0069,     0.0017,     0.0167,     0.0000,     0.0000,     0.0000],
        [    0.0212,     0.6406,     0.2910,     0.0124,     0.0013,     0.0008,     0.0037,     0.0058,     0.0017,     0.0043,     0.0004,     0.0128,     0.0045,     0.0000,     0.0000],
        [    0.1182,     0.2109,     0.1885,     0.0620,     0.0317,     0.0220,     0.0559,     0.0542,     0.0359,     0.0498,     0.0206,     0.0708,     0.0481,     0.0315,     0.0000],
        [    0.0270,     0.6094,     0.2871,     0.0172,     0.0019,     0.0012,     0.0058,     0.0091,     0.0025,     0.0073,     0.0008,     0.0173,     0.0074,     0.0020,     0.0047]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0224,  0.0318, -0.0193,  ...,  0.0321,  0.0208, -0.0253],
        [-0.0345,  0.0138, -0.0338,  ...,  0.0138, -0.0100,  0.0222],
        [-0.0642, -0.0010, -0.0373,  ..., -0.0548,  0.0030, -0.0111],
        ...,
        [-0.0329,  0.0091,  0.0032,  ...,  0.0069, -0.0088,  0.0167],
        [ 0.0233,  0.0121,  0.0306,  ...,  0.0050, -0.0162,  0.0102],
        [-0.0158,  0.0103, -0.0067,  ..., -0.0157, -0.0107, -0.0290]], device='cuda:0', requires_grad=True)
K: tensor([-0.4746,  0.1484,  0.7852,  0.2344,  0.7617, -0.2197, -0.1074, -0.0723, -0.2070, -1.0312, -0.0225,  0.1738,  0.3672, -0.1631,  0.1738, -0.0586, -1.0781,  0.3809, -1.2812, -0.7695, -1.7266, -0.2715, -0.4570, -0.7148,  0.6016,  0.2314, -0.3594,  0.2441,  0.8047, -0.2500, -0.4941,  1.7891,
         0.8867, -1.3125,  0.0034, -0.3379,  0.2188,  0.6562,  1.3906,  1.6641,  0.1533, -0.7500,  1.1484, -0.0145, -0.8672, -0.4727,  0.0383,  0.1729,  0.0522,  0.8672, -0.7695,  0.6758,  1.0703, -0.6758,  0.9883,  0.0674,  0.1050,  0.3203,  0.2148,  0.2109, -0.8594,  0.3301, -1.2734, -0.7344],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0084,  0.0230,  0.0014,  ..., -0.0139, -0.0100, -0.0054],
        [ 0.0409,  0.0136,  0.0235,  ...,  0.0018, -0.0031, -0.0031],
        [-0.0031, -0.0108,  0.0018,  ...,  0.0317, -0.0053,  0.0141],
        ...,
        [-0.0014,  0.0213, -0.0095,  ...,  0.0119, -0.0453, -0.0227],
        [ 0.0294, -0.0143,  0.0103,  ...,  0.0102,  0.0349, -0.0183],
        [ 0.0243,  0.0020, -0.0210,  ..., -0.0096,  0.0002,  0.0283]], device='cuda:0', requires_grad=True)
Q: tensor([-0.4570, -0.7617,  0.1279, -0.4414, -0.0237,  0.4297, -1.1250, -0.0630, -0.0693,  0.3535, -0.5117,  1.0547, -0.5234,  0.7148, -0.8477,  1.8359,  0.4727,  1.0000,  0.3672,  0.4551,  0.2109, -0.6875,  0.7461,  0.5117, -0.5234, -1.2578,  1.1250, -0.7539, -1.1250,  0.0479,  0.1279, -0.0164,
        -0.3438,  0.3496,  0.1279,  0.3008, -1.3438,  0.6875, -0.2041, -1.0625, -0.1855, -0.9531, -0.5742, -0.5156,  0.7969, -0.0115,  0.6680, -0.2490,  2.0781, -0.5898,  0.0820, -0.4824, -1.1641,  1.6328, -0.4512,  0.2773,  0.4180,  0.7773, -0.6992, -0.7031,  0.9609,  0.4883,  1.3516,  0.0112],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -1.3281, -1.3047,  0.0620,  1.7969,  2.0781,  1.0391,  0.4473,  1.6562,  0.6289,  2.1719,  0.1309,  0.6055,  1.7969,  0.9453],
        [ 0.0000, -0.8203, -0.6992, -0.3262,  1.3125,  1.6562,  0.5508, -0.1270,  1.1719, -0.0232,  1.6016, -0.2773, -0.0378,  1.3203,  0.4219],
        [ 0.0000,  2.8125,  2.0938, -0.3848, -2.1250, -2.4219, -1.3047, -0.9492, -1.9219, -1.1328, -2.9062, -0.3828, -1.1094, -2.0625, -1.3984],
        [ 0.0000,  0.6641,  0.5391, -0.4219, -1.3750, -1.7031, -0.8086, -0.6016, -1.2500, -0.6992, -1.8125, -0.3105, -0.7266, -1.3750, -1.1172],
        [ 0.0000,  1.1406,  0.8750, -0.8633, -1.5859, -2.0469, -0.8516, -1.0703, -1.4375, -1.1875, -2.1719, -0.7227, -1.2031, -1.6094, -1.6406],
        [ 0.0000,  0.0903,  0.2002,  0.1875, -1.3047, -1.4375, -0.9023,  0.0322, -1.1953, -0.0361, -1.5391,  0.2539, -0.1064, -1.2734, -0.4570],
        [ 0.0000,  3.4219,  2.6250, -0.4824, -2.7656, -3.1406, -1.7031, -1.2500, -2.4844, -1.5312, -3.7812, -0.4668, -1.4766, -2.6719, -1.8594],
        [ 0.0000,  0.3828,  0.3398, -0.4453, -1.2656, -1.5703, -0.7617, -0.5703, -1.1484, -0.6445, -1.6328, -0.3262, -0.6875, -1.2656, -1.0547],
        [ 0.0000,  3.5625,  2.8281, -0.5430, -3.0781, -3.4531, -1.9766, -1.3828, -2.7812, -1.6953, -4.1562, -0.5234, -1.6484, -2.9844, -2.0625],
        [ 0.0000,  1.8125,  1.3203, -0.3398, -1.9219, -2.4219, -0.9766, -0.7031, -1.7266, -0.8672, -2.6094, -0.2949, -0.8438, -1.9219, -1.3984],
        [ 0.0000,  2.8438,  2.1562, -0.7891, -2.1562, -2.4688, -1.3750, -1.3906, -1.9453, -1.6172, -3.0156, -0.7305, -1.5703, -2.0781, -1.8047],
        [ 0.0000,  3.4062,  2.6250, -0.5430, -2.8281, -3.2344, -1.7500, -1.3047, -2.5469, -1.5938, -3.8594, -0.5117, -1.5391, -2.7344, -1.9531],
        [ 0.0000,  0.5820,  0.4668, -0.6445, -1.3125, -1.6797, -0.7500, -0.7812, -1.1875, -0.8633, -1.7422, -0.5117, -0.8945, -1.3203, -1.2812],
        [ 0.0000,  3.1094,  2.3594, -0.4473, -2.6562, -3.1094, -1.5391, -1.0938, -2.3906, -1.3125, -3.5781, -0.4395, -1.2891, -2.5938, -1.7578]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7909],
        [0.5188],
        [0.2490],
        [0.1508],
        [0.1296],
        [0.1717],
        [0.1555],
        [0.1265],
        [0.1434],
        [0.0758],
        [0.1125],
        [0.1154],
        [0.0896],
        [0.0987]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.0461 the:0.0549,:0.0610 the:0.0275,:0.0208,:0.0669 the:0.0381,:0.0466)
,
------
		( the:0.0549,:0.0610 the:0.0275,:0.0208,:0.0669 the:0.0381,:0.0466 the:0.0342)
 the�s the
�s the�s the�s the

@ 550 train 7.2078 , allloss: 8.0157, dt: 1603.35ms, fracRes: 0.0365, norm(attn): 0.1201, norm(output): 0.1367, norm(x): 0.1250, norm(y): 1.0001, norm:6.9009, tok/sec: 81748.96, flops:31.85, batch-reuse:1
@ 551 train 7.2573 , allloss: 8.0230, dt: 1213.23ms, fracRes: 0.0320, norm(attn): 0.1230, norm(output): 0.1367, norm(x): 0.1247, norm(y): 1.0001, norm:24.8050, tok/sec: 108035.65, flops:42.09, batch-reuse:1
@ 552 train 7.1095 , allloss: 7.8625, dt: 1194.26ms, fracRes: 0.0375, norm(attn): 0.1221, norm(output): 0.1348, norm(x): 0.1239, norm(y): 1.0002, norm:10.0838, tok/sec: 109752.01, flops:42.76, batch-reuse:1
@ 553 train 7.2498 , allloss: 7.9840, dt: 1217.79ms, fracRes: 0.0403, norm(attn): 0.1221, norm(output): 0.1348, norm(x): 0.1248, norm(y): 1.0001, norm:13.6263, tok/sec: 107630.65, flops:41.93, batch-reuse:1
@ 554 train 7.2575 , allloss: 7.9893, dt: 1248.99ms, fracRes: 0.0410, norm(attn): 0.1230, norm(output): 0.1367, norm(x): 0.1253, norm(y): 1.0001, norm:21.1180, tok/sec: 104942.73, flops:40.89, batch-reuse:1
@ 555 train 7.1888 , allloss: 7.8977, dt: 1228.24ms, fracRes: 0.0476, norm(attn): 0.1226, norm(output): 0.1357, norm(x): 0.1249, norm(y): 1.0001, norm:11.9913, tok/sec: 106715.44, flops:41.58, batch-reuse:1
@ 556 train 7.1179 , allloss: 7.8722, dt: 1195.97ms, fracRes: 0.0502, norm(attn): 0.1201, norm(output): 0.1348, norm(x): 0.1240, norm(y): 1.0001, norm:12.6354, tok/sec: 109595.15, flops:42.70, batch-reuse:1
@ 557 train 7.2358 , allloss: 8.1383, dt: 1210.36ms, fracRes: 0.0463, norm(attn): 0.1235, norm(output): 0.1357, norm(x): 0.1243, norm(y): 1.0002, norm:19.9994, tok/sec: 108291.98, flops:42.19, batch-reuse:1
@ 558 train 7.3123 , allloss: 8.1694, dt: 1194.34ms, fracRes: 0.0429, norm(attn): 0.1230, norm(output): 0.1357, norm(x): 0.1246, norm(y): 1.0003, norm:12.7680, tok/sec: 109744.58, flops:42.76, batch-reuse:1
@ 559 train 7.4133 , allloss: 8.2229, dt: 1209.28ms, fracRes: 0.0455, norm(attn): 0.1187, norm(output): 0.1377, norm(x): 0.1254, norm(y): 1.0002, norm:9.0785, tok/sec: 108388.55, flops:42.23, batch-reuse:1
@ 560 train 7.3894 , allloss: 8.1407, dt: 1207.73ms, fracRes: 0.0470, norm(attn): 0.1182, norm(output): 0.1396, norm(x): 0.1270, norm(y): 1.0002, norm:22.9425, tok/sec: 108527.73, flops:42.28, batch-reuse:1
@ 561 train 7.4568 , allloss: 8.1326, dt: 1219.34ms, fracRes: 0.0460, norm(attn): 0.1182, norm(output): 0.1387, norm(x): 0.1275, norm(y): 1.0002, norm:10.8804, tok/sec: 107493.90, flops:41.88, batch-reuse:1
@ 562 train 7.2742 , allloss: 7.9270, dt: 1233.83ms, fracRes: 0.0464, norm(attn): 0.1177, norm(output): 0.1387, norm(x): 0.1263, norm(y): 1.0003, norm:11.1883, tok/sec: 106231.92, flops:41.39, batch-reuse:1
@ 563 train 7.3692 , allloss: 8.0762, dt: 1231.00ms, fracRes: 0.0454, norm(attn): 0.1172, norm(output): 0.1396, norm(x): 0.1268, norm(y): 1.0003, norm:6.3327, tok/sec: 106476.06, flops:41.48, batch-reuse:1
@ 564 train 7.2354 , allloss: 7.9343, dt: 1236.76ms, fracRes: 0.0497, norm(attn): 0.1172, norm(output): 0.1396, norm(x): 0.1270, norm(y): 1.0004, norm:8.0906, tok/sec: 105980.27, flops:41.29, batch-reuse:1
@ 565 train 7.1058 , allloss: 7.7549, dt: 1218.99ms, fracRes: 0.0455, norm(attn): 0.1177, norm(output): 0.1396, norm(x): 0.1259, norm(y): 1.0004, norm:12.0532, tok/sec: 107525.26, flops:41.89, batch-reuse:1
@ 566 train 7.3101 , allloss: 7.9533, dt: 1220.93ms, fracRes: 0.0423, norm(attn): 0.1177, norm(output): 0.1387, norm(x): 0.1257, norm(y): 1.0004, norm:9.6457, tok/sec: 107353.80, flops:41.83, batch-reuse:1
@ 567 train 7.3411 , allloss: 7.9920, dt: 1231.67ms, fracRes: 0.0408, norm(attn): 0.1167, norm(output): 0.1387, norm(x): 0.1246, norm(y): 1.0003, norm:22.6972, tok/sec: 106418.04, flops:41.46, batch-reuse:1
@ 568 train 7.3536 , allloss: 8.0190, dt: 1188.38ms, fracRes: 0.0407, norm(attn): 0.1172, norm(output): 0.1348, norm(x): 0.1238, norm(y): 1.0004, norm:15.9070, tok/sec: 110294.55, flops:42.97, batch-reuse:1
@ 569 train 7.2582 , allloss: 7.9340, dt: 1198.47ms, fracRes: 0.0429, norm(attn): 0.1187, norm(output): 0.1357, norm(x): 0.1241, norm(y): 1.0004, norm:8.0953, tok/sec: 109365.99, flops:42.61, batch-reuse:1
@ 570 train 7.2767 , allloss: 7.9680, dt: 1207.71ms, fracRes: 0.0467, norm(attn): 0.1211, norm(output): 0.1357, norm(x): 0.1242, norm(y): 1.0004, norm:12.6645, tok/sec: 108529.34, flops:42.28, batch-reuse:1
@ 571 train 7.2488 , allloss: 7.8634, dt: 1189.34ms, fracRes: 0.0533, norm(attn): 0.1250, norm(output): 0.1338, norm(x): 0.1234, norm(y): 1.0004, norm:16.3795, tok/sec: 110205.67, flops:42.94, batch-reuse:1
@ 572 train 7.2064 , allloss: 7.7964, dt: 1196.02ms, fracRes: 0.0526, norm(attn): 0.1260, norm(output): 0.1348, norm(x): 0.1236, norm(y): 1.0004, norm:6.3608, tok/sec: 109590.04, flops:42.70, batch-reuse:1
@ 573 train 7.2662 , allloss: 7.9006, dt: 1196.14ms, fracRes: 0.0470, norm(attn): 0.1245, norm(output): 0.1357, norm(x): 0.1231, norm(y): 1.0005, norm:25.6882, tok/sec: 109579.27, flops:42.69, batch-reuse:1
@ 574 train 7.2344 , allloss: 7.8559, dt: 1214.72ms, fracRes: 0.0458, norm(attn): 0.1260, norm(output): 0.1348, norm(x): 0.1224, norm(y): 1.0005, norm:6.5296, tok/sec: 107902.91, flops:42.04, batch-reuse:1
@ 575 train 7.2021 , allloss: 7.7743, dt: 1217.71ms, fracRes: 0.0479, norm(attn): 0.1309, norm(output): 0.1348, norm(x): 0.1230, norm(y): 1.0006, norm:14.9138, tok/sec: 107638.23, flops:41.94, batch-reuse:1
@ 576 train 7.1282 , allloss: 7.7120, dt: 1230.09ms, fracRes: 0.0458, norm(attn): 0.1260, norm(output): 0.1338, norm(x): 0.1224, norm(y): 1.0006, norm:5.6062, tok/sec: 106554.50, flops:41.51, batch-reuse:1
@ 577 train 7.2764 , allloss: 7.8269, dt: 1195.21ms, fracRes: 0.0485, norm(attn): 0.1318, norm(output): 0.1328, norm(x): 0.1220, norm(y): 1.0006, norm:10.8752, tok/sec: 109664.70, flops:42.73, batch-reuse:1
@ 578 train 7.2446 , allloss: 7.7667, dt: 1221.17ms, fracRes: 0.0523, norm(attn): 0.1328, norm(output): 0.1338, norm(x): 0.1219, norm(y): 1.0006, norm:23.7592, tok/sec: 107332.74, flops:41.82, batch-reuse:1
@ 579 train 7.2082 , allloss: 7.7129, dt: 1209.53ms, fracRes: 0.0563, norm(attn): 0.1348, norm(output): 0.1328, norm(x): 0.1214, norm(y): 1.0005, norm:11.4465, tok/sec: 108365.88, flops:42.22, batch-reuse:1
@ 580 train 7.2927 , allloss: 7.8649, dt: 1238.59ms, fracRes: 0.0517, norm(attn): 0.1318, norm(output): 0.1328, norm(x): 0.1218, norm(y): 1.0005, norm:22.3751, tok/sec: 105823.96, flops:41.23, batch-reuse:1
@ 581 train 7.1578 , allloss: 7.7091, dt: 1202.94ms, fracRes: 0.0552, norm(attn): 0.1328, norm(output): 0.1328, norm(x): 0.1207, norm(y): 1.0005, norm:12.1872, tok/sec: 108960.06, flops:42.45, batch-reuse:1
@ 582 train 7.2110 , allloss: 7.8098, dt: 1214.33ms, fracRes: 0.0515, norm(attn): 0.1318, norm(output): 0.1328, norm(x): 0.1210, norm(y): 1.0006, norm:8.7527, tok/sec: 107937.59, flops:42.05, batch-reuse:1
@ 583 train 7.1876 , allloss: 7.7325, dt: 1245.18ms, fracRes: 0.0540, norm(attn): 0.1338, norm(output): 0.1318, norm(x): 0.1201, norm(y): 1.0006, norm:19.4754, tok/sec: 105263.51, flops:41.01, batch-reuse:1
@ 584 train 7.2131 , allloss: 7.7508, dt: 1233.01ms, fracRes: 0.0535, norm(attn): 0.1328, norm(output): 0.1328, norm(x): 0.1209, norm(y): 1.0005, norm:10.5087, tok/sec: 106302.31, flops:41.42, batch-reuse:1
@ 585 train 7.1720 , allloss: 7.6986, dt: 1243.90ms, fracRes: 0.0584, norm(attn): 0.1357, norm(output): 0.1318, norm(x): 0.1199, norm(y): 1.0005, norm:14.3446, tok/sec: 105372.09, flops:41.05, batch-reuse:1
@ 586 train 7.2733 , allloss: 7.8716, dt: 1200.60ms, fracRes: 0.0533, norm(attn): 0.1328, norm(output): 0.1328, norm(x): 0.1206, norm(y): 1.0004, norm:39.8758, tok/sec: 109172.15, flops:42.53, batch-reuse:1
@ 587 train 7.2104 , allloss: 7.7378, dt: 1230.88ms, fracRes: 0.0567, norm(attn): 0.1396, norm(output): 0.1328, norm(x): 0.1203, norm(y): 1.0004, norm:9.0189, tok/sec: 106486.70, flops:41.49, batch-reuse:1
@ 588 train 7.3373 , allloss: 7.8102, dt: 1224.45ms, fracRes: 0.0618, norm(attn): 0.1416, norm(output): 0.1318, norm(x): 0.1204, norm(y): 1.0005, norm:38.4376, tok/sec: 107045.39, flops:41.70, batch-reuse:1
@ 589 train 7.3097 , allloss: 7.7623, dt: 1235.83ms, fracRes: 0.0609, norm(attn): 0.1416, norm(output): 0.1328, norm(x): 0.1216, norm(y): 1.0005, norm:25.7912, tok/sec: 106060.16, flops:41.32, batch-reuse:1
@ 590 train 7.2876 , allloss: 7.7469, dt: 1201.20ms, fracRes: 0.0545, norm(attn): 0.1396, norm(output): 0.1338, norm(x): 0.1228, norm(y): 1.0005, norm:25.5888, tok/sec: 109117.57, flops:42.51, batch-reuse:1
@ 591 train 7.2121 , allloss: 7.7044, dt: 1214.84ms, fracRes: 0.0505, norm(attn): 0.1367, norm(output): 0.1348, norm(x): 0.1237, norm(y): 1.0005, norm:21.8552, tok/sec: 107892.45, flops:42.03, batch-reuse:1
@ 592 train 7.1946 , allloss: 7.7245, dt: 1216.34ms, fracRes: 0.0484, norm(attn): 0.1377, norm(output): 0.1348, norm(x): 0.1235, norm(y): 1.0005, norm:18.6264, tok/sec: 107759.25, flops:41.98, batch-reuse:1
@ 593 train 7.1753 , allloss: 7.7133, dt: 1211.89ms, fracRes: 0.0474, norm(attn): 0.1387, norm(output): 0.1348, norm(x): 0.1241, norm(y): 1.0005, norm:10.2939, tok/sec: 108155.03, flops:42.14, batch-reuse:1
@ 594 train 7.3144 , allloss: 7.9064, dt: 1202.40ms, fracRes: 0.0442, norm(attn): 0.1348, norm(output): 0.1377, norm(x): 0.1259, norm(y): 1.0004, norm:7.8212, tok/sec: 109008.89, flops:42.47, batch-reuse:1
@ 595 train 7.2629 , allloss: 7.8754, dt: 1214.72ms, fracRes: 0.0475, norm(attn): 0.1318, norm(output): 0.1377, norm(x): 0.1254, norm(y): 1.0003, norm:28.4679, tok/sec: 107903.41, flops:42.04, batch-reuse:1
@ 596 train 7.1893 , allloss: 7.7321, dt: 1212.62ms, fracRes: 0.0539, norm(attn): 0.1318, norm(output): 0.1387, norm(x): 0.1256, norm(y): 1.0003, norm:13.5603, tok/sec: 108089.86, flops:42.11, batch-reuse:1
@ 597 train 7.1983 , allloss: 7.6656, dt: 1237.52ms, fracRes: 0.0600, norm(attn): 0.1357, norm(output): 0.1396, norm(x): 0.1267, norm(y): 1.0004, norm:17.6590, tok/sec: 105915.28, flops:41.26, batch-reuse:1
@ 598 train 7.3129 , allloss: 7.7784, dt: 1209.27ms, fracRes: 0.0589, norm(attn): 0.1387, norm(output): 0.1406, norm(x): 0.1284, norm(y): 1.0004, norm:14.6693, tok/sec: 108389.53, flops:42.23, batch-reuse:1
@ 599 train 7.3174 , allloss: 7.8104, dt: 1201.28ms, fracRes: 0.0545, norm(attn): 0.1357, norm(output): 0.1406, norm(x): 0.1290, norm(y): 1.0004, norm:13.0044, tok/sec: 109110.51, flops:42.51, batch-reuse:1
@ 600 train 7.1977 , allloss: 7.7102, dt: 1211.06ms, fracRes: 0.0538, norm(attn): 0.1328, norm(output): 0.1416, norm(x): 0.1297, norm(y): 1.0004, norm:11.5722, tok/sec: 108229.30, flops:42.17, batch-reuse:1
@ 601 train 7.2413 , allloss: 7.8045, dt: 1205.88ms, fracRes: 0.0476, norm(attn): 0.1279, norm(output): 0.1426, norm(x): 0.1303, norm(y): 1.0004, norm:8.4097, tok/sec: 108694.46, flops:42.35, batch-reuse:1
@ 602 train 7.2196 , allloss: 7.8169, dt: 1185.81ms, fracRes: 0.0504, norm(attn): 0.1250, norm(output): 0.1406, norm(x): 0.1286, norm(y): 1.0003, norm:10.1561, tok/sec: 110534.05, flops:43.06, batch-reuse:1
@ 603 train 7.1662 , allloss: 7.7333, dt: 1211.99ms, fracRes: 0.0547, norm(attn): 0.1245, norm(output): 0.1416, norm(x): 0.1296, norm(y): 1.0003, norm:6.5642, tok/sec: 108145.97, flops:42.13, batch-reuse:1
@ 604 train 7.1069 , allloss: 7.6498, dt: 1220.72ms, fracRes: 0.0564, norm(attn): 0.1230, norm(output): 0.1416, norm(x): 0.1300, norm(y): 1.0003, norm:10.9694, tok/sec: 107372.46, flops:41.83, batch-reuse:1
@ 605 train 7.1360 , allloss: 7.6637, dt: 1227.70ms, fracRes: 0.0537, norm(attn): 0.1230, norm(output): 0.1426, norm(x): 0.1310, norm(y): 1.0003, norm:4.8380, tok/sec: 106762.30, flops:41.59, batch-reuse:1
@ 606 train 7.1475 , allloss: 7.6669, dt: 1190.56ms, fracRes: 0.0575, norm(attn): 0.1235, norm(output): 0.1426, norm(x): 0.1312, norm(y): 1.0004, norm:9.4769, tok/sec: 110092.79, flops:42.89, batch-reuse:1
@ 607 train 7.1273 , allloss: 7.6778, dt: 1210.19ms, fracRes: 0.0584, norm(attn): 0.1245, norm(output): 0.1416, norm(x): 0.1307, norm(y): 1.0003, norm:10.3897, tok/sec: 108306.70, flops:42.20, batch-reuse:1
@ 608 train 7.0425 , allloss: 7.6289, dt: 1217.27ms, fracRes: 0.0543, norm(attn): 0.1250, norm(output): 0.1416, norm(x): 0.1300, norm(y): 1.0003, norm:7.3577, tok/sec: 107676.77, flops:41.95, batch-reuse:1
@ 609 train 7.0850 , allloss: 7.6475, dt: 1199.19ms, fracRes: 0.0507, norm(attn): 0.1245, norm(output): 0.1416, norm(x): 0.1306, norm(y): 1.0003, norm:8.3477, tok/sec: 109300.67, flops:42.58, batch-reuse:1
@ 610 train 7.2260 , allloss: 7.7880, dt: 1182.33ms, fracRes: 0.0454, norm(attn): 0.1235, norm(output): 0.1436, norm(x): 0.1331, norm(y): 1.0003, norm:5.5084, tok/sec: 110858.67, flops:43.19, batch-reuse:1
@ 611 train 7.1765 , allloss: 7.7081, dt: 1211.56ms, fracRes: 0.0449, norm(attn): 0.1245, norm(output): 0.1445, norm(x): 0.1340, norm(y): 1.0003, norm:14.6820, tok/sec: 108184.23, flops:42.15, batch-reuse:1
@ 612 train 7.2233 , allloss: 7.7605, dt: 1230.54ms, fracRes: 0.0421, norm(attn): 0.1235, norm(output): 0.1445, norm(x): 0.1336, norm(y): 1.0003, norm:11.3534, tok/sec: 106515.55, flops:41.50, batch-reuse:1
@ 613 train 7.2522 , allloss: 7.8328, dt: 1234.25ms, fracRes: 0.0350, norm(attn): 0.1221, norm(output): 0.1445, norm(x): 0.1339, norm(y): 1.0003, norm:7.2505, tok/sec: 106195.54, flops:41.37, batch-reuse:1
@ 614 train 7.2011 , allloss: 7.8297, dt: 1230.66ms, fracRes: 0.0311, norm(attn): 0.1230, norm(output): 0.1455, norm(x): 0.1340, norm(y): 1.0003, norm:20.9828, tok/sec: 106505.81, flops:41.49, batch-reuse:1
@ 615 train 7.1792 , allloss: 7.8481, dt: 1239.91ms, fracRes: 0.0307, norm(attn): 0.1191, norm(output): 0.1436, norm(x): 0.1331, norm(y): 1.0003, norm:16.3693, tok/sec: 105710.52, flops:41.18, batch-reuse:1
@ 616 train 7.1821 , allloss: 7.8567, dt: 1231.45ms, fracRes: 0.0288, norm(attn): 0.1196, norm(output): 0.1455, norm(x): 0.1351, norm(y): 1.0004, norm:14.5018, tok/sec: 106437.47, flops:41.47, batch-reuse:1
@ 617 train 7.0348 , allloss: 7.6237, dt: 1198.14ms, fracRes: 0.0302, norm(attn): 0.1201, norm(output): 0.1475, norm(x): 0.1366, norm(y): 1.0004, norm:20.4412, tok/sec: 109395.93, flops:42.62, batch-reuse:1
@ 618 train 7.1307 , allloss: 7.6710, dt: 1242.73ms, fracRes: 0.0320, norm(attn): 0.1216, norm(output): 0.1484, norm(x): 0.1379, norm(y): 1.0004, norm:9.0471, tok/sec: 105470.81, flops:41.09, batch-reuse:1
@ 619 train 7.1325 , allloss: 7.6775, dt: 1246.60ms, fracRes: 0.0297, norm(attn): 0.1211, norm(output): 0.1514, norm(x): 0.1389, norm(y): 1.0005, norm:10.2379, tok/sec: 105143.64, flops:40.96, batch-reuse:1
@ 620 train 7.1038 , allloss: 7.6564, dt: 1249.45ms, fracRes: 0.0274, norm(attn): 0.1187, norm(output): 0.1504, norm(x): 0.1387, norm(y): 1.0005, norm:10.7683, tok/sec: 104904.06, flops:40.87, batch-reuse:1
@ 621 train 7.1062 , allloss: 7.6913, dt: 1245.67ms, fracRes: 0.0255, norm(attn): 0.1182, norm(output): 0.1523, norm(x): 0.1394, norm(y): 1.0005, norm:13.0940, tok/sec: 105222.34, flops:40.99, batch-reuse:1
@ 622 train 7.0336 , allloss: 7.6200, dt: 1241.91ms, fracRes: 0.0271, norm(attn): 0.1167, norm(output): 0.1494, norm(x): 0.1386, norm(y): 1.0005, norm:13.3681, tok/sec: 105540.50, flops:41.12, batch-reuse:1
@ 623 train 7.0616 , allloss: 7.6926, dt: 1238.93ms, fracRes: 0.0243, norm(attn): 0.1157, norm(output): 0.1514, norm(x): 0.1397, norm(y): 1.0005, norm:3.9183, tok/sec: 105794.21, flops:41.22, batch-reuse:1
@ 624 train 7.1444 , allloss: 7.7744, dt: 1205.79ms, fracRes: 0.0214, norm(attn): 0.1157, norm(output): 0.1543, norm(x): 0.1414, norm(y): 1.0006, norm:10.7586, tok/sec: 108702.39, flops:42.35, batch-reuse:1
@ 625 train 7.2260 , allloss: 7.8265, dt: 1197.52ms, fracRes: 0.0223, norm(attn): 0.1108, norm(output): 0.1523, norm(x): 0.1411, norm(y): 1.0005, norm:16.1502, tok/sec: 109453.02, flops:42.64, batch-reuse:1
@ 626 train 7.1043 , allloss: 7.6588, dt: 1204.36ms, fracRes: 0.0220, norm(attn): 0.1133, norm(output): 0.1523, norm(x): 0.1417, norm(y): 1.0005, norm:9.1762, tok/sec: 108830.84, flops:42.40, batch-reuse:1
@ 627 train 7.1140 , allloss: 7.7007, dt: 1226.52ms, fracRes: 0.0190, norm(attn): 0.1157, norm(output): 0.1553, norm(x): 0.1417, norm(y): 1.0006, norm:9.5365, tok/sec: 106864.97, flops:41.63, batch-reuse:1
@ 628 train 7.1208 , allloss: 7.7334, dt: 1202.08ms, fracRes: 0.0175, norm(attn): 0.1167, norm(output): 0.1533, norm(x): 0.1407, norm(y): 1.0006, norm:10.0559, tok/sec: 109037.67, flops:42.48, batch-reuse:1
@ 629 train 7.1693 , allloss: 7.7864, dt: 1194.14ms, fracRes: 0.0152, norm(attn): 0.1216, norm(output): 0.1553, norm(x): 0.1417, norm(y): 1.0007, norm:10.4359, tok/sec: 109762.50, flops:42.76, batch-reuse:1
@ 630 train 7.2713 , allloss: 7.8970, dt: 1214.08ms, fracRes: 0.0147, norm(attn): 0.1191, norm(output): 0.1523, norm(x): 0.1417, norm(y): 1.0007, norm:14.6692, tok/sec: 107960.29, flops:42.06, batch-reuse:1
@ 631 train 7.1427 , allloss: 7.7551, dt: 1189.13ms, fracRes: 0.0156, norm(attn): 0.1182, norm(output): 0.1543, norm(x): 0.1421, norm(y): 1.0007, norm:8.2190, tok/sec: 110224.92, flops:42.94, batch-reuse:1
@ 632 train 7.2508 , allloss: 7.8252, dt: 1194.58ms, fracRes: 0.0157, norm(attn): 0.1182, norm(output): 0.1533, norm(x): 0.1417, norm(y): 1.0007, norm:7.9019, tok/sec: 109722.09, flops:42.75, batch-reuse:1
@ 633 train 7.2283 , allloss: 7.8059, dt: 1226.85ms, fracRes: 0.0153, norm(attn): 0.1177, norm(output): 0.1553, norm(x): 0.1424, norm(y): 1.0007, norm:16.9257, tok/sec: 106836.47, flops:41.62, batch-reuse:1
@ 634 train 6.9952 , allloss: 7.5462, dt: 1248.63ms, fracRes: 0.0165, norm(attn): 0.1182, norm(output): 0.1543, norm(x): 0.1415, norm(y): 1.0007, norm:10.8314, tok/sec: 104972.65, flops:40.90, batch-reuse:1
@ 635 train 7.2123 , allloss: 7.7622, dt: 1218.69ms, fracRes: 0.0158, norm(attn): 0.1235, norm(output): 0.1523, norm(x): 0.1404, norm(y): 1.0007, norm:21.5139, tok/sec: 107551.81, flops:41.90, batch-reuse:1
@ 636 train 7.1939 , allloss: 7.7587, dt: 1210.53ms, fracRes: 0.0147, norm(attn): 0.1260, norm(output): 0.1504, norm(x): 0.1400, norm(y): 1.0008, norm:13.1348, tok/sec: 108276.43, flops:42.18, batch-reuse:1
@ 637 train 7.1017 , allloss: 7.7024, dt: 1174.20ms, fracRes: 0.0134, norm(attn): 0.1270, norm(output): 0.1523, norm(x): 0.1413, norm(y): 1.0009, norm:31.2959, tok/sec: 111626.48, flops:43.49, batch-reuse:1
@ 638 train 7.0728 , allloss: 7.6749, dt: 1214.53ms, fracRes: 0.0134, norm(attn): 0.1260, norm(output): 0.1533, norm(x): 0.1414, norm(y): 1.0008, norm:21.2298, tok/sec: 107920.28, flops:42.05, batch-reuse:1
@ 639 train 7.1760 , allloss: 7.7345, dt: 1198.90ms, fracRes: 0.0155, norm(attn): 0.1250, norm(output): 0.1543, norm(x): 0.1410, norm(y): 1.0008, norm:22.6024, tok/sec: 109327.06, flops:42.59, batch-reuse:1
@ 640 train 7.0714 , allloss: 7.6039, dt: 1199.93ms, fracRes: 0.0167, norm(attn): 0.1250, norm(output): 0.1533, norm(x): 0.1408, norm(y): 1.0008, norm:12.6441, tok/sec: 109232.91, flops:42.56, batch-reuse:1
@ 641 train 7.2186 , allloss: 7.7611, dt: 1212.26ms, fracRes: 0.0155, norm(attn): 0.1279, norm(output): 0.1553, norm(x): 0.1435, norm(y): 1.0009, norm:22.4685, tok/sec: 108121.59, flops:42.12, batch-reuse:1
@ 642 train 7.0288 , allloss: 7.5643, dt: 1242.75ms, fracRes: 0.0156, norm(attn): 0.1260, norm(output): 0.1553, norm(x): 0.1432, norm(y): 1.0008, norm:19.1416, tok/sec: 105469.15, flops:41.09, batch-reuse:1
@ 643 train 7.0211 , allloss: 7.5384, dt: 1191.51ms, fracRes: 0.0169, norm(attn): 0.1211, norm(output): 0.1543, norm(x): 0.1423, norm(y): 1.0007, norm:14.2162, tok/sec: 110005.07, flops:42.86, batch-reuse:1
@ 644 train 7.2160 , allloss: 7.7532, dt: 1208.67ms, fracRes: 0.0148, norm(attn): 0.1250, norm(output): 0.1543, norm(x): 0.1421, norm(y): 1.0007, norm:12.6733, tok/sec: 108443.09, flops:42.25, batch-reuse:1
@ 645 train 7.1180 , allloss: 7.6797, dt: 1201.20ms, fracRes: 0.0163, norm(attn): 0.1221, norm(output): 0.1523, norm(x): 0.1411, norm(y): 1.0007, norm:5.9957, tok/sec: 109117.48, flops:42.51, batch-reuse:1
@ 646 train 7.0156 , allloss: 7.5860, dt: 1194.23ms, fracRes: 0.0167, norm(attn): 0.1182, norm(output): 0.1523, norm(x): 0.1412, norm(y): 1.0007, norm:11.3572, tok/sec: 109754.20, flops:42.76, batch-reuse:1
@ 647 train 7.0694 , allloss: 7.6036, dt: 1210.69ms, fracRes: 0.0204, norm(attn): 0.1167, norm(output): 0.1543, norm(x): 0.1412, norm(y): 1.0006, norm:19.6724, tok/sec: 108261.93, flops:42.18, batch-reuse:1
@ 648 train 6.9897 , allloss: 7.4989, dt: 1236.00ms, fracRes: 0.0224, norm(attn): 0.1172, norm(output): 0.1543, norm(x): 0.1416, norm(y): 1.0006, norm:21.4422, tok/sec: 106045.73, flops:41.32, batch-reuse:1
@ 649 train 7.0833 , allloss: 7.5922, dt: 1213.93ms, fracRes: 0.0233, norm(attn): 0.1177, norm(output): 0.1553, norm(x): 0.1427, norm(y): 1.0006, norm:8.8936, tok/sec: 107972.90, flops:42.07, batch-reuse:1
@ 650 train 6.9952 , allloss: 7.5225, dt: 1193.03ms, fracRes: 0.0236, norm(attn): 0.1177, norm(output): 0.1553, norm(x): 0.1434, norm(y): 1.0007, norm:16.1852, tok/sec: 109864.85, flops:42.80, batch-reuse:1
@ 651 train 7.0601 , allloss: 7.5862, dt: 1231.10ms, fracRes: 0.0243, norm(attn): 0.1221, norm(output): 0.1553, norm(x): 0.1436, norm(y): 1.0007, norm:14.3710, tok/sec: 106466.97, flops:41.48, batch-reuse:1
@ 652 train 6.9540 , allloss: 7.4519, dt: 1193.10ms, fracRes: 0.0309, norm(attn): 0.1177, norm(output): 0.1543, norm(x): 0.1420, norm(y): 1.0007, norm:17.6860, tok/sec: 109858.71, flops:42.80, batch-reuse:1
@ 653 train 6.9615 , allloss: 7.4646, dt: 1174.22ms, fracRes: 0.0319, norm(attn): 0.1177, norm(output): 0.1553, norm(x): 0.1422, norm(y): 1.0007, norm:9.0544, tok/sec: 111624.96, flops:43.49, batch-reuse:1
@ 654 train 7.0343 , allloss: 7.5341, dt: 1197.98ms, fracRes: 0.0318, norm(attn): 0.1167, norm(output): 0.1562, norm(x): 0.1439, norm(y): 1.0007, norm:13.0851, tok/sec: 109411.17, flops:42.63, batch-reuse:1
@ 655 train 6.9992 , allloss: 7.5062, dt: 1202.60ms, fracRes: 0.0292, norm(attn): 0.1206, norm(output): 0.1562, norm(x): 0.1436, norm(y): 1.0007, norm:10.0931, tok/sec: 108990.17, flops:42.46, batch-reuse:1
@ 656 train 7.0273 , allloss: 7.5335, dt: 1247.27ms, fracRes: 0.0329, norm(attn): 0.1201, norm(output): 0.1553, norm(x): 0.1427, norm(y): 1.0006, norm:19.5329, tok/sec: 105087.02, flops:40.94, batch-reuse:1
@ 657 train 7.0246 , allloss: 7.5449, dt: 1237.38ms, fracRes: 0.0307, norm(attn): 0.1250, norm(output): 0.1543, norm(x): 0.1426, norm(y): 1.0007, norm:15.3120, tok/sec: 105926.93, flops:41.27, batch-reuse:1
@ 658 train 7.0849 , allloss: 7.6342, dt: 1226.23ms, fracRes: 0.0261, norm(attn): 0.1270, norm(output): 0.1553, norm(x): 0.1440, norm(y): 1.0007, norm:15.2719, tok/sec: 106890.46, flops:41.64, batch-reuse:1
@ 659 train 7.0495 , allloss: 7.5871, dt: 1205.70ms, fracRes: 0.0314, norm(attn): 0.1216, norm(output): 0.1562, norm(x): 0.1431, norm(y): 1.0007, norm:22.9779, tok/sec: 108710.13, flops:42.35, batch-reuse:1
@ 660 train 7.0774 , allloss: 7.6031, dt: 1196.35ms, fracRes: 0.0302, norm(attn): 0.1260, norm(output): 0.1553, norm(x): 0.1431, norm(y): 1.0007, norm:9.8989, tok/sec: 109559.86, flops:42.68, batch-reuse:1
@ 661 train 7.0383 , allloss: 7.5588, dt: 1204.16ms, fracRes: 0.0299, norm(attn): 0.1250, norm(output): 0.1553, norm(x): 0.1430, norm(y): 1.0007, norm:19.3161, tok/sec: 108849.41, flops:42.41, batch-reuse:1
@ 662 train 7.0761 , allloss: 7.5974, dt: 1217.01ms, fracRes: 0.0332, norm(attn): 0.1182, norm(output): 0.1553, norm(x): 0.1437, norm(y): 1.0006, norm:16.7640, tok/sec: 107700.38, flops:41.96, batch-reuse:1
@ 663 train 7.0376 , allloss: 7.5685, dt: 1206.87ms, fracRes: 0.0351, norm(attn): 0.1162, norm(output): 0.1562, norm(x): 0.1450, norm(y): 1.0005, norm:11.0727, tok/sec: 108604.92, flops:42.31, batch-reuse:1
@ 664 train 7.0215 , allloss: 7.5823, dt: 1195.87ms, fracRes: 0.0349, norm(attn): 0.1177, norm(output): 0.1562, norm(x): 0.1445, norm(y): 1.0006, norm:27.1498, tok/sec: 109603.70, flops:42.70, batch-reuse:1
@ 665 train 6.9968 , allloss: 7.5656, dt: 1201.66ms, fracRes: 0.0404, norm(attn): 0.1118, norm(output): 0.1562, norm(x): 0.1442, norm(y): 1.0006, norm:9.0211, tok/sec: 109075.98, flops:42.50, batch-reuse:1
@ 666 train 6.9012 , allloss: 7.3978, dt: 1192.31ms, fracRes: 0.0503, norm(attn): 0.1104, norm(output): 0.1562, norm(x): 0.1449, norm(y): 1.0007, norm:23.7101, tok/sec: 109931.44, flops:42.83, batch-reuse:1
@ 667 train 6.8533 , allloss: 7.3251, dt: 1187.45ms, fracRes: 0.0473, norm(attn): 0.1123, norm(output): 0.1562, norm(x): 0.1454, norm(y): 1.0007, norm:9.2061, tok/sec: 110381.36, flops:43.00, batch-reuse:1
@ 668 train 7.1061 , allloss: 7.5682, dt: 1216.96ms, fracRes: 0.0403, norm(attn): 0.1172, norm(output): 0.1611, norm(x): 0.1483, norm(y): 1.0007, norm:29.5500, tok/sec: 107704.53, flops:41.96, batch-reuse:1
@ 669 train 7.0549 , allloss: 7.4974, dt: 1196.31ms, fracRes: 0.0439, norm(attn): 0.1167, norm(output): 0.1611, norm(x): 0.1497, norm(y): 1.0007, norm:27.0391, tok/sec: 109563.70, flops:42.69, batch-reuse:1
@ 670 train 7.0512 , allloss: 7.4819, dt: 1216.16ms, fracRes: 0.0560, norm(attn): 0.1138, norm(output): 0.1602, norm(x): 0.1490, norm(y): 1.0007, norm:8.5308, tok/sec: 107774.97, flops:41.99, batch-reuse:1
@ 671 train 6.9307 , allloss: 7.3416, dt: 1195.76ms, fracRes: 0.0690, norm(attn): 0.1123, norm(output): 0.1572, norm(x): 0.1468, norm(y): 1.0007, norm:10.7408, tok/sec: 109613.82, flops:42.71, batch-reuse:1
@ 672 train 6.9447 , allloss: 7.3780, dt: 1230.09ms, fracRes: 0.0591, norm(attn): 0.1162, norm(output): 0.1572, norm(x): 0.1458, norm(y): 1.0008, norm:8.0914, tok/sec: 106554.42, flops:41.51, batch-reuse:1
@ 673 train 6.9780 , allloss: 7.4413, dt: 1200.61ms, fracRes: 0.0529, norm(attn): 0.1152, norm(output): 0.1582, norm(x): 0.1473, norm(y): 1.0008, norm:13.3676, tok/sec: 109171.40, flops:42.53, batch-reuse:1
@ 674 train 6.9966 , allloss: 7.4569, dt: 1210.57ms, fracRes: 0.0559, norm(attn): 0.1118, norm(output): 0.1592, norm(x): 0.1480, norm(y): 1.0007, norm:10.4421, tok/sec: 108272.66, flops:42.18, batch-reuse:1
@ 675 train 6.8792 , allloss: 7.3087, dt: 1183.30ms, fracRes: 0.0728, norm(attn): 0.1094, norm(output): 0.1572, norm(x): 0.1461, norm(y): 1.0007, norm:8.7912, tok/sec: 110768.17, flops:43.16, batch-reuse:1
@ 676 train 6.9811 , allloss: 7.4181, dt: 1202.60ms, fracRes: 0.0703, norm(attn): 0.1113, norm(output): 0.1582, norm(x): 0.1472, norm(y): 1.0007, norm:12.0924, tok/sec: 108990.56, flops:42.46, batch-reuse:1
@ 677 train 7.1038 , allloss: 7.5552, dt: 1218.44ms, fracRes: 0.0578, norm(attn): 0.1147, norm(output): 0.1592, norm(x): 0.1483, norm(y): 1.0007, norm:8.4627, tok/sec: 107573.68, flops:41.91, batch-reuse:1
@ 678 train 6.9076 , allloss: 7.3594, dt: 1208.51ms, fracRes: 0.0572, norm(attn): 0.1123, norm(output): 0.1582, norm(x): 0.1466, norm(y): 1.0007, norm:11.3209, tok/sec: 108457.34, flops:42.25, batch-reuse:1
@ 679 train 6.9564 , allloss: 7.4107, dt: 1234.31ms, fracRes: 0.0580, norm(attn): 0.1152, norm(output): 0.1572, norm(x): 0.1465, norm(y): 1.0006, norm:8.5203, tok/sec: 106190.59, flops:41.37, batch-reuse:1
@ 680 train 6.9364 , allloss: 7.4127, dt: 1231.78ms, fracRes: 0.0560, norm(attn): 0.1167, norm(output): 0.1562, norm(x): 0.1448, norm(y): 1.0007, norm:11.5797, tok/sec: 106408.79, flops:41.46, batch-reuse:1
@ 681 train 6.9571 , allloss: 7.4455, dt: 1227.47ms, fracRes: 0.0564, norm(attn): 0.1152, norm(output): 0.1562, norm(x): 0.1451, norm(y): 1.0007, norm:11.6140, tok/sec: 106781.88, flops:41.60, batch-reuse:1
@ 682 train 6.9573 , allloss: 7.4368, dt: 1195.27ms, fracRes: 0.0559, norm(attn): 0.1147, norm(output): 0.1572, norm(x): 0.1460, norm(y): 1.0006, norm:6.1711, tok/sec: 109658.64, flops:42.72, batch-reuse:1
@ 683 train 6.9421 , allloss: 7.4034, dt: 1178.91ms, fracRes: 0.0539, norm(attn): 0.1187, norm(output): 0.1572, norm(x): 0.1463, norm(y): 1.0006, norm:10.6753, tok/sec: 111180.44, flops:43.32, batch-reuse:1
@ 684 train 6.8765 , allloss: 7.3134, dt: 1204.29ms, fracRes: 0.0562, norm(attn): 0.1211, norm(output): 0.1562, norm(x): 0.1442, norm(y): 1.0006, norm:6.3226, tok/sec: 108837.24, flops:42.40, batch-reuse:1
@ 685 train 6.9805 , allloss: 7.4256, dt: 1205.97ms, fracRes: 0.0528, norm(attn): 0.1196, norm(output): 0.1562, norm(x): 0.1431, norm(y): 1.0006, norm:12.8383, tok/sec: 108686.40, flops:42.34, batch-reuse:1
@ 686 train 7.0629 , allloss: 7.5051, dt: 1222.88ms, fracRes: 0.0518, norm(attn): 0.1172, norm(output): 0.1562, norm(x): 0.1445, norm(y): 1.0007, norm:15.4307, tok/sec: 107182.97, flops:41.76, batch-reuse:1
@ 687 train 6.9360 , allloss: 7.3750, dt: 1196.49ms, fracRes: 0.0536, norm(attn): 0.1172, norm(output): 0.1562, norm(x): 0.1438, norm(y): 1.0007, norm:7.6329, tok/sec: 109547.48, flops:42.68, batch-reuse:1
@ 688 train 6.9481 , allloss: 7.3937, dt: 1217.94ms, fracRes: 0.0573, norm(attn): 0.1177, norm(output): 0.1562, norm(x): 0.1438, norm(y): 1.0006, norm:6.7120, tok/sec: 107617.54, flops:41.93, batch-reuse:1
@ 689 train 6.9299 , allloss: 7.3815, dt: 1244.58ms, fracRes: 0.0600, norm(attn): 0.1172, norm(output): 0.1553, norm(x): 0.1431, norm(y): 1.0007, norm:14.8096, tok/sec: 105314.16, flops:41.03, batch-reuse:1
@ 690 train 6.9469 , allloss: 7.3829, dt: 1239.36ms, fracRes: 0.0678, norm(attn): 0.1162, norm(output): 0.1543, norm(x): 0.1423, norm(y): 1.0007, norm:8.7652, tok/sec: 105757.52, flops:41.20, batch-reuse:1
@ 691 train 6.9216 , allloss: 7.3869, dt: 1242.78ms, fracRes: 0.0611, norm(attn): 0.1152, norm(output): 0.1553, norm(x): 0.1416, norm(y): 1.0007, norm:10.6489, tok/sec: 105466.37, flops:41.09, batch-reuse:1
@ 692 train 6.8591 , allloss: 7.3030, dt: 1217.98ms, fracRes: 0.0645, norm(attn): 0.1138, norm(output): 0.1533, norm(x): 0.1409, norm(y): 1.0007, norm:11.7390, tok/sec: 107614.63, flops:41.93, batch-reuse:1
@ 693 train 6.9454 , allloss: 7.3785, dt: 1203.40ms, fracRes: 0.0636, norm(attn): 0.1167, norm(output): 0.1533, norm(x): 0.1412, norm(y): 1.0007, norm:18.4668, tok/sec: 108917.71, flops:42.43, batch-reuse:1
@ 694 train 6.8625 , allloss: 7.3071, dt: 1206.52ms, fracRes: 0.0623, norm(attn): 0.1133, norm(output): 0.1553, norm(x): 0.1417, norm(y): 1.0006, norm:8.2506, tok/sec: 108636.10, flops:42.32, batch-reuse:1
@ 695 train 7.0023 , allloss: 7.4541, dt: 1210.66ms, fracRes: 0.0640, norm(attn): 0.1094, norm(output): 0.1553, norm(x): 0.1425, norm(y): 1.0006, norm:23.0009, tok/sec: 108264.85, flops:42.18, batch-reuse:1
@ 696 train 6.8553 , allloss: 7.3108, dt: 1243.80ms, fracRes: 0.0638, norm(attn): 0.1084, norm(output): 0.1553, norm(x): 0.1422, norm(y): 1.0006, norm:16.1020, tok/sec: 105379.95, flops:41.06, batch-reuse:1
@ 697 train 6.9405 , allloss: 7.3947, dt: 1246.50ms, fracRes: 0.0638, norm(attn): 0.1099, norm(output): 0.1553, norm(x): 0.1424, norm(y): 1.0006, norm:26.9572, tok/sec: 105152.45, flops:40.97, batch-reuse:1
@ 698 train 7.0035 , allloss: 7.4449, dt: 1244.70ms, fracRes: 0.0629, norm(attn): 0.1104, norm(output): 0.1553, norm(x): 0.1419, norm(y): 1.0006, norm:21.4635, tok/sec: 105304.46, flops:41.03, batch-reuse:1
@ 699 train 7.0067 , allloss: 7.4593, dt: 1251.76ms, fracRes: 0.0562, norm(attn): 0.1104, norm(output): 0.1553, norm(x): 0.1425, norm(y): 1.0006, norm:16.1774, tok/sec: 104710.17, flops:40.80, batch-reuse:1
@ 700 train 6.9250 , allloss: 7.3965, dt: 1241.20ms, fracRes: 0.0565, norm(attn): 0.1099, norm(output): 0.1543, norm(x): 0.1415, norm(y): 1.0006, norm:13.2784, tok/sec: 105601.26, flops:41.14, batch-reuse:1
@ 701 train 7.0069 , allloss: 7.5210, dt: 1227.88ms, fracRes: 0.0531, norm(attn): 0.1113, norm(output): 0.1543, norm(x): 0.1412, norm(y): 1.0006, norm:15.2751, tok/sec: 106746.44, flops:41.59, batch-reuse:1
@ 702 train 6.9668 , allloss: 7.4294, dt: 1243.28ms, fracRes: 0.0579, norm(attn): 0.1123, norm(output): 0.1533, norm(x): 0.1410, norm(y): 1.0006, norm:7.2356, tok/sec: 105423.98, flops:41.07, batch-reuse:1
@ 703 train 6.9057 , allloss: 7.3508, dt: 1237.21ms, fracRes: 0.0600, norm(attn): 0.1118, norm(output): 0.1533, norm(x): 0.1405, norm(y): 1.0005, norm:7.7027, tok/sec: 105941.63, flops:41.27, batch-reuse:1
@ 704 train 6.8489 , allloss: 7.3066, dt: 1247.69ms, fracRes: 0.0666, norm(attn): 0.1094, norm(output): 0.1523, norm(x): 0.1397, norm(y): 1.0005, norm:13.6271, tok/sec: 105052.08, flops:40.93, batch-reuse:1
@ 705 train 6.8517 , allloss: 7.3330, dt: 1216.04ms, fracRes: 0.0676, norm(attn): 0.1074, norm(output): 0.1543, norm(x): 0.1398, norm(y): 1.0005, norm:6.4606, tok/sec: 107786.17, flops:41.99, batch-reuse:1
@ 706 train 6.8748 , allloss: 7.3999, dt: 1215.47ms, fracRes: 0.0647, norm(attn): 0.1084, norm(output): 0.1553, norm(x): 0.1409, norm(y): 1.0005, norm:10.2316, tok/sec: 107836.81, flops:42.01, batch-reuse:1
@ 707 train 6.9244 , allloss: 7.4004, dt: 1230.02ms, fracRes: 0.0732, norm(attn): 0.1084, norm(output): 0.1553, norm(x): 0.1412, norm(y): 1.0004, norm:16.6175, tok/sec: 106560.84, flops:41.52, batch-reuse:1
@ 708 train 6.8614 , allloss: 7.3284, dt: 1233.63ms, fracRes: 0.0720, norm(attn): 0.1089, norm(output): 0.1543, norm(x): 0.1415, norm(y): 1.0005, norm:6.8202, tok/sec: 106248.96, flops:41.39, batch-reuse:1
@ 709 train 6.8478 , allloss: 7.3150, dt: 1210.78ms, fracRes: 0.0721, norm(attn): 0.1089, norm(output): 0.1553, norm(x): 0.1411, norm(y): 1.0004, norm:7.5597, tok/sec: 108254.55, flops:42.18, batch-reuse:1
@ 710 train 6.9194 , allloss: 7.4261, dt: 1203.27ms, fracRes: 0.0660, norm(attn): 0.1104, norm(output): 0.1533, norm(x): 0.1402, norm(y): 1.0005, norm:8.5967, tok/sec: 108930.12, flops:42.44, batch-reuse:1
@ 711 train 6.9308 , allloss: 7.4415, dt: 1191.97ms, fracRes: 0.0696, norm(attn): 0.1133, norm(output): 0.1504, norm(x): 0.1382, norm(y): 1.0004, norm:12.6966, tok/sec: 109962.22, flops:42.84, batch-reuse:1
@ 712 train 6.8055 , allloss: 7.3270, dt: 1218.13ms, fracRes: 0.0679, norm(attn): 0.1113, norm(output): 0.1494, norm(x): 0.1367, norm(y): 1.0004, norm:10.7645, tok/sec: 107600.69, flops:41.92, batch-reuse:1
@ 713 train 6.9165 , allloss: 7.4250, dt: 1227.31ms, fracRes: 0.0616, norm(attn): 0.1113, norm(output): 0.1504, norm(x): 0.1378, norm(y): 1.0004, norm:10.7594, tok/sec: 106796.40, flops:41.61, batch-reuse:1
@ 714 train 6.7649 , allloss: 7.2567, dt: 1210.21ms, fracRes: 0.0638, norm(attn): 0.1113, norm(output): 0.1504, norm(x): 0.1373, norm(y): 1.0004, norm:9.0554, tok/sec: 108305.46, flops:42.20, batch-reuse:1
@ 715 train 6.8089 , allloss: 7.3707, dt: 1219.78ms, fracRes: 0.0619, norm(attn): 0.1094, norm(output): 0.1504, norm(x): 0.1377, norm(y): 1.0004, norm:12.9268, tok/sec: 107455.72, flops:41.86, batch-reuse:1
@ 716 train 6.8528 , allloss: 7.3848, dt: 1247.11ms, fracRes: 0.0637, norm(attn): 0.1094, norm(output): 0.1514, norm(x): 0.1390, norm(y): 1.0004, norm:7.9579, tok/sec: 105100.42, flops:40.95, batch-reuse:1
@ 717 train 6.7363 , allloss: 7.2129, dt: 1231.66ms, fracRes: 0.0654, norm(attn): 0.1113, norm(output): 0.1533, norm(x): 0.1396, norm(y): 1.0004, norm:13.1487, tok/sec: 106419.22, flops:41.46, batch-reuse:1
@ 718 train 6.8858 , allloss: 7.3814, dt: 1210.23ms, fracRes: 0.0612, norm(attn): 0.1157, norm(output): 0.1514, norm(x): 0.1390, norm(y): 1.0004, norm:10.9327, tok/sec: 108303.20, flops:42.19, batch-reuse:1
@ 719 train 6.7904 , allloss: 7.3342, dt: 1232.00ms, fracRes: 0.0590, norm(attn): 0.1157, norm(output): 0.1504, norm(x): 0.1376, norm(y): 1.0004, norm:6.0691, tok/sec: 106389.70, flops:41.45, batch-reuse:1
@ 720 train 6.7747 , allloss: 7.3439, dt: 1235.83ms, fracRes: 0.0609, norm(attn): 0.1162, norm(output): 0.1494, norm(x): 0.1372, norm(y): 1.0004, norm:7.1483, tok/sec: 106060.18, flops:41.32, batch-reuse:1
@ 721 train 6.7707 , allloss: 7.3234, dt: 1237.15ms, fracRes: 0.0598, norm(attn): 0.1162, norm(output): 0.1484, norm(x): 0.1373, norm(y): 1.0004, norm:16.7175, tok/sec: 105946.47, flops:41.28, batch-reuse:1
@ 722 train 6.8393 , allloss: 7.3707, dt: 1204.93ms, fracRes: 0.0602, norm(attn): 0.1167, norm(output): 0.1504, norm(x): 0.1378, norm(y): 1.0004, norm:9.0674, tok/sec: 108779.89, flops:42.38, batch-reuse:1
@ 723 train 6.8222 , allloss: 7.3926, dt: 1200.90ms, fracRes: 0.0536, norm(attn): 0.1172, norm(output): 0.1484, norm(x): 0.1364, norm(y): 1.0004, norm:7.4858, tok/sec: 109144.93, flops:42.52, batch-reuse:1
@ 724 train 6.8996 , allloss: 7.5314, dt: 1227.79ms, fracRes: 0.0468, norm(attn): 0.1177, norm(output): 0.1465, norm(x): 0.1353, norm(y): 1.0004, norm:30.5774, tok/sec: 106754.28, flops:41.59, batch-reuse:1
@ 725 train 6.8364 , allloss: 7.4745, dt: 1253.47ms, fracRes: 0.0457, norm(attn): 0.1177, norm(output): 0.1465, norm(x): 0.1347, norm(y): 1.0003, norm:15.3611, tok/sec: 104567.29, flops:40.74, batch-reuse:1
@ 726 train 6.9074 , allloss: 7.4970, dt: 1247.62ms, fracRes: 0.0465, norm(attn): 0.1206, norm(output): 0.1504, norm(x): 0.1366, norm(y): 1.0003, norm:19.0987, tok/sec: 105057.34, flops:40.93, batch-reuse:1
@ 727 train 6.8740 , allloss: 7.4207, dt: 1251.65ms, fracRes: 0.0476, norm(attn): 0.1211, norm(output): 0.1504, norm(x): 0.1374, norm(y): 1.0003, norm:14.2979, tok/sec: 104719.30, flops:40.80, batch-reuse:1
@ 728 train 6.8955 , allloss: 7.4497, dt: 1256.44ms, fracRes: 0.0497, norm(attn): 0.1187, norm(output): 0.1504, norm(x): 0.1375, norm(y): 1.0004, norm:18.9983, tok/sec: 104320.27, flops:40.64, batch-reuse:1
@ 729 train 6.8535 , allloss: 7.4340, dt: 1230.95ms, fracRes: 0.0473, norm(attn): 0.1167, norm(output): 0.1533, norm(x): 0.1390, norm(y): 1.0005, norm:19.0508, tok/sec: 106480.62, flops:41.48, batch-reuse:1
@ 730 train 6.8038 , allloss: 7.3811, dt: 1193.43ms, fracRes: 0.0463, norm(attn): 0.1167, norm(output): 0.1533, norm(x): 0.1399, norm(y): 1.0004, norm:8.3539, tok/sec: 109827.56, flops:42.79, batch-reuse:1
@ 731 train 6.8627 , allloss: 7.4618, dt: 1196.07ms, fracRes: 0.0443, norm(attn): 0.1172, norm(output): 0.1484, norm(x): 0.1366, norm(y): 1.0004, norm:14.8772, tok/sec: 109585.45, flops:42.69, batch-reuse:1
@ 732 train 6.8085 , allloss: 7.4285, dt: 1196.25ms, fracRes: 0.0431, norm(attn): 0.1182, norm(output): 0.1484, norm(x): 0.1354, norm(y): 1.0004, norm:14.1456, tok/sec: 109568.90, flops:42.69, batch-reuse:1
@ 733 train 6.8164 , allloss: 7.4434, dt: 1212.52ms, fracRes: 0.0429, norm(attn): 0.1182, norm(output): 0.1465, norm(x): 0.1341, norm(y): 1.0004, norm:8.3331, tok/sec: 108098.51, flops:42.12, batch-reuse:1
@ 734 train 6.8051 , allloss: 7.4223, dt: 1190.17ms, fracRes: 0.0415, norm(attn): 0.1177, norm(output): 0.1465, norm(x): 0.1349, norm(y): 1.0004, norm:10.7647, tok/sec: 110128.78, flops:42.91, batch-reuse:1
@ 735 train 6.8283 , allloss: 7.4024, dt: 1211.53ms, fracRes: 0.0435, norm(attn): 0.1172, norm(output): 0.1465, norm(x): 0.1359, norm(y): 1.0004, norm:10.1589, tok/sec: 108187.41, flops:42.15, batch-reuse:1
@ 736 train 6.8510 , allloss: 7.4057, dt: 1248.97ms, fracRes: 0.0444, norm(attn): 0.1172, norm(output): 0.1494, norm(x): 0.1370, norm(y): 1.0005, norm:6.9706, tok/sec: 104944.27, flops:40.89, batch-reuse:1
@ 737 train 6.7666 , allloss: 7.3187, dt: 1230.23ms, fracRes: 0.0494, norm(attn): 0.1152, norm(output): 0.1504, norm(x): 0.1373, norm(y): 1.0006, norm:8.5493, tok/sec: 106542.34, flops:41.51, batch-reuse:1
@ 738 train 6.8130 , allloss: 7.3609, dt: 1198.38ms, fracRes: 0.0478, norm(attn): 0.1094, norm(output): 0.1504, norm(x): 0.1371, norm(y): 1.0006, norm:10.0688, tok/sec: 109374.13, flops:42.61, batch-reuse:1
@ 739 train 6.8559 , allloss: 7.4353, dt: 1201.79ms, fracRes: 0.0476, norm(attn): 0.1118, norm(output): 0.1484, norm(x): 0.1366, norm(y): 1.0006, norm:18.8183, tok/sec: 109063.80, flops:42.49, batch-reuse:1
@ 740 train 6.7434 , allloss: 7.3191, dt: 1217.18ms, fracRes: 0.0484, norm(attn): 0.1099, norm(output): 0.1475, norm(x): 0.1359, norm(y): 1.0006, norm:6.8533, tok/sec: 107684.64, flops:41.95, batch-reuse:1
@ 741 train 6.9080 , allloss: 7.4672, dt: 1237.33ms, fracRes: 0.0496, norm(attn): 0.1128, norm(output): 0.1504, norm(x): 0.1378, norm(y): 1.0007, norm:16.2663, tok/sec: 105931.45, flops:41.27, batch-reuse:1
@ 742 train 6.9605 , allloss: 7.5085, dt: 1233.90ms, fracRes: 0.0527, norm(attn): 0.1143, norm(output): 0.1504, norm(x): 0.1377, norm(y): 1.0007, norm:11.0749, tok/sec: 106225.52, flops:41.39, batch-reuse:1
@ 743 train 6.9864 , allloss: 7.5187, dt: 1206.12ms, fracRes: 0.0544, norm(attn): 0.1143, norm(output): 0.1504, norm(x): 0.1370, norm(y): 1.0007, norm:17.4079, tok/sec: 108672.31, flops:42.34, batch-reuse:1
@ 744 train 6.9297 , allloss: 7.4570, dt: 1219.70ms, fracRes: 0.0523, norm(attn): 0.1143, norm(output): 0.1475, norm(x): 0.1351, norm(y): 1.0007, norm:14.1225, tok/sec: 107462.17, flops:41.87, batch-reuse:1
@ 745 train 6.8526 , allloss: 7.4002, dt: 1236.90ms, fracRes: 0.0522, norm(attn): 0.1167, norm(output): 0.1465, norm(x): 0.1345, norm(y): 1.0007, norm:6.7794, tok/sec: 105967.83, flops:41.29, batch-reuse:1
@ 746 train 6.9311 , allloss: 7.5279, dt: 1231.71ms, fracRes: 0.0465, norm(attn): 0.1172, norm(output): 0.1484, norm(x): 0.1364, norm(y): 1.0007, norm:12.4918, tok/sec: 106414.25, flops:41.46, batch-reuse:1
@ 747 train 6.8827 , allloss: 7.4308, dt: 1220.96ms, fracRes: 0.0489, norm(attn): 0.1123, norm(output): 0.1475, norm(x): 0.1356, norm(y): 1.0006, norm:6.2061, tok/sec: 107352.00, flops:41.82, batch-reuse:1
@ 748 train 6.9292 , allloss: 7.4577, dt: 1193.19ms, fracRes: 0.0544, norm(attn): 0.1113, norm(output): 0.1475, norm(x): 0.1349, norm(y): 1.0007, norm:10.4170, tok/sec: 109849.88, flops:42.80, batch-reuse:1
@ 749 train 7.0537 , allloss: 7.5587, dt: 1180.66ms, fracRes: 0.0538, norm(attn): 0.1113, norm(output): 0.1494, norm(x): 0.1371, norm(y): 1.0007, norm:11.2331, tok/sec: 111016.01, flops:43.25, batch-reuse:1
@ 750 train 6.9751 , allloss: 7.4670, dt: 1205.60ms, fracRes: 0.0609, norm(attn): 0.1143, norm(output): 0.1514, norm(x): 0.1382, norm(y): 1.0008, norm:22.5442, tok/sec: 108719.76, flops:42.36, batch-reuse:1
@ 751 train 6.9066 , allloss: 7.3676, dt: 1198.56ms, fracRes: 0.0665, norm(attn): 0.1084, norm(output): 0.1514, norm(x): 0.1389, norm(y): 1.0008, norm:10.7937, tok/sec: 109357.96, flops:42.61, batch-reuse:1
@ 752 train 6.8839 , allloss: 7.3724, dt: 1192.69ms, fracRes: 0.0647, norm(attn): 0.1104, norm(output): 0.1504, norm(x): 0.1374, norm(y): 1.0008, norm:7.4878, tok/sec: 109895.67, flops:42.82, batch-reuse:1
@ 753 train 6.9071 , allloss: 7.4254, dt: 1206.47ms, fracRes: 0.0577, norm(attn): 0.1094, norm(output): 0.1504, norm(x): 0.1369, norm(y): 1.0008, norm:11.6991, tok/sec: 108640.87, flops:42.33, batch-reuse:1
@ 754 train 6.8618 , allloss: 7.3706, dt: 1194.07ms, fracRes: 0.0599, norm(attn): 0.1099, norm(output): 0.1475, norm(x): 0.1342, norm(y): 1.0007, norm:9.1239, tok/sec: 109769.28, flops:42.77, batch-reuse:1
@ 755 train 6.9593 , allloss: 7.4389, dt: 1180.24ms, fracRes: 0.0627, norm(attn): 0.1055, norm(output): 0.1436, norm(x): 0.1330, norm(y): 1.0007, norm:11.3387, tok/sec: 111055.57, flops:43.27, batch-reuse:1
@ 756 train 6.8223 , allloss: 7.3074, dt: 1189.81ms, fracRes: 0.0637, norm(attn): 0.1099, norm(output): 0.1436, norm(x): 0.1334, norm(y): 1.0007, norm:6.8451, tok/sec: 110162.21, flops:42.92, batch-reuse:1
@ 757 train 6.8948 , allloss: 7.3984, dt: 1201.37ms, fracRes: 0.0564, norm(attn): 0.1123, norm(output): 0.1484, norm(x): 0.1358, norm(y): 1.0006, norm:9.5422, tok/sec: 109102.35, flops:42.51, batch-reuse:1
@ 758 train 6.8140 , allloss: 7.3189, dt: 1215.94ms, fracRes: 0.0599, norm(attn): 0.1177, norm(output): 0.1484, norm(x): 0.1361, norm(y): 1.0007, norm:11.6567, tok/sec: 107794.83, flops:42.00, batch-reuse:1
@ 759 train 6.9065 , allloss: 7.3924, dt: 1198.07ms, fracRes: 0.0660, norm(attn): 0.1118, norm(output): 0.1475, norm(x): 0.1350, norm(y): 1.0006, norm:11.2038, tok/sec: 109402.84, flops:42.62, batch-reuse:1
@ 760 train 6.8601 , allloss: 7.3379, dt: 1194.03ms, fracRes: 0.0685, norm(attn): 0.1172, norm(output): 0.1465, norm(x): 0.1346, norm(y): 1.0007, norm:6.9837, tok/sec: 109772.52, flops:42.77, batch-reuse:1
@ 761 train 6.8912 , allloss: 7.3707, dt: 1214.39ms, fracRes: 0.0625, norm(attn): 0.1108, norm(output): 0.1465, norm(x): 0.1353, norm(y): 1.0006, norm:8.8071, tok/sec: 107932.08, flops:42.05, batch-reuse:1
@ 762 train 6.8893 , allloss: 7.3899, dt: 1272.75ms, fracRes: 0.0652, norm(attn): 0.1113, norm(output): 0.1465, norm(x): 0.1352, norm(y): 1.0006, norm:10.2462, tok/sec: 102983.06, flops:40.12, batch-reuse:1
@ 763 train 6.9364 , allloss: 7.4208, dt: 1217.33ms, fracRes: 0.0669, norm(attn): 0.1206, norm(output): 0.1484, norm(x): 0.1359, norm(y): 1.0005, norm:15.1507, tok/sec: 107671.58, flops:41.95, batch-reuse:1
@ 764 train 6.8967 , allloss: 7.3872, dt: 1222.73ms, fracRes: 0.0687, norm(attn): 0.1177, norm(output): 0.1475, norm(x): 0.1359, norm(y): 1.0005, norm:10.4992, tok/sec: 107196.20, flops:41.76, batch-reuse:1
@ 765 train 6.8448 , allloss: 7.3201, dt: 1214.33ms, fracRes: 0.0682, norm(attn): 0.1172, norm(output): 0.1504, norm(x): 0.1370, norm(y): 1.0006, norm:9.0098, tok/sec: 107938.10, flops:42.05, batch-reuse:1
@ 766 train 6.8059 , allloss: 7.2569, dt: 1215.86ms, fracRes: 0.0672, norm(attn): 0.1133, norm(output): 0.1523, norm(x): 0.1384, norm(y): 1.0006, norm:10.1008, tok/sec: 107801.58, flops:42.00, batch-reuse:1
@ 767 train 6.8663 , allloss: 7.3235, dt: 1201.18ms, fracRes: 0.0713, norm(attn): 0.1118, norm(output): 0.1504, norm(x): 0.1375, norm(y): 1.0006, norm:6.9447, tok/sec: 109119.80, flops:42.51, batch-reuse:1
@ 768 train 6.9627 , allloss: 7.4104, dt: 1211.86ms, fracRes: 0.0721, norm(attn): 0.1187, norm(output): 0.1523, norm(x): 0.1387, norm(y): 1.0005, norm:13.7499, tok/sec: 108158.07, flops:42.14, batch-reuse:1
@ 769 train 6.8339 , allloss: 7.2648, dt: 1217.80ms, fracRes: 0.0737, norm(attn): 0.1123, norm(output): 0.1504, norm(x): 0.1375, norm(y): 1.0004, norm:10.1033, tok/sec: 107630.29, flops:41.93, batch-reuse:1
@ 770 train 6.8222 , allloss: 7.3011, dt: 1211.22ms, fracRes: 0.0684, norm(attn): 0.1143, norm(output): 0.1504, norm(x): 0.1363, norm(y): 1.0004, norm:9.0551, tok/sec: 108214.49, flops:42.16, batch-reuse:1
@ 771 train 6.8351 , allloss: 7.3451, dt: 1212.37ms, fracRes: 0.0620, norm(attn): 0.1196, norm(output): 0.1504, norm(x): 0.1374, norm(y): 1.0005, norm:24.1587, tok/sec: 108112.54, flops:42.12, batch-reuse:1
@ 772 train 6.8226 , allloss: 7.3332, dt: 1220.13ms, fracRes: 0.0584, norm(attn): 0.1152, norm(output): 0.1504, norm(x): 0.1377, norm(y): 1.0005, norm:9.8478, tok/sec: 107424.33, flops:41.85, batch-reuse:1
@ 773 train 7.0148 , allloss: 7.5058, dt: 1222.67ms, fracRes: 0.0604, norm(attn): 0.1113, norm(output): 0.1504, norm(x): 0.1380, norm(y): 1.0004, norm:23.3565, tok/sec: 107201.13, flops:41.77, batch-reuse:1
@ 774 train 6.9347 , allloss: 7.4058, dt: 1192.12ms, fracRes: 0.0659, norm(attn): 0.1118, norm(output): 0.1504, norm(x): 0.1372, norm(y): 1.0004, norm:20.1162, tok/sec: 109948.33, flops:42.84, batch-reuse:1
@ 775 train 6.9489 , allloss: 7.4106, dt: 1208.22ms, fracRes: 0.0669, norm(attn): 0.1157, norm(output): 0.1504, norm(x): 0.1375, norm(y): 1.0004, norm:9.6010, tok/sec: 108483.55, flops:42.27, batch-reuse:1
@ 776 train 6.8035 , allloss: 7.2599, dt: 1205.03ms, fracRes: 0.0643, norm(attn): 0.1128, norm(output): 0.1523, norm(x): 0.1390, norm(y): 1.0003, norm:18.3870, tok/sec: 108770.80, flops:42.38, batch-reuse:1
@ 777 train 6.8355 , allloss: 7.2955, dt: 1199.50ms, fracRes: 0.0659, norm(attn): 0.1099, norm(output): 0.1533, norm(x): 0.1395, norm(y): 1.0003, norm:12.8252, tok/sec: 109272.04, flops:42.57, batch-reuse:1
@ 778 train 6.8046 , allloss: 7.2809, dt: 1198.35ms, fracRes: 0.0676, norm(attn): 0.1089, norm(output): 0.1514, norm(x): 0.1385, norm(y): 1.0003, norm:8.8943, tok/sec: 109376.96, flops:42.61, batch-reuse:1
@ 779 train 6.8473 , allloss: 7.3220, dt: 1211.81ms, fracRes: 0.0698, norm(attn): 0.1104, norm(output): 0.1504, norm(x): 0.1372, norm(y): 1.0003, norm:7.9574, tok/sec: 108162.01, flops:42.14, batch-reuse:1
@ 780 train 6.7924 , allloss: 7.2536, dt: 1185.54ms, fracRes: 0.0699, norm(attn): 0.1113, norm(output): 0.1504, norm(x): 0.1381, norm(y): 1.0003, norm:5.5820, tok/sec: 110558.75, flops:43.07, batch-reuse:1
@ 781 train 6.8112 , allloss: 7.2807, dt: 1194.07ms, fracRes: 0.0699, norm(attn): 0.1104, norm(output): 0.1514, norm(x): 0.1383, norm(y): 1.0003, norm:13.3650, tok/sec: 109769.41, flops:42.77, batch-reuse:1
@ 782 train 6.7771 , allloss: 7.2493, dt: 1189.86ms, fracRes: 0.0691, norm(attn): 0.1108, norm(output): 0.1523, norm(x): 0.1386, norm(y): 1.0003, norm:6.3029, tok/sec: 110157.93, flops:42.92, batch-reuse:1
@ 783 train 6.7869 , allloss: 7.2814, dt: 1212.08ms, fracRes: 0.0686, norm(attn): 0.1113, norm(output): 0.1533, norm(x): 0.1391, norm(y): 1.0003, norm:10.0325, tok/sec: 108138.10, flops:42.13, batch-reuse:1
@ 784 train 6.7801 , allloss: 7.2729, dt: 1228.88ms, fracRes: 0.0701, norm(attn): 0.1104, norm(output): 0.1523, norm(x): 0.1399, norm(y): 1.0003, norm:6.6802, tok/sec: 106659.69, flops:41.55, batch-reuse:1
@ 785 train 6.8082 , allloss: 7.2712, dt: 1198.04ms, fracRes: 0.0738, norm(attn): 0.1123, norm(output): 0.1543, norm(x): 0.1406, norm(y): 1.0004, norm:8.9847, tok/sec: 109405.58, flops:42.62, batch-reuse:1
@ 786 train 6.7854 , allloss: 7.2256, dt: 1217.75ms, fracRes: 0.0780, norm(attn): 0.1143, norm(output): 0.1553, norm(x): 0.1409, norm(y): 1.0004, norm:8.2856, tok/sec: 107634.14, flops:41.93, batch-reuse:1
@ 787 train 6.7739 , allloss: 7.2309, dt: 1192.95ms, fracRes: 0.0733, norm(attn): 0.1147, norm(output): 0.1533, norm(x): 0.1396, norm(y): 1.0003, norm:5.7623, tok/sec: 109872.27, flops:42.81, batch-reuse:1
@ 788 train 6.8504 , allloss: 7.3505, dt: 1206.72ms, fracRes: 0.0658, norm(attn): 0.1123, norm(output): 0.1504, norm(x): 0.1374, norm(y): 1.0003, norm:9.5772, tok/sec: 108618.33, flops:42.32, batch-reuse:1
@ 789 train 6.7171 , allloss: 7.2152, dt: 1222.88ms, fracRes: 0.0616, norm(attn): 0.1133, norm(output): 0.1504, norm(x): 0.1374, norm(y): 1.0003, norm:5.5862, tok/sec: 107182.95, flops:41.76, batch-reuse:1
@ 790 train 6.7631 , allloss: 7.2318, dt: 1234.98ms, fracRes: 0.0628, norm(attn): 0.1182, norm(output): 0.1514, norm(x): 0.1383, norm(y): 1.0003, norm:10.2159, tok/sec: 106132.62, flops:41.35, batch-reuse:1
@ 791 train 6.8873 , allloss: 7.3625, dt: 1250.15ms, fracRes: 0.0635, norm(attn): 0.1216, norm(output): 0.1514, norm(x): 0.1381, norm(y): 1.0003, norm:8.0141, tok/sec: 104844.88, flops:40.85, batch-reuse:1
@ 792 train 6.8192 , allloss: 7.2969, dt: 1238.25ms, fracRes: 0.0605, norm(attn): 0.1182, norm(output): 0.1475, norm(x): 0.1361, norm(y): 1.0003, norm:6.9660, tok/sec: 105852.43, flops:41.24, batch-reuse:1
@ 793 train 6.8309 , allloss: 7.3257, dt: 1246.50ms, fracRes: 0.0505, norm(attn): 0.1167, norm(output): 0.1504, norm(x): 0.1374, norm(y): 1.0002, norm:9.8622, tok/sec: 105152.10, flops:40.97, batch-reuse:1
@ 794 train 6.9220 , allloss: 7.4111, dt: 1220.20ms, fracRes: 0.0500, norm(attn): 0.1172, norm(output): 0.1504, norm(x): 0.1387, norm(y): 1.0003, norm:7.7514, tok/sec: 107418.41, flops:41.85, batch-reuse:1
@ 795 train 6.7284 , allloss: 7.2394, dt: 1192.56ms, fracRes: 0.0520, norm(attn): 0.1182, norm(output): 0.1475, norm(x): 0.1366, norm(y): 1.0004, norm:8.1349, tok/sec: 109908.08, flops:42.82, batch-reuse:1
@ 796 train 6.7186 , allloss: 7.2092, dt: 1210.66ms, fracRes: 0.0568, norm(attn): 0.1235, norm(output): 0.1484, norm(x): 0.1364, norm(y): 1.0004, norm:11.2044, tok/sec: 108264.55, flops:42.18, batch-reuse:1
@ 797 train 6.8101 , allloss: 7.3329, dt: 1194.94ms, fracRes: 0.0518, norm(attn): 0.1245, norm(output): 0.1484, norm(x): 0.1367, norm(y): 1.0005, norm:9.9482, tok/sec: 109688.83, flops:42.73, batch-reuse:1
@ 798 train 6.8254 , allloss: 7.3483, dt: 1224.76ms, fracRes: 0.0442, norm(attn): 0.1221, norm(output): 0.1484, norm(x): 0.1373, norm(y): 1.0003, norm:11.3311, tok/sec: 107018.16, flops:41.69, batch-reuse:1
@ 799 train 6.7884 , allloss: 7.3506, dt: 1190.87ms, fracRes: 0.0423, norm(attn): 0.1191, norm(output): 0.1494, norm(x): 0.1376, norm(y): 1.0004, norm:8.6417, tok/sec: 110064.02, flops:42.88, batch-reuse:1
@ 800 train 6.7121 , allloss: 7.2718, dt: 1202.45ms, fracRes: 0.0431, norm(attn): 0.1187, norm(output): 0.1475, norm(x): 0.1367, norm(y): 1.0003, norm:9.7516, tok/sec: 109004.01, flops:42.47, batch-reuse:1
@ 801 train 6.7503 , allloss: 7.3151, dt: 1198.76ms, fracRes: 0.0423, norm(attn): 0.1172, norm(output): 0.1494, norm(x): 0.1366, norm(y): 1.0003, norm:9.6395, tok/sec: 109339.91, flops:42.60, batch-reuse:1
@ 802 train 6.7830 , allloss: 7.3405, dt: 1213.58ms, fracRes: 0.0468, norm(attn): 0.1182, norm(output): 0.1494, norm(x): 0.1372, norm(y): 1.0004, norm:5.9034, tok/sec: 108004.11, flops:42.08, batch-reuse:1
@ 803 train 6.8178 , allloss: 7.3313, dt: 1196.53ms, fracRes: 0.0445, norm(attn): 0.1191, norm(output): 0.1494, norm(x): 0.1378, norm(y): 1.0004, norm:6.3568, tok/sec: 109543.03, flops:42.68, batch-reuse:1
@ 804 train 6.7417 , allloss: 7.2823, dt: 1216.10ms, fracRes: 0.0390, norm(attn): 0.1177, norm(output): 0.1504, norm(x): 0.1383, norm(y): 1.0004, norm:15.9300, tok/sec: 107780.19, flops:41.99, batch-reuse:1
@ 805 train 6.8072 , allloss: 7.3642, dt: 1224.66ms, fracRes: 0.0384, norm(attn): 0.1216, norm(output): 0.1484, norm(x): 0.1373, norm(y): 1.0003, norm:7.4765, tok/sec: 107027.33, flops:41.70, batch-reuse:1
@ 806 train 6.7084 , allloss: 7.2814, dt: 1211.17ms, fracRes: 0.0371, norm(attn): 0.1250, norm(output): 0.1465, norm(x): 0.1353, norm(y): 1.0004, norm:10.9731, tok/sec: 108219.37, flops:42.16, batch-reuse:1
@ 807 train 6.7303 , allloss: 7.3033, dt: 1211.20ms, fracRes: 0.0381, norm(attn): 0.1245, norm(output): 0.1484, norm(x): 0.1363, norm(y): 1.0005, norm:7.6520, tok/sec: 108216.71, flops:42.16, batch-reuse:1
@ 808 train 6.7377 , allloss: 7.2620, dt: 1184.94ms, fracRes: 0.0363, norm(attn): 0.1260, norm(output): 0.1484, norm(x): 0.1369, norm(y): 1.0004, norm:13.0498, tok/sec: 110615.27, flops:43.10, batch-reuse:1
@ 809 train 6.7238 , allloss: 7.3100, dt: 1194.98ms, fracRes: 0.0353, norm(attn): 0.1260, norm(output): 0.1465, norm(x): 0.1357, norm(y): 1.0004, norm:6.0158, tok/sec: 109685.96, flops:42.73, batch-reuse:1
@ 810 train 6.8626 , allloss: 7.5072, dt: 1199.72ms, fracRes: 0.0309, norm(attn): 0.1226, norm(output): 0.1484, norm(x): 0.1363, norm(y): 1.0005, norm:25.0208, tok/sec: 109252.19, flops:42.56, batch-reuse:1
@ 811 train 6.8322 , allloss: 7.4753, dt: 1243.15ms, fracRes: 0.0301, norm(attn): 0.1235, norm(output): 0.1465, norm(x): 0.1359, norm(y): 1.0005, norm:14.4262, tok/sec: 105435.06, flops:41.08, batch-reuse:1
@ 812 train 6.6488 , allloss: 7.2780, dt: 1245.32ms, fracRes: 0.0291, norm(attn): 0.1250, norm(output): 0.1475, norm(x): 0.1368, norm(y): 1.0004, norm:7.9347, tok/sec: 105252.06, flops:41.01, batch-reuse:1
@ 813 train 6.9217 , allloss: 7.4994, dt: 1246.89ms, fracRes: 0.0260, norm(attn): 0.1221, norm(output): 0.1514, norm(x): 0.1405, norm(y): 1.0004, norm:13.5433, tok/sec: 105119.43, flops:40.95, batch-reuse:1
@ 814 train 6.8162 , allloss: 7.4137, dt: 1228.83ms, fracRes: 0.0288, norm(attn): 0.1245, norm(output): 0.1523, norm(x): 0.1404, norm(y): 1.0005, norm:7.3484, tok/sec: 106664.26, flops:41.56, batch-reuse:1
@ 815 train 6.7128 , allloss: 7.3249, dt: 1198.02ms, fracRes: 0.0315, norm(attn): 0.1245, norm(output): 0.1494, norm(x): 0.1385, norm(y): 1.0007, norm:11.9085, tok/sec: 109406.73, flops:42.62, batch-reuse:1
@ 816 train 6.7516 , allloss: 7.3700, dt: 1200.15ms, fracRes: 0.0340, norm(attn): 0.1196, norm(output): 0.1475, norm(x): 0.1385, norm(y): 1.0006, norm:9.2508, tok/sec: 109213.34, flops:42.55, batch-reuse:1
@ 817 train 6.7417 , allloss: 7.3427, dt: 1224.47ms, fracRes: 0.0320, norm(attn): 0.1177, norm(output): 0.1504, norm(x): 0.1399, norm(y): 1.0006, norm:14.2641, tok/sec: 107043.98, flops:41.70, batch-reuse:1
@ 818 train 6.7345 , allloss: 7.3140, dt: 1210.99ms, fracRes: 0.0315, norm(attn): 0.1226, norm(output): 0.1504, norm(x): 0.1398, norm(y): 1.0007, norm:11.6487, tok/sec: 108235.39, flops:42.17, batch-reuse:1
@ 819 train 6.8161 , allloss: 7.3761, dt: 1250.34ms, fracRes: 0.0358, norm(attn): 0.1196, norm(output): 0.1523, norm(x): 0.1415, norm(y): 1.0009, norm:8.8932, tok/sec: 104829.15, flops:40.84, batch-reuse:1
@ 820 train 6.8953 , allloss: 7.4501, dt: 1247.69ms, fracRes: 0.0295, norm(attn): 0.1226, norm(output): 0.1543, norm(x): 0.1416, norm(y): 1.0007, norm:15.0972, tok/sec: 105051.40, flops:40.93, batch-reuse:1
@ 821 train 6.8167 , allloss: 7.4503, dt: 1238.78ms, fracRes: 0.0339, norm(attn): 0.1230, norm(output): 0.1553, norm(x): 0.1431, norm(y): 1.0008, norm:15.3252, tok/sec: 105806.98, flops:41.22, batch-reuse:1
@ 822 train 6.8951 , allloss: 7.4916, dt: 1219.86ms, fracRes: 0.0314, norm(attn): 0.1196, norm(output): 0.1553, norm(x): 0.1439, norm(y): 1.0007, norm:6.3659, tok/sec: 107448.79, flops:41.86, batch-reuse:1
@ 823 train 6.7125 , allloss: 7.2893, dt: 1240.62ms, fracRes: 0.0319, norm(attn): 0.1230, norm(output): 0.1553, norm(x): 0.1426, norm(y): 1.0007, norm:10.1150, tok/sec: 105650.21, flops:41.16, batch-reuse:1
@ 824 train 6.8907 , allloss: 7.5142, dt: 1206.94ms, fracRes: 0.0373, norm(attn): 0.1235, norm(output): 0.1543, norm(x): 0.1429, norm(y): 1.0009, norm:9.6032, tok/sec: 108598.16, flops:42.31, batch-reuse:1
@ 825 train 6.7550 , allloss: 7.3836, dt: 1215.71ms, fracRes: 0.0369, norm(attn): 0.1245, norm(output): 0.1543, norm(x): 0.1418, norm(y): 1.0008, norm:8.6690, tok/sec: 107815.28, flops:42.00, batch-reuse:1
@ 826 train 6.7288 , allloss: 7.3467, dt: 1224.49ms, fracRes: 0.0377, norm(attn): 0.1191, norm(output): 0.1553, norm(x): 0.1423, norm(y): 1.0008, norm:9.6263, tok/sec: 107042.54, flops:41.70, batch-reuse:1
@ 827 train 6.8199 , allloss: 7.4289, dt: 1212.87ms, fracRes: 0.0393, norm(attn): 0.1196, norm(output): 0.1553, norm(x): 0.1426, norm(y): 1.0009, norm:6.9545, tok/sec: 108067.35, flops:42.10, batch-reuse:1
@ 828 train 6.7204 , allloss: 7.3074, dt: 1214.08ms, fracRes: 0.0420, norm(attn): 0.1196, norm(output): 0.1553, norm(x): 0.1429, norm(y): 1.0009, norm:10.4536, tok/sec: 107959.84, flops:42.06, batch-reuse:1
@ 829 train 6.7496 , allloss: 7.2940, dt: 1220.49ms, fracRes: 0.0426, norm(attn): 0.1235, norm(output): 0.1553, norm(x): 0.1425, norm(y): 1.0009, norm:7.8202, tok/sec: 107392.91, flops:41.84, batch-reuse:1
@ 830 train 6.7537 , allloss: 7.3025, dt: 1188.82ms, fracRes: 0.0414, norm(attn): 0.1211, norm(output): 0.1562, norm(x): 0.1438, norm(y): 1.0009, norm:7.3402, tok/sec: 110254.21, flops:42.96, batch-reuse:1
@ 831 train 6.7935 , allloss: 7.3330, dt: 1185.44ms, fracRes: 0.0404, norm(attn): 0.1250, norm(output): 0.1553, norm(x): 0.1428, norm(y): 1.0010, norm:8.1690, tok/sec: 110568.22, flops:43.08, batch-reuse:1
@ 832 train 6.7875 , allloss: 7.3424, dt: 1202.27ms, fracRes: 0.0413, norm(attn): 0.1250, norm(output): 0.1553, norm(x): 0.1435, norm(y): 1.0010, norm:10.3198, tok/sec: 109020.13, flops:42.47, batch-reuse:1
@ 833 train 6.6644 , allloss: 7.2042, dt: 1185.89ms, fracRes: 0.0401, norm(attn): 0.1250, norm(output): 0.1553, norm(x): 0.1423, norm(y): 1.0010, norm:7.5218, tok/sec: 110526.68, flops:43.06, batch-reuse:1
@ 834 train 6.7086 , allloss: 7.2824, dt: 1197.86ms, fracRes: 0.0386, norm(attn): 0.1260, norm(output): 0.1543, norm(x): 0.1413, norm(y): 1.0009, norm:12.6550, tok/sec: 109421.98, flops:42.63, batch-reuse:1
@ 835 train 6.6223 , allloss: 7.1623, dt: 1205.82ms, fracRes: 0.0480, norm(attn): 0.1299, norm(output): 0.1523, norm(x): 0.1403, norm(y): 1.0010, norm:6.0085, tok/sec: 108699.92, flops:42.35, batch-reuse:1
@ 836 train 6.8226 , allloss: 7.3237, dt: 1238.21ms, fracRes: 0.0459, norm(attn): 0.1318, norm(output): 0.1543, norm(x): 0.1420, norm(y): 1.0010, norm:32.7433, tok/sec: 105855.79, flops:41.24, batch-reuse:1
@ 837 train 6.7860 , allloss: 7.2976, dt: 1229.71ms, fracRes: 0.0459, norm(attn): 0.1338, norm(output): 0.1553, norm(x): 0.1426, norm(y): 1.0010, norm:16.4211, tok/sec: 106587.89, flops:41.53, batch-reuse:1
@ 838 train 6.7415 , allloss: 7.2905, dt: 1219.18ms, fracRes: 0.0510, norm(attn): 0.1367, norm(output): 0.1543, norm(x): 0.1418, norm(y): 1.0011, norm:20.8304, tok/sec: 107507.98, flops:41.89, batch-reuse:1
@ 839 train 6.5991 , allloss: 7.1412, dt: 1236.85ms, fracRes: 0.0551, norm(attn): 0.1328, norm(output): 0.1514, norm(x): 0.1402, norm(y): 1.0010, norm:12.8706, tok/sec: 105972.20, flops:41.29, batch-reuse:1
@ 840 train 6.7174 , allloss: 7.2176, dt: 1208.46ms, fracRes: 0.0566, norm(attn): 0.1260, norm(output): 0.1504, norm(x): 0.1397, norm(y): 1.0010, norm:12.2506, tok/sec: 108461.89, flops:42.26, batch-reuse:1
@ 841 train 6.6227 , allloss: 7.1037, dt: 1211.17ms, fracRes: 0.0550, norm(attn): 0.1245, norm(output): 0.1504, norm(x): 0.1401, norm(y): 1.0011, norm:11.6076, tok/sec: 108218.90, flops:42.16, batch-reuse:1
@ 842 train 6.7222 , allloss: 7.2067, dt: 1194.84ms, fracRes: 0.0538, norm(attn): 0.1299, norm(output): 0.1514, norm(x): 0.1405, norm(y): 1.0010, norm:9.6931, tok/sec: 109698.40, flops:42.74, batch-reuse:1
@ 843 train 6.7286 , allloss: 7.2254, dt: 1208.96ms, fracRes: 0.0560, norm(attn): 0.1328, norm(output): 0.1504, norm(x): 0.1397, norm(y): 1.0010, norm:8.4926, tok/sec: 108417.60, flops:42.24, batch-reuse:1
@ 844 train 6.7642 , allloss: 7.2928, dt: 1203.85ms, fracRes: 0.0549, norm(attn): 0.1338, norm(output): 0.1504, norm(x): 0.1387, norm(y): 1.0011, norm:12.5803, tok/sec: 108877.35, flops:42.42, batch-reuse:1
@ 845 train 6.7130 , allloss: 7.2439, dt: 1229.72ms, fracRes: 0.0572, norm(attn): 0.1328, norm(output): 0.1504, norm(x): 0.1396, norm(y): 1.0011, norm:6.9223, tok/sec: 106586.52, flops:41.53, batch-reuse:1
@ 846 train 6.7171 , allloss: 7.1840, dt: 1215.72ms, fracRes: 0.0605, norm(attn): 0.1260, norm(output): 0.1533, norm(x): 0.1408, norm(y): 1.0009, norm:12.1851, tok/sec: 107814.26, flops:42.00, batch-reuse:1
@ 847 train 6.7708 , allloss: 7.2581, dt: 1234.23ms, fracRes: 0.0530, norm(attn): 0.1309, norm(output): 0.1533, norm(x): 0.1407, norm(y): 1.0009, norm:8.6975, tok/sec: 106197.73, flops:41.37, batch-reuse:1
@ 848 train 6.7727 , allloss: 7.2930, dt: 1244.23ms, fracRes: 0.0521, norm(attn): 0.1338, norm(output): 0.1553, norm(x): 0.1413, norm(y): 1.0008, norm:15.8477, tok/sec: 105343.99, flops:41.04, batch-reuse:1
@ 849 train 6.6910 , allloss: 7.2129, dt: 1213.57ms, fracRes: 0.0551, norm(attn): 0.1318, norm(output): 0.1533, norm(x): 0.1403, norm(y): 1.0008, norm:8.2302, tok/sec: 108005.08, flops:42.08, batch-reuse:1
@ 850 train 6.6809 , allloss: 7.1815, dt: 1207.55ms, fracRes: 0.0581, norm(attn): 0.1289, norm(output): 0.1553, norm(x): 0.1413, norm(y): 1.0007, norm:7.4213, tok/sec: 108543.96, flops:42.29, batch-reuse:1
@ 851 train 6.8933 , allloss: 7.3748, dt: 1199.34ms, fracRes: 0.0625, norm(attn): 0.1328, norm(output): 0.1562, norm(x): 0.1428, norm(y): 1.0008, norm:10.8833, tok/sec: 109286.92, flops:42.58, batch-reuse:1
@ 852 train 6.7973 , allloss: 7.2658, dt: 1189.63ms, fracRes: 0.0613, norm(attn): 0.1279, norm(output): 0.1562, norm(x): 0.1422, norm(y): 1.0007, norm:13.4488, tok/sec: 110178.79, flops:42.93, batch-reuse:1
@ 853 train 6.6902 , allloss: 7.1705, dt: 1202.64ms, fracRes: 0.0635, norm(attn): 0.1318, norm(output): 0.1523, norm(x): 0.1399, norm(y): 1.0007, norm:9.8379, tok/sec: 108986.83, flops:42.46, batch-reuse:1
@ 854 train 6.7132 , allloss: 7.2121, dt: 1210.39ms, fracRes: 0.0695, norm(attn): 0.1318, norm(output): 0.1543, norm(x): 0.1399, norm(y): 1.0007, norm:9.0317, tok/sec: 108289.27, flops:42.19, batch-reuse:1
@ 855 train 6.7888 , allloss: 7.2983, dt: 1216.48ms, fracRes: 0.0680, norm(attn): 0.1309, norm(output): 0.1562, norm(x): 0.1422, norm(y): 1.0006, norm:16.7573, tok/sec: 107747.07, flops:41.98, batch-reuse:1
@ 856 train 6.7128 , allloss: 7.2120, dt: 1191.69ms, fracRes: 0.0658, norm(attn): 0.1270, norm(output): 0.1543, norm(x): 0.1411, norm(y): 1.0006, norm:7.2417, tok/sec: 109988.12, flops:42.85, batch-reuse:1
@ 857 train 6.7378 , allloss: 7.1920, dt: 1194.98ms, fracRes: 0.0720, norm(attn): 0.1367, norm(output): 0.1543, norm(x): 0.1407, norm(y): 1.0007, norm:11.9376, tok/sec: 109685.46, flops:42.73, batch-reuse:1
@ 858 train 6.7627 , allloss: 7.2322, dt: 1209.49ms, fracRes: 0.0737, norm(attn): 0.1338, norm(output): 0.1553, norm(x): 0.1415, norm(y): 1.0007, norm:10.0385, tok/sec: 108369.47, flops:42.22, batch-reuse:1
@ 859 train 6.6757 , allloss: 7.1843, dt: 1201.39ms, fracRes: 0.0780, norm(attn): 0.1270, norm(output): 0.1562, norm(x): 0.1419, norm(y): 1.0006, norm:13.4034, tok/sec: 109100.48, flops:42.51, batch-reuse:1
@ 860 train 6.6933 , allloss: 7.1651, dt: 1195.94ms, fracRes: 0.0844, norm(attn): 0.1279, norm(output): 0.1553, norm(x): 0.1412, norm(y): 1.0005, norm:9.7093, tok/sec: 109597.88, flops:42.70, batch-reuse:1
@ 861 train 6.6886 , allloss: 7.1463, dt: 1197.62ms, fracRes: 0.0883, norm(attn): 0.1309, norm(output): 0.1543, norm(x): 0.1402, norm(y): 1.0006, norm:6.6828, tok/sec: 109443.63, flops:42.64, batch-reuse:1
@ 862 train 6.7913 , allloss: 7.2360, dt: 1201.34ms, fracRes: 0.0799, norm(attn): 0.1299, norm(output): 0.1553, norm(x): 0.1419, norm(y): 1.0005, norm:10.1327, tok/sec: 109105.20, flops:42.51, batch-reuse:1
@ 863 train 6.7158 , allloss: 7.2331, dt: 1184.83ms, fracRes: 0.0751, norm(attn): 0.1279, norm(output): 0.1562, norm(x): 0.1418, norm(y): 1.0006, norm:7.5646, tok/sec: 110625.31, flops:43.10, batch-reuse:1
@ 864 train 6.7185 , allloss: 7.1978, dt: 1185.53ms, fracRes: 0.0793, norm(attn): 0.1240, norm(output): 0.1553, norm(x): 0.1408, norm(y): 1.0005, norm:7.4255, tok/sec: 110559.48, flops:43.07, batch-reuse:1
@ 865 train 6.6480 , allloss: 7.1078, dt: 1212.07ms, fracRes: 0.0857, norm(attn): 0.1260, norm(output): 0.1553, norm(x): 0.1403, norm(y): 1.0005, norm:15.5554, tok/sec: 108138.65, flops:42.13, batch-reuse:1
@ 866 train 6.6083 , allloss: 7.0649, dt: 1226.11ms, fracRes: 0.0915, norm(attn): 0.1260, norm(output): 0.1514, norm(x): 0.1393, norm(y): 1.0005, norm:8.4915, tok/sec: 106900.75, flops:41.65, batch-reuse:1
@ 867 train 6.6999 , allloss: 7.2720, dt: 1219.36ms, fracRes: 0.0790, norm(attn): 0.1260, norm(output): 0.1553, norm(x): 0.1406, norm(y): 1.0005, norm:11.3858, tok/sec: 107492.13, flops:41.88, batch-reuse:1
@ 868 train 6.6488 , allloss: 7.1789, dt: 1242.34ms, fracRes: 0.0767, norm(attn): 0.1240, norm(output): 0.1553, norm(x): 0.1404, norm(y): 1.0005, norm:14.9281, tok/sec: 105504.24, flops:41.10, batch-reuse:1
@ 869 train 6.6853 , allloss: 7.1295, dt: 1209.03ms, fracRes: 0.0824, norm(attn): 0.1240, norm(output): 0.1553, norm(x): 0.1401, norm(y): 1.0005, norm:9.5285, tok/sec: 108411.22, flops:42.24, batch-reuse:1
@ 870 train 6.6320 , allloss: 7.1151, dt: 1231.47ms, fracRes: 0.0836, norm(attn): 0.1260, norm(output): 0.1514, norm(x): 0.1390, norm(y): 1.0007, norm:7.6920, tok/sec: 106435.72, flops:41.47, batch-reuse:1
@ 871 train 6.6748 , allloss: 7.2425, dt: 1233.34ms, fracRes: 0.0724, norm(attn): 0.1201, norm(output): 0.1553, norm(x): 0.1395, norm(y): 1.0006, norm:8.6547, tok/sec: 106273.73, flops:41.40, batch-reuse:1
@ 872 train 6.6237 , allloss: 7.1773, dt: 1231.80ms, fracRes: 0.0723, norm(attn): 0.1187, norm(output): 0.1543, norm(x): 0.1398, norm(y): 1.0005, norm:8.9308, tok/sec: 106407.00, flops:41.46, batch-reuse:1
@ 873 train 6.7304 , allloss: 7.1771, dt: 1214.64ms, fracRes: 0.0849, norm(attn): 0.1245, norm(output): 0.1543, norm(x): 0.1395, norm(y): 1.0005, norm:11.1102, tok/sec: 107910.04, flops:42.04, batch-reuse:1
@ 874 train 6.6240 , allloss: 7.0686, dt: 1238.27ms, fracRes: 0.0849, norm(attn): 0.1250, norm(output): 0.1543, norm(x): 0.1400, norm(y): 1.0007, norm:8.1665, tok/sec: 105850.55, flops:41.24, batch-reuse:1
@ 875 train 6.6205 , allloss: 7.1044, dt: 1241.75ms, fracRes: 0.0856, norm(attn): 0.1240, norm(output): 0.1523, norm(x): 0.1394, norm(y): 1.0008, norm:6.0382, tok/sec: 105553.91, flops:41.12, batch-reuse:1
@ 876 train 6.6154 , allloss: 7.1141, dt: 1216.92ms, fracRes: 0.0750, norm(attn): 0.1201, norm(output): 0.1514, norm(x): 0.1387, norm(y): 1.0006, norm:6.3084, tok/sec: 107707.70, flops:41.96, batch-reuse:1
@ 877 train 6.6630 , allloss: 7.1546, dt: 1232.51ms, fracRes: 0.0725, norm(attn): 0.1230, norm(output): 0.1553, norm(x): 0.1400, norm(y): 1.0005, norm:9.2704, tok/sec: 106346.01, flops:41.43, batch-reuse:1
@ 878 train 6.6343 , allloss: 7.1509, dt: 1216.62ms, fracRes: 0.0637, norm(attn): 0.1260, norm(output): 0.1543, norm(x): 0.1396, norm(y): 1.0005, norm:9.5047, tok/sec: 107734.50, flops:41.97, batch-reuse:1
@ 879 train 6.6566 , allloss: 7.1467, dt: 1213.96ms, fracRes: 0.0632, norm(attn): 0.1279, norm(output): 0.1514, norm(x): 0.1388, norm(y): 1.0005, norm:15.3167, tok/sec: 107970.57, flops:42.07, batch-reuse:1
@ 880 train 6.6810 , allloss: 7.1828, dt: 1239.72ms, fracRes: 0.0581, norm(attn): 0.1270, norm(output): 0.1523, norm(x): 0.1393, norm(y): 1.0006, norm:6.8106, tok/sec: 105727.52, flops:41.19, batch-reuse:1
@ 881 train 6.5946 , allloss: 7.0873, dt: 1220.73ms, fracRes: 0.0591, norm(attn): 0.1270, norm(output): 0.1553, norm(x): 0.1403, norm(y): 1.0007, norm:11.2317, tok/sec: 107371.67, flops:41.83, batch-reuse:1
@ 882 train 6.6187 , allloss: 7.0983, dt: 1191.83ms, fracRes: 0.0633, norm(attn): 0.1260, norm(output): 0.1543, norm(x): 0.1401, norm(y): 1.0006, norm:10.5775, tok/sec: 109975.12, flops:42.85, batch-reuse:1
@ 883 train 6.5596 , allloss: 7.0492, dt: 1191.68ms, fracRes: 0.0635, norm(attn): 0.1230, norm(output): 0.1553, norm(x): 0.1401, norm(y): 1.0007, norm:7.4158, tok/sec: 109989.18, flops:42.85, batch-reuse:1
@ 884 train 6.5435 , allloss: 7.0701, dt: 1194.03ms, fracRes: 0.0614, norm(attn): 0.1221, norm(output): 0.1553, norm(x): 0.1402, norm(y): 1.0009, norm:7.9711, tok/sec: 109773.22, flops:42.77, batch-reuse:1
@ 885 train 6.6156 , allloss: 7.1234, dt: 1216.15ms, fracRes: 0.0556, norm(attn): 0.1230, norm(output): 0.1553, norm(x): 0.1394, norm(y): 1.0009, norm:10.6234, tok/sec: 107776.26, flops:41.99, batch-reuse:1
@ 886 train 6.6625 , allloss: 7.1653, dt: 1232.36ms, fracRes: 0.0492, norm(attn): 0.1235, norm(output): 0.1523, norm(x): 0.1390, norm(y): 1.0008, norm:10.0711, tok/sec: 106358.66, flops:41.44, batch-reuse:1
@ 887 train 6.5894 , allloss: 7.0802, dt: 1234.53ms, fracRes: 0.0483, norm(attn): 0.1245, norm(output): 0.1504, norm(x): 0.1389, norm(y): 1.0007, norm:9.2435, tok/sec: 106171.38, flops:41.36, batch-reuse:1
@ 888 train 6.6027 , allloss: 7.1092, dt: 1218.52ms, fracRes: 0.0412, norm(attn): 0.1235, norm(output): 0.1543, norm(x): 0.1403, norm(y): 1.0007, norm:6.4828, tok/sec: 107566.29, flops:41.91, batch-reuse:1
@ 889 train 6.6203 , allloss: 7.1357, dt: 1236.06ms, fracRes: 0.0432, norm(attn): 0.1226, norm(output): 0.1562, norm(x): 0.1421, norm(y): 1.0009, norm:6.8233, tok/sec: 106040.35, flops:41.31, batch-reuse:1
@ 890 train 6.7031 , allloss: 7.1906, dt: 1235.56ms, fracRes: 0.0486, norm(attn): 0.1240, norm(output): 0.1553, norm(x): 0.1422, norm(y): 1.0009, norm:7.5282, tok/sec: 106082.85, flops:41.33, batch-reuse:1
@ 891 train 6.6095 , allloss: 7.1253, dt: 1235.28ms, fracRes: 0.0481, norm(attn): 0.1250, norm(output): 0.1553, norm(x): 0.1417, norm(y): 1.0009, norm:5.9241, tok/sec: 106107.42, flops:41.34, batch-reuse:1
@ 892 train 6.5398 , allloss: 7.0382, dt: 1223.65ms, fracRes: 0.0398, norm(attn): 0.1250, norm(output): 0.1553, norm(x): 0.1419, norm(y): 1.0008, norm:7.1013, tok/sec: 107115.77, flops:41.73, batch-reuse:1
@ 893 train 6.4644 , allloss: 7.0349, dt: 1232.23ms, fracRes: 0.0336, norm(attn): 0.1260, norm(output): 0.1562, norm(x): 0.1426, norm(y): 1.0009, norm:9.7785, tok/sec: 106370.15, flops:41.44, batch-reuse:1
@ 894 train 6.6225 , allloss: 7.1276, dt: 1211.58ms, fracRes: 0.0298, norm(attn): 0.1279, norm(output): 0.1553, norm(x): 0.1413, norm(y): 1.0009, norm:11.3036, tok/sec: 108182.89, flops:42.15, batch-reuse:1
@ 895 train 6.6372 , allloss: 7.1254, dt: 1230.19ms, fracRes: 0.0273, norm(attn): 0.1270, norm(output): 0.1553, norm(x): 0.1421, norm(y): 1.0010, norm:10.5277, tok/sec: 106546.31, flops:41.51, batch-reuse:1
@ 896 train 6.4818 , allloss: 6.9472, dt: 1225.05ms, fracRes: 0.0285, norm(attn): 0.1260, norm(output): 0.1553, norm(x): 0.1427, norm(y): 1.0010, norm:8.1094, tok/sec: 106993.00, flops:41.68, batch-reuse:1
@ 897 train 6.5934 , allloss: 7.0967, dt: 1252.54ms, fracRes: 0.0279, norm(attn): 0.1245, norm(output): 0.1553, norm(x): 0.1429, norm(y): 1.0010, norm:8.4054, tok/sec: 104644.65, flops:40.77, batch-reuse:1
@ 898 train 6.6428 , allloss: 7.1343, dt: 1251.58ms, fracRes: 0.0270, norm(attn): 0.1250, norm(output): 0.1562, norm(x): 0.1436, norm(y): 1.0012, norm:11.5325, tok/sec: 104725.09, flops:40.80, batch-reuse:1
@ 899 train 6.5653 , allloss: 7.0625, dt: 1206.86ms, fracRes: 0.0278, norm(attn): 0.1260, norm(output): 0.1572, norm(x): 0.1448, norm(y): 1.0012, norm:8.7571, tok/sec: 108605.95, flops:42.31, batch-reuse:1
@ 900 train 6.6209 , allloss: 7.1394, dt: 1234.36ms, fracRes: 0.0267, norm(attn): 0.1250, norm(output): 0.1572, norm(x): 0.1454, norm(y): 1.0012, norm:7.8049, tok/sec: 106186.57, flops:41.37, batch-reuse:1
@ 901 train 6.5490 , allloss: 7.0745, dt: 1232.62ms, fracRes: 0.0267, norm(attn): 0.1230, norm(output): 0.1572, norm(x): 0.1446, norm(y): 1.0012, norm:10.5721, tok/sec: 106336.26, flops:41.43, batch-reuse:1
@ 902 train 6.5134 , allloss: 7.0426, dt: 1219.17ms, fracRes: 0.0264, norm(attn): 0.1270, norm(output): 0.1572, norm(x): 0.1447, norm(y): 1.0013, norm:7.3571, tok/sec: 107509.20, flops:41.89, batch-reuse:1
@ 903 train 6.5261 , allloss: 7.0508, dt: 1223.61ms, fracRes: 0.0265, norm(attn): 0.1245, norm(output): 0.1582, norm(x): 0.1473, norm(y): 1.0012, norm:6.7077, tok/sec: 107119.48, flops:41.73, batch-reuse:1
@ 904 train 6.5342 , allloss: 7.0355, dt: 1224.39ms, fracRes: 0.0274, norm(attn): 0.1309, norm(output): 0.1582, norm(x): 0.1471, norm(y): 1.0012, norm:10.6652, tok/sec: 107051.00, flops:41.71, batch-reuse:1
@ 905 train 6.6017 , allloss: 7.1394, dt: 1191.31ms, fracRes: 0.0277, norm(attn): 0.1250, norm(output): 0.1582, norm(x): 0.1472, norm(y): 1.0012, norm:6.8203, tok/sec: 110023.23, flops:42.87, batch-reuse:1
@ 906 train 6.5446 , allloss: 7.0624, dt: 1206.77ms, fracRes: 0.0276, norm(attn): 0.1245, norm(output): 0.1611, norm(x): 0.1478, norm(y): 1.0012, norm:6.3082, tok/sec: 108613.52, flops:42.32, batch-reuse:1
@ 907 train 6.4522 , allloss: 6.9362, dt: 1192.29ms, fracRes: 0.0290, norm(attn): 0.1270, norm(output): 0.1582, norm(x): 0.1478, norm(y): 1.0014, norm:10.2214, tok/sec: 109933.44, flops:42.83, batch-reuse:1
@ 908 train 6.5607 , allloss: 7.0771, dt: 1204.84ms, fracRes: 0.0276, norm(attn): 0.1270, norm(output): 0.1621, norm(x): 0.1486, norm(y): 1.0014, norm:9.3465, tok/sec: 108787.98, flops:42.38, batch-reuse:1
@ 909 train 6.7629 , allloss: 7.2497, dt: 1228.30ms, fracRes: 0.0251, norm(attn): 0.1240, norm(output): 0.1621, norm(x): 0.1501, norm(y): 1.0013, norm:8.3624, tok/sec: 106709.69, flops:41.57, batch-reuse:1
@ 910 train 6.5753 , allloss: 7.0859, dt: 1232.78ms, fracRes: 0.0261, norm(attn): 0.1250, norm(output): 0.1621, norm(x): 0.1495, norm(y): 1.0012, norm:11.4495, tok/sec: 106321.87, flops:41.42, batch-reuse:1
@ 911 train 6.6757 , allloss: 7.1865, dt: 1197.28ms, fracRes: 0.0252, norm(attn): 0.1318, norm(output): 0.1582, norm(x): 0.1476, norm(y): 1.0012, norm:13.0224, tok/sec: 109475.08, flops:42.65, batch-reuse:1
@ 912 train 6.5967 , allloss: 7.1056, dt: 1218.60ms, fracRes: 0.0258, norm(attn): 0.1289, norm(output): 0.1572, norm(x): 0.1467, norm(y): 1.0012, norm:14.5423, tok/sec: 107559.51, flops:41.91, batch-reuse:1
@ 913 train 6.5450 , allloss: 7.0743, dt: 1217.29ms, fracRes: 0.0257, norm(attn): 0.1279, norm(output): 0.1592, norm(x): 0.1489, norm(y): 1.0011, norm:9.6554, tok/sec: 107675.36, flops:41.95, batch-reuse:1
@ 914 train 6.6229 , allloss: 7.1171, dt: 1206.79ms, fracRes: 0.0257, norm(attn): 0.1318, norm(output): 0.1621, norm(x): 0.1507, norm(y): 1.0012, norm:18.1344, tok/sec: 108611.70, flops:42.32, batch-reuse:1
@ 915 train 6.6094 , allloss: 7.0727, dt: 1249.15ms, fracRes: 0.0273, norm(attn): 0.1309, norm(output): 0.1621, norm(x): 0.1519, norm(y): 1.0012, norm:8.9548, tok/sec: 104928.57, flops:40.88, batch-reuse:1
@ 916 train 6.5900 , allloss: 7.0822, dt: 1238.37ms, fracRes: 0.0271, norm(attn): 0.1260, norm(output): 0.1631, norm(x): 0.1521, norm(y): 1.0013, norm:21.1048, tok/sec: 105841.98, flops:41.24, batch-reuse:1
@ 917 train 6.6037 , allloss: 7.1016, dt: 1199.47ms, fracRes: 0.0256, norm(attn): 0.1279, norm(output): 0.1621, norm(x): 0.1513, norm(y): 1.0013, norm:11.6631, tok/sec: 109275.27, flops:42.57, batch-reuse:1
@ 918 train 6.6087 , allloss: 7.1010, dt: 1192.45ms, fracRes: 0.0241, norm(attn): 0.1328, norm(output): 0.1602, norm(x): 0.1504, norm(y): 1.0012, norm:9.8925, tok/sec: 109918.08, flops:42.82, batch-reuse:1
@ 919 train 6.5655 , allloss: 7.0684, dt: 1207.60ms, fracRes: 0.0222, norm(attn): 0.1328, norm(output): 0.1611, norm(x): 0.1509, norm(y): 1.0012, norm:9.4881, tok/sec: 108539.58, flops:42.29, batch-reuse:1
@ 920 train 6.6048 , allloss: 7.1074, dt: 1204.49ms, fracRes: 0.0214, norm(attn): 0.1270, norm(output): 0.1621, norm(x): 0.1512, norm(y): 1.0013, norm:8.3369, tok/sec: 108819.44, flops:42.40, batch-reuse:1
@ 921 train 6.5412 , allloss: 7.0433, dt: 1192.84ms, fracRes: 0.0215, norm(attn): 0.1279, norm(output): 0.1621, norm(x): 0.1516, norm(y): 1.0013, norm:6.0383, tok/sec: 109882.09, flops:42.81, batch-reuse:1
@ 922 train 6.6088 , allloss: 7.0996, dt: 1219.46ms, fracRes: 0.0221, norm(attn): 0.1328, norm(output): 0.1650, norm(x): 0.1531, norm(y): 1.0012, norm:9.5370, tok/sec: 107483.26, flops:41.88, batch-reuse:1
@ 923 train 6.5498 , allloss: 7.0341, dt: 1184.98ms, fracRes: 0.0250, norm(attn): 0.1270, norm(output): 0.1660, norm(x): 0.1534, norm(y): 1.0011, norm:5.0921, tok/sec: 110610.73, flops:43.09, batch-reuse:1
@ 924 train 6.5471 , allloss: 7.0400, dt: 1209.63ms, fracRes: 0.0241, norm(attn): 0.1230, norm(output): 0.1621, norm(x): 0.1528, norm(y): 1.0010, norm:9.7962, tok/sec: 108357.48, flops:42.22, batch-reuse:1
@ 925 train 6.5622 , allloss: 7.0721, dt: 1221.52ms, fracRes: 0.0224, norm(attn): 0.1250, norm(output): 0.1621, norm(x): 0.1528, norm(y): 1.0009, norm:5.4228, tok/sec: 107302.09, flops:41.80, batch-reuse:1
@ 926 train 6.5497 , allloss: 7.0490, dt: 1211.25ms, fracRes: 0.0248, norm(attn): 0.1299, norm(output): 0.1621, norm(x): 0.1526, norm(y): 1.0009, norm:10.3128, tok/sec: 108212.58, flops:42.16, batch-reuse:1
@ 927 train 6.5320 , allloss: 7.0347, dt: 1235.17ms, fracRes: 0.0248, norm(attn): 0.1270, norm(output): 0.1650, norm(x): 0.1539, norm(y): 1.0008, norm:9.8685, tok/sec: 106116.23, flops:41.34, batch-reuse:1
@ 928 train 6.6833 , allloss: 7.1830, dt: 1233.23ms, fracRes: 0.0215, norm(attn): 0.1240, norm(output): 0.1660, norm(x): 0.1541, norm(y): 1.0009, norm:7.5917, tok/sec: 106283.72, flops:41.41, batch-reuse:1
@ 929 train 6.7480 , allloss: 7.2433, dt: 1201.39ms, fracRes: 0.0216, norm(attn): 0.1245, norm(output): 0.1641, norm(x): 0.1533, norm(y): 1.0009, norm:7.4185, tok/sec: 109100.74, flops:42.51, batch-reuse:1
@ 930 train 6.6403 , allloss: 7.1422, dt: 1185.58ms, fracRes: 0.0214, norm(attn): 0.1230, norm(output): 0.1660, norm(x): 0.1530, norm(y): 1.0008, norm:7.3905, tok/sec: 110555.13, flops:43.07, batch-reuse:1
@ 931 train 6.8601 , allloss: 7.3490, dt: 1198.59ms, fracRes: 0.0232, norm(attn): 0.1260, norm(output): 0.1621, norm(x): 0.1520, norm(y): 1.0008, norm:15.7878, tok/sec: 109355.53, flops:42.60, batch-reuse:1
@ 932 train 6.7333 , allloss: 7.2101, dt: 1214.65ms, fracRes: 0.0257, norm(attn): 0.1235, norm(output): 0.1621, norm(x): 0.1532, norm(y): 1.0007, norm:7.9600, tok/sec: 107909.64, flops:42.04, batch-reuse:1
@ 933 train 6.7782 , allloss: 7.2456, dt: 1233.83ms, fracRes: 0.0276, norm(attn): 0.1172, norm(output): 0.1699, norm(x): 0.1565, norm(y): 1.0007, norm:18.5811, tok/sec: 106232.23, flops:41.39, batch-reuse:1
@ 934 train 6.7161 , allloss: 7.1896, dt: 1242.15ms, fracRes: 0.0262, norm(attn): 0.1196, norm(output): 0.1660, norm(x): 0.1547, norm(y): 1.0007, norm:6.7451, tok/sec: 105520.38, flops:41.11, batch-reuse:1
@ 935 train 6.6980 , allloss: 7.2095, dt: 1196.28ms, fracRes: 0.0230, norm(attn): 0.1230, norm(output): 0.1641, norm(x): 0.1525, norm(y): 1.0006, norm:8.1363, tok/sec: 109566.06, flops:42.69, batch-reuse:1
@ 936 train 6.6949 , allloss: 7.2155, dt: 1233.95ms, fracRes: 0.0214, norm(attn): 0.1206, norm(output): 0.1621, norm(x): 0.1522, norm(y): 1.0005, norm:8.6182, tok/sec: 106221.60, flops:41.38, batch-reuse:1
@ 937 train 6.7318 , allloss: 7.2634, dt: 1240.57ms, fracRes: 0.0195, norm(attn): 0.1206, norm(output): 0.1670, norm(x): 0.1550, norm(y): 1.0003, norm:10.7573, tok/sec: 105655.08, flops:41.16, batch-reuse:1
@ 938 train 6.6683 , allloss: 7.1998, dt: 1199.29ms, fracRes: 0.0210, norm(attn): 0.1245, norm(output): 0.1660, norm(x): 0.1543, norm(y): 1.0003, norm:10.4567, tok/sec: 109291.04, flops:42.58, batch-reuse:1
@ 939 train 6.7046 , allloss: 7.1879, dt: 1203.08ms, fracRes: 0.0245, norm(attn): 0.1230, norm(output): 0.1660, norm(x): 0.1551, norm(y): 1.0004, norm:8.9412, tok/sec: 108946.74, flops:42.45, batch-reuse:1
@ 940 train 6.7200 , allloss: 7.1903, dt: 1213.24ms, fracRes: 0.0241, norm(attn): 0.1177, norm(output): 0.1719, norm(x): 0.1586, norm(y): 1.0003, norm:9.0262, tok/sec: 108034.42, flops:42.09, batch-reuse:1
@ 941 train 6.7063 , allloss: 7.1898, dt: 1193.65ms, fracRes: 0.0235, norm(attn): 0.1250, norm(output): 0.1699, norm(x): 0.1574, norm(y): 1.0003, norm:7.0034, tok/sec: 109807.91, flops:42.78, batch-reuse:1
@ 942 train 6.7133 , allloss: 7.1915, dt: 1197.58ms, fracRes: 0.0236, norm(attn): 0.1250, norm(output): 0.1709, norm(x): 0.1579, norm(y): 1.0002, norm:13.2986, tok/sec: 109447.51, flops:42.64, batch-reuse:1
@ 943 train 6.6800 , allloss: 7.1564, dt: 1209.39ms, fracRes: 0.0227, norm(attn): 0.1260, norm(output): 0.1670, norm(x): 0.1550, norm(y): 1.0003, norm:6.7074, tok/sec: 108378.57, flops:42.22, batch-reuse:1
@ 944 train 6.6857 , allloss: 7.1353, dt: 1199.76ms, fracRes: 0.0230, norm(attn): 0.1250, norm(output): 0.1660, norm(x): 0.1543, norm(y): 1.0003, norm:6.6113, tok/sec: 109248.41, flops:42.56, batch-reuse:1
@ 945 train 6.7858 , allloss: 7.2180, dt: 1204.79ms, fracRes: 0.0236, norm(attn): 0.1250, norm(output): 0.1689, norm(x): 0.1558, norm(y): 1.0003, norm:5.6469, tok/sec: 108791.98, flops:42.39, batch-reuse:1
@ 946 train 6.7008 , allloss: 7.1576, dt: 1210.44ms, fracRes: 0.0298, norm(attn): 0.1338, norm(output): 0.1641, norm(x): 0.1530, norm(y): 1.0002, norm:6.8296, tok/sec: 108284.32, flops:42.19, batch-reuse:1
@ 947 train 6.6681 , allloss: 7.1219, dt: 1206.80ms, fracRes: 0.0380, norm(attn): 0.1348, norm(output): 0.1660, norm(x): 0.1557, norm(y): 1.0002, norm:10.8199, tok/sec: 108611.57, flops:42.32, batch-reuse:1
@ 948 train 6.7705 , allloss: 7.1819, dt: 1204.05ms, fracRes: 0.0431, norm(attn): 0.1328, norm(output): 0.1719, norm(x): 0.1589, norm(y): 1.0000, norm:38.2274, tok/sec: 108859.63, flops:42.41, batch-reuse:1
@ 949 train 6.7339 , allloss: 7.2025, dt: 1198.60ms, fracRes: 0.0408, norm(attn): 0.1357, norm(output): 0.1670, norm(x): 0.1546, norm(y): 1.0000, norm:9.7773, tok/sec: 109353.87, flops:42.60, batch-reuse:1
@ 950 train 6.7095 , allloss: 7.1906, dt: 1188.29ms, fracRes: 0.0451, norm(attn): 0.1357, norm(output): 0.1621, norm(x): 0.1516, norm(y): 1.0001, norm:16.1081, tok/sec: 110303.16, flops:42.97, batch-reuse:1
@ 951 train 6.7341 , allloss: 7.2372, dt: 1207.83ms, fracRes: 0.0474, norm(attn): 0.1396, norm(output): 0.1641, norm(x): 0.1521, norm(y): 1.0000, norm:7.9452, tok/sec: 108518.27, flops:42.28, batch-reuse:1
@ 952 train 6.7747 , allloss: 7.3564, dt: 1207.64ms, fracRes: 0.0553, norm(attn): 0.1455, norm(output): 0.1680, norm(x): 0.1548, norm(y): 0.9999, norm:20.2465, tok/sec: 108535.21, flops:42.29, batch-reuse:1
@ 953 train 6.6774 , allloss: 7.2357, dt: 1185.30ms, fracRes: 0.0567, norm(attn): 0.1416, norm(output): 0.1699, norm(x): 0.1564, norm(y): 0.9999, norm:8.4049, tok/sec: 110580.88, flops:43.08, batch-reuse:1
@ 954 train 6.7235 , allloss: 7.2027, dt: 1214.21ms, fracRes: 0.0556, norm(attn): 0.1348, norm(output): 0.1699, norm(x): 0.1565, norm(y): 1.0000, norm:23.2654, tok/sec: 107948.08, flops:42.06, batch-reuse:1
@ 955 train 6.7454 , allloss: 7.2149, dt: 1215.00ms, fracRes: 0.0542, norm(attn): 0.1328, norm(output): 0.1709, norm(x): 0.1568, norm(y): 1.0001, norm:14.0619, tok/sec: 107878.26, flops:42.03, batch-reuse:1
@ 956 train 6.6588 , allloss: 7.1427, dt: 1221.92ms, fracRes: 0.0561, norm(attn): 0.1387, norm(output): 0.1699, norm(x): 0.1571, norm(y): 0.9999, norm:9.9063, tok/sec: 107267.04, flops:41.79, batch-reuse:1
@ 957 train 6.7069 , allloss: 7.1855, dt: 1187.59ms, fracRes: 0.0506, norm(attn): 0.1396, norm(output): 0.1719, norm(x): 0.1594, norm(y): 0.9999, norm:11.0843, tok/sec: 110368.11, flops:43.00, batch-reuse:1
@ 958 train 6.7007 , allloss: 7.1932, dt: 1216.03ms, fracRes: 0.0538, norm(attn): 0.1436, norm(output): 0.1689, norm(x): 0.1567, norm(y): 0.9998, norm:7.5471, tok/sec: 107787.21, flops:41.99, batch-reuse:1
@ 959 train 6.6068 , allloss: 7.1112, dt: 1223.25ms, fracRes: 0.0477, norm(attn): 0.1396, norm(output): 0.1689, norm(x): 0.1567, norm(y): 0.9999, norm:8.5449, tok/sec: 107150.63, flops:41.75, batch-reuse:1
@ 960 train 6.7337 , allloss: 7.2860, dt: 1228.41ms, fracRes: 0.0491, norm(attn): 0.1357, norm(output): 0.1719, norm(x): 0.1588, norm(y): 0.9999, norm:7.5380, tok/sec: 106700.72, flops:41.57, batch-reuse:1
@ 961 train 6.6534 , allloss: 7.1662, dt: 1219.29ms, fracRes: 0.0479, norm(attn): 0.1338, norm(output): 0.1719, norm(x): 0.1595, norm(y): 0.9999, norm:8.1294, tok/sec: 107498.29, flops:41.88, batch-reuse:1
@ 962 train 6.7440 , allloss: 7.2282, dt: 1190.37ms, fracRes: 0.0497, norm(attn): 0.1357, norm(output): 0.1719, norm(x): 0.1594, norm(y): 0.9999, norm:19.4287, tok/sec: 110110.01, flops:42.90, batch-reuse:1
@ 963 train 6.7176 , allloss: 7.2135, dt: 1213.80ms, fracRes: 0.0530, norm(attn): 0.1406, norm(output): 0.1719, norm(x): 0.1587, norm(y): 0.9997, norm:9.0658, tok/sec: 107985.01, flops:42.07, batch-reuse:1
@ 964 train 6.6713 , allloss: 7.1989, dt: 1235.53ms, fracRes: 0.0493, norm(attn): 0.1387, norm(output): 0.1719, norm(x): 0.1608, norm(y): 0.9999, norm:6.6638, tok/sec: 106085.82, flops:41.33, batch-reuse:1
@ 965 train 6.7063 , allloss: 7.2609, dt: 1241.39ms, fracRes: 0.0455, norm(attn): 0.1416, norm(output): 0.1719, norm(x): 0.1585, norm(y): 0.9998, norm:15.4011, tok/sec: 105584.46, flops:41.14, batch-reuse:1
@ 966 train 6.6971 , allloss: 7.2107, dt: 1243.48ms, fracRes: 0.0430, norm(attn): 0.1416, norm(output): 0.1719, norm(x): 0.1588, norm(y): 0.9996, norm:16.5353, tok/sec: 105407.73, flops:41.07, batch-reuse:1
@ 967 train 6.7507 , allloss: 7.3042, dt: 1225.25ms, fracRes: 0.0436, norm(attn): 0.1416, norm(output): 0.1719, norm(x): 0.1598, norm(y): 1.0001, norm:7.6116, tok/sec: 106975.43, flops:41.68, batch-reuse:1
@ 968 train 6.7860 , allloss: 7.3388, dt: 1240.80ms, fracRes: 0.0545, norm(attn): 0.1396, norm(output): 0.1729, norm(x): 0.1609, norm(y): 1.0002, norm:20.9788, tok/sec: 105635.08, flops:41.16, batch-reuse:1
@ 969 train 6.6561 , allloss: 7.1740, dt: 1203.22ms, fracRes: 0.0497, norm(attn): 0.1416, norm(output): 0.1719, norm(x): 0.1599, norm(y): 1.0001, norm:7.3276, tok/sec: 108934.78, flops:42.44, batch-reuse:1
@ 970 train 6.6740 , allloss: 7.1645, dt: 1196.59ms, fracRes: 0.0453, norm(attn): 0.1406, norm(output): 0.1719, norm(x): 0.1609, norm(y): 1.0001, norm:9.8756, tok/sec: 109537.66, flops:42.68, batch-reuse:1
@ 971 train 6.6884 , allloss: 7.1874, dt: 1198.42ms, fracRes: 0.0441, norm(attn): 0.1406, norm(output): 0.1738, norm(x): 0.1629, norm(y): 1.0001, norm:7.2920, tok/sec: 109370.23, flops:42.61, batch-reuse:1
@ 972 train 6.6827 , allloss: 7.1999, dt: 1203.42ms, fracRes: 0.0376, norm(attn): 0.1357, norm(output): 0.1797, norm(x): 0.1657, norm(y): 0.9999, norm:7.9380, tok/sec: 108915.94, flops:42.43, batch-reuse:1
@ 973 train 6.6974 , allloss: 7.2242, dt: 1216.19ms, fracRes: 0.0333, norm(attn): 0.1357, norm(output): 0.1768, norm(x): 0.1651, norm(y): 1.0000, norm:12.1177, tok/sec: 107772.82, flops:41.99, batch-reuse:1
@ 974 train 6.6968 , allloss: 7.2176, dt: 1241.69ms, fracRes: 0.0353, norm(attn): 0.1318, norm(output): 0.1768, norm(x): 0.1642, norm(y): 1.0000, norm:7.3696, tok/sec: 105559.12, flops:41.13, batch-reuse:1
@ 975 train 6.8143 , allloss: 7.2896, dt: 1204.21ms, fracRes: 0.0346, norm(attn): 0.1240, norm(output): 0.1777, norm(x): 0.1643, norm(y): 1.0000, norm:32.9854, tok/sec: 108844.69, flops:42.41, batch-reuse:1
@ 976 train 6.6527 , allloss: 7.1694, dt: 1207.70ms, fracRes: 0.0422, norm(attn): 0.1348, norm(output): 0.1719, norm(x): 0.1615, norm(y): 1.0002, norm:12.6524, tok/sec: 108529.90, flops:42.28, batch-reuse:1
@ 977 train 6.6553 , allloss: 7.2059, dt: 1235.67ms, fracRes: 0.0443, norm(attn): 0.1406, norm(output): 0.1729, norm(x): 0.1619, norm(y): 1.0003, norm:13.8362, tok/sec: 106073.93, flops:41.33, batch-reuse:1
@ 978 train 6.6366 , allloss: 7.1411, dt: 1194.35ms, fracRes: 0.0359, norm(attn): 0.1357, norm(output): 0.1738, norm(x): 0.1629, norm(y): 1.0002, norm:6.8868, tok/sec: 109743.31, flops:42.76, batch-reuse:1
@ 979 train 6.6252 , allloss: 7.1181, dt: 1194.06ms, fracRes: 0.0358, norm(attn): 0.1270, norm(output): 0.1768, norm(x): 0.1633, norm(y): 1.0004, norm:10.9642, tok/sec: 109769.84, flops:42.77, batch-reuse:1
@ 980 train 6.5097 , allloss: 7.0108, dt: 1195.42ms, fracRes: 0.0483, norm(attn): 0.1250, norm(output): 0.1729, norm(x): 0.1622, norm(y): 1.0005, norm:6.2587, tok/sec: 109645.47, flops:42.72, batch-reuse:1
@ 981 train 6.5652 , allloss: 7.0560, dt: 1216.49ms, fracRes: 0.0607, norm(attn): 0.1260, norm(output): 0.1758, norm(x): 0.1630, norm(y): 1.0005, norm:6.2554, tok/sec: 107746.39, flops:41.98, batch-reuse:1
@ 982 train 6.5719 , allloss: 7.0416, dt: 1221.33ms, fracRes: 0.0631, norm(attn): 0.1235, norm(output): 0.1768, norm(x): 0.1653, norm(y): 1.0004, norm:7.9146, tok/sec: 107319.22, flops:41.81, batch-reuse:1
@ 983 train 6.6572 , allloss: 7.1343, dt: 1232.04ms, fracRes: 0.0444, norm(attn): 0.1270, norm(output): 0.1768, norm(x): 0.1657, norm(y): 1.0005, norm:5.3314, tok/sec: 106385.98, flops:41.45, batch-reuse:1
@ 984 train 6.5874 , allloss: 7.1003, dt: 1192.57ms, fracRes: 0.0376, norm(attn): 0.1328, norm(output): 0.1768, norm(x): 0.1634, norm(y): 1.0005, norm:9.4855, tok/sec: 109907.13, flops:42.82, batch-reuse:1
@ 985 train 6.6567 , allloss: 7.1385, dt: 1213.76ms, fracRes: 0.0285, norm(attn): 0.1250, norm(output): 0.1748, norm(x): 0.1637, norm(y): 1.0004, norm:20.3506, tok/sec: 107987.98, flops:42.07, batch-reuse:1
@ 986 train 6.6811 , allloss: 7.1603, dt: 1212.90ms, fracRes: 0.0352, norm(attn): 0.1279, norm(output): 0.1758, norm(x): 0.1625, norm(y): 1.0006, norm:7.7416, tok/sec: 108065.27, flops:42.10, batch-reuse:1
@ 987 train 6.6012 , allloss: 7.0780, dt: 1201.25ms, fracRes: 0.0355, norm(attn): 0.1328, norm(output): 0.1768, norm(x): 0.1640, norm(y): 1.0006, norm:13.9123, tok/sec: 109112.94, flops:42.51, batch-reuse:1
@ 988 train 6.6712 , allloss: 7.1425, dt: 1207.76ms, fracRes: 0.0286, norm(attn): 0.1260, norm(output): 0.1777, norm(x): 0.1661, norm(y): 1.0004, norm:6.2897, tok/sec: 108525.16, flops:42.28, batch-reuse:1
@ 989 train 6.7903 , allloss: 7.2817, dt: 1246.00ms, fracRes: 0.0313, norm(attn): 0.1309, norm(output): 0.1816, norm(x): 0.1676, norm(y): 1.0006, norm:12.3322, tok/sec: 105194.14, flops:40.98, batch-reuse:1
@ 990 train 6.5807 , allloss: 7.0631, dt: 1235.79ms, fracRes: 0.0341, norm(attn): 0.1338, norm(output): 0.1816, norm(x): 0.1675, norm(y): 1.0008, norm:6.0704, tok/sec: 106063.57, flops:41.32, batch-reuse:1
@ 991 train 6.6480 , allloss: 7.1065, dt: 1189.66ms, fracRes: 0.0328, norm(attn): 0.1309, norm(output): 0.1826, norm(x): 0.1683, norm(y): 1.0006, norm:8.5456, tok/sec: 110176.45, flops:42.92, batch-reuse:1
@ 992 train 6.6928 , allloss: 7.1492, dt: 1213.49ms, fracRes: 0.0282, norm(attn): 0.1309, norm(output): 0.1826, norm(x): 0.1688, norm(y): 1.0007, norm:7.3670, tok/sec: 108012.00, flops:42.08, batch-reuse:1
@ 993 train 6.5636 , allloss: 7.0468, dt: 1195.26ms, fracRes: 0.0329, norm(attn): 0.1318, norm(output): 0.1826, norm(x): 0.1676, norm(y): 1.0008, norm:7.4820, tok/sec: 109659.93, flops:42.72, batch-reuse:1
@ 994 train 6.6978 , allloss: 7.1625, dt: 1215.20ms, fracRes: 0.0367, norm(attn): 0.1279, norm(output): 0.1826, norm(x): 0.1680, norm(y): 1.0008, norm:9.7863, tok/sec: 107860.12, flops:42.02, batch-reuse:1
@ 995 train 6.6320 , allloss: 7.0716, dt: 1219.97ms, fracRes: 0.0375, norm(attn): 0.1299, norm(output): 0.1826, norm(x): 0.1688, norm(y): 1.0008, norm:8.6972, tok/sec: 107438.39, flops:41.86, batch-reuse:1
@ 996 train 6.5269 , allloss: 6.9597, dt: 1195.59ms, fracRes: 0.0411, norm(attn): 0.1348, norm(output): 0.1816, norm(x): 0.1674, norm(y): 1.0009, norm:5.2089, tok/sec: 109629.84, flops:42.71, batch-reuse:1
@ 997 train 6.5414 , allloss: 6.9883, dt: 1202.82ms, fracRes: 0.0338, norm(attn): 0.1260, norm(output): 0.1816, norm(x): 0.1677, norm(y): 1.0007, norm:7.7303, tok/sec: 108970.60, flops:42.45, batch-reuse:1
@ 998 train 6.7017 , allloss: 7.1599, dt: 1198.24ms, fracRes: 0.0354, norm(attn): 0.1436, norm(output): 0.1816, norm(x): 0.1679, norm(y): 1.0010, norm:5.5436, tok/sec: 109387.40, flops:42.62, batch-reuse:1
@ 999 train 6.5559 , allloss: 6.9925, dt: 1215.64ms, fracRes: 0.0351, norm(attn): 0.1348, norm(output): 0.1816, norm(x): 0.1671, norm(y): 1.0009, norm:7.7964, tok/sec: 107821.66, flops:42.01, batch-reuse:1
@ 1000 train 6.7137 , allloss: 7.1449, dt: 1205.61ms, fracRes: 0.0273, norm(attn): 0.1250, norm(output): 0.1797, norm(x): 0.1675, norm(y): 1.0008, norm:10.4330, tok/sec: 108718.77, flops:42.36, batch-reuse:1
@ 1001 train 6.6575 , allloss: 7.1070, dt: 1222.46ms, fracRes: 0.0277, norm(attn): 0.1270, norm(output): 0.1768, norm(x): 0.1656, norm(y): 1.0008, norm:8.3895, tok/sec: 107219.59, flops:41.77, batch-reuse:1
@ 1002 train 6.6997 , allloss: 7.1262, dt: 1256.81ms, fracRes: 0.0210, norm(attn): 0.1240, norm(output): 0.1826, norm(x): 0.1681, norm(y): 1.0007, norm:38.0446, tok/sec: 104289.20, flops:40.63, batch-reuse:1
@ 1003 train 6.7433 , allloss: 7.1749, dt: 1253.81ms, fracRes: 0.0249, norm(attn): 0.1348, norm(output): 0.1768, norm(x): 0.1653, norm(y): 1.0010, norm:13.4974, tok/sec: 104538.59, flops:40.73, batch-reuse:1
@ 1004 train 6.5316 , allloss: 6.9874, dt: 1215.40ms, fracRes: 0.0280, norm(attn): 0.1426, norm(output): 0.1758, norm(x): 0.1634, norm(y): 1.0012, norm:6.6752, tok/sec: 107842.88, flops:42.02, batch-reuse:1
@ 1005 train 6.5993 , allloss: 7.0675, dt: 1198.88ms, fracRes: 0.0246, norm(attn): 0.1387, norm(output): 0.1768, norm(x): 0.1647, norm(y): 1.0011, norm:9.6121, tok/sec: 109328.93, flops:42.59, batch-reuse:1
@ 1006 train 6.6337 , allloss: 7.0921, dt: 1191.50ms, fracRes: 0.0206, norm(attn): 0.1348, norm(output): 0.1797, norm(x): 0.1663, norm(y): 1.0011, norm:9.8869, tok/sec: 110005.99, flops:42.86, batch-reuse:1
@ 1007 train 6.5694 , allloss: 7.0134, dt: 1205.18ms, fracRes: 0.0265, norm(attn): 0.1396, norm(output): 0.1816, norm(x): 0.1672, norm(y): 1.0011, norm:6.6045, tok/sec: 108757.38, flops:42.37, batch-reuse:1
@ 1008 train 6.6050 , allloss: 7.0555, dt: 1215.76ms, fracRes: 0.0301, norm(attn): 0.1406, norm(output): 0.1797, norm(x): 0.1664, norm(y): 1.0011, norm:5.7672, tok/sec: 107810.54, flops:42.00, batch-reuse:1
@ 1009 train 6.7419 , allloss: 7.1753, dt: 1235.62ms, fracRes: 0.0322, norm(attn): 0.1338, norm(output): 0.1797, norm(x): 0.1660, norm(y): 1.0011, norm:7.0915, tok/sec: 106077.92, flops:41.33, batch-reuse:1
@ 1010 train 6.7016 , allloss: 7.1253, dt: 1215.60ms, fracRes: 0.0347, norm(attn): 0.1348, norm(output): 0.1816, norm(x): 0.1659, norm(y): 1.0011, norm:11.2169, tok/sec: 107825.28, flops:42.01, batch-reuse:1
@ 1011 train 6.5817 , allloss: 6.9938, dt: 1217.36ms, fracRes: 0.0385, norm(attn): 0.1309, norm(output): 0.1816, norm(x): 0.1661, norm(y): 1.0010, norm:7.5128, tok/sec: 107669.24, flops:41.95, batch-reuse:1
@ 1012 train 6.6468 , allloss: 7.0652, dt: 1210.56ms, fracRes: 0.0369, norm(attn): 0.1270, norm(output): 0.1816, norm(x): 0.1665, norm(y): 1.0010, norm:4.5868, tok/sec: 108273.70, flops:42.18, batch-reuse:1
@ 1013 train 6.6305 , allloss: 7.0629, dt: 1216.92ms, fracRes: 0.0308, norm(attn): 0.1250, norm(output): 0.1816, norm(x): 0.1674, norm(y): 1.0010, norm:11.5710, tok/sec: 107708.12, flops:41.96, batch-reuse:1
@ 1014 train 6.5230 , allloss: 6.9483, dt: 1194.79ms, fracRes: 0.0271, norm(attn): 0.1245, norm(output): 0.1816, norm(x): 0.1678, norm(y): 1.0008, norm:5.9484, tok/sec: 109703.32, flops:42.74, batch-reuse:1
@ 1015 train 6.5904 , allloss: 7.0160, dt: 1213.34ms, fracRes: 0.0255, norm(attn): 0.1250, norm(output): 0.1787, norm(x): 0.1658, norm(y): 1.0009, norm:4.7191, tok/sec: 108026.12, flops:42.09, batch-reuse:1
@ 1016 train 6.6514 , allloss: 7.0682, dt: 1210.90ms, fracRes: 0.0261, norm(attn): 0.1260, norm(output): 0.1768, norm(x): 0.1644, norm(y): 1.0010, norm:11.0857, tok/sec: 108243.19, flops:42.17, batch-reuse:1
@ 1017 train 6.5043 , allloss: 6.9198, dt: 1205.58ms, fracRes: 0.0272, norm(attn): 0.1318, norm(output): 0.1738, norm(x): 0.1633, norm(y): 1.0010, norm:4.9577, tok/sec: 108720.96, flops:42.36, batch-reuse:1
@ 1018 train 6.6156 , allloss: 7.0226, dt: 1213.80ms, fracRes: 0.0288, norm(attn): 0.1338, norm(output): 0.1758, norm(x): 0.1646, norm(y): 1.0010, norm:6.3539, tok/sec: 107984.57, flops:42.07, batch-reuse:1
@ 1019 train 6.6500 , allloss: 7.0508, dt: 1251.08ms, fracRes: 0.0273, norm(attn): 0.1289, norm(output): 0.1797, norm(x): 0.1670, norm(y): 1.0010, norm:9.7007, tok/sec: 104767.00, flops:40.82, batch-reuse:1
@ 1020 train 6.5366 , allloss: 6.9424, dt: 1218.60ms, fracRes: 0.0307, norm(attn): 0.1299, norm(output): 0.1816, norm(x): 0.1670, norm(y): 1.0010, norm:4.8283, tok/sec: 107559.74, flops:41.91, batch-reuse:1
@ 1021 train 6.5821 , allloss: 7.0076, dt: 1221.18ms, fracRes: 0.0369, norm(attn): 0.1348, norm(output): 0.1816, norm(x): 0.1662, norm(y): 1.0010, norm:9.3023, tok/sec: 107332.40, flops:41.82, batch-reuse:1
@ 1022 train 6.4916 , allloss: 6.9294, dt: 1230.64ms, fracRes: 0.0360, norm(attn): 0.1328, norm(output): 0.1768, norm(x): 0.1654, norm(y): 1.0009, norm:6.3217, tok/sec: 106506.80, flops:41.50, batch-reuse:1
@ 1023 train 6.5714 , allloss: 6.9887, dt: 1205.96ms, fracRes: 0.0369, norm(attn): 0.1367, norm(output): 0.1768, norm(x): 0.1652, norm(y): 1.0010, norm:13.0814, tok/sec: 108687.11, flops:42.34, batch-reuse:1
@ 1024 train 6.5212 , allloss: 6.9435, dt: 1201.01ms, fracRes: 0.0371, norm(attn): 0.1348, norm(output): 0.1768, norm(x): 0.1650, norm(y): 1.0009, norm:8.5118, tok/sec: 109134.77, flops:42.52, batch-reuse:1
@ 1025 train 6.5594 , allloss: 6.9840, dt: 1202.35ms, fracRes: 0.0398, norm(attn): 0.1348, norm(output): 0.1777, norm(x): 0.1655, norm(y): 1.0008, norm:7.5986, tok/sec: 109013.21, flops:42.47, batch-reuse:1
@ 1026 train 6.6393 , allloss: 7.0470, dt: 1214.96ms, fracRes: 0.0407, norm(attn): 0.1279, norm(output): 0.1826, norm(x): 0.1685, norm(y): 1.0007, norm:11.7476, tok/sec: 107881.80, flops:42.03, batch-reuse:1
@ 1027 train 6.6229 , allloss: 7.0432, dt: 1219.39ms, fracRes: 0.0373, norm(attn): 0.1387, norm(output): 0.1777, norm(x): 0.1657, norm(y): 1.0009, norm:6.9830, tok/sec: 107489.82, flops:41.88, batch-reuse:1
@ 1028 train 6.4978 , allloss: 6.9267, dt: 1204.55ms, fracRes: 0.0344, norm(attn): 0.1377, norm(output): 0.1797, norm(x): 0.1655, norm(y): 1.0009, norm:5.4076, tok/sec: 108813.69, flops:42.39, batch-reuse:1
@ 1029 train 6.5298 , allloss: 6.9517, dt: 1202.15ms, fracRes: 0.0311, norm(attn): 0.1387, norm(output): 0.1816, norm(x): 0.1673, norm(y): 1.0008, norm:8.6611, tok/sec: 109031.37, flops:42.48, batch-reuse:1
@ 1030 train 6.5997 , allloss: 7.0196, dt: 1197.64ms, fracRes: 0.0337, norm(attn): 0.1377, norm(output): 0.1816, norm(x): 0.1672, norm(y): 1.0008, norm:5.6697, tok/sec: 109442.21, flops:42.64, batch-reuse:1
@ 1031 train 6.6246 , allloss: 7.0275, dt: 1243.88ms, fracRes: 0.0420, norm(attn): 0.1377, norm(output): 0.1826, norm(x): 0.1682, norm(y): 1.0009, norm:14.6027, tok/sec: 105373.28, flops:41.05, batch-reuse:1
@ 1032 train 6.5514 , allloss: 6.9535, dt: 1211.20ms, fracRes: 0.0455, norm(attn): 0.1406, norm(output): 0.1816, norm(x): 0.1663, norm(y): 1.0009, norm:7.9953, tok/sec: 108216.56, flops:42.16, batch-reuse:1
@ 1033 train 6.5042 , allloss: 6.9074, dt: 1226.38ms, fracRes: 0.0466, norm(attn): 0.1338, norm(output): 0.1816, norm(x): 0.1659, norm(y): 1.0008, norm:5.4459, tok/sec: 106877.00, flops:41.64, batch-reuse:1
@ 1034 train 6.5086 , allloss: 6.9205, dt: 1230.70ms, fracRes: 0.0450, norm(attn): 0.1348, norm(output): 0.1768, norm(x): 0.1646, norm(y): 1.0009, norm:5.4106, tok/sec: 106501.78, flops:41.49, batch-reuse:1
@ 1035 train 6.5178 , allloss: 6.9300, dt: 1207.57ms, fracRes: 0.0412, norm(attn): 0.1387, norm(output): 0.1768, norm(x): 0.1643, norm(y): 1.0008, norm:4.3835, tok/sec: 108541.71, flops:42.29, batch-reuse:1
@ 1036 train 6.5832 , allloss: 7.0009, dt: 1192.57ms, fracRes: 0.0353, norm(attn): 0.1318, norm(output): 0.1816, norm(x): 0.1666, norm(y): 1.0007, norm:6.2797, tok/sec: 109907.00, flops:42.82, batch-reuse:1
@ 1037 train 6.5880 , allloss: 7.0281, dt: 1190.65ms, fracRes: 0.0358, norm(attn): 0.1396, norm(output): 0.1768, norm(x): 0.1636, norm(y): 1.0006, norm:6.3091, tok/sec: 110084.59, flops:42.89, batch-reuse:1
@ 1038 train 6.5099 , allloss: 6.9380, dt: 1214.63ms, fracRes: 0.0388, norm(attn): 0.1387, norm(output): 0.1777, norm(x): 0.1644, norm(y): 1.0005, norm:4.4334, tok/sec: 107911.23, flops:42.04, batch-reuse:1
@ 1039 train 6.4868 , allloss: 6.9335, dt: 1211.02ms, fracRes: 0.0349, norm(attn): 0.1396, norm(output): 0.1768, norm(x): 0.1639, norm(y): 1.0006, norm:6.1062, tok/sec: 108232.82, flops:42.17, batch-reuse:1
@ 1040 train 6.3513 , allloss: 6.7876, dt: 1205.93ms, fracRes: 0.0398, norm(attn): 0.1416, norm(output): 0.1729, norm(x): 0.1625, norm(y): 1.0006, norm:8.6657, tok/sec: 108689.71, flops:42.35, batch-reuse:1
@ 1041 train 6.4756 , allloss: 6.8979, dt: 1199.49ms, fracRes: 0.0435, norm(attn): 0.1436, norm(output): 0.1738, norm(x): 0.1632, norm(y): 1.0006, norm:7.0311, tok/sec: 109273.56, flops:42.57, batch-reuse:1
@ 1042 train 6.4554 , allloss: 6.9022, dt: 1228.56ms, fracRes: 0.0446, norm(attn): 0.1396, norm(output): 0.1768, norm(x): 0.1643, norm(y): 1.0006, norm:5.3848, tok/sec: 106687.13, flops:41.57, batch-reuse:1
@ 1043 train 6.5219 , allloss: 6.9781, dt: 1190.75ms, fracRes: 0.0384, norm(attn): 0.1465, norm(output): 0.1738, norm(x): 0.1623, norm(y): 1.0005, norm:3.6745, tok/sec: 110074.75, flops:42.89, batch-reuse:1
@ 1044 train 6.6669 , allloss: 7.0865, dt: 1203.76ms, fracRes: 0.0396, norm(attn): 0.1504, norm(output): 0.1748, norm(x): 0.1638, norm(y): 1.0004, norm:22.2762, tok/sec: 108885.16, flops:42.42, batch-reuse:1
@ 1045 train 6.5770 , allloss: 7.0359, dt: 1220.70ms, fracRes: 0.0346, norm(attn): 0.1504, norm(output): 0.1758, norm(x): 0.1618, norm(y): 1.0004, norm:9.1074, tok/sec: 107374.66, flops:41.83, batch-reuse:1
@ 1046 train 6.5171 , allloss: 7.0118, dt: 1227.86ms, fracRes: 0.0365, norm(attn): 0.1484, norm(output): 0.1738, norm(x): 0.1611, norm(y): 1.0006, norm:8.1755, tok/sec: 106747.91, flops:41.59, batch-reuse:1
@ 1047 train 6.5005 , allloss: 7.0134, dt: 1237.46ms, fracRes: 0.0422, norm(attn): 0.1455, norm(output): 0.1768, norm(x): 0.1640, norm(y): 1.0005, norm:10.3904, tok/sec: 105920.08, flops:41.27, batch-reuse:1
@ 1048 train 6.5073 , allloss: 6.9842, dt: 1220.11ms, fracRes: 0.0363, norm(attn): 0.1592, norm(output): 0.1709, norm(x): 0.1577, norm(y): 1.0004, norm:6.6795, tok/sec: 107426.76, flops:41.85, batch-reuse:1
@ 1049 train 6.4822 , allloss: 6.9253, dt: 1208.70ms, fracRes: 0.0342, norm(attn): 0.1592, norm(output): 0.1719, norm(x): 0.1580, norm(y): 1.0004, norm:8.7686, tok/sec: 108440.16, flops:42.25, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3203,     0.6797,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2363,     0.1875,     0.5742,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2285,     0.2109,     0.3711,     0.1895,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0330,     0.5938,     0.2041,     0.1553,     0.0124,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0254,     0.5898,     0.2793,     0.0850,     0.0075,     0.0146,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0898,     0.2441,     0.1650,     0.1348,     0.1094,     0.1338,     0.1235,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0386,     0.0256,     0.0530,     0.0266,     0.3301,     0.3008,     0.2158,     0.0107,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0530,     0.4102,     0.1797,     0.0962,     0.0168,     0.0123,     0.0164,     0.2051,     0.0103,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0471,     0.1504,     0.1455,     0.0530,     0.1387,     0.0962,     0.1177,     0.0684,     0.0391,     0.1445,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0126,     0.5938,     0.0649,     0.1709,     0.0009,     0.0014,     0.0029,     0.1338,     0.0010,     0.0159,     0.0020,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0344,     0.0237,     0.0601,     0.0306,     0.1719,     0.1025,     0.1729,     0.0195,     0.0796,     0.0559,     0.2129,     0.0354,     0.0000,     0.0000,     0.0000],
        [    0.0461,     0.0231,     0.0339,     0.0259,     0.1504,     0.1611,     0.1108,     0.0295,     0.0981,     0.0796,     0.1875,     0.0366,     0.0177,     0.0000,     0.0000],
        [    0.0422,     0.2559,     0.0850,     0.0742,     0.0105,     0.0085,     0.0097,     0.1670,     0.0064,     0.0388,     0.0116,     0.1177,     0.1543,     0.0178,     0.0000],
        [    0.0403,     0.1436,     0.1001,     0.0520,     0.0396,     0.0386,     0.0603,     0.0884,     0.0308,     0.0820,     0.0359,     0.1060,     0.0786,     0.0204,     0.0845]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0290,  0.0399, -0.0106,  ...,  0.0338,  0.0195, -0.0264],
        [-0.0366,  0.0136, -0.0411,  ...,  0.0140, -0.0082,  0.0201],
        [-0.0538,  0.0059, -0.0305,  ..., -0.0537,  0.0058, -0.0064],
        ...,
        [-0.0357,  0.0132,  0.0037,  ...,  0.0042, -0.0130,  0.0199],
        [ 0.0250,  0.0153,  0.0320,  ...,  0.0042, -0.0153,  0.0083],
        [-0.0191,  0.0096, -0.0077,  ..., -0.0131, -0.0153, -0.0275]], device='cuda:0', requires_grad=True)
K: tensor([ 0.7266,  0.2754,  0.5273,  1.8359, -0.1084,  0.6641,  0.7695,  0.5391,  0.3184, -0.6875, -0.3340, -2.1562,  0.0136, -0.5859,  0.6406, -0.6758, -0.2070,  0.3633, -0.0245,  0.1943, -0.5273, -1.3516, -0.6055, -0.7188, -0.2402, -1.1562,  0.2402,  1.3359,  1.0156, -0.4766, -0.5273, -0.8672,
        -0.3027, -0.4102,  1.4141, -0.2695,  0.4941, -0.4277, -0.6289,  0.4844,  0.6055, -0.8594,  0.1064, -0.6445, -0.2275, -0.5273, -0.0840, -0.0293, -0.6133,  0.0854, -0.7578, -0.1553, -0.1406, -0.0415, -0.4512,  0.4434,  0.0342, -0.1367, -0.6719,  0.4395,  0.3906, -0.2119,  0.4707, -0.7031],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0169,  0.0204,  0.0012,  ..., -0.0245, -0.0058, -0.0113],
        [ 0.0488,  0.0192,  0.0304,  ...,  0.0079, -0.0036,  0.0051],
        [-0.0183, -0.0131, -0.0014,  ...,  0.0190, -0.0034,  0.0043],
        ...,
        [ 0.0091,  0.0246, -0.0139,  ...,  0.0147, -0.0544, -0.0158],
        [ 0.0319, -0.0124,  0.0051,  ...,  0.0086,  0.0329, -0.0177],
        [ 0.0193, -0.0016, -0.0193,  ..., -0.0116,  0.0051,  0.0255]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.6133,  0.0986,  0.1992,  0.1514, -1.1875, -0.4609,  1.4062,  0.3086, -0.1230,  0.6094,  0.3438, -0.6289, -0.6133, -0.5117,  0.5898,  0.2500, -0.3164,  0.6797,  0.5703,  0.0113, -0.0157,  0.5742,  0.7500, -0.1836,  0.4609, -0.2559, -0.2471,  0.4180,  0.0216, -0.1719, -0.1660, -0.6211,
         0.7188,  0.4648,  0.5312,  0.5117,  0.6406, -1.2422, -0.4590, -0.2539, -0.8711,  0.2871,  0.2354, -0.1992,  0.3789, -1.4062, -0.7773, -0.1240, -1.1953, -0.2129,  0.6562, -0.0474, -0.9492, -0.0236, -0.5195,  0.6133,  0.3125,  0.2910,  0.5781, -0.7227,  0.9375, -0.5469,  0.6797,  0.1895],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.7500,  0.7891,  0.4375,  1.4609,  1.3125,  1.8750, -0.2363,  0.7070,  0.9844,  1.5000,  0.7461, -0.3086,  0.7930,  1.5625],
        [ 0.0000, -0.2314,  0.8867, -0.4805,  1.4609,  1.7031,  1.1875, -0.2773, -0.0991,  1.1250,  1.1484, -0.3184, -0.9102,  0.0635,  0.4609],
        [ 0.0000, -0.0801,  0.4844, -0.1855,  0.1660, -0.4277,  0.5391, -0.2812, -0.0131,  0.2617,  0.5312, -0.0317, -0.4883,  0.2197,  1.0625],
        [ 0.0000,  2.8906,  1.8281,  1.5469, -0.9805, -0.8555, -1.1406,  2.0156, -1.4453,  0.2949, -1.3984,  1.2500,  1.7266, -0.3613, -0.5820],
        [ 0.0000,  3.1406,  2.4062,  1.2109, -1.2188, -0.5508, -0.7852,  1.9688, -1.4609,  1.0469, -0.7383,  1.6250,  1.5234, -0.5820,  0.4512],
        [ 0.0000,  0.9961,  0.6055,  0.4004,  0.1963,  0.3945,  0.3164,  0.3594, -0.2832,  0.5234,  0.9453,  0.2539, -0.1064,  0.1689,  1.2969],
        [ 0.0000, -0.4062,  0.3164, -0.3672,  2.1562,  2.0469,  1.7266, -1.2812,  1.4766,  0.5430,  2.1875, -0.0135, -1.2109,  1.0234,  1.2266],
        [ 0.0000,  2.0469,  1.2266,  0.6016, -1.1406, -1.4531, -1.1719,  1.3594, -1.6406,  0.4023, -1.3594,  1.0781,  1.5156, -0.6914, -0.1680],
        [ 0.0000,  1.1641,  1.1250,  0.1172,  1.0781,  0.7109,  0.9141,  0.3691, -0.1914,  1.1250,  0.3926,  0.5117, -0.1592,  0.0464,  0.5547],
        [ 0.0000,  3.8438,  1.6328,  2.6094, -2.6094, -2.1875, -1.4688,  2.3594, -2.5000,  0.2295, -1.8516,  2.3906,  2.8906, -1.5781,  0.1377],
        [ 0.0000, -0.3711,  0.5586, -0.1143,  1.6094,  1.0938,  1.6172, -0.5703,  0.8359,  0.4863,  1.8203,  0.0283, -0.6211,  0.7422,  0.9492],
        [ 0.0000, -0.6914, -0.3066, -0.5781,  1.1797,  1.2500,  0.8750, -0.4473,  0.7578,  0.5469,  1.3984, -0.2285, -0.9570,  0.6289, -0.1562],
        [ 0.0000,  1.7969,  0.6992,  0.5664, -1.3906, -1.6094, -1.4688,  1.3750, -1.8906, -0.0811, -1.2891,  1.0234,  1.2969, -0.8672, -0.3711],
        [ 0.0000,  1.2734,  0.9141,  0.2578, -0.0126, -0.0430,  0.4062,  0.7852, -0.2656,  0.7109, -0.1143,  0.9688,  0.6719, -0.6758,  0.7461]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4769],
        [0.3515],
        [0.3320],
        [0.1477],
        [0.1578],
        [0.2483],
        [0.0311],
        [0.1021],
        [0.1073],
        [0.0477],
        [0.0430],
        [0.0264],
        [0.0454],
        [0.0748]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1328, 0.8672, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0540, 0.3242, 0.6211, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2832, 0.0728, 0.4180, 0.2246, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0229, 0.2676, 0.3965, 0.1543, 0.1582, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0186, 0.1904, 0.3086, 0.0801, 0.0972, 0.3047, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0126, 0.0630, 0.0962, 0.0435, 0.1426, 0.1582, 0.4824, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0288, 0.0204, 0.1367, 0.0231, 0.2236, 0.1680, 0.3398, 0.0586, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0255, 0.2451, 0.2363, 0.0933, 0.0581, 0.1357, 0.0381, 0.1172, 0.0503, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0152, 0.0219, 0.0898, 0.0299, 0.1235, 0.1416, 0.4336, 0.0537, 0.0474, 0.0427, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0204, 0.1621, 0.2168, 0.1035, 0.0442, 0.1445, 0.0530, 0.0859, 0.0304, 0.0796, 0.0603, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0145, 0.0422, 0.1816, 0.0283, 0.0986, 0.1670, 0.1826, 0.0415, 0.0593, 0.0635, 0.0255, 0.0947, 0.0000, 0.0000, 0.0000],
        [0.0503, 0.0242, 0.1133, 0.0255, 0.1377, 0.0874, 0.1416, 0.0366, 0.1963, 0.0398, 0.0669, 0.0498, 0.0293, 0.0000, 0.0000],
        [0.0165, 0.1777, 0.1387, 0.0586, 0.0203, 0.0654, 0.0092, 0.0654, 0.0300, 0.0669, 0.0854, 0.1060, 0.0664, 0.0938, 0.0000],
        [0.0118, 0.0854, 0.1128, 0.0503, 0.0554, 0.1436, 0.1875, 0.0312, 0.0273, 0.0520, 0.0229, 0.0474, 0.0103, 0.0182, 0.1445]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0290,  0.0399, -0.0106,  ...,  0.0338,  0.0195, -0.0264],
        [-0.0366,  0.0136, -0.0411,  ...,  0.0140, -0.0082,  0.0201],
        [-0.0538,  0.0059, -0.0305,  ..., -0.0537,  0.0058, -0.0064],
        ...,
        [-0.0357,  0.0132,  0.0037,  ...,  0.0042, -0.0130,  0.0199],
        [ 0.0250,  0.0153,  0.0320,  ...,  0.0042, -0.0153,  0.0083],
        [-0.0191,  0.0096, -0.0077,  ..., -0.0131, -0.0153, -0.0275]], device='cuda:0', requires_grad=True)
K: tensor([-0.5625, -0.5352,  0.6914,  2.1875, -0.4023,  1.0859,  1.2891,  0.0903,  1.4297, -0.5703, -0.0708, -0.6797, -1.0781, -0.0317,  1.1875, -0.2637, -0.2080, -0.1621, -0.3906,  0.8438,  0.6445, -1.1094, -0.5078,  0.3965,  0.0496, -1.0625,  0.1167,  1.0625, -0.0476, -1.1562,  1.2969, -0.6992,
        -1.7344, -0.6719,  0.6523, -0.0027,  0.2295, -1.5547, -0.0427, -0.2012, -0.1069,  1.1172,  0.1895, -1.4844, -0.0264, -1.0469,  0.8281,  0.5430, -0.5781, -0.7344,  0.7656, -0.3867,  0.2520, -0.0447,  0.4844, -0.1787, -0.6367, -0.1328,  0.0806,  0.7031,  1.4688, -0.5859,  0.8281, -0.1758],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0169,  0.0204,  0.0012,  ..., -0.0245, -0.0058, -0.0113],
        [ 0.0488,  0.0192,  0.0304,  ...,  0.0079, -0.0036,  0.0051],
        [-0.0183, -0.0131, -0.0014,  ...,  0.0190, -0.0034,  0.0043],
        ...,
        [ 0.0091,  0.0246, -0.0139,  ...,  0.0147, -0.0544, -0.0158],
        [ 0.0319, -0.0124,  0.0051,  ...,  0.0086,  0.0329, -0.0177],
        [ 0.0193, -0.0016, -0.0193,  ..., -0.0116,  0.0051,  0.0255]], device='cuda:0', requires_grad=True)
Q: tensor([     0.1445,     -0.0067,      1.0547,      1.0156,     -0.7578,      0.2617,      1.2109,     -0.2598,      1.2109,      0.1572,      0.2949,     -0.5078,     -1.4609,     -0.4453,      0.5742,     -0.0204,     -0.8945,      0.1748,     -0.9336,      1.3672,     -0.2051,     -0.4844,
            -0.5078,     -0.6836,      0.5469,     -0.6523,     -0.1016,      0.8672,      0.5039,     -1.1328,     -0.1201,     -1.2656,     -0.4238,     -0.0918,      0.3613,     -0.1123,      0.0007,     -0.2891,     -1.2969,      0.3477,     -0.2393,      0.7578,      0.0630,     -0.2061,
            -0.0469,      0.6094,     -0.3652,      0.2412,     -0.2832,      0.2275,      0.6992,     -0.0918,      0.2910,     -0.6523,     -0.0554,      0.5117,     -0.9258,     -0.5938,     -0.6133,     -0.6680,      1.4531,     -0.8047,     -0.0312,      0.0425], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  1.8750,  1.5312,  1.2891,  0.7812,  1.5469,  2.4844,  0.7461, -0.0167,  1.3281, -0.1504,  1.1406, -0.0374, -0.7070,  1.5000],
        [ 0.0000,  1.7969,  2.4531,  1.0391,  1.2109,  2.2500,  2.1094,  0.8359,  0.7930,  1.5625,  0.4785,  1.9141, -0.2129,  0.9648,  1.5078],
        [ 0.0000, -1.3594,  0.3887, -0.2324,  2.1562,  1.3906,  3.8438, -0.4180,  1.8047,  0.0129, -0.5508,  0.0737, -1.1094,  0.6055,  0.8633],
        [ 0.0000,  2.4531,  2.8438,  1.9062,  1.9297,  2.9062,  2.5781,  2.4531,  0.7617,  1.8125,  1.0391,  2.1875,  0.4863,  0.5195,  2.7969],
        [ 0.0000,  2.3281,  2.8125,  1.4609,  1.6562,  2.7969,  2.3750,  1.7812,  0.5117,  1.7578,  0.9766,  2.2656,  0.2119,  0.5508,  2.5000],
        [ 0.0000,  1.6094,  2.0312,  1.2422,  2.4375,  2.5312,  3.6562,  1.4375,  0.8633,  1.5625,  0.1797,  1.4688, -0.1475, -0.1089,  2.5156],
        [ 0.0000, -0.3457,  1.5625, -0.2217,  2.0469,  1.7656,  2.4688,  0.7148,  1.8984,  0.6406,  0.1099,  0.8828, -0.3359,  1.5469,  0.8320],
        [ 0.0000,  2.2656,  2.2188,  1.2969,  0.8242,  1.6719,  0.3984,  1.5234,  0.6836,  1.5703,  1.3750,  1.8828,  0.8711,  1.3594,  1.7188],
        [ 0.0000,  0.3613,  1.7734,  0.6758,  2.0938,  2.2344,  3.3594,  1.2578,  1.1328,  1.0391,  0.0275,  1.0078, -0.2656,  0.6172,  1.7266],
        [ 0.0000,  2.0781,  2.3594,  1.6250,  0.7773,  1.9609,  0.9609,  1.4375,  0.4004,  1.3594,  1.0859,  1.7969,  0.5312,  0.7383,  2.0938],
        [ 0.0000,  1.0703,  2.5312,  0.6719,  1.9141,  2.4531,  2.5312,  1.0469,  1.4062,  1.4766,  0.5664,  1.8828,  0.0742,  1.5859,  1.7500],
        [ 0.0000, -0.7344,  0.8125, -0.6797,  1.0078,  0.5547,  1.0391, -0.3203,  1.3594, -0.2373,  0.2852, -0.0137, -0.5430,  1.5859,  0.4082],
        [ 0.0000,  2.3750,  2.1250,  1.2656,  0.2080,  1.3750, -0.5820,  1.3750,  0.5977,  1.3984,  1.6484,  1.8594,  1.3984,  1.7344,  1.5469],
        [ 0.0000,  1.9844,  2.2656,  1.4531,  1.5547,  2.5000,  2.7656,  0.9805,  0.8438,  1.4844,  0.6680,  1.3906, -0.1367,  0.4336,  2.5156]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3668],
        [0.2112],
        [0.3391],
        [0.0557],
        [0.1395],
        [0.3142],
        [0.0347],
        [0.0670],
        [0.1517],
        [0.0376],
        [0.1131],
        [0.1857],
        [0.0258],
        [0.1295]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1118, 0.8867, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0420, 0.4629, 0.4961, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3652, 0.1099, 0.3105, 0.2139, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0447, 0.1729, 0.3379, 0.0796, 0.3633, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0283, 0.1719, 0.2578, 0.0674, 0.1377, 0.3379, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0132, 0.0383, 0.0601, 0.0303, 0.0903, 0.1226, 0.6445, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0491, 0.1118, 0.2617, 0.0493, 0.1396, 0.1475, 0.1187, 0.1221, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0179, 0.1982, 0.2520, 0.0574, 0.0776, 0.1797, 0.0461, 0.0752, 0.0962, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0342, 0.0459, 0.1201, 0.0280, 0.1387, 0.1299, 0.2148, 0.0835, 0.1250, 0.0796, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0222, 0.0693, 0.1631, 0.0334, 0.1260, 0.1719, 0.1318, 0.0513, 0.1050, 0.0654, 0.0613, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0212, 0.1060, 0.1748, 0.0422, 0.0588, 0.1123, 0.0757, 0.0537, 0.0801, 0.0928, 0.0334, 0.1484, 0.0000, 0.0000, 0.0000],
        [0.0476, 0.0347, 0.1318, 0.0222, 0.1240, 0.0684, 0.0913, 0.0630, 0.1895, 0.0581, 0.0432, 0.0894, 0.0364, 0.0000, 0.0000],
        [0.0109, 0.1162, 0.1553, 0.0334, 0.0449, 0.1045, 0.0189, 0.0413, 0.0635, 0.0801, 0.0820, 0.1387, 0.0190, 0.0918, 0.0000],
        [0.0157, 0.0693, 0.1016, 0.0334, 0.0742, 0.1367, 0.2061, 0.0300, 0.0508, 0.0374, 0.0322, 0.0608, 0.0131, 0.0347, 0.1040]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0290,  0.0399, -0.0106,  ...,  0.0338,  0.0195, -0.0264],
        [-0.0366,  0.0136, -0.0411,  ...,  0.0140, -0.0082,  0.0201],
        [-0.0538,  0.0059, -0.0305,  ..., -0.0537,  0.0058, -0.0064],
        ...,
        [-0.0357,  0.0132,  0.0037,  ...,  0.0042, -0.0130,  0.0199],
        [ 0.0250,  0.0153,  0.0320,  ...,  0.0042, -0.0153,  0.0083],
        [-0.0191,  0.0096, -0.0077,  ..., -0.0131, -0.0153, -0.0275]], device='cuda:0', requires_grad=True)
K: tensor([-0.9102, -0.5742,  1.1719,  1.8906, -0.5039,  0.7734,  0.8789, -0.3359,  1.4609, -0.7188,  0.0195, -0.1895, -0.6445, -0.0835,  0.6836, -0.1416, -0.3301, -0.2793, -0.4492,  1.0938,  0.9375, -1.1641, -0.6445, -0.1582, -0.0820, -1.2734, -0.1943,  0.6172, -0.5820, -0.5508,  1.4844, -0.2471,
        -1.5391, -1.2031,  1.0078,  0.3867, -0.0186, -1.5234, -0.0928, -0.1777, -0.8242,  0.8242,  0.6797, -1.7266,  0.1260, -0.7812,  0.8398, -0.2080, -0.0542, -0.6328,  0.5195, -0.0356,  0.0300,  0.3125,  0.2471,  0.0430, -1.0625,  0.1162,  0.4141,  0.4102,  1.4062,  0.0908,  0.6953, -0.5508],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0169,  0.0204,  0.0012,  ..., -0.0245, -0.0058, -0.0113],
        [ 0.0488,  0.0192,  0.0304,  ...,  0.0079, -0.0036,  0.0051],
        [-0.0183, -0.0131, -0.0014,  ...,  0.0190, -0.0034,  0.0043],
        ...,
        [ 0.0091,  0.0246, -0.0139,  ...,  0.0147, -0.0544, -0.0158],
        [ 0.0319, -0.0124,  0.0051,  ...,  0.0086,  0.0329, -0.0177],
        [ 0.0193, -0.0016, -0.0193,  ..., -0.0116,  0.0051,  0.0255]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.0908,  0.0869,  0.4922,  1.2266, -1.0469,  0.5781,  1.1719, -0.8086,  1.3281,  0.1367,  0.5078, -0.4316, -1.0391, -0.7070,  0.7188, -0.2236, -1.2500,  0.0986, -1.2891,  1.0859, -0.2070, -0.0747, -0.9648, -0.4043,  0.7734, -0.5508, -0.1279,  0.8516,  0.2871, -0.7695, -0.6797, -0.9805,
        -0.4102, -0.8164,  0.6562, -0.2100, -0.0586, -0.3125, -1.2891,  0.1426,  0.3086,  0.6914, -0.1299, -0.4863, -0.1631,  1.1406, -0.4199, -0.2852,  0.1138,  0.6484,  0.4375, -0.7617,  0.4590, -1.0469,  0.4219,  0.2793, -0.9492, -0.4688, -0.3340, -0.6211,  0.5547, -0.2598, -0.1177,  0.0593],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      2.0781,      0.9883,      1.4375,     -0.0381,      0.7031,      1.0938,      0.4727,     -0.2461,      1.0547,     -0.2119,      0.9922,     -0.0023,     -0.3828,      0.9961],
        [     0.0000,      2.3906,      2.4688,      1.3203,      0.9102,      1.9844,      1.2188,      0.9375,      1.0859,      1.7031,      1.0156,      2.2969,      0.0320,      1.2344,      1.9141],
        [     0.0000,     -1.2031,     -0.1602,     -0.5352,      0.6836,      0.1963,      2.5156,     -0.3730,      0.5312,     -0.7148,     -1.4141,     -0.5625,     -0.4297,     -0.3691,     -0.2363],
        [     0.0000,      1.3516,      2.0156,      0.5781,      2.0938,      2.4375,      2.5781,      1.2031,      1.3906,      1.0859,      1.1172,      1.5000,      0.1982,      1.0391,      2.0625],
        [     0.0000,      1.8047,      2.2031,      0.8672,      1.5781,      2.4844,      2.2344,      1.0547,      1.2188,      1.4766,      0.9062,      1.9453,     -0.0449,      0.9922,      2.0000],
        [     0.0000,      1.0625,      1.5156,      0.8281,      1.9219,      2.2188,      3.8906,      0.7930,      0.8164,      0.4512,      0.1797,      0.8320,     -0.0189,     -0.1289,      1.9609],
        [     0.0000,      0.8203,      1.6719,      0.0010,      1.0469,      1.1016,      0.8789,      0.9062,      1.4141,      1.1406,      0.2012,      1.4609,      0.0083,      1.2500,      0.7148],
        [     0.0000,      2.4062,      2.6406,      1.1641,      1.4688,      2.2969,      0.9453,      1.4375,      1.6797,      2.0156,      1.7578,      2.5312,      0.5156,      1.9375,      2.1719],
        [     0.0000,      0.2930,      1.2578,     -0.2051,      1.3984,      1.3281,      1.8359,      0.8906,      1.2969,      0.8398,     -0.1436,      0.9766,      0.0087,      0.9570,      0.6602],
        [     0.0000,      1.1406,      1.9922,      0.4141,      1.7422,      2.0469,      1.7812,      0.8398,      1.5547,      1.0781,      1.0156,      1.5469,     -0.0074,      1.3672,      1.6562],
        [     0.0000,      1.6016,      2.1094,      0.6875,      1.0156,      1.6641,      1.2656,      0.9258,      1.3281,      1.4688,      0.4551,      1.9375,      0.0126,      1.2734,      1.4141],
        [     0.0000,     -0.3164,      1.0234,     -0.7578,      0.9609,      0.3652,      0.6562,      0.2773,      1.3828,      0.2002,     -0.0967,      0.6289,     -0.2637,      1.1641,      0.0342],
        [     0.0000,      2.3594,      2.6562,      1.1250,      1.4141,      2.2656,      0.5508,      1.3281,      1.7656,      1.9922,      2.0156,      2.5469,      0.5586,      2.1250,      2.1719],
        [     0.0000,      1.4844,      1.8594,      0.7539,      1.5547,      2.1562,      2.5781,      0.6445,      1.1719,      0.8594,      0.7109,      1.3516,     -0.1855,      0.7852,      1.8906]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3590],
        [0.1906],
        [0.3084],
        [0.0777],
        [0.0784],
        [0.2876],
        [0.0536],
        [0.0554],
        [0.0563],
        [0.0345],
        [0.0838],
        [0.1376],
        [0.0295],
        [0.0497]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4082, 0.5898, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1758, 0.2793, 0.5469, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0640, 0.2441, 0.1709, 0.5195, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1123, 0.0459, 0.0737, 0.0228, 0.7461, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1221, 0.0593, 0.1064, 0.0850, 0.1465, 0.4805, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1182, 0.1504, 0.1060, 0.1074, 0.1787, 0.1514, 0.1885, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0615, 0.0786, 0.1494, 0.1494, 0.0747, 0.1523, 0.2295, 0.1045, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0898, 0.0273, 0.0713, 0.0334, 0.2988, 0.1338, 0.1445, 0.0396, 0.1621, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0479, 0.0505, 0.1138, 0.1396, 0.0483, 0.1621, 0.1855, 0.1016, 0.0294, 0.1226, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0723, 0.0476, 0.0713, 0.0527, 0.1543, 0.1021, 0.1748, 0.0388, 0.1030, 0.0757, 0.1074, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0267, 0.0388, 0.1211, 0.1582, 0.0137, 0.1040, 0.0806, 0.1182, 0.0130, 0.0815, 0.0330, 0.2109, 0.0000, 0.0000, 0.0000],
        [0.0571, 0.0623, 0.0806, 0.0693, 0.0864, 0.1001, 0.1177, 0.0613, 0.0889, 0.0713, 0.0781, 0.0771, 0.0498, 0.0000, 0.0000],
        [0.0640, 0.0170, 0.0437, 0.0200, 0.1865, 0.0996, 0.0771, 0.0287, 0.1177, 0.0496, 0.1157, 0.0334, 0.0288, 0.1182, 0.0000],
        [0.0212, 0.0513, 0.0962, 0.1455, 0.0079, 0.0610, 0.0664, 0.0693, 0.0095, 0.0574, 0.0188, 0.2451, 0.0178, 0.0090, 0.1230]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0290,  0.0399, -0.0106,  ...,  0.0338,  0.0195, -0.0264],
        [-0.0366,  0.0136, -0.0411,  ...,  0.0140, -0.0082,  0.0201],
        [-0.0538,  0.0059, -0.0305,  ..., -0.0537,  0.0058, -0.0064],
        ...,
        [-0.0357,  0.0132,  0.0037,  ...,  0.0042, -0.0130,  0.0199],
        [ 0.0250,  0.0153,  0.0320,  ...,  0.0042, -0.0153,  0.0083],
        [-0.0191,  0.0096, -0.0077,  ..., -0.0131, -0.0153, -0.0275]], device='cuda:0', requires_grad=True)
K: tensor([-0.9219, -0.6758,  0.3281, -0.8516, -0.6875, -0.9688, -1.4844, -0.7031, -0.1118, -0.6445,  0.1992, -0.1650,  1.6719,  1.2656, -0.6992,  0.8594,  0.1348,  0.9180, -0.4102, -0.2559, -0.3340,  0.0427,  1.3438, -1.1094, -0.9883, -1.8281,  1.4219, -0.6055, -1.0781, -0.1445, -0.4629, -0.0815,
         0.6367, -0.6250, -0.4766,  0.5352,  0.6602,  0.0359,  0.3535, -1.1016, -0.6367, -2.0781, -0.5586, -1.0703, -0.2520, -0.1523, -0.3262,  0.3555,  1.9453, -0.1533,  0.4219, -0.5039,  0.5156, -0.3984,  0.3594,  0.6953,  0.6562, -0.3535,  0.1357,  0.7383, -0.3223,  1.7734,  0.1196, -0.3301],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0169,  0.0204,  0.0012,  ..., -0.0245, -0.0058, -0.0113],
        [ 0.0488,  0.0192,  0.0304,  ...,  0.0079, -0.0036,  0.0051],
        [-0.0183, -0.0131, -0.0014,  ...,  0.0190, -0.0034,  0.0043],
        ...,
        [ 0.0091,  0.0246, -0.0139,  ...,  0.0147, -0.0544, -0.0158],
        [ 0.0319, -0.0124,  0.0051,  ...,  0.0086,  0.0329, -0.0177],
        [ 0.0193, -0.0016, -0.0193,  ..., -0.0116,  0.0051,  0.0255]], device='cuda:0', requires_grad=True)
Q: tensor([-0.2031, -0.0923, -0.1787, -0.9648,  0.6602,  0.4512, -0.0535,  0.1167,  0.5859,  0.1797,  0.2324,  1.3906,  0.0515,  0.9609, -0.2617,  2.1094, -0.3242,  1.1250,  0.4961, -0.2598,  0.0452,  0.4629,  0.3691, -0.5273,  0.2598, -1.3672,  1.3516, -0.5469, -0.3418, -0.1328,  1.2969, -0.1299,
         0.0864,  0.8125,  0.4336,  0.3496, -0.3184, -0.3379,  0.2041, -0.4980,  0.1553, -0.3828, -0.5859, -0.2227,  0.5039, -0.0732, -0.9258,  0.7734,  1.3359, -0.1904,  0.4824, -0.9414, -0.3438,  0.3887, -1.1484,  0.3281,  0.0210,  1.2031,  0.9023, -1.0547, -1.2578,  0.6250,  0.2139,  0.4023],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.3691, -0.3945,  0.4355, -0.0698,  0.1079, -0.3906,  0.5391, -0.3105,  0.4785, -0.1328,  0.2246,  0.5508, -0.2598, -0.0610],
        [ 0.0000,  0.4570,  1.1328,  1.0312,  0.4023,  0.6992,  1.4297,  0.3281,  0.0391, -0.0312,  0.5547,  0.7656,  0.0044,  0.0090,  0.9141],
        [ 0.0000,  1.3359,  0.9805,  2.0938, -0.3652,  0.4473,  1.3984,  0.8359, -0.7344,  0.7891, -0.1914,  1.4609,  0.1138, -0.7656,  1.2109],
        [ 0.0000, -0.8984, -0.4219, -1.5938,  1.8906,  0.0080,  0.5078, -1.6250,  1.1641, -0.4180,  0.7734, -0.9258, -1.4453,  1.1719, -1.1719],
        [ 0.0000, -0.7227, -0.1396, -0.3652,  0.1787,  1.3672,  0.3457,  0.2617,  0.0625,  0.6250,  0.3340,  0.1904,  0.1406,  0.0791,  0.0608],
        [ 0.0000,  0.2393, -0.1108, -0.0981,  0.4102,  0.2441,  0.4648, -0.3223,  0.0864,  0.4863,  0.0693,  0.5742, -0.6367,  0.0977, -0.1133],
        [ 0.0000,  0.2451,  0.8867,  0.8828,  0.1904,  0.9102,  1.3125,  0.5312,  0.0312,  0.4141,  0.2676,  0.7422, -0.0060, -0.0283,  0.8398],
        [ 0.0000, -1.1875, -0.2285, -0.9922,  1.2031,  0.3965,  0.4727, -0.8203,  0.5898, -0.4492,  0.6641, -0.8047, -0.6875,  0.5781, -0.6406],
        [ 0.0000,  0.0544,  0.8672,  1.0703,  0.0095,  1.2266,  1.3516,  0.7500, -0.4863,  0.9414,  0.1699,  0.9883, -0.0928, -0.5664,  0.8711],
        [ 0.0000, -0.4141, -0.0154, -0.3145,  0.7578,  0.3477,  0.8828, -0.6211,  0.3555,  0.0444,  0.3984,  0.0148, -0.8594,  0.3926, -0.1523],
        [ 0.0000,  0.3730,  1.5078,  1.7734, -0.6719,  1.3594,  1.1016,  1.4844, -0.7227,  1.1094,  0.2100,  2.0625,  0.3047, -0.8047,  1.6875],
        [ 0.0000,  0.0869,  0.3438,  0.1963,  0.4141,  0.5586,  0.7227,  0.0713,  0.4414,  0.2227,  0.3105,  0.2988, -0.1367,  0.4375,  0.2578],
        [ 0.0000, -1.3281, -0.3789, -1.1641,  1.0703,  0.4434,  0.1875, -0.8008,  0.6094, -0.2539,  0.5938, -0.6445, -0.7969,  0.6172, -0.7070],
        [ 0.0000,  0.8789,  1.5156,  1.9297, -0.9922,  1.0547,  1.1406,  1.1797, -0.8047,  0.9961, -0.1230,  2.4531, -0.1768, -0.8633,  1.7578]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5125],
        [0.2476],
        [0.1876],
        [0.1876],
        [0.1413],
        [0.1283],
        [0.1428],
        [0.0821],
        [0.0935],
        [0.1157],
        [0.0898],
        [0.1022],
        [0.0762],
        [0.1226]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4570, 0.5430, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1611, 0.2432, 0.5977, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0654, 0.2344, 0.2188, 0.4805, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1128, 0.0535, 0.0762, 0.0192, 0.7383, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1514, 0.1299, 0.1836, 0.1592, 0.0801, 0.2969, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1074, 0.2061, 0.1230, 0.1533, 0.1025, 0.1006, 0.2080, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0674, 0.1108, 0.2021, 0.1865, 0.0535, 0.0767, 0.2373, 0.0654, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0913, 0.0215, 0.0649, 0.0239, 0.3359, 0.0913, 0.1060, 0.0190, 0.2461, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0708, 0.0874, 0.1611, 0.1465, 0.0613, 0.0889, 0.1943, 0.0630, 0.0325, 0.0938, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0845, 0.0645, 0.0928, 0.0474, 0.1934, 0.0542, 0.1494, 0.0164, 0.1504, 0.0508, 0.0972, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0264, 0.0461, 0.1689, 0.1973, 0.0067, 0.0520, 0.0757, 0.0854, 0.0055, 0.0374, 0.0134, 0.2852, 0.0000, 0.0000, 0.0000],
        [0.0679, 0.1030, 0.1309, 0.0986, 0.0698, 0.0601, 0.1367, 0.0391, 0.0718, 0.0532, 0.0518, 0.0957, 0.0211, 0.0000, 0.0000],
        [0.0703, 0.0179, 0.0491, 0.0172, 0.1963, 0.0630, 0.0618, 0.0135, 0.1777, 0.0344, 0.1040, 0.0248, 0.0119, 0.1582, 0.0000],
        [0.0199, 0.0688, 0.1289, 0.1895, 0.0036, 0.0227, 0.0684, 0.0386, 0.0033, 0.0215, 0.0067, 0.2930, 0.0071, 0.0027, 0.1250]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0290,  0.0399, -0.0106,  ...,  0.0338,  0.0195, -0.0264],
        [-0.0366,  0.0136, -0.0411,  ...,  0.0140, -0.0082,  0.0201],
        [-0.0538,  0.0059, -0.0305,  ..., -0.0537,  0.0058, -0.0064],
        ...,
        [-0.0357,  0.0132,  0.0037,  ...,  0.0042, -0.0130,  0.0199],
        [ 0.0250,  0.0153,  0.0320,  ...,  0.0042, -0.0153,  0.0083],
        [-0.0191,  0.0096, -0.0077,  ..., -0.0131, -0.0153, -0.0275]], device='cuda:0', requires_grad=True)
K: tensor([-0.8164, -0.9883,  0.1855, -0.6992, -0.5664, -1.1719, -1.3984, -0.6523,  0.0223, -0.8125,  0.2021, -0.2852,  1.7344,  1.0938, -0.8203,  1.0234,  0.1270,  1.0469, -0.7969,  0.2490, -0.6406, -0.0035,  1.1953, -1.4375, -0.8477, -1.9688,  1.4219, -0.5195, -0.6562, -0.0806, -0.4570, -0.1992,
         0.5195, -1.0234, -0.4766,  0.3301,  0.8828,  0.3965,  0.4648, -1.2188, -0.7148, -2.1875, -0.5977, -0.6680, -0.1162, -0.3613, -0.4219,  0.1543,  1.5469, -0.1543,  0.5859, -0.6211,  0.8906, -0.4922,  0.5234,  0.5781,  0.7188, -0.3320,  0.5508,  0.8906, -0.7227,  1.7500,  0.1924, -0.1924],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0169,  0.0204,  0.0012,  ..., -0.0245, -0.0058, -0.0113],
        [ 0.0488,  0.0192,  0.0304,  ...,  0.0079, -0.0036,  0.0051],
        [-0.0183, -0.0131, -0.0014,  ...,  0.0190, -0.0034,  0.0043],
        ...,
        [ 0.0091,  0.0246, -0.0139,  ...,  0.0147, -0.0544, -0.0158],
        [ 0.0319, -0.0124,  0.0051,  ...,  0.0086,  0.0329, -0.0177],
        [ 0.0193, -0.0016, -0.0193,  ..., -0.0116,  0.0051,  0.0255]], device='cuda:0', requires_grad=True)
Q: tensor([-0.2227, -0.2334,  0.4297, -1.1641,  0.6133,  0.4180, -0.1758, -0.1475,  0.8008, -0.0435,  0.0693,  1.6172,  0.0374,  1.2812, -0.3340,  2.3594, -0.0703,  1.1719,  1.0000,  0.0752,  0.1230,  0.3359,  0.3535, -0.9141, -0.0771, -1.2266,  1.1875, -0.7500, -0.3594, -0.6602,  1.3359, -0.2539,
         0.1289,  1.0156,  0.5039,  0.3809, -0.2266, -0.5078,  0.2188, -0.4492,  0.2275, -0.5156, -0.4336, -0.1631,  0.5586, -0.3496, -0.9453,  0.7578,  1.2266, -0.3984,  0.5195, -0.8906, -0.3945,  0.8125, -1.4609,  0.0598,  0.2100,  1.0703,  0.8516, -1.5078, -1.4375,  0.7500,  0.5625,  0.2148],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.1709,     -0.3281,      0.3594,      0.3418,      0.7578,     -0.2773,      0.9688,      0.1011,      0.9922,      0.3770,      0.5625,      1.0312,      0.2061,      0.1865],
        [     0.0000,      0.4141,      1.3125,      1.1719,      0.1777,      0.4277,      1.5078,     -0.0454,     -0.3262,     -0.4121,      0.2871,      0.7695,     -0.4512,     -0.3672,      0.9102],
        [     0.0000,      1.2734,      1.2031,      1.9922,     -0.2139,      0.0762,      1.6641,      0.3262,     -0.9336,      0.3555,     -0.3105,      1.2812,     -0.4629,     -1.0156,      1.1016],
        [     0.0000,     -0.7461,     -0.3926,     -1.7656,      1.8828,     -0.4961,      0.0493,     -2.4062,      1.6016,     -0.6250,      0.7539,     -1.2578,     -2.2656,      1.4766,     -1.7656],
        [     0.0000,     -0.1465,      0.1963,      0.0537,     -0.6367,      0.6758,      0.4980,     -0.2354,     -0.7383,     -0.0275,     -0.6367,      0.3438,     -0.8867,     -0.8398,      0.0781],
        [     0.0000,      0.6523,      0.1348,      0.3535,     -0.0454,     -0.0674,      0.6602,     -0.6094,     -0.4023,      0.2988,     -0.3555,      0.9258,     -1.2344,     -0.4727,      0.0742],
        [     0.0000,      0.5039,      1.1016,      1.0234,     -0.2266,      0.1338,      1.2656,     -0.0232,     -0.5195,     -0.0732,     -0.4492,      0.6680,     -0.9961,     -0.7188,      0.6016],
        [     0.0000,     -1.4531,     -0.3398,     -1.3438,      1.2969,     -0.0025,      0.1465,     -1.5703,      0.9883,     -0.7617,      0.6172,     -1.3438,     -1.4922,      0.8945,     -1.2109],
        [     0.0000,      0.2119,      0.8242,      0.7305,     -0.1416,      0.2295,      1.0156,     -0.1133,     -0.7734,      0.2832,     -0.5312,      0.4980,     -1.2734,     -0.9922,      0.1807],
        [     0.0000,     -0.2715,      0.0972,     -0.5781,      0.8281,     -0.4434,      0.5703,     -1.6406,      0.5742,     -0.5078,      0.1406,     -0.3672,     -2.0312,      0.4375,     -0.7734],
        [     0.0000,      0.5586,      1.8594,      2.0156,     -1.3750,      0.6797,      1.0547,      1.1719,     -1.5781,      0.3457,     -0.6758,      2.3750,     -0.3867,     -1.7266,      1.8203],
        [     0.0000,      0.4160,      0.6523,      0.3691,      0.0287,     -0.1221,      0.6992,     -0.5586,      0.0557,     -0.2451,     -0.2734,      0.3418,     -1.1719,     -0.1187,      0.0645],
        [     0.0000,     -1.3672,     -0.3555,     -1.3984,      1.0312,     -0.1108,     -0.1289,     -1.6406,      0.9336,     -0.7109,      0.3945,     -1.0391,     -1.7734,      0.8125,     -1.2344],
        [     0.0000,      1.2422,      1.8672,      2.2500,     -1.7109,      0.1318,      1.2344,      0.6602,     -1.8125,      0.0752,     -1.0938,      2.6875,     -1.0312,     -1.9766,      1.8359]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5218],
        [0.2536],
        [0.1654],
        [0.1740],
        [0.1403],
        [0.1272],
        [0.1388],
        [0.1171],
        [0.1185],
        [0.1095],
        [0.1828],
        [0.1123],
        [0.1042],
        [0.1339]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.0918 a:0.0136.:0.0518 and:0.0464.:0.0294.:0.1309 the:0.0374.:0.0398)
.
------
		( a:0.0136.:0.0518 and:0.0464.:0.0294.:0.1309 the:0.0374.:0.0398
:0.1465)

The first to the same time.
The same.
- The
@ 1050 train 6.5168 , allloss: 6.9997, dt: 1632.27ms, fracRes: 0.0305, norm(attn): 0.1514, norm(output): 0.1738, norm(x): 0.1614, norm(y): 1.0002, norm:10.0555, tok/sec: 80300.32, flops:31.29, batch-reuse:1
@ 1051 train 6.4764 , allloss: 6.9497, dt: 1247.55ms, fracRes: 0.0329, norm(attn): 0.1562, norm(output): 0.1719, norm(x): 0.1590, norm(y): 1.0003, norm:6.7081, tok/sec: 105063.68, flops:40.93, batch-reuse:1
@ 1052 train 6.4160 , allloss: 6.8802, dt: 1220.88ms, fracRes: 0.0352, norm(attn): 0.1553, norm(output): 0.1709, norm(x): 0.1588, norm(y): 1.0004, norm:4.2328, tok/sec: 107358.71, flops:41.83, batch-reuse:1
@ 1053 train 6.5032 , allloss: 6.9815, dt: 1228.43ms, fracRes: 0.0369, norm(attn): 0.1553, norm(output): 0.1719, norm(x): 0.1596, norm(y): 1.0004, norm:7.8719, tok/sec: 106699.08, flops:41.57, batch-reuse:1
@ 1054 train 6.4826 , allloss: 6.9329, dt: 1256.08ms, fracRes: 0.0411, norm(attn): 0.1533, norm(output): 0.1719, norm(x): 0.1597, norm(y): 1.0003, norm:6.7429, tok/sec: 104350.07, flops:40.65, batch-reuse:1
@ 1055 train 6.4526 , allloss: 6.9070, dt: 1210.87ms, fracRes: 0.0392, norm(attn): 0.1562, norm(output): 0.1709, norm(x): 0.1586, norm(y): 1.0005, norm:5.8972, tok/sec: 108246.54, flops:42.17, batch-reuse:1
@ 1056 train 6.4615 , allloss: 6.9287, dt: 1244.42ms, fracRes: 0.0386, norm(attn): 0.1553, norm(output): 0.1719, norm(x): 0.1587, norm(y): 1.0006, norm:5.4995, tok/sec: 105328.02, flops:41.04, batch-reuse:1
@ 1057 train 6.5163 , allloss: 6.9753, dt: 1211.17ms, fracRes: 0.0408, norm(attn): 0.1494, norm(output): 0.1729, norm(x): 0.1601, norm(y): 1.0005, norm:9.3893, tok/sec: 108218.90, flops:42.16, batch-reuse:1
@ 1058 train 6.5154 , allloss: 6.9980, dt: 1180.50ms, fracRes: 0.0394, norm(attn): 0.1553, norm(output): 0.1719, norm(x): 0.1585, norm(y): 1.0004, norm:8.7937, tok/sec: 111030.47, flops:43.26, batch-reuse:1
@ 1059 train 6.4805 , allloss: 6.9366, dt: 1203.56ms, fracRes: 0.0396, norm(attn): 0.1592, norm(output): 0.1709, norm(x): 0.1567, norm(y): 1.0005, norm:7.4003, tok/sec: 108903.77, flops:42.43, batch-reuse:1
@ 1060 train 6.4978 , allloss: 6.9659, dt: 1188.61ms, fracRes: 0.0358, norm(attn): 0.1523, norm(output): 0.1729, norm(x): 0.1597, norm(y): 1.0005, norm:6.4284, tok/sec: 110273.36, flops:42.96, batch-reuse:1
@ 1061 train 6.5179 , allloss: 6.9745, dt: 1200.26ms, fracRes: 0.0362, norm(attn): 0.1553, norm(output): 0.1709, norm(x): 0.1565, norm(y): 1.0004, norm:5.5880, tok/sec: 109202.64, flops:42.55, batch-reuse:1
@ 1062 train 6.4756 , allloss: 6.9529, dt: 1238.29ms, fracRes: 0.0362, norm(attn): 0.1523, norm(output): 0.1709, norm(x): 0.1569, norm(y): 1.0004, norm:5.6897, tok/sec: 105848.82, flops:41.24, batch-reuse:1
@ 1063 train 6.5210 , allloss: 6.9908, dt: 1223.24ms, fracRes: 0.0399, norm(attn): 0.1582, norm(output): 0.1719, norm(x): 0.1564, norm(y): 1.0006, norm:9.9938, tok/sec: 107151.68, flops:41.75, batch-reuse:1
@ 1064 train 6.5297 , allloss: 6.9586, dt: 1202.75ms, fracRes: 0.0393, norm(attn): 0.1543, norm(output): 0.1680, norm(x): 0.1558, norm(y): 1.0005, norm:8.7906, tok/sec: 108976.89, flops:42.46, batch-reuse:1
@ 1065 train 6.5252 , allloss: 6.9990, dt: 1220.50ms, fracRes: 0.0520, norm(attn): 0.1484, norm(output): 0.1709, norm(x): 0.1582, norm(y): 1.0007, norm:6.8341, tok/sec: 107391.82, flops:41.84, batch-reuse:1
@ 1066 train 6.5385 , allloss: 6.9814, dt: 1228.74ms, fracRes: 0.0540, norm(attn): 0.1484, norm(output): 0.1729, norm(x): 0.1594, norm(y): 1.0008, norm:6.6113, tok/sec: 106671.61, flops:41.56, batch-reuse:1
@ 1067 train 6.5583 , allloss: 6.9792, dt: 1189.64ms, fracRes: 0.0432, norm(attn): 0.1611, norm(output): 0.1670, norm(x): 0.1546, norm(y): 1.0008, norm:7.7521, tok/sec: 110178.00, flops:42.93, batch-reuse:1
@ 1068 train 6.5365 , allloss: 6.9755, dt: 1225.00ms, fracRes: 0.0436, norm(attn): 0.1562, norm(output): 0.1660, norm(x): 0.1538, norm(y): 1.0007, norm:11.4111, tok/sec: 106997.75, flops:41.69, batch-reuse:1
@ 1069 train 6.4715 , allloss: 6.9132, dt: 1246.94ms, fracRes: 0.0433, norm(attn): 0.1445, norm(output): 0.1709, norm(x): 0.1556, norm(y): 1.0007, norm:10.2554, tok/sec: 105115.07, flops:40.95, batch-reuse:1
@ 1070 train 6.4676 , allloss: 6.9145, dt: 1240.74ms, fracRes: 0.0447, norm(attn): 0.1445, norm(output): 0.1709, norm(x): 0.1553, norm(y): 1.0007, norm:4.3631, tok/sec: 105640.08, flops:41.16, batch-reuse:1
@ 1071 train 6.4031 , allloss: 6.8612, dt: 1217.75ms, fracRes: 0.0430, norm(attn): 0.1553, norm(output): 0.1680, norm(x): 0.1536, norm(y): 1.0009, norm:8.6990, tok/sec: 107634.92, flops:41.93, batch-reuse:1
@ 1072 train 6.5161 , allloss: 6.9596, dt: 1231.54ms, fracRes: 0.0425, norm(attn): 0.1523, norm(output): 0.1670, norm(x): 0.1537, norm(y): 1.0009, norm:7.7881, tok/sec: 106429.17, flops:41.46, batch-reuse:1
@ 1073 train 6.4190 , allloss: 6.8489, dt: 1224.37ms, fracRes: 0.0429, norm(attn): 0.1416, norm(output): 0.1699, norm(x): 0.1548, norm(y): 1.0009, norm:5.2635, tok/sec: 107052.88, flops:41.71, batch-reuse:1
@ 1074 train 6.4212 , allloss: 6.8546, dt: 1205.24ms, fracRes: 0.0517, norm(attn): 0.1406, norm(output): 0.1699, norm(x): 0.1543, norm(y): 1.0010, norm:5.7744, tok/sec: 108752.06, flops:42.37, batch-reuse:1
@ 1075 train 6.4844 , allloss: 6.9225, dt: 1248.28ms, fracRes: 0.0519, norm(attn): 0.1387, norm(output): 0.1699, norm(x): 0.1542, norm(y): 1.0009, norm:11.3352, tok/sec: 105001.84, flops:40.91, batch-reuse:1
@ 1076 train 6.5335 , allloss: 6.9604, dt: 1211.99ms, fracRes: 0.0531, norm(attn): 0.1436, norm(output): 0.1660, norm(x): 0.1522, norm(y): 1.0010, norm:10.7195, tok/sec: 108145.86, flops:42.13, batch-reuse:1
@ 1077 train 6.4104 , allloss: 6.8368, dt: 1198.99ms, fracRes: 0.0546, norm(attn): 0.1445, norm(output): 0.1660, norm(x): 0.1513, norm(y): 1.0011, norm:4.9437, tok/sec: 109318.80, flops:42.59, batch-reuse:1
@ 1078 train 6.7519 , allloss: 7.1531, dt: 1214.97ms, fracRes: 0.0613, norm(attn): 0.1416, norm(output): 0.1670, norm(x): 0.1522, norm(y): 1.0011, norm:9.1909, tok/sec: 107880.93, flops:42.03, batch-reuse:1
@ 1079 train 6.4234 , allloss: 6.7940, dt: 1235.39ms, fracRes: 0.0548, norm(attn): 0.1367, norm(output): 0.1689, norm(x): 0.1537, norm(y): 1.0012, norm:8.0454, tok/sec: 106097.80, flops:41.34, batch-reuse:1
@ 1080 train 6.4707 , allloss: 6.8802, dt: 1221.22ms, fracRes: 0.0496, norm(attn): 0.1396, norm(output): 0.1670, norm(x): 0.1533, norm(y): 1.0013, norm:7.2602, tok/sec: 107328.32, flops:41.82, batch-reuse:1
@ 1081 train 6.4553 , allloss: 6.8721, dt: 1241.33ms, fracRes: 0.0486, norm(attn): 0.1406, norm(output): 0.1709, norm(x): 0.1556, norm(y): 1.0012, norm:5.6482, tok/sec: 105589.57, flops:41.14, batch-reuse:1
@ 1082 train 6.6508 , allloss: 7.0550, dt: 1245.99ms, fracRes: 0.0519, norm(attn): 0.1406, norm(output): 0.1709, norm(x): 0.1563, norm(y): 1.0012, norm:10.7310, tok/sec: 105194.70, flops:40.98, batch-reuse:1
@ 1083 train 6.4289 , allloss: 6.8322, dt: 1218.00ms, fracRes: 0.0472, norm(attn): 0.1367, norm(output): 0.1709, norm(x): 0.1554, norm(y): 1.0011, norm:5.7636, tok/sec: 107612.27, flops:41.93, batch-reuse:1
@ 1084 train 6.3742 , allloss: 6.7959, dt: 1245.92ms, fracRes: 0.0481, norm(attn): 0.1445, norm(output): 0.1670, norm(x): 0.1529, norm(y): 1.0011, norm:9.0279, tok/sec: 105200.80, flops:40.99, batch-reuse:1
@ 1085 train 6.6277 , allloss: 7.0384, dt: 1243.57ms, fracRes: 0.0516, norm(attn): 0.1602, norm(output): 0.1670, norm(x): 0.1527, norm(y): 1.0013, norm:9.6219, tok/sec: 105400.11, flops:41.06, batch-reuse:1
@ 1086 train 6.4481 , allloss: 6.8664, dt: 1213.76ms, fracRes: 0.0535, norm(attn): 0.1484, norm(output): 0.1670, norm(x): 0.1533, norm(y): 1.0013, norm:9.3489, tok/sec: 107988.15, flops:42.07, batch-reuse:1
@ 1087 train 6.3784 , allloss: 6.7705, dt: 1190.85ms, fracRes: 0.0670, norm(attn): 0.1426, norm(output): 0.1709, norm(x): 0.1541, norm(y): 1.0013, norm:5.4184, tok/sec: 110065.96, flops:42.88, batch-reuse:1
@ 1088 train 6.4863 , allloss: 6.8525, dt: 1176.73ms, fracRes: 0.0650, norm(attn): 0.1387, norm(output): 0.1709, norm(x): 0.1554, norm(y): 1.0012, norm:4.9174, tok/sec: 111386.90, flops:43.40, batch-reuse:1
@ 1089 train 6.3854 , allloss: 6.7561, dt: 1188.50ms, fracRes: 0.0595, norm(attn): 0.1426, norm(output): 0.1709, norm(x): 0.1549, norm(y): 1.0012, norm:4.1863, tok/sec: 110283.27, flops:42.97, batch-reuse:1
@ 1090 train 6.3971 , allloss: 6.7973, dt: 1191.97ms, fracRes: 0.0578, norm(attn): 0.1426, norm(output): 0.1709, norm(x): 0.1542, norm(y): 1.0011, norm:6.8282, tok/sec: 109962.42, flops:42.84, batch-reuse:1
@ 1091 train 6.4231 , allloss: 6.8091, dt: 1215.57ms, fracRes: 0.0530, norm(attn): 0.1465, norm(output): 0.1709, norm(x): 0.1541, norm(y): 1.0010, norm:8.4627, tok/sec: 107827.58, flops:42.01, batch-reuse:1
@ 1092 train 6.5355 , allloss: 6.9293, dt: 1221.62ms, fracRes: 0.0506, norm(attn): 0.1445, norm(output): 0.1709, norm(x): 0.1552, norm(y): 1.0010, norm:5.3901, tok/sec: 107294.01, flops:41.80, batch-reuse:1
@ 1093 train 6.3629 , allloss: 6.7698, dt: 1237.61ms, fracRes: 0.0539, norm(attn): 0.1406, norm(output): 0.1709, norm(x): 0.1561, norm(y): 1.0010, norm:6.3502, tok/sec: 105907.47, flops:41.26, batch-reuse:1
@ 1094 train 6.3746 , allloss: 6.7710, dt: 1254.61ms, fracRes: 0.0526, norm(attn): 0.1396, norm(output): 0.1709, norm(x): 0.1565, norm(y): 1.0010, norm:6.0169, tok/sec: 104472.08, flops:40.70, batch-reuse:1
@ 1095 train 6.3786 , allloss: 6.7588, dt: 1230.60ms, fracRes: 0.0515, norm(attn): 0.1416, norm(output): 0.1709, norm(x): 0.1562, norm(y): 1.0010, norm:6.5722, tok/sec: 106510.37, flops:41.50, batch-reuse:1
@ 1096 train 6.4059 , allloss: 6.8286, dt: 1212.95ms, fracRes: 0.0538, norm(attn): 0.1416, norm(output): 0.1709, norm(x): 0.1564, norm(y): 1.0010, norm:4.4688, tok/sec: 108060.92, flops:42.10, batch-reuse:1
@ 1097 train 6.3560 , allloss: 6.7451, dt: 1215.47ms, fracRes: 0.0501, norm(attn): 0.1455, norm(output): 0.1719, norm(x): 0.1566, norm(y): 1.0010, norm:7.3537, tok/sec: 107836.55, flops:42.01, batch-reuse:1
@ 1098 train 6.3645 , allloss: 6.7437, dt: 1224.02ms, fracRes: 0.0485, norm(attn): 0.1484, norm(output): 0.1719, norm(x): 0.1556, norm(y): 1.0010, norm:9.1740, tok/sec: 107082.86, flops:41.72, batch-reuse:1
@ 1099 train 6.4262 , allloss: 6.8351, dt: 1222.63ms, fracRes: 0.0461, norm(attn): 0.1514, norm(output): 0.1699, norm(x): 0.1538, norm(y): 1.0009, norm:6.9173, tok/sec: 107205.23, flops:41.77, batch-reuse:1
@ 1100 train 6.4349 , allloss: 6.8281, dt: 1240.20ms, fracRes: 0.0456, norm(attn): 0.1553, norm(output): 0.1680, norm(x): 0.1537, norm(y): 1.0010, norm:9.3131, tok/sec: 105686.03, flops:41.18, batch-reuse:1
@ 1101 train 6.4760 , allloss: 6.8815, dt: 1234.17ms, fracRes: 0.0482, norm(attn): 0.1553, norm(output): 0.1719, norm(x): 0.1569, norm(y): 1.0010, norm:6.7997, tok/sec: 106202.49, flops:41.38, batch-reuse:1
@ 1102 train 6.4382 , allloss: 6.8430, dt: 1193.46ms, fracRes: 0.0583, norm(attn): 0.1504, norm(output): 0.1719, norm(x): 0.1576, norm(y): 1.0009, norm:9.4811, tok/sec: 109825.50, flops:42.79, batch-reuse:1
@ 1103 train 6.5008 , allloss: 6.9092, dt: 1189.94ms, fracRes: 0.0501, norm(attn): 0.1533, norm(output): 0.1709, norm(x): 0.1559, norm(y): 1.0009, norm:7.1348, tok/sec: 110150.29, flops:42.91, batch-reuse:1
@ 1104 train 6.6583 , allloss: 7.0717, dt: 1208.06ms, fracRes: 0.0454, norm(attn): 0.1602, norm(output): 0.1729, norm(x): 0.1580, norm(y): 1.0011, norm:7.8709, tok/sec: 108497.53, flops:42.27, batch-reuse:1
@ 1105 train 6.4458 , allloss: 6.8741, dt: 1181.03ms, fracRes: 0.0405, norm(attn): 0.1562, norm(output): 0.1719, norm(x): 0.1570, norm(y): 1.0009, norm:6.7721, tok/sec: 110981.29, flops:43.24, batch-reuse:1
@ 1106 train 6.4259 , allloss: 6.8695, dt: 1177.86ms, fracRes: 0.0429, norm(attn): 0.1553, norm(output): 0.1709, norm(x): 0.1560, norm(y): 1.0008, norm:9.8956, tok/sec: 111280.05, flops:43.35, batch-reuse:1
@ 1107 train 6.5562 , allloss: 6.9771, dt: 1186.10ms, fracRes: 0.0446, norm(attn): 0.1523, norm(output): 0.1719, norm(x): 0.1574, norm(y): 1.0007, norm:7.1953, tok/sec: 110506.61, flops:43.05, batch-reuse:1
@ 1108 train 6.4591 , allloss: 6.8628, dt: 1198.52ms, fracRes: 0.0451, norm(attn): 0.1543, norm(output): 0.1719, norm(x): 0.1587, norm(y): 1.0007, norm:14.3721, tok/sec: 109361.66, flops:42.61, batch-reuse:1
@ 1109 train 6.4442 , allloss: 6.8491, dt: 1190.69ms, fracRes: 0.0462, norm(attn): 0.1553, norm(output): 0.1729, norm(x): 0.1589, norm(y): 1.0007, norm:9.4534, tok/sec: 110080.99, flops:42.89, batch-reuse:1
@ 1110 train 6.4169 , allloss: 6.8342, dt: 1209.46ms, fracRes: 0.0494, norm(attn): 0.1562, norm(output): 0.1719, norm(x): 0.1576, norm(y): 1.0008, norm:5.4638, tok/sec: 108372.65, flops:42.22, batch-reuse:1
@ 1111 train 6.4156 , allloss: 6.8131, dt: 1202.43ms, fracRes: 0.0540, norm(attn): 0.1553, norm(output): 0.1719, norm(x): 0.1570, norm(y): 1.0007, norm:9.0242, tok/sec: 109005.60, flops:42.47, batch-reuse:1
@ 1112 train 6.5596 , allloss: 6.9841, dt: 1202.34ms, fracRes: 0.0520, norm(attn): 0.1562, norm(output): 0.1719, norm(x): 0.1579, norm(y): 1.0006, norm:6.7276, tok/sec: 109014.16, flops:42.47, batch-reuse:1
@ 1113 train 6.5570 , allloss: 6.9707, dt: 1209.18ms, fracRes: 0.0478, norm(attn): 0.1562, norm(output): 0.1729, norm(x): 0.1598, norm(y): 1.0007, norm:9.0309, tok/sec: 108397.50, flops:42.23, batch-reuse:1
@ 1114 train 6.6353 , allloss: 7.0664, dt: 1243.46ms, fracRes: 0.0497, norm(attn): 0.1562, norm(output): 0.1738, norm(x): 0.1610, norm(y): 1.0008, norm:7.3601, tok/sec: 105409.35, flops:41.07, batch-reuse:1
@ 1115 train 6.5706 , allloss: 6.9974, dt: 1209.61ms, fracRes: 0.0515, norm(attn): 0.1592, norm(output): 0.1729, norm(x): 0.1610, norm(y): 1.0007, norm:7.7758, tok/sec: 108358.77, flops:42.22, batch-reuse:1
@ 1116 train 6.5111 , allloss: 6.8882, dt: 1222.83ms, fracRes: 0.0525, norm(attn): 0.1562, norm(output): 0.1738, norm(x): 0.1606, norm(y): 1.0007, norm:10.0884, tok/sec: 107187.78, flops:41.76, batch-reuse:1
@ 1117 train 6.4872 , allloss: 6.8865, dt: 1238.33ms, fracRes: 0.0491, norm(attn): 0.1562, norm(output): 0.1719, norm(x): 0.1590, norm(y): 1.0007, norm:4.7429, tok/sec: 105845.42, flops:41.24, batch-reuse:1
@ 1118 train 6.5941 , allloss: 7.0490, dt: 1237.29ms, fracRes: 0.0453, norm(attn): 0.1621, norm(output): 0.1719, norm(x): 0.1587, norm(y): 1.0007, norm:9.4507, tok/sec: 105935.12, flops:41.27, batch-reuse:1
@ 1119 train 6.5359 , allloss: 6.9581, dt: 1219.82ms, fracRes: 0.0433, norm(attn): 0.1621, norm(output): 0.1719, norm(x): 0.1582, norm(y): 1.0007, norm:6.8690, tok/sec: 107451.94, flops:41.86, batch-reuse:1
@ 1120 train 6.5692 , allloss: 6.9796, dt: 1217.66ms, fracRes: 0.0444, norm(attn): 0.1602, norm(output): 0.1729, norm(x): 0.1596, norm(y): 1.0006, norm:9.9939, tok/sec: 107642.66, flops:41.94, batch-reuse:1
@ 1121 train 6.6078 , allloss: 7.0344, dt: 1243.09ms, fracRes: 0.0455, norm(attn): 0.1572, norm(output): 0.1719, norm(x): 0.1588, norm(y): 1.0007, norm:5.8100, tok/sec: 105440.30, flops:41.08, batch-reuse:1
@ 1122 train 6.6016 , allloss: 7.0065, dt: 1219.70ms, fracRes: 0.0489, norm(attn): 0.1582, norm(output): 0.1719, norm(x): 0.1587, norm(y): 1.0008, norm:17.6071, tok/sec: 107462.25, flops:41.87, batch-reuse:1
@ 1123 train 6.4853 , allloss: 6.8776, dt: 1225.33ms, fracRes: 0.0498, norm(attn): 0.1562, norm(output): 0.1729, norm(x): 0.1584, norm(y): 1.0008, norm:6.7535, tok/sec: 106969.04, flops:41.68, batch-reuse:1
@ 1124 train 6.5428 , allloss: 6.9228, dt: 1246.62ms, fracRes: 0.0525, norm(attn): 0.1582, norm(output): 0.1729, norm(x): 0.1583, norm(y): 1.0007, norm:9.9204, tok/sec: 105142.21, flops:40.96, batch-reuse:1
@ 1125 train 6.6287 , allloss: 7.0153, dt: 1242.02ms, fracRes: 0.0530, norm(attn): 0.1582, norm(output): 0.1719, norm(x): 0.1566, norm(y): 1.0007, norm:10.2177, tok/sec: 105530.98, flops:41.11, batch-reuse:1
@ 1126 train 6.5322 , allloss: 6.9327, dt: 1237.22ms, fracRes: 0.0524, norm(attn): 0.1582, norm(output): 0.1709, norm(x): 0.1558, norm(y): 1.0006, norm:8.6482, tok/sec: 105940.53, flops:41.27, batch-reuse:1
@ 1127 train 6.5056 , allloss: 6.8970, dt: 1219.10ms, fracRes: 0.0518, norm(attn): 0.1572, norm(output): 0.1719, norm(x): 0.1587, norm(y): 1.0005, norm:5.3483, tok/sec: 107515.78, flops:41.89, batch-reuse:1
@ 1128 train 6.5167 , allloss: 6.9018, dt: 1248.20ms, fracRes: 0.0512, norm(attn): 0.1553, norm(output): 0.1748, norm(x): 0.1617, norm(y): 1.0006, norm:5.4611, tok/sec: 105008.98, flops:40.91, batch-reuse:1
@ 1129 train 6.5470 , allloss: 6.9564, dt: 1240.41ms, fracRes: 0.0545, norm(attn): 0.1562, norm(output): 0.1719, norm(x): 0.1578, norm(y): 1.0007, norm:7.4047, tok/sec: 105667.87, flops:41.17, batch-reuse:1
@ 1130 train 6.4791 , allloss: 6.8745, dt: 1241.70ms, fracRes: 0.0539, norm(attn): 0.1572, norm(output): 0.1719, norm(x): 0.1580, norm(y): 1.0007, norm:4.8601, tok/sec: 105558.88, flops:41.13, batch-reuse:1
@ 1131 train 6.5638 , allloss: 6.9449, dt: 1212.38ms, fracRes: 0.0519, norm(attn): 0.1533, norm(output): 0.1748, norm(x): 0.1611, norm(y): 1.0005, norm:6.9879, tok/sec: 108111.58, flops:42.12, batch-reuse:1
@ 1132 train 6.5601 , allloss: 6.9595, dt: 1192.80ms, fracRes: 0.0523, norm(attn): 0.1562, norm(output): 0.1729, norm(x): 0.1588, norm(y): 1.0004, norm:4.9926, tok/sec: 109886.15, flops:42.81, batch-reuse:1
@ 1133 train 6.5637 , allloss: 6.9776, dt: 1206.59ms, fracRes: 0.0520, norm(attn): 0.1602, norm(output): 0.1709, norm(x): 0.1554, norm(y): 1.0005, norm:4.4327, tok/sec: 108629.96, flops:42.32, batch-reuse:1
@ 1134 train 6.5038 , allloss: 6.9129, dt: 1216.97ms, fracRes: 0.0506, norm(attn): 0.1592, norm(output): 0.1699, norm(x): 0.1553, norm(y): 1.0005, norm:6.8170, tok/sec: 107703.65, flops:41.96, batch-reuse:1
@ 1135 train 6.4911 , allloss: 6.8813, dt: 1236.85ms, fracRes: 0.0510, norm(attn): 0.1572, norm(output): 0.1709, norm(x): 0.1561, norm(y): 1.0003, norm:5.0683, tok/sec: 105972.82, flops:41.29, batch-reuse:1
@ 1136 train 6.5460 , allloss: 6.9487, dt: 1234.70ms, fracRes: 0.0539, norm(attn): 0.1572, norm(output): 0.1709, norm(x): 0.1565, norm(y): 1.0003, norm:5.2028, tok/sec: 106156.98, flops:41.36, batch-reuse:1
@ 1137 train 6.5500 , allloss: 6.9274, dt: 1184.64ms, fracRes: 0.0554, norm(attn): 0.1504, norm(output): 0.1719, norm(x): 0.1590, norm(y): 1.0004, norm:10.7604, tok/sec: 110642.52, flops:43.11, batch-reuse:1
@ 1138 train 6.6869 , allloss: 7.1087, dt: 1203.87ms, fracRes: 0.0574, norm(attn): 0.1533, norm(output): 0.1709, norm(x): 0.1563, norm(y): 1.0005, norm:8.8883, tok/sec: 108875.84, flops:42.42, batch-reuse:1
@ 1139 train 6.5166 , allloss: 6.9171, dt: 1213.96ms, fracRes: 0.0591, norm(attn): 0.1533, norm(output): 0.1719, norm(x): 0.1575, norm(y): 1.0004, norm:6.2775, tok/sec: 107970.34, flops:42.07, batch-reuse:1
@ 1140 train 6.5499 , allloss: 6.9671, dt: 1210.91ms, fracRes: 0.0557, norm(attn): 0.1514, norm(output): 0.1729, norm(x): 0.1594, norm(y): 1.0003, norm:5.6425, tok/sec: 108242.85, flops:42.17, batch-reuse:1
@ 1141 train 6.4610 , allloss: 6.8738, dt: 1214.20ms, fracRes: 0.0531, norm(attn): 0.1504, norm(output): 0.1729, norm(x): 0.1609, norm(y): 1.0004, norm:5.9280, tok/sec: 107949.46, flops:42.06, batch-reuse:1
@ 1142 train 6.4792 , allloss: 6.9300, dt: 1244.12ms, fracRes: 0.0502, norm(attn): 0.1543, norm(output): 0.1719, norm(x): 0.1575, norm(y): 1.0003, norm:6.6990, tok/sec: 105353.53, flops:41.05, batch-reuse:1
@ 1143 train 6.6234 , allloss: 7.0005, dt: 1205.30ms, fracRes: 0.0509, norm(attn): 0.1602, norm(output): 0.1719, norm(x): 0.1590, norm(y): 1.0004, norm:19.9400, tok/sec: 108746.08, flops:42.37, batch-reuse:1
@ 1144 train 6.5049 , allloss: 6.8944, dt: 1203.60ms, fracRes: 0.0502, norm(attn): 0.1572, norm(output): 0.1719, norm(x): 0.1581, norm(y): 1.0004, norm:7.8557, tok/sec: 108899.69, flops:42.43, batch-reuse:1
@ 1145 train 6.6506 , allloss: 7.1191, dt: 1192.75ms, fracRes: 0.0552, norm(attn): 0.1582, norm(output): 0.1709, norm(x): 0.1561, norm(y): 1.0004, norm:13.0331, tok/sec: 109890.74, flops:42.81, batch-reuse:1
@ 1146 train 6.6306 , allloss: 7.0718, dt: 1214.63ms, fracRes: 0.0684, norm(attn): 0.1543, norm(output): 0.1719, norm(x): 0.1577, norm(y): 1.0004, norm:15.0466, tok/sec: 107910.74, flops:42.04, batch-reuse:1
@ 1147 train 6.5574 , allloss: 6.9208, dt: 1200.94ms, fracRes: 0.0748, norm(attn): 0.1543, norm(output): 0.1729, norm(x): 0.1603, norm(y): 1.0005, norm:6.8749, tok/sec: 109140.75, flops:42.52, batch-reuse:1
@ 1148 train 6.4795 , allloss: 6.8561, dt: 1228.07ms, fracRes: 0.0673, norm(attn): 0.1641, norm(output): 0.1719, norm(x): 0.1599, norm(y): 1.0007, norm:5.1963, tok/sec: 106730.34, flops:41.58, batch-reuse:1
@ 1149 train 6.4850 , allloss: 6.8534, dt: 1219.54ms, fracRes: 0.0657, norm(attn): 0.1641, norm(output): 0.1729, norm(x): 0.1613, norm(y): 1.0005, norm:6.4204, tok/sec: 107476.28, flops:41.87, batch-reuse:1
@ 1150 train 6.4905 , allloss: 6.8863, dt: 1197.89ms, fracRes: 0.0490, norm(attn): 0.1719, norm(output): 0.1719, norm(x): 0.1593, norm(y): 1.0006, norm:5.3083, tok/sec: 109418.95, flops:42.63, batch-reuse:1
@ 1151 train 6.5806 , allloss: 6.9948, dt: 1202.05ms, fracRes: 0.0459, norm(attn): 0.1719, norm(output): 0.1729, norm(x): 0.1608, norm(y): 1.0004, norm:5.8919, tok/sec: 109040.76, flops:42.48, batch-reuse:1
@ 1152 train 6.5026 , allloss: 6.9283, dt: 1220.35ms, fracRes: 0.0487, norm(attn): 0.1670, norm(output): 0.1729, norm(x): 0.1618, norm(y): 1.0003, norm:6.5488, tok/sec: 107405.17, flops:41.85, batch-reuse:1
@ 1153 train 6.5225 , allloss: 6.9324, dt: 1182.56ms, fracRes: 0.0507, norm(attn): 0.1650, norm(output): 0.1729, norm(x): 0.1607, norm(y): 1.0002, norm:5.9278, tok/sec: 110837.06, flops:43.18, batch-reuse:1
@ 1154 train 6.5454 , allloss: 6.9907, dt: 1219.83ms, fracRes: 0.0516, norm(attn): 0.1689, norm(output): 0.1719, norm(x): 0.1595, norm(y): 1.0005, norm:10.7255, tok/sec: 107451.14, flops:41.86, batch-reuse:1
@ 1155 train 6.4171 , allloss: 6.8345, dt: 1247.15ms, fracRes: 0.0555, norm(attn): 0.1689, norm(output): 0.1729, norm(x): 0.1602, norm(y): 1.0004, norm:5.1796, tok/sec: 105097.43, flops:40.95, batch-reuse:1
@ 1156 train 6.5887 , allloss: 6.9784, dt: 1199.53ms, fracRes: 0.0601, norm(attn): 0.1562, norm(output): 0.1807, norm(x): 0.1665, norm(y): 1.0002, norm:13.3623, tok/sec: 109269.28, flops:42.57, batch-reuse:1
@ 1157 train 6.5110 , allloss: 6.9462, dt: 1220.07ms, fracRes: 0.0620, norm(attn): 0.1602, norm(output): 0.1787, norm(x): 0.1643, norm(y): 1.0003, norm:7.2467, tok/sec: 107429.70, flops:41.85, batch-reuse:1
@ 1158 train 6.5102 , allloss: 6.9286, dt: 1229.52ms, fracRes: 0.0627, norm(attn): 0.1592, norm(output): 0.1816, norm(x): 0.1660, norm(y): 1.0005, norm:6.9500, tok/sec: 106604.15, flops:41.53, batch-reuse:1
@ 1159 train 6.5699 , allloss: 6.9973, dt: 1199.49ms, fracRes: 0.0653, norm(attn): 0.1709, norm(output): 0.1768, norm(x): 0.1635, norm(y): 1.0004, norm:8.0368, tok/sec: 109273.28, flops:42.57, batch-reuse:1
@ 1160 train 6.5039 , allloss: 6.9450, dt: 1216.12ms, fracRes: 0.0630, norm(attn): 0.1709, norm(output): 0.1777, norm(x): 0.1644, norm(y): 1.0004, norm:4.7876, tok/sec: 107778.54, flops:41.99, batch-reuse:1
@ 1161 train 6.4032 , allloss: 6.8390, dt: 1224.24ms, fracRes: 0.0654, norm(attn): 0.1670, norm(output): 0.1826, norm(x): 0.1675, norm(y): 1.0004, norm:8.0078, tok/sec: 107064.36, flops:41.71, batch-reuse:1
@ 1162 train 6.3837 , allloss: 6.8675, dt: 1223.48ms, fracRes: 0.0669, norm(attn): 0.1729, norm(output): 0.1777, norm(x): 0.1645, norm(y): 1.0003, norm:9.5298, tok/sec: 107130.90, flops:41.74, batch-reuse:1
@ 1163 train 6.5307 , allloss: 6.9793, dt: 1239.47ms, fracRes: 0.0632, norm(attn): 0.1768, norm(output): 0.1768, norm(x): 0.1638, norm(y): 1.0003, norm:6.4349, tok/sec: 105748.51, flops:41.20, batch-reuse:1
@ 1164 train 6.4664 , allloss: 6.9065, dt: 1217.70ms, fracRes: 0.0606, norm(attn): 0.1816, norm(output): 0.1797, norm(x): 0.1646, norm(y): 1.0003, norm:8.7072, tok/sec: 107639.20, flops:41.94, batch-reuse:1
@ 1165 train 6.5447 , allloss: 7.0112, dt: 1208.91ms, fracRes: 0.0630, norm(attn): 0.1855, norm(output): 0.1787, norm(x): 0.1646, norm(y): 1.0004, norm:5.3299, tok/sec: 108421.27, flops:42.24, batch-reuse:1
@ 1166 train 6.5404 , allloss: 6.9566, dt: 1205.20ms, fracRes: 0.0681, norm(attn): 0.1816, norm(output): 0.1816, norm(x): 0.1658, norm(y): 1.0003, norm:17.0123, tok/sec: 108754.95, flops:42.37, batch-reuse:1
@ 1167 train 6.4496 , allloss: 6.8506, dt: 1214.68ms, fracRes: 0.0656, norm(attn): 0.1816, norm(output): 0.1797, norm(x): 0.1650, norm(y): 1.0002, norm:6.3817, tok/sec: 107906.66, flops:42.04, batch-reuse:1
@ 1168 train 6.4159 , allloss: 6.8465, dt: 1232.40ms, fracRes: 0.0683, norm(attn): 0.1885, norm(output): 0.1777, norm(x): 0.1633, norm(y): 1.0004, norm:10.1752, tok/sec: 106355.43, flops:41.44, batch-reuse:1
@ 1169 train 6.4903 , allloss: 6.9411, dt: 1199.32ms, fracRes: 0.0717, norm(attn): 0.1895, norm(output): 0.1777, norm(x): 0.1634, norm(y): 1.0006, norm:5.5295, tok/sec: 109288.46, flops:42.58, batch-reuse:1
@ 1170 train 6.4352 , allloss: 6.8731, dt: 1198.73ms, fracRes: 0.0584, norm(attn): 0.1865, norm(output): 0.1797, norm(x): 0.1649, norm(y): 1.0004, norm:8.4668, tok/sec: 109342.30, flops:42.60, batch-reuse:1
@ 1171 train 6.3895 , allloss: 6.8165, dt: 1213.64ms, fracRes: 0.0565, norm(attn): 0.1816, norm(output): 0.1816, norm(x): 0.1660, norm(y): 1.0003, norm:6.7419, tok/sec: 107999.29, flops:42.08, batch-reuse:1
@ 1172 train 6.5545 , allloss: 6.9836, dt: 1176.46ms, fracRes: 0.0587, norm(attn): 0.1865, norm(output): 0.1777, norm(x): 0.1637, norm(y): 1.0004, norm:8.0101, tok/sec: 111412.52, flops:43.41, batch-reuse:1
@ 1173 train 6.4706 , allloss: 6.8728, dt: 1206.92ms, fracRes: 0.0620, norm(attn): 0.1875, norm(output): 0.1768, norm(x): 0.1633, norm(y): 1.0005, norm:7.2903, tok/sec: 108600.80, flops:42.31, batch-reuse:1
@ 1174 train 6.3735 , allloss: 6.7568, dt: 1199.70ms, fracRes: 0.0625, norm(attn): 0.1875, norm(output): 0.1777, norm(x): 0.1635, norm(y): 1.0004, norm:6.8169, tok/sec: 109254.34, flops:42.57, batch-reuse:1
@ 1175 train 6.5052 , allloss: 6.9192, dt: 1211.96ms, fracRes: 0.0590, norm(attn): 0.1934, norm(output): 0.1748, norm(x): 0.1609, norm(y): 1.0005, norm:6.1848, tok/sec: 108148.88, flops:42.13, batch-reuse:1
@ 1176 train 6.5325 , allloss: 6.9519, dt: 1202.48ms, fracRes: 0.0587, norm(attn): 0.1943, norm(output): 0.1758, norm(x): 0.1620, norm(y): 1.0005, norm:4.5599, tok/sec: 109001.56, flops:42.47, batch-reuse:1
@ 1177 train 6.5062 , allloss: 6.9114, dt: 1215.34ms, fracRes: 0.0607, norm(attn): 0.1904, norm(output): 0.1777, norm(x): 0.1631, norm(y): 1.0005, norm:5.0334, tok/sec: 107847.64, flops:42.02, batch-reuse:1
@ 1178 train 6.5860 , allloss: 6.9966, dt: 1234.75ms, fracRes: 0.0626, norm(attn): 0.1953, norm(output): 0.1777, norm(x): 0.1627, norm(y): 1.0006, norm:5.2806, tok/sec: 106152.33, flops:41.36, batch-reuse:1
@ 1179 train 6.5219 , allloss: 6.9255, dt: 1232.44ms, fracRes: 0.0674, norm(attn): 0.1982, norm(output): 0.1768, norm(x): 0.1631, norm(y): 1.0004, norm:6.0173, tok/sec: 106351.65, flops:41.43, batch-reuse:1
@ 1180 train 6.5162 , allloss: 6.9138, dt: 1210.21ms, fracRes: 0.0626, norm(attn): 0.1904, norm(output): 0.1816, norm(x): 0.1650, norm(y): 1.0002, norm:9.3326, tok/sec: 108305.03, flops:42.20, batch-reuse:1
@ 1181 train 6.4379 , allloss: 6.8460, dt: 1197.35ms, fracRes: 0.0623, norm(attn): 0.1953, norm(output): 0.1768, norm(x): 0.1624, norm(y): 1.0004, norm:5.7193, tok/sec: 109468.34, flops:42.65, batch-reuse:1
@ 1182 train 6.5305 , allloss: 6.9385, dt: 1204.69ms, fracRes: 0.0583, norm(attn): 0.2031, norm(output): 0.1748, norm(x): 0.1618, norm(y): 1.0006, norm:4.4794, tok/sec: 108801.82, flops:42.39, batch-reuse:1
@ 1183 train 6.4848 , allloss: 6.8862, dt: 1204.30ms, fracRes: 0.0595, norm(attn): 0.1973, norm(output): 0.1768, norm(x): 0.1625, norm(y): 1.0006, norm:9.5510, tok/sec: 108836.68, flops:42.40, batch-reuse:1
@ 1184 train 6.4327 , allloss: 6.8346, dt: 1182.28ms, fracRes: 0.0576, norm(attn): 0.1924, norm(output): 0.1777, norm(x): 0.1641, norm(y): 1.0005, norm:8.1914, tok/sec: 110864.17, flops:43.19, batch-reuse:1
@ 1185 train 6.4964 , allloss: 6.9150, dt: 1189.14ms, fracRes: 0.0573, norm(attn): 0.1973, norm(output): 0.1768, norm(x): 0.1628, norm(y): 1.0007, norm:4.5492, tok/sec: 110224.54, flops:42.94, batch-reuse:1
@ 1186 train 6.4848 , allloss: 6.9046, dt: 1214.95ms, fracRes: 0.0552, norm(attn): 0.2031, norm(output): 0.1738, norm(x): 0.1604, norm(y): 1.0008, norm:8.4891, tok/sec: 107882.43, flops:42.03, batch-reuse:1
@ 1187 train 6.4851 , allloss: 6.9029, dt: 1208.50ms, fracRes: 0.0507, norm(attn): 0.2012, norm(output): 0.1738, norm(x): 0.1609, norm(y): 1.0006, norm:5.1669, tok/sec: 108458.26, flops:42.26, batch-reuse:1
@ 1188 train 6.3918 , allloss: 6.7921, dt: 1203.89ms, fracRes: 0.0531, norm(attn): 0.1934, norm(output): 0.1768, norm(x): 0.1631, norm(y): 1.0005, norm:7.4134, tok/sec: 108873.55, flops:42.42, batch-reuse:1
@ 1189 train 6.4286 , allloss: 6.8348, dt: 1223.47ms, fracRes: 0.0529, norm(attn): 0.1953, norm(output): 0.1758, norm(x): 0.1617, norm(y): 1.0007, norm:4.7482, tok/sec: 107131.07, flops:41.74, batch-reuse:1
@ 1190 train 6.5425 , allloss: 6.9545, dt: 1226.67ms, fracRes: 0.0547, norm(attn): 0.2012, norm(output): 0.1758, norm(x): 0.1614, norm(y): 1.0007, norm:4.6880, tok/sec: 106851.53, flops:41.63, batch-reuse:1
@ 1191 train 6.5755 , allloss: 6.9800, dt: 1204.84ms, fracRes: 0.0508, norm(attn): 0.1934, norm(output): 0.1768, norm(x): 0.1625, norm(y): 1.0006, norm:4.9441, tok/sec: 108787.72, flops:42.38, batch-reuse:1
@ 1192 train 6.4112 , allloss: 6.8059, dt: 1215.61ms, fracRes: 0.0467, norm(attn): 0.1914, norm(output): 0.1768, norm(x): 0.1626, norm(y): 1.0005, norm:5.3351, tok/sec: 107824.10, flops:42.01, batch-reuse:1
@ 1193 train 6.4471 , allloss: 6.8555, dt: 1230.01ms, fracRes: 0.0441, norm(attn): 0.2002, norm(output): 0.1729, norm(x): 0.1592, norm(y): 1.0006, norm:4.7923, tok/sec: 106561.32, flops:41.52, batch-reuse:1
@ 1194 train 6.4896 , allloss: 6.8950, dt: 1189.20ms, fracRes: 0.0450, norm(attn): 0.2031, norm(output): 0.1729, norm(x): 0.1595, norm(y): 1.0006, norm:6.7467, tok/sec: 110218.58, flops:42.94, batch-reuse:1
@ 1195 train 6.4030 , allloss: 6.7965, dt: 1225.71ms, fracRes: 0.0448, norm(attn): 0.2031, norm(output): 0.1719, norm(x): 0.1578, norm(y): 1.0006, norm:6.2256, tok/sec: 106935.18, flops:41.66, batch-reuse:1
@ 1196 train 6.5071 , allloss: 6.9040, dt: 1192.35ms, fracRes: 0.0407, norm(attn): 0.2012, norm(output): 0.1729, norm(x): 0.1589, norm(y): 1.0005, norm:6.6245, tok/sec: 109927.00, flops:42.83, batch-reuse:1
@ 1197 train 6.4865 , allloss: 6.8789, dt: 1198.33ms, fracRes: 0.0405, norm(attn): 0.1914, norm(output): 0.1738, norm(x): 0.1609, norm(y): 1.0005, norm:6.6907, tok/sec: 109378.76, flops:42.61, batch-reuse:1
@ 1198 train 6.4331 , allloss: 6.8362, dt: 1211.92ms, fracRes: 0.0388, norm(attn): 0.1895, norm(output): 0.1729, norm(x): 0.1600, norm(y): 1.0006, norm:3.9056, tok/sec: 108151.93, flops:42.14, batch-reuse:1
@ 1199 train 6.4568 , allloss: 6.8564, dt: 1205.37ms, fracRes: 0.0333, norm(attn): 0.1904, norm(output): 0.1729, norm(x): 0.1601, norm(y): 1.0005, norm:3.7682, tok/sec: 108740.27, flops:42.37, batch-reuse:1
@ 1200 train 6.4855 , allloss: 6.8905, dt: 1211.50ms, fracRes: 0.0315, norm(attn): 0.1914, norm(output): 0.1738, norm(x): 0.1608, norm(y): 1.0005, norm:7.3789, tok/sec: 108190.26, flops:42.15, batch-reuse:1
@ 1201 train 6.4635 , allloss: 6.8688, dt: 1192.30ms, fracRes: 0.0305, norm(attn): 0.1963, norm(output): 0.1719, norm(x): 0.1582, norm(y): 1.0006, norm:6.9126, tok/sec: 109932.12, flops:42.83, batch-reuse:1
@ 1202 train 6.5088 , allloss: 6.9132, dt: 1195.06ms, fracRes: 0.0294, norm(attn): 0.1992, norm(output): 0.1709, norm(x): 0.1566, norm(y): 1.0007, norm:6.7831, tok/sec: 109678.02, flops:42.73, batch-reuse:1
@ 1203 train 6.7169 , allloss: 7.1101, dt: 1187.85ms, fracRes: 0.0294, norm(attn): 0.1973, norm(output): 0.1719, norm(x): 0.1579, norm(y): 1.0006, norm:6.6838, tok/sec: 110343.92, flops:42.99, batch-reuse:1
@ 1204 train 6.4472 , allloss: 6.8355, dt: 1185.59ms, fracRes: 0.0285, norm(attn): 0.1943, norm(output): 0.1719, norm(x): 0.1571, norm(y): 1.0007, norm:7.9730, tok/sec: 110554.01, flops:43.07, batch-reuse:1
@ 1205 train 6.3934 , allloss: 6.7732, dt: 1189.00ms, fracRes: 0.0289, norm(attn): 0.1934, norm(output): 0.1709, norm(x): 0.1555, norm(y): 1.0007, norm:6.7245, tok/sec: 110237.18, flops:42.95, batch-reuse:1
@ 1206 train 6.3943 , allloss: 6.7902, dt: 1207.61ms, fracRes: 0.0250, norm(attn): 0.1875, norm(output): 0.1709, norm(x): 0.1549, norm(y): 1.0006, norm:7.0223, tok/sec: 108538.26, flops:42.29, batch-reuse:1
@ 1207 train 6.4725 , allloss: 6.8419, dt: 1205.32ms, fracRes: 0.0255, norm(attn): 0.1904, norm(output): 0.1709, norm(x): 0.1562, norm(y): 1.0005, norm:11.6382, tok/sec: 108744.25, flops:42.37, batch-reuse:1
@ 1208 train 6.3645 , allloss: 6.7379, dt: 1211.38ms, fracRes: 0.0236, norm(attn): 0.1865, norm(output): 0.1719, norm(x): 0.1571, norm(y): 1.0005, norm:5.4360, tok/sec: 108200.67, flops:42.15, batch-reuse:1
@ 1209 train 6.4069 , allloss: 6.8039, dt: 1204.25ms, fracRes: 0.0249, norm(attn): 0.1787, norm(output): 0.1729, norm(x): 0.1599, norm(y): 1.0006, norm:7.4299, tok/sec: 108840.94, flops:42.40, batch-reuse:1
@ 1210 train 6.4119 , allloss: 6.8021, dt: 1208.31ms, fracRes: 0.0264, norm(attn): 0.1816, norm(output): 0.1729, norm(x): 0.1606, norm(y): 1.0006, norm:6.3953, tok/sec: 108475.74, flops:42.26, batch-reuse:1
@ 1211 train 6.4642 , allloss: 6.8554, dt: 1241.29ms, fracRes: 0.0253, norm(attn): 0.1787, norm(output): 0.1738, norm(x): 0.1620, norm(y): 1.0004, norm:7.4433, tok/sec: 105593.67, flops:41.14, batch-reuse:1
@ 1212 train 6.4984 , allloss: 6.9094, dt: 1222.93ms, fracRes: 0.0239, norm(attn): 0.1758, norm(output): 0.1787, norm(x): 0.1651, norm(y): 1.0003, norm:7.2031, tok/sec: 107178.37, flops:41.76, batch-reuse:1
@ 1213 train 6.3868 , allloss: 6.7946, dt: 1222.55ms, fracRes: 0.0250, norm(attn): 0.1777, norm(output): 0.1758, norm(x): 0.1632, norm(y): 1.0005, norm:6.4389, tok/sec: 107212.25, flops:41.77, batch-reuse:1
@ 1214 train 6.4196 , allloss: 6.8022, dt: 1203.90ms, fracRes: 0.0272, norm(attn): 0.1846, norm(output): 0.1729, norm(x): 0.1614, norm(y): 1.0005, norm:7.6162, tok/sec: 108872.41, flops:42.42, batch-reuse:1
@ 1215 train 6.4168 , allloss: 6.7974, dt: 1190.62ms, fracRes: 0.0271, norm(attn): 0.1865, norm(output): 0.1729, norm(x): 0.1616, norm(y): 1.0006, norm:5.7164, tok/sec: 110087.63, flops:42.89, batch-reuse:1
@ 1216 train 6.4479 , allloss: 6.8337, dt: 1206.62ms, fracRes: 0.0250, norm(attn): 0.1846, norm(output): 0.1758, norm(x): 0.1627, norm(y): 1.0005, norm:9.0660, tok/sec: 108627.67, flops:42.32, batch-reuse:1
@ 1217 train 6.3992 , allloss: 6.7896, dt: 1219.69ms, fracRes: 0.0239, norm(attn): 0.1855, norm(output): 0.1729, norm(x): 0.1613, norm(y): 1.0004, norm:4.3990, tok/sec: 107463.49, flops:41.87, batch-reuse:1
@ 1218 train 6.5183 , allloss: 6.9158, dt: 1199.13ms, fracRes: 0.0257, norm(attn): 0.1895, norm(output): 0.1738, norm(x): 0.1595, norm(y): 1.0003, norm:9.8095, tok/sec: 109305.65, flops:42.59, batch-reuse:1
@ 1219 train 6.3908 , allloss: 6.7747, dt: 1219.13ms, fracRes: 0.0254, norm(attn): 0.1885, norm(output): 0.1729, norm(x): 0.1591, norm(y): 1.0003, norm:7.6516, tok/sec: 107512.52, flops:41.89, batch-reuse:1
@ 1220 train 6.4297 , allloss: 6.8401, dt: 1237.95ms, fracRes: 0.0263, norm(attn): 0.1816, norm(output): 0.1777, norm(x): 0.1640, norm(y): 1.0003, norm:6.7633, tok/sec: 105877.91, flops:41.25, batch-reuse:1
@ 1221 train 6.3447 , allloss: 6.7539, dt: 1188.95ms, fracRes: 0.0261, norm(attn): 0.1797, norm(output): 0.1797, norm(x): 0.1657, norm(y): 1.0002, norm:4.8942, tok/sec: 110242.20, flops:42.95, batch-reuse:1
@ 1222 train 6.4050 , allloss: 6.7848, dt: 1214.82ms, fracRes: 0.0238, norm(attn): 0.1855, norm(output): 0.1729, norm(x): 0.1617, norm(y): 1.0002, norm:7.5922, tok/sec: 107894.50, flops:42.04, batch-reuse:1
@ 1223 train 6.4077 , allloss: 6.7939, dt: 1213.21ms, fracRes: 0.0229, norm(attn): 0.1875, norm(output): 0.1729, norm(x): 0.1615, norm(y): 1.0003, norm:5.1367, tok/sec: 108037.24, flops:42.09, batch-reuse:1
@ 1224 train 6.3269 , allloss: 6.7263, dt: 1217.14ms, fracRes: 0.0243, norm(attn): 0.1865, norm(output): 0.1738, norm(x): 0.1622, norm(y): 1.0002, norm:4.9268, tok/sec: 107688.41, flops:41.96, batch-reuse:1
@ 1225 train 6.3965 , allloss: 6.7839, dt: 1244.61ms, fracRes: 0.0249, norm(attn): 0.1885, norm(output): 0.1768, norm(x): 0.1647, norm(y): 1.0003, norm:8.3373, tok/sec: 105312.00, flops:41.03, batch-reuse:1
@ 1226 train 6.4415 , allloss: 6.8380, dt: 1226.85ms, fracRes: 0.0247, norm(attn): 0.1875, norm(output): 0.1816, norm(x): 0.1665, norm(y): 1.0002, norm:5.7962, tok/sec: 106836.18, flops:41.62, batch-reuse:1
@ 1227 train 6.3882 , allloss: 6.7956, dt: 1205.32ms, fracRes: 0.0242, norm(attn): 0.1885, norm(output): 0.1807, norm(x): 0.1664, norm(y): 1.0002, norm:5.0449, tok/sec: 108744.19, flops:42.37, batch-reuse:1
@ 1228 train 6.3808 , allloss: 6.7822, dt: 1208.64ms, fracRes: 0.0228, norm(attn): 0.1934, norm(output): 0.1768, norm(x): 0.1641, norm(y): 1.0003, norm:8.8545, tok/sec: 108445.57, flops:42.25, batch-reuse:1
@ 1229 train 6.3974 , allloss: 6.8025, dt: 1226.52ms, fracRes: 0.0238, norm(attn): 0.1875, norm(output): 0.1797, norm(x): 0.1659, norm(y): 1.0000, norm:5.3816, tok/sec: 106865.03, flops:41.63, batch-reuse:1
@ 1230 train 6.3658 , allloss: 6.7820, dt: 1227.63ms, fracRes: 0.0284, norm(attn): 0.1846, norm(output): 0.1816, norm(x): 0.1676, norm(y): 0.9998, norm:7.1226, tok/sec: 106768.65, flops:41.60, batch-reuse:1
@ 1231 train 6.3864 , allloss: 6.8069, dt: 1215.60ms, fracRes: 0.0310, norm(attn): 0.1875, norm(output): 0.1797, norm(x): 0.1666, norm(y): 0.9999, norm:5.2410, tok/sec: 107824.79, flops:42.01, batch-reuse:1
@ 1232 train 6.3769 , allloss: 6.7713, dt: 1197.54ms, fracRes: 0.0303, norm(attn): 0.1895, norm(output): 0.1768, norm(x): 0.1651, norm(y): 0.9999, norm:9.9384, tok/sec: 109451.21, flops:42.64, batch-reuse:1
@ 1233 train 6.3690 , allloss: 6.7756, dt: 1198.75ms, fracRes: 0.0265, norm(attn): 0.1943, norm(output): 0.1738, norm(x): 0.1635, norm(y): 1.0001, norm:6.0623, tok/sec: 109341.00, flops:42.60, batch-reuse:1
@ 1234 train 6.3896 , allloss: 6.8131, dt: 1201.43ms, fracRes: 0.0232, norm(attn): 0.1885, norm(output): 0.1777, norm(x): 0.1654, norm(y): 1.0000, norm:5.3866, tok/sec: 109096.83, flops:42.50, batch-reuse:1
@ 1235 train 6.4359 , allloss: 6.8374, dt: 1242.72ms, fracRes: 0.0207, norm(attn): 0.1885, norm(output): 0.1836, norm(x): 0.1688, norm(y): 0.9999, norm:11.8564, tok/sec: 105471.47, flops:41.09, batch-reuse:1
@ 1236 train 6.4540 , allloss: 6.8676, dt: 1224.17ms, fracRes: 0.0190, norm(attn): 0.1885, norm(output): 0.1826, norm(x): 0.1681, norm(y): 1.0000, norm:7.2229, tok/sec: 107069.93, flops:41.71, batch-reuse:1
@ 1237 train 6.3988 , allloss: 6.8183, dt: 1210.14ms, fracRes: 0.0201, norm(attn): 0.1875, norm(output): 0.1816, norm(x): 0.1670, norm(y): 1.0001, norm:4.5921, tok/sec: 108311.84, flops:42.20, batch-reuse:1
@ 1238 train 6.3425 , allloss: 6.7661, dt: 1202.13ms, fracRes: 0.0210, norm(attn): 0.1826, norm(output): 0.1816, norm(x): 0.1672, norm(y): 1.0001, norm:3.9605, tok/sec: 109032.84, flops:42.48, batch-reuse:1
@ 1239 train 6.3422 , allloss: 6.7841, dt: 1207.32ms, fracRes: 0.0203, norm(attn): 0.1836, norm(output): 0.1826, norm(x): 0.1684, norm(y): 1.0001, norm:4.5814, tok/sec: 108564.25, flops:42.30, batch-reuse:1
@ 1240 train 6.3816 , allloss: 6.8028, dt: 1225.35ms, fracRes: 0.0203, norm(attn): 0.1836, norm(output): 0.1826, norm(x): 0.1680, norm(y): 1.0000, norm:11.0267, tok/sec: 106966.60, flops:41.67, batch-reuse:1
@ 1241 train 6.3190 , allloss: 6.7425, dt: 1206.09ms, fracRes: 0.0212, norm(attn): 0.1875, norm(output): 0.1777, norm(x): 0.1653, norm(y): 1.0000, norm:5.2686, tok/sec: 108675.40, flops:42.34, batch-reuse:1
@ 1242 train 6.3673 , allloss: 6.7994, dt: 1217.68ms, fracRes: 0.0221, norm(attn): 0.1855, norm(output): 0.1768, norm(x): 0.1655, norm(y): 1.0001, norm:7.2151, tok/sec: 107640.34, flops:41.94, batch-reuse:1
@ 1243 train 6.4022 , allloss: 6.8238, dt: 1216.10ms, fracRes: 0.0216, norm(attn): 0.1846, norm(output): 0.1797, norm(x): 0.1665, norm(y): 1.0001, norm:5.9352, tok/sec: 107781.01, flops:41.99, batch-reuse:1
@ 1244 train 6.3792 , allloss: 6.8053, dt: 1214.02ms, fracRes: 0.0224, norm(attn): 0.1865, norm(output): 0.1768, norm(x): 0.1647, norm(y): 1.0002, norm:4.5757, tok/sec: 107965.70, flops:42.06, batch-reuse:1
@ 1245 train 6.3257 , allloss: 6.7485, dt: 1251.36ms, fracRes: 0.0207, norm(attn): 0.1855, norm(output): 0.1768, norm(x): 0.1651, norm(y): 1.0001, norm:5.0133, tok/sec: 104744.02, flops:40.81, batch-reuse:1
@ 1246 train 6.3465 , allloss: 6.7693, dt: 1238.98ms, fracRes: 0.0204, norm(attn): 0.1836, norm(output): 0.1777, norm(x): 0.1663, norm(y): 1.0001, norm:4.6525, tok/sec: 105790.51, flops:41.22, batch-reuse:1
@ 1247 train 6.2812 , allloss: 6.7052, dt: 1212.43ms, fracRes: 0.0202, norm(attn): 0.1768, norm(output): 0.1816, norm(x): 0.1673, norm(y): 1.0001, norm:4.2867, tok/sec: 108107.28, flops:42.12, batch-reuse:1
@ 1248 train 6.3965 , allloss: 6.8442, dt: 1221.05ms, fracRes: 0.0221, norm(attn): 0.1797, norm(output): 0.1768, norm(x): 0.1661, norm(y): 1.0002, norm:6.9161, tok/sec: 107343.72, flops:41.82, batch-reuse:1
@ 1249 train 6.2719 , allloss: 6.6949, dt: 1241.80ms, fracRes: 0.0210, norm(attn): 0.1758, norm(output): 0.1797, norm(x): 0.1679, norm(y): 1.0001, norm:5.8795, tok/sec: 105549.60, flops:41.12, batch-reuse:1
@ 1250 train 6.4033 , allloss: 6.8482, dt: 1248.70ms, fracRes: 0.0242, norm(attn): 0.1738, norm(output): 0.1816, norm(x): 0.1682, norm(y): 1.0001, norm:4.1350, tok/sec: 104967.03, flops:40.90, batch-reuse:1
@ 1251 train 6.3405 , allloss: 6.7743, dt: 1218.66ms, fracRes: 0.0213, norm(attn): 0.1719, norm(output): 0.1826, norm(x): 0.1684, norm(y): 1.0000, norm:8.4787, tok/sec: 107554.50, flops:41.90, batch-reuse:1
@ 1252 train 6.4203 , allloss: 6.8788, dt: 1203.43ms, fracRes: 0.0222, norm(attn): 0.1738, norm(output): 0.1787, norm(x): 0.1672, norm(y): 1.0000, norm:5.6967, tok/sec: 108915.14, flops:42.43, batch-reuse:1
@ 1253 train 6.3028 , allloss: 6.7469, dt: 1220.52ms, fracRes: 0.0198, norm(attn): 0.1777, norm(output): 0.1777, norm(x): 0.1659, norm(y): 1.0001, norm:5.6111, tok/sec: 107389.98, flops:41.84, batch-reuse:1
@ 1254 train 6.3517 , allloss: 6.7898, dt: 1220.17ms, fracRes: 0.0183, norm(attn): 0.1738, norm(output): 0.1807, norm(x): 0.1666, norm(y): 1.0000, norm:6.5401, tok/sec: 107421.03, flops:41.85, batch-reuse:1
@ 1255 train 6.3553 , allloss: 6.8178, dt: 1232.06ms, fracRes: 0.0201, norm(attn): 0.1738, norm(output): 0.1768, norm(x): 0.1659, norm(y): 1.0001, norm:4.4833, tok/sec: 106384.10, flops:41.45, batch-reuse:1
@ 1256 train 6.3295 , allloss: 6.7630, dt: 1237.63ms, fracRes: 0.0182, norm(attn): 0.1748, norm(output): 0.1768, norm(x): 0.1662, norm(y): 1.0001, norm:7.0184, tok/sec: 105905.55, flops:41.26, batch-reuse:1
@ 1257 train 6.3625 , allloss: 6.8077, dt: 1234.41ms, fracRes: 0.0225, norm(attn): 0.1719, norm(output): 0.1768, norm(x): 0.1659, norm(y): 1.0001, norm:5.3496, tok/sec: 106181.61, flops:41.37, batch-reuse:1
@ 1258 train 6.2941 , allloss: 6.7388, dt: 1241.93ms, fracRes: 0.0211, norm(attn): 0.1680, norm(output): 0.1787, norm(x): 0.1668, norm(y): 1.0002, norm:5.1962, tok/sec: 105538.74, flops:41.12, batch-reuse:1
@ 1259 train 6.3277 , allloss: 6.7466, dt: 1245.12ms, fracRes: 0.0206, norm(attn): 0.1689, norm(output): 0.1816, norm(x): 0.1678, norm(y): 1.0001, norm:4.8399, tok/sec: 105268.95, flops:41.01, batch-reuse:1
@ 1260 train 6.2970 , allloss: 6.7309, dt: 1227.43ms, fracRes: 0.0233, norm(attn): 0.1719, norm(output): 0.1768, norm(x): 0.1661, norm(y): 1.0001, norm:4.6414, tok/sec: 106786.09, flops:41.60, batch-reuse:1
@ 1261 train 6.3126 , allloss: 6.7271, dt: 1215.42ms, fracRes: 0.0207, norm(attn): 0.1719, norm(output): 0.1777, norm(x): 0.1665, norm(y): 1.0001, norm:6.8452, tok/sec: 107841.21, flops:42.01, batch-reuse:1
@ 1262 train 6.3503 , allloss: 6.7816, dt: 1237.00ms, fracRes: 0.0253, norm(attn): 0.1738, norm(output): 0.1748, norm(x): 0.1646, norm(y): 1.0001, norm:8.9770, tok/sec: 105959.72, flops:41.28, batch-reuse:1
@ 1263 train 6.2795 , allloss: 6.7164, dt: 1242.68ms, fracRes: 0.0252, norm(attn): 0.1719, norm(output): 0.1758, norm(x): 0.1650, norm(y): 1.0001, norm:4.7522, tok/sec: 105475.20, flops:41.09, batch-reuse:1
@ 1264 train 6.4246 , allloss: 6.8466, dt: 1226.77ms, fracRes: 0.0197, norm(attn): 0.1719, norm(output): 0.1787, norm(x): 0.1667, norm(y): 1.0001, norm:7.4599, tok/sec: 106842.93, flops:41.63, batch-reuse:1
@ 1265 train 6.3161 , allloss: 6.7487, dt: 1247.67ms, fracRes: 0.0247, norm(attn): 0.1729, norm(output): 0.1748, norm(x): 0.1644, norm(y): 1.0001, norm:9.6272, tok/sec: 105053.12, flops:40.93, batch-reuse:1
@ 1266 train 6.3438 , allloss: 6.7718, dt: 1239.28ms, fracRes: 0.0282, norm(attn): 0.1758, norm(output): 0.1768, norm(x): 0.1650, norm(y): 1.0001, norm:8.2480, tok/sec: 105764.44, flops:41.21, batch-reuse:1
@ 1267 train 6.3392 , allloss: 6.7578, dt: 1249.81ms, fracRes: 0.0256, norm(attn): 0.1719, norm(output): 0.1768, norm(x): 0.1653, norm(y): 1.0000, norm:4.1263, tok/sec: 104873.20, flops:40.86, batch-reuse:1
@ 1268 train 6.4010 , allloss: 6.8149, dt: 1210.49ms, fracRes: 0.0247, norm(attn): 0.1709, norm(output): 0.1768, norm(x): 0.1646, norm(y): 1.0001, norm:7.6416, tok/sec: 108280.37, flops:42.19, batch-reuse:1
@ 1269 train 6.3458 , allloss: 6.7582, dt: 1207.73ms, fracRes: 0.0237, norm(attn): 0.1729, norm(output): 0.1758, norm(x): 0.1644, norm(y): 1.0001, norm:5.0235, tok/sec: 108527.50, flops:42.28, batch-reuse:1
@ 1270 train 6.3130 , allloss: 6.7325, dt: 1256.54ms, fracRes: 0.0245, norm(attn): 0.1719, norm(output): 0.1777, norm(x): 0.1659, norm(y): 1.0000, norm:6.4791, tok/sec: 104311.70, flops:40.64, batch-reuse:1
@ 1271 train 6.2936 , allloss: 6.7256, dt: 1256.80ms, fracRes: 0.0247, norm(attn): 0.1768, norm(output): 0.1768, norm(x): 0.1660, norm(y): 1.0000, norm:4.5965, tok/sec: 104290.56, flops:40.63, batch-reuse:1
@ 1272 train 6.3209 , allloss: 6.7539, dt: 1228.71ms, fracRes: 0.0223, norm(attn): 0.1807, norm(output): 0.1768, norm(x): 0.1653, norm(y): 1.0000, norm:5.1470, tok/sec: 106674.63, flops:41.56, batch-reuse:1
@ 1273 train 6.3850 , allloss: 6.7879, dt: 1222.96ms, fracRes: 0.0215, norm(attn): 0.1738, norm(output): 0.1768, norm(x): 0.1667, norm(y): 0.9999, norm:10.6067, tok/sec: 107176.30, flops:41.76, batch-reuse:1
@ 1274 train 6.3522 , allloss: 6.7650, dt: 1246.49ms, fracRes: 0.0238, norm(attn): 0.1836, norm(output): 0.1738, norm(x): 0.1646, norm(y): 1.0000, norm:6.3090, tok/sec: 105152.75, flops:40.97, batch-reuse:1
@ 1275 train 6.4409 , allloss: 6.8619, dt: 1229.34ms, fracRes: 0.0255, norm(attn): 0.1816, norm(output): 0.1748, norm(x): 0.1646, norm(y): 1.0002, norm:5.6126, tok/sec: 106619.99, flops:41.54, batch-reuse:1
@ 1276 train 6.2541 , allloss: 6.6825, dt: 1229.98ms, fracRes: 0.0230, norm(attn): 0.1768, norm(output): 0.1797, norm(x): 0.1674, norm(y): 1.0001, norm:4.9842, tok/sec: 106564.11, flops:41.52, batch-reuse:1
@ 1277 train 6.2496 , allloss: 6.6857, dt: 1220.56ms, fracRes: 0.0194, norm(attn): 0.1758, norm(output): 0.1797, norm(x): 0.1678, norm(y): 1.0000, norm:6.3003, tok/sec: 107386.60, flops:41.84, batch-reuse:1
@ 1278 train 6.3515 , allloss: 6.7730, dt: 1210.19ms, fracRes: 0.0161, norm(attn): 0.1729, norm(output): 0.1816, norm(x): 0.1693, norm(y): 0.9999, norm:5.9541, tok/sec: 108307.21, flops:42.20, batch-reuse:1
@ 1279 train 6.4084 , allloss: 6.8334, dt: 1214.04ms, fracRes: 0.0182, norm(attn): 0.1758, norm(output): 0.1816, norm(x): 0.1687, norm(y): 1.0000, norm:4.7254, tok/sec: 107963.87, flops:42.06, batch-reuse:1
@ 1280 train 6.2676 , allloss: 6.6777, dt: 1226.35ms, fracRes: 0.0211, norm(attn): 0.1729, norm(output): 0.1826, norm(x): 0.1700, norm(y): 0.9999, norm:5.7870, tok/sec: 106879.70, flops:41.64, batch-reuse:1
@ 1281 train 6.2692 , allloss: 6.6838, dt: 1185.09ms, fracRes: 0.0226, norm(attn): 0.1768, norm(output): 0.1816, norm(x): 0.1680, norm(y): 0.9998, norm:4.9327, tok/sec: 110600.59, flops:43.09, batch-reuse:1
@ 1282 train 6.2646 , allloss: 6.7074, dt: 1196.33ms, fracRes: 0.0159, norm(attn): 0.1768, norm(output): 0.1816, norm(x): 0.1674, norm(y): 0.9998, norm:5.7297, tok/sec: 109561.39, flops:42.69, batch-reuse:1
@ 1283 train 6.3106 , allloss: 6.7497, dt: 1251.34ms, fracRes: 0.0158, norm(attn): 0.1777, norm(output): 0.1816, norm(x): 0.1680, norm(y): 0.9998, norm:6.7269, tok/sec: 104745.48, flops:40.81, batch-reuse:1
@ 1284 train 6.2872 , allloss: 6.7113, dt: 1189.90ms, fracRes: 0.0150, norm(attn): 0.1748, norm(output): 0.1836, norm(x): 0.1700, norm(y): 0.9999, norm:8.3970, tok/sec: 110153.34, flops:42.92, batch-reuse:1
@ 1285 train 6.2367 , allloss: 6.6733, dt: 1202.48ms, fracRes: 0.0154, norm(attn): 0.1797, norm(output): 0.1816, norm(x): 0.1680, norm(y): 1.0000, norm:7.4941, tok/sec: 109001.41, flops:42.47, batch-reuse:1
@ 1286 train 6.3941 , allloss: 6.8131, dt: 1187.40ms, fracRes: 0.0161, norm(attn): 0.1797, norm(output): 0.1797, norm(x): 0.1672, norm(y): 1.0000, norm:4.9427, tok/sec: 110386.08, flops:43.01, batch-reuse:1
@ 1287 train 6.3481 , allloss: 6.7721, dt: 1203.45ms, fracRes: 0.0164, norm(attn): 0.1758, norm(output): 0.1816, norm(x): 0.1687, norm(y): 1.0000, norm:5.9760, tok/sec: 108913.20, flops:42.43, batch-reuse:1
@ 1288 train 6.3585 , allloss: 6.7936, dt: 1210.97ms, fracRes: 0.0157, norm(attn): 0.1758, norm(output): 0.1836, norm(x): 0.1709, norm(y): 1.0000, norm:8.2533, tok/sec: 108237.18, flops:42.17, batch-reuse:1
@ 1289 train 6.2386 , allloss: 6.6668, dt: 1199.51ms, fracRes: 0.0145, norm(attn): 0.1719, norm(output): 0.1836, norm(x): 0.1713, norm(y): 0.9999, norm:4.6766, tok/sec: 109271.60, flops:42.57, batch-reuse:1
@ 1290 train 6.2688 , allloss: 6.7297, dt: 1175.71ms, fracRes: 0.0146, norm(attn): 0.1768, norm(output): 0.1826, norm(x): 0.1703, norm(y): 0.9998, norm:9.2342, tok/sec: 111482.92, flops:43.43, batch-reuse:1
@ 1291 train 6.2965 , allloss: 6.7326, dt: 1217.30ms, fracRes: 0.0139, norm(attn): 0.1738, norm(output): 0.1846, norm(x): 0.1709, norm(y): 0.9998, norm:5.3459, tok/sec: 107673.94, flops:41.95, batch-reuse:1
@ 1292 train 6.3483 , allloss: 6.7569, dt: 1241.62ms, fracRes: 0.0156, norm(attn): 0.1738, norm(output): 0.1846, norm(x): 0.1716, norm(y): 1.0000, norm:10.6290, tok/sec: 105565.22, flops:41.13, batch-reuse:1
@ 1293 train 6.3237 , allloss: 6.7313, dt: 1254.12ms, fracRes: 0.0138, norm(attn): 0.1758, norm(output): 0.1836, norm(x): 0.1704, norm(y): 0.9999, norm:5.5784, tok/sec: 104513.31, flops:40.72, batch-reuse:1
@ 1294 train 6.2365 , allloss: 6.6749, dt: 1250.32ms, fracRes: 0.0125, norm(attn): 0.1729, norm(output): 0.1836, norm(x): 0.1711, norm(y): 0.9999, norm:6.2503, tok/sec: 104830.45, flops:40.84, batch-reuse:1
@ 1295 train 6.3746 , allloss: 6.8015, dt: 1257.32ms, fracRes: 0.0113, norm(attn): 0.1709, norm(output): 0.1855, norm(x): 0.1716, norm(y): 1.0000, norm:6.9552, tok/sec: 104247.06, flops:40.61, batch-reuse:1
@ 1296 train 6.3532 , allloss: 6.7722, dt: 1260.91ms, fracRes: 0.0119, norm(attn): 0.1709, norm(output): 0.1836, norm(x): 0.1704, norm(y): 1.0000, norm:6.0739, tok/sec: 103950.12, flops:40.50, batch-reuse:1
@ 1297 train 6.3855 , allloss: 6.8001, dt: 1243.49ms, fracRes: 0.0123, norm(attn): 0.1709, norm(output): 0.1846, norm(x): 0.1705, norm(y): 1.0000, norm:5.5913, tok/sec: 105406.86, flops:41.07, batch-reuse:1
@ 1298 train 6.4935 , allloss: 6.9129, dt: 1202.92ms, fracRes: 0.0115, norm(attn): 0.1689, norm(output): 0.1865, norm(x): 0.1726, norm(y): 1.0001, norm:7.0407, tok/sec: 108961.34, flops:42.45, batch-reuse:1
@ 1299 train 6.4747 , allloss: 6.8869, dt: 1192.14ms, fracRes: 0.0111, norm(attn): 0.1709, norm(output): 0.1865, norm(x): 0.1728, norm(y): 1.0000, norm:8.0667, tok/sec: 109946.74, flops:42.84, batch-reuse:1
@ 1300 train 6.4244 , allloss: 6.8269, dt: 1188.70ms, fracRes: 0.0124, norm(attn): 0.1768, norm(output): 0.1816, norm(x): 0.1692, norm(y): 1.0001, norm:6.2655, tok/sec: 110265.02, flops:42.96, batch-reuse:1
@ 1301 train 6.4835 , allloss: 6.8912, dt: 1207.00ms, fracRes: 0.0122, norm(attn): 0.1729, norm(output): 0.1836, norm(x): 0.1706, norm(y): 1.0001, norm:4.9319, tok/sec: 108593.03, flops:42.31, batch-reuse:1
@ 1302 train 6.4743 , allloss: 6.8773, dt: 1213.03ms, fracRes: 0.0134, norm(attn): 0.1689, norm(output): 0.1865, norm(x): 0.1736, norm(y): 1.0000, norm:5.9149, tok/sec: 108053.34, flops:42.10, batch-reuse:1
@ 1303 train 6.5192 , allloss: 6.9214, dt: 1190.73ms, fracRes: 0.0142, norm(attn): 0.1719, norm(output): 0.1865, norm(x): 0.1717, norm(y): 1.0001, norm:5.1776, tok/sec: 110076.96, flops:42.89, batch-reuse:1
@ 1304 train 6.4918 , allloss: 6.8657, dt: 1195.80ms, fracRes: 0.0145, norm(attn): 0.1670, norm(output): 0.1875, norm(x): 0.1742, norm(y): 1.0000, norm:11.2907, tok/sec: 109610.01, flops:42.70, batch-reuse:1
@ 1305 train 6.4763 , allloss: 6.8427, dt: 1226.31ms, fracRes: 0.0206, norm(attn): 0.1729, norm(output): 0.1855, norm(x): 0.1715, norm(y): 1.0002, norm:7.7951, tok/sec: 106883.33, flops:41.64, batch-reuse:1
@ 1306 train 6.4289 , allloss: 6.8048, dt: 1206.84ms, fracRes: 0.0196, norm(attn): 0.1729, norm(output): 0.1836, norm(x): 0.1702, norm(y): 1.0003, norm:6.4041, tok/sec: 108607.41, flops:42.31, batch-reuse:1
@ 1307 train 6.4992 , allloss: 6.8829, dt: 1235.24ms, fracRes: 0.0184, norm(attn): 0.1709, norm(output): 0.1836, norm(x): 0.1708, norm(y): 1.0003, norm:4.3054, tok/sec: 106110.62, flops:41.34, batch-reuse:1
@ 1308 train 6.4908 , allloss: 6.8774, dt: 1230.85ms, fracRes: 0.0157, norm(attn): 0.1699, norm(output): 0.1855, norm(x): 0.1717, norm(y): 1.0003, norm:7.7476, tok/sec: 106488.85, flops:41.49, batch-reuse:1
@ 1309 train 6.4493 , allloss: 6.8429, dt: 1206.32ms, fracRes: 0.0141, norm(attn): 0.1660, norm(output): 0.1865, norm(x): 0.1727, norm(y): 1.0002, norm:8.6142, tok/sec: 108654.20, flops:42.33, batch-reuse:1
@ 1310 train 6.4506 , allloss: 6.8341, dt: 1207.14ms, fracRes: 0.0150, norm(attn): 0.1602, norm(output): 0.1875, norm(x): 0.1747, norm(y): 1.0002, norm:7.6601, tok/sec: 108580.94, flops:42.30, batch-reuse:1
@ 1311 train 6.5121 , allloss: 6.9061, dt: 1198.16ms, fracRes: 0.0164, norm(attn): 0.1660, norm(output): 0.1865, norm(x): 0.1728, norm(y): 1.0002, norm:4.6822, tok/sec: 109394.15, flops:42.62, batch-reuse:1
@ 1312 train 6.4391 , allloss: 6.8242, dt: 1201.49ms, fracRes: 0.0152, norm(attn): 0.1660, norm(output): 0.1865, norm(x): 0.1725, norm(y): 1.0001, norm:6.3185, tok/sec: 109091.05, flops:42.50, batch-reuse:1
@ 1313 train 6.5049 , allloss: 6.8757, dt: 1230.99ms, fracRes: 0.0206, norm(attn): 0.1670, norm(output): 0.1865, norm(x): 0.1726, norm(y): 1.0002, norm:10.9436, tok/sec: 106476.74, flops:41.48, batch-reuse:1
@ 1314 train 6.4594 , allloss: 6.8175, dt: 1234.37ms, fracRes: 0.0285, norm(attn): 0.1660, norm(output): 0.1865, norm(x): 0.1728, norm(y): 1.0004, norm:5.4811, tok/sec: 106184.99, flops:41.37, batch-reuse:1
@ 1315 train 6.4061 , allloss: 6.7660, dt: 1240.96ms, fracRes: 0.0272, norm(attn): 0.1699, norm(output): 0.1865, norm(x): 0.1729, norm(y): 1.0004, norm:3.7060, tok/sec: 105621.69, flops:41.15, batch-reuse:1
@ 1316 train 6.4157 , allloss: 6.7723, dt: 1202.33ms, fracRes: 0.0258, norm(attn): 0.1689, norm(output): 0.1865, norm(x): 0.1734, norm(y): 1.0003, norm:9.0410, tok/sec: 109014.94, flops:42.47, batch-reuse:1
@ 1317 train 6.5091 , allloss: 6.8655, dt: 1211.10ms, fracRes: 0.0266, norm(attn): 0.1680, norm(output): 0.1865, norm(x): 0.1731, norm(y): 1.0003, norm:7.0803, tok/sec: 108225.38, flops:42.16, batch-reuse:1
@ 1318 train 6.3671 , allloss: 6.7372, dt: 1214.52ms, fracRes: 0.0268, norm(attn): 0.1670, norm(output): 0.1865, norm(x): 0.1741, norm(y): 1.0003, norm:5.3418, tok/sec: 107920.61, flops:42.05, batch-reuse:1
@ 1319 train 6.4591 , allloss: 6.8502, dt: 1229.62ms, fracRes: 0.0198, norm(attn): 0.1660, norm(output): 0.1875, norm(x): 0.1747, norm(y): 1.0002, norm:4.9971, tok/sec: 106595.64, flops:41.53, batch-reuse:1
@ 1320 train 6.4708 , allloss: 6.8615, dt: 1246.55ms, fracRes: 0.0200, norm(attn): 0.1650, norm(output): 0.1885, norm(x): 0.1773, norm(y): 1.0001, norm:6.6614, tok/sec: 105147.52, flops:40.97, batch-reuse:1
@ 1321 train 6.4482 , allloss: 6.8320, dt: 1219.96ms, fracRes: 0.0244, norm(attn): 0.1670, norm(output): 0.1875, norm(x): 0.1752, norm(y): 1.0002, norm:7.4273, tok/sec: 107439.34, flops:41.86, batch-reuse:1
@ 1322 train 6.4282 , allloss: 6.8088, dt: 1221.18ms, fracRes: 0.0287, norm(attn): 0.1719, norm(output): 0.1865, norm(x): 0.1728, norm(y): 1.0002, norm:5.4712, tok/sec: 107332.67, flops:41.82, batch-reuse:1
@ 1323 train 6.4269 , allloss: 6.7974, dt: 1207.45ms, fracRes: 0.0335, norm(attn): 0.1719, norm(output): 0.1875, norm(x): 0.1732, norm(y): 1.0002, norm:3.8480, tok/sec: 108552.76, flops:42.29, batch-reuse:1
@ 1324 train 6.4929 , allloss: 6.8510, dt: 1202.88ms, fracRes: 0.0320, norm(attn): 0.1689, norm(output): 0.1885, norm(x): 0.1753, norm(y): 1.0002, norm:6.4084, tok/sec: 108965.25, flops:42.45, batch-reuse:1
@ 1325 train 6.4053 , allloss: 6.7666, dt: 1226.22ms, fracRes: 0.0299, norm(attn): 0.1709, norm(output): 0.1875, norm(x): 0.1744, norm(y): 1.0001, norm:6.7628, tok/sec: 106891.11, flops:41.64, batch-reuse:1
@ 1326 train 6.3685 , allloss: 6.7280, dt: 1216.20ms, fracRes: 0.0309, norm(attn): 0.1738, norm(output): 0.1875, norm(x): 0.1751, norm(y): 1.0001, norm:7.9378, tok/sec: 107772.16, flops:41.99, batch-reuse:1
@ 1327 train 6.4744 , allloss: 6.8256, dt: 1221.09ms, fracRes: 0.0318, norm(attn): 0.1748, norm(output): 0.1875, norm(x): 0.1750, norm(y): 1.0002, norm:4.9662, tok/sec: 107340.28, flops:41.82, batch-reuse:1
@ 1328 train 6.4399 , allloss: 6.8021, dt: 1235.69ms, fracRes: 0.0312, norm(attn): 0.1719, norm(output): 0.1865, norm(x): 0.1730, norm(y): 1.0002, norm:11.0495, tok/sec: 106072.25, flops:41.33, batch-reuse:1
@ 1329 train 6.4381 , allloss: 6.8003, dt: 1223.76ms, fracRes: 0.0335, norm(attn): 0.1689, norm(output): 0.1875, norm(x): 0.1747, norm(y): 1.0001, norm:8.0987, tok/sec: 107105.96, flops:41.73, batch-reuse:1
@ 1330 train 6.4969 , allloss: 6.8543, dt: 1199.94ms, fracRes: 0.0386, norm(attn): 0.1689, norm(output): 0.1875, norm(x): 0.1749, norm(y): 1.0001, norm:5.8955, tok/sec: 109232.26, flops:42.56, batch-reuse:1
@ 1331 train 6.5046 , allloss: 6.8498, dt: 1211.38ms, fracRes: 0.0386, norm(attn): 0.1719, norm(output): 0.1865, norm(x): 0.1745, norm(y): 1.0003, norm:13.4481, tok/sec: 108200.29, flops:42.15, batch-reuse:1
@ 1332 train 6.4459 , allloss: 6.7923, dt: 1215.28ms, fracRes: 0.0369, norm(attn): 0.1719, norm(output): 0.1875, norm(x): 0.1739, norm(y): 1.0003, norm:7.4253, tok/sec: 107853.35, flops:42.02, batch-reuse:1
@ 1333 train 6.4033 , allloss: 6.7592, dt: 1199.89ms, fracRes: 0.0399, norm(attn): 0.1719, norm(output): 0.1875, norm(x): 0.1758, norm(y): 1.0002, norm:7.2769, tok/sec: 109236.73, flops:42.56, batch-reuse:1
@ 1334 train 6.4158 , allloss: 6.7793, dt: 1213.74ms, fracRes: 0.0379, norm(attn): 0.1709, norm(output): 0.1875, norm(x): 0.1751, norm(y): 1.0001, norm:5.3311, tok/sec: 107989.79, flops:42.07, batch-reuse:1
@ 1335 train 6.4564 , allloss: 6.8249, dt: 1215.08ms, fracRes: 0.0346, norm(attn): 0.1670, norm(output): 0.1865, norm(x): 0.1734, norm(y): 1.0001, norm:7.9905, tok/sec: 107870.87, flops:42.03, batch-reuse:1
@ 1336 train 6.5055 , allloss: 6.8654, dt: 1200.19ms, fracRes: 0.0361, norm(attn): 0.1709, norm(output): 0.1875, norm(x): 0.1734, norm(y): 1.0001, norm:5.2496, tok/sec: 109209.63, flops:42.55, batch-reuse:1
@ 1337 train 6.4799 , allloss: 6.8210, dt: 1213.69ms, fracRes: 0.0411, norm(attn): 0.1709, norm(output): 0.1875, norm(x): 0.1741, norm(y): 1.0000, norm:7.6075, tok/sec: 107995.07, flops:42.07, batch-reuse:1
@ 1338 train 6.4336 , allloss: 6.7819, dt: 1243.92ms, fracRes: 0.0422, norm(attn): 0.1719, norm(output): 0.1865, norm(x): 0.1734, norm(y): 1.0002, norm:4.9064, tok/sec: 105370.07, flops:41.05, batch-reuse:1
@ 1339 train 6.5059 , allloss: 6.8534, dt: 1240.14ms, fracRes: 0.0456, norm(attn): 0.1719, norm(output): 0.1875, norm(x): 0.1739, norm(y): 1.0003, norm:8.4022, tok/sec: 105691.44, flops:41.18, batch-reuse:1
@ 1340 train 6.4139 , allloss: 6.7598, dt: 1211.86ms, fracRes: 0.0483, norm(attn): 0.1729, norm(output): 0.1865, norm(x): 0.1731, norm(y): 1.0001, norm:6.0241, tok/sec: 108157.54, flops:42.14, batch-reuse:1
@ 1341 train 6.4152 , allloss: 6.7666, dt: 1211.22ms, fracRes: 0.0467, norm(attn): 0.1738, norm(output): 0.1875, norm(x): 0.1742, norm(y): 1.0000, norm:3.8147, tok/sec: 108214.60, flops:42.16, batch-reuse:1
@ 1342 train 6.5370 , allloss: 6.8903, dt: 1220.20ms, fracRes: 0.0399, norm(attn): 0.1709, norm(output): 0.1875, norm(x): 0.1749, norm(y): 1.0000, norm:6.4477, tok/sec: 107418.83, flops:41.85, batch-reuse:1
@ 1343 train 6.3731 , allloss: 6.7409, dt: 1246.89ms, fracRes: 0.0405, norm(attn): 0.1719, norm(output): 0.1865, norm(x): 0.1716, norm(y): 1.0000, norm:5.3410, tok/sec: 105119.45, flops:40.95, batch-reuse:1
@ 1344 train 6.3900 , allloss: 6.7525, dt: 1246.65ms, fracRes: 0.0409, norm(attn): 0.1729, norm(output): 0.1865, norm(x): 0.1717, norm(y): 1.0000, norm:5.0660, tok/sec: 105139.70, flops:40.96, batch-reuse:1
@ 1345 train 6.2869 , allloss: 6.6355, dt: 1255.07ms, fracRes: 0.0435, norm(attn): 0.1709, norm(output): 0.1885, norm(x): 0.1758, norm(y): 1.0000, norm:6.5107, tok/sec: 104434.14, flops:40.69, batch-reuse:1
@ 1346 train 6.3833 , allloss: 6.7290, dt: 1203.40ms, fracRes: 0.0485, norm(attn): 0.1729, norm(output): 0.1885, norm(x): 0.1757, norm(y): 1.0001, norm:4.0290, tok/sec: 108918.14, flops:42.43, batch-reuse:1
@ 1347 train 6.3462 , allloss: 6.6910, dt: 1213.12ms, fracRes: 0.0432, norm(attn): 0.1738, norm(output): 0.1875, norm(x): 0.1740, norm(y): 1.0001, norm:4.6126, tok/sec: 108045.63, flops:42.09, batch-reuse:1
@ 1348 train 6.4040 , allloss: 6.7412, dt: 1242.09ms, fracRes: 0.0411, norm(attn): 0.1738, norm(output): 0.1885, norm(x): 0.1764, norm(y): 1.0001, norm:6.3753, tok/sec: 105525.65, flops:41.11, batch-reuse:1
@ 1349 train 6.3983 , allloss: 6.7433, dt: 1195.60ms, fracRes: 0.0431, norm(attn): 0.1738, norm(output): 0.1885, norm(x): 0.1763, norm(y): 1.0001, norm:4.7993, tok/sec: 109628.37, flops:42.71, batch-reuse:1
@ 1350 train 6.3658 , allloss: 6.7223, dt: 1204.38ms, fracRes: 0.0396, norm(attn): 0.1777, norm(output): 0.1875, norm(x): 0.1734, norm(y): 1.0001, norm:4.2671, tok/sec: 108829.16, flops:42.40, batch-reuse:1
@ 1351 train 6.4572 , allloss: 6.8102, dt: 1221.79ms, fracRes: 0.0386, norm(attn): 0.1777, norm(output): 0.1865, norm(x): 0.1737, norm(y): 1.0000, norm:5.0144, tok/sec: 107278.74, flops:41.80, batch-reuse:1
@ 1352 train 6.4406 , allloss: 6.7914, dt: 1233.73ms, fracRes: 0.0445, norm(attn): 0.1738, norm(output): 0.1885, norm(x): 0.1761, norm(y): 1.0001, norm:4.3466, tok/sec: 106240.13, flops:41.39, batch-reuse:1
@ 1353 train 6.4490 , allloss: 6.7996, dt: 1240.56ms, fracRes: 0.0434, norm(attn): 0.1719, norm(output): 0.1885, norm(x): 0.1764, norm(y): 1.0001, norm:7.4596, tok/sec: 105655.34, flops:41.16, batch-reuse:1
@ 1354 train 6.4363 , allloss: 6.7848, dt: 1232.23ms, fracRes: 0.0400, norm(attn): 0.1729, norm(output): 0.1885, norm(x): 0.1765, norm(y): 1.0001, norm:4.8444, tok/sec: 106369.96, flops:41.44, batch-reuse:1
@ 1355 train 6.3509 , allloss: 6.6975, dt: 1191.13ms, fracRes: 0.0368, norm(attn): 0.1758, norm(output): 0.1895, norm(x): 0.1773, norm(y): 1.0000, norm:7.3016, tok/sec: 110039.77, flops:42.87, batch-reuse:1
@ 1356 train 6.4840 , allloss: 6.8413, dt: 1199.98ms, fracRes: 0.0395, norm(attn): 0.1777, norm(output): 0.1885, norm(x): 0.1764, norm(y): 1.0001, norm:6.0715, tok/sec: 109228.09, flops:42.56, batch-reuse:1
@ 1357 train 6.3911 , allloss: 6.7483, dt: 1199.40ms, fracRes: 0.0389, norm(attn): 0.1719, norm(output): 0.1885, norm(x): 0.1751, norm(y): 1.0000, norm:6.5328, tok/sec: 109281.46, flops:42.58, batch-reuse:1
@ 1358 train 6.3828 , allloss: 6.7416, dt: 1207.11ms, fracRes: 0.0387, norm(attn): 0.1719, norm(output): 0.1875, norm(x): 0.1732, norm(y): 0.9999, norm:5.1731, tok/sec: 108583.02, flops:42.30, batch-reuse:1
@ 1359 train 6.3597 , allloss: 6.7090, dt: 1212.13ms, fracRes: 0.0397, norm(attn): 0.1758, norm(output): 0.1846, norm(x): 0.1711, norm(y): 1.0000, norm:6.5242, tok/sec: 108133.31, flops:42.13, batch-reuse:1
@ 1360 train 6.3161 , allloss: 6.6551, dt: 1227.31ms, fracRes: 0.0359, norm(attn): 0.1777, norm(output): 0.1846, norm(x): 0.1708, norm(y): 1.0000, norm:4.6743, tok/sec: 106795.96, flops:41.61, batch-reuse:1
@ 1361 train 6.4149 , allloss: 6.7545, dt: 1209.96ms, fracRes: 0.0405, norm(attn): 0.1758, norm(output): 0.1875, norm(x): 0.1729, norm(y): 1.0000, norm:6.3764, tok/sec: 108327.29, flops:42.20, batch-reuse:1
@ 1362 train 6.4759 , allloss: 6.8273, dt: 1241.68ms, fracRes: 0.0415, norm(attn): 0.1738, norm(output): 0.1865, norm(x): 0.1728, norm(y): 1.0000, norm:3.8698, tok/sec: 105560.38, flops:41.13, batch-reuse:1
@ 1363 train 6.3490 , allloss: 6.7065, dt: 1226.95ms, fracRes: 0.0334, norm(attn): 0.1719, norm(output): 0.1865, norm(x): 0.1742, norm(y): 0.9999, norm:5.9862, tok/sec: 106827.86, flops:41.62, batch-reuse:1
@ 1364 train 6.3393 , allloss: 6.6945, dt: 1196.02ms, fracRes: 0.0303, norm(attn): 0.1719, norm(output): 0.1895, norm(x): 0.1773, norm(y): 0.9999, norm:6.1583, tok/sec: 109590.17, flops:42.70, batch-reuse:1
@ 1365 train 6.4585 , allloss: 6.8070, dt: 1221.16ms, fracRes: 0.0321, norm(attn): 0.1719, norm(output): 0.1895, norm(x): 0.1778, norm(y): 0.9998, norm:5.5285, tok/sec: 107333.89, flops:41.82, batch-reuse:1
@ 1366 train 6.4005 , allloss: 6.7671, dt: 1239.32ms, fracRes: 0.0305, norm(attn): 0.1748, norm(output): 0.1875, norm(x): 0.1742, norm(y): 0.9998, norm:3.9387, tok/sec: 105761.02, flops:41.20, batch-reuse:1
@ 1367 train 6.3762 , allloss: 6.7340, dt: 1209.42ms, fracRes: 0.0305, norm(attn): 0.1777, norm(output): 0.1865, norm(x): 0.1735, norm(y): 0.9999, norm:5.1552, tok/sec: 108376.28, flops:42.22, batch-reuse:1
@ 1368 train 6.4780 , allloss: 6.8203, dt: 1221.01ms, fracRes: 0.0321, norm(attn): 0.1768, norm(output): 0.1875, norm(x): 0.1745, norm(y): 0.9999, norm:7.8767, tok/sec: 107347.62, flops:41.82, batch-reuse:1
@ 1369 train 6.4183 , allloss: 6.7614, dt: 1214.54ms, fracRes: 0.0344, norm(attn): 0.1758, norm(output): 0.1875, norm(x): 0.1744, norm(y): 0.9998, norm:4.9133, tok/sec: 107919.00, flops:42.05, batch-reuse:1
@ 1370 train 6.3453 , allloss: 6.7017, dt: 1213.49ms, fracRes: 0.0345, norm(attn): 0.1777, norm(output): 0.1865, norm(x): 0.1732, norm(y): 1.0000, norm:4.8955, tok/sec: 108012.30, flops:42.08, batch-reuse:1
@ 1371 train 6.3819 , allloss: 6.7428, dt: 1214.66ms, fracRes: 0.0297, norm(attn): 0.1758, norm(output): 0.1855, norm(x): 0.1712, norm(y): 1.0000, norm:6.2641, tok/sec: 107908.05, flops:42.04, batch-reuse:1
@ 1372 train 6.3365 , allloss: 6.6892, dt: 1197.15ms, fracRes: 0.0310, norm(attn): 0.1748, norm(output): 0.1865, norm(x): 0.1738, norm(y): 1.0000, norm:4.2830, tok/sec: 109486.96, flops:42.66, batch-reuse:1
@ 1373 train 6.3173 , allloss: 6.6655, dt: 1199.40ms, fracRes: 0.0318, norm(attn): 0.1738, norm(output): 0.1895, norm(x): 0.1770, norm(y): 1.0000, norm:5.8329, tok/sec: 109281.51, flops:42.58, batch-reuse:1
@ 1374 train 6.3334 , allloss: 6.6886, dt: 1184.63ms, fracRes: 0.0318, norm(attn): 0.1738, norm(output): 0.1875, norm(x): 0.1738, norm(y): 0.9999, norm:3.4331, tok/sec: 110643.64, flops:43.11, batch-reuse:1
@ 1375 train 6.3050 , allloss: 6.6931, dt: 1211.94ms, fracRes: 0.0275, norm(attn): 0.1758, norm(output): 0.1836, norm(x): 0.1700, norm(y): 0.9999, norm:4.9714, tok/sec: 108150.29, flops:42.14, batch-reuse:1
@ 1376 train 6.3357 , allloss: 6.7283, dt: 1199.32ms, fracRes: 0.0275, norm(attn): 0.1777, norm(output): 0.1816, norm(x): 0.1693, norm(y): 0.9998, norm:6.8715, tok/sec: 109288.35, flops:42.58, batch-reuse:1
@ 1377 train 6.3201 , allloss: 6.6869, dt: 1224.80ms, fracRes: 0.0317, norm(attn): 0.1719, norm(output): 0.1865, norm(x): 0.1732, norm(y): 0.9999, norm:6.3300, tok/sec: 107015.14, flops:41.69, batch-reuse:1
@ 1378 train 6.4699 , allloss: 6.8179, dt: 1228.09ms, fracRes: 0.0314, norm(attn): 0.1719, norm(output): 0.1885, norm(x): 0.1760, norm(y): 0.9999, norm:5.3106, tok/sec: 106728.00, flops:41.58, batch-reuse:1
@ 1379 train 6.4299 , allloss: 6.7906, dt: 1195.35ms, fracRes: 0.0254, norm(attn): 0.1738, norm(output): 0.1875, norm(x): 0.1745, norm(y): 0.9999, norm:6.1371, tok/sec: 109651.94, flops:42.72, batch-reuse:1
@ 1380 train 6.2354 , allloss: 6.6216, dt: 1219.35ms, fracRes: 0.0219, norm(attn): 0.1729, norm(output): 0.1865, norm(x): 0.1738, norm(y): 0.9999, norm:5.3499, tok/sec: 107493.39, flops:41.88, batch-reuse:1
@ 1381 train 6.3193 , allloss: 6.7115, dt: 1213.87ms, fracRes: 0.0209, norm(attn): 0.1709, norm(output): 0.1875, norm(x): 0.1747, norm(y): 0.9999, norm:4.0707, tok/sec: 107978.25, flops:42.07, batch-reuse:1
@ 1382 train 6.3485 , allloss: 6.7173, dt: 1214.24ms, fracRes: 0.0216, norm(attn): 0.1689, norm(output): 0.1875, norm(x): 0.1753, norm(y): 0.9998, norm:6.6929, tok/sec: 107946.04, flops:42.06, batch-reuse:1
@ 1383 train 6.4175 , allloss: 6.7837, dt: 1200.28ms, fracRes: 0.0258, norm(attn): 0.1777, norm(output): 0.1865, norm(x): 0.1725, norm(y): 1.0000, norm:6.3209, tok/sec: 109201.32, flops:42.54, batch-reuse:1
@ 1384 train 6.3177 , allloss: 6.6970, dt: 1226.91ms, fracRes: 0.0236, norm(attn): 0.1738, norm(output): 0.1865, norm(x): 0.1733, norm(y): 1.0000, norm:7.6523, tok/sec: 106830.70, flops:41.62, batch-reuse:1
@ 1385 train 6.4106 , allloss: 6.8057, dt: 1237.28ms, fracRes: 0.0203, norm(attn): 0.1709, norm(output): 0.1875, norm(x): 0.1753, norm(y): 0.9998, norm:6.2738, tok/sec: 105935.43, flops:41.27, batch-reuse:1
@ 1386 train 6.3392 , allloss: 6.7188, dt: 1244.29ms, fracRes: 0.0214, norm(attn): 0.1719, norm(output): 0.1875, norm(x): 0.1742, norm(y): 0.9999, norm:4.8464, tok/sec: 105339.20, flops:41.04, batch-reuse:1
@ 1387 train 6.3398 , allloss: 6.7043, dt: 1222.91ms, fracRes: 0.0239, norm(attn): 0.1729, norm(output): 0.1875, norm(x): 0.1741, norm(y): 1.0001, norm:9.5702, tok/sec: 107180.42, flops:41.76, batch-reuse:1
@ 1388 train 6.3876 , allloss: 6.7429, dt: 1204.97ms, fracRes: 0.0235, norm(attn): 0.1729, norm(output): 0.1875, norm(x): 0.1744, norm(y): 1.0001, norm:5.0055, tok/sec: 108776.21, flops:42.38, batch-reuse:1
@ 1389 train 6.2834 , allloss: 6.6501, dt: 1192.40ms, fracRes: 0.0192, norm(attn): 0.1729, norm(output): 0.1885, norm(x): 0.1758, norm(y): 1.0000, norm:9.0641, tok/sec: 109922.58, flops:42.83, batch-reuse:1
@ 1390 train 6.5042 , allloss: 6.8895, dt: 1221.38ms, fracRes: 0.0187, norm(attn): 0.1738, norm(output): 0.1865, norm(x): 0.1721, norm(y): 0.9999, norm:6.5443, tok/sec: 107314.40, flops:41.81, batch-reuse:1
@ 1391 train 6.4462 , allloss: 6.8509, dt: 1221.69ms, fracRes: 0.0190, norm(attn): 0.1758, norm(output): 0.1816, norm(x): 0.1682, norm(y): 0.9999, norm:13.7639, tok/sec: 107287.24, flops:41.80, batch-reuse:1
@ 1392 train 6.3306 , allloss: 6.7206, dt: 1245.42ms, fracRes: 0.0236, norm(attn): 0.1729, norm(output): 0.1777, norm(x): 0.1671, norm(y): 1.0000, norm:7.3968, tok/sec: 105243.58, flops:41.00, batch-reuse:1
@ 1393 train 6.2985 , allloss: 6.6686, dt: 1222.30ms, fracRes: 0.0301, norm(attn): 0.1719, norm(output): 0.1816, norm(x): 0.1689, norm(y): 1.0000, norm:8.7374, tok/sec: 107234.21, flops:41.78, batch-reuse:1
@ 1394 train 6.2985 , allloss: 6.6654, dt: 1236.09ms, fracRes: 0.0290, norm(attn): 0.1641, norm(output): 0.1865, norm(x): 0.1714, norm(y): 0.9999, norm:6.4037, tok/sec: 106037.45, flops:41.31, batch-reuse:1
@ 1395 train 6.2834 , allloss: 6.6607, dt: 1215.24ms, fracRes: 0.0198, norm(attn): 0.1592, norm(output): 0.1865, norm(x): 0.1715, norm(y): 0.9999, norm:5.1044, tok/sec: 107857.26, flops:42.02, batch-reuse:1
@ 1396 train 6.3038 , allloss: 6.6856, dt: 1216.35ms, fracRes: 0.0185, norm(attn): 0.1660, norm(output): 0.1836, norm(x): 0.1701, norm(y): 1.0001, norm:6.0003, tok/sec: 107758.20, flops:41.98, batch-reuse:1
@ 1397 train 6.3477 , allloss: 6.7274, dt: 1247.26ms, fracRes: 0.0189, norm(attn): 0.1670, norm(output): 0.1865, norm(x): 0.1714, norm(y): 1.0001, norm:4.0802, tok/sec: 105087.78, flops:40.94, batch-reuse:1
@ 1398 train 6.3362 , allloss: 6.7075, dt: 1250.65ms, fracRes: 0.0185, norm(attn): 0.1611, norm(output): 0.1875, norm(x): 0.1743, norm(y): 1.0000, norm:6.9024, tok/sec: 104802.85, flops:40.83, batch-reuse:1
@ 1399 train 6.2309 , allloss: 6.6013, dt: 1230.07ms, fracRes: 0.0217, norm(attn): 0.1680, norm(output): 0.1865, norm(x): 0.1730, norm(y): 1.0001, norm:3.7476, tok/sec: 106556.24, flops:41.51, batch-reuse:1
@ 1400 train 6.3779 , allloss: 6.7522, dt: 1197.45ms, fracRes: 0.0197, norm(attn): 0.1738, norm(output): 0.1826, norm(x): 0.1689, norm(y): 1.0001, norm:4.3884, tok/sec: 109459.19, flops:42.65, batch-reuse:1
@ 1401 train 6.2642 , allloss: 6.6273, dt: 1215.12ms, fracRes: 0.0217, norm(attn): 0.1709, norm(output): 0.1836, norm(x): 0.1712, norm(y): 1.0001, norm:3.9345, tok/sec: 107867.32, flops:42.03, batch-reuse:1
@ 1402 train 6.2462 , allloss: 6.6061, dt: 1226.33ms, fracRes: 0.0228, norm(attn): 0.1641, norm(output): 0.1875, norm(x): 0.1738, norm(y): 1.0001, norm:6.1695, tok/sec: 106881.23, flops:41.64, batch-reuse:1
@ 1403 train 6.3120 , allloss: 6.6817, dt: 1231.68ms, fracRes: 0.0205, norm(attn): 0.1631, norm(output): 0.1865, norm(x): 0.1727, norm(y): 1.0001, norm:4.6339, tok/sec: 106417.40, flops:41.46, batch-reuse:1
@ 1404 train 6.2958 , allloss: 6.6652, dt: 1231.80ms, fracRes: 0.0210, norm(attn): 0.1729, norm(output): 0.1846, norm(x): 0.1704, norm(y): 1.0001, norm:5.8523, tok/sec: 106407.02, flops:41.46, batch-reuse:1
@ 1405 train 6.3452 , allloss: 6.7209, dt: 1200.21ms, fracRes: 0.0224, norm(attn): 0.1777, norm(output): 0.1816, norm(x): 0.1684, norm(y): 1.0000, norm:5.7669, tok/sec: 109208.00, flops:42.55, batch-reuse:1
@ 1406 train 6.3909 , allloss: 6.7837, dt: 1196.69ms, fracRes: 0.0214, norm(attn): 0.1758, norm(output): 0.1807, norm(x): 0.1681, norm(y): 0.9999, norm:6.4510, tok/sec: 109528.43, flops:42.67, batch-reuse:1
@ 1407 train 6.2929 , allloss: 6.6916, dt: 1205.53ms, fracRes: 0.0210, norm(attn): 0.1738, norm(output): 0.1816, norm(x): 0.1681, norm(y): 0.9999, norm:4.8576, tok/sec: 108725.59, flops:42.36, batch-reuse:1
@ 1408 train 6.2995 , allloss: 6.6895, dt: 1197.73ms, fracRes: 0.0238, norm(attn): 0.1768, norm(output): 0.1816, norm(x): 0.1686, norm(y): 1.0000, norm:4.6785, tok/sec: 109433.24, flops:42.64, batch-reuse:1
@ 1409 train 6.3088 , allloss: 6.6999, dt: 1234.51ms, fracRes: 0.0181, norm(attn): 0.1865, norm(output): 0.1768, norm(x): 0.1667, norm(y): 1.0000, norm:8.9520, tok/sec: 106173.63, flops:41.37, batch-reuse:1
@ 1410 train 6.2445 , allloss: 6.6183, dt: 1183.47ms, fracRes: 0.0206, norm(attn): 0.1875, norm(output): 0.1797, norm(x): 0.1674, norm(y): 1.0001, norm:5.4147, tok/sec: 110752.52, flops:43.15, batch-reuse:1
@ 1411 train 6.3087 , allloss: 6.6675, dt: 1215.80ms, fracRes: 0.0238, norm(attn): 0.1826, norm(output): 0.1836, norm(x): 0.1716, norm(y): 0.9999, norm:7.6582, tok/sec: 107806.80, flops:42.00, batch-reuse:1
@ 1412 train 6.2878 , allloss: 6.6614, dt: 1235.74ms, fracRes: 0.0183, norm(attn): 0.1865, norm(output): 0.1797, norm(x): 0.1680, norm(y): 0.9999, norm:5.3192, tok/sec: 106067.40, flops:41.32, batch-reuse:1
@ 1413 train 6.2643 , allloss: 6.6702, dt: 1209.63ms, fracRes: 0.0205, norm(attn): 0.1924, norm(output): 0.1758, norm(x): 0.1645, norm(y): 1.0000, norm:8.1303, tok/sec: 108357.10, flops:42.22, batch-reuse:1
@ 1414 train 6.3004 , allloss: 6.7147, dt: 1243.12ms, fracRes: 0.0232, norm(attn): 0.2002, norm(output): 0.1748, norm(x): 0.1634, norm(y): 1.0000, norm:6.6307, tok/sec: 105438.12, flops:41.08, batch-reuse:1
@ 1415 train 6.2981 , allloss: 6.6975, dt: 1204.81ms, fracRes: 0.0220, norm(attn): 0.2002, norm(output): 0.1729, norm(x): 0.1631, norm(y): 0.9998, norm:4.7728, tok/sec: 108790.52, flops:42.38, batch-reuse:1
@ 1416 train 6.3865 , allloss: 6.7675, dt: 1194.12ms, fracRes: 0.0221, norm(attn): 0.1904, norm(output): 0.1768, norm(x): 0.1657, norm(y): 0.9999, norm:6.4369, tok/sec: 109764.52, flops:42.76, batch-reuse:1
@ 1417 train 6.2806 , allloss: 6.6559, dt: 1209.18ms, fracRes: 0.0188, norm(attn): 0.1865, norm(output): 0.1777, norm(x): 0.1666, norm(y): 0.9998, norm:5.7992, tok/sec: 108397.67, flops:42.23, batch-reuse:1
@ 1418 train 6.2968 , allloss: 6.6765, dt: 1209.79ms, fracRes: 0.0312, norm(attn): 0.1895, norm(output): 0.1768, norm(x): 0.1663, norm(y): 1.0000, norm:5.0127, tok/sec: 108342.81, flops:42.21, batch-reuse:1
@ 1419 train 6.3524 , allloss: 6.7429, dt: 1227.28ms, fracRes: 0.0302, norm(attn): 0.1895, norm(output): 0.1787, norm(x): 0.1671, norm(y): 1.0000, norm:7.4213, tok/sec: 106798.95, flops:41.61, batch-reuse:1
@ 1420 train 6.3966 , allloss: 6.7905, dt: 1214.60ms, fracRes: 0.0259, norm(attn): 0.1875, norm(output): 0.1807, norm(x): 0.1677, norm(y): 1.0000, norm:8.7677, tok/sec: 107913.96, flops:42.04, batch-reuse:1
@ 1421 train 6.3345 , allloss: 6.7363, dt: 1190.43ms, fracRes: 0.0249, norm(attn): 0.1934, norm(output): 0.1768, norm(x): 0.1665, norm(y): 0.9999, norm:5.4874, tok/sec: 110104.47, flops:42.90, batch-reuse:1
@ 1422 train 6.2540 , allloss: 6.6516, dt: 1197.29ms, fracRes: 0.0257, norm(attn): 0.1973, norm(output): 0.1748, norm(x): 0.1647, norm(y): 0.9999, norm:5.2056, tok/sec: 109473.64, flops:42.65, batch-reuse:1
@ 1423 train 6.3176 , allloss: 6.7047, dt: 1211.80ms, fracRes: 0.0201, norm(attn): 0.1904, norm(output): 0.1768, norm(x): 0.1658, norm(y): 0.9999, norm:5.5365, tok/sec: 108163.27, flops:42.14, batch-reuse:1
@ 1424 train 6.2904 , allloss: 6.6625, dt: 1201.75ms, fracRes: 0.0256, norm(attn): 0.1895, norm(output): 0.1768, norm(x): 0.1664, norm(y): 0.9998, norm:4.7554, tok/sec: 109067.37, flops:42.49, batch-reuse:1
@ 1425 train 6.2568 , allloss: 6.6453, dt: 1253.86ms, fracRes: 0.0259, norm(attn): 0.1875, norm(output): 0.1768, norm(x): 0.1668, norm(y): 0.9998, norm:5.0697, tok/sec: 104534.88, flops:40.73, batch-reuse:1
@ 1426 train 6.2144 , allloss: 6.6065, dt: 1208.65ms, fracRes: 0.0239, norm(attn): 0.1885, norm(output): 0.1768, norm(x): 0.1662, norm(y): 0.9998, norm:5.4417, tok/sec: 108445.27, flops:42.25, batch-reuse:1
@ 1427 train 6.2838 , allloss: 6.6724, dt: 1219.40ms, fracRes: 0.0271, norm(attn): 0.2031, norm(output): 0.1748, norm(x): 0.1637, norm(y): 0.9998, norm:4.3480, tok/sec: 107489.29, flops:41.88, batch-reuse:1
@ 1428 train 6.2402 , allloss: 6.6260, dt: 1201.23ms, fracRes: 0.0224, norm(attn): 0.2021, norm(output): 0.1729, norm(x): 0.1640, norm(y): 0.9998, norm:6.6818, tok/sec: 109114.82, flops:42.51, batch-reuse:1
@ 1429 train 6.3095 , allloss: 6.6955, dt: 1212.06ms, fracRes: 0.0219, norm(attn): 0.2021, norm(output): 0.1738, norm(x): 0.1636, norm(y): 0.9998, norm:8.8023, tok/sec: 108139.99, flops:42.13, batch-reuse:1
@ 1430 train 6.3203 , allloss: 6.7036, dt: 1216.92ms, fracRes: 0.0236, norm(attn): 0.1943, norm(output): 0.1768, norm(x): 0.1651, norm(y): 0.9998, norm:10.4476, tok/sec: 107708.14, flops:41.96, batch-reuse:1
@ 1431 train 6.2577 , allloss: 6.6421, dt: 1198.64ms, fracRes: 0.0262, norm(attn): 0.1885, norm(output): 0.1816, norm(x): 0.1680, norm(y): 0.9998, norm:4.2299, tok/sec: 109350.87, flops:42.60, batch-reuse:1
@ 1432 train 6.2052 , allloss: 6.5954, dt: 1218.20ms, fracRes: 0.0259, norm(attn): 0.1895, norm(output): 0.1768, norm(x): 0.1661, norm(y): 0.9997, norm:7.1279, tok/sec: 107594.60, flops:41.92, batch-reuse:1
@ 1433 train 6.3063 , allloss: 6.6965, dt: 1222.50ms, fracRes: 0.0295, norm(attn): 0.1953, norm(output): 0.1719, norm(x): 0.1621, norm(y): 0.9999, norm:6.1579, tok/sec: 107216.65, flops:41.77, batch-reuse:1
@ 1434 train 6.3462 , allloss: 6.7344, dt: 1194.64ms, fracRes: 0.0264, norm(attn): 0.1914, norm(output): 0.1729, norm(x): 0.1627, norm(y): 0.9998, norm:5.8658, tok/sec: 109717.18, flops:42.75, batch-reuse:1
@ 1435 train 6.2711 , allloss: 6.6438, dt: 1226.23ms, fracRes: 0.0304, norm(attn): 0.1885, norm(output): 0.1729, norm(x): 0.1634, norm(y): 0.9999, norm:4.6877, tok/sec: 106890.07, flops:41.64, batch-reuse:1
@ 1436 train 6.2438 , allloss: 6.6143, dt: 1205.39ms, fracRes: 0.0313, norm(attn): 0.1875, norm(output): 0.1729, norm(x): 0.1629, norm(y): 0.9999, norm:6.2046, tok/sec: 108737.99, flops:42.36, batch-reuse:1
@ 1437 train 6.2696 , allloss: 6.6412, dt: 1184.54ms, fracRes: 0.0309, norm(attn): 0.1914, norm(output): 0.1729, norm(x): 0.1626, norm(y): 0.9998, norm:6.1338, tok/sec: 110651.81, flops:43.11, batch-reuse:1
@ 1438 train 6.2362 , allloss: 6.6082, dt: 1240.60ms, fracRes: 0.0264, norm(attn): 0.1885, norm(output): 0.1729, norm(x): 0.1625, norm(y): 0.9997, norm:8.2050, tok/sec: 105652.14, flops:41.16, batch-reuse:1
@ 1439 train 6.2227 , allloss: 6.5993, dt: 1231.41ms, fracRes: 0.0297, norm(attn): 0.1875, norm(output): 0.1729, norm(x): 0.1629, norm(y): 1.0000, norm:4.5618, tok/sec: 106440.33, flops:41.47, batch-reuse:1
@ 1440 train 6.2628 , allloss: 6.6356, dt: 1229.69ms, fracRes: 0.0290, norm(attn): 0.1865, norm(output): 0.1729, norm(x): 0.1637, norm(y): 1.0000, norm:4.7377, tok/sec: 106589.05, flops:41.53, batch-reuse:1
@ 1441 train 6.2516 , allloss: 6.6161, dt: 1201.46ms, fracRes: 0.0268, norm(attn): 0.1875, norm(output): 0.1768, norm(x): 0.1652, norm(y): 0.9998, norm:7.9446, tok/sec: 109093.56, flops:42.50, batch-reuse:1
@ 1442 train 6.2531 , allloss: 6.6196, dt: 1192.83ms, fracRes: 0.0384, norm(attn): 0.1895, norm(output): 0.1729, norm(x): 0.1624, norm(y): 1.0000, norm:4.3929, tok/sec: 109883.21, flops:42.81, batch-reuse:1
@ 1443 train 6.1877 , allloss: 6.5582, dt: 1190.00ms, fracRes: 0.0356, norm(attn): 0.1875, norm(output): 0.1729, norm(x): 0.1613, norm(y): 1.0001, norm:5.8541, tok/sec: 110144.60, flops:42.91, batch-reuse:1
@ 1444 train 6.2181 , allloss: 6.5880, dt: 1225.06ms, fracRes: 0.0352, norm(attn): 0.1885, norm(output): 0.1719, norm(x): 0.1604, norm(y): 0.9998, norm:5.5893, tok/sec: 106992.23, flops:41.68, batch-reuse:1
@ 1445 train 6.3132 , allloss: 6.6818, dt: 1211.06ms, fracRes: 0.0326, norm(attn): 0.1904, norm(output): 0.1709, norm(x): 0.1583, norm(y): 0.9998, norm:8.0575, tok/sec: 108229.19, flops:42.17, batch-reuse:1
@ 1446 train 6.3029 , allloss: 6.6731, dt: 1201.38ms, fracRes: 0.0325, norm(attn): 0.1895, norm(output): 0.1719, norm(x): 0.1588, norm(y): 0.9999, norm:5.5754, tok/sec: 109101.48, flops:42.51, batch-reuse:1
@ 1447 train 6.2943 , allloss: 6.6496, dt: 1214.91ms, fracRes: 0.0354, norm(attn): 0.1934, norm(output): 0.1699, norm(x): 0.1566, norm(y): 1.0000, norm:8.1708, tok/sec: 107886.09, flops:42.03, batch-reuse:1
@ 1448 train 6.2448 , allloss: 6.5994, dt: 1209.64ms, fracRes: 0.0344, norm(attn): 0.1885, norm(output): 0.1729, norm(x): 0.1601, norm(y): 0.9999, norm:6.0766, tok/sec: 108356.01, flops:42.22, batch-reuse:1
@ 1449 train 6.3319 , allloss: 6.6973, dt: 1232.76ms, fracRes: 0.0324, norm(attn): 0.1846, norm(output): 0.1719, norm(x): 0.1601, norm(y): 0.9999, norm:4.2072, tok/sec: 106324.37, flops:41.42, batch-reuse:1
@ 1450 train 6.2979 , allloss: 6.6633, dt: 1223.03ms, fracRes: 0.0327, norm(attn): 0.1836, norm(output): 0.1719, norm(x): 0.1611, norm(y): 1.0000, norm:7.2520, tok/sec: 107169.99, flops:41.75, batch-reuse:1
@ 1451 train 6.3453 , allloss: 6.7049, dt: 1227.32ms, fracRes: 0.0390, norm(attn): 0.1855, norm(output): 0.1719, norm(x): 0.1607, norm(y): 1.0001, norm:7.3236, tok/sec: 106795.53, flops:41.61, batch-reuse:1
@ 1452 train 6.2313 , allloss: 6.5852, dt: 1251.17ms, fracRes: 0.0454, norm(attn): 0.1865, norm(output): 0.1719, norm(x): 0.1588, norm(y): 1.0001, norm:9.0644, tok/sec: 104759.39, flops:40.81, batch-reuse:1
@ 1453 train 6.2241 , allloss: 6.5748, dt: 1250.07ms, fracRes: 0.0462, norm(attn): 0.1875, norm(output): 0.1709, norm(x): 0.1586, norm(y): 1.0001, norm:5.5116, tok/sec: 104851.86, flops:40.85, batch-reuse:1
@ 1454 train 6.2534 , allloss: 6.5992, dt: 1212.84ms, fracRes: 0.0387, norm(attn): 0.1738, norm(output): 0.1748, norm(x): 0.1625, norm(y): 1.0001, norm:4.5370, tok/sec: 108070.60, flops:42.10, batch-reuse:1
@ 1455 train 6.1908 , allloss: 6.5449, dt: 1203.96ms, fracRes: 0.0393, norm(attn): 0.1855, norm(output): 0.1719, norm(x): 0.1595, norm(y): 1.0000, norm:5.5731, tok/sec: 108867.71, flops:42.41, batch-reuse:1
@ 1456 train 6.2859 , allloss: 6.6343, dt: 1220.05ms, fracRes: 0.0362, norm(attn): 0.1855, norm(output): 0.1729, norm(x): 0.1626, norm(y): 1.0000, norm:5.7862, tok/sec: 107431.91, flops:41.86, batch-reuse:1
@ 1457 train 6.2438 , allloss: 6.5935, dt: 1210.99ms, fracRes: 0.0361, norm(attn): 0.1865, norm(output): 0.1729, norm(x): 0.1611, norm(y): 1.0001, norm:8.0143, tok/sec: 108235.20, flops:42.17, batch-reuse:1
@ 1458 train 6.2903 , allloss: 6.6555, dt: 1203.02ms, fracRes: 0.0346, norm(attn): 0.1855, norm(output): 0.1729, norm(x): 0.1607, norm(y): 1.0000, norm:10.1004, tok/sec: 108952.27, flops:42.45, batch-reuse:1
@ 1459 train 6.2896 , allloss: 6.6559, dt: 1207.48ms, fracRes: 0.0373, norm(attn): 0.1729, norm(output): 0.1738, norm(x): 0.1627, norm(y): 1.0001, norm:4.0270, tok/sec: 108549.79, flops:42.29, batch-reuse:1
@ 1460 train 6.1958 , allloss: 6.5546, dt: 1211.82ms, fracRes: 0.0340, norm(attn): 0.1719, norm(output): 0.1729, norm(x): 0.1621, norm(y): 1.0000, norm:9.6050, tok/sec: 108161.31, flops:42.14, batch-reuse:1
@ 1461 train 6.1693 , allloss: 6.5209, dt: 1241.75ms, fracRes: 0.0367, norm(attn): 0.1768, norm(output): 0.1729, norm(x): 0.1622, norm(y): 1.0000, norm:7.2834, tok/sec: 105554.14, flops:41.12, batch-reuse:1
@ 1462 train 6.2285 , allloss: 6.5765, dt: 1240.15ms, fracRes: 0.0442, norm(attn): 0.1816, norm(output): 0.1729, norm(x): 0.1613, norm(y): 1.0001, norm:4.9591, tok/sec: 105690.50, flops:41.18, batch-reuse:1
@ 1463 train 6.2336 , allloss: 6.5998, dt: 1232.61ms, fracRes: 0.0442, norm(attn): 0.1875, norm(output): 0.1719, norm(x): 0.1592, norm(y): 1.0003, norm:7.7602, tok/sec: 106336.65, flops:41.43, batch-reuse:1
@ 1464 train 6.2419 , allloss: 6.6084, dt: 1190.31ms, fracRes: 0.0417, norm(attn): 0.1816, norm(output): 0.1758, norm(x): 0.1628, norm(y): 1.0002, norm:4.4962, tok/sec: 110115.96, flops:42.90, batch-reuse:1
@ 1465 train 6.2096 , allloss: 6.5539, dt: 1212.54ms, fracRes: 0.0350, norm(attn): 0.1777, norm(output): 0.1738, norm(x): 0.1646, norm(y): 1.0001, norm:8.5737, tok/sec: 108097.21, flops:42.11, batch-reuse:1
@ 1466 train 6.1852 , allloss: 6.5320, dt: 1206.25ms, fracRes: 0.0369, norm(attn): 0.1709, norm(output): 0.1816, norm(x): 0.1676, norm(y): 1.0001, norm:5.7243, tok/sec: 108660.71, flops:42.33, batch-reuse:1
@ 1467 train 6.2274 , allloss: 6.5874, dt: 1198.55ms, fracRes: 0.0406, norm(attn): 0.1729, norm(output): 0.1768, norm(x): 0.1646, norm(y): 1.0002, norm:5.1626, tok/sec: 109358.77, flops:42.61, batch-reuse:1
@ 1468 train 6.2599 , allloss: 6.6078, dt: 1220.14ms, fracRes: 0.0400, norm(attn): 0.1846, norm(output): 0.1738, norm(x): 0.1623, norm(y): 1.0001, norm:6.5485, tok/sec: 107423.49, flops:41.85, batch-reuse:1
@ 1469 train 6.3612 , allloss: 6.7144, dt: 1224.57ms, fracRes: 0.0433, norm(attn): 0.1768, norm(output): 0.1777, norm(x): 0.1648, norm(y): 1.0002, norm:8.4170, tok/sec: 107034.79, flops:41.70, batch-reuse:1
@ 1470 train 6.2062 , allloss: 6.5574, dt: 1224.93ms, fracRes: 0.0436, norm(attn): 0.1836, norm(output): 0.1738, norm(x): 0.1624, norm(y): 1.0002, norm:3.3045, tok/sec: 107003.72, flops:41.69, batch-reuse:1
@ 1471 train 6.1428 , allloss: 6.5047, dt: 1223.05ms, fracRes: 0.0415, norm(attn): 0.1836, norm(output): 0.1738, norm(x): 0.1624, norm(y): 1.0001, norm:4.9756, tok/sec: 107168.43, flops:41.75, batch-reuse:1
@ 1472 train 6.2301 , allloss: 6.5887, dt: 1253.70ms, fracRes: 0.0421, norm(attn): 0.1719, norm(output): 0.1777, norm(x): 0.1653, norm(y): 1.0001, norm:7.2429, tok/sec: 104548.00, flops:40.73, batch-reuse:1
@ 1473 train 6.2248 , allloss: 6.5663, dt: 1258.51ms, fracRes: 0.0488, norm(attn): 0.1738, norm(output): 0.1787, norm(x): 0.1656, norm(y): 1.0002, norm:5.2453, tok/sec: 104148.84, flops:40.58, batch-reuse:1
@ 1474 train 6.4207 , allloss: 6.7630, dt: 1256.10ms, fracRes: 0.0398, norm(attn): 0.1777, norm(output): 0.1797, norm(x): 0.1663, norm(y): 1.0002, norm:3.5675, tok/sec: 104348.09, flops:40.65, batch-reuse:1
@ 1475 train 6.2770 , allloss: 6.6220, dt: 1205.80ms, fracRes: 0.0397, norm(attn): 0.1719, norm(output): 0.1865, norm(x): 0.1715, norm(y): 1.0001, norm:6.5450, tok/sec: 108700.91, flops:42.35, batch-reuse:1
@ 1476 train 6.2210 , allloss: 6.5710, dt: 1212.84ms, fracRes: 0.0420, norm(attn): 0.1816, norm(output): 0.1826, norm(x): 0.1682, norm(y): 0.9999, norm:8.1749, tok/sec: 108069.90, flops:42.10, batch-reuse:1
@ 1477 train 6.2402 , allloss: 6.5897, dt: 1212.00ms, fracRes: 0.0464, norm(attn): 0.1865, norm(output): 0.1768, norm(x): 0.1638, norm(y): 1.0000, norm:5.5845, tok/sec: 108145.42, flops:42.13, batch-reuse:1
